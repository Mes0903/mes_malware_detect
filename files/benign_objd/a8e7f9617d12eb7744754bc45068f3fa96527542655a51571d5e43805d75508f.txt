
a8e7f9617d12eb7744754bc45068f3fa96527542655a51571d5e43805d75508f.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x67889]        # 0x140068890
   140001007:	mov    QWORD PTR [rcx],rax
   14000100a:	jmp    0x140033048
   14000100f:	int3   
   140001010:	mov    QWORD PTR [rsp+0x8],rbx
   140001015:	push   rdi
   140001016:	sub    rsp,0x20
   14000101a:	lea    rax,[rip+0x6786f]        # 0x140068890
   140001021:	mov    ebx,edx
   140001023:	mov    rdi,rcx
   140001026:	mov    QWORD PTR [rcx],rax
   140001029:	call   0x140033048
   14000102e:	test   bl,0x1
   140001031:	je     0x14000103b
   140001033:	mov    rcx,rdi
   140001036:	call   0x1400330c0
   14000103b:	mov    rax,rdi
   14000103e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001043:	add    rsp,0x20
   140001047:	pop    rdi
   140001048:	ret    
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	movzx  eax,BYTE PTR [rcx+0x60]
   140001054:	ret    
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	mov    QWORD PTR [rsp+0x8],rcx
   140001065:	push   rbp
   140001066:	push   rsi
   140001067:	push   rdi
   140001068:	push   r12
   14000106a:	push   r13
   14000106c:	sub    rsp,0x30
   140001070:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001079:	mov    QWORD PTR [rsp+0x78],rbx
   14000107e:	mov    r12,rcx
   140001081:	lea    rax,[rip+0x6a270]        # 0x14006b2f8
   140001088:	mov    QWORD PTR [rcx],rax
   14000108b:	add    rcx,0x8
   14000108f:	call   0x140049000
   140001094:	nop
   140001095:	mov    BYTE PTR [r12+0x60],0x0
   14000109b:	xor    r13d,r13d
   14000109e:	mov    QWORD PTR [r12+0x64],r13
   1400010a3:	lea    rcx,[r12+0x70]
   1400010a8:	call   0x1400018d0
   1400010ad:	nop
   1400010ae:	lea    r10,[rip+0x86be7]        # 0x140087c9c
   1400010b5:	lea    r11d,[r13+0x16]
   1400010b9:	lea    rbx,[rip+0x86bd8]        # 0x140087c98
   1400010c0:	or     r9d,0xffffffff
   1400010c4:	mov    edx,r13d
   1400010c7:	mov    r8d,r13d
   1400010ca:	mov    rcx,rbx
   1400010cd:	nop    DWORD PTR [rax]
   1400010d0:	cmp    r8d,0x16
   1400010d4:	jae    0x1400010f3
   1400010d6:	mov    eax,DWORD PTR [r10-0x8]
   1400010da:	cmp    DWORD PTR [rcx-0x4],eax
   1400010dd:	jne    0x1400010e4
   1400010df:	mov    r9d,edx
   1400010e2:	jmp    0x1400010e6
   1400010e4:	add    edx,DWORD PTR [rcx]
   1400010e6:	inc    r8d
   1400010e9:	add    rcx,0x14
   1400010ed:	cmp    r9d,0xffffffff
   1400010f1:	je     0x1400010d0
   1400010f3:	mov    DWORD PTR [r10],r9d
   1400010f6:	add    r10,0x14
   1400010fa:	dec    r11
   1400010fd:	jne    0x1400010c0
   1400010ff:	mov    esi,r13d
   140001102:	lea    rdi,[rip+0x86b8b]        # 0x140087c94
   140001109:	nop    DWORD PTR [rax+0x0]
   140001110:	mov    rbx,QWORD PTR [r12+0x78]
   140001115:	mov    rax,QWORD PTR [rbx+0x8]
   140001119:	cmp    BYTE PTR [rax+0x21],0x0
   14000111d:	jne    0x140001138
   14000111f:	mov    ecx,DWORD PTR [rdi]
   140001121:	cmp    DWORD PTR [rax+0x18],ecx
   140001124:	jge    0x14000112c
   140001126:	mov    rax,QWORD PTR [rax+0x10]
   14000112a:	jmp    0x140001132
   14000112c:	mov    rbx,rax
   14000112f:	mov    rax,QWORD PTR [rax]
   140001132:	cmp    BYTE PTR [rax+0x21],0x0
   140001136:	je     0x140001121
   140001138:	cmp    rbx,QWORD PTR [r12+0x78]
   14000113d:	je     0x140001146
   14000113f:	mov    eax,DWORD PTR [rbx+0x18]
   140001142:	cmp    DWORD PTR [rdi],eax
   140001144:	jge    0x14000117a
   140001146:	mov    eax,DWORD PTR [rdi]
   140001148:	mov    DWORD PTR [rsp+0x68],eax
   14000114c:	mov    DWORD PTR [rsp+0x6c],r13d
   140001151:	lea    rdx,[rsp+0x68]
   140001156:	lea    rcx,[r12+0x70]
   14000115b:	call   0x140002530
   140001160:	mov    r9,rax
   140001163:	mov    r8,rbx
   140001166:	lea    rdx,[rsp+0x70]
   14000116b:	lea    rcx,[r12+0x70]
   140001170:	call   0x140001f60
   140001175:	mov    rbx,QWORD PTR [rsp+0x70]
   14000117a:	mov    DWORD PTR [rbx+0x1c],esi
   14000117d:	inc    esi
   14000117f:	add    rdi,0x14
   140001183:	cmp    esi,0x16
   140001186:	jb     0x140001110
   140001188:	mov    rax,r12
   14000118b:	mov    rbx,QWORD PTR [rsp+0x78]
   140001190:	add    rsp,0x30
   140001194:	pop    r13
   140001196:	pop    r12
   140001198:	pop    rdi
   140001199:	pop    rsi
   14000119a:	pop    rbp
   14000119b:	ret    
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011a5:	push   rdi
   1400011a6:	sub    rsp,0x20
   1400011aa:	mov    ebx,edx
   1400011ac:	mov    rdi,rcx
   1400011af:	call   0x140001210
   1400011b4:	test   bl,0x1
   1400011b7:	je     0x1400011c1
   1400011b9:	mov    rcx,rdi
   1400011bc:	call   0x1400330c0
   1400011c1:	mov    rax,rdi
   1400011c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011c9:	add    rsp,0x20
   1400011cd:	pop    rdi
   1400011ce:	ret    
   1400011cf:	int3   
   1400011d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011d5:	push   rbx
   1400011d6:	sub    rsp,0x30
   1400011da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400011e3:	mov    rbx,rcx
   1400011e6:	mov    r8,QWORD PTR [rcx+0x8]
   1400011ea:	mov    r9,r8
   1400011ed:	mov    r8,QWORD PTR [r8]
   1400011f0:	lea    rdx,[rsp+0x48]
   1400011f5:	call   0x140001960
   1400011fa:	nop
   1400011fb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400011ff:	add    rsp,0x30
   140001203:	pop    rbx
   140001204:	jmp    0x1400330c0
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    QWORD PTR [rsp+0x8],rcx
   140001215:	push   rbx
   140001216:	push   rsi
   140001217:	push   rdi
   140001218:	sub    rsp,0x30
   14000121c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001225:	mov    rdi,rcx
   140001228:	lea    rax,[rip+0x6a0c9]        # 0x14006b2f8
   14000122f:	mov    QWORD PTR [rcx],rax
   140001232:	mov    rcx,QWORD PTR [rcx+0x10]
   140001236:	xor    esi,esi
   140001238:	test   rcx,rcx
   14000123b:	je     0x140001247
   14000123d:	call   QWORD PTR [rip+0x66e9d]        # 0x1400680e0
   140001243:	mov    QWORD PTR [rdi+0x10],rsi
   140001247:	mov    rcx,QWORD PTR [rdi+0x18]
   14000124b:	test   rcx,rcx
   14000124e:	je     0x14000125a
   140001250:	call   QWORD PTR [rip+0x67142]        # 0x140068398
   140001256:	mov    QWORD PTR [rdi+0x18],rsi
   14000125a:	mov    DWORD PTR [rdi+0x8],esi
   14000125d:	mov    BYTE PTR [rdi+0x60],sil
   140001261:	lea    rbx,[rdi+0x70]
   140001265:	mov    QWORD PTR [rsp+0x58],rbx
   14000126a:	mov    r8,QWORD PTR [rbx+0x8]
   14000126e:	mov    r9,r8
   140001271:	mov    r8,QWORD PTR [r8]
   140001274:	lea    rdx,[rsp+0x60]
   140001279:	mov    rcx,rbx
   14000127c:	call   0x140001960
   140001281:	nop
   140001282:	mov    rcx,QWORD PTR [rbx+0x8]
   140001286:	call   0x1400330c0
   14000128b:	nop
   14000128c:	mov    rcx,QWORD PTR [rdi+0x10]
   140001290:	test   rcx,rcx
   140001293:	je     0x14000129f
   140001295:	call   QWORD PTR [rip+0x66e45]        # 0x1400680e0
   14000129b:	mov    QWORD PTR [rdi+0x10],rsi
   14000129f:	mov    rcx,QWORD PTR [rdi+0x18]
   1400012a3:	test   rcx,rcx
   1400012a6:	je     0x1400012b2
   1400012a8:	call   QWORD PTR [rip+0x670ea]        # 0x140068398
   1400012ae:	mov    QWORD PTR [rdi+0x18],rsi
   1400012b2:	mov    DWORD PTR [rdi+0x8],esi
   1400012b5:	add    rsp,0x30
   1400012b9:	pop    rdi
   1400012ba:	pop    rsi
   1400012bb:	pop    rbx
   1400012bc:	ret    
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	rex push rbx
   1400012c2:	push   rsi
   1400012c3:	push   rdi
   1400012c4:	sub    rsp,0x160
   1400012cb:	mov    rax,QWORD PTR [rip+0x83dd6]        # 0x1400850a8
   1400012d2:	xor    rax,rsp
   1400012d5:	mov    QWORD PTR [rsp+0x150],rax
   1400012dd:	mov    edi,r8d
   1400012e0:	mov    rsi,rdx
   1400012e3:	mov    rbx,rcx
   1400012e6:	test   rdx,rdx
   1400012e9:	je     0x140001423
   1400012ef:	cmp    BYTE PTR [rcx+0x60],0x0
   1400012f3:	jne    0x140001423
   1400012f9:	lea    rcx,[rsp+0x41]
   1400012fe:	xor    edx,edx
   140001300:	mov    r8d,0x103
   140001306:	mov    BYTE PTR [rsp+0x40],0x0
   14000130b:	call   0x140036dc0
   140001310:	lea    rcx,[rsp+0x40]
   140001315:	mov    r8,rsi
   140001318:	mov    edx,0x104
   14000131d:	call   0x1400330c8
   140001322:	lea    r8,[rip+0x69f6f]        # 0x14006b298
   140001329:	lea    rcx,[rsp+0x40]
   14000132e:	mov    edx,0x104
   140001333:	call   0x1400330c8
   140001338:	xor    esi,esi
   14000133a:	lea    rax,[rip+0x8696b]        # 0x140087cac
   140001341:	mov    r8d,esi
   140001344:	mov    ecx,esi
   140001346:	mov    edx,0xb
   14000134b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001350:	add    r8d,DWORD PTR [rax-0x14]
   140001354:	add    ecx,DWORD PTR [rax]
   140001356:	add    rax,0x28
   14000135a:	dec    rdx
   14000135d:	jne    0x140001350
   14000135f:	add    r8d,ecx
   140001362:	lea    r9,[rsp+0x30]
   140001367:	lea    rdx,[rsp+0x40]
   14000136c:	lea    rcx,[rbx+0x8]
   140001370:	mov    DWORD PTR [rsp+0x30],esi
   140001374:	mov    DWORD PTR [rsp+0x20],edi
   140001378:	mov    DWORD PTR [rbx+0x64],r8d
   14000137c:	call   0x1400490d0
   140001381:	test   eax,eax
   140001383:	je     0x140001414
   140001389:	mov    BYTE PTR [rbx+0x60],0x1
   14000138d:	test   edi,edi
   14000138f:	je     0x1400013cd
   140001391:	cmp    DWORD PTR [rsp+0x30],esi
   140001395:	jne    0x14000140e
   140001397:	cmp    QWORD PTR [rbx+0x10],rsi
   14000139b:	je     0x14000140e
   14000139d:	mov    r10,QWORD PTR [rbx]
   1400013a0:	mov    r8d,DWORD PTR [rbx+0x64]
   1400013a4:	xor    r9d,r9d
   1400013a7:	lea    edx,[r9+0x1]
   1400013ab:	mov    rcx,rbx
   1400013ae:	call   QWORD PTR [r10+0x20]
   1400013b2:	mov    r11,QWORD PTR [rbx]
   1400013b5:	mov    r8d,DWORD PTR [rbx+0x68]
   1400013b9:	xor    r9d,r9d
   1400013bc:	mov    rcx,rbx
   1400013bf:	lea    edx,[r9+0x2]
   1400013c3:	call   QWORD PTR [r11+0x20]
   1400013c7:	movzx  eax,BYTE PTR [rbx+0x60]
   1400013cb:	jmp    0x140001427
   1400013cd:	mov    rax,QWORD PTR [rbx]
   1400013d0:	lea    r8,[rsp+0x34]
   1400013d5:	mov    edx,0x1
   1400013da:	mov    rcx,rbx
   1400013dd:	mov    DWORD PTR [rsp+0x34],esi
   1400013e1:	call   QWORD PTR [rax+0x28]
   1400013e4:	mov    rax,QWORD PTR [rbx]
   1400013e7:	lea    r8,[rsp+0x30]
   1400013ec:	mov    edx,0x2
   1400013f1:	mov    rcx,rbx
   1400013f4:	mov    DWORD PTR [rsp+0x30],esi
   1400013f8:	call   QWORD PTR [rax+0x28]
   1400013fb:	mov    ecx,DWORD PTR [rsp+0x30]
   1400013ff:	cmp    DWORD PTR [rbx+0x68],ecx
   140001402:	jle    0x14000140e
   140001404:	mov    eax,DWORD PTR [rsp+0x34]
   140001408:	mov    DWORD PTR [rbx+0x68],ecx
   14000140b:	mov    DWORD PTR [rbx+0x64],eax
   14000140e:	movzx  eax,BYTE PTR [rbx+0x60]
   140001412:	jmp    0x140001427
   140001414:	mov    rax,QWORD PTR [rbx]
   140001417:	mov    rcx,rbx
   14000141a:	call   QWORD PTR [rax+0x10]
   14000141d:	movzx  eax,BYTE PTR [rbx+0x60]
   140001421:	jmp    0x140001427
   140001423:	movzx  eax,BYTE PTR [rcx+0x60]
   140001427:	mov    rcx,QWORD PTR [rsp+0x150]
   14000142f:	xor    rcx,rsp
   140001432:	call   0x140032f00
   140001437:	add    rsp,0x160
   14000143e:	pop    rdi
   14000143f:	pop    rsi
   140001440:	pop    rbx
   140001441:	ret    
   140001442:	int3   
   140001443:	int3   
   140001444:	int3   
   140001445:	int3   
   140001446:	int3   
   140001447:	int3   
   140001448:	int3   
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	rex push rbx
   140001452:	sub    rsp,0x20
   140001456:	mov    rbx,rcx
   140001459:	mov    rcx,QWORD PTR [rcx+0x10]
   14000145d:	test   rcx,rcx
   140001460:	je     0x140001470
   140001462:	call   QWORD PTR [rip+0x66c78]        # 0x1400680e0
   140001468:	mov    QWORD PTR [rbx+0x10],0x0
   140001470:	mov    rcx,QWORD PTR [rbx+0x18]
   140001474:	test   rcx,rcx
   140001477:	je     0x140001487
   140001479:	call   QWORD PTR [rip+0x66f19]        # 0x140068398
   14000147f:	mov    QWORD PTR [rbx+0x18],0x0
   140001487:	mov    DWORD PTR [rbx+0x8],0x0
   14000148e:	mov    al,0x1
   140001490:	mov    BYTE PTR [rbx+0x60],0x0
   140001494:	add    rsp,0x20
   140001498:	pop    rbx
   140001499:	ret    
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    DWORD PTR [rsp+0x18],r8d
   1400014a5:	push   rbx
   1400014a6:	push   rbp
   1400014a7:	push   rdi
   1400014a8:	sub    rsp,0x30
   1400014ac:	mov    rax,QWORD PTR [rcx]
   1400014af:	mov    rbp,r9
   1400014b2:	mov    ebx,edx
   1400014b4:	mov    rdi,rcx
   1400014b7:	call   QWORD PTR [rax+0x18]
   1400014ba:	test   al,al
   1400014bc:	je     0x1400015bd
   1400014c2:	mov    r8,QWORD PTR [rdi+0x78]
   1400014c6:	mov    rax,QWORD PTR [r8+0x8]
   1400014ca:	cmp    BYTE PTR [rax+0x21],0x0
   1400014ce:	jne    0x1400014e7
   1400014d0:	cmp    DWORD PTR [rax+0x18],ebx
   1400014d3:	jge    0x1400014db
   1400014d5:	mov    rax,QWORD PTR [rax+0x10]
   1400014d9:	jmp    0x1400014e1
   1400014db:	mov    r8,rax
   1400014de:	mov    rax,QWORD PTR [rax]
   1400014e1:	cmp    BYTE PTR [rax+0x21],0x0
   1400014e5:	je     0x1400014d0
   1400014e7:	mov    rax,QWORD PTR [rdi+0x78]
   1400014eb:	mov    QWORD PTR [rsp+0x50],r8
   1400014f0:	cmp    r8,rax
   1400014f3:	je     0x140001502
   1400014f5:	cmp    ebx,DWORD PTR [r8+0x18]
   1400014f9:	jl     0x140001502
   1400014fb:	lea    rax,[rsp+0x50]
   140001500:	jmp    0x14000150c
   140001502:	mov    QWORD PTR [rsp+0x20],rax
   140001507:	lea    rax,[rsp+0x20]
   14000150c:	mov    rax,QWORD PTR [rax]
   14000150f:	cmp    rax,QWORD PTR [rdi+0x78]
   140001513:	je     0x1400015bd
   140001519:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000151d:	cmp    ecx,0xffffffff
   140001520:	je     0x1400015bd
   140001526:	mov    QWORD PTR [rsp+0x68],r12
   14000152b:	lea    rbx,[rcx+rcx*4]
   14000152f:	lea    r12,[rip+0x8675a]        # 0x140087c90
   140001536:	cmp    DWORD PTR [r12+rbx*4+0x10],0x0
   14000153c:	mov    rax,rcx
   14000153f:	jne    0x1400015ae
   140001541:	mov    eax,DWORD PTR [r12+rbx*4]
   140001545:	cmp    DWORD PTR [rdi+0x68],eax
   140001548:	jl     0x1400015ae
   14000154a:	movsxd rcx,DWORD PTR [r12+rbx*4+0x8]
   14000154f:	mov    QWORD PTR [rsp+0x58],rsi
   140001554:	movsxd rsi,DWORD PTR [r12+rbx*4+0xc]
   140001559:	lea    eax,[rcx+rsi*1]
   14000155c:	cmp    eax,DWORD PTR [rdi+0x64]
   14000155f:	jg     0x1400015aa
   140001561:	mov    rdi,QWORD PTR [rdi+0x10]
   140001565:	test   rbp,rbp
   140001568:	je     0x140001583
   14000156a:	mov    r8,rcx
   14000156d:	lea    rdx,[rsp+0x60]
   140001572:	lea    rcx,[rdi+rsi*1]
   140001576:	call   0x14003e320
   14000157b:	test   eax,eax
   14000157d:	setne  al
   140001580:	mov    BYTE PTR [rbp+0x0],al
   140001583:	movsxd r8,DWORD PTR [r12+rbx*4+0x8]
   140001588:	lea    rcx,[rdi+rsi*1]
   14000158c:	lea    rdx,[rsp+0x60]
   140001591:	call   0x140033260
   140001596:	mov    al,0x1
   140001598:	mov    rsi,QWORD PTR [rsp+0x58]
   14000159d:	mov    r12,QWORD PTR [rsp+0x68]
   1400015a2:	add    rsp,0x30
   1400015a6:	pop    rdi
   1400015a7:	pop    rbp
   1400015a8:	pop    rbx
   1400015a9:	ret    
   1400015aa:	xor    al,al
   1400015ac:	jmp    0x140001598
   1400015ae:	xor    al,al
   1400015b0:	mov    r12,QWORD PTR [rsp+0x68]
   1400015b5:	add    rsp,0x30
   1400015b9:	pop    rdi
   1400015ba:	pop    rbp
   1400015bb:	pop    rbx
   1400015bc:	ret    
   1400015bd:	xor    al,al
   1400015bf:	add    rsp,0x30
   1400015c3:	pop    rdi
   1400015c4:	pop    rbp
   1400015c5:	pop    rbx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400015da:	mov    QWORD PTR [rsp+0x20],rsi
   1400015df:	push   rdi
   1400015e0:	sub    rsp,0x20
   1400015e4:	xor    bl,bl
   1400015e6:	mov    rsi,r8
   1400015e9:	mov    ebp,edx
   1400015eb:	mov    rdi,rcx
   1400015ee:	test   r8,r8
   1400015f1:	je     0x14000165c
   1400015f3:	mov    rax,QWORD PTR [rcx]
   1400015f6:	call   QWORD PTR [rax+0x18]
   1400015f9:	test   al,al
   1400015fb:	je     0x14000165c
   1400015fd:	xor    r9d,r9d
   140001600:	mov    edx,ebp
   140001602:	mov    rcx,rdi
   140001605:	mov    DWORD PTR [rsp+0x40],r9d
   14000160a:	call   0x140001870
   14000160f:	cmp    eax,0xffffffff
   140001612:	je     0x140001659
   140001614:	cdqe   
   140001616:	lea    r8,[rip+0x86673]        # 0x140087c90
   14000161d:	lea    rcx,[rax+rax*4]
   140001621:	cmp    DWORD PTR [r8+rcx*4+0x10],r9d
   140001626:	jne    0x140001659
   140001628:	mov    eax,DWORD PTR [r8+rcx*4]
   14000162c:	cmp    DWORD PTR [rdi+0x68],eax
   14000162f:	jl     0x140001659
   140001631:	movsxd rdx,DWORD PTR [r8+rcx*4+0xc]
   140001636:	movsxd r8,DWORD PTR [r8+rcx*4+0x8]
   14000163b:	lea    eax,[r8+rdx*1]
   14000163f:	cmp    eax,DWORD PTR [rdi+0x64]
   140001642:	jg     0x140001659
   140001644:	add    rdx,QWORD PTR [rdi+0x10]
   140001648:	lea    rcx,[rsp+0x40]
   14000164d:	call   0x140033260
   140001652:	mov    r9d,DWORD PTR [rsp+0x40]
   140001657:	mov    bl,0x1
   140001659:	mov    DWORD PTR [rsi],r9d
   14000165c:	mov    rbp,QWORD PTR [rsp+0x38]
   140001661:	mov    rsi,QWORD PTR [rsp+0x48]
   140001666:	movzx  eax,bl
   140001669:	mov    rbx,QWORD PTR [rsp+0x30]
   14000166e:	add    rsp,0x20
   140001672:	pop    rdi
   140001673:	ret    
   140001674:	int3   
   140001675:	int3   
   140001676:	int3   
   140001677:	int3   
   140001678:	int3   
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    QWORD PTR [rsp+0x18],rbx
   140001685:	push   rsi
   140001686:	push   rdi
   140001687:	push   r12
   140001689:	sub    rsp,0x20
   14000168d:	mov    r12,r9
   140001690:	mov    rsi,r8
   140001693:	mov    ebx,edx
   140001695:	mov    rdi,rcx
   140001698:	test   r8,r8
   14000169b:	je     0x14000177f
   1400016a1:	mov    rax,QWORD PTR [rcx]
   1400016a4:	call   QWORD PTR [rax+0x18]
   1400016a7:	test   al,al
   1400016a9:	je     0x14000177f
   1400016af:	mov    edx,ebx
   1400016b1:	mov    rcx,rdi
   1400016b4:	call   0x140001870
   1400016b9:	cmp    eax,0xffffffff
   1400016bc:	je     0x14000177f
   1400016c2:	cdqe   
   1400016c4:	mov    QWORD PTR [rsp+0x48],r13
   1400016c9:	lea    r13,[rip+0x865c0]        # 0x140087c90
   1400016d0:	lea    rbx,[rax+rax*4]
   1400016d4:	cmp    DWORD PTR [r13+rbx*4+0x10],0x1
   1400016da:	jne    0x14000177b
   1400016e0:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
   1400016e5:	cmp    DWORD PTR [rdi+0x68],eax
   1400016e8:	jl     0x14000177b
   1400016ee:	movsxd rdx,DWORD PTR [r13+rbx*4+0xc]
   1400016f3:	movsxd r8,DWORD PTR [r13+rbx*4+0x8]
   1400016f8:	lea    eax,[r8+rdx*1]
   1400016fc:	cmp    eax,DWORD PTR [rdi+0x64]
   1400016ff:	jg     0x14000177b
   140001701:	mov    QWORD PTR [rsp+0x40],rbp
   140001706:	mov    rbp,rdx
   140001709:	xor    edx,edx
   14000170b:	add    rbp,QWORD PTR [rdi+0x10]
   14000170f:	mov    rcx,rbp
   140001712:	call   0x140036dc0
   140001717:	or     rcx,0xffffffffffffffff
   14000171b:	xor    eax,eax
   14000171d:	mov    rdi,rsi
   140001720:	repnz scas al,BYTE PTR es:[rdi]
   140001722:	movsxd rax,DWORD PTR [r13+rbx*4+0x8]
   140001727:	not    rcx
   14000172a:	dec    rcx
   14000172d:	cmp    rcx,rax
   140001730:	mov    rdi,rcx
   140001733:	cmova  rdi,rax
   140001737:	test   r12,r12
   14000173a:	je     0x140001753
   14000173c:	mov    r8,rdi
   14000173f:	mov    rdx,rsi
   140001742:	mov    rcx,rbp
   140001745:	call   0x14003e320
   14000174a:	test   eax,eax
   14000174c:	setne  al
   14000174f:	mov    BYTE PTR [r12],al
   140001753:	mov    r8,rdi
   140001756:	mov    rdx,rsi
   140001759:	mov    rcx,rbp
   14000175c:	call   0x140033260
   140001761:	mov    rbp,QWORD PTR [rsp+0x40]
   140001766:	mov    al,0x1
   140001768:	mov    r13,QWORD PTR [rsp+0x48]
   14000176d:	mov    rbx,QWORD PTR [rsp+0x50]
   140001772:	add    rsp,0x20
   140001776:	pop    r12
   140001778:	pop    rdi
   140001779:	pop    rsi
   14000177a:	ret    
   14000177b:	xor    al,al
   14000177d:	jmp    0x140001768
   14000177f:	xor    al,al
   140001781:	mov    rbx,QWORD PTR [rsp+0x50]
   140001786:	add    rsp,0x20
   14000178a:	pop    r12
   14000178c:	pop    rdi
   14000178d:	pop    rsi
   14000178e:	ret    
   14000178f:	int3   
   140001790:	mov    QWORD PTR [rsp+0x18],rbx
   140001795:	push   rbp
   140001796:	push   rdi
   140001797:	push   r12
   140001799:	sub    rsp,0x20
   14000179d:	mov    ebp,r9d
   1400017a0:	mov    r12,r8
   1400017a3:	mov    edi,edx
   1400017a5:	mov    rbx,rcx
   1400017a8:	test   r8,r8
   1400017ab:	je     0x140001855
   1400017b1:	mov    rax,QWORD PTR [rcx]
   1400017b4:	call   QWORD PTR [rax+0x18]
   1400017b7:	test   al,al
   1400017b9:	je     0x140001855
   1400017bf:	mov    edx,edi
   1400017c1:	mov    rcx,rbx
   1400017c4:	call   0x140001870
   1400017c9:	cmp    eax,0xffffffff
   1400017cc:	je     0x140001855
   1400017d2:	cdqe   
   1400017d4:	mov    QWORD PTR [rsp+0x48],r13
   1400017d9:	lea    r13,[rip+0x864b0]        # 0x140087c90
   1400017e0:	lea    rdi,[rax+rax*4]
   1400017e4:	cmp    DWORD PTR [r13+rdi*4+0x10],0x1
   1400017ea:	jne    0x140001851
   1400017ec:	mov    eax,DWORD PTR [r13+rdi*4+0x0]
   1400017f1:	cmp    DWORD PTR [rbx+0x68],eax
   1400017f4:	jl     0x140001851
   1400017f6:	mov    ecx,DWORD PTR [r13+rdi*4+0x8]
   1400017fb:	mov    QWORD PTR [rsp+0x40],rsi
   140001800:	movsxd rsi,DWORD PTR [r13+rdi*4+0xc]
   140001805:	lea    eax,[rcx+rsi*1]
   140001808:	cmp    eax,DWORD PTR [rbx+0x64]
   14000180b:	jg     0x14000184d
   14000180d:	cmp    ebp,ecx
   14000180f:	jb     0x14000184d
   140001811:	mov    rbx,QWORD PTR [rbx+0x10]
   140001815:	mov    r8d,ebp
   140001818:	xor    edx,edx
   14000181a:	mov    rcx,r12
   14000181d:	call   0x140036dc0
   140001822:	movsxd r8,DWORD PTR [r13+rdi*4+0x8]
   140001827:	lea    rdx,[rbx+rsi*1]
   14000182b:	mov    rcx,r12
   14000182e:	call   0x140033260
   140001833:	mov    al,0x1
   140001835:	mov    rsi,QWORD PTR [rsp+0x40]
   14000183a:	mov    r13,QWORD PTR [rsp+0x48]
   14000183f:	mov    rbx,QWORD PTR [rsp+0x50]
   140001844:	add    rsp,0x20
   140001848:	pop    r12
   14000184a:	pop    rdi
   14000184b:	pop    rbp
   14000184c:	ret    
   14000184d:	xor    al,al
   14000184f:	jmp    0x140001835
   140001851:	xor    al,al
   140001853:	jmp    0x14000183a
   140001855:	xor    al,al
   140001857:	mov    rbx,QWORD PTR [rsp+0x50]
   14000185c:	add    rsp,0x20
   140001860:	pop    r12
   140001862:	pop    rdi
   140001863:	pop    rbp
   140001864:	ret    
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	mov    r8,QWORD PTR [rcx+0x78]
   140001874:	mov    rax,QWORD PTR [r8+0x8]
   140001878:	cmp    BYTE PTR [rax+0x21],0x0
   14000187c:	jne    0x140001897
   14000187e:	xchg   ax,ax
   140001880:	cmp    DWORD PTR [rax+0x18],edx
   140001883:	jge    0x14000188b
   140001885:	mov    rax,QWORD PTR [rax+0x10]
   140001889:	jmp    0x140001891
   14000188b:	mov    r8,rax
   14000188e:	mov    rax,QWORD PTR [rax]
   140001891:	cmp    BYTE PTR [rax+0x21],0x0
   140001895:	je     0x140001880
   140001897:	mov    rax,QWORD PTR [rcx+0x78]
   14000189b:	mov    QWORD PTR [rsp+0x8],r8
   1400018a0:	cmp    r8,rax
   1400018a3:	je     0x1400018b2
   1400018a5:	cmp    edx,DWORD PTR [r8+0x18]
   1400018a9:	jl     0x1400018b2
   1400018ab:	lea    rax,[rsp+0x8]
   1400018b0:	jmp    0x1400018bc
   1400018b2:	mov    QWORD PTR [rsp+0x18],rax
   1400018b7:	lea    rax,[rsp+0x18]
   1400018bc:	mov    rax,QWORD PTR [rax]
   1400018bf:	cmp    rax,QWORD PTR [rcx+0x78]
   1400018c3:	je     0x1400018c9
   1400018c5:	mov    eax,DWORD PTR [rax+0x1c]
   1400018c8:	ret    
   1400018c9:	or     eax,0xffffffff
   1400018cc:	ret    
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	rex push rbx
   1400018d2:	sub    rsp,0x40
   1400018d6:	mov    rbx,rcx
   1400018d9:	mov    QWORD PTR [rcx+0x10],0x0
   1400018e1:	mov    ecx,0x28
   1400018e6:	call   0x1400331a0
   1400018eb:	test   rax,rax
   1400018ee:	je     0x140001920
   1400018f0:	mov    QWORD PTR [rbx+0x8],rax
   1400018f4:	mov    QWORD PTR [rax],rax
   1400018f7:	mov    rax,QWORD PTR [rbx+0x8]
   1400018fb:	mov    QWORD PTR [rax+0x8],rax
   1400018ff:	mov    rax,QWORD PTR [rbx+0x8]
   140001903:	mov    QWORD PTR [rax+0x10],rax
   140001907:	mov    rax,QWORD PTR [rbx+0x8]
   14000190b:	mov    BYTE PTR [rax+0x20],0x1
   14000190f:	mov    rax,QWORD PTR [rbx+0x8]
   140001913:	mov    BYTE PTR [rax+0x21],0x1
   140001917:	mov    rax,rbx
   14000191a:	add    rsp,0x40
   14000191e:	pop    rbx
   14000191f:	ret    
   140001920:	lea    rdx,[rsp+0x50]
   140001925:	lea    rcx,[rsp+0x20]
   14000192a:	mov    QWORD PTR [rsp+0x50],0x0
   140001933:	call   0x140032fd4
   140001938:	lea    r11,[rip+0x66f51]        # 0x140068890
   14000193f:	lea    rdx,[rip+0x81ada]        # 0x140083420
   140001946:	lea    rcx,[rsp+0x20]
   14000194b:	mov    QWORD PTR [rsp+0x20],r11
   140001950:	call   0x140036358
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x10],rbx
   140001965:	mov    QWORD PTR [rsp+0x20],r9
   14000196a:	mov    QWORD PTR [rsp+0x18],r8
   14000196f:	push   rdi
   140001970:	sub    rsp,0x20
   140001974:	mov    rax,QWORD PTR [rcx+0x8]
   140001978:	mov    rdi,rdx
   14000197b:	mov    rbx,rcx
   14000197e:	cmp    r8,QWORD PTR [rax]
   140001981:	jne    0x1400019a5
   140001983:	cmp    r9,rax
   140001986:	jne    0x1400019a5
   140001988:	call   0x140001da0
   14000198d:	mov    r11,QWORD PTR [rbx+0x8]
   140001991:	mov    rax,QWORD PTR [r11]
   140001994:	mov    QWORD PTR [rdi],rax
   140001997:	mov    rax,rdi
   14000199a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000199f:	add    rsp,0x20
   1400019a3:	pop    rdi
   1400019a4:	ret    
   1400019a5:	cmp    r8,r9
   1400019a8:	je     0x140001a29
   1400019aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400019b0:	cmp    BYTE PTR [r8+0x21],0x0
   1400019b5:	mov    rax,r8
   1400019b8:	jne    0x140001a0d
   1400019ba:	mov    rdx,QWORD PTR [r8+0x10]
   1400019be:	cmp    BYTE PTR [rdx+0x21],0x0
   1400019c2:	jne    0x1400019e3
   1400019c4:	mov    rcx,QWORD PTR [rdx]
   1400019c7:	cmp    BYTE PTR [rcx+0x21],0x0
   1400019cb:	jne    0x1400019dc
   1400019cd:	nop    DWORD PTR [rax]
   1400019d0:	mov    rdx,rcx
   1400019d3:	mov    rcx,QWORD PTR [rcx]
   1400019d6:	cmp    BYTE PTR [rcx+0x21],0x0
   1400019da:	je     0x1400019d0
   1400019dc:	mov    QWORD PTR [rsp+0x40],rdx
   1400019e1:	jmp    0x140001a0d
   1400019e3:	mov    rcx,QWORD PTR [r8+0x8]
   1400019e7:	cmp    BYTE PTR [rcx+0x21],0x0
   1400019eb:	jne    0x140001a08
   1400019ed:	nop    DWORD PTR [rax]
   1400019f0:	cmp    r8,QWORD PTR [rcx+0x10]
   1400019f4:	jne    0x140001a08
   1400019f6:	mov    QWORD PTR [rsp+0x40],rcx
   1400019fb:	mov    r8,rcx
   1400019fe:	mov    rcx,QWORD PTR [rcx+0x8]
   140001a02:	cmp    BYTE PTR [rcx+0x21],0x0
   140001a06:	je     0x1400019f0
   140001a08:	mov    QWORD PTR [rsp+0x40],rcx
   140001a0d:	lea    rdx,[rsp+0x30]
   140001a12:	mov    r8,rax
   140001a15:	mov    rcx,rbx
   140001a18:	call   0x140001a40
   140001a1d:	mov    r8,QWORD PTR [rsp+0x40]
   140001a22:	cmp    r8,QWORD PTR [rsp+0x48]
   140001a27:	jne    0x1400019b0
   140001a29:	mov    rbx,QWORD PTR [rsp+0x38]
   140001a2e:	mov    QWORD PTR [rdi],r8
   140001a31:	mov    rax,rdi
   140001a34:	add    rsp,0x20
   140001a38:	pop    rdi
   140001a39:	ret    
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	mov    QWORD PTR [rsp+0x18],r8
   140001a45:	push   rsi
   140001a46:	push   r12
   140001a48:	sub    rsp,0x28
   140001a4c:	cmp    BYTE PTR [r8+0x21],0x0
   140001a51:	mov    r12,rdx
   140001a54:	mov    rsi,rcx
   140001a57:	je     0x140001a66
   140001a59:	lea    rcx,[rip+0x69850]        # 0x14006b2b0
   140001a60:	call   0x140032d5c
   140001a65:	int3   
   140001a66:	mov    rdx,QWORD PTR [r8+0x10]
   140001a6a:	lea    r9,[r8+0x10]
   140001a6e:	mov    QWORD PTR [rsp+0x48],rbp
   140001a73:	cmp    BYTE PTR [rdx+0x21],0x0
   140001a77:	mov    rbp,r8
   140001a7a:	jne    0x140001a9e
   140001a7c:	mov    rax,QWORD PTR [rdx]
   140001a7f:	cmp    BYTE PTR [rax+0x21],0x0
   140001a83:	jne    0x140001ac0
   140001a85:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001a90:	mov    rdx,rax
   140001a93:	mov    rax,QWORD PTR [rax]
   140001a96:	cmp    BYTE PTR [rax+0x21],0x0
   140001a9a:	je     0x140001a90
   140001a9c:	jmp    0x140001ac0
   140001a9e:	mov    rdx,QWORD PTR [r8+0x8]
   140001aa2:	cmp    BYTE PTR [rdx+0x21],0x0
   140001aa6:	jne    0x140001ac0
   140001aa8:	cmp    r8,QWORD PTR [rdx+0x10]
   140001aac:	jne    0x140001ac0
   140001aae:	mov    QWORD PTR [rsp+0x50],rdx
   140001ab3:	mov    r8,rdx
   140001ab6:	mov    rdx,QWORD PTR [rdx+0x8]
   140001aba:	cmp    BYTE PTR [rdx+0x21],0x0
   140001abe:	je     0x140001aa8
   140001ac0:	mov    QWORD PTR [rsp+0x50],rdx
   140001ac5:	mov    rcx,QWORD PTR [rbp+0x0]
   140001ac9:	mov    QWORD PTR [rsp+0x40],rbx
   140001ace:	cmp    BYTE PTR [rcx+0x21],0x0
   140001ad2:	mov    QWORD PTR [rsp+0x20],rdi
   140001ad7:	je     0x140001ade
   140001ad9:	mov    rdi,QWORD PTR [r9]
   140001adc:	jmp    0x140001af9
   140001ade:	mov    rax,QWORD PTR [r9]
   140001ae1:	cmp    BYTE PTR [rax+0x21],0x0
   140001ae5:	je     0x140001aec
   140001ae7:	mov    rdi,rcx
   140001aea:	jmp    0x140001af9
   140001aec:	mov    rdi,QWORD PTR [rdx+0x10]
   140001af0:	cmp    rdx,rbp
   140001af3:	jne    0x140001ba3
   140001af9:	cmp    BYTE PTR [rdi+0x21],0x0
   140001afd:	mov    rbx,QWORD PTR [rbp+0x8]
   140001b01:	jne    0x140001b07
   140001b03:	mov    QWORD PTR [rdi+0x8],rbx
   140001b07:	mov    rax,QWORD PTR [rsi+0x8]
   140001b0b:	cmp    QWORD PTR [rax+0x8],rbp
   140001b0f:	jne    0x140001b17
   140001b11:	mov    QWORD PTR [rax+0x8],rdi
   140001b15:	jmp    0x140001b25
   140001b17:	cmp    QWORD PTR [rbx],rbp
   140001b1a:	jne    0x140001b21
   140001b1c:	mov    QWORD PTR [rbx],rdi
   140001b1f:	jmp    0x140001b25
   140001b21:	mov    QWORD PTR [rbx+0x10],rdi
   140001b25:	mov    rdx,QWORD PTR [rsi+0x8]
   140001b29:	cmp    QWORD PTR [rdx],rbp
   140001b2c:	jne    0x140001b5f
   140001b2e:	cmp    BYTE PTR [rdi+0x21],0x0
   140001b32:	je     0x140001b39
   140001b34:	mov    rcx,rbx
   140001b37:	jmp    0x140001b5c
   140001b39:	mov    rax,QWORD PTR [rdi]
   140001b3c:	mov    rcx,rdi
   140001b3f:	cmp    BYTE PTR [rax+0x21],0x0
   140001b43:	jne    0x140001b5c
   140001b45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001b50:	mov    rcx,rax
   140001b53:	mov    rax,QWORD PTR [rax]
   140001b56:	cmp    BYTE PTR [rax+0x21],0x0
   140001b5a:	je     0x140001b50
   140001b5c:	mov    QWORD PTR [rdx],rcx
   140001b5f:	mov    rdx,QWORD PTR [rsi+0x8]
   140001b63:	cmp    QWORD PTR [rdx+0x10],rbp
   140001b67:	jne    0x140001c0f
   140001b6d:	cmp    BYTE PTR [rdi+0x21],0x0
   140001b71:	je     0x140001b7f
   140001b73:	mov    rcx,rbx
   140001b76:	mov    QWORD PTR [rdx+0x10],rbx
   140001b7a:	jmp    0x140001c0f
   140001b7f:	mov    rax,QWORD PTR [rdi+0x10]
   140001b83:	mov    rcx,rdi
   140001b86:	cmp    BYTE PTR [rax+0x21],0x0
   140001b8a:	jne    0x140001b9d
   140001b8c:	nop    DWORD PTR [rax+0x0]
   140001b90:	mov    rcx,rax
   140001b93:	mov    rax,QWORD PTR [rax+0x10]
   140001b97:	cmp    BYTE PTR [rax+0x21],0x0
   140001b9b:	je     0x140001b90
   140001b9d:	mov    QWORD PTR [rdx+0x10],rcx
   140001ba1:	jmp    0x140001c0f
   140001ba3:	mov    QWORD PTR [rcx+0x8],rdx
   140001ba7:	mov    rax,QWORD PTR [rbp+0x0]
   140001bab:	mov    QWORD PTR [rdx],rax
   140001bae:	cmp    rdx,QWORD PTR [r9]
   140001bb1:	jne    0x140001bb8
   140001bb3:	mov    rbx,rdx
   140001bb6:	jmp    0x140001bd7
   140001bb8:	cmp    BYTE PTR [rdi+0x21],0x0
   140001bbc:	mov    rbx,QWORD PTR [rdx+0x8]
   140001bc0:	jne    0x140001bc6
   140001bc2:	mov    QWORD PTR [rdi+0x8],rbx
   140001bc6:	mov    QWORD PTR [rbx],rdi
   140001bc9:	mov    rax,QWORD PTR [r9]
   140001bcc:	mov    QWORD PTR [rdx+0x10],rax
   140001bd0:	mov    rax,QWORD PTR [r9]
   140001bd3:	mov    QWORD PTR [rax+0x8],rdx
   140001bd7:	mov    rax,QWORD PTR [rsi+0x8]
   140001bdb:	cmp    QWORD PTR [rax+0x8],rbp
   140001bdf:	jne    0x140001be7
   140001be1:	mov    QWORD PTR [rax+0x8],rdx
   140001be5:	jmp    0x140001bf9
   140001be7:	mov    rax,QWORD PTR [rbp+0x8]
   140001beb:	cmp    QWORD PTR [rax],rbp
   140001bee:	jne    0x140001bf5
   140001bf0:	mov    QWORD PTR [rax],rdx
   140001bf3:	jmp    0x140001bf9
   140001bf5:	mov    QWORD PTR [rax+0x10],rdx
   140001bf9:	mov    rax,QWORD PTR [rbp+0x8]
   140001bfd:	mov    QWORD PTR [rdx+0x8],rax
   140001c01:	movzx  eax,BYTE PTR [rbp+0x20]
   140001c05:	movzx  ecx,BYTE PTR [rdx+0x20]
   140001c09:	mov    BYTE PTR [rdx+0x20],al
   140001c0c:	mov    BYTE PTR [rbp+0x20],cl
   140001c0f:	cmp    BYTE PTR [rbp+0x20],0x1
   140001c13:	jne    0x140001d5f
   140001c19:	mov    rax,QWORD PTR [rsi+0x8]
   140001c1d:	cmp    rdi,QWORD PTR [rax+0x8]
   140001c21:	je     0x140001d5b
   140001c27:	nop    WORD PTR [rax+rax*1+0x0]
   140001c30:	cmp    BYTE PTR [rdi+0x20],0x1
   140001c34:	jne    0x140001d5b
   140001c3a:	mov    rcx,QWORD PTR [rbx]
   140001c3d:	cmp    rdi,rcx
   140001c40:	jne    0x140001ccb
   140001c46:	mov    rcx,QWORD PTR [rbx+0x10]
   140001c4a:	cmp    BYTE PTR [rcx+0x20],0x0
   140001c4e:	jne    0x140001c67
   140001c50:	mov    BYTE PTR [rcx+0x20],0x1
   140001c54:	mov    rdx,rbx
   140001c57:	mov    rcx,rsi
   140001c5a:	mov    BYTE PTR [rbx+0x20],0x0
   140001c5e:	call   0x140001e70
   140001c63:	mov    rcx,QWORD PTR [rbx+0x10]
   140001c67:	cmp    BYTE PTR [rcx+0x21],0x0
   140001c6b:	jne    0x140001d04
   140001c71:	mov    rax,QWORD PTR [rcx]
   140001c74:	cmp    BYTE PTR [rax+0x20],0x1
   140001c78:	jne    0x140001c84
   140001c7a:	mov    rax,QWORD PTR [rcx+0x10]
   140001c7e:	cmp    BYTE PTR [rax+0x20],0x1
   140001c82:	je     0x140001d00
   140001c84:	mov    rax,QWORD PTR [rcx+0x10]
   140001c88:	cmp    BYTE PTR [rax+0x20],0x1
   140001c8c:	jne    0x140001ca8
   140001c8e:	mov    rax,QWORD PTR [rcx]
   140001c91:	mov    rdx,rcx
   140001c94:	mov    BYTE PTR [rax+0x20],0x1
   140001c98:	mov    BYTE PTR [rcx+0x20],0x0
   140001c9c:	mov    rcx,rsi
   140001c9f:	call   0x140001ed0
   140001ca4:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ca8:	movzx  eax,BYTE PTR [rbx+0x20]
   140001cac:	mov    rdx,rbx
   140001caf:	mov    BYTE PTR [rcx+0x20],al
   140001cb2:	mov    BYTE PTR [rbx+0x20],0x1
   140001cb6:	mov    rax,QWORD PTR [rcx+0x10]
   140001cba:	mov    rcx,rsi
   140001cbd:	mov    BYTE PTR [rax+0x20],0x1
   140001cc1:	call   0x140001e70
   140001cc6:	jmp    0x140001d5b
   140001ccb:	cmp    BYTE PTR [rcx+0x20],0x0
   140001ccf:	jne    0x140001ce7
   140001cd1:	mov    BYTE PTR [rcx+0x20],0x1
   140001cd5:	mov    rdx,rbx
   140001cd8:	mov    rcx,rsi
   140001cdb:	mov    BYTE PTR [rbx+0x20],0x0
   140001cdf:	call   0x140001ed0
   140001ce4:	mov    rcx,QWORD PTR [rbx]
   140001ce7:	cmp    BYTE PTR [rcx+0x21],0x0
   140001ceb:	jne    0x140001d04
   140001ced:	mov    rax,QWORD PTR [rcx+0x10]
   140001cf1:	cmp    BYTE PTR [rax+0x20],0x1
   140001cf5:	jne    0x140001d1b
   140001cf7:	mov    rax,QWORD PTR [rcx]
   140001cfa:	cmp    BYTE PTR [rax+0x20],0x1
   140001cfe:	jne    0x140001d1b
   140001d00:	mov    BYTE PTR [rcx+0x20],0x0
   140001d04:	mov    rax,QWORD PTR [rsi+0x8]
   140001d08:	mov    rdi,rbx
   140001d0b:	mov    rbx,QWORD PTR [rbx+0x8]
   140001d0f:	cmp    rdi,QWORD PTR [rax+0x8]
   140001d13:	jne    0x140001c30
   140001d19:	jmp    0x140001d5b
   140001d1b:	mov    rax,QWORD PTR [rcx]
   140001d1e:	cmp    BYTE PTR [rax+0x20],0x1
   140001d22:	jne    0x140001d3e
   140001d24:	mov    rax,QWORD PTR [rcx+0x10]
   140001d28:	mov    rdx,rcx
   140001d2b:	mov    BYTE PTR [rax+0x20],0x1
   140001d2f:	mov    BYTE PTR [rcx+0x20],0x0
   140001d33:	mov    rcx,rsi
   140001d36:	call   0x140001e70
   140001d3b:	mov    rcx,QWORD PTR [rbx]
   140001d3e:	movzx  eax,BYTE PTR [rbx+0x20]
   140001d42:	mov    rdx,rbx
   140001d45:	mov    BYTE PTR [rcx+0x20],al
   140001d48:	mov    BYTE PTR [rbx+0x20],0x1
   140001d4c:	mov    rax,QWORD PTR [rcx]
   140001d4f:	mov    rcx,rsi
   140001d52:	mov    BYTE PTR [rax+0x20],0x1
   140001d56:	call   0x140001ed0
   140001d5b:	mov    BYTE PTR [rdi+0x20],0x1
   140001d5f:	mov    rcx,rbp
   140001d62:	call   0x1400330c0
   140001d67:	mov    rax,QWORD PTR [rsi+0x10]
   140001d6b:	mov    rdi,QWORD PTR [rsp+0x20]
   140001d70:	mov    rbp,QWORD PTR [rsp+0x48]
   140001d75:	mov    rbx,QWORD PTR [rsp+0x40]
   140001d7a:	test   rax,rax
   140001d7d:	je     0x140001d86
   140001d7f:	dec    rax
   140001d82:	mov    QWORD PTR [rsi+0x10],rax
   140001d86:	mov    rax,QWORD PTR [rsp+0x50]
   140001d8b:	mov    QWORD PTR [r12],rax
   140001d8f:	mov    rax,r12
   140001d92:	add    rsp,0x28
   140001d96:	pop    r12
   140001d98:	pop    rsi
   140001d99:	ret    
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    QWORD PTR [rsp+0x8],rbx
   140001da5:	mov    QWORD PTR [rsp+0x10],rsi
   140001daa:	push   rdi
   140001dab:	sub    rsp,0x20
   140001daf:	mov    rax,QWORD PTR [rcx+0x8]
   140001db3:	mov    rbx,rcx
   140001db6:	mov    rsi,QWORD PTR [rax+0x8]
   140001dba:	mov    rdi,rsi
   140001dbd:	cmp    BYTE PTR [rsi+0x21],0x0
   140001dc1:	jne    0x140001de3
   140001dc3:	mov    rdx,QWORD PTR [rdi+0x10]
   140001dc7:	mov    rcx,rbx
   140001dca:	call   0x140001e20
   140001dcf:	mov    rdi,QWORD PTR [rdi]
   140001dd2:	mov    rcx,rsi
   140001dd5:	call   0x1400330c0
   140001dda:	cmp    BYTE PTR [rdi+0x21],0x0
   140001dde:	mov    rsi,rdi
   140001de1:	je     0x140001dc3
   140001de3:	mov    rax,QWORD PTR [rbx+0x8]
   140001de7:	mov    rsi,QWORD PTR [rsp+0x38]
   140001dec:	mov    QWORD PTR [rax+0x8],rax
   140001df0:	mov    rax,QWORD PTR [rbx+0x8]
   140001df4:	mov    QWORD PTR [rax],rax
   140001df7:	mov    rax,QWORD PTR [rbx+0x8]
   140001dfb:	mov    QWORD PTR [rax+0x10],rax
   140001dff:	mov    QWORD PTR [rbx+0x10],0x0
   140001e07:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e0c:	add    rsp,0x20
   140001e10:	pop    rdi
   140001e11:	ret    
   140001e12:	int3   
   140001e13:	int3   
   140001e14:	int3   
   140001e15:	int3   
   140001e16:	int3   
   140001e17:	int3   
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	mov    QWORD PTR [rsp+0x10],rsi
   140001e2a:	push   rdi
   140001e2b:	sub    rsp,0x20
   140001e2f:	cmp    BYTE PTR [rdx+0x21],0x0
   140001e33:	mov    rdi,rdx
   140001e36:	mov    rsi,rcx
   140001e39:	mov    rbx,rdx
   140001e3c:	jne    0x140001e60
   140001e3e:	xchg   ax,ax
   140001e40:	mov    rdx,QWORD PTR [rbx+0x10]
   140001e44:	mov    rcx,rsi
   140001e47:	call   0x140001e20
   140001e4c:	mov    rbx,QWORD PTR [rbx]
   140001e4f:	mov    rcx,rdi
   140001e52:	call   0x1400330c0
   140001e57:	cmp    BYTE PTR [rbx+0x21],0x0
   140001e5b:	mov    rdi,rbx
   140001e5e:	je     0x140001e40
   140001e60:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e65:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e6a:	add    rsp,0x20
   140001e6e:	pop    rdi
   140001e6f:	ret    
   140001e70:	mov    r8,QWORD PTR [rdx+0x10]
   140001e74:	mov    rax,QWORD PTR [r8]
   140001e77:	mov    QWORD PTR [rdx+0x10],rax
   140001e7b:	mov    rax,QWORD PTR [r8]
   140001e7e:	cmp    BYTE PTR [rax+0x21],0x0
   140001e82:	jne    0x140001e88
   140001e84:	mov    QWORD PTR [rax+0x8],rdx
   140001e88:	mov    rax,QWORD PTR [rdx+0x8]
   140001e8c:	mov    QWORD PTR [r8+0x8],rax
   140001e90:	mov    rax,QWORD PTR [rcx+0x8]
   140001e94:	cmp    rdx,QWORD PTR [rax+0x8]
   140001e98:	jne    0x140001ea6
   140001e9a:	mov    QWORD PTR [rax+0x8],r8
   140001e9e:	mov    QWORD PTR [r8],rdx
   140001ea1:	mov    QWORD PTR [rdx+0x8],r8
   140001ea5:	ret    
   140001ea6:	mov    rax,QWORD PTR [rdx+0x8]
   140001eaa:	cmp    rdx,QWORD PTR [rax]
   140001ead:	jne    0x140001eba
   140001eaf:	mov    QWORD PTR [rax],r8
   140001eb2:	mov    QWORD PTR [r8],rdx
   140001eb5:	mov    QWORD PTR [rdx+0x8],r8
   140001eb9:	ret    
   140001eba:	mov    QWORD PTR [rax+0x10],r8
   140001ebe:	mov    QWORD PTR [r8],rdx
   140001ec1:	mov    QWORD PTR [rdx+0x8],r8
   140001ec5:	ret    
   140001ec6:	int3   
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    r8,QWORD PTR [rdx]
   140001ed3:	mov    rax,QWORD PTR [r8+0x10]
   140001ed7:	mov    QWORD PTR [rdx],rax
   140001eda:	mov    rax,QWORD PTR [r8+0x10]
   140001ede:	cmp    BYTE PTR [rax+0x21],0x0
   140001ee2:	jne    0x140001ee8
   140001ee4:	mov    QWORD PTR [rax+0x8],rdx
   140001ee8:	mov    rax,QWORD PTR [rdx+0x8]
   140001eec:	mov    QWORD PTR [r8+0x8],rax
   140001ef0:	mov    rax,QWORD PTR [rcx+0x8]
   140001ef4:	cmp    rdx,QWORD PTR [rax+0x8]
   140001ef8:	jne    0x140001f07
   140001efa:	mov    QWORD PTR [rax+0x8],r8
   140001efe:	mov    QWORD PTR [r8+0x10],rdx
   140001f02:	mov    QWORD PTR [rdx+0x8],r8
   140001f06:	ret    
   140001f07:	mov    rax,QWORD PTR [rdx+0x8]
   140001f0b:	cmp    rdx,QWORD PTR [rax+0x10]
   140001f0f:	jne    0x140001f1e
   140001f11:	mov    QWORD PTR [rax+0x10],r8
   140001f15:	mov    QWORD PTR [r8+0x10],rdx
   140001f19:	mov    QWORD PTR [rdx+0x8],r8
   140001f1d:	ret    
   140001f1e:	mov    QWORD PTR [rax],r8
   140001f21:	mov    QWORD PTR [r8+0x10],rdx
   140001f25:	mov    QWORD PTR [rdx+0x8],r8
   140001f29:	ret    
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	rex push rbx
   140001f32:	sub    rsp,0x20
   140001f36:	mov    rbx,rcx
   140001f39:	call   0x140033094
   140001f3e:	lea    r11,[rip+0x6694b]        # 0x140068890
   140001f45:	mov    QWORD PTR [rbx],r11
   140001f48:	mov    rax,rbx
   140001f4b:	add    rsp,0x20
   140001f4f:	pop    rbx
   140001f50:	ret    
   140001f51:	int3   
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	rex push rbx
   140001f62:	sub    rsp,0x40
   140001f66:	cmp    QWORD PTR [rcx+0x10],0x0
   140001f6b:	mov    r10,r9
   140001f6e:	mov    rbx,rdx
   140001f71:	mov    r11,rcx
   140001f74:	jne    0x140001f90
   140001f76:	mov    QWORD PTR [rsp+0x20],r9
   140001f7b:	mov    r9,QWORD PTR [rcx+0x8]
   140001f7f:	mov    r8b,0x1
   140001f82:	call   0x140002290
   140001f87:	mov    rax,rbx
   140001f8a:	add    rsp,0x40
   140001f8e:	pop    rbx
   140001f8f:	ret    
   140001f90:	mov    rcx,QWORD PTR [rcx+0x8]
   140001f94:	mov    QWORD PTR [rsp+0x50],rsi
   140001f99:	cmp    r8,QWORD PTR [rcx]
   140001f9c:	jne    0x140001fcd
   140001f9e:	mov    eax,DWORD PTR [r8+0x18]
   140001fa2:	cmp    DWORD PTR [r9+0x18],eax
   140001fa6:	jge    0x14000214b
   140001fac:	mov    QWORD PTR [rsp+0x20],r9
   140001fb1:	mov    r9,r8
   140001fb4:	mov    rcx,r11
   140001fb7:	mov    r8b,0x1
   140001fba:	call   0x140002290
   140001fbf:	mov    rsi,QWORD PTR [rsp+0x50]
   140001fc4:	mov    rax,rbx
   140001fc7:	add    rsp,0x40
   140001fcb:	pop    rbx
   140001fcc:	ret    
   140001fcd:	cmp    r8,rcx
   140001fd0:	jne    0x140002002
   140001fd2:	mov    r9,QWORD PTR [rcx+0x10]
   140001fd6:	mov    eax,DWORD PTR [r10+0x18]
   140001fda:	cmp    DWORD PTR [r9+0x18],eax
   140001fde:	jge    0x14000214b
   140001fe4:	xor    r8d,r8d
   140001fe7:	mov    rcx,r11
   140001fea:	mov    QWORD PTR [rsp+0x20],r10
   140001fef:	call   0x140002290
   140001ff4:	mov    rsi,QWORD PTR [rsp+0x50]
   140001ff9:	mov    rax,rbx
   140001ffc:	add    rsp,0x40
   140002000:	pop    rbx
   140002001:	ret    
   140002002:	mov    esi,DWORD PTR [r9+0x18]
   140002006:	cmp    DWORD PTR [r8+0x18],esi
   14000200a:	jle    0x1400020b9
   140002010:	cmp    BYTE PTR [r8+0x21],0x0
   140002015:	mov    rax,r8
   140002018:	je     0x140002020
   14000201a:	mov    r9,QWORD PTR [r8+0x10]
   14000201e:	jmp    0x14000207d
   140002020:	mov    r9,QWORD PTR [r8]
   140002023:	cmp    BYTE PTR [r9+0x21],0x0
   140002028:	jne    0x14000204f
   14000202a:	mov    rax,QWORD PTR [r9+0x10]
   14000202e:	cmp    BYTE PTR [rax+0x21],0x0
   140002032:	jne    0x14000207d
   140002034:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002040:	mov    r9,rax
   140002043:	mov    rax,QWORD PTR [rax+0x10]
   140002047:	cmp    BYTE PTR [rax+0x21],0x0
   14000204b:	je     0x140002040
   14000204d:	jmp    0x14000207d
   14000204f:	mov    rdx,QWORD PTR [r8+0x8]
   140002053:	cmp    BYTE PTR [rdx+0x21],0x0
   140002057:	jne    0x140002072
   140002059:	nop    DWORD PTR [rax+0x0]
   140002060:	cmp    rax,QWORD PTR [rdx]
   140002063:	jne    0x140002072
   140002065:	mov    rax,rdx
   140002068:	mov    rdx,QWORD PTR [rdx+0x8]
   14000206c:	cmp    BYTE PTR [rdx+0x21],0x0
   140002070:	je     0x140002060
   140002072:	cmp    BYTE PTR [rax+0x21],0x0
   140002076:	mov    r9,rax
   140002079:	cmove  r9,rdx
   14000207d:	cmp    DWORD PTR [r9+0x18],esi
   140002081:	jge    0x1400020b5
   140002083:	mov    rax,QWORD PTR [r9+0x10]
   140002087:	mov    QWORD PTR [rsp+0x20],r10
   14000208c:	mov    rdx,rbx
   14000208f:	cmp    BYTE PTR [rax+0x21],0x0
   140002093:	mov    rcx,r11
   140002096:	jne    0x140002135
   14000209c:	mov    r9,r8
   14000209f:	mov    r8b,0x1
   1400020a2:	call   0x140002290
   1400020a7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400020ac:	mov    rax,rbx
   1400020af:	add    rsp,0x40
   1400020b3:	pop    rbx
   1400020b4:	ret    
   1400020b5:	cmp    DWORD PTR [r8+0x18],esi
   1400020b9:	jge    0x14000214b
   1400020bf:	cmp    BYTE PTR [r8+0x21],0x0
   1400020c4:	mov    r9,r8
   1400020c7:	jne    0x14000210e
   1400020c9:	mov    rax,QWORD PTR [r8+0x10]
   1400020cd:	cmp    BYTE PTR [rax+0x21],0x0
   1400020d1:	jne    0x1400020ee
   1400020d3:	mov    r9,rax
   1400020d6:	mov    rax,QWORD PTR [rax]
   1400020d9:	cmp    BYTE PTR [rax+0x21],0x0
   1400020dd:	jne    0x14000210e
   1400020df:	nop
   1400020e0:	mov    r9,rax
   1400020e3:	mov    rax,QWORD PTR [rax]
   1400020e6:	cmp    BYTE PTR [rax+0x21],0x0
   1400020ea:	je     0x1400020e0
   1400020ec:	jmp    0x14000210e
   1400020ee:	mov    rax,QWORD PTR [r8+0x8]
   1400020f2:	cmp    BYTE PTR [rax+0x21],0x0
   1400020f6:	jne    0x14000210b
   1400020f8:	cmp    r9,QWORD PTR [rax+0x10]
   1400020fc:	jne    0x14000210b
   1400020fe:	mov    r9,rax
   140002101:	mov    rax,QWORD PTR [rax+0x8]
   140002105:	cmp    BYTE PTR [rax+0x21],0x0
   140002109:	je     0x1400020f8
   14000210b:	mov    r9,rax
   14000210e:	cmp    r9,rcx
   140002111:	je     0x140002119
   140002113:	cmp    esi,DWORD PTR [r9+0x18]
   140002117:	jge    0x14000214b
   140002119:	mov    rax,QWORD PTR [r8+0x10]
   14000211d:	mov    QWORD PTR [rsp+0x20],r10
   140002122:	mov    rdx,rbx
   140002125:	cmp    BYTE PTR [rax+0x21],0x0
   140002129:	mov    rcx,r11
   14000212c:	je     0x14000209f
   140002132:	mov    r9,r8
   140002135:	xor    r8d,r8d
   140002138:	call   0x140002290
   14000213d:	mov    rsi,QWORD PTR [rsp+0x50]
   140002142:	mov    rax,rbx
   140002145:	add    rsp,0x40
   140002149:	pop    rbx
   14000214a:	ret    
   14000214b:	lea    rdx,[rsp+0x30]
   140002150:	mov    r8,r10
   140002153:	mov    rcx,r11
   140002156:	call   0x140002170
   14000215b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002160:	mov    rcx,QWORD PTR [rax]
   140002163:	mov    rax,rbx
   140002166:	mov    QWORD PTR [rbx],rcx
   140002169:	add    rsp,0x40
   14000216d:	pop    rbx
   14000216e:	ret    
   14000216f:	int3   
   140002170:	mov    QWORD PTR [rsp+0x10],rbx
   140002175:	push   rdi
   140002176:	sub    rsp,0x30
   14000217a:	mov    r9,QWORD PTR [rcx+0x8]
   14000217e:	mov    r11,r8
   140002181:	mov    rdi,rdx
   140002184:	mov    rax,QWORD PTR [r9+0x8]
   140002188:	mov    r8b,0x1
   14000218b:	cmp    BYTE PTR [rax+0x21],0x0
   14000218f:	jne    0x1400021bf
   140002191:	mov    r10d,DWORD PTR [r11+0x18]
   140002195:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400021a0:	cmp    r10d,DWORD PTR [rax+0x18]
   1400021a4:	mov    r9,rax
   1400021a7:	setl   r8b
   1400021ab:	test   r8b,r8b
   1400021ae:	je     0x1400021b5
   1400021b0:	mov    rax,QWORD PTR [rax]
   1400021b3:	jmp    0x1400021b9
   1400021b5:	mov    rax,QWORD PTR [rax+0x10]
   1400021b9:	cmp    BYTE PTR [rax+0x21],0x0
   1400021bd:	je     0x1400021a0
   1400021bf:	mov    rbx,r9
   1400021c2:	test   r8b,r8b
   1400021c5:	je     0x14000225a
   1400021cb:	mov    rax,QWORD PTR [rcx+0x8]
   1400021cf:	cmp    r9,QWORD PTR [rax]
   1400021d2:	jne    0x1400021fe
   1400021d4:	mov    r8b,0x1
   1400021d7:	lea    rdx,[rsp+0x40]
   1400021dc:	mov    QWORD PTR [rsp+0x20],r11
   1400021e1:	call   0x140002290
   1400021e6:	mov    BYTE PTR [rdi+0x8],0x1
   1400021ea:	mov    rcx,QWORD PTR [rax]
   1400021ed:	mov    rax,rdi
   1400021f0:	mov    QWORD PTR [rdi],rcx
   1400021f3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400021f8:	add    rsp,0x30
   1400021fc:	pop    rdi
   1400021fd:	ret    
   1400021fe:	cmp    BYTE PTR [r9+0x21],0x0
   140002203:	je     0x14000220b
   140002205:	mov    rbx,QWORD PTR [r9+0x10]
   140002209:	jmp    0x14000225a
   14000220b:	mov    rax,QWORD PTR [r9]
   14000220e:	cmp    BYTE PTR [rax+0x21],0x0
   140002212:	jne    0x140002230
   140002214:	mov    rbx,rax
   140002217:	mov    rax,QWORD PTR [rax+0x10]
   14000221b:	cmp    BYTE PTR [rax+0x21],0x0
   14000221f:	jne    0x14000225a
   140002221:	mov    rbx,rax
   140002224:	mov    rax,QWORD PTR [rax+0x10]
   140002228:	cmp    BYTE PTR [rax+0x21],0x0
   14000222c:	je     0x140002221
   14000222e:	jmp    0x14000225a
   140002230:	mov    rax,QWORD PTR [r9+0x8]
   140002234:	cmp    BYTE PTR [rax+0x21],0x0
   140002238:	jne    0x140002252
   14000223a:	nop    WORD PTR [rax+rax*1+0x0]
   140002240:	cmp    rbx,QWORD PTR [rax]
   140002243:	jne    0x140002252
   140002245:	mov    rbx,rax
   140002248:	mov    rax,QWORD PTR [rax+0x8]
   14000224c:	cmp    BYTE PTR [rax+0x21],0x0
   140002250:	je     0x140002240
   140002252:	cmp    BYTE PTR [rbx+0x21],0x0
   140002256:	cmove  rbx,rax
   14000225a:	mov    eax,DWORD PTR [r11+0x18]
   14000225e:	cmp    DWORD PTR [rbx+0x18],eax
   140002261:	jl     0x1400021d7
   140002267:	mov    rcx,r11
   14000226a:	call   0x1400330c0
   14000226f:	mov    QWORD PTR [rdi],rbx
   140002272:	mov    rbx,QWORD PTR [rsp+0x48]
   140002277:	mov    BYTE PTR [rdi+0x8],0x0
   14000227b:	mov    rax,rdi
   14000227e:	add    rsp,0x30
   140002282:	pop    rdi
   140002283:	ret    
   140002284:	int3   
   140002285:	int3   
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	rex push rbx
   140002292:	sub    rsp,0x20
   140002296:	mov    rax,QWORD PTR [rcx+0x10]
   14000229a:	mov    r10,rcx
   14000229d:	movabs rcx,0x1ffffffffffffffe
   1400022a7:	mov    rbx,rdx
   1400022aa:	cmp    rax,rcx
   1400022ad:	jb     0x1400022c6
   1400022af:	mov    rcx,QWORD PTR [rsp+0x50]
   1400022b4:	call   0x1400330c0
   1400022b9:	lea    rcx,[rip+0x69010]        # 0x14006b2d0
   1400022c0:	call   0x140032d00
   1400022c5:	int3   
   1400022c6:	mov    r11,QWORD PTR [rsp+0x50]
   1400022cb:	inc    rax
   1400022ce:	mov    QWORD PTR [r10+0x10],rax
   1400022d2:	mov    QWORD PTR [r11+0x8],r9
   1400022d6:	mov    rax,QWORD PTR [r10+0x8]
   1400022da:	cmp    r9,rax
   1400022dd:	jne    0x1400022f0
   1400022df:	mov    QWORD PTR [rax+0x8],r11
   1400022e3:	mov    rax,QWORD PTR [r10+0x8]
   1400022e7:	mov    QWORD PTR [rax],r11
   1400022ea:	mov    rax,QWORD PTR [r10+0x8]
   1400022ee:	jmp    0x140002314
   1400022f0:	test   r8b,r8b
   1400022f3:	je     0x140002306
   1400022f5:	mov    QWORD PTR [r9],r11
   1400022f8:	mov    rax,QWORD PTR [r10+0x8]
   1400022fc:	cmp    r9,QWORD PTR [rax]
   1400022ff:	jne    0x140002318
   140002301:	mov    QWORD PTR [rax],r11
   140002304:	jmp    0x140002318
   140002306:	mov    QWORD PTR [r9+0x10],r11
   14000230a:	mov    rax,QWORD PTR [r10+0x8]
   14000230e:	cmp    r9,QWORD PTR [rax+0x10]
   140002312:	jne    0x140002318
   140002314:	mov    QWORD PTR [rax+0x10],r11
   140002318:	mov    rax,QWORD PTR [r11+0x8]
   14000231c:	mov    rdx,r11
   14000231f:	cmp    BYTE PTR [rax+0x20],0x0
   140002323:	jne    0x14000250a
   140002329:	nop    DWORD PTR [rax+0x0]
   140002330:	mov    rax,QWORD PTR [rdx+0x8]
   140002334:	mov    rcx,QWORD PTR [rax+0x8]
   140002338:	cmp    rax,QWORD PTR [rcx]
   14000233b:	jne    0x140002418
   140002341:	mov    r8,QWORD PTR [rcx+0x10]
   140002345:	cmp    BYTE PTR [r8+0x20],0x0
   14000234a:	je     0x140002422
   140002350:	cmp    rdx,QWORD PTR [rax+0x10]
   140002354:	jne    0x1400023a2
   140002356:	mov    rcx,QWORD PTR [rax+0x10]
   14000235a:	mov    rdx,rax
   14000235d:	mov    rax,QWORD PTR [rcx]
   140002360:	mov    QWORD PTR [rdx+0x10],rax
   140002364:	mov    rax,QWORD PTR [rcx]
   140002367:	cmp    BYTE PTR [rax+0x21],0x0
   14000236b:	jne    0x140002371
   14000236d:	mov    QWORD PTR [rax+0x8],rdx
   140002371:	mov    rax,QWORD PTR [rdx+0x8]
   140002375:	mov    QWORD PTR [rcx+0x8],rax
   140002379:	mov    rax,QWORD PTR [r10+0x8]
   14000237d:	cmp    rdx,QWORD PTR [rax+0x8]
   140002381:	jne    0x140002389
   140002383:	mov    QWORD PTR [rax+0x8],rcx
   140002387:	jmp    0x14000239b
   140002389:	mov    rax,QWORD PTR [rdx+0x8]
   14000238d:	cmp    rdx,QWORD PTR [rax]
   140002390:	jne    0x140002397
   140002392:	mov    QWORD PTR [rax],rcx
   140002395:	jmp    0x14000239b
   140002397:	mov    QWORD PTR [rax+0x10],rcx
   14000239b:	mov    QWORD PTR [rcx],rdx
   14000239e:	mov    QWORD PTR [rdx+0x8],rcx
   1400023a2:	mov    rax,QWORD PTR [rdx+0x8]
   1400023a6:	mov    BYTE PTR [rax+0x20],0x1
   1400023aa:	mov    rax,QWORD PTR [rdx+0x8]
   1400023ae:	mov    rcx,QWORD PTR [rax+0x8]
   1400023b2:	mov    BYTE PTR [rcx+0x20],0x0
   1400023b6:	mov    rax,QWORD PTR [rdx+0x8]
   1400023ba:	mov    rcx,QWORD PTR [rax+0x8]
   1400023be:	mov    r8,QWORD PTR [rcx]
   1400023c1:	mov    rax,QWORD PTR [r8+0x10]
   1400023c5:	mov    QWORD PTR [rcx],rax
   1400023c8:	mov    rax,QWORD PTR [r8+0x10]
   1400023cc:	cmp    BYTE PTR [rax+0x21],0x0
   1400023d0:	jne    0x1400023d6
   1400023d2:	mov    QWORD PTR [rax+0x8],rcx
   1400023d6:	mov    rax,QWORD PTR [rcx+0x8]
   1400023da:	mov    QWORD PTR [r8+0x8],rax
   1400023de:	mov    rax,QWORD PTR [r10+0x8]
   1400023e2:	cmp    rcx,QWORD PTR [rax+0x8]
   1400023e6:	jne    0x1400023f5
   1400023e8:	mov    QWORD PTR [rax+0x8],r8
   1400023ec:	mov    QWORD PTR [r8+0x10],rcx
   1400023f0:	jmp    0x1400024f8
   1400023f5:	mov    rax,QWORD PTR [rcx+0x8]
   1400023f9:	cmp    rcx,QWORD PTR [rax+0x10]
   1400023fd:	jne    0x14000240c
   1400023ff:	mov    QWORD PTR [rax+0x10],r8
   140002403:	mov    QWORD PTR [r8+0x10],rcx
   140002407:	jmp    0x1400024f8
   14000240c:	mov    QWORD PTR [rax],r8
   14000240f:	mov    QWORD PTR [r8+0x10],rcx
   140002413:	jmp    0x1400024f8
   140002418:	mov    r8,QWORD PTR [rcx]
   14000241b:	cmp    BYTE PTR [r8+0x20],0x0
   140002420:	jne    0x140002444
   140002422:	mov    BYTE PTR [rax+0x20],0x1
   140002426:	mov    BYTE PTR [r8+0x20],0x1
   14000242b:	mov    rax,QWORD PTR [rdx+0x8]
   14000242f:	mov    rcx,QWORD PTR [rax+0x8]
   140002433:	mov    BYTE PTR [rcx+0x20],0x0
   140002437:	mov    rax,QWORD PTR [rdx+0x8]
   14000243b:	mov    rdx,QWORD PTR [rax+0x8]
   14000243f:	jmp    0x1400024fc
   140002444:	cmp    rdx,QWORD PTR [rax]
   140002447:	jne    0x140002497
   140002449:	mov    rcx,QWORD PTR [rax]
   14000244c:	mov    rdx,rax
   14000244f:	mov    rax,QWORD PTR [rcx+0x10]
   140002453:	mov    QWORD PTR [rdx],rax
   140002456:	mov    rax,QWORD PTR [rcx+0x10]
   14000245a:	cmp    BYTE PTR [rax+0x21],0x0
   14000245e:	jne    0x140002464
   140002460:	mov    QWORD PTR [rax+0x8],rdx
   140002464:	mov    rax,QWORD PTR [rdx+0x8]
   140002468:	mov    QWORD PTR [rcx+0x8],rax
   14000246c:	mov    rax,QWORD PTR [r10+0x8]
   140002470:	cmp    rdx,QWORD PTR [rax+0x8]
   140002474:	jne    0x14000247c
   140002476:	mov    QWORD PTR [rax+0x8],rcx
   14000247a:	jmp    0x14000248f
   14000247c:	mov    rax,QWORD PTR [rdx+0x8]
   140002480:	cmp    rdx,QWORD PTR [rax+0x10]
   140002484:	jne    0x14000248c
   140002486:	mov    QWORD PTR [rax+0x10],rcx
   14000248a:	jmp    0x14000248f
   14000248c:	mov    QWORD PTR [rax],rcx
   14000248f:	mov    QWORD PTR [rcx+0x10],rdx
   140002493:	mov    QWORD PTR [rdx+0x8],rcx
   140002497:	mov    rax,QWORD PTR [rdx+0x8]
   14000249b:	mov    BYTE PTR [rax+0x20],0x1
   14000249f:	mov    rax,QWORD PTR [rdx+0x8]
   1400024a3:	mov    rcx,QWORD PTR [rax+0x8]
   1400024a7:	mov    BYTE PTR [rcx+0x20],0x0
   1400024ab:	mov    rax,QWORD PTR [rdx+0x8]
   1400024af:	mov    rcx,QWORD PTR [rax+0x8]
   1400024b3:	mov    r8,QWORD PTR [rcx+0x10]
   1400024b7:	mov    rax,QWORD PTR [r8]
   1400024ba:	mov    QWORD PTR [rcx+0x10],rax
   1400024be:	mov    rax,QWORD PTR [r8]
   1400024c1:	cmp    BYTE PTR [rax+0x21],0x0
   1400024c5:	jne    0x1400024cb
   1400024c7:	mov    QWORD PTR [rax+0x8],rcx
   1400024cb:	mov    rax,QWORD PTR [rcx+0x8]
   1400024cf:	mov    QWORD PTR [r8+0x8],rax
   1400024d3:	mov    rax,QWORD PTR [r10+0x8]
   1400024d7:	cmp    rcx,QWORD PTR [rax+0x8]
   1400024db:	jne    0x1400024e3
   1400024dd:	mov    QWORD PTR [rax+0x8],r8
   1400024e1:	jmp    0x1400024f5
   1400024e3:	mov    rax,QWORD PTR [rcx+0x8]
   1400024e7:	cmp    rcx,QWORD PTR [rax]
   1400024ea:	jne    0x1400024f1
   1400024ec:	mov    QWORD PTR [rax],r8
   1400024ef:	jmp    0x1400024f5
   1400024f1:	mov    QWORD PTR [rax+0x10],r8
   1400024f5:	mov    QWORD PTR [r8],rcx
   1400024f8:	mov    QWORD PTR [rcx+0x8],r8
   1400024fc:	mov    rax,QWORD PTR [rdx+0x8]
   140002500:	cmp    BYTE PTR [rax+0x20],0x0
   140002504:	je     0x140002330
   14000250a:	mov    rax,QWORD PTR [r10+0x8]
   14000250e:	mov    QWORD PTR [rbx],r11
   140002511:	mov    rcx,QWORD PTR [rax+0x8]
   140002515:	mov    rax,rbx
   140002518:	mov    BYTE PTR [rcx+0x20],0x1
   14000251c:	add    rsp,0x20
   140002520:	pop    rbx
   140002521:	ret    
   140002522:	int3   
   140002523:	int3   
   140002524:	int3   
   140002525:	int3   
   140002526:	int3   
   140002527:	int3   
   140002528:	int3   
   140002529:	int3   
   14000252a:	int3   
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	rex push rbx
   140002532:	sub    rsp,0x30
   140002536:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000253f:	mov    rbx,rdx
   140002542:	call   0x140002570
   140002547:	mov    QWORD PTR [rsp+0x50],rax
   14000254c:	lea    r8,[rax+0x18]
   140002550:	test   r8,r8
   140002553:	je     0x140002561
   140002555:	mov    ecx,DWORD PTR [rbx]
   140002557:	mov    DWORD PTR [r8],ecx
   14000255a:	mov    ecx,DWORD PTR [rbx+0x4]
   14000255d:	mov    DWORD PTR [r8+0x4],ecx
   140002561:	add    rsp,0x30
   140002565:	pop    rbx
   140002566:	ret    
   140002567:	int3   
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	rex push rbx
   140002572:	sub    rsp,0x40
   140002576:	mov    rbx,rcx
   140002579:	mov    ecx,0x28
   14000257e:	call   0x1400331a0
   140002583:	test   rax,rax
   140002586:	je     0x1400025ab
   140002588:	mov    rdx,QWORD PTR [rbx+0x8]
   14000258c:	mov    QWORD PTR [rax],rdx
   14000258f:	mov    rdx,QWORD PTR [rbx+0x8]
   140002593:	mov    QWORD PTR [rax+0x8],rdx
   140002597:	mov    rcx,QWORD PTR [rbx+0x8]
   14000259b:	mov    WORD PTR [rax+0x20],0x0
   1400025a1:	mov    QWORD PTR [rax+0x10],rcx
   1400025a5:	add    rsp,0x40
   1400025a9:	pop    rbx
   1400025aa:	ret    
   1400025ab:	lea    rdx,[rsp+0x58]
   1400025b0:	lea    rcx,[rsp+0x20]
   1400025b5:	mov    QWORD PTR [rsp+0x58],0x0
   1400025be:	call   0x140032fd4
   1400025c3:	lea    r11,[rip+0x662c6]        # 0x140068890
   1400025ca:	lea    rdx,[rip+0x80e4f]        # 0x140083420
   1400025d1:	lea    rcx,[rsp+0x20]
   1400025d6:	mov    QWORD PTR [rsp+0x20],r11
   1400025db:	call   0x140036358
   1400025e0:	int3   
   1400025e1:	int3   
   1400025e2:	int3   
   1400025e3:	int3   
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	sub    rsp,0x28
   1400025f4:	mov    DWORD PTR [rsp+0x30],ecx
   1400025f8:	lea    rdx,[rip+0x80e79]        # 0x140083478
   1400025ff:	lea    rcx,[rsp+0x30]
   140002604:	call   0x140036358
   140002609:	int3   
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	sub    rsp,0x28
   140002614:	call   QWORD PTR [rip+0x65da6]        # 0x1400683c0
   14000261a:	test   eax,eax
   14000261c:	jle    0x140002626
   14000261e:	movzx  eax,ax
   140002621:	or     eax,0x80070000
   140002626:	mov    ecx,eax
   140002628:	call   0x1400025f0
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rcx
   140002635:	push   rdi
   140002636:	sub    rsp,0x30
   14000263a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002643:	mov    QWORD PTR [rsp+0x48],rbx
   140002648:	mov    edi,edx
   14000264a:	mov    rbx,rcx
   14000264d:	lea    rax,[rip+0x68d14]        # 0x14006b368
   140002654:	mov    QWORD PTR [rcx],rax
   140002657:	mov    rcx,QWORD PTR [rcx+0x150]
   14000265e:	test   rcx,rcx
   140002661:	je     0x140002678
   140002663:	mov    rax,QWORD PTR [rcx]
   140002666:	mov    edx,0x1
   14000266b:	call   QWORD PTR [rax]
   14000266d:	mov    QWORD PTR [rbx+0x150],0x0
   140002678:	mov    rcx,QWORD PTR [rbx+0x40]
   14000267c:	test   rcx,rcx
   14000267f:	je     0x140002687
   140002681:	mov    rax,QWORD PTR [rcx]
   140002684:	call   QWORD PTR [rax+0x10]
   140002687:	test   dil,0x1
   14000268b:	je     0x140002695
   14000268d:	mov    rcx,rbx
   140002690:	call   0x1400330c0
   140002695:	mov    rax,rbx
   140002698:	mov    rbx,QWORD PTR [rsp+0x48]
   14000269d:	add    rsp,0x30
   1400026a1:	pop    rdi
   1400026a2:	ret    
   1400026a3:	int3   
   1400026a4:	int3   
   1400026a5:	int3   
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400026b5:	push   rbx
   1400026b6:	sub    rsp,0x30
   1400026ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400026c3:	mov    rbx,rcx
   1400026c6:	lea    rax,[rip+0x68c9b]        # 0x14006b368
   1400026cd:	mov    QWORD PTR [rcx],rax
   1400026d0:	mov    rcx,QWORD PTR [rcx+0x150]
   1400026d7:	test   rcx,rcx
   1400026da:	je     0x1400026f1
   1400026dc:	mov    rax,QWORD PTR [rcx]
   1400026df:	mov    edx,0x1
   1400026e4:	call   QWORD PTR [rax]
   1400026e6:	mov    QWORD PTR [rbx+0x150],0x0
   1400026f1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400026f5:	test   rcx,rcx
   1400026f8:	je     0x140002700
   1400026fa:	mov    rax,QWORD PTR [rcx]
   1400026fd:	call   QWORD PTR [rax+0x10]
   140002700:	add    rsp,0x30
   140002704:	pop    rbx
   140002705:	ret    
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	rex push rdi
   140002712:	sub    rsp,0x40
   140002716:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000271f:	mov    QWORD PTR [rsp+0x50],rbx
   140002724:	mov    QWORD PTR [rsp+0x58],rbp
   140002729:	mov    QWORD PTR [rsp+0x68],rsi
   14000272e:	mov    rbp,rdx
   140002731:	mov    rdi,rcx
   140002734:	mov    esi,0x80004005
   140002739:	xor    ebx,ebx
   14000273b:	mov    QWORD PTR [rsp+0x60],rbx
   140002740:	lea    rax,[rsp+0x60]
   140002745:	mov    QWORD PTR [rsp+0x20],rax
   14000274a:	lea    r9,[rip+0x68c7f]        # 0x14006b3d0
   140002751:	xor    edx,edx
   140002753:	lea    r8d,[rbx+0x17]
   140002757:	lea    rcx,[rip+0x68c52]        # 0x14006b3b0
   14000275e:	call   QWORD PTR [rip+0x65f14]        # 0x140068678
   140002764:	mov    rcx,QWORD PTR [rsp+0x60]
   140002769:	test   rcx,rcx
   14000276c:	je     0x14000278f
   14000276e:	mov    rax,QWORD PTR [rcx]
   140002771:	mov    rdx,rdi
   140002774:	call   QWORD PTR [rax+0x30]
   140002777:	mov    esi,eax
   140002779:	test   eax,eax
   14000277b:	js     0x14000278a
   14000277d:	mov    rdx,QWORD PTR [rdi]
   140002780:	mov    rcx,rdi
   140002783:	call   QWORD PTR [rdx+0x8]
   140002786:	mov    QWORD PTR [rdi+0x38],rbp
   14000278a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000278f:	test   esi,esi
   140002791:	setns  bl
   140002794:	test   rcx,rcx
   140002797:	je     0x14000279f
   140002799:	mov    rdx,QWORD PTR [rcx]
   14000279c:	call   QWORD PTR [rdx+0x10]
   14000279f:	mov    eax,ebx
   1400027a1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400027a6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400027ab:	mov    rsi,QWORD PTR [rsp+0x68]
   1400027b0:	add    rsp,0x40
   1400027b4:	pop    rdi
   1400027b5:	ret    
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	rex push rdi
   1400027c2:	sub    rsp,0x40
   1400027c6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400027cf:	mov    QWORD PTR [rsp+0x50],rbx
   1400027d4:	mov    QWORD PTR [rsp+0x60],rsi
   1400027d9:	mov    rdi,rcx
   1400027dc:	mov    esi,0x80004005
   1400027e1:	xor    ebx,ebx
   1400027e3:	mov    QWORD PTR [rsp+0x58],rbx
   1400027e8:	lea    rax,[rsp+0x58]
   1400027ed:	mov    QWORD PTR [rsp+0x20],rax
   1400027f2:	lea    r9,[rip+0x68bd7]        # 0x14006b3d0
   1400027f9:	xor    edx,edx
   1400027fb:	lea    r8d,[rbx+0x17]
   1400027ff:	lea    rcx,[rip+0x68baa]        # 0x14006b3b0
   140002806:	call   QWORD PTR [rip+0x65e6c]        # 0x140068678
   14000280c:	mov    rcx,QWORD PTR [rsp+0x58]
   140002811:	test   rcx,rcx
   140002814:	je     0x140002837
   140002816:	mov    rax,QWORD PTR [rcx]
   140002819:	mov    rdx,rdi
   14000281c:	call   QWORD PTR [rax+0x38]
   14000281f:	mov    esi,eax
   140002821:	test   eax,eax
   140002823:	js     0x140002832
   140002825:	mov    rdx,QWORD PTR [rdi]
   140002828:	mov    rcx,rdi
   14000282b:	call   QWORD PTR [rdx+0x10]
   14000282e:	mov    QWORD PTR [rdi+0x38],rbx
   140002832:	mov    rcx,QWORD PTR [rsp+0x58]
   140002837:	test   esi,esi
   140002839:	setns  bl
   14000283c:	test   rcx,rcx
   14000283f:	je     0x140002847
   140002841:	mov    rdx,QWORD PTR [rcx]
   140002844:	call   QWORD PTR [rdx+0x10]
   140002847:	mov    eax,ebx
   140002849:	mov    rbx,QWORD PTR [rsp+0x50]
   14000284e:	mov    rsi,QWORD PTR [rsp+0x60]
   140002853:	add    rsp,0x40
   140002857:	pop    rdi
   140002858:	ret    
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x8],rbx
   140002865:	mov    QWORD PTR [rsp+0x10],rsi
   14000286a:	push   rdi
   14000286b:	sub    rsp,0x40
   14000286f:	cmp    QWORD PTR [rcx+0x38],0x0
   140002874:	mov    rdi,r8
   140002877:	mov    rsi,rdx
   14000287a:	mov    rbx,rcx
   14000287d:	je     0x1400028a9
   14000287f:	mov    rcx,QWORD PTR [rcx+0x38]
   140002883:	mov    rax,QWORD PTR [rcx]
   140002886:	call   QWORD PTR [rax]
   140002888:	mov    eax,DWORD PTR [rdi+0x10]
   14000288b:	mov    rcx,QWORD PTR [rbx+0x38]
   14000288f:	movups xmm0,XMMWORD PTR [rdi]
   140002892:	mov    DWORD PTR [rsp+0x30],eax
   140002896:	mov    rax,QWORD PTR [rcx]
   140002899:	lea    r8,[rsp+0x20]
   14000289e:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400028a3:	mov    rdx,rsi
   1400028a6:	call   QWORD PTR [rax+0x8]
   1400028a9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400028ae:	mov    rsi,QWORD PTR [rsp+0x58]
   1400028b3:	xor    eax,eax
   1400028b5:	add    rsp,0x40
   1400028b9:	pop    rdi
   1400028ba:	ret    
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	sub    rsp,0x28
   1400028c4:	cmp    QWORD PTR [rcx+0x38],0x0
   1400028c9:	je     0x1400028d5
   1400028cb:	mov    rcx,QWORD PTR [rcx+0x38]
   1400028cf:	mov    rax,QWORD PTR [rcx]
   1400028d2:	call   QWORD PTR [rax+0x10]
   1400028d5:	xor    eax,eax
   1400028d7:	add    rsp,0x28
   1400028db:	ret    
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028e5:	push   rdi
   1400028e6:	sub    rsp,0x20
   1400028ea:	lea    r9,[rip+0xffffffffffffd70f]        # 0x140000000
   1400028f1:	mov    rdi,r8
   1400028f4:	mov    rbx,rcx
   1400028f7:	mov    r8,QWORD PTR [r9+0x687c0]
   1400028fe:	cmp    r8,QWORD PTR [rdx]
   140002901:	jne    0x140002914
   140002903:	mov    r8,QWORD PTR [r9+0x687c8]
   14000290a:	cmp    r8,QWORD PTR [rdx+0x8]
   14000290e:	jne    0x140002914
   140002910:	xor    eax,eax
   140002912:	jmp    0x140002919
   140002914:	sbb    eax,eax
   140002916:	sbb    eax,0xffffffff
   140002919:	test   eax,eax
   14000291b:	jne    0x140002933
   14000291d:	mov    rax,QWORD PTR [rcx]
   140002920:	call   QWORD PTR [rax+0x8]
   140002923:	mov    QWORD PTR [rdi],rbx
   140002926:	xor    eax,eax
   140002928:	mov    rbx,QWORD PTR [rsp+0x30]
   14000292d:	add    rsp,0x20
   140002931:	pop    rdi
   140002932:	ret    
   140002933:	mov    rcx,QWORD PTR [r9+0x6b3c0]
   14000293a:	cmp    rcx,QWORD PTR [rdx]
   14000293d:	jne    0x140002950
   14000293f:	mov    rcx,QWORD PTR [r9+0x6b3c8]
   140002946:	cmp    rcx,QWORD PTR [rdx+0x8]
   14000294a:	jne    0x140002950
   14000294c:	xor    eax,eax
   14000294e:	jmp    0x140002955
   140002950:	sbb    eax,eax
   140002952:	sbb    eax,0xffffffff
   140002955:	test   eax,eax
   140002957:	jne    0x140002972
   140002959:	mov    rax,QWORD PTR [rbx]
   14000295c:	mov    rcx,rbx
   14000295f:	call   QWORD PTR [rax+0x8]
   140002962:	mov    QWORD PTR [rdi],rbx
   140002965:	xor    eax,eax
   140002967:	mov    rbx,QWORD PTR [rsp+0x30]
   14000296c:	add    rsp,0x20
   140002970:	pop    rdi
   140002971:	ret    
   140002972:	mov    rbx,QWORD PTR [rsp+0x30]
   140002977:	mov    QWORD PTR [rdi],0x0
   14000297e:	mov    eax,0x80004002
   140002983:	add    rsp,0x20
   140002987:	pop    rdi
   140002988:	ret    
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	sub    rsp,0x28
   140002994:	mov    rcx,QWORD PTR [rcx]
   140002997:	test   rcx,rcx
   14000299a:	je     0x1400029a2
   14000299c:	mov    rax,QWORD PTR [rcx]
   14000299f:	call   QWORD PTR [rax+0x10]
   1400029a2:	add    rsp,0x28
   1400029a6:	ret    
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	sub    rsp,0x28
   1400029b4:	cmp    QWORD PTR [rcx+0x38],0x0
   1400029b9:	je     0x1400029c5
   1400029bb:	mov    rcx,QWORD PTR [rcx+0x38]
   1400029bf:	mov    rax,QWORD PTR [rcx]
   1400029c2:	call   QWORD PTR [rax+0x18]
   1400029c5:	xor    eax,eax
   1400029c7:	add    rsp,0x28
   1400029cb:	ret    
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029d5:	push   rdi
   1400029d6:	sub    rsp,0x20
   1400029da:	mov    rdi,rdx
   1400029dd:	mov    rbx,rcx
   1400029e0:	cmp    rcx,rdx
   1400029e3:	je     0x140002a52
   1400029e5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400029ea:	jb     0x1400029f4
   1400029ec:	mov    rcx,QWORD PTR [rcx]
   1400029ef:	call   0x1400330c0
   1400029f4:	mov    QWORD PTR [rbx+0x18],0xf
   1400029fc:	mov    QWORD PTR [rbx+0x10],0x0
   140002a04:	mov    BYTE PTR [rbx],0x0
   140002a07:	cmp    QWORD PTR [rdi+0x18],0x10
   140002a0c:	jae    0x140002a22
   140002a0e:	mov    r8,QWORD PTR [rdi+0x10]
   140002a12:	mov    rdx,rdi
   140002a15:	mov    rcx,rbx
   140002a18:	inc    r8
   140002a1b:	call   0x140033260
   140002a20:	jmp    0x140002a2f
   140002a22:	mov    rax,QWORD PTR [rdi]
   140002a25:	mov    QWORD PTR [rbx],rax
   140002a28:	mov    QWORD PTR [rdi],0x0
   140002a2f:	mov    rax,QWORD PTR [rdi+0x10]
   140002a33:	mov    QWORD PTR [rbx+0x10],rax
   140002a37:	mov    rax,QWORD PTR [rdi+0x18]
   140002a3b:	mov    QWORD PTR [rbx+0x18],rax
   140002a3f:	mov    QWORD PTR [rdi+0x18],0xf
   140002a47:	mov    QWORD PTR [rdi+0x10],0x0
   140002a4f:	mov    BYTE PTR [rdi],0x0
   140002a52:	mov    rax,rbx
   140002a55:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a5a:	add    rsp,0x20
   140002a5e:	pop    rdi
   140002a5f:	ret    
   140002a60:	cmp    QWORD PTR [rcx+0x18],0x10
   140002a65:	jb     0x140002a6b
   140002a67:	mov    rax,QWORD PTR [rcx]
   140002a6a:	ret    
   140002a6b:	mov    rax,rcx
   140002a6e:	ret    
   140002a6f:	int3   
   140002a70:	mov    QWORD PTR [rsp+0x20],rbp
   140002a75:	push   rsi
   140002a76:	push   rdi
   140002a77:	push   r12
   140002a79:	sub    rsp,0x40
   140002a7d:	mov    r12d,r8d
   140002a80:	mov    rbp,rdx
   140002a83:	mov    rsi,rcx
   140002a86:	test   rdx,rdx
   140002a89:	jne    0x140002a9e
   140002a8b:	xor    edi,edi
   140002a8d:	mov    QWORD PTR [rcx],rdi
   140002a90:	mov    rbp,QWORD PTR [rsp+0x78]
   140002a95:	add    rsp,0x40
   140002a99:	pop    r12
   140002a9b:	pop    rdi
   140002a9c:	pop    rsi
   140002a9d:	ret    
   140002a9e:	mov    QWORD PTR [rsp+0x60],rbx
   140002aa3:	mov    rcx,rdx
   140002aa6:	mov    QWORD PTR [rsp+0x68],r13
   140002aab:	mov    QWORD PTR [rsp+0x70],r14
   140002ab0:	call   QWORD PTR [rip+0x65912]        # 0x1400683c8
   140002ab6:	lea    r8,[rsi+0x8]
   140002aba:	lea    r13d,[rax+0x1]
   140002abe:	mov    rcx,rsi
   140002ac1:	lea    ebx,[r13*4+0x0]
   140002ac9:	mov    edx,ebx
   140002acb:	call   0x140002f80
   140002ad0:	mov    rax,QWORD PTR [rsi]
   140002ad3:	xor    edi,edi
   140002ad5:	mov    QWORD PTR [rsp+0x38],rdi
   140002ada:	mov    QWORD PTR [rsp+0x30],rdi
   140002adf:	mov    r9d,r13d
   140002ae2:	mov    r8,rbp
   140002ae5:	xor    edx,edx
   140002ae7:	mov    ecx,r12d
   140002aea:	mov    DWORD PTR [rsp+0x28],ebx
   140002aee:	mov    QWORD PTR [rsp+0x20],rax
   140002af3:	call   QWORD PTR [rip+0x658df]        # 0x1400683d8
   140002af9:	test   eax,eax
   140002afb:	mov    ebx,edi
   140002afd:	sete   bl
   140002b00:	test   ebx,ebx
   140002b02:	je     0x140002b7b
   140002b04:	call   QWORD PTR [rip+0x658b6]        # 0x1400683c0
   140002b0a:	cmp    eax,0x7a
   140002b0d:	jne    0x140002b71
   140002b0f:	mov    QWORD PTR [rsp+0x38],rdi
   140002b14:	mov    QWORD PTR [rsp+0x30],rdi
   140002b19:	mov    r9d,r13d
   140002b1c:	mov    r8,rbp
   140002b1f:	xor    edx,edx
   140002b21:	mov    ecx,r12d
   140002b24:	mov    DWORD PTR [rsp+0x28],edi
   140002b28:	mov    QWORD PTR [rsp+0x20],rdi
   140002b2d:	call   QWORD PTR [rip+0x658a5]        # 0x1400683d8
   140002b33:	lea    r8,[rsi+0x8]
   140002b37:	mov    rcx,rsi
   140002b3a:	mov    edx,eax
   140002b3c:	mov    ebx,eax
   140002b3e:	call   0x140002f80
   140002b43:	mov    rax,QWORD PTR [rsi]
   140002b46:	mov    QWORD PTR [rsp+0x38],rdi
   140002b4b:	mov    QWORD PTR [rsp+0x30],rdi
   140002b50:	mov    r9d,r13d
   140002b53:	mov    r8,rbp
   140002b56:	xor    edx,edx
   140002b58:	mov    ecx,r12d
   140002b5b:	mov    DWORD PTR [rsp+0x28],ebx
   140002b5f:	mov    QWORD PTR [rsp+0x20],rax
   140002b64:	call   QWORD PTR [rip+0x6586e]        # 0x1400683d8
   140002b6a:	test   eax,eax
   140002b6c:	mov    ebx,edi
   140002b6e:	sete   bl
   140002b71:	test   ebx,ebx
   140002b73:	je     0x140002b7b
   140002b75:	call   0x140002610
   140002b7a:	int3   
   140002b7b:	mov    r13,QWORD PTR [rsp+0x68]
   140002b80:	mov    rbx,QWORD PTR [rsp+0x60]
   140002b85:	mov    r14,QWORD PTR [rsp+0x70]
   140002b8a:	mov    rbp,QWORD PTR [rsp+0x78]
   140002b8f:	add    rsp,0x40
   140002b93:	pop    r12
   140002b95:	pop    rdi
   140002b96:	pop    rsi
   140002b97:	ret    
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ba5:	mov    QWORD PTR [rsp+0x10],rsi
   140002baa:	push   rdi
   140002bab:	sub    rsp,0x20
   140002baf:	mov    rsi,r8
   140002bb2:	mov    rdi,rdx
   140002bb5:	mov    rbx,rcx
   140002bb8:	test   rdx,rdx
   140002bbb:	je     0x140002c17
   140002bbd:	mov    r9,QWORD PTR [rcx+0x18]
   140002bc1:	cmp    r9,0x10
   140002bc5:	jb     0x140002bcc
   140002bc7:	mov    rax,QWORD PTR [rcx]
   140002bca:	jmp    0x140002bcf
   140002bcc:	mov    rax,rcx
   140002bcf:	cmp    rdx,rax
   140002bd2:	jb     0x140002c17
   140002bd4:	cmp    r9,0x10
   140002bd8:	jb     0x140002bdd
   140002bda:	mov    rcx,QWORD PTR [rcx]
   140002bdd:	add    rcx,QWORD PTR [rbx+0x10]
   140002be1:	cmp    rcx,rdx
   140002be4:	jbe    0x140002c17
   140002be6:	cmp    r9,0x10
   140002bea:	jb     0x140002bf1
   140002bec:	mov    rax,QWORD PTR [rbx]
   140002bef:	jmp    0x140002bf4
   140002bf1:	mov    rax,rbx
   140002bf4:	sub    rdi,rax
   140002bf7:	mov    r9,r8
   140002bfa:	mov    rdx,rbx
   140002bfd:	mov    r8,rdi
   140002c00:	mov    rcx,rbx
   140002c03:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c08:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c0d:	add    rsp,0x20
   140002c11:	pop    rdi
   140002c12:	jmp    0x140002c70
   140002c17:	mov    rdx,r8
   140002c1a:	mov    rcx,rbx
   140002c1d:	call   0x140002d30
   140002c22:	test   al,al
   140002c24:	je     0x140002c57
   140002c26:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c2b:	jb     0x140002c32
   140002c2d:	mov    rcx,QWORD PTR [rbx]
   140002c30:	jmp    0x140002c35
   140002c32:	mov    rcx,rbx
   140002c35:	mov    r8,rsi
   140002c38:	mov    rdx,rdi
   140002c3b:	call   0x140033260
   140002c40:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c45:	mov    QWORD PTR [rbx+0x10],rsi
   140002c49:	jb     0x140002c50
   140002c4b:	mov    rax,QWORD PTR [rbx]
   140002c4e:	jmp    0x140002c53
   140002c50:	mov    rax,rbx
   140002c53:	mov    BYTE PTR [rax+rsi*1],0x0
   140002c57:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c5c:	mov    rax,rbx
   140002c5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c64:	add    rsp,0x20
   140002c68:	pop    rdi
   140002c69:	ret    
   140002c6a:	int3   
   140002c6b:	int3   
   140002c6c:	int3   
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	mov    QWORD PTR [rsp+0x8],rbx
   140002c75:	mov    QWORD PTR [rsp+0x10],rbp
   140002c7a:	mov    QWORD PTR [rsp+0x18],rsi
   140002c7f:	push   rdi
   140002c80:	sub    rsp,0x20
   140002c84:	mov    rsi,QWORD PTR [rdx+0x10]
   140002c88:	mov    rbp,r8
   140002c8b:	mov    rdi,rdx
   140002c8e:	mov    rbx,rcx
   140002c91:	cmp    rsi,r8
   140002c94:	jae    0x140002ca3
   140002c96:	lea    rcx,[rip+0x6869b]        # 0x14006b338
   140002c9d:	call   0x140032d5c
   140002ca2:	int3   
   140002ca3:	sub    rsi,r8
   140002ca6:	cmp    r9,rsi
   140002ca9:	cmovb  rsi,r9
   140002cad:	cmp    rcx,rdx
   140002cb0:	jne    0x140002cce
   140002cb2:	lea    rdx,[rsi+r8*1]
   140002cb6:	or     r8,0xffffffffffffffff
   140002cba:	call   0x140002da0
   140002cbf:	mov    r8,rbp
   140002cc2:	xor    edx,edx
   140002cc4:	mov    rcx,rbx
   140002cc7:	call   0x140002da0
   140002ccc:	jmp    0x140002d16
   140002cce:	mov    rdx,rsi
   140002cd1:	call   0x140002d30
   140002cd6:	test   al,al
   140002cd8:	je     0x140002d16
   140002cda:	cmp    QWORD PTR [rdi+0x18],0x10
   140002cdf:	jb     0x140002ce4
   140002ce1:	mov    rdi,QWORD PTR [rdi]
   140002ce4:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ce9:	jb     0x140002cf0
   140002ceb:	mov    rcx,QWORD PTR [rbx]
   140002cee:	jmp    0x140002cf3
   140002cf0:	mov    rcx,rbx
   140002cf3:	lea    rdx,[rdi+rbp*1]
   140002cf7:	mov    r8,rsi
   140002cfa:	call   0x140033260
   140002cff:	cmp    QWORD PTR [rbx+0x18],0x10
   140002d04:	mov    QWORD PTR [rbx+0x10],rsi
   140002d08:	jb     0x140002d0f
   140002d0a:	mov    rax,QWORD PTR [rbx]
   140002d0d:	jmp    0x140002d12
   140002d0f:	mov    rax,rbx
   140002d12:	mov    BYTE PTR [rax+rsi*1],0x0
   140002d16:	mov    rbp,QWORD PTR [rsp+0x38]
   140002d1b:	mov    rsi,QWORD PTR [rsp+0x40]
   140002d20:	mov    rax,rbx
   140002d23:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d28:	add    rsp,0x20
   140002d2c:	pop    rdi
   140002d2d:	ret    
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	rex push rbx
   140002d32:	sub    rsp,0x20
   140002d36:	mov    rbx,rdx
   140002d39:	cmp    rdx,0xfffffffffffffffe
   140002d3d:	jbe    0x140002d4c
   140002d3f:	lea    rcx,[rip+0x6860a]        # 0x14006b350
   140002d46:	call   0x140032d00
   140002d4b:	int3   
   140002d4c:	mov    rax,QWORD PTR [rcx+0x18]
   140002d50:	mov    QWORD PTR [rsp+0x30],rdi
   140002d55:	xor    edi,edi
   140002d57:	cmp    rax,rdx
   140002d5a:	jae    0x140002d76
   140002d5c:	mov    r8,QWORD PTR [rcx+0x10]
   140002d60:	call   0x140002e40
   140002d65:	mov    rdi,QWORD PTR [rsp+0x30]
   140002d6a:	test   rbx,rbx
   140002d6d:	setne  al
   140002d70:	add    rsp,0x20
   140002d74:	pop    rbx
   140002d75:	ret    
   140002d76:	test   rdx,rdx
   140002d79:	jne    0x140002d8b
   140002d7b:	mov    QWORD PTR [rcx+0x10],rdi
   140002d7f:	cmp    rax,0x10
   140002d83:	jb     0x140002d88
   140002d85:	mov    rcx,QWORD PTR [rcx]
   140002d88:	mov    BYTE PTR [rcx],dil
   140002d8b:	mov    rdi,QWORD PTR [rsp+0x30]
   140002d90:	test   rbx,rbx
   140002d93:	setne  al
   140002d96:	add    rsp,0x20
   140002d9a:	pop    rbx
   140002d9b:	ret    
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    QWORD PTR [rsp+0x8],rbx
   140002da5:	push   rdi
   140002da6:	sub    rsp,0x20
   140002daa:	mov    rdi,r8
   140002dad:	mov    r8,QWORD PTR [rcx+0x10]
   140002db1:	mov    r9,rdx
   140002db4:	mov    rbx,rcx
   140002db7:	cmp    r8,rdx
   140002dba:	jae    0x140002dc9
   140002dbc:	lea    rcx,[rip+0x68575]        # 0x14006b338
   140002dc3:	call   0x140032d5c
   140002dc8:	int3   
   140002dc9:	sub    r8,rdx
   140002dcc:	cmp    r8,rdi
   140002dcf:	cmovb  rdi,r8
   140002dd3:	test   rdi,rdi
   140002dd6:	je     0x140002e2f
   140002dd8:	mov    rax,QWORD PTR [rcx+0x18]
   140002ddc:	cmp    rax,0x10
   140002de0:	jb     0x140002dea
   140002de2:	mov    rcx,QWORD PTR [rcx]
   140002de5:	mov    rax,QWORD PTR [rbx]
   140002de8:	jmp    0x140002ded
   140002dea:	mov    rax,rbx
   140002ded:	add    rdx,rcx
   140002df0:	lea    rcx,[rax+r9*1]
   140002df4:	sub    r8,rdi
   140002df7:	add    rdx,rdi
   140002dfa:	call   0x140033260
   140002dff:	mov    r11,QWORD PTR [rbx+0x10]
   140002e03:	sub    r11,rdi
   140002e06:	cmp    QWORD PTR [rbx+0x18],0x10
   140002e0b:	mov    QWORD PTR [rbx+0x10],r11
   140002e0f:	jb     0x140002e27
   140002e11:	mov    rax,QWORD PTR [rbx]
   140002e14:	mov    BYTE PTR [rax+r11*1],0x0
   140002e19:	mov    rax,rbx
   140002e1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e21:	add    rsp,0x20
   140002e25:	pop    rdi
   140002e26:	ret    
   140002e27:	mov    rax,rbx
   140002e2a:	mov    BYTE PTR [rbx+r11*1],0x0
   140002e2f:	mov    rax,rbx
   140002e32:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e37:	add    rsp,0x20
   140002e3b:	pop    rdi
   140002e3c:	ret    
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    QWORD PTR [rsp+0x18],r8
   140002e45:	mov    QWORD PTR [rsp+0x10],rdx
   140002e4a:	mov    QWORD PTR [rsp+0x8],rcx
   140002e4f:	push   rbx
   140002e50:	push   rsi
   140002e51:	push   rdi
   140002e52:	push   r12
   140002e54:	sub    rsp,0x48
   140002e58:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002e61:	mov    r12,r8
   140002e64:	mov    rbx,rcx
   140002e67:	mov    rdi,rdx
   140002e6a:	or     rdi,0xf
   140002e6e:	cmp    rdi,0xfffffffffffffffe
   140002e72:	jbe    0x140002e79
   140002e74:	mov    rdi,rdx
   140002e77:	jmp    0x140002eae
   140002e79:	mov    r8,QWORD PTR [rcx+0x18]
   140002e7d:	mov    rcx,r8
   140002e80:	shr    rcx,1
   140002e83:	movabs rax,0xaaaaaaaaaaaaaaab
   140002e8d:	mul    rdi
   140002e90:	shr    rdx,1
   140002e93:	cmp    rcx,rdx
   140002e96:	jbe    0x140002eae
   140002e98:	mov    rdi,0xfffffffffffffffe
   140002e9f:	mov    rax,rdi
   140002ea2:	sub    rax,rcx
   140002ea5:	cmp    r8,rax
   140002ea8:	ja     0x140002eae
   140002eaa:	lea    rdi,[rcx+r8*1]
   140002eae:	lea    rcx,[rdi+0x1]
   140002eb2:	xor    esi,esi
   140002eb4:	test   rcx,rcx
   140002eb7:	je     0x140002f08
   140002eb9:	cmp    rcx,0xffffffffffffffff
   140002ebd:	ja     0x140002ecc
   140002ebf:	call   0x1400331a0
   140002ec4:	mov    rsi,rax
   140002ec7:	test   rax,rax
   140002eca:	jne    0x140002f08
   140002ecc:	mov    QWORD PTR [rsp+0x88],0x0
   140002ed8:	lea    rdx,[rsp+0x88]
   140002ee0:	lea    rcx,[rsp+0x28]
   140002ee5:	call   0x140032fd4
   140002eea:	lea    rax,[rip+0x6599f]        # 0x140068890
   140002ef1:	mov    QWORD PTR [rsp+0x28],rax
   140002ef6:	lea    rdx,[rip+0x80523]        # 0x140083420
   140002efd:	lea    rcx,[rsp+0x28]
   140002f02:	call   0x140036358
   140002f07:	nop
   140002f08:	jmp    0x140002f24
   140002f0a:	mov    rbx,QWORD PTR [rsp+0x70]
   140002f0f:	mov    r12,QWORD PTR [rsp+0x80]
   140002f17:	mov    rdi,QWORD PTR [rsp+0x78]
   140002f1c:	mov    rsi,QWORD PTR [rsp+0x88]
   140002f24:	test   r12,r12
   140002f27:	je     0x140002f43
   140002f29:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f2e:	jb     0x140002f35
   140002f30:	mov    rdx,QWORD PTR [rbx]
   140002f33:	jmp    0x140002f38
   140002f35:	mov    rdx,rbx
   140002f38:	mov    r8,r12
   140002f3b:	mov    rcx,rsi
   140002f3e:	call   0x140033260
   140002f43:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f48:	jb     0x140002f52
   140002f4a:	mov    rcx,QWORD PTR [rbx]
   140002f4d:	call   0x1400330c0
   140002f52:	mov    BYTE PTR [rbx],0x0
   140002f55:	mov    QWORD PTR [rbx],rsi
   140002f58:	mov    QWORD PTR [rbx+0x18],rdi
   140002f5c:	mov    QWORD PTR [rbx+0x10],r12
   140002f60:	cmp    rdi,0x10
   140002f64:	cmovae rbx,rsi
   140002f68:	mov    BYTE PTR [rbx+r12*1],0x0
   140002f6d:	add    rsp,0x48
   140002f71:	pop    r12
   140002f73:	pop    rdi
   140002f74:	pop    rsi
   140002f75:	pop    rbx
   140002f76:	ret    
   140002f77:	int3   
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	mov    QWORD PTR [rsp+0x8],rbx
   140002f85:	push   rdi
   140002f86:	sub    rsp,0x20
   140002f8a:	mov    rdi,r8
   140002f8d:	mov    rbx,rcx
   140002f90:	test   rcx,rcx
   140002f93:	jne    0x140002fa0
   140002f95:	mov    ecx,0x80070057
   140002f9a:	call   0x1400025f0
   140002f9f:	int3   
   140002fa0:	test   edx,edx
   140002fa2:	jns    0x140002faf
   140002fa4:	mov    ecx,0x80070057
   140002fa9:	call   0x1400025f0
   140002fae:	int3   
   140002faf:	test   r8,r8
   140002fb2:	jne    0x140002fbf
   140002fb4:	mov    ecx,0x80070057
   140002fb9:	call   0x1400025f0
   140002fbe:	int3   
   140002fbf:	mov    rcx,QWORD PTR [rcx]
   140002fc2:	cmp    rcx,r8
   140002fc5:	je     0x140002ff7
   140002fc7:	cmp    edx,0x80
   140002fcd:	jle    0x140002fed
   140002fcf:	movsxd rdx,edx
   140002fd2:	mov    r8d,0x1
   140002fd8:	call   0x140033618
   140002fdd:	test   rax,rax
   140002fe0:	jne    0x14000300c
   140002fe2:	mov    ecx,0x8007000e
   140002fe7:	call   0x1400025f0
   140002fec:	int3   
   140002fed:	call   0x140033594
   140002ff2:	mov    QWORD PTR [rbx],rdi
   140002ff5:	jmp    0x140003014
   140002ff7:	cmp    edx,0x80
   140002ffd:	jle    0x140003011
   140002fff:	movsxd rcx,edx
   140003002:	mov    edx,0x1
   140003007:	call   0x1400335d4
   14000300c:	mov    QWORD PTR [rbx],rax
   14000300f:	jmp    0x140003014
   140003011:	mov    QWORD PTR [rbx],r8
   140003014:	cmp    QWORD PTR [rbx],0x0
   140003018:	jne    0x140003025
   14000301a:	mov    ecx,0x8007000e
   14000301f:	call   0x1400025f0
   140003024:	int3   
   140003025:	mov    rbx,QWORD PTR [rsp+0x30]
   14000302a:	add    rsp,0x20
   14000302e:	pop    rdi
   14000302f:	ret    
   140003030:	mov    QWORD PTR [rsp+0x10],rbx
   140003035:	mov    QWORD PTR [rsp+0x18],rsi
   14000303a:	push   rdi
   14000303b:	sub    rsp,0xc0
   140003042:	mov    rax,QWORD PTR [rip+0x8205f]        # 0x1400850a8
   140003049:	xor    rax,rsp
   14000304c:	mov    QWORD PTR [rsp+0xb0],rax
   140003054:	mov    rsi,rcx
   140003057:	lea    rax,[rsp+0x28]
   14000305c:	lea    rcx,[rip+0x6837d]        # 0x14006b3e0
   140003063:	mov    QWORD PTR [rsp+0x20],rax
   140003068:	xor    bl,bl
   14000306a:	call   QWORD PTR [rip+0x65370]        # 0x1400683e0
   140003070:	lea    edi,[rax+0x1]
   140003073:	lea    r8,[rsp+0x28]
   140003078:	lea    rcx,[rsp+0x20]
   14000307d:	mov    edx,edi
   14000307f:	call   0x140002f80
   140003084:	mov    rcx,QWORD PTR [rsp+0x20]
   140003089:	movsxd rdx,edi
   14000308c:	lea    r8,[rip+0x6834d]        # 0x14006b3e0
   140003093:	mov    r9,rdx
   140003096:	call   0x140033ccc
   14000309b:	test   eax,eax
   14000309d:	je     0x1400030d4
   14000309f:	cmp    eax,0xc
   1400030a2:	je     0x1400030c9
   1400030a4:	cmp    eax,0x16
   1400030a7:	je     0x1400030be
   1400030a9:	cmp    eax,0x22
   1400030ac:	je     0x1400030be
   1400030ae:	cmp    eax,0x50
   1400030b1:	je     0x1400030d4
   1400030b3:	mov    ecx,0x80004005
   1400030b8:	call   0x1400025f0
   1400030bd:	int3   
   1400030be:	mov    ecx,0x80070057
   1400030c3:	call   0x1400025f0
   1400030c8:	int3   
   1400030c9:	mov    ecx,0x8007000e
   1400030ce:	call   0x1400025f0
   1400030d3:	int3   
   1400030d4:	mov    rdx,QWORD PTR [rsp+0x20]
   1400030d9:	or     rcx,0xffffffffffffffff
   1400030dd:	xor    eax,eax
   1400030df:	mov    rdi,rdx
   1400030e2:	repnz scas al,BYTE PTR es:[rdi]
   1400030e4:	not    rcx
   1400030e7:	lea    r8,[rcx-0x1]
   1400030eb:	lea    rcx,[rsi+0x30]
   1400030ef:	call   0x140005950
   1400030f4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400030f9:	cmp    rax,0xffffffffffffffff
   1400030fd:	lea    rax,[rsp+0x28]
   140003102:	sete   dil
   140003106:	cmp    rcx,rax
   140003109:	je     0x140003110
   14000310b:	call   0x140033594
   140003110:	test   dil,dil
   140003113:	je     0x14000311c
   140003115:	cmp    DWORD PTR [rsi+0x24],0x1
   140003119:	sete   bl
   14000311c:	movzx  eax,bl
   14000311f:	mov    rcx,QWORD PTR [rsp+0xb0]
   140003127:	xor    rcx,rsp
   14000312a:	call   0x140032f00
   14000312f:	lea    r11,[rsp+0xc0]
   140003137:	mov    rbx,QWORD PTR [r11+0x18]
   14000313b:	mov    rsi,QWORD PTR [r11+0x20]
   14000313f:	mov    rsp,r11
   140003142:	pop    rdi
   140003143:	ret    
   140003144:	int3   
   140003145:	int3   
   140003146:	int3   
   140003147:	int3   
   140003148:	int3   
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	rex push rbp
   140003152:	push   rsi
   140003153:	push   rdi
   140003154:	push   r12
   140003156:	mov    eax,0x1058
   14000315b:	call   0x14003ca30
   140003160:	sub    rsp,rax
   140003163:	mov    rax,QWORD PTR [rip+0x81f3e]        # 0x1400850a8
   14000316a:	xor    rax,rsp
   14000316d:	mov    QWORD PTR [rsp+0x1040],rax
   140003175:	cmp    r8d,DWORD PTR [rip+0x836d4]        # 0x140086850
   14000317c:	mov    rsi,r9
   14000317f:	mov    ebp,r8d
   140003182:	mov    r12d,edx
   140003185:	mov    rdi,rcx
   140003188:	jg     0x14000325c
   14000318e:	mov    edx,0x5c
   140003193:	mov    QWORD PTR [rsp+0x1050],rbx
   14000319b:	call   0x140033d54
   1400031a0:	mov    rbx,rax
   1400031a3:	test   rax,rax
   1400031a6:	je     0x1400031ad
   1400031a8:	inc    rbx
   1400031ab:	jmp    0x1400031b0
   1400031ad:	mov    rbx,rdi
   1400031b0:	mov    r8,QWORD PTR [rsp+0x10a0]
   1400031b8:	lea    r9,[rsp+0x10a8]
   1400031c0:	lea    rcx,[rsp+0x40]
   1400031c5:	mov    edx,0x800
   1400031ca:	call   0x140033b44
   1400031cf:	lea    r8,[rip+0x84d52]        # 0x140087f28
   1400031d6:	lea    rax,[rsp+0x40]
   1400031db:	mov    r9,rbx
   1400031de:	lea    rcx,[rsp+0x840]
   1400031e6:	test   rsi,rsi
   1400031e9:	je     0x14000321c
   1400031eb:	cmp    QWORD PTR [rip+0x84d4d],0x10        # 0x140087f40
   1400031f3:	mov    QWORD PTR [rsp+0x38],rax
   1400031f8:	mov    QWORD PTR [rsp+0x30],rsi
   1400031fd:	cmovae r8,QWORD PTR [rip+0x84d23]        # 0x140087f28
   140003205:	lea    rdx,[rip+0x681fc]        # 0x14006b408
   14000320c:	mov    DWORD PTR [rsp+0x28],ebp
   140003210:	mov    DWORD PTR [rsp+0x20],r12d
   140003215:	call   0x14003390c
   14000321a:	jmp    0x140003246
   14000321c:	cmp    QWORD PTR [rip+0x84d1c],0x10        # 0x140087f40
   140003224:	mov    QWORD PTR [rsp+0x30],rax
   140003229:	lea    rdx,[rip+0x68200]        # 0x14006b430
   140003230:	cmovae r8,QWORD PTR [rip+0x84cf0]        # 0x140087f28
   140003238:	mov    DWORD PTR [rsp+0x28],ebp
   14000323c:	mov    DWORD PTR [rsp+0x20],r12d
   140003241:	call   0x14003390c
   140003246:	lea    rcx,[rsp+0x840]
   14000324e:	call   QWORD PTR [rip+0x6514c]        # 0x1400683a0
   140003254:	mov    rbx,QWORD PTR [rsp+0x1050]
   14000325c:	mov    rcx,QWORD PTR [rsp+0x1040]
   140003264:	xor    rcx,rsp
   140003267:	call   0x140032f00
   14000326c:	add    rsp,0x1058
   140003273:	pop    r12
   140003275:	pop    rdi
   140003276:	pop    rsi
   140003277:	pop    rbp
   140003278:	ret    
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	rex push rbx
   140003282:	sub    rsp,0x20
   140003286:	lea    rax,[rip+0x683bb]        # 0x14006b648
   14000328d:	mov    rbx,rcx
   140003290:	mov    QWORD PTR [rcx],rax
   140003293:	test   dl,0x1
   140003296:	je     0x14000329d
   140003298:	call   0x1400330c0
   14000329d:	mov    rax,rbx
   1400032a0:	add    rsp,0x20
   1400032a4:	pop    rbx
   1400032a5:	ret    
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	int3   
   1400032a9:	int3   
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	lea    rax,[rip+0x68391]        # 0x14006b648
   1400032b7:	mov    QWORD PTR [rcx],rax
   1400032ba:	ret    
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032c5:	push   rdi
   1400032c6:	sub    rsp,0x20
   1400032ca:	lea    r9,[rip+0xffffffffffffcd2f]        # 0x140000000
   1400032d1:	mov    rdi,r8
   1400032d4:	mov    rbx,rcx
   1400032d7:	mov    r8,QWORD PTR [r9+0x687c0]
   1400032de:	cmp    r8,QWORD PTR [rdx]
   1400032e1:	jne    0x1400032f4
   1400032e3:	mov    r8,QWORD PTR [r9+0x687c8]
   1400032ea:	cmp    r8,QWORD PTR [rdx+0x8]
   1400032ee:	jne    0x1400032f4
   1400032f0:	xor    eax,eax
   1400032f2:	jmp    0x1400032f9
   1400032f4:	sbb    eax,eax
   1400032f6:	sbb    eax,0xffffffff
   1400032f9:	test   eax,eax
   1400032fb:	jne    0x140003313
   1400032fd:	mov    rax,QWORD PTR [rcx]
   140003300:	call   QWORD PTR [rax+0x8]
   140003303:	mov    QWORD PTR [rdi],rbx
   140003306:	xor    eax,eax
   140003308:	mov    rbx,QWORD PTR [rsp+0x30]
   14000330d:	add    rsp,0x20
   140003311:	pop    rdi
   140003312:	ret    
   140003313:	mov    rcx,QWORD PTR [r9+0x6b700]
   14000331a:	cmp    rcx,QWORD PTR [rdx]
   14000331d:	jne    0x140003330
   14000331f:	mov    rcx,QWORD PTR [r9+0x6b708]
   140003326:	cmp    rcx,QWORD PTR [rdx+0x8]
   14000332a:	jne    0x140003330
   14000332c:	xor    eax,eax
   14000332e:	jmp    0x140003335
   140003330:	sbb    eax,eax
   140003332:	sbb    eax,0xffffffff
   140003335:	test   eax,eax
   140003337:	jne    0x140003352
   140003339:	mov    rax,QWORD PTR [rbx]
   14000333c:	mov    rcx,rbx
   14000333f:	call   QWORD PTR [rax+0x8]
   140003342:	mov    QWORD PTR [rdi],rbx
   140003345:	xor    eax,eax
   140003347:	mov    rbx,QWORD PTR [rsp+0x30]
   14000334c:	add    rsp,0x20
   140003350:	pop    rdi
   140003351:	ret    
   140003352:	mov    rbx,QWORD PTR [rsp+0x30]
   140003357:	mov    QWORD PTR [rdi],0x0
   14000335e:	mov    eax,0x80004002
   140003363:	add    rsp,0x20
   140003367:	pop    rdi
   140003368:	ret    
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	mov    eax,0x1
   140003375:	lock xadd DWORD PTR [rcx+0x8],eax
   14000337a:	inc    eax
   14000337c:	ret    
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    QWORD PTR [rsp+0x8],rbx
   140003385:	push   rdi
   140003386:	sub    rsp,0x20
   14000338a:	mov    rbx,rdx
   14000338d:	mov    rdi,rcx
   140003390:	test   rdx,rdx
   140003393:	je     0x1400033ba
   140003395:	cmp    QWORD PTR [rcx+0x10],0x0
   14000339a:	je     0x1400033ba
   14000339c:	mov    rax,QWORD PTR [rdx]
   14000339f:	mov    rcx,rdx
   1400033a2:	call   QWORD PTR [rax+0x8]
   1400033a5:	mov    rcx,QWORD PTR [rdi+0x10]
   1400033a9:	mov    r9,rbx
   1400033ac:	xor    r8d,r8d
   1400033af:	mov    edx,0x7e8
   1400033b4:	call   QWORD PTR [rip+0x65296]        # 0x140068650
   1400033ba:	xor    eax,eax
   1400033bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033c1:	add    rsp,0x20
   1400033c5:	pop    rdi
   1400033c6:	ret    
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	rex push rbx
   1400033d2:	sub    rsp,0x20
   1400033d6:	lea    rax,[rip+0x6829b]        # 0x14006b678
   1400033dd:	mov    rbx,rcx
   1400033e0:	mov    QWORD PTR [rcx],rax
   1400033e3:	test   dl,0x1
   1400033e6:	je     0x1400033ed
   1400033e8:	call   0x1400330c0
   1400033ed:	mov    rax,rbx
   1400033f0:	add    rsp,0x20
   1400033f4:	pop    rbx
   1400033f5:	ret    
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	lea    rax,[rip+0x68271]        # 0x14006b678
   140003407:	mov    QWORD PTR [rcx],rax
   14000340a:	ret    
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	or     eax,0xffffffff
   140003413:	lock xadd DWORD PTR [rcx+0x8],eax
   140003418:	dec    eax
   14000341a:	ret    
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	mov    QWORD PTR [rsp+0x8],rbx
   140003425:	push   rdi
   140003426:	sub    rsp,0x20
   14000342a:	lea    r9,[rip+0xffffffffffffcbcf]        # 0x140000000
   140003431:	mov    rdi,r8
   140003434:	mov    rbx,rcx
   140003437:	mov    r8,QWORD PTR [r9+0x687c0]
   14000343e:	cmp    r8,QWORD PTR [rdx]
   140003441:	jne    0x140003454
   140003443:	mov    r8,QWORD PTR [r9+0x687c8]
   14000344a:	cmp    r8,QWORD PTR [rdx+0x8]
   14000344e:	jne    0x140003454
   140003450:	xor    eax,eax
   140003452:	jmp    0x140003459
   140003454:	sbb    eax,eax
   140003456:	sbb    eax,0xffffffff
   140003459:	test   eax,eax
   14000345b:	jne    0x140003473
   14000345d:	mov    rax,QWORD PTR [rcx]
   140003460:	call   QWORD PTR [rax+0x8]
   140003463:	mov    QWORD PTR [rdi],rbx
   140003466:	xor    eax,eax
   140003468:	mov    rbx,QWORD PTR [rsp+0x30]
   14000346d:	add    rsp,0x20
   140003471:	pop    rdi
   140003472:	ret    
   140003473:	mov    rcx,QWORD PTR [r9+0x6b710]
   14000347a:	cmp    rcx,QWORD PTR [rdx]
   14000347d:	jne    0x140003490
   14000347f:	mov    rcx,QWORD PTR [r9+0x6b718]
   140003486:	cmp    rcx,QWORD PTR [rdx+0x8]
   14000348a:	jne    0x140003490
   14000348c:	xor    eax,eax
   14000348e:	jmp    0x140003495
   140003490:	sbb    eax,eax
   140003492:	sbb    eax,0xffffffff
   140003495:	test   eax,eax
   140003497:	jne    0x1400034b2
   140003499:	mov    rax,QWORD PTR [rbx]
   14000349c:	mov    rcx,rbx
   14000349f:	call   QWORD PTR [rax+0x8]
   1400034a2:	mov    QWORD PTR [rdi],rbx
   1400034a5:	xor    eax,eax
   1400034a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034ac:	add    rsp,0x20
   1400034b0:	pop    rdi
   1400034b1:	ret    
   1400034b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034b7:	mov    QWORD PTR [rdi],0x0
   1400034be:	mov    eax,0x80004002
   1400034c3:	add    rsp,0x20
   1400034c7:	pop    rdi
   1400034c8:	ret    
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    eax,0x80004001
   1400034d5:	ret    
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	int3   
   1400034dd:	int3   
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	sub    rsp,0x28
   1400034e4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034e8:	test   rcx,rcx
   1400034eb:	je     0x140003501
   1400034ed:	movsxd r9,edx
   1400034f0:	mov    r8d,0x1
   1400034f6:	mov    edx,0x7e8
   1400034fb:	call   QWORD PTR [rip+0x6514f]        # 0x140068650
   140003501:	xor    eax,eax
   140003503:	add    rsp,0x28
   140003507:	ret    
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	sub    rsp,0x28
   140003514:	mov    rcx,QWORD PTR [rcx+0x10]
   140003518:	test   rcx,rcx
   14000351b:	je     0x140003531
   14000351d:	movsxd r9,edx
   140003520:	mov    r8d,0x2
   140003526:	mov    edx,0x7e8
   14000352b:	call   QWORD PTR [rip+0x6511f]        # 0x140068650
   140003531:	xor    eax,eax
   140003533:	add    rsp,0x28
   140003537:	ret    
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	rex push rbp
   140003542:	push   rsi
   140003543:	push   rdi
   140003544:	push   r12
   140003546:	push   r13
   140003548:	push   r14
   14000354a:	push   r15
   14000354c:	sub    rsp,0x100
   140003553:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000355c:	mov    QWORD PTR [rsp+0x148],rbx
   140003564:	mov    rax,QWORD PTR [rip+0x81b3d]        # 0x1400850a8
   14000356b:	xor    rax,rsp
   14000356e:	mov    QWORD PTR [rsp+0xf0],rax
   140003576:	mov    rdi,r8
   140003579:	mov    r12,rcx
   14000357c:	mov    QWORD PTR [rsp+0x58],rcx
   140003581:	lea    rax,[rip+0x68150]        # 0x14006b6d8
   140003588:	mov    QWORD PTR [rcx],rax
   14000358b:	lea    rax,[rip+0x680e6]        # 0x14006b678
   140003592:	mov    QWORD PTR [rcx+0x8],rax
   140003596:	xor    eax,eax
   140003598:	mov    DWORD PTR [rcx+0x10],eax
   14000359b:	mov    QWORD PTR [rcx+0x18],rdx
   14000359f:	mov    BYTE PTR [rcx+0x20],al
   1400035a2:	mov    DWORD PTR [rcx+0x24],eax
   1400035a5:	mov    QWORD PTR [rcx+0x28],rax
   1400035a9:	lea    rbp,[rcx+0x30]
   1400035ad:	mov    QWORD PTR [rbp+0x18],0xf
   1400035b5:	mov    QWORD PTR [rbp+0x10],rax
   1400035b9:	mov    BYTE PTR [rbp+0x0],al
   1400035bc:	lea    rsi,[rcx+0x58]
   1400035c0:	mov    QWORD PTR [rsi+0x18],0xf
   1400035c8:	mov    QWORD PTR [rsi+0x10],rax
   1400035cc:	mov    BYTE PTR [rsi],al
   1400035ce:	mov    DWORD PTR [rcx+0x80],0xffffffff
   1400035d8:	mov    WORD PTR [rcx+0x84],0x1
   1400035e1:	mov    DWORD PTR [rcx+0x18c],eax
   1400035e7:	mov    QWORD PTR [rsp+0x40],rax
   1400035ec:	mov    QWORD PTR [rsp+0x48],rax
   1400035f1:	test   r8,r8
   1400035f4:	je     0x14000380c
   1400035fa:	cmp    QWORD PTR [rcx+0x28],r8
   1400035fe:	je     0x14000361e
   140003600:	mov    rax,QWORD PTR [r8]
   140003603:	mov    rcx,r8
   140003606:	call   QWORD PTR [rax+0x8]
   140003609:	mov    rcx,QWORD PTR [r12+0x28]
   14000360e:	test   rcx,rcx
   140003611:	je     0x140003619
   140003613:	mov    rax,QWORD PTR [rcx]
   140003616:	call   QWORD PTR [rax+0x10]
   140003619:	mov    QWORD PTR [r12+0x28],rdi
   14000361e:	mov    rcx,QWORD PTR [r12+0x28]
   140003623:	mov    rax,QWORD PTR [rcx]
   140003626:	lea    rdx,[rsp+0x40]
   14000362b:	call   QWORD PTR [rax+0x60]
   14000362e:	mov    rcx,QWORD PTR [r12+0x28]
   140003633:	mov    rax,QWORD PTR [rcx]
   140003636:	lea    rdx,[rsp+0x48]
   14000363b:	call   QWORD PTR [rax+0x68]
   14000363e:	mov    rcx,QWORD PTR [r12+0x28]
   140003643:	mov    rax,QWORD PTR [rcx]
   140003646:	lea    rdx,[r12+0x80]
   14000364e:	call   QWORD PTR [rax+0x70]
   140003651:	cmp    eax,0x889000d
   140003656:	jne    0x14000366c
   140003658:	cmp    DWORD PTR [r12+0x80],0xffffffff
   140003661:	je     0x14000366c
   140003663:	mov    BYTE PTR [r12+0x84],0x0
   14000366c:	mov    rcx,QWORD PTR [r12+0x28]
   140003671:	mov    rax,QWORD PTR [rcx]
   140003674:	call   QWORD PTR [rax+0x78]
   140003677:	test   eax,eax
   140003679:	sete   al
   14000367c:	mov    BYTE PTR [r12+0x85],al
   140003684:	mov    rdx,QWORD PTR [rsp+0x40]
   140003689:	test   rdx,rdx
   14000368c:	je     0x14000374a
   140003692:	lea    rax,[rsp+0x68]
   140003697:	mov    QWORD PTR [rsp+0x60],rax
   14000369c:	mov    r8d,0x3
   1400036a2:	lea    rcx,[rsp+0x60]
   1400036a7:	call   0x140002a70
   1400036ac:	nop
   1400036ad:	xor    eax,eax
   1400036af:	or     rcx,0xffffffffffffffff
   1400036b3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400036b8:	mov    rdi,rdx
   1400036bb:	repnz scas al,BYTE PTR es:[rdi]
   1400036bd:	not    rcx
   1400036c0:	lea    r8,[rcx-0x1]
   1400036c4:	mov    rcx,rbp
   1400036c7:	call   0x140002ba0
   1400036cc:	nop
   1400036cd:	lea    rax,[rsp+0x68]
   1400036d2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400036d7:	cmp    rcx,rax
   1400036da:	je     0x1400036e1
   1400036dc:	call   0x140033594
   1400036e1:	cmp    QWORD PTR [rbp+0x18],0x10
   1400036e6:	jb     0x1400036ee
   1400036e8:	mov    r13,QWORD PTR [rbp+0x0]
   1400036ec:	jmp    0x1400036f1
   1400036ee:	mov    r13,rbp
   1400036f1:	cmp    QWORD PTR [rbp+0x18],0x10
   1400036f6:	jb     0x1400036fe
   1400036f8:	mov    rcx,QWORD PTR [rbp+0x0]
   1400036fc:	jmp    0x140003701
   1400036fe:	mov    rcx,rbp
   140003701:	mov    rax,QWORD PTR [rbp+0x10]
   140003705:	lea    rdi,[rcx+rax*1]
   140003709:	cmp    QWORD PTR [rbp+0x18],0x10
   14000370e:	jb     0x140003716
   140003710:	mov    rbx,QWORD PTR [rbp+0x0]
   140003714:	jmp    0x140003719
   140003716:	mov    rbx,rbp
   140003719:	cmp    rbx,rdi
   14000371c:	je     0x140003736
   14000371e:	sub    r13,rbx
   140003721:	movsx  ecx,BYTE PTR [rbx]
   140003724:	call   0x140033cac
   140003729:	mov    BYTE PTR [r13+rbx*1+0x0],al
   14000372e:	inc    rbx
   140003731:	cmp    rbx,rdi
   140003734:	jne    0x140003721
   140003736:	mov    rcx,QWORD PTR [rsp+0x40]
   14000373b:	call   QWORD PTR [rip+0x64f57]        # 0x140068698
   140003741:	mov    QWORD PTR [rsp+0x40],0x0
   14000374a:	mov    rdx,QWORD PTR [rsp+0x48]
   14000374f:	test   rdx,rdx
   140003752:	je     0x14000380c
   140003758:	lea    rax,[rsp+0x68]
   14000375d:	mov    QWORD PTR [rsp+0x60],rax
   140003762:	mov    r8d,0x3
   140003768:	lea    rcx,[rsp+0x60]
   14000376d:	call   0x140002a70
   140003772:	nop
   140003773:	xor    eax,eax
   140003775:	or     rcx,0xffffffffffffffff
   140003779:	mov    rdx,QWORD PTR [rsp+0x60]
   14000377e:	mov    rdi,rdx
   140003781:	repnz scas al,BYTE PTR es:[rdi]
   140003783:	not    rcx
   140003786:	lea    r8,[rcx-0x1]
   14000378a:	mov    rcx,rsi
   14000378d:	call   0x140002ba0
   140003792:	nop
   140003793:	lea    rax,[rsp+0x68]
   140003798:	mov    rcx,QWORD PTR [rsp+0x60]
   14000379d:	cmp    rcx,rax
   1400037a0:	je     0x1400037a7
   1400037a2:	call   0x140033594
   1400037a7:	cmp    QWORD PTR [rsi+0x18],0x10
   1400037ac:	jb     0x1400037b3
   1400037ae:	mov    r13,QWORD PTR [rsi]
   1400037b1:	jmp    0x1400037b6
   1400037b3:	mov    r13,rsi
   1400037b6:	cmp    QWORD PTR [rsi+0x18],0x10
   1400037bb:	jb     0x1400037c2
   1400037bd:	mov    rcx,QWORD PTR [rsi]
   1400037c0:	jmp    0x1400037c5
   1400037c2:	mov    rcx,rsi
   1400037c5:	mov    rax,QWORD PTR [rsi+0x10]
   1400037c9:	lea    rdi,[rcx+rax*1]
   1400037cd:	cmp    QWORD PTR [rsi+0x18],0x10
   1400037d2:	jb     0x1400037d9
   1400037d4:	mov    rbx,QWORD PTR [rsi]
   1400037d7:	jmp    0x1400037dc
   1400037d9:	mov    rbx,rsi
   1400037dc:	cmp    rbx,rdi
   1400037df:	je     0x1400037f8
   1400037e1:	sub    r13,rbx
   1400037e4:	movsx  ecx,BYTE PTR [rbx]
   1400037e7:	call   0x140033cac
   1400037ec:	mov    BYTE PTR [rbx+r13*1],al
   1400037f0:	inc    rbx
   1400037f3:	cmp    rbx,rdi
   1400037f6:	jne    0x1400037e4
   1400037f8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400037fd:	call   QWORD PTR [rip+0x64e95]        # 0x140068698
   140003803:	mov    QWORD PTR [rsp+0x48],0x0
   14000380c:	mov    rax,QWORD PTR [r12+0x8]
   140003811:	lea    rcx,[r12+0x8]
   140003816:	call   QWORD PTR [rax+0x8]
   140003819:	lea    r14,[rip+0x67c30]        # 0x14006b450
   140003820:	mov    QWORD PTR [rsp+0x28],r14
   140003825:	lea    r13,[rip+0x67c74]        # 0x14006b4a0
   14000382c:	mov    QWORD PTR [rsp+0x20],r13
   140003831:	xor    r9d,r9d
   140003834:	mov    edx,0x112
   140003839:	lea    r8d,[r9+0x5]
   14000383d:	lea    rcx,[rip+0x67c6c]        # 0x14006b4b0
   140003844:	call   0x140003150
   140003849:	lea    rdx,[rip+0x67cb0]        # 0x14006b500
   140003850:	mov    QWORD PTR [rsp+0x28],rdx
   140003855:	mov    QWORD PTR [rsp+0x20],r13
   14000385a:	xor    r9d,r9d
   14000385d:	mov    edx,0x113
   140003862:	lea    r8d,[r9+0x5]
   140003866:	lea    rcx,[rip+0x67c43]        # 0x14006b4b0
   14000386d:	call   0x140003150
   140003872:	mov    QWORD PTR [rsp+0x28],r14
   140003877:	mov    QWORD PTR [rsp+0x20],r13
   14000387c:	xor    r9d,r9d
   14000387f:	mov    edx,0x114
   140003884:	lea    r8d,[r9+0x5]
   140003888:	lea    rcx,[rip+0x67c21]        # 0x14006b4b0
   14000388f:	call   0x140003150
   140003894:	cmp    QWORD PTR [rbp+0x18],0x10
   140003899:	jb     0x14000389f
   14000389b:	mov    rbp,QWORD PTR [rbp+0x0]
   14000389f:	mov    QWORD PTR [rsp+0x28],rbp
   1400038a4:	lea    rax,[rip+0x67c6d]        # 0x14006b518
   1400038ab:	mov    QWORD PTR [rsp+0x20],rax
   1400038b0:	xor    r9d,r9d
   1400038b3:	mov    edx,0x116
   1400038b8:	lea    r8d,[r9+0x5]
   1400038bc:	lea    rcx,[rip+0x67bed]        # 0x14006b4b0
   1400038c3:	call   0x140003150
   1400038c8:	cmp    QWORD PTR [rsi+0x18],0x10
   1400038cd:	jb     0x1400038d2
   1400038cf:	mov    rsi,QWORD PTR [rsi]
   1400038d2:	mov    QWORD PTR [rsp+0x28],rsi
   1400038d7:	lea    rax,[rip+0x67c52]        # 0x14006b530
   1400038de:	mov    QWORD PTR [rsp+0x20],rax
   1400038e3:	xor    r9d,r9d
   1400038e6:	mov    edx,0x117
   1400038eb:	lea    r8d,[r9+0x5]
   1400038ef:	lea    rcx,[rip+0x67bba]        # 0x14006b4b0
   1400038f6:	call   0x140003150
   1400038fb:	lea    rbx,[rip+0x67c4e]        # 0x14006b550
   140003902:	lea    rdi,[rip+0x67c4b]        # 0x14006b554
   140003909:	mov    rax,rdi
   14000390c:	cmp    BYTE PTR [r12+0x84],0x0
   140003915:	cmovne rax,rbx
   140003919:	mov    QWORD PTR [rsp+0x30],rax
   14000391e:	mov    eax,DWORD PTR [r12+0x80]
   140003926:	mov    DWORD PTR [rsp+0x28],eax
   14000392a:	lea    rax,[rip+0x67c27]        # 0x14006b558
   140003931:	mov    QWORD PTR [rsp+0x20],rax
   140003936:	xor    r9d,r9d
   140003939:	mov    edx,0x119
   14000393e:	lea    r8d,[r9+0x5]
   140003942:	lea    rcx,[rip+0x67b67]        # 0x14006b4b0
   140003949:	call   0x140003150
   14000394e:	cmp    BYTE PTR [r12+0x85],0x0
   140003957:	cmovne rdi,rbx
   14000395b:	mov    QWORD PTR [rsp+0x28],rdi
   140003960:	lea    rax,[rip+0x67c19]        # 0x14006b580
   140003967:	mov    QWORD PTR [rsp+0x20],rax
   14000396c:	xor    r9d,r9d
   14000396f:	mov    edx,0x11a
   140003974:	lea    r8d,[r9+0x5]
   140003978:	lea    rcx,[rip+0x67b31]        # 0x14006b4b0
   14000397f:	call   0x140003150
   140003984:	mov    QWORD PTR [rsp+0x28],r14
   140003989:	mov    QWORD PTR [rsp+0x20],r13
   14000398e:	xor    r9d,r9d
   140003991:	mov    edx,0x122
   140003996:	lea    r8d,[r9+0x5]
   14000399a:	lea    rcx,[rip+0x67b0f]        # 0x14006b4b0
   1400039a1:	call   0x140003150
   1400039a6:	nop
   1400039a7:	mov    rax,r12
   1400039aa:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400039b2:	xor    rcx,rsp
   1400039b5:	call   0x140032f00
   1400039ba:	mov    rbx,QWORD PTR [rsp+0x148]
   1400039c2:	add    rsp,0x100
   1400039c9:	pop    r15
   1400039cb:	pop    r14
   1400039cd:	pop    r13
   1400039cf:	pop    r12
   1400039d1:	pop    rdi
   1400039d2:	pop    rsi
   1400039d3:	pop    rbp
   1400039d4:	ret    
   1400039d5:	int3   
   1400039d6:	int3   
   1400039d7:	int3   
   1400039d8:	int3   
   1400039d9:	int3   
   1400039da:	int3   
   1400039db:	int3   
   1400039dc:	int3   
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039e5:	push   rdi
   1400039e6:	sub    rsp,0x20
   1400039ea:	mov    ebx,edx
   1400039ec:	mov    rdi,rcx
   1400039ef:	call   0x140003a10
   1400039f4:	test   bl,0x1
   1400039f7:	je     0x140003a01
   1400039f9:	mov    rcx,rdi
   1400039fc:	call   0x1400330c0
   140003a01:	mov    rax,rdi
   140003a04:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a09:	add    rsp,0x20
   140003a0d:	pop    rdi
   140003a0e:	ret    
   140003a0f:	int3   
   140003a10:	mov    QWORD PTR [rsp+0x8],rcx
   140003a15:	push   rdi
   140003a16:	sub    rsp,0x30
   140003a1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003a23:	mov    QWORD PTR [rsp+0x48],rbx
   140003a28:	mov    rbx,rcx
   140003a2b:	lea    rax,[rip+0x67ca6]        # 0x14006b6d8
   140003a32:	mov    QWORD PTR [rcx],rax
   140003a35:	cmp    BYTE PTR [rcx+0x20],0x0
   140003a39:	je     0x140003a51
   140003a3b:	mov    rcx,QWORD PTR [rcx+0x28]
   140003a3f:	mov    rax,QWORD PTR [rcx]
   140003a42:	lea    rdx,[rbx+0x8]
   140003a46:	call   QWORD PTR [rax+0x58]
   140003a49:	test   eax,eax
   140003a4b:	sets   al
   140003a4e:	mov    BYTE PTR [rbx+0x20],al
   140003a51:	mov    rcx,QWORD PTR [rbx+0x28]
   140003a55:	test   rcx,rcx
   140003a58:	je     0x140003a68
   140003a5a:	mov    rax,QWORD PTR [rcx]
   140003a5d:	call   QWORD PTR [rax+0x10]
   140003a60:	mov    QWORD PTR [rbx+0x28],0x0
   140003a68:	mov    rax,QWORD PTR [rbx+0x8]
   140003a6c:	lea    rcx,[rbx+0x8]
   140003a70:	call   QWORD PTR [rax+0x10]
   140003a73:	mov    DWORD PTR [rbx+0x18c],0x1
   140003a7d:	cmp    QWORD PTR [rbx+0x70],0x10
   140003a82:	jb     0x140003a8d
   140003a84:	mov    rcx,QWORD PTR [rbx+0x58]
   140003a88:	call   0x1400330c0
   140003a8d:	mov    QWORD PTR [rbx+0x70],0xf
   140003a95:	mov    QWORD PTR [rbx+0x68],0x0
   140003a9d:	mov    BYTE PTR [rbx+0x58],0x0
   140003aa1:	cmp    QWORD PTR [rbx+0x48],0x10
   140003aa6:	jb     0x140003ab1
   140003aa8:	mov    rcx,QWORD PTR [rbx+0x30]
   140003aac:	call   0x1400330c0
   140003ab1:	mov    QWORD PTR [rbx+0x48],0xf
   140003ab9:	mov    QWORD PTR [rbx+0x40],0x0
   140003ac1:	mov    BYTE PTR [rbx+0x30],0x0
   140003ac5:	mov    rcx,QWORD PTR [rbx+0x28]
   140003ac9:	test   rcx,rcx
   140003acc:	je     0x140003ad5
   140003ace:	mov    rax,QWORD PTR [rcx]
   140003ad1:	call   QWORD PTR [rax+0x10]
   140003ad4:	nop
   140003ad5:	lea    rax,[rip+0x67b9c]        # 0x14006b678
   140003adc:	mov    QWORD PTR [rbx+0x8],rax
   140003ae0:	mov    rbx,QWORD PTR [rsp+0x48]
   140003ae5:	add    rsp,0x30
   140003ae9:	pop    rdi
   140003aea:	ret    
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	mov    r11,rsp
   140003af3:	push   rdi
   140003af4:	push   r12
   140003af6:	push   r13
   140003af8:	push   r14
   140003afa:	push   r15
   140003afc:	sub    rsp,0x60
   140003b00:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003b09:	mov    QWORD PTR [r11+0x8],rbx
   140003b0d:	mov    QWORD PTR [r11+0x18],rbp
   140003b11:	mov    QWORD PTR [r11+0x20],rsi
   140003b15:	mov    rax,QWORD PTR [rip+0x8158c]        # 0x1400850a8
   140003b1c:	xor    rax,rsp
   140003b1f:	mov    QWORD PTR [rsp+0x50],rax
   140003b24:	mov    r14,rcx
   140003b27:	xor    al,al
   140003b29:	test   rdx,rdx
   140003b2c:	je     0x140003c41
   140003b32:	cmp    QWORD PTR [rcx+0x40],0x0
   140003b37:	je     0x140003c41
   140003b3d:	mov    QWORD PTR [r11-0x48],0xf
   140003b45:	xor    r15d,r15d
   140003b48:	mov    QWORD PTR [r11-0x50],r15
   140003b4c:	mov    BYTE PTR [r11-0x60],r15b
   140003b50:	xor    eax,eax
   140003b52:	or     rcx,0xffffffffffffffff
   140003b56:	mov    rdi,rdx
   140003b59:	repnz scas al,BYTE PTR es:[rdi]
   140003b5b:	not    rcx
   140003b5e:	lea    r8,[rcx-0x1]
   140003b62:	lea    rcx,[r11-0x60]
   140003b66:	call   0x140002ba0
   140003b6b:	nop
   140003b6c:	lea    rsi,[rsp+0x28]
   140003b71:	mov    r12,QWORD PTR [rsp+0x28]
   140003b76:	mov    r13,QWORD PTR [rsp+0x40]
   140003b7b:	cmp    r13,0x10
   140003b7f:	cmovae rsi,r12
   140003b83:	lea    rdi,[rsp+0x28]
   140003b88:	cmovae rdi,r12
   140003b8c:	mov    rbp,QWORD PTR [rsp+0x38]
   140003b91:	add    rdi,rbp
   140003b94:	lea    rbx,[rsp+0x28]
   140003b99:	cmp    r13,0x10
   140003b9d:	cmovae rbx,r12
   140003ba1:	cmp    rbx,rdi
   140003ba4:	je     0x140003bd2
   140003ba6:	sub    rsi,rbx
   140003ba9:	nop    DWORD PTR [rax+0x0]
   140003bb0:	movsx  ecx,BYTE PTR [rbx]
   140003bb3:	call   0x140033cac
   140003bb8:	mov    BYTE PTR [rsi+rbx*1],al
   140003bbb:	inc    rbx
   140003bbe:	cmp    rbx,rdi
   140003bc1:	jne    0x140003bb0
   140003bc3:	mov    r13,QWORD PTR [rsp+0x40]
   140003bc8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003bcd:	mov    r12,QWORD PTR [rsp+0x28]
   140003bd2:	lea    rcx,[r14+0x30]
   140003bd6:	lea    rdx,[rsp+0x28]
   140003bdb:	cmp    r13,0x10
   140003bdf:	cmovae rdx,r12
   140003be3:	mov    rdi,QWORD PTR [rcx+0x10]
   140003be7:	cmp    rdi,rdi
   140003bea:	cmp    QWORD PTR [rcx+0x18],0x10
   140003bef:	jb     0x140003bf4
   140003bf1:	mov    rcx,QWORD PTR [rcx]
   140003bf4:	mov    r8,rbp
   140003bf7:	cmp    rdi,rbp
   140003bfa:	cmovb  r8,rdi
   140003bfe:	call   0x14003e320
   140003c03:	movsxd rcx,eax
   140003c06:	test   eax,eax
   140003c08:	jne    0x140003c1b
   140003c0a:	cmp    rdi,rbp
   140003c0d:	jae    0x140003c14
   140003c0f:	or     ecx,0xffffffff
   140003c12:	jmp    0x140003c1b
   140003c14:	setne  r15b
   140003c18:	mov    ecx,r15d
   140003c1b:	test   ecx,ecx
   140003c1d:	sete   dl
   140003c20:	xor    al,al
   140003c22:	movzx  edi,al
   140003c25:	mov    eax,0x1
   140003c2a:	test   dl,dl
   140003c2c:	cmovne edi,eax
   140003c2f:	cmp    r13,0x10
   140003c33:	jb     0x140003c3d
   140003c35:	mov    rcx,r12
   140003c38:	call   0x1400330c0
   140003c3d:	movzx  eax,dil
   140003c41:	mov    rcx,QWORD PTR [rsp+0x50]
   140003c46:	xor    rcx,rsp
   140003c49:	call   0x140032f00
   140003c4e:	lea    r11,[rsp+0x60]
   140003c53:	mov    rbx,QWORD PTR [r11+0x30]
   140003c57:	mov    rbp,QWORD PTR [r11+0x40]
   140003c5b:	mov    rsi,QWORD PTR [r11+0x48]
   140003c5f:	mov    rsp,r11
   140003c62:	pop    r15
   140003c64:	pop    r14
   140003c66:	pop    r13
   140003c68:	pop    r12
   140003c6a:	pop    rdi
   140003c6b:	ret    
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	rex push rdi
   140003c72:	sub    rsp,0x20
   140003c76:	mov    rdi,rcx
   140003c79:	mov    rcx,QWORD PTR [rcx+0x28]
   140003c7d:	test   rcx,rcx
   140003c80:	je     0x140003cdf
   140003c82:	mov    rax,QWORD PTR [rcx]
   140003c85:	lea    rdx,[rdi+0x24]
   140003c89:	mov    QWORD PTR [rsp+0x30],rbx
   140003c8e:	call   QWORD PTR [rax+0x18]
   140003c91:	cmp    DWORD PTR [rdi+0x24],0x1
   140003c95:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c9a:	sete   al
   140003c9d:	test   al,al
   140003c9f:	je     0x140003cc3
   140003ca1:	cmp    BYTE PTR [rdi+0x20],0x0
   140003ca5:	jne    0x140003cdf
   140003ca7:	mov    rcx,QWORD PTR [rdi+0x28]
   140003cab:	lea    rdx,[rdi+0x8]
   140003caf:	mov    rax,QWORD PTR [rcx]
   140003cb2:	call   QWORD PTR [rax+0x50]
   140003cb5:	test   eax,eax
   140003cb7:	setns  al
   140003cba:	mov    BYTE PTR [rdi+0x20],al
   140003cbd:	add    rsp,0x20
   140003cc1:	pop    rdi
   140003cc2:	ret    
   140003cc3:	cmp    BYTE PTR [rdi+0x20],0x0
   140003cc7:	je     0x140003cdf
   140003cc9:	mov    rcx,QWORD PTR [rdi+0x28]
   140003ccd:	lea    rdx,[rdi+0x8]
   140003cd1:	mov    rax,QWORD PTR [rcx]
   140003cd4:	call   QWORD PTR [rax+0x58]
   140003cd7:	test   eax,eax
   140003cd9:	sets   al
   140003cdc:	mov    BYTE PTR [rdi+0x20],al
   140003cdf:	add    rsp,0x20
   140003ce3:	pop    rdi
   140003ce4:	ret    
   140003ce5:	int3   
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	rex push rbp
   140003cf2:	push   rsi
   140003cf3:	push   rdi
   140003cf4:	push   r12
   140003cf6:	push   r13
   140003cf8:	lea    rbp,[rsp-0x37]
   140003cfd:	sub    rsp,0x100
   140003d04:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140003d0d:	mov    QWORD PTR [rsp+0x140],rbx
   140003d15:	mov    rax,QWORD PTR [rip+0x8138c]        # 0x1400850a8
   140003d1c:	xor    rax,rsp
   140003d1f:	mov    QWORD PTR [rbp+0x27],rax
   140003d23:	mov    rbx,rdx
   140003d26:	mov    r13,rcx
   140003d29:	xor    r12b,r12b
   140003d2c:	test   rdx,rdx
   140003d2f:	je     0x140003ec0
   140003d35:	cmp    QWORD PTR [rcx+0x40],0x0
   140003d3a:	je     0x140003ec0
   140003d40:	lea    rax,[rbp-0x61]
   140003d44:	mov    QWORD PTR [rbp-0x69],rax
   140003d48:	mov    rcx,rdx
   140003d4b:	call   QWORD PTR [rip+0x6468f]        # 0x1400683e0
   140003d51:	lea    edi,[rax+0x1]
   140003d54:	lea    r8,[rbp-0x61]
   140003d58:	mov    edx,edi
   140003d5a:	lea    rcx,[rbp-0x69]
   140003d5e:	call   0x140002f80
   140003d63:	movsxd rdx,edi
   140003d66:	mov    r9,rdx
   140003d69:	mov    r8,rbx
   140003d6c:	mov    rcx,QWORD PTR [rbp-0x69]
   140003d70:	call   0x140033ccc
   140003d75:	test   eax,eax
   140003d77:	je     0x140003dae
   140003d79:	cmp    eax,0xc
   140003d7c:	je     0x140003da3
   140003d7e:	cmp    eax,0x16
   140003d81:	je     0x140003d98
   140003d83:	cmp    eax,0x22
   140003d86:	je     0x140003d98
   140003d88:	cmp    eax,0x50
   140003d8b:	je     0x140003dae
   140003d8d:	mov    ecx,0x80004005
   140003d92:	call   0x1400025f0
   140003d97:	int3   
   140003d98:	mov    ecx,0x80070057
   140003d9d:	call   0x1400025f0
   140003da2:	int3   
   140003da3:	mov    ecx,0x8007000e
   140003da8:	call   0x1400025f0
   140003dad:	nop
   140003dae:	mov    QWORD PTR [rbp-0x79],0xf
   140003db6:	mov    QWORD PTR [rsp+0x48],0x0
   140003dbf:	mov    BYTE PTR [rsp+0x38],0x0
   140003dc4:	xor    eax,eax
   140003dc6:	or     rcx,0xffffffffffffffff
   140003dca:	mov    rdx,QWORD PTR [rbp-0x69]
   140003dce:	mov    rdi,rdx
   140003dd1:	repnz scas al,BYTE PTR es:[rdi]
   140003dd3:	not    rcx
   140003dd6:	lea    r8,[rcx-0x1]
   140003dda:	lea    rcx,[rsp+0x38]
   140003ddf:	call   0x140002ba0
   140003de4:	nop
   140003de5:	lea    rax,[rbp-0x61]
   140003de9:	mov    rcx,QWORD PTR [rbp-0x69]
   140003ded:	cmp    rcx,rax
   140003df0:	je     0x140003df7
   140003df2:	call   0x140033594
   140003df7:	lea    rsi,[rsp+0x38]
   140003dfc:	mov    rcx,QWORD PTR [rsp+0x38]
   140003e01:	mov    r8,QWORD PTR [rbp-0x79]
   140003e05:	cmp    r8,0x10
   140003e09:	cmovae rsi,rcx
   140003e0d:	lea    rdi,[rsp+0x38]
   140003e12:	cmovae rdi,rcx
   140003e16:	mov    r9,QWORD PTR [rsp+0x48]
   140003e1b:	add    rdi,r9
   140003e1e:	lea    rbx,[rsp+0x38]
   140003e23:	cmp    r8,0x10
   140003e27:	cmovae rbx,rcx
   140003e2b:	cmp    rbx,rdi
   140003e2e:	je     0x140003e54
   140003e30:	sub    rsi,rbx
   140003e33:	movsx  ecx,BYTE PTR [rbx]
   140003e36:	call   0x140033cac
   140003e3b:	mov    BYTE PTR [rsi+rbx*1],al
   140003e3e:	inc    rbx
   140003e41:	cmp    rbx,rdi
   140003e44:	jne    0x140003e33
   140003e46:	mov    r8,QWORD PTR [rbp-0x79]
   140003e4a:	mov    r9,QWORD PTR [rsp+0x48]
   140003e4f:	mov    rcx,QWORD PTR [rsp+0x38]
   140003e54:	lea    rdx,[rsp+0x38]
   140003e59:	cmp    r8,0x10
   140003e5d:	cmovae rdx,rcx
   140003e61:	lea    rcx,[r13+0x30]
   140003e65:	mov    r8,r9
   140003e68:	call   0x140005950
   140003e6d:	cmp    rax,0xffffffffffffffff
   140003e71:	je     0x140003eaf
   140003e73:	mov    r12b,0x1
   140003e76:	lea    rax,[rsp+0x38]
   140003e7b:	cmp    QWORD PTR [rbp-0x79],0x10
   140003e80:	cmovae rax,QWORD PTR [rsp+0x38]
   140003e86:	mov    QWORD PTR [rsp+0x28],rax
   140003e8b:	lea    rax,[rip+0x6770e]        # 0x14006b5a0
   140003e92:	mov    QWORD PTR [rsp+0x20],rax
   140003e97:	xor    r9d,r9d
   140003e9a:	mov    edx,0x173
   140003e9f:	lea    r8d,[r9+0x5]
   140003ea3:	lea    rcx,[rip+0x67606]        # 0x14006b4b0
   140003eaa:	call   0x140003150
   140003eaf:	cmp    QWORD PTR [rbp-0x79],0x10
   140003eb4:	jb     0x140003ec0
   140003eb6:	mov    rcx,QWORD PTR [rsp+0x38]
   140003ebb:	call   0x1400330c0
   140003ec0:	movzx  eax,r12b
   140003ec4:	mov    rcx,QWORD PTR [rbp+0x27]
   140003ec8:	xor    rcx,rsp
   140003ecb:	call   0x140032f00
   140003ed0:	mov    rbx,QWORD PTR [rsp+0x140]
   140003ed8:	add    rsp,0x100
   140003edf:	pop    r13
   140003ee1:	pop    r12
   140003ee3:	pop    rdi
   140003ee4:	pop    rsi
   140003ee5:	pop    rbp
   140003ee6:	ret    
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	rex push rbp
   140003ef2:	push   rsi
   140003ef3:	push   rdi
   140003ef4:	push   r12
   140003ef6:	push   r13
   140003ef8:	push   r14
   140003efa:	push   r15
   140003efc:	lea    rbp,[rsp-0x2280]
   140003f04:	mov    eax,0x2380
   140003f09:	call   0x14003ca30
   140003f0e:	sub    rsp,rax
   140003f11:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140003f1a:	mov    QWORD PTR [rsp+0x23d0],rbx
   140003f22:	mov    rax,QWORD PTR [rip+0x8117f]        # 0x1400850a8
   140003f29:	xor    rax,rsp
   140003f2c:	mov    QWORD PTR [rbp+0x2270],rax
   140003f33:	mov    r14,rcx
   140003f36:	xor    r12d,r12d
   140003f39:	cmp    DWORD PTR [rcx+0x18c],r12d
   140003f40:	jne    0x1400045f2
   140003f46:	mov    QWORD PTR [rbp+0x1fb0],0xf
   140003f51:	mov    QWORD PTR [rbp+0x1fa8],r12
   140003f58:	mov    BYTE PTR [rbp+0x1f98],r12b
   140003f5f:	xor    eax,eax
   140003f61:	or     rcx,0xffffffffffffffff
   140003f65:	mov    rdi,rdx
   140003f68:	repnz scas al,BYTE PTR es:[rdi]
   140003f6a:	not    rcx
   140003f6d:	lea    r8,[rcx-0x1]
   140003f71:	lea    rcx,[rbp+0x1f98]
   140003f78:	call   0x140002ba0
   140003f7d:	nop
   140003f7e:	lea    eax,[r12+0x1]
   140003f83:	mov    rdi,QWORD PTR [rbp+0x1fa8]
   140003f8a:	test   rdi,rdi
   140003f8d:	je     0x14000458a
   140003f93:	lea    rsi,[rbp+0x1f98]
   140003f9a:	mov    rdx,QWORD PTR [rbp+0x1f98]
   140003fa1:	mov    rcx,QWORD PTR [rbp+0x1fb0]
   140003fa8:	cmp    rcx,0x10
   140003fac:	cmovae rsi,rdx
   140003fb0:	lea    rax,[rbp+0x1f98]
   140003fb7:	cmovae rax,rdx
   140003fbb:	add    rdi,rax
   140003fbe:	lea    rbx,[rbp+0x1f98]
   140003fc5:	cmp    rcx,0x10
   140003fc9:	cmovae rbx,rdx
   140003fcd:	cmp    rbx,rdi
   140003fd0:	je     0x140003fe8
   140003fd2:	sub    rsi,rbx
   140003fd5:	movsx  ecx,BYTE PTR [rbx]
   140003fd8:	call   0x140033cac
   140003fdd:	mov    BYTE PTR [rsi+rbx*1],al
   140003fe0:	inc    rbx
   140003fe3:	cmp    rbx,rdi
   140003fe6:	jne    0x140003fd5
   140003fe8:	mov    r8d,DWORD PTR [r14+0x80]
   140003fef:	xor    edx,edx
   140003ff1:	mov    ecx,0x1410
   140003ff6:	call   QWORD PTR [rip+0x643bc]        # 0x1400683b8
   140003ffc:	mov    r13,rax
   140003fff:	mov    QWORD PTR [rsp+0x58],rax
   140004004:	test   rax,rax
   140004007:	je     0x14000454c
   14000400d:	mov    BYTE PTR [rbp+0x2050],0x0
   140004014:	xor    edx,edx
   140004016:	mov    r8d,0x103
   14000401c:	lea    rcx,[rbp+0x2051]
   140004023:	call   0x140036dc0
   140004028:	mov    DWORD PTR [rsp+0x50],0x104
   140004030:	xor    r15b,r15b
   140004033:	lea    r9,[rsp+0x50]
   140004038:	lea    r8,[rbp+0x2050]
   14000403f:	xor    edx,edx
   140004041:	mov    rcx,r13
   140004044:	call   QWORD PTR [rip+0x6435e]        # 0x1400683a8
   14000404a:	cmp    BYTE PTR [rbp+0x2050],r15b
   140004051:	je     0x140004541
   140004057:	lea    rax,[rbp+0x1fc8]
   14000405e:	mov    QWORD PTR [rbp+0x1fc0],rax
   140004065:	lea    rcx,[rbp+0x2050]
   14000406c:	call   QWORD PTR [rip+0x6436e]        # 0x1400683e0
   140004072:	lea    edi,[rax+0x1]
   140004075:	lea    r8,[rbp+0x1fc8]
   14000407c:	mov    edx,edi
   14000407e:	lea    rcx,[rbp+0x1fc0]
   140004085:	call   0x140002f80
   14000408a:	movsxd rdx,edi
   14000408d:	mov    r9,rdx
   140004090:	lea    r8,[rbp+0x2050]
   140004097:	mov    rcx,QWORD PTR [rbp+0x1fc0]
   14000409e:	call   0x140033ccc
   1400040a3:	test   eax,eax
   1400040a5:	je     0x1400040dc
   1400040a7:	cmp    eax,0xc
   1400040aa:	je     0x1400040d1
   1400040ac:	cmp    eax,0x16
   1400040af:	je     0x1400040c6
   1400040b1:	cmp    eax,0x22
   1400040b4:	je     0x1400040c6
   1400040b6:	cmp    eax,0x50
   1400040b9:	je     0x1400040dc
   1400040bb:	mov    ecx,0x80004005
   1400040c0:	call   0x1400025f0
   1400040c5:	int3   
   1400040c6:	mov    ecx,0x80070057
   1400040cb:	call   0x1400025f0
   1400040d0:	int3   
   1400040d1:	mov    ecx,0x8007000e
   1400040d6:	call   0x1400025f0
   1400040db:	nop
   1400040dc:	mov    QWORD PTR [rbp+0x1f88],0xf
   1400040e7:	mov    QWORD PTR [rbp+0x1f80],r12
   1400040ee:	mov    BYTE PTR [rbp+0x1f70],0x0
   1400040f5:	xor    eax,eax
   1400040f7:	or     rcx,0xffffffffffffffff
   1400040fb:	mov    rdx,QWORD PTR [rbp+0x1fc0]
   140004102:	mov    rdi,rdx
   140004105:	repnz scas al,BYTE PTR es:[rdi]
   140004107:	not    rcx
   14000410a:	lea    r8,[rcx-0x1]
   14000410e:	lea    rcx,[rbp+0x1f70]
   140004115:	call   0x140002ba0
   14000411a:	nop
   14000411b:	lea    rax,[rbp+0x1fc8]
   140004122:	mov    rcx,QWORD PTR [rbp+0x1fc0]
   140004129:	cmp    rcx,rax
   14000412c:	je     0x140004133
   14000412e:	call   0x140033594
   140004133:	lea    rsi,[rbp+0x1f70]
   14000413a:	mov    r8,QWORD PTR [rbp+0x1f70]
   140004141:	mov    rdx,QWORD PTR [rbp+0x1f88]
   140004148:	cmp    rdx,0x10
   14000414c:	cmovae rsi,r8
   140004150:	lea    rdi,[rbp+0x1f70]
   140004157:	cmovae rdi,r8
   14000415b:	add    rdi,QWORD PTR [rbp+0x1f80]
   140004162:	lea    rbx,[rbp+0x1f70]
   140004169:	cmp    rdx,0x10
   14000416d:	cmovae rbx,r8
   140004171:	cmp    rbx,rdi
   140004174:	je     0x140004193
   140004176:	sub    rsi,rbx
   140004179:	nop    DWORD PTR [rax+0x0]
   140004180:	movsx  ecx,BYTE PTR [rbx]
   140004183:	call   0x140033cac
   140004188:	mov    BYTE PTR [rsi+rbx*1],al
   14000418b:	inc    rbx
   14000418e:	cmp    rbx,rdi
   140004191:	jne    0x140004180
   140004193:	mov    r8d,0xb
   140004199:	lea    rdx,[rip+0x67410]        # 0x14006b5b0
   1400041a0:	lea    rcx,[rbp+0x1f70]
   1400041a7:	call   0x140005950
   1400041ac:	movzx  edi,r15b
   1400041b0:	cmp    rax,0xffffffffffffffff
   1400041b4:	mov    eax,0x1
   1400041b9:	cmovne edi,eax
   1400041bc:	cmp    QWORD PTR [rbp+0x1f88],0x10
   1400041c4:	jb     0x1400041d2
   1400041c6:	mov    rcx,QWORD PTR [rbp+0x1f70]
   1400041cd:	call   0x1400330c0
   1400041d2:	test   dil,dil
   1400041d5:	je     0x140004541
   1400041db:	mov    DWORD PTR [rsp+0x40],r12d
   1400041e0:	mov    DWORD PTR [rsp+0x20],0x3
   1400041e8:	lea    r9,[rsp+0x40]
   1400041ed:	mov    r8d,0x2000
   1400041f3:	lea    rdx,[rsp+0x70]
   1400041f8:	mov    rcx,r13
   1400041fb:	call   QWORD PTR [rip+0x64187]        # 0x140068388
   140004201:	mov    r15d,r12d
   140004204:	cmp    DWORD PTR [r14+0x18c],r12d
   14000420b:	jne    0x140004541
   140004211:	lea    rdi,[rsp+0x70]
   140004216:	mov    QWORD PTR [rsp+0x48],rdi
   14000421b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004220:	mov    eax,DWORD PTR [rsp+0x40]
   140004224:	shr    eax,0x3
   140004227:	cmp    r15d,eax
   14000422a:	jae    0x140004541
   140004230:	mov    BYTE PTR [rbp+0x2160],0x0
   140004237:	xor    edx,edx
   140004239:	mov    r8d,0x103
   14000423f:	lea    rcx,[rbp+0x2161]
   140004246:	call   0x140036dc0
   14000424b:	mov    r9d,0x104
   140004251:	lea    r8,[rbp+0x2160]
   140004258:	mov    rdx,QWORD PTR [rdi]
   14000425b:	mov    rcx,r13
   14000425e:	call   QWORD PTR [rip+0x6414c]        # 0x1400683b0
   140004264:	test   eax,eax
   140004266:	je     0x140004503
   14000426c:	cmp    BYTE PTR [rbp+0x2160],0x0
   140004273:	je     0x140004503
   140004279:	lea    rax,[rbp+0x1fc8]
   140004280:	mov    QWORD PTR [rbp+0x1fc0],rax
   140004287:	lea    rcx,[rbp+0x2160]
   14000428e:	call   QWORD PTR [rip+0x6414c]        # 0x1400683e0
   140004294:	lea    edi,[rax+0x1]
   140004297:	lea    r8,[rbp+0x1fc8]
   14000429e:	mov    edx,edi
   1400042a0:	lea    rcx,[rbp+0x1fc0]
   1400042a7:	call   0x140002f80
   1400042ac:	movsxd rdx,edi
   1400042af:	mov    r9,rdx
   1400042b2:	lea    r8,[rbp+0x2160]
   1400042b9:	mov    rcx,QWORD PTR [rbp+0x1fc0]
   1400042c0:	call   0x140033ccc
   1400042c5:	test   eax,eax
   1400042c7:	je     0x1400042ed
   1400042c9:	cmp    eax,0xc
   1400042cc:	je     0x140004536
   1400042d2:	cmp    eax,0x16
   1400042d5:	je     0x14000452b
   1400042db:	cmp    eax,0x22
   1400042de:	je     0x14000452b
   1400042e4:	cmp    eax,0x50
   1400042e7:	jne    0x140004520
   1400042ed:	mov    QWORD PTR [rbp+0x1f88],0xf
   1400042f8:	mov    QWORD PTR [rbp+0x1f80],r12
   1400042ff:	mov    BYTE PTR [rbp+0x1f70],0x0
   140004306:	xor    eax,eax
   140004308:	or     rcx,0xffffffffffffffff
   14000430c:	mov    rdx,QWORD PTR [rbp+0x1fc0]
   140004313:	mov    rdi,rdx
   140004316:	repnz scas al,BYTE PTR es:[rdi]
   140004318:	not    rcx
   14000431b:	lea    r8,[rcx-0x1]
   14000431f:	lea    rcx,[rbp+0x1f70]
   140004326:	call   0x140002ba0
   14000432b:	nop
   14000432c:	lea    rax,[rbp+0x1fc8]
   140004333:	mov    rcx,QWORD PTR [rbp+0x1fc0]
   14000433a:	cmp    rcx,rax
   14000433d:	je     0x140004344
   14000433f:	call   0x140033594
   140004344:	lea    r12,[rbp+0x1f70]
   14000434b:	mov    rdx,QWORD PTR [rbp+0x1f70]
   140004352:	mov    rcx,QWORD PTR [rbp+0x1f88]
   140004359:	cmp    rcx,0x10
   14000435d:	cmovae r12,rdx
   140004361:	lea    rax,[rbp+0x1f70]
   140004368:	cmovae rax,rdx
   14000436c:	mov    rsi,QWORD PTR [rbp+0x1f80]
   140004373:	lea    rdi,[rsi+rax*1]
   140004377:	lea    rbx,[rbp+0x1f70]
   14000437e:	cmovae rbx,rdx
   140004382:	cmp    rbx,rdi
   140004385:	je     0x1400043b9
   140004387:	sub    r12,rbx
   14000438a:	nop    WORD PTR [rax+rax*1+0x0]
   140004390:	movsx  ecx,BYTE PTR [rbx]
   140004393:	call   0x140033cac
   140004398:	mov    BYTE PTR [r12+rbx*1],al
   14000439c:	inc    rbx
   14000439f:	cmp    rbx,rdi
   1400043a2:	jne    0x140004390
   1400043a4:	mov    rcx,QWORD PTR [rbp+0x1f88]
   1400043ab:	mov    rsi,QWORD PTR [rbp+0x1f80]
   1400043b2:	mov    rdx,QWORD PTR [rbp+0x1f70]
   1400043b9:	mov    r13,QWORD PTR [rbp+0x1fa8]
   1400043c0:	lea    r12,[rbp+0x1f98]
   1400043c7:	mov    rdi,QWORD PTR [rbp+0x1f98]
   1400043ce:	mov    r8,QWORD PTR [rbp+0x1fb0]
   1400043d5:	cmp    r8,0x10
   1400043d9:	cmovae r12,rdi
   1400043dd:	test   r13,r13
   1400043e0:	je     0x14000449c
   1400043e6:	test   rsi,rsi
   1400043e9:	je     0x1400044ed
   1400043ef:	cmp    r13,rsi
   1400043f2:	ja     0x1400044ed
   1400043f8:	sub    rsi,r13
   1400043fb:	inc    rsi
   1400043fe:	lea    rbx,[rbp+0x1f70]
   140004405:	cmp    rcx,0x10
   140004409:	cmovae rbx,rdx
   14000440d:	movsx  edx,BYTE PTR [r12]
   140004412:	mov    r8,rsi
   140004415:	mov    rcx,rbx
   140004418:	call   0x1400339d0
   14000441d:	mov    rdi,rax
   140004420:	test   rax,rax
   140004423:	je     0x1400044df
   140004429:	nop    DWORD PTR [rax+0x0]
   140004430:	mov    r8,r13
   140004433:	mov    rdx,r12
   140004436:	mov    rcx,rdi
   140004439:	call   0x14003e320
   14000443e:	test   eax,eax
   140004440:	je     0x140004468
   140004442:	sub    rbx,rdi
   140004445:	lea    rsi,[rsi+rbx*1-0x1]
   14000444a:	lea    rbx,[rdi+0x1]
   14000444e:	movsx  edx,BYTE PTR [r12]
   140004453:	mov    r8,rsi
   140004456:	mov    rcx,rbx
   140004459:	call   0x1400339d0
   14000445e:	mov    rdi,rax
   140004461:	test   rax,rax
   140004464:	jne    0x140004430
   140004466:	jmp    0x1400044df
   140004468:	lea    rax,[rbp+0x1f70]
   14000446f:	mov    rdx,QWORD PTR [rbp+0x1f70]
   140004476:	mov    rcx,QWORD PTR [rbp+0x1f88]
   14000447d:	cmp    rcx,0x10
   140004481:	cmovae rax,rdx
   140004485:	sub    rdi,rax
   140004488:	cmp    rdi,0xffffffffffffffff
   14000448c:	je     0x1400044ed
   14000448e:	mov    r8,QWORD PTR [rbp+0x1fb0]
   140004495:	mov    rdi,QWORD PTR [rbp+0x1f98]
   14000449c:	mov    DWORD PTR [r14+0x18c],0x2
   1400044a7:	lea    rax,[rbp+0x1f98]
   1400044ae:	cmp    r8,0x10
   1400044b2:	cmovae rax,rdi
   1400044b6:	mov    QWORD PTR [rsp+0x28],rax
   1400044bb:	lea    rax,[rip+0x670fe]        # 0x14006b5c0
   1400044c2:	mov    QWORD PTR [rsp+0x20],rax
   1400044c7:	xor    r9d,r9d
   1400044ca:	mov    edx,0x1ab
   1400044cf:	lea    r8d,[r9+0x5]
   1400044d3:	lea    rcx,[rip+0x66fd6]        # 0x14006b4b0
   1400044da:	call   0x140003150
   1400044df:	mov    rcx,QWORD PTR [rbp+0x1f88]
   1400044e6:	mov    rdx,QWORD PTR [rbp+0x1f70]
   1400044ed:	cmp    rcx,0x10
   1400044f1:	jb     0x1400044fb
   1400044f3:	mov    rcx,rdx
   1400044f6:	call   0x1400330c0
   1400044fb:	mov    r13,QWORD PTR [rsp+0x58]
   140004500:	xor    r12d,r12d
   140004503:	inc    r15d
   140004506:	add    QWORD PTR [rsp+0x48],0x8
   14000450c:	cmp    DWORD PTR [r14+0x18c],0x0
   140004514:	jne    0x140004541
   140004516:	mov    rdi,QWORD PTR [rsp+0x48]
   14000451b:	jmp    0x140004220
   140004520:	mov    ecx,0x80004005
   140004525:	call   0x1400025f0
   14000452a:	int3   
   14000452b:	mov    ecx,0x80070057
   140004530:	call   0x1400025f0
   140004535:	int3   
   140004536:	mov    ecx,0x8007000e
   14000453b:	call   0x1400025f0
   140004540:	int3   
   140004541:	mov    rcx,r13
   140004544:	call   QWORD PTR [rip+0x63e4e]        # 0x140068398
   14000454a:	jmp    0x140004585
   14000454c:	call   QWORD PTR [rip+0x63e6e]        # 0x1400683c0
   140004552:	mov    DWORD PTR [rsp+0x30],eax
   140004556:	mov    eax,DWORD PTR [r14+0x80]
   14000455d:	mov    DWORD PTR [rsp+0x28],eax
   140004561:	lea    rax,[rip+0x67070]        # 0x14006b5d8
   140004568:	mov    QWORD PTR [rsp+0x20],rax
   14000456d:	xor    r9d,r9d
   140004570:	mov    edx,0x1b7
   140004575:	lea    r8d,[r9+0x5]
   140004579:	lea    rcx,[rip+0x66f30]        # 0x14006b4b0
   140004580:	call   0x140003150
   140004585:	mov    eax,0x1
   14000458a:	cmp    DWORD PTR [r14+0x18c],0x0
   140004592:	jne    0x1400045dc
   140004594:	mov    DWORD PTR [r14+0x18c],eax
   14000459b:	lea    rax,[rbp+0x1f98]
   1400045a2:	cmp    QWORD PTR [rbp+0x1fb0],0x10
   1400045aa:	cmovae rax,QWORD PTR [rbp+0x1f98]
   1400045b2:	mov    QWORD PTR [rsp+0x28],rax
   1400045b7:	lea    rax,[rip+0x6704a]        # 0x14006b608
   1400045be:	mov    QWORD PTR [rsp+0x20],rax
   1400045c3:	xor    r9d,r9d
   1400045c6:	mov    edx,0x1be
   1400045cb:	lea    r8d,[r9+0x5]
   1400045cf:	lea    rcx,[rip+0x66eda]        # 0x14006b4b0
   1400045d6:	call   0x140003150
   1400045db:	nop
   1400045dc:	cmp    QWORD PTR [rbp+0x1fb0],0x10
   1400045e4:	jb     0x1400045f2
   1400045e6:	mov    rcx,QWORD PTR [rbp+0x1f98]
   1400045ed:	call   0x1400330c0
   1400045f2:	cmp    DWORD PTR [r14+0x18c],0x2
   1400045fa:	sete   al
   1400045fd:	mov    rcx,QWORD PTR [rbp+0x2270]
   140004604:	xor    rcx,rsp
   140004607:	call   0x140032f00
   14000460c:	mov    rbx,QWORD PTR [rsp+0x23d0]
   140004614:	add    rsp,0x2380
   14000461b:	pop    r15
   14000461d:	pop    r14
   14000461f:	pop    r13
   140004621:	pop    r12
   140004623:	pop    rdi
   140004624:	pop    rsi
   140004625:	pop    rbp
   140004626:	ret    
   140004627:	int3   
   140004628:	int3   
   140004629:	int3   
   14000462a:	int3   
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	mov    QWORD PTR [rsp+0x8],rbx
   140004635:	push   rdi
   140004636:	sub    rsp,0x20
   14000463a:	mov    ebx,edx
   14000463c:	mov    rdi,rcx
   14000463f:	call   0x140004660
   140004644:	test   bl,0x1
   140004647:	je     0x140004651
   140004649:	mov    rcx,rdi
   14000464c:	call   0x1400330c0
   140004651:	mov    rax,rdi
   140004654:	mov    rbx,QWORD PTR [rsp+0x30]
   140004659:	add    rsp,0x20
   14000465d:	pop    rdi
   14000465e:	ret    
   14000465f:	int3   
   140004660:	mov    QWORD PTR [rsp+0x8],rcx
   140004665:	push   rdi
   140004666:	sub    rsp,0x30
   14000466a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004673:	mov    QWORD PTR [rsp+0x48],rbx
   140004678:	mov    rbx,rcx
   14000467b:	lea    rax,[rip+0x67066]        # 0x14006b6e8
   140004682:	mov    QWORD PTR [rcx],rax
   140004685:	call   0x140004890
   14000468a:	mov    rax,QWORD PTR [rbx+0x118]
   140004691:	lea    rcx,[rbx+0x118]
   140004698:	call   QWORD PTR [rax+0x10]
   14000469b:	nop
   14000469c:	mov    rcx,QWORD PTR [rbx+0x148]
   1400046a3:	test   rcx,rcx
   1400046a6:	je     0x1400046ad
   1400046a8:	call   0x1400330c0
   1400046ad:	xor    eax,eax
   1400046af:	mov    QWORD PTR [rbx+0x148],rax
   1400046b6:	mov    QWORD PTR [rbx+0x150],rax
   1400046bd:	mov    QWORD PTR [rbx+0x158],rax
   1400046c4:	mov    rcx,QWORD PTR [rbx+0x140]
   1400046cb:	test   rcx,rcx
   1400046ce:	je     0x1400046d7
   1400046d0:	mov    rax,QWORD PTR [rcx]
   1400046d3:	call   QWORD PTR [rax+0x10]
   1400046d6:	nop
   1400046d7:	mov    rcx,QWORD PTR [rbx+0x138]
   1400046de:	test   rcx,rcx
   1400046e1:	je     0x1400046ea
   1400046e3:	mov    rax,QWORD PTR [rcx]
   1400046e6:	call   QWORD PTR [rax+0x10]
   1400046e9:	nop
   1400046ea:	lea    rax,[rip+0x66f57]        # 0x14006b648
   1400046f1:	mov    QWORD PTR [rbx+0x118],rax
   1400046f8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400046fd:	add    rsp,0x30
   140004701:	pop    rdi
   140004702:	ret    
   140004703:	int3   
   140004704:	int3   
   140004705:	int3   
   140004706:	int3   
   140004707:	int3   
   140004708:	int3   
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	rex push rbp
   140004712:	push   rsi
   140004713:	push   rdi
   140004714:	sub    rsp,0x160
   14000471b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140004724:	mov    QWORD PTR [rsp+0x190],rbx
   14000472c:	mov    rax,QWORD PTR [rip+0x80975]        # 0x1400850a8
   140004733:	xor    rax,rsp
   140004736:	mov    QWORD PTR [rsp+0x150],rax
   14000473e:	mov    rbp,rdx
   140004741:	mov    rdi,rcx
   140004744:	test   rdx,rdx
   140004747:	je     0x140004861
   14000474d:	cmp    QWORD PTR [rcx+0x138],0x0
   140004755:	jne    0x140004861
   14000475b:	mov    QWORD PTR [rsp+0x30],0x0
   140004764:	lea    rax,[rsp+0x30]
   140004769:	mov    QWORD PTR [rsp+0x20],rax
   14000476e:	lea    r9,[rip+0x66c5b]        # 0x14006b3d0
   140004775:	xor    edx,edx
   140004777:	lea    r8d,[rdx+0x17]
   14000477b:	lea    rcx,[rip+0x66c2e]        # 0x14006b3b0
   140004782:	call   QWORD PTR [rip+0x63ef0]        # 0x140068678
   140004788:	mov    rbx,QWORD PTR [rsp+0x30]
   14000478d:	test   rbx,rbx
   140004790:	je     0x1400047da
   140004792:	lea    rax,[rsp+0x48]
   140004797:	mov    QWORD PTR [rsp+0x40],rax
   14000479c:	mov    r8d,0x3
   1400047a2:	mov    rdx,rbp
   1400047a5:	lea    rcx,[rsp+0x40]
   1400047aa:	call   0x140005b60
   1400047af:	nop
   1400047b0:	mov    rax,QWORD PTR [rbx]
   1400047b3:	lea    r8,[rdi+0x138]
   1400047ba:	mov    rdx,QWORD PTR [rsp+0x40]
   1400047bf:	mov    rcx,rbx
   1400047c2:	call   QWORD PTR [rax+0x28]
   1400047c5:	nop
   1400047c6:	lea    rax,[rsp+0x48]
   1400047cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400047d0:	cmp    rcx,rax
   1400047d3:	je     0x1400047da
   1400047d5:	call   0x140033594
   1400047da:	mov    rcx,QWORD PTR [rdi+0x138]
   1400047e1:	test   rcx,rcx
   1400047e4:	je     0x140004807
   1400047e6:	mov    r10,QWORD PTR [rcx]
   1400047e9:	lea    rax,[rdi+0x140]
   1400047f0:	mov    QWORD PTR [rsp+0x20],rax
   1400047f5:	xor    r9d,r9d
   1400047f8:	lea    r8d,[r9+0x17]
   1400047fc:	lea    rdx,[rip+0x66f1d]        # 0x14006b720
   140004803:	call   QWORD PTR [r10+0x18]
   140004807:	cmp    QWORD PTR [rdi+0x8],0x0
   14000480c:	je     0x140004838
   14000480e:	mov    rcx,QWORD PTR [rdi+0x140]
   140004815:	test   rcx,rcx
   140004818:	je     0x140004838
   14000481a:	mov    rax,QWORD PTR [rcx]
   14000481d:	lea    rdx,[rdi+0x118]
   140004824:	call   QWORD PTR [rax+0x30]
   140004827:	test   eax,eax
   140004829:	setns  bl
   14000482c:	mov    BYTE PTR [rdi+0x130],bl
   140004832:	test   bl,bl
   140004834:	je     0x14000484c
   140004836:	jmp    0x14000483a
   140004838:	mov    bl,0x1
   14000483a:	lea    rcx,[rdi+0x10]
   14000483e:	mov    r8,rbp
   140004841:	mov    edx,0x104
   140004846:	call   0x1400336a8
   14000484b:	nop
   14000484c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004851:	test   rcx,rcx
   140004854:	je     0x14000485c
   140004856:	mov    rdx,QWORD PTR [rcx]
   140004859:	call   QWORD PTR [rdx+0x10]
   14000485c:	movzx  eax,bl
   14000485f:	jmp    0x140004863
   140004861:	xor    al,al
   140004863:	mov    rcx,QWORD PTR [rsp+0x150]
   14000486b:	xor    rcx,rsp
   14000486e:	call   0x140032f00
   140004873:	mov    rbx,QWORD PTR [rsp+0x190]
   14000487b:	add    rsp,0x160
   140004882:	pop    rdi
   140004883:	pop    rsi
   140004884:	pop    rbp
   140004885:	ret    
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	int3   
   14000488d:	int3   
   14000488e:	int3   
   14000488f:	int3   
   140004890:	mov    QWORD PTR [rsp+0x10],rbx
   140004895:	push   rsi
   140004896:	sub    rsp,0x20
   14000489a:	mov    rsi,rcx
   14000489d:	mov    rcx,QWORD PTR [rcx+0x140]
   1400048a4:	test   rcx,rcx
   1400048a7:	je     0x1400048ca
   1400048a9:	cmp    BYTE PTR [rsi+0x130],0x0
   1400048b0:	je     0x1400048ca
   1400048b2:	mov    rax,QWORD PTR [rcx]
   1400048b5:	lea    rdx,[rsi+0x118]
   1400048bc:	call   QWORD PTR [rax+0x38]
   1400048bf:	test   eax,eax
   1400048c1:	sets   al
   1400048c4:	mov    BYTE PTR [rsi+0x130],al
   1400048ca:	mov    rcx,QWORD PTR [rsi+0x140]
   1400048d1:	xor    ebx,ebx
   1400048d3:	test   rcx,rcx
   1400048d6:	je     0x1400048e5
   1400048d8:	mov    rax,QWORD PTR [rcx]
   1400048db:	call   QWORD PTR [rax+0x10]
   1400048de:	mov    QWORD PTR [rsi+0x140],rbx
   1400048e5:	mov    rcx,QWORD PTR [rsi+0x138]
   1400048ec:	test   rcx,rcx
   1400048ef:	je     0x1400048fe
   1400048f1:	mov    rax,QWORD PTR [rcx]
   1400048f4:	call   QWORD PTR [rax+0x10]
   1400048f7:	mov    QWORD PTR [rsi+0x138],rbx
   1400048fe:	mov    rbx,QWORD PTR [rsi+0x148]
   140004905:	cmp    rbx,QWORD PTR [rsi+0x150]
   14000490c:	je     0x14000492f
   14000490e:	xchg   ax,ax
   140004910:	mov    rcx,QWORD PTR [rbx]
   140004913:	test   rcx,rcx
   140004916:	je     0x140004922
   140004918:	mov    rax,QWORD PTR [rcx]
   14000491b:	mov    edx,0x1
   140004920:	call   QWORD PTR [rax]
   140004922:	add    rbx,0x8
   140004926:	cmp    rbx,QWORD PTR [rsi+0x150]
   14000492d:	jne    0x140004910
   14000492f:	mov    rdx,QWORD PTR [rsi+0x150]
   140004936:	mov    rbx,QWORD PTR [rsi+0x148]
   14000493d:	cmp    rbx,rdx
   140004940:	je     0x140004974
   140004942:	mov    rax,rdx
   140004945:	mov    QWORD PTR [rsp+0x30],rdi
   14000494a:	mov    rcx,rbx
   14000494d:	sub    rax,rdx
   140004950:	sar    rax,0x3
   140004954:	lea    rdi,[rax*8+0x0]
   14000495c:	mov    r8,rdi
   14000495f:	call   0x140033260
   140004964:	lea    r11,[rdi+rbx*1]
   140004968:	mov    rdi,QWORD PTR [rsp+0x30]
   14000496d:	mov    QWORD PTR [rsi+0x150],r11
   140004974:	mov    rbx,QWORD PTR [rsp+0x38]
   140004979:	add    rsp,0x20
   14000497d:	pop    rsi
   14000497e:	ret    
   14000497f:	int3   
   140004980:	mov    rax,rsp
   140004983:	push   rbp
   140004984:	push   r12
   140004986:	push   r13
   140004988:	push   r14
   14000498a:	push   r15
   14000498c:	lea    rbp,[rax-0x5f]
   140004990:	sub    rsp,0x100
   140004997:	mov    QWORD PTR [rbp-0x71],0xfffffffffffffffe
   14000499f:	mov    QWORD PTR [rax+0x10],rbx
   1400049a3:	mov    QWORD PTR [rax+0x18],rsi
   1400049a7:	mov    QWORD PTR [rax+0x20],rdi
   1400049ab:	mov    rax,QWORD PTR [rip+0x806f6]        # 0x1400850a8
   1400049b2:	xor    rax,rsp
   1400049b5:	mov    QWORD PTR [rbp+0x27],rax
   1400049b9:	mov    r15,rcx
   1400049bc:	xor    edi,edi
   1400049be:	mov    r14d,edi
   1400049c1:	mov    DWORD PTR [rsp+0x38],edi
   1400049c5:	mov    rbx,QWORD PTR [rcx+0x148]
   1400049cc:	cmp    rbx,QWORD PTR [rcx+0x150]
   1400049d3:	je     0x140004a92
   1400049d9:	lea    r12,[rbx+0x8]
   1400049dd:	nop    DWORD PTR [rax]
   1400049e0:	mov    rsi,QWORD PTR [rbx]
   1400049e3:	test   rsi,rsi
   1400049e6:	je     0x140004a7d
   1400049ec:	mov    rcx,QWORD PTR [rsi+0x28]
   1400049f0:	test   rcx,rcx
   1400049f3:	je     0x140004a41
   1400049f5:	mov    rax,QWORD PTR [rcx]
   1400049f8:	lea    rdx,[rsi+0x24]
   1400049fc:	call   QWORD PTR [rax+0x18]
   1400049ff:	cmp    DWORD PTR [rsi+0x24],0x1
   140004a03:	sete   al
   140004a06:	test   al,al
   140004a08:	je     0x140004a25
   140004a0a:	cmp    BYTE PTR [rsi+0x20],dil
   140004a0e:	jne    0x140004a41
   140004a10:	mov    rcx,QWORD PTR [rsi+0x28]
   140004a14:	mov    rax,QWORD PTR [rcx]
   140004a17:	lea    rdx,[rsi+0x8]
   140004a1b:	call   QWORD PTR [rax+0x50]
   140004a1e:	test   eax,eax
   140004a20:	setns  al
   140004a23:	jmp    0x140004a3e
   140004a25:	cmp    BYTE PTR [rsi+0x20],dil
   140004a29:	je     0x140004a41
   140004a2b:	mov    rcx,QWORD PTR [rsi+0x28]
   140004a2f:	mov    rax,QWORD PTR [rcx]
   140004a32:	lea    rdx,[rsi+0x8]
   140004a36:	call   QWORD PTR [rax+0x58]
   140004a39:	test   eax,eax
   140004a3b:	sets   al
   140004a3e:	mov    BYTE PTR [rsi+0x20],al
   140004a41:	mov    rcx,rsi
   140004a44:	call   0x140003030
   140004a49:	test   al,al
   140004a4b:	jne    0x140004a7d
   140004a4d:	mov    rax,QWORD PTR [rsi]
   140004a50:	mov    edx,0x1
   140004a55:	mov    rcx,rsi
   140004a58:	call   QWORD PTR [rax]
   140004a5a:	mov    r8,QWORD PTR [r15+0x150]
   140004a61:	sub    r8,r12
   140004a64:	and    r8,0xfffffffffffffff8
   140004a68:	mov    rdx,r12
   140004a6b:	mov    rcx,rbx
   140004a6e:	call   0x140033260
   140004a73:	add    QWORD PTR [r15+0x150],0xfffffffffffffff8
   140004a7b:	jmp    0x140004a85
   140004a7d:	add    rbx,0x8
   140004a81:	add    r12,0x8
   140004a85:	cmp    rbx,QWORD PTR [r15+0x150]
   140004a8c:	jne    0x1400049e0
   140004a92:	mov    rcx,QWORD PTR [r15+0x140]
   140004a99:	test   rcx,rcx
   140004a9c:	je     0x140004d62
   140004aa2:	mov    QWORD PTR [rbp-0x79],rdi
   140004aa6:	mov    rax,QWORD PTR [rcx]
   140004aa9:	lea    rdx,[rbp-0x79]
   140004aad:	call   QWORD PTR [rax+0x28]
   140004ab0:	mov    rcx,QWORD PTR [rbp-0x79]
   140004ab4:	test   rcx,rcx
   140004ab7:	je     0x140004d57
   140004abd:	mov    DWORD PTR [rsp+0x48],edi
   140004ac1:	mov    rax,QWORD PTR [rcx]
   140004ac4:	lea    rdx,[rsp+0x48]
   140004ac9:	call   QWORD PTR [rax+0x18]
   140004acc:	mov    r12d,edi
   140004acf:	test   eax,eax
   140004ad1:	js     0x140004d53
   140004ad7:	nop    WORD PTR [rax+rax*1+0x0]
   140004ae0:	cmp    r12d,DWORD PTR [rsp+0x48]
   140004ae5:	jge    0x140004d53
   140004aeb:	mov    DWORD PTR [rbp-0x7d],edi
   140004aee:	mov    QWORD PTR [rsp+0x28],rdi
   140004af3:	mov    rcx,QWORD PTR [rbp-0x79]
   140004af7:	mov    rax,QWORD PTR [rcx]
   140004afa:	lea    r8,[rsp+0x28]
   140004aff:	mov    edx,r12d
   140004b02:	call   QWORD PTR [rax+0x20]
   140004b05:	mov    ebx,eax
   140004b07:	mov    DWORD PTR [rsp+0x30],eax
   140004b0b:	mov    r9,QWORD PTR [rsp+0x28]
   140004b10:	test   r9,r9
   140004b13:	je     0x140004b28
   140004b15:	mov    r8,QWORD PTR [r9]
   140004b18:	lea    rdx,[rbp-0x7d]
   140004b1c:	mov    rcx,r9
   140004b1f:	call   QWORD PTR [r8+0x18]
   140004b23:	mov    r9,QWORD PTR [rsp+0x28]
   140004b28:	mov    rcx,rdi
   140004b2b:	mov    QWORD PTR [rsp+0x20],rcx
   140004b30:	cmp    DWORD PTR [rbp-0x7d],0x1
   140004b34:	jne    0x140004b54
   140004b36:	mov    rax,QWORD PTR [r9]
   140004b39:	lea    r8,[rsp+0x20]
   140004b3e:	lea    rdx,[rip+0x66beb]        # 0x14006b730
   140004b45:	mov    rcx,r9
   140004b48:	call   QWORD PTR [rax]
   140004b4a:	mov    r9,QWORD PTR [rsp+0x28]
   140004b4f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004b54:	mov    QWORD PTR [rsp+0x40],rdi
   140004b59:	test   rcx,rcx
   140004b5c:	je     0x140004b73
   140004b5e:	mov    rax,QWORD PTR [rcx]
   140004b61:	lea    rdx,[rsp+0x40]
   140004b66:	call   QWORD PTR [rax+0x60]
   140004b69:	mov    r9,QWORD PTR [rsp+0x28]
   140004b6e:	mov    rcx,QWORD PTR [rsp+0x20]
   140004b73:	mov    sil,0x1
   140004b76:	cmp    QWORD PTR [rsp+0x40],0x0
   140004b7c:	je     0x140004d2a
   140004b82:	mov    rbx,QWORD PTR [r15+0x148]
   140004b89:	nop    DWORD PTR [rax+0x0]
   140004b90:	cmp    rbx,QWORD PTR [r15+0x150]
   140004b97:	je     0x140004c17
   140004b99:	mov    rdi,QWORD PTR [rbx]
   140004b9c:	test   rdi,rdi
   140004b9f:	je     0x140004bdc
   140004ba1:	lea    rax,[rbp-0x61]
   140004ba5:	mov    QWORD PTR [rbp-0x69],rax
   140004ba9:	mov    r8d,0x3
   140004baf:	mov    rdx,QWORD PTR [rsp+0x40]
   140004bb4:	lea    rcx,[rbp-0x69]
   140004bb8:	call   0x140002a70
   140004bbd:	nop
   140004bbe:	or     r14d,0x1
   140004bc2:	mov    DWORD PTR [rsp+0x38],r14d
   140004bc7:	mov    rdx,QWORD PTR [rbp-0x69]
   140004bcb:	mov    rcx,rdi
   140004bce:	call   0x140003af0
   140004bd3:	test   al,al
   140004bd5:	je     0x140004bdc
   140004bd7:	mov    dil,0x1
   140004bda:	jmp    0x140004bdf
   140004bdc:	xor    dil,dil
   140004bdf:	test   r14b,0x1
   140004be3:	je     0x140004bfb
   140004be5:	and    r14d,0xfffffffe
   140004be9:	lea    rax,[rbp-0x61]
   140004bed:	mov    rcx,QWORD PTR [rbp-0x69]
   140004bf1:	cmp    rcx,rax
   140004bf4:	je     0x140004bfb
   140004bf6:	call   0x140033594
   140004bfb:	movzx  esi,sil
   140004bff:	test   dil,dil
   140004c02:	mov    edi,0x0
   140004c07:	cmovne esi,edi
   140004c0a:	add    rbx,0x8
   140004c0e:	test   sil,sil
   140004c11:	jne    0x140004b90
   140004c17:	mov    rcx,QWORD PTR [rsp+0x20]
   140004c1c:	cmp    QWORD PTR [rsp+0x40],0x0
   140004c22:	je     0x140004d21
   140004c28:	test   rcx,rcx
   140004c2b:	je     0x140004d04
   140004c31:	test   sil,sil
   140004c34:	je     0x140004d04
   140004c3a:	mov    ecx,0x190
   140004c3f:	call   0x1400331a0
   140004c44:	mov    QWORD PTR [rsp+0x38],rax
   140004c49:	test   rax,rax
   140004c4c:	je     0x140004c64
   140004c4e:	mov    r8,QWORD PTR [rsp+0x20]
   140004c53:	mov    rdx,QWORD PTR [r15+0x8]
   140004c57:	mov    rcx,rax
   140004c5a:	call   0x140003540
   140004c5f:	mov    rbx,rax
   140004c62:	jmp    0x140004c67
   140004c64:	mov    rbx,rdi
   140004c67:	mov    QWORD PTR [rsp+0x38],rbx
   140004c6c:	mov    rcx,rbx
   140004c6f:	call   0x140003c70
   140004c74:	mov    rax,QWORD PTR [r15+0x150]
   140004c7b:	lea    rcx,[rsp+0x38]
   140004c80:	cmp    rcx,rax
   140004c83:	jae    0x140004cd3
   140004c85:	mov    rcx,QWORD PTR [r15+0x148]
   140004c8c:	lea    rdx,[rsp+0x38]
   140004c91:	cmp    rcx,rdx
   140004c94:	ja     0x140004cd3
   140004c96:	lea    rbx,[rsp+0x38]
   140004c9b:	sub    rbx,rcx
   140004c9e:	sar    rbx,0x3
   140004ca2:	cmp    rax,QWORD PTR [r15+0x158]
   140004ca9:	jne    0x140004cb7
   140004cab:	lea    rcx,[r15+0x148]
   140004cb2:	call   0x14002edc0
   140004cb7:	mov    rax,QWORD PTR [r15+0x148]
   140004cbe:	mov    rcx,QWORD PTR [r15+0x150]
   140004cc5:	test   rcx,rcx
   140004cc8:	je     0x140004cf7
   140004cca:	mov    rax,QWORD PTR [rax+rbx*8]
   140004cce:	mov    QWORD PTR [rcx],rax
   140004cd1:	jmp    0x140004cf7
   140004cd3:	cmp    rax,QWORD PTR [r15+0x158]
   140004cda:	jne    0x140004ce8
   140004cdc:	lea    rcx,[r15+0x148]
   140004ce3:	call   0x14002edc0
   140004ce8:	mov    rax,QWORD PTR [r15+0x150]
   140004cef:	test   rax,rax
   140004cf2:	je     0x140004cf7
   140004cf4:	mov    QWORD PTR [rax],rbx
   140004cf7:	mov    rcx,QWORD PTR [rsp+0x20]
   140004cfc:	add    QWORD PTR [r15+0x150],0x8
   140004d04:	mov    rax,QWORD PTR [rsp+0x40]
   140004d09:	test   rax,rax
   140004d0c:	je     0x140004d21
   140004d0e:	mov    rcx,rax
   140004d11:	call   QWORD PTR [rip+0x63981]        # 0x140068698
   140004d17:	mov    QWORD PTR [rsp+0x40],rdi
   140004d1c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004d21:	mov    r9,QWORD PTR [rsp+0x28]
   140004d26:	mov    ebx,DWORD PTR [rsp+0x30]
   140004d2a:	test   rcx,rcx
   140004d2d:	je     0x140004d3a
   140004d2f:	mov    rax,QWORD PTR [rcx]
   140004d32:	call   QWORD PTR [rax+0x10]
   140004d35:	mov    r9,QWORD PTR [rsp+0x28]
   140004d3a:	test   r9,r9
   140004d3d:	je     0x140004d48
   140004d3f:	mov    rax,QWORD PTR [r9]
   140004d42:	mov    rcx,r9
   140004d45:	call   QWORD PTR [rax+0x10]
   140004d48:	inc    r12d
   140004d4b:	test   ebx,ebx
   140004d4d:	jns    0x140004ae0
   140004d53:	mov    rcx,QWORD PTR [rbp-0x79]
   140004d57:	test   rcx,rcx
   140004d5a:	je     0x140004d62
   140004d5c:	mov    rax,QWORD PTR [rcx]
   140004d5f:	call   QWORD PTR [rax+0x10]
   140004d62:	mov    rcx,QWORD PTR [rbp+0x27]
   140004d66:	xor    rcx,rsp
   140004d69:	call   0x140032f00
   140004d6e:	lea    r11,[rsp+0x100]
   140004d76:	mov    rbx,QWORD PTR [r11+0x38]
   140004d7a:	mov    rsi,QWORD PTR [r11+0x40]
   140004d7e:	mov    rdi,QWORD PTR [r11+0x48]
   140004d82:	mov    rsp,r11
   140004d85:	pop    r15
   140004d87:	pop    r14
   140004d89:	pop    r13
   140004d8b:	pop    r12
   140004d8d:	pop    rbp
   140004d8e:	ret    
   140004d8f:	int3   
   140004d90:	mov    QWORD PTR [rsp+0x8],rbx
   140004d95:	mov    QWORD PTR [rsp+0x10],rsi
   140004d9a:	push   rdi
   140004d9b:	sub    rsp,0x20
   140004d9f:	mov    rbx,QWORD PTR [rcx+0x148]
   140004da6:	xor    edi,edi
   140004da8:	mov    rsi,rcx
   140004dab:	cmp    rbx,QWORD PTR [rcx+0x150]
   140004db2:	je     0x140004dd4
   140004db4:	mov    rcx,QWORD PTR [rbx]
   140004db7:	test   rcx,rcx
   140004dba:	je     0x140004dc7
   140004dbc:	call   0x140003030
   140004dc1:	test   al,al
   140004dc3:	je     0x140004dc7
   140004dc5:	inc    edi
   140004dc7:	add    rbx,0x8
   140004dcb:	cmp    rbx,QWORD PTR [rsi+0x150]
   140004dd2:	jne    0x140004db4
   140004dd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004dd9:	mov    rsi,QWORD PTR [rsp+0x38]
   140004dde:	mov    eax,edi
   140004de0:	add    rsp,0x20
   140004de4:	pop    rdi
   140004de5:	ret    
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	int3   
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	mov    QWORD PTR [rsp+0x8],rcx
   140004df5:	push   rdi
   140004df6:	sub    rsp,0x30
   140004dfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e03:	mov    QWORD PTR [rsp+0x48],rbx
   140004e08:	mov    QWORD PTR [rsp+0x58],rsi
   140004e0d:	mov    edi,edx
   140004e0f:	mov    rsi,rcx
   140004e12:	lea    rax,[rip+0x668df]        # 0x14006b6f8
   140004e19:	mov    QWORD PTR [rcx],rax
   140004e1c:	call   0x140005280
   140004e21:	nop
   140004e22:	lea    rbx,[rsi+0x18]
   140004e26:	mov    QWORD PTR [rsp+0x40],rbx
   140004e2b:	mov    r8,QWORD PTR [rbx+0x8]
   140004e2f:	mov    r9,r8
   140004e32:	mov    r8,QWORD PTR [r8]
   140004e35:	lea    rdx,[rsp+0x50]
   140004e3a:	mov    rcx,rbx
   140004e3d:	call   0x140009120
   140004e42:	nop
   140004e43:	mov    rcx,QWORD PTR [rbx+0x8]
   140004e47:	call   0x1400330c0
   140004e4c:	test   dil,0x1
   140004e50:	je     0x140004e5a
   140004e52:	mov    rcx,rsi
   140004e55:	call   0x1400330c0
   140004e5a:	mov    rax,rsi
   140004e5d:	mov    rbx,QWORD PTR [rsp+0x48]
   140004e62:	mov    rsi,QWORD PTR [rsp+0x58]
   140004e67:	add    rsp,0x30
   140004e6b:	pop    rdi
   140004e6c:	ret    
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	mov    QWORD PTR [rsp+0x8],rcx
   140004e75:	push   rbx
   140004e76:	sub    rsp,0x30
   140004e7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004e83:	mov    rbx,rcx
   140004e86:	lea    rax,[rip+0x6686b]        # 0x14006b6f8
   140004e8d:	mov    QWORD PTR [rcx],rax
   140004e90:	call   0x140005280
   140004e95:	nop
   140004e96:	add    rbx,0x18
   140004e9a:	mov    QWORD PTR [rsp+0x40],rbx
   140004e9f:	mov    r8,QWORD PTR [rbx+0x8]
   140004ea3:	mov    r9,r8
   140004ea6:	mov    r8,QWORD PTR [r8]
   140004ea9:	lea    rdx,[rsp+0x48]
   140004eae:	mov    rcx,rbx
   140004eb1:	call   0x140009120
   140004eb6:	nop
   140004eb7:	mov    rcx,QWORD PTR [rbx+0x8]
   140004ebb:	add    rsp,0x30
   140004ebf:	pop    rbx
   140004ec0:	jmp    0x1400330c0
   140004ec5:	int3   
   140004ec6:	int3   
   140004ec7:	int3   
   140004ec8:	int3   
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    rax,rsp
   140004ed3:	push   rbp
   140004ed4:	push   r12
   140004ed6:	push   r13
   140004ed8:	push   r14
   140004eda:	push   r15
   140004edc:	lea    rbp,[rax-0x5f]
   140004ee0:	sub    rsp,0xc0
   140004ee7:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   140004eef:	mov    QWORD PTR [rax+0x10],rbx
   140004ef3:	mov    QWORD PTR [rax+0x18],rsi
   140004ef7:	mov    QWORD PTR [rax+0x20],rdi
   140004efb:	mov    rax,QWORD PTR [rip+0x801a6]        # 0x1400850a8
   140004f02:	xor    rax,rsp
   140004f05:	mov    QWORD PTR [rbp+0x27],rax
   140004f09:	mov    r13,rcx
   140004f0c:	mov    r15b,0x1
   140004f0f:	mov    QWORD PTR [rcx+0x8],rdx
   140004f13:	mov    DWORD PTR [rcx+0x10],r8d
   140004f17:	xor    edi,edi
   140004f19:	mov    QWORD PTR [rbp-0x69],rdi
   140004f1d:	mov    QWORD PTR [rbp-0x61],rdi
   140004f21:	mov    QWORD PTR [rbp-0x59],rdi
   140004f25:	lea    rcx,[rbp-0x69]
   140004f29:	call   0x140010a70
   140004f2e:	mov    r14,QWORD PTR [rbp-0x69]
   140004f32:	mov    r12,QWORD PTR [rbp-0x61]
   140004f36:	cmp    r14,r12
   140004f39:	je     0x1400051c8
   140004f3f:	lea    rsi,[r14+0x18]
   140004f43:	or     rcx,0xffffffffffffffff
   140004f47:	mov    QWORD PTR [rbp+0x7],0xf
   140004f4f:	mov    QWORD PTR [rbp-0x1],rdi
   140004f53:	mov    BYTE PTR [rbp-0x11],0x0
   140004f57:	mov    rbx,QWORD PTR [rsi-0x8]
   140004f5b:	cmp    rbx,rcx
   140004f5e:	cmova  rbx,rcx
   140004f62:	lea    rdi,[rsi-0x18]
   140004f66:	lea    rax,[rbp-0x11]
   140004f6a:	cmp    rax,rdi
   140004f6d:	jne    0x140004f8e
   140004f6f:	mov    r8,rcx
   140004f72:	mov    rdx,rbx
   140004f75:	lea    rcx,[rbp-0x11]
   140004f79:	call   0x140002da0
   140004f7e:	xor    r8d,r8d
   140004f81:	xor    edx,edx
   140004f83:	lea    rcx,[rbp-0x11]
   140004f87:	call   0x140002da0
   140004f8c:	jmp    0x140004ffd
   140004f8e:	cmp    rbx,0xfffffffffffffffe
   140004f92:	ja     0x1400051bb
   140004f98:	cmp    rbx,0xf
   140004f9c:	jbe    0x140004faf
   140004f9e:	xor    r8d,r8d
   140004fa1:	mov    rdx,rbx
   140004fa4:	lea    rcx,[rbp-0x11]
   140004fa8:	call   0x140002e40
   140004fad:	jmp    0x140004fbb
   140004faf:	test   rbx,rbx
   140004fb2:	jne    0x140004fbe
   140004fb4:	mov    QWORD PTR [rbp-0x1],rbx
   140004fb8:	mov    BYTE PTR [rbp-0x11],bl
   140004fbb:	test   rbx,rbx
   140004fbe:	setne  al
   140004fc1:	test   al,al
   140004fc3:	je     0x140004ffd
   140004fc5:	cmp    QWORD PTR [rsi],0x10
   140004fc9:	jb     0x140004fce
   140004fcb:	mov    rdi,QWORD PTR [rdi]
   140004fce:	lea    rcx,[rbp-0x11]
   140004fd2:	cmp    QWORD PTR [rbp+0x7],0x10
   140004fd7:	cmovae rcx,QWORD PTR [rbp-0x11]
   140004fdc:	mov    r8,rbx
   140004fdf:	mov    rdx,rdi
   140004fe2:	call   0x140033260
   140004fe7:	mov    QWORD PTR [rbp-0x1],rbx
   140004feb:	lea    rax,[rbp-0x11]
   140004fef:	cmp    QWORD PTR [rbp+0x7],0x10
   140004ff4:	cmovae rax,QWORD PTR [rbp-0x11]
   140004ff9:	mov    BYTE PTR [rax+rbx*1],0x0
   140004ffd:	mov    ecx,DWORD PTR [rsi+0x10]
   140005000:	mov    DWORD PTR [rbp+0x17],ecx
   140005003:	mov    eax,DWORD PTR [rsi+0x14]
   140005006:	mov    DWORD PTR [rbp+0x1b],eax
   140005009:	mov    eax,DWORD PTR [rsi+0x18]
   14000500c:	mov    DWORD PTR [rbp+0x1f],eax
   14000500f:	cmp    DWORD PTR [r13+0x10],ecx
   140005013:	jne    0x14000518a
   140005019:	mov    ecx,0x168
   14000501e:	call   0x1400331a0
   140005023:	mov    rbx,rax
   140005026:	mov    QWORD PTR [rbp-0x41],rax
   14000502a:	test   rax,rax
   14000502d:	je     0x14000508d
   14000502f:	mov    rax,QWORD PTR [r13+0x8]
   140005033:	lea    rcx,[rip+0x666ae]        # 0x14006b6e8
   14000503a:	mov    QWORD PTR [rbx],rcx
   14000503d:	mov    QWORD PTR [rbx+0x8],rax
   140005041:	lea    rcx,[rbx+0x118]
   140005048:	lea    rdx,[rip+0x665f9]        # 0x14006b648
   14000504f:	mov    QWORD PTR [rcx],rdx
   140005052:	xor    edx,edx
   140005054:	mov    DWORD PTR [rcx+0x8],edx
   140005057:	mov    QWORD PTR [rcx+0x10],rax
   14000505b:	mov    BYTE PTR [rbx+0x130],dl
   140005061:	mov    QWORD PTR [rbx+0x138],rdx
   140005068:	mov    QWORD PTR [rbx+0x140],rdx
   14000506f:	mov    QWORD PTR [rbx+0x148],rdx
   140005076:	mov    QWORD PTR [rbx+0x150],rdx
   14000507d:	mov    QWORD PTR [rbx+0x158],rdx
   140005084:	mov    rax,QWORD PTR [rcx]
   140005087:	call   QWORD PTR [rax+0x8]
   14000508a:	nop
   14000508b:	jmp    0x14000508f
   14000508d:	xor    ebx,ebx
   14000508f:	mov    r8d,0xf
   140005095:	mov    QWORD PTR [rbp-0x21],r8
   140005099:	mov    QWORD PTR [rbp-0x29],0x0
   1400050a1:	mov    BYTE PTR [rbp-0x39],0x0
   1400050a5:	mov    rdi,QWORD PTR [rbp-0x1]
   1400050a9:	cmp    rdi,0xffffffffffffffff
   1400050ad:	mov    rax,0xffffffffffffffff
   1400050b4:	cmova  rdi,rax
   1400050b8:	cmp    rdi,0xfffffffffffffffe
   1400050bc:	ja     0x1400051ae
   1400050c2:	cmp    rdi,r8
   1400050c5:	jbe    0x1400050dc
   1400050c7:	xor    r8d,r8d
   1400050ca:	mov    rdx,rdi
   1400050cd:	lea    rcx,[rbp-0x39]
   1400050d1:	call   0x140002e40
   1400050d6:	mov    r8,QWORD PTR [rbp-0x21]
   1400050da:	jmp    0x1400050e9
   1400050dc:	test   rdi,rdi
   1400050df:	jne    0x1400050ec
   1400050e1:	mov    QWORD PTR [rbp-0x29],rdi
   1400050e5:	mov    BYTE PTR [rbp-0x39],dil
   1400050e9:	test   rdi,rdi
   1400050ec:	setne  al
   1400050ef:	test   al,al
   1400050f1:	je     0x140005130
   1400050f3:	lea    rdx,[rbp-0x11]
   1400050f7:	cmp    QWORD PTR [rbp+0x7],0x10
   1400050fc:	cmovae rdx,QWORD PTR [rbp-0x11]
   140005101:	lea    rcx,[rbp-0x39]
   140005105:	cmp    r8,0x10
   140005109:	cmovae rcx,QWORD PTR [rbp-0x39]
   14000510e:	mov    r8,rdi
   140005111:	call   0x140033260
   140005116:	mov    QWORD PTR [rbp-0x29],rdi
   14000511a:	lea    rax,[rbp-0x39]
   14000511e:	cmp    QWORD PTR [rbp-0x21],0x10
   140005123:	cmovae rax,QWORD PTR [rbp-0x39]
   140005128:	mov    BYTE PTR [rax+rdi*1],0x0
   14000512c:	mov    r8,QWORD PTR [rbp-0x21]
   140005130:	lea    rdx,[rbp-0x39]
   140005134:	cmp    r8,0x10
   140005138:	cmovae rdx,QWORD PTR [rbp-0x39]
   14000513d:	mov    rcx,rbx
   140005140:	call   0x140004710
   140005145:	test   al,al
   140005147:	je     0x140005163
   140005149:	mov    rcx,rbx
   14000514c:	call   0x140004980
   140005151:	lea    rcx,[r13+0x18]
   140005155:	lea    rdx,[rbp-0x39]
   140005159:	call   0x1400057d0
   14000515e:	mov    QWORD PTR [rax],rbx
   140005161:	jmp    0x140005179
   140005163:	xor    r15b,r15b
   140005166:	test   rbx,rbx
   140005169:	je     0x140005179
   14000516b:	mov    rax,QWORD PTR [rbx]
   14000516e:	mov    edx,0x1
   140005173:	mov    rcx,rbx
   140005176:	call   QWORD PTR [rax]
   140005178:	nop
   140005179:	cmp    QWORD PTR [rbp-0x21],0x10
   14000517e:	jb     0x14000518a
   140005180:	mov    rcx,QWORD PTR [rbp-0x39]
   140005184:	call   0x1400330c0
   140005189:	nop
   14000518a:	cmp    QWORD PTR [rbp+0x7],0x10
   14000518f:	jb     0x14000519a
   140005191:	mov    rcx,QWORD PTR [rbp-0x11]
   140005195:	call   0x1400330c0
   14000519a:	add    rsi,0x38
   14000519e:	lea    rax,[rsi-0x18]
   1400051a2:	xor    edi,edi
   1400051a4:	cmp    rax,r12
   1400051a7:	je     0x1400051c8
   1400051a9:	jmp    0x140004f43
   1400051ae:	lea    rcx,[rip+0x6619b]        # 0x14006b350
   1400051b5:	call   0x140032d00
   1400051ba:	nop
   1400051bb:	lea    rcx,[rip+0x6618e]        # 0x14006b350
   1400051c2:	call   0x140032d00
   1400051c7:	nop
   1400051c8:	test   r14,r14
   1400051cb:	je     0x140005204
   1400051cd:	mov    rbx,r14
   1400051d0:	cmp    r14,r12
   1400051d3:	je     0x1400051fc
   1400051d5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400051da:	jb     0x1400051e4
   1400051dc:	mov    rcx,QWORD PTR [rbx]
   1400051df:	call   0x1400330c0
   1400051e4:	mov    QWORD PTR [rbx+0x18],0xf
   1400051ec:	mov    QWORD PTR [rbx+0x10],rdi
   1400051f0:	mov    BYTE PTR [rbx],0x0
   1400051f3:	add    rbx,0x38
   1400051f7:	cmp    rbx,r12
   1400051fa:	jne    0x1400051d5
   1400051fc:	mov    rcx,r14
   1400051ff:	call   0x1400330c0
   140005204:	movzx  eax,r15b
   140005208:	mov    rcx,QWORD PTR [rbp+0x27]
   14000520c:	xor    rcx,rsp
   14000520f:	call   0x140032f00
   140005214:	lea    r11,[rsp+0xc0]
   14000521c:	mov    rbx,QWORD PTR [r11+0x38]
   140005220:	mov    rsi,QWORD PTR [r11+0x40]
   140005224:	mov    rdi,QWORD PTR [r11+0x48]
   140005228:	mov    rsp,r11
   14000522b:	pop    r15
   14000522d:	pop    r14
   14000522f:	pop    r13
   140005231:	pop    r12
   140005233:	pop    rbp
   140005234:	ret    
   140005235:	int3   
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	rex push rbx
   140005242:	sub    rsp,0x20
   140005246:	cmp    QWORD PTR [rcx+0x18],0x10
   14000524b:	mov    rbx,rcx
   14000524e:	jb     0x140005258
   140005250:	mov    rcx,QWORD PTR [rcx]
   140005253:	call   0x1400330c0
   140005258:	mov    QWORD PTR [rbx+0x18],0xf
   140005260:	mov    QWORD PTR [rbx+0x10],0x0
   140005268:	mov    BYTE PTR [rbx],0x0
   14000526b:	add    rsp,0x20
   14000526f:	pop    rbx
   140005270:	ret    
   140005271:	int3   
   140005272:	int3   
   140005273:	int3   
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    QWORD PTR [rsp+0x8],rbx
   140005285:	mov    QWORD PTR [rsp+0x10],rbp
   14000528a:	mov    QWORD PTR [rsp+0x18],rsi
   14000528f:	push   rdi
   140005290:	sub    rsp,0x20
   140005294:	mov    rax,QWORD PTR [rcx+0x20]
   140005298:	mov    rdi,rcx
   14000529b:	mov    rbx,QWORD PTR [rax]
   14000529e:	cmp    rbx,rax
   1400052a1:	je     0x14000530c
   1400052a3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400052a7:	test   rcx,rcx
   1400052aa:	je     0x1400052b6
   1400052ac:	mov    rax,QWORD PTR [rcx]
   1400052af:	mov    edx,0x1
   1400052b4:	call   QWORD PTR [rax]
   1400052b6:	cmp    BYTE PTR [rbx+0x49],0x0
   1400052ba:	jne    0x140005306
   1400052bc:	mov    rax,QWORD PTR [rbx+0x10]
   1400052c0:	cmp    BYTE PTR [rax+0x49],0x0
   1400052c4:	jne    0x1400052e0
   1400052c6:	mov    rbx,rax
   1400052c9:	mov    rax,QWORD PTR [rax]
   1400052cc:	cmp    BYTE PTR [rax+0x49],0x0
   1400052d0:	jne    0x140005306
   1400052d2:	mov    rbx,rax
   1400052d5:	mov    rax,QWORD PTR [rax]
   1400052d8:	cmp    BYTE PTR [rax+0x49],0x0
   1400052dc:	je     0x1400052d2
   1400052de:	jmp    0x140005306
   1400052e0:	mov    rax,QWORD PTR [rbx+0x8]
   1400052e4:	cmp    BYTE PTR [rax+0x49],0x0
   1400052e8:	jne    0x140005303
   1400052ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400052f0:	cmp    rbx,QWORD PTR [rax+0x10]
   1400052f4:	jne    0x140005303
   1400052f6:	mov    rbx,rax
   1400052f9:	mov    rax,QWORD PTR [rax+0x8]
   1400052fd:	cmp    BYTE PTR [rax+0x49],0x0
   140005301:	je     0x1400052f0
   140005303:	mov    rbx,rax
   140005306:	cmp    rbx,QWORD PTR [rdi+0x20]
   14000530a:	jne    0x1400052a3
   14000530c:	mov    rax,QWORD PTR [rdi+0x20]
   140005310:	xor    ebp,ebp
   140005312:	mov    rbx,QWORD PTR [rax+0x8]
   140005316:	mov    rsi,rbx
   140005319:	cmp    BYTE PTR [rbx+0x49],bpl
   14000531d:	jne    0x140005361
   14000531f:	nop
   140005320:	mov    rdx,QWORD PTR [rsi+0x10]
   140005324:	lea    rcx,[rdi+0x18]
   140005328:	call   0x140008b40
   14000532d:	cmp    QWORD PTR [rbx+0x30],0x10
   140005332:	mov    rsi,QWORD PTR [rsi]
   140005335:	jb     0x140005340
   140005337:	mov    rcx,QWORD PTR [rbx+0x18]
   14000533b:	call   0x1400330c0
   140005340:	mov    QWORD PTR [rbx+0x30],0xf
   140005348:	mov    QWORD PTR [rbx+0x28],rbp
   14000534c:	mov    rcx,rbx
   14000534f:	mov    BYTE PTR [rbx+0x18],bpl
   140005353:	call   0x1400330c0
   140005358:	mov    rbx,rsi
   14000535b:	cmp    BYTE PTR [rsi+0x49],bpl
   14000535f:	je     0x140005320
   140005361:	mov    rax,QWORD PTR [rdi+0x20]
   140005365:	mov    rbx,QWORD PTR [rsp+0x30]
   14000536a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000536f:	mov    QWORD PTR [rax+0x8],rax
   140005373:	mov    rax,QWORD PTR [rdi+0x20]
   140005377:	mov    QWORD PTR [rax],rax
   14000537a:	mov    rax,QWORD PTR [rdi+0x20]
   14000537e:	mov    QWORD PTR [rax+0x10],rax
   140005382:	mov    QWORD PTR [rdi+0x28],rbp
   140005386:	mov    rbp,QWORD PTR [rsp+0x38]
   14000538b:	add    rsp,0x20
   14000538f:	pop    rdi
   140005390:	ret    
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053a5:	push   rdi
   1400053a6:	sub    rsp,0x20
   1400053aa:	mov    rax,QWORD PTR [rcx+0x20]
   1400053ae:	mov    rdi,rcx
   1400053b1:	mov    rbx,QWORD PTR [rax]
   1400053b4:	cmp    rbx,rax
   1400053b7:	je     0x140005424
   1400053b9:	nop    DWORD PTR [rax+0x0]
   1400053c0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400053c4:	call   0x140004980
   1400053c9:	cmp    BYTE PTR [rbx+0x49],0x0
   1400053cd:	jne    0x14000541e
   1400053cf:	mov    rax,QWORD PTR [rbx+0x10]
   1400053d3:	cmp    BYTE PTR [rax+0x49],0x0
   1400053d7:	jne    0x1400053fe
   1400053d9:	mov    rbx,rax
   1400053dc:	mov    rax,QWORD PTR [rax]
   1400053df:	cmp    BYTE PTR [rax+0x49],0x0
   1400053e3:	jne    0x14000541e
   1400053e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400053f0:	mov    rbx,rax
   1400053f3:	mov    rax,QWORD PTR [rax]
   1400053f6:	cmp    BYTE PTR [rax+0x49],0x0
   1400053fa:	je     0x1400053f0
   1400053fc:	jmp    0x14000541e
   1400053fe:	mov    rax,QWORD PTR [rbx+0x8]
   140005402:	cmp    BYTE PTR [rax+0x49],0x0
   140005406:	jne    0x14000541b
   140005408:	cmp    rbx,QWORD PTR [rax+0x10]
   14000540c:	jne    0x14000541b
   14000540e:	mov    rbx,rax
   140005411:	mov    rax,QWORD PTR [rax+0x8]
   140005415:	cmp    BYTE PTR [rax+0x49],0x0
   140005419:	je     0x140005408
   14000541b:	mov    rbx,rax
   14000541e:	cmp    rbx,QWORD PTR [rdi+0x20]
   140005422:	jne    0x1400053c0
   140005424:	mov    rbx,QWORD PTR [rsp+0x30]
   140005429:	add    rsp,0x20
   14000542d:	pop    rdi
   14000542e:	ret    
   14000542f:	int3   
   140005430:	mov    QWORD PTR [rsp+0x8],rbx
   140005435:	mov    QWORD PTR [rsp+0x10],rbp
   14000543a:	mov    QWORD PTR [rsp+0x18],rsi
   14000543f:	push   rdi
   140005440:	push   r12
   140005442:	push   r13
   140005444:	sub    rsp,0x20
   140005448:	mov    rbx,QWORD PTR [rcx+0x20]
   14000544c:	mov    r13,r8
   14000544f:	mov    rbp,rdx
   140005452:	mov    rbx,QWORD PTR [rbx]
   140005455:	mov    r12,rcx
   140005458:	xor    r9b,r9b
   14000545b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005460:	cmp    rbx,QWORD PTR [r12+0x20]
   140005465:	je     0x140005527
   14000546b:	mov    rsi,QWORD PTR [rbx+0x40]
   14000546f:	xor    r9b,r9b
   140005472:	mov    rdi,QWORD PTR [rsi+0x148]
   140005479:	nop    DWORD PTR [rax+0x0]
   140005480:	cmp    rdi,QWORD PTR [rsi+0x150]
   140005487:	je     0x1400054a6
   140005489:	mov    rcx,QWORD PTR [rdi]
   14000548c:	test   rcx,rcx
   14000548f:	je     0x14000549d
   140005491:	mov    rdx,rbp
   140005494:	call   0x140003cf0
   140005499:	movzx  r9d,al
   14000549d:	add    rdi,0x8
   1400054a1:	test   r9b,r9b
   1400054a4:	je     0x140005480
   1400054a6:	test   r9b,r9b
   1400054a9:	je     0x1400054ce
   1400054ab:	lea    rcx,[rsi+0x10]
   1400054af:	mov    rdx,r13
   1400054b2:	sub    rdx,rcx
   1400054b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400054c0:	movzx  eax,BYTE PTR [rcx]
   1400054c3:	inc    rcx
   1400054c6:	mov    BYTE PTR [rdx+rcx*1-0x1],al
   1400054ca:	test   al,al
   1400054cc:	jne    0x1400054c0
   1400054ce:	cmp    BYTE PTR [rbx+0x49],0x0
   1400054d2:	jne    0x14000551e
   1400054d4:	mov    rax,QWORD PTR [rbx+0x10]
   1400054d8:	cmp    BYTE PTR [rax+0x49],0x0
   1400054dc:	jne    0x1400054fe
   1400054de:	mov    rbx,rax
   1400054e1:	mov    rax,QWORD PTR [rax]
   1400054e4:	cmp    BYTE PTR [rax+0x49],0x0
   1400054e8:	jne    0x14000551e
   1400054ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400054f0:	mov    rbx,rax
   1400054f3:	mov    rax,QWORD PTR [rax]
   1400054f6:	cmp    BYTE PTR [rax+0x49],0x0
   1400054fa:	je     0x1400054f0
   1400054fc:	jmp    0x14000551e
   1400054fe:	mov    rcx,QWORD PTR [rbx+0x8]
   140005502:	cmp    BYTE PTR [rcx+0x49],0x0
   140005506:	jne    0x14000551b
   140005508:	cmp    rbx,QWORD PTR [rcx+0x10]
   14000550c:	jne    0x14000551b
   14000550e:	mov    rbx,rcx
   140005511:	mov    rcx,QWORD PTR [rcx+0x8]
   140005515:	cmp    BYTE PTR [rcx+0x49],0x0
   140005519:	je     0x140005508
   14000551b:	mov    rbx,rcx
   14000551e:	test   r9b,r9b
   140005521:	je     0x140005460
   140005527:	mov    rbx,QWORD PTR [rsp+0x40]
   14000552c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005531:	mov    rsi,QWORD PTR [rsp+0x50]
   140005536:	movzx  eax,r9b
   14000553a:	add    rsp,0x20
   14000553e:	pop    r13
   140005540:	pop    r12
   140005542:	pop    rdi
   140005543:	ret    
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    QWORD PTR [rsp+0x8],rbx
   140005555:	mov    QWORD PTR [rsp+0x10],rbp
   14000555a:	mov    QWORD PTR [rsp+0x18],rsi
   14000555f:	push   rdi
   140005560:	push   r12
   140005562:	push   r13
   140005564:	sub    rsp,0x20
   140005568:	mov    rbx,QWORD PTR [rcx+0x20]
   14000556c:	mov    r13,r8
   14000556f:	mov    rbp,rdx
   140005572:	mov    rbx,QWORD PTR [rbx]
   140005575:	mov    r12,rcx
   140005578:	xor    r9b,r9b
   14000557b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005580:	cmp    rbx,QWORD PTR [r12+0x20]
   140005585:	je     0x140005647
   14000558b:	mov    rsi,QWORD PTR [rbx+0x40]
   14000558f:	xor    r9b,r9b
   140005592:	mov    rdi,QWORD PTR [rsi+0x148]
   140005599:	nop    DWORD PTR [rax+0x0]
   1400055a0:	cmp    rdi,QWORD PTR [rsi+0x150]
   1400055a7:	je     0x1400055c6
   1400055a9:	mov    rcx,QWORD PTR [rdi]
   1400055ac:	test   rcx,rcx
   1400055af:	je     0x1400055bd
   1400055b1:	mov    rdx,rbp
   1400055b4:	call   0x140003ef0
   1400055b9:	movzx  r9d,al
   1400055bd:	add    rdi,0x8
   1400055c1:	test   r9b,r9b
   1400055c4:	je     0x1400055a0
   1400055c6:	test   r9b,r9b
   1400055c9:	je     0x1400055ee
   1400055cb:	lea    rcx,[rsi+0x10]
   1400055cf:	mov    rdx,r13
   1400055d2:	sub    rdx,rcx
   1400055d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400055e0:	movzx  eax,BYTE PTR [rcx]
   1400055e3:	inc    rcx
   1400055e6:	mov    BYTE PTR [rdx+rcx*1-0x1],al
   1400055ea:	test   al,al
   1400055ec:	jne    0x1400055e0
   1400055ee:	cmp    BYTE PTR [rbx+0x49],0x0
   1400055f2:	jne    0x14000563e
   1400055f4:	mov    rax,QWORD PTR [rbx+0x10]
   1400055f8:	cmp    BYTE PTR [rax+0x49],0x0
   1400055fc:	jne    0x14000561e
   1400055fe:	mov    rbx,rax
   140005601:	mov    rax,QWORD PTR [rax]
   140005604:	cmp    BYTE PTR [rax+0x49],0x0
   140005608:	jne    0x14000563e
   14000560a:	nop    WORD PTR [rax+rax*1+0x0]
   140005610:	mov    rbx,rax
   140005613:	mov    rax,QWORD PTR [rax]
   140005616:	cmp    BYTE PTR [rax+0x49],0x0
   14000561a:	je     0x140005610
   14000561c:	jmp    0x14000563e
   14000561e:	mov    rcx,QWORD PTR [rbx+0x8]
   140005622:	cmp    BYTE PTR [rcx+0x49],0x0
   140005626:	jne    0x14000563b
   140005628:	cmp    rbx,QWORD PTR [rcx+0x10]
   14000562c:	jne    0x14000563b
   14000562e:	mov    rbx,rcx
   140005631:	mov    rcx,QWORD PTR [rcx+0x8]
   140005635:	cmp    BYTE PTR [rcx+0x49],0x0
   140005639:	je     0x140005628
   14000563b:	mov    rbx,rcx
   14000563e:	test   r9b,r9b
   140005641:	je     0x140005580
   140005647:	mov    rbx,QWORD PTR [rsp+0x40]
   14000564c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005651:	mov    rsi,QWORD PTR [rsp+0x50]
   140005656:	movzx  eax,r9b
   14000565a:	add    rsp,0x20
   14000565e:	pop    r13
   140005660:	pop    r12
   140005662:	pop    rdi
   140005663:	ret    
   140005664:	int3   
   140005665:	int3   
   140005666:	int3   
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	rex push rsi
   140005672:	push   r12
   140005674:	push   r13
   140005676:	sub    rsp,0x20
   14000567a:	xor    esi,esi
   14000567c:	mov    r13,rdx
   14000567f:	mov    r12,rcx
   140005682:	test   rdx,rdx
   140005685:	je     0x14000573d
   14000568b:	mov    QWORD PTR [rsp+0x40],rbx
   140005690:	mov    rbx,QWORD PTR [rcx+0x20]
   140005694:	mov    QWORD PTR [rsp+0x48],rbp
   140005699:	mov    rbx,QWORD PTR [rbx]
   14000569c:	lea    ebp,[rsi+0x1]
   14000569f:	mov    QWORD PTR [rsp+0x50],rdi
   1400056a4:	cmp    rbx,QWORD PTR [r12+0x20]
   1400056a9:	je     0x140005722
   1400056ab:	mov    rdi,QWORD PTR [rbx+0x40]
   1400056af:	test   rdi,rdi
   1400056b2:	je     0x1400056d0
   1400056b4:	lea    rdx,[rdi+0x10]
   1400056b8:	mov    rcx,r13
   1400056bb:	call   0x1400338c4
   1400056c0:	test   eax,eax
   1400056c2:	jne    0x1400056d0
   1400056c4:	mov    rcx,rdi
   1400056c7:	call   0x140004d90
   1400056cc:	add    esi,eax
   1400056ce:	xor    ebp,ebp
   1400056d0:	cmp    BYTE PTR [rbx+0x49],0x0
   1400056d4:	jne    0x14000571e
   1400056d6:	mov    rax,QWORD PTR [rbx+0x10]
   1400056da:	cmp    BYTE PTR [rax+0x49],0x0
   1400056de:	jne    0x1400056fe
   1400056e0:	mov    rbx,rax
   1400056e3:	mov    rax,QWORD PTR [rax]
   1400056e6:	cmp    BYTE PTR [rax+0x49],0x0
   1400056ea:	jne    0x14000571e
   1400056ec:	nop    DWORD PTR [rax+0x0]
   1400056f0:	mov    rbx,rax
   1400056f3:	mov    rax,QWORD PTR [rax]
   1400056f6:	cmp    BYTE PTR [rax+0x49],0x0
   1400056fa:	je     0x1400056f0
   1400056fc:	jmp    0x14000571e
   1400056fe:	mov    rcx,QWORD PTR [rbx+0x8]
   140005702:	cmp    BYTE PTR [rcx+0x49],0x0
   140005706:	jne    0x14000571b
   140005708:	cmp    rbx,QWORD PTR [rcx+0x10]
   14000570c:	jne    0x14000571b
   14000570e:	mov    rbx,rcx
   140005711:	mov    rcx,QWORD PTR [rcx+0x8]
   140005715:	cmp    BYTE PTR [rcx+0x49],0x0
   140005719:	je     0x140005708
   14000571b:	mov    rbx,rcx
   14000571e:	test   ebp,ebp
   140005720:	jne    0x1400056a4
   140005722:	mov    rdi,QWORD PTR [rsp+0x50]
   140005727:	mov    rbx,QWORD PTR [rsp+0x40]
   14000572c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005731:	mov    eax,esi
   140005733:	add    rsp,0x20
   140005737:	pop    r13
   140005739:	pop    r12
   14000573b:	pop    rsi
   14000573c:	ret    
   14000573d:	mov    eax,esi
   14000573f:	add    rsp,0x20
   140005743:	pop    r13
   140005745:	pop    r12
   140005747:	pop    rsi
   140005748:	ret    
   140005749:	int3   
   14000574a:	int3   
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	mov    QWORD PTR [rsp+0x8],rbx
   140005755:	push   rdi
   140005756:	sub    rsp,0x20
   14000575a:	cmp    QWORD PTR [rdx+0x18],0x10
   14000575f:	mov    rdi,QWORD PTR [rdx+0x10]
   140005763:	jb     0x140005768
   140005765:	mov    rdx,QWORD PTR [rdx]
   140005768:	mov    rbx,QWORD PTR [rcx+0x10]
   14000576c:	cmp    rbx,rbx
   14000576f:	cmp    QWORD PTR [rcx+0x18],0x10
   140005774:	jb     0x140005779
   140005776:	mov    rcx,QWORD PTR [rcx]
   140005779:	mov    r8,rdi
   14000577c:	cmp    rbx,rdi
   14000577f:	cmovb  r8,rbx
   140005783:	call   0x14003e320
   140005788:	movsxd rcx,eax
   14000578b:	test   eax,eax
   14000578d:	je     0x14000579c
   14000578f:	mov    eax,ecx
   140005791:	mov    rbx,QWORD PTR [rsp+0x30]
   140005796:	add    rsp,0x20
   14000579a:	pop    rdi
   14000579b:	ret    
   14000579c:	cmp    rbx,rdi
   14000579f:	jae    0x1400057af
   1400057a1:	or     eax,0xffffffff
   1400057a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057a9:	add    rsp,0x20
   1400057ad:	pop    rdi
   1400057ae:	ret    
   1400057af:	xor    eax,eax
   1400057b1:	cmp    rbx,rdi
   1400057b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057b9:	setne  al
   1400057bc:	add    rsp,0x20
   1400057c0:	pop    rdi
   1400057c1:	ret    
   1400057c2:	int3   
   1400057c3:	int3   
   1400057c4:	int3   
   1400057c5:	int3   
   1400057c6:	int3   
   1400057c7:	int3   
   1400057c8:	int3   
   1400057c9:	int3   
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	rex push rbp
   1400057d2:	push   rsi
   1400057d3:	push   rdi
   1400057d4:	sub    rsp,0x70
   1400057d8:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400057e1:	mov    QWORD PTR [rsp+0xa0],rbx
   1400057e9:	mov    rax,QWORD PTR [rip+0x7f8b8]        # 0x1400850a8
   1400057f0:	xor    rax,rsp
   1400057f3:	mov    QWORD PTR [rsp+0x60],rax
   1400057f8:	mov    rdi,rdx
   1400057fb:	mov    rbp,rcx
   1400057fe:	call   0x140009220
   140005803:	mov    rbx,rax
   140005806:	cmp    rax,QWORD PTR [rbp+0x8]
   14000580a:	je     0x140005820
   14000580c:	lea    rdx,[rax+0x18]
   140005810:	mov    rcx,rdi
   140005813:	call   0x140005750
   140005818:	test   eax,eax
   14000581a:	jns    0x1400058f7
   140005820:	mov    QWORD PTR [rsp+0x48],0xf
   140005829:	mov    QWORD PTR [rsp+0x40],0x0
   140005832:	mov    BYTE PTR [rsp+0x30],0x0
   140005837:	mov    rsi,QWORD PTR [rdi+0x10]
   14000583b:	or     r8,0xffffffffffffffff
   14000583f:	cmp    rsi,r8
   140005842:	cmova  rsi,r8
   140005846:	lea    rax,[rsp+0x30]
   14000584b:	mov    rdx,rsi
   14000584e:	lea    rcx,[rsp+0x30]
   140005853:	cmp    rax,rdi
   140005856:	jne    0x14000586e
   140005858:	call   0x140002da0
   14000585d:	xor    r8d,r8d
   140005860:	xor    edx,edx
   140005862:	lea    rcx,[rsp+0x30]
   140005867:	call   0x140002da0
   14000586c:	jmp    0x1400058b7
   14000586e:	call   0x140002d30
   140005873:	test   al,al
   140005875:	je     0x1400058b7
   140005877:	cmp    QWORD PTR [rdi+0x18],0x10
   14000587c:	jb     0x140005881
   14000587e:	mov    rdi,QWORD PTR [rdi]
   140005881:	lea    rcx,[rsp+0x30]
   140005886:	cmp    QWORD PTR [rsp+0x48],0x10
   14000588c:	cmovae rcx,QWORD PTR [rsp+0x30]
   140005892:	mov    r8,rsi
   140005895:	mov    rdx,rdi
   140005898:	call   0x140033260
   14000589d:	mov    QWORD PTR [rsp+0x40],rsi
   1400058a2:	lea    rax,[rsp+0x30]
   1400058a7:	cmp    QWORD PTR [rsp+0x48],0x10
   1400058ad:	cmovae rax,QWORD PTR [rsp+0x30]
   1400058b3:	mov    BYTE PTR [rax+rsi*1],0x0
   1400058b7:	mov    QWORD PTR [rsp+0x58],0x0
   1400058c0:	lea    rdx,[rsp+0x30]
   1400058c5:	mov    rcx,rbp
   1400058c8:	call   0x14000a020
   1400058cd:	mov    r9,rax
   1400058d0:	mov    r8,rbx
   1400058d3:	lea    rdx,[rsp+0x20]
   1400058d8:	mov    rcx,rbp
   1400058db:	call   0x140005eb0
   1400058e0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400058e5:	cmp    QWORD PTR [rsp+0x48],0x10
   1400058eb:	jb     0x1400058f7
   1400058ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400058f2:	call   0x1400330c0
   1400058f7:	lea    rax,[rbx+0x40]
   1400058fb:	mov    rcx,QWORD PTR [rsp+0x60]
   140005900:	xor    rcx,rsp
   140005903:	call   0x140032f00
   140005908:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005910:	add    rsp,0x70
   140005914:	pop    rdi
   140005915:	pop    rsi
   140005916:	pop    rbp
   140005917:	ret    
   140005918:	int3   
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	sub    rsp,0x28
   140005924:	mov    rdx,QWORD PTR [rcx]
   140005927:	lea    rax,[rcx+0x8]
   14000592b:	cmp    rdx,rax
   14000592e:	je     0x140005938
   140005930:	mov    rcx,rdx
   140005933:	call   0x140033594
   140005938:	add    rsp,0x28
   14000593c:	ret    
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	jmp    0x140005c60
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	rex push rbx
   140005952:	push   rbp
   140005953:	push   r13
   140005955:	sub    rsp,0x20
   140005959:	mov    rbp,r8
   14000595c:	mov    r13,rdx
   14000595f:	mov    rbx,rcx
   140005962:	test   r8,r8
   140005965:	jne    0x140005972
   140005967:	xor    eax,eax
   140005969:	add    rsp,0x20
   14000596d:	pop    r13
   14000596f:	pop    rbp
   140005970:	pop    rbx
   140005971:	ret    
   140005972:	mov    QWORD PTR [rsp+0x40],rsi
   140005977:	mov    rsi,QWORD PTR [rcx+0x10]
   14000597b:	mov    QWORD PTR [rsp+0x48],rdi
   140005980:	mov    QWORD PTR [rsp+0x50],r12
   140005985:	test   rsi,rsi
   140005988:	je     0x1400059f6
   14000598a:	cmp    r8,rsi
   14000598d:	ja     0x1400059f6
   14000598f:	mov    eax,0x1
   140005994:	sub    rax,r8
   140005997:	add    rsi,rax
   14000599a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000599f:	jb     0x1400059a6
   1400059a1:	mov    r12,QWORD PTR [rcx]
   1400059a4:	jmp    0x1400059a9
   1400059a6:	mov    r12,rcx
   1400059a9:	movsx  edx,BYTE PTR [rdx]
   1400059ac:	mov    r8,rsi
   1400059af:	mov    rcx,r12
   1400059b2:	call   0x1400339d0
   1400059b7:	mov    rdi,rax
   1400059ba:	test   rax,rax
   1400059bd:	je     0x1400059f6
   1400059bf:	nop
   1400059c0:	mov    r8,rbp
   1400059c3:	mov    rdx,r13
   1400059c6:	mov    rcx,rdi
   1400059c9:	call   0x14003e320
   1400059ce:	test   eax,eax
   1400059d0:	je     0x140005a12
   1400059d2:	movsx  edx,BYTE PTR [r13+0x0]
   1400059d7:	sub    r12,rdi
   1400059da:	lea    rsi,[rsi+r12*1-0x1]
   1400059df:	lea    r12,[rdi+0x1]
   1400059e3:	mov    rcx,r12
   1400059e6:	mov    r8,rsi
   1400059e9:	call   0x1400339d0
   1400059ee:	mov    rdi,rax
   1400059f1:	test   rax,rax
   1400059f4:	jne    0x1400059c0
   1400059f6:	or     rax,0xffffffffffffffff
   1400059fa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400059ff:	mov    rsi,QWORD PTR [rsp+0x40]
   140005a04:	mov    r12,QWORD PTR [rsp+0x50]
   140005a09:	add    rsp,0x20
   140005a0d:	pop    r13
   140005a0f:	pop    rbp
   140005a10:	pop    rbx
   140005a11:	ret    
   140005a12:	cmp    QWORD PTR [rbx+0x18],0x10
   140005a17:	jb     0x140005a1c
   140005a19:	mov    rbx,QWORD PTR [rbx]
   140005a1c:	sub    rdi,rbx
   140005a1f:	mov    rax,rdi
   140005a22:	jmp    0x1400059fa
   140005a24:	int3   
   140005a25:	int3   
   140005a26:	int3   
   140005a27:	int3   
   140005a28:	int3   
   140005a29:	int3   
   140005a2a:	int3   
   140005a2b:	int3   
   140005a2c:	int3   
   140005a2d:	int3   
   140005a2e:	int3   
   140005a2f:	int3   
   140005a30:	mov    QWORD PTR [rsp+0x10],rsi
   140005a35:	push   rdi
   140005a36:	sub    rsp,0x20
   140005a3a:	mov    rsi,rdx
   140005a3d:	mov    rdi,rcx
   140005a40:	test   rdx,rdx
   140005a43:	jne    0x140005a53
   140005a45:	mov    QWORD PTR [rcx],rdx
   140005a48:	mov    rsi,QWORD PTR [rsp+0x38]
   140005a4d:	add    rsp,0x20
   140005a51:	pop    rdi
   140005a52:	ret    
   140005a53:	mov    rcx,rdx
   140005a56:	mov    QWORD PTR [rsp+0x30],rbx
   140005a5b:	call   QWORD PTR [rip+0x6297f]        # 0x1400683e0
   140005a61:	lea    r8,[rdi+0x8]
   140005a65:	mov    rcx,rdi
   140005a68:	lea    ebx,[rax+0x1]
   140005a6b:	mov    edx,ebx
   140005a6d:	call   0x140002f80
   140005a72:	mov    rcx,QWORD PTR [rdi]
   140005a75:	movsxd rdx,ebx
   140005a78:	mov    r9,rdx
   140005a7b:	mov    r8,rsi
   140005a7e:	call   0x140033ccc
   140005a83:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a88:	test   eax,eax
   140005a8a:	je     0x140005a48
   140005a8c:	cmp    eax,0xc
   140005a8f:	je     0x140005ab6
   140005a91:	cmp    eax,0x16
   140005a94:	je     0x140005aab
   140005a96:	cmp    eax,0x22
   140005a99:	je     0x140005aab
   140005a9b:	cmp    eax,0x50
   140005a9e:	je     0x140005a48
   140005aa0:	mov    ecx,0x80004005
   140005aa5:	call   0x1400025f0
   140005aaa:	int3   
   140005aab:	mov    ecx,0x80070057
   140005ab0:	call   0x1400025f0
   140005ab5:	int3   
   140005ab6:	mov    ecx,0x8007000e
   140005abb:	call   0x1400025f0
   140005ac0:	int3   
   140005ac1:	int3   
   140005ac2:	int3   
   140005ac3:	int3   
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	rex push rbx
   140005ad2:	sub    rsp,0x40
   140005ad6:	mov    rbx,rcx
   140005ad9:	mov    QWORD PTR [rcx+0x10],0x0
   140005ae1:	mov    ecx,0x50
   140005ae6:	call   0x1400331a0
   140005aeb:	test   rax,rax
   140005aee:	je     0x140005b20
   140005af0:	mov    QWORD PTR [rbx+0x8],rax
   140005af4:	mov    QWORD PTR [rax],rax
   140005af7:	mov    rax,QWORD PTR [rbx+0x8]
   140005afb:	mov    QWORD PTR [rax+0x8],rax
   140005aff:	mov    rax,QWORD PTR [rbx+0x8]
   140005b03:	mov    QWORD PTR [rax+0x10],rax
   140005b07:	mov    rax,QWORD PTR [rbx+0x8]
   140005b0b:	mov    BYTE PTR [rax+0x48],0x1
   140005b0f:	mov    rax,QWORD PTR [rbx+0x8]
   140005b13:	mov    BYTE PTR [rax+0x49],0x1
   140005b17:	mov    rax,rbx
   140005b1a:	add    rsp,0x40
   140005b1e:	pop    rbx
   140005b1f:	ret    
   140005b20:	lea    rdx,[rsp+0x50]
   140005b25:	lea    rcx,[rsp+0x20]
   140005b2a:	mov    QWORD PTR [rsp+0x50],0x0
   140005b33:	call   0x140032fd4
   140005b38:	lea    r11,[rip+0x62d51]        # 0x140068890
   140005b3f:	lea    rdx,[rip+0x7d8da]        # 0x140083420
   140005b46:	lea    rcx,[rsp+0x20]
   140005b4b:	mov    QWORD PTR [rsp+0x20],r11
   140005b50:	call   0x140036358
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	int3   
   140005b59:	int3   
   140005b5a:	int3   
   140005b5b:	int3   
   140005b5c:	int3   
   140005b5d:	int3   
   140005b5e:	int3   
   140005b5f:	int3   
   140005b60:	rex push rbp
   140005b62:	push   rsi
   140005b63:	push   r13
   140005b65:	sub    rsp,0x30
   140005b69:	mov    r13d,r8d
   140005b6c:	mov    rbp,rdx
   140005b6f:	mov    rsi,rcx
   140005b72:	test   rdx,rdx
   140005b75:	jne    0x140005b83
   140005b77:	mov    QWORD PTR [rcx],rdx
   140005b7a:	add    rsp,0x30
   140005b7e:	pop    r13
   140005b80:	pop    rsi
   140005b81:	pop    rbp
   140005b82:	ret    
   140005b83:	mov    QWORD PTR [rsp+0x50],rbx
   140005b88:	mov    rcx,rdx
   140005b8b:	mov    QWORD PTR [rsp+0x58],r12
   140005b90:	mov    QWORD PTR [rsp+0x60],r14
   140005b95:	call   QWORD PTR [rip+0x62845]        # 0x1400683e0
   140005b9b:	lea    r8,[rsi+0x8]
   140005b9f:	lea    r12d,[rax+0x1]
   140005ba3:	mov    rcx,rsi
   140005ba6:	mov    edx,r12d
   140005ba9:	call   0x140005e00
   140005bae:	mov    rax,QWORD PTR [rsi]
   140005bb1:	mov    r9d,r12d
   140005bb4:	mov    r8,rbp
   140005bb7:	xor    edx,edx
   140005bb9:	mov    ecx,r13d
   140005bbc:	mov    DWORD PTR [rsp+0x28],r12d
   140005bc1:	mov    QWORD PTR [rsp+0x20],rax
   140005bc6:	call   QWORD PTR [rip+0x62804]        # 0x1400683d0
   140005bcc:	xor    ebx,ebx
   140005bce:	test   eax,eax
   140005bd0:	sete   bl
   140005bd3:	test   ebx,ebx
   140005bd5:	je     0x140005c42
   140005bd7:	call   QWORD PTR [rip+0x627e3]        # 0x1400683c0
   140005bdd:	cmp    eax,0x7a
   140005be0:	jne    0x140005c38
   140005be2:	mov    r9d,r12d
   140005be5:	mov    r8,rbp
   140005be8:	xor    edx,edx
   140005bea:	mov    ecx,r13d
   140005bed:	mov    DWORD PTR [rsp+0x28],0x0
   140005bf5:	mov    QWORD PTR [rsp+0x20],0x0
   140005bfe:	call   QWORD PTR [rip+0x627cc]        # 0x1400683d0
   140005c04:	lea    r8,[rsi+0x8]
   140005c08:	mov    rcx,rsi
   140005c0b:	mov    edx,eax
   140005c0d:	mov    ebx,eax
   140005c0f:	call   0x140005e00
   140005c14:	mov    rax,QWORD PTR [rsi]
   140005c17:	mov    r9d,r12d
   140005c1a:	mov    r8,rbp
   140005c1d:	xor    edx,edx
   140005c1f:	mov    ecx,r13d
   140005c22:	mov    DWORD PTR [rsp+0x28],ebx
   140005c26:	mov    QWORD PTR [rsp+0x20],rax
   140005c2b:	call   QWORD PTR [rip+0x6279f]        # 0x1400683d0
   140005c31:	xor    ebx,ebx
   140005c33:	test   eax,eax
   140005c35:	sete   bl
   140005c38:	test   ebx,ebx
   140005c3a:	je     0x140005c42
   140005c3c:	call   0x140002610
   140005c41:	int3   
   140005c42:	mov    r12,QWORD PTR [rsp+0x58]
   140005c47:	mov    rbx,QWORD PTR [rsp+0x50]
   140005c4c:	mov    r14,QWORD PTR [rsp+0x60]
   140005c51:	add    rsp,0x30
   140005c55:	pop    r13
   140005c57:	pop    rsi
   140005c58:	pop    rbp
   140005c59:	ret    
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	mov    QWORD PTR [rsp+0x10],rbx
   140005c65:	mov    QWORD PTR [rsp+0x18],rbp
   140005c6a:	push   rdi
   140005c6b:	sub    rsp,0x20
   140005c6f:	mov    rbx,QWORD PTR [rcx]
   140005c72:	xor    ebp,ebp
   140005c74:	mov    rdi,rcx
   140005c77:	test   rbx,rbx
   140005c7a:	je     0x140005cc4
   140005c7c:	mov    QWORD PTR [rsp+0x30],rsi
   140005c81:	mov    rsi,QWORD PTR [rcx+0x8]
   140005c85:	cmp    rbx,rsi
   140005c88:	je     0x140005cb7
   140005c8a:	nop    WORD PTR [rax+rax*1+0x0]
   140005c90:	cmp    QWORD PTR [rbx+0x18],0x10
   140005c95:	jb     0x140005c9f
   140005c97:	mov    rcx,QWORD PTR [rbx]
   140005c9a:	call   0x1400330c0
   140005c9f:	mov    QWORD PTR [rbx+0x18],0xf
   140005ca7:	mov    QWORD PTR [rbx+0x10],rbp
   140005cab:	mov    BYTE PTR [rbx],bpl
   140005cae:	add    rbx,0x38
   140005cb2:	cmp    rbx,rsi
   140005cb5:	jne    0x140005c90
   140005cb7:	mov    rcx,QWORD PTR [rdi]
   140005cba:	call   0x1400330c0
   140005cbf:	mov    rsi,QWORD PTR [rsp+0x30]
   140005cc4:	mov    rbx,QWORD PTR [rsp+0x38]
   140005cc9:	mov    QWORD PTR [rdi],rbp
   140005ccc:	mov    QWORD PTR [rdi+0x8],rbp
   140005cd0:	mov    QWORD PTR [rdi+0x10],rbp
   140005cd4:	mov    rbp,QWORD PTR [rsp+0x40]
   140005cd9:	add    rsp,0x20
   140005cdd:	pop    rdi
   140005cde:	ret    
   140005cdf:	int3   
   140005ce0:	cmp    rcx,rdx
   140005ce3:	je     0x140005d36
   140005ce5:	mov    QWORD PTR [rsp+0x10],rbx
   140005cea:	push   rdi
   140005ceb:	sub    rsp,0x20
   140005cef:	mov    QWORD PTR [rsp+0x30],rsi
   140005cf4:	mov    rdi,rdx
   140005cf7:	mov    rbx,rcx
   140005cfa:	xor    esi,esi
   140005cfc:	nop    DWORD PTR [rax+0x0]
   140005d00:	cmp    QWORD PTR [rbx+0x18],0x10
   140005d05:	jb     0x140005d0f
   140005d07:	mov    rcx,QWORD PTR [rbx]
   140005d0a:	call   0x1400330c0
   140005d0f:	mov    QWORD PTR [rbx+0x18],0xf
   140005d17:	mov    QWORD PTR [rbx+0x10],rsi
   140005d1b:	mov    BYTE PTR [rbx],sil
   140005d1e:	add    rbx,0x38
   140005d22:	cmp    rbx,rdi
   140005d25:	jne    0x140005d00
   140005d27:	mov    rsi,QWORD PTR [rsp+0x30]
   140005d2c:	mov    rbx,QWORD PTR [rsp+0x38]
   140005d31:	add    rsp,0x20
   140005d35:	pop    rdi
   140005d36:	repz ret 
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	int3   
   140005d3d:	int3   
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	mov    r8,QWORD PTR [rdx+0x10]
   140005d44:	mov    rax,QWORD PTR [r8]
   140005d47:	mov    QWORD PTR [rdx+0x10],rax
   140005d4b:	mov    rax,QWORD PTR [r8]
   140005d4e:	cmp    BYTE PTR [rax+0x49],0x0
   140005d52:	jne    0x140005d58
   140005d54:	mov    QWORD PTR [rax+0x8],rdx
   140005d58:	mov    rax,QWORD PTR [rdx+0x8]
   140005d5c:	mov    QWORD PTR [r8+0x8],rax
   140005d60:	mov    rax,QWORD PTR [rcx+0x8]
   140005d64:	cmp    rdx,QWORD PTR [rax+0x8]
   140005d68:	jne    0x140005d76
   140005d6a:	mov    QWORD PTR [rax+0x8],r8
   140005d6e:	mov    QWORD PTR [r8],rdx
   140005d71:	mov    QWORD PTR [rdx+0x8],r8
   140005d75:	ret    
   140005d76:	mov    rax,QWORD PTR [rdx+0x8]
   140005d7a:	cmp    rdx,QWORD PTR [rax]
   140005d7d:	jne    0x140005d8a
   140005d7f:	mov    QWORD PTR [rax],r8
   140005d82:	mov    QWORD PTR [r8],rdx
   140005d85:	mov    QWORD PTR [rdx+0x8],r8
   140005d89:	ret    
   140005d8a:	mov    QWORD PTR [rax+0x10],r8
   140005d8e:	mov    QWORD PTR [r8],rdx
   140005d91:	mov    QWORD PTR [rdx+0x8],r8
   140005d95:	ret    
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	mov    r8,QWORD PTR [rdx]
   140005da3:	mov    rax,QWORD PTR [r8+0x10]
   140005da7:	mov    QWORD PTR [rdx],rax
   140005daa:	mov    rax,QWORD PTR [r8+0x10]
   140005dae:	cmp    BYTE PTR [rax+0x49],0x0
   140005db2:	jne    0x140005db8
   140005db4:	mov    QWORD PTR [rax+0x8],rdx
   140005db8:	mov    rax,QWORD PTR [rdx+0x8]
   140005dbc:	mov    QWORD PTR [r8+0x8],rax
   140005dc0:	mov    rax,QWORD PTR [rcx+0x8]
   140005dc4:	cmp    rdx,QWORD PTR [rax+0x8]
   140005dc8:	jne    0x140005dd7
   140005dca:	mov    QWORD PTR [rax+0x8],r8
   140005dce:	mov    QWORD PTR [r8+0x10],rdx
   140005dd2:	mov    QWORD PTR [rdx+0x8],r8
   140005dd6:	ret    
   140005dd7:	mov    rax,QWORD PTR [rdx+0x8]
   140005ddb:	cmp    rdx,QWORD PTR [rax+0x10]
   140005ddf:	jne    0x140005dee
   140005de1:	mov    QWORD PTR [rax+0x10],r8
   140005de5:	mov    QWORD PTR [r8+0x10],rdx
   140005de9:	mov    QWORD PTR [rdx+0x8],r8
   140005ded:	ret    
   140005dee:	mov    QWORD PTR [rax],r8
   140005df1:	mov    QWORD PTR [r8+0x10],rdx
   140005df5:	mov    QWORD PTR [rdx+0x8],r8
   140005df9:	ret    
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	mov    QWORD PTR [rsp+0x8],rbx
   140005e05:	push   rdi
   140005e06:	sub    rsp,0x20
   140005e0a:	mov    rdi,r8
   140005e0d:	mov    rbx,rcx
   140005e10:	test   rcx,rcx
   140005e13:	jne    0x140005e20
   140005e15:	mov    ecx,0x80070057
   140005e1a:	call   0x1400025f0
   140005e1f:	int3   
   140005e20:	test   edx,edx
   140005e22:	jns    0x140005e2f
   140005e24:	mov    ecx,0x80070057
   140005e29:	call   0x1400025f0
   140005e2e:	int3   
   140005e2f:	test   r8,r8
   140005e32:	jne    0x140005e3f
   140005e34:	mov    ecx,0x80070057
   140005e39:	call   0x1400025f0
   140005e3e:	int3   
   140005e3f:	mov    rcx,QWORD PTR [rcx]
   140005e42:	cmp    rcx,r8
   140005e45:	je     0x140005e77
   140005e47:	cmp    edx,0x80
   140005e4d:	jle    0x140005e6d
   140005e4f:	movsxd rdx,edx
   140005e52:	mov    r8d,0x2
   140005e58:	call   0x140033618
   140005e5d:	test   rax,rax
   140005e60:	jne    0x140005e8c
   140005e62:	mov    ecx,0x8007000e
   140005e67:	call   0x1400025f0
   140005e6c:	int3   
   140005e6d:	call   0x140033594
   140005e72:	mov    QWORD PTR [rbx],rdi
   140005e75:	jmp    0x140005e94
   140005e77:	cmp    edx,0x80
   140005e7d:	jle    0x140005e91
   140005e7f:	movsxd rcx,edx
   140005e82:	mov    edx,0x2
   140005e87:	call   0x1400335d4
   140005e8c:	mov    QWORD PTR [rbx],rax
   140005e8f:	jmp    0x140005e94
   140005e91:	mov    QWORD PTR [rbx],r8
   140005e94:	cmp    QWORD PTR [rbx],0x0
   140005e98:	jne    0x140005ea5
   140005e9a:	mov    ecx,0x8007000e
   140005e9f:	call   0x1400025f0
   140005ea4:	int3   
   140005ea5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005eaa:	add    rsp,0x20
   140005eae:	pop    rdi
   140005eaf:	ret    
   140005eb0:	mov    QWORD PTR [rsp+0x10],rbp
   140005eb5:	mov    QWORD PTR [rsp+0x18],r8
   140005eba:	push   rsi
   140005ebb:	push   rdi
   140005ebc:	push   r12
   140005ebe:	sub    rsp,0x40
   140005ec2:	cmp    QWORD PTR [rcx+0x10],0x0
   140005ec7:	mov    rbp,r9
   140005eca:	mov    rdi,rdx
   140005ecd:	mov    rsi,rcx
   140005ed0:	jne    0x140005ef4
   140005ed2:	mov    QWORD PTR [rsp+0x20],r9
   140005ed7:	mov    r9,QWORD PTR [rcx+0x8]
   140005edb:	mov    r8b,0x1
   140005ede:	call   0x140009d60
   140005ee3:	mov    rax,rdi
   140005ee6:	mov    rbp,QWORD PTR [rsp+0x68]
   140005eeb:	add    rsp,0x40
   140005eef:	pop    r12
   140005ef1:	pop    rdi
   140005ef2:	pop    rsi
   140005ef3:	ret    
   140005ef4:	mov    rcx,QWORD PTR [rcx+0x8]
   140005ef8:	mov    QWORD PTR [rsp+0x60],rbx
   140005efd:	cmp    r8,QWORD PTR [rcx]
   140005f00:	jne    0x140005f34
   140005f02:	lea    rdx,[r8+0x18]
   140005f06:	lea    rcx,[r9+0x18]
   140005f0a:	call   0x140005750
   140005f0f:	test   eax,eax
   140005f11:	jns    0x1400060e8
   140005f17:	mov    r9,QWORD PTR [rsp+0x70]
   140005f1c:	mov    r8b,0x1
   140005f1f:	mov    rdx,rdi
   140005f22:	mov    rcx,rsi
   140005f25:	mov    QWORD PTR [rsp+0x20],rbp
   140005f2a:	call   0x140009d60
   140005f2f:	jmp    0x1400060fe
   140005f34:	cmp    r8,rcx
   140005f37:	jne    0x140005f72
   140005f39:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f3d:	lea    rdx,[r9+0x18]
   140005f41:	add    rcx,0x18
   140005f45:	call   0x140005750
   140005f4a:	test   eax,eax
   140005f4c:	jns    0x1400060e8
   140005f52:	mov    r9,QWORD PTR [rsi+0x8]
   140005f56:	xor    r8d,r8d
   140005f59:	mov    rdx,rdi
   140005f5c:	mov    r9,QWORD PTR [r9+0x10]
   140005f60:	mov    rcx,rsi
   140005f63:	mov    QWORD PTR [rsp+0x20],rbp
   140005f68:	call   0x140009d60
   140005f6d:	jmp    0x1400060fe
   140005f72:	lea    rdx,[r8+0x18]
   140005f76:	lea    rcx,[r9+0x18]
   140005f7a:	call   0x140005750
   140005f7f:	test   eax,eax
   140005f81:	jns    0x140006035
   140005f87:	mov    rax,QWORD PTR [rsp+0x70]
   140005f8c:	cmp    BYTE PTR [rax+0x49],0x0
   140005f90:	je     0x140005f98
   140005f92:	mov    rbx,QWORD PTR [rax+0x10]
   140005f96:	jmp    0x140005fed
   140005f98:	mov    rbx,QWORD PTR [rax]
   140005f9b:	cmp    BYTE PTR [rbx+0x49],0x0
   140005f9f:	jne    0x140005fbf
   140005fa1:	mov    rax,QWORD PTR [rbx+0x10]
   140005fa5:	cmp    BYTE PTR [rax+0x49],0x0
   140005fa9:	jne    0x140005fed
   140005fab:	nop    DWORD PTR [rax+rax*1+0x0]
   140005fb0:	mov    rbx,rax
   140005fb3:	mov    rax,QWORD PTR [rax+0x10]
   140005fb7:	cmp    BYTE PTR [rax+0x49],0x0
   140005fbb:	je     0x140005fb0
   140005fbd:	jmp    0x140005fed
   140005fbf:	mov    rcx,QWORD PTR [rax+0x8]
   140005fc3:	cmp    BYTE PTR [rcx+0x49],0x0
   140005fc7:	jne    0x140005fe2
   140005fc9:	nop    DWORD PTR [rax+0x0]
   140005fd0:	cmp    rax,QWORD PTR [rcx]
   140005fd3:	jne    0x140005fe2
   140005fd5:	mov    rax,rcx
   140005fd8:	mov    rcx,QWORD PTR [rcx+0x8]
   140005fdc:	cmp    BYTE PTR [rcx+0x49],0x0
   140005fe0:	je     0x140005fd0
   140005fe2:	cmp    BYTE PTR [rax+0x49],0x0
   140005fe6:	mov    rbx,rax
   140005fe9:	cmove  rbx,rcx
   140005fed:	lea    rcx,[rbx+0x18]
   140005ff1:	lea    rdx,[rbp+0x18]
   140005ff5:	call   0x140005750
   140005ffa:	test   eax,eax
   140005ffc:	jns    0x140006035
   140005ffe:	mov    rax,QWORD PTR [rbx+0x10]
   140006002:	mov    QWORD PTR [rsp+0x20],rbp
   140006007:	mov    rdx,rdi
   14000600a:	cmp    BYTE PTR [rax+0x49],0x0
   14000600e:	mov    rcx,rsi
   140006011:	je     0x140006023
   140006013:	mov    r9,rbx
   140006016:	xor    r8d,r8d
   140006019:	call   0x140009d60
   14000601e:	jmp    0x1400060fe
   140006023:	mov    r9,QWORD PTR [rsp+0x70]
   140006028:	mov    r8b,0x1
   14000602b:	call   0x140009d60
   140006030:	jmp    0x1400060fe
   140006035:	mov    rcx,QWORD PTR [rsp+0x70]
   14000603a:	lea    rdx,[rbp+0x18]
   14000603e:	add    rcx,0x18
   140006042:	call   0x140005750
   140006047:	test   eax,eax
   140006049:	jns    0x1400060e8
   14000604f:	mov    r9,QWORD PTR [rsp+0x70]
   140006054:	mov    rbx,r9
   140006057:	cmp    BYTE PTR [r9+0x49],0x0
   14000605c:	jne    0x1400060a6
   14000605e:	mov    rax,QWORD PTR [r9+0x10]
   140006062:	cmp    BYTE PTR [rax+0x49],0x0
   140006066:	jne    0x140006082
   140006068:	mov    rbx,rax
   14000606b:	mov    rax,QWORD PTR [rax]
   14000606e:	cmp    BYTE PTR [rax+0x49],0x0
   140006072:	jne    0x1400060a6
   140006074:	mov    rbx,rax
   140006077:	mov    rax,QWORD PTR [rax]
   14000607a:	cmp    BYTE PTR [rax+0x49],0x0
   14000607e:	je     0x140006074
   140006080:	jmp    0x1400060a6
   140006082:	mov    rax,QWORD PTR [r9+0x8]
   140006086:	cmp    BYTE PTR [rax+0x49],0x0
   14000608a:	jne    0x1400060a3
   14000608c:	nop    DWORD PTR [rax+0x0]
   140006090:	cmp    rbx,QWORD PTR [rax+0x10]
   140006094:	jne    0x1400060a3
   140006096:	mov    rbx,rax
   140006099:	mov    rax,QWORD PTR [rax+0x8]
   14000609d:	cmp    BYTE PTR [rax+0x49],0x0
   1400060a1:	je     0x140006090
   1400060a3:	mov    rbx,rax
   1400060a6:	cmp    rbx,QWORD PTR [rsi+0x8]
   1400060aa:	je     0x1400060c2
   1400060ac:	lea    rdx,[rbx+0x18]
   1400060b0:	lea    rcx,[rbp+0x18]
   1400060b4:	call   0x140005750
   1400060b9:	test   eax,eax
   1400060bb:	jns    0x1400060e8
   1400060bd:	mov    r9,QWORD PTR [rsp+0x70]
   1400060c2:	mov    rax,QWORD PTR [r9+0x10]
   1400060c6:	mov    QWORD PTR [rsp+0x20],rbp
   1400060cb:	mov    rdx,rdi
   1400060ce:	cmp    BYTE PTR [rax+0x49],0x0
   1400060d2:	mov    rcx,rsi
   1400060d5:	jne    0x140006016
   1400060db:	mov    r9,rbx
   1400060de:	mov    r8b,0x1
   1400060e1:	call   0x140009d60
   1400060e6:	jmp    0x1400060fe
   1400060e8:	lea    rdx,[rsp+0x30]
   1400060ed:	mov    r8,rbp
   1400060f0:	mov    rcx,rsi
   1400060f3:	call   0x140009b80
   1400060f8:	mov    rcx,QWORD PTR [rax]
   1400060fb:	mov    QWORD PTR [rdi],rcx
   1400060fe:	mov    rbx,QWORD PTR [rsp+0x60]
   140006103:	mov    rbp,QWORD PTR [rsp+0x68]
   140006108:	mov    rax,rdi
   14000610b:	add    rsp,0x40
   14000610f:	pop    r12
   140006111:	pop    rdi
   140006112:	pop    rsi
   140006113:	ret    
   140006114:	int3   
   140006115:	int3   
   140006116:	int3   
   140006117:	int3   
   140006118:	int3   
   140006119:	int3   
   14000611a:	int3   
   14000611b:	int3   
   14000611c:	int3   
   14000611d:	int3   
   14000611e:	int3   
   14000611f:	int3   
   140006120:	rex push rbx
   140006122:	sub    rsp,0x20
   140006126:	cmp    DWORD PTR [rsp+0x60],0x0
   14000612b:	mov    rbx,rcx
   14000612e:	jne    0x14000622f
   140006134:	cmp    r8d,0x1
   140006138:	jne    0x140006152
   14000613a:	call   0x140006800
   14000613f:	mov    rcx,QWORD PTR [rsp+0x58]
   140006144:	mov    QWORD PTR [rcx],rax
   140006147:	mov    eax,0x1
   14000614c:	add    rsp,0x20
   140006150:	pop    rbx
   140006151:	ret    
   140006152:	cmp    r8d,0x7e8
   140006159:	jne    0x14000617b
   14000615b:	mov    r8,QWORD PTR [rsp+0x50]
   140006160:	mov    rdx,r9
   140006163:	call   0x140006b80
   140006168:	mov    rcx,QWORD PTR [rsp+0x58]
   14000616d:	mov    QWORD PTR [rcx],rax
   140006170:	mov    eax,0x1
   140006175:	add    rsp,0x20
   140006179:	pop    rbx
   14000617a:	ret    
   14000617b:	cmp    r8d,0x2
   14000617f:	jne    0x1400061d6
   140006181:	mov    rcx,QWORD PTR [rcx+0x2a8]
   140006188:	test   rcx,rcx
   14000618b:	je     0x140006198
   14000618d:	cmp    BYTE PTR [rcx+0x38],0x0
   140006191:	je     0x140006198
   140006193:	call   0x14000e2f0
   140006198:	mov    rcx,QWORD PTR [rbx+0x8]
   14000619c:	mov    edx,0x5
   1400061a1:	call   QWORD PTR [rip+0x62489]        # 0x140068630
   1400061a7:	lea    rcx,[rbx+0x1d0]
   1400061ae:	call   0x140005280
   1400061b3:	lea    rcx,[rbx+0x208]
   1400061ba:	call   0x140005280
   1400061bf:	mov    rax,QWORD PTR [rsp+0x58]
   1400061c4:	mov    QWORD PTR [rax],0x1
   1400061cb:	mov    eax,0x1
   1400061d0:	add    rsp,0x20
   1400061d4:	pop    rbx
   1400061d5:	ret    
   1400061d6:	cmp    r8d,0x113
   1400061dd:	jne    0x14000620e
   1400061df:	lea    r8,[rsp+0x60]
   1400061e4:	mov    rdx,r9
   1400061e7:	mov    DWORD PTR [rsp+0x60],0x1
   1400061ef:	call   0x140006d10
   1400061f4:	cmp    DWORD PTR [rsp+0x60],0x0
   1400061f9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400061fe:	mov    QWORD PTR [rcx],rax
   140006201:	je     0x14000622f
   140006203:	mov    eax,0x1
   140006208:	add    rsp,0x20
   14000620c:	pop    rbx
   14000620d:	ret    
   14000620e:	cmp    r8d,0x84c
   140006215:	jne    0x14000622f
   140006217:	call   0x140008180
   14000621c:	mov    rcx,QWORD PTR [rsp+0x58]
   140006221:	mov    QWORD PTR [rcx],rax
   140006224:	mov    eax,0x1
   140006229:	add    rsp,0x20
   14000622d:	pop    rbx
   14000622e:	ret    
   14000622f:	xor    eax,eax
   140006231:	add    rsp,0x20
   140006235:	pop    rbx
   140006236:	ret    
   140006237:	int3   
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	int3   
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	mov    QWORD PTR [rsp+0x8],rcx
   140006245:	push   rdi
   140006246:	sub    rsp,0x30
   14000624a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006253:	mov    QWORD PTR [rsp+0x50],rbx
   140006258:	mov    QWORD PTR [rsp+0x58],rsi
   14000625d:	mov    rdi,rcx
   140006260:	xor    esi,esi
   140006262:	mov    QWORD PTR [rcx+0x8],rsi
   140006266:	mov    QWORD PTR [rcx+0x28],rsi
   14000626a:	mov    QWORD PTR [rcx+0x30],rsi
   14000626e:	mov    DWORD PTR [rcx+0x38],esi
   140006271:	mov    rax,QWORD PTR [rip+0x623c0]        # 0x140068638
   140006278:	mov    QWORD PTR [rcx+0x40],rax
   14000627c:	lea    rax,[rip+0x657cd]        # 0x14006ba50
   140006283:	mov    QWORD PTR [rcx],rax
   140006286:	lea    rax,[rip+0x657eb]        # 0x14006ba78
   14000628d:	mov    QWORD PTR [rcx+0x48],rax
   140006291:	lea    rax,[rip+0x650d0]        # 0x14006b368
   140006298:	mov    QWORD PTR [rcx+0x50],rax
   14000629c:	mov    QWORD PTR [rcx+0x90],rsi
   1400062a3:	xor    eax,eax
   1400062a5:	mov    QWORD PTR [rcx+0x5c],rax
   1400062a9:	mov    QWORD PTR [rcx+0x64],rax
   1400062ad:	mov    QWORD PTR [rcx+0x6c],rax
   1400062b1:	mov    QWORD PTR [rcx+0x74],rax
   1400062b5:	mov    QWORD PTR [rcx+0x7c],rax
   1400062b9:	mov    QWORD PTR [rcx+0x88],rsi
   1400062c0:	mov    DWORD PTR [rcx+0x58],esi
   1400062c3:	mov    BYTE PTR [rcx+0x98],al
   1400062c9:	mov    QWORD PTR [rcx+0x1a0],rsi
   1400062d0:	mov    DWORD PTR [rcx+0x1a8],esi
   1400062d6:	mov    QWORD PTR [rcx+0x1b0],rsi
   1400062dd:	mov    QWORD PTR [rcx+0x1b8],rsi
   1400062e4:	mov    QWORD PTR [rcx+0x1c0],rsi
   1400062eb:	lea    rbx,[rip+0x65406]        # 0x14006b6f8
   1400062f2:	mov    QWORD PTR [rcx+0x1d0],rbx
   1400062f9:	add    rcx,0x1e8
   140006300:	call   0x140005ad0
   140006305:	nop
   140006306:	mov    QWORD PTR [rdi+0x208],rbx
   14000630d:	lea    rcx,[rdi+0x220]
   140006314:	call   0x140005ad0
   140006319:	nop
   14000631a:	mov    QWORD PTR [rdi+0x240],rsi
   140006321:	mov    QWORD PTR [rdi+0x248],rsi
   140006328:	mov    QWORD PTR [rdi+0x250],rsi
   14000632f:	lea    rcx,[rdi+0x260]
   140006336:	call   0x140005ad0
   14000633b:	nop
   14000633c:	mov    QWORD PTR [rdi+0x298],0xf
   140006347:	mov    QWORD PTR [rdi+0x290],rsi
   14000634e:	mov    BYTE PTR [rdi+0x280],sil
   140006355:	mov    ecx,0x270
   14000635a:	call   0x1400331a0
   14000635f:	mov    QWORD PTR [rsp+0x48],rax
   140006364:	test   rax,rax
   140006367:	je     0x140006373
   140006369:	mov    rcx,rax
   14000636c:	call   0x14000d6d0
   140006371:	jmp    0x140006376
   140006373:	mov    rax,rsi
   140006376:	mov    QWORD PTR [rdi+0x2a8],rax
   14000637d:	lea    rcx,[rip+0x803d4]        # 0x140086758
   140006384:	mov    rax,QWORD PTR [rip+0x803cd]        # 0x140086758
   14000638b:	call   QWORD PTR [rax+0x18]
   14000638e:	add    rax,0x18
   140006392:	mov    QWORD PTR [rdi+0x2b0],rax
   140006399:	mov    QWORD PTR [rdi+0x2d8],0xf
   1400063a4:	mov    QWORD PTR [rdi+0x2d0],rsi
   1400063ab:	mov    BYTE PTR [rdi+0x2c0],0x0
   1400063b2:	xor    r8d,r8d
   1400063b5:	lea    rdx,[rip+0x64eda]        # 0x14006b296
   1400063bc:	lea    rcx,[rdi+0x2b0]
   1400063c3:	call   0x140008d10
   1400063c8:	mov    DWORD PTR [rdi+0x2b8],esi
   1400063ce:	mov    QWORD PTR [rdi+0x2e8],rsi
   1400063d5:	mov    rax,rdi
   1400063d8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400063dd:	mov    rsi,QWORD PTR [rsp+0x58]
   1400063e2:	add    rsp,0x30
   1400063e6:	pop    rdi
   1400063e7:	ret    
   1400063e8:	int3   
   1400063e9:	int3   
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400063f5:	push   rdi
   1400063f6:	sub    rsp,0x20
   1400063fa:	mov    ebx,edx
   1400063fc:	mov    rdi,rcx
   1400063ff:	call   0x140006480
   140006404:	test   bl,0x1
   140006407:	je     0x140006411
   140006409:	mov    rcx,rdi
   14000640c:	call   0x1400330c0
   140006411:	mov    rax,rdi
   140006414:	mov    rbx,QWORD PTR [rsp+0x30]
   140006419:	add    rsp,0x20
   14000641d:	pop    rdi
   14000641e:	ret    
   14000641f:	int3   
   140006420:	sub    rsp,0x28
   140006424:	mov    rcx,QWORD PTR [rcx+0x28]
   140006428:	test   rcx,rcx
   14000642b:	je     0x140006432
   14000642d:	call   0x140042c44
   140006432:	add    rsp,0x28
   140006436:	ret    
   140006437:	int3   
   140006438:	int3   
   140006439:	int3   
   14000643a:	int3   
   14000643b:	int3   
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	mov    QWORD PTR [rsp+0x8],rcx
   140006445:	push   rbx
   140006446:	sub    rsp,0x30
   14000644a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006453:	mov    rbx,rcx
   140006456:	mov    r8,QWORD PTR [rcx+0x8]
   14000645a:	mov    r9,r8
   14000645d:	mov    r8,QWORD PTR [r8]
   140006460:	lea    rdx,[rsp+0x48]
   140006465:	call   0x140009120
   14000646a:	nop
   14000646b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000646f:	add    rsp,0x30
   140006473:	pop    rbx
   140006474:	jmp    0x1400330c0
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	mov    QWORD PTR [rsp+0x8],rcx
   140006485:	push   rbx
   140006486:	push   rbp
   140006487:	push   rsi
   140006488:	push   rdi
   140006489:	push   r12
   14000648b:	push   r13
   14000648d:	sub    rsp,0x38
   140006491:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000649a:	mov    rdi,rcx
   14000649d:	lea    rax,[rip+0x655ac]        # 0x14006ba50
   1400064a4:	mov    QWORD PTR [rcx],rax
   1400064a7:	lea    rax,[rip+0x655ca]        # 0x14006ba78
   1400064ae:	mov    QWORD PTR [rcx+0x48],rax
   1400064b2:	lea    r12,[rcx+0x50]
   1400064b6:	mov    rcx,r12
   1400064b9:	call   0x1400027c0
   1400064be:	mov    rcx,rdi
   1400064c1:	call   0x140007c00
   1400064c6:	mov    rax,QWORD PTR [rdi+0x268]
   1400064cd:	mov    rbx,QWORD PTR [rax]
   1400064d0:	cmp    rbx,rax
   1400064d3:	je     0x140006537
   1400064d5:	mov    rcx,QWORD PTR [rbx+0x40]
   1400064d9:	test   rcx,rcx
   1400064dc:	je     0x1400064e3
   1400064de:	call   0x14001e810
   1400064e3:	cmp    BYTE PTR [rbx+0x49],0x0
   1400064e7:	jne    0x14000652e
   1400064e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400064ed:	cmp    BYTE PTR [rax+0x49],0x0
   1400064f1:	jne    0x14000650e
   1400064f3:	mov    rbx,rax
   1400064f6:	mov    rax,QWORD PTR [rax]
   1400064f9:	cmp    BYTE PTR [rax+0x49],0x0
   1400064fd:	jne    0x14000652e
   1400064ff:	nop
   140006500:	mov    rbx,rax
   140006503:	mov    rax,QWORD PTR [rax]
   140006506:	cmp    BYTE PTR [rax+0x49],0x0
   14000650a:	je     0x140006500
   14000650c:	jmp    0x14000652e
   14000650e:	mov    rax,QWORD PTR [rbx+0x8]
   140006512:	cmp    BYTE PTR [rax+0x49],0x0
   140006516:	jne    0x14000652b
   140006518:	cmp    rbx,QWORD PTR [rax+0x10]
   14000651c:	jne    0x14000652b
   14000651e:	mov    rbx,rax
   140006521:	mov    rax,QWORD PTR [rax+0x8]
   140006525:	cmp    BYTE PTR [rax+0x49],0x0
   140006529:	je     0x140006518
   14000652b:	mov    rbx,rax
   14000652e:	cmp    rbx,QWORD PTR [rdi+0x268]
   140006535:	jne    0x1400064d5
   140006537:	lea    rbp,[rdi+0x260]
   14000653e:	mov    rax,QWORD PTR [rbp+0x8]
   140006542:	mov    rbx,QWORD PTR [rax+0x8]
   140006546:	mov    rsi,rbx
   140006549:	xor    r13d,r13d
   14000654c:	cmp    BYTE PTR [rbx+0x49],r13b
   140006550:	jne    0x140006592
   140006552:	mov    rdx,QWORD PTR [rsi+0x10]
   140006556:	mov    rcx,rbp
   140006559:	call   0x140008b40
   14000655e:	mov    rsi,QWORD PTR [rsi]
   140006561:	cmp    QWORD PTR [rbx+0x30],0x10
   140006566:	jb     0x140006571
   140006568:	mov    rcx,QWORD PTR [rbx+0x18]
   14000656c:	call   0x1400330c0
   140006571:	mov    QWORD PTR [rbx+0x30],0xf
   140006579:	mov    QWORD PTR [rbx+0x28],r13
   14000657d:	mov    BYTE PTR [rbx+0x18],r13b
   140006581:	mov    rcx,rbx
   140006584:	call   0x1400330c0
   140006589:	mov    rbx,rsi
   14000658c:	cmp    BYTE PTR [rsi+0x49],r13b
   140006590:	je     0x140006552
   140006592:	mov    rax,QWORD PTR [rbp+0x8]
   140006596:	mov    QWORD PTR [rax+0x8],rax
   14000659a:	mov    rax,QWORD PTR [rbp+0x8]
   14000659e:	mov    QWORD PTR [rax],rax
   1400065a1:	mov    rax,QWORD PTR [rbp+0x8]
   1400065a5:	mov    QWORD PTR [rax+0x10],rax
   1400065a9:	mov    QWORD PTR [rbp+0x10],r13
   1400065ad:	cmp    QWORD PTR [rdi+0x2d8],0x10
   1400065b5:	jb     0x1400065c3
   1400065b7:	mov    rcx,QWORD PTR [rdi+0x2c0]
   1400065be:	call   0x1400330c0
   1400065c3:	mov    QWORD PTR [rdi+0x2d8],0xf
   1400065ce:	mov    QWORD PTR [rdi+0x2d0],r13
   1400065d5:	mov    BYTE PTR [rdi+0x2c0],0x0
   1400065dc:	mov    rdx,QWORD PTR [rdi+0x2b0]
   1400065e3:	sub    rdx,0x18
   1400065e7:	or     eax,0xffffffff
   1400065ea:	lock xadd DWORD PTR [rdx+0x10],eax
   1400065ef:	dec    eax
   1400065f1:	test   eax,eax
   1400065f3:	jg     0x1400065ff
   1400065f5:	mov    rcx,QWORD PTR [rdx]
   1400065f8:	mov    rax,QWORD PTR [rcx]
   1400065fb:	call   QWORD PTR [rax+0x8]
   1400065fe:	nop
   1400065ff:	mov    rcx,QWORD PTR [rdi+0x2a8]
   140006606:	test   rcx,rcx
   140006609:	je     0x140006610
   14000660b:	call   0x14000e2f0
   140006610:	mov    rcx,QWORD PTR [rdi+0x2a8]
   140006617:	test   rcx,rcx
   14000661a:	je     0x14000662d
   14000661c:	mov    rax,QWORD PTR [rcx]
   14000661f:	mov    edx,0x1
   140006624:	call   QWORD PTR [rax]
   140006626:	mov    QWORD PTR [rdi+0x2a8],r13
   14000662d:	cmp    QWORD PTR [rdi+0x298],0x10
   140006635:	jb     0x140006643
   140006637:	mov    rcx,QWORD PTR [rdi+0x280]
   14000663e:	call   0x1400330c0
   140006643:	mov    QWORD PTR [rdi+0x298],0xf
   14000664e:	mov    QWORD PTR [rdi+0x290],r13
   140006655:	mov    BYTE PTR [rdi+0x280],0x0
   14000665c:	mov    QWORD PTR [rsp+0x78],rbp
   140006661:	mov    r8,QWORD PTR [rbp+0x8]
   140006665:	mov    r9,r8
   140006668:	mov    r8,QWORD PTR [r8]
   14000666b:	lea    rdx,[rsp+0x80]
   140006673:	mov    rcx,rbp
   140006676:	call   0x140009120
   14000667b:	nop
   14000667c:	mov    rcx,QWORD PTR [rbp+0x8]
   140006680:	call   0x1400330c0
   140006685:	nop
   140006686:	mov    rcx,QWORD PTR [rdi+0x240]
   14000668d:	test   rcx,rcx
   140006690:	je     0x140006697
   140006692:	call   0x1400330c0
   140006697:	mov    QWORD PTR [rdi+0x240],r13
   14000669e:	mov    QWORD PTR [rdi+0x248],r13
   1400066a5:	mov    QWORD PTR [rdi+0x250],r13
   1400066ac:	lea    rbx,[rdi+0x208]
   1400066b3:	mov    QWORD PTR [rsp+0x78],rbx
   1400066b8:	lea    rsi,[rip+0x65039]        # 0x14006b6f8
   1400066bf:	mov    QWORD PTR [rbx],rsi
   1400066c2:	mov    rcx,rbx
   1400066c5:	call   0x140005280
   1400066ca:	nop
   1400066cb:	add    rbx,0x18
   1400066cf:	mov    QWORD PTR [rsp+0x78],rbx
   1400066d4:	mov    r8,QWORD PTR [rbx+0x8]
   1400066d8:	mov    r9,r8
   1400066db:	mov    r8,QWORD PTR [r8]
   1400066de:	lea    rdx,[rsp+0x88]
   1400066e6:	mov    rcx,rbx
   1400066e9:	call   0x140009120
   1400066ee:	nop
   1400066ef:	mov    rcx,QWORD PTR [rbx+0x8]
   1400066f3:	call   0x1400330c0
   1400066f8:	nop
   1400066f9:	lea    rbx,[rdi+0x1d0]
   140006700:	mov    QWORD PTR [rsp+0x78],rbx
   140006705:	mov    QWORD PTR [rbx],rsi
   140006708:	mov    rcx,rbx
   14000670b:	call   0x140005280
   140006710:	nop
   140006711:	add    rbx,0x18
   140006715:	mov    QWORD PTR [rsp+0x78],rbx
   14000671a:	mov    r8,QWORD PTR [rbx+0x8]
   14000671e:	mov    r9,r8
   140006721:	mov    r8,QWORD PTR [r8]
   140006724:	lea    rdx,[rsp+0x28]
   140006729:	mov    rcx,rbx
   14000672c:	call   0x140009120
   140006731:	nop
   140006732:	mov    rcx,QWORD PTR [rbx+0x8]
   140006736:	call   0x1400330c0
   14000673b:	nop
   14000673c:	mov    rbx,QWORD PTR [rdi+0x1b0]
   140006743:	test   rbx,rbx
   140006746:	je     0x140006787
   140006748:	mov    rsi,QWORD PTR [rdi+0x1b8]
   14000674f:	cmp    rbx,rsi
   140006752:	je     0x14000677b
   140006754:	cmp    QWORD PTR [rbx+0x18],0x10
   140006759:	jb     0x140006763
   14000675b:	mov    rcx,QWORD PTR [rbx]
   14000675e:	call   0x1400330c0
   140006763:	mov    QWORD PTR [rbx+0x18],0xf
   14000676b:	mov    QWORD PTR [rbx+0x10],r13
   14000676f:	mov    BYTE PTR [rbx],0x0
   140006772:	add    rbx,0x38
   140006776:	cmp    rbx,rsi
   140006779:	jne    0x140006754
   14000677b:	mov    rcx,QWORD PTR [rdi+0x1b0]
   140006782:	call   0x1400330c0
   140006787:	mov    QWORD PTR [rdi+0x1b0],r13
   14000678e:	mov    QWORD PTR [rdi+0x1b8],r13
   140006795:	mov    QWORD PTR [rdi+0x1c0],r13
   14000679c:	mov    QWORD PTR [rsp+0x78],r12
   1400067a1:	lea    rax,[rip+0x64bc0]        # 0x14006b368
   1400067a8:	mov    QWORD PTR [r12],rax
   1400067ac:	mov    rcx,QWORD PTR [r12+0x150]
   1400067b4:	test   rcx,rcx
   1400067b7:	je     0x1400067cb
   1400067b9:	mov    rax,QWORD PTR [rcx]
   1400067bc:	mov    edx,0x1
   1400067c1:	call   QWORD PTR [rax]
   1400067c3:	mov    QWORD PTR [r12+0x150],r13
   1400067cb:	mov    rcx,QWORD PTR [r12+0x40]
   1400067d0:	test   rcx,rcx
   1400067d3:	je     0x1400067dc
   1400067d5:	mov    rax,QWORD PTR [rcx]
   1400067d8:	call   QWORD PTR [rax+0x10]
   1400067db:	nop
   1400067dc:	mov    rcx,QWORD PTR [rdi+0x28]
   1400067e0:	test   rcx,rcx
   1400067e3:	je     0x1400067ea
   1400067e5:	call   0x140042c44
   1400067ea:	add    rsp,0x38
   1400067ee:	pop    r13
   1400067f0:	pop    r12
   1400067f2:	pop    rdi
   1400067f3:	pop    rsi
   1400067f4:	pop    rbp
   1400067f5:	pop    rbx
   1400067f6:	ret    
   1400067f7:	int3   
   1400067f8:	int3   
   1400067f9:	int3   
   1400067fa:	int3   
   1400067fb:	int3   
   1400067fc:	int3   
   1400067fd:	int3   
   1400067fe:	int3   
   1400067ff:	int3   
   140006800:	mov    rax,rsp
   140006803:	push   rbp
   140006804:	push   r12
   140006806:	push   r13
   140006808:	lea    rbp,[rax-0x5f]
   14000680c:	sub    rsp,0xf0
   140006813:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14000681b:	mov    QWORD PTR [rax+0x10],rbx
   14000681f:	mov    QWORD PTR [rax+0x18],rsi
   140006823:	mov    QWORD PTR [rax+0x20],rdi
   140006827:	mov    rax,QWORD PTR [rip+0x7e87a]        # 0x1400850a8
   14000682e:	xor    rax,rsp
   140006831:	mov    QWORD PTR [rbp+0x37],rax
   140006835:	mov    r12,rcx
   140006838:	call   0x140007c80
   14000683d:	xor    r13d,r13d
   140006840:	test   r12,r12
   140006843:	lea    rdx,[r12+0x48]
   140006848:	jne    0x14000684d
   14000684a:	mov    edx,r13d
   14000684d:	lea    rcx,[r12+0x50]
   140006852:	call   0x140002710
   140006857:	lea    rcx,[r12+0x1d0]
   14000685f:	xor    r8d,r8d
   140006862:	mov    rdx,QWORD PTR [r12+0x8]
   140006867:	call   0x140004ed0
   14000686c:	lea    rcx,[r12+0x208]
   140006874:	mov    r8d,0x1
   14000687a:	mov    rdx,QWORD PTR [r12+0x8]
   14000687f:	call   0x140004ed0
   140006884:	cmp    QWORD PTR [r12+0x2d0],r13
   14000688c:	jne    0x140006abd
   140006892:	mov    QWORD PTR [rbp-0x79],r13
   140006896:	mov    ecx,0x50
   14000689b:	call   0x1400331a0
   1400068a0:	test   rax,rax
   1400068a3:	je     0x140006a90
   1400068a9:	mov    QWORD PTR [rsp+0x28],rax
   1400068ae:	mov    QWORD PTR [rax],rax
   1400068b1:	mov    rax,QWORD PTR [rsp+0x28]
   1400068b6:	mov    QWORD PTR [rax+0x8],rax
   1400068ba:	mov    rax,QWORD PTR [rsp+0x28]
   1400068bf:	mov    QWORD PTR [rax+0x10],rax
   1400068c3:	mov    rax,QWORD PTR [rsp+0x28]
   1400068c8:	mov    BYTE PTR [rax+0x48],0x1
   1400068cc:	mov    rax,QWORD PTR [rsp+0x28]
   1400068d1:	mov    BYTE PTR [rax+0x49],0x1
   1400068d5:	mov    DWORD PTR [rbp-0x69],0x4
   1400068dc:	lea    rcx,[rsp+0x20]
   1400068e1:	call   0x14000ef00
   1400068e6:	nop
   1400068e7:	lea    rdx,[rbp-0x29]
   1400068eb:	lea    rcx,[rsp+0x20]
   1400068f0:	call   0x14000fe70
   1400068f5:	nop
   1400068f6:	lea    rcx,[r12+0x2c0]
   1400068fe:	mov    rdx,rax
   140006901:	call   0x1400029d0
   140006906:	nop
   140006907:	cmp    QWORD PTR [rbp-0x11],0x10
   14000690c:	jb     0x140006918
   14000690e:	mov    rcx,QWORD PTR [rbp-0x29]
   140006912:	call   0x1400330c0
   140006917:	nop
   140006918:	mov    rax,QWORD PTR [rsp+0x28]
   14000691d:	mov    rbx,QWORD PTR [rax+0x8]
   140006921:	mov    rdi,rbx
   140006924:	cmp    BYTE PTR [rbx+0x49],0x0
   140006928:	jne    0x140006977
   14000692a:	nop    WORD PTR [rax+rax*1+0x0]
   140006930:	mov    rdx,QWORD PTR [rdi+0x10]
   140006934:	lea    rcx,[rsp+0x20]
   140006939:	call   0x140011a50
   14000693e:	mov    rdi,QWORD PTR [rdi]
   140006941:	cmp    QWORD PTR [rbx+0x38],0x10
   140006946:	jb     0x140006951
   140006948:	mov    rcx,QWORD PTR [rbx+0x20]
   14000694c:	call   0x1400330c0
   140006951:	mov    QWORD PTR [rbx+0x38],0xf
   140006959:	mov    QWORD PTR [rbx+0x30],r13
   14000695d:	mov    BYTE PTR [rbx+0x20],0x0
   140006961:	mov    rcx,rbx
   140006964:	call   0x1400330c0
   140006969:	mov    rbx,rdi
   14000696c:	cmp    BYTE PTR [rdi+0x49],0x0
   140006970:	je     0x140006930
   140006972:	mov    rax,QWORD PTR [rsp+0x28]
   140006977:	mov    QWORD PTR [rax+0x8],rax
   14000697b:	mov    rax,QWORD PTR [rsp+0x28]
   140006980:	mov    QWORD PTR [rax],rax
   140006983:	mov    rax,QWORD PTR [rsp+0x28]
   140006988:	mov    QWORD PTR [rax+0x10],rax
   14000698c:	mov    QWORD PTR [rbp-0x79],r13
   140006990:	mov    rdi,QWORD PTR [rsp+0x28]
   140006995:	mov    rbx,QWORD PTR [rdi]
   140006998:	cmp    rbx,rbx
   14000699b:	jne    0x140006a12
   14000699d:	mov    rbx,QWORD PTR [rdi+0x8]
   1400069a1:	mov    rsi,rbx
   1400069a4:	cmp    BYTE PTR [rbx+0x49],0x0
   1400069a8:	jne    0x1400069f7
   1400069aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400069b0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400069b4:	lea    rcx,[rsp+0x20]
   1400069b9:	call   0x140011a50
   1400069be:	mov    rsi,QWORD PTR [rsi]
   1400069c1:	cmp    QWORD PTR [rbx+0x38],0x10
   1400069c6:	jb     0x1400069d1
   1400069c8:	mov    rcx,QWORD PTR [rbx+0x20]
   1400069cc:	call   0x1400330c0
   1400069d1:	mov    QWORD PTR [rbx+0x38],0xf
   1400069d9:	mov    QWORD PTR [rbx+0x30],r13
   1400069dd:	mov    BYTE PTR [rbx+0x20],0x0
   1400069e1:	mov    rcx,rbx
   1400069e4:	call   0x1400330c0
   1400069e9:	mov    rbx,rsi
   1400069ec:	cmp    BYTE PTR [rsi+0x49],0x0
   1400069f0:	je     0x1400069b0
   1400069f2:	mov    rdi,QWORD PTR [rsp+0x28]
   1400069f7:	mov    QWORD PTR [rdi+0x8],rdi
   1400069fb:	mov    rax,QWORD PTR [rsp+0x28]
   140006a00:	mov    QWORD PTR [rax],rax
   140006a03:	mov    rax,QWORD PTR [rsp+0x28]
   140006a08:	mov    QWORD PTR [rax+0x10],rax
   140006a0c:	mov    QWORD PTR [rbp-0x79],r13
   140006a10:	jmp    0x140006a81
   140006a12:	cmp    rbx,rdi
   140006a15:	je     0x140006a86
   140006a17:	mov    r8,rbx
   140006a1a:	cmp    BYTE PTR [rbx+0x49],0x0
   140006a1e:	jne    0x140006a6e
   140006a20:	mov    rax,QWORD PTR [rbx+0x10]
   140006a24:	cmp    BYTE PTR [rax+0x49],0x0
   140006a28:	jne    0x140006a4e
   140006a2a:	mov    rbx,rax
   140006a2d:	mov    rax,QWORD PTR [rax]
   140006a30:	cmp    BYTE PTR [rax+0x49],0x0
   140006a34:	jne    0x140006a6e
   140006a36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006a40:	mov    rbx,rax
   140006a43:	mov    rax,QWORD PTR [rax]
   140006a46:	cmp    BYTE PTR [rax+0x49],0x0
   140006a4a:	je     0x140006a40
   140006a4c:	jmp    0x140006a6e
   140006a4e:	mov    rax,QWORD PTR [rbx+0x8]
   140006a52:	cmp    BYTE PTR [rax+0x49],0x0
   140006a56:	jne    0x140006a6b
   140006a58:	cmp    rbx,QWORD PTR [rax+0x10]
   140006a5c:	jne    0x140006a6b
   140006a5e:	mov    rbx,rax
   140006a61:	mov    rax,QWORD PTR [rax+0x8]
   140006a65:	cmp    BYTE PTR [rax+0x49],0x0
   140006a69:	je     0x140006a58
   140006a6b:	mov    rbx,rax
   140006a6e:	lea    rdx,[rbp-0x51]
   140006a72:	lea    rcx,[rsp+0x20]
   140006a77:	call   0x140011560
   140006a7c:	cmp    rbx,rdi
   140006a7f:	jne    0x140006a17
   140006a81:	mov    rdi,QWORD PTR [rsp+0x28]
   140006a86:	mov    rcx,rdi
   140006a89:	call   0x1400330c0
   140006a8e:	jmp    0x140006abd
   140006a90:	mov    QWORD PTR [rbp-0x59],r13
   140006a94:	lea    rdx,[rbp-0x59]
   140006a98:	lea    rcx,[rbp-0x41]
   140006a9c:	call   0x140032fd4
   140006aa1:	lea    r11,[rip+0x61de8]        # 0x140068890
   140006aa8:	mov    QWORD PTR [rbp-0x41],r11
   140006aac:	lea    rdx,[rip+0x7c96d]        # 0x140083420
   140006ab3:	lea    rcx,[rbp-0x41]
   140006ab7:	call   0x140036358
   140006abc:	int3   
   140006abd:	lea    r8,[rip+0x64c7c]        # 0x14006b740
   140006ac4:	lea    rdx,[rip+0x64c85]        # 0x14006b750
   140006acb:	lea    rcx,[rbp-0x61]
   140006acf:	call   0x1400159d0
   140006ad4:	nop
   140006ad5:	mov    rdx,rax
   140006ad8:	lea    rcx,[r12+0x2b0]
   140006ae0:	call   0x1400089f0
   140006ae5:	nop
   140006ae6:	mov    rdx,QWORD PTR [rbp-0x61]
   140006aea:	add    rdx,0xffffffffffffffe8
   140006aee:	or     eax,0xffffffff
   140006af1:	lock xadd DWORD PTR [rdx+0x10],eax
   140006af6:	dec    eax
   140006af8:	test   eax,eax
   140006afa:	jg     0x140006b05
   140006afc:	mov    rcx,QWORD PTR [rdx]
   140006aff:	mov    rax,QWORD PTR [rcx]
   140006b02:	call   QWORD PTR [rax+0x8]
   140006b05:	mov    rax,QWORD PTR [r12+0x2b0]
   140006b0d:	cmp    DWORD PTR [rax-0x10],0x0
   140006b11:	je     0x140006b4e
   140006b13:	cmp    QWORD PTR [r12+0x2e8],0x0
   140006b1c:	jne    0x140006b4e
   140006b1e:	lea    rdx,[rbp-0x1]
   140006b22:	mov    rcx,r12
   140006b25:	call   0x140008220
   140006b2a:	nop
   140006b2b:	mov    rdx,rax
   140006b2e:	mov    rcx,r12
   140006b31:	call   0x140007e90
   140006b36:	mov    QWORD PTR [r12+0x2e8],rax
   140006b3e:	cmp    QWORD PTR [rbp+0x17],0x10
   140006b43:	jb     0x140006b4e
   140006b45:	mov    rcx,QWORD PTR [rbp-0x1]
   140006b49:	call   0x1400330c0
   140006b4e:	mov    eax,0x1
   140006b53:	mov    rcx,QWORD PTR [rbp+0x37]
   140006b57:	xor    rcx,rsp
   140006b5a:	call   0x140032f00
   140006b5f:	lea    r11,[rsp+0xf0]
   140006b67:	mov    rbx,QWORD PTR [r11+0x28]
   140006b6b:	mov    rsi,QWORD PTR [r11+0x30]
   140006b6f:	mov    rdi,QWORD PTR [r11+0x38]
   140006b73:	mov    rsp,r11
   140006b76:	pop    r13
   140006b78:	pop    r12
   140006b7a:	pop    rbp
   140006b7b:	ret    
   140006b7c:	int3   
   140006b7d:	int3   
   140006b7e:	int3   
   140006b7f:	int3   
   140006b80:	mov    QWORD PTR [rsp+0x8],rbx
   140006b85:	push   rdi
   140006b86:	sub    rsp,0x40
   140006b8a:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140006b8f:	mov    rdi,r8
   140006b92:	mov    rbx,rcx
   140006b95:	test   rdx,rdx
   140006b98:	jne    0x140006c55
   140006b9e:	add    rcx,0x1d0
   140006ba5:	call   0x1400053a0
   140006baa:	lea    rcx,[rbx+0x208]
   140006bb1:	call   0x1400053a0
   140006bb6:	mov    rcx,rbx
   140006bb9:	call   0x140006de0
   140006bbe:	mov    rdx,QWORD PTR [rbx+0x2b0]
   140006bc5:	cmp    DWORD PTR [rdx-0x10],0x0
   140006bc9:	je     0x140006bd6
   140006bcb:	movzx  edx,al
   140006bce:	mov    rcx,rbx
   140006bd1:	call   0x140008390
   140006bd6:	test   rdi,rdi
   140006bd9:	je     0x140006be4
   140006bdb:	mov    rax,QWORD PTR [rdi]
   140006bde:	mov    rcx,rdi
   140006be1:	call   QWORD PTR [rax+0x10]
   140006be4:	mov    rax,QWORD PTR [rbx+0x2b0]
   140006beb:	cmp    DWORD PTR [rax-0x10],0x0
   140006bef:	je     0x140006cfa
   140006bf5:	mov    rcx,QWORD PTR [rbx+0x2e8]
   140006bfc:	xorpd  xmm6,xmm6
   140006c00:	movsd  QWORD PTR [rsp+0x58],xmm6
   140006c06:	test   rcx,rcx
   140006c09:	je     0x140006cfa
   140006c0f:	lea    r8,[rsp+0x58]
   140006c14:	mov    edx,0x663
   140006c19:	call   0x14001e970
   140006c1e:	ucomisd xmm6,QWORD PTR [rsp+0x58]
   140006c24:	jp     0x140006c2c
   140006c26:	je     0x140006cfa
   140006c2c:	mov    rcx,QWORD PTR [rbx+0x8]
   140006c30:	xor    r9d,r9d
   140006c33:	mov    r8d,0xc8
   140006c39:	lea    edx,[r9+0x3]
   140006c3d:	call   QWORD PTR [rip+0x619dd]        # 0x140068620
   140006c43:	xor    eax,eax
   140006c45:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c4a:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006c4f:	add    rsp,0x40
   140006c53:	pop    rdi
   140006c54:	ret    
   140006c55:	cmp    rdx,0x2
   140006c59:	jne    0x140006cbc
   140006c5b:	cmp    r8d,0x1
   140006c5f:	jne    0x140006cfa
   140006c65:	lea    rax,[rip+0x64b14]        # 0x14006b780
   140006c6c:	xor    r9d,r9d
   140006c6f:	lea    rcx,[rip+0x64b7a]        # 0x14006b7f0
   140006c76:	mov    QWORD PTR [rsp+0x28],rax
   140006c7b:	lea    rax,[rip+0x6481e]        # 0x14006b4a0
   140006c82:	lea    r8d,[r9+0x5]
   140006c86:	mov    edx,0x8f
   140006c8b:	mov    QWORD PTR [rsp+0x20],rax
   140006c90:	call   0x140003150
   140006c95:	mov    rcx,QWORD PTR [rbx+0x8]
   140006c99:	xor    r9d,r9d
   140006c9c:	xor    r8d,r8d
   140006c9f:	mov    edx,0x84c
   140006ca4:	call   QWORD PTR [rip+0x619a6]        # 0x140068650
   140006caa:	xor    eax,eax
   140006cac:	mov    rbx,QWORD PTR [rsp+0x50]
   140006cb1:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006cb6:	add    rsp,0x40
   140006cba:	pop    rdi
   140006cbb:	ret    
   140006cbc:	cmp    rdx,0x3
   140006cc0:	je     0x140006cfa
   140006cc2:	add    rcx,0x1d0
   140006cc9:	call   0x1400053a0
   140006cce:	lea    rcx,[rbx+0x208]
   140006cd5:	call   0x1400053a0
   140006cda:	mov    rcx,rbx
   140006cdd:	call   0x140006de0
   140006ce2:	mov    rcx,QWORD PTR [rbx+0x2b0]
   140006ce9:	cmp    DWORD PTR [rcx-0x10],0x0
   140006ced:	je     0x140006cfa
   140006cef:	movzx  edx,al
   140006cf2:	mov    rcx,rbx
   140006cf5:	call   0x140008390
   140006cfa:	mov    rbx,QWORD PTR [rsp+0x50]
   140006cff:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006d04:	xor    eax,eax
   140006d06:	add    rsp,0x40
   140006d0a:	pop    rdi
   140006d0b:	ret    
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	mov    QWORD PTR [rsp+0x8],rbx
   140006d15:	push   rdi
   140006d16:	sub    rsp,0x20
   140006d1a:	mov    rdi,r8
   140006d1d:	mov    rbx,rcx
   140006d20:	cmp    rdx,0x5
   140006d24:	jne    0x140006d4e
   140006d26:	mov    rcx,QWORD PTR [rcx+0x2a8]
   140006d2d:	test   rcx,rcx
   140006d30:	je     0x140006d3d
   140006d32:	cmp    BYTE PTR [rcx+0x38],0x0
   140006d36:	je     0x140006d3d
   140006d38:	call   0x14000e2f0
   140006d3d:	mov    rcx,QWORD PTR [rbx+0x8]
   140006d41:	mov    edx,0x5
   140006d46:	call   QWORD PTR [rip+0x618e4]        # 0x140068630
   140006d4c:	jmp    0x140006dc7
   140006d4e:	cmp    rdx,0x4
   140006d52:	jne    0x140006d7a
   140006d54:	mov    rcx,QWORD PTR [rcx+0x8]
   140006d58:	xor    r9d,r9d
   140006d5b:	xor    r8d,r8d
   140006d5e:	mov    edx,0x84c
   140006d63:	call   QWORD PTR [rip+0x618e7]        # 0x140068650
   140006d69:	mov    rcx,QWORD PTR [rbx+0x8]
   140006d6d:	mov    edx,0x4
   140006d72:	call   QWORD PTR [rip+0x618b8]        # 0x140068630
   140006d78:	jmp    0x140006dc7
   140006d7a:	test   rdx,rdx
   140006d7d:	je     0x140006dc7
   140006d7f:	cmp    rdx,0x3
   140006d83:	je     0x140006d8f
   140006d85:	mov    rcx,QWORD PTR [rcx+0x8]
   140006d89:	call   QWORD PTR [rip+0x618a1]        # 0x140068630
   140006d8f:	lea    rcx,[rbx+0x1d0]
   140006d96:	call   0x1400053a0
   140006d9b:	lea    rcx,[rbx+0x208]
   140006da2:	call   0x1400053a0
   140006da7:	mov    rcx,rbx
   140006daa:	call   0x140006de0
   140006daf:	mov    rcx,QWORD PTR [rbx+0x2b0]
   140006db6:	cmp    DWORD PTR [rcx-0x10],0x0
   140006dba:	je     0x140006dc7
   140006dbc:	movzx  edx,al
   140006dbf:	mov    rcx,rbx
   140006dc2:	call   0x140008390
   140006dc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dcc:	mov    DWORD PTR [rdi],0x1
   140006dd2:	xor    eax,eax
   140006dd4:	add    rsp,0x20
   140006dd8:	pop    rdi
   140006dd9:	ret    
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	mov    rax,rsp
   140006de3:	push   rbp
   140006de4:	push   r12
   140006de6:	push   r13
   140006de8:	push   r14
   140006dea:	push   r15
   140006dec:	lea    rbp,[rax-0xb8]
   140006df3:	sub    rsp,0x190
   140006dfa:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140006e03:	mov    QWORD PTR [rax+0x10],rbx
   140006e07:	mov    QWORD PTR [rax+0x18],rsi
   140006e0b:	mov    QWORD PTR [rax+0x20],rdi
   140006e0f:	mov    rax,QWORD PTR [rip+0x7e292]        # 0x1400850a8
   140006e16:	xor    rax,rsp
   140006e19:	mov    QWORD PTR [rbp+0x80],rax
   140006e20:	mov    r13,rcx
   140006e23:	xor    r14b,r14b
   140006e26:	mov    rbx,QWORD PTR [rcx+0x240]
   140006e2d:	cmp    rbx,QWORD PTR [rcx+0x248]
   140006e34:	je     0x140007068
   140006e3a:	nop    WORD PTR [rax+rax*1+0x0]
   140006e40:	lea    rdi,[r13+0x1d0]
   140006e47:	cmp    DWORD PTR [rbx+0x11c],0x0
   140006e4e:	je     0x140006e57
   140006e50:	lea    rdi,[r13+0x208]
   140006e57:	mov    BYTE PTR [rsp+0x70],0x0
   140006e5c:	xor    edx,edx
   140006e5e:	mov    r8d,0x103
   140006e64:	lea    rcx,[rsp+0x71]
   140006e69:	call   0x140036dc0
   140006e6e:	xor    sil,sil
   140006e71:	mov    eax,DWORD PTR [rbx+0x8]
   140006e74:	cmp    eax,0x1
   140006e77:	jne    0x140006e95
   140006e79:	lea    rax,[rsp+0x70]
   140006e7e:	test   rax,rax
   140006e81:	je     0x140006eb9
   140006e83:	lea    r8,[rsp+0x70]
   140006e88:	mov    rdx,QWORD PTR [rbx]
   140006e8b:	mov    rcx,rdi
   140006e8e:	call   0x140005430
   140006e93:	jmp    0x140006eb4
   140006e95:	cmp    eax,0x2
   140006e98:	jne    0x140006ebc
   140006e9a:	lea    rax,[rsp+0x70]
   140006e9f:	test   rax,rax
   140006ea2:	je     0x140006eb9
   140006ea4:	lea    r8,[rsp+0x70]
   140006ea9:	mov    rdx,QWORD PTR [rbx]
   140006eac:	mov    rcx,rdi
   140006eaf:	call   0x140005550
   140006eb4:	movzx  esi,al
   140006eb7:	jmp    0x140006ebc
   140006eb9:	xor    sil,sil
   140006ebc:	lea    r12,[rip+0x64995]        # 0x14006b858
   140006ec3:	test   sil,sil
   140006ec6:	lea    rax,[rip+0x64983]        # 0x14006b850
   140006ecd:	cmovne r12,rax
   140006ed1:	mov    edx,0xf
   140006ed6:	mov    QWORD PTR [rsp+0x60],rdx
   140006edb:	xor    r8d,r8d
   140006ede:	mov    QWORD PTR [rsp+0x58],r8
   140006ee3:	mov    BYTE PTR [rsp+0x48],r8b
   140006ee8:	xor    eax,eax
   140006eea:	or     rcx,0xffffffffffffffff
   140006eee:	mov    rdi,r12
   140006ef1:	repnz scas al,BYTE PTR es:[rdi]
   140006ef3:	not    rcx
   140006ef6:	dec    rcx
   140006ef9:	mov    rdi,rcx
   140006efc:	cmp    rcx,0xfffffffffffffffe
   140006f00:	ja     0x14000705b
   140006f06:	cmp    rcx,rdx
   140006f09:	jbe    0x140006f1f
   140006f0b:	mov    rdx,rcx
   140006f0e:	lea    rcx,[rsp+0x48]
   140006f13:	call   0x140002e40
   140006f18:	mov    rdx,QWORD PTR [rsp+0x60]
   140006f1d:	jmp    0x140006f2d
   140006f1f:	test   rcx,rcx
   140006f22:	jne    0x140006f2d
   140006f24:	mov    QWORD PTR [rsp+0x58],r8
   140006f29:	mov    BYTE PTR [rsp+0x48],al
   140006f2d:	test   rdi,rdi
   140006f30:	setne  al
   140006f33:	test   al,al
   140006f35:	je     0x140006f70
   140006f37:	lea    rcx,[rsp+0x48]
   140006f3c:	cmp    rdx,0x10
   140006f40:	cmovae rcx,QWORD PTR [rsp+0x48]
   140006f46:	mov    r8,rdi
   140006f49:	mov    rdx,r12
   140006f4c:	call   0x140033260
   140006f51:	mov    QWORD PTR [rsp+0x58],rdi
   140006f56:	lea    rax,[rsp+0x48]
   140006f5b:	cmp    QWORD PTR [rsp+0x60],0x10
   140006f61:	cmovae rax,QWORD PTR [rsp+0x48]
   140006f67:	mov    BYTE PTR [rax+rdi*1],0x0
   140006f6b:	mov    rdx,QWORD PTR [rsp+0x60]
   140006f70:	lea    rax,[rsp+0x48]
   140006f75:	cmp    rdx,0x10
   140006f79:	cmovae rax,QWORD PTR [rsp+0x48]
   140006f7f:	mov    QWORD PTR [rsp+0x30],rax
   140006f84:	mov    rax,QWORD PTR [rbx]
   140006f87:	mov    QWORD PTR [rsp+0x28],rax
   140006f8c:	lea    rax,[rip+0x648d5]        # 0x14006b868
   140006f93:	mov    QWORD PTR [rsp+0x20],rax
   140006f98:	xor    r9d,r9d
   140006f9b:	mov    edx,0x104
   140006fa0:	lea    r8d,[r9+0x5]
   140006fa4:	lea    rcx,[rip+0x64845]        # 0x14006b7f0
   140006fab:	call   0x140003150
   140006fb0:	test   sil,sil
   140006fb3:	je     0x140006ff6
   140006fb5:	cmp    BYTE PTR [rbx+0x114],0x0
   140006fbc:	jne    0x140006ff1
   140006fbe:	cmp    DWORD PTR [rbx+0x8],0x3
   140006fc2:	je     0x140006ff1
   140006fc4:	mov    r9b,0x1
   140006fc7:	lea    r8,[rsp+0x70]
   140006fcc:	mov    rdx,rbx
   140006fcf:	mov    rcx,r13
   140006fd2:	call   0x1400070a0
   140006fd7:	lea    rcx,[rbx+0x10]
   140006fdb:	lea    r8,[rsp+0x70]
   140006fe0:	mov    edx,0x104
   140006fe5:	call   0x1400336a8
   140006fea:	mov    BYTE PTR [rbx+0x114],0x1
   140006ff1:	mov    r14b,0x1
   140006ff4:	jmp    0x140007033
   140006ff6:	cmp    BYTE PTR [rbx+0x114],0x0
   140006ffd:	je     0x140007033
   140006fff:	cmp    DWORD PTR [rbx+0x8],0x3
   140007003:	je     0x140007033
   140007005:	xor    r9d,r9d
   140007008:	lea    r8,[rbx+0x10]
   14000700c:	mov    rdx,rbx
   14000700f:	mov    rcx,r13
   140007012:	call   0x1400070a0
   140007017:	lea    r8,[rip+0x64278]        # 0x14006b296
   14000701e:	mov    edx,0x104
   140007023:	lea    rcx,[rbx+0x10]
   140007027:	call   0x1400336a8
   14000702c:	mov    BYTE PTR [rbx+0x114],0x0
   140007033:	cmp    QWORD PTR [rsp+0x60],0x10
   140007039:	jb     0x140007045
   14000703b:	mov    rcx,QWORD PTR [rsp+0x48]
   140007040:	call   0x1400330c0
   140007045:	add    rbx,0x130
   14000704c:	cmp    rbx,QWORD PTR [r13+0x248]
   140007053:	jne    0x140006e40
   140007059:	jmp    0x140007068
   14000705b:	lea    rcx,[rip+0x642ee]        # 0x14006b350
   140007062:	call   0x140032d00
   140007067:	int3   
   140007068:	movzx  eax,r14b
   14000706c:	mov    rcx,QWORD PTR [rbp+0x80]
   140007073:	xor    rcx,rsp
   140007076:	call   0x140032f00
   14000707b:	lea    r11,[rsp+0x190]
   140007083:	mov    rbx,QWORD PTR [r11+0x38]
   140007087:	mov    rsi,QWORD PTR [r11+0x40]
   14000708b:	mov    rdi,QWORD PTR [r11+0x48]
   14000708f:	mov    rsp,r11
   140007092:	pop    r15
   140007094:	pop    r14
   140007096:	pop    r13
   140007098:	pop    r12
   14000709a:	pop    rbp
   14000709b:	ret    
   14000709c:	int3   
   14000709d:	int3   
   14000709e:	int3   
   14000709f:	int3   
   1400070a0:	mov    rax,rsp
   1400070a3:	push   rbp
   1400070a4:	push   rbx
   1400070a5:	push   rsi
   1400070a6:	push   rdi
   1400070a7:	push   r12
   1400070a9:	push   r13
   1400070ab:	push   r14
   1400070ad:	push   r15
   1400070af:	lea    rbp,[rax-0xd8]
   1400070b6:	sub    rsp,0x198
   1400070bd:	mov    QWORD PTR [rbp-0x68],0xfffffffffffffffe
   1400070c5:	movaps XMMWORD PTR [rax-0x58],xmm6
   1400070c9:	movaps XMMWORD PTR [rax-0x68],xmm7
   1400070cd:	mov    rax,QWORD PTR [rip+0x7dfd4]        # 0x1400850a8
   1400070d4:	xor    rax,rsp
   1400070d7:	mov    QWORD PTR [rbp+0x60],rax
   1400070db:	mov    BYTE PTR [rsp+0x40],r9b
   1400070e0:	mov    rbx,r8
   1400070e3:	mov    QWORD PTR [rbp-0x80],rbx
   1400070e7:	mov    QWORD PTR [rbp-0x78],rdx
   1400070eb:	mov    r15,rcx
   1400070ee:	mov    QWORD PTR [rbp-0x70],rcx
   1400070f2:	or     rsi,0xffffffffffffffff
   1400070f6:	mov    r12d,esi
   1400070f9:	xor    r13d,r13d
   1400070fc:	xor    r14d,r14d
   1400070ff:	movabs rax,0x4924924924924925
   140007109:	mov    rcx,QWORD PTR [r15+0x1b8]
   140007110:	sub    rcx,QWORD PTR [r15+0x1b0]
   140007117:	imul   rcx
   14000711a:	sar    rdx,0x4
   14000711e:	mov    rax,rdx
   140007121:	shr    rax,0x3f
   140007125:	add    rdx,rax
   140007128:	movsxd rax,r13d
   14000712b:	cmp    rax,rdx
   14000712e:	jae    0x1400072e0
   140007134:	lea    rax,[rbp-0x28]
   140007138:	mov    QWORD PTR [rbp-0x30],rax
   14000713c:	test   rbx,rbx
   14000713f:	jne    0x14000714a
   140007141:	mov    QWORD PTR [rbp-0x30],rbx
   140007145:	jmp    0x140007205
   14000714a:	mov    rcx,rbx
   14000714d:	call   QWORD PTR [rip+0x6128d]        # 0x1400683e0
   140007153:	mov    edi,eax
   140007155:	inc    edi
   140007157:	mov    ecx,0x0
   14000715c:	setns  cl
   14000715f:	test   ecx,ecx
   140007161:	je     0x1400072d5
   140007167:	lea    rax,[rbp-0x28]
   14000716b:	mov    rcx,QWORD PTR [rbp-0x30]
   14000716f:	cmp    rcx,rax
   140007172:	je     0x14000719c
   140007174:	cmp    edi,0x80
   14000717a:	jle    0x140007195
   14000717c:	movsxd rdx,edi
   14000717f:	mov    r8d,0x1
   140007185:	call   0x140033618
   14000718a:	test   rax,rax
   14000718d:	je     0x14000729e
   140007193:	jmp    0x1400071b1
   140007195:	call   0x140033594
   14000719a:	jmp    0x1400071c0
   14000719c:	cmp    edi,0x80
   1400071a2:	jle    0x1400071c0
   1400071a4:	movsxd rcx,edi
   1400071a7:	mov    edx,0x1
   1400071ac:	call   0x1400335d4
   1400071b1:	mov    QWORD PTR [rbp-0x30],rax
   1400071b5:	test   rax,rax
   1400071b8:	je     0x1400072a9
   1400071be:	jmp    0x1400071c8
   1400071c0:	lea    rax,[rbp-0x28]
   1400071c4:	mov    QWORD PTR [rbp-0x30],rax
   1400071c8:	movsxd rdx,edi
   1400071cb:	mov    r9,rdx
   1400071ce:	mov    r8,rbx
   1400071d1:	mov    rcx,rax
   1400071d4:	call   0x140033ccc
   1400071d9:	test   eax,eax
   1400071db:	je     0x140007201
   1400071dd:	cmp    eax,0xc
   1400071e0:	je     0x1400072ca
   1400071e6:	cmp    eax,0x16
   1400071e9:	je     0x1400072bf
   1400071ef:	cmp    eax,0x22
   1400071f2:	je     0x1400072bf
   1400071f8:	cmp    eax,0x50
   1400071fb:	jne    0x1400072b4
   140007201:	mov    rbx,QWORD PTR [rbp-0x30]
   140007205:	mov    rax,QWORD PTR [r15+0x1b0]
   14000720c:	lea    r9,[r14+rax*1]
   140007210:	xor    eax,eax
   140007212:	mov    rcx,rsi
   140007215:	mov    rdi,rbx
   140007218:	repnz scas al,BYTE PTR es:[rdi]
   14000721a:	not    rcx
   14000721d:	dec    rcx
   140007220:	mov    rsi,rcx
   140007223:	mov    rdi,QWORD PTR [r9+0x10]
   140007227:	cmp    rdi,rdi
   14000722a:	cmp    QWORD PTR [r9+0x18],0x10
   14000722f:	jb     0x140007234
   140007231:	mov    r9,QWORD PTR [r9]
   140007234:	mov    r8,rcx
   140007237:	cmp    rdi,rcx
   14000723a:	cmovb  r8,rdi
   14000723e:	mov    rdx,rbx
   140007241:	mov    rcx,r9
   140007244:	call   0x14003e320
   140007249:	movsxd rcx,eax
   14000724c:	test   eax,eax
   14000724e:	jne    0x140007267
   140007250:	cmp    rdi,rsi
   140007253:	jae    0x14000725d
   140007255:	or     rsi,0xffffffffffffffff
   140007259:	mov    ecx,esi
   14000725b:	jmp    0x14000726b
   14000725d:	xor    eax,eax
   14000725f:	cmp    rdi,rsi
   140007262:	setne  al
   140007265:	mov    ecx,eax
   140007267:	or     rsi,0xffffffffffffffff
   14000726b:	test   ecx,ecx
   14000726d:	sete   dil
   140007271:	lea    rax,[rbp-0x28]
   140007275:	cmp    rbx,rax
   140007278:	je     0x140007282
   14000727a:	mov    rcx,rbx
   14000727d:	call   0x140033594
   140007282:	test   dil,dil
   140007285:	cmovne r12d,r13d
   140007289:	inc    r13d
   14000728c:	add    r14,0x38
   140007290:	test   r12d,r12d
   140007293:	jns    0x1400072e9
   140007295:	mov    rbx,QWORD PTR [rbp-0x80]
   140007299:	jmp    0x1400070ff
   14000729e:	mov    ecx,0x8007000e
   1400072a3:	call   0x1400025f0
   1400072a8:	int3   
   1400072a9:	mov    ecx,0x8007000e
   1400072ae:	call   0x1400025f0
   1400072b3:	int3   
   1400072b4:	mov    ecx,0x80004005
   1400072b9:	call   0x1400025f0
   1400072be:	int3   
   1400072bf:	mov    ecx,0x80070057
   1400072c4:	call   0x1400025f0
   1400072c9:	int3   
   1400072ca:	mov    ecx,0x8007000e
   1400072cf:	call   0x1400025f0
   1400072d4:	int3   
   1400072d5:	mov    ecx,0x80070057
   1400072da:	call   0x1400025f0
   1400072df:	int3   
   1400072e0:	test   r12d,r12d
   1400072e3:	js     0x140007bc5
   1400072e9:	xor    r13d,r13d
   1400072ec:	mov    QWORD PTR [rsp+0x48],r13
   1400072f1:	xor    ebx,ebx
   1400072f3:	mov    QWORD PTR [rsp+0x50],rbx
   1400072f8:	mov    QWORD PTR [rsp+0x58],rbx
   1400072fd:	movsxd rsi,r12d
   140007300:	imul   rsi,rsi,0x38
   140007304:	mov    rax,QWORD PTR [r15+0x1b0]
   14000730b:	mov    ecx,DWORD PTR [rsi+rax*1+0x2c]
   14000730f:	movabs rdi,0x6666666666666667
   140007319:	lea    r12d,[r13+0xf]
   14000731d:	test   ecx,ecx
   14000731f:	jne    0x1400075ce
   140007325:	mov    QWORD PTR [rbp-0x48],r12
   140007329:	mov    BYTE PTR [rbp-0x60],cl
   14000732c:	mov    rcx,QWORD PTR [rip+0x6454d]        # 0x14006b880
   140007333:	mov    QWORD PTR [rbp-0x60],rcx
   140007337:	movzx  eax,WORD PTR [rip+0x6454a]        # 0x14006b888
   14000733e:	mov    WORD PTR [rbp-0x58],ax
   140007342:	mov    QWORD PTR [rbp-0x50],0xa
   14000734a:	lea    rax,[rbp-0x60]
   14000734e:	cmp    r12,0x10
   140007352:	cmovae rax,rcx
   140007356:	mov    BYTE PTR [rax+0xa],bl
   140007359:	lea    rcx,[rsp+0x48]
   14000735e:	call   0x140008bd0
   140007363:	mov    rbx,QWORD PTR [rsp+0x50]
   140007368:	mov    QWORD PTR [rsp+0x70],rbx
   14000736d:	mov    QWORD PTR [rsp+0x68],rbx
   140007372:	test   rbx,rbx
   140007375:	je     0x14000741a
   14000737b:	mov    QWORD PTR [rbx+0x18],r12
   14000737f:	mov    QWORD PTR [rbx+0x10],r13
   140007383:	mov    BYTE PTR [rbx],r13b
   140007386:	mov    rdi,QWORD PTR [rbp-0x50]
   14000738a:	cmp    rdi,0xffffffffffffffff
   14000738e:	mov    r14,0xffffffffffffffff
   140007395:	cmova  rdi,r14
   140007399:	lea    rax,[rbp-0x60]
   14000739d:	mov    rdx,rdi
   1400073a0:	mov    rcx,rbx
   1400073a3:	cmp    rbx,rax
   1400073a6:	jne    0x1400073c9
   1400073a8:	mov    r8,r14
   1400073ab:	call   0x140002da0
   1400073b0:	xor    r8d,r8d
   1400073b3:	xor    edx,edx
   1400073b5:	mov    rcx,rbx
   1400073b8:	call   0x140002da0
   1400073bd:	movabs rdi,0x6666666666666667
   1400073c7:	jmp    0x14000741e
   1400073c9:	call   0x140002d30
   1400073ce:	test   al,al
   1400073d0:	je     0x1400073bd
   1400073d2:	lea    rdx,[rbp-0x60]
   1400073d6:	cmp    QWORD PTR [rbp-0x48],0x10
   1400073db:	cmovae rdx,QWORD PTR [rbp-0x60]
   1400073e0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400073e5:	jb     0x1400073ec
   1400073e7:	mov    rcx,QWORD PTR [rbx]
   1400073ea:	jmp    0x1400073ef
   1400073ec:	mov    rcx,rbx
   1400073ef:	mov    r8,rdi
   1400073f2:	call   0x140033260
   1400073f7:	mov    QWORD PTR [rbx+0x10],rdi
   1400073fb:	cmp    QWORD PTR [rbx+0x18],0x10
   140007400:	jb     0x140007407
   140007402:	mov    rax,QWORD PTR [rbx]
   140007405:	jmp    0x14000740a
   140007407:	mov    rax,rbx
   14000740a:	mov    BYTE PTR [rdi+rax*1],0x0
   14000740e:	movabs rdi,0x6666666666666667
   140007418:	jmp    0x14000741e
   14000741a:	or     r14,0xffffffffffffffff
   14000741e:	add    rbx,0x28
   140007422:	mov    QWORD PTR [rsp+0x50],rbx
   140007427:	cmp    QWORD PTR [rbp-0x48],0x10
   14000742c:	jb     0x140007437
   14000742e:	mov    rcx,QWORD PTR [rbp-0x60]
   140007432:	call   0x1400330c0
   140007437:	mov    QWORD PTR [rbp-0x48],r12
   14000743b:	mov    BYTE PTR [rbp-0x60],0x0
   14000743f:	mov    rcx,QWORD PTR [rip+0x6444a]        # 0x14006b890
   140007446:	mov    QWORD PTR [rbp-0x60],rcx
   14000744a:	movzx  eax,WORD PTR [rip+0x64447]        # 0x14006b898
   140007451:	mov    WORD PTR [rbp-0x58],ax
   140007455:	mov    QWORD PTR [rbp-0x50],0xa
   14000745d:	lea    rax,[rbp-0x60]
   140007461:	cmp    r12,0x10
   140007465:	cmovae rax,rcx
   140007469:	mov    BYTE PTR [rax+0xa],0x0
   14000746d:	lea    rax,[rbp-0x60]
   140007471:	mov    r13,QWORD PTR [rsp+0x48]
   140007476:	cmp    rax,rbx
   140007479:	jae    0x1400074f8
   14000747b:	lea    rax,[rbp-0x60]
   14000747f:	cmp    r13,rax
   140007482:	ja     0x1400074f8
   140007484:	lea    rcx,[rbp-0x60]
   140007488:	sub    rcx,r13
   14000748b:	mov    rax,rdi
   14000748e:	imul   rcx
   140007491:	mov    rdi,rdx
   140007494:	sar    rdi,0x4
   140007498:	mov    rax,rdi
   14000749b:	shr    rax,0x3f
   14000749f:	add    rdi,rax
   1400074a2:	cmp    rbx,QWORD PTR [rsp+0x58]
   1400074a7:	jne    0x1400074bd
   1400074a9:	lea    rcx,[rsp+0x48]
   1400074ae:	call   0x140008bd0
   1400074b3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400074b8:	mov    r13,QWORD PTR [rsp+0x48]
   1400074bd:	lea    rax,[rdi+rdi*4]
   1400074c1:	lea    rdx,[r13+rax*8+0x0]
   1400074c6:	mov    QWORD PTR [rsp+0x70],rbx
   1400074cb:	mov    QWORD PTR [rsp+0x68],rbx
   1400074d0:	test   rbx,rbx
   1400074d3:	je     0x1400074f3
   1400074d5:	mov    QWORD PTR [rbx+0x18],r12
   1400074d9:	mov    QWORD PTR [rbx+0x10],0x0
   1400074e1:	mov    BYTE PTR [rbx],0x0
   1400074e4:	mov    r9,r14
   1400074e7:	xor    r8d,r8d
   1400074ea:	mov    rcx,rbx
   1400074ed:	call   0x140002c70
   1400074f2:	nop
   1400074f3:	jmp    0x1400075ac
   1400074f8:	cmp    rbx,QWORD PTR [rsp+0x58]
   1400074fd:	jne    0x140007513
   1400074ff:	lea    rcx,[rsp+0x48]
   140007504:	call   0x140008bd0
   140007509:	mov    rbx,QWORD PTR [rsp+0x50]
   14000750e:	mov    r13,QWORD PTR [rsp+0x48]
   140007513:	mov    QWORD PTR [rsp+0x70],rbx
   140007518:	mov    QWORD PTR [rsp+0x68],rbx
   14000751d:	test   rbx,rbx
   140007520:	je     0x1400075ac
   140007526:	mov    QWORD PTR [rbx+0x18],r12
   14000752a:	mov    QWORD PTR [rbx+0x10],0x0
   140007532:	mov    BYTE PTR [rbx],0x0
   140007535:	mov    rdi,QWORD PTR [rbp-0x50]
   140007539:	cmp    rdi,0xffffffffffffffff
   14000753d:	cmova  rdi,r14
   140007541:	lea    rax,[rbp-0x60]
   140007545:	mov    rdx,rdi
   140007548:	mov    rcx,rbx
   14000754b:	cmp    rbx,rax
   14000754e:	jne    0x140007567
   140007550:	mov    r8,r14
   140007553:	call   0x140002da0
   140007558:	xor    r8d,r8d
   14000755b:	xor    edx,edx
   14000755d:	mov    rcx,rbx
   140007560:	call   0x140002da0
   140007565:	jmp    0x1400075ac
   140007567:	call   0x140002d30
   14000756c:	test   al,al
   14000756e:	je     0x1400075ac
   140007570:	lea    rdx,[rbp-0x60]
   140007574:	cmp    QWORD PTR [rbp-0x48],0x10
   140007579:	cmovae rdx,QWORD PTR [rbp-0x60]
   14000757e:	cmp    QWORD PTR [rbx+0x18],0x10
   140007583:	jb     0x14000758a
   140007585:	mov    rcx,QWORD PTR [rbx]
   140007588:	jmp    0x14000758d
   14000758a:	mov    rcx,rbx
   14000758d:	mov    r8,rdi
   140007590:	call   0x140033260
   140007595:	mov    QWORD PTR [rbx+0x10],rdi
   140007599:	cmp    QWORD PTR [rbx+0x18],0x10
   14000759e:	jb     0x1400075a5
   1400075a0:	mov    rax,QWORD PTR [rbx]
   1400075a3:	jmp    0x1400075a8
   1400075a5:	mov    rax,rbx
   1400075a8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400075ac:	add    rbx,0x28
   1400075b0:	mov    QWORD PTR [rsp+0x50],rbx
   1400075b5:	cmp    QWORD PTR [rbp-0x48],0x10
   1400075ba:	jb     0x140007731
   1400075c0:	mov    rcx,QWORD PTR [rbp-0x60]
   1400075c4:	call   0x1400330c0
   1400075c9:	jmp    0x140007731
   1400075ce:	cmp    ecx,0x8
   1400075d1:	jne    0x14000773b
   1400075d7:	mov    QWORD PTR [rbp-0x48],r12
   1400075db:	mov    BYTE PTR [rbp-0x60],0x0
   1400075df:	mov    rcx,QWORD PTR [rip+0x642ba]        # 0x14006b8a0
   1400075e6:	mov    QWORD PTR [rbp-0x60],rcx
   1400075ea:	mov    eax,DWORD PTR [rip+0x642b8]        # 0x14006b8a8
   1400075f0:	mov    DWORD PTR [rbp-0x58],eax
   1400075f3:	movzx  eax,WORD PTR [rip+0x642b2]        # 0x14006b8ac
   1400075fa:	mov    WORD PTR [rbp-0x54],ax
   1400075fe:	mov    QWORD PTR [rbp-0x50],0xe
   140007606:	lea    rax,[rbp-0x60]
   14000760a:	cmp    r12,0x10
   14000760e:	cmovae rax,rcx
   140007612:	mov    BYTE PTR [rax+0xe],0x0
   140007616:	lea    rcx,[rsp+0x48]
   14000761b:	call   0x140008bd0
   140007620:	mov    rdi,QWORD PTR [rsp+0x50]
   140007625:	mov    QWORD PTR [rsp+0x70],rdi
   14000762a:	mov    QWORD PTR [rsp+0x68],rdi
   14000762f:	test   rdi,rdi
   140007632:	je     0x1400076c8
   140007638:	mov    QWORD PTR [rdi+0x18],r12
   14000763c:	mov    QWORD PTR [rdi+0x10],0x0
   140007644:	mov    BYTE PTR [rdi],0x0
   140007647:	mov    rbx,QWORD PTR [rbp-0x50]
   14000764b:	cmp    rbx,0xffffffffffffffff
   14000764f:	mov    rcx,0xffffffffffffffff
   140007656:	cmova  rbx,rcx
   14000765a:	lea    rax,[rbp-0x60]
   14000765e:	mov    rdx,rbx
   140007661:	cmp    rdi,rax
   140007664:	jne    0x140007680
   140007666:	mov    r8,rcx
   140007669:	mov    rcx,rdi
   14000766c:	call   0x140002da0
   140007671:	xor    r8d,r8d
   140007674:	xor    edx,edx
   140007676:	mov    rcx,rdi
   140007679:	call   0x140002da0
   14000767e:	jmp    0x1400076c8
   140007680:	mov    rcx,rdi
   140007683:	call   0x140002d30
   140007688:	test   al,al
   14000768a:	je     0x1400076c8
   14000768c:	lea    rdx,[rbp-0x60]
   140007690:	cmp    QWORD PTR [rbp-0x48],0x10
   140007695:	cmovae rdx,QWORD PTR [rbp-0x60]
   14000769a:	cmp    QWORD PTR [rdi+0x18],0x10
   14000769f:	jb     0x1400076a6
   1400076a1:	mov    rcx,QWORD PTR [rdi]
   1400076a4:	jmp    0x1400076a9
   1400076a6:	mov    rcx,rdi
   1400076a9:	mov    r8,rbx
   1400076ac:	call   0x140033260
   1400076b1:	mov    QWORD PTR [rdi+0x10],rbx
   1400076b5:	cmp    QWORD PTR [rdi+0x18],0x10
   1400076ba:	jb     0x1400076c1
   1400076bc:	mov    rax,QWORD PTR [rdi]
   1400076bf:	jmp    0x1400076c4
   1400076c1:	mov    rax,rdi
   1400076c4:	mov    BYTE PTR [rbx+rax*1],0x0
   1400076c8:	add    rdi,0x28
   1400076cc:	mov    QWORD PTR [rsp+0x50],rdi
   1400076d1:	cmp    QWORD PTR [rbp-0x48],0x10
   1400076d6:	jb     0x1400076e1
   1400076d8:	mov    rcx,QWORD PTR [rbp-0x60]
   1400076dc:	call   0x1400330c0
   1400076e1:	mov    QWORD PTR [rbp-0x48],r12
   1400076e5:	mov    QWORD PTR [rbp-0x50],0x0
   1400076ed:	mov    BYTE PTR [rbp-0x60],0x0
   1400076f1:	mov    r8d,0xe
   1400076f7:	lea    rdx,[rip+0x641b2]        # 0x14006b8b0
   1400076fe:	lea    rcx,[rbp-0x60]
   140007702:	call   0x140002ba0
   140007707:	nop
   140007708:	lea    rdx,[rbp-0x60]
   14000770c:	lea    rcx,[rsp+0x48]
   140007711:	call   0x140008900
   140007716:	nop
   140007717:	cmp    QWORD PTR [rbp-0x48],0x10
   14000771c:	jb     0x140007727
   14000771e:	mov    rcx,QWORD PTR [rbp-0x60]
   140007722:	call   0x1400330c0
   140007727:	mov    r13,QWORD PTR [rsp+0x48]
   14000772c:	mov    rbx,QWORD PTR [rsp+0x50]
   140007731:	movabs rdi,0x6666666666666667
   14000773b:	mov    rax,QWORD PTR [r15+0x1b0]
   140007742:	mov    ecx,DWORD PTR [rsi+rax*1+0x2c]
   140007746:	cmp    ecx,0x4
   140007749:	jne    0x1400077ca
   14000774b:	mov    QWORD PTR [rbp-0x48],r12
   14000774f:	mov    QWORD PTR [rbp-0x50],0x0
   140007757:	mov    BYTE PTR [rbp-0x60],0x0
   14000775b:	lea    r8d,[rcx+0x9]
   14000775f:	lea    rdx,[rip+0x6415a]        # 0x14006b8c0
   140007766:	lea    rcx,[rbp-0x60]
   14000776a:	call   0x140002ba0
   14000776f:	nop
   140007770:	lea    rdx,[rbp-0x60]
   140007774:	lea    rcx,[rsp+0x48]
   140007779:	call   0x140008900
   14000777e:	nop
   14000777f:	cmp    QWORD PTR [rbp-0x48],0x10
   140007784:	jb     0x14000778f
   140007786:	mov    rcx,QWORD PTR [rbp-0x60]
   14000778a:	call   0x1400330c0
   14000778f:	mov    QWORD PTR [rbp-0x48],r12
   140007793:	mov    QWORD PTR [rbp-0x50],0x0
   14000779b:	mov    BYTE PTR [rbp-0x60],0x0
   14000779f:	mov    r8d,0xd
   1400077a5:	lea    rdx,[rip+0x64124]        # 0x14006b8d0
   1400077ac:	lea    rcx,[rbp-0x60]
   1400077b0:	call   0x140002ba0
   1400077b5:	nop
   1400077b6:	lea    rdx,[rbp-0x60]
   1400077ba:	lea    rcx,[rsp+0x48]
   1400077bf:	call   0x140008900
   1400077c4:	nop
   1400077c5:	jmp    0x14000784d
   1400077ca:	cmp    ecx,0xc
   1400077cd:	jne    0x140007867
   1400077d3:	mov    QWORD PTR [rbp-0x48],r12
   1400077d7:	mov    QWORD PTR [rbp-0x50],0x0
   1400077df:	mov    BYTE PTR [rbp-0x60],0x0
   1400077e3:	lea    r8d,[rcx+0x5]
   1400077e7:	lea    rdx,[rip+0x640f2]        # 0x14006b8e0
   1400077ee:	lea    rcx,[rbp-0x60]
   1400077f2:	call   0x140002ba0
   1400077f7:	nop
   1400077f8:	lea    rdx,[rbp-0x60]
   1400077fc:	lea    rcx,[rsp+0x48]
   140007801:	call   0x140008900
   140007806:	nop
   140007807:	cmp    QWORD PTR [rbp-0x48],0x10
   14000780c:	jb     0x140007817
   14000780e:	mov    rcx,QWORD PTR [rbp-0x60]
   140007812:	call   0x1400330c0
   140007817:	mov    QWORD PTR [rbp-0x48],r12
   14000781b:	mov    QWORD PTR [rbp-0x50],0x0
   140007823:	mov    BYTE PTR [rbp-0x60],0x0
   140007827:	mov    r8d,0x11
   14000782d:	lea    rdx,[rip+0x640c4]        # 0x14006b8f8
   140007834:	lea    rcx,[rbp-0x60]
   140007838:	call   0x140002ba0
   14000783d:	nop
   14000783e:	lea    rdx,[rbp-0x60]
   140007842:	lea    rcx,[rsp+0x48]
   140007847:	call   0x140008900
   14000784c:	nop
   14000784d:	cmp    QWORD PTR [rbp-0x48],0x10
   140007852:	jb     0x14000785d
   140007854:	mov    rcx,QWORD PTR [rbp-0x60]
   140007858:	call   0x1400330c0
   14000785d:	mov    rbx,QWORD PTR [rsp+0x50]
   140007862:	mov    r13,QWORD PTR [rsp+0x48]
   140007867:	xor    r14d,r14d
   14000786a:	mov    rcx,rbx
   14000786d:	sub    rcx,r13
   140007870:	mov    rax,rdi
   140007873:	imul   rcx
   140007876:	mov    r15,rdx
   140007879:	sar    r15,0x4
   14000787d:	mov    rax,r15
   140007880:	shr    rax,0x3f
   140007884:	add    r15,rax
   140007887:	je     0x140007b89
   14000788d:	xor    eax,eax
   14000788f:	mov    rbx,QWORD PTR [rbp-0x70]
   140007893:	xorpd  xmm7,xmm7
   140007897:	movsd  xmm6,QWORD PTR [rip+0x6fc01]        # 0x1400774a0
   14000789f:	nop
   1400078a0:	lea    rax,[rax+rax*4]
   1400078a4:	lea    rdx,[r13+rax*8+0x0]
   1400078a9:	mov    QWORD PTR [rbp-0x48],r12
   1400078ad:	mov    QWORD PTR [rbp-0x50],0x0
   1400078b5:	mov    BYTE PTR [rbp-0x60],0x0
   1400078b9:	or     rdi,0xffffffffffffffff
   1400078bd:	mov    r9,rdi
   1400078c0:	xor    r8d,r8d
   1400078c3:	lea    rcx,[rbp-0x60]
   1400078c7:	call   0x140002c70
   1400078cc:	nop
   1400078cd:	lea    r8d,[rdi+0x2]
   1400078d1:	lea    rdx,[rip+0x64034]        # 0x14006b90c
   1400078d8:	lea    rcx,[rbp-0x60]
   1400078dc:	call   0x140008ee0
   1400078e1:	lea    rax,[rbp-0x28]
   1400078e5:	mov    QWORD PTR [rbp-0x30],rax
   1400078e9:	mov    rdx,QWORD PTR [rbp-0x80]
   1400078ed:	lea    rcx,[rbp-0x30]
   1400078f1:	call   0x140005a30
   1400078f6:	nop
   1400078f7:	xor    eax,eax
   1400078f9:	mov    rcx,rdi
   1400078fc:	mov    rdx,QWORD PTR [rbp-0x30]
   140007900:	mov    rdi,rdx
   140007903:	repnz scas al,BYTE PTR es:[rdi]
   140007905:	not    rcx
   140007908:	lea    r8,[rcx-0x1]
   14000790c:	lea    rcx,[rbp-0x60]
   140007910:	call   0x140008ee0
   140007915:	nop
   140007916:	lea    rax,[rbp-0x28]
   14000791a:	mov    rcx,QWORD PTR [rbp-0x30]
   14000791e:	cmp    rcx,rax
   140007921:	je     0x140007928
   140007923:	call   0x140033594
   140007928:	lea    rdx,[rbp-0x60]
   14000792c:	lea    rcx,[rbx+0x260]
   140007933:	call   0x140009220
   140007938:	mov    QWORD PTR [rsp+0x68],rax
   14000793d:	mov    rdi,QWORD PTR [rbx+0x268]
   140007944:	cmp    rax,rdi
   140007947:	je     0x1400079a7
   140007949:	lea    rdx,[rax+0x18]
   14000794d:	mov    rsi,QWORD PTR [rdx+0x10]
   140007951:	cmp    QWORD PTR [rdx+0x18],0x10
   140007956:	jb     0x14000795b
   140007958:	mov    rdx,QWORD PTR [rdx]
   14000795b:	lea    rcx,[rbp-0x60]
   14000795f:	cmp    QWORD PTR [rbp-0x48],0x10
   140007964:	cmovae rcx,QWORD PTR [rbp-0x60]
   140007969:	mov    r8,rsi
   14000796c:	mov    r12,QWORD PTR [rbp-0x50]
   140007970:	cmp    r12,rsi
   140007973:	cmovb  r8,r12
   140007977:	call   0x14003e320
   14000797c:	movsxd rcx,eax
   14000797f:	test   eax,eax
   140007981:	jne    0x140007997
   140007983:	cmp    r12,rsi
   140007986:	jae    0x14000798d
   140007988:	or     ecx,0xffffffff
   14000798b:	jmp    0x140007997
   14000798d:	xor    eax,eax
   14000798f:	cmp    r12,rsi
   140007992:	setne  al
   140007995:	mov    ecx,eax
   140007997:	test   ecx,ecx
   140007999:	sets   al
   14000799c:	test   al,al
   14000799e:	jne    0x1400079a7
   1400079a0:	lea    rax,[rsp+0x68]
   1400079a5:	jmp    0x1400079b1
   1400079a7:	mov    QWORD PTR [rsp+0x70],rdi
   1400079ac:	lea    rax,[rsp+0x70]
   1400079b1:	mov    rax,QWORD PTR [rax]
   1400079b4:	mov    rcx,QWORD PTR [rbp-0x70]
   1400079b8:	cmp    rax,QWORD PTR [rcx+0x268]
   1400079bf:	jne    0x1400079f5
   1400079c1:	lea    rcx,[rbp-0x60]
   1400079c5:	cmp    QWORD PTR [rbp-0x48],0x10
   1400079ca:	cmovae rcx,QWORD PTR [rbp-0x60]
   1400079cf:	call   0x14001e1d0
   1400079d4:	mov    rdi,rax
   1400079d7:	test   rax,rax
   1400079da:	je     0x140007b3a
   1400079e0:	lea    rdx,[rbp-0x60]
   1400079e4:	lea    rcx,[rbx+0x260]
   1400079eb:	call   0x1400057d0
   1400079f0:	mov    QWORD PTR [rax],rdi
   1400079f3:	jmp    0x1400079f9
   1400079f5:	mov    rdi,QWORD PTR [rax+0x40]
   1400079f9:	test   rdi,rdi
   1400079fc:	je     0x140007b3a
   140007a02:	mov    rsi,QWORD PTR [rbp-0x78]
   140007a06:	mov    eax,DWORD PTR [rsi+0x118]
   140007a0c:	movzx  r12d,BYTE PTR [rsp+0x40]
   140007a12:	test   eax,eax
   140007a14:	je     0x140007a9d
   140007a1a:	xor    r8d,r8d
   140007a1d:	test   r12b,r12b
   140007a20:	cmove  r8d,eax
   140007a24:	xor    edx,edx
   140007a26:	test   r12b,r12b
   140007a29:	cmovne edx,eax
   140007a2c:	mov    rcx,rdi
   140007a2f:	call   0x14001f450
   140007a34:	test   al,al
   140007a36:	je     0x140007a9d
   140007a38:	lea    rcx,[rip+0x63ed9]        # 0x14006b918
   140007a3f:	cmp    DWORD PTR [rsi+0x11c],0x0
   140007a46:	lea    rax,[rip+0x63ec3]        # 0x14006b910
   140007a4d:	cmove  rcx,rax
   140007a51:	lea    rax,[rip+0x63ecc]        # 0x14006b924
   140007a58:	test   r12b,r12b
   140007a5b:	lea    rdx,[rip+0x63ebe]        # 0x14006b920
   140007a62:	cmovne rax,rdx
   140007a66:	mov    QWORD PTR [rsp+0x38],rcx
   140007a6b:	mov    rcx,QWORD PTR [rbp-0x80]
   140007a6f:	mov    QWORD PTR [rsp+0x30],rcx
   140007a74:	mov    QWORD PTR [rsp+0x28],rax
   140007a79:	lea    rax,[rip+0x63eb0]        # 0x14006b930
   140007a80:	mov    QWORD PTR [rsp+0x20],rax
   140007a85:	xor    r9d,r9d
   140007a88:	mov    edx,0x16d
   140007a8d:	lea    r8d,[r9+0x5]
   140007a91:	lea    rcx,[rip+0x63d58]        # 0x14006b7f0
   140007a98:	call   0x140003150
   140007a9d:	test   r12b,r12b
   140007aa0:	je     0x140007aaa
   140007aa2:	mov    esi,DWORD PTR [rsi+0x120]
   140007aa8:	jmp    0x140007ab0
   140007aaa:	mov    esi,DWORD PTR [rsi+0x124]
   140007ab0:	test   esi,esi
   140007ab2:	je     0x140007b40
   140007ab8:	js     0x140007b40
   140007abe:	mov    DWORD PTR [rsp+0x78],0xffffffff
   140007ac6:	lea    r8,[rsp+0x78]
   140007acb:	xor    edx,edx
   140007acd:	mov    rcx,rdi
   140007ad0:	call   0x14001eb50
   140007ad5:	cmp    DWORD PTR [rsp+0x78],esi
   140007ad9:	je     0x140007b40
   140007adb:	xor    edx,edx
   140007add:	mov    rcx,rdi
   140007ae0:	call   0x14001f230
   140007ae5:	test   r12b,r12b
   140007ae8:	je     0x140007b1d
   140007aea:	movsd  QWORD PTR [rsp+0x68],xmm7
   140007af0:	lea    rdx,[rsp+0x68]
   140007af5:	mov    rcx,rdi
   140007af8:	call   0x14001ed60
   140007afd:	mov    edx,esi
   140007aff:	mov    rcx,rdi
   140007b02:	call   0x14001ee90
   140007b07:	ucomisd xmm6,QWORD PTR [rsp+0x68]
   140007b0d:	jp     0x140007b1d
   140007b0f:	jne    0x140007b1d
   140007b11:	movapd xmm1,xmm6
   140007b15:	mov    rcx,rdi
   140007b18:	call   0x14001ec90
   140007b1d:	mov    r8d,esi
   140007b20:	or     edx,0xffffffff
   140007b23:	mov    rcx,rdi
   140007b26:	call   0x14001ea90
   140007b2b:	mov    edx,0x1
   140007b30:	mov    rcx,rdi
   140007b33:	call   0x14001f230
   140007b38:	jmp    0x140007b40
   140007b3a:	movzx  r12d,BYTE PTR [rsp+0x40]
   140007b40:	mov    rax,QWORD PTR [rbp-0x78]
   140007b44:	mov    eax,DWORD PTR [rax+0x128]
   140007b4a:	test   eax,eax
   140007b4c:	je     0x140007b5f
   140007b4e:	xor    edx,edx
   140007b50:	test   r12b,r12b
   140007b53:	cmovne edx,eax
   140007b56:	mov    rcx,rdi
   140007b59:	call   0x14001f390
   140007b5e:	nop
   140007b5f:	cmp    QWORD PTR [rbp-0x48],0x10
   140007b64:	jb     0x140007b6f
   140007b66:	mov    rcx,QWORD PTR [rbp-0x60]
   140007b6a:	call   0x1400330c0
   140007b6f:	inc    r14d
   140007b72:	movsxd rax,r14d
   140007b75:	cmp    rax,r15
   140007b78:	mov    r12d,0xf
   140007b7e:	jb     0x1400078a0
   140007b84:	mov    rbx,QWORD PTR [rsp+0x50]
   140007b89:	test   r13,r13
   140007b8c:	je     0x140007bc5
   140007b8e:	mov    rdi,r13
   140007b91:	cmp    r13,rbx
   140007b94:	je     0x140007bbd
   140007b96:	cmp    QWORD PTR [rdi+0x18],0x10
   140007b9b:	jb     0x140007ba5
   140007b9d:	mov    rcx,QWORD PTR [rdi]
   140007ba0:	call   0x1400330c0
   140007ba5:	mov    QWORD PTR [rdi+0x18],r12
   140007ba9:	mov    QWORD PTR [rdi+0x10],0x0
   140007bb1:	mov    BYTE PTR [rdi],0x0
   140007bb4:	add    rdi,0x28
   140007bb8:	cmp    rdi,rbx
   140007bbb:	jne    0x140007b96
   140007bbd:	mov    rcx,r13
   140007bc0:	call   0x1400330c0
   140007bc5:	mov    rcx,QWORD PTR [rbp+0x60]
   140007bc9:	xor    rcx,rsp
   140007bcc:	call   0x140032f00
   140007bd1:	movaps xmm6,XMMWORD PTR [rsp+0x180]
   140007bd9:	movaps xmm7,XMMWORD PTR [rsp+0x170]
   140007be1:	add    rsp,0x198
   140007be8:	pop    r15
   140007bea:	pop    r14
   140007bec:	pop    r13
   140007bee:	pop    r12
   140007bf0:	pop    rdi
   140007bf1:	pop    rsi
   140007bf2:	pop    rbx
   140007bf3:	pop    rbp
   140007bf4:	ret    
   140007bf5:	int3   
   140007bf6:	int3   
   140007bf7:	int3   
   140007bf8:	int3   
   140007bf9:	int3   
   140007bfa:	int3   
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	mov    QWORD PTR [rsp+0x10],rbx
   140007c05:	mov    QWORD PTR [rsp+0x18],rbp
   140007c0a:	push   rsi
   140007c0b:	sub    rsp,0x20
   140007c0f:	mov    rbx,QWORD PTR [rcx+0x240]
   140007c16:	mov    rsi,QWORD PTR [rcx+0x248]
   140007c1d:	mov    rbp,rcx
   140007c20:	cmp    rbx,rsi
   140007c23:	je     0x140007c62
   140007c25:	mov    QWORD PTR [rsp+0x30],rdi
   140007c2a:	mov    rdi,rsi
   140007c2d:	cmp    rsi,rsi
   140007c30:	je     0x140007c56
   140007c32:	mov    rcx,rbx
   140007c35:	mov    rdx,rdi
   140007c38:	mov    r8d,0x130
   140007c3e:	call   0x140033260
   140007c43:	add    rdi,0x130
   140007c4a:	add    rbx,0x130
   140007c51:	cmp    rdi,rsi
   140007c54:	jne    0x140007c32
   140007c56:	mov    rdi,QWORD PTR [rsp+0x30]
   140007c5b:	mov    QWORD PTR [rbp+0x248],rbx
   140007c62:	mov    rbx,QWORD PTR [rsp+0x38]
   140007c67:	mov    rbp,QWORD PTR [rsp+0x40]
   140007c6c:	add    rsp,0x20
   140007c70:	pop    rsi
   140007c71:	ret    
   140007c72:	int3   
   140007c73:	int3   
   140007c74:	int3   
   140007c75:	int3   
   140007c76:	int3   
   140007c77:	int3   
   140007c78:	int3   
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    rax,rsp
   140007c83:	push   rsi
   140007c84:	push   rdi
   140007c85:	push   r12
   140007c87:	sub    rsp,0xd0
   140007c8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007c97:	mov    QWORD PTR [rax+0x10],rbx
   140007c9b:	mov    QWORD PTR [rax+0x18],rbp
   140007c9f:	mov    rax,QWORD PTR [rip+0x7d402]        # 0x1400850a8
   140007ca6:	xor    rax,rsp
   140007ca9:	mov    QWORD PTR [rsp+0xc0],rax
   140007cb1:	mov    r12,rcx
   140007cb4:	add    rcx,0x1b0
   140007cbb:	call   0x140010a70
   140007cc0:	mov    rdi,QWORD PTR [r12+0x1b0]
   140007cc8:	cmp    rdi,QWORD PTR [r12+0x1b8]
   140007cd0:	je     0x140007e68
   140007cd6:	mov    rbx,QWORD PTR [r12+0x240]
   140007cde:	cmp    rbx,QWORD PTR [r12+0x248]
   140007ce6:	je     0x140007e1d
   140007cec:	nop    DWORD PTR [rax+0x0]
   140007cf0:	cmp    DWORD PTR [rbx+0x8],0x3
   140007cf4:	je     0x140007e08
   140007cfa:	mov    eax,DWORD PTR [rdi+0x28]
   140007cfd:	cmp    DWORD PTR [rbx+0x11c],eax
   140007d03:	jne    0x140007e08
   140007d09:	mov    rcx,rdi
   140007d0c:	call   0x140002a60
   140007d11:	mov    rbp,rax
   140007d14:	lea    rax,[rsp+0x38]
   140007d19:	mov    QWORD PTR [rsp+0x30],rax
   140007d1e:	test   rbp,rbp
   140007d21:	jne    0x140007d30
   140007d23:	xor    r8d,r8d
   140007d26:	mov    QWORD PTR [rsp+0x30],r8
   140007d2b:	jmp    0x140007de5
   140007d30:	mov    rcx,rbp
   140007d33:	call   QWORD PTR [rip+0x606a7]        # 0x1400683e0
   140007d39:	mov    esi,eax
   140007d3b:	inc    esi
   140007d3d:	mov    ecx,0x0
   140007d42:	setns  cl
   140007d45:	test   ecx,ecx
   140007d47:	je     0x140007e5d
   140007d4d:	lea    rax,[rsp+0x38]
   140007d52:	mov    rcx,QWORD PTR [rsp+0x30]
   140007d57:	cmp    rcx,rax
   140007d5a:	je     0x140007d84
   140007d5c:	cmp    esi,0x80
   140007d62:	jle    0x140007d7d
   140007d64:	movsxd rdx,esi
   140007d67:	mov    r8d,0x1
   140007d6d:	call   0x140033618
   140007d72:	test   rax,rax
   140007d75:	je     0x140007e26
   140007d7b:	jmp    0x140007d99
   140007d7d:	call   0x140033594
   140007d82:	jmp    0x140007da9
   140007d84:	cmp    esi,0x80
   140007d8a:	jle    0x140007da9
   140007d8c:	movsxd rcx,esi
   140007d8f:	mov    edx,0x1
   140007d94:	call   0x1400335d4
   140007d99:	mov    QWORD PTR [rsp+0x30],rax
   140007d9e:	test   rax,rax
   140007da1:	je     0x140007e31
   140007da7:	jmp    0x140007db3
   140007da9:	lea    rax,[rsp+0x38]
   140007dae:	mov    QWORD PTR [rsp+0x30],rax
   140007db3:	movsxd rdx,esi
   140007db6:	mov    r9,rdx
   140007db9:	mov    r8,rbp
   140007dbc:	mov    rcx,rax
   140007dbf:	call   0x140033ccc
   140007dc4:	test   eax,eax
   140007dc6:	je     0x140007de0
   140007dc8:	cmp    eax,0xc
   140007dcb:	je     0x140007e52
   140007dd1:	cmp    eax,0x16
   140007dd4:	je     0x140007e47
   140007dd6:	cmp    eax,0x22
   140007dd9:	je     0x140007e47
   140007ddb:	cmp    eax,0x50
   140007dde:	jne    0x140007e3c
   140007de0:	mov    r8,QWORD PTR [rsp+0x30]
   140007de5:	xor    r9d,r9d
   140007de8:	mov    rdx,rbx
   140007deb:	mov    rcx,r12
   140007dee:	call   0x1400070a0
   140007df3:	nop
   140007df4:	lea    rax,[rsp+0x38]
   140007df9:	mov    rcx,QWORD PTR [rsp+0x30]
   140007dfe:	cmp    rcx,rax
   140007e01:	je     0x140007e08
   140007e03:	call   0x140033594
   140007e08:	add    rbx,0x130
   140007e0f:	cmp    rbx,QWORD PTR [r12+0x248]
   140007e17:	jne    0x140007cf0
   140007e1d:	add    rdi,0x38
   140007e21:	jmp    0x140007cc8
   140007e26:	mov    ecx,0x8007000e
   140007e2b:	call   0x1400025f0
   140007e30:	int3   
   140007e31:	mov    ecx,0x8007000e
   140007e36:	call   0x1400025f0
   140007e3b:	int3   
   140007e3c:	mov    ecx,0x80004005
   140007e41:	call   0x1400025f0
   140007e46:	int3   
   140007e47:	mov    ecx,0x80070057
   140007e4c:	call   0x1400025f0
   140007e51:	int3   
   140007e52:	mov    ecx,0x8007000e
   140007e57:	call   0x1400025f0
   140007e5c:	int3   
   140007e5d:	mov    ecx,0x80070057
   140007e62:	call   0x1400025f0
   140007e67:	int3   
   140007e68:	mov    rcx,QWORD PTR [rsp+0xc0]
   140007e70:	xor    rcx,rsp
   140007e73:	call   0x140032f00
   140007e78:	lea    r11,[rsp+0xd0]
   140007e80:	mov    rbx,QWORD PTR [r11+0x28]
   140007e84:	mov    rbp,QWORD PTR [r11+0x30]
   140007e88:	mov    rsp,r11
   140007e8b:	pop    r12
   140007e8d:	pop    rdi
   140007e8e:	pop    rsi
   140007e8f:	ret    
   140007e90:	rex push rbp
   140007e92:	push   rsi
   140007e93:	push   rdi
   140007e94:	push   r12
   140007e96:	push   r13
   140007e98:	push   r14
   140007e9a:	push   r15
   140007e9c:	sub    rsp,0x70
   140007ea0:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140007ea9:	mov    QWORD PTR [rsp+0xc0],rbx
   140007eb1:	mov    rax,QWORD PTR [rip+0x7d1f0]        # 0x1400850a8
   140007eb8:	xor    rax,rsp
   140007ebb:	mov    QWORD PTR [rsp+0x68],rax
   140007ec0:	mov    rax,rdx
   140007ec3:	mov    r15,rcx
   140007ec6:	mov    QWORD PTR [rsp+0x20],rcx
   140007ecb:	lea    rdx,[rsp+0x40]
   140007ed0:	mov    rcx,rax
   140007ed3:	call   0x14000ecb0
   140007ed8:	nop
   140007ed9:	mov    rbp,QWORD PTR [r15+0x268]
   140007ee0:	mov    rbx,QWORD PTR [rbp+0x8]
   140007ee4:	xor    r12d,r12d
   140007ee7:	mov    r13,QWORD PTR [rsp+0x58]
   140007eec:	mov    rsi,QWORD PTR [rsp+0x50]
   140007ef1:	mov    r14,QWORD PTR [rsp+0x40]
   140007ef6:	cmp    BYTE PTR [rbx+0x49],r12b
   140007efa:	jne    0x140007f68
   140007efc:	nop    DWORD PTR [rax+0x0]
   140007f00:	lea    rcx,[rbx+0x18]
   140007f04:	lea    rdx,[rsp+0x40]
   140007f09:	cmp    r13,0x10
   140007f0d:	cmovae rdx,r14
   140007f11:	mov    rdi,QWORD PTR [rcx+0x10]
   140007f15:	cmp    rdi,rdi
   140007f18:	cmp    QWORD PTR [rcx+0x18],0x10
   140007f1d:	jb     0x140007f22
   140007f1f:	mov    rcx,QWORD PTR [rcx]
   140007f22:	mov    r8,rsi
   140007f25:	cmp    rdi,rsi
   140007f28:	cmovb  r8,rdi
   140007f2c:	call   0x14003e320
   140007f31:	movsxd rcx,eax
   140007f34:	test   eax,eax
   140007f36:	jne    0x140007f4d
   140007f38:	cmp    rdi,rsi
   140007f3b:	jae    0x140007f42
   140007f3d:	or     ecx,0xffffffff
   140007f40:	jmp    0x140007f4d
   140007f42:	mov    eax,r12d
   140007f45:	cmp    rdi,rsi
   140007f48:	setne  al
   140007f4b:	mov    ecx,eax
   140007f4d:	test   ecx,ecx
   140007f4f:	sets   al
   140007f52:	test   al,al
   140007f54:	je     0x140007f5c
   140007f56:	mov    rbx,QWORD PTR [rbx+0x10]
   140007f5a:	jmp    0x140007f62
   140007f5c:	mov    rbp,rbx
   140007f5f:	mov    rbx,QWORD PTR [rbx]
   140007f62:	cmp    BYTE PTR [rbx+0x49],r12b
   140007f66:	je     0x140007f00
   140007f68:	mov    QWORD PTR [rsp+0x28],rbp
   140007f6d:	mov    rbx,QWORD PTR [r15+0x268]
   140007f74:	cmp    rbp,rbx
   140007f77:	je     0x140007fcf
   140007f79:	lea    rdx,[rbp+0x18]
   140007f7d:	mov    rdi,QWORD PTR [rdx+0x10]
   140007f81:	cmp    QWORD PTR [rdx+0x18],0x10
   140007f86:	jb     0x140007f8b
   140007f88:	mov    rdx,QWORD PTR [rdx]
   140007f8b:	lea    rcx,[rsp+0x40]
   140007f90:	cmp    r13,0x10
   140007f94:	cmovae rcx,r14
   140007f98:	mov    r8,rdi
   140007f9b:	cmp    rsi,rdi
   140007f9e:	cmovb  r8,rsi
   140007fa2:	call   0x14003e320
   140007fa7:	movsxd rcx,eax
   140007faa:	test   eax,eax
   140007fac:	jne    0x140007fbf
   140007fae:	cmp    rsi,rdi
   140007fb1:	jae    0x140007fb8
   140007fb3:	or     ecx,0xffffffff
   140007fb6:	jmp    0x140007fbf
   140007fb8:	setne  r12b
   140007fbc:	mov    ecx,r12d
   140007fbf:	test   ecx,ecx
   140007fc1:	sets   al
   140007fc4:	test   al,al
   140007fc6:	jne    0x140007fcf
   140007fc8:	lea    rax,[rsp+0x28]
   140007fcd:	jmp    0x140007fd9
   140007fcf:	mov    QWORD PTR [rsp+0x30],rbx
   140007fd4:	lea    rax,[rsp+0x30]
   140007fd9:	mov    rax,QWORD PTR [rax]
   140007fdc:	mov    rcx,QWORD PTR [rsp+0x20]
   140007fe1:	cmp    rax,QWORD PTR [rcx+0x268]
   140007fe8:	jne    0x14000801f
   140007fea:	lea    rcx,[rsp+0x40]
   140007fef:	cmp    r13,0x10
   140007ff3:	cmovae rcx,r14
   140007ff7:	call   0x14001e1d0
   140007ffc:	mov    rbx,rax
   140007fff:	lea    rdx,[rsp+0x40]
   140008004:	lea    rcx,[r15+0x260]
   14000800b:	call   0x1400057d0
   140008010:	mov    QWORD PTR [rax],rbx
   140008013:	mov    r13,QWORD PTR [rsp+0x58]
   140008018:	mov    r14,QWORD PTR [rsp+0x40]
   14000801d:	jmp    0x140008023
   14000801f:	mov    rbx,QWORD PTR [rax+0x40]
   140008023:	cmp    r13,0x10
   140008027:	jb     0x140008031
   140008029:	mov    rcx,r14
   14000802c:	call   0x1400330c0
   140008031:	mov    rax,rbx
   140008034:	mov    rcx,QWORD PTR [rsp+0x68]
   140008039:	xor    rcx,rsp
   14000803c:	call   0x140032f00
   140008041:	mov    rbx,QWORD PTR [rsp+0xc0]
   140008049:	add    rsp,0x70
   14000804d:	pop    r15
   14000804f:	pop    r14
   140008051:	pop    r13
   140008053:	pop    r12
   140008055:	pop    rdi
   140008056:	pop    rsi
   140008057:	pop    rbp
   140008058:	ret    
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	rex push rbx
   140008062:	push   rsi
   140008063:	push   rdi
   140008064:	sub    rsp,0x110
   14000806b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140008074:	mov    rax,QWORD PTR [rip+0x7d02d]        # 0x1400850a8
   14000807b:	xor    rax,rsp
   14000807e:	mov    QWORD PTR [rsp+0x100],rax
   140008086:	mov    esi,r8d
   140008089:	mov    rbx,rcx
   14000808c:	lea    rax,[rsp+0x78]
   140008091:	mov    QWORD PTR [rsp+0x70],rax
   140008096:	mov    r8d,0x3
   14000809c:	lea    rcx,[rsp+0x70]
   1400080a1:	call   0x140002a70
   1400080a6:	nop
   1400080a7:	mov    QWORD PTR [rsp+0x60],0xf
   1400080b0:	mov    QWORD PTR [rsp+0x58],0x0
   1400080b9:	mov    BYTE PTR [rsp+0x48],0x0
   1400080be:	xor    eax,eax
   1400080c0:	or     rcx,0xffffffffffffffff
   1400080c4:	mov    rdx,QWORD PTR [rsp+0x70]
   1400080c9:	mov    rdi,rdx
   1400080cc:	repnz scas al,BYTE PTR es:[rdi]
   1400080ce:	not    rcx
   1400080d1:	lea    r8,[rcx-0x1]
   1400080d5:	lea    rcx,[rsp+0x48]
   1400080da:	call   0x140002ba0
   1400080df:	nop
   1400080e0:	lea    rax,[rsp+0x78]
   1400080e5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400080ea:	cmp    rcx,rax
   1400080ed:	je     0x1400080f4
   1400080ef:	call   0x140033594
   1400080f4:	lea    rax,[rsp+0x48]
   1400080f9:	cmp    QWORD PTR [rsp+0x60],0x10
   1400080ff:	cmovae rax,QWORD PTR [rsp+0x48]
   140008105:	mov    DWORD PTR [rsp+0x30],esi
   140008109:	mov    QWORD PTR [rsp+0x28],rax
   14000810e:	lea    rax,[rip+0x6383b]        # 0x14006b950
   140008115:	mov    QWORD PTR [rsp+0x20],rax
   14000811a:	xor    r9d,r9d
   14000811d:	mov    edx,0x2f5
   140008122:	lea    r8d,[r9+0x5]
   140008126:	lea    rcx,[rip+0x636c3]        # 0x14006b7f0
   14000812d:	call   0x140003150
   140008132:	xor    r9d,r9d
   140008135:	lea    edx,[r9+0x4]
   140008139:	mov    r8d,0x7d0
   14000813f:	mov    rcx,QWORD PTR [rbx-0x40]
   140008143:	call   QWORD PTR [rip+0x604d7]        # 0x140068620
   140008149:	cmp    QWORD PTR [rsp+0x60],0x10
   14000814f:	jb     0x14000815b
   140008151:	mov    rcx,QWORD PTR [rsp+0x48]
   140008156:	call   0x1400330c0
   14000815b:	mov    rcx,QWORD PTR [rsp+0x100]
   140008163:	xor    rcx,rsp
   140008166:	call   0x140032f00
   14000816b:	add    rsp,0x110
   140008172:	pop    rdi
   140008173:	pop    rsi
   140008174:	pop    rbx
   140008175:	ret    
   140008176:	int3   
   140008177:	int3   
   140008178:	int3   
   140008179:	int3   
   14000817a:	int3   
   14000817b:	int3   
   14000817c:	int3   
   14000817d:	int3   
   14000817e:	int3   
   14000817f:	int3   
   140008180:	mov    QWORD PTR [rsp+0x8],rbx
   140008185:	mov    QWORD PTR [rsp+0x10],rsi
   14000818a:	push   rdi
   14000818b:	sub    rsp,0x30
   14000818f:	lea    rax,[rip+0x637fa]        # 0x14006b990
   140008196:	xor    r9d,r9d
   140008199:	mov    rsi,rcx
   14000819c:	mov    QWORD PTR [rsp+0x28],rax
   1400081a1:	lea    rax,[rip+0x632f8]        # 0x14006b4a0
   1400081a8:	lea    rcx,[rip+0x63641]        # 0x14006b7f0
   1400081af:	lea    r8d,[r9+0x5]
   1400081b3:	mov    edx,0x2fc
   1400081b8:	mov    QWORD PTR [rsp+0x20],rax
   1400081bd:	call   0x140003150
   1400081c2:	lea    rcx,[rsi+0x1d0]
   1400081c9:	call   0x140005280
   1400081ce:	lea    rcx,[rsi+0x208]
   1400081d5:	call   0x140005280
   1400081da:	mov    rcx,rsi
   1400081dd:	call   0x140007c80
   1400081e2:	mov    rdx,QWORD PTR [rsi+0x8]
   1400081e6:	lea    rcx,[rsi+0x1d0]
   1400081ed:	xor    r8d,r8d
   1400081f0:	call   0x140004ed0
   1400081f5:	mov    rdx,QWORD PTR [rsi+0x8]
   1400081f9:	lea    rcx,[rsi+0x208]
   140008200:	mov    r8d,0x1
   140008206:	call   0x140004ed0
   14000820b:	mov    rbx,QWORD PTR [rsp+0x40]
   140008210:	mov    rsi,QWORD PTR [rsp+0x48]
   140008215:	xor    eax,eax
   140008217:	add    rsp,0x30
   14000821b:	pop    rdi
   14000821c:	ret    
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	mov    rax,rsp
   140008223:	mov    QWORD PTR [rax+0x10],rdx
   140008227:	push   rbp
   140008228:	push   rsi
   140008229:	push   rdi
   14000822a:	push   r12
   14000822c:	push   r13
   14000822e:	push   r14
   140008230:	push   r15
   140008232:	sub    rsp,0x30
   140008236:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000823f:	mov    QWORD PTR [rax+0x18],rbx
   140008243:	mov    rbx,rdx
   140008246:	mov    r14,rcx
   140008249:	xor    edi,edi
   14000824b:	mov    DWORD PTR [rax+0x8],edi
   14000824e:	mov    QWORD PTR [rdx+0x18],0xf
   140008256:	mov    QWORD PTR [rdx+0x10],rdi
   14000825a:	mov    BYTE PTR [rdx],dil
   14000825d:	mov    QWORD PTR [rdx+0x28],rdi
   140008261:	mov    DWORD PTR [rdx+0x30],edi
   140008264:	mov    DWORD PTR [rax+0x8],0x1
   14000826b:	cmp    QWORD PTR [rcx+0x2d0],rdi
   140008272:	jbe    0x140008374
   140008278:	add    rcx,0x1b0
   14000827f:	call   0x140010a70
   140008284:	mov    r13d,edi
   140008287:	cmp    DWORD PTR [rbx+0x2c],0x4
   14000828b:	je     0x140008374
   140008291:	mov    r12d,edi
   140008294:	movabs rax,0x4924924924924925
   14000829e:	xchg   ax,ax
   1400082a0:	mov    r8,QWORD PTR [r14+0x1b0]
   1400082a7:	mov    rcx,QWORD PTR [r14+0x1b8]
   1400082ae:	sub    rcx,r8
   1400082b1:	imul   rcx
   1400082b4:	sar    rdx,0x4
   1400082b8:	mov    rax,rdx
   1400082bb:	shr    rax,0x3f
   1400082bf:	add    rdx,rax
   1400082c2:	cmp    r13d,edx
   1400082c5:	jae    0x140008374
   1400082cb:	lea    rdi,[r12+r8*1]
   1400082cf:	lea    rcx,[r14+0x2c0]
   1400082d6:	mov    rbp,QWORD PTR [rdi+0x10]
   1400082da:	cmp    QWORD PTR [rdi+0x18],0x10
   1400082df:	jb     0x1400082e6
   1400082e1:	mov    rdx,QWORD PTR [rdi]
   1400082e4:	jmp    0x1400082e9
   1400082e6:	mov    rdx,rdi
   1400082e9:	mov    rsi,QWORD PTR [rcx+0x10]
   1400082ed:	cmp    rsi,rsi
   1400082f0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400082f5:	jb     0x1400082fa
   1400082f7:	mov    rcx,QWORD PTR [rcx]
   1400082fa:	mov    r8,rbp
   1400082fd:	cmp    rsi,rbp
   140008300:	cmovb  r8,rsi
   140008304:	call   0x14003e320
   140008309:	movsxd rcx,eax
   14000830c:	test   eax,eax
   14000830e:	jne    0x140008324
   140008310:	cmp    rsi,rbp
   140008313:	jae    0x14000831a
   140008315:	or     ecx,0xffffffff
   140008318:	jmp    0x140008324
   14000831a:	xor    eax,eax
   14000831c:	cmp    rsi,rbp
   14000831f:	setne  al
   140008322:	mov    ecx,eax
   140008324:	test   ecx,ecx
   140008326:	sete   al
   140008329:	test   al,al
   14000832b:	je     0x140008359
   14000832d:	cmp    DWORD PTR [rdi+0x2c],0x4
   140008331:	jne    0x140008359
   140008333:	or     r9,0xffffffffffffffff
   140008337:	xor    r8d,r8d
   14000833a:	mov    rdx,rdi
   14000833d:	mov    rcx,rbx
   140008340:	call   0x140002c70
   140008345:	mov    r11d,DWORD PTR [rdi+0x28]
   140008349:	mov    DWORD PTR [rbx+0x28],r11d
   14000834d:	mov    eax,DWORD PTR [rdi+0x2c]
   140008350:	mov    DWORD PTR [rbx+0x2c],eax
   140008353:	mov    eax,DWORD PTR [rdi+0x30]
   140008356:	mov    DWORD PTR [rbx+0x30],eax
   140008359:	inc    r13d
   14000835c:	add    r12,0x38
   140008360:	cmp    DWORD PTR [rbx+0x2c],0x4
   140008364:	movabs rax,0x4924924924924925
   14000836e:	jne    0x1400082a0
   140008374:	mov    rax,rbx
   140008377:	mov    rbx,QWORD PTR [rsp+0x80]
   14000837f:	add    rsp,0x30
   140008383:	pop    r15
   140008385:	pop    r14
   140008387:	pop    r13
   140008389:	pop    r12
   14000838b:	pop    rdi
   14000838c:	pop    rsi
   14000838d:	pop    rbp
   14000838e:	ret    
   14000838f:	int3   
   140008390:	mov    rax,rsp
   140008393:	push   rbp
   140008394:	push   rdi
   140008395:	push   r12
   140008397:	push   r13
   140008399:	push   r14
   14000839b:	lea    rbp,[rax-0x158]
   1400083a2:	sub    rsp,0x230
   1400083a9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400083b2:	mov    QWORD PTR [rax+0x10],rbx
   1400083b6:	mov    QWORD PTR [rax+0x18],rsi
   1400083ba:	movaps XMMWORD PTR [rax-0x38],xmm6
   1400083be:	mov    rax,QWORD PTR [rip+0x7cce3]        # 0x1400850a8
   1400083c5:	xor    rax,rsp
   1400083c8:	mov    QWORD PTR [rbp+0x110],rax
   1400083cf:	movzx  r14d,dl
   1400083d3:	mov    rsi,rcx
   1400083d6:	xor    r12d,r12d
   1400083d9:	mov    DWORD PTR [rsp+0x38],r12d
   1400083de:	xor    edx,edx
   1400083e0:	mov    r8d,0x128
   1400083e6:	lea    rcx,[rsp+0x58]
   1400083eb:	call   0x140036dc0
   1400083f0:	xor    r11b,r11b
   1400083f3:	mov    rbx,QWORD PTR [rsi+0x240]
   1400083fa:	mov    rdi,QWORD PTR [rsi+0x248]
   140008401:	cmp    rbx,rdi
   140008404:	je     0x14000842e
   140008406:	cmp    DWORD PTR [rbx+0x8],0x4
   14000840a:	jne    0x140008422
   14000840c:	lea    rcx,[rsp+0x50]
   140008411:	mov    rdx,rbx
   140008414:	mov    r8d,0x130
   14000841a:	call   0x140033260
   14000841f:	mov    r11b,0x1
   140008422:	add    rbx,0x130
   140008429:	test   r11b,r11b
   14000842c:	je     0x140008401
   14000842e:	mov    DWORD PTR [rsp+0x30],r12d
   140008433:	mov    rcx,QWORD PTR [rsi+0x2e8]
   14000843a:	test   rcx,rcx
   14000843d:	je     0x140008449
   14000843f:	lea    rdx,[rsp+0x30]
   140008444:	call   0x14001f000
   140008449:	lea    r13,[rip+0x63050]        # 0x14006b4a0
   140008450:	cmp    QWORD PTR [rsi+0x2d0],r12
   140008457:	jbe    0x14000871d
   14000845d:	mov    rcx,QWORD PTR [rsi+0x2e8]
   140008464:	test   rcx,rcx
   140008467:	je     0x14000871d
   14000846d:	xorpd  xmm6,xmm6
   140008471:	movsd  QWORD PTR [rsp+0x38],xmm6
   140008477:	lea    r8,[rsp+0x38]
   14000847c:	mov    edx,0x663
   140008481:	call   0x14001e970
   140008486:	ucomisd xmm6,QWORD PTR [rsp+0x38]
   14000848c:	jp     0x140008494
   14000848e:	je     0x14000871d
   140008494:	test   r14b,r14b
   140008497:	jne    0x140008563
   14000849d:	lea    rdi,[rsi+0x2c0]
   1400084a4:	cmp    QWORD PTR [rdi+0x18],0x10
   1400084a9:	jb     0x1400084ae
   1400084ab:	mov    rdi,QWORD PTR [rdi]
   1400084ae:	lea    rax,[rbp+0x88]
   1400084b5:	mov    QWORD PTR [rbp+0x80],rax
   1400084bc:	test   rdi,rdi
   1400084bf:	jne    0x1400084cc
   1400084c1:	xor    edx,edx
   1400084c3:	mov    QWORD PTR [rbp+0x80],rdx
   1400084ca:	jmp    0x140008542
   1400084cc:	mov    rcx,rdi
   1400084cf:	call   QWORD PTR [rip+0x5ff0b]        # 0x1400683e0
   1400084d5:	lea    ebx,[rax+0x1]
   1400084d8:	lea    r8,[rbp+0x88]
   1400084df:	mov    edx,ebx
   1400084e1:	lea    rcx,[rbp+0x80]
   1400084e8:	call   0x140002f80
   1400084ed:	movsxd rdx,ebx
   1400084f0:	mov    r9,rdx
   1400084f3:	mov    r8,rdi
   1400084f6:	mov    rcx,QWORD PTR [rbp+0x80]
   1400084fd:	call   0x140033ccc
   140008502:	test   eax,eax
   140008504:	je     0x14000853b
   140008506:	cmp    eax,0xc
   140008509:	je     0x140008530
   14000850b:	cmp    eax,0x16
   14000850e:	je     0x140008525
   140008510:	cmp    eax,0x22
   140008513:	je     0x140008525
   140008515:	cmp    eax,0x50
   140008518:	je     0x14000853b
   14000851a:	mov    ecx,0x80004005
   14000851f:	call   0x1400025f0
   140008524:	int3   
   140008525:	mov    ecx,0x80070057
   14000852a:	call   0x1400025f0
   14000852f:	int3   
   140008530:	mov    ecx,0x8007000e
   140008535:	call   0x1400025f0
   14000853a:	int3   
   14000853b:	mov    rdx,QWORD PTR [rbp+0x80]
   140008542:	mov    r12d,0x1
   140008548:	mov    DWORD PTR [rsp+0x38],r12d
   14000854d:	lea    rcx,[rsi+0x208]
   140008554:	call   0x140005670
   140008559:	test   eax,eax
   14000855b:	je     0x140008563
   14000855d:	movzx  ebx,r12b
   140008561:	jmp    0x140008565
   140008563:	xor    bl,bl
   140008565:	test   r12b,0x1
   140008569:	je     0x140008583
   14000856b:	lea    rax,[rbp+0x88]
   140008572:	mov    rcx,QWORD PTR [rbp+0x80]
   140008579:	cmp    rcx,rax
   14000857c:	je     0x140008583
   14000857e:	call   0x140033594
   140008583:	test   bl,bl
   140008585:	je     0x140008706
   14000858b:	inc    DWORD PTR [rsi+0x2b8]
   140008591:	xor    bl,bl
   140008593:	mov    rcx,QWORD PTR [rsi+0x2a8]
   14000859a:	test   rcx,rcx
   14000859d:	je     0x1400085b5
   14000859f:	cmp    BYTE PTR [rcx+0x38],bl
   1400085a2:	jne    0x1400085cc
   1400085a4:	test   rcx,rcx
   1400085a7:	je     0x1400085b5
   1400085a9:	mov    rdx,QWORD PTR [rsi+0x2b0]
   1400085b0:	call   0x14000d920
   1400085b5:	xor    r9d,r9d
   1400085b8:	lea    edx,[r9+0x5]
   1400085bc:	mov    r8d,0x1388
   1400085c2:	mov    rcx,QWORD PTR [rsi+0x8]
   1400085c6:	call   QWORD PTR [rip+0x60054]        # 0x140068620
   1400085cc:	mov    rcx,QWORD PTR [rsi+0x2a8]
   1400085d3:	test   rcx,rcx
   1400085d6:	je     0x1400085e8
   1400085d8:	cmp    BYTE PTR [rcx+0x38],0x0
   1400085dc:	je     0x1400085e8
   1400085de:	call   0x14000e450
   1400085e3:	test   al,al
   1400085e5:	sete   bl
   1400085e8:	lea    rcx,[rip+0x62f61]        # 0x14006b550
   1400085ef:	lea    rax,[rip+0x62f5e]        # 0x14006b554
   1400085f6:	test   bl,bl
   1400085f8:	cmovne rax,rcx
   1400085fc:	mov    QWORD PTR [rsp+0x28],rax
   140008601:	lea    rax,[rip+0x633c0]        # 0x14006b9c8
   140008608:	mov    QWORD PTR [rsp+0x20],rax
   14000860d:	xor    r9d,r9d
   140008610:	mov    edx,0x365
   140008615:	lea    r8d,[r9+0x5]
   140008619:	lea    rcx,[rip+0x631d0]        # 0x14006b7f0
   140008620:	call   0x140003150
   140008625:	mov    edi,DWORD PTR [rbp+0x68]
   140008628:	mov    eax,edi
   14000862a:	and    eax,DWORD PTR [rsp+0x30]
   14000862e:	jne    0x140008677
   140008630:	test   bl,bl
   140008632:	je     0x140008677
   140008634:	lea    rax,[rip+0x633a5]        # 0x14006b9e0
   14000863b:	mov    QWORD PTR [rsp+0x28],rax
   140008640:	mov    QWORD PTR [rsp+0x20],r13
   140008645:	xor    r9d,r9d
   140008648:	mov    edx,0x36a
   14000864d:	lea    r8d,[r9+0x5]
   140008651:	lea    rcx,[rip+0x63198]        # 0x14006b7f0
   140008658:	call   0x140003150
   14000865d:	mov    rcx,QWORD PTR [rsi+0x2e8]
   140008664:	test   rcx,rcx
   140008667:	je     0x14000873b
   14000866d:	xor    r8d,r8d
   140008670:	mov    edx,edi
   140008672:	jmp    0x140008736
   140008677:	test   eax,eax
   140008679:	je     0x1400086bd
   14000867b:	test   bl,bl
   14000867d:	jne    0x1400086bd
   14000867f:	lea    rax,[rip+0x63372]        # 0x14006b9f8
   140008686:	mov    QWORD PTR [rsp+0x28],rax
   14000868b:	mov    QWORD PTR [rsp+0x20],r13
   140008690:	xor    r9d,r9d
   140008693:	mov    edx,0x371
   140008698:	lea    r8d,[r9+0x5]
   14000869c:	lea    rcx,[rip+0x6314d]        # 0x14006b7f0
   1400086a3:	call   0x140003150
   1400086a8:	mov    rcx,QWORD PTR [rsi+0x2e8]
   1400086af:	test   rcx,rcx
   1400086b2:	je     0x14000873b
   1400086b8:	mov    r8d,edi
   1400086bb:	jmp    0x140008734
   1400086bd:	mov    eax,DWORD PTR [rsi+0x2b8]
   1400086c3:	cmp    eax,0x5
   1400086c6:	jae    0x14000873b
   1400086c8:	cmp    eax,0x1
   1400086cb:	jne    0x140008786
   1400086d1:	lea    rax,[rip+0x63338]        # 0x14006ba10
   1400086d8:	mov    QWORD PTR [rsp+0x28],rax
   1400086dd:	lea    r13,[rip+0x62dbc]        # 0x14006b4a0
   1400086e4:	mov    QWORD PTR [rsp+0x20],r13
   1400086e9:	xor    r9d,r9d
   1400086ec:	mov    edx,0x379
   1400086f1:	lea    r8d,[r9+0x5]
   1400086f5:	lea    rcx,[rip+0x630f4]        # 0x14006b7f0
   1400086fc:	call   0x140003150
   140008701:	jmp    0x140008786
   140008706:	mov    r8d,DWORD PTR [rbp+0x68]
   14000870a:	test   DWORD PTR [rsp+0x30],r8d
   14000870f:	je     0x14000873b
   140008711:	mov    rcx,QWORD PTR [rsi+0x2e8]
   140008718:	test   rcx,rcx
   14000871b:	jmp    0x140008732
   14000871d:	mov    rcx,QWORD PTR [rsi+0x2e8]
   140008724:	test   rcx,rcx
   140008727:	je     0x14000873b
   140008729:	mov    r8d,DWORD PTR [rbp+0x68]
   14000872d:	test   DWORD PTR [rsp+0x30],r8d
   140008732:	je     0x14000873b
   140008734:	xor    edx,edx
   140008736:	call   0x14001f450
   14000873b:	cmp    DWORD PTR [rsi+0x2b8],0x5
   140008742:	jb     0x14000876d
   140008744:	lea    rax,[rip+0x632e5]        # 0x14006ba30
   14000874b:	mov    QWORD PTR [rsp+0x28],rax
   140008750:	mov    QWORD PTR [rsp+0x20],r13
   140008755:	xor    r9d,r9d
   140008758:	mov    edx,0x393
   14000875d:	lea    r8d,[r9+0x5]
   140008761:	lea    rcx,[rip+0x63088]        # 0x14006b7f0
   140008768:	call   0x140003150
   14000876d:	mov    DWORD PTR [rsi+0x2b8],0x0
   140008777:	mov    edx,0x3
   14000877c:	mov    rcx,QWORD PTR [rsi+0x8]
   140008780:	call   QWORD PTR [rip+0x5feaa]        # 0x140068630
   140008786:	mov    rcx,QWORD PTR [rbp+0x110]
   14000878d:	xor    rcx,rsp
   140008790:	call   0x140032f00
   140008795:	lea    r11,[rsp+0x230]
   14000879d:	mov    rbx,QWORD PTR [r11+0x38]
   1400087a1:	mov    rsi,QWORD PTR [r11+0x40]
   1400087a5:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400087aa:	mov    rsp,r11
   1400087ad:	pop    r14
   1400087af:	pop    r13
   1400087b1:	pop    r12
   1400087b3:	pop    rdi
   1400087b4:	pop    rbp
   1400087b5:	ret    
   1400087b6:	int3   
   1400087b7:	int3   
   1400087b8:	int3   
   1400087b9:	int3   
   1400087ba:	int3   
   1400087bb:	int3   
   1400087bc:	int3   
   1400087bd:	int3   
   1400087be:	int3   
   1400087bf:	int3   
   1400087c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400087c5:	push   rdi
   1400087c6:	sub    rsp,0x20
   1400087ca:	mov    rax,QWORD PTR [rcx]
   1400087cd:	mov    rbx,rcx
   1400087d0:	cmp    DWORD PTR [rax-0x10],0x0
   1400087d4:	mov    rdi,QWORD PTR [rax-0x18]
   1400087d8:	lea    rdx,[rax-0x18]
   1400087dc:	je     0x140008834
   1400087de:	cmp    DWORD PTR [rdx+0x10],0x0
   1400087e2:	jge    0x14000880d
   1400087e4:	cmp    DWORD PTR [rax-0xc],0x0
   1400087e8:	jge    0x1400087f5
   1400087ea:	mov    ecx,0x80070057
   1400087ef:	call   0x1400025f0
   1400087f4:	int3   
   1400087f5:	mov    DWORD PTR [rax-0x10],0x0
   1400087fc:	mov    rax,QWORD PTR [rcx]
   1400087ff:	mov    BYTE PTR [rax],0x0
   140008802:	mov    rbx,QWORD PTR [rsp+0x30]
   140008807:	add    rsp,0x20
   14000880b:	pop    rdi
   14000880c:	ret    
   14000880d:	or     eax,0xffffffff
   140008810:	lock xadd DWORD PTR [rdx+0x10],eax
   140008815:	dec    eax
   140008817:	test   eax,eax
   140008819:	jg     0x140008824
   14000881b:	mov    rcx,QWORD PTR [rdx]
   14000881e:	mov    rax,QWORD PTR [rcx]
   140008821:	call   QWORD PTR [rax+0x8]
   140008824:	mov    rax,QWORD PTR [rdi]
   140008827:	mov    rcx,rdi
   14000882a:	call   QWORD PTR [rax+0x18]
   14000882d:	add    rax,0x18
   140008831:	mov    QWORD PTR [rbx],rax
   140008834:	mov    rbx,QWORD PTR [rsp+0x30]
   140008839:	add    rsp,0x20
   14000883d:	pop    rdi
   14000883e:	ret    
   14000883f:	int3   
   140008840:	lea    rax,[rip+0x11b9]        # 0x140009a00
   140008847:	ret    
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    QWORD PTR [rsp+0x8],rbx
   140008855:	push   rdi
   140008856:	sub    rsp,0x20
   14000885a:	mov    rbx,rcx
   14000885d:	mov    rcx,QWORD PTR [rcx+0x8]
   140008861:	mov    rdi,rdx
   140008864:	cmp    rdx,rcx
   140008867:	jae    0x1400088ac
   140008869:	mov    rax,QWORD PTR [rbx]
   14000886c:	cmp    rax,rdx
   14000886f:	ja     0x1400088ac
   140008871:	sub    rdi,rax
   140008874:	movabs rax,0x6bca1af286bca1b
   14000887e:	imul   rdi
   140008881:	mov    rdi,rdx
   140008884:	sar    rdi,0x3
   140008888:	mov    rax,rdi
   14000888b:	shr    rax,0x3f
   14000888f:	add    rdi,rax
   140008892:	cmp    rcx,QWORD PTR [rbx+0x10]
   140008896:	jne    0x1400088a0
   140008898:	mov    rcx,rbx
   14000889b:	call   0x140008a80
   1400088a0:	imul   rdi,rdi,0x130
   1400088a7:	add    rdi,QWORD PTR [rbx]
   1400088aa:	jmp    0x1400088ba
   1400088ac:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400088b0:	jne    0x1400088ba
   1400088b2:	mov    rcx,rbx
   1400088b5:	call   0x140008a80
   1400088ba:	mov    rcx,QWORD PTR [rbx+0x8]
   1400088be:	test   rcx,rcx
   1400088c1:	je     0x1400088d1
   1400088c3:	mov    r8d,0x130
   1400088c9:	mov    rdx,rdi
   1400088cc:	call   0x140033260
   1400088d1:	add    QWORD PTR [rbx+0x8],0x130
   1400088d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088de:	add    rsp,0x20
   1400088e2:	pop    rdi
   1400088e3:	ret    
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	int3   
   1400088e7:	int3   
   1400088e8:	int3   
   1400088e9:	int3   
   1400088ea:	int3   
   1400088eb:	int3   
   1400088ec:	int3   
   1400088ed:	int3   
   1400088ee:	int3   
   1400088ef:	int3   
   1400088f0:	jmp    0x140008c90
   1400088f5:	int3   
   1400088f6:	int3   
   1400088f7:	int3   
   1400088f8:	int3   
   1400088f9:	int3   
   1400088fa:	int3   
   1400088fb:	int3   
   1400088fc:	int3   
   1400088fd:	int3   
   1400088fe:	int3   
   1400088ff:	int3   
   140008900:	rex push rdi
   140008902:	sub    rsp,0x30
   140008906:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000890f:	mov    QWORD PTR [rsp+0x50],rbx
   140008914:	mov    rdi,rdx
   140008917:	mov    rbx,rcx
   14000891a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000891e:	cmp    rdx,rcx
   140008921:	jae    0x14000899a
   140008923:	mov    rax,QWORD PTR [rbx]
   140008926:	cmp    rax,rdx
   140008929:	ja     0x14000899a
   14000892b:	sub    rdi,rax
   14000892e:	movabs rax,0x6666666666666667
   140008938:	imul   rdi
   14000893b:	mov    rdi,rdx
   14000893e:	sar    rdi,0x4
   140008942:	mov    rax,rdi
   140008945:	shr    rax,0x3f
   140008949:	add    rdi,rax
   14000894c:	cmp    rcx,QWORD PTR [rbx+0x10]
   140008950:	jne    0x14000895a
   140008952:	mov    rcx,rbx
   140008955:	call   0x140008bd0
   14000895a:	lea    rcx,[rdi+rdi*4]
   14000895e:	mov    rax,QWORD PTR [rbx]
   140008961:	lea    rdx,[rax+rcx*8]
   140008965:	mov    rcx,QWORD PTR [rbx+0x8]
   140008969:	mov    QWORD PTR [rsp+0x40],rcx
   14000896e:	mov    QWORD PTR [rsp+0x48],rcx
   140008973:	test   rcx,rcx
   140008976:	je     0x140008998
   140008978:	mov    QWORD PTR [rcx+0x18],0xf
   140008980:	mov    QWORD PTR [rcx+0x10],0x0
   140008988:	mov    BYTE PTR [rcx],0x0
   14000898b:	or     r9,0xffffffffffffffff
   14000898f:	xor    r8d,r8d
   140008992:	call   0x140002c70
   140008997:	nop
   140008998:	jmp    0x1400089de
   14000899a:	cmp    rcx,QWORD PTR [rbx+0x10]
   14000899e:	jne    0x1400089a8
   1400089a0:	mov    rcx,rbx
   1400089a3:	call   0x140008bd0
   1400089a8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400089ac:	mov    QWORD PTR [rsp+0x40],rcx
   1400089b1:	mov    QWORD PTR [rsp+0x48],rcx
   1400089b6:	test   rcx,rcx
   1400089b9:	je     0x1400089de
   1400089bb:	mov    QWORD PTR [rcx+0x18],0xf
   1400089c3:	mov    QWORD PTR [rcx+0x10],0x0
   1400089cb:	mov    BYTE PTR [rcx],0x0
   1400089ce:	or     r9,0xffffffffffffffff
   1400089d2:	xor    r8d,r8d
   1400089d5:	mov    rdx,rdi
   1400089d8:	call   0x140002c70
   1400089dd:	nop
   1400089de:	add    QWORD PTR [rbx+0x8],0x28
   1400089e3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400089e8:	add    rsp,0x30
   1400089ec:	pop    rdi
   1400089ed:	ret    
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400089f5:	push   rdi
   1400089f6:	sub    rsp,0x20
   1400089fa:	mov    rdx,QWORD PTR [rdx]
   1400089fd:	mov    rbx,rcx
   140008a00:	mov    rdi,QWORD PTR [rbx]
   140008a03:	lea    rcx,[rdx-0x18]
   140008a07:	sub    rdi,0x18
   140008a0b:	cmp    rcx,rdi
   140008a0e:	je     0x140008a6c
   140008a10:	cmp    DWORD PTR [rdi+0x10],0x0
   140008a14:	jl     0x140008a60
   140008a16:	mov    rax,QWORD PTR [rdi]
   140008a19:	cmp    QWORD PTR [rcx],rax
   140008a1c:	jne    0x140008a60
   140008a1e:	mov    QWORD PTR [rsp+0x30],rsi
   140008a23:	call   0x140008e50
   140008a28:	or     ecx,0xffffffff
   140008a2b:	mov    rsi,rax
   140008a2e:	lock xadd DWORD PTR [rdi+0x10],ecx
   140008a33:	dec    ecx
   140008a35:	test   ecx,ecx
   140008a37:	jg     0x140008a46
   140008a39:	mov    rcx,QWORD PTR [rdi]
   140008a3c:	mov    rdx,rdi
   140008a3f:	mov    r8,QWORD PTR [rcx]
   140008a42:	call   QWORD PTR [r8+0x8]
   140008a46:	lea    rax,[rsi+0x18]
   140008a4a:	mov    rsi,QWORD PTR [rsp+0x30]
   140008a4f:	mov    QWORD PTR [rbx],rax
   140008a52:	mov    rax,rbx
   140008a55:	mov    rbx,QWORD PTR [rsp+0x38]
   140008a5a:	add    rsp,0x20
   140008a5e:	pop    rdi
   140008a5f:	ret    
   140008a60:	mov    r8d,DWORD PTR [rdx-0x10]
   140008a64:	mov    rcx,rbx
   140008a67:	call   0x140008d10
   140008a6c:	mov    rax,rbx
   140008a6f:	mov    rbx,QWORD PTR [rsp+0x38]
   140008a74:	add    rsp,0x20
   140008a78:	pop    rdi
   140008a79:	ret    
   140008a7a:	int3   
   140008a7b:	int3   
   140008a7c:	int3   
   140008a7d:	int3   
   140008a7e:	int3   
   140008a7f:	int3   
   140008a80:	sub    rsp,0x28
   140008a84:	mov    r10,QWORD PTR [rcx]
   140008a87:	mov    rdx,QWORD PTR [rcx+0x8]
   140008a8b:	movabs r11,0x6bca1af286bca1b
   140008a95:	sub    rdx,r10
   140008a98:	mov    rax,r11
   140008a9b:	mov    r9,rcx
   140008a9e:	imul   rdx
   140008aa1:	mov    r8,rdx
   140008aa4:	sar    r8,0x3
   140008aa8:	mov    rax,r8
   140008aab:	shr    rax,0x3f
   140008aaf:	add    r8,rax
   140008ab2:	movabs rax,0xd79435e50d7942
   140008abc:	cmp    r8,rax
   140008abf:	jbe    0x140008ace
   140008ac1:	lea    rcx,[rip+0x62b60]        # 0x14006b628
   140008ac8:	call   0x140032d00
   140008acd:	int3   
   140008ace:	mov    rcx,QWORD PTR [rcx+0x10]
   140008ad2:	mov    rax,r11
   140008ad5:	inc    r8
   140008ad8:	sub    rcx,r10
   140008adb:	imul   rcx
   140008ade:	sar    rdx,0x3
   140008ae2:	mov    rax,rdx
   140008ae5:	shr    rax,0x3f
   140008ae9:	add    rdx,rax
   140008aec:	cmp    r8,rdx
   140008aef:	jbe    0x140008b30
   140008af1:	mov    rcx,rdx
   140008af4:	movabs rax,0xd79435e50d7943
   140008afe:	shr    rcx,1
   140008b01:	sub    rax,rcx
   140008b04:	cmp    rax,rdx
   140008b07:	jae    0x140008b1e
   140008b09:	xor    edx,edx
   140008b0b:	mov    rcx,r9
   140008b0e:	cmp    rdx,r8
   140008b11:	cmovb  rdx,r8
   140008b15:	add    rsp,0x28
   140008b19:	jmp    0x140008fe0
   140008b1e:	add    rdx,rcx
   140008b21:	mov    rcx,r9
   140008b24:	cmp    rdx,r8
   140008b27:	cmovb  rdx,r8
   140008b2b:	call   0x140008fe0
   140008b30:	add    rsp,0x28
   140008b34:	ret    
   140008b35:	int3   
   140008b36:	int3   
   140008b37:	int3   
   140008b38:	int3   
   140008b39:	int3   
   140008b3a:	int3   
   140008b3b:	int3   
   140008b3c:	int3   
   140008b3d:	int3   
   140008b3e:	int3   
   140008b3f:	int3   
   140008b40:	mov    QWORD PTR [rsp+0x10],rbx
   140008b45:	mov    QWORD PTR [rsp+0x18],rsi
   140008b4a:	push   rdi
   140008b4b:	sub    rsp,0x20
   140008b4f:	cmp    BYTE PTR [rdx+0x49],0x0
   140008b53:	mov    rbx,rdx
   140008b56:	mov    rsi,rcx
   140008b59:	mov    rdi,rdx
   140008b5c:	jne    0x140008bb5
   140008b5e:	mov    QWORD PTR [rsp+0x30],rbp
   140008b63:	xor    ebp,ebp
   140008b65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008b70:	mov    rdx,QWORD PTR [rdi+0x10]
   140008b74:	mov    rcx,rsi
   140008b77:	call   0x140008b40
   140008b7c:	cmp    QWORD PTR [rbx+0x30],0x10
   140008b81:	mov    rdi,QWORD PTR [rdi]
   140008b84:	jb     0x140008b8f
   140008b86:	mov    rcx,QWORD PTR [rbx+0x18]
   140008b8a:	call   0x1400330c0
   140008b8f:	mov    QWORD PTR [rbx+0x30],0xf
   140008b97:	mov    QWORD PTR [rbx+0x28],rbp
   140008b9b:	mov    rcx,rbx
   140008b9e:	mov    BYTE PTR [rbx+0x18],bpl
   140008ba2:	call   0x1400330c0
   140008ba7:	mov    rbx,rdi
   140008baa:	cmp    BYTE PTR [rdi+0x49],bpl
   140008bae:	je     0x140008b70
   140008bb0:	mov    rbp,QWORD PTR [rsp+0x30]
   140008bb5:	mov    rbx,QWORD PTR [rsp+0x38]
   140008bba:	mov    rsi,QWORD PTR [rsp+0x40]
   140008bbf:	add    rsp,0x20
   140008bc3:	pop    rdi
   140008bc4:	ret    
   140008bc5:	int3   
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	int3   
   140008bc9:	int3   
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	sub    rsp,0x28
   140008bd4:	mov    r10,QWORD PTR [rcx]
   140008bd7:	mov    rdx,QWORD PTR [rcx+0x8]
   140008bdb:	movabs r11,0x6666666666666667
   140008be5:	sub    rdx,r10
   140008be8:	mov    rax,r11
   140008beb:	mov    r9,rcx
   140008bee:	imul   rdx
   140008bf1:	mov    r8,rdx
   140008bf4:	sar    r8,0x4
   140008bf8:	mov    rax,r8
   140008bfb:	shr    rax,0x3f
   140008bff:	add    r8,rax
   140008c02:	movabs rax,0x666666666666665
   140008c0c:	cmp    r8,rax
   140008c0f:	jbe    0x140008c1e
   140008c11:	lea    rcx,[rip+0x62a10]        # 0x14006b628
   140008c18:	call   0x140032d00
   140008c1d:	int3   
   140008c1e:	mov    rcx,QWORD PTR [rcx+0x10]
   140008c22:	mov    rax,r11
   140008c25:	inc    r8
   140008c28:	sub    rcx,r10
   140008c2b:	imul   rcx
   140008c2e:	sar    rdx,0x4
   140008c32:	mov    rax,rdx
   140008c35:	shr    rax,0x3f
   140008c39:	add    rdx,rax
   140008c3c:	cmp    r8,rdx
   140008c3f:	jbe    0x140008c80
   140008c41:	mov    rcx,rdx
   140008c44:	movabs rax,0x666666666666666
   140008c4e:	shr    rcx,1
   140008c51:	sub    rax,rcx
   140008c54:	cmp    rax,rdx
   140008c57:	jae    0x140008c6e
   140008c59:	xor    edx,edx
   140008c5b:	mov    rcx,r9
   140008c5e:	cmp    rdx,r8
   140008c61:	cmovb  rdx,r8
   140008c65:	add    rsp,0x28
   140008c69:	jmp    0x1400092d0
   140008c6e:	add    rdx,rcx
   140008c71:	mov    rcx,r9
   140008c74:	cmp    rdx,r8
   140008c77:	cmovb  rdx,r8
   140008c7b:	call   0x1400092d0
   140008c80:	add    rsp,0x28
   140008c84:	ret    
   140008c85:	int3   
   140008c86:	int3   
   140008c87:	int3   
   140008c88:	int3   
   140008c89:	int3   
   140008c8a:	int3   
   140008c8b:	int3   
   140008c8c:	int3   
   140008c8d:	int3   
   140008c8e:	int3   
   140008c8f:	int3   
   140008c90:	mov    QWORD PTR [rsp+0x10],rbx
   140008c95:	mov    QWORD PTR [rsp+0x18],rbp
   140008c9a:	push   rdi
   140008c9b:	sub    rsp,0x20
   140008c9f:	mov    rbx,QWORD PTR [rcx]
   140008ca2:	xor    ebp,ebp
   140008ca4:	mov    rdi,rcx
   140008ca7:	test   rbx,rbx
   140008caa:	je     0x140008cf4
   140008cac:	mov    QWORD PTR [rsp+0x30],rsi
   140008cb1:	mov    rsi,QWORD PTR [rcx+0x8]
   140008cb5:	cmp    rbx,rsi
   140008cb8:	je     0x140008ce7
   140008cba:	nop    WORD PTR [rax+rax*1+0x0]
   140008cc0:	cmp    QWORD PTR [rbx+0x18],0x10
   140008cc5:	jb     0x140008ccf
   140008cc7:	mov    rcx,QWORD PTR [rbx]
   140008cca:	call   0x1400330c0
   140008ccf:	mov    QWORD PTR [rbx+0x18],0xf
   140008cd7:	mov    QWORD PTR [rbx+0x10],rbp
   140008cdb:	mov    BYTE PTR [rbx],bpl
   140008cde:	add    rbx,0x28
   140008ce2:	cmp    rbx,rsi
   140008ce5:	jne    0x140008cc0
   140008ce7:	mov    rcx,QWORD PTR [rdi]
   140008cea:	call   0x1400330c0
   140008cef:	mov    rsi,QWORD PTR [rsp+0x30]
   140008cf4:	mov    rbx,QWORD PTR [rsp+0x38]
   140008cf9:	mov    QWORD PTR [rdi],rbp
   140008cfc:	mov    QWORD PTR [rdi+0x8],rbp
   140008d00:	mov    QWORD PTR [rdi+0x10],rbp
   140008d04:	mov    rbp,QWORD PTR [rsp+0x40]
   140008d09:	add    rsp,0x20
   140008d0d:	pop    rdi
   140008d0e:	ret    
   140008d0f:	int3   
   140008d10:	mov    QWORD PTR [rsp+0x18],rbx
   140008d15:	mov    QWORD PTR [rsp+0x20],rsi
   140008d1a:	push   rdi
   140008d1b:	sub    rsp,0x20
   140008d1f:	movsxd rdi,r8d
   140008d22:	mov    rsi,rdx
   140008d25:	mov    rbx,rcx
   140008d28:	test   r8d,r8d
   140008d2b:	jne    0x140008d41
   140008d2d:	mov    rbx,QWORD PTR [rsp+0x40]
   140008d32:	mov    rsi,QWORD PTR [rsp+0x48]
   140008d37:	add    rsp,0x20
   140008d3b:	pop    rdi
   140008d3c:	jmp    0x1400087c0
   140008d41:	test   rdx,rdx
   140008d44:	jne    0x140008d51
   140008d46:	mov    ecx,0x80070057
   140008d4b:	call   0x1400025f0
   140008d50:	int3   
   140008d51:	mov    rax,QWORD PTR [rcx]
   140008d54:	mov    QWORD PTR [rsp+0x30],rbp
   140008d59:	mov    rbp,rdx
   140008d5c:	sub    rbp,rax
   140008d5f:	mov    QWORD PTR [rsp+0x38],r12
   140008d64:	mov    r12d,DWORD PTR [rax-0x10]
   140008d68:	test   r8d,r8d
   140008d6b:	jns    0x140008d78
   140008d6d:	mov    ecx,0x80070057
   140008d72:	call   0x1400025f0
   140008d77:	int3   
   140008d78:	mov    ecx,0x1
   140008d7d:	sub    ecx,DWORD PTR [rax-0x8]
   140008d80:	mov    eax,DWORD PTR [rax-0xc]
   140008d83:	sub    eax,edi
   140008d85:	or     ecx,eax
   140008d87:	jge    0x140008d93
   140008d89:	mov    edx,edi
   140008d8b:	mov    rcx,rbx
   140008d8e:	call   0x140008df0
   140008d93:	mov    rcx,QWORD PTR [rbx]
   140008d96:	cmp    rbp,r12
   140008d99:	mov    r9,rdi
   140008d9c:	movsxd rdx,DWORD PTR [rcx-0xc]
   140008da0:	mov    r12,rdi
   140008da3:	ja     0x140008db0
   140008da5:	lea    r8,[rcx+rbp*1]
   140008da9:	call   0x140033d7c
   140008dae:	jmp    0x140008db8
   140008db0:	mov    r8,rsi
   140008db3:	call   0x140033ccc
   140008db8:	mov    rax,QWORD PTR [rbx]
   140008dbb:	cmp    edi,DWORD PTR [rax-0xc]
   140008dbe:	jg     0x140008de5
   140008dc0:	mov    rbp,QWORD PTR [rsp+0x30]
   140008dc5:	mov    rsi,QWORD PTR [rsp+0x48]
   140008dca:	mov    DWORD PTR [rax-0x10],edi
   140008dcd:	mov    rax,QWORD PTR [rbx]
   140008dd0:	mov    rbx,QWORD PTR [rsp+0x40]
   140008dd5:	mov    BYTE PTR [r12+rax*1],0x0
   140008dda:	mov    r12,QWORD PTR [rsp+0x38]
   140008ddf:	add    rsp,0x20
   140008de3:	pop    rdi
   140008de4:	ret    
   140008de5:	mov    ecx,0x80070057
   140008dea:	call   0x1400025f0
   140008def:	int3   
   140008df0:	sub    rsp,0x28
   140008df4:	mov    r8d,edx
   140008df7:	mov    rdx,QWORD PTR [rcx]
   140008dfa:	mov    r9,rcx
   140008dfd:	mov    eax,DWORD PTR [rdx-0x10]
   140008e00:	cmp    eax,r8d
   140008e03:	cmovg  r8d,eax
   140008e07:	cmp    DWORD PTR [rdx-0x8],0x1
   140008e0b:	jle    0x140008e19
   140008e0d:	mov    edx,r8d
   140008e10:	add    rsp,0x28
   140008e14:	jmp    0x140009430
   140008e19:	mov    ecx,DWORD PTR [rdx-0xc]
   140008e1c:	cmp    ecx,r8d
   140008e1f:	jge    0x140008e4b
   140008e21:	cmp    ecx,0x40000000
   140008e27:	jle    0x140008e31
   140008e29:	add    ecx,0x100000
   140008e2f:	jmp    0x140008e3a
   140008e31:	mov    eax,ecx
   140008e33:	cdq    
   140008e34:	sub    eax,edx
   140008e36:	sar    eax,1
   140008e38:	add    ecx,eax
   140008e3a:	cmp    ecx,r8d
   140008e3d:	cmovl  ecx,r8d
   140008e41:	mov    edx,ecx
   140008e43:	mov    rcx,r9
   140008e46:	call   0x1400094e0
   140008e4b:	add    rsp,0x28
   140008e4f:	ret    
   140008e50:	mov    QWORD PTR [rsp+0x8],rbx
   140008e55:	push   rdi
   140008e56:	sub    rsp,0x20
   140008e5a:	mov    rbx,rcx
   140008e5d:	mov    rcx,QWORD PTR [rcx]
   140008e60:	mov    rax,QWORD PTR [rcx]
   140008e63:	call   QWORD PTR [rax+0x20]
   140008e66:	cmp    DWORD PTR [rbx+0x10],0x0
   140008e6a:	mov    rcx,rax
   140008e6d:	jl     0x140008e89
   140008e6f:	cmp    rax,QWORD PTR [rbx]
   140008e72:	jne    0x140008e89
   140008e74:	mov    rdi,rbx
   140008e77:	lock inc DWORD PTR [rbx+0x10]
   140008e7b:	mov    rax,rbx
   140008e7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e83:	add    rsp,0x20
   140008e87:	pop    rdi
   140008e88:	ret    
   140008e89:	mov    rax,QWORD PTR [rax]
   140008e8c:	mov    edx,DWORD PTR [rbx+0x8]
   140008e8f:	mov    r8d,0x1
   140008e95:	call   QWORD PTR [rax]
   140008e97:	mov    rdi,rax
   140008e9a:	test   rax,rax
   140008e9d:	jne    0x140008ea5
   140008e9f:	call   0x140017170
   140008ea4:	int3   
   140008ea5:	mov    eax,DWORD PTR [rbx+0x8]
   140008ea8:	lea    r8,[rbx+0x18]
   140008eac:	lea    rcx,[rdi+0x18]
   140008eb0:	mov    DWORD PTR [rdi+0x8],eax
   140008eb3:	mov    eax,DWORD PTR [rbx+0x8]
   140008eb6:	inc    eax
   140008eb8:	movsxd rdx,eax
   140008ebb:	mov    r9,rdx
   140008ebe:	call   0x140033ccc
   140008ec3:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ec8:	mov    rax,rdi
   140008ecb:	add    rsp,0x20
   140008ecf:	pop    rdi
   140008ed0:	ret    
   140008ed1:	int3   
   140008ed2:	int3   
   140008ed3:	int3   
   140008ed4:	int3   
   140008ed5:	int3   
   140008ed6:	int3   
   140008ed7:	int3   
   140008ed8:	int3   
   140008ed9:	int3   
   140008eda:	int3   
   140008edb:	int3   
   140008edc:	int3   
   140008edd:	int3   
   140008ede:	int3   
   140008edf:	int3   
   140008ee0:	mov    QWORD PTR [rsp+0x10],rbx
   140008ee5:	mov    QWORD PTR [rsp+0x18],rsi
   140008eea:	push   rdi
   140008eeb:	sub    rsp,0x20
   140008eef:	mov    rsi,r8
   140008ef2:	mov    rdi,rdx
   140008ef5:	mov    rbx,rcx
   140008ef8:	test   rdx,rdx
   140008efb:	je     0x140008f57
   140008efd:	mov    r9,QWORD PTR [rcx+0x18]
   140008f01:	cmp    r9,0x10
   140008f05:	jb     0x140008f0c
   140008f07:	mov    rax,QWORD PTR [rcx]
   140008f0a:	jmp    0x140008f0f
   140008f0c:	mov    rax,rcx
   140008f0f:	cmp    rdx,rax
   140008f12:	jb     0x140008f57
   140008f14:	cmp    r9,0x10
   140008f18:	jb     0x140008f1d
   140008f1a:	mov    rcx,QWORD PTR [rcx]
   140008f1d:	add    rcx,QWORD PTR [rbx+0x10]
   140008f21:	cmp    rcx,rdx
   140008f24:	jbe    0x140008f57
   140008f26:	cmp    r9,0x10
   140008f2a:	jb     0x140008f31
   140008f2c:	mov    rax,QWORD PTR [rbx]
   140008f2f:	jmp    0x140008f34
   140008f31:	mov    rax,rbx
   140008f34:	sub    rdi,rax
   140008f37:	mov    r9,r8
   140008f3a:	mov    rdx,rbx
   140008f3d:	mov    r8,rdi
   140008f40:	mov    rcx,rbx
   140008f43:	mov    rbx,QWORD PTR [rsp+0x38]
   140008f48:	mov    rsi,QWORD PTR [rsp+0x40]
   140008f4d:	add    rsp,0x20
   140008f51:	pop    rdi
   140008f52:	jmp    0x140009530
   140008f57:	mov    rcx,QWORD PTR [rbx+0x10]
   140008f5b:	or     rax,0xffffffffffffffff
   140008f5f:	sub    rax,rcx
   140008f62:	cmp    rax,r8
   140008f65:	ja     0x140008f74
   140008f67:	lea    rcx,[rip+0x623e2]        # 0x14006b350
   140008f6e:	call   0x140032d00
   140008f73:	int3   
   140008f74:	test   r8,r8
   140008f77:	je     0x140008fcb
   140008f79:	mov    QWORD PTR [rsp+0x30],rbp
   140008f7e:	lea    rbp,[rcx+r8*1]
   140008f82:	mov    rcx,rbx
   140008f85:	mov    rdx,rbp
   140008f88:	call   0x140002d30
   140008f8d:	test   al,al
   140008f8f:	je     0x140008fc6
   140008f91:	cmp    QWORD PTR [rbx+0x18],0x10
   140008f96:	jb     0x140008f9d
   140008f98:	mov    rcx,QWORD PTR [rbx]
   140008f9b:	jmp    0x140008fa0
   140008f9d:	mov    rcx,rbx
   140008fa0:	add    rcx,QWORD PTR [rbx+0x10]
   140008fa4:	mov    r8,rsi
   140008fa7:	mov    rdx,rdi
   140008faa:	call   0x140033260
   140008faf:	cmp    QWORD PTR [rbx+0x18],0x10
   140008fb4:	mov    QWORD PTR [rbx+0x10],rbp
   140008fb8:	jb     0x140008fbf
   140008fba:	mov    rax,QWORD PTR [rbx]
   140008fbd:	jmp    0x140008fc2
   140008fbf:	mov    rax,rbx
   140008fc2:	mov    BYTE PTR [rax+rbp*1],0x0
   140008fc6:	mov    rbp,QWORD PTR [rsp+0x30]
   140008fcb:	mov    rsi,QWORD PTR [rsp+0x40]
   140008fd0:	mov    rax,rbx
   140008fd3:	mov    rbx,QWORD PTR [rsp+0x38]
   140008fd8:	add    rsp,0x20
   140008fdc:	pop    rdi
   140008fdd:	ret    
   140008fde:	int3   
   140008fdf:	int3   
   140008fe0:	push   r12
   140008fe2:	sub    rsp,0x40
   140008fe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008fef:	mov    QWORD PTR [rsp+0x50],rbx
   140008ff4:	mov    QWORD PTR [rsp+0x60],rsi
   140008ff9:	mov    QWORD PTR [rsp+0x68],rdi
   140008ffe:	mov    rbx,rdx
   140009001:	mov    rsi,rcx
   140009004:	movabs rax,0xd79435e50d7943
   14000900e:	cmp    rdx,rax
   140009011:	jbe    0x140009020
   140009013:	lea    rcx,[rip+0x6260e]        # 0x14006b628
   14000901a:	call   0x140032d00
   14000901f:	int3   
   140009020:	mov    rcx,QWORD PTR [rcx+0x10]
   140009024:	sub    rcx,QWORD PTR [rsi]
   140009027:	movabs r12,0x6bca1af286bca1b
   140009031:	mov    rax,r12
   140009034:	imul   rcx
   140009037:	sar    rdx,0x3
   14000903b:	mov    rax,rdx
   14000903e:	shr    rax,0x3f
   140009042:	add    rdx,rax
   140009045:	cmp    rdx,rbx
   140009048:	jae    0x140009102
   14000904e:	xor    edi,edi
   140009050:	mov    QWORD PTR [rsp+0x58],rdi
   140009055:	test   rbx,rbx
   140009058:	je     0x1400090a8
   14000905a:	mov    rcx,rbx
   14000905d:	imul   rcx,rcx,0x130
   140009064:	call   0x1400331a0
   140009069:	mov    rdi,rax
   14000906c:	mov    QWORD PTR [rsp+0x58],rax
   140009071:	test   rax,rax
   140009074:	jne    0x1400090a8
   140009076:	mov    QWORD PTR [rsp+0x58],rax
   14000907b:	lea    rdx,[rsp+0x58]
   140009080:	lea    rcx,[rsp+0x28]
   140009085:	call   0x140032fd4
   14000908a:	lea    r11,[rip+0x5f7ff]        # 0x140068890
   140009091:	mov    QWORD PTR [rsp+0x28],r11
   140009096:	lea    rdx,[rip+0x7a383]        # 0x140083420
   14000909d:	lea    rcx,[rsp+0x28]
   1400090a2:	call   0x140036358
   1400090a7:	nop
   1400090a8:	mov    r8,rdi
   1400090ab:	mov    rdx,QWORD PTR [rsi+0x8]
   1400090af:	mov    rcx,QWORD PTR [rsi]
   1400090b2:	call   0x14000a120
   1400090b7:	nop
   1400090b8:	mov    rcx,QWORD PTR [rsi]
   1400090bb:	mov    rdx,QWORD PTR [rsi+0x8]
   1400090bf:	sub    rdx,rcx
   1400090c2:	mov    rax,r12
   1400090c5:	imul   rdx
   1400090c8:	mov    r12,rdx
   1400090cb:	sar    r12,0x3
   1400090cf:	mov    rax,r12
   1400090d2:	shr    rax,0x3f
   1400090d6:	add    r12,rax
   1400090d9:	test   rcx,rcx
   1400090dc:	je     0x1400090e3
   1400090de:	call   0x1400330c0
   1400090e3:	imul   rbx,rbx,0x130
   1400090ea:	add    rbx,rdi
   1400090ed:	mov    QWORD PTR [rsi+0x10],rbx
   1400090f1:	imul   r12,r12,0x130
   1400090f8:	add    r12,rdi
   1400090fb:	mov    QWORD PTR [rsi+0x8],r12
   1400090ff:	mov    QWORD PTR [rsi],rdi
   140009102:	mov    rbx,QWORD PTR [rsp+0x50]
   140009107:	mov    rsi,QWORD PTR [rsp+0x60]
   14000910c:	mov    rdi,QWORD PTR [rsp+0x68]
   140009111:	add    rsp,0x40
   140009115:	pop    r12
   140009117:	ret    
   140009118:	int3   
   140009119:	int3   
   14000911a:	int3   
   14000911b:	int3   
   14000911c:	int3   
   14000911d:	int3   
   14000911e:	int3   
   14000911f:	int3   
   140009120:	mov    QWORD PTR [rsp+0x10],rbx
   140009125:	mov    QWORD PTR [rsp+0x20],r9
   14000912a:	mov    QWORD PTR [rsp+0x18],r8
   14000912f:	push   rdi
   140009130:	sub    rsp,0x20
   140009134:	mov    rdi,rdx
   140009137:	mov    rdx,QWORD PTR [rcx+0x8]
   14000913b:	mov    rbx,rcx
   14000913e:	cmp    r8,QWORD PTR [rdx]
   140009141:	jne    0x140009188
   140009143:	cmp    r9,rdx
   140009146:	jne    0x140009188
   140009148:	mov    rdx,QWORD PTR [rdx+0x8]
   14000914c:	call   0x140008b40
   140009151:	mov    r11,QWORD PTR [rbx+0x8]
   140009155:	mov    QWORD PTR [r11+0x8],r11
   140009159:	mov    rax,QWORD PTR [rbx+0x8]
   14000915d:	mov    QWORD PTR [rax],rax
   140009160:	mov    rax,QWORD PTR [rbx+0x8]
   140009164:	mov    QWORD PTR [rax+0x10],rax
   140009168:	mov    rax,QWORD PTR [rbx+0x8]
   14000916c:	mov    QWORD PTR [rbx+0x10],0x0
   140009174:	mov    rcx,QWORD PTR [rax]
   140009177:	mov    rax,rdi
   14000917a:	mov    QWORD PTR [rdi],rcx
   14000917d:	mov    rbx,QWORD PTR [rsp+0x38]
   140009182:	add    rsp,0x20
   140009186:	pop    rdi
   140009187:	ret    
   140009188:	cmp    r8,r9
   14000918b:	je     0x140009209
   14000918d:	nop    DWORD PTR [rax]
   140009190:	cmp    BYTE PTR [r8+0x49],0x0
   140009195:	mov    rax,r8
   140009198:	jne    0x1400091ed
   14000919a:	mov    rdx,QWORD PTR [r8+0x10]
   14000919e:	cmp    BYTE PTR [rdx+0x49],0x0
   1400091a2:	jne    0x1400091c3
   1400091a4:	mov    rcx,QWORD PTR [rdx]
   1400091a7:	cmp    BYTE PTR [rcx+0x49],0x0
   1400091ab:	jne    0x1400091bc
   1400091ad:	nop    DWORD PTR [rax]
   1400091b0:	mov    rdx,rcx
   1400091b3:	mov    rcx,QWORD PTR [rcx]
   1400091b6:	cmp    BYTE PTR [rcx+0x49],0x0
   1400091ba:	je     0x1400091b0
   1400091bc:	mov    QWORD PTR [rsp+0x40],rdx
   1400091c1:	jmp    0x1400091ed
   1400091c3:	mov    rcx,QWORD PTR [r8+0x8]
   1400091c7:	cmp    BYTE PTR [rcx+0x49],0x0
   1400091cb:	jne    0x1400091e8
   1400091cd:	nop    DWORD PTR [rax]
   1400091d0:	cmp    r8,QWORD PTR [rcx+0x10]
   1400091d4:	jne    0x1400091e8
   1400091d6:	mov    QWORD PTR [rsp+0x40],rcx
   1400091db:	mov    r8,rcx
   1400091de:	mov    rcx,QWORD PTR [rcx+0x8]
   1400091e2:	cmp    BYTE PTR [rcx+0x49],0x0
   1400091e6:	je     0x1400091d0
   1400091e8:	mov    QWORD PTR [rsp+0x40],rcx
   1400091ed:	lea    rdx,[rsp+0x30]
   1400091f2:	mov    r8,rax
   1400091f5:	mov    rcx,rbx
   1400091f8:	call   0x140009610
   1400091fd:	mov    r8,QWORD PTR [rsp+0x40]
   140009202:	cmp    r8,QWORD PTR [rsp+0x48]
   140009207:	jne    0x140009190
   140009209:	mov    rbx,QWORD PTR [rsp+0x38]
   14000920e:	mov    QWORD PTR [rdi],r8
   140009211:	mov    rax,rdi
   140009214:	add    rsp,0x20
   140009218:	pop    rdi
   140009219:	ret    
   14000921a:	int3   
   14000921b:	int3   
   14000921c:	int3   
   14000921d:	int3   
   14000921e:	int3   
   14000921f:	int3   
   140009220:	rex push rbx
   140009222:	push   rsi
   140009223:	push   r12
   140009225:	sub    rsp,0x20
   140009229:	mov    r12,QWORD PTR [rcx+0x8]
   14000922d:	mov    rsi,rdx
   140009230:	mov    rbx,QWORD PTR [r12+0x8]
   140009235:	cmp    BYTE PTR [rbx+0x49],0x0
   140009239:	jne    0x1400092c1
   14000923f:	mov    QWORD PTR [rsp+0x40],rbp
   140009244:	mov    rbp,QWORD PTR [rdx+0x10]
   140009248:	mov    QWORD PTR [rsp+0x48],rdi
   14000924d:	mov    QWORD PTR [rsp+0x50],r13
   140009252:	mov    r13,QWORD PTR [rdx+0x18]
   140009256:	lea    rcx,[rbx+0x18]
   14000925a:	cmp    r13,0x10
   14000925e:	jb     0x140009265
   140009260:	mov    rdx,QWORD PTR [rsi]
   140009263:	jmp    0x140009268
   140009265:	mov    rdx,rsi
   140009268:	mov    rdi,QWORD PTR [rcx+0x10]
   14000926c:	cmp    rdi,rdi
   14000926f:	cmp    QWORD PTR [rcx+0x18],0x10
   140009274:	jb     0x140009279
   140009276:	mov    rcx,QWORD PTR [rcx]
   140009279:	mov    r8,rbp
   14000927c:	cmp    rdi,rbp
   14000927f:	cmovb  r8,rdi
   140009283:	call   0x14003e320
   140009288:	movsxd rcx,eax
   14000928b:	test   eax,eax
   14000928d:	jne    0x14000929c
   14000928f:	cmp    rdi,rbp
   140009292:	jb     0x1400092a8
   140009294:	cmp    rdi,rbp
   140009297:	setne  al
   14000929a:	mov    ecx,eax
   14000929c:	test   ecx,ecx
   14000929e:	js     0x1400092a8
   1400092a0:	mov    r12,rbx
   1400092a3:	mov    rbx,QWORD PTR [rbx]
   1400092a6:	jmp    0x1400092ac
   1400092a8:	mov    rbx,QWORD PTR [rbx+0x10]
   1400092ac:	cmp    BYTE PTR [rbx+0x49],0x0
   1400092b0:	je     0x140009256
   1400092b2:	mov    r13,QWORD PTR [rsp+0x50]
   1400092b7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400092bc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400092c1:	mov    rax,r12
   1400092c4:	add    rsp,0x20
   1400092c8:	pop    r12
   1400092ca:	pop    rsi
   1400092cb:	pop    rbx
   1400092cc:	ret    
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	push   r12
   1400092d2:	sub    rsp,0x30
   1400092d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400092df:	mov    QWORD PTR [rsp+0x40],rbx
   1400092e4:	mov    QWORD PTR [rsp+0x50],rsi
   1400092e9:	mov    QWORD PTR [rsp+0x58],rdi
   1400092ee:	mov    rdi,rdx
   1400092f1:	mov    rbx,rcx
   1400092f4:	movabs rax,0x666666666666666
   1400092fe:	cmp    rdx,rax
   140009301:	jbe    0x140009310
   140009303:	lea    rcx,[rip+0x6231e]        # 0x14006b628
   14000930a:	call   0x140032d00
   14000930f:	int3   
   140009310:	mov    rcx,QWORD PTR [rcx+0x10]
   140009314:	sub    rcx,QWORD PTR [rbx]
   140009317:	movabs r12,0x6666666666666667
   140009321:	mov    rax,r12
   140009324:	imul   rcx
   140009327:	sar    rdx,0x4
   14000932b:	mov    rax,rdx
   14000932e:	shr    rax,0x3f
   140009332:	add    rdx,rax
   140009335:	cmp    rdx,rdi
   140009338:	jae    0x1400093ae
   14000933a:	mov    rcx,rdi
   14000933d:	call   0x140009990
   140009342:	mov    rsi,rax
   140009345:	mov    QWORD PTR [rsp+0x48],rax
   14000934a:	mov    r8,rax
   14000934d:	mov    rdx,QWORD PTR [rbx+0x8]
   140009351:	mov    rcx,QWORD PTR [rbx]
   140009354:	call   0x14000a180
   140009359:	nop
   14000935a:	mov    r9,QWORD PTR [rbx+0x8]
   14000935e:	mov    rcx,QWORD PTR [rbx]
   140009361:	mov    r8,r9
   140009364:	sub    r8,rcx
   140009367:	mov    rax,r12
   14000936a:	imul   r8
   14000936d:	mov    r12,rdx
   140009370:	sar    r12,0x4
   140009374:	mov    rax,r12
   140009377:	shr    rax,0x3f
   14000937b:	add    r12,rax
   14000937e:	test   rcx,rcx
   140009381:	je     0x140009393
   140009383:	mov    rdx,r9
   140009386:	call   0x1400093d0
   14000938b:	mov    rcx,QWORD PTR [rbx]
   14000938e:	call   0x1400330c0
   140009393:	lea    rax,[rdi+rdi*4]
   140009397:	lea    rcx,[rsi+rax*8]
   14000939b:	mov    QWORD PTR [rbx+0x10],rcx
   14000939f:	lea    rax,[r12+r12*4]
   1400093a3:	lea    rcx,[rsi+rax*8]
   1400093a7:	mov    QWORD PTR [rbx+0x8],rcx
   1400093ab:	mov    QWORD PTR [rbx],rsi
   1400093ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400093b3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400093b8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400093bd:	add    rsp,0x30
   1400093c1:	pop    r12
   1400093c3:	ret    
   1400093c4:	int3   
   1400093c5:	int3   
   1400093c6:	int3   
   1400093c7:	int3   
   1400093c8:	int3   
   1400093c9:	int3   
   1400093ca:	int3   
   1400093cb:	int3   
   1400093cc:	int3   
   1400093cd:	int3   
   1400093ce:	int3   
   1400093cf:	int3   
   1400093d0:	cmp    rcx,rdx
   1400093d3:	je     0x140009426
   1400093d5:	mov    QWORD PTR [rsp+0x10],rbx
   1400093da:	push   rdi
   1400093db:	sub    rsp,0x20
   1400093df:	mov    QWORD PTR [rsp+0x30],rsi
   1400093e4:	mov    rdi,rdx
   1400093e7:	mov    rbx,rcx
   1400093ea:	xor    esi,esi
   1400093ec:	nop    DWORD PTR [rax+0x0]
   1400093f0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400093f5:	jb     0x1400093ff
   1400093f7:	mov    rcx,QWORD PTR [rbx]
   1400093fa:	call   0x1400330c0
   1400093ff:	mov    QWORD PTR [rbx+0x18],0xf
   140009407:	mov    QWORD PTR [rbx+0x10],rsi
   14000940b:	mov    BYTE PTR [rbx],sil
   14000940e:	add    rbx,0x28
   140009412:	cmp    rbx,rdi
   140009415:	jne    0x1400093f0
   140009417:	mov    rsi,QWORD PTR [rsp+0x30]
   14000941c:	mov    rbx,QWORD PTR [rsp+0x38]
   140009421:	add    rsp,0x20
   140009425:	pop    rdi
   140009426:	repz ret 
   140009428:	int3   
   140009429:	int3   
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	int3   
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	mov    QWORD PTR [rsp+0x8],rbx
   140009435:	mov    QWORD PTR [rsp+0x10],rbp
   14000943a:	mov    QWORD PTR [rsp+0x18],rsi
   14000943f:	mov    QWORD PTR [rsp+0x20],rdi
   140009444:	push   r12
   140009446:	sub    rsp,0x20
   14000944a:	mov    rbx,QWORD PTR [rcx]
   14000944d:	mov    rsi,rcx
   140009450:	mov    edi,edx
   140009452:	mov    rcx,QWORD PTR [rbx-0x18]
   140009456:	mov    ebp,DWORD PTR [rbx-0x10]
   140009459:	mov    rax,QWORD PTR [rcx]
   14000945c:	call   QWORD PTR [rax+0x20]
   14000945f:	mov    r8d,0x1
   140009465:	mov    edx,edi
   140009467:	mov    r9,QWORD PTR [rax]
   14000946a:	mov    rcx,rax
   14000946d:	call   QWORD PTR [r9]
   140009470:	mov    r12,rax
   140009473:	test   rax,rax
   140009476:	jne    0x14000947e
   140009478:	call   0x140017170
   14000947d:	int3   
   14000947e:	cmp    ebp,edi
   140009480:	mov    r8,rbx
   140009483:	cmovl  edi,ebp
   140009486:	inc    edi
   140009488:	movsxd rdx,edi
   14000948b:	lea    rdi,[rax+0x18]
   14000948f:	mov    rcx,rdi
   140009492:	mov    r9,rdx
   140009495:	call   0x140033ccc
   14000949a:	mov    DWORD PTR [r12+0x8],ebp
   14000949f:	or     eax,0xffffffff
   1400094a2:	lock xadd DWORD PTR [rbx-0x8],eax
   1400094a7:	dec    eax
   1400094a9:	test   eax,eax
   1400094ab:	jg     0x1400094bb
   1400094ad:	mov    rcx,QWORD PTR [rbx-0x18]
   1400094b1:	lea    rdx,[rbx-0x18]
   1400094b5:	mov    rax,QWORD PTR [rcx]
   1400094b8:	call   QWORD PTR [rax+0x8]
   1400094bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094c0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400094c5:	mov    QWORD PTR [rsi],rdi
   1400094c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400094cd:	mov    rdi,QWORD PTR [rsp+0x48]
   1400094d2:	add    rsp,0x20
   1400094d6:	pop    r12
   1400094d8:	ret    
   1400094d9:	int3   
   1400094da:	int3   
   1400094db:	int3   
   1400094dc:	int3   
   1400094dd:	int3   
   1400094de:	int3   
   1400094df:	int3   
   1400094e0:	rex push rbx
   1400094e2:	sub    rsp,0x20
   1400094e6:	mov    r8d,edx
   1400094e9:	mov    rdx,QWORD PTR [rcx]
   1400094ec:	mov    rbx,rcx
   1400094ef:	mov    rcx,QWORD PTR [rdx-0x18]
   1400094f3:	sub    rdx,0x18
   1400094f7:	cmp    DWORD PTR [rdx+0xc],r8d
   1400094fb:	jge    0x140009526
   1400094fd:	test   r8d,r8d
   140009500:	jle    0x140009526
   140009502:	mov    rax,QWORD PTR [rcx]
   140009505:	mov    r9d,0x1
   14000950b:	call   QWORD PTR [rax+0x10]
   14000950e:	test   rax,rax
   140009511:	jne    0x140009519
   140009513:	call   0x140017170
   140009518:	int3   
   140009519:	add    rax,0x18
   14000951d:	mov    QWORD PTR [rbx],rax
   140009520:	add    rsp,0x20
   140009524:	pop    rbx
   140009525:	ret    
   140009526:	call   0x140017170
   14000952b:	int3   
   14000952c:	int3   
   14000952d:	int3   
   14000952e:	int3   
   14000952f:	int3   
   140009530:	mov    QWORD PTR [rsp+0x10],rbx
   140009535:	mov    QWORD PTR [rsp+0x18],rsi
   14000953a:	mov    QWORD PTR [rsp+0x20],rdi
   14000953f:	push   r12
   140009541:	sub    rsp,0x20
   140009545:	mov    rax,QWORD PTR [rdx+0x10]
   140009549:	mov    rsi,r9
   14000954c:	mov    r12,r8
   14000954f:	mov    rdi,rdx
   140009552:	mov    rbx,rcx
   140009555:	cmp    rax,r8
   140009558:	jae    0x140009567
   14000955a:	lea    rcx,[rip+0x61dd7]        # 0x14006b338
   140009561:	call   0x140032d5c
   140009566:	int3   
   140009567:	mov    rcx,QWORD PTR [rcx+0x10]
   14000956b:	sub    rax,r8
   14000956e:	cmp    rax,r9
   140009571:	cmovb  rsi,rax
   140009575:	or     rax,0xffffffffffffffff
   140009579:	sub    rax,rcx
   14000957c:	cmp    rax,rsi
   14000957f:	ja     0x14000958e
   140009581:	lea    rcx,[rip+0x61dc8]        # 0x14006b350
   140009588:	call   0x140032d00
   14000958d:	int3   
   14000958e:	test   rsi,rsi
   140009591:	je     0x1400095f0
   140009593:	mov    QWORD PTR [rsp+0x30],rbp
   140009598:	lea    rbp,[rcx+rsi*1]
   14000959c:	mov    rcx,rbx
   14000959f:	mov    rdx,rbp
   1400095a2:	call   0x140002d30
   1400095a7:	test   al,al
   1400095a9:	je     0x1400095eb
   1400095ab:	cmp    QWORD PTR [rdi+0x18],0x10
   1400095b0:	jb     0x1400095b5
   1400095b2:	mov    rdi,QWORD PTR [rdi]
   1400095b5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400095ba:	jb     0x1400095c1
   1400095bc:	mov    rcx,QWORD PTR [rbx]
   1400095bf:	jmp    0x1400095c4
   1400095c1:	mov    rcx,rbx
   1400095c4:	add    rcx,QWORD PTR [rbx+0x10]
   1400095c8:	lea    rdx,[rdi+r12*1]
   1400095cc:	mov    r8,rsi
   1400095cf:	call   0x140033260
   1400095d4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400095d9:	mov    QWORD PTR [rbx+0x10],rbp
   1400095dd:	jb     0x1400095e4
   1400095df:	mov    rax,QWORD PTR [rbx]
   1400095e2:	jmp    0x1400095e7
   1400095e4:	mov    rax,rbx
   1400095e7:	mov    BYTE PTR [rax+rbp*1],0x0
   1400095eb:	mov    rbp,QWORD PTR [rsp+0x30]
   1400095f0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400095f5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400095fa:	mov    rax,rbx
   1400095fd:	mov    rbx,QWORD PTR [rsp+0x38]
   140009602:	add    rsp,0x20
   140009606:	pop    r12
   140009608:	ret    
   140009609:	int3   
   14000960a:	int3   
   14000960b:	int3   
   14000960c:	int3   
   14000960d:	int3   
   14000960e:	int3   
   14000960f:	int3   
   140009610:	mov    QWORD PTR [rsp+0x18],r8
   140009615:	push   rsi
   140009616:	push   r12
   140009618:	sub    rsp,0x28
   14000961c:	cmp    BYTE PTR [r8+0x49],0x0
   140009621:	mov    r12,rdx
   140009624:	mov    rsi,rcx
   140009627:	je     0x140009636
   140009629:	lea    rcx,[rip+0x61c80]        # 0x14006b2b0
   140009630:	call   0x140032d5c
   140009635:	int3   
   140009636:	mov    rdx,QWORD PTR [r8+0x10]
   14000963a:	lea    r9,[r8+0x10]
   14000963e:	mov    QWORD PTR [rsp+0x48],rbp
   140009643:	cmp    BYTE PTR [rdx+0x49],0x0
   140009647:	mov    rbp,r8
   14000964a:	jne    0x14000966e
   14000964c:	mov    rax,QWORD PTR [rdx]
   14000964f:	cmp    BYTE PTR [rax+0x49],0x0
   140009653:	jne    0x140009690
   140009655:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009660:	mov    rdx,rax
   140009663:	mov    rax,QWORD PTR [rax]
   140009666:	cmp    BYTE PTR [rax+0x49],0x0
   14000966a:	je     0x140009660
   14000966c:	jmp    0x140009690
   14000966e:	mov    rdx,QWORD PTR [r8+0x8]
   140009672:	cmp    BYTE PTR [rdx+0x49],0x0
   140009676:	jne    0x140009690
   140009678:	cmp    r8,QWORD PTR [rdx+0x10]
   14000967c:	jne    0x140009690
   14000967e:	mov    QWORD PTR [rsp+0x50],rdx
   140009683:	mov    r8,rdx
   140009686:	mov    rdx,QWORD PTR [rdx+0x8]
   14000968a:	cmp    BYTE PTR [rdx+0x49],0x0
   14000968e:	je     0x140009678
   140009690:	mov    QWORD PTR [rsp+0x50],rdx
   140009695:	mov    rcx,QWORD PTR [rbp+0x0]
   140009699:	mov    QWORD PTR [rsp+0x40],rbx
   14000969e:	cmp    BYTE PTR [rcx+0x49],0x0
   1400096a2:	mov    QWORD PTR [rsp+0x20],rdi
   1400096a7:	je     0x1400096ae
   1400096a9:	mov    rdi,QWORD PTR [r9]
   1400096ac:	jmp    0x1400096c9
   1400096ae:	mov    rax,QWORD PTR [r9]
   1400096b1:	cmp    BYTE PTR [rax+0x49],0x0
   1400096b5:	je     0x1400096bc
   1400096b7:	mov    rdi,rcx
   1400096ba:	jmp    0x1400096c9
   1400096bc:	mov    rdi,QWORD PTR [rdx+0x10]
   1400096c0:	cmp    rdx,rbp
   1400096c3:	jne    0x140009773
   1400096c9:	cmp    BYTE PTR [rdi+0x49],0x0
   1400096cd:	mov    rbx,QWORD PTR [rbp+0x8]
   1400096d1:	jne    0x1400096d7
   1400096d3:	mov    QWORD PTR [rdi+0x8],rbx
   1400096d7:	mov    rax,QWORD PTR [rsi+0x8]
   1400096db:	cmp    QWORD PTR [rax+0x8],rbp
   1400096df:	jne    0x1400096e7
   1400096e1:	mov    QWORD PTR [rax+0x8],rdi
   1400096e5:	jmp    0x1400096f5
   1400096e7:	cmp    QWORD PTR [rbx],rbp
   1400096ea:	jne    0x1400096f1
   1400096ec:	mov    QWORD PTR [rbx],rdi
   1400096ef:	jmp    0x1400096f5
   1400096f1:	mov    QWORD PTR [rbx+0x10],rdi
   1400096f5:	mov    rdx,QWORD PTR [rsi+0x8]
   1400096f9:	cmp    QWORD PTR [rdx],rbp
   1400096fc:	jne    0x14000972f
   1400096fe:	cmp    BYTE PTR [rdi+0x49],0x0
   140009702:	je     0x140009709
   140009704:	mov    rcx,rbx
   140009707:	jmp    0x14000972c
   140009709:	mov    rax,QWORD PTR [rdi]
   14000970c:	mov    rcx,rdi
   14000970f:	cmp    BYTE PTR [rax+0x49],0x0
   140009713:	jne    0x14000972c
   140009715:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009720:	mov    rcx,rax
   140009723:	mov    rax,QWORD PTR [rax]
   140009726:	cmp    BYTE PTR [rax+0x49],0x0
   14000972a:	je     0x140009720
   14000972c:	mov    QWORD PTR [rdx],rcx
   14000972f:	mov    rdx,QWORD PTR [rsi+0x8]
   140009733:	cmp    QWORD PTR [rdx+0x10],rbp
   140009737:	jne    0x1400097df
   14000973d:	cmp    BYTE PTR [rdi+0x49],0x0
   140009741:	je     0x14000974f
   140009743:	mov    rcx,rbx
   140009746:	mov    QWORD PTR [rdx+0x10],rbx
   14000974a:	jmp    0x1400097df
   14000974f:	mov    rax,QWORD PTR [rdi+0x10]
   140009753:	mov    rcx,rdi
   140009756:	cmp    BYTE PTR [rax+0x49],0x0
   14000975a:	jne    0x14000976d
   14000975c:	nop    DWORD PTR [rax+0x0]
   140009760:	mov    rcx,rax
   140009763:	mov    rax,QWORD PTR [rax+0x10]
   140009767:	cmp    BYTE PTR [rax+0x49],0x0
   14000976b:	je     0x140009760
   14000976d:	mov    QWORD PTR [rdx+0x10],rcx
   140009771:	jmp    0x1400097df
   140009773:	mov    QWORD PTR [rcx+0x8],rdx
   140009777:	mov    rax,QWORD PTR [rbp+0x0]
   14000977b:	mov    QWORD PTR [rdx],rax
   14000977e:	cmp    rdx,QWORD PTR [r9]
   140009781:	jne    0x140009788
   140009783:	mov    rbx,rdx
   140009786:	jmp    0x1400097a7
   140009788:	cmp    BYTE PTR [rdi+0x49],0x0
   14000978c:	mov    rbx,QWORD PTR [rdx+0x8]
   140009790:	jne    0x140009796
   140009792:	mov    QWORD PTR [rdi+0x8],rbx
   140009796:	mov    QWORD PTR [rbx],rdi
   140009799:	mov    rax,QWORD PTR [r9]
   14000979c:	mov    QWORD PTR [rdx+0x10],rax
   1400097a0:	mov    rax,QWORD PTR [r9]
   1400097a3:	mov    QWORD PTR [rax+0x8],rdx
   1400097a7:	mov    rax,QWORD PTR [rsi+0x8]
   1400097ab:	cmp    QWORD PTR [rax+0x8],rbp
   1400097af:	jne    0x1400097b7
   1400097b1:	mov    QWORD PTR [rax+0x8],rdx
   1400097b5:	jmp    0x1400097c9
   1400097b7:	mov    rax,QWORD PTR [rbp+0x8]
   1400097bb:	cmp    QWORD PTR [rax],rbp
   1400097be:	jne    0x1400097c5
   1400097c0:	mov    QWORD PTR [rax],rdx
   1400097c3:	jmp    0x1400097c9
   1400097c5:	mov    QWORD PTR [rax+0x10],rdx
   1400097c9:	mov    rax,QWORD PTR [rbp+0x8]
   1400097cd:	mov    QWORD PTR [rdx+0x8],rax
   1400097d1:	movzx  eax,BYTE PTR [rbp+0x48]
   1400097d5:	movzx  ecx,BYTE PTR [rdx+0x48]
   1400097d9:	mov    BYTE PTR [rdx+0x48],al
   1400097dc:	mov    BYTE PTR [rbp+0x48],cl
   1400097df:	cmp    BYTE PTR [rbp+0x48],0x1
   1400097e3:	jne    0x14000992f
   1400097e9:	mov    rax,QWORD PTR [rsi+0x8]
   1400097ed:	cmp    rdi,QWORD PTR [rax+0x8]
   1400097f1:	je     0x14000992b
   1400097f7:	nop    WORD PTR [rax+rax*1+0x0]
   140009800:	cmp    BYTE PTR [rdi+0x48],0x1
   140009804:	jne    0x14000992b
   14000980a:	mov    rcx,QWORD PTR [rbx]
   14000980d:	cmp    rdi,rcx
   140009810:	jne    0x14000989b
   140009816:	mov    rcx,QWORD PTR [rbx+0x10]
   14000981a:	cmp    BYTE PTR [rcx+0x48],0x0
   14000981e:	jne    0x140009837
   140009820:	mov    BYTE PTR [rcx+0x48],0x1
   140009824:	mov    rdx,rbx
   140009827:	mov    rcx,rsi
   14000982a:	mov    BYTE PTR [rbx+0x48],0x0
   14000982e:	call   0x140005d40
   140009833:	mov    rcx,QWORD PTR [rbx+0x10]
   140009837:	cmp    BYTE PTR [rcx+0x49],0x0
   14000983b:	jne    0x1400098d4
   140009841:	mov    rax,QWORD PTR [rcx]
   140009844:	cmp    BYTE PTR [rax+0x48],0x1
   140009848:	jne    0x140009854
   14000984a:	mov    rax,QWORD PTR [rcx+0x10]
   14000984e:	cmp    BYTE PTR [rax+0x48],0x1
   140009852:	je     0x1400098d0
   140009854:	mov    rax,QWORD PTR [rcx+0x10]
   140009858:	cmp    BYTE PTR [rax+0x48],0x1
   14000985c:	jne    0x140009878
   14000985e:	mov    rax,QWORD PTR [rcx]
   140009861:	mov    rdx,rcx
   140009864:	mov    BYTE PTR [rax+0x48],0x1
   140009868:	mov    BYTE PTR [rcx+0x48],0x0
   14000986c:	mov    rcx,rsi
   14000986f:	call   0x140005da0
   140009874:	mov    rcx,QWORD PTR [rbx+0x10]
   140009878:	movzx  eax,BYTE PTR [rbx+0x48]
   14000987c:	mov    rdx,rbx
   14000987f:	mov    BYTE PTR [rcx+0x48],al
   140009882:	mov    BYTE PTR [rbx+0x48],0x1
   140009886:	mov    rax,QWORD PTR [rcx+0x10]
   14000988a:	mov    rcx,rsi
   14000988d:	mov    BYTE PTR [rax+0x48],0x1
   140009891:	call   0x140005d40
   140009896:	jmp    0x14000992b
   14000989b:	cmp    BYTE PTR [rcx+0x48],0x0
   14000989f:	jne    0x1400098b7
   1400098a1:	mov    BYTE PTR [rcx+0x48],0x1
   1400098a5:	mov    rdx,rbx
   1400098a8:	mov    rcx,rsi
   1400098ab:	mov    BYTE PTR [rbx+0x48],0x0
   1400098af:	call   0x140005da0
   1400098b4:	mov    rcx,QWORD PTR [rbx]
   1400098b7:	cmp    BYTE PTR [rcx+0x49],0x0
   1400098bb:	jne    0x1400098d4
   1400098bd:	mov    rax,QWORD PTR [rcx+0x10]
   1400098c1:	cmp    BYTE PTR [rax+0x48],0x1
   1400098c5:	jne    0x1400098eb
   1400098c7:	mov    rax,QWORD PTR [rcx]
   1400098ca:	cmp    BYTE PTR [rax+0x48],0x1
   1400098ce:	jne    0x1400098eb
   1400098d0:	mov    BYTE PTR [rcx+0x48],0x0
   1400098d4:	mov    rax,QWORD PTR [rsi+0x8]
   1400098d8:	mov    rdi,rbx
   1400098db:	mov    rbx,QWORD PTR [rbx+0x8]
   1400098df:	cmp    rdi,QWORD PTR [rax+0x8]
   1400098e3:	jne    0x140009800
   1400098e9:	jmp    0x14000992b
   1400098eb:	mov    rax,QWORD PTR [rcx]
   1400098ee:	cmp    BYTE PTR [rax+0x48],0x1
   1400098f2:	jne    0x14000990e
   1400098f4:	mov    rax,QWORD PTR [rcx+0x10]
   1400098f8:	mov    rdx,rcx
   1400098fb:	mov    BYTE PTR [rax+0x48],0x1
   1400098ff:	mov    BYTE PTR [rcx+0x48],0x0
   140009903:	mov    rcx,rsi
   140009906:	call   0x140005d40
   14000990b:	mov    rcx,QWORD PTR [rbx]
   14000990e:	movzx  eax,BYTE PTR [rbx+0x48]
   140009912:	mov    rdx,rbx
   140009915:	mov    BYTE PTR [rcx+0x48],al
   140009918:	mov    BYTE PTR [rbx+0x48],0x1
   14000991c:	mov    rax,QWORD PTR [rcx]
   14000991f:	mov    rcx,rsi
   140009922:	mov    BYTE PTR [rax+0x48],0x1
   140009926:	call   0x140005da0
   14000992b:	mov    BYTE PTR [rdi+0x48],0x1
   14000992f:	cmp    QWORD PTR [rbp+0x30],0x10
   140009934:	mov    rdi,QWORD PTR [rsp+0x20]
   140009939:	mov    rbx,QWORD PTR [rsp+0x40]
   14000993e:	jb     0x140009949
   140009940:	mov    rcx,QWORD PTR [rbp+0x18]
   140009944:	call   0x1400330c0
   140009949:	mov    QWORD PTR [rbp+0x30],0xf
   140009951:	mov    QWORD PTR [rbp+0x28],0x0
   140009959:	mov    rcx,rbp
   14000995c:	mov    BYTE PTR [rbp+0x18],0x0
   140009960:	call   0x1400330c0
   140009965:	mov    rax,QWORD PTR [rsi+0x10]
   140009969:	mov    rbp,QWORD PTR [rsp+0x48]
   14000996e:	test   rax,rax
   140009971:	je     0x14000997a
   140009973:	dec    rax
   140009976:	mov    QWORD PTR [rsi+0x10],rax
   14000997a:	mov    rax,QWORD PTR [rsp+0x50]
   14000997f:	mov    QWORD PTR [r12],rax
   140009983:	mov    rax,r12
   140009986:	add    rsp,0x28
   14000998a:	pop    r12
   14000998c:	pop    rsi
   14000998d:	ret    
   14000998e:	int3   
   14000998f:	int3   
   140009990:	sub    rsp,0x48
   140009994:	xor    eax,eax
   140009996:	test   rcx,rcx
   140009999:	je     0x1400099f2
   14000999b:	movabs rax,0x666666666666666
   1400099a5:	cmp    rcx,rax
   1400099a8:	ja     0x1400099bc
   1400099aa:	lea    rcx,[rcx+rcx*4]
   1400099ae:	shl    rcx,0x3
   1400099b2:	call   0x1400331a0
   1400099b7:	test   rax,rax
   1400099ba:	jne    0x1400099f2
   1400099bc:	lea    rdx,[rsp+0x50]
   1400099c1:	lea    rcx,[rsp+0x20]
   1400099c6:	mov    QWORD PTR [rsp+0x50],0x0
   1400099cf:	call   0x140032fd4
   1400099d4:	lea    r11,[rip+0x5eeb5]        # 0x140068890
   1400099db:	lea    rdx,[rip+0x79a3e]        # 0x140083420
   1400099e2:	lea    rcx,[rsp+0x20]
   1400099e7:	mov    QWORD PTR [rsp+0x20],r11
   1400099ec:	call   0x140036358
   1400099f1:	int3   
   1400099f2:	add    rsp,0x48
   1400099f6:	ret    
   1400099f7:	int3   
   1400099f8:	int3   
   1400099f9:	int3   
   1400099fa:	int3   
   1400099fb:	int3   
   1400099fc:	int3   
   1400099fd:	int3   
   1400099fe:	int3   
   1400099ff:	int3   
   140009a00:	mov    r11,rsp
   140009a03:	mov    QWORD PTR [r11+0x10],rbx
   140009a07:	mov    QWORD PTR [r11+0x18],rbp
   140009a0b:	mov    QWORD PTR [r11+0x20],rsi
   140009a0f:	push   rdi
   140009a10:	push   r12
   140009a12:	push   r13
   140009a14:	sub    rsp,0x80
   140009a1b:	mov    rdi,QWORD PTR [rcx+0x30]
   140009a1f:	mov    DWORD PTR [rsp+0x70],0x38
   140009a27:	mov    DWORD PTR [rsp+0x74],0x1
   140009a2f:	mov    esi,edx
   140009a31:	mov    rdx,QWORD PTR [rcx+0x8]
   140009a35:	xor    r13d,r13d
   140009a38:	lea    rax,[r11-0x58]
   140009a3c:	mov    rbx,rcx
   140009a3f:	mov    DWORD PTR [r11-0x68],r13d
   140009a43:	mov    QWORD PTR [rcx+0x30],rax
   140009a47:	mov    rax,QWORD PTR [rcx]
   140009a4a:	lea    rcx,[r11+0x8]
   140009a4e:	mov    QWORD PTR [r11-0x70],rcx
   140009a52:	mov    QWORD PTR [r11-0x58],rdx
   140009a56:	mov    DWORD PTR [rsp+0x48],esi
   140009a5a:	mov    QWORD PTR [r11-0x78],r9
   140009a5e:	mov    rbp,r9
   140009a61:	mov    QWORD PTR [r11-0x40],r9
   140009a65:	mov    r9,r8
   140009a68:	mov    r12,r8
   140009a6b:	mov    QWORD PTR [r11-0x48],r8
   140009a6f:	mov    rcx,rbx
   140009a72:	mov    r8d,esi
   140009a75:	mov    DWORD PTR [r11-0x38],r13d
   140009a79:	mov    QWORD PTR [r11-0x34],r13
   140009a7d:	mov    QWORD PTR [r11+0x8],r13
   140009a81:	call   QWORD PTR [rax]
   140009a83:	test   eax,eax
   140009a85:	jne    0x140009b24
   140009a8b:	cmp    esi,0x82
   140009a91:	je     0x140009ab6
   140009a93:	mov    rdx,QWORD PTR [rbx+0x8]
   140009a97:	mov    rcx,QWORD PTR [rbx+0x40]
   140009a9b:	mov    r9,r12
   140009a9e:	mov    r8d,esi
   140009aa1:	mov    QWORD PTR [rsp+0x20],rbp
   140009aa6:	call   QWORD PTR [rip+0x5eb9c]        # 0x140068648
   140009aac:	mov    QWORD PTR [rsp+0xa0],rax
   140009ab4:	jmp    0x140009b24
   140009ab6:	mov    rcx,QWORD PTR [rbx+0x8]
   140009aba:	mov    edx,0xfffffffc
   140009abf:	call   QWORD PTR [rip+0x5eb63]        # 0x140068628
   140009ac5:	mov    rdx,QWORD PTR [rbx+0x8]
   140009ac9:	mov    rcx,QWORD PTR [rbx+0x40]
   140009acd:	mov    r9,r12
   140009ad0:	mov    r8d,0x82
   140009ad6:	mov    rsi,rax
   140009ad9:	mov    QWORD PTR [rsp+0x20],rbp
   140009ade:	call   QWORD PTR [rip+0x5eb64]        # 0x140068648
   140009ae4:	mov    rcx,QWORD PTR [rip+0x5eb4d]        # 0x140068638
   140009aeb:	mov    QWORD PTR [rsp+0xa0],rax
   140009af3:	cmp    QWORD PTR [rbx+0x40],rcx
   140009af7:	je     0x140009b20
   140009af9:	mov    rcx,QWORD PTR [rbx+0x8]
   140009afd:	mov    edx,0xfffffffc
   140009b02:	call   QWORD PTR [rip+0x5eb20]        # 0x140068628
   140009b08:	cmp    rax,rsi
   140009b0b:	jne    0x140009b20
   140009b0d:	mov    r8,QWORD PTR [rbx+0x40]
   140009b11:	mov    rcx,QWORD PTR [rbx+0x8]
   140009b15:	mov    edx,0xfffffffc
   140009b1a:	call   QWORD PTR [rip+0x5eb20]        # 0x140068640
   140009b20:	or     DWORD PTR [rbx+0x38],0x1
   140009b24:	mov    eax,DWORD PTR [rbx+0x38]
   140009b27:	test   al,0x1
   140009b29:	je     0x140009b4d
   140009b2b:	test   rdi,rdi
   140009b2e:	jne    0x140009b4d
   140009b30:	mov    rdx,QWORD PTR [rbx+0x8]
   140009b34:	and    eax,0xfffffffe
   140009b37:	mov    rcx,rbx
   140009b3a:	mov    DWORD PTR [rbx+0x38],eax
   140009b3d:	mov    rax,QWORD PTR [rbx]
   140009b40:	mov    QWORD PTR [rbx+0x8],r13
   140009b44:	mov    QWORD PTR [rbx+0x30],r13
   140009b48:	call   QWORD PTR [rax+0x18]
   140009b4b:	jmp    0x140009b51
   140009b4d:	mov    QWORD PTR [rbx+0x30],rdi
   140009b51:	mov    rax,QWORD PTR [rsp+0xa0]
   140009b59:	lea    r11,[rsp+0x80]
   140009b61:	mov    rbx,QWORD PTR [r11+0x28]
   140009b65:	mov    rbp,QWORD PTR [r11+0x30]
   140009b69:	mov    rsi,QWORD PTR [r11+0x38]
   140009b6d:	mov    rsp,r11
   140009b70:	pop    r13
   140009b72:	pop    r12
   140009b74:	pop    rdi
   140009b75:	ret    
   140009b76:	int3   
   140009b77:	int3   
   140009b78:	int3   
   140009b79:	int3   
   140009b7a:	int3   
   140009b7b:	int3   
   140009b7c:	int3   
   140009b7d:	int3   
   140009b7e:	int3   
   140009b7f:	int3   
   140009b80:	mov    QWORD PTR [rsp+0x18],r8
   140009b85:	mov    QWORD PTR [rsp+0x8],rcx
   140009b8a:	push   rbx
   140009b8b:	push   rbp
   140009b8c:	push   rsi
   140009b8d:	push   rdi
   140009b8e:	push   r12
   140009b90:	push   r13
   140009b92:	push   r14
   140009b94:	sub    rsp,0x30
   140009b98:	mov    r12,QWORD PTR [rcx+0x8]
   140009b9c:	mov    rbp,r8
   140009b9f:	mov    r13,rdx
   140009ba2:	mov    rbx,QWORD PTR [r12+0x8]
   140009ba7:	mov    r14,rcx
   140009baa:	lea    rsi,[r8+0x18]
   140009bae:	cmp    BYTE PTR [rbx+0x49],0x0
   140009bb2:	mov    dil,0x1
   140009bb5:	jne    0x140009c54
   140009bbb:	mov    r14,QWORD PTR [rsi+0x10]
   140009bbf:	mov    QWORD PTR [rsp+0x78],r15
   140009bc4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009bd0:	cmp    QWORD PTR [rbx+0x30],0x10
   140009bd5:	mov    rbp,QWORD PTR [rbx+0x28]
   140009bd9:	lea    rdx,[rbx+0x18]
   140009bdd:	mov    r12,rbx
   140009be0:	jb     0x140009be5
   140009be2:	mov    rdx,QWORD PTR [rdx]
   140009be5:	cmp    r14,r14
   140009be8:	mov    rdi,r14
   140009beb:	cmovb  rdi,r14
   140009bef:	cmp    QWORD PTR [rsi+0x18],0x10
   140009bf4:	jb     0x140009bfb
   140009bf6:	mov    rcx,QWORD PTR [rsi]
   140009bf9:	jmp    0x140009bfe
   140009bfb:	mov    rcx,rsi
   140009bfe:	mov    r8,rbp
   140009c01:	cmp    rdi,rbp
   140009c04:	cmovb  r8,rdi
   140009c08:	call   0x14003e320
   140009c0d:	movsxd rcx,eax
   140009c10:	test   eax,eax
   140009c12:	jne    0x140009c28
   140009c14:	cmp    rdi,rbp
   140009c17:	jae    0x140009c1e
   140009c19:	or     ecx,0xffffffff
   140009c1c:	jmp    0x140009c28
   140009c1e:	xor    eax,eax
   140009c20:	cmp    rdi,rbp
   140009c23:	setne  al
   140009c26:	mov    ecx,eax
   140009c28:	test   ecx,ecx
   140009c2a:	sets   dil
   140009c2e:	test   dil,dil
   140009c31:	je     0x140009c38
   140009c33:	mov    rbx,QWORD PTR [rbx]
   140009c36:	jmp    0x140009c3c
   140009c38:	mov    rbx,QWORD PTR [rbx+0x10]
   140009c3c:	cmp    BYTE PTR [rbx+0x49],0x0
   140009c40:	je     0x140009bd0
   140009c42:	mov    rbp,QWORD PTR [rsp+0x80]
   140009c4a:	mov    r14,QWORD PTR [rsp+0x70]
   140009c4f:	mov    r15,QWORD PTR [rsp+0x78]
   140009c54:	mov    rbx,r12
   140009c57:	test   dil,dil
   140009c5a:	je     0x140009cfa
   140009c60:	mov    rax,QWORD PTR [r14+0x8]
   140009c64:	cmp    r12,QWORD PTR [rax]
   140009c67:	jne    0x140009c95
   140009c69:	mov    r8b,0x1
   140009c6c:	lea    rdx,[rsp+0x80]
   140009c74:	mov    r9,r12
   140009c77:	mov    rcx,r14
   140009c7a:	mov    QWORD PTR [rsp+0x20],rbp
   140009c7f:	call   0x140009d60
   140009c84:	mov    BYTE PTR [r13+0x8],0x1
   140009c89:	mov    rcx,QWORD PTR [rax]
   140009c8c:	mov    QWORD PTR [r13+0x0],rcx
   140009c90:	jmp    0x140009d46
   140009c95:	cmp    BYTE PTR [r12+0x49],0x0
   140009c9b:	je     0x140009ca4
   140009c9d:	mov    rbx,QWORD PTR [r12+0x10]
   140009ca2:	jmp    0x140009cfa
   140009ca4:	mov    rax,QWORD PTR [r12]
   140009ca8:	cmp    BYTE PTR [rax+0x49],0x0
   140009cac:	jne    0x140009ccf
   140009cae:	mov    rbx,rax
   140009cb1:	mov    rax,QWORD PTR [rax+0x10]
   140009cb5:	cmp    BYTE PTR [rax+0x49],0x0
   140009cb9:	jne    0x140009cfa
   140009cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140009cc0:	mov    rbx,rax
   140009cc3:	mov    rax,QWORD PTR [rax+0x10]
   140009cc7:	cmp    BYTE PTR [rax+0x49],0x0
   140009ccb:	je     0x140009cc0
   140009ccd:	jmp    0x140009cfa
   140009ccf:	mov    rax,QWORD PTR [r12+0x8]
   140009cd4:	cmp    BYTE PTR [rax+0x49],0x0
   140009cd8:	jne    0x140009cf2
   140009cda:	nop    WORD PTR [rax+rax*1+0x0]
   140009ce0:	cmp    rbx,QWORD PTR [rax]
   140009ce3:	jne    0x140009cf2
   140009ce5:	mov    rbx,rax
   140009ce8:	mov    rax,QWORD PTR [rax+0x8]
   140009cec:	cmp    BYTE PTR [rax+0x49],0x0
   140009cf0:	je     0x140009ce0
   140009cf2:	cmp    BYTE PTR [rbx+0x49],0x0
   140009cf6:	cmove  rbx,rax
   140009cfa:	lea    rcx,[rbx+0x18]
   140009cfe:	mov    rdx,rsi
   140009d01:	call   0x140005750
   140009d06:	test   eax,eax
   140009d08:	jns    0x140009d13
   140009d0a:	movzx  r8d,dil
   140009d0e:	jmp    0x140009c6c
   140009d13:	cmp    QWORD PTR [rsi+0x18],0x10
   140009d18:	jb     0x140009d22
   140009d1a:	mov    rcx,QWORD PTR [rsi]
   140009d1d:	call   0x1400330c0
   140009d22:	mov    QWORD PTR [rsi+0x18],0xf
   140009d2a:	mov    QWORD PTR [rsi+0x10],0x0
   140009d32:	mov    rcx,rbp
   140009d35:	mov    BYTE PTR [rsi],0x0
   140009d38:	call   0x1400330c0
   140009d3d:	mov    QWORD PTR [r13+0x0],rbx
   140009d41:	mov    BYTE PTR [r13+0x8],0x0
   140009d46:	mov    rax,r13
   140009d49:	add    rsp,0x30
   140009d4d:	pop    r14
   140009d4f:	pop    r13
   140009d51:	pop    r12
   140009d53:	pop    rdi
   140009d54:	pop    rsi
   140009d55:	pop    rbp
   140009d56:	pop    rbx
   140009d57:	ret    
   140009d58:	int3   
   140009d59:	int3   
   140009d5a:	int3   
   140009d5b:	int3   
   140009d5c:	int3   
   140009d5d:	int3   
   140009d5e:	int3   
   140009d5f:	int3   
   140009d60:	rex push rbx
   140009d62:	sub    rsp,0x20
   140009d66:	mov    rax,QWORD PTR [rcx+0x10]
   140009d6a:	mov    r10,rcx
   140009d6d:	movabs rcx,0x555555555555554
   140009d77:	mov    rbx,rdx
   140009d7a:	cmp    rax,rcx
   140009d7d:	jb     0x140009dbd
   140009d7f:	mov    rbx,QWORD PTR [rsp+0x50]
   140009d84:	cmp    QWORD PTR [rbx+0x30],0x10
   140009d89:	jb     0x140009d94
   140009d8b:	mov    rcx,QWORD PTR [rbx+0x18]
   140009d8f:	call   0x1400330c0
   140009d94:	mov    QWORD PTR [rbx+0x30],0xf
   140009d9c:	mov    QWORD PTR [rbx+0x28],0x0
   140009da4:	mov    rcx,rbx
   140009da7:	mov    BYTE PTR [rbx+0x18],0x0
   140009dab:	call   0x1400330c0
   140009db0:	lea    rcx,[rip+0x61519]        # 0x14006b2d0
   140009db7:	call   0x140032d00
   140009dbc:	int3   
   140009dbd:	mov    r11,QWORD PTR [rsp+0x50]
   140009dc2:	inc    rax
   140009dc5:	mov    QWORD PTR [r10+0x10],rax
   140009dc9:	mov    QWORD PTR [r11+0x8],r9
   140009dcd:	mov    rax,QWORD PTR [r10+0x8]
   140009dd1:	cmp    r9,rax
   140009dd4:	jne    0x140009de7
   140009dd6:	mov    QWORD PTR [rax+0x8],r11
   140009dda:	mov    rax,QWORD PTR [r10+0x8]
   140009dde:	mov    QWORD PTR [rax],r11
   140009de1:	mov    rax,QWORD PTR [r10+0x8]
   140009de5:	jmp    0x140009e0b
   140009de7:	test   r8b,r8b
   140009dea:	je     0x140009dfd
   140009dec:	mov    QWORD PTR [r9],r11
   140009def:	mov    rax,QWORD PTR [r10+0x8]
   140009df3:	cmp    r9,QWORD PTR [rax]
   140009df6:	jne    0x140009e0f
   140009df8:	mov    QWORD PTR [rax],r11
   140009dfb:	jmp    0x140009e0f
   140009dfd:	mov    QWORD PTR [r9+0x10],r11
   140009e01:	mov    rax,QWORD PTR [r10+0x8]
   140009e05:	cmp    r9,QWORD PTR [rax+0x10]
   140009e09:	jne    0x140009e0f
   140009e0b:	mov    QWORD PTR [rax+0x10],r11
   140009e0f:	mov    rax,QWORD PTR [r11+0x8]
   140009e13:	mov    rdx,r11
   140009e16:	cmp    BYTE PTR [rax+0x48],0x0
   140009e1a:	jne    0x140009ffa
   140009e20:	mov    rax,QWORD PTR [rdx+0x8]
   140009e24:	mov    rcx,QWORD PTR [rax+0x8]
   140009e28:	cmp    rax,QWORD PTR [rcx]
   140009e2b:	jne    0x140009f08
   140009e31:	mov    r8,QWORD PTR [rcx+0x10]
   140009e35:	cmp    BYTE PTR [r8+0x48],0x0
   140009e3a:	je     0x140009f12
   140009e40:	cmp    rdx,QWORD PTR [rax+0x10]
   140009e44:	jne    0x140009e92
   140009e46:	mov    rcx,QWORD PTR [rax+0x10]
   140009e4a:	mov    rdx,rax
   140009e4d:	mov    rax,QWORD PTR [rcx]
   140009e50:	mov    QWORD PTR [rdx+0x10],rax
   140009e54:	mov    rax,QWORD PTR [rcx]
   140009e57:	cmp    BYTE PTR [rax+0x49],0x0
   140009e5b:	jne    0x140009e61
   140009e5d:	mov    QWORD PTR [rax+0x8],rdx
   140009e61:	mov    rax,QWORD PTR [rdx+0x8]
   140009e65:	mov    QWORD PTR [rcx+0x8],rax
   140009e69:	mov    rax,QWORD PTR [r10+0x8]
   140009e6d:	cmp    rdx,QWORD PTR [rax+0x8]
   140009e71:	jne    0x140009e79
   140009e73:	mov    QWORD PTR [rax+0x8],rcx
   140009e77:	jmp    0x140009e8b
   140009e79:	mov    rax,QWORD PTR [rdx+0x8]
   140009e7d:	cmp    rdx,QWORD PTR [rax]
   140009e80:	jne    0x140009e87
   140009e82:	mov    QWORD PTR [rax],rcx
   140009e85:	jmp    0x140009e8b
   140009e87:	mov    QWORD PTR [rax+0x10],rcx
   140009e8b:	mov    QWORD PTR [rcx],rdx
   140009e8e:	mov    QWORD PTR [rdx+0x8],rcx
   140009e92:	mov    rax,QWORD PTR [rdx+0x8]
   140009e96:	mov    BYTE PTR [rax+0x48],0x1
   140009e9a:	mov    rax,QWORD PTR [rdx+0x8]
   140009e9e:	mov    rcx,QWORD PTR [rax+0x8]
   140009ea2:	mov    BYTE PTR [rcx+0x48],0x0
   140009ea6:	mov    rax,QWORD PTR [rdx+0x8]
   140009eaa:	mov    rcx,QWORD PTR [rax+0x8]
   140009eae:	mov    r8,QWORD PTR [rcx]
   140009eb1:	mov    rax,QWORD PTR [r8+0x10]
   140009eb5:	mov    QWORD PTR [rcx],rax
   140009eb8:	mov    rax,QWORD PTR [r8+0x10]
   140009ebc:	cmp    BYTE PTR [rax+0x49],0x0
   140009ec0:	jne    0x140009ec6
   140009ec2:	mov    QWORD PTR [rax+0x8],rcx
   140009ec6:	mov    rax,QWORD PTR [rcx+0x8]
   140009eca:	mov    QWORD PTR [r8+0x8],rax
   140009ece:	mov    rax,QWORD PTR [r10+0x8]
   140009ed2:	cmp    rcx,QWORD PTR [rax+0x8]
   140009ed6:	jne    0x140009ee5
   140009ed8:	mov    QWORD PTR [rax+0x8],r8
   140009edc:	mov    QWORD PTR [r8+0x10],rcx
   140009ee0:	jmp    0x140009fe8
   140009ee5:	mov    rax,QWORD PTR [rcx+0x8]
   140009ee9:	cmp    rcx,QWORD PTR [rax+0x10]
   140009eed:	jne    0x140009efc
   140009eef:	mov    QWORD PTR [rax+0x10],r8
   140009ef3:	mov    QWORD PTR [r8+0x10],rcx
   140009ef7:	jmp    0x140009fe8
   140009efc:	mov    QWORD PTR [rax],r8
   140009eff:	mov    QWORD PTR [r8+0x10],rcx
   140009f03:	jmp    0x140009fe8
   140009f08:	mov    r8,QWORD PTR [rcx]
   140009f0b:	cmp    BYTE PTR [r8+0x48],0x0
   140009f10:	jne    0x140009f34
   140009f12:	mov    BYTE PTR [rax+0x48],0x1
   140009f16:	mov    BYTE PTR [r8+0x48],0x1
   140009f1b:	mov    rax,QWORD PTR [rdx+0x8]
   140009f1f:	mov    rcx,QWORD PTR [rax+0x8]
   140009f23:	mov    BYTE PTR [rcx+0x48],0x0
   140009f27:	mov    rax,QWORD PTR [rdx+0x8]
   140009f2b:	mov    rdx,QWORD PTR [rax+0x8]
   140009f2f:	jmp    0x140009fec
   140009f34:	cmp    rdx,QWORD PTR [rax]
   140009f37:	jne    0x140009f87
   140009f39:	mov    rcx,QWORD PTR [rax]
   140009f3c:	mov    rdx,rax
   140009f3f:	mov    rax,QWORD PTR [rcx+0x10]
   140009f43:	mov    QWORD PTR [rdx],rax
   140009f46:	mov    rax,QWORD PTR [rcx+0x10]
   140009f4a:	cmp    BYTE PTR [rax+0x49],0x0
   140009f4e:	jne    0x140009f54
   140009f50:	mov    QWORD PTR [rax+0x8],rdx
   140009f54:	mov    rax,QWORD PTR [rdx+0x8]
   140009f58:	mov    QWORD PTR [rcx+0x8],rax
   140009f5c:	mov    rax,QWORD PTR [r10+0x8]
   140009f60:	cmp    rdx,QWORD PTR [rax+0x8]
   140009f64:	jne    0x140009f6c
   140009f66:	mov    QWORD PTR [rax+0x8],rcx
   140009f6a:	jmp    0x140009f7f
   140009f6c:	mov    rax,QWORD PTR [rdx+0x8]
   140009f70:	cmp    rdx,QWORD PTR [rax+0x10]
   140009f74:	jne    0x140009f7c
   140009f76:	mov    QWORD PTR [rax+0x10],rcx
   140009f7a:	jmp    0x140009f7f
   140009f7c:	mov    QWORD PTR [rax],rcx
   140009f7f:	mov    QWORD PTR [rcx+0x10],rdx
   140009f83:	mov    QWORD PTR [rdx+0x8],rcx
   140009f87:	mov    rax,QWORD PTR [rdx+0x8]
   140009f8b:	mov    BYTE PTR [rax+0x48],0x1
   140009f8f:	mov    rax,QWORD PTR [rdx+0x8]
   140009f93:	mov    rcx,QWORD PTR [rax+0x8]
   140009f97:	mov    BYTE PTR [rcx+0x48],0x0
   140009f9b:	mov    rax,QWORD PTR [rdx+0x8]
   140009f9f:	mov    rcx,QWORD PTR [rax+0x8]
   140009fa3:	mov    r8,QWORD PTR [rcx+0x10]
   140009fa7:	mov    rax,QWORD PTR [r8]
   140009faa:	mov    QWORD PTR [rcx+0x10],rax
   140009fae:	mov    rax,QWORD PTR [r8]
   140009fb1:	cmp    BYTE PTR [rax+0x49],0x0
   140009fb5:	jne    0x140009fbb
   140009fb7:	mov    QWORD PTR [rax+0x8],rcx
   140009fbb:	mov    rax,QWORD PTR [rcx+0x8]
   140009fbf:	mov    QWORD PTR [r8+0x8],rax
   140009fc3:	mov    rax,QWORD PTR [r10+0x8]
   140009fc7:	cmp    rcx,QWORD PTR [rax+0x8]
   140009fcb:	jne    0x140009fd3
   140009fcd:	mov    QWORD PTR [rax+0x8],r8
   140009fd1:	jmp    0x140009fe5
   140009fd3:	mov    rax,QWORD PTR [rcx+0x8]
   140009fd7:	cmp    rcx,QWORD PTR [rax]
   140009fda:	jne    0x140009fe1
   140009fdc:	mov    QWORD PTR [rax],r8
   140009fdf:	jmp    0x140009fe5
   140009fe1:	mov    QWORD PTR [rax+0x10],r8
   140009fe5:	mov    QWORD PTR [r8],rcx
   140009fe8:	mov    QWORD PTR [rcx+0x8],r8
   140009fec:	mov    rax,QWORD PTR [rdx+0x8]
   140009ff0:	cmp    BYTE PTR [rax+0x48],0x0
   140009ff4:	je     0x140009e20
   140009ffa:	mov    rax,QWORD PTR [r10+0x8]
   140009ffe:	mov    QWORD PTR [rbx],r11
   14000a001:	mov    rcx,QWORD PTR [rax+0x8]
   14000a005:	mov    rax,rbx
   14000a008:	mov    BYTE PTR [rcx+0x48],0x1
   14000a00c:	add    rsp,0x20
   14000a010:	pop    rbx
   14000a011:	ret    
   14000a012:	int3   
   14000a013:	int3   
   14000a014:	int3   
   14000a015:	int3   
   14000a016:	int3   
   14000a017:	int3   
   14000a018:	int3   
   14000a019:	int3   
   14000a01a:	int3   
   14000a01b:	int3   
   14000a01c:	int3   
   14000a01d:	int3   
   14000a01e:	int3   
   14000a01f:	int3   
   14000a020:	rex push rdi
   14000a022:	sub    rsp,0x30
   14000a026:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a02f:	mov    QWORD PTR [rsp+0x40],rbx
   14000a034:	mov    QWORD PTR [rsp+0x48],rsi
   14000a039:	mov    rsi,rdx
   14000a03c:	call   0x14000a0a0
   14000a041:	mov    rdi,rax
   14000a044:	mov    QWORD PTR [rsp+0x50],rax
   14000a049:	lea    rbx,[rax+0x18]
   14000a04d:	mov    QWORD PTR [rsp+0x58],rbx
   14000a052:	mov    QWORD PTR [rsp+0x28],rbx
   14000a057:	test   rbx,rbx
   14000a05a:	je     0x14000a089
   14000a05c:	mov    QWORD PTR [rbx+0x18],0xf
   14000a064:	mov    QWORD PTR [rbx+0x10],0x0
   14000a06c:	mov    BYTE PTR [rbx],0x0
   14000a06f:	or     r9,0xffffffffffffffff
   14000a073:	xor    r8d,r8d
   14000a076:	mov    rdx,rsi
   14000a079:	mov    rcx,rbx
   14000a07c:	call   0x140002c70
   14000a081:	mov    rax,QWORD PTR [rsi+0x28]
   14000a085:	mov    QWORD PTR [rbx+0x28],rax
   14000a089:	mov    rax,rdi
   14000a08c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a091:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a096:	add    rsp,0x30
   14000a09a:	pop    rdi
   14000a09b:	ret    
   14000a09c:	int3   
   14000a09d:	int3   
   14000a09e:	int3   
   14000a09f:	int3   
   14000a0a0:	rex push rbx
   14000a0a2:	sub    rsp,0x40
   14000a0a6:	mov    rbx,rcx
   14000a0a9:	mov    ecx,0x50
   14000a0ae:	call   0x1400331a0
   14000a0b3:	test   rax,rax
   14000a0b6:	je     0x14000a0db
   14000a0b8:	mov    rdx,QWORD PTR [rbx+0x8]
   14000a0bc:	mov    QWORD PTR [rax],rdx
   14000a0bf:	mov    rdx,QWORD PTR [rbx+0x8]
   14000a0c3:	mov    QWORD PTR [rax+0x8],rdx
   14000a0c7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a0cb:	mov    WORD PTR [rax+0x48],0x0
   14000a0d1:	mov    QWORD PTR [rax+0x10],rcx
   14000a0d5:	add    rsp,0x40
   14000a0d9:	pop    rbx
   14000a0da:	ret    
   14000a0db:	lea    rdx,[rsp+0x58]
   14000a0e0:	lea    rcx,[rsp+0x20]
   14000a0e5:	mov    QWORD PTR [rsp+0x58],0x0
   14000a0ee:	call   0x140032fd4
   14000a0f3:	lea    r11,[rip+0x5e796]        # 0x140068890
   14000a0fa:	lea    rdx,[rip+0x7931f]        # 0x140083420
   14000a101:	lea    rcx,[rsp+0x20]
   14000a106:	mov    QWORD PTR [rsp+0x20],r11
   14000a10b:	call   0x140036358
   14000a110:	int3   
   14000a111:	int3   
   14000a112:	int3   
   14000a113:	int3   
   14000a114:	int3   
   14000a115:	int3   
   14000a116:	int3   
   14000a117:	int3   
   14000a118:	int3   
   14000a119:	int3   
   14000a11a:	int3   
   14000a11b:	int3   
   14000a11c:	int3   
   14000a11d:	int3   
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	rex push rdi
   14000a122:	sub    rsp,0x30
   14000a126:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a12f:	mov    QWORD PTR [rsp+0x40],rbx
   14000a134:	mov    QWORD PTR [rsp+0x48],rsi
   14000a139:	mov    rbx,r8
   14000a13c:	mov    rsi,rdx
   14000a13f:	mov    rdi,rcx
   14000a142:	cmp    rdi,rsi
   14000a145:	je     0x14000a16d
   14000a147:	test   rbx,rbx
   14000a14a:	je     0x14000a15d
   14000a14c:	mov    rcx,rbx
   14000a14f:	mov    rdx,rdi
   14000a152:	mov    r8d,0x130
   14000a158:	call   0x140033260
   14000a15d:	add    rbx,0x130
   14000a164:	add    rdi,0x130
   14000a16b:	jmp    0x14000a142
   14000a16d:	mov    rax,rbx
   14000a170:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a175:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a17a:	add    rsp,0x30
   14000a17e:	pop    rdi
   14000a17f:	ret    
   14000a180:	mov    QWORD PTR [rsp+0x18],r8
   14000a185:	push   rsi
   14000a186:	push   rdi
   14000a187:	push   r12
   14000a189:	sub    rsp,0x30
   14000a18d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a196:	mov    QWORD PTR [rsp+0x68],rbx
   14000a19b:	mov    rbx,r8
   14000a19e:	mov    rsi,rdx
   14000a1a1:	mov    rdi,rcx
   14000a1a4:	mov    QWORD PTR [rsp+0x50],rbx
   14000a1a9:	xor    r12d,r12d
   14000a1ac:	nop    DWORD PTR [rax+0x0]
   14000a1b0:	cmp    rdi,rsi
   14000a1b3:	je     0x14000a1e9
   14000a1b5:	mov    QWORD PTR [rsp+0x58],rbx
   14000a1ba:	test   rbx,rbx
   14000a1bd:	je     0x14000a1da
   14000a1bf:	mov    QWORD PTR [rbx+0x18],0xf
   14000a1c7:	mov    QWORD PTR [rbx+0x10],r12
   14000a1cb:	mov    BYTE PTR [rbx],0x0
   14000a1ce:	mov    rdx,rdi
   14000a1d1:	mov    rcx,rbx
   14000a1d4:	call   0x1400029d0
   14000a1d9:	nop
   14000a1da:	add    rbx,0x28
   14000a1de:	mov    QWORD PTR [rsp+0x60],rbx
   14000a1e3:	add    rdi,0x28
   14000a1e7:	jmp    0x14000a1b0
   14000a1e9:	mov    rax,rbx
   14000a1ec:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a1f1:	add    rsp,0x30
   14000a1f5:	pop    r12
   14000a1f7:	pop    rdi
   14000a1f8:	pop    rsi
   14000a1f9:	ret    
   14000a1fa:	int3   
   14000a1fb:	int3   
   14000a1fc:	int3   
   14000a1fd:	int3   
   14000a1fe:	int3   
   14000a1ff:	int3   
   14000a200:	lea    rax,[rip+0x61af9]        # 0x14006bd00
   14000a207:	mov    QWORD PTR [rcx],rax
   14000a20a:	jmp    0x140016140
   14000a20f:	int3   
   14000a210:	mov    QWORD PTR [rsp+0x8],rbx
   14000a215:	push   rdi
   14000a216:	sub    rsp,0x20
   14000a21a:	lea    rax,[rip+0x61adf]        # 0x14006bd00
   14000a221:	mov    ebx,edx
   14000a223:	mov    rdi,rcx
   14000a226:	mov    QWORD PTR [rcx],rax
   14000a229:	call   0x140016140
   14000a22e:	test   bl,0x1
   14000a231:	je     0x14000a23b
   14000a233:	mov    rcx,rdi
   14000a236:	call   0x1400330c0
   14000a23b:	mov    rax,rdi
   14000a23e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a243:	add    rsp,0x20
   14000a247:	pop    rdi
   14000a248:	ret    
   14000a249:	int3   
   14000a24a:	int3   
   14000a24b:	int3   
   14000a24c:	int3   
   14000a24d:	int3   
   14000a24e:	int3   
   14000a24f:	int3   
   14000a250:	lea    rax,[rip+0x61ad9]        # 0x14006bd30
   14000a257:	mov    QWORD PTR [rcx],rax
   14000a25a:	jmp    0x140016140
   14000a25f:	int3   
   14000a260:	mov    QWORD PTR [rsp+0x8],rbx
   14000a265:	push   rdi
   14000a266:	sub    rsp,0x20
   14000a26a:	lea    rax,[rip+0x61abf]        # 0x14006bd30
   14000a271:	mov    ebx,edx
   14000a273:	mov    rdi,rcx
   14000a276:	mov    QWORD PTR [rcx],rax
   14000a279:	call   0x140016140
   14000a27e:	test   bl,0x1
   14000a281:	je     0x14000a28b
   14000a283:	mov    rcx,rdi
   14000a286:	call   0x1400330c0
   14000a28b:	mov    rax,rdi
   14000a28e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a293:	add    rsp,0x20
   14000a297:	pop    rdi
   14000a298:	ret    
   14000a299:	int3   
   14000a29a:	int3   
   14000a29b:	int3   
   14000a29c:	int3   
   14000a29d:	int3   
   14000a29e:	int3   
   14000a29f:	int3   
   14000a2a0:	lea    rax,[rip+0x61b19]        # 0x14006bdc0
   14000a2a7:	mov    QWORD PTR [rcx],rax
   14000a2aa:	ret    
   14000a2ab:	int3   
   14000a2ac:	int3   
   14000a2ad:	int3   
   14000a2ae:	int3   
   14000a2af:	int3   
   14000a2b0:	rex push rbx
   14000a2b2:	sub    rsp,0x20
   14000a2b6:	lea    rax,[rip+0x61b03]        # 0x14006bdc0
   14000a2bd:	mov    rbx,rcx
   14000a2c0:	mov    QWORD PTR [rcx],rax
   14000a2c3:	test   dl,0x1
   14000a2c6:	je     0x14000a2cd
   14000a2c8:	call   0x1400330c0
   14000a2cd:	mov    rax,rbx
   14000a2d0:	add    rsp,0x20
   14000a2d4:	pop    rbx
   14000a2d5:	ret    
   14000a2d6:	int3   
   14000a2d7:	int3   
   14000a2d8:	int3   
   14000a2d9:	int3   
   14000a2da:	int3   
   14000a2db:	int3   
   14000a2dc:	int3   
   14000a2dd:	int3   
   14000a2de:	int3   
   14000a2df:	int3   
   14000a2e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a2e5:	push   rdi
   14000a2e6:	sub    rsp,0x30
   14000a2ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a2f3:	mov    QWORD PTR [rsp+0x48],rbx
   14000a2f8:	mov    edi,edx
   14000a2fa:	mov    rbx,rcx
   14000a2fd:	lea    rax,[rip+0x61a5c]        # 0x14006bd60
   14000a304:	mov    QWORD PTR [rcx],rax
   14000a307:	call   0x140016320
   14000a30c:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a310:	test   rcx,rcx
   14000a313:	je     0x14000a322
   14000a315:	call   0x14001e810
   14000a31a:	mov    QWORD PTR [rbx+0x58],0x0
   14000a322:	lea    rax,[rip+0x61a07]        # 0x14006bd30
   14000a329:	mov    QWORD PTR [rbx],rax
   14000a32c:	mov    rcx,rbx
   14000a32f:	call   0x140016140
   14000a334:	test   dil,0x1
   14000a338:	je     0x14000a342
   14000a33a:	mov    rcx,rbx
   14000a33d:	call   0x1400330c0
   14000a342:	mov    rax,rbx
   14000a345:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a34a:	add    rsp,0x30
   14000a34e:	pop    rdi
   14000a34f:	ret    
   14000a350:	mov    rax,rsp
   14000a353:	push   rbp
   14000a354:	push   rdi
   14000a355:	push   r12
   14000a357:	mov    rbp,rsp
   14000a35a:	sub    rsp,0x80
   14000a361:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14000a369:	mov    QWORD PTR [rax+0x10],rbx
   14000a36d:	mov    QWORD PTR [rax+0x18],rsi
   14000a371:	mov    rax,QWORD PTR [rip+0x7ad30]        # 0x1400850a8
   14000a378:	xor    rax,rsp
   14000a37b:	mov    QWORD PTR [rbp-0x8],rax
   14000a37f:	mov    rbx,rcx
   14000a382:	mov    esi,0x1
   14000a387:	mov    DWORD PTR [rcx+0x50],esi
   14000a38a:	lea    rdx,[rip+0x63667]        # 0x14006d9f8
   14000a391:	call   0x1400161c0
   14000a396:	test   al,al
   14000a398:	je     0x14000a501
   14000a39e:	mov    rax,QWORD PTR [rbx]
   14000a3a1:	mov    rcx,rbx
   14000a3a4:	call   QWORD PTR [rax+0x8]
   14000a3a7:	lea    rdx,[rbp-0x58]
   14000a3ab:	mov    rcx,rbx
   14000a3ae:	call   0x14000a720
   14000a3b3:	nop
   14000a3b4:	lea    rdx,[rbp-0x30]
   14000a3b8:	mov    rcx,rbx
   14000a3bb:	call   0x14000a790
   14000a3c0:	nop
   14000a3c1:	cmp    QWORD PTR [rbp-0x20],0x0
   14000a3c6:	je     0x14000a4a6
   14000a3cc:	mov    r8d,esi
   14000a3cf:	lea    rdx,[rip+0x61536]        # 0x14006b90c
   14000a3d6:	lea    rcx,[rbp-0x58]
   14000a3da:	call   0x140008ee0
   14000a3df:	or     r11,0xffffffffffffffff
   14000a3e3:	mov    r12,r11
   14000a3e6:	mov    rax,QWORD PTR [rbp-0x20]
   14000a3ea:	cmp    rax,r11
   14000a3ed:	cmovb  r12,rax
   14000a3f1:	mov    rcx,QWORD PTR [rbp-0x48]
   14000a3f5:	sub    r11,rcx
   14000a3f8:	cmp    r11,r12
   14000a3fb:	ja     0x14000a40a
   14000a3fd:	lea    rcx,[rip+0x60f4c]        # 0x14006b350
   14000a404:	call   0x140032d00
   14000a409:	int3   
   14000a40a:	test   r12,r12
   14000a40d:	je     0x14000a4a6
   14000a413:	lea    rdi,[r12+rcx*1]
   14000a417:	cmp    rdi,0xfffffffffffffffe
   14000a41b:	jbe    0x14000a42a
   14000a41d:	lea    rcx,[rip+0x60f2c]        # 0x14006b350
   14000a424:	call   0x140032d00
   14000a429:	int3   
   14000a42a:	cmp    QWORD PTR [rbp-0x40],rdi
   14000a42e:	jae    0x14000a441
   14000a430:	mov    r8,rcx
   14000a433:	mov    rdx,rdi
   14000a436:	lea    rcx,[rbp-0x58]
   14000a43a:	call   0x140002e40
   14000a43f:	jmp    0x14000a45b
   14000a441:	test   rdi,rdi
   14000a444:	jne    0x14000a462
   14000a446:	mov    QWORD PTR [rbp-0x48],rdi
   14000a44a:	lea    rax,[rbp-0x58]
   14000a44e:	cmp    QWORD PTR [rbp-0x40],0x10
   14000a453:	cmovae rax,QWORD PTR [rbp-0x58]
   14000a458:	mov    BYTE PTR [rax],dil
   14000a45b:	mov    rcx,QWORD PTR [rbp-0x48]
   14000a45f:	test   rdi,rdi
   14000a462:	setne  al
   14000a465:	test   al,al
   14000a467:	je     0x14000a4a6
   14000a469:	lea    rdx,[rbp-0x30]
   14000a46d:	cmp    QWORD PTR [rbp-0x18],0x10
   14000a472:	cmovae rdx,QWORD PTR [rbp-0x30]
   14000a477:	lea    rax,[rbp-0x58]
   14000a47b:	cmp    QWORD PTR [rbp-0x40],0x10
   14000a480:	cmovae rax,QWORD PTR [rbp-0x58]
   14000a485:	add    rcx,rax
   14000a488:	mov    r8,r12
   14000a48b:	call   0x140033260
   14000a490:	mov    QWORD PTR [rbp-0x48],rdi
   14000a494:	lea    rax,[rbp-0x58]
   14000a498:	cmp    QWORD PTR [rbp-0x40],0x10
   14000a49d:	cmovae rax,QWORD PTR [rbp-0x58]
   14000a4a2:	mov    BYTE PTR [rax+rdi*1],0x0
   14000a4a6:	lea    rcx,[rbp-0x58]
   14000a4aa:	cmp    QWORD PTR [rbp-0x40],0x10
   14000a4af:	cmovae rcx,QWORD PTR [rbp-0x58]
   14000a4b4:	call   0x14001e1d0
   14000a4b9:	mov    QWORD PTR [rbx+0x58],rax
   14000a4bd:	mov    rcx,rbx
   14000a4c0:	call   0x14000a530
   14000a4c5:	nop
   14000a4c6:	cmp    QWORD PTR [rbp-0x18],0x10
   14000a4cb:	jb     0x14000a4d6
   14000a4cd:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a4d1:	call   0x1400330c0
   14000a4d6:	mov    QWORD PTR [rbp-0x18],0xf
   14000a4de:	mov    QWORD PTR [rbp-0x20],0x0
   14000a4e6:	mov    BYTE PTR [rbp-0x30],0x0
   14000a4ea:	cmp    QWORD PTR [rbp-0x40],0x10
   14000a4ef:	jb     0x14000a4fa
   14000a4f1:	mov    rcx,QWORD PTR [rbp-0x58]
   14000a4f5:	call   0x1400330c0
   14000a4fa:	cmp    QWORD PTR [rbx+0x58],0x0
   14000a4ff:	jne    0x14000a503
   14000a501:	xor    esi,esi
   14000a503:	movzx  eax,sil
   14000a507:	mov    rcx,QWORD PTR [rbp-0x8]
   14000a50b:	xor    rcx,rsp
   14000a50e:	call   0x140032f00
   14000a513:	lea    r11,[rsp+0x80]
   14000a51b:	mov    rbx,QWORD PTR [r11+0x28]
   14000a51f:	mov    rsi,QWORD PTR [r11+0x30]
   14000a523:	mov    rsp,r11
   14000a526:	pop    r12
   14000a528:	pop    rdi
   14000a529:	pop    rbp
   14000a52a:	ret    
   14000a52b:	int3   
   14000a52c:	int3   
   14000a52d:	int3   
   14000a52e:	int3   
   14000a52f:	int3   
   14000a530:	rex push rbx
   14000a532:	sub    rsp,0x20
   14000a536:	cmp    QWORD PTR [rcx+0x58],0x0
   14000a53b:	mov    rbx,rcx
   14000a53e:	je     0x14000a591
   14000a540:	mov    QWORD PTR [rsp+0x30],rdi
   14000a545:	mov    DWORD PTR [rcx+0x48],0xffffffff
   14000a54c:	call   0x140016950
   14000a551:	movzx  edi,al
   14000a554:	test   al,al
   14000a556:	je     0x14000a56b
   14000a558:	mov    ecx,DWORD PTR [rbx+0x50]
   14000a55b:	test   ecx,ecx
   14000a55d:	je     0x14000a57a
   14000a55f:	dec    ecx
   14000a561:	jne    0x14000a56b
   14000a563:	mov    rcx,rbx
   14000a566:	call   0x14000a660
   14000a56b:	movzx  eax,dil
   14000a56f:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a574:	add    rsp,0x20
   14000a578:	pop    rbx
   14000a579:	ret    
   14000a57a:	mov    rcx,rbx
   14000a57d:	call   0x14000a5a0
   14000a582:	movzx  eax,dil
   14000a586:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a58b:	add    rsp,0x20
   14000a58f:	pop    rbx
   14000a590:	ret    
   14000a591:	xor    al,al
   14000a593:	add    rsp,0x20
   14000a597:	pop    rbx
   14000a598:	ret    
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	mov    QWORD PTR [rsp+0x18],rsi
   14000a5a5:	push   rdi
   14000a5a6:	sub    rsp,0x30
   14000a5aa:	mov    edx,DWORD PTR [rcx+0x48]
   14000a5ad:	xor    edi,edi
   14000a5af:	mov    rsi,rcx
   14000a5b2:	dec    edx
   14000a5b4:	jne    0x14000a5bb
   14000a5b6:	mov    edi,0x80
   14000a5bb:	mov    rcx,QWORD PTR [rcx+0x58]
   14000a5bf:	lea    rdx,[rsp+0x40]
   14000a5c4:	mov    DWORD PTR [rsp+0x40],0x0
   14000a5cc:	call   0x14001f000
   14000a5d1:	test   al,al
   14000a5d3:	je     0x14000a649
   14000a5d5:	mov    eax,DWORD PTR [rsp+0x40]
   14000a5d9:	mov    QWORD PTR [rsp+0x48],rbx
   14000a5de:	btr    eax,0x7
   14000a5e2:	mov    ebx,eax
   14000a5e4:	mov    DWORD PTR [rsp+0x40],eax
   14000a5e8:	or     ebx,edi
   14000a5ea:	cmp    eax,ebx
   14000a5ec:	je     0x14000a637
   14000a5ee:	mov    rcx,QWORD PTR [rsi+0x58]
   14000a5f2:	mov    edx,ebx
   14000a5f4:	call   0x14001ef40
   14000a5f9:	test   al,al
   14000a5fb:	je     0x14000a637
   14000a5fd:	lea    rcx,[rip+0x61494]        # 0x14006ba98
   14000a604:	xor    r9d,r9d
   14000a607:	mov    DWORD PTR [rsp+0x28],ebx
   14000a60b:	mov    QWORD PTR [rsp+0x20],rcx
   14000a610:	lea    rcx,[rip+0x614a9]        # 0x14006bac0
   14000a617:	lea    r8d,[r9+0x5]
   14000a61b:	mov    edx,0x84
   14000a620:	call   0x140003150
   14000a625:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a62a:	mov    al,0x1
   14000a62c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a631:	add    rsp,0x30
   14000a635:	pop    rdi
   14000a636:	ret    
   14000a637:	xor    al,al
   14000a639:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a63e:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a643:	add    rsp,0x30
   14000a647:	pop    rdi
   14000a648:	ret    
   14000a649:	xor    al,al
   14000a64b:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a650:	add    rsp,0x30
   14000a654:	pop    rdi
   14000a655:	ret    
   14000a656:	int3   
   14000a657:	int3   
   14000a658:	int3   
   14000a659:	int3   
   14000a65a:	int3   
   14000a65b:	int3   
   14000a65c:	int3   
   14000a65d:	int3   
   14000a65e:	int3   
   14000a65f:	int3   
   14000a660:	rex push rdi
   14000a662:	sub    rsp,0x30
   14000a666:	mov    rdi,rcx
   14000a669:	mov    rcx,QWORD PTR [rcx+0x58]
   14000a66d:	lea    r8,[rsp+0x40]
   14000a672:	xor    edx,edx
   14000a674:	mov    DWORD PTR [rsp+0x40],0x0
   14000a67c:	call   0x14001eb50
   14000a681:	test   al,al
   14000a683:	je     0x14000a717
   14000a689:	mov    edx,DWORD PTR [rdi+0x48]
   14000a68c:	cmp    edx,0xffffffff
   14000a68f:	jl     0x14000a717
   14000a695:	mov    QWORD PTR [rsp+0x48],rbx
   14000a69a:	test   edx,edx
   14000a69c:	jle    0x14000a6bb
   14000a69e:	cmp    edx,0x1
   14000a6a1:	je     0x14000a6ad
   14000a6a3:	cmp    edx,0x2
   14000a6a6:	je     0x14000a6bb
   14000a6a8:	cmp    edx,0x3
   14000a6ab:	jne    0x14000a70a
   14000a6ad:	mov    eax,DWORD PTR [rsp+0x40]
   14000a6b1:	cmp    eax,0xa
   14000a6b4:	jge    0x14000a70a
   14000a6b6:	lea    ebx,[rax+0xa]
   14000a6b9:	jmp    0x14000a6c7
   14000a6bb:	mov    eax,DWORD PTR [rsp+0x40]
   14000a6bf:	cmp    eax,0xa
   14000a6c2:	jl     0x14000a70a
   14000a6c4:	lea    ebx,[rax-0xa]
   14000a6c7:	cmp    ebx,eax
   14000a6c9:	je     0x14000a70a
   14000a6cb:	mov    edx,ebx
   14000a6cd:	mov    rcx,rdi
   14000a6d0:	call   0x14000a8c0
   14000a6d5:	lea    rcx,[rip+0x6143c]        # 0x14006bb18
   14000a6dc:	xor    r9d,r9d
   14000a6df:	mov    DWORD PTR [rsp+0x28],ebx
   14000a6e3:	mov    QWORD PTR [rsp+0x20],rcx
   14000a6e8:	lea    rcx,[rip+0x613d1]        # 0x14006bac0
   14000a6ef:	lea    r8d,[r9+0x5]
   14000a6f3:	mov    edx,0xb0
   14000a6f8:	call   0x140003150
   14000a6fd:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a702:	mov    al,0x1
   14000a704:	add    rsp,0x30
   14000a708:	pop    rdi
   14000a709:	ret    
   14000a70a:	xor    al,al
   14000a70c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a711:	add    rsp,0x30
   14000a715:	pop    rdi
   14000a716:	ret    
   14000a717:	xor    al,al
   14000a719:	add    rsp,0x30
   14000a71d:	pop    rdi
   14000a71e:	ret    
   14000a71f:	int3   
   14000a720:	mov    QWORD PTR [rsp+0x10],rdx
   14000a725:	push   rbx
   14000a726:	sub    rsp,0x30
   14000a72a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a733:	mov    rbx,rdx
   14000a736:	xor    eax,eax
   14000a738:	mov    DWORD PTR [rsp+0x40],eax
   14000a73c:	mov    QWORD PTR [rdx+0x18],0xf
   14000a744:	mov    QWORD PTR [rdx+0x10],rax
   14000a748:	mov    BYTE PTR [rdx],al
   14000a74a:	mov    DWORD PTR [rsp+0x40],0x1
   14000a752:	mov    ecx,DWORD PTR [rcx+0x50]
   14000a755:	dec    ecx
   14000a757:	mov    rcx,rdx
   14000a75a:	je     0x14000a769
   14000a75c:	lea    r8d,[rax+0xc]
   14000a760:	lea    rdx,[rip+0x613d9]        # 0x14006bb40
   14000a767:	jmp    0x14000a776
   14000a769:	mov    r8d,0xf
   14000a76f:	lea    rdx,[rip+0x613da]        # 0x14006bb50
   14000a776:	call   0x140002ba0
   14000a77b:	mov    rax,rbx
   14000a77e:	add    rsp,0x30
   14000a782:	pop    rbx
   14000a783:	ret    
   14000a784:	int3   
   14000a785:	int3   
   14000a786:	int3   
   14000a787:	int3   
   14000a788:	int3   
   14000a789:	int3   
   14000a78a:	int3   
   14000a78b:	int3   
   14000a78c:	int3   
   14000a78d:	int3   
   14000a78e:	int3   
   14000a78f:	int3   
   14000a790:	rex push rbp
   14000a792:	push   rsi
   14000a793:	push   rdi
   14000a794:	sub    rsp,0x180
   14000a79b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000a7a4:	mov    QWORD PTR [rsp+0x1b0],rbx
   14000a7ac:	mov    rax,QWORD PTR [rip+0x7a8f5]        # 0x1400850a8
   14000a7b3:	xor    rax,rsp
   14000a7b6:	mov    QWORD PTR [rsp+0x170],rax
   14000a7be:	mov    rbx,rdx
   14000a7c1:	mov    rdi,rcx
   14000a7c4:	mov    QWORD PTR [rsp+0x30],rdx
   14000a7c9:	xor    ebp,ebp
   14000a7cb:	mov    DWORD PTR [rsp+0x20],ebp
   14000a7cf:	mov    QWORD PTR [rdx+0x18],0xf
   14000a7d7:	mov    QWORD PTR [rdx+0x10],rbp
   14000a7db:	mov    BYTE PTR [rdx],bpl
   14000a7de:	mov    DWORD PTR [rsp+0x20],0x1
   14000a7e6:	lea    rdx,[rsp+0x38]
   14000a7eb:	call   0x14000a720
   14000a7f0:	cmp    QWORD PTR [rax+0x18],0x10
   14000a7f5:	jb     0x14000a7fa
   14000a7f7:	mov    rax,QWORD PTR [rax]
   14000a7fa:	mov    rcx,rax
   14000a7fd:	call   0x14001e1d0
   14000a802:	mov    rsi,rax
   14000a805:	cmp    QWORD PTR [rsp+0x50],0x10
   14000a80b:	jb     0x14000a817
   14000a80d:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a812:	call   0x1400330c0
   14000a817:	mov    QWORD PTR [rsp+0x50],0xf
   14000a820:	mov    QWORD PTR [rsp+0x48],rbp
   14000a825:	mov    BYTE PTR [rsp+0x38],0x0
   14000a82a:	test   rsi,rsi
   14000a82d:	je     0x14000a88d
   14000a82f:	mov    DWORD PTR [rsp+0x24],ebp
   14000a833:	mov    BYTE PTR [rsp+0x60],0x0
   14000a838:	xor    edx,edx
   14000a83a:	mov    r8d,0x103
   14000a840:	lea    rcx,[rsp+0x61]
   14000a845:	call   0x140036dc0
   14000a84a:	lea    r8,[rsp+0x24]
   14000a84f:	lea    rdx,[rsp+0x60]
   14000a854:	mov    rcx,QWORD PTR [rdi+0x58]
   14000a858:	call   0x14001f110
   14000a85d:	cmp    BYTE PTR [rsp+0x60],0x7b
   14000a862:	jne    0x14000a885
   14000a864:	xor    eax,eax
   14000a866:	or     rcx,0xffffffffffffffff
   14000a86a:	lea    rdi,[rsp+0x60]
   14000a86f:	repnz scas al,BYTE PTR es:[rdi]
   14000a871:	not    rcx
   14000a874:	lea    r8,[rcx-0x1]
   14000a878:	lea    rdx,[rsp+0x60]
   14000a87d:	mov    rcx,rbx
   14000a880:	call   0x140002ba0
   14000a885:	mov    rcx,rsi
   14000a888:	call   0x14001e810
   14000a88d:	mov    rax,rbx
   14000a890:	mov    rcx,QWORD PTR [rsp+0x170]
   14000a898:	xor    rcx,rsp
   14000a89b:	call   0x140032f00
   14000a8a0:	mov    rbx,QWORD PTR [rsp+0x1b0]
   14000a8a8:	add    rsp,0x180
   14000a8af:	pop    rdi
   14000a8b0:	pop    rsi
   14000a8b1:	pop    rbp
   14000a8b2:	ret    
   14000a8b3:	int3   
   14000a8b4:	int3   
   14000a8b5:	int3   
   14000a8b6:	int3   
   14000a8b7:	int3   
   14000a8b8:	int3   
   14000a8b9:	int3   
   14000a8ba:	int3   
   14000a8bb:	int3   
   14000a8bc:	int3   
   14000a8bd:	int3   
   14000a8be:	int3   
   14000a8bf:	int3   
   14000a8c0:	mov    rax,rsp
   14000a8c3:	push   rbp
   14000a8c4:	push   rdi
   14000a8c5:	push   r12
   14000a8c7:	push   r13
   14000a8c9:	push   r14
   14000a8cb:	lea    rbp,[rax-0x48]
   14000a8cf:	sub    rsp,0x120
   14000a8d6:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000a8df:	mov    QWORD PTR [rax+0x18],rbx
   14000a8e3:	mov    QWORD PTR [rax+0x20],rsi
   14000a8e7:	mov    rax,QWORD PTR [rip+0x7a7ba]        # 0x1400850a8
   14000a8ee:	xor    rax,rsp
   14000a8f1:	mov    QWORD PTR [rbp+0x10],rax
   14000a8f5:	mov    r12d,edx
   14000a8f8:	mov    rbx,rcx
   14000a8fb:	cmp    DWORD PTR [rcx+0x50],0x1
   14000a8ff:	jne    0x14000ad44
   14000a905:	lea    rdx,[rbp-0x40]
   14000a909:	call   0x14000a720
   14000a90e:	nop
   14000a90f:	lea    rdx,[rbp-0x18]
   14000a913:	mov    rcx,rbx
   14000a916:	call   0x14000a790
   14000a91b:	nop
   14000a91c:	xor    r13d,r13d
   14000a91f:	mov    QWORD PTR [rsp+0x30],r13
   14000a924:	lea    ecx,[r13+0x50]
   14000a928:	call   0x1400331a0
   14000a92d:	test   rax,rax
   14000a930:	je     0x14000ad12
   14000a936:	mov    QWORD PTR [rsp+0x28],rax
   14000a93b:	mov    QWORD PTR [rax],rax
   14000a93e:	mov    rax,QWORD PTR [rsp+0x28]
   14000a943:	mov    QWORD PTR [rax+0x8],rax
   14000a947:	mov    rax,QWORD PTR [rsp+0x28]
   14000a94c:	mov    QWORD PTR [rax+0x10],rax
   14000a950:	mov    rax,QWORD PTR [rsp+0x28]
   14000a955:	mov    BYTE PTR [rax+0x48],0x1
   14000a959:	mov    rax,QWORD PTR [rsp+0x28]
   14000a95e:	mov    BYTE PTR [rax+0x49],0x1
   14000a962:	mov    DWORD PTR [rsp+0x40],0x4
   14000a96a:	lea    rcx,[rsp+0x20]
   14000a96f:	call   0x14000ef00
   14000a974:	nop
   14000a975:	mov    esi,r13d
   14000a978:	cmp    DWORD PTR [rsp+0x30],r13d
   14000a97d:	jbe    0x14000ab68
   14000a983:	or     r14,0xffffffffffffffff
   14000a987:	nop    WORD PTR [rax+rax*1+0x0]
   14000a990:	mov    r8d,esi
   14000a993:	lea    rdx,[rbp-0x68]
   14000a997:	lea    rcx,[rsp+0x20]
   14000a99c:	call   0x14000f2e0
   14000a9a1:	nop
   14000a9a2:	cmp    QWORD PTR [rbp-0x58],0x0
   14000a9a7:	je     0x14000ab31
   14000a9ad:	mov    QWORD PTR [rbp-0x78],0xf
   14000a9b5:	mov    QWORD PTR [rbp-0x80],r13
   14000a9b9:	mov    BYTE PTR [rsp+0x70],0x0
   14000a9be:	mov    rbx,QWORD PTR [rbp-0x30]
   14000a9c2:	cmp    rbx,0xffffffffffffffff
   14000a9c6:	cmova  rbx,r14
   14000a9ca:	mov    rdx,rbx
   14000a9cd:	lea    rcx,[rsp+0x70]
   14000a9d2:	call   0x140002d30
   14000a9d7:	test   al,al
   14000a9d9:	je     0x14000aa19
   14000a9db:	lea    rdx,[rbp-0x40]
   14000a9df:	cmp    QWORD PTR [rbp-0x28],0x10
   14000a9e4:	cmovae rdx,QWORD PTR [rbp-0x40]
   14000a9e9:	lea    rcx,[rsp+0x70]
   14000a9ee:	cmp    QWORD PTR [rbp-0x78],0x10
   14000a9f3:	cmovae rcx,QWORD PTR [rsp+0x70]
   14000a9f9:	mov    r8,rbx
   14000a9fc:	call   0x140033260
   14000aa01:	mov    QWORD PTR [rbp-0x80],rbx
   14000aa05:	lea    rax,[rsp+0x70]
   14000aa0a:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aa0f:	cmovae rax,QWORD PTR [rsp+0x70]
   14000aa15:	mov    BYTE PTR [rax+rbx*1],0x0
   14000aa19:	mov    r8d,0x1
   14000aa1f:	lea    rdx,[rip+0x60ee6]        # 0x14006b90c
   14000aa26:	lea    rcx,[rsp+0x70]
   14000aa2b:	call   0x140008ee0
   14000aa30:	mov    rdi,r14
   14000aa33:	mov    rax,QWORD PTR [rbp-0x58]
   14000aa37:	cmp    rax,0xffffffffffffffff
   14000aa3b:	cmovb  rdi,rax
   14000aa3f:	mov    rax,r14
   14000aa42:	mov    rcx,QWORD PTR [rbp-0x80]
   14000aa46:	sub    rax,rcx
   14000aa49:	cmp    rax,rdi
   14000aa4c:	jbe    0x14000ab5b
   14000aa52:	test   rdi,rdi
   14000aa55:	je     0x14000aaeb
   14000aa5b:	lea    rbx,[rcx+rdi*1]
   14000aa5f:	cmp    rbx,0xfffffffffffffffe
   14000aa63:	ja     0x14000ab4e
   14000aa69:	cmp    QWORD PTR [rbp-0x78],rbx
   14000aa6d:	jae    0x14000aa81
   14000aa6f:	mov    r8,rcx
   14000aa72:	mov    rdx,rbx
   14000aa75:	lea    rcx,[rsp+0x70]
   14000aa7a:	call   0x140002e40
   14000aa7f:	jmp    0x14000aa9c
   14000aa81:	test   rbx,rbx
   14000aa84:	jne    0x14000aaa3
   14000aa86:	mov    QWORD PTR [rbp-0x80],r13
   14000aa8a:	lea    rax,[rsp+0x70]
   14000aa8f:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aa94:	cmovae rax,QWORD PTR [rsp+0x70]
   14000aa9a:	mov    BYTE PTR [rax],bl
   14000aa9c:	mov    rcx,QWORD PTR [rbp-0x80]
   14000aaa0:	test   rbx,rbx
   14000aaa3:	setne  al
   14000aaa6:	test   al,al
   14000aaa8:	je     0x14000aaeb
   14000aaaa:	lea    rdx,[rbp-0x68]
   14000aaae:	cmp    QWORD PTR [rbp-0x50],0x10
   14000aab3:	cmovae rdx,QWORD PTR [rbp-0x68]
   14000aab8:	lea    rax,[rsp+0x70]
   14000aabd:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aac2:	cmovae rax,QWORD PTR [rsp+0x70]
   14000aac8:	add    rcx,rax
   14000aacb:	mov    r8,rdi
   14000aace:	call   0x140033260
   14000aad3:	mov    QWORD PTR [rbp-0x80],rbx
   14000aad7:	lea    rax,[rsp+0x70]
   14000aadc:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aae1:	cmovae rax,QWORD PTR [rsp+0x70]
   14000aae7:	mov    BYTE PTR [rax+rbx*1],0x0
   14000aaeb:	lea    rcx,[rsp+0x70]
   14000aaf0:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aaf5:	cmovae rcx,QWORD PTR [rsp+0x70]
   14000aafb:	call   0x14001e1d0
   14000ab00:	mov    rbx,rax
   14000ab03:	test   rax,rax
   14000ab06:	je     0x14000ab1f
   14000ab08:	mov    r8d,r12d
   14000ab0b:	mov    edx,r14d
   14000ab0e:	mov    rcx,rax
   14000ab11:	call   0x14001ea90
   14000ab16:	mov    rcx,rbx
   14000ab19:	call   0x14001e810
   14000ab1e:	nop
   14000ab1f:	cmp    QWORD PTR [rbp-0x78],0x10
   14000ab24:	jb     0x14000ab31
   14000ab26:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ab2b:	call   0x1400330c0
   14000ab30:	nop
   14000ab31:	cmp    QWORD PTR [rbp-0x50],0x10
   14000ab36:	jb     0x14000ab41
   14000ab38:	mov    rcx,QWORD PTR [rbp-0x68]
   14000ab3c:	call   0x1400330c0
   14000ab41:	inc    esi
   14000ab43:	cmp    esi,DWORD PTR [rsp+0x30]
   14000ab47:	jae    0x14000ab68
   14000ab49:	jmp    0x14000a990
   14000ab4e:	lea    rcx,[rip+0x607fb]        # 0x14006b350
   14000ab55:	call   0x140032d00
   14000ab5a:	int3   
   14000ab5b:	lea    rcx,[rip+0x607ee]        # 0x14006b350
   14000ab62:	call   0x140032d00
   14000ab67:	nop
   14000ab68:	mov    rax,QWORD PTR [rsp+0x28]
   14000ab6d:	mov    rbx,QWORD PTR [rax+0x8]
   14000ab71:	mov    rdi,rbx
   14000ab74:	cmp    BYTE PTR [rbx+0x49],0x0
   14000ab78:	jne    0x14000abc7
   14000ab7a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ab80:	mov    rdx,QWORD PTR [rdi+0x10]
   14000ab84:	lea    rcx,[rsp+0x20]
   14000ab89:	call   0x140011a50
   14000ab8e:	mov    rdi,QWORD PTR [rdi]
   14000ab91:	cmp    QWORD PTR [rbx+0x38],0x10
   14000ab96:	jb     0x14000aba1
   14000ab98:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ab9c:	call   0x1400330c0
   14000aba1:	mov    QWORD PTR [rbx+0x38],0xf
   14000aba9:	mov    QWORD PTR [rbx+0x30],r13
   14000abad:	mov    BYTE PTR [rbx+0x20],0x0
   14000abb1:	mov    rcx,rbx
   14000abb4:	call   0x1400330c0
   14000abb9:	mov    rbx,rdi
   14000abbc:	cmp    BYTE PTR [rdi+0x49],0x0
   14000abc0:	je     0x14000ab80
   14000abc2:	mov    rax,QWORD PTR [rsp+0x28]
   14000abc7:	mov    QWORD PTR [rax+0x8],rax
   14000abcb:	mov    rax,QWORD PTR [rsp+0x28]
   14000abd0:	mov    QWORD PTR [rax],rax
   14000abd3:	mov    rax,QWORD PTR [rsp+0x28]
   14000abd8:	mov    QWORD PTR [rax+0x10],rax
   14000abdc:	mov    QWORD PTR [rsp+0x30],r13
   14000abe1:	mov    rdi,QWORD PTR [rsp+0x28]
   14000abe6:	mov    rbx,QWORD PTR [rdi]
   14000abe9:	cmp    rbx,rbx
   14000abec:	jne    0x14000ac63
   14000abee:	mov    rbx,QWORD PTR [rdi+0x8]
   14000abf2:	mov    rsi,rbx
   14000abf5:	cmp    BYTE PTR [rbx+0x49],0x0
   14000abf9:	jne    0x14000ac47
   14000abfb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ac00:	mov    rdx,QWORD PTR [rsi+0x10]
   14000ac04:	lea    rcx,[rsp+0x20]
   14000ac09:	call   0x140011a50
   14000ac0e:	mov    rsi,QWORD PTR [rsi]
   14000ac11:	cmp    QWORD PTR [rbx+0x38],0x10
   14000ac16:	jb     0x14000ac21
   14000ac18:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ac1c:	call   0x1400330c0
   14000ac21:	mov    QWORD PTR [rbx+0x38],0xf
   14000ac29:	mov    QWORD PTR [rbx+0x30],r13
   14000ac2d:	mov    BYTE PTR [rbx+0x20],0x0
   14000ac31:	mov    rcx,rbx
   14000ac34:	call   0x1400330c0
   14000ac39:	mov    rbx,rsi
   14000ac3c:	cmp    BYTE PTR [rsi+0x49],0x0
   14000ac40:	je     0x14000ac00
   14000ac42:	mov    rdi,QWORD PTR [rsp+0x28]
   14000ac47:	mov    QWORD PTR [rdi+0x8],rdi
   14000ac4b:	mov    rax,QWORD PTR [rsp+0x28]
   14000ac50:	mov    QWORD PTR [rax],rax
   14000ac53:	mov    rax,QWORD PTR [rsp+0x28]
   14000ac58:	mov    QWORD PTR [rax+0x10],rax
   14000ac5c:	mov    QWORD PTR [rsp+0x30],r13
   14000ac61:	jmp    0x14000acd2
   14000ac63:	cmp    rbx,rdi
   14000ac66:	je     0x14000acd7
   14000ac68:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ac70:	mov    r8,rbx
   14000ac73:	cmp    BYTE PTR [rbx+0x49],0x0
   14000ac77:	jne    0x14000acbe
   14000ac79:	mov    rax,QWORD PTR [rbx+0x10]
   14000ac7d:	cmp    BYTE PTR [rax+0x49],0x0
   14000ac81:	jne    0x14000ac9e
   14000ac83:	mov    rbx,rax
   14000ac86:	mov    rax,QWORD PTR [rax]
   14000ac89:	cmp    BYTE PTR [rax+0x49],0x0
   14000ac8d:	jne    0x14000acbe
   14000ac8f:	nop
   14000ac90:	mov    rbx,rax
   14000ac93:	mov    rax,QWORD PTR [rax]
   14000ac96:	cmp    BYTE PTR [rax+0x49],0x0
   14000ac9a:	je     0x14000ac90
   14000ac9c:	jmp    0x14000acbe
   14000ac9e:	mov    rax,QWORD PTR [rbx+0x8]
   14000aca2:	cmp    BYTE PTR [rax+0x49],0x0
   14000aca6:	jne    0x14000acbb
   14000aca8:	cmp    rbx,QWORD PTR [rax+0x10]
   14000acac:	jne    0x14000acbb
   14000acae:	mov    rbx,rax
   14000acb1:	mov    rax,QWORD PTR [rax+0x8]
   14000acb5:	cmp    BYTE PTR [rax+0x49],0x0
   14000acb9:	je     0x14000aca8
   14000acbb:	mov    rbx,rax
   14000acbe:	lea    rdx,[rsp+0x48]
   14000acc3:	lea    rcx,[rsp+0x20]
   14000acc8:	call   0x140011560
   14000accd:	cmp    rbx,rdi
   14000acd0:	jne    0x14000ac70
   14000acd2:	mov    rdi,QWORD PTR [rsp+0x28]
   14000acd7:	mov    rcx,rdi
   14000acda:	call   0x1400330c0
   14000acdf:	nop
   14000ace0:	cmp    QWORD PTR [rbp+0x0],0x10
   14000ace5:	jb     0x14000acf0
   14000ace7:	mov    rcx,QWORD PTR [rbp-0x18]
   14000aceb:	call   0x1400330c0
   14000acf0:	mov    QWORD PTR [rbp+0x0],0xf
   14000acf8:	mov    QWORD PTR [rbp-0x8],r13
   14000acfc:	mov    BYTE PTR [rbp-0x18],0x0
   14000ad00:	cmp    QWORD PTR [rbp-0x28],0x10
   14000ad05:	jb     0x14000ad44
   14000ad07:	mov    rcx,QWORD PTR [rbp-0x40]
   14000ad0b:	call   0x1400330c0
   14000ad10:	jmp    0x14000ad44
   14000ad12:	mov    QWORD PTR [rsp+0x48],r13
   14000ad17:	lea    rdx,[rsp+0x48]
   14000ad1c:	lea    rcx,[rsp+0x58]
   14000ad21:	call   0x140032fd4
   14000ad26:	lea    r11,[rip+0x5db63]        # 0x140068890
   14000ad2d:	mov    QWORD PTR [rsp+0x58],r11
   14000ad32:	lea    rdx,[rip+0x786e7]        # 0x140083420
   14000ad39:	lea    rcx,[rsp+0x58]
   14000ad3e:	call   0x140036358
   14000ad43:	nop
   14000ad44:	mov    rcx,QWORD PTR [rbp+0x10]
   14000ad48:	xor    rcx,rsp
   14000ad4b:	call   0x140032f00
   14000ad50:	lea    r11,[rsp+0x120]
   14000ad58:	mov    rbx,QWORD PTR [r11+0x40]
   14000ad5c:	mov    rsi,QWORD PTR [r11+0x48]
   14000ad60:	mov    rsp,r11
   14000ad63:	pop    r14
   14000ad65:	pop    r13
   14000ad67:	pop    r12
   14000ad69:	pop    rdi
   14000ad6a:	pop    rbp
   14000ad6b:	ret    
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	mov    QWORD PTR [rsp+0x8],rcx
   14000ad75:	push   rdi
   14000ad76:	sub    rsp,0x30
   14000ad7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ad83:	mov    QWORD PTR [rsp+0x48],rbx
   14000ad88:	mov    ebx,edx
   14000ad8a:	mov    rdi,rcx
   14000ad8d:	lea    rax,[rip+0x60ffc]        # 0x14006bd90
   14000ad94:	mov    QWORD PTR [rcx],rax
   14000ad97:	call   0x14000add0
   14000ad9c:	nop
   14000ad9d:	lea    rax,[rip+0x60f5c]        # 0x14006bd00
   14000ada4:	mov    QWORD PTR [rdi],rax
   14000ada7:	mov    rcx,rdi
   14000adaa:	call   0x140016140
   14000adaf:	test   bl,0x1
   14000adb2:	je     0x14000adbc
   14000adb4:	mov    rcx,rdi
   14000adb7:	call   0x1400330c0
   14000adbc:	mov    rax,rdi
   14000adbf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000adc4:	add    rsp,0x30
   14000adc8:	pop    rdi
   14000adc9:	ret    
   14000adca:	int3   
   14000adcb:	int3   
   14000adcc:	int3   
   14000adcd:	int3   
   14000adce:	int3   
   14000adcf:	int3   
   14000add0:	rex push rbx
   14000add2:	sub    rsp,0x30
   14000add6:	lea    rax,[rip+0x60d83]        # 0x14006bb60
   14000addd:	xor    r9d,r9d
   14000ade0:	mov    rbx,rcx
   14000ade3:	mov    QWORD PTR [rsp+0x28],rax
   14000ade8:	lea    rax,[rip+0x606b1]        # 0x14006b4a0
   14000adef:	lea    rcx,[rip+0x60cca]        # 0x14006bac0
   14000adf6:	lea    r8d,[r9+0x5]
   14000adfa:	mov    edx,0x122
   14000adff:	mov    QWORD PTR [rsp+0x20],rax
   14000ae04:	call   0x140003150
   14000ae09:	mov    rcx,rbx
   14000ae0c:	call   0x140016320
   14000ae11:	mov    rdx,QWORD PTR [rbx+0x88]
   14000ae18:	test   rdx,rdx
   14000ae1b:	je     0x14000ae30
   14000ae1d:	xor    ecx,ecx
   14000ae1f:	call   QWORD PTR [rip+0x5d80b]        # 0x140068630
   14000ae25:	mov    QWORD PTR [rbx+0x88],0x0
   14000ae30:	cmp    QWORD PTR [rbx+0x80],0x0
   14000ae38:	je     0x14000ae5b
   14000ae3a:	mov    dl,0x1
   14000ae3c:	mov    rcx,rbx
   14000ae3f:	call   0x14000b4b0
   14000ae44:	mov    rcx,QWORD PTR [rbx+0x80]
   14000ae4b:	call   0x14001e810
   14000ae50:	mov    QWORD PTR [rbx+0x80],0x0
   14000ae5b:	add    rsp,0x30
   14000ae5f:	pop    rbx
   14000ae60:	ret    
   14000ae61:	int3   
   14000ae62:	int3   
   14000ae63:	int3   
   14000ae64:	int3   
   14000ae65:	int3   
   14000ae66:	int3   
   14000ae67:	int3   
   14000ae68:	int3   
   14000ae69:	int3   
   14000ae6a:	int3   
   14000ae6b:	int3   
   14000ae6c:	int3   
   14000ae6d:	int3   
   14000ae6e:	int3   
   14000ae6f:	int3   
   14000ae70:	mov    rax,rsp
   14000ae73:	push   rbp
   14000ae74:	push   r12
   14000ae76:	push   r14
   14000ae78:	lea    rbp,[rax-0x5f]
   14000ae7c:	sub    rsp,0xc0
   14000ae83:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000ae8b:	mov    QWORD PTR [rax+0x10],rbx
   14000ae8f:	mov    QWORD PTR [rax+0x18],rsi
   14000ae93:	mov    QWORD PTR [rax+0x20],rdi
   14000ae97:	mov    rax,QWORD PTR [rip+0x7a20a]        # 0x1400850a8
   14000ae9e:	xor    rax,rsp
   14000aea1:	mov    QWORD PTR [rbp+0x3f],rax
   14000aea5:	mov    rdi,rcx
   14000aea8:	lea    rax,[rip+0x60ce9]        # 0x14006bb98
   14000aeaf:	mov    QWORD PTR [rsp+0x28],rax
   14000aeb4:	lea    rax,[rip+0x605e5]        # 0x14006b4a0
   14000aebb:	mov    QWORD PTR [rsp+0x20],rax
   14000aec0:	xor    r9d,r9d
   14000aec3:	mov    edx,0x132
   14000aec8:	lea    r8d,[r9+0x5]
   14000aecc:	lea    rcx,[rip+0x60bed]        # 0x14006bac0
   14000aed3:	call   0x140003150
   14000aed8:	lea    rdx,[rip+0x5ff91]        # 0x14006ae70
   14000aedf:	mov    rcx,rdi
   14000aee2:	call   0x1400161c0
   14000aee7:	test   al,al
   14000aee9:	je     0x14000b0f2
   14000aeef:	mov    rax,QWORD PTR [rdi]
   14000aef2:	mov    rcx,rdi
   14000aef5:	call   QWORD PTR [rax+0x8]
   14000aef8:	lea    r11,[rip+0x60ec1]        # 0x14006bdc0
   14000aeff:	mov    QWORD PTR [rbp-0x49],r11
   14000af03:	lea    rcx,[rbp-0x49]
   14000af07:	call   0x140015320
   14000af0c:	nop
   14000af0d:	mov    eax,DWORD PTR [rbp-0x21]
   14000af10:	mov    DWORD PTR [rdi+0x5c],eax
   14000af13:	mov    eax,DWORD PTR [rbp-0x41]
   14000af16:	mov    DWORD PTR [rdi+0x60],eax
   14000af19:	mov    eax,DWORD PTR [rbp-0x3d]
   14000af1c:	mov    DWORD PTR [rdi+0x64],eax
   14000af1f:	mov    eax,DWORD PTR [rbp-0x39]
   14000af22:	mov    DWORD PTR [rdi+0x70],eax
   14000af25:	mov    eax,DWORD PTR [rbp-0x35]
   14000af28:	mov    DWORD PTR [rdi+0x74],eax
   14000af2b:	mov    eax,DWORD PTR [rbp-0x31]
   14000af2e:	mov    DWORD PTR [rdi+0x68],eax
   14000af31:	mov    eax,DWORD PTR [rbp-0x2d]
   14000af34:	mov    DWORD PTR [rdi+0x6c],eax
   14000af37:	mov    eax,DWORD PTR [rbp-0x29]
   14000af3a:	mov    DWORD PTR [rdi+0x78],eax
   14000af3d:	mov    eax,DWORD PTR [rbp-0x25]
   14000af40:	mov    DWORD PTR [rdi+0x7c],eax
   14000af43:	mov    r14d,0xf
   14000af49:	mov    QWORD PTR [rbp+0x7],r14
   14000af4d:	mov    BYTE PTR [rbp-0x11],0x0
   14000af51:	mov    rcx,QWORD PTR [rip+0x60bf8]        # 0x14006bb50
   14000af58:	mov    QWORD PTR [rbp-0x11],rcx
   14000af5c:	mov    eax,DWORD PTR [rip+0x60bf6]        # 0x14006bb58
   14000af62:	mov    DWORD PTR [rbp-0x9],eax
   14000af65:	movzx  eax,WORD PTR [rip+0x60bf0]        # 0x14006bb5c
   14000af6c:	mov    WORD PTR [rbp-0x5],ax
   14000af70:	movzx  eax,BYTE PTR [rip+0x60be7]        # 0x14006bb5e
   14000af77:	mov    BYTE PTR [rbp-0x3],al
   14000af7a:	mov    QWORD PTR [rbp-0x1],r14
   14000af7e:	lea    rax,[rbp-0x11]
   14000af82:	cmp    r14,0x10
   14000af86:	cmovae rax,rcx
   14000af8a:	mov    BYTE PTR [rax+0xf],0x0
   14000af8e:	lea    rdx,[rbp+0x17]
   14000af92:	mov    rcx,rdi
   14000af95:	call   0x14000b560
   14000af9a:	nop
   14000af9b:	lea    r12d,[r14-0xe]
   14000af9f:	cmp    QWORD PTR [rbp+0x27],0x0
   14000afa4:	je     0x14000b083
   14000afaa:	mov    r8d,r12d
   14000afad:	lea    rdx,[rip+0x60958]        # 0x14006b90c
   14000afb4:	lea    rcx,[rbp-0x11]
   14000afb8:	call   0x140008ee0
   14000afbd:	or     r11,0xffffffffffffffff
   14000afc1:	mov    rsi,r11
   14000afc4:	mov    rax,QWORD PTR [rbp+0x27]
   14000afc8:	cmp    rax,r11
   14000afcb:	cmovb  rsi,rax
   14000afcf:	mov    rcx,QWORD PTR [rbp-0x1]
   14000afd3:	sub    r11,rcx
   14000afd6:	cmp    r11,rsi
   14000afd9:	ja     0x14000afe8
   14000afdb:	lea    rcx,[rip+0x6036e]        # 0x14006b350
   14000afe2:	call   0x140032d00
   14000afe7:	int3   
   14000afe8:	test   rsi,rsi
   14000afeb:	je     0x14000b083
   14000aff1:	lea    rbx,[rsi+rcx*1]
   14000aff5:	cmp    rbx,0xfffffffffffffffe
   14000aff9:	jbe    0x14000b008
   14000affb:	lea    rcx,[rip+0x6034e]        # 0x14006b350
   14000b002:	call   0x140032d00
   14000b007:	int3   
   14000b008:	cmp    QWORD PTR [rbp+0x7],rbx
   14000b00c:	jae    0x14000b01f
   14000b00e:	mov    r8,rcx
   14000b011:	mov    rdx,rbx
   14000b014:	lea    rcx,[rbp-0x11]
   14000b018:	call   0x140002e40
   14000b01d:	jmp    0x14000b038
   14000b01f:	test   rbx,rbx
   14000b022:	jne    0x14000b03f
   14000b024:	mov    QWORD PTR [rbp-0x1],rbx
   14000b028:	lea    rax,[rbp-0x11]
   14000b02c:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b031:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b036:	mov    BYTE PTR [rax],bl
   14000b038:	mov    rcx,QWORD PTR [rbp-0x1]
   14000b03c:	test   rbx,rbx
   14000b03f:	setne  al
   14000b042:	test   al,al
   14000b044:	je     0x14000b083
   14000b046:	lea    rdx,[rbp+0x17]
   14000b04a:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000b04f:	cmovae rdx,QWORD PTR [rbp+0x17]
   14000b054:	lea    rax,[rbp-0x11]
   14000b058:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b05d:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b062:	add    rcx,rax
   14000b065:	mov    r8,rsi
   14000b068:	call   0x140033260
   14000b06d:	mov    QWORD PTR [rbp-0x1],rbx
   14000b071:	lea    rax,[rbp-0x11]
   14000b075:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b07a:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b07f:	mov    BYTE PTR [rax+rbx*1],0x0
   14000b083:	lea    rcx,[rbp-0x11]
   14000b087:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b08c:	cmovae rcx,QWORD PTR [rbp-0x11]
   14000b091:	call   0x14001e1d0
   14000b096:	mov    QWORD PTR [rdi+0x80],rax
   14000b09d:	mov    QWORD PTR [rip+0x7f31c],rdi        # 0x14008a3c0
   14000b0a4:	mov    rcx,rdi
   14000b0a7:	call   0x1400166e0
   14000b0ac:	xor    edx,edx
   14000b0ae:	mov    rcx,rdi
   14000b0b1:	call   0x14000b4b0
   14000b0b6:	nop
   14000b0b7:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000b0bc:	jb     0x14000b0c7
   14000b0be:	mov    rcx,QWORD PTR [rbp+0x17]
   14000b0c2:	call   0x1400330c0
   14000b0c7:	mov    QWORD PTR [rbp+0x2f],r14
   14000b0cb:	mov    QWORD PTR [rbp+0x27],0x0
   14000b0d3:	mov    BYTE PTR [rbp+0x17],0x0
   14000b0d7:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b0dc:	jb     0x14000b0e8
   14000b0de:	mov    rcx,QWORD PTR [rbp-0x11]
   14000b0e2:	call   0x1400330c0
   14000b0e7:	nop
   14000b0e8:	cmp    QWORD PTR [rdi+0x80],0x0
   14000b0f0:	jne    0x14000b0f5
   14000b0f2:	xor    r12d,r12d
   14000b0f5:	movzx  eax,r12b
   14000b0f9:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000b0fd:	xor    rcx,rsp
   14000b100:	call   0x140032f00
   14000b105:	lea    r11,[rsp+0xc0]
   14000b10d:	mov    rbx,QWORD PTR [r11+0x28]
   14000b111:	mov    rsi,QWORD PTR [r11+0x30]
   14000b115:	mov    rdi,QWORD PTR [r11+0x38]
   14000b119:	mov    rsp,r11
   14000b11c:	pop    r14
   14000b11e:	pop    r12
   14000b120:	pop    rbp
   14000b121:	ret    
   14000b122:	int3   
   14000b123:	int3   
   14000b124:	int3   
   14000b125:	int3   
   14000b126:	int3   
   14000b127:	int3   
   14000b128:	int3   
   14000b129:	int3   
   14000b12a:	int3   
   14000b12b:	int3   
   14000b12c:	int3   
   14000b12d:	int3   
   14000b12e:	int3   
   14000b12f:	int3   
   14000b130:	rex push rbx
   14000b132:	sub    rsp,0x30
   14000b136:	lea    rax,[rip+0x60a93]        # 0x14006bbd0
   14000b13d:	xor    r9d,r9d
   14000b140:	lea    rcx,[rip+0x60979]        # 0x14006bac0
   14000b147:	mov    QWORD PTR [rsp+0x28],rax
   14000b14c:	lea    rax,[rip+0x6034d]        # 0x14006b4a0
   14000b153:	lea    r8d,[r9+0x6]
   14000b157:	mov    edx,0x15f
   14000b15c:	mov    QWORD PTR [rsp+0x20],rax
   14000b161:	call   0x140003150
   14000b166:	mov    rbx,QWORD PTR [rip+0x7f253]        # 0x14008a3c0
   14000b16d:	test   rbx,rbx
   14000b170:	je     0x14000b1a2
   14000b172:	mov    rdx,QWORD PTR [rbx+0x88]
   14000b179:	test   rdx,rdx
   14000b17c:	je     0x14000b198
   14000b17e:	xor    ecx,ecx
   14000b180:	call   QWORD PTR [rip+0x5d4aa]        # 0x140068630
   14000b186:	mov    QWORD PTR [rbx+0x88],0x0
   14000b191:	mov    rbx,QWORD PTR [rip+0x7f228]        # 0x14008a3c0
   14000b198:	xor    edx,edx
   14000b19a:	mov    rcx,rbx
   14000b19d:	call   0x14000b4b0
   14000b1a2:	add    rsp,0x30
   14000b1a6:	pop    rbx
   14000b1a7:	ret    
   14000b1a8:	int3   
   14000b1a9:	int3   
   14000b1aa:	int3   
   14000b1ab:	int3   
   14000b1ac:	int3   
   14000b1ad:	int3   
   14000b1ae:	int3   
   14000b1af:	int3   
   14000b1b0:	mov    QWORD PTR [rsp+0x10],rsi
   14000b1b5:	push   rdi
   14000b1b6:	sub    rsp,0x40
   14000b1ba:	xor    r9d,r9d
   14000b1bd:	lea    rax,[rip+0x60a1c]        # 0x14006bbe0
   14000b1c4:	mov    rdi,rcx
   14000b1c7:	mov    QWORD PTR [rsp+0x28],rax
   14000b1cc:	lea    rsi,[rip+0x602cd]        # 0x14006b4a0
   14000b1d3:	lea    rcx,[rip+0x608e6]        # 0x14006bac0
   14000b1da:	lea    r8d,[r9+0x5]
   14000b1de:	mov    edx,0x16a
   14000b1e3:	mov    QWORD PTR [rsp+0x20],rsi
   14000b1e8:	call   0x140003150
   14000b1ed:	cmp    QWORD PTR [rdi+0x80],0x0
   14000b1f5:	je     0x14000b2fa
   14000b1fb:	mov    rcx,rdi
   14000b1fe:	mov    QWORD PTR [rsp+0x50],rbx
   14000b203:	call   0x1400166e0
   14000b208:	movzx  ebx,al
   14000b20b:	test   al,al
   14000b20d:	je     0x14000b2bf
   14000b213:	xor    edx,edx
   14000b215:	mov    rcx,rdi
   14000b218:	call   0x14000b310
   14000b21d:	xor    r9d,r9d
   14000b220:	lea    rcx,[rip+0x60899]        # 0x14006bac0
   14000b227:	mov    DWORD PTR [rsp+0x28],eax
   14000b22b:	mov    esi,eax
   14000b22d:	lea    rax,[rip+0x609ec]        # 0x14006bc20
   14000b234:	lea    r8d,[r9+0x6]
   14000b238:	mov    edx,0x177
   14000b23d:	mov    QWORD PTR [rsp+0x20],rax
   14000b242:	call   0x140003150
   14000b247:	mov    eax,DWORD PTR [rdi+0x58]
   14000b24a:	cmp    eax,esi
   14000b24c:	je     0x14000b2ac
   14000b24e:	mov    DWORD PTR [rsp+0x38],esi
   14000b252:	mov    DWORD PTR [rsp+0x30],eax
   14000b256:	mov    eax,DWORD PTR [rdi+0x5c]
   14000b259:	mov    DWORD PTR [rsp+0x28],eax
   14000b25d:	xor    r9d,r9d
   14000b260:	lea    rax,[rip+0x609d1]        # 0x14006bc38
   14000b267:	lea    rcx,[rip+0x60852]        # 0x14006bac0
   14000b26e:	lea    r8d,[r9+0x6]
   14000b272:	mov    edx,0x17b
   14000b277:	mov    QWORD PTR [rsp+0x20],rax
   14000b27c:	call   0x140003150
   14000b281:	mov    r8d,DWORD PTR [rdi+0x5c]
   14000b285:	mov    rdx,QWORD PTR [rdi+0x88]
   14000b28c:	imul   r8d,r8d,0x3e8
   14000b293:	lea    r9,[rip+0xfffffffffffffe96]        # 0x14000b130
   14000b29a:	xor    ecx,ecx
   14000b29c:	mov    DWORD PTR [rdi+0x58],esi
   14000b29f:	call   QWORD PTR [rip+0x5d37b]        # 0x140068620
   14000b2a5:	mov    QWORD PTR [rdi+0x88],rax
   14000b2ac:	movzx  eax,bl
   14000b2af:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b2b4:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b2b9:	add    rsp,0x40
   14000b2bd:	pop    rdi
   14000b2be:	ret    
   14000b2bf:	lea    rax,[rip+0x609aa]        # 0x14006bc70
   14000b2c6:	lea    rcx,[rip+0x607f3]        # 0x14006bac0
   14000b2cd:	xor    r9d,r9d
   14000b2d0:	mov    QWORD PTR [rsp+0x28],rax
   14000b2d5:	xor    r8d,r8d
   14000b2d8:	mov    edx,0x183
   14000b2dd:	mov    QWORD PTR [rsp+0x20],rsi
   14000b2e2:	call   0x140003150
   14000b2e7:	movzx  eax,bl
   14000b2ea:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b2ef:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b2f4:	add    rsp,0x40
   14000b2f8:	pop    rdi
   14000b2f9:	ret    
   14000b2fa:	xor    al,al
   14000b2fc:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b301:	add    rsp,0x40
   14000b305:	pop    rdi
   14000b306:	ret    
   14000b307:	int3   
   14000b308:	int3   
   14000b309:	int3   
   14000b30a:	int3   
   14000b30b:	int3   
   14000b30c:	int3   
   14000b30d:	int3   
   14000b30e:	int3   
   14000b30f:	int3   
   14000b310:	mov    QWORD PTR [rsp+0x18],rsi
   14000b315:	push   rdi
   14000b316:	sub    rsp,0x30
   14000b31a:	mov    rdi,rcx
   14000b31d:	mov    rcx,QWORD PTR [rcx+0x80]
   14000b324:	movzx  esi,dl
   14000b327:	lea    r8,[rsp+0x40]
   14000b32c:	xor    edx,edx
   14000b32e:	mov    DWORD PTR [rsp+0x40],0x0
   14000b336:	call   0x14001eb50
   14000b33b:	test   al,al
   14000b33d:	je     0x14000b498
   14000b343:	mov    QWORD PTR [rsp+0x48],rbx
   14000b348:	mov    ebx,DWORD PTR [rsp+0x40]
   14000b34c:	mov    eax,0x66666667
   14000b351:	imul   ebx
   14000b353:	sar    edx,0x2
   14000b356:	mov    eax,edx
   14000b358:	shr    eax,0x1f
   14000b35b:	add    edx,eax
   14000b35d:	lea    eax,[rdx+rdx*4]
   14000b360:	add    eax,eax
   14000b362:	sub    ebx,eax
   14000b364:	test   sil,sil
   14000b367:	jne    0x14000b45e
   14000b36d:	movss  xmm3,DWORD PTR [rdi+0x48]
   14000b372:	movss  xmm2,DWORD PTR [rdi+0x4c]
   14000b377:	unpcklps xmm3,xmm3
   14000b37a:	cvtps2pd xmm0,xmm3
   14000b37d:	unpcklps xmm2,xmm2
   14000b380:	andpd  xmm0,XMMWORD PTR [rip+0x6c128]        # 0x1400774b0
   14000b388:	cvtsd2ss xmm4,xmm0
   14000b38c:	cvtps2pd xmm0,xmm2
   14000b38f:	andpd  xmm0,XMMWORD PTR [rip+0x6c119]        # 0x1400774b0
   14000b397:	cvtsd2ss xmm5,xmm0
   14000b39b:	comiss xmm4,xmm5
   14000b39e:	jbe    0x14000b3c2
   14000b3a0:	movd   xmm0,DWORD PTR [rdi+0x60]
   14000b3a5:	cvtdq2ps xmm0,xmm0
   14000b3a8:	comiss xmm3,xmm0
   14000b3ab:	jb     0x14000b3c2
   14000b3ad:	movd   xmm0,DWORD PTR [rdi+0x64]
   14000b3b2:	cvtdq2ps xmm0,xmm0
   14000b3b5:	comiss xmm0,xmm3
   14000b3b8:	jb     0x14000b3c2
   14000b3ba:	add    ebx,0xa
   14000b3bd:	jmp    0x14000b45e
   14000b3c2:	comiss xmm5,xmm4
   14000b3c5:	jbe    0x14000b3e6
   14000b3c7:	movd   xmm0,DWORD PTR [rdi+0x68]
   14000b3cc:	cvtdq2ps xmm0,xmm0
   14000b3cf:	comiss xmm2,xmm0
   14000b3d2:	jb     0x14000b3e6
   14000b3d4:	movd   xmm0,DWORD PTR [rdi+0x6c]
   14000b3d9:	cvtdq2ps xmm0,xmm0
   14000b3dc:	comiss xmm0,xmm2
   14000b3df:	jb     0x14000b3e6
   14000b3e1:	add    ebx,0x14
   14000b3e4:	jmp    0x14000b45e
   14000b3e6:	comiss xmm4,xmm5
   14000b3e9:	jbe    0x14000b40a
   14000b3eb:	movd   xmm0,DWORD PTR [rdi+0x70]
   14000b3f0:	cvtdq2ps xmm0,xmm0
   14000b3f3:	comiss xmm3,xmm0
   14000b3f6:	jb     0x14000b40a
   14000b3f8:	movd   xmm0,DWORD PTR [rdi+0x74]
   14000b3fd:	cvtdq2ps xmm0,xmm0
   14000b400:	comiss xmm0,xmm3
   14000b403:	jb     0x14000b40a
   14000b405:	add    ebx,0x1e
   14000b408:	jmp    0x14000b45e
   14000b40a:	comiss xmm5,xmm4
   14000b40d:	jbe    0x14000b42e
   14000b40f:	movd   xmm0,DWORD PTR [rdi+0x78]
   14000b414:	cvtdq2ps xmm0,xmm0
   14000b417:	comiss xmm2,xmm0
   14000b41a:	jb     0x14000b42e
   14000b41c:	movd   xmm0,DWORD PTR [rdi+0x7c]
   14000b421:	cvtdq2ps xmm0,xmm0
   14000b424:	comiss xmm0,xmm2
   14000b427:	jb     0x14000b42e
   14000b429:	add    ebx,0x28
   14000b42c:	jmp    0x14000b45e
   14000b42e:	lea    rax,[rip+0x60873]        # 0x14006bca8
   14000b435:	xor    r9d,r9d
   14000b438:	lea    rcx,[rip+0x60681]        # 0x14006bac0
   14000b43f:	mov    QWORD PTR [rsp+0x28],rax
   14000b444:	lea    rax,[rip+0x60055]        # 0x14006b4a0
   14000b44b:	lea    r8d,[r9+0x5]
   14000b44f:	mov    edx,0x1d3
   14000b454:	mov    QWORD PTR [rsp+0x20],rax
   14000b459:	call   0x140003150
   14000b45e:	xor    r9d,r9d
   14000b461:	lea    rax,[rip+0x60850]        # 0x14006bcb8
   14000b468:	lea    rcx,[rip+0x60651]        # 0x14006bac0
   14000b46f:	lea    r8d,[r9+0x5]
   14000b473:	mov    edx,0x1d7
   14000b478:	mov    DWORD PTR [rsp+0x28],ebx
   14000b47c:	mov    QWORD PTR [rsp+0x20],rax
   14000b481:	call   0x140003150
   14000b486:	mov    eax,ebx
   14000b488:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b48d:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b492:	add    rsp,0x30
   14000b496:	pop    rdi
   14000b497:	ret    
   14000b498:	xor    eax,eax
   14000b49a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b49f:	add    rsp,0x30
   14000b4a3:	pop    rdi
   14000b4a4:	ret    
   14000b4a5:	int3   
   14000b4a6:	int3   
   14000b4a7:	int3   
   14000b4a8:	int3   
   14000b4a9:	int3   
   14000b4aa:	int3   
   14000b4ab:	int3   
   14000b4ac:	int3   
   14000b4ad:	int3   
   14000b4ae:	int3   
   14000b4af:	int3   
   14000b4b0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b4b5:	push   rdi
   14000b4b6:	sub    rsp,0x30
   14000b4ba:	mov    rbx,rcx
   14000b4bd:	call   0x14000b310
   14000b4c2:	mov    rcx,QWORD PTR [rbx+0x80]
   14000b4c9:	lea    r8,[rsp+0x40]
   14000b4ce:	xor    edx,edx
   14000b4d0:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14000b4d8:	mov    edi,eax
   14000b4da:	call   0x14001eb50
   14000b4df:	xor    r9d,r9d
   14000b4e2:	lea    rcx,[rip+0x605d7]        # 0x14006bac0
   14000b4e9:	lea    r8d,[r9+0x6]
   14000b4ed:	cmp    edi,DWORD PTR [rsp+0x40]
   14000b4f1:	je     0x14000b52d
   14000b4f3:	lea    rax,[rip+0x607d6]        # 0x14006bcd0
   14000b4fa:	mov    edx,0x1e3
   14000b4ff:	mov    DWORD PTR [rsp+0x28],edi
   14000b503:	mov    QWORD PTR [rsp+0x20],rax
   14000b508:	call   0x140003150
   14000b50d:	mov    rcx,QWORD PTR [rbx+0x80]
   14000b514:	mov    r8d,edi
   14000b517:	or     edx,0xffffffff
   14000b51a:	call   0x14001ea90
   14000b51f:	mov    DWORD PTR [rbx+0x58],edi
   14000b522:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b527:	add    rsp,0x30
   14000b52b:	pop    rdi
   14000b52c:	ret    
   14000b52d:	lea    rax,[rip+0x607b4]        # 0x14006bce8
   14000b534:	mov    edx,0x1e8
   14000b539:	mov    QWORD PTR [rsp+0x28],rax
   14000b53e:	lea    rax,[rip+0x5ff5b]        # 0x14006b4a0
   14000b545:	mov    QWORD PTR [rsp+0x20],rax
   14000b54a:	call   0x140003150
   14000b54f:	mov    DWORD PTR [rbx+0x58],edi
   14000b552:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b557:	add    rsp,0x30
   14000b55b:	pop    rdi
   14000b55c:	ret    
   14000b55d:	int3   
   14000b55e:	int3   
   14000b55f:	int3   
   14000b560:	mov    rax,rsp
   14000b563:	push   rdi
   14000b564:	sub    rsp,0x160
   14000b56b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b574:	mov    QWORD PTR [rax+0x18],rbx
   14000b578:	mov    QWORD PTR [rax+0x20],rsi
   14000b57c:	mov    rax,QWORD PTR [rip+0x79b25]        # 0x1400850a8
   14000b583:	xor    rax,rsp
   14000b586:	mov    QWORD PTR [rsp+0x150],rax
   14000b58e:	mov    rbx,rdx
   14000b591:	mov    rdi,rcx
   14000b594:	mov    QWORD PTR [rsp+0x30],rdx
   14000b599:	mov    DWORD PTR [rsp+0x20],0x0
   14000b5a1:	mov    QWORD PTR [rdx+0x18],0xf
   14000b5a9:	mov    QWORD PTR [rdx+0x10],0x0
   14000b5b1:	mov    BYTE PTR [rdx],0x0
   14000b5b4:	mov    DWORD PTR [rsp+0x20],0x1
   14000b5bc:	lea    rcx,[rip+0x6058d]        # 0x14006bb50
   14000b5c3:	call   0x14001e1d0
   14000b5c8:	mov    rsi,rax
   14000b5cb:	test   rax,rax
   14000b5ce:	je     0x14000b635
   14000b5d0:	mov    DWORD PTR [rsp+0x24],0x0
   14000b5d8:	mov    BYTE PTR [rsp+0x40],0x0
   14000b5dd:	xor    edx,edx
   14000b5df:	mov    r8d,0x103
   14000b5e5:	lea    rcx,[rsp+0x41]
   14000b5ea:	call   0x140036dc0
   14000b5ef:	lea    r8,[rsp+0x24]
   14000b5f4:	lea    rdx,[rsp+0x40]
   14000b5f9:	mov    rcx,QWORD PTR [rdi+0x80]
   14000b600:	call   0x14001f110
   14000b605:	cmp    BYTE PTR [rsp+0x40],0x7b
   14000b60a:	jne    0x14000b62d
   14000b60c:	xor    eax,eax
   14000b60e:	or     rcx,0xffffffffffffffff
   14000b612:	lea    rdi,[rsp+0x40]
   14000b617:	repnz scas al,BYTE PTR es:[rdi]
   14000b619:	not    rcx
   14000b61c:	lea    r8,[rcx-0x1]
   14000b620:	lea    rdx,[rsp+0x40]
   14000b625:	mov    rcx,rbx
   14000b628:	call   0x140002ba0
   14000b62d:	mov    rcx,rsi
   14000b630:	call   0x14001e810
   14000b635:	mov    rax,rbx
   14000b638:	mov    rcx,QWORD PTR [rsp+0x150]
   14000b640:	xor    rcx,rsp
   14000b643:	call   0x140032f00
   14000b648:	lea    r11,[rsp+0x160]
   14000b650:	mov    rbx,QWORD PTR [r11+0x20]
   14000b654:	mov    rsi,QWORD PTR [r11+0x28]
   14000b658:	mov    rsp,r11
   14000b65b:	pop    rdi
   14000b65c:	ret    
   14000b65d:	int3   
   14000b65e:	int3   
   14000b65f:	int3   
   14000b660:	mov    QWORD PTR [rsp+0x8],rbx
   14000b665:	push   rdi
   14000b666:	sub    rsp,0x20
   14000b66a:	mov    ebx,edx
   14000b66c:	mov    rdi,rcx
   14000b66f:	call   0x14000b690
   14000b674:	test   bl,0x1
   14000b677:	je     0x14000b681
   14000b679:	mov    rcx,rdi
   14000b67c:	call   0x1400330c0
   14000b681:	mov    rax,rdi
   14000b684:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b689:	add    rsp,0x20
   14000b68d:	pop    rdi
   14000b68e:	ret    
   14000b68f:	int3   
   14000b690:	mov    QWORD PTR [rsp+0x8],rbx
   14000b695:	push   rdi
   14000b696:	sub    rsp,0x20
   14000b69a:	lea    rax,[rip+0x608c7]        # 0x14006bf68
   14000b6a1:	mov    rbx,rcx
   14000b6a4:	xor    edi,edi
   14000b6a6:	mov    QWORD PTR [rcx],rax
   14000b6a9:	mov    rcx,QWORD PTR [rcx+0x28]
   14000b6ad:	test   rcx,rcx
   14000b6b0:	je     0x14000b6bc
   14000b6b2:	call   QWORD PTR [rip+0x5cce0]        # 0x140068398
   14000b6b8:	mov    QWORD PTR [rbx+0x28],rdi
   14000b6bc:	mov    rcx,QWORD PTR [rbx+0x20]
   14000b6c0:	test   rcx,rcx
   14000b6c3:	je     0x14000b6cf
   14000b6c5:	call   QWORD PTR [rip+0x5c97d]        # 0x140068048
   14000b6cb:	mov    QWORD PTR [rbx+0x20],rdi
   14000b6cf:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b6d3:	test   rcx,rcx
   14000b6d6:	je     0x14000b6e1
   14000b6d8:	call   0x14001e810
   14000b6dd:	mov    QWORD PTR [rbx+0x8],rdi
   14000b6e1:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b6e5:	test   rcx,rcx
   14000b6e8:	je     0x14000b6f3
   14000b6ea:	call   0x14001e810
   14000b6ef:	mov    QWORD PTR [rbx+0x10],rdi
   14000b6f3:	mov    BYTE PTR [rbx+0x18],dil
   14000b6f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b6fc:	add    rsp,0x20
   14000b700:	pop    rdi
   14000b701:	ret    
   14000b702:	int3   
   14000b703:	int3   
   14000b704:	int3   
   14000b705:	int3   
   14000b706:	int3   
   14000b707:	int3   
   14000b708:	int3   
   14000b709:	int3   
   14000b70a:	int3   
   14000b70b:	int3   
   14000b70c:	int3   
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	mov    rax,rsp
   14000b713:	push   rbp
   14000b714:	push   r12
   14000b716:	push   r14
   14000b718:	lea    rbp,[rax-0x5f]
   14000b71c:	sub    rsp,0xa0
   14000b723:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000b72b:	mov    QWORD PTR [rax+0x10],rbx
   14000b72f:	mov    QWORD PTR [rax+0x18],rsi
   14000b733:	mov    QWORD PTR [rax+0x20],rdi
   14000b737:	mov    rax,QWORD PTR [rip+0x7996a]        # 0x1400850a8
   14000b73e:	xor    rax,rsp
   14000b741:	mov    QWORD PTR [rbp+0x3f],rax
   14000b745:	mov    rdi,rcx
   14000b748:	mov    r14d,0xf
   14000b74e:	mov    QWORD PTR [rbp+0x7],r14
   14000b752:	mov    BYTE PTR [rbp-0x11],0x0
   14000b756:	mov    rcx,QWORD PTR [rip+0x603e3]        # 0x14006bb40
   14000b75d:	mov    QWORD PTR [rbp-0x11],rcx
   14000b761:	mov    eax,DWORD PTR [rip+0x603e1]        # 0x14006bb48
   14000b767:	mov    DWORD PTR [rbp-0x9],eax
   14000b76a:	mov    QWORD PTR [rbp-0x1],0xc
   14000b772:	lea    rax,[rbp-0x11]
   14000b776:	cmp    r14,0x10
   14000b77a:	cmovae rax,rcx
   14000b77e:	mov    BYTE PTR [rax+0xc],0x0
   14000b782:	lea    rcx,[rbp+0x17]
   14000b786:	call   0x14000c350
   14000b78b:	nop
   14000b78c:	or     r12,0xffffffffffffffff
   14000b790:	cmp    QWORD PTR [rbp+0x27],0x0
   14000b795:	je     0x14000b874
   14000b79b:	lea    r8d,[r14-0xe]
   14000b79f:	lea    rdx,[rip+0x60166]        # 0x14006b90c
   14000b7a6:	lea    rcx,[rbp-0x11]
   14000b7aa:	call   0x140008ee0
   14000b7af:	mov    rsi,r12
   14000b7b2:	mov    rax,QWORD PTR [rbp+0x27]
   14000b7b6:	cmp    rax,r12
   14000b7b9:	cmovb  rsi,rax
   14000b7bd:	mov    rax,r12
   14000b7c0:	mov    rcx,QWORD PTR [rbp-0x1]
   14000b7c4:	sub    rax,rcx
   14000b7c7:	cmp    rax,rsi
   14000b7ca:	ja     0x14000b7d9
   14000b7cc:	lea    rcx,[rip+0x5fb7d]        # 0x14006b350
   14000b7d3:	call   0x140032d00
   14000b7d8:	int3   
   14000b7d9:	test   rsi,rsi
   14000b7dc:	je     0x14000b874
   14000b7e2:	lea    rbx,[rsi+rcx*1]
   14000b7e6:	cmp    rbx,0xfffffffffffffffe
   14000b7ea:	jbe    0x14000b7f9
   14000b7ec:	lea    rcx,[rip+0x5fb5d]        # 0x14006b350
   14000b7f3:	call   0x140032d00
   14000b7f8:	int3   
   14000b7f9:	cmp    QWORD PTR [rbp+0x7],rbx
   14000b7fd:	jae    0x14000b810
   14000b7ff:	mov    r8,rcx
   14000b802:	mov    rdx,rbx
   14000b805:	lea    rcx,[rbp-0x11]
   14000b809:	call   0x140002e40
   14000b80e:	jmp    0x14000b829
   14000b810:	test   rbx,rbx
   14000b813:	jne    0x14000b830
   14000b815:	mov    QWORD PTR [rbp-0x1],rbx
   14000b819:	lea    rax,[rbp-0x11]
   14000b81d:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b822:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b827:	mov    BYTE PTR [rax],bl
   14000b829:	mov    rcx,QWORD PTR [rbp-0x1]
   14000b82d:	test   rbx,rbx
   14000b830:	setne  al
   14000b833:	test   al,al
   14000b835:	je     0x14000b874
   14000b837:	lea    rdx,[rbp+0x17]
   14000b83b:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000b840:	cmovae rdx,QWORD PTR [rbp+0x17]
   14000b845:	lea    rax,[rbp-0x11]
   14000b849:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b84e:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b853:	add    rcx,rax
   14000b856:	mov    r8,rsi
   14000b859:	call   0x140033260
   14000b85e:	mov    QWORD PTR [rbp-0x1],rbx
   14000b862:	lea    rax,[rbp-0x11]
   14000b866:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b86b:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b870:	mov    BYTE PTR [rax+rbx*1],0x0
   14000b874:	lea    rcx,[rbp-0x11]
   14000b878:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b87d:	cmovae rcx,QWORD PTR [rbp-0x11]
   14000b882:	call   0x14001e1d0
   14000b887:	mov    QWORD PTR [rdi+0x8],rax
   14000b88b:	test   rax,rax
   14000b88e:	je     0x14000bb70
   14000b894:	lea    rax,[rbp-0x11]
   14000b898:	mov    r9,QWORD PTR [rbp-0x11]
   14000b89c:	mov    rdx,QWORD PTR [rbp+0x7]
   14000b8a0:	cmp    rdx,0x10
   14000b8a4:	cmovae rax,r9
   14000b8a8:	lea    rbx,[rip+0x5ffe1]        # 0x14006b890
   14000b8af:	mov    r8,QWORD PTR [rbp-0x1]
   14000b8b3:	cmp    rbx,rax
   14000b8b6:	jb     0x14000b91c
   14000b8b8:	lea    rax,[rbp-0x11]
   14000b8bc:	cmp    rdx,0x10
   14000b8c0:	cmovae rax,r9
   14000b8c4:	add    rax,r8
   14000b8c7:	cmp    rax,rbx
   14000b8ca:	jbe    0x14000b91c
   14000b8cc:	lea    rax,[rbp-0x11]
   14000b8d0:	cmp    rdx,0x10
   14000b8d4:	cmovae rax,r9
   14000b8d8:	sub    rbx,rax
   14000b8db:	cmp    r8,rbx
   14000b8de:	jae    0x14000b8ed
   14000b8e0:	lea    rcx,[rip+0x5fa51]        # 0x14006b338
   14000b8e7:	call   0x140032d5c
   14000b8ec:	int3   
   14000b8ed:	sub    r8,rbx
   14000b8f0:	mov    esi,0xa
   14000b8f5:	cmp    r8,rsi
   14000b8f8:	cmova  r8,rsi
   14000b8fc:	lea    rdx,[r8+rbx*1]
   14000b900:	mov    r8,r12
   14000b903:	lea    rcx,[rbp-0x11]
   14000b907:	call   0x140002da0
   14000b90c:	mov    r8,rbx
   14000b90f:	xor    edx,edx
   14000b911:	lea    rcx,[rbp-0x11]
   14000b915:	call   0x140002da0
   14000b91a:	jmp    0x14000b970
   14000b91c:	mov    esi,0xa
   14000b921:	cmp    rdx,rsi
   14000b924:	jae    0x14000b939
   14000b926:	mov    edx,esi
   14000b928:	lea    rcx,[rbp-0x11]
   14000b92c:	call   0x140002e40
   14000b931:	mov    rdx,QWORD PTR [rbp+0x7]
   14000b935:	mov    r9,QWORD PTR [rbp-0x11]
   14000b939:	lea    rcx,[rbp-0x11]
   14000b93d:	cmp    rdx,0x10
   14000b941:	cmovae rcx,r9
   14000b945:	mov    rax,QWORD PTR [rip+0x5ff44]        # 0x14006b890
   14000b94c:	mov    QWORD PTR [rcx],rax
   14000b94f:	movzx  eax,WORD PTR [rip+0x5ff42]        # 0x14006b898
   14000b956:	mov    WORD PTR [rcx+0x8],ax
   14000b95a:	mov    QWORD PTR [rbp-0x1],rsi
   14000b95e:	lea    rax,[rbp-0x11]
   14000b962:	cmp    QWORD PTR [rbp+0x7],0x10
   14000b967:	cmovae rax,QWORD PTR [rbp-0x11]
   14000b96c:	mov    BYTE PTR [rax+0xa],0x0
   14000b970:	cmp    QWORD PTR [rbp+0x27],0x0
   14000b975:	je     0x14000ba54
   14000b97b:	mov    r8d,0x1
   14000b981:	lea    rdx,[rip+0x5ff84]        # 0x14006b90c
   14000b988:	lea    rcx,[rbp-0x11]
   14000b98c:	call   0x140008ee0
   14000b991:	mov    rsi,r12
   14000b994:	mov    rax,QWORD PTR [rbp+0x27]
   14000b998:	cmp    rax,0xffffffffffffffff
   14000b99c:	cmovb  rsi,rax
   14000b9a0:	mov    rcx,QWORD PTR [rbp-0x1]
   14000b9a4:	sub    r12,rcx
   14000b9a7:	cmp    r12,rsi
   14000b9aa:	ja     0x14000b9b9
   14000b9ac:	lea    rcx,[rip+0x5f99d]        # 0x14006b350
   14000b9b3:	call   0x140032d00
   14000b9b8:	int3   
   14000b9b9:	test   rsi,rsi
   14000b9bc:	je     0x14000ba54
   14000b9c2:	lea    rbx,[rsi+rcx*1]
   14000b9c6:	cmp    rbx,0xfffffffffffffffe
   14000b9ca:	jbe    0x14000b9d9
   14000b9cc:	lea    rcx,[rip+0x5f97d]        # 0x14006b350
   14000b9d3:	call   0x140032d00
   14000b9d8:	int3   
   14000b9d9:	cmp    QWORD PTR [rbp+0x7],rbx
   14000b9dd:	jae    0x14000b9f0
   14000b9df:	mov    r8,rcx
   14000b9e2:	mov    rdx,rbx
   14000b9e5:	lea    rcx,[rbp-0x11]
   14000b9e9:	call   0x140002e40
   14000b9ee:	jmp    0x14000ba09
   14000b9f0:	test   rbx,rbx
   14000b9f3:	jne    0x14000ba10
   14000b9f5:	mov    QWORD PTR [rbp-0x1],rbx
   14000b9f9:	lea    rax,[rbp-0x11]
   14000b9fd:	cmp    QWORD PTR [rbp+0x7],0x10
   14000ba02:	cmovae rax,QWORD PTR [rbp-0x11]
   14000ba07:	mov    BYTE PTR [rax],bl
   14000ba09:	mov    rcx,QWORD PTR [rbp-0x1]
   14000ba0d:	test   rbx,rbx
   14000ba10:	setne  al
   14000ba13:	test   al,al
   14000ba15:	je     0x14000ba54
   14000ba17:	lea    rdx,[rbp+0x17]
   14000ba1b:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000ba20:	cmovae rdx,QWORD PTR [rbp+0x17]
   14000ba25:	lea    rax,[rbp-0x11]
   14000ba29:	cmp    QWORD PTR [rbp+0x7],0x10
   14000ba2e:	cmovae rax,QWORD PTR [rbp-0x11]
   14000ba33:	add    rcx,rax
   14000ba36:	mov    r8,rsi
   14000ba39:	call   0x140033260
   14000ba3e:	mov    QWORD PTR [rbp-0x1],rbx
   14000ba42:	lea    rax,[rbp-0x11]
   14000ba46:	cmp    QWORD PTR [rbp+0x7],0x10
   14000ba4b:	cmovae rax,QWORD PTR [rbp-0x11]
   14000ba50:	mov    BYTE PTR [rax+rbx*1],0x0
   14000ba54:	lea    rcx,[rbp-0x11]
   14000ba58:	cmp    QWORD PTR [rbp+0x7],0x10
   14000ba5d:	cmovae rcx,QWORD PTR [rbp-0x11]
   14000ba62:	call   0x14001e1d0
   14000ba67:	mov    QWORD PTR [rdi+0x10],rax
   14000ba6b:	lea    rbx,[rdi+0x20]
   14000ba6f:	mov    QWORD PTR [rsp+0x20],rbx
   14000ba74:	mov    r9d,0x11
   14000ba7a:	xor    r8d,r8d
   14000ba7d:	lea    rsi,[rip+0x60344]        # 0x14006bdc8
   14000ba84:	mov    rdx,rsi
   14000ba87:	mov    rcx,0xffffffff80000002
   14000ba8e:	call   QWORD PTR [rip+0x5c5bc]        # 0x140068050
   14000ba94:	cmp    QWORD PTR [rbx],0x0
   14000ba98:	jne    0x14000bacb
   14000ba9a:	mov    DWORD PTR [rsp+0x30],eax
   14000ba9e:	mov    QWORD PTR [rsp+0x28],rsi
   14000baa3:	lea    rax,[rip+0x6033e]        # 0x14006bde8
   14000baaa:	mov    QWORD PTR [rsp+0x20],rax
   14000baaf:	xor    r9d,r9d
   14000bab2:	xor    r8d,r8d
   14000bab5:	lea    edx,[r9+0x43]
   14000bab9:	lea    rcx,[rip+0x60370]        # 0x14006be30
   14000bac0:	call   0x140003150
   14000bac5:	cmp    QWORD PTR [rbx],0x0
   14000bac9:	je     0x14000bb10
   14000bacb:	xor    r9d,r9d
   14000bace:	xor    r8d,r8d
   14000bad1:	xor    edx,edx
   14000bad3:	xor    ecx,ecx
   14000bad5:	call   QWORD PTR [rip+0x5c8a5]        # 0x140068380
   14000badb:	mov    QWORD PTR [rdi+0x28],rax
   14000badf:	test   rax,rax
   14000bae2:	jne    0x14000bb10
   14000bae4:	call   QWORD PTR [rip+0x5c8d6]        # 0x1400683c0
   14000baea:	mov    DWORD PTR [rsp+0x28],eax
   14000baee:	lea    rax,[rip+0x6039b]        # 0x14006be90
   14000baf5:	mov    QWORD PTR [rsp+0x20],rax
   14000bafa:	xor    r9d,r9d
   14000bafd:	xor    r8d,r8d
   14000bb00:	lea    edx,[r9+0x4b]
   14000bb04:	lea    rcx,[rip+0x60325]        # 0x14006be30
   14000bb0b:	call   0x140003150
   14000bb10:	mov    rcx,QWORD PTR [rbx]
   14000bb13:	test   rcx,rcx
   14000bb16:	je     0x14000bb65
   14000bb18:	mov    r9,QWORD PTR [rdi+0x28]
   14000bb1c:	test   r9,r9
   14000bb1f:	je     0x14000bb65
   14000bb21:	mov    DWORD PTR [rsp+0x20],0x1
   14000bb29:	xor    edx,edx
   14000bb2b:	lea    r8d,[rdx+0x4]
   14000bb2f:	call   QWORD PTR [rip+0x5c4cb]        # 0x140068000
   14000bb35:	test   eax,eax
   14000bb37:	je     0x14000bb61
   14000bb39:	mov    DWORD PTR [rsp+0x28],eax
   14000bb3d:	lea    rax,[rip+0x6037c]        # 0x14006bec0
   14000bb44:	mov    QWORD PTR [rsp+0x20],rax
   14000bb49:	xor    r9d,r9d
   14000bb4c:	xor    r8d,r8d
   14000bb4f:	lea    edx,[r9+0x55]
   14000bb53:	lea    rcx,[rip+0x602d6]        # 0x14006be30
   14000bb5a:	call   0x140003150
   14000bb5f:	jmp    0x14000bb65
   14000bb61:	mov    BYTE PTR [rdi+0x18],0x1
   14000bb65:	xor    edx,edx
   14000bb67:	mov    rcx,rdi
   14000bb6a:	call   0x14000bbd0
   14000bb6f:	nop
   14000bb70:	cmp    QWORD PTR [rbp+0x2f],0x10
   14000bb75:	jb     0x14000bb80
   14000bb77:	mov    rcx,QWORD PTR [rbp+0x17]
   14000bb7b:	call   0x1400330c0
   14000bb80:	mov    QWORD PTR [rbp+0x2f],r14
   14000bb84:	mov    QWORD PTR [rbp+0x27],0x0
   14000bb8c:	mov    BYTE PTR [rbp+0x17],0x0
   14000bb90:	cmp    QWORD PTR [rbp+0x7],0x10
   14000bb95:	jb     0x14000bba0
   14000bb97:	mov    rcx,QWORD PTR [rbp-0x11]
   14000bb9b:	call   0x1400330c0
   14000bba0:	movzx  eax,BYTE PTR [rdi+0x18]
   14000bba4:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000bba8:	xor    rcx,rsp
   14000bbab:	call   0x140032f00
   14000bbb0:	lea    r11,[rsp+0xa0]
   14000bbb8:	mov    rbx,QWORD PTR [r11+0x28]
   14000bbbc:	mov    rsi,QWORD PTR [r11+0x30]
   14000bbc0:	mov    rdi,QWORD PTR [r11+0x38]
   14000bbc4:	mov    rsp,r11
   14000bbc7:	pop    r14
   14000bbc9:	pop    r12
   14000bbcb:	pop    rbp
   14000bbcc:	ret    
   14000bbcd:	int3   
   14000bbce:	int3   
   14000bbcf:	int3   
   14000bbd0:	rex push rsi
   14000bbd2:	push   rdi
   14000bbd3:	push   r12
   14000bbd5:	sub    rsp,0x40
   14000bbd9:	lea    rax,[rsp+0x70]
   14000bbde:	mov    rsi,rcx
   14000bbe1:	mov    rcx,QWORD PTR [rcx+0x20]
   14000bbe5:	mov    QWORD PTR [rsp+0x28],rax
   14000bbea:	mov    r12d,edx
   14000bbed:	lea    rax,[rsp+0x60]
   14000bbf2:	mov    QWORD PTR [rsp+0x38],rbx
   14000bbf7:	xor    ebx,ebx
   14000bbf9:	lea    r9,[rsp+0x78]
   14000bbfe:	lea    rdx,[rip+0x6034f]        # 0x14006bf54
   14000bc05:	xor    r8d,r8d
   14000bc08:	mov    QWORD PTR [rsp+0x20],rax
   14000bc0d:	xor    dil,dil
   14000bc10:	mov    DWORD PTR [rsp+0x60],ebx
   14000bc14:	mov    DWORD PTR [rsp+0x78],ebx
   14000bc18:	mov    DWORD PTR [rsp+0x70],0x4
   14000bc20:	call   QWORD PTR [rip+0x5c432]        # 0x140068058
   14000bc26:	cmp    BYTE PTR [rsi+0x18],bl
   14000bc29:	je     0x14000bcf3
   14000bc2f:	mov    QWORD PTR [rsp+0x30],rbp
   14000bc34:	mov    ebp,DWORD PTR [rsp+0x60]
   14000bc38:	cmp    DWORD PTR [rsi+0x1c],ebp
   14000bc3b:	je     0x14000bcee
   14000bc41:	mov    rcx,QWORD PTR [rsi+0x8]
   14000bc45:	lea    r8,[rsp+0x60]
   14000bc4a:	lea    rdx,[rsp+0x70]
   14000bc4f:	mov    DWORD PTR [rsp+0x70],ebx
   14000bc53:	mov    DWORD PTR [rsp+0x60],ebx
   14000bc57:	call   0x14001eb50
   14000bc5c:	test   al,al
   14000bc5e:	je     0x14000bcee
   14000bc64:	mov    eax,ebp
   14000bc66:	dec    eax
   14000bc68:	je     0x14000bc87
   14000bc6a:	dec    eax
   14000bc6c:	je     0x14000bc82
   14000bc6e:	dec    eax
   14000bc70:	je     0x14000bc7b
   14000bc72:	dec    eax
   14000bc74:	jne    0x14000bc87
   14000bc76:	lea    ebx,[rax+0x2]
   14000bc79:	jmp    0x14000bc87
   14000bc7b:	mov    ebx,0x1
   14000bc80:	jmp    0x14000bc87
   14000bc82:	mov    ebx,0x3
   14000bc87:	mov    ecx,DWORD PTR [rsp+0x60]
   14000bc8b:	mov    eax,0x66666667
   14000bc90:	imul   ecx
   14000bc92:	sar    edx,0x2
   14000bc95:	mov    eax,edx
   14000bc97:	shr    eax,0x1f
   14000bc9a:	add    edx,eax
   14000bc9c:	sub    ebx,edx
   14000bc9e:	cmp    DWORD PTR [rsp+0x70],0x0
   14000bca3:	lea    eax,[rbx+rbx*4]
   14000bca6:	lea    ebx,[rcx+rax*2]
   14000bca9:	jne    0x14000bcb4
   14000bcab:	cmp    ecx,ebx
   14000bcad:	je     0x14000bcb4
   14000bcaf:	mov    r8b,0x1
   14000bcb2:	jmp    0x14000bcb7
   14000bcb4:	xor    r8d,r8d
   14000bcb7:	xor    edx,edx
   14000bcb9:	mov    ecx,ebx
   14000bcbb:	call   0x14000bd60
   14000bcc0:	xor    r9d,r9d
   14000bcc3:	lea    rax,[rip+0x60246]        # 0x14006bf10
   14000bcca:	lea    rcx,[rip+0x6015f]        # 0x14006be30
   14000bcd1:	lea    r8d,[r9+0x5]
   14000bcd5:	mov    edx,0xb1
   14000bcda:	mov    DWORD PTR [rsp+0x28],ebx
   14000bcde:	mov    DWORD PTR [rsi+0x1c],ebp
   14000bce1:	mov    dil,0x1
   14000bce4:	mov    QWORD PTR [rsp+0x20],rax
   14000bce9:	call   0x140003150
   14000bcee:	mov    rbp,QWORD PTR [rsp+0x30]
   14000bcf3:	cmp    BYTE PTR [rsi+0x18],0x0
   14000bcf7:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bcfc:	je     0x14000bd4a
   14000bcfe:	test   r12d,r12d
   14000bd01:	je     0x14000bd4a
   14000bd03:	mov    r9,QWORD PTR [rsi+0x28]
   14000bd07:	mov    rcx,QWORD PTR [rsi+0x20]
   14000bd0b:	xor    edx,edx
   14000bd0d:	lea    r8d,[rdx+0x4]
   14000bd11:	mov    DWORD PTR [rsp+0x20],0x1
   14000bd19:	call   QWORD PTR [rip+0x5c2e1]        # 0x140068000
   14000bd1f:	test   eax,eax
   14000bd21:	je     0x14000bd4a
   14000bd23:	mov    DWORD PTR [rsp+0x28],eax
   14000bd27:	lea    rax,[rip+0x60192]        # 0x14006bec0
   14000bd2e:	lea    rcx,[rip+0x600fb]        # 0x14006be30
   14000bd35:	xor    r9d,r9d
   14000bd38:	xor    r8d,r8d
   14000bd3b:	mov    edx,0xbc
   14000bd40:	mov    QWORD PTR [rsp+0x20],rax
   14000bd45:	call   0x140003150
   14000bd4a:	movzx  eax,dil
   14000bd4e:	add    rsp,0x40
   14000bd52:	pop    r12
   14000bd54:	pop    rdi
   14000bd55:	pop    rsi
   14000bd56:	ret    
   14000bd57:	int3   
   14000bd58:	int3   
   14000bd59:	int3   
   14000bd5a:	int3   
   14000bd5b:	int3   
   14000bd5c:	int3   
   14000bd5d:	int3   
   14000bd5e:	int3   
   14000bd5f:	int3   
   14000bd60:	rex push rbp
   14000bd62:	push   rsi
   14000bd63:	push   rdi
   14000bd64:	push   r12
   14000bd66:	push   r13
   14000bd68:	push   r14
   14000bd6a:	push   r15
   14000bd6c:	lea    rbp,[rsp-0x20]
   14000bd71:	sub    rsp,0x120
   14000bd78:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000bd81:	mov    QWORD PTR [rsp+0x170],rbx
   14000bd89:	mov    rax,QWORD PTR [rip+0x79318]        # 0x1400850a8
   14000bd90:	xor    rax,rsp
   14000bd93:	mov    QWORD PTR [rbp+0x10],rax
   14000bd97:	movzx  r13d,r8b
   14000bd9b:	mov    r14d,edx
   14000bd9e:	mov    r12d,ecx
   14000bda1:	lea    rcx,[rbp-0x18]
   14000bda5:	call   0x14000c350
   14000bdaa:	nop
   14000bdab:	xor    r15d,r15d
   14000bdae:	mov    QWORD PTR [rsp+0x30],r15
   14000bdb3:	lea    ecx,[r15+0x50]
   14000bdb7:	call   0x1400331a0
   14000bdbc:	test   rax,rax
   14000bdbf:	je     0x14000c2f2
   14000bdc5:	mov    QWORD PTR [rsp+0x28],rax
   14000bdca:	mov    QWORD PTR [rax],rax
   14000bdcd:	mov    rax,QWORD PTR [rsp+0x28]
   14000bdd2:	mov    QWORD PTR [rax+0x8],rax
   14000bdd6:	mov    rax,QWORD PTR [rsp+0x28]
   14000bddb:	mov    QWORD PTR [rax+0x10],rax
   14000bddf:	mov    rax,QWORD PTR [rsp+0x28]
   14000bde4:	mov    BYTE PTR [rax+0x48],0x1
   14000bde8:	mov    rax,QWORD PTR [rsp+0x28]
   14000bded:	mov    BYTE PTR [rax+0x49],0x1
   14000bdf1:	mov    DWORD PTR [rsp+0x40],r15d
   14000bdf6:	lea    rcx,[rsp+0x20]
   14000bdfb:	call   0x14000ef00
   14000be00:	nop
   14000be01:	mov    esi,r15d
   14000be04:	lea    ebx,[r15+0xf]
   14000be08:	cmp    DWORD PTR [rsp+0x30],r15d
   14000be0d:	jbe    0x14000c162
   14000be13:	mov    r8d,esi
   14000be16:	lea    rdx,[rbp-0x40]
   14000be1a:	lea    rcx,[rsp+0x20]
   14000be1f:	call   0x14000f2e0
   14000be24:	nop
   14000be25:	cmp    QWORD PTR [rbp-0x30],0x0
   14000be2a:	je     0x14000c111
   14000be30:	mov    QWORD PTR [rbp-0x50],rbx
   14000be34:	mov    BYTE PTR [rbp-0x68],0x0
   14000be38:	mov    rcx,QWORD PTR [rip+0x5fd01]        # 0x14006bb40
   14000be3f:	mov    QWORD PTR [rbp-0x68],rcx
   14000be43:	mov    eax,DWORD PTR [rip+0x5fcff]        # 0x14006bb48
   14000be49:	mov    DWORD PTR [rbp-0x60],eax
   14000be4c:	mov    QWORD PTR [rbp-0x58],0xc
   14000be54:	lea    rax,[rbp-0x68]
   14000be58:	cmp    rbx,0x10
   14000be5c:	cmovae rax,rcx
   14000be60:	mov    BYTE PTR [rax+0xc],0x0
   14000be64:	mov    r8d,0x1
   14000be6a:	lea    rdx,[rip+0x5fa9b]        # 0x14006b90c
   14000be71:	lea    rcx,[rbp-0x68]
   14000be75:	call   0x140008ee0
   14000be7a:	or     rdi,0xffffffffffffffff
   14000be7e:	mov    rax,QWORD PTR [rbp-0x30]
   14000be82:	cmp    rax,rdi
   14000be85:	cmovb  rdi,rax
   14000be89:	or     rax,0xffffffffffffffff
   14000be8d:	mov    r8,QWORD PTR [rbp-0x58]
   14000be91:	sub    rax,r8
   14000be94:	cmp    rax,rdi
   14000be97:	jbe    0x14000c155
   14000be9d:	test   rdi,rdi
   14000bea0:	je     0x14000bf37
   14000bea6:	lea    rbx,[rdi+r8*1]
   14000beaa:	cmp    rbx,0xfffffffffffffffe
   14000beae:	ja     0x14000c12e
   14000beb4:	mov    rcx,QWORD PTR [rbp-0x50]
   14000beb8:	cmp    rcx,rbx
   14000bebb:	jae    0x14000becb
   14000bebd:	mov    rdx,rbx
   14000bec0:	lea    rcx,[rbp-0x68]
   14000bec4:	call   0x140002e40
   14000bec9:	jmp    0x14000bee3
   14000becb:	test   rbx,rbx
   14000bece:	jne    0x14000beee
   14000bed0:	mov    QWORD PTR [rbp-0x58],r15
   14000bed4:	lea    rax,[rbp-0x68]
   14000bed8:	cmp    rcx,0x10
   14000bedc:	cmovae rax,QWORD PTR [rbp-0x68]
   14000bee1:	mov    BYTE PTR [rax],bl
   14000bee3:	mov    r8,QWORD PTR [rbp-0x58]
   14000bee7:	mov    rcx,QWORD PTR [rbp-0x50]
   14000beeb:	test   rbx,rbx
   14000beee:	setne  al
   14000bef1:	test   al,al
   14000bef3:	je     0x14000bf32
   14000bef5:	lea    rdx,[rbp-0x40]
   14000bef9:	cmp    QWORD PTR [rbp-0x28],0x10
   14000befe:	cmovae rdx,QWORD PTR [rbp-0x40]
   14000bf03:	lea    rax,[rbp-0x68]
   14000bf07:	cmp    rcx,0x10
   14000bf0b:	cmovae rax,QWORD PTR [rbp-0x68]
   14000bf10:	lea    rcx,[r8+rax*1]
   14000bf14:	mov    r8,rdi
   14000bf17:	call   0x140033260
   14000bf1c:	mov    QWORD PTR [rbp-0x58],rbx
   14000bf20:	lea    rax,[rbp-0x68]
   14000bf24:	cmp    QWORD PTR [rbp-0x50],0x10
   14000bf29:	cmovae rax,QWORD PTR [rbp-0x68]
   14000bf2e:	mov    BYTE PTR [rbx+rax*1],0x0
   14000bf32:	mov    ebx,0xf
   14000bf37:	mov    QWORD PTR [rbp-0x78],rbx
   14000bf3b:	mov    BYTE PTR [rsp+0x70],0x0
   14000bf40:	mov    rcx,QWORD PTR [rip+0x5f949]        # 0x14006b890
   14000bf47:	mov    QWORD PTR [rsp+0x70],rcx
   14000bf4c:	movzx  eax,WORD PTR [rip+0x5f945]        # 0x14006b898
   14000bf53:	mov    WORD PTR [rsp+0x78],ax
   14000bf58:	mov    QWORD PTR [rbp-0x80],0xa
   14000bf60:	lea    rax,[rsp+0x70]
   14000bf65:	cmp    rbx,0x10
   14000bf69:	cmovae rax,rcx
   14000bf6d:	mov    BYTE PTR [rax+0xa],0x0
   14000bf71:	mov    r8d,0x1
   14000bf77:	lea    rdx,[rip+0x5f98e]        # 0x14006b90c
   14000bf7e:	lea    rcx,[rsp+0x70]
   14000bf83:	call   0x140008ee0
   14000bf88:	or     rdi,0xffffffffffffffff
   14000bf8c:	mov    rax,QWORD PTR [rbp-0x30]
   14000bf90:	cmp    rax,rdi
   14000bf93:	cmovb  rdi,rax
   14000bf97:	or     rax,0xffffffffffffffff
   14000bf9b:	mov    r8,QWORD PTR [rbp-0x80]
   14000bf9f:	sub    rax,r8
   14000bfa2:	cmp    rax,rdi
   14000bfa5:	jbe    0x14000c148
   14000bfab:	test   rdi,rdi
   14000bfae:	je     0x14000c047
   14000bfb4:	lea    rbx,[rdi+r8*1]
   14000bfb8:	cmp    rbx,0xfffffffffffffffe
   14000bfbc:	ja     0x14000c13b
   14000bfc2:	mov    rcx,QWORD PTR [rbp-0x78]
   14000bfc6:	cmp    rcx,rbx
   14000bfc9:	jae    0x14000bfda
   14000bfcb:	mov    rdx,rbx
   14000bfce:	lea    rcx,[rsp+0x70]
   14000bfd3:	call   0x140002e40
   14000bfd8:	jmp    0x14000bff4
   14000bfda:	test   rbx,rbx
   14000bfdd:	jne    0x14000bfff
   14000bfdf:	mov    QWORD PTR [rbp-0x80],r15
   14000bfe3:	lea    rax,[rsp+0x70]
   14000bfe8:	cmp    rcx,0x10
   14000bfec:	cmovae rax,QWORD PTR [rsp+0x70]
   14000bff2:	mov    BYTE PTR [rax],bl
   14000bff4:	mov    r8,QWORD PTR [rbp-0x80]
   14000bff8:	mov    rcx,QWORD PTR [rbp-0x78]
   14000bffc:	test   rbx,rbx
   14000bfff:	setne  al
   14000c002:	test   al,al
   14000c004:	je     0x14000c047
   14000c006:	lea    rdx,[rbp-0x40]
   14000c00a:	cmp    QWORD PTR [rbp-0x28],0x10
   14000c00f:	cmovae rdx,QWORD PTR [rbp-0x40]
   14000c014:	lea    rax,[rsp+0x70]
   14000c019:	cmp    rcx,0x10
   14000c01d:	cmovae rax,QWORD PTR [rsp+0x70]
   14000c023:	lea    rcx,[rax+r8*1]
   14000c027:	mov    r8,rdi
   14000c02a:	call   0x140033260
   14000c02f:	mov    QWORD PTR [rbp-0x80],rbx
   14000c033:	lea    rax,[rsp+0x70]
   14000c038:	cmp    QWORD PTR [rbp-0x78],0x10
   14000c03d:	cmovae rax,QWORD PTR [rsp+0x70]
   14000c043:	mov    BYTE PTR [rax+rbx*1],0x0
   14000c047:	lea    rcx,[rbp-0x68]
   14000c04b:	cmp    QWORD PTR [rbp-0x50],0x10
   14000c050:	cmovae rcx,QWORD PTR [rbp-0x68]
   14000c055:	call   0x14001e1d0
   14000c05a:	mov    rbx,rax
   14000c05d:	lea    rcx,[rsp+0x70]
   14000c062:	cmp    QWORD PTR [rbp-0x78],0x10
   14000c067:	cmovae rcx,QWORD PTR [rsp+0x70]
   14000c06d:	call   0x14001e1d0
   14000c072:	mov    rdi,rax
   14000c075:	test   rbx,rbx
   14000c078:	je     0x14000c0dd
   14000c07a:	test   rax,rax
   14000c07d:	je     0x14000c0dd
   14000c07f:	mov    rcx,rbx
   14000c082:	test   r13b,r13b
   14000c085:	je     0x14000c0b9
   14000c087:	xor    edx,edx
   14000c089:	call   0x14001f230
   14000c08e:	mov    r8d,r12d
   14000c091:	mov    edx,r14d
   14000c094:	mov    rcx,rbx
   14000c097:	call   0x14001ea90
   14000c09c:	mov    edx,0x1
   14000c0a1:	mov    rcx,rbx
   14000c0a4:	call   0x14001f230
   14000c0a9:	mov    r8d,r12d
   14000c0ac:	mov    edx,r14d
   14000c0af:	mov    rcx,rdi
   14000c0b2:	call   0x14001ea90
   14000c0b7:	jmp    0x14000c0cc
   14000c0b9:	mov    edx,r12d
   14000c0bc:	call   0x14001f2e0
   14000c0c1:	mov    edx,r12d
   14000c0c4:	mov    rcx,rdi
   14000c0c7:	call   0x14001f2e0
   14000c0cc:	mov    rcx,rbx
   14000c0cf:	call   0x14001e810
   14000c0d4:	mov    rcx,rdi
   14000c0d7:	call   0x14001e810
   14000c0dc:	nop
   14000c0dd:	cmp    QWORD PTR [rbp-0x78],0x10
   14000c0e2:	jb     0x14000c0ee
   14000c0e4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000c0e9:	call   0x1400330c0
   14000c0ee:	mov    ebx,0xf
   14000c0f3:	mov    QWORD PTR [rbp-0x78],rbx
   14000c0f7:	mov    QWORD PTR [rbp-0x80],r15
   14000c0fb:	mov    BYTE PTR [rsp+0x70],0x0
   14000c100:	cmp    QWORD PTR [rbp-0x50],0x10
   14000c105:	jb     0x14000c111
   14000c107:	mov    rcx,QWORD PTR [rbp-0x68]
   14000c10b:	call   0x1400330c0
   14000c110:	nop
   14000c111:	cmp    QWORD PTR [rbp-0x28],0x10
   14000c116:	jb     0x14000c121
   14000c118:	mov    rcx,QWORD PTR [rbp-0x40]
   14000c11c:	call   0x1400330c0
   14000c121:	inc    esi
   14000c123:	cmp    esi,DWORD PTR [rsp+0x30]
   14000c127:	jae    0x14000c162
   14000c129:	jmp    0x14000be13
   14000c12e:	lea    rcx,[rip+0x5f21b]        # 0x14006b350
   14000c135:	call   0x140032d00
   14000c13a:	nop
   14000c13b:	lea    rcx,[rip+0x5f20e]        # 0x14006b350
   14000c142:	call   0x140032d00
   14000c147:	int3   
   14000c148:	lea    rcx,[rip+0x5f201]        # 0x14006b350
   14000c14f:	call   0x140032d00
   14000c154:	nop
   14000c155:	lea    rcx,[rip+0x5f1f4]        # 0x14006b350
   14000c15c:	call   0x140032d00
   14000c161:	nop
   14000c162:	mov    rax,QWORD PTR [rsp+0x28]
   14000c167:	mov    rbx,QWORD PTR [rax+0x8]
   14000c16b:	mov    rdi,rbx
   14000c16e:	cmp    BYTE PTR [rbx+0x49],0x0
   14000c172:	jne    0x14000c1c7
   14000c174:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c180:	mov    rdx,QWORD PTR [rdi+0x10]
   14000c184:	lea    rcx,[rsp+0x20]
   14000c189:	call   0x140011a50
   14000c18e:	mov    rdi,QWORD PTR [rdi]
   14000c191:	cmp    QWORD PTR [rbx+0x38],0x10
   14000c196:	jb     0x14000c1a1
   14000c198:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c19c:	call   0x1400330c0
   14000c1a1:	mov    QWORD PTR [rbx+0x38],0xf
   14000c1a9:	mov    QWORD PTR [rbx+0x30],r15
   14000c1ad:	mov    BYTE PTR [rbx+0x20],0x0
   14000c1b1:	mov    rcx,rbx
   14000c1b4:	call   0x1400330c0
   14000c1b9:	mov    rbx,rdi
   14000c1bc:	cmp    BYTE PTR [rdi+0x49],0x0
   14000c1c0:	je     0x14000c180
   14000c1c2:	mov    rax,QWORD PTR [rsp+0x28]
   14000c1c7:	mov    QWORD PTR [rax+0x8],rax
   14000c1cb:	mov    rax,QWORD PTR [rsp+0x28]
   14000c1d0:	mov    QWORD PTR [rax],rax
   14000c1d3:	mov    rax,QWORD PTR [rsp+0x28]
   14000c1d8:	mov    QWORD PTR [rax+0x10],rax
   14000c1dc:	mov    QWORD PTR [rsp+0x30],r15
   14000c1e1:	mov    rdi,QWORD PTR [rsp+0x28]
   14000c1e6:	mov    rbx,QWORD PTR [rdi]
   14000c1e9:	cmp    rbx,rbx
   14000c1ec:	jne    0x14000c263
   14000c1ee:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c1f2:	mov    rsi,rbx
   14000c1f5:	cmp    BYTE PTR [rbx+0x49],0x0
   14000c1f9:	jne    0x14000c247
   14000c1fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c200:	mov    rdx,QWORD PTR [rsi+0x10]
   14000c204:	lea    rcx,[rsp+0x20]
   14000c209:	call   0x140011a50
   14000c20e:	mov    rsi,QWORD PTR [rsi]
   14000c211:	cmp    QWORD PTR [rbx+0x38],0x10
   14000c216:	jb     0x14000c221
   14000c218:	mov    rcx,QWORD PTR [rbx+0x20]
   14000c21c:	call   0x1400330c0
   14000c221:	mov    QWORD PTR [rbx+0x38],0xf
   14000c229:	mov    QWORD PTR [rbx+0x30],r15
   14000c22d:	mov    BYTE PTR [rbx+0x20],0x0
   14000c231:	mov    rcx,rbx
   14000c234:	call   0x1400330c0
   14000c239:	mov    rbx,rsi
   14000c23c:	cmp    BYTE PTR [rsi+0x49],0x0
   14000c240:	je     0x14000c200
   14000c242:	mov    rdi,QWORD PTR [rsp+0x28]
   14000c247:	mov    QWORD PTR [rdi+0x8],rdi
   14000c24b:	mov    rax,QWORD PTR [rsp+0x28]
   14000c250:	mov    QWORD PTR [rax],rax
   14000c253:	mov    rax,QWORD PTR [rsp+0x28]
   14000c258:	mov    QWORD PTR [rax+0x10],rax
   14000c25c:	mov    QWORD PTR [rsp+0x30],r15
   14000c261:	jmp    0x14000c2d2
   14000c263:	cmp    rbx,rdi
   14000c266:	je     0x14000c2d7
   14000c268:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c270:	mov    r8,rbx
   14000c273:	cmp    BYTE PTR [rbx+0x49],0x0
   14000c277:	jne    0x14000c2be
   14000c279:	mov    rax,QWORD PTR [rbx+0x10]
   14000c27d:	cmp    BYTE PTR [rax+0x49],0x0
   14000c281:	jne    0x14000c29e
   14000c283:	mov    rbx,rax
   14000c286:	mov    rax,QWORD PTR [rax]
   14000c289:	cmp    BYTE PTR [rax+0x49],0x0
   14000c28d:	jne    0x14000c2be
   14000c28f:	nop
   14000c290:	mov    rbx,rax
   14000c293:	mov    rax,QWORD PTR [rax]
   14000c296:	cmp    BYTE PTR [rax+0x49],0x0
   14000c29a:	je     0x14000c290
   14000c29c:	jmp    0x14000c2be
   14000c29e:	mov    rax,QWORD PTR [rbx+0x8]
   14000c2a2:	cmp    BYTE PTR [rax+0x49],0x0
   14000c2a6:	jne    0x14000c2bb
   14000c2a8:	cmp    rbx,QWORD PTR [rax+0x10]
   14000c2ac:	jne    0x14000c2bb
   14000c2ae:	mov    rbx,rax
   14000c2b1:	mov    rax,QWORD PTR [rax+0x8]
   14000c2b5:	cmp    BYTE PTR [rax+0x49],0x0
   14000c2b9:	je     0x14000c2a8
   14000c2bb:	mov    rbx,rax
   14000c2be:	lea    rdx,[rsp+0x48]
   14000c2c3:	lea    rcx,[rsp+0x20]
   14000c2c8:	call   0x140011560
   14000c2cd:	cmp    rbx,rdi
   14000c2d0:	jne    0x14000c270
   14000c2d2:	mov    rdi,QWORD PTR [rsp+0x28]
   14000c2d7:	mov    rcx,rdi
   14000c2da:	call   0x1400330c0
   14000c2df:	nop
   14000c2e0:	cmp    QWORD PTR [rbp+0x0],0x10
   14000c2e5:	jb     0x14000c324
   14000c2e7:	mov    rcx,QWORD PTR [rbp-0x18]
   14000c2eb:	call   0x1400330c0
   14000c2f0:	jmp    0x14000c324
   14000c2f2:	mov    QWORD PTR [rsp+0x48],r15
   14000c2f7:	lea    rdx,[rsp+0x48]
   14000c2fc:	lea    rcx,[rsp+0x58]
   14000c301:	call   0x140032fd4
   14000c306:	lea    r11,[rip+0x5c583]        # 0x140068890
   14000c30d:	mov    QWORD PTR [rsp+0x58],r11
   14000c312:	lea    rdx,[rip+0x77107]        # 0x140083420
   14000c319:	lea    rcx,[rsp+0x58]
   14000c31e:	call   0x140036358
   14000c323:	nop
   14000c324:	mov    rcx,QWORD PTR [rbp+0x10]
   14000c328:	xor    rcx,rsp
   14000c32b:	call   0x140032f00
   14000c330:	mov    rbx,QWORD PTR [rsp+0x170]
   14000c338:	add    rsp,0x120
   14000c33f:	pop    r15
   14000c341:	pop    r14
   14000c343:	pop    r13
   14000c345:	pop    r12
   14000c347:	pop    rdi
   14000c348:	pop    rsi
   14000c349:	pop    rbp
   14000c34a:	ret    
   14000c34b:	int3   
   14000c34c:	int3   
   14000c34d:	int3   
   14000c34e:	int3   
   14000c34f:	int3   
   14000c350:	mov    rax,rsp
   14000c353:	push   rdi
   14000c354:	sub    rsp,0x160
   14000c35b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000c364:	mov    QWORD PTR [rax+0x10],rbx
   14000c368:	mov    QWORD PTR [rax+0x18],rsi
   14000c36c:	mov    rax,QWORD PTR [rip+0x78d35]        # 0x1400850a8
   14000c373:	xor    rax,rsp
   14000c376:	mov    QWORD PTR [rsp+0x150],rax
   14000c37e:	mov    rbx,rcx
   14000c381:	mov    QWORD PTR [rsp+0x30],rcx
   14000c386:	xor    edi,edi
   14000c388:	mov    DWORD PTR [rsp+0x20],edi
   14000c38c:	mov    QWORD PTR [rcx+0x18],0xf
   14000c394:	mov    QWORD PTR [rcx+0x10],rdi
   14000c398:	mov    BYTE PTR [rcx],dil
   14000c39b:	mov    DWORD PTR [rsp+0x20],0x1
   14000c3a3:	lea    rcx,[rip+0x5f796]        # 0x14006bb40
   14000c3aa:	call   0x14001e1d0
   14000c3af:	mov    rsi,rax
   14000c3b2:	test   rax,rax
   14000c3b5:	je     0x14000c414
   14000c3b7:	mov    DWORD PTR [rsp+0x24],edi
   14000c3bb:	mov    BYTE PTR [rsp+0x40],dil
   14000c3c0:	xor    edx,edx
   14000c3c2:	mov    r8d,0x103
   14000c3c8:	lea    rcx,[rsp+0x41]
   14000c3cd:	call   0x140036dc0
   14000c3d2:	lea    r8,[rsp+0x24]
   14000c3d7:	lea    rdx,[rsp+0x40]
   14000c3dc:	mov    rcx,rsi
   14000c3df:	call   0x14001f110
   14000c3e4:	cmp    BYTE PTR [rsp+0x40],0x7b
   14000c3e9:	jne    0x14000c40c
   14000c3eb:	xor    eax,eax
   14000c3ed:	or     rcx,0xffffffffffffffff
   14000c3f1:	lea    rdi,[rsp+0x40]
   14000c3f6:	repnz scas al,BYTE PTR es:[rdi]
   14000c3f8:	not    rcx
   14000c3fb:	lea    r8,[rcx-0x1]
   14000c3ff:	lea    rdx,[rsp+0x40]
   14000c404:	mov    rcx,rbx
   14000c407:	call   0x140002ba0
   14000c40c:	mov    rcx,rsi
   14000c40f:	call   0x14001e810
   14000c414:	mov    rax,rbx
   14000c417:	mov    rcx,QWORD PTR [rsp+0x150]
   14000c41f:	xor    rcx,rsp
   14000c422:	call   0x140032f00
   14000c427:	lea    r11,[rsp+0x160]
   14000c42f:	mov    rbx,QWORD PTR [r11+0x18]
   14000c433:	mov    rsi,QWORD PTR [r11+0x20]
   14000c437:	mov    rsp,r11
   14000c43a:	pop    rdi
   14000c43b:	ret    
   14000c43c:	int3   
   14000c43d:	int3   
   14000c43e:	int3   
   14000c43f:	int3   
   14000c440:	mov    QWORD PTR [rsp+0x8],rbx
   14000c445:	push   rdi
   14000c446:	sub    rsp,0x20
   14000c44a:	lea    rax,[rip+0x5fc47]        # 0x14006c098
   14000c451:	mov    ebx,edx
   14000c453:	mov    edx,0x3e8
   14000c458:	mov    QWORD PTR [rcx],rax
   14000c45b:	mov    rdi,rcx
   14000c45e:	call   0x14000c640
   14000c463:	test   bl,0x1
   14000c466:	je     0x14000c470
   14000c468:	mov    rcx,rdi
   14000c46b:	call   0x1400330c0
   14000c470:	mov    rax,rdi
   14000c473:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c478:	add    rsp,0x20
   14000c47c:	pop    rdi
   14000c47d:	ret    
   14000c47e:	int3   
   14000c47f:	int3   
   14000c480:	lea    rax,[rip+0x5fc11]        # 0x14006c098
   14000c487:	mov    edx,0x3e8
   14000c48c:	mov    QWORD PTR [rcx],rax
   14000c48f:	jmp    0x14000c640
   14000c494:	int3   
   14000c495:	int3   
   14000c496:	int3   
   14000c497:	int3   
   14000c498:	int3   
   14000c499:	int3   
   14000c49a:	int3   
   14000c49b:	int3   
   14000c49c:	int3   
   14000c49d:	int3   
   14000c49e:	int3   
   14000c49f:	int3   
   14000c4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4a5:	push   rdi
   14000c4a6:	sub    rsp,0x30
   14000c4aa:	xor    r9d,r9d
   14000c4ad:	lea    rax,[rip+0x5fabc]        # 0x14006bf70
   14000c4b4:	mov    rbx,rcx
   14000c4b7:	mov    QWORD PTR [rsp+0x28],rax
   14000c4bc:	lea    rdi,[rip+0x5efdd]        # 0x14006b4a0
   14000c4c3:	lea    rcx,[rip+0x5fac6]        # 0x14006bf90
   14000c4ca:	lea    edx,[r9+0x13]
   14000c4ce:	lea    r8d,[r9+0x3]
   14000c4d2:	mov    QWORD PTR [rsp+0x20],rdi
   14000c4d7:	call   0x140003150
   14000c4dc:	test   rbx,rbx
   14000c4df:	je     0x14000c51d
   14000c4e1:	xor    r9d,r9d
   14000c4e4:	lea    rax,[rip+0x5faf5]        # 0x14006bfe0
   14000c4eb:	lea    rcx,[rip+0x5fa9e]        # 0x14006bf90
   14000c4f2:	mov    QWORD PTR [rsp+0x28],rax
   14000c4f7:	lea    edx,[r9+0x1b]
   14000c4fb:	lea    r8d,[r9+0x3]
   14000c4ff:	mov    QWORD PTR [rsp+0x20],rdi
   14000c504:	call   0x140003150
   14000c509:	mov    r11,QWORD PTR [rbx]
   14000c50c:	mov    rcx,rbx
   14000c50f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c514:	add    rsp,0x30
   14000c518:	pop    rdi
   14000c519:	rex.WB jmp QWORD PTR [r11+0x18]
   14000c51d:	xor    eax,eax
   14000c51f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c524:	add    rsp,0x30
   14000c528:	pop    rdi
   14000c529:	ret    
   14000c52a:	int3   
   14000c52b:	int3   
   14000c52c:	int3   
   14000c52d:	int3   
   14000c52e:	int3   
   14000c52f:	int3   
   14000c530:	mov    QWORD PTR [rsp+0x8],rbx
   14000c535:	push   rdi
   14000c536:	sub    rsp,0x30
   14000c53a:	xor    r9d,r9d
   14000c53d:	lea    rax,[rip+0x5faac]        # 0x14006bff0
   14000c544:	mov    rbx,rcx
   14000c547:	mov    QWORD PTR [rsp+0x28],rax
   14000c54c:	lea    rdi,[rip+0x5ef4d]        # 0x14006b4a0
   14000c553:	lea    rcx,[rip+0x5fa36]        # 0x14006bf90
   14000c55a:	lea    edx,[r9+0x25]
   14000c55e:	lea    r8d,[r9+0x3]
   14000c562:	mov    QWORD PTR [rsp+0x20],rdi
   14000c567:	call   0x140003150
   14000c56c:	cmp    QWORD PTR [rbx+0x10],0x0
   14000c571:	mov    BYTE PTR [rbx+0x1c],0x0
   14000c575:	jne    0x14000c5ba
   14000c577:	xor    r9d,r9d
   14000c57a:	lea    rax,[rip+0x5fa87]        # 0x14006c008
   14000c581:	lea    rcx,[rip+0x5fa08]        # 0x14006bf90
   14000c588:	mov    QWORD PTR [rsp+0x28],rax
   14000c58d:	lea    edx,[r9+0x2b]
   14000c591:	lea    r8d,[r9+0x3]
   14000c595:	mov    QWORD PTR [rsp+0x20],rdi
   14000c59a:	call   0x140003150
   14000c59f:	xor    r9d,r9d
   14000c5a2:	lea    edx,[r9+0x1]
   14000c5a6:	xor    r8d,r8d
   14000c5a9:	xor    ecx,ecx
   14000c5ab:	call   QWORD PTR [rip+0x5bdcf]        # 0x140068380
   14000c5b1:	mov    QWORD PTR [rbx+0x10],rax
   14000c5b5:	test   rax,rax
   14000c5b8:	je     0x14000c62d
   14000c5ba:	cmp    QWORD PTR [rbx+0x8],0x0
   14000c5bf:	jne    0x14000c612
   14000c5c1:	xor    r9d,r9d
   14000c5c4:	lea    rax,[rip+0x5fa4d]        # 0x14006c018
   14000c5cb:	lea    rcx,[rip+0x5f9be]        # 0x14006bf90
   14000c5d2:	mov    QWORD PTR [rsp+0x28],rax
   14000c5d7:	lea    edx,[r9+0x33]
   14000c5db:	lea    r8d,[r9+0x3]
   14000c5df:	mov    QWORD PTR [rsp+0x20],rdi
   14000c5e4:	call   0x140003150
   14000c5e9:	lea    r11,[rbx+0x18]
   14000c5ed:	mov    QWORD PTR [rsp+0x28],r11
   14000c5f2:	lea    r8,[rip+0xfffffffffffffea7]        # 0x14000c4a0
   14000c5f9:	mov    r9,rbx
   14000c5fc:	xor    edx,edx
   14000c5fe:	xor    ecx,ecx
   14000c600:	mov    DWORD PTR [rsp+0x20],0x0
   14000c608:	call   QWORD PTR [rip+0x5bdda]        # 0x1400683e8
   14000c60e:	mov    QWORD PTR [rbx+0x8],rax
   14000c612:	cmp    QWORD PTR [rbx+0x10],0x0
   14000c617:	je     0x14000c62d
   14000c619:	cmp    QWORD PTR [rbx+0x8],0x0
   14000c61e:	je     0x14000c62d
   14000c620:	mov    al,0x1
   14000c622:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c627:	add    rsp,0x30
   14000c62b:	pop    rdi
   14000c62c:	ret    
   14000c62d:	xor    al,al
   14000c62f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c634:	add    rsp,0x30
   14000c638:	pop    rdi
   14000c639:	ret    
   14000c63a:	int3   
   14000c63b:	int3   
   14000c63c:	int3   
   14000c63d:	int3   
   14000c63e:	int3   
   14000c63f:	int3   
   14000c640:	mov    QWORD PTR [rsp+0x8],rbx
   14000c645:	mov    QWORD PTR [rsp+0x10],rbp
   14000c64a:	push   rdi
   14000c64b:	sub    rsp,0x30
   14000c64f:	xor    r9d,r9d
   14000c652:	lea    rax,[rip+0x5f9cf]        # 0x14006c028
   14000c659:	mov    edi,edx
   14000c65b:	mov    rbx,rcx
   14000c65e:	mov    QWORD PTR [rsp+0x28],rax
   14000c663:	lea    rbp,[rip+0x5ee36]        # 0x14006b4a0
   14000c66a:	lea    edx,[r9+0x3d]
   14000c66e:	lea    r8d,[r9+0x3]
   14000c672:	lea    rcx,[rip+0x5f917]        # 0x14006bf90
   14000c679:	mov    QWORD PTR [rsp+0x20],rbp
   14000c67e:	call   0x140003150
   14000c683:	cmp    QWORD PTR [rbx+0x10],0x0
   14000c688:	mov    BYTE PTR [rbx+0x1c],0x1
   14000c68c:	je     0x14000c6c0
   14000c68e:	xor    r9d,r9d
   14000c691:	lea    rax,[rip+0x5f9a8]        # 0x14006c040
   14000c698:	lea    rcx,[rip+0x5f8f1]        # 0x14006bf90
   14000c69f:	mov    QWORD PTR [rsp+0x28],rax
   14000c6a4:	lea    edx,[r9+0x43]
   14000c6a8:	lea    r8d,[r9+0x3]
   14000c6ac:	mov    QWORD PTR [rsp+0x20],rbp
   14000c6b1:	call   0x140003150
   14000c6b6:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c6ba:	call   QWORD PTR [rip+0x5bd38]        # 0x1400683f8
   14000c6c0:	cmp    QWORD PTR [rbx+0x8],0x0
   14000c6c5:	je     0x14000c73d
   14000c6c7:	xor    r9d,r9d
   14000c6ca:	lea    rax,[rip+0x5f97f]        # 0x14006c050
   14000c6d1:	lea    rcx,[rip+0x5f8b8]        # 0x14006bf90
   14000c6d8:	mov    QWORD PTR [rsp+0x28],rax
   14000c6dd:	lea    edx,[r9+0x49]
   14000c6e1:	lea    r8d,[r9+0x3]
   14000c6e5:	mov    QWORD PTR [rsp+0x20],rbp
   14000c6ea:	call   0x140003150
   14000c6ef:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c6f3:	mov    edx,edi
   14000c6f5:	call   QWORD PTR [rip+0x5baed]        # 0x1400681e8
   14000c6fb:	test   eax,eax
   14000c6fd:	je     0x14000c72b
   14000c6ff:	call   QWORD PTR [rip+0x5bcbb]        # 0x1400683c0
   14000c705:	xor    r9d,r9d
   14000c708:	lea    rcx,[rip+0x5f881]        # 0x14006bf90
   14000c70f:	mov    DWORD PTR [rsp+0x28],eax
   14000c713:	lea    rax,[rip+0x5f94e]        # 0x14006c068
   14000c71a:	lea    edx,[r9+0x4d]
   14000c71e:	xor    r8d,r8d
   14000c721:	mov    QWORD PTR [rsp+0x20],rax
   14000c726:	call   0x140003150
   14000c72b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c72f:	call   QWORD PTR [rip+0x5bc63]        # 0x140068398
   14000c735:	mov    QWORD PTR [rbx+0x8],0x0
   14000c73d:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c741:	test   rcx,rcx
   14000c744:	je     0x14000c754
   14000c746:	call   QWORD PTR [rip+0x5bc4c]        # 0x140068398
   14000c74c:	mov    QWORD PTR [rbx+0x10],0x0
   14000c754:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c759:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c75e:	add    rsp,0x30
   14000c762:	pop    rdi
   14000c763:	ret    
   14000c764:	int3   
   14000c765:	int3   
   14000c766:	int3   
   14000c767:	int3   
   14000c768:	int3   
   14000c769:	int3   
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	int3   
   14000c76d:	int3   
   14000c76e:	int3   
   14000c76f:	int3   
   14000c770:	mov    QWORD PTR [rsp+0x10],rbp
   14000c775:	mov    QWORD PTR [rsp+0x18],rsi
   14000c77a:	push   rdi
   14000c77b:	sub    rsp,0x20
   14000c77f:	mov    edi,r8d
   14000c782:	mov    rsi,rdx
   14000c785:	mov    rbp,rcx
   14000c788:	call   QWORD PTR [rip+0x5bbda]        # 0x140068368
   14000c78e:	test   rax,rax
   14000c791:	jne    0x14000c7a3
   14000c793:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c798:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c79d:	add    rsp,0x20
   14000c7a1:	pop    rdi
   14000c7a2:	ret    
   14000c7a3:	mov    rcx,rax
   14000c7a6:	mov    QWORD PTR [rsp+0x30],rbx
   14000c7ab:	call   QWORD PTR [rip+0x5bba7]        # 0x140068358
   14000c7b1:	mov    rbx,rax
   14000c7b4:	test   rax,rax
   14000c7b7:	je     0x14000c7e6
   14000c7b9:	mov    rdx,rsi
   14000c7bc:	mov    rcx,rbp
   14000c7bf:	call   QWORD PTR [rip+0x5bb9b]        # 0x140068360
   14000c7c5:	mov    r11d,eax
   14000c7c8:	add    r11,rbx
   14000c7cb:	and    edi,0xf
   14000c7ce:	jbe    0x14000c7e1
   14000c7d0:	cmp    rbx,r11
   14000c7d3:	jae    0x14000c7e6
   14000c7d5:	dec    edi
   14000c7d7:	movzx  eax,WORD PTR [rbx]
   14000c7da:	lea    rbx,[rbx+rax*2+0x2]
   14000c7df:	jne    0x14000c7d0
   14000c7e1:	cmp    rbx,r11
   14000c7e4:	jb     0x14000c7ea
   14000c7e6:	xor    eax,eax
   14000c7e8:	jmp    0x14000c7f6
   14000c7ea:	xor    eax,eax
   14000c7ec:	cmp    WORD PTR [rbx],ax
   14000c7ef:	cmove  rbx,rax
   14000c7f3:	mov    rax,rbx
   14000c7f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7fb:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c800:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c805:	add    rsp,0x20
   14000c809:	pop    rdi
   14000c80a:	ret    
   14000c80b:	int3   
   14000c80c:	int3   
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	mov    QWORD PTR [rsp+0x8],rbx
   14000c815:	mov    QWORD PTR [rsp+0x10],rbp
   14000c81a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c81f:	push   rdi
   14000c820:	sub    rsp,0x20
   14000c824:	mov    ebp,ecx
   14000c826:	lea    rcx,[rip+0x7da83]        # 0x14008a2b0
   14000c82d:	xor    edx,edx
   14000c82f:	xor    ebx,ebx
   14000c831:	call   0x140042f94
   14000c836:	lea    esi,[rbx+0x1]
   14000c839:	mov    rdi,rax
   14000c83c:	test   rax,rax
   14000c83f:	je     0x14000c894
   14000c841:	test   rbx,rbx
   14000c844:	jne    0x14000c894
   14000c846:	mov    eax,ebp
   14000c848:	lea    edx,[rbx+0x6]
   14000c84b:	xor    r9d,r9d
   14000c84e:	shr    eax,0x4
   14000c851:	mov    rcx,rdi
   14000c854:	inc    ax
   14000c857:	movzx  r8d,ax
   14000c85b:	call   QWORD PTR [rip+0x5b9bf]        # 0x140068220
   14000c861:	test   rax,rax
   14000c864:	je     0x14000c87c
   14000c866:	mov    r8d,ebp
   14000c869:	mov    rdx,rax
   14000c86c:	mov    rcx,rdi
   14000c86f:	call   0x14000c770
   14000c874:	mov    rbx,rax
   14000c877:	test   rax,rax
   14000c87a:	jne    0x14000c8ab
   14000c87c:	lea    rcx,[rip+0x7da2d]        # 0x14008a2b0
   14000c883:	mov    edx,esi
   14000c885:	call   0x140042f94
   14000c88a:	inc    esi
   14000c88c:	mov    rdi,rax
   14000c88f:	test   rax,rax
   14000c892:	jne    0x14000c841
   14000c894:	xor    eax,eax
   14000c896:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c89b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c8a0:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c8a5:	add    rsp,0x20
   14000c8a9:	pop    rdi
   14000c8aa:	ret    
   14000c8ab:	mov    rax,rdi
   14000c8ae:	jmp    0x14000c896
   14000c8b0:	rex push rbx
   14000c8b2:	sub    rsp,0x20
   14000c8b6:	xor    bl,bl
   14000c8b8:	test   rcx,rcx
   14000c8bb:	je     0x14000c8df
   14000c8bd:	lea    rdx,[rip+0x5ff44]        # 0x14006c808
   14000c8c4:	call   0x1400338c4
   14000c8c9:	movzx  ecx,bl
   14000c8cc:	mov    edx,0x1
   14000c8d1:	test   eax,eax
   14000c8d3:	cmove  ecx,edx
   14000c8d6:	movzx  eax,cl
   14000c8d9:	add    rsp,0x20
   14000c8dd:	pop    rbx
   14000c8de:	ret    
   14000c8df:	movzx  eax,bl
   14000c8e2:	add    rsp,0x20
   14000c8e6:	pop    rbx
   14000c8e7:	ret    
   14000c8e8:	int3   
   14000c8e9:	int3   
   14000c8ea:	int3   
   14000c8eb:	int3   
   14000c8ec:	int3   
   14000c8ed:	int3   
   14000c8ee:	int3   
   14000c8ef:	int3   
   14000c8f0:	mov    QWORD PTR [rsp+0x10],rdx
   14000c8f5:	mov    QWORD PTR [rsp+0x18],r8
   14000c8fa:	mov    QWORD PTR [rsp+0x20],r9
   14000c8ff:	sub    rsp,0x28
   14000c903:	mov    r8,rdx
   14000c906:	lea    r9,[rsp+0x40]
   14000c90b:	mov    edx,0x104
   14000c910:	call   0x140033b44
   14000c915:	add    rsp,0x28
   14000c919:	ret    
   14000c91a:	int3   
   14000c91b:	int3   
   14000c91c:	int3   
   14000c91d:	int3   
   14000c91e:	int3   
   14000c91f:	int3   
   14000c920:	mov    QWORD PTR [rsp+0x8],rcx
   14000c925:	push   rdi
   14000c926:	sub    rsp,0x30
   14000c92a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c933:	mov    QWORD PTR [rsp+0x48],rbx
   14000c938:	mov    QWORD PTR [rsp+0x50],rsi
   14000c93d:	mov    rsi,rdx
   14000c940:	mov    rbx,rcx
   14000c943:	lea    rcx,[rip+0x79e0e]        # 0x140086758
   14000c94a:	mov    rax,QWORD PTR [rip+0x79e07]        # 0x140086758
   14000c951:	call   QWORD PTR [rax+0x18]
   14000c954:	add    rax,0x18
   14000c958:	mov    QWORD PTR [rbx],rax
   14000c95b:	test   rsi,rsi
   14000c95e:	je     0x14000c99e
   14000c960:	test   rsi,0xffffffffffff0000
   14000c967:	jne    0x14000c98b
   14000c969:	movzx  edi,si
   14000c96c:	mov    ecx,edi
   14000c96e:	call   0x14000c810
   14000c973:	test   rax,rax
   14000c976:	je     0x14000c989
   14000c978:	mov    r8d,edi
   14000c97b:	mov    rdx,rax
   14000c97e:	mov    rcx,rbx
   14000c981:	call   0x14000c9d0
   14000c986:	nop
   14000c987:	jmp    0x14000c9af
   14000c989:	jmp    0x14000c9af
   14000c98b:	xor    eax,eax
   14000c98d:	or     rcx,0xffffffffffffffff
   14000c991:	mov    rdi,rsi
   14000c994:	repnz scas al,BYTE PTR es:[rdi]
   14000c996:	not    rcx
   14000c999:	dec    rcx
   14000c99c:	jmp    0x14000c9a0
   14000c99e:	xor    ecx,ecx
   14000c9a0:	mov    r8d,ecx
   14000c9a3:	mov    rdx,rsi
   14000c9a6:	mov    rcx,rbx
   14000c9a9:	call   0x140008d10
   14000c9ae:	nop
   14000c9af:	mov    rax,rbx
   14000c9b2:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c9b7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c9bc:	add    rsp,0x30
   14000c9c0:	pop    rdi
   14000c9c1:	ret    
   14000c9c2:	int3   
   14000c9c3:	int3   
   14000c9c4:	int3   
   14000c9c5:	int3   
   14000c9c6:	int3   
   14000c9c7:	int3   
   14000c9c8:	int3   
   14000c9c9:	int3   
   14000c9ca:	int3   
   14000c9cb:	int3   
   14000c9cc:	int3   
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	mov    QWORD PTR [rsp+0x18],rbx
   14000c9d5:	mov    QWORD PTR [rsp+0x20],rsi
   14000c9da:	push   rdi
   14000c9db:	sub    rsp,0x40
   14000c9df:	mov    eax,r8d
   14000c9e2:	mov    rsi,rdx
   14000c9e5:	mov    ebx,r8d
   14000c9e8:	shr    eax,0x4
   14000c9eb:	mov    rdi,rcx
   14000c9ee:	mov    r8d,0x6
   14000c9f4:	inc    ax
   14000c9f7:	mov    rcx,rsi
   14000c9fa:	movzx  edx,ax
   14000c9fd:	call   QWORD PTR [rip+0x5b975]        # 0x140068378
   14000ca03:	test   rax,rax
   14000ca06:	je     0x14000caf1
   14000ca0c:	mov    r8d,ebx
   14000ca0f:	mov    rdx,rax
   14000ca12:	mov    rcx,rsi
   14000ca15:	call   0x14000c770
   14000ca1a:	mov    rsi,rax
   14000ca1d:	test   rax,rax
   14000ca20:	je     0x14000caf1
   14000ca26:	movzx  r9d,WORD PTR [rax]
   14000ca2a:	xor    edx,edx
   14000ca2c:	mov    QWORD PTR [rsp+0x50],rbp
   14000ca31:	mov    QWORD PTR [rsp+0x58],r12
   14000ca36:	xor    r12d,r12d
   14000ca39:	lea    r8,[rax+0x2]
   14000ca3d:	mov    QWORD PTR [rsp+0x38],r12
   14000ca42:	mov    QWORD PTR [rsp+0x30],r12
   14000ca47:	lea    ecx,[rdx+0x3]
   14000ca4a:	mov    DWORD PTR [rsp+0x28],r12d
   14000ca4f:	mov    QWORD PTR [rsp+0x20],r12
   14000ca54:	call   QWORD PTR [rip+0x5b97e]        # 0x1400683d8
   14000ca5a:	movsxd rbx,eax
   14000ca5d:	test   eax,eax
   14000ca5f:	jns    0x14000ca6c
   14000ca61:	mov    ecx,0x80070057
   14000ca66:	call   0x1400025f0
   14000ca6b:	int3   
   14000ca6c:	mov    rax,QWORD PTR [rdi]
   14000ca6f:	mov    ecx,0x1
   14000ca74:	sub    ecx,DWORD PTR [rax-0x8]
   14000ca77:	mov    eax,DWORD PTR [rax-0xc]
   14000ca7a:	sub    eax,ebx
   14000ca7c:	or     ecx,eax
   14000ca7e:	jge    0x14000ca8a
   14000ca80:	mov    edx,ebx
   14000ca82:	mov    rcx,rdi
   14000ca85:	call   0x140008df0
   14000ca8a:	mov    rdx,QWORD PTR [rdi]
   14000ca8d:	movzx  r9d,WORD PTR [rsi]
   14000ca91:	mov    QWORD PTR [rsp+0x38],r12
   14000ca96:	mov    QWORD PTR [rsp+0x30],r12
   14000ca9b:	mov    DWORD PTR [rsp+0x28],ebx
   14000ca9f:	mov    QWORD PTR [rsp+0x20],rdx
   14000caa4:	xor    edx,edx
   14000caa6:	lea    r8,[rsi+0x2]
   14000caaa:	lea    ecx,[rdx+0x3]
   14000caad:	call   QWORD PTR [rip+0x5b925]        # 0x1400683d8
   14000cab3:	mov    r11,QWORD PTR [rdi]
   14000cab6:	cmp    ebx,DWORD PTR [r11-0xc]
   14000caba:	jg     0x14000cae6
   14000cabc:	mov    rbp,QWORD PTR [rsp+0x50]
   14000cac1:	mov    DWORD PTR [r11-0x10],ebx
   14000cac5:	mov    rcx,QWORD PTR [rdi]
   14000cac8:	mov    BYTE PTR [rbx+rcx*1],r12b
   14000cacc:	mov    r12,QWORD PTR [rsp+0x58]
   14000cad1:	mov    eax,0x1
   14000cad6:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cadb:	mov    rsi,QWORD PTR [rsp+0x68]
   14000cae0:	add    rsp,0x40
   14000cae4:	pop    rdi
   14000cae5:	ret    
   14000cae6:	mov    ecx,0x80070057
   14000caeb:	call   0x1400025f0
   14000caf0:	int3   
   14000caf1:	mov    rbx,QWORD PTR [rsp+0x60]
   14000caf6:	mov    rsi,QWORD PTR [rsp+0x68]
   14000cafb:	xor    eax,eax
   14000cafd:	add    rsp,0x40
   14000cb01:	pop    rdi
   14000cb02:	ret    
   14000cb03:	int3   
   14000cb04:	int3   
   14000cb05:	int3   
   14000cb06:	int3   
   14000cb07:	int3   
   14000cb08:	int3   
   14000cb09:	int3   
   14000cb0a:	int3   
   14000cb0b:	int3   
   14000cb0c:	int3   
   14000cb0d:	int3   
   14000cb0e:	int3   
   14000cb0f:	int3   
   14000cb10:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb15:	mov    QWORD PTR [rsp+0x10],rbp
   14000cb1a:	push   rdi
   14000cb1b:	sub    rsp,0x20
   14000cb1f:	mov    rbx,rcx
   14000cb22:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cb26:	mov    rdi,rdx
   14000cb29:	cmp    rdx,rcx
   14000cb2c:	jbe    0x14000cc15
   14000cb32:	cmp    QWORD PTR [rbx],0x0
   14000cb36:	movsxd rax,DWORD PTR [rbx+0x18]
   14000cb3a:	jne    0x14000cb6e
   14000cb3c:	cmp    rax,rdx
   14000cb3f:	mov    edx,0x8
   14000cb44:	cmova  rdi,rax
   14000cb48:	mov    rcx,rdi
   14000cb4b:	call   0x1400335d4
   14000cb50:	mov    QWORD PTR [rbx],rax
   14000cb53:	test   rax,rax
   14000cb56:	jne    0x14000cc11
   14000cb5c:	xor    al,al
   14000cb5e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb63:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cb68:	add    rsp,0x20
   14000cb6c:	pop    rdi
   14000cb6d:	ret    
   14000cb6e:	test   rax,rax
   14000cb71:	jne    0x14000cb94
   14000cb73:	mov    rax,QWORD PTR [rbx+0x8]
   14000cb77:	shr    rax,0x3
   14000cb7b:	cmp    rax,0x4
   14000cb7f:	jae    0x14000cb88
   14000cb81:	mov    eax,0x4
   14000cb86:	jmp    0x14000cb94
   14000cb88:	mov    edx,0x400
   14000cb8d:	cmp    rax,rdx
   14000cb90:	cmova  rax,rdx
   14000cb94:	add    rax,rcx
   14000cb97:	mov    edx,0x8
   14000cb9c:	cmp    rdi,rax
   14000cb9f:	cmovb  rdi,rax
   14000cba3:	mov    rcx,rdi
   14000cba6:	call   0x1400335d4
   14000cbab:	mov    rbp,rax
   14000cbae:	test   rax,rax
   14000cbb1:	je     0x14000cb5c
   14000cbb3:	mov    rax,QWORD PTR [rbx+0x8]
   14000cbb7:	mov    r8,QWORD PTR [rbx]
   14000cbba:	mov    rcx,rbp
   14000cbbd:	lea    rdx,[rax*8+0x0]
   14000cbc5:	mov    r9,rdx
   14000cbc8:	call   0x140033d7c
   14000cbcd:	test   eax,eax
   14000cbcf:	je     0x14000cc06
   14000cbd1:	cmp    eax,0xc
   14000cbd4:	je     0x14000cbfb
   14000cbd6:	cmp    eax,0x16
   14000cbd9:	je     0x14000cbf0
   14000cbdb:	cmp    eax,0x22
   14000cbde:	je     0x14000cbf0
   14000cbe0:	cmp    eax,0x50
   14000cbe3:	je     0x14000cc06
   14000cbe5:	mov    ecx,0x80004005
   14000cbea:	call   0x1400025f0
   14000cbef:	int3   
   14000cbf0:	mov    ecx,0x80070057
   14000cbf5:	call   0x1400025f0
   14000cbfa:	int3   
   14000cbfb:	mov    ecx,0x8007000e
   14000cc00:	call   0x1400025f0
   14000cc05:	int3   
   14000cc06:	mov    rcx,QWORD PTR [rbx]
   14000cc09:	call   0x140033594
   14000cc0e:	mov    QWORD PTR [rbx],rbp
   14000cc11:	mov    QWORD PTR [rbx+0x10],rdi
   14000cc15:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cc1a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cc1f:	mov    al,0x1
   14000cc21:	add    rsp,0x20
   14000cc25:	pop    rdi
   14000cc26:	ret    
   14000cc27:	int3   
   14000cc28:	int3   
   14000cc29:	int3   
   14000cc2a:	int3   
   14000cc2b:	int3   
   14000cc2c:	int3   
   14000cc2d:	int3   
   14000cc2e:	int3   
   14000cc2f:	int3   
   14000cc30:	rex push rdi
   14000cc32:	push   r12
   14000cc34:	push   r13
   14000cc36:	sub    rsp,0x30
   14000cc3a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000cc43:	mov    QWORD PTR [rsp+0x50],rbx
   14000cc48:	mov    QWORD PTR [rsp+0x58],rbp
   14000cc4d:	mov    QWORD PTR [rsp+0x60],rsi
   14000cc52:	mov    r13d,r8d
   14000cc55:	mov    r12,rdx
   14000cc58:	mov    rsi,rcx
   14000cc5b:	xor    ebp,ebp
   14000cc5d:	lea    rcx,[rip+0x79af4]        # 0x140086758
   14000cc64:	mov    rax,QWORD PTR [rip+0x79aed]        # 0x140086758
   14000cc6b:	call   QWORD PTR [rax+0x18]
   14000cc6e:	lea    rdi,[rax+0x18]
   14000cc72:	mov    QWORD PTR [rsp+0x68],rdi
   14000cc77:	or     rbx,0xffffffffffffffff
   14000cc7b:	test   rsi,rsi
   14000cc7e:	je     0x14000ccbc
   14000cc80:	test   rsi,0xffffffffffff0000
   14000cc87:	jne    0x14000ccaa
   14000cc89:	movzx  esi,si
   14000cc8c:	mov    ecx,esi
   14000cc8e:	call   0x14000c810
   14000cc93:	test   rax,rax
   14000cc96:	je     0x14000ccd3
   14000cc98:	mov    r8d,esi
   14000cc9b:	mov    rdx,rax
   14000cc9e:	lea    rcx,[rsp+0x68]
   14000cca3:	call   0x14000c9d0
   14000cca8:	jmp    0x14000ccce
   14000ccaa:	xor    eax,eax
   14000ccac:	mov    rcx,rbx
   14000ccaf:	mov    rdi,rsi
   14000ccb2:	repnz scas al,BYTE PTR es:[rdi]
   14000ccb4:	not    rcx
   14000ccb7:	dec    rcx
   14000ccba:	jmp    0x14000ccbe
   14000ccbc:	mov    ecx,ebp
   14000ccbe:	mov    r8d,ecx
   14000ccc1:	mov    rdx,rsi
   14000ccc4:	lea    rcx,[rsp+0x68]
   14000ccc9:	call   0x140008d10
   14000ccce:	mov    rdi,QWORD PTR [rsp+0x68]
   14000ccd3:	test   r12,r12
   14000ccd6:	je     0x14000cd55
   14000ccd8:	cmp    DWORD PTR [rdi-0x10],0x0
   14000ccdc:	jl     0x14000cd55
   14000ccde:	mov    rdx,r12
   14000cce1:	mov    rcx,rdi
   14000cce4:	call   0x140033fb8
   14000cce9:	mov    r11,rax
   14000ccec:	test   rax,rax
   14000ccef:	je     0x14000cd55
   14000ccf1:	sub    r11d,edi
   14000ccf4:	js     0x14000cd55
   14000ccf6:	xor    eax,eax
   14000ccf8:	mov    rcx,rbx
   14000ccfb:	mov    rdi,r12
   14000ccfe:	repnz scas al,BYTE PTR es:[rdi]
   14000cd00:	not    rcx
   14000cd03:	lea    r8,[rcx-0x1]
   14000cd07:	add    r8d,r11d
   14000cd0a:	add    r8d,r13d
   14000cd0d:	lea    r9d,[rax+0x4]
   14000cd11:	lea    rdx,[rsp+0x20]
   14000cd16:	lea    rcx,[rsp+0x68]
   14000cd1b:	call   0x14000d540
   14000cd20:	xor    edx,edx
   14000cd22:	lea    r8d,[rdx+0x10]
   14000cd26:	mov    rdi,QWORD PTR [rsp+0x20]
   14000cd2b:	mov    rcx,rdi
   14000cd2e:	call   0x14003425c
   14000cd33:	movzx  ebp,ax
   14000cd36:	lea    rdx,[rdi-0x18]
   14000cd3a:	mov    eax,ebx
   14000cd3c:	lock xadd DWORD PTR [rdx+0x10],eax
   14000cd41:	dec    eax
   14000cd43:	test   eax,eax
   14000cd45:	jg     0x14000cd50
   14000cd47:	mov    rcx,QWORD PTR [rdx]
   14000cd4a:	mov    rax,QWORD PTR [rcx]
   14000cd4d:	call   QWORD PTR [rax+0x8]
   14000cd50:	mov    rdi,QWORD PTR [rsp+0x68]
   14000cd55:	lea    rdx,[rdi-0x18]
   14000cd59:	lock xadd DWORD PTR [rdx+0x10],ebx
   14000cd5e:	dec    ebx
   14000cd60:	test   ebx,ebx
   14000cd62:	jg     0x14000cd6d
   14000cd64:	mov    rcx,QWORD PTR [rdx]
   14000cd67:	mov    rax,QWORD PTR [rcx]
   14000cd6a:	call   QWORD PTR [rax+0x8]
   14000cd6d:	movzx  eax,bp
   14000cd70:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cd75:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cd7a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cd7f:	add    rsp,0x30
   14000cd83:	pop    r13
   14000cd85:	pop    r12
   14000cd87:	pop    rdi
   14000cd88:	ret    
   14000cd89:	int3   
   14000cd8a:	int3   
   14000cd8b:	int3   
   14000cd8c:	int3   
   14000cd8d:	int3   
   14000cd8e:	int3   
   14000cd8f:	int3   
   14000cd90:	rex push rbp
   14000cd92:	push   rbx
   14000cd93:	push   rdi
   14000cd94:	push   r13
   14000cd96:	push   r14
   14000cd98:	push   r15
   14000cd9a:	lea    rbp,[rsp-0xa8]
   14000cda2:	sub    rsp,0x1a8
   14000cda9:	mov    rax,QWORD PTR [rip+0x782f8]        # 0x1400850a8
   14000cdb0:	xor    rax,rsp
   14000cdb3:	mov    QWORD PTR [rbp+0x90],rax
   14000cdba:	mov    rbx,rcx
   14000cdbd:	mov    QWORD PTR [rsp+0x38],rcx
   14000cdc2:	mov    rdi,r8
   14000cdc5:	mov    r15,rdx
   14000cdc8:	lea    rcx,[rbp-0x7f]
   14000cdcc:	xor    r13d,r13d
   14000cdcf:	xor    edx,edx
   14000cdd1:	mov    r8d,0x103
   14000cdd7:	mov    BYTE PTR [rbp-0x80],r13b
   14000cddb:	call   0x140036dc0
   14000cde0:	xor    r11d,r11d
   14000cde3:	lea    r8,[rsp+0x40]
   14000cde8:	xor    edx,edx
   14000cdea:	mov    rcx,rdi
   14000cded:	mov    QWORD PTR [rsp+0x44],r11
   14000cdf2:	mov    QWORD PTR [rsp+0x4c],r11
   14000cdf7:	mov    QWORD PTR [rsp+0x54],r11
   14000cdfc:	mov    DWORD PTR [rsp+0x5c],r11d
   14000ce01:	mov    DWORD PTR [rsp+0x40],0x20
   14000ce09:	xor    r14d,r14d
   14000ce0c:	call   QWORD PTR [rip+0x5b6ae]        # 0x1400684c0
   14000ce12:	test   eax,eax
   14000ce14:	je     0x14000cfe7
   14000ce1a:	mov    QWORD PTR [rsp+0x1f8],rsi
   14000ce22:	mov    QWORD PTR [rsp+0x1a0],r12
   14000ce2a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ce30:	lea    r8,[rbp-0x80]
   14000ce34:	lea    rdx,[rsp+0x40]
   14000ce39:	mov    r9d,0x104
   14000ce3f:	mov    rcx,rdi
   14000ce42:	mov    QWORD PTR [rsp+0x20],0x0
   14000ce4b:	call   QWORD PTR [rip+0x5b677]        # 0x1400684c8
   14000ce51:	mov    esi,eax
   14000ce53:	test   eax,eax
   14000ce55:	je     0x14000cfbb
   14000ce5b:	lea    rcx,[rbp-0x80]
   14000ce5f:	call   QWORD PTR [rip+0x5b7b3]        # 0x140068618
   14000ce65:	lea    rcx,[rbp-0x80]
   14000ce69:	mov    rdx,rbx
   14000ce6c:	call   0x140033e14
   14000ce71:	test   rax,rax
   14000ce74:	je     0x14000cfbb
   14000ce7a:	xor    eax,eax
   14000ce7c:	xor    r12d,r12d
   14000ce7f:	mov    DWORD PTR [rsp+0x60],0x20
   14000ce87:	mov    QWORD PTR [rsp+0x64],rax
   14000ce8c:	mov    QWORD PTR [rsp+0x6c],rax
   14000ce91:	mov    QWORD PTR [rsp+0x74],rax
   14000ce96:	mov    DWORD PTR [rsp+0x7c],eax
   14000ce9a:	test   r13d,r13d
   14000ce9d:	jne    0x14000cfbb
   14000cea3:	test   esi,esi
   14000cea5:	je     0x14000cfb6
   14000ceab:	lea    rax,[rsp+0x60]
   14000ceb0:	lea    r8,[rip+0x5fba1]        # 0x14006ca58
   14000ceb7:	lea    rdx,[rsp+0x40]
   14000cebc:	mov    r9d,r12d
   14000cebf:	mov    rcx,rdi
   14000cec2:	xor    ebx,ebx
   14000cec4:	mov    QWORD PTR [rsp+0x20],rax
   14000cec9:	call   QWORD PTR [rip+0x5b619]        # 0x1400684e8
   14000cecf:	mov    esi,eax
   14000ced1:	test   eax,eax
   14000ced3:	je     0x14000cf90
   14000ced9:	lea    rax,[rsp+0x30]
   14000cede:	xor    esi,esi
   14000cee0:	lea    rdx,[rsp+0x60]
   14000cee5:	xor    r9d,r9d
   14000cee8:	xor    r8d,r8d
   14000ceeb:	mov    rcx,rdi
   14000ceee:	mov    QWORD PTR [rsp+0x28],rsi
   14000cef3:	mov    DWORD PTR [rsp+0x30],esi
   14000cef7:	mov    QWORD PTR [rsp+0x20],rax
   14000cefc:	call   QWORD PTR [rip+0x5b5de]        # 0x1400684e0
   14000cf02:	test   eax,eax
   14000cf04:	jne    0x14000cf3d
   14000cf06:	cmp    DWORD PTR [rsp+0x30],ebx
   14000cf0a:	je     0x14000cf3d
   14000cf0c:	call   QWORD PTR [rip+0x5b4ae]        # 0x1400683c0
   14000cf12:	cmp    eax,0x7a
   14000cf15:	jne    0x14000cf3d
   14000cf17:	mov    ecx,DWORD PTR [rsp+0x30]
   14000cf1b:	call   0x140032de8
   14000cf20:	mov    rbx,rax
   14000cf23:	test   rax,rax
   14000cf26:	jne    0x14000cf37
   14000cf28:	mov    rcx,rdi
   14000cf2b:	call   QWORD PTR [rip+0x5b587]        # 0x1400684b8
   14000cf31:	or     rdi,0xffffffffffffffff
   14000cf35:	jmp    0x14000cf3d
   14000cf37:	mov    DWORD PTR [rax],0x8
   14000cf3d:	mov    r9d,DWORD PTR [rsp+0x30]
   14000cf42:	lea    rdx,[rsp+0x60]
   14000cf47:	mov    r8,rbx
   14000cf4a:	mov    rcx,rdi
   14000cf4d:	mov    QWORD PTR [rsp+0x28],rsi
   14000cf52:	mov    QWORD PTR [rsp+0x20],rsi
   14000cf57:	call   QWORD PTR [rip+0x5b583]        # 0x1400684e0
   14000cf5d:	mov    esi,eax
   14000cf5f:	test   eax,eax
   14000cf61:	je     0x14000cf90
   14000cf63:	lea    r8,[rbx+0x4]
   14000cf67:	mov    edx,0x104
   14000cf6c:	mov    rcx,r15
   14000cf6f:	call   0x1400336a8
   14000cf74:	lea    rdx,[rip+0x5f9e5]        # 0x14006c960
   14000cf7b:	mov    rcx,r15
   14000cf7e:	call   0x140033e14
   14000cf83:	test   rax,rax
   14000cf86:	je     0x14000cf9d
   14000cf88:	mov    r13d,0x1
   14000cf8e:	jmp    0x14000cf9d
   14000cf90:	mov    rcx,rdi
   14000cf93:	call   QWORD PTR [rip+0x5b51f]        # 0x1400684b8
   14000cf99:	or     rdi,0xffffffffffffffff
   14000cf9d:	test   rbx,rbx
   14000cfa0:	je     0x14000cfaa
   14000cfa2:	mov    rcx,rbx
   14000cfa5:	call   0x1400336a0
   14000cfaa:	inc    r12d
   14000cfad:	test   r13d,r13d
   14000cfb0:	je     0x14000cea3
   14000cfb6:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cfbb:	inc    r14d
   14000cfbe:	lea    r8,[rsp+0x40]
   14000cfc3:	mov    rcx,rdi
   14000cfc6:	mov    edx,r14d
   14000cfc9:	call   QWORD PTR [rip+0x5b4f1]        # 0x1400684c0
   14000cfcf:	test   eax,eax
   14000cfd1:	jne    0x14000ce30
   14000cfd7:	mov    r12,QWORD PTR [rsp+0x1a0]
   14000cfdf:	mov    rsi,QWORD PTR [rsp+0x1f8]
   14000cfe7:	mov    eax,r13d
   14000cfea:	mov    rcx,QWORD PTR [rbp+0x90]
   14000cff1:	xor    rcx,rsp
   14000cff4:	call   0x140032f00
   14000cff9:	add    rsp,0x1a8
   14000d000:	pop    r15
   14000d002:	pop    r14
   14000d004:	pop    r13
   14000d006:	pop    rdi
   14000d007:	pop    rbx
   14000d008:	pop    rbp
   14000d009:	ret    
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	rex push rbp
   14000d012:	push   rbx
   14000d013:	push   rsi
   14000d014:	push   rdi
   14000d015:	push   r12
   14000d017:	push   r13
   14000d019:	push   r15
   14000d01b:	lea    rbp,[rsp-0x500]
   14000d023:	sub    rsp,0x600
   14000d02a:	mov    rax,QWORD PTR [rip+0x78077]        # 0x1400850a8
   14000d031:	xor    rax,rsp
   14000d034:	mov    QWORD PTR [rbp+0x4e0],rax
   14000d03b:	mov    r15,QWORD PTR [rbp+0x560]
   14000d042:	xor    esi,esi
   14000d044:	xor    eax,eax
   14000d046:	mov    QWORD PTR [rsp+0x68],r9
   14000d04b:	mov    QWORD PTR [rsp+0x50],r8
   14000d050:	mov    QWORD PTR [rsp+0x60],rdx
   14000d055:	mov    QWORD PTR [rsp+0x74],rax
   14000d05a:	mov    QWORD PTR [rsp+0x7c],rax
   14000d05f:	mov    QWORD PTR [rbp-0x7c],rax
   14000d063:	mov    DWORD PTR [rbp-0x74],eax
   14000d066:	lea    ebx,[rsi+0x1]
   14000d069:	mov    QWORD PTR [rsp+0x58],rcx
   14000d06e:	mov    r13d,esi
   14000d071:	mov    DWORD PTR [rsp+0x70],0x20
   14000d079:	mov    r12d,esi
   14000d07c:	mov    DWORD PTR [rsp+0x40],esi
   14000d080:	mov    QWORD PTR [rsp+0x5f8],r14
   14000d088:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d090:	lea    r8,[rsp+0x70]
   14000d095:	mov    edx,r12d
   14000d098:	mov    rcx,r15
   14000d09b:	call   QWORD PTR [rip+0x5b41f]        # 0x1400684c0
   14000d0a1:	test   eax,eax
   14000d0a3:	je     0x14000d4b0
   14000d0a9:	lea    rcx,[rbp+0xa1]
   14000d0b0:	xor    edx,edx
   14000d0b2:	mov    r8d,0x103
   14000d0b8:	mov    BYTE PTR [rbp+0xa0],0x0
   14000d0bf:	call   0x140036dc0
   14000d0c4:	lea    r8,[rbp+0xa0]
   14000d0cb:	lea    rdx,[rsp+0x70]
   14000d0d0:	mov    r9d,0x104
   14000d0d6:	mov    rcx,r15
   14000d0d9:	mov    QWORD PTR [rsp+0x20],rsi
   14000d0de:	call   QWORD PTR [rip+0x5b3e4]        # 0x1400684c8
   14000d0e4:	test   eax,eax
   14000d0e6:	je     0x14000d49f
   14000d0ec:	lea    rdx,[rip+0x5f88d]        # 0x14006c980
   14000d0f3:	lea    rcx,[rbp+0xa0]
   14000d0fa:	call   0x140033e14
   14000d0ff:	lea    rdx,[rip+0x5f872]        # 0x14006c978
   14000d106:	lea    rcx,[rbp+0xa0]
   14000d10d:	test   rax,rax
   14000d110:	mov    r14d,esi
   14000d113:	setne  r14b
   14000d117:	call   0x140033e14
   14000d11c:	test   rax,rax
   14000d11f:	jne    0x14000d144
   14000d121:	lea    rdx,[rip+0x5f840]        # 0x14006c968
   14000d128:	lea    rcx,[rbp+0xa0]
   14000d12f:	call   0x140033e14
   14000d134:	test   rax,rax
   14000d137:	jne    0x14000d144
   14000d139:	mov    ebx,esi
   14000d13b:	test   r14d,r14d
   14000d13e:	je     0x14000d49a
   14000d144:	mov    r8d,DWORD PTR [rbp-0x7c]
   14000d148:	lea    rdx,[rsp+0x48]
   14000d14d:	lea    rcx,[rsp+0x44]
   14000d152:	xor    r9d,r9d
   14000d155:	mov    DWORD PTR [rsp+0x44],esi
   14000d159:	mov    DWORD PTR [rsp+0x48],esi
   14000d15d:	mov    QWORD PTR [rsp+0x20],rsi
   14000d162:	call   QWORD PTR [rip+0x5b348]        # 0x1400684b0
   14000d168:	mov    r11d,DWORD PTR [rsp+0x44]
   14000d16d:	bt     r11d,0xa
   14000d172:	jae    0x14000d17f
   14000d174:	cmp    DWORD PTR [rsp+0x48],0x16
   14000d179:	je     0x14000d49a
   14000d17f:	test   r11b,0x8
   14000d183:	je     0x14000d49a
   14000d189:	lea    rcx,[rbp+0x2c1]
   14000d190:	xor    edx,edx
   14000d192:	mov    r8d,0x103
   14000d198:	mov    BYTE PTR [rbp+0x2c0],0x0
   14000d19f:	call   0x140036dc0
   14000d1a4:	xor    r9d,r9d
   14000d1a7:	lea    rax,[rbp+0x2c0]
   14000d1ae:	mov    QWORD PTR [rsp+0x30],rsi
   14000d1b3:	lea    rdx,[rsp+0x70]
   14000d1b8:	lea    r8d,[r9+0x4]
   14000d1bc:	mov    rcx,r15
   14000d1bf:	mov    DWORD PTR [rsp+0x28],0x104
   14000d1c7:	mov    QWORD PTR [rsp+0x20],rax
   14000d1cc:	call   QWORD PTR [rip+0x5b306]        # 0x1400684d8
   14000d1d2:	lea    rcx,[rbp+0x1b1]
   14000d1d9:	xor    edx,edx
   14000d1db:	mov    r8d,0x103
   14000d1e1:	mov    BYTE PTR [rbp+0x1b0],0x0
   14000d1e8:	mov    edi,eax
   14000d1ea:	call   0x140036dc0
   14000d1ef:	lea    rcx,[rbp+0x3d1]
   14000d1f6:	xor    edx,edx
   14000d1f8:	mov    r8d,0x103
   14000d1fe:	mov    BYTE PTR [rbp+0x3d0],0x0
   14000d205:	call   0x140036dc0
   14000d20a:	test   edi,edi
   14000d20c:	je     0x14000d26c
   14000d20e:	mov    edx,DWORD PTR [rbp-0x7c]
   14000d211:	lea    rcx,[rsp+0x4c]
   14000d216:	xor    r8d,r8d
   14000d219:	mov    DWORD PTR [rsp+0x4c],esi
   14000d21d:	call   QWORD PTR [rip+0x5b2ad]        # 0x1400684d0
   14000d223:	mov    ecx,DWORD PTR [rsp+0x4c]
   14000d227:	lea    rdx,[rbp+0x1b0]
   14000d22e:	xor    r9d,r9d
   14000d231:	mov    r8d,0x104
   14000d237:	call   QWORD PTR [rip+0x5b263]        # 0x1400684a0
   14000d23d:	lea    rax,[rbp+0x3d0]
   14000d244:	mov    QWORD PTR [rsp+0x30],rsi
   14000d249:	lea    rdx,[rsp+0x70]
   14000d24e:	xor    r9d,r9d
   14000d251:	xor    r8d,r8d
   14000d254:	mov    rcx,r15
   14000d257:	mov    DWORD PTR [rsp+0x28],0x104
   14000d25f:	mov    QWORD PTR [rsp+0x20],rax
   14000d264:	call   QWORD PTR [rip+0x5b26e]        # 0x1400684d8
   14000d26a:	mov    edi,eax
   14000d26c:	lea    rcx,[rbp-0x6f]
   14000d270:	xor    edx,edx
   14000d272:	mov    r8d,0x103
   14000d278:	mov    BYTE PTR [rbp-0x70],0x0
   14000d27c:	call   0x140036dc0
   14000d281:	test   edi,edi
   14000d283:	je     0x14000d3df
   14000d289:	test   ebx,ebx
   14000d28b:	je     0x14000d378
   14000d291:	lea    rcx,[rip+0x5f7c0]        # 0x14006ca58
   14000d298:	mov    r9d,0x12
   14000d29e:	xor    r8d,r8d
   14000d2a1:	xor    edx,edx
   14000d2a3:	call   QWORD PTR [rip+0x5b1ff]        # 0x1400684a8
   14000d2a9:	cmp    rax,0xffffffffffffffff
   14000d2ad:	je     0x14000d3d0
   14000d2b3:	lea    rdx,[rbp-0x70]
   14000d2b7:	lea    rcx,[rbp+0xa0]
   14000d2be:	mov    r8,rax
   14000d2c1:	call   0x14000cd90
   14000d2c6:	mov    r13d,eax
   14000d2c9:	xor    edi,edi
   14000d2cb:	test   r13d,r13d
   14000d2ce:	je     0x14000d3d0
   14000d2d4:	lea    rcx,[rbp-0x70]
   14000d2d8:	call   QWORD PTR [rip+0x5b33a]        # 0x140068618
   14000d2de:	mov    esi,edi
   14000d2e0:	mov    r12d,edi
   14000d2e3:	lea    rbx,[rip+0x7a33e]        # 0x140087628
   14000d2ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000d2f0:	test   esi,esi
   14000d2f2:	jne    0x14000d33c
   14000d2f4:	mov    edi,DWORD PTR [rbx-0x8]
   14000d2f7:	test   edi,edi
   14000d2f9:	je     0x14000d32f
   14000d2fb:	cmp    edi,0x1
   14000d2fe:	je     0x14000d32f
   14000d300:	mov    rdx,QWORD PTR [rbx]
   14000d303:	lea    rcx,[rbp-0x70]
   14000d307:	call   0x140033e14
   14000d30c:	test   rax,rax
   14000d30f:	je     0x14000d32f
   14000d311:	mov    rdx,QWORD PTR [rbx+0x8]
   14000d315:	test   rdx,rdx
   14000d318:	je     0x14000d32d
   14000d31a:	cmp    BYTE PTR [rdx],sil
   14000d31d:	je     0x14000d32d
   14000d31f:	lea    rcx,[rbp-0x70]
   14000d323:	call   0x140033e14
   14000d328:	test   rax,rax
   14000d32b:	je     0x14000d32f
   14000d32d:	mov    esi,edi
   14000d32f:	inc    r12d
   14000d332:	add    rbx,0x20
   14000d336:	cmp    r12d,0xb
   14000d33a:	jb     0x14000d2f0
   14000d33c:	lea    rdx,[rip+0x5f60d]        # 0x14006c950
   14000d343:	lea    rcx,[rbp+0x2c0]
   14000d34a:	call   0x140033e14
   14000d34f:	mov    ebx,0x1
   14000d354:	test   rax,rax
   14000d357:	cmovne esi,ebx
   14000d35a:	test   r14d,r14d
   14000d35d:	je     0x14000d3b6
   14000d35f:	cmp    esi,0x2
   14000d362:	je     0x14000d3b6
   14000d364:	cmp    esi,0x7
   14000d367:	je     0x14000d3b6
   14000d369:	cmp    esi,0xa
   14000d36c:	mov    r14d,0x0
   14000d372:	cmovne r13d,r14d
   14000d376:	jmp    0x14000d3b9
   14000d378:	test   r14d,r14d
   14000d37b:	je     0x14000d2c9
   14000d381:	xor    edi,edi
   14000d383:	lea    rax,[rbp-0x70]
   14000d387:	lea    rdx,[rsp+0x70]
   14000d38c:	mov    QWORD PTR [rsp+0x30],rdi
   14000d391:	lea    r8d,[rdi+0x1]
   14000d395:	xor    r9d,r9d
   14000d398:	mov    rcx,r15
   14000d39b:	mov    DWORD PTR [rsp+0x28],0x104
   14000d3a3:	mov    QWORD PTR [rsp+0x20],rax
   14000d3a8:	call   QWORD PTR [rip+0x5b12a]        # 0x1400684d8
   14000d3ae:	mov    r13d,eax
   14000d3b1:	jmp    0x14000d2cb
   14000d3b6:	xor    r14d,r14d
   14000d3b9:	mov    r12d,DWORD PTR [rsp+0x40]
   14000d3be:	test   esi,esi
   14000d3c0:	je     0x14000d3d5
   14000d3c2:	cmp    esi,ebx
   14000d3c4:	jne    0x14000d3e6
   14000d3c6:	xor    esi,esi
   14000d3c8:	mov    r13d,esi
   14000d3cb:	jmp    0x14000d49f
   14000d3d0:	mov    ebx,0x1
   14000d3d5:	xor    esi,esi
   14000d3d7:	mov    r13d,esi
   14000d3da:	jmp    0x14000d49f
   14000d3df:	xor    r14d,r14d
   14000d3e2:	lea    ebx,[r14+0x1]
   14000d3e6:	test   r13d,r13d
   14000d3e9:	je     0x14000d52b
   14000d3ef:	lea    rdx,[rip+0x5f672]        # 0x14006ca68
   14000d3f6:	lea    rcx,[rbp-0x70]
   14000d3fa:	xor    r8d,r8d
   14000d3fd:	call   0x14000cc30
   14000d402:	lea    rdx,[rip+0x5f65f]        # 0x14006ca68
   14000d409:	lea    rcx,[rbp-0x70]
   14000d40d:	mov    r8d,0x4
   14000d413:	movzx  ebx,ax
   14000d416:	call   0x14000cc30
   14000d41b:	lea    rdx,[rip+0x5f646]        # 0x14006ca68
   14000d422:	lea    rcx,[rbp+0x1b0]
   14000d429:	xor    r8d,r8d
   14000d42c:	movzx  edi,ax
   14000d42f:	call   0x14000cc30
   14000d434:	cmp    esi,0xa
   14000d437:	jne    0x14000d4dc
   14000d43d:	lea    rdx,[rip+0x5f62c]        # 0x14006ca70
   14000d444:	lea    rcx,[rbp-0x70]
   14000d448:	xor    r8d,r8d
   14000d44b:	call   0x14000cc30
   14000d450:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d455:	lea    rdx,[rip+0x5f61c]        # 0x14006ca78
   14000d45c:	mov    WORD PTR [rcx],ax
   14000d45f:	lea    rcx,[rbp-0x70]
   14000d463:	xor    r8d,r8d
   14000d466:	call   0x14000cc30
   14000d46b:	mov    rcx,QWORD PTR [rsp+0x60]
   14000d470:	lea    rdx,[rip+0x5f5f9]        # 0x14006ca70
   14000d477:	mov    WORD PTR [rcx],ax
   14000d47a:	lea    rcx,[rbp+0x1b0]
   14000d481:	xor    r8d,r8d
   14000d484:	call   0x14000cc30
   14000d489:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d48e:	mov    WORD PTR [rcx],ax
   14000d491:	mov    rax,QWORD PTR [rsp+0x68]
   14000d496:	mov    DWORD PTR [rax],esi
   14000d498:	xor    esi,esi
   14000d49a:	mov    ebx,0x1
   14000d49f:	inc    r12d
   14000d4a2:	mov    DWORD PTR [rsp+0x40],r12d
   14000d4a7:	test   r13d,r13d
   14000d4aa:	je     0x14000d090
   14000d4b0:	mov    eax,r13d
   14000d4b3:	mov    r14,QWORD PTR [rsp+0x5f8]
   14000d4bb:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000d4c2:	xor    rcx,rsp
   14000d4c5:	call   0x140032f00
   14000d4ca:	add    rsp,0x600
   14000d4d1:	pop    r15
   14000d4d3:	pop    r13
   14000d4d5:	pop    r12
   14000d4d7:	pop    rdi
   14000d4d8:	pop    rsi
   14000d4d9:	pop    rbx
   14000d4da:	pop    rbp
   14000d4db:	ret    
   14000d4dc:	cmp    r14w,bx
   14000d4e0:	je     0x14000d509
   14000d4e2:	cmp    r14w,di
   14000d4e6:	je     0x14000d509
   14000d4e8:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d4ed:	mov    WORD PTR [rcx],bx
   14000d4f0:	mov    rcx,QWORD PTR [rsp+0x60]
   14000d4f5:	mov    WORD PTR [rcx],di
   14000d4f8:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d4fd:	mov    WORD PTR [rcx],ax
   14000d500:	mov    rax,QWORD PTR [rsp+0x68]
   14000d505:	mov    DWORD PTR [rax],esi
   14000d507:	jmp    0x14000d498
   14000d509:	mov    rax,QWORD PTR [rsp+0x58]
   14000d50e:	xor    esi,esi
   14000d510:	mov    WORD PTR [rax],si
   14000d513:	mov    rax,QWORD PTR [rsp+0x60]
   14000d518:	mov    r13d,esi
   14000d51b:	mov    WORD PTR [rax],si
   14000d51e:	mov    rax,QWORD PTR [rsp+0x50]
   14000d523:	mov    WORD PTR [rax],si
   14000d526:	jmp    0x14000d49a
   14000d52b:	xor    esi,esi
   14000d52d:	jmp    0x14000d49f
   14000d532:	int3   
   14000d533:	int3   
   14000d534:	int3   
   14000d535:	int3   
   14000d536:	int3   
   14000d537:	int3   
   14000d538:	int3   
   14000d539:	int3   
   14000d53a:	int3   
   14000d53b:	int3   
   14000d53c:	int3   
   14000d53d:	int3   
   14000d53e:	int3   
   14000d53f:	int3   
   14000d540:	mov    QWORD PTR [rsp+0x8],rbx
   14000d545:	mov    QWORD PTR [rsp+0x10],rbp
   14000d54a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d54f:	push   rdi
   14000d550:	sub    rsp,0x20
   14000d554:	mov    edi,r8d
   14000d557:	xor    r8d,r8d
   14000d55a:	mov    ebx,r9d
   14000d55d:	test   edi,edi
   14000d55f:	mov    eax,0x7fffffff
   14000d564:	mov    rsi,rdx
   14000d567:	cmovs  edi,r8d
   14000d56b:	test   r9d,r9d
   14000d56e:	mov    rbp,rcx
   14000d571:	cmovs  ebx,r8d
   14000d575:	sub    eax,edi
   14000d577:	mov    DWORD PTR [rsp+0x40],r8d
   14000d57c:	cmp    eax,ebx
   14000d57e:	jl     0x14000d607
   14000d584:	mov    rdx,QWORD PTR [rcx]
   14000d587:	lea    eax,[rdi+rbx*1]
   14000d58a:	mov    ecx,DWORD PTR [rdx-0x10]
   14000d58d:	cmp    eax,ecx
   14000d58f:	jle    0x14000d595
   14000d591:	mov    ebx,ecx
   14000d593:	sub    ebx,edi
   14000d595:	cmp    edi,ecx
   14000d597:	cmovg  ebx,r8d
   14000d59b:	test   edi,edi
   14000d59d:	jne    0x14000d5cb
   14000d59f:	cmp    ebx,ecx
   14000d5a1:	jne    0x14000d5cb
   14000d5a3:	lea    rcx,[rdx-0x18]
   14000d5a7:	call   0x140008e50
   14000d5ac:	add    rax,0x18
   14000d5b0:	mov    QWORD PTR [rsi],rax
   14000d5b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5b8:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d5bd:	mov    rax,rsi
   14000d5c0:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d5c5:	add    rsp,0x20
   14000d5c9:	pop    rdi
   14000d5ca:	ret    
   14000d5cb:	mov    rcx,QWORD PTR [rdx-0x18]
   14000d5cf:	test   rcx,rcx
   14000d5d2:	je     0x14000d5df
   14000d5d4:	mov    rax,QWORD PTR [rcx]
   14000d5d7:	call   QWORD PTR [rax+0x20]
   14000d5da:	test   rax,rax
   14000d5dd:	jne    0x14000d5f0
   14000d5df:	mov    rax,QWORD PTR [rip+0x79172]        # 0x140086758
   14000d5e6:	lea    rcx,[rip+0x7916b]        # 0x140086758
   14000d5ed:	call   QWORD PTR [rax+0x20]
   14000d5f0:	movsxd rdx,edi
   14000d5f3:	mov    r9,rax
   14000d5f6:	mov    r8d,ebx
   14000d5f9:	add    rdx,QWORD PTR [rbp+0x0]
   14000d5fd:	mov    rcx,rsi
   14000d600:	call   0x14000d620
   14000d605:	jmp    0x14000d5b3
   14000d607:	mov    ecx,0x80070216
   14000d60c:	call   0x1400025f0
   14000d611:	int3   
   14000d612:	int3   
   14000d613:	int3   
   14000d614:	int3   
   14000d615:	int3   
   14000d616:	int3   
   14000d617:	int3   
   14000d618:	int3   
   14000d619:	int3   
   14000d61a:	int3   
   14000d61b:	int3   
   14000d61c:	int3   
   14000d61d:	int3   
   14000d61e:	int3   
   14000d61f:	int3   
   14000d620:	mov    QWORD PTR [rsp+0x8],rbx
   14000d625:	mov    QWORD PTR [rsp+0x10],rsi
   14000d62a:	push   rdi
   14000d62b:	sub    rsp,0x20
   14000d62f:	movsxd rbx,r8d
   14000d632:	mov    rsi,rdx
   14000d635:	mov    rdi,rcx
   14000d638:	test   r9,r9
   14000d63b:	jne    0x14000d648
   14000d63d:	mov    ecx,0x80004005
   14000d642:	call   0x1400025f0
   14000d647:	int3   
   14000d648:	test   rdx,rdx
   14000d64b:	jne    0x14000d65d
   14000d64d:	test   r8d,r8d
   14000d650:	je     0x14000d65d
   14000d652:	mov    ecx,0x80070057
   14000d657:	call   0x1400025f0
   14000d65c:	int3   
   14000d65d:	mov    rax,QWORD PTR [r9]
   14000d660:	mov    r8d,0x1
   14000d666:	mov    edx,ebx
   14000d668:	mov    rcx,r9
   14000d66b:	call   QWORD PTR [rax]
   14000d66d:	test   rax,rax
   14000d670:	jne    0x14000d678
   14000d672:	call   0x140017170
   14000d677:	int3   
   14000d678:	add    rax,0x18
   14000d67c:	mov    QWORD PTR [rdi],rax
   14000d67f:	test   ebx,ebx
   14000d681:	js     0x14000d6b6
   14000d683:	cmp    ebx,DWORD PTR [rax-0xc]
   14000d686:	jg     0x14000d6b6
   14000d688:	mov    DWORD PTR [rax-0x10],ebx
   14000d68b:	mov    rax,QWORD PTR [rdi]
   14000d68e:	mov    rdx,rbx
   14000d691:	mov    BYTE PTR [rbx+rax*1],0x0
   14000d695:	mov    rcx,QWORD PTR [rdi]
   14000d698:	mov    r9,rbx
   14000d69b:	mov    r8,rsi
   14000d69e:	call   0x140033ccc
   14000d6a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d6a8:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d6ad:	mov    rax,rdi
   14000d6b0:	add    rsp,0x20
   14000d6b4:	pop    rdi
   14000d6b5:	ret    
   14000d6b6:	mov    ecx,0x80070057
   14000d6bb:	call   0x1400025f0
   14000d6c0:	int3   
   14000d6c1:	int3   
   14000d6c2:	int3   
   14000d6c3:	int3   
   14000d6c4:	int3   
   14000d6c5:	int3   
   14000d6c6:	int3   
   14000d6c7:	int3   
   14000d6c8:	int3   
   14000d6c9:	int3   
   14000d6ca:	int3   
   14000d6cb:	int3   
   14000d6cc:	int3   
   14000d6cd:	int3   
   14000d6ce:	int3   
   14000d6cf:	int3   
   14000d6d0:	mov    QWORD PTR [rsp+0x8],rcx
   14000d6d5:	push   rdi
   14000d6d6:	sub    rsp,0x40
   14000d6da:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000d6e3:	mov    QWORD PTR [rsp+0x58],rbx
   14000d6e8:	mov    QWORD PTR [rsp+0x60],rsi
   14000d6ed:	mov    rdi,rcx
   14000d6f0:	lea    rax,[rip+0x5f8b9]        # 0x14006cfb0
   14000d6f7:	mov    QWORD PTR [rcx],rax
   14000d6fa:	xor    esi,esi
   14000d6fc:	mov    QWORD PTR [rcx+0x8],rsi
   14000d700:	mov    QWORD PTR [rcx+0x10],rsi
   14000d704:	mov    QWORD PTR [rcx+0x18],rsi
   14000d708:	mov    QWORD PTR [rcx+0x20],rsi
   14000d70c:	mov    QWORD PTR [rcx+0x28],rsi
   14000d710:	mov    QWORD PTR [rcx+0x30],rsi
   14000d714:	mov    QWORD PTR [rcx+0x58],0x7
   14000d71c:	mov    QWORD PTR [rcx+0x50],rsi
   14000d720:	mov    WORD PTR [rcx+0x40],si
   14000d724:	lea    rax,[rip+0x5f35d]        # 0x14006ca88
   14000d72b:	mov    QWORD PTR [rsp+0x28],rax
   14000d730:	lea    rax,[rip+0x5dd69]        # 0x14006b4a0
   14000d737:	mov    QWORD PTR [rsp+0x20],rax
   14000d73c:	xor    r9d,r9d
   14000d73f:	lea    edx,[rsi+0x33]
   14000d742:	lea    r8d,[rsi+0x2]
   14000d746:	lea    rcx,[rip+0x5f373]        # 0x14006cac0
   14000d74d:	call   0x140003150
   14000d752:	xor    ecx,ecx
   14000d754:	call   QWORD PTR [rip+0x5af36]        # 0x140068690
   14000d75a:	mov    WORD PTR [rdi+0x68],si
   14000d75e:	xor    r8d,r8d
   14000d761:	lea    rdx,[rip+0x5f318]        # 0x14006ca80
   14000d768:	lea    rcx,[rdi+0x40]
   14000d76c:	call   0x14000e6c0
   14000d771:	mov    WORD PTR [rdi+0x38],si
   14000d775:	mov    rcx,QWORD PTR [rdi+0x8]
   14000d779:	test   rcx,rcx
   14000d77c:	je     0x14000d788
   14000d77e:	mov    rax,QWORD PTR [rcx]
   14000d781:	call   QWORD PTR [rax+0x10]
   14000d784:	mov    QWORD PTR [rdi+0x8],rsi
   14000d788:	mov    rcx,QWORD PTR [rdi+0x10]
   14000d78c:	test   rcx,rcx
   14000d78f:	je     0x14000d79b
   14000d791:	mov    rax,QWORD PTR [rcx]
   14000d794:	call   QWORD PTR [rax+0x10]
   14000d797:	mov    QWORD PTR [rdi+0x10],rsi
   14000d79b:	mov    rcx,QWORD PTR [rdi+0x18]
   14000d79f:	test   rcx,rcx
   14000d7a2:	je     0x14000d7ae
   14000d7a4:	mov    rax,QWORD PTR [rcx]
   14000d7a7:	call   QWORD PTR [rax+0x10]
   14000d7aa:	mov    QWORD PTR [rdi+0x18],rsi
   14000d7ae:	mov    rcx,QWORD PTR [rdi+0x20]
   14000d7b2:	test   rcx,rcx
   14000d7b5:	je     0x14000d7c1
   14000d7b7:	mov    rax,QWORD PTR [rcx]
   14000d7ba:	call   QWORD PTR [rax+0x10]
   14000d7bd:	mov    QWORD PTR [rdi+0x20],rsi
   14000d7c1:	mov    rcx,QWORD PTR [rdi+0x28]
   14000d7c5:	test   rcx,rcx
   14000d7c8:	je     0x14000d7d4
   14000d7ca:	mov    rax,QWORD PTR [rcx]
   14000d7cd:	call   QWORD PTR [rax+0x10]
   14000d7d0:	mov    QWORD PTR [rdi+0x28],rsi
   14000d7d4:	mov    rcx,QWORD PTR [rdi+0x30]
   14000d7d8:	test   rcx,rcx
   14000d7db:	je     0x14000d7e9
   14000d7dd:	mov    rax,QWORD PTR [rcx]
   14000d7e0:	call   QWORD PTR [rax+0x10]
   14000d7e3:	mov    QWORD PTR [rdi+0x30],rsi
   14000d7e7:	jmp    0x14000d7e9
   14000d7e9:	mov    rax,rdi
   14000d7ec:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d7f1:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d7f6:	add    rsp,0x40
   14000d7fa:	pop    rdi
   14000d7fb:	ret    
   14000d7fc:	int3   
   14000d7fd:	int3   
   14000d7fe:	int3   
   14000d7ff:	int3   
   14000d800:	mov    QWORD PTR [rsp+0x8],rbx
   14000d805:	push   rdi
   14000d806:	sub    rsp,0x20
   14000d80a:	mov    ebx,edx
   14000d80c:	mov    rdi,rcx
   14000d80f:	call   0x14000d830
   14000d814:	test   bl,0x1
   14000d817:	je     0x14000d821
   14000d819:	mov    rcx,rdi
   14000d81c:	call   0x1400330c0
   14000d821:	mov    rax,rdi
   14000d824:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d829:	add    rsp,0x20
   14000d82d:	pop    rdi
   14000d82e:	ret    
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x8],rcx
   14000d835:	push   rbx
   14000d836:	sub    rsp,0x40
   14000d83a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000d843:	mov    rbx,rcx
   14000d846:	lea    rax,[rip+0x5f763]        # 0x14006cfb0
   14000d84d:	mov    QWORD PTR [rcx],rax
   14000d850:	lea    rax,[rip+0x5f2c1]        # 0x14006cb18
   14000d857:	mov    QWORD PTR [rsp+0x28],rax
   14000d85c:	lea    rax,[rip+0x5dc3d]        # 0x14006b4a0
   14000d863:	mov    QWORD PTR [rsp+0x20],rax
   14000d868:	xor    r9d,r9d
   14000d86b:	lea    edx,[r9+0x45]
   14000d86f:	lea    r8d,[r9+0x2]
   14000d873:	lea    rcx,[rip+0x5f246]        # 0x14006cac0
   14000d87a:	call   0x140003150
   14000d87f:	mov    rcx,rbx
   14000d882:	call   0x14000e2f0
   14000d887:	call   QWORD PTR [rip+0x5adfb]        # 0x140068688
   14000d88d:	nop
   14000d88e:	cmp    QWORD PTR [rbx+0x58],0x8
   14000d893:	jb     0x14000d89e
   14000d895:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d899:	call   0x1400330c0
   14000d89e:	mov    QWORD PTR [rbx+0x58],0x7
   14000d8a6:	xor    eax,eax
   14000d8a8:	mov    QWORD PTR [rbx+0x50],rax
   14000d8ac:	mov    WORD PTR [rbx+0x40],ax
   14000d8b0:	mov    rcx,QWORD PTR [rbx+0x30]
   14000d8b4:	test   rcx,rcx
   14000d8b7:	je     0x14000d8c0
   14000d8b9:	mov    rax,QWORD PTR [rcx]
   14000d8bc:	call   QWORD PTR [rax+0x10]
   14000d8bf:	nop
   14000d8c0:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d8c4:	test   rcx,rcx
   14000d8c7:	je     0x14000d8d0
   14000d8c9:	mov    rax,QWORD PTR [rcx]
   14000d8cc:	call   QWORD PTR [rax+0x10]
   14000d8cf:	nop
   14000d8d0:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d8d4:	test   rcx,rcx
   14000d8d7:	je     0x14000d8e0
   14000d8d9:	mov    rax,QWORD PTR [rcx]
   14000d8dc:	call   QWORD PTR [rax+0x10]
   14000d8df:	nop
   14000d8e0:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d8e4:	test   rcx,rcx
   14000d8e7:	je     0x14000d8f0
   14000d8e9:	mov    rax,QWORD PTR [rcx]
   14000d8ec:	call   QWORD PTR [rax+0x10]
   14000d8ef:	nop
   14000d8f0:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d8f4:	test   rcx,rcx
   14000d8f7:	je     0x14000d900
   14000d8f9:	mov    rax,QWORD PTR [rcx]
   14000d8fc:	call   QWORD PTR [rax+0x10]
   14000d8ff:	nop
   14000d900:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d904:	test   rcx,rcx
   14000d907:	je     0x14000d90f
   14000d909:	mov    rax,QWORD PTR [rcx]
   14000d90c:	call   QWORD PTR [rax+0x10]
   14000d90f:	add    rsp,0x40
   14000d913:	pop    rbx
   14000d914:	ret    
   14000d915:	int3   
   14000d916:	int3   
   14000d917:	int3   
   14000d918:	int3   
   14000d919:	int3   
   14000d91a:	int3   
   14000d91b:	int3   
   14000d91c:	int3   
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	rex push rbp
   14000d922:	push   rsi
   14000d923:	push   rdi
   14000d924:	push   r12
   14000d926:	push   r13
   14000d928:	lea    rbp,[rsp-0x410]
   14000d930:	sub    rsp,0x510
   14000d937:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000d940:	mov    QWORD PTR [rsp+0x550],rbx
   14000d948:	mov    rax,QWORD PTR [rip+0x77759]        # 0x1400850a8
   14000d94f:	xor    rax,rsp
   14000d952:	mov    QWORD PTR [rbp+0x400],rax
   14000d959:	mov    rbx,rdx
   14000d95c:	mov    rsi,rcx
   14000d95f:	lea    rax,[rip+0x5f1e2]        # 0x14006cb48
   14000d966:	mov    QWORD PTR [rsp+0x28],rax
   14000d96b:	lea    r12,[rip+0x5db2e]        # 0x14006b4a0
   14000d972:	mov    QWORD PTR [rsp+0x20],r12
   14000d977:	xor    r9d,r9d
   14000d97a:	lea    edx,[r9+0x4e]
   14000d97e:	lea    r8d,[r9+0x2]
   14000d982:	lea    rcx,[rip+0x5f137]        # 0x14006cac0
   14000d989:	call   0x140003150
   14000d98e:	cmp    BYTE PTR [rsi+0x38],0x0
   14000d992:	jne    0x14000ddb3
   14000d998:	test   rbx,rbx
   14000d99b:	je     0x14000ddb3
   14000d9a1:	lea    rax,[rsp+0x58]
   14000d9a6:	mov    QWORD PTR [rsp+0x50],rax
   14000d9ab:	mov    rcx,rbx
   14000d9ae:	call   QWORD PTR [rip+0x5aa2c]        # 0x1400683e0
   14000d9b4:	lea    edi,[rax+0x1]
   14000d9b7:	lea    r8,[rsp+0x58]
   14000d9bc:	mov    edx,edi
   14000d9be:	lea    rcx,[rsp+0x50]
   14000d9c3:	call   0x140002f80
   14000d9c8:	movsxd rdx,edi
   14000d9cb:	mov    r9,rdx
   14000d9ce:	mov    r8,rbx
   14000d9d1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d9d6:	call   0x140033ccc
   14000d9db:	test   eax,eax
   14000d9dd:	je     0x14000da14
   14000d9df:	cmp    eax,0xc
   14000d9e2:	je     0x14000da09
   14000d9e4:	cmp    eax,0x16
   14000d9e7:	je     0x14000d9fe
   14000d9e9:	cmp    eax,0x22
   14000d9ec:	je     0x14000d9fe
   14000d9ee:	cmp    eax,0x50
   14000d9f1:	je     0x14000da14
   14000d9f3:	mov    ecx,0x80004005
   14000d9f8:	call   0x1400025f0
   14000d9fd:	int3   
   14000d9fe:	mov    ecx,0x80070057
   14000da03:	call   0x1400025f0
   14000da08:	int3   
   14000da09:	mov    ecx,0x8007000e
   14000da0e:	call   0x1400025f0
   14000da13:	int3   
   14000da14:	lea    rcx,[rbp-0x20]
   14000da18:	lea    rdx,[rsp+0x50]
   14000da1d:	mov    r8d,0x88
   14000da23:	call   0x140033260
   14000da28:	lea    rdx,[rbp-0x20]
   14000da2c:	mov    QWORD PTR [rsp+0x28],rdx
   14000da31:	mov    QWORD PTR [rsp+0x20],r12
   14000da36:	xor    r9d,r9d
   14000da39:	lea    edx,[r9+0x53]
   14000da3d:	lea    r8d,[r9+0x2]
   14000da41:	lea    rcx,[rip+0x5f078]        # 0x14006cac0
   14000da48:	call   0x140003150
   14000da4d:	lea    rdx,[rsp+0x58]
   14000da52:	mov    rcx,QWORD PTR [rsp+0x50]
   14000da57:	cmp    rcx,rdx
   14000da5a:	je     0x14000da61
   14000da5c:	call   0x140033594
   14000da61:	lea    rax,[rbp-0x18]
   14000da65:	mov    QWORD PTR [rbp-0x20],rax
   14000da69:	mov    r8d,0x3
   14000da6f:	mov    rdx,rbx
   14000da72:	lea    rcx,[rbp-0x20]
   14000da76:	call   0x140005b60
   14000da7b:	nop
   14000da7c:	xor    eax,eax
   14000da7e:	or     rcx,0xffffffffffffffff
   14000da82:	mov    rdx,QWORD PTR [rbp-0x20]
   14000da86:	mov    rdi,rdx
   14000da89:	repnz scas ax,WORD PTR es:[rdi]
   14000da8c:	not    rcx
   14000da8f:	lea    r12,[rsi+0x40]
   14000da93:	lea    r8,[rcx-0x1]
   14000da97:	mov    rcx,r12
   14000da9a:	call   0x14000e6c0
   14000da9f:	nop
   14000daa0:	lea    rax,[rbp-0x18]
   14000daa4:	mov    rcx,QWORD PTR [rbp-0x20]
   14000daa8:	cmp    rcx,rax
   14000daab:	je     0x14000dab2
   14000daad:	call   0x140033594
   14000dab2:	mov    rcx,QWORD PTR [r12+0x18]
   14000dab7:	cmp    rcx,0x8
   14000dabb:	jb     0x14000dac3
   14000dabd:	mov    r13,QWORD PTR [r12]
   14000dac1:	jmp    0x14000dac6
   14000dac3:	mov    r13,r12
   14000dac6:	cmp    rcx,0x8
   14000daca:	jb     0x14000dad2
   14000dacc:	mov    rdx,QWORD PTR [r12]
   14000dad0:	jmp    0x14000dad5
   14000dad2:	mov    rdx,r12
   14000dad5:	mov    rax,QWORD PTR [r12+0x10]
   14000dada:	lea    rdi,[rdx+rax*2]
   14000dade:	cmp    rcx,0x8
   14000dae2:	jb     0x14000daea
   14000dae4:	mov    rbx,QWORD PTR [r12]
   14000dae8:	jmp    0x14000daed
   14000daea:	mov    rbx,r12
   14000daed:	cmp    rbx,rdi
   14000daf0:	je     0x14000db0b
   14000daf2:	sub    r13,rbx
   14000daf5:	movzx  ecx,WORD PTR [rbx]
   14000daf8:	call   0x140033cac
   14000dafd:	mov    WORD PTR [rbx+r13*1],ax
   14000db02:	add    rbx,0x2
   14000db06:	cmp    rbx,rdi
   14000db09:	jne    0x14000daf5
   14000db0b:	mov    rcx,rsi
   14000db0e:	call   0x14000dde0
   14000db13:	test   al,al
   14000db15:	je     0x14000db26
   14000db17:	cmp    QWORD PTR [rsi+0x18],0x0
   14000db1c:	jne    0x14000db26
   14000db1e:	mov    rcx,rsi
   14000db21:	call   0x14000df00
   14000db26:	mov    rcx,QWORD PTR [rsi+0x10]
   14000db2a:	test   rcx,rcx
   14000db2d:	je     0x14000db73
   14000db2f:	cmp    QWORD PTR [r12+0x18],0x8
   14000db35:	jb     0x14000db3b
   14000db37:	mov    r12,QWORD PTR [r12]
   14000db3b:	mov    rax,QWORD PTR [rcx]
   14000db3e:	mov    r8,r12
   14000db41:	mov    rdx,QWORD PTR [rsi+0x18]
   14000db45:	call   QWORD PTR [rax+0x18]
   14000db48:	test   eax,eax
   14000db4a:	jns    0x14000db73
   14000db4c:	mov    DWORD PTR [rsp+0x28],eax
   14000db50:	lea    rax,[rip+0x5f011]        # 0x14006cb68
   14000db57:	mov    QWORD PTR [rsp+0x20],rax
   14000db5c:	xor    r9d,r9d
   14000db5f:	lea    edx,[r9+0x65]
   14000db63:	lea    r8d,[r9+0x1]
   14000db67:	lea    rcx,[rip+0x5ef52]        # 0x14006cac0
   14000db6e:	call   0x140003150
   14000db73:	cmp    QWORD PTR [rsi+0x8],0x0
   14000db78:	je     0x14000ddb3
   14000db7e:	cmp    QWORD PTR [rsi+0x20],0x0
   14000db83:	jne    0x14000ddb3
   14000db89:	lea    rdi,[rsi+0x28]
   14000db8d:	cmp    QWORD PTR [rdi],0x0
   14000db91:	jne    0x14000ddb3
   14000db97:	xor    ebx,ebx
   14000db99:	mov    WORD PTR [rbp+0x1f0],bx
   14000dba0:	xor    edx,edx
   14000dba2:	mov    r8d,0x206
   14000dba8:	lea    rcx,[rbp+0x1f2]
   14000dbaf:	call   0x140036dc0
   14000dbb4:	mov    DWORD PTR [rbp-0x20],0x2e
   14000dbbb:	xor    edx,edx
   14000dbbd:	mov    r8d,0x204
   14000dbc3:	lea    rcx,[rbp-0x1c]
   14000dbc7:	call   0x140036dc0
   14000dbcc:	lea    rdx,[rbp-0x20]
   14000dbd0:	mov    ecx,0x103
   14000dbd5:	call   QWORD PTR [rip+0x5a76d]        # 0x140068348
   14000dbdb:	lea    r9,[rbp+0x1f0]
   14000dbe2:	xor    r8d,r8d
   14000dbe5:	lea    rdx,[rip+0x5efbc]        # 0x14006cba8
   14000dbec:	lea    rcx,[rbp-0x20]
   14000dbf0:	call   QWORD PTR [rip+0x5a75a]        # 0x140068350
   14000dbf6:	test   eax,eax
   14000dbf8:	je     0x14000dc0f
   14000dbfa:	lea    rcx,[rsi+0x68]
   14000dbfe:	lea    r8,[rbp+0x1f0]
   14000dc05:	mov    edx,0x104
   14000dc0a:	call   0x140034290
   14000dc0f:	mov    rcx,QWORD PTR [rsi+0x8]
   14000dc13:	mov    rax,QWORD PTR [rcx]
   14000dc16:	lea    r8,[rsi+0x68]
   14000dc1a:	mov    QWORD PTR [rsp+0x20],rdi
   14000dc1f:	lea    r9,[rsi+0x20]
   14000dc23:	lea    rdx,[rip+0x5d0ae]        # 0x14006acd8
   14000dc2a:	call   QWORD PTR [rax+0x28]
   14000dc2d:	test   eax,eax
   14000dc2f:	jns    0x14000dc58
   14000dc31:	mov    DWORD PTR [rsp+0x28],eax
   14000dc35:	lea    rax,[rip+0x5ef84]        # 0x14006cbc0
   14000dc3c:	mov    QWORD PTR [rsp+0x20],rax
   14000dc41:	xor    r9d,r9d
   14000dc44:	lea    edx,[r9+0x78]
   14000dc48:	lea    r8d,[r9+0x1]
   14000dc4c:	lea    rcx,[rip+0x5ee6d]        # 0x14006cac0
   14000dc53:	call   0x140003150
   14000dc58:	mov    rcx,QWORD PTR [rsi+0x8]
   14000dc5c:	mov    rax,QWORD PTR [rsi+0x20]
   14000dc60:	mov    rdi,QWORD PTR [rcx]
   14000dc63:	mov    QWORD PTR [rsp+0x28],rax
   14000dc68:	mov    QWORD PTR [rsp+0x20],rbx
   14000dc6d:	mov    r9,QWORD PTR [rsi+0x18]
   14000dc71:	lea    r8,[rip+0x5d050]        # 0x14006acc8
   14000dc78:	lea    rdx,[rip+0x5d0a9]        # 0x14006ad28
   14000dc7f:	call   QWORD PTR [rdi+0x38]
   14000dc82:	test   eax,eax
   14000dc84:	jns    0x14000dcad
   14000dc86:	mov    DWORD PTR [rsp+0x28],eax
   14000dc8a:	lea    rax,[rip+0x5ef7f]        # 0x14006cc10
   14000dc91:	mov    QWORD PTR [rsp+0x20],rax
   14000dc96:	xor    r9d,r9d
   14000dc99:	lea    edx,[r9+0x7c]
   14000dc9d:	lea    r8d,[r9+0x1]
   14000dca1:	lea    rcx,[rip+0x5ee18]        # 0x14006cac0
   14000dca8:	call   0x140003150
   14000dcad:	movabs rax,0x7fffffffffffffff
   14000dcb7:	mov    QWORD PTR [rsp+0x40],rax
   14000dcbc:	mov    rcx,QWORD PTR [rsi+0x8]
   14000dcc0:	mov    rax,QWORD PTR [rcx]
   14000dcc3:	mov    WORD PTR [rsp+0x38],bx
   14000dcc8:	mov    WORD PTR [rsp+0x30],bx
   14000dccd:	mov    QWORD PTR [rsp+0x28],rbx
   14000dcd2:	lea    rdx,[rsp+0x40]
   14000dcd7:	mov    QWORD PTR [rsp+0x20],rdx
   14000dcdc:	xor    r9d,r9d
   14000dcdf:	xor    r8d,r8d
   14000dce2:	lea    rdx,[rip+0x5d03f]        # 0x14006ad28
   14000dce9:	call   QWORD PTR [rax+0x40]
   14000dcec:	mov    edi,eax
   14000dcee:	test   eax,eax
   14000dcf0:	jns    0x14000dd1a
   14000dcf2:	mov    DWORD PTR [rsp+0x28],eax
   14000dcf6:	lea    rax,[rip+0x5ef63]        # 0x14006cc60
   14000dcfd:	mov    QWORD PTR [rsp+0x20],rax
   14000dd02:	xor    r9d,r9d
   14000dd05:	mov    edx,0x82
   14000dd0a:	lea    r8d,[r9+0x1]
   14000dd0e:	lea    rcx,[rip+0x5edab]        # 0x14006cac0
   14000dd15:	call   0x140003150
   14000dd1a:	test   edi,edi
   14000dd1c:	setns  al
   14000dd1f:	mov    BYTE PTR [rsi+0x39],al
   14000dd22:	mov    rcx,QWORD PTR [rsi+0x10]
   14000dd26:	mov    rax,QWORD PTR [rcx]
   14000dd29:	lea    r8,[rsi+0x30]
   14000dd2d:	lea    rdx,[rip+0x5d004]        # 0x14006ad38
   14000dd34:	call   QWORD PTR [rax]
   14000dd36:	test   eax,eax
   14000dd38:	jns    0x14000dd62
   14000dd3a:	mov    DWORD PTR [rsp+0x28],eax
   14000dd3e:	lea    rax,[rip+0x5ef6b]        # 0x14006ccb0
   14000dd45:	mov    QWORD PTR [rsp+0x20],rax
   14000dd4a:	xor    r9d,r9d
   14000dd4d:	mov    edx,0x88
   14000dd52:	lea    r8d,[r9+0x1]
   14000dd56:	lea    rcx,[rip+0x5ed63]        # 0x14006cac0
   14000dd5d:	call   0x140003150
   14000dd62:	cmp    QWORD PTR [rsi+0x20],rbx
   14000dd66:	je     0x14000dd73
   14000dd68:	cmp    QWORD PTR [rsi+0x30],rbx
   14000dd6c:	je     0x14000dd73
   14000dd6e:	mov    ebx,0x1
   14000dd73:	mov    BYTE PTR [rsi+0x38],bl
   14000dd76:	lea    rdx,[rip+0x5ef73]        # 0x14006ccf0
   14000dd7d:	lea    rax,[rip+0x5ef78]        # 0x14006ccfc
   14000dd84:	test   bl,bl
   14000dd86:	cmovne rax,rdx
   14000dd8a:	mov    QWORD PTR [rsp+0x28],rax
   14000dd8f:	lea    rax,[rip+0x5ef72]        # 0x14006cd08
   14000dd96:	mov    QWORD PTR [rsp+0x20],rax
   14000dd9b:	xor    r9d,r9d
   14000dd9e:	mov    edx,0x8c
   14000dda3:	lea    r8d,[r9+0x1]
   14000dda7:	lea    rcx,[rip+0x5ed12]        # 0x14006cac0
   14000ddae:	call   0x140003150
   14000ddb3:	movzx  eax,BYTE PTR [rsi+0x38]
   14000ddb7:	mov    rcx,QWORD PTR [rbp+0x400]
   14000ddbe:	xor    rcx,rsp
   14000ddc1:	call   0x140032f00
   14000ddc6:	mov    rbx,QWORD PTR [rsp+0x550]
   14000ddce:	add    rsp,0x510
   14000ddd5:	pop    r13
   14000ddd7:	pop    r12
   14000ddd9:	pop    rdi
   14000ddda:	pop    rsi
   14000dddb:	pop    rbp
   14000dddc:	ret    
   14000dddd:	int3   
   14000ddde:	int3   
   14000dddf:	int3   
   14000dde0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dde5:	mov    QWORD PTR [rsp+0x10],rsi
   14000ddea:	push   rdi
   14000ddeb:	sub    rsp,0x30
   14000ddef:	cmp    QWORD PTR [rcx+0x8],0x0
   14000ddf4:	lea    rsi,[rcx+0x8]
   14000ddf8:	mov    rdi,rcx
   14000ddfb:	mov    ebx,0x1
   14000de00:	jne    0x14000de4e
   14000de02:	lea    r9,[rip+0x5cf6f]        # 0x14006ad78
   14000de09:	lea    rcx,[rip+0x5ced8]        # 0x14006ace8
   14000de10:	xor    edx,edx
   14000de12:	mov    r8d,ebx
   14000de15:	mov    QWORD PTR [rsp+0x20],rsi
   14000de1a:	call   QWORD PTR [rip+0x5a858]        # 0x140068678
   14000de20:	mov    ebx,eax
   14000de22:	test   eax,eax
   14000de24:	jns    0x14000de4e
   14000de26:	mov    DWORD PTR [rsp+0x28],eax
   14000de2a:	xor    r9d,r9d
   14000de2d:	lea    rax,[rip+0x5eefc]        # 0x14006cd30
   14000de34:	lea    rcx,[rip+0x5ec85]        # 0x14006cac0
   14000de3b:	lea    r8d,[r9+0x1]
   14000de3f:	mov    edx,0x9b
   14000de44:	mov    QWORD PTR [rsp+0x20],rax
   14000de49:	call   0x140003150
   14000de4e:	add    rdi,0x10
   14000de52:	cmp    QWORD PTR [rdi],0x0
   14000de56:	jne    0x14000dea5
   14000de58:	xor    edx,edx
   14000de5a:	lea    r9,[rip+0x5cf07]        # 0x14006ad68
   14000de61:	lea    rcx,[rip+0x5ce90]        # 0x14006acf8
   14000de68:	lea    r8d,[rdx+0x3]
   14000de6c:	mov    QWORD PTR [rsp+0x20],rdi
   14000de71:	call   QWORD PTR [rip+0x5a801]        # 0x140068678
   14000de77:	mov    ebx,eax
   14000de79:	test   eax,eax
   14000de7b:	jns    0x14000dea5
   14000de7d:	mov    DWORD PTR [rsp+0x28],eax
   14000de81:	xor    r9d,r9d
   14000de84:	lea    rax,[rip+0x5eee5]        # 0x14006cd70
   14000de8b:	lea    rcx,[rip+0x5ec2e]        # 0x14006cac0
   14000de92:	lea    r8d,[r9+0x1]
   14000de96:	mov    edx,0xa2
   14000de9b:	mov    QWORD PTR [rsp+0x20],rax
   14000dea0:	call   0x140003150
   14000dea5:	mov    rcx,QWORD PTR [rsi]
   14000dea8:	test   rcx,rcx
   14000deab:	je     0x14000dee9
   14000dead:	mov    rdx,QWORD PTR [rdi]
   14000deb0:	test   rdx,rdx
   14000deb3:	je     0x14000dee9
   14000deb5:	mov    rax,QWORD PTR [rcx]
   14000deb8:	call   QWORD PTR [rax+0x18]
   14000debb:	mov    ebx,eax
   14000debd:	test   eax,eax
   14000debf:	jns    0x14000dee9
   14000dec1:	mov    DWORD PTR [rsp+0x28],eax
   14000dec5:	xor    r9d,r9d
   14000dec8:	lea    rax,[rip+0x5eee1]        # 0x14006cdb0
   14000decf:	lea    rcx,[rip+0x5ebea]        # 0x14006cac0
   14000ded6:	lea    r8d,[r9+0x1]
   14000deda:	mov    edx,0xaa
   14000dedf:	mov    QWORD PTR [rsp+0x20],rax
   14000dee4:	call   0x140003150
   14000dee9:	mov    rsi,QWORD PTR [rsp+0x48]
   14000deee:	test   ebx,ebx
   14000def0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000def5:	setns  al
   14000def8:	add    rsp,0x30
   14000defc:	pop    rdi
   14000defd:	ret    
   14000defe:	int3   
   14000deff:	int3   
   14000df00:	mov    rax,rsp
   14000df03:	push   rbp
   14000df04:	push   r12
   14000df06:	push   r13
   14000df08:	push   r14
   14000df0a:	push   r15
   14000df0c:	lea    rbp,[rax-0x5f]
   14000df10:	sub    rsp,0xb0
   14000df17:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   14000df1f:	mov    QWORD PTR [rax+0x10],rbx
   14000df23:	mov    QWORD PTR [rax+0x18],rsi
   14000df27:	mov    QWORD PTR [rax+0x20],rdi
   14000df2b:	mov    rax,QWORD PTR [rip+0x77176]        # 0x1400850a8
   14000df32:	xor    rax,rsp
   14000df35:	mov    QWORD PTR [rbp+0x27],rax
   14000df39:	mov    r13,rcx
   14000df3c:	lea    rax,[rip+0x5eebd]        # 0x14006ce00
   14000df43:	mov    QWORD PTR [rsp+0x28],rax
   14000df48:	lea    rax,[rip+0x5d551]        # 0x14006b4a0
   14000df4f:	mov    QWORD PTR [rsp+0x20],rax
   14000df54:	xor    r9d,r9d
   14000df57:	mov    edx,0xb2
   14000df5c:	lea    r8d,[r9+0x1]
   14000df60:	lea    rcx,[rip+0x5eb59]        # 0x14006cac0
   14000df67:	call   0x140003150
   14000df6c:	xor    r14d,r14d
   14000df6f:	mov    QWORD PTR [rbp-0x41],r14
   14000df73:	lea    rax,[rbp-0x41]
   14000df77:	mov    QWORD PTR [rsp+0x20],rax
   14000df7c:	lea    r9,[rip+0x5cdc5]        # 0x14006ad48
   14000df83:	xor    edx,edx
   14000df85:	lea    r8d,[r14+0x1]
   14000df89:	lea    rcx,[rip+0x5cd78]        # 0x14006ad08
   14000df90:	call   QWORD PTR [rip+0x5a6e2]        # 0x140068678
   14000df96:	test   eax,eax
   14000df98:	jns    0x14000dfc2
   14000df9a:	mov    DWORD PTR [rsp+0x28],eax
   14000df9e:	lea    rax,[rip+0x5ee93]        # 0x14006ce38
   14000dfa5:	mov    QWORD PTR [rsp+0x20],rax
   14000dfaa:	xor    r9d,r9d
   14000dfad:	mov    edx,0xb8
   14000dfb2:	lea    r8d,[r14+0x1]
   14000dfb6:	lea    rcx,[rip+0x5eb03]        # 0x14006cac0
   14000dfbd:	call   0x140003150
   14000dfc2:	mov    rax,r14
   14000dfc5:	mov    QWORD PTR [rbp-0x39],rax
   14000dfc9:	mov    rcx,QWORD PTR [rbp-0x41]
   14000dfcd:	test   rcx,rcx
   14000dfd0:	je     0x14000e28f
   14000dfd6:	mov    rax,QWORD PTR [rcx]
   14000dfd9:	xor    r9d,r9d
   14000dfdc:	lea    r8,[rbp-0x39]
   14000dfe0:	lea    rdx,[rip+0x5cd31]        # 0x14006ad18
   14000dfe7:	call   QWORD PTR [rax+0x18]
   14000dfea:	test   eax,eax
   14000dfec:	jns    0x14000e016
   14000dfee:	mov    DWORD PTR [rsp+0x28],eax
   14000dff2:	lea    rax,[rip+0x5ee77]        # 0x14006ce70
   14000dff9:	mov    QWORD PTR [rsp+0x20],rax
   14000dffe:	xor    r9d,r9d
   14000e001:	mov    edx,0xc0
   14000e006:	lea    r8d,[r9+0x1]
   14000e00a:	lea    rcx,[rip+0x5eaaf]        # 0x14006cac0
   14000e011:	call   0x140003150
   14000e016:	mov    rax,QWORD PTR [rbp-0x39]
   14000e01a:	test   rax,rax
   14000e01d:	je     0x14000e28b
   14000e023:	mov    rdx,QWORD PTR [rax]
   14000e026:	mov    rcx,rax
   14000e029:	call   QWORD PTR [rdx+0x28]
   14000e02c:	mov    DWORD PTR [rbp-0x29],r14d
   14000e030:	mov    QWORD PTR [rbp-0x49],r14
   14000e034:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e038:	mov    rax,QWORD PTR [rcx]
   14000e03b:	lea    r9,[rbp-0x29]
   14000e03f:	lea    r8,[rbp-0x49]
   14000e043:	mov    edx,0x1
   14000e048:	call   QWORD PTR [rax+0x18]
   14000e04b:	test   eax,eax
   14000e04d:	js     0x14000e278
   14000e053:	lea    rdi,[rip+0x5ee5e]        # 0x14006ceb8
   14000e05a:	mov    ebx,0x8
   14000e05f:	or     r15,0xffffffffffffffff
   14000e063:	mov    rcx,QWORD PTR [rbp-0x49]
   14000e067:	test   rcx,rcx
   14000e06a:	je     0x14000e27c
   14000e070:	lea    r12,[r13+0x18]
   14000e074:	cmp    QWORD PTR [r12],0x0
   14000e079:	jne    0x14000e27c
   14000e07f:	mov    QWORD PTR [rbp-0x31],r14
   14000e083:	mov    rax,QWORD PTR [rcx]
   14000e086:	lea    rdx,[rbp-0x31]
   14000e08a:	mov    QWORD PTR [rsp+0x20],rdx
   14000e08f:	lea    r9,[rip+0x5a73a]        # 0x1400687d0
   14000e096:	xor    r8d,r8d
   14000e099:	xor    edx,edx
   14000e09b:	call   QWORD PTR [rax+0x48]
   14000e09e:	test   eax,eax
   14000e0a0:	jns    0x14000e0c3
   14000e0a2:	mov    DWORD PTR [rsp+0x28],eax
   14000e0a6:	mov    QWORD PTR [rsp+0x20],rdi
   14000e0ab:	xor    r9d,r9d
   14000e0ae:	mov    edx,0xd6
   14000e0b3:	lea    r8d,[r9+0x1]
   14000e0b7:	lea    rcx,[rip+0x5ea02]        # 0x14006cac0
   14000e0be:	call   0x140003150
   14000e0c3:	mov    rcx,QWORD PTR [rbp-0x31]
   14000e0c7:	test   rcx,rcx
   14000e0ca:	je     0x14000e228
   14000e0d0:	mov    WORD PTR [rbp-0x21],bx
   14000e0d4:	mov    rax,QWORD PTR [rcx]
   14000e0d7:	xor    r9d,r9d
   14000e0da:	lea    r8,[rbp-0x21]
   14000e0de:	lea    rdx,[rip+0x5ee0b]        # 0x14006cef0
   14000e0e5:	call   QWORD PTR [rax+0x18]
   14000e0e8:	test   eax,eax
   14000e0ea:	js     0x14000e224
   14000e0f0:	mov    QWORD PTR [rbp+0x17],0x7
   14000e0f8:	mov    QWORD PTR [rbp+0xf],r14
   14000e0fc:	mov    WORD PTR [rbp-0x1],r14w
   14000e101:	xor    eax,eax
   14000e103:	mov    rcx,r15
   14000e106:	mov    rdx,QWORD PTR [rbp-0x19]
   14000e10a:	mov    rdi,rdx
   14000e10d:	repnz scas ax,WORD PTR es:[rdi]
   14000e110:	not    rcx
   14000e113:	lea    r8,[rcx-0x1]
   14000e117:	lea    rcx,[rbp-0x1]
   14000e11b:	call   0x14000e6c0
   14000e120:	nop
   14000e121:	lea    rsi,[rbp-0x1]
   14000e125:	mov    r10,QWORD PTR [rbp-0x1]
   14000e129:	mov    r11,QWORD PTR [rbp+0x17]
   14000e12d:	cmp    r11,0x8
   14000e131:	cmovae rsi,r10
   14000e135:	lea    rax,[rbp-0x1]
   14000e139:	cmovae rax,r10
   14000e13d:	mov    r8,QWORD PTR [rbp+0xf]
   14000e141:	lea    rdi,[rax+r8*2]
   14000e145:	lea    rbx,[rbp-0x1]
   14000e149:	cmovae rbx,r10
   14000e14d:	cmp    rbx,rdi
   14000e150:	je     0x14000e176
   14000e152:	sub    rsi,rbx
   14000e155:	movzx  ecx,WORD PTR [rbx]
   14000e158:	call   0x140033cac
   14000e15d:	mov    WORD PTR [rsi+rbx*1],ax
   14000e161:	add    rbx,0x2
   14000e165:	cmp    rbx,rdi
   14000e168:	jne    0x14000e155
   14000e16a:	mov    r11,QWORD PTR [rbp+0x17]
   14000e16e:	mov    r8,QWORD PTR [rbp+0xf]
   14000e172:	mov    r10,QWORD PTR [rbp-0x1]
   14000e176:	lea    rcx,[r13+0x40]
   14000e17a:	mov    r9,QWORD PTR [rcx+0x10]
   14000e17e:	cmp    QWORD PTR [rcx+0x18],0x8
   14000e183:	jb     0x14000e188
   14000e185:	mov    rcx,QWORD PTR [rcx]
   14000e188:	lea    rdx,[rbp-0x1]
   14000e18c:	cmp    r11,0x8
   14000e190:	cmovae rdx,r10
   14000e194:	mov    rdi,r9
   14000e197:	cmp    r8,r9
   14000e19a:	cmovb  rdi,r8
   14000e19e:	test   rdi,rdi
   14000e1a1:	je     0x14000e1c8
   14000e1a3:	movzx  eax,WORD PTR [rcx]
   14000e1a6:	cmp    WORD PTR [rdx],ax
   14000e1a9:	jne    0x14000e1ba
   14000e1ab:	add    rdx,0x2
   14000e1af:	add    rcx,0x2
   14000e1b3:	dec    rdi
   14000e1b6:	jne    0x14000e1a3
   14000e1b8:	jmp    0x14000e1c8
   14000e1ba:	mov    edi,0x1
   14000e1bf:	cmp    WORD PTR [rdx],ax
   14000e1c2:	cmovb  edi,r15d
   14000e1c6:	jmp    0x14000e1cb
   14000e1c8:	mov    edi,r14d
   14000e1cb:	movsxd rax,edi
   14000e1ce:	test   edi,edi
   14000e1d0:	jne    0x14000e1e5
   14000e1d2:	cmp    r8,r9
   14000e1d5:	jae    0x14000e1dc
   14000e1d7:	mov    eax,r15d
   14000e1da:	jmp    0x14000e1e5
   14000e1dc:	mov    eax,r14d
   14000e1df:	cmp    r8,r9
   14000e1e2:	setne  al
   14000e1e5:	test   eax,eax
   14000e1e7:	sete   al
   14000e1ea:	test   al,al
   14000e1ec:	je     0x14000e209
   14000e1ee:	mov    rcx,QWORD PTR [rbp-0x49]
   14000e1f2:	mov    rax,QWORD PTR [rcx]
   14000e1f5:	mov    QWORD PTR [rsp+0x20],r12
   14000e1fa:	lea    r9,[rip+0x5cb57]        # 0x14006ad58
   14000e201:	xor    r8d,r8d
   14000e204:	xor    edx,edx
   14000e206:	call   QWORD PTR [rax+0x40]
   14000e209:	mov    rcx,QWORD PTR [rbp-0x19]
   14000e20d:	call   QWORD PTR [rip+0x5a275]        # 0x140068488
   14000e213:	nop
   14000e214:	cmp    QWORD PTR [rbp+0x17],0x8
   14000e219:	jb     0x14000e224
   14000e21b:	mov    rcx,QWORD PTR [rbp-0x1]
   14000e21f:	call   0x1400330c0
   14000e224:	mov    rcx,QWORD PTR [rbp-0x31]
   14000e228:	mov    rax,QWORD PTR [rbp-0x49]
   14000e22c:	test   rax,rax
   14000e22f:	je     0x14000e242
   14000e231:	mov    rdx,QWORD PTR [rax]
   14000e234:	mov    rcx,rax
   14000e237:	call   QWORD PTR [rdx+0x10]
   14000e23a:	mov    QWORD PTR [rbp-0x49],r14
   14000e23e:	mov    rcx,QWORD PTR [rbp-0x31]
   14000e242:	test   rcx,rcx
   14000e245:	je     0x14000e24d
   14000e247:	mov    rax,QWORD PTR [rcx]
   14000e24a:	call   QWORD PTR [rax+0x10]
   14000e24d:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e251:	mov    rax,QWORD PTR [rcx]
   14000e254:	lea    r9,[rbp-0x29]
   14000e258:	lea    r8,[rbp-0x49]
   14000e25c:	mov    edx,0x1
   14000e261:	call   QWORD PTR [rax+0x18]
   14000e264:	test   eax,eax
   14000e266:	lea    rdi,[rip+0x5ec4b]        # 0x14006ceb8
   14000e26d:	mov    ebx,0x8
   14000e272:	jns    0x14000e063
   14000e278:	mov    rcx,QWORD PTR [rbp-0x49]
   14000e27c:	test   rcx,rcx
   14000e27f:	je     0x14000e287
   14000e281:	mov    rax,QWORD PTR [rcx]
   14000e284:	call   QWORD PTR [rax+0x10]
   14000e287:	mov    rax,QWORD PTR [rbp-0x39]
   14000e28b:	mov    rcx,QWORD PTR [rbp-0x41]
   14000e28f:	cmp    QWORD PTR [r13+0x18],0x0
   14000e294:	setne  dil
   14000e298:	test   rax,rax
   14000e29b:	je     0x14000e2aa
   14000e29d:	mov    rdx,QWORD PTR [rax]
   14000e2a0:	mov    rcx,rax
   14000e2a3:	call   QWORD PTR [rdx+0x10]
   14000e2a6:	mov    rcx,QWORD PTR [rbp-0x41]
   14000e2aa:	test   rcx,rcx
   14000e2ad:	je     0x14000e2b5
   14000e2af:	mov    rdx,QWORD PTR [rcx]
   14000e2b2:	call   QWORD PTR [rdx+0x10]
   14000e2b5:	movzx  eax,dil
   14000e2b9:	mov    rcx,QWORD PTR [rbp+0x27]
   14000e2bd:	xor    rcx,rsp
   14000e2c0:	call   0x140032f00
   14000e2c5:	lea    r11,[rsp+0xb0]
   14000e2cd:	mov    rbx,QWORD PTR [r11+0x38]
   14000e2d1:	mov    rsi,QWORD PTR [r11+0x40]
   14000e2d5:	mov    rdi,QWORD PTR [r11+0x48]
   14000e2d9:	mov    rsp,r11
   14000e2dc:	pop    r15
   14000e2de:	pop    r14
   14000e2e0:	pop    r13
   14000e2e2:	pop    r12
   14000e2e4:	pop    rbp
   14000e2e5:	ret    
   14000e2e6:	int3   
   14000e2e7:	int3   
   14000e2e8:	int3   
   14000e2e9:	int3   
   14000e2ea:	int3   
   14000e2eb:	int3   
   14000e2ec:	int3   
   14000e2ed:	int3   
   14000e2ee:	int3   
   14000e2ef:	int3   
   14000e2f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e2f5:	mov    QWORD PTR [rsp+0x18],rsi
   14000e2fa:	push   rdi
   14000e2fb:	sub    rsp,0xd0
   14000e302:	mov    rax,QWORD PTR [rip+0x76d9f]        # 0x1400850a8
   14000e309:	xor    rax,rsp
   14000e30c:	mov    QWORD PTR [rsp+0xc0],rax
   14000e314:	lea    rax,[rip+0x5ebf5]        # 0x14006cf10
   14000e31b:	xor    r9d,r9d
   14000e31e:	mov    rbx,rcx
   14000e321:	mov    QWORD PTR [rsp+0x28],rax
   14000e326:	lea    rax,[rip+0x5d173]        # 0x14006b4a0
   14000e32d:	lea    rcx,[rip+0x5e78c]        # 0x14006cac0
   14000e334:	lea    r8d,[r9+0x1]
   14000e338:	mov    edx,0xf7
   14000e33d:	mov    QWORD PTR [rsp+0x20],rax
   14000e342:	call   0x140003150
   14000e347:	or     rcx,0xffffffffffffffff
   14000e34b:	xor    eax,eax
   14000e34d:	lea    rdi,[rbx+0x68]
   14000e351:	repnz scas ax,WORD PTR es:[rdi]
   14000e354:	not    rcx
   14000e357:	dec    rcx
   14000e35a:	je     0x14000e399
   14000e35c:	lea    rax,[rsp+0x38]
   14000e361:	lea    rdx,[rbx+0x68]
   14000e365:	lea    rcx,[rsp+0x30]
   14000e36a:	mov    r8d,0x3
   14000e370:	mov    QWORD PTR [rsp+0x30],rax
   14000e375:	call   0x140002a70
   14000e37a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e37f:	call   QWORD PTR [rip+0x59fbb]        # 0x140068340
   14000e385:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e38a:	lea    rdx,[rsp+0x38]
   14000e38f:	cmp    rcx,rdx
   14000e392:	je     0x14000e399
   14000e394:	call   0x140033594
   14000e399:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e39d:	xor    edi,edi
   14000e39f:	test   rcx,rcx
   14000e3a2:	je     0x14000e3ae
   14000e3a4:	mov    rax,QWORD PTR [rcx]
   14000e3a7:	call   QWORD PTR [rax+0x10]
   14000e3aa:	mov    QWORD PTR [rbx+0x28],rdi
   14000e3ae:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e3b2:	test   rcx,rcx
   14000e3b5:	je     0x14000e3c1
   14000e3b7:	mov    rax,QWORD PTR [rcx]
   14000e3ba:	call   QWORD PTR [rax+0x10]
   14000e3bd:	mov    QWORD PTR [rbx+0x20],rdi
   14000e3c1:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e3c5:	test   rcx,rcx
   14000e3c8:	je     0x14000e3d4
   14000e3ca:	mov    rax,QWORD PTR [rcx]
   14000e3cd:	call   QWORD PTR [rax+0x10]
   14000e3d0:	mov    QWORD PTR [rbx+0x30],rdi
   14000e3d4:	mov    rcx,QWORD PTR [rbx+0x18]
   14000e3d8:	test   rcx,rcx
   14000e3db:	je     0x14000e3e7
   14000e3dd:	mov    rax,QWORD PTR [rcx]
   14000e3e0:	call   QWORD PTR [rax+0x10]
   14000e3e3:	mov    QWORD PTR [rbx+0x18],rdi
   14000e3e7:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e3eb:	test   rcx,rcx
   14000e3ee:	je     0x14000e3fa
   14000e3f0:	mov    rax,QWORD PTR [rcx]
   14000e3f3:	call   QWORD PTR [rax+0x10]
   14000e3f6:	mov    QWORD PTR [rbx+0x10],rdi
   14000e3fa:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e3fe:	test   rcx,rcx
   14000e401:	je     0x14000e40d
   14000e403:	mov    rax,QWORD PTR [rcx]
   14000e406:	call   QWORD PTR [rax+0x10]
   14000e409:	mov    QWORD PTR [rbx+0x8],rdi
   14000e40d:	lea    rcx,[rbx+0x40]
   14000e411:	lea    rdx,[rip+0x5e668]        # 0x14006ca80
   14000e418:	xor    r8d,r8d
   14000e41b:	mov    WORD PTR [rbx+0x38],di
   14000e41f:	call   0x14000e6c0
   14000e424:	mov    WORD PTR [rbx+0x68],di
   14000e428:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000e430:	xor    rcx,rsp
   14000e433:	call   0x140032f00
   14000e438:	lea    r11,[rsp+0xd0]
   14000e440:	mov    rbx,QWORD PTR [r11+0x18]
   14000e444:	mov    rsi,QWORD PTR [r11+0x20]
   14000e448:	mov    rsp,r11
   14000e44b:	pop    rdi
   14000e44c:	ret    
   14000e44d:	int3   
   14000e44e:	int3   
   14000e44f:	int3   
   14000e450:	rex push rdi
   14000e452:	sub    rsp,0xd0
   14000e459:	mov    rax,QWORD PTR [rip+0x76c48]        # 0x1400850a8
   14000e460:	xor    rax,rsp
   14000e463:	mov    QWORD PTR [rsp+0xc0],rax
   14000e46b:	cmp    QWORD PTR [rcx+0x20],0x0
   14000e470:	mov    rdi,rcx
   14000e473:	je     0x14000e57c
   14000e479:	mov    rcx,QWORD PTR [rcx+0x30]
   14000e47d:	test   rcx,rcx
   14000e480:	je     0x14000e57c
   14000e486:	cmp    BYTE PTR [rdi+0x39],0x0
   14000e48a:	je     0x14000e57c
   14000e490:	mov    rax,QWORD PTR [rcx]
   14000e493:	mov    QWORD PTR [rsp+0xe8],rbx
   14000e49b:	call   QWORD PTR [rax+0x38]
   14000e49e:	mov    ebx,eax
   14000e4a0:	test   eax,eax
   14000e4a2:	jns    0x14000e4cc
   14000e4a4:	mov    DWORD PTR [rsp+0x28],eax
   14000e4a8:	xor    r9d,r9d
   14000e4ab:	lea    rax,[rip+0x5ea86]        # 0x14006cf38
   14000e4b2:	lea    rcx,[rip+0x5e607]        # 0x14006cac0
   14000e4b9:	lea    r8d,[r9+0x1]
   14000e4bd:	mov    edx,0x116
   14000e4c2:	mov    QWORD PTR [rsp+0x20],rax
   14000e4c7:	call   0x140003150
   14000e4cc:	mov    rcx,QWORD PTR [rdi+0x30]
   14000e4d0:	test   ebx,ebx
   14000e4d2:	mov    rax,QWORD PTR [rcx]
   14000e4d5:	setns  bl
   14000e4d8:	call   QWORD PTR [rax+0x48]
   14000e4db:	test   eax,eax
   14000e4dd:	jns    0x14000e507
   14000e4df:	mov    DWORD PTR [rsp+0x28],eax
   14000e4e3:	xor    r9d,r9d
   14000e4e6:	lea    rax,[rip+0x5ea83]        # 0x14006cf70
   14000e4ed:	lea    rcx,[rip+0x5e5cc]        # 0x14006cac0
   14000e4f4:	lea    r8d,[r9+0x1]
   14000e4f8:	mov    edx,0x11c
   14000e4fd:	mov    QWORD PTR [rsp+0x20],rax
   14000e502:	call   0x140003150
   14000e507:	or     rcx,0xffffffffffffffff
   14000e50b:	lea    rdx,[rdi+0x68]
   14000e50f:	xor    eax,eax
   14000e511:	mov    rdi,rdx
   14000e514:	repnz scas ax,WORD PTR es:[rdi]
   14000e517:	not    rcx
   14000e51a:	dec    rcx
   14000e51d:	je     0x14000e558
   14000e51f:	lea    rax,[rsp+0x38]
   14000e524:	lea    rcx,[rsp+0x30]
   14000e529:	mov    r8d,0x3
   14000e52f:	mov    QWORD PTR [rsp+0x30],rax
   14000e534:	call   0x140002a70
   14000e539:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e53e:	call   QWORD PTR [rip+0x59dfc]        # 0x140068340
   14000e544:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e549:	lea    rdx,[rsp+0x38]
   14000e54e:	cmp    rcx,rdx
   14000e551:	je     0x14000e558
   14000e553:	call   0x140033594
   14000e558:	movzx  eax,bl
   14000e55b:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000e563:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000e56b:	xor    rcx,rsp
   14000e56e:	call   0x140032f00
   14000e573:	add    rsp,0xd0
   14000e57a:	pop    rdi
   14000e57b:	ret    
   14000e57c:	xor    al,al
   14000e57e:	jmp    0x14000e563
   14000e580:	rex push rbx
   14000e582:	sub    rsp,0x20
   14000e586:	mov    rbx,rcx
   14000e589:	mov    rcx,QWORD PTR [rcx]
   14000e58c:	test   rcx,rcx
   14000e58f:	je     0x14000e596
   14000e591:	call   0x14000e2f0
   14000e596:	mov    rcx,QWORD PTR [rbx]
   14000e599:	test   rcx,rcx
   14000e59c:	je     0x14000e5af
   14000e59e:	mov    rax,QWORD PTR [rcx]
   14000e5a1:	mov    edx,0x1
   14000e5a6:	call   QWORD PTR [rax]
   14000e5a8:	mov    QWORD PTR [rbx],0x0
   14000e5af:	add    rsp,0x20
   14000e5b3:	pop    rbx
   14000e5b4:	ret    
   14000e5b5:	int3   
   14000e5b6:	int3   
   14000e5b7:	int3   
   14000e5b8:	int3   
   14000e5b9:	int3   
   14000e5ba:	int3   
   14000e5bb:	int3   
   14000e5bc:	int3   
   14000e5bd:	int3   
   14000e5be:	int3   
   14000e5bf:	int3   
   14000e5c0:	rex push rbx
   14000e5c2:	sub    rsp,0x20
   14000e5c6:	cmp    QWORD PTR [rcx+0x18],0x8
   14000e5cb:	mov    rbx,rcx
   14000e5ce:	jb     0x14000e5d8
   14000e5d0:	mov    rcx,QWORD PTR [rcx]
   14000e5d3:	call   0x1400330c0
   14000e5d8:	xor    eax,eax
   14000e5da:	mov    QWORD PTR [rbx+0x18],0x7
   14000e5e2:	mov    QWORD PTR [rbx+0x10],rax
   14000e5e6:	mov    WORD PTR [rbx],ax
   14000e5e9:	add    rsp,0x20
   14000e5ed:	pop    rbx
   14000e5ee:	ret    
   14000e5ef:	int3   
   14000e5f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e5f5:	mov    QWORD PTR [rsp+0x18],rsi
   14000e5fa:	mov    QWORD PTR [rsp+0x20],rdi
   14000e5ff:	push   r12
   14000e601:	sub    rsp,0x20
   14000e605:	mov    rsi,QWORD PTR [rdx+0x10]
   14000e609:	mov    r12,r8
   14000e60c:	mov    rdi,rdx
   14000e60f:	mov    rbx,rcx
   14000e612:	cmp    rsi,r8
   14000e615:	jae    0x14000e624
   14000e617:	lea    rcx,[rip+0x5cd1a]        # 0x14006b338
   14000e61e:	call   0x140032d5c
   14000e623:	int3   
   14000e624:	sub    rsi,r8
   14000e627:	cmp    r9,rsi
   14000e62a:	cmovb  rsi,r9
   14000e62e:	cmp    rcx,rdx
   14000e631:	jne    0x14000e64f
   14000e633:	lea    rdx,[rsi+r8*1]
   14000e637:	or     r8,0xffffffffffffffff
   14000e63b:	call   0x14000e7b0
   14000e640:	mov    r8,r12
   14000e643:	xor    edx,edx
   14000e645:	mov    rcx,rbx
   14000e648:	call   0x14000e7b0
   14000e64d:	jmp    0x14000e6a7
   14000e64f:	mov    rdx,rsi
   14000e652:	call   0x14000e850
   14000e657:	test   al,al
   14000e659:	je     0x14000e6a7
   14000e65b:	cmp    QWORD PTR [rdi+0x18],0x8
   14000e660:	mov    QWORD PTR [rsp+0x30],rbp
   14000e665:	jb     0x14000e66a
   14000e667:	mov    rdi,QWORD PTR [rdi]
   14000e66a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e66f:	jb     0x14000e676
   14000e671:	mov    rcx,QWORD PTR [rbx]
   14000e674:	jmp    0x14000e679
   14000e676:	mov    rcx,rbx
   14000e679:	lea    rbp,[rsi+rsi*1]
   14000e67d:	lea    rdx,[rdi+r12*2]
   14000e681:	mov    r8,rbp
   14000e684:	call   0x140033260
   14000e689:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e68e:	mov    QWORD PTR [rbx+0x10],rsi
   14000e692:	jb     0x14000e699
   14000e694:	mov    rax,QWORD PTR [rbx]
   14000e697:	jmp    0x14000e69c
   14000e699:	mov    rax,rbx
   14000e69c:	xor    ecx,ecx
   14000e69e:	mov    WORD PTR [rax+rbp*1],cx
   14000e6a2:	mov    rbp,QWORD PTR [rsp+0x30]
   14000e6a7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e6ac:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e6b1:	mov    rax,rbx
   14000e6b4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e6b9:	add    rsp,0x20
   14000e6bd:	pop    r12
   14000e6bf:	ret    
   14000e6c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e6c5:	mov    QWORD PTR [rsp+0x18],rbp
   14000e6ca:	push   rdi
   14000e6cb:	sub    rsp,0x20
   14000e6cf:	mov    rbp,r8
   14000e6d2:	mov    rdi,rdx
   14000e6d5:	mov    rbx,rcx
   14000e6d8:	test   rdx,rdx
   14000e6db:	je     0x14000e73e
   14000e6dd:	mov    r9,QWORD PTR [rcx+0x18]
   14000e6e1:	cmp    r9,0x8
   14000e6e5:	jb     0x14000e6ec
   14000e6e7:	mov    rax,QWORD PTR [rcx]
   14000e6ea:	jmp    0x14000e6ef
   14000e6ec:	mov    rax,rcx
   14000e6ef:	cmp    rdx,rax
   14000e6f2:	jb     0x14000e73e
   14000e6f4:	cmp    r9,0x8
   14000e6f8:	jb     0x14000e6fd
   14000e6fa:	mov    rcx,QWORD PTR [rcx]
   14000e6fd:	mov    rax,QWORD PTR [rbx+0x10]
   14000e701:	lea    rcx,[rcx+rax*2]
   14000e705:	cmp    rcx,rdx
   14000e708:	jbe    0x14000e73e
   14000e70a:	cmp    r9,0x8
   14000e70e:	jb     0x14000e715
   14000e710:	mov    rax,QWORD PTR [rbx]
   14000e713:	jmp    0x14000e718
   14000e715:	mov    rax,rbx
   14000e718:	sub    rdi,rax
   14000e71b:	mov    r9,r8
   14000e71e:	mov    rdx,rbx
   14000e721:	sar    rdi,1
   14000e724:	mov    rcx,rbx
   14000e727:	mov    r8,rdi
   14000e72a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e72f:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e734:	add    rsp,0x20
   14000e738:	pop    rdi
   14000e739:	jmp    0x14000e5f0
   14000e73e:	mov    rdx,r8
   14000e741:	mov    rcx,rbx
   14000e744:	call   0x14000e850
   14000e749:	test   al,al
   14000e74b:	je     0x14000e78f
   14000e74d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e752:	mov    QWORD PTR [rsp+0x30],rsi
   14000e757:	jb     0x14000e75e
   14000e759:	mov    rcx,QWORD PTR [rbx]
   14000e75c:	jmp    0x14000e761
   14000e75e:	mov    rcx,rbx
   14000e761:	lea    rsi,[rbp+rbp*1+0x0]
   14000e766:	mov    rdx,rdi
   14000e769:	mov    r8,rsi
   14000e76c:	call   0x140033260
   14000e771:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e776:	mov    QWORD PTR [rbx+0x10],rbp
   14000e77a:	jb     0x14000e781
   14000e77c:	mov    rax,QWORD PTR [rbx]
   14000e77f:	jmp    0x14000e784
   14000e781:	mov    rax,rbx
   14000e784:	xor    ecx,ecx
   14000e786:	mov    WORD PTR [rsi+rax*1],cx
   14000e78a:	mov    rsi,QWORD PTR [rsp+0x30]
   14000e78f:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e794:	mov    rax,rbx
   14000e797:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e79c:	add    rsp,0x20
   14000e7a0:	pop    rdi
   14000e7a1:	ret    
   14000e7a2:	int3   
   14000e7a3:	int3   
   14000e7a4:	int3   
   14000e7a5:	int3   
   14000e7a6:	int3   
   14000e7a7:	int3   
   14000e7a8:	int3   
   14000e7a9:	int3   
   14000e7aa:	int3   
   14000e7ab:	int3   
   14000e7ac:	int3   
   14000e7ad:	int3   
   14000e7ae:	int3   
   14000e7af:	int3   
   14000e7b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e7b5:	push   rdi
   14000e7b6:	sub    rsp,0x20
   14000e7ba:	mov    rdi,r8
   14000e7bd:	mov    r8,QWORD PTR [rcx+0x10]
   14000e7c1:	mov    r9,rdx
   14000e7c4:	mov    rbx,rcx
   14000e7c7:	cmp    r8,rdx
   14000e7ca:	jae    0x14000e7d9
   14000e7cc:	lea    rcx,[rip+0x5cb65]        # 0x14006b338
   14000e7d3:	call   0x140032d5c
   14000e7d8:	int3   
   14000e7d9:	sub    r8,rdx
   14000e7dc:	cmp    r8,rdi
   14000e7df:	cmovb  rdi,r8
   14000e7e3:	test   rdi,rdi
   14000e7e6:	je     0x14000e83b
   14000e7e8:	mov    rax,QWORD PTR [rcx+0x18]
   14000e7ec:	cmp    rax,0x8
   14000e7f0:	jb     0x14000e7f7
   14000e7f2:	mov    rdx,QWORD PTR [rcx]
   14000e7f5:	jmp    0x14000e7fa
   14000e7f7:	mov    rdx,rcx
   14000e7fa:	cmp    rax,0x8
   14000e7fe:	jb     0x14000e803
   14000e800:	mov    rcx,QWORD PTR [rcx]
   14000e803:	lea    rax,[r9+rdi*1]
   14000e807:	sub    r8,rdi
   14000e80a:	lea    rcx,[rcx+r9*2]
   14000e80e:	lea    rdx,[rdx+rax*2]
   14000e812:	add    r8,r8
   14000e815:	call   0x140033260
   14000e81a:	mov    r11,QWORD PTR [rbx+0x10]
   14000e81e:	sub    r11,rdi
   14000e821:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e826:	mov    QWORD PTR [rbx+0x10],r11
   14000e82a:	jb     0x14000e831
   14000e82c:	mov    rax,QWORD PTR [rbx]
   14000e82f:	jmp    0x14000e834
   14000e831:	mov    rax,rbx
   14000e834:	xor    ecx,ecx
   14000e836:	mov    WORD PTR [rax+r11*2],cx
   14000e83b:	mov    rax,rbx
   14000e83e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e843:	add    rsp,0x20
   14000e847:	pop    rdi
   14000e848:	ret    
   14000e849:	int3   
   14000e84a:	int3   
   14000e84b:	int3   
   14000e84c:	int3   
   14000e84d:	int3   
   14000e84e:	int3   
   14000e84f:	int3   
   14000e850:	rex push rdi
   14000e852:	sub    rsp,0x20
   14000e856:	movabs rax,0x7ffffffffffffffe
   14000e860:	mov    rdi,rdx
   14000e863:	cmp    rdx,rax
   14000e866:	jbe    0x14000e875
   14000e868:	lea    rcx,[rip+0x5cae1]        # 0x14006b350
   14000e86f:	call   0x140032d00
   14000e874:	int3   
   14000e875:	mov    rax,QWORD PTR [rcx+0x18]
   14000e879:	mov    QWORD PTR [rsp+0x30],rbx
   14000e87e:	xor    ebx,ebx
   14000e880:	cmp    rax,rdx
   14000e883:	jae    0x14000e89f
   14000e885:	mov    r8,QWORD PTR [rcx+0x10]
   14000e889:	call   0x14000e8d0
   14000e88e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e893:	test   rdi,rdi
   14000e896:	setne  al
   14000e899:	add    rsp,0x20
   14000e89d:	pop    rdi
   14000e89e:	ret    
   14000e89f:	test   rdx,rdx
   14000e8a2:	jne    0x14000e8b4
   14000e8a4:	mov    QWORD PTR [rcx+0x10],rbx
   14000e8a8:	cmp    rax,0x8
   14000e8ac:	jb     0x14000e8b1
   14000e8ae:	mov    rcx,QWORD PTR [rcx]
   14000e8b1:	mov    WORD PTR [rcx],bx
   14000e8b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e8b9:	test   rdi,rdi
   14000e8bc:	setne  al
   14000e8bf:	add    rsp,0x20
   14000e8c3:	pop    rdi
   14000e8c4:	ret    
   14000e8c5:	int3   
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	int3   
   14000e8c9:	int3   
   14000e8ca:	int3   
   14000e8cb:	int3   
   14000e8cc:	int3   
   14000e8cd:	int3   
   14000e8ce:	int3   
   14000e8cf:	int3   
   14000e8d0:	mov    QWORD PTR [rsp+0x18],r8
   14000e8d5:	mov    QWORD PTR [rsp+0x10],rdx
   14000e8da:	mov    QWORD PTR [rsp+0x8],rcx
   14000e8df:	push   rbx
   14000e8e0:	push   rsi
   14000e8e1:	push   rdi
   14000e8e2:	push   r12
   14000e8e4:	push   r13
   14000e8e6:	sub    rsp,0x40
   14000e8ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e8f3:	mov    r13,r8
   14000e8f6:	mov    rbx,rcx
   14000e8f9:	mov    rdi,rdx
   14000e8fc:	or     rdi,0x7
   14000e900:	movabs r9,0x7ffffffffffffffe
   14000e90a:	cmp    rdi,r9
   14000e90d:	jbe    0x14000e914
   14000e90f:	mov    rdi,rdx
   14000e912:	jmp    0x14000e945
   14000e914:	mov    r8,QWORD PTR [rcx+0x18]
   14000e918:	mov    rcx,r8
   14000e91b:	shr    rcx,1
   14000e91e:	movabs rax,0xaaaaaaaaaaaaaaab
   14000e928:	mul    rdi
   14000e92b:	shr    rdx,1
   14000e92e:	cmp    rcx,rdx
   14000e931:	jbe    0x14000e945
   14000e933:	mov    rax,r9
   14000e936:	sub    rax,rcx
   14000e939:	cmp    r8,rax
   14000e93c:	lea    rdi,[rcx+r8*1]
   14000e940:	jbe    0x14000e945
   14000e942:	mov    rdi,r9
   14000e945:	lea    rcx,[rdi+0x1]
   14000e949:	xor    r12d,r12d
   14000e94c:	mov    esi,r12d
   14000e94f:	test   rcx,rcx
   14000e952:	je     0x14000e9ab
   14000e954:	movabs rax,0x7fffffffffffffff
   14000e95e:	cmp    rcx,rax
   14000e961:	ja     0x14000e973
   14000e963:	add    rcx,rcx
   14000e966:	call   0x1400331a0
   14000e96b:	mov    rsi,rax
   14000e96e:	test   rax,rax
   14000e971:	jne    0x14000e9ab
   14000e973:	mov    QWORD PTR [rsp+0x88],r12
   14000e97b:	lea    rdx,[rsp+0x88]
   14000e983:	lea    rcx,[rsp+0x28]
   14000e988:	call   0x140032fd4
   14000e98d:	lea    rax,[rip+0x59efc]        # 0x140068890
   14000e994:	mov    QWORD PTR [rsp+0x28],rax
   14000e999:	lea    rdx,[rip+0x74a80]        # 0x140083420
   14000e9a0:	lea    rcx,[rsp+0x28]
   14000e9a5:	call   0x140036358
   14000e9aa:	nop
   14000e9ab:	jmp    0x14000e9ca
   14000e9ad:	xor    r12d,r12d
   14000e9b0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e9b5:	mov    r13,QWORD PTR [rsp+0x80]
   14000e9bd:	mov    rdi,QWORD PTR [rsp+0x78]
   14000e9c2:	mov    rsi,QWORD PTR [rsp+0x88]
   14000e9ca:	test   r13,r13
   14000e9cd:	je     0x14000e9eb
   14000e9cf:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e9d4:	jb     0x14000e9db
   14000e9d6:	mov    rdx,QWORD PTR [rbx]
   14000e9d9:	jmp    0x14000e9de
   14000e9db:	mov    rdx,rbx
   14000e9de:	lea    r8,[r13+r13*1+0x0]
   14000e9e3:	mov    rcx,rsi
   14000e9e6:	call   0x140033260
   14000e9eb:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e9f0:	jb     0x14000e9fa
   14000e9f2:	mov    rcx,QWORD PTR [rbx]
   14000e9f5:	call   0x1400330c0
   14000e9fa:	mov    QWORD PTR [rbx],rsi
   14000e9fd:	mov    QWORD PTR [rbx+0x18],rdi
   14000ea01:	mov    QWORD PTR [rbx+0x10],r13
   14000ea05:	cmp    rdi,0x8
   14000ea09:	cmovae rbx,rsi
   14000ea0d:	mov    WORD PTR [rbx+r13*2],r12w
   14000ea12:	add    rsp,0x40
   14000ea16:	pop    r13
   14000ea18:	pop    r12
   14000ea1a:	pop    rdi
   14000ea1b:	pop    rsi
   14000ea1c:	pop    rbx
   14000ea1d:	ret    
   14000ea1e:	int3   
   14000ea1f:	int3   
   14000ea20:	sub    rsp,0x48
   14000ea24:	xor    eax,eax
   14000ea26:	test   rcx,rcx
   14000ea29:	je     0x14000ea7d
   14000ea2b:	movabs rax,0x7fffffffffffffff
   14000ea35:	cmp    rcx,rax
   14000ea38:	ja     0x14000ea47
   14000ea3a:	add    rcx,rcx
   14000ea3d:	call   0x1400331a0
   14000ea42:	test   rax,rax
   14000ea45:	jne    0x14000ea7d
   14000ea47:	lea    rdx,[rsp+0x50]
   14000ea4c:	lea    rcx,[rsp+0x20]
   14000ea51:	mov    QWORD PTR [rsp+0x50],0x0
   14000ea5a:	call   0x140032fd4
   14000ea5f:	lea    r11,[rip+0x59e2a]        # 0x140068890
   14000ea66:	lea    rdx,[rip+0x749b3]        # 0x140083420
   14000ea6d:	lea    rcx,[rsp+0x20]
   14000ea72:	mov    QWORD PTR [rsp+0x20],r11
   14000ea77:	call   0x140036358
   14000ea7c:	int3   
   14000ea7d:	add    rsp,0x48
   14000ea81:	ret    
   14000ea82:	int3   
   14000ea83:	int3   
   14000ea84:	int3   
   14000ea85:	int3   
   14000ea86:	int3   
   14000ea87:	int3   
   14000ea88:	int3   
   14000ea89:	int3   
   14000ea8a:	int3   
   14000ea8b:	int3   
   14000ea8c:	int3   
   14000ea8d:	int3   
   14000ea8e:	int3   
   14000ea8f:	int3   
   14000ea90:	mov    rax,rsp
   14000ea93:	push   rdi
   14000ea94:	sub    rsp,0x170
   14000ea9b:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000eaa4:	mov    QWORD PTR [rax+0x10],rbx
   14000eaa8:	mov    QWORD PTR [rax+0x18],rsi
   14000eaac:	mov    rax,QWORD PTR [rip+0x765f5]        # 0x1400850a8
   14000eab3:	xor    rax,rsp
   14000eab6:	mov    QWORD PTR [rsp+0x160],rax
   14000eabe:	mov    rsi,rcx
   14000eac1:	xor    dil,dil
   14000eac4:	mov    QWORD PTR [rsp+0x30],0x0
   14000eacd:	lea    rax,[rsp+0x30]
   14000ead2:	mov    QWORD PTR [rsp+0x20],rax
   14000ead7:	lea    r9,[rip+0x5c8f2]        # 0x14006b3d0
   14000eade:	xor    edx,edx
   14000eae0:	lea    r8d,[rdx+0x17]
   14000eae4:	lea    rcx,[rip+0x5c8c5]        # 0x14006b3b0
   14000eaeb:	call   QWORD PTR [rip+0x59b87]        # 0x140068678
   14000eaf1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eaf6:	test   rbx,rbx
   14000eaf9:	je     0x14000eb71
   14000eafb:	mov    QWORD PTR [rsp+0x38],0x0
   14000eb04:	lea    rax,[rsp+0x58]
   14000eb09:	mov    QWORD PTR [rsp+0x50],rax
   14000eb0e:	mov    r8d,0x3
   14000eb14:	mov    rdx,rsi
   14000eb17:	lea    rcx,[rsp+0x50]
   14000eb1c:	call   0x140005b60
   14000eb21:	nop
   14000eb22:	mov    rax,QWORD PTR [rbx]
   14000eb25:	lea    r8,[rsp+0x38]
   14000eb2a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000eb2f:	mov    rcx,rbx
   14000eb32:	call   QWORD PTR [rax+0x28]
   14000eb35:	mov    ebx,eax
   14000eb37:	lea    rax,[rsp+0x58]
   14000eb3c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000eb41:	cmp    rcx,rax
   14000eb44:	je     0x14000eb4b
   14000eb46:	call   0x140033594
   14000eb4b:	mov    rcx,QWORD PTR [rsp+0x38]
   14000eb50:	test   ebx,ebx
   14000eb52:	js     0x14000eb5e
   14000eb54:	test   rcx,rcx
   14000eb57:	je     0x14000eb5e
   14000eb59:	mov    dil,0x1
   14000eb5c:	jmp    0x14000eb61
   14000eb5e:	xor    dil,dil
   14000eb61:	test   rcx,rcx
   14000eb64:	je     0x14000eb6c
   14000eb66:	mov    rax,QWORD PTR [rcx]
   14000eb69:	call   QWORD PTR [rax+0x10]
   14000eb6c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eb71:	test   rbx,rbx
   14000eb74:	je     0x14000eb7f
   14000eb76:	mov    rdx,QWORD PTR [rbx]
   14000eb79:	mov    rcx,rbx
   14000eb7c:	call   QWORD PTR [rdx+0x10]
   14000eb7f:	movzx  eax,dil
   14000eb83:	mov    rcx,QWORD PTR [rsp+0x160]
   14000eb8b:	xor    rcx,rsp
   14000eb8e:	call   0x140032f00
   14000eb93:	lea    r11,[rsp+0x170]
   14000eb9b:	mov    rbx,QWORD PTR [r11+0x18]
   14000eb9f:	mov    rsi,QWORD PTR [r11+0x20]
   14000eba3:	mov    rsp,r11
   14000eba6:	pop    rdi
   14000eba7:	ret    
   14000eba8:	int3   
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	rex push rbx
   14000ebb2:	sub    rsp,0x40
   14000ebb6:	xor    bl,bl
   14000ebb8:	test   rcx,rcx
   14000ebbb:	je     0x14000ec11
   14000ebbd:	xor    eax,eax
   14000ebbf:	lea    r8,[rsp+0x20]
   14000ebc4:	lea    rdx,[rip+0x5de4d]        # 0x14006ca18
   14000ebcb:	mov    QWORD PTR [rsp+0x20],rax
   14000ebd0:	mov    QWORD PTR [rsp+0x28],rax
   14000ebd5:	mov    QWORD PTR [rsp+0x30],rax
   14000ebda:	mov    rax,QWORD PTR [rcx]
   14000ebdd:	call   QWORD PTR [rax+0x28]
   14000ebe0:	test   eax,eax
   14000ebe2:	js     0x14000ec11
   14000ebe4:	mov    eax,0x13
   14000ebe9:	cmp    ax,WORD PTR [rsp+0x20]
   14000ebee:	jne    0x14000ec11
   14000ebf0:	mov    rax,QWORD PTR [rsp+0x28]
   14000ebf5:	cmp    eax,0x10
   14000ebf8:	je     0x14000ec04
   14000ebfa:	cmp    eax,0x50
   14000ebfd:	je     0x14000ec04
   14000ebff:	cmp    eax,0x30
   14000ec02:	jne    0x14000ec06
   14000ec04:	mov    bl,0x1
   14000ec06:	lea    rcx,[rsp+0x20]
   14000ec0b:	call   QWORD PTR [rip+0x59a6f]        # 0x140068680
   14000ec11:	movzx  eax,bl
   14000ec14:	add    rsp,0x40
   14000ec18:	pop    rbx
   14000ec19:	ret    
   14000ec1a:	int3   
   14000ec1b:	int3   
   14000ec1c:	int3   
   14000ec1d:	int3   
   14000ec1e:	int3   
   14000ec1f:	int3   
   14000ec20:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec25:	push   rdi
   14000ec26:	sub    rsp,0x40
   14000ec2a:	xor    bl,bl
   14000ec2c:	movzx  edi,dl
   14000ec2f:	test   rcx,rcx
   14000ec32:	je     0x14000ec9b
   14000ec34:	xor    eax,eax
   14000ec36:	lea    r8,[rip+0x5dddb]        # 0x14006ca18
   14000ec3d:	lea    rdx,[rip+0x5ddec]        # 0x14006ca30
   14000ec44:	mov    QWORD PTR [rsp+0x20],rax
   14000ec49:	mov    QWORD PTR [rsp+0x28],rax
   14000ec4e:	mov    QWORD PTR [rsp+0x30],rax
   14000ec53:	mov    rax,QWORD PTR [rcx]
   14000ec56:	test   dil,dil
   14000ec59:	cmovne rdx,r8
   14000ec5d:	lea    r8,[rsp+0x20]
   14000ec62:	call   QWORD PTR [rax+0x28]
   14000ec65:	test   eax,eax
   14000ec67:	js     0x14000ec9b
   14000ec69:	mov    eax,0x13
   14000ec6e:	cmp    ax,WORD PTR [rsp+0x20]
   14000ec73:	jne    0x14000ec9b
   14000ec75:	mov    rax,QWORD PTR [rsp+0x28]
   14000ec7a:	test   dil,dil
   14000ec7d:	je     0x14000ec84
   14000ec7f:	cmp    eax,0x10
   14000ec82:	je     0x14000ec8e
   14000ec84:	cmp    eax,0x1
   14000ec87:	je     0x14000ec8e
   14000ec89:	cmp    eax,0x2
   14000ec8c:	jne    0x14000ec90
   14000ec8e:	mov    bl,0x1
   14000ec90:	lea    rcx,[rsp+0x20]
   14000ec95:	call   QWORD PTR [rip+0x599e5]        # 0x140068680
   14000ec9b:	movzx  eax,bl
   14000ec9e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000eca3:	add    rsp,0x40
   14000eca7:	pop    rdi
   14000eca8:	ret    
   14000eca9:	int3   
   14000ecaa:	int3   
   14000ecab:	int3   
   14000ecac:	int3   
   14000ecad:	int3   
   14000ecae:	int3   
   14000ecaf:	int3   
   14000ecb0:	rex push rbp
   14000ecb2:	push   rsi
   14000ecb3:	push   rdi
   14000ecb4:	sub    rsp,0xe0
   14000ecbb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000ecc4:	mov    QWORD PTR [rsp+0x110],rbx
   14000eccc:	mov    rax,QWORD PTR [rip+0x763d5]        # 0x1400850a8
   14000ecd3:	xor    rax,rsp
   14000ecd6:	mov    QWORD PTR [rsp+0xd0],rax
   14000ecde:	mov    rsi,rdx
   14000ece1:	mov    rbp,rcx
   14000ece4:	mov    QWORD PTR [rsp+0x30],rdx
   14000ece9:	xor    r9d,r9d
   14000ecec:	mov    DWORD PTR [rsp+0x20],r9d
   14000ecf1:	mov    QWORD PTR [rdx+0x18],0xf
   14000ecf9:	mov    QWORD PTR [rdx+0x10],r9
   14000ecfd:	mov    BYTE PTR [rdx],r9b
   14000ed00:	mov    DWORD PTR [rsp+0x20],0x1
   14000ed08:	lea    rbx,[rip+0x5c587]        # 0x14006b296
   14000ed0f:	xor    dil,dil
   14000ed12:	mov    edx,r9d
   14000ed15:	lea    rcx,[rip+0x78a6c]        # 0x140087788
   14000ed1c:	nop    DWORD PTR [rax+0x0]
   14000ed20:	cmp    edx,0x36
   14000ed23:	jae    0x14000ed3e
   14000ed25:	mov    eax,DWORD PTR [rcx+0x8]
   14000ed28:	cmp    DWORD PTR [rbp+0x2c],eax
   14000ed2b:	jne    0x14000ed33
   14000ed2d:	mov    rbx,QWORD PTR [rcx]
   14000ed30:	mov    dil,0x1
   14000ed33:	inc    edx
   14000ed35:	add    rcx,0x18
   14000ed39:	test   dil,dil
   14000ed3c:	je     0x14000ed20
   14000ed3e:	lea    rax,[rsp+0x48]
   14000ed43:	mov    QWORD PTR [rsp+0x40],rax
   14000ed48:	test   rbx,rbx
   14000ed4b:	jne    0x14000ed54
   14000ed4d:	mov    QWORD PTR [rsp+0x40],r9
   14000ed52:	jmp    0x14000edc2
   14000ed54:	mov    rcx,rbx
   14000ed57:	call   QWORD PTR [rip+0x59683]        # 0x1400683e0
   14000ed5d:	lea    edi,[rax+0x1]
   14000ed60:	lea    r8,[rsp+0x48]
   14000ed65:	mov    edx,edi
   14000ed67:	lea    rcx,[rsp+0x40]
   14000ed6c:	call   0x140002f80
   14000ed71:	movsxd rdx,edi
   14000ed74:	mov    r9,rdx
   14000ed77:	mov    r8,rbx
   14000ed7a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ed7f:	call   0x140033ccc
   14000ed84:	test   eax,eax
   14000ed86:	je     0x14000edbd
   14000ed88:	cmp    eax,0xc
   14000ed8b:	je     0x14000edb2
   14000ed8d:	cmp    eax,0x16
   14000ed90:	je     0x14000eda7
   14000ed92:	cmp    eax,0x22
   14000ed95:	je     0x14000eda7
   14000ed97:	cmp    eax,0x50
   14000ed9a:	je     0x14000edbd
   14000ed9c:	mov    ecx,0x80004005
   14000eda1:	call   0x1400025f0
   14000eda6:	int3   
   14000eda7:	mov    ecx,0x80070057
   14000edac:	call   0x1400025f0
   14000edb1:	int3   
   14000edb2:	mov    ecx,0x8007000e
   14000edb7:	call   0x1400025f0
   14000edbc:	int3   
   14000edbd:	mov    r9,QWORD PTR [rsp+0x40]
   14000edc2:	xor    eax,eax
   14000edc4:	or     rcx,0xffffffffffffffff
   14000edc8:	mov    rdi,r9
   14000edcb:	repnz scas al,BYTE PTR es:[rdi]
   14000edcd:	not    rcx
   14000edd0:	lea    r8,[rcx-0x1]
   14000edd4:	mov    rdx,r9
   14000edd7:	mov    rcx,rsi
   14000edda:	call   0x140002ba0
   14000eddf:	nop
   14000ede0:	lea    rax,[rsp+0x48]
   14000ede5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000edea:	cmp    rcx,rax
   14000eded:	je     0x14000edf4
   14000edef:	call   0x140033594
   14000edf4:	mov    r8d,0x1
   14000edfa:	lea    rdx,[rip+0x5cb0b]        # 0x14006b90c
   14000ee01:	mov    rcx,rsi
   14000ee04:	call   0x140008ee0
   14000ee09:	or     r9,0xffffffffffffffff
   14000ee0d:	xor    r8d,r8d
   14000ee10:	mov    rdx,rbp
   14000ee13:	mov    rcx,rsi
   14000ee16:	call   0x140009530
   14000ee1b:	mov    rax,rsi
   14000ee1e:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000ee26:	xor    rcx,rsp
   14000ee29:	call   0x140032f00
   14000ee2e:	mov    rbx,QWORD PTR [rsp+0x110]
   14000ee36:	add    rsp,0xe0
   14000ee3d:	pop    rdi
   14000ee3e:	pop    rsi
   14000ee3f:	pop    rbp
   14000ee40:	ret    
   14000ee41:	int3   
   14000ee42:	int3   
   14000ee43:	int3   
   14000ee44:	int3   
   14000ee45:	int3   
   14000ee46:	int3   
   14000ee47:	int3   
   14000ee48:	int3   
   14000ee49:	int3   
   14000ee4a:	int3   
   14000ee4b:	int3   
   14000ee4c:	int3   
   14000ee4d:	int3   
   14000ee4e:	int3   
   14000ee4f:	int3   
   14000ee50:	mov    QWORD PTR [rsp+0x8],rcx
   14000ee55:	push   rbx
   14000ee56:	sub    rsp,0x30
   14000ee5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ee63:	mov    rbx,rcx
   14000ee66:	mov    r8,QWORD PTR [rcx+0x8]
   14000ee6a:	mov    r9,r8
   14000ee6d:	mov    r8,QWORD PTR [r8]
   14000ee70:	lea    rdx,[rsp+0x48]
   14000ee75:	call   0x140011c90
   14000ee7a:	nop
   14000ee7b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ee7f:	add    rsp,0x30
   14000ee83:	pop    rbx
   14000ee84:	jmp    0x1400330c0
   14000ee89:	int3   
   14000ee8a:	int3   
   14000ee8b:	int3   
   14000ee8c:	int3   
   14000ee8d:	int3   
   14000ee8e:	int3   
   14000ee8f:	int3   
   14000ee90:	mov    QWORD PTR [rsp+0x8],rcx
   14000ee95:	push   rbx
   14000ee96:	sub    rsp,0x30
   14000ee9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000eea3:	mov    rbx,rcx
   14000eea6:	mov    rdx,QWORD PTR [rcx+0x8]
   14000eeaa:	mov    rdx,QWORD PTR [rdx+0x8]
   14000eeae:	call   0x140011a50
   14000eeb3:	mov    r11,QWORD PTR [rbx+0x8]
   14000eeb7:	mov    QWORD PTR [r11+0x8],r11
   14000eebb:	mov    rax,QWORD PTR [rbx+0x8]
   14000eebf:	mov    QWORD PTR [rax],rax
   14000eec2:	mov    rax,QWORD PTR [rbx+0x8]
   14000eec6:	mov    QWORD PTR [rax+0x10],rax
   14000eeca:	mov    QWORD PTR [rbx+0x10],0x0
   14000eed2:	mov    r8,QWORD PTR [rbx+0x8]
   14000eed6:	mov    r9,r8
   14000eed9:	mov    r8,QWORD PTR [r8]
   14000eedc:	lea    rdx,[rsp+0x48]
   14000eee1:	mov    rcx,rbx
   14000eee4:	call   0x140011c90
   14000eee9:	nop
   14000eeea:	mov    rcx,QWORD PTR [rbx+0x8]
   14000eeee:	add    rsp,0x30
   14000eef2:	pop    rbx
   14000eef3:	jmp    0x1400330c0
   14000eef8:	int3   
   14000eef9:	int3   
   14000eefa:	int3   
   14000eefb:	int3   
   14000eefc:	int3   
   14000eefd:	int3   
   14000eefe:	int3   
   14000eeff:	int3   
   14000ef00:	mov    rax,rsp
   14000ef03:	push   rbp
   14000ef04:	push   r12
   14000ef06:	push   r13
   14000ef08:	lea    rbp,[rax-0x338]
   14000ef0f:	sub    rsp,0x420
   14000ef16:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000ef1f:	mov    QWORD PTR [rax+0x10],rbx
   14000ef23:	mov    QWORD PTR [rax+0x18],rsi
   14000ef27:	mov    QWORD PTR [rax+0x20],rdi
   14000ef2b:	mov    rax,QWORD PTR [rip+0x76176]        # 0x1400850a8
   14000ef32:	xor    rax,rsp
   14000ef35:	mov    QWORD PTR [rbp+0x310],rax
   14000ef3c:	mov    r12,rcx
   14000ef3f:	xor    r13d,r13d
   14000ef42:	mov    esi,r13d
   14000ef45:	mov    ebx,r13d
   14000ef48:	mov    DWORD PTR [rsp+0x30],ebx
   14000ef4c:	nop    DWORD PTR [rax+0x0]
   14000ef50:	mov    BYTE PTR [rbp+0x200],0x0
   14000ef57:	xor    edx,edx
   14000ef59:	mov    r8d,0x103
   14000ef5f:	lea    rcx,[rbp+0x201]
   14000ef66:	call   0x140036dc0
   14000ef6b:	lea    r8,[rbp+0x200]
   14000ef72:	mov    edx,ebx
   14000ef74:	mov    ecx,DWORD PTR [r12+0x20]
   14000ef79:	call   0x140049800
   14000ef7e:	mov    BYTE PTR [rbp+0xf0],0x0
   14000ef85:	xor    edx,edx
   14000ef87:	mov    r8d,0x103
   14000ef8d:	lea    rcx,[rbp+0xf1]
   14000ef94:	call   0x140036dc0
   14000ef99:	mov    r8d,0x1
   14000ef9f:	lea    rdx,[rip+0x5e012]        # 0x14006cfb8
   14000efa6:	lea    rcx,[rbp+0xf0]
   14000efad:	call   0x14000c8f0
   14000efb2:	mov    BYTE PTR [rbp-0x20],0x0
   14000efb6:	xor    edx,edx
   14000efb8:	mov    r8d,0x103
   14000efbe:	lea    rcx,[rbp-0x1f]
   14000efc2:	call   0x140036dc0
   14000efc7:	xor    dil,dil
   14000efca:	mov    QWORD PTR [rsp+0x38],r13
   14000efcf:	lea    rax,[rsp+0x38]
   14000efd4:	mov    QWORD PTR [rsp+0x20],rax
   14000efd9:	mov    r9d,0x20019
   14000efdf:	xor    r8d,r8d
   14000efe2:	lea    rdx,[rbp+0x200]
   14000efe9:	mov    rcx,0xffffffff80000002
   14000eff0:	call   QWORD PTR [rip+0x5905a]        # 0x140068050
   14000eff6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000effb:	test   rcx,rcx
   14000effe:	je     0x14000f232
   14000f004:	mov    DWORD PTR [rsp+0x34],r13d
   14000f009:	lea    rax,[rsp+0x34]
   14000f00e:	mov    QWORD PTR [rsp+0x28],rax
   14000f013:	mov    QWORD PTR [rsp+0x20],r13
   14000f018:	lea    r9,[rsp+0x40]
   14000f01d:	xor    r8d,r8d
   14000f020:	lea    rdx,[rbp+0xf0]
   14000f027:	call   QWORD PTR [rip+0x5902b]        # 0x140068058
   14000f02d:	mov    edx,DWORD PTR [rsp+0x34]
   14000f031:	test   edx,edx
   14000f033:	je     0x14000f070
   14000f035:	cmp    edx,0x104
   14000f03b:	jae    0x14000f070
   14000f03d:	lea    rax,[rsp+0x34]
   14000f042:	mov    QWORD PTR [rsp+0x28],rax
   14000f047:	lea    rax,[rbp-0x20]
   14000f04b:	mov    QWORD PTR [rsp+0x20],rax
   14000f050:	lea    r9,[rsp+0x40]
   14000f055:	xor    r8d,r8d
   14000f058:	lea    rdx,[rbp+0xf0]
   14000f05f:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f064:	call   QWORD PTR [rip+0x58fee]        # 0x140068058
   14000f06a:	test   eax,eax
   14000f06c:	sete   dil
   14000f070:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f075:	call   QWORD PTR [rip+0x58fcd]        # 0x140068048
   14000f07b:	test   dil,dil
   14000f07e:	je     0x14000f232
   14000f084:	lea    rax,[rsp+0x58]
   14000f089:	mov    QWORD PTR [rsp+0x50],rax
   14000f08e:	lea    rcx,[rbp-0x20]
   14000f092:	call   QWORD PTR [rip+0x59348]        # 0x1400683e0
   14000f098:	mov    edi,eax
   14000f09a:	inc    edi
   14000f09c:	mov    ecx,r13d
   14000f09f:	setns  cl
   14000f0a2:	test   ecx,ecx
   14000f0a4:	je     0x14000f29a
   14000f0aa:	lea    rax,[rsp+0x58]
   14000f0af:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f0b4:	cmp    rcx,rax
   14000f0b7:	je     0x14000f0e1
   14000f0b9:	cmp    edi,0x80
   14000f0bf:	jle    0x14000f0da
   14000f0c1:	movsxd rdx,edi
   14000f0c4:	mov    r8d,0x1
   14000f0ca:	call   0x140033618
   14000f0cf:	test   rax,rax
   14000f0d2:	je     0x14000f242
   14000f0d8:	jmp    0x14000f0f6
   14000f0da:	call   0x140033594
   14000f0df:	jmp    0x14000f106
   14000f0e1:	cmp    edi,0x80
   14000f0e7:	jle    0x14000f106
   14000f0e9:	movsxd rcx,edi
   14000f0ec:	mov    edx,0x1
   14000f0f1:	call   0x1400335d4
   14000f0f6:	mov    QWORD PTR [rsp+0x50],rax
   14000f0fb:	test   rax,rax
   14000f0fe:	je     0x14000f24d
   14000f104:	jmp    0x14000f110
   14000f106:	lea    rax,[rsp+0x58]
   14000f10b:	mov    QWORD PTR [rsp+0x50],rax
   14000f110:	movsxd rdx,edi
   14000f113:	mov    r9,rdx
   14000f116:	lea    r8,[rbp-0x20]
   14000f11a:	mov    rcx,rax
   14000f11d:	call   0x140033ccc
   14000f122:	test   eax,eax
   14000f124:	je     0x14000f14a
   14000f126:	cmp    eax,0xc
   14000f129:	je     0x14000f26e
   14000f12f:	cmp    eax,0x16
   14000f132:	je     0x14000f263
   14000f138:	cmp    eax,0x22
   14000f13b:	je     0x14000f263
   14000f141:	cmp    eax,0x50
   14000f144:	jne    0x14000f258
   14000f14a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f14f:	call   0x14000ea90
   14000f154:	movzx  edi,al
   14000f157:	lea    rax,[rsp+0x58]
   14000f15c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f161:	cmp    rcx,rax
   14000f164:	je     0x14000f16b
   14000f166:	call   0x140033594
   14000f16b:	test   dil,dil
   14000f16e:	je     0x14000f232
   14000f174:	lea    rdx,[rsp+0x30]
   14000f179:	mov    rcx,r12
   14000f17c:	call   0x140011420
   14000f181:	mov    r11,rax
   14000f184:	xor    eax,eax
   14000f186:	or     rcx,0xffffffffffffffff
   14000f18a:	lea    rdi,[rbp-0x20]
   14000f18e:	repnz scas al,BYTE PTR es:[rdi]
   14000f190:	not    rcx
   14000f193:	lea    r8,[rcx-0x1]
   14000f197:	lea    rdx,[rbp-0x20]
   14000f19b:	mov    rcx,r11
   14000f19e:	call   0x140002ba0
   14000f1a3:	mov    ebx,DWORD PTR [rsp+0x30]
   14000f1a7:	cmp    ebx,esi
   14000f1a9:	je     0x14000f230
   14000f1af:	lea    rax,[rsp+0x58]
   14000f1b4:	mov    QWORD PTR [rsp+0x50],rax
   14000f1b9:	lea    rcx,[rbp-0x20]
   14000f1bd:	call   QWORD PTR [rip+0x5921d]        # 0x1400683e0
   14000f1c3:	lea    edi,[rax+0x1]
   14000f1c6:	lea    r8,[rsp+0x58]
   14000f1cb:	mov    edx,edi
   14000f1cd:	lea    rcx,[rsp+0x50]
   14000f1d2:	call   0x140002f80
   14000f1d7:	movsxd rdx,edi
   14000f1da:	mov    r9,rdx
   14000f1dd:	lea    r8,[rbp-0x20]
   14000f1e1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f1e6:	call   0x140033ccc
   14000f1eb:	test   eax,eax
   14000f1ed:	je     0x14000f20b
   14000f1ef:	cmp    eax,0xc
   14000f1f2:	je     0x14000f28f
   14000f1f8:	cmp    eax,0x16
   14000f1fb:	je     0x14000f284
   14000f201:	cmp    eax,0x22
   14000f204:	je     0x14000f284
   14000f206:	cmp    eax,0x50
   14000f209:	jne    0x14000f279
   14000f20b:	mov    r8d,esi
   14000f20e:	mov    rdx,QWORD PTR [rsp+0x50]
   14000f213:	mov    rcx,r12
   14000f216:	call   0x14000fb10
   14000f21b:	nop
   14000f21c:	lea    rax,[rsp+0x58]
   14000f221:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f226:	cmp    rcx,rax
   14000f229:	je     0x14000f230
   14000f22b:	call   0x140033594
   14000f230:	inc    esi
   14000f232:	inc    ebx
   14000f234:	mov    DWORD PTR [rsp+0x30],ebx
   14000f238:	cmp    ebx,0x9
   14000f23b:	ja     0x14000f2a5
   14000f23d:	jmp    0x14000ef50
   14000f242:	mov    ecx,0x8007000e
   14000f247:	call   0x1400025f0
   14000f24c:	int3   
   14000f24d:	mov    ecx,0x8007000e
   14000f252:	call   0x1400025f0
   14000f257:	int3   
   14000f258:	mov    ecx,0x80004005
   14000f25d:	call   0x1400025f0
   14000f262:	int3   
   14000f263:	mov    ecx,0x80070057
   14000f268:	call   0x1400025f0
   14000f26d:	int3   
   14000f26e:	mov    ecx,0x8007000e
   14000f273:	call   0x1400025f0
   14000f278:	int3   
   14000f279:	mov    ecx,0x80004005
   14000f27e:	call   0x1400025f0
   14000f283:	int3   
   14000f284:	mov    ecx,0x80070057
   14000f289:	call   0x1400025f0
   14000f28e:	int3   
   14000f28f:	mov    ecx,0x8007000e
   14000f294:	call   0x1400025f0
   14000f299:	int3   
   14000f29a:	mov    ecx,0x80070057
   14000f29f:	call   0x1400025f0
   14000f2a4:	int3   
   14000f2a5:	mov    rcx,QWORD PTR [rbp+0x310]
   14000f2ac:	xor    rcx,rsp
   14000f2af:	call   0x140032f00
   14000f2b4:	lea    r11,[rsp+0x420]
   14000f2bc:	mov    rbx,QWORD PTR [r11+0x28]
   14000f2c0:	mov    rsi,QWORD PTR [r11+0x30]
   14000f2c4:	mov    rdi,QWORD PTR [r11+0x38]
   14000f2c8:	mov    rsp,r11
   14000f2cb:	pop    r13
   14000f2cd:	pop    r12
   14000f2cf:	pop    rbp
   14000f2d0:	ret    
   14000f2d1:	int3   
   14000f2d2:	int3   
   14000f2d3:	int3   
   14000f2d4:	int3   
   14000f2d5:	int3   
   14000f2d6:	int3   
   14000f2d7:	int3   
   14000f2d8:	int3   
   14000f2d9:	int3   
   14000f2da:	int3   
   14000f2db:	int3   
   14000f2dc:	int3   
   14000f2dd:	int3   
   14000f2de:	int3   
   14000f2df:	int3   
   14000f2e0:	mov    QWORD PTR [rsp+0x10],rdx
   14000f2e5:	push   rbx
   14000f2e6:	sub    rsp,0x30
   14000f2ea:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000f2f3:	mov    r9d,r8d
   14000f2f6:	mov    rbx,rdx
   14000f2f9:	xor    eax,eax
   14000f2fb:	mov    DWORD PTR [rsp+0x40],eax
   14000f2ff:	mov    QWORD PTR [rdx+0x18],0xf
   14000f307:	mov    QWORD PTR [rdx+0x10],rax
   14000f30b:	mov    BYTE PTR [rdx],al
   14000f30d:	mov    DWORD PTR [rsp+0x40],0x1
   14000f315:	mov    r8,QWORD PTR [rcx+0x8]
   14000f319:	mov    rax,QWORD PTR [r8+0x8]
   14000f31d:	cmp    BYTE PTR [rax+0x49],0x0
   14000f321:	jne    0x14000f33b
   14000f323:	cmp    DWORD PTR [rax+0x18],r9d
   14000f327:	jae    0x14000f32f
   14000f329:	mov    rax,QWORD PTR [rax+0x10]
   14000f32d:	jmp    0x14000f335
   14000f32f:	mov    r8,rax
   14000f332:	mov    rax,QWORD PTR [rax]
   14000f335:	cmp    BYTE PTR [rax+0x49],0x0
   14000f339:	je     0x14000f323
   14000f33b:	mov    QWORD PTR [rsp+0x58],r8
   14000f340:	mov    rax,QWORD PTR [rcx+0x8]
   14000f344:	cmp    r8,rax
   14000f347:	je     0x14000f356
   14000f349:	cmp    r9d,DWORD PTR [r8+0x18]
   14000f34d:	jb     0x14000f356
   14000f34f:	lea    rcx,[rsp+0x58]
   14000f354:	jmp    0x14000f360
   14000f356:	mov    QWORD PTR [rsp+0x20],rax
   14000f35b:	lea    rcx,[rsp+0x20]
   14000f360:	mov    rcx,QWORD PTR [rcx]
   14000f363:	cmp    rcx,rax
   14000f366:	je     0x14000f37b
   14000f368:	lea    rdx,[rcx+0x20]
   14000f36c:	or     r9,0xffffffffffffffff
   14000f370:	xor    r8d,r8d
   14000f373:	mov    rcx,rbx
   14000f376:	call   0x140002c70
   14000f37b:	mov    rax,rbx
   14000f37e:	add    rsp,0x30
   14000f382:	pop    rbx
   14000f383:	ret    
   14000f384:	int3   
   14000f385:	int3   
   14000f386:	int3   
   14000f387:	int3   
   14000f388:	int3   
   14000f389:	int3   
   14000f38a:	int3   
   14000f38b:	int3   
   14000f38c:	int3   
   14000f38d:	int3   
   14000f38e:	int3   
   14000f38f:	int3   
   14000f390:	mov    rax,rsp
   14000f393:	push   rsi
   14000f394:	push   rdi
   14000f395:	push   r12
   14000f397:	push   r13
   14000f399:	push   r14
   14000f39b:	sub    rsp,0xf0
   14000f3a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f3ab:	mov    QWORD PTR [rax+0x8],rbx
   14000f3af:	mov    QWORD PTR [rax+0x18],rbp
   14000f3b3:	mov    rax,QWORD PTR [rip+0x75cee]        # 0x1400850a8
   14000f3ba:	xor    rax,rsp
   14000f3bd:	mov    QWORD PTR [rsp+0xe0],rax
   14000f3c5:	mov    rbx,rdx
   14000f3c8:	mov    rsi,rcx
   14000f3cb:	or     ebp,0xffffffff
   14000f3ce:	lea    rax,[rsp+0x58]
   14000f3d3:	mov    QWORD PTR [rsp+0x50],rax
   14000f3d8:	test   rdx,rdx
   14000f3db:	jne    0x14000f3e4
   14000f3dd:	mov    QWORD PTR [rsp+0x50],rdx
   14000f3e2:	jmp    0x14000f452
   14000f3e4:	mov    rcx,rdx
   14000f3e7:	call   QWORD PTR [rip+0x58ff3]        # 0x1400683e0
   14000f3ed:	lea    edi,[rax+0x1]
   14000f3f0:	lea    r8,[rsp+0x58]
   14000f3f5:	mov    edx,edi
   14000f3f7:	lea    rcx,[rsp+0x50]
   14000f3fc:	call   0x140002f80
   14000f401:	movsxd rdx,edi
   14000f404:	mov    r9,rdx
   14000f407:	mov    r8,rbx
   14000f40a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f40f:	call   0x140033ccc
   14000f414:	test   eax,eax
   14000f416:	je     0x14000f44d
   14000f418:	cmp    eax,0xc
   14000f41b:	je     0x14000f442
   14000f41d:	cmp    eax,0x16
   14000f420:	je     0x14000f437
   14000f422:	cmp    eax,0x22
   14000f425:	je     0x14000f437
   14000f427:	cmp    eax,0x50
   14000f42a:	je     0x14000f44d
   14000f42c:	mov    ecx,0x80004005
   14000f431:	call   0x1400025f0
   14000f436:	int3   
   14000f437:	mov    ecx,0x80070057
   14000f43c:	call   0x1400025f0
   14000f441:	int3   
   14000f442:	mov    ecx,0x8007000e
   14000f447:	call   0x1400025f0
   14000f44c:	int3   
   14000f44d:	mov    rdx,QWORD PTR [rsp+0x50]
   14000f452:	mov    QWORD PTR [rsp+0x40],0xf
   14000f45b:	mov    QWORD PTR [rsp+0x38],0x0
   14000f464:	mov    BYTE PTR [rsp+0x28],0x0
   14000f469:	xor    eax,eax
   14000f46b:	or     rcx,0xffffffffffffffff
   14000f46f:	mov    rdi,rdx
   14000f472:	repnz scas al,BYTE PTR es:[rdi]
   14000f474:	not    rcx
   14000f477:	lea    r8,[rcx-0x1]
   14000f47b:	lea    rcx,[rsp+0x28]
   14000f480:	call   0x140002ba0
   14000f485:	nop
   14000f486:	lea    rax,[rsp+0x58]
   14000f48b:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f490:	cmp    rcx,rax
   14000f493:	je     0x14000f49a
   14000f495:	call   0x140033594
   14000f49a:	lea    rcx,[rsp+0x28]
   14000f49f:	mov    r14,QWORD PTR [rsp+0x28]
   14000f4a4:	mov    r13,QWORD PTR [rsp+0x40]
   14000f4a9:	cmp    r13,0x10
   14000f4ad:	cmovae rcx,r14
   14000f4b1:	xor    r8d,r8d
   14000f4b4:	lea    rdx,[rip+0x5bddb]        # 0x14006b296
   14000f4bb:	call   0x14003e320
   14000f4c0:	movsxd rcx,eax
   14000f4c3:	mov    r12,QWORD PTR [rsp+0x38]
   14000f4c8:	test   eax,eax
   14000f4ca:	jne    0x14000f4d4
   14000f4cc:	test   r12,r12
   14000f4cf:	setne  al
   14000f4d2:	mov    ecx,eax
   14000f4d4:	test   ecx,ecx
   14000f4d6:	sete   al
   14000f4d9:	test   al,al
   14000f4db:	sete   al
   14000f4de:	test   al,al
   14000f4e0:	je     0x14000f5a7
   14000f4e6:	mov    rbx,QWORD PTR [rsi+0x8]
   14000f4ea:	mov    rdi,QWORD PTR [rbx]
   14000f4ed:	nop    DWORD PTR [rax]
   14000f4f0:	cmp    rdi,rbx
   14000f4f3:	je     0x14000f5a7
   14000f4f9:	lea    rdx,[rdi+0x20]
   14000f4fd:	mov    rsi,QWORD PTR [rdx+0x10]
   14000f501:	cmp    QWORD PTR [rdx+0x18],0x10
   14000f506:	jb     0x14000f50b
   14000f508:	mov    rdx,QWORD PTR [rdx]
   14000f50b:	lea    rcx,[rsp+0x28]
   14000f510:	cmp    r13,0x10
   14000f514:	cmovae rcx,r14
   14000f518:	mov    r8,rsi
   14000f51b:	cmp    r12,rsi
   14000f51e:	cmovb  r8,r12
   14000f522:	call   0x14003e320
   14000f527:	movsxd rcx,eax
   14000f52a:	test   eax,eax
   14000f52c:	jne    0x14000f542
   14000f52e:	cmp    r12,rsi
   14000f531:	jae    0x14000f538
   14000f533:	or     ecx,0xffffffff
   14000f536:	jmp    0x14000f542
   14000f538:	xor    eax,eax
   14000f53a:	cmp    r12,rsi
   14000f53d:	setne  al
   14000f540:	mov    ecx,eax
   14000f542:	test   ecx,ecx
   14000f544:	sete   al
   14000f547:	test   al,al
   14000f549:	je     0x14000f54e
   14000f54b:	mov    ebp,DWORD PTR [rdi+0x18]
   14000f54e:	cmp    BYTE PTR [rdi+0x49],0x0
   14000f552:	jne    0x14000f59e
   14000f554:	mov    rax,QWORD PTR [rdi+0x10]
   14000f558:	cmp    BYTE PTR [rax+0x49],0x0
   14000f55c:	jne    0x14000f57e
   14000f55e:	mov    rdi,rax
   14000f561:	mov    rax,QWORD PTR [rax]
   14000f564:	cmp    BYTE PTR [rax+0x49],0x0
   14000f568:	jne    0x14000f59e
   14000f56a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f570:	mov    rdi,rax
   14000f573:	mov    rax,QWORD PTR [rax]
   14000f576:	cmp    BYTE PTR [rax+0x49],0x0
   14000f57a:	je     0x14000f570
   14000f57c:	jmp    0x14000f59e
   14000f57e:	mov    rax,QWORD PTR [rdi+0x8]
   14000f582:	cmp    BYTE PTR [rax+0x49],0x0
   14000f586:	jne    0x14000f59b
   14000f588:	cmp    rdi,QWORD PTR [rax+0x10]
   14000f58c:	jne    0x14000f59b
   14000f58e:	mov    rdi,rax
   14000f591:	mov    rax,QWORD PTR [rax+0x8]
   14000f595:	cmp    BYTE PTR [rax+0x49],0x0
   14000f599:	je     0x14000f588
   14000f59b:	mov    rdi,rax
   14000f59e:	cmp    ebp,0xffffffff
   14000f5a1:	je     0x14000f4f0
   14000f5a7:	cmp    r13,0x10
   14000f5ab:	jb     0x14000f5b5
   14000f5ad:	mov    rcx,r14
   14000f5b0:	call   0x1400330c0
   14000f5b5:	mov    eax,ebp
   14000f5b7:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000f5bf:	xor    rcx,rsp
   14000f5c2:	call   0x140032f00
   14000f5c7:	lea    r11,[rsp+0xf0]
   14000f5cf:	mov    rbx,QWORD PTR [r11+0x30]
   14000f5d3:	mov    rbp,QWORD PTR [r11+0x40]
   14000f5d7:	mov    rsp,r11
   14000f5da:	pop    r14
   14000f5dc:	pop    r13
   14000f5de:	pop    r12
   14000f5e0:	pop    rdi
   14000f5e1:	pop    rsi
   14000f5e2:	ret    
   14000f5e3:	int3   
   14000f5e4:	int3   
   14000f5e5:	int3   
   14000f5e6:	int3   
   14000f5e7:	int3   
   14000f5e8:	int3   
   14000f5e9:	int3   
   14000f5ea:	int3   
   14000f5eb:	int3   
   14000f5ec:	int3   
   14000f5ed:	int3   
   14000f5ee:	int3   
   14000f5ef:	int3   
   14000f5f0:	rex push rbp
   14000f5f2:	push   rbx
   14000f5f3:	push   rsi
   14000f5f4:	push   rdi
   14000f5f5:	push   r12
   14000f5f7:	lea    rbp,[rsp-0x30]
   14000f5fc:	sub    rsp,0x130
   14000f603:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000f60c:	mov    rax,QWORD PTR [rip+0x75a95]        # 0x1400850a8
   14000f613:	xor    rax,rsp
   14000f616:	mov    QWORD PTR [rbp+0x20],rax
   14000f61a:	mov    rbx,r8
   14000f61d:	mov    rsi,rdx
   14000f620:	xor    dil,dil
   14000f623:	xor    r12d,r12d
   14000f626:	mov    QWORD PTR [rsp+0x50],r12
   14000f62b:	lea    rax,[rsp+0x58]
   14000f630:	mov    QWORD PTR [rsp+0x40],rax
   14000f635:	lea    rax,[rsp+0x50]
   14000f63a:	mov    QWORD PTR [rsp+0x38],rax
   14000f63f:	mov    QWORD PTR [rsp+0x30],r12
   14000f644:	mov    DWORD PTR [rsp+0x28],0x2001f
   14000f64c:	mov    DWORD PTR [rsp+0x20],r12d
   14000f651:	xor    r9d,r9d
   14000f654:	xor    r8d,r8d
   14000f657:	mov    rdx,rcx
   14000f65a:	mov    rcx,0xffffffff80000002
   14000f661:	call   QWORD PTR [rip+0x589d1]        # 0x140068038
   14000f667:	cmp    QWORD PTR [rsp+0x50],r12
   14000f66c:	je     0x14000f78e
   14000f672:	lea    rax,[rbp-0x68]
   14000f676:	mov    QWORD PTR [rbp-0x70],rax
   14000f67a:	test   rbx,rbx
   14000f67d:	jne    0x14000f688
   14000f67f:	mov    edx,r12d
   14000f682:	mov    QWORD PTR [rbp-0x70],rdx
   14000f686:	jmp    0x14000f6f2
   14000f688:	mov    rcx,rbx
   14000f68b:	call   QWORD PTR [rip+0x58d4f]        # 0x1400683e0
   14000f691:	lea    edi,[rax+0x1]
   14000f694:	lea    r8,[rbp-0x68]
   14000f698:	mov    edx,edi
   14000f69a:	lea    rcx,[rbp-0x70]
   14000f69e:	call   0x140002f80
   14000f6a3:	movsxd rdx,edi
   14000f6a6:	mov    r9,rdx
   14000f6a9:	mov    r8,rbx
   14000f6ac:	mov    rcx,QWORD PTR [rbp-0x70]
   14000f6b0:	call   0x140033ccc
   14000f6b5:	test   eax,eax
   14000f6b7:	je     0x14000f6ee
   14000f6b9:	cmp    eax,0xc
   14000f6bc:	je     0x14000f6e3
   14000f6be:	cmp    eax,0x16
   14000f6c1:	je     0x14000f6d8
   14000f6c3:	cmp    eax,0x22
   14000f6c6:	je     0x14000f6d8
   14000f6c8:	cmp    eax,0x50
   14000f6cb:	je     0x14000f6ee
   14000f6cd:	mov    ecx,0x80004005
   14000f6d2:	call   0x1400025f0
   14000f6d7:	int3   
   14000f6d8:	mov    ecx,0x80070057
   14000f6dd:	call   0x1400025f0
   14000f6e2:	int3   
   14000f6e3:	mov    ecx,0x8007000e
   14000f6e8:	call   0x1400025f0
   14000f6ed:	int3   
   14000f6ee:	mov    rdx,QWORD PTR [rbp-0x70]
   14000f6f2:	mov    QWORD PTR [rbp-0x80],0xf
   14000f6fa:	mov    QWORD PTR [rsp+0x78],r12
   14000f6ff:	mov    BYTE PTR [rsp+0x68],0x0
   14000f704:	xor    eax,eax
   14000f706:	or     rcx,0xffffffffffffffff
   14000f70a:	mov    rdi,rdx
   14000f70d:	repnz scas al,BYTE PTR es:[rdi]
   14000f70f:	not    rcx
   14000f712:	lea    r8,[rcx-0x1]
   14000f716:	lea    rcx,[rsp+0x68]
   14000f71b:	call   0x140002ba0
   14000f720:	nop
   14000f721:	lea    rax,[rbp-0x68]
   14000f725:	mov    rcx,QWORD PTR [rbp-0x70]
   14000f729:	cmp    rcx,rax
   14000f72c:	je     0x14000f733
   14000f72e:	call   0x140033594
   14000f733:	lea    rcx,[rsp+0x68]
   14000f738:	cmp    QWORD PTR [rbp-0x80],0x10
   14000f73d:	cmovae rcx,QWORD PTR [rsp+0x68]
   14000f743:	mov    eax,DWORD PTR [rsp+0x78]
   14000f747:	mov    DWORD PTR [rsp+0x28],eax
   14000f74b:	mov    QWORD PTR [rsp+0x20],rcx
   14000f750:	mov    r9d,0x3
   14000f756:	xor    r8d,r8d
   14000f759:	mov    rdx,rsi
   14000f75c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f761:	call   QWORD PTR [rip+0x588d9]        # 0x140068040
   14000f767:	test   eax,eax
   14000f769:	sete   dil
   14000f76d:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f772:	call   QWORD PTR [rip+0x588d0]        # 0x140068048
   14000f778:	mov    QWORD PTR [rsp+0x50],r12
   14000f77d:	cmp    QWORD PTR [rbp-0x80],0x10
   14000f782:	jb     0x14000f78e
   14000f784:	mov    rcx,QWORD PTR [rsp+0x68]
   14000f789:	call   0x1400330c0
   14000f78e:	movzx  eax,dil
   14000f792:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f796:	xor    rcx,rsp
   14000f799:	call   0x140032f00
   14000f79e:	add    rsp,0x130
   14000f7a5:	pop    r12
   14000f7a7:	pop    rdi
   14000f7a8:	pop    rsi
   14000f7a9:	pop    rbx
   14000f7aa:	pop    rbp
   14000f7ab:	ret    
   14000f7ac:	int3   
   14000f7ad:	int3   
   14000f7ae:	int3   
   14000f7af:	int3   
   14000f7b0:	rex push rbp
   14000f7b2:	push   rsi
   14000f7b3:	push   rdi
   14000f7b4:	push   r12
   14000f7b6:	push   r14
   14000f7b8:	lea    rbp,[rsp-0x230]
   14000f7c0:	sub    rsp,0x330
   14000f7c7:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000f7d0:	mov    QWORD PTR [rsp+0x370],rbx
   14000f7d8:	mov    rax,QWORD PTR [rip+0x758c9]        # 0x1400850a8
   14000f7df:	xor    rax,rsp
   14000f7e2:	mov    QWORD PTR [rbp+0x220],rax
   14000f7e9:	mov    r12,rdx
   14000f7ec:	mov    rbx,rcx
   14000f7ef:	xor    sil,sil
   14000f7f2:	lea    rax,[rsp+0x78]
   14000f7f7:	mov    QWORD PTR [rsp+0x70],rax
   14000f7fc:	test   rdx,rdx
   14000f7ff:	jne    0x14000f808
   14000f801:	mov    QWORD PTR [rsp+0x70],rdx
   14000f806:	jmp    0x14000f876
   14000f808:	mov    rcx,rdx
   14000f80b:	call   QWORD PTR [rip+0x58bcf]        # 0x1400683e0
   14000f811:	lea    edi,[rax+0x1]
   14000f814:	lea    r8,[rsp+0x78]
   14000f819:	mov    edx,edi
   14000f81b:	lea    rcx,[rsp+0x70]
   14000f820:	call   0x140002f80
   14000f825:	movsxd rdx,edi
   14000f828:	mov    r9,rdx
   14000f82b:	mov    r8,r12
   14000f82e:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f833:	call   0x140033ccc
   14000f838:	test   eax,eax
   14000f83a:	je     0x14000f871
   14000f83c:	cmp    eax,0xc
   14000f83f:	je     0x14000f866
   14000f841:	cmp    eax,0x16
   14000f844:	je     0x14000f85b
   14000f846:	cmp    eax,0x22
   14000f849:	je     0x14000f85b
   14000f84b:	cmp    eax,0x50
   14000f84e:	je     0x14000f871
   14000f850:	mov    ecx,0x80004005
   14000f855:	call   0x1400025f0
   14000f85a:	int3   
   14000f85b:	mov    ecx,0x80070057
   14000f860:	call   0x1400025f0
   14000f865:	int3   
   14000f866:	mov    ecx,0x8007000e
   14000f86b:	call   0x1400025f0
   14000f870:	int3   
   14000f871:	mov    rdx,QWORD PTR [rsp+0x70]
   14000f876:	mov    QWORD PTR [rsp+0x60],0xf
   14000f87f:	mov    QWORD PTR [rsp+0x58],0x0
   14000f888:	mov    BYTE PTR [rsp+0x48],0x0
   14000f88d:	xor    eax,eax
   14000f88f:	or     r14,0xffffffffffffffff
   14000f893:	mov    rcx,r14
   14000f896:	mov    rdi,rdx
   14000f899:	repnz scas al,BYTE PTR es:[rdi]
   14000f89b:	not    rcx
   14000f89e:	lea    r8,[rcx-0x1]
   14000f8a2:	lea    rcx,[rsp+0x48]
   14000f8a7:	call   0x140002ba0
   14000f8ac:	nop
   14000f8ad:	lea    rax,[rsp+0x78]
   14000f8b2:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f8b7:	cmp    rcx,rax
   14000f8ba:	je     0x14000f8c1
   14000f8bc:	call   0x140033594
   14000f8c1:	lea    rcx,[rsp+0x48]
   14000f8c6:	cmp    QWORD PTR [rsp+0x60],0x10
   14000f8cc:	cmovae rcx,QWORD PTR [rsp+0x48]
   14000f8d2:	xor    r8d,r8d
   14000f8d5:	lea    rdx,[rip+0x5b9ba]        # 0x14006b296
   14000f8dc:	call   0x14003e320
   14000f8e1:	movsxd rcx,eax
   14000f8e4:	test   eax,eax
   14000f8e6:	jne    0x14000f8f2
   14000f8e8:	cmp    QWORD PTR [rsp+0x58],rax
   14000f8ed:	setne  al
   14000f8f0:	mov    ecx,eax
   14000f8f2:	test   ecx,ecx
   14000f8f4:	sete   al
   14000f8f7:	test   al,al
   14000f8f9:	sete   al
   14000f8fc:	test   al,al
   14000f8fe:	je     0x14000fad1
   14000f904:	mov    BYTE PTR [rbp+0x0],0x0
   14000f908:	xor    edx,edx
   14000f90a:	mov    r8d,0x103
   14000f910:	lea    rcx,[rbp+0x1]
   14000f914:	call   0x140036dc0
   14000f919:	mov    BYTE PTR [rbp+0x110],0x0
   14000f920:	xor    edx,edx
   14000f922:	mov    r8d,0x103
   14000f928:	lea    rcx,[rbp+0x111]
   14000f92f:	call   0x140036dc0
   14000f934:	mov    r8d,0x1
   14000f93a:	lea    rdx,[rip+0x5d677]        # 0x14006cfb8
   14000f941:	lea    rcx,[rbp+0x110]
   14000f948:	call   0x14000c8f0
   14000f94d:	mov    rdx,r12
   14000f950:	mov    rcx,rbx
   14000f953:	call   0x14000f390
   14000f958:	mov    edi,eax
   14000f95a:	lea    r8,[rbp+0x0]
   14000f95e:	mov    ecx,DWORD PTR [rbx+0x20]
   14000f961:	cmp    eax,0xffffffff
   14000f964:	je     0x14000fa1d
   14000f96a:	mov    edx,eax
   14000f96c:	call   0x140049800
   14000f971:	mov    QWORD PTR [rsp+0x30],0x0
   14000f97a:	lea    rax,[rsp+0x30]
   14000f97f:	mov    QWORD PTR [rsp+0x20],rax
   14000f984:	mov    r9d,0x20006
   14000f98a:	xor    r8d,r8d
   14000f98d:	lea    rdx,[rbp+0x0]
   14000f991:	mov    rcx,0xffffffff80000002
   14000f998:	call   QWORD PTR [rip+0x586b2]        # 0x140068050
   14000f99e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f9a3:	test   rcx,rcx
   14000f9a6:	je     0x14000f9c0
   14000f9a8:	lea    rdx,[rbp+0x110]
   14000f9af:	call   QWORD PTR [rip+0x5867b]        # 0x140068030
   14000f9b5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f9ba:	call   QWORD PTR [rip+0x58688]        # 0x140068048
   14000f9c0:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f9c4:	mov    rax,QWORD PTR [rcx+0x8]
   14000f9c8:	cmp    BYTE PTR [rax+0x49],0x0
   14000f9cc:	jne    0x14000f9e7
   14000f9ce:	xchg   ax,ax
   14000f9d0:	cmp    DWORD PTR [rax+0x18],edi
   14000f9d3:	jae    0x14000f9db
   14000f9d5:	mov    rax,QWORD PTR [rax+0x10]
   14000f9d9:	jmp    0x14000f9e1
   14000f9db:	mov    rcx,rax
   14000f9de:	mov    rax,QWORD PTR [rax]
   14000f9e1:	cmp    BYTE PTR [rax+0x49],0x0
   14000f9e5:	je     0x14000f9d0
   14000f9e7:	mov    QWORD PTR [rsp+0x30],rcx
   14000f9ec:	mov    rax,QWORD PTR [rbx+0x8]
   14000f9f0:	cmp    rcx,rax
   14000f9f3:	je     0x14000fa01
   14000f9f5:	cmp    edi,DWORD PTR [rcx+0x18]
   14000f9f8:	jb     0x14000fa01
   14000f9fa:	lea    r8,[rsp+0x30]
   14000f9ff:	jmp    0x14000fa0b
   14000fa01:	mov    QWORD PTR [rsp+0x38],rax
   14000fa06:	lea    r8,[rsp+0x38]
   14000fa0b:	mov    r8,QWORD PTR [r8]
   14000fa0e:	lea    rdx,[rsp+0x38]
   14000fa13:	mov    rcx,rbx
   14000fa16:	call   0x140011560
   14000fa1b:	jmp    0x14000fa28
   14000fa1d:	mov    rdi,QWORD PTR [rbx+0x10]
   14000fa21:	mov    edx,edi
   14000fa23:	call   0x140049800
   14000fa28:	mov    r8,r12
   14000fa2b:	lea    rdx,[rbp+0x110]
   14000fa32:	lea    rcx,[rbp+0x0]
   14000fa36:	call   0x14000f5f0
   14000fa3b:	movzx  esi,al
   14000fa3e:	test   al,al
   14000fa40:	je     0x14000fad1
   14000fa46:	mov    DWORD PTR [rsp+0x30],edi
   14000fa4a:	lea    rdx,[rsp+0x30]
   14000fa4f:	mov    rcx,rbx
   14000fa52:	call   0x140011420
   14000fa57:	mov    rdi,rax
   14000fa5a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000fa5f:	cmp    rbx,0xffffffffffffffff
   14000fa63:	cmova  rbx,r14
   14000fa67:	lea    rax,[rsp+0x48]
   14000fa6c:	mov    rdx,rbx
   14000fa6f:	mov    rcx,rdi
   14000fa72:	cmp    rdi,rax
   14000fa75:	jne    0x14000fa8e
   14000fa77:	mov    r8,r14
   14000fa7a:	call   0x140002da0
   14000fa7f:	xor    r8d,r8d
   14000fa82:	xor    edx,edx
   14000fa84:	mov    rcx,rdi
   14000fa87:	call   0x140002da0
   14000fa8c:	jmp    0x14000fad1
   14000fa8e:	call   0x140002d30
   14000fa93:	test   al,al
   14000fa95:	je     0x14000fad1
   14000fa97:	lea    rdx,[rsp+0x48]
   14000fa9c:	cmp    QWORD PTR [rsp+0x60],0x10
   14000faa2:	cmovae rdx,QWORD PTR [rsp+0x48]
   14000faa8:	cmp    QWORD PTR [rdi+0x18],0x10
   14000faad:	jb     0x14000fab4
   14000faaf:	mov    rcx,QWORD PTR [rdi]
   14000fab2:	jmp    0x14000fab7
   14000fab4:	mov    rcx,rdi
   14000fab7:	mov    r8,rbx
   14000faba:	call   0x140033260
   14000fabf:	mov    QWORD PTR [rdi+0x10],rbx
   14000fac3:	cmp    QWORD PTR [rdi+0x18],0x10
   14000fac8:	jb     0x14000facd
   14000faca:	mov    rdi,QWORD PTR [rdi]
   14000facd:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000fad1:	cmp    QWORD PTR [rsp+0x60],0x10
   14000fad7:	jb     0x14000fae3
   14000fad9:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fade:	call   0x1400330c0
   14000fae3:	movzx  eax,sil
   14000fae7:	mov    rcx,QWORD PTR [rbp+0x220]
   14000faee:	xor    rcx,rsp
   14000faf1:	call   0x140032f00
   14000faf6:	mov    rbx,QWORD PTR [rsp+0x370]
   14000fafe:	add    rsp,0x330
   14000fb05:	pop    r14
   14000fb07:	pop    r12
   14000fb09:	pop    rdi
   14000fb0a:	pop    rsi
   14000fb0b:	pop    rbp
   14000fb0c:	ret    
   14000fb0d:	int3   
   14000fb0e:	int3   
   14000fb0f:	int3   
   14000fb10:	rex push rbp
   14000fb12:	push   rbx
   14000fb13:	push   rsi
   14000fb14:	push   rdi
   14000fb15:	push   r12
   14000fb17:	push   r13
   14000fb19:	push   r15
   14000fb1b:	lea    rbp,[rsp-0x240]
   14000fb23:	sub    rsp,0x340
   14000fb2a:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14000fb33:	mov    rax,QWORD PTR [rip+0x7556e]        # 0x1400850a8
   14000fb3a:	xor    rax,rsp
   14000fb3d:	mov    QWORD PTR [rbp+0x230],rax
   14000fb44:	mov    r12d,r8d
   14000fb47:	mov    r13,rdx
   14000fb4a:	mov    rbx,rcx
   14000fb4d:	mov    DWORD PTR [rsp+0x38],r8d
   14000fb52:	xor    sil,sil
   14000fb55:	lea    rax,[rbp-0x78]
   14000fb59:	mov    QWORD PTR [rbp-0x80],rax
   14000fb5d:	test   rdx,rdx
   14000fb60:	jne    0x14000fb68
   14000fb62:	mov    QWORD PTR [rbp-0x80],rdx
   14000fb66:	jmp    0x14000fbd2
   14000fb68:	mov    rcx,rdx
   14000fb6b:	call   QWORD PTR [rip+0x5886f]        # 0x1400683e0
   14000fb71:	lea    edi,[rax+0x1]
   14000fb74:	lea    r8,[rbp-0x78]
   14000fb78:	mov    edx,edi
   14000fb7a:	lea    rcx,[rbp-0x80]
   14000fb7e:	call   0x140002f80
   14000fb83:	movsxd rdx,edi
   14000fb86:	mov    r9,rdx
   14000fb89:	mov    r8,r13
   14000fb8c:	mov    rcx,QWORD PTR [rbp-0x80]
   14000fb90:	call   0x140033ccc
   14000fb95:	test   eax,eax
   14000fb97:	je     0x14000fbce
   14000fb99:	cmp    eax,0xc
   14000fb9c:	je     0x14000fbc3
   14000fb9e:	cmp    eax,0x16
   14000fba1:	je     0x14000fbb8
   14000fba3:	cmp    eax,0x22
   14000fba6:	je     0x14000fbb8
   14000fba8:	cmp    eax,0x50
   14000fbab:	je     0x14000fbce
   14000fbad:	mov    ecx,0x80004005
   14000fbb2:	call   0x1400025f0
   14000fbb7:	int3   
   14000fbb8:	mov    ecx,0x80070057
   14000fbbd:	call   0x1400025f0
   14000fbc2:	int3   
   14000fbc3:	mov    ecx,0x8007000e
   14000fbc8:	call   0x1400025f0
   14000fbcd:	int3   
   14000fbce:	mov    rdx,QWORD PTR [rbp-0x80]
   14000fbd2:	mov    QWORD PTR [rsp+0x68],0xf
   14000fbdb:	mov    QWORD PTR [rsp+0x60],0x0
   14000fbe4:	mov    BYTE PTR [rsp+0x50],0x0
   14000fbe9:	xor    eax,eax
   14000fbeb:	or     r15,0xffffffffffffffff
   14000fbef:	mov    rcx,r15
   14000fbf2:	mov    rdi,rdx
   14000fbf5:	repnz scas al,BYTE PTR es:[rdi]
   14000fbf7:	not    rcx
   14000fbfa:	lea    r8,[rcx-0x1]
   14000fbfe:	lea    rcx,[rsp+0x50]
   14000fc03:	call   0x140002ba0
   14000fc08:	nop
   14000fc09:	lea    rax,[rbp-0x78]
   14000fc0d:	mov    rcx,QWORD PTR [rbp-0x80]
   14000fc11:	cmp    rcx,rax
   14000fc14:	je     0x14000fc1b
   14000fc16:	call   0x140033594
   14000fc1b:	cmp    r12d,0x9
   14000fc1f:	ja     0x14000fe31
   14000fc25:	lea    rcx,[rsp+0x50]
   14000fc2a:	cmp    QWORD PTR [rsp+0x68],0x10
   14000fc30:	cmovae rcx,QWORD PTR [rsp+0x50]
   14000fc36:	xor    r8d,r8d
   14000fc39:	lea    rdx,[rip+0x5b656]        # 0x14006b296
   14000fc40:	call   0x14003e320
   14000fc45:	movsxd rcx,eax
   14000fc48:	test   eax,eax
   14000fc4a:	jne    0x14000fc56
   14000fc4c:	cmp    QWORD PTR [rsp+0x60],rax
   14000fc51:	setne  al
   14000fc54:	mov    ecx,eax
   14000fc56:	test   ecx,ecx
   14000fc58:	sete   al
   14000fc5b:	test   al,al
   14000fc5d:	sete   al
   14000fc60:	test   al,al
   14000fc62:	je     0x14000fe31
   14000fc68:	mov    BYTE PTR [rbp+0x10],0x0
   14000fc6c:	xor    edx,edx
   14000fc6e:	mov    r8d,0x103
   14000fc74:	lea    rcx,[rbp+0x11]
   14000fc78:	call   0x140036dc0
   14000fc7d:	mov    BYTE PTR [rbp+0x120],0x0
   14000fc84:	xor    edx,edx
   14000fc86:	mov    r8d,0x103
   14000fc8c:	lea    rcx,[rbp+0x121]
   14000fc93:	call   0x140036dc0
   14000fc98:	mov    r8d,0x1
   14000fc9e:	lea    rdx,[rip+0x5d313]        # 0x14006cfb8
   14000fca5:	lea    rcx,[rbp+0x120]
   14000fcac:	call   0x14000c8f0
   14000fcb1:	mov    rdx,r13
   14000fcb4:	mov    rcx,rbx
   14000fcb7:	call   0x14000f390
   14000fcbc:	mov    edi,eax
   14000fcbe:	cmp    eax,0xffffffff
   14000fcc1:	je     0x14000fd7d
   14000fcc7:	lea    r8,[rbp+0x10]
   14000fccb:	mov    edx,eax
   14000fccd:	mov    ecx,DWORD PTR [rbx+0x20]
   14000fcd0:	call   0x140049800
   14000fcd5:	mov    QWORD PTR [rsp+0x30],0x0
   14000fcde:	lea    rax,[rsp+0x30]
   14000fce3:	mov    QWORD PTR [rsp+0x20],rax
   14000fce8:	mov    r9d,0x20006
   14000fcee:	xor    r8d,r8d
   14000fcf1:	lea    rdx,[rbp+0x10]
   14000fcf5:	mov    rcx,0xffffffff80000002
   14000fcfc:	call   QWORD PTR [rip+0x5834e]        # 0x140068050
   14000fd02:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fd07:	test   rcx,rcx
   14000fd0a:	je     0x14000fd24
   14000fd0c:	lea    rdx,[rbp+0x120]
   14000fd13:	call   QWORD PTR [rip+0x58317]        # 0x140068030
   14000fd19:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fd1e:	call   QWORD PTR [rip+0x58324]        # 0x140068048
   14000fd24:	mov    rcx,QWORD PTR [rbx+0x8]
   14000fd28:	mov    rax,QWORD PTR [rcx+0x8]
   14000fd2c:	cmp    BYTE PTR [rax+0x49],0x0
   14000fd30:	jne    0x14000fd49
   14000fd32:	cmp    DWORD PTR [rax+0x18],edi
   14000fd35:	jae    0x14000fd3d
   14000fd37:	mov    rax,QWORD PTR [rax+0x10]
   14000fd3b:	jmp    0x14000fd43
   14000fd3d:	mov    rcx,rax
   14000fd40:	mov    rax,QWORD PTR [rax]
   14000fd43:	cmp    BYTE PTR [rax+0x49],0x0
   14000fd47:	je     0x14000fd32
   14000fd49:	mov    QWORD PTR [rsp+0x30],rcx
   14000fd4e:	mov    rax,QWORD PTR [rbx+0x8]
   14000fd52:	cmp    rcx,rax
   14000fd55:	je     0x14000fd63
   14000fd57:	cmp    edi,DWORD PTR [rcx+0x18]
   14000fd5a:	jb     0x14000fd63
   14000fd5c:	lea    r8,[rsp+0x30]
   14000fd61:	jmp    0x14000fd6d
   14000fd63:	mov    QWORD PTR [rsp+0x40],rax
   14000fd68:	lea    r8,[rsp+0x40]
   14000fd6d:	mov    r8,QWORD PTR [r8]
   14000fd70:	lea    rdx,[rsp+0x40]
   14000fd75:	mov    rcx,rbx
   14000fd78:	call   0x140011560
   14000fd7d:	lea    r8,[rbp+0x10]
   14000fd81:	mov    edx,r12d
   14000fd84:	mov    ecx,DWORD PTR [rbx+0x20]
   14000fd87:	call   0x140049800
   14000fd8c:	mov    r8,r13
   14000fd8f:	lea    rdx,[rbp+0x120]
   14000fd96:	lea    rcx,[rbp+0x10]
   14000fd9a:	call   0x14000f5f0
   14000fd9f:	movzx  esi,al
   14000fda2:	test   al,al
   14000fda4:	je     0x14000fe31
   14000fdaa:	lea    rdx,[rsp+0x38]
   14000fdaf:	mov    rcx,rbx
   14000fdb2:	call   0x140011420
   14000fdb7:	mov    rdi,rax
   14000fdba:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fdbf:	cmp    rbx,0xffffffffffffffff
   14000fdc3:	cmova  rbx,r15
   14000fdc7:	lea    rax,[rsp+0x50]
   14000fdcc:	mov    rdx,rbx
   14000fdcf:	mov    rcx,rdi
   14000fdd2:	cmp    rdi,rax
   14000fdd5:	jne    0x14000fdee
   14000fdd7:	mov    r8,r15
   14000fdda:	call   0x140002da0
   14000fddf:	xor    r8d,r8d
   14000fde2:	xor    edx,edx
   14000fde4:	mov    rcx,rdi
   14000fde7:	call   0x140002da0
   14000fdec:	jmp    0x14000fe31
   14000fdee:	call   0x140002d30
   14000fdf3:	test   al,al
   14000fdf5:	je     0x14000fe31
   14000fdf7:	lea    rdx,[rsp+0x50]
   14000fdfc:	cmp    QWORD PTR [rsp+0x68],0x10
   14000fe02:	cmovae rdx,QWORD PTR [rsp+0x50]
   14000fe08:	cmp    QWORD PTR [rdi+0x18],0x10
   14000fe0d:	jb     0x14000fe14
   14000fe0f:	mov    rcx,QWORD PTR [rdi]
   14000fe12:	jmp    0x14000fe17
   14000fe14:	mov    rcx,rdi
   14000fe17:	mov    r8,rbx
   14000fe1a:	call   0x140033260
   14000fe1f:	mov    QWORD PTR [rdi+0x10],rbx
   14000fe23:	cmp    QWORD PTR [rdi+0x18],0x10
   14000fe28:	jb     0x14000fe2d
   14000fe2a:	mov    rdi,QWORD PTR [rdi]
   14000fe2d:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000fe31:	cmp    QWORD PTR [rsp+0x68],0x10
   14000fe37:	jb     0x14000fe43
   14000fe39:	mov    rcx,QWORD PTR [rsp+0x50]
   14000fe3e:	call   0x1400330c0
   14000fe43:	movzx  eax,sil
   14000fe47:	mov    rcx,QWORD PTR [rbp+0x230]
   14000fe4e:	xor    rcx,rsp
   14000fe51:	call   0x140032f00
   14000fe56:	add    rsp,0x340
   14000fe5d:	pop    r15
   14000fe5f:	pop    r13
   14000fe61:	pop    r12
   14000fe63:	pop    rdi
   14000fe64:	pop    rsi
   14000fe65:	pop    rbx
   14000fe66:	pop    rbp
   14000fe67:	ret    
   14000fe68:	int3   
   14000fe69:	int3   
   14000fe6a:	int3   
   14000fe6b:	int3   
   14000fe6c:	int3   
   14000fe6d:	int3   
   14000fe6e:	int3   
   14000fe6f:	int3   
   14000fe70:	rex push rbp
   14000fe72:	push   rsi
   14000fe73:	push   rdi
   14000fe74:	push   r12
   14000fe76:	push   r13
   14000fe78:	push   r14
   14000fe7a:	push   r15
   14000fe7c:	lea    rbp,[rsp-0x1b0]
   14000fe84:	sub    rsp,0x2b0
   14000fe8b:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000fe94:	mov    QWORD PTR [rsp+0x300],rbx
   14000fe9c:	mov    rax,QWORD PTR [rip+0x75205]        # 0x1400850a8
   14000fea3:	xor    rax,rsp
   14000fea6:	mov    QWORD PTR [rbp+0x1a0],rax
   14000fead:	mov    rsi,rdx
   14000feb0:	mov    r15,rcx
   14000feb3:	mov    QWORD PTR [rsp+0x58],rdx
   14000feb8:	xor    r13d,r13d
   14000febb:	mov    DWORD PTR [rsp+0x30],r13d
   14000fec0:	mov    QWORD PTR [rdx+0x18],0xf
   14000fec8:	mov    QWORD PTR [rdx+0x10],r13
   14000fecc:	mov    BYTE PTR [rdx],r13b
   14000fecf:	mov    r14d,0x1
   14000fed5:	mov    DWORD PTR [rsp+0x30],r14d
   14000feda:	xor    bl,bl
   14000fedc:	mov    eax,DWORD PTR [rcx+0x20]
   14000fedf:	cmp    eax,0x4
   14000fee2:	jb     0x14000fefc
   14000fee4:	cmp    eax,0x5
   14000fee7:	jbe    0x14000fef8
   14000fee9:	cmp    eax,0x7
   14000feec:	je     0x14000fef8
   14000feee:	cmp    eax,0xc
   14000fef1:	je     0x14000fef8
   14000fef3:	cmp    eax,0xe
   14000fef6:	jne    0x14000fefc
   14000fef8:	movzx  ebx,r14b
   14000fefc:	lea    rax,[rip+0x5d0cd]        # 0x14006cfd0
   14000ff03:	lea    rdx,[rip+0x5d116]        # 0x14006d020
   14000ff0a:	test   bl,bl
   14000ff0c:	cmovne rdx,rax
   14000ff10:	mov    QWORD PTR [rbp+0x40],0xf
   14000ff18:	mov    QWORD PTR [rbp+0x38],r13
   14000ff1c:	mov    BYTE PTR [rbp+0x28],0x0
   14000ff20:	xor    eax,eax
   14000ff22:	or     r12,0xffffffffffffffff
   14000ff26:	mov    rcx,r12
   14000ff29:	mov    rdi,rdx
   14000ff2c:	repnz scas al,BYTE PTR es:[rdi]
   14000ff2e:	not    rcx
   14000ff31:	lea    r8,[rcx-0x1]
   14000ff35:	lea    rcx,[rbp+0x28]
   14000ff39:	call   0x140002ba0
   14000ff3e:	nop
   14000ff3f:	lea    rax,[rip+0x5d122]        # 0x14006d068
   14000ff46:	lea    rdx,[rip+0x5d14b]        # 0x14006d098
   14000ff4d:	test   bl,bl
   14000ff4f:	cmovne rdx,rax
   14000ff53:	mov    QWORD PTR [rbp+0x18],0xf
   14000ff5b:	mov    QWORD PTR [rbp+0x10],r13
   14000ff5f:	mov    BYTE PTR [rbp+0x0],0x0
   14000ff63:	xor    eax,eax
   14000ff65:	mov    rcx,r12
   14000ff68:	mov    rdi,rdx
   14000ff6b:	repnz scas al,BYTE PTR es:[rdi]
   14000ff6d:	not    rcx
   14000ff70:	lea    r8,[rcx-0x1]
   14000ff74:	lea    rcx,[rbp+0x0]
   14000ff78:	call   0x140002ba0
   14000ff7d:	nop
   14000ff7e:	lea    rax,[rip+0x5d143]        # 0x14006d0c8
   14000ff85:	lea    rdx,[rip+0x5d14c]        # 0x14006d0d8
   14000ff8c:	test   bl,bl
   14000ff8e:	cmovne rdx,rax
   14000ff92:	mov    QWORD PTR [rbp-0x10],0xf
   14000ff9a:	mov    QWORD PTR [rbp-0x18],r13
   14000ff9e:	mov    BYTE PTR [rbp-0x28],0x0
   14000ffa2:	xor    eax,eax
   14000ffa4:	mov    rcx,r12
   14000ffa7:	mov    rdi,rdx
   14000ffaa:	repnz scas al,BYTE PTR es:[rdi]
   14000ffac:	not    rcx
   14000ffaf:	lea    r8,[rcx-0x1]
   14000ffb3:	lea    rcx,[rbp-0x28]
   14000ffb7:	call   0x140002ba0
   14000ffbc:	nop
   14000ffbd:	mov    rdi,QWORD PTR [r15+0x8]
   14000ffc1:	mov    rdi,QWORD PTR [rdi]
   14000ffc4:	cmp    QWORD PTR [rsi+0x10],0x0
   14000ffc9:	jne    0x1400109f1
   14000ffcf:	cmp    rdi,QWORD PTR [r15+0x8]
   14000ffd3:	je     0x1400108cd
   14000ffd9:	mov    QWORD PTR [rbp-0x38],0xf
   14000ffe1:	mov    QWORD PTR [rbp-0x40],r13
   14000ffe5:	mov    BYTE PTR [rbp-0x50],0x0
   14000ffe9:	lea    r12,[rdi+0x20]
   14000ffed:	mov    r13d,0xf
   14000fff3:	mov    QWORD PTR [rbp-0x60],r13
   14000fff7:	xor    ecx,ecx
   14000fff9:	mov    QWORD PTR [rbp-0x68],rcx
   14000fffd:	mov    BYTE PTR [rbp-0x78],cl
   140010000:	mov    rbx,QWORD PTR [r12+0x10]
   140010005:	cmp    rbx,0xffffffffffffffff
   140010009:	mov    rdx,0xffffffffffffffff
   140010010:	cmova  rbx,rdx
   140010014:	lea    rax,[rbp-0x78]
   140010018:	cmp    rax,r12
   14001001b:	jne    0x14001003c
   14001001d:	mov    r8,rdx
   140010020:	mov    rdx,rbx
   140010023:	lea    rcx,[rbp-0x78]
   140010027:	call   0x140002da0
   14001002c:	xor    r8d,r8d
   14001002f:	xor    edx,edx
   140010031:	lea    rcx,[rbp-0x78]
   140010035:	call   0x140002da0
   14001003a:	jmp    0x1400100b0
   14001003c:	cmp    rbx,0xfffffffffffffffe
   140010040:	ja     0x1400108c0
   140010046:	cmp    rbx,r13
   140010049:	jbe    0x140010060
   14001004b:	xor    r8d,r8d
   14001004e:	mov    rdx,rbx
   140010051:	lea    rcx,[rbp-0x78]
   140010055:	call   0x140002e40
   14001005a:	mov    r13,QWORD PTR [rbp-0x60]
   14001005e:	jmp    0x14001006c
   140010060:	test   rbx,rbx
   140010063:	jne    0x14001006f
   140010065:	mov    QWORD PTR [rbp-0x68],rcx
   140010069:	mov    BYTE PTR [rbp-0x78],cl
   14001006c:	test   rbx,rbx
   14001006f:	setne  al
   140010072:	test   al,al
   140010074:	je     0x1400100b4
   140010076:	cmp    QWORD PTR [r12+0x18],0x10
   14001007c:	jb     0x140010082
   14001007e:	mov    r12,QWORD PTR [r12]
   140010082:	lea    rcx,[rbp-0x78]
   140010086:	cmp    r13,0x10
   14001008a:	cmovae rcx,QWORD PTR [rbp-0x78]
   14001008f:	mov    r8,rbx
   140010092:	mov    rdx,r12
   140010095:	call   0x140033260
   14001009a:	mov    QWORD PTR [rbp-0x68],rbx
   14001009e:	lea    rax,[rbp-0x78]
   1400100a2:	cmp    QWORD PTR [rbp-0x60],0x10
   1400100a7:	cmovae rax,QWORD PTR [rbp-0x78]
   1400100ac:	mov    BYTE PTR [rbx+rax*1],0x0
   1400100b0:	mov    r13,QWORD PTR [rbp-0x60]
   1400100b4:	mov    rcx,QWORD PTR [rbp-0x68]
   1400100b8:	cmp    rcx,0x1
   1400100bc:	jb     0x1400101b0
   1400100c2:	dec    rcx
   1400100c5:	cmp    rcx,0xffffffffffffffff
   1400100c9:	mov    rax,0xffffffffffffffff
   1400100d0:	cmova  rcx,rax
   1400100d4:	lea    rbx,[rbp-0x78]
   1400100d8:	mov    r12,QWORD PTR [rbp-0x78]
   1400100dc:	cmp    r13,0x10
   1400100e0:	cmovae rbx,r12
   1400100e4:	add    rbx,rcx
   1400100e7:	cmp    BYTE PTR [rbx],0x7b
   1400100ea:	je     0x140010103
   1400100ec:	lea    rcx,[rbp-0x78]
   1400100f0:	call   0x140002a60
   1400100f5:	cmp    rbx,rax
   1400100f8:	je     0x1400101b0
   1400100fe:	dec    rbx
   140010101:	jmp    0x1400100e7
   140010103:	lea    rax,[rbp-0x78]
   140010107:	cmp    r13,0x10
   14001010b:	cmovae rax,r12
   14001010f:	sub    rbx,rax
   140010112:	cmp    rbx,0xffffffffffffffff
   140010116:	je     0x1400101b0
   14001011c:	mov    r8,rbx
   14001011f:	lea    rdx,[rbp+0x50]
   140010123:	lea    rcx,[rbp-0x78]
   140010127:	call   0x1400113e0
   14001012c:	mov    rbx,rax
   14001012f:	lea    rax,[rbp-0x50]
   140010133:	cmp    rax,rbx
   140010136:	je     0x1400101a0
   140010138:	cmp    QWORD PTR [rbp-0x38],0x10
   14001013d:	jb     0x140010148
   14001013f:	mov    rcx,QWORD PTR [rbp-0x50]
   140010143:	call   0x1400330c0
   140010148:	mov    QWORD PTR [rbp-0x38],0xf
   140010150:	xor    r12d,r12d
   140010153:	mov    QWORD PTR [rbp-0x40],r12
   140010157:	mov    BYTE PTR [rbp-0x50],r12b
   14001015b:	cmp    QWORD PTR [rbx+0x18],0x10
   140010160:	jae    0x140010177
   140010162:	mov    r8,QWORD PTR [rbx+0x10]
   140010166:	inc    r8
   140010169:	mov    rdx,rbx
   14001016c:	lea    rcx,[rbp-0x50]
   140010170:	call   0x140033260
   140010175:	jmp    0x140010181
   140010177:	mov    rax,QWORD PTR [rbx]
   14001017a:	mov    QWORD PTR [rbp-0x50],rax
   14001017e:	mov    QWORD PTR [rbx],r12
   140010181:	mov    rax,QWORD PTR [rbx+0x10]
   140010185:	mov    QWORD PTR [rbp-0x40],rax
   140010189:	mov    rax,QWORD PTR [rbx+0x18]
   14001018d:	mov    QWORD PTR [rbp-0x38],rax
   140010191:	mov    QWORD PTR [rbx+0x18],0xf
   140010199:	mov    QWORD PTR [rbx+0x10],r12
   14001019d:	mov    BYTE PTR [rbx],r12b
   1400101a0:	cmp    QWORD PTR [rbp+0x68],0x10
   1400101a5:	jb     0x1400101b0
   1400101a7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400101ab:	call   0x1400330c0
   1400101b0:	mov    QWORD PTR [rsp+0x78],0xf
   1400101b9:	xor    r13d,r13d
   1400101bc:	mov    ecx,r13d
   1400101bf:	mov    QWORD PTR [rsp+0x70],rcx
   1400101c4:	mov    BYTE PTR [rsp+0x60],cl
   1400101c8:	mov    rbx,QWORD PTR [rbp+0x38]
   1400101cc:	cmp    rbx,0xffffffffffffffff
   1400101d0:	mov    rax,0xffffffffffffffff
   1400101d7:	cmova  rbx,rax
   1400101db:	cmp    rbx,0xfffffffffffffffe
   1400101df:	ja     0x1400108b3
   1400101e5:	cmp    rbx,0xf
   1400101e9:	jbe    0x140010202
   1400101eb:	xor    r8d,r8d
   1400101ee:	mov    rdx,rbx
   1400101f1:	lea    rcx,[rsp+0x60]
   1400101f6:	call   0x140002e40
   1400101fb:	mov    rcx,QWORD PTR [rsp+0x70]
   140010200:	jmp    0x140010210
   140010202:	test   rbx,rbx
   140010205:	jne    0x140010213
   140010207:	mov    QWORD PTR [rsp+0x70],rcx
   14001020c:	mov    BYTE PTR [rsp+0x60],cl
   140010210:	test   rbx,rbx
   140010213:	setne  al
   140010216:	test   al,al
   140010218:	je     0x140010260
   14001021a:	lea    rdx,[rbp+0x28]
   14001021e:	cmp    QWORD PTR [rbp+0x40],0x10
   140010223:	cmovae rdx,QWORD PTR [rbp+0x28]
   140010228:	lea    rcx,[rsp+0x60]
   14001022d:	cmp    QWORD PTR [rsp+0x78],0x10
   140010233:	cmovae rcx,QWORD PTR [rsp+0x60]
   140010239:	mov    r8,rbx
   14001023c:	call   0x140033260
   140010241:	mov    QWORD PTR [rsp+0x70],rbx
   140010246:	lea    rax,[rsp+0x60]
   14001024b:	cmp    QWORD PTR [rsp+0x78],0x10
   140010251:	cmovae rax,QWORD PTR [rsp+0x60]
   140010257:	mov    BYTE PTR [rax+rbx*1],r13b
   14001025b:	mov    rcx,QWORD PTR [rsp+0x70]
   140010260:	or     rdx,0xffffffffffffffff
   140010264:	mov    r12,rdx
   140010267:	mov    rax,QWORD PTR [rbp-0x40]
   14001026b:	cmp    rax,rdx
   14001026e:	cmovb  r12,rax
   140010272:	mov    rax,rdx
   140010275:	sub    rax,rcx
   140010278:	cmp    rax,r12
   14001027b:	jbe    0x1400108a6
   140010281:	test   r12,r12
   140010284:	je     0x140010326
   14001028a:	lea    rbx,[rcx+r12*1]
   14001028e:	cmp    rbx,0xfffffffffffffffe
   140010292:	ja     0x1400107fb
   140010298:	cmp    QWORD PTR [rsp+0x78],rbx
   14001029d:	jae    0x1400102b1
   14001029f:	mov    r8,rcx
   1400102a2:	mov    rdx,rbx
   1400102a5:	lea    rcx,[rsp+0x60]
   1400102aa:	call   0x140002e40
   1400102af:	jmp    0x1400102ce
   1400102b1:	test   rbx,rbx
   1400102b4:	jne    0x1400102d6
   1400102b6:	mov    QWORD PTR [rsp+0x70],r13
   1400102bb:	lea    rax,[rsp+0x60]
   1400102c0:	cmp    QWORD PTR [rsp+0x78],0x10
   1400102c6:	cmovae rax,QWORD PTR [rsp+0x60]
   1400102cc:	mov    BYTE PTR [rax],bl
   1400102ce:	mov    rcx,QWORD PTR [rsp+0x70]
   1400102d3:	test   rbx,rbx
   1400102d6:	setne  al
   1400102d9:	test   al,al
   1400102db:	je     0x140010326
   1400102dd:	lea    rdx,[rbp-0x50]
   1400102e1:	cmp    QWORD PTR [rbp-0x38],0x10
   1400102e6:	cmovae rdx,QWORD PTR [rbp-0x50]
   1400102eb:	lea    rax,[rsp+0x60]
   1400102f0:	cmp    QWORD PTR [rsp+0x78],0x10
   1400102f6:	cmovae rax,QWORD PTR [rsp+0x60]
   1400102fc:	add    rcx,rax
   1400102ff:	mov    r8,r12
   140010302:	call   0x140033260
   140010307:	mov    QWORD PTR [rsp+0x70],rbx
   14001030c:	lea    rax,[rsp+0x60]
   140010311:	cmp    QWORD PTR [rsp+0x78],0x10
   140010317:	cmovae rax,QWORD PTR [rsp+0x60]
   14001031d:	mov    BYTE PTR [rbx+rax*1],0x0
   140010321:	mov    rcx,QWORD PTR [rsp+0x70]
   140010326:	or     rdx,0xffffffffffffffff
   14001032a:	mov    r12,rdx
   14001032d:	mov    rax,QWORD PTR [rbp-0x18]
   140010331:	cmp    rax,rdx
   140010334:	cmovb  r12,rax
   140010338:	mov    rax,rdx
   14001033b:	sub    rax,rcx
   14001033e:	cmp    rax,r12
   140010341:	jbe    0x140010899
   140010347:	test   r12,r12
   14001034a:	je     0x1400103e7
   140010350:	lea    rbx,[r12+rcx*1]
   140010354:	cmp    rbx,0xfffffffffffffffe
   140010358:	ja     0x140010808
   14001035e:	cmp    QWORD PTR [rsp+0x78],rbx
   140010363:	jae    0x140010377
   140010365:	mov    r8,rcx
   140010368:	mov    rdx,rbx
   14001036b:	lea    rcx,[rsp+0x60]
   140010370:	call   0x140002e40
   140010375:	jmp    0x140010394
   140010377:	test   rbx,rbx
   14001037a:	jne    0x14001039c
   14001037c:	mov    QWORD PTR [rsp+0x70],r13
   140010381:	lea    rax,[rsp+0x60]
   140010386:	cmp    QWORD PTR [rsp+0x78],0x10
   14001038c:	cmovae rax,QWORD PTR [rsp+0x60]
   140010392:	mov    BYTE PTR [rax],bl
   140010394:	mov    rcx,QWORD PTR [rsp+0x70]
   140010399:	test   rbx,rbx
   14001039c:	setne  al
   14001039f:	test   al,al
   1400103a1:	je     0x1400103e7
   1400103a3:	lea    rdx,[rbp-0x28]
   1400103a7:	cmp    QWORD PTR [rbp-0x10],0x10
   1400103ac:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400103b1:	lea    rax,[rsp+0x60]
   1400103b6:	cmp    QWORD PTR [rsp+0x78],0x10
   1400103bc:	cmovae rax,QWORD PTR [rsp+0x60]
   1400103c2:	add    rcx,rax
   1400103c5:	mov    r8,r12
   1400103c8:	call   0x140033260
   1400103cd:	mov    QWORD PTR [rsp+0x70],rbx
   1400103d2:	lea    rax,[rsp+0x60]
   1400103d7:	cmp    QWORD PTR [rsp+0x78],0x10
   1400103dd:	cmovae rax,QWORD PTR [rsp+0x60]
   1400103e3:	mov    BYTE PTR [rbx+rax*1],0x0
   1400103e7:	mov    DWORD PTR [rsp+0x34],r13d
   1400103ec:	lea    r12,[rbp+0x0]
   1400103f0:	cmp    QWORD PTR [rbp+0x18],0x10
   1400103f5:	cmovae r12,QWORD PTR [rbp+0x0]
   1400103fa:	lea    rax,[rbp+0x118]
   140010401:	mov    QWORD PTR [rbp+0x110],rax
   140010408:	test   r12,r12
   14001040b:	jne    0x140010419
   14001040d:	mov    QWORD PTR [rbp+0x110],r13
   140010414:	jmp    0x1400104dd
   140010419:	mov    rcx,r12
   14001041c:	call   QWORD PTR [rip+0x57fbe]        # 0x1400683e0
   140010422:	mov    ebx,eax
   140010424:	inc    ebx
   140010426:	mov    ecx,r13d
   140010429:	setns  cl
   14001042c:	test   ecx,ecx
   14001042e:	je     0x14001088e
   140010434:	lea    rax,[rbp+0x118]
   14001043b:	mov    rcx,QWORD PTR [rbp+0x110]
   140010442:	cmp    rcx,rax
   140010445:	je     0x14001046f
   140010447:	cmp    ebx,0x80
   14001044d:	jle    0x140010468
   14001044f:	movsxd rdx,ebx
   140010452:	mov    r8d,0x1
   140010458:	call   0x140033618
   14001045d:	test   rax,rax
   140010460:	je     0x140010815
   140010466:	jmp    0x140010484
   140010468:	call   0x140033594
   14001046d:	jmp    0x140010496
   14001046f:	cmp    ebx,0x80
   140010475:	jle    0x140010496
   140010477:	movsxd rcx,ebx
   14001047a:	mov    edx,0x1
   14001047f:	call   0x1400335d4
   140010484:	mov    QWORD PTR [rbp+0x110],rax
   14001048b:	test   rax,rax
   14001048e:	je     0x140010820
   140010494:	jmp    0x1400104a4
   140010496:	lea    rax,[rbp+0x118]
   14001049d:	mov    QWORD PTR [rbp+0x110],rax
   1400104a4:	movsxd rdx,ebx
   1400104a7:	mov    r9,rdx
   1400104aa:	mov    r8,r12
   1400104ad:	mov    rcx,rax
   1400104b0:	call   0x140033ccc
   1400104b5:	test   eax,eax
   1400104b7:	je     0x1400104dd
   1400104b9:	cmp    eax,0xc
   1400104bc:	je     0x140010841
   1400104c2:	cmp    eax,0x16
   1400104c5:	je     0x140010836
   1400104cb:	cmp    eax,0x22
   1400104ce:	je     0x140010836
   1400104d4:	cmp    eax,0x50
   1400104d7:	jne    0x14001082b
   1400104dd:	or     r14d,0x2
   1400104e1:	mov    DWORD PTR [rsp+0x30],r14d
   1400104e6:	lea    r12,[rsp+0x60]
   1400104eb:	cmp    QWORD PTR [rsp+0x78],0x10
   1400104f1:	cmovae r12,QWORD PTR [rsp+0x60]
   1400104f7:	lea    rax,[rbp+0x88]
   1400104fe:	mov    QWORD PTR [rbp+0x80],rax
   140010505:	test   r12,r12
   140010508:	jne    0x140010519
   14001050a:	mov    rdx,r13
   14001050d:	mov    QWORD PTR [rbp+0x80],rdx
   140010514:	jmp    0x1400105e4
   140010519:	mov    rcx,r12
   14001051c:	call   QWORD PTR [rip+0x57ebe]        # 0x1400683e0
   140010522:	mov    ebx,eax
   140010524:	inc    ebx
   140010526:	mov    ecx,r13d
   140010529:	setns  cl
   14001052c:	test   ecx,ecx
   14001052e:	je     0x140010883
   140010534:	lea    rax,[rbp+0x88]
   14001053b:	mov    rcx,QWORD PTR [rbp+0x80]
   140010542:	cmp    rcx,rax
   140010545:	je     0x14001056f
   140010547:	cmp    ebx,0x80
   14001054d:	jle    0x140010568
   14001054f:	movsxd rdx,ebx
   140010552:	mov    r8d,0x1
   140010558:	call   0x140033618
   14001055d:	test   rax,rax
   140010560:	je     0x14001084c
   140010566:	jmp    0x140010584
   140010568:	call   0x140033594
   14001056d:	jmp    0x140010596
   14001056f:	cmp    ebx,0x80
   140010575:	jle    0x140010596
   140010577:	movsxd rcx,ebx
   14001057a:	mov    edx,0x1
   14001057f:	call   0x1400335d4
   140010584:	mov    QWORD PTR [rbp+0x80],rax
   14001058b:	test   rax,rax
   14001058e:	je     0x140010857
   140010594:	jmp    0x1400105a4
   140010596:	lea    rax,[rbp+0x88]
   14001059d:	mov    QWORD PTR [rbp+0x80],rax
   1400105a4:	movsxd rdx,ebx
   1400105a7:	mov    r9,rdx
   1400105aa:	mov    r8,r12
   1400105ad:	mov    rcx,rax
   1400105b0:	call   0x140033ccc
   1400105b5:	test   eax,eax
   1400105b7:	je     0x1400105dd
   1400105b9:	cmp    eax,0xc
   1400105bc:	je     0x140010878
   1400105c2:	cmp    eax,0x16
   1400105c5:	je     0x14001086d
   1400105cb:	cmp    eax,0x22
   1400105ce:	je     0x14001086d
   1400105d4:	cmp    eax,0x50
   1400105d7:	jne    0x140010862
   1400105dd:	mov    rdx,QWORD PTR [rbp+0x80]
   1400105e4:	or     r14d,0x4
   1400105e8:	mov    DWORD PTR [rsp+0x30],r14d
   1400105ed:	mov    rbx,QWORD PTR [rbp+0x110]
   1400105f4:	mov    QWORD PTR [rsp+0x40],r13
   1400105f9:	lea    rax,[rsp+0x40]
   1400105fe:	mov    QWORD PTR [rsp+0x20],rax
   140010603:	mov    r9d,0x20019
   140010609:	xor    r8d,r8d
   14001060c:	mov    rcx,0xffffffff80000002
   140010613:	call   QWORD PTR [rip+0x57a37]        # 0x140068050
   140010619:	mov    rcx,QWORD PTR [rsp+0x40]
   14001061e:	test   rcx,rcx
   140010621:	je     0x14001066f
   140010623:	mov    DWORD PTR [rsp+0x38],0x4
   14001062b:	lea    rax,[rsp+0x38]
   140010630:	mov    QWORD PTR [rsp+0x28],rax
   140010635:	lea    rax,[rsp+0x34]
   14001063a:	mov    QWORD PTR [rsp+0x20],rax
   14001063f:	lea    r9,[rsp+0x48]
   140010644:	xor    r8d,r8d
   140010647:	mov    rdx,rbx
   14001064a:	call   QWORD PTR [rip+0x57a08]        # 0x140068058
   140010650:	test   eax,eax
   140010652:	sete   bl
   140010655:	mov    rcx,QWORD PTR [rsp+0x40]
   14001065a:	call   QWORD PTR [rip+0x579e8]        # 0x140068048
   140010660:	test   bl,bl
   140010662:	je     0x14001066f
   140010664:	cmp    DWORD PTR [rsp+0x34],0x1
   140010669:	jne    0x14001066f
   14001066b:	mov    bl,0x1
   14001066d:	jmp    0x140010671
   14001066f:	xor    bl,bl
   140010671:	test   r14b,0x4
   140010675:	je     0x140010699
   140010677:	and    r14d,0xfffffffb
   14001067b:	mov    DWORD PTR [rsp+0x30],r14d
   140010680:	lea    rax,[rbp+0x88]
   140010687:	mov    rcx,QWORD PTR [rbp+0x80]
   14001068e:	cmp    rcx,rax
   140010691:	je     0x140010699
   140010693:	call   0x140033594
   140010698:	nop
   140010699:	test   r14b,0x2
   14001069d:	je     0x1400106c0
   14001069f:	and    r14d,0xfffffffd
   1400106a3:	mov    DWORD PTR [rsp+0x30],r14d
   1400106a8:	lea    rax,[rbp+0x118]
   1400106af:	mov    rcx,QWORD PTR [rbp+0x110]
   1400106b6:	cmp    rcx,rax
   1400106b9:	je     0x1400106c0
   1400106bb:	call   0x140033594
   1400106c0:	test   bl,bl
   1400106c2:	je     0x140010742
   1400106c4:	mov    rbx,QWORD PTR [rbp-0x68]
   1400106c8:	cmp    rbx,0xffffffffffffffff
   1400106cc:	mov    r12,0xffffffffffffffff
   1400106d3:	cmova  rbx,r12
   1400106d7:	lea    rax,[rbp-0x78]
   1400106db:	mov    rdx,rbx
   1400106de:	mov    rcx,rsi
   1400106e1:	cmp    rsi,rax
   1400106e4:	jne    0x1400106fd
   1400106e6:	mov    r8,r12
   1400106e9:	call   0x140002da0
   1400106ee:	xor    r8d,r8d
   1400106f1:	xor    edx,edx
   1400106f3:	mov    rcx,rsi
   1400106f6:	call   0x140002da0
   1400106fb:	jmp    0x140010742
   1400106fd:	call   0x140002d30
   140010702:	test   al,al
   140010704:	je     0x140010742
   140010706:	lea    rdx,[rbp-0x78]
   14001070a:	cmp    QWORD PTR [rbp-0x60],0x10
   14001070f:	cmovae rdx,QWORD PTR [rbp-0x78]
   140010714:	cmp    QWORD PTR [rsi+0x18],0x10
   140010719:	jb     0x140010720
   14001071b:	mov    rcx,QWORD PTR [rsi]
   14001071e:	jmp    0x140010723
   140010720:	mov    rcx,rsi
   140010723:	mov    r8,rbx
   140010726:	call   0x140033260
   14001072b:	mov    QWORD PTR [rsi+0x10],rbx
   14001072f:	cmp    QWORD PTR [rsi+0x18],0x10
   140010734:	jb     0x14001073b
   140010736:	mov    rax,QWORD PTR [rsi]
   140010739:	jmp    0x14001073e
   14001073b:	mov    rax,rsi
   14001073e:	mov    BYTE PTR [rax+rbx*1],0x0
   140010742:	cmp    QWORD PTR [rsp+0x78],0x10
   140010748:	jb     0x140010754
   14001074a:	mov    rcx,QWORD PTR [rsp+0x60]
   14001074f:	call   0x1400330c0
   140010754:	mov    QWORD PTR [rsp+0x78],0xf
   14001075d:	mov    QWORD PTR [rsp+0x70],r13
   140010762:	mov    BYTE PTR [rsp+0x60],0x0
   140010767:	cmp    QWORD PTR [rbp-0x60],0x10
   14001076c:	jb     0x140010777
   14001076e:	mov    rcx,QWORD PTR [rbp-0x78]
   140010772:	call   0x1400330c0
   140010777:	mov    QWORD PTR [rbp-0x60],0xf
   14001077f:	mov    QWORD PTR [rbp-0x68],r13
   140010783:	mov    BYTE PTR [rbp-0x78],0x0
   140010787:	cmp    QWORD PTR [rbp-0x38],0x10
   14001078c:	jb     0x140010797
   14001078e:	mov    rcx,QWORD PTR [rbp-0x50]
   140010792:	call   0x1400330c0
   140010797:	cmp    BYTE PTR [rdi+0x49],0x0
   14001079b:	jne    0x14000ffc4
   1400107a1:	mov    rax,QWORD PTR [rdi+0x10]
   1400107a5:	cmp    BYTE PTR [rax+0x49],0x0
   1400107a9:	jne    0x1400107d1
   1400107ab:	mov    rdi,rax
   1400107ae:	mov    rax,QWORD PTR [rax]
   1400107b1:	cmp    BYTE PTR [rax+0x49],0x0
   1400107b5:	jne    0x14000ffc4
   1400107bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400107c0:	mov    rdi,rax
   1400107c3:	mov    rax,QWORD PTR [rax]
   1400107c6:	cmp    BYTE PTR [rax+0x49],0x0
   1400107ca:	je     0x1400107c0
   1400107cc:	jmp    0x14000ffc4
   1400107d1:	mov    rax,QWORD PTR [rdi+0x8]
   1400107d5:	cmp    BYTE PTR [rax+0x49],0x0
   1400107d9:	jne    0x1400107f3
   1400107db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400107e0:	cmp    rdi,QWORD PTR [rax+0x10]
   1400107e4:	jne    0x1400107f3
   1400107e6:	mov    rdi,rax
   1400107e9:	mov    rax,QWORD PTR [rax+0x8]
   1400107ed:	cmp    BYTE PTR [rax+0x49],0x0
   1400107f1:	je     0x1400107e0
   1400107f3:	mov    rdi,rax
   1400107f6:	jmp    0x14000ffc4
   1400107fb:	lea    rcx,[rip+0x5ab4e]        # 0x14006b350
   140010802:	call   0x140032d00
   140010807:	int3   
   140010808:	lea    rcx,[rip+0x5ab41]        # 0x14006b350
   14001080f:	call   0x140032d00
   140010814:	int3   
   140010815:	mov    ecx,0x8007000e
   14001081a:	call   0x1400025f0
   14001081f:	int3   
   140010820:	mov    ecx,0x8007000e
   140010825:	call   0x1400025f0
   14001082a:	int3   
   14001082b:	mov    ecx,0x80004005
   140010830:	call   0x1400025f0
   140010835:	int3   
   140010836:	mov    ecx,0x80070057
   14001083b:	call   0x1400025f0
   140010840:	int3   
   140010841:	mov    ecx,0x8007000e
   140010846:	call   0x1400025f0
   14001084b:	nop
   14001084c:	mov    ecx,0x8007000e
   140010851:	call   0x1400025f0
   140010856:	int3   
   140010857:	mov    ecx,0x8007000e
   14001085c:	call   0x1400025f0
   140010861:	int3   
   140010862:	mov    ecx,0x80004005
   140010867:	call   0x1400025f0
   14001086c:	int3   
   14001086d:	mov    ecx,0x80070057
   140010872:	call   0x1400025f0
   140010877:	int3   
   140010878:	mov    ecx,0x8007000e
   14001087d:	call   0x1400025f0
   140010882:	int3   
   140010883:	mov    ecx,0x80070057
   140010888:	call   0x1400025f0
   14001088d:	nop
   14001088e:	mov    ecx,0x80070057
   140010893:	call   0x1400025f0
   140010898:	int3   
   140010899:	lea    rcx,[rip+0x5aab0]        # 0x14006b350
   1400108a0:	call   0x140032d00
   1400108a5:	int3   
   1400108a6:	lea    rcx,[rip+0x5aaa3]        # 0x14006b350
   1400108ad:	call   0x140032d00
   1400108b2:	nop
   1400108b3:	lea    rcx,[rip+0x5aa96]        # 0x14006b350
   1400108ba:	call   0x140032d00
   1400108bf:	nop
   1400108c0:	lea    rcx,[rip+0x5aa89]        # 0x14006b350
   1400108c7:	call   0x140032d00
   1400108cc:	nop
   1400108cd:	cmp    QWORD PTR [rsi+0x10],0x0
   1400108d2:	jne    0x1400109f1
   1400108d8:	lea    rdx,[rbp+0x50]
   1400108dc:	mov    rcx,r15
   1400108df:	call   0x140011060
   1400108e4:	mov    rdi,rax
   1400108e7:	cmp    rsi,rax
   1400108ea:	je     0x14001094d
   1400108ec:	cmp    QWORD PTR [rsi+0x18],0x10
   1400108f1:	jb     0x1400108fb
   1400108f3:	mov    rcx,QWORD PTR [rsi]
   1400108f6:	call   0x1400330c0
   1400108fb:	mov    QWORD PTR [rsi+0x18],0xf
   140010903:	mov    QWORD PTR [rsi+0x10],r13
   140010907:	mov    BYTE PTR [rsi],0x0
   14001090a:	cmp    QWORD PTR [rdi+0x18],0x10
   14001090f:	jae    0x140010925
   140010911:	mov    r8,QWORD PTR [rdi+0x10]
   140010915:	inc    r8
   140010918:	mov    rdx,rdi
   14001091b:	mov    rcx,rsi
   14001091e:	call   0x140033260
   140010923:	jmp    0x14001092e
   140010925:	mov    rax,QWORD PTR [rdi]
   140010928:	mov    QWORD PTR [rsi],rax
   14001092b:	mov    QWORD PTR [rdi],r13
   14001092e:	mov    rax,QWORD PTR [rdi+0x10]
   140010932:	mov    QWORD PTR [rsi+0x10],rax
   140010936:	mov    rax,QWORD PTR [rdi+0x18]
   14001093a:	mov    QWORD PTR [rsi+0x18],rax
   14001093e:	mov    QWORD PTR [rdi+0x18],0xf
   140010946:	mov    QWORD PTR [rdi+0x10],r13
   14001094a:	mov    BYTE PTR [rdi],0x0
   14001094d:	cmp    QWORD PTR [rbp+0x68],0x10
   140010952:	jb     0x14001095d
   140010954:	mov    rcx,QWORD PTR [rbp+0x50]
   140010958:	call   0x1400330c0
   14001095d:	cmp    QWORD PTR [rsi+0x10],0x0
   140010962:	jne    0x1400109f1
   140010968:	xor    r8d,r8d
   14001096b:	lea    rdx,[rbp+0x50]
   14001096f:	mov    rcx,r15
   140010972:	call   0x14000f2e0
   140010977:	mov    rdi,rax
   14001097a:	cmp    rsi,rax
   14001097d:	je     0x1400109e0
   14001097f:	cmp    QWORD PTR [rsi+0x18],0x10
   140010984:	jb     0x14001098e
   140010986:	mov    rcx,QWORD PTR [rsi]
   140010989:	call   0x1400330c0
   14001098e:	mov    QWORD PTR [rsi+0x18],0xf
   140010996:	mov    QWORD PTR [rsi+0x10],r13
   14001099a:	mov    BYTE PTR [rsi],0x0
   14001099d:	cmp    QWORD PTR [rdi+0x18],0x10
   1400109a2:	jae    0x1400109b8
   1400109a4:	mov    r8,QWORD PTR [rdi+0x10]
   1400109a8:	inc    r8
   1400109ab:	mov    rdx,rdi
   1400109ae:	mov    rcx,rsi
   1400109b1:	call   0x140033260
   1400109b6:	jmp    0x1400109c1
   1400109b8:	mov    rax,QWORD PTR [rdi]
   1400109bb:	mov    QWORD PTR [rsi],rax
   1400109be:	mov    QWORD PTR [rdi],r13
   1400109c1:	mov    rax,QWORD PTR [rdi+0x10]
   1400109c5:	mov    QWORD PTR [rsi+0x10],rax
   1400109c9:	mov    rax,QWORD PTR [rdi+0x18]
   1400109cd:	mov    QWORD PTR [rsi+0x18],rax
   1400109d1:	mov    QWORD PTR [rdi+0x18],0xf
   1400109d9:	mov    QWORD PTR [rdi+0x10],r13
   1400109dd:	mov    BYTE PTR [rdi],0x0
   1400109e0:	cmp    QWORD PTR [rbp+0x68],0x10
   1400109e5:	jb     0x1400109f1
   1400109e7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400109eb:	call   0x1400330c0
   1400109f0:	nop
   1400109f1:	cmp    QWORD PTR [rbp-0x10],0x10
   1400109f6:	jb     0x140010a01
   1400109f8:	mov    rcx,QWORD PTR [rbp-0x28]
   1400109fc:	call   0x1400330c0
   140010a01:	mov    QWORD PTR [rbp-0x10],0xf
   140010a09:	mov    QWORD PTR [rbp-0x18],r13
   140010a0d:	mov    BYTE PTR [rbp-0x28],0x0
   140010a11:	cmp    QWORD PTR [rbp+0x18],0x10
   140010a16:	jb     0x140010a21
   140010a18:	mov    rcx,QWORD PTR [rbp+0x0]
   140010a1c:	call   0x1400330c0
   140010a21:	mov    QWORD PTR [rbp+0x18],0xf
   140010a29:	mov    QWORD PTR [rbp+0x10],r13
   140010a2d:	mov    BYTE PTR [rbp+0x0],0x0
   140010a31:	cmp    QWORD PTR [rbp+0x40],0x10
   140010a36:	jb     0x140010a41
   140010a38:	mov    rcx,QWORD PTR [rbp+0x28]
   140010a3c:	call   0x1400330c0
   140010a41:	mov    rax,rsi
   140010a44:	mov    rcx,QWORD PTR [rbp+0x1a0]
   140010a4b:	xor    rcx,rsp
   140010a4e:	call   0x140032f00
   140010a53:	mov    rbx,QWORD PTR [rsp+0x300]
   140010a5b:	add    rsp,0x2b0
   140010a62:	pop    r15
   140010a64:	pop    r14
   140010a66:	pop    r13
   140010a68:	pop    r12
   140010a6a:	pop    rdi
   140010a6b:	pop    rsi
   140010a6c:	pop    rbp
   140010a6d:	ret    
   140010a6e:	int3   
   140010a6f:	int3   
   140010a70:	mov    rax,rsp
   140010a73:	push   rbp
   140010a74:	push   r12
   140010a76:	push   r13
   140010a78:	push   r14
   140010a7a:	push   r15
   140010a7c:	lea    rbp,[rax-0x5f]
   140010a80:	sub    rsp,0xf0
   140010a87:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   140010a8f:	mov    QWORD PTR [rax+0x10],rbx
   140010a93:	mov    QWORD PTR [rax+0x18],rsi
   140010a97:	mov    QWORD PTR [rax+0x20],rdi
   140010a9b:	mov    rax,QWORD PTR [rip+0x74606]        # 0x1400850a8
   140010aa2:	xor    rax,rsp
   140010aa5:	mov    QWORD PTR [rbp+0x2f],rax
   140010aa9:	mov    r12,rcx
   140010aac:	xor    r15d,r15d
   140010aaf:	mov    DWORD PTR [rbp+0x1f],r15d
   140010ab3:	mov    DWORD PTR [rbp+0x23],0x4
   140010aba:	mov    DWORD PTR [rbp+0x27],0x8
   140010ac1:	mov    DWORD PTR [rbp+0x2b],0xc
   140010ac8:	mov    r9,QWORD PTR [rcx+0x8]
   140010acc:	mov    r8,QWORD PTR [rcx]
   140010acf:	lea    rdx,[rbp-0x71]
   140010ad3:	call   0x140011ae0
   140010ad8:	mov    r13d,r15d
   140010adb:	lea    r14,[rbp+0x1f]
   140010adf:	nop
   140010ae0:	mov    esi,DWORD PTR [r14]
   140010ae3:	mov    QWORD PTR [rsp+0x30],r15
   140010ae8:	mov    ecx,0x50
   140010aed:	call   0x1400331a0
   140010af2:	test   rax,rax
   140010af5:	je     0x140010ded
   140010afb:	mov    QWORD PTR [rsp+0x28],rax
   140010b00:	mov    QWORD PTR [rax],rax
   140010b03:	mov    rax,QWORD PTR [rsp+0x28]
   140010b08:	mov    QWORD PTR [rax+0x8],rax
   140010b0c:	mov    rax,QWORD PTR [rsp+0x28]
   140010b11:	mov    QWORD PTR [rax+0x10],rax
   140010b15:	mov    rax,QWORD PTR [rsp+0x28]
   140010b1a:	mov    BYTE PTR [rax+0x48],0x1
   140010b1e:	mov    rax,QWORD PTR [rsp+0x28]
   140010b23:	mov    BYTE PTR [rax+0x49],0x1
   140010b27:	mov    DWORD PTR [rbp-0x79],esi
   140010b2a:	lea    rcx,[rsp+0x20]
   140010b2f:	call   0x14000ef00
   140010b34:	nop
   140010b35:	mov    edi,r15d
   140010b38:	cmp    DWORD PTR [rsp+0x30],r15d
   140010b3d:	jbe    0x140010c53
   140010b43:	mov    r8d,edi
   140010b46:	lea    rdx,[rbp-0x9]
   140010b4a:	lea    rcx,[rsp+0x20]
   140010b4f:	call   0x14000f2e0
   140010b54:	nop
   140010b55:	mov    rbx,QWORD PTR [rbp+0x7]
   140010b59:	test   rbx,rbx
   140010b5c:	je     0x140010c37
   140010b62:	mov    r8d,0xf
   140010b68:	mov    QWORD PTR [rbp-0x29],r8
   140010b6c:	mov    QWORD PTR [rbp-0x31],r15
   140010b70:	mov    BYTE PTR [rbp-0x41],0x0
   140010b74:	mov    QWORD PTR [rbp-0x19],r15
   140010b78:	mov    DWORD PTR [rbp-0x11],r15d
   140010b7c:	cmp    rbx,0xffffffffffffffff
   140010b80:	mov    rax,0xffffffffffffffff
   140010b87:	cmova  rbx,rax
   140010b8b:	cmp    rbx,0xfffffffffffffffe
   140010b8f:	ja     0x140010de0
   140010b95:	cmp    rbx,r8
   140010b98:	jbe    0x140010baf
   140010b9a:	xor    r8d,r8d
   140010b9d:	mov    rdx,rbx
   140010ba0:	lea    rcx,[rbp-0x41]
   140010ba4:	call   0x140002e40
   140010ba9:	mov    r8,QWORD PTR [rbp-0x29]
   140010bad:	jmp    0x140010bbb
   140010baf:	test   rbx,rbx
   140010bb2:	jne    0x140010bbe
   140010bb4:	mov    QWORD PTR [rbp-0x31],r15
   140010bb8:	mov    BYTE PTR [rbp-0x41],bl
   140010bbb:	test   rbx,rbx
   140010bbe:	setne  al
   140010bc1:	test   al,al
   140010bc3:	je     0x140010bfe
   140010bc5:	lea    rdx,[rbp-0x9]
   140010bc9:	cmp    QWORD PTR [rbp+0xf],0x10
   140010bce:	cmovae rdx,QWORD PTR [rbp-0x9]
   140010bd3:	lea    rcx,[rbp-0x41]
   140010bd7:	cmp    r8,0x10
   140010bdb:	cmovae rcx,QWORD PTR [rbp-0x41]
   140010be0:	mov    r8,rbx
   140010be3:	call   0x140033260
   140010be8:	mov    QWORD PTR [rbp-0x31],rbx
   140010bec:	lea    rax,[rbp-0x41]
   140010bf0:	cmp    QWORD PTR [rbp-0x29],0x10
   140010bf5:	cmovae rax,QWORD PTR [rbp-0x41]
   140010bfa:	mov    BYTE PTR [rax+rbx*1],0x0
   140010bfe:	mov    DWORD PTR [rbp-0x19],r15d
   140010c02:	mov    DWORD PTR [rbp-0x15],esi
   140010c05:	mov    DWORD PTR [rbp-0x11],edi
   140010c08:	cmp    esi,0x4
   140010c0b:	je     0x140010c12
   140010c0d:	cmp    esi,0xc
   140010c10:	jne    0x140010c19
   140010c12:	mov    DWORD PTR [rbp-0x19],0x1
   140010c19:	lea    rdx,[rbp-0x41]
   140010c1d:	mov    rcx,r12
   140010c20:	call   0x1400118e0
   140010c25:	nop
   140010c26:	cmp    QWORD PTR [rbp-0x29],0x10
   140010c2b:	jb     0x140010c37
   140010c2d:	mov    rcx,QWORD PTR [rbp-0x41]
   140010c31:	call   0x1400330c0
   140010c36:	nop
   140010c37:	cmp    QWORD PTR [rbp+0xf],0x10
   140010c3c:	jb     0x140010c47
   140010c3e:	mov    rcx,QWORD PTR [rbp-0x9]
   140010c42:	call   0x1400330c0
   140010c47:	inc    edi
   140010c49:	cmp    edi,DWORD PTR [rsp+0x30]
   140010c4d:	jb     0x140010b43
   140010c53:	mov    rax,QWORD PTR [rsp+0x28]
   140010c58:	mov    rbx,QWORD PTR [rax+0x8]
   140010c5c:	mov    rdi,rbx
   140010c5f:	cmp    BYTE PTR [rbx+0x49],0x0
   140010c63:	jne    0x140010cb7
   140010c65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140010c70:	mov    rdx,QWORD PTR [rdi+0x10]
   140010c74:	lea    rcx,[rsp+0x20]
   140010c79:	call   0x140011a50
   140010c7e:	mov    rdi,QWORD PTR [rdi]
   140010c81:	cmp    QWORD PTR [rbx+0x38],0x10
   140010c86:	jb     0x140010c91
   140010c88:	mov    rcx,QWORD PTR [rbx+0x20]
   140010c8c:	call   0x1400330c0
   140010c91:	mov    QWORD PTR [rbx+0x38],0xf
   140010c99:	mov    QWORD PTR [rbx+0x30],r15
   140010c9d:	mov    BYTE PTR [rbx+0x20],0x0
   140010ca1:	mov    rcx,rbx
   140010ca4:	call   0x1400330c0
   140010ca9:	mov    rbx,rdi
   140010cac:	cmp    BYTE PTR [rdi+0x49],0x0
   140010cb0:	je     0x140010c70
   140010cb2:	mov    rax,QWORD PTR [rsp+0x28]
   140010cb7:	mov    QWORD PTR [rax+0x8],rax
   140010cbb:	mov    rax,QWORD PTR [rsp+0x28]
   140010cc0:	mov    QWORD PTR [rax],rax
   140010cc3:	mov    rax,QWORD PTR [rsp+0x28]
   140010cc8:	mov    QWORD PTR [rax+0x10],rax
   140010ccc:	mov    QWORD PTR [rsp+0x30],r15
   140010cd1:	mov    rdi,QWORD PTR [rsp+0x28]
   140010cd6:	mov    rbx,QWORD PTR [rdi]
   140010cd9:	cmp    rbx,rbx
   140010cdc:	jne    0x140010d53
   140010cde:	mov    rbx,QWORD PTR [rdi+0x8]
   140010ce2:	mov    rsi,rbx
   140010ce5:	cmp    BYTE PTR [rbx+0x49],0x0
   140010ce9:	jne    0x140010d37
   140010ceb:	nop    DWORD PTR [rax+rax*1+0x0]
   140010cf0:	mov    rdx,QWORD PTR [rsi+0x10]
   140010cf4:	lea    rcx,[rsp+0x20]
   140010cf9:	call   0x140011a50
   140010cfe:	mov    rsi,QWORD PTR [rsi]
   140010d01:	cmp    QWORD PTR [rbx+0x38],0x10
   140010d06:	jb     0x140010d11
   140010d08:	mov    rcx,QWORD PTR [rbx+0x20]
   140010d0c:	call   0x1400330c0
   140010d11:	mov    QWORD PTR [rbx+0x38],0xf
   140010d19:	mov    QWORD PTR [rbx+0x30],r15
   140010d1d:	mov    BYTE PTR [rbx+0x20],0x0
   140010d21:	mov    rcx,rbx
   140010d24:	call   0x1400330c0
   140010d29:	mov    rbx,rsi
   140010d2c:	cmp    BYTE PTR [rsi+0x49],0x0
   140010d30:	je     0x140010cf0
   140010d32:	mov    rdi,QWORD PTR [rsp+0x28]
   140010d37:	mov    QWORD PTR [rdi+0x8],rdi
   140010d3b:	mov    rax,QWORD PTR [rsp+0x28]
   140010d40:	mov    QWORD PTR [rax],rax
   140010d43:	mov    rax,QWORD PTR [rsp+0x28]
   140010d48:	mov    QWORD PTR [rax+0x10],rax
   140010d4c:	mov    QWORD PTR [rsp+0x30],r15
   140010d51:	jmp    0x140010dc1
   140010d53:	cmp    rbx,rdi
   140010d56:	je     0x140010dc6
   140010d58:	nop    DWORD PTR [rax+rax*1+0x0]
   140010d60:	mov    r8,rbx
   140010d63:	cmp    BYTE PTR [rbx+0x49],0x0
   140010d67:	jne    0x140010dae
   140010d69:	mov    rax,QWORD PTR [rbx+0x10]
   140010d6d:	cmp    BYTE PTR [rax+0x49],0x0
   140010d71:	jne    0x140010d8e
   140010d73:	mov    rbx,rax
   140010d76:	mov    rax,QWORD PTR [rax]
   140010d79:	cmp    BYTE PTR [rax+0x49],0x0
   140010d7d:	jne    0x140010dae
   140010d7f:	nop
   140010d80:	mov    rbx,rax
   140010d83:	mov    rax,QWORD PTR [rax]
   140010d86:	cmp    BYTE PTR [rax+0x49],0x0
   140010d8a:	je     0x140010d80
   140010d8c:	jmp    0x140010dae
   140010d8e:	mov    rax,QWORD PTR [rbx+0x8]
   140010d92:	cmp    BYTE PTR [rax+0x49],0x0
   140010d96:	jne    0x140010dab
   140010d98:	cmp    rbx,QWORD PTR [rax+0x10]
   140010d9c:	jne    0x140010dab
   140010d9e:	mov    rbx,rax
   140010da1:	mov    rax,QWORD PTR [rax+0x8]
   140010da5:	cmp    BYTE PTR [rax+0x49],0x0
   140010da9:	je     0x140010d98
   140010dab:	mov    rbx,rax
   140010dae:	lea    rdx,[rbp-0x51]
   140010db2:	lea    rcx,[rsp+0x20]
   140010db7:	call   0x140011560
   140010dbc:	cmp    rbx,rdi
   140010dbf:	jne    0x140010d60
   140010dc1:	mov    rdi,QWORD PTR [rsp+0x28]
   140010dc6:	mov    rcx,rdi
   140010dc9:	call   0x1400330c0
   140010dce:	inc    r13d
   140010dd1:	add    r14,0x4
   140010dd5:	cmp    r13d,0x4
   140010dd9:	jae    0x140010e1a
   140010ddb:	jmp    0x140010ae0
   140010de0:	lea    rcx,[rip+0x5a569]        # 0x14006b350
   140010de7:	call   0x140032d00
   140010dec:	nop
   140010ded:	mov    QWORD PTR [rbp-0x71],r15
   140010df1:	lea    rdx,[rbp-0x71]
   140010df5:	lea    rcx,[rbp-0x69]
   140010df9:	call   0x140032fd4
   140010dfe:	lea    r11,[rip+0x57a8b]        # 0x140068890
   140010e05:	mov    QWORD PTR [rbp-0x69],r11
   140010e09:	lea    rdx,[rip+0x72610]        # 0x140083420
   140010e10:	lea    rcx,[rbp-0x69]
   140010e14:	call   0x140036358
   140010e19:	int3   
   140010e1a:	mov    rcx,QWORD PTR [rbp+0x2f]
   140010e1e:	xor    rcx,rsp
   140010e21:	call   0x140032f00
   140010e26:	lea    r11,[rsp+0xf0]
   140010e2e:	mov    rbx,QWORD PTR [r11+0x38]
   140010e32:	mov    rsi,QWORD PTR [r11+0x40]
   140010e36:	mov    rdi,QWORD PTR [r11+0x48]
   140010e3a:	mov    rsp,r11
   140010e3d:	pop    r15
   140010e3f:	pop    r14
   140010e41:	pop    r13
   140010e43:	pop    r12
   140010e45:	pop    rbp
   140010e46:	ret    
   140010e47:	int3   
   140010e48:	int3   
   140010e49:	int3   
   140010e4a:	int3   
   140010e4b:	int3   
   140010e4c:	int3   
   140010e4d:	int3   
   140010e4e:	int3   
   140010e4f:	int3   
   140010e50:	mov    rax,rsp
   140010e53:	push   rbp
   140010e54:	lea    rbp,[rax-0x18]
   140010e58:	sub    rsp,0x110
   140010e5f:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140010e68:	mov    QWORD PTR [rax+0x10],rbx
   140010e6c:	mov    QWORD PTR [rax+0x18],rsi
   140010e70:	mov    QWORD PTR [rax+0x20],rdi
   140010e74:	mov    rax,QWORD PTR [rip+0x7422d]        # 0x1400850a8
   140010e7b:	xor    rax,rsp
   140010e7e:	mov    QWORD PTR [rbp+0x0],rax
   140010e82:	mov    rdi,rcx
   140010e85:	xor    esi,esi
   140010e87:	mov    QWORD PTR [rsp+0x50],rsi
   140010e8c:	lea    rax,[rsp+0x50]
   140010e91:	mov    QWORD PTR [rsp+0x20],rax
   140010e96:	lea    r9,[rip+0x5a533]        # 0x14006b3d0
   140010e9d:	xor    edx,edx
   140010e9f:	lea    r8d,[rsi+0x17]
   140010ea3:	lea    rcx,[rip+0x5a506]        # 0x14006b3b0
   140010eaa:	call   QWORD PTR [rip+0x577c8]        # 0x140068678
   140010eb0:	mov    rcx,QWORD PTR [rsp+0x50]
   140010eb5:	test   rcx,rcx
   140010eb8:	je     0x14001102e
   140010ebe:	mov    QWORD PTR [rsp+0x40],rsi
   140010ec3:	xor    r8b,r8b
   140010ec6:	mov    eax,DWORD PTR [rdi+0x20]
   140010ec9:	cmp    eax,0x4
   140010ecc:	jb     0x140010ee5
   140010ece:	cmp    eax,0x5
   140010ed1:	jbe    0x140010ee2
   140010ed3:	cmp    eax,0x7
   140010ed6:	je     0x140010ee2
   140010ed8:	cmp    eax,0xc
   140010edb:	je     0x140010ee2
   140010edd:	cmp    eax,0xe
   140010ee0:	jne    0x140010ee5
   140010ee2:	mov    r8b,0x1
   140010ee5:	mov    rax,QWORD PTR [rcx]
   140010ee8:	mov    edx,esi
   140010eea:	test   r8b,r8b
   140010eed:	setne  dl
   140010ef0:	lea    r9,[rsp+0x40]
   140010ef5:	mov    r8d,0xf
   140010efb:	call   QWORD PTR [rax+0x18]
   140010efe:	mov    rcx,QWORD PTR [rsp+0x40]
   140010f03:	test   rcx,rcx
   140010f06:	je     0x14001101e
   140010f0c:	mov    DWORD PTR [rsp+0x30],esi
   140010f10:	mov    rax,QWORD PTR [rcx]
   140010f13:	lea    rdx,[rsp+0x30]
   140010f18:	call   QWORD PTR [rax+0x18]
   140010f1b:	mov    ebx,esi
   140010f1d:	cmp    DWORD PTR [rsp+0x30],ebx
   140010f21:	jbe    0x140011019
   140010f27:	nop    WORD PTR [rax+rax*1+0x0]
   140010f30:	mov    QWORD PTR [rsp+0x48],rsi
   140010f35:	mov    QWORD PTR [rsp+0x38],rsi
   140010f3a:	mov    rcx,QWORD PTR [rsp+0x40]
   140010f3f:	mov    rax,QWORD PTR [rcx]
   140010f42:	lea    r8,[rsp+0x38]
   140010f47:	mov    edx,ebx
   140010f49:	call   QWORD PTR [rax+0x20]
   140010f4c:	mov    r11,QWORD PTR [rsp+0x38]
   140010f51:	test   r11,r11
   140010f54:	je     0x140010f6b
   140010f56:	mov    rax,QWORD PTR [r11]
   140010f59:	lea    r8,[rsp+0x48]
   140010f5e:	xor    edx,edx
   140010f60:	mov    rcx,r11
   140010f63:	call   QWORD PTR [rax+0x20]
   140010f66:	mov    r11,QWORD PTR [rsp+0x38]
   140010f6b:	mov    rcx,QWORD PTR [rsp+0x48]
   140010f70:	test   rcx,rcx
   140010f73:	je     0x140010fef
   140010f75:	call   0x14000ebb0
   140010f7a:	test   al,al
   140010f7c:	je     0x140010fe5
   140010f7e:	mov    QWORD PTR [rsp+0x58],rsi
   140010f83:	mov    rcx,QWORD PTR [rsp+0x38]
   140010f88:	mov    rax,QWORD PTR [rcx]
   140010f8b:	lea    rdx,[rsp+0x58]
   140010f90:	call   QWORD PTR [rax+0x28]
   140010f93:	mov    rdx,QWORD PTR [rsp+0x58]
   140010f98:	test   rdx,rdx
   140010f9b:	je     0x140010fe5
   140010f9d:	lea    rax,[rsp+0x78]
   140010fa2:	mov    QWORD PTR [rsp+0x70],rax
   140010fa7:	mov    r8d,0x3
   140010fad:	lea    rcx,[rsp+0x70]
   140010fb2:	call   0x140002a70
   140010fb7:	nop
   140010fb8:	mov    rdx,QWORD PTR [rsp+0x70]
   140010fbd:	mov    rcx,rdi
   140010fc0:	call   0x14000f7b0
   140010fc5:	nop
   140010fc6:	lea    rax,[rsp+0x78]
   140010fcb:	mov    rcx,QWORD PTR [rsp+0x70]
   140010fd0:	cmp    rcx,rax
   140010fd3:	je     0x140010fda
   140010fd5:	call   0x140033594
   140010fda:	mov    rcx,QWORD PTR [rsp+0x58]
   140010fdf:	call   QWORD PTR [rip+0x576b3]        # 0x140068698
   140010fe5:	mov    r11,QWORD PTR [rsp+0x38]
   140010fea:	mov    rcx,QWORD PTR [rsp+0x48]
   140010fef:	test   r11,r11
   140010ff2:	je     0x140011002
   140010ff4:	mov    rax,QWORD PTR [r11]
   140010ff7:	mov    rcx,r11
   140010ffa:	call   QWORD PTR [rax+0x10]
   140010ffd:	mov    rcx,QWORD PTR [rsp+0x48]
   140011002:	test   rcx,rcx
   140011005:	je     0x14001100d
   140011007:	mov    rax,QWORD PTR [rcx]
   14001100a:	call   QWORD PTR [rax+0x10]
   14001100d:	inc    ebx
   14001100f:	cmp    ebx,DWORD PTR [rsp+0x30]
   140011013:	jb     0x140010f30
   140011019:	mov    rcx,QWORD PTR [rsp+0x40]
   14001101e:	test   rcx,rcx
   140011021:	je     0x140011029
   140011023:	mov    rax,QWORD PTR [rcx]
   140011026:	call   QWORD PTR [rax+0x10]
   140011029:	mov    rcx,QWORD PTR [rsp+0x50]
   14001102e:	test   rcx,rcx
   140011031:	je     0x140011039
   140011033:	mov    rax,QWORD PTR [rcx]
   140011036:	call   QWORD PTR [rax+0x10]
   140011039:	mov    rcx,QWORD PTR [rbp+0x0]
   14001103d:	xor    rcx,rsp
   140011040:	call   0x140032f00
   140011045:	lea    r11,[rsp+0x110]
   14001104d:	mov    rbx,QWORD PTR [r11+0x18]
   140011051:	mov    rsi,QWORD PTR [r11+0x20]
   140011055:	mov    rdi,QWORD PTR [r11+0x28]
   140011059:	mov    rsp,r11
   14001105c:	pop    rbp
   14001105d:	ret    
   14001105e:	int3   
   14001105f:	int3   
   140011060:	mov    rax,rsp
   140011063:	push   rbp
   140011064:	push   r12
   140011066:	push   r13
   140011068:	push   r14
   14001106a:	push   r15
   14001106c:	lea    rbp,[rax-0x68]
   140011070:	sub    rsp,0x140
   140011077:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14001107f:	mov    QWORD PTR [rax+0x8],rbx
   140011083:	mov    QWORD PTR [rax+0x18],rsi
   140011087:	mov    QWORD PTR [rax+0x20],rdi
   14001108b:	mov    rax,QWORD PTR [rip+0x74016]        # 0x1400850a8
   140011092:	xor    rax,rsp
   140011095:	mov    QWORD PTR [rbp+0x30],rax
   140011099:	mov    rsi,rdx
   14001109c:	mov    r12,rcx
   14001109f:	mov    QWORD PTR [rbp-0x68],rdx
   1400110a3:	xor    r13d,r13d
   1400110a6:	mov    DWORD PTR [rsp+0x70],r13d
   1400110ab:	mov    QWORD PTR [rdx+0x18],0xf
   1400110b3:	mov    QWORD PTR [rdx+0x10],r13
   1400110b7:	mov    BYTE PTR [rdx],r13b
   1400110ba:	mov    DWORD PTR [rsp+0x70],0x1
   1400110c2:	mov    QWORD PTR [rsp+0x40],r13
   1400110c7:	mov    QWORD PTR [rsp+0x58],r13
   1400110cc:	lea    rax,[rsp+0x40]
   1400110d1:	mov    QWORD PTR [rsp+0x20],rax
   1400110d6:	lea    r9,[rip+0x5a2f3]        # 0x14006b3d0
   1400110dd:	xor    edx,edx
   1400110df:	lea    r8d,[r13+0x17]
   1400110e3:	lea    rcx,[rip+0x5a2c6]        # 0x14006b3b0
   1400110ea:	call   QWORD PTR [rip+0x57588]        # 0x140068678
   1400110f0:	mov    rax,QWORD PTR [rsp+0x40]
   1400110f5:	test   rax,rax
   1400110f8:	je     0x140011140
   1400110fa:	xor    r9b,r9b
   1400110fd:	mov    ecx,DWORD PTR [r12+0x20]
   140011102:	cmp    ecx,0x4
   140011105:	jb     0x14001111e
   140011107:	cmp    ecx,0x5
   14001110a:	jbe    0x14001111b
   14001110c:	cmp    ecx,0x7
   14001110f:	je     0x14001111b
   140011111:	cmp    ecx,0xc
   140011114:	je     0x14001111b
   140011116:	cmp    ecx,0xe
   140011119:	jne    0x14001111e
   14001111b:	mov    r9b,0x1
   14001111e:	mov    rdi,QWORD PTR [rax]
   140011121:	mov    edx,r13d
   140011124:	test   r9b,r9b
   140011127:	setne  dl
   14001112a:	lea    r9,[rsp+0x58]
   14001112f:	mov    r8d,0xf
   140011135:	mov    rcx,rax
   140011138:	call   QWORD PTR [rdi+0x18]
   14001113b:	mov    rax,QWORD PTR [rsp+0x40]
   140011140:	mov    DWORD PTR [rsp+0x60],r13d
   140011145:	mov    rcx,QWORD PTR [rsp+0x58]
   14001114a:	test   rcx,rcx
   14001114d:	je     0x140011164
   14001114f:	mov    rax,QWORD PTR [rcx]
   140011152:	lea    rdx,[rsp+0x60]
   140011157:	call   QWORD PTR [rax+0x18]
   14001115a:	mov    rax,QWORD PTR [rsp+0x40]
   14001115f:	mov    rcx,QWORD PTR [rsp+0x58]
   140011164:	mov    ebx,r13d
   140011167:	cmp    QWORD PTR [rsi+0x10],rbx
   14001116b:	jne    0x140011387
   140011171:	mov    r14d,0x13
   140011177:	lea    r15,[rip+0x5a79a]        # 0x14006b918
   14001117e:	xchg   ax,ax
   140011180:	cmp    ebx,DWORD PTR [rsp+0x60]
   140011184:	jae    0x140011382
   14001118a:	mov    QWORD PTR [rsp+0x48],r13
   14001118f:	mov    QWORD PTR [rsp+0x50],r13
   140011194:	mov    rax,QWORD PTR [rcx]
   140011197:	lea    r8,[rsp+0x50]
   14001119c:	mov    edx,ebx
   14001119e:	call   QWORD PTR [rax+0x20]
   1400111a1:	mov    rax,QWORD PTR [rsp+0x50]
   1400111a6:	test   rax,rax
   1400111a9:	je     0x1400111c0
   1400111ab:	mov    rdi,QWORD PTR [rax]
   1400111ae:	lea    r8,[rsp+0x48]
   1400111b3:	xor    edx,edx
   1400111b5:	mov    rcx,rax
   1400111b8:	call   QWORD PTR [rdi+0x20]
   1400111bb:	mov    rax,QWORD PTR [rsp+0x50]
   1400111c0:	mov    rcx,QWORD PTR [rsp+0x48]
   1400111c5:	test   rcx,rcx
   1400111c8:	je     0x140011352
   1400111ce:	xor    dil,dil
   1400111d1:	xor    eax,eax
   1400111d3:	mov    QWORD PTR [rsp+0x78],rax
   1400111d8:	mov    QWORD PTR [rbp-0x80],rax
   1400111dc:	mov    QWORD PTR [rbp-0x78],rax
   1400111e0:	mov    rax,QWORD PTR [rcx]
   1400111e3:	lea    r8,[rsp+0x78]
   1400111e8:	lea    rdx,[rip+0x5b829]        # 0x14006ca18
   1400111ef:	call   QWORD PTR [rax+0x28]
   1400111f2:	test   eax,eax
   1400111f4:	js     0x140011348
   1400111fa:	cmp    r14w,WORD PTR [rsp+0x78]
   140011200:	jne    0x140011348
   140011206:	mov    rax,QWORD PTR [rbp-0x80]
   14001120a:	cmp    eax,0x10
   14001120d:	je     0x140011219
   14001120f:	cmp    eax,0x50
   140011212:	je     0x140011219
   140011214:	cmp    eax,0x30
   140011217:	jne    0x14001121c
   140011219:	mov    dil,0x1
   14001121c:	lea    rcx,[rsp+0x78]
   140011221:	call   QWORD PTR [rip+0x57459]        # 0x140068680
   140011227:	test   dil,dil
   14001122a:	je     0x140011348
   140011230:	xor    cl,cl
   140011232:	mov    eax,DWORD PTR [r12+0x20]
   140011237:	cmp    eax,0x4
   14001123a:	jb     0x140011252
   14001123c:	cmp    eax,0x5
   14001123f:	jbe    0x140011250
   140011241:	cmp    eax,0x7
   140011244:	je     0x140011250
   140011246:	cmp    eax,0xc
   140011249:	je     0x140011250
   14001124b:	cmp    eax,0xe
   14001124e:	jne    0x140011252
   140011250:	mov    cl,0x1
   140011252:	test   cl,cl
   140011254:	sete   dl
   140011257:	mov    rcx,QWORD PTR [rsp+0x48]
   14001125c:	call   0x14000ec20
   140011261:	test   al,al
   140011263:	je     0x140011348
   140011269:	mov    QWORD PTR [rsp+0x68],r13
   14001126e:	mov    rcx,QWORD PTR [rsp+0x50]
   140011273:	mov    rax,QWORD PTR [rcx]
   140011276:	lea    rdx,[rsp+0x68]
   14001127b:	call   QWORD PTR [rax+0x28]
   14001127e:	mov    rdx,QWORD PTR [rsp+0x68]
   140011283:	test   rdx,rdx
   140011286:	je     0x140011348
   14001128c:	lea    rax,[rbp-0x58]
   140011290:	mov    QWORD PTR [rbp-0x60],rax
   140011294:	mov    r8d,0x3
   14001129a:	lea    rcx,[rbp-0x60]
   14001129e:	call   0x140002a70
   1400112a3:	nop
   1400112a4:	xor    eax,eax
   1400112a6:	or     rcx,0xffffffffffffffff
   1400112aa:	mov    rdx,QWORD PTR [rbp-0x60]
   1400112ae:	mov    rdi,rdx
   1400112b1:	repnz scas al,BYTE PTR es:[rdi]
   1400112b3:	not    rcx
   1400112b6:	lea    r8,[rcx-0x1]
   1400112ba:	mov    rcx,rsi
   1400112bd:	call   0x140002ba0
   1400112c2:	nop
   1400112c3:	lea    rax,[rbp-0x58]
   1400112c7:	mov    rcx,QWORD PTR [rbp-0x60]
   1400112cb:	cmp    rcx,rax
   1400112ce:	je     0x1400112d5
   1400112d0:	call   0x140033594
   1400112d5:	xor    dil,dil
   1400112d8:	mov    eax,DWORD PTR [r12+0x20]
   1400112dd:	cmp    eax,0x4
   1400112e0:	jb     0x1400112f9
   1400112e2:	cmp    eax,0x5
   1400112e5:	jbe    0x1400112f6
   1400112e7:	cmp    eax,0x7
   1400112ea:	je     0x1400112f6
   1400112ec:	cmp    eax,0xc
   1400112ef:	je     0x1400112f6
   1400112f1:	cmp    eax,0xe
   1400112f4:	jne    0x1400112f9
   1400112f6:	mov    dil,0x1
   1400112f9:	mov    rcx,rsi
   1400112fc:	call   0x140002a60
   140011301:	lea    rcx,[rip+0x5a608]        # 0x14006b910
   140011308:	test   dil,dil
   14001130b:	cmovne rcx,r15
   14001130f:	mov    QWORD PTR [rsp+0x30],rax
   140011314:	mov    QWORD PTR [rsp+0x28],rcx
   140011319:	lea    rax,[rip+0x5bdc8]        # 0x14006d0e8
   140011320:	mov    QWORD PTR [rsp+0x20],rax
   140011325:	xor    r9d,r9d
   140011328:	mov    edx,0x284
   14001132d:	lea    r8d,[r9+0x1]
   140011331:	lea    rcx,[rip+0x5bde8]        # 0x14006d120
   140011338:	call   0x140003150
   14001133d:	mov    rcx,QWORD PTR [rsp+0x68]
   140011342:	call   QWORD PTR [rip+0x57350]        # 0x140068698
   140011348:	mov    rax,QWORD PTR [rsp+0x50]
   14001134d:	mov    rcx,QWORD PTR [rsp+0x48]
   140011352:	test   rax,rax
   140011355:	je     0x140011365
   140011357:	mov    rdx,QWORD PTR [rax]
   14001135a:	mov    rcx,rax
   14001135d:	call   QWORD PTR [rdx+0x10]
   140011360:	mov    rcx,QWORD PTR [rsp+0x48]
   140011365:	test   rcx,rcx
   140011368:	je     0x140011370
   14001136a:	mov    rax,QWORD PTR [rcx]
   14001136d:	call   QWORD PTR [rax+0x10]
   140011370:	inc    ebx
   140011372:	mov    rcx,QWORD PTR [rsp+0x58]
   140011377:	cmp    QWORD PTR [rsi+0x10],0x0
   14001137c:	je     0x140011180
   140011382:	mov    rax,QWORD PTR [rsp+0x40]
   140011387:	test   rcx,rcx
   14001138a:	je     0x140011397
   14001138c:	mov    rdx,QWORD PTR [rcx]
   14001138f:	call   QWORD PTR [rdx+0x10]
   140011392:	mov    rax,QWORD PTR [rsp+0x40]
   140011397:	test   rax,rax
   14001139a:	je     0x1400113a5
   14001139c:	mov    rdx,QWORD PTR [rax]
   14001139f:	mov    rcx,rax
   1400113a2:	call   QWORD PTR [rdx+0x10]
   1400113a5:	mov    rax,rsi
   1400113a8:	mov    rcx,QWORD PTR [rbp+0x30]
   1400113ac:	xor    rcx,rsp
   1400113af:	call   0x140032f00
   1400113b4:	lea    r11,[rsp+0x140]
   1400113bc:	mov    rbx,QWORD PTR [r11+0x30]
   1400113c0:	mov    rsi,QWORD PTR [r11+0x40]
   1400113c4:	mov    rdi,QWORD PTR [r11+0x48]
   1400113c8:	mov    rsp,r11
   1400113cb:	pop    r15
   1400113cd:	pop    r14
   1400113cf:	pop    r13
   1400113d1:	pop    r12
   1400113d3:	pop    rbp
   1400113d4:	ret    
   1400113d5:	int3   
   1400113d6:	int3   
   1400113d7:	int3   
   1400113d8:	int3   
   1400113d9:	int3   
   1400113da:	int3   
   1400113db:	int3   
   1400113dc:	int3   
   1400113dd:	int3   
   1400113de:	int3   
   1400113df:	int3   
   1400113e0:	rex push rbx
   1400113e2:	sub    rsp,0x20
   1400113e6:	xor    eax,eax
   1400113e8:	mov    rbx,rdx
   1400113eb:	mov    QWORD PTR [rdx+0x18],0xf
   1400113f3:	mov    QWORD PTR [rdx+0x10],rax
   1400113f7:	mov    BYTE PTR [rdx],al
   1400113f9:	mov    rdx,rcx
   1400113fc:	mov    rcx,rbx
   1400113ff:	or     r9,0xffffffffffffffff
   140011403:	mov    DWORD PTR [rsp+0x38],eax
   140011407:	call   0x140002c70
   14001140c:	mov    rax,rbx
   14001140f:	add    rsp,0x20
   140011413:	pop    rbx
   140011414:	ret    
   140011415:	int3   
   140011416:	int3   
   140011417:	int3   
   140011418:	int3   
   140011419:	int3   
   14001141a:	int3   
   14001141b:	int3   
   14001141c:	int3   
   14001141d:	int3   
   14001141e:	int3   
   14001141f:	int3   
   140011420:	rex push rdi
   140011422:	sub    rsp,0x90
   140011429:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140011432:	mov    QWORD PTR [rsp+0xb0],rbx
   14001143a:	mov    rax,QWORD PTR [rip+0x73c67]        # 0x1400850a8
   140011441:	xor    rax,rsp
   140011444:	mov    QWORD PTR [rsp+0x88],rax
   14001144c:	mov    rdi,rcx
   14001144f:	mov    rbx,QWORD PTR [rcx+0x8]
   140011453:	mov    rax,QWORD PTR [rbx+0x8]
   140011457:	cmp    BYTE PTR [rax+0x49],0x0
   14001145b:	jne    0x140011477
   14001145d:	mov    ecx,DWORD PTR [rdx]
   14001145f:	nop
   140011460:	cmp    DWORD PTR [rax+0x18],ecx
   140011463:	jae    0x14001146b
   140011465:	mov    rax,QWORD PTR [rax+0x10]
   140011469:	jmp    0x140011471
   14001146b:	mov    rbx,rax
   14001146e:	mov    rax,QWORD PTR [rax]
   140011471:	cmp    BYTE PTR [rax+0x49],0x0
   140011475:	je     0x140011460
   140011477:	cmp    rbx,QWORD PTR [rdi+0x8]
   14001147b:	je     0x140011488
   14001147d:	mov    eax,DWORD PTR [rbx+0x18]
   140011480:	cmp    DWORD PTR [rdx],eax
   140011482:	jae    0x14001152c
   140011488:	mov    QWORD PTR [rsp+0x78],0xf
   140011491:	mov    QWORD PTR [rsp+0x70],0x0
   14001149a:	mov    BYTE PTR [rsp+0x60],0x0
   14001149f:	mov    eax,DWORD PTR [rdx]
   1400114a1:	mov    DWORD PTR [rsp+0x30],eax
   1400114a5:	mov    QWORD PTR [rsp+0x50],0xf
   1400114ae:	mov    QWORD PTR [rsp+0x48],0x0
   1400114b7:	mov    BYTE PTR [rsp+0x38],0x0
   1400114bc:	lea    rdx,[rsp+0x60]
   1400114c1:	lea    rcx,[rsp+0x38]
   1400114c6:	call   0x1400029d0
   1400114cb:	nop
   1400114cc:	lea    rdx,[rsp+0x30]
   1400114d1:	mov    rcx,rdi
   1400114d4:	call   0x140012500
   1400114d9:	mov    r9,rax
   1400114dc:	mov    r8,rbx
   1400114df:	lea    rdx,[rsp+0x20]
   1400114e4:	mov    rcx,rdi
   1400114e7:	call   0x140011ed0
   1400114ec:	mov    rbx,QWORD PTR [rsp+0x20]
   1400114f1:	cmp    QWORD PTR [rsp+0x50],0x10
   1400114f7:	jb     0x140011503
   1400114f9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400114fe:	call   0x1400330c0
   140011503:	mov    QWORD PTR [rsp+0x50],0xf
   14001150c:	mov    QWORD PTR [rsp+0x48],0x0
   140011515:	mov    BYTE PTR [rsp+0x38],0x0
   14001151a:	cmp    QWORD PTR [rsp+0x78],0x10
   140011520:	jb     0x14001152c
   140011522:	mov    rcx,QWORD PTR [rsp+0x60]
   140011527:	call   0x1400330c0
   14001152c:	lea    rax,[rbx+0x20]
   140011530:	mov    rcx,QWORD PTR [rsp+0x88]
   140011538:	xor    rcx,rsp
   14001153b:	call   0x140032f00
   140011540:	mov    rbx,QWORD PTR [rsp+0xb0]
   140011548:	add    rsp,0x90
   14001154f:	pop    rdi
   140011550:	ret    
   140011551:	int3   
   140011552:	int3   
   140011553:	int3   
   140011554:	int3   
   140011555:	int3   
   140011556:	int3   
   140011557:	int3   
   140011558:	int3   
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	mov    QWORD PTR [rsp+0x18],r8
   140011565:	push   rsi
   140011566:	push   r12
   140011568:	sub    rsp,0x28
   14001156c:	cmp    BYTE PTR [r8+0x49],0x0
   140011571:	mov    r12,rdx
   140011574:	mov    rsi,rcx
   140011577:	je     0x140011586
   140011579:	lea    rcx,[rip+0x59d30]        # 0x14006b2b0
   140011580:	call   0x140032d5c
   140011585:	int3   
   140011586:	mov    rdx,QWORD PTR [r8+0x10]
   14001158a:	lea    r9,[r8+0x10]
   14001158e:	mov    QWORD PTR [rsp+0x48],rbp
   140011593:	cmp    BYTE PTR [rdx+0x49],0x0
   140011597:	mov    rbp,r8
   14001159a:	jne    0x1400115be
   14001159c:	mov    rax,QWORD PTR [rdx]
   14001159f:	cmp    BYTE PTR [rax+0x49],0x0
   1400115a3:	jne    0x1400115e0
   1400115a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400115b0:	mov    rdx,rax
   1400115b3:	mov    rax,QWORD PTR [rax]
   1400115b6:	cmp    BYTE PTR [rax+0x49],0x0
   1400115ba:	je     0x1400115b0
   1400115bc:	jmp    0x1400115e0
   1400115be:	mov    rdx,QWORD PTR [r8+0x8]
   1400115c2:	cmp    BYTE PTR [rdx+0x49],0x0
   1400115c6:	jne    0x1400115e0
   1400115c8:	cmp    r8,QWORD PTR [rdx+0x10]
   1400115cc:	jne    0x1400115e0
   1400115ce:	mov    QWORD PTR [rsp+0x50],rdx
   1400115d3:	mov    r8,rdx
   1400115d6:	mov    rdx,QWORD PTR [rdx+0x8]
   1400115da:	cmp    BYTE PTR [rdx+0x49],0x0
   1400115de:	je     0x1400115c8
   1400115e0:	mov    QWORD PTR [rsp+0x50],rdx
   1400115e5:	mov    rcx,QWORD PTR [rbp+0x0]
   1400115e9:	mov    QWORD PTR [rsp+0x40],rbx
   1400115ee:	cmp    BYTE PTR [rcx+0x49],0x0
   1400115f2:	mov    QWORD PTR [rsp+0x20],rdi
   1400115f7:	je     0x1400115fe
   1400115f9:	mov    rdi,QWORD PTR [r9]
   1400115fc:	jmp    0x140011619
   1400115fe:	mov    rax,QWORD PTR [r9]
   140011601:	cmp    BYTE PTR [rax+0x49],0x0
   140011605:	je     0x14001160c
   140011607:	mov    rdi,rcx
   14001160a:	jmp    0x140011619
   14001160c:	mov    rdi,QWORD PTR [rdx+0x10]
   140011610:	cmp    rdx,rbp
   140011613:	jne    0x1400116c3
   140011619:	cmp    BYTE PTR [rdi+0x49],0x0
   14001161d:	mov    rbx,QWORD PTR [rbp+0x8]
   140011621:	jne    0x140011627
   140011623:	mov    QWORD PTR [rdi+0x8],rbx
   140011627:	mov    rax,QWORD PTR [rsi+0x8]
   14001162b:	cmp    QWORD PTR [rax+0x8],rbp
   14001162f:	jne    0x140011637
   140011631:	mov    QWORD PTR [rax+0x8],rdi
   140011635:	jmp    0x140011645
   140011637:	cmp    QWORD PTR [rbx],rbp
   14001163a:	jne    0x140011641
   14001163c:	mov    QWORD PTR [rbx],rdi
   14001163f:	jmp    0x140011645
   140011641:	mov    QWORD PTR [rbx+0x10],rdi
   140011645:	mov    rdx,QWORD PTR [rsi+0x8]
   140011649:	cmp    QWORD PTR [rdx],rbp
   14001164c:	jne    0x14001167f
   14001164e:	cmp    BYTE PTR [rdi+0x49],0x0
   140011652:	je     0x140011659
   140011654:	mov    rcx,rbx
   140011657:	jmp    0x14001167c
   140011659:	mov    rax,QWORD PTR [rdi]
   14001165c:	mov    rcx,rdi
   14001165f:	cmp    BYTE PTR [rax+0x49],0x0
   140011663:	jne    0x14001167c
   140011665:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011670:	mov    rcx,rax
   140011673:	mov    rax,QWORD PTR [rax]
   140011676:	cmp    BYTE PTR [rax+0x49],0x0
   14001167a:	je     0x140011670
   14001167c:	mov    QWORD PTR [rdx],rcx
   14001167f:	mov    rdx,QWORD PTR [rsi+0x8]
   140011683:	cmp    QWORD PTR [rdx+0x10],rbp
   140011687:	jne    0x14001172f
   14001168d:	cmp    BYTE PTR [rdi+0x49],0x0
   140011691:	je     0x14001169f
   140011693:	mov    rcx,rbx
   140011696:	mov    QWORD PTR [rdx+0x10],rbx
   14001169a:	jmp    0x14001172f
   14001169f:	mov    rax,QWORD PTR [rdi+0x10]
   1400116a3:	mov    rcx,rdi
   1400116a6:	cmp    BYTE PTR [rax+0x49],0x0
   1400116aa:	jne    0x1400116bd
   1400116ac:	nop    DWORD PTR [rax+0x0]
   1400116b0:	mov    rcx,rax
   1400116b3:	mov    rax,QWORD PTR [rax+0x10]
   1400116b7:	cmp    BYTE PTR [rax+0x49],0x0
   1400116bb:	je     0x1400116b0
   1400116bd:	mov    QWORD PTR [rdx+0x10],rcx
   1400116c1:	jmp    0x14001172f
   1400116c3:	mov    QWORD PTR [rcx+0x8],rdx
   1400116c7:	mov    rax,QWORD PTR [rbp+0x0]
   1400116cb:	mov    QWORD PTR [rdx],rax
   1400116ce:	cmp    rdx,QWORD PTR [r9]
   1400116d1:	jne    0x1400116d8
   1400116d3:	mov    rbx,rdx
   1400116d6:	jmp    0x1400116f7
   1400116d8:	cmp    BYTE PTR [rdi+0x49],0x0
   1400116dc:	mov    rbx,QWORD PTR [rdx+0x8]
   1400116e0:	jne    0x1400116e6
   1400116e2:	mov    QWORD PTR [rdi+0x8],rbx
   1400116e6:	mov    QWORD PTR [rbx],rdi
   1400116e9:	mov    rax,QWORD PTR [r9]
   1400116ec:	mov    QWORD PTR [rdx+0x10],rax
   1400116f0:	mov    rax,QWORD PTR [r9]
   1400116f3:	mov    QWORD PTR [rax+0x8],rdx
   1400116f7:	mov    rax,QWORD PTR [rsi+0x8]
   1400116fb:	cmp    QWORD PTR [rax+0x8],rbp
   1400116ff:	jne    0x140011707
   140011701:	mov    QWORD PTR [rax+0x8],rdx
   140011705:	jmp    0x140011719
   140011707:	mov    rax,QWORD PTR [rbp+0x8]
   14001170b:	cmp    QWORD PTR [rax],rbp
   14001170e:	jne    0x140011715
   140011710:	mov    QWORD PTR [rax],rdx
   140011713:	jmp    0x140011719
   140011715:	mov    QWORD PTR [rax+0x10],rdx
   140011719:	mov    rax,QWORD PTR [rbp+0x8]
   14001171d:	mov    QWORD PTR [rdx+0x8],rax
   140011721:	movzx  eax,BYTE PTR [rbp+0x48]
   140011725:	movzx  ecx,BYTE PTR [rdx+0x48]
   140011729:	mov    BYTE PTR [rdx+0x48],al
   14001172c:	mov    BYTE PTR [rbp+0x48],cl
   14001172f:	cmp    BYTE PTR [rbp+0x48],0x1
   140011733:	jne    0x14001187f
   140011739:	mov    rax,QWORD PTR [rsi+0x8]
   14001173d:	cmp    rdi,QWORD PTR [rax+0x8]
   140011741:	je     0x14001187b
   140011747:	nop    WORD PTR [rax+rax*1+0x0]
   140011750:	cmp    BYTE PTR [rdi+0x48],0x1
   140011754:	jne    0x14001187b
   14001175a:	mov    rcx,QWORD PTR [rbx]
   14001175d:	cmp    rdi,rcx
   140011760:	jne    0x1400117eb
   140011766:	mov    rcx,QWORD PTR [rbx+0x10]
   14001176a:	cmp    BYTE PTR [rcx+0x48],0x0
   14001176e:	jne    0x140011787
   140011770:	mov    BYTE PTR [rcx+0x48],0x1
   140011774:	mov    rdx,rbx
   140011777:	mov    rcx,rsi
   14001177a:	mov    BYTE PTR [rbx+0x48],0x0
   14001177e:	call   0x140005d40
   140011783:	mov    rcx,QWORD PTR [rbx+0x10]
   140011787:	cmp    BYTE PTR [rcx+0x49],0x0
   14001178b:	jne    0x140011824
   140011791:	mov    rax,QWORD PTR [rcx]
   140011794:	cmp    BYTE PTR [rax+0x48],0x1
   140011798:	jne    0x1400117a4
   14001179a:	mov    rax,QWORD PTR [rcx+0x10]
   14001179e:	cmp    BYTE PTR [rax+0x48],0x1
   1400117a2:	je     0x140011820
   1400117a4:	mov    rax,QWORD PTR [rcx+0x10]
   1400117a8:	cmp    BYTE PTR [rax+0x48],0x1
   1400117ac:	jne    0x1400117c8
   1400117ae:	mov    rax,QWORD PTR [rcx]
   1400117b1:	mov    rdx,rcx
   1400117b4:	mov    BYTE PTR [rax+0x48],0x1
   1400117b8:	mov    BYTE PTR [rcx+0x48],0x0
   1400117bc:	mov    rcx,rsi
   1400117bf:	call   0x140005da0
   1400117c4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400117c8:	movzx  eax,BYTE PTR [rbx+0x48]
   1400117cc:	mov    rdx,rbx
   1400117cf:	mov    BYTE PTR [rcx+0x48],al
   1400117d2:	mov    BYTE PTR [rbx+0x48],0x1
   1400117d6:	mov    rax,QWORD PTR [rcx+0x10]
   1400117da:	mov    rcx,rsi
   1400117dd:	mov    BYTE PTR [rax+0x48],0x1
   1400117e1:	call   0x140005d40
   1400117e6:	jmp    0x14001187b
   1400117eb:	cmp    BYTE PTR [rcx+0x48],0x0
   1400117ef:	jne    0x140011807
   1400117f1:	mov    BYTE PTR [rcx+0x48],0x1
   1400117f5:	mov    rdx,rbx
   1400117f8:	mov    rcx,rsi
   1400117fb:	mov    BYTE PTR [rbx+0x48],0x0
   1400117ff:	call   0x140005da0
   140011804:	mov    rcx,QWORD PTR [rbx]
   140011807:	cmp    BYTE PTR [rcx+0x49],0x0
   14001180b:	jne    0x140011824
   14001180d:	mov    rax,QWORD PTR [rcx+0x10]
   140011811:	cmp    BYTE PTR [rax+0x48],0x1
   140011815:	jne    0x14001183b
   140011817:	mov    rax,QWORD PTR [rcx]
   14001181a:	cmp    BYTE PTR [rax+0x48],0x1
   14001181e:	jne    0x14001183b
   140011820:	mov    BYTE PTR [rcx+0x48],0x0
   140011824:	mov    rax,QWORD PTR [rsi+0x8]
   140011828:	mov    rdi,rbx
   14001182b:	mov    rbx,QWORD PTR [rbx+0x8]
   14001182f:	cmp    rdi,QWORD PTR [rax+0x8]
   140011833:	jne    0x140011750
   140011839:	jmp    0x14001187b
   14001183b:	mov    rax,QWORD PTR [rcx]
   14001183e:	cmp    BYTE PTR [rax+0x48],0x1
   140011842:	jne    0x14001185e
   140011844:	mov    rax,QWORD PTR [rcx+0x10]
   140011848:	mov    rdx,rcx
   14001184b:	mov    BYTE PTR [rax+0x48],0x1
   14001184f:	mov    BYTE PTR [rcx+0x48],0x0
   140011853:	mov    rcx,rsi
   140011856:	call   0x140005d40
   14001185b:	mov    rcx,QWORD PTR [rbx]
   14001185e:	movzx  eax,BYTE PTR [rbx+0x48]
   140011862:	mov    rdx,rbx
   140011865:	mov    BYTE PTR [rcx+0x48],al
   140011868:	mov    BYTE PTR [rbx+0x48],0x1
   14001186c:	mov    rax,QWORD PTR [rcx]
   14001186f:	mov    rcx,rsi
   140011872:	mov    BYTE PTR [rax+0x48],0x1
   140011876:	call   0x140005da0
   14001187b:	mov    BYTE PTR [rdi+0x48],0x1
   14001187f:	cmp    QWORD PTR [rbp+0x38],0x10
   140011884:	mov    rdi,QWORD PTR [rsp+0x20]
   140011889:	mov    rbx,QWORD PTR [rsp+0x40]
   14001188e:	jb     0x140011899
   140011890:	mov    rcx,QWORD PTR [rbp+0x20]
   140011894:	call   0x1400330c0
   140011899:	mov    QWORD PTR [rbp+0x38],0xf
   1400118a1:	mov    QWORD PTR [rbp+0x30],0x0
   1400118a9:	mov    rcx,rbp
   1400118ac:	mov    BYTE PTR [rbp+0x20],0x0
   1400118b0:	call   0x1400330c0
   1400118b5:	mov    rax,QWORD PTR [rsi+0x10]
   1400118b9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400118be:	test   rax,rax
   1400118c1:	je     0x1400118ca
   1400118c3:	dec    rax
   1400118c6:	mov    QWORD PTR [rsi+0x10],rax
   1400118ca:	mov    rax,QWORD PTR [rsp+0x50]
   1400118cf:	mov    QWORD PTR [r12],rax
   1400118d3:	mov    rax,r12
   1400118d6:	add    rsp,0x28
   1400118da:	pop    r12
   1400118dc:	pop    rsi
   1400118dd:	ret    
   1400118de:	int3   
   1400118df:	int3   
   1400118e0:	rex push rdi
   1400118e2:	sub    rsp,0x30
   1400118e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400118ef:	mov    QWORD PTR [rsp+0x50],rbx
   1400118f4:	mov    QWORD PTR [rsp+0x58],rsi
   1400118f9:	mov    rsi,rdx
   1400118fc:	mov    rbx,rcx
   1400118ff:	mov    rcx,QWORD PTR [rcx+0x8]
   140011903:	cmp    rdx,rcx
   140011906:	jae    0x14001199c
   14001190c:	mov    rax,QWORD PTR [rbx]
   14001190f:	cmp    rax,rdx
   140011912:	ja     0x14001199c
   140011918:	sub    rsi,rax
   14001191b:	movabs rax,0x4924924924924925
   140011925:	imul   rsi
   140011928:	mov    rdi,rdx
   14001192b:	sar    rdi,0x4
   14001192f:	mov    rax,rdi
   140011932:	shr    rax,0x3f
   140011936:	add    rdi,rax
   140011939:	cmp    rcx,QWORD PTR [rbx+0x10]
   14001193d:	jne    0x140011947
   14001193f:	mov    rcx,rbx
   140011942:	call   0x140011bd0
   140011947:	imul   rdi,rdi,0x38
   14001194b:	add    rdi,QWORD PTR [rbx]
   14001194e:	mov    rsi,QWORD PTR [rbx+0x8]
   140011952:	mov    QWORD PTR [rsp+0x40],rsi
   140011957:	mov    QWORD PTR [rsp+0x48],rsi
   14001195c:	test   rsi,rsi
   14001195f:	je     0x14001199a
   140011961:	mov    QWORD PTR [rsi+0x18],0xf
   140011969:	mov    QWORD PTR [rsi+0x10],0x0
   140011971:	mov    BYTE PTR [rsi],0x0
   140011974:	or     r9,0xffffffffffffffff
   140011978:	xor    r8d,r8d
   14001197b:	mov    rdx,rdi
   14001197e:	mov    rcx,rsi
   140011981:	call   0x140002c70
   140011986:	mov    r11d,DWORD PTR [rdi+0x28]
   14001198a:	mov    DWORD PTR [rsi+0x28],r11d
   14001198e:	mov    eax,DWORD PTR [rdi+0x2c]
   140011991:	mov    DWORD PTR [rsi+0x2c],eax
   140011994:	mov    eax,DWORD PTR [rdi+0x30]
   140011997:	mov    DWORD PTR [rsi+0x30],eax
   14001199a:	jmp    0x1400119f6
   14001199c:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400119a0:	jne    0x1400119aa
   1400119a2:	mov    rcx,rbx
   1400119a5:	call   0x140011bd0
   1400119aa:	mov    rdi,QWORD PTR [rbx+0x8]
   1400119ae:	mov    QWORD PTR [rsp+0x40],rdi
   1400119b3:	mov    QWORD PTR [rsp+0x48],rdi
   1400119b8:	test   rdi,rdi
   1400119bb:	je     0x1400119f6
   1400119bd:	mov    QWORD PTR [rdi+0x18],0xf
   1400119c5:	mov    QWORD PTR [rdi+0x10],0x0
   1400119cd:	mov    BYTE PTR [rdi],0x0
   1400119d0:	or     r9,0xffffffffffffffff
   1400119d4:	xor    r8d,r8d
   1400119d7:	mov    rdx,rsi
   1400119da:	mov    rcx,rdi
   1400119dd:	call   0x140002c70
   1400119e2:	mov    r11d,DWORD PTR [rsi+0x28]
   1400119e6:	mov    DWORD PTR [rdi+0x28],r11d
   1400119ea:	mov    eax,DWORD PTR [rsi+0x2c]
   1400119ed:	mov    DWORD PTR [rdi+0x2c],eax
   1400119f0:	mov    eax,DWORD PTR [rsi+0x30]
   1400119f3:	mov    DWORD PTR [rdi+0x30],eax
   1400119f6:	add    QWORD PTR [rbx+0x8],0x38
   1400119fb:	mov    rbx,QWORD PTR [rsp+0x50]
   140011a00:	mov    rsi,QWORD PTR [rsp+0x58]
   140011a05:	add    rsp,0x30
   140011a09:	pop    rdi
   140011a0a:	ret    
   140011a0b:	int3   
   140011a0c:	int3   
   140011a0d:	int3   
   140011a0e:	int3   
   140011a0f:	int3   
   140011a10:	rex push rbx
   140011a12:	sub    rsp,0x20
   140011a16:	cmp    QWORD PTR [rcx+0x20],0x10
   140011a1b:	mov    rbx,rcx
   140011a1e:	jb     0x140011a29
   140011a20:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a24:	call   0x1400330c0
   140011a29:	mov    QWORD PTR [rbx+0x20],0xf
   140011a31:	mov    QWORD PTR [rbx+0x18],0x0
   140011a39:	mov    BYTE PTR [rbx+0x8],0x0
   140011a3d:	add    rsp,0x20
   140011a41:	pop    rbx
   140011a42:	ret    
   140011a43:	int3   
   140011a44:	int3   
   140011a45:	int3   
   140011a46:	int3   
   140011a47:	int3   
   140011a48:	int3   
   140011a49:	int3   
   140011a4a:	int3   
   140011a4b:	int3   
   140011a4c:	int3   
   140011a4d:	int3   
   140011a4e:	int3   
   140011a4f:	int3   
   140011a50:	mov    QWORD PTR [rsp+0x10],rbx
   140011a55:	mov    QWORD PTR [rsp+0x18],rsi
   140011a5a:	push   rdi
   140011a5b:	sub    rsp,0x20
   140011a5f:	cmp    BYTE PTR [rdx+0x49],0x0
   140011a63:	mov    rbx,rdx
   140011a66:	mov    rsi,rcx
   140011a69:	mov    rdi,rdx
   140011a6c:	jne    0x140011ac5
   140011a6e:	mov    QWORD PTR [rsp+0x30],rbp
   140011a73:	xor    ebp,ebp
   140011a75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011a80:	mov    rdx,QWORD PTR [rdi+0x10]
   140011a84:	mov    rcx,rsi
   140011a87:	call   0x140011a50
   140011a8c:	cmp    QWORD PTR [rbx+0x38],0x10
   140011a91:	mov    rdi,QWORD PTR [rdi]
   140011a94:	jb     0x140011a9f
   140011a96:	mov    rcx,QWORD PTR [rbx+0x20]
   140011a9a:	call   0x1400330c0
   140011a9f:	mov    QWORD PTR [rbx+0x38],0xf
   140011aa7:	mov    QWORD PTR [rbx+0x30],rbp
   140011aab:	mov    rcx,rbx
   140011aae:	mov    BYTE PTR [rbx+0x20],bpl
   140011ab2:	call   0x1400330c0
   140011ab7:	mov    rbx,rdi
   140011aba:	cmp    BYTE PTR [rdi+0x49],bpl
   140011abe:	je     0x140011a80
   140011ac0:	mov    rbp,QWORD PTR [rsp+0x30]
   140011ac5:	mov    rbx,QWORD PTR [rsp+0x38]
   140011aca:	mov    rsi,QWORD PTR [rsp+0x40]
   140011acf:	add    rsp,0x20
   140011ad3:	pop    rdi
   140011ad4:	ret    
   140011ad5:	int3   
   140011ad6:	int3   
   140011ad7:	int3   
   140011ad8:	int3   
   140011ad9:	int3   
   140011ada:	int3   
   140011adb:	int3   
   140011adc:	int3   
   140011add:	int3   
   140011ade:	int3   
   140011adf:	int3   
   140011ae0:	rex push rbx
   140011ae2:	push   r12
   140011ae4:	push   r13
   140011ae6:	sub    rsp,0x20
   140011aea:	mov    rbx,r8
   140011aed:	mov    r12,rdx
   140011af0:	mov    r13,rcx
   140011af3:	cmp    r8,r9
   140011af6:	je     0x140011bc0
   140011afc:	mov    QWORD PTR [rsp+0x40],rbp
   140011b01:	mov    rbp,QWORD PTR [rcx+0x8]
   140011b05:	mov    QWORD PTR [rsp+0x48],rsi
   140011b0a:	mov    QWORD PTR [rsp+0x50],rdi
   140011b0f:	mov    rsi,rbx
   140011b12:	cmp    r9,rbp
   140011b15:	je     0x140011b58
   140011b17:	lea    rdi,[r9+0x2c]
   140011b1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011b20:	lea    rdx,[rdi-0x2c]
   140011b24:	or     r9,0xffffffffffffffff
   140011b28:	xor    r8d,r8d
   140011b2b:	mov    rcx,rsi
   140011b2e:	call   0x140002c70
   140011b33:	mov    r11d,DWORD PTR [rdi-0x4]
   140011b37:	add    rdi,0x38
   140011b3b:	mov    DWORD PTR [rsi+0x28],r11d
   140011b3f:	mov    eax,DWORD PTR [rdi-0x38]
   140011b42:	add    rsi,0x38
   140011b46:	mov    DWORD PTR [rsi-0xc],eax
   140011b49:	mov    eax,DWORD PTR [rdi-0x34]
   140011b4c:	mov    DWORD PTR [rsi-0x8],eax
   140011b4f:	lea    rax,[rdi-0x2c]
   140011b53:	cmp    rax,rbp
   140011b56:	jne    0x140011b20
   140011b58:	mov    rbp,QWORD PTR [r13+0x8]
   140011b5c:	mov    rdi,rsi
   140011b5f:	cmp    rsi,rbp
   140011b62:	je     0x140011b9c
   140011b64:	mov    QWORD PTR [rsp+0x58],r14
   140011b69:	xor    r14d,r14d
   140011b6c:	nop    DWORD PTR [rax+0x0]
   140011b70:	cmp    QWORD PTR [rdi+0x18],0x10
   140011b75:	jb     0x140011b7f
   140011b77:	mov    rcx,QWORD PTR [rdi]
   140011b7a:	call   0x1400330c0
   140011b7f:	mov    QWORD PTR [rdi+0x18],0xf
   140011b87:	mov    QWORD PTR [rdi+0x10],r14
   140011b8b:	mov    BYTE PTR [rdi],r14b
   140011b8e:	add    rdi,0x38
   140011b92:	cmp    rdi,rbp
   140011b95:	jne    0x140011b70
   140011b97:	mov    r14,QWORD PTR [rsp+0x58]
   140011b9c:	mov    rdi,QWORD PTR [rsp+0x50]
   140011ba1:	mov    rbp,QWORD PTR [rsp+0x40]
   140011ba6:	mov    QWORD PTR [r13+0x8],rsi
   140011baa:	mov    rsi,QWORD PTR [rsp+0x48]
   140011baf:	mov    QWORD PTR [r12],rbx
   140011bb3:	mov    rax,r12
   140011bb6:	add    rsp,0x20
   140011bba:	pop    r13
   140011bbc:	pop    r12
   140011bbe:	pop    rbx
   140011bbf:	ret    
   140011bc0:	mov    QWORD PTR [rdx],rbx
   140011bc3:	mov    rax,r12
   140011bc6:	add    rsp,0x20
   140011bca:	pop    r13
   140011bcc:	pop    r12
   140011bce:	pop    rbx
   140011bcf:	ret    
   140011bd0:	sub    rsp,0x28
   140011bd4:	mov    r10,QWORD PTR [rcx]
   140011bd7:	mov    rdx,QWORD PTR [rcx+0x8]
   140011bdb:	movabs r11,0x4924924924924925
   140011be5:	sub    rdx,r10
   140011be8:	mov    rax,r11
   140011beb:	mov    r9,rcx
   140011bee:	imul   rdx
   140011bf1:	mov    r8,rdx
   140011bf4:	sar    r8,0x4
   140011bf8:	mov    rax,r8
   140011bfb:	shr    rax,0x3f
   140011bff:	add    r8,rax
   140011c02:	movabs rax,0x492492492492491
   140011c0c:	cmp    r8,rax
   140011c0f:	jbe    0x140011c1e
   140011c11:	lea    rcx,[rip+0x59a10]        # 0x14006b628
   140011c18:	call   0x140032d00
   140011c1d:	int3   
   140011c1e:	mov    rcx,QWORD PTR [rcx+0x10]
   140011c22:	mov    rax,r11
   140011c25:	inc    r8
   140011c28:	sub    rcx,r10
   140011c2b:	imul   rcx
   140011c2e:	sar    rdx,0x4
   140011c32:	mov    rax,rdx
   140011c35:	shr    rax,0x3f
   140011c39:	add    rdx,rax
   140011c3c:	cmp    r8,rdx
   140011c3f:	jbe    0x140011c80
   140011c41:	mov    rcx,rdx
   140011c44:	movabs rax,0x492492492492492
   140011c4e:	shr    rcx,1
   140011c51:	sub    rax,rcx
   140011c54:	cmp    rax,rdx
   140011c57:	jae    0x140011c6e
   140011c59:	xor    edx,edx
   140011c5b:	mov    rcx,r9
   140011c5e:	cmp    rdx,r8
   140011c61:	cmovb  rdx,r8
   140011c65:	add    rsp,0x28
   140011c69:	jmp    0x140011d90
   140011c6e:	add    rdx,rcx
   140011c71:	mov    rcx,r9
   140011c74:	cmp    rdx,r8
   140011c77:	cmovb  rdx,r8
   140011c7b:	call   0x140011d90
   140011c80:	add    rsp,0x28
   140011c84:	ret    
   140011c85:	int3   
   140011c86:	int3   
   140011c87:	int3   
   140011c88:	int3   
   140011c89:	int3   
   140011c8a:	int3   
   140011c8b:	int3   
   140011c8c:	int3   
   140011c8d:	int3   
   140011c8e:	int3   
   140011c8f:	int3   
   140011c90:	mov    QWORD PTR [rsp+0x10],rbx
   140011c95:	mov    QWORD PTR [rsp+0x20],r9
   140011c9a:	mov    QWORD PTR [rsp+0x18],r8
   140011c9f:	push   rdi
   140011ca0:	sub    rsp,0x20
   140011ca4:	mov    rdi,rdx
   140011ca7:	mov    rdx,QWORD PTR [rcx+0x8]
   140011cab:	mov    rbx,rcx
   140011cae:	cmp    r8,QWORD PTR [rdx]
   140011cb1:	jne    0x140011cf8
   140011cb3:	cmp    r9,rdx
   140011cb6:	jne    0x140011cf8
   140011cb8:	mov    rdx,QWORD PTR [rdx+0x8]
   140011cbc:	call   0x140011a50
   140011cc1:	mov    r11,QWORD PTR [rbx+0x8]
   140011cc5:	mov    QWORD PTR [r11+0x8],r11
   140011cc9:	mov    rax,QWORD PTR [rbx+0x8]
   140011ccd:	mov    QWORD PTR [rax],rax
   140011cd0:	mov    rax,QWORD PTR [rbx+0x8]
   140011cd4:	mov    QWORD PTR [rax+0x10],rax
   140011cd8:	mov    rax,QWORD PTR [rbx+0x8]
   140011cdc:	mov    QWORD PTR [rbx+0x10],0x0
   140011ce4:	mov    rcx,QWORD PTR [rax]
   140011ce7:	mov    rax,rdi
   140011cea:	mov    QWORD PTR [rdi],rcx
   140011ced:	mov    rbx,QWORD PTR [rsp+0x38]
   140011cf2:	add    rsp,0x20
   140011cf6:	pop    rdi
   140011cf7:	ret    
   140011cf8:	cmp    r8,r9
   140011cfb:	je     0x140011d79
   140011cfd:	nop    DWORD PTR [rax]
   140011d00:	cmp    BYTE PTR [r8+0x49],0x0
   140011d05:	mov    rax,r8
   140011d08:	jne    0x140011d5d
   140011d0a:	mov    rdx,QWORD PTR [r8+0x10]
   140011d0e:	cmp    BYTE PTR [rdx+0x49],0x0
   140011d12:	jne    0x140011d33
   140011d14:	mov    rcx,QWORD PTR [rdx]
   140011d17:	cmp    BYTE PTR [rcx+0x49],0x0
   140011d1b:	jne    0x140011d2c
   140011d1d:	nop    DWORD PTR [rax]
   140011d20:	mov    rdx,rcx
   140011d23:	mov    rcx,QWORD PTR [rcx]
   140011d26:	cmp    BYTE PTR [rcx+0x49],0x0
   140011d2a:	je     0x140011d20
   140011d2c:	mov    QWORD PTR [rsp+0x40],rdx
   140011d31:	jmp    0x140011d5d
   140011d33:	mov    rcx,QWORD PTR [r8+0x8]
   140011d37:	cmp    BYTE PTR [rcx+0x49],0x0
   140011d3b:	jne    0x140011d58
   140011d3d:	nop    DWORD PTR [rax]
   140011d40:	cmp    r8,QWORD PTR [rcx+0x10]
   140011d44:	jne    0x140011d58
   140011d46:	mov    QWORD PTR [rsp+0x40],rcx
   140011d4b:	mov    r8,rcx
   140011d4e:	mov    rcx,QWORD PTR [rcx+0x8]
   140011d52:	cmp    BYTE PTR [rcx+0x49],0x0
   140011d56:	je     0x140011d40
   140011d58:	mov    QWORD PTR [rsp+0x40],rcx
   140011d5d:	lea    rdx,[rsp+0x30]
   140011d62:	mov    r8,rax
   140011d65:	mov    rcx,rbx
   140011d68:	call   0x140011560
   140011d6d:	mov    r8,QWORD PTR [rsp+0x40]
   140011d72:	cmp    r8,QWORD PTR [rsp+0x48]
   140011d77:	jne    0x140011d00
   140011d79:	mov    rbx,QWORD PTR [rsp+0x38]
   140011d7e:	mov    QWORD PTR [rdi],r8
   140011d81:	mov    rax,rdi
   140011d84:	add    rsp,0x20
   140011d88:	pop    rdi
   140011d89:	ret    
   140011d8a:	int3   
   140011d8b:	int3   
   140011d8c:	int3   
   140011d8d:	int3   
   140011d8e:	int3   
   140011d8f:	int3   
   140011d90:	push   r12
   140011d92:	sub    rsp,0x40
   140011d96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011d9f:	mov    QWORD PTR [rsp+0x50],rbx
   140011da4:	mov    QWORD PTR [rsp+0x60],rsi
   140011da9:	mov    QWORD PTR [rsp+0x68],rdi
   140011dae:	mov    rbx,rdx
   140011db1:	mov    rsi,rcx
   140011db4:	movabs rax,0x492492492492492
   140011dbe:	cmp    rdx,rax
   140011dc1:	jbe    0x140011dd0
   140011dc3:	lea    rcx,[rip+0x5985e]        # 0x14006b628
   140011dca:	call   0x140032d00
   140011dcf:	int3   
   140011dd0:	mov    rcx,QWORD PTR [rcx+0x10]
   140011dd4:	sub    rcx,QWORD PTR [rsi]
   140011dd7:	movabs r12,0x4924924924924925
   140011de1:	mov    rax,r12
   140011de4:	imul   rcx
   140011de7:	sar    rdx,0x4
   140011deb:	mov    rax,rdx
   140011dee:	shr    rax,0x3f
   140011df2:	add    rdx,rax
   140011df5:	cmp    rdx,rbx
   140011df8:	jae    0x140011eb7
   140011dfe:	xor    edi,edi
   140011e00:	mov    QWORD PTR [rsp+0x58],rdi
   140011e05:	test   rbx,rbx
   140011e08:	je     0x140011e55
   140011e0a:	mov    rcx,rbx
   140011e0d:	imul   rcx,rcx,0x38
   140011e11:	call   0x1400331a0
   140011e16:	mov    rdi,rax
   140011e19:	mov    QWORD PTR [rsp+0x58],rax
   140011e1e:	test   rax,rax
   140011e21:	jne    0x140011e55
   140011e23:	mov    QWORD PTR [rsp+0x58],rax
   140011e28:	lea    rdx,[rsp+0x58]
   140011e2d:	lea    rcx,[rsp+0x28]
   140011e32:	call   0x140032fd4
   140011e37:	lea    r11,[rip+0x56a52]        # 0x140068890
   140011e3e:	mov    QWORD PTR [rsp+0x28],r11
   140011e43:	lea    rdx,[rip+0x715d6]        # 0x140083420
   140011e4a:	lea    rcx,[rsp+0x28]
   140011e4f:	call   0x140036358
   140011e54:	nop
   140011e55:	mov    r8,rdi
   140011e58:	mov    rdx,QWORD PTR [rsi+0x8]
   140011e5c:	mov    rcx,QWORD PTR [rsi]
   140011e5f:	call   0x140012570
   140011e64:	nop
   140011e65:	mov    r9,QWORD PTR [rsi+0x8]
   140011e69:	mov    rcx,QWORD PTR [rsi]
   140011e6c:	mov    r8,r9
   140011e6f:	sub    r8,rcx
   140011e72:	mov    rax,r12
   140011e75:	imul   r8
   140011e78:	mov    r12,rdx
   140011e7b:	sar    r12,0x4
   140011e7f:	mov    rax,r12
   140011e82:	shr    rax,0x3f
   140011e86:	add    r12,rax
   140011e89:	test   rcx,rcx
   140011e8c:	je     0x140011e9e
   140011e8e:	mov    rdx,r9
   140011e91:	call   0x140005ce0
   140011e96:	mov    rcx,QWORD PTR [rsi]
   140011e99:	call   0x1400330c0
   140011e9e:	imul   rbx,rbx,0x38
   140011ea2:	add    rbx,rdi
   140011ea5:	mov    QWORD PTR [rsi+0x10],rbx
   140011ea9:	imul   r12,r12,0x38
   140011ead:	add    r12,rdi
   140011eb0:	mov    QWORD PTR [rsi+0x8],r12
   140011eb4:	mov    QWORD PTR [rsi],rdi
   140011eb7:	mov    rbx,QWORD PTR [rsp+0x50]
   140011ebc:	mov    rsi,QWORD PTR [rsp+0x60]
   140011ec1:	mov    rdi,QWORD PTR [rsp+0x68]
   140011ec6:	add    rsp,0x40
   140011eca:	pop    r12
   140011ecc:	ret    
   140011ecd:	int3   
   140011ece:	int3   
   140011ecf:	int3   
   140011ed0:	rex push rbx
   140011ed2:	sub    rsp,0x40
   140011ed6:	cmp    QWORD PTR [rcx+0x10],0x0
   140011edb:	mov    r10,r9
   140011ede:	mov    rbx,rdx
   140011ee1:	mov    r11,rcx
   140011ee4:	jne    0x140011f00
   140011ee6:	mov    QWORD PTR [rsp+0x20],r9
   140011eeb:	mov    r9,QWORD PTR [rcx+0x8]
   140011eef:	mov    r8b,0x1
   140011ef2:	call   0x140012240
   140011ef7:	mov    rax,rbx
   140011efa:	add    rsp,0x40
   140011efe:	pop    rbx
   140011eff:	ret    
   140011f00:	mov    rcx,QWORD PTR [rcx+0x8]
   140011f04:	mov    QWORD PTR [rsp+0x50],rsi
   140011f09:	cmp    r8,QWORD PTR [rcx]
   140011f0c:	jne    0x140011f3d
   140011f0e:	mov    eax,DWORD PTR [r8+0x18]
   140011f12:	cmp    DWORD PTR [r9+0x18],eax
   140011f16:	jae    0x1400120bb
   140011f1c:	mov    QWORD PTR [rsp+0x20],r9
   140011f21:	mov    r9,r8
   140011f24:	mov    rcx,r11
   140011f27:	mov    r8b,0x1
   140011f2a:	call   0x140012240
   140011f2f:	mov    rsi,QWORD PTR [rsp+0x50]
   140011f34:	mov    rax,rbx
   140011f37:	add    rsp,0x40
   140011f3b:	pop    rbx
   140011f3c:	ret    
   140011f3d:	cmp    r8,rcx
   140011f40:	jne    0x140011f72
   140011f42:	mov    r9,QWORD PTR [rcx+0x10]
   140011f46:	mov    eax,DWORD PTR [r10+0x18]
   140011f4a:	cmp    DWORD PTR [r9+0x18],eax
   140011f4e:	jae    0x1400120bb
   140011f54:	xor    r8d,r8d
   140011f57:	mov    rcx,r11
   140011f5a:	mov    QWORD PTR [rsp+0x20],r10
   140011f5f:	call   0x140012240
   140011f64:	mov    rsi,QWORD PTR [rsp+0x50]
   140011f69:	mov    rax,rbx
   140011f6c:	add    rsp,0x40
   140011f70:	pop    rbx
   140011f71:	ret    
   140011f72:	mov    esi,DWORD PTR [r9+0x18]
   140011f76:	cmp    DWORD PTR [r8+0x18],esi
   140011f7a:	jbe    0x140012029
   140011f80:	cmp    BYTE PTR [r8+0x49],0x0
   140011f85:	mov    rax,r8
   140011f88:	je     0x140011f90
   140011f8a:	mov    r9,QWORD PTR [r8+0x10]
   140011f8e:	jmp    0x140011fed
   140011f90:	mov    r9,QWORD PTR [r8]
   140011f93:	cmp    BYTE PTR [r9+0x49],0x0
   140011f98:	jne    0x140011fbf
   140011f9a:	mov    rax,QWORD PTR [r9+0x10]
   140011f9e:	cmp    BYTE PTR [rax+0x49],0x0
   140011fa2:	jne    0x140011fed
   140011fa4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011fb0:	mov    r9,rax
   140011fb3:	mov    rax,QWORD PTR [rax+0x10]
   140011fb7:	cmp    BYTE PTR [rax+0x49],0x0
   140011fbb:	je     0x140011fb0
   140011fbd:	jmp    0x140011fed
   140011fbf:	mov    rdx,QWORD PTR [r8+0x8]
   140011fc3:	cmp    BYTE PTR [rdx+0x49],0x0
   140011fc7:	jne    0x140011fe2
   140011fc9:	nop    DWORD PTR [rax+0x0]
   140011fd0:	cmp    rax,QWORD PTR [rdx]
   140011fd3:	jne    0x140011fe2
   140011fd5:	mov    rax,rdx
   140011fd8:	mov    rdx,QWORD PTR [rdx+0x8]
   140011fdc:	cmp    BYTE PTR [rdx+0x49],0x0
   140011fe0:	je     0x140011fd0
   140011fe2:	cmp    BYTE PTR [rax+0x49],0x0
   140011fe6:	mov    r9,rax
   140011fe9:	cmove  r9,rdx
   140011fed:	cmp    DWORD PTR [r9+0x18],esi
   140011ff1:	jae    0x140012025
   140011ff3:	mov    rax,QWORD PTR [r9+0x10]
   140011ff7:	mov    QWORD PTR [rsp+0x20],r10
   140011ffc:	mov    rdx,rbx
   140011fff:	cmp    BYTE PTR [rax+0x49],0x0
   140012003:	mov    rcx,r11
   140012006:	jne    0x1400120a5
   14001200c:	mov    r9,r8
   14001200f:	mov    r8b,0x1
   140012012:	call   0x140012240
   140012017:	mov    rsi,QWORD PTR [rsp+0x50]
   14001201c:	mov    rax,rbx
   14001201f:	add    rsp,0x40
   140012023:	pop    rbx
   140012024:	ret    
   140012025:	cmp    DWORD PTR [r8+0x18],esi
   140012029:	jae    0x1400120bb
   14001202f:	cmp    BYTE PTR [r8+0x49],0x0
   140012034:	mov    r9,r8
   140012037:	jne    0x14001207e
   140012039:	mov    rax,QWORD PTR [r8+0x10]
   14001203d:	cmp    BYTE PTR [rax+0x49],0x0
   140012041:	jne    0x14001205e
   140012043:	mov    r9,rax
   140012046:	mov    rax,QWORD PTR [rax]
   140012049:	cmp    BYTE PTR [rax+0x49],0x0
   14001204d:	jne    0x14001207e
   14001204f:	nop
   140012050:	mov    r9,rax
   140012053:	mov    rax,QWORD PTR [rax]
   140012056:	cmp    BYTE PTR [rax+0x49],0x0
   14001205a:	je     0x140012050
   14001205c:	jmp    0x14001207e
   14001205e:	mov    rax,QWORD PTR [r8+0x8]
   140012062:	cmp    BYTE PTR [rax+0x49],0x0
   140012066:	jne    0x14001207b
   140012068:	cmp    r9,QWORD PTR [rax+0x10]
   14001206c:	jne    0x14001207b
   14001206e:	mov    r9,rax
   140012071:	mov    rax,QWORD PTR [rax+0x8]
   140012075:	cmp    BYTE PTR [rax+0x49],0x0
   140012079:	je     0x140012068
   14001207b:	mov    r9,rax
   14001207e:	cmp    r9,rcx
   140012081:	je     0x140012089
   140012083:	cmp    esi,DWORD PTR [r9+0x18]
   140012087:	jae    0x1400120bb
   140012089:	mov    rax,QWORD PTR [r8+0x10]
   14001208d:	mov    QWORD PTR [rsp+0x20],r10
   140012092:	mov    rdx,rbx
   140012095:	cmp    BYTE PTR [rax+0x49],0x0
   140012099:	mov    rcx,r11
   14001209c:	je     0x14001200f
   1400120a2:	mov    r9,r8
   1400120a5:	xor    r8d,r8d
   1400120a8:	call   0x140012240
   1400120ad:	mov    rsi,QWORD PTR [rsp+0x50]
   1400120b2:	mov    rax,rbx
   1400120b5:	add    rsp,0x40
   1400120b9:	pop    rbx
   1400120ba:	ret    
   1400120bb:	lea    rdx,[rsp+0x30]
   1400120c0:	mov    r8,r10
   1400120c3:	mov    rcx,r11
   1400120c6:	call   0x1400120e0
   1400120cb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400120d0:	mov    rcx,QWORD PTR [rax]
   1400120d3:	mov    rax,rbx
   1400120d6:	mov    QWORD PTR [rbx],rcx
   1400120d9:	add    rsp,0x40
   1400120dd:	pop    rbx
   1400120de:	ret    
   1400120df:	int3   
   1400120e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400120e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400120ea:	push   rdi
   1400120eb:	sub    rsp,0x30
   1400120ef:	mov    r9,QWORD PTR [rcx+0x8]
   1400120f3:	mov    rdi,r8
   1400120f6:	mov    rsi,rdx
   1400120f9:	mov    rax,QWORD PTR [r9+0x8]
   1400120fd:	mov    r10b,0x1
   140012100:	cmp    BYTE PTR [rax+0x49],0x0
   140012104:	jne    0x14001212f
   140012106:	mov    r8d,DWORD PTR [r8+0x18]
   14001210a:	nop    WORD PTR [rax+rax*1+0x0]
   140012110:	cmp    r8d,DWORD PTR [rax+0x18]
   140012114:	mov    r9,rax
   140012117:	setb   r10b
   14001211b:	test   r10b,r10b
   14001211e:	je     0x140012125
   140012120:	mov    rax,QWORD PTR [rax]
   140012123:	jmp    0x140012129
   140012125:	mov    rax,QWORD PTR [rax+0x10]
   140012129:	cmp    BYTE PTR [rax+0x49],0x0
   14001212d:	je     0x140012110
   14001212f:	mov    rbx,r9
   140012132:	test   r10b,r10b
   140012135:	je     0x1400121da
   14001213b:	mov    rax,QWORD PTR [rcx+0x8]
   14001213f:	cmp    r9,QWORD PTR [rax]
   140012142:	jne    0x140012173
   140012144:	mov    r8b,0x1
   140012147:	lea    rdx,[rsp+0x40]
   14001214c:	mov    QWORD PTR [rsp+0x20],rdi
   140012151:	call   0x140012240
   140012156:	mov    BYTE PTR [rsi+0x8],0x1
   14001215a:	mov    rcx,QWORD PTR [rax]
   14001215d:	mov    rax,rsi
   140012160:	mov    QWORD PTR [rsi],rcx
   140012163:	mov    rbx,QWORD PTR [rsp+0x48]
   140012168:	mov    rsi,QWORD PTR [rsp+0x50]
   14001216d:	add    rsp,0x30
   140012171:	pop    rdi
   140012172:	ret    
   140012173:	cmp    BYTE PTR [r9+0x49],0x0
   140012178:	je     0x140012180
   14001217a:	mov    rbx,QWORD PTR [r9+0x10]
   14001217e:	jmp    0x1400121da
   140012180:	mov    rax,QWORD PTR [r9]
   140012183:	cmp    BYTE PTR [rax+0x49],0x0
   140012187:	jne    0x1400121af
   140012189:	mov    rbx,rax
   14001218c:	mov    rax,QWORD PTR [rax+0x10]
   140012190:	cmp    BYTE PTR [rax+0x49],0x0
   140012194:	jne    0x1400121da
   140012196:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400121a0:	mov    rbx,rax
   1400121a3:	mov    rax,QWORD PTR [rax+0x10]
   1400121a7:	cmp    BYTE PTR [rax+0x49],0x0
   1400121ab:	je     0x1400121a0
   1400121ad:	jmp    0x1400121da
   1400121af:	mov    rax,QWORD PTR [r9+0x8]
   1400121b3:	cmp    BYTE PTR [rax+0x49],0x0
   1400121b7:	jne    0x1400121d2
   1400121b9:	nop    DWORD PTR [rax+0x0]
   1400121c0:	cmp    rbx,QWORD PTR [rax]
   1400121c3:	jne    0x1400121d2
   1400121c5:	mov    rbx,rax
   1400121c8:	mov    rax,QWORD PTR [rax+0x8]
   1400121cc:	cmp    BYTE PTR [rax+0x49],0x0
   1400121d0:	je     0x1400121c0
   1400121d2:	cmp    BYTE PTR [rbx+0x49],0x0
   1400121d6:	cmove  rbx,rax
   1400121da:	mov    eax,DWORD PTR [rdi+0x18]
   1400121dd:	cmp    DWORD PTR [rbx+0x18],eax
   1400121e0:	jae    0x1400121eb
   1400121e2:	movzx  r8d,r10b
   1400121e6:	jmp    0x140012147
   1400121eb:	cmp    QWORD PTR [rdi+0x38],0x10
   1400121f0:	jb     0x1400121fb
   1400121f2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400121f6:	call   0x1400330c0
   1400121fb:	mov    QWORD PTR [rdi+0x38],0xf
   140012203:	mov    QWORD PTR [rdi+0x30],0x0
   14001220b:	mov    rcx,rdi
   14001220e:	mov    BYTE PTR [rdi+0x20],0x0
   140012212:	call   0x1400330c0
   140012217:	mov    QWORD PTR [rsi],rbx
   14001221a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001221f:	mov    BYTE PTR [rsi+0x8],0x0
   140012223:	mov    rax,rsi
   140012226:	mov    rsi,QWORD PTR [rsp+0x50]
   14001222b:	add    rsp,0x30
   14001222f:	pop    rdi
   140012230:	ret    
   140012231:	int3   
   140012232:	int3   
   140012233:	int3   
   140012234:	int3   
   140012235:	int3   
   140012236:	int3   
   140012237:	int3   
   140012238:	int3   
   140012239:	int3   
   14001223a:	int3   
   14001223b:	int3   
   14001223c:	int3   
   14001223d:	int3   
   14001223e:	int3   
   14001223f:	int3   
   140012240:	rex push rbx
   140012242:	sub    rsp,0x20
   140012246:	mov    rax,QWORD PTR [rcx+0x10]
   14001224a:	mov    r10,rcx
   14001224d:	movabs rcx,0x555555555555554
   140012257:	mov    rbx,rdx
   14001225a:	cmp    rax,rcx
   14001225d:	jb     0x14001229d
   14001225f:	mov    rbx,QWORD PTR [rsp+0x50]
   140012264:	cmp    QWORD PTR [rbx+0x38],0x10
   140012269:	jb     0x140012274
   14001226b:	mov    rcx,QWORD PTR [rbx+0x20]
   14001226f:	call   0x1400330c0
   140012274:	mov    QWORD PTR [rbx+0x38],0xf
   14001227c:	mov    QWORD PTR [rbx+0x30],0x0
   140012284:	mov    rcx,rbx
   140012287:	mov    BYTE PTR [rbx+0x20],0x0
   14001228b:	call   0x1400330c0
   140012290:	lea    rcx,[rip+0x59039]        # 0x14006b2d0
   140012297:	call   0x140032d00
   14001229c:	int3   
   14001229d:	mov    r11,QWORD PTR [rsp+0x50]
   1400122a2:	inc    rax
   1400122a5:	mov    QWORD PTR [r10+0x10],rax
   1400122a9:	mov    QWORD PTR [r11+0x8],r9
   1400122ad:	mov    rax,QWORD PTR [r10+0x8]
   1400122b1:	cmp    r9,rax
   1400122b4:	jne    0x1400122c7
   1400122b6:	mov    QWORD PTR [rax+0x8],r11
   1400122ba:	mov    rax,QWORD PTR [r10+0x8]
   1400122be:	mov    QWORD PTR [rax],r11
   1400122c1:	mov    rax,QWORD PTR [r10+0x8]
   1400122c5:	jmp    0x1400122eb
   1400122c7:	test   r8b,r8b
   1400122ca:	je     0x1400122dd
   1400122cc:	mov    QWORD PTR [r9],r11
   1400122cf:	mov    rax,QWORD PTR [r10+0x8]
   1400122d3:	cmp    r9,QWORD PTR [rax]
   1400122d6:	jne    0x1400122ef
   1400122d8:	mov    QWORD PTR [rax],r11
   1400122db:	jmp    0x1400122ef
   1400122dd:	mov    QWORD PTR [r9+0x10],r11
   1400122e1:	mov    rax,QWORD PTR [r10+0x8]
   1400122e5:	cmp    r9,QWORD PTR [rax+0x10]
   1400122e9:	jne    0x1400122ef
   1400122eb:	mov    QWORD PTR [rax+0x10],r11
   1400122ef:	mov    rax,QWORD PTR [r11+0x8]
   1400122f3:	mov    rdx,r11
   1400122f6:	cmp    BYTE PTR [rax+0x48],0x0
   1400122fa:	jne    0x1400124da
   140012300:	mov    rax,QWORD PTR [rdx+0x8]
   140012304:	mov    rcx,QWORD PTR [rax+0x8]
   140012308:	cmp    rax,QWORD PTR [rcx]
   14001230b:	jne    0x1400123e8
   140012311:	mov    r8,QWORD PTR [rcx+0x10]
   140012315:	cmp    BYTE PTR [r8+0x48],0x0
   14001231a:	je     0x1400123f2
   140012320:	cmp    rdx,QWORD PTR [rax+0x10]
   140012324:	jne    0x140012372
   140012326:	mov    rcx,QWORD PTR [rax+0x10]
   14001232a:	mov    rdx,rax
   14001232d:	mov    rax,QWORD PTR [rcx]
   140012330:	mov    QWORD PTR [rdx+0x10],rax
   140012334:	mov    rax,QWORD PTR [rcx]
   140012337:	cmp    BYTE PTR [rax+0x49],0x0
   14001233b:	jne    0x140012341
   14001233d:	mov    QWORD PTR [rax+0x8],rdx
   140012341:	mov    rax,QWORD PTR [rdx+0x8]
   140012345:	mov    QWORD PTR [rcx+0x8],rax
   140012349:	mov    rax,QWORD PTR [r10+0x8]
   14001234d:	cmp    rdx,QWORD PTR [rax+0x8]
   140012351:	jne    0x140012359
   140012353:	mov    QWORD PTR [rax+0x8],rcx
   140012357:	jmp    0x14001236b
   140012359:	mov    rax,QWORD PTR [rdx+0x8]
   14001235d:	cmp    rdx,QWORD PTR [rax]
   140012360:	jne    0x140012367
   140012362:	mov    QWORD PTR [rax],rcx
   140012365:	jmp    0x14001236b
   140012367:	mov    QWORD PTR [rax+0x10],rcx
   14001236b:	mov    QWORD PTR [rcx],rdx
   14001236e:	mov    QWORD PTR [rdx+0x8],rcx
   140012372:	mov    rax,QWORD PTR [rdx+0x8]
   140012376:	mov    BYTE PTR [rax+0x48],0x1
   14001237a:	mov    rax,QWORD PTR [rdx+0x8]
   14001237e:	mov    rcx,QWORD PTR [rax+0x8]
   140012382:	mov    BYTE PTR [rcx+0x48],0x0
   140012386:	mov    rax,QWORD PTR [rdx+0x8]
   14001238a:	mov    rcx,QWORD PTR [rax+0x8]
   14001238e:	mov    r8,QWORD PTR [rcx]
   140012391:	mov    rax,QWORD PTR [r8+0x10]
   140012395:	mov    QWORD PTR [rcx],rax
   140012398:	mov    rax,QWORD PTR [r8+0x10]
   14001239c:	cmp    BYTE PTR [rax+0x49],0x0
   1400123a0:	jne    0x1400123a6
   1400123a2:	mov    QWORD PTR [rax+0x8],rcx
   1400123a6:	mov    rax,QWORD PTR [rcx+0x8]
   1400123aa:	mov    QWORD PTR [r8+0x8],rax
   1400123ae:	mov    rax,QWORD PTR [r10+0x8]
   1400123b2:	cmp    rcx,QWORD PTR [rax+0x8]
   1400123b6:	jne    0x1400123c5
   1400123b8:	mov    QWORD PTR [rax+0x8],r8
   1400123bc:	mov    QWORD PTR [r8+0x10],rcx
   1400123c0:	jmp    0x1400124c8
   1400123c5:	mov    rax,QWORD PTR [rcx+0x8]
   1400123c9:	cmp    rcx,QWORD PTR [rax+0x10]
   1400123cd:	jne    0x1400123dc
   1400123cf:	mov    QWORD PTR [rax+0x10],r8
   1400123d3:	mov    QWORD PTR [r8+0x10],rcx
   1400123d7:	jmp    0x1400124c8
   1400123dc:	mov    QWORD PTR [rax],r8
   1400123df:	mov    QWORD PTR [r8+0x10],rcx
   1400123e3:	jmp    0x1400124c8
   1400123e8:	mov    r8,QWORD PTR [rcx]
   1400123eb:	cmp    BYTE PTR [r8+0x48],0x0
   1400123f0:	jne    0x140012414
   1400123f2:	mov    BYTE PTR [rax+0x48],0x1
   1400123f6:	mov    BYTE PTR [r8+0x48],0x1
   1400123fb:	mov    rax,QWORD PTR [rdx+0x8]
   1400123ff:	mov    rcx,QWORD PTR [rax+0x8]
   140012403:	mov    BYTE PTR [rcx+0x48],0x0
   140012407:	mov    rax,QWORD PTR [rdx+0x8]
   14001240b:	mov    rdx,QWORD PTR [rax+0x8]
   14001240f:	jmp    0x1400124cc
   140012414:	cmp    rdx,QWORD PTR [rax]
   140012417:	jne    0x140012467
   140012419:	mov    rcx,QWORD PTR [rax]
   14001241c:	mov    rdx,rax
   14001241f:	mov    rax,QWORD PTR [rcx+0x10]
   140012423:	mov    QWORD PTR [rdx],rax
   140012426:	mov    rax,QWORD PTR [rcx+0x10]
   14001242a:	cmp    BYTE PTR [rax+0x49],0x0
   14001242e:	jne    0x140012434
   140012430:	mov    QWORD PTR [rax+0x8],rdx
   140012434:	mov    rax,QWORD PTR [rdx+0x8]
   140012438:	mov    QWORD PTR [rcx+0x8],rax
   14001243c:	mov    rax,QWORD PTR [r10+0x8]
   140012440:	cmp    rdx,QWORD PTR [rax+0x8]
   140012444:	jne    0x14001244c
   140012446:	mov    QWORD PTR [rax+0x8],rcx
   14001244a:	jmp    0x14001245f
   14001244c:	mov    rax,QWORD PTR [rdx+0x8]
   140012450:	cmp    rdx,QWORD PTR [rax+0x10]
   140012454:	jne    0x14001245c
   140012456:	mov    QWORD PTR [rax+0x10],rcx
   14001245a:	jmp    0x14001245f
   14001245c:	mov    QWORD PTR [rax],rcx
   14001245f:	mov    QWORD PTR [rcx+0x10],rdx
   140012463:	mov    QWORD PTR [rdx+0x8],rcx
   140012467:	mov    rax,QWORD PTR [rdx+0x8]
   14001246b:	mov    BYTE PTR [rax+0x48],0x1
   14001246f:	mov    rax,QWORD PTR [rdx+0x8]
   140012473:	mov    rcx,QWORD PTR [rax+0x8]
   140012477:	mov    BYTE PTR [rcx+0x48],0x0
   14001247b:	mov    rax,QWORD PTR [rdx+0x8]
   14001247f:	mov    rcx,QWORD PTR [rax+0x8]
   140012483:	mov    r8,QWORD PTR [rcx+0x10]
   140012487:	mov    rax,QWORD PTR [r8]
   14001248a:	mov    QWORD PTR [rcx+0x10],rax
   14001248e:	mov    rax,QWORD PTR [r8]
   140012491:	cmp    BYTE PTR [rax+0x49],0x0
   140012495:	jne    0x14001249b
   140012497:	mov    QWORD PTR [rax+0x8],rcx
   14001249b:	mov    rax,QWORD PTR [rcx+0x8]
   14001249f:	mov    QWORD PTR [r8+0x8],rax
   1400124a3:	mov    rax,QWORD PTR [r10+0x8]
   1400124a7:	cmp    rcx,QWORD PTR [rax+0x8]
   1400124ab:	jne    0x1400124b3
   1400124ad:	mov    QWORD PTR [rax+0x8],r8
   1400124b1:	jmp    0x1400124c5
   1400124b3:	mov    rax,QWORD PTR [rcx+0x8]
   1400124b7:	cmp    rcx,QWORD PTR [rax]
   1400124ba:	jne    0x1400124c1
   1400124bc:	mov    QWORD PTR [rax],r8
   1400124bf:	jmp    0x1400124c5
   1400124c1:	mov    QWORD PTR [rax+0x10],r8
   1400124c5:	mov    QWORD PTR [r8],rcx
   1400124c8:	mov    QWORD PTR [rcx+0x8],r8
   1400124cc:	mov    rax,QWORD PTR [rdx+0x8]
   1400124d0:	cmp    BYTE PTR [rax+0x48],0x0
   1400124d4:	je     0x140012300
   1400124da:	mov    rax,QWORD PTR [r10+0x8]
   1400124de:	mov    QWORD PTR [rbx],r11
   1400124e1:	mov    rcx,QWORD PTR [rax+0x8]
   1400124e5:	mov    rax,rbx
   1400124e8:	mov    BYTE PTR [rcx+0x48],0x1
   1400124ec:	add    rsp,0x20
   1400124f0:	pop    rbx
   1400124f1:	ret    
   1400124f2:	int3   
   1400124f3:	int3   
   1400124f4:	int3   
   1400124f5:	int3   
   1400124f6:	int3   
   1400124f7:	int3   
   1400124f8:	int3   
   1400124f9:	int3   
   1400124fa:	int3   
   1400124fb:	int3   
   1400124fc:	int3   
   1400124fd:	int3   
   1400124fe:	int3   
   1400124ff:	int3   
   140012500:	rex push rdi
   140012502:	sub    rsp,0x30
   140012506:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001250f:	mov    QWORD PTR [rsp+0x40],rbx
   140012514:	mov    rdi,rdx
   140012517:	call   0x14000a0a0
   14001251c:	mov    rbx,rax
   14001251f:	mov    QWORD PTR [rsp+0x50],rax
   140012524:	lea    r8,[rax+0x18]
   140012528:	mov    QWORD PTR [rsp+0x58],r8
   14001252d:	mov    QWORD PTR [rsp+0x28],r8
   140012532:	test   r8,r8
   140012535:	je     0x14001255d
   140012537:	mov    ecx,DWORD PTR [rdi]
   140012539:	mov    DWORD PTR [r8],ecx
   14001253c:	lea    rcx,[r8+0x8]
   140012540:	mov    QWORD PTR [rcx+0x18],0xf
   140012548:	mov    QWORD PTR [rcx+0x10],0x0
   140012550:	mov    BYTE PTR [rcx],0x0
   140012553:	lea    rdx,[rdi+0x8]
   140012557:	call   0x1400029d0
   14001255c:	nop
   14001255d:	mov    rax,rbx
   140012560:	mov    rbx,QWORD PTR [rsp+0x40]
   140012565:	add    rsp,0x30
   140012569:	pop    rdi
   14001256a:	ret    
   14001256b:	int3   
   14001256c:	int3   
   14001256d:	int3   
   14001256e:	int3   
   14001256f:	int3   
   140012570:	mov    QWORD PTR [rsp+0x18],r8
   140012575:	push   rsi
   140012576:	push   rdi
   140012577:	push   r12
   140012579:	sub    rsp,0x30
   14001257d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012586:	mov    QWORD PTR [rsp+0x68],rbx
   14001258b:	mov    rbx,r8
   14001258e:	mov    rsi,rdx
   140012591:	mov    rdi,rcx
   140012594:	mov    QWORD PTR [rsp+0x50],rbx
   140012599:	xor    r12d,r12d
   14001259c:	nop    DWORD PTR [rax+0x0]
   1400125a0:	cmp    rdi,rsi
   1400125a3:	je     0x1400125f1
   1400125a5:	mov    QWORD PTR [rsp+0x58],rbx
   1400125aa:	test   rbx,rbx
   1400125ad:	je     0x1400125e2
   1400125af:	mov    QWORD PTR [rbx+0x18],0xf
   1400125b7:	mov    QWORD PTR [rbx+0x10],r12
   1400125bb:	mov    BYTE PTR [rbx],0x0
   1400125be:	or     r9,0xffffffffffffffff
   1400125c2:	xor    r8d,r8d
   1400125c5:	mov    rdx,rdi
   1400125c8:	mov    rcx,rbx
   1400125cb:	call   0x140002c70
   1400125d0:	mov    eax,DWORD PTR [rdi+0x28]
   1400125d3:	mov    DWORD PTR [rbx+0x28],eax
   1400125d6:	mov    eax,DWORD PTR [rdi+0x2c]
   1400125d9:	mov    DWORD PTR [rbx+0x2c],eax
   1400125dc:	mov    eax,DWORD PTR [rdi+0x30]
   1400125df:	mov    DWORD PTR [rbx+0x30],eax
   1400125e2:	add    rbx,0x38
   1400125e6:	mov    QWORD PTR [rsp+0x60],rbx
   1400125eb:	add    rdi,0x38
   1400125ef:	jmp    0x1400125a0
   1400125f1:	mov    rax,rbx
   1400125f4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400125f9:	add    rsp,0x30
   1400125fd:	pop    r12
   1400125ff:	pop    rdi
   140012600:	pop    rsi
   140012601:	ret    
   140012602:	int3   
   140012603:	int3   
   140012604:	int3   
   140012605:	int3   
   140012606:	int3   
   140012607:	int3   
   140012608:	int3   
   140012609:	int3   
   14001260a:	int3   
   14001260b:	int3   
   14001260c:	int3   
   14001260d:	int3   
   14001260e:	int3   
   14001260f:	int3   
   140012610:	mov    eax,0x1
   140012615:	ret    
   140012616:	int3   
   140012617:	int3   
   140012618:	int3   
   140012619:	int3   
   14001261a:	int3   
   14001261b:	int3   
   14001261c:	int3   
   14001261d:	int3   
   14001261e:	int3   
   14001261f:	int3   
   140012620:	mov    rax,rsp
   140012623:	mov    QWORD PTR [rax+0x8],rcx
   140012627:	push   rdi
   140012628:	push   r12
   14001262a:	push   r13
   14001262c:	push   r14
   14001262e:	push   r15
   140012630:	sub    rsp,0x50
   140012634:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001263d:	mov    QWORD PTR [rax+0x10],rbx
   140012641:	mov    QWORD PTR [rax+0x18],rbp
   140012645:	mov    QWORD PTR [rax+0x20],rsi
   140012649:	mov    r12,r9
   14001264c:	mov    r15,r8
   14001264f:	mov    r14d,edx
   140012652:	mov    rdi,rcx
   140012655:	xor    r13d,r13d
   140012658:	xor    ebp,ebp
   14001265a:	xor    esi,esi
   14001265c:	mov    eax,DWORD PTR [rip+0x78706]        # 0x14008ad68
   140012662:	test   al,0x1
   140012664:	jne    0x140012681
   140012666:	or     eax,0x1
   140012669:	mov    DWORD PTR [rip+0x786f9],eax        # 0x14008ad68
   14001266f:	call   0x140012d40
   140012674:	lea    rcx,[rip+0x363c5]        # 0x140048a40
   14001267b:	call   0x14003444c
   140012680:	nop
   140012681:	mov    rdx,QWORD PTR [rip+0x786c8]        # 0x14008ad50
   140012688:	cmp    QWORD PTR [rip+0x786c8],0x0        # 0x14008ad58
   140012690:	je     0x1400126e5
   140012692:	mov    rax,QWORD PTR [rdx+0x8]
   140012696:	mov    rcx,rdx
   140012699:	cmp    BYTE PTR [rax+0x29],0x0
   14001269d:	jne    0x1400126b8
   14001269f:	nop
   1400126a0:	cmp    QWORD PTR [rax+0x18],rdi
   1400126a4:	jae    0x1400126ac
   1400126a6:	mov    rax,QWORD PTR [rax+0x10]
   1400126aa:	jmp    0x1400126b2
   1400126ac:	mov    rcx,rax
   1400126af:	mov    rax,QWORD PTR [rax]
   1400126b2:	cmp    BYTE PTR [rax+0x29],0x0
   1400126b6:	je     0x1400126a0
   1400126b8:	mov    QWORD PTR [rsp+0x30],rcx
   1400126bd:	cmp    rcx,rdx
   1400126c0:	je     0x1400126cf
   1400126c2:	cmp    rdi,QWORD PTR [rcx+0x18]
   1400126c6:	jb     0x1400126cf
   1400126c8:	lea    rax,[rsp+0x30]
   1400126cd:	jmp    0x1400126d9
   1400126cf:	mov    QWORD PTR [rsp+0x38],rdx
   1400126d4:	lea    rax,[rsp+0x38]
   1400126d9:	mov    rax,QWORD PTR [rax]
   1400126dc:	cmp    rax,rdx
   1400126df:	je     0x1400126e5
   1400126e1:	mov    rsi,QWORD PTR [rax+0x20]
   1400126e5:	mov    eax,r14d
   1400126e8:	dec    eax
   1400126ea:	je     0x140012783
   1400126f0:	dec    eax
   1400126f2:	je     0x14001277b
   1400126f8:	sub    eax,0x7f
   1400126fb:	je     0x140012783
   140012701:	dec    eax
   140012703:	je     0x14001277b
   140012705:	cmp    eax,0x8e
   14001270a:	jne    0x1400127ec
   140012710:	mov    rsi,r12
   140012713:	mov    rax,QWORD PTR [rdx+0x8]
   140012717:	mov    rbx,rdx
   14001271a:	cmp    BYTE PTR [rax+0x29],0x0
   14001271e:	jne    0x140012738
   140012720:	cmp    QWORD PTR [rax+0x18],rdi
   140012724:	jae    0x14001272c
   140012726:	mov    rax,QWORD PTR [rax+0x10]
   14001272a:	jmp    0x140012732
   14001272c:	mov    rbx,rax
   14001272f:	mov    rax,QWORD PTR [rax]
   140012732:	cmp    BYTE PTR [rax+0x29],0x0
   140012736:	je     0x140012720
   140012738:	cmp    rbx,rdx
   14001273b:	je     0x140012743
   14001273d:	cmp    rdi,QWORD PTR [rbx+0x18]
   140012741:	jae    0x140012770
   140012743:	mov    QWORD PTR [rsp+0x38],rdi
   140012748:	mov    QWORD PTR [rsp+0x40],0x0
   140012751:	lea    rcx,[rsp+0x38]
   140012756:	call   0x140013950
   14001275b:	mov    r8,rax
   14001275e:	mov    rdx,rbx
   140012761:	lea    rcx,[rsp+0x38]
   140012766:	call   0x140013390
   14001276b:	mov    rbx,QWORD PTR [rsp+0x38]
   140012770:	mov    QWORD PTR [rbx+0x20],r12
   140012774:	mov    QWORD PTR [r12+0x8],rdi
   140012779:	jmp    0x1400127ec
   14001277b:	mov    r13d,0x1
   140012781:	jmp    0x1400127ec
   140012783:	mov    rsi,QWORD PTR [r12]
   140012787:	mov    rax,QWORD PTR [rdx+0x8]
   14001278b:	mov    rbx,rdx
   14001278e:	cmp    BYTE PTR [rax+0x29],0x0
   140012792:	jne    0x1400127ac
   140012794:	cmp    QWORD PTR [rax+0x18],rdi
   140012798:	jae    0x1400127a0
   14001279a:	mov    rax,QWORD PTR [rax+0x10]
   14001279e:	jmp    0x1400127a6
   1400127a0:	mov    rbx,rax
   1400127a3:	mov    rax,QWORD PTR [rax]
   1400127a6:	cmp    BYTE PTR [rax+0x29],0x0
   1400127aa:	je     0x140012794
   1400127ac:	cmp    rbx,rdx
   1400127af:	je     0x1400127b7
   1400127b1:	cmp    rdi,QWORD PTR [rbx+0x18]
   1400127b5:	jae    0x1400127e4
   1400127b7:	mov    QWORD PTR [rsp+0x38],rdi
   1400127bc:	mov    QWORD PTR [rsp+0x40],0x0
   1400127c5:	lea    rcx,[rsp+0x38]
   1400127ca:	call   0x140013950
   1400127cf:	mov    r8,rax
   1400127d2:	mov    rdx,rbx
   1400127d5:	lea    rcx,[rsp+0x38]
   1400127da:	call   0x140013390
   1400127df:	mov    rbx,QWORD PTR [rsp+0x38]
   1400127e4:	mov    QWORD PTR [rbx+0x20],rsi
   1400127e8:	mov    QWORD PTR [rsi+0x8],rdi
   1400127ec:	test   rsi,rsi
   1400127ef:	je     0x14001280b
   1400127f1:	mov    rax,QWORD PTR [rsi]
   1400127f4:	mov    QWORD PTR [rsp+0x20],r12
   1400127f9:	mov    r9,r15
   1400127fc:	mov    r8d,r14d
   1400127ff:	mov    rdx,rdi
   140012802:	mov    rcx,rsi
   140012805:	call   QWORD PTR [rax+0x20]
   140012808:	mov    rbp,rax
   14001280b:	test   r13d,r13d
   14001280e:	je     0x14001282a
   140012810:	test   rsi,rsi
   140012813:	je     0x14001282a
   140012815:	mov    QWORD PTR [rsi+0x8],0x0
   14001281d:	lea    rcx,[rsp+0x80]
   140012825:	call   0x140012bb0
   14001282a:	mov    rax,rbp
   14001282d:	lea    r11,[rsp+0x50]
   140012832:	mov    rbx,QWORD PTR [r11+0x38]
   140012836:	mov    rbp,QWORD PTR [r11+0x40]
   14001283a:	mov    rsi,QWORD PTR [r11+0x48]
   14001283e:	mov    rsp,r11
   140012841:	pop    r15
   140012843:	pop    r14
   140012845:	pop    r13
   140012847:	pop    r12
   140012849:	pop    rdi
   14001284a:	ret    
   14001284b:	int3   
   14001284c:	int3   
   14001284d:	int3   
   14001284e:	int3   
   14001284f:	int3   
   140012850:	mov    QWORD PTR [rsp+0x8],rbx
   140012855:	push   rdi
   140012856:	sub    rsp,0x20
   14001285a:	lea    rax,[rip+0x5a947]        # 0x14006d1a8
   140012861:	mov    rbx,rcx
   140012864:	mov    edi,edx
   140012866:	mov    QWORD PTR [rcx],rax
   140012869:	mov    rcx,QWORD PTR [rcx+0x8]
   14001286d:	test   rcx,rcx
   140012870:	je     0x140012880
   140012872:	call   QWORD PTR [rip+0x55d40]        # 0x1400685b8
   140012878:	mov    QWORD PTR [rbx+0x8],0x0
   140012880:	movzx  ecx,WORD PTR [rbx+0x2c]
   140012884:	mov    rdx,QWORD PTR [rbx+0x20]
   140012888:	call   QWORD PTR [rip+0x55d52]        # 0x1400685e0
   14001288e:	test   dil,0x1
   140012892:	je     0x14001289c
   140012894:	mov    rcx,rbx
   140012897:	call   0x1400330c0
   14001289c:	mov    rax,rbx
   14001289f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128a4:	add    rsp,0x20
   1400128a8:	pop    rdi
   1400128a9:	ret    
   1400128aa:	int3   
   1400128ab:	int3   
   1400128ac:	int3   
   1400128ad:	int3   
   1400128ae:	int3   
   1400128af:	int3   
   1400128b0:	rex push rbx
   1400128b2:	sub    rsp,0x20
   1400128b6:	lea    rax,[rip+0x5a8eb]        # 0x14006d1a8
   1400128bd:	mov    rbx,rcx
   1400128c0:	mov    QWORD PTR [rcx],rax
   1400128c3:	mov    rcx,QWORD PTR [rcx+0x8]
   1400128c7:	test   rcx,rcx
   1400128ca:	je     0x1400128da
   1400128cc:	call   QWORD PTR [rip+0x55ce6]        # 0x1400685b8
   1400128d2:	mov    QWORD PTR [rbx+0x8],0x0
   1400128da:	movzx  ecx,WORD PTR [rbx+0x2c]
   1400128de:	mov    rdx,QWORD PTR [rbx+0x20]
   1400128e2:	add    rsp,0x20
   1400128e6:	pop    rbx
   1400128e7:	rex.W jmp QWORD PTR [rip+0x55cf2]        # 0x1400685e0
   1400128ee:	int3   
   1400128ef:	int3   
   1400128f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400128f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400128fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400128ff:	push   rdi
   140012900:	push   r12
   140012902:	push   r13
   140012904:	sub    rsp,0x100
   14001290b:	mov    rdi,QWORD PTR [rcx+0x20]
   14001290f:	mov    r12,r9
   140012912:	mov    r13,r8
   140012915:	mov    rbx,rdx
   140012918:	mov    rsi,rcx
   14001291b:	test   rdi,rdi
   14001291e:	jne    0x14001292b
   140012920:	xor    ecx,ecx
   140012922:	call   QWORD PTR [rip+0x55a10]        # 0x140068338
   140012928:	mov    rdi,rax
   14001292b:	lea    rbp,[rip+0x5a846]        # 0x14006d178
   140012932:	test   rbx,rbx
   140012935:	lea    r8,[rsp+0xb0]
   14001293d:	cmovne rbp,rbx
   140012941:	mov    rcx,rdi
   140012944:	mov    rdx,rbp
   140012947:	call   QWORD PTR [rip+0x55cbb]        # 0x140068608
   14001294d:	xor    ebx,ebx
   14001294f:	test   eax,eax
   140012951:	jne    0x1400129a4
   140012953:	lea    rax,[rip+0xfffffffffffffcc6]        # 0x140012620
   14001295a:	lea    rcx,[rsp+0x60]
   14001295f:	mov    DWORD PTR [rsp+0x60],ebx
   140012963:	mov    QWORD PTR [rsp+0x70],rbx
   140012968:	mov    QWORD PTR [rsp+0x78],rdi
   14001296d:	mov    QWORD PTR [rsp+0x80],rbx
   140012975:	mov    QWORD PTR [rsp+0x68],rax
   14001297a:	mov    QWORD PTR [rsp+0x88],rbx
   140012982:	mov    QWORD PTR [rsp+0x90],rbx
   14001298a:	mov    QWORD PTR [rsp+0x98],rbx
   140012992:	mov    QWORD PTR [rsp+0xa0],rbp
   14001299a:	call   QWORD PTR [rip+0x55c70]        # 0x140068610
   1400129a0:	mov    WORD PTR [rsi+0x2c],ax
   1400129a4:	mov    rdx,QWORD PTR [rsi+0x20]
   1400129a8:	test   rdx,rdx
   1400129ab:	jne    0x1400129b8
   1400129ad:	xor    ecx,ecx
   1400129af:	call   QWORD PTR [rip+0x55983]        # 0x140068338
   1400129b5:	mov    rdx,rax
   1400129b8:	mov    rcx,QWORD PTR [rsp+0x140]
   1400129c0:	mov    r8d,DWORD PTR [rsp+0x158]
   1400129c8:	mov    QWORD PTR [rsp+0x58],rsi
   1400129cd:	mov    r11d,DWORD PTR [rcx+0x4]
   1400129d1:	mov    eax,DWORD PTR [rcx]
   1400129d3:	mov    r10d,DWORD PTR [rcx+0xc]
   1400129d7:	mov    r9d,DWORD PTR [rcx+0x8]
   1400129db:	mov    ecx,DWORD PTR [rsp+0x150]
   1400129e2:	mov    QWORD PTR [rsp+0x50],rdx
   1400129e7:	mov    QWORD PTR [rsp+0x48],r8
   1400129ec:	mov    QWORD PTR [rsp+0x40],r13
   1400129f1:	sub    r9d,eax
   1400129f4:	sub    r10d,r11d
   1400129f7:	mov    r8,r12
   1400129fa:	mov    rdx,rbp
   1400129fd:	mov    DWORD PTR [rsp+0x38],r10d
   140012a02:	mov    DWORD PTR [rsp+0x30],r9d
   140012a07:	mov    r9d,DWORD PTR [rsp+0x148]
   140012a0f:	mov    DWORD PTR [rsp+0x28],r11d
   140012a14:	mov    DWORD PTR [rsp+0x20],eax
   140012a18:	call   QWORD PTR [rip+0x55bd2]        # 0x1400685f0
   140012a1e:	lea    r11,[rsp+0x100]
   140012a26:	test   rax,rax
   140012a29:	mov    QWORD PTR [rsi+0x8],rax
   140012a2d:	mov    rbp,QWORD PTR [r11+0x28]
   140012a31:	mov    rsi,QWORD PTR [r11+0x30]
   140012a35:	setne  bl
   140012a38:	mov    eax,ebx
   140012a3a:	mov    rbx,QWORD PTR [r11+0x20]
   140012a3e:	mov    rsp,r11
   140012a41:	pop    r13
   140012a43:	pop    r12
   140012a45:	pop    rdi
   140012a46:	ret    
   140012a47:	int3   
   140012a48:	int3   
   140012a49:	int3   
   140012a4a:	int3   
   140012a4b:	int3   
   140012a4c:	int3   
   140012a4d:	int3   
   140012a4e:	int3   
   140012a4f:	int3   
   140012a50:	rex push rbx
   140012a52:	sub    rsp,0x20
   140012a56:	mov    rax,QWORD PTR [rcx]
   140012a59:	mov    edx,0x1
   140012a5e:	mov    rbx,rcx
   140012a61:	call   QWORD PTR [rax+0x28]
   140012a64:	test   eax,eax
   140012a66:	je     0x140012a77
   140012a68:	mov    rcx,QWORD PTR [rbx+0x8]
   140012a6c:	mov    edx,0x1
   140012a71:	call   QWORD PTR [rip+0x55b89]        # 0x140068600
   140012a77:	add    rsp,0x20
   140012a7b:	pop    rbx
   140012a7c:	ret    
   140012a7d:	int3   
   140012a7e:	int3   
   140012a7f:	int3   
   140012a80:	mov    rcx,QWORD PTR [rcx+0x8]
   140012a84:	mov    edx,0x2
   140012a89:	rex.W jmp QWORD PTR [rip+0x55b70]        # 0x140068600
   140012a90:	mov    QWORD PTR [rsp+0x8],rbx
   140012a95:	push   rdi
   140012a96:	sub    rsp,0x20
   140012a9a:	mov    eax,r8d
   140012a9d:	mov    rdi,r9
   140012aa0:	mov    r10d,r8d
   140012aa3:	dec    eax
   140012aa5:	mov    r11,rdx
   140012aa8:	mov    rbx,rcx
   140012aab:	je     0x140012b65
   140012ab1:	sub    eax,0x10f
   140012ab6:	je     0x140012b4b
   140012abc:	dec    eax
   140012abe:	je     0x140012ae5
   140012ac0:	cmp    DWORD PTR [rcx+0x28],0x0
   140012ac4:	jne    0x140012b25
   140012ac6:	mov    r9,QWORD PTR [rsp+0x50]
   140012acb:	mov    r8,rdi
   140012ace:	mov    edx,r10d
   140012ad1:	mov    rcx,r11
   140012ad4:	call   QWORD PTR [rip+0x55b5e]        # 0x140068638
   140012ada:	mov    rbx,QWORD PTR [rsp+0x30]
   140012adf:	add    rsp,0x20
   140012ae3:	pop    rdi
   140012ae4:	ret    
   140012ae5:	mov    r10,QWORD PTR [rcx]
   140012ae8:	mov    rax,r9
   140012aeb:	movzx  edx,r9w
   140012aef:	mov    r9,QWORD PTR [rsp+0x50]
   140012af4:	shr    rax,0x10
   140012af8:	movzx  r8d,ax
   140012afc:	call   QWORD PTR [r10+0x40]
   140012b00:	test   eax,eax
   140012b02:	jne    0x140012b25
   140012b04:	dec    rdi
   140012b07:	je     0x140012b32
   140012b09:	dec    rdi
   140012b0c:	jne    0x140012b25
   140012b0e:	mov    rax,QWORD PTR [rbx]
   140012b11:	mov    rcx,rbx
   140012b14:	call   QWORD PTR [rax+0x18]
   140012b17:	lea    eax,[rdi+0x1]
   140012b1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140012b1f:	add    rsp,0x20
   140012b23:	pop    rdi
   140012b24:	ret    
   140012b25:	xor    eax,eax
   140012b27:	mov    rbx,QWORD PTR [rsp+0x30]
   140012b2c:	add    rsp,0x20
   140012b30:	pop    rdi
   140012b31:	ret    
   140012b32:	mov    rax,QWORD PTR [rbx]
   140012b35:	mov    rcx,rbx
   140012b38:	call   QWORD PTR [rax+0x10]
   140012b3b:	mov    eax,0x1
   140012b40:	mov    rbx,QWORD PTR [rsp+0x30]
   140012b45:	add    rsp,0x20
   140012b49:	pop    rdi
   140012b4a:	ret    
   140012b4b:	mov    rax,QWORD PTR [rcx]
   140012b4e:	mov    DWORD PTR [rcx+0x28],0x1
   140012b55:	call   QWORD PTR [rax+0x38]
   140012b58:	cdqe   
   140012b5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140012b5f:	add    rsp,0x20
   140012b63:	pop    rdi
   140012b64:	ret    
   140012b65:	mov    rax,QWORD PTR [rcx]
   140012b68:	lea    rdx,[rsp+0x50]
   140012b6d:	mov    DWORD PTR [rcx+0x28],0x0
   140012b74:	call   QWORD PTR [rax+0x30]
   140012b77:	mov    rbx,QWORD PTR [rsp+0x30]
   140012b7c:	cdqe   
   140012b7e:	add    rsp,0x20
   140012b82:	pop    rdi
   140012b83:	ret    
   140012b84:	int3   
   140012b85:	int3   
   140012b86:	int3   
   140012b87:	int3   
   140012b88:	int3   
   140012b89:	int3   
   140012b8a:	int3   
   140012b8b:	int3   
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	sub    rsp,0x28
   140012b94:	mov    rax,QWORD PTR [rcx]
   140012b97:	xor    edx,edx
   140012b99:	call   QWORD PTR [rax+0x28]
   140012b9c:	mov    eax,0x1
   140012ba1:	add    rsp,0x28
   140012ba5:	ret    
   140012ba6:	int3   
   140012ba7:	int3   
   140012ba8:	int3   
   140012ba9:	int3   
   140012baa:	int3   
   140012bab:	int3   
   140012bac:	int3   
   140012bad:	int3   
   140012bae:	int3   
   140012baf:	int3   
   140012bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140012bb5:	mov    QWORD PTR [rsp+0x18],rsi
   140012bba:	push   rdi
   140012bbb:	sub    rsp,0x20
   140012bbf:	mov    r10,QWORD PTR [rip+0x7818a]        # 0x14008ad50
   140012bc6:	mov    rbx,r10
   140012bc9:	mov    rdi,r10
   140012bcc:	mov    rax,QWORD PTR [r10+0x8]
   140012bd0:	mov    rdx,rax
   140012bd3:	cmp    BYTE PTR [rax+0x29],0x0
   140012bd7:	jne    0x140012c08
   140012bd9:	mov    r9,QWORD PTR [rcx]
   140012bdc:	nop    DWORD PTR [rax+0x0]
   140012be0:	mov    r8,QWORD PTR [rdx+0x18]
   140012be4:	cmp    r8,r9
   140012be7:	jae    0x140012bef
   140012be9:	mov    rdx,QWORD PTR [rdx+0x10]
   140012bed:	jmp    0x140012c02
   140012bef:	cmp    BYTE PTR [rdi+0x29],0x0
   140012bf3:	je     0x140012bfc
   140012bf5:	cmp    r9,r8
   140012bf8:	cmovb  rdi,rdx
   140012bfc:	mov    rbx,rdx
   140012bff:	mov    rdx,QWORD PTR [rdx]
   140012c02:	cmp    BYTE PTR [rdx+0x29],0x0
   140012c06:	je     0x140012be0
   140012c08:	cmp    BYTE PTR [rdi+0x29],0x0
   140012c0c:	jne    0x140012c11
   140012c0e:	mov    rax,QWORD PTR [rdi]
   140012c11:	cmp    BYTE PTR [rax+0x29],0x0
   140012c15:	jne    0x140012c38
   140012c17:	mov    rcx,QWORD PTR [rcx]
   140012c1a:	nop    WORD PTR [rax+rax*1+0x0]
   140012c20:	cmp    rcx,QWORD PTR [rax+0x18]
   140012c24:	jae    0x140012c2e
   140012c26:	mov    rdi,rax
   140012c29:	mov    rax,QWORD PTR [rax]
   140012c2c:	jmp    0x140012c32
   140012c2e:	mov    rax,QWORD PTR [rax+0x10]
   140012c32:	cmp    BYTE PTR [rax+0x29],0x0
   140012c36:	je     0x140012c20
   140012c38:	xor    esi,esi
   140012c3a:	mov    rax,rbx
   140012c3d:	cmp    rbx,rdi
   140012c40:	je     0x140012c9b
   140012c42:	inc    rsi
   140012c45:	cmp    BYTE PTR [rax+0x29],0x0
   140012c49:	jne    0x140012c96
   140012c4b:	mov    rcx,QWORD PTR [rax+0x10]
   140012c4f:	cmp    BYTE PTR [rcx+0x29],0x0
   140012c53:	jne    0x140012c6f
   140012c55:	mov    rax,rcx
   140012c58:	mov    rcx,QWORD PTR [rcx]
   140012c5b:	cmp    BYTE PTR [rcx+0x29],0x0
   140012c5f:	jne    0x140012c96
   140012c61:	mov    rax,rcx
   140012c64:	mov    rcx,QWORD PTR [rcx]
   140012c67:	cmp    BYTE PTR [rcx+0x29],0x0
   140012c6b:	je     0x140012c61
   140012c6d:	jmp    0x140012c96
   140012c6f:	mov    rcx,QWORD PTR [rax+0x8]
   140012c73:	cmp    BYTE PTR [rcx+0x29],0x0
   140012c77:	jne    0x140012c93
   140012c79:	nop    DWORD PTR [rax+0x0]
   140012c80:	cmp    rax,QWORD PTR [rcx+0x10]
   140012c84:	jne    0x140012c93
   140012c86:	mov    rax,rcx
   140012c89:	mov    rcx,QWORD PTR [rcx+0x8]
   140012c8d:	cmp    BYTE PTR [rcx+0x29],0x0
   140012c91:	je     0x140012c80
   140012c93:	mov    rax,rcx
   140012c96:	cmp    rax,rdi
   140012c99:	jne    0x140012c42
   140012c9b:	cmp    rbx,QWORD PTR [r10]
   140012c9e:	jne    0x140012cbd
   140012ca0:	cmp    rdi,r10
   140012ca3:	jne    0x140012cbd
   140012ca5:	call   0x140013200
   140012caa:	mov    rax,rsi
   140012cad:	mov    rbx,QWORD PTR [rsp+0x30]
   140012cb2:	mov    rsi,QWORD PTR [rsp+0x40]
   140012cb7:	add    rsp,0x20
   140012cbb:	pop    rdi
   140012cbc:	ret    
   140012cbd:	cmp    rbx,rdi
   140012cc0:	je     0x140012d25
   140012cc2:	cmp    BYTE PTR [rbx+0x29],0x0
   140012cc6:	mov    rdx,rbx
   140012cc9:	jne    0x140012d16
   140012ccb:	mov    rax,QWORD PTR [rbx+0x10]
   140012ccf:	cmp    BYTE PTR [rax+0x29],0x0
   140012cd3:	jne    0x140012cef
   140012cd5:	mov    rbx,rax
   140012cd8:	mov    rax,QWORD PTR [rax]
   140012cdb:	cmp    BYTE PTR [rax+0x29],0x0
   140012cdf:	jne    0x140012d16
   140012ce1:	mov    rbx,rax
   140012ce4:	mov    rax,QWORD PTR [rax]
   140012ce7:	cmp    BYTE PTR [rax+0x29],0x0
   140012ceb:	je     0x140012ce1
   140012ced:	jmp    0x140012d16
   140012cef:	mov    rax,QWORD PTR [rbx+0x8]
   140012cf3:	cmp    BYTE PTR [rax+0x29],0x0
   140012cf7:	jne    0x140012d13
   140012cf9:	nop    DWORD PTR [rax+0x0]
   140012d00:	cmp    rbx,QWORD PTR [rax+0x10]
   140012d04:	jne    0x140012d13
   140012d06:	mov    rbx,rax
   140012d09:	mov    rax,QWORD PTR [rax+0x8]
   140012d0d:	cmp    BYTE PTR [rax+0x29],0x0
   140012d11:	je     0x140012d00
   140012d13:	mov    rbx,rax
   140012d16:	lea    rcx,[rsp+0x38]
   140012d1b:	call   0x140012eb0
   140012d20:	cmp    rbx,rdi
   140012d23:	jne    0x140012cc2
   140012d25:	mov    rbx,QWORD PTR [rsp+0x30]
   140012d2a:	mov    rax,rsi
   140012d2d:	mov    rsi,QWORD PTR [rsp+0x40]
   140012d32:	add    rsp,0x20
   140012d36:	pop    rdi
   140012d37:	ret    
   140012d38:	int3   
   140012d39:	int3   
   140012d3a:	int3   
   140012d3b:	int3   
   140012d3c:	int3   
   140012d3d:	int3   
   140012d3e:	int3   
   140012d3f:	int3   
   140012d40:	sub    rsp,0x48
   140012d44:	mov    ecx,0x30
   140012d49:	mov    QWORD PTR [rip+0x78004],0x0        # 0x14008ad58
   140012d54:	call   0x1400331a0
   140012d59:	test   rax,rax
   140012d5c:	je     0x140012da0
   140012d5e:	mov    QWORD PTR [rip+0x77feb],rax        # 0x14008ad50
   140012d65:	mov    QWORD PTR [rax],rax
   140012d68:	mov    rax,QWORD PTR [rip+0x77fe1]        # 0x14008ad50
   140012d6f:	mov    QWORD PTR [rax+0x8],rax
   140012d73:	mov    rax,QWORD PTR [rip+0x77fd6]        # 0x14008ad50
   140012d7a:	mov    QWORD PTR [rax+0x10],rax
   140012d7e:	mov    rax,QWORD PTR [rip+0x77fcb]        # 0x14008ad50
   140012d85:	mov    BYTE PTR [rax+0x28],0x1
   140012d89:	mov    rax,QWORD PTR [rip+0x77fc0]        # 0x14008ad50
   140012d90:	mov    BYTE PTR [rax+0x29],0x1
   140012d94:	lea    rax,[rip+0x77fad]        # 0x14008ad48
   140012d9b:	add    rsp,0x48
   140012d9f:	ret    
   140012da0:	lea    rdx,[rsp+0x50]
   140012da5:	lea    rcx,[rsp+0x20]
   140012daa:	mov    QWORD PTR [rsp+0x50],0x0
   140012db3:	call   0x140032fd4
   140012db8:	lea    r11,[rip+0x55ad1]        # 0x140068890
   140012dbf:	lea    rdx,[rip+0x7065a]        # 0x140083420
   140012dc6:	lea    rcx,[rsp+0x20]
   140012dcb:	mov    QWORD PTR [rsp+0x20],r11
   140012dd0:	call   0x140036358
   140012dd5:	int3   
   140012dd6:	int3   
   140012dd7:	int3   
   140012dd8:	int3   
   140012dd9:	int3   
   140012dda:	int3   
   140012ddb:	int3   
   140012ddc:	int3   
   140012ddd:	int3   
   140012dde:	int3   
   140012ddf:	int3   
   140012de0:	mov    QWORD PTR [rsp+0x18],r8
   140012de5:	mov    QWORD PTR [rsp+0x10],rdx
   140012dea:	push   rbx
   140012deb:	sub    rsp,0x20
   140012def:	mov    rax,QWORD PTR [rip+0x77f5a]        # 0x14008ad50
   140012df6:	mov    rbx,rcx
   140012df9:	cmp    rdx,QWORD PTR [rax]
   140012dfc:	jne    0x140012e1e
   140012dfe:	cmp    r8,rax
   140012e01:	jne    0x140012e1e
   140012e03:	call   0x140013200
   140012e08:	mov    r11,QWORD PTR [rip+0x77f41]        # 0x14008ad50
   140012e0f:	mov    rax,QWORD PTR [r11]
   140012e12:	mov    QWORD PTR [rbx],rax
   140012e15:	mov    rax,rbx
   140012e18:	add    rsp,0x20
   140012e1c:	pop    rbx
   140012e1d:	ret    
   140012e1e:	cmp    rdx,r8
   140012e21:	je     0x140012e8e
   140012e23:	cmp    BYTE PTR [rdx+0x29],0x0
   140012e27:	mov    rax,rdx
   140012e2a:	jne    0x140012e75
   140012e2c:	mov    rcx,QWORD PTR [rdx+0x10]
   140012e30:	cmp    BYTE PTR [rcx+0x29],0x0
   140012e34:	jne    0x140012e4e
   140012e36:	mov    rdx,QWORD PTR [rcx]
   140012e39:	cmp    BYTE PTR [rdx+0x29],0x0
   140012e3d:	jne    0x140012e70
   140012e3f:	nop
   140012e40:	mov    rcx,rdx
   140012e43:	mov    rdx,QWORD PTR [rdx]
   140012e46:	cmp    BYTE PTR [rdx+0x29],0x0
   140012e4a:	je     0x140012e40
   140012e4c:	jmp    0x140012e70
   140012e4e:	mov    rcx,QWORD PTR [rdx+0x8]
   140012e52:	cmp    BYTE PTR [rcx+0x29],0x0
   140012e56:	jne    0x140012e70
   140012e58:	cmp    rdx,QWORD PTR [rcx+0x10]
   140012e5c:	jne    0x140012e70
   140012e5e:	mov    QWORD PTR [rsp+0x38],rcx
   140012e63:	mov    rdx,rcx
   140012e66:	mov    rcx,QWORD PTR [rcx+0x8]
   140012e6a:	cmp    BYTE PTR [rcx+0x29],0x0
   140012e6e:	je     0x140012e58
   140012e70:	mov    QWORD PTR [rsp+0x38],rcx
   140012e75:	lea    rcx,[rsp+0x48]
   140012e7a:	mov    rdx,rax
   140012e7d:	call   0x140012eb0
   140012e82:	mov    rdx,QWORD PTR [rsp+0x38]
   140012e87:	cmp    rdx,QWORD PTR [rsp+0x40]
   140012e8c:	jne    0x140012e23
   140012e8e:	mov    QWORD PTR [rbx],rdx
   140012e91:	mov    rax,rbx
   140012e94:	add    rsp,0x20
   140012e98:	pop    rbx
   140012e99:	ret    
   140012e9a:	int3   
   140012e9b:	int3   
   140012e9c:	int3   
   140012e9d:	int3   
   140012e9e:	int3   
   140012e9f:	int3   
   140012ea0:	mov    rcx,QWORD PTR [rip+0x77ea9]        # 0x14008ad50
   140012ea7:	jmp    0x1400330c0
   140012eac:	int3   
   140012ead:	int3   
   140012eae:	int3   
   140012eaf:	int3   
   140012eb0:	mov    QWORD PTR [rsp+0x10],rdx
   140012eb5:	push   rbp
   140012eb6:	sub    rsp,0x20
   140012eba:	cmp    BYTE PTR [rdx+0x29],0x0
   140012ebe:	mov    rbp,rcx
   140012ec1:	je     0x140012ed0
   140012ec3:	lea    rcx,[rip+0x583e6]        # 0x14006b2b0
   140012eca:	call   0x140032d5c
   140012ecf:	int3   
   140012ed0:	mov    r8,QWORD PTR [rdx+0x10]
   140012ed4:	lea    r9,[rdx+0x10]
   140012ed8:	mov    QWORD PTR [rsp+0x40],rsi
   140012edd:	cmp    BYTE PTR [r8+0x29],0x0
   140012ee2:	mov    rsi,rdx
   140012ee5:	jne    0x140012efe
   140012ee7:	mov    rax,QWORD PTR [r8]
   140012eea:	cmp    BYTE PTR [rax+0x29],0x0
   140012eee:	jne    0x140012f29
   140012ef0:	mov    r8,rax
   140012ef3:	mov    rax,QWORD PTR [rax]
   140012ef6:	cmp    BYTE PTR [rax+0x29],0x0
   140012efa:	je     0x140012ef0
   140012efc:	jmp    0x140012f29
   140012efe:	mov    r8,QWORD PTR [rdx+0x8]
   140012f02:	cmp    BYTE PTR [r8+0x29],0x0
   140012f07:	jne    0x140012f29
   140012f09:	nop    DWORD PTR [rax+0x0]
   140012f10:	cmp    rdx,QWORD PTR [r8+0x10]
   140012f14:	jne    0x140012f29
   140012f16:	mov    rdx,r8
   140012f19:	mov    QWORD PTR [rsp+0x38],rdx
   140012f1e:	mov    r8,QWORD PTR [r8+0x8]
   140012f22:	cmp    BYTE PTR [r8+0x29],0x0
   140012f27:	je     0x140012f10
   140012f29:	mov    QWORD PTR [rsp+0x38],r8
   140012f2e:	mov    rcx,QWORD PTR [rsi]
   140012f31:	mov    QWORD PTR [rsp+0x30],rbx
   140012f36:	cmp    BYTE PTR [rcx+0x29],0x0
   140012f3a:	mov    QWORD PTR [rsp+0x48],rdi
   140012f3f:	je     0x140012f46
   140012f41:	mov    rdi,QWORD PTR [r9]
   140012f44:	jmp    0x140012f61
   140012f46:	mov    rax,QWORD PTR [r9]
   140012f49:	cmp    BYTE PTR [rax+0x29],0x0
   140012f4d:	je     0x140012f54
   140012f4f:	mov    rdi,rcx
   140012f52:	jmp    0x140012f61
   140012f54:	mov    rdi,QWORD PTR [r8+0x10]
   140012f58:	cmp    r8,rsi
   140012f5b:	jne    0x140013013
   140012f61:	cmp    BYTE PTR [rdi+0x29],0x0
   140012f65:	mov    rbx,QWORD PTR [rsi+0x8]
   140012f69:	jne    0x140012f6f
   140012f6b:	mov    QWORD PTR [rdi+0x8],rbx
   140012f6f:	mov    rax,QWORD PTR [rip+0x77dda]        # 0x14008ad50
   140012f76:	cmp    QWORD PTR [rax+0x8],rsi
   140012f7a:	jne    0x140012f82
   140012f7c:	mov    QWORD PTR [rax+0x8],rdi
   140012f80:	jmp    0x140012f90
   140012f82:	cmp    QWORD PTR [rbx],rsi
   140012f85:	jne    0x140012f8c
   140012f87:	mov    QWORD PTR [rbx],rdi
   140012f8a:	jmp    0x140012f90
   140012f8c:	mov    QWORD PTR [rbx+0x10],rdi
   140012f90:	mov    rax,QWORD PTR [rip+0x77db9]        # 0x14008ad50
   140012f97:	cmp    QWORD PTR [rax],rsi
   140012f9a:	jne    0x140012fc9
   140012f9c:	cmp    BYTE PTR [rdi+0x29],0x0
   140012fa0:	je     0x140012fa7
   140012fa2:	mov    rcx,rbx
   140012fa5:	jmp    0x140012fbf
   140012fa7:	mov    rax,QWORD PTR [rdi]
   140012faa:	mov    rcx,rdi
   140012fad:	cmp    BYTE PTR [rax+0x29],0x0
   140012fb1:	jne    0x140012fbf
   140012fb3:	mov    rcx,rax
   140012fb6:	mov    rax,QWORD PTR [rax]
   140012fb9:	cmp    BYTE PTR [rax+0x29],0x0
   140012fbd:	je     0x140012fb3
   140012fbf:	mov    rax,QWORD PTR [rip+0x77d8a]        # 0x14008ad50
   140012fc6:	mov    QWORD PTR [rax],rcx
   140012fc9:	mov    rdx,QWORD PTR [rip+0x77d80]        # 0x14008ad50
   140012fd0:	cmp    QWORD PTR [rdx+0x10],rsi
   140012fd4:	jne    0x140013083
   140012fda:	cmp    BYTE PTR [rdi+0x29],0x0
   140012fde:	je     0x140012fec
   140012fe0:	mov    rcx,rbx
   140012fe3:	mov    QWORD PTR [rdx+0x10],rbx
   140012fe7:	jmp    0x140013083
   140012fec:	mov    rax,QWORD PTR [rdi+0x10]
   140012ff0:	mov    rcx,rdi
   140012ff3:	cmp    BYTE PTR [rax+0x29],0x0
   140012ff7:	jne    0x14001300d
   140012ff9:	nop    DWORD PTR [rax+0x0]
   140013000:	mov    rcx,rax
   140013003:	mov    rax,QWORD PTR [rax+0x10]
   140013007:	cmp    BYTE PTR [rax+0x29],0x0
   14001300b:	je     0x140013000
   14001300d:	mov    QWORD PTR [rdx+0x10],rcx
   140013011:	jmp    0x140013083
   140013013:	mov    QWORD PTR [rcx+0x8],r8
   140013017:	mov    rax,QWORD PTR [rsi]
   14001301a:	mov    QWORD PTR [r8],rax
   14001301d:	cmp    r8,QWORD PTR [r9]
   140013020:	jne    0x140013027
   140013022:	mov    rbx,r8
   140013025:	jmp    0x140013046
   140013027:	cmp    BYTE PTR [rdi+0x29],0x0
   14001302b:	mov    rbx,QWORD PTR [r8+0x8]
   14001302f:	jne    0x140013035
   140013031:	mov    QWORD PTR [rdi+0x8],rbx
   140013035:	mov    QWORD PTR [rbx],rdi
   140013038:	mov    rax,QWORD PTR [r9]
   14001303b:	mov    QWORD PTR [r8+0x10],rax
   14001303f:	mov    rax,QWORD PTR [r9]
   140013042:	mov    QWORD PTR [rax+0x8],r8
   140013046:	mov    rax,QWORD PTR [rip+0x77d03]        # 0x14008ad50
   14001304d:	cmp    QWORD PTR [rax+0x8],rsi
   140013051:	jne    0x140013059
   140013053:	mov    QWORD PTR [rax+0x8],r8
   140013057:	jmp    0x14001306b
   140013059:	mov    rax,QWORD PTR [rsi+0x8]
   14001305d:	cmp    QWORD PTR [rax],rsi
   140013060:	jne    0x140013067
   140013062:	mov    QWORD PTR [rax],r8
   140013065:	jmp    0x14001306b
   140013067:	mov    QWORD PTR [rax+0x10],r8
   14001306b:	mov    rax,QWORD PTR [rsi+0x8]
   14001306f:	mov    QWORD PTR [r8+0x8],rax
   140013073:	movzx  eax,BYTE PTR [rsi+0x28]
   140013077:	movzx  ecx,BYTE PTR [r8+0x28]
   14001307c:	mov    BYTE PTR [r8+0x28],al
   140013080:	mov    BYTE PTR [rsi+0x28],cl
   140013083:	cmp    BYTE PTR [rsi+0x28],0x1
   140013087:	jne    0x1400131b6
   14001308d:	mov    rax,QWORD PTR [rip+0x77cbc]        # 0x14008ad50
   140013094:	cmp    rdi,QWORD PTR [rax+0x8]
   140013098:	je     0x1400131b2
   14001309e:	xchg   ax,ax
   1400130a0:	cmp    BYTE PTR [rdi+0x28],0x1
   1400130a4:	jne    0x1400131b2
   1400130aa:	mov    rcx,QWORD PTR [rbx]
   1400130ad:	cmp    rdi,rcx
   1400130b0:	jne    0x14001312b
   1400130b2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400130b6:	cmp    BYTE PTR [rcx+0x28],0x0
   1400130ba:	jne    0x1400130d0
   1400130bc:	mov    BYTE PTR [rcx+0x28],0x1
   1400130c0:	mov    rcx,rbx
   1400130c3:	mov    BYTE PTR [rbx+0x28],0x0
   1400130c7:	call   0x1400132d0
   1400130cc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400130d0:	cmp    BYTE PTR [rcx+0x29],0x0
   1400130d4:	jne    0x140013161
   1400130da:	mov    rax,QWORD PTR [rcx]
   1400130dd:	cmp    BYTE PTR [rax+0x28],0x1
   1400130e1:	jne    0x1400130ed
   1400130e3:	mov    rax,QWORD PTR [rcx+0x10]
   1400130e7:	cmp    BYTE PTR [rax+0x28],0x1
   1400130eb:	je     0x14001315d
   1400130ed:	mov    rax,QWORD PTR [rcx+0x10]
   1400130f1:	cmp    BYTE PTR [rax+0x28],0x1
   1400130f5:	jne    0x14001310b
   1400130f7:	mov    rax,QWORD PTR [rcx]
   1400130fa:	mov    BYTE PTR [rax+0x28],0x1
   1400130fe:	mov    BYTE PTR [rcx+0x28],0x0
   140013102:	call   0x140013330
   140013107:	mov    rcx,QWORD PTR [rbx+0x10]
   14001310b:	movzx  eax,BYTE PTR [rbx+0x28]
   14001310f:	mov    BYTE PTR [rcx+0x28],al
   140013112:	mov    BYTE PTR [rbx+0x28],0x1
   140013116:	mov    rax,QWORD PTR [rcx+0x10]
   14001311a:	mov    rcx,rbx
   14001311d:	mov    BYTE PTR [rax+0x28],0x1
   140013121:	call   0x1400132d0
   140013126:	jmp    0x1400131b2
   14001312b:	cmp    BYTE PTR [rcx+0x28],0x0
   14001312f:	jne    0x140013144
   140013131:	mov    BYTE PTR [rcx+0x28],0x1
   140013135:	mov    rcx,rbx
   140013138:	mov    BYTE PTR [rbx+0x28],0x0
   14001313c:	call   0x140013330
   140013141:	mov    rcx,QWORD PTR [rbx]
   140013144:	cmp    BYTE PTR [rcx+0x29],0x0
   140013148:	jne    0x140013161
   14001314a:	mov    rax,QWORD PTR [rcx+0x10]
   14001314e:	cmp    BYTE PTR [rax+0x28],0x1
   140013152:	jne    0x14001317b
   140013154:	mov    rax,QWORD PTR [rcx]
   140013157:	cmp    BYTE PTR [rax+0x28],0x1
   14001315b:	jne    0x14001317b
   14001315d:	mov    BYTE PTR [rcx+0x28],0x0
   140013161:	mov    rax,QWORD PTR [rip+0x77be8]        # 0x14008ad50
   140013168:	mov    rdi,rbx
   14001316b:	mov    rbx,QWORD PTR [rbx+0x8]
   14001316f:	cmp    rdi,QWORD PTR [rax+0x8]
   140013173:	jne    0x1400130a0
   140013179:	jmp    0x1400131b2
   14001317b:	mov    rax,QWORD PTR [rcx]
   14001317e:	cmp    BYTE PTR [rax+0x28],0x1
   140013182:	jne    0x140013198
   140013184:	mov    rax,QWORD PTR [rcx+0x10]
   140013188:	mov    BYTE PTR [rax+0x28],0x1
   14001318c:	mov    BYTE PTR [rcx+0x28],0x0
   140013190:	call   0x1400132d0
   140013195:	mov    rcx,QWORD PTR [rbx]
   140013198:	movzx  eax,BYTE PTR [rbx+0x28]
   14001319c:	mov    BYTE PTR [rcx+0x28],al
   14001319f:	mov    BYTE PTR [rbx+0x28],0x1
   1400131a3:	mov    rax,QWORD PTR [rcx]
   1400131a6:	mov    rcx,rbx
   1400131a9:	mov    BYTE PTR [rax+0x28],0x1
   1400131ad:	call   0x140013330
   1400131b2:	mov    BYTE PTR [rdi+0x28],0x1
   1400131b6:	mov    rcx,rsi
   1400131b9:	call   0x1400330c0
   1400131be:	mov    r11,QWORD PTR [rip+0x77b93]        # 0x14008ad58
   1400131c5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400131ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400131cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400131d4:	test   r11,r11
   1400131d7:	je     0x1400131e3
   1400131d9:	dec    r11
   1400131dc:	mov    QWORD PTR [rip+0x77b75],r11        # 0x14008ad58
   1400131e3:	mov    rax,QWORD PTR [rsp+0x38]
   1400131e8:	mov    QWORD PTR [rbp+0x0],rax
   1400131ec:	mov    rax,rbp
   1400131ef:	add    rsp,0x20
   1400131f3:	pop    rbp
   1400131f4:	ret    
   1400131f5:	int3   
   1400131f6:	int3   
   1400131f7:	int3   
   1400131f8:	int3   
   1400131f9:	int3   
   1400131fa:	int3   
   1400131fb:	int3   
   1400131fc:	int3   
   1400131fd:	int3   
   1400131fe:	int3   
   1400131ff:	int3   
   140013200:	mov    QWORD PTR [rsp+0x8],rbx
   140013205:	push   rdi
   140013206:	sub    rsp,0x20
   14001320a:	mov    rax,QWORD PTR [rip+0x77b3f]        # 0x14008ad50
   140013211:	mov    rdi,QWORD PTR [rax+0x8]
   140013215:	mov    rbx,rdi
   140013218:	cmp    BYTE PTR [rdi+0x29],0x0
   14001321c:	jne    0x14001324b
   14001321e:	xchg   ax,ax
   140013220:	mov    rdx,QWORD PTR [rbx+0x10]
   140013224:	lea    rcx,[rip+0x77b1d]        # 0x14008ad48
   14001322b:	call   0x140013280
   140013230:	mov    rbx,QWORD PTR [rbx]
   140013233:	mov    rcx,rdi
   140013236:	call   0x1400330c0
   14001323b:	cmp    BYTE PTR [rbx+0x29],0x0
   14001323f:	mov    rdi,rbx
   140013242:	je     0x140013220
   140013244:	mov    rax,QWORD PTR [rip+0x77b05]        # 0x14008ad50
   14001324b:	mov    rbx,QWORD PTR [rsp+0x30]
   140013250:	mov    QWORD PTR [rax+0x8],rax
   140013254:	mov    rax,QWORD PTR [rip+0x77af5]        # 0x14008ad50
   14001325b:	mov    QWORD PTR [rax],rax
   14001325e:	mov    rax,QWORD PTR [rip+0x77aeb]        # 0x14008ad50
   140013265:	mov    QWORD PTR [rax+0x10],rax
   140013269:	mov    QWORD PTR [rip+0x77ae4],0x0        # 0x14008ad58
   140013274:	add    rsp,0x20
   140013278:	pop    rdi
   140013279:	ret    
   14001327a:	int3   
   14001327b:	int3   
   14001327c:	int3   
   14001327d:	int3   
   14001327e:	int3   
   14001327f:	int3   
   140013280:	mov    QWORD PTR [rsp+0x8],rbx
   140013285:	mov    QWORD PTR [rsp+0x10],rsi
   14001328a:	push   rdi
   14001328b:	sub    rsp,0x20
   14001328f:	cmp    BYTE PTR [rdx+0x29],0x0
   140013293:	mov    rdi,rdx
   140013296:	mov    rsi,rcx
   140013299:	mov    rbx,rdx
   14001329c:	jne    0x1400132c0
   14001329e:	xchg   ax,ax
   1400132a0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400132a4:	mov    rcx,rsi
   1400132a7:	call   0x140013280
   1400132ac:	mov    rbx,QWORD PTR [rbx]
   1400132af:	mov    rcx,rdi
   1400132b2:	call   0x1400330c0
   1400132b7:	cmp    BYTE PTR [rbx+0x29],0x0
   1400132bb:	mov    rdi,rbx
   1400132be:	je     0x1400132a0
   1400132c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400132c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400132ca:	add    rsp,0x20
   1400132ce:	pop    rdi
   1400132cf:	ret    
   1400132d0:	mov    rdx,QWORD PTR [rcx+0x10]
   1400132d4:	mov    rax,QWORD PTR [rdx]
   1400132d7:	mov    QWORD PTR [rcx+0x10],rax
   1400132db:	mov    rax,QWORD PTR [rdx]
   1400132de:	cmp    BYTE PTR [rax+0x29],0x0
   1400132e2:	jne    0x1400132e8
   1400132e4:	mov    QWORD PTR [rax+0x8],rcx
   1400132e8:	mov    rax,QWORD PTR [rcx+0x8]
   1400132ec:	mov    QWORD PTR [rdx+0x8],rax
   1400132f0:	mov    rax,QWORD PTR [rip+0x77a59]        # 0x14008ad50
   1400132f7:	cmp    rcx,QWORD PTR [rax+0x8]
   1400132fb:	jne    0x140013309
   1400132fd:	mov    QWORD PTR [rax+0x8],rdx
   140013301:	mov    QWORD PTR [rdx],rcx
   140013304:	mov    QWORD PTR [rcx+0x8],rdx
   140013308:	ret    
   140013309:	mov    rax,QWORD PTR [rcx+0x8]
   14001330d:	cmp    rcx,QWORD PTR [rax]
   140013310:	jne    0x14001331d
   140013312:	mov    QWORD PTR [rax],rdx
   140013315:	mov    QWORD PTR [rdx],rcx
   140013318:	mov    QWORD PTR [rcx+0x8],rdx
   14001331c:	ret    
   14001331d:	mov    QWORD PTR [rax+0x10],rdx
   140013321:	mov    QWORD PTR [rdx],rcx
   140013324:	mov    QWORD PTR [rcx+0x8],rdx
   140013328:	ret    
   140013329:	int3   
   14001332a:	int3   
   14001332b:	int3   
   14001332c:	int3   
   14001332d:	int3   
   14001332e:	int3   
   14001332f:	int3   
   140013330:	mov    rdx,QWORD PTR [rcx]
   140013333:	mov    rax,QWORD PTR [rdx+0x10]
   140013337:	mov    QWORD PTR [rcx],rax
   14001333a:	mov    rax,QWORD PTR [rdx+0x10]
   14001333e:	cmp    BYTE PTR [rax+0x29],0x0
   140013342:	jne    0x140013348
   140013344:	mov    QWORD PTR [rax+0x8],rcx
   140013348:	mov    rax,QWORD PTR [rcx+0x8]
   14001334c:	mov    QWORD PTR [rdx+0x8],rax
   140013350:	mov    rax,QWORD PTR [rip+0x779f9]        # 0x14008ad50
   140013357:	cmp    rcx,QWORD PTR [rax+0x8]
   14001335b:	jne    0x14001336a
   14001335d:	mov    QWORD PTR [rax+0x8],rdx
   140013361:	mov    QWORD PTR [rdx+0x10],rcx
   140013365:	mov    QWORD PTR [rcx+0x8],rdx
   140013369:	ret    
   14001336a:	mov    rax,QWORD PTR [rcx+0x8]
   14001336e:	cmp    rcx,QWORD PTR [rax+0x10]
   140013372:	jne    0x140013381
   140013374:	mov    QWORD PTR [rax+0x10],rdx
   140013378:	mov    QWORD PTR [rdx+0x10],rcx
   14001337c:	mov    QWORD PTR [rcx+0x8],rdx
   140013380:	ret    
   140013381:	mov    QWORD PTR [rax],rdx
   140013384:	mov    QWORD PTR [rdx+0x10],rcx
   140013388:	mov    QWORD PTR [rcx+0x8],rdx
   14001338c:	ret    
   14001338d:	int3   
   14001338e:	int3   
   14001338f:	int3   
   140013390:	rex push rbx
   140013392:	sub    rsp,0x30
   140013396:	cmp    QWORD PTR [rip+0x779ba],0x0        # 0x14008ad58
   14001339e:	mov    r9,r8
   1400133a1:	mov    rbx,rcx
   1400133a4:	jne    0x1400133bd
   1400133a6:	mov    r8,QWORD PTR [rip+0x779a3]        # 0x14008ad50
   1400133ad:	mov    dl,0x1
   1400133af:	call   0x1400136a0
   1400133b4:	mov    rax,rbx
   1400133b7:	add    rsp,0x30
   1400133bb:	pop    rbx
   1400133bc:	ret    
   1400133bd:	mov    r11,QWORD PTR [rip+0x7798c]        # 0x14008ad50
   1400133c4:	mov    QWORD PTR [rsp+0x40],rdi
   1400133c9:	cmp    rdx,QWORD PTR [r11]
   1400133cc:	jne    0x1400133f4
   1400133ce:	mov    rax,QWORD PTR [rdx+0x18]
   1400133d2:	cmp    QWORD PTR [r8+0x18],rax
   1400133d6:	jae    0x14001355a
   1400133dc:	mov    r8,rdx
   1400133df:	mov    dl,0x1
   1400133e1:	call   0x1400136a0
   1400133e6:	mov    rdi,QWORD PTR [rsp+0x40]
   1400133eb:	mov    rax,rbx
   1400133ee:	add    rsp,0x30
   1400133f2:	pop    rbx
   1400133f3:	ret    
   1400133f4:	cmp    rdx,r11
   1400133f7:	jne    0x140013420
   1400133f9:	mov    r8,QWORD PTR [r11+0x10]
   1400133fd:	mov    rax,QWORD PTR [r9+0x18]
   140013401:	cmp    QWORD PTR [r8+0x18],rax
   140013405:	jae    0x14001355a
   14001340b:	xor    edx,edx
   14001340d:	call   0x1400136a0
   140013412:	mov    rdi,QWORD PTR [rsp+0x40]
   140013417:	mov    rax,rbx
   14001341a:	add    rsp,0x30
   14001341e:	pop    rbx
   14001341f:	ret    
   140013420:	mov    rdi,QWORD PTR [r8+0x18]
   140013424:	mov    r10,QWORD PTR [rdx+0x18]
   140013428:	cmp    r10,rdi
   14001342b:	jbe    0x1400134cc
   140013431:	cmp    BYTE PTR [rdx+0x29],0x0
   140013435:	mov    rax,rdx
   140013438:	je     0x140013440
   14001343a:	mov    r8,QWORD PTR [rdx+0x10]
   14001343e:	jmp    0x14001349d
   140013440:	mov    r8,QWORD PTR [rdx]
   140013443:	cmp    BYTE PTR [r8+0x29],0x0
   140013448:	jne    0x14001346f
   14001344a:	mov    rax,QWORD PTR [r8+0x10]
   14001344e:	cmp    BYTE PTR [rax+0x29],0x0
   140013452:	jne    0x14001349d
   140013454:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013460:	mov    r8,rax
   140013463:	mov    rax,QWORD PTR [rax+0x10]
   140013467:	cmp    BYTE PTR [rax+0x29],0x0
   14001346b:	je     0x140013460
   14001346d:	jmp    0x14001349d
   14001346f:	mov    rcx,QWORD PTR [rdx+0x8]
   140013473:	cmp    BYTE PTR [rcx+0x29],0x0
   140013477:	jne    0x140013492
   140013479:	nop    DWORD PTR [rax+0x0]
   140013480:	cmp    rax,QWORD PTR [rcx]
   140013483:	jne    0x140013492
   140013485:	mov    rax,rcx
   140013488:	mov    rcx,QWORD PTR [rcx+0x8]
   14001348c:	cmp    BYTE PTR [rcx+0x29],0x0
   140013490:	je     0x140013480
   140013492:	cmp    BYTE PTR [rax+0x29],0x0
   140013496:	mov    r8,rax
   140013499:	cmove  r8,rcx
   14001349d:	cmp    QWORD PTR [r8+0x18],rdi
   1400134a1:	jae    0x1400134c9
   1400134a3:	mov    rax,QWORD PTR [r8+0x10]
   1400134a7:	mov    rcx,rbx
   1400134aa:	cmp    BYTE PTR [rax+0x29],0x0
   1400134ae:	je     0x1400133dc
   1400134b4:	xor    edx,edx
   1400134b6:	call   0x1400136a0
   1400134bb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400134c0:	mov    rax,rbx
   1400134c3:	add    rsp,0x30
   1400134c7:	pop    rbx
   1400134c8:	ret    
   1400134c9:	cmp    r10,rdi
   1400134cc:	jae    0x14001355a
   1400134d2:	cmp    BYTE PTR [rdx+0x29],0x0
   1400134d6:	mov    r8,rdx
   1400134d9:	jne    0x140013526
   1400134db:	mov    rax,QWORD PTR [rdx+0x10]
   1400134df:	cmp    BYTE PTR [rax+0x29],0x0
   1400134e3:	jne    0x1400134ff
   1400134e5:	mov    r8,rax
   1400134e8:	mov    rax,QWORD PTR [rax]
   1400134eb:	cmp    BYTE PTR [rax+0x29],0x0
   1400134ef:	jne    0x140013526
   1400134f1:	mov    r8,rax
   1400134f4:	mov    rax,QWORD PTR [rax]
   1400134f7:	cmp    BYTE PTR [rax+0x29],0x0
   1400134fb:	je     0x1400134f1
   1400134fd:	jmp    0x140013526
   1400134ff:	mov    rax,QWORD PTR [rdx+0x8]
   140013503:	cmp    BYTE PTR [rax+0x29],0x0
   140013507:	jne    0x140013523
   140013509:	nop    DWORD PTR [rax+0x0]
   140013510:	cmp    r8,QWORD PTR [rax+0x10]
   140013514:	jne    0x140013523
   140013516:	mov    r8,rax
   140013519:	mov    rax,QWORD PTR [rax+0x8]
   14001351d:	cmp    BYTE PTR [rax+0x29],0x0
   140013521:	je     0x140013510
   140013523:	mov    r8,rax
   140013526:	cmp    r8,r11
   140013529:	je     0x140013531
   14001352b:	cmp    rdi,QWORD PTR [r8+0x18]
   14001352f:	jae    0x14001355a
   140013531:	mov    rax,QWORD PTR [rdx+0x10]
   140013535:	mov    rcx,rbx
   140013538:	cmp    BYTE PTR [rax+0x29],0x0
   14001353c:	je     0x1400133df
   140013542:	mov    r8,rdx
   140013545:	xor    edx,edx
   140013547:	call   0x1400136a0
   14001354c:	mov    rdi,QWORD PTR [rsp+0x40]
   140013551:	mov    rax,rbx
   140013554:	add    rsp,0x30
   140013558:	pop    rbx
   140013559:	ret    
   14001355a:	lea    rcx,[rsp+0x20]
   14001355f:	mov    rdx,r9
   140013562:	call   0x140013580
   140013567:	mov    rdi,QWORD PTR [rsp+0x40]
   14001356c:	mov    rcx,QWORD PTR [rax]
   14001356f:	mov    rax,rbx
   140013572:	mov    QWORD PTR [rbx],rcx
   140013575:	add    rsp,0x30
   140013579:	pop    rbx
   14001357a:	ret    
   14001357b:	int3   
   14001357c:	int3   
   14001357d:	int3   
   14001357e:	int3   
   14001357f:	int3   
   140013580:	mov    QWORD PTR [rsp+0x8],rbx
   140013585:	push   rdi
   140013586:	sub    rsp,0x20
   14001358a:	mov    r10,QWORD PTR [rip+0x777bf]        # 0x14008ad50
   140013591:	mov    r11,rdx
   140013594:	mov    rdi,rcx
   140013597:	mov    rax,QWORD PTR [r10+0x8]
   14001359b:	mov    r8,r10
   14001359e:	mov    dl,0x1
   1400135a0:	cmp    BYTE PTR [rax+0x29],0x0
   1400135a4:	jne    0x1400135cd
   1400135a6:	mov    r9,QWORD PTR [r11+0x18]
   1400135aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400135b0:	cmp    r9,QWORD PTR [rax+0x18]
   1400135b4:	mov    r8,rax
   1400135b7:	setb   dl
   1400135ba:	test   dl,dl
   1400135bc:	je     0x1400135c3
   1400135be:	mov    rax,QWORD PTR [rax]
   1400135c1:	jmp    0x1400135c7
   1400135c3:	mov    rax,QWORD PTR [rax+0x10]
   1400135c7:	cmp    BYTE PTR [rax+0x29],0x0
   1400135cb:	je     0x1400135b0
   1400135cd:	mov    rbx,r8
   1400135d0:	test   dl,dl
   1400135d2:	je     0x14001366a
   1400135d8:	cmp    r8,QWORD PTR [r10]
   1400135db:	jne    0x140013604
   1400135dd:	mov    dl,0x1
   1400135df:	lea    rcx,[rsp+0x38]
   1400135e4:	mov    r9,r11
   1400135e7:	call   0x1400136a0
   1400135ec:	mov    BYTE PTR [rdi+0x8],0x1
   1400135f0:	mov    rcx,QWORD PTR [rax]
   1400135f3:	mov    rax,rdi
   1400135f6:	mov    QWORD PTR [rdi],rcx
   1400135f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400135fe:	add    rsp,0x20
   140013602:	pop    rdi
   140013603:	ret    
   140013604:	cmp    BYTE PTR [r8+0x29],0x0
   140013609:	je     0x140013611
   14001360b:	mov    rbx,QWORD PTR [r8+0x10]
   14001360f:	jmp    0x14001366a
   140013611:	mov    rax,QWORD PTR [r8]
   140013614:	cmp    BYTE PTR [rax+0x29],0x0
   140013618:	jne    0x14001363f
   14001361a:	mov    rbx,rax
   14001361d:	mov    rax,QWORD PTR [rax+0x10]
   140013621:	cmp    BYTE PTR [rax+0x29],0x0
   140013625:	jne    0x14001366a
   140013627:	nop    WORD PTR [rax+rax*1+0x0]
   140013630:	mov    rbx,rax
   140013633:	mov    rax,QWORD PTR [rax+0x10]
   140013637:	cmp    BYTE PTR [rax+0x29],0x0
   14001363b:	je     0x140013630
   14001363d:	jmp    0x14001366a
   14001363f:	mov    rax,QWORD PTR [r8+0x8]
   140013643:	cmp    BYTE PTR [rax+0x29],0x0
   140013647:	jne    0x140013662
   140013649:	nop    DWORD PTR [rax+0x0]
   140013650:	cmp    rbx,QWORD PTR [rax]
   140013653:	jne    0x140013662
   140013655:	mov    rbx,rax
   140013658:	mov    rax,QWORD PTR [rax+0x8]
   14001365c:	cmp    BYTE PTR [rax+0x29],0x0
   140013660:	je     0x140013650
   140013662:	cmp    BYTE PTR [rbx+0x29],0x0
   140013666:	cmove  rbx,rax
   14001366a:	mov    rax,QWORD PTR [r11+0x18]
   14001366e:	cmp    QWORD PTR [rbx+0x18],rax
   140013672:	jb     0x1400135df
   140013678:	mov    rcx,r11
   14001367b:	call   0x1400330c0
   140013680:	mov    QWORD PTR [rdi],rbx
   140013683:	mov    rbx,QWORD PTR [rsp+0x30]
   140013688:	mov    BYTE PTR [rdi+0x8],0x0
   14001368c:	mov    rax,rdi
   14001368f:	add    rsp,0x20
   140013693:	pop    rdi
   140013694:	ret    
   140013695:	int3   
   140013696:	int3   
   140013697:	int3   
   140013698:	int3   
   140013699:	int3   
   14001369a:	int3   
   14001369b:	int3   
   14001369c:	int3   
   14001369d:	int3   
   14001369e:	int3   
   14001369f:	int3   
   1400136a0:	sub    rsp,0x28
   1400136a4:	mov    rax,QWORD PTR [rip+0x776ad]        # 0x14008ad58
   1400136ab:	mov    r10,rcx
   1400136ae:	movabs rcx,0xffffffffffffffe
   1400136b8:	cmp    rax,rcx
   1400136bb:	jb     0x1400136d2
   1400136bd:	mov    rcx,r9
   1400136c0:	call   0x1400330c0
   1400136c5:	lea    rcx,[rip+0x57c04]        # 0x14006b2d0
   1400136cc:	call   0x140032d00
   1400136d1:	int3   
   1400136d2:	inc    rax
   1400136d5:	mov    QWORD PTR [rip+0x7767c],rax        # 0x14008ad58
   1400136dc:	mov    QWORD PTR [r9+0x8],r8
   1400136e0:	mov    rax,QWORD PTR [rip+0x77669]        # 0x14008ad50
   1400136e7:	cmp    r8,rax
   1400136ea:	jne    0x140013703
   1400136ec:	mov    QWORD PTR [rax+0x8],r9
   1400136f0:	mov    rax,QWORD PTR [rip+0x77659]        # 0x14008ad50
   1400136f7:	mov    QWORD PTR [rax],r9
   1400136fa:	mov    rax,QWORD PTR [rip+0x7764f]        # 0x14008ad50
   140013701:	jmp    0x14001372c
   140013703:	test   dl,dl
   140013705:	je     0x14001371b
   140013707:	mov    QWORD PTR [r8],r9
   14001370a:	mov    rax,QWORD PTR [rip+0x7763f]        # 0x14008ad50
   140013711:	cmp    r8,QWORD PTR [rax]
   140013714:	jne    0x140013730
   140013716:	mov    QWORD PTR [rax],r9
   140013719:	jmp    0x140013730
   14001371b:	mov    QWORD PTR [r8+0x10],r9
   14001371f:	mov    rax,QWORD PTR [rip+0x7762a]        # 0x14008ad50
   140013726:	cmp    r8,QWORD PTR [rax+0x10]
   14001372a:	jne    0x140013730
   14001372c:	mov    QWORD PTR [rax+0x10],r9
   140013730:	mov    rax,QWORD PTR [r9+0x8]
   140013734:	mov    rdx,r9
   140013737:	cmp    BYTE PTR [rax+0x28],0x0
   14001373b:	jne    0x140013927
   140013741:	mov    rax,QWORD PTR [rdx+0x8]
   140013745:	mov    rcx,QWORD PTR [rax+0x8]
   140013749:	cmp    rax,QWORD PTR [rcx]
   14001374c:	jne    0x14001382f
   140013752:	mov    r8,QWORD PTR [rcx+0x10]
   140013756:	cmp    BYTE PTR [r8+0x28],0x0
   14001375b:	je     0x140013839
   140013761:	cmp    rdx,QWORD PTR [rax+0x10]
   140013765:	jne    0x1400137b6
   140013767:	mov    rcx,QWORD PTR [rax+0x10]
   14001376b:	mov    rdx,rax
   14001376e:	mov    rax,QWORD PTR [rcx]
   140013771:	mov    QWORD PTR [rdx+0x10],rax
   140013775:	mov    rax,QWORD PTR [rcx]
   140013778:	cmp    BYTE PTR [rax+0x29],0x0
   14001377c:	jne    0x140013782
   14001377e:	mov    QWORD PTR [rax+0x8],rdx
   140013782:	mov    rax,QWORD PTR [rdx+0x8]
   140013786:	mov    QWORD PTR [rcx+0x8],rax
   14001378a:	mov    rax,QWORD PTR [rip+0x775bf]        # 0x14008ad50
   140013791:	cmp    rdx,QWORD PTR [rax+0x8]
   140013795:	jne    0x14001379d
   140013797:	mov    QWORD PTR [rax+0x8],rcx
   14001379b:	jmp    0x1400137af
   14001379d:	mov    rax,QWORD PTR [rdx+0x8]
   1400137a1:	cmp    rdx,QWORD PTR [rax]
   1400137a4:	jne    0x1400137ab
   1400137a6:	mov    QWORD PTR [rax],rcx
   1400137a9:	jmp    0x1400137af
   1400137ab:	mov    QWORD PTR [rax+0x10],rcx
   1400137af:	mov    QWORD PTR [rcx],rdx
   1400137b2:	mov    QWORD PTR [rdx+0x8],rcx
   1400137b6:	mov    rax,QWORD PTR [rdx+0x8]
   1400137ba:	mov    BYTE PTR [rax+0x28],0x1
   1400137be:	mov    rax,QWORD PTR [rdx+0x8]
   1400137c2:	mov    rcx,QWORD PTR [rax+0x8]
   1400137c6:	mov    BYTE PTR [rcx+0x28],0x0
   1400137ca:	mov    rax,QWORD PTR [rdx+0x8]
   1400137ce:	mov    rcx,QWORD PTR [rax+0x8]
   1400137d2:	mov    r8,QWORD PTR [rcx]
   1400137d5:	mov    rax,QWORD PTR [r8+0x10]
   1400137d9:	mov    QWORD PTR [rcx],rax
   1400137dc:	mov    rax,QWORD PTR [r8+0x10]
   1400137e0:	cmp    BYTE PTR [rax+0x29],0x0
   1400137e4:	jne    0x1400137ea
   1400137e6:	mov    QWORD PTR [rax+0x8],rcx
   1400137ea:	mov    rax,QWORD PTR [rcx+0x8]
   1400137ee:	mov    QWORD PTR [r8+0x8],rax
   1400137f2:	mov    rax,QWORD PTR [rip+0x77557]        # 0x14008ad50
   1400137f9:	cmp    rcx,QWORD PTR [rax+0x8]
   1400137fd:	jne    0x14001380c
   1400137ff:	mov    QWORD PTR [rax+0x8],r8
   140013803:	mov    QWORD PTR [r8+0x10],rcx
   140013807:	jmp    0x140013915
   14001380c:	mov    rax,QWORD PTR [rcx+0x8]
   140013810:	cmp    rcx,QWORD PTR [rax+0x10]
   140013814:	jne    0x140013823
   140013816:	mov    QWORD PTR [rax+0x10],r8
   14001381a:	mov    QWORD PTR [r8+0x10],rcx
   14001381e:	jmp    0x140013915
   140013823:	mov    QWORD PTR [rax],r8
   140013826:	mov    QWORD PTR [r8+0x10],rcx
   14001382a:	jmp    0x140013915
   14001382f:	mov    r8,QWORD PTR [rcx]
   140013832:	cmp    BYTE PTR [r8+0x28],0x0
   140013837:	jne    0x14001385b
   140013839:	mov    BYTE PTR [rax+0x28],0x1
   14001383d:	mov    BYTE PTR [r8+0x28],0x1
   140013842:	mov    rax,QWORD PTR [rdx+0x8]
   140013846:	mov    rcx,QWORD PTR [rax+0x8]
   14001384a:	mov    BYTE PTR [rcx+0x28],0x0
   14001384e:	mov    rax,QWORD PTR [rdx+0x8]
   140013852:	mov    rdx,QWORD PTR [rax+0x8]
   140013856:	jmp    0x140013919
   14001385b:	cmp    rdx,QWORD PTR [rax]
   14001385e:	jne    0x1400138b1
   140013860:	mov    rcx,QWORD PTR [rax]
   140013863:	mov    rdx,rax
   140013866:	mov    rax,QWORD PTR [rcx+0x10]
   14001386a:	mov    QWORD PTR [rdx],rax
   14001386d:	mov    rax,QWORD PTR [rcx+0x10]
   140013871:	cmp    BYTE PTR [rax+0x29],0x0
   140013875:	jne    0x14001387b
   140013877:	mov    QWORD PTR [rax+0x8],rdx
   14001387b:	mov    rax,QWORD PTR [rdx+0x8]
   14001387f:	mov    QWORD PTR [rcx+0x8],rax
   140013883:	mov    rax,QWORD PTR [rip+0x774c6]        # 0x14008ad50
   14001388a:	cmp    rdx,QWORD PTR [rax+0x8]
   14001388e:	jne    0x140013896
   140013890:	mov    QWORD PTR [rax+0x8],rcx
   140013894:	jmp    0x1400138a9
   140013896:	mov    rax,QWORD PTR [rdx+0x8]
   14001389a:	cmp    rdx,QWORD PTR [rax+0x10]
   14001389e:	jne    0x1400138a6
   1400138a0:	mov    QWORD PTR [rax+0x10],rcx
   1400138a4:	jmp    0x1400138a9
   1400138a6:	mov    QWORD PTR [rax],rcx
   1400138a9:	mov    QWORD PTR [rcx+0x10],rdx
   1400138ad:	mov    QWORD PTR [rdx+0x8],rcx
   1400138b1:	mov    rax,QWORD PTR [rdx+0x8]
   1400138b5:	mov    BYTE PTR [rax+0x28],0x1
   1400138b9:	mov    rax,QWORD PTR [rdx+0x8]
   1400138bd:	mov    rcx,QWORD PTR [rax+0x8]
   1400138c1:	mov    BYTE PTR [rcx+0x28],0x0
   1400138c5:	mov    rax,QWORD PTR [rdx+0x8]
   1400138c9:	mov    rcx,QWORD PTR [rax+0x8]
   1400138cd:	mov    r8,QWORD PTR [rcx+0x10]
   1400138d1:	mov    rax,QWORD PTR [r8]
   1400138d4:	mov    QWORD PTR [rcx+0x10],rax
   1400138d8:	mov    rax,QWORD PTR [r8]
   1400138db:	cmp    BYTE PTR [rax+0x29],0x0
   1400138df:	jne    0x1400138e5
   1400138e1:	mov    QWORD PTR [rax+0x8],rcx
   1400138e5:	mov    rax,QWORD PTR [rcx+0x8]
   1400138e9:	mov    QWORD PTR [r8+0x8],rax
   1400138ed:	mov    rax,QWORD PTR [rip+0x7745c]        # 0x14008ad50
   1400138f4:	cmp    rcx,QWORD PTR [rax+0x8]
   1400138f8:	jne    0x140013900
   1400138fa:	mov    QWORD PTR [rax+0x8],r8
   1400138fe:	jmp    0x140013912
   140013900:	mov    rax,QWORD PTR [rcx+0x8]
   140013904:	cmp    rcx,QWORD PTR [rax]
   140013907:	jne    0x14001390e
   140013909:	mov    QWORD PTR [rax],r8
   14001390c:	jmp    0x140013912
   14001390e:	mov    QWORD PTR [rax+0x10],r8
   140013912:	mov    QWORD PTR [r8],rcx
   140013915:	mov    QWORD PTR [rcx+0x8],r8
   140013919:	mov    rax,QWORD PTR [rdx+0x8]
   14001391d:	cmp    BYTE PTR [rax+0x28],0x0
   140013921:	je     0x140013741
   140013927:	mov    rax,QWORD PTR [rip+0x77422]        # 0x14008ad50
   14001392e:	mov    QWORD PTR [r10],r9
   140013931:	mov    rcx,QWORD PTR [rax+0x8]
   140013935:	mov    rax,r10
   140013938:	mov    BYTE PTR [rcx+0x28],0x1
   14001393c:	add    rsp,0x28
   140013940:	ret    
   140013941:	int3   
   140013942:	int3   
   140013943:	int3   
   140013944:	int3   
   140013945:	int3   
   140013946:	int3   
   140013947:	int3   
   140013948:	int3   
   140013949:	int3   
   14001394a:	int3   
   14001394b:	int3   
   14001394c:	int3   
   14001394d:	int3   
   14001394e:	int3   
   14001394f:	int3   
   140013950:	rex push rbx
   140013952:	sub    rsp,0x30
   140013956:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001395f:	mov    rbx,rcx
   140013962:	call   0x140013990
   140013967:	mov    QWORD PTR [rsp+0x48],rax
   14001396c:	lea    r8,[rax+0x18]
   140013970:	test   r8,r8
   140013973:	je     0x140013983
   140013975:	mov    rdx,QWORD PTR [rbx]
   140013978:	mov    QWORD PTR [r8],rdx
   14001397b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001397f:	mov    QWORD PTR [r8+0x8],rcx
   140013983:	add    rsp,0x30
   140013987:	pop    rbx
   140013988:	ret    
   140013989:	int3   
   14001398a:	int3   
   14001398b:	int3   
   14001398c:	int3   
   14001398d:	int3   
   14001398e:	int3   
   14001398f:	int3   
   140013990:	sub    rsp,0x48
   140013994:	mov    ecx,0x30
   140013999:	call   0x1400331a0
   14001399e:	test   rax,rax
   1400139a1:	je     0x1400139ce
   1400139a3:	mov    rcx,QWORD PTR [rip+0x773a6]        # 0x14008ad50
   1400139aa:	mov    QWORD PTR [rax],rcx
   1400139ad:	mov    rcx,QWORD PTR [rip+0x7739c]        # 0x14008ad50
   1400139b4:	mov    QWORD PTR [rax+0x8],rcx
   1400139b8:	mov    rcx,QWORD PTR [rip+0x77391]        # 0x14008ad50
   1400139bf:	mov    WORD PTR [rax+0x28],0x0
   1400139c5:	mov    QWORD PTR [rax+0x10],rcx
   1400139c9:	add    rsp,0x48
   1400139cd:	ret    
   1400139ce:	lea    rdx,[rsp+0x50]
   1400139d3:	lea    rcx,[rsp+0x20]
   1400139d8:	mov    QWORD PTR [rsp+0x50],0x0
   1400139e1:	call   0x140032fd4
   1400139e6:	lea    r11,[rip+0x54ea3]        # 0x140068890
   1400139ed:	lea    rdx,[rip+0x6fa2c]        # 0x140083420
   1400139f4:	lea    rcx,[rsp+0x20]
   1400139f9:	mov    QWORD PTR [rsp+0x20],r11
   1400139fe:	call   0x140036358
   140013a03:	int3   
   140013a04:	int3   
   140013a05:	int3   
   140013a06:	int3   
   140013a07:	int3   
   140013a08:	int3   
   140013a09:	int3   
   140013a0a:	int3   
   140013a0b:	int3   
   140013a0c:	int3   
   140013a0d:	int3   
   140013a0e:	int3   
   140013a0f:	int3   
   140013a10:	sub    rsp,0x28
   140013a14:	lea    rax,[rip+0x599dd]        # 0x14006d3f8
   140013a1b:	lea    rcx,[rip+0x76a96]        # 0x14008a4b8
   140013a22:	mov    QWORD PTR [rip+0x76a77],rax        # 0x14008a4a0
   140013a29:	call   0x140018350
   140013a2e:	mov    rax,QWORD PTR [rip+0x72d23]        # 0x140086758
   140013a35:	lea    rcx,[rip+0x72d1c]        # 0x140086758
   140013a3c:	call   QWORD PTR [rax+0x18]
   140013a3f:	lea    rcx,[rip+0x72d12]        # 0x140086758
   140013a46:	add    rax,0x18
   140013a4a:	mov    QWORD PTR [rip+0x76cc7],rax        # 0x14008a718
   140013a51:	mov    rax,QWORD PTR [rip+0x72d00]        # 0x140086758
   140013a58:	call   QWORD PTR [rax+0x18]
   140013a5b:	add    rax,0x18
   140013a5f:	mov    QWORD PTR [rip+0x76cba],rax        # 0x14008a720
   140013a66:	xor    eax,eax
   140013a68:	mov    QWORD PTR [rip+0x76cb9],rax        # 0x14008a728
   140013a6f:	mov    QWORD PTR [rip+0x76a3a],rax        # 0x14008a4b0
   140013a76:	mov    QWORD PTR [rip+0x76a2b],rax        # 0x14008a4a8
   140013a7d:	lea    rax,[rip+0x76a1c]        # 0x14008a4a0
   140013a84:	add    rsp,0x28
   140013a88:	ret    
   140013a89:	int3   
   140013a8a:	int3   
   140013a8b:	int3   
   140013a8c:	int3   
   140013a8d:	int3   
   140013a8e:	int3   
   140013a8f:	int3   
   140013a90:	mov    QWORD PTR [rsp+0x8],rbx
   140013a95:	push   rdi
   140013a96:	sub    rsp,0x20
   140013a9a:	mov    ebx,edx
   140013a9c:	mov    rdi,rcx
   140013a9f:	call   0x140013ac0
   140013aa4:	test   bl,0x1
   140013aa7:	je     0x140013ab1
   140013aa9:	mov    rcx,rdi
   140013aac:	call   0x1400330c0
   140013ab1:	mov    rax,rdi
   140013ab4:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ab9:	add    rsp,0x20
   140013abd:	pop    rdi
   140013abe:	ret    
   140013abf:	int3   
   140013ac0:	mov    QWORD PTR [rsp+0x8],rcx
   140013ac5:	push   rdi
   140013ac6:	sub    rsp,0x30
   140013aca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013ad3:	mov    QWORD PTR [rsp+0x48],rbx
   140013ad8:	mov    QWORD PTR [rsp+0x50],rsi
   140013add:	mov    rbx,rcx
   140013ae0:	lea    rax,[rip+0x59911]        # 0x14006d3f8
   140013ae7:	mov    QWORD PTR [rcx],rax
   140013aea:	mov    rcx,QWORD PTR [rcx+0x10]
   140013aee:	call   QWORD PTR [rip+0x548a4]        # 0x140068398
   140013af4:	mov    rcx,QWORD PTR [rbx+0x8]
   140013af8:	call   QWORD PTR [rip+0x5454a]        # 0x140068048
   140013afe:	mov    rcx,QWORD PTR [rbx+0x28]
   140013b02:	xor    esi,esi
   140013b04:	test   rcx,rcx
   140013b07:	je     0x140013b1b
   140013b09:	mov    rax,QWORD PTR [rbx+0x140]
   140013b10:	test   rax,rax
   140013b13:	je     0x140013b1b
   140013b15:	call   rax
   140013b17:	mov    QWORD PTR [rbx+0x28],rsi
   140013b1b:	mov    rcx,QWORD PTR [rbx+0x20]
   140013b1f:	test   rcx,rcx
   140013b22:	je     0x140013b2e
   140013b24:	call   QWORD PTR [rip+0x54616]        # 0x140068140
   140013b2a:	mov    QWORD PTR [rbx+0x20],rsi
   140013b2e:	mov    QWORD PTR [rbx+0x10],rsi
   140013b32:	mov    QWORD PTR [rbx+0x8],rsi
   140013b36:	mov    rcx,QWORD PTR [rbx+0x288]
   140013b3d:	test   rcx,rcx
   140013b40:	je     0x140013b49
   140013b42:	mov    rax,QWORD PTR [rcx]
   140013b45:	call   QWORD PTR [rax+0x10]
   140013b48:	nop
   140013b49:	mov    rdx,QWORD PTR [rbx+0x280]
   140013b50:	sub    rdx,0x18
   140013b54:	or     edi,0xffffffff
   140013b57:	mov    eax,edi
   140013b59:	lock xadd DWORD PTR [rdx+0x10],eax
   140013b5e:	dec    eax
   140013b60:	test   eax,eax
   140013b62:	jg     0x140013b6e
   140013b64:	mov    rcx,QWORD PTR [rdx]
   140013b67:	mov    rax,QWORD PTR [rcx]
   140013b6a:	call   QWORD PTR [rax+0x8]
   140013b6d:	nop
   140013b6e:	mov    rdx,QWORD PTR [rbx+0x278]
   140013b75:	sub    rdx,0x18
   140013b79:	lock xadd DWORD PTR [rdx+0x10],edi
   140013b7e:	dec    edi
   140013b80:	test   edi,edi
   140013b82:	jg     0x140013b8e
   140013b84:	mov    rcx,QWORD PTR [rdx]
   140013b87:	mov    rax,QWORD PTR [rcx]
   140013b8a:	call   QWORD PTR [rax+0x8]
   140013b8d:	nop
   140013b8e:	lea    rax,[rip+0x5a8cb]        # 0x14006e460
   140013b95:	mov    QWORD PTR [rbx+0x18],rax
   140013b99:	mov    rcx,QWORD PTR [rbx+0x28]
   140013b9d:	test   rcx,rcx
   140013ba0:	je     0x140013bc7
   140013ba2:	mov    rax,QWORD PTR [rbx+0x140]
   140013ba9:	test   rax,rax
   140013bac:	je     0x140013bb4
   140013bae:	call   rax
   140013bb0:	mov    QWORD PTR [rbx+0x28],rsi
   140013bb4:	mov    rcx,QWORD PTR [rbx+0x20]
   140013bb8:	test   rcx,rcx
   140013bbb:	je     0x140013bc7
   140013bbd:	call   QWORD PTR [rip+0x5457d]        # 0x140068140
   140013bc3:	mov    QWORD PTR [rbx+0x20],rsi
   140013bc7:	mov    rcx,QWORD PTR [rbx+0x20]
   140013bcb:	test   rcx,rcx
   140013bce:	je     0x140013bda
   140013bd0:	call   QWORD PTR [rip+0x5456a]        # 0x140068140
   140013bd6:	mov    QWORD PTR [rbx+0x20],rsi
   140013bda:	mov    rbx,QWORD PTR [rsp+0x48]
   140013bdf:	mov    rsi,QWORD PTR [rsp+0x50]
   140013be4:	add    rsp,0x30
   140013be8:	pop    rdi
   140013be9:	ret    
   140013bea:	int3   
   140013beb:	int3   
   140013bec:	int3   
   140013bed:	int3   
   140013bee:	int3   
   140013bef:	int3   
   140013bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140013bf5:	push   rdi
   140013bf6:	sub    rsp,0x20
   140013bfa:	mov    rbx,rcx
   140013bfd:	mov    rcx,QWORD PTR [rcx+0x10]
   140013c01:	call   QWORD PTR [rip+0x54791]        # 0x140068398
   140013c07:	mov    rcx,QWORD PTR [rbx+0x8]
   140013c0b:	call   QWORD PTR [rip+0x54437]        # 0x140068048
   140013c11:	mov    rcx,QWORD PTR [rbx+0x28]
   140013c15:	xor    edi,edi
   140013c17:	test   rcx,rcx
   140013c1a:	je     0x140013c2e
   140013c1c:	mov    rax,QWORD PTR [rbx+0x140]
   140013c23:	test   rax,rax
   140013c26:	je     0x140013c2e
   140013c28:	call   rax
   140013c2a:	mov    QWORD PTR [rbx+0x28],rdi
   140013c2e:	mov    rcx,QWORD PTR [rbx+0x20]
   140013c32:	test   rcx,rcx
   140013c35:	je     0x140013c41
   140013c37:	call   QWORD PTR [rip+0x54503]        # 0x140068140
   140013c3d:	mov    QWORD PTR [rbx+0x20],rdi
   140013c41:	mov    QWORD PTR [rbx+0x8],rdi
   140013c45:	mov    QWORD PTR [rbx+0x10],rdi
   140013c49:	mov    rbx,QWORD PTR [rsp+0x30]
   140013c4e:	add    rsp,0x20
   140013c52:	pop    rdi
   140013c53:	ret    
   140013c54:	int3   
   140013c55:	int3   
   140013c56:	int3   
   140013c57:	int3   
   140013c58:	int3   
   140013c59:	int3   
   140013c5a:	int3   
   140013c5b:	int3   
   140013c5c:	int3   
   140013c5d:	int3   
   140013c5e:	int3   
   140013c5f:	int3   
   140013c60:	mov    rax,rsp
   140013c63:	push   rsi
   140013c64:	push   rdi
   140013c65:	push   r12
   140013c67:	sub    rsp,0xe0
   140013c6e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140013c77:	mov    QWORD PTR [rax+0x10],rbx
   140013c7b:	mov    QWORD PTR [rax+0x18],rbp
   140013c7f:	mov    rax,QWORD PTR [rip+0x71422]        # 0x1400850a8
   140013c86:	xor    rax,rsp
   140013c89:	mov    QWORD PTR [rsp+0xd0],rax
   140013c91:	mov    rbp,rcx
   140013c94:	xor    r9d,r9d
   140013c97:	xor    r8d,r8d
   140013c9a:	xor    edx,edx
   140013c9c:	xor    ecx,ecx
   140013c9e:	call   QWORD PTR [rip+0x546dc]        # 0x140068380
   140013ca4:	mov    QWORD PTR [rip+0x76805],rax        # 0x14008a4b0
   140013cab:	lea    r12,[rip+0x577ee]        # 0x14006b4a0
   140013cb2:	test   rax,rax
   140013cb5:	jne    0x140013cde
   140013cb7:	lea    rax,[rip+0x59532]        # 0x14006d1f0
   140013cbe:	mov    QWORD PTR [rsp+0x28],rax
   140013cc3:	mov    QWORD PTR [rsp+0x20],r12
   140013cc8:	xor    r9d,r9d
   140013ccb:	xor    r8d,r8d
   140013cce:	lea    edx,[r9+0x2f]
   140013cd2:	lea    rcx,[rip+0x59537]        # 0x14006d210
   140013cd9:	call   0x140003150
   140013cde:	call   0x140014250
   140013ce3:	test   eax,eax
   140013ce5:	jne    0x140013d0e
   140013ce7:	lea    rax,[rip+0x59572]        # 0x14006d260
   140013cee:	mov    QWORD PTR [rsp+0x28],rax
   140013cf3:	mov    QWORD PTR [rsp+0x20],r12
   140013cf8:	xor    r9d,r9d
   140013cfb:	xor    r8d,r8d
   140013cfe:	lea    edx,[r9+0x34]
   140013d02:	lea    rcx,[rip+0x59507]        # 0x14006d210
   140013d09:	call   0x140003150
   140013d0e:	lea    rdx,[rip+0x59573]        # 0x14006d288
   140013d15:	lea    rcx,[rip+0x7679c]        # 0x14008a4b8
   140013d1c:	call   0x1400185b0
   140013d21:	test   al,al
   140013d23:	jne    0x140013d4c
   140013d25:	lea    rax,[rip+0x59574]        # 0x14006d2a0
   140013d2c:	mov    QWORD PTR [rsp+0x28],rax
   140013d31:	mov    QWORD PTR [rsp+0x20],r12
   140013d36:	xor    r9d,r9d
   140013d39:	xor    r8d,r8d
   140013d3c:	lea    edx,[r9+0x3f]
   140013d40:	lea    rcx,[rip+0x594c9]        # 0x14006d210
   140013d47:	call   0x140003150
   140013d4c:	lea    r8,[rip+0x58395]        # 0x14006c0e8
   140013d53:	lea    rdx,[rip+0x59566]        # 0x14006d2c0
   140013d5a:	lea    rcx,[rsp+0x30]
   140013d5f:	call   0x1400159d0
   140013d64:	nop
   140013d65:	mov    rbx,QWORD PTR [rsp+0x30]
   140013d6a:	lea    rax,[rsp+0x48]
   140013d6f:	mov    QWORD PTR [rsp+0x40],rax
   140013d74:	xor    esi,esi
   140013d76:	test   rbx,rbx
   140013d79:	jne    0x140013d85
   140013d7b:	mov    r8d,esi
   140013d7e:	mov    QWORD PTR [rsp+0x40],rsi
   140013d83:	jmp    0x140013df3
   140013d85:	mov    rcx,rbx
   140013d88:	call   QWORD PTR [rip+0x54652]        # 0x1400683e0
   140013d8e:	lea    edi,[rax+0x1]
   140013d91:	lea    r8,[rsp+0x48]
   140013d96:	mov    edx,edi
   140013d98:	lea    rcx,[rsp+0x40]
   140013d9d:	call   0x140002f80
   140013da2:	movsxd rdx,edi
   140013da5:	mov    r9,rdx
   140013da8:	mov    r8,rbx
   140013dab:	mov    rcx,QWORD PTR [rsp+0x40]
   140013db0:	call   0x140033ccc
   140013db5:	test   eax,eax
   140013db7:	je     0x140013dee
   140013db9:	cmp    eax,0xc
   140013dbc:	je     0x140013de3
   140013dbe:	cmp    eax,0x16
   140013dc1:	je     0x140013dd8
   140013dc3:	cmp    eax,0x22
   140013dc6:	je     0x140013dd8
   140013dc8:	cmp    eax,0x50
   140013dcb:	je     0x140013dee
   140013dcd:	mov    ecx,0x80004005
   140013dd2:	call   0x1400025f0
   140013dd7:	int3   
   140013dd8:	mov    ecx,0x80070057
   140013ddd:	call   0x1400025f0
   140013de2:	int3   
   140013de3:	mov    ecx,0x8007000e
   140013de8:	call   0x1400025f0
   140013ded:	int3   
   140013dee:	mov    r8,QWORD PTR [rsp+0x40]
   140013df3:	lea    rdx,[rip+0x57d46]        # 0x14006bb40
   140013dfa:	lea    rcx,[rip+0x766b7]        # 0x14008a4b8
   140013e01:	call   0x1400189d0
   140013e06:	test   al,al
   140013e08:	sete   dil
   140013e0c:	lea    rax,[rsp+0x48]
   140013e11:	mov    rcx,QWORD PTR [rsp+0x40]
   140013e16:	cmp    rcx,rax
   140013e19:	je     0x140013e20
   140013e1b:	call   0x140033594
   140013e20:	test   dil,dil
   140013e23:	je     0x140013e4c
   140013e25:	lea    rax,[rip+0x594bc]        # 0x14006d2e8
   140013e2c:	mov    QWORD PTR [rsp+0x28],rax
   140013e31:	mov    QWORD PTR [rsp+0x20],r12
   140013e36:	xor    r9d,r9d
   140013e39:	xor    r8d,r8d
   140013e3c:	lea    edx,[r9+0x46]
   140013e40:	lea    rcx,[rip+0x593c9]        # 0x14006d210
   140013e47:	call   0x140003150
   140013e4c:	or     rbx,0xffffffffffffffff
   140013e50:	test   rbp,rbp
   140013e53:	jne    0x140013e59
   140013e55:	mov    ecx,esi
   140013e57:	jmp    0x140013e69
   140013e59:	xor    eax,eax
   140013e5b:	mov    rcx,rbx
   140013e5e:	mov    rdi,rbp
   140013e61:	repnz scas al,BYTE PTR es:[rdi]
   140013e63:	not    rcx
   140013e66:	dec    rcx
   140013e69:	mov    r8d,ecx
   140013e6c:	mov    rdx,rbp
   140013e6f:	lea    rcx,[rip+0x768a2]        # 0x14008a718
   140013e76:	call   0x140008d10
   140013e7b:	mov    rdx,QWORD PTR [rip+0x76896]        # 0x14008a718
   140013e82:	cmp    DWORD PTR [rdx-0x10],0x0
   140013e86:	je     0x140013eae
   140013e88:	lea    rax,[rip+0x76899]        # 0x14008a728
   140013e8f:	mov    QWORD PTR [rsp+0x20],rax
   140013e94:	lea    r9,[rip+0x59565]        # 0x14006d400
   140013e9b:	xor    edx,edx
   140013e9d:	lea    r8d,[rdx+0x17]
   140013ea1:	lea    rcx,[rip+0x54938]        # 0x1400687e0
   140013ea8:	call   QWORD PTR [rip+0x547ca]        # 0x140068678
   140013eae:	xor    ecx,ecx
   140013eb0:	call   QWORD PTR [rip+0x54482]        # 0x140068338
   140013eb6:	mov    rcx,rax
   140013eb9:	mov    edx,0x80
   140013ebe:	call   QWORD PTR [rip+0x546ec]        # 0x1400685b0
   140013ec4:	mov    QWORD PTR [rip+0x76865],rax        # 0x14008a730
   140013ecb:	cmp    QWORD PTR [rip+0x765dd],0x0        # 0x14008a4b0
   140013ed3:	je     0x140013eff
   140013ed5:	cmp    QWORD PTR [rip+0x765cb],0x0        # 0x14008a4a8
   140013edd:	je     0x140013eff
   140013edf:	cmp    QWORD PTR [rip+0x765d9],0x0        # 0x14008a4c0
   140013ee7:	je     0x140013eff
   140013ee9:	cmp    QWORD PTR [rip+0x765d7],0x0        # 0x14008a4c8
   140013ef1:	je     0x140013eff
   140013ef3:	mov    esi,0x1
   140013ef8:	call   0x140013fc0
   140013efd:	jmp    0x140013f0c
   140013eff:	lea    rcx,[rip+0x7659a]        # 0x14008a4a0
   140013f06:	call   0x140013bf0
   140013f0b:	nop
   140013f0c:	mov    rdx,QWORD PTR [rsp+0x30]
   140013f11:	add    rdx,0xffffffffffffffe8
   140013f15:	lock xadd DWORD PTR [rdx+0x10],ebx
   140013f1a:	dec    ebx
   140013f1c:	test   ebx,ebx
   140013f1e:	jg     0x140013f29
   140013f20:	mov    rcx,QWORD PTR [rdx]
   140013f23:	mov    rax,QWORD PTR [rcx]
   140013f26:	call   QWORD PTR [rax+0x8]
   140013f29:	mov    eax,esi
   140013f2b:	mov    rcx,QWORD PTR [rsp+0xd0]
   140013f33:	xor    rcx,rsp
   140013f36:	call   0x140032f00
   140013f3b:	lea    r11,[rsp+0xe0]
   140013f43:	mov    rbx,QWORD PTR [r11+0x28]
   140013f47:	mov    rbp,QWORD PTR [r11+0x30]
   140013f4b:	mov    rsp,r11
   140013f4e:	pop    r12
   140013f50:	pop    rdi
   140013f51:	pop    rsi
   140013f52:	ret    
   140013f53:	int3   
   140013f54:	int3   
   140013f55:	int3   
   140013f56:	int3   
   140013f57:	int3   
   140013f58:	int3   
   140013f59:	int3   
   140013f5a:	int3   
   140013f5b:	int3   
   140013f5c:	int3   
   140013f5d:	int3   
   140013f5e:	int3   
   140013f5f:	int3   
   140013f60:	rex push rbx
   140013f62:	sub    rsp,0x30
   140013f66:	mov    rdx,QWORD PTR [rip+0x767b3]        # 0x14008a720
   140013f6d:	mov    rcx,QWORD PTR [rip+0x76534]        # 0x14008a4a8
   140013f74:	lea    rax,[rsp+0x48]
   140013f79:	mov    QWORD PTR [rsp+0x28],rax
   140013f7e:	lea    rax,[rsp+0x40]
   140013f83:	xor    ebx,ebx
   140013f85:	lea    r9,[rsp+0x50]
   140013f8a:	xor    r8d,r8d
   140013f8d:	mov    DWORD PTR [rsp+0x48],0x4
   140013f95:	mov    QWORD PTR [rsp+0x20],rax
   140013f9a:	mov    DWORD PTR [rsp+0x40],ebx
   140013f9e:	mov    DWORD PTR [rsp+0x50],ebx
   140013fa2:	call   QWORD PTR [rip+0x540b0]        # 0x140068058
   140013fa8:	cmp    DWORD PTR [rsp+0x40],ebx
   140013fac:	setne  bl
   140013faf:	mov    eax,ebx
   140013fb1:	add    rsp,0x30
   140013fb5:	pop    rbx
   140013fb6:	ret    
   140013fb7:	int3   
   140013fb8:	int3   
   140013fb9:	int3   
   140013fba:	int3   
   140013fbb:	int3   
   140013fbc:	int3   
   140013fbd:	int3   
   140013fbe:	int3   
   140013fbf:	int3   
   140013fc0:	rex push rbx
   140013fc2:	sub    rsp,0x30
   140013fc6:	mov    rdx,QWORD PTR [rip+0x76753]        # 0x14008a720
   140013fcd:	mov    rcx,QWORD PTR [rip+0x764d4]        # 0x14008a4a8
   140013fd4:	lea    rax,[rsp+0x48]
   140013fd9:	mov    QWORD PTR [rsp+0x28],rax
   140013fde:	lea    rax,[rsp+0x40]
   140013fe3:	xor    ebx,ebx
   140013fe5:	lea    r9,[rsp+0x50]
   140013fea:	xor    r8d,r8d
   140013fed:	mov    DWORD PTR [rsp+0x48],0x4
   140013ff5:	mov    QWORD PTR [rsp+0x20],rax
   140013ffa:	mov    DWORD PTR [rsp+0x40],ebx
   140013ffe:	mov    DWORD PTR [rsp+0x50],ebx
   140014002:	call   QWORD PTR [rip+0x54050]        # 0x140068058
   140014008:	cmp    DWORD PTR [rsp+0x40],ebx
   14001400c:	je     0x14001408c
   14001400e:	lea    rax,[rsp+0x58]
   140014013:	lea    rdx,[rip+0x57736]        # 0x14006b750
   14001401a:	mov    r9d,0x20019
   140014020:	xor    r8d,r8d
   140014023:	mov    rcx,0xffffffff80000002
   14001402a:	mov    DWORD PTR [rsp+0x40],0x1
   140014032:	mov    QWORD PTR [rsp+0x20],rax
   140014037:	mov    QWORD PTR [rsp+0x58],rbx
   14001403c:	call   QWORD PTR [rip+0x5400e]        # 0x140068050
   140014042:	mov    rcx,QWORD PTR [rsp+0x58]
   140014047:	test   rcx,rcx
   14001404a:	je     0x140014088
   14001404c:	lea    rax,[rsp+0x48]
   140014051:	lea    r9,[rsp+0x50]
   140014056:	lea    rdx,[rip+0x592b3]        # 0x14006d310
   14001405d:	mov    QWORD PTR [rsp+0x28],rax
   140014062:	lea    rax,[rsp+0x40]
   140014067:	xor    r8d,r8d
   14001406a:	mov    QWORD PTR [rsp+0x20],rax
   14001406f:	mov    DWORD PTR [rsp+0x48],0x4
   140014077:	call   QWORD PTR [rip+0x53fdb]        # 0x140068058
   14001407d:	mov    rcx,QWORD PTR [rsp+0x58]
   140014082:	call   QWORD PTR [rip+0x53fc0]        # 0x140068048
   140014088:	mov    ebx,DWORD PTR [rsp+0x40]
   14001408c:	mov    r9,QWORD PTR [rip+0x7641d]        # 0x14008a4b0
   140014093:	mov    rcx,QWORD PTR [rip+0x7640e]        # 0x14008a4a8
   14001409a:	xor    edx,edx
   14001409c:	lea    r8d,[rdx+0x4]
   1400140a0:	mov    DWORD PTR [rsp+0x20],0x1
   1400140a8:	call   QWORD PTR [rip+0x53f52]        # 0x140068000
   1400140ae:	lea    rcx,[rip+0x763eb]        # 0x14008a4a0
   1400140b5:	mov    edx,ebx
   1400140b7:	add    rsp,0x30
   1400140bb:	pop    rbx
   1400140bc:	jmp    0x1400140d0
   1400140c1:	int3   
   1400140c2:	int3   
   1400140c3:	int3   
   1400140c4:	int3   
   1400140c5:	int3   
   1400140c6:	int3   
   1400140c7:	int3   
   1400140c8:	int3   
   1400140c9:	int3   
   1400140ca:	int3   
   1400140cb:	int3   
   1400140cc:	int3   
   1400140cd:	int3   
   1400140ce:	int3   
   1400140cf:	int3   
   1400140d0:	rex push rdi
   1400140d2:	sub    rsp,0x150
   1400140d9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400140e2:	mov    QWORD PTR [rsp+0x170],rbx
   1400140ea:	mov    rax,QWORD PTR [rip+0x70fb7]        # 0x1400850a8
   1400140f1:	xor    rax,rsp
   1400140f4:	mov    QWORD PTR [rsp+0x140],rax
   1400140fc:	mov    ebx,edx
   1400140fe:	mov    rdi,rcx
   140014101:	cmp    edx,0x1
   140014104:	jl     0x14001411c
   140014106:	mov    r8d,edx
   140014109:	lea    rdx,[rip+0x59200]        # 0x14006d310
   140014110:	mov    rcx,0xffffffff80000002
   140014117:	call   0x140015b50
   14001411c:	or     eax,0xffffffff
   14001411f:	mov    DWORD PTR [rsp+0x20],eax
   140014123:	mov    rcx,QWORD PTR [rdi+0x28]
   140014127:	test   rcx,rcx
   14001412a:	je     0x140014147
   14001412c:	mov    r9,QWORD PTR [rdi+0x1d8]
   140014133:	test   r9,r9
   140014136:	je     0x140014147
   140014138:	xor    r8d,r8d
   14001413b:	lea    rdx,[rsp+0x20]
   140014140:	call   r9
   140014143:	mov    eax,DWORD PTR [rsp+0x20]
   140014147:	cmp    ebx,eax
   140014149:	je     0x140014222
   14001414f:	mov    rcx,QWORD PTR [rdi+0x28]
   140014153:	test   rcx,rcx
   140014156:	je     0x14001416c
   140014158:	mov    rax,QWORD PTR [rdi+0x1d0]
   14001415f:	test   rax,rax
   140014162:	je     0x14001416c
   140014164:	or     r8d,0xffffffff
   140014168:	mov    edx,ebx
   14001416a:	call   rax
   14001416c:	test   ebx,ebx
   14001416e:	jle    0x140014222
   140014174:	mov    rax,QWORD PTR [rdi+0x278]
   14001417b:	cmp    DWORD PTR [rax-0x10],0x0
   14001417f:	je     0x140014222
   140014185:	mov    rcx,QWORD PTR [rdi+0x288]
   14001418c:	test   rcx,rcx
   14001418f:	je     0x140014222
   140014195:	mov    rax,QWORD PTR [rcx]
   140014198:	xor    r8d,r8d
   14001419b:	mov    rdx,QWORD PTR [rdi+0x290]
   1400141a2:	call   QWORD PTR [rax+0x28]
   1400141a5:	mov    rbx,QWORD PTR [rdi+0x288]
   1400141ac:	lea    rax,[rsp+0x38]
   1400141b1:	mov    QWORD PTR [rsp+0x30],rax
   1400141b6:	mov    r8d,0x3
   1400141bc:	mov    rdx,QWORD PTR [rdi+0x278]
   1400141c3:	lea    rcx,[rsp+0x30]
   1400141c8:	call   0x140005b60
   1400141cd:	nop
   1400141ce:	mov    rax,QWORD PTR [rbx]
   1400141d1:	xor    r9d,r9d
   1400141d4:	mov    r8,QWORD PTR [rsp+0x30]
   1400141d9:	lea    rdx,[rip+0x59140]        # 0x14006d320
   1400141e0:	mov    rcx,rbx
   1400141e3:	call   QWORD PTR [rax+0x18]
   1400141e6:	nop
   1400141e7:	lea    rax,[rsp+0x38]
   1400141ec:	mov    rcx,QWORD PTR [rsp+0x30]
   1400141f1:	cmp    rcx,rax
   1400141f4:	je     0x1400141fb
   1400141f6:	call   0x140033594
   1400141fb:	mov    rcx,QWORD PTR [rdi+0x288]
   140014202:	mov    rax,QWORD PTR [rcx]
   140014205:	xor    r9d,r9d
   140014208:	xor    r8d,r8d
   14001420b:	xor    edx,edx
   14001420d:	call   QWORD PTR [rax+0x20]
   140014210:	mov    rcx,QWORD PTR [rdi+0x288]
   140014217:	mov    rax,QWORD PTR [rcx]
   14001421a:	xor    r8d,r8d
   14001421d:	xor    edx,edx
   14001421f:	call   QWORD PTR [rax+0x30]
   140014222:	mov    rcx,QWORD PTR [rsp+0x140]
   14001422a:	xor    rcx,rsp
   14001422d:	call   0x140032f00
   140014232:	mov    rbx,QWORD PTR [rsp+0x170]
   14001423a:	add    rsp,0x150
   140014241:	pop    rdi
   140014242:	ret    
   140014243:	int3   
   140014244:	int3   
   140014245:	int3   
   140014246:	int3   
   140014247:	int3   
   140014248:	int3   
   140014249:	int3   
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	int3   
   14001424d:	int3   
   14001424e:	int3   
   14001424f:	int3   
   140014250:	mov    rax,rsp
   140014253:	push   rbp
   140014254:	push   r12
   140014256:	push   r13
   140014258:	push   r14
   14001425a:	push   r15
   14001425c:	mov    rbp,rsp
   14001425f:	sub    rsp,0x80
   140014266:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14001426e:	mov    QWORD PTR [rax+0x8],rbx
   140014272:	mov    QWORD PTR [rax+0x10],rsi
   140014276:	mov    QWORD PTR [rax+0x18],rdi
   14001427a:	lea    rax,[rip+0x76227]        # 0x14008a4a8
   140014281:	mov    QWORD PTR [rsp+0x20],rax
   140014286:	mov    r9d,0x11
   14001428c:	xor    r8d,r8d
   14001428f:	lea    rdx,[rip+0x590aa]        # 0x14006d340
   140014296:	mov    rcx,0xffffffff80000002
   14001429d:	call   QWORD PTR [rip+0x53dad]        # 0x140068050
   1400142a3:	xor    r13d,r13d
   1400142a6:	cmp    QWORD PTR [rip+0x761fb],r13        # 0x14008a4a8
   1400142ad:	je     0x1400142cb
   1400142af:	lea    r8d,[r13+0xd]
   1400142b3:	lea    rdx,[rip+0x590be]        # 0x14006d378
   1400142ba:	lea    rcx,[rip+0x7645f]        # 0x14008a720
   1400142c1:	call   0x140008d10
   1400142c6:	jmp    0x140014663
   1400142cb:	mov    QWORD PTR [rbp-0x28],r13
   1400142cf:	mov    QWORD PTR [rbp-0x20],r13
   1400142d3:	mov    QWORD PTR [rbp-0x18],r13
   1400142d7:	mov    DWORD PTR [rbp-0x10],r13d
   1400142db:	mov    QWORD PTR [rbp-0x40],r13
   1400142df:	lea    rax,[rbp-0x40]
   1400142e3:	mov    QWORD PTR [rsp+0x20],rax
   1400142e8:	mov    r9d,0x20019
   1400142ee:	xor    r8d,r8d
   1400142f1:	lea    rsi,[rip+0x59098]        # 0x14006d390
   1400142f8:	mov    rdx,rsi
   1400142fb:	mov    rcx,0xffffffff80000002
   140014302:	call   QWORD PTR [rip+0x53d48]        # 0x140068050
   140014308:	cmp    QWORD PTR [rbp-0x40],0x0
   14001430d:	je     0x14001431c
   14001430f:	lea    rdx,[rbp-0x40]
   140014313:	lea    rcx,[rbp-0x28]
   140014317:	call   0x140015c20
   14001431c:	mov    eax,r13d
   14001431f:	mov    DWORD PTR [rbp-0x48],eax
   140014322:	mov    r12,r13
   140014325:	mov    QWORD PTR [rbp-0x30],r13
   140014329:	cmp    QWORD PTR [rip+0x76178],rax        # 0x14008a4a8
   140014330:	jne    0x1400145f7
   140014336:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014340:	cdqe   
   140014342:	mov    rdi,QWORD PTR [rbp-0x20]
   140014346:	cmp    rax,rdi
   140014349:	jae    0x1400145ed
   14001434f:	lea    rcx,[rip+0x72402]        # 0x140086758
   140014356:	mov    rax,QWORD PTR [rip+0x723fb]        # 0x140086758
   14001435d:	call   QWORD PTR [rax+0x18]
   140014360:	lea    rbx,[rax+0x18]
   140014364:	mov    QWORD PTR [rbp-0x50],rbx
   140014368:	test   rsi,0xffffffffffff0000
   14001436f:	jne    0x140014391
   140014371:	movzx  edi,si
   140014374:	mov    ecx,edi
   140014376:	call   0x14000c810
   14001437b:	test   rax,rax
   14001437e:	je     0x1400143a7
   140014380:	mov    r8d,edi
   140014383:	mov    rdx,rax
   140014386:	lea    rcx,[rbp-0x50]
   14001438a:	call   0x14000c9d0
   14001438f:	jmp    0x1400143a3
   140014391:	mov    r8d,0x4d
   140014397:	mov    rdx,rsi
   14001439a:	lea    rcx,[rbp-0x50]
   14001439e:	call   0x140008d10
   1400143a3:	mov    rbx,QWORD PTR [rbp-0x50]
   1400143a7:	mov    esi,DWORD PTR [rbx-0x10]
   1400143aa:	lea    edi,[rsi+0x1]
   1400143ad:	test   edi,edi
   1400143af:	js     0x1400145e2
   1400143b5:	mov    ecx,0x1
   1400143ba:	sub    ecx,DWORD PTR [rbx-0x8]
   1400143bd:	mov    eax,DWORD PTR [rbx-0xc]
   1400143c0:	sub    eax,edi
   1400143c2:	or     eax,ecx
   1400143c4:	jge    0x1400143d5
   1400143c6:	mov    edx,edi
   1400143c8:	lea    rcx,[rbp-0x50]
   1400143cc:	call   0x140008df0
   1400143d1:	mov    rbx,QWORD PTR [rbp-0x50]
   1400143d5:	mov    BYTE PTR [rsi+rbx*1],0x5c
   1400143d9:	cmp    edi,DWORD PTR [rbx-0xc]
   1400143dc:	jg     0x1400145d7
   1400143e2:	mov    DWORD PTR [rbx-0x10],edi
   1400143e5:	movsxd rax,edi
   1400143e8:	mov    BYTE PTR [rax+rbx*1],0x0
   1400143ec:	cmp    r12,QWORD PTR [rbp-0x20]
   1400143f0:	jae    0x1400145cc
   1400143f6:	mov    rax,QWORD PTR [rbp-0x28]
   1400143fa:	mov    rsi,QWORD PTR [rax+r12*8]
   1400143fe:	movsxd rcx,DWORD PTR [rsi-0x10]
   140014402:	mov    r15,rsi
   140014405:	sub    r15,rbx
   140014408:	mov    r14d,DWORD PTR [rbx-0x10]
   14001440c:	mov    eax,r13d
   14001440f:	test   ecx,ecx
   140014411:	setns  al
   140014414:	test   eax,eax
   140014416:	je     0x1400145c1
   14001441c:	test   rsi,rsi
   14001441f:	jne    0x140014426
   140014421:	mov    r12d,r13d
   140014424:	jmp    0x140014434
   140014426:	mov    rdx,rcx
   140014429:	mov    rcx,rsi
   14001442c:	call   0x1400345f8
   140014431:	mov    r12,rax
   140014434:	mov    ecx,0x7fffffff
   140014439:	sub    ecx,r12d
   14001443c:	mov    edx,r13d
   14001443f:	cmp    ecx,r14d
   140014442:	setge  dl
   140014445:	test   edx,edx
   140014447:	je     0x1400145b6
   14001444d:	lea    edi,[r14+r12*1]
   140014451:	test   edi,edi
   140014453:	js     0x1400145ab
   140014459:	mov    ecx,0x1
   14001445e:	sub    ecx,DWORD PTR [rbx-0x8]
   140014461:	mov    eax,DWORD PTR [rbx-0xc]
   140014464:	sub    eax,edi
   140014466:	or     eax,ecx
   140014468:	jge    0x140014479
   14001446a:	mov    edx,edi
   14001446c:	lea    rcx,[rbp-0x50]
   140014470:	call   0x140008df0
   140014475:	mov    rbx,QWORD PTR [rbp-0x50]
   140014479:	cmp    r15,r14
   14001447c:	ja     0x140014482
   14001447e:	lea    rsi,[r15+rbx*1]
   140014482:	movsxd rdx,r12d
   140014485:	lea    rcx,[r14+rbx*1]
   140014489:	mov    r9,rdx
   14001448c:	mov    r8,rsi
   14001448f:	call   0x140033ccc
   140014494:	cmp    edi,DWORD PTR [rbx-0xc]
   140014497:	jg     0x1400145a0
   14001449d:	mov    DWORD PTR [rbx-0x10],edi
   1400144a0:	movsxd rax,edi
   1400144a3:	mov    BYTE PTR [rax+rbx*1],0x0
   1400144a7:	mov    esi,DWORD PTR [rbx-0x10]
   1400144aa:	lea    edi,[rsi+0x1]
   1400144ad:	test   edi,edi
   1400144af:	js     0x140014595
   1400144b5:	mov    ecx,0x1
   1400144ba:	sub    ecx,DWORD PTR [rbx-0x8]
   1400144bd:	mov    eax,DWORD PTR [rbx-0xc]
   1400144c0:	sub    eax,edi
   1400144c2:	or     eax,ecx
   1400144c4:	jge    0x1400144d5
   1400144c6:	mov    edx,edi
   1400144c8:	lea    rcx,[rbp-0x50]
   1400144cc:	call   0x140008df0
   1400144d1:	mov    rbx,QWORD PTR [rbp-0x50]
   1400144d5:	mov    BYTE PTR [rsi+rbx*1],0x5c
   1400144d9:	cmp    edi,DWORD PTR [rbx-0xc]
   1400144dc:	jg     0x14001458a
   1400144e2:	mov    DWORD PTR [rbx-0x10],edi
   1400144e5:	movsxd rax,edi
   1400144e8:	mov    BYTE PTR [rax+rbx*1],0x0
   1400144ec:	mov    r8d,0xd
   1400144f2:	lea    rdx,[rip+0x58ee7]        # 0x14006d3e0
   1400144f9:	lea    rcx,[rbp-0x50]
   1400144fd:	call   0x1400146a0
   140014502:	mov    QWORD PTR [rbp-0x38],r13
   140014506:	lea    rax,[rbp-0x38]
   14001450a:	mov    QWORD PTR [rsp+0x20],rax
   14001450f:	mov    r9d,0x11
   140014515:	xor    r8d,r8d
   140014518:	mov    rbx,QWORD PTR [rbp-0x50]
   14001451c:	mov    rdx,rbx
   14001451f:	mov    rcx,0xffffffff80000002
   140014526:	call   QWORD PTR [rip+0x53b24]        # 0x140068050
   14001452c:	mov    r11,QWORD PTR [rip+0x75f75]        # 0x14008a4a8
   140014533:	mov    rax,QWORD PTR [rbp-0x38]
   140014537:	test   rax,rax
   14001453a:	cmovne r11,rax
   14001453e:	mov    QWORD PTR [rip+0x75f63],r11        # 0x14008a4a8
   140014545:	lea    rdx,[rbx-0x18]
   140014549:	or     eax,0xffffffff
   14001454c:	lock xadd DWORD PTR [rdx+0x10],eax
   140014551:	dec    eax
   140014553:	test   eax,eax
   140014555:	jg     0x140014560
   140014557:	mov    rcx,QWORD PTR [rdx]
   14001455a:	mov    rax,QWORD PTR [rcx]
   14001455d:	call   QWORD PTR [rax+0x8]
   140014560:	mov    eax,DWORD PTR [rbp-0x48]
   140014563:	inc    eax
   140014565:	mov    DWORD PTR [rbp-0x48],eax
   140014568:	mov    r12,QWORD PTR [rbp-0x30]
   14001456c:	inc    r12
   14001456f:	mov    QWORD PTR [rbp-0x30],r12
   140014573:	cmp    QWORD PTR [rip+0x75f2d],0x0        # 0x14008a4a8
   14001457b:	lea    rsi,[rip+0x58e0e]        # 0x14006d390
   140014582:	je     0x140014340
   140014588:	jmp    0x1400145f7
   14001458a:	mov    ecx,0x80070057
   14001458f:	call   0x1400025f0
   140014594:	int3   
   140014595:	mov    ecx,0x80070057
   14001459a:	call   0x1400025f0
   14001459f:	int3   
   1400145a0:	mov    ecx,0x80070057
   1400145a5:	call   0x1400025f0
   1400145aa:	int3   
   1400145ab:	mov    ecx,0x80070057
   1400145b0:	call   0x1400025f0
   1400145b5:	int3   
   1400145b6:	mov    ecx,0x80070057
   1400145bb:	call   0x1400025f0
   1400145c0:	int3   
   1400145c1:	mov    ecx,0x80070057
   1400145c6:	call   0x1400025f0
   1400145cb:	int3   
   1400145cc:	mov    ecx,0x80070057
   1400145d1:	call   0x1400025f0
   1400145d6:	int3   
   1400145d7:	mov    ecx,0x80070057
   1400145dc:	call   0x1400025f0
   1400145e1:	int3   
   1400145e2:	mov    ecx,0x80070057
   1400145e7:	call   0x1400025f0
   1400145ec:	nop
   1400145ed:	cmp    QWORD PTR [rip+0x75eb3],0x0        # 0x14008a4a8
   1400145f5:	je     0x140014614
   1400145f7:	mov    r8d,0xd
   1400145fd:	lea    rdx,[rip+0x58ddc]        # 0x14006d3e0
   140014604:	lea    rcx,[rip+0x76115]        # 0x14008a720
   14001460b:	call   0x140008d10
   140014610:	mov    rdi,QWORD PTR [rbp-0x20]
   140014614:	mov    rsi,QWORD PTR [rbp-0x28]
   140014618:	test   rsi,rsi
   14001461b:	je     0x140014663
   14001461d:	mov    rbx,r13
   140014620:	test   rdi,rdi
   140014623:	je     0x14001465b
   140014625:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140014630:	mov    rdx,QWORD PTR [rsi+rbx*8]
   140014634:	sub    rdx,0x18
   140014638:	or     eax,0xffffffff
   14001463b:	lock xadd DWORD PTR [rdx+0x10],eax
   140014640:	dec    eax
   140014642:	test   eax,eax
   140014644:	jg     0x14001464f
   140014646:	mov    rcx,QWORD PTR [rdx]
   140014649:	mov    rax,QWORD PTR [rcx]
   14001464c:	call   QWORD PTR [rax+0x8]
   14001464f:	inc    rbx
   140014652:	cmp    rbx,rdi
   140014655:	jb     0x140014630
   140014657:	mov    rsi,QWORD PTR [rbp-0x28]
   14001465b:	mov    rcx,rsi
   14001465e:	call   0x140033594
   140014663:	cmp    QWORD PTR [rip+0x75e3d],0x0        # 0x14008a4a8
   14001466b:	setne  r13b
   14001466f:	mov    eax,r13d
   140014672:	lea    r11,[rsp+0x80]
   14001467a:	mov    rbx,QWORD PTR [r11+0x30]
   14001467e:	mov    rsi,QWORD PTR [r11+0x38]
   140014682:	mov    rdi,QWORD PTR [r11+0x40]
   140014686:	mov    rsp,r11
   140014689:	pop    r15
   14001468b:	pop    r14
   14001468d:	pop    r13
   14001468f:	pop    r12
   140014691:	pop    rbp
   140014692:	ret    
   140014693:	int3   
   140014694:	int3   
   140014695:	int3   
   140014696:	int3   
   140014697:	int3   
   140014698:	int3   
   140014699:	int3   
   14001469a:	int3   
   14001469b:	int3   
   14001469c:	int3   
   14001469d:	int3   
   14001469e:	int3   
   14001469f:	int3   
   1400146a0:	mov    QWORD PTR [rsp+0x18],rbp
   1400146a5:	push   rdi
   1400146a6:	push   r12
   1400146a8:	push   r13
   1400146aa:	sub    rsp,0x20
   1400146ae:	mov    rax,QWORD PTR [rcx]
   1400146b1:	mov    r13,rdx
   1400146b4:	mov    rbp,rdx
   1400146b7:	mov    r12d,DWORD PTR [rax-0x10]
   1400146bb:	sub    r13,rax
   1400146be:	mov    rdi,rcx
   1400146c1:	test   r8d,r8d
   1400146c4:	jns    0x1400146d1
   1400146c6:	mov    ecx,0x80070057
   1400146cb:	call   0x1400025f0
   1400146d0:	int3   
   1400146d1:	mov    QWORD PTR [rsp+0x48],rsi
   1400146d6:	test   rdx,rdx
   1400146d9:	jne    0x1400146df
   1400146db:	xor    esi,esi
   1400146dd:	jmp    0x1400146ed
   1400146df:	movsxd rdx,r8d
   1400146e2:	mov    rcx,rbp
   1400146e5:	call   0x1400345f8
   1400146ea:	mov    rsi,rax
   1400146ed:	mov    ecx,0x7fffffff
   1400146f2:	sub    ecx,esi
   1400146f4:	cmp    ecx,r12d
   1400146f7:	jge    0x140014704
   1400146f9:	mov    ecx,0x80070057
   1400146fe:	call   0x1400025f0
   140014703:	int3   
   140014704:	mov    QWORD PTR [rsp+0x40],rbx
   140014709:	lea    ebx,[r12+rsi*1]
   14001470d:	test   ebx,ebx
   14001470f:	jns    0x14001471c
   140014711:	mov    ecx,0x80070057
   140014716:	call   0x1400025f0
   14001471b:	int3   
   14001471c:	mov    rax,QWORD PTR [rdi]
   14001471f:	mov    ecx,0x1
   140014724:	sub    ecx,DWORD PTR [rax-0x8]
   140014727:	mov    eax,DWORD PTR [rax-0xc]
   14001472a:	sub    eax,ebx
   14001472c:	or     ecx,eax
   14001472e:	jge    0x14001473a
   140014730:	mov    edx,ebx
   140014732:	mov    rcx,rdi
   140014735:	call   0x140008df0
   14001473a:	mov    rax,QWORD PTR [rdi]
   14001473d:	mov    rcx,r12
   140014740:	cmp    r13,r12
   140014743:	ja     0x140014749
   140014745:	lea    rbp,[rax+r13*1]
   140014749:	movsxd rdx,esi
   14001474c:	add    rcx,rax
   14001474f:	mov    r8,rbp
   140014752:	mov    r9,rdx
   140014755:	call   0x140033ccc
   14001475a:	mov    r11,QWORD PTR [rdi]
   14001475d:	cmp    ebx,DWORD PTR [r11-0xc]
   140014761:	jg     0x14001478a
   140014763:	mov    rsi,QWORD PTR [rsp+0x48]
   140014768:	mov    rbp,QWORD PTR [rsp+0x50]
   14001476d:	mov    DWORD PTR [r11-0x10],ebx
   140014771:	mov    rax,QWORD PTR [rdi]
   140014774:	movsxd rcx,ebx
   140014777:	mov    rbx,QWORD PTR [rsp+0x40]
   14001477c:	mov    BYTE PTR [rcx+rax*1],0x0
   140014780:	add    rsp,0x20
   140014784:	pop    r13
   140014786:	pop    r12
   140014788:	pop    rdi
   140014789:	ret    
   14001478a:	mov    ecx,0x80070057
   14001478f:	call   0x1400025f0
   140014794:	int3   
   140014795:	int3   
   140014796:	int3   
   140014797:	int3   
   140014798:	int3   
   140014799:	int3   
   14001479a:	int3   
   14001479b:	int3   
   14001479c:	int3   
   14001479d:	int3   
   14001479e:	int3   
   14001479f:	int3   
   1400147a0:	mov    QWORD PTR [rsp+0x18],rbp
   1400147a5:	push   rsi
   1400147a6:	sub    rsp,0x20
   1400147aa:	mov    rbp,QWORD PTR [rcx]
   1400147ad:	mov    rsi,rcx
   1400147b0:	test   rbp,rbp
   1400147b3:	je     0x14001480a
   1400147b5:	mov    QWORD PTR [rsp+0x30],rbx
   1400147ba:	mov    QWORD PTR [rsp+0x38],rdi
   1400147bf:	mov    rdi,QWORD PTR [rcx+0x8]
   1400147c3:	xor    ebx,ebx
   1400147c5:	test   rdi,rdi
   1400147c8:	je     0x1400147f8
   1400147ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400147d0:	mov    rdx,QWORD PTR [rbp+rbx*8+0x0]
   1400147d5:	sub    rdx,0x18
   1400147d9:	or     eax,0xffffffff
   1400147dc:	lock xadd DWORD PTR [rdx+0x10],eax
   1400147e1:	dec    eax
   1400147e3:	test   eax,eax
   1400147e5:	jg     0x1400147f0
   1400147e7:	mov    rcx,QWORD PTR [rdx]
   1400147ea:	mov    rax,QWORD PTR [rcx]
   1400147ed:	call   QWORD PTR [rax+0x8]
   1400147f0:	inc    rbx
   1400147f3:	cmp    rbx,rdi
   1400147f6:	jb     0x1400147d0
   1400147f8:	mov    rcx,QWORD PTR [rsi]
   1400147fb:	call   0x140033594
   140014800:	mov    rdi,QWORD PTR [rsp+0x38]
   140014805:	mov    rbx,QWORD PTR [rsp+0x30]
   14001480a:	mov    rbp,QWORD PTR [rsp+0x40]
   14001480f:	add    rsp,0x20
   140014813:	pop    rsi
   140014814:	ret    
   140014815:	int3   
   140014816:	int3   
   140014817:	int3   
   140014818:	int3   
   140014819:	int3   
   14001481a:	int3   
   14001481b:	int3   
   14001481c:	int3   
   14001481d:	int3   
   14001481e:	int3   
   14001481f:	int3   
   140014820:	test   rdx,rdx
   140014823:	je     0x140014876
   140014825:	mov    QWORD PTR [rsp+0x8],rbx
   14001482a:	mov    QWORD PTR [rsp+0x10],rsi
   14001482f:	push   rdi
   140014830:	sub    rsp,0x20
   140014834:	mov    rdi,rdx
   140014837:	mov    rsi,rcx
   14001483a:	xor    ebx,ebx
   14001483c:	nop    DWORD PTR [rax+0x0]
   140014840:	mov    rdx,QWORD PTR [rsi+rbx*8]
   140014844:	sub    rdx,0x18
   140014848:	or     eax,0xffffffff
   14001484b:	lock xadd DWORD PTR [rdx+0x10],eax
   140014850:	dec    eax
   140014852:	test   eax,eax
   140014854:	jg     0x14001485f
   140014856:	mov    rcx,QWORD PTR [rdx]
   140014859:	mov    rax,QWORD PTR [rcx]
   14001485c:	call   QWORD PTR [rax+0x8]
   14001485f:	inc    rbx
   140014862:	cmp    rbx,rdi
   140014865:	jb     0x140014840
   140014867:	mov    rbx,QWORD PTR [rsp+0x30]
   14001486c:	mov    rsi,QWORD PTR [rsp+0x38]
   140014871:	add    rsp,0x20
   140014875:	pop    rdi
   140014876:	repz ret 
   140014878:	int3   
   140014879:	int3   
   14001487a:	int3   
   14001487b:	int3   
   14001487c:	int3   
   14001487d:	int3   
   14001487e:	int3   
   14001487f:	int3   
   140014880:	sub    rsp,0x38
   140014884:	lea    rcx,[rip+0x73625]        # 0x140087eb0
   14001488b:	call   QWORD PTR [rip+0x5395f]        # 0x1400681f0
   140014891:	mov    rax,QWORD PTR [rip+0x73618]        # 0x140087eb0
   140014898:	movsd  xmm5,QWORD PTR [rip+0x62c00]        # 0x1400774a0
   1400148a0:	movsd  QWORD PTR [rip+0x73620],xmm5        # 0x140087ec8
   1400148a8:	test   rax,rax
   1400148ab:	jle    0x1400148c2
   1400148ad:	pxor   xmm0,xmm0
   1400148b1:	cvtsi2sd xmm0,rax
   1400148b6:	divsd  xmm5,xmm0
   1400148ba:	movsd  QWORD PTR [rip+0x73606],xmm5        # 0x140087ec8
   1400148c2:	xorpd  xmm0,xmm0
   1400148c6:	movsd  xmm1,QWORD PTR [rip+0x62ce2]        # 0x1400775b0
   1400148ce:	xor    eax,eax
   1400148d0:	lea    rdx,[rip+0x58b39]        # 0x14006d410
   1400148d7:	lea    rcx,[rip+0x7357a]        # 0x140087e58
   1400148de:	xor    r9d,r9d
   1400148e1:	lea    r8d,[rax+0x10]
   1400148e5:	mov    QWORD PTR [rip+0x735d4],rax        # 0x140087ec0
   1400148ec:	mov    DWORD PTR [rsp+0x20],eax
   1400148f0:	movsd  QWORD PTR [rip+0x735d8],xmm0        # 0x140087ed0
   1400148f8:	movsd  QWORD PTR [rip+0x735d8],xmm1        # 0x140087ed8
   140014900:	call   0x1400490d0
   140014905:	add    rsp,0x38
   140014909:	ret    
   14001490a:	int3   
   14001490b:	int3   
   14001490c:	int3   
   14001490d:	int3   
   14001490e:	int3   
   14001490f:	int3   
   140014910:	mov    QWORD PTR [rsp+0x8],rbx
   140014915:	push   rdi
   140014916:	sub    rsp,0x20
   14001491a:	lea    rax,[rip+0x58dbf]        # 0x14006d6e0
   140014921:	mov    rbx,rcx
   140014924:	mov    edi,edx
   140014926:	mov    QWORD PTR [rcx],rax
   140014929:	mov    rcx,QWORD PTR [rcx+0x10]
   14001492d:	test   rcx,rcx
   140014930:	je     0x140014940
   140014932:	call   QWORD PTR [rip+0x537a8]        # 0x1400680e0
   140014938:	mov    QWORD PTR [rbx+0x10],0x0
   140014940:	mov    rcx,QWORD PTR [rbx+0x18]
   140014944:	test   rcx,rcx
   140014947:	je     0x140014957
   140014949:	call   QWORD PTR [rip+0x53a49]        # 0x140068398
   14001494f:	mov    QWORD PTR [rbx+0x18],0x0
   140014957:	mov    DWORD PTR [rbx+0x8],0x0
   14001495e:	test   dil,0x1
   140014962:	je     0x14001496c
   140014964:	mov    rcx,rbx
   140014967:	call   0x1400330c0
   14001496c:	mov    rax,rbx
   14001496f:	mov    rbx,QWORD PTR [rsp+0x30]
   140014974:	add    rsp,0x20
   140014978:	pop    rdi
   140014979:	ret    
   14001497a:	int3   
   14001497b:	int3   
   14001497c:	int3   
   14001497d:	int3   
   14001497e:	int3   
   14001497f:	int3   
   140014980:	mov    QWORD PTR [rsp+0x10],rbx
   140014985:	mov    QWORD PTR [rsp+0x18],rbp
   14001498a:	push   rsi
   14001498b:	sub    rsp,0x50
   14001498f:	mov    rbx,r8
   140014992:	mov    rbp,rdx
   140014995:	mov    esi,ecx
   140014997:	test   ecx,ecx
   140014999:	js     0x140014b33
   14001499f:	mov    QWORD PTR [rsp+0x60],rdi
   1400149a4:	mov    rdi,QWORD PTR [rip+0x734b5]        # 0x140087e60
   1400149ab:	test   rdi,rdi
   1400149ae:	je     0x140014ae8
   1400149b4:	test   rbx,rbx
   1400149b7:	je     0x140014ab9
   1400149bd:	mov    r8d,DWORD PTR [r8]
   1400149c0:	cmp    r8d,0x100
   1400149c7:	jae    0x140014a79
   1400149cd:	mov    edx,DWORD PTR [rbx+0x8]
   1400149d0:	lea    rcx,[rip+0x75e69]        # 0x14008a840
   1400149d7:	mov    eax,edx
   1400149d9:	and    eax,0x80
   1400149de:	test   al,al
   1400149e0:	jne    0x140014a35
   1400149e2:	cmp    DWORD PTR [rcx+r8*4],0x0
   1400149e7:	jne    0x1400149f3
   1400149e9:	mov    DWORD PTR [rcx+r8*4],0x1
   1400149f1:	jmp    0x140014a3d
   1400149f3:	mov    rax,QWORD PTR [rbx+0x10]
   1400149f7:	mov    QWORD PTR [rsp+0x40],rax
   1400149fc:	mov    eax,DWORD PTR [rbx+0x4]
   1400149ff:	mov    DWORD PTR [rsp+0x38],edx
   140014a03:	mov    DWORD PTR [rsp+0x30],eax
   140014a07:	mov    DWORD PTR [rsp+0x28],r8d
   140014a0c:	lea    rax,[rip+0x58aa5]        # 0x14006d4b8
   140014a13:	mov    edx,0x40
   140014a18:	xor    r9d,r9d
   140014a1b:	lea    rcx,[rip+0x58a3e]        # 0x14006d460
   140014a22:	mov    QWORD PTR [rsp+0x20],rax
   140014a27:	lea    r8d,[r9+0x3]
   140014a2b:	call   0x140003150
   140014a30:	jmp    0x140014b0e
   140014a35:	mov    DWORD PTR [rcx+r8*4],0x0
   140014a3d:	mov    rcx,rdi
   140014a40:	call   QWORD PTR [rip+0x538ea]        # 0x140068330
   140014a46:	mov    r11d,DWORD PTR [rbx+0xc]
   140014a4a:	mov    edx,0x36
   140014a4f:	mov    DWORD PTR [rdi+0x8],r11d
   140014a53:	mov    rax,QWORD PTR [rbx+0x10]
   140014a57:	mov    QWORD PTR [rsp+0x40],rax
   140014a5c:	mov    eax,DWORD PTR [rbx+0x8]
   140014a5f:	mov    DWORD PTR [rsp+0x38],eax
   140014a63:	mov    eax,DWORD PTR [rbx+0x4]
   140014a66:	mov    DWORD PTR [rsp+0x30],eax
   140014a6a:	mov    eax,DWORD PTR [rbx]
   140014a6c:	mov    DWORD PTR [rsp+0x28],eax
   140014a70:	lea    rax,[rip+0x589a9]        # 0x14006d420
   140014a77:	jmp    0x140014a18
   140014a79:	mov    rax,QWORD PTR [rbx+0x10]
   140014a7d:	xor    r9d,r9d
   140014a80:	lea    rcx,[rip+0x589d9]        # 0x14006d460
   140014a87:	mov    QWORD PTR [rsp+0x40],rax
   140014a8c:	mov    eax,DWORD PTR [rbx+0x8]
   140014a8f:	lea    edx,[r9+0x4b]
   140014a93:	mov    DWORD PTR [rsp+0x38],eax
   140014a97:	mov    eax,DWORD PTR [rbx+0x4]
   140014a9a:	mov    DWORD PTR [rsp+0x30],eax
   140014a9e:	mov    DWORD PTR [rsp+0x28],r8d
   140014aa3:	lea    rax,[rip+0x58a36]        # 0x14006d4e0
   140014aaa:	xor    r8d,r8d
   140014aad:	mov    QWORD PTR [rsp+0x20],rax
   140014ab2:	call   0x140003150
   140014ab7:	jmp    0x140014b0e
   140014ab9:	xor    r8d,r8d
   140014abc:	lea    rax,[rip+0x58a5d]        # 0x14006d520
   140014ac3:	lea    r9,[rip+0x58a6e]        # 0x14006d538
   140014aca:	lea    edx,[r8+0x50]
   140014ace:	lea    rcx,[rip+0x5898b]        # 0x14006d460
   140014ad5:	mov    QWORD PTR [rsp+0x20],rax
   140014ada:	call   0x140003150
   140014adf:	mov    DWORD PTR [rdi+0x8],0x0
   140014ae6:	jmp    0x140014b0e
   140014ae8:	xor    r8d,r8d
   140014aeb:	lea    rax,[rip+0x58a4e]        # 0x14006d540
   140014af2:	lea    r9,[rip+0x58a3f]        # 0x14006d538
   140014af9:	lea    edx,[r8+0x56]
   140014afd:	lea    rcx,[rip+0x5895c]        # 0x14006d460
   140014b04:	mov    QWORD PTR [rsp+0x20],rax
   140014b09:	call   0x140003150
   140014b0e:	mov    r9,rbx
   140014b11:	mov    r8,rbp
   140014b14:	mov    edx,esi
   140014b16:	xor    ecx,ecx
   140014b18:	mov    rdi,QWORD PTR [rsp+0x60]
   140014b1d:	mov    rbx,QWORD PTR [rsp+0x68]
   140014b22:	mov    rbp,QWORD PTR [rsp+0x70]
   140014b27:	add    rsp,0x50
   140014b2b:	pop    rsi
   140014b2c:	rex.W jmp QWORD PTR [rip+0x53a55]        # 0x140068588
   140014b33:	mov    rbx,QWORD PTR [rsp+0x68]
   140014b38:	mov    rbp,QWORD PTR [rsp+0x70]
   140014b3d:	xor    eax,eax
   140014b3f:	add    rsp,0x50
   140014b43:	pop    rsi
   140014b44:	ret    
   140014b45:	int3   
   140014b46:	int3   
   140014b47:	int3   
   140014b48:	int3   
   140014b49:	int3   
   140014b4a:	int3   
   140014b4b:	int3   
   140014b4c:	int3   
   140014b4d:	int3   
   140014b4e:	int3   
   140014b4f:	int3   
   140014b50:	mov    QWORD PTR [rsp+0x8],rbx
   140014b55:	push   rdi
   140014b56:	sub    rsp,0x30
   140014b5a:	xor    r9d,r9d
   140014b5d:	lea    rax,[rip+0x589f4]        # 0x14006d558
   140014b64:	mov    rbx,rcx
   140014b67:	mov    QWORD PTR [rsp+0x28],rax
   140014b6c:	lea    rdi,[rip+0x5692d]        # 0x14006b4a0
   140014b73:	lea    rcx,[rip+0x588e6]        # 0x14006d460
   140014b7a:	lea    edx,[r9+0x63]
   140014b7e:	lea    r8d,[r9+0x3]
   140014b82:	mov    QWORD PTR [rsp+0x20],rdi
   140014b87:	call   0x140003150
   140014b8c:	mov    rcx,rbx
   140014b8f:	call   0x140014e00
   140014b94:	xor    r9d,r9d
   140014b97:	lea    r11,[rip+0x589da]        # 0x14006d578
   140014b9e:	mov    QWORD PTR [rsp+0x28],r11
   140014ba3:	lea    edx,[r9+0x66]
   140014ba7:	lea    r8d,[r9+0x3]
   140014bab:	lea    rcx,[rip+0x588ae]        # 0x14006d460
   140014bb2:	mov    QWORD PTR [rsp+0x20],rdi
   140014bb7:	call   0x140003150
   140014bbc:	mov    rbx,QWORD PTR [rsp+0x40]
   140014bc1:	xor    eax,eax
   140014bc3:	add    rsp,0x30
   140014bc7:	pop    rdi
   140014bc8:	ret    
   140014bc9:	int3   
   140014bca:	int3   
   140014bcb:	int3   
   140014bcc:	int3   
   140014bcd:	int3   
   140014bce:	int3   
   140014bcf:	int3   
   140014bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140014bd5:	push   rdi
   140014bd6:	sub    rsp,0x20
   140014bda:	lea    rax,[rip+0x58b17]        # 0x14006d6f8
   140014be1:	mov    edi,edx
   140014be3:	mov    rbx,rcx
   140014be6:	mov    QWORD PTR [rcx],rax
   140014be9:	call   0x140014ce0
   140014bee:	mov    rcx,QWORD PTR [rbx+0x8]
   140014bf2:	lea    r11,[rip+0x585af]        # 0x14006d1a8
   140014bf9:	mov    QWORD PTR [rbx],r11
   140014bfc:	test   rcx,rcx
   140014bff:	je     0x140014c0f
   140014c01:	call   QWORD PTR [rip+0x539b1]        # 0x1400685b8
   140014c07:	mov    QWORD PTR [rbx+0x8],0x0
   140014c0f:	movzx  ecx,WORD PTR [rbx+0x2c]
   140014c13:	mov    rdx,QWORD PTR [rbx+0x20]
   140014c17:	call   QWORD PTR [rip+0x539c3]        # 0x1400685e0
   140014c1d:	test   dil,0x1
   140014c21:	je     0x140014c2b
   140014c23:	mov    rcx,rbx
   140014c26:	call   0x1400330c0
   140014c2b:	mov    rax,rbx
   140014c2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c33:	add    rsp,0x20
   140014c37:	pop    rdi
   140014c38:	ret    
   140014c39:	int3   
   140014c3a:	int3   
   140014c3b:	int3   
   140014c3c:	int3   
   140014c3d:	int3   
   140014c3e:	int3   
   140014c3f:	int3   
   140014c40:	rex push rbx
   140014c42:	sub    rsp,0x30
   140014c46:	mov    rbx,rcx
   140014c49:	call   0x140014880
   140014c4e:	test   eax,eax
   140014c50:	je     0x140014cd8
   140014c56:	mov    QWORD PTR [rsp+0x40],rdi
   140014c5b:	xor    edi,edi
   140014c5d:	cmp    QWORD PTR [rbx+0x30],rdi
   140014c61:	jne    0x140014cc9
   140014c63:	mov    rax,QWORD PTR [rip+0x7564e]        # 0x14008a2b8
   140014c6a:	mov    QWORD PTR [rbx+0x48],rax
   140014c6e:	cmp    QWORD PTR [rbx+0x40],rdi
   140014c72:	jne    0x140014ccd
   140014c74:	lea    rax,[rip+0x58915]        # 0x14006d590
   140014c7b:	lea    r8d,[rdi+0x3]
   140014c7f:	lea    rcx,[rip+0x587da]        # 0x14006d460
   140014c86:	mov    QWORD PTR [rsp+0x28],rax
   140014c8b:	lea    rax,[rip+0x5680e]        # 0x14006b4a0
   140014c92:	xor    r9d,r9d
   140014c95:	mov    edx,0x8f
   140014c9a:	mov    QWORD PTR [rsp+0x20],rax
   140014c9f:	call   0x140003150
   140014ca4:	lea    r11,[rbx+0x50]
   140014ca8:	lea    r8,[rip+0xfffffffffffffea1]        # 0x140014b50
   140014caf:	mov    QWORD PTR [rsp+0x28],r11
   140014cb4:	mov    r9,rbx
   140014cb7:	xor    edx,edx
   140014cb9:	xor    ecx,ecx
   140014cbb:	mov    DWORD PTR [rsp+0x20],edi
   140014cbf:	call   QWORD PTR [rip+0x53723]        # 0x1400683e8
   140014cc5:	mov    QWORD PTR [rbx+0x40],rax
   140014cc9:	cmp    QWORD PTR [rbx+0x40],rdi
   140014ccd:	setne  dil
   140014cd1:	mov    eax,edi
   140014cd3:	mov    rdi,QWORD PTR [rsp+0x40]
   140014cd8:	add    rsp,0x30
   140014cdc:	pop    rbx
   140014cdd:	ret    
   140014cde:	int3   
   140014cdf:	int3   
   140014ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140014ce5:	mov    QWORD PTR [rsp+0x10],rsi
   140014cea:	push   rdi
   140014ceb:	sub    rsp,0x30
   140014cef:	xor    r9d,r9d
   140014cf2:	lea    rax,[rip+0x588b7]        # 0x14006d5b0
   140014cf9:	mov    rbx,rcx
   140014cfc:	mov    QWORD PTR [rsp+0x28],rax
   140014d01:	lea    rsi,[rip+0x56798]        # 0x14006b4a0
   140014d08:	lea    rcx,[rip+0x58751]        # 0x14006d460
   140014d0f:	lea    r8d,[r9+0x3]
   140014d13:	mov    edx,0x9e
   140014d18:	mov    QWORD PTR [rsp+0x20],rsi
   140014d1d:	call   0x140003150
   140014d22:	mov    rcx,QWORD PTR [rip+0x73137]        # 0x140087e60
   140014d29:	xor    edi,edi
   140014d2b:	test   rcx,rcx
   140014d2e:	je     0x140014d3d
   140014d30:	call   QWORD PTR [rip+0x533aa]        # 0x1400680e0
   140014d36:	mov    QWORD PTR [rip+0x73123],rdi        # 0x140087e60
   140014d3d:	mov    rcx,QWORD PTR [rip+0x73124]        # 0x140087e68
   140014d44:	test   rcx,rcx
   140014d47:	je     0x140014d56
   140014d49:	call   QWORD PTR [rip+0x53649]        # 0x140068398
   140014d4f:	mov    QWORD PTR [rip+0x73112],rdi        # 0x140087e68
   140014d56:	mov    DWORD PTR [rip+0x730fc],edi        # 0x140087e58
   140014d5c:	cmp    QWORD PTR [rbx+0x40],rdi
   140014d60:	je     0x140014deb
   140014d66:	xor    r9d,r9d
   140014d69:	lea    rax,[rip+0x58858]        # 0x14006d5c8
   140014d70:	lea    rcx,[rip+0x586e9]        # 0x14006d460
   140014d77:	mov    QWORD PTR [rsp+0x28],rax
   140014d7c:	lea    r8d,[r9+0x3]
   140014d80:	mov    edx,0xa6
   140014d85:	mov    QWORD PTR [rsp+0x20],rsi
   140014d8a:	call   0x140003150
   140014d8f:	mov    ecx,DWORD PTR [rbx+0x50]
   140014d92:	xor    r9d,r9d
   140014d95:	xor    r8d,r8d
   140014d98:	lea    edx,[r9+0x12]
   140014d9c:	call   QWORD PTR [rip+0x537de]        # 0x140068580
   140014da2:	mov    rcx,QWORD PTR [rbx+0x40]
   140014da6:	mov    edx,0x3a98
   140014dab:	call   QWORD PTR [rip+0x53437]        # 0x1400681e8
   140014db1:	xor    r9d,r9d
   140014db4:	lea    r11,[rip+0x5882d]        # 0x14006d5e8
   140014dbb:	mov    QWORD PTR [rsp+0x28],r11
   140014dc0:	lea    rcx,[rip+0x58699]        # 0x14006d460
   140014dc7:	lea    r8d,[r9+0x3]
   140014dcb:	mov    edx,0xac
   140014dd0:	mov    QWORD PTR [rsp+0x20],rsi
   140014dd5:	call   0x140003150
   140014dda:	mov    rcx,QWORD PTR [rbx+0x40]
   140014dde:	call   QWORD PTR [rip+0x535b4]        # 0x140068398
   140014de4:	mov    QWORD PTR [rbx+0x40],rdi
   140014de8:	mov    DWORD PTR [rbx+0x50],edi
   140014deb:	mov    rbx,QWORD PTR [rsp+0x40]
   140014df0:	mov    rsi,QWORD PTR [rsp+0x48]
   140014df5:	mov    eax,0x1
   140014dfa:	add    rsp,0x30
   140014dfe:	pop    rdi
   140014dff:	ret    
   140014e00:	mov    QWORD PTR [rsp+0x8],rbx
   140014e05:	push   rdi
   140014e06:	sub    rsp,0x60
   140014e0a:	mov    r8,QWORD PTR [rcx+0x48]
   140014e0e:	xor    r9d,r9d
   140014e11:	mov    rbx,rcx
   140014e14:	lea    ecx,[r9+0xd]
   140014e18:	lea    rdx,[rip+0xfffffffffffffb61]        # 0x140014980
   140014e1f:	call   QWORD PTR [rip+0x53773]        # 0x140068598
   140014e25:	xor    r9d,r9d
   140014e28:	lea    rcx,[rip+0x58631]        # 0x14006d460
   140014e2f:	mov    QWORD PTR [rsp+0x28],rax
   140014e34:	mov    QWORD PTR [rbx+0x30],rax
   140014e38:	lea    rax,[rip+0x587d9]        # 0x14006d618
   140014e3f:	lea    r8d,[r9+0x3]
   140014e43:	mov    edx,0xc3
   140014e48:	mov    QWORD PTR [rsp+0x20],rax
   140014e4d:	call   0x140003150
   140014e52:	xor    r9d,r9d
   140014e55:	lea    r11,[rip+0x587e4]        # 0x14006d640
   140014e5c:	mov    QWORD PTR [rsp+0x28],r11
   140014e61:	lea    rdi,[rip+0x56638]        # 0x14006b4a0
   140014e68:	lea    rcx,[rip+0x585f1]        # 0x14006d460
   140014e6f:	lea    r8d,[r9+0x3]
   140014e73:	mov    edx,0xda
   140014e78:	mov    QWORD PTR [rsp+0x20],rdi
   140014e7d:	call   0x140003150
   140014e82:	lea    rcx,[rsp+0x30]
   140014e87:	xor    r9d,r9d
   140014e8a:	xor    r8d,r8d
   140014e8d:	xor    edx,edx
   140014e8f:	call   QWORD PTR [rip+0x536e3]        # 0x140068578
   140014e95:	test   eax,eax
   140014e97:	je     0x140014eb1
   140014e99:	lea    rcx,[rsp+0x30]
   140014e9e:	call   QWORD PTR [rip+0x536ec]        # 0x140068590
   140014ea4:	lea    rcx,[rsp+0x30]
   140014ea9:	call   QWORD PTR [rip+0x536f1]        # 0x1400685a0
   140014eaf:	jmp    0x140014e82
   140014eb1:	xor    r9d,r9d
   140014eb4:	lea    rax,[rip+0x587ad]        # 0x14006d668
   140014ebb:	lea    rcx,[rip+0x5859e]        # 0x14006d460
   140014ec2:	mov    QWORD PTR [rsp+0x28],rax
   140014ec7:	lea    r8d,[r9+0x3]
   140014ecb:	mov    edx,0xeb
   140014ed0:	mov    QWORD PTR [rsp+0x20],rdi
   140014ed5:	call   0x140003150
   140014eda:	mov    r11,QWORD PTR [rbx+0x30]
   140014ede:	test   r11,r11
   140014ee1:	je     0x140014f1e
   140014ee3:	xor    r9d,r9d
   140014ee6:	lea    rax,[rip+0x587a3]        # 0x14006d690
   140014eed:	mov    QWORD PTR [rsp+0x28],r11
   140014ef2:	lea    rcx,[rip+0x58567]        # 0x14006d460
   140014ef9:	lea    r8d,[r9+0x3]
   140014efd:	mov    edx,0xf4
   140014f02:	mov    QWORD PTR [rsp+0x20],rax
   140014f07:	call   0x140003150
   140014f0c:	mov    rcx,QWORD PTR [rbx+0x30]
   140014f10:	call   QWORD PTR [rip+0x53692]        # 0x1400685a8
   140014f16:	mov    QWORD PTR [rbx+0x30],0x0
   140014f1e:	mov    rbx,QWORD PTR [rsp+0x70]
   140014f23:	add    rsp,0x60
   140014f27:	pop    rdi
   140014f28:	ret    
   140014f29:	int3   
   140014f2a:	int3   
   140014f2b:	int3   
   140014f2c:	int3   
   140014f2d:	int3   
   140014f2e:	int3   
   140014f2f:	int3   
   140014f30:	mov    QWORD PTR [rsp+0x8],rbx
   140014f35:	mov    QWORD PTR [rsp+0x10],rbp
   140014f3a:	mov    QWORD PTR [rsp+0x18],rsi
   140014f3f:	push   rdi
   140014f40:	sub    rsp,0x30
   140014f44:	mov    rdi,r9
   140014f47:	mov    ebx,r8d
   140014f4a:	mov    rsi,rdx
   140014f4d:	mov    rbp,rcx
   140014f50:	cmp    r8d,0xff
   140014f57:	jne    0x140014f88
   140014f59:	lea    rax,[rip+0x58760]        # 0x14006d6c0
   140014f60:	xor    r9d,r9d
   140014f63:	lea    edx,[r8+0x16]
   140014f67:	mov    QWORD PTR [rsp+0x28],rax
   140014f6c:	lea    rax,[rip+0x5652d]        # 0x14006b4a0
   140014f73:	lea    r8d,[r9+0x2]
   140014f77:	lea    rcx,[rip+0x584e2]        # 0x14006d460
   140014f7e:	mov    QWORD PTR [rsp+0x20],rax
   140014f83:	call   0x140003150
   140014f88:	mov    rax,QWORD PTR [rsp+0x60]
   140014f8d:	mov    r9,rdi
   140014f90:	mov    r8d,ebx
   140014f93:	mov    rdx,rsi
   140014f96:	mov    rcx,rbp
   140014f99:	mov    QWORD PTR [rsp+0x20],rax
   140014f9e:	call   0x140012a90
   140014fa3:	mov    rbx,QWORD PTR [rsp+0x40]
   140014fa8:	mov    rbp,QWORD PTR [rsp+0x48]
   140014fad:	mov    rsi,QWORD PTR [rsp+0x50]
   140014fb2:	add    rsp,0x30
   140014fb6:	pop    rdi
   140014fb7:	ret    
   140014fb8:	int3   
   140014fb9:	int3   
   140014fba:	int3   
   140014fbb:	int3   
   140014fbc:	int3   
   140014fbd:	int3   
   140014fbe:	int3   
   140014fbf:	int3   
   140014fc0:	rex push rbx
   140014fc2:	sub    rsp,0x20
   140014fc6:	mov    rax,QWORD PTR [rcx]
   140014fc9:	mov    rbx,rdx
   140014fcc:	mov    DWORD PTR [rsp+0x40],0x0
   140014fd4:	mov    r9d,DWORD PTR [rax-0x10]
   140014fd8:	sub    r9d,r8d
   140014fdb:	call   0x14000d540
   140014fe0:	mov    rax,rbx
   140014fe3:	add    rsp,0x20
   140014fe7:	pop    rbx
   140014fe8:	ret    
   140014fe9:	int3   
   140014fea:	int3   
   140014feb:	int3   
   140014fec:	int3   
   140014fed:	int3   
   140014fee:	int3   
   140014fef:	int3   
   140014ff0:	mov    QWORD PTR [rsp+0x8],rcx
   140014ff5:	push   rdi
   140014ff6:	sub    rsp,0x40
   140014ffa:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140015003:	mov    QWORD PTR [rsp+0x60],rbx
   140015008:	mov    QWORD PTR [rsp+0x68],rsi
   14001500d:	mov    rsi,rdx
   140015010:	mov    rdi,rcx
   140015013:	xor    ebx,ebx
   140015015:	mov    DWORD PTR [rsp+0x58],ebx
   140015019:	mov    rax,QWORD PTR [rdx]
   14001501c:	mov    rcx,QWORD PTR [rax-0x18]
   140015020:	test   rcx,rcx
   140015023:	je     0x140015033
   140015025:	mov    rax,QWORD PTR [rcx]
   140015028:	call   QWORD PTR [rax+0x20]
   14001502b:	mov    rcx,rax
   14001502e:	test   rax,rax
   140015031:	jne    0x140015047
   140015033:	lea    rcx,[rip+0x7171e]        # 0x140086758
   14001503a:	mov    rax,QWORD PTR [rip+0x71717]        # 0x140086758
   140015041:	call   QWORD PTR [rax+0x20]
   140015044:	mov    rcx,rax
   140015047:	test   rcx,rcx
   14001504a:	setne  bl
   14001504d:	test   ebx,ebx
   14001504f:	jne    0x14001505c
   140015051:	mov    ecx,0x80004005
   140015056:	call   0x1400025f0
   14001505b:	int3   
   14001505c:	mov    rax,QWORD PTR [rcx]
   14001505f:	call   QWORD PTR [rax+0x18]
   140015062:	add    rax,0x18
   140015066:	mov    QWORD PTR [rdi],rax
   140015069:	mov    DWORD PTR [rsp+0x58],0x1
   140015071:	mov    rdx,QWORD PTR [rsi]
   140015074:	mov    DWORD PTR [rsp+0x20],0xe
   14001507c:	lea    r9,[rip+0x5b425]        # 0x1400704a8
   140015083:	mov    r8d,DWORD PTR [rdx-0x10]
   140015087:	mov    rcx,rdi
   14001508a:	call   0x1400150b0
   14001508f:	mov    rax,rdi
   140015092:	mov    rbx,QWORD PTR [rsp+0x60]
   140015097:	mov    rsi,QWORD PTR [rsp+0x68]
   14001509c:	add    rsp,0x40
   1400150a0:	pop    rdi
   1400150a1:	ret    
   1400150a2:	int3   
   1400150a3:	int3   
   1400150a4:	int3   
   1400150a5:	int3   
   1400150a6:	int3   
   1400150a7:	int3   
   1400150a8:	int3   
   1400150a9:	int3   
   1400150aa:	int3   
   1400150ab:	int3   
   1400150ac:	int3   
   1400150ad:	int3   
   1400150ae:	int3   
   1400150af:	int3   
   1400150b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400150b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400150ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400150bf:	push   r12
   1400150c1:	push   r13
   1400150c3:	push   r14
   1400150c5:	sub    rsp,0x20
   1400150c9:	movsxd r12,DWORD PTR [rsp+0x60]
   1400150ce:	movsxd rbx,r8d
   1400150d1:	mov    r13,r9
   1400150d4:	lea    esi,[rbx+r12*1]
   1400150d8:	mov    r14,rdx
   1400150db:	mov    rbp,rcx
   1400150de:	test   esi,esi
   1400150e0:	jns    0x1400150ed
   1400150e2:	mov    ecx,0x80070057
   1400150e7:	call   0x1400025f0
   1400150ec:	int3   
   1400150ed:	mov    rax,QWORD PTR [rcx]
   1400150f0:	mov    ecx,0x1
   1400150f5:	mov    QWORD PTR [rsp+0x40],rdi
   1400150fa:	sub    ecx,DWORD PTR [rax-0x8]
   1400150fd:	mov    eax,DWORD PTR [rax-0xc]
   140015100:	sub    eax,esi
   140015102:	or     ecx,eax
   140015104:	jge    0x140015110
   140015106:	mov    edx,esi
   140015108:	mov    rcx,rbp
   14001510b:	call   0x140008df0
   140015110:	mov    rdi,QWORD PTR [rbp+0x0]
   140015114:	mov    r9,rbx
   140015117:	mov    r8,r14
   14001511a:	mov    rcx,rdi
   14001511d:	mov    rdx,rbx
   140015120:	call   0x140033ccc
   140015125:	lea    rcx,[rbx+rdi*1]
   140015129:	mov    rdx,r12
   14001512c:	mov    r9,r12
   14001512f:	mov    r8,r13
   140015132:	call   0x140033ccc
   140015137:	mov    r11,QWORD PTR [rbp+0x0]
   14001513b:	mov    rdi,QWORD PTR [rsp+0x40]
   140015140:	cmp    esi,DWORD PTR [r11-0xc]
   140015144:	jg     0x14001516f
   140015146:	mov    rbx,QWORD PTR [rsp+0x48]
   14001514b:	mov    DWORD PTR [r11-0x10],esi
   14001514f:	mov    rax,QWORD PTR [rbp+0x0]
   140015153:	mov    rbp,QWORD PTR [rsp+0x50]
   140015158:	movsxd rcx,esi
   14001515b:	mov    rsi,QWORD PTR [rsp+0x58]
   140015160:	mov    BYTE PTR [rcx+rax*1],0x0
   140015164:	add    rsp,0x20
   140015168:	pop    r14
   14001516a:	pop    r13
   14001516c:	pop    r12
   14001516e:	ret    
   14001516f:	mov    ecx,0x80070057
   140015174:	call   0x1400025f0
   140015179:	int3   
   14001517a:	int3   
   14001517b:	int3   
   14001517c:	int3   
   14001517d:	int3   
   14001517e:	int3   
   14001517f:	int3   
   140015180:	mov    QWORD PTR [rsp+0x10],rdx
   140015185:	mov    QWORD PTR [rsp+0x18],r8
   14001518a:	mov    QWORD PTR [rsp+0x20],r9
   14001518f:	sub    rsp,0x28
   140015193:	lea    r8,[rsp+0x40]
   140015198:	call   0x1400151b0
   14001519d:	add    rsp,0x28
   1400151a1:	ret    
   1400151a2:	int3   
   1400151a3:	int3   
   1400151a4:	int3   
   1400151a5:	int3   
   1400151a6:	int3   
   1400151a7:	int3   
   1400151a8:	int3   
   1400151a9:	int3   
   1400151aa:	int3   
   1400151ab:	int3   
   1400151ac:	int3   
   1400151ad:	int3   
   1400151ae:	int3   
   1400151af:	int3   
   1400151b0:	mov    QWORD PTR [rsp+0x10],rbp
   1400151b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400151ba:	push   rdi
   1400151bb:	sub    rsp,0x20
   1400151bf:	mov    rbp,r8
   1400151c2:	mov    rsi,rdx
   1400151c5:	mov    rdi,rcx
   1400151c8:	test   rdx,rdx
   1400151cb:	jne    0x1400151d8
   1400151cd:	mov    ecx,0x80070057
   1400151d2:	call   0x1400025f0
   1400151d7:	int3   
   1400151d8:	mov    rdx,r8
   1400151db:	mov    rcx,rsi
   1400151de:	mov    QWORD PTR [rsp+0x30],rbx
   1400151e3:	call   0x140034970
   1400151e8:	movsxd rbx,eax
   1400151eb:	test   eax,eax
   1400151ed:	jns    0x1400151fa
   1400151ef:	mov    ecx,0x80004005
   1400151f4:	call   0x1400025f0
   1400151f9:	int3   
   1400151fa:	mov    rax,QWORD PTR [rdi]
   1400151fd:	mov    ecx,0x1
   140015202:	sub    ecx,DWORD PTR [rax-0x8]
   140015205:	mov    eax,DWORD PTR [rax-0xc]
   140015208:	sub    eax,ebx
   14001520a:	or     ecx,eax
   14001520c:	jge    0x140015218
   14001520e:	mov    edx,ebx
   140015210:	mov    rcx,rdi
   140015213:	call   0x140008df0
   140015218:	mov    rcx,QWORD PTR [rdi]
   14001521b:	lea    eax,[rbx+0x1]
   14001521e:	mov    r9,rbp
   140015221:	movsxd rdx,eax
   140015224:	mov    r8,rsi
   140015227:	call   0x140033b44
   14001522c:	mov    r11,QWORD PTR [rdi]
   14001522f:	cmp    ebx,DWORD PTR [r11-0xc]
   140015233:	jg     0x140015255
   140015235:	mov    rbp,QWORD PTR [rsp+0x38]
   14001523a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001523f:	mov    DWORD PTR [r11-0x10],ebx
   140015243:	mov    rax,QWORD PTR [rdi]
   140015246:	mov    BYTE PTR [rbx+rax*1],0x0
   14001524a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001524f:	add    rsp,0x20
   140015253:	pop    rdi
   140015254:	ret    
   140015255:	mov    ecx,0x80070057
   14001525a:	call   0x1400025f0
   14001525f:	int3   
   140015260:	sub    rsp,0x28
   140015264:	cmp    DWORD PTR [rsp+0x60],0x0
   140015269:	mov    r10,r9
   14001526c:	jne    0x1400152c4
   14001526e:	cmp    r8d,0x1
   140015272:	jne    0x140015288
   140015274:	mov    rcx,QWORD PTR [rsp+0x58]
   140015279:	mov    eax,r8d
   14001527c:	mov    QWORD PTR [rcx],0x1
   140015283:	add    rsp,0x28
   140015287:	ret    
   140015288:	cmp    r8d,0x218
   14001528f:	jne    0x1400152c4
   140015291:	cmp    QWORD PTR [rcx+0x48],0x0
   140015296:	je     0x1400152ae
   140015298:	mov    rcx,QWORD PTR [rcx+0x48]
   14001529c:	mov    r9,QWORD PTR [rsp+0x50]
   1400152a1:	mov    r8,r10
   1400152a4:	mov    rax,QWORD PTR [rcx]
   1400152a7:	mov    edx,0x218
   1400152ac:	call   QWORD PTR [rax]
   1400152ae:	mov    rax,QWORD PTR [rsp+0x58]
   1400152b3:	mov    QWORD PTR [rax],0x1
   1400152ba:	mov    eax,0x1
   1400152bf:	add    rsp,0x28
   1400152c3:	ret    
   1400152c4:	xor    eax,eax
   1400152c6:	add    rsp,0x28
   1400152ca:	ret    
   1400152cb:	int3   
   1400152cc:	int3   
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400152d5:	push   rdi
   1400152d6:	sub    rsp,0x20
   1400152da:	lea    rax,[rip+0x58477]        # 0x14006d758
   1400152e1:	mov    rbx,rcx
   1400152e4:	mov    edi,edx
   1400152e6:	mov    QWORD PTR [rcx],rax
   1400152e9:	mov    rcx,QWORD PTR [rcx+0x28]
   1400152ed:	test   rcx,rcx
   1400152f0:	je     0x1400152f7
   1400152f2:	call   0x140042c44
   1400152f7:	test   dil,0x1
   1400152fb:	je     0x140015305
   1400152fd:	mov    rcx,rbx
   140015300:	call   0x1400330c0
   140015305:	mov    rax,rbx
   140015308:	mov    rbx,QWORD PTR [rsp+0x30]
   14001530d:	add    rsp,0x20
   140015311:	pop    rdi
   140015312:	ret    
   140015313:	int3   
   140015314:	int3   
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	int3   
   140015319:	int3   
   14001531a:	int3   
   14001531b:	int3   
   14001531c:	int3   
   14001531d:	int3   
   14001531e:	int3   
   14001531f:	int3   
   140015320:	rex push rbp
   140015322:	push   rbx
   140015323:	push   rdi
   140015324:	mov    rbp,rsp
   140015327:	sub    rsp,0x30
   14001532b:	xor    r9d,r9d
   14001532e:	lea    rax,[rip+0x58443]        # 0x14006d778
   140015335:	mov    rbx,rcx
   140015338:	mov    QWORD PTR [rsp+0x28],rax
   14001533d:	lea    rax,[rip+0x5615c]        # 0x14006b4a0
   140015344:	lea    edx,[r9+0x17]
   140015348:	lea    r8d,[r9+0x3]
   14001534c:	lea    rcx,[rip+0x5845d]        # 0x14006d7b0
   140015353:	mov    QWORD PTR [rsp+0x20],rax
   140015358:	call   0x140003150
   14001535d:	lea    rax,[rbp+0x38]
   140015361:	lea    rdx,[rip+0x584c8]        # 0x14006d830
   140015368:	xor    edi,edi
   14001536a:	mov    r9d,0x20019
   140015370:	xor    r8d,r8d
   140015373:	mov    rcx,0xffffffff80000001
   14001537a:	mov    QWORD PTR [rsp+0x20],rax
   14001537f:	mov    DWORD PTR [rbp+0x20],0x1e
   140015386:	mov    QWORD PTR [rbp+0x38],rdi
   14001538a:	call   QWORD PTR [rip+0x52cc0]        # 0x140068050
   140015390:	mov    rcx,QWORD PTR [rbp+0x38]
   140015394:	test   rcx,rcx
   140015397:	je     0x1400153d0
   140015399:	lea    rax,[rbp+0x28]
   14001539d:	lea    r9,[rbp+0x30]
   1400153a1:	lea    rdx,[rip+0x58468]        # 0x14006d810
   1400153a8:	mov    QWORD PTR [rsp+0x28],rax
   1400153ad:	lea    rax,[rbp+0x20]
   1400153b1:	xor    r8d,r8d
   1400153b4:	mov    QWORD PTR [rsp+0x20],rax
   1400153b9:	mov    DWORD PTR [rbp+0x28],0x4
   1400153c0:	call   QWORD PTR [rip+0x52c92]        # 0x140068058
   1400153c6:	mov    rcx,QWORD PTR [rbp+0x38]
   1400153ca:	call   QWORD PTR [rip+0x52c78]        # 0x140068048
   1400153d0:	mov    eax,DWORD PTR [rbp+0x20]
   1400153d3:	lea    rdx,[rip+0x58456]        # 0x14006d830
   1400153da:	mov    r9d,0x20019
   1400153e0:	mov    DWORD PTR [rbx+0x8],eax
   1400153e3:	lea    rax,[rbp+0x38]
   1400153e7:	xor    r8d,r8d
   1400153ea:	mov    rcx,0xffffffff80000001
   1400153f1:	mov    DWORD PTR [rbp+0x20],0x78
   1400153f8:	mov    QWORD PTR [rbp+0x38],rdi
   1400153fc:	mov    QWORD PTR [rsp+0x20],rax
   140015401:	call   QWORD PTR [rip+0x52c49]        # 0x140068050
   140015407:	mov    rcx,QWORD PTR [rbp+0x38]
   14001540b:	test   rcx,rcx
   14001540e:	je     0x140015447
   140015410:	lea    rax,[rbp+0x28]
   140015414:	lea    r9,[rbp+0x30]
   140015418:	lea    rdx,[rip+0x58449]        # 0x14006d868
   14001541f:	mov    QWORD PTR [rsp+0x28],rax
   140015424:	lea    rax,[rbp+0x20]
   140015428:	xor    r8d,r8d
   14001542b:	mov    QWORD PTR [rsp+0x20],rax
   140015430:	mov    DWORD PTR [rbp+0x28],0x4
   140015437:	call   QWORD PTR [rip+0x52c1b]        # 0x140068058
   14001543d:	mov    rcx,QWORD PTR [rbp+0x38]
   140015441:	call   QWORD PTR [rip+0x52c01]        # 0x140068048
   140015447:	mov    eax,DWORD PTR [rbp+0x20]
   14001544a:	lea    rdx,[rip+0x583df]        # 0x14006d830
   140015451:	mov    r9d,0x20019
   140015457:	mov    DWORD PTR [rbx+0xc],eax
   14001545a:	lea    rax,[rbp+0x38]
   14001545e:	xor    r8d,r8d
   140015461:	mov    rcx,0xffffffff80000001
   140015468:	mov    DWORD PTR [rbp+0x20],0xa
   14001546f:	mov    QWORD PTR [rbp+0x38],rdi
   140015473:	mov    QWORD PTR [rsp+0x20],rax
   140015478:	call   QWORD PTR [rip+0x52bd2]        # 0x140068050
   14001547e:	mov    rcx,QWORD PTR [rbp+0x38]
   140015482:	test   rcx,rcx
   140015485:	je     0x1400154be
   140015487:	lea    rax,[rbp+0x28]
   14001548b:	lea    r9,[rbp+0x30]
   14001548f:	lea    rdx,[rip+0x583f2]        # 0x14006d888
   140015496:	mov    QWORD PTR [rsp+0x28],rax
   14001549b:	lea    rax,[rbp+0x20]
   14001549f:	xor    r8d,r8d
   1400154a2:	mov    QWORD PTR [rsp+0x20],rax
   1400154a7:	mov    DWORD PTR [rbp+0x28],0x4
   1400154ae:	call   QWORD PTR [rip+0x52ba4]        # 0x140068058
   1400154b4:	mov    rcx,QWORD PTR [rbp+0x38]
   1400154b8:	call   QWORD PTR [rip+0x52b8a]        # 0x140068048
   1400154be:	mov    eax,DWORD PTR [rbp+0x20]
   1400154c1:	lea    rdx,[rip+0x58368]        # 0x14006d830
   1400154c8:	mov    r9d,0x20019
   1400154ce:	mov    DWORD PTR [rbx+0x10],eax
   1400154d1:	lea    rax,[rbp+0x38]
   1400154d5:	xor    r8d,r8d
   1400154d8:	mov    rcx,0xffffffff80000001
   1400154df:	mov    DWORD PTR [rbp+0x20],0x1e
   1400154e6:	mov    QWORD PTR [rbp+0x38],rdi
   1400154ea:	mov    QWORD PTR [rsp+0x20],rax
   1400154ef:	call   QWORD PTR [rip+0x52b5b]        # 0x140068050
   1400154f5:	mov    rcx,QWORD PTR [rbp+0x38]
   1400154f9:	test   rcx,rcx
   1400154fc:	je     0x140015535
   1400154fe:	lea    rax,[rbp+0x28]
   140015502:	lea    r9,[rbp+0x30]
   140015506:	lea    rdx,[rip+0x58393]        # 0x14006d8a0
   14001550d:	mov    QWORD PTR [rsp+0x28],rax
   140015512:	lea    rax,[rbp+0x20]
   140015516:	xor    r8d,r8d
   140015519:	mov    QWORD PTR [rsp+0x20],rax
   14001551e:	mov    DWORD PTR [rbp+0x28],0x4
   140015525:	call   QWORD PTR [rip+0x52b2d]        # 0x140068058
   14001552b:	mov    rcx,QWORD PTR [rbp+0x38]
   14001552f:	call   QWORD PTR [rip+0x52b13]        # 0x140068048
   140015535:	mov    eax,DWORD PTR [rbp+0x20]
   140015538:	lea    rdx,[rip+0x582f1]        # 0x14006d830
   14001553f:	mov    r9d,0x20019
   140015545:	mov    DWORD PTR [rbx+0x14],eax
   140015548:	lea    rax,[rbp+0x38]
   14001554c:	xor    r8d,r8d
   14001554f:	mov    rcx,0xffffffff80000001
   140015556:	mov    DWORD PTR [rbp+0x20],0xffffffa6
   14001555d:	mov    QWORD PTR [rbp+0x38],rdi
   140015561:	mov    QWORD PTR [rsp+0x20],rax
   140015566:	call   QWORD PTR [rip+0x52ae4]        # 0x140068050
   14001556c:	mov    rcx,QWORD PTR [rbp+0x38]
   140015570:	test   rcx,rcx
   140015573:	je     0x1400155ac
   140015575:	lea    rax,[rbp+0x28]
   140015579:	lea    r9,[rbp+0x30]
   14001557d:	lea    rdx,[rip+0x58334]        # 0x14006d8b8
   140015584:	mov    QWORD PTR [rsp+0x28],rax
   140015589:	lea    rax,[rbp+0x20]
   14001558d:	xor    r8d,r8d
   140015590:	mov    QWORD PTR [rsp+0x20],rax
   140015595:	mov    DWORD PTR [rbp+0x28],0x4
   14001559c:	call   QWORD PTR [rip+0x52ab6]        # 0x140068058
   1400155a2:	mov    rcx,QWORD PTR [rbp+0x38]
   1400155a6:	call   QWORD PTR [rip+0x52a9c]        # 0x140068048
   1400155ac:	mov    eax,DWORD PTR [rbp+0x20]
   1400155af:	lea    rdx,[rip+0x5827a]        # 0x14006d830
   1400155b6:	mov    r9d,0x20019
   1400155bc:	mov    DWORD PTR [rbx+0x18],eax
   1400155bf:	lea    rax,[rbp+0x38]
   1400155c3:	xor    r8d,r8d
   1400155c6:	mov    rcx,0xffffffff80000001
   1400155cd:	mov    DWORD PTR [rbp+0x20],0xffffffe2
   1400155d4:	mov    QWORD PTR [rbp+0x38],rdi
   1400155d8:	mov    QWORD PTR [rsp+0x20],rax
   1400155dd:	call   QWORD PTR [rip+0x52a6d]        # 0x140068050
   1400155e3:	mov    rcx,QWORD PTR [rbp+0x38]
   1400155e7:	test   rcx,rcx
   1400155ea:	je     0x140015623
   1400155ec:	lea    rax,[rbp+0x28]
   1400155f0:	lea    r9,[rbp+0x30]
   1400155f4:	lea    rdx,[rip+0x582d5]        # 0x14006d8d0
   1400155fb:	mov    QWORD PTR [rsp+0x28],rax
   140015600:	lea    rax,[rbp+0x20]
   140015604:	xor    r8d,r8d
   140015607:	mov    QWORD PTR [rsp+0x20],rax
   14001560c:	mov    DWORD PTR [rbp+0x28],0x4
   140015613:	call   QWORD PTR [rip+0x52a3f]        # 0x140068058
   140015619:	mov    rcx,QWORD PTR [rbp+0x38]
   14001561d:	call   QWORD PTR [rip+0x52a25]        # 0x140068048
   140015623:	mov    eax,DWORD PTR [rbp+0x20]
   140015626:	lea    rdx,[rip+0x58203]        # 0x14006d830
   14001562d:	mov    r9d,0x20019
   140015633:	mov    DWORD PTR [rbx+0x1c],eax
   140015636:	lea    rax,[rbp+0x38]
   14001563a:	xor    r8d,r8d
   14001563d:	mov    rcx,0xffffffff80000001
   140015644:	mov    DWORD PTR [rbp+0x20],0xffffffe2
   14001564b:	mov    QWORD PTR [rbp+0x38],rdi
   14001564f:	mov    QWORD PTR [rsp+0x20],rax
   140015654:	call   QWORD PTR [rip+0x529f6]        # 0x140068050
   14001565a:	mov    rcx,QWORD PTR [rbp+0x38]
   14001565e:	test   rcx,rcx
   140015661:	je     0x14001569a
   140015663:	lea    rax,[rbp+0x28]
   140015667:	lea    r9,[rbp+0x30]
   14001566b:	lea    rdx,[rip+0x58276]        # 0x14006d8e8
   140015672:	mov    QWORD PTR [rsp+0x28],rax
   140015677:	lea    rax,[rbp+0x20]
   14001567b:	xor    r8d,r8d
   14001567e:	mov    QWORD PTR [rsp+0x20],rax
   140015683:	mov    DWORD PTR [rbp+0x28],0x4
   14001568a:	call   QWORD PTR [rip+0x529c8]        # 0x140068058
   140015690:	mov    rcx,QWORD PTR [rbp+0x38]
   140015694:	call   QWORD PTR [rip+0x529ae]        # 0x140068048
   14001569a:	mov    eax,DWORD PTR [rbp+0x20]
   14001569d:	lea    rdx,[rip+0x5818c]        # 0x14006d830
   1400156a4:	mov    r9d,0x20019
   1400156aa:	mov    DWORD PTR [rbx+0x20],eax
   1400156ad:	lea    rax,[rbp+0x38]
   1400156b1:	xor    r8d,r8d
   1400156b4:	mov    rcx,0xffffffff80000001
   1400156bb:	mov    DWORD PTR [rbp+0x20],0xfffffff6
   1400156c2:	mov    QWORD PTR [rbp+0x38],rdi
   1400156c6:	mov    QWORD PTR [rsp+0x20],rax
   1400156cb:	call   QWORD PTR [rip+0x5297f]        # 0x140068050
   1400156d1:	mov    rcx,QWORD PTR [rbp+0x38]
   1400156d5:	test   rcx,rcx
   1400156d8:	je     0x140015711
   1400156da:	lea    rax,[rbp+0x28]
   1400156de:	lea    r9,[rbp+0x30]
   1400156e2:	lea    rdx,[rip+0x58217]        # 0x14006d900
   1400156e9:	mov    QWORD PTR [rsp+0x28],rax
   1400156ee:	lea    rax,[rbp+0x20]
   1400156f2:	xor    r8d,r8d
   1400156f5:	mov    QWORD PTR [rsp+0x20],rax
   1400156fa:	mov    DWORD PTR [rbp+0x28],0x4
   140015701:	call   QWORD PTR [rip+0x52951]        # 0x140068058
   140015707:	mov    rcx,QWORD PTR [rbp+0x38]
   14001570b:	call   QWORD PTR [rip+0x52937]        # 0x140068048
   140015711:	mov    eax,DWORD PTR [rbp+0x20]
   140015714:	lea    rdx,[rip+0x58115]        # 0x14006d830
   14001571b:	mov    r9d,0x20019
   140015721:	mov    DWORD PTR [rbx+0x24],eax
   140015724:	lea    rax,[rbp+0x38]
   140015728:	xor    r8d,r8d
   14001572b:	mov    rcx,0xffffffff80000001
   140015732:	mov    DWORD PTR [rbp+0x20],0xf
   140015739:	mov    QWORD PTR [rbp+0x38],rdi
   14001573d:	mov    QWORD PTR [rsp+0x20],rax
   140015742:	call   QWORD PTR [rip+0x52908]        # 0x140068050
   140015748:	mov    rcx,QWORD PTR [rbp+0x38]
   14001574c:	test   rcx,rcx
   14001574f:	je     0x140015798
   140015751:	lea    rax,[rbp+0x28]
   140015755:	lea    r9,[rbp+0x30]
   140015759:	lea    rdx,[rip+0x581b8]        # 0x14006d918
   140015760:	mov    QWORD PTR [rsp+0x28],rax
   140015765:	lea    rax,[rbp+0x20]
   140015769:	xor    r8d,r8d
   14001576c:	mov    QWORD PTR [rsp+0x20],rax
   140015771:	mov    DWORD PTR [rbp+0x28],0x4
   140015778:	call   QWORD PTR [rip+0x528da]        # 0x140068058
   14001577e:	mov    rcx,QWORD PTR [rbp+0x38]
   140015782:	call   QWORD PTR [rip+0x528c0]        # 0x140068048
   140015788:	mov    r11d,DWORD PTR [rbp+0x20]
   14001578c:	mov    DWORD PTR [rbx+0x28],r11d
   140015790:	add    rsp,0x30
   140015794:	pop    rdi
   140015795:	pop    rbx
   140015796:	pop    rbp
   140015797:	ret    
   140015798:	mov    eax,DWORD PTR [rbp+0x20]
   14001579b:	mov    DWORD PTR [rbx+0x28],eax
   14001579e:	add    rsp,0x30
   1400157a2:	pop    rdi
   1400157a3:	pop    rbx
   1400157a4:	pop    rbp
   1400157a5:	ret    
   1400157a6:	int3   
   1400157a7:	int3   
   1400157a8:	int3   
   1400157a9:	int3   
   1400157aa:	int3   
   1400157ab:	int3   
   1400157ac:	int3   
   1400157ad:	int3   
   1400157ae:	int3   
   1400157af:	int3   
   1400157b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400157b5:	push   rbp
   1400157b6:	push   rsi
   1400157b7:	push   rdi
   1400157b8:	sub    rsp,0x60
   1400157bc:	mov    rdi,QWORD PTR [rcx+0x10]
   1400157c0:	xor    ebp,ebp
   1400157c2:	mov    rsi,rdx
   1400157c5:	mov    rbx,rcx
   1400157c8:	mov    QWORD PTR [rsp+0x90],rbp
   1400157d0:	test   rdi,rdi
   1400157d3:	je     0x140015865
   1400157d9:	cmp    QWORD PTR [rdi],rbp
   1400157dc:	je     0x140015859
   1400157de:	lea    rcx,[rip+0x5813b]        # 0x14006d920
   1400157e5:	call   QWORD PTR [rip+0x52b4d]        # 0x140068338
   1400157eb:	test   rax,rax
   1400157ee:	jne    0x1400157f8
   1400157f0:	lea    eax,[rbp+0x1]
   1400157f3:	jmp    0x1400158a3
   1400157f8:	lea    rdx,[rip+0x58131]        # 0x14006d930
   1400157ff:	mov    rcx,rax
   140015802:	call   QWORD PTR [rip+0x52910]        # 0x140068118
   140015808:	test   rax,rax
   14001580b:	je     0x14001585e
   14001580d:	mov    rcx,QWORD PTR [rdi]
   140015810:	mov    QWORD PTR [rsp+0x50],rbp
   140015815:	xor    r9d,r9d
   140015818:	mov    QWORD PTR [rsp+0x48],rcx
   14001581d:	lea    rcx,[rsp+0x80]
   140015825:	xor    r8d,r8d
   140015828:	mov    QWORD PTR [rsp+0x40],rcx
   14001582d:	lea    rcx,[rsp+0x90]
   140015835:	mov    rdx,rsi
   140015838:	mov    QWORD PTR [rsp+0x38],rcx
   14001583d:	mov    QWORD PTR [rsp+0x30],rbp
   140015842:	mov    rcx,0xffffffff80000002
   140015849:	mov    DWORD PTR [rsp+0x28],0x20019
   140015851:	mov    DWORD PTR [rsp+0x20],ebp
   140015855:	call   rax
   140015857:	jmp    0x1400158a3
   140015859:	cmp    DWORD PTR [rdi+0x8],ebp
   14001585c:	jne    0x140015865
   14001585e:	mov    eax,0x1
   140015863:	jmp    0x1400158a3
   140015865:	lea    rax,[rsp+0x80]
   14001586d:	xor    r9d,r9d
   140015870:	xor    r8d,r8d
   140015873:	mov    QWORD PTR [rsp+0x40],rax
   140015878:	lea    rax,[rsp+0x90]
   140015880:	mov    rcx,0xffffffff80000002
   140015887:	mov    QWORD PTR [rsp+0x38],rax
   14001588c:	mov    QWORD PTR [rsp+0x30],rbp
   140015891:	mov    DWORD PTR [rsp+0x28],0x20019
   140015899:	mov    DWORD PTR [rsp+0x20],ebp
   14001589d:	call   QWORD PTR [rip+0x52795]        # 0x140068038
   1400158a3:	test   eax,eax
   1400158a5:	jne    0x1400158c8
   1400158a7:	mov    rcx,QWORD PTR [rbx]
   1400158aa:	mov    eax,ebp
   1400158ac:	test   rcx,rcx
   1400158af:	je     0x1400158ba
   1400158b1:	call   QWORD PTR [rip+0x52791]        # 0x140068048
   1400158b7:	mov    QWORD PTR [rbx],rbp
   1400158ba:	mov    rcx,QWORD PTR [rsp+0x90]
   1400158c2:	mov    DWORD PTR [rbx+0x8],ebp
   1400158c5:	mov    QWORD PTR [rbx],rcx
   1400158c8:	mov    rbx,QWORD PTR [rsp+0x88]
   1400158d0:	add    rsp,0x60
   1400158d4:	pop    rdi
   1400158d5:	pop    rsi
   1400158d6:	pop    rbp
   1400158d7:	ret    
   1400158d8:	int3   
   1400158d9:	int3   
   1400158da:	int3   
   1400158db:	int3   
   1400158dc:	int3   
   1400158dd:	int3   
   1400158de:	int3   
   1400158df:	int3   
   1400158e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400158e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400158ea:	mov    QWORD PTR [rsp+0x20],rsi
   1400158ef:	push   rdi
   1400158f0:	sub    rsp,0x60
   1400158f4:	xor    ebx,ebx
   1400158f6:	mov    rsi,r9
   1400158f9:	mov    rbp,r8
   1400158fc:	mov    edi,0x80004005
   140015901:	test   r8,r8
   140015904:	jne    0x140015913
   140015906:	call   QWORD PTR [rip+0x5270c]        # 0x140068018
   14001590c:	mov    edi,eax
   14001590e:	jmp    0x1400159ab
   140015913:	lea    rax,[rsp+0x80]
   14001591b:	xor    r8d,r8d
   14001591e:	mov    QWORD PTR [rsp+0x50],rbx
   140015923:	mov    QWORD PTR [rsp+0x40],rax
   140015928:	lea    rax,[rsp+0x50]
   14001592d:	mov    QWORD PTR [rsp+0x38],rax
   140015932:	mov    QWORD PTR [rsp+0x30],rbx
   140015937:	mov    DWORD PTR [rsp+0x28],0x2001f
   14001593f:	mov    DWORD PTR [rsp+0x20],ebx
   140015943:	test   r9,r9
   140015946:	jne    0x140015963
   140015948:	call   QWORD PTR [rip+0x526ea]        # 0x140068038
   14001594e:	mov    rcx,QWORD PTR [rsp+0x50]
   140015953:	test   rcx,rcx
   140015956:	je     0x1400159ab
   140015958:	mov    rdx,rbp
   14001595b:	call   QWORD PTR [rip+0x526cf]        # 0x140068030
   140015961:	jmp    0x14001599e
   140015963:	xor    r9d,r9d
   140015966:	call   QWORD PTR [rip+0x526cc]        # 0x140068038
   14001596c:	cmp    QWORD PTR [rsp+0x50],rbx
   140015971:	je     0x1400159ab
   140015973:	mov    rcx,rsi
   140015976:	call   QWORD PTR [rip+0x52a64]        # 0x1400683e0
   14001597c:	mov    rcx,QWORD PTR [rsp+0x50]
   140015981:	mov    r9d,0x1
   140015987:	inc    eax
   140015989:	xor    r8d,r8d
   14001598c:	mov    rdx,rbp
   14001598f:	mov    DWORD PTR [rsp+0x28],eax
   140015993:	mov    QWORD PTR [rsp+0x20],rsi
   140015998:	call   QWORD PTR [rip+0x526a2]        # 0x140068040
   14001599e:	mov    rcx,QWORD PTR [rsp+0x50]
   1400159a3:	mov    edi,eax
   1400159a5:	call   QWORD PTR [rip+0x5269d]        # 0x140068048
   1400159ab:	mov    rbp,QWORD PTR [rsp+0x78]
   1400159b0:	mov    rsi,QWORD PTR [rsp+0x88]
   1400159b8:	test   edi,edi
   1400159ba:	sete   bl
   1400159bd:	mov    eax,ebx
   1400159bf:	mov    rbx,QWORD PTR [rsp+0x70]
   1400159c4:	add    rsp,0x60
   1400159c8:	pop    rdi
   1400159c9:	ret    
   1400159ca:	int3   
   1400159cb:	int3   
   1400159cc:	int3   
   1400159cd:	int3   
   1400159ce:	int3   
   1400159cf:	int3   
   1400159d0:	mov    rax,rsp
   1400159d3:	mov    QWORD PTR [rax+0x8],rcx
   1400159d7:	push   rsi
   1400159d8:	push   rdi
   1400159d9:	push   r12
   1400159db:	sub    rsp,0x50
   1400159df:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400159e8:	mov    QWORD PTR [rax+0x10],rbx
   1400159ec:	mov    QWORD PTR [rax+0x18],rbp
   1400159f0:	mov    r12,r8
   1400159f3:	mov    rdi,rdx
   1400159f6:	mov    rbx,rcx
   1400159f9:	xor    esi,esi
   1400159fb:	mov    DWORD PTR [rax-0x38],esi
   1400159fe:	lea    rdx,[rip+0x55891]        # 0x14006b296
   140015a05:	call   0x14000c920
   140015a0a:	mov    ebp,0x1
   140015a0f:	mov    DWORD PTR [rsp+0x30],ebp
   140015a13:	mov    QWORD PTR [rsp+0x38],rsi
   140015a18:	lea    rax,[rsp+0x38]
   140015a1d:	mov    QWORD PTR [rsp+0x20],rax
   140015a22:	mov    r9d,0x20019
   140015a28:	xor    r8d,r8d
   140015a2b:	mov    rdx,rdi
   140015a2e:	mov    rcx,0xffffffff80000002
   140015a35:	call   QWORD PTR [rip+0x52615]        # 0x140068050
   140015a3b:	mov    rcx,QWORD PTR [rsp+0x38]
   140015a40:	test   rcx,rcx
   140015a43:	je     0x140015b35
   140015a49:	mov    DWORD PTR [rsp+0x88],esi
   140015a50:	lea    rax,[rsp+0x88]
   140015a58:	mov    QWORD PTR [rsp+0x28],rax
   140015a5d:	mov    QWORD PTR [rsp+0x20],rsi
   140015a62:	lea    r9,[rsp+0x34]
   140015a67:	xor    r8d,r8d
   140015a6a:	mov    rdx,r12
   140015a6d:	call   QWORD PTR [rip+0x525e5]        # 0x140068058
   140015a73:	mov    edx,DWORD PTR [rsp+0x88]
   140015a7a:	test   edx,edx
   140015a7c:	je     0x140015b2a
   140015a82:	jns    0x140015a8f
   140015a84:	mov    ecx,0x80070057
   140015a89:	call   0x1400025f0
   140015a8e:	int3   
   140015a8f:	mov    rax,QWORD PTR [rbx]
   140015a92:	sub    ebp,DWORD PTR [rax-0x8]
   140015a95:	mov    eax,DWORD PTR [rax-0xc]
   140015a98:	sub    eax,edx
   140015a9a:	or     eax,ebp
   140015a9c:	jge    0x140015aa6
   140015a9e:	mov    rcx,rbx
   140015aa1:	call   0x140008df0
   140015aa6:	mov    rbp,QWORD PTR [rbx]
   140015aa9:	lea    rax,[rsp+0x88]
   140015ab1:	mov    QWORD PTR [rsp+0x28],rax
   140015ab6:	mov    QWORD PTR [rsp+0x20],rbp
   140015abb:	lea    r9,[rsp+0x34]
   140015ac0:	xor    r8d,r8d
   140015ac3:	mov    rdx,r12
   140015ac6:	mov    rcx,QWORD PTR [rsp+0x38]
   140015acb:	call   QWORD PTR [rip+0x52587]        # 0x140068058
   140015ad1:	xor    eax,eax
   140015ad3:	or     rcx,0xffffffffffffffff
   140015ad7:	mov    rdi,rbp
   140015ada:	repnz scas al,BYTE PTR es:[rdi]
   140015adc:	not    rcx
   140015adf:	dec    rcx
   140015ae2:	je     0x140015af1
   140015ae4:	mov    eax,DWORD PTR [rsp+0x88]
   140015aeb:	dec    eax
   140015aed:	mov    BYTE PTR [rax+rbp*1],0x0
   140015af1:	mov    rcx,QWORD PTR [rbx]
   140015af4:	test   rcx,rcx
   140015af7:	je     0x140015b08
   140015af9:	movsxd rdx,DWORD PTR [rcx-0xc]
   140015afd:	call   0x1400345f8
   140015b02:	mov    esi,eax
   140015b04:	test   eax,eax
   140015b06:	js     0x140015b1f
   140015b08:	mov    rax,QWORD PTR [rbx]
   140015b0b:	cmp    esi,DWORD PTR [rax-0xc]
   140015b0e:	jg     0x140015b1f
   140015b10:	mov    DWORD PTR [rax-0x10],esi
   140015b13:	movsxd rcx,esi
   140015b16:	mov    rax,QWORD PTR [rbx]
   140015b19:	mov    BYTE PTR [rcx+rax*1],0x0
   140015b1d:	jmp    0x140015b2a
   140015b1f:	mov    ecx,0x80070057
   140015b24:	call   0x1400025f0
   140015b29:	int3   
   140015b2a:	mov    rcx,QWORD PTR [rsp+0x38]
   140015b2f:	call   QWORD PTR [rip+0x52513]        # 0x140068048
   140015b35:	mov    rax,rbx
   140015b38:	mov    rbx,QWORD PTR [rsp+0x78]
   140015b3d:	mov    rbp,QWORD PTR [rsp+0x80]
   140015b45:	add    rsp,0x50
   140015b49:	pop    r12
   140015b4b:	pop    rdi
   140015b4c:	pop    rsi
   140015b4d:	ret    
   140015b4e:	int3   
   140015b4f:	int3   
   140015b50:	mov    DWORD PTR [rsp+0x18],r8d
   140015b55:	push   rbx
   140015b56:	push   rsi
   140015b57:	push   rdi
   140015b58:	sub    rsp,0x50
   140015b5c:	xor    ebx,ebx
   140015b5e:	mov    rsi,rdx
   140015b61:	test   rdx,rdx
   140015b64:	lea    rdx,[rip+0x55be5]        # 0x14006b750
   140015b6b:	mov    edi,0x80004005
   140015b70:	jne    0x140015b89
   140015b72:	call   QWORD PTR [rip+0x524a0]        # 0x140068018
   140015b78:	test   eax,eax
   140015b7a:	mov    edi,eax
   140015b7c:	sete   bl
   140015b7f:	mov    eax,ebx
   140015b81:	add    rsp,0x50
   140015b85:	pop    rdi
   140015b86:	pop    rsi
   140015b87:	pop    rbx
   140015b88:	ret    
   140015b89:	lea    rax,[rsp+0x78]
   140015b8e:	xor    r9d,r9d
   140015b91:	xor    r8d,r8d
   140015b94:	mov    QWORD PTR [rsp+0x40],rax
   140015b99:	lea    rax,[rsp+0x88]
   140015ba1:	mov    QWORD PTR [rsp+0x88],rbx
   140015ba9:	mov    QWORD PTR [rsp+0x38],rax
   140015bae:	mov    QWORD PTR [rsp+0x30],rbx
   140015bb3:	mov    DWORD PTR [rsp+0x28],0x2001f
   140015bbb:	mov    DWORD PTR [rsp+0x20],ebx
   140015bbf:	call   QWORD PTR [rip+0x52473]        # 0x140068038
   140015bc5:	mov    rcx,QWORD PTR [rsp+0x88]
   140015bcd:	test   rcx,rcx
   140015bd0:	je     0x140015c09
   140015bd2:	lea    rax,[rsp+0x80]
   140015bda:	mov    r9d,0x4
   140015be0:	xor    r8d,r8d
   140015be3:	mov    rdx,rsi
   140015be6:	mov    DWORD PTR [rsp+0x28],0x4
   140015bee:	mov    QWORD PTR [rsp+0x20],rax
   140015bf3:	call   QWORD PTR [rip+0x52447]        # 0x140068040
   140015bf9:	mov    rcx,QWORD PTR [rsp+0x88]
   140015c01:	mov    edi,eax
   140015c03:	call   QWORD PTR [rip+0x5243f]        # 0x140068048
   140015c09:	test   edi,edi
   140015c0b:	sete   bl
   140015c0e:	mov    eax,ebx
   140015c10:	add    rsp,0x50
   140015c14:	pop    rdi
   140015c15:	pop    rsi
   140015c16:	pop    rbx
   140015c17:	ret    
   140015c18:	int3   
   140015c19:	int3   
   140015c1a:	int3   
   140015c1b:	int3   
   140015c1c:	int3   
   140015c1d:	int3   
   140015c1e:	int3   
   140015c1f:	int3   
   140015c20:	mov    rax,rsp
   140015c23:	push   rsi
   140015c24:	push   rdi
   140015c25:	push   r12
   140015c27:	push   r13
   140015c29:	push   r14
   140015c2b:	sub    rsp,0x190
   140015c32:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140015c3b:	mov    QWORD PTR [rax+0x18],rbx
   140015c3f:	mov    QWORD PTR [rax+0x20],rbp
   140015c43:	mov    rax,QWORD PTR [rip+0x6f45e]        # 0x1400850a8
   140015c4a:	xor    rax,rsp
   140015c4d:	mov    QWORD PTR [rsp+0x180],rax
   140015c55:	mov    rdi,rdx
   140015c58:	mov    rbx,rcx
   140015c5b:	mov    QWORD PTR [rsp+0x48],rcx
   140015c60:	mov    rcx,QWORD PTR [rcx]
   140015c63:	xor    r14d,r14d
   140015c66:	test   rcx,rcx
   140015c69:	je     0x140015c7f
   140015c6b:	mov    rdx,QWORD PTR [rbx+0x8]
   140015c6f:	call   0x140014820
   140015c74:	mov    rcx,QWORD PTR [rbx]
   140015c77:	call   0x140033594
   140015c7c:	mov    QWORD PTR [rbx],r14
   140015c7f:	mov    QWORD PTR [rbx+0x8],r14
   140015c83:	mov    QWORD PTR [rbx+0x10],r14
   140015c87:	mov    ebp,0x1
   140015c8c:	mov    r12d,r14d
   140015c8f:	mov    r13,QWORD PTR [rdi]
   140015c92:	mov    DWORD PTR [rsp+0x40],0x104
   140015c9a:	mov    QWORD PTR [rsp+0x38],r14
   140015c9f:	mov    QWORD PTR [rsp+0x30],r14
   140015ca4:	mov    QWORD PTR [rsp+0x28],r14
   140015ca9:	mov    QWORD PTR [rsp+0x20],r14
   140015cae:	lea    r9,[rsp+0x40]
   140015cb3:	lea    r8,[rsp+0x70]
   140015cb8:	mov    edx,r12d
   140015cbb:	mov    rcx,r13
   140015cbe:	call   QWORD PTR [rip+0x5234c]        # 0x140068010
   140015cc4:	test   eax,eax
   140015cc6:	jne    0x140015d71
   140015ccc:	mov    rdi,QWORD PTR [rbx+0x8]
   140015cd0:	mov    QWORD PTR [rsp+0x50],rdi
   140015cd5:	cmp    rdi,QWORD PTR [rbx+0x10]
   140015cd9:	jb     0x140015cef
   140015cdb:	lea    rdx,[rdi+0x1]
   140015cdf:	mov    rcx,rbx
   140015ce2:	call   0x14000cb10
   140015ce7:	test   al,al
   140015ce9:	je     0x140015d89
   140015cef:	mov    rax,QWORD PTR [rbx]
   140015cf2:	lea    rsi,[rax+rdi*8]
   140015cf6:	mov    QWORD PTR [rsp+0x58],rsi
   140015cfb:	test   rsi,rsi
   140015cfe:	je     0x140015d6b
   140015d00:	lea    rcx,[rip+0x70a51]        # 0x140086758
   140015d07:	mov    rax,QWORD PTR [rip+0x70a4a]        # 0x140086758
   140015d0e:	call   QWORD PTR [rax+0x18]
   140015d11:	add    rax,0x18
   140015d15:	mov    QWORD PTR [rsi],rax
   140015d18:	lea    rcx,[rsp+0x70]
   140015d1d:	lea    rax,[rsp+0x70]
   140015d22:	test   rax,0xffffffffffff0000
   140015d28:	jne    0x140015d49
   140015d2a:	movzx  edi,cx
   140015d2d:	mov    ecx,edi
   140015d2f:	call   0x14000c810
   140015d34:	test   rax,rax
   140015d37:	je     0x140015d6b
   140015d39:	mov    r8d,edi
   140015d3c:	mov    rdx,rax
   140015d3f:	mov    rcx,rsi
   140015d42:	call   0x14000c9d0
   140015d47:	jmp    0x140015d6b
   140015d49:	xor    eax,eax
   140015d4b:	or     rcx,0xffffffffffffffff
   140015d4f:	lea    rdi,[rsp+0x70]
   140015d54:	repnz scas al,BYTE PTR es:[rdi]
   140015d56:	not    rcx
   140015d59:	lea    r8d,[rcx-0x1]
   140015d5d:	lea    rdx,[rsp+0x70]
   140015d62:	mov    rcx,rsi
   140015d65:	call   0x140008d10
   140015d6a:	nop
   140015d6b:	inc    QWORD PTR [rbx+0x8]
   140015d6f:	jmp    0x140015d7d
   140015d71:	mov    ebp,r14d
   140015d74:	cmp    eax,0x103
   140015d79:	setne  bpl
   140015d7d:	inc    r12d
   140015d80:	test   ebp,ebp
   140015d82:	je     0x140015d94
   140015d84:	jmp    0x140015c92
   140015d89:	mov    ecx,0x8007000e
   140015d8e:	call   0x1400025f0
   140015d93:	int3   
   140015d94:	mov    rcx,r13
   140015d97:	call   QWORD PTR [rip+0x522ab]        # 0x140068048
   140015d9d:	mov    eax,0x1
   140015da2:	mov    rcx,QWORD PTR [rsp+0x180]
   140015daa:	xor    rcx,rsp
   140015dad:	call   0x140032f00
   140015db2:	lea    r11,[rsp+0x190]
   140015dba:	mov    rbx,QWORD PTR [r11+0x40]
   140015dbe:	mov    rbp,QWORD PTR [r11+0x48]
   140015dc2:	mov    rsp,r11
   140015dc5:	pop    r14
   140015dc7:	pop    r13
   140015dc9:	pop    r12
   140015dcb:	pop    rdi
   140015dcc:	pop    rsi
   140015dcd:	ret    
   140015dce:	int3   
   140015dcf:	int3   
   140015dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140015dd5:	push   rdi
   140015dd6:	sub    rsp,0x20
   140015dda:	mov    rdi,rcx
   140015ddd:	or     ebx,0xffffffff
   140015de0:	lock xadd DWORD PTR [rcx+0x8],ebx
   140015de5:	dec    ebx
   140015de7:	jne    0x140015df1
   140015de9:	call   0x1400330c0
   140015dee:	mov    DWORD PTR [rdi+0x8],ebx
   140015df1:	mov    eax,ebx
   140015df3:	mov    rbx,QWORD PTR [rsp+0x30]
   140015df8:	add    rsp,0x20
   140015dfc:	pop    rdi
   140015dfd:	ret    
   140015dfe:	int3   
   140015dff:	int3   
   140015e00:	sub    rsp,0x28
   140015e04:	test   r8,r8
   140015e07:	je     0x140015e7d
   140015e09:	mov    r10,QWORD PTR [rdx]
   140015e0c:	lea    r11,[rip+0xfffffffffffea1ed]        # 0x140000000
   140015e13:	cmp    r10,QWORD PTR [r11+0x687c0]
   140015e1a:	jne    0x140015e2d
   140015e1c:	mov    r10,QWORD PTR [rdx+0x8]
   140015e20:	cmp    r10,QWORD PTR [r11+0x687c8]
   140015e27:	jne    0x140015e2d
   140015e29:	xor    eax,eax
   140015e2b:	jmp    0x140015e32
   140015e2d:	sbb    eax,eax
   140015e2f:	sbb    eax,0xffffffff
   140015e32:	test   eax,eax
   140015e34:	je     0x140015e5c
   140015e36:	mov    r9,QWORD PTR [rdx]
   140015e39:	cmp    r9,QWORD PTR [r11+0x6add8]
   140015e40:	jne    0x140015e53
   140015e42:	mov    r9,QWORD PTR [rdx+0x8]
   140015e46:	cmp    r9,QWORD PTR [r11+0x6ade0]
   140015e4d:	jne    0x140015e53
   140015e4f:	xor    eax,eax
   140015e51:	jmp    0x140015e58
   140015e53:	sbb    eax,eax
   140015e55:	sbb    eax,0xffffffff
   140015e58:	test   eax,eax
   140015e5a:	jne    0x140015e6c
   140015e5c:	mov    QWORD PTR [r8],rcx
   140015e5f:	mov    rdx,QWORD PTR [rcx]
   140015e62:	call   QWORD PTR [rdx+0x8]
   140015e65:	xor    eax,eax
   140015e67:	add    rsp,0x28
   140015e6b:	ret    
   140015e6c:	mov    QWORD PTR [r8],0x0
   140015e73:	mov    eax,0x80004002
   140015e78:	add    rsp,0x28
   140015e7c:	ret    
   140015e7d:	mov    eax,0x80004003
   140015e82:	add    rsp,0x28
   140015e86:	ret    
   140015e87:	int3   
   140015e88:	int3   
   140015e89:	int3   
   140015e8a:	int3   
   140015e8b:	int3   
   140015e8c:	int3   
   140015e8d:	int3   
   140015e8e:	int3   
   140015e8f:	int3   
   140015e90:	xor    eax,eax
   140015e92:	ret    
   140015e93:	int3   
   140015e94:	int3   
   140015e95:	int3   
   140015e96:	int3   
   140015e97:	int3   
   140015e98:	int3   
   140015e99:	int3   
   140015e9a:	int3   
   140015e9b:	int3   
   140015e9c:	int3   
   140015e9d:	int3   
   140015e9e:	int3   
   140015e9f:	int3   
   140015ea0:	lea    rax,[rip+0x52949]        # 0x1400687f0
   140015ea7:	mov    r9,QWORD PTR [rax]
   140015eaa:	cmp    r9,QWORD PTR [rdx]
   140015ead:	jne    0x140015ebd
   140015eaf:	mov    r9,QWORD PTR [rax+0x8]
   140015eb3:	cmp    r9,QWORD PTR [rdx+0x8]
   140015eb7:	jne    0x140015ebd
   140015eb9:	xor    eax,eax
   140015ebb:	jmp    0x140015ec2
   140015ebd:	sbb    eax,eax
   140015ebf:	sbb    eax,0xffffffff
   140015ec2:	test   eax,eax
   140015ec4:	jne    0x140015ecc
   140015ec6:	mov    eax,0x80070057
   140015ecb:	ret    
   140015ecc:	cmp    QWORD PTR [rcx+0x10],0x0
   140015ed1:	je     0x140015ede
   140015ed3:	mov    rcx,QWORD PTR [rcx+0x10]
   140015ed7:	mov    rax,QWORD PTR [rcx]
   140015eda:	rex.W jmp QWORD PTR [rax+0x20]
   140015ede:	xor    eax,eax
   140015ee0:	ret    
   140015ee1:	int3   
   140015ee2:	int3   
   140015ee3:	int3   
   140015ee4:	int3   
   140015ee5:	int3   
   140015ee6:	int3   
   140015ee7:	int3   
   140015ee8:	int3   
   140015ee9:	int3   
   140015eea:	int3   
   140015eeb:	int3   
   140015eec:	int3   
   140015eed:	int3   
   140015eee:	int3   
   140015eef:	int3   
   140015ef0:	sub    rsp,0x28
   140015ef4:	test   rdx,rdx
   140015ef7:	jne    0x140015f03
   140015ef9:	mov    eax,0x80070057
   140015efe:	add    rsp,0x28
   140015f02:	ret    
   140015f03:	cmp    QWORD PTR [rcx+0x10],0x0
   140015f08:	je     0x140015f15
   140015f0a:	mov    rcx,QWORD PTR [rcx+0x10]
   140015f0e:	mov    r9,QWORD PTR [rcx]
   140015f11:	call   QWORD PTR [r9+0x10]
   140015f15:	xor    eax,eax
   140015f17:	add    rsp,0x28
   140015f1b:	ret    
   140015f1c:	int3   
   140015f1d:	int3   
   140015f1e:	int3   
   140015f1f:	int3   
   140015f20:	sub    rsp,0x28
   140015f24:	test   rdx,rdx
   140015f27:	je     0x140015f46
   140015f29:	test   r8,r8
   140015f2c:	je     0x140015f46
   140015f2e:	cmp    QWORD PTR [rcx+0x10],0x0
   140015f33:	je     0x140015f3f
   140015f35:	mov    rcx,QWORD PTR [rcx+0x10]
   140015f39:	mov    rdx,QWORD PTR [rcx]
   140015f3c:	call   QWORD PTR [rdx+0x8]
   140015f3f:	xor    eax,eax
   140015f41:	add    rsp,0x28
   140015f45:	ret    
   140015f46:	mov    eax,0x80070057
   140015f4b:	add    rsp,0x28
   140015f4f:	ret    
   140015f50:	sub    rsp,0x28
   140015f54:	mov    QWORD PTR [r8],0x0
   140015f5b:	mov    r10,r8
   140015f5e:	mov    r8,QWORD PTR [rdx]
   140015f61:	lea    r11,[rip+0xfffffffffffea098]        # 0x140000000
   140015f68:	cmp    r8,QWORD PTR [r11+0x6d9e8]
   140015f6f:	jne    0x140015f82
   140015f71:	mov    r8,QWORD PTR [rdx+0x8]
   140015f75:	cmp    r8,QWORD PTR [r11+0x6d9f0]
   140015f7c:	jne    0x140015f82
   140015f7e:	xor    eax,eax
   140015f80:	jmp    0x140015f87
   140015f82:	sbb    eax,eax
   140015f84:	sbb    eax,0xffffffff
   140015f87:	test   eax,eax
   140015f89:	je     0x140015fb1
   140015f8b:	mov    r8,QWORD PTR [rdx]
   140015f8e:	cmp    r8,QWORD PTR [r11+0x687c0]
   140015f95:	jne    0x140015fa8
   140015f97:	mov    r8,QWORD PTR [rdx+0x8]
   140015f9b:	cmp    r8,QWORD PTR [r11+0x687c8]
   140015fa2:	jne    0x140015fa8
   140015fa4:	xor    eax,eax
   140015fa6:	jmp    0x140015fad
   140015fa8:	sbb    eax,eax
   140015faa:	sbb    eax,0xffffffff
   140015fad:	test   eax,eax
   140015faf:	jne    0x140015fc1
   140015fb1:	mov    QWORD PTR [r10],rcx
   140015fb4:	mov    rdx,QWORD PTR [rcx]
   140015fb7:	call   QWORD PTR [rdx+0x8]
   140015fba:	xor    eax,eax
   140015fbc:	add    rsp,0x28
   140015fc0:	ret    
   140015fc1:	mov    eax,0x80004002
   140015fc6:	add    rsp,0x28
   140015fca:	ret    
   140015fcb:	int3   
   140015fcc:	int3   
   140015fcd:	int3   
   140015fce:	int3   
   140015fcf:	int3   
   140015fd0:	sub    rsp,0x28
   140015fd4:	test   rdx,rdx
   140015fd7:	jne    0x140015fe3
   140015fd9:	mov    eax,0x80070057
   140015fde:	add    rsp,0x28
   140015fe2:	ret    
   140015fe3:	cmp    QWORD PTR [rcx+0x10],0x0
   140015fe8:	je     0x140015ff5
   140015fea:	mov    rcx,QWORD PTR [rcx+0x10]
   140015fee:	mov    r9,QWORD PTR [rcx]
   140015ff1:	call   QWORD PTR [r9+0x18]
   140015ff5:	xor    eax,eax
   140015ff7:	add    rsp,0x28
   140015ffb:	ret    
   140015ffc:	int3   
   140015ffd:	int3   
   140015ffe:	int3   
   140015fff:	int3   
   140016000:	mov    QWORD PTR [rsp+0x8],rcx
   140016005:	push   rdi
   140016006:	sub    rsp,0x30
   14001600a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016013:	mov    QWORD PTR [rsp+0x48],rbx
   140016018:	mov    rbx,rcx
   14001601b:	lea    rax,[rip+0x5799e]        # 0x14006d9c0
   140016022:	mov    QWORD PTR [rcx],rax
   140016025:	xor    edi,edi
   140016027:	mov    QWORD PTR [rcx+0x30],rdi
   14001602b:	mov    QWORD PTR [rcx+0x38],rdi
   14001602f:	mov    QWORD PTR [rcx+0x40],rdi
   140016033:	mov    rcx,QWORD PTR [rcx+0x30]
   140016037:	test   rcx,rcx
   14001603a:	je     0x140016046
   14001603c:	mov    rax,QWORD PTR [rcx]
   14001603f:	call   QWORD PTR [rax+0x10]
   140016042:	mov    QWORD PTR [rbx+0x30],rdi
   140016046:	mov    eax,DWORD PTR [rip+0x527a4]        # 0x1400687f0
   14001604c:	mov    DWORD PTR [rbx+0xc],eax
   14001604f:	mov    eax,DWORD PTR [rip+0x5279f]        # 0x1400687f4
   140016055:	mov    DWORD PTR [rbx+0x10],eax
   140016058:	mov    eax,DWORD PTR [rip+0x5279a]        # 0x1400687f8
   14001605e:	mov    DWORD PTR [rbx+0x14],eax
   140016061:	mov    eax,DWORD PTR [rip+0x52795]        # 0x1400687fc
   140016067:	mov    DWORD PTR [rbx+0x18],eax
   14001606a:	mov    rcx,QWORD PTR [rbx+0x40]
   14001606e:	test   rcx,rcx
   140016071:	je     0x14001607d
   140016073:	mov    rax,QWORD PTR [rcx]
   140016076:	call   QWORD PTR [rax+0x10]
   140016079:	mov    QWORD PTR [rbx+0x40],rdi
   14001607d:	mov    rcx,QWORD PTR [rbx+0x38]
   140016081:	test   rcx,rcx
   140016084:	je     0x140016090
   140016086:	mov    rax,QWORD PTR [rcx]
   140016089:	call   QWORD PTR [rax+0x10]
   14001608c:	mov    QWORD PTR [rbx+0x38],rdi
   140016090:	mov    DWORD PTR [rbx+0x1c],0xa
   140016097:	mov    ecx,0x18
   14001609c:	call   0x1400331a0
   1400160a1:	test   rax,rax
   1400160a4:	je     0x1400160bd
   1400160a6:	lea    rcx,[rip+0x578ab]        # 0x14006d958
   1400160ad:	mov    QWORD PTR [rax],rcx
   1400160b0:	mov    DWORD PTR [rax+0x8],0x1
   1400160b7:	mov    QWORD PTR [rax+0x10],rbx
   1400160bb:	jmp    0x1400160c0
   1400160bd:	mov    rax,rdi
   1400160c0:	mov    QWORD PTR [rbx+0x20],rax
   1400160c4:	mov    ecx,0x18
   1400160c9:	call   0x1400331a0
   1400160ce:	test   rax,rax
   1400160d1:	je     0x1400160ea
   1400160d3:	lea    rcx,[rip+0x578be]        # 0x14006d998
   1400160da:	mov    QWORD PTR [rax],rcx
   1400160dd:	mov    DWORD PTR [rax+0x8],0x1
   1400160e4:	mov    QWORD PTR [rax+0x10],rbx
   1400160e8:	jmp    0x1400160ed
   1400160ea:	mov    rax,rdi
   1400160ed:	mov    QWORD PTR [rbx+0x28],rax
   1400160f1:	mov    BYTE PTR [rbx+0x8],0x0
   1400160f5:	mov    rax,rbx
   1400160f8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400160fd:	add    rsp,0x30
   140016101:	pop    rdi
   140016102:	ret    
   140016103:	int3   
   140016104:	int3   
   140016105:	int3   
   140016106:	int3   
   140016107:	int3   
   140016108:	int3   
   140016109:	int3   
   14001610a:	int3   
   14001610b:	int3   
   14001610c:	int3   
   14001610d:	int3   
   14001610e:	int3   
   14001610f:	int3   
   140016110:	mov    QWORD PTR [rsp+0x8],rbx
   140016115:	push   rdi
   140016116:	sub    rsp,0x20
   14001611a:	mov    ebx,edx
   14001611c:	mov    rdi,rcx
   14001611f:	call   0x140016140
   140016124:	test   bl,0x1
   140016127:	je     0x140016131
   140016129:	mov    rcx,rdi
   14001612c:	call   0x1400330c0
   140016131:	mov    rax,rdi
   140016134:	mov    rbx,QWORD PTR [rsp+0x30]
   140016139:	add    rsp,0x20
   14001613d:	pop    rdi
   14001613e:	ret    
   14001613f:	int3   
   140016140:	rex push rbx
   140016142:	sub    rsp,0x20
   140016146:	lea    rax,[rip+0x57873]        # 0x14006d9c0
   14001614d:	mov    rbx,rcx
   140016150:	mov    QWORD PTR [rcx],rax
   140016153:	mov    rcx,QWORD PTR [rcx+0x20]
   140016157:	test   rcx,rcx
   14001615a:	je     0x140016169
   14001615c:	call   0x1400330c0
   140016161:	mov    QWORD PTR [rbx+0x20],0x0
   140016169:	mov    rcx,QWORD PTR [rbx+0x28]
   14001616d:	test   rcx,rcx
   140016170:	je     0x14001617f
   140016172:	call   0x1400330c0
   140016177:	mov    QWORD PTR [rbx+0x28],0x0
   14001617f:	mov    rcx,QWORD PTR [rbx+0x40]
   140016183:	test   rcx,rcx
   140016186:	je     0x14001618e
   140016188:	mov    rax,QWORD PTR [rcx]
   14001618b:	call   QWORD PTR [rax+0x10]
   14001618e:	mov    rcx,QWORD PTR [rbx+0x38]
   140016192:	test   rcx,rcx
   140016195:	je     0x14001619d
   140016197:	mov    rax,QWORD PTR [rcx]
   14001619a:	call   QWORD PTR [rax+0x10]
   14001619d:	mov    rcx,QWORD PTR [rbx+0x30]
   1400161a1:	test   rcx,rcx
   1400161a4:	je     0x1400161ac
   1400161a6:	mov    rax,QWORD PTR [rcx]
   1400161a9:	call   QWORD PTR [rax+0x10]
   1400161ac:	add    rsp,0x20
   1400161b0:	pop    rbx
   1400161b1:	ret    
   1400161b2:	int3   
   1400161b3:	int3   
   1400161b4:	int3   
   1400161b5:	int3   
   1400161b6:	int3   
   1400161b7:	int3   
   1400161b8:	int3   
   1400161b9:	int3   
   1400161ba:	int3   
   1400161bb:	int3   
   1400161bc:	int3   
   1400161bd:	int3   
   1400161be:	int3   
   1400161bf:	int3   
   1400161c0:	rex push rsi
   1400161c2:	push   rdi
   1400161c3:	push   r12
   1400161c5:	sub    rsp,0x40
   1400161c9:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400161d2:	mov    QWORD PTR [rsp+0x70],rbx
   1400161d7:	mov    QWORD PTR [rsp+0x78],rbp
   1400161dc:	mov    r12,rdx
   1400161df:	mov    rsi,rcx
   1400161e2:	mov    QWORD PTR [rsp+0x68],0x0
   1400161eb:	mov    eax,DWORD PTR [rdx]
   1400161ed:	mov    DWORD PTR [rcx+0xc],eax
   1400161f0:	mov    eax,DWORD PTR [rdx+0x4]
   1400161f3:	mov    DWORD PTR [rcx+0x10],eax
   1400161f6:	mov    eax,DWORD PTR [rdx+0x8]
   1400161f9:	mov    DWORD PTR [rcx+0x14],eax
   1400161fc:	mov    eax,DWORD PTR [rdx+0xc]
   1400161ff:	mov    DWORD PTR [rcx+0x18],eax
   140016202:	lea    rbp,[rcx+0x38]
   140016206:	mov    QWORD PTR [rsp+0x20],rbp
   14001620b:	lea    r9,[rip+0x54b76]        # 0x14006ad88
   140016212:	xor    edx,edx
   140016214:	lea    r8d,[rdx+0x1]
   140016218:	lea    rcx,[rip+0x54be9]        # 0x14006ae08
   14001621f:	call   QWORD PTR [rip+0x52453]        # 0x140068678
   140016225:	mov    edi,eax
   140016227:	test   eax,eax
   140016229:	js     0x1400162e9
   14001622f:	mov    rcx,QWORD PTR [rbp+0x0]
   140016233:	test   rcx,rcx
   140016236:	je     0x140016249
   140016238:	mov    rdx,QWORD PTR [rsi+0x28]
   14001623c:	test   rdx,rdx
   14001623f:	je     0x140016249
   140016241:	mov    rax,QWORD PTR [rcx]
   140016244:	call   QWORD PTR [rax+0x30]
   140016247:	mov    edi,eax
   140016249:	test   edi,edi
   14001624b:	js     0x1400162e9
   140016251:	lea    rbx,[rsi+0x40]
   140016255:	mov    QWORD PTR [rsp+0x20],rbx
   14001625a:	lea    r9,[rip+0x54c77]        # 0x14006aed8
   140016261:	xor    edx,edx
   140016263:	lea    r8d,[rdx+0x1]
   140016267:	lea    rcx,[rip+0x54cca]        # 0x14006af38
   14001626e:	call   QWORD PTR [rip+0x52404]        # 0x140068678
   140016274:	mov    edi,eax
   140016276:	test   eax,eax
   140016278:	js     0x1400162e9
   14001627a:	cmp    QWORD PTR [rbx],0x0
   14001627e:	je     0x140016294
   140016280:	mov    rcx,QWORD PTR [rbp+0x0]
   140016284:	mov    rax,QWORD PTR [rcx]
   140016287:	lea    r8,[rsp+0x68]
   14001628c:	mov    rdx,r12
   14001628f:	call   QWORD PTR [rax+0x20]
   140016292:	mov    edi,eax
   140016294:	test   edi,edi
   140016296:	js     0x1400162e9
   140016298:	mov    rcx,QWORD PTR [rsp+0x68]
   14001629d:	test   rcx,rcx
   1400162a0:	je     0x1400162ee
   1400162a2:	mov    DWORD PTR [rsp+0x60],0x0
   1400162aa:	mov    rax,QWORD PTR [rcx]
   1400162ad:	lea    rdx,[rsp+0x60]
   1400162b2:	call   QWORD PTR [rax+0x20]
   1400162b5:	mov    rcx,QWORD PTR [rsp+0x68]
   1400162ba:	cmp    DWORD PTR [rsp+0x60],0x0
   1400162bf:	jne    0x1400162c8
   1400162c1:	mov    edi,0x1
   1400162c6:	jmp    0x1400162ee
   1400162c8:	lea    rbx,[rsi+0x30]
   1400162cc:	mov    rax,QWORD PTR [rcx]
   1400162cf:	mov    r8,rbx
   1400162d2:	xor    edx,edx
   1400162d4:	call   QWORD PTR [rax+0x18]
   1400162d7:	mov    rdx,QWORD PTR [rbx]
   1400162da:	test   rdx,rdx
   1400162dd:	je     0x1400162e9
   1400162df:	mov    rcx,rsi
   1400162e2:	call   0x1400163c0
   1400162e7:	mov    edi,eax
   1400162e9:	mov    rcx,QWORD PTR [rsp+0x68]
   1400162ee:	test   edi,edi
   1400162f0:	setns  bl
   1400162f3:	test   rcx,rcx
   1400162f6:	je     0x1400162fe
   1400162f8:	mov    rdx,QWORD PTR [rcx]
   1400162fb:	call   QWORD PTR [rdx+0x10]
   1400162fe:	movzx  eax,bl
   140016301:	mov    rbx,QWORD PTR [rsp+0x70]
   140016306:	mov    rbp,QWORD PTR [rsp+0x78]
   14001630b:	add    rsp,0x40
   14001630f:	pop    r12
   140016311:	pop    rdi
   140016312:	pop    rsi
   140016313:	ret    
   140016314:	int3   
   140016315:	int3   
   140016316:	int3   
   140016317:	int3   
   140016318:	int3   
   140016319:	int3   
   14001631a:	int3   
   14001631b:	int3   
   14001631c:	int3   
   14001631d:	int3   
   14001631e:	int3   
   14001631f:	int3   
   140016320:	mov    QWORD PTR [rsp+0x8],rbx
   140016325:	mov    QWORD PTR [rsp+0x10],rsi
   14001632a:	push   rdi
   14001632b:	sub    rsp,0x20
   14001632f:	xor    edi,edi
   140016331:	mov    rbx,rcx
   140016334:	mov    rcx,QWORD PTR [rcx+0x30]
   140016338:	mov    esi,edi
   14001633a:	test   rcx,rcx
   14001633d:	je     0x14001635f
   14001633f:	mov    rax,QWORD PTR [rcx]
   140016342:	xor    edx,edx
   140016344:	call   QWORD PTR [rax+0x88]
   14001634a:	mov    rcx,QWORD PTR [rbx+0x30]
   14001634e:	mov    esi,eax
   140016350:	test   rcx,rcx
   140016353:	je     0x14001635f
   140016355:	mov    rax,QWORD PTR [rcx]
   140016358:	call   QWORD PTR [rax+0x10]
   14001635b:	mov    QWORD PTR [rbx+0x30],rdi
   14001635f:	mov    rcx,QWORD PTR [rbx+0x38]
   140016363:	test   rcx,rcx
   140016366:	je     0x140016385
   140016368:	mov    rax,QWORD PTR [rcx]
   14001636b:	xor    edx,edx
   14001636d:	call   QWORD PTR [rax+0x30]
   140016370:	mov    rcx,QWORD PTR [rbx+0x38]
   140016374:	mov    esi,eax
   140016376:	test   rcx,rcx
   140016379:	je     0x140016385
   14001637b:	mov    rax,QWORD PTR [rcx]
   14001637e:	call   QWORD PTR [rax+0x10]
   140016381:	mov    QWORD PTR [rbx+0x38],rdi
   140016385:	cmp    QWORD PTR [rbx+0x40],rdi
   140016389:	je     0x14001639e
   14001638b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001638f:	test   rcx,rcx
   140016392:	je     0x14001639e
   140016394:	mov    rdx,QWORD PTR [rcx]
   140016397:	call   QWORD PTR [rdx+0x10]
   14001639a:	mov    QWORD PTR [rbx+0x40],rdi
   14001639e:	test   esi,esi
   1400163a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400163a5:	mov    BYTE PTR [rbx+0x8],dil
   1400163a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400163ae:	setns  al
   1400163b1:	add    rsp,0x20
   1400163b5:	pop    rdi
   1400163b6:	ret    
   1400163b7:	int3   
   1400163b8:	int3   
   1400163b9:	int3   
   1400163ba:	int3   
   1400163bb:	int3   
   1400163bc:	int3   
   1400163bd:	int3   
   1400163be:	int3   
   1400163bf:	int3   
   1400163c0:	rex push rbp
   1400163c2:	push   rsi
   1400163c3:	push   rdi
   1400163c4:	sub    rsp,0x30
   1400163c8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400163d1:	mov    QWORD PTR [rsp+0x50],rbx
   1400163d6:	mov    rbp,rdx
   1400163d9:	mov    rdi,rcx
   1400163dc:	xor    ebx,ebx
   1400163de:	mov    esi,ebx
   1400163e0:	test   rdx,rdx
   1400163e3:	je     0x14001646d
   1400163e9:	mov    rax,QWORD PTR [rcx+0x30]
   1400163ed:	test   rax,rax
   1400163f0:	je     0x1400163f7
   1400163f2:	cmp    rdx,rax
   1400163f5:	jne    0x14001646d
   1400163f7:	cmp    rax,rdx
   1400163fa:	je     0x140016418
   1400163fc:	mov    rax,QWORD PTR [rdx]
   1400163ff:	mov    rcx,rdx
   140016402:	call   QWORD PTR [rax+0x8]
   140016405:	mov    rcx,QWORD PTR [rdi+0x30]
   140016409:	test   rcx,rcx
   14001640c:	je     0x140016414
   14001640e:	mov    rax,QWORD PTR [rcx]
   140016411:	call   QWORD PTR [rax+0x10]
   140016414:	mov    QWORD PTR [rdi+0x30],rbp
   140016418:	mov    BYTE PTR [rdi+0x8],0x1
   14001641c:	mov    rcx,QWORD PTR [rdi+0x40]
   140016420:	test   rcx,rcx
   140016423:	je     0x140016472
   140016425:	mov    QWORD PTR [rsp+0x60],rbx
   14001642a:	mov    rax,QWORD PTR [rcx]
   14001642d:	mov    r8d,DWORD PTR [rdi+0x1c]
   140016431:	lea    rdx,[rip+0x54a20]        # 0x14006ae58
   140016438:	call   QWORD PTR [rax+0x48]
   14001643b:	mov    esi,eax
   14001643d:	test   eax,eax
   14001643f:	js     0x14001645b
   140016441:	mov    rcx,QWORD PTR [rdi+0x30]
   140016445:	test   rcx,rcx
   140016448:	je     0x14001645b
   14001644a:	mov    rax,QWORD PTR [rcx]
   14001644d:	lea    r8,[rsp+0x60]
   140016452:	mov    rdx,QWORD PTR [rdi+0x40]
   140016456:	call   QWORD PTR [rax+0x50]
   140016459:	mov    esi,eax
   14001645b:	mov    rcx,QWORD PTR [rsp+0x60]
   140016460:	test   rcx,rcx
   140016463:	je     0x140016472
   140016465:	mov    rax,QWORD PTR [rcx]
   140016468:	call   QWORD PTR [rax+0x10]
   14001646b:	jmp    0x140016472
   14001646d:	mov    esi,0x80004003
   140016472:	mov    QWORD PTR [rsp+0x58],rbx
   140016477:	test   esi,esi
   140016479:	js     0x1400164bc
   14001647b:	mov    rcx,QWORD PTR [rdi+0x20]
   14001647f:	test   rcx,rcx
   140016482:	je     0x14001649c
   140016484:	mov    rax,QWORD PTR [rcx]
   140016487:	lea    r8,[rsp+0x58]
   14001648c:	lea    rdx,[rip+0x54945]        # 0x14006add8
   140016493:	call   QWORD PTR [rax]
   140016495:	mov    esi,eax
   140016497:	mov    rbx,QWORD PTR [rsp+0x58]
   14001649c:	test   esi,esi
   14001649e:	js     0x1400164bc
   1400164a0:	test   rbx,rbx
   1400164a3:	je     0x1400164bc
   1400164a5:	mov    rcx,QWORD PTR [rdi+0x30]
   1400164a9:	mov    rax,QWORD PTR [rcx]
   1400164ac:	mov    rdx,rbx
   1400164af:	call   QWORD PTR [rax+0x88]
   1400164b5:	mov    esi,eax
   1400164b7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400164bc:	test   rbx,rbx
   1400164bf:	je     0x1400164ca
   1400164c1:	mov    rax,QWORD PTR [rbx]
   1400164c4:	mov    rcx,rbx
   1400164c7:	call   QWORD PTR [rax+0x10]
   1400164ca:	mov    eax,esi
   1400164cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400164d1:	add    rsp,0x30
   1400164d5:	pop    rdi
   1400164d6:	pop    rsi
   1400164d7:	pop    rbp
   1400164d8:	ret    
   1400164d9:	int3   
   1400164da:	int3   
   1400164db:	int3   
   1400164dc:	int3   
   1400164dd:	int3   
   1400164de:	int3   
   1400164df:	int3   
   1400164e0:	rex push rsi
   1400164e2:	push   rdi
   1400164e3:	sub    rsp,0x88
   1400164ea:	mov    rax,QWORD PTR [rip+0x6ebb7]        # 0x1400850a8
   1400164f1:	xor    rax,rsp
   1400164f4:	mov    QWORD PTR [rsp+0x78],rax
   1400164f9:	mov    eax,DWORD PTR [rip+0x522f1]        # 0x1400687f0
   1400164ff:	mov    rdi,rdx
   140016502:	mov    rsi,rcx
   140016505:	mov    DWORD PTR [rsp+0x68],eax
   140016509:	mov    eax,DWORD PTR [rip+0x522e5]        # 0x1400687f4
   14001650f:	mov    DWORD PTR [rsp+0x30],r8d
   140016514:	mov    DWORD PTR [rsp+0x6c],eax
   140016518:	mov    eax,DWORD PTR [rip+0x522da]        # 0x1400687f8
   14001651e:	mov    DWORD PTR [rsp+0x70],eax
   140016522:	mov    eax,DWORD PTR [rip+0x522d4]        # 0x1400687fc
   140016528:	mov    DWORD PTR [rsp+0x74],eax
   14001652c:	test   rdx,rdx
   14001652f:	je     0x140016647
   140016535:	mov    rax,QWORD PTR [rdx]
   140016538:	lea    rdx,[rsp+0x68]
   14001653d:	mov    rcx,rdi
   140016540:	call   QWORD PTR [rax+0x28]
   140016543:	test   eax,eax
   140016545:	js     0x14001664c
   14001654b:	lea    rcx,[rsp+0x68]
   140016550:	mov    rdx,QWORD PTR [rcx]
   140016553:	cmp    rdx,QWORD PTR [rsi+0xc]
   140016557:	jne    0x140016567
   140016559:	mov    rdx,QWORD PTR [rcx+0x8]
   14001655d:	cmp    rdx,QWORD PTR [rsi+0x14]
   140016561:	jne    0x140016567
   140016563:	xor    eax,eax
   140016565:	jmp    0x14001656c
   140016567:	sbb    eax,eax
   140016569:	sbb    eax,0xffffffff
   14001656c:	test   eax,eax
   14001656e:	jne    0x140016640
   140016574:	mov    rdx,rdi
   140016577:	mov    rcx,rsi
   14001657a:	call   0x1400163c0
   14001657f:	test   eax,eax
   140016581:	js     0x14001664c
   140016587:	cmp    DWORD PTR [rsp+0x30],0x0
   14001658c:	mov    QWORD PTR [rsp+0x80],rbx
   140016594:	mov    ebx,0x5
   140016599:	je     0x14001662a
   14001659f:	nop
   1400165a0:	test   eax,eax
   1400165a2:	js     0x14001662a
   1400165a8:	mov    eax,ebx
   1400165aa:	dec    ebx
   1400165ac:	test   eax,eax
   1400165ae:	je     0x14001662a
   1400165b0:	lea    rcx,[rsp+0x38]
   1400165b5:	xor    r9d,r9d
   1400165b8:	xor    r8d,r8d
   1400165bb:	xor    edx,edx
   1400165bd:	mov    DWORD PTR [rsp+0x20],0x1
   1400165c5:	call   QWORD PTR [rip+0x51fa5]        # 0x140068570
   1400165cb:	test   eax,eax
   1400165cd:	je     0x140016605
   1400165cf:	nop
   1400165d0:	lea    rcx,[rsp+0x38]
   1400165d5:	call   QWORD PTR [rip+0x51fb5]        # 0x140068590
   1400165db:	lea    rcx,[rsp+0x38]
   1400165e0:	call   QWORD PTR [rip+0x51fba]        # 0x1400685a0
   1400165e6:	lea    rcx,[rsp+0x38]
   1400165eb:	xor    r9d,r9d
   1400165ee:	xor    r8d,r8d
   1400165f1:	xor    edx,edx
   1400165f3:	mov    DWORD PTR [rsp+0x20],0x1
   1400165fb:	call   QWORD PTR [rip+0x51f6f]        # 0x140068570
   140016601:	test   eax,eax
   140016603:	jne    0x1400165d0
   140016605:	mov    ecx,0x32
   14001660a:	call   QWORD PTR [rip+0x51b10]        # 0x140068120
   140016610:	mov    r11,QWORD PTR [rdi]
   140016613:	lea    rdx,[rsp+0x30]
   140016618:	mov    rcx,rdi
   14001661b:	call   QWORD PTR [r11+0x60]
   14001661f:	cmp    DWORD PTR [rsp+0x30],0x0
   140016624:	jne    0x1400165a0
   14001662a:	mov    rax,QWORD PTR [rsi]
   14001662d:	mov    rcx,rsi
   140016630:	call   QWORD PTR [rax+0x8]
   140016633:	mov    rbx,QWORD PTR [rsp+0x80]
   14001663b:	movzx  eax,al
   14001663e:	jmp    0x14001664c
   140016640:	mov    eax,0x80004002
   140016645:	jmp    0x14001664c
   140016647:	mov    eax,0x80004003
   14001664c:	mov    rcx,QWORD PTR [rsp+0x78]
   140016651:	xor    rcx,rsp
   140016654:	call   0x140032f00
   140016659:	add    rsp,0x88
   140016660:	pop    rdi
   140016661:	pop    rsi
   140016662:	ret    
   140016663:	int3   
   140016664:	int3   
   140016665:	int3   
   140016666:	int3   
   140016667:	int3   
   140016668:	int3   
   140016669:	int3   
   14001666a:	int3   
   14001666b:	int3   
   14001666c:	int3   
   14001666d:	int3   
   14001666e:	int3   
   14001666f:	int3   
   140016670:	rex push rbx
   140016672:	sub    rsp,0x20
   140016676:	mov    rbx,rcx
   140016679:	mov    rcx,QWORD PTR [rcx+0x30]
   14001667d:	test   rcx,rcx
   140016680:	je     0x1400166cb
   140016682:	mov    rax,QWORD PTR [rcx]
   140016685:	xor    edx,edx
   140016687:	mov    QWORD PTR [rsp+0x30],rdi
   14001668c:	call   QWORD PTR [rax+0x88]
   140016692:	mov    rcx,QWORD PTR [rbx+0x30]
   140016696:	mov    edi,eax
   140016698:	test   rcx,rcx
   14001669b:	je     0x1400166bc
   14001669d:	mov    rdx,QWORD PTR [rcx]
   1400166a0:	call   QWORD PTR [rdx+0x10]
   1400166a3:	mov    QWORD PTR [rbx+0x30],0x0
   1400166ab:	mov    eax,edi
   1400166ad:	mov    rdi,QWORD PTR [rsp+0x30]
   1400166b2:	mov    BYTE PTR [rbx+0x8],0x0
   1400166b6:	add    rsp,0x20
   1400166ba:	pop    rbx
   1400166bb:	ret    
   1400166bc:	mov    BYTE PTR [rbx+0x8],0x0
   1400166c0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400166c5:	add    rsp,0x20
   1400166c9:	pop    rbx
   1400166ca:	ret    
   1400166cb:	mov    BYTE PTR [rbx+0x8],0x0
   1400166cf:	mov    eax,0x80004003
   1400166d4:	add    rsp,0x20
   1400166d8:	pop    rbx
   1400166d9:	ret    
   1400166da:	int3   
   1400166db:	int3   
   1400166dc:	int3   
   1400166dd:	int3   
   1400166de:	int3   
   1400166df:	int3   
   1400166e0:	rex push rbp
   1400166e2:	push   rsi
   1400166e3:	push   rdi
   1400166e4:	push   r12
   1400166e6:	push   r13
   1400166e8:	mov    rbp,rsp
   1400166eb:	sub    rsp,0x40
   1400166ef:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400166f7:	mov    QWORD PTR [rsp+0x80],rbx
   1400166ff:	mov    rsi,rcx
   140016702:	xor    ebx,ebx
   140016704:	mov    QWORD PTR [rcx+0x48],rbx
   140016708:	mov    DWORD PTR [rcx+0x50],ebx
   14001670b:	xor    eax,eax
   14001670d:	mov    QWORD PTR [rbp-0x18],rax
   140016711:	mov    QWORD PTR [rbp-0x10],rax
   140016715:	mov    QWORD PTR [rbp-0x8],rax
   140016719:	mov    DWORD PTR [rbp+0x30],0x1
   140016720:	mov    ecx,ebx
   140016722:	mov    QWORD PTR [rbp+0x38],rbx
   140016726:	mov    r8,QWORD PTR [rsi+0x30]
   14001672a:	mov    edi,0x80004003
   14001672f:	test   r8,r8
   140016732:	je     0x140016787
   140016734:	mov    rax,QWORD PTR [r8]
   140016737:	lea    rdx,[rbp+0x30]
   14001673b:	mov    rcx,r8
   14001673e:	call   QWORD PTR [rax+0x60]
   140016741:	test   eax,eax
   140016743:	js     0x140016781
   140016745:	cmp    DWORD PTR [rbp+0x30],ebx
   140016748:	jne    0x14001677c
   14001674a:	mov    rcx,QWORD PTR [rsi+0x30]
   14001674e:	mov    rax,QWORD PTR [rcx]
   140016751:	lea    rdx,[rbp+0x38]
   140016755:	call   QWORD PTR [rax+0x68]
   140016758:	mov    rcx,QWORD PTR [rbp+0x38]
   14001675c:	test   eax,eax
   14001675e:	js     0x14001678b
   140016760:	test   rcx,rcx
   140016763:	je     0x140016789
   140016765:	mov    rax,QWORD PTR [rcx]
   140016768:	lea    r8,[rbp-0x18]
   14001676c:	lea    rdx,[rip+0x5470d]        # 0x14006ae80
   140016773:	call   QWORD PTR [rax+0x20]
   140016776:	mov    rcx,QWORD PTR [rbp+0x38]
   14001677a:	jmp    0x140016789
   14001677c:	mov    eax,0x80004005
   140016781:	mov    rcx,QWORD PTR [rbp+0x38]
   140016785:	jmp    0x140016789
   140016787:	mov    eax,edi
   140016789:	test   eax,eax
   14001678b:	setns  r12b
   14001678f:	test   rcx,rcx
   140016792:	je     0x14001679a
   140016794:	mov    rax,QWORD PTR [rcx]
   140016797:	call   QWORD PTR [rax+0x10]
   14001679a:	mov    r13d,0x4
   1400167a0:	test   r12b,r12b
   1400167a3:	je     0x1400167b6
   1400167a5:	cmp    r13w,WORD PTR [rbp-0x18]
   1400167aa:	jne    0x1400167b6
   1400167ac:	movss  xmm0,DWORD PTR [rbp-0x10]
   1400167b1:	movss  DWORD PTR [rsi+0x48],xmm0
   1400167b6:	lea    rcx,[rbp-0x18]
   1400167ba:	call   QWORD PTR [rip+0x51ec0]        # 0x140068680
   1400167c0:	test   r12b,r12b
   1400167c3:	je     0x140016931
   1400167c9:	xor    eax,eax
   1400167cb:	mov    QWORD PTR [rbp-0x18],rax
   1400167cf:	mov    QWORD PTR [rbp-0x10],rax
   1400167d3:	mov    QWORD PTR [rbp-0x8],rax
   1400167d7:	mov    DWORD PTR [rbp+0x30],0x1
   1400167de:	mov    rcx,rbx
   1400167e1:	mov    QWORD PTR [rbp+0x38],rbx
   1400167e5:	mov    r8,QWORD PTR [rsi+0x30]
   1400167e9:	test   r8,r8
   1400167ec:	je     0x140016842
   1400167ee:	mov    rax,QWORD PTR [r8]
   1400167f1:	lea    rdx,[rbp+0x30]
   1400167f5:	mov    rcx,r8
   1400167f8:	call   QWORD PTR [rax+0x60]
   1400167fb:	test   eax,eax
   1400167fd:	js     0x14001683c
   1400167ff:	cmp    DWORD PTR [rbp+0x30],0x0
   140016803:	jne    0x140016837
   140016805:	mov    rcx,QWORD PTR [rsi+0x30]
   140016809:	mov    rax,QWORD PTR [rcx]
   14001680c:	lea    rdx,[rbp+0x38]
   140016810:	call   QWORD PTR [rax+0x68]
   140016813:	mov    rcx,QWORD PTR [rbp+0x38]
   140016817:	test   eax,eax
   140016819:	js     0x140016846
   14001681b:	test   rcx,rcx
   14001681e:	je     0x140016844
   140016820:	mov    rax,QWORD PTR [rcx]
   140016823:	lea    r8,[rbp-0x18]
   140016827:	lea    rdx,[rip+0x5466a]        # 0x14006ae98
   14001682e:	call   QWORD PTR [rax+0x20]
   140016831:	mov    rcx,QWORD PTR [rbp+0x38]
   140016835:	jmp    0x140016844
   140016837:	mov    eax,0x80004005
   14001683c:	mov    rcx,QWORD PTR [rbp+0x38]
   140016840:	jmp    0x140016844
   140016842:	mov    eax,edi
   140016844:	test   eax,eax
   140016846:	setns  r12b
   14001684a:	test   rcx,rcx
   14001684d:	je     0x140016855
   14001684f:	mov    rax,QWORD PTR [rcx]
   140016852:	call   QWORD PTR [rax+0x10]
   140016855:	test   r12b,r12b
   140016858:	je     0x14001686b
   14001685a:	cmp    r13w,WORD PTR [rbp-0x18]
   14001685f:	jne    0x14001686b
   140016861:	movss  xmm0,DWORD PTR [rbp-0x10]
   140016866:	movss  DWORD PTR [rsi+0x4c],xmm0
   14001686b:	lea    rcx,[rbp-0x18]
   14001686f:	call   QWORD PTR [rip+0x51e0b]        # 0x140068680
   140016875:	test   r12b,r12b
   140016878:	je     0x140016931
   14001687e:	xor    eax,eax
   140016880:	mov    QWORD PTR [rbp-0x18],rax
   140016884:	mov    QWORD PTR [rbp-0x10],rax
   140016888:	mov    QWORD PTR [rbp-0x8],rax
   14001688c:	mov    DWORD PTR [rbp+0x30],0x1
   140016893:	mov    QWORD PTR [rbp+0x38],rbx
   140016897:	mov    rcx,QWORD PTR [rsi+0x30]
   14001689b:	test   rcx,rcx
   14001689e:	je     0x1400168f4
   1400168a0:	mov    rax,QWORD PTR [rcx]
   1400168a3:	lea    rdx,[rbp+0x30]
   1400168a7:	call   QWORD PTR [rax+0x60]
   1400168aa:	mov    edi,eax
   1400168ac:	test   eax,eax
   1400168ae:	js     0x1400168f0
   1400168b0:	cmp    DWORD PTR [rbp+0x30],0x0
   1400168b4:	jne    0x1400168eb
   1400168b6:	mov    rcx,QWORD PTR [rsi+0x30]
   1400168ba:	mov    rax,QWORD PTR [rcx]
   1400168bd:	lea    rdx,[rbp+0x38]
   1400168c1:	call   QWORD PTR [rax+0x68]
   1400168c4:	mov    edi,eax
   1400168c6:	mov    rbx,QWORD PTR [rbp+0x38]
   1400168ca:	test   eax,eax
   1400168cc:	js     0x1400168f4
   1400168ce:	test   rbx,rbx
   1400168d1:	je     0x1400168f4
   1400168d3:	mov    rax,QWORD PTR [rbx]
   1400168d6:	lea    r8,[rbp-0x18]
   1400168da:	lea    rdx,[rip+0x545cf]        # 0x14006aeb0
   1400168e1:	mov    rcx,rbx
   1400168e4:	call   QWORD PTR [rax+0x20]
   1400168e7:	mov    edi,eax
   1400168e9:	jmp    0x1400168f0
   1400168eb:	mov    edi,0x80004005
   1400168f0:	mov    rbx,QWORD PTR [rbp+0x38]
   1400168f4:	test   edi,edi
   1400168f6:	setns  dil
   1400168fa:	test   rbx,rbx
   1400168fd:	je     0x140016908
   1400168ff:	mov    rax,QWORD PTR [rbx]
   140016902:	mov    rcx,rbx
   140016905:	call   QWORD PTR [rax+0x10]
   140016908:	test   dil,dil
   14001690b:	je     0x14001691e
   14001690d:	cmp    r13w,WORD PTR [rbp-0x18]
   140016912:	jne    0x14001691e
   140016914:	movss  xmm0,DWORD PTR [rbp-0x10]
   140016919:	movss  DWORD PTR [rsi+0x50],xmm0
   14001691e:	lea    rcx,[rbp-0x18]
   140016922:	call   QWORD PTR [rip+0x51d58]        # 0x140068680
   140016928:	test   dil,dil
   14001692b:	je     0x140016931
   14001692d:	mov    al,0x1
   14001692f:	jmp    0x140016933
   140016931:	xor    al,al
   140016933:	mov    rbx,QWORD PTR [rsp+0x80]
   14001693b:	add    rsp,0x40
   14001693f:	pop    r13
   140016941:	pop    r12
   140016943:	pop    rdi
   140016944:	pop    rsi
   140016945:	pop    rbp
   140016946:	ret    
   140016947:	int3   
   140016948:	int3   
   140016949:	int3   
   14001694a:	int3   
   14001694b:	int3   
   14001694c:	int3   
   14001694d:	int3   
   14001694e:	int3   
   14001694f:	int3   
   140016950:	rex push rdi
   140016952:	sub    rsp,0x50
   140016956:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001695f:	mov    QWORD PTR [rsp+0x70],rbx
   140016964:	mov    rdi,rcx
   140016967:	mov    DWORD PTR [rcx+0x48],0xffffffff
   14001696e:	xor    eax,eax
   140016970:	mov    QWORD PTR [rsp+0x38],rax
   140016975:	mov    QWORD PTR [rsp+0x40],rax
   14001697a:	mov    QWORD PTR [rsp+0x48],rax
   14001697f:	mov    DWORD PTR [rsp+0x60],0x1
   140016987:	xor    ecx,ecx
   140016989:	mov    QWORD PTR [rsp+0x68],rcx
   14001698e:	mov    r8,QWORD PTR [rdi+0x30]
   140016992:	test   r8,r8
   140016995:	je     0x1400169f2
   140016997:	mov    rax,QWORD PTR [r8]
   14001699a:	lea    rdx,[rsp+0x60]
   14001699f:	mov    rcx,r8
   1400169a2:	call   QWORD PTR [rax+0x60]
   1400169a5:	test   eax,eax
   1400169a7:	js     0x1400169eb
   1400169a9:	cmp    DWORD PTR [rsp+0x60],0x0
   1400169ae:	jne    0x1400169e6
   1400169b0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400169b4:	mov    rax,QWORD PTR [rcx]
   1400169b7:	lea    rdx,[rsp+0x68]
   1400169bc:	call   QWORD PTR [rax+0x68]
   1400169bf:	mov    rcx,QWORD PTR [rsp+0x68]
   1400169c4:	test   eax,eax
   1400169c6:	js     0x1400169f9
   1400169c8:	test   rcx,rcx
   1400169cb:	je     0x1400169f7
   1400169cd:	mov    rax,QWORD PTR [rcx]
   1400169d0:	lea    r8,[rsp+0x38]
   1400169d5:	lea    rdx,[rip+0x5702c]        # 0x14006da08
   1400169dc:	call   QWORD PTR [rax+0x20]
   1400169df:	mov    rcx,QWORD PTR [rsp+0x68]
   1400169e4:	jmp    0x1400169f7
   1400169e6:	mov    eax,0x80004005
   1400169eb:	mov    rcx,QWORD PTR [rsp+0x68]
   1400169f0:	jmp    0x1400169f7
   1400169f2:	mov    eax,0x80004003
   1400169f7:	test   eax,eax
   1400169f9:	setns  bl
   1400169fc:	test   rcx,rcx
   1400169ff:	je     0x140016a07
   140016a01:	mov    rax,QWORD PTR [rcx]
   140016a04:	call   QWORD PTR [rax+0x10]
   140016a07:	test   bl,bl
   140016a09:	je     0x140016a1e
   140016a0b:	mov    eax,0x13
   140016a10:	cmp    ax,WORD PTR [rsp+0x38]
   140016a15:	jne    0x140016a1e
   140016a17:	mov    ecx,DWORD PTR [rsp+0x40]
   140016a1b:	mov    DWORD PTR [rdi+0x48],ecx
   140016a1e:	lea    rcx,[rsp+0x38]
   140016a23:	call   QWORD PTR [rip+0x51c57]        # 0x140068680
   140016a29:	mov    r11d,DWORD PTR [rdi+0x48]
   140016a2d:	mov    DWORD PTR [rsp+0x28],r11d
   140016a32:	lea    rax,[rip+0x56fe7]        # 0x14006da20
   140016a39:	mov    QWORD PTR [rsp+0x20],rax
   140016a3e:	xor    r9d,r9d
   140016a41:	lea    edx,[r9+0x7f]
   140016a45:	lea    r8d,[r9+0x3]
   140016a49:	lea    rcx,[rip+0x57020]        # 0x14006da70
   140016a50:	call   0x140003150
   140016a55:	movzx  eax,bl
   140016a58:	mov    rbx,QWORD PTR [rsp+0x70]
   140016a5d:	add    rsp,0x50
   140016a61:	pop    rdi
   140016a62:	ret    
   140016a63:	int3   
   140016a64:	int3   
   140016a65:	int3   
   140016a66:	int3   
   140016a67:	int3   
   140016a68:	int3   
   140016a69:	int3   
   140016a6a:	int3   
   140016a6b:	int3   
   140016a6c:	int3   
   140016a6d:	int3   
   140016a6e:	int3   
   140016a6f:	int3   
   140016a70:	ret    0x0
   140016a73:	int3   
   140016a74:	int3   
   140016a75:	int3   
   140016a76:	int3   
   140016a77:	int3   
   140016a78:	int3   
   140016a79:	int3   
   140016a7a:	int3   
   140016a7b:	int3   
   140016a7c:	int3   
   140016a7d:	int3   
   140016a7e:	int3   
   140016a7f:	int3   
   140016a80:	mov    QWORD PTR [rsp+0x10],rdx
   140016a85:	push   rsi
   140016a86:	push   rdi
   140016a87:	push   r12
   140016a89:	sub    rsp,0x30
   140016a8d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016a96:	mov    QWORD PTR [rsp+0x50],rbx
   140016a9b:	mov    QWORD PTR [rsp+0x68],rbp
   140016aa0:	mov    rbp,rdx
   140016aa3:	mov    r12,rcx
   140016aa6:	xor    ebx,ebx
   140016aa8:	mov    DWORD PTR [rsp+0x60],ebx
   140016aac:	mov    r8,QWORD PTR [rdx]
   140016aaf:	mov    eax,DWORD PTR [r8-0x10]
   140016ab3:	mov    edi,ebx
   140016ab5:	test   eax,eax
   140016ab7:	jle    0x140016b0e
   140016ab9:	nop    DWORD PTR [rax+0x0]
   140016ac0:	test   rdi,rdi
   140016ac3:	js     0x140016b03
   140016ac5:	cmp    ebx,eax
   140016ac7:	jg     0x140016b03
   140016ac9:	movsx  esi,BYTE PTR [r8+rdi*1]
   140016ace:	mov    ecx,esi
   140016ad0:	call   0x140034b1c
   140016ad5:	test   eax,eax
   140016ad7:	jne    0x140016af0
   140016ad9:	cmp    sil,0x5f
   140016add:	je     0x140016af0
   140016adf:	movzx  edx,sil
   140016ae3:	mov    rcx,rbp
   140016ae6:	call   0x140016db0
   140016aeb:	dec    ebx
   140016aed:	dec    rdi
   140016af0:	inc    ebx
   140016af2:	inc    rdi
   140016af5:	mov    r8,QWORD PTR [rbp+0x0]
   140016af9:	mov    eax,DWORD PTR [r8-0x10]
   140016afd:	cmp    ebx,eax
   140016aff:	jl     0x140016ac0
   140016b01:	jmp    0x140016b0e
   140016b03:	mov    ecx,0x80070057
   140016b08:	call   0x1400025f0
   140016b0d:	int3   
   140016b0e:	mov    rbx,QWORD PTR [rbp+0x0]
   140016b12:	mov    rcx,QWORD PTR [rbx-0x18]
   140016b16:	mov    rax,QWORD PTR [rcx]
   140016b19:	call   QWORD PTR [rax+0x20]
   140016b1c:	mov    rcx,rax
   140016b1f:	cmp    DWORD PTR [rbx-0x8],0x0
   140016b23:	jl     0x140016b35
   140016b25:	cmp    rax,QWORD PTR [rbx-0x18]
   140016b29:	jne    0x140016b35
   140016b2b:	lea    rdi,[rbx-0x18]
   140016b2f:	lock inc DWORD PTR [rbx-0x8]
   140016b33:	jmp    0x140016b6e
   140016b35:	mov    rax,QWORD PTR [rax]
   140016b38:	mov    r8d,0x1
   140016b3e:	mov    edx,DWORD PTR [rbx-0x10]
   140016b41:	call   QWORD PTR [rax]
   140016b43:	mov    rdi,rax
   140016b46:	test   rax,rax
   140016b49:	jne    0x140016b51
   140016b4b:	call   0x140017170
   140016b50:	int3   
   140016b51:	mov    eax,DWORD PTR [rbx-0x10]
   140016b54:	mov    DWORD PTR [rdi+0x8],eax
   140016b57:	mov    eax,DWORD PTR [rbx-0x10]
   140016b5a:	inc    eax
   140016b5c:	movsxd rdx,eax
   140016b5f:	mov    r8,rbx
   140016b62:	lea    rcx,[rdi+0x18]
   140016b66:	mov    r9,rdx
   140016b69:	call   0x140033ccc
   140016b6e:	lea    rax,[rdi+0x18]
   140016b72:	mov    QWORD PTR [r12],rax
   140016b76:	mov    rdx,QWORD PTR [rbp+0x0]
   140016b7a:	sub    rdx,0x18
   140016b7e:	or     eax,0xffffffff
   140016b81:	lock xadd DWORD PTR [rdx+0x10],eax
   140016b86:	dec    eax
   140016b88:	test   eax,eax
   140016b8a:	jg     0x140016b95
   140016b8c:	mov    rcx,QWORD PTR [rdx]
   140016b8f:	mov    rax,QWORD PTR [rcx]
   140016b92:	call   QWORD PTR [rax+0x8]
   140016b95:	mov    rax,r12
   140016b98:	mov    rbx,QWORD PTR [rsp+0x50]
   140016b9d:	mov    rbp,QWORD PTR [rsp+0x68]
   140016ba2:	add    rsp,0x30
   140016ba6:	pop    r12
   140016ba8:	pop    rdi
   140016ba9:	pop    rsi
   140016baa:	ret    
   140016bab:	int3   
   140016bac:	int3   
   140016bad:	int3   
   140016bae:	int3   
   140016baf:	int3   
   140016bb0:	mov    rax,rsp
   140016bb3:	push   rbp
   140016bb4:	push   r12
   140016bb6:	push   r13
   140016bb8:	mov    rbp,rsp
   140016bbb:	sub    rsp,0x70
   140016bbf:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140016bc7:	mov    QWORD PTR [rax+0x10],rbx
   140016bcb:	mov    QWORD PTR [rax+0x18],rsi
   140016bcf:	mov    QWORD PTR [rax+0x20],rdi
   140016bd3:	mov    r12,rcx
   140016bd6:	xor    ebx,ebx
   140016bd8:	mov    WORD PTR [rbp-0x40],bx
   140016bdc:	mov    WORD PTR [rbp-0x3c],bx
   140016be0:	mov    WORD PTR [rbp-0x38],bx
   140016be4:	mov    DWORD PTR [rbp-0x28],ebx
   140016be7:	lea    r9d,[rbx+0x2]
   140016beb:	xor    r8d,r8d
   140016bee:	xor    edx,edx
   140016bf0:	lea    rcx,[rip+0x55e51]        # 0x14006ca48
   140016bf7:	call   QWORD PTR [rip+0x518ab]        # 0x1400684a8
   140016bfd:	cmp    rax,0xffffffffffffffff
   140016c01:	je     0x140016d8f
   140016c07:	mov    QWORD PTR [rsp+0x20],rax
   140016c0c:	lea    r9,[rbp-0x28]
   140016c10:	lea    r8,[rbp-0x38]
   140016c14:	lea    rdx,[rbp-0x3c]
   140016c18:	lea    rcx,[rbp-0x40]
   140016c1c:	call   0x14000d010
   140016c21:	test   eax,eax
   140016c23:	je     0x140016d8f
   140016c29:	movzx  ecx,WORD PTR [rbp-0x3c]
   140016c2d:	movzx  eax,WORD PTR [rbp-0x38]
   140016c31:	cmp    cx,ax
   140016c34:	je     0x140016c64
   140016c36:	cmp    bx,ax
   140016c39:	je     0x140016c64
   140016c3b:	movzx  eax,ax
   140016c3e:	movzx  ecx,cx
   140016c41:	movzx  r9d,WORD PTR [rbp-0x40]
   140016c46:	mov    DWORD PTR [rsp+0x28],eax
   140016c4a:	mov    DWORD PTR [rsp+0x20],ecx
   140016c4e:	lea    r8,[rip+0x56e6b]        # 0x14006dac0
   140016c55:	mov    edx,0xc8
   140016c5a:	mov    rcx,r12
   140016c5d:	call   0x1400339ac
   140016c62:	jmp    0x140016c84
   140016c64:	movzx  eax,cx
   140016c67:	movzx  r9d,WORD PTR [rbp-0x40]
   140016c6c:	mov    DWORD PTR [rsp+0x20],eax
   140016c70:	lea    r8,[rip+0x56e59]        # 0x14006dad0
   140016c77:	mov    edx,0xc8
   140016c7c:	mov    rcx,r12
   140016c7f:	call   0x1400339ac
   140016c84:	mov    esi,0x1
   140016c89:	lea    r8,[rip+0x56e4c]        # 0x14006dadc
   140016c90:	lea    rdx,[rip+0x54ab9]        # 0x14006b750
   140016c97:	lea    rcx,[rbp-0x30]
   140016c9b:	call   0x1400159d0
   140016ca0:	nop
   140016ca1:	mov    rcx,QWORD PTR [rbp-0x30]
   140016ca5:	add    rcx,0xffffffffffffffe8
   140016ca9:	call   0x140008e50
   140016cae:	add    rax,0x18
   140016cb2:	mov    QWORD PTR [rbp-0x18],rax
   140016cb6:	lea    rdx,[rbp-0x18]
   140016cba:	lea    rcx,[rbp-0x20]
   140016cbe:	call   0x140016a80
   140016cc3:	nop
   140016cc4:	mov    rdx,QWORD PTR [rax]
   140016cc7:	lea    rcx,[rdx-0x18]
   140016ccb:	mov    rdi,QWORD PTR [rbp-0x30]
   140016ccf:	add    rdi,0xffffffffffffffe8
   140016cd3:	or     ebx,0xffffffff
   140016cd6:	cmp    rcx,rdi
   140016cd9:	je     0x140016d22
   140016cdb:	cmp    DWORD PTR [rdi+0x10],0x0
   140016cdf:	jl     0x140016d14
   140016ce1:	mov    rax,QWORD PTR [rdi]
   140016ce4:	cmp    QWORD PTR [rcx],rax
   140016ce7:	jne    0x140016d14
   140016ce9:	call   0x140008e50
   140016cee:	mov    r13,rax
   140016cf1:	mov    eax,ebx
   140016cf3:	lock xadd DWORD PTR [rdi+0x10],eax
   140016cf8:	dec    eax
   140016cfa:	test   eax,eax
   140016cfc:	jg     0x140016d0a
   140016cfe:	mov    rcx,QWORD PTR [rdi]
   140016d01:	mov    rax,QWORD PTR [rcx]
   140016d04:	mov    rdx,rdi
   140016d07:	call   QWORD PTR [rax+0x8]
   140016d0a:	lea    rax,[r13+0x18]
   140016d0e:	mov    QWORD PTR [rbp-0x30],rax
   140016d12:	jmp    0x140016d22
   140016d14:	mov    r8d,DWORD PTR [rdx-0x10]
   140016d18:	lea    rcx,[rbp-0x30]
   140016d1c:	call   0x140008d10
   140016d21:	nop
   140016d22:	mov    rdx,QWORD PTR [rbp-0x20]
   140016d26:	add    rdx,0xffffffffffffffe8
   140016d2a:	mov    eax,ebx
   140016d2c:	lock xadd DWORD PTR [rdx+0x10],eax
   140016d31:	dec    eax
   140016d33:	test   eax,eax
   140016d35:	jg     0x140016d40
   140016d37:	mov    rcx,QWORD PTR [rdx]
   140016d3a:	mov    rax,QWORD PTR [rcx]
   140016d3d:	call   QWORD PTR [rax+0x8]
   140016d40:	mov    rax,QWORD PTR [rbp-0x30]
   140016d44:	cmp    DWORD PTR [rax-0x10],0x0
   140016d48:	je     0x140016d73
   140016d4a:	lea    r8,[rip+0x56d93]        # 0x14006dae4
   140016d51:	mov    edx,0xc8
   140016d56:	mov    rcx,r12
   140016d59:	call   0x1400330c8
   140016d5e:	mov    r8,QWORD PTR [rbp-0x30]
   140016d62:	mov    edx,0xc8
   140016d67:	mov    rcx,r12
   140016d6a:	call   0x1400330c8
   140016d6f:	mov    rax,QWORD PTR [rbp-0x30]
   140016d73:	lea    rdx,[rax-0x18]
   140016d77:	lock xadd DWORD PTR [rdx+0x10],ebx
   140016d7c:	dec    ebx
   140016d7e:	test   ebx,ebx
   140016d80:	jg     0x140016d8b
   140016d82:	mov    rcx,QWORD PTR [rdx]
   140016d85:	mov    rax,QWORD PTR [rcx]
   140016d88:	call   QWORD PTR [rax+0x8]
   140016d8b:	mov    eax,esi
   140016d8d:	jmp    0x140016d91
   140016d8f:	mov    eax,ebx
   140016d91:	lea    r11,[rsp+0x70]
   140016d96:	mov    rbx,QWORD PTR [r11+0x28]
   140016d9a:	mov    rsi,QWORD PTR [r11+0x30]
   140016d9e:	mov    rdi,QWORD PTR [r11+0x38]
   140016da2:	mov    rsp,r11
   140016da5:	pop    r13
   140016da7:	pop    r12
   140016da9:	pop    rbp
   140016daa:	ret    
   140016dab:	int3   
   140016dac:	int3   
   140016dad:	int3   
   140016dae:	int3   
   140016daf:	int3   
   140016db0:	rex push rsi
   140016db2:	push   r12
   140016db4:	push   r13
   140016db6:	sub    rsp,0x20
   140016dba:	mov    rax,QWORD PTR [rcx]
   140016dbd:	movzx  r13d,dl
   140016dc1:	mov    r12,rcx
   140016dc4:	movsxd rsi,DWORD PTR [rax-0x10]
   140016dc8:	test   esi,esi
   140016dca:	jns    0x140016dd7
   140016dcc:	mov    ecx,0x80070057
   140016dd1:	call   0x1400025f0
   140016dd6:	int3   
   140016dd7:	mov    QWORD PTR [rsp+0x40],rbx
   140016ddc:	mov    ecx,0x1
   140016de1:	mov    QWORD PTR [rsp+0x48],rbp
   140016de6:	sub    ecx,DWORD PTR [rax-0x8]
   140016de9:	mov    eax,DWORD PTR [rax-0xc]
   140016dec:	mov    QWORD PTR [rsp+0x50],rdi
   140016df1:	sub    eax,esi
   140016df3:	or     ecx,eax
   140016df5:	jge    0x140016e01
   140016df7:	mov    edx,esi
   140016df9:	mov    rcx,r12
   140016dfc:	call   0x140008df0
   140016e01:	mov    rdi,QWORD PTR [r12]
   140016e05:	mov    rbx,rdi
   140016e08:	lea    rbp,[rdi+rsi*1]
   140016e0c:	cmp    rdi,rbp
   140016e0f:	jae    0x140016e54
   140016e11:	mov    rcx,rdi
   140016e14:	call   0x140034ba0
   140016e19:	mov    r11,rax
   140016e1c:	cmp    BYTE PTR [rdi],r13b
   140016e1f:	je     0x140016e4c
   140016e21:	mov    rdx,rax
   140016e24:	xor    ecx,ecx
   140016e26:	sub    rdx,rdi
   140016e29:	lea    r8,[rdx+rbx*1]
   140016e2d:	cmp    rbx,r8
   140016e30:	je     0x140016e4c
   140016e32:	sub    rdi,rbx
   140016e35:	cmp    rcx,rdx
   140016e38:	jae    0x140016e4c
   140016e3a:	movzx  eax,BYTE PTR [rdi+rbx*1]
   140016e3e:	inc    rbx
   140016e41:	inc    rcx
   140016e44:	mov    BYTE PTR [rbx-0x1],al
   140016e47:	cmp    rbx,r8
   140016e4a:	jne    0x140016e35
   140016e4c:	mov    rdi,r11
   140016e4f:	cmp    r11,rbp
   140016e52:	jb     0x140016e11
   140016e54:	mov    rbp,QWORD PTR [rsp+0x48]
   140016e59:	sub    edi,ebx
   140016e5b:	mov    BYTE PTR [rbx],0x0
   140016e5e:	sub    esi,edi
   140016e60:	mov    rbx,QWORD PTR [rsp+0x40]
   140016e65:	js     0x140016e8f
   140016e67:	mov    rcx,QWORD PTR [r12]
   140016e6b:	cmp    esi,DWORD PTR [rcx-0xc]
   140016e6e:	jg     0x140016e8f
   140016e70:	mov    DWORD PTR [rcx-0x10],esi
   140016e73:	mov    rcx,QWORD PTR [r12]
   140016e77:	movsxd rdx,esi
   140016e7a:	mov    eax,edi
   140016e7c:	mov    rdi,QWORD PTR [rsp+0x50]
   140016e81:	mov    BYTE PTR [rdx+rcx*1],0x0
   140016e85:	add    rsp,0x20
   140016e89:	pop    r13
   140016e8b:	pop    r12
   140016e8d:	pop    rsi
   140016e8e:	ret    
   140016e8f:	mov    ecx,0x80070057
   140016e94:	call   0x1400025f0
   140016e99:	int3   
   140016e9a:	int3   
   140016e9b:	int3   
   140016e9c:	int3   
   140016e9d:	int3   
   140016e9e:	int3   
   140016e9f:	int3   
   140016ea0:	mov    QWORD PTR [rsp+0x8],rcx
   140016ea5:	push   rdi
   140016ea6:	sub    rsp,0x30
   140016eaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016eb3:	mov    QWORD PTR [rsp+0x48],rbx
   140016eb8:	mov    QWORD PTR [rsp+0x50],rsi
   140016ebd:	mov    rsi,rdx
   140016ec0:	mov    rbx,rcx
   140016ec3:	lea    rcx,[rip+0x6f88e]        # 0x140086758
   140016eca:	mov    rax,QWORD PTR [rip+0x6f887]        # 0x140086758
   140016ed1:	call   QWORD PTR [rax+0x18]
   140016ed4:	add    rax,0x18
   140016ed8:	mov    QWORD PTR [rbx],rax
   140016edb:	test   rsi,rsi
   140016ede:	je     0x140016f1f
   140016ee0:	test   rsi,0xffffffffffff0000
   140016ee7:	jne    0x140016f0b
   140016ee9:	movzx  edi,si
   140016eec:	mov    ecx,edi
   140016eee:	call   0x14000c810
   140016ef3:	test   rax,rax
   140016ef6:	je     0x140016f09
   140016ef8:	mov    r8d,edi
   140016efb:	mov    rdx,rax
   140016efe:	mov    rcx,rbx
   140016f01:	call   0x140016f50
   140016f06:	nop
   140016f07:	jmp    0x140016f30
   140016f09:	jmp    0x140016f30
   140016f0b:	xor    eax,eax
   140016f0d:	or     rcx,0xffffffffffffffff
   140016f11:	mov    rdi,rsi
   140016f14:	repnz scas ax,WORD PTR es:[rdi]
   140016f17:	not    rcx
   140016f1a:	dec    rcx
   140016f1d:	jmp    0x140016f21
   140016f1f:	xor    ecx,ecx
   140016f21:	mov    r8d,ecx
   140016f24:	mov    rdx,rsi
   140016f27:	mov    rcx,rbx
   140016f2a:	call   0x140017080
   140016f2f:	nop
   140016f30:	mov    rax,rbx
   140016f33:	mov    rbx,QWORD PTR [rsp+0x48]
   140016f38:	mov    rsi,QWORD PTR [rsp+0x50]
   140016f3d:	add    rsp,0x30
   140016f41:	pop    rdi
   140016f42:	ret    
   140016f43:	int3   
   140016f44:	int3   
   140016f45:	int3   
   140016f46:	int3   
   140016f47:	int3   
   140016f48:	int3   
   140016f49:	int3   
   140016f4a:	int3   
   140016f4b:	int3   
   140016f4c:	int3   
   140016f4d:	int3   
   140016f4e:	int3   
   140016f4f:	int3   
   140016f50:	mov    QWORD PTR [rsp+0x8],rbx
   140016f55:	mov    QWORD PTR [rsp+0x10],rsi
   140016f5a:	push   rdi
   140016f5b:	sub    rsp,0x20
   140016f5f:	mov    eax,r8d
   140016f62:	mov    rbx,rdx
   140016f65:	mov    edi,r8d
   140016f68:	shr    eax,0x4
   140016f6b:	mov    rsi,rcx
   140016f6e:	mov    r8d,0x6
   140016f74:	inc    ax
   140016f77:	mov    rcx,rbx
   140016f7a:	movzx  edx,ax
   140016f7d:	call   QWORD PTR [rip+0x513f5]        # 0x140068378
   140016f83:	test   rax,rax
   140016f86:	je     0x14001706c
   140016f8c:	mov    r8d,edi
   140016f8f:	mov    rdx,rax
   140016f92:	mov    rcx,rbx
   140016f95:	call   0x14000c770
   140016f9a:	mov    rdi,rax
   140016f9d:	test   rax,rax
   140016fa0:	je     0x14001706c
   140016fa6:	movzx  ebx,WORD PTR [rax]
   140016fa9:	test   ebx,ebx
   140016fab:	jns    0x140016fb8
   140016fad:	mov    ecx,0x80070057
   140016fb2:	call   0x1400025f0
   140016fb7:	int3   
   140016fb8:	mov    rax,QWORD PTR [rsi]
   140016fbb:	mov    ecx,0x1
   140016fc0:	sub    ecx,DWORD PTR [rax-0x8]
   140016fc3:	mov    eax,DWORD PTR [rax-0xc]
   140016fc6:	sub    eax,ebx
   140016fc8:	or     ecx,eax
   140016fca:	jge    0x140016fd6
   140016fcc:	mov    edx,ebx
   140016fce:	mov    rcx,rsi
   140016fd1:	call   0x140017200
   140016fd6:	movzx  ecx,WORD PTR [rdi]
   140016fd9:	lea    r8,[rdi+0x2]
   140016fdd:	cmp    ecx,0xffffffff
   140016fe0:	jne    0x140016ff3
   140016fe2:	or     rcx,0xffffffffffffffff
   140016fe6:	xor    eax,eax
   140016fe8:	mov    rdi,r8
   140016feb:	repnz scas ax,WORD PTR es:[rdi]
   140016fee:	not    rcx
   140016ff1:	and    ecx,ecx
   140016ff3:	movsxd r9,ecx
   140016ff6:	mov    rcx,QWORD PTR [rsi]
   140016ff9:	mov    rdx,rbx
   140016ffc:	call   0x140034d70
   140017001:	test   eax,eax
   140017003:	je     0x14001703a
   140017005:	cmp    eax,0xc
   140017008:	je     0x14001702f
   14001700a:	cmp    eax,0x16
   14001700d:	je     0x140017024
   14001700f:	cmp    eax,0x22
   140017012:	je     0x140017024
   140017014:	cmp    eax,0x50
   140017017:	je     0x14001703a
   140017019:	mov    ecx,0x80004005
   14001701e:	call   0x1400025f0
   140017023:	int3   
   140017024:	mov    ecx,0x80070057
   140017029:	call   0x1400025f0
   14001702e:	int3   
   14001702f:	mov    ecx,0x8007000e
   140017034:	call   0x1400025f0
   140017039:	int3   
   14001703a:	mov    rcx,QWORD PTR [rsi]
   14001703d:	cmp    ebx,DWORD PTR [rcx-0xc]
   140017040:	jg     0x140017061
   140017042:	mov    DWORD PTR [rcx-0x10],ebx
   140017045:	mov    rcx,QWORD PTR [rsi]
   140017048:	xor    edx,edx
   14001704a:	mov    WORD PTR [rcx+rbx*2],dx
   14001704e:	lea    eax,[rdx+0x1]
   140017051:	mov    rbx,QWORD PTR [rsp+0x30]
   140017056:	mov    rsi,QWORD PTR [rsp+0x38]
   14001705b:	add    rsp,0x20
   14001705f:	pop    rdi
   140017060:	ret    
   140017061:	mov    ecx,0x80070057
   140017066:	call   0x1400025f0
   14001706b:	int3   
   14001706c:	mov    rbx,QWORD PTR [rsp+0x30]
   140017071:	mov    rsi,QWORD PTR [rsp+0x38]
   140017076:	xor    eax,eax
   140017078:	add    rsp,0x20
   14001707c:	pop    rdi
   14001707d:	ret    
   14001707e:	int3   
   14001707f:	int3   
   140017080:	mov    QWORD PTR [rsp+0x18],rbx
   140017085:	mov    QWORD PTR [rsp+0x20],rbp
   14001708a:	push   rdi
   14001708b:	sub    rsp,0x20
   14001708f:	movsxd rbx,r8d
   140017092:	mov    rbp,rdx
   140017095:	mov    rdi,rcx
   140017098:	test   r8d,r8d
   14001709b:	jne    0x1400170b1
   14001709d:	mov    rbx,QWORD PTR [rsp+0x40]
   1400170a2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400170a7:	add    rsp,0x20
   1400170ab:	pop    rdi
   1400170ac:	jmp    0x140017180
   1400170b1:	test   rdx,rdx
   1400170b4:	jne    0x1400170c1
   1400170b6:	mov    ecx,0x80070057
   1400170bb:	call   0x1400025f0
   1400170c0:	int3   
   1400170c1:	mov    rax,QWORD PTR [rcx]
   1400170c4:	mov    QWORD PTR [rsp+0x30],rsi
   1400170c9:	mov    rsi,rdx
   1400170cc:	sub    rsi,rax
   1400170cf:	mov    QWORD PTR [rsp+0x38],r12
   1400170d4:	mov    r12d,DWORD PTR [rax-0x10]
   1400170d8:	sar    rsi,1
   1400170db:	test   r8d,r8d
   1400170de:	jns    0x1400170eb
   1400170e0:	mov    ecx,0x80070057
   1400170e5:	call   0x1400025f0
   1400170ea:	int3   
   1400170eb:	mov    ecx,0x1
   1400170f0:	sub    ecx,DWORD PTR [rax-0x8]
   1400170f3:	mov    eax,DWORD PTR [rax-0xc]
   1400170f6:	sub    eax,ebx
   1400170f8:	or     ecx,eax
   1400170fa:	jge    0x140017106
   1400170fc:	mov    edx,ebx
   1400170fe:	mov    rcx,rdi
   140017101:	call   0x140017200
   140017106:	mov    rcx,QWORD PTR [rdi]
   140017109:	movsxd rdx,DWORD PTR [rcx-0xc]
   14001710d:	add    rdx,rdx
   140017110:	cmp    rsi,r12
   140017113:	lea    r12,[rbx+rbx*1]
   140017117:	mov    r9,r12
   14001711a:	ja     0x140017127
   14001711c:	lea    r8,[rcx+rsi*2]
   140017120:	call   0x140033d7c
   140017125:	jmp    0x14001712f
   140017127:	mov    r8,rbp
   14001712a:	call   0x140033ccc
   14001712f:	mov    rax,QWORD PTR [rdi]
   140017132:	cmp    ebx,DWORD PTR [rax-0xc]
   140017135:	jg     0x14001715e
   140017137:	mov    rsi,QWORD PTR [rsp+0x30]
   14001713c:	mov    rbp,QWORD PTR [rsp+0x48]
   140017141:	mov    DWORD PTR [rax-0x10],ebx
   140017144:	mov    rax,QWORD PTR [rdi]
   140017147:	mov    rbx,QWORD PTR [rsp+0x40]
   14001714c:	xor    ecx,ecx
   14001714e:	mov    WORD PTR [r12+rax*1],cx
   140017153:	mov    r12,QWORD PTR [rsp+0x38]
   140017158:	add    rsp,0x20
   14001715c:	pop    rdi
   14001715d:	ret    
   14001715e:	mov    ecx,0x80070057
   140017163:	call   0x1400025f0
   140017168:	int3   
   140017169:	int3   
   14001716a:	int3   
   14001716b:	int3   
   14001716c:	int3   
   14001716d:	int3   
   14001716e:	int3   
   14001716f:	int3   
   140017170:	sub    rsp,0x28
   140017174:	mov    ecx,0x8007000e
   140017179:	call   0x1400025f0
   14001717e:	int3   
   14001717f:	int3   
   140017180:	mov    QWORD PTR [rsp+0x8],rbx
   140017185:	push   rdi
   140017186:	sub    rsp,0x20
   14001718a:	mov    rax,QWORD PTR [rcx]
   14001718d:	mov    rbx,rcx
   140017190:	cmp    DWORD PTR [rax-0x10],0x0
   140017194:	mov    rdi,QWORD PTR [rax-0x18]
   140017198:	lea    rdx,[rax-0x18]
   14001719c:	je     0x1400171f2
   14001719e:	cmp    DWORD PTR [rdx+0x10],0x0
   1400171a2:	jge    0x1400171cb
   1400171a4:	cmp    DWORD PTR [rax-0xc],0x0
   1400171a8:	jge    0x1400171b5
   1400171aa:	mov    ecx,0x80070057
   1400171af:	call   0x1400025f0
   1400171b4:	int3   
   1400171b5:	xor    ecx,ecx
   1400171b7:	mov    DWORD PTR [rax-0x10],ecx
   1400171ba:	mov    rax,QWORD PTR [rbx]
   1400171bd:	mov    WORD PTR [rax],cx
   1400171c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400171c5:	add    rsp,0x20
   1400171c9:	pop    rdi
   1400171ca:	ret    
   1400171cb:	or     eax,0xffffffff
   1400171ce:	lock xadd DWORD PTR [rdx+0x10],eax
   1400171d3:	dec    eax
   1400171d5:	test   eax,eax
   1400171d7:	jg     0x1400171e2
   1400171d9:	mov    rcx,QWORD PTR [rdx]
   1400171dc:	mov    rax,QWORD PTR [rcx]
   1400171df:	call   QWORD PTR [rax+0x8]
   1400171e2:	mov    rax,QWORD PTR [rdi]
   1400171e5:	mov    rcx,rdi
   1400171e8:	call   QWORD PTR [rax+0x18]
   1400171eb:	add    rax,0x18
   1400171ef:	mov    QWORD PTR [rbx],rax
   1400171f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400171f7:	add    rsp,0x20
   1400171fb:	pop    rdi
   1400171fc:	ret    
   1400171fd:	int3   
   1400171fe:	int3   
   1400171ff:	int3   
   140017200:	sub    rsp,0x28
   140017204:	mov    r8d,edx
   140017207:	mov    rdx,QWORD PTR [rcx]
   14001720a:	mov    r9,rcx
   14001720d:	mov    eax,DWORD PTR [rdx-0x10]
   140017210:	cmp    eax,r8d
   140017213:	cmovg  r8d,eax
   140017217:	cmp    DWORD PTR [rdx-0x8],0x1
   14001721b:	jle    0x140017229
   14001721d:	mov    edx,r8d
   140017220:	add    rsp,0x28
   140017224:	jmp    0x140017260
   140017229:	mov    ecx,DWORD PTR [rdx-0xc]
   14001722c:	cmp    ecx,r8d
   14001722f:	jge    0x14001725b
   140017231:	cmp    ecx,0x40000000
   140017237:	jle    0x140017241
   140017239:	add    ecx,0x100000
   14001723f:	jmp    0x14001724a
   140017241:	mov    eax,ecx
   140017243:	cdq    
   140017244:	sub    eax,edx
   140017246:	sar    eax,1
   140017248:	add    ecx,eax
   14001724a:	cmp    ecx,r8d
   14001724d:	cmovl  ecx,r8d
   140017251:	mov    edx,ecx
   140017253:	mov    rcx,r9
   140017256:	call   0x140017310
   14001725b:	add    rsp,0x28
   14001725f:	ret    
   140017260:	mov    QWORD PTR [rsp+0x8],rbx
   140017265:	mov    QWORD PTR [rsp+0x10],rbp
   14001726a:	mov    QWORD PTR [rsp+0x18],rsi
   14001726f:	mov    QWORD PTR [rsp+0x20],rdi
   140017274:	push   r12
   140017276:	sub    rsp,0x20
   14001727a:	mov    rbx,QWORD PTR [rcx]
   14001727d:	mov    rsi,rcx
   140017280:	mov    edi,edx
   140017282:	mov    rcx,QWORD PTR [rbx-0x18]
   140017286:	mov    ebp,DWORD PTR [rbx-0x10]
   140017289:	mov    rax,QWORD PTR [rcx]
   14001728c:	call   QWORD PTR [rax+0x20]
   14001728f:	mov    r8d,0x2
   140017295:	mov    edx,edi
   140017297:	mov    r9,QWORD PTR [rax]
   14001729a:	mov    rcx,rax
   14001729d:	call   QWORD PTR [r9]
   1400172a0:	mov    r12,rax
   1400172a3:	test   rax,rax
   1400172a6:	jne    0x1400172ae
   1400172a8:	call   0x140017170
   1400172ad:	int3   
   1400172ae:	cmp    ebp,edi
   1400172b0:	mov    r8,rbx
   1400172b3:	cmovl  edi,ebp
   1400172b6:	inc    edi
   1400172b8:	movsxd rdx,edi
   1400172bb:	lea    rdi,[rax+0x18]
   1400172bf:	add    rdx,rdx
   1400172c2:	mov    rcx,rdi
   1400172c5:	mov    r9,rdx
   1400172c8:	call   0x140033ccc
   1400172cd:	mov    DWORD PTR [r12+0x8],ebp
   1400172d2:	or     eax,0xffffffff
   1400172d5:	lock xadd DWORD PTR [rbx-0x8],eax
   1400172da:	dec    eax
   1400172dc:	test   eax,eax
   1400172de:	jg     0x1400172ee
   1400172e0:	mov    rcx,QWORD PTR [rbx-0x18]
   1400172e4:	lea    rdx,[rbx-0x18]
   1400172e8:	mov    rax,QWORD PTR [rcx]
   1400172eb:	call   QWORD PTR [rax+0x8]
   1400172ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400172f3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400172f8:	mov    QWORD PTR [rsi],rdi
   1400172fb:	mov    rsi,QWORD PTR [rsp+0x40]
   140017300:	mov    rdi,QWORD PTR [rsp+0x48]
   140017305:	add    rsp,0x20
   140017309:	pop    r12
   14001730b:	ret    
   14001730c:	int3   
   14001730d:	int3   
   14001730e:	int3   
   14001730f:	int3   
   140017310:	rex push rbx
   140017312:	sub    rsp,0x20
   140017316:	mov    r8d,edx
   140017319:	mov    rdx,QWORD PTR [rcx]
   14001731c:	mov    rbx,rcx
   14001731f:	mov    rcx,QWORD PTR [rdx-0x18]
   140017323:	sub    rdx,0x18
   140017327:	cmp    DWORD PTR [rdx+0xc],r8d
   14001732b:	jge    0x140017356
   14001732d:	test   r8d,r8d
   140017330:	jle    0x140017356
   140017332:	mov    rax,QWORD PTR [rcx]
   140017335:	mov    r9d,0x2
   14001733b:	call   QWORD PTR [rax+0x10]
   14001733e:	test   rax,rax
   140017341:	jne    0x140017349
   140017343:	call   0x140017170
   140017348:	int3   
   140017349:	add    rax,0x18
   14001734d:	mov    QWORD PTR [rbx],rax
   140017350:	add    rsp,0x20
   140017354:	pop    rbx
   140017355:	ret    
   140017356:	call   0x140017170
   14001735b:	int3   
   14001735c:	int3   
   14001735d:	int3   
   14001735e:	int3   
   14001735f:	int3   
   140017360:	mov    QWORD PTR [rsp+0x8],rbx
   140017365:	mov    QWORD PTR [rsp+0x10],rsi
   14001736a:	push   rdi
   14001736b:	sub    rsp,0x20
   14001736f:	xor    eax,eax
   140017371:	test   r8d,r8d
   140017374:	mov    rsi,rcx
   140017377:	mov    rcx,QWORD PTR [rcx]
   14001737a:	mov    edi,r8d
   14001737d:	mov    rbx,rdx
   140017380:	cmovs  edi,eax
   140017383:	mov    DWORD PTR [rsp+0x40],eax
   140017387:	cmp    edi,DWORD PTR [rcx-0x10]
   14001738a:	jl     0x1400173af
   14001738c:	add    rcx,0xffffffffffffffe8
   140017390:	call   0x140008e50
   140017395:	add    rax,0x18
   140017399:	mov    QWORD PTR [rbx],rax
   14001739c:	mov    rax,rbx
   14001739f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400173a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400173a9:	add    rsp,0x20
   1400173ad:	pop    rdi
   1400173ae:	ret    
   1400173af:	mov    rcx,QWORD PTR [rcx-0x18]
   1400173b3:	test   rcx,rcx
   1400173b6:	je     0x1400173c3
   1400173b8:	mov    rax,QWORD PTR [rcx]
   1400173bb:	call   QWORD PTR [rax+0x20]
   1400173be:	test   rax,rax
   1400173c1:	jne    0x1400173d4
   1400173c3:	mov    rax,QWORD PTR [rip+0x6f38e]        # 0x140086758
   1400173ca:	lea    rcx,[rip+0x6f387]        # 0x140086758
   1400173d1:	call   QWORD PTR [rax+0x20]
   1400173d4:	mov    rdx,QWORD PTR [rsi]
   1400173d7:	mov    r9,rax
   1400173da:	mov    r8d,edi
   1400173dd:	mov    rcx,rbx
   1400173e0:	call   0x14000d620
   1400173e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400173ea:	mov    rax,rbx
   1400173ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400173f2:	add    rsp,0x20
   1400173f6:	pop    rdi
   1400173f7:	ret    
   1400173f8:	int3   
   1400173f9:	int3   
   1400173fa:	int3   
   1400173fb:	int3   
   1400173fc:	int3   
   1400173fd:	int3   
   1400173fe:	int3   
   1400173ff:	int3   
   140017400:	rex push rdi
   140017402:	sub    rsp,0x470
   140017409:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140017412:	mov    QWORD PTR [rsp+0x490],rbx
   14001741a:	mov    rax,QWORD PTR [rip+0x6dc87]        # 0x1400850a8
   140017421:	xor    rax,rsp
   140017424:	mov    QWORD PTR [rsp+0x460],rax
   14001742c:	mov    edi,edx
   14001742e:	mov    rbx,rcx
   140017431:	mov    QWORD PTR [rsp+0x58],rcx
   140017436:	xor    eax,eax
   140017438:	mov    DWORD PTR [rsp+0x48],eax
   14001743c:	mov    QWORD PTR [rcx+0x18],0xf
   140017444:	mov    QWORD PTR [rcx+0x10],rax
   140017448:	mov    BYTE PTR [rcx],al
   14001744a:	mov    DWORD PTR [rsp+0x48],0x1
   140017452:	test   edx,edx
   140017454:	jns    0x1400174ec
   14001745a:	mov    QWORD PTR [rsp+0x40],rax
   14001745f:	mov    QWORD PTR [rsp+0x30],rax
   140017464:	mov    DWORD PTR [rsp+0x28],eax
   140017468:	lea    rax,[rsp+0x40]
   14001746d:	mov    QWORD PTR [rsp+0x20],rax
   140017472:	mov    r9d,0x400
   140017478:	mov    r8d,edx
   14001747b:	xor    edx,edx
   14001747d:	mov    ecx,0x1100
   140017482:	call   QWORD PTR [rip+0x50c68]        # 0x1400680f0
   140017488:	cmp    QWORD PTR [rsp+0x40],0x0
   14001748e:	je     0x1400174ec
   140017490:	mov    BYTE PTR [rsp+0x60],0x0
   140017495:	xor    edx,edx
   140017497:	mov    r8d,0x3ff
   14001749d:	lea    rcx,[rsp+0x61]
   1400174a2:	call   0x140036dc0
   1400174a7:	mov    r9,QWORD PTR [rsp+0x40]
   1400174ac:	mov    r8d,edi
   1400174af:	lea    rdx,[rip+0x56662]        # 0x14006db18
   1400174b6:	lea    rcx,[rsp+0x60]
   1400174bb:	call   0x140018320
   1400174c0:	xor    eax,eax
   1400174c2:	or     rcx,0xffffffffffffffff
   1400174c6:	lea    rdi,[rsp+0x60]
   1400174cb:	repnz scas al,BYTE PTR es:[rdi]
   1400174cd:	not    rcx
   1400174d0:	lea    r8,[rcx-0x1]
   1400174d4:	lea    rdx,[rsp+0x60]
   1400174d9:	mov    rcx,rbx
   1400174dc:	call   0x140002ba0
   1400174e1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400174e6:	call   QWORD PTR [rip+0x50c0c]        # 0x1400680f8
   1400174ec:	mov    rax,rbx
   1400174ef:	mov    rcx,QWORD PTR [rsp+0x460]
   1400174f7:	xor    rcx,rsp
   1400174fa:	call   0x140032f00
   1400174ff:	mov    rbx,QWORD PTR [rsp+0x490]
   140017507:	add    rsp,0x470
   14001750e:	pop    rdi
   14001750f:	ret    
   140017510:	int3   
   140017511:	int3   
   140017512:	int3   
   140017513:	int3   
   140017514:	int3   
   140017515:	int3   
   140017516:	int3   
   140017517:	int3   
   140017518:	int3   
   140017519:	int3   
   14001751a:	int3   
   14001751b:	int3   
   14001751c:	int3   
   14001751d:	int3   
   14001751e:	int3   
   14001751f:	int3   
   140017520:	mov    QWORD PTR [rsp+0x8],rcx
   140017525:	push   rdi
   140017526:	sub    rsp,0x30
   14001752a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017533:	mov    QWORD PTR [rsp+0x48],rbx
   140017538:	mov    ebx,edx
   14001753a:	mov    rdi,rcx
   14001753d:	lea    rax,[rip+0x569f4]        # 0x14006df38
   140017544:	mov    QWORD PTR [rcx],rax
   140017547:	lea    rax,[rip+0x56a2a]        # 0x14006df78
   14001754e:	mov    QWORD PTR [rcx+0x20],rax
   140017552:	mov    edx,0x1
   140017557:	call   0x140017590
   14001755c:	nop
   14001755d:	lea    rax,[rip+0x54b34]        # 0x14006c098
   140017564:	mov    QWORD PTR [rdi],rax
   140017567:	mov    edx,0x3e8
   14001756c:	mov    rcx,rdi
   14001756f:	call   0x14000c640
   140017574:	test   bl,0x1
   140017577:	je     0x140017581
   140017579:	mov    rcx,rdi
   14001757c:	call   0x1400330c0
   140017581:	mov    rax,rdi
   140017584:	mov    rbx,QWORD PTR [rsp+0x48]
   140017589:	add    rsp,0x30
   14001758d:	pop    rdi
   14001758e:	ret    
   14001758f:	int3   
   140017590:	mov    QWORD PTR [rsp+0x18],rbx
   140017595:	push   rsi
   140017596:	sub    rsp,0x60
   14001759a:	mov    rax,QWORD PTR [rip+0x6db07]        # 0x1400850a8
   1400175a1:	xor    rax,rsp
   1400175a4:	mov    QWORD PTR [rsp+0x58],rax
   1400175a9:	mov    rbx,rcx
   1400175ac:	test   edx,edx
   1400175ae:	je     0x1400175ba
   1400175b0:	mov    edx,0x3e8
   1400175b5:	call   0x14000c640
   1400175ba:	cmp    DWORD PTR [rbx+0x28],0x0
   1400175be:	je     0x14001765c
   1400175c4:	cmp    QWORD PTR [rbx+0x58],0x0
   1400175c9:	je     0x14001765c
   1400175cf:	xor    r9d,r9d
   1400175d2:	lea    rax,[rip+0x5656f]        # 0x14006db48
   1400175d9:	lea    rcx,[rip+0x56590]        # 0x14006db70
   1400175e0:	mov    QWORD PTR [rsp+0x28],rax
   1400175e5:	lea    rax,[rip+0x53eb4]        # 0x14006b4a0
   1400175ec:	lea    edx,[r9+0x62]
   1400175f0:	lea    r8d,[r9+0x3]
   1400175f4:	mov    QWORD PTR [rsp+0x20],rax
   1400175f9:	call   0x140003150
   1400175fe:	mov    rcx,QWORD PTR [rbx+0x58]
   140017602:	mov    rax,QWORD PTR [rcx]
   140017605:	call   QWORD PTR [rax+0x58]
   140017608:	test   eax,eax
   14001760a:	jns    0x14001765c
   14001760c:	lea    rcx,[rsp+0x30]
   140017611:	mov    edx,eax
   140017613:	call   0x140017400
   140017618:	cmp    QWORD PTR [rax+0x18],0x10
   14001761d:	jb     0x140017622
   14001761f:	mov    rax,QWORD PTR [rax]
   140017622:	xor    r9d,r9d
   140017625:	mov    QWORD PTR [rsp+0x28],rax
   14001762a:	lea    rax,[rip+0x5658f]        # 0x14006dbc0
   140017631:	lea    edx,[r9+0x64]
   140017635:	lea    r8d,[r9+0x1]
   140017639:	lea    rcx,[rip+0x56530]        # 0x14006db70
   140017640:	mov    QWORD PTR [rsp+0x20],rax
   140017645:	call   0x140003150
   14001764a:	cmp    QWORD PTR [rsp+0x48],0x10
   140017650:	jb     0x14001765c
   140017652:	mov    rcx,QWORD PTR [rsp+0x30]
   140017657:	call   0x1400330c0
   14001765c:	xor    esi,esi
   14001765e:	cmp    DWORD PTR [rbx+0x70],esi
   140017661:	je     0x140017692
   140017663:	mov    rcx,QWORD PTR [rbx+0x68]
   140017667:	test   rcx,rcx
   14001766a:	je     0x140017692
   14001766c:	mov    rax,QWORD PTR [rcx]
   14001766f:	lea    rdx,[rbx+0x20]
   140017673:	mov    QWORD PTR [rsp+0x78],rdi
   140017678:	call   QWORD PTR [rax+0x38]
   14001767b:	test   eax,eax
   14001767d:	js     0x14001768d
   14001767f:	mov    rax,QWORD PTR [rbx+0x20]
   140017683:	lea    rcx,[rbx+0x20]
   140017687:	call   QWORD PTR [rax+0x10]
   14001768a:	mov    DWORD PTR [rbx+0x70],esi
   14001768d:	mov    rdi,QWORD PTR [rsp+0x78]
   140017692:	mov    rcx,QWORD PTR [rbx+0x38]
   140017696:	test   rcx,rcx
   140017699:	je     0x1400176a5
   14001769b:	call   QWORD PTR [rip+0x50ff7]        # 0x140068698
   1400176a1:	mov    QWORD PTR [rbx+0x38],rsi
   1400176a5:	mov    rcx,QWORD PTR [rbx+0x280]
   1400176ac:	test   rcx,rcx
   1400176af:	je     0x1400176be
   1400176b1:	mov    rax,QWORD PTR [rcx]
   1400176b4:	call   QWORD PTR [rax+0x10]
   1400176b7:	mov    QWORD PTR [rbx+0x280],rsi
   1400176be:	mov    rcx,QWORD PTR [rbx+0x68]
   1400176c2:	test   rcx,rcx
   1400176c5:	je     0x1400176d1
   1400176c7:	mov    rax,QWORD PTR [rcx]
   1400176ca:	call   QWORD PTR [rax+0x10]
   1400176cd:	mov    QWORD PTR [rbx+0x68],rsi
   1400176d1:	mov    rcx,QWORD PTR [rbx+0x30]
   1400176d5:	test   rcx,rcx
   1400176d8:	je     0x1400176e4
   1400176da:	mov    rax,QWORD PTR [rcx]
   1400176dd:	call   QWORD PTR [rax+0x10]
   1400176e0:	mov    QWORD PTR [rbx+0x30],rsi
   1400176e4:	mov    rcx,QWORD PTR [rbx+0x58]
   1400176e8:	test   rcx,rcx
   1400176eb:	je     0x1400176f7
   1400176ed:	mov    rax,QWORD PTR [rcx]
   1400176f0:	call   QWORD PTR [rax+0x10]
   1400176f3:	mov    QWORD PTR [rbx+0x58],rsi
   1400176f7:	mov    rcx,QWORD PTR [rbx+0x60]
   1400176fb:	test   rcx,rcx
   1400176fe:	je     0x14001770a
   140017700:	mov    rax,QWORD PTR [rcx]
   140017703:	call   QWORD PTR [rax+0x10]
   140017706:	mov    QWORD PTR [rbx+0x60],rsi
   14001770a:	mov    DWORD PTR [rbx+0x28],esi
   14001770d:	mov    rcx,QWORD PTR [rsp+0x58]
   140017712:	xor    rcx,rsp
   140017715:	call   0x140032f00
   14001771a:	mov    rbx,QWORD PTR [rsp+0x80]
   140017722:	add    rsp,0x60
   140017726:	pop    rsi
   140017727:	ret    
   140017728:	int3   
   140017729:	int3   
   14001772a:	int3   
   14001772b:	int3   
   14001772c:	int3   
   14001772d:	int3   
   14001772e:	int3   
   14001772f:	int3   
   140017730:	mov    QWORD PTR [rsp+0x10],rbx
   140017735:	mov    QWORD PTR [rsp+0x20],rsi
   14001773a:	push   rbp
   14001773b:	push   rdi
   14001773c:	push   r12
   14001773e:	push   r13
   140017740:	push   r14
   140017742:	mov    rbp,rsp
   140017745:	sub    rsp,0x80
   14001774c:	mov    rax,QWORD PTR [rip+0x6d955]        # 0x1400850a8
   140017753:	xor    rax,rsp
   140017756:	mov    QWORD PTR [rbp-0x10],rax
   14001775a:	xor    r14d,r14d
   14001775d:	mov    rdi,rcx
   140017760:	mov    esi,0x1
   140017765:	mov    ecx,edx
   140017767:	mov    r13d,r14d
   14001776a:	test   edx,edx
   14001776c:	je     0x14001777b
   14001776e:	dec    ecx
   140017770:	jne    0x14001777b
   140017772:	mov    esi,r14d
   140017775:	mov    r13d,0x20000
   14001777b:	mov    DWORD PTR [rdi+0x28c],edx
   140017781:	mov    DWORD PTR [rdi+0x290],r9d
   140017788:	test   r8,r8
   14001778b:	je     0x14001779b
   14001778d:	lea    rcx,[rdi+0x74]
   140017791:	mov    edx,0x104
   140017796:	call   0x140034290
   14001779b:	xor    edx,edx
   14001779d:	lea    r12,[rdi+0x68]
   1400177a1:	lea    r9,[rip+0x70758]        # 0x140087f00
   1400177a8:	lea    r8d,[rdx+0x17]
   1400177ac:	lea    rcx,[rip+0x7075d]        # 0x140087f10
   1400177b3:	mov    QWORD PTR [rsp+0x20],r12
   1400177b8:	call   QWORD PTR [rip+0x50eba]        # 0x140068678
   1400177be:	mov    ebx,eax
   1400177c0:	test   eax,eax
   1400177c2:	jns    0x140017814
   1400177c4:	lea    rcx,[rbp-0x38]
   1400177c8:	mov    edx,eax
   1400177ca:	call   0x140017400
   1400177cf:	cmp    QWORD PTR [rax+0x18],0x10
   1400177d4:	jb     0x1400177d9
   1400177d6:	mov    rax,QWORD PTR [rax]
   1400177d9:	mov    QWORD PTR [rsp+0x28],rax
   1400177de:	xor    r9d,r9d
   1400177e1:	lea    rax,[rip+0x56400]        # 0x14006dbe8
   1400177e8:	lea    rcx,[rip+0x56381]        # 0x14006db70
   1400177ef:	lea    r8d,[r9+0x1]
   1400177f3:	mov    edx,0x9d
   1400177f8:	mov    QWORD PTR [rsp+0x20],rax
   1400177fd:	call   0x140003150
   140017802:	cmp    QWORD PTR [rbp-0x20],0x10
   140017807:	jb     0x140017870
   140017809:	mov    rcx,QWORD PTR [rbp-0x38]
   14001780d:	call   0x1400330c0
   140017812:	jmp    0x140017870
   140017814:	cmp    DWORD PTR [rdi+0x290],r14d
   14001781b:	je     0x140017841
   14001781d:	mov    rcx,QWORD PTR [r12]
   140017821:	lea    rdx,[rdi+0x20]
   140017825:	mov    rax,QWORD PTR [rcx]
   140017828:	call   QWORD PTR [rax+0x30]
   14001782b:	test   eax,eax
   14001782d:	js     0x140017841
   14001782f:	mov    rax,QWORD PTR [rdi+0x20]
   140017833:	lea    rcx,[rdi+0x20]
   140017837:	call   QWORD PTR [rax+0x8]
   14001783a:	mov    DWORD PTR [rdi+0x70],0x1
   140017841:	mov    rcx,QWORD PTR [r12]
   140017845:	lea    rdx,[rdi+0x74]
   140017849:	mov    rax,QWORD PTR [rcx]
   14001784c:	cmp    r14w,WORD PTR [rdx]
   140017850:	je     0x14001785b
   140017852:	lea    r8,[rdi+0x30]
   140017856:	call   QWORD PTR [rax+0x28]
   140017859:	jmp    0x14001786a
   14001785b:	lea    r9,[rdi+0x30]
   14001785f:	mov    r8d,0x1
   140017865:	mov    edx,esi
   140017867:	call   QWORD PTR [rax+0x20]
   14001786a:	mov    ebx,eax
   14001786c:	test   eax,eax
   14001786e:	jns    0x1400178be
   140017870:	lea    rcx,[rbp-0x38]
   140017874:	mov    edx,ebx
   140017876:	call   0x140017400
   14001787b:	cmp    QWORD PTR [rax+0x18],0x10
   140017880:	jb     0x140017885
   140017882:	mov    rax,QWORD PTR [rax]
   140017885:	mov    QWORD PTR [rsp+0x28],rax
   14001788a:	xor    r9d,r9d
   14001788d:	lea    rax,[rip+0x5638c]        # 0x14006dc20
   140017894:	lea    rcx,[rip+0x562d5]        # 0x14006db70
   14001789b:	lea    r8d,[r9+0x1]
   14001789f:	mov    edx,0xb7
   1400178a4:	mov    QWORD PTR [rsp+0x20],rax
   1400178a9:	call   0x140003150
   1400178ae:	cmp    QWORD PTR [rbp-0x20],0x10
   1400178b3:	jb     0x1400178be
   1400178b5:	mov    rcx,QWORD PTR [rbp-0x38]
   1400178b9:	call   0x1400330c0
   1400178be:	mov    rcx,QWORD PTR [rdi+0x30]
   1400178c2:	test   rcx,rcx
   1400178c5:	je     0x140017918
   1400178c7:	mov    QWORD PTR [rbp-0x40],r14
   1400178cb:	cmp    r14w,WORD PTR [rdi+0x74]
   1400178d0:	jne    0x140017905
   1400178d2:	mov    rax,QWORD PTR [rcx]
   1400178d5:	lea    rdx,[rbp-0x40]
   1400178d9:	call   QWORD PTR [rax+0x28]
   1400178dc:	test   eax,eax
   1400178de:	js     0x140017905
   1400178e0:	mov    r8,QWORD PTR [rbp-0x40]
   1400178e4:	test   r8,r8
   1400178e7:	je     0x140017905
   1400178e9:	lea    rcx,[rdi+0x74]
   1400178ed:	mov    edx,0x104
   1400178f2:	call   0x140034290
   1400178f7:	mov    rcx,QWORD PTR [rbp-0x40]
   1400178fb:	call   QWORD PTR [rip+0x50d97]        # 0x140068698
   140017901:	mov    QWORD PTR [rbp-0x40],r14
   140017905:	mov    rcx,QWORD PTR [rdi+0x30]
   140017909:	lea    r8,[rdi+0x280]
   140017910:	xor    edx,edx
   140017912:	mov    rax,QWORD PTR [rcx]
   140017915:	call   QWORD PTR [rax+0x20]
   140017918:	test   ebx,ebx
   14001791a:	js     0x140017944
   14001791c:	mov    rcx,QWORD PTR [rdi+0x30]
   140017920:	xor    r9d,r9d
   140017923:	lea    rax,[rdi+0x58]
   140017927:	mov    r10,QWORD PTR [rcx]
   14001792a:	lea    r8d,[r9+0x17]
   14001792e:	lea    rdx,[rip+0x705ab]        # 0x140087ee0
   140017935:	mov    QWORD PTR [rsp+0x20],rax
   14001793a:	call   QWORD PTR [r10+0x18]
   14001793e:	mov    ebx,eax
   140017940:	test   eax,eax
   140017942:	jns    0x140017996
   140017944:	lea    rcx,[rbp-0x38]
   140017948:	mov    edx,ebx
   14001794a:	call   0x140017400
   14001794f:	cmp    QWORD PTR [rax+0x18],0x10
   140017954:	jb     0x140017959
   140017956:	mov    rax,QWORD PTR [rax]
   140017959:	mov    QWORD PTR [rsp+0x28],rax
   14001795e:	xor    r9d,r9d
   140017961:	lea    rax,[rip+0x562e8]        # 0x14006dc50
   140017968:	lea    rcx,[rip+0x56201]        # 0x14006db70
   14001796f:	lea    r8d,[r9+0x1]
   140017973:	mov    edx,0xce
   140017978:	mov    QWORD PTR [rsp+0x20],rax
   14001797d:	call   0x140003150
   140017982:	cmp    QWORD PTR [rbp-0x20],0x10
   140017987:	jb     0x140017992
   140017989:	mov    rcx,QWORD PTR [rbp-0x38]
   14001798d:	call   0x1400330c0
   140017992:	test   ebx,ebx
   140017994:	js     0x1400179aa
   140017996:	mov    rcx,QWORD PTR [rdi+0x58]
   14001799a:	lea    rdx,[rdi+0x38]
   14001799e:	mov    rax,QWORD PTR [rcx]
   1400179a1:	call   QWORD PTR [rax+0x40]
   1400179a4:	mov    ebx,eax
   1400179a6:	test   eax,eax
   1400179a8:	jns    0x1400179fc
   1400179aa:	lea    rcx,[rbp-0x38]
   1400179ae:	mov    edx,ebx
   1400179b0:	call   0x140017400
   1400179b5:	cmp    QWORD PTR [rax+0x18],0x10
   1400179ba:	jb     0x1400179bf
   1400179bc:	mov    rax,QWORD PTR [rax]
   1400179bf:	mov    QWORD PTR [rsp+0x28],rax
   1400179c4:	xor    r9d,r9d
   1400179c7:	lea    rax,[rip+0x562aa]        # 0x14006dc78
   1400179ce:	lea    rcx,[rip+0x5619b]        # 0x14006db70
   1400179d5:	lea    r8d,[r9+0x1]
   1400179d9:	mov    edx,0xd5
   1400179de:	mov    QWORD PTR [rsp+0x20],rax
   1400179e3:	call   0x140003150
   1400179e8:	cmp    QWORD PTR [rbp-0x20],0x10
   1400179ed:	jb     0x1400179f8
   1400179ef:	mov    rcx,QWORD PTR [rbp-0x38]
   1400179f3:	call   0x1400330c0
   1400179f8:	test   ebx,ebx
   1400179fa:	js     0x140017a48
   1400179fc:	mov    rdx,QWORD PTR [rdi+0x38]
   140017a00:	mov    rcx,QWORD PTR [rdi+0x58]
   140017a04:	lea    r8,[rip+0x54f85]        # 0x14006c990
   140017a0b:	mov    rax,QWORD PTR [rdx]
   140017a0e:	mov    QWORD PTR [rsp+0x30],r8
   140017a13:	mov    QWORD PTR [rsp+0x28],rdx
   140017a18:	mov    QWORD PTR [rdi+0x40],rax
   140017a1c:	mov    rax,QWORD PTR [rdx+0x8]
   140017a20:	mov    r9d,0x989680
   140017a26:	mov    QWORD PTR [rdi+0x48],rax
   140017a2a:	movzx  eax,WORD PTR [rdx+0x10]
   140017a2e:	mov    r8d,r13d
   140017a31:	mov    WORD PTR [rdi+0x50],ax
   140017a35:	mov    rax,QWORD PTR [rcx]
   140017a38:	xor    edx,edx
   140017a3a:	mov    QWORD PTR [rsp+0x20],r14
   140017a3f:	call   QWORD PTR [rax+0x18]
   140017a42:	mov    ebx,eax
   140017a44:	test   eax,eax
   140017a46:	jns    0x140017a9a
   140017a48:	lea    rcx,[rbp-0x38]
   140017a4c:	mov    edx,ebx
   140017a4e:	call   0x140017400
   140017a53:	cmp    QWORD PTR [rax+0x18],0x10
   140017a58:	jb     0x140017a5d
   140017a5a:	mov    rax,QWORD PTR [rax]
   140017a5d:	mov    QWORD PTR [rsp+0x28],rax
   140017a62:	xor    r9d,r9d
   140017a65:	lea    rax,[rip+0x56234]        # 0x14006dca0
   140017a6c:	lea    rcx,[rip+0x560fd]        # 0x14006db70
   140017a73:	lea    r8d,[r9+0x1]
   140017a77:	mov    edx,0xe5
   140017a7c:	mov    QWORD PTR [rsp+0x20],rax
   140017a81:	call   0x140003150
   140017a86:	cmp    QWORD PTR [rbp-0x20],0x10
   140017a8b:	jb     0x140017a96
   140017a8d:	mov    rcx,QWORD PTR [rbp-0x38]
   140017a91:	call   0x1400330c0
   140017a96:	test   ebx,ebx
   140017a98:	js     0x140017ab5
   140017a9a:	mov    rcx,QWORD PTR [rdi+0x58]
   140017a9e:	lea    r8,[rdi+0x60]
   140017aa2:	lea    rdx,[rip+0x70447]        # 0x140087ef0
   140017aa9:	mov    rax,QWORD PTR [rcx]
   140017aac:	call   QWORD PTR [rax+0x70]
   140017aaf:	mov    ebx,eax
   140017ab1:	test   eax,eax
   140017ab3:	jns    0x140017b07
   140017ab5:	lea    rcx,[rbp-0x38]
   140017ab9:	mov    edx,ebx
   140017abb:	call   0x140017400
   140017ac0:	cmp    QWORD PTR [rax+0x18],0x10
   140017ac5:	jb     0x140017aca
   140017ac7:	mov    rax,QWORD PTR [rax]
   140017aca:	mov    QWORD PTR [rsp+0x28],rax
   140017acf:	xor    r9d,r9d
   140017ad2:	lea    rax,[rip+0x561f7]        # 0x14006dcd0
   140017ad9:	lea    rcx,[rip+0x56090]        # 0x14006db70
   140017ae0:	lea    r8d,[r9+0x1]
   140017ae4:	mov    edx,0xec
   140017ae9:	mov    QWORD PTR [rsp+0x20],rax
   140017aee:	call   0x140003150
   140017af3:	cmp    QWORD PTR [rbp-0x20],0x10
   140017af8:	jb     0x140017b03
   140017afa:	mov    rcx,QWORD PTR [rbp-0x38]
   140017afe:	call   0x1400330c0
   140017b03:	test   ebx,ebx
   140017b05:	js     0x140017b47
   140017b07:	lea    rax,[rip+0x561f2]        # 0x14006dd00
   140017b0e:	xor    r9d,r9d
   140017b11:	lea    rcx,[rip+0x56058]        # 0x14006db70
   140017b18:	mov    QWORD PTR [rsp+0x28],rax
   140017b1d:	lea    rax,[rip+0x5397c]        # 0x14006b4a0
   140017b24:	lea    r8d,[r9+0x3]
   140017b28:	mov    edx,0xf0
   140017b2d:	mov    QWORD PTR [rsp+0x20],rax
   140017b32:	call   0x140003150
   140017b37:	mov    rcx,QWORD PTR [rdi+0x58]
   140017b3b:	mov    rax,QWORD PTR [rcx]
   140017b3e:	call   QWORD PTR [rax+0x50]
   140017b41:	mov    ebx,eax
   140017b43:	test   eax,eax
   140017b45:	jns    0x140017b99
   140017b47:	lea    rcx,[rbp-0x38]
   140017b4b:	mov    edx,ebx
   140017b4d:	call   0x140017400
   140017b52:	cmp    QWORD PTR [rax+0x18],0x10
   140017b57:	jb     0x140017b5c
   140017b59:	mov    rax,QWORD PTR [rax]
   140017b5c:	mov    QWORD PTR [rsp+0x28],rax
   140017b61:	xor    r9d,r9d
   140017b64:	lea    rax,[rip+0x561b5]        # 0x14006dd20
   140017b6b:	lea    rcx,[rip+0x55ffe]        # 0x14006db70
   140017b72:	lea    r8d,[r9+0x1]
   140017b76:	mov    edx,0xf4
   140017b7b:	mov    QWORD PTR [rsp+0x20],rax
   140017b80:	call   0x140003150
   140017b85:	cmp    QWORD PTR [rbp-0x20],0x10
   140017b8a:	jb     0x140017b95
   140017b8c:	mov    rcx,QWORD PTR [rbp-0x38]
   140017b90:	call   0x1400330c0
   140017b95:	test   ebx,ebx
   140017b97:	js     0x140017ba0
   140017b99:	mov    DWORD PTR [rdi+0x28],0x1
   140017ba0:	mov    eax,ebx
   140017ba2:	mov    rcx,QWORD PTR [rbp-0x10]
   140017ba6:	xor    rcx,rsp
   140017ba9:	call   0x140032f00
   140017bae:	lea    r11,[rsp+0x80]
   140017bb6:	mov    rbx,QWORD PTR [r11+0x38]
   140017bba:	mov    rsi,QWORD PTR [r11+0x48]
   140017bbe:	mov    rsp,r11
   140017bc1:	pop    r14
   140017bc3:	pop    r13
   140017bc5:	pop    r12
   140017bc7:	pop    rdi
   140017bc8:	pop    rbp
   140017bc9:	ret    
   140017bca:	int3   
   140017bcb:	int3   
   140017bcc:	int3   
   140017bcd:	int3   
   140017bce:	int3   
   140017bcf:	int3   
   140017bd0:	rex push rbx
   140017bd2:	sub    rsp,0x20
   140017bd6:	cmp    QWORD PTR [rcx+0x58],0x0
   140017bdb:	mov    rbx,rcx
   140017bde:	je     0x140017c39
   140017be0:	cmp    QWORD PTR [rcx+0x38],0x0
   140017be5:	je     0x140017c39
   140017be7:	mov    rcx,QWORD PTR [rcx+0x58]
   140017beb:	mov    DWORD PTR [rsp+0x30],0x0
   140017bf3:	lea    rdx,[rsp+0x30]
   140017bf8:	mov    rax,QWORD PTR [rcx]
   140017bfb:	call   QWORD PTR [rax+0x20]
   140017bfe:	test   eax,eax
   140017c00:	js     0x140017c39
   140017c02:	mov    rcx,QWORD PTR [rbx+0x38]
   140017c06:	mov    eax,DWORD PTR [rsp+0x30]
   140017c0a:	mov    r8d,DWORD PTR [rcx+0x4]
   140017c0e:	imul   rax,rax,0x989680
   140017c15:	cqo    
   140017c17:	idiv   r8
   140017c1a:	mov    rcx,rax
   140017c1d:	mov    eax,0xd1b71759
   140017c22:	mul    ecx
   140017c24:	mov    eax,0x10624dd3
   140017c29:	shr    edx,0xd
   140017c2c:	mul    edx
   140017c2e:	shr    edx,0x6
   140017c31:	mov    eax,edx
   140017c33:	add    rsp,0x20
   140017c37:	pop    rbx
   140017c38:	ret    
   140017c39:	mov    eax,0x1
   140017c3e:	add    rsp,0x20
   140017c42:	pop    rbx
   140017c43:	ret    
   140017c44:	int3   
   140017c45:	int3   
   140017c46:	int3   
   140017c47:	int3   
   140017c48:	int3   
   140017c49:	int3   
   140017c4a:	int3   
   140017c4b:	int3   
   140017c4c:	int3   
   140017c4d:	int3   
   140017c4e:	int3   
   140017c4f:	int3   
   140017c50:	mov    r11,rsp
   140017c53:	push   rbp
   140017c54:	push   rsi
   140017c55:	lea    rbp,[r11-0x5f]
   140017c59:	sub    rsp,0xa8
   140017c60:	mov    rax,QWORD PTR [rip+0x6d441]        # 0x1400850a8
   140017c67:	xor    rax,rsp
   140017c6a:	mov    QWORD PTR [rbp+0x27],rax
   140017c6e:	mov    QWORD PTR [r11+0x10],rbx
   140017c72:	mov    QWORD PTR [r11+0x18],rdi
   140017c76:	mov    rbx,rcx
   140017c79:	mov    QWORD PTR [r11+0x20],r12
   140017c7d:	xor    ecx,ecx
   140017c7f:	mov    QWORD PTR [r11-0x18],r13
   140017c83:	call   QWORD PTR [rip+0x50a07]        # 0x140068690
   140017c89:	xor    r12d,r12d
   140017c8c:	mov    QWORD PTR [rbp-0x19],r12
   140017c90:	mov    DWORD PTR [rbp-0x1d],r12d
   140017c94:	mov    DWORD PTR [rbp-0x29],r12d
   140017c98:	mov    DWORD PTR [rbp-0x25],r12d
   140017c9c:	call   QWORD PTR [rip+0x5048e]        # 0x140068130
   140017ca2:	mov    rcx,rax
   140017ca5:	call   QWORD PTR [rip+0x5048d]        # 0x140068138
   140017cab:	lea    r8d,[r12+0x3]
   140017cb0:	lea    rcx,[rip+0x55eb9]        # 0x14006db70
   140017cb7:	mov    DWORD PTR [rsp+0x28],eax
   140017cbb:	lea    rax,[rip+0x56086]        # 0x14006dd48
   140017cc2:	xor    r9d,r9d
   140017cc5:	mov    edx,0x11c
   140017cca:	mov    QWORD PTR [rsp+0x20],rax
   140017ccf:	call   0x140003150
   140017cd4:	lea    rax,[rip+0x560ad]        # 0x14006dd88
   140017cdb:	lea    r13,[rip+0x537be]        # 0x14006b4a0
   140017ce2:	mov    QWORD PTR [rsp+0x28],rax
   140017ce7:	lea    r8d,[r12+0x3]
   140017cec:	lea    rcx,[rip+0x55e7d]        # 0x14006db70
   140017cf3:	xor    r9d,r9d
   140017cf6:	mov    edx,0x11f
   140017cfb:	mov    QWORD PTR [rsp+0x20],r13
   140017d00:	mov    DWORD PTR [rbp-0x11],r12d
   140017d04:	call   0x140003150
   140017d09:	lea    rdx,[rbp-0x11]
   140017d0d:	lea    rcx,[rip+0x56094]        # 0x14006dda8
   140017d14:	call   QWORD PTR [rip+0x50356]        # 0x140068070
   140017d1a:	mov    rsi,rax
   140017d1d:	mov    QWORD PTR [rbp-0x9],rax
   140017d21:	test   rax,rax
   140017d24:	jne    0x140017d55
   140017d26:	call   QWORD PTR [rip+0x50694]        # 0x1400683c0
   140017d2c:	lea    r8d,[r12+0x3]
   140017d31:	lea    rcx,[rip+0x55e38]        # 0x14006db70
   140017d38:	mov    DWORD PTR [rsp+0x28],eax
   140017d3c:	lea    rax,[rip+0x56075]        # 0x14006ddb8
   140017d43:	xor    r9d,r9d
   140017d46:	mov    edx,0x123
   140017d4b:	mov    QWORD PTR [rsp+0x20],rax
   140017d50:	call   0x140003150
   140017d55:	call   QWORD PTR [rip+0x503d5]        # 0x140068130
   140017d5b:	mov    rcx,rax
   140017d5e:	call   QWORD PTR [rip+0x503d4]        # 0x140068138
   140017d64:	xor    r9d,r9d
   140017d67:	lea    rcx,[rip+0x55e02]        # 0x14006db70
   140017d6e:	mov    DWORD PTR [rsp+0x28],eax
   140017d72:	lea    rax,[rip+0x56077]        # 0x14006ddf0
   140017d79:	lea    r8d,[r9+0x3]
   140017d7d:	mov    edx,0x127
   140017d82:	mov    QWORD PTR [rsp+0x20],rax
   140017d87:	call   0x140003150
   140017d8c:	mov    rcx,rbx
   140017d8f:	call   0x140017bd0
   140017d94:	mov    edi,eax
   140017d96:	cmp    DWORD PTR [rbx+0x28],r12d
   140017d9a:	je     0x14001802c
   140017da0:	cmp    BYTE PTR [rbx+0x1c],r12b
   140017da4:	jne    0x14001802c
   140017daa:	mov    QWORD PTR [rsp+0x98],r14
   140017db2:	mov    QWORD PTR [rsp+0x90],r15
   140017dba:	lea    rsi,[rip+0x5606f]        # 0x14006de30
   140017dc1:	lea    r15,[rip+0x560f8]        # 0x14006dec0
   140017dc8:	lea    r14,[rip+0x560c1]        # 0x14006de90
   140017dcf:	nop
   140017dd0:	cmp    DWORD PTR [rbx+0x288],r12d
   140017dd7:	jne    0x140017e91
   140017ddd:	cmp    DWORD PTR [rbx+0x28],r12d
   140017de1:	je     0x140017e91
   140017de7:	mov    ecx,edi
   140017de9:	call   QWORD PTR [rip+0x50331]        # 0x140068120
   140017def:	mov    rcx,QWORD PTR [rbx+0x60]
   140017df3:	lea    rdx,[rbp-0x29]
   140017df7:	mov    rax,QWORD PTR [rcx]
   140017dfa:	call   QWORD PTR [rax+0x28]
   140017dfd:	cmp    DWORD PTR [rbp-0x29],r12d
   140017e01:	je     0x14001800e
   140017e07:	nop    WORD PTR [rax+rax*1+0x0]
   140017e10:	cmp    BYTE PTR [rbx+0x1c],r12b
   140017e14:	jne    0x140018018
   140017e1a:	mov    DWORD PTR [rbp-0x25],r12d
   140017e1e:	test   eax,eax
   140017e20:	js     0x140017e86
   140017e22:	mov    rcx,QWORD PTR [rbx+0x60]
   140017e26:	lea    r9,[rbp-0x1d]
   140017e2a:	lea    r8,[rbp-0x25]
   140017e2e:	mov    rax,QWORD PTR [rcx]
   140017e31:	lea    rdx,[rbp-0x19]
   140017e35:	mov    QWORD PTR [rsp+0x28],r12
   140017e3a:	mov    QWORD PTR [rsp+0x20],r12
   140017e3f:	call   QWORD PTR [rax+0x18]
   140017e42:	test   eax,eax
   140017e44:	js     0x140017e63
   140017e46:	mov    rdx,QWORD PTR [rbp-0x19]
   140017e4a:	test   BYTE PTR [rbp-0x1d],0x2
   140017e4e:	mov    rax,QWORD PTR [rbx]
   140017e51:	mov    r8d,DWORD PTR [rbp-0x25]
   140017e55:	cmovne rdx,r12
   140017e59:	mov    rcx,rbx
   140017e5c:	mov    QWORD PTR [rbp-0x19],rdx
   140017e60:	call   QWORD PTR [rax+0x20]
   140017e63:	mov    edx,DWORD PTR [rbp-0x25]
   140017e66:	test   edx,edx
   140017e68:	je     0x140017e74
   140017e6a:	mov    rcx,QWORD PTR [rbx+0x60]
   140017e6e:	mov    rax,QWORD PTR [rcx]
   140017e71:	call   QWORD PTR [rax+0x20]
   140017e74:	test   eax,eax
   140017e76:	js     0x140017e86
   140017e78:	mov    rcx,QWORD PTR [rbx+0x60]
   140017e7c:	lea    rdx,[rbp-0x29]
   140017e80:	mov    rax,QWORD PTR [rcx]
   140017e83:	call   QWORD PTR [rax+0x28]
   140017e86:	cmp    DWORD PTR [rbp-0x29],r12d
   140017e8a:	jne    0x140017e10
   140017e8c:	jmp    0x14001800e
   140017e91:	xor    r9d,r9d
   140017e94:	lea    rcx,[rip+0x55cd5]        # 0x14006db70
   140017e9b:	mov    edx,0x133
   140017ea0:	lea    r8d,[r9+0x3]
   140017ea4:	mov    QWORD PTR [rsp+0x28],rsi
   140017ea9:	mov    QWORD PTR [rsp+0x20],r13
   140017eae:	call   0x140003150
   140017eb3:	mov    ecx,0x3e8
   140017eb8:	call   QWORD PTR [rip+0x50262]        # 0x140068120
   140017ebe:	xor    r9d,r9d
   140017ec1:	lea    rax,[rip+0x55f78]        # 0x14006de40
   140017ec8:	mov    QWORD PTR [rsp+0x28],rax
   140017ecd:	lea    rcx,[rip+0x55c9c]        # 0x14006db70
   140017ed4:	lea    r8d,[r9+0x3]
   140017ed8:	mov    edx,0x13a
   140017edd:	mov    DWORD PTR [rbp-0x29],r12d
   140017ee1:	mov    DWORD PTR [rbp-0x25],r12d
   140017ee5:	mov    QWORD PTR [rsp+0x20],r13
   140017eea:	call   0x140003150
   140017eef:	mov    r11,QWORD PTR [rbx]
   140017ef2:	xor    edx,edx
   140017ef4:	mov    rcx,rbx
   140017ef7:	call   QWORD PTR [r11+0x30]
   140017efb:	xor    r9d,r9d
   140017efe:	lea    rax,[rip+0x55f63]        # 0x14006de68
   140017f05:	mov    QWORD PTR [rsp+0x28],rax
   140017f0a:	lea    rcx,[rip+0x55c5f]        # 0x14006db70
   140017f11:	lea    r8d,[r9+0x3]
   140017f15:	mov    edx,0x13d
   140017f1a:	mov    QWORD PTR [rsp+0x20],r13
   140017f1f:	call   0x140003150
   140017f24:	mov    r11,QWORD PTR [rbx]
   140017f27:	mov    r9d,DWORD PTR [rbx+0x290]
   140017f2e:	mov    edx,DWORD PTR [rbx+0x28c]
   140017f34:	xor    r8d,r8d
   140017f37:	mov    rcx,rbx
   140017f3a:	call   QWORD PTR [r11+0x28]
   140017f3e:	test   eax,eax
   140017f40:	jns    0x140017f8f
   140017f42:	lea    rcx,[rbp-0x1]
   140017f46:	mov    edx,eax
   140017f48:	call   0x140017400
   140017f4d:	cmp    QWORD PTR [rax+0x18],0x10
   140017f52:	jb     0x140017f57
   140017f54:	mov    rax,QWORD PTR [rax]
   140017f57:	xor    r9d,r9d
   140017f5a:	mov    QWORD PTR [rsp+0x28],rax
   140017f5f:	lea    rcx,[rip+0x55c0a]        # 0x14006db70
   140017f66:	lea    r8d,[r9+0x1]
   140017f6a:	mov    edx,0x13f
   140017f6f:	mov    QWORD PTR [rsp+0x20],r14
   140017f74:	call   0x140003150
   140017f79:	cmp    QWORD PTR [rbp+0x17],0x10
   140017f7e:	jb     0x14001800e
   140017f84:	mov    rcx,QWORD PTR [rbp-0x1]
   140017f88:	call   0x1400330c0
   140017f8d:	jmp    0x14001800e
   140017f8f:	xor    r9d,r9d
   140017f92:	lea    rcx,[rip+0x55bd7]        # 0x14006db70
   140017f99:	mov    edx,0x143
   140017f9e:	lea    r8d,[r9+0x3]
   140017fa2:	mov    QWORD PTR [rsp+0x28],r15
   140017fa7:	mov    QWORD PTR [rsp+0x20],r13
   140017fac:	call   0x140003150
   140017fb1:	mov    rcx,QWORD PTR [rbx+0x58]
   140017fb5:	mov    edi,0x1
   140017fba:	test   rcx,rcx
   140017fbd:	je     0x140018007
   140017fbf:	cmp    QWORD PTR [rbx+0x38],r12
   140017fc3:	je     0x140018007
   140017fc5:	mov    DWORD PTR [rbp-0x21],r12d
   140017fc9:	mov    rax,QWORD PTR [rcx]
   140017fcc:	lea    rdx,[rbp-0x21]
   140017fd0:	call   QWORD PTR [rax+0x20]
   140017fd3:	test   eax,eax
   140017fd5:	js     0x140018007
   140017fd7:	mov    rcx,QWORD PTR [rbx+0x38]
   140017fdb:	mov    eax,DWORD PTR [rbp-0x21]
   140017fde:	mov    r8d,DWORD PTR [rcx+0x4]
   140017fe2:	imul   rax,rax,0x989680
   140017fe9:	cqo    
   140017feb:	idiv   r8
   140017fee:	mov    rcx,rax
   140017ff1:	mov    eax,0xd1b71759
   140017ff6:	mul    ecx
   140017ff8:	mov    eax,0x10624dd3
   140017ffd:	shr    edx,0xd
   140018000:	mul    edx
   140018002:	mov    edi,edx
   140018004:	shr    edi,0x6
   140018007:	mov    DWORD PTR [rbx+0x288],r12d
   14001800e:	cmp    BYTE PTR [rbx+0x1c],r12b
   140018012:	je     0x140017dd0
   140018018:	mov    rsi,QWORD PTR [rbp-0x9]
   14001801c:	mov    r15,QWORD PTR [rsp+0x90]
   140018024:	mov    r14,QWORD PTR [rsp+0x98]
   14001802c:	mov    r13,QWORD PTR [rsp+0xa0]
   140018034:	mov    r12,QWORD PTR [rsp+0xd8]
   14001803c:	mov    rdi,QWORD PTR [rsp+0xd0]
   140018044:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001804c:	test   rsi,rsi
   14001804f:	je     0x14001805a
   140018051:	mov    rcx,rsi
   140018054:	call   QWORD PTR [rip+0x5000e]        # 0x140068068
   14001805a:	call   QWORD PTR [rip+0x50628]        # 0x140068688
   140018060:	xor    eax,eax
   140018062:	mov    rcx,QWORD PTR [rbp+0x27]
   140018066:	xor    rcx,rsp
   140018069:	call   0x140032f00
   14001806e:	add    rsp,0xa8
   140018075:	pop    rsi
   140018076:	pop    rbp
   140018077:	ret    
   140018078:	int3   
   140018079:	int3   
   14001807a:	int3   
   14001807b:	int3   
   14001807c:	int3   
   14001807d:	int3   
   14001807e:	int3   
   14001807f:	int3   
   140018080:	mov    eax,0x1
   140018085:	lock xadd DWORD PTR [rcx+0x274],eax
   14001808d:	inc    eax
   14001808f:	ret    
   140018090:	or     eax,0xffffffff
   140018093:	lock xadd DWORD PTR [rcx+0x274],eax
   14001809b:	dec    eax
   14001809d:	ret    
   14001809e:	int3   
   14001809f:	int3   
   1400180a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400180a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400180aa:	push   rdi
   1400180ab:	sub    rsp,0x20
   1400180af:	lea    r9,[rip+0xfffffffffffe7f4a]        # 0x140000000
   1400180b6:	mov    rsi,r8
   1400180b9:	xor    ebx,ebx
   1400180bb:	mov    r8,QWORD PTR [r9+0x687c0]
   1400180c2:	mov    rdi,rcx
   1400180c5:	cmp    r8,QWORD PTR [rdx]
   1400180c8:	jne    0x1400180db
   1400180ca:	mov    r8,QWORD PTR [r9+0x687c8]
   1400180d1:	cmp    r8,QWORD PTR [rdx+0x8]
   1400180d5:	jne    0x1400180db
   1400180d7:	mov    eax,ebx
   1400180d9:	jmp    0x1400180e0
   1400180db:	sbb    eax,eax
   1400180dd:	sbb    eax,0xffffffff
   1400180e0:	test   eax,eax
   1400180e2:	jne    0x1400180e9
   1400180e4:	mov    rax,QWORD PTR [rcx]
   1400180e7:	jmp    0x140018115
   1400180e9:	mov    rcx,QWORD PTR [r9+0x6b3c0]
   1400180f0:	cmp    rcx,QWORD PTR [rdx]
   1400180f3:	jne    0x140018106
   1400180f5:	mov    rcx,QWORD PTR [r9+0x6b3c8]
   1400180fc:	cmp    rcx,QWORD PTR [rdx+0x8]
   140018100:	jne    0x140018106
   140018102:	mov    eax,ebx
   140018104:	jmp    0x14001810b
   140018106:	sbb    eax,eax
   140018108:	sbb    eax,0xffffffff
   14001810b:	test   eax,eax
   14001810d:	jne    0x140018138
   14001810f:	mov    rax,QWORD PTR [rdi]
   140018112:	mov    rcx,rdi
   140018115:	call   QWORD PTR [rax+0x8]
   140018118:	lea    r11,[rdi-0x20]
   14001811c:	test   r11,r11
   14001811f:	cmovne rbx,rdi
   140018123:	xor    eax,eax
   140018125:	mov    QWORD PTR [rsi],rbx
   140018128:	mov    rbx,QWORD PTR [rsp+0x30]
   14001812d:	mov    rsi,QWORD PTR [rsp+0x38]
   140018132:	add    rsp,0x20
   140018136:	pop    rdi
   140018137:	ret    
   140018138:	mov    QWORD PTR [rsi],rbx
   14001813b:	mov    rbx,QWORD PTR [rsp+0x30]
   140018140:	mov    rsi,QWORD PTR [rsp+0x38]
   140018145:	mov    eax,0x80004002
   14001814a:	add    rsp,0x20
   14001814e:	pop    rdi
   14001814f:	ret    
   140018150:	mov    QWORD PTR [rsp+0x18],rbx
   140018155:	mov    QWORD PTR [rsp+0x20],rsi
   14001815a:	push   rdi
   14001815b:	sub    rsp,0x80
   140018162:	mov    rax,QWORD PTR [rip+0x6cf3f]        # 0x1400850a8
   140018169:	xor    rax,rsp
   14001816c:	mov    QWORD PTR [rsp+0x70],rax
   140018171:	lea    rax,[rip+0x55d68]        # 0x14006dee0
   140018178:	xor    r9d,r9d
   14001817b:	mov    rdi,r8
   14001817e:	mov    QWORD PTR [rsp+0x28],rax
   140018183:	mov    rbx,rcx
   140018186:	lea    rax,[rip+0x53313]        # 0x14006b4a0
   14001818d:	mov    rsi,rdx
   140018190:	lea    r8d,[r9+0x3]
   140018194:	lea    rcx,[rip+0x559d5]        # 0x14006db70
   14001819b:	mov    edx,0x1a4
   1400181a0:	mov    QWORD PTR [rsp+0x20],rax
   1400181a5:	call   0x140003150
   1400181aa:	test   rsi,rsi
   1400181ad:	je     0x1400182f6
   1400181b3:	cmp    DWORD PTR [rbx+0x8],0x0
   1400181b7:	je     0x1400182f6
   1400181bd:	cmp    QWORD PTR [rbx+0x260],0x0
   1400181c5:	je     0x1400182f6
   1400181cb:	cmp    QWORD PTR [rbx+0x18],0x0
   1400181d0:	je     0x1400182f6
   1400181d6:	lea    rcx,[rbx+0x54]
   1400181da:	mov    rdx,rsi
   1400181dd:	call   0x140034ce8
   1400181e2:	test   eax,eax
   1400181e4:	jne    0x1400182f6
   1400181ea:	mov    r8,QWORD PTR [rdi]
   1400181ed:	lea    rdx,[rip+0x547f4]        # 0x14006c9e8
   1400181f4:	cmp    r8,QWORD PTR [rdx]
   1400181f7:	jne    0x140018207
   1400181f9:	mov    r8,QWORD PTR [rdi+0x8]
   1400181fd:	cmp    r8,QWORD PTR [rdx+0x8]
   140018201:	jne    0x140018207
   140018203:	mov    ecx,eax
   140018205:	jmp    0x14001820c
   140018207:	sbb    ecx,ecx
   140018209:	sbb    ecx,0xffffffff
   14001820c:	test   ecx,ecx
   14001820e:	jne    0x1400182c4
   140018214:	cmp    DWORD PTR [rdi+0x10],eax
   140018217:	jne    0x1400182c4
   14001821d:	mov    rcx,QWORD PTR [rbx+0x260]
   140018224:	mov    QWORD PTR [rsp+0x30],rax
   140018229:	mov    QWORD PTR [rsp+0x38],rax
   14001822e:	mov    QWORD PTR [rsp+0x40],rax
   140018233:	mov    rax,QWORD PTR [rcx]
   140018236:	lea    r8,[rsp+0x30]
   14001823b:	lea    rdx,[rip+0x547a6]        # 0x14006c9e8
   140018242:	call   QWORD PTR [rax+0x28]
   140018245:	test   eax,eax
   140018247:	js     0x1400182b7
   140018249:	mov    eax,0x41
   14001824e:	cmp    ax,WORD PTR [rsp+0x30]
   140018253:	jne    0x1400182b7
   140018255:	mov    rax,QWORD PTR [rsp+0x38]
   14001825a:	mov    r8d,eax
   14001825d:	cmp    eax,0x28
   140018260:	jb     0x140018268
   140018262:	mov    r8d,0x28
   140018268:	mov    rdx,QWORD PTR [rsp+0x40]
   14001826d:	lea    rcx,[rsp+0x48]
   140018272:	call   0x140033260
   140018277:	mov    r11,QWORD PTR [rbx+0x18]
   14001827b:	mov    eax,DWORD PTR [rsp+0x4c]
   14001827f:	cmp    eax,DWORD PTR [r11+0x4]
   140018283:	je     0x1400182b7
   140018285:	mov    DWORD PTR [rsp+0x28],eax
   140018289:	xor    r9d,r9d
   14001828c:	lea    rax,[rip+0x55c75]        # 0x14006df08
   140018293:	lea    rcx,[rip+0x558d6]        # 0x14006db70
   14001829a:	lea    r8d,[r9+0x3]
   14001829e:	mov    edx,0x1bb
   1400182a3:	mov    QWORD PTR [rsp+0x20],rax
   1400182a8:	call   0x140003150
   1400182ad:	mov    DWORD PTR [rbx+0x268],0x1
   1400182b7:	lea    rcx,[rsp+0x30]
   1400182bc:	call   QWORD PTR [rip+0x503be]        # 0x140068680
   1400182c2:	jmp    0x1400182f6
   1400182c4:	mov    r8,QWORD PTR [rdi]
   1400182c7:	lea    rdx,[rip+0x54702]        # 0x14006c9d0
   1400182ce:	cmp    r8,QWORD PTR [rdx]
   1400182d1:	jne    0x1400182dd
   1400182d3:	mov    r8,QWORD PTR [rdi+0x8]
   1400182d7:	cmp    r8,QWORD PTR [rdx+0x8]
   1400182db:	je     0x1400182e2
   1400182dd:	sbb    eax,eax
   1400182df:	sbb    eax,0xffffffff
   1400182e2:	test   eax,eax
   1400182e4:	jne    0x1400182f6
   1400182e6:	cmp    DWORD PTR [rdi+0x10],0x5
   1400182ea:	jne    0x1400182f6
   1400182ec:	mov    DWORD PTR [rbx+0x268],0x1
   1400182f6:	xor    eax,eax
   1400182f8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400182fd:	xor    rcx,rsp
   140018300:	call   0x140032f00
   140018305:	lea    r11,[rsp+0x80]
   14001830d:	mov    rbx,QWORD PTR [r11+0x20]
   140018311:	mov    rsi,QWORD PTR [r11+0x28]
   140018315:	mov    rsp,r11
   140018318:	pop    rdi
   140018319:	ret    
   14001831a:	int3   
   14001831b:	int3   
   14001831c:	int3   
   14001831d:	int3   
   14001831e:	int3   
   14001831f:	int3   
   140018320:	mov    QWORD PTR [rsp+0x10],rdx
   140018325:	mov    QWORD PTR [rsp+0x18],r8
   14001832a:	mov    QWORD PTR [rsp+0x20],r9
   14001832f:	sub    rsp,0x28
   140018333:	mov    r8,rdx
   140018336:	lea    r9,[rsp+0x40]
   14001833b:	mov    edx,0x400
   140018340:	call   0x140033b44
   140018345:	add    rsp,0x28
   140018349:	ret    
   14001834a:	int3   
   14001834b:	int3   
   14001834c:	int3   
   14001834d:	int3   
   14001834e:	int3   
   14001834f:	int3   
   140018350:	rex push rbx
   140018352:	sub    rsp,0x20
   140018356:	lea    rax,[rip+0x56103]        # 0x14006e460
   14001835d:	mov    rbx,rcx
   140018360:	xor    edx,edx
   140018362:	mov    QWORD PTR [rcx],rax
   140018365:	xor    eax,eax
   140018367:	add    rcx,0x18
   14001836b:	mov    QWORD PTR [rcx-0x10],rax
   14001836f:	mov    QWORD PTR [rcx-0x8],rax
   140018373:	mov    QWORD PTR [rcx+0x108],rax
   14001837a:	mov    QWORD PTR [rcx+0x110],rax
   140018381:	mov    QWORD PTR [rcx+0x118],rax
   140018388:	mov    QWORD PTR [rcx+0x120],rax
   14001838f:	mov    QWORD PTR [rcx+0x128],rax
   140018396:	mov    QWORD PTR [rcx+0x130],rax
   14001839d:	mov    QWORD PTR [rcx+0x138],rax
   1400183a4:	mov    QWORD PTR [rcx+0x140],rax
   1400183ab:	mov    QWORD PTR [rcx+0x148],rax
   1400183b2:	mov    QWORD PTR [rcx+0x150],rax
   1400183b9:	mov    QWORD PTR [rcx+0x158],rax
   1400183c0:	mov    QWORD PTR [rcx+0x160],rax
   1400183c7:	mov    QWORD PTR [rcx+0x168],rax
   1400183ce:	mov    QWORD PTR [rcx+0x170],rax
   1400183d5:	mov    QWORD PTR [rcx+0x178],rax
   1400183dc:	mov    QWORD PTR [rcx+0x180],rax
   1400183e3:	mov    QWORD PTR [rcx+0x188],rax
   1400183ea:	mov    QWORD PTR [rcx+0x190],rax
   1400183f1:	mov    QWORD PTR [rcx+0x198],rax
   1400183f8:	mov    QWORD PTR [rcx+0x1a0],rax
   1400183ff:	mov    QWORD PTR [rcx+0x1a8],rax
   140018406:	mov    QWORD PTR [rcx+0x1b0],rax
   14001840d:	mov    QWORD PTR [rcx+0x1b8],rax
   140018414:	mov    QWORD PTR [rcx+0x1c0],rax
   14001841b:	mov    QWORD PTR [rcx+0x1c8],rax
   140018422:	mov    QWORD PTR [rcx+0x1d0],rax
   140018429:	mov    QWORD PTR [rcx+0x1d8],rax
   140018430:	mov    QWORD PTR [rcx+0x1e0],rax
   140018437:	mov    QWORD PTR [rcx+0x1e8],rax
   14001843e:	mov    QWORD PTR [rcx+0x1f0],rax
   140018445:	mov    QWORD PTR [rcx+0x1f8],rax
   14001844c:	mov    QWORD PTR [rcx+0x200],rax
   140018453:	mov    QWORD PTR [rcx+0x208],rax
   14001845a:	mov    QWORD PTR [rcx+0x210],rax
   140018461:	mov    QWORD PTR [rcx+0x218],rax
   140018468:	mov    QWORD PTR [rcx+0x220],rax
   14001846f:	mov    QWORD PTR [rcx+0x228],rax
   140018476:	mov    QWORD PTR [rcx+0x230],rax
   14001847d:	mov    QWORD PTR [rcx+0x238],rax
   140018484:	mov    QWORD PTR [rcx+0x240],rax
   14001848b:	mov    r8d,0x104
   140018491:	call   0x140036dc0
   140018496:	xor    edx,edx
   140018498:	mov    rcx,rbx
   14001849b:	call   0x1400185b0
   1400184a0:	mov    rax,rbx
   1400184a3:	add    rsp,0x20
   1400184a7:	pop    rbx
   1400184a8:	ret    
   1400184a9:	int3   
   1400184aa:	int3   
   1400184ab:	int3   
   1400184ac:	int3   
   1400184ad:	int3   
   1400184ae:	int3   
   1400184af:	int3   
   1400184b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400184b5:	push   rdi
   1400184b6:	sub    rsp,0x20
   1400184ba:	lea    rax,[rip+0x55f9f]        # 0x14006e460
   1400184c1:	mov    rbx,rcx
   1400184c4:	mov    edi,edx
   1400184c6:	mov    QWORD PTR [rcx],rax
   1400184c9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400184cd:	test   rcx,rcx
   1400184d0:	je     0x1400184ff
   1400184d2:	mov    rax,QWORD PTR [rbx+0x128]
   1400184d9:	test   rax,rax
   1400184dc:	je     0x1400184e8
   1400184de:	call   rax
   1400184e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400184e8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400184ec:	test   rcx,rcx
   1400184ef:	je     0x1400184ff
   1400184f1:	call   QWORD PTR [rip+0x4fc49]        # 0x140068140
   1400184f7:	mov    QWORD PTR [rbx+0x8],0x0
   1400184ff:	mov    rcx,QWORD PTR [rbx+0x8]
   140018503:	test   rcx,rcx
   140018506:	je     0x140018516
   140018508:	call   QWORD PTR [rip+0x4fc32]        # 0x140068140
   14001850e:	mov    QWORD PTR [rbx+0x8],0x0
   140018516:	test   dil,0x1
   14001851a:	je     0x140018524
   14001851c:	mov    rcx,rbx
   14001851f:	call   0x1400330c0
   140018524:	mov    rax,rbx
   140018527:	mov    rbx,QWORD PTR [rsp+0x30]
   14001852c:	add    rsp,0x20
   140018530:	pop    rdi
   140018531:	ret    
   140018532:	int3   
   140018533:	int3   
   140018534:	int3   
   140018535:	int3   
   140018536:	int3   
   140018537:	int3   
   140018538:	int3   
   140018539:	int3   
   14001853a:	int3   
   14001853b:	int3   
   14001853c:	int3   
   14001853d:	int3   
   14001853e:	int3   
   14001853f:	int3   
   140018540:	rex push rbx
   140018542:	sub    rsp,0x20
   140018546:	lea    rax,[rip+0x55f13]        # 0x14006e460
   14001854d:	mov    rbx,rcx
   140018550:	mov    QWORD PTR [rcx],rax
   140018553:	mov    rcx,QWORD PTR [rcx+0x10]
   140018557:	test   rcx,rcx
   14001855a:	je     0x140018589
   14001855c:	mov    rax,QWORD PTR [rbx+0x128]
   140018563:	test   rax,rax
   140018566:	je     0x140018572
   140018568:	call   rax
   14001856a:	mov    QWORD PTR [rbx+0x10],0x0
   140018572:	mov    rcx,QWORD PTR [rbx+0x8]
   140018576:	test   rcx,rcx
   140018579:	je     0x140018589
   14001857b:	call   QWORD PTR [rip+0x4fbbf]        # 0x140068140
   140018581:	mov    QWORD PTR [rbx+0x8],0x0
   140018589:	mov    rcx,QWORD PTR [rbx+0x8]
   14001858d:	test   rcx,rcx
   140018590:	je     0x1400185a0
   140018592:	call   QWORD PTR [rip+0x4fba8]        # 0x140068140
   140018598:	mov    QWORD PTR [rbx+0x8],0x0
   1400185a0:	add    rsp,0x20
   1400185a4:	pop    rbx
   1400185a5:	ret    
   1400185a6:	int3   
   1400185a7:	int3   
   1400185a8:	int3   
   1400185a9:	int3   
   1400185aa:	int3   
   1400185ab:	int3   
   1400185ac:	int3   
   1400185ad:	int3   
   1400185ae:	int3   
   1400185af:	int3   
   1400185b0:	rex push rbx
   1400185b2:	sub    rsp,0x20
   1400185b6:	mov    rbx,rcx
   1400185b9:	test   rdx,rdx
   1400185bc:	je     0x1400185d4
   1400185be:	cmp    BYTE PTR [rdx],0x0
   1400185c1:	je     0x1400185d4
   1400185c3:	mov    r8,rdx
   1400185c6:	add    rcx,0x18
   1400185ca:	mov    edx,0x104
   1400185cf:	call   0x1400336a8
   1400185d4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400185d8:	test   rcx,rcx
   1400185db:	je     0x1400185eb
   1400185dd:	call   QWORD PTR [rip+0x4fb5d]        # 0x140068140
   1400185e3:	mov    QWORD PTR [rbx+0x8],0x0
   1400185eb:	lea    rcx,[rbx+0x18]
   1400185ef:	call   QWORD PTR [rip+0x4fb53]        # 0x140068148
   1400185f5:	mov    QWORD PTR [rbx+0x8],rax
   1400185f9:	test   rax,rax
   1400185fc:	je     0x1400189c9
   140018602:	lea    rdx,[rip+0x559af]        # 0x14006dfb8
   140018609:	mov    rcx,rax
   14001860c:	call   QWORD PTR [rip+0x4fb06]        # 0x140068118
   140018612:	mov    rcx,QWORD PTR [rbx+0x8]
   140018616:	lea    rdx,[rip+0x559b3]        # 0x14006dfd0
   14001861d:	mov    QWORD PTR [rbx+0x120],rax
   140018624:	call   QWORD PTR [rip+0x4faee]        # 0x140068118
   14001862a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001862e:	lea    rdx,[rip+0x559b3]        # 0x14006dfe8
   140018635:	mov    QWORD PTR [rbx+0x128],rax
   14001863c:	call   QWORD PTR [rip+0x4fad6]        # 0x140068118
   140018642:	mov    rcx,QWORD PTR [rbx+0x8]
   140018646:	lea    rdx,[rip+0x559bb]        # 0x14006e008
   14001864d:	mov    QWORD PTR [rbx+0x130],rax
   140018654:	call   QWORD PTR [rip+0x4fabe]        # 0x140068118
   14001865a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001865e:	lea    rdx,[rip+0x559bb]        # 0x14006e020
   140018665:	mov    QWORD PTR [rbx+0x138],rax
   14001866c:	call   QWORD PTR [rip+0x4faa6]        # 0x140068118
   140018672:	mov    rcx,QWORD PTR [rbx+0x8]
   140018676:	lea    rdx,[rip+0x559bb]        # 0x14006e038
   14001867d:	mov    QWORD PTR [rbx+0x140],rax
   140018684:	call   QWORD PTR [rip+0x4fa8e]        # 0x140068118
   14001868a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001868e:	lea    rdx,[rip+0x559c3]        # 0x14006e058
   140018695:	mov    QWORD PTR [rbx+0x148],rax
   14001869c:	call   QWORD PTR [rip+0x4fa76]        # 0x140068118
   1400186a2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400186a6:	lea    rdx,[rip+0x559cb]        # 0x14006e078
   1400186ad:	mov    QWORD PTR [rbx+0x150],rax
   1400186b4:	call   QWORD PTR [rip+0x4fa5e]        # 0x140068118
   1400186ba:	mov    rcx,QWORD PTR [rbx+0x8]
   1400186be:	lea    rdx,[rip+0x559cb]        # 0x14006e090
   1400186c5:	mov    QWORD PTR [rbx+0x158],rax
   1400186cc:	call   QWORD PTR [rip+0x4fa46]        # 0x140068118
   1400186d2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400186d6:	lea    rdx,[rip+0x559cb]        # 0x14006e0a8
   1400186dd:	mov    QWORD PTR [rbx+0x160],rax
   1400186e4:	call   QWORD PTR [rip+0x4fa2e]        # 0x140068118
   1400186ea:	mov    rcx,QWORD PTR [rbx+0x8]
   1400186ee:	lea    rdx,[rip+0x559cb]        # 0x14006e0c0
   1400186f5:	mov    QWORD PTR [rbx+0x168],rax
   1400186fc:	call   QWORD PTR [rip+0x4fa16]        # 0x140068118
   140018702:	mov    rcx,QWORD PTR [rbx+0x8]
   140018706:	lea    rdx,[rip+0x559d3]        # 0x14006e0e0
   14001870d:	mov    QWORD PTR [rbx+0x170],rax
   140018714:	call   QWORD PTR [rip+0x4f9fe]        # 0x140068118
   14001871a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001871e:	lea    rdx,[rip+0x559d3]        # 0x14006e0f8
   140018725:	mov    QWORD PTR [rbx+0x178],rax
   14001872c:	call   QWORD PTR [rip+0x4f9e6]        # 0x140068118
   140018732:	mov    rcx,QWORD PTR [rbx+0x8]
   140018736:	lea    rdx,[rip+0x559d3]        # 0x14006e110
   14001873d:	mov    QWORD PTR [rbx+0x180],rax
   140018744:	call   QWORD PTR [rip+0x4f9ce]        # 0x140068118
   14001874a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001874e:	lea    rdx,[rip+0x559e3]        # 0x14006e138
   140018755:	mov    QWORD PTR [rbx+0x188],rax
   14001875c:	call   QWORD PTR [rip+0x4f9b6]        # 0x140068118
   140018762:	mov    rcx,QWORD PTR [rbx+0x8]
   140018766:	lea    rdx,[rip+0x559e3]        # 0x14006e150
   14001876d:	mov    QWORD PTR [rbx+0x190],rax
   140018774:	call   QWORD PTR [rip+0x4f99e]        # 0x140068118
   14001877a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001877e:	lea    rdx,[rip+0x559eb]        # 0x14006e170
   140018785:	mov    QWORD PTR [rbx+0x198],rax
   14001878c:	call   QWORD PTR [rip+0x4f986]        # 0x140068118
   140018792:	mov    rcx,QWORD PTR [rbx+0x8]
   140018796:	lea    rdx,[rip+0x559f3]        # 0x14006e190
   14001879d:	mov    QWORD PTR [rbx+0x1a0],rax
   1400187a4:	call   QWORD PTR [rip+0x4f96e]        # 0x140068118
   1400187aa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400187ae:	lea    rdx,[rip+0x559fb]        # 0x14006e1b0
   1400187b5:	mov    QWORD PTR [rbx+0x1a8],rax
   1400187bc:	call   QWORD PTR [rip+0x4f956]        # 0x140068118
   1400187c2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400187c6:	lea    rdx,[rip+0x55a03]        # 0x14006e1d0
   1400187cd:	mov    QWORD PTR [rbx+0x1b0],rax
   1400187d4:	call   QWORD PTR [rip+0x4f93e]        # 0x140068118
   1400187da:	lea    rdx,[rip+0x55a0f]        # 0x14006e1f0
   1400187e1:	mov    QWORD PTR [rbx+0x1b8],rax
   1400187e8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400187ec:	call   QWORD PTR [rip+0x4f926]        # 0x140068118
   1400187f2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400187f6:	lea    rdx,[rip+0x55a13]        # 0x14006e210
   1400187fd:	mov    QWORD PTR [rbx+0x1c0],rax
   140018804:	call   QWORD PTR [rip+0x4f90e]        # 0x140068118
   14001880a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001880e:	lea    rdx,[rip+0x55a1b]        # 0x14006e230
   140018815:	mov    QWORD PTR [rbx+0x1c8],rax
   14001881c:	call   QWORD PTR [rip+0x4f8f6]        # 0x140068118
   140018822:	mov    rcx,QWORD PTR [rbx+0x8]
   140018826:	lea    rdx,[rip+0x55a23]        # 0x14006e250
   14001882d:	mov    QWORD PTR [rbx+0x1d0],rax
   140018834:	call   QWORD PTR [rip+0x4f8de]        # 0x140068118
   14001883a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001883e:	lea    rdx,[rip+0x55a33]        # 0x14006e278
   140018845:	mov    QWORD PTR [rbx+0x1d8],rax
   14001884c:	call   QWORD PTR [rip+0x4f8c6]        # 0x140068118
   140018852:	mov    rcx,QWORD PTR [rbx+0x8]
   140018856:	lea    rdx,[rip+0x55a3b]        # 0x14006e298
   14001885d:	mov    QWORD PTR [rbx+0x1e0],rax
   140018864:	call   QWORD PTR [rip+0x4f8ae]        # 0x140068118
   14001886a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001886e:	lea    rdx,[rip+0x55a3b]        # 0x14006e2b0
   140018875:	mov    QWORD PTR [rbx+0x1e8],rax
   14001887c:	call   QWORD PTR [rip+0x4f896]        # 0x140068118
   140018882:	mov    rcx,QWORD PTR [rbx+0x8]
   140018886:	lea    rdx,[rip+0x55a3b]        # 0x14006e2c8
   14001888d:	mov    QWORD PTR [rbx+0x1f0],rax
   140018894:	call   QWORD PTR [rip+0x4f87e]        # 0x140068118
   14001889a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001889e:	lea    rdx,[rip+0x55a43]        # 0x14006e2e8
   1400188a5:	mov    QWORD PTR [rbx+0x1f8],rax
   1400188ac:	call   QWORD PTR [rip+0x4f866]        # 0x140068118
   1400188b2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400188b6:	lea    rdx,[rip+0x55a43]        # 0x14006e300
   1400188bd:	mov    QWORD PTR [rbx+0x200],rax
   1400188c4:	call   QWORD PTR [rip+0x4f84e]        # 0x140068118
   1400188ca:	mov    rcx,QWORD PTR [rbx+0x8]
   1400188ce:	lea    rdx,[rip+0x55a43]        # 0x14006e318
   1400188d5:	mov    QWORD PTR [rbx+0x208],rax
   1400188dc:	call   QWORD PTR [rip+0x4f836]        # 0x140068118
   1400188e2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400188e6:	lea    rdx,[rip+0x55a43]        # 0x14006e330
   1400188ed:	mov    QWORD PTR [rbx+0x210],rax
   1400188f4:	call   QWORD PTR [rip+0x4f81e]        # 0x140068118
   1400188fa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400188fe:	lea    rdx,[rip+0x55a43]        # 0x14006e348
   140018905:	mov    QWORD PTR [rbx+0x218],rax
   14001890c:	call   QWORD PTR [rip+0x4f806]        # 0x140068118
   140018912:	mov    rcx,QWORD PTR [rbx+0x8]
   140018916:	lea    rdx,[rip+0x55a53]        # 0x14006e370
   14001891d:	mov    QWORD PTR [rbx+0x220],rax
   140018924:	call   QWORD PTR [rip+0x4f7ee]        # 0x140068118
   14001892a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001892e:	lea    rdx,[rip+0x55a63]        # 0x14006e398
   140018935:	mov    QWORD PTR [rbx+0x228],rax
   14001893c:	call   QWORD PTR [rip+0x4f7d6]        # 0x140068118
   140018942:	mov    rcx,QWORD PTR [rbx+0x8]
   140018946:	lea    rdx,[rip+0x55a63]        # 0x14006e3b0
   14001894d:	mov    QWORD PTR [rbx+0x230],rax
   140018954:	call   QWORD PTR [rip+0x4f7be]        # 0x140068118
   14001895a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001895e:	lea    rdx,[rip+0x55a63]        # 0x14006e3c8
   140018965:	mov    QWORD PTR [rbx+0x238],rax
   14001896c:	call   QWORD PTR [rip+0x4f7a6]        # 0x140068118
   140018972:	mov    rcx,QWORD PTR [rbx+0x8]
   140018976:	lea    rdx,[rip+0x55a6b]        # 0x14006e3e8
   14001897d:	mov    QWORD PTR [rbx+0x240],rax
   140018984:	call   QWORD PTR [rip+0x4f78e]        # 0x140068118
   14001898a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001898e:	lea    rdx,[rip+0x55a83]        # 0x14006e418
   140018995:	mov    QWORD PTR [rbx+0x248],rax
   14001899c:	call   QWORD PTR [rip+0x4f776]        # 0x140068118
   1400189a2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400189a6:	lea    rdx,[rip+0x55a8b]        # 0x14006e438
   1400189ad:	mov    QWORD PTR [rbx+0x250],rax
   1400189b4:	call   QWORD PTR [rip+0x4f75e]        # 0x140068118
   1400189ba:	mov    QWORD PTR [rbx+0x258],rax
   1400189c1:	mov    al,0x1
   1400189c3:	add    rsp,0x20
   1400189c7:	pop    rbx
   1400189c8:	ret    
   1400189c9:	add    rsp,0x20
   1400189cd:	pop    rbx
   1400189ce:	ret    
   1400189cf:	int3   
   1400189d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400189d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400189da:	push   rsi
   1400189db:	sub    rsp,0x20
   1400189df:	cmp    QWORD PTR [rcx+0x8],0x0
   1400189e4:	mov    rsi,r8
   1400189e7:	mov    rbp,rdx
   1400189ea:	mov    rbx,rcx
   1400189ed:	jne    0x1400189f7
   1400189ef:	mov    rdx,r8
   1400189f2:	call   0x1400185b0
   1400189f7:	cmp    QWORD PTR [rbx+0x120],0x0
   1400189ff:	je     0x140018a5d
   140018a01:	test   rsi,rsi
   140018a04:	je     0x140018a34
   140018a06:	mov    QWORD PTR [rsp+0x30],rdi
   140018a0b:	or     rcx,0xffffffffffffffff
   140018a0f:	xor    eax,eax
   140018a11:	mov    rdi,rsi
   140018a14:	repnz scas al,BYTE PTR es:[rdi]
   140018a16:	mov    rdi,QWORD PTR [rsp+0x30]
   140018a1b:	not    rcx
   140018a1e:	dec    rcx
   140018a21:	je     0x140018a34
   140018a23:	lea    rcx,[rbx+0x18]
   140018a27:	mov    r8,rsi
   140018a2a:	mov    edx,0x104
   140018a2f:	call   0x1400336a8
   140018a34:	lea    r8,[rbx+0x18]
   140018a38:	xor    edx,edx
   140018a3a:	mov    rcx,rbp
   140018a3d:	call   QWORD PTR [rbx+0x120]
   140018a43:	test   rax,rax
   140018a46:	mov    QWORD PTR [rbx+0x10],rax
   140018a4a:	setne  al
   140018a4d:	mov    rbx,QWORD PTR [rsp+0x38]
   140018a52:	mov    rbp,QWORD PTR [rsp+0x40]
   140018a57:	add    rsp,0x20
   140018a5b:	pop    rsi
   140018a5c:	ret    
   140018a5d:	mov    rbx,QWORD PTR [rsp+0x38]
   140018a62:	mov    rbp,QWORD PTR [rsp+0x40]
   140018a67:	xor    al,al
   140018a69:	add    rsp,0x20
   140018a6d:	pop    rsi
   140018a6e:	ret    
   140018a6f:	int3   
   140018a70:	rex push rbx
   140018a72:	sub    rsp,0x20
   140018a76:	mov    rbx,rcx
   140018a79:	test   rcx,rcx
   140018a7c:	je     0x140018ac1
   140018a7e:	test   rdx,rdx
   140018a81:	je     0x140018ac1
   140018a83:	mov    QWORD PTR [rcx],rdx
   140018a86:	call   QWORD PTR [rip+0x4f6ec]        # 0x140068178
   140018a8c:	lea    rcx,[rip+0x71885]        # 0x14008a318
   140018a93:	mov    DWORD PTR [rbx+0x8],eax
   140018a96:	call   QWORD PTR [rip+0x4f6d4]        # 0x140068170
   140018a9c:	mov    r11,QWORD PTR [rip+0x7189d]        # 0x14008a340
   140018aa3:	mov    QWORD PTR [rbx+0x10],r11
   140018aa7:	lea    rcx,[rip+0x7186a]        # 0x14008a318
   140018aae:	mov    QWORD PTR [rip+0x7188b],rbx        # 0x14008a340
   140018ab5:	add    rsp,0x20
   140018ab9:	pop    rbx
   140018aba:	rex.W jmp QWORD PTR [rip+0x4f68f]        # 0x140068150
   140018ac1:	xor    r9d,r9d
   140018ac4:	xor    r8d,r8d
   140018ac7:	mov    ecx,0xc0000005
   140018acc:	lea    edx,[r9+0x1]
   140018ad0:	call   QWORD PTR [rip+0x4f68a]        # 0x140068160
   140018ad6:	int3   
   140018ad7:	int3   
   140018ad8:	int3   
   140018ad9:	int3   
   140018ada:	int3   
   140018adb:	int3   
   140018adc:	int3   
   140018add:	int3   
   140018ade:	int3   
   140018adf:	int3   
   140018ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140018ae5:	push   rdi
   140018ae6:	sub    rsp,0x20
   140018aea:	lea    rcx,[rip+0x71827]        # 0x14008a318
   140018af1:	xor    edi,edi
   140018af3:	call   QWORD PTR [rip+0x4f677]        # 0x140068170
   140018af9:	mov    rbx,QWORD PTR [rip+0x71840]        # 0x14008a340
   140018b00:	test   rbx,rbx
   140018b03:	je     0x140018b3c
   140018b05:	call   QWORD PTR [rip+0x4f66d]        # 0x140068178
   140018b0b:	mov    ecx,edi
   140018b0d:	nop    DWORD PTR [rax]
   140018b10:	cmp    DWORD PTR [rbx+0x8],eax
   140018b13:	je     0x140018b23
   140018b15:	mov    rcx,rbx
   140018b18:	mov    rbx,QWORD PTR [rbx+0x10]
   140018b1c:	test   rbx,rbx
   140018b1f:	jne    0x140018b10
   140018b21:	jmp    0x140018b3c
   140018b23:	mov    rax,QWORD PTR [rbx+0x10]
   140018b27:	test   rcx,rcx
   140018b2a:	jne    0x140018b35
   140018b2c:	mov    QWORD PTR [rip+0x7180d],rax        # 0x14008a340
   140018b33:	jmp    0x140018b39
   140018b35:	mov    QWORD PTR [rcx+0x10],rax
   140018b39:	mov    rdi,QWORD PTR [rbx]
   140018b3c:	lea    rcx,[rip+0x717d5]        # 0x14008a318
   140018b43:	call   QWORD PTR [rip+0x4f607]        # 0x140068150
   140018b49:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b4e:	mov    rax,rdi
   140018b51:	add    rsp,0x20
   140018b55:	pop    rdi
   140018b56:	ret    
   140018b57:	int3   
   140018b58:	int3   
   140018b59:	int3   
   140018b5a:	int3   
   140018b5b:	int3   
   140018b5c:	int3   
   140018b5d:	int3   
   140018b5e:	int3   
   140018b5f:	int3   
   140018b60:	mov    QWORD PTR [rsp+0x8],rbx
   140018b65:	mov    QWORD PTR [rsp+0x10],rsi
   140018b6a:	push   rdi
   140018b6b:	sub    rsp,0x20
   140018b6f:	cmp    QWORD PTR [rcx],0x0
   140018b73:	mov    rdi,r8
   140018b76:	mov    rsi,rdx
   140018b79:	mov    rbx,rcx
   140018b7c:	jne    0x140018b9b
   140018b7e:	call   0x140042d7c
   140018b83:	mov    QWORD PTR [rbx],rax
   140018b86:	test   rax,rax
   140018b89:	jne    0x140018b9b
   140018b8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b90:	mov    rsi,QWORD PTR [rsp+0x38]
   140018b95:	add    rsp,0x20
   140018b99:	pop    rdi
   140018b9a:	ret    
   140018b9b:	mov    rbx,QWORD PTR [rbx]
   140018b9e:	mov    eax,0xb948
   140018ba3:	mov    WORD PTR [rbx],ax
   140018ba6:	mov    eax,0xb848
   140018bab:	mov    QWORD PTR [rbx+0x2],rdi
   140018baf:	mov    WORD PTR [rbx+0xa],ax
   140018bb3:	mov    eax,0xe0ff
   140018bb8:	mov    QWORD PTR [rbx+0xc],rsi
   140018bbc:	mov    WORD PTR [rbx+0x14],ax
   140018bc0:	call   QWORD PTR [rip+0x4f542]        # 0x140068108
   140018bc6:	mov    r8d,0x16
   140018bcc:	mov    rcx,rax
   140018bcf:	mov    rdx,rbx
   140018bd2:	call   QWORD PTR [rip+0x4f580]        # 0x140068158
   140018bd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140018bdd:	mov    rsi,QWORD PTR [rsp+0x38]
   140018be2:	mov    eax,0x1
   140018be7:	add    rsp,0x20
   140018beb:	pop    rdi
   140018bec:	ret    
   140018bed:	int3   
   140018bee:	int3   
   140018bef:	int3   
   140018bf0:	sub    rsp,0x28
   140018bf4:	test   rcx,rcx
   140018bf7:	je     0x140018cd3
   140018bfd:	mov    QWORD PTR [rsp+0x30],rbx
   140018c02:	mov    QWORD PTR [rsp+0x20],rdi
   140018c07:	call   QWORD PTR [rip+0x4f943]        # 0x140068550
   140018c0d:	movzx  edi,ax
   140018c10:	test   ax,ax
   140018c13:	je     0x140018cc1
   140018c19:	mov    edx,DWORD PTR [rip+0x71731]        # 0x14008a350
   140018c1f:	movsxd r8,DWORD PTR [rip+0x7172e]        # 0x14008a354
   140018c26:	cmp    edx,r8d
   140018c29:	jne    0x140018c9d
   140018c2b:	mov    r9,QWORD PTR [rip+0x71716]        # 0x14008a348
   140018c32:	lea    rax,[rsp+0x38]
   140018c37:	cmp    rax,r9
   140018c3a:	jb     0x140018c55
   140018c3c:	lea    rax,[r9+r8*2]
   140018c40:	lea    rcx,[rsp+0x38]
   140018c45:	cmp    rcx,rax
   140018c48:	jae    0x140018c55
   140018c4a:	mov    ecx,0x80004005
   140018c4f:	call   0x1400025f0
   140018c54:	int3   
   140018c55:	test   r8d,r8d
   140018c58:	jne    0x140018c60
   140018c5a:	lea    ebx,[r8+0x1]
   140018c5e:	jmp    0x140018c6f
   140018c60:	lea    ebx,[rdx+rdx*1]
   140018c63:	test   ebx,ebx
   140018c65:	js     0x140018cc1
   140018c67:	cmp    ebx,0x3fffffff
   140018c6d:	ja     0x140018cc1
   140018c6f:	movsxd rdx,ebx
   140018c72:	mov    r8d,0x2
   140018c78:	mov    rcx,r9
   140018c7b:	call   0x140033618
   140018c80:	mov    r11,rax
   140018c83:	test   rax,rax
   140018c86:	je     0x140018cc1
   140018c88:	mov    edx,DWORD PTR [rip+0x716c2]        # 0x14008a350
   140018c8e:	mov    DWORD PTR [rip+0x716c0],ebx        # 0x14008a354
   140018c94:	mov    QWORD PTR [rip+0x716ad],rax        # 0x14008a348
   140018c9b:	jmp    0x140018ca4
   140018c9d:	mov    r11,QWORD PTR [rip+0x716a4]        # 0x14008a348
   140018ca4:	movsxd rax,edx
   140018ca7:	lea    rcx,[r11+rax*2]
   140018cab:	test   rcx,rcx
   140018cae:	je     0x140018cb9
   140018cb0:	mov    WORD PTR [rcx],di
   140018cb3:	mov    edx,DWORD PTR [rip+0x71697]        # 0x14008a350
   140018cb9:	inc    edx
   140018cbb:	mov    DWORD PTR [rip+0x7168f],edx        # 0x14008a350
   140018cc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140018cc6:	movzx  eax,di
   140018cc9:	mov    rdi,QWORD PTR [rsp+0x20]
   140018cce:	add    rsp,0x28
   140018cd2:	ret    
   140018cd3:	xor    eax,eax
   140018cd5:	add    rsp,0x28
   140018cd9:	ret    
   140018cda:	int3   
   140018cdb:	int3   
   140018cdc:	int3   
   140018cdd:	int3   
   140018cde:	int3   
   140018cdf:	int3   
   140018ce0:	rex push rbx
   140018ce2:	sub    rsp,0x20
   140018ce6:	cmp    DWORD PTR [rsp+0x60],0x0
   140018ceb:	mov    rbx,rcx
   140018cee:	jne    0x140018d6d
   140018cf0:	cmp    r8d,0x1
   140018cf4:	jne    0x140018d0e
   140018cf6:	call   0x140018f80
   140018cfb:	mov    rcx,QWORD PTR [rsp+0x58]
   140018d00:	mov    QWORD PTR [rcx],rax
   140018d03:	mov    eax,0x1
   140018d08:	add    rsp,0x20
   140018d0c:	pop    rbx
   140018d0d:	ret    
   140018d0e:	cmp    r8d,0x113
   140018d15:	jne    0x140018d56
   140018d17:	xor    edx,edx
   140018d19:	call   0x140019270
   140018d1e:	mov    rdx,QWORD PTR [rbx+0xb0]
   140018d25:	test   rdx,rdx
   140018d28:	je     0x140018d3f
   140018d2a:	mov    rcx,QWORD PTR [rbx+0x8]
   140018d2e:	call   QWORD PTR [rip+0x4f8fc]        # 0x140068630
   140018d34:	mov    QWORD PTR [rbx+0xb0],0x0
   140018d3f:	mov    rax,QWORD PTR [rsp+0x58]
   140018d44:	mov    QWORD PTR [rax],0x1
   140018d4b:	mov    eax,0x1
   140018d50:	add    rsp,0x20
   140018d54:	pop    rbx
   140018d55:	ret    
   140018d56:	cmp    r8d,0x2
   140018d5a:	jne    0x140018d6d
   140018d5c:	mov    rcx,QWORD PTR [rcx+0x58]
   140018d60:	test   rcx,rcx
   140018d63:	je     0x140018d3f
   140018d65:	call   QWORD PTR [rip+0x4f84d]        # 0x1400685b8
   140018d6b:	jmp    0x140018d3f
   140018d6d:	xor    eax,eax
   140018d6f:	add    rsp,0x20
   140018d73:	pop    rbx
   140018d74:	ret    
   140018d75:	int3   
   140018d76:	int3   
   140018d77:	int3   
   140018d78:	int3   
   140018d79:	int3   
   140018d7a:	int3   
   140018d7b:	int3   
   140018d7c:	int3   
   140018d7d:	int3   
   140018d7e:	int3   
   140018d7f:	int3   
   140018d80:	rex push rbx
   140018d82:	sub    rsp,0x30
   140018d86:	mov    rax,QWORD PTR [rip+0x4f8ab]        # 0x140068638
   140018d8d:	mov    rbx,rcx
   140018d90:	xor    ecx,ecx
   140018d92:	mov    QWORD PTR [rbx+0x8],rcx
   140018d96:	mov    QWORD PTR [rbx+0x28],rcx
   140018d9a:	mov    QWORD PTR [rbx+0x40],rax
   140018d9e:	mov    QWORD PTR [rbx+0x30],rcx
   140018da2:	mov    DWORD PTR [rbx+0x38],ecx
   140018da5:	lea    rax,[rip+0x5584c]        # 0x14006e5f8
   140018dac:	mov    QWORD PTR [rbx],rax
   140018daf:	lea    rax,[rip+0x5586a]        # 0x14006e620
   140018db6:	mov    QWORD PTR [rsp+0x58],rcx
   140018dbb:	mov    QWORD PTR [rbx+0x48],rax
   140018dbf:	mov    rax,QWORD PTR [rip+0x4f872]        # 0x140068638
   140018dc6:	mov    QWORD PTR [rbx+0x58],rcx
   140018dca:	mov    QWORD PTR [rbx+0x78],rcx
   140018dce:	mov    QWORD PTR [rbx+0x90],rax
   140018dd5:	mov    QWORD PTR [rbx+0x80],rcx
   140018ddc:	mov    DWORD PTR [rbx+0x88],ecx
   140018de2:	mov    QWORD PTR [rbx+0x98],rcx
   140018de9:	lea    rax,[rip+0x54968]        # 0x14006d758
   140018df0:	mov    QWORD PTR [rbx+0x50],rax
   140018df4:	lea    rax,[rsp+0x58]
   140018df9:	mov    QWORD PTR [rbx+0xa0],rcx
   140018e00:	mov    QWORD PTR [rbx+0xb0],rcx
   140018e07:	lea    rdx,[rip+0x52942]        # 0x14006b750
   140018e0e:	mov    r9d,0x20019
   140018e14:	xor    r8d,r8d
   140018e17:	mov    rcx,0xffffffff80000002
   140018e1e:	mov    QWORD PTR [rsp+0x20],rax
   140018e23:	mov    DWORD PTR [rbx+0xa8],0x5dc
   140018e2d:	mov    DWORD PTR [rsp+0x40],0x5dc
   140018e35:	call   QWORD PTR [rip+0x4f215]        # 0x140068050
   140018e3b:	mov    rcx,QWORD PTR [rsp+0x58]
   140018e40:	test   rcx,rcx
   140018e43:	je     0x140018e96
   140018e45:	lea    rax,[rsp+0x48]
   140018e4a:	lea    r9,[rsp+0x50]
   140018e4f:	lea    rdx,[rip+0x5561a]        # 0x14006e470
   140018e56:	mov    QWORD PTR [rsp+0x28],rax
   140018e5b:	lea    rax,[rsp+0x40]
   140018e60:	xor    r8d,r8d
   140018e63:	mov    QWORD PTR [rsp+0x20],rax
   140018e68:	mov    DWORD PTR [rsp+0x48],0x4
   140018e70:	call   QWORD PTR [rip+0x4f1e2]        # 0x140068058
   140018e76:	mov    rcx,QWORD PTR [rsp+0x58]
   140018e7b:	call   QWORD PTR [rip+0x4f1c7]        # 0x140068048
   140018e81:	mov    r11d,DWORD PTR [rsp+0x40]
   140018e86:	mov    rax,rbx
   140018e89:	mov    DWORD PTR [rbx+0xa8],r11d
   140018e90:	add    rsp,0x30
   140018e94:	pop    rbx
   140018e95:	ret    
   140018e96:	mov    eax,DWORD PTR [rsp+0x40]
   140018e9a:	mov    DWORD PTR [rbx+0xa8],eax
   140018ea0:	mov    rax,rbx
   140018ea3:	add    rsp,0x30
   140018ea7:	pop    rbx
   140018ea8:	ret    
   140018ea9:	int3   
   140018eaa:	int3   
   140018eab:	int3   
   140018eac:	int3   
   140018ead:	int3   
   140018eae:	int3   
   140018eaf:	int3   
   140018eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140018eb5:	push   rdi
   140018eb6:	sub    rsp,0x20
   140018eba:	mov    ebx,edx
   140018ebc:	mov    rdi,rcx
   140018ebf:	call   0x140018ee0
   140018ec4:	test   bl,0x1
   140018ec7:	je     0x140018ed1
   140018ec9:	mov    rcx,rdi
   140018ecc:	call   0x1400330c0
   140018ed1:	mov    rax,rdi
   140018ed4:	mov    rbx,QWORD PTR [rsp+0x30]
   140018ed9:	add    rsp,0x20
   140018edd:	pop    rdi
   140018ede:	ret    
   140018edf:	int3   
   140018ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140018ee5:	push   rbx
   140018ee6:	sub    rsp,0x30
   140018eea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018ef3:	mov    rbx,rcx
   140018ef6:	lea    rax,[rip+0x556fb]        # 0x14006e5f8
   140018efd:	mov    QWORD PTR [rcx],rax
   140018f00:	lea    rax,[rip+0x55719]        # 0x14006e620
   140018f07:	mov    QWORD PTR [rcx+0x48],rax
   140018f0b:	mov    rdx,QWORD PTR [rcx+0xb0]
   140018f12:	test   rdx,rdx
   140018f15:	je     0x140018f2c
   140018f17:	mov    rcx,QWORD PTR [rcx+0x8]
   140018f1b:	call   QWORD PTR [rip+0x4f70f]        # 0x140068630
   140018f21:	mov    QWORD PTR [rbx+0xb0],0x0
   140018f2c:	mov    rcx,QWORD PTR [rbx+0xa0]
   140018f33:	test   rcx,rcx
   140018f36:	je     0x140018f48
   140018f38:	call   0x14001e810
   140018f3d:	mov    QWORD PTR [rbx+0xa0],0x0
   140018f48:	lea    rax,[rip+0x54809]        # 0x14006d758
   140018f4f:	mov    QWORD PTR [rbx+0x50],rax
   140018f53:	mov    rcx,QWORD PTR [rbx+0x78]
   140018f57:	test   rcx,rcx
   140018f5a:	je     0x140018f62
   140018f5c:	call   0x140042c44
   140018f61:	nop
   140018f62:	mov    rcx,QWORD PTR [rbx+0x28]
   140018f66:	test   rcx,rcx
   140018f69:	je     0x140018f70
   140018f6b:	call   0x140042c44
   140018f70:	add    rsp,0x30
   140018f74:	pop    rbx
   140018f75:	ret    
   140018f76:	int3   
   140018f77:	int3   
   140018f78:	int3   
   140018f79:	int3   
   140018f7a:	int3   
   140018f7b:	int3   
   140018f7c:	int3   
   140018f7d:	int3   
   140018f7e:	int3   
   140018f7f:	int3   
   140018f80:	mov    rax,rsp
   140018f83:	push   rbp
   140018f84:	push   r12
   140018f86:	push   r13
   140018f88:	lea    rbp,[rax-0x5f]
   140018f8c:	sub    rsp,0xc0
   140018f93:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   140018f9b:	mov    QWORD PTR [rax+0x10],rbx
   140018f9f:	mov    QWORD PTR [rax+0x18],rsi
   140018fa3:	mov    QWORD PTR [rax+0x20],rdi
   140018fa7:	mov    rax,QWORD PTR [rip+0x6c0fa]        # 0x1400850a8
   140018fae:	xor    rax,rsp
   140018fb1:	mov    QWORD PTR [rbp+0x37],rax
   140018fb5:	mov    r12,rcx
   140018fb8:	xor    ebx,ebx
   140018fba:	mov    rax,QWORD PTR [rip+0x6facf]        # 0x140088a90
   140018fc1:	mov    QWORD PTR [rip+0x6fac8],rax        # 0x140088a90
   140018fc8:	lea    rdx,[rcx+0x90]
   140018fcf:	lea    rcx,[rip+0x6fa6a]        # 0x140088a40
   140018fd6:	call   0x140019640
   140018fdb:	mov    WORD PTR [rsp+0x30],ax
   140018fe0:	mov    QWORD PTR [rsp+0x28],rbx
   140018fe5:	mov    DWORD PTR [rsp+0x20],ebx
   140018fe9:	mov    r9d,0xcf0000
   140018fef:	lea    r8,[rip+0x5548a]        # 0x14006e480
   140018ff6:	lea    rdx,[rip+0x6f56b]        # 0x140088568
   140018ffd:	lea    rcx,[r12+0x50]
   140019002:	call   0x140019530
   140019007:	test   r12,r12
   14001900a:	lea    rax,[r12+0x48]
   14001900f:	jne    0x140019013
   140019011:	mov    eax,ebx
   140019013:	mov    QWORD PTR [r12+0x98],rax
   14001901b:	mov    r13d,0xf
   140019021:	mov    QWORD PTR [rbp-0x1],r13
   140019025:	mov    BYTE PTR [rbp-0x19],bl
   140019028:	mov    rcx,QWORD PTR [rip+0x52b11]        # 0x14006bb40
   14001902f:	mov    QWORD PTR [rbp-0x19],rcx
   140019033:	mov    eax,DWORD PTR [rip+0x52b0f]        # 0x14006bb48
   140019039:	mov    DWORD PTR [rbp-0x11],eax
   14001903c:	mov    QWORD PTR [rbp-0x9],0xc
   140019044:	lea    rax,[rbp-0x19]
   140019048:	cmp    r13,0x10
   14001904c:	cmovae rax,rcx
   140019050:	mov    BYTE PTR [rax+0xc],bl
   140019053:	lea    rcx,[rbp+0xf]
   140019057:	call   0x14000c350
   14001905c:	nop
   14001905d:	cmp    QWORD PTR [rbp+0x1f],0x0
   140019062:	je     0x140019143
   140019068:	lea    r8d,[r13-0xe]
   14001906c:	lea    rdx,[rip+0x52899]        # 0x14006b90c
   140019073:	lea    rcx,[rbp-0x19]
   140019077:	call   0x140008ee0
   14001907c:	or     r11,0xffffffffffffffff
   140019080:	mov    rsi,r11
   140019083:	mov    rax,QWORD PTR [rbp+0x1f]
   140019087:	cmp    rax,r11
   14001908a:	cmovb  rsi,rax
   14001908e:	mov    rcx,QWORD PTR [rbp-0x9]
   140019092:	sub    r11,rcx
   140019095:	cmp    r11,rsi
   140019098:	ja     0x1400190a7
   14001909a:	lea    rcx,[rip+0x522af]        # 0x14006b350
   1400190a1:	call   0x140032d00
   1400190a6:	int3   
   1400190a7:	test   rsi,rsi
   1400190aa:	je     0x140019143
   1400190b0:	lea    rdi,[rsi+rcx*1]
   1400190b4:	cmp    rdi,0xfffffffffffffffe
   1400190b8:	jbe    0x1400190c7
   1400190ba:	lea    rcx,[rip+0x5228f]        # 0x14006b350
   1400190c1:	call   0x140032d00
   1400190c6:	int3   
   1400190c7:	cmp    QWORD PTR [rbp-0x1],rdi
   1400190cb:	jae    0x1400190de
   1400190cd:	mov    r8,rcx
   1400190d0:	mov    rdx,rdi
   1400190d3:	lea    rcx,[rbp-0x19]
   1400190d7:	call   0x140002e40
   1400190dc:	jmp    0x1400190f8
   1400190de:	test   rdi,rdi
   1400190e1:	jne    0x1400190ff
   1400190e3:	mov    QWORD PTR [rbp-0x9],rbx
   1400190e7:	lea    rax,[rbp-0x19]
   1400190eb:	cmp    QWORD PTR [rbp-0x1],0x10
   1400190f0:	cmovae rax,QWORD PTR [rbp-0x19]
   1400190f5:	mov    BYTE PTR [rax],dil
   1400190f8:	mov    rcx,QWORD PTR [rbp-0x9]
   1400190fc:	test   rdi,rdi
   1400190ff:	setne  al
   140019102:	test   al,al
   140019104:	je     0x140019143
   140019106:	lea    rdx,[rbp+0xf]
   14001910a:	cmp    QWORD PTR [rbp+0x27],0x10
   14001910f:	cmovae rdx,QWORD PTR [rbp+0xf]
   140019114:	lea    rax,[rbp-0x19]
   140019118:	cmp    QWORD PTR [rbp-0x1],0x10
   14001911d:	cmovae rax,QWORD PTR [rbp-0x19]
   140019122:	add    rcx,rax
   140019125:	mov    r8,rsi
   140019128:	call   0x140033260
   14001912d:	mov    QWORD PTR [rbp-0x9],rdi
   140019131:	lea    rax,[rbp-0x19]
   140019135:	cmp    QWORD PTR [rbp-0x1],0x10
   14001913a:	cmovae rax,QWORD PTR [rbp-0x19]
   14001913f:	mov    BYTE PTR [rax+rdi*1],0x0
   140019143:	lea    rcx,[rbp-0x19]
   140019147:	cmp    QWORD PTR [rbp-0x1],0x10
   14001914c:	cmovae rcx,QWORD PTR [rbp-0x19]
   140019151:	call   0x14001e1d0
   140019156:	mov    QWORD PTR [r12+0xa0],rax
   14001915e:	mov    DWORD PTR [rbp-0x39],ebx
   140019161:	mov    QWORD PTR [rbp-0x31],rbx
   140019165:	lea    rax,[rbp-0x31]
   140019169:	mov    QWORD PTR [rsp+0x20],rax
   14001916e:	mov    r9d,0x20019
   140019174:	xor    r8d,r8d
   140019177:	lea    rdx,[rip+0x525d2]        # 0x14006b750
   14001917e:	mov    rcx,0xffffffff80000002
   140019185:	call   QWORD PTR [rip+0x4eec5]        # 0x140068050
   14001918b:	mov    rcx,QWORD PTR [rbp-0x31]
   14001918f:	test   rcx,rcx
   140019192:	je     0x1400191cb
   140019194:	mov    DWORD PTR [rbp-0x29],0x4
   14001919b:	lea    rax,[rbp-0x29]
   14001919f:	mov    QWORD PTR [rsp+0x28],rax
   1400191a4:	lea    rax,[rbp-0x39]
   1400191a8:	mov    QWORD PTR [rsp+0x20],rax
   1400191ad:	lea    r9,[rbp-0x25]
   1400191b1:	xor    r8d,r8d
   1400191b4:	lea    rdx,[rip+0x552d1]        # 0x14006e48c
   1400191bb:	call   QWORD PTR [rip+0x4ee97]        # 0x140068058
   1400191c1:	mov    rcx,QWORD PTR [rbp-0x31]
   1400191c5:	call   QWORD PTR [rip+0x4ee7d]        # 0x140068048
   1400191cb:	cmp    DWORD PTR [rbp-0x39],0x0
   1400191cf:	je     0x14001920b
   1400191d1:	lea    rax,[rip+0x552c0]        # 0x14006e498
   1400191d8:	mov    QWORD PTR [rsp+0x28],rax
   1400191dd:	lea    rax,[rip+0x522bc]        # 0x14006b4a0
   1400191e4:	mov    QWORD PTR [rsp+0x20],rax
   1400191e9:	xor    r9d,r9d
   1400191ec:	lea    edx,[r9+0x37]
   1400191f0:	lea    r8d,[r9+0x3]
   1400191f4:	lea    rcx,[rip+0x552d5]        # 0x14006e4d0
   1400191fb:	call   0x140003150
   140019200:	xor    edx,edx
   140019202:	mov    rcx,r12
   140019205:	call   0x140019270
   14001920a:	nop
   14001920b:	cmp    QWORD PTR [rbp+0x27],0x10
   140019210:	jb     0x14001921b
   140019212:	mov    rcx,QWORD PTR [rbp+0xf]
   140019216:	call   0x1400330c0
   14001921b:	mov    QWORD PTR [rbp+0x27],r13
   14001921f:	mov    QWORD PTR [rbp+0x1f],rbx
   140019223:	mov    BYTE PTR [rbp+0xf],0x0
   140019227:	cmp    QWORD PTR [rbp-0x1],0x10
   14001922c:	jb     0x140019237
   14001922e:	mov    rcx,QWORD PTR [rbp-0x19]
   140019232:	call   0x1400330c0
   140019237:	mov    eax,0x1
   14001923c:	mov    rcx,QWORD PTR [rbp+0x37]
   140019240:	xor    rcx,rsp
   140019243:	call   0x140032f00
   140019248:	lea    r11,[rsp+0xc0]
   140019250:	mov    rbx,QWORD PTR [r11+0x28]
   140019254:	mov    rsi,QWORD PTR [r11+0x30]
   140019258:	mov    rdi,QWORD PTR [r11+0x38]
   14001925c:	mov    rsp,r11
   14001925f:	pop    r13
   140019261:	pop    r12
   140019263:	pop    rbp
   140019264:	ret    
   140019265:	int3   
   140019266:	int3   
   140019267:	int3   
   140019268:	int3   
   140019269:	int3   
   14001926a:	int3   
   14001926b:	int3   
   14001926c:	int3   
   14001926d:	int3   
   14001926e:	int3   
   14001926f:	int3   
   140019270:	mov    QWORD PTR [rsp+0x10],rbx
   140019275:	mov    QWORD PTR [rsp+0x18],rsi
   14001927a:	push   rdi
   14001927b:	sub    rsp,0x40
   14001927f:	mov    rbx,rcx
   140019282:	mov    rcx,QWORD PTR [rcx+0xa0]
   140019289:	xor    edi,edi
   14001928b:	mov    esi,edx
   14001928d:	test   rcx,rcx
   140019290:	je     0x14001935a
   140019296:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14001929b:	xorpd  xmm6,xmm6
   14001929f:	lea    r8,[rsp+0x50]
   1400192a4:	lea    edx,[rdi+0x2]
   1400192a7:	movsd  QWORD PTR [rsp+0x50],xmm6
   1400192ad:	call   0x14001e970
   1400192b2:	test   esi,esi
   1400192b4:	je     0x1400192be
   1400192b6:	movsd  xmm6,QWORD PTR [rip+0x5e1e2]        # 0x1400774a0
   1400192be:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400192c5:	movapd xmm1,xmm6
   1400192c9:	call   0x14001e8b0
   1400192ce:	test   esi,esi
   1400192d0:	lea    rcx,[rip+0x551f9]        # 0x14006e4d0
   1400192d7:	setne  dil
   1400192db:	xor    r9d,r9d
   1400192de:	movzx  ebx,al
   1400192e1:	lea    rax,[rip+0x55240]        # 0x14006e528
   1400192e8:	lea    edx,[r9+0x4d]
   1400192ec:	lea    r8d,[r9+0x3]
   1400192f0:	mov    DWORD PTR [rsp+0x28],edi
   1400192f4:	mov    QWORD PTR [rsp+0x20],rax
   1400192f9:	call   0x140003150
   1400192fe:	lea    rdx,[rip+0x55187]        # 0x14006e48c
   140019305:	mov    r8d,edi
   140019308:	mov    rcx,0xffffffff80000002
   14001930f:	call   0x140015b50
   140019314:	xor    r9d,r9d
   140019317:	lea    rax,[rip+0x5522a]        # 0x14006e548
   14001931e:	movsd  xmm5,QWORD PTR [rsp+0x50]
   140019324:	movsd  QWORD PTR [rsp+0x28],xmm5
   14001932a:	lea    edx,[r9+0x50]
   14001932e:	lea    r8d,[r9+0x3]
   140019332:	lea    rcx,[rip+0x55197]        # 0x14006e4d0
   140019339:	mov    QWORD PTR [rsp+0x20],rax
   14001933e:	call   0x140003150
   140019343:	mov    eax,ebx
   140019345:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001934a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001934f:	mov    rsi,QWORD PTR [rsp+0x60]
   140019354:	add    rsp,0x40
   140019358:	pop    rdi
   140019359:	ret    
   14001935a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001935f:	mov    rsi,QWORD PTR [rsp+0x60]
   140019364:	mov    eax,edi
   140019366:	add    rsp,0x40
   14001936a:	pop    rdi
   14001936b:	ret    
   14001936c:	int3   
   14001936d:	int3   
   14001936e:	int3   
   14001936f:	int3   
   140019370:	rex push rbx
   140019372:	sub    rsp,0x30
   140019376:	mov    rbx,rcx
   140019379:	cmp    r8d,0xa
   14001937d:	ja     0x140019432
   140019383:	je     0x1400193fc
   140019385:	test   r8d,r8d
   140019388:	je     0x1400193ee
   14001938a:	cmp    r8d,0x4
   14001938e:	je     0x1400193ab
   140019390:	cmp    r8d,0x7
   140019394:	jne    0x140019498
   14001939a:	lea    rax,[rip+0x551f7]        # 0x14006e598
   1400193a1:	mov    edx,0x93
   1400193a6:	jmp    0x14001945b
   1400193ab:	lea    rax,[rip+0x551fe]        # 0x14006e5b0
   1400193b2:	xor    r9d,r9d
   1400193b5:	lea    rcx,[rip+0x55114]        # 0x14006e4d0
   1400193bc:	mov    QWORD PTR [rsp+0x28],rax
   1400193c1:	lea    rax,[rip+0x520d8]        # 0x14006b4a0
   1400193c8:	lea    r8d,[r9+0x3]
   1400193cc:	mov    edx,0x98
   1400193d1:	mov    QWORD PTR [rsp+0x20],rax
   1400193d6:	call   0x140003150
   1400193db:	lea    rcx,[rbx-0x48]
   1400193df:	mov    edx,0x1
   1400193e4:	add    rsp,0x30
   1400193e8:	pop    rbx
   1400193e9:	jmp    0x140019270
   1400193ee:	lea    rax,[rip+0x551e3]        # 0x14006e5d8
   1400193f5:	mov    edx,0xa1
   1400193fa:	jmp    0x140019408
   1400193fc:	lea    rax,[rip+0x5515d]        # 0x14006e560
   140019403:	mov    edx,0x8a
   140019408:	mov    QWORD PTR [rsp+0x28],rax
   14001940d:	xor    r9d,r9d
   140019410:	lea    rax,[rip+0x52089]        # 0x14006b4a0
   140019417:	lea    r8d,[r9+0x3]
   14001941b:	lea    rcx,[rip+0x550ae]        # 0x14006e4d0
   140019422:	mov    QWORD PTR [rsp+0x20],rax
   140019427:	call   0x140003150
   14001942c:	add    rsp,0x30
   140019430:	pop    rbx
   140019431:	ret    
   140019432:	cmp    r8d,0x12
   140019436:	je     0x14001944f
   140019438:	cmp    r8d,0x8013
   14001943f:	jne    0x140019498
   140019441:	lea    rax,[rip+0x55178]        # 0x14006e5c0
   140019448:	mov    edx,0x9d
   14001944d:	jmp    0x140019408
   14001944f:	lea    rax,[rip+0x5512a]        # 0x14006e580
   140019456:	mov    edx,0x8e
   14001945b:	mov    QWORD PTR [rsp+0x28],rax
   140019460:	xor    r9d,r9d
   140019463:	lea    rax,[rip+0x52036]        # 0x14006b4a0
   14001946a:	lea    r8d,[r9+0x3]
   14001946e:	lea    rcx,[rip+0x5505b]        # 0x14006e4d0
   140019475:	mov    QWORD PTR [rsp+0x20],rax
   14001947a:	call   0x140003150
   14001947f:	mov    r8d,DWORD PTR [rbx+0x60]
   140019483:	mov    rcx,QWORD PTR [rbx-0x40]
   140019487:	xor    r9d,r9d
   14001948a:	lea    edx,[r9+0x1]
   14001948e:	call   QWORD PTR [rip+0x4f18c]        # 0x140068620
   140019494:	mov    QWORD PTR [rbx+0x68],rax
   140019498:	add    rsp,0x30
   14001949c:	pop    rbx
   14001949d:	ret    
   14001949e:	int3   
   14001949f:	int3   
   1400194a0:	mov    QWORD PTR [rsp+0x10],rbp
   1400194a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400194aa:	push   rdi
   1400194ab:	push   r12
   1400194ad:	push   r13
   1400194af:	sub    rsp,0x20
   1400194b3:	mov    rbp,r9
   1400194b6:	mov    r12,r8
   1400194b9:	mov    r13d,edx
   1400194bc:	mov    rsi,rcx
   1400194bf:	call   0x140018ae0
   1400194c4:	mov    rdi,rax
   1400194c7:	test   rax,rax
   1400194ca:	je     0x140019515
   1400194cc:	mov    QWORD PTR [rax+0x8],rsi
   1400194d0:	mov    rax,QWORD PTR [rax]
   1400194d3:	mov    rcx,rdi
   1400194d6:	mov    QWORD PTR [rsp+0x40],rbx
   1400194db:	call   QWORD PTR [rax+0x10]
   1400194de:	lea    rcx,[rdi+0x28]
   1400194e2:	mov    rdx,rax
   1400194e5:	mov    r8,rdi
   1400194e8:	call   0x140018b60
   1400194ed:	mov    rbx,QWORD PTR [rdi+0x28]
   1400194f1:	mov    edx,0xfffffffc
   1400194f6:	mov    r8,rbx
   1400194f9:	mov    rcx,rsi
   1400194fc:	call   QWORD PTR [rip+0x4f13e]        # 0x140068640
   140019502:	mov    r9,rbp
   140019505:	mov    r8,r12
   140019508:	mov    edx,r13d
   14001950b:	mov    rcx,rsi
   14001950e:	call   rbx
   140019510:	mov    rbx,QWORD PTR [rsp+0x40]
   140019515:	mov    rbp,QWORD PTR [rsp+0x48]
   14001951a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001951f:	add    rsp,0x20
   140019523:	pop    r13
   140019525:	pop    r12
   140019527:	pop    rdi
   140019528:	ret    
   140019529:	int3   
   14001952a:	int3   
   14001952b:	int3   
   14001952c:	int3   
   14001952d:	int3   
   14001952e:	int3   
   14001952f:	int3   
   140019530:	mov    QWORD PTR [rsp+0x8],rbx
   140019535:	mov    QWORD PTR [rsp+0x18],rbp
   14001953a:	mov    QWORD PTR [rsp+0x10],rdx
   14001953f:	push   rsi
   140019540:	sub    rsp,0x60
   140019544:	mov    rbp,r8
   140019547:	mov    rbx,rcx
   14001954a:	xor    edx,edx
   14001954c:	add    rcx,0x28
   140019550:	xor    r8d,r8d
   140019553:	mov    esi,r9d
   140019556:	call   0x140018b60
   14001955b:	test   eax,eax
   14001955d:	jne    0x14001957d
   14001955f:	lea    ecx,[rax+0xe]
   140019562:	call   QWORD PTR [rip+0x4ec00]        # 0x140068168
   140019568:	xor    eax,eax
   14001956a:	mov    rbx,QWORD PTR [rsp+0x70]
   14001956f:	mov    rbp,QWORD PTR [rsp+0x80]
   140019577:	add    rsp,0x60
   14001957b:	pop    rsi
   14001957c:	ret    
   14001957d:	cmp    WORD PTR [rsp+0xa0],0x0
   140019586:	je     0x140019568
   140019588:	lea    rcx,[rbx+0x10]
   14001958c:	mov    rdx,rbx
   14001958f:	call   0x140018a70
   140019594:	mov    r11,QWORD PTR [rsp+0x98]
   14001959c:	test   r11,r11
   14001959f:	jne    0x1400195b1
   1400195a1:	bt     esi,0x1e
   1400195a5:	cmovb  r11,rbx
   1400195a9:	mov    QWORD PTR [rsp+0x98],r11
   1400195b1:	mov    rax,QWORD PTR [rsp+0x78]
   1400195b6:	movzx  edx,WORD PTR [rsp+0xa0]
   1400195be:	lea    rcx,[rip+0x6efa3]        # 0x140088568
   1400195c5:	test   rax,rax
   1400195c8:	cmovne rcx,rax
   1400195cc:	mov    rax,QWORD PTR [rip+0x70ce5]        # 0x14008a2b8
   1400195d3:	mov    QWORD PTR [rsp+0x78],rcx
   1400195d8:	mov    r10d,DWORD PTR [rcx+0x4]
   1400195dc:	mov    ebx,DWORD PTR [rcx]
   1400195de:	mov    r8d,DWORD PTR [rcx+0x8]
   1400195e2:	mov    r9d,DWORD PTR [rcx+0xc]
   1400195e6:	xor    ecx,ecx
   1400195e8:	mov    QWORD PTR [rsp+0x58],rcx
   1400195ed:	mov    QWORD PTR [rsp+0x50],rax
   1400195f2:	mov    QWORD PTR [rsp+0x48],r11
   1400195f7:	mov    QWORD PTR [rsp+0x40],rcx
   1400195fc:	mov    ecx,DWORD PTR [rsp+0x90]
   140019603:	sub    r9d,r10d
   140019606:	mov    DWORD PTR [rsp+0x38],r9d
   14001960b:	sub    r8d,ebx
   14001960e:	mov    r9d,esi
   140019611:	mov    DWORD PTR [rsp+0x30],r8d
   140019616:	mov    DWORD PTR [rsp+0x28],r10d
   14001961b:	mov    r8,rbp
   14001961e:	mov    DWORD PTR [rsp+0x20],ebx
   140019622:	call   QWORD PTR [rip+0x4efc8]        # 0x1400685f0
   140019628:	mov    rbx,QWORD PTR [rsp+0x70]
   14001962d:	mov    rbp,QWORD PTR [rsp+0x80]
   140019635:	add    rsp,0x60
   140019639:	pop    rsi
   14001963a:	ret    
   14001963b:	int3   
   14001963c:	int3   
   14001963d:	int3   
   14001963e:	int3   
   14001963f:	int3   
   140019640:	mov    rax,rsp
   140019643:	mov    QWORD PTR [rax+0x18],rsi
   140019647:	push   rdi
   140019648:	sub    rsp,0xc0
   14001964f:	mov    rsi,rdx
   140019652:	mov    rdi,rcx
   140019655:	test   rcx,rcx
   140019658:	je     0x140019829
   14001965e:	test   rdx,rdx
   140019661:	je     0x140019829
   140019667:	cmp    WORD PTR [rcx+0x6c],0x0
   14001966c:	mov    QWORD PTR [rax+0x8],rbx
   140019670:	mov    QWORD PTR [rax+0x10],rbp
   140019674:	jne    0x140019812
   14001967a:	lea    rcx,[rip+0x70c97]        # 0x14008a318
   140019681:	call   QWORD PTR [rip+0x4eae9]        # 0x140068170
   140019687:	cmp    WORD PTR [rdi+0x6c],0x0
   14001968c:	jne    0x140019805
   140019692:	mov    rdx,QWORD PTR [rdi+0x50]
   140019696:	test   rdx,rdx
   140019699:	je     0x14001974d
   14001969f:	mov    rbx,QWORD PTR [rdi+0x40]
   1400196a3:	mov    rbp,QWORD PTR [rdi+0x8]
   1400196a7:	lea    r8,[rsp+0x20]
   1400196ac:	xor    ecx,ecx
   1400196ae:	mov    DWORD PTR [rsp+0x20],0x50
   1400196b6:	call   QWORD PTR [rip+0x4ee9c]        # 0x140068558
   1400196bc:	test   eax,eax
   1400196be:	jne    0x14001970f
   1400196c0:	mov    rdx,QWORD PTR [rdi+0x50]
   1400196c4:	mov    rcx,QWORD PTR [rip+0x70bed]        # 0x14008a2b8
   1400196cb:	lea    r8,[rsp+0x20]
   1400196d0:	call   QWORD PTR [rip+0x4ee82]        # 0x140068558
   1400196d6:	test   eax,eax
   1400196d8:	jne    0x14001970f
   1400196da:	lea    rcx,[rip+0x70c37]        # 0x14008a318
   1400196e1:	call   QWORD PTR [rip+0x4ea69]        # 0x140068150
   1400196e7:	xor    r11d,r11d
   1400196ea:	movzx  eax,r11w
   1400196ee:	mov    rbx,QWORD PTR [rsp+0xd0]
   1400196f6:	mov    rbp,QWORD PTR [rsp+0xd8]
   1400196fe:	mov    rsi,QWORD PTR [rsp+0xe0]
   140019706:	add    rsp,0xc0
   14001970d:	pop    rdi
   14001970e:	ret    
   14001970f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140019714:	movaps xmm1,XMMWORD PTR [rsp+0x30]
   140019719:	movups XMMWORD PTR [rdi],xmm0
   14001971c:	movups XMMWORD PTR [rdi+0x10],xmm1
   140019720:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140019725:	movaps xmm1,XMMWORD PTR [rsp+0x50]
   14001972a:	movups XMMWORD PTR [rdi+0x20],xmm0
   14001972e:	movups XMMWORD PTR [rdi+0x30],xmm1
   140019732:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140019737:	movups XMMWORD PTR [rdi+0x40],xmm0
   14001973b:	mov    rax,QWORD PTR [rdi+0x8]
   14001973f:	mov    QWORD PTR [rdi+0x40],rbx
   140019743:	mov    QWORD PTR [rdi+0x8],rbp
   140019747:	mov    QWORD PTR [rdi+0x58],rax
   14001974b:	jmp    0x14001976d
   14001974d:	mov    rcx,QWORD PTR [rip+0x70b6c]        # 0x14008a2c0
   140019754:	mov    rdx,QWORD PTR [rdi+0x60]
   140019758:	xor    r11d,r11d
   14001975b:	cmp    DWORD PTR [rdi+0x68],r11d
   14001975f:	cmovne rcx,r11
   140019763:	call   QWORD PTR [rip+0x4edf7]        # 0x140068560
   140019769:	mov    QWORD PTR [rdi+0x28],rax
   14001976d:	mov    rax,QWORD PTR [rip+0x70b44]        # 0x14008a2b8
   140019774:	and    DWORD PTR [rdi+0x4],0xffffbfff
   14001977b:	cmp    QWORD PTR [rdi+0x40],0x0
   140019780:	mov    QWORD PTR [rdi+0x18],rax
   140019784:	jne    0x1400197a5
   140019786:	lea    rbx,[rdi+0x6e]
   14001978a:	lea    r8,[rip+0x54cd7]        # 0x14006e468
   140019791:	mov    r9,rdi
   140019794:	mov    rcx,rbx
   140019797:	mov    edx,0x45
   14001979c:	call   0x1400339ac
   1400197a1:	mov    QWORD PTR [rdi+0x40],rbx
   1400197a5:	movups xmm0,XMMWORD PTR [rdi]
   1400197a8:	movups xmm1,XMMWORD PTR [rdi+0x10]
   1400197ac:	mov    rdx,QWORD PTR [rdi+0x40]
   1400197b0:	mov    rcx,QWORD PTR [rdi+0x18]
   1400197b4:	lea    r8,[rsp+0x70]
   1400197b9:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400197be:	movaps XMMWORD PTR [rsp+0x80],xmm1
   1400197c6:	movups xmm0,XMMWORD PTR [rdi+0x20]
   1400197ca:	movups xmm1,XMMWORD PTR [rdi+0x30]
   1400197ce:	movaps XMMWORD PTR [rsp+0x90],xmm0
   1400197d6:	movaps XMMWORD PTR [rsp+0xa0],xmm1
   1400197de:	movups xmm0,XMMWORD PTR [rdi+0x40]
   1400197e2:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   1400197ea:	call   QWORD PTR [rip+0x4ed68]        # 0x140068558
   1400197f0:	mov    WORD PTR [rdi+0x6c],ax
   1400197f4:	test   ax,ax
   1400197f7:	jne    0x140019805
   1400197f9:	mov    rcx,rdi
   1400197fc:	call   0x140018bf0
   140019801:	mov    WORD PTR [rdi+0x6c],ax
   140019805:	lea    rcx,[rip+0x70b0c]        # 0x14008a318
   14001980c:	call   QWORD PTR [rip+0x4e93e]        # 0x140068150
   140019812:	cmp    QWORD PTR [rdi+0x50],0x0
   140019817:	je     0x140019820
   140019819:	mov    rax,QWORD PTR [rdi+0x58]
   14001981d:	mov    QWORD PTR [rsi],rax
   140019820:	movzx  eax,WORD PTR [rdi+0x6c]
   140019824:	jmp    0x1400196ee
   140019829:	mov    rsi,QWORD PTR [rsp+0xe0]
   140019831:	xor    r11d,r11d
   140019834:	movzx  eax,r11w
   140019838:	add    rsp,0xc0
   14001983f:	pop    rdi
   140019840:	ret    
   140019841:	int3   
   140019842:	int3   
   140019843:	int3   
   140019844:	int3   
   140019845:	int3   
   140019846:	int3   
   140019847:	int3   
   140019848:	int3   
   140019849:	int3   
   14001984a:	int3   
   14001984b:	int3   
   14001984c:	int3   
   14001984d:	int3   
   14001984e:	int3   
   14001984f:	int3   
   140019850:	mov    QWORD PTR [rsp+0x8],rbx
   140019855:	push   rdi
   140019856:	sub    rsp,0x20
   14001985a:	mov    ebx,edx
   14001985c:	mov    rdi,rcx
   14001985f:	call   0x140019880
   140019864:	test   bl,0x1
   140019867:	je     0x140019871
   140019869:	mov    rcx,rdi
   14001986c:	call   0x1400330c0
   140019871:	mov    rax,rdi
   140019874:	mov    rbx,QWORD PTR [rsp+0x30]
   140019879:	add    rsp,0x20
   14001987d:	pop    rdi
   14001987e:	ret    
   14001987f:	int3   
   140019880:	rex push rbx
   140019882:	sub    rsp,0x20
   140019886:	lea    rax,[rip+0x54e4b]        # 0x14006e6d8
   14001988d:	xor    ebx,ebx
   14001988f:	mov    QWORD PTR [rcx],rax
   140019892:	mov    rax,QWORD PTR [rcx+0x8]
   140019896:	test   rax,rax
   140019899:	je     0x1400198c0
   14001989b:	mov    QWORD PTR [rcx+0x8],rbx
   14001989f:	mov    QWORD PTR [rcx+0x10],rbx
   1400198a3:	mov    QWORD PTR [rcx+0x18],rbx
   1400198a7:	mov    QWORD PTR [rcx+0x20],rbx
   1400198ab:	mov    QWORD PTR [rcx+0x2c],0xffffffffffffffff
   1400198b3:	mov    WORD PTR [rcx+0x28],bx
   1400198b7:	mov    rcx,rax
   1400198ba:	call   QWORD PTR [rip+0x4e7d8]        # 0x140068098
   1400198c0:	lea    rcx,[rip+0x70a99]        # 0x14008a360
   1400198c7:	call   QWORD PTR [rip+0x4e8a3]        # 0x140068170
   1400198cd:	dec    DWORD PTR [rip+0x70ab5]        # 0x14008a388
   1400198d3:	jne    0x140019908
   1400198d5:	lea    rcx,[rip+0x70a84]        # 0x14008a360
   1400198dc:	call   QWORD PTR [rip+0x4e88e]        # 0x140068170
   1400198e2:	mov    rcx,QWORD PTR [rip+0x70a6f]        # 0x14008a358
   1400198e9:	test   rcx,rcx
   1400198ec:	je     0x1400198f4
   1400198ee:	call   QWORD PTR [rip+0x4ed74]        # 0x140068668
   1400198f4:	lea    rcx,[rip+0x70a65]        # 0x14008a360
   1400198fb:	mov    QWORD PTR [rip+0x70a56],rbx        # 0x14008a358
   140019902:	call   QWORD PTR [rip+0x4e848]        # 0x140068150
   140019908:	lea    rcx,[rip+0x70a51]        # 0x14008a360
   14001990f:	add    rsp,0x20
   140019913:	pop    rbx
   140019914:	rex.W jmp QWORD PTR [rip+0x4e835]        # 0x140068150
   14001991b:	int3   
   14001991c:	int3   
   14001991d:	int3   
   14001991e:	int3   
   14001991f:	int3   
   140019920:	mov    QWORD PTR [rsp+0x20],rbx
   140019925:	push   rbp
   140019926:	push   rsi
   140019927:	push   rdi
   140019928:	sub    rsp,0x70
   14001992c:	mov    esi,r9d
   14001992f:	mov    ebp,r8d
   140019932:	mov    rdi,rdx
   140019935:	mov    rbx,rcx
   140019938:	test   rdx,rdx
   14001993b:	jne    0x14001994f
   14001993d:	xor    eax,eax
   14001993f:	mov    rbx,QWORD PTR [rsp+0xa8]
   140019947:	add    rsp,0x70
   14001994b:	pop    rdi
   14001994c:	pop    rsi
   14001994d:	pop    rbp
   14001994e:	ret    
   14001994f:	inc    DWORD PTR [rcx+0x40]
   140019952:	mov    QWORD PTR [rsp+0x90],r12
   14001995a:	mov    QWORD PTR [rsp+0xa0],r13
   140019962:	xor    r13d,r13d
   140019965:	lea    r12,[rip+0x70a24]        # 0x14008a390
   14001996c:	cmp    QWORD PTR [rcx+0x38],r13
   140019970:	jne    0x1400199b6
   140019972:	mov    ecx,r13d
   140019975:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019980:	movsxd rax,ecx
   140019983:	mov    r8,r13
   140019986:	xchg   QWORD PTR [r12+rax*8],r8
   14001998a:	test   r8,r8
   14001998d:	jne    0x1400199a1
   14001998f:	inc    ecx
   140019991:	cmp    ecx,0x4
   140019994:	jl     0x140019980
   140019996:	xor    ecx,ecx
   140019998:	call   QWORD PTR [rip+0x4e70a]        # 0x1400680a8
   14001999e:	mov    r8,rax
   1400199a1:	mov    rdx,QWORD PTR [rbx+0x8]
   1400199a5:	mov    rcx,r8
   1400199a8:	mov    QWORD PTR [rbx+0x38],r8
   1400199ac:	call   QWORD PTR [rip+0x4e6ee]        # 0x1400680a0
   1400199b2:	mov    QWORD PTR [rbx+0x48],rax
   1400199b6:	mov    edx,DWORD PTR [rbx+0x2c]
   1400199b9:	cmp    edx,0xffffffff
   1400199bc:	jne    0x140019a83
   1400199c2:	cmp    DWORD PTR [rbx+0x30],0xffffffff
   1400199c6:	jne    0x140019a7e
   1400199cc:	mov    r9d,DWORD PTR [rsp+0xb0]
   1400199d4:	mov    r8d,esi
   1400199d7:	mov    edx,ebp
   1400199d9:	mov    rcx,rdi
   1400199dc:	cmp    BYTE PTR [rbx+0x29],r13b
   1400199e0:	je     0x140019a37
   1400199e2:	mov    DWORD PTR [rsp+0x98],0x1ff0000
   1400199ed:	mov    eax,DWORD PTR [rsp+0x98]
   1400199f4:	mov    DWORD PTR [rsp+0x50],eax
   1400199f8:	mov    eax,DWORD PTR [rsp+0xc8]
   1400199ff:	mov    DWORD PTR [rsp+0x48],eax
   140019a03:	mov    eax,DWORD PTR [rsp+0xc0]
   140019a0a:	mov    DWORD PTR [rsp+0x40],eax
   140019a0e:	mov    rax,QWORD PTR [rbx+0x38]
   140019a12:	mov    DWORD PTR [rsp+0x38],r13d
   140019a17:	mov    DWORD PTR [rsp+0x30],r13d
   140019a1c:	mov    QWORD PTR [rsp+0x28],rax
   140019a21:	mov    eax,DWORD PTR [rsp+0xb8]
   140019a28:	mov    DWORD PTR [rsp+0x20],eax
   140019a2c:	call   QWORD PTR [rip+0x4ea46]        # 0x140068478
   140019a32:	jmp    0x140019b0a
   140019a37:	mov    eax,DWORD PTR [rsp+0xc8]
   140019a3e:	mov    DWORD PTR [rsp+0x50],0xcc0020
   140019a46:	mov    DWORD PTR [rsp+0x48],eax
   140019a4a:	mov    eax,DWORD PTR [rsp+0xc0]
   140019a51:	mov    DWORD PTR [rsp+0x40],eax
   140019a55:	mov    rax,QWORD PTR [rbx+0x38]
   140019a59:	mov    DWORD PTR [rsp+0x38],r13d
   140019a5e:	mov    DWORD PTR [rsp+0x30],r13d
   140019a63:	mov    QWORD PTR [rsp+0x28],rax
   140019a68:	mov    eax,DWORD PTR [rsp+0xb8]
   140019a6f:	mov    DWORD PTR [rsp+0x20],eax
   140019a73:	call   QWORD PTR [rip+0x4e60f]        # 0x140068088
   140019a79:	jmp    0x140019b0a
   140019a7e:	cmp    edx,0xffffffff
   140019a81:	je     0x140019ab7
   140019a83:	mov    rcx,QWORD PTR [rbx+0x38]
   140019a87:	lea    r9,[rsp+0x60]
   140019a8c:	mov    r8d,0x1
   140019a92:	call   QWORD PTR [rip+0x4e618]        # 0x1400680b0
   140019a98:	movzx  r11d,BYTE PTR [rsp+0x61]
   140019a9e:	movzx  eax,BYTE PTR [rsp+0x60]
   140019aa3:	shl    eax,0x10
   140019aa6:	shl    r11d,0x8
   140019aaa:	or     r11d,eax
   140019aad:	movzx  eax,BYTE PTR [rsp+0x62]
   140019ab2:	or     r11d,eax
   140019ab5:	jmp    0x140019abb
   140019ab7:	mov    r11d,DWORD PTR [rbx+0x30]
   140019abb:	mov    eax,DWORD PTR [rsp+0xc8]
   140019ac2:	mov    r9d,DWORD PTR [rsp+0xb0]
   140019aca:	mov    DWORD PTR [rsp+0x50],r11d
   140019acf:	mov    DWORD PTR [rsp+0x48],eax
   140019ad3:	mov    eax,DWORD PTR [rsp+0xc0]
   140019ada:	mov    r8d,esi
   140019add:	mov    DWORD PTR [rsp+0x40],eax
   140019ae1:	mov    rax,QWORD PTR [rbx+0x38]
   140019ae5:	mov    DWORD PTR [rsp+0x38],r13d
   140019aea:	mov    DWORD PTR [rsp+0x30],r13d
   140019aef:	mov    QWORD PTR [rsp+0x28],rax
   140019af4:	mov    eax,DWORD PTR [rsp+0xb8]
   140019afb:	mov    edx,ebp
   140019afd:	mov    rcx,rdi
   140019b00:	mov    DWORD PTR [rsp+0x20],eax
   140019b04:	call   QWORD PTR [rip+0x4e966]        # 0x140068470
   140019b0a:	dec    DWORD PTR [rbx+0x40]
   140019b0d:	mov    edi,eax
   140019b0f:	jne    0x140019b4d
   140019b11:	mov    rdx,QWORD PTR [rbx+0x48]
   140019b15:	mov    rcx,QWORD PTR [rbx+0x38]
   140019b19:	call   QWORD PTR [rip+0x4e581]        # 0x1400680a0
   140019b1f:	mov    rcx,QWORD PTR [rbx+0x38]
   140019b23:	mov    edx,r13d
   140019b26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019b30:	movsxd rax,edx
   140019b33:	xchg   QWORD PTR [r12+rax*8],rcx
   140019b37:	test   rcx,rcx
   140019b3a:	je     0x140019b49
   140019b3c:	inc    edx
   140019b3e:	cmp    edx,0x4
   140019b41:	jl     0x140019b30
   140019b43:	call   QWORD PTR [rip+0x4e537]        # 0x140068080
   140019b49:	mov    QWORD PTR [rbx+0x38],r13
   140019b4d:	mov    r13,QWORD PTR [rsp+0xa0]
   140019b55:	mov    r12,QWORD PTR [rsp+0x90]
   140019b5d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140019b65:	mov    eax,edi
   140019b67:	add    rsp,0x70
   140019b6b:	pop    rdi
   140019b6c:	pop    rsi
   140019b6d:	pop    rbp
   140019b6e:	ret    
   140019b6f:	int3   
   140019b70:	rex push rbx
   140019b72:	sub    rsp,0xa0
   140019b79:	mov    rax,QWORD PTR [rip+0x6b528]        # 0x1400850a8
   140019b80:	xor    rax,rsp
   140019b83:	mov    QWORD PTR [rsp+0x90],rax
   140019b8b:	mov    rbx,rcx
   140019b8e:	mov    rcx,QWORD PTR [rcx+0x8]
   140019b92:	lea    r8,[rsp+0x20]
   140019b97:	mov    edx,0x68
   140019b9c:	call   QWORD PTR [rip+0x4e516]        # 0x1400680b8
   140019ba2:	mov    DWORD PTR [rbx+0x2c],0xffffffff
   140019ba9:	cmp    eax,0x68
   140019bac:	jne    0x140019c20
   140019bae:	mov    r8d,DWORD PTR [rsp+0x44]
   140019bb3:	mov    ecx,DWORD PTR [rsp+0x48]
   140019bb7:	mov    BYTE PTR [rbx+0x28],0x1
   140019bbb:	mov    eax,ecx
   140019bbd:	mov    DWORD PTR [rbx+0x18],r8d
   140019bc1:	mov    BYTE PTR [rbx+0x29],0x0
   140019bc5:	cdq    
   140019bc6:	mov    r9d,eax
   140019bc9:	movzx  eax,WORD PTR [rsp+0x4e]
   140019bce:	xor    r9d,edx
   140019bd1:	mov    DWORD PTR [rbx+0x24],eax
   140019bd4:	sub    r9d,edx
   140019bd7:	mov    DWORD PTR [rbx+0x1c],r9d
   140019bdb:	imul   eax,r8d
   140019bdf:	mov    r8,QWORD PTR [rsp+0x38]
   140019be4:	add    eax,0x1f
   140019be7:	cdq    
   140019be8:	mov    QWORD PTR [rbx+0x10],r8
   140019bec:	and    edx,0x1f
   140019bef:	add    edx,eax
   140019bf1:	xor    eax,eax
   140019bf3:	sar    edx,0x5
   140019bf6:	shl    edx,0x2
   140019bf9:	test   ecx,ecx
   140019bfb:	setg   al
   140019bfe:	mov    DWORD PTR [rbx+0x20],edx
   140019c01:	inc    eax
   140019c03:	cmp    eax,0x2
   140019c06:	jne    0x140019c43
   140019c08:	lea    eax,[r9-0x1]
   140019c0c:	imul   eax,edx
   140019c0f:	movsxd rcx,eax
   140019c12:	add    rcx,r8
   140019c15:	neg    edx
   140019c17:	mov    DWORD PTR [rbx+0x20],edx
   140019c1a:	mov    QWORD PTR [rbx+0x10],rcx
   140019c1e:	jmp    0x140019c43
   140019c20:	mov    eax,DWORD PTR [rsp+0x24]
   140019c24:	mov    DWORD PTR [rbx+0x18],eax
   140019c27:	mov    eax,DWORD PTR [rsp+0x28]
   140019c2b:	mov    DWORD PTR [rbx+0x1c],eax
   140019c2e:	movzx  eax,WORD PTR [rsp+0x32]
   140019c33:	mov    DWORD PTR [rbx+0x24],eax
   140019c36:	xor    eax,eax
   140019c38:	mov    DWORD PTR [rbx+0x20],eax
   140019c3b:	mov    QWORD PTR [rbx+0x10],rax
   140019c3f:	mov    WORD PTR [rbx+0x28],ax
   140019c43:	mov    rcx,QWORD PTR [rsp+0x90]
   140019c4b:	xor    rcx,rsp
   140019c4e:	call   0x140032f00
   140019c53:	add    rsp,0xa0
   140019c5a:	pop    rbx
   140019c5b:	ret    
   140019c5c:	int3   
   140019c5d:	int3   
   140019c5e:	int3   
   140019c5f:	int3   
   140019c60:	mov    QWORD PTR [rsp+0x8],rbx
   140019c65:	mov    QWORD PTR [rsp+0x10],rsi
   140019c6a:	push   rdi
   140019c6b:	sub    rsp,0x20
   140019c6f:	cmp    DWORD PTR [rsp+0x60],0x0
   140019c74:	mov    rsi,rcx
   140019c77:	jne    0x140019f81
   140019c7d:	cmp    r8d,0x110
   140019c84:	jne    0x140019ca8
   140019c86:	call   0x14001a140
   140019c8b:	mov    rcx,QWORD PTR [rsp+0x58]
   140019c90:	mov    QWORD PTR [rcx],rax
   140019c93:	mov    eax,0x1
   140019c98:	mov    rbx,QWORD PTR [rsp+0x30]
   140019c9d:	mov    rsi,QWORD PTR [rsp+0x38]
   140019ca2:	add    rsp,0x20
   140019ca6:	pop    rdi
   140019ca7:	ret    
   140019ca8:	cmp    r8d,0x136
   140019caf:	jne    0x140019cec
   140019cb1:	mov    edi,0x1
   140019cb6:	cmp    DWORD PTR [rcx+0xf8],edi
   140019cbc:	jne    0x140019cc6
   140019cbe:	mov    rcx,QWORD PTR [rcx+0x50]
   140019cc2:	mov    ebx,edi
   140019cc4:	jmp    0x140019cca
   140019cc6:	xor    ebx,ebx
   140019cc8:	mov    ecx,ebx
   140019cca:	mov    rax,QWORD PTR [rsp+0x58]
   140019ccf:	mov    QWORD PTR [rax],rcx
   140019cd2:	test   ebx,ebx
   140019cd4:	je     0x140019f81
   140019cda:	mov    eax,edi
   140019cdc:	mov    rbx,QWORD PTR [rsp+0x30]
   140019ce1:	mov    rsi,QWORD PTR [rsp+0x38]
   140019ce6:	add    rsp,0x20
   140019cea:	pop    rdi
   140019ceb:	ret    
   140019cec:	cmp    r8d,0x138
   140019cf3:	je     0x140019cb1
   140019cf5:	cmp    r8d,0x2b
   140019cf9:	jne    0x140019d51
   140019cfb:	xor    ebx,ebx
   140019cfd:	cmp    DWORD PTR [rcx+0xf8],0x1
   140019d04:	jne    0x140019d2a
   140019d06:	mov    rdx,QWORD PTR [rsp+0x50]
   140019d0b:	mov    ecx,DWORD PTR [rdx+0x4]
   140019d0e:	dec    ecx
   140019d10:	je     0x140019d1f
   140019d12:	mov    eax,0x3e9
   140019d17:	sub    ecx,eax
   140019d19:	je     0x140019d47
   140019d1b:	dec    ecx
   140019d1d:	jne    0x140019d2a
   140019d1f:	mov    rcx,rdx
   140019d22:	call   0x14001a620
   140019d27:	mov    rbx,rax
   140019d2a:	mov    rax,QWORD PTR [rsp+0x58]
   140019d2f:	mov    QWORD PTR [rax],rbx
   140019d32:	mov    eax,0x1
   140019d37:	mov    rbx,QWORD PTR [rsp+0x30]
   140019d3c:	mov    rsi,QWORD PTR [rsp+0x38]
   140019d41:	add    rsp,0x20
   140019d45:	pop    rdi
   140019d46:	ret    
   140019d47:	mov    rcx,rsi
   140019d4a:	call   0x14001a720
   140019d4f:	jmp    0x140019d27
   140019d51:	cmp    r8d,0x20
   140019d55:	jne    0x140019dec
   140019d5b:	mov    edi,0x1
   140019d60:	xor    ebx,ebx
   140019d62:	cmp    DWORD PTR [rcx+0xf8],edi
   140019d68:	jne    0x140019dc5
   140019d6a:	lea    edx,[rbx-0xc]
   140019d6d:	mov    rcx,r9
   140019d70:	mov    esi,edi
   140019d72:	call   QWORD PTR [rip+0x4e8b0]        # 0x140068628
   140019d78:	mov    r11,rax
   140019d7b:	cmp    eax,edi
   140019d7d:	je     0x140019dab
   140019d7f:	mov    eax,0x3e9
   140019d84:	cmp    r11d,eax
   140019d87:	jbe    0x140019d93
   140019d89:	mov    ecx,0x3eb
   140019d8e:	cmp    r11d,ecx
   140019d91:	jbe    0x140019dab
   140019d93:	mov    edx,0x7f00
   140019d98:	xor    ecx,ecx
   140019d9a:	call   QWORD PTR [rip+0x4e7c0]        # 0x140068560
   140019da0:	mov    rcx,rax
   140019da3:	call   QWORD PTR [rip+0x4e75f]        # 0x140068508
   140019da9:	jmp    0x140019dc7
   140019dab:	mov    edx,0x7f89
   140019db0:	xor    ecx,ecx
   140019db2:	call   QWORD PTR [rip+0x4e7a8]        # 0x140068560
   140019db8:	mov    rcx,rax
   140019dbb:	call   QWORD PTR [rip+0x4e747]        # 0x140068508
   140019dc1:	mov    ebx,edi
   140019dc3:	jmp    0x140019dc7
   140019dc5:	mov    esi,ebx
   140019dc7:	mov    rax,QWORD PTR [rsp+0x58]
   140019dcc:	movsxd rcx,ebx
   140019dcf:	mov    QWORD PTR [rax],rcx
   140019dd2:	test   esi,esi
   140019dd4:	je     0x140019f81
   140019dda:	mov    eax,edi
   140019ddc:	mov    rbx,QWORD PTR [rsp+0x30]
   140019de1:	mov    rsi,QWORD PTR [rsp+0x38]
   140019de6:	add    rsp,0x20
   140019dea:	pop    rdi
   140019deb:	ret    
   140019dec:	cmp    r8d,0x111
   140019df3:	jne    0x140019f81
   140019df9:	mov    edi,0x1
   140019dfe:	cmp    di,r9w
   140019e02:	jne    0x140019e3f
   140019e04:	shr    r9,0x10
   140019e08:	xor    ebx,ebx
   140019e0a:	cmp    bx,r9w
   140019e0e:	jne    0x140019f81
   140019e14:	call   0x14001a3a0
   140019e19:	mov    rcx,QWORD PTR [rsi+0x8]
   140019e1d:	xor    edx,edx
   140019e1f:	call   QWORD PTR [rip+0x4e71b]        # 0x140068540
   140019e25:	mov    r11,QWORD PTR [rsp+0x58]
   140019e2a:	mov    eax,edi
   140019e2c:	mov    QWORD PTR [r11],rbx
   140019e2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e34:	mov    rsi,QWORD PTR [rsp+0x38]
   140019e39:	add    rsp,0x20
   140019e3d:	pop    rdi
   140019e3e:	ret    
   140019e3f:	mov    eax,0x3e9
   140019e44:	cmp    ax,r9w
   140019e48:	mov    eax,0x2
   140019e4d:	jne    0x140019e7e
   140019e4f:	shr    r9,0x10
   140019e53:	cmp    ax,r9w
   140019e57:	jne    0x140019f81
   140019e5d:	call   0x14001a3a0
   140019e62:	mov    rax,QWORD PTR [rsp+0x58]
   140019e67:	xor    ebx,ebx
   140019e69:	mov    QWORD PTR [rax],rbx
   140019e6c:	mov    eax,edi
   140019e6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e73:	mov    rsi,QWORD PTR [rsp+0x38]
   140019e78:	add    rsp,0x20
   140019e7c:	pop    rdi
   140019e7d:	ret    
   140019e7e:	cmp    ax,r9w
   140019e82:	jne    0x140019eba
   140019e84:	shr    r9,0x10
   140019e88:	xor    ebx,ebx
   140019e8a:	cmp    bx,r9w
   140019e8e:	jne    0x140019f81
   140019e94:	mov    rcx,QWORD PTR [rcx+0x8]
   140019e98:	xor    edx,edx
   140019e9a:	call   QWORD PTR [rip+0x4e6a0]        # 0x140068540
   140019ea0:	mov    r11,QWORD PTR [rsp+0x58]
   140019ea5:	mov    eax,edi
   140019ea7:	mov    QWORD PTR [r11],rbx
   140019eaa:	mov    rbx,QWORD PTR [rsp+0x30]
   140019eaf:	mov    rsi,QWORD PTR [rsp+0x38]
   140019eb4:	add    rsp,0x20
   140019eb8:	pop    rdi
   140019eb9:	ret    
   140019eba:	mov    ecx,0x3eb
   140019ebf:	cmp    cx,r9w
   140019ec3:	jne    0x140019ef7
   140019ec5:	shr    r9,0x10
   140019ec9:	xor    ebx,ebx
   140019ecb:	cmp    bx,r9w
   140019ecf:	jne    0x140019f81
   140019ed5:	mov    rcx,rsi
   140019ed8:	call   0x14001a3a0
   140019edd:	mov    r11,QWORD PTR [rsp+0x58]
   140019ee2:	mov    eax,edi
   140019ee4:	mov    QWORD PTR [r11],rbx
   140019ee7:	mov    rbx,QWORD PTR [rsp+0x30]
   140019eec:	mov    rsi,QWORD PTR [rsp+0x38]
   140019ef1:	add    rsp,0x20
   140019ef5:	pop    rdi
   140019ef6:	ret    
   140019ef7:	mov    edx,0x3ea
   140019efc:	cmp    dx,r9w
   140019f00:	jne    0x140019f81
   140019f02:	shr    r9,0x10
   140019f06:	xor    ebx,ebx
   140019f08:	cmp    bx,r9w
   140019f0c:	jne    0x140019f81
   140019f0e:	mov    rcx,QWORD PTR [rsi+0x8]
   140019f12:	call   QWORD PTR [rip+0x4e6e0]        # 0x1400685f8
   140019f18:	cmp    DWORD PTR [rsi+0x40],ebx
   140019f1b:	mov    ecx,ebx
   140019f1d:	sete   cl
   140019f20:	mov    DWORD PTR [rsi+0x40],ecx
   140019f23:	cmp    DWORD PTR [rsi+0xf8],edi
   140019f29:	jne    0x140019f53
   140019f2b:	mov    r8d,edi
   140019f2e:	xor    edx,edx
   140019f30:	mov    rcx,rax
   140019f33:	call   QWORD PTR [rip+0x4e5f7]        # 0x140068530
   140019f39:	mov    rax,QWORD PTR [rsp+0x58]
   140019f3e:	mov    QWORD PTR [rax],rbx
   140019f41:	mov    eax,edi
   140019f43:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f48:	mov    rsi,QWORD PTR [rsp+0x38]
   140019f4d:	add    rsp,0x20
   140019f51:	pop    rdi
   140019f52:	ret    
   140019f53:	movsxd r8,ecx
   140019f56:	xor    r9d,r9d
   140019f59:	mov    edx,0xf1
   140019f5e:	mov    rcx,rax
   140019f61:	call   QWORD PTR [rip+0x4e669]        # 0x1400685d0
   140019f67:	mov    rax,QWORD PTR [rsp+0x58]
   140019f6c:	mov    QWORD PTR [rax],rbx
   140019f6f:	mov    eax,edi
   140019f71:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f76:	mov    rsi,QWORD PTR [rsp+0x38]
   140019f7b:	add    rsp,0x20
   140019f7f:	pop    rdi
   140019f80:	ret    
   140019f81:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f86:	mov    rsi,QWORD PTR [rsp+0x38]
   140019f8b:	xor    eax,eax
   140019f8d:	add    rsp,0x20
   140019f91:	pop    rdi
   140019f92:	ret    
   140019f93:	int3   
   140019f94:	int3   
   140019f95:	int3   
   140019f96:	int3   
   140019f97:	int3   
   140019f98:	int3   
   140019f99:	int3   
   140019f9a:	int3   
   140019f9b:	int3   
   140019f9c:	int3   
   140019f9d:	int3   
   140019f9e:	int3   
   140019f9f:	int3   
   140019fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140019fa5:	push   rdi
   140019fa6:	sub    rsp,0x20
   140019faa:	xor    edi,edi
   140019fac:	lea    rax,[rip+0x54735]        # 0x14006e6e8
   140019fb3:	lea    rbx,[rip+0x5471e]        # 0x14006e6d8
   140019fba:	lea    rcx,[rip+0x7039f]        # 0x14008a360
   140019fc1:	mov    QWORD PTR [rip+0x707f8],0xffffffffffffffff        # 0x14008a7c4
   140019fcc:	mov    QWORD PTR [rip+0x7076d],rax        # 0x14008a740
   140019fd3:	mov    QWORD PTR [rip+0x707be],rbx        # 0x14008a798
   140019fda:	mov    QWORD PTR [rip+0x70767],rdi        # 0x14008a748
   140019fe1:	mov    QWORD PTR [rip+0x70780],rdi        # 0x14008a768
   140019fe8:	mov    QWORD PTR [rip+0x70781],rdi        # 0x14008a770
   140019fef:	mov    DWORD PTR [rip+0x70783],edi        # 0x14008a778
   140019ff5:	mov    QWORD PTR [rip+0x707a4],rdi        # 0x14008a7a0
   140019ffc:	mov    QWORD PTR [rip+0x707a5],rdi        # 0x14008a7a8
   14001a003:	mov    QWORD PTR [rip+0x707a6],rdi        # 0x14008a7b0
   14001a00a:	mov    QWORD PTR [rip+0x707a7],rdi        # 0x14008a7b8
   14001a011:	mov    WORD PTR [rip+0x707a8],di        # 0x14008a7c0
   14001a018:	mov    QWORD PTR [rip+0x707b1],rdi        # 0x14008a7d0
   14001a01f:	mov    DWORD PTR [rip+0x707b3],edi        # 0x14008a7d8
   14001a025:	mov    QWORD PTR [rip+0x707b4],rdi        # 0x14008a7e0
   14001a02c:	call   QWORD PTR [rip+0x4e13e]        # 0x140068170
   14001a032:	inc    DWORD PTR [rip+0x70350]        # 0x14008a388
   14001a038:	lea    rcx,[rip+0x70321]        # 0x14008a360
   14001a03f:	call   QWORD PTR [rip+0x4e10b]        # 0x140068150
   14001a045:	lea    rcx,[rip+0x70314]        # 0x14008a360
   14001a04c:	mov    QWORD PTR [rip+0x70795],rbx        # 0x14008a7e8
   14001a053:	mov    QWORD PTR [rip+0x70796],rdi        # 0x14008a7f0
   14001a05a:	mov    QWORD PTR [rip+0x70797],rdi        # 0x14008a7f8
   14001a061:	mov    QWORD PTR [rip+0x70798],rdi        # 0x14008a800
   14001a068:	mov    QWORD PTR [rip+0x70799],rdi        # 0x14008a808
   14001a06f:	mov    WORD PTR [rip+0x7079a],di        # 0x14008a810
   14001a076:	mov    QWORD PTR [rip+0x70793],0xffffffffffffffff        # 0x14008a814
   14001a081:	mov    QWORD PTR [rip+0x70798],rdi        # 0x14008a820
   14001a088:	mov    DWORD PTR [rip+0x7079a],edi        # 0x14008a828
   14001a08e:	mov    QWORD PTR [rip+0x7079b],rdi        # 0x14008a830
   14001a095:	call   QWORD PTR [rip+0x4e0d5]        # 0x140068170
   14001a09b:	inc    DWORD PTR [rip+0x702e7]        # 0x14008a388
   14001a0a1:	lea    rcx,[rip+0x702b8]        # 0x14008a360
   14001a0a8:	call   QWORD PTR [rip+0x4e0a2]        # 0x140068150
   14001a0ae:	mov    QWORD PTR [rip+0x706d3],rdi        # 0x14008a788
   14001a0b5:	mov    QWORD PTR [rip+0x706d4],rdi        # 0x14008a790
   14001a0bc:	mov    DWORD PTR [rip+0x70776],edi        # 0x14008a838
   14001a0c2:	call   0x14001a460
   14001a0c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a0cc:	mov    DWORD PTR [rip+0x706ae],eax        # 0x14008a780
   14001a0d2:	lea    rax,[rip+0x70667]        # 0x14008a740
   14001a0d9:	add    rsp,0x20
   14001a0dd:	pop    rdi
   14001a0de:	ret    
   14001a0df:	int3   
   14001a0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0e5:	push   rdi
   14001a0e6:	sub    rsp,0x20
   14001a0ea:	lea    rax,[rip+0x545f7]        # 0x14006e6e8
   14001a0f1:	mov    rbx,rcx
   14001a0f4:	add    rcx,0xa8
   14001a0fb:	mov    QWORD PTR [rcx-0xa8],rax
   14001a102:	mov    edi,edx
   14001a104:	call   0x140019880
   14001a109:	lea    rcx,[rbx+0x58]
   14001a10d:	call   0x140019880
   14001a112:	mov    rcx,QWORD PTR [rbx+0x28]
   14001a116:	test   rcx,rcx
   14001a119:	je     0x14001a120
   14001a11b:	call   0x140042c44
   14001a120:	test   dil,0x1
   14001a124:	je     0x14001a12e
   14001a126:	mov    rcx,rbx
   14001a129:	call   0x1400330c0
   14001a12e:	mov    rax,rbx
   14001a131:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a136:	add    rsp,0x20
   14001a13a:	pop    rdi
   14001a13b:	ret    
   14001a13c:	int3   
   14001a13d:	int3   
   14001a13e:	int3   
   14001a13f:	int3   
   14001a140:	mov    QWORD PTR [rsp+0x20],rbx
   14001a145:	push   r12
   14001a147:	sub    rsp,0x30
   14001a14b:	mov    r12,rcx
   14001a14e:	mov    rcx,QWORD PTR [rip+0x7016b]        # 0x14008a2c0
   14001a155:	mov    edx,0x80
   14001a15a:	call   QWORD PTR [rip+0x4e450]        # 0x1400685b0
   14001a160:	mov    rcx,QWORD PTR [r12+0x8]
   14001a165:	xor    r8d,r8d
   14001a168:	mov    r9,rax
   14001a16b:	mov    edx,0x80
   14001a170:	call   QWORD PTR [rip+0x4e45a]        # 0x1400685d0
   14001a176:	mov    rcx,QWORD PTR [rip+0x70143]        # 0x14008a2c0
   14001a17d:	mov    edx,0x80
   14001a182:	call   QWORD PTR [rip+0x4e428]        # 0x1400685b0
   14001a188:	mov    rcx,QWORD PTR [r12+0x8]
   14001a18d:	mov    edx,0x80
   14001a192:	lea    r8d,[rdx-0x7f]
   14001a196:	mov    r9,rax
   14001a199:	call   QWORD PTR [rip+0x4e431]        # 0x1400685d0
   14001a19f:	cmp    DWORD PTR [r12+0xf8],0x1
   14001a1a8:	jne    0x14001a1ba
   14001a1aa:	mov    ecx,0xffffff
   14001a1af:	call   QWORD PTR [rip+0x4df0b]        # 0x1400680c0
   14001a1b5:	mov    QWORD PTR [r12+0x50],rax
   14001a1ba:	mov    rcx,QWORD PTR [r12+0x8]
   14001a1bf:	mov    edx,0x3e9
   14001a1c4:	mov    QWORD PTR [rsp+0x48],rsi
   14001a1c9:	mov    QWORD PTR [rsp+0x50],rdi
   14001a1ce:	call   QWORD PTR [rip+0x4e424]        # 0x1400685f8
   14001a1d4:	cmp    QWORD PTR [r12+0x48],0x0
   14001a1da:	mov    rbx,rax
   14001a1dd:	je     0x14001a222
   14001a1df:	lea    rdi,[rip+0x6d38a]        # 0x140087570
   14001a1e6:	mov    esi,0x6
   14001a1eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a1f0:	mov    r9,QWORD PTR [rdi]
   14001a1f3:	xor    r8d,r8d
   14001a1f6:	mov    edx,0x180
   14001a1fb:	mov    rcx,rbx
   14001a1fe:	call   QWORD PTR [rip+0x4e3cc]        # 0x1400685d0
   14001a204:	movsxd r9,DWORD PTR [rdi+0x8]
   14001a208:	mov    edx,0x19a
   14001a20d:	movsxd r8,eax
   14001a210:	mov    rcx,rbx
   14001a213:	call   QWORD PTR [rip+0x4e3b7]        # 0x1400685d0
   14001a219:	add    rdi,0x10
   14001a21d:	dec    rsi
   14001a220:	jne    0x14001a1f0
   14001a222:	mov    r9d,0x1a
   14001a228:	xor    r8d,r8d
   14001a22b:	mov    edx,0x1a0
   14001a230:	mov    rcx,rbx
   14001a233:	call   QWORD PTR [rip+0x4e397]        # 0x1400685d0
   14001a239:	cmp    DWORD PTR [r12+0xf8],0x1
   14001a242:	jne    0x14001a375
   14001a248:	mov    rcx,QWORD PTR [r12+0x8]
   14001a24d:	mov    edx,0x3ea
   14001a252:	mov    QWORD PTR [rsp+0x40],rbp
   14001a257:	call   QWORD PTR [rip+0x4e39b]        # 0x1400685f8
   14001a25d:	mov    rcx,QWORD PTR [r12+0x8]
   14001a262:	mov    edx,0x1
   14001a267:	mov    rsi,rax
   14001a26a:	call   QWORD PTR [rip+0x4e388]        # 0x1400685f8
   14001a270:	mov    rcx,QWORD PTR [r12+0x8]
   14001a275:	mov    edx,0x3eb
   14001a27a:	mov    rbx,rax
   14001a27d:	call   QWORD PTR [rip+0x4e375]        # 0x1400685f8
   14001a283:	mov    rcx,QWORD PTR [rip+0x70036]        # 0x14008a2c0
   14001a28a:	xor    r9d,r9d
   14001a28d:	lea    edx,[r9+0x68]
   14001a291:	xor    r8d,r8d
   14001a294:	mov    DWORD PTR [rsp+0x28],0x2000
   14001a29c:	mov    rdi,rax
   14001a29f:	mov    DWORD PTR [rsp+0x20],0x0
   14001a2a7:	call   QWORD PTR [rip+0x4e29b]        # 0x140068548
   14001a2ad:	lea    rcx,[r12+0x58]
   14001a2b2:	mov    QWORD PTR [r12+0x60],rax
   14001a2b7:	call   0x140019b70
   14001a2bc:	mov    rcx,QWORD PTR [rip+0x6fffd]        # 0x14008a2c0
   14001a2c3:	xor    r9d,r9d
   14001a2c6:	lea    edx,[r9+0x69]
   14001a2ca:	xor    r8d,r8d
   14001a2cd:	mov    DWORD PTR [rsp+0x28],0x2000
   14001a2d5:	mov    DWORD PTR [rsp+0x20],0x0
   14001a2dd:	call   QWORD PTR [rip+0x4e265]        # 0x140068548
   14001a2e3:	lea    rcx,[r12+0xa8]
   14001a2eb:	mov    QWORD PTR [r12+0xb0],rax
   14001a2f3:	call   0x140019b70
   14001a2f8:	mov    edx,0xfffffff0
   14001a2fd:	mov    rcx,rsi
   14001a300:	call   QWORD PTR [rip+0x4e2e2]        # 0x1400685e8
   14001a306:	mov    rbp,QWORD PTR [rsp+0x40]
   14001a30b:	mov    r8d,eax
   14001a30e:	or     r8d,0xb
   14001a312:	cmp    eax,r8d
   14001a315:	je     0x14001a325
   14001a317:	mov    edx,0xfffffff0
   14001a31c:	mov    rcx,rsi
   14001a31f:	call   QWORD PTR [rip+0x4e203]        # 0x140068528
   14001a325:	mov    edx,0xfffffff0
   14001a32a:	mov    rcx,rbx
   14001a32d:	call   QWORD PTR [rip+0x4e2b5]        # 0x1400685e8
   14001a333:	mov    r8d,eax
   14001a336:	or     r8d,0xb
   14001a33a:	cmp    eax,r8d
   14001a33d:	je     0x14001a34d
   14001a33f:	mov    edx,0xfffffff0
   14001a344:	mov    rcx,rbx
   14001a347:	call   QWORD PTR [rip+0x4e1db]        # 0x140068528
   14001a34d:	mov    edx,0xfffffff0
   14001a352:	mov    rcx,rdi
   14001a355:	call   QWORD PTR [rip+0x4e28d]        # 0x1400685e8
   14001a35b:	mov    r8d,eax
   14001a35e:	or     r8d,0xb
   14001a362:	cmp    eax,r8d
   14001a365:	je     0x14001a375
   14001a367:	mov    edx,0xfffffff0
   14001a36c:	mov    rcx,rdi
   14001a36f:	call   QWORD PTR [rip+0x4e1b3]        # 0x140068528
   14001a375:	mov    rcx,r12
   14001a378:	call   0x14001a500
   14001a37d:	mov    rdi,QWORD PTR [rsp+0x50]
   14001a382:	mov    rsi,QWORD PTR [rsp+0x48]
   14001a387:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a38c:	mov    eax,0x1
   14001a391:	add    rsp,0x30
   14001a395:	pop    r12
   14001a397:	ret    
   14001a398:	int3   
   14001a399:	int3   
   14001a39a:	int3   
   14001a39b:	int3   
   14001a39c:	int3   
   14001a39d:	int3   
   14001a39e:	int3   
   14001a39f:	int3   
   14001a3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a3a5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a3aa:	push   rdi
   14001a3ab:	sub    rsp,0x20
   14001a3af:	mov    rsi,rcx
   14001a3b2:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a3b6:	mov    edx,0x3e9
   14001a3bb:	call   QWORD PTR [rip+0x4e237]        # 0x1400685f8
   14001a3c1:	mov    rcx,QWORD PTR [rsi+0x8]
   14001a3c5:	mov    edx,0x3ea
   14001a3ca:	mov    rbx,rax
   14001a3cd:	call   QWORD PTR [rip+0x4e225]        # 0x1400685f8
   14001a3d3:	xor    r9d,r9d
   14001a3d6:	xor    r8d,r8d
   14001a3d9:	mov    edx,0x188
   14001a3de:	mov    rcx,rbx
   14001a3e1:	call   QWORD PTR [rip+0x4e1e9]        # 0x1400685d0
   14001a3e7:	lea    rdx,[rip+0x52f22]        # 0x14006d310
   14001a3ee:	mov    rcx,0xffffffff80000002
   14001a3f5:	mov    r8d,eax
   14001a3f8:	mov    rdi,rax
   14001a3fb:	call   0x140015b50
   14001a400:	mov    r8d,DWORD PTR [rsi+0x40]
   14001a404:	lea    rdx,[rip+0x542b5]        # 0x14006e6c0
   14001a40b:	mov    rcx,0xffffffff80000001
   14001a412:	call   0x140015b50
   14001a417:	cmp    QWORD PTR [rsi+0x48],0x0
   14001a41c:	je     0x14001a441
   14001a41e:	test   edi,edi
   14001a420:	js     0x14001a441
   14001a422:	movsxd r8,edi
   14001a425:	xor    r9d,r9d
   14001a428:	mov    edx,0x199
   14001a42d:	mov    rcx,rbx
   14001a430:	call   QWORD PTR [rip+0x4e19a]        # 0x1400685d0
   14001a436:	mov    rcx,QWORD PTR [rsi+0x48]
   14001a43a:	mov    edx,eax
   14001a43c:	call   0x1400140d0
   14001a441:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a446:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a44b:	add    rsp,0x20
   14001a44f:	pop    rdi
   14001a450:	ret    
   14001a451:	int3   
   14001a452:	int3   
   14001a453:	int3   
   14001a454:	int3   
   14001a455:	int3   
   14001a456:	int3   
   14001a457:	int3   
   14001a458:	int3   
   14001a459:	int3   
   14001a45a:	int3   
   14001a45b:	int3   
   14001a45c:	int3   
   14001a45d:	int3   
   14001a45e:	int3   
   14001a45f:	int3   
   14001a460:	rex push rbx
   14001a462:	sub    rsp,0x30
   14001a466:	lea    rax,[rsp+0x58]
   14001a46b:	lea    rdx,[rip+0x512de]        # 0x14006b750
   14001a472:	xor    ebx,ebx
   14001a474:	mov    r9d,0x20019
   14001a47a:	xor    r8d,r8d
   14001a47d:	mov    rcx,0xffffffff80000001
   14001a484:	mov    QWORD PTR [rsp+0x20],rax
   14001a489:	mov    DWORD PTR [rsp+0x40],0x1
   14001a491:	mov    QWORD PTR [rsp+0x58],rbx
   14001a496:	call   QWORD PTR [rip+0x4dbb4]        # 0x140068050
   14001a49c:	mov    rcx,QWORD PTR [rsp+0x58]
   14001a4a1:	test   rcx,rcx
   14001a4a4:	je     0x14001a4e2
   14001a4a6:	lea    rax,[rsp+0x48]
   14001a4ab:	lea    r9,[rsp+0x50]
   14001a4b0:	lea    rdx,[rip+0x54209]        # 0x14006e6c0
   14001a4b7:	mov    QWORD PTR [rsp+0x28],rax
   14001a4bc:	lea    rax,[rsp+0x40]
   14001a4c1:	xor    r8d,r8d
   14001a4c4:	mov    QWORD PTR [rsp+0x20],rax
   14001a4c9:	mov    DWORD PTR [rsp+0x48],0x4
   14001a4d1:	call   QWORD PTR [rip+0x4db81]        # 0x140068058
   14001a4d7:	mov    rcx,QWORD PTR [rsp+0x58]
   14001a4dc:	call   QWORD PTR [rip+0x4db66]        # 0x140068048
   14001a4e2:	cmp    DWORD PTR [rsp+0x40],ebx
   14001a4e6:	setne  bl
   14001a4e9:	mov    eax,ebx
   14001a4eb:	add    rsp,0x30
   14001a4ef:	pop    rbx
   14001a4f0:	ret    
   14001a4f1:	int3   
   14001a4f2:	int3   
   14001a4f3:	int3   
   14001a4f4:	int3   
   14001a4f5:	int3   
   14001a4f6:	int3   
   14001a4f7:	int3   
   14001a4f8:	int3   
   14001a4f9:	int3   
   14001a4fa:	int3   
   14001a4fb:	int3   
   14001a4fc:	int3   
   14001a4fd:	int3   
   14001a4fe:	int3   
   14001a4ff:	int3   
   14001a500:	rex push rbx
   14001a502:	push   rsi
   14001a503:	push   rdi
   14001a504:	sub    rsp,0x20
   14001a508:	mov    rsi,rcx
   14001a50b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a50f:	mov    edx,0x3e9
   14001a514:	call   QWORD PTR [rip+0x4e0de]        # 0x1400685f8
   14001a51a:	mov    rcx,QWORD PTR [rsi+0x8]
   14001a51e:	mov    edx,0x3ea
   14001a523:	mov    rdi,rax
   14001a526:	call   QWORD PTR [rip+0x4e0cc]        # 0x1400685f8
   14001a52c:	mov    rbx,rax
   14001a52f:	call   0x14001a460
   14001a534:	cmp    DWORD PTR [rsi+0xf8],0x1
   14001a53b:	mov    DWORD PTR [rsi+0x40],eax
   14001a53e:	mov    rcx,rbx
   14001a541:	jne    0x14001a551
   14001a543:	xor    edx,edx
   14001a545:	lea    r8d,[rdx+0x1]
   14001a549:	call   QWORD PTR [rip+0x4dfe1]        # 0x140068530
   14001a54f:	jmp    0x14001a562
   14001a551:	movsxd r8,eax
   14001a554:	xor    r9d,r9d
   14001a557:	mov    edx,0xf1
   14001a55c:	call   QWORD PTR [rip+0x4e06e]        # 0x1400685d0
   14001a562:	mov    rax,QWORD PTR [rsi+0x48]
   14001a566:	test   rax,rax
   14001a569:	je     0x14001a616
   14001a56f:	mov    rcx,QWORD PTR [rax+0x28]
   14001a573:	mov    QWORD PTR [rsp+0x50],r12
   14001a578:	mov    QWORD PTR [rsp+0x58],r13
   14001a57d:	or     r13d,0xffffffff
   14001a581:	mov    DWORD PTR [rsp+0x40],r13d
   14001a586:	test   rcx,rcx
   14001a589:	je     0x14001a5a7
   14001a58b:	mov    r9,QWORD PTR [rax+0x1d8]
   14001a592:	test   r9,r9
   14001a595:	je     0x14001a5a7
   14001a597:	lea    rdx,[rsp+0x40]
   14001a59c:	xor    r8d,r8d
   14001a59f:	call   r9
   14001a5a2:	mov    r13d,DWORD PTR [rsp+0x40]
   14001a5a7:	xor    r9d,r9d
   14001a5aa:	xor    r8d,r8d
   14001a5ad:	mov    edx,0x18b
   14001a5b2:	mov    rcx,rdi
   14001a5b5:	xor    esi,esi
   14001a5b7:	call   QWORD PTR [rip+0x4e013]        # 0x1400685d0
   14001a5bd:	mov    ebx,esi
   14001a5bf:	mov    QWORD PTR [rsp+0x48],rbp
   14001a5c4:	mov    r12,rax
   14001a5c7:	cmp    ebx,r12d
   14001a5ca:	jge    0x14001a607
   14001a5cc:	movsxd rbp,ebx
   14001a5cf:	xor    r9d,r9d
   14001a5d2:	mov    edx,0x199
   14001a5d7:	mov    r8,rbp
   14001a5da:	mov    rcx,rdi
   14001a5dd:	call   QWORD PTR [rip+0x4dfed]        # 0x1400685d0
   14001a5e3:	cmp    r13d,eax
   14001a5e6:	jne    0x14001a601
   14001a5e8:	xor    r9d,r9d
   14001a5eb:	mov    r8,rbp
   14001a5ee:	mov    edx,0x186
   14001a5f3:	mov    rcx,rdi
   14001a5f6:	call   QWORD PTR [rip+0x4dfd4]        # 0x1400685d0
   14001a5fc:	mov    esi,0x1
   14001a601:	inc    ebx
   14001a603:	test   esi,esi
   14001a605:	je     0x14001a5c7
   14001a607:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a60c:	mov    r12,QWORD PTR [rsp+0x50]
   14001a611:	mov    r13,QWORD PTR [rsp+0x58]
   14001a616:	add    rsp,0x20
   14001a61a:	pop    rdi
   14001a61b:	pop    rsi
   14001a61c:	pop    rbx
   14001a61d:	ret    
   14001a61e:	int3   
   14001a61f:	int3   
   14001a620:	mov    QWORD PTR [rsp+0x10],rbx
   14001a625:	mov    QWORD PTR [rsp+0x18],rsi
   14001a62a:	push   rdi
   14001a62b:	sub    rsp,0x150
   14001a632:	mov    rax,QWORD PTR [rip+0x6aa6f]        # 0x1400850a8
   14001a639:	xor    rax,rsp
   14001a63c:	mov    QWORD PTR [rsp+0x140],rax
   14001a644:	test   BYTE PTR [rcx+0x10],0x1
   14001a648:	mov    rsi,rcx
   14001a64b:	mov    ecx,0x4e4e4e
   14001a650:	jne    0x14001a657
   14001a652:	mov    ecx,0xcc8700
   14001a657:	call   QWORD PTR [rip+0x4da63]        # 0x1400680c0
   14001a65d:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a661:	lea    rdx,[rsi+0x28]
   14001a665:	mov    r8,rax
   14001a668:	call   QWORD PTR [rip+0x4dea2]        # 0x140068510
   14001a66e:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a672:	mov    edx,0xffffff
   14001a677:	call   QWORD PTR [rip+0x4da4b]        # 0x1400680c8
   14001a67d:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a681:	mov    edx,0x1
   14001a686:	mov    ebx,eax
   14001a688:	call   QWORD PTR [rip+0x4da02]        # 0x140068090
   14001a68e:	lea    rcx,[rsp+0x31]
   14001a693:	xor    edx,edx
   14001a695:	mov    r8d,0x103
   14001a69b:	mov    BYTE PTR [rsp+0x30],0x0
   14001a6a0:	call   0x140036dc0
   14001a6a5:	mov    rcx,QWORD PTR [rsi+0x18]
   14001a6a9:	lea    rdx,[rsp+0x30]
   14001a6ae:	mov    r8d,0x104
   14001a6b4:	call   QWORD PTR [rip+0x4df1e]        # 0x1400685d8
   14001a6ba:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a6be:	lea    r9,[rsi+0x28]
   14001a6c2:	lea    rdx,[rsp+0x30]
   14001a6c7:	or     r8d,0xffffffff
   14001a6cb:	mov    DWORD PTR [rsp+0x20],0x25
   14001a6d3:	call   QWORD PTR [rip+0x4de3f]        # 0x140068518
   14001a6d9:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a6dd:	mov    edx,ebx
   14001a6df:	call   QWORD PTR [rip+0x4d9e3]        # 0x1400680c8
   14001a6e5:	mov    rcx,QWORD PTR [rsi+0x20]
   14001a6e9:	mov    edx,0x2
   14001a6ee:	call   QWORD PTR [rip+0x4d99c]        # 0x140068090
   14001a6f4:	mov    eax,0x1
   14001a6f9:	mov    rcx,QWORD PTR [rsp+0x140]
   14001a701:	xor    rcx,rsp
   14001a704:	call   0x140032f00
   14001a709:	lea    r11,[rsp+0x150]
   14001a711:	mov    rbx,QWORD PTR [r11+0x18]
   14001a715:	mov    rsi,QWORD PTR [r11+0x20]
   14001a719:	mov    rsp,r11
   14001a71c:	pop    rdi
   14001a71d:	ret    
   14001a71e:	int3   
   14001a71f:	int3   
   14001a720:	mov    QWORD PTR [rsp+0x18],rbx
   14001a725:	mov    QWORD PTR [rsp+0x20],rsi
   14001a72a:	push   rdi
   14001a72b:	sub    rsp,0x170
   14001a732:	mov    rax,QWORD PTR [rip+0x6a96f]        # 0x1400850a8
   14001a739:	xor    rax,rsp
   14001a73c:	mov    QWORD PTR [rsp+0x160],rax
   14001a744:	mov    rdi,rcx
   14001a747:	mov    ecx,0xffffff
   14001a74c:	mov    rbx,rdx
   14001a74f:	call   QWORD PTR [rip+0x4d96b]        # 0x1400680c0
   14001a755:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a759:	lea    rdx,[rbx+0x28]
   14001a75d:	mov    r8,rax
   14001a760:	call   QWORD PTR [rip+0x4ddaa]        # 0x140068510
   14001a766:	mov    eax,DWORD PTR [rbx+0x34]
   14001a769:	sub    eax,DWORD PTR [rdi+0xc4]
   14001a76f:	sub    eax,DWORD PTR [rbx+0x2c]
   14001a772:	cdq    
   14001a773:	sub    eax,edx
   14001a775:	mov    edx,DWORD PTR [rdi+0x40]
   14001a778:	sar    eax,1
   14001a77a:	mov    r9d,eax
   14001a77d:	test   edx,edx
   14001a77f:	je     0x14001a7a4
   14001a781:	dec    edx
   14001a783:	jne    0x14001a7ce
   14001a785:	mov    edx,DWORD PTR [rdi+0x74]
   14001a788:	mov    r8d,DWORD PTR [rdi+0x70]
   14001a78c:	lea    rcx,[rdi+0x58]
   14001a790:	mov    DWORD PTR [rsp+0x38],edx
   14001a794:	mov    DWORD PTR [rsp+0x30],r8d
   14001a799:	mov    DWORD PTR [rsp+0x28],edx
   14001a79d:	mov    DWORD PTR [rsp+0x20],r8d
   14001a7a2:	jmp    0x14001a7c1
   14001a7a4:	lea    rcx,[rdi+0xa8]
   14001a7ab:	mov    eax,DWORD PTR [rcx+0x1c]
   14001a7ae:	mov    edx,DWORD PTR [rcx+0x18]
   14001a7b1:	mov    DWORD PTR [rsp+0x38],eax
   14001a7b5:	mov    DWORD PTR [rsp+0x30],edx
   14001a7b9:	mov    DWORD PTR [rsp+0x28],eax
   14001a7bd:	mov    DWORD PTR [rsp+0x20],edx
   14001a7c1:	mov    r8d,DWORD PTR [rbx+0x28]
   14001a7c5:	mov    rdx,QWORD PTR [rbx+0x20]
   14001a7c9:	call   0x140019920
   14001a7ce:	mov    eax,DWORD PTR [rbx+0x2c]
   14001a7d1:	mov    ecx,DWORD PTR [rbx+0x28]
   14001a7d4:	mov    edx,0x1
   14001a7d9:	mov    DWORD PTR [rsp+0x44],eax
   14001a7dd:	mov    eax,DWORD PTR [rbx+0x30]
   14001a7e0:	mov    DWORD PTR [rsp+0x48],eax
   14001a7e4:	mov    eax,DWORD PTR [rbx+0x34]
   14001a7e7:	mov    DWORD PTR [rsp+0x4c],eax
   14001a7eb:	mov    eax,DWORD PTR [rdi+0xc0]
   14001a7f1:	lea    ecx,[rcx+rax*1+0x2]
   14001a7f5:	mov    DWORD PTR [rsp+0x40],ecx
   14001a7f9:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a7fd:	call   QWORD PTR [rip+0x4d88d]        # 0x140068090
   14001a803:	lea    rcx,[rsp+0x51]
   14001a808:	xor    edx,edx
   14001a80a:	mov    r8d,0x103
   14001a810:	mov    BYTE PTR [rsp+0x50],0x0
   14001a815:	call   0x140036dc0
   14001a81a:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a81e:	lea    rdx,[rsp+0x50]
   14001a823:	mov    r8d,0x104
   14001a829:	call   QWORD PTR [rip+0x4dda9]        # 0x1400685d8
   14001a82f:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a833:	lea    r9,[rsp+0x40]
   14001a838:	lea    rdx,[rsp+0x50]
   14001a83d:	or     r8d,0xffffffff
   14001a841:	mov    DWORD PTR [rsp+0x20],0x24
   14001a849:	call   QWORD PTR [rip+0x4dcc9]        # 0x140068518
   14001a84f:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a853:	mov    edx,0x2
   14001a858:	call   QWORD PTR [rip+0x4d832]        # 0x140068090
   14001a85e:	mov    eax,0x1
   14001a863:	mov    rcx,QWORD PTR [rsp+0x160]
   14001a86b:	xor    rcx,rsp
   14001a86e:	call   0x140032f00
   14001a873:	lea    r11,[rsp+0x170]
   14001a87b:	mov    rbx,QWORD PTR [r11+0x20]
   14001a87f:	mov    rsi,QWORD PTR [r11+0x28]
   14001a883:	mov    rsp,r11
   14001a886:	pop    rdi
   14001a887:	ret    
   14001a888:	int3   
   14001a889:	int3   
   14001a88a:	int3   
   14001a88b:	int3   
   14001a88c:	int3   
   14001a88d:	int3   
   14001a88e:	int3   
   14001a88f:	int3   
   14001a890:	lea    rax,[rip+0x9]        # 0x14001a8a0
   14001a897:	ret    
   14001a898:	int3   
   14001a899:	int3   
   14001a89a:	int3   
   14001a89b:	int3   
   14001a89c:	int3   
   14001a89d:	int3   
   14001a89e:	int3   
   14001a89f:	int3   
   14001a8a0:	mov    r11,rsp
   14001a8a3:	mov    QWORD PTR [r11+0x10],rbx
   14001a8a7:	mov    QWORD PTR [r11+0x18],rbp
   14001a8ab:	push   rsi
   14001a8ac:	push   rdi
   14001a8ad:	push   r12
   14001a8af:	sub    rsp,0x80
   14001a8b6:	mov    rbx,QWORD PTR [rcx+0x30]
   14001a8ba:	mov    DWORD PTR [rsp+0x70],0x38
   14001a8c2:	mov    DWORD PTR [rsp+0x74],0x1
   14001a8ca:	mov    edi,edx
   14001a8cc:	mov    rdx,QWORD PTR [rcx+0x8]
   14001a8d0:	xor    r12d,r12d
   14001a8d3:	lea    rax,[r11-0x58]
   14001a8d7:	mov    rsi,rcx
   14001a8da:	mov    DWORD PTR [r11-0x68],r12d
   14001a8de:	mov    QWORD PTR [rcx+0x30],rax
   14001a8e2:	mov    rax,QWORD PTR [rcx]
   14001a8e5:	lea    rcx,[r11+0x8]
   14001a8e9:	mov    QWORD PTR [r11-0x70],rcx
   14001a8ed:	mov    QWORD PTR [r11-0x58],rdx
   14001a8f1:	mov    DWORD PTR [rsp+0x48],edi
   14001a8f5:	mov    QWORD PTR [r11-0x78],r9
   14001a8f9:	mov    QWORD PTR [r11-0x40],r9
   14001a8fd:	mov    QWORD PTR [r11-0x48],r8
   14001a901:	mov    r9,r8
   14001a904:	mov    rcx,rsi
   14001a907:	mov    r8d,edi
   14001a90a:	mov    DWORD PTR [r11-0x38],r12d
   14001a90e:	mov    QWORD PTR [r11-0x34],r12
   14001a912:	mov    QWORD PTR [r11+0x8],r12
   14001a916:	call   QWORD PTR [rax]
   14001a918:	mov    QWORD PTR [rsi+0x30],rbx
   14001a91c:	mov    ebp,eax
   14001a91e:	test   eax,eax
   14001a920:	je     0x14001a975
   14001a922:	cmp    edi,0x39
   14001a925:	ja     0x14001a941
   14001a927:	je     0x14001a938
   14001a929:	cmp    edi,0x2e
   14001a92c:	jb     0x14001a959
   14001a92e:	cmp    edi,0x2f
   14001a931:	jbe    0x14001a938
   14001a933:	cmp    edi,0x37
   14001a936:	jne    0x14001a959
   14001a938:	mov    ebp,DWORD PTR [rsp+0xa0]
   14001a93f:	jmp    0x14001a981
   14001a941:	cmp    edi,0x110
   14001a947:	je     0x14001a938
   14001a949:	cmp    edi,0x131
   14001a94f:	jbe    0x14001a959
   14001a951:	cmp    edi,0x138
   14001a957:	jbe    0x14001a938
   14001a959:	test   BYTE PTR [rsi+0x38],0x1
   14001a95d:	jne    0x14001a981
   14001a95f:	mov    r8,QWORD PTR [rsp+0xa0]
   14001a967:	mov    rcx,QWORD PTR [rsi+0x8]
   14001a96b:	xor    edx,edx
   14001a96d:	call   QWORD PTR [rip+0x4dccd]        # 0x140068640
   14001a973:	jmp    0x14001a981
   14001a975:	cmp    edi,0x82
   14001a97b:	jne    0x14001a981
   14001a97d:	or     DWORD PTR [rsi+0x38],0x1
   14001a981:	mov    eax,DWORD PTR [rsi+0x38]
   14001a984:	test   al,0x1
   14001a986:	je     0x14001a9a5
   14001a988:	cmp    QWORD PTR [rsi+0x30],r12
   14001a98c:	jne    0x14001a9a5
   14001a98e:	mov    rdx,QWORD PTR [rsi+0x8]
   14001a992:	and    eax,0xfffffffe
   14001a995:	mov    rcx,rsi
   14001a998:	mov    DWORD PTR [rsi+0x38],eax
   14001a99b:	mov    rax,QWORD PTR [rsi]
   14001a99e:	mov    QWORD PTR [rsi+0x8],r12
   14001a9a2:	call   QWORD PTR [rax+0x18]
   14001a9a5:	lea    r11,[rsp+0x80]
   14001a9ad:	movsxd rax,ebp
   14001a9b0:	mov    rbx,QWORD PTR [r11+0x28]
   14001a9b4:	mov    rbp,QWORD PTR [r11+0x30]
   14001a9b8:	mov    rsp,r11
   14001a9bb:	pop    r12
   14001a9bd:	pop    rdi
   14001a9be:	pop    rsi
   14001a9bf:	ret    
   14001a9c0:	mov    r11,rsp
   14001a9c3:	push   rbp
   14001a9c4:	push   rdi
   14001a9c5:	push   r12
   14001a9c7:	sub    rsp,0x60
   14001a9cb:	xor    eax,eax
   14001a9cd:	mov    QWORD PTR [r11+0x20],rbx
   14001a9d1:	mov    QWORD PTR [r11-0x20],rsi
   14001a9d5:	mov    QWORD PTR [r11-0x28],r13
   14001a9d9:	mov    r12,rdx
   14001a9dc:	mov    r13,rcx
   14001a9df:	mov    QWORD PTR [r11-0x48],rax
   14001a9e3:	mov    DWORD PTR [rsp+0x38],eax
   14001a9e7:	lea    rcx,[r11-0x48]
   14001a9eb:	lea    rdx,[rip+0x50d5e]        # 0x14006b750
   14001a9f2:	mov    dil,0x4
   14001a9f5:	mov    bpl,0x1
   14001a9f8:	xor    sil,sil
   14001a9fb:	mov    DWORD PTR [r11+0x8],eax
   14001a9ff:	mov    QWORD PTR [r11-0x38],rax
   14001aa03:	call   0x1400157b0
   14001aa08:	test   eax,eax
   14001aa0a:	jne    0x14001aa5f
   14001aa0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa11:	lea    rax,[rsp+0x88]
   14001aa19:	lea    r9,[rsp+0x90]
   14001aa21:	mov    QWORD PTR [rsp+0x28],rax
   14001aa26:	lea    rax,[rsp+0x80]
   14001aa2e:	lea    rdx,[rip+0x530b3]        # 0x14006dae8
   14001aa35:	xor    r8d,r8d
   14001aa38:	mov    rcx,rbx
   14001aa3b:	mov    DWORD PTR [rsp+0x88],0x4
   14001aa46:	mov    QWORD PTR [rsp+0x20],rax
   14001aa4b:	call   QWORD PTR [rip+0x4d607]        # 0x140068058
   14001aa51:	test   eax,eax
   14001aa53:	jne    0x14001aa5f
   14001aa55:	cmp    DWORD PTR [rsp+0x90],0x4
   14001aa5d:	je     0x14001aac7
   14001aa5f:	lea    rdx,[rip+0x5309a]        # 0x14006db00
   14001aa66:	lea    rcx,[rsp+0x30]
   14001aa6b:	call   0x1400157b0
   14001aa70:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa75:	test   eax,eax
   14001aa77:	jne    0x14001aade
   14001aa79:	lea    rax,[rsp+0x88]
   14001aa81:	lea    r9,[rsp+0x90]
   14001aa89:	lea    rdx,[rip+0x53058]        # 0x14006dae8
   14001aa90:	mov    QWORD PTR [rsp+0x28],rax
   14001aa95:	lea    rax,[rsp+0x80]
   14001aa9d:	xor    r8d,r8d
   14001aaa0:	mov    rcx,rbx
   14001aaa3:	mov    DWORD PTR [rsp+0x88],0x4
   14001aaae:	mov    QWORD PTR [rsp+0x20],rax
   14001aab3:	call   QWORD PTR [rip+0x4d59f]        # 0x140068058
   14001aab9:	test   eax,eax
   14001aabb:	jne    0x14001aade
   14001aabd:	cmp    DWORD PTR [rsp+0x90],0x4
   14001aac5:	jne    0x14001aade
   14001aac7:	mov    edi,DWORD PTR [rsp+0x80]
   14001aace:	mov    esi,edi
   14001aad0:	movzx  ebp,di
   14001aad3:	shr    esi,0x10
   14001aad6:	shr    bp,0x8
   14001aada:	shr    si,0x8
   14001aade:	test   rbx,rbx
   14001aae1:	je     0x14001aaec
   14001aae3:	mov    rcx,rbx
   14001aae6:	call   QWORD PTR [rip+0x4d55c]        # 0x140068048
   14001aaec:	mov    rbx,QWORD PTR [rsp+0x98]
   14001aaf4:	test   r13,r13
   14001aaf7:	je     0x14001ab01
   14001aaf9:	movzx  eax,sil
   14001aafd:	mov    DWORD PTR [r13+0x0],eax
   14001ab01:	mov    r13,QWORD PTR [rsp+0x50]
   14001ab06:	mov    rsi,QWORD PTR [rsp+0x58]
   14001ab0b:	test   r12,r12
   14001ab0e:	je     0x14001ab18
   14001ab10:	movzx  eax,bpl
   14001ab14:	mov    DWORD PTR [r12],eax
   14001ab18:	movzx  eax,dil
   14001ab1c:	add    rsp,0x60
   14001ab20:	pop    r12
   14001ab22:	pop    rdi
   14001ab23:	pop    rbp
   14001ab24:	ret    
   14001ab25:	int3   
   14001ab26:	int3   
   14001ab27:	int3   
   14001ab28:	int3   
   14001ab29:	int3   
   14001ab2a:	int3   
   14001ab2b:	int3   
   14001ab2c:	int3   
   14001ab2d:	int3   
   14001ab2e:	int3   
   14001ab2f:	int3   
   14001ab30:	sub    rsp,0x148
   14001ab37:	mov    rax,QWORD PTR [rip+0x6a56a]        # 0x1400850a8
   14001ab3e:	xor    rax,rsp
   14001ab41:	mov    QWORD PTR [rsp+0x130],rax
   14001ab49:	lea    rcx,[rsp+0x61]
   14001ab4e:	xor    edx,edx
   14001ab50:	mov    r8d,0xc7
   14001ab56:	mov    BYTE PTR [rsp+0x60],0x0
   14001ab5b:	call   0x140036dc0
   14001ab60:	lea    rcx,[rsp+0x60]
   14001ab65:	call   0x140016bb0
   14001ab6a:	xor    r9d,r9d
   14001ab6d:	lea    rcx,[rip+0x53bfc]        # 0x14006e770
   14001ab74:	test   eax,eax
   14001ab76:	je     0x14001ac5d
   14001ab7c:	lea    rax,[rsp+0x60]
   14001ab81:	lea    edx,[r9+0x71]
   14001ab85:	lea    r8d,[r9+0x2]
   14001ab89:	mov    QWORD PTR [rsp+0x28],rax
   14001ab8e:	lea    rax,[rip+0x53bc3]        # 0x14006e758
   14001ab95:	mov    QWORD PTR [rsp+0x20],rax
   14001ab9a:	call   0x140003150
   14001ab9f:	xor    r11d,r11d
   14001aba2:	lea    rax,[rsp+0x58]
   14001aba7:	lea    rdx,[rip+0x52712]        # 0x14006d2c0
   14001abae:	xor    r9d,r9d
   14001abb1:	mov    QWORD PTR [rsp+0x40],rax
   14001abb6:	lea    rax,[rsp+0x50]
   14001abbb:	xor    r8d,r8d
   14001abbe:	mov    QWORD PTR [rsp+0x38],rax
   14001abc3:	mov    QWORD PTR [rsp+0x30],r11
   14001abc8:	mov    rcx,0xffffffff80000001
   14001abcf:	mov    DWORD PTR [rsp+0x28],0x2001f
   14001abd7:	mov    QWORD PTR [rsp+0x50],r11
   14001abdc:	mov    DWORD PTR [rsp+0x20],r11d
   14001abe1:	call   QWORD PTR [rip+0x4d451]        # 0x140068038
   14001abe7:	cmp    QWORD PTR [rsp+0x50],0x0
   14001abed:	je     0x14001ac46
   14001abef:	lea    rcx,[rsp+0x60]
   14001abf4:	mov    QWORD PTR [rsp+0x140],rbx
   14001abfc:	call   QWORD PTR [rip+0x4d7de]        # 0x1400683e0
   14001ac02:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ac07:	lea    rdx,[rip+0x53bae]        # 0x14006e7bc
   14001ac0e:	inc    eax
   14001ac10:	mov    r9d,0x1
   14001ac16:	xor    r8d,r8d
   14001ac19:	mov    DWORD PTR [rsp+0x28],eax
   14001ac1d:	lea    rax,[rsp+0x60]
   14001ac22:	mov    QWORD PTR [rsp+0x20],rax
   14001ac27:	call   QWORD PTR [rip+0x4d413]        # 0x140068040
   14001ac2d:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ac32:	mov    ebx,eax
   14001ac34:	call   QWORD PTR [rip+0x4d40e]        # 0x140068048
   14001ac3a:	test   ebx,ebx
   14001ac3c:	mov    rbx,QWORD PTR [rsp+0x140]
   14001ac44:	je     0x14001ac82
   14001ac46:	xor    r9d,r9d
   14001ac49:	lea    rax,[rip+0x53b78]        # 0x14006e7c8
   14001ac50:	lea    rcx,[rip+0x53b19]        # 0x14006e770
   14001ac57:	lea    edx,[r9+0x76]
   14001ac5b:	jmp    0x14001ac69
   14001ac5d:	lea    rax,[rip+0x53b84]        # 0x14006e7e8
   14001ac64:	mov    edx,0x7b
   14001ac69:	mov    QWORD PTR [rsp+0x28],rax
   14001ac6e:	lea    rax,[rip+0x5082b]        # 0x14006b4a0
   14001ac75:	xor    r8d,r8d
   14001ac78:	mov    QWORD PTR [rsp+0x20],rax
   14001ac7d:	call   0x140003150
   14001ac82:	mov    rcx,QWORD PTR [rsp+0x130]
   14001ac8a:	xor    rcx,rsp
   14001ac8d:	call   0x140032f00
   14001ac92:	add    rsp,0x148
   14001ac99:	ret    
   14001ac9a:	int3   
   14001ac9b:	int3   
   14001ac9c:	int3   
   14001ac9d:	int3   
   14001ac9e:	int3   
   14001ac9f:	int3   
   14001aca0:	mov    rax,rsp
   14001aca3:	push   rbp
   14001aca4:	lea    rbp,[rax-0x38]
   14001aca8:	sub    rsp,0x130
   14001acaf:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14001acb8:	mov    QWORD PTR [rax+0x8],rbx
   14001acbc:	mov    QWORD PTR [rax+0x10],rsi
   14001acc0:	mov    QWORD PTR [rax+0x18],rdi
   14001acc4:	mov    QWORD PTR [rax+0x20],r12
   14001acc8:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001accc:	mov    rax,QWORD PTR [rip+0x6a3d5]        # 0x1400850a8
   14001acd3:	xor    rax,rsp
   14001acd6:	mov    QWORD PTR [rbp+0x10],rax
   14001acda:	xorpd  xmm6,xmm6
   14001acde:	movsd  QWORD PTR [rsp+0x68],xmm6
   14001ace4:	movsd  QWORD PTR [rsp+0x70],xmm6
   14001acea:	mov    r8d,0x466
   14001acf0:	lea    rdx,[rip+0x53b09]        # 0x14006e800
   14001acf7:	lea    rcx,[rbp-0x40]
   14001acfb:	call   QWORD PTR [rip+0x4d8bf]        # 0x1400685c0
   14001ad01:	mov    r8d,0x468
   14001ad07:	lea    rdx,[rip+0x53af2]        # 0x14006e800
   14001ad0e:	lea    rcx,[rbp-0x18]
   14001ad12:	call   QWORD PTR [rip+0x4d8a8]        # 0x1400685c0
   14001ad18:	xor    r12d,r12d
   14001ad1b:	cmp    BYTE PTR [rip+0x6ff1e],r12b        # 0x14008ac40
   14001ad22:	jne    0x14001afb0
   14001ad28:	mov    QWORD PTR [rsp+0x50],r12
   14001ad2d:	lea    ecx,[r12+0x50]
   14001ad32:	call   0x1400331a0
   14001ad37:	test   rax,rax
   14001ad3a:	je     0x14001af81
   14001ad40:	mov    QWORD PTR [rsp+0x48],rax
   14001ad45:	mov    QWORD PTR [rax],rax
   14001ad48:	mov    rax,QWORD PTR [rsp+0x48]
   14001ad4d:	mov    QWORD PTR [rax+0x8],rax
   14001ad51:	mov    rax,QWORD PTR [rsp+0x48]
   14001ad56:	mov    QWORD PTR [rax+0x10],rax
   14001ad5a:	mov    rax,QWORD PTR [rsp+0x48]
   14001ad5f:	mov    BYTE PTR [rax+0x48],0x1
   14001ad63:	mov    rax,QWORD PTR [rsp+0x48]
   14001ad68:	mov    BYTE PTR [rax+0x49],0x1
   14001ad6c:	mov    DWORD PTR [rsp+0x60],0x4
   14001ad74:	lea    rcx,[rsp+0x40]
   14001ad79:	call   0x14000ef00
   14001ad7e:	nop
   14001ad7f:	lea    rdx,[rbp-0x68]
   14001ad83:	lea    rcx,[rsp+0x40]
   14001ad88:	call   0x14000fe70
   14001ad8d:	nop
   14001ad8e:	lea    rdx,[rbp-0x68]
   14001ad92:	cmp    QWORD PTR [rbp-0x50],0x10
   14001ad97:	cmovae rdx,QWORD PTR [rbp-0x68]
   14001ad9c:	lea    rcx,[rsp+0x40]
   14001ada1:	call   0x14000f390
   14001ada6:	cmp    eax,0xffffffff
   14001ada9:	je     0x14001adcc
   14001adab:	test   eax,eax
   14001adad:	je     0x14001adcc
   14001adaf:	mov    r9d,eax
   14001adb2:	lea    r8,[rip+0x54727]        # 0x14006f4e0
   14001adb9:	mov    edx,0x104
   14001adbe:	lea    rcx,[rip+0x6fe7b]        # 0x14008ac40
   14001adc5:	call   0x1400339ac
   14001adca:	jmp    0x14001ade5
   14001adcc:	lea    r8,[rip+0x53a35]        # 0x14006e808
   14001add3:	mov    edx,0x104
   14001add8:	lea    rcx,[rip+0x6fe61]        # 0x14008ac40
   14001addf:	call   0x1400336a8
   14001ade4:	nop
   14001ade5:	cmp    QWORD PTR [rbp-0x50],0x10
   14001adea:	jb     0x14001adf5
   14001adec:	mov    rcx,QWORD PTR [rbp-0x68]
   14001adf0:	call   0x1400330c0
   14001adf5:	mov    QWORD PTR [rbp-0x50],0xf
   14001adfd:	mov    QWORD PTR [rbp-0x58],r12
   14001ae01:	mov    BYTE PTR [rbp-0x68],0x0
   14001ae05:	mov    rax,QWORD PTR [rsp+0x48]
   14001ae0a:	mov    rbx,QWORD PTR [rax+0x8]
   14001ae0e:	mov    rdi,rbx
   14001ae11:	cmp    BYTE PTR [rbx+0x49],0x0
   14001ae15:	jne    0x14001ae67
   14001ae17:	nop    WORD PTR [rax+rax*1+0x0]
   14001ae20:	mov    rdx,QWORD PTR [rdi+0x10]
   14001ae24:	lea    rcx,[rsp+0x40]
   14001ae29:	call   0x140011a50
   14001ae2e:	mov    rdi,QWORD PTR [rdi]
   14001ae31:	cmp    QWORD PTR [rbx+0x38],0x10
   14001ae36:	jb     0x14001ae41
   14001ae38:	mov    rcx,QWORD PTR [rbx+0x20]
   14001ae3c:	call   0x1400330c0
   14001ae41:	mov    QWORD PTR [rbx+0x38],0xf
   14001ae49:	mov    QWORD PTR [rbx+0x30],r12
   14001ae4d:	mov    BYTE PTR [rbx+0x20],0x0
   14001ae51:	mov    rcx,rbx
   14001ae54:	call   0x1400330c0
   14001ae59:	mov    rbx,rdi
   14001ae5c:	cmp    BYTE PTR [rdi+0x49],0x0
   14001ae60:	je     0x14001ae20
   14001ae62:	mov    rax,QWORD PTR [rsp+0x48]
   14001ae67:	mov    QWORD PTR [rax+0x8],rax
   14001ae6b:	mov    rax,QWORD PTR [rsp+0x48]
   14001ae70:	mov    QWORD PTR [rax],rax
   14001ae73:	mov    rax,QWORD PTR [rsp+0x48]
   14001ae78:	mov    QWORD PTR [rax+0x10],rax
   14001ae7c:	mov    QWORD PTR [rsp+0x50],r12
   14001ae81:	mov    rdi,QWORD PTR [rsp+0x48]
   14001ae86:	mov    rbx,QWORD PTR [rdi]
   14001ae89:	cmp    rbx,rbx
   14001ae8c:	jne    0x14001af03
   14001ae8e:	mov    rbx,QWORD PTR [rdi+0x8]
   14001ae92:	mov    rsi,rbx
   14001ae95:	cmp    BYTE PTR [rbx+0x49],0x0
   14001ae99:	jne    0x14001aee7
   14001ae9b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001aea0:	mov    rdx,QWORD PTR [rsi+0x10]
   14001aea4:	lea    rcx,[rsp+0x40]
   14001aea9:	call   0x140011a50
   14001aeae:	mov    rsi,QWORD PTR [rsi]
   14001aeb1:	cmp    QWORD PTR [rbx+0x38],0x10
   14001aeb6:	jb     0x14001aec1
   14001aeb8:	mov    rcx,QWORD PTR [rbx+0x20]
   14001aebc:	call   0x1400330c0
   14001aec1:	mov    QWORD PTR [rbx+0x38],0xf
   14001aec9:	mov    QWORD PTR [rbx+0x30],r12
   14001aecd:	mov    BYTE PTR [rbx+0x20],0x0
   14001aed1:	mov    rcx,rbx
   14001aed4:	call   0x1400330c0
   14001aed9:	mov    rbx,rsi
   14001aedc:	cmp    BYTE PTR [rsi+0x49],0x0
   14001aee0:	je     0x14001aea0
   14001aee2:	mov    rdi,QWORD PTR [rsp+0x48]
   14001aee7:	mov    QWORD PTR [rdi+0x8],rdi
   14001aeeb:	mov    rax,QWORD PTR [rsp+0x48]
   14001aef0:	mov    QWORD PTR [rax],rax
   14001aef3:	mov    rax,QWORD PTR [rsp+0x48]
   14001aef8:	mov    QWORD PTR [rax+0x10],rax
   14001aefc:	mov    QWORD PTR [rsp+0x50],r12
   14001af01:	jmp    0x14001af72
   14001af03:	cmp    rbx,rdi
   14001af06:	je     0x14001af77
   14001af08:	nop    DWORD PTR [rax+rax*1+0x0]
   14001af10:	mov    r8,rbx
   14001af13:	cmp    BYTE PTR [rbx+0x49],0x0
   14001af17:	jne    0x14001af5e
   14001af19:	mov    rax,QWORD PTR [rbx+0x10]
   14001af1d:	cmp    BYTE PTR [rax+0x49],0x0
   14001af21:	jne    0x14001af3e
   14001af23:	mov    rbx,rax
   14001af26:	mov    rax,QWORD PTR [rax]
   14001af29:	cmp    BYTE PTR [rax+0x49],0x0
   14001af2d:	jne    0x14001af5e
   14001af2f:	nop
   14001af30:	mov    rbx,rax
   14001af33:	mov    rax,QWORD PTR [rax]
   14001af36:	cmp    BYTE PTR [rax+0x49],0x0
   14001af3a:	je     0x14001af30
   14001af3c:	jmp    0x14001af5e
   14001af3e:	mov    rax,QWORD PTR [rbx+0x8]
   14001af42:	cmp    BYTE PTR [rax+0x49],0x0
   14001af46:	jne    0x14001af5b
   14001af48:	cmp    rbx,QWORD PTR [rax+0x10]
   14001af4c:	jne    0x14001af5b
   14001af4e:	mov    rbx,rax
   14001af51:	mov    rax,QWORD PTR [rax+0x8]
   14001af55:	cmp    BYTE PTR [rax+0x49],0x0
   14001af59:	je     0x14001af48
   14001af5b:	mov    rbx,rax
   14001af5e:	lea    rdx,[rsp+0x30]
   14001af63:	lea    rcx,[rsp+0x40]
   14001af68:	call   0x140011560
   14001af6d:	cmp    rbx,rdi
   14001af70:	jne    0x14001af10
   14001af72:	mov    rdi,QWORD PTR [rsp+0x48]
   14001af77:	mov    rcx,rdi
   14001af7a:	call   0x1400330c0
   14001af7f:	jmp    0x14001afb0
   14001af81:	mov    QWORD PTR [rsp+0x30],r12
   14001af86:	lea    rdx,[rsp+0x30]
   14001af8b:	lea    rcx,[rbp-0x80]
   14001af8f:	call   0x140032fd4
   14001af94:	lea    r11,[rip+0x4d8f5]        # 0x140068890
   14001af9b:	mov    QWORD PTR [rbp-0x80],r11
   14001af9f:	lea    rdx,[rip+0x6847a]        # 0x140083420
   14001afa6:	lea    rcx,[rbp-0x80]
   14001afaa:	call   0x140036358
   14001afaf:	int3   
   14001afb0:	mov    QWORD PTR [rsp+0x30],r12
   14001afb5:	lea    rax,[rsp+0x30]
   14001afba:	mov    QWORD PTR [rsp+0x20],rax
   14001afbf:	mov    r9d,0x20019
   14001afc5:	xor    r8d,r8d
   14001afc8:	lea    rdx,[rip+0x6fc71]        # 0x14008ac40
   14001afcf:	mov    rcx,0xffffffff80000002
   14001afd6:	call   QWORD PTR [rip+0x4d074]        # 0x140068050
   14001afdc:	mov    rcx,QWORD PTR [rsp+0x30]
   14001afe1:	test   rcx,rcx
   14001afe4:	je     0x14001b029
   14001afe6:	mov    BYTE PTR [rsp+0x68],0x0
   14001afeb:	mov    DWORD PTR [rsp+0x38],r12d
   14001aff0:	mov    DWORD PTR [rsp+0x3c],0x8
   14001aff8:	lea    rax,[rsp+0x3c]
   14001affd:	mov    QWORD PTR [rsp+0x28],rax
   14001b002:	lea    rax,[rsp+0x68]
   14001b007:	mov    QWORD PTR [rsp+0x20],rax
   14001b00c:	lea    r9,[rsp+0x38]
   14001b011:	xor    r8d,r8d
   14001b014:	lea    rdx,[rbp-0x40]
   14001b018:	call   QWORD PTR [rip+0x4d03a]        # 0x140068058
   14001b01e:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b023:	call   QWORD PTR [rip+0x4d01f]        # 0x140068048
   14001b029:	mov    QWORD PTR [rsp+0x30],r12
   14001b02e:	lea    rax,[rsp+0x30]
   14001b033:	mov    QWORD PTR [rsp+0x20],rax
   14001b038:	mov    r9d,0x20019
   14001b03e:	xor    r8d,r8d
   14001b041:	lea    rdx,[rip+0x6fbf8]        # 0x14008ac40
   14001b048:	mov    rcx,0xffffffff80000002
   14001b04f:	call   QWORD PTR [rip+0x4cffb]        # 0x140068050
   14001b055:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b05a:	test   rcx,rcx
   14001b05d:	je     0x14001b0a2
   14001b05f:	mov    BYTE PTR [rsp+0x70],0x0
   14001b064:	mov    DWORD PTR [rsp+0x3c],r12d
   14001b069:	mov    DWORD PTR [rsp+0x38],0x8
   14001b071:	lea    rax,[rsp+0x38]
   14001b076:	mov    QWORD PTR [rsp+0x28],rax
   14001b07b:	lea    rax,[rsp+0x70]
   14001b080:	mov    QWORD PTR [rsp+0x20],rax
   14001b085:	lea    r9,[rsp+0x3c]
   14001b08a:	xor    r8d,r8d
   14001b08d:	lea    rdx,[rbp-0x18]
   14001b091:	call   QWORD PTR [rip+0x4cfc1]        # 0x140068058
   14001b097:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b09c:	call   QWORD PTR [rip+0x4cfa6]        # 0x140068048
   14001b0a2:	ucomisd xmm6,QWORD PTR [rsp+0x68]
   14001b0a8:	jp     0x14001b0ac
   14001b0aa:	je     0x14001b0bc
   14001b0ac:	ucomisd xmm6,QWORD PTR [rsp+0x70]
   14001b0b2:	jp     0x14001b0b6
   14001b0b4:	je     0x14001b0bc
   14001b0b6:	mov    r12d,0x1
   14001b0bc:	mov    eax,r12d
   14001b0bf:	mov    rcx,QWORD PTR [rbp+0x10]
   14001b0c3:	xor    rcx,rsp
   14001b0c6:	call   0x140032f00
   14001b0cb:	lea    r11,[rsp+0x130]
   14001b0d3:	mov    rbx,QWORD PTR [r11+0x10]
   14001b0d7:	mov    rsi,QWORD PTR [r11+0x18]
   14001b0db:	mov    rdi,QWORD PTR [r11+0x20]
   14001b0df:	mov    r12,QWORD PTR [r11+0x28]
   14001b0e3:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14001b0e8:	mov    rsp,r11
   14001b0eb:	pop    rbp
   14001b0ec:	ret    
   14001b0ed:	int3   
   14001b0ee:	int3   
   14001b0ef:	int3   
   14001b0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b0f5:	push   rbp
   14001b0f6:	lea    rbp,[rsp-0x57]
   14001b0fb:	sub    rsp,0xc0
   14001b102:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   14001b10a:	mov    rax,QWORD PTR [rip+0x69f97]        # 0x1400850a8
   14001b111:	xor    rax,rsp
   14001b114:	mov    QWORD PTR [rbp+0x37],rax
   14001b118:	xorpd  xmm6,xmm6
   14001b11c:	lea    rdx,[rip+0x536dd]        # 0x14006e800
   14001b123:	lea    rcx,[rbp-0x19]
   14001b127:	mov    r8d,0x134
   14001b12d:	movsd  QWORD PTR [rbp-0x29],xmm6
   14001b132:	movsd  QWORD PTR [rbp-0x21],xmm6
   14001b137:	call   QWORD PTR [rip+0x4d483]        # 0x1400685c0
   14001b13d:	lea    rdx,[rip+0x536bc]        # 0x14006e800
   14001b144:	lea    rcx,[rbp+0xf]
   14001b148:	mov    r8d,0x447
   14001b14e:	call   QWORD PTR [rip+0x4d46c]        # 0x1400685c0
   14001b154:	lea    rax,[rbp-0x39]
   14001b158:	lea    rdx,[rip+0x505f1]        # 0x14006b750
   14001b15f:	xor    ebx,ebx
   14001b161:	mov    r9d,0x20019
   14001b167:	xor    r8d,r8d
   14001b16a:	mov    rcx,0xffffffff80000002
   14001b171:	mov    QWORD PTR [rsp+0x20],rax
   14001b176:	mov    QWORD PTR [rbp-0x39],rbx
   14001b17a:	call   QWORD PTR [rip+0x4ced0]        # 0x140068050
   14001b180:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b184:	test   rcx,rcx
   14001b187:	je     0x14001b1c3
   14001b189:	lea    rax,[rbp-0x31]
   14001b18d:	lea    r9,[rbp-0x2d]
   14001b191:	lea    rdx,[rbp-0x19]
   14001b195:	mov    QWORD PTR [rsp+0x28],rax
   14001b19a:	lea    rax,[rbp-0x29]
   14001b19e:	xor    r8d,r8d
   14001b1a1:	mov    BYTE PTR [rbp-0x29],bl
   14001b1a4:	mov    DWORD PTR [rbp-0x2d],ebx
   14001b1a7:	mov    DWORD PTR [rbp-0x31],0x8
   14001b1ae:	mov    QWORD PTR [rsp+0x20],rax
   14001b1b3:	call   QWORD PTR [rip+0x4ce9f]        # 0x140068058
   14001b1b9:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b1bd:	call   QWORD PTR [rip+0x4ce85]        # 0x140068048
   14001b1c3:	ucomisd xmm6,QWORD PTR [rbp-0x29]
   14001b1c8:	jp     0x14001b1cc
   14001b1ca:	je     0x14001b24b
   14001b1cc:	lea    rax,[rbp-0x39]
   14001b1d0:	lea    rdx,[rip+0x53631]        # 0x14006e808
   14001b1d7:	mov    r9d,0x20019
   14001b1dd:	xor    r8d,r8d
   14001b1e0:	mov    rcx,0xffffffff80000002
   14001b1e7:	mov    QWORD PTR [rbp-0x39],rbx
   14001b1eb:	mov    QWORD PTR [rsp+0x20],rax
   14001b1f0:	call   QWORD PTR [rip+0x4ce5a]        # 0x140068050
   14001b1f6:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b1fa:	test   rcx,rcx
   14001b1fd:	je     0x14001b239
   14001b1ff:	lea    rax,[rbp-0x2d]
   14001b203:	lea    r9,[rbp-0x31]
   14001b207:	lea    rdx,[rbp+0xf]
   14001b20b:	mov    QWORD PTR [rsp+0x28],rax
   14001b210:	lea    rax,[rbp-0x21]
   14001b214:	xor    r8d,r8d
   14001b217:	mov    BYTE PTR [rbp-0x21],bl
   14001b21a:	mov    DWORD PTR [rbp-0x31],ebx
   14001b21d:	mov    DWORD PTR [rbp-0x2d],0x8
   14001b224:	mov    QWORD PTR [rsp+0x20],rax
   14001b229:	call   QWORD PTR [rip+0x4ce29]        # 0x140068058
   14001b22f:	mov    rcx,QWORD PTR [rbp-0x39]
   14001b233:	call   QWORD PTR [rip+0x4ce0f]        # 0x140068048
   14001b239:	ucomisd xmm6,QWORD PTR [rbp-0x29]
   14001b23e:	jp     0x14001b242
   14001b240:	je     0x14001b24b
   14001b242:	ucomisd xmm6,QWORD PTR [rbp-0x21]
   14001b247:	jp     0x14001b24f
   14001b249:	jne    0x14001b24f
   14001b24b:	mov    eax,ebx
   14001b24d:	jmp    0x14001b254
   14001b24f:	mov    eax,0x1
   14001b254:	mov    rcx,QWORD PTR [rbp+0x37]
   14001b258:	xor    rcx,rsp
   14001b25b:	call   0x140032f00
   14001b260:	mov    rbx,QWORD PTR [rsp+0xd0]
   14001b268:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   14001b270:	add    rsp,0xc0
   14001b277:	pop    rbp
   14001b278:	ret    
   14001b279:	int3   
   14001b27a:	int3   
   14001b27b:	int3   
   14001b27c:	int3   
   14001b27d:	int3   
   14001b27e:	int3   
   14001b27f:	int3   
   14001b280:	mov    rax,rsp
   14001b283:	push   rdi
   14001b284:	push   r12
   14001b286:	push   r13
   14001b288:	push   r14
   14001b28a:	push   r15
   14001b28c:	sub    rsp,0x1a0
   14001b293:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14001b29c:	mov    QWORD PTR [rax+0x8],rbx
   14001b2a0:	mov    QWORD PTR [rax+0x10],rbp
   14001b2a4:	mov    QWORD PTR [rax+0x18],rsi
   14001b2a8:	mov    rax,QWORD PTR [rip+0x69df9]        # 0x1400850a8
   14001b2af:	xor    rax,rsp
   14001b2b2:	mov    QWORD PTR [rsp+0x190],rax
   14001b2ba:	xor    edi,edi
   14001b2bc:	cmp    DWORD PTR [rip+0x6df09],0x1        # 0x1400891cc
   14001b2c3:	jg     0x14001b2cd
   14001b2c5:	lea    eax,[rdi+0x1]
   14001b2c8:	jmp    0x14001b6d0
   14001b2cd:	xor    r15d,r15d
   14001b2d0:	xor    eax,eax
   14001b2d2:	mov    DWORD PTR [rsp+0x54],eax
   14001b2d6:	mov    r13d,0x1
   14001b2dc:	cmp    DWORD PTR [rip+0x6dee9],r13d        # 0x1400891cc
   14001b2e3:	jle    0x14001b6d0
   14001b2e9:	lea    r14d,[r15+0x8]
   14001b2ed:	lea    rbp,[rip+0x53544]        # 0x14006e838
   14001b2f4:	lea    rsi,[rip+0x501a5]        # 0x14006b4a0
   14001b2fb:	or     r12d,0xffffffff
   14001b2ff:	nop
   14001b300:	mov    rax,QWORD PTR [rip+0x6dec9]        # 0x1400891d0
   14001b307:	mov    rbx,QWORD PTR [r14+rax*1]
   14001b30b:	movzx  eax,BYTE PTR [rbx]
   14001b30e:	cmp    al,0x2f
   14001b310:	je     0x14001b31a
   14001b312:	cmp    al,0x2d
   14001b314:	jne    0x14001b5d3
   14001b31a:	inc    rbx
   14001b31d:	lea    rdx,[rip+0x5350c]        # 0x14006e830
   14001b324:	mov    rcx,rbx
   14001b327:	call   0x1400338c4
   14001b32c:	test   eax,eax
   14001b32e:	jne    0x14001b36b
   14001b330:	mov    QWORD PTR [rsp+0x28],rbp
   14001b335:	mov    QWORD PTR [rsp+0x20],rsi
   14001b33a:	xor    r9d,r9d
   14001b33d:	mov    edx,0xec
   14001b342:	lea    r8d,[rax+0x2]
   14001b346:	lea    rcx,[rip+0x53423]        # 0x14006e770
   14001b34d:	call   0x140003150
   14001b352:	mov    rcx,QWORD PTR [rip+0x6f10f]        # 0x14008a468
   14001b359:	test   rcx,rcx
   14001b35c:	je     0x14001b364
   14001b35e:	call   QWORD PTR [rip+0x4d094]        # 0x1400683f8
   14001b364:	xor    edi,edi
   14001b366:	jmp    0x14001b5d3
   14001b36b:	lea    rdx,[rip+0x534d6]        # 0x14006e848
   14001b372:	mov    rcx,rbx
   14001b375:	call   0x1400338c4
   14001b37a:	test   eax,eax
   14001b37c:	jne    0x14001b38b
   14001b37e:	mov    edi,0x1
   14001b383:	mov    r15d,edi
   14001b386:	jmp    0x14001b5d3
   14001b38b:	lea    rdx,[rip+0x534be]        # 0x14006e850
   14001b392:	mov    rcx,rbx
   14001b395:	call   0x1400338c4
   14001b39a:	test   eax,eax
   14001b39c:	jne    0x14001b458
   14001b3a2:	lea    rax,[rip+0x534b7]        # 0x14006e860
   14001b3a9:	mov    QWORD PTR [rsp+0x28],rax
   14001b3ae:	mov    QWORD PTR [rsp+0x20],rsi
   14001b3b3:	xor    r9d,r9d
   14001b3b6:	mov    edx,0xff
   14001b3bb:	lea    r8d,[r9+0x2]
   14001b3bf:	lea    rcx,[rip+0x533aa]        # 0x14006e770
   14001b3c6:	call   0x140003150
   14001b3cb:	mov    QWORD PTR [rsp+0x58],0x0
   14001b3d4:	lea    rax,[rsp+0x70]
   14001b3d9:	mov    QWORD PTR [rsp+0x40],rax
   14001b3de:	lea    rax,[rsp+0x58]
   14001b3e3:	mov    QWORD PTR [rsp+0x38],rax
   14001b3e8:	mov    QWORD PTR [rsp+0x30],0x0
   14001b3f1:	mov    DWORD PTR [rsp+0x28],0x2001f
   14001b3f9:	mov    DWORD PTR [rsp+0x20],0x0
   14001b401:	xor    r9d,r9d
   14001b404:	xor    r8d,r8d
   14001b407:	lea    rdx,[rip+0x53472]        # 0x14006e880
   14001b40e:	mov    rcx,0xffffffff80000002
   14001b415:	call   QWORD PTR [rip+0x4cc1d]        # 0x140068038
   14001b41b:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b420:	test   rcx,rcx
   14001b423:	je     0x14001b43d
   14001b425:	lea    rdx,[rip+0x53444]        # 0x14006e870
   14001b42c:	call   QWORD PTR [rip+0x4cbfe]        # 0x140068030
   14001b432:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b437:	call   QWORD PTR [rip+0x4cc0b]        # 0x140068048
   14001b43d:	mov    rcx,QWORD PTR [rip+0x6f024]        # 0x14008a468
   14001b444:	test   rcx,rcx
   14001b447:	je     0x14001b5d3
   14001b44d:	call   QWORD PTR [rip+0x4cfa5]        # 0x1400683f8
   14001b453:	jmp    0x14001b5d3
   14001b458:	lea    rdx,[rip+0x5335d]        # 0x14006e7bc
   14001b45f:	mov    rcx,rbx
   14001b462:	call   0x1400338c4
   14001b467:	test   eax,eax
   14001b469:	jne    0x14001b49e
   14001b46b:	lea    rax,[rip+0x5343e]        # 0x14006e8b0
   14001b472:	mov    QWORD PTR [rsp+0x28],rax
   14001b477:	mov    QWORD PTR [rsp+0x20],rsi
   14001b47c:	xor    r9d,r9d
   14001b47f:	mov    edx,0x10c
   14001b484:	lea    r8d,[r9+0x2]
   14001b488:	lea    rcx,[rip+0x532e1]        # 0x14006e770
   14001b48f:	call   0x140003150
   14001b494:	call   0x14001ab30
   14001b499:	jmp    0x14001b5d3
   14001b49e:	lea    rdx,[rip+0x53417]        # 0x14006e8bc
   14001b4a5:	mov    rcx,rbx
   14001b4a8:	call   0x1400338c4
   14001b4ad:	test   eax,eax
   14001b4af:	jne    0x14001b5d3
   14001b4b5:	lea    rax,[rip+0x5340c]        # 0x14006e8c8
   14001b4bc:	mov    QWORD PTR [rsp+0x28],rax
   14001b4c1:	mov    QWORD PTR [rsp+0x20],rsi
   14001b4c6:	xor    r9d,r9d
   14001b4c9:	mov    edx,0x111
   14001b4ce:	lea    r8d,[r9+0x2]
   14001b4d2:	lea    rcx,[rip+0x53297]        # 0x14006e770
   14001b4d9:	call   0x140003150
   14001b4de:	mov    DWORD PTR [rsp+0x54],0x1
   14001b4e6:	mov    edi,0x1
   14001b4eb:	mov    DWORD PTR [rsp+0x50],r12d
   14001b4f0:	lea    rdx,[rsp+0x50]
   14001b4f5:	xor    ecx,ecx
   14001b4f7:	call   0x14001a9c0
   14001b4fc:	mov    ebp,eax
   14001b4fe:	lea    rcx,[rip+0x6b253]        # 0x140086758
   14001b505:	mov    rax,QWORD PTR [rip+0x6b24c]        # 0x140086758
   14001b50c:	call   QWORD PTR [rax+0x18]
   14001b50f:	lea    rbx,[rax+0x18]
   14001b513:	mov    QWORD PTR [rsp+0x68],rbx
   14001b518:	mov    esi,DWORD PTR [rsp+0x50]
   14001b51c:	cmp    esi,0x5
   14001b51f:	jne    0x14001b544
   14001b521:	lea    ecx,[rdi+0x69]
   14001b524:	call   0x14000c810
   14001b529:	test   rax,rax
   14001b52c:	je     0x14001b544
   14001b52e:	lea    r8d,[rdi+0x69]
   14001b532:	mov    rdx,rax
   14001b535:	lea    rcx,[rsp+0x68]
   14001b53a:	call   0x14000c9d0
   14001b53f:	mov    rbx,QWORD PTR [rsp+0x68]
   14001b544:	mov    rcx,rbx
   14001b547:	call   0x140013c60
   14001b54c:	test   eax,eax
   14001b54e:	je     0x14001b578
   14001b550:	cmp    esi,0x5
   14001b553:	je     0x14001b5aa
   14001b555:	xor    eax,eax
   14001b557:	cmp    ebp,0x2
   14001b55a:	sete   al
   14001b55d:	mov    DWORD PTR [rip+0x6f2d5],eax        # 0x14008a838
   14001b563:	lea    rax,[rip+0x6ef36]        # 0x14008a4a0
   14001b56a:	mov    QWORD PTR [rip+0x6f217],rax        # 0x14008a788
   14001b571:	call   0x14001e090
   14001b576:	jmp    0x14001b5aa
   14001b578:	lea    rax,[rip+0x53369]        # 0x14006e8e8
   14001b57f:	mov    QWORD PTR [rsp+0x28],rax
   14001b584:	lea    rsi,[rip+0x4ff15]        # 0x14006b4a0
   14001b58b:	mov    QWORD PTR [rsp+0x20],rsi
   14001b590:	xor    r9d,r9d
   14001b593:	mov    edx,0x12b
   14001b598:	lea    r8d,[r9+0x2]
   14001b59c:	lea    rcx,[rip+0x531cd]        # 0x14006e770
   14001b5a3:	call   0x140003150
   14001b5a8:	jmp    0x14001b5b1
   14001b5aa:	lea    rsi,[rip+0x4feef]        # 0x14006b4a0
   14001b5b1:	lea    rdx,[rbx-0x18]
   14001b5b5:	mov    eax,r12d
   14001b5b8:	lock xadd DWORD PTR [rdx+0x10],eax
   14001b5bd:	dec    eax
   14001b5bf:	test   eax,eax
   14001b5c1:	jg     0x14001b5cc
   14001b5c3:	mov    rcx,QWORD PTR [rdx]
   14001b5c6:	mov    rax,QWORD PTR [rcx]
   14001b5c9:	call   QWORD PTR [rax+0x8]
   14001b5cc:	lea    rbp,[rip+0x53265]        # 0x14006e838
   14001b5d3:	inc    r13d
   14001b5d6:	add    r14,0x8
   14001b5da:	cmp    r13d,DWORD PTR [rip+0x6dbeb]        # 0x1400891cc
   14001b5e1:	jl     0x14001b300
   14001b5e7:	test   r15d,r15d
   14001b5ea:	je     0x14001b6ce
   14001b5f0:	lea    rax,[rip+0x53319]        # 0x14006e910
   14001b5f7:	mov    QWORD PTR [rsp+0x28],rax
   14001b5fc:	mov    QWORD PTR [rsp+0x20],rsi
   14001b601:	xor    r9d,r9d
   14001b604:	mov    edx,0x133
   14001b609:	lea    r8d,[r9+0x2]
   14001b60d:	lea    rcx,[rip+0x5315c]        # 0x14006e770
   14001b614:	call   0x140003150
   14001b619:	mov    r8d,0x104
   14001b61f:	lea    rdx,[rsp+0x80]
   14001b627:	xor    ecx,ecx
   14001b629:	call   QWORD PTR [rip+0x4cb61]        # 0x140068190
   14001b62f:	cmp    BYTE PTR [rsp+0x80],0x0
   14001b637:	je     0x14001b6ce
   14001b63d:	lea    rcx,[rip+0x6b114]        # 0x140086758
   14001b644:	mov    rax,QWORD PTR [rip+0x6b10d]        # 0x140086758
   14001b64b:	call   QWORD PTR [rax+0x18]
   14001b64e:	add    rax,0x18
   14001b652:	mov    QWORD PTR [rsp+0x60],rax
   14001b657:	lea    r8,[rsp+0x80]
   14001b65f:	lea    rdx,[rip+0x532ba]        # 0x14006e920
   14001b666:	lea    rcx,[rsp+0x60]
   14001b66b:	call   0x140015180
   14001b670:	mov    eax,DWORD PTR [rsp+0x54]
   14001b674:	test   eax,eax
   14001b676:	je     0x14001b68f
   14001b678:	mov    r8d,0x6
   14001b67e:	lea    rdx,[rip+0x532a3]        # 0x14006e928
   14001b685:	lea    rcx,[rsp+0x60]
   14001b68a:	call   0x1400146a0
   14001b68f:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b694:	mov    r9,rbx
   14001b697:	lea    r8,[rip+0x531d2]        # 0x14006e870
   14001b69e:	lea    rdx,[rip+0x531db]        # 0x14006e880
   14001b6a5:	mov    rcx,0xffffffff80000002
   14001b6ac:	call   0x1400158e0
   14001b6b1:	nop
   14001b6b2:	lea    rdx,[rbx-0x18]
   14001b6b6:	lock xadd DWORD PTR [rdx+0x10],r12d
   14001b6bc:	dec    r12d
   14001b6bf:	test   r12d,r12d
   14001b6c2:	jg     0x14001b6ce
   14001b6c4:	mov    rcx,QWORD PTR [rdx]
   14001b6c7:	mov    r8,QWORD PTR [rcx]
   14001b6ca:	call   QWORD PTR [r8+0x8]
   14001b6ce:	mov    eax,edi
   14001b6d0:	mov    rcx,QWORD PTR [rsp+0x190]
   14001b6d8:	xor    rcx,rsp
   14001b6db:	call   0x140032f00
   14001b6e0:	lea    r11,[rsp+0x1a0]
   14001b6e8:	mov    rbx,QWORD PTR [r11+0x30]
   14001b6ec:	mov    rbp,QWORD PTR [r11+0x38]
   14001b6f0:	mov    rsi,QWORD PTR [r11+0x40]
   14001b6f4:	mov    rsp,r11
   14001b6f7:	pop    r15
   14001b6f9:	pop    r14
   14001b6fb:	pop    r13
   14001b6fd:	pop    r12
   14001b6ff:	pop    rdi
   14001b700:	ret    
   14001b701:	int3   
   14001b702:	int3   
   14001b703:	int3   
   14001b704:	int3   
   14001b705:	int3   
   14001b706:	int3   
   14001b707:	int3   
   14001b708:	int3   
   14001b709:	int3   
   14001b70a:	int3   
   14001b70b:	int3   
   14001b70c:	int3   
   14001b70d:	int3   
   14001b70e:	int3   
   14001b70f:	int3   
   14001b710:	mov    rax,rsp
   14001b713:	push   rbp
   14001b714:	push   rdi
   14001b715:	push   r12
   14001b717:	push   r13
   14001b719:	push   r14
   14001b71b:	mov    rbp,rsp
   14001b71e:	sub    rsp,0x70
   14001b722:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14001b72a:	mov    QWORD PTR [rax+0x18],rbx
   14001b72e:	mov    QWORD PTR [rax+0x20],rsi
   14001b732:	xor    r14d,r14d
   14001b735:	mov    r12d,r14d
   14001b738:	lea    r13,[rip+0x531f1]        # 0x14006e930
   14001b73f:	nop
   14001b740:	mov    ebx,DWORD PTR [r13+0x0]
   14001b744:	mov    QWORD PTR [rbp-0x20],r14
   14001b748:	mov    ecx,0x50
   14001b74d:	call   0x1400331a0
   14001b752:	test   rax,rax
   14001b755:	je     0x14001b907
   14001b75b:	mov    QWORD PTR [rbp-0x28],rax
   14001b75f:	mov    QWORD PTR [rax],rax
   14001b762:	mov    rax,QWORD PTR [rbp-0x28]
   14001b766:	mov    QWORD PTR [rax+0x8],rax
   14001b76a:	mov    rax,QWORD PTR [rbp-0x28]
   14001b76e:	mov    QWORD PTR [rax+0x10],rax
   14001b772:	mov    rax,QWORD PTR [rbp-0x28]
   14001b776:	mov    BYTE PTR [rax+0x48],0x1
   14001b77a:	mov    rax,QWORD PTR [rbp-0x28]
   14001b77e:	mov    BYTE PTR [rax+0x49],0x1
   14001b782:	mov    DWORD PTR [rbp-0x10],ebx
   14001b785:	lea    rcx,[rbp-0x30]
   14001b789:	call   0x14000ef00
   14001b78e:	nop
   14001b78f:	mov    rax,QWORD PTR [rbp-0x28]
   14001b793:	mov    rbx,QWORD PTR [rax+0x8]
   14001b797:	mov    rdi,rbx
   14001b79a:	cmp    BYTE PTR [rbx+0x49],0x0
   14001b79e:	jne    0x14001b7e5
   14001b7a0:	mov    rdx,QWORD PTR [rdi+0x10]
   14001b7a4:	lea    rcx,[rbp-0x30]
   14001b7a8:	call   0x140011a50
   14001b7ad:	mov    rdi,QWORD PTR [rdi]
   14001b7b0:	cmp    QWORD PTR [rbx+0x38],0x10
   14001b7b5:	jb     0x14001b7c0
   14001b7b7:	mov    rcx,QWORD PTR [rbx+0x20]
   14001b7bb:	call   0x1400330c0
   14001b7c0:	mov    QWORD PTR [rbx+0x38],0xf
   14001b7c8:	mov    QWORD PTR [rbx+0x30],r14
   14001b7cc:	mov    BYTE PTR [rbx+0x20],0x0
   14001b7d0:	mov    rcx,rbx
   14001b7d3:	call   0x1400330c0
   14001b7d8:	mov    rbx,rdi
   14001b7db:	cmp    BYTE PTR [rdi+0x49],0x0
   14001b7df:	je     0x14001b7a0
   14001b7e1:	mov    rax,QWORD PTR [rbp-0x28]
   14001b7e5:	mov    QWORD PTR [rax+0x8],rax
   14001b7e9:	mov    rax,QWORD PTR [rbp-0x28]
   14001b7ed:	mov    QWORD PTR [rax],rax
   14001b7f0:	mov    rax,QWORD PTR [rbp-0x28]
   14001b7f4:	mov    QWORD PTR [rax+0x10],rax
   14001b7f8:	mov    QWORD PTR [rbp-0x20],r14
   14001b7fc:	mov    rdi,QWORD PTR [rbp-0x28]
   14001b800:	mov    rbx,QWORD PTR [rdi]
   14001b803:	cmp    rbx,rbx
   14001b806:	jne    0x14001b87e
   14001b808:	mov    rbx,QWORD PTR [rdi+0x8]
   14001b80c:	mov    rsi,rbx
   14001b80f:	cmp    BYTE PTR [rbx+0x49],0x0
   14001b813:	jne    0x14001b865
   14001b815:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b820:	mov    rdx,QWORD PTR [rsi+0x10]
   14001b824:	lea    rcx,[rbp-0x30]
   14001b828:	call   0x140011a50
   14001b82d:	mov    rsi,QWORD PTR [rsi]
   14001b830:	cmp    QWORD PTR [rbx+0x38],0x10
   14001b835:	jb     0x14001b840
   14001b837:	mov    rcx,QWORD PTR [rbx+0x20]
   14001b83b:	call   0x1400330c0
   14001b840:	mov    QWORD PTR [rbx+0x38],0xf
   14001b848:	mov    QWORD PTR [rbx+0x30],r14
   14001b84c:	mov    BYTE PTR [rbx+0x20],0x0
   14001b850:	mov    rcx,rbx
   14001b853:	call   0x1400330c0
   14001b858:	mov    rbx,rsi
   14001b85b:	cmp    BYTE PTR [rsi+0x49],0x0
   14001b85f:	je     0x14001b820
   14001b861:	mov    rdi,QWORD PTR [rbp-0x28]
   14001b865:	mov    QWORD PTR [rdi+0x8],rdi
   14001b869:	mov    rax,QWORD PTR [rbp-0x28]
   14001b86d:	mov    QWORD PTR [rax],rax
   14001b870:	mov    rax,QWORD PTR [rbp-0x28]
   14001b874:	mov    QWORD PTR [rax+0x10],rax
   14001b878:	mov    QWORD PTR [rbp-0x20],r14
   14001b87c:	jmp    0x14001b8e8
   14001b87e:	cmp    rbx,rdi
   14001b881:	je     0x14001b8ec
   14001b883:	mov    r8,rbx
   14001b886:	cmp    BYTE PTR [rbx+0x49],0x0
   14001b88a:	jne    0x14001b8d6
   14001b88c:	mov    rax,QWORD PTR [rbx+0x10]
   14001b890:	cmp    BYTE PTR [rax+0x49],0x0
   14001b894:	jne    0x14001b8b0
   14001b896:	mov    rbx,rax
   14001b899:	mov    rax,QWORD PTR [rax]
   14001b89c:	cmp    BYTE PTR [rax+0x49],0x0
   14001b8a0:	jne    0x14001b8d6
   14001b8a2:	mov    rbx,rax
   14001b8a5:	mov    rax,QWORD PTR [rax]
   14001b8a8:	cmp    BYTE PTR [rax+0x49],0x0
   14001b8ac:	je     0x14001b8a2
   14001b8ae:	jmp    0x14001b8d6
   14001b8b0:	mov    rax,QWORD PTR [rbx+0x8]
   14001b8b4:	cmp    BYTE PTR [rax+0x49],0x0
   14001b8b8:	jne    0x14001b8d3
   14001b8ba:	nop    WORD PTR [rax+rax*1+0x0]
   14001b8c0:	cmp    rbx,QWORD PTR [rax+0x10]
   14001b8c4:	jne    0x14001b8d3
   14001b8c6:	mov    rbx,rax
   14001b8c9:	mov    rax,QWORD PTR [rax+0x8]
   14001b8cd:	cmp    BYTE PTR [rax+0x49],0x0
   14001b8d1:	je     0x14001b8c0
   14001b8d3:	mov    rbx,rax
   14001b8d6:	lea    rdx,[rbp+0x38]
   14001b8da:	lea    rcx,[rbp-0x30]
   14001b8de:	call   0x140011560
   14001b8e3:	cmp    rbx,rdi
   14001b8e6:	jne    0x14001b883
   14001b8e8:	mov    rdi,QWORD PTR [rbp-0x28]
   14001b8ec:	mov    rcx,rdi
   14001b8ef:	call   0x1400330c0
   14001b8f4:	inc    r12d
   14001b8f7:	add    r13,0x4
   14001b8fb:	cmp    r12d,0xb
   14001b8ff:	jb     0x14001b740
   14001b905:	jmp    0x14001b934
   14001b907:	mov    QWORD PTR [rbp+0x30],r14
   14001b90b:	lea    rdx,[rbp+0x30]
   14001b90f:	lea    rcx,[rbp-0x48]
   14001b913:	call   0x140032fd4
   14001b918:	lea    r11,[rip+0x4cf71]        # 0x140068890
   14001b91f:	mov    QWORD PTR [rbp-0x48],r11
   14001b923:	lea    rdx,[rip+0x67af6]        # 0x140083420
   14001b92a:	lea    rcx,[rbp-0x48]
   14001b92e:	call   0x140036358
   14001b933:	int3   
   14001b934:	lea    r11,[rsp+0x70]
   14001b939:	mov    rbx,QWORD PTR [r11+0x40]
   14001b93d:	mov    rsi,QWORD PTR [r11+0x48]
   14001b941:	mov    rsp,r11
   14001b944:	pop    r14
   14001b946:	pop    r13
   14001b948:	pop    r12
   14001b94a:	pop    rdi
   14001b94b:	pop    rbp
   14001b94c:	ret    
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	mov    QWORD PTR [rsp+0x8],rbx
   14001b955:	mov    QWORD PTR [rsp+0x10],rsi
   14001b95a:	mov    QWORD PTR [rsp+0x18],rdi
   14001b95f:	push   rbp
   14001b960:	push   r12
   14001b962:	push   r13
   14001b964:	push   r14
   14001b966:	push   r15
   14001b968:	lea    rbp,[rsp-0x1130]
   14001b970:	mov    eax,0x1230
   14001b975:	call   0x14003ca30
   14001b97a:	sub    rsp,rax
   14001b97d:	mov    rax,QWORD PTR [rip+0x69724]        # 0x1400850a8
   14001b984:	xor    rax,rsp
   14001b987:	mov    QWORD PTR [rbp+0x1120],rax
   14001b98e:	xor    ecx,ecx
   14001b990:	call   QWORD PTR [rip+0x4ccfa]        # 0x140068690
   14001b996:	or     r14d,0xffffffff
   14001b99a:	lea    rdx,[rip+0x52ecf]        # 0x14006e870
   14001b9a1:	lea    rcx,[rip+0x6c580]        # 0x140087f28
   14001b9a8:	lea    r8d,[r14+0x9]
   14001b9ac:	mov    DWORD PTR [rip+0x6ae9d],r14d        # 0x140086850
   14001b9b3:	call   0x140002ba0
   14001b9b8:	lea    rax,[rbp+0x40]
   14001b9bc:	xor    ebx,ebx
   14001b9be:	lea    rdx,[rip+0x4fd8b]        # 0x14006b750
   14001b9c5:	mov    r9d,0x20019
   14001b9cb:	xor    r8d,r8d
   14001b9ce:	mov    rcx,0xffffffff80000002
   14001b9d5:	mov    QWORD PTR [rsp+0x20],rax
   14001b9da:	mov    DWORD PTR [rbp-0x74],ebx
   14001b9dd:	mov    QWORD PTR [rbp+0x40],rbx
   14001b9e1:	call   QWORD PTR [rip+0x4c669]        # 0x140068050
   14001b9e7:	mov    rcx,QWORD PTR [rbp+0x40]
   14001b9eb:	test   rcx,rcx
   14001b9ee:	je     0x14001ba2a
   14001b9f0:	lea    rax,[rbp+0x28]
   14001b9f4:	lea    r9,[rbp+0x194]
   14001b9fb:	lea    rdx,[rip+0x52f5a]        # 0x14006e95c
   14001ba02:	mov    QWORD PTR [rsp+0x28],rax
   14001ba07:	lea    rax,[rbp-0x74]
   14001ba0b:	xor    r8d,r8d
   14001ba0e:	mov    QWORD PTR [rsp+0x20],rax
   14001ba13:	mov    DWORD PTR [rbp+0x28],0x4
   14001ba1a:	call   QWORD PTR [rip+0x4c638]        # 0x140068058
   14001ba20:	mov    rcx,QWORD PTR [rbp+0x40]
   14001ba24:	call   QWORD PTR [rip+0x4c61e]        # 0x140068048
   14001ba2a:	mov    eax,DWORD PTR [rbp-0x74]
   14001ba2d:	mov    ecx,DWORD PTR [rip+0x6ae1d]        # 0x140086850
   14001ba33:	test   eax,eax
   14001ba35:	cmovne ecx,eax
   14001ba38:	mov    DWORD PTR [rip+0x6ae12],ecx        # 0x140086850
   14001ba3e:	call   0x14001b710
   14001ba43:	xor    r11d,r11d
   14001ba46:	xor    eax,eax
   14001ba48:	mov    r15d,0x1
   14001ba4e:	lea    rcx,[rbp+0x200]
   14001ba55:	mov    edx,r15d
   14001ba58:	mov    QWORD PTR [rbp+0x200],r11
   14001ba5f:	mov    QWORD PTR [rbp+0x208],r11
   14001ba66:	mov    QWORD PTR [rbp+0x210],r11
   14001ba6d:	mov    QWORD PTR [rbp+0x218],r11
   14001ba74:	mov    QWORD PTR [rbp+0x220],r11
   14001ba7b:	mov    QWORD PTR [rbp+0xb8],rax
   14001ba82:	mov    QWORD PTR [rbp+0xc0],rax
   14001ba89:	mov    QWORD PTR [rbp+0xc8],rax
   14001ba90:	call   QWORD PTR [rip+0x4c592]        # 0x140068028
   14001ba96:	lea    rcx,[rbp+0x200]
   14001ba9d:	xor    r9d,r9d
   14001baa0:	xor    r8d,r8d
   14001baa3:	mov    edx,r15d
   14001baa6:	call   QWORD PTR [rip+0x4c574]        # 0x140068020
   14001baac:	lea    rax,[rbp+0x200]
   14001bab3:	lea    rdx,[rip+0x4fc96]        # 0x14006b750
   14001baba:	mov    QWORD PTR [rbp+0xc0],rax
   14001bac1:	lea    rax,[rbp+0x20]
   14001bac5:	mov    r9d,0x20019
   14001bacb:	xor    r8d,r8d
   14001bace:	mov    rcx,0xffffffff80000002
   14001bad5:	mov    DWORD PTR [rbp+0xb8],0x18
   14001badf:	mov    QWORD PTR [rsp+0x20],rax
   14001bae4:	mov    DWORD PTR [rbp-0x60],ebx
   14001bae7:	mov    QWORD PTR [rbp+0x20],rbx
   14001baeb:	call   QWORD PTR [rip+0x4c55f]        # 0x140068050
   14001baf1:	mov    rcx,QWORD PTR [rbp+0x20]
   14001baf5:	test   rcx,rcx
   14001baf8:	je     0x14001bb34
   14001bafa:	lea    rax,[rbp+0x38]
   14001bafe:	lea    r9,[rbp+0x190]
   14001bb05:	lea    rdx,[rip+0x50d2c]        # 0x14006c838
   14001bb0c:	mov    QWORD PTR [rsp+0x28],rax
   14001bb11:	lea    rax,[rbp-0x60]
   14001bb15:	xor    r8d,r8d
   14001bb18:	mov    QWORD PTR [rsp+0x20],rax
   14001bb1d:	mov    DWORD PTR [rbp+0x38],0x4
   14001bb24:	call   QWORD PTR [rip+0x4c52e]        # 0x140068058
   14001bb2a:	mov    rcx,QWORD PTR [rbp+0x20]
   14001bb2e:	call   QWORD PTR [rip+0x4c514]        # 0x140068048
   14001bb34:	lea    rcx,[rbp+0xd21]
   14001bb3b:	xor    edx,edx
   14001bb3d:	mov    r8d,0x3ff
   14001bb43:	mov    BYTE PTR [rbp+0xd20],bl
   14001bb49:	call   0x140036dc0
   14001bb4e:	lea    r9,[rip+0x52e13]        # 0x14006e968
   14001bb55:	lea    rcx,[rbp+0xb8]
   14001bb5c:	xor    r8d,r8d
   14001bb5f:	mov    edx,r15d
   14001bb62:	call   QWORD PTR [rip+0x4c818]        # 0x140068380
   14001bb68:	mov    QWORD PTR [rip+0x6e901],rax        # 0x14008a470
   14001bb6f:	call   QWORD PTR [rip+0x4c84b]        # 0x1400683c0
   14001bb75:	lea    rdx,[rip+0x52e14]        # 0x14006e990
   14001bb7c:	lea    rcx,[rbp+0xd20]
   14001bb83:	mov    r8d,eax
   14001bb86:	call   0x140018320
   14001bb8b:	cmp    QWORD PTR [rip+0x6e8de],rbx        # 0x14008a470
   14001bb92:	jne    0x14001bbbb
   14001bb94:	lea    rax,[rbp+0xd20]
   14001bb9b:	lea    r9,[rip+0x52e1e]        # 0x14006e9c0
   14001bba2:	lea    rcx,[rip+0x52bc7]        # 0x14006e770
   14001bba9:	mov    r8d,r15d
   14001bbac:	mov    edx,0x18e
   14001bbb1:	mov    QWORD PTR [rsp+0x20],rax
   14001bbb6:	call   0x140003150
   14001bbbb:	lea    r9,[rip+0x52e1e]        # 0x14006e9e0
   14001bbc2:	lea    rcx,[rbp+0xb8]
   14001bbc9:	xor    r8d,r8d
   14001bbcc:	mov    edx,r15d
   14001bbcf:	call   QWORD PTR [rip+0x4c7ab]        # 0x140068380
   14001bbd5:	mov    QWORD PTR [rip+0x6e89c],rax        # 0x14008a478
   14001bbdc:	call   QWORD PTR [rip+0x4c7de]        # 0x1400683c0
   14001bbe2:	lea    rdx,[rip+0x52da7]        # 0x14006e990
   14001bbe9:	lea    rcx,[rbp+0xd20]
   14001bbf0:	mov    r8d,eax
   14001bbf3:	call   0x140018320
   14001bbf8:	cmp    QWORD PTR [rip+0x6e879],rbx        # 0x14008a478
   14001bbff:	jne    0x14001bc28
   14001bc01:	lea    rax,[rbp+0xd20]
   14001bc08:	lea    r9,[rip+0x52df9]        # 0x14006ea08
   14001bc0f:	lea    rcx,[rip+0x52b5a]        # 0x14006e770
   14001bc16:	mov    r8d,r15d
   14001bc19:	mov    edx,0x192
   14001bc1e:	mov    QWORD PTR [rsp+0x20],rax
   14001bc23:	call   0x140003150
   14001bc28:	lea    r9,[rip+0x52df9]        # 0x14006ea28
   14001bc2f:	lea    rcx,[rbp+0xb8]
   14001bc36:	xor    r8d,r8d
   14001bc39:	mov    edx,r15d
   14001bc3c:	call   QWORD PTR [rip+0x4c73e]        # 0x140068380
   14001bc42:	mov    QWORD PTR [rip+0x6e837],rax        # 0x14008a480
   14001bc49:	call   QWORD PTR [rip+0x4c771]        # 0x1400683c0
   14001bc4f:	lea    rdx,[rip+0x52d3a]        # 0x14006e990
   14001bc56:	lea    rcx,[rbp+0xd20]
   14001bc5d:	mov    r8d,eax
   14001bc60:	call   0x140018320
   14001bc65:	cmp    QWORD PTR [rip+0x6e814],rbx        # 0x14008a480
   14001bc6c:	jne    0x14001bc95
   14001bc6e:	lea    rax,[rbp+0xd20]
   14001bc75:	lea    r9,[rip+0x52dd4]        # 0x14006ea50
   14001bc7c:	lea    rcx,[rip+0x52aed]        # 0x14006e770
   14001bc83:	mov    r8d,r15d
   14001bc86:	mov    edx,0x196
   14001bc8b:	mov    QWORD PTR [rsp+0x20],rax
   14001bc90:	call   0x140003150
   14001bc95:	lea    r9,[rip+0x52dd4]        # 0x14006ea70
   14001bc9c:	lea    rcx,[rbp+0xb8]
   14001bca3:	xor    r8d,r8d
   14001bca6:	mov    edx,r15d
   14001bca9:	call   QWORD PTR [rip+0x4c6d1]        # 0x140068380
   14001bcaf:	mov    QWORD PTR [rip+0x6e7d2],rax        # 0x14008a488
   14001bcb6:	call   QWORD PTR [rip+0x4c704]        # 0x1400683c0
   14001bcbc:	lea    rdx,[rip+0x52ccd]        # 0x14006e990
   14001bcc3:	lea    rcx,[rbp+0xd20]
   14001bcca:	mov    r8d,eax
   14001bccd:	call   0x140018320
   14001bcd2:	cmp    QWORD PTR [rip+0x6e7af],rbx        # 0x14008a488
   14001bcd9:	jne    0x14001bd02
   14001bcdb:	lea    rax,[rbp+0xd20]
   14001bce2:	lea    r9,[rip+0x52daf]        # 0x14006ea98
   14001bce9:	lea    rcx,[rip+0x52a80]        # 0x14006e770
   14001bcf0:	mov    r8d,r15d
   14001bcf3:	mov    edx,0x19a
   14001bcf8:	mov    QWORD PTR [rsp+0x20],rax
   14001bcfd:	call   0x140003150
   14001bd02:	mov    r12d,DWORD PTR [rbp-0x60]
   14001bd06:	xor    r13b,r13b
   14001bd09:	lea    rsi,[rip+0x4f790]        # 0x14006b4a0
   14001bd10:	mov    eax,r12d
   14001bd13:	and    eax,0x40
   14001bd16:	test   al,al
   14001bd18:	je     0x14001bd47
   14001bd1a:	xor    r9d,r9d
   14001bd1d:	lea    rax,[rip+0x52d94]        # 0x14006eab8
   14001bd24:	lea    rcx,[rip+0x52a45]        # 0x14006e770
   14001bd2b:	mov    QWORD PTR [rsp+0x28],rax
   14001bd30:	lea    r8d,[r9+0x2]
   14001bd34:	mov    edx,0x1a0
   14001bd39:	movzx  r13d,r15b
   14001bd3d:	mov    QWORD PTR [rsp+0x20],rsi
   14001bd42:	call   0x140003150
   14001bd47:	lea    r9,[rip+0x52d92]        # 0x14006eae0
   14001bd4e:	xor    r8d,r8d
   14001bd51:	mov    edx,r15d
   14001bd54:	xor    ecx,ecx
   14001bd56:	call   QWORD PTR [rip+0x4c624]        # 0x140068380
   14001bd5c:	mov    QWORD PTR [rip+0x6e705],rax        # 0x14008a468
   14001bd63:	call   QWORD PTR [rip+0x4c657]        # 0x1400683c0
   14001bd69:	lea    rdx,[rip+0x52c20]        # 0x14006e990
   14001bd70:	lea    rcx,[rbp+0xd20]
   14001bd77:	mov    r8d,eax
   14001bd7a:	call   0x140018320
   14001bd7f:	cmp    QWORD PTR [rip+0x6e6e2],rbx        # 0x14008a468
   14001bd86:	jne    0x14001bdaf
   14001bd88:	lea    rax,[rbp+0xd20]
   14001bd8f:	lea    r9,[rip+0x52d5a]        # 0x14006eaf0
   14001bd96:	lea    rcx,[rip+0x529d3]        # 0x14006e770
   14001bd9d:	mov    r8d,r15d
   14001bda0:	mov    edx,0x1a6
   14001bda5:	mov    QWORD PTR [rsp+0x20],rax
   14001bdaa:	call   0x140003150
   14001bdaf:	call   QWORD PTR [rip+0x4c60b]        # 0x1400683c0
   14001bdb5:	mov    edi,ebx
   14001bdb7:	cmp    eax,0xb7
   14001bdbc:	sete   dil
   14001bdc0:	mov    DWORD PTR [rbp-0x80],edi
   14001bdc3:	mov    DWORD PTR [rbp-0x7c],edi
   14001bdc6:	call   0x14001b280
   14001bdcb:	test   eax,eax
   14001bdcd:	je     0x14001e00c
   14001bdd3:	test   edi,edi
   14001bdd5:	jne    0x14001e00c
   14001bddb:	lea    rax,[rip+0x52d1e]        # 0x14006eb00
   14001bde2:	lea    r8d,[rdi+0x2]
   14001bde6:	lea    rcx,[rip+0x52983]        # 0x14006e770
   14001bded:	mov    QWORD PTR [rsp+0x28],rax
   14001bdf2:	xor    r9d,r9d
   14001bdf5:	mov    edx,0x1ae
   14001bdfa:	mov    QWORD PTR [rsp+0x20],rsi
   14001bdff:	call   0x140003150
   14001be04:	lea    rcx,[rbp+0x270]
   14001be0b:	call   0x140018d80
   14001be10:	bt     r12d,0x9
   14001be15:	jae    0x14001be8f
   14001be17:	lea    rax,[rip+0x52cea]        # 0x14006eb08
   14001be1e:	lea    r8d,[rdi+0x2]
   14001be22:	lea    rcx,[rip+0x52947]        # 0x14006e770
   14001be29:	mov    QWORD PTR [rsp+0x28],rax
   14001be2e:	xor    r9d,r9d
   14001be31:	mov    edx,0x1b3
   14001be36:	mov    QWORD PTR [rsp+0x20],rsi
   14001be3b:	call   0x140003150
   14001be40:	mov    rax,QWORD PTR [rip+0x6cde9]        # 0x140088c30
   14001be47:	lea    rdx,[rbp+0x2b0]
   14001be4e:	lea    rcx,[rip+0x6cd8b]        # 0x140088be0
   14001be55:	mov    QWORD PTR [rip+0x6cdd4],rax        # 0x140088c30
   14001be5c:	call   0x140019640
   14001be61:	lea    r8,[rip+0x52cc8]        # 0x14006eb30
   14001be68:	lea    rdx,[rip+0x6c6f9]        # 0x140088568
   14001be6f:	mov    WORD PTR [rsp+0x30],ax
   14001be74:	lea    rcx,[rbp+0x270]
   14001be7b:	mov    r9d,0xcf0000
   14001be81:	mov    QWORD PTR [rsp+0x28],rbx
   14001be86:	mov    DWORD PTR [rsp+0x20],ebx
   14001be8a:	call   0x140019530
   14001be8f:	lea    rcx,[rbp+0x330]
   14001be96:	call   0x140006240
   14001be9b:	bt     r12d,0xe
   14001bea0:	jae    0x14001bf02
   14001bea2:	xor    r9d,r9d
   14001bea5:	lea    rax,[rip+0x52c9c]        # 0x14006eb48
   14001beac:	lea    rcx,[rip+0x528bd]        # 0x14006e770
   14001beb3:	mov    QWORD PTR [rsp+0x28],rax
   14001beb8:	lea    r8d,[r9+0x2]
   14001bebc:	mov    edx,0x1bb
   14001bec1:	mov    QWORD PTR [rsp+0x20],rsi
   14001bec6:	call   0x140003150
   14001becb:	lea    rdi,[rip+0x6a98e]        # 0x140086860
   14001bed2:	mov    esi,0x6
   14001bed7:	nop    WORD PTR [rax+rax*1+0x0]
   14001bee0:	lea    rcx,[rbp+0x570]
   14001bee7:	mov    rdx,rdi
   14001beea:	call   0x140008850
   14001beef:	add    rdi,0x130
   14001bef6:	dec    rsi
   14001bef9:	jne    0x14001bee0
   14001befb:	lea    rsi,[rip+0x4f59e]        # 0x14006b4a0
   14001bf02:	bt     r12d,0x12
   14001bf07:	jae    0x14001bf5b
   14001bf09:	xor    r9d,r9d
   14001bf0c:	lea    rax,[rip+0x52c5d]        # 0x14006eb70
   14001bf13:	lea    rcx,[rip+0x52856]        # 0x14006e770
   14001bf1a:	mov    QWORD PTR [rsp+0x28],rax
   14001bf1f:	lea    r8d,[r9+0x2]
   14001bf23:	mov    edx,0x1c5
   14001bf28:	mov    QWORD PTR [rsp+0x20],rsi
   14001bf2d:	call   0x140003150
   14001bf32:	lea    rdi,[rip+0x6b047]        # 0x140086f80
   14001bf39:	mov    esi,0x2
   14001bf3e:	xchg   ax,ax
   14001bf40:	lea    rcx,[rbp+0x570]
   14001bf47:	mov    rdx,rdi
   14001bf4a:	call   0x140008850
   14001bf4f:	add    rdi,0x130
   14001bf56:	dec    rsi
   14001bf59:	jne    0x14001bf40
   14001bf5b:	lea    r8,[rip+0x4f7de]        # 0x14006b740
   14001bf62:	lea    rdx,[rip+0x4f7e7]        # 0x14006b750
   14001bf69:	lea    rcx,[rbp+0xb0]
   14001bf70:	call   0x1400159d0
   14001bf75:	mov    rax,QWORD PTR [rbp+0xb0]
   14001bf7c:	mov    rcx,QWORD PTR [rbp+0x578]
   14001bf83:	movabs rsi,0x6bca1af286bca1b
   14001bf8d:	cmp    DWORD PTR [rax-0x10],ebx
   14001bf90:	je     0x14001c038
   14001bf96:	lea    rdi,[rip+0x6b4a3]        # 0x140087440
   14001bf9d:	cmp    rdi,rcx
   14001bfa0:	jae    0x14001bff4
   14001bfa2:	mov    rax,QWORD PTR [rbp+0x570]
   14001bfa9:	cmp    rax,rdi
   14001bfac:	ja     0x14001bff4
   14001bfae:	sub    rdi,rax
   14001bfb1:	mov    rax,rsi
   14001bfb4:	imul   rdi
   14001bfb7:	mov    rdi,rdx
   14001bfba:	sar    rdi,0x3
   14001bfbe:	mov    rax,rdi
   14001bfc1:	shr    rax,0x3f
   14001bfc5:	add    rdi,rax
   14001bfc8:	cmp    rcx,QWORD PTR [rbp+0x580]
   14001bfcf:	jne    0x14001bfe4
   14001bfd1:	lea    rcx,[rbp+0x570]
   14001bfd8:	call   0x140008a80
   14001bfdd:	mov    rcx,QWORD PTR [rbp+0x578]
   14001bfe4:	imul   rdi,rdi,0x130
   14001bfeb:	add    rdi,QWORD PTR [rbp+0x570]
   14001bff2:	jmp    0x14001c010
   14001bff4:	cmp    rcx,QWORD PTR [rbp+0x580]
   14001bffb:	jne    0x14001c010
   14001bffd:	lea    rcx,[rbp+0x570]
   14001c004:	call   0x140008a80
   14001c009:	mov    rcx,QWORD PTR [rbp+0x578]
   14001c010:	test   rcx,rcx
   14001c013:	je     0x14001c02a
   14001c015:	mov    r8d,0x130
   14001c01b:	mov    rdx,rdi
   14001c01e:	call   0x140033260
   14001c023:	mov    rcx,QWORD PTR [rbp+0x578]
   14001c02a:	add    rcx,0x130
   14001c031:	mov    QWORD PTR [rbp+0x578],rcx
   14001c038:	sub    rcx,QWORD PTR [rbp+0x570]
   14001c03f:	mov    rax,rsi
   14001c042:	imul   rcx
   14001c045:	sar    rdx,0x3
   14001c049:	mov    rax,rdx
   14001c04c:	shr    rax,0x3f
   14001c050:	add    rdx,rax
   14001c053:	je     0x14001c0a4
   14001c055:	mov    rax,QWORD PTR [rip+0x6cc94]        # 0x140088cf0
   14001c05c:	lea    rdx,[rbp+0x370]
   14001c063:	lea    rcx,[rip+0x6cc36]        # 0x140088ca0
   14001c06a:	mov    QWORD PTR [rip+0x6cc7f],rax        # 0x140088cf0
   14001c071:	call   0x140019640
   14001c076:	lea    r8,[rip+0x52b1b]        # 0x14006eb98
   14001c07d:	mov    WORD PTR [rsp+0x30],ax
   14001c082:	lea    rdx,[rip+0x6c4df]        # 0x140088568
   14001c089:	lea    rcx,[rbp+0x330]
   14001c090:	mov    r9d,0xcf0000
   14001c096:	mov    QWORD PTR [rsp+0x28],rbx
   14001c09b:	mov    DWORD PTR [rsp+0x20],ebx
   14001c09f:	call   0x140019530
   14001c0a4:	lea    rcx,[rbp+0x6b0]
   14001c0ab:	mov    BYTE PTR [rsp+0x40],bl
   14001c0af:	call   0x140016000
   14001c0b4:	lea    rax,[rip+0x4fcd5]        # 0x14006bd90
   14001c0bb:	lea    rcx,[rbp+0x650]
   14001c0c2:	xorps  xmm5,xmm5
   14001c0c5:	movss  DWORD PTR [rbp+0x6f8],xmm5
   14001c0cd:	movss  DWORD PTR [rbp+0x6fc],xmm5
   14001c0d5:	movss  DWORD PTR [rbp+0x700],xmm5
   14001c0dd:	mov    QWORD PTR [rbp+0x6b0],rax
   14001c0e4:	mov    QWORD PTR [rbp+0x70c],0xf
   14001c0ef:	mov    QWORD PTR [rbp+0x714],rbx
   14001c0f6:	mov    QWORD PTR [rbp+0x71c],rbx
   14001c0fd:	mov    QWORD PTR [rbp+0x724],rbx
   14001c104:	mov    DWORD PTR [rbp+0x72c],ebx
   14001c10a:	mov    QWORD PTR [rbp+0x730],rbx
   14001c111:	mov    QWORD PTR [rbp+0x738],rbx
   14001c118:	mov    DWORD PTR [rbp+0x708],r14d
   14001c11f:	call   0x140016000
   14001c124:	lea    rax,[rip+0x4fc35]        # 0x14006bd60
   14001c12b:	mov    DWORD PTR [rbp+0x698],r14d
   14001c132:	mov    QWORD PTR [rbp+0x650],rax
   14001c139:	lea    rax,[rip+0x4fe28]        # 0x14006bf68
   14001c140:	mov    QWORD PTR [rbp+0x6a8],rbx
   14001c147:	mov    QWORD PTR [rbp-0x48],rbx
   14001c14b:	mov    QWORD PTR [rbp-0x40],rbx
   14001c14f:	mov    BYTE PTR [rbp-0x38],bl
   14001c152:	mov    QWORD PTR [rbp-0x50],rax
   14001c156:	mov    QWORD PTR [rbp-0x30],rbx
   14001c15a:	mov    QWORD PTR [rbp-0x28],rbx
   14001c15e:	mov    DWORD PTR [rbp-0x34],0xffffffff
   14001c165:	test   r13b,r13b
   14001c168:	je     0x14001c1d1
   14001c16a:	lea    rcx,[rbp-0x64]
   14001c16e:	xor    edx,edx
   14001c170:	mov    DWORD PTR [rbp-0x64],r14d
   14001c174:	call   0x14001a9c0
   14001c179:	cmp    eax,0x5
   14001c17c:	jne    0x14001c1b5
   14001c17e:	cmp    DWORD PTR [rbp-0x64],ebx
   14001c181:	jne    0x14001c1b5
   14001c183:	movzx  ecx,BYTE PTR [rbp-0x38]
   14001c187:	test   cl,cl
   14001c189:	jne    0x14001c197
   14001c18b:	lea    rcx,[rbp-0x50]
   14001c18f:	call   0x14000b710
   14001c194:	movzx  ecx,al
   14001c197:	mov    eax,ebx
   14001c199:	test   cl,cl
   14001c19b:	mov    BYTE PTR [rsp+0x40],r15b
   14001c1a0:	setne  al
   14001c1a3:	mov    edx,0x1f2
   14001c1a8:	mov    DWORD PTR [rsp+0x28],eax
   14001c1ac:	lea    rax,[rip+0x52a05]        # 0x14006ebb8
   14001c1b3:	jmp    0x14001c1fb
   14001c1b5:	lea    rcx,[rbp+0x650]
   14001c1bc:	call   0x14000a350
   14001c1c1:	mov    edx,0x1f7
   14001c1c6:	test   al,al
   14001c1c8:	lea    rax,[rip+0x52a21]        # 0x14006ebf0
   14001c1cf:	jmp    0x14001c1f2
   14001c1d1:	bt     r12d,0x10
   14001c1d6:	jae    0x14001c213
   14001c1d8:	lea    rcx,[rbp+0x6b0]
   14001c1df:	call   0x14000ae70
   14001c1e4:	mov    edx,0x1fd
   14001c1e9:	test   al,al
   14001c1eb:	lea    rax,[rip+0x52a36]        # 0x14006ec28
   14001c1f2:	mov    ecx,ebx
   14001c1f4:	setne  cl
   14001c1f7:	mov    DWORD PTR [rsp+0x28],ecx
   14001c1fb:	xor    r9d,r9d
   14001c1fe:	lea    rcx,[rip+0x5256b]        # 0x14006e770
   14001c205:	mov    QWORD PTR [rsp+0x20],rax
   14001c20a:	lea    r8d,[r9+0x2]
   14001c20e:	call   0x140003150
   14001c213:	lea    rax,[rip+0x514de]        # 0x14006d6f8
   14001c21a:	lea    rcx,[rbp+0x68]
   14001c21e:	mov    edx,r15d
   14001c221:	mov    QWORD PTR [rbp+0x1a0],rax
   14001c228:	xor    eax,eax
   14001c22a:	mov    QWORD PTR [rbp+0x1a8],rbx
   14001c231:	mov    QWORD PTR [rbp+0x1b8],rbx
   14001c238:	mov    DWORD PTR [rbp+0x1b0],ebx
   14001c23e:	mov    QWORD PTR [rbp+0x1c0],rbx
   14001c245:	mov    QWORD PTR [rbp+0x68],rax
   14001c249:	mov    QWORD PTR [rbp+0x70],rax
   14001c24d:	mov    QWORD PTR [rbp+0x78],rax
   14001c251:	mov    QWORD PTR [rbp+0x80],rax
   14001c258:	mov    QWORD PTR [rbp+0x88],rax
   14001c25f:	mov    QWORD PTR [rbp+0x90],rax
   14001c266:	mov    QWORD PTR [rbp+0x98],rax
   14001c26d:	mov    QWORD PTR [rbp+0xa0],rax
   14001c274:	mov    DWORD PTR [rbp+0x1c8],ebx
   14001c27a:	mov    DWORD PTR [rbp+0x1d8],ebx
   14001c280:	mov    QWORD PTR [rbp+0x1d0],rbx
   14001c287:	mov    QWORD PTR [rbp+0x1e0],rbx
   14001c28e:	mov    QWORD PTR [rbp+0x1e8],rbx
   14001c295:	mov    DWORD PTR [rbp+0x1f0],ebx
   14001c29b:	mov    DWORD PTR [rsp+0x78],ebx
   14001c29f:	mov    DWORD PTR [rbp+0x50],ebx
   14001c2a2:	mov    QWORD PTR [rbp+0x58],rbx
   14001c2a6:	mov    QWORD PTR [rbp+0x60],rbx
   14001c2aa:	call   QWORD PTR [rip+0x4bd78]        # 0x140068028
   14001c2b0:	lea    rcx,[rbp+0x68]
   14001c2b4:	xor    r9d,r9d
   14001c2b7:	xor    r8d,r8d
   14001c2ba:	mov    edx,r15d
   14001c2bd:	call   QWORD PTR [rip+0x4bd5d]        # 0x140068020
   14001c2c3:	lea    rax,[rbp+0x68]
   14001c2c7:	lea    rcx,[rbp+0xe8]
   14001c2ce:	mov    QWORD PTR [rbp+0x98],rax
   14001c2d5:	xor    eax,eax
   14001c2d7:	mov    edx,r15d
   14001c2da:	mov    DWORD PTR [rbp+0x90],0x18
   14001c2e4:	mov    DWORD PTR [rbp+0xd0],ebx
   14001c2ea:	mov    QWORD PTR [rbp+0xd8],rbx
   14001c2f1:	mov    QWORD PTR [rbp+0xe8],rax
   14001c2f8:	mov    QWORD PTR [rbp+0xf0],rax
   14001c2ff:	mov    QWORD PTR [rbp+0xf8],rax
   14001c306:	mov    QWORD PTR [rbp+0x100],rax
   14001c30d:	mov    QWORD PTR [rbp+0x108],rax
   14001c314:	mov    QWORD PTR [rbp+0x110],rax
   14001c31b:	mov    QWORD PTR [rbp+0x118],rax
   14001c322:	mov    QWORD PTR [rbp+0x120],rax
   14001c329:	mov    QWORD PTR [rbp+0xe0],rbx
   14001c330:	call   QWORD PTR [rip+0x4bcf2]        # 0x140068028
   14001c336:	lea    rcx,[rbp+0xe8]
   14001c33d:	xor    r9d,r9d
   14001c340:	xor    r8d,r8d
   14001c343:	mov    edx,r15d
   14001c346:	call   QWORD PTR [rip+0x4bcd4]        # 0x140068020
   14001c34c:	lea    rax,[rbp+0xe8]
   14001c353:	mov    DWORD PTR [rbp+0x110],0x18
   14001c35d:	mov    QWORD PTR [rbp+0x118],rax
   14001c364:	mov    DWORD PTR [rbp-0x70],ebx
   14001c367:	cmp    QWORD PTR [rbp+0x278],rbx
   14001c36e:	jne    0x14001c38b
   14001c370:	cmp    QWORD PTR [rip+0x6e3d1],rbx        # 0x14008a748
   14001c377:	jne    0x14001c38b
   14001c379:	test   r13b,r13b
   14001c37c:	jne    0x14001c38b
   14001c37e:	mov    DWORD PTR [rsp+0x74],ebx
   14001c382:	cmp    QWORD PTR [rbp+0x338],rbx
   14001c389:	je     0x14001c390
   14001c38b:	mov    DWORD PTR [rsp+0x74],r15d
   14001c390:	xor    eax,eax
   14001c392:	lea    rcx,[rbp+0x148]
   14001c399:	mov    edx,r15d
   14001c39c:	mov    DWORD PTR [rbp+0x130],ebx
   14001c3a2:	mov    QWORD PTR [rbp+0x138],rbx
   14001c3a9:	mov    QWORD PTR [rbp+0x140],rbx
   14001c3b0:	mov    QWORD PTR [rbp+0x148],rax
   14001c3b7:	mov    QWORD PTR [rbp+0x150],rax
   14001c3be:	mov    QWORD PTR [rbp+0x158],rax
   14001c3c5:	mov    QWORD PTR [rbp+0x160],rax
   14001c3cc:	mov    QWORD PTR [rbp+0x168],rax
   14001c3d3:	mov    QWORD PTR [rbp+0x170],rax
   14001c3da:	mov    QWORD PTR [rbp+0x178],rax
   14001c3e1:	mov    QWORD PTR [rbp+0x180],rax
   14001c3e8:	call   QWORD PTR [rip+0x4bc3a]        # 0x140068028
   14001c3ee:	lea    rcx,[rbp+0x148]
   14001c3f5:	xor    r9d,r9d
   14001c3f8:	xor    r8d,r8d
   14001c3fb:	mov    edx,r15d
   14001c3fe:	call   QWORD PTR [rip+0x4bc1c]        # 0x140068020
   14001c404:	lea    rax,[rbp+0x148]
   14001c40b:	lea    rcx,[rbp+0x8a4]
   14001c412:	mov    QWORD PTR [rbp+0x178],rax
   14001c419:	lea    rax,[rip+0x51b18]        # 0x14006df38
   14001c420:	xor    edx,edx
   14001c422:	mov    QWORD PTR [rbp+0x830],rax
   14001c429:	lea    rax,[rip+0x51b48]        # 0x14006df78
   14001c430:	mov    r8d,0x208
   14001c436:	mov    DWORD PTR [rbp+0x170],0x18
   14001c440:	mov    DWORD PTR [rbp-0x68],ebx
   14001c443:	mov    DWORD PTR [rsp+0x70],ebx
   14001c447:	mov    QWORD PTR [rbp+0x850],rax
   14001c44e:	mov    DWORD PTR [rbp-0x6c],ebx
   14001c451:	mov    DWORD PTR [rsp+0x7c],ebx
   14001c455:	mov    QWORD PTR [rbp+0x838],rbx
   14001c45c:	mov    QWORD PTR [rbp+0x840],rbx
   14001c463:	mov    DWORD PTR [rbp+0x848],ebx
   14001c469:	mov    BYTE PTR [rbp+0x84c],bl
   14001c46f:	mov    DWORD PTR [rbp+0x858],ebx
   14001c475:	mov    QWORD PTR [rbp+0x860],rbx
   14001c47c:	mov    QWORD PTR [rbp+0x868],rbx
   14001c483:	mov    QWORD PTR [rbp+0x888],rbx
   14001c48a:	mov    QWORD PTR [rbp+0x890],rbx
   14001c491:	mov    QWORD PTR [rbp+0x898],rbx
   14001c498:	mov    DWORD PTR [rbp+0x8a0],ebx
   14001c49e:	mov    QWORD PTR [rbp+0xab0],rbx
   14001c4a5:	mov    QWORD PTR [rbp+0xab8],rbx
   14001c4ac:	mov    QWORD PTR [rbp+0xac0],rbx
   14001c4b3:	call   0x140036dc0
   14001c4b8:	mov    rax,QWORD PTR [rip+0x6dff1]        # 0x14008a4b0
   14001c4bf:	mov    r15,QWORD PTR [rbp-0x28]
   14001c4c3:	xor    r11d,r11d
   14001c4c6:	cmp    QWORD PTR [rip+0x6dfb3],rbx        # 0x14008a480
   14001c4cd:	mov    QWORD PTR [rbp+0x870],r11
   14001c4d4:	mov    QWORD PTR [rbp+0x878],r11
   14001c4db:	mov    QWORD PTR [rbp+0x18],rax
   14001c4df:	mov    QWORD PTR [rbp+0x30],rax
   14001c4e3:	mov    QWORD PTR [rbp+0x8],r15
   14001c4e7:	mov    QWORD PTR [rbp+0x10],r15
   14001c4eb:	mov    WORD PTR [rbp+0x880],r11w
   14001c4f3:	mov    r14d,ebx
   14001c4f6:	mov    r13,rbx
   14001c4f9:	mov    QWORD PTR [rsp+0x48],rbx
   14001c4fe:	mov    r12,rbx
   14001c501:	mov    QWORD PTR [rsp+0x50],rbx
   14001c506:	mov    rdx,rbx
   14001c509:	mov    QWORD PTR [rsp+0x58],rbx
   14001c50e:	je     0x14001c546
   14001c510:	lea    edx,[r11+0x1]
   14001c514:	lea    rcx,[rsp+0x48]
   14001c519:	call   0x14002f0c0
   14001c51e:	mov    r12,QWORD PTR [rsp+0x50]
   14001c523:	test   r12,r12
   14001c526:	je     0x14001c533
   14001c528:	mov    rax,QWORD PTR [rip+0x6df51]        # 0x14008a480
   14001c52f:	mov    QWORD PTR [r12],rax
   14001c533:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c538:	mov    r13,QWORD PTR [rsp+0x48]
   14001c53d:	add    r12,0x8
   14001c541:	mov    QWORD PTR [rsp+0x50],r12
   14001c546:	mov    rax,QWORD PTR [rip+0x6df3b]        # 0x14008a488
   14001c54d:	movabs rcx,0x1ffffffffffffffe
   14001c557:	movabs rdi,0x1fffffffffffffff
   14001c561:	test   rax,rax
   14001c564:	je     0x14001c6a8
   14001c56a:	lea    rsi,[rip+0x6df17]        # 0x14008a488
   14001c571:	cmp    rsi,r12
   14001c574:	jae    0x14001c616
   14001c57a:	cmp    r13,rsi
   14001c57d:	ja     0x14001c616
   14001c583:	sub    rsi,r13
   14001c586:	sar    rsi,0x3
   14001c58a:	cmp    r12,rdx
   14001c58d:	jne    0x14001c603
   14001c58f:	mov    r8,r12
   14001c592:	sub    r8,r13
   14001c595:	sar    r8,0x3
   14001c599:	cmp    r8,rcx
   14001c59c:	jbe    0x14001c5ab
   14001c59e:	lea    rcx,[rip+0x4f083]        # 0x14006b628
   14001c5a5:	call   0x140032d00
   14001c5aa:	int3   
   14001c5ab:	mov    rcx,rdx
   14001c5ae:	inc    r8
   14001c5b1:	sub    rcx,r13
   14001c5b4:	sar    rcx,0x3
   14001c5b8:	cmp    r8,rcx
   14001c5bb:	jbe    0x14001c5f9
   14001c5bd:	mov    rdx,rcx
   14001c5c0:	mov    rax,rdi
   14001c5c3:	shr    rdx,1
   14001c5c6:	sub    rax,rdx
   14001c5c9:	cmp    rax,rcx
   14001c5cc:	jae    0x14001c5d3
   14001c5ce:	mov    rcx,rbx
   14001c5d1:	jmp    0x14001c5d6
   14001c5d3:	add    rcx,rdx
   14001c5d6:	cmp    rcx,r8
   14001c5d9:	cmovb  rcx,r8
   14001c5dd:	mov    rdx,rcx
   14001c5e0:	lea    rcx,[rsp+0x48]
   14001c5e5:	call   0x14002f0c0
   14001c5ea:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c5ef:	mov    r12,QWORD PTR [rsp+0x50]
   14001c5f4:	mov    r13,QWORD PTR [rsp+0x48]
   14001c5f9:	movabs rcx,0x1ffffffffffffffe
   14001c603:	test   r12,r12
   14001c606:	je     0x14001c69f
   14001c60c:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001c611:	jmp    0x14001c69b
   14001c616:	cmp    r12,rdx
   14001c619:	jne    0x14001c696
   14001c61b:	mov    r8,r12
   14001c61e:	sub    r8,r13
   14001c621:	sar    r8,0x3
   14001c625:	cmp    r8,rcx
   14001c628:	jbe    0x14001c637
   14001c62a:	lea    rcx,[rip+0x4eff7]        # 0x14006b628
   14001c631:	call   0x140032d00
   14001c636:	int3   
   14001c637:	mov    rcx,rdx
   14001c63a:	inc    r8
   14001c63d:	sub    rcx,r13
   14001c640:	sar    rcx,0x3
   14001c644:	cmp    r8,rcx
   14001c647:	jbe    0x14001c68c
   14001c649:	mov    rdx,rcx
   14001c64c:	mov    rax,rdi
   14001c64f:	shr    rdx,1
   14001c652:	sub    rax,rdx
   14001c655:	cmp    rax,rcx
   14001c658:	jae    0x14001c65f
   14001c65a:	mov    rcx,rbx
   14001c65d:	jmp    0x14001c662
   14001c65f:	add    rcx,rdx
   14001c662:	cmp    rcx,r8
   14001c665:	cmovb  rcx,r8
   14001c669:	mov    rdx,rcx
   14001c66c:	lea    rcx,[rsp+0x48]
   14001c671:	call   0x14002f0c0
   14001c676:	mov    rax,QWORD PTR [rip+0x6de0b]        # 0x14008a488
   14001c67d:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c682:	mov    r12,QWORD PTR [rsp+0x50]
   14001c687:	mov    r13,QWORD PTR [rsp+0x48]
   14001c68c:	movabs rcx,0x1ffffffffffffffe
   14001c696:	test   r12,r12
   14001c699:	je     0x14001c69f
   14001c69b:	mov    QWORD PTR [r12],rax
   14001c69f:	add    r12,0x8
   14001c6a3:	mov    QWORD PTR [rsp+0x50],r12
   14001c6a8:	mov    rax,QWORD PTR [rip+0x6ddb9]        # 0x14008a468
   14001c6af:	test   rax,rax
   14001c6b2:	je     0x14001c7df
   14001c6b8:	lea    rsi,[rip+0x6dda9]        # 0x14008a468
   14001c6bf:	cmp    rsi,r12
   14001c6c2:	jae    0x14001c757
   14001c6c8:	cmp    r13,rsi
   14001c6cb:	ja     0x14001c757
   14001c6d1:	sub    rsi,r13
   14001c6d4:	sar    rsi,0x3
   14001c6d8:	cmp    r12,rdx
   14001c6db:	jne    0x14001c747
   14001c6dd:	mov    r8,r12
   14001c6e0:	sub    r8,r13
   14001c6e3:	sar    r8,0x3
   14001c6e7:	cmp    r8,rcx
   14001c6ea:	jbe    0x14001c6f9
   14001c6ec:	lea    rcx,[rip+0x4ef35]        # 0x14006b628
   14001c6f3:	call   0x140032d00
   14001c6f8:	int3   
   14001c6f9:	mov    rcx,rdx
   14001c6fc:	inc    r8
   14001c6ff:	sub    rcx,r13
   14001c702:	sar    rcx,0x3
   14001c706:	cmp    r8,rcx
   14001c709:	jbe    0x14001c747
   14001c70b:	mov    rdx,rcx
   14001c70e:	mov    rax,rdi
   14001c711:	shr    rdx,1
   14001c714:	sub    rax,rdx
   14001c717:	cmp    rax,rcx
   14001c71a:	jae    0x14001c721
   14001c71c:	mov    rcx,rbx
   14001c71f:	jmp    0x14001c724
   14001c721:	add    rcx,rdx
   14001c724:	cmp    rcx,r8
   14001c727:	cmovb  rcx,r8
   14001c72b:	mov    rdx,rcx
   14001c72e:	lea    rcx,[rsp+0x48]
   14001c733:	call   0x14002f0c0
   14001c738:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c73d:	mov    r12,QWORD PTR [rsp+0x50]
   14001c742:	mov    r13,QWORD PTR [rsp+0x48]
   14001c747:	test   r12,r12
   14001c74a:	je     0x14001c7d6
   14001c750:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001c755:	jmp    0x14001c7d2
   14001c757:	cmp    r12,rdx
   14001c75a:	jne    0x14001c7cd
   14001c75c:	mov    r8,r12
   14001c75f:	sub    r8,r13
   14001c762:	sar    r8,0x3
   14001c766:	cmp    r8,rcx
   14001c769:	jbe    0x14001c778
   14001c76b:	lea    rcx,[rip+0x4eeb6]        # 0x14006b628
   14001c772:	call   0x140032d00
   14001c777:	int3   
   14001c778:	mov    rcx,rdx
   14001c77b:	inc    r8
   14001c77e:	sub    rcx,r13
   14001c781:	sar    rcx,0x3
   14001c785:	cmp    r8,rcx
   14001c788:	jbe    0x14001c7cd
   14001c78a:	mov    rdx,rcx
   14001c78d:	mov    rax,rdi
   14001c790:	shr    rdx,1
   14001c793:	sub    rax,rdx
   14001c796:	cmp    rax,rcx
   14001c799:	jae    0x14001c7a0
   14001c79b:	mov    rcx,rbx
   14001c79e:	jmp    0x14001c7a3
   14001c7a0:	add    rcx,rdx
   14001c7a3:	cmp    rcx,r8
   14001c7a6:	cmovb  rcx,r8
   14001c7aa:	mov    rdx,rcx
   14001c7ad:	lea    rcx,[rsp+0x48]
   14001c7b2:	call   0x14002f0c0
   14001c7b7:	mov    rax,QWORD PTR [rip+0x6dcaa]        # 0x14008a468
   14001c7be:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c7c3:	mov    r12,QWORD PTR [rsp+0x50]
   14001c7c8:	mov    r13,QWORD PTR [rsp+0x48]
   14001c7cd:	test   r12,r12
   14001c7d0:	je     0x14001c7d6
   14001c7d2:	mov    QWORD PTR [r12],rax
   14001c7d6:	add    r12,0x8
   14001c7da:	mov    QWORD PTR [rsp+0x50],r12
   14001c7df:	mov    rax,QWORD PTR [rip+0x6dc8a]        # 0x14008a470
   14001c7e6:	test   rax,rax
   14001c7e9:	je     0x14001c92d
   14001c7ef:	lea    rsi,[rip+0x6dc7a]        # 0x14008a470
   14001c7f6:	cmp    rsi,r12
   14001c7f9:	jae    0x14001c89b
   14001c7ff:	cmp    r13,rsi
   14001c802:	ja     0x14001c89b
   14001c808:	sub    rsi,r13
   14001c80b:	sar    rsi,0x3
   14001c80f:	cmp    r12,rdx
   14001c812:	jne    0x14001c888
   14001c814:	mov    r8,r12
   14001c817:	movabs rax,0x1ffffffffffffffe
   14001c821:	sub    r8,r13
   14001c824:	sar    r8,0x3
   14001c828:	cmp    r8,rax
   14001c82b:	jbe    0x14001c83a
   14001c82d:	lea    rcx,[rip+0x4edf4]        # 0x14006b628
   14001c834:	call   0x140032d00
   14001c839:	int3   
   14001c83a:	mov    rcx,rdx
   14001c83d:	inc    r8
   14001c840:	sub    rcx,r13
   14001c843:	sar    rcx,0x3
   14001c847:	cmp    r8,rcx
   14001c84a:	jbe    0x14001c888
   14001c84c:	mov    rdx,rcx
   14001c84f:	mov    rax,rdi
   14001c852:	shr    rdx,1
   14001c855:	sub    rax,rdx
   14001c858:	cmp    rax,rcx
   14001c85b:	jae    0x14001c862
   14001c85d:	mov    rcx,rbx
   14001c860:	jmp    0x14001c865
   14001c862:	add    rcx,rdx
   14001c865:	cmp    rcx,r8
   14001c868:	cmovb  rcx,r8
   14001c86c:	mov    rdx,rcx
   14001c86f:	lea    rcx,[rsp+0x48]
   14001c874:	call   0x14002f0c0
   14001c879:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c87e:	mov    r12,QWORD PTR [rsp+0x50]
   14001c883:	mov    r13,QWORD PTR [rsp+0x48]
   14001c888:	test   r12,r12
   14001c88b:	je     0x14001c924
   14001c891:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001c896:	jmp    0x14001c920
   14001c89b:	cmp    r12,rdx
   14001c89e:	jne    0x14001c91b
   14001c8a0:	mov    r8,r12
   14001c8a3:	movabs rcx,0x1ffffffffffffffe
   14001c8ad:	sub    r8,r13
   14001c8b0:	sar    r8,0x3
   14001c8b4:	cmp    r8,rcx
   14001c8b7:	jbe    0x14001c8c6
   14001c8b9:	lea    rcx,[rip+0x4ed68]        # 0x14006b628
   14001c8c0:	call   0x140032d00
   14001c8c5:	int3   
   14001c8c6:	mov    rcx,rdx
   14001c8c9:	inc    r8
   14001c8cc:	sub    rcx,r13
   14001c8cf:	sar    rcx,0x3
   14001c8d3:	cmp    r8,rcx
   14001c8d6:	jbe    0x14001c91b
   14001c8d8:	mov    rdx,rcx
   14001c8db:	mov    rax,rdi
   14001c8de:	shr    rdx,1
   14001c8e1:	sub    rax,rdx
   14001c8e4:	cmp    rax,rcx
   14001c8e7:	jae    0x14001c8ee
   14001c8e9:	mov    rcx,rbx
   14001c8ec:	jmp    0x14001c8f1
   14001c8ee:	add    rcx,rdx
   14001c8f1:	cmp    rcx,r8
   14001c8f4:	cmovb  rcx,r8
   14001c8f8:	mov    rdx,rcx
   14001c8fb:	lea    rcx,[rsp+0x48]
   14001c900:	call   0x14002f0c0
   14001c905:	mov    rax,QWORD PTR [rip+0x6db64]        # 0x14008a470
   14001c90c:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c911:	mov    r12,QWORD PTR [rsp+0x50]
   14001c916:	mov    r13,QWORD PTR [rsp+0x48]
   14001c91b:	test   r12,r12
   14001c91e:	je     0x14001c924
   14001c920:	mov    QWORD PTR [r12],rax
   14001c924:	add    r12,0x8
   14001c928:	mov    QWORD PTR [rsp+0x50],r12
   14001c92d:	mov    rax,QWORD PTR [rip+0x6db44]        # 0x14008a478
   14001c934:	test   rax,rax
   14001c937:	je     0x14001ca7b
   14001c93d:	lea    rsi,[rip+0x6db34]        # 0x14008a478
   14001c944:	cmp    rsi,r12
   14001c947:	jae    0x14001c9e9
   14001c94d:	cmp    r13,rsi
   14001c950:	ja     0x14001c9e9
   14001c956:	sub    rsi,r13
   14001c959:	sar    rsi,0x3
   14001c95d:	cmp    r12,rdx
   14001c960:	jne    0x14001c9d6
   14001c962:	mov    r8,r12
   14001c965:	movabs rax,0x1ffffffffffffffe
   14001c96f:	sub    r8,r13
   14001c972:	sar    r8,0x3
   14001c976:	cmp    r8,rax
   14001c979:	jbe    0x14001c988
   14001c97b:	lea    rcx,[rip+0x4eca6]        # 0x14006b628
   14001c982:	call   0x140032d00
   14001c987:	int3   
   14001c988:	mov    rcx,rdx
   14001c98b:	inc    r8
   14001c98e:	sub    rcx,r13
   14001c991:	sar    rcx,0x3
   14001c995:	cmp    r8,rcx
   14001c998:	jbe    0x14001c9d6
   14001c99a:	mov    rdx,rcx
   14001c99d:	mov    rax,rdi
   14001c9a0:	shr    rdx,1
   14001c9a3:	sub    rax,rdx
   14001c9a6:	cmp    rax,rcx
   14001c9a9:	jae    0x14001c9b0
   14001c9ab:	mov    rcx,rbx
   14001c9ae:	jmp    0x14001c9b3
   14001c9b0:	add    rcx,rdx
   14001c9b3:	cmp    rcx,r8
   14001c9b6:	cmovb  rcx,r8
   14001c9ba:	mov    rdx,rcx
   14001c9bd:	lea    rcx,[rsp+0x48]
   14001c9c2:	call   0x14002f0c0
   14001c9c7:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c9cc:	mov    r12,QWORD PTR [rsp+0x50]
   14001c9d1:	mov    r13,QWORD PTR [rsp+0x48]
   14001c9d6:	test   r12,r12
   14001c9d9:	je     0x14001ca72
   14001c9df:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001c9e4:	jmp    0x14001ca6e
   14001c9e9:	cmp    r12,rdx
   14001c9ec:	jne    0x14001ca69
   14001c9ee:	mov    r8,r12
   14001c9f1:	movabs rcx,0x1ffffffffffffffe
   14001c9fb:	sub    r8,r13
   14001c9fe:	sar    r8,0x3
   14001ca02:	cmp    r8,rcx
   14001ca05:	jbe    0x14001ca14
   14001ca07:	lea    rcx,[rip+0x4ec1a]        # 0x14006b628
   14001ca0e:	call   0x140032d00
   14001ca13:	int3   
   14001ca14:	mov    rcx,rdx
   14001ca17:	inc    r8
   14001ca1a:	sub    rcx,r13
   14001ca1d:	sar    rcx,0x3
   14001ca21:	cmp    r8,rcx
   14001ca24:	jbe    0x14001ca69
   14001ca26:	mov    rdx,rcx
   14001ca29:	mov    rax,rdi
   14001ca2c:	shr    rdx,1
   14001ca2f:	sub    rax,rdx
   14001ca32:	cmp    rax,rcx
   14001ca35:	jae    0x14001ca3c
   14001ca37:	mov    rcx,rbx
   14001ca3a:	jmp    0x14001ca3f
   14001ca3c:	add    rcx,rdx
   14001ca3f:	cmp    rcx,r8
   14001ca42:	cmovb  rcx,r8
   14001ca46:	mov    rdx,rcx
   14001ca49:	lea    rcx,[rsp+0x48]
   14001ca4e:	call   0x14002f0c0
   14001ca53:	mov    rax,QWORD PTR [rip+0x6da1e]        # 0x14008a478
   14001ca5a:	mov    rdx,QWORD PTR [rsp+0x58]
   14001ca5f:	mov    r12,QWORD PTR [rsp+0x50]
   14001ca64:	mov    r13,QWORD PTR [rsp+0x48]
   14001ca69:	test   r12,r12
   14001ca6c:	je     0x14001ca72
   14001ca6e:	mov    QWORD PTR [r12],rax
   14001ca72:	add    r12,0x8
   14001ca76:	mov    QWORD PTR [rsp+0x50],r12
   14001ca7b:	mov    rax,QWORD PTR [rbp+0x18]
   14001ca7f:	test   rax,rax
   14001ca82:	je     0x14001cbc8
   14001ca88:	lea    rcx,[rbp+0x30]
   14001ca8c:	cmp    rcx,r12
   14001ca8f:	jae    0x14001cb39
   14001ca95:	lea    rcx,[rbp+0x30]
   14001ca99:	cmp    r13,rcx
   14001ca9c:	ja     0x14001cb39
   14001caa2:	lea    rsi,[rbp+0x30]
   14001caa6:	sub    rsi,r13
   14001caa9:	sar    rsi,0x3
   14001caad:	cmp    r12,rdx
   14001cab0:	jne    0x14001cb26
   14001cab2:	mov    r8,r12
   14001cab5:	movabs rax,0x1ffffffffffffffe
   14001cabf:	sub    r8,r13
   14001cac2:	sar    r8,0x3
   14001cac6:	cmp    r8,rax
   14001cac9:	jbe    0x14001cad8
   14001cacb:	lea    rcx,[rip+0x4eb56]        # 0x14006b628
   14001cad2:	call   0x140032d00
   14001cad7:	int3   
   14001cad8:	mov    rcx,rdx
   14001cadb:	inc    r8
   14001cade:	sub    rcx,r13
   14001cae1:	sar    rcx,0x3
   14001cae5:	cmp    r8,rcx
   14001cae8:	jbe    0x14001cb26
   14001caea:	mov    rdx,rcx
   14001caed:	mov    rax,rdi
   14001caf0:	shr    rdx,1
   14001caf3:	sub    rax,rdx
   14001caf6:	cmp    rax,rcx
   14001caf9:	jae    0x14001cb00
   14001cafb:	mov    rcx,rbx
   14001cafe:	jmp    0x14001cb03
   14001cb00:	add    rcx,rdx
   14001cb03:	cmp    rcx,r8
   14001cb06:	cmovb  rcx,r8
   14001cb0a:	mov    rdx,rcx
   14001cb0d:	lea    rcx,[rsp+0x48]
   14001cb12:	call   0x14002f0c0
   14001cb17:	mov    rdx,QWORD PTR [rsp+0x58]
   14001cb1c:	mov    r12,QWORD PTR [rsp+0x50]
   14001cb21:	mov    r13,QWORD PTR [rsp+0x48]
   14001cb26:	test   r12,r12
   14001cb29:	je     0x14001cbbf
   14001cb2f:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001cb34:	jmp    0x14001cbbb
   14001cb39:	cmp    r12,rdx
   14001cb3c:	jne    0x14001cbb6
   14001cb3e:	mov    r8,r12
   14001cb41:	movabs rcx,0x1ffffffffffffffe
   14001cb4b:	sub    r8,r13
   14001cb4e:	sar    r8,0x3
   14001cb52:	cmp    r8,rcx
   14001cb55:	jbe    0x14001cb64
   14001cb57:	lea    rcx,[rip+0x4eaca]        # 0x14006b628
   14001cb5e:	call   0x140032d00
   14001cb63:	int3   
   14001cb64:	mov    rcx,rdx
   14001cb67:	inc    r8
   14001cb6a:	sub    rcx,r13
   14001cb6d:	sar    rcx,0x3
   14001cb71:	cmp    r8,rcx
   14001cb74:	jbe    0x14001cbb6
   14001cb76:	mov    rdx,rcx
   14001cb79:	mov    rax,rdi
   14001cb7c:	shr    rdx,1
   14001cb7f:	sub    rax,rdx
   14001cb82:	cmp    rax,rcx
   14001cb85:	jae    0x14001cb8c
   14001cb87:	mov    rcx,rbx
   14001cb8a:	jmp    0x14001cb8f
   14001cb8c:	add    rcx,rdx
   14001cb8f:	cmp    rcx,r8
   14001cb92:	cmovb  rcx,r8
   14001cb96:	mov    rdx,rcx
   14001cb99:	lea    rcx,[rsp+0x48]
   14001cb9e:	call   0x14002f0c0
   14001cba3:	mov    rdx,QWORD PTR [rsp+0x58]
   14001cba8:	mov    r12,QWORD PTR [rsp+0x50]
   14001cbad:	mov    r13,QWORD PTR [rsp+0x48]
   14001cbb2:	mov    rax,QWORD PTR [rbp+0x18]
   14001cbb6:	test   r12,r12
   14001cbb9:	je     0x14001cbbf
   14001cbbb:	mov    QWORD PTR [r12],rax
   14001cbbf:	add    r12,0x8
   14001cbc3:	mov    QWORD PTR [rsp+0x50],r12
   14001cbc8:	test   r15,r15
   14001cbcb:	je     0x14001ccee
   14001cbd1:	lea    rax,[rbp+0x10]
   14001cbd5:	cmp    rax,r12
   14001cbd8:	jae    0x14001cc71
   14001cbde:	lea    rax,[rbp+0x10]
   14001cbe2:	cmp    r13,rax
   14001cbe5:	ja     0x14001cc71
   14001cbeb:	lea    rsi,[rbp+0x10]
   14001cbef:	sub    rsi,r13
   14001cbf2:	sar    rsi,0x3
   14001cbf6:	cmp    r12,rdx
   14001cbf9:	jne    0x14001cc61
   14001cbfb:	mov    rax,r12
   14001cbfe:	movabs rcx,0x1ffffffffffffffe
   14001cc08:	sub    rax,r13
   14001cc0b:	sar    rax,0x3
   14001cc0f:	cmp    rax,rcx
   14001cc12:	jbe    0x14001cc21
   14001cc14:	lea    rcx,[rip+0x4ea0d]        # 0x14006b628
   14001cc1b:	call   0x140032d00
   14001cc20:	int3   
   14001cc21:	sub    rdx,r13
   14001cc24:	inc    rax
   14001cc27:	sar    rdx,0x3
   14001cc2b:	cmp    rax,rdx
   14001cc2e:	jbe    0x14001cc61
   14001cc30:	mov    rcx,rdx
   14001cc33:	shr    rcx,1
   14001cc36:	sub    rdi,rcx
   14001cc39:	cmp    rdi,rdx
   14001cc3c:	jae    0x14001cc43
   14001cc3e:	mov    rdx,rbx
   14001cc41:	jmp    0x14001cc46
   14001cc43:	add    rdx,rcx
   14001cc46:	cmp    rdx,rax
   14001cc49:	lea    rcx,[rsp+0x48]
   14001cc4e:	cmovb  rdx,rax
   14001cc52:	call   0x14002f0c0
   14001cc57:	mov    r12,QWORD PTR [rsp+0x50]
   14001cc5c:	mov    r13,QWORD PTR [rsp+0x48]
   14001cc61:	test   r12,r12
   14001cc64:	je     0x14001cce5
   14001cc66:	mov    rax,QWORD PTR [r13+rsi*8+0x0]
   14001cc6b:	mov    QWORD PTR [r12],rax
   14001cc6f:	jmp    0x14001cce5
   14001cc71:	cmp    r12,rdx
   14001cc74:	jne    0x14001ccdc
   14001cc76:	mov    rax,r12
   14001cc79:	movabs rcx,0x1ffffffffffffffe
   14001cc83:	sub    rax,r13
   14001cc86:	sar    rax,0x3
   14001cc8a:	cmp    rax,rcx
   14001cc8d:	jbe    0x14001cc9c
   14001cc8f:	lea    rcx,[rip+0x4e992]        # 0x14006b628
   14001cc96:	call   0x140032d00
   14001cc9b:	int3   
   14001cc9c:	sub    rdx,r13
   14001cc9f:	inc    rax
   14001cca2:	sar    rdx,0x3
   14001cca6:	cmp    rax,rdx
   14001cca9:	jbe    0x14001ccdc
   14001ccab:	mov    rcx,rdx
   14001ccae:	shr    rcx,1
   14001ccb1:	sub    rdi,rcx
   14001ccb4:	cmp    rdi,rdx
   14001ccb7:	jae    0x14001ccbe
   14001ccb9:	mov    rdx,rbx
   14001ccbc:	jmp    0x14001ccc1
   14001ccbe:	add    rdx,rcx
   14001ccc1:	cmp    rdx,rax
   14001ccc4:	lea    rcx,[rsp+0x48]
   14001ccc9:	cmovb  rdx,rax
   14001cccd:	call   0x14002f0c0
   14001ccd2:	mov    r12,QWORD PTR [rsp+0x50]
   14001ccd7:	mov    r13,QWORD PTR [rsp+0x48]
   14001ccdc:	test   r12,r12
   14001ccdf:	je     0x14001cce5
   14001cce1:	mov    QWORD PTR [r12],r15
   14001cce5:	add    r12,0x8
   14001cce9:	mov    QWORD PTR [rsp+0x50],r12
   14001ccee:	call   0x14001aca0
   14001ccf3:	mov    esi,eax
   14001ccf5:	mov    DWORD PTR [rbp-0x78],eax
   14001ccf8:	call   0x14001b0f0
   14001ccfd:	movsxd rcx,DWORD PTR [rsp+0x74]
   14001cd02:	mov    QWORD PTR [rsp+0x68],rcx
   14001cd07:	mov    r15d,eax
   14001cd0a:	nop    WORD PTR [rax+rax*1+0x0]
   14001cd10:	mov    edi,0x1
   14001cd15:	test   rcx,rcx
   14001cd18:	je     0x14001cd44
   14001cd1a:	lea    rcx,[rbp+0x240]
   14001cd21:	xor    r9d,r9d
   14001cd24:	xor    r8d,r8d
   14001cd27:	xor    edx,edx
   14001cd29:	mov    DWORD PTR [rsp+0x20],edi
   14001cd2d:	call   QWORD PTR [rip+0x4b83d]        # 0x140068570
   14001cd33:	test   eax,eax
   14001cd35:	je     0x14001cd44
   14001cd37:	lea    rcx,[rbp+0x240]
   14001cd3e:	call   QWORD PTR [rip+0x4b85c]        # 0x1400685a0
   14001cd44:	cmp    DWORD PTR [rsp+0x70],ebx
   14001cd48:	jne    0x14001ce9f
   14001cd4e:	mov    eax,DWORD PTR [rip+0x509ec]        # 0x14006d740
   14001cd54:	lea    rcx,[rbp+0xc17]
   14001cd5b:	xor    edx,edx
   14001cd5d:	mov    DWORD PTR [rbp+0xc10],eax
   14001cd63:	movzx  eax,WORD PTR [rip+0x509da]        # 0x14006d744
   14001cd6a:	mov    r8d,0xfd
   14001cd70:	mov    WORD PTR [rbp+0xc14],ax
   14001cd77:	movzx  eax,BYTE PTR [rip+0x509c8]        # 0x14006d746
   14001cd7e:	mov    BYTE PTR [rbp+0xc16],al
   14001cd84:	call   0x140036dc0
   14001cd89:	lea    r8,[rip+0x509b8]        # 0x14006d748
   14001cd90:	lea    rcx,[rbp+0xc10]
   14001cd97:	mov    edx,0x104
   14001cd9c:	call   0x1400336a8
   14001cda1:	lea    r8,[rip+0x51ec0]        # 0x14006ec68
   14001cda8:	lea    rcx,[rbp+0xc10]
   14001cdaf:	mov    edx,0x104
   14001cdb4:	call   0x1400330c8
   14001cdb9:	cmp    QWORD PTR [rbp+0x60],rbx
   14001cdbd:	jne    0x14001cdd5
   14001cdbf:	xor    edx,edx
   14001cdc1:	lea    r8,[rbp+0xc10]
   14001cdc8:	lea    ecx,[rdx+0x6]
   14001cdcb:	call   QWORD PTR [rip+0x4b357]        # 0x140068128
   14001cdd1:	mov    QWORD PTR [rbp+0x60],rax
   14001cdd5:	call   QWORD PTR [rip+0x4b5e5]        # 0x1400683c0
   14001cddb:	mov    rcx,QWORD PTR [rbp+0x60]
   14001cddf:	mov    edi,ebx
   14001cde1:	cmp    eax,0xb7
   14001cde6:	mov    rax,QWORD PTR [rbp+0x58]
   14001cdea:	sete   dil
   14001cdee:	test   rcx,rcx
   14001cdf1:	je     0x14001ce3e
   14001cdf3:	test   rax,rax
   14001cdf6:	jne    0x14001ce1a
   14001cdf8:	xor    r9d,r9d
   14001cdfb:	xor    r8d,r8d
   14001cdfe:	mov    edx,0xf001f
   14001ce03:	mov    QWORD PTR [rsp+0x20],0x80000
   14001ce0c:	call   QWORD PTR [rip+0x4b2c6]        # 0x1400680d8
   14001ce12:	mov    rcx,QWORD PTR [rbp+0x60]
   14001ce16:	mov    QWORD PTR [rbp+0x58],rax
   14001ce1a:	test   rcx,rcx
   14001ce1d:	je     0x14001ce3e
   14001ce1f:	test   rax,rax
   14001ce22:	je     0x14001ce57
   14001ce24:	lea    rdx,[rbp-0x7c]
   14001ce28:	mov    DWORD PTR [rbp+0x50],0x80000
   14001ce2f:	test   rdx,rdx
   14001ce32:	je     0x14001ce70
   14001ce34:	mov    edx,edi
   14001ce36:	mov    DWORD PTR [rbp-0x80],edx
   14001ce39:	mov    DWORD PTR [rbp-0x7c],edx
   14001ce3c:	jmp    0x14001ce73
   14001ce3e:	test   rax,rax
   14001ce41:	je     0x14001ce57
   14001ce43:	mov    rcx,rax
   14001ce46:	call   QWORD PTR [rip+0x4b294]        # 0x1400680e0
   14001ce4c:	mov    rcx,QWORD PTR [rbp+0x60]
   14001ce50:	mov    rax,rbx
   14001ce53:	mov    QWORD PTR [rbp+0x58],rbx
   14001ce57:	test   rcx,rcx
   14001ce5a:	je     0x14001ce6d
   14001ce5c:	call   QWORD PTR [rip+0x4b536]        # 0x140068398
   14001ce62:	mov    rax,QWORD PTR [rbp+0x58]
   14001ce66:	mov    rcx,rbx
   14001ce69:	mov    QWORD PTR [rbp+0x60],rbx
   14001ce6d:	mov    DWORD PTR [rbp+0x50],ebx
   14001ce70:	mov    edx,DWORD PTR [rbp-0x80]
   14001ce73:	test   rcx,rcx
   14001ce76:	je     0x14001ce9a
   14001ce78:	test   rax,rax
   14001ce7b:	je     0x14001ce9a
   14001ce7d:	test   edx,edx
   14001ce7f:	jne    0x14001ce8f
   14001ce81:	mov    r8d,0x80000
   14001ce87:	mov    rcx,rax
   14001ce8a:	call   0x140036dc0
   14001ce8f:	mov    edi,0x1
   14001ce94:	mov    DWORD PTR [rsp+0x70],edi
   14001ce98:	jmp    0x14001ce9f
   14001ce9a:	mov    edi,0x1
   14001ce9f:	test   r14d,r14d
   14001cea2:	jne    0x14001d5e8
   14001cea8:	test   r15d,r15d
   14001ceab:	je     0x14001d62e
   14001ceb1:	xor    r9d,r9d
   14001ceb4:	lea    rax,[rip+0x50fad]        # 0x14006de68
   14001cebb:	lea    r14,[rip+0x4e5de]        # 0x14006b4a0
   14001cec2:	mov    QWORD PTR [rsp+0x28],rax
   14001cec7:	lea    rcx,[rip+0x518a2]        # 0x14006e770
   14001cece:	lea    r8d,[r9+0x2]
   14001ced2:	mov    edx,0x262
   14001ced7:	mov    QWORD PTR [rsp+0x20],r14
   14001cedc:	call   0x140003150
   14001cee1:	mov    ecx,0x50
   14001cee6:	mov    QWORD PTR [rbp-0x10],rbx
   14001ceea:	call   0x1400331a0
   14001ceef:	test   rax,rax
   14001cef2:	je     0x14001db1a
   14001cef8:	mov    QWORD PTR [rbp-0x18],rax
   14001cefc:	mov    QWORD PTR [rax],rax
   14001ceff:	mov    rax,QWORD PTR [rbp-0x18]
   14001cf03:	mov    QWORD PTR [rax+0x8],rax
   14001cf07:	mov    rax,QWORD PTR [rbp-0x18]
   14001cf0b:	lea    rcx,[rbp-0x20]
   14001cf0f:	mov    QWORD PTR [rax+0x10],rax
   14001cf13:	mov    rax,QWORD PTR [rbp-0x18]
   14001cf17:	mov    BYTE PTR [rax+0x48],0x1
   14001cf1b:	mov    rax,QWORD PTR [rbp-0x18]
   14001cf1f:	mov    BYTE PTR [rax+0x49],0x1
   14001cf23:	mov    DWORD PTR [rbp+0x0],0x4
   14001cf2a:	call   0x14000ef00
   14001cf2f:	lea    rdx,[rbp+0x620]
   14001cf36:	lea    rcx,[rbp-0x20]
   14001cf3a:	call   0x14000fe70
   14001cf3f:	cmp    QWORD PTR [rbp+0x638],0x10
   14001cf47:	lea    rax,[rbp+0xb08]
   14001cf4e:	lea    rdx,[rbp+0x620]
   14001cf55:	lea    rcx,[rbp+0xb00]
   14001cf5c:	mov    r8d,0x3
   14001cf62:	cmovae rdx,QWORD PTR [rbp+0x620]
   14001cf6a:	mov    QWORD PTR [rbp+0xb00],rax
   14001cf71:	call   0x140005b60
   14001cf76:	mov    r8,QWORD PTR [rbp+0xb00]
   14001cf7d:	mov    QWORD PTR [rbp+0xabc],rbx
   14001cf84:	test   r8,r8
   14001cf87:	je     0x14001cf9a
   14001cf89:	lea    rcx,[rbp+0x8a4]
   14001cf90:	mov    edx,0x104
   14001cf95:	call   0x140034290
   14001cf9a:	xor    edx,edx
   14001cf9c:	lea    rax,[rbp+0x898]
   14001cfa3:	lea    r9,[rip+0x6af56]        # 0x140087f00
   14001cfaa:	lea    r8d,[rdx+0x17]
   14001cfae:	lea    rcx,[rip+0x6af5b]        # 0x140087f10
   14001cfb5:	mov    QWORD PTR [rsp+0x20],rax
   14001cfba:	call   QWORD PTR [rip+0x4b6b8]        # 0x140068678
   14001cfc0:	mov    edi,eax
   14001cfc2:	test   eax,eax
   14001cfc4:	jns    0x14001d03b
   14001cfc6:	lea    rcx,[rbp+0x768]
   14001cfcd:	mov    edx,eax
   14001cfcf:	call   0x140017400
   14001cfd4:	cmp    QWORD PTR [rax+0x18],0x10
   14001cfd9:	jb     0x14001cfde
   14001cfdb:	mov    rax,QWORD PTR [rax]
   14001cfde:	mov    QWORD PTR [rsp+0x28],rax
   14001cfe3:	lea    rax,[rip+0x50bfe]        # 0x14006dbe8
   14001cfea:	mov    esi,0x1
   14001cfef:	lea    rcx,[rip+0x50b7a]        # 0x14006db70
   14001cff6:	xor    r9d,r9d
   14001cff9:	mov    edx,0x9d
   14001cffe:	mov    r8d,esi
   14001d001:	mov    QWORD PTR [rsp+0x20],rax
   14001d006:	call   0x140003150
   14001d00b:	cmp    QWORD PTR [rbp+0x780],0x10
   14001d013:	jb     0x14001d021
   14001d015:	mov    rcx,QWORD PTR [rbp+0x768]
   14001d01c:	call   0x1400330c0
   14001d021:	mov    QWORD PTR [rbp+0x780],0xf
   14001d02c:	mov    QWORD PTR [rbp+0x778],rbx
   14001d033:	mov    BYTE PTR [rbp+0x768],bl
   14001d039:	jmp    0x14001d0b9
   14001d03b:	cmp    DWORD PTR [rbp+0xac0],ebx
   14001d041:	je     0x14001d079
   14001d043:	mov    rcx,QWORD PTR [rbp+0x898]
   14001d04a:	lea    rdx,[rbp+0x850]
   14001d051:	mov    rax,QWORD PTR [rcx]
   14001d054:	call   QWORD PTR [rax+0x30]
   14001d057:	test   eax,eax
   14001d059:	js     0x14001d079
   14001d05b:	mov    rax,QWORD PTR [rbp+0x850]
   14001d062:	lea    rcx,[rbp+0x850]
   14001d069:	call   QWORD PTR [rax+0x8]
   14001d06c:	mov    esi,0x1
   14001d071:	mov    DWORD PTR [rbp+0x8a0],esi
   14001d077:	jmp    0x14001d07e
   14001d079:	mov    esi,0x1
   14001d07e:	mov    rcx,QWORD PTR [rbp+0x898]
   14001d085:	mov    rax,QWORD PTR [rcx]
   14001d088:	cmp    bx,WORD PTR [rbp+0x8a4]
   14001d08f:	je     0x14001d0a4
   14001d091:	lea    r8,[rbp+0x860]
   14001d098:	lea    rdx,[rbp+0x8a4]
   14001d09f:	call   QWORD PTR [rax+0x28]
   14001d0a2:	jmp    0x14001d0b3
   14001d0a4:	lea    r9,[rbp+0x860]
   14001d0ab:	mov    r8d,esi
   14001d0ae:	mov    edx,esi
   14001d0b0:	call   QWORD PTR [rax+0x20]
   14001d0b3:	mov    edi,eax
   14001d0b5:	test   eax,eax
   14001d0b7:	jns    0x14001d127
   14001d0b9:	lea    rcx,[rbp+0x7e0]
   14001d0c0:	mov    edx,edi
   14001d0c2:	call   0x140017400
   14001d0c7:	cmp    QWORD PTR [rax+0x18],0x10
   14001d0cc:	jb     0x14001d0d1
   14001d0ce:	mov    rax,QWORD PTR [rax]
   14001d0d1:	mov    QWORD PTR [rsp+0x28],rax
   14001d0d6:	lea    rax,[rip+0x50b43]        # 0x14006dc20
   14001d0dd:	lea    rcx,[rip+0x50a8c]        # 0x14006db70
   14001d0e4:	xor    r9d,r9d
   14001d0e7:	mov    r8d,esi
   14001d0ea:	mov    edx,0xb7
   14001d0ef:	mov    QWORD PTR [rsp+0x20],rax
   14001d0f4:	call   0x140003150
   14001d0f9:	cmp    QWORD PTR [rbp+0x7f8],0x10
   14001d101:	jb     0x14001d10f
   14001d103:	mov    rcx,QWORD PTR [rbp+0x7e0]
   14001d10a:	call   0x1400330c0
   14001d10f:	mov    QWORD PTR [rbp+0x7f8],0xf
   14001d11a:	mov    QWORD PTR [rbp+0x7f0],rbx
   14001d121:	mov    BYTE PTR [rbp+0x7e0],bl
   14001d127:	mov    rcx,QWORD PTR [rbp+0x860]
   14001d12e:	test   rcx,rcx
   14001d131:	je     0x14001d193
   14001d133:	mov    QWORD PTR [rbp-0x58],rbx
   14001d137:	cmp    bx,WORD PTR [rbp+0x8a4]
   14001d13e:	jne    0x14001d17d
   14001d140:	mov    rax,QWORD PTR [rcx]
   14001d143:	lea    rdx,[rbp-0x58]
   14001d147:	call   QWORD PTR [rax+0x28]
   14001d14a:	test   eax,eax
   14001d14c:	js     0x14001d176
   14001d14e:	mov    r8,QWORD PTR [rbp-0x58]
   14001d152:	test   r8,r8
   14001d155:	je     0x14001d176
   14001d157:	lea    rcx,[rbp+0x8a4]
   14001d15e:	mov    edx,0x104
   14001d163:	call   0x140034290
   14001d168:	mov    rcx,QWORD PTR [rbp-0x58]
   14001d16c:	call   QWORD PTR [rip+0x4b526]        # 0x140068698
   14001d172:	mov    QWORD PTR [rbp-0x58],rbx
   14001d176:	mov    rcx,QWORD PTR [rbp+0x860]
   14001d17d:	mov    rax,QWORD PTR [rcx]
   14001d180:	lea    r8,[rbp+0xab0]
   14001d187:	xor    edx,edx
   14001d189:	call   QWORD PTR [rax+0x20]
   14001d18c:	mov    rcx,QWORD PTR [rbp+0x860]
   14001d193:	test   edi,edi
   14001d195:	js     0x14001d1bd
   14001d197:	mov    rax,QWORD PTR [rcx]
   14001d19a:	lea    rdx,[rbp+0x888]
   14001d1a1:	xor    r9d,r9d
   14001d1a4:	mov    QWORD PTR [rsp+0x20],rdx
   14001d1a9:	lea    rdx,[rip+0x6ad30]        # 0x140087ee0
   14001d1b0:	lea    r8d,[r9+0x17]
   14001d1b4:	call   QWORD PTR [rax+0x18]
   14001d1b7:	mov    edi,eax
   14001d1b9:	test   eax,eax
   14001d1bb:	jns    0x14001d22f
   14001d1bd:	lea    rcx,[rbp+0x808]
   14001d1c4:	mov    edx,edi
   14001d1c6:	call   0x140017400
   14001d1cb:	cmp    QWORD PTR [rax+0x18],0x10
   14001d1d0:	jb     0x14001d1d5
   14001d1d2:	mov    rax,QWORD PTR [rax]
   14001d1d5:	mov    QWORD PTR [rsp+0x28],rax
   14001d1da:	lea    rax,[rip+0x50a6f]        # 0x14006dc50
   14001d1e1:	lea    rcx,[rip+0x50988]        # 0x14006db70
   14001d1e8:	xor    r9d,r9d
   14001d1eb:	mov    r8d,esi
   14001d1ee:	mov    edx,0xce
   14001d1f3:	mov    QWORD PTR [rsp+0x20],rax
   14001d1f8:	call   0x140003150
   14001d1fd:	cmp    QWORD PTR [rbp+0x820],0x10
   14001d205:	jb     0x14001d213
   14001d207:	mov    rcx,QWORD PTR [rbp+0x808]
   14001d20e:	call   0x1400330c0
   14001d213:	mov    QWORD PTR [rbp+0x820],0xf
   14001d21e:	mov    QWORD PTR [rbp+0x818],rbx
   14001d225:	mov    BYTE PTR [rbp+0x808],bl
   14001d22b:	test   edi,edi
   14001d22d:	js     0x14001d249
   14001d22f:	mov    rcx,QWORD PTR [rbp+0x888]
   14001d236:	lea    rdx,[rbp+0x868]
   14001d23d:	mov    rax,QWORD PTR [rcx]
   14001d240:	call   QWORD PTR [rax+0x40]
   14001d243:	mov    edi,eax
   14001d245:	test   eax,eax
   14001d247:	jns    0x14001d2bb
   14001d249:	lea    rcx,[rbp+0x740]
   14001d250:	mov    edx,edi
   14001d252:	call   0x140017400
   14001d257:	cmp    QWORD PTR [rax+0x18],0x10
   14001d25c:	jb     0x14001d261
   14001d25e:	mov    rax,QWORD PTR [rax]
   14001d261:	mov    QWORD PTR [rsp+0x28],rax
   14001d266:	lea    rax,[rip+0x50a0b]        # 0x14006dc78
   14001d26d:	lea    rcx,[rip+0x508fc]        # 0x14006db70
   14001d274:	xor    r9d,r9d
   14001d277:	mov    r8d,esi
   14001d27a:	mov    edx,0xd5
   14001d27f:	mov    QWORD PTR [rsp+0x20],rax
   14001d284:	call   0x140003150
   14001d289:	cmp    QWORD PTR [rbp+0x758],0x10
   14001d291:	jb     0x14001d29f
   14001d293:	mov    rcx,QWORD PTR [rbp+0x740]
   14001d29a:	call   0x1400330c0
   14001d29f:	mov    QWORD PTR [rbp+0x758],0xf
   14001d2aa:	mov    QWORD PTR [rbp+0x750],rbx
   14001d2b1:	mov    BYTE PTR [rbp+0x740],bl
   14001d2b7:	test   edi,edi
   14001d2b9:	js     0x14001d30b
   14001d2bb:	mov    rdx,QWORD PTR [rbp+0x868]
   14001d2c2:	mov    rcx,QWORD PTR [rbp+0x888]
   14001d2c9:	lea    r8,[rip+0x4f6c0]        # 0x14006c990
   14001d2d0:	mov    QWORD PTR [rsp+0x30],r8
   14001d2d5:	mov    QWORD PTR [rsp+0x28],rdx
   14001d2da:	mov    r9d,0x989680
   14001d2e0:	movups xmm0,XMMWORD PTR [rdx]
   14001d2e3:	movaps XMMWORD PTR [rbp+0x870],xmm0
   14001d2ea:	movzx  eax,WORD PTR [rdx+0x10]
   14001d2ee:	xor    r8d,r8d
   14001d2f1:	xor    edx,edx
   14001d2f3:	mov    WORD PTR [rbp+0x880],ax
   14001d2fa:	mov    rax,QWORD PTR [rcx]
   14001d2fd:	mov    QWORD PTR [rsp+0x20],rbx
   14001d302:	call   QWORD PTR [rax+0x18]
   14001d305:	mov    edi,eax
   14001d307:	test   eax,eax
   14001d309:	jns    0x14001d37d
   14001d30b:	lea    rcx,[rbp+0x7b8]
   14001d312:	mov    edx,edi
   14001d314:	call   0x140017400
   14001d319:	cmp    QWORD PTR [rax+0x18],0x10
   14001d31e:	jb     0x14001d323
   14001d320:	mov    rax,QWORD PTR [rax]
   14001d323:	mov    QWORD PTR [rsp+0x28],rax
   14001d328:	lea    rax,[rip+0x50971]        # 0x14006dca0
   14001d32f:	lea    rcx,[rip+0x5083a]        # 0x14006db70
   14001d336:	xor    r9d,r9d
   14001d339:	mov    r8d,esi
   14001d33c:	mov    edx,0xe5
   14001d341:	mov    QWORD PTR [rsp+0x20],rax
   14001d346:	call   0x140003150
   14001d34b:	cmp    QWORD PTR [rbp+0x7d0],0x10
   14001d353:	jb     0x14001d361
   14001d355:	mov    rcx,QWORD PTR [rbp+0x7b8]
   14001d35c:	call   0x1400330c0
   14001d361:	mov    QWORD PTR [rbp+0x7d0],0xf
   14001d36c:	mov    QWORD PTR [rbp+0x7c8],rbx
   14001d373:	mov    BYTE PTR [rbp+0x7b8],bl
   14001d379:	test   edi,edi
   14001d37b:	js     0x14001d39e
   14001d37d:	mov    rcx,QWORD PTR [rbp+0x888]
   14001d384:	lea    r8,[rbp+0x890]
   14001d38b:	lea    rdx,[rip+0x6ab5e]        # 0x140087ef0
   14001d392:	mov    rax,QWORD PTR [rcx]
   14001d395:	call   QWORD PTR [rax+0x70]
   14001d398:	mov    edi,eax
   14001d39a:	test   eax,eax
   14001d39c:	jns    0x14001d410
   14001d39e:	lea    rcx,[rbp+0x790]
   14001d3a5:	mov    edx,edi
   14001d3a7:	call   0x140017400
   14001d3ac:	cmp    QWORD PTR [rax+0x18],0x10
   14001d3b1:	jb     0x14001d3b6
   14001d3b3:	mov    rax,QWORD PTR [rax]
   14001d3b6:	mov    QWORD PTR [rsp+0x28],rax
   14001d3bb:	lea    rax,[rip+0x5090e]        # 0x14006dcd0
   14001d3c2:	lea    rcx,[rip+0x507a7]        # 0x14006db70
   14001d3c9:	xor    r9d,r9d
   14001d3cc:	mov    r8d,esi
   14001d3cf:	mov    edx,0xec
   14001d3d4:	mov    QWORD PTR [rsp+0x20],rax
   14001d3d9:	call   0x140003150
   14001d3de:	cmp    QWORD PTR [rbp+0x7a8],0x10
   14001d3e6:	jb     0x14001d3f4
   14001d3e8:	mov    rcx,QWORD PTR [rbp+0x790]
   14001d3ef:	call   0x1400330c0
   14001d3f4:	mov    QWORD PTR [rbp+0x7a8],0xf
   14001d3ff:	mov    QWORD PTR [rbp+0x7a0],rbx
   14001d406:	mov    BYTE PTR [rbp+0x790],bl
   14001d40c:	test   edi,edi
   14001d40e:	js     0x14001d44c
   14001d410:	xor    r9d,r9d
   14001d413:	lea    rax,[rip+0x508e6]        # 0x14006dd00
   14001d41a:	lea    rcx,[rip+0x5074f]        # 0x14006db70
   14001d421:	mov    QWORD PTR [rsp+0x28],rax
   14001d426:	lea    r8d,[r9+0x3]
   14001d42a:	mov    edx,0xf0
   14001d42f:	mov    QWORD PTR [rsp+0x20],r14
   14001d434:	call   0x140003150
   14001d439:	mov    rcx,QWORD PTR [rbp+0x888]
   14001d440:	mov    rax,QWORD PTR [rcx]
   14001d443:	call   QWORD PTR [rax+0x50]
   14001d446:	mov    edi,eax
   14001d448:	test   eax,eax
   14001d44a:	jns    0x14001d4a6
   14001d44c:	lea    rcx,[rbp+0xad0]
   14001d453:	mov    edx,edi
   14001d455:	call   0x140017400
   14001d45a:	cmp    QWORD PTR [rax+0x18],0x10
   14001d45f:	jb     0x14001d464
   14001d461:	mov    rax,QWORD PTR [rax]
   14001d464:	mov    QWORD PTR [rsp+0x28],rax
   14001d469:	lea    rax,[rip+0x508b0]        # 0x14006dd20
   14001d470:	lea    rcx,[rip+0x506f9]        # 0x14006db70
   14001d477:	xor    r9d,r9d
   14001d47a:	mov    r8d,esi
   14001d47d:	mov    edx,0xf4
   14001d482:	mov    QWORD PTR [rsp+0x20],rax
   14001d487:	call   0x140003150
   14001d48c:	cmp    QWORD PTR [rbp+0xae8],0x10
   14001d494:	jb     0x14001d4a2
   14001d496:	mov    rcx,QWORD PTR [rbp+0xad0]
   14001d49d:	call   0x1400330c0
   14001d4a2:	test   edi,edi
   14001d4a4:	js     0x14001d4ac
   14001d4a6:	mov    DWORD PTR [rbp+0x858],esi
   14001d4ac:	mov    rcx,QWORD PTR [rbp+0xb00]
   14001d4b3:	test   edi,edi
   14001d4b5:	lea    rax,[rbp+0xb08]
   14001d4bc:	mov    r14d,ebx
   14001d4bf:	setns  r14b
   14001d4c3:	cmp    rcx,rax
   14001d4c6:	je     0x14001d4cd
   14001d4c8:	call   0x140033594
   14001d4cd:	cmp    QWORD PTR [rbp+0x638],0x10
   14001d4d5:	jb     0x14001d4e3
   14001d4d7:	mov    rcx,QWORD PTR [rbp+0x620]
   14001d4de:	call   0x1400330c0
   14001d4e3:	mov    rax,QWORD PTR [rbp-0x18]
   14001d4e7:	mov    QWORD PTR [rbp+0x638],0xf
   14001d4f2:	mov    QWORD PTR [rbp+0x630],rbx
   14001d4f9:	mov    BYTE PTR [rbp+0x620],bl
   14001d4ff:	mov    rdi,QWORD PTR [rax+0x8]
   14001d503:	mov    rsi,rdi
   14001d506:	cmp    BYTE PTR [rdi+0x49],bl
   14001d509:	jne    0x14001d553
   14001d50b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d510:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d514:	lea    rcx,[rbp-0x20]
   14001d518:	call   0x140011a50
   14001d51d:	cmp    QWORD PTR [rdi+0x38],0x10
   14001d522:	mov    rsi,QWORD PTR [rsi]
   14001d525:	jb     0x14001d530
   14001d527:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d52b:	call   0x1400330c0
   14001d530:	mov    QWORD PTR [rdi+0x38],0xf
   14001d538:	mov    QWORD PTR [rdi+0x30],rbx
   14001d53c:	mov    rcx,rdi
   14001d53f:	mov    BYTE PTR [rdi+0x20],bl
   14001d542:	call   0x1400330c0
   14001d547:	mov    rdi,rsi
   14001d54a:	cmp    BYTE PTR [rsi+0x49],bl
   14001d54d:	je     0x14001d510
   14001d54f:	mov    rax,QWORD PTR [rbp-0x18]
   14001d553:	mov    QWORD PTR [rax+0x8],rax
   14001d557:	mov    rax,QWORD PTR [rbp-0x18]
   14001d55b:	mov    QWORD PTR [rax],rax
   14001d55e:	mov    rax,QWORD PTR [rbp-0x18]
   14001d562:	mov    QWORD PTR [rax+0x10],rax
   14001d566:	mov    rax,QWORD PTR [rbp-0x18]
   14001d56a:	mov    QWORD PTR [rbp-0x10],rbx
   14001d56e:	mov    rdi,QWORD PTR [rax+0x8]
   14001d572:	mov    rsi,rdi
   14001d575:	cmp    BYTE PTR [rdi+0x49],bl
   14001d578:	jne    0x14001d5c3
   14001d57a:	nop    WORD PTR [rax+rax*1+0x0]
   14001d580:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d584:	lea    rcx,[rbp-0x20]
   14001d588:	call   0x140011a50
   14001d58d:	cmp    QWORD PTR [rdi+0x38],0x10
   14001d592:	mov    rsi,QWORD PTR [rsi]
   14001d595:	jb     0x14001d5a0
   14001d597:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d59b:	call   0x1400330c0
   14001d5a0:	mov    QWORD PTR [rdi+0x38],0xf
   14001d5a8:	mov    QWORD PTR [rdi+0x30],rbx
   14001d5ac:	mov    rcx,rdi
   14001d5af:	mov    BYTE PTR [rdi+0x20],bl
   14001d5b2:	call   0x1400330c0
   14001d5b7:	mov    rdi,rsi
   14001d5ba:	cmp    BYTE PTR [rsi+0x49],bl
   14001d5bd:	je     0x14001d580
   14001d5bf:	mov    rax,QWORD PTR [rbp-0x18]
   14001d5c3:	mov    QWORD PTR [rax+0x8],rax
   14001d5c7:	mov    rax,QWORD PTR [rbp-0x18]
   14001d5cb:	mov    QWORD PTR [rax],rax
   14001d5ce:	mov    rax,QWORD PTR [rbp-0x18]
   14001d5d2:	mov    QWORD PTR [rax+0x10],rax
   14001d5d6:	mov    rcx,QWORD PTR [rbp-0x18]
   14001d5da:	mov    QWORD PTR [rbp-0x10],rbx
   14001d5de:	call   0x1400330c0
   14001d5e3:	mov    esi,DWORD PTR [rbp-0x78]
   14001d5e6:	jmp    0x14001d62e
   14001d5e8:	test   r15d,r15d
   14001d5eb:	jne    0x14001d62e
   14001d5ed:	lea    rax,[rip+0x5084c]        # 0x14006de40
   14001d5f4:	lea    r8d,[r15+0x2]
   14001d5f8:	lea    rcx,[rip+0x51171]        # 0x14006e770
   14001d5ff:	mov    QWORD PTR [rsp+0x28],rax
   14001d604:	lea    rax,[rip+0x4de95]        # 0x14006b4a0
   14001d60b:	xor    r9d,r9d
   14001d60e:	mov    edx,0x269
   14001d613:	mov    QWORD PTR [rsp+0x20],rax
   14001d618:	call   0x140003150
   14001d61d:	lea    rcx,[rbp+0x830]
   14001d624:	mov    edx,edi
   14001d626:	call   0x140017590
   14001d62b:	mov    r14d,ebx
   14001d62e:	mov    edi,DWORD PTR [rbp-0x6c]
   14001d631:	test   edi,edi
   14001d633:	jne    0x14001d67b
   14001d635:	lea    r9,[rbp-0x70]
   14001d639:	lea    rdx,[rip+0x51638]        # 0x14006ec78
   14001d640:	lea    rcx,[rbp+0xd0]
   14001d647:	mov    r8d,0x370
   14001d64d:	mov    DWORD PTR [rsp+0x20],ebx
   14001d651:	call   0x1400490d0
   14001d656:	test   eax,eax
   14001d658:	je     0x14001d67b
   14001d65a:	cmp    DWORD PTR [rbp-0x70],ebx
   14001d65d:	jne    0x14001d673
   14001d65f:	mov    rcx,QWORD PTR [rbp+0xd8]
   14001d666:	xor    edx,edx
   14001d668:	mov    r8d,0x370
   14001d66e:	call   0x140036dc0
   14001d673:	mov    edi,0x1
   14001d678:	mov    DWORD PTR [rbp-0x6c],edi
   14001d67b:	cmp    DWORD PTR [rsp+0x7c],ebx
   14001d67f:	jne    0x14001d6c7
   14001d681:	lea    r9,[rbp-0x68]
   14001d685:	lea    rdx,[rip+0x515fc]        # 0x14006ec88
   14001d68c:	lea    rcx,[rbp+0x130]
   14001d693:	mov    r8d,0x4004c
   14001d699:	mov    DWORD PTR [rsp+0x20],ebx
   14001d69d:	call   0x1400490d0
   14001d6a2:	test   eax,eax
   14001d6a4:	je     0x14001d6c7
   14001d6a6:	cmp    DWORD PTR [rbp-0x68],ebx
   14001d6a9:	jne    0x14001d6bf
   14001d6ab:	mov    rcx,QWORD PTR [rbp+0x138]
   14001d6b2:	xor    edx,edx
   14001d6b4:	mov    r8d,0x4004c
   14001d6ba:	call   0x140036dc0
   14001d6bf:	mov    DWORD PTR [rsp+0x7c],0x1
   14001d6c7:	mov    eax,DWORD PTR [rsp+0x78]
   14001d6cb:	test   eax,eax
   14001d6cd:	jne    0x14001d6e5
   14001d6cf:	test   esi,esi
   14001d6d1:	je     0x14001d72b
   14001d6d3:	lea    rcx,[rbp+0x1a0]
   14001d6da:	call   0x140014c40
   14001d6df:	mov    DWORD PTR [rsp+0x78],eax
   14001d6e3:	jmp    0x14001d72b
   14001d6e5:	test   esi,esi
   14001d6e7:	jne    0x14001d72b
   14001d6e9:	lea    rax,[rip+0x515a8]        # 0x14006ec98
   14001d6f0:	lea    r8d,[rsi+0x2]
   14001d6f4:	lea    rcx,[rip+0x51075]        # 0x14006e770
   14001d6fb:	mov    QWORD PTR [rsp+0x28],rax
   14001d700:	lea    rax,[rip+0x4dd99]        # 0x14006b4a0
   14001d707:	xor    r9d,r9d
   14001d70a:	mov    edx,0x28f
   14001d70f:	mov    QWORD PTR [rsp+0x20],rax
   14001d714:	call   0x140003150
   14001d719:	lea    rcx,[rbp+0x1a0]
   14001d720:	call   0x140014ce0
   14001d725:	mov    eax,ebx
   14001d727:	mov    DWORD PTR [rsp+0x78],ebx
   14001d72b:	or     r9d,0xffffffff
   14001d72f:	cmp    BYTE PTR [rsp+0x40],bl
   14001d733:	je     0x14001d73f
   14001d735:	mov    eax,0x12c
   14001d73a:	mov    r9d,eax
   14001d73d:	jmp    0x14001d755
   14001d73f:	cmp    QWORD PTR [rsp+0x68],rbx
   14001d744:	je     0x14001d89a
   14001d74a:	mov    r9d,0x10
   14001d750:	mov    eax,0x12c
   14001d755:	mov    rdi,r12
   14001d758:	sub    rdi,r13
   14001d75b:	sar    rdi,0x3
   14001d75f:	test   rdi,rdi
   14001d762:	je     0x14001dafc
   14001d768:	test   r9d,r9d
   14001d76b:	jne    0x14001d777
   14001d76d:	cmp    r9d,0xffffffff
   14001d771:	jne    0x14001dafc
   14001d777:	xor    r8d,r8d
   14001d77a:	mov    rdx,r13
   14001d77d:	mov    ecx,edi
   14001d77f:	call   QWORD PTR [rip+0x4aa03]        # 0x140068188
   14001d785:	mov    ecx,eax
   14001d787:	cmp    rcx,rdi
   14001d78a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d78f:	jae    0x14001cd10
   14001d795:	cdqe   
   14001d797:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   14001d79c:	cmp    QWORD PTR [rip+0x6ccdd],rcx        # 0x14008a480
   14001d7a3:	je     0x14001da2d
   14001d7a9:	cmp    QWORD PTR [rip+0x6ccd8],rcx        # 0x14008a488
   14001d7b0:	je     0x14001da2d
   14001d7b6:	cmp    QWORD PTR [rip+0x6ccab],rcx        # 0x14008a468
   14001d7bd:	je     0x14001db50
   14001d7c3:	cmp    QWORD PTR [rip+0x6cca6],rcx        # 0x14008a470
   14001d7ca:	je     0x14001d982
   14001d7d0:	cmp    QWORD PTR [rip+0x6cca1],rcx        # 0x14008a478
   14001d7d7:	je     0x14001d982
   14001d7dd:	cmp    QWORD PTR [rbp+0x18],rcx
   14001d7e1:	jne    0x14001d929
   14001d7e7:	lea    rax,[rip+0x51512]        # 0x14006ed00
   14001d7ee:	xor    r9d,r9d
   14001d7f1:	lea    rcx,[rip+0x50f78]        # 0x14006e770
   14001d7f8:	mov    QWORD PTR [rsp+0x28],rax
   14001d7fd:	lea    rax,[rip+0x4dc9c]        # 0x14006b4a0
   14001d804:	lea    r8d,[r9+0x2]
   14001d808:	mov    edx,0x2e8
   14001d80d:	mov    QWORD PTR [rsp+0x20],rax
   14001d812:	call   0x140003150
   14001d817:	call   0x140013fc0
   14001d81c:	cmp    QWORD PTR [rip+0x6cf65],rbx        # 0x14008a788
   14001d823:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d828:	mov    edi,0x1
   14001d82d:	je     0x14001cd15
   14001d833:	call   0x140013f60
   14001d838:	test   eax,eax
   14001d83a:	je     0x14001d910
   14001d840:	call   0x14001a460
   14001d845:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d84a:	test   eax,eax
   14001d84c:	je     0x14001cd15
   14001d852:	lea    rcx,[rip+0x6cee7]        # 0x14008a740
   14001d859:	call   0x14001a500
   14001d85e:	mov    rcx,QWORD PTR [rip+0x6cee3]        # 0x14008a748
   14001d865:	mov    DWORD PTR [rsp+0x30],0x43
   14001d86d:	xor    r9d,r9d
   14001d870:	xor    r8d,r8d
   14001d873:	xor    edx,edx
   14001d875:	mov    DWORD PTR [rsp+0x28],ebx
   14001d879:	mov    DWORD PTR [rsp+0x20],ebx
   14001d87d:	call   QWORD PTR [rip+0x4acb5]        # 0x140068538
   14001d883:	mov    rcx,QWORD PTR [rip+0x6cebe]        # 0x14008a748
   14001d88a:	call   QWORD PTR [rip+0x4ac90]        # 0x140068520
   14001d890:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d895:	jmp    0x14001cd15
   14001d89a:	test   eax,eax
   14001d89c:	jne    0x14001d8bb
   14001d89e:	test   esi,esi
   14001d8a0:	je     0x14001d8bb
   14001d8a2:	lea    rcx,[rbp+0x1a0]
   14001d8a9:	call   0x140014ce0
   14001d8ae:	mov    eax,0x12c
   14001d8b3:	mov    r9d,eax
   14001d8b6:	jmp    0x14001d755
   14001d8bb:	mov    eax,DWORD PTR [rsp+0x70]
   14001d8bf:	test   eax,eax
   14001d8c1:	jne    0x14001d8d0
   14001d8c3:	mov    eax,0x12c
   14001d8c8:	mov    r9d,eax
   14001d8cb:	jmp    0x14001d755
   14001d8d0:	test   edi,edi
   14001d8d2:	jne    0x14001d8e1
   14001d8d4:	mov    eax,0x12c
   14001d8d9:	mov    r9d,eax
   14001d8dc:	jmp    0x14001d755
   14001d8e1:	mov    eax,DWORD PTR [rsp+0x7c]
   14001d8e5:	test   eax,eax
   14001d8e7:	jne    0x14001d8f6
   14001d8e9:	mov    eax,0x12c
   14001d8ee:	mov    r9d,eax
   14001d8f1:	jmp    0x14001d755
   14001d8f6:	test   r14d,r14d
   14001d8f9:	jne    0x14001d750
   14001d8ff:	test   r15d,r15d
   14001d902:	mov    eax,0x12c
   14001d907:	cmovne r9d,eax
   14001d90b:	jmp    0x14001d755
   14001d910:	mov    rcx,QWORD PTR [rip+0x6ce31]        # 0x14008a748
   14001d917:	xor    edx,edx
   14001d919:	call   QWORD PTR [rip+0x4ac21]        # 0x140068540
   14001d91f:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d924:	jmp    0x14001cd15
   14001d929:	cmp    QWORD PTR [rbp+0x8],rcx
   14001d92d:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d932:	mov    edi,0x1
   14001d937:	jne    0x14001cd15
   14001d93d:	lea    rax,[rip+0x513d4]        # 0x14006ed18
   14001d944:	lea    r8d,[rdi+0x1]
   14001d948:	lea    rcx,[rip+0x50e21]        # 0x14006e770
   14001d94f:	mov    QWORD PTR [rsp+0x28],rax
   14001d954:	lea    rax,[rip+0x4db45]        # 0x14006b4a0
   14001d95b:	xor    r9d,r9d
   14001d95e:	mov    edx,0x2ff
   14001d963:	mov    QWORD PTR [rsp+0x20],rax
   14001d968:	call   0x140003150
   14001d96d:	lea    rcx,[rbp-0x50]
   14001d971:	mov    edx,edi
   14001d973:	call   0x14000bbd0
   14001d978:	mov    rcx,QWORD PTR [rsp+0x68]
   14001d97d:	jmp    0x14001cd15
   14001d982:	lea    rax,[rip+0x51357]        # 0x14006ece0
   14001d989:	xor    r9d,r9d
   14001d98c:	lea    rcx,[rip+0x50ddd]        # 0x14006e770
   14001d993:	mov    QWORD PTR [rsp+0x28],rax
   14001d998:	lea    rax,[rip+0x4db01]        # 0x14006b4a0
   14001d99f:	lea    r8d,[r9+0x2]
   14001d9a3:	mov    edx,0x2d9
   14001d9a8:	mov    QWORD PTR [rsp+0x20],rax
   14001d9ad:	call   0x140003150
   14001d9b2:	mov    r11,QWORD PTR [rbp+0x578]
   14001d9b9:	movabs rax,0x6bca1af286bca1b
   14001d9c3:	sub    r11,QWORD PTR [rbp+0x570]
   14001d9ca:	imul   r11
   14001d9cd:	sar    rdx,0x3
   14001d9d1:	mov    rax,rdx
   14001d9d4:	shr    rax,0x3f
   14001d9d8:	add    rdx,rax
   14001d9db:	je     0x14001da04
   14001d9dd:	lea    rcx,[rbp+0x330]
   14001d9e4:	call   0x140006de0
   14001d9e9:	mov    rcx,QWORD PTR [rbp+0x5e0]
   14001d9f0:	cmp    DWORD PTR [rcx-0x10],ebx
   14001d9f3:	je     0x14001da04
   14001d9f5:	lea    rcx,[rbp+0x330]
   14001d9fc:	movzx  edx,al
   14001d9ff:	call   0x140008390
   14001da04:	mov    rcx,QWORD PTR [rip+0x6ca65]        # 0x14008a470
   14001da0b:	call   QWORD PTR [rip+0x4a76f]        # 0x140068180
   14001da11:	mov    rcx,QWORD PTR [rip+0x6ca60]        # 0x14008a478
   14001da18:	call   QWORD PTR [rip+0x4a762]        # 0x140068180
   14001da1e:	call   0x14001b0f0
   14001da23:	mov    rcx,QWORD PTR [rsp+0x68]
   14001da28:	jmp    0x14001cd07
   14001da2d:	lea    rax,[rip+0x5127c]        # 0x14006ecb0
   14001da34:	xor    r9d,r9d
   14001da37:	lea    rcx,[rip+0x50d32]        # 0x14006e770
   14001da3e:	mov    QWORD PTR [rsp+0x28],rax
   14001da43:	lea    rax,[rip+0x4da56]        # 0x14006b4a0
   14001da4a:	lea    r8d,[r9+0x2]
   14001da4e:	mov    edx,0x2c4
   14001da53:	mov    QWORD PTR [rsp+0x20],rax
   14001da58:	call   0x140003150
   14001da5d:	mov    rcx,QWORD PTR [rip+0x6ca1c]        # 0x14008a480
   14001da64:	call   QWORD PTR [rip+0x4a716]        # 0x140068180
   14001da6a:	mov    rcx,QWORD PTR [rip+0x6ca17]        # 0x14008a488
   14001da71:	call   QWORD PTR [rip+0x4a709]        # 0x140068180
   14001da77:	call   0x14001aca0
   14001da7c:	mov    esi,eax
   14001da7e:	mov    DWORD PTR [rbp-0x78],eax
   14001da81:	call   0x14001b0f0
   14001da86:	mov    rcx,QWORD PTR [rbp+0x578]
   14001da8d:	mov    r15d,eax
   14001da90:	movabs rax,0x6bca1af286bca1b
   14001da9a:	sub    rcx,QWORD PTR [rbp+0x570]
   14001daa1:	mov    edi,0x1
   14001daa6:	imul   rcx
   14001daa9:	mov    rcx,QWORD PTR [rsp+0x68]
   14001daae:	sar    rdx,0x3
   14001dab2:	mov    rax,rdx
   14001dab5:	shr    rax,0x3f
   14001dab9:	add    rdx,rax
   14001dabc:	je     0x14001cd15
   14001dac2:	lea    rcx,[rbp+0x330]
   14001dac9:	call   0x140006de0
   14001dace:	mov    rcx,QWORD PTR [rbp+0x5e0]
   14001dad5:	cmp    DWORD PTR [rcx-0x10],ebx
   14001dad8:	mov    rcx,QWORD PTR [rsp+0x68]
   14001dadd:	je     0x14001cd15
   14001dae3:	lea    rcx,[rbp+0x330]
   14001daea:	movzx  edx,al
   14001daed:	call   0x140008390
   14001daf2:	mov    rcx,QWORD PTR [rsp+0x68]
   14001daf7:	jmp    0x14001cd15
   14001dafc:	cmp    DWORD PTR [rsp+0x74],ebx
   14001db00:	mov    ecx,eax
   14001db02:	mov    edi,0x1
   14001db07:	cmovne ecx,edi
   14001db0a:	call   QWORD PTR [rip+0x4a610]        # 0x140068120
   14001db10:	mov    rcx,QWORD PTR [rsp+0x68]
   14001db15:	jmp    0x14001cd15
   14001db1a:	lea    rdx,[rbp+0x8]
   14001db1e:	lea    rcx,[rbp+0x228]
   14001db25:	mov    QWORD PTR [rbp+0x8],rbx
   14001db29:	call   0x140032fd4
   14001db2e:	lea    r11,[rip+0x4ad5b]        # 0x140068890
   14001db35:	lea    rdx,[rip+0x658e4]        # 0x140083420
   14001db3c:	lea    rcx,[rbp+0x228]
   14001db43:	mov    QWORD PTR [rbp+0x228],r11
   14001db4a:	call   0x140036358
   14001db4f:	int3   
   14001db50:	xor    r9d,r9d
   14001db53:	lea    rax,[rip+0x51176]        # 0x14006ecd0
   14001db5a:	lea    rdi,[rip+0x4d93f]        # 0x14006b4a0
   14001db61:	mov    QWORD PTR [rsp+0x28],rax
   14001db66:	lea    rcx,[rip+0x50c03]        # 0x14006e770
   14001db6d:	lea    r8d,[r9+0x2]
   14001db71:	mov    edx,0x2d3
   14001db76:	mov    QWORD PTR [rsp+0x20],rdi
   14001db7b:	call   0x140003150
   14001db80:	cmp    r13,r12
   14001db83:	je     0x14001db93
   14001db85:	xor    r8d,r8d
   14001db88:	mov    rdx,r12
   14001db8b:	mov    rcx,r13
   14001db8e:	call   0x140033260
   14001db93:	lea    rcx,[rbp+0x650]
   14001db9a:	call   0x140016320
   14001db9f:	mov    rcx,QWORD PTR [rbp+0x6a8]
   14001dba6:	test   rcx,rcx
   14001dba9:	je     0x14001dbb7
   14001dbab:	call   0x14001e810
   14001dbb0:	mov    QWORD PTR [rbp+0x6a8],rbx
   14001dbb7:	mov    rcx,QWORD PTR [rbp-0x28]
   14001dbbb:	test   rcx,rcx
   14001dbbe:	je     0x14001dbca
   14001dbc0:	call   QWORD PTR [rip+0x4a7d2]        # 0x140068398
   14001dbc6:	mov    QWORD PTR [rbp-0x28],rbx
   14001dbca:	mov    rcx,QWORD PTR [rbp-0x30]
   14001dbce:	test   rcx,rcx
   14001dbd1:	je     0x14001dbdd
   14001dbd3:	call   QWORD PTR [rip+0x4a46f]        # 0x140068048
   14001dbd9:	mov    QWORD PTR [rbp-0x30],rbx
   14001dbdd:	mov    rcx,QWORD PTR [rbp-0x48]
   14001dbe1:	test   rcx,rcx
   14001dbe4:	je     0x14001dbef
   14001dbe6:	call   0x14001e810
   14001dbeb:	mov    QWORD PTR [rbp-0x48],rbx
   14001dbef:	mov    rcx,QWORD PTR [rbp-0x40]
   14001dbf3:	test   rcx,rcx
   14001dbf6:	je     0x14001dc01
   14001dbf8:	call   0x14001e810
   14001dbfd:	mov    QWORD PTR [rbp-0x40],rbx
   14001dc01:	lea    rcx,[rbp+0x6b0]
   14001dc08:	mov    BYTE PTR [rbp-0x38],bl
   14001dc0b:	call   0x14000add0
   14001dc10:	xor    r9d,r9d
   14001dc13:	lea    r11,[rip+0x51116]        # 0x14006ed30
   14001dc1a:	mov    QWORD PTR [rsp+0x28],r11
   14001dc1f:	lea    rcx,[rip+0x50b4a]        # 0x14006e770
   14001dc26:	lea    r8d,[r9+0x2]
   14001dc2a:	mov    edx,0x312
   14001dc2f:	mov    QWORD PTR [rsp+0x20],rdi
   14001dc34:	call   0x140003150
   14001dc39:	lea    rcx,[rbp+0x1a0]
   14001dc40:	call   0x140014ce0
   14001dc45:	mov    rcx,QWORD PTR [rip+0x6c864]        # 0x14008a4b0
   14001dc4c:	call   QWORD PTR [rip+0x4a746]        # 0x140068398
   14001dc52:	mov    rcx,QWORD PTR [rip+0x6c84f]        # 0x14008a4a8
   14001dc59:	call   QWORD PTR [rip+0x4a3e9]        # 0x140068048
   14001dc5f:	mov    rcx,QWORD PTR [rip+0x6c862]        # 0x14008a4c8
   14001dc66:	test   rcx,rcx
   14001dc69:	je     0x14001dc80
   14001dc6b:	mov    rax,QWORD PTR [rip+0x6c96e]        # 0x14008a5e0
   14001dc72:	test   rax,rax
   14001dc75:	je     0x14001dc80
   14001dc77:	call   rax
   14001dc79:	mov    QWORD PTR [rip+0x6c848],rbx        # 0x14008a4c8
   14001dc80:	mov    rcx,QWORD PTR [rip+0x6c839]        # 0x14008a4c0
   14001dc87:	test   rcx,rcx
   14001dc8a:	je     0x14001dc99
   14001dc8c:	call   QWORD PTR [rip+0x4a4ae]        # 0x140068140
   14001dc92:	mov    QWORD PTR [rip+0x6c827],rbx        # 0x14008a4c0
   14001dc99:	mov    rcx,QWORD PTR [rip+0x6caa8]        # 0x14008a748
   14001dca0:	mov    QWORD PTR [rip+0x6c809],rbx        # 0x14008a4b0
   14001dca7:	mov    QWORD PTR [rip+0x6c7fa],rbx        # 0x14008a4a8
   14001dcae:	test   rcx,rcx
   14001dcb1:	je     0x14001dcb9
   14001dcb3:	call   QWORD PTR [rip+0x4a8ff]        # 0x1400685b8
   14001dcb9:	mov    rcx,QWORD PTR [rbp+0x278]
   14001dcc0:	test   rcx,rcx
   14001dcc3:	je     0x14001dccb
   14001dcc5:	call   QWORD PTR [rip+0x4a8ed]        # 0x1400685b8
   14001dccb:	mov    rcx,QWORD PTR [rbp+0x338]
   14001dcd2:	test   rcx,rcx
   14001dcd5:	je     0x14001dcdd
   14001dcd7:	call   QWORD PTR [rip+0x4a8db]        # 0x1400685b8
   14001dcdd:	xor    r9d,r9d
   14001dce0:	lea    rax,[rip+0x51059]        # 0x14006ed40
   14001dce7:	lea    rcx,[rip+0x50a82]        # 0x14006e770
   14001dcee:	mov    QWORD PTR [rsp+0x28],rax
   14001dcf3:	lea    r8d,[r9+0x2]
   14001dcf7:	mov    edx,0x325
   14001dcfc:	mov    QWORD PTR [rsp+0x20],rdi
   14001dd01:	call   0x140003150
   14001dd06:	test   r13,r13
   14001dd09:	je     0x14001dd13
   14001dd0b:	mov    rcx,r13
   14001dd0e:	call   0x1400330c0
   14001dd13:	lea    rax,[rip+0x5021e]        # 0x14006df38
   14001dd1a:	lea    rcx,[rbp+0x830]
   14001dd21:	mov    edx,0x1
   14001dd26:	mov    QWORD PTR [rbp+0x830],rax
   14001dd2d:	lea    rax,[rip+0x50244]        # 0x14006df78
   14001dd34:	mov    QWORD PTR [rbp+0x850],rax
   14001dd3b:	call   0x140017590
   14001dd40:	lea    r11,[rip+0x4e351]        # 0x14006c098
   14001dd47:	lea    rcx,[rbp+0x830]
   14001dd4e:	mov    edx,0x3e8
   14001dd53:	mov    QWORD PTR [rbp+0x830],r11
   14001dd5a:	call   0x14000c640
   14001dd5f:	mov    rcx,QWORD PTR [rbp+0x138]
   14001dd66:	test   rcx,rcx
   14001dd69:	je     0x14001dd78
   14001dd6b:	call   QWORD PTR [rip+0x4a36f]        # 0x1400680e0
   14001dd71:	mov    QWORD PTR [rbp+0x138],rbx
   14001dd78:	mov    rcx,QWORD PTR [rbp+0x140]
   14001dd7f:	test   rcx,rcx
   14001dd82:	je     0x14001dd91
   14001dd84:	call   QWORD PTR [rip+0x4a60e]        # 0x140068398
   14001dd8a:	mov    QWORD PTR [rbp+0x140],rbx
   14001dd91:	mov    rcx,QWORD PTR [rbp+0xd8]
   14001dd98:	mov    DWORD PTR [rbp+0x130],ebx
   14001dd9e:	test   rcx,rcx
   14001dda1:	je     0x14001ddb0
   14001dda3:	call   QWORD PTR [rip+0x4a337]        # 0x1400680e0
   14001dda9:	mov    QWORD PTR [rbp+0xd8],rbx
   14001ddb0:	mov    rcx,QWORD PTR [rbp+0xe0]
   14001ddb7:	test   rcx,rcx
   14001ddba:	je     0x14001ddc9
   14001ddbc:	call   QWORD PTR [rip+0x4a5d6]        # 0x140068398
   14001ddc2:	mov    QWORD PTR [rbp+0xe0],rbx
   14001ddc9:	mov    rcx,QWORD PTR [rbp+0x58]
   14001ddcd:	mov    DWORD PTR [rbp+0xd0],ebx
   14001ddd3:	test   rcx,rcx
   14001ddd6:	je     0x14001dde2
   14001ddd8:	call   QWORD PTR [rip+0x4a302]        # 0x1400680e0
   14001ddde:	mov    QWORD PTR [rbp+0x58],rbx
   14001dde2:	mov    rcx,QWORD PTR [rbp+0x60]
   14001dde6:	test   rcx,rcx
   14001dde9:	je     0x14001ddf5
   14001ddeb:	call   QWORD PTR [rip+0x4a5a7]        # 0x140068398
   14001ddf1:	mov    QWORD PTR [rbp+0x60],rbx
   14001ddf5:	lea    rax,[rip+0x4f8fc]        # 0x14006d6f8
   14001ddfc:	lea    rcx,[rbp+0x1a0]
   14001de03:	mov    DWORD PTR [rbp+0x50],ebx
   14001de06:	mov    QWORD PTR [rbp+0x1a0],rax
   14001de0d:	call   0x140014ce0
   14001de12:	mov    rcx,QWORD PTR [rbp+0x1a8]
   14001de19:	lea    r11,[rip+0x4f388]        # 0x14006d1a8
   14001de20:	mov    QWORD PTR [rbp+0x1a0],r11
   14001de27:	test   rcx,rcx
   14001de2a:	je     0x14001de39
   14001de2c:	call   QWORD PTR [rip+0x4a786]        # 0x1400685b8
   14001de32:	mov    QWORD PTR [rbp+0x1a8],rbx
   14001de39:	movzx  ecx,WORD PTR [rbp+0x1cc]
   14001de40:	mov    rdx,QWORD PTR [rbp+0x1c0]
   14001de47:	call   QWORD PTR [rip+0x4a793]        # 0x1400685e0
   14001de4d:	mov    rcx,QWORD PTR [rbp-0x28]
   14001de51:	lea    r11,[rip+0x4e110]        # 0x14006bf68
   14001de58:	mov    QWORD PTR [rbp-0x50],r11
   14001de5c:	test   rcx,rcx
   14001de5f:	je     0x14001de6b
   14001de61:	call   QWORD PTR [rip+0x4a531]        # 0x140068398
   14001de67:	mov    QWORD PTR [rbp-0x28],rbx
   14001de6b:	mov    rcx,QWORD PTR [rbp-0x30]
   14001de6f:	test   rcx,rcx
   14001de72:	je     0x14001de7e
   14001de74:	call   QWORD PTR [rip+0x4a1ce]        # 0x140068048
   14001de7a:	mov    QWORD PTR [rbp-0x30],rbx
   14001de7e:	mov    rcx,QWORD PTR [rbp-0x48]
   14001de82:	test   rcx,rcx
   14001de85:	je     0x14001de90
   14001de87:	call   0x14001e810
   14001de8c:	mov    QWORD PTR [rbp-0x48],rbx
   14001de90:	mov    rcx,QWORD PTR [rbp-0x40]
   14001de94:	test   rcx,rcx
   14001de97:	je     0x14001dea2
   14001de99:	call   0x14001e810
   14001de9e:	mov    QWORD PTR [rbp-0x40],rbx
   14001dea2:	lea    rax,[rip+0x4deb7]        # 0x14006bd60
   14001dea9:	lea    rcx,[rbp+0x650]
   14001deb0:	mov    BYTE PTR [rbp-0x38],bl
   14001deb3:	mov    QWORD PTR [rbp+0x650],rax
   14001deba:	call   0x140016320
   14001debf:	mov    rcx,QWORD PTR [rbp+0x6a8]
   14001dec6:	test   rcx,rcx
   14001dec9:	je     0x14001ded7
   14001decb:	call   0x14001e810
   14001ded0:	mov    QWORD PTR [rbp+0x6a8],rbx
   14001ded7:	mov    rcx,QWORD PTR [rbp+0x670]
   14001dede:	lea    rdi,[rip+0x4fadb]        # 0x14006d9c0
   14001dee5:	mov    QWORD PTR [rbp+0x650],rdi
   14001deec:	test   rcx,rcx
   14001deef:	je     0x14001defd
   14001def1:	call   0x1400330c0
   14001def6:	mov    QWORD PTR [rbp+0x670],rbx
   14001defd:	mov    rcx,QWORD PTR [rbp+0x678]
   14001df04:	test   rcx,rcx
   14001df07:	je     0x14001df15
   14001df09:	call   0x1400330c0
   14001df0e:	mov    QWORD PTR [rbp+0x678],rbx
   14001df15:	mov    rcx,QWORD PTR [rbp+0x690]
   14001df1c:	test   rcx,rcx
   14001df1f:	je     0x14001df27
   14001df21:	mov    rax,QWORD PTR [rcx]
   14001df24:	call   QWORD PTR [rax+0x10]
   14001df27:	mov    rcx,QWORD PTR [rbp+0x688]
   14001df2e:	test   rcx,rcx
   14001df31:	je     0x14001df39
   14001df33:	mov    rax,QWORD PTR [rcx]
   14001df36:	call   QWORD PTR [rax+0x10]
   14001df39:	mov    rcx,QWORD PTR [rbp+0x680]
   14001df40:	test   rcx,rcx
   14001df43:	je     0x14001df4b
   14001df45:	mov    rax,QWORD PTR [rcx]
   14001df48:	call   QWORD PTR [rax+0x10]
   14001df4b:	lea    rax,[rip+0x4de3e]        # 0x14006bd90
   14001df52:	lea    rcx,[rbp+0x6b0]
   14001df59:	mov    QWORD PTR [rbp+0x6b0],rax
   14001df60:	call   0x14000add0
   14001df65:	mov    rcx,QWORD PTR [rbp+0x6d0]
   14001df6c:	mov    QWORD PTR [rbp+0x6b0],rdi
   14001df73:	test   rcx,rcx
   14001df76:	je     0x14001df84
   14001df78:	call   0x1400330c0
   14001df7d:	mov    QWORD PTR [rbp+0x6d0],rbx
   14001df84:	mov    rcx,QWORD PTR [rbp+0x6d8]
   14001df8b:	test   rcx,rcx
   14001df8e:	je     0x14001df9c
   14001df90:	call   0x1400330c0
   14001df95:	mov    QWORD PTR [rbp+0x6d8],rbx
   14001df9c:	mov    rcx,QWORD PTR [rbp+0x6f0]
   14001dfa3:	test   rcx,rcx
   14001dfa6:	je     0x14001dfae
   14001dfa8:	mov    rax,QWORD PTR [rcx]
   14001dfab:	call   QWORD PTR [rax+0x10]
   14001dfae:	mov    rcx,QWORD PTR [rbp+0x6e8]
   14001dfb5:	test   rcx,rcx
   14001dfb8:	je     0x14001dfc0
   14001dfba:	mov    rax,QWORD PTR [rcx]
   14001dfbd:	call   QWORD PTR [rax+0x10]
   14001dfc0:	mov    rcx,QWORD PTR [rbp+0x6e0]
   14001dfc7:	test   rcx,rcx
   14001dfca:	je     0x14001dfd2
   14001dfcc:	mov    rax,QWORD PTR [rcx]
   14001dfcf:	call   QWORD PTR [rax+0x10]
   14001dfd2:	mov    rdx,QWORD PTR [rbp+0xb0]
   14001dfd9:	add    rdx,0xffffffffffffffe8
   14001dfdd:	or     eax,0xffffffff
   14001dfe0:	lock xadd DWORD PTR [rdx+0x10],eax
   14001dfe5:	dec    eax
   14001dfe7:	test   eax,eax
   14001dfe9:	jg     0x14001dff4
   14001dfeb:	mov    rcx,QWORD PTR [rdx]
   14001dfee:	mov    rax,QWORD PTR [rcx]
   14001dff1:	call   QWORD PTR [rax+0x8]
   14001dff4:	lea    rcx,[rbp+0x330]
   14001dffb:	call   0x140006480
   14001e000:	lea    rcx,[rbp+0x270]
   14001e007:	call   0x140018ee0
   14001e00c:	mov    rcx,QWORD PTR [rip+0x6c455]        # 0x14008a468
   14001e013:	call   QWORD PTR [rip+0x4a37f]        # 0x140068398
   14001e019:	mov    rcx,QWORD PTR [rip+0x6c450]        # 0x14008a470
   14001e020:	call   QWORD PTR [rip+0x4a372]        # 0x140068398
   14001e026:	mov    rcx,QWORD PTR [rip+0x6c44b]        # 0x14008a478
   14001e02d:	call   QWORD PTR [rip+0x4a365]        # 0x140068398
   14001e033:	mov    rcx,QWORD PTR [rip+0x6c446]        # 0x14008a480
   14001e03a:	call   QWORD PTR [rip+0x4a358]        # 0x140068398
   14001e040:	mov    rcx,QWORD PTR [rip+0x6c441]        # 0x14008a488
   14001e047:	call   QWORD PTR [rip+0x4a34b]        # 0x140068398
   14001e04d:	call   QWORD PTR [rip+0x4a635]        # 0x140068688
   14001e053:	xor    eax,eax
   14001e055:	mov    rcx,QWORD PTR [rbp+0x1120]
   14001e05c:	xor    rcx,rsp
   14001e05f:	call   0x140032f00
   14001e064:	lea    r11,[rsp+0x1230]
   14001e06c:	mov    rbx,QWORD PTR [r11+0x30]
   14001e070:	mov    rsi,QWORD PTR [r11+0x38]
   14001e074:	mov    rdi,QWORD PTR [r11+0x40]
   14001e078:	mov    rsp,r11
   14001e07b:	pop    r15
   14001e07d:	pop    r14
   14001e07f:	pop    r13
   14001e081:	pop    r12
   14001e083:	pop    rbp
   14001e084:	ret    
   14001e085:	int3   
   14001e086:	int3   
   14001e087:	int3   
   14001e088:	int3   
   14001e089:	int3   
   14001e08a:	int3   
   14001e08b:	int3   
   14001e08c:	int3   
   14001e08d:	int3   
   14001e08e:	int3   
   14001e08f:	int3   
   14001e090:	sub    rsp,0x38
   14001e094:	lea    rcx,[rip+0x6c6cd]        # 0x14008a768
   14001e09b:	xor    r8d,r8d
   14001e09e:	xor    edx,edx
   14001e0a0:	call   0x140018b60
   14001e0a5:	test   eax,eax
   14001e0a7:	jne    0x14001e0b9
   14001e0a9:	lea    ecx,[rax+0xe]
   14001e0ac:	call   QWORD PTR [rip+0x4a0b6]        # 0x140068168
   14001e0b2:	xor    eax,eax
   14001e0b4:	add    rsp,0x38
   14001e0b8:	ret    
   14001e0b9:	lea    rax,[rip+0x6c680]        # 0x14008a740
   14001e0c0:	mov    QWORD PTR [rip+0x6c689],rax        # 0x14008a750
   14001e0c7:	call   QWORD PTR [rip+0x4a0ab]        # 0x140068178
   14001e0cd:	lea    rcx,[rip+0x6c244]        # 0x14008a318
   14001e0d4:	mov    DWORD PTR [rip+0x6c67e],eax        # 0x14008a758
   14001e0da:	call   QWORD PTR [rip+0x4a090]        # 0x140068170
   14001e0e0:	mov    r11,QWORD PTR [rip+0x6c259]        # 0x14008a340
   14001e0e7:	lea    rax,[rip+0x6c662]        # 0x14008a750
   14001e0ee:	lea    rcx,[rip+0x6c223]        # 0x14008a318
   14001e0f5:	mov    QWORD PTR [rip+0x6c664],r11        # 0x14008a760
   14001e0fc:	mov    QWORD PTR [rip+0x6c23d],rax        # 0x14008a340
   14001e103:	call   QWORD PTR [rip+0x4a047]        # 0x140068150
   14001e109:	mov    rcx,QWORD PTR [rip+0x6c1b0]        # 0x14008a2c0
   14001e110:	xor    r8d,r8d
   14001e113:	lea    r9,[rip+0x26]        # 0x14001e140
   14001e11a:	mov    QWORD PTR [rsp+0x20],0x0
   14001e123:	lea    edx,[r8+0x65]
   14001e127:	call   QWORD PTR [rip+0x4a49b]        # 0x1400685c8
   14001e12d:	add    rsp,0x38
   14001e131:	ret    
   14001e132:	int3   
   14001e133:	int3   
   14001e134:	int3   
   14001e135:	int3   
   14001e136:	int3   
   14001e137:	int3   
   14001e138:	int3   
   14001e139:	int3   
   14001e13a:	int3   
   14001e13b:	int3   
   14001e13c:	int3   
   14001e13d:	int3   
   14001e13e:	int3   
   14001e13f:	int3   
   14001e140:	mov    QWORD PTR [rsp+0x10],rbp
   14001e145:	mov    QWORD PTR [rsp+0x18],rsi
   14001e14a:	push   rdi
   14001e14b:	push   r12
   14001e14d:	push   r13
   14001e14f:	sub    rsp,0x20
   14001e153:	mov    rbp,r9
   14001e156:	mov    r12,r8
   14001e159:	mov    r13d,edx
   14001e15c:	mov    rsi,rcx
   14001e15f:	call   0x140018ae0
   14001e164:	mov    rdi,rax
   14001e167:	test   rax,rax
   14001e16a:	je     0x14001e1b5
   14001e16c:	mov    QWORD PTR [rax+0x8],rsi
   14001e170:	mov    rax,QWORD PTR [rax]
   14001e173:	mov    rcx,rdi
   14001e176:	mov    QWORD PTR [rsp+0x40],rbx
   14001e17b:	call   QWORD PTR [rax+0x10]
   14001e17e:	lea    rcx,[rdi+0x28]
   14001e182:	mov    rdx,rax
   14001e185:	mov    r8,rdi
   14001e188:	call   0x140018b60
   14001e18d:	mov    rbx,QWORD PTR [rdi+0x28]
   14001e191:	mov    edx,0x8
   14001e196:	mov    r8,rbx
   14001e199:	mov    rcx,rsi
   14001e19c:	call   QWORD PTR [rip+0x4a49e]        # 0x140068640
   14001e1a2:	mov    r9,rbp
   14001e1a5:	mov    r8,r12
   14001e1a8:	mov    edx,r13d
   14001e1ab:	mov    rcx,rsi
   14001e1ae:	call   rbx
   14001e1b0:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e1b5:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e1ba:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e1bf:	add    rsp,0x20
   14001e1c3:	pop    r13
   14001e1c5:	pop    r12
   14001e1c7:	pop    rdi
   14001e1c8:	ret    
   14001e1c9:	int3   
   14001e1ca:	int3   
   14001e1cb:	int3   
   14001e1cc:	int3   
   14001e1cd:	int3   
   14001e1ce:	int3   
   14001e1cf:	int3   
   14001e1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e1d5:	push   rbp
   14001e1d6:	push   rsi
   14001e1d7:	push   rdi
   14001e1d8:	push   r12
   14001e1da:	push   r13
   14001e1dc:	sub    rsp,0x70
   14001e1e0:	mov    rax,QWORD PTR [rip+0x68571]        # 0x140086758
   14001e1e7:	mov    r12,rcx
   14001e1ea:	lea    rcx,[rip+0x68567]        # 0x140086758
   14001e1f1:	xor    r13d,r13d
   14001e1f4:	mov    ebx,r13d
   14001e1f7:	call   QWORD PTR [rax+0x18]
   14001e1fa:	or     rbp,0xffffffffffffffff
   14001e1fe:	lea    rdi,[rax+0x18]
   14001e202:	mov    QWORD PTR [rsp+0x50],rdi
   14001e207:	test   r12,r12
   14001e20a:	je     0x14001e249
   14001e20c:	test   r12,0xffffffffffff0000
   14001e213:	jne    0x14001e237
   14001e215:	movzx  esi,r12w
   14001e219:	mov    ecx,esi
   14001e21b:	call   0x14000c810
   14001e220:	test   rax,rax
   14001e223:	je     0x14001e261
   14001e225:	lea    rcx,[rsp+0x50]
   14001e22a:	mov    r8d,esi
   14001e22d:	mov    rdx,rax
   14001e230:	call   0x14000c9d0
   14001e235:	jmp    0x14001e25c
   14001e237:	xor    eax,eax
   14001e239:	mov    rcx,rbp
   14001e23c:	mov    rdi,r12
   14001e23f:	repnz scas al,BYTE PTR es:[rdi]
   14001e241:	not    rcx
   14001e244:	dec    rcx
   14001e247:	jmp    0x14001e24c
   14001e249:	mov    ecx,r13d
   14001e24c:	mov    r8d,ecx
   14001e24f:	lea    rcx,[rsp+0x50]
   14001e254:	mov    rdx,r12
   14001e257:	call   0x140008d10
   14001e25c:	mov    rdi,QWORD PTR [rsp+0x50]
   14001e261:	cmp    DWORD PTR [rdi-0x10],ebx
   14001e264:	jle    0x14001e315
   14001e26a:	mov    edx,0x3b
   14001e26f:	mov    rcx,rdi
   14001e272:	call   0x140035448
   14001e277:	test   rax,rax
   14001e27a:	je     0x14001e315
   14001e280:	sub    eax,edi
   14001e282:	js     0x14001e315
   14001e288:	lea    rdx,[rsp+0x60]
   14001e28d:	lea    rcx,[rsp+0x50]
   14001e292:	mov    r8d,eax
   14001e295:	call   0x140017360
   14001e29a:	add    rdi,0xffffffffffffffe8
   14001e29e:	mov    rdx,QWORD PTR [rax]
   14001e2a1:	lea    rcx,[rdx-0x18]
   14001e2a5:	cmp    rcx,rdi
   14001e2a8:	je     0x14001e2f1
   14001e2aa:	cmp    DWORD PTR [rdi+0x10],ebx
   14001e2ad:	jl     0x14001e2e3
   14001e2af:	mov    rax,QWORD PTR [rdi]
   14001e2b2:	cmp    QWORD PTR [rcx],rax
   14001e2b5:	jne    0x14001e2e3
   14001e2b7:	call   0x140008e50
   14001e2bc:	mov    ecx,ebp
   14001e2be:	mov    rsi,rax
   14001e2c1:	lock xadd DWORD PTR [rdi+0x10],ecx
   14001e2c6:	dec    ecx
   14001e2c8:	test   ecx,ecx
   14001e2ca:	jg     0x14001e2d8
   14001e2cc:	mov    rcx,QWORD PTR [rdi]
   14001e2cf:	mov    rdx,rdi
   14001e2d2:	mov    rax,QWORD PTR [rcx]
   14001e2d5:	call   QWORD PTR [rax+0x8]
   14001e2d8:	lea    rax,[rsi+0x18]
   14001e2dc:	mov    QWORD PTR [rsp+0x50],rax
   14001e2e1:	jmp    0x14001e2f1
   14001e2e3:	mov    r8d,DWORD PTR [rdx-0x10]
   14001e2e7:	lea    rcx,[rsp+0x50]
   14001e2ec:	call   0x140008d10
   14001e2f1:	mov    rdx,QWORD PTR [rsp+0x60]
   14001e2f6:	mov    eax,ebp
   14001e2f8:	add    rdx,0xffffffffffffffe8
   14001e2fc:	lock xadd DWORD PTR [rdx+0x10],eax
   14001e301:	dec    eax
   14001e303:	test   eax,eax
   14001e305:	jg     0x14001e310
   14001e307:	mov    rcx,QWORD PTR [rdx]
   14001e30a:	mov    rax,QWORD PTR [rcx]
   14001e30d:	call   QWORD PTR [rax+0x8]
   14001e310:	mov    rdi,QWORD PTR [rsp+0x50]
   14001e315:	test   r12,r12
   14001e318:	je     0x14001e6bd
   14001e31e:	lea    rdx,[rip+0x4d81b]        # 0x14006bb40
   14001e325:	mov    rcx,rdi
   14001e328:	call   0x140034820
   14001e32d:	test   eax,eax
   14001e32f:	je     0x14001e6bd
   14001e335:	lea    rdx,[rip+0x4d544]        # 0x14006b880
   14001e33c:	mov    rcx,rdi
   14001e33f:	call   0x140034820
   14001e344:	test   eax,eax
   14001e346:	je     0x14001e6bd
   14001e34c:	lea    rdx,[rip+0x50a0d]        # 0x14006ed60
   14001e353:	mov    rcx,rdi
   14001e356:	call   0x140034820
   14001e35b:	test   eax,eax
   14001e35d:	jne    0x14001e37c
   14001e35f:	mov    ecx,0xfb8
   14001e364:	call   0x1400331a0
   14001e369:	test   rax,rax
   14001e36c:	je     0x14001e6d9
   14001e372:	mov    edx,0x1
   14001e377:	jmp    0x14001e6ce
   14001e37c:	lea    rdx,[rip+0x4e235]        # 0x14006c5b8
   14001e383:	mov    rcx,rdi
   14001e386:	call   0x140034820
   14001e38b:	test   eax,eax
   14001e38d:	jne    0x14001e3ac
   14001e38f:	mov    ecx,0xfb8
   14001e394:	call   0x1400331a0
   14001e399:	test   rax,rax
   14001e39c:	je     0x14001e6d9
   14001e3a2:	mov    edx,0x2
   14001e3a7:	jmp    0x14001e6ce
   14001e3ac:	lea    rdx,[rip+0x509bd]        # 0x14006ed70
   14001e3b3:	mov    rcx,rdi
   14001e3b6:	call   0x140034820
   14001e3bb:	test   eax,eax
   14001e3bd:	jne    0x14001e3dc
   14001e3bf:	mov    ecx,0xfb8
   14001e3c4:	call   0x1400331a0
   14001e3c9:	test   rax,rax
   14001e3cc:	je     0x14001e6d9
   14001e3d2:	mov    edx,0x3
   14001e3d7:	jmp    0x14001e6ce
   14001e3dc:	lea    rdx,[rip+0x4d76d]        # 0x14006bb50
   14001e3e3:	mov    rcx,rdi
   14001e3e6:	call   0x140034820
   14001e3eb:	test   eax,eax
   14001e3ed:	je     0x14001e6a7
   14001e3f3:	lea    rdx,[rip+0x4d4c6]        # 0x14006b8c0
   14001e3fa:	mov    rcx,rdi
   14001e3fd:	call   0x140034820
   14001e402:	test   eax,eax
   14001e404:	je     0x14001e6a7
   14001e40a:	lea    rdx,[rip+0x4d4bf]        # 0x14006b8d0
   14001e411:	mov    rcx,rdi
   14001e414:	call   0x140034820
   14001e419:	test   eax,eax
   14001e41b:	jne    0x14001e43a
   14001e41d:	mov    ecx,0xfb8
   14001e422:	call   0x1400331a0
   14001e427:	test   rax,rax
   14001e42a:	je     0x14001e6d9
   14001e430:	mov    edx,0xd
   14001e435:	jmp    0x14001e6ce
   14001e43a:	lea    rdx,[rip+0x4debf]        # 0x14006c300
   14001e441:	mov    rcx,rdi
   14001e444:	call   0x140034820
   14001e449:	test   eax,eax
   14001e44b:	jne    0x14001e46a
   14001e44d:	mov    ecx,0xfb8
   14001e452:	call   0x1400331a0
   14001e457:	test   rax,rax
   14001e45a:	je     0x14001e6d9
   14001e460:	mov    edx,0x5
   14001e465:	jmp    0x14001e6ce
   14001e46a:	lea    rdx,[rip+0x4d41f]        # 0x14006b890
   14001e471:	mov    rcx,rdi
   14001e474:	call   0x140034820
   14001e479:	test   eax,eax
   14001e47b:	jne    0x14001e49a
   14001e47d:	mov    ecx,0xfb8
   14001e482:	call   0x1400331a0
   14001e487:	test   rax,rax
   14001e48a:	je     0x14001e6d9
   14001e490:	mov    edx,0x6
   14001e495:	jmp    0x14001e6ce
   14001e49a:	lea    rdx,[rip+0x4d3ff]        # 0x14006b8a0
   14001e4a1:	mov    rcx,rdi
   14001e4a4:	call   0x140034820
   14001e4a9:	test   eax,eax
   14001e4ab:	jne    0x14001e4ca
   14001e4ad:	mov    ecx,0xfb8
   14001e4b2:	call   0x1400331a0
   14001e4b7:	test   rax,rax
   14001e4ba:	je     0x14001e6d9
   14001e4c0:	mov    edx,0x8
   14001e4c5:	jmp    0x14001e6ce
   14001e4ca:	lea    rdx,[rip+0x4d3df]        # 0x14006b8b0
   14001e4d1:	mov    rcx,rdi
   14001e4d4:	call   0x140034820
   14001e4d9:	test   eax,eax
   14001e4db:	jne    0x14001e4fa
   14001e4dd:	mov    ecx,0xfb8
   14001e4e2:	call   0x1400331a0
   14001e4e7:	test   rax,rax
   14001e4ea:	je     0x14001e6d9
   14001e4f0:	mov    edx,0x9
   14001e4f5:	jmp    0x14001e6ce
   14001e4fa:	lea    rdx,[rip+0x50887]        # 0x14006ed88
   14001e501:	mov    rcx,rdi
   14001e504:	call   0x140034820
   14001e509:	test   eax,eax
   14001e50b:	jne    0x14001e52a
   14001e50d:	mov    ecx,0xfb8
   14001e512:	call   0x1400331a0
   14001e517:	test   rax,rax
   14001e51a:	je     0x14001e6d9
   14001e520:	mov    edx,0xa
   14001e525:	jmp    0x14001e6ce
   14001e52a:	lea    rdx,[rip+0x4dbb7]        # 0x14006c0e8
   14001e531:	mov    rcx,rdi
   14001e534:	call   0x140034820
   14001e539:	test   eax,eax
   14001e53b:	jne    0x14001e55a
   14001e53d:	mov    ecx,0xfb8
   14001e542:	call   0x1400331a0
   14001e547:	test   rax,rax
   14001e54a:	je     0x14001e6d9
   14001e550:	mov    edx,0xb
   14001e555:	jmp    0x14001e6ce
   14001e55a:	lea    rdx,[rip+0x4dd67]        # 0x14006c2c8
   14001e561:	mov    rcx,rdi
   14001e564:	call   0x140034820
   14001e569:	test   eax,eax
   14001e56b:	jne    0x14001e58a
   14001e56d:	mov    ecx,0xfb8
   14001e572:	call   0x1400331a0
   14001e577:	test   rax,rax
   14001e57a:	je     0x14001e6d9
   14001e580:	mov    edx,0x7
   14001e585:	jmp    0x14001e6ce
   14001e58a:	lea    rdx,[rip+0x4dbdf]        # 0x14006c170
   14001e591:	mov    rcx,rdi
   14001e594:	call   0x140034820
   14001e599:	test   eax,eax
   14001e59b:	je     0x14001e691
   14001e5a1:	lea    rdx,[rip+0x4d338]        # 0x14006b8e0
   14001e5a8:	mov    rcx,rdi
   14001e5ab:	call   0x140034820
   14001e5b0:	test   eax,eax
   14001e5b2:	je     0x14001e691
   14001e5b8:	lea    rdx,[rip+0x4d339]        # 0x14006b8f8
   14001e5bf:	mov    rcx,rdi
   14001e5c2:	call   0x140034820
   14001e5c7:	test   eax,eax
   14001e5c9:	jne    0x14001e5e8
   14001e5cb:	mov    ecx,0xfb8
   14001e5d0:	call   0x1400331a0
   14001e5d5:	test   rax,rax
   14001e5d8:	je     0x14001e6d9
   14001e5de:	mov    edx,0xe
   14001e5e3:	jmp    0x14001e6ce
   14001e5e8:	lea    rdx,[rip+0x507a9]        # 0x14006ed98
   14001e5ef:	mov    rcx,rdi
   14001e5f2:	call   0x140034820
   14001e5f7:	test   eax,eax
   14001e5f9:	je     0x14001e64c
   14001e5fb:	lea    rdx,[rip+0x507a6]        # 0x14006eda8
   14001e602:	mov    rcx,rdi
   14001e605:	call   0x140034820
   14001e60a:	test   eax,eax
   14001e60c:	je     0x14001e64c
   14001e60e:	lea    rdx,[rip+0x507a3]        # 0x14006edb8
   14001e615:	mov    rcx,rdi
   14001e618:	call   0x140034820
   14001e61d:	test   eax,eax
   14001e61f:	jne    0x14001e6d9
   14001e625:	lea    ecx,[rax+0x8]
   14001e628:	call   0x1400331a0
   14001e62d:	mov    rbx,rax
   14001e630:	test   rax,rax
   14001e633:	je     0x14001e644
   14001e635:	lea    rax,[rip+0x51b3c]        # 0x140070178
   14001e63c:	mov    QWORD PTR [rbx],rax
   14001e63f:	jmp    0x14001e6d9
   14001e644:	mov    rbx,r13
   14001e647:	jmp    0x14001e6d9
   14001e64c:	mov    ecx,0x60
   14001e651:	call   0x1400331a0
   14001e656:	mov    rbx,rax
   14001e659:	test   rax,rax
   14001e65c:	je     0x14001e644
   14001e65e:	lea    rax,[rip+0x52313]        # 0x140070978
   14001e665:	lea    rcx,[rbx+0x20]
   14001e669:	mov    QWORD PTR [rbx],rax
   14001e66c:	call   0x14002b040
   14001e671:	mov    BYTE PTR [rbx+0x8],r13b
   14001e675:	mov    QWORD PTR [rbx+0x10],r13
   14001e679:	mov    QWORD PTR [rbx+0x18],r13
   14001e67d:	mov    QWORD PTR [rbx+0x40],r13
   14001e681:	mov    QWORD PTR [rbx+0x48],r13
   14001e685:	mov    DWORD PTR [rbx+0x50],r13d
   14001e689:	mov    DWORD PTR [rbx+0x54],ebp
   14001e68c:	mov    DWORD PTR [rbx+0x58],ebp
   14001e68f:	jmp    0x14001e6d9
   14001e691:	mov    ecx,0xfb8
   14001e696:	call   0x1400331a0
   14001e69b:	test   rax,rax
   14001e69e:	je     0x14001e6d9
   14001e6a0:	mov    edx,0xc
   14001e6a5:	jmp    0x14001e6ce
   14001e6a7:	mov    ecx,0xfb8
   14001e6ac:	call   0x1400331a0
   14001e6b1:	test   rax,rax
   14001e6b4:	je     0x14001e6d9
   14001e6b6:	mov    edx,0x4
   14001e6bb:	jmp    0x14001e6ce
   14001e6bd:	mov    ecx,0xfb8
   14001e6c2:	call   0x1400331a0
   14001e6c7:	test   rax,rax
   14001e6ca:	je     0x14001e6d9
   14001e6cc:	xor    edx,edx
   14001e6ce:	mov    rcx,rax
   14001e6d1:	call   0x140020830
   14001e6d6:	mov    rbx,rax
   14001e6d9:	lea    rax,[rsp+0x58]
   14001e6de:	lea    rdx,[rip+0x4d06b]        # 0x14006b750
   14001e6e5:	mov    r9d,0x1
   14001e6eb:	xor    r8d,r8d
   14001e6ee:	mov    rcx,0xffffffff80000002
   14001e6f5:	mov    rsi,r13
   14001e6f8:	mov    QWORD PTR [rsp+0x20],rax
   14001e6fd:	mov    QWORD PTR [rsp+0x58],r13
   14001e702:	call   QWORD PTR [rip+0x49948]        # 0x140068050
   14001e708:	test   eax,eax
   14001e70a:	jne    0x14001e779
   14001e70c:	mov    rsi,QWORD PTR [rsp+0x58]
   14001e711:	lea    rax,[rsp+0xb0]
   14001e719:	lea    r9,[rsp+0xb8]
   14001e721:	mov    QWORD PTR [rsp+0x28],rax
   14001e726:	lea    rax,[rsp+0xa8]
   14001e72e:	lea    rdx,[rip+0x50227]        # 0x14006e95c
   14001e735:	xor    r8d,r8d
   14001e738:	mov    rcx,rsi
   14001e73b:	mov    DWORD PTR [rsp+0xa8],r13d
   14001e743:	mov    QWORD PTR [rsp+0x20],rax
   14001e748:	mov    DWORD PTR [rsp+0xb0],0x4
   14001e753:	call   QWORD PTR [rip+0x498ff]        # 0x140068058
   14001e759:	test   eax,eax
   14001e75b:	jne    0x14001e779
   14001e75d:	mov    eax,DWORD PTR [rip+0x680ed]        # 0x140086850
   14001e763:	cmp    DWORD PTR [rsp+0xb8],0x4
   14001e76b:	cmove  eax,DWORD PTR [rsp+0xa8]
   14001e773:	mov    DWORD PTR [rip+0x680d7],eax        # 0x140086850
   14001e779:	mov    QWORD PTR [rsp+0x40],r13
   14001e77e:	mov    DWORD PTR [rsp+0x38],r13d
   14001e783:	xor    r9d,r9d
   14001e786:	lea    rax,[rip+0x5063b]        # 0x14006edc8
   14001e78d:	mov    QWORD PTR [rsp+0x30],r12
   14001e792:	lea    rcx,[rip+0x50667]        # 0x14006ee00
   14001e799:	lea    r8d,[r9+0x4]
   14001e79d:	mov    edx,0x9b
   14001e7a2:	mov    QWORD PTR [rsp+0x28],rbx
   14001e7a7:	mov    QWORD PTR [rsp+0x20],rax
   14001e7ac:	call   0x140003150
   14001e7b1:	test   rbx,rbx
   14001e7b4:	je     0x14001e7c8
   14001e7b6:	mov    rax,QWORD PTR [rbx]
   14001e7b9:	xor    r9d,r9d
   14001e7bc:	xor    r8d,r8d
   14001e7bf:	mov    rdx,r12
   14001e7c2:	mov    rcx,rbx
   14001e7c5:	call   QWORD PTR [rax+0x8]
   14001e7c8:	test   rsi,rsi
   14001e7cb:	je     0x14001e7d6
   14001e7cd:	mov    rcx,rsi
   14001e7d0:	call   QWORD PTR [rip+0x49872]        # 0x140068048
   14001e7d6:	lea    rdx,[rdi-0x18]
   14001e7da:	lock xadd DWORD PTR [rdx+0x10],ebp
   14001e7df:	dec    ebp
   14001e7e1:	test   ebp,ebp
   14001e7e3:	jg     0x14001e7ee
   14001e7e5:	mov    rcx,QWORD PTR [rdx]
   14001e7e8:	mov    rax,QWORD PTR [rcx]
   14001e7eb:	call   QWORD PTR [rax+0x8]
   14001e7ee:	mov    rax,rbx
   14001e7f1:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e7f9:	add    rsp,0x70
   14001e7fd:	pop    r13
   14001e7ff:	pop    r12
   14001e801:	pop    rdi
   14001e802:	pop    rsi
   14001e803:	pop    rbp
   14001e804:	ret    
   14001e805:	int3   
   14001e806:	int3   
   14001e807:	int3   
   14001e808:	int3   
   14001e809:	int3   
   14001e80a:	int3   
   14001e80b:	int3   
   14001e80c:	int3   
   14001e80d:	int3   
   14001e80e:	int3   
   14001e80f:	int3   
   14001e810:	mov    QWORD PTR [rsp+0x8],rbx
   14001e815:	push   rdi
   14001e816:	sub    rsp,0x40
   14001e81a:	mov    QWORD PTR [rsp+0x28],rcx
   14001e81f:	xor    r9d,r9d
   14001e822:	mov    rbx,rcx
   14001e825:	lea    rax,[rip+0x5062c]        # 0x14006ee58
   14001e82c:	lea    rcx,[rip+0x505cd]        # 0x14006ee00
   14001e833:	lea    r8d,[r9+0x4]
   14001e837:	mov    edx,0xa8
   14001e83c:	mov    QWORD PTR [rsp+0x20],rax
   14001e841:	call   0x140003150
   14001e846:	xor    dil,dil
   14001e849:	test   rbx,rbx
   14001e84c:	je     0x14001e868
   14001e84e:	mov    rax,QWORD PTR [rbx]
   14001e851:	mov    rcx,rbx
   14001e854:	call   QWORD PTR [rax+0x10]
   14001e857:	mov    r8,QWORD PTR [rbx]
   14001e85a:	mov    edx,0x1
   14001e85f:	mov    rcx,rbx
   14001e862:	movzx  edi,al
   14001e865:	call   QWORD PTR [r8]
   14001e868:	movzx  edx,dil
   14001e86c:	lea    rax,[rip+0x4f75d]        # 0x14006dfd0
   14001e873:	xor    r9d,r9d
   14001e876:	mov    DWORD PTR [rsp+0x30],edx
   14001e87a:	mov    QWORD PTR [rsp+0x28],rax
   14001e87f:	lea    rax,[rip+0x505f2]        # 0x14006ee78
   14001e886:	lea    r8d,[r9+0x7]
   14001e88a:	lea    rcx,[rip+0x5056f]        # 0x14006ee00
   14001e891:	mov    edx,0xb3
   14001e896:	mov    QWORD PTR [rsp+0x20],rax
   14001e89b:	call   0x140003150
   14001e8a0:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e8a5:	movzx  eax,dil
   14001e8a9:	add    rsp,0x40
   14001e8ad:	pop    rdi
   14001e8ae:	ret    
   14001e8af:	int3   
   14001e8b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e8b5:	push   rdi
   14001e8b6:	sub    rsp,0x50
   14001e8ba:	movsd  QWORD PTR [rsp+0x38],xmm1
   14001e8c0:	xor    r9d,r9d
   14001e8c3:	mov    DWORD PTR [rsp+0x30],0x2
   14001e8cb:	mov    QWORD PTR [rsp+0x28],rcx
   14001e8d0:	mov    rdi,rcx
   14001e8d3:	lea    rax,[rip+0x505ae]        # 0x14006ee88
   14001e8da:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001e8df:	movapd xmm6,xmm1
   14001e8e3:	lea    r8d,[r9+0x4]
   14001e8e7:	lea    rcx,[rip+0x50512]        # 0x14006ee00
   14001e8ee:	mov    edx,0xba
   14001e8f3:	mov    QWORD PTR [rsp+0x20],rax
   14001e8f8:	call   0x140003150
   14001e8fd:	xor    bl,bl
   14001e8ff:	test   rdi,rdi
   14001e902:	je     0x14001e919
   14001e904:	mov    rax,QWORD PTR [rdi]
   14001e907:	movapd xmm2,xmm6
   14001e90b:	mov    edx,0x2
   14001e910:	mov    rcx,rdi
   14001e913:	call   QWORD PTR [rax+0x18]
   14001e916:	movzx  ebx,al
   14001e919:	movzx  edx,bl
   14001e91c:	lea    rax,[rip+0x4f6e5]        # 0x14006e008
   14001e923:	xor    r9d,r9d
   14001e926:	mov    DWORD PTR [rsp+0x30],edx
   14001e92a:	mov    QWORD PTR [rsp+0x28],rax
   14001e92f:	lea    rax,[rip+0x50542]        # 0x14006ee78
   14001e936:	lea    r8d,[r9+0x7]
   14001e93a:	lea    rcx,[rip+0x504bf]        # 0x14006ee00
   14001e941:	mov    edx,0xc4
   14001e946:	mov    QWORD PTR [rsp+0x20],rax
   14001e94b:	call   0x140003150
   14001e950:	movzx  eax,bl
   14001e953:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001e958:	mov    rbx,QWORD PTR [rsp+0x60]
   14001e95d:	add    rsp,0x50
   14001e961:	pop    rdi
   14001e962:	ret    
   14001e963:	int3   
   14001e964:	int3   
   14001e965:	int3   
   14001e966:	int3   
   14001e967:	int3   
   14001e968:	int3   
   14001e969:	int3   
   14001e96a:	int3   
   14001e96b:	int3   
   14001e96c:	int3   
   14001e96d:	int3   
   14001e96e:	int3   
   14001e96f:	int3   
   14001e970:	mov    QWORD PTR [rsp+0x20],rbx
   14001e975:	push   rbp
   14001e976:	push   rsi
   14001e977:	push   rdi
   14001e978:	sub    rsp,0x160
   14001e97f:	movaps XMMWORD PTR [rsp+0x150],xmm6
   14001e987:	mov    rax,QWORD PTR [rip+0x6671a]        # 0x1400850a8
   14001e98e:	xor    rax,rsp
   14001e991:	mov    QWORD PTR [rsp+0x140],rax
   14001e999:	mov    DWORD PTR [rsp+0x30],edx
   14001e99d:	mov    QWORD PTR [rsp+0x28],rcx
   14001e9a2:	xor    r9d,r9d
   14001e9a5:	mov    rbx,r8
   14001e9a8:	mov    rsi,rcx
   14001e9ab:	lea    rax,[rip+0x504fe]        # 0x14006eeb0
   14001e9b2:	mov    ebp,edx
   14001e9b4:	lea    r8d,[r9+0x4]
   14001e9b8:	lea    rcx,[rip+0x50441]        # 0x14006ee00
   14001e9bf:	mov    edx,0xcb
   14001e9c4:	mov    QWORD PTR [rsp+0x20],rax
   14001e9c9:	call   0x140003150
   14001e9ce:	xor    dil,dil
   14001e9d1:	test   rsi,rsi
   14001e9d4:	je     0x14001e9ec
   14001e9d6:	test   rbx,rbx
   14001e9d9:	je     0x14001e9ec
   14001e9db:	mov    rax,QWORD PTR [rsi]
   14001e9de:	mov    r8,rbx
   14001e9e1:	mov    edx,ebp
   14001e9e3:	mov    rcx,rsi
   14001e9e6:	call   QWORD PTR [rax+0x20]
   14001e9e9:	movzx  edi,al
   14001e9ec:	movsd  xmm6,QWORD PTR [rbx]
   14001e9f0:	lea    rdx,[rip+0x50355]        # 0x14006ed4c
   14001e9f7:	lea    rcx,[rsp+0x40]
   14001e9fc:	call   0x14003390c
   14001ea01:	ucomisd xmm6,QWORD PTR [rip+0x58ea7]        # 0x1400778b0
   14001ea09:	jp     0x14001ea0d
   14001ea0b:	je     0x14001ea27
   14001ea0d:	movapd xmm2,xmm6
   14001ea11:	lea    rdx,[rip+0x4e77c]        # 0x14006d194
   14001ea18:	lea    rcx,[rsp+0x40]
   14001ea1d:	movq   r8,xmm2
   14001ea22:	call   0x14003390c
   14001ea27:	movzx  eax,dil
   14001ea2b:	xor    r9d,r9d
   14001ea2e:	lea    rcx,[rip+0x503cb]        # 0x14006ee00
   14001ea35:	mov    DWORD PTR [rsp+0x30],eax
   14001ea39:	lea    rax,[rsp+0x40]
   14001ea3e:	lea    r8d,[r9+0x7]
   14001ea42:	mov    QWORD PTR [rsp+0x28],rax
   14001ea47:	lea    rax,[rip+0x5048a]        # 0x14006eed8
   14001ea4e:	mov    edx,0xd6
   14001ea53:	mov    QWORD PTR [rsp+0x20],rax
   14001ea58:	call   0x140003150
   14001ea5d:	movzx  eax,dil
   14001ea61:	mov    rcx,QWORD PTR [rsp+0x140]
   14001ea69:	xor    rcx,rsp
   14001ea6c:	call   0x140032f00
   14001ea71:	mov    rbx,QWORD PTR [rsp+0x198]
   14001ea79:	movaps xmm6,XMMWORD PTR [rsp+0x150]
   14001ea81:	add    rsp,0x160
   14001ea88:	pop    rdi
   14001ea89:	pop    rsi
   14001ea8a:	pop    rbp
   14001ea8b:	ret    
   14001ea8c:	int3   
   14001ea8d:	int3   
   14001ea8e:	int3   
   14001ea8f:	int3   
   14001ea90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea95:	mov    QWORD PTR [rsp+0x10],rbp
   14001ea9a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ea9f:	push   rdi
   14001eaa0:	sub    rsp,0x40
   14001eaa4:	mov    DWORD PTR [rsp+0x38],r8d
   14001eaa9:	mov    DWORD PTR [rsp+0x30],edx
   14001eaad:	mov    QWORD PTR [rsp+0x28],rcx
   14001eab2:	xor    r9d,r9d
   14001eab5:	mov    esi,r8d
   14001eab8:	mov    rdi,rcx
   14001eabb:	lea    rax,[rip+0x5043e]        # 0x14006ef00
   14001eac2:	mov    ebp,edx
   14001eac4:	lea    r8d,[r9+0x4]
   14001eac8:	lea    rcx,[rip+0x50331]        # 0x14006ee00
   14001eacf:	mov    edx,0x17a
   14001ead4:	mov    QWORD PTR [rsp+0x20],rax
   14001ead9:	call   0x140003150
   14001eade:	xor    bl,bl
   14001eae0:	test   rdi,rdi
   14001eae3:	je     0x14001eaf9
   14001eae5:	mov    rax,QWORD PTR [rdi]
   14001eae8:	mov    r8d,esi
   14001eaeb:	mov    edx,ebp
   14001eaed:	mov    rcx,rdi
   14001eaf0:	call   QWORD PTR [rax+0x98]
   14001eaf6:	movzx  ebx,al
   14001eaf9:	movzx  edx,bl
   14001eafc:	lea    rax,[rip+0x4f6cd]        # 0x14006e1d0
   14001eb03:	xor    r9d,r9d
   14001eb06:	mov    DWORD PTR [rsp+0x30],edx
   14001eb0a:	mov    QWORD PTR [rsp+0x28],rax
   14001eb0f:	lea    rax,[rip+0x50362]        # 0x14006ee78
   14001eb16:	lea    r8d,[r9+0x7]
   14001eb1a:	lea    rcx,[rip+0x502df]        # 0x14006ee00
   14001eb21:	mov    edx,0x184
   14001eb26:	mov    QWORD PTR [rsp+0x20],rax
   14001eb2b:	call   0x140003150
   14001eb30:	mov    rbp,QWORD PTR [rsp+0x58]
   14001eb35:	mov    rsi,QWORD PTR [rsp+0x60]
   14001eb3a:	movzx  eax,bl
   14001eb3d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001eb42:	add    rsp,0x40
   14001eb46:	pop    rdi
   14001eb47:	ret    
   14001eb48:	int3   
   14001eb49:	int3   
   14001eb4a:	int3   
   14001eb4b:	int3   
   14001eb4c:	int3   
   14001eb4d:	int3   
   14001eb4e:	int3   
   14001eb4f:	int3   
   14001eb50:	mov    QWORD PTR [rsp+0x20],rbx
   14001eb55:	push   rbp
   14001eb56:	push   rsi
   14001eb57:	push   rdi
   14001eb58:	sub    rsp,0x250
   14001eb5f:	mov    rax,QWORD PTR [rip+0x66542]        # 0x1400850a8
   14001eb66:	xor    rax,rsp
   14001eb69:	mov    QWORD PTR [rsp+0x240],rax
   14001eb71:	mov    QWORD PTR [rsp+0x28],rcx
   14001eb76:	xor    r9d,r9d
   14001eb79:	mov    rdi,r8
   14001eb7c:	mov    rbp,rcx
   14001eb7f:	lea    rax,[rip+0x503a2]        # 0x14006ef28
   14001eb86:	mov    rbx,rdx
   14001eb89:	lea    r8d,[r9+0x4]
   14001eb8d:	lea    rcx,[rip+0x5026c]        # 0x14006ee00
   14001eb94:	mov    edx,0x18c
   14001eb99:	mov    QWORD PTR [rsp+0x20],rax
   14001eb9e:	call   0x140003150
   14001eba3:	xor    sil,sil
   14001eba6:	test   rbp,rbp
   14001eba9:	je     0x14001ebc1
   14001ebab:	mov    rax,QWORD PTR [rbp+0x0]
   14001ebaf:	mov    r8,rdi
   14001ebb2:	mov    rdx,rbx
   14001ebb5:	mov    rcx,rbp
   14001ebb8:	call   QWORD PTR [rax+0xa0]
   14001ebbe:	movzx  esi,al
   14001ebc1:	lea    rdx,[rip+0x50184]        # 0x14006ed4c
   14001ebc8:	lea    rcx,[rsp+0x40]
   14001ebcd:	call   0x14003390c
   14001ebd2:	test   rdi,rdi
   14001ebd5:	je     0x14001ebeb
   14001ebd7:	mov    r8d,DWORD PTR [rdi]
   14001ebda:	lea    rdx,[rip+0x4e5ab]        # 0x14006d18c
   14001ebe1:	lea    rcx,[rsp+0x40]
   14001ebe6:	call   0x14003390c
   14001ebeb:	lea    rdx,[rip+0x5015a]        # 0x14006ed4c
   14001ebf2:	lea    rcx,[rsp+0x140]
   14001ebfa:	call   0x14003390c
   14001ebff:	test   rbx,rbx
   14001ec02:	je     0x14001ec1b
   14001ec04:	mov    r8d,DWORD PTR [rbx]
   14001ec07:	lea    rdx,[rip+0x4e57e]        # 0x14006d18c
   14001ec0e:	lea    rcx,[rsp+0x140]
   14001ec16:	call   0x14003390c
   14001ec1b:	movzx  eax,sil
   14001ec1f:	xor    r9d,r9d
   14001ec22:	lea    rcx,[rip+0x501d7]        # 0x14006ee00
   14001ec29:	mov    DWORD PTR [rsp+0x38],eax
   14001ec2d:	lea    rax,[rsp+0x40]
   14001ec32:	lea    r8d,[r9+0x7]
   14001ec36:	mov    QWORD PTR [rsp+0x30],rax
   14001ec3b:	lea    rax,[rsp+0x140]
   14001ec43:	mov    edx,0x196
   14001ec48:	mov    QWORD PTR [rsp+0x28],rax
   14001ec4d:	lea    rax,[rip+0x502fc]        # 0x14006ef50
   14001ec54:	mov    QWORD PTR [rsp+0x20],rax
   14001ec59:	call   0x140003150
   14001ec5e:	movzx  eax,sil
   14001ec62:	mov    rcx,QWORD PTR [rsp+0x240]
   14001ec6a:	xor    rcx,rsp
   14001ec6d:	call   0x140032f00
   14001ec72:	mov    rbx,QWORD PTR [rsp+0x288]
   14001ec7a:	add    rsp,0x250
   14001ec81:	pop    rdi
   14001ec82:	pop    rsi
   14001ec83:	pop    rbp
   14001ec84:	ret    
   14001ec85:	int3   
   14001ec86:	int3   
   14001ec87:	int3   
   14001ec88:	int3   
   14001ec89:	int3   
   14001ec8a:	int3   
   14001ec8b:	int3   
   14001ec8c:	int3   
   14001ec8d:	int3   
   14001ec8e:	int3   
   14001ec8f:	int3   
   14001ec90:	mov    rax,rsp
   14001ec93:	mov    QWORD PTR [rax+0x8],rbx
   14001ec97:	push   rdi
   14001ec98:	sub    rsp,0x60
   14001ec9c:	mov    DWORD PTR [rax-0x20],0xfffffffd
   14001eca3:	mov    DWORD PTR [rax-0x28],0xffffffff
   14001ecaa:	movsd  QWORD PTR [rax-0x30],xmm1
   14001ecaf:	mov    DWORD PTR [rax-0x38],0x90
   14001ecb6:	mov    QWORD PTR [rax-0x40],rcx
   14001ecba:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001ecbe:	movapd xmm6,xmm1
   14001ecc2:	xor    r9d,r9d
   14001ecc5:	mov    rdi,rcx
   14001ecc8:	lea    rax,[rip+0x502a9]        # 0x14006ef78
   14001eccf:	lea    r8d,[r9+0x4]
   14001ecd3:	lea    rcx,[rip+0x50126]        # 0x14006ee00
   14001ecda:	mov    edx,0x19e
   14001ecdf:	mov    QWORD PTR [rsp+0x20],rax
   14001ece4:	call   0x140003150
   14001ece9:	xor    bl,bl
   14001eceb:	test   rdi,rdi
   14001ecee:	je     0x14001ed14
   14001ecf0:	mov    rax,QWORD PTR [rdi]
   14001ecf3:	movapd xmm2,xmm6
   14001ecf7:	or     r9d,0xffffffff
   14001ecfb:	mov    edx,0x90
   14001ed00:	mov    rcx,rdi
   14001ed03:	mov    DWORD PTR [rsp+0x20],0xfffffffd
   14001ed0b:	call   QWORD PTR [rax+0xa8]
   14001ed11:	movzx  ebx,al
   14001ed14:	movzx  edx,bl
   14001ed17:	lea    rax,[rip+0x4f4f2]        # 0x14006e210
   14001ed1e:	xor    r9d,r9d
   14001ed21:	mov    DWORD PTR [rsp+0x30],edx
   14001ed25:	mov    QWORD PTR [rsp+0x28],rax
   14001ed2a:	lea    rax,[rip+0x50147]        # 0x14006ee78
   14001ed31:	lea    r8d,[r9+0x7]
   14001ed35:	lea    rcx,[rip+0x500c4]        # 0x14006ee00
   14001ed3c:	mov    edx,0x1a8
   14001ed41:	mov    QWORD PTR [rsp+0x20],rax
   14001ed46:	call   0x140003150
   14001ed4b:	movzx  eax,bl
   14001ed4e:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14001ed53:	mov    rbx,QWORD PTR [rsp+0x70]
   14001ed58:	add    rsp,0x60
   14001ed5c:	pop    rdi
   14001ed5d:	ret    
   14001ed5e:	int3   
   14001ed5f:	int3   
   14001ed60:	mov    QWORD PTR [rsp+0x18],rbx
   14001ed65:	mov    QWORD PTR [rsp+0x20],rsi
   14001ed6a:	push   rdi
   14001ed6b:	sub    rsp,0x160
   14001ed72:	mov    rax,QWORD PTR [rip+0x6632f]        # 0x1400850a8
   14001ed79:	xor    rax,rsp
   14001ed7c:	mov    QWORD PTR [rsp+0x150],rax
   14001ed84:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14001ed8c:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14001ed94:	xor    r9d,r9d
   14001ed97:	mov    DWORD PTR [rsp+0x30],0x90
   14001ed9f:	mov    QWORD PTR [rsp+0x28],rcx
   14001eda4:	mov    rsi,rcx
   14001eda7:	lea    rax,[rip+0x50202]        # 0x14006efb0
   14001edae:	mov    rbx,rdx
   14001edb1:	lea    r8d,[r9+0x4]
   14001edb5:	lea    rcx,[rip+0x50044]        # 0x14006ee00
   14001edbc:	mov    edx,0x1af
   14001edc1:	mov    QWORD PTR [rsp+0x20],rax
   14001edc6:	call   0x140003150
   14001edcb:	xor    dil,dil
   14001edce:	test   rsi,rsi
   14001edd1:	je     0x14001edf6
   14001edd3:	mov    rax,QWORD PTR [rsi]
   14001edd6:	or     r9d,0xffffffff
   14001edda:	mov    r8,rbx
   14001eddd:	mov    edx,0x90
   14001ede2:	mov    rcx,rsi
   14001ede5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001eded:	call   QWORD PTR [rax+0xb0]
   14001edf3:	movzx  edi,al
   14001edf6:	lea    rdx,[rip+0x4ff4f]        # 0x14006ed4c
   14001edfd:	lea    rcx,[rsp+0x50]
   14001ee02:	call   0x14003390c
   14001ee07:	test   rbx,rbx
   14001ee0a:	je     0x14001ee26
   14001ee0c:	movsd  xmm2,QWORD PTR [rbx]
   14001ee10:	lea    rdx,[rip+0x4e37d]        # 0x14006d194
   14001ee17:	lea    rcx,[rsp+0x50]
   14001ee1c:	movq   r8,xmm2
   14001ee21:	call   0x14003390c
   14001ee26:	movzx  eax,dil
   14001ee2a:	xor    r9d,r9d
   14001ee2d:	lea    rcx,[rip+0x4ffcc]        # 0x14006ee00
   14001ee34:	mov    DWORD PTR [rsp+0x30],eax
   14001ee38:	lea    rax,[rsp+0x50]
   14001ee3d:	lea    r8d,[r9+0x7]
   14001ee41:	mov    QWORD PTR [rsp+0x28],rax
   14001ee46:	lea    rax,[rip+0x5019b]        # 0x14006efe8
   14001ee4d:	mov    edx,0x1b9
   14001ee52:	mov    QWORD PTR [rsp+0x20],rax
   14001ee57:	call   0x140003150
   14001ee5c:	movzx  eax,dil
   14001ee60:	mov    rcx,QWORD PTR [rsp+0x150]
   14001ee68:	xor    rcx,rsp
   14001ee6b:	call   0x140032f00
   14001ee70:	lea    r11,[rsp+0x160]
   14001ee78:	mov    rbx,QWORD PTR [r11+0x20]
   14001ee7c:	mov    rsi,QWORD PTR [r11+0x28]
   14001ee80:	mov    rsp,r11
   14001ee83:	pop    rdi
   14001ee84:	ret    
   14001ee85:	int3   
   14001ee86:	int3   
   14001ee87:	int3   
   14001ee88:	int3   
   14001ee89:	int3   
   14001ee8a:	int3   
   14001ee8b:	int3   
   14001ee8c:	int3   
   14001ee8d:	int3   
   14001ee8e:	int3   
   14001ee8f:	int3   
   14001ee90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ee95:	mov    QWORD PTR [rsp+0x10],rsi
   14001ee9a:	push   rdi
   14001ee9b:	sub    rsp,0x40
   14001ee9f:	mov    DWORD PTR [rsp+0x38],edx
   14001eea3:	xor    r9d,r9d
   14001eea6:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001eeae:	mov    QWORD PTR [rsp+0x28],rcx
   14001eeb3:	mov    rdi,rcx
   14001eeb6:	lea    rax,[rip+0x5015b]        # 0x14006f018
   14001eebd:	mov    esi,edx
   14001eebf:	lea    r8d,[r9+0x4]
   14001eec3:	lea    rcx,[rip+0x4ff36]        # 0x14006ee00
   14001eeca:	mov    edx,0x215
   14001eecf:	mov    QWORD PTR [rsp+0x20],rax
   14001eed4:	call   0x140003150
   14001eed9:	xor    bl,bl
   14001eedb:	test   rdi,rdi
   14001eede:	je     0x14001eef5
   14001eee0:	mov    rax,QWORD PTR [rdi]
   14001eee3:	mov    r8d,esi
   14001eee6:	or     edx,0xffffffff
   14001eee9:	mov    rcx,rdi
   14001eeec:	call   QWORD PTR [rax+0xd0]
   14001eef2:	movzx  ebx,al
   14001eef5:	movzx  edx,bl
   14001eef8:	lea    rax,[rip+0x4f379]        # 0x14006e278
   14001eeff:	xor    r9d,r9d
   14001ef02:	mov    DWORD PTR [rsp+0x30],edx
   14001ef06:	mov    QWORD PTR [rsp+0x28],rax
   14001ef0b:	lea    rax,[rip+0x4ff66]        # 0x14006ee78
   14001ef12:	lea    r8d,[r9+0x7]
   14001ef16:	lea    rcx,[rip+0x4fee3]        # 0x14006ee00
   14001ef1d:	mov    edx,0x21f
   14001ef22:	mov    QWORD PTR [rsp+0x20],rax
   14001ef27:	call   0x140003150
   14001ef2c:	mov    rsi,QWORD PTR [rsp+0x58]
   14001ef31:	movzx  eax,bl
   14001ef34:	mov    rbx,QWORD PTR [rsp+0x50]
   14001ef39:	add    rsp,0x40
   14001ef3d:	pop    rdi
   14001ef3e:	ret    
   14001ef3f:	int3   
   14001ef40:	mov    QWORD PTR [rsp+0x8],rbx
   14001ef45:	mov    QWORD PTR [rsp+0x10],rsi
   14001ef4a:	push   rdi
   14001ef4b:	sub    rsp,0x50
   14001ef4f:	mov    DWORD PTR [rsp+0x40],edx
   14001ef53:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14001ef5b:	xor    r9d,r9d
   14001ef5e:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001ef66:	mov    QWORD PTR [rsp+0x28],rcx
   14001ef6b:	mov    rdi,rcx
   14001ef6e:	lea    rax,[rip+0x500d3]        # 0x14006f048
   14001ef75:	mov    esi,edx
   14001ef77:	lea    r8d,[r9+0x4]
   14001ef7b:	lea    rcx,[rip+0x4fe7e]        # 0x14006ee00
   14001ef82:	mov    edx,0x226
   14001ef87:	mov    QWORD PTR [rsp+0x20],rax
   14001ef8c:	call   0x140003150
   14001ef91:	xor    bl,bl
   14001ef93:	test   rdi,rdi
   14001ef96:	je     0x14001efb1
   14001ef98:	mov    rax,QWORD PTR [rdi]
   14001ef9b:	or     r8d,0xffffffff
   14001ef9f:	mov    r9d,esi
   14001efa2:	or     edx,r8d
   14001efa5:	mov    rcx,rdi
   14001efa8:	call   QWORD PTR [rax+0xe0]
   14001efae:	movzx  ebx,al
   14001efb1:	movzx  edx,bl
   14001efb4:	lea    rax,[rip+0x4f2dd]        # 0x14006e298
   14001efbb:	xor    r9d,r9d
   14001efbe:	mov    DWORD PTR [rsp+0x30],edx
   14001efc2:	mov    QWORD PTR [rsp+0x28],rax
   14001efc7:	lea    rax,[rip+0x4feaa]        # 0x14006ee78
   14001efce:	lea    r8d,[r9+0x7]
   14001efd2:	lea    rcx,[rip+0x4fe27]        # 0x14006ee00
   14001efd9:	mov    edx,0x230
   14001efde:	mov    QWORD PTR [rsp+0x20],rax
   14001efe3:	call   0x140003150
   14001efe8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001efed:	movzx  eax,bl
   14001eff0:	mov    rbx,QWORD PTR [rsp+0x60]
   14001eff5:	add    rsp,0x50
   14001eff9:	pop    rdi
   14001effa:	ret    
   14001effb:	int3   
   14001effc:	int3   
   14001effd:	int3   
   14001effe:	int3   
   14001efff:	int3   
   14001f000:	mov    QWORD PTR [rsp+0x18],rbx
   14001f005:	mov    QWORD PTR [rsp+0x20],rsi
   14001f00a:	push   rdi
   14001f00b:	sub    rsp,0x150
   14001f012:	mov    rax,QWORD PTR [rip+0x6608f]        # 0x1400850a8
   14001f019:	xor    rax,rsp
   14001f01c:	mov    QWORD PTR [rsp+0x140],rax
   14001f024:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14001f02c:	xor    r9d,r9d
   14001f02f:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001f037:	mov    QWORD PTR [rsp+0x28],rcx
   14001f03c:	mov    rsi,rcx
   14001f03f:	lea    rax,[rip+0x50032]        # 0x14006f078
   14001f046:	mov    rbx,rdx
   14001f049:	lea    r8d,[r9+0x4]
   14001f04d:	lea    rcx,[rip+0x4fdac]        # 0x14006ee00
   14001f054:	mov    edx,0x237
   14001f059:	mov    QWORD PTR [rsp+0x20],rax
   14001f05e:	call   0x140003150
   14001f063:	xor    dil,dil
   14001f066:	test   rsi,rsi
   14001f069:	je     0x14001f084
   14001f06b:	mov    rax,QWORD PTR [rsi]
   14001f06e:	or     r8d,0xffffffff
   14001f072:	mov    r9,rbx
   14001f075:	or     edx,r8d
   14001f078:	mov    rcx,rsi
   14001f07b:	call   QWORD PTR [rax+0xe8]
   14001f081:	movzx  edi,al
   14001f084:	lea    rdx,[rip+0x4fcc1]        # 0x14006ed4c
   14001f08b:	lea    rcx,[rsp+0x40]
   14001f090:	call   0x14003390c
   14001f095:	test   rbx,rbx
   14001f098:	je     0x14001f0ae
   14001f09a:	mov    r8d,DWORD PTR [rbx]
   14001f09d:	lea    rdx,[rip+0x4e0ec]        # 0x14006d190
   14001f0a4:	lea    rcx,[rsp+0x40]
   14001f0a9:	call   0x14003390c
   14001f0ae:	movzx  eax,dil
   14001f0b2:	xor    r9d,r9d
   14001f0b5:	lea    rcx,[rip+0x4fd44]        # 0x14006ee00
   14001f0bc:	mov    DWORD PTR [rsp+0x30],eax
   14001f0c0:	lea    rax,[rsp+0x40]
   14001f0c5:	lea    r8d,[r9+0x7]
   14001f0c9:	mov    QWORD PTR [rsp+0x28],rax
   14001f0ce:	lea    rax,[rip+0x4ffcb]        # 0x14006f0a0
   14001f0d5:	mov    edx,0x241
   14001f0da:	mov    QWORD PTR [rsp+0x20],rax
   14001f0df:	call   0x140003150
   14001f0e4:	movzx  eax,dil
   14001f0e8:	mov    rcx,QWORD PTR [rsp+0x140]
   14001f0f0:	xor    rcx,rsp
   14001f0f3:	call   0x140032f00
   14001f0f8:	lea    r11,[rsp+0x150]
   14001f100:	mov    rbx,QWORD PTR [r11+0x20]
   14001f104:	mov    rsi,QWORD PTR [r11+0x28]
   14001f108:	mov    rsp,r11
   14001f10b:	pop    rdi
   14001f10c:	ret    
   14001f10d:	int3   
   14001f10e:	int3   
   14001f10f:	int3   
   14001f110:	mov    QWORD PTR [rsp+0x20],rbx
   14001f115:	push   rbp
   14001f116:	push   rsi
   14001f117:	push   rdi
   14001f118:	sub    rsp,0x150
   14001f11f:	mov    rax,QWORD PTR [rip+0x65f82]        # 0x1400850a8
   14001f126:	xor    rax,rsp
   14001f129:	mov    QWORD PTR [rsp+0x140],rax
   14001f131:	mov    DWORD PTR [rsp+0x38],0x104
   14001f139:	xor    r9d,r9d
   14001f13c:	mov    DWORD PTR [rsp+0x30],0x1
   14001f144:	mov    QWORD PTR [rsp+0x28],rcx
   14001f149:	mov    rbx,r8
   14001f14c:	mov    rsi,rcx
   14001f14f:	lea    rax,[rip+0x4ff72]        # 0x14006f0c8
   14001f156:	mov    rbp,rdx
   14001f159:	lea    r8d,[r9+0x4]
   14001f15d:	lea    rcx,[rip+0x4fc9c]        # 0x14006ee00
   14001f164:	mov    edx,0x28c
   14001f169:	mov    QWORD PTR [rsp+0x20],rax
   14001f16e:	call   0x140003150
   14001f173:	xor    dil,dil
   14001f176:	test   rsi,rsi
   14001f179:	je     0x14001f19a
   14001f17b:	mov    rax,QWORD PTR [rsi]
   14001f17e:	mov    r9d,0x104
   14001f184:	mov    r8,rbp
   14001f187:	mov    edx,0x1
   14001f18c:	mov    rcx,rsi
   14001f18f:	mov    QWORD PTR [rsp+0x20],rbx
   14001f194:	call   QWORD PTR [rax+0x78]
   14001f197:	movzx  edi,al
   14001f19a:	lea    rdx,[rip+0x4fbab]        # 0x14006ed4c
   14001f1a1:	lea    rcx,[rsp+0x40]
   14001f1a6:	call   0x14003390c
   14001f1ab:	test   rbx,rbx
   14001f1ae:	je     0x14001f1c4
   14001f1b0:	mov    r8d,DWORD PTR [rbx]
   14001f1b3:	lea    rdx,[rip+0x4dfd6]        # 0x14006d190
   14001f1ba:	lea    rcx,[rsp+0x40]
   14001f1bf:	call   0x14003390c
   14001f1c4:	movzx  eax,dil
   14001f1c8:	xor    r9d,r9d
   14001f1cb:	lea    rcx,[rip+0x4fc2e]        # 0x14006ee00
   14001f1d2:	mov    DWORD PTR [rsp+0x30],eax
   14001f1d6:	lea    rax,[rsp+0x40]
   14001f1db:	lea    r8d,[r9+0x7]
   14001f1df:	mov    QWORD PTR [rsp+0x28],rax
   14001f1e4:	lea    rax,[rip+0x4ff05]        # 0x14006f0f0
   14001f1eb:	mov    edx,0x296
   14001f1f0:	mov    QWORD PTR [rsp+0x20],rax
   14001f1f5:	call   0x140003150
   14001f1fa:	movzx  eax,dil
   14001f1fe:	mov    rcx,QWORD PTR [rsp+0x140]
   14001f206:	xor    rcx,rsp
   14001f209:	call   0x140032f00
   14001f20e:	mov    rbx,QWORD PTR [rsp+0x188]
   14001f216:	add    rsp,0x150
   14001f21d:	pop    rdi
   14001f21e:	pop    rsi
   14001f21f:	pop    rbp
   14001f220:	ret    
   14001f221:	int3   
   14001f222:	int3   
   14001f223:	int3   
   14001f224:	int3   
   14001f225:	int3   
   14001f226:	int3   
   14001f227:	int3   
   14001f228:	int3   
   14001f229:	int3   
   14001f22a:	int3   
   14001f22b:	int3   
   14001f22c:	int3   
   14001f22d:	int3   
   14001f22e:	int3   
   14001f22f:	int3   
   14001f230:	mov    QWORD PTR [rsp+0x8],rbx
   14001f235:	mov    QWORD PTR [rsp+0x10],rsi
   14001f23a:	push   rdi
   14001f23b:	sub    rsp,0x40
   14001f23f:	mov    DWORD PTR [rsp+0x38],0x0
   14001f247:	mov    DWORD PTR [rsp+0x30],edx
   14001f24b:	mov    QWORD PTR [rsp+0x28],rcx
   14001f250:	xor    r9d,r9d
   14001f253:	mov    rdi,rcx
   14001f256:	lea    rax,[rip+0x4febb]        # 0x14006f118
   14001f25d:	mov    esi,edx
   14001f25f:	lea    r8d,[r9+0x4]
   14001f263:	lea    rcx,[rip+0x4fb96]        # 0x14006ee00
   14001f26a:	mov    edx,0x2d0
   14001f26f:	mov    QWORD PTR [rsp+0x20],rax
   14001f274:	call   0x140003150
   14001f279:	xor    bl,bl
   14001f27b:	test   rdi,rdi
   14001f27e:	je     0x14001f294
   14001f280:	mov    rax,QWORD PTR [rdi]
   14001f283:	xor    r8d,r8d
   14001f286:	mov    edx,esi
   14001f288:	mov    rcx,rdi
   14001f28b:	call   QWORD PTR [rax+0x88]
   14001f291:	movzx  ebx,al
   14001f294:	movzx  edx,bl
   14001f297:	lea    rax,[rip+0x4ee22]        # 0x14006e0c0
   14001f29e:	xor    r9d,r9d
   14001f2a1:	mov    DWORD PTR [rsp+0x30],edx
   14001f2a5:	mov    QWORD PTR [rsp+0x28],rax
   14001f2aa:	lea    rax,[rip+0x4fbc7]        # 0x14006ee78
   14001f2b1:	lea    r8d,[r9+0x7]
   14001f2b5:	lea    rcx,[rip+0x4fb44]        # 0x14006ee00
   14001f2bc:	mov    edx,0x2da
   14001f2c1:	mov    QWORD PTR [rsp+0x20],rax
   14001f2c6:	call   0x140003150
   14001f2cb:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f2d0:	movzx  eax,bl
   14001f2d3:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f2d8:	add    rsp,0x40
   14001f2dc:	pop    rdi
   14001f2dd:	ret    
   14001f2de:	int3   
   14001f2df:	int3   
   14001f2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f2e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f2ea:	push   rdi
   14001f2eb:	sub    rsp,0x40
   14001f2ef:	mov    DWORD PTR [rsp+0x38],0x0
   14001f2f7:	mov    DWORD PTR [rsp+0x30],edx
   14001f2fb:	mov    QWORD PTR [rsp+0x28],rcx
   14001f300:	xor    r9d,r9d
   14001f303:	mov    rdi,rcx
   14001f306:	lea    rax,[rip+0x4fe3b]        # 0x14006f148
   14001f30d:	mov    esi,edx
   14001f30f:	lea    r8d,[r9+0x4]
   14001f313:	lea    rcx,[rip+0x4fae6]        # 0x14006ee00
   14001f31a:	mov    edx,0x325
   14001f31f:	mov    QWORD PTR [rsp+0x20],rax
   14001f324:	call   0x140003150
   14001f329:	xor    bl,bl
   14001f32b:	test   rdi,rdi
   14001f32e:	je     0x14001f344
   14001f330:	mov    rax,QWORD PTR [rdi]
   14001f333:	xor    r8d,r8d
   14001f336:	mov    edx,esi
   14001f338:	mov    rcx,rdi
   14001f33b:	call   QWORD PTR [rax+0x130]
   14001f341:	movzx  ebx,al
   14001f344:	movzx  edx,bl
   14001f347:	xor    r9d,r9d
   14001f34a:	lea    rax,[rip+0x4fe27]        # 0x14006f178
   14001f351:	mov    DWORD PTR [rsp+0x28],edx
   14001f355:	lea    r8d,[r9+0x7]
   14001f359:	lea    rcx,[rip+0x4faa0]        # 0x14006ee00
   14001f360:	mov    edx,0x32f
   14001f365:	mov    QWORD PTR [rsp+0x20],rax
   14001f36a:	call   0x140003150
   14001f36f:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f374:	movzx  eax,bl
   14001f377:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f37c:	add    rsp,0x40
   14001f380:	pop    rdi
   14001f381:	ret    
   14001f382:	int3   
   14001f383:	int3   
   14001f384:	int3   
   14001f385:	int3   
   14001f386:	int3   
   14001f387:	int3   
   14001f388:	int3   
   14001f389:	int3   
   14001f38a:	int3   
   14001f38b:	int3   
   14001f38c:	int3   
   14001f38d:	int3   
   14001f38e:	int3   
   14001f38f:	int3   
   14001f390:	mov    QWORD PTR [rsp+0x8],rbx
   14001f395:	mov    QWORD PTR [rsp+0x10],rsi
   14001f39a:	push   rdi
   14001f39b:	sub    rsp,0x40
   14001f39f:	mov    DWORD PTR [rsp+0x38],edx
   14001f3a3:	xor    r9d,r9d
   14001f3a6:	mov    DWORD PTR [rsp+0x30],0x15
   14001f3ae:	mov    QWORD PTR [rsp+0x28],rcx
   14001f3b3:	mov    rdi,rcx
   14001f3b6:	lea    rax,[rip+0x4fde3]        # 0x14006f1a0
   14001f3bd:	mov    esi,edx
   14001f3bf:	lea    r8d,[r9+0x4]
   14001f3c3:	lea    rcx,[rip+0x4fa36]        # 0x14006ee00
   14001f3ca:	mov    edx,0x336
   14001f3cf:	mov    QWORD PTR [rsp+0x20],rax
   14001f3d4:	call   0x140003150
   14001f3d9:	xor    bl,bl
   14001f3db:	test   rdi,rdi
   14001f3de:	je     0x14001f3f7
   14001f3e0:	mov    rax,QWORD PTR [rdi]
   14001f3e3:	mov    r8d,esi
   14001f3e6:	mov    edx,0x15
   14001f3eb:	mov    rcx,rdi
   14001f3ee:	call   QWORD PTR [rax+0x138]
   14001f3f4:	movzx  ebx,al
   14001f3f7:	movzx  edx,bl
   14001f3fa:	lea    rax,[rip+0x4fdcf]        # 0x14006f1d0
   14001f401:	xor    r9d,r9d
   14001f404:	mov    DWORD PTR [rsp+0x30],edx
   14001f408:	mov    QWORD PTR [rsp+0x28],rax
   14001f40d:	lea    rax,[rip+0x4fa64]        # 0x14006ee78
   14001f414:	lea    r8d,[r9+0x7]
   14001f418:	lea    rcx,[rip+0x4f9e1]        # 0x14006ee00
   14001f41f:	mov    edx,0x340
   14001f424:	mov    QWORD PTR [rsp+0x20],rax
   14001f429:	call   0x140003150
   14001f42e:	mov    rsi,QWORD PTR [rsp+0x58]
   14001f433:	movzx  eax,bl
   14001f436:	mov    rbx,QWORD PTR [rsp+0x50]
   14001f43b:	add    rsp,0x40
   14001f43f:	pop    rdi
   14001f440:	ret    
   14001f441:	int3   
   14001f442:	int3   
   14001f443:	int3   
   14001f444:	int3   
   14001f445:	int3   
   14001f446:	int3   
   14001f447:	int3   
   14001f448:	int3   
   14001f449:	int3   
   14001f44a:	int3   
   14001f44b:	int3   
   14001f44c:	int3   
   14001f44d:	int3   
   14001f44e:	int3   
   14001f44f:	int3   
   14001f450:	mov    rax,rsp
   14001f453:	mov    QWORD PTR [rax+0x8],rbx
   14001f457:	mov    QWORD PTR [rax+0x10],rbp
   14001f45b:	mov    QWORD PTR [rax+0x18],rsi
   14001f45f:	push   rdi
   14001f460:	sub    rsp,0x50
   14001f464:	mov    DWORD PTR [rax-0x10],r8d
   14001f468:	mov    DWORD PTR [rax-0x18],edx
   14001f46b:	mov    DWORD PTR [rax-0x20],0xfffffffd
   14001f472:	mov    DWORD PTR [rax-0x28],0x0
   14001f479:	mov    QWORD PTR [rax-0x30],rcx
   14001f47d:	xor    r9d,r9d
   14001f480:	lea    rax,[rip+0x4fd69]        # 0x14006f1f0
   14001f487:	mov    esi,r8d
   14001f48a:	mov    rdi,rcx
   14001f48d:	mov    ebp,edx
   14001f48f:	lea    r8d,[r9+0x4]
   14001f493:	lea    rcx,[rip+0x4f966]        # 0x14006ee00
   14001f49a:	mov    edx,0x37b
   14001f49f:	mov    QWORD PTR [rsp+0x20],rax
   14001f4a4:	call   0x140003150
   14001f4a9:	xor    bl,bl
   14001f4ab:	test   rdi,rdi
   14001f4ae:	je     0x14001f4cc
   14001f4b0:	mov    rax,QWORD PTR [rdi]
   14001f4b3:	xor    edx,edx
   14001f4b5:	mov    r9d,ebp
   14001f4b8:	lea    r8d,[rdx-0x3]
   14001f4bc:	mov    rcx,rdi
   14001f4bf:	mov    DWORD PTR [rsp+0x20],esi
   14001f4c3:	call   QWORD PTR [rax+0x158]
   14001f4c9:	movzx  ebx,al
   14001f4cc:	movzx  edx,bl
   14001f4cf:	xor    r9d,r9d
   14001f4d2:	lea    rax,[rip+0x4fd47]        # 0x14006f220
   14001f4d9:	mov    DWORD PTR [rsp+0x28],edx
   14001f4dd:	lea    r8d,[r9+0x7]
   14001f4e1:	lea    rcx,[rip+0x4f918]        # 0x14006ee00
   14001f4e8:	mov    edx,0x385
   14001f4ed:	mov    QWORD PTR [rsp+0x20],rax
   14001f4f2:	call   0x140003150
   14001f4f7:	mov    rbp,QWORD PTR [rsp+0x68]
   14001f4fc:	mov    rsi,QWORD PTR [rsp+0x70]
   14001f501:	movzx  eax,bl
   14001f504:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f509:	add    rsp,0x50
   14001f50d:	pop    rdi
   14001f50e:	ret    
   14001f50f:	int3   
   14001f510:	mov    QWORD PTR [rsp+0x10],rdx
   14001f515:	mov    QWORD PTR [rsp+0x18],r8
   14001f51a:	mov    QWORD PTR [rsp+0x20],r9
   14001f51f:	sub    rsp,0x28
   14001f523:	lea    r8,[rsp+0x40]
   14001f528:	call   0x14001f540
   14001f52d:	add    rsp,0x28
   14001f531:	ret    
   14001f532:	int3   
   14001f533:	int3   
   14001f534:	int3   
   14001f535:	int3   
   14001f536:	int3   
   14001f537:	int3   
   14001f538:	int3   
   14001f539:	int3   
   14001f53a:	int3   
   14001f53b:	int3   
   14001f53c:	int3   
   14001f53d:	int3   
   14001f53e:	int3   
   14001f53f:	int3   
   14001f540:	rex push rsi
   14001f542:	push   rdi
   14001f543:	push   r13
   14001f545:	sub    rsp,0x20
   14001f549:	mov    r13,r8
   14001f54c:	mov    rsi,rdx
   14001f54f:	mov    rdi,rcx
   14001f552:	test   rdx,rdx
   14001f555:	jne    0x14001f562
   14001f557:	mov    ecx,0x80070057
   14001f55c:	call   0x1400025f0
   14001f561:	int3   
   14001f562:	mov    rax,QWORD PTR [rcx]
   14001f565:	mov    QWORD PTR [rsp+0x48],rbp
   14001f56a:	mov    rdx,r8
   14001f56d:	mov    rcx,rsi
   14001f570:	mov    QWORD PTR [rsp+0x50],r12
   14001f575:	movsxd r12,DWORD PTR [rax-0x10]
   14001f579:	call   0x140034970
   14001f57e:	mov    ebp,eax
   14001f580:	test   eax,eax
   14001f582:	jns    0x14001f58f
   14001f584:	mov    ecx,0x80004005
   14001f589:	call   0x1400025f0
   14001f58e:	int3   
   14001f58f:	mov    QWORD PTR [rsp+0x40],rbx
   14001f594:	lea    ebx,[rax+r12*1]
   14001f598:	test   ebx,ebx
   14001f59a:	jns    0x14001f5a7
   14001f59c:	mov    ecx,0x80070057
   14001f5a1:	call   0x1400025f0
   14001f5a6:	int3   
   14001f5a7:	mov    rax,QWORD PTR [rdi]
   14001f5aa:	mov    ecx,0x1
   14001f5af:	sub    ecx,DWORD PTR [rax-0x8]
   14001f5b2:	mov    eax,DWORD PTR [rax-0xc]
   14001f5b5:	sub    eax,ebx
   14001f5b7:	or     ecx,eax
   14001f5b9:	jge    0x14001f5c5
   14001f5bb:	mov    edx,ebx
   14001f5bd:	mov    rcx,rdi
   14001f5c0:	call   0x140008df0
   14001f5c5:	lea    eax,[rbp+0x1]
   14001f5c8:	mov    rcx,r12
   14001f5cb:	mov    r9,r13
   14001f5ce:	add    rcx,QWORD PTR [rdi]
   14001f5d1:	movsxd rdx,eax
   14001f5d4:	mov    r8,rsi
   14001f5d7:	call   0x140033b44
   14001f5dc:	mov    r11,QWORD PTR [rdi]
   14001f5df:	cmp    ebx,DWORD PTR [r11-0xc]
   14001f5e3:	jg     0x14001f60b
   14001f5e5:	mov    rbp,QWORD PTR [rsp+0x48]
   14001f5ea:	mov    r12,QWORD PTR [rsp+0x50]
   14001f5ef:	mov    DWORD PTR [r11-0x10],ebx
   14001f5f3:	mov    rax,QWORD PTR [rdi]
   14001f5f6:	movsxd rcx,ebx
   14001f5f9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f5fe:	mov    BYTE PTR [rcx+rax*1],0x0
   14001f602:	add    rsp,0x20
   14001f606:	pop    r13
   14001f608:	pop    rdi
   14001f609:	pop    rsi
   14001f60a:	ret    
   14001f60b:	mov    ecx,0x80070057
   14001f610:	call   0x1400025f0
   14001f615:	int3   
   14001f616:	int3   
   14001f617:	int3   
   14001f618:	int3   
   14001f619:	int3   
   14001f61a:	int3   
   14001f61b:	int3   
   14001f61c:	int3   
   14001f61d:	int3   
   14001f61e:	int3   
   14001f61f:	int3   
   14001f620:	lea    rax,[rip+0x509e1]        # 0x140070008
   14001f627:	mov    QWORD PTR [rcx],rax
   14001f62a:	ret    
   14001f62b:	int3   
   14001f62c:	int3   
   14001f62d:	int3   
   14001f62e:	int3   
   14001f62f:	int3   
   14001f630:	xor    al,al
   14001f632:	ret    
   14001f633:	int3   
   14001f634:	int3   
   14001f635:	int3   
   14001f636:	int3   
   14001f637:	int3   
   14001f638:	int3   
   14001f639:	int3   
   14001f63a:	int3   
   14001f63b:	int3   
   14001f63c:	int3   
   14001f63d:	int3   
   14001f63e:	int3   
   14001f63f:	int3   
   14001f640:	rex push rbx
   14001f642:	sub    rsp,0x20
   14001f646:	lea    rax,[rip+0x509bb]        # 0x140070008
   14001f64d:	mov    rbx,rcx
   14001f650:	mov    QWORD PTR [rcx],rax
   14001f653:	test   dl,0x1
   14001f656:	je     0x14001f65d
   14001f658:	call   0x1400330c0
   14001f65d:	mov    rax,rbx
   14001f660:	add    rsp,0x20
   14001f664:	pop    rbx
   14001f665:	ret    
   14001f666:	int3   
   14001f667:	int3   
   14001f668:	int3   
   14001f669:	int3   
   14001f66a:	int3   
   14001f66b:	int3   
   14001f66c:	int3   
   14001f66d:	int3   
   14001f66e:	int3   
   14001f66f:	int3   
   14001f670:	mov    al,0x1
   14001f672:	ret    
   14001f673:	int3   
   14001f674:	int3   
   14001f675:	int3   
   14001f676:	int3   
   14001f677:	int3   
   14001f678:	int3   
   14001f679:	int3   
   14001f67a:	int3   
   14001f67b:	int3   
   14001f67c:	int3   
   14001f67d:	int3   
   14001f67e:	int3   
   14001f67f:	int3   
   14001f680:	sub    rsp,0x38
   14001f684:	dec    edx
   14001f686:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14001f68b:	movapd xmm6,xmm2
   14001f68f:	jne    0x14001f721
   14001f695:	movsd  xmm0,QWORD PTR [rip+0x57e03]        # 0x1400774a0
   14001f69d:	ucomisd xmm0,xmm2
   14001f6a1:	jp     0x14001f71b
   14001f6a3:	jne    0x14001f71b
   14001f6a5:	lea    rcx,[rip+0x5090c]        # 0x14006ffb8
   14001f6ac:	mov    QWORD PTR [rsp+0x30],rbx
   14001f6b1:	call   0x14002c260
   14001f6b6:	lea    rcx,[rip+0x50913]        # 0x14006ffd0
   14001f6bd:	movzx  ebx,al
   14001f6c0:	call   0x14002c260
   14001f6c5:	test   bl,bl
   14001f6c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6cc:	jne    0x14001f6d2
   14001f6ce:	test   al,al
   14001f6d0:	je     0x14001f721
   14001f6d2:	movapd xmm1,xmm6
   14001f6d6:	lea    rcx,[rip+0x4c1a3]        # 0x14006b880
   14001f6dd:	call   0x14001f730
   14001f6e2:	lea    rcx,[rip+0x4c1a7]        # 0x14006b890
   14001f6e9:	movapd xmm1,xmm6
   14001f6ed:	call   0x14001f730
   14001f6f2:	lea    rcx,[rip+0x4c1c7]        # 0x14006b8c0
   14001f6f9:	movapd xmm1,xmm6
   14001f6fd:	call   0x14001f730
   14001f702:	lea    rcx,[rip+0x4c1c7]        # 0x14006b8d0
   14001f709:	movapd xmm1,xmm6
   14001f70d:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001f712:	add    rsp,0x38
   14001f716:	jmp    0x14001f730
   14001f71b:	movapd xmm1,xmm2
   14001f71f:	jmp    0x14001f6d6
   14001f721:	xor    al,al
   14001f723:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001f728:	add    rsp,0x38
   14001f72c:	ret    
   14001f72d:	int3   
   14001f72e:	int3   
   14001f72f:	int3   
   14001f730:	mov    rax,rsp
   14001f733:	push   rbp
   14001f734:	push   r12
   14001f736:	push   r13
   14001f738:	push   r14
   14001f73a:	push   r15
   14001f73c:	lea    rbp,[rax-0x118]
   14001f743:	sub    rsp,0x1f0
   14001f74a:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14001f752:	mov    QWORD PTR [rax+0x10],rbx
   14001f756:	mov    QWORD PTR [rax+0x18],rsi
   14001f75a:	mov    QWORD PTR [rax+0x20],rdi
   14001f75e:	movaps XMMWORD PTR [rax-0x38],xmm6
   14001f762:	movaps XMMWORD PTR [rax-0x48],xmm7
   14001f766:	mov    rax,QWORD PTR [rip+0x6593b]        # 0x1400850a8
   14001f76d:	xor    rax,rsp
   14001f770:	mov    QWORD PTR [rbp+0xc0],rax
   14001f777:	movapd xmm7,xmm1
   14001f77b:	mov    r13,rcx
   14001f77e:	xor    r15b,r15b
   14001f781:	mov    r14d,0x40
   14001f787:	test   rcx,rcx
   14001f78a:	je     0x14002001e
   14001f790:	mov    QWORD PTR [rbp-0x60],0xf
   14001f798:	xor    esi,esi
   14001f79a:	mov    QWORD PTR [rbp-0x68],rsi
   14001f79e:	mov    BYTE PTR [rbp-0x78],sil
   14001f7a2:	lea    rdx,[rip+0x4c397]        # 0x14006bb40
   14001f7a9:	call   0x140034820
   14001f7ae:	test   eax,eax
   14001f7b0:	je     0x14001fbd1
   14001f7b6:	lea    rdx,[rip+0x4c0c3]        # 0x14006b880
   14001f7bd:	mov    rcx,r13
   14001f7c0:	call   0x140034820
   14001f7c5:	test   eax,eax
   14001f7c7:	je     0x14001fbd1
   14001f7cd:	lea    rdx,[rip+0x4c0bc]        # 0x14006b890
   14001f7d4:	mov    rcx,r13
   14001f7d7:	call   0x140034820
   14001f7dc:	test   eax,eax
   14001f7de:	jne    0x14001fa8b
   14001f7e4:	mov    ecx,0xfb8
   14001f7e9:	call   0x1400331a0
   14001f7ee:	mov    QWORD PTR [rsp+0x20],rax
   14001f7f3:	test   rax,rax
   14001f7f6:	je     0x14001f808
   14001f7f8:	lea    edx,[rsi+0x6]
   14001f7fb:	mov    rcx,rax
   14001f7fe:	call   0x140020830
   14001f803:	mov    r12,rax
   14001f806:	jmp    0x14001f80b
   14001f808:	mov    r12,rsi
   14001f80b:	mov    QWORD PTR [rsp+0x68],rsi
   14001f810:	mov    ecx,0x50
   14001f815:	call   0x1400331a0
   14001f81a:	test   rax,rax
   14001f81d:	je     0x14001fa5c
   14001f823:	mov    QWORD PTR [rsp+0x60],rax
   14001f828:	mov    QWORD PTR [rax],rax
   14001f82b:	mov    rax,QWORD PTR [rsp+0x60]
   14001f830:	mov    QWORD PTR [rax+0x8],rax
   14001f834:	mov    rax,QWORD PTR [rsp+0x60]
   14001f839:	mov    QWORD PTR [rax+0x10],rax
   14001f83d:	mov    rax,QWORD PTR [rsp+0x60]
   14001f842:	mov    BYTE PTR [rax+0x48],0x1
   14001f846:	mov    rax,QWORD PTR [rsp+0x60]
   14001f84b:	mov    BYTE PTR [rax+0x49],0x1
   14001f84f:	mov    DWORD PTR [rsp+0x78],esi
   14001f853:	lea    rcx,[rsp+0x58]
   14001f858:	call   0x14000ef00
   14001f85d:	nop
   14001f85e:	lea    rdx,[rbp-0x28]
   14001f862:	lea    rcx,[rsp+0x58]
   14001f867:	call   0x14000fe70
   14001f86c:	mov    rdi,rax
   14001f86f:	lea    rax,[rbp-0x78]
   14001f873:	cmp    rax,rdi
   14001f876:	je     0x14001f8dd
   14001f878:	cmp    QWORD PTR [rbp-0x60],0x10
   14001f87d:	jb     0x14001f888
   14001f87f:	mov    rcx,QWORD PTR [rbp-0x78]
   14001f883:	call   0x1400330c0
   14001f888:	mov    QWORD PTR [rbp-0x60],0xf
   14001f890:	mov    QWORD PTR [rbp-0x68],rsi
   14001f894:	mov    BYTE PTR [rbp-0x78],0x0
   14001f898:	cmp    QWORD PTR [rdi+0x18],0x10
   14001f89d:	jae    0x14001f8b4
   14001f89f:	mov    r8,QWORD PTR [rdi+0x10]
   14001f8a3:	inc    r8
   14001f8a6:	mov    rdx,rdi
   14001f8a9:	lea    rcx,[rbp-0x78]
   14001f8ad:	call   0x140033260
   14001f8b2:	jmp    0x14001f8be
   14001f8b4:	mov    rax,QWORD PTR [rdi]
   14001f8b7:	mov    QWORD PTR [rbp-0x78],rax
   14001f8bb:	mov    QWORD PTR [rdi],rsi
   14001f8be:	mov    rax,QWORD PTR [rdi+0x10]
   14001f8c2:	mov    QWORD PTR [rbp-0x68],rax
   14001f8c6:	mov    rax,QWORD PTR [rdi+0x18]
   14001f8ca:	mov    QWORD PTR [rbp-0x60],rax
   14001f8ce:	mov    QWORD PTR [rdi+0x18],0xf
   14001f8d6:	mov    QWORD PTR [rdi+0x10],rsi
   14001f8da:	mov    BYTE PTR [rdi],0x0
   14001f8dd:	cmp    QWORD PTR [rbp-0x10],0x10
   14001f8e2:	jb     0x14001f8ee
   14001f8e4:	mov    rcx,QWORD PTR [rbp-0x28]
   14001f8e8:	call   0x1400330c0
   14001f8ed:	nop
   14001f8ee:	mov    rax,QWORD PTR [rsp+0x60]
   14001f8f3:	mov    rdi,QWORD PTR [rax+0x8]
   14001f8f7:	mov    rbx,rdi
   14001f8fa:	cmp    BYTE PTR [rdi+0x49],0x0
   14001f8fe:	jne    0x14001f947
   14001f900:	mov    rdx,QWORD PTR [rbx+0x10]
   14001f904:	lea    rcx,[rsp+0x58]
   14001f909:	call   0x140011a50
   14001f90e:	mov    rbx,QWORD PTR [rbx]
   14001f911:	cmp    QWORD PTR [rdi+0x38],0x10
   14001f916:	jb     0x14001f921
   14001f918:	mov    rcx,QWORD PTR [rdi+0x20]
   14001f91c:	call   0x1400330c0
   14001f921:	mov    QWORD PTR [rdi+0x38],0xf
   14001f929:	mov    QWORD PTR [rdi+0x30],rsi
   14001f92d:	mov    BYTE PTR [rdi+0x20],0x0
   14001f931:	mov    rcx,rdi
   14001f934:	call   0x1400330c0
   14001f939:	mov    rdi,rbx
   14001f93c:	cmp    BYTE PTR [rbx+0x49],0x0
   14001f940:	je     0x14001f900
   14001f942:	mov    rax,QWORD PTR [rsp+0x60]
   14001f947:	mov    QWORD PTR [rax+0x8],rax
   14001f94b:	mov    rax,QWORD PTR [rsp+0x60]
   14001f950:	mov    QWORD PTR [rax],rax
   14001f953:	mov    rax,QWORD PTR [rsp+0x60]
   14001f958:	mov    QWORD PTR [rax+0x10],rax
   14001f95c:	mov    QWORD PTR [rsp+0x68],rsi
   14001f961:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f966:	mov    rdi,QWORD PTR [rbx]
   14001f969:	cmp    rdi,rdi
   14001f96c:	jne    0x14001f9e3
   14001f96e:	mov    rdi,QWORD PTR [rbx+0x8]
   14001f972:	mov    rsi,rdi
   14001f975:	cmp    BYTE PTR [rdi+0x49],0x0
   14001f979:	jne    0x14001f9c5
   14001f97b:	xor    ebx,ebx
   14001f97d:	nop    DWORD PTR [rax]
   14001f980:	mov    rdx,QWORD PTR [rsi+0x10]
   14001f984:	lea    rcx,[rsp+0x58]
   14001f989:	call   0x140011a50
   14001f98e:	mov    rsi,QWORD PTR [rsi]
   14001f991:	cmp    QWORD PTR [rdi+0x38],0x10
   14001f996:	jb     0x14001f9a1
   14001f998:	mov    rcx,QWORD PTR [rdi+0x20]
   14001f99c:	call   0x1400330c0
   14001f9a1:	mov    QWORD PTR [rdi+0x38],0xf
   14001f9a9:	mov    QWORD PTR [rdi+0x30],rbx
   14001f9ad:	mov    BYTE PTR [rdi+0x20],bl
   14001f9b0:	mov    rcx,rdi
   14001f9b3:	call   0x1400330c0
   14001f9b8:	mov    rdi,rsi
   14001f9bb:	cmp    BYTE PTR [rsi+0x49],bl
   14001f9be:	je     0x14001f980
   14001f9c0:	mov    rbx,QWORD PTR [rsp+0x60]
   14001f9c5:	mov    QWORD PTR [rbx+0x8],rbx
   14001f9c9:	mov    rax,QWORD PTR [rsp+0x60]
   14001f9ce:	mov    QWORD PTR [rax],rax
   14001f9d1:	mov    rax,QWORD PTR [rsp+0x60]
   14001f9d6:	mov    QWORD PTR [rax+0x10],rax
   14001f9da:	xor    esi,esi
   14001f9dc:	mov    QWORD PTR [rsp+0x68],rsi
   14001f9e1:	jmp    0x14001fa52
   14001f9e3:	cmp    rdi,rbx
   14001f9e6:	je     0x14001fa57
   14001f9e8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f9f0:	mov    r8,rdi
   14001f9f3:	cmp    BYTE PTR [rdi+0x49],0x0
   14001f9f7:	jne    0x14001fa3e
   14001f9f9:	mov    rax,QWORD PTR [rdi+0x10]
   14001f9fd:	cmp    BYTE PTR [rax+0x49],0x0
   14001fa01:	jne    0x14001fa1e
   14001fa03:	mov    rdi,rax
   14001fa06:	mov    rax,QWORD PTR [rax]
   14001fa09:	cmp    BYTE PTR [rax+0x49],0x0
   14001fa0d:	jne    0x14001fa3e
   14001fa0f:	nop
   14001fa10:	mov    rdi,rax
   14001fa13:	mov    rax,QWORD PTR [rax]
   14001fa16:	cmp    BYTE PTR [rax+0x49],0x0
   14001fa1a:	je     0x14001fa10
   14001fa1c:	jmp    0x14001fa3e
   14001fa1e:	mov    rax,QWORD PTR [rdi+0x8]
   14001fa22:	cmp    BYTE PTR [rax+0x49],0x0
   14001fa26:	jne    0x14001fa3b
   14001fa28:	cmp    rdi,QWORD PTR [rax+0x10]
   14001fa2c:	jne    0x14001fa3b
   14001fa2e:	mov    rdi,rax
   14001fa31:	mov    rax,QWORD PTR [rax+0x8]
   14001fa35:	cmp    BYTE PTR [rax+0x49],0x0
   14001fa39:	je     0x14001fa28
   14001fa3b:	mov    rdi,rax
   14001fa3e:	lea    rdx,[rsp+0x20]
   14001fa43:	lea    rcx,[rsp+0x58]
   14001fa48:	call   0x140011560
   14001fa4d:	cmp    rdi,rbx
   14001fa50:	jne    0x14001f9f0
   14001fa52:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fa57:	jmp    0x14001fe47
   14001fa5c:	mov    QWORD PTR [rsp+0x20],rsi
   14001fa61:	lea    rdx,[rsp+0x20]
   14001fa66:	lea    rcx,[rbp-0x50]
   14001fa6a:	call   0x140032fd4
   14001fa6f:	lea    rdx,[rip+0x48e1a]        # 0x140068890
   14001fa76:	mov    QWORD PTR [rbp-0x50],rdx
   14001fa7a:	lea    rdx,[rip+0x6399f]        # 0x140083420
   14001fa81:	lea    rcx,[rbp-0x50]
   14001fa85:	call   0x140036358
   14001fa8a:	int3   
   14001fa8b:	lea    rdx,[rip+0x4c0be]        # 0x14006bb50
   14001fa92:	mov    rcx,r13
   14001fa95:	call   0x140034820
   14001fa9a:	test   eax,eax
   14001fa9c:	je     0x14001fb4e
   14001faa2:	lea    rdx,[rip+0x4be17]        # 0x14006b8c0
   14001faa9:	mov    rcx,r13
   14001faac:	call   0x140034820
   14001fab1:	test   eax,eax
   14001fab3:	je     0x14001fb4e
   14001fab9:	lea    rdx,[rip+0x4be10]        # 0x14006b8d0
   14001fac0:	mov    rcx,r13
   14001fac3:	call   0x140034820
   14001fac8:	test   eax,eax
   14001faca:	jne    0x14001ffdd
   14001fad0:	mov    ecx,0xfb8
   14001fad5:	call   0x1400331a0
   14001fada:	mov    QWORD PTR [rsp+0x20],rax
   14001fadf:	test   rax,rax
   14001fae2:	je     0x14001faf6
   14001fae4:	mov    edx,0xd
   14001fae9:	mov    rcx,rax
   14001faec:	call   0x140020830
   14001faf1:	mov    r12,rax
   14001faf4:	jmp    0x14001faf9
   14001faf6:	mov    r12,rsi
   14001faf9:	lea    rcx,[rbp+0x0]
   14001fafd:	call   0x140005ad0
   14001fb02:	nop
   14001fb03:	mov    DWORD PTR [rbp+0x20],0x4
   14001fb0a:	lea    rcx,[rbp+0x0]
   14001fb0e:	call   0x14000ef00
   14001fb13:	nop
   14001fb14:	lea    rdx,[rbp-0x28]
   14001fb18:	lea    rcx,[rbp+0x0]
   14001fb1c:	call   0x14000fe70
   14001fb21:	nop
   14001fb22:	mov    rdx,rax
   14001fb25:	lea    rcx,[rbp-0x78]
   14001fb29:	call   0x1400029d0
   14001fb2e:	nop
   14001fb2f:	cmp    QWORD PTR [rbp-0x10],0x10
   14001fb34:	jb     0x14001fb40
   14001fb36:	mov    rcx,QWORD PTR [rbp-0x28]
   14001fb3a:	call   0x1400330c0
   14001fb3f:	nop
   14001fb40:	lea    rcx,[rbp+0x0]
   14001fb44:	call   0x14000ee90
   14001fb49:	jmp    0x14001fe4f
   14001fb4e:	mov    ecx,0xfb8
   14001fb53:	call   0x1400331a0
   14001fb58:	mov    QWORD PTR [rsp+0x20],rax
   14001fb5d:	test   rax,rax
   14001fb60:	je     0x14001fb74
   14001fb62:	mov    edx,0x4
   14001fb67:	mov    rcx,rax
   14001fb6a:	call   0x140020830
   14001fb6f:	mov    r12,rax
   14001fb72:	jmp    0x14001fb77
   14001fb74:	mov    r12,rsi
   14001fb77:	lea    rcx,[rbp-0x28]
   14001fb7b:	call   0x140005ad0
   14001fb80:	nop
   14001fb81:	mov    DWORD PTR [rbp-0x8],0x4
   14001fb88:	lea    rcx,[rbp-0x28]
   14001fb8c:	call   0x14000ef00
   14001fb91:	nop
   14001fb92:	lea    rdx,[rbp+0x0]
   14001fb96:	lea    rcx,[rbp-0x28]
   14001fb9a:	call   0x14000fe70
   14001fb9f:	nop
   14001fba0:	mov    rdx,rax
   14001fba3:	lea    rcx,[rbp-0x78]
   14001fba7:	call   0x1400029d0
   14001fbac:	nop
   14001fbad:	cmp    QWORD PTR [rbp+0x18],0x10
   14001fbb2:	jb     0x14001fbbd
   14001fbb4:	mov    rcx,QWORD PTR [rbp+0x0]
   14001fbb8:	call   0x1400330c0
   14001fbbd:	mov    r14d,0x2
   14001fbc3:	lea    rcx,[rbp-0x28]
   14001fbc7:	call   0x14000ee90
   14001fbcc:	jmp    0x14001fe4f
   14001fbd1:	mov    ecx,0xfb8
   14001fbd6:	call   0x1400331a0
   14001fbdb:	mov    QWORD PTR [rsp+0x20],rax
   14001fbe0:	test   rax,rax
   14001fbe3:	je     0x14001fbf4
   14001fbe5:	xor    edx,edx
   14001fbe7:	mov    rcx,rax
   14001fbea:	call   0x140020830
   14001fbef:	mov    r12,rax
   14001fbf2:	jmp    0x14001fbf7
   14001fbf4:	mov    r12,rsi
   14001fbf7:	mov    QWORD PTR [rsp+0x40],rsi
   14001fbfc:	mov    ecx,0x50
   14001fc01:	call   0x1400331a0
   14001fc06:	test   rax,rax
   14001fc09:	je     0x14001ffef
   14001fc0f:	mov    QWORD PTR [rsp+0x38],rax
   14001fc14:	mov    QWORD PTR [rax],rax
   14001fc17:	mov    rax,QWORD PTR [rsp+0x38]
   14001fc1c:	mov    QWORD PTR [rax+0x8],rax
   14001fc20:	mov    rax,QWORD PTR [rsp+0x38]
   14001fc25:	mov    QWORD PTR [rax+0x10],rax
   14001fc29:	mov    rax,QWORD PTR [rsp+0x38]
   14001fc2e:	mov    BYTE PTR [rax+0x48],0x1
   14001fc32:	mov    rax,QWORD PTR [rsp+0x38]
   14001fc37:	mov    BYTE PTR [rax+0x49],0x1
   14001fc3b:	mov    DWORD PTR [rsp+0x50],esi
   14001fc3f:	lea    rcx,[rsp+0x30]
   14001fc44:	call   0x14000ef00
   14001fc49:	nop
   14001fc4a:	lea    rdx,[rbp-0x28]
   14001fc4e:	lea    rcx,[rsp+0x30]
   14001fc53:	call   0x14000fe70
   14001fc58:	mov    rdi,rax
   14001fc5b:	lea    rax,[rbp-0x78]
   14001fc5f:	cmp    rax,rdi
   14001fc62:	je     0x14001fcc9
   14001fc64:	cmp    QWORD PTR [rbp-0x60],0x10
   14001fc69:	jb     0x14001fc74
   14001fc6b:	mov    rcx,QWORD PTR [rbp-0x78]
   14001fc6f:	call   0x1400330c0
   14001fc74:	mov    QWORD PTR [rbp-0x60],0xf
   14001fc7c:	mov    QWORD PTR [rbp-0x68],rsi
   14001fc80:	mov    BYTE PTR [rbp-0x78],0x0
   14001fc84:	cmp    QWORD PTR [rdi+0x18],0x10
   14001fc89:	jae    0x14001fca0
   14001fc8b:	mov    r8,QWORD PTR [rdi+0x10]
   14001fc8f:	inc    r8
   14001fc92:	mov    rdx,rdi
   14001fc95:	lea    rcx,[rbp-0x78]
   14001fc99:	call   0x140033260
   14001fc9e:	jmp    0x14001fcaa
   14001fca0:	mov    rax,QWORD PTR [rdi]
   14001fca3:	mov    QWORD PTR [rbp-0x78],rax
   14001fca7:	mov    QWORD PTR [rdi],rsi
   14001fcaa:	mov    rax,QWORD PTR [rdi+0x10]
   14001fcae:	mov    QWORD PTR [rbp-0x68],rax
   14001fcb2:	mov    rax,QWORD PTR [rdi+0x18]
   14001fcb6:	mov    QWORD PTR [rbp-0x60],rax
   14001fcba:	mov    QWORD PTR [rdi+0x18],0xf
   14001fcc2:	mov    QWORD PTR [rdi+0x10],rsi
   14001fcc6:	mov    BYTE PTR [rdi],0x0
   14001fcc9:	cmp    QWORD PTR [rbp-0x10],0x10
   14001fcce:	jb     0x14001fcda
   14001fcd0:	mov    rcx,QWORD PTR [rbp-0x28]
   14001fcd4:	call   0x1400330c0
   14001fcd9:	nop
   14001fcda:	mov    rax,QWORD PTR [rsp+0x38]
   14001fcdf:	mov    rdi,QWORD PTR [rax+0x8]
   14001fce3:	mov    rbx,rdi
   14001fce6:	cmp    BYTE PTR [rdi+0x49],0x0
   14001fcea:	jne    0x14001fd37
   14001fcec:	nop    DWORD PTR [rax+0x0]
   14001fcf0:	mov    rdx,QWORD PTR [rbx+0x10]
   14001fcf4:	lea    rcx,[rsp+0x30]
   14001fcf9:	call   0x140011a50
   14001fcfe:	mov    rbx,QWORD PTR [rbx]
   14001fd01:	cmp    QWORD PTR [rdi+0x38],0x10
   14001fd06:	jb     0x14001fd11
   14001fd08:	mov    rcx,QWORD PTR [rdi+0x20]
   14001fd0c:	call   0x1400330c0
   14001fd11:	mov    QWORD PTR [rdi+0x38],0xf
   14001fd19:	mov    QWORD PTR [rdi+0x30],rsi
   14001fd1d:	mov    BYTE PTR [rdi+0x20],0x0
   14001fd21:	mov    rcx,rdi
   14001fd24:	call   0x1400330c0
   14001fd29:	mov    rdi,rbx
   14001fd2c:	cmp    BYTE PTR [rbx+0x49],0x0
   14001fd30:	je     0x14001fcf0
   14001fd32:	mov    rax,QWORD PTR [rsp+0x38]
   14001fd37:	mov    QWORD PTR [rax+0x8],rax
   14001fd3b:	mov    rax,QWORD PTR [rsp+0x38]
   14001fd40:	mov    QWORD PTR [rax],rax
   14001fd43:	mov    rax,QWORD PTR [rsp+0x38]
   14001fd48:	mov    QWORD PTR [rax+0x10],rax
   14001fd4c:	mov    QWORD PTR [rsp+0x40],rsi
   14001fd51:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fd56:	mov    rdi,QWORD PTR [rbx]
   14001fd59:	cmp    rdi,rdi
   14001fd5c:	jne    0x14001fdd3
   14001fd5e:	mov    rdi,QWORD PTR [rbx+0x8]
   14001fd62:	mov    rsi,rdi
   14001fd65:	cmp    BYTE PTR [rdi+0x49],0x0
   14001fd69:	jne    0x14001fdb5
   14001fd6b:	xor    ebx,ebx
   14001fd6d:	nop    DWORD PTR [rax]
   14001fd70:	mov    rdx,QWORD PTR [rsi+0x10]
   14001fd74:	lea    rcx,[rsp+0x30]
   14001fd79:	call   0x140011a50
   14001fd7e:	mov    rsi,QWORD PTR [rsi]
   14001fd81:	cmp    QWORD PTR [rdi+0x38],0x10
   14001fd86:	jb     0x14001fd91
   14001fd88:	mov    rcx,QWORD PTR [rdi+0x20]
   14001fd8c:	call   0x1400330c0
   14001fd91:	mov    QWORD PTR [rdi+0x38],0xf
   14001fd99:	mov    QWORD PTR [rdi+0x30],rbx
   14001fd9d:	mov    BYTE PTR [rdi+0x20],bl
   14001fda0:	mov    rcx,rdi
   14001fda3:	call   0x1400330c0
   14001fda8:	mov    rdi,rsi
   14001fdab:	cmp    BYTE PTR [rsi+0x49],bl
   14001fdae:	je     0x14001fd70
   14001fdb0:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fdb5:	mov    QWORD PTR [rbx+0x8],rbx
   14001fdb9:	mov    rax,QWORD PTR [rsp+0x38]
   14001fdbe:	mov    QWORD PTR [rax],rax
   14001fdc1:	mov    rax,QWORD PTR [rsp+0x38]
   14001fdc6:	mov    QWORD PTR [rax+0x10],rax
   14001fdca:	xor    esi,esi
   14001fdcc:	mov    QWORD PTR [rsp+0x40],rsi
   14001fdd1:	jmp    0x14001fe42
   14001fdd3:	cmp    rdi,rbx
   14001fdd6:	je     0x14001fe47
   14001fdd8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fde0:	mov    r8,rdi
   14001fde3:	cmp    BYTE PTR [rdi+0x49],0x0
   14001fde7:	jne    0x14001fe2e
   14001fde9:	mov    rax,QWORD PTR [rdi+0x10]
   14001fded:	cmp    BYTE PTR [rax+0x49],0x0
   14001fdf1:	jne    0x14001fe0e
   14001fdf3:	mov    rdi,rax
   14001fdf6:	mov    rax,QWORD PTR [rax]
   14001fdf9:	cmp    BYTE PTR [rax+0x49],0x0
   14001fdfd:	jne    0x14001fe2e
   14001fdff:	nop
   14001fe00:	mov    rdi,rax
   14001fe03:	mov    rax,QWORD PTR [rax]
   14001fe06:	cmp    BYTE PTR [rax+0x49],0x0
   14001fe0a:	je     0x14001fe00
   14001fe0c:	jmp    0x14001fe2e
   14001fe0e:	mov    rax,QWORD PTR [rdi+0x8]
   14001fe12:	cmp    BYTE PTR [rax+0x49],0x0
   14001fe16:	jne    0x14001fe2b
   14001fe18:	cmp    rdi,QWORD PTR [rax+0x10]
   14001fe1c:	jne    0x14001fe2b
   14001fe1e:	mov    rdi,rax
   14001fe21:	mov    rax,QWORD PTR [rax+0x8]
   14001fe25:	cmp    BYTE PTR [rax+0x49],0x0
   14001fe29:	je     0x14001fe18
   14001fe2b:	mov    rdi,rax
   14001fe2e:	lea    rdx,[rsp+0x20]
   14001fe33:	lea    rcx,[rsp+0x30]
   14001fe38:	call   0x140011560
   14001fe3d:	cmp    rdi,rbx
   14001fe40:	jne    0x14001fde0
   14001fe42:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fe47:	mov    rcx,rbx
   14001fe4a:	call   0x1400330c0
   14001fe4f:	test   r12,r12
   14001fe52:	je     0x14001ffdd
   14001fe58:	lea    rax,[rbp+0x38]
   14001fe5c:	mov    QWORD PTR [rbp+0x30],rax
   14001fe60:	mov    rdx,r13
   14001fe63:	lea    rcx,[rbp+0x30]
   14001fe67:	call   0x140005a30
   14001fe6c:	nop
   14001fe6d:	mov    QWORD PTR [rbp-0x38],0xf
   14001fe75:	mov    QWORD PTR [rbp-0x40],rsi
   14001fe79:	mov    BYTE PTR [rbp-0x50],0x0
   14001fe7d:	xor    eax,eax
   14001fe7f:	or     rcx,0xffffffffffffffff
   14001fe83:	mov    rdx,QWORD PTR [rbp+0x30]
   14001fe87:	mov    rdi,rdx
   14001fe8a:	repnz scas al,BYTE PTR es:[rdi]
   14001fe8c:	not    rcx
   14001fe8f:	lea    r8,[rcx-0x1]
   14001fe93:	lea    rcx,[rbp-0x50]
   14001fe97:	call   0x140002ba0
   14001fe9c:	nop
   14001fe9d:	lea    rax,[rbp+0x38]
   14001fea1:	mov    rcx,QWORD PTR [rbp+0x30]
   14001fea5:	cmp    rcx,rax
   14001fea8:	je     0x14001feaf
   14001feaa:	call   0x140033594
   14001feaf:	cmp    QWORD PTR [rbp-0x68],0x0
   14001feb4:	je     0x14001fee0
   14001feb6:	mov    r8d,0x1
   14001febc:	lea    rdx,[rip+0x4ba49]        # 0x14006b90c
   14001fec3:	lea    rcx,[rbp-0x50]
   14001fec7:	call   0x140008ee0
   14001fecc:	or     r9,0xffffffffffffffff
   14001fed0:	xor    r8d,r8d
   14001fed3:	lea    rdx,[rbp-0x78]
   14001fed7:	lea    rcx,[rbp-0x50]
   14001fedb:	call   0x140009530
   14001fee0:	lea    rdx,[rbp-0x50]
   14001fee4:	cmp    QWORD PTR [rbp-0x38],0x10
   14001fee9:	cmovae rdx,QWORD PTR [rbp-0x50]
   14001feee:	mov    rax,QWORD PTR [r12]
   14001fef2:	xor    r9d,r9d
   14001fef5:	xor    r8d,r8d
   14001fef8:	mov    rcx,r12
   14001fefb:	call   QWORD PTR [rax+0x8]
   14001fefe:	mov    DWORD PTR [rsp+0x20],esi
   14001ff02:	mov    rax,QWORD PTR [r12]
   14001ff06:	lea    r8,[rsp+0x20]
   14001ff0b:	xor    edx,edx
   14001ff0d:	mov    rcx,r12
   14001ff10:	call   QWORD PTR [rax+0x110]
   14001ff16:	mov    rax,QWORD PTR [r12]
   14001ff1a:	xor    r8d,r8d
   14001ff1d:	xor    edx,edx
   14001ff1f:	mov    rcx,r12
   14001ff22:	call   QWORD PTR [rax+0x88]
   14001ff28:	mov    edi,esi
   14001ff2a:	cmp    DWORD PTR [rsp+0x20],0x0
   14001ff2f:	jbe    0x14001ff9f
   14001ff31:	movsd  xmm6,QWORD PTR [rip+0x57567]        # 0x1400774a0
   14001ff39:	nop    DWORD PTR [rax+0x0]
   14001ff40:	mov    DWORD PTR [rsp+0x28],esi
   14001ff44:	mov    rax,QWORD PTR [r12]
   14001ff48:	lea    r9,[rsp+0x28]
   14001ff4d:	mov    r8d,edi
   14001ff50:	xor    edx,edx
   14001ff52:	mov    rcx,r12
   14001ff55:	call   QWORD PTR [rax+0xe8]
   14001ff5b:	ucomisd xmm6,xmm7
   14001ff5f:	jp     0x14001ff6f
   14001ff61:	jne    0x14001ff6f
   14001ff63:	mov    eax,DWORD PTR [rsp+0x28]
   14001ff67:	mov    r9d,eax
   14001ff6a:	or     r9d,r14d
   14001ff6d:	jmp    0x14001ff7c
   14001ff6f:	mov    r9d,r14d
   14001ff72:	not    r9d
   14001ff75:	mov    eax,DWORD PTR [rsp+0x28]
   14001ff79:	and    r9d,eax
   14001ff7c:	cmp    r9d,eax
   14001ff7f:	je     0x14001ff97
   14001ff81:	mov    rax,QWORD PTR [r12]
   14001ff85:	mov    r8d,edi
   14001ff88:	xor    edx,edx
   14001ff8a:	mov    rcx,r12
   14001ff8d:	call   QWORD PTR [rax+0xe0]
   14001ff93:	movzx  r15d,al
   14001ff97:	inc    edi
   14001ff99:	cmp    edi,DWORD PTR [rsp+0x20]
   14001ff9d:	jb     0x14001ff40
   14001ff9f:	mov    rax,QWORD PTR [r12]
   14001ffa3:	xor    r8d,r8d
   14001ffa6:	lea    edx,[r8+0x1]
   14001ffaa:	mov    rcx,r12
   14001ffad:	call   QWORD PTR [rax+0x88]
   14001ffb3:	mov    rax,QWORD PTR [r12]
   14001ffb7:	mov    rcx,r12
   14001ffba:	call   QWORD PTR [rax+0x10]
   14001ffbd:	mov    rax,QWORD PTR [r12]
   14001ffc1:	mov    edx,0x1
   14001ffc6:	mov    rcx,r12
   14001ffc9:	call   QWORD PTR [rax]
   14001ffcb:	nop
   14001ffcc:	cmp    QWORD PTR [rbp-0x38],0x10
   14001ffd1:	jb     0x14001ffdd
   14001ffd3:	mov    rcx,QWORD PTR [rbp-0x50]
   14001ffd7:	call   0x1400330c0
   14001ffdc:	nop
   14001ffdd:	cmp    QWORD PTR [rbp-0x60],0x10
   14001ffe2:	jb     0x14002001e
   14001ffe4:	mov    rcx,QWORD PTR [rbp-0x78]
   14001ffe8:	call   0x1400330c0
   14001ffed:	jmp    0x14002001e
   14001ffef:	mov    QWORD PTR [rsp+0x20],rsi
   14001fff4:	lea    rdx,[rsp+0x20]
   14001fff9:	lea    rcx,[rbp-0x50]
   14001fffd:	call   0x140032fd4
   140020002:	lea    rdx,[rip+0x48887]        # 0x140068890
   140020009:	mov    QWORD PTR [rbp-0x50],rdx
   14002000d:	lea    rdx,[rip+0x6340c]        # 0x140083420
   140020014:	lea    rcx,[rbp-0x50]
   140020018:	call   0x140036358
   14002001d:	nop
   14002001e:	movzx  eax,r15b
   140020022:	mov    rcx,QWORD PTR [rbp+0xc0]
   140020029:	xor    rcx,rsp
   14002002c:	call   0x140032f00
   140020031:	lea    r11,[rsp+0x1f0]
   140020039:	mov    rbx,QWORD PTR [r11+0x38]
   14002003d:	mov    rsi,QWORD PTR [r11+0x40]
   140020041:	mov    rdi,QWORD PTR [r11+0x48]
   140020045:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14002004a:	movaps xmm7,XMMWORD PTR [r11-0x20]
   14002004f:	mov    rsp,r11
   140020052:	pop    r15
   140020054:	pop    r14
   140020056:	pop    r13
   140020058:	pop    r12
   14002005a:	pop    rbp
   14002005b:	ret    
   14002005c:	int3   
   14002005d:	int3   
   14002005e:	int3   
   14002005f:	int3   
   140020060:	mov    rax,rsp
   140020063:	push   rbp
   140020064:	push   r12
   140020066:	push   r13
   140020068:	push   r14
   14002006a:	push   r15
   14002006c:	lea    rbp,[rsp-0x70]
   140020071:	sub    rsp,0x170
   140020078:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140020081:	mov    QWORD PTR [rax+0x10],rbx
   140020085:	mov    QWORD PTR [rax+0x18],rsi
   140020089:	mov    QWORD PTR [rax+0x20],rdi
   14002008d:	mov    rax,QWORD PTR [rip+0x65014]        # 0x1400850a8
   140020094:	xor    rax,rsp
   140020097:	mov    QWORD PTR [rbp+0x60],rax
   14002009b:	mov    r13,rcx
   14002009e:	xor    r14b,r14b
   1400200a1:	xor    r15d,r15d
   1400200a4:	mov    QWORD PTR [rcx],r15
   1400200a7:	lea    rsi,[rip+0x4b7d2]        # 0x14006b880
   1400200ae:	test   rsi,rsi
   1400200b1:	je     0x140020553
   1400200b7:	mov    ecx,0xfb8
   1400200bc:	call   0x1400331a0
   1400200c1:	mov    QWORD PTR [rsp+0x50],rax
   1400200c6:	test   rax,rax
   1400200c9:	je     0x1400200da
   1400200cb:	xor    edx,edx
   1400200cd:	mov    rcx,rax
   1400200d0:	call   0x140020830
   1400200d5:	mov    rbx,rax
   1400200d8:	jmp    0x1400200dd
   1400200da:	mov    rbx,r15
   1400200dd:	test   rbx,rbx
   1400200e0:	je     0x140020553
   1400200e6:	mov    QWORD PTR [rsp+0x38],r15
   1400200eb:	mov    ecx,0x50
   1400200f0:	call   0x1400331a0
   1400200f5:	test   rax,rax
   1400200f8:	je     0x140020521
   1400200fe:	mov    QWORD PTR [rsp+0x30],rax
   140020103:	mov    QWORD PTR [rax],rax
   140020106:	mov    rax,QWORD PTR [rsp+0x30]
   14002010b:	mov    QWORD PTR [rax+0x8],rax
   14002010f:	mov    rax,QWORD PTR [rsp+0x30]
   140020114:	mov    QWORD PTR [rax+0x10],rax
   140020118:	mov    rax,QWORD PTR [rsp+0x30]
   14002011d:	mov    BYTE PTR [rax+0x48],0x1
   140020121:	mov    rax,QWORD PTR [rsp+0x30]
   140020126:	mov    BYTE PTR [rax+0x49],0x1
   14002012a:	mov    DWORD PTR [rsp+0x48],r15d
   14002012f:	lea    rcx,[rsp+0x28]
   140020134:	call   0x14000ef00
   140020139:	nop
   14002013a:	lea    rdx,[rbp-0x60]
   14002013e:	lea    rcx,[rsp+0x28]
   140020143:	call   0x14000fe70
   140020148:	nop
   140020149:	lea    rax,[rbp-0x28]
   14002014d:	mov    QWORD PTR [rbp-0x30],rax
   140020151:	mov    rcx,rsi
   140020154:	call   QWORD PTR [rip+0x48286]        # 0x1400683e0
   14002015a:	lea    edi,[rax+0x1]
   14002015d:	lea    r8,[rbp-0x28]
   140020161:	mov    edx,edi
   140020163:	lea    rcx,[rbp-0x30]
   140020167:	call   0x140002f80
   14002016c:	movsxd rdx,edi
   14002016f:	mov    r9,rdx
   140020172:	mov    r8,rsi
   140020175:	mov    rcx,QWORD PTR [rbp-0x30]
   140020179:	call   0x140033ccc
   14002017e:	test   eax,eax
   140020180:	je     0x1400201b7
   140020182:	cmp    eax,0xc
   140020185:	je     0x1400201ac
   140020187:	cmp    eax,0x16
   14002018a:	je     0x1400201a1
   14002018c:	cmp    eax,0x22
   14002018f:	je     0x1400201a1
   140020191:	cmp    eax,0x50
   140020194:	je     0x1400201b7
   140020196:	mov    ecx,0x80004005
   14002019b:	call   0x1400025f0
   1400201a0:	int3   
   1400201a1:	mov    ecx,0x80070057
   1400201a6:	call   0x1400025f0
   1400201ab:	int3   
   1400201ac:	mov    ecx,0x8007000e
   1400201b1:	call   0x1400025f0
   1400201b6:	nop
   1400201b7:	mov    QWORD PTR [rbp-0x70],0xf
   1400201bf:	mov    QWORD PTR [rbp-0x78],r15
   1400201c3:	mov    BYTE PTR [rsp+0x78],0x0
   1400201c8:	xor    eax,eax
   1400201ca:	or     r12,0xffffffffffffffff
   1400201ce:	mov    rcx,r12
   1400201d1:	mov    rdx,QWORD PTR [rbp-0x30]
   1400201d5:	mov    rdi,rdx
   1400201d8:	repnz scas al,BYTE PTR es:[rdi]
   1400201da:	not    rcx
   1400201dd:	lea    r8,[rcx-0x1]
   1400201e1:	lea    rcx,[rsp+0x78]
   1400201e6:	call   0x140002ba0
   1400201eb:	nop
   1400201ec:	lea    rax,[rbp-0x28]
   1400201f0:	mov    rcx,QWORD PTR [rbp-0x30]
   1400201f4:	cmp    rcx,rax
   1400201f7:	je     0x1400201fe
   1400201f9:	call   0x140033594
   1400201fe:	cmp    QWORD PTR [rbp-0x50],0x0
   140020203:	je     0x1400202eb
   140020209:	mov    r8d,0x1
   14002020f:	lea    rdx,[rip+0x4b6f6]        # 0x14006b90c
   140020216:	lea    rcx,[rsp+0x78]
   14002021b:	call   0x140008ee0
   140020220:	mov    rsi,r12
   140020223:	mov    rax,QWORD PTR [rbp-0x50]
   140020227:	cmp    rax,0xffffffffffffffff
   14002022b:	cmovb  rsi,rax
   14002022f:	mov    rcx,QWORD PTR [rbp-0x78]
   140020233:	sub    r12,rcx
   140020236:	cmp    r12,rsi
   140020239:	ja     0x140020248
   14002023b:	lea    rcx,[rip+0x4b10e]        # 0x14006b350
   140020242:	call   0x140032d00
   140020247:	int3   
   140020248:	test   rsi,rsi
   14002024b:	je     0x1400202eb
   140020251:	lea    rdi,[rcx+rsi*1]
   140020255:	cmp    rdi,0xfffffffffffffffe
   140020259:	jbe    0x140020268
   14002025b:	lea    rcx,[rip+0x4b0ee]        # 0x14006b350
   140020262:	call   0x140032d00
   140020267:	int3   
   140020268:	cmp    QWORD PTR [rbp-0x70],rdi
   14002026c:	jae    0x140020280
   14002026e:	mov    r8,rcx
   140020271:	mov    rdx,rdi
   140020274:	lea    rcx,[rsp+0x78]
   140020279:	call   0x140002e40
   14002027e:	jmp    0x14002029c
   140020280:	test   rdi,rdi
   140020283:	jne    0x1400202a3
   140020285:	mov    QWORD PTR [rbp-0x78],r15
   140020289:	lea    rax,[rsp+0x78]
   14002028e:	cmp    QWORD PTR [rbp-0x70],0x10
   140020293:	cmovae rax,QWORD PTR [rsp+0x78]
   140020299:	mov    BYTE PTR [rax],dil
   14002029c:	mov    rcx,QWORD PTR [rbp-0x78]
   1400202a0:	test   rdi,rdi
   1400202a3:	setne  al
   1400202a6:	test   al,al
   1400202a8:	je     0x1400202eb
   1400202aa:	lea    rdx,[rbp-0x60]
   1400202ae:	cmp    QWORD PTR [rbp-0x48],0x10
   1400202b3:	cmovae rdx,QWORD PTR [rbp-0x60]
   1400202b8:	lea    rax,[rsp+0x78]
   1400202bd:	cmp    QWORD PTR [rbp-0x70],0x10
   1400202c2:	cmovae rax,QWORD PTR [rsp+0x78]
   1400202c8:	add    rcx,rax
   1400202cb:	mov    r8,rsi
   1400202ce:	call   0x140033260
   1400202d3:	mov    QWORD PTR [rbp-0x78],rdi
   1400202d7:	lea    rax,[rsp+0x78]
   1400202dc:	cmp    QWORD PTR [rbp-0x70],0x10
   1400202e1:	cmovae rax,QWORD PTR [rsp+0x78]
   1400202e7:	mov    BYTE PTR [rax+rdi*1],0x0
   1400202eb:	lea    rdx,[rsp+0x78]
   1400202f0:	cmp    QWORD PTR [rbp-0x70],0x10
   1400202f5:	cmovae rdx,QWORD PTR [rsp+0x78]
   1400202fb:	mov    rax,QWORD PTR [rbx]
   1400202fe:	xor    r9d,r9d
   140020301:	xor    r8d,r8d
   140020304:	mov    rcx,rbx
   140020307:	call   QWORD PTR [rax+0x8]
   14002030a:	mov    DWORD PTR [rsp+0x20],r15d
   14002030f:	mov    rax,QWORD PTR [rbx]
   140020312:	lea    r9,[rsp+0x20]
   140020317:	xor    r8d,r8d
   14002031a:	xor    edx,edx
   14002031c:	mov    rcx,rbx
   14002031f:	call   QWORD PTR [rax+0xe8]
   140020325:	test   al,al
   140020327:	je     0x140020356
   140020329:	mov    eax,DWORD PTR [rsp+0x20]
   14002032d:	and    eax,0x40
   140020330:	pxor   xmm1,xmm1
   140020334:	cvtsi2sd xmm1,rax
   140020339:	xorpd  xmm0,xmm0
   14002033d:	ucomisd xmm0,xmm1
   140020341:	jp     0x140020345
   140020343:	je     0x140020356
   140020345:	mov    r14b,0x1
   140020348:	movabs rax,0x3ff0000000000000
   140020352:	mov    QWORD PTR [r13+0x0],rax
   140020356:	mov    rax,QWORD PTR [rbx]
   140020359:	mov    rcx,rbx
   14002035c:	call   QWORD PTR [rax+0x10]
   14002035f:	mov    rax,QWORD PTR [rbx]
   140020362:	mov    edx,0x1
   140020367:	mov    rcx,rbx
   14002036a:	call   QWORD PTR [rax]
   14002036c:	nop
   14002036d:	cmp    QWORD PTR [rbp-0x70],0x10
   140020372:	jb     0x14002037e
   140020374:	mov    rcx,QWORD PTR [rsp+0x78]
   140020379:	call   0x1400330c0
   14002037e:	mov    QWORD PTR [rbp-0x70],0xf
   140020386:	mov    QWORD PTR [rbp-0x78],r15
   14002038a:	mov    BYTE PTR [rsp+0x78],0x0
   14002038f:	cmp    QWORD PTR [rbp-0x48],0x10
   140020394:	jb     0x14002039f
   140020396:	mov    rcx,QWORD PTR [rbp-0x60]
   14002039a:	call   0x1400330c0
   14002039f:	mov    QWORD PTR [rbp-0x48],0xf
   1400203a7:	mov    QWORD PTR [rbp-0x50],r15
   1400203ab:	mov    BYTE PTR [rbp-0x60],0x0
   1400203af:	mov    rax,QWORD PTR [rsp+0x30]
   1400203b4:	mov    rdi,QWORD PTR [rax+0x8]
   1400203b8:	mov    rbx,rdi
   1400203bb:	cmp    BYTE PTR [rdi+0x49],0x0
   1400203bf:	jne    0x140020408
   1400203c1:	mov    rdx,QWORD PTR [rbx+0x10]
   1400203c5:	lea    rcx,[rsp+0x28]
   1400203ca:	call   0x140011a50
   1400203cf:	mov    rbx,QWORD PTR [rbx]
   1400203d2:	cmp    QWORD PTR [rdi+0x38],0x10
   1400203d7:	jb     0x1400203e2
   1400203d9:	mov    rcx,QWORD PTR [rdi+0x20]
   1400203dd:	call   0x1400330c0
   1400203e2:	mov    QWORD PTR [rdi+0x38],0xf
   1400203ea:	mov    QWORD PTR [rdi+0x30],r15
   1400203ee:	mov    BYTE PTR [rdi+0x20],0x0
   1400203f2:	mov    rcx,rdi
   1400203f5:	call   0x1400330c0
   1400203fa:	mov    rdi,rbx
   1400203fd:	cmp    BYTE PTR [rbx+0x49],0x0
   140020401:	je     0x1400203c1
   140020403:	mov    rax,QWORD PTR [rsp+0x30]
   140020408:	mov    QWORD PTR [rax+0x8],rax
   14002040c:	mov    rax,QWORD PTR [rsp+0x30]
   140020411:	mov    QWORD PTR [rax],rax
   140020414:	mov    rax,QWORD PTR [rsp+0x30]
   140020419:	mov    QWORD PTR [rax+0x10],rax
   14002041d:	mov    QWORD PTR [rsp+0x38],r15
   140020422:	mov    rbx,QWORD PTR [rsp+0x30]
   140020427:	mov    rdi,QWORD PTR [rbx]
   14002042a:	cmp    rdi,rdi
   14002042d:	jne    0x1400204a3
   14002042f:	mov    rdi,QWORD PTR [rbx+0x8]
   140020433:	mov    rsi,rdi
   140020436:	cmp    BYTE PTR [rdi+0x49],0x0
   14002043a:	jne    0x140020487
   14002043c:	nop    DWORD PTR [rax+0x0]
   140020440:	mov    rdx,QWORD PTR [rsi+0x10]
   140020444:	lea    rcx,[rsp+0x28]
   140020449:	call   0x140011a50
   14002044e:	mov    rsi,QWORD PTR [rsi]
   140020451:	cmp    QWORD PTR [rdi+0x38],0x10
   140020456:	jb     0x140020461
   140020458:	mov    rcx,QWORD PTR [rdi+0x20]
   14002045c:	call   0x1400330c0
   140020461:	mov    QWORD PTR [rdi+0x38],0xf
   140020469:	mov    QWORD PTR [rdi+0x30],r15
   14002046d:	mov    BYTE PTR [rdi+0x20],0x0
   140020471:	mov    rcx,rdi
   140020474:	call   0x1400330c0
   140020479:	mov    rdi,rsi
   14002047c:	cmp    BYTE PTR [rsi+0x49],0x0
   140020480:	je     0x140020440
   140020482:	mov    rbx,QWORD PTR [rsp+0x30]
   140020487:	mov    QWORD PTR [rbx+0x8],rbx
   14002048b:	mov    rax,QWORD PTR [rsp+0x30]
   140020490:	mov    QWORD PTR [rax],rax
   140020493:	mov    rax,QWORD PTR [rsp+0x30]
   140020498:	mov    QWORD PTR [rax+0x10],rax
   14002049c:	mov    QWORD PTR [rsp+0x38],r15
   1400204a1:	jmp    0x140020512
   1400204a3:	cmp    rdi,rbx
   1400204a6:	je     0x140020517
   1400204a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400204b0:	mov    r8,rdi
   1400204b3:	cmp    BYTE PTR [rdi+0x49],0x0
   1400204b7:	jne    0x1400204fe
   1400204b9:	mov    rax,QWORD PTR [rdi+0x10]
   1400204bd:	cmp    BYTE PTR [rax+0x49],0x0
   1400204c1:	jne    0x1400204de
   1400204c3:	mov    rdi,rax
   1400204c6:	mov    rax,QWORD PTR [rax]
   1400204c9:	cmp    BYTE PTR [rax+0x49],0x0
   1400204cd:	jne    0x1400204fe
   1400204cf:	nop
   1400204d0:	mov    rdi,rax
   1400204d3:	mov    rax,QWORD PTR [rax]
   1400204d6:	cmp    BYTE PTR [rax+0x49],0x0
   1400204da:	je     0x1400204d0
   1400204dc:	jmp    0x1400204fe
   1400204de:	mov    rax,QWORD PTR [rdi+0x8]
   1400204e2:	cmp    BYTE PTR [rax+0x49],0x0
   1400204e6:	jne    0x1400204fb
   1400204e8:	cmp    rdi,QWORD PTR [rax+0x10]
   1400204ec:	jne    0x1400204fb
   1400204ee:	mov    rdi,rax
   1400204f1:	mov    rax,QWORD PTR [rax+0x8]
   1400204f5:	cmp    BYTE PTR [rax+0x49],0x0
   1400204f9:	je     0x1400204e8
   1400204fb:	mov    rdi,rax
   1400204fe:	lea    rdx,[rsp+0x50]
   140020503:	lea    rcx,[rsp+0x28]
   140020508:	call   0x140011560
   14002050d:	cmp    rdi,rbx
   140020510:	jne    0x1400204b0
   140020512:	mov    rbx,QWORD PTR [rsp+0x30]
   140020517:	mov    rcx,rbx
   14002051a:	call   0x1400330c0
   14002051f:	jmp    0x140020553
   140020521:	mov    QWORD PTR [rsp+0x50],r15
   140020526:	lea    rdx,[rsp+0x50]
   14002052b:	lea    rcx,[rsp+0x58]
   140020530:	call   0x140032fd4
   140020535:	lea    rdx,[rip+0x48354]        # 0x140068890
   14002053c:	mov    QWORD PTR [rsp+0x58],rdx
   140020541:	lea    rdx,[rip+0x62ed8]        # 0x140083420
   140020548:	lea    rcx,[rsp+0x58]
   14002054d:	call   0x140036358
   140020552:	int3   
   140020553:	movzx  eax,r14b
   140020557:	mov    rcx,QWORD PTR [rbp+0x60]
   14002055b:	xor    rcx,rsp
   14002055e:	call   0x140032f00
   140020563:	lea    r11,[rsp+0x170]
   14002056b:	mov    rbx,QWORD PTR [r11+0x38]
   14002056f:	mov    rsi,QWORD PTR [r11+0x40]
   140020573:	mov    rdi,QWORD PTR [r11+0x48]
   140020577:	mov    rsp,r11
   14002057a:	pop    r15
   14002057c:	pop    r14
   14002057e:	pop    r13
   140020580:	pop    r12
   140020582:	pop    rbp
   140020583:	ret    
   140020584:	int3   
   140020585:	int3   
   140020586:	int3   
   140020587:	int3   
   140020588:	int3   
   140020589:	int3   
   14002058a:	int3   
   14002058b:	int3   
   14002058c:	int3   
   14002058d:	int3   
   14002058e:	int3   
   14002058f:	int3   
   140020590:	test   r8,r8
   140020593:	je     0x1400205a1
   140020595:	dec    edx
   140020597:	jne    0x1400205a1
   140020599:	mov    rcx,r8
   14002059c:	jmp    0x140020060
   1400205a1:	xor    al,al
   1400205a3:	ret    
   1400205a4:	int3   
   1400205a5:	int3   
   1400205a6:	int3   
   1400205a7:	int3   
   1400205a8:	int3   
   1400205a9:	int3   
   1400205aa:	int3   
   1400205ab:	int3   
   1400205ac:	int3   
   1400205ad:	int3   
   1400205ae:	int3   
   1400205af:	int3   
   1400205b0:	cmp    QWORD PTR [rcx+0x908],0x0
   1400205b8:	je     0x1400205c1
   1400205ba:	mov    eax,DWORD PTR [rcx+0x8b0]
   1400205c0:	ret    
   1400205c1:	xor    eax,eax
   1400205c3:	ret    
   1400205c4:	int3   
   1400205c5:	int3   
   1400205c6:	int3   
   1400205c7:	int3   
   1400205c8:	int3   
   1400205c9:	int3   
   1400205ca:	int3   
   1400205cb:	int3   
   1400205cc:	int3   
   1400205cd:	int3   
   1400205ce:	int3   
   1400205cf:	int3   
   1400205d0:	xor    eax,eax
   1400205d2:	mov    edx,0x1fff
   1400205d7:	cmp    QWORD PTR [rcx+0xb70],rax
   1400205de:	cmovne eax,edx
   1400205e1:	ret    
   1400205e2:	int3   
   1400205e3:	int3   
   1400205e4:	int3   
   1400205e5:	int3   
   1400205e6:	int3   
   1400205e7:	int3   
   1400205e8:	int3   
   1400205e9:	int3   
   1400205ea:	int3   
   1400205eb:	int3   
   1400205ec:	int3   
   1400205ed:	int3   
   1400205ee:	int3   
   1400205ef:	int3   
   1400205f0:	rex push rbx
   1400205f2:	sub    rsp,0x20
   1400205f6:	xor    eax,eax
   1400205f8:	mov    QWORD PTR [rdx+0x18],0xf
   140020600:	mov    rbx,rdx
   140020603:	mov    QWORD PTR [rdx+0x10],rax
   140020607:	mov    BYTE PTR [rdx],al
   140020609:	lea    rdx,[rcx+0x8]
   14002060d:	or     r9,0xffffffffffffffff
   140020611:	xor    r8d,r8d
   140020614:	mov    rcx,rbx
   140020617:	mov    DWORD PTR [rsp+0x30],eax
   14002061b:	call   0x140002c70
   140020620:	mov    rax,rbx
   140020623:	add    rsp,0x20
   140020627:	pop    rbx
   140020628:	ret    
   140020629:	int3   
   14002062a:	int3   
   14002062b:	int3   
   14002062c:	int3   
   14002062d:	int3   
   14002062e:	int3   
   14002062f:	int3   
   140020630:	mov    QWORD PTR [rsp+0x10],rbx
   140020635:	mov    QWORD PTR [rsp+0x18],rsi
   14002063a:	push   rdi
   14002063b:	sub    rsp,0x30
   14002063f:	xor    dil,dil
   140020642:	mov    rsi,rdx
   140020645:	mov    rbx,rcx
   140020648:	mov    QWORD PTR [rsp+0x40],0x0
   140020651:	test   rcx,rcx
   140020654:	je     0x1400206f3
   14002065a:	cmp    BYTE PTR [rcx],dil
   14002065d:	je     0x1400206f3
   140020663:	mov    rdx,rcx
   140020666:	lea    r8,[rip+0x4fc73]        # 0x1400702e0
   14002066d:	lea    rcx,[rsp+0x40]
   140020672:	call   0x140035760
   140020677:	mov    rcx,QWORD PTR [rsp+0x40]
   14002067c:	test   rcx,rcx
   14002067f:	je     0x1400206f3
   140020681:	xor    edx,edx
   140020683:	lea    r8d,[rdx+0x2]
   140020687:	call   0x140035d78
   14002068c:	mov    rcx,QWORD PTR [rsp+0x40]
   140020691:	call   0x140035c6c
   140020696:	mov    rcx,QWORD PTR [rsp+0x40]
   14002069b:	xor    r8d,r8d
   14002069e:	xor    edx,edx
   1400206a0:	movsxd rbx,eax
   1400206a3:	call   0x140035d78
   1400206a8:	test   ebx,ebx
   1400206aa:	jle    0x1400206d5
   1400206ac:	mov    rdx,rbx
   1400206af:	mov    rcx,rsi
   1400206b2:	call   0x140027510
   1400206b7:	mov    r9,QWORD PTR [rsp+0x40]
   1400206bc:	mov    rcx,QWORD PTR [rsi]
   1400206bf:	mov    r8d,0x1
   1400206c5:	mov    rdx,rbx
   1400206c8:	call   0x140035a94
   1400206cd:	cmp    rax,0x1
   1400206d1:	sete   dil
   1400206d5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400206da:	call   0x140035e70
   1400206df:	movzx  eax,dil
   1400206e3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400206e8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400206ed:	add    rsp,0x30
   1400206f1:	pop    rdi
   1400206f2:	ret    
   1400206f3:	xor    r9d,r9d
   1400206f6:	lea    rax,[rip+0x4fbeb]        # 0x1400702e8
   1400206fd:	lea    rcx,[rip+0x4fc0c]        # 0x140070310
   140020704:	lea    edx,[r9+0x41]
   140020708:	lea    r8d,[r9+0x1]
   14002070c:	mov    QWORD PTR [rsp+0x28],rbx
   140020711:	mov    QWORD PTR [rsp+0x20],rax
   140020716:	call   0x140003150
   14002071b:	mov    rbx,QWORD PTR [rsp+0x48]
   140020720:	mov    rsi,QWORD PTR [rsp+0x50]
   140020725:	movzx  eax,dil
   140020729:	add    rsp,0x30
   14002072d:	pop    rdi
   14002072e:	ret    
   14002072f:	int3   
   140020730:	rex push rbx
   140020732:	sub    rsp,0x20
   140020736:	mov    rbx,rcx
   140020739:	xor    ecx,ecx
   14002073b:	call   QWORD PTR [rip+0x47f4f]        # 0x140068690
   140020741:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020750:	mov    rcx,QWORD PTR [rbx+0xdb0]
   140020757:	or     edx,0xffffffff
   14002075a:	call   QWORD PTR [rip+0x47a88]        # 0x1400681e8
   140020760:	cmp    DWORD PTR [rbx+0xc68],0x0
   140020767:	jne    0x140020796
   140020769:	test   eax,eax
   14002076b:	jne    0x140020796
   14002076d:	mov    rcx,QWORD PTR [rbx+0x10]
   140020771:	test   rcx,rcx
   140020774:	je     0x140020787
   140020776:	xor    r9d,r9d
   140020779:	xor    r8d,r8d
   14002077c:	mov    edx,0x4be
   140020781:	call   QWORD PTR [rip+0x47ec9]        # 0x140068650
   140020787:	mov    rcx,QWORD PTR [rbx+0xdb0]
   14002078e:	call   QWORD PTR [rip+0x479ec]        # 0x140068180
   140020794:	jmp    0x140020750
   140020796:	call   QWORD PTR [rip+0x47eec]        # 0x140068688
   14002079c:	xor    eax,eax
   14002079e:	add    rsp,0x20
   1400207a2:	pop    rbx
   1400207a3:	ret    
   1400207a4:	int3   
   1400207a5:	int3   
   1400207a6:	int3   
   1400207a7:	int3   
   1400207a8:	int3   
   1400207a9:	int3   
   1400207aa:	int3   
   1400207ab:	int3   
   1400207ac:	int3   
   1400207ad:	int3   
   1400207ae:	int3   
   1400207af:	int3   
   1400207b0:	rex push rbx
   1400207b2:	sub    rsp,0x20
   1400207b6:	mov    rbx,rcx
   1400207b9:	xor    ecx,ecx
   1400207bb:	call   QWORD PTR [rip+0x47ecf]        # 0x140068690
   1400207c1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400207d0:	mov    rcx,QWORD PTR [rbx+0xdd0]
   1400207d7:	or     edx,0xffffffff
   1400207da:	call   QWORD PTR [rip+0x47a08]        # 0x1400681e8
   1400207e0:	cmp    DWORD PTR [rbx+0xc68],0x0
   1400207e7:	jne    0x140020816
   1400207e9:	test   eax,eax
   1400207eb:	jne    0x140020816
   1400207ed:	mov    rcx,QWORD PTR [rbx+0x10]
   1400207f1:	test   rcx,rcx
   1400207f4:	je     0x140020807
   1400207f6:	xor    r9d,r9d
   1400207f9:	xor    r8d,r8d
   1400207fc:	mov    edx,0x4bf
   140020801:	call   QWORD PTR [rip+0x47e49]        # 0x140068650
   140020807:	mov    rcx,QWORD PTR [rbx+0xdd0]
   14002080e:	call   QWORD PTR [rip+0x4796c]        # 0x140068180
   140020814:	jmp    0x1400207d0
   140020816:	call   QWORD PTR [rip+0x47e6c]        # 0x140068688
   14002081c:	xor    eax,eax
   14002081e:	add    rsp,0x20
   140020822:	pop    rbx
   140020823:	ret    
   140020824:	int3   
   140020825:	int3   
   140020826:	int3   
   140020827:	int3   
   140020828:	int3   
   140020829:	int3   
   14002082a:	int3   
   14002082b:	int3   
   14002082c:	int3   
   14002082d:	int3   
   14002082e:	int3   
   14002082f:	int3   
   140020830:	mov    QWORD PTR [rsp+0x8],rcx
   140020835:	push   rbp
   140020836:	push   rsi
   140020837:	push   rdi
   140020838:	push   r12
   14002083a:	push   r13
   14002083c:	sub    rsp,0x40
   140020840:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020849:	mov    QWORD PTR [rsp+0x78],rbx
   14002084e:	movsxd r12,edx
   140020851:	mov    rdi,rcx
   140020854:	xor    r13d,r13d
   140020857:	mov    QWORD PTR [rcx+0x10],r13
   14002085b:	mov    QWORD PTR [rcx+0x20],r13
   14002085f:	mov    DWORD PTR [rcx+0x18],r13d
   140020863:	mov    QWORD PTR [rcx+0x28],r13
   140020867:	mov    DWORD PTR [rcx+0x30],r13d
   14002086b:	lea    rax,[rip+0x4ff36]        # 0x1400707a8
   140020872:	mov    QWORD PTR [rcx],rax
   140020875:	lea    rax,[rip+0x500ac]        # 0x140070928
   14002087c:	mov    QWORD PTR [rcx+0x8],rax
   140020880:	lea    rbx,[rcx+0x38]
   140020884:	mov    QWORD PTR [rsp+0x80],rbx
   14002088c:	mov    rcx,rbx
   14002088f:	call   0x1400663a0
   140020894:	nop
   140020895:	lea    rax,[rip+0x56b3c]        # 0x1400773d8
   14002089c:	mov    QWORD PTR [rbx],rax
   14002089f:	lea    rcx,[rbx+0x910]
   1400208a6:	call   0x140018350
   1400208ab:	mov    QWORD PTR [rbx+0xb70],r13
   1400208b2:	lea    rbx,[rdi+0xbb0]
   1400208b9:	mov    QWORD PTR [rsp+0x80],rbx
   1400208c1:	lea    rax,[rip+0x56ae0]        # 0x1400773a8
   1400208c8:	mov    QWORD PTR [rbx],rax
   1400208cb:	lea    rcx,[rbx+0x10]
   1400208cf:	call   0x140032280
   1400208d4:	nop
   1400208d5:	lea    rcx,[rbx+0x30]
   1400208d9:	call   0x1400300f0
   1400208de:	mov    QWORD PTR [rbx+0x50],r13
   1400208e2:	mov    QWORD PTR [rbx+0x58],r13
   1400208e6:	mov    DWORD PTR [rbx+0x8],0xffffffff
   1400208ed:	lea    rax,[rip+0x56acc]        # 0x1400773c0
   1400208f4:	mov    QWORD PTR [rdi+0xc10],rax
   1400208fb:	mov    QWORD PTR [rdi+0xc18],r13
   140020902:	mov    QWORD PTR [rdi+0xc20],r13
   140020909:	mov    QWORD PTR [rdi+0xc28],rax
   140020910:	mov    QWORD PTR [rdi+0xc30],r13
   140020917:	mov    QWORD PTR [rdi+0xc38],r13
   14002091e:	lea    rcx,[rip+0x65e33]        # 0x140086758
   140020925:	mov    rax,QWORD PTR [rip+0x65e2c]        # 0x140086758
   14002092c:	call   QWORD PTR [rax+0x18]
   14002092f:	add    rax,0x18
   140020933:	mov    QWORD PTR [rdi+0xc40],rax
   14002093a:	lea    rcx,[rip+0x65e17]        # 0x140086758
   140020941:	mov    rax,QWORD PTR [rip+0x65e10]        # 0x140086758
   140020948:	call   QWORD PTR [rax+0x18]
   14002094b:	add    rax,0x18
   14002094f:	mov    QWORD PTR [rdi+0xc48],rax
   140020956:	lea    rcx,[rip+0x65dfb]        # 0x140086758
   14002095d:	mov    rax,QWORD PTR [rip+0x65df4]        # 0x140086758
   140020964:	call   QWORD PTR [rax+0x18]
   140020967:	add    rax,0x18
   14002096b:	mov    QWORD PTR [rdi+0xc50],rax
   140020972:	lea    rcx,[rip+0x65ddf]        # 0x140086758
   140020979:	mov    rax,QWORD PTR [rip+0x65dd8]        # 0x140086758
   140020980:	call   QWORD PTR [rax+0x18]
   140020983:	add    rax,0x18
   140020987:	mov    QWORD PTR [rdi+0xc58],rax
   14002098e:	lea    rcx,[rip+0x65dc3]        # 0x140086758
   140020995:	mov    rax,QWORD PTR [rip+0x65dbc]        # 0x140086758
   14002099c:	call   QWORD PTR [rax+0x18]
   14002099f:	add    rax,0x18
   1400209a3:	mov    QWORD PTR [rdi+0xc70],rax
   1400209aa:	lea    rcx,[rip+0x65da7]        # 0x140086758
   1400209b1:	mov    rax,QWORD PTR [rip+0x65da0]        # 0x140086758
   1400209b8:	call   QWORD PTR [rax+0x18]
   1400209bb:	add    rax,0x18
   1400209bf:	mov    QWORD PTR [rdi+0xc78],rax
   1400209c6:	lea    rcx,[rip+0x65d8b]        # 0x140086758
   1400209cd:	mov    rax,QWORD PTR [rip+0x65d84]        # 0x140086758
   1400209d4:	call   QWORD PTR [rax+0x18]
   1400209d7:	add    rax,0x18
   1400209db:	mov    QWORD PTR [rdi+0xc80],rax
   1400209e2:	lea    rcx,[rip+0x65d6f]        # 0x140086758
   1400209e9:	mov    rax,QWORD PTR [rip+0x65d68]        # 0x140086758
   1400209f0:	call   QWORD PTR [rax+0x18]
   1400209f3:	add    rax,0x18
   1400209f7:	mov    QWORD PTR [rdi+0xc88],rax
   1400209fe:	lea    rcx,[rip+0x65d53]        # 0x140086758
   140020a05:	mov    rax,QWORD PTR [rip+0x65d4c]        # 0x140086758
   140020a0c:	call   QWORD PTR [rax+0x18]
   140020a0f:	add    rax,0x18
   140020a13:	mov    QWORD PTR [rdi+0xc90],rax
   140020a1a:	lea    rcx,[rip+0x65d37]        # 0x140086758
   140020a21:	mov    rax,QWORD PTR [rip+0x65d30]        # 0x140086758
   140020a28:	call   QWORD PTR [rax+0x18]
   140020a2b:	add    rax,0x18
   140020a2f:	mov    QWORD PTR [rdi+0xc98],rax
   140020a36:	lea    rcx,[rip+0x65d1b]        # 0x140086758
   140020a3d:	mov    rax,QWORD PTR [rip+0x65d14]        # 0x140086758
   140020a44:	call   QWORD PTR [rax+0x18]
   140020a47:	add    rax,0x18
   140020a4b:	mov    QWORD PTR [rdi+0xca0],rax
   140020a52:	lea    rcx,[rdi+0xcb8]
   140020a59:	call   0x14002ccc0
   140020a5e:	nop
   140020a5f:	mov    QWORD PTR [rdi+0xdf8],r13
   140020a66:	mov    QWORD PTR [rdi+0xe00],r13
   140020a6d:	mov    DWORD PTR [rdi+0xe08],0x11
   140020a77:	mov    DWORD PTR [rdi+0xe28],r13d
   140020a7e:	mov    DWORD PTR [rdi+0xe2c],0xa
   140020a88:	mov    QWORD PTR [rdi+0xe30],r13
   140020a8f:	mov    QWORD PTR [rdi+0xe38],r13
   140020a96:	mov    DWORD PTR [rdi+0xe0c],0x3f400000
   140020aa0:	mov    DWORD PTR [rdi+0xe10],0x3e800000
   140020aaa:	mov    DWORD PTR [rdi+0xe14],0x40100000
   140020ab4:	xor    eax,eax
   140020ab6:	movss  xmm0,DWORD PTR [rip+0x57cae]        # 0x14007876c
   140020abe:	movabs rcx,0x8000000000000000
   140020ac8:	movss  xmm1,DWORD PTR [rip+0x569c8]        # 0x140077498
   140020ad0:	comiss xmm0,xmm1
   140020ad3:	jbe    0x140020ae1
   140020ad5:	subss  xmm0,xmm1
   140020ad9:	comiss xmm0,xmm1
   140020adc:	jae    0x140020ae1
   140020ade:	mov    rax,rcx
   140020ae1:	cvttss2si rdx,xmm0
   140020ae6:	add    rdx,rax
   140020ae9:	mov    QWORD PTR [rdi+0xe18],rdx
   140020af0:	xor    eax,eax
   140020af2:	movss  xmm0,DWORD PTR [rip+0x57c6e]        # 0x140078768
   140020afa:	comiss xmm0,xmm1
   140020afd:	jbe    0x140020b0b
   140020aff:	subss  xmm0,xmm1
   140020b03:	comiss xmm0,xmm1
   140020b06:	jae    0x140020b0b
   140020b08:	mov    rax,rcx
   140020b0b:	cvttss2si rcx,xmm0
   140020b10:	add    rcx,rax
   140020b13:	mov    QWORD PTR [rdi+0xe20],rcx
   140020b1a:	cmp    rcx,0x11
   140020b1e:	jae    0x140020b27
   140020b20:	mov    QWORD PTR [rdi+0xe20],r13
   140020b27:	mov    QWORD PTR [rdi+0xe40],r13
   140020b2e:	mov    QWORD PTR [rdi+0xe48],r13
   140020b35:	mov    DWORD PTR [rdi+0xe50],0x11
   140020b3f:	mov    DWORD PTR [rdi+0xe70],r13d
   140020b46:	mov    DWORD PTR [rdi+0xe74],0xa
   140020b50:	mov    QWORD PTR [rdi+0xe78],r13
   140020b57:	mov    QWORD PTR [rdi+0xe80],r13
   140020b5e:	mov    DWORD PTR [rdi+0xe54],0x3f400000
   140020b68:	mov    DWORD PTR [rdi+0xe58],0x3e800000
   140020b72:	mov    DWORD PTR [rdi+0xe5c],0x40100000
   140020b7c:	mov    QWORD PTR [rdi+0xe60],rdx
   140020b83:	mov    rax,rcx
   140020b86:	cmp    rcx,0x11
   140020b8a:	cmovb  rax,r13
   140020b8e:	mov    QWORD PTR [rdi+0xe68],rax
   140020b95:	mov    QWORD PTR [rdi+0xe88],r13
   140020b9c:	mov    QWORD PTR [rdi+0xe90],r13
   140020ba3:	mov    DWORD PTR [rdi+0xe98],0x11
   140020bad:	mov    DWORD PTR [rdi+0xeb8],r13d
   140020bb4:	mov    DWORD PTR [rdi+0xebc],0xa
   140020bbe:	mov    QWORD PTR [rdi+0xec0],r13
   140020bc5:	mov    QWORD PTR [rdi+0xec8],r13
   140020bcc:	mov    DWORD PTR [rdi+0xe9c],0x3f400000
   140020bd6:	mov    DWORD PTR [rdi+0xea0],0x3e800000
   140020be0:	mov    DWORD PTR [rdi+0xea4],0x40100000
   140020bea:	mov    QWORD PTR [rdi+0xea8],rdx
   140020bf1:	cmovb  rcx,r13
   140020bf5:	mov    QWORD PTR [rdi+0xeb0],rcx
   140020bfc:	mov    QWORD PTR [rdi+0xed0],r13
   140020c03:	mov    QWORD PTR [rdi+0xed8],r13
   140020c0a:	mov    QWORD PTR [rdi+0xee0],r13
   140020c11:	mov    DWORD PTR [rdi+0xee8],r13d
   140020c18:	lea    rcx,[rdi+0xef8]
   140020c1f:	call   0x140027d00
   140020c24:	nop
   140020c25:	lea    rcx,[rdi+0xf28]
   140020c2c:	call   0x140001060
   140020c31:	nop
   140020c32:	mov    DWORD PTR [rdi+0xc60],r12d
   140020c39:	mov    QWORD PTR [rdi+0xdb0],r13
   140020c40:	mov    QWORD PTR [rdi+0xdb8],r13
   140020c47:	mov    QWORD PTR [rdi+0xdc0],r13
   140020c4e:	mov    QWORD PTR [rdi+0xdc8],r13
   140020c55:	mov    QWORD PTR [rdi+0xca8],r13
   140020c5c:	mov    DWORD PTR [rdi+0xcb0],r13d
   140020c63:	mov    QWORD PTR [rdi+0xdd0],r13
   140020c6a:	mov    QWORD PTR [rdi+0xdd8],r13
   140020c71:	mov    QWORD PTR [rdi+0xde0],r13
   140020c78:	mov    QWORD PTR [rdi+0xde8],r13
   140020c7f:	mov    BYTE PTR [rdi+0xef0],0x1
   140020c86:	mov    DWORD PTR [rdi+0xdf0],r13d
   140020c8d:	mov    QWORD PTR [rdi+0xda8],r13
   140020c94:	mov    QWORD PTR [rdi+0xc64],r13
   140020c9b:	mov    ebx,0x1
   140020ca0:	mov    DWORD PTR [rdi+0xc6c],ebx
   140020ca6:	cmp    r12d,0xe
   140020caa:	ja     0x140020f28
   140020cb0:	lea    rdx,[rip+0xfffffffffffdf349]        # 0x140000000
   140020cb7:	mov    ecx,DWORD PTR [rdx+r12*4+0x20fbc]
   140020cbf:	add    rcx,rdx
   140020cc2:	jmp    rcx
   140020cc4:	lea    rdx,[rip+0x4aa85]        # 0x14006b750
   140020ccb:	mov    r8d,0x26
   140020cd1:	lea    rcx,[rdi+0xc70]
   140020cd8:	call   0x140008d10
   140020cdd:	mov    r8d,0x2e
   140020ce3:	lea    rdx,[rip+0x4edce]        # 0x14006fab8
   140020cea:	lea    rcx,[rdi+0xc88]
   140020cf1:	call   0x140008d10
   140020cf6:	mov    ebx,r13d
   140020cf9:	jmp    0x140020f22
   140020cfe:	mov    r8d,0x2c
   140020d04:	lea    rdx,[rip+0x4e545]        # 0x14006f250
   140020d0b:	lea    rcx,[rdi+0xc70]
   140020d12:	call   0x140008d10
   140020d17:	mov    r8d,0x34
   140020d1d:	lea    rdx,[rip+0x4edc4]        # 0x14006fae8
   140020d24:	lea    rcx,[rdi+0xc88]
   140020d2b:	call   0x140008d10
   140020d30:	mov    ebx,r13d
   140020d33:	jmp    0x140020f22
   140020d38:	mov    r8d,0x2c
   140020d3e:	lea    rdx,[rip+0x4e53b]        # 0x14006f280
   140020d45:	lea    rcx,[rdi+0xc70]
   140020d4c:	call   0x140008d10
   140020d51:	mov    r8d,0x34
   140020d57:	lea    rdx,[rip+0x4edc2]        # 0x14006fb20
   140020d5e:	lea    rcx,[rdi+0xc88]
   140020d65:	call   0x140008d10
   140020d6a:	mov    ebx,r13d
   140020d6d:	jmp    0x140020f22
   140020d72:	mov    r8d,0x28
   140020d78:	lea    rdx,[rip+0x4e531]        # 0x14006f2b0
   140020d7f:	lea    rcx,[rdi+0xc70]
   140020d86:	call   0x140008d10
   140020d8b:	mov    r8d,0x30
   140020d91:	lea    rdx,[rip+0x4edc0]        # 0x14006fb58
   140020d98:	lea    rcx,[rdi+0xc88]
   140020d9f:	call   0x140008d10
   140020da4:	mov    ebx,r13d
   140020da7:	jmp    0x140020f22
   140020dac:	lea    rdx,[rip+0x4f5b5]        # 0x140070368
   140020db3:	jmp    0x140020ccb
   140020db8:	mov    r8d,0x29
   140020dbe:	lea    rdx,[rip+0x4e51b]        # 0x14006f2e0
   140020dc5:	lea    rcx,[rdi+0xc70]
   140020dcc:	call   0x140008d10
   140020dd1:	mov    r8d,0x31
   140020dd7:	lea    rdx,[rip+0x4edb2]        # 0x14006fb90
   140020dde:	jmp    0x140020cea
   140020de3:	mov    r8d,0x29
   140020de9:	lea    rdx,[rip+0x4f5a0]        # 0x140070390
   140020df0:	lea    rcx,[rdi+0xc70]
   140020df7:	call   0x140008d10
   140020dfc:	mov    r8d,0x31
   140020e02:	lea    rdx,[rip+0x4ed87]        # 0x14006fb90
   140020e09:	jmp    0x140020f16
   140020e0e:	mov    r8d,0x26
   140020e14:	lea    rdx,[rip+0x4d9ed]        # 0x14006e808
   140020e1b:	lea    rcx,[rdi+0xc70]
   140020e22:	call   0x140008d10
   140020e27:	mov    r8d,0x2e
   140020e2d:	lea    rdx,[rip+0x4ed94]        # 0x14006fbc8
   140020e34:	jmp    0x140020f16
   140020e39:	mov    r8d,0x28
   140020e3f:	lea    rdx,[rip+0x4e4ca]        # 0x14006f310
   140020e46:	lea    rcx,[rdi+0xc70]
   140020e4d:	call   0x140008d10
   140020e52:	mov    r8d,0x30
   140020e58:	lea    rdx,[rip+0x4ed99]        # 0x14006fbf8
   140020e5f:	jmp    0x140020f16
   140020e64:	mov    r8d,0x2d
   140020e6a:	lea    rdx,[rip+0x4e4cf]        # 0x14006f340
   140020e71:	lea    rcx,[rdi+0xc70]
   140020e78:	call   0x140008d10
   140020e7d:	mov    r8d,0x35
   140020e83:	lea    rdx,[rip+0x4edd6]        # 0x14006fc60
   140020e8a:	jmp    0x140020f16
   140020e8f:	mov    r8d,0x2d
   140020e95:	lea    rdx,[rip+0x4e4d4]        # 0x14006f370
   140020e9c:	lea    rcx,[rdi+0xc70]
   140020ea3:	call   0x140008d10
   140020ea8:	mov    r8d,0x35
   140020eae:	lea    rdx,[rip+0x4ede3]        # 0x14006fc98
   140020eb5:	jmp    0x140020f16
   140020eb7:	mov    r8d,0x27
   140020ebd:	lea    rdx,[rip+0x4e4dc]        # 0x14006f3a0
   140020ec4:	lea    rcx,[rdi+0xc70]
   140020ecb:	call   0x140008d10
   140020ed0:	mov    r8d,0x2f
   140020ed6:	lea    rdx,[rip+0x4ed53]        # 0x14006fc30
   140020edd:	lea    rcx,[rdi+0xc88]
   140020ee4:	call   0x140008d10
   140020ee9:	mov    ebx,0x2
   140020eee:	jmp    0x140020f22
   140020ef0:	mov    r8d,0x2a
   140020ef6:	lea    rdx,[rip+0x4e4cb]        # 0x14006f3c8
   140020efd:	lea    rcx,[rdi+0xc70]
   140020f04:	call   0x140008d10
   140020f09:	mov    r8d,0x32
   140020f0f:	lea    rdx,[rip+0x4edba]        # 0x14006fcd0
   140020f16:	lea    rcx,[rdi+0xc88]
   140020f1d:	call   0x140008d10
   140020f22:	mov    DWORD PTR [rdi+0xbb8],ebx
   140020f28:	mov    rbp,QWORD PTR [rdi+0xc70]
   140020f2f:	cmp    DWORD PTR [rbp-0x10],0x0
   140020f33:	je     0x140020f9f
   140020f35:	mov    ecx,DWORD PTR [rdi+0xc64]
   140020f3b:	mov    eax,ecx
   140020f3d:	and    eax,0x2
   140020f40:	cmp    al,0x2
   140020f42:	jne    0x140020f4b
   140020f44:	mov    ebx,0x200
   140020f49:	jmp    0x140020f5c
   140020f4b:	and    cl,0x4
   140020f4e:	mov    ebx,r13d
   140020f51:	mov    eax,0x100
   140020f56:	cmp    cl,0x4
   140020f59:	cmove  ebx,eax
   140020f5c:	lea    rsi,[rdi+0xc30]
   140020f63:	mov    rcx,QWORD PTR [rsi]
   140020f66:	test   rcx,rcx
   140020f69:	je     0x140020f7b
   140020f6b:	call   QWORD PTR [rip+0x470d7]        # 0x140068048
   140020f71:	mov    QWORD PTR [rsi],r13
   140020f74:	mov    QWORD PTR [rdi+0xc38],r13
   140020f7b:	mov    QWORD PTR [rsi],r13
   140020f7e:	or     ebx,0x20017
   140020f84:	mov    QWORD PTR [rsp+0x20],rsi
   140020f89:	mov    r9d,ebx
   140020f8c:	xor    r8d,r8d
   140020f8f:	mov    rdx,rbp
   140020f92:	mov    rcx,0xffffffff80000002
   140020f99:	call   QWORD PTR [rip+0x470b1]        # 0x140068050
   140020f9f:	mov    rcx,rdi
   140020fa2:	call   0x140022630
   140020fa7:	nop
   140020fa8:	mov    rax,rdi
   140020fab:	mov    rbx,QWORD PTR [rsp+0x78]
   140020fb0:	add    rsp,0x40
   140020fb4:	pop    r13
   140020fb6:	pop    r12
   140020fb8:	pop    rdi
   140020fb9:	pop    rsi
   140020fba:	pop    rbp
   140020fbb:	ret    
   140020fbc:	(bad)  
   140020fbd:	or     al,0x2
   140020fbf:	add    BYTE PTR [rbp+rcx*1+0xdb80002],ch
   140020fc6:	add    al,BYTE PTR [rax]
   140020fc8:	jrcxz  0x140020fd7
   140020fca:	add    al,BYTE PTR [rax]
   140020fcc:	(bad)  
   140020fcd:	(bad)  
   140020fce:	add    al,BYTE PTR [rax]
   140020fd0:	mov    bh,0xe
   140020fd2:	add    al,BYTE PTR [rax]
   140020fd4:	jb     0x140020fe3
   140020fd6:	add    al,BYTE PTR [rax]
   140020fd8:	lock (bad) 
   140020fda:	add    al,BYTE PTR [rax]
   140020fdc:	dec    BYTE PTR [rdx+rax*1]
   140020fdf:	add    BYTE PTR [rax],bh
   140020fe1:	or     eax,0xf280002
   140020fe6:	add    al,BYTE PTR [rax]
   140020fe8:	(bad)  
   140020fe9:	or     al,0x2
   140020feb:	add    BYTE PTR [rsi+rcx*1+0x2],ah
   140020fef:	add    BYTE PTR [rcx],bh
   140020ff1:	(bad)  
   140020ff2:	add    al,BYTE PTR [rax]
   140020ff4:	(bad)  
   140020ff5:	(bad)  
   140020ff6:	add    al,BYTE PTR [rax]
   140020ff8:	int3   
   140020ff9:	int3   
   140020ffa:	int3   
   140020ffb:	int3   
   140020ffc:	int3   
   140020ffd:	int3   
   140020ffe:	int3   
   140020fff:	int3   
   140021000:	mov    QWORD PTR [rsp+0x8],rbx
   140021005:	push   rdi
   140021006:	sub    rsp,0x20
   14002100a:	mov    ebx,edx
   14002100c:	mov    rdi,rcx
   14002100f:	call   0x140021060
   140021014:	test   bl,0x1
   140021017:	je     0x140021021
   140021019:	mov    rcx,rdi
   14002101c:	call   0x1400330c0
   140021021:	mov    rax,rdi
   140021024:	mov    rbx,QWORD PTR [rsp+0x30]
   140021029:	add    rsp,0x20
   14002102d:	pop    rdi
   14002102e:	ret    
   14002102f:	int3   
   140021030:	rex push rbx
   140021032:	sub    rsp,0x20
   140021036:	mov    rbx,rcx
   140021039:	call   0x140027960
   14002103e:	mov    rcx,QWORD PTR [rbx]
   140021041:	call   0x1400330c0
   140021046:	mov    QWORD PTR [rbx],0x0
   14002104d:	add    rsp,0x20
   140021051:	pop    rbx
   140021052:	ret    
   140021053:	int3   
   140021054:	int3   
   140021055:	int3   
   140021056:	int3   
   140021057:	int3   
   140021058:	int3   
   140021059:	int3   
   14002105a:	int3   
   14002105b:	int3   
   14002105c:	int3   
   14002105d:	int3   
   14002105e:	int3   
   14002105f:	int3   
   140021060:	mov    QWORD PTR [rsp+0x8],rcx
   140021065:	push   rdi
   140021066:	sub    rsp,0x30
   14002106a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021073:	mov    QWORD PTR [rsp+0x48],rbx
   140021078:	mov    QWORD PTR [rsp+0x50],rsi
   14002107d:	mov    rdi,rcx
   140021080:	lea    rax,[rip+0x4f721]        # 0x1400707a8
   140021087:	mov    QWORD PTR [rcx],rax
   14002108a:	lea    rax,[rip+0x4f897]        # 0x140070928
   140021091:	mov    QWORD PTR [rcx+0x8],rax
   140021095:	call   0x140021340
   14002109a:	nop
   14002109b:	lea    rcx,[rdi+0xf28]
   1400210a2:	call   0x140001210
   1400210a7:	nop
   1400210a8:	lea    rcx,[rdi+0xef8]
   1400210af:	call   0x140027960
   1400210b4:	mov    rcx,QWORD PTR [rdi+0xef8]
   1400210bb:	call   0x1400330c0
   1400210c0:	xor    esi,esi
   1400210c2:	mov    QWORD PTR [rdi+0xef8],rsi
   1400210c9:	mov    rcx,QWORD PTR [rdi+0xed0]
   1400210d0:	test   rcx,rcx
   1400210d3:	je     0x1400210db
   1400210d5:	call   0x140033594
   1400210da:	nop
   1400210db:	lea    rcx,[rdi+0xe88]
   1400210e2:	call   0x140028e60
   1400210e7:	nop
   1400210e8:	lea    rcx,[rdi+0xe40]
   1400210ef:	call   0x140028e60
   1400210f4:	nop
   1400210f5:	lea    rcx,[rdi+0xdf8]
   1400210fc:	call   0x140028e40
   140021101:	nop
   140021102:	lea    rcx,[rdi+0xcb8]
   140021109:	call   0x14002cdd0
   14002110e:	nop
   14002110f:	mov    rdx,QWORD PTR [rdi+0xca0]
   140021116:	sub    rdx,0x18
   14002111a:	or     ebx,0xffffffff
   14002111d:	mov    eax,ebx
   14002111f:	lock xadd DWORD PTR [rdx+0x10],eax
   140021124:	dec    eax
   140021126:	test   eax,eax
   140021128:	jg     0x140021134
   14002112a:	mov    rcx,QWORD PTR [rdx]
   14002112d:	mov    rax,QWORD PTR [rcx]
   140021130:	call   QWORD PTR [rax+0x8]
   140021133:	nop
   140021134:	mov    rdx,QWORD PTR [rdi+0xc98]
   14002113b:	sub    rdx,0x18
   14002113f:	mov    eax,ebx
   140021141:	lock xadd DWORD PTR [rdx+0x10],eax
   140021146:	dec    eax
   140021148:	test   eax,eax
   14002114a:	jg     0x140021156
   14002114c:	mov    rcx,QWORD PTR [rdx]
   14002114f:	mov    rax,QWORD PTR [rcx]
   140021152:	call   QWORD PTR [rax+0x8]
   140021155:	nop
   140021156:	mov    rdx,QWORD PTR [rdi+0xc90]
   14002115d:	sub    rdx,0x18
   140021161:	mov    eax,ebx
   140021163:	lock xadd DWORD PTR [rdx+0x10],eax
   140021168:	dec    eax
   14002116a:	test   eax,eax
   14002116c:	jg     0x140021178
   14002116e:	mov    rcx,QWORD PTR [rdx]
   140021171:	mov    rax,QWORD PTR [rcx]
   140021174:	call   QWORD PTR [rax+0x8]
   140021177:	nop
   140021178:	mov    rdx,QWORD PTR [rdi+0xc88]
   14002117f:	sub    rdx,0x18
   140021183:	mov    eax,ebx
   140021185:	lock xadd DWORD PTR [rdx+0x10],eax
   14002118a:	dec    eax
   14002118c:	test   eax,eax
   14002118e:	jg     0x14002119a
   140021190:	mov    rcx,QWORD PTR [rdx]
   140021193:	mov    rax,QWORD PTR [rcx]
   140021196:	call   QWORD PTR [rax+0x8]
   140021199:	nop
   14002119a:	mov    rdx,QWORD PTR [rdi+0xc80]
   1400211a1:	sub    rdx,0x18
   1400211a5:	mov    eax,ebx
   1400211a7:	lock xadd DWORD PTR [rdx+0x10],eax
   1400211ac:	dec    eax
   1400211ae:	test   eax,eax
   1400211b0:	jg     0x1400211bc
   1400211b2:	mov    rcx,QWORD PTR [rdx]
   1400211b5:	mov    rax,QWORD PTR [rcx]
   1400211b8:	call   QWORD PTR [rax+0x8]
   1400211bb:	nop
   1400211bc:	mov    rdx,QWORD PTR [rdi+0xc78]
   1400211c3:	sub    rdx,0x18
   1400211c7:	mov    eax,ebx
   1400211c9:	lock xadd DWORD PTR [rdx+0x10],eax
   1400211ce:	dec    eax
   1400211d0:	test   eax,eax
   1400211d2:	jg     0x1400211de
   1400211d4:	mov    rcx,QWORD PTR [rdx]
   1400211d7:	mov    rax,QWORD PTR [rcx]
   1400211da:	call   QWORD PTR [rax+0x8]
   1400211dd:	nop
   1400211de:	mov    rdx,QWORD PTR [rdi+0xc70]
   1400211e5:	sub    rdx,0x18
   1400211e9:	mov    eax,ebx
   1400211eb:	lock xadd DWORD PTR [rdx+0x10],eax
   1400211f0:	dec    eax
   1400211f2:	test   eax,eax
   1400211f4:	jg     0x140021200
   1400211f6:	mov    rcx,QWORD PTR [rdx]
   1400211f9:	mov    rax,QWORD PTR [rcx]
   1400211fc:	call   QWORD PTR [rax+0x8]
   1400211ff:	nop
   140021200:	mov    rdx,QWORD PTR [rdi+0xc58]
   140021207:	sub    rdx,0x18
   14002120b:	mov    eax,ebx
   14002120d:	lock xadd DWORD PTR [rdx+0x10],eax
   140021212:	dec    eax
   140021214:	test   eax,eax
   140021216:	jg     0x140021222
   140021218:	mov    rcx,QWORD PTR [rdx]
   14002121b:	mov    rax,QWORD PTR [rcx]
   14002121e:	call   QWORD PTR [rax+0x8]
   140021221:	nop
   140021222:	mov    rdx,QWORD PTR [rdi+0xc50]
   140021229:	sub    rdx,0x18
   14002122d:	mov    eax,ebx
   14002122f:	lock xadd DWORD PTR [rdx+0x10],eax
   140021234:	dec    eax
   140021236:	test   eax,eax
   140021238:	jg     0x140021244
   14002123a:	mov    rcx,QWORD PTR [rdx]
   14002123d:	mov    rax,QWORD PTR [rcx]
   140021240:	call   QWORD PTR [rax+0x8]
   140021243:	nop
   140021244:	mov    rdx,QWORD PTR [rdi+0xc48]
   14002124b:	sub    rdx,0x18
   14002124f:	mov    eax,ebx
   140021251:	lock xadd DWORD PTR [rdx+0x10],eax
   140021256:	dec    eax
   140021258:	test   eax,eax
   14002125a:	jg     0x140021266
   14002125c:	mov    rcx,QWORD PTR [rdx]
   14002125f:	mov    rax,QWORD PTR [rcx]
   140021262:	call   QWORD PTR [rax+0x8]
   140021265:	nop
   140021266:	mov    rdx,QWORD PTR [rdi+0xc40]
   14002126d:	sub    rdx,0x18
   140021271:	lock xadd DWORD PTR [rdx+0x10],ebx
   140021276:	dec    ebx
   140021278:	test   ebx,ebx
   14002127a:	jg     0x140021286
   14002127c:	mov    rcx,QWORD PTR [rdx]
   14002127f:	mov    rax,QWORD PTR [rcx]
   140021282:	call   QWORD PTR [rax+0x8]
   140021285:	nop
   140021286:	lea    rbx,[rip+0x56133]        # 0x1400773c0
   14002128d:	mov    QWORD PTR [rdi+0xc28],rbx
   140021294:	mov    rcx,QWORD PTR [rdi+0xc30]
   14002129b:	test   rcx,rcx
   14002129e:	je     0x1400212ad
   1400212a0:	call   QWORD PTR [rip+0x46da2]        # 0x140068048
   1400212a6:	mov    QWORD PTR [rdi+0xc30],rsi
   1400212ad:	mov    QWORD PTR [rdi+0xc38],rsi
   1400212b4:	mov    QWORD PTR [rdi+0xc10],rbx
   1400212bb:	mov    rcx,QWORD PTR [rdi+0xc18]
   1400212c2:	test   rcx,rcx
   1400212c5:	je     0x1400212d4
   1400212c7:	call   QWORD PTR [rip+0x46d7b]        # 0x140068048
   1400212cd:	mov    QWORD PTR [rdi+0xc18],rsi
   1400212d4:	mov    QWORD PTR [rdi+0xc20],rsi
   1400212db:	lea    rcx,[rdi+0xbb0]
   1400212e2:	call   0x140049d10
   1400212e7:	nop
   1400212e8:	lea    rcx,[rdi+0x38]
   1400212ec:	call   0x1400318a0
   1400212f1:	nop
   1400212f2:	lea    rax,[rip+0x4beaf]        # 0x14006d1a8
   1400212f9:	mov    QWORD PTR [rdi+0x8],rax
   1400212fd:	mov    rcx,QWORD PTR [rdi+0x10]
   140021301:	test   rcx,rcx
   140021304:	je     0x140021310
   140021306:	call   QWORD PTR [rip+0x472ac]        # 0x1400685b8
   14002130c:	mov    QWORD PTR [rdi+0x10],rsi
   140021310:	movzx  ecx,WORD PTR [rdi+0x34]
   140021314:	mov    rdx,QWORD PTR [rdi+0x28]
   140021318:	call   QWORD PTR [rip+0x472c2]        # 0x1400685e0
   14002131e:	nop
   14002131f:	lea    rax,[rip+0x4ece2]        # 0x140070008
   140021326:	mov    QWORD PTR [rdi],rax
   140021329:	mov    rbx,QWORD PTR [rsp+0x48]
   14002132e:	mov    rsi,QWORD PTR [rsp+0x50]
   140021333:	add    rsp,0x30
   140021337:	pop    rdi
   140021338:	ret    
   140021339:	int3   
   14002133a:	int3   
   14002133b:	int3   
   14002133c:	int3   
   14002133d:	int3   
   14002133e:	int3   
   14002133f:	int3   
   140021340:	mov    QWORD PTR [rsp+0x8],rcx
   140021345:	push   rbx
   140021346:	sub    rsp,0x30
   14002134a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021353:	mov    rbx,rcx
   140021356:	mov    rcx,QWORD PTR [rcx+0x10]
   14002135a:	test   rcx,rcx
   14002135d:	je     0x140021365
   14002135f:	call   QWORD PTR [rip+0x47253]        # 0x1400685b8
   140021365:	mov    DWORD PTR [rbx+0xc68],0x1
   14002136f:	mov    rcx,QWORD PTR [rbx+0xdb0]
   140021376:	test   rcx,rcx
   140021379:	je     0x140021399
   14002137b:	call   QWORD PTR [rip+0x47077]        # 0x1400683f8
   140021381:	mov    rcx,QWORD PTR [rbx+0xdb0]
   140021388:	call   QWORD PTR [rip+0x4700a]        # 0x140068398
   14002138e:	mov    QWORD PTR [rbx+0xdb0],0x0
   140021399:	mov    rcx,QWORD PTR [rbx+0xdd0]
   1400213a0:	test   rcx,rcx
   1400213a3:	je     0x1400213c3
   1400213a5:	call   QWORD PTR [rip+0x4704d]        # 0x1400683f8
   1400213ab:	mov    rcx,QWORD PTR [rbx+0xdd0]
   1400213b2:	call   QWORD PTR [rip+0x46fe0]        # 0x140068398
   1400213b8:	mov    QWORD PTR [rbx+0xdd0],0x0
   1400213c3:	mov    rcx,QWORD PTR [rbx+0xdb8]
   1400213ca:	test   rcx,rcx
   1400213cd:	je     0x1400213f2
   1400213cf:	mov    edx,0x7d0
   1400213d4:	call   QWORD PTR [rip+0x46e0e]        # 0x1400681e8
   1400213da:	mov    rcx,QWORD PTR [rbx+0xdb8]
   1400213e1:	call   QWORD PTR [rip+0x46fb1]        # 0x140068398
   1400213e7:	mov    QWORD PTR [rbx+0xdb8],0x0
   1400213f2:	mov    rcx,QWORD PTR [rbx+0xdd8]
   1400213f9:	test   rcx,rcx
   1400213fc:	je     0x140021421
   1400213fe:	mov    edx,0x7d0
   140021403:	call   QWORD PTR [rip+0x46ddf]        # 0x1400681e8
   140021409:	mov    rcx,QWORD PTR [rbx+0xdd8]
   140021410:	call   QWORD PTR [rip+0x46f82]        # 0x140068398
   140021416:	mov    QWORD PTR [rbx+0xdd8],0x0
   140021421:	jmp    0x140021428
   140021423:	mov    rbx,QWORD PTR [rsp+0x40]
   140021428:	mov    rcx,rbx
   14002142b:	add    rsp,0x30
   14002142f:	pop    rbx
   140021430:	jmp    0x140021440
   140021435:	int3   
   140021436:	int3   
   140021437:	int3   
   140021438:	int3   
   140021439:	int3   
   14002143a:	int3   
   14002143b:	int3   
   14002143c:	int3   
   14002143d:	int3   
   14002143e:	int3   
   14002143f:	int3   
   140021440:	mov    QWORD PTR [rsp+0x10],rsi
   140021445:	push   rdi
   140021446:	sub    rsp,0x20
   14002144a:	lea    rsi,[rcx+0xdf8]
   140021451:	cmp    QWORD PTR [rsi+0x8],0x0
   140021456:	je     0x140021484
   140021458:	mov    edx,DWORD PTR [rsi+0x10]
   14002145b:	xor    eax,eax
   14002145d:	test   edx,edx
   14002145f:	je     0x140021484
   140021461:	mov    rdi,QWORD PTR [rsi]
   140021464:	mov    rcx,rdi
   140021467:	nop    WORD PTR [rax+rax*1+0x0]
   140021470:	cmp    QWORD PTR [rcx],0x0
   140021474:	jne    0x140021506
   14002147a:	inc    eax
   14002147c:	add    rcx,0x8
   140021480:	cmp    eax,edx
   140021482:	jb     0x140021470
   140021484:	xor    edi,edi
   140021486:	mov    QWORD PTR [rsp+0x30],rbx
   14002148b:	test   rdi,rdi
   14002148e:	je     0x1400214ef
   140021490:	test   rdi,rdi
   140021493:	je     0x14002150f
   140021495:	mov    rbx,QWORD PTR [rdi+0x10]
   140021499:	mov    r9,rdi
   14002149c:	test   rbx,rbx
   14002149f:	jne    0x1400214d4
   1400214a1:	mov    eax,DWORD PTR [rdi+0x18]
   1400214a4:	mov    r8d,DWORD PTR [rsi+0x10]
   1400214a8:	xor    edx,edx
   1400214aa:	div    r8d
   1400214ad:	inc    edx
   1400214af:	movsxd rax,edx
   1400214b2:	shl    rax,0x3
   1400214b6:	cmp    edx,r8d
   1400214b9:	jae    0x1400214d4
   1400214bb:	mov    rcx,QWORD PTR [rsi]
   1400214be:	cmp    QWORD PTR [rax+rcx*1],0x0
   1400214c3:	je     0x1400214c9
   1400214c5:	mov    rbx,QWORD PTR [rax+rcx*1]
   1400214c9:	inc    edx
   1400214cb:	add    rax,0x8
   1400214cf:	test   rbx,rbx
   1400214d2:	je     0x1400214b6
   1400214d4:	mov    rcx,QWORD PTR [r9+0x8]
   1400214d8:	mov    rdi,rbx
   1400214db:	test   rcx,rcx
   1400214de:	je     0x1400214ea
   1400214e0:	mov    rax,QWORD PTR [rcx]
   1400214e3:	mov    edx,0x1
   1400214e8:	call   QWORD PTR [rax]
   1400214ea:	test   rbx,rbx
   1400214ed:	jne    0x140021490
   1400214ef:	mov    rcx,rsi
   1400214f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400214f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400214fc:	add    rsp,0x20
   140021500:	pop    rdi
   140021501:	jmp    0x140028c10
   140021506:	mov    rdi,QWORD PTR [rdi+rax*8]
   14002150a:	jmp    0x140021486
   14002150f:	mov    ecx,0x80004005
   140021514:	call   0x1400025f0
   140021519:	int3   
   14002151a:	int3   
   14002151b:	int3   
   14002151c:	int3   
   14002151d:	int3   
   14002151e:	int3   
   14002151f:	int3   
   140021520:	rex push rbp
   140021522:	push   rsi
   140021523:	push   rdi
   140021524:	push   r12
   140021526:	push   r13
   140021528:	push   r14
   14002152a:	push   r15
   14002152c:	lea    rbp,[rsp-0x2e0]
   140021534:	sub    rsp,0x3e0
   14002153b:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   140021543:	mov    QWORD PTR [rsp+0x430],rbx
   14002154b:	mov    rax,QWORD PTR [rip+0x63b56]        # 0x1400850a8
   140021552:	xor    rax,rsp
   140021555:	mov    QWORD PTR [rbp+0x2d0],rax
   14002155c:	mov    r13,r9
   14002155f:	mov    r15d,r8d
   140021562:	mov    r12,rcx
   140021565:	mov    DWORD PTR [rsp+0x50],0x0
   14002156d:	lea    rbx,[rip+0x49d22]        # 0x14006b296
   140021574:	mov    r10,rbx
   140021577:	test   rdx,rdx
   14002157a:	cmovne r10,rdx
   14002157e:	or     rdi,0xffffffffffffffff
   140021582:	test   r10,r10
   140021585:	jne    0x14002158b
   140021587:	xor    ecx,ecx
   140021589:	jmp    0x14002159f
   14002158b:	xor    eax,eax
   14002158d:	mov    rcx,rdi
   140021590:	mov    rdi,r10
   140021593:	repnz scas al,BYTE PTR es:[rdi]
   140021595:	not    rcx
   140021598:	dec    rcx
   14002159b:	or     rdi,0xffffffffffffffff
   14002159f:	mov    r8d,ecx
   1400215a2:	mov    rdx,r10
   1400215a5:	lea    rcx,[r12+0xc40]
   1400215ad:	call   0x140008d10
   1400215b2:	test   r13,r13
   1400215b5:	cmovne rbx,r13
   1400215b9:	test   rbx,rbx
   1400215bc:	jne    0x1400215c2
   1400215be:	xor    ecx,ecx
   1400215c0:	jmp    0x1400215d2
   1400215c2:	xor    eax,eax
   1400215c4:	mov    rcx,rdi
   1400215c7:	mov    rdi,rbx
   1400215ca:	repnz scas al,BYTE PTR es:[rdi]
   1400215cc:	not    rcx
   1400215cf:	dec    rcx
   1400215d2:	mov    r8d,ecx
   1400215d5:	mov    rdx,rbx
   1400215d8:	lea    rcx,[r12+0xc50]
   1400215e0:	call   0x140008d10
   1400215e5:	mov    rcx,QWORD PTR [r12+0xc40]
   1400215ed:	cmp    DWORD PTR [rcx-0x10],0x0
   1400215f1:	jle    0x1400216ad
   1400215f7:	mov    edx,0x3b
   1400215fc:	call   0x140035448
   140021601:	mov    rdi,rax
   140021604:	test   rax,rax
   140021607:	je     0x1400216ad
   14002160d:	sub    edi,DWORD PTR [r12+0xc40]
   140021615:	js     0x1400216ad
   14002161b:	lea    r8d,[rdi+0x1]
   14002161f:	lea    rdx,[rbp-0x68]
   140021623:	lea    rcx,[r12+0xc40]
   14002162b:	call   0x140014fc0
   140021630:	nop
   140021631:	lea    r14,[r12+0xc48]
   140021639:	mov    rdx,rax
   14002163c:	mov    rcx,r14
   14002163f:	call   0x1400089f0
   140021644:	nop
   140021645:	mov    rdx,QWORD PTR [rbp-0x68]
   140021649:	add    rdx,0xffffffffffffffe8
   14002164d:	or     rbx,0xffffffffffffffff
   140021651:	mov    eax,ebx
   140021653:	lock xadd DWORD PTR [rdx+0x10],eax
   140021658:	dec    eax
   14002165a:	test   eax,eax
   14002165c:	jg     0x140021667
   14002165e:	mov    rcx,QWORD PTR [rdx]
   140021661:	mov    rax,QWORD PTR [rcx]
   140021664:	call   QWORD PTR [rax+0x8]
   140021667:	mov    r8d,edi
   14002166a:	lea    rdx,[rbp-0x50]
   14002166e:	lea    rcx,[r12+0xc40]
   140021676:	call   0x140017360
   14002167b:	nop
   14002167c:	mov    rdx,rax
   14002167f:	lea    rcx,[r12+0xc40]
   140021687:	call   0x1400089f0
   14002168c:	nop
   14002168d:	mov    rdx,QWORD PTR [rbp-0x50]
   140021691:	add    rdx,0xffffffffffffffe8
   140021695:	mov    eax,ebx
   140021697:	lock xadd DWORD PTR [rdx+0x10],eax
   14002169c:	dec    eax
   14002169e:	test   eax,eax
   1400216a0:	jg     0x1400216bd
   1400216a2:	mov    rcx,QWORD PTR [rdx]
   1400216a5:	mov    rax,QWORD PTR [rcx]
   1400216a8:	call   QWORD PTR [rax+0x8]
   1400216ab:	jmp    0x1400216bd
   1400216ad:	lea    r14,[r12+0xc48]
   1400216b5:	mov    rcx,r14
   1400216b8:	call   0x1400087c0
   1400216bd:	mov    DWORD PTR [r12+0xc64],r15d
   1400216c5:	movsxd rax,DWORD PTR [r12+0xc60]
   1400216cd:	cmp    eax,0xe
   1400216d0:	ja     0x14002196e
   1400216d6:	lea    rdx,[rip+0xfffffffffffde923]        # 0x140000000
   1400216dd:	mov    ecx,DWORD PTR [rdx+rax*4+0x22090]
   1400216e4:	add    rcx,rdx
   1400216e7:	jmp    rcx
   1400216e9:	lea    rcx,[r12+0xc58]
   1400216f1:	mov    r8d,0x7
   1400216f7:	lea    rdx,[rip+0x4ecc2]        # 0x1400703c0
   1400216fe:	call   0x140008d10
   140021703:	mov    rdx,QWORD PTR [r12+0xc50]
   14002170b:	cmp    DWORD PTR [rdx-0x10],0x0
   14002170f:	je     0x14002196e
   140021715:	lea    rcx,[rbp+0x70]
   140021719:	call   0x140018350
   14002171e:	nop
   14002171f:	mov    rbx,QWORD PTR [r12+0xc50]
   140021727:	lea    rax,[rbp-0x18]
   14002172b:	mov    QWORD PTR [rbp-0x20],rax
   14002172f:	test   rbx,rbx
   140021732:	jne    0x14002173c
   140021734:	xor    edx,edx
   140021736:	mov    QWORD PTR [rbp-0x20],rdx
   14002173a:	jmp    0x1400217a6
   14002173c:	mov    rcx,rbx
   14002173f:	call   QWORD PTR [rip+0x46c9b]        # 0x1400683e0
   140021745:	lea    edi,[rax+0x1]
   140021748:	lea    r8,[rbp-0x18]
   14002174c:	mov    edx,edi
   14002174e:	lea    rcx,[rbp-0x20]
   140021752:	call   0x140002f80
   140021757:	movsxd rdx,edi
   14002175a:	mov    r9,rdx
   14002175d:	mov    r8,rbx
   140021760:	mov    rcx,QWORD PTR [rbp-0x20]
   140021764:	call   0x140033ccc
   140021769:	test   eax,eax
   14002176b:	je     0x1400217a2
   14002176d:	cmp    eax,0xc
   140021770:	je     0x140021797
   140021772:	cmp    eax,0x16
   140021775:	je     0x14002178c
   140021777:	cmp    eax,0x22
   14002177a:	je     0x14002178c
   14002177c:	cmp    eax,0x50
   14002177f:	je     0x1400217a2
   140021781:	mov    ecx,0x80004005
   140021786:	call   0x1400025f0
   14002178b:	int3   
   14002178c:	mov    ecx,0x80070057
   140021791:	call   0x1400025f0
   140021796:	int3   
   140021797:	mov    ecx,0x8007000e
   14002179c:	call   0x1400025f0
   1400217a1:	int3   
   1400217a2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400217a6:	lea    rcx,[rbp+0x70]
   1400217aa:	call   0x1400185b0
   1400217af:	mov    rdx,QWORD PTR [rbp+0x198]
   1400217b6:	mov    rcx,QWORD PTR [rbp+0x78]
   1400217ba:	test   al,al
   1400217bc:	je     0x1400217e1
   1400217be:	test   rcx,rcx
   1400217c1:	je     0x1400217e1
   1400217c3:	cmp    QWORD PTR [rbp+0x190],0x0
   1400217cb:	je     0x1400217e1
   1400217cd:	test   rdx,rdx
   1400217d0:	je     0x1400217e1
   1400217d2:	cmp    QWORD PTR [rbp+0x1a8],0x0
   1400217da:	je     0x1400217e1
   1400217dc:	mov    dil,0x1
   1400217df:	jmp    0x1400217e4
   1400217e1:	xor    dil,dil
   1400217e4:	lea    r8,[rbp-0x18]
   1400217e8:	mov    rax,QWORD PTR [rbp-0x20]
   1400217ec:	cmp    rax,r8
   1400217ef:	je     0x140021804
   1400217f1:	mov    rcx,rax
   1400217f4:	call   0x140033594
   1400217f9:	mov    rdx,QWORD PTR [rbp+0x198]
   140021800:	mov    rcx,QWORD PTR [rbp+0x78]
   140021804:	test   dil,dil
   140021807:	je     0x14002184d
   140021809:	mov    DWORD PTR [r12+0xc60],0xb
   140021815:	mov    rax,QWORD PTR [rbp+0x80]
   14002181c:	test   rax,rax
   14002181f:	je     0x14002183a
   140021821:	test   rdx,rdx
   140021824:	je     0x14002183a
   140021826:	mov    rcx,rax
   140021829:	call   rdx
   14002182b:	mov    QWORD PTR [rbp+0x80],0x0
   140021836:	mov    rcx,QWORD PTR [rbp+0x78]
   14002183a:	test   rcx,rcx
   14002183d:	je     0x14002184d
   14002183f:	call   QWORD PTR [rip+0x468fb]        # 0x140068140
   140021845:	mov    QWORD PTR [rbp+0x78],0x0
   14002184d:	lea    rcx,[rbp+0x70]
   140021851:	call   0x140018540
   140021856:	jmp    0x14002196e
   14002185b:	mov    r8d,0x7
   140021861:	lea    rdx,[rip+0x4eb58]        # 0x1400703c0
   140021868:	jmp    0x140021961
   14002186d:	mov    r8d,0xc
   140021873:	lea    rdx,[rip+0x4eb4e]        # 0x1400703c8
   14002187a:	jmp    0x140021961
   14002187f:	mov    r8d,0xc
   140021885:	lea    rdx,[rip+0x4eb4c]        # 0x1400703d8
   14002188c:	jmp    0x140021961
   140021891:	mov    r8d,0x8
   140021897:	lea    rdx,[rip+0x4eb4a]        # 0x1400703e8
   14002189e:	jmp    0x140021961
   1400218a3:	mov    r8d,0xe
   1400218a9:	lea    rdx,[rip+0x4eb48]        # 0x1400703f8
   1400218b0:	jmp    0x140021961
   1400218b5:	mov    r8d,0x9
   1400218bb:	lea    rdx,[rip+0x4eb46]        # 0x140070408
   1400218c2:	jmp    0x140021961
   1400218c7:	mov    r8d,0x10
   1400218cd:	lea    rdx,[rip+0x4eb44]        # 0x140070418
   1400218d4:	jmp    0x140021961
   1400218d9:	mov    r8d,0xe
   1400218df:	lea    rdx,[rip+0x4eb4a]        # 0x140070430
   1400218e6:	jmp    0x140021961
   1400218e8:	mov    r8d,0xf
   1400218ee:	lea    rdx,[rip+0x4eb4b]        # 0x140070440
   1400218f5:	jmp    0x140021961
   1400218f7:	mov    r8d,0x13
   1400218fd:	lea    rdx,[rip+0x4eb4c]        # 0x140070450
   140021904:	jmp    0x140021961
   140021906:	mov    r8d,0x13
   14002190c:	lea    rdx,[rip+0x4eb55]        # 0x140070468
   140021913:	jmp    0x140021961
   140021915:	lea    rcx,[r12+0xc58]
   14002191d:	mov    r8d,0xe
   140021923:	lea    rdx,[rip+0x4eb56]        # 0x140070480
   14002192a:	call   0x140008d10
   14002192f:	mov    DWORD PTR [r12+0xc6c],0x0
   14002193b:	jmp    0x14002196e
   14002193d:	lea    rcx,[r12+0xc58]
   140021945:	lea    rdx,[r12+0xc50]
   14002194d:	call   0x1400089f0
   140021952:	jmp    0x14002196e
   140021954:	mov    r8d,0x11
   14002195a:	lea    rdx,[rip+0x4eb2f]        # 0x140070490
   140021961:	lea    rcx,[r12+0xc58]
   140021969:	call   0x140008d10
   14002196e:	lea    rdx,[r12+0xc58]
   140021976:	lea    rcx,[rbp-0x58]
   14002197a:	call   0x140027220
   14002197f:	nop
   140021980:	mov    r8,r14
   140021983:	mov    rdx,rax
   140021986:	lea    rcx,[rbp-0x80]
   14002198a:	call   0x140027170
   14002198f:	nop
   140021990:	mov    rdx,QWORD PTR [rbp-0x58]
   140021994:	add    rdx,0xffffffffffffffe8
   140021998:	or     eax,0xffffffff
   14002199b:	lock xadd DWORD PTR [rdx+0x10],eax
   1400219a0:	dec    eax
   1400219a2:	test   eax,eax
   1400219a4:	jg     0x1400219af
   1400219a6:	mov    rcx,QWORD PTR [rdx]
   1400219a9:	mov    rax,QWORD PTR [rcx]
   1400219ac:	call   QWORD PTR [rax+0x8]
   1400219af:	mov    DWORD PTR [rsp+0x50],0x0
   1400219b7:	mov    eax,DWORD PTR [r12+0xc64]
   1400219bf:	and    eax,0x8
   1400219c2:	test   al,al
   1400219c4:	je     0x140021c81
   1400219ca:	mov    edi,DWORD PTR [r12+0xc60]
   1400219d2:	test   edi,edi
   1400219d4:	je     0x140021a11
   1400219d6:	cmp    edi,0x8
   1400219d9:	je     0x140021a11
   1400219db:	cmp    edi,0x9
   1400219de:	je     0x140021a11
   1400219e0:	cmp    edi,0x6
   1400219e3:	je     0x140021a11
   1400219e5:	cmp    edi,0x2
   1400219e8:	je     0x140021a11
   1400219ea:	cmp    edi,0x4
   1400219ed:	je     0x140021a11
   1400219ef:	cmp    edi,0xc
   1400219f2:	je     0x140021a11
   1400219f4:	cmp    edi,0xe
   1400219f7:	je     0x140021a11
   1400219f9:	cmp    edi,0x5
   1400219fc:	je     0x140021a11
   1400219fe:	cmp    edi,0x7
   140021a01:	je     0x140021a11
   140021a03:	cmp    edi,0xb
   140021a06:	je     0x140021a11
   140021a08:	cmp    edi,0xd
   140021a0b:	jne    0x140021c81
   140021a11:	mov    QWORD PTR [rsp+0x68],0x0
   140021a1a:	mov    ecx,0x50
   140021a1f:	call   0x1400331a0
   140021a24:	test   rax,rax
   140021a27:	je     0x140021c50
   140021a2d:	mov    QWORD PTR [rsp+0x60],rax
   140021a32:	mov    QWORD PTR [rax],rax
   140021a35:	mov    rax,QWORD PTR [rsp+0x60]
   140021a3a:	mov    QWORD PTR [rax+0x8],rax
   140021a3e:	mov    rax,QWORD PTR [rsp+0x60]
   140021a43:	mov    QWORD PTR [rax+0x10],rax
   140021a47:	mov    rax,QWORD PTR [rsp+0x60]
   140021a4c:	mov    BYTE PTR [rax+0x48],0x1
   140021a50:	mov    rax,QWORD PTR [rsp+0x60]
   140021a55:	mov    BYTE PTR [rax+0x49],0x1
   140021a59:	mov    DWORD PTR [rsp+0x78],edi
   140021a5d:	lea    rcx,[rsp+0x58]
   140021a62:	call   0x14000ef00
   140021a67:	nop
   140021a68:	mov    rcx,QWORD PTR [r14]
   140021a6b:	cmp    DWORD PTR [rcx-0x10],0x0
   140021a6f:	jle    0x140021ab9
   140021a71:	mov    edx,0x7b
   140021a76:	call   0x140035448
   140021a7b:	test   rax,rax
   140021a7e:	je     0x140021ab9
   140021a80:	mov    rcx,QWORD PTR [r14]
   140021a83:	sub    eax,ecx
   140021a85:	jne    0x140021ab9
   140021a87:	cmp    DWORD PTR [rcx-0x8],0x1
   140021a8b:	jle    0x140021a98
   140021a8d:	mov    edx,DWORD PTR [rcx-0x10]
   140021a90:	mov    rcx,r14
   140021a93:	call   0x140009430
   140021a98:	mov    rdx,QWORD PTR [r14]
   140021a9b:	lea    rcx,[rsp+0x58]
   140021aa0:	call   0x14000f390
   140021aa5:	cmp    eax,0xffffffff
   140021aa8:	jne    0x140021ac4
   140021aaa:	mov    rdx,QWORD PTR [r14]
   140021aad:	lea    rcx,[rsp+0x58]
   140021ab2:	call   0x14000f7b0
   140021ab7:	jmp    0x140021ac4
   140021ab9:	lea    rcx,[rsp+0x58]
   140021abe:	call   0x140010e50
   140021ac3:	nop
   140021ac4:	mov    rax,QWORD PTR [rsp+0x60]
   140021ac9:	mov    rdi,QWORD PTR [rax+0x8]
   140021acd:	mov    rbx,rdi
   140021ad0:	cmp    BYTE PTR [rdi+0x49],0x0
   140021ad4:	jne    0x140021b2b
   140021ad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021ae0:	mov    rdx,QWORD PTR [rbx+0x10]
   140021ae4:	lea    rcx,[rsp+0x58]
   140021ae9:	call   0x140011a50
   140021aee:	mov    rbx,QWORD PTR [rbx]
   140021af1:	cmp    QWORD PTR [rdi+0x38],0x10
   140021af6:	jb     0x140021b01
   140021af8:	mov    rcx,QWORD PTR [rdi+0x20]
   140021afc:	call   0x1400330c0
   140021b01:	mov    QWORD PTR [rdi+0x38],0xf
   140021b09:	mov    QWORD PTR [rdi+0x30],0x0
   140021b11:	mov    BYTE PTR [rdi+0x20],0x0
   140021b15:	mov    rcx,rdi
   140021b18:	call   0x1400330c0
   140021b1d:	mov    rdi,rbx
   140021b20:	cmp    BYTE PTR [rbx+0x49],0x0
   140021b24:	je     0x140021ae0
   140021b26:	mov    rax,QWORD PTR [rsp+0x60]
   140021b2b:	mov    QWORD PTR [rax+0x8],rax
   140021b2f:	mov    rax,QWORD PTR [rsp+0x60]
   140021b34:	mov    QWORD PTR [rax],rax
   140021b37:	mov    rax,QWORD PTR [rsp+0x60]
   140021b3c:	mov    QWORD PTR [rax+0x10],rax
   140021b40:	mov    QWORD PTR [rsp+0x68],0x0
   140021b49:	mov    rbx,QWORD PTR [rsp+0x60]
   140021b4e:	mov    rdi,QWORD PTR [rbx]
   140021b51:	cmp    rdi,rdi
   140021b54:	jne    0x140021bdb
   140021b5a:	mov    rdi,QWORD PTR [rbx+0x8]
   140021b5e:	mov    rsi,rdi
   140021b61:	cmp    BYTE PTR [rdi+0x49],0x0
   140021b65:	jne    0x140021bbb
   140021b67:	nop    WORD PTR [rax+rax*1+0x0]
   140021b70:	mov    rdx,QWORD PTR [rsi+0x10]
   140021b74:	lea    rcx,[rsp+0x58]
   140021b79:	call   0x140011a50
   140021b7e:	mov    rsi,QWORD PTR [rsi]
   140021b81:	cmp    QWORD PTR [rdi+0x38],0x10
   140021b86:	jb     0x140021b91
   140021b88:	mov    rcx,QWORD PTR [rdi+0x20]
   140021b8c:	call   0x1400330c0
   140021b91:	mov    QWORD PTR [rdi+0x38],0xf
   140021b99:	mov    QWORD PTR [rdi+0x30],0x0
   140021ba1:	mov    BYTE PTR [rdi+0x20],0x0
   140021ba5:	mov    rcx,rdi
   140021ba8:	call   0x1400330c0
   140021bad:	mov    rdi,rsi
   140021bb0:	cmp    BYTE PTR [rsi+0x49],0x0
   140021bb4:	je     0x140021b70
   140021bb6:	mov    rbx,QWORD PTR [rsp+0x60]
   140021bbb:	mov    QWORD PTR [rbx+0x8],rbx
   140021bbf:	mov    rax,QWORD PTR [rsp+0x60]
   140021bc4:	mov    QWORD PTR [rax],rax
   140021bc7:	mov    rax,QWORD PTR [rsp+0x60]
   140021bcc:	mov    QWORD PTR [rax+0x10],rax
   140021bd0:	mov    QWORD PTR [rsp+0x68],0x0
   140021bd9:	jmp    0x140021c41
   140021bdb:	cmp    rdi,rbx
   140021bde:	je     0x140021c46
   140021be0:	mov    r8,rdi
   140021be3:	cmp    BYTE PTR [rdi+0x49],0x0
   140021be7:	jne    0x140021c2e
   140021be9:	mov    rax,QWORD PTR [rdi+0x10]
   140021bed:	cmp    BYTE PTR [rax+0x49],0x0
   140021bf1:	jne    0x140021c0e
   140021bf3:	mov    rdi,rax
   140021bf6:	mov    rax,QWORD PTR [rax]
   140021bf9:	cmp    BYTE PTR [rax+0x49],0x0
   140021bfd:	jne    0x140021c2e
   140021bff:	nop
   140021c00:	mov    rdi,rax
   140021c03:	mov    rax,QWORD PTR [rax]
   140021c06:	cmp    BYTE PTR [rax+0x49],0x0
   140021c0a:	je     0x140021c00
   140021c0c:	jmp    0x140021c2e
   140021c0e:	mov    rax,QWORD PTR [rdi+0x8]
   140021c12:	cmp    BYTE PTR [rax+0x49],0x0
   140021c16:	jne    0x140021c2b
   140021c18:	cmp    rdi,QWORD PTR [rax+0x10]
   140021c1c:	jne    0x140021c2b
   140021c1e:	mov    rdi,rax
   140021c21:	mov    rax,QWORD PTR [rax+0x8]
   140021c25:	cmp    BYTE PTR [rax+0x49],0x0
   140021c29:	je     0x140021c18
   140021c2b:	mov    rdi,rax
   140021c2e:	lea    rdx,[rbp-0x40]
   140021c32:	lea    rcx,[rsp+0x58]
   140021c37:	call   0x140011560
   140021c3c:	cmp    rdi,rbx
   140021c3f:	jne    0x140021be0
   140021c41:	mov    rbx,QWORD PTR [rsp+0x60]
   140021c46:	mov    rcx,rbx
   140021c49:	call   0x1400330c0
   140021c4e:	jmp    0x140021c81
   140021c50:	mov    QWORD PTR [rbp-0x78],0x0
   140021c58:	lea    rdx,[rbp-0x78]
   140021c5c:	lea    rcx,[rbp-0x38]
   140021c60:	call   0x140032fd4
   140021c65:	lea    rdx,[rip+0x46c24]        # 0x140068890
   140021c6c:	mov    QWORD PTR [rbp-0x38],rdx
   140021c70:	lea    rdx,[rip+0x617a9]        # 0x140083420
   140021c77:	lea    rcx,[rbp-0x38]
   140021c7b:	call   0x140036358
   140021c80:	int3   
   140021c81:	mov    rax,QWORD PTR [r12+0xc58]
   140021c89:	mov    r13d,0x1
   140021c8f:	mov    ecx,r13d
   140021c92:	sub    ecx,DWORD PTR [rax-0x8]
   140021c95:	mov    eax,DWORD PTR [rax-0xc]
   140021c98:	sub    eax,0x104
   140021c9d:	or     eax,ecx
   140021c9f:	jge    0x140021cb3
   140021ca1:	mov    edx,0x104
   140021ca6:	lea    rcx,[r12+0xc58]
   140021cae:	call   0x140008df0
   140021cb3:	lea    r9,[rsp+0x50]
   140021cb8:	mov    r8,QWORD PTR [r12+0xc58]
   140021cc0:	mov    rdx,QWORD PTR [rbp-0x80]
   140021cc4:	mov    ecx,DWORD PTR [r12+0xc60]
   140021ccc:	call   0x1400492c0
   140021cd1:	mov    rcx,QWORD PTR [r12+0xc58]
   140021cd9:	test   rcx,rcx
   140021cdc:	jne    0x140021ce2
   140021cde:	xor    eax,eax
   140021ce0:	jmp    0x140021cf3
   140021ce2:	movsxd rdx,DWORD PTR [rcx-0xc]
   140021ce6:	call   0x1400345f8
   140021ceb:	test   eax,eax
   140021ced:	js     0x14002205a
   140021cf3:	mov    rcx,QWORD PTR [r12+0xc58]
   140021cfb:	cmp    eax,DWORD PTR [rcx-0xc]
   140021cfe:	jg     0x14002205a
   140021d04:	mov    DWORD PTR [rcx-0x10],eax
   140021d07:	movsxd rcx,eax
   140021d0a:	mov    rax,QWORD PTR [r12+0xc58]
   140021d12:	mov    BYTE PTR [rcx+rax*1],0x0
   140021d16:	mov    eax,DWORD PTR [r12+0xc60]
   140021d1e:	test   eax,eax
   140021d20:	je     0x140021d7a
   140021d22:	cmp    eax,0x8
   140021d25:	je     0x140021d7a
   140021d27:	cmp    eax,0x9
   140021d2a:	je     0x140021d7a
   140021d2c:	cmp    eax,0x6
   140021d2f:	je     0x140021d7a
   140021d31:	cmp    eax,0x2
   140021d34:	je     0x140021d7a
   140021d36:	cmp    eax,0x4
   140021d39:	je     0x140021d7a
   140021d3b:	cmp    eax,0xc
   140021d3e:	je     0x140021d7a
   140021d40:	cmp    eax,0xe
   140021d43:	je     0x140021d7a
   140021d45:	cmp    eax,0x5
   140021d48:	je     0x140021d7a
   140021d4a:	cmp    eax,0x7
   140021d4d:	je     0x140021d7a
   140021d4f:	cmp    eax,0xb
   140021d52:	je     0x140021d7a
   140021d54:	cmp    eax,0xd
   140021d57:	je     0x140021d7a
   140021d59:	lea    rdi,[r12+0xc78]
   140021d61:	lea    rdx,[r12+0xc70]
   140021d69:	mov    rcx,rdi
   140021d6c:	call   0x1400089f0
   140021d71:	or     r13,0xffffffffffffffff
   140021d75:	jmp    0x140021f49
   140021d7a:	lea    rdi,[r12+0xc78]
   140021d82:	mov    rax,QWORD PTR [rdi]
   140021d85:	mov    ecx,r13d
   140021d88:	sub    ecx,DWORD PTR [rax-0x8]
   140021d8b:	mov    eax,DWORD PTR [rax-0xc]
   140021d8e:	sub    eax,0x104
   140021d93:	or     eax,ecx
   140021d95:	jge    0x140021da4
   140021d97:	mov    edx,0x104
   140021d9c:	mov    rcx,rdi
   140021d9f:	call   0x140008df0
   140021da4:	mov    r8,QWORD PTR [rdi]
   140021da7:	mov    r14d,DWORD PTR [rsp+0x50]
   140021dac:	mov    edx,r14d
   140021daf:	mov    ecx,DWORD PTR [r12+0xc60]
   140021db7:	call   0x140049800
   140021dbc:	mov    rax,QWORD PTR [r12+0xc98]
   140021dc4:	mov    ecx,r13d
   140021dc7:	sub    ecx,DWORD PTR [rax-0x8]
   140021dca:	mov    eax,DWORD PTR [rax-0xc]
   140021dcd:	sub    eax,0x104
   140021dd2:	or     eax,ecx
   140021dd4:	jge    0x140021de8
   140021dd6:	mov    edx,0x104
   140021ddb:	lea    rcx,[r12+0xc98]
   140021de3:	call   0x140008df0
   140021de8:	mov    r8,QWORD PTR [r12+0xc98]
   140021df0:	mov    edx,r14d
   140021df3:	mov    ecx,DWORD PTR [r12+0xc60]
   140021dfb:	call   0x1400499b0
   140021e00:	mov    rax,QWORD PTR [r12+0xc88]
   140021e08:	sub    r13d,DWORD PTR [rax-0x8]
   140021e0c:	mov    eax,DWORD PTR [rax-0xc]
   140021e0f:	sub    eax,0x104
   140021e14:	or     eax,r13d
   140021e17:	jge    0x140021e2b
   140021e19:	mov    edx,0x104
   140021e1e:	lea    rcx,[r12+0xc88]
   140021e26:	call   0x140008df0
   140021e2b:	mov    r8,QWORD PTR [r12+0xc88]
   140021e33:	mov    edx,r14d
   140021e36:	mov    ecx,DWORD PTR [r12+0xc60]
   140021e3e:	call   0x140049b60
   140021e43:	mov    rcx,QWORD PTR [rdi]
   140021e46:	test   rcx,rcx
   140021e49:	jne    0x140021e4f
   140021e4b:	xor    eax,eax
   140021e4d:	jmp    0x140021e60
   140021e4f:	movsxd rdx,DWORD PTR [rcx-0xc]
   140021e53:	call   0x1400345f8
   140021e58:	test   eax,eax
   140021e5a:	js     0x14002204f
   140021e60:	mov    rcx,QWORD PTR [rdi]
   140021e63:	cmp    eax,DWORD PTR [rcx-0xc]
   140021e66:	jg     0x14002204f
   140021e6c:	mov    DWORD PTR [rcx-0x10],eax
   140021e6f:	movsxd rcx,eax
   140021e72:	mov    rax,QWORD PTR [rdi]
   140021e75:	mov    BYTE PTR [rcx+rax*1],0x0
   140021e79:	mov    rcx,QWORD PTR [r12+0xc98]
   140021e81:	test   rcx,rcx
   140021e84:	jne    0x140021e8a
   140021e86:	xor    eax,eax
   140021e88:	jmp    0x140021e9b
   140021e8a:	movsxd rdx,DWORD PTR [rcx-0xc]
   140021e8e:	call   0x1400345f8
   140021e93:	test   eax,eax
   140021e95:	js     0x140022044
   140021e9b:	mov    rcx,QWORD PTR [r12+0xc98]
   140021ea3:	cmp    eax,DWORD PTR [rcx-0xc]
   140021ea6:	jg     0x140022044
   140021eac:	mov    DWORD PTR [rcx-0x10],eax
   140021eaf:	movsxd rcx,eax
   140021eb2:	mov    rax,QWORD PTR [r12+0xc98]
   140021eba:	mov    BYTE PTR [rcx+rax*1],0x0
   140021ebe:	mov    rcx,QWORD PTR [r12+0xc88]
   140021ec6:	test   rcx,rcx
   140021ec9:	jne    0x140021ecf
   140021ecb:	xor    eax,eax
   140021ecd:	jmp    0x140021ee0
   140021ecf:	movsxd rdx,DWORD PTR [rcx-0xc]
   140021ed3:	call   0x1400345f8
   140021ed8:	test   eax,eax
   140021eda:	js     0x140022039
   140021ee0:	mov    rcx,QWORD PTR [r12+0xc88]
   140021ee8:	cmp    eax,DWORD PTR [rcx-0xc]
   140021eeb:	jg     0x140022039
   140021ef1:	mov    DWORD PTR [rcx-0x10],eax
   140021ef4:	movsxd rcx,eax
   140021ef7:	mov    rax,QWORD PTR [r12+0xc88]
   140021eff:	mov    BYTE PTR [rcx+rax*1],0x0
   140021f03:	lea    rdx,[r12+0xc98]
   140021f0b:	lea    rcx,[rbp-0x60]
   140021f0f:	call   0x140014ff0
   140021f14:	nop
   140021f15:	lea    rcx,[r12+0xc90]
   140021f1d:	mov    rdx,rax
   140021f20:	call   0x1400089f0
   140021f25:	nop
   140021f26:	mov    rdx,QWORD PTR [rbp-0x60]
   140021f2a:	add    rdx,0xffffffffffffffe8
   140021f2e:	or     r13,0xffffffffffffffff
   140021f32:	mov    eax,r13d
   140021f35:	lock xadd DWORD PTR [rdx+0x10],eax
   140021f3a:	dec    eax
   140021f3c:	test   eax,eax
   140021f3e:	jg     0x140021f49
   140021f40:	mov    rcx,QWORD PTR [rdx]
   140021f43:	mov    rax,QWORD PTR [rcx]
   140021f46:	call   QWORD PTR [rax+0x8]
   140021f49:	mov    ecx,DWORD PTR [r12+0xc64]
   140021f51:	mov    eax,ecx
   140021f53:	and    eax,0x2
   140021f56:	xor    r14d,r14d
   140021f59:	cmp    al,0x2
   140021f5b:	jne    0x140021f64
   140021f5d:	mov    ebx,0x200
   140021f62:	jmp    0x140021f75
   140021f64:	and    cl,0x4
   140021f67:	mov    ebx,r14d
   140021f6a:	mov    eax,0x100
   140021f6f:	cmp    cl,0x4
   140021f72:	cmove  ebx,eax
   140021f75:	mov    rsi,QWORD PTR [rdi]
   140021f78:	lea    rdi,[r12+0xc18]
   140021f80:	mov    rcx,QWORD PTR [rdi]
   140021f83:	test   rcx,rcx
   140021f86:	je     0x140021f99
   140021f88:	call   QWORD PTR [rip+0x460ba]        # 0x140068048
   140021f8e:	mov    QWORD PTR [rdi],r14
   140021f91:	mov    QWORD PTR [r12+0xc20],r14
   140021f99:	mov    QWORD PTR [rdi],r14
   140021f9c:	or     ebx,0x20017
   140021fa2:	mov    QWORD PTR [rsp+0x40],r14
   140021fa7:	mov    QWORD PTR [rsp+0x38],rdi
   140021fac:	mov    QWORD PTR [rsp+0x30],r14
   140021fb1:	mov    DWORD PTR [rsp+0x28],ebx
   140021fb5:	mov    DWORD PTR [rsp+0x20],r14d
   140021fba:	xor    r9d,r9d
   140021fbd:	xor    r8d,r8d
   140021fc0:	mov    rdx,rsi
   140021fc3:	mov    rcx,0xffffffff80000002
   140021fca:	call   QWORD PTR [rip+0x46068]        # 0x140068038
   140021fd0:	mov    rcx,r12
   140021fd3:	call   0x140022630
   140021fd8:	lea    rdi,[r12+0xf28]
   140021fe0:	mov    rax,QWORD PTR [rdi]
   140021fe3:	mov    rcx,rdi
   140021fe6:	call   QWORD PTR [rax+0x18]
   140021fe9:	test   al,al
   140021feb:	jne    0x140022001
   140021fed:	mov    rax,QWORD PTR [rdi]
   140021ff0:	xor    r8d,r8d
   140021ff3:	mov    rdx,QWORD PTR [r12+0xc58]
   140021ffb:	mov    rcx,rdi
   140021ffe:	call   QWORD PTR [rax+0x8]
   140022001:	mov    rax,QWORD PTR [r12]
   140022005:	mov    rcx,r12
   140022008:	call   QWORD PTR [rax+0x168]
   14002200e:	test   eax,eax
   140022010:	setne  dil
   140022014:	mov    rax,QWORD PTR [rbp-0x80]
   140022018:	lea    rdx,[rax-0x18]
   14002201c:	lock xadd DWORD PTR [rdx+0x10],r13d
   140022022:	dec    r13d
   140022025:	test   r13d,r13d
   140022028:	jg     0x140022033
   14002202a:	mov    rcx,QWORD PTR [rdx]
   14002202d:	mov    rax,QWORD PTR [rcx]
   140022030:	call   QWORD PTR [rax+0x8]
   140022033:	movzx  eax,dil
   140022037:	jmp    0x140022065
   140022039:	mov    ecx,0x80070057
   14002203e:	call   0x1400025f0
   140022043:	int3   
   140022044:	mov    ecx,0x80070057
   140022049:	call   0x1400025f0
   14002204e:	int3   
   14002204f:	mov    ecx,0x80070057
   140022054:	call   0x1400025f0
   140022059:	int3   
   14002205a:	mov    ecx,0x80070057
   14002205f:	call   0x1400025f0
   140022064:	nop
   140022065:	mov    rcx,QWORD PTR [rbp+0x2d0]
   14002206c:	xor    rcx,rsp
   14002206f:	call   0x140032f00
   140022074:	mov    rbx,QWORD PTR [rsp+0x430]
   14002207c:	add    rsp,0x3e0
   140022083:	pop    r15
   140022085:	pop    r14
   140022087:	pop    r13
   140022089:	pop    r12
   14002208b:	pop    rdi
   14002208c:	pop    rsi
   14002208d:	pop    rbp
   14002208e:	ret    
   14002208f:	nop
   140022090:	jmp    0xe30222ab
   140022095:	sbb    BYTE PTR [rdx],al
   140022097:	add    BYTE PTR [rbp-0x38fffde8],dh
   14002209d:	sbb    BYTE PTR [rdx],al
   14002209f:	add    cl,bl
   1400220a1:	sbb    BYTE PTR [rdx],al
   1400220a3:	add    BYTE PTR [rip+0xffffffff91000219],dl        # 0xd10222c2
   1400220a9:	sbb    BYTE PTR [rdx],al
   1400220ab:	add    BYTE PTR [rcx+rbx*1+0x2],dl
   1400220af:	add    BYTE PTR [rbp+0x18],ch
   1400220b2:	add    al,BYTE PTR [rax]
   1400220b4:	jg     0x1400220ce
   1400220b6:	add    al,BYTE PTR [rax]
   1400220b8:	cmp    eax,0x5b000219
   1400220bd:	sbb    BYTE PTR [rdx],al
   1400220bf:	add    bh,dh
   1400220c1:	sbb    BYTE PTR [rdx],al
   1400220c3:	add    al,ch
   1400220c5:	sbb    BYTE PTR [rdx],al
   1400220c7:	add    BYTE PTR [rsi],al
   1400220c9:	sbb    DWORD PTR [rdx],eax
   1400220cb:	add    ah,cl
   1400220cd:	int3   
   1400220ce:	int3   
   1400220cf:	int3   
   1400220d0:	sub    rsp,0x28
   1400220d4:	call   0x140021340
   1400220d9:	mov    al,0x1
   1400220db:	add    rsp,0x28
   1400220df:	ret    
   1400220e0:	jmp    0x1400220f0
   1400220e5:	int3   
   1400220e6:	int3   
   1400220e7:	int3   
   1400220e8:	int3   
   1400220e9:	int3   
   1400220ea:	int3   
   1400220eb:	int3   
   1400220ec:	int3   
   1400220ed:	int3   
   1400220ee:	int3   
   1400220ef:	int3   
   1400220f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400220f5:	push   rbp
   1400220f6:	sub    rsp,0x50
   1400220fa:	cmp    DWORD PTR [rcx+0xcb0],0x0
   140022101:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140022106:	mov    ebp,edx
   140022108:	movapd xmm6,xmm2
   14002210c:	mov    rbx,rcx
   14002210f:	je     0x140022131
   140022111:	cmp    edx,0x1
   140022114:	jne    0x140022131
   140022116:	movsd  QWORD PTR [rcx+0xca8],xmm2
   14002211e:	movzx  eax,dl
   140022121:	mov    rbx,QWORD PTR [rsp+0x70]
   140022126:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14002212b:	add    rsp,0x50
   14002212f:	pop    rbp
   140022130:	ret    
   140022131:	cmp    QWORD PTR [rcx+0x78],0x0
   140022136:	mov    QWORD PTR [rsp+0x60],rsi
   14002213b:	mov    QWORD PTR [rsp+0x68],rdi
   140022140:	jne    0x14002217a
   140022142:	lea    r8,[rcx+0x69c]
   140022149:	xor    edx,edx
   14002214b:	mov    ecx,0x20000
   140022150:	call   QWORD PTR [rip+0x462d2]        # 0x140068428
   140022156:	mov    rsi,rax
   140022159:	test   rax,rax
   14002215c:	je     0x140022167
   14002215e:	mov    rcx,rax
   140022161:	call   QWORD PTR [rip+0x46231]        # 0x140068398
   140022167:	xor    ecx,ecx
   140022169:	test   rsi,rsi
   14002216c:	setne  cl
   14002216f:	test   ecx,ecx
   140022171:	je     0x14002217a
   140022173:	xor    al,al
   140022175:	jmp    0x1400221fd
   14002217a:	xor    eax,eax
   14002217c:	lea    rcx,[rbx+0xc10]
   140022183:	movapd xmm2,xmm6
   140022187:	mov    QWORD PTR [rsp+0x28],rax
   14002218c:	mov    QWORD PTR [rsp+0x30],rax
   140022191:	mov    edx,ebp
   140022193:	movsd  QWORD PTR [rsp+0x30],xmm6
   140022199:	mov    DWORD PTR [rsp+0x28],ebp
   14002219d:	mov    DWORD PTR [rsp+0x20],0x1
   1400221a5:	mov    QWORD PTR [rsp+0x38],rax
   1400221aa:	call   0x140031530
   1400221af:	mov    rax,QWORD PTR [rbx]
   1400221b2:	mov    rcx,rbx
   1400221b5:	xor    sil,sil
   1400221b8:	call   QWORD PTR [rax+0x168]
   1400221be:	test   eax,eax
   1400221c0:	je     0x1400221ec
   1400221c2:	cmp    BYTE PTR [rbx+0xef0],sil
   1400221c9:	je     0x1400221ec
   1400221cb:	mov    rax,QWORD PTR [rbx+0x38]
   1400221cf:	lea    r8,[rsp+0x20]
   1400221d4:	lea    rcx,[rbx+0x38]
   1400221d8:	mov    r9d,0x20
   1400221de:	mov    edx,0x12c
   1400221e3:	call   QWORD PTR [rax+0x8]
   1400221e6:	test   eax,eax
   1400221e8:	setne  sil
   1400221ec:	mov    rcx,QWORD PTR [rbx+0xdd0]
   1400221f3:	call   QWORD PTR [rip+0x461ff]        # 0x1400683f8
   1400221f9:	movzx  eax,sil
   1400221fd:	mov    rsi,QWORD PTR [rsp+0x60]
   140022202:	mov    rdi,QWORD PTR [rsp+0x68]
   140022207:	mov    rbx,QWORD PTR [rsp+0x70]
   14002220c:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140022211:	add    rsp,0x50
   140022215:	pop    rbp
   140022216:	ret    
   140022217:	int3   
   140022218:	int3   
   140022219:	int3   
   14002221a:	int3   
   14002221b:	int3   
   14002221c:	int3   
   14002221d:	int3   
   14002221e:	int3   
   14002221f:	int3   
   140022220:	sub    rsp,0x28
   140022224:	cmp    DWORD PTR [rcx+0xcb0],0x0
   14002222b:	je     0x140022244
   14002222d:	cmp    edx,0x1
   140022230:	jne    0x140022244
   140022232:	mov    rax,QWORD PTR [rcx+0xca8]
   140022239:	mov    QWORD PTR [r8],rax
   14002223c:	movzx  eax,dl
   14002223f:	add    rsp,0x28
   140022243:	ret    
   140022244:	mov    QWORD PTR [rsp+0x20],rbx
   140022249:	xor    ebx,ebx
   14002224b:	test   r8,r8
   14002224e:	je     0x14002226b
   140022250:	add    rcx,0xc10
   140022257:	call   0x1400315c0
   14002225c:	mov    rbx,QWORD PTR [rsp+0x20]
   140022261:	test   eax,eax
   140022263:	setne  al
   140022266:	add    rsp,0x28
   14002226a:	ret    
   14002226b:	test   ebx,ebx
   14002226d:	mov    eax,ebx
   14002226f:	mov    rbx,QWORD PTR [rsp+0x20]
   140022274:	setne  al
   140022277:	add    rsp,0x28
   14002227b:	ret    
   14002227c:	int3   
   14002227d:	int3   
   14002227e:	int3   
   14002227f:	int3   
   140022280:	sub    rsp,0x38
   140022284:	mov    DWORD PTR [rsp+0x20],0x1
   14002228c:	call   0x1400222a0
   140022291:	add    rsp,0x38
   140022295:	ret    
   140022296:	int3   
   140022297:	int3   
   140022298:	int3   
   140022299:	int3   
   14002229a:	int3   
   14002229b:	int3   
   14002229c:	int3   
   14002229d:	int3   
   14002229e:	int3   
   14002229f:	int3   
   1400222a0:	mov    DWORD PTR [rsp+0x20],r9d
   1400222a5:	mov    QWORD PTR [rsp+0x18],r8
   1400222aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400222af:	mov    QWORD PTR [rsp+0x8],rcx
   1400222b4:	push   rbx
   1400222b5:	push   rsi
   1400222b6:	push   rdi
   1400222b7:	push   r12
   1400222b9:	push   r13
   1400222bb:	push   r14
   1400222bd:	push   r15
   1400222bf:	sub    rsp,0x70
   1400222c3:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   1400222cc:	mov    edi,r9d
   1400222cf:	mov    rax,rdx
   1400222d2:	mov    rbx,rcx
   1400222d5:	xor    r14b,r14b
   1400222d8:	mov    BYTE PTR [rsp+0x60],r14b
   1400222dd:	cmp    QWORD PTR [rcx+0x78],0x0
   1400222e2:	jne    0x140022330
   1400222e4:	lea    r8,[rcx+0x69c]
   1400222eb:	xor    edx,edx
   1400222ed:	mov    ecx,0x20000
   1400222f2:	call   QWORD PTR [rip+0x46130]        # 0x140068428
   1400222f8:	mov    rdi,rax
   1400222fb:	test   rax,rax
   1400222fe:	je     0x140022309
   140022300:	mov    rcx,rax
   140022303:	call   QWORD PTR [rip+0x4608f]        # 0x140068398
   140022309:	xor    ecx,ecx
   14002230b:	test   rdi,rdi
   14002230e:	setne  cl
   140022311:	test   ecx,ecx
   140022313:	jne    0x1400225a0
   140022319:	mov    edi,DWORD PTR [rsp+0xc8]
   140022320:	mov    rax,QWORD PTR [rsp+0xb8]
   140022328:	mov    r8,QWORD PTR [rsp+0xc0]
   140022330:	test   edi,edi
   140022332:	je     0x140022382
   140022334:	mov    rdi,rax
   140022337:	mov    rsi,r8
   14002233a:	mov    r12d,DWORD PTR [rsp+0xc8]
   140022342:	cmp    DWORD PTR [rbx+0xcb0],0x0
   140022349:	je     0x14002235c
   14002234b:	cmp    DWORD PTR [rdi],0x1
   14002234e:	jne    0x14002235c
   140022350:	mov    rax,QWORD PTR [rsi]
   140022353:	mov    QWORD PTR [rbx+0xca8],rax
   14002235a:	jmp    0x14002236e
   14002235c:	lea    rcx,[rbx+0xc10]
   140022363:	movsd  xmm2,QWORD PTR [rsi]
   140022367:	mov    edx,DWORD PTR [rdi]
   140022369:	call   0x140031530
   14002236e:	add    rsi,0x8
   140022372:	add    rdi,0x4
   140022376:	dec    r12
   140022379:	jne    0x140022342
   14002237b:	mov    edi,DWORD PTR [rsp+0xc8]
   140022382:	mov    rax,QWORD PTR [rbx]
   140022385:	mov    rcx,rbx
   140022388:	call   QWORD PTR [rax+0x168]
   14002238e:	test   eax,eax
   140022390:	je     0x1400225a0
   140022396:	cmp    BYTE PTR [rbx+0xef0],0x0
   14002239d:	je     0x14002257c
   1400223a3:	mov    rax,QWORD PTR [rbx+0x38]
   1400223a7:	lea    rcx,[rbx+0x38]
   1400223ab:	call   QWORD PTR [rax+0x10]
   1400223ae:	mov    r15,rax
   1400223b1:	mov    rdx,QWORD PTR [rbx+0x38]
   1400223b5:	lea    rcx,[rbx+0x38]
   1400223b9:	call   QWORD PTR [rdx+0x18]
   1400223bc:	cmp    DWORD PTR [rbx+0xc60],0xb
   1400223c3:	jne    0x1400223d8
   1400223c5:	xor    eax,eax
   1400223c7:	mov    ecx,0x1fff
   1400223cc:	cmp    QWORD PTR [rbx+0xba8],rax
   1400223d3:	cmovne eax,ecx
   1400223d6:	jmp    0x1400223ec
   1400223d8:	cmp    QWORD PTR [rbx+0x940],0x0
   1400223e0:	je     0x1400223ea
   1400223e2:	mov    eax,DWORD PTR [rbx+0x8e8]
   1400223e8:	jmp    0x1400223ec
   1400223ea:	xor    eax,eax
   1400223ec:	mov    DWORD PTR [rsp+0x64],eax
   1400223f0:	mov    DWORD PTR [rsp+0x28],eax
   1400223f4:	lea    rax,[rip+0x4e0bd]        # 0x1400704b8
   1400223fb:	mov    QWORD PTR [rsp+0x20],rax
   140022400:	xor    r9d,r9d
   140022403:	mov    edx,0x29b
   140022408:	lea    r8d,[r9+0x3]
   14002240c:	lea    rcx,[rip+0x4defd]        # 0x140070310
   140022413:	call   0x140003150
   140022418:	nop
   140022419:	test   r15,r15
   14002241c:	je     0x14002256c
   140022422:	xor    r12d,r12d
   140022425:	mov    r14b,0x1
   140022428:	mov    BYTE PTR [rsp+0x60],r14b
   14002242d:	mov    DWORD PTR [r15],0x3
   140022434:	xor    esi,esi
   140022436:	mov    r8d,DWORD PTR [rsp+0x64]
   14002243b:	movabs rdx,0x3ff0000000000000
   140022445:	test   r14b,r14b
   140022448:	je     0x14002256c
   14002244e:	cmp    esi,edi
   140022450:	jae    0x14002256c
   140022456:	cmp    DWORD PTR [rbx+0xcb0],0x0
   14002245d:	je     0x140022486
   14002245f:	movsxd rax,esi
   140022462:	mov    rcx,QWORD PTR [rsp+0xb8]
   14002246a:	cmp    DWORD PTR [rcx+rax*4],0x1
   14002246e:	jne    0x140022486
   140022470:	movsxd rax,r12d
   140022473:	add    rax,rax
   140022476:	mov    DWORD PTR [r15+rax*8+0x10],0x1
   14002247f:	mov    QWORD PTR [r15+rax*8+0x18],rdx
   140022484:	jmp    0x1400224b0
   140022486:	movsxd rcx,esi
   140022489:	movsxd rdx,r12d
   14002248c:	add    rdx,rdx
   14002248f:	mov    rax,QWORD PTR [rsp+0xb8]
   140022497:	mov    eax,DWORD PTR [rax+rcx*4]
   14002249a:	mov    DWORD PTR [r15+rdx*8+0x10],eax
   14002249f:	mov    rax,QWORD PTR [rsp+0xc0]
   1400224a7:	mov    rax,QWORD PTR [rax+rcx*8]
   1400224ab:	mov    QWORD PTR [r15+rdx*8+0x18],rax
   1400224b0:	inc    r12d
   1400224b3:	lea    edi,[r12+0x1]
   1400224b8:	shl    edi,0x4
   1400224bb:	lea    r13d,[rsi+0x1]
   1400224bf:	cmp    r13d,DWORD PTR [rsp+0xc8]
   1400224c7:	je     0x1400224d5
   1400224c9:	lea    eax,[rdi+0x10]
   1400224cc:	cmp    r8d,eax
   1400224cf:	jae    0x14002255d
   1400224d5:	mov    DWORD PTR [r15+0x8],r12d
   1400224d9:	lea    rcx,[rbx+0x38]
   1400224dd:	mov    rax,QWORD PTR [rcx]
   1400224e0:	mov    r9d,edi
   1400224e3:	mov    r8,r15
   1400224e6:	mov    edx,0x12c
   1400224eb:	call   QWORD PTR [rax+0x8]
   1400224ee:	test   eax,eax
   1400224f0:	setne  r14b
   1400224f4:	mov    BYTE PTR [rsp+0x60],r14b
   1400224f9:	xor    r12d,r12d
   1400224fc:	lea    rax,[rip+0x4b035]        # 0x14006d538
   140022503:	test   r14b,r14b
   140022506:	lea    rcx,[rip+0x4dfbf]        # 0x1400704cc
   14002250d:	cmovne rax,rcx
   140022511:	mov    DWORD PTR [rsp+0x50],0x10
   140022519:	mov    DWORD PTR [rsp+0x48],edi
   14002251d:	mov    ecx,DWORD PTR [rsp+0x64]
   140022521:	mov    DWORD PTR [rsp+0x40],ecx
   140022525:	mov    DWORD PTR [rsp+0x38],r12d
   14002252a:	mov    QWORD PTR [rsp+0x30],rax
   14002252f:	mov    DWORD PTR [rsp+0x28],esi
   140022533:	lea    rax,[rip+0x4dfa6]        # 0x1400704e0
   14002253a:	mov    QWORD PTR [rsp+0x20],rax
   14002253f:	xor    r9d,r9d
   140022542:	mov    edx,0x2c5
   140022547:	lea    r8d,[r12+0x3]
   14002254c:	lea    rcx,[rip+0x4ddbd]        # 0x140070310
   140022553:	call   0x140003150
   140022558:	mov    r8d,DWORD PTR [rsp+0x64]
   14002255d:	mov    esi,r13d
   140022560:	mov    edi,DWORD PTR [rsp+0xc8]
   140022567:	jmp    0x14002243b
   14002256c:	jmp    0x14002257c
   14002256e:	mov    rbx,QWORD PTR [rsp+0xb0]
   140022576:	movzx  r14d,BYTE PTR [rsp+0x60]
   14002257c:	cmp    DWORD PTR [rsp+0xd0],0x0
   140022584:	je     0x1400225a0
   140022586:	mov    rcx,QWORD PTR [rbx+0xdd0]
   14002258d:	call   QWORD PTR [rip+0x45e65]        # 0x1400683f8
   140022593:	mov    rcx,QWORD PTR [rbx+0xdb0]
   14002259a:	call   QWORD PTR [rip+0x45e58]        # 0x1400683f8
   1400225a0:	movzx  eax,r14b
   1400225a4:	add    rsp,0x70
   1400225a8:	pop    r15
   1400225aa:	pop    r14
   1400225ac:	pop    r13
   1400225ae:	pop    r12
   1400225b0:	pop    rdi
   1400225b1:	pop    rsi
   1400225b2:	pop    rbx
   1400225b3:	ret    
   1400225b4:	int3   
   1400225b5:	int3   
   1400225b6:	int3   
   1400225b7:	int3   
   1400225b8:	int3   
   1400225b9:	int3   
   1400225ba:	int3   
   1400225bb:	int3   
   1400225bc:	int3   
   1400225bd:	int3   
   1400225be:	int3   
   1400225bf:	int3   
   1400225c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400225c5:	push   rsi
   1400225c6:	push   rdi
   1400225c7:	push   r12
   1400225c9:	sub    rsp,0x20
   1400225cd:	mov    rdi,r8
   1400225d0:	mov    rsi,rdx
   1400225d3:	mov    r12,rcx
   1400225d6:	mov    bl,0x1
   1400225d8:	test   r9d,r9d
   1400225db:	je     0x14002261f
   1400225dd:	mov    QWORD PTR [rsp+0x40],rbp
   1400225e2:	mov    QWORD PTR [rsp+0x48],r13
   1400225e7:	xor    r13d,r13d
   1400225ea:	mov    ebp,r9d
   1400225ed:	nop    DWORD PTR [rax]
   1400225f0:	mov    rax,QWORD PTR [r12]
   1400225f4:	mov    edx,DWORD PTR [rsi]
   1400225f6:	mov    r8,rdi
   1400225f9:	mov    rcx,r12
   1400225fc:	call   QWORD PTR [rax+0x20]
   1400225ff:	movzx  ebx,bl
   140022602:	test   al,al
   140022604:	cmove  ebx,r13d
   140022608:	add    rdi,0x8
   14002260c:	add    rsi,0x4
   140022610:	dec    rbp
   140022613:	jne    0x1400225f0
   140022615:	mov    r13,QWORD PTR [rsp+0x48]
   14002261a:	mov    rbp,QWORD PTR [rsp+0x40]
   14002261f:	movzx  eax,bl
   140022622:	mov    rbx,QWORD PTR [rsp+0x50]
   140022627:	add    rsp,0x20
   14002262b:	pop    r12
   14002262d:	pop    rdi
   14002262e:	pop    rsi
   14002262f:	ret    
   140022630:	rex push rbx
   140022632:	sub    rsp,0x30
   140022636:	lea    rax,[rcx+0xda8]
   14002263d:	mov    rbx,rcx
   140022640:	lea    rcx,[rsp+0x40]
   140022645:	mov    QWORD PTR [rsp+0x28],rcx
   14002264a:	mov    rcx,QWORD PTR [rbx+0xc18]
   140022651:	lea    r9,[rsp+0x48]
   140022656:	lea    rdx,[rip+0x4ded3]        # 0x140070530
   14002265d:	xor    r8d,r8d
   140022660:	mov    DWORD PTR [rsp+0x40],0x4
   140022668:	mov    QWORD PTR [rsp+0x20],rax
   14002266d:	call   QWORD PTR [rip+0x459e5]        # 0x140068058
   140022673:	lea    rcx,[rsp+0x40]
   140022678:	mov    QWORD PTR [rsp+0x28],rcx
   14002267d:	mov    rcx,QWORD PTR [rbx+0xc18]
   140022684:	lea    rax,[rbx+0xdac]
   14002268b:	lea    r9,[rsp+0x48]
   140022690:	lea    rdx,[rip+0x4deb1]        # 0x140070548
   140022697:	xor    r8d,r8d
   14002269a:	mov    DWORD PTR [rsp+0x40],0x4
   1400226a2:	mov    QWORD PTR [rsp+0x20],rax
   1400226a7:	call   QWORD PTR [rip+0x459ab]        # 0x140068058
   1400226ad:	add    rsp,0x30
   1400226b1:	pop    rbx
   1400226b2:	ret    
   1400226b3:	int3   
   1400226b4:	int3   
   1400226b5:	int3   
   1400226b6:	int3   
   1400226b7:	int3   
   1400226b8:	int3   
   1400226b9:	int3   
   1400226ba:	int3   
   1400226bb:	int3   
   1400226bc:	int3   
   1400226bd:	int3   
   1400226be:	int3   
   1400226bf:	int3   
   1400226c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400226c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400226ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400226cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400226d4:	push   r12
   1400226d6:	push   r13
   1400226d8:	push   r14
   1400226da:	sub    rsp,0x20
   1400226de:	xor    r12d,r12d
   1400226e1:	mov    ebp,r9d
   1400226e4:	mov    r13,r8
   1400226e7:	mov    r14d,edx
   1400226ea:	mov    rsi,rcx
   1400226ed:	cmp    QWORD PTR [rcx+0x78],r12
   1400226f1:	jne    0x140022729
   1400226f3:	lea    r8,[rcx+0x69c]
   1400226fa:	xor    edx,edx
   1400226fc:	mov    ecx,0x20000
   140022701:	call   QWORD PTR [rip+0x45d21]        # 0x140068428
   140022707:	mov    rbx,rax
   14002270a:	test   rax,rax
   14002270d:	je     0x140022718
   14002270f:	mov    rcx,rax
   140022712:	call   QWORD PTR [rip+0x45c80]        # 0x140068398
   140022718:	test   rbx,rbx
   14002271b:	mov    ecx,r12d
   14002271e:	setne  cl
   140022721:	test   ecx,ecx
   140022723:	jne    0x1400227aa
   140022729:	lea    rcx,[rsi+0xc10]
   140022730:	mov    r9d,ebp
   140022733:	mov    r8,r13
   140022736:	mov    edx,r14d
   140022739:	call   0x140031670
   14002273e:	mov    r11,QWORD PTR [rsi]
   140022741:	mov    rcx,rsi
   140022744:	call   QWORD PTR [r11+0x168]
   14002274b:	test   eax,eax
   14002274d:	je     0x1400227aa
   14002274f:	cmp    BYTE PTR [rsi+0xef0],r12b
   140022756:	je     0x1400227a6
   140022758:	mov    rax,QWORD PTR [rsi+0x38]
   14002275c:	lea    rcx,[rsi+0x38]
   140022760:	call   QWORD PTR [rax+0x10]
   140022763:	mov    rbx,rax
   140022766:	test   rax,rax
   140022769:	je     0x140022787
   14002276b:	lea    rcx,[rax+0x10]
   14002276f:	mov    r8,rbp
   140022772:	mov    rdx,r13
   140022775:	mov    DWORD PTR [rax],0x5
   14002277b:	mov    DWORD PTR [rax+0x8],r14d
   14002277f:	mov    DWORD PTR [rax+0xc],ebp
   140022782:	call   0x140033260
   140022787:	mov    r10,QWORD PTR [rsi+0x38]
   14002278b:	lea    r9d,[rbp+0x10]
   14002278f:	lea    rcx,[rsi+0x38]
   140022793:	mov    r8,rbx
   140022796:	mov    edx,0x12c
   14002279b:	call   QWORD PTR [r10+0x8]
   14002279f:	test   eax,eax
   1400227a1:	setne  al
   1400227a4:	jmp    0x1400227ac
   1400227a6:	mov    al,0x1
   1400227a8:	jmp    0x1400227ac
   1400227aa:	xor    al,al
   1400227ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400227b1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400227b6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400227bb:	mov    rdi,QWORD PTR [rsp+0x58]
   1400227c0:	add    rsp,0x20
   1400227c4:	pop    r14
   1400227c6:	pop    r13
   1400227c8:	pop    r12
   1400227ca:	ret    
   1400227cb:	int3   
   1400227cc:	int3   
   1400227cd:	int3   
   1400227ce:	int3   
   1400227cf:	int3   
   1400227d0:	rex push rbx
   1400227d2:	sub    rsp,0x20
   1400227d6:	xor    ebx,ebx
   1400227d8:	test   r8,r8
   1400227db:	je     0x1400227f4
   1400227dd:	add    rcx,0xc10
   1400227e4:	call   0x1400316f0
   1400227e9:	test   eax,eax
   1400227eb:	setne  al
   1400227ee:	add    rsp,0x20
   1400227f2:	pop    rbx
   1400227f3:	ret    
   1400227f4:	test   ebx,ebx
   1400227f6:	mov    eax,ebx
   1400227f8:	setne  al
   1400227fb:	add    rsp,0x20
   1400227ff:	pop    rbx
   140022800:	ret    
   140022801:	int3   
   140022802:	int3   
   140022803:	int3   
   140022804:	int3   
   140022805:	int3   
   140022806:	int3   
   140022807:	int3   
   140022808:	int3   
   140022809:	int3   
   14002280a:	int3   
   14002280b:	int3   
   14002280c:	int3   
   14002280d:	int3   
   14002280e:	int3   
   14002280f:	int3   
   140022810:	mov    r11,rsp
   140022813:	mov    QWORD PTR [r11+0x10],rbx
   140022817:	mov    QWORD PTR [r11+0x18],rbp
   14002281b:	mov    QWORD PTR [r11+0x20],rsi
   14002281f:	push   rdi
   140022820:	sub    rsp,0x70
   140022824:	mov    rax,QWORD PTR [rip+0x6287d]        # 0x1400850a8
   14002282b:	xor    rax,rsp
   14002282e:	mov    QWORD PTR [rsp+0x68],rax
   140022833:	xor    edi,edi
   140022835:	mov    rsi,r9
   140022838:	mov    rbp,r8
   14002283b:	mov    rbx,rcx
   14002283e:	cmp    QWORD PTR [rcx+0x10],rdi
   140022842:	jne    0x140022884
   140022844:	mov    rax,QWORD PTR [rcx+0x8]
   140022848:	mov    QWORD PTR [r11-0x38],rdi
   14002284c:	lea    rdx,[r11-0x20]
   140022850:	mov    DWORD PTR [rsp+0x38],edi
   140022854:	add    rcx,0x8
   140022858:	mov    DWORD PTR [rsp+0x30],edi
   14002285c:	mov    DWORD PTR [rsp+0x28],0x84000000
   140022864:	mov    QWORD PTR [r11-0x58],rdx
   140022868:	lea    r9,[rip+0x4dce9]        # 0x140070558
   14002286f:	lea    rdx,[rip+0x4dcf2]        # 0x140070568
   140022876:	xor    r8d,r8d
   140022879:	mov    QWORD PTR [r11-0x20],rdi
   14002287d:	mov    QWORD PTR [r11-0x18],rdi
   140022881:	call   QWORD PTR [rax+0x8]
   140022884:	mov    QWORD PTR [rbx+0xde0],rbp
   14002288b:	mov    QWORD PTR [rbx+0xde8],rsi
   140022892:	cmp    QWORD PTR [rbx+0xdd8],rdi
   140022899:	jne    0x1400228cb
   14002289b:	lea    rax,[rsp+0x50]
   1400228a0:	lea    r8,[rip+0xffffffffffffdf09]        # 0x1400207b0
   1400228a7:	mov    r9,rbx
   1400228aa:	mov    QWORD PTR [rsp+0x28],rax
   1400228af:	xor    edx,edx
   1400228b1:	xor    ecx,ecx
   1400228b3:	mov    DWORD PTR [rsp+0x20],edi
   1400228b7:	mov    DWORD PTR [rsp+0x50],edi
   1400228bb:	call   QWORD PTR [rip+0x45b27]        # 0x1400683e8
   1400228c1:	mov    QWORD PTR [rbx+0xdd8],rax
   1400228c8:	cmp    rax,rdi
   1400228cb:	setne  al
   1400228ce:	mov    rcx,QWORD PTR [rsp+0x68]
   1400228d3:	xor    rcx,rsp
   1400228d6:	call   0x140032f00
   1400228db:	lea    r11,[rsp+0x70]
   1400228e0:	mov    rbx,QWORD PTR [r11+0x18]
   1400228e4:	mov    rbp,QWORD PTR [r11+0x20]
   1400228e8:	mov    rsi,QWORD PTR [r11+0x28]
   1400228ec:	mov    rsp,r11
   1400228ef:	pop    rdi
   1400228f0:	ret    
   1400228f1:	int3   
   1400228f2:	int3   
   1400228f3:	int3   
   1400228f4:	int3   
   1400228f5:	int3   
   1400228f6:	int3   
   1400228f7:	int3   
   1400228f8:	int3   
   1400228f9:	int3   
   1400228fa:	int3   
   1400228fb:	int3   
   1400228fc:	int3   
   1400228fd:	int3   
   1400228fe:	int3   
   1400228ff:	int3   
   140022900:	rex push rbx
   140022902:	sub    rsp,0x20
   140022906:	mov    eax,DWORD PTR [rcx+0xcb0]
   14002290c:	mov    rbx,rcx
   14002290f:	test   eax,eax
   140022911:	jne    0x140022956
   140022913:	test   dl,dl
   140022915:	je     0x140022952
   140022917:	mov    rax,QWORD PTR [rcx]
   14002291a:	lea    r8,[rcx+0xca8]
   140022921:	mov    edx,0x1
   140022926:	call   QWORD PTR [rax+0x20]
   140022929:	mov    r11,QWORD PTR [rbx]
   14002292c:	mov    edx,0x1
   140022931:	movsd  xmm2,QWORD PTR [rip+0x54b67]        # 0x1400774a0
   140022939:	mov    rcx,rbx
   14002293c:	call   QWORD PTR [r11+0x18]
   140022940:	mov    DWORD PTR [rbx+0xcb0],0x1
   14002294a:	mov    al,0x1
   14002294c:	add    rsp,0x20
   140022950:	pop    rbx
   140022951:	ret    
   140022952:	test   eax,eax
   140022954:	je     0x140022977
   140022956:	test   dl,dl
   140022958:	jne    0x140022977
   14002295a:	mov    rax,QWORD PTR [rcx]
   14002295d:	movsd  xmm2,QWORD PTR [rcx+0xca8]
   140022965:	mov    edx,0x1
   14002296a:	mov    DWORD PTR [rcx+0xcb0],0x0
   140022974:	call   QWORD PTR [rax+0x18]
   140022977:	mov    al,0x1
   140022979:	add    rsp,0x20
   14002297d:	pop    rbx
   14002297e:	ret    
   14002297f:	int3   
   140022980:	mov    QWORD PTR [rsp+0x20],rbx
   140022985:	push   rbp
   140022986:	push   rsi
   140022987:	push   rdi
   140022988:	push   r12
   14002298a:	push   r15
   14002298c:	sub    rsp,0x70
   140022990:	xor    bpl,bpl
   140022993:	cmp    QWORD PTR [rcx+0x78],0x0
   140022998:	mov    r15d,r8d
   14002299b:	mov    edi,edx
   14002299d:	mov    rbx,rcx
   1400229a0:	jne    0x1400229d7
   1400229a2:	lea    r8,[rcx+0x69c]
   1400229a9:	xor    edx,edx
   1400229ab:	mov    ecx,0x20000
   1400229b0:	call   QWORD PTR [rip+0x45a72]        # 0x140068428
   1400229b6:	mov    rsi,rax
   1400229b9:	test   rax,rax
   1400229bc:	je     0x1400229c7
   1400229be:	mov    rcx,rax
   1400229c1:	call   QWORD PTR [rip+0x459d1]        # 0x140068398
   1400229c7:	xor    eax,eax
   1400229c9:	test   rsi,rsi
   1400229cc:	setne  al
   1400229cf:	test   eax,eax
   1400229d1:	jne    0x140022c34
   1400229d7:	mov    rcx,rbx
   1400229da:	mov    QWORD PTR [rsp+0xa8],r13
   1400229e2:	mov    QWORD PTR [rsp+0xb0],r14
   1400229ea:	call   0x140026930
   1400229ef:	test   edi,edi
   1400229f1:	lea    r13,[rip+0x48aa8]        # 0x14006b4a0
   1400229f8:	sete   r14b
   1400229fc:	xor    esi,esi
   1400229fe:	test   r14b,r14b
   140022a01:	jne    0x140022a9a
   140022a07:	cmp    QWORD PTR [rbx+0xf18],rsi
   140022a0e:	je     0x140022c24
   140022a14:	lea    rdx,[rsp+0x30]
   140022a19:	lea    rcx,[rbx+0xef8]
   140022a20:	call   0x140027af0
   140022a25:	lea    rdx,[rsp+0x48]
   140022a2a:	mov    rcx,rax
   140022a2d:	call   0x1400280a0
   140022a32:	mov    r8,rax
   140022a35:	mov    rax,QWORD PTR [rax]
   140022a38:	test   rax,rax
   140022a3b:	je     0x140022a40
   140022a3d:	mov    rax,QWORD PTR [rax]
   140022a40:	mov    r8,QWORD PTR [r8+0x10]
   140022a44:	mov    rdx,QWORD PTR [rax+0x10]
   140022a48:	mov    rcx,r8
   140022a4b:	and    r8d,0x3
   140022a4f:	shr    rcx,0x2
   140022a53:	cmp    rdx,rcx
   140022a56:	ja     0x140022a5b
   140022a58:	sub    rcx,rdx
   140022a5b:	mov    rax,QWORD PTR [rax+0x8]
   140022a5f:	mov    rcx,QWORD PTR [rax+rcx*8]
   140022a63:	mov    rax,QWORD PTR [rbx+0xf18]
   140022a6a:	mov    esi,DWORD PTR [rcx+r8*4]
   140022a6e:	test   rax,rax
   140022a71:	je     0x140022a8a
   140022a73:	dec    rax
   140022a76:	mov    QWORD PTR [rbx+0xf18],rax
   140022a7d:	jne    0x140022a8a
   140022a7f:	mov    QWORD PTR [rbx+0xf10],0x0
   140022a8a:	lea    r13,[rip+0x48a0f]        # 0x14006b4a0
   140022a91:	cmp    esi,0x1
   140022a94:	jne    0x140022b62
   140022a9a:	mov    eax,DWORD PTR [rbx+0xdf0]
   140022aa0:	xor    r9d,r9d
   140022aa3:	lea    rcx,[rip+0x4d866]        # 0x140070310
   140022aaa:	and    eax,0x1
   140022aad:	lea    r8d,[r9+0x6]
   140022ab1:	test   al,al
   140022ab3:	je     0x140022b42
   140022ab9:	xor    eax,eax
   140022abb:	mov    edx,0x371
   140022ac0:	mov    DWORD PTR [rsp+0x28],r15d
   140022ac5:	mov    QWORD PTR [rsp+0x50],rax
   140022aca:	mov    QWORD PTR [rsp+0x58],rax
   140022acf:	mov    QWORD PTR [rsp+0x60],rax
   140022ad4:	lea    rax,[rip+0x4daa5]        # 0x140070580
   140022adb:	mov    DWORD PTR [rsp+0x48],0x9
   140022ae3:	mov    DWORD PTR [rsp+0x50],edi
   140022ae7:	mov    QWORD PTR [rsp+0x20],rax
   140022aec:	mov    DWORD PTR [rsp+0x54],r15d
   140022af1:	call   0x140003150
   140022af6:	mov    r11,QWORD PTR [rbx+0x38]
   140022afa:	lea    r8,[rsp+0x48]
   140022aff:	lea    rcx,[rbx+0x38]
   140022b03:	mov    r9d,0x20
   140022b09:	mov    edx,0x12c
   140022b0e:	call   QWORD PTR [r11+0x8]
   140022b12:	mov    bpl,0x1
   140022b15:	test   r14b,r14b
   140022b18:	je     0x140022c24
   140022b1e:	lea    rcx,[rbx+0xef8]
   140022b25:	lea    rdx,[rsp+0xa0]
   140022b2d:	mov    DWORD PTR [rsp+0xa0],0x1
   140022b38:	call   0x140027870
   140022b3d:	jmp    0x140022c24
   140022b42:	lea    rax,[rip+0x4da4f]        # 0x140070598
   140022b49:	mov    edx,0x37d
   140022b4e:	mov    QWORD PTR [rsp+0x28],rax
   140022b53:	mov    QWORD PTR [rsp+0x20],r13
   140022b58:	call   0x140003150
   140022b5d:	test   r14b,r14b
   140022b60:	jne    0x140022b6b
   140022b62:	cmp    esi,0x2
   140022b65:	jne    0x140022c24
   140022b6b:	test   edi,edi
   140022b6d:	je     0x140022bbb
   140022b6f:	dec    edi
   140022b71:	jne    0x140022c24
   140022b77:	lea    rax,[rip+0x4da4a]        # 0x1400705c8
   140022b7e:	lea    r8d,[rdi+0x6]
   140022b82:	lea    rcx,[rip+0x4d787]        # 0x140070310
   140022b89:	mov    QWORD PTR [rsp+0x28],rax
   140022b8e:	xor    r9d,r9d
   140022b91:	mov    edx,0x397
   140022b96:	mov    QWORD PTR [rsp+0x20],r13
   140022b9b:	call   0x140003150
   140022ba0:	mov    r11,QWORD PTR [rbx]
   140022ba3:	xor    edx,edx
   140022ba5:	mov    rcx,rbx
   140022ba8:	call   QWORD PTR [r11+0x80]
   140022baf:	movzx  ebp,al
   140022bb2:	test   al,al
   140022bb4:	je     0x140022c24
   140022bb6:	lea    ecx,[rdi+0x1e]
   140022bb9:	jmp    0x140022c1e
   140022bbb:	xor    r9d,r9d
   140022bbe:	lea    rax,[rip+0x4d9eb]        # 0x1400705b0
   140022bc5:	lea    rcx,[rip+0x4d744]        # 0x140070310
   140022bcc:	mov    QWORD PTR [rsp+0x28],rax
   140022bd1:	lea    r8d,[r9+0x6]
   140022bd5:	mov    edx,0x38d
   140022bda:	mov    QWORD PTR [rsp+0x20],r13
   140022bdf:	call   0x140003150
   140022be4:	mov    r11,QWORD PTR [rbx]
   140022be7:	mov    dl,0x1
   140022be9:	mov    rcx,rbx
   140022bec:	call   QWORD PTR [r11+0x80]
   140022bf3:	movzx  ebp,al
   140022bf6:	test   al,al
   140022bf8:	je     0x140022c24
   140022bfa:	lea    rcx,[rbx+0xef8]
   140022c01:	lea    rdx,[rsp+0xa0]
   140022c09:	mov    DWORD PTR [rsp+0xa0],0x2
   140022c14:	call   0x140027870
   140022c19:	mov    ecx,0x28
   140022c1e:	call   QWORD PTR [rip+0x454fc]        # 0x140068120
   140022c24:	mov    r13,QWORD PTR [rsp+0xa8]
   140022c2c:	mov    r14,QWORD PTR [rsp+0xb0]
   140022c34:	movzx  eax,bpl
   140022c38:	mov    rbx,QWORD PTR [rsp+0xb8]
   140022c40:	add    rsp,0x70
   140022c44:	pop    r15
   140022c46:	pop    r12
   140022c48:	pop    rdi
   140022c49:	pop    rsi
   140022c4a:	pop    rbp
   140022c4b:	ret    
   140022c4c:	int3   
   140022c4d:	int3   
   140022c4e:	int3   
   140022c4f:	int3   
   140022c50:	mov    QWORD PTR [rsp+0x10],rbx
   140022c55:	mov    QWORD PTR [rsp+0x18],rbp
   140022c5a:	mov    QWORD PTR [rsp+0x20],rsi
   140022c5f:	push   r12
   140022c61:	sub    rsp,0x40
   140022c65:	cmp    QWORD PTR [rcx+0x78],0x0
   140022c6a:	lea    rbx,[rcx+0x38]
   140022c6e:	mov    rsi,r9
   140022c71:	mov    rbp,r8
   140022c74:	mov    r12,rdx
   140022c77:	jne    0x140022cb8
   140022c79:	lea    r8,[rbx+0x664]
   140022c80:	xor    edx,edx
   140022c82:	mov    ecx,0x20000
   140022c87:	mov    QWORD PTR [rsp+0x50],rdi
   140022c8c:	call   QWORD PTR [rip+0x45796]        # 0x140068428
   140022c92:	mov    rdi,rax
   140022c95:	test   rax,rax
   140022c98:	je     0x140022ca3
   140022c9a:	mov    rcx,rax
   140022c9d:	call   QWORD PTR [rip+0x456f5]        # 0x140068398
   140022ca3:	xor    ecx,ecx
   140022ca5:	test   rdi,rdi
   140022ca8:	mov    rdi,QWORD PTR [rsp+0x50]
   140022cad:	setne  cl
   140022cb0:	test   ecx,ecx
   140022cb2:	jne    0x140022d4b
   140022cb8:	xor    eax,eax
   140022cba:	lea    r8,[rsp+0x20]
   140022cbf:	mov    r9d,0x20
   140022cc5:	mov    QWORD PTR [rsp+0x28],rax
   140022cca:	mov    QWORD PTR [rsp+0x30],rax
   140022ccf:	mov    QWORD PTR [rsp+0x38],rax
   140022cd4:	mov    rax,QWORD PTR [rbx]
   140022cd7:	mov    edx,0x12c
   140022cdc:	mov    rcx,rbx
   140022cdf:	mov    DWORD PTR [rsp+0x20],0x7
   140022ce7:	call   QWORD PTR [rax+0x8]
   140022cea:	test   eax,eax
   140022cec:	je     0x140022d4b
   140022cee:	mov    rax,QWORD PTR [rbx]
   140022cf1:	mov    rcx,rbx
   140022cf4:	call   QWORD PTR [rax+0x10]
   140022cf7:	mov    r11,rax
   140022cfa:	test   r12,r12
   140022cfd:	je     0x140022d06
   140022cff:	mov    ecx,DWORD PTR [rax+0x8]
   140022d02:	mov    DWORD PTR [r12],ecx
   140022d06:	test   rbp,rbp
   140022d09:	je     0x140022d11
   140022d0b:	mov    ecx,DWORD PTR [rax+0xc]
   140022d0e:	mov    DWORD PTR [rbp+0x0],ecx
   140022d11:	test   rsi,rsi
   140022d14:	je     0x140022d1b
   140022d16:	mov    eax,DWORD PTR [rax+0x10]
   140022d19:	mov    DWORD PTR [rsi],eax
   140022d1b:	mov    rcx,QWORD PTR [rsp+0x70]
   140022d20:	test   rcx,rcx
   140022d23:	je     0x140022d2b
   140022d25:	mov    eax,DWORD PTR [r11+0x14]
   140022d29:	mov    DWORD PTR [rcx],eax
   140022d2b:	cmp    DWORD PTR [r11+0x8],0x0
   140022d30:	jg     0x140022d47
   140022d32:	cmp    DWORD PTR [r11+0xc],0x0
   140022d37:	jg     0x140022d47
   140022d39:	cmp    DWORD PTR [r11+0x10],0x0
   140022d3e:	jg     0x140022d47
   140022d40:	cmp    DWORD PTR [r11+0x14],0x0
   140022d45:	jle    0x140022d4b
   140022d47:	mov    al,0x1
   140022d49:	jmp    0x140022d4d
   140022d4b:	xor    al,al
   140022d4d:	mov    rbx,QWORD PTR [rsp+0x58]
   140022d52:	mov    rbp,QWORD PTR [rsp+0x60]
   140022d57:	mov    rsi,QWORD PTR [rsp+0x68]
   140022d5c:	add    rsp,0x40
   140022d60:	pop    r12
   140022d62:	ret    
   140022d63:	int3   
   140022d64:	int3   
   140022d65:	int3   
   140022d66:	int3   
   140022d67:	int3   
   140022d68:	int3   
   140022d69:	int3   
   140022d6a:	int3   
   140022d6b:	int3   
   140022d6c:	int3   
   140022d6d:	int3   
   140022d6e:	int3   
   140022d6f:	int3   
   140022d70:	sub    rsp,0x28
   140022d74:	mov    rax,QWORD PTR [rcx+0x38]
   140022d78:	add    rcx,0x38
   140022d7c:	call   QWORD PTR [rax+0x30]
   140022d7f:	test   eax,eax
   140022d81:	setne  al
   140022d84:	add    rsp,0x28
   140022d88:	ret    
   140022d89:	int3   
   140022d8a:	int3   
   140022d8b:	int3   
   140022d8c:	int3   
   140022d8d:	int3   
   140022d8e:	int3   
   140022d8f:	int3   
   140022d90:	mov    rax,rsp
   140022d93:	push   rsi
   140022d94:	push   rdi
   140022d95:	push   r12
   140022d97:	sub    rsp,0x60
   140022d9b:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140022da4:	mov    QWORD PTR [rax+0x8],rbx
   140022da8:	mov    QWORD PTR [rax+0x10],rbp
   140022dac:	mov    ebp,r9d
   140022daf:	mov    r12,r8
   140022db2:	mov    rax,rdx
   140022db5:	mov    rsi,rcx
   140022db8:	xor    dil,dil
   140022dbb:	cmp    r9d,0x1
   140022dbf:	jne    0x140022de3
   140022dc1:	mov    rax,QWORD PTR [rcx]
   140022dc4:	mov    DWORD PTR [rsp+0x20],r9d
   140022dc9:	lea    r9,[rip+0x484c6]        # 0x14006b296
   140022dd0:	xor    r8d,r8d
   140022dd3:	xor    edx,edx
   140022dd5:	call   QWORD PTR [rax+0xc0]
   140022ddb:	movzx  edi,al
   140022dde:	jmp    0x140022f5b
   140022de3:	mov    QWORD PTR [rsp+0x38],0x0
   140022dec:	mov    QWORD PTR [rsp+0x40],0x0
   140022df5:	mov    QWORD PTR [rsp+0x48],0x0
   140022dfe:	lea    rdx,[rsp+0x38]
   140022e03:	mov    rcx,rax
   140022e06:	call   0x140020630
   140022e0b:	mov    rbx,QWORD PTR [rsp+0x38]
   140022e10:	test   al,al
   140022e12:	je     0x140022f4e
   140022e18:	mov    BYTE PTR [rsp+0x98],0x0
   140022e20:	lea    rax,[rsp+0x98]
   140022e28:	mov    rcx,QWORD PTR [rsp+0x40]
   140022e2d:	cmp    rax,rcx
   140022e30:	jae    0x140022ebd
   140022e36:	lea    rax,[rsp+0x98]
   140022e3e:	cmp    rbx,rax
   140022e41:	ja     0x140022ebd
   140022e43:	lea    rdi,[rsp+0x98]
   140022e4b:	sub    rdi,rbx
   140022e4e:	mov    rdx,QWORD PTR [rsp+0x48]
   140022e53:	cmp    rcx,rdx
   140022e56:	jne    0x140022eb0
   140022e58:	mov    rax,rcx
   140022e5b:	sub    rax,rbx
   140022e5e:	cmp    rax,0xfffffffffffffffe
   140022e62:	jbe    0x140022e71
   140022e64:	lea    rcx,[rip+0x487bd]        # 0x14006b628
   140022e6b:	call   0x140032d00
   140022e70:	int3   
   140022e71:	inc    rax
   140022e74:	sub    rdx,rbx
   140022e77:	cmp    rax,rdx
   140022e7a:	jbe    0x140022eb0
   140022e7c:	mov    r8,rdx
   140022e7f:	shr    r8,1
   140022e82:	or     rcx,0xffffffffffffffff
   140022e86:	sub    rcx,r8
   140022e89:	cmp    rcx,rdx
   140022e8c:	jae    0x140022e92
   140022e8e:	xor    edx,edx
   140022e90:	jmp    0x140022e95
   140022e92:	add    rdx,r8
   140022e95:	cmp    rdx,rax
   140022e98:	cmovb  rdx,rax
   140022e9c:	lea    rcx,[rsp+0x38]
   140022ea1:	call   0x140027a40
   140022ea6:	mov    rcx,QWORD PTR [rsp+0x40]
   140022eab:	mov    rbx,QWORD PTR [rsp+0x38]
   140022eb0:	test   rcx,rcx
   140022eb3:	je     0x140022f27
   140022eb5:	movzx  eax,BYTE PTR [rbx+rdi*1]
   140022eb9:	mov    BYTE PTR [rcx],al
   140022ebb:	jmp    0x140022f27
   140022ebd:	mov    rdx,QWORD PTR [rsp+0x48]
   140022ec2:	cmp    rcx,rdx
   140022ec5:	jne    0x140022f1f
   140022ec7:	mov    rax,rcx
   140022eca:	sub    rax,rbx
   140022ecd:	cmp    rax,0xfffffffffffffffe
   140022ed1:	jbe    0x140022ee0
   140022ed3:	lea    rcx,[rip+0x4874e]        # 0x14006b628
   140022eda:	call   0x140032d00
   140022edf:	int3   
   140022ee0:	inc    rax
   140022ee3:	sub    rdx,rbx
   140022ee6:	cmp    rax,rdx
   140022ee9:	jbe    0x140022f1f
   140022eeb:	mov    r8,rdx
   140022eee:	shr    r8,1
   140022ef1:	or     rcx,0xffffffffffffffff
   140022ef5:	sub    rcx,r8
   140022ef8:	cmp    rcx,rdx
   140022efb:	jae    0x140022f01
   140022efd:	xor    edx,edx
   140022eff:	jmp    0x140022f04
   140022f01:	add    rdx,r8
   140022f04:	cmp    rdx,rax
   140022f07:	cmovb  rdx,rax
   140022f0b:	lea    rcx,[rsp+0x38]
   140022f10:	call   0x140027a40
   140022f15:	mov    rcx,QWORD PTR [rsp+0x40]
   140022f1a:	mov    rbx,QWORD PTR [rsp+0x38]
   140022f1f:	test   rcx,rcx
   140022f22:	je     0x140022f27
   140022f24:	mov    BYTE PTR [rcx],0x0
   140022f27:	inc    rcx
   140022f2a:	mov    QWORD PTR [rsp+0x40],rcx
   140022f2f:	sub    ecx,ebx
   140022f31:	mov    rax,QWORD PTR [rsi]
   140022f34:	mov    DWORD PTR [rsp+0x20],ebp
   140022f38:	mov    r9,r12
   140022f3b:	lea    r8d,[rcx-0x1]
   140022f3f:	mov    rdx,rbx
   140022f42:	mov    rcx,rsi
   140022f45:	call   QWORD PTR [rax+0xc0]
   140022f4b:	movzx  edi,al
   140022f4e:	test   rbx,rbx
   140022f51:	je     0x140022f5b
   140022f53:	mov    rcx,rbx
   140022f56:	call   0x1400330c0
   140022f5b:	movzx  eax,dil
   140022f5f:	lea    r11,[rsp+0x60]
   140022f64:	mov    rbx,QWORD PTR [r11+0x20]
   140022f68:	mov    rbp,QWORD PTR [r11+0x28]
   140022f6c:	mov    rsp,r11
   140022f6f:	pop    r12
   140022f71:	pop    rdi
   140022f72:	pop    rsi
   140022f73:	ret    
   140022f74:	int3   
   140022f75:	int3   
   140022f76:	int3   
   140022f77:	int3   
   140022f78:	int3   
   140022f79:	int3   
   140022f7a:	int3   
   140022f7b:	int3   
   140022f7c:	int3   
   140022f7d:	int3   
   140022f7e:	int3   
   140022f7f:	int3   
   140022f80:	rex push rbp
   140022f82:	push   rbx
   140022f83:	push   rsi
   140022f84:	push   rdi
   140022f85:	push   r12
   140022f87:	push   r13
   140022f89:	push   r14
   140022f8b:	push   r15
   140022f8d:	lea    rbp,[rsp-0x1e8]
   140022f95:	sub    rsp,0x2e8
   140022f9c:	mov    QWORD PTR [rbp+0x10],0xfffffffffffffffe
   140022fa4:	mov    rax,QWORD PTR [rip+0x620fd]        # 0x1400850a8
   140022fab:	xor    rax,rsp
   140022fae:	mov    QWORD PTR [rbp+0x1d0],rax
   140022fb5:	mov    r12,r9
   140022fb8:	mov    esi,r8d
   140022fbb:	mov    rdi,rdx
   140022fbe:	mov    rbx,rcx
   140022fc1:	mov    QWORD PTR [rsp+0x58],rcx
   140022fc6:	xor    r14b,r14b
   140022fc9:	mov    eax,DWORD PTR [rbp+0x250]
   140022fcf:	cmp    eax,0x1
   140022fd2:	jne    0x140022fe1
   140022fd4:	lea    r13,[rcx+0xcb8]
   140022fdb:	movzx  r14d,al
   140022fdf:	jmp    0x140023006
   140022fe1:	mov    ecx,0xf0
   140022fe6:	call   0x1400331a0
   140022feb:	test   rax,rax
   140022fee:	je     0x140022ffd
   140022ff0:	mov    rcx,rax
   140022ff3:	call   0x14002ccc0
   140022ff8:	mov    r13,rax
   140022ffb:	jmp    0x140023000
   140022ffd:	xor    r13d,r13d
   140023000:	mov    eax,DWORD PTR [rbp+0x250]
   140023006:	mov    QWORD PTR [rsp+0x50],r13
   14002300b:	test   r13,r13
   14002300e:	je     0x1400231e2
   140023014:	cmp    eax,0x1
   140023017:	je     0x1400231e2
   14002301d:	mov    r9d,0x1
   140023023:	mov    r8d,esi
   140023026:	mov    rdx,rdi
   140023029:	mov    rcx,r13
   14002302c:	call   0x14002ced0
   140023031:	test   al,al
   140023033:	jne    0x140023051
   140023035:	mov    r9d,0x1
   14002303b:	mov    r8d,esi
   14002303e:	mov    rdx,rdi
   140023041:	mov    rcx,r13
   140023044:	call   0x14002d1d0
   140023049:	test   al,al
   14002304b:	je     0x1400231e2
   140023051:	lea    r15,[rip+0x54368]        # 0x1400773c0
   140023058:	mov    QWORD PTR [rbp-0x40],r15
   14002305c:	xor    r8d,r8d
   14002305f:	mov    QWORD PTR [rbp-0x30],r8
   140023063:	mov    ecx,DWORD PTR [rbx+0xc64]
   140023069:	mov    eax,ecx
   14002306b:	and    eax,0x2
   14002306e:	cmp    al,0x2
   140023070:	jne    0x140023079
   140023072:	mov    eax,0x200
   140023077:	jmp    0x14002308a
   140023079:	and    cl,0x4
   14002307c:	mov    eax,r8d
   14002307f:	mov    edx,0x100
   140023084:	cmp    cl,0x4
   140023087:	cmove  eax,edx
   14002308a:	mov    QWORD PTR [rbp-0x38],r8
   14002308e:	or     eax,0x20017
   140023093:	mov    QWORD PTR [rsp+0x40],r8
   140023098:	lea    rcx,[rbp-0x38]
   14002309c:	mov    QWORD PTR [rsp+0x38],rcx
   1400230a1:	mov    QWORD PTR [rsp+0x30],r8
   1400230a6:	mov    DWORD PTR [rsp+0x28],eax
   1400230aa:	mov    DWORD PTR [rsp+0x20],r8d
   1400230af:	xor    r9d,r9d
   1400230b2:	xor    r8d,r8d
   1400230b5:	mov    rdx,QWORD PTR [rbx+0xc88]
   1400230bc:	mov    rcx,0xffffffff80000002
   1400230c3:	call   QWORD PTR [rip+0x44f6f]        # 0x140068038
   1400230c9:	test   eax,eax
   1400230cb:	jne    0x1400231cf
   1400230d1:	mov    BYTE PTR [rbp+0xc0],al
   1400230d7:	xor    edx,edx
   1400230d9:	mov    r8d,0x103
   1400230df:	lea    rcx,[rbp+0xc1]
   1400230e6:	call   0x140036dc0
   1400230eb:	lea    r8,[rip+0x4d4ee]        # 0x1400705e0
   1400230f2:	mov    edx,0x104
   1400230f7:	lea    rcx,[rbp+0xc0]
   1400230fe:	call   0x1400336a8
   140023103:	lea    r11,[rbp+0x38]
   140023107:	mov    QWORD PTR [rbp+0x30],r11
   14002310b:	test   r12,r12
   14002310e:	jne    0x140023119
   140023110:	xor    r8d,r8d
   140023113:	mov    QWORD PTR [rbp+0x30],r8
   140023117:	jmp    0x140023183
   140023119:	mov    rcx,r12
   14002311c:	call   QWORD PTR [rip+0x452be]        # 0x1400683e0
   140023122:	lea    ebx,[rax+0x1]
   140023125:	lea    r8,[rbp+0x38]
   140023129:	mov    edx,ebx
   14002312b:	lea    rcx,[rbp+0x30]
   14002312f:	call   0x140002f80
   140023134:	movsxd rdx,ebx
   140023137:	mov    r9,rdx
   14002313a:	mov    r8,r12
   14002313d:	mov    rcx,QWORD PTR [rbp+0x30]
   140023141:	call   0x140033ccc
   140023146:	test   eax,eax
   140023148:	je     0x14002317f
   14002314a:	cmp    eax,0xc
   14002314d:	je     0x140023174
   14002314f:	cmp    eax,0x16
   140023152:	je     0x140023169
   140023154:	cmp    eax,0x22
   140023157:	je     0x140023169
   140023159:	cmp    eax,0x50
   14002315c:	je     0x14002317f
   14002315e:	mov    ecx,0x80004005
   140023163:	call   0x1400025f0
   140023168:	int3   
   140023169:	mov    ecx,0x80070057
   14002316e:	call   0x1400025f0
   140023173:	int3   
   140023174:	mov    ecx,0x8007000e
   140023179:	call   0x1400025f0
   14002317e:	int3   
   14002317f:	mov    r8,QWORD PTR [rbp+0x30]
   140023183:	mov    edx,0x104
   140023188:	lea    rcx,[rbp+0xc0]
   14002318f:	call   0x1400330c8
   140023194:	lea    r11,[rbp+0x38]
   140023198:	mov    rcx,QWORD PTR [rbp+0x30]
   14002319c:	cmp    rcx,r11
   14002319f:	je     0x1400231a6
   1400231a1:	call   0x140033594
   1400231a6:	mov    DWORD PTR [rsp+0x28],esi
   1400231aa:	mov    QWORD PTR [rsp+0x20],rdi
   1400231af:	mov    r9d,0x3
   1400231b5:	xor    r8d,r8d
   1400231b8:	lea    rdx,[rbp+0xc0]
   1400231bf:	mov    rcx,QWORD PTR [rbp-0x38]
   1400231c3:	call   QWORD PTR [rip+0x44e77]        # 0x140068040
   1400231c9:	test   eax,eax
   1400231cb:	sete   r14b
   1400231cf:	mov    QWORD PTR [rbp-0x40],r15
   1400231d3:	mov    rcx,QWORD PTR [rbp-0x38]
   1400231d7:	test   rcx,rcx
   1400231da:	je     0x1400231e2
   1400231dc:	call   QWORD PTR [rip+0x44e66]        # 0x140068048
   1400231e2:	test   r14b,r14b
   1400231e5:	je     0x140023892
   1400231eb:	mov    rbx,QWORD PTR [r13+0xb0]
   1400231f2:	sub    rbx,QWORD PTR [r13+0xa8]
   1400231f9:	sar    rbx,0x3
   1400231fd:	mov    r14,QWORD PTR [rsp+0x58]
   140023202:	mov    rcx,r14
   140023205:	call   0x140022630
   14002320a:	xor    r13d,r13d
   14002320d:	xor    r12d,r12d
   140023210:	movsxd r15,ebx
   140023213:	test   ebx,ebx
   140023215:	jle    0x1400233f0
   14002321b:	mov    rax,QWORD PTR [rsp+0x50]
   140023220:	mov    rbx,QWORD PTR [rax+0xa8]
   140023227:	mov    rax,QWORD PTR [rax+0xb0]
   14002322e:	sub    rax,rbx
   140023231:	sar    rax,0x3
   140023235:	cmp    r13d,eax
   140023238:	jge    0x1400233dc
   14002323e:	mov    rbx,QWORD PTR [rbx+r12*8]
   140023242:	test   rbx,rbx
   140023245:	je     0x1400233dc
   14002324b:	mov    esi,DWORD PTR [rbx+0xa8]
   140023251:	mov    edi,DWORD PTR [rbx+0xac]
   140023257:	test   esi,esi
   140023259:	js     0x1400233dc
   14002325f:	test   edi,edi
   140023261:	js     0x1400233dc
   140023267:	mov    r9d,0x1
   14002326d:	mov    r8d,edi
   140023270:	mov    edx,esi
   140023272:	mov    rcx,r14
   140023275:	call   0x140025e00
   14002327a:	mov    r14,rax
   14002327d:	test   BYTE PTR [rbx+0xb0],0x1
   140023284:	je     0x14002333e
   14002328a:	cmp    DWORD PTR [rbx+0xb4],0x0
   140023291:	jne    0x14002333e
   140023297:	lea    rcx,[rip+0x634ba]        # 0x140086758
   14002329e:	mov    rax,QWORD PTR [rip+0x634b3]        # 0x140086758
   1400232a5:	call   QWORD PTR [rax+0x18]
   1400232a8:	add    rax,0x18
   1400232ac:	mov    QWORD PTR [rbp-0x68],rax
   1400232b0:	mov    r8d,esi
   1400232b3:	lea    rdx,[rip+0x4d336]        # 0x1400705f0
   1400232ba:	lea    rcx,[rbp-0x68]
   1400232be:	call   0x140015180
   1400232c3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400232c8:	add    rcx,0xc10
   1400232cf:	mov    r8d,edi
   1400232d2:	mov    rbx,QWORD PTR [rbp-0x68]
   1400232d6:	mov    rdx,rbx
   1400232d9:	call   0x140031820
   1400232de:	mov    rax,QWORD PTR [rsp+0x58]
   1400232e3:	cmp    esi,DWORD PTR [rax+0xda8]
   1400232e9:	jne    0x140023323
   1400232eb:	mov    DWORD PTR [rax+0xdac],edi
   1400232f1:	mov    DWORD PTR [rbp-0x70],edi
   1400232f4:	mov    DWORD PTR [rsp+0x28],0x4
   1400232fc:	lea    rcx,[rbp-0x70]
   140023300:	mov    QWORD PTR [rsp+0x20],rcx
   140023305:	mov    r9d,0x4
   14002330b:	xor    r8d,r8d
   14002330e:	lea    rdx,[rip+0x4d233]        # 0x140070548
   140023315:	mov    rcx,QWORD PTR [rax+0xc18]
   14002331c:	call   QWORD PTR [rip+0x44d1e]        # 0x140068040
   140023322:	nop
   140023323:	lea    rdx,[rbx-0x18]
   140023327:	or     eax,0xffffffff
   14002332a:	lock xadd DWORD PTR [rdx+0x10],eax
   14002332f:	dec    eax
   140023331:	test   eax,eax
   140023333:	jg     0x14002333e
   140023335:	mov    rcx,QWORD PTR [rdx]
   140023338:	mov    rax,QWORD PTR [rcx]
   14002333b:	call   QWORD PTR [rax+0x8]
   14002333e:	xor    r8d,r8d
   140023341:	xor    edx,edx
   140023343:	mov    rax,QWORD PTR [rsp+0x50]
   140023348:	mov    rcx,QWORD PTR [rax+0xa8]
   14002334f:	mov    r9,QWORD PTR [rax+0xb0]
   140023356:	sub    r9,rcx
   140023359:	sar    r9,0x3
   14002335d:	test   r9d,r9d
   140023360:	jle    0x1400233d0
   140023362:	mov    rax,QWORD PTR [rcx]
   140023365:	test   rax,rax
   140023368:	je     0x14002338a
   14002336a:	cmp    esi,DWORD PTR [rax+0xa8]
   140023370:	jne    0x14002338a
   140023372:	cmp    edi,DWORD PTR [rax+0xac]
   140023378:	jne    0x14002338a
   14002337a:	test   BYTE PTR [rax+0xb0],0x1
   140023381:	je     0x14002338a
   140023383:	or     r8d,DWORD PTR [rax+0xb4]
   14002338a:	inc    edx
   14002338c:	add    rcx,0x8
   140023390:	cmp    edx,r9d
   140023393:	jl     0x140023362
   140023395:	test   r8d,r8d
   140023398:	je     0x1400233d7
   14002339a:	test   r14,r14
   14002339d:	je     0x1400233d7
   14002339f:	mov    DWORD PTR [rbp-0x80],r8d
   1400233a3:	mov    DWORD PTR [rsp+0x28],0x4
   1400233ab:	lea    rax,[rbp-0x80]
   1400233af:	mov    QWORD PTR [rsp+0x20],rax
   1400233b4:	mov    r9d,0x4
   1400233ba:	xor    r8d,r8d
   1400233bd:	lea    rdx,[rip+0x4d240]        # 0x140070604
   1400233c4:	mov    rcx,QWORD PTR [r14+0x8]
   1400233c8:	call   QWORD PTR [rip+0x44c72]        # 0x140068040
   1400233ce:	jmp    0x1400233d7
   1400233d0:	mov    r14,QWORD PTR [rsp+0x58]
   1400233d5:	jmp    0x1400233e1
   1400233d7:	mov    r14,QWORD PTR [rsp+0x58]
   1400233dc:	mov    rax,QWORD PTR [rsp+0x50]
   1400233e1:	inc    r13d
   1400233e4:	inc    r12
   1400233e7:	cmp    r12,r15
   1400233ea:	jl     0x140023220
   1400233f0:	lea    rcx,[r14+0xcb8]
   1400233f7:	call   0x14002d9f0
   1400233fc:	mov    rcx,r14
   1400233ff:	call   0x140021440
   140023404:	mov    rcx,r14
   140023407:	call   0x140025fc0
   14002340c:	xor    r15d,r15d
   14002340f:	mov    QWORD PTR [rsp+0x70],r15
   140023414:	lea    ecx,[r15+0x48]
   140023418:	call   0x1400331a0
   14002341d:	test   rax,rax
   140023420:	je     0x140023865
   140023426:	mov    QWORD PTR [rsp+0x68],rax
   14002342b:	mov    QWORD PTR [rax],rax
   14002342e:	mov    rax,QWORD PTR [rsp+0x68]
   140023433:	mov    QWORD PTR [rax+0x8],rax
   140023437:	mov    rax,QWORD PTR [rsp+0x68]
   14002343c:	mov    QWORD PTR [rax+0x10],rax
   140023440:	mov    rax,QWORD PTR [rsp+0x68]
   140023445:	mov    BYTE PTR [rax+0x40],0x1
   140023449:	mov    rax,QWORD PTR [rsp+0x68]
   14002344e:	mov    BYTE PTR [rax+0x41],0x1
   140023452:	mov    edi,r15d
   140023455:	mov    rax,QWORD PTR [r14+0xd68]
   14002345c:	sub    rax,QWORD PTR [r14+0xd60]
   140023463:	sar    rax,0x3
   140023467:	test   eax,eax
   140023469:	jle    0x1400234e1
   14002346f:	mov    r12d,r15d
   140023472:	cmp    r15d,eax
   140023475:	jge    0x1400234c5
   140023477:	mov    rax,QWORD PTR [r14+0xd60]
   14002347e:	mov    rcx,QWORD PTR [r12+rax*1]
   140023482:	test   rcx,rcx
   140023485:	je     0x1400234c5
   140023487:	mov    eax,DWORD PTR [rcx+0xa8]
   14002348d:	mov    DWORD PTR [rbp-0x78],eax
   140023490:	mov    eax,DWORD PTR [rcx+0xac]
   140023496:	mov    DWORD PTR [rbp-0x74],eax
   140023499:	lea    rdx,[rbp-0x78]
   14002349d:	lea    rcx,[rsp+0x60]
   1400234a2:	call   0x14002e990
   1400234a7:	mov    rbx,rax
   1400234aa:	lea    rdx,[rbp-0x74]
   1400234ae:	mov    rcx,rax
   1400234b1:	call   0x140028f00
   1400234b6:	mov    r8,rax
   1400234b9:	lea    rdx,[rbp+0x18]
   1400234bd:	mov    rcx,rbx
   1400234c0:	call   0x14002f4a0
   1400234c5:	inc    edi
   1400234c7:	add    r12,0x8
   1400234cb:	mov    rax,QWORD PTR [r14+0xd68]
   1400234d2:	sub    rax,QWORD PTR [r14+0xd60]
   1400234d9:	sar    rax,0x3
   1400234dd:	cmp    edi,eax
   1400234df:	jl     0x140023477
   1400234e1:	mov    rsi,QWORD PTR [rsp+0x68]
   1400234e6:	mov    rdi,QWORD PTR [rsi]
   1400234e9:	cmp    rdi,rsi
   1400234ec:	je     0x14002369c
   1400234f2:	lea    rdx,[rdi+0x20]
   1400234f6:	lea    rcx,[rbp-0x60]
   1400234fa:	call   0x140027a00
   1400234ff:	nop
   140023500:	mov    rsi,QWORD PTR [rbp-0x58]
   140023504:	mov    rbx,QWORD PTR [rsi]
   140023507:	cmp    rbx,rsi
   14002350a:	je     0x140023577
   14002350c:	nop    DWORD PTR [rax+0x0]
   140023510:	mov    rax,QWORD PTR [r14]
   140023513:	mov    r8d,DWORD PTR [rbx+0x18]
   140023517:	mov    edx,DWORD PTR [rdi+0x18]
   14002351a:	mov    rcx,r14
   14002351d:	call   QWORD PTR [rax+0xd0]
   140023523:	cmp    BYTE PTR [rbx+0x1d],0x0
   140023527:	jne    0x14002356e
   140023529:	mov    rax,QWORD PTR [rbx+0x10]
   14002352d:	cmp    BYTE PTR [rax+0x1d],0x0
   140023531:	jne    0x14002354e
   140023533:	mov    rbx,rax
   140023536:	mov    rax,QWORD PTR [rax]
   140023539:	cmp    BYTE PTR [rax+0x1d],0x0
   14002353d:	jne    0x14002356e
   14002353f:	nop
   140023540:	mov    rbx,rax
   140023543:	mov    rax,QWORD PTR [rax]
   140023546:	cmp    BYTE PTR [rax+0x1d],0x0
   14002354a:	je     0x140023540
   14002354c:	jmp    0x14002356e
   14002354e:	mov    rax,QWORD PTR [rbx+0x8]
   140023552:	cmp    BYTE PTR [rax+0x1d],0x0
   140023556:	jne    0x14002356b
   140023558:	cmp    rbx,QWORD PTR [rax+0x10]
   14002355c:	jne    0x14002356b
   14002355e:	mov    rbx,rax
   140023561:	mov    rax,QWORD PTR [rax+0x8]
   140023565:	cmp    BYTE PTR [rax+0x1d],0x0
   140023569:	je     0x140023558
   14002356b:	mov    rbx,rax
   14002356e:	mov    rsi,QWORD PTR [rbp-0x58]
   140023572:	cmp    rbx,rsi
   140023575:	jne    0x140023510
   140023577:	mov    rbx,QWORD PTR [rsi]
   14002357a:	cmp    rbx,rbx
   14002357d:	jne    0x1400235ce
   14002357f:	mov    r12,QWORD PTR [rsi+0x8]
   140023583:	mov    rbx,r12
   140023586:	cmp    BYTE PTR [r12+0x1d],0x0
   14002358c:	jne    0x1400235b5
   14002358e:	xchg   ax,ax
   140023590:	mov    rdx,QWORD PTR [rbx+0x10]
   140023594:	lea    rcx,[rbp-0x60]
   140023598:	call   0x140028a70
   14002359d:	mov    rbx,QWORD PTR [rbx]
   1400235a0:	mov    rcx,r12
   1400235a3:	call   0x1400330c0
   1400235a8:	mov    r12,rbx
   1400235ab:	cmp    BYTE PTR [rbx+0x1d],0x0
   1400235af:	je     0x140023590
   1400235b1:	mov    rsi,QWORD PTR [rbp-0x58]
   1400235b5:	mov    QWORD PTR [rsi+0x8],rsi
   1400235b9:	mov    rax,QWORD PTR [rbp-0x58]
   1400235bd:	mov    QWORD PTR [rax],rax
   1400235c0:	mov    rax,QWORD PTR [rbp-0x58]
   1400235c4:	mov    QWORD PTR [rax+0x10],rax
   1400235c8:	mov    QWORD PTR [rbp-0x50],r15
   1400235cc:	jmp    0x140023638
   1400235ce:	cmp    rbx,rsi
   1400235d1:	je     0x14002363c
   1400235d3:	mov    r8,rbx
   1400235d6:	cmp    BYTE PTR [rbx+0x1d],0x0
   1400235da:	jne    0x140023626
   1400235dc:	mov    rax,QWORD PTR [rbx+0x10]
   1400235e0:	cmp    BYTE PTR [rax+0x1d],0x0
   1400235e4:	jne    0x140023600
   1400235e6:	mov    rbx,rax
   1400235e9:	mov    rax,QWORD PTR [rax]
   1400235ec:	cmp    BYTE PTR [rax+0x1d],0x0
   1400235f0:	jne    0x140023626
   1400235f2:	mov    rbx,rax
   1400235f5:	mov    rax,QWORD PTR [rax]
   1400235f8:	cmp    BYTE PTR [rax+0x1d],0x0
   1400235fc:	je     0x1400235f2
   1400235fe:	jmp    0x140023626
   140023600:	mov    rax,QWORD PTR [rbx+0x8]
   140023604:	cmp    BYTE PTR [rax+0x1d],0x0
   140023608:	jne    0x140023623
   14002360a:	nop    WORD PTR [rax+rax*1+0x0]
   140023610:	cmp    rbx,QWORD PTR [rax+0x10]
   140023614:	jne    0x140023623
   140023616:	mov    rbx,rax
   140023619:	mov    rax,QWORD PTR [rax+0x8]
   14002361d:	cmp    BYTE PTR [rax+0x1d],0x0
   140023621:	je     0x140023610
   140023623:	mov    rbx,rax
   140023626:	lea    rdx,[rbp-0x28]
   14002362a:	lea    rcx,[rbp-0x60]
   14002362e:	call   0x140028500
   140023633:	cmp    rbx,rsi
   140023636:	jne    0x1400235d3
   140023638:	mov    rsi,QWORD PTR [rbp-0x58]
   14002363c:	mov    rcx,rsi
   14002363f:	call   0x1400330c0
   140023644:	cmp    BYTE PTR [rdi+0x41],0x0
   140023648:	jne    0x14002368e
   14002364a:	mov    rax,QWORD PTR [rdi+0x10]
   14002364e:	cmp    BYTE PTR [rax+0x41],0x0
   140023652:	jne    0x14002366e
   140023654:	mov    rdi,rax
   140023657:	mov    rax,QWORD PTR [rax]
   14002365a:	cmp    BYTE PTR [rax+0x41],0x0
   14002365e:	jne    0x14002368e
   140023660:	mov    rdi,rax
   140023663:	mov    rax,QWORD PTR [rax]
   140023666:	cmp    BYTE PTR [rax+0x41],0x0
   14002366a:	je     0x140023660
   14002366c:	jmp    0x14002368e
   14002366e:	mov    rax,QWORD PTR [rdi+0x8]
   140023672:	cmp    BYTE PTR [rax+0x41],0x0
   140023676:	jne    0x14002368b
   140023678:	cmp    rdi,QWORD PTR [rax+0x10]
   14002367c:	jne    0x14002368b
   14002367e:	mov    rdi,rax
   140023681:	mov    rax,QWORD PTR [rax+0x8]
   140023685:	cmp    BYTE PTR [rax+0x41],0x0
   140023689:	je     0x140023678
   14002368b:	mov    rdi,rax
   14002368e:	mov    rsi,QWORD PTR [rsp+0x68]
   140023693:	cmp    rdi,rsi
   140023696:	jne    0x1400234f2
   14002369c:	mov    r14b,0x1
   14002369f:	mov    rbx,QWORD PTR [rsi]
   1400236a2:	cmp    rbx,rbx
   1400236a5:	jne    0x1400237e8
   1400236ab:	mov    r13,QWORD PTR [rsi+0x8]
   1400236af:	mov    r12,r13
   1400236b2:	cmp    BYTE PTR [r13+0x41],0x0
   1400236b7:	jne    0x1400237cc
   1400236bd:	nop    DWORD PTR [rax]
   1400236c0:	mov    rdx,QWORD PTR [r12+0x10]
   1400236c5:	lea    rcx,[rsp+0x60]
   1400236ca:	call   0x140028980
   1400236cf:	mov    r12,QWORD PTR [r12]
   1400236d3:	lea    rsi,[r13+0x20]
   1400236d7:	mov    QWORD PTR [rbp-0x28],rsi
   1400236db:	mov    rdi,QWORD PTR [rsi+0x8]
   1400236df:	mov    rbx,QWORD PTR [rdi]
   1400236e2:	cmp    rbx,rbx
   1400236e5:	jne    0x14002373d
   1400236e7:	cmp    rdi,rdi
   1400236ea:	jne    0x14002373d
   1400236ec:	mov    rdi,QWORD PTR [rdi+0x8]
   1400236f0:	mov    rbx,rdi
   1400236f3:	cmp    BYTE PTR [rdi+0x1d],0x0
   1400236f7:	jne    0x140023720
   1400236f9:	nop    DWORD PTR [rax+0x0]
   140023700:	mov    rdx,QWORD PTR [rbx+0x10]
   140023704:	mov    rcx,rsi
   140023707:	call   0x140028a70
   14002370c:	mov    rbx,QWORD PTR [rbx]
   14002370f:	mov    rcx,rdi
   140023712:	call   0x1400330c0
   140023717:	mov    rdi,rbx
   14002371a:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002371e:	je     0x140023700
   140023720:	mov    rax,QWORD PTR [rsi+0x8]
   140023724:	mov    QWORD PTR [rax+0x8],rax
   140023728:	mov    rax,QWORD PTR [rsi+0x8]
   14002372c:	mov    QWORD PTR [rax],rax
   14002372f:	mov    rax,QWORD PTR [rsi+0x8]
   140023733:	mov    QWORD PTR [rax+0x10],rax
   140023737:	mov    QWORD PTR [rsi+0x10],r15
   14002373b:	jmp    0x1400237a7
   14002373d:	cmp    rbx,rdi
   140023740:	je     0x1400237a7
   140023742:	mov    r8,rbx
   140023745:	cmp    BYTE PTR [rbx+0x1d],0x0
   140023749:	jne    0x140023796
   14002374b:	mov    rax,QWORD PTR [rbx+0x10]
   14002374f:	cmp    BYTE PTR [rax+0x1d],0x0
   140023753:	jne    0x14002376f
   140023755:	mov    rbx,rax
   140023758:	mov    rax,QWORD PTR [rax]
   14002375b:	cmp    BYTE PTR [rax+0x1d],0x0
   14002375f:	jne    0x140023796
   140023761:	mov    rbx,rax
   140023764:	mov    rax,QWORD PTR [rax]
   140023767:	cmp    BYTE PTR [rax+0x1d],0x0
   14002376b:	je     0x140023761
   14002376d:	jmp    0x140023796
   14002376f:	mov    rax,QWORD PTR [rbx+0x8]
   140023773:	cmp    BYTE PTR [rax+0x1d],0x0
   140023777:	jne    0x140023793
   140023779:	nop    DWORD PTR [rax+0x0]
   140023780:	cmp    rbx,QWORD PTR [rax+0x10]
   140023784:	jne    0x140023793
   140023786:	mov    rbx,rax
   140023789:	mov    rax,QWORD PTR [rax+0x8]
   14002378d:	cmp    BYTE PTR [rax+0x1d],0x0
   140023791:	je     0x140023780
   140023793:	mov    rbx,rax
   140023796:	lea    rdx,[rbp+0x8]
   14002379a:	mov    rcx,rsi
   14002379d:	call   0x140028500
   1400237a2:	cmp    rbx,rdi
   1400237a5:	jne    0x140023742
   1400237a7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400237ab:	call   0x1400330c0
   1400237b0:	mov    rcx,r13
   1400237b3:	call   0x1400330c0
   1400237b8:	mov    r13,r12
   1400237bb:	cmp    BYTE PTR [r12+0x41],0x0
   1400237c1:	je     0x1400236c0
   1400237c7:	mov    rsi,QWORD PTR [rsp+0x68]
   1400237cc:	mov    QWORD PTR [rsi+0x8],rsi
   1400237d0:	mov    rax,QWORD PTR [rsp+0x68]
   1400237d5:	mov    QWORD PTR [rax],rax
   1400237d8:	mov    rax,QWORD PTR [rsp+0x68]
   1400237dd:	mov    QWORD PTR [rax+0x10],rax
   1400237e1:	mov    QWORD PTR [rsp+0x70],r15
   1400237e6:	jmp    0x140023851
   1400237e8:	cmp    rbx,rsi
   1400237eb:	je     0x140023856
   1400237ed:	nop    DWORD PTR [rax]
   1400237f0:	mov    r8,rbx
   1400237f3:	cmp    BYTE PTR [rbx+0x41],0x0
   1400237f7:	jne    0x14002383e
   1400237f9:	mov    rax,QWORD PTR [rbx+0x10]
   1400237fd:	cmp    BYTE PTR [rax+0x41],0x0
   140023801:	jne    0x14002381e
   140023803:	mov    rbx,rax
   140023806:	mov    rax,QWORD PTR [rax]
   140023809:	cmp    BYTE PTR [rax+0x41],0x0
   14002380d:	jne    0x14002383e
   14002380f:	nop
   140023810:	mov    rbx,rax
   140023813:	mov    rax,QWORD PTR [rax]
   140023816:	cmp    BYTE PTR [rax+0x41],0x0
   14002381a:	je     0x140023810
   14002381c:	jmp    0x14002383e
   14002381e:	mov    rax,QWORD PTR [rbx+0x8]
   140023822:	cmp    BYTE PTR [rax+0x41],0x0
   140023826:	jne    0x14002383b
   140023828:	cmp    rbx,QWORD PTR [rax+0x10]
   14002382c:	jne    0x14002383b
   14002382e:	mov    rbx,rax
   140023831:	mov    rax,QWORD PTR [rax+0x8]
   140023835:	cmp    BYTE PTR [rax+0x41],0x0
   140023839:	je     0x140023828
   14002383b:	mov    rbx,rax
   14002383e:	lea    rdx,[rbp+0x0]
   140023842:	lea    rcx,[rsp+0x60]
   140023847:	call   0x1400281a0
   14002384c:	cmp    rbx,rsi
   14002384f:	jne    0x1400237f0
   140023851:	mov    rsi,QWORD PTR [rsp+0x68]
   140023856:	mov    rcx,rsi
   140023859:	call   0x1400330c0
   14002385e:	mov    r13,QWORD PTR [rsp+0x50]
   140023863:	jmp    0x140023892
   140023865:	mov    QWORD PTR [rbp-0x20],r15
   140023869:	lea    rdx,[rbp-0x20]
   14002386d:	lea    rcx,[rbp-0x18]
   140023871:	call   0x140032fd4
   140023876:	lea    r11,[rip+0x45013]        # 0x140068890
   14002387d:	mov    QWORD PTR [rbp-0x18],r11
   140023881:	lea    rdx,[rip+0x5fb98]        # 0x140083420
   140023888:	lea    rcx,[rbp-0x18]
   14002388c:	call   0x140036358
   140023891:	int3   
   140023892:	cmp    DWORD PTR [rbp+0x250],0x1
   140023899:	je     0x1400238af
   14002389b:	test   r13,r13
   14002389e:	je     0x1400238af
   1400238a0:	mov    r8,QWORD PTR [r13+0x0]
   1400238a4:	mov    edx,0x1
   1400238a9:	mov    rcx,r13
   1400238ac:	call   QWORD PTR [r8]
   1400238af:	movzx  eax,r14b
   1400238b3:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400238ba:	xor    rcx,rsp
   1400238bd:	call   0x140032f00
   1400238c2:	add    rsp,0x2e8
   1400238c9:	pop    r15
   1400238cb:	pop    r14
   1400238cd:	pop    r13
   1400238cf:	pop    r12
   1400238d1:	pop    rdi
   1400238d2:	pop    rsi
   1400238d3:	pop    rbx
   1400238d4:	pop    rbp
   1400238d5:	ret    
   1400238d6:	int3   
   1400238d7:	int3   
   1400238d8:	int3   
   1400238d9:	int3   
   1400238da:	int3   
   1400238db:	int3   
   1400238dc:	int3   
   1400238dd:	int3   
   1400238de:	int3   
   1400238df:	int3   
   1400238e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400238e5:	push   rbx
   1400238e6:	sub    rsp,0x30
   1400238ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400238f3:	mov    rbx,rcx
   1400238f6:	mov    r8,QWORD PTR [rcx+0x8]
   1400238fa:	mov    r9,r8
   1400238fd:	mov    r8,QWORD PTR [r8]
   140023900:	lea    rdx,[rsp+0x48]
   140023905:	call   0x140027d80
   14002390a:	nop
   14002390b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002390f:	add    rsp,0x30
   140023913:	pop    rbx
   140023914:	jmp    0x1400330c0
   140023919:	int3   
   14002391a:	int3   
   14002391b:	int3   
   14002391c:	int3   
   14002391d:	int3   
   14002391e:	int3   
   14002391f:	int3   
   140023920:	mov    QWORD PTR [rsp+0x8],rcx
   140023925:	push   rbx
   140023926:	sub    rsp,0x30
   14002392a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023933:	mov    rbx,rcx
   140023936:	mov    r8,QWORD PTR [rcx+0x8]
   14002393a:	mov    r9,r8
   14002393d:	mov    r8,QWORD PTR [r8]
   140023940:	lea    rdx,[rsp+0x48]
   140023945:	call   0x140027e80
   14002394a:	nop
   14002394b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002394f:	add    rsp,0x30
   140023953:	pop    rbx
   140023954:	jmp    0x1400330c0
   140023959:	int3   
   14002395a:	int3   
   14002395b:	int3   
   14002395c:	int3   
   14002395d:	int3   
   14002395e:	int3   
   14002395f:	int3   
   140023960:	rex push rbx
   140023962:	push   rbp
   140023963:	push   rsi
   140023964:	push   rdi
   140023965:	push   r12
   140023967:	push   r13
   140023969:	push   r14
   14002396b:	sub    rsp,0x40
   14002396f:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140023978:	mov    esi,r8d
   14002397b:	mov    ebp,edx
   14002397d:	mov    rdi,rcx
   140023980:	call   0x140022630
   140023985:	test   ebp,ebp
   140023987:	jns    0x14002398f
   140023989:	mov    ebp,DWORD PTR [rdi+0xda8]
   14002398f:	test   esi,esi
   140023991:	jns    0x140023999
   140023993:	mov    esi,DWORD PTR [rdi+0xdac]
   140023999:	mov    rcx,rdi
   14002399c:	call   0x140025fc0
   1400239a1:	xor    r9d,r9d
   1400239a4:	mov    r8d,esi
   1400239a7:	mov    edx,ebp
   1400239a9:	lea    rcx,[rdi+0xcb8]
   1400239b0:	call   0x14002ddc0
   1400239b5:	mov    r13,rax
   1400239b8:	xor    r9d,r9d
   1400239bb:	mov    r8d,esi
   1400239be:	mov    edx,ebp
   1400239c0:	mov    rcx,rdi
   1400239c3:	call   0x140025e00
   1400239c8:	mov    r12,rax
   1400239cb:	test   r13,r13
   1400239ce:	je     0x140023b44
   1400239d4:	test   rax,rax
   1400239d7:	je     0x140023b44
   1400239dd:	xor    edx,edx
   1400239df:	mov    rcx,QWORD PTR [rax+0x8]
   1400239e3:	call   QWORD PTR [rip+0x44b0f]        # 0x1400684f8
   1400239e9:	movzx  ecx,WORD PTR [r13+0xb0]
   1400239f1:	and    ecx,0x1
   1400239f4:	test   cl,cl
   1400239f6:	je     0x140023ad0
   1400239fc:	lea    rcx,[rip+0x62d55]        # 0x140086758
   140023a03:	mov    rax,QWORD PTR [rip+0x62d4e]        # 0x140086758
   140023a0a:	call   QWORD PTR [rax+0x18]
   140023a0d:	add    rax,0x18
   140023a11:	mov    QWORD PTR [rsp+0x98],rax
   140023a19:	mov    r8d,ebp
   140023a1c:	lea    rdx,[rip+0x4cbcd]        # 0x1400705f0
   140023a23:	lea    rcx,[rsp+0x98]
   140023a2b:	call   0x140015180
   140023a30:	mov    DWORD PTR [rsp+0x88],esi
   140023a37:	mov    DWORD PTR [rsp+0x28],0x4
   140023a3f:	lea    rax,[rsp+0x88]
   140023a47:	mov    QWORD PTR [rsp+0x20],rax
   140023a4c:	mov    r9d,0x4
   140023a52:	xor    r8d,r8d
   140023a55:	mov    rbx,QWORD PTR [rsp+0x98]
   140023a5d:	mov    rdx,rbx
   140023a60:	mov    rcx,QWORD PTR [rdi+0xc18]
   140023a67:	call   QWORD PTR [rip+0x445d3]        # 0x140068040
   140023a6d:	cmp    ebp,DWORD PTR [rdi+0xda8]
   140023a73:	jne    0x140023ab5
   140023a75:	mov    DWORD PTR [rdi+0xdac],esi
   140023a7b:	mov    DWORD PTR [rsp+0x90],esi
   140023a82:	mov    DWORD PTR [rsp+0x28],0x4
   140023a8a:	lea    rax,[rsp+0x90]
   140023a92:	mov    QWORD PTR [rsp+0x20],rax
   140023a97:	mov    r9d,0x4
   140023a9d:	xor    r8d,r8d
   140023aa0:	lea    rdx,[rip+0x4caa1]        # 0x140070548
   140023aa7:	mov    rcx,QWORD PTR [rdi+0xc18]
   140023aae:	call   QWORD PTR [rip+0x4458c]        # 0x140068040
   140023ab4:	nop
   140023ab5:	lea    rdx,[rbx-0x18]
   140023ab9:	or     eax,0xffffffff
   140023abc:	lock xadd DWORD PTR [rdx+0x10],eax
   140023ac1:	dec    eax
   140023ac3:	test   eax,eax
   140023ac5:	jg     0x140023ad0
   140023ac7:	mov    rcx,QWORD PTR [rdx]
   140023aca:	mov    rax,QWORD PTR [rcx]
   140023acd:	call   QWORD PTR [rax+0x8]
   140023ad0:	mov    r8d,esi
   140023ad3:	mov    edx,ebp
   140023ad5:	lea    rcx,[rdi+0xcb8]
   140023adc:	call   0x14002de50
   140023ae1:	test   eax,eax
   140023ae3:	je     0x140023b1c
   140023ae5:	mov    DWORD PTR [rsp+0x80],eax
   140023aec:	mov    DWORD PTR [rsp+0x28],0x4
   140023af4:	lea    rax,[rsp+0x80]
   140023afc:	mov    QWORD PTR [rsp+0x20],rax
   140023b01:	mov    r9d,0x4
   140023b07:	xor    r8d,r8d
   140023b0a:	lea    rdx,[rip+0x4caf3]        # 0x140070604
   140023b11:	mov    rcx,QWORD PTR [r12+0x8]
   140023b16:	call   QWORD PTR [rip+0x44524]        # 0x140068040
   140023b1c:	cmp    ebp,DWORD PTR [rdi+0xda8]
   140023b22:	jne    0x140023b40
   140023b24:	cmp    esi,DWORD PTR [rdi+0xdac]
   140023b2a:	jne    0x140023b40
   140023b2c:	mov    r9d,0x1
   140023b32:	mov    r8,r12
   140023b35:	mov    rdx,r13
   140023b38:	mov    rcx,rdi
   140023b3b:	call   0x1400263d0
   140023b40:	mov    al,0x1
   140023b42:	jmp    0x140023b46
   140023b44:	xor    al,al
   140023b46:	add    rsp,0x40
   140023b4a:	pop    r14
   140023b4c:	pop    r13
   140023b4e:	pop    r12
   140023b50:	pop    rdi
   140023b51:	pop    rsi
   140023b52:	pop    rbp
   140023b53:	pop    rbx
   140023b54:	ret    
   140023b55:	int3   
   140023b56:	int3   
   140023b57:	int3   
   140023b58:	int3   
   140023b59:	int3   
   140023b5a:	int3   
   140023b5b:	int3   
   140023b5c:	int3   
   140023b5d:	int3   
   140023b5e:	int3   
   140023b5f:	int3   
   140023b60:	rex push rbp
   140023b62:	push   rbx
   140023b63:	push   rsi
   140023b64:	push   rdi
   140023b65:	push   r12
   140023b67:	push   r13
   140023b69:	push   r14
   140023b6b:	push   r15
   140023b6d:	lea    rbp,[rsp-0x808]
   140023b75:	sub    rsp,0x908
   140023b7c:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   140023b84:	movaps XMMWORD PTR [rsp+0x8f0],xmm6
   140023b8c:	mov    rax,QWORD PTR [rip+0x61515]        # 0x1400850a8
   140023b93:	xor    rax,rsp
   140023b96:	mov    QWORD PTR [rbp+0x7e0],rax
   140023b9d:	mov    QWORD PTR [rsp+0x40],r9
   140023ba2:	mov    QWORD PTR [rbp-0x58],r8
   140023ba6:	mov    QWORD PTR [rbp-0x68],rdx
   140023baa:	mov    r15,rcx
   140023bad:	mov    QWORD PTR [rbp-0x60],rcx
   140023bb1:	mov    bl,0x1
   140023bb3:	mov    DWORD PTR [rsp+0x34],ebx
   140023bb7:	lea    rax,[rcx+0xc10]
   140023bbe:	cmp    r8,rax
   140023bc1:	sete   BYTE PTR [rsp+0x30]
   140023bc6:	test   rdx,rdx
   140023bc9:	je     0x140024208
   140023bcf:	test   r8,r8
   140023bd2:	je     0x140024208
   140023bd8:	xor    eax,eax
   140023bda:	mov    QWORD PTR [rsp+0x78],rax
   140023bdf:	mov    QWORD PTR [rbp-0x80],rax
   140023be3:	mov    QWORD PTR [rbp-0x78],rax
   140023be7:	mov    QWORD PTR [rsp+0x58],rax
   140023bec:	mov    QWORD PTR [rsp+0x60],rax
   140023bf1:	mov    QWORD PTR [rsp+0x68],rax
   140023bf6:	mov    edx,DWORD PTR [rcx+0xbf0]
   140023bfc:	lea    rcx,[rsp+0x78]
   140023c01:	call   0x140027300
   140023c06:	mov    edx,DWORD PTR [r15+0xbf0]
   140023c0d:	lea    rcx,[rsp+0x58]
   140023c12:	call   0x1400273c0
   140023c17:	lea    r12,[r15+0xbb0]
   140023c1e:	cmp    QWORD PTR [r12+0x40],0x0
   140023c24:	jne    0x140023c2e
   140023c26:	mov    rcx,r12
   140023c29:	call   0x140049db0
   140023c2e:	mov    rax,QWORD PTR [r12+0x38]
   140023c33:	mov    rax,QWORD PTR [rax]
   140023c36:	mov    QWORD PTR [r12+0x58],rax
   140023c3b:	mov    rdi,QWORD PTR [rbp-0x80]
   140023c3f:	mov    r13,QWORD PTR [rsp+0x78]
   140023c44:	mov    rsi,QWORD PTR [rsp+0x60]
   140023c49:	mov    r14,QWORD PTR [rsp+0x58]
   140023c4e:	add    rax,0x20
   140023c52:	je     0x1400240fe
   140023c58:	xorpd  xmm6,xmm6
   140023c5c:	mov    r15,QWORD PTR [rsp+0x68]
   140023c61:	mov    r10,QWORD PTR [rsp+0x40]
   140023c66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023c70:	mov    ebx,DWORD PTR [rax+0x4]
   140023c73:	mov    DWORD PTR [rsp+0x48],ebx
   140023c77:	movsd  QWORD PTR [rsp+0x38],xmm6
   140023c7d:	test   r10,r10
   140023c80:	je     0x140023cdc
   140023c82:	or     rcx,0xffffffffffffffff
   140023c86:	xor    eax,eax
   140023c88:	mov    edx,eax
   140023c8a:	mov    r8d,eax
   140023c8d:	mov    r9,QWORD PTR [r10+0xc8]
   140023c94:	sub    r9,QWORD PTR [r10+0xc0]
   140023c9b:	sar    r9,0x2
   140023c9f:	nop
   140023ca0:	cmp    edx,r9d
   140023ca3:	jge    0x140023cc0
   140023ca5:	mov    rax,QWORD PTR [r10+0xc0]
   140023cac:	cmp    DWORD PTR [rax+r8*4],ebx
   140023cb0:	cmove  rcx,r8
   140023cb4:	inc    edx
   140023cb6:	inc    r8
   140023cb9:	test   rcx,rcx
   140023cbc:	js     0x140023ca0
   140023cbe:	jmp    0x140023cc5
   140023cc0:	test   rcx,rcx
   140023cc3:	js     0x140023cdc
   140023cc5:	mov    rax,QWORD PTR [r10+0xe0]
   140023ccc:	movsd  xmm0,QWORD PTR [rax+rcx*8]
   140023cd1:	movsd  QWORD PTR [rsp+0x38],xmm0
   140023cd7:	jmp    0x140023d69
   140023cdc:	lea    rax,[rsp+0x38]
   140023ce1:	test   rax,rax
   140023ce4:	je     0x14002404e
   140023cea:	mov    r8d,ebx
   140023ced:	lea    rdx,[rip+0x4ab0c]        # 0x14006e800
   140023cf4:	lea    rcx,[rbp-0x40]
   140023cf8:	call   0x14002f470
   140023cfd:	mov    DWORD PTR [rsp+0x50],0x8
   140023d05:	lea    rax,[rsp+0x50]
   140023d0a:	mov    QWORD PTR [rsp+0x28],rax
   140023d0f:	lea    rax,[rsp+0x38]
   140023d14:	mov    QWORD PTR [rsp+0x20],rax
   140023d19:	lea    r9,[rbp-0x50]
   140023d1d:	xor    r8d,r8d
   140023d20:	lea    rdx,[rbp-0x40]
   140023d24:	mov    rax,QWORD PTR [rbp-0x68]
   140023d28:	mov    rcx,QWORD PTR [rax+0x8]
   140023d2c:	call   QWORD PTR [rip+0x44326]        # 0x140068058
   140023d32:	xor    ecx,ecx
   140023d34:	test   eax,eax
   140023d36:	sete   cl
   140023d39:	test   ecx,ecx
   140023d3b:	jne    0x140023d69
   140023d3d:	mov    rax,QWORD PTR [rbp-0x68]
   140023d41:	mov    rcx,QWORD PTR [rax+0x10]
   140023d45:	test   rcx,rcx
   140023d48:	je     0x140024049
   140023d4e:	lea    r8,[rsp+0x38]
   140023d53:	mov    edx,ebx
   140023d55:	call   0x14002c940
   140023d5a:	xor    ecx,ecx
   140023d5c:	test   al,al
   140023d5e:	setne  cl
   140023d61:	test   ecx,ecx
   140023d63:	je     0x140024049
   140023d69:	cmp    BYTE PTR [rsp+0x30],0x0
   140023d6e:	je     0x140024013
   140023d74:	movsd  QWORD PTR [rsp+0x50],xmm6
   140023d7a:	cmp    DWORD PTR [rbp+0x870],0x0
   140023d81:	jne    0x140023dac
   140023d83:	mov    rcx,QWORD PTR [rbp-0x60]
   140023d87:	mov    rax,QWORD PTR [rcx]
   140023d8a:	lea    r8,[rsp+0x50]
   140023d8f:	mov    edx,ebx
   140023d91:	call   QWORD PTR [rax+0x20]
   140023d94:	test   al,al
   140023d96:	je     0x140023dac
   140023d98:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140023d9e:	ucomisd xmm0,QWORD PTR [rsp+0x38]
   140023da4:	jp     0x140023dac
   140023da6:	je     0x140024049
   140023dac:	lea    rax,[rsp+0x48]
   140023db1:	cmp    rax,rdi
   140023db4:	jae    0x140023e59
   140023dba:	lea    rax,[rsp+0x48]
   140023dbf:	cmp    r13,rax
   140023dc2:	ja     0x140023e59
   140023dc8:	lea    rbx,[rsp+0x48]
   140023dcd:	sub    rbx,r13
   140023dd0:	sar    rbx,0x2
   140023dd4:	mov    rax,QWORD PTR [rbp-0x78]
   140023dd8:	cmp    rdi,rax
   140023ddb:	jne    0x140023e47
   140023ddd:	mov    rcx,rdi
   140023de0:	sub    rcx,r13
   140023de3:	sar    rcx,0x2
   140023de7:	movabs rdx,0x3ffffffffffffffe
   140023df1:	cmp    rcx,rdx
   140023df4:	ja     0x1400240c6
   140023dfa:	inc    rcx
   140023dfd:	mov    rdx,rax
   140023e00:	sub    rdx,r13
   140023e03:	sar    rdx,0x2
   140023e07:	cmp    rcx,rdx
   140023e0a:	jbe    0x140023e47
   140023e0c:	mov    r8,rdx
   140023e0f:	shr    r8,1
   140023e12:	movabs rax,0x3fffffffffffffff
   140023e1c:	sub    rax,r8
   140023e1f:	cmp    rax,rdx
   140023e22:	jae    0x140023e2a
   140023e24:	xor    eax,eax
   140023e26:	mov    edx,eax
   140023e28:	jmp    0x140023e2d
   140023e2a:	add    rdx,r8
   140023e2d:	cmp    rdx,rcx
   140023e30:	cmovb  rdx,rcx
   140023e34:	lea    rcx,[rsp+0x78]
   140023e39:	call   0x140027300
   140023e3e:	mov    rdi,QWORD PTR [rbp-0x80]
   140023e42:	mov    r13,QWORD PTR [rsp+0x78]
   140023e47:	test   rdi,rdi
   140023e4a:	je     0x140023ed3
   140023e50:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
   140023e55:	mov    DWORD PTR [rdi],eax
   140023e57:	jmp    0x140023ed3
   140023e59:	mov    rax,QWORD PTR [rbp-0x78]
   140023e5d:	cmp    rdi,rax
   140023e60:	jne    0x140023ecc
   140023e62:	mov    rcx,rdi
   140023e65:	sub    rcx,r13
   140023e68:	sar    rcx,0x2
   140023e6c:	movabs rdx,0x3ffffffffffffffe
   140023e76:	cmp    rcx,rdx
   140023e79:	ja     0x1400240d3
   140023e7f:	inc    rcx
   140023e82:	mov    rdx,rax
   140023e85:	sub    rdx,r13
   140023e88:	sar    rdx,0x2
   140023e8c:	cmp    rcx,rdx
   140023e8f:	jbe    0x140023ecc
   140023e91:	mov    r8,rdx
   140023e94:	shr    r8,1
   140023e97:	movabs rax,0x3fffffffffffffff
   140023ea1:	sub    rax,r8
   140023ea4:	cmp    rax,rdx
   140023ea7:	jae    0x140023eaf
   140023ea9:	xor    eax,eax
   140023eab:	mov    edx,eax
   140023ead:	jmp    0x140023eb2
   140023eaf:	add    rdx,r8
   140023eb2:	cmp    rdx,rcx
   140023eb5:	cmovb  rdx,rcx
   140023eb9:	lea    rcx,[rsp+0x78]
   140023ebe:	call   0x140027300
   140023ec3:	mov    rdi,QWORD PTR [rbp-0x80]
   140023ec7:	mov    r13,QWORD PTR [rsp+0x78]
   140023ecc:	test   rdi,rdi
   140023ecf:	je     0x140023ed3
   140023ed1:	mov    DWORD PTR [rdi],ebx
   140023ed3:	add    rdi,0x4
   140023ed7:	mov    QWORD PTR [rbp-0x80],rdi
   140023edb:	lea    rax,[rsp+0x38]
   140023ee0:	cmp    rax,rsi
   140023ee3:	jae    0x140023f8d
   140023ee9:	lea    rax,[rsp+0x38]
   140023eee:	cmp    r14,rax
   140023ef1:	ja     0x140023f8d
   140023ef7:	lea    rbx,[rsp+0x38]
   140023efc:	sub    rbx,r14
   140023eff:	sar    rbx,0x3
   140023f03:	cmp    rsi,r15
   140023f06:	jne    0x140023f78
   140023f08:	mov    rcx,rsi
   140023f0b:	sub    rcx,r14
   140023f0e:	sar    rcx,0x3
   140023f12:	movabs rax,0x1ffffffffffffffe
   140023f1c:	cmp    rcx,rax
   140023f1f:	ja     0x1400240e0
   140023f25:	inc    rcx
   140023f28:	mov    rdx,r15
   140023f2b:	sub    rdx,r14
   140023f2e:	sar    rdx,0x3
   140023f32:	cmp    rcx,rdx
   140023f35:	jbe    0x140023f78
   140023f37:	mov    r8,rdx
   140023f3a:	shr    r8,1
   140023f3d:	movabs rax,0x1fffffffffffffff
   140023f47:	sub    rax,r8
   140023f4a:	cmp    rax,rdx
   140023f4d:	jae    0x140023f55
   140023f4f:	xor    eax,eax
   140023f51:	mov    edx,eax
   140023f53:	jmp    0x140023f58
   140023f55:	add    rdx,r8
   140023f58:	cmp    rdx,rcx
   140023f5b:	cmovb  rdx,rcx
   140023f5f:	lea    rcx,[rsp+0x58]
   140023f64:	call   0x1400273c0
   140023f69:	mov    r15,QWORD PTR [rsp+0x68]
   140023f6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140023f73:	mov    r14,QWORD PTR [rsp+0x58]
   140023f78:	test   rsi,rsi
   140023f7b:	je     0x140024040
   140023f81:	mov    rax,QWORD PTR [r14+rbx*8]
   140023f85:	mov    QWORD PTR [rsi],rax
   140023f88:	jmp    0x140024040
   140023f8d:	cmp    rsi,r15
   140023f90:	jne    0x140024002
   140023f92:	mov    rcx,rsi
   140023f95:	sub    rcx,r14
   140023f98:	sar    rcx,0x3
   140023f9c:	movabs rax,0x1ffffffffffffffe
   140023fa6:	cmp    rcx,rax
   140023fa9:	ja     0x1400240ed
   140023faf:	inc    rcx
   140023fb2:	mov    rdx,r15
   140023fb5:	sub    rdx,r14
   140023fb8:	sar    rdx,0x3
   140023fbc:	cmp    rcx,rdx
   140023fbf:	jbe    0x140024002
   140023fc1:	mov    r8,rdx
   140023fc4:	shr    r8,1
   140023fc7:	movabs rax,0x1fffffffffffffff
   140023fd1:	sub    rax,r8
   140023fd4:	cmp    rax,rdx
   140023fd7:	jae    0x140023fdf
   140023fd9:	xor    eax,eax
   140023fdb:	mov    edx,eax
   140023fdd:	jmp    0x140023fe2
   140023fdf:	add    rdx,r8
   140023fe2:	cmp    rdx,rcx
   140023fe5:	cmovb  rdx,rcx
   140023fe9:	lea    rcx,[rsp+0x58]
   140023fee:	call   0x1400273c0
   140023ff3:	mov    r15,QWORD PTR [rsp+0x68]
   140023ff8:	mov    rsi,QWORD PTR [rsp+0x60]
   140023ffd:	mov    r14,QWORD PTR [rsp+0x58]
   140024002:	test   rsi,rsi
   140024005:	je     0x140024040
   140024007:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14002400d:	movsd  QWORD PTR [rsi],xmm0
   140024011:	jmp    0x140024040
   140024013:	movsd  xmm2,QWORD PTR [rsp+0x38]
   140024019:	mov    edx,ebx
   14002401b:	mov    rcx,QWORD PTR [rbp-0x58]
   14002401f:	call   0x140031530
   140024024:	mov    ebx,DWORD PTR [rsp+0x34]
   140024028:	movzx  ebx,bl
   14002402b:	test   eax,eax
   14002402d:	mov    eax,0x0
   140024032:	cmove  ebx,eax
   140024035:	mov    DWORD PTR [rsp+0x34],ebx
   140024039:	mov    r10,QWORD PTR [rsp+0x40]
   14002403e:	jmp    0x140024052
   140024040:	add    rsi,0x8
   140024044:	mov    QWORD PTR [rsp+0x60],rsi
   140024049:	mov    r10,QWORD PTR [rsp+0x40]
   14002404e:	mov    ebx,DWORD PTR [rsp+0x34]
   140024052:	mov    rax,QWORD PTR [r12+0x58]
   140024057:	cmp    BYTE PTR [rax+0x31],0x0
   14002405b:	jne    0x1400240af
   14002405d:	mov    rcx,QWORD PTR [rax+0x10]
   140024061:	cmp    BYTE PTR [rcx+0x31],0x0
   140024065:	jne    0x14002407e
   140024067:	mov    rax,QWORD PTR [rcx]
   14002406a:	cmp    BYTE PTR [rax+0x31],0x0
   14002406e:	jne    0x1400240aa
   140024070:	mov    rcx,rax
   140024073:	mov    rax,QWORD PTR [rax]
   140024076:	cmp    BYTE PTR [rax+0x31],0x0
   14002407a:	je     0x140024070
   14002407c:	jmp    0x1400240aa
   14002407e:	mov    rcx,QWORD PTR [rax+0x8]
   140024082:	cmp    BYTE PTR [rcx+0x31],0x0
   140024086:	jne    0x1400240aa
   140024088:	nop    DWORD PTR [rax+rax*1+0x0]
   140024090:	mov    rax,QWORD PTR [rcx+0x10]
   140024094:	cmp    QWORD PTR [r12+0x58],rax
   140024099:	jne    0x1400240aa
   14002409b:	mov    QWORD PTR [r12+0x58],rcx
   1400240a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400240a4:	cmp    BYTE PTR [rcx+0x31],0x0
   1400240a8:	je     0x140024090
   1400240aa:	mov    QWORD PTR [r12+0x58],rcx
   1400240af:	mov    rax,QWORD PTR [r12+0x58]
   1400240b4:	cmp    rax,QWORD PTR [r12+0x38]
   1400240b9:	je     0x1400240fa
   1400240bb:	add    rax,0x20
   1400240bf:	je     0x1400240fa
   1400240c1:	jmp    0x140023c70
   1400240c6:	lea    rcx,[rip+0x4755b]        # 0x14006b628
   1400240cd:	call   0x140032d00
   1400240d2:	int3   
   1400240d3:	lea    rcx,[rip+0x4754e]        # 0x14006b628
   1400240da:	call   0x140032d00
   1400240df:	int3   
   1400240e0:	lea    rcx,[rip+0x47541]        # 0x14006b628
   1400240e7:	call   0x140032d00
   1400240ec:	int3   
   1400240ed:	lea    rcx,[rip+0x47534]        # 0x14006b628
   1400240f4:	call   0x140032d00
   1400240f9:	int3   
   1400240fa:	mov    r15,QWORD PTR [rbp-0x60]
   1400240fe:	mov    rax,rdi
   140024101:	sub    rax,r13
   140024104:	sar    rax,0x2
   140024108:	test   rax,rax
   14002410b:	je     0x140024124
   14002410d:	xor    ecx,ecx
   14002410f:	mov    DWORD PTR [rsp+0x20],ecx
   140024113:	mov    r9d,eax
   140024116:	mov    r8,r14
   140024119:	mov    rdx,r13
   14002411c:	mov    rcx,r15
   14002411f:	call   0x1400222a0
   140024124:	cmp    r13,rdi
   140024127:	je     0x14002413b
   140024129:	xor    r8d,r8d
   14002412c:	mov    rdx,rdi
   14002412f:	mov    rcx,r13
   140024132:	call   0x140033260
   140024137:	mov    QWORD PTR [rbp-0x80],r13
   14002413b:	cmp    r14,rsi
   14002413e:	je     0x140024153
   140024140:	xor    r8d,r8d
   140024143:	mov    rdx,rsi
   140024146:	mov    rcx,r14
   140024149:	call   0x140033260
   14002414e:	mov    QWORD PTR [rsp+0x60],r14
   140024153:	mov    DWORD PTR [rsp+0x4c],0x800
   14002415b:	lea    rax,[rbp-0x20]
   14002415f:	test   rax,rax
   140024162:	je     0x1400241c7
   140024164:	lea    r9,[rsp+0x4c]
   140024169:	lea    r8,[rbp-0x20]
   14002416d:	xor    edx,edx
   14002416f:	mov    rcx,QWORD PTR [rbp-0x68]
   140024173:	call   0x1400316f0
   140024178:	test   eax,eax
   14002417a:	je     0x1400241c7
   14002417c:	mov    ebx,DWORD PTR [rsp+0x4c]
   140024180:	xor    r8d,r8d
   140024183:	lea    rdx,[rip+0x53226]        # 0x1400773b0
   14002418a:	lea    rcx,[rbp-0x40]
   14002418e:	call   0x14002f470
   140024193:	mov    DWORD PTR [rsp+0x28],ebx
   140024197:	lea    rax,[rbp-0x20]
   14002419b:	mov    QWORD PTR [rsp+0x20],rax
   1400241a0:	mov    r9d,0x3
   1400241a6:	xor    r8d,r8d
   1400241a9:	lea    rdx,[rbp-0x40]
   1400241ad:	mov    rax,QWORD PTR [rbp-0x58]
   1400241b1:	mov    rcx,QWORD PTR [rax+0x8]
   1400241b5:	call   QWORD PTR [rip+0x43e85]        # 0x140068040
   1400241bb:	test   eax,eax
   1400241bd:	je     0x1400241c3
   1400241bf:	xor    bl,bl
   1400241c1:	jmp    0x1400241ed
   1400241c3:	mov    ebx,DWORD PTR [rsp+0x34]
   1400241c7:	test   bl,bl
   1400241c9:	je     0x1400241ed
   1400241cb:	cmp    BYTE PTR [rsp+0x30],0x0
   1400241d0:	je     0x1400241ed
   1400241d2:	mov    rcx,QWORD PTR [r15+0xdd0]
   1400241d9:	call   QWORD PTR [rip+0x44219]        # 0x1400683f8
   1400241df:	mov    rcx,QWORD PTR [r15+0xdb0]
   1400241e6:	call   QWORD PTR [rip+0x4420c]        # 0x1400683f8
   1400241ec:	nop
   1400241ed:	test   r14,r14
   1400241f0:	je     0x1400241fb
   1400241f2:	mov    rcx,r14
   1400241f5:	call   0x1400330c0
   1400241fa:	nop
   1400241fb:	test   r13,r13
   1400241fe:	je     0x140024208
   140024200:	mov    rcx,r13
   140024203:	call   0x1400330c0
   140024208:	movzx  eax,bl
   14002420b:	mov    rcx,QWORD PTR [rbp+0x7e0]
   140024212:	xor    rcx,rsp
   140024215:	call   0x140032f00
   14002421a:	movaps xmm6,XMMWORD PTR [rsp+0x8f0]
   140024222:	add    rsp,0x908
   140024229:	pop    r15
   14002422b:	pop    r14
   14002422d:	pop    r13
   14002422f:	pop    r12
   140024231:	pop    rdi
   140024232:	pop    rsi
   140024233:	pop    rbx
   140024234:	pop    rbp
   140024235:	ret    
   140024236:	int3   
   140024237:	int3   
   140024238:	int3   
   140024239:	int3   
   14002423a:	int3   
   14002423b:	int3   
   14002423c:	int3   
   14002423d:	int3   
   14002423e:	int3   
   14002423f:	int3   
   140024240:	mov    QWORD PTR [rsp+0x8],rbx
   140024245:	push   rdi
   140024246:	sub    rsp,0x20
   14002424a:	mov    edi,edx
   14002424c:	mov    rbx,rcx
   14002424f:	call   0x140025fc0
   140024254:	mov    rcx,rbx
   140024257:	call   0x140022630
   14002425c:	mov    r11d,DWORD PTR [rbx+0xdac]
   140024263:	cmp    edi,0xffffffff
   140024266:	jne    0x14002426e
   140024268:	mov    edi,DWORD PTR [rbx+0xda8]
   14002426e:	test   edi,edi
   140024270:	js     0x1400242ea
   140024272:	mov    r10,QWORD PTR [rbx+0xd68]
   140024279:	xor    edx,edx
   14002427b:	sub    r10,QWORD PTR [rbx+0xd60]
   140024282:	lea    r9d,[rdx+0x1]
   140024286:	sar    r10,0x3
   14002428a:	xor    r8d,r8d
   14002428d:	nop    DWORD PTR [rax]
   140024290:	cmp    edx,r10d
   140024293:	jge    0x1400242ea
   140024295:	mov    rax,QWORD PTR [rbx+0xd68]
   14002429c:	sub    rax,QWORD PTR [rbx+0xd60]
   1400242a3:	sar    rax,0x3
   1400242a7:	cmp    edx,eax
   1400242a9:	jge    0x1400242df
   1400242ab:	mov    rax,QWORD PTR [rbx+0xd60]
   1400242b2:	mov    rcx,QWORD PTR [r8+rax*1]
   1400242b6:	test   rcx,rcx
   1400242b9:	je     0x1400242df
   1400242bb:	cmp    edi,DWORD PTR [rcx+0xa8]
   1400242c1:	jne    0x1400242df
   1400242c3:	test   BYTE PTR [rcx+0xb0],0x1
   1400242ca:	je     0x1400242df
   1400242cc:	cmp    DWORD PTR [rcx+0xb4],0x0
   1400242d3:	jne    0x1400242df
   1400242d5:	mov    r11d,DWORD PTR [rcx+0xac]
   1400242dc:	xor    r9d,r9d
   1400242df:	inc    edx
   1400242e1:	add    r8,0x8
   1400242e5:	test   r9d,r9d
   1400242e8:	jne    0x140024290
   1400242ea:	mov    eax,r11d
   1400242ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400242f2:	add    rsp,0x20
   1400242f6:	pop    rdi
   1400242f7:	ret    
   1400242f8:	int3   
   1400242f9:	int3   
   1400242fa:	int3   
   1400242fb:	int3   
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	rex push rbp
   140024302:	push   rsi
   140024303:	push   rdi
   140024304:	push   r12
   140024306:	push   r13
   140024308:	push   r14
   14002430a:	push   r15
   14002430c:	lea    rbp,[rsp-0x27]
   140024311:	sub    rsp,0x90
   140024318:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140024320:	mov    QWORD PTR [rsp+0xd0],rbx
   140024328:	mov    r12d,r8d
   14002432b:	mov    esi,edx
   14002432d:	mov    rdi,rcx
   140024330:	call   0x140022630
   140024335:	cmp    esi,0xffffffff
   140024338:	jne    0x140024340
   14002433a:	mov    esi,DWORD PTR [rdi+0xda8]
   140024340:	lea    rcx,[rip+0x62411]        # 0x140086758
   140024347:	mov    rax,QWORD PTR [rip+0x6240a]        # 0x140086758
   14002434e:	call   QWORD PTR [rax+0x18]
   140024351:	add    rax,0x18
   140024355:	mov    QWORD PTR [rbp+0x7],rax
   140024359:	mov    r8d,esi
   14002435c:	lea    rdx,[rip+0x4c28d]        # 0x1400705f0
   140024363:	lea    rcx,[rbp+0x7]
   140024367:	call   0x140015180
   14002436c:	xor    r15d,r15d
   14002436f:	mov    rbx,QWORD PTR [rbp+0x7]
   140024373:	cmp    r12d,0xffffffff
   140024377:	jne    0x1400243d1
   140024379:	mov    eax,DWORD PTR [rdi+0xdac]
   14002437f:	mov    DWORD PTR [rbp+0x6f],eax
   140024382:	mov    DWORD PTR [rbp+0x7f],0x4
   140024389:	lea    rax,[rbp+0x7f]
   14002438d:	mov    QWORD PTR [rsp+0x28],rax
   140024392:	lea    rax,[rbp+0x6f]
   140024396:	mov    QWORD PTR [rsp+0x20],rax
   14002439b:	lea    r9,[rbp+0xf]
   14002439f:	xor    r8d,r8d
   1400243a2:	mov    rdx,rbx
   1400243a5:	mov    rcx,QWORD PTR [rdi+0xc18]
   1400243ac:	call   QWORD PTR [rip+0x43ca6]        # 0x140068058
   1400243b2:	mov    ecx,r15d
   1400243b5:	test   eax,eax
   1400243b7:	sete   cl
   1400243ba:	test   ecx,ecx
   1400243bc:	je     0x1400243c4
   1400243be:	mov    r12d,DWORD PTR [rbp+0x6f]
   1400243c2:	jmp    0x1400243d1
   1400243c4:	mov    edx,esi
   1400243c6:	mov    rcx,rdi
   1400243c9:	call   0x140024240
   1400243ce:	mov    r12d,eax
   1400243d1:	xor    r13b,r13b
   1400243d4:	test   esi,esi
   1400243d6:	js     0x1400245a9
   1400243dc:	test   r12d,r12d
   1400243df:	js     0x1400245a9
   1400243e5:	mov    r9d,0x1
   1400243eb:	mov    r8d,r12d
   1400243ee:	mov    edx,esi
   1400243f0:	mov    rcx,rdi
   1400243f3:	call   0x140025e00
   1400243f8:	mov    r14,rax
   1400243fb:	test   rax,rax
   1400243fe:	je     0x140024635
   140024404:	mov    DWORD PTR [rbp-0x29],r15d
   140024408:	mov    DWORD PTR [rbp-0x1],0x4
   14002440f:	lea    rax,[rbp-0x1]
   140024413:	mov    QWORD PTR [rsp+0x28],rax
   140024418:	lea    rax,[rbp-0x29]
   14002441c:	mov    QWORD PTR [rsp+0x20],rax
   140024421:	lea    r9,[rbp+0x13]
   140024425:	xor    r8d,r8d
   140024428:	lea    rdx,[rip+0x4c1d5]        # 0x140070604
   14002442f:	mov    rcx,QWORD PTR [r14+0x8]
   140024433:	call   QWORD PTR [rip+0x43c1f]        # 0x140068058
   140024439:	test   eax,eax
   14002443b:	sete   r15b
   14002443f:	test   r15d,r15d
   140024442:	jne    0x140024485
   140024444:	lea    rcx,[rdi+0xcb8]
   14002444b:	mov    r8d,r12d
   14002444e:	mov    edx,esi
   140024450:	call   0x14002de50
   140024455:	test   eax,eax
   140024457:	je     0x140024485
   140024459:	mov    DWORD PTR [rbp-0x11],eax
   14002445c:	mov    DWORD PTR [rsp+0x28],0x4
   140024464:	lea    rax,[rbp-0x11]
   140024468:	mov    QWORD PTR [rsp+0x20],rax
   14002446d:	lea    r9d,[r15+0x4]
   140024471:	xor    r8d,r8d
   140024474:	lea    rdx,[rip+0x4c189]        # 0x140070604
   14002447b:	mov    rcx,QWORD PTR [r14+0x8]
   14002447f:	call   QWORD PTR [rip+0x43bbb]        # 0x140068040
   140024485:	cmp    DWORD PTR [rdi+0xda8],esi
   14002448b:	setne  r13b
   14002448f:	mov    DWORD PTR [rdi+0xda8],esi
   140024495:	mov    DWORD PTR [rdi+0xdac],r12d
   14002449c:	mov    eax,DWORD PTR [rdi+0xc60]
   1400244a2:	cmp    eax,0x9
   1400244a5:	je     0x1400244b1
   1400244a7:	cmp    eax,0x6
   1400244aa:	je     0x1400244b1
   1400244ac:	xor    sil,sil
   1400244af:	jmp    0x1400244b4
   1400244b1:	mov    sil,0x1
   1400244b4:	mov    DWORD PTR [rbp-0x19],r12d
   1400244b8:	mov    DWORD PTR [rsp+0x28],0x4
   1400244c0:	lea    rax,[rbp-0x19]
   1400244c4:	mov    QWORD PTR [rsp+0x20],rax
   1400244c9:	mov    r9d,0x4
   1400244cf:	xor    r8d,r8d
   1400244d2:	mov    rdx,rbx
   1400244d5:	mov    rcx,QWORD PTR [rdi+0xc18]
   1400244dc:	call   QWORD PTR [rip+0x43b5e]        # 0x140068040
   1400244e2:	mov    r11d,DWORD PTR [rdi+0xda8]
   1400244e9:	mov    DWORD PTR [rbp-0x9],r11d
   1400244ed:	mov    DWORD PTR [rsp+0x28],0x4
   1400244f5:	lea    rax,[rbp-0x9]
   1400244f9:	mov    QWORD PTR [rsp+0x20],rax
   1400244fe:	mov    r9d,0x4
   140024504:	xor    r8d,r8d
   140024507:	lea    rdx,[rip+0x4c022]        # 0x140070530
   14002450e:	mov    rcx,QWORD PTR [rdi+0xc18]
   140024515:	call   QWORD PTR [rip+0x43b25]        # 0x140068040
   14002451b:	mov    r11d,DWORD PTR [rdi+0xdac]
   140024522:	mov    DWORD PTR [rbp-0x39],r11d
   140024526:	mov    DWORD PTR [rsp+0x28],0x4
   14002452e:	lea    rax,[rbp-0x39]
   140024532:	mov    QWORD PTR [rsp+0x20],rax
   140024537:	mov    r9d,0x4
   14002453d:	xor    r8d,r8d
   140024540:	lea    rdx,[rip+0x4c001]        # 0x140070548
   140024547:	mov    rcx,QWORD PTR [rdi+0xc18]
   14002454e:	call   QWORD PTR [rip+0x43aec]        # 0x140068040
   140024554:	test   r13b,r13b
   140024557:	je     0x14002456f
   140024559:	test   sil,sil
   14002455c:	jne    0x14002456f
   14002455e:	mov    rax,QWORD PTR [rdi]
   140024561:	xor    r8d,r8d
   140024564:	xor    edx,edx
   140024566:	mov    rcx,rdi
   140024569:	call   QWORD PTR [rax+0x88]
   14002456f:	xor    r9d,r9d
   140024572:	mov    r8,r14
   140024575:	xor    edx,edx
   140024577:	mov    rcx,rdi
   14002457a:	call   0x1400263d0
   14002457f:	test   r13b,r13b
   140024582:	je     0x140024632
   140024588:	test   sil,sil
   14002458b:	jne    0x140024632
   140024591:	mov    rax,QWORD PTR [rdi]
   140024594:	xor    r8d,r8d
   140024597:	lea    edx,[r8+0x1]
   14002459b:	mov    rcx,rdi
   14002459e:	call   QWORD PTR [rax+0x88]
   1400245a4:	jmp    0x140024632
   1400245a9:	cmp    esi,0xfffffffe
   1400245ac:	jne    0x1400245ee
   1400245ae:	mov    DWORD PTR [rdi+0xda8],0xfffffffe
   1400245b8:	mov    DWORD PTR [rbp-0x31],0xfffffffe
   1400245bf:	mov    DWORD PTR [rsp+0x28],0x4
   1400245c7:	lea    rax,[rbp-0x31]
   1400245cb:	mov    QWORD PTR [rsp+0x20],rax
   1400245d0:	lea    r9d,[rsi+0x6]
   1400245d4:	xor    r8d,r8d
   1400245d7:	lea    rdx,[rip+0x4bf52]        # 0x140070530
   1400245de:	mov    rcx,QWORD PTR [rdi+0xc18]
   1400245e5:	call   QWORD PTR [rip+0x43a55]        # 0x140068040
   1400245eb:	mov    r13b,0x1
   1400245ee:	cmp    r12d,0xfffffffe
   1400245f2:	jne    0x140024635
   1400245f4:	mov    DWORD PTR [rdi+0xdac],0xfffffffe
   1400245fe:	mov    DWORD PTR [rbp-0x21],0xfffffffe
   140024605:	mov    DWORD PTR [rsp+0x28],0x4
   14002460d:	lea    rax,[rbp-0x21]
   140024611:	mov    QWORD PTR [rsp+0x20],rax
   140024616:	lea    r9d,[r12+0x6]
   14002461b:	xor    r8d,r8d
   14002461e:	lea    rdx,[rip+0x4bf23]        # 0x140070548
   140024625:	mov    rcx,QWORD PTR [rdi+0xc18]
   14002462c:	call   QWORD PTR [rip+0x43a0e]        # 0x140068040
   140024632:	mov    r13b,0x1
   140024635:	lea    rdx,[rbx-0x18]
   140024639:	or     ecx,0xffffffff
   14002463c:	lock xadd DWORD PTR [rdx+0x10],ecx
   140024641:	dec    ecx
   140024643:	test   ecx,ecx
   140024645:	jg     0x140024651
   140024647:	mov    rcx,QWORD PTR [rdx]
   14002464a:	mov    r8,QWORD PTR [rcx]
   14002464d:	call   QWORD PTR [r8+0x8]
   140024651:	movzx  eax,r13b
   140024655:	mov    rbx,QWORD PTR [rsp+0xd0]
   14002465d:	add    rsp,0x90
   140024664:	pop    r15
   140024666:	pop    r14
   140024668:	pop    r13
   14002466a:	pop    r12
   14002466c:	pop    rdi
   14002466d:	pop    rsi
   14002466e:	pop    rbp
   14002466f:	ret    
   140024670:	mov    QWORD PTR [rsp+0x8],rbx
   140024675:	mov    QWORD PTR [rsp+0x10],rsi
   14002467a:	push   rdi
   14002467b:	sub    rsp,0x20
   14002467f:	mov    rbx,r8
   140024682:	mov    rdi,rdx
   140024685:	mov    rsi,rcx
   140024688:	call   0x140022630
   14002468d:	test   rdi,rdi
   140024690:	je     0x14002469a
   140024692:	mov    eax,DWORD PTR [rsi+0xda8]
   140024698:	mov    DWORD PTR [rdi],eax
   14002469a:	test   rbx,rbx
   14002469d:	je     0x1400246a7
   14002469f:	mov    eax,DWORD PTR [rsi+0xdac]
   1400246a5:	mov    DWORD PTR [rbx],eax
   1400246a7:	test   rdi,rdi
   1400246aa:	jne    0x1400246c3
   1400246ac:	test   rbx,rbx
   1400246af:	jne    0x1400246c3
   1400246b1:	xor    al,al
   1400246b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400246b8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400246bd:	add    rsp,0x20
   1400246c1:	pop    rdi
   1400246c2:	ret    
   1400246c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400246c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400246cd:	mov    al,0x1
   1400246cf:	add    rsp,0x20
   1400246d3:	pop    rdi
   1400246d4:	ret    
   1400246d5:	int3   
   1400246d6:	int3   
   1400246d7:	int3   
   1400246d8:	int3   
   1400246d9:	int3   
   1400246da:	int3   
   1400246db:	int3   
   1400246dc:	int3   
   1400246dd:	int3   
   1400246de:	int3   
   1400246df:	int3   
   1400246e0:	rex push rbp
   1400246e2:	push   rbx
   1400246e3:	push   rsi
   1400246e4:	push   rdi
   1400246e5:	push   r12
   1400246e7:	push   r13
   1400246e9:	push   r14
   1400246eb:	push   r15
   1400246ed:	lea    rbp,[rsp-0x158]
   1400246f5:	sub    rsp,0x258
   1400246fc:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   140024704:	movaps XMMWORD PTR [rsp+0x240],xmm6
   14002470c:	mov    rax,QWORD PTR [rip+0x60995]        # 0x1400850a8
   140024713:	xor    rax,rsp
   140024716:	mov    QWORD PTR [rbp+0x130],rax
   14002471d:	mov    ebx,r9d
   140024720:	movapd xmm6,xmm2
   140024724:	mov    r14d,edx
   140024727:	mov    r13,rcx
   14002472a:	mov    BYTE PTR [rsp+0x30],0x0
   14002472f:	call   0x140022630
   140024734:	cmp    ebx,0xffffffff
   140024737:	jne    0x140024740
   140024739:	mov    ebx,DWORD PTR [r13+0xda8]
   140024740:	mov    r12d,DWORD PTR [rbp+0x1c0]
   140024747:	cmp    r12d,0xffffffff
   14002474b:	jne    0x14002475b
   14002474d:	mov    r12d,DWORD PTR [r13+0xdac]
   140024754:	mov    DWORD PTR [rbp+0x1c0],r12d
   14002475b:	xor    edi,edi
   14002475d:	mov    QWORD PTR [rsp+0x50],rdi
   140024762:	lea    ecx,[rdi+0x20]
   140024765:	call   0x1400331a0
   14002476a:	test   rax,rax
   14002476d:	je     0x140024ce5
   140024773:	mov    QWORD PTR [rsp+0x48],rax
   140024778:	mov    QWORD PTR [rax],rax
   14002477b:	mov    rax,QWORD PTR [rsp+0x48]
   140024780:	mov    QWORD PTR [rax+0x8],rax
   140024784:	mov    rax,QWORD PTR [rsp+0x48]
   140024789:	mov    QWORD PTR [rax+0x10],rax
   14002478d:	mov    rax,QWORD PTR [rsp+0x48]
   140024792:	mov    BYTE PTR [rax+0x1c],0x1
   140024796:	mov    rax,QWORD PTR [rsp+0x48]
   14002479b:	mov    BYTE PTR [rax+0x1d],0x1
   14002479f:	lea    r8,[rsp+0x40]
   1400247a4:	mov    edx,ebx
   1400247a6:	lea    rcx,[r13+0xcb8]
   1400247ad:	call   0x14002df80
   1400247b2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400247b7:	mov    rsi,QWORD PTR [rdi]
   1400247ba:	cmp    rsi,rdi
   1400247bd:	je     0x140024c0b
   1400247c3:	xor    ebx,ebx
   1400247c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400247d0:	mov    QWORD PTR [rsp+0x70],rbx
   1400247d5:	mov    ecx,0x20
   1400247da:	call   0x1400331a0
   1400247df:	test   rax,rax
   1400247e2:	je     0x140024bde
   1400247e8:	mov    QWORD PTR [rsp+0x68],rax
   1400247ed:	mov    QWORD PTR [rax],rax
   1400247f0:	mov    rax,QWORD PTR [rsp+0x68]
   1400247f5:	mov    QWORD PTR [rax+0x8],rax
   1400247f9:	mov    rax,QWORD PTR [rsp+0x68]
   1400247fe:	mov    QWORD PTR [rax+0x10],rax
   140024802:	mov    rax,QWORD PTR [rsp+0x68]
   140024807:	mov    BYTE PTR [rax+0x1c],0x1
   14002480b:	mov    rax,QWORD PTR [rsp+0x68]
   140024810:	mov    BYTE PTR [rax+0x1d],0x1
   140024814:	lea    r9,[rsp+0x60]
   140024819:	mov    r8d,r12d
   14002481c:	mov    edx,DWORD PTR [rsi+0x18]
   14002481f:	lea    rcx,[r13+0xcb8]
   140024826:	call   0x14002e330
   14002482b:	mov    rdi,QWORD PTR [rsp+0x68]
   140024830:	mov    rbx,QWORD PTR [rdi]
   140024833:	cmp    rbx,rdi
   140024836:	je     0x140024a93
   14002483c:	xor    r12d,r12d
   14002483f:	nop
   140024840:	xor    r9d,r9d
   140024843:	mov    r8d,DWORD PTR [rbx+0x18]
   140024847:	mov    edx,DWORD PTR [rsi+0x18]
   14002484a:	mov    rcx,r13
   14002484d:	call   0x140025e00
   140024852:	mov    rdi,rax
   140024855:	test   rax,rax
   140024858:	je     0x140024a30
   14002485e:	mov    r8d,r14d
   140024861:	lea    rdx,[rip+0x49f98]        # 0x14006e800
   140024868:	lea    rcx,[rbp+0x110]
   14002486f:	call   0x14002f470
   140024874:	movsd  QWORD PTR [rsp+0x38],xmm6
   14002487a:	mov    DWORD PTR [rsp+0x28],0x8
   140024882:	lea    rax,[rsp+0x38]
   140024887:	mov    QWORD PTR [rsp+0x20],rax
   14002488c:	mov    r9d,0x3
   140024892:	xor    r8d,r8d
   140024895:	lea    rdx,[rbp+0x110]
   14002489c:	mov    rcx,QWORD PTR [rdi+0x8]
   1400248a0:	call   QWORD PTR [rip+0x4379a]        # 0x140068040
   1400248a6:	test   eax,eax
   1400248a8:	sete   BYTE PTR [rsp+0x30]
   1400248ad:	mov    edx,DWORD PTR [rsi+0x18]
   1400248b0:	cmp    edx,DWORD PTR [r13+0xda8]
   1400248b7:	jne    0x140024a30
   1400248bd:	mov    r8d,DWORD PTR [rbx+0x18]
   1400248c1:	cmp    r8d,DWORD PTR [r13+0xdac]
   1400248c8:	jne    0x140024a30
   1400248ce:	mov    edi,r12d
   1400248d1:	mov    DWORD PTR [rsp+0x38],r12d
   1400248d6:	mov    rax,QWORD PTR [r13+0x0]
   1400248da:	lea    r9,[rsp+0x38]
   1400248df:	mov    rcx,r13
   1400248e2:	call   QWORD PTR [rax+0xe8]
   1400248e8:	mov    r9d,DWORD PTR [rsp+0x38]
   1400248ed:	test   r9d,r9d
   1400248f0:	je     0x140024a1f
   1400248f6:	lea    rax,[rip+0x4c29b]        # 0x140070b98
   1400248fd:	mov    QWORD PTR [rbp-0x30],rax
   140024901:	mov    QWORD PTR [rbp-0x10],0xf
   140024909:	mov    QWORD PTR [rbp-0x18],r12
   14002490d:	mov    BYTE PTR [rbp-0x28],dil
   140024911:	mov    QWORD PTR [rbp+0x18],0xf
   140024919:	mov    QWORD PTR [rbp+0x10],r12
   14002491d:	mov    BYTE PTR [rbp+0x0],dil
   140024921:	mov    QWORD PTR [rbp+0x40],0xf
   140024929:	mov    QWORD PTR [rbp+0x38],r12
   14002492d:	mov    BYTE PTR [rbp+0x28],dil
   140024931:	mov    QWORD PTR [rbp+0x68],0xf
   140024939:	mov    QWORD PTR [rbp+0x60],r12
   14002493d:	mov    BYTE PTR [rbp+0x50],dil
   140024941:	mov    QWORD PTR [rbp+0x90],r12
   140024948:	mov    QWORD PTR [rbp+0x98],r12
   14002494f:	mov    QWORD PTR [rbp+0xa0],r12
   140024956:	mov    QWORD PTR [rbp+0xb0],r12
   14002495d:	mov    QWORD PTR [rbp+0xb8],r12
   140024964:	mov    QWORD PTR [rbp+0xc0],r12
   14002496b:	mov    QWORD PTR [rbp+0xd0],r12
   140024972:	mov    QWORD PTR [rbp+0xd8],r12
   140024979:	mov    QWORD PTR [rbp+0xe0],r12
   140024980:	mov    QWORD PTR [rbp+0xf0],r12
   140024987:	mov    QWORD PTR [rbp+0xf8],r12
   14002498e:	mov    QWORD PTR [rbp+0x100],r12
   140024995:	mov    QWORD PTR [rbp+0x78],0xffffffffffffffff
   14002499d:	mov    DWORD PTR [rbp+0x84],r12d
   1400249a4:	mov    WORD PTR [rbp+0x80],r12w
   1400249ac:	mov    BYTE PTR [rbp+0x88],dil
   1400249b3:	lea    rax,[rbp-0x30]
   1400249b7:	mov    QWORD PTR [rsp+0x20],rax
   1400249bc:	mov    r8d,DWORD PTR [rbx+0x18]
   1400249c0:	mov    edx,DWORD PTR [rsi+0x18]
   1400249c3:	lea    rcx,[r13+0xcb8]
   1400249ca:	call   0x14002deb0
   1400249cf:	or     r11d,0xffffffff
   1400249d3:	mov    eax,r12d
   1400249d6:	mov    rdx,QWORD PTR [rbp+0x98]
   1400249dd:	mov    rcx,QWORD PTR [rbp+0x90]
   1400249e4:	sub    rdx,rcx
   1400249e7:	sar    rdx,0x2
   1400249eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400249f0:	cmp    eax,edx
   1400249f2:	jge    0x140024a08
   1400249f4:	cmp    DWORD PTR [rcx],r14d
   1400249f7:	cmove  r11d,eax
   1400249fb:	inc    eax
   1400249fd:	add    rcx,0x4
   140024a01:	test   r11d,r11d
   140024a04:	js     0x1400249f0
   140024a06:	jmp    0x140024a0d
   140024a08:	test   r11d,r11d
   140024a0b:	js     0x140024a12
   140024a0d:	mov    edi,0x1
   140024a12:	lea    rcx,[rbp-0x30]
   140024a16:	call   0x14002c800
   140024a1b:	test   edi,edi
   140024a1d:	jne    0x140024a30
   140024a1f:	mov    rax,QWORD PTR [r13+0x0]
   140024a23:	movapd xmm2,xmm6
   140024a27:	mov    edx,r14d
   140024a2a:	mov    rcx,r13
   140024a2d:	call   QWORD PTR [rax+0x18]
   140024a30:	cmp    BYTE PTR [rbx+0x1d],0x0
   140024a34:	jne    0x140024a7e
   140024a36:	mov    rax,QWORD PTR [rbx+0x10]
   140024a3a:	cmp    BYTE PTR [rax+0x1d],0x0
   140024a3e:	jne    0x140024a5e
   140024a40:	mov    rbx,rax
   140024a43:	mov    rax,QWORD PTR [rax]
   140024a46:	cmp    BYTE PTR [rax+0x1d],0x0
   140024a4a:	jne    0x140024a7e
   140024a4c:	nop    DWORD PTR [rax+0x0]
   140024a50:	mov    rbx,rax
   140024a53:	mov    rax,QWORD PTR [rax]
   140024a56:	cmp    BYTE PTR [rax+0x1d],0x0
   140024a5a:	je     0x140024a50
   140024a5c:	jmp    0x140024a7e
   140024a5e:	mov    rax,QWORD PTR [rbx+0x8]
   140024a62:	cmp    BYTE PTR [rax+0x1d],0x0
   140024a66:	jne    0x140024a7b
   140024a68:	cmp    rbx,QWORD PTR [rax+0x10]
   140024a6c:	jne    0x140024a7b
   140024a6e:	mov    rbx,rax
   140024a71:	mov    rax,QWORD PTR [rax+0x8]
   140024a75:	cmp    BYTE PTR [rax+0x1d],0x0
   140024a79:	je     0x140024a68
   140024a7b:	mov    rbx,rax
   140024a7e:	mov    rdi,QWORD PTR [rsp+0x68]
   140024a83:	cmp    rbx,rdi
   140024a86:	jne    0x140024840
   140024a8c:	mov    r12d,DWORD PTR [rbp+0x1c0]
   140024a93:	mov    rbx,QWORD PTR [rdi]
   140024a96:	cmp    rbx,rbx
   140024a99:	jne    0x140024b01
   140024a9b:	mov    r12,QWORD PTR [rdi+0x8]
   140024a9f:	mov    rbx,r12
   140024aa2:	cmp    BYTE PTR [r12+0x1d],0x0
   140024aa8:	jne    0x140024ad7
   140024aaa:	nop    WORD PTR [rax+rax*1+0x0]
   140024ab0:	mov    rdx,QWORD PTR [rbx+0x10]
   140024ab4:	lea    rcx,[rsp+0x60]
   140024ab9:	call   0x140028a70
   140024abe:	mov    rbx,QWORD PTR [rbx]
   140024ac1:	mov    rcx,r12
   140024ac4:	call   0x1400330c0
   140024ac9:	mov    r12,rbx
   140024acc:	cmp    BYTE PTR [rbx+0x1d],0x0
   140024ad0:	je     0x140024ab0
   140024ad2:	mov    rdi,QWORD PTR [rsp+0x68]
   140024ad7:	mov    QWORD PTR [rdi+0x8],rdi
   140024adb:	mov    rax,QWORD PTR [rsp+0x68]
   140024ae0:	mov    QWORD PTR [rax],rax
   140024ae3:	mov    rax,QWORD PTR [rsp+0x68]
   140024ae8:	mov    QWORD PTR [rax+0x10],rax
   140024aec:	xor    ebx,ebx
   140024aee:	mov    QWORD PTR [rsp+0x70],rbx
   140024af3:	mov    rdi,QWORD PTR [rsp+0x68]
   140024af8:	mov    r12d,DWORD PTR [rbp+0x1c0]
   140024aff:	jmp    0x140024b78
   140024b01:	cmp    rbx,rdi
   140024b04:	je     0x140024b76
   140024b06:	mov    r8,rbx
   140024b09:	cmp    BYTE PTR [rbx+0x1d],0x0
   140024b0d:	jne    0x140024b5e
   140024b0f:	mov    rax,QWORD PTR [rbx+0x10]
   140024b13:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b17:	jne    0x140024b3e
   140024b19:	mov    rbx,rax
   140024b1c:	mov    rax,QWORD PTR [rax]
   140024b1f:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b23:	jne    0x140024b5e
   140024b25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140024b30:	mov    rbx,rax
   140024b33:	mov    rax,QWORD PTR [rax]
   140024b36:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b3a:	je     0x140024b30
   140024b3c:	jmp    0x140024b5e
   140024b3e:	mov    rax,QWORD PTR [rbx+0x8]
   140024b42:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b46:	jne    0x140024b5b
   140024b48:	cmp    rbx,QWORD PTR [rax+0x10]
   140024b4c:	jne    0x140024b5b
   140024b4e:	mov    rbx,rax
   140024b51:	mov    rax,QWORD PTR [rax+0x8]
   140024b55:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b59:	je     0x140024b48
   140024b5b:	mov    rbx,rax
   140024b5e:	lea    rdx,[rbp-0x80]
   140024b62:	lea    rcx,[rsp+0x60]
   140024b67:	call   0x140028500
   140024b6c:	cmp    rbx,rdi
   140024b6f:	jne    0x140024b06
   140024b71:	mov    rdi,QWORD PTR [rsp+0x68]
   140024b76:	xor    ebx,ebx
   140024b78:	mov    rcx,rdi
   140024b7b:	call   0x1400330c0
   140024b80:	cmp    BYTE PTR [rsi+0x1d],0x0
   140024b84:	jne    0x140024bce
   140024b86:	mov    rax,QWORD PTR [rsi+0x10]
   140024b8a:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b8e:	jne    0x140024bae
   140024b90:	mov    rsi,rax
   140024b93:	mov    rax,QWORD PTR [rax]
   140024b96:	cmp    BYTE PTR [rax+0x1d],0x0
   140024b9a:	jne    0x140024bce
   140024b9c:	nop    DWORD PTR [rax+0x0]
   140024ba0:	mov    rsi,rax
   140024ba3:	mov    rax,QWORD PTR [rax]
   140024ba6:	cmp    BYTE PTR [rax+0x1d],0x0
   140024baa:	je     0x140024ba0
   140024bac:	jmp    0x140024bce
   140024bae:	mov    rax,QWORD PTR [rsi+0x8]
   140024bb2:	cmp    BYTE PTR [rax+0x1d],0x0
   140024bb6:	jne    0x140024bcb
   140024bb8:	cmp    rsi,QWORD PTR [rax+0x10]
   140024bbc:	jne    0x140024bcb
   140024bbe:	mov    rsi,rax
   140024bc1:	mov    rax,QWORD PTR [rax+0x8]
   140024bc5:	cmp    BYTE PTR [rax+0x1d],0x0
   140024bc9:	je     0x140024bb8
   140024bcb:	mov    rsi,rax
   140024bce:	mov    rdi,QWORD PTR [rsp+0x48]
   140024bd3:	cmp    rsi,rdi
   140024bd6:	jne    0x1400247d0
   140024bdc:	jmp    0x140024c0b
   140024bde:	mov    QWORD PTR [rbp-0x70],rbx
   140024be2:	lea    rdx,[rbp-0x70]
   140024be6:	lea    rcx,[rbp-0x48]
   140024bea:	call   0x140032fd4
   140024bef:	lea    r11,[rip+0x43c9a]        # 0x140068890
   140024bf6:	mov    QWORD PTR [rbp-0x48],r11
   140024bfa:	lea    rdx,[rip+0x5e81f]        # 0x140083420
   140024c01:	lea    rcx,[rbp-0x48]
   140024c05:	call   0x140036358
   140024c0a:	nop
   140024c0b:	mov    rbx,QWORD PTR [rdi]
   140024c0e:	cmp    rbx,rbx
   140024c11:	jne    0x140024c67
   140024c13:	mov    rsi,QWORD PTR [rdi+0x8]
   140024c17:	mov    rbx,rsi
   140024c1a:	cmp    BYTE PTR [rsi+0x1d],0x0
   140024c1e:	jne    0x140024c47
   140024c20:	mov    rdx,QWORD PTR [rbx+0x10]
   140024c24:	lea    rcx,[rsp+0x40]
   140024c29:	call   0x140028a70
   140024c2e:	mov    rbx,QWORD PTR [rbx]
   140024c31:	mov    rcx,rsi
   140024c34:	call   0x1400330c0
   140024c39:	mov    rsi,rbx
   140024c3c:	cmp    BYTE PTR [rbx+0x1d],0x0
   140024c40:	je     0x140024c20
   140024c42:	mov    rdi,QWORD PTR [rsp+0x48]
   140024c47:	mov    QWORD PTR [rdi+0x8],rdi
   140024c4b:	mov    rax,QWORD PTR [rsp+0x48]
   140024c50:	mov    QWORD PTR [rax],rax
   140024c53:	mov    rax,QWORD PTR [rsp+0x48]
   140024c58:	mov    QWORD PTR [rax+0x10],rax
   140024c5c:	mov    QWORD PTR [rsp+0x50],0x0
   140024c65:	jmp    0x140024cd1
   140024c67:	cmp    rbx,rdi
   140024c6a:	je     0x140024cd6
   140024c6c:	nop    DWORD PTR [rax+0x0]
   140024c70:	mov    r8,rbx
   140024c73:	cmp    BYTE PTR [rbx+0x1d],0x0
   140024c77:	jne    0x140024cbe
   140024c79:	mov    rax,QWORD PTR [rbx+0x10]
   140024c7d:	cmp    BYTE PTR [rax+0x1d],0x0
   140024c81:	jne    0x140024c9e
   140024c83:	mov    rbx,rax
   140024c86:	mov    rax,QWORD PTR [rax]
   140024c89:	cmp    BYTE PTR [rax+0x1d],0x0
   140024c8d:	jne    0x140024cbe
   140024c8f:	nop
   140024c90:	mov    rbx,rax
   140024c93:	mov    rax,QWORD PTR [rax]
   140024c96:	cmp    BYTE PTR [rax+0x1d],0x0
   140024c9a:	je     0x140024c90
   140024c9c:	jmp    0x140024cbe
   140024c9e:	mov    rax,QWORD PTR [rbx+0x8]
   140024ca2:	cmp    BYTE PTR [rax+0x1d],0x0
   140024ca6:	jne    0x140024cbb
   140024ca8:	cmp    rbx,QWORD PTR [rax+0x10]
   140024cac:	jne    0x140024cbb
   140024cae:	mov    rbx,rax
   140024cb1:	mov    rax,QWORD PTR [rax+0x8]
   140024cb5:	cmp    BYTE PTR [rax+0x1d],0x0
   140024cb9:	je     0x140024ca8
   140024cbb:	mov    rbx,rax
   140024cbe:	lea    rdx,[rbp-0x80]
   140024cc2:	lea    rcx,[rsp+0x40]
   140024cc7:	call   0x140028500
   140024ccc:	cmp    rbx,rdi
   140024ccf:	jne    0x140024c70
   140024cd1:	mov    rdi,QWORD PTR [rsp+0x48]
   140024cd6:	mov    rcx,rdi
   140024cd9:	call   0x1400330c0
   140024cde:	movzx  eax,BYTE PTR [rsp+0x30]
   140024ce3:	jmp    0x140024d12
   140024ce5:	mov    QWORD PTR [rbp-0x78],rdi
   140024ce9:	lea    rdx,[rbp-0x78]
   140024ced:	lea    rcx,[rbp-0x68]
   140024cf1:	call   0x140032fd4
   140024cf6:	lea    r11,[rip+0x43b93]        # 0x140068890
   140024cfd:	mov    QWORD PTR [rbp-0x68],r11
   140024d01:	lea    rdx,[rip+0x5e718]        # 0x140083420
   140024d08:	lea    rcx,[rbp-0x68]
   140024d0c:	call   0x140036358
   140024d11:	int3   
   140024d12:	mov    rcx,QWORD PTR [rbp+0x130]
   140024d19:	xor    rcx,rsp
   140024d1c:	call   0x140032f00
   140024d21:	movaps xmm6,XMMWORD PTR [rsp+0x240]
   140024d29:	add    rsp,0x258
   140024d30:	pop    r15
   140024d32:	pop    r14
   140024d34:	pop    r13
   140024d36:	pop    r12
   140024d38:	pop    rdi
   140024d39:	pop    rsi
   140024d3a:	pop    rbx
   140024d3b:	pop    rbp
   140024d3c:	ret    
   140024d3d:	int3   
   140024d3e:	int3   
   140024d3f:	int3   
   140024d40:	rex push rbx
   140024d42:	push   rbp
   140024d43:	push   rsi
   140024d44:	push   rdi
   140024d45:	push   r12
   140024d47:	sub    rsp,0x20
   140024d4b:	mov    ebx,DWORD PTR [rsp+0x70]
   140024d4f:	mov    esi,r9d
   140024d52:	mov    rbp,r8
   140024d55:	mov    r12d,edx
   140024d58:	mov    rdi,rcx
   140024d5b:	test   r9d,r9d
   140024d5e:	js     0x140024d64
   140024d60:	test   ebx,ebx
   140024d62:	jns    0x140024d7d
   140024d64:	call   0x140022630
   140024d69:	test   esi,esi
   140024d6b:	jns    0x140024d73
   140024d6d:	mov    esi,DWORD PTR [rdi+0xda8]
   140024d73:	test   ebx,ebx
   140024d75:	jns    0x140024d7d
   140024d77:	mov    ebx,DWORD PTR [rdi+0xdac]
   140024d7d:	xor    r9d,r9d
   140024d80:	mov    r8d,ebx
   140024d83:	mov    edx,esi
   140024d85:	mov    rcx,rdi
   140024d88:	call   0x140025e00
   140024d8d:	test   rax,rax
   140024d90:	je     0x140024dc9
   140024d92:	xor    ebx,ebx
   140024d94:	test   rbp,rbp
   140024d97:	je     0x140024db7
   140024d99:	mov    r8,rbp
   140024d9c:	mov    edx,r12d
   140024d9f:	mov    rcx,rax
   140024da2:	call   0x1400315c0
   140024da7:	test   eax,eax
   140024da9:	setne  al
   140024dac:	add    rsp,0x20
   140024db0:	pop    r12
   140024db2:	pop    rdi
   140024db3:	pop    rsi
   140024db4:	pop    rbp
   140024db5:	pop    rbx
   140024db6:	ret    
   140024db7:	test   ebx,ebx
   140024db9:	mov    eax,ebx
   140024dbb:	setne  al
   140024dbe:	add    rsp,0x20
   140024dc2:	pop    r12
   140024dc4:	pop    rdi
   140024dc5:	pop    rsi
   140024dc6:	pop    rbp
   140024dc7:	pop    rbx
   140024dc8:	ret    
   140024dc9:	add    rsp,0x20
   140024dcd:	pop    r12
   140024dcf:	pop    rdi
   140024dd0:	pop    rsi
   140024dd1:	pop    rbp
   140024dd2:	pop    rbx
   140024dd3:	ret    
   140024dd4:	int3   
   140024dd5:	int3   
   140024dd6:	int3   
   140024dd7:	int3   
   140024dd8:	int3   
   140024dd9:	int3   
   140024dda:	int3   
   140024ddb:	int3   
   140024ddc:	int3   
   140024ddd:	int3   
   140024dde:	int3   
   140024ddf:	int3   
   140024de0:	rex push rbx
   140024de2:	push   rsi
   140024de3:	push   rdi
   140024de4:	sub    rsp,0x70
   140024de8:	mov    rax,QWORD PTR [rip+0x602b9]        # 0x1400850a8
   140024def:	xor    rax,rsp
   140024df2:	mov    QWORD PTR [rsp+0x68],rax
   140024df7:	mov    rbx,r8
   140024dfa:	mov    rsi,rcx
   140024dfd:	mov    r8d,edx
   140024e00:	lea    rdx,[rip+0x481b1]        # 0x14006cfb8
   140024e07:	lea    rcx,[rsp+0x30]
   140024e0c:	mov    edi,r9d
   140024e0f:	call   0x140028ea0
   140024e14:	mov    rcx,QWORD PTR [rsi+0xc18]
   140024e1b:	lea    rdx,[rsp+0x30]
   140024e20:	mov    r9d,0x3
   140024e26:	xor    r8d,r8d
   140024e29:	mov    DWORD PTR [rsp+0x28],edi
   140024e2d:	mov    QWORD PTR [rsp+0x20],rbx
   140024e32:	call   QWORD PTR [rip+0x43208]        # 0x140068040
   140024e38:	test   eax,eax
   140024e3a:	sete   al
   140024e3d:	mov    rcx,QWORD PTR [rsp+0x68]
   140024e42:	xor    rcx,rsp
   140024e45:	call   0x140032f00
   140024e4a:	add    rsp,0x70
   140024e4e:	pop    rdi
   140024e4f:	pop    rsi
   140024e50:	pop    rbx
   140024e51:	ret    
   140024e52:	int3   
   140024e53:	int3   
   140024e54:	int3   
   140024e55:	int3   
   140024e56:	int3   
   140024e57:	int3   
   140024e58:	int3   
   140024e59:	int3   
   140024e5a:	int3   
   140024e5b:	int3   
   140024e5c:	int3   
   140024e5d:	int3   
   140024e5e:	int3   
   140024e5f:	int3   
   140024e60:	mov    QWORD PTR [rsp+0x20],rbx
   140024e65:	push   rbp
   140024e66:	push   rsi
   140024e67:	push   rdi
   140024e68:	sub    rsp,0x80
   140024e6f:	mov    rax,QWORD PTR [rip+0x60232]        # 0x1400850a8
   140024e76:	xor    rax,rsp
   140024e79:	mov    QWORD PTR [rsp+0x70],rax
   140024e7e:	mov    rdi,QWORD PTR [rsp+0xc0]
   140024e86:	mov    rbx,r8
   140024e89:	mov    esi,edx
   140024e8b:	mov    r8d,edx
   140024e8e:	mov    rbp,rcx
   140024e91:	lea    rdx,[rip+0x48120]        # 0x14006cfb8
   140024e98:	lea    rcx,[rsp+0x38]
   140024e9d:	call   0x140028ea0
   140024ea2:	mov    rcx,QWORD PTR [rbp+0xc18]
   140024ea9:	lea    rax,[rsp+0x30]
   140024eae:	mov    QWORD PTR [rsp+0x28],rax
   140024eb3:	lea    r9,[rsp+0x34]
   140024eb8:	lea    rdx,[rsp+0x38]
   140024ebd:	xor    r8d,r8d
   140024ec0:	mov    QWORD PTR [rsp+0x20],0x0
   140024ec9:	mov    DWORD PTR [rsp+0x30],0x0
   140024ed1:	call   QWORD PTR [rip+0x43181]        # 0x140068058
   140024ed7:	mov    r11d,DWORD PTR [rsp+0x30]
   140024edc:	test   r11d,r11d
   140024edf:	je     0x140024f4d
   140024ee1:	test   rbx,rbx
   140024ee4:	je     0x140024f1f
   140024ee6:	mov    rcx,QWORD PTR [rbp+0xc18]
   140024eed:	lea    rax,[rsp+0x30]
   140024ef2:	lea    r9,[rsp+0x34]
   140024ef7:	mov    QWORD PTR [rsp+0x28],rax
   140024efc:	lea    rdx,[rsp+0x38]
   140024f01:	xor    r8d,r8d
   140024f04:	mov    QWORD PTR [rsp+0x20],rbx
   140024f09:	call   QWORD PTR [rip+0x43149]        # 0x140068058
   140024f0f:	xor    ecx,ecx
   140024f11:	test   eax,eax
   140024f13:	sete   cl
   140024f16:	test   ecx,ecx
   140024f18:	je     0x140024f4d
   140024f1a:	mov    r11d,DWORD PTR [rsp+0x30]
   140024f1f:	test   rdi,rdi
   140024f22:	je     0x140024f4d
   140024f24:	mov    DWORD PTR [rdi],r11d
   140024f27:	cmp    esi,0x1
   140024f2a:	jne    0x140024f4d
   140024f2c:	mov    rcx,rbx
   140024f2f:	call   0x14000ea90
   140024f34:	test   al,al
   140024f36:	jne    0x140024f6f
   140024f38:	mov    r8d,DWORD PTR [rsp+0x30]
   140024f3d:	xor    edx,edx
   140024f3f:	mov    rcx,rbx
   140024f42:	call   0x140036dc0
   140024f47:	mov    DWORD PTR [rdi],0x0
   140024f4d:	xor    al,al
   140024f4f:	mov    rcx,QWORD PTR [rsp+0x70]
   140024f54:	xor    rcx,rsp
   140024f57:	call   0x140032f00
   140024f5c:	mov    rbx,QWORD PTR [rsp+0xb8]
   140024f64:	add    rsp,0x80
   140024f6b:	pop    rdi
   140024f6c:	pop    rsi
   140024f6d:	pop    rbp
   140024f6e:	ret    
   140024f6f:	mov    al,0x1
   140024f71:	jmp    0x140024f4f
   140024f73:	int3   
   140024f74:	int3   
   140024f75:	int3   
   140024f76:	int3   
   140024f77:	int3   
   140024f78:	int3   
   140024f79:	int3   
   140024f7a:	int3   
   140024f7b:	int3   
   140024f7c:	int3   
   140024f7d:	int3   
   140024f7e:	int3   
   140024f7f:	int3   
   140024f80:	mov    QWORD PTR [rsp+0x8],rbx
   140024f85:	mov    QWORD PTR [rsp+0x10],rbp
   140024f8a:	mov    QWORD PTR [rsp+0x18],rsi
   140024f8f:	mov    QWORD PTR [rsp+0x20],rdi
   140024f94:	push   r12
   140024f96:	sub    rsp,0x20
   140024f9a:	mov    esi,r9d
   140024f9d:	mov    rbp,r8
   140024fa0:	mov    r12d,edx
   140024fa3:	mov    rdi,rcx
   140024fa6:	test   r9d,r9d
   140024fa9:	jns    0x140024fb1
   140024fab:	mov    esi,DWORD PTR [rcx+0xda8]
   140024fb1:	mov    ebx,DWORD PTR [rsp+0x50]
   140024fb5:	test   ebx,ebx
   140024fb7:	jns    0x140024fbf
   140024fb9:	mov    ebx,DWORD PTR [rcx+0xdac]
   140024fbf:	call   0x140025fc0
   140024fc4:	lea    rcx,[rdi+0xcb8]
   140024fcb:	xor    r9d,r9d
   140024fce:	mov    r8d,ebx
   140024fd1:	mov    edx,esi
   140024fd3:	call   0x14002ddc0
   140024fd8:	test   rax,rax
   140024fdb:	je     0x140024ff0
   140024fdd:	mov    r8,rbp
   140024fe0:	mov    edx,r12d
   140024fe3:	mov    rcx,rax
   140024fe6:	call   0x14002c940
   140024feb:	test   al,al
   140024fed:	setne  al
   140024ff0:	mov    rbx,QWORD PTR [rsp+0x30]
   140024ff5:	mov    rbp,QWORD PTR [rsp+0x38]
   140024ffa:	mov    rsi,QWORD PTR [rsp+0x40]
   140024fff:	mov    rdi,QWORD PTR [rsp+0x48]
   140025004:	add    rsp,0x20
   140025008:	pop    r12
   14002500a:	ret    
   14002500b:	int3   
   14002500c:	int3   
   14002500d:	int3   
   14002500e:	int3   
   14002500f:	int3   
   140025010:	mov    r11,rsp
   140025013:	mov    QWORD PTR [r11+0x10],rbx
   140025017:	mov    QWORD PTR [r11+0x18],rbp
   14002501b:	mov    QWORD PTR [r11+0x20],rsi
   14002501f:	push   rdi
   140025020:	sub    rsp,0x70
   140025024:	mov    rax,QWORD PTR [rip+0x6007d]        # 0x1400850a8
   14002502b:	xor    rax,rsp
   14002502e:	mov    QWORD PTR [rsp+0x68],rax
   140025033:	xor    edi,edi
   140025035:	mov    rsi,r8
   140025038:	mov    rbp,rdx
   14002503b:	mov    rbx,rcx
   14002503e:	cmp    QWORD PTR [rcx+0x10],rdi
   140025042:	jne    0x140025084
   140025044:	mov    rax,QWORD PTR [rcx+0x8]
   140025048:	mov    QWORD PTR [r11-0x38],rdi
   14002504c:	lea    rdx,[r11-0x20]
   140025050:	mov    DWORD PTR [rsp+0x38],edi
   140025054:	add    rcx,0x8
   140025058:	mov    DWORD PTR [rsp+0x30],edi
   14002505c:	mov    DWORD PTR [rsp+0x28],0x84000000
   140025064:	mov    QWORD PTR [r11-0x58],rdx
   140025068:	lea    r9,[rip+0x4b4e9]        # 0x140070558
   14002506f:	lea    rdx,[rip+0x4b4f2]        # 0x140070568
   140025076:	xor    r8d,r8d
   140025079:	mov    QWORD PTR [r11-0x20],rdi
   14002507d:	mov    QWORD PTR [r11-0x18],rdi
   140025081:	call   QWORD PTR [rax+0x8]
   140025084:	mov    QWORD PTR [rbx+0xdc0],rbp
   14002508b:	mov    QWORD PTR [rbx+0xdc8],rsi
   140025092:	cmp    QWORD PTR [rbx+0xdb8],rdi
   140025099:	jne    0x1400250cb
   14002509b:	lea    rax,[rsp+0x50]
   1400250a0:	lea    r8,[rip+0xffffffffffffb689]        # 0x140020730
   1400250a7:	mov    r9,rbx
   1400250aa:	mov    QWORD PTR [rsp+0x28],rax
   1400250af:	xor    edx,edx
   1400250b1:	xor    ecx,ecx
   1400250b3:	mov    DWORD PTR [rsp+0x20],edi
   1400250b7:	mov    DWORD PTR [rsp+0x50],edi
   1400250bb:	call   QWORD PTR [rip+0x43327]        # 0x1400683e8
   1400250c1:	mov    QWORD PTR [rbx+0xdb8],rax
   1400250c8:	cmp    rax,rdi
   1400250cb:	setne  al
   1400250ce:	mov    rcx,QWORD PTR [rsp+0x68]
   1400250d3:	xor    rcx,rsp
   1400250d6:	call   0x140032f00
   1400250db:	lea    r11,[rsp+0x70]
   1400250e0:	mov    rbx,QWORD PTR [r11+0x18]
   1400250e4:	mov    rbp,QWORD PTR [r11+0x20]
   1400250e8:	mov    rsi,QWORD PTR [r11+0x28]
   1400250ec:	mov    rsp,r11
   1400250ef:	pop    rdi
   1400250f0:	ret    
   1400250f1:	int3   
   1400250f2:	int3   
   1400250f3:	int3   
   1400250f4:	int3   
   1400250f5:	int3   
   1400250f6:	int3   
   1400250f7:	int3   
   1400250f8:	int3   
   1400250f9:	int3   
   1400250fa:	int3   
   1400250fb:	int3   
   1400250fc:	int3   
   1400250fd:	int3   
   1400250fe:	int3   
   1400250ff:	int3   
   140025100:	mov    DWORD PTR [rsp+0x18],r8d
   140025105:	push   rbp
   140025106:	push   rsi
   140025107:	push   rdi
   140025108:	push   r12
   14002510a:	push   r13
   14002510c:	push   r14
   14002510e:	push   r15
   140025110:	lea    rbp,[rsp-0x27]
   140025115:	sub    rsp,0xc0
   14002511c:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   140025124:	mov    QWORD PTR [rsp+0x100],rbx
   14002512c:	mov    r15d,r9d
   14002512f:	mov    r12d,r8d
   140025132:	mov    ebx,edx
   140025134:	mov    r13,rcx
   140025137:	mov    r14b,0x1
   14002513a:	call   0x140022630
   14002513f:	cmp    ebx,0xffffffff
   140025142:	jne    0x14002514b
   140025144:	mov    ebx,DWORD PTR [r13+0xda8]
   14002514b:	cmp    r12d,0xffffffff
   14002514f:	jne    0x14002515c
   140025151:	mov    r12d,DWORD PTR [r13+0xdac]
   140025158:	mov    DWORD PTR [rbp+0x77],r12d
   14002515c:	xor    edi,edi
   14002515e:	mov    QWORD PTR [rbp-0x59],rdi
   140025162:	lea    ecx,[rdi+0x20]
   140025165:	call   0x1400331a0
   14002516a:	test   rax,rax
   14002516d:	je     0x140025562
   140025173:	mov    QWORD PTR [rbp-0x61],rax
   140025177:	mov    QWORD PTR [rax],rax
   14002517a:	mov    rax,QWORD PTR [rbp-0x61]
   14002517e:	mov    QWORD PTR [rax+0x8],rax
   140025182:	mov    rax,QWORD PTR [rbp-0x61]
   140025186:	mov    QWORD PTR [rax+0x10],rax
   14002518a:	mov    rax,QWORD PTR [rbp-0x61]
   14002518e:	mov    BYTE PTR [rax+0x1c],0x1
   140025192:	mov    rax,QWORD PTR [rbp-0x61]
   140025196:	mov    BYTE PTR [rax+0x1d],0x1
   14002519a:	lea    r8,[rbp-0x69]
   14002519e:	mov    edx,ebx
   1400251a0:	lea    rbx,[r13+0xcb8]
   1400251a7:	mov    rcx,rbx
   1400251aa:	call   0x14002df80
   1400251af:	mov    rdi,QWORD PTR [rbp-0x61]
   1400251b3:	mov    rsi,QWORD PTR [rdi]
   1400251b6:	cmp    rsi,rdi
   1400251b9:	je     0x140025481
   1400251bf:	nop
   1400251c0:	xor    edi,edi
   1400251c2:	mov    QWORD PTR [rbp-0x39],rdi
   1400251c6:	lea    ecx,[rdi+0x20]
   1400251c9:	call   0x1400331a0
   1400251ce:	test   rax,rax
   1400251d1:	je     0x140025454
   1400251d7:	mov    QWORD PTR [rbp-0x41],rax
   1400251db:	mov    QWORD PTR [rax],rax
   1400251de:	mov    rax,QWORD PTR [rbp-0x41]
   1400251e2:	mov    QWORD PTR [rax+0x8],rax
   1400251e6:	mov    rax,QWORD PTR [rbp-0x41]
   1400251ea:	mov    QWORD PTR [rax+0x10],rax
   1400251ee:	mov    rax,QWORD PTR [rbp-0x41]
   1400251f2:	mov    BYTE PTR [rax+0x1c],0x1
   1400251f6:	mov    rax,QWORD PTR [rbp-0x41]
   1400251fa:	mov    BYTE PTR [rax+0x1d],0x1
   1400251fe:	lea    r9,[rbp-0x49]
   140025202:	mov    r8d,r12d
   140025205:	mov    edx,DWORD PTR [rsi+0x18]
   140025208:	mov    rcx,rbx
   14002520b:	call   0x14002e330
   140025210:	mov    rdi,QWORD PTR [rbp-0x41]
   140025214:	mov    rbx,QWORD PTR [rdi]
   140025217:	cmp    rbx,rdi
   14002521a:	je     0x14002531b
   140025220:	xor    r9d,r9d
   140025223:	mov    r8d,DWORD PTR [rbx+0x18]
   140025227:	mov    edx,DWORD PTR [rsi+0x18]
   14002522a:	mov    rcx,r13
   14002522d:	call   0x140025e00
   140025232:	mov    rdi,rax
   140025235:	test   rax,rax
   140025238:	je     0x1400252b6
   14002523e:	mov    DWORD PTR [rbp+0x6f],r15d
   140025242:	mov    DWORD PTR [rsp+0x28],0x4
   14002524a:	lea    rax,[rbp+0x6f]
   14002524e:	mov    QWORD PTR [rsp+0x20],rax
   140025253:	mov    r9d,0x4
   140025259:	xor    r8d,r8d
   14002525c:	lea    rdx,[rip+0x4b3a1]        # 0x140070604
   140025263:	mov    rcx,QWORD PTR [rdi+0x8]
   140025267:	call   QWORD PTR [rip+0x42dd3]        # 0x140068040
   14002526d:	mov    r11d,DWORD PTR [r13+0xda8]
   140025274:	cmp    DWORD PTR [rsi+0x18],r11d
   140025278:	jne    0x1400252b9
   14002527a:	mov    eax,DWORD PTR [r13+0xdac]
   140025281:	cmp    DWORD PTR [rbx+0x18],eax
   140025284:	jne    0x1400252b9
   140025286:	xor    r9d,r9d
   140025289:	mov    r8,rdi
   14002528c:	xor    edx,edx
   14002528e:	mov    rcx,r13
   140025291:	call   0x1400263d0
   140025296:	test   eax,eax
   140025298:	je     0x1400252b9
   14002529a:	mov    rcx,QWORD PTR [r13+0xdd0]
   1400252a1:	call   QWORD PTR [rip+0x43151]        # 0x1400683f8
   1400252a7:	mov    rcx,QWORD PTR [r13+0xdb0]
   1400252ae:	call   QWORD PTR [rip+0x43144]        # 0x1400683f8
   1400252b4:	jmp    0x1400252b9
   1400252b6:	xor    r14b,r14b
   1400252b9:	cmp    BYTE PTR [rbx+0x1d],0x0
   1400252bd:	jne    0x14002530e
   1400252bf:	mov    rax,QWORD PTR [rbx+0x10]
   1400252c3:	cmp    BYTE PTR [rax+0x1d],0x0
   1400252c7:	jne    0x1400252ee
   1400252c9:	mov    rbx,rax
   1400252cc:	mov    rax,QWORD PTR [rax]
   1400252cf:	cmp    BYTE PTR [rax+0x1d],0x0
   1400252d3:	jne    0x14002530e
   1400252d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400252e0:	mov    rbx,rax
   1400252e3:	mov    rax,QWORD PTR [rax]
   1400252e6:	cmp    BYTE PTR [rax+0x1d],0x0
   1400252ea:	je     0x1400252e0
   1400252ec:	jmp    0x14002530e
   1400252ee:	mov    rax,QWORD PTR [rbx+0x8]
   1400252f2:	cmp    BYTE PTR [rax+0x1d],0x0
   1400252f6:	jne    0x14002530b
   1400252f8:	cmp    rbx,QWORD PTR [rax+0x10]
   1400252fc:	jne    0x14002530b
   1400252fe:	mov    rbx,rax
   140025301:	mov    rax,QWORD PTR [rax+0x8]
   140025305:	cmp    BYTE PTR [rax+0x1d],0x0
   140025309:	je     0x1400252f8
   14002530b:	mov    rbx,rax
   14002530e:	mov    rdi,QWORD PTR [rbp-0x41]
   140025312:	cmp    rbx,rdi
   140025315:	jne    0x140025220
   14002531b:	mov    rbx,QWORD PTR [rdi]
   14002531e:	cmp    rbx,rbx
   140025321:	jne    0x140025378
   140025323:	mov    r12,QWORD PTR [rdi+0x8]
   140025327:	mov    rbx,r12
   14002532a:	cmp    BYTE PTR [r12+0x1d],0x0
   140025330:	jne    0x140025357
   140025332:	mov    rdx,QWORD PTR [rbx+0x10]
   140025336:	lea    rcx,[rbp-0x49]
   14002533a:	call   0x140028a70
   14002533f:	mov    rbx,QWORD PTR [rbx]
   140025342:	mov    rcx,r12
   140025345:	call   0x1400330c0
   14002534a:	mov    r12,rbx
   14002534d:	cmp    BYTE PTR [rbx+0x1d],0x0
   140025351:	je     0x140025332
   140025353:	mov    rdi,QWORD PTR [rbp-0x41]
   140025357:	mov    QWORD PTR [rdi+0x8],rdi
   14002535b:	mov    rax,QWORD PTR [rbp-0x41]
   14002535f:	mov    QWORD PTR [rax],rax
   140025362:	mov    rax,QWORD PTR [rbp-0x41]
   140025366:	mov    QWORD PTR [rax+0x10],rax
   14002536a:	mov    QWORD PTR [rbp-0x39],0x0
   140025372:	mov    r12d,DWORD PTR [rbp+0x77]
   140025376:	jmp    0x1400253e0
   140025378:	cmp    rbx,rdi
   14002537b:	je     0x1400253e4
   14002537d:	nop    DWORD PTR [rax]
   140025380:	mov    r8,rbx
   140025383:	cmp    BYTE PTR [rbx+0x1d],0x0
   140025387:	jne    0x1400253ce
   140025389:	mov    rax,QWORD PTR [rbx+0x10]
   14002538d:	cmp    BYTE PTR [rax+0x1d],0x0
   140025391:	jne    0x1400253ae
   140025393:	mov    rbx,rax
   140025396:	mov    rax,QWORD PTR [rax]
   140025399:	cmp    BYTE PTR [rax+0x1d],0x0
   14002539d:	jne    0x1400253ce
   14002539f:	nop
   1400253a0:	mov    rbx,rax
   1400253a3:	mov    rax,QWORD PTR [rax]
   1400253a6:	cmp    BYTE PTR [rax+0x1d],0x0
   1400253aa:	je     0x1400253a0
   1400253ac:	jmp    0x1400253ce
   1400253ae:	mov    rax,QWORD PTR [rbx+0x8]
   1400253b2:	cmp    BYTE PTR [rax+0x1d],0x0
   1400253b6:	jne    0x1400253cb
   1400253b8:	cmp    rbx,QWORD PTR [rax+0x10]
   1400253bc:	jne    0x1400253cb
   1400253be:	mov    rbx,rax
   1400253c1:	mov    rax,QWORD PTR [rax+0x8]
   1400253c5:	cmp    BYTE PTR [rax+0x1d],0x0
   1400253c9:	je     0x1400253b8
   1400253cb:	mov    rbx,rax
   1400253ce:	lea    rdx,[rbp-0x29]
   1400253d2:	lea    rcx,[rbp-0x49]
   1400253d6:	call   0x140028500
   1400253db:	cmp    rbx,rdi
   1400253de:	jne    0x140025380
   1400253e0:	mov    rdi,QWORD PTR [rbp-0x41]
   1400253e4:	mov    rcx,rdi
   1400253e7:	call   0x1400330c0
   1400253ec:	cmp    BYTE PTR [rsi+0x1d],0x0
   1400253f0:	jne    0x14002543e
   1400253f2:	mov    rax,QWORD PTR [rsi+0x10]
   1400253f6:	cmp    BYTE PTR [rax+0x1d],0x0
   1400253fa:	jne    0x14002541e
   1400253fc:	mov    rsi,rax
   1400253ff:	mov    rax,QWORD PTR [rax]
   140025402:	cmp    BYTE PTR [rax+0x1d],0x0
   140025406:	jne    0x14002543e
   140025408:	nop    DWORD PTR [rax+rax*1+0x0]
   140025410:	mov    rsi,rax
   140025413:	mov    rax,QWORD PTR [rax]
   140025416:	cmp    BYTE PTR [rax+0x1d],0x0
   14002541a:	je     0x140025410
   14002541c:	jmp    0x14002543e
   14002541e:	mov    rax,QWORD PTR [rsi+0x8]
   140025422:	cmp    BYTE PTR [rax+0x1d],0x0
   140025426:	jne    0x14002543b
   140025428:	cmp    rsi,QWORD PTR [rax+0x10]
   14002542c:	jne    0x14002543b
   14002542e:	mov    rsi,rax
   140025431:	mov    rax,QWORD PTR [rax+0x8]
   140025435:	cmp    BYTE PTR [rax+0x1d],0x0
   140025439:	je     0x140025428
   14002543b:	mov    rsi,rax
   14002543e:	mov    rdi,QWORD PTR [rbp-0x61]
   140025442:	cmp    rsi,rdi
   140025445:	lea    rbx,[r13+0xcb8]
   14002544c:	jne    0x1400251c0
   140025452:	jmp    0x140025481
   140025454:	mov    QWORD PTR [rbp-0x19],rdi
   140025458:	lea    rdx,[rbp-0x19]
   14002545c:	lea    rcx,[rbp+0x7]
   140025460:	call   0x140032fd4
   140025465:	lea    r11,[rip+0x43424]        # 0x140068890
   14002546c:	mov    QWORD PTR [rbp+0x7],r11
   140025470:	lea    rdx,[rip+0x5dfa9]        # 0x140083420
   140025477:	lea    rcx,[rbp+0x7]
   14002547b:	call   0x140036358
   140025480:	nop
   140025481:	mov    rbx,QWORD PTR [rdi]
   140025484:	cmp    rbx,rbx
   140025487:	jne    0x1400254e2
   140025489:	mov    rsi,QWORD PTR [rdi+0x8]
   14002548d:	mov    rbx,rsi
   140025490:	cmp    BYTE PTR [rsi+0x1d],0x0
   140025494:	jne    0x1400254c5
   140025496:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400254a0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400254a4:	lea    rcx,[rbp-0x69]
   1400254a8:	call   0x140028a70
   1400254ad:	mov    rbx,QWORD PTR [rbx]
   1400254b0:	mov    rcx,rsi
   1400254b3:	call   0x1400330c0
   1400254b8:	mov    rsi,rbx
   1400254bb:	cmp    BYTE PTR [rbx+0x1d],0x0
   1400254bf:	je     0x1400254a0
   1400254c1:	mov    rdi,QWORD PTR [rbp-0x61]
   1400254c5:	mov    QWORD PTR [rdi+0x8],rdi
   1400254c9:	mov    rax,QWORD PTR [rbp-0x61]
   1400254cd:	mov    QWORD PTR [rax],rax
   1400254d0:	mov    rax,QWORD PTR [rbp-0x61]
   1400254d4:	mov    QWORD PTR [rax+0x10],rax
   1400254d8:	mov    QWORD PTR [rbp-0x59],0x0
   1400254e0:	jmp    0x140025550
   1400254e2:	cmp    rbx,rdi
   1400254e5:	je     0x140025554
   1400254e7:	mov    r8,rbx
   1400254ea:	cmp    BYTE PTR [rbx+0x1d],0x0
   1400254ee:	jne    0x14002553e
   1400254f0:	mov    rax,QWORD PTR [rbx+0x10]
   1400254f4:	cmp    BYTE PTR [rax+0x1d],0x0
   1400254f8:	jne    0x14002551e
   1400254fa:	mov    rbx,rax
   1400254fd:	mov    rax,QWORD PTR [rax]
   140025500:	cmp    BYTE PTR [rax+0x1d],0x0
   140025504:	jne    0x14002553e
   140025506:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025510:	mov    rbx,rax
   140025513:	mov    rax,QWORD PTR [rax]
   140025516:	cmp    BYTE PTR [rax+0x1d],0x0
   14002551a:	je     0x140025510
   14002551c:	jmp    0x14002553e
   14002551e:	mov    rax,QWORD PTR [rbx+0x8]
   140025522:	cmp    BYTE PTR [rax+0x1d],0x0
   140025526:	jne    0x14002553b
   140025528:	cmp    rbx,QWORD PTR [rax+0x10]
   14002552c:	jne    0x14002553b
   14002552e:	mov    rbx,rax
   140025531:	mov    rax,QWORD PTR [rax+0x8]
   140025535:	cmp    BYTE PTR [rax+0x1d],0x0
   140025539:	je     0x140025528
   14002553b:	mov    rbx,rax
   14002553e:	lea    rdx,[rbp-0x29]
   140025542:	lea    rcx,[rbp-0x69]
   140025546:	call   0x140028500
   14002554b:	cmp    rbx,rdi
   14002554e:	jne    0x1400254e7
   140025550:	mov    rdi,QWORD PTR [rbp-0x61]
   140025554:	mov    rcx,rdi
   140025557:	call   0x1400330c0
   14002555c:	movzx  eax,r14b
   140025560:	jmp    0x14002558f
   140025562:	mov    QWORD PTR [rbp-0x21],rdi
   140025566:	lea    rdx,[rbp-0x21]
   14002556a:	lea    rcx,[rbp-0x11]
   14002556e:	call   0x140032fd4
   140025573:	lea    r11,[rip+0x43316]        # 0x140068890
   14002557a:	mov    QWORD PTR [rbp-0x11],r11
   14002557e:	lea    rdx,[rip+0x5de9b]        # 0x140083420
   140025585:	lea    rcx,[rbp-0x11]
   140025589:	call   0x140036358
   14002558e:	int3   
   14002558f:	mov    rbx,QWORD PTR [rsp+0x100]
   140025597:	add    rsp,0xc0
   14002559e:	pop    r15
   1400255a0:	pop    r14
   1400255a2:	pop    r13
   1400255a4:	pop    r12
   1400255a6:	pop    rdi
   1400255a7:	pop    rsi
   1400255a8:	pop    rbp
   1400255a9:	ret    
   1400255aa:	int3   
   1400255ab:	int3   
   1400255ac:	int3   
   1400255ad:	int3   
   1400255ae:	int3   
   1400255af:	int3   
   1400255b0:	rex push rbx
   1400255b2:	sub    rsp,0x30
   1400255b6:	mov    rbx,r9
   1400255b9:	test   edx,edx
   1400255bb:	jns    0x1400255c3
   1400255bd:	mov    edx,DWORD PTR [rcx+0xda8]
   1400255c3:	test   r8d,r8d
   1400255c6:	jns    0x1400255cf
   1400255c8:	mov    r8d,DWORD PTR [rcx+0xdac]
   1400255cf:	xor    r9d,r9d
   1400255d2:	call   0x140025e00
   1400255d7:	test   rbx,rbx
   1400255da:	je     0x140025630
   1400255dc:	test   rax,rax
   1400255df:	je     0x140025630
   1400255e1:	xor    ecx,ecx
   1400255e3:	lea    r9,[rsp+0x58]
   1400255e8:	lea    rdx,[rip+0x4b015]        # 0x140070604
   1400255ef:	mov    DWORD PTR [rbx],ecx
   1400255f1:	mov    DWORD PTR [rsp+0x48],ecx
   1400255f5:	lea    rcx,[rsp+0x50]
   1400255fa:	mov    QWORD PTR [rsp+0x28],rcx
   1400255ff:	lea    rcx,[rsp+0x48]
   140025604:	xor    r8d,r8d
   140025607:	mov    QWORD PTR [rsp+0x20],rcx
   14002560c:	mov    rcx,QWORD PTR [rax+0x8]
   140025610:	mov    DWORD PTR [rsp+0x50],0x4
   140025618:	call   QWORD PTR [rip+0x42a3a]        # 0x140068058
   14002561e:	test   eax,eax
   140025620:	jne    0x140025628
   140025622:	mov    eax,DWORD PTR [rsp+0x48]
   140025626:	mov    DWORD PTR [rbx],eax
   140025628:	mov    al,0x1
   14002562a:	add    rsp,0x30
   14002562e:	pop    rbx
   14002562f:	ret    
   140025630:	xor    al,al
   140025632:	add    rsp,0x30
   140025636:	pop    rbx
   140025637:	ret    
   140025638:	int3   
   140025639:	int3   
   14002563a:	int3   
   14002563b:	int3   
   14002563c:	int3   
   14002563d:	int3   
   14002563e:	int3   
   14002563f:	int3   
   140025640:	mov    QWORD PTR [rsp+0x8],rbx
   140025645:	mov    rbx,r9
   140025648:	mov    r10d,r8d
   14002564b:	mov    r11d,edx
   14002564e:	test   edx,edx
   140025650:	jns    0x140025659
   140025652:	mov    r11d,DWORD PTR [rcx+0xda8]
   140025659:	test   r8d,r8d
   14002565c:	jns    0x140025665
   14002565e:	mov    r10d,DWORD PTR [rcx+0xdac]
   140025665:	mov    r9,QWORD PTR [rcx+0xd68]
   14002566c:	xor    r8d,r8d
   14002566f:	sub    r9,QWORD PTR [rcx+0xd60]
   140025676:	mov    edx,r8d
   140025679:	sar    r9,0x3
   14002567d:	test   r9d,r9d
   140025680:	jle    0x1400256c5
   140025682:	mov    rcx,QWORD PTR [rcx+0xd60]
   140025689:	nop    DWORD PTR [rax+0x0]
   140025690:	mov    rax,QWORD PTR [rcx]
   140025693:	test   rax,rax
   140025696:	je     0x1400256ba
   140025698:	cmp    r11d,DWORD PTR [rax+0xa8]
   14002569f:	jne    0x1400256ba
   1400256a1:	cmp    r10d,DWORD PTR [rax+0xac]
   1400256a8:	jne    0x1400256ba
   1400256aa:	test   BYTE PTR [rax+0xb0],0x1
   1400256b1:	je     0x1400256ba
   1400256b3:	or     r8d,DWORD PTR [rax+0xb4]
   1400256ba:	inc    edx
   1400256bc:	add    rcx,0x8
   1400256c0:	cmp    edx,r9d
   1400256c3:	jl     0x140025690
   1400256c5:	test   rbx,rbx
   1400256c8:	je     0x1400256d5
   1400256ca:	mov    DWORD PTR [rbx],r8d
   1400256cd:	mov    al,0x1
   1400256cf:	mov    rbx,QWORD PTR [rsp+0x8]
   1400256d4:	ret    
   1400256d5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400256da:	xor    al,al
   1400256dc:	ret    
   1400256dd:	int3   
   1400256de:	int3   
   1400256df:	int3   
   1400256e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400256e5:	push   rbp
   1400256e6:	push   rsi
   1400256e7:	push   rdi
   1400256e8:	push   r12
   1400256ea:	push   r13
   1400256ec:	sub    rsp,0x50
   1400256f0:	mov    rax,QWORD PTR [rip+0x5f9b1]        # 0x1400850a8
   1400256f7:	xor    rax,rsp
   1400256fa:	mov    QWORD PTR [rsp+0x48],rax
   1400256ff:	mov    ebp,DWORD PTR [rsp+0xa0]
   140025706:	mov    edi,DWORD PTR [rsp+0xa8]
   14002570d:	mov    r13d,DWORD PTR [rsp+0xb0]
   140025715:	movsxd r12,r9d
   140025718:	mov    rsi,r8
   14002571b:	mov    rbx,rcx
   14002571e:	test   ebp,ebp
   140025720:	jns    0x140025728
   140025722:	mov    ebp,DWORD PTR [rcx+0xda8]
   140025728:	test   edi,edi
   14002572a:	jns    0x140025732
   14002572c:	mov    edi,DWORD PTR [rcx+0xdac]
   140025732:	call   0x140025fc0
   140025737:	lea    rcx,[rbx+0xcb8]
   14002573e:	mov    r9d,r13d
   140025741:	mov    r8d,edi
   140025744:	mov    edx,ebp
   140025746:	call   0x14002ddc0
   14002574b:	test   rax,rax
   14002574e:	je     0x140025792
   140025750:	lea    rdx,[rsp+0x20]
   140025755:	mov    rcx,rax
   140025758:	call   0x1400205f0
   14002575d:	cmp    QWORD PTR [rax+0x18],0x10
   140025762:	jb     0x140025767
   140025764:	mov    rax,QWORD PTR [rax]
   140025767:	mov    r9,r12
   14002576a:	mov    r8,rax
   14002576d:	mov    rdx,r12
   140025770:	mov    rcx,rsi
   140025773:	call   0x140034538
   140025778:	cmp    QWORD PTR [rsp+0x38],0x10
   14002577e:	jb     0x14002578a
   140025780:	mov    rcx,QWORD PTR [rsp+0x20]
   140025785:	call   0x1400330c0
   14002578a:	mov    BYTE PTR [r12+rsi*1-0x1],0x0
   140025790:	mov    al,0x1
   140025792:	mov    rcx,QWORD PTR [rsp+0x48]
   140025797:	xor    rcx,rsp
   14002579a:	call   0x140032f00
   14002579f:	mov    rbx,QWORD PTR [rsp+0x88]
   1400257a7:	add    rsp,0x50
   1400257ab:	pop    r13
   1400257ad:	pop    r12
   1400257af:	pop    rdi
   1400257b0:	pop    rsi
   1400257b1:	pop    rbp
   1400257b2:	ret    
   1400257b3:	int3   
   1400257b4:	int3   
   1400257b5:	int3   
   1400257b6:	int3   
   1400257b7:	int3   
   1400257b8:	int3   
   1400257b9:	int3   
   1400257ba:	int3   
   1400257bb:	int3   
   1400257bc:	int3   
   1400257bd:	int3   
   1400257be:	int3   
   1400257bf:	int3   
   1400257c0:	rex push rbx
   1400257c2:	push   rbp
   1400257c3:	push   rsi
   1400257c4:	push   rdi
   1400257c5:	push   r12
   1400257c7:	push   r13
   1400257c9:	sub    rsp,0x178
   1400257d0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400257d9:	mov    rax,QWORD PTR [rip+0x5f8c8]        # 0x1400850a8
   1400257e0:	xor    rax,rsp
   1400257e3:	mov    QWORD PTR [rsp+0x160],rax
   1400257eb:	mov    esi,r9d
   1400257ee:	movsxd r13,r8d
   1400257f1:	mov    rbp,rdx
   1400257f4:	mov    rbx,rcx
   1400257f7:	mov    edi,DWORD PTR [rsp+0x1d0]
   1400257fe:	mov    r12d,DWORD PTR [rsp+0x1d8]
   140025806:	test   r9d,r9d
   140025809:	jns    0x140025811
   14002580b:	mov    esi,DWORD PTR [rcx+0xda8]
   140025811:	test   edi,edi
   140025813:	jns    0x14002581b
   140025815:	mov    edi,DWORD PTR [rcx+0xdac]
   14002581b:	call   0x140025fc0
   140025820:	lea    rcx,[rbx+0xcb8]
   140025827:	mov    r9d,r12d
   14002582a:	mov    r8d,edi
   14002582d:	mov    edx,esi
   14002582f:	call   0x14002ddc0
   140025834:	test   rax,rax
   140025837:	je     0x1400258b2
   140025839:	lea    rdx,[rsp+0x28]
   14002583e:	mov    rcx,rax
   140025841:	call   0x1400205f0
   140025846:	nop
   140025847:	cmp    QWORD PTR [rax+0x18],0x10
   14002584c:	jb     0x140025851
   14002584e:	mov    rax,QWORD PTR [rax]
   140025851:	lea    rcx,[rsp+0x58]
   140025856:	mov    QWORD PTR [rsp+0x50],rcx
   14002585b:	mov    r8d,0x3
   140025861:	mov    rdx,rax
   140025864:	lea    rcx,[rsp+0x50]
   140025869:	call   0x140005b60
   14002586e:	mov    r9,r13
   140025871:	mov    r8,QWORD PTR [rsp+0x50]
   140025876:	mov    rdx,r13
   140025879:	mov    rcx,rbp
   14002587c:	call   0x140035450
   140025881:	lea    r11,[rsp+0x58]
   140025886:	mov    rcx,QWORD PTR [rsp+0x50]
   14002588b:	cmp    rcx,r11
   14002588e:	je     0x140025896
   140025890:	call   0x140033594
   140025895:	nop
   140025896:	cmp    QWORD PTR [rsp+0x40],0x10
   14002589c:	jb     0x1400258a8
   14002589e:	mov    rcx,QWORD PTR [rsp+0x28]
   1400258a3:	call   0x1400330c0
   1400258a8:	xor    eax,eax
   1400258aa:	mov    WORD PTR [rbp+r13*2-0x2],ax
   1400258b0:	mov    al,0x1
   1400258b2:	mov    rcx,QWORD PTR [rsp+0x160]
   1400258ba:	xor    rcx,rsp
   1400258bd:	call   0x140032f00
   1400258c2:	add    rsp,0x178
   1400258c9:	pop    r13
   1400258cb:	pop    r12
   1400258cd:	pop    rdi
   1400258ce:	pop    rsi
   1400258cf:	pop    rbp
   1400258d0:	pop    rbx
   1400258d1:	ret    
   1400258d2:	int3   
   1400258d3:	int3   
   1400258d4:	int3   
   1400258d5:	int3   
   1400258d6:	int3   
   1400258d7:	int3   
   1400258d8:	int3   
   1400258d9:	int3   
   1400258da:	int3   
   1400258db:	int3   
   1400258dc:	int3   
   1400258dd:	int3   
   1400258de:	int3   
   1400258df:	int3   
   1400258e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400258e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400258ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400258ef:	push   rdi
   1400258f0:	sub    rsp,0x20
   1400258f4:	mov    edi,r9d
   1400258f7:	movsxd rsi,r8d
   1400258fa:	mov    rbp,rdx
   1400258fd:	mov    rbx,rcx
   140025900:	call   0x140025fc0
   140025905:	test   rbp,rbp
   140025908:	je     0x1400259bc
   14002590e:	test   edi,edi
   140025910:	jns    0x140025918
   140025912:	mov    edi,DWORD PTR [rbx+0xda8]
   140025918:	mov    r10d,DWORD PTR [rbx+0xd20]
   14002591f:	or     r9d,0xffffffff
   140025923:	xor    r8d,r8d
   140025926:	sub    r10d,DWORD PTR [rbx+0xd18]
   14002592d:	nop    DWORD PTR [rax]
   140025930:	cmp    r8d,r10d
   140025933:	jae    0x140025955
   140025935:	mov    rcx,QWORD PTR [rbx+0xd18]
   14002593c:	mov    eax,r8d
   14002593f:	movzx  edx,BYTE PTR [r8+rcx*1]
   140025944:	cmp    edi,edx
   140025946:	cmove  r9d,r8d
   14002594a:	inc    r8d
   14002594d:	cmp    r9d,0xffffffff
   140025951:	je     0x140025930
   140025953:	jmp    0x14002595b
   140025955:	cmp    r9d,0xffffffff
   140025959:	je     0x1400259bc
   14002595b:	test   r9d,r9d
   14002595e:	js     0x1400259bc
   140025960:	mov    r10,QWORD PTR [rbx+0xcf8]
   140025967:	mov    rcx,QWORD PTR [rbx+0xd00]
   14002596e:	movabs rax,0x6666666666666667
   140025978:	sub    rcx,r10
   14002597b:	movsxd r8,r9d
   14002597e:	imul   rcx
   140025981:	sar    rdx,0x4
   140025985:	mov    rax,rdx
   140025988:	shr    rax,0x3f
   14002598c:	add    rdx,rax
   14002598f:	cmp    r8,rdx
   140025992:	jae    0x1400259bc
   140025994:	lea    rax,[r8+r8*4]
   140025998:	cmp    QWORD PTR [r10+rax*8+0x18],0x10
   14002599e:	lea    r8,[r10+rax*8]
   1400259a2:	jb     0x1400259a7
   1400259a4:	mov    r8,QWORD PTR [r8]
   1400259a7:	lea    eax,[rsi-0x1]
   1400259aa:	mov    rdx,rsi
   1400259ad:	mov    rcx,rbp
   1400259b0:	movsxd r9,eax
   1400259b3:	call   0x140034538
   1400259b8:	mov    al,0x1
   1400259ba:	jmp    0x1400259be
   1400259bc:	xor    al,al
   1400259be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400259c3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400259c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400259cd:	add    rsp,0x20
   1400259d1:	pop    rdi
   1400259d2:	ret    
   1400259d3:	int3   
   1400259d4:	int3   
   1400259d5:	int3   
   1400259d6:	int3   
   1400259d7:	int3   
   1400259d8:	int3   
   1400259d9:	int3   
   1400259da:	int3   
   1400259db:	int3   
   1400259dc:	int3   
   1400259dd:	int3   
   1400259de:	int3   
   1400259df:	int3   
   1400259e0:	rex push rbx
   1400259e2:	push   rbp
   1400259e3:	push   rsi
   1400259e4:	push   rdi
   1400259e5:	push   r12
   1400259e7:	push   r13
   1400259e9:	sub    rsp,0x158
   1400259f0:	mov    rax,QWORD PTR [rip+0x5f6b1]        # 0x1400850a8
   1400259f7:	xor    rax,rsp
   1400259fa:	mov    QWORD PTR [rsp+0x140],rax
   140025a02:	mov    esi,DWORD PTR [rsp+0x1b0]
   140025a09:	mov    edi,DWORD PTR [rsp+0x1b8]
   140025a10:	mov    r13d,r9d
   140025a13:	mov    r12,r8
   140025a16:	mov    ebp,edx
   140025a18:	mov    rbx,rcx
   140025a1b:	call   0x140022630
   140025a20:	test   esi,esi
   140025a22:	jns    0x140025a2a
   140025a24:	mov    esi,DWORD PTR [rbx+0xda8]
   140025a2a:	test   edi,edi
   140025a2c:	jns    0x140025a34
   140025a2e:	mov    edi,DWORD PTR [rbx+0xdac]
   140025a34:	xor    r9d,r9d
   140025a37:	mov    r8d,edi
   140025a3a:	mov    edx,esi
   140025a3c:	mov    rcx,rbx
   140025a3f:	call   0x140025e00
   140025a44:	mov    rbx,rax
   140025a47:	test   rax,rax
   140025a4a:	je     0x140025a87
   140025a4c:	lea    rdx,[rip+0x47565]        # 0x14006cfb8
   140025a53:	lea    rcx,[rsp+0x30]
   140025a58:	mov    r8d,ebp
   140025a5b:	call   0x14000c8f0
   140025a60:	mov    rcx,QWORD PTR [rbx+0x8]
   140025a64:	lea    rdx,[rsp+0x30]
   140025a69:	mov    r9d,0x3
   140025a6f:	xor    r8d,r8d
   140025a72:	mov    DWORD PTR [rsp+0x28],r13d
   140025a77:	mov    QWORD PTR [rsp+0x20],r12
   140025a7c:	call   QWORD PTR [rip+0x425be]        # 0x140068040
   140025a82:	test   eax,eax
   140025a84:	sete   al
   140025a87:	mov    rcx,QWORD PTR [rsp+0x140]
   140025a8f:	xor    rcx,rsp
   140025a92:	call   0x140032f00
   140025a97:	add    rsp,0x158
   140025a9e:	pop    r13
   140025aa0:	pop    r12
   140025aa2:	pop    rdi
   140025aa3:	pop    rsi
   140025aa4:	pop    rbp
   140025aa5:	pop    rbx
   140025aa6:	ret    
   140025aa7:	int3   
   140025aa8:	int3   
   140025aa9:	int3   
   140025aaa:	int3   
   140025aab:	int3   
   140025aac:	int3   
   140025aad:	int3   
   140025aae:	int3   
   140025aaf:	int3   
   140025ab0:	mov    QWORD PTR [rsp+0x20],rbx
   140025ab5:	push   rbp
   140025ab6:	push   rsi
   140025ab7:	push   rdi
   140025ab8:	push   r12
   140025aba:	push   r13
   140025abc:	sub    rsp,0x160
   140025ac3:	mov    rax,QWORD PTR [rip+0x5f5de]        # 0x1400850a8
   140025aca:	xor    rax,rsp
   140025acd:	mov    QWORD PTR [rsp+0x150],rax
   140025ad5:	mov    rsi,QWORD PTR [rsp+0x1b0]
   140025add:	mov    ebp,DWORD PTR [rsp+0x1b8]
   140025ae4:	mov    edi,DWORD PTR [rsp+0x1c0]
   140025aeb:	mov    r12,r8
   140025aee:	mov    r13d,edx
   140025af1:	mov    rbx,rcx
   140025af4:	call   0x140022630
   140025af9:	test   ebp,ebp
   140025afb:	jns    0x140025b03
   140025afd:	mov    ebp,DWORD PTR [rbx+0xda8]
   140025b03:	test   edi,edi
   140025b05:	jns    0x140025b0d
   140025b07:	mov    edi,DWORD PTR [rbx+0xdac]
   140025b0d:	xor    r9d,r9d
   140025b10:	mov    r8d,edi
   140025b13:	mov    edx,ebp
   140025b15:	mov    rcx,rbx
   140025b18:	call   0x140025e00
   140025b1d:	mov    rbx,rax
   140025b20:	test   rax,rax
   140025b23:	je     0x140025bb9
   140025b29:	lea    rdx,[rip+0x47488]        # 0x14006cfb8
   140025b30:	lea    rcx,[rsp+0x40]
   140025b35:	mov    r8d,r13d
   140025b38:	call   0x14000c8f0
   140025b3d:	mov    rcx,QWORD PTR [rbx+0x8]
   140025b41:	lea    rax,[rsp+0x30]
   140025b46:	xor    edi,edi
   140025b48:	mov    QWORD PTR [rsp+0x28],rax
   140025b4d:	lea    r9,[rsp+0x34]
   140025b52:	lea    rdx,[rsp+0x40]
   140025b57:	xor    r8d,r8d
   140025b5a:	mov    QWORD PTR [rsp+0x20],rdi
   140025b5f:	mov    DWORD PTR [rsp+0x30],edi
   140025b63:	call   QWORD PTR [rip+0x424ef]        # 0x140068058
   140025b69:	mov    r11d,DWORD PTR [rsp+0x30]
   140025b6e:	test   r11d,r11d
   140025b71:	je     0x140025bb9
   140025b73:	test   r12,r12
   140025b76:	je     0x140025bad
   140025b78:	mov    rcx,QWORD PTR [rbx+0x8]
   140025b7c:	lea    rax,[rsp+0x30]
   140025b81:	lea    r9,[rsp+0x34]
   140025b86:	mov    QWORD PTR [rsp+0x28],rax
   140025b8b:	lea    rdx,[rsp+0x40]
   140025b90:	xor    r8d,r8d
   140025b93:	mov    QWORD PTR [rsp+0x20],r12
   140025b98:	call   QWORD PTR [rip+0x424ba]        # 0x140068058
   140025b9e:	test   eax,eax
   140025ba0:	sete   dil
   140025ba4:	test   edi,edi
   140025ba6:	je     0x140025bb9
   140025ba8:	mov    r11d,DWORD PTR [rsp+0x30]
   140025bad:	test   rsi,rsi
   140025bb0:	je     0x140025bb5
   140025bb2:	mov    DWORD PTR [rsi],r11d
   140025bb5:	mov    al,0x1
   140025bb7:	jmp    0x140025bbb
   140025bb9:	xor    al,al
   140025bbb:	mov    rcx,QWORD PTR [rsp+0x150]
   140025bc3:	xor    rcx,rsp
   140025bc6:	call   0x140032f00
   140025bcb:	mov    rbx,QWORD PTR [rsp+0x1a8]
   140025bd3:	add    rsp,0x160
   140025bda:	pop    r13
   140025bdc:	pop    r12
   140025bde:	pop    rdi
   140025bdf:	pop    rsi
   140025be0:	pop    rbp
   140025be1:	ret    
   140025be2:	int3   
   140025be3:	int3   
   140025be4:	int3   
   140025be5:	int3   
   140025be6:	int3   
   140025be7:	int3   
   140025be8:	int3   
   140025be9:	int3   
   140025bea:	int3   
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	rex push rsi
   140025bf2:	push   rdi
   140025bf3:	push   r12
   140025bf5:	sub    rsp,0x50
   140025bf9:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140025c02:	mov    QWORD PTR [rsp+0x70],rbx
   140025c07:	mov    QWORD PTR [rsp+0x80],rbp
   140025c0f:	mov    ebx,r8d
   140025c12:	mov    r12,rdx
   140025c15:	mov    rbp,rcx
   140025c18:	xor    sil,sil
   140025c1b:	test   rdx,rdx
   140025c1e:	je     0x140025cd7
   140025c24:	call   0x140022630
   140025c29:	test   ebx,ebx
   140025c2b:	jns    0x140025c33
   140025c2d:	mov    ebx,DWORD PTR [rbp+0xda8]
   140025c33:	xor    edi,edi
   140025c35:	mov    DWORD PTR [rsp+0x78],edi
   140025c39:	lea    rcx,[rip+0x60b18]        # 0x140086758
   140025c40:	mov    rax,QWORD PTR [rip+0x60b11]        # 0x140086758
   140025c47:	call   QWORD PTR [rax+0x18]
   140025c4a:	add    rax,0x18
   140025c4e:	mov    QWORD PTR [rsp+0x38],rax
   140025c53:	mov    r8d,ebx
   140025c56:	lea    rdx,[rip+0x4a993]        # 0x1400705f0
   140025c5d:	lea    rcx,[rsp+0x38]
   140025c62:	call   0x140015180
   140025c67:	mov    DWORD PTR [rsp+0x88],0x4
   140025c72:	lea    rax,[rsp+0x88]
   140025c7a:	mov    QWORD PTR [rsp+0x28],rax
   140025c7f:	lea    rax,[rsp+0x78]
   140025c84:	mov    QWORD PTR [rsp+0x20],rax
   140025c89:	lea    r9,[rsp+0x30]
   140025c8e:	xor    r8d,r8d
   140025c91:	mov    rbx,QWORD PTR [rsp+0x38]
   140025c96:	mov    rdx,rbx
   140025c99:	mov    rcx,QWORD PTR [rbp+0xc18]
   140025ca0:	call   QWORD PTR [rip+0x423b2]        # 0x140068058
   140025ca6:	test   eax,eax
   140025ca8:	sete   dil
   140025cac:	test   edi,edi
   140025cae:	je     0x140025cbb
   140025cb0:	mov    eax,DWORD PTR [rsp+0x78]
   140025cb4:	mov    DWORD PTR [r12],eax
   140025cb8:	mov    sil,0x1
   140025cbb:	lea    rdx,[rbx-0x18]
   140025cbf:	or     ecx,0xffffffff
   140025cc2:	lock xadd DWORD PTR [rdx+0x10],ecx
   140025cc7:	dec    ecx
   140025cc9:	test   ecx,ecx
   140025ccb:	jg     0x140025cd7
   140025ccd:	mov    rcx,QWORD PTR [rdx]
   140025cd0:	mov    r8,QWORD PTR [rcx]
   140025cd3:	call   QWORD PTR [r8+0x8]
   140025cd7:	movzx  eax,sil
   140025cdb:	mov    rbx,QWORD PTR [rsp+0x70]
   140025ce0:	mov    rbp,QWORD PTR [rsp+0x80]
   140025ce8:	add    rsp,0x50
   140025cec:	pop    r12
   140025cee:	pop    rdi
   140025cef:	pop    rsi
   140025cf0:	ret    
   140025cf1:	int3   
   140025cf2:	int3   
   140025cf3:	int3   
   140025cf4:	int3   
   140025cf5:	int3   
   140025cf6:	int3   
   140025cf7:	int3   
   140025cf8:	int3   
   140025cf9:	int3   
   140025cfa:	int3   
   140025cfb:	int3   
   140025cfc:	int3   
   140025cfd:	int3   
   140025cfe:	int3   
   140025cff:	int3   
   140025d00:	rex push rbp
   140025d02:	push   rsi
   140025d03:	push   rdi
   140025d04:	sub    rsp,0x40
   140025d08:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140025d11:	mov    QWORD PTR [rsp+0x68],rbx
   140025d16:	mov    ebx,r8d
   140025d19:	mov    esi,edx
   140025d1b:	mov    rdi,rcx
   140025d1e:	xor    bpl,bpl
   140025d21:	call   0x140022630
   140025d26:	test   ebx,ebx
   140025d28:	jns    0x140025d30
   140025d2a:	mov    ebx,DWORD PTR [rdi+0xda8]
   140025d30:	mov    rcx,rdi
   140025d33:	call   0x140025fc0
   140025d38:	lea    rcx,[rdi+0xcb8]
   140025d3f:	xor    r9d,r9d
   140025d42:	mov    r8d,esi
   140025d45:	mov    edx,ebx
   140025d47:	call   0x14002ddc0
   140025d4c:	test   rax,rax
   140025d4f:	je     0x140025de7
   140025d55:	lea    rcx,[rip+0x609fc]        # 0x140086758
   140025d5c:	mov    rax,QWORD PTR [rip+0x609f5]        # 0x140086758
   140025d63:	call   QWORD PTR [rax+0x18]
   140025d66:	add    rax,0x18
   140025d6a:	mov    QWORD PTR [rsp+0x60],rax
   140025d6f:	mov    r8d,ebx
   140025d72:	lea    rdx,[rip+0x4a877]        # 0x1400705f0
   140025d79:	lea    rcx,[rsp+0x60]
   140025d7e:	call   0x140015180
   140025d83:	mov    DWORD PTR [rsp+0x70],esi
   140025d87:	mov    DWORD PTR [rsp+0x28],0x4
   140025d8f:	lea    rax,[rsp+0x70]
   140025d94:	mov    QWORD PTR [rsp+0x20],rax
   140025d99:	mov    r9d,0x4
   140025d9f:	xor    r8d,r8d
   140025da2:	mov    rbx,QWORD PTR [rsp+0x60]
   140025da7:	mov    rdx,rbx
   140025daa:	mov    rcx,QWORD PTR [rdi+0xc18]
   140025db1:	call   QWORD PTR [rip+0x42289]        # 0x140068040
   140025db7:	movzx  edi,bpl
   140025dbb:	mov    ecx,0x1
   140025dc0:	test   eax,eax
   140025dc2:	cmove  edi,ecx
   140025dc5:	lea    rdx,[rbx-0x18]
   140025dc9:	or     ecx,0xffffffff
   140025dcc:	lock xadd DWORD PTR [rdx+0x10],ecx
   140025dd1:	dec    ecx
   140025dd3:	test   ecx,ecx
   140025dd5:	jg     0x140025de1
   140025dd7:	mov    rcx,QWORD PTR [rdx]
   140025dda:	mov    r8,QWORD PTR [rcx]
   140025ddd:	call   QWORD PTR [r8+0x8]
   140025de1:	movzx  eax,dil
   140025de5:	jmp    0x140025deb
   140025de7:	movzx  eax,bpl
   140025deb:	mov    rbx,QWORD PTR [rsp+0x68]
   140025df0:	add    rsp,0x40
   140025df4:	pop    rdi
   140025df5:	pop    rsi
   140025df6:	pop    rbp
   140025df7:	ret    
   140025df8:	int3   
   140025df9:	int3   
   140025dfa:	int3   
   140025dfb:	int3   
   140025dfc:	int3   
   140025dfd:	int3   
   140025dfe:	int3   
   140025dff:	int3   
   140025e00:	rex push rdi
   140025e02:	push   r12
   140025e04:	push   r13
   140025e06:	push   r14
   140025e08:	push   r15
   140025e0a:	sub    rsp,0x40
   140025e0e:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140025e17:	mov    QWORD PTR [rsp+0x70],rbx
   140025e1c:	mov    QWORD PTR [rsp+0x78],rbp
   140025e21:	mov    QWORD PTR [rsp+0x80],rsi
   140025e29:	mov    r15d,r9d
   140025e2c:	mov    ebp,r8d
   140025e2f:	mov    r12d,edx
   140025e32:	mov    r13,rcx
   140025e35:	xor    ebx,ebx
   140025e37:	test   edx,edx
   140025e39:	js     0x140025f8e
   140025e3f:	test   r8d,r8d
   140025e42:	js     0x140025f8e
   140025e48:	movzx  esi,r8w
   140025e4c:	shl    esi,0x10
   140025e4f:	movzx  eax,dx
   140025e52:	or     esi,eax
   140025e54:	xor    edx,edx
   140025e56:	mov    eax,esi
   140025e58:	div    DWORD PTR [rcx+0xe08]
   140025e5e:	mov    rcx,QWORD PTR [rcx+0xdf8]
   140025e65:	test   rcx,rcx
   140025e68:	je     0x140025e8b
   140025e6a:	mov    rax,QWORD PTR [rcx+rdx*8]
   140025e6e:	test   rax,rax
   140025e71:	je     0x140025e8b
   140025e73:	cmp    DWORD PTR [rax+0x18],esi
   140025e76:	jne    0x140025e7c
   140025e78:	cmp    DWORD PTR [rax],esi
   140025e7a:	je     0x140025e82
   140025e7c:	mov    rax,QWORD PTR [rax+0x10]
   140025e80:	jmp    0x140025e6e
   140025e82:	mov    rax,QWORD PTR [rax+0x8]
   140025e86:	jmp    0x140025f91
   140025e8b:	lea    rcx,[rip+0x608c6]        # 0x140086758
   140025e92:	mov    rax,QWORD PTR [rip+0x608bf]        # 0x140086758
   140025e99:	call   QWORD PTR [rax+0x18]
   140025e9c:	add    rax,0x18
   140025ea0:	mov    QWORD PTR [rsp+0x30],rax
   140025ea5:	mov    QWORD PTR [rsp+0x20],rbx
   140025eaa:	mov    r9d,ebp
   140025ead:	mov    r8d,r12d
   140025eb0:	mov    rdx,QWORD PTR [r13+0xc90]
   140025eb7:	lea    rcx,[rsp+0x30]
   140025ebc:	call   0x140015180
   140025ec1:	mov    ecx,0x18
   140025ec6:	call   0x1400331a0
   140025ecb:	mov    rdi,rax
   140025ece:	test   rax,rax
   140025ed1:	je     0x140025ee7
   140025ed3:	lea    rax,[rip+0x514e6]        # 0x1400773c0
   140025eda:	mov    QWORD PTR [rdi],rax
   140025edd:	mov    QWORD PTR [rdi+0x8],rbx
   140025ee1:	mov    QWORD PTR [rdi+0x10],rbx
   140025ee5:	jmp    0x140025eea
   140025ee7:	mov    rdi,rbx
   140025eea:	mov    rbx,QWORD PTR [rsp+0x30]
   140025eef:	cmp    DWORD PTR [rbx-0x10],0x0
   140025ef3:	je     0x140025f59
   140025ef5:	mov    ecx,DWORD PTR [r13+0xc64]
   140025efc:	mov    eax,ecx
   140025efe:	and    eax,0x2
   140025f01:	cmp    al,0x2
   140025f03:	jne    0x140025f0d
   140025f05:	mov    r9d,0x200
   140025f0b:	jmp    0x140025f1f
   140025f0d:	and    cl,0x4
   140025f10:	xor    r9d,r9d
   140025f13:	mov    eax,0x100
   140025f18:	cmp    cl,0x4
   140025f1b:	cmove  r9d,eax
   140025f1f:	mov    r8d,r15d
   140025f22:	mov    rdx,rbx
   140025f25:	mov    rcx,rdi
   140025f28:	call   0x140031480
   140025f2d:	test   eax,eax
   140025f2f:	je     0x140025f59
   140025f31:	xor    r9d,r9d
   140025f34:	mov    r8d,ebp
   140025f37:	mov    edx,r12d
   140025f3a:	mov    rcx,r13
   140025f3d:	call   0x140026380
   140025f42:	mov    QWORD PTR [rdi+0x10],rax
   140025f46:	mov    edx,esi
   140025f48:	lea    rcx,[r13+0xdf8]
   140025f4f:	call   0x140028b80
   140025f54:	mov    QWORD PTR [rax],rdi
   140025f57:	jmp    0x140025f6d
   140025f59:	test   rdi,rdi
   140025f5c:	je     0x140025f6b
   140025f5e:	mov    rax,QWORD PTR [rdi]
   140025f61:	mov    edx,0x1
   140025f66:	mov    rcx,rdi
   140025f69:	call   QWORD PTR [rax]
   140025f6b:	xor    edi,edi
   140025f6d:	lea    rdx,[rbx-0x18]
   140025f71:	or     ecx,0xffffffff
   140025f74:	lock xadd DWORD PTR [rdx+0x10],ecx
   140025f79:	dec    ecx
   140025f7b:	test   ecx,ecx
   140025f7d:	jg     0x140025f89
   140025f7f:	mov    rcx,QWORD PTR [rdx]
   140025f82:	mov    r8,QWORD PTR [rcx]
   140025f85:	call   QWORD PTR [r8+0x8]
   140025f89:	mov    rax,rdi
   140025f8c:	jmp    0x140025f91
   140025f8e:	mov    rax,rbx
   140025f91:	mov    rbx,QWORD PTR [rsp+0x70]
   140025f96:	mov    rbp,QWORD PTR [rsp+0x78]
   140025f9b:	mov    rsi,QWORD PTR [rsp+0x80]
   140025fa3:	add    rsp,0x40
   140025fa7:	pop    r15
   140025fa9:	pop    r14
   140025fab:	pop    r13
   140025fad:	pop    r12
   140025faf:	pop    rdi
   140025fb0:	ret    
   140025fb1:	int3   
   140025fb2:	int3   
   140025fb3:	int3   
   140025fb4:	int3   
   140025fb5:	int3   
   140025fb6:	int3   
   140025fb7:	int3   
   140025fb8:	int3   
   140025fb9:	int3   
   140025fba:	int3   
   140025fbb:	int3   
   140025fbc:	int3   
   140025fbd:	int3   
   140025fbe:	int3   
   140025fbf:	int3   
   140025fc0:	mov    rax,rsp
   140025fc3:	push   rbp
   140025fc4:	push   r12
   140025fc6:	push   r13
   140025fc8:	push   r14
   140025fca:	push   r15
   140025fcc:	lea    rbp,[rax-0xc8]
   140025fd3:	sub    rsp,0x1a0
   140025fda:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140025fe3:	mov    QWORD PTR [rax+0x10],rbx
   140025fe7:	mov    QWORD PTR [rax+0x18],rsi
   140025feb:	mov    QWORD PTR [rax+0x20],rdi
   140025fef:	mov    rax,QWORD PTR [rip+0x5f0b2]        # 0x1400850a8
   140025ff6:	xor    rax,rsp
   140025ff9:	mov    QWORD PTR [rbp+0x90],rax
   140026000:	mov    r12,rcx
   140026003:	mov    dl,0x1
   140026005:	mov    rax,QWORD PTR [rcx+0xd60]
   14002600c:	mov    rcx,QWORD PTR [rcx+0xd68]
   140026013:	cmp    rax,rcx
   140026016:	je     0x140026061
   140026018:	mov    r8,QWORD PTR [rax]
   14002601b:	test   r8,r8
   14002601e:	je     0x140026054
   140026020:	mov    rdx,QWORD PTR [r8+0xc8]
   140026027:	sub    rdx,QWORD PTR [r8+0xc0]
   14002602e:	test   rdx,0xfffffffffffffffc
   140026035:	jne    0x140026052
   140026037:	mov    rdx,QWORD PTR [r8+0x108]
   14002603e:	sub    rdx,QWORD PTR [r8+0x100]
   140026045:	test   rdx,0xfffffffffffffffc
   14002604c:	jne    0x140026052
   14002604e:	mov    dl,0x1
   140026050:	jmp    0x140026054
   140026052:	xor    dl,dl
   140026054:	add    rax,0x8
   140026058:	test   dl,dl
   14002605a:	jne    0x140026013
   14002605c:	jmp    0x14002634e
   140026061:	test   dl,dl
   140026063:	je     0x14002634e
   140026069:	lea    r15,[rip+0x51350]        # 0x1400773c0
   140026070:	mov    QWORD PTR [rsp+0x48],r15
   140026075:	xor    r13d,r13d
   140026078:	mov    QWORD PTR [rsp+0x58],r13
   14002607d:	mov    ecx,DWORD PTR [r12+0xc64]
   140026085:	mov    eax,ecx
   140026087:	and    eax,0x2
   14002608a:	mov    edi,0x200
   14002608f:	mov    r14d,0x100
   140026095:	cmp    al,0x2
   140026097:	jne    0x14002609e
   140026099:	mov    r9d,edi
   14002609c:	jmp    0x1400260ab
   14002609e:	and    cl,0x4
   1400260a1:	mov    r9d,r13d
   1400260a4:	cmp    cl,0x4
   1400260a7:	cmove  r9d,r14d
   1400260ab:	mov    QWORD PTR [rsp+0x50],r13
   1400260b0:	or     r9d,0x20017
   1400260b7:	lea    rax,[rsp+0x50]
   1400260bc:	mov    QWORD PTR [rsp+0x20],rax
   1400260c1:	xor    r8d,r8d
   1400260c4:	mov    rdx,QWORD PTR [r12+0xc88]
   1400260cc:	mov    rcx,0xffffffff80000002
   1400260d3:	call   QWORD PTR [rip+0x41f77]        # 0x140068050
   1400260d9:	test   eax,eax
   1400260db:	sete   al
   1400260de:	test   al,al
   1400260e0:	jne    0x1400261f5
   1400260e6:	lea    rcx,[rip+0x6066b]        # 0x140086758
   1400260ed:	mov    rax,QWORD PTR [rip+0x60664]        # 0x140086758
   1400260f4:	call   QWORD PTR [rax+0x18]
   1400260f7:	lea    rbx,[rax+0x18]
   1400260fb:	mov    QWORD PTR [rsp+0x68],rbx
   140026100:	mov    ecx,0x1
   140026105:	sub    ecx,DWORD PTR [rbx-0x8]
   140026108:	mov    eax,DWORD PTR [rbx-0xc]
   14002610b:	sub    eax,0x104
   140026110:	or     eax,ecx
   140026112:	jge    0x140026128
   140026114:	mov    edx,0x104
   140026119:	lea    rcx,[rsp+0x68]
   14002611e:	call   0x140008df0
   140026123:	mov    rbx,QWORD PTR [rsp+0x68]
   140026128:	mov    r8,rbx
   14002612b:	xor    edx,edx
   14002612d:	mov    ecx,DWORD PTR [r12+0xc60]
   140026135:	call   0x140049b60
   14002613a:	movsxd rdx,DWORD PTR [rbx-0xc]
   14002613e:	mov    rcx,rbx
   140026141:	call   0x1400345f8
   140026146:	test   eax,eax
   140026148:	js     0x1400261ea
   14002614e:	cmp    eax,DWORD PTR [rbx-0xc]
   140026151:	jg     0x1400261ea
   140026157:	mov    DWORD PTR [rbx-0x10],eax
   14002615a:	cdqe   
   14002615c:	mov    BYTE PTR [rax+rbx*1],0x0
   140026160:	mov    ecx,DWORD PTR [r12+0xc64]
   140026168:	mov    eax,ecx
   14002616a:	and    eax,0x2
   14002616d:	cmp    al,0x2
   14002616f:	je     0x14002617e
   140026171:	and    cl,0x4
   140026174:	mov    edi,r13d
   140026177:	cmp    cl,0x4
   14002617a:	cmove  edi,r14d
   14002617e:	mov    rcx,QWORD PTR [rsp+0x50]
   140026183:	test   rcx,rcx
   140026186:	je     0x140026193
   140026188:	call   QWORD PTR [rip+0x41eba]        # 0x140068048
   14002618e:	mov    QWORD PTR [rsp+0x58],r13
   140026193:	mov    QWORD PTR [rsp+0x50],r13
   140026198:	or     edi,0x20017
   14002619e:	lea    rax,[rsp+0x50]
   1400261a3:	mov    QWORD PTR [rsp+0x20],rax
   1400261a8:	mov    r9d,edi
   1400261ab:	xor    r8d,r8d
   1400261ae:	mov    rdx,rbx
   1400261b1:	mov    rcx,0xffffffff80000002
   1400261b8:	call   QWORD PTR [rip+0x41e92]        # 0x140068050
   1400261be:	test   eax,eax
   1400261c0:	sete   dil
   1400261c4:	lea    rdx,[rbx-0x18]
   1400261c8:	or     eax,0xffffffff
   1400261cb:	lock xadd DWORD PTR [rdx+0x10],eax
   1400261d0:	dec    eax
   1400261d2:	test   eax,eax
   1400261d4:	jg     0x1400261df
   1400261d6:	mov    rcx,QWORD PTR [rdx]
   1400261d9:	mov    rax,QWORD PTR [rcx]
   1400261dc:	call   QWORD PTR [rax+0x8]
   1400261df:	test   dil,dil
   1400261e2:	je     0x140026339
   1400261e8:	jmp    0x1400261f5
   1400261ea:	mov    ecx,0x80070057
   1400261ef:	call   0x1400025f0
   1400261f4:	nop
   1400261f5:	lea    rcx,[r12+0xcb8]
   1400261fd:	call   0x14002d9f0
   140026202:	mov    edi,r13d
   140026205:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026210:	mov    BYTE PTR [rbp-0x80],0x0
   140026214:	xor    edx,edx
   140026216:	mov    r8d,0x103
   14002621c:	lea    rcx,[rbp-0x7f]
   140026220:	call   0x140036dc0
   140026225:	mov    DWORD PTR [rsp+0x60],0x104
   14002622d:	mov    DWORD PTR [rsp+0x40],r13d
   140026232:	lea    rax,[rsp+0x40]
   140026237:	mov    QWORD PTR [rsp+0x38],rax
   14002623c:	mov    QWORD PTR [rsp+0x30],r13
   140026241:	mov    QWORD PTR [rsp+0x28],r13
   140026246:	mov    QWORD PTR [rsp+0x20],r13
   14002624b:	lea    r9,[rsp+0x60]
   140026250:	lea    r8,[rbp-0x80]
   140026254:	mov    edx,edi
   140026256:	mov    rcx,QWORD PTR [rsp+0x50]
   14002625b:	call   QWORD PTR [rip+0x41da7]        # 0x140068008
   140026261:	cmp    DWORD PTR [rsp+0x40],0x0
   140026266:	jbe    0x140026339
   14002626c:	mov    r8d,0xd
   140026272:	lea    rdx,[rip+0x4a367]        # 0x1400705e0
   140026279:	lea    rcx,[rbp-0x80]
   14002627d:	call   0x140035680
   140026282:	test   eax,eax
   140026284:	jne    0x140026332
   14002628a:	mov    ecx,DWORD PTR [rsp+0x40]
   14002628e:	call   0x140032de8
   140026293:	mov    rbx,rax
   140026296:	mov    DWORD PTR [rsp+0x40],r13d
   14002629b:	lea    rax,[rsp+0x40]
   1400262a0:	mov    QWORD PTR [rsp+0x28],rax
   1400262a5:	mov    QWORD PTR [rsp+0x20],r13
   1400262aa:	lea    r9,[rsp+0x64]
   1400262af:	xor    r8d,r8d
   1400262b2:	lea    rdx,[rbp-0x80]
   1400262b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400262bb:	call   QWORD PTR [rip+0x41d97]        # 0x140068058
   1400262c1:	mov    r8d,DWORD PTR [rsp+0x40]
   1400262c6:	test   r8d,r8d
   1400262c9:	je     0x1400262fb
   1400262cb:	test   rbx,rbx
   1400262ce:	je     0x1400262fb
   1400262d0:	lea    rax,[rsp+0x40]
   1400262d5:	mov    QWORD PTR [rsp+0x28],rax
   1400262da:	mov    QWORD PTR [rsp+0x20],rbx
   1400262df:	lea    r9,[rsp+0x64]
   1400262e4:	xor    r8d,r8d
   1400262e7:	lea    rdx,[rbp-0x80]
   1400262eb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400262f0:	call   QWORD PTR [rip+0x41d62]        # 0x140068058
   1400262f6:	mov    r8d,DWORD PTR [rsp+0x40]
   1400262fb:	xor    r9d,r9d
   1400262fe:	mov    rdx,rbx
   140026301:	lea    rcx,[r12+0xcb8]
   140026309:	call   0x14002ced0
   14002630e:	test   al,al
   140026310:	jne    0x14002632a
   140026312:	xor    r9d,r9d
   140026315:	mov    r8d,DWORD PTR [rsp+0x40]
   14002631a:	mov    rdx,rbx
   14002631d:	lea    rcx,[r12+0xcb8]
   140026325:	call   0x14002d1d0
   14002632a:	mov    rcx,rbx
   14002632d:	call   0x1400336a0
   140026332:	inc    edi
   140026334:	jmp    0x140026210
   140026339:	mov    QWORD PTR [rsp+0x48],r15
   14002633e:	mov    rcx,QWORD PTR [rsp+0x50]
   140026343:	test   rcx,rcx
   140026346:	je     0x14002634e
   140026348:	call   QWORD PTR [rip+0x41cfa]        # 0x140068048
   14002634e:	mov    rcx,QWORD PTR [rbp+0x90]
   140026355:	xor    rcx,rsp
   140026358:	call   0x140032f00
   14002635d:	lea    r11,[rsp+0x1a0]
   140026365:	mov    rbx,QWORD PTR [r11+0x38]
   140026369:	mov    rsi,QWORD PTR [r11+0x40]
   14002636d:	mov    rdi,QWORD PTR [r11+0x48]
   140026371:	mov    rsp,r11
   140026374:	pop    r15
   140026376:	pop    r14
   140026378:	pop    r13
   14002637a:	pop    r12
   14002637c:	pop    rbp
   14002637d:	ret    
   14002637e:	int3   
   14002637f:	int3   
   140026380:	mov    QWORD PTR [rsp+0x8],rbx
   140026385:	mov    QWORD PTR [rsp+0x10],rbp
   14002638a:	mov    QWORD PTR [rsp+0x18],rsi
   14002638f:	push   rdi
   140026390:	sub    rsp,0x20
   140026394:	mov    edi,r9d
   140026397:	mov    esi,r8d
   14002639a:	mov    ebp,edx
   14002639c:	mov    rbx,rcx
   14002639f:	call   0x140025fc0
   1400263a4:	lea    rcx,[rbx+0xcb8]
   1400263ab:	mov    r9d,edi
   1400263ae:	mov    r8d,esi
   1400263b1:	mov    edx,ebp
   1400263b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400263b8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400263bd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400263c2:	add    rsp,0x20
   1400263c6:	pop    rdi
   1400263c7:	jmp    0x14002ddc0
   1400263cc:	int3   
   1400263cd:	int3   
   1400263ce:	int3   
   1400263cf:	int3   
   1400263d0:	mov    rax,rsp
   1400263d3:	push   rbp
   1400263d4:	push   rdi
   1400263d5:	push   r12
   1400263d7:	lea    rbp,[rax-0xa8]
   1400263de:	sub    rsp,0x190
   1400263e5:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400263ee:	mov    QWORD PTR [rax+0x10],rbx
   1400263f2:	mov    QWORD PTR [rax+0x20],rsi
   1400263f6:	mov    rax,QWORD PTR [rip+0x5ecab]        # 0x1400850a8
   1400263fd:	xor    rax,rsp
   140026400:	mov    QWORD PTR [rbp+0x80],rax
   140026407:	mov    edi,r9d
   14002640a:	mov    rsi,r8
   14002640d:	mov    rbx,rcx
   140026410:	test   rdx,rdx
   140026413:	jne    0x14002641a
   140026415:	call   0x140025fc0
   14002641a:	xor    r12d,r12d
   14002641d:	mov    DWORD PTR [rsp+0x30],r12d
   140026422:	mov    rax,QWORD PTR [rbx]
   140026425:	lea    r9,[rsp+0x30]
   14002642a:	mov    r8d,DWORD PTR [rbx+0xdac]
   140026431:	mov    edx,DWORD PTR [rbx+0xda8]
   140026437:	mov    rcx,rbx
   14002643a:	call   QWORD PTR [rax+0xe8]
   140026440:	lea    r11,[rip+0x4a751]        # 0x140070b98
   140026447:	mov    QWORD PTR [rsp+0x40],r11
   14002644c:	mov    QWORD PTR [rsp+0x60],0xf
   140026455:	mov    QWORD PTR [rsp+0x58],r12
   14002645a:	mov    BYTE PTR [rsp+0x48],r12b
   14002645f:	mov    QWORD PTR [rbp-0x78],0xf
   140026467:	mov    QWORD PTR [rbp-0x80],r12
   14002646b:	mov    BYTE PTR [rsp+0x70],r12b
   140026470:	mov    QWORD PTR [rbp-0x50],0xf
   140026478:	mov    QWORD PTR [rbp-0x58],r12
   14002647c:	mov    BYTE PTR [rbp-0x68],r12b
   140026480:	mov    QWORD PTR [rbp-0x28],0xf
   140026488:	mov    QWORD PTR [rbp-0x30],r12
   14002648c:	mov    BYTE PTR [rbp-0x40],r12b
   140026490:	mov    QWORD PTR [rbp+0x0],r12
   140026494:	mov    QWORD PTR [rbp+0x8],r12
   140026498:	mov    QWORD PTR [rbp+0x10],r12
   14002649c:	mov    QWORD PTR [rbp+0x20],r12
   1400264a0:	mov    QWORD PTR [rbp+0x28],r12
   1400264a4:	mov    QWORD PTR [rbp+0x30],r12
   1400264a8:	mov    QWORD PTR [rbp+0x40],r12
   1400264ac:	mov    QWORD PTR [rbp+0x48],r12
   1400264b0:	mov    QWORD PTR [rbp+0x50],r12
   1400264b4:	mov    QWORD PTR [rbp+0x60],r12
   1400264b8:	mov    QWORD PTR [rbp+0x68],r12
   1400264bc:	mov    QWORD PTR [rbp+0x70],r12
   1400264c0:	mov    QWORD PTR [rbp-0x18],0xffffffffffffffff
   1400264c8:	mov    DWORD PTR [rbp-0xc],r12d
   1400264cc:	mov    WORD PTR [rbp-0x10],r12w
   1400264d1:	mov    BYTE PTR [rbp-0x8],r12b
   1400264d5:	lea    rcx,[rbx+0xcb8]
   1400264dc:	lea    rax,[rsp+0x40]
   1400264e1:	mov    QWORD PTR [rsp+0x20],rax
   1400264e6:	mov    r9d,DWORD PTR [rsp+0x30]
   1400264eb:	mov    r8d,DWORD PTR [rbx+0xdac]
   1400264f2:	mov    edx,DWORD PTR [rbx+0xda8]
   1400264f8:	call   0x14002deb0
   1400264fd:	lea    r8,[rbx+0xc10]
   140026504:	mov    DWORD PTR [rsp+0x20],edi
   140026508:	lea    r9,[rsp+0x40]
   14002650d:	mov    rdx,rsi
   140026510:	mov    rcx,rbx
   140026513:	call   0x140023b60
   140026518:	nop
   140026519:	lea    rcx,[rsp+0x40]
   14002651e:	call   0x14002c800
   140026523:	lea    eax,[r12+0x1]
   140026528:	mov    rcx,QWORD PTR [rbp+0x80]
   14002652f:	xor    rcx,rsp
   140026532:	call   0x140032f00
   140026537:	lea    r11,[rsp+0x190]
   14002653f:	mov    rbx,QWORD PTR [r11+0x28]
   140026543:	mov    rsi,QWORD PTR [r11+0x38]
   140026547:	mov    rsp,r11
   14002654a:	pop    r12
   14002654c:	pop    rdi
   14002654d:	pop    rbp
   14002654e:	ret    
   14002654f:	int3   
   140026550:	mov    QWORD PTR [rsp+0x8],rbx
   140026555:	mov    QWORD PTR [rsp+0x10],rbp
   14002655a:	mov    QWORD PTR [rsp+0x18],rsi
   14002655f:	push   rdi
   140026560:	sub    rsp,0x20
   140026564:	mov    rdi,r8
   140026567:	mov    rsi,rdx
   14002656a:	mov    rbx,rcx
   14002656d:	call   0x140025fc0
   140026572:	mov    rax,QWORD PTR [rbx+0xd68]
   140026579:	xor    r11d,r11d
   14002657c:	sub    rax,QWORD PTR [rbx+0xd60]
   140026583:	xor    r10d,r10d
   140026586:	xor    r9d,r9d
   140026589:	sar    rax,0x3
   14002658d:	xor    r8d,r8d
   140026590:	movsxd rbp,eax
   140026593:	test   eax,eax
   140026595:	jle    0x1400265e7
   140026597:	mov    rdx,QWORD PTR [rbx+0xd68]
   14002659e:	sub    rdx,QWORD PTR [rbx+0xd60]
   1400265a5:	sar    rdx,0x3
   1400265a9:	nop    DWORD PTR [rax+0x0]
   1400265b0:	xor    ecx,ecx
   1400265b2:	cmp    r9d,edx
   1400265b5:	jge    0x1400265c2
   1400265b7:	mov    rax,QWORD PTR [rbx+0xd60]
   1400265be:	mov    rcx,QWORD PTR [rax+r8*8]
   1400265c2:	mov    eax,DWORD PTR [rcx+0xa8]
   1400265c8:	cmp    eax,r11d
   1400265cb:	cmovg  r11d,eax
   1400265cf:	mov    eax,DWORD PTR [rcx+0xac]
   1400265d5:	cmp    eax,r10d
   1400265d8:	cmovg  r10d,eax
   1400265dc:	inc    r8
   1400265df:	inc    r9d
   1400265e2:	cmp    r8,rbp
   1400265e5:	jl     0x1400265b0
   1400265e7:	test   rsi,rsi
   1400265ea:	je     0x1400265f2
   1400265ec:	lea    eax,[r11+0x1]
   1400265f0:	mov    DWORD PTR [rsi],eax
   1400265f2:	test   rdi,rdi
   1400265f5:	je     0x1400265fd
   1400265f7:	lea    eax,[r10+0x1]
   1400265fb:	mov    DWORD PTR [rdi],eax
   1400265fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140026602:	mov    rbp,QWORD PTR [rsp+0x38]
   140026607:	mov    rsi,QWORD PTR [rsp+0x40]
   14002660c:	mov    al,0x1
   14002660e:	add    rsp,0x20
   140026612:	pop    rdi
   140026613:	ret    
   140026614:	int3   
   140026615:	int3   
   140026616:	int3   
   140026617:	int3   
   140026618:	int3   
   140026619:	int3   
   14002661a:	int3   
   14002661b:	int3   
   14002661c:	int3   
   14002661d:	int3   
   14002661e:	int3   
   14002661f:	int3   
   140026620:	rex push rsi
   140026622:	sub    rsp,0x1e0
   140026629:	mov    rax,QWORD PTR [rip+0x5ea78]        # 0x1400850a8
   140026630:	xor    rax,rsp
   140026633:	mov    QWORD PTR [rsp+0x1c0],rax
   14002663b:	cmp    QWORD PTR [rcx+0xdb0],0x0
   140026643:	mov    rsi,rcx
   140026646:	jne    0x1400266b3
   140026648:	mov    r8d,DWORD PTR [rcx+0xc60]
   14002664f:	lea    rdx,[rip+0x49fba]        # 0x140070610
   140026656:	lea    rcx,[rsp+0x40]
   14002665b:	call   0x140028ed0
   140026660:	lea    r8,[rip+0x470e1]        # 0x14006d748
   140026667:	lea    rcx,[rsp+0xb0]
   14002666f:	mov    edx,0x104
   140026674:	call   0x1400336a8
   140026679:	lea    r8,[rsp+0x40]
   14002667e:	lea    rcx,[rsp+0xb0]
   140026686:	mov    edx,0x104
   14002668b:	call   0x1400330c8
   140026690:	xor    r8d,r8d
   140026693:	lea    rcx,[rsi+0x8d0]
   14002669a:	lea    edx,[r8+0x1]
   14002669e:	lea    r9,[rsp+0xb0]
   1400266a6:	call   QWORD PTR [rip+0x41cd4]        # 0x140068380
   1400266ac:	mov    QWORD PTR [rsi+0xdb0],rax
   1400266b3:	cmp    QWORD PTR [rsi+0xdd0],0x0
   1400266bb:	jne    0x140026728
   1400266bd:	mov    r8d,DWORD PTR [rsi+0xc60]
   1400266c4:	lea    rdx,[rip+0x49f65]        # 0x140070630
   1400266cb:	lea    rcx,[rsp+0x40]
   1400266d0:	call   0x140028ed0
   1400266d5:	lea    r8,[rip+0x4706c]        # 0x14006d748
   1400266dc:	lea    rcx,[rsp+0xb0]
   1400266e4:	mov    edx,0x104
   1400266e9:	call   0x1400336a8
   1400266ee:	lea    r8,[rsp+0x40]
   1400266f3:	lea    rcx,[rsp+0xb0]
   1400266fb:	mov    edx,0x104
   140026700:	call   0x1400330c8
   140026705:	xor    r8d,r8d
   140026708:	lea    rcx,[rsi+0x8d0]
   14002670f:	lea    edx,[r8+0x1]
   140026713:	lea    r9,[rsp+0xb0]
   14002671b:	call   QWORD PTR [rip+0x41c5f]        # 0x140068380
   140026721:	mov    QWORD PTR [rsi+0xdd0],rax
   140026728:	cmp    BYTE PTR [rsi+0xef0],0x0
   14002672f:	mov    QWORD PTR [rsp+0x1d8],r12
   140026737:	je     0x14002687a
   14002673d:	mov    rax,QWORD PTR [rsi+0x38]
   140026741:	lea    rcx,[rsi+0x38]
   140026745:	call   QWORD PTR [rax+0x30]
   140026748:	test   eax,eax
   14002674a:	jne    0x14002687a
   140026750:	cmp    DWORD PTR [rsi+0xc60],0xb
   140026757:	jne    0x1400267a3
   140026759:	mov    rax,QWORD PTR [rsi+0x38]
   14002675d:	lea    rcx,[rsi+0x38]
   140026761:	call   QWORD PTR [rax+0x28]
   140026764:	mov    rdx,QWORD PTR [rsi+0xc48]
   14002676b:	lea    rcx,[rsi+0x38]
   14002676f:	xor    r8d,r8d
   140026772:	call   0x140031960
   140026777:	test   eax,eax
   140026779:	jne    0x1400267a3
   14002677b:	mov    rdx,QWORD PTR [rsi+0xc50]
   140026782:	cmp    DWORD PTR [rdx-0x10],eax
   140026785:	je     0x14002687f
   14002678b:	mov    r8,QWORD PTR [rsi+0xc48]
   140026792:	lea    rcx,[rsi+0x38]
   140026796:	call   0x140031960
   14002679b:	test   eax,eax
   14002679d:	je     0x14002687f
   1400267a3:	mov    rax,QWORD PTR [rsi+0xc50]
   1400267aa:	mov    QWORD PTR [rsp+0x200],rbp
   1400267b2:	mov    QWORD PTR [rsp+0x1d0],r13
   1400267ba:	cmp    DWORD PTR [rax-0x8],0x1
   1400267be:	jle    0x1400267cf
   1400267c0:	mov    edx,DWORD PTR [rax-0x10]
   1400267c3:	lea    rcx,[rsi+0xc50]
   1400267ca:	call   0x140009430
   1400267cf:	mov    r13,QWORD PTR [rsi+0xc50]
   1400267d6:	or     ebp,0xffffffff
   1400267d9:	test   r13,r13
   1400267dc:	je     0x140026829
   1400267de:	mov    QWORD PTR [rsp+0x1f8],rbx
   1400267e6:	mov    QWORD PTR [rsp+0x208],rdi
   1400267ee:	xor    edi,edi
   1400267f0:	lea    rbx,[rip+0x61879]        # 0x140088070
   1400267f7:	cmp    edi,0x7
   1400267fa:	jae    0x140026819
   1400267fc:	mov    rdx,QWORD PTR [rbx+0x10]
   140026800:	mov    rcx,r13
   140026803:	call   0x1400338c4
   140026808:	test   eax,eax
   14002680a:	jne    0x14002680e
   14002680c:	mov    ebp,DWORD PTR [rbx]
   14002680e:	inc    edi
   140026810:	add    rbx,0x28
   140026814:	cmp    ebp,0xffffffff
   140026817:	je     0x1400267f7
   140026819:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140026821:	mov    rdi,QWORD PTR [rsp+0x208]
   140026829:	mov    r8d,DWORD PTR [rsi+0xc64]
   140026830:	mov    eax,DWORD PTR [rsi+0xc6c]
   140026836:	mov    rdx,QWORD PTR [rsi+0xc58]
   14002683d:	and    r8d,0x1
   140026841:	mov    DWORD PTR [rsp+0x38],ebp
   140026845:	mov    DWORD PTR [rsp+0x30],eax
   140026849:	mov    DWORD PTR [rsp+0x28],0x1000
   140026851:	mov    DWORD PTR [rsp+0x20],r8d
   140026856:	lea    rcx,[rsi+0x38]
   14002685a:	mov    r8d,0x2000
   140026860:	xor    r9d,r9d
   140026863:	call   0x140066880
   140026868:	mov    r13,QWORD PTR [rsp+0x1d0]
   140026870:	mov    rbp,QWORD PTR [rsp+0x200]
   140026878:	jmp    0x14002687f
   14002687a:	mov    eax,0x1
   14002687f:	mov    r12,QWORD PTR [rsp+0x1d8]
   140026887:	mov    rcx,QWORD PTR [rsp+0x1c0]
   14002688f:	xor    rcx,rsp
   140026892:	call   0x140032f00
   140026897:	add    rsp,0x1e0
   14002689e:	pop    rsi
   14002689f:	ret    
   1400268a0:	sub    rsp,0x38
   1400268a4:	mov    eax,r8d
   1400268a7:	sub    eax,0x4be
   1400268ac:	je     0x1400268e8
   1400268ae:	dec    eax
   1400268b0:	je     0x1400268c6
   1400268b2:	mov    rax,QWORD PTR [rsp+0x60]
   1400268b7:	mov    QWORD PTR [rsp+0x20],rax
   1400268bc:	call   0x140012a90
   1400268c1:	add    rsp,0x38
   1400268c5:	ret    
   1400268c6:	mov    rdx,QWORD PTR [rcx+0xdd8]
   1400268cd:	test   rdx,rdx
   1400268d0:	je     0x140026921
   1400268d2:	mov    r8,QWORD PTR [rcx+0xde0]
   1400268d9:	xorpd  xmm1,xmm1
   1400268dd:	xor    ecx,ecx
   1400268df:	call   rdx
   1400268e1:	xor    eax,eax
   1400268e3:	add    rsp,0x38
   1400268e7:	ret    
   1400268e8:	mov    QWORD PTR [rsp+0x30],rbx
   1400268ed:	lea    rbx,[rcx-0x8]
   1400268f1:	cmp    QWORD PTR [rbx+0xdc0],0x0
   1400268f9:	je     0x14002691c
   1400268fb:	mov    rcx,rbx
   1400268fe:	call   0x140022630
   140026903:	mov    r8,QWORD PTR [rbx+0xdc8]
   14002690a:	mov    edx,DWORD PTR [rbx+0xdac]
   140026910:	mov    ecx,DWORD PTR [rbx+0xda8]
   140026916:	call   QWORD PTR [rbx+0xdc0]
   14002691c:	mov    rbx,QWORD PTR [rsp+0x30]
   140026921:	xor    eax,eax
   140026923:	add    rsp,0x38
   140026927:	ret    
   140026928:	int3   
   140026929:	int3   
   14002692a:	int3   
   14002692b:	int3   
   14002692c:	int3   
   14002692d:	int3   
   14002692e:	int3   
   14002692f:	int3   
   140026930:	rex push rbx
   140026932:	sub    rsp,0x50
   140026936:	cmp    DWORD PTR [rcx+0xdf0],0x0
   14002693d:	mov    rbx,rcx
   140026940:	jne    0x1400269f4
   140026946:	xor    eax,eax
   140026948:	xor    r9d,r9d
   14002694b:	lea    rcx,[rip+0x499be]        # 0x140070310
   140026952:	mov    QWORD PTR [rsp+0x38],rax
   140026957:	mov    QWORD PTR [rsp+0x40],rax
   14002695c:	mov    QWORD PTR [rsp+0x48],rax
   140026961:	lea    rax,[rip+0x49ce8]        # 0x140070650
   140026968:	lea    r8d,[r9+0x6]
   14002696c:	mov    edx,0x982
   140026971:	mov    QWORD PTR [rsp+0x28],rax
   140026976:	lea    rax,[rip+0x44b23]        # 0x14006b4a0
   14002697d:	mov    QWORD PTR [rsp+0x60],rdi
   140026982:	mov    QWORD PTR [rsp+0x20],rax
   140026987:	mov    DWORD PTR [rsp+0x30],0x8
   14002698f:	call   0x140003150
   140026994:	mov    rax,QWORD PTR [rbx+0x38]
   140026998:	lea    r8,[rsp+0x30]
   14002699d:	lea    rcx,[rbx+0x38]
   1400269a1:	mov    r9d,0x20
   1400269a7:	mov    edx,0x12c
   1400269ac:	call   QWORD PTR [rax+0x8]
   1400269af:	test   eax,eax
   1400269b1:	je     0x1400269ef
   1400269b3:	mov    rax,QWORD PTR [rbx+0x38]
   1400269b7:	lea    rcx,[rbx+0x38]
   1400269bb:	call   QWORD PTR [rax+0x10]
   1400269be:	xor    r9d,r9d
   1400269c1:	lea    rcx,[rip+0x49948]        # 0x140070310
   1400269c8:	mov    edx,DWORD PTR [rax+0x8]
   1400269cb:	lea    rax,[rip+0x49c96]        # 0x140070668
   1400269d2:	lea    r8d,[r9+0x6]
   1400269d6:	mov    DWORD PTR [rsp+0x28],edx
   1400269da:	mov    DWORD PTR [rbx+0xdf0],edx
   1400269e0:	mov    edx,0x98a
   1400269e5:	mov    QWORD PTR [rsp+0x20],rax
   1400269ea:	call   0x140003150
   1400269ef:	mov    rdi,QWORD PTR [rsp+0x60]
   1400269f4:	add    rsp,0x50
   1400269f8:	pop    rbx
   1400269f9:	ret    
   1400269fa:	int3   
   1400269fb:	int3   
   1400269fc:	int3   
   1400269fd:	int3   
   1400269fe:	int3   
   1400269ff:	int3   
   140026a00:	mov    QWORD PTR [rsp+0x10],rbx
   140026a05:	mov    QWORD PTR [rsp+0x18],rbp
   140026a0a:	mov    QWORD PTR [rsp+0x20],rsi
   140026a0f:	push   rdi
   140026a10:	sub    rsp,0x20
   140026a14:	lea    rbx,[rcx+0xf28]
   140026a1b:	mov    rdi,rcx
   140026a1e:	mov    esi,r8d
   140026a21:	mov    rax,QWORD PTR [rbx]
   140026a24:	mov    rcx,rbx
   140026a27:	mov    ebp,edx
   140026a29:	call   QWORD PTR [rax+0x18]
   140026a2c:	test   al,al
   140026a2e:	jne    0x140026a48
   140026a30:	mov    r9,QWORD PTR [rbx]
   140026a33:	mov    rdx,QWORD PTR [rdi+0xc58]
   140026a3a:	xor    r8d,r8d
   140026a3d:	mov    rcx,rbx
   140026a40:	call   QWORD PTR [r9+0x8]
   140026a44:	test   al,al
   140026a46:	je     0x140026a83
   140026a48:	mov    rax,QWORD PTR [rbx]
   140026a4b:	lea    r9,[rsp+0x30]
   140026a50:	mov    r8d,esi
   140026a53:	mov    edx,ebp
   140026a55:	mov    rcx,rbx
   140026a58:	mov    BYTE PTR [rsp+0x30],0x0
   140026a5d:	call   QWORD PTR [rax+0x20]
   140026a60:	movzx  ebx,al
   140026a63:	test   al,al
   140026a65:	je     0x140026a80
   140026a67:	cmp    BYTE PTR [rsp+0x30],0x0
   140026a6c:	je     0x140026a80
   140026a6e:	mov    rcx,QWORD PTR [rdi+0xdd0]
   140026a75:	test   rcx,rcx
   140026a78:	je     0x140026a80
   140026a7a:	call   QWORD PTR [rip+0x41978]        # 0x1400683f8
   140026a80:	movzx  eax,bl
   140026a83:	mov    rbx,QWORD PTR [rsp+0x38]
   140026a88:	mov    rbp,QWORD PTR [rsp+0x40]
   140026a8d:	mov    rsi,QWORD PTR [rsp+0x48]
   140026a92:	add    rsp,0x20
   140026a96:	pop    rdi
   140026a97:	ret    
   140026a98:	int3   
   140026a99:	int3   
   140026a9a:	int3   
   140026a9b:	int3   
   140026a9c:	int3   
   140026a9d:	int3   
   140026a9e:	int3   
   140026a9f:	int3   
   140026aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140026aa5:	mov    QWORD PTR [rsp+0x10],rbp
   140026aaa:	mov    QWORD PTR [rsp+0x18],rsi
   140026aaf:	push   rdi
   140026ab0:	sub    rsp,0x20
   140026ab4:	mov    rax,QWORD PTR [rcx+0xf28]
   140026abb:	mov    rbp,rcx
   140026abe:	add    rcx,0xf28
   140026ac5:	mov    rdi,r8
   140026ac8:	mov    esi,edx
   140026aca:	call   QWORD PTR [rax+0x18]
   140026acd:	test   al,al
   140026acf:	jne    0x140026af1
   140026ad1:	mov    r9,QWORD PTR [rbp+0xf28]
   140026ad8:	mov    rdx,QWORD PTR [rbp+0xc58]
   140026adf:	lea    rcx,[rbp+0xf28]
   140026ae6:	xor    r8d,r8d
   140026ae9:	call   QWORD PTR [r9+0x8]
   140026aed:	test   al,al
   140026aef:	je     0x140026b07
   140026af1:	mov    rax,QWORD PTR [rbp+0xf28]
   140026af8:	lea    rcx,[rbp+0xf28]
   140026aff:	mov    r8,rdi
   140026b02:	mov    edx,esi
   140026b04:	call   QWORD PTR [rax+0x28]
   140026b07:	mov    rbx,QWORD PTR [rsp+0x30]
   140026b0c:	mov    rbp,QWORD PTR [rsp+0x38]
   140026b11:	mov    rsi,QWORD PTR [rsp+0x40]
   140026b16:	add    rsp,0x20
   140026b1a:	pop    rdi
   140026b1b:	ret    
   140026b1c:	int3   
   140026b1d:	int3   
   140026b1e:	int3   
   140026b1f:	int3   
   140026b20:	mov    QWORD PTR [rsp+0x10],rbx
   140026b25:	mov    QWORD PTR [rsp+0x18],rbp
   140026b2a:	mov    QWORD PTR [rsp+0x20],rsi
   140026b2f:	push   rdi
   140026b30:	sub    rsp,0x20
   140026b34:	lea    rbx,[rcx+0xf28]
   140026b3b:	mov    rdi,rcx
   140026b3e:	mov    rsi,r8
   140026b41:	mov    rax,QWORD PTR [rbx]
   140026b44:	mov    rcx,rbx
   140026b47:	mov    ebp,edx
   140026b49:	call   QWORD PTR [rax+0x18]
   140026b4c:	test   al,al
   140026b4e:	jne    0x140026b68
   140026b50:	mov    r9,QWORD PTR [rbx]
   140026b53:	mov    rdx,QWORD PTR [rdi+0xc58]
   140026b5a:	xor    r8d,r8d
   140026b5d:	mov    rcx,rbx
   140026b60:	call   QWORD PTR [r9+0x8]
   140026b64:	test   al,al
   140026b66:	je     0x140026ba3
   140026b68:	mov    rax,QWORD PTR [rbx]
   140026b6b:	lea    r9,[rsp+0x30]
   140026b70:	mov    r8,rsi
   140026b73:	mov    edx,ebp
   140026b75:	mov    rcx,rbx
   140026b78:	mov    BYTE PTR [rsp+0x30],0x0
   140026b7d:	call   QWORD PTR [rax+0x30]
   140026b80:	movzx  ebx,al
   140026b83:	test   al,al
   140026b85:	je     0x140026ba0
   140026b87:	cmp    BYTE PTR [rsp+0x30],0x0
   140026b8c:	je     0x140026ba0
   140026b8e:	mov    rcx,QWORD PTR [rdi+0xdd0]
   140026b95:	test   rcx,rcx
   140026b98:	je     0x140026ba0
   140026b9a:	call   QWORD PTR [rip+0x41858]        # 0x1400683f8
   140026ba0:	movzx  eax,bl
   140026ba3:	mov    rbx,QWORD PTR [rsp+0x38]
   140026ba8:	mov    rbp,QWORD PTR [rsp+0x40]
   140026bad:	mov    rsi,QWORD PTR [rsp+0x48]
   140026bb2:	add    rsp,0x20
   140026bb6:	pop    rdi
   140026bb7:	ret    
   140026bb8:	int3   
   140026bb9:	int3   
   140026bba:	int3   
   140026bbb:	int3   
   140026bbc:	int3   
   140026bbd:	int3   
   140026bbe:	int3   
   140026bbf:	int3   
   140026bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140026bc5:	mov    QWORD PTR [rsp+0x10],rbp
   140026bca:	mov    QWORD PTR [rsp+0x18],rsi
   140026bcf:	mov    QWORD PTR [rsp+0x20],rdi
   140026bd4:	push   r12
   140026bd6:	sub    rsp,0x20
   140026bda:	mov    rax,QWORD PTR [rcx+0xf28]
   140026be1:	mov    rdi,rcx
   140026be4:	add    rcx,0xf28
   140026beb:	mov    esi,r9d
   140026bee:	mov    rbp,r8
   140026bf1:	mov    r12d,edx
   140026bf4:	call   QWORD PTR [rax+0x18]
   140026bf7:	test   al,al
   140026bf9:	jne    0x140026c1b
   140026bfb:	mov    r9,QWORD PTR [rdi+0xf28]
   140026c02:	mov    rdx,QWORD PTR [rdi+0xc58]
   140026c09:	lea    rcx,[rdi+0xf28]
   140026c10:	xor    r8d,r8d
   140026c13:	call   QWORD PTR [r9+0x8]
   140026c17:	test   al,al
   140026c19:	je     0x140026c35
   140026c1b:	mov    rax,QWORD PTR [rdi+0xf28]
   140026c22:	lea    rcx,[rdi+0xf28]
   140026c29:	mov    r9d,esi
   140026c2c:	mov    r8,rbp
   140026c2f:	mov    edx,r12d
   140026c32:	call   QWORD PTR [rax+0x38]
   140026c35:	mov    rbx,QWORD PTR [rsp+0x30]
   140026c3a:	mov    rbp,QWORD PTR [rsp+0x38]
   140026c3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140026c44:	mov    rdi,QWORD PTR [rsp+0x48]
   140026c49:	add    rsp,0x20
   140026c4d:	pop    r12
   140026c4f:	ret    
   140026c50:	mov    DWORD PTR [rsp+0x18],r8d
   140026c55:	push   rbp
   140026c56:	push   rsi
   140026c57:	push   rdi
   140026c58:	push   r12
   140026c5a:	push   r13
   140026c5c:	push   r14
   140026c5e:	push   r15
   140026c60:	lea    rbp,[rsp-0x1f]
   140026c65:	sub    rsp,0xb0
   140026c6c:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140026c74:	mov    QWORD PTR [rsp+0xf0],rbx
   140026c7c:	mov    r15d,r9d
   140026c7f:	mov    r12d,r8d
   140026c82:	mov    ebx,edx
   140026c84:	mov    r13,rcx
   140026c87:	mov    r14b,0x1
   140026c8a:	mov    DWORD PTR [rbp+0x67],r14d
   140026c8e:	call   0x140025fc0
   140026c93:	mov    rcx,r13
   140026c96:	call   0x140022630
   140026c9b:	cmp    ebx,0xffffffff
   140026c9e:	jne    0x140026ca7
   140026ca0:	mov    ebx,DWORD PTR [r13+0xda8]
   140026ca7:	cmp    r12d,0xffffffff
   140026cab:	jne    0x140026cb8
   140026cad:	mov    r12d,DWORD PTR [r13+0xdac]
   140026cb4:	mov    DWORD PTR [rbp+0x6f],r12d
   140026cb8:	xor    edi,edi
   140026cba:	mov    QWORD PTR [rbp-0x61],rdi
   140026cbe:	lea    ecx,[rdi+0x20]
   140026cc1:	call   0x1400331a0
   140026cc6:	test   rax,rax
   140026cc9:	je     0x140027092
   140026ccf:	mov    QWORD PTR [rbp-0x69],rax
   140026cd3:	mov    QWORD PTR [rax],rax
   140026cd6:	mov    rax,QWORD PTR [rbp-0x69]
   140026cda:	mov    QWORD PTR [rax+0x8],rax
   140026cde:	mov    rax,QWORD PTR [rbp-0x69]
   140026ce2:	mov    QWORD PTR [rax+0x10],rax
   140026ce6:	mov    rax,QWORD PTR [rbp-0x69]
   140026cea:	mov    BYTE PTR [rax+0x1c],0x1
   140026cee:	mov    rax,QWORD PTR [rbp-0x69]
   140026cf2:	mov    BYTE PTR [rax+0x1d],0x1
   140026cf6:	lea    r8,[rbp-0x71]
   140026cfa:	mov    edx,ebx
   140026cfc:	lea    rbx,[r13+0xcb8]
   140026d03:	mov    rcx,rbx
   140026d06:	call   0x14002df80
   140026d0b:	mov    rdi,QWORD PTR [rbp-0x69]
   140026d0f:	mov    rsi,QWORD PTR [rdi]
   140026d12:	cmp    rsi,rdi
   140026d15:	je     0x140026fb5
   140026d1b:	mov    r14d,DWORD PTR [rbp+0x7f]
   140026d1f:	nop
   140026d20:	xor    edi,edi
   140026d22:	mov    QWORD PTR [rbp-0x41],rdi
   140026d26:	lea    ecx,[rdi+0x20]
   140026d29:	call   0x1400331a0
   140026d2e:	test   rax,rax
   140026d31:	je     0x140026f88
   140026d37:	mov    QWORD PTR [rbp-0x49],rax
   140026d3b:	mov    QWORD PTR [rax],rax
   140026d3e:	mov    rax,QWORD PTR [rbp-0x49]
   140026d42:	mov    QWORD PTR [rax+0x8],rax
   140026d46:	mov    rax,QWORD PTR [rbp-0x49]
   140026d4a:	mov    QWORD PTR [rax+0x10],rax
   140026d4e:	mov    rax,QWORD PTR [rbp-0x49]
   140026d52:	mov    BYTE PTR [rax+0x1c],0x1
   140026d56:	mov    rax,QWORD PTR [rbp-0x49]
   140026d5a:	mov    BYTE PTR [rax+0x1d],0x1
   140026d5e:	lea    r9,[rbp-0x51]
   140026d62:	mov    r8d,r12d
   140026d65:	mov    edx,DWORD PTR [rsi+0x18]
   140026d68:	mov    rcx,rbx
   140026d6b:	call   0x14002e330
   140026d70:	mov    rdi,QWORD PTR [rbp-0x49]
   140026d74:	mov    rbx,QWORD PTR [rdi]
   140026d77:	cmp    rbx,rdi
   140026d7a:	je     0x140026e43
   140026d80:	mov    r12d,DWORD PTR [rbp+0x67]
   140026d84:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026d90:	xor    edi,edi
   140026d92:	mov    DWORD PTR [rbp+0x67],edi
   140026d95:	mov    rax,QWORD PTR [r13+0x0]
   140026d99:	lea    r9,[rbp+0x67]
   140026d9d:	mov    r8d,DWORD PTR [rbx+0x18]
   140026da1:	mov    edx,DWORD PTR [rsi+0x18]
   140026da4:	mov    rcx,r13
   140026da7:	call   QWORD PTR [rax+0xe8]
   140026dad:	test   al,al
   140026daf:	je     0x140026de3
   140026db1:	mov    r9d,r14d
   140026db4:	not    r9d
   140026db7:	mov    eax,DWORD PTR [rbp+0x67]
   140026dba:	and    r9d,eax
   140026dbd:	or     r9d,r15d
   140026dc0:	cmp    r9d,eax
   140026dc3:	je     0x140026de3
   140026dc5:	mov    rax,QWORD PTR [r13+0x0]
   140026dc9:	mov    r8d,DWORD PTR [rbx+0x18]
   140026dcd:	mov    edx,DWORD PTR [rsi+0x18]
   140026dd0:	mov    rcx,r13
   140026dd3:	call   QWORD PTR [rax+0xe0]
   140026dd9:	movzx  r12d,r12b
   140026ddd:	test   al,al
   140026ddf:	cmove  r12d,edi
   140026de3:	cmp    BYTE PTR [rbx+0x1d],dil
   140026de7:	jne    0x140026e2e
   140026de9:	mov    rax,QWORD PTR [rbx+0x10]
   140026ded:	cmp    BYTE PTR [rax+0x1d],dil
   140026df1:	jne    0x140026e0e
   140026df3:	mov    rbx,rax
   140026df6:	mov    rax,QWORD PTR [rax]
   140026df9:	cmp    BYTE PTR [rax+0x1d],dil
   140026dfd:	jne    0x140026e2e
   140026dff:	nop
   140026e00:	mov    rbx,rax
   140026e03:	mov    rax,QWORD PTR [rax]
   140026e06:	cmp    BYTE PTR [rax+0x1d],dil
   140026e0a:	je     0x140026e00
   140026e0c:	jmp    0x140026e2e
   140026e0e:	mov    rax,QWORD PTR [rbx+0x8]
   140026e12:	cmp    BYTE PTR [rax+0x1d],dil
   140026e16:	jne    0x140026e2b
   140026e18:	cmp    rbx,QWORD PTR [rax+0x10]
   140026e1c:	jne    0x140026e2b
   140026e1e:	mov    rbx,rax
   140026e21:	mov    rax,QWORD PTR [rax+0x8]
   140026e25:	cmp    BYTE PTR [rax+0x1d],dil
   140026e29:	je     0x140026e18
   140026e2b:	mov    rbx,rax
   140026e2e:	mov    rdi,QWORD PTR [rbp-0x49]
   140026e32:	cmp    rbx,rdi
   140026e35:	jne    0x140026d90
   140026e3b:	mov    DWORD PTR [rbp+0x67],r12d
   140026e3f:	mov    r12d,DWORD PTR [rbp+0x6f]
   140026e43:	mov    rbx,QWORD PTR [rdi]
   140026e46:	cmp    rbx,rbx
   140026e49:	jne    0x140026ea6
   140026e4b:	mov    r12,QWORD PTR [rdi+0x8]
   140026e4f:	mov    rbx,r12
   140026e52:	cmp    BYTE PTR [r12+0x1d],0x0
   140026e58:	jne    0x140026e85
   140026e5a:	nop    WORD PTR [rax+rax*1+0x0]
   140026e60:	mov    rdx,QWORD PTR [rbx+0x10]
   140026e64:	lea    rcx,[rbp-0x51]
   140026e68:	call   0x140028a70
   140026e6d:	mov    rbx,QWORD PTR [rbx]
   140026e70:	mov    rcx,r12
   140026e73:	call   0x1400330c0
   140026e78:	mov    r12,rbx
   140026e7b:	cmp    BYTE PTR [rbx+0x1d],0x0
   140026e7f:	je     0x140026e60
   140026e81:	mov    rdi,QWORD PTR [rbp-0x49]
   140026e85:	mov    QWORD PTR [rdi+0x8],rdi
   140026e89:	mov    rax,QWORD PTR [rbp-0x49]
   140026e8d:	mov    QWORD PTR [rax],rax
   140026e90:	mov    rax,QWORD PTR [rbp-0x49]
   140026e94:	mov    QWORD PTR [rax+0x10],rax
   140026e98:	mov    QWORD PTR [rbp-0x41],0x0
   140026ea0:	mov    r12d,DWORD PTR [rbp+0x6f]
   140026ea4:	jmp    0x140026f10
   140026ea6:	cmp    rbx,rdi
   140026ea9:	je     0x140026f14
   140026eab:	nop    DWORD PTR [rax+rax*1+0x0]
   140026eb0:	mov    r8,rbx
   140026eb3:	cmp    BYTE PTR [rbx+0x1d],0x0
   140026eb7:	jne    0x140026efe
   140026eb9:	mov    rax,QWORD PTR [rbx+0x10]
   140026ebd:	cmp    BYTE PTR [rax+0x1d],0x0
   140026ec1:	jne    0x140026ede
   140026ec3:	mov    rbx,rax
   140026ec6:	mov    rax,QWORD PTR [rax]
   140026ec9:	cmp    BYTE PTR [rax+0x1d],0x0
   140026ecd:	jne    0x140026efe
   140026ecf:	nop
   140026ed0:	mov    rbx,rax
   140026ed3:	mov    rax,QWORD PTR [rax]
   140026ed6:	cmp    BYTE PTR [rax+0x1d],0x0
   140026eda:	je     0x140026ed0
   140026edc:	jmp    0x140026efe
   140026ede:	mov    rax,QWORD PTR [rbx+0x8]
   140026ee2:	cmp    BYTE PTR [rax+0x1d],0x0
   140026ee6:	jne    0x140026efb
   140026ee8:	cmp    rbx,QWORD PTR [rax+0x10]
   140026eec:	jne    0x140026efb
   140026eee:	mov    rbx,rax
   140026ef1:	mov    rax,QWORD PTR [rax+0x8]
   140026ef5:	cmp    BYTE PTR [rax+0x1d],0x0
   140026ef9:	je     0x140026ee8
   140026efb:	mov    rbx,rax
   140026efe:	lea    rdx,[rbp-0x31]
   140026f02:	lea    rcx,[rbp-0x51]
   140026f06:	call   0x140028500
   140026f0b:	cmp    rbx,rdi
   140026f0e:	jne    0x140026eb0
   140026f10:	mov    rdi,QWORD PTR [rbp-0x49]
   140026f14:	mov    rcx,rdi
   140026f17:	call   0x1400330c0
   140026f1c:	cmp    BYTE PTR [rsi+0x1d],0x0
   140026f20:	jne    0x140026f6e
   140026f22:	mov    rax,QWORD PTR [rsi+0x10]
   140026f26:	cmp    BYTE PTR [rax+0x1d],0x0
   140026f2a:	jne    0x140026f4e
   140026f2c:	mov    rsi,rax
   140026f2f:	mov    rax,QWORD PTR [rax]
   140026f32:	cmp    BYTE PTR [rax+0x1d],0x0
   140026f36:	jne    0x140026f6e
   140026f38:	nop    DWORD PTR [rax+rax*1+0x0]
   140026f40:	mov    rsi,rax
   140026f43:	mov    rax,QWORD PTR [rax]
   140026f46:	cmp    BYTE PTR [rax+0x1d],0x0
   140026f4a:	je     0x140026f40
   140026f4c:	jmp    0x140026f6e
   140026f4e:	mov    rax,QWORD PTR [rsi+0x8]
   140026f52:	cmp    BYTE PTR [rax+0x1d],0x0
   140026f56:	jne    0x140026f6b
   140026f58:	cmp    rsi,QWORD PTR [rax+0x10]
   140026f5c:	jne    0x140026f6b
   140026f5e:	mov    rsi,rax
   140026f61:	mov    rax,QWORD PTR [rax+0x8]
   140026f65:	cmp    BYTE PTR [rax+0x1d],0x0
   140026f69:	je     0x140026f58
   140026f6b:	mov    rsi,rax
   140026f6e:	mov    rdi,QWORD PTR [rbp-0x69]
   140026f72:	cmp    rsi,rdi
   140026f75:	lea    rbx,[r13+0xcb8]
   140026f7c:	jne    0x140026d20
   140026f82:	mov    r14d,DWORD PTR [rbp+0x67]
   140026f86:	jmp    0x140026fb5
   140026f88:	mov    QWORD PTR [rbp-0x21],rdi
   140026f8c:	lea    rdx,[rbp-0x21]
   140026f90:	lea    rcx,[rbp-0x1]
   140026f94:	call   0x140032fd4
   140026f99:	lea    r11,[rip+0x418f0]        # 0x140068890
   140026fa0:	mov    QWORD PTR [rbp-0x1],r11
   140026fa4:	lea    rdx,[rip+0x5c475]        # 0x140083420
   140026fab:	lea    rcx,[rbp-0x1]
   140026faf:	call   0x140036358
   140026fb4:	nop
   140026fb5:	mov    rbx,QWORD PTR [rdi]
   140026fb8:	cmp    rbx,rbx
   140026fbb:	jne    0x140027012
   140026fbd:	mov    rsi,QWORD PTR [rdi+0x8]
   140026fc1:	mov    rbx,rsi
   140026fc4:	cmp    BYTE PTR [rsi+0x1d],0x0
   140026fc8:	jne    0x140026ff5
   140026fca:	nop    WORD PTR [rax+rax*1+0x0]
   140026fd0:	mov    rdx,QWORD PTR [rbx+0x10]
   140026fd4:	lea    rcx,[rbp-0x71]
   140026fd8:	call   0x140028a70
   140026fdd:	mov    rbx,QWORD PTR [rbx]
   140026fe0:	mov    rcx,rsi
   140026fe3:	call   0x1400330c0
   140026fe8:	mov    rsi,rbx
   140026feb:	cmp    BYTE PTR [rbx+0x1d],0x0
   140026fef:	je     0x140026fd0
   140026ff1:	mov    rdi,QWORD PTR [rbp-0x69]
   140026ff5:	mov    QWORD PTR [rdi+0x8],rdi
   140026ff9:	mov    rax,QWORD PTR [rbp-0x69]
   140026ffd:	mov    QWORD PTR [rax],rax
   140027000:	mov    rax,QWORD PTR [rbp-0x69]
   140027004:	mov    QWORD PTR [rax+0x10],rax
   140027008:	mov    QWORD PTR [rbp-0x61],0x0
   140027010:	jmp    0x140027080
   140027012:	cmp    rbx,rdi
   140027015:	je     0x140027084
   140027017:	mov    r8,rbx
   14002701a:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002701e:	jne    0x14002706e
   140027020:	mov    rax,QWORD PTR [rbx+0x10]
   140027024:	cmp    BYTE PTR [rax+0x1d],0x0
   140027028:	jne    0x14002704e
   14002702a:	mov    rbx,rax
   14002702d:	mov    rax,QWORD PTR [rax]
   140027030:	cmp    BYTE PTR [rax+0x1d],0x0
   140027034:	jne    0x14002706e
   140027036:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027040:	mov    rbx,rax
   140027043:	mov    rax,QWORD PTR [rax]
   140027046:	cmp    BYTE PTR [rax+0x1d],0x0
   14002704a:	je     0x140027040
   14002704c:	jmp    0x14002706e
   14002704e:	mov    rax,QWORD PTR [rbx+0x8]
   140027052:	cmp    BYTE PTR [rax+0x1d],0x0
   140027056:	jne    0x14002706b
   140027058:	cmp    rbx,QWORD PTR [rax+0x10]
   14002705c:	jne    0x14002706b
   14002705e:	mov    rbx,rax
   140027061:	mov    rax,QWORD PTR [rax+0x8]
   140027065:	cmp    BYTE PTR [rax+0x1d],0x0
   140027069:	je     0x140027058
   14002706b:	mov    rbx,rax
   14002706e:	lea    rdx,[rbp-0x31]
   140027072:	lea    rcx,[rbp-0x71]
   140027076:	call   0x140028500
   14002707b:	cmp    rbx,rdi
   14002707e:	jne    0x140027017
   140027080:	mov    rdi,QWORD PTR [rbp-0x69]
   140027084:	mov    rcx,rdi
   140027087:	call   0x1400330c0
   14002708c:	movzx  eax,r14b
   140027090:	jmp    0x1400270bf
   140027092:	mov    QWORD PTR [rbp-0x29],rdi
   140027096:	lea    rdx,[rbp-0x29]
   14002709a:	lea    rcx,[rbp-0x19]
   14002709e:	call   0x140032fd4
   1400270a3:	lea    r11,[rip+0x417e6]        # 0x140068890
   1400270aa:	mov    QWORD PTR [rbp-0x19],r11
   1400270ae:	lea    rdx,[rip+0x5c36b]        # 0x140083420
   1400270b5:	lea    rcx,[rbp-0x19]
   1400270b9:	call   0x140036358
   1400270be:	int3   
   1400270bf:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400270c7:	add    rsp,0xb0
   1400270ce:	pop    r15
   1400270d0:	pop    r14
   1400270d2:	pop    r13
   1400270d4:	pop    r12
   1400270d6:	pop    rdi
   1400270d7:	pop    rsi
   1400270d8:	pop    rbp
   1400270d9:	ret    
   1400270da:	int3   
   1400270db:	int3   
   1400270dc:	int3   
   1400270dd:	int3   
   1400270de:	int3   
   1400270df:	int3   
   1400270e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400270e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400270ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400270ef:	push   rdi
   1400270f0:	sub    rsp,0x20
   1400270f4:	mov    rsi,r9
   1400270f7:	mov    edi,r8d
   1400270fa:	mov    ebp,edx
   1400270fc:	mov    rbx,rcx
   1400270ff:	call   0x140022630
   140027104:	cmp    ebp,0xffffffff
   140027107:	jne    0x14002710f
   140027109:	mov    ebp,DWORD PTR [rbx+0xda8]
   14002710f:	cmp    edi,0xffffffff
   140027112:	jne    0x14002711a
   140027114:	mov    edi,DWORD PTR [rbx+0xdac]
   14002711a:	test   rsi,rsi
   14002711d:	je     0x14002714d
   14002711f:	mov    rcx,rbx
   140027122:	call   0x140025fc0
   140027127:	lea    rcx,[rbx+0xcb8]
   14002712e:	xor    r9d,r9d
   140027131:	mov    r8d,edi
   140027134:	mov    edx,ebp
   140027136:	call   0x14002ddc0
   14002713b:	test   rax,rax
   14002713e:	je     0x14002714d
   140027140:	movzx  eax,WORD PTR [rax+0xb0]
   140027147:	mov    DWORD PTR [rsi],eax
   140027149:	mov    al,0x1
   14002714b:	jmp    0x14002714f
   14002714d:	xor    al,al
   14002714f:	mov    rbx,QWORD PTR [rsp+0x30]
   140027154:	mov    rbp,QWORD PTR [rsp+0x38]
   140027159:	mov    rsi,QWORD PTR [rsp+0x40]
   14002715e:	add    rsp,0x20
   140027162:	pop    rdi
   140027163:	ret    
   140027164:	int3   
   140027165:	int3   
   140027166:	int3   
   140027167:	int3   
   140027168:	int3   
   140027169:	int3   
   14002716a:	int3   
   14002716b:	int3   
   14002716c:	int3   
   14002716d:	int3   
   14002716e:	int3   
   14002716f:	int3   
   140027170:	mov    QWORD PTR [rsp+0x8],rcx
   140027175:	push   rbp
   140027176:	push   rsi
   140027177:	push   rdi
   140027178:	sub    rsp,0x40
   14002717c:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140027185:	mov    QWORD PTR [rsp+0x70],rbx
   14002718a:	mov    rbp,r8
   14002718d:	mov    rsi,rdx
   140027190:	mov    rdi,rcx
   140027193:	xor    ebx,ebx
   140027195:	mov    DWORD PTR [rsp+0x68],ebx
   140027199:	mov    rax,QWORD PTR [rdx]
   14002719c:	mov    rcx,QWORD PTR [rax-0x18]
   1400271a0:	test   rcx,rcx
   1400271a3:	je     0x1400271b3
   1400271a5:	mov    rax,QWORD PTR [rcx]
   1400271a8:	call   QWORD PTR [rax+0x20]
   1400271ab:	mov    rcx,rax
   1400271ae:	test   rax,rax
   1400271b1:	jne    0x1400271c7
   1400271b3:	lea    rcx,[rip+0x5f59e]        # 0x140086758
   1400271ba:	mov    rax,QWORD PTR [rip+0x5f597]        # 0x140086758
   1400271c1:	call   QWORD PTR [rax+0x20]
   1400271c4:	mov    rcx,rax
   1400271c7:	test   rcx,rcx
   1400271ca:	setne  bl
   1400271cd:	test   ebx,ebx
   1400271cf:	jne    0x1400271dc
   1400271d1:	mov    ecx,0x80004005
   1400271d6:	call   0x1400025f0
   1400271db:	int3   
   1400271dc:	mov    rax,QWORD PTR [rcx]
   1400271df:	call   QWORD PTR [rax+0x18]
   1400271e2:	add    rax,0x18
   1400271e6:	mov    QWORD PTR [rdi],rax
   1400271e9:	mov    DWORD PTR [rsp+0x68],0x1
   1400271f1:	mov    r9,QWORD PTR [rbp+0x0]
   1400271f5:	mov    eax,DWORD PTR [r9-0x10]
   1400271f9:	mov    rdx,QWORD PTR [rsi]
   1400271fc:	mov    DWORD PTR [rsp+0x20],eax
   140027200:	mov    r8d,DWORD PTR [rdx-0x10]
   140027204:	mov    rcx,rdi
   140027207:	call   0x1400150b0
   14002720c:	mov    rax,rdi
   14002720f:	mov    rbx,QWORD PTR [rsp+0x70]
   140027214:	add    rsp,0x40
   140027218:	pop    rdi
   140027219:	pop    rsi
   14002721a:	pop    rbp
   14002721b:	ret    
   14002721c:	int3   
   14002721d:	int3   
   14002721e:	int3   
   14002721f:	int3   
   140027220:	mov    QWORD PTR [rsp+0x8],rcx
   140027225:	push   rbx
   140027226:	push   rsi
   140027227:	push   rdi
   140027228:	sub    rsp,0x40
   14002722c:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140027235:	mov    rsi,rdx
   140027238:	mov    rdi,rcx
   14002723b:	xor    ebx,ebx
   14002723d:	mov    DWORD PTR [rsp+0x70],ebx
   140027241:	mov    rax,QWORD PTR [rdx]
   140027244:	mov    rcx,QWORD PTR [rax-0x18]
   140027248:	test   rcx,rcx
   14002724b:	je     0x14002725b
   14002724d:	mov    rax,QWORD PTR [rcx]
   140027250:	call   QWORD PTR [rax+0x20]
   140027253:	mov    rcx,rax
   140027256:	test   rax,rax
   140027259:	jne    0x14002726f
   14002725b:	lea    rcx,[rip+0x5f4f6]        # 0x140086758
   140027262:	mov    rax,QWORD PTR [rip+0x5f4ef]        # 0x140086758
   140027269:	call   QWORD PTR [rax+0x20]
   14002726c:	mov    rcx,rax
   14002726f:	test   rcx,rcx
   140027272:	setne  bl
   140027275:	test   ebx,ebx
   140027277:	jne    0x140027284
   140027279:	mov    ecx,0x80004005
   14002727e:	call   0x1400025f0
   140027283:	int3   
   140027284:	mov    rax,QWORD PTR [rcx]
   140027287:	call   QWORD PTR [rax+0x18]
   14002728a:	add    rax,0x18
   14002728e:	mov    QWORD PTR [rdi],rax
   140027291:	mov    DWORD PTR [rsp+0x70],0x1
   140027299:	mov    BYTE PTR [rsp+0x68],0x3b
   14002729e:	mov    rdx,QWORD PTR [rsi]
   1400272a1:	mov    DWORD PTR [rsp+0x20],0x1
   1400272a9:	lea    r9,[rsp+0x68]
   1400272ae:	mov    r8d,DWORD PTR [rdx-0x10]
   1400272b2:	mov    rcx,rdi
   1400272b5:	call   0x1400150b0
   1400272ba:	mov    rax,rdi
   1400272bd:	add    rsp,0x40
   1400272c1:	pop    rdi
   1400272c2:	pop    rsi
   1400272c3:	pop    rbx
   1400272c4:	ret    
   1400272c5:	int3   
   1400272c6:	int3   
   1400272c7:	int3   
   1400272c8:	int3   
   1400272c9:	int3   
   1400272ca:	int3   
   1400272cb:	int3   
   1400272cc:	int3   
   1400272cd:	int3   
   1400272ce:	int3   
   1400272cf:	int3   
   1400272d0:	rex push rbx
   1400272d2:	sub    rsp,0x20
   1400272d6:	mov    rbx,rcx
   1400272d9:	mov    rcx,QWORD PTR [rcx]
   1400272dc:	test   rcx,rcx
   1400272df:	je     0x1400272e6
   1400272e1:	call   0x1400330c0
   1400272e6:	xor    eax,eax
   1400272e8:	mov    QWORD PTR [rbx],rax
   1400272eb:	mov    QWORD PTR [rbx+0x8],rax
   1400272ef:	mov    QWORD PTR [rbx+0x10],rax
   1400272f3:	add    rsp,0x20
   1400272f7:	pop    rbx
   1400272f8:	ret    
   1400272f9:	int3   
   1400272fa:	int3   
   1400272fb:	int3   
   1400272fc:	int3   
   1400272fd:	int3   
   1400272fe:	int3   
   1400272ff:	int3   
   140027300:	push   r12
   140027302:	sub    rsp,0x30
   140027306:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002730f:	mov    QWORD PTR [rsp+0x40],rbx
   140027314:	mov    QWORD PTR [rsp+0x50],rsi
   140027319:	mov    QWORD PTR [rsp+0x58],rdi
   14002731e:	mov    rdi,rdx
   140027321:	mov    rbx,rcx
   140027324:	movabs rax,0x3fffffffffffffff
   14002732e:	cmp    rdx,rax
   140027331:	jbe    0x140027340
   140027333:	lea    rcx,[rip+0x442ee]        # 0x14006b628
   14002733a:	call   0x140032d00
   14002733f:	int3   
   140027340:	mov    rax,QWORD PTR [rcx+0x10]
   140027344:	sub    rax,QWORD PTR [rcx]
   140027347:	sar    rax,0x2
   14002734b:	cmp    rax,rdx
   14002734e:	jae    0x1400273a2
   140027350:	mov    rcx,rdx
   140027353:	call   0x140027690
   140027358:	mov    rsi,rax
   14002735b:	mov    QWORD PTR [rsp+0x48],rax
   140027360:	mov    r8,QWORD PTR [rbx+0x8]
   140027364:	mov    rdx,QWORD PTR [rbx]
   140027367:	sub    r8,rdx
   14002736a:	and    r8,0xfffffffffffffffc
   14002736e:	mov    rcx,rax
   140027371:	call   0x140033260
   140027376:	nop
   140027377:	mov    rcx,QWORD PTR [rbx]
   14002737a:	mov    r12,QWORD PTR [rbx+0x8]
   14002737e:	sub    r12,rcx
   140027381:	sar    r12,0x2
   140027385:	test   rcx,rcx
   140027388:	je     0x14002738f
   14002738a:	call   0x1400330c0
   14002738f:	lea    rax,[rsi+rdi*4]
   140027393:	mov    QWORD PTR [rbx+0x10],rax
   140027397:	lea    rax,[rsi+r12*4]
   14002739b:	mov    QWORD PTR [rbx+0x8],rax
   14002739f:	mov    QWORD PTR [rbx],rsi
   1400273a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400273a7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400273ac:	mov    rdi,QWORD PTR [rsp+0x58]
   1400273b1:	add    rsp,0x30
   1400273b5:	pop    r12
   1400273b7:	ret    
   1400273b8:	int3   
   1400273b9:	int3   
   1400273ba:	int3   
   1400273bb:	int3   
   1400273bc:	int3   
   1400273bd:	int3   
   1400273be:	int3   
   1400273bf:	int3   
   1400273c0:	push   r12
   1400273c2:	sub    rsp,0x30
   1400273c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400273cf:	mov    QWORD PTR [rsp+0x40],rbx
   1400273d4:	mov    QWORD PTR [rsp+0x50],rsi
   1400273d9:	mov    QWORD PTR [rsp+0x58],rdi
   1400273de:	mov    rdi,rdx
   1400273e1:	mov    rbx,rcx
   1400273e4:	movabs rax,0x1fffffffffffffff
   1400273ee:	cmp    rdx,rax
   1400273f1:	jbe    0x140027400
   1400273f3:	lea    rcx,[rip+0x4422e]        # 0x14006b628
   1400273fa:	call   0x140032d00
   1400273ff:	int3   
   140027400:	mov    rax,QWORD PTR [rcx+0x10]
   140027404:	sub    rax,QWORD PTR [rcx]
   140027407:	sar    rax,0x3
   14002740b:	cmp    rax,rdx
   14002740e:	jae    0x140027462
   140027410:	mov    rcx,rdx
   140027413:	call   0x140027790
   140027418:	mov    rsi,rax
   14002741b:	mov    QWORD PTR [rsp+0x48],rax
   140027420:	mov    r8,QWORD PTR [rbx+0x8]
   140027424:	mov    rdx,QWORD PTR [rbx]
   140027427:	sub    r8,rdx
   14002742a:	and    r8,0xfffffffffffffff8
   14002742e:	mov    rcx,rax
   140027431:	call   0x140033260
   140027436:	nop
   140027437:	mov    rcx,QWORD PTR [rbx]
   14002743a:	mov    r12,QWORD PTR [rbx+0x8]
   14002743e:	sub    r12,rcx
   140027441:	sar    r12,0x3
   140027445:	test   rcx,rcx
   140027448:	je     0x14002744f
   14002744a:	call   0x1400330c0
   14002744f:	lea    rax,[rsi+rdi*8]
   140027453:	mov    QWORD PTR [rbx+0x10],rax
   140027457:	lea    rax,[rsi+r12*8]
   14002745b:	mov    QWORD PTR [rbx+0x8],rax
   14002745f:	mov    QWORD PTR [rbx],rsi
   140027462:	mov    rbx,QWORD PTR [rsp+0x40]
   140027467:	mov    rsi,QWORD PTR [rsp+0x50]
   14002746c:	mov    rdi,QWORD PTR [rsp+0x58]
   140027471:	add    rsp,0x30
   140027475:	pop    r12
   140027477:	ret    
   140027478:	int3   
   140027479:	int3   
   14002747a:	int3   
   14002747b:	int3   
   14002747c:	int3   
   14002747d:	int3   
   14002747e:	int3   
   14002747f:	int3   
   140027480:	mov    QWORD PTR [rsp+0x8],rbx
   140027485:	push   rdi
   140027486:	sub    rsp,0x20
   14002748a:	mov    rax,QWORD PTR [rcx+0x8]
   14002748e:	mov    rdi,rdx
   140027491:	mov    rbx,rcx
   140027494:	cmp    rdx,rax
   140027497:	jae    0x1400274d9
   140027499:	mov    rcx,QWORD PTR [rcx]
   14002749c:	cmp    rcx,rdx
   14002749f:	ja     0x1400274d9
   1400274a1:	sub    rdi,rcx
   1400274a4:	sar    rdi,0x3
   1400274a8:	cmp    rax,QWORD PTR [rbx+0x10]
   1400274ac:	jne    0x1400274b6
   1400274ae:	mov    rcx,rbx
   1400274b1:	call   0x140027700
   1400274b6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400274ba:	test   rdx,rdx
   1400274bd:	je     0x1400274f6
   1400274bf:	mov    rax,QWORD PTR [rbx]
   1400274c2:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400274c6:	mov    QWORD PTR [rdx],rcx
   1400274c9:	add    QWORD PTR [rbx+0x8],0x8
   1400274ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400274d3:	add    rsp,0x20
   1400274d7:	pop    rdi
   1400274d8:	ret    
   1400274d9:	cmp    rax,QWORD PTR [rbx+0x10]
   1400274dd:	jne    0x1400274e7
   1400274df:	mov    rcx,rbx
   1400274e2:	call   0x140027700
   1400274e7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400274eb:	test   rcx,rcx
   1400274ee:	je     0x1400274f6
   1400274f0:	mov    rax,QWORD PTR [rdi]
   1400274f3:	mov    QWORD PTR [rcx],rax
   1400274f6:	add    QWORD PTR [rbx+0x8],0x8
   1400274fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140027500:	add    rsp,0x20
   140027504:	pop    rdi
   140027505:	ret    
   140027506:	int3   
   140027507:	int3   
   140027508:	int3   
   140027509:	int3   
   14002750a:	int3   
   14002750b:	int3   
   14002750c:	int3   
   14002750d:	int3   
   14002750e:	int3   
   14002750f:	int3   
   140027510:	mov    QWORD PTR [rsp+0x10],rbx
   140027515:	push   rsi
   140027516:	sub    rsp,0x20
   14002751a:	mov    rax,QWORD PTR [rcx+0x8]
   14002751e:	mov    r8,QWORD PTR [rcx]
   140027521:	mov    rsi,rcx
   140027524:	mov    rcx,rax
   140027527:	mov    rbx,rdx
   14002752a:	sub    rcx,r8
   14002752d:	cmp    rcx,rdx
   140027530:	jbe    0x14002756f
   140027532:	add    rbx,r8
   140027535:	cmp    rbx,rax
   140027538:	je     0x1400275ea
   14002753e:	mov    QWORD PTR [rsp+0x30],rdi
   140027543:	mov    rdi,rax
   140027546:	mov    rdx,rax
   140027549:	sub    rdi,rax
   14002754c:	mov    rcx,rbx
   14002754f:	mov    r8,rdi
   140027552:	call   0x140033260
   140027557:	lea    r11,[rdi+rbx*1]
   14002755b:	mov    rdi,QWORD PTR [rsp+0x30]
   140027560:	mov    QWORD PTR [rsi+0x8],r11
   140027564:	mov    rbx,QWORD PTR [rsp+0x38]
   140027569:	add    rsp,0x20
   14002756d:	pop    rsi
   14002756e:	ret    
   14002756f:	jae    0x1400275ea
   140027571:	or     r9,0xffffffffffffffff
   140027575:	mov    rdx,r8
   140027578:	sub    rdx,rax
   14002757b:	mov    rax,r9
   14002757e:	add    rdx,rbx
   140027581:	sub    rax,rdx
   140027584:	cmp    rax,rcx
   140027587:	jae    0x140027596
   140027589:	lea    rcx,[rip+0x44098]        # 0x14006b628
   140027590:	call   0x140032d00
   140027595:	int3   
   140027596:	add    rcx,rdx
   140027599:	mov    rdx,QWORD PTR [rsi+0x10]
   14002759d:	sub    rdx,r8
   1400275a0:	cmp    rcx,rdx
   1400275a3:	jbe    0x1400275c9
   1400275a5:	mov    rax,rdx
   1400275a8:	shr    rax,1
   1400275ab:	sub    r9,rax
   1400275ae:	cmp    r9,rdx
   1400275b1:	jae    0x1400275b7
   1400275b3:	xor    edx,edx
   1400275b5:	jmp    0x1400275ba
   1400275b7:	add    rdx,rax
   1400275ba:	cmp    rdx,rcx
   1400275bd:	cmovb  rdx,rcx
   1400275c1:	mov    rcx,rsi
   1400275c4:	call   0x140027a40
   1400275c9:	mov    rcx,QWORD PTR [rsi+0x8]
   1400275cd:	mov    r8,QWORD PTR [rsi]
   1400275d0:	sub    r8,rcx
   1400275d3:	add    r8,rbx
   1400275d6:	je     0x1400275df
   1400275d8:	xor    edx,edx
   1400275da:	call   0x140036dc0
   1400275df:	mov    rax,QWORD PTR [rsi]
   1400275e2:	lea    rcx,[rbx+rax*1]
   1400275e6:	mov    QWORD PTR [rsi+0x8],rcx
   1400275ea:	mov    rbx,QWORD PTR [rsp+0x38]
   1400275ef:	add    rsp,0x20
   1400275f3:	pop    rsi
   1400275f4:	ret    
   1400275f5:	int3   
   1400275f6:	int3   
   1400275f7:	int3   
   1400275f8:	int3   
   1400275f9:	int3   
   1400275fa:	int3   
   1400275fb:	int3   
   1400275fc:	int3   
   1400275fd:	int3   
   1400275fe:	int3   
   1400275ff:	int3   
   140027600:	sub    rsp,0x28
   140027604:	mov    rax,QWORD PTR [rcx]
   140027607:	mov    r8,QWORD PTR [rcx+0x8]
   14002760b:	mov    r9,rcx
   14002760e:	sub    r8,rax
   140027611:	movabs rcx,0x3ffffffffffffffe
   14002761b:	sar    r8,0x2
   14002761f:	cmp    r8,rcx
   140027622:	jbe    0x140027631
   140027624:	lea    rcx,[rip+0x43ffd]        # 0x14006b628
   14002762b:	call   0x140032d00
   140027630:	int3   
   140027631:	mov    rdx,QWORD PTR [r9+0x10]
   140027635:	inc    r8
   140027638:	sub    rdx,rax
   14002763b:	sar    rdx,0x2
   14002763f:	cmp    r8,rdx
   140027642:	jbe    0x140027683
   140027644:	mov    rcx,rdx
   140027647:	movabs rax,0x3fffffffffffffff
   140027651:	shr    rcx,1
   140027654:	sub    rax,rcx
   140027657:	cmp    rax,rdx
   14002765a:	jae    0x140027671
   14002765c:	xor    edx,edx
   14002765e:	mov    rcx,r9
   140027661:	cmp    rdx,r8
   140027664:	cmovb  rdx,r8
   140027668:	add    rsp,0x28
   14002766c:	jmp    0x140027300
   140027671:	add    rdx,rcx
   140027674:	mov    rcx,r9
   140027677:	cmp    rdx,r8
   14002767a:	cmovb  rdx,r8
   14002767e:	call   0x140027300
   140027683:	add    rsp,0x28
   140027687:	ret    
   140027688:	int3   
   140027689:	int3   
   14002768a:	int3   
   14002768b:	int3   
   14002768c:	int3   
   14002768d:	int3   
   14002768e:	int3   
   14002768f:	int3   
   140027690:	sub    rsp,0x48
   140027694:	xor    eax,eax
   140027696:	test   rcx,rcx
   140027699:	je     0x1400276ee
   14002769b:	movabs rax,0x3fffffffffffffff
   1400276a5:	cmp    rcx,rax
   1400276a8:	ja     0x1400276b8
   1400276aa:	shl    rcx,0x2
   1400276ae:	call   0x1400331a0
   1400276b3:	test   rax,rax
   1400276b6:	jne    0x1400276ee
   1400276b8:	lea    rdx,[rsp+0x50]
   1400276bd:	lea    rcx,[rsp+0x20]
   1400276c2:	mov    QWORD PTR [rsp+0x50],0x0
   1400276cb:	call   0x140032fd4
   1400276d0:	lea    r11,[rip+0x411b9]        # 0x140068890
   1400276d7:	lea    rdx,[rip+0x5bd42]        # 0x140083420
   1400276de:	lea    rcx,[rsp+0x20]
   1400276e3:	mov    QWORD PTR [rsp+0x20],r11
   1400276e8:	call   0x140036358
   1400276ed:	int3   
   1400276ee:	add    rsp,0x48
   1400276f2:	ret    
   1400276f3:	int3   
   1400276f4:	int3   
   1400276f5:	int3   
   1400276f6:	int3   
   1400276f7:	int3   
   1400276f8:	int3   
   1400276f9:	int3   
   1400276fa:	int3   
   1400276fb:	int3   
   1400276fc:	int3   
   1400276fd:	int3   
   1400276fe:	int3   
   1400276ff:	int3   
   140027700:	sub    rsp,0x28
   140027704:	mov    rax,QWORD PTR [rcx]
   140027707:	mov    r8,QWORD PTR [rcx+0x8]
   14002770b:	mov    r9,rcx
   14002770e:	sub    r8,rax
   140027711:	movabs rcx,0x1ffffffffffffffe
   14002771b:	sar    r8,0x3
   14002771f:	cmp    r8,rcx
   140027722:	jbe    0x140027731
   140027724:	lea    rcx,[rip+0x43efd]        # 0x14006b628
   14002772b:	call   0x140032d00
   140027730:	int3   
   140027731:	mov    rdx,QWORD PTR [r9+0x10]
   140027735:	inc    r8
   140027738:	sub    rdx,rax
   14002773b:	sar    rdx,0x3
   14002773f:	cmp    r8,rdx
   140027742:	jbe    0x140027783
   140027744:	mov    rcx,rdx
   140027747:	movabs rax,0x1fffffffffffffff
   140027751:	shr    rcx,1
   140027754:	sub    rax,rcx
   140027757:	cmp    rax,rdx
   14002775a:	jae    0x140027771
   14002775c:	xor    edx,edx
   14002775e:	mov    rcx,r9
   140027761:	cmp    rdx,r8
   140027764:	cmovb  rdx,r8
   140027768:	add    rsp,0x28
   14002776c:	jmp    0x1400273c0
   140027771:	add    rdx,rcx
   140027774:	mov    rcx,r9
   140027777:	cmp    rdx,r8
   14002777a:	cmovb  rdx,r8
   14002777e:	call   0x1400273c0
   140027783:	add    rsp,0x28
   140027787:	ret    
   140027788:	int3   
   140027789:	int3   
   14002778a:	int3   
   14002778b:	int3   
   14002778c:	int3   
   14002778d:	int3   
   14002778e:	int3   
   14002778f:	int3   
   140027790:	sub    rsp,0x48
   140027794:	xor    eax,eax
   140027796:	test   rcx,rcx
   140027799:	je     0x1400277ee
   14002779b:	movabs rax,0x1fffffffffffffff
   1400277a5:	cmp    rcx,rax
   1400277a8:	ja     0x1400277b8
   1400277aa:	shl    rcx,0x3
   1400277ae:	call   0x1400331a0
   1400277b3:	test   rax,rax
   1400277b6:	jne    0x1400277ee
   1400277b8:	lea    rdx,[rsp+0x50]
   1400277bd:	lea    rcx,[rsp+0x20]
   1400277c2:	mov    QWORD PTR [rsp+0x50],0x0
   1400277cb:	call   0x140032fd4
   1400277d0:	lea    r11,[rip+0x410b9]        # 0x140068890
   1400277d7:	lea    rdx,[rip+0x5bc42]        # 0x140083420
   1400277de:	lea    rcx,[rsp+0x20]
   1400277e3:	mov    QWORD PTR [rsp+0x20],r11
   1400277e8:	call   0x140036358
   1400277ed:	int3   
   1400277ee:	add    rsp,0x48
   1400277f2:	ret    
   1400277f3:	int3   
   1400277f4:	int3   
   1400277f5:	int3   
   1400277f6:	int3   
   1400277f7:	int3   
   1400277f8:	int3   
   1400277f9:	int3   
   1400277fa:	int3   
   1400277fb:	int3   
   1400277fc:	int3   
   1400277fd:	int3   
   1400277fe:	int3   
   1400277ff:	int3   
   140027800:	sub    rsp,0x28
   140027804:	mov    r10,QWORD PTR [rcx]
   140027807:	mov    r8,QWORD PTR [rcx+0x8]
   14002780b:	or     r9,0xffffffffffffffff
   14002780f:	mov    rax,r9
   140027812:	sub    r8,r10
   140027815:	sub    rax,rdx
   140027818:	cmp    rax,r8
   14002781b:	jae    0x14002782a
   14002781d:	lea    rcx,[rip+0x43e04]        # 0x14006b628
   140027824:	call   0x140032d00
   140027829:	int3   
   14002782a:	add    r8,rdx
   14002782d:	mov    rdx,QWORD PTR [rcx+0x10]
   140027831:	sub    rdx,r10
   140027834:	cmp    r8,rdx
   140027837:	jbe    0x140027868
   140027839:	mov    rax,rdx
   14002783c:	shr    rax,1
   14002783f:	sub    r9,rax
   140027842:	cmp    r9,rdx
   140027845:	jae    0x140027859
   140027847:	xor    edx,edx
   140027849:	cmp    rdx,r8
   14002784c:	cmovb  rdx,r8
   140027850:	add    rsp,0x28
   140027854:	jmp    0x140027a40
   140027859:	add    rdx,rax
   14002785c:	cmp    rdx,r8
   14002785f:	cmovb  rdx,r8
   140027863:	call   0x140027a40
   140027868:	add    rsp,0x28
   14002786c:	ret    
   14002786d:	int3   
   14002786e:	int3   
   14002786f:	int3   
   140027870:	mov    QWORD PTR [rsp+0x10],rbx
   140027875:	mov    QWORD PTR [rsp+0x18],rbp
   14002787a:	mov    QWORD PTR [rsp+0x20],rsi
   14002787f:	push   rdi
   140027880:	sub    rsp,0x40
   140027884:	mov    rbx,rcx
   140027887:	mov    rcx,QWORD PTR [rcx+0x20]
   14002788b:	mov    rbp,rdx
   14002788e:	movzx  eax,cl
   140027891:	add    al,BYTE PTR [rbx+0x18]
   140027894:	test   al,0x3
   140027896:	jne    0x1400278ae
   140027898:	lea    rax,[rcx+0x4]
   14002789c:	shr    rax,0x2
   1400278a0:	cmp    QWORD PTR [rbx+0x10],rax
   1400278a4:	ja     0x1400278ae
   1400278a6:	mov    rcx,rbx
   1400278a9:	call   0x140027b10
   1400278ae:	mov    rsi,QWORD PTR [rbx+0x18]
   1400278b2:	mov    rax,QWORD PTR [rbx+0x10]
   1400278b6:	add    rsi,QWORD PTR [rbx+0x20]
   1400278ba:	mov    rdi,rsi
   1400278bd:	shr    rdi,0x2
   1400278c1:	cmp    rax,rdi
   1400278c4:	ja     0x1400278c9
   1400278c6:	sub    rdi,rax
   1400278c9:	mov    rax,QWORD PTR [rbx+0x8]
   1400278cd:	cmp    QWORD PTR [rax+rdi*8],0x0
   1400278d2:	jne    0x1400278eb
   1400278d4:	mov    ecx,0x10
   1400278d9:	call   0x1400331a0
   1400278de:	test   rax,rax
   1400278e1:	je     0x14002791d
   1400278e3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400278e7:	mov    QWORD PTR [rcx+rdi*8],rax
   1400278eb:	mov    rax,QWORD PTR [rbx+0x8]
   1400278ef:	and    esi,0x3
   1400278f2:	mov    rax,QWORD PTR [rax+rdi*8]
   1400278f6:	lea    rcx,[rax+rsi*4]
   1400278fa:	test   rcx,rcx
   1400278fd:	je     0x140027904
   1400278ff:	mov    eax,DWORD PTR [rbp+0x0]
   140027902:	mov    DWORD PTR [rcx],eax
   140027904:	inc    QWORD PTR [rbx+0x20]
   140027908:	mov    rbp,QWORD PTR [rsp+0x60]
   14002790d:	mov    rsi,QWORD PTR [rsp+0x68]
   140027912:	mov    rbx,QWORD PTR [rsp+0x58]
   140027917:	add    rsp,0x40
   14002791b:	pop    rdi
   14002791c:	ret    
   14002791d:	lea    rdx,[rsp+0x50]
   140027922:	lea    rcx,[rsp+0x20]
   140027927:	mov    QWORD PTR [rsp+0x50],0x0
   140027930:	call   0x140032fd4
   140027935:	lea    r11,[rip+0x40f54]        # 0x140068890
   14002793c:	lea    rdx,[rip+0x5badd]        # 0x140083420
   140027943:	lea    rcx,[rsp+0x20]
   140027948:	mov    QWORD PTR [rsp+0x20],r11
   14002794d:	call   0x140036358
   140027952:	int3   
   140027953:	int3   
   140027954:	int3   
   140027955:	int3   
   140027956:	int3   
   140027957:	int3   
   140027958:	int3   
   140027959:	int3   
   14002795a:	int3   
   14002795b:	int3   
   14002795c:	int3   
   14002795d:	int3   
   14002795e:	int3   
   14002795f:	int3   
   140027960:	mov    QWORD PTR [rsp+0x8],rbx
   140027965:	mov    QWORD PTR [rsp+0x10],rsi
   14002796a:	push   rdi
   14002796b:	sub    rsp,0x20
   14002796f:	mov    rax,QWORD PTR [rcx+0x20]
   140027973:	xor    esi,esi
   140027975:	mov    rbx,rcx
   140027978:	test   rax,rax
   14002797b:	je     0x140027998
   14002797d:	nop    DWORD PTR [rax]
   140027980:	test   rax,rax
   140027983:	je     0x140027992
   140027985:	dec    rax
   140027988:	mov    QWORD PTR [rcx+0x20],rax
   14002798c:	jne    0x140027992
   14002798e:	mov    QWORD PTR [rcx+0x18],rsi
   140027992:	cmp    QWORD PTR [rcx+0x20],rsi
   140027996:	jne    0x140027980
   140027998:	mov    rdi,QWORD PTR [rcx+0x10]
   14002799c:	test   rdi,rdi
   14002799f:	je     0x1400279bc
   1400279a1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400279a5:	dec    rdi
   1400279a8:	cmp    QWORD PTR [rcx+rdi*8],rsi
   1400279ac:	je     0x1400279b7
   1400279ae:	mov    rcx,QWORD PTR [rcx+rdi*8]
   1400279b2:	call   0x1400330c0
   1400279b7:	test   rdi,rdi
   1400279ba:	jne    0x1400279a1
   1400279bc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400279c0:	test   rcx,rcx
   1400279c3:	je     0x1400279ca
   1400279c5:	call   0x1400330c0
   1400279ca:	mov    QWORD PTR [rbx+0x8],rsi
   1400279ce:	mov    QWORD PTR [rbx+0x10],rsi
   1400279d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400279d7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400279dc:	add    rsp,0x20
   1400279e0:	pop    rdi
   1400279e1:	ret    
   1400279e2:	int3   
   1400279e3:	int3   
   1400279e4:	int3   
   1400279e5:	int3   
   1400279e6:	int3   
   1400279e7:	int3   
   1400279e8:	int3   
   1400279e9:	int3   
   1400279ea:	int3   
   1400279eb:	int3   
   1400279ec:	int3   
   1400279ed:	int3   
   1400279ee:	int3   
   1400279ef:	int3   
   1400279f0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400279f4:	jmp    0x1400330c0
   1400279f9:	int3   
   1400279fa:	int3   
   1400279fb:	int3   
   1400279fc:	int3   
   1400279fd:	int3   
   1400279fe:	int3   
   1400279ff:	int3   
   140027a00:	mov    QWORD PTR [rsp+0x8],rcx
   140027a05:	push   rdi
   140027a06:	sub    rsp,0x30
   140027a0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027a13:	mov    QWORD PTR [rsp+0x48],rbx
   140027a18:	mov    rdi,rdx
   140027a1b:	mov    rbx,rcx
   140027a1e:	call   0x140028010
   140027a23:	nop
   140027a24:	mov    rdx,rdi
   140027a27:	mov    rcx,rbx
   140027a2a:	call   0x140027f60
   140027a2f:	nop
   140027a30:	mov    rax,rbx
   140027a33:	mov    rbx,QWORD PTR [rsp+0x48]
   140027a38:	add    rsp,0x30
   140027a3c:	pop    rdi
   140027a3d:	ret    
   140027a3e:	int3   
   140027a3f:	int3   
   140027a40:	push   r12
   140027a42:	sub    rsp,0x30
   140027a46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027a4f:	mov    QWORD PTR [rsp+0x40],rbx
   140027a54:	mov    QWORD PTR [rsp+0x50],rsi
   140027a59:	mov    QWORD PTR [rsp+0x58],rdi
   140027a5e:	mov    rdi,rdx
   140027a61:	mov    rbx,rcx
   140027a64:	cmp    rdx,0xffffffffffffffff
   140027a68:	jbe    0x140027a77
   140027a6a:	lea    rcx,[rip+0x43bb7]        # 0x14006b628
   140027a71:	call   0x140032d00
   140027a76:	int3   
   140027a77:	mov    rax,QWORD PTR [rcx+0x10]
   140027a7b:	sub    rax,QWORD PTR [rcx]
   140027a7e:	cmp    rax,rdx
   140027a81:	jae    0x140027acd
   140027a83:	mov    rcx,rdx
   140027a86:	call   0x140028140
   140027a8b:	mov    rsi,rax
   140027a8e:	mov    QWORD PTR [rsp+0x48],rax
   140027a93:	mov    r8,QWORD PTR [rbx+0x8]
   140027a97:	mov    rdx,QWORD PTR [rbx]
   140027a9a:	sub    r8,rdx
   140027a9d:	mov    rcx,rax
   140027aa0:	call   0x140033260
   140027aa5:	nop
   140027aa6:	mov    rcx,QWORD PTR [rbx]
   140027aa9:	mov    r12,QWORD PTR [rbx+0x8]
   140027aad:	sub    r12,rcx
   140027ab0:	test   rcx,rcx
   140027ab3:	je     0x140027aba
   140027ab5:	call   0x1400330c0
   140027aba:	lea    rax,[rsi+rdi*1]
   140027abe:	mov    QWORD PTR [rbx+0x10],rax
   140027ac2:	lea    rax,[r12+rsi*1]
   140027ac6:	mov    QWORD PTR [rbx+0x8],rax
   140027aca:	mov    QWORD PTR [rbx],rsi
   140027acd:	mov    rbx,QWORD PTR [rsp+0x40]
   140027ad2:	mov    rsi,QWORD PTR [rsp+0x50]
   140027ad7:	mov    rdi,QWORD PTR [rsp+0x58]
   140027adc:	add    rsp,0x30
   140027ae0:	pop    r12
   140027ae2:	ret    
   140027ae3:	int3   
   140027ae4:	int3   
   140027ae5:	int3   
   140027ae6:	int3   
   140027ae7:	int3   
   140027ae8:	int3   
   140027ae9:	int3   
   140027aea:	int3   
   140027aeb:	int3   
   140027aec:	int3   
   140027aed:	int3   
   140027aee:	int3   
   140027aef:	int3   
   140027af0:	mov    rax,QWORD PTR [rcx]
   140027af3:	mov    r8,QWORD PTR [rcx+0x20]
   140027af7:	mov    QWORD PTR [rdx+0x8],0x0
   140027aff:	add    r8,QWORD PTR [rcx+0x18]
   140027b03:	mov    QWORD PTR [rdx],rax
   140027b06:	mov    rax,rdx
   140027b09:	mov    QWORD PTR [rdx+0x10],r8
   140027b0d:	ret    
   140027b0e:	int3   
   140027b0f:	int3   
   140027b10:	rex push rsi
   140027b12:	push   rdi
   140027b13:	sub    rsp,0x58
   140027b17:	mov    rdi,rcx
   140027b1a:	mov    rcx,QWORD PTR [rcx+0x10]
   140027b1e:	movabs rdx,0xfffffffffffffff
   140027b28:	mov    rax,rdx
   140027b2b:	mov    esi,0x1
   140027b30:	sub    rax,rcx
   140027b33:	cmp    rax,rsi
   140027b36:	jae    0x140027b45
   140027b38:	lea    rcx,[rip+0x48b41]        # 0x140070680
   140027b3f:	call   0x140032d00
   140027b44:	int3   
   140027b45:	mov    rax,rcx
   140027b48:	mov    QWORD PTR [rsp+0x80],rbp
   140027b50:	mov    QWORD PTR [rsp+0x50],r12
   140027b55:	shr    rax,1
   140027b58:	cmp    rax,0x8
   140027b5c:	jae    0x140027b65
   140027b5e:	mov    eax,0x8
   140027b63:	jmp    0x140027b6a
   140027b65:	cmp    rax,rsi
   140027b68:	jbe    0x140027b74
   140027b6a:	sub    rdx,rax
   140027b6d:	cmp    rcx,rdx
   140027b70:	cmovbe rsi,rax
   140027b74:	mov    rbp,QWORD PTR [rdi+0x18]
   140027b78:	xor    r12d,r12d
   140027b7b:	shr    rbp,0x2
   140027b7f:	add    rcx,rsi
   140027b82:	je     0x140027bda
   140027b84:	movabs rax,0x1fffffffffffffff
   140027b8e:	cmp    rcx,rax
   140027b91:	ja     0x140027ba4
   140027b93:	shl    rcx,0x3
   140027b97:	call   0x1400331a0
   140027b9c:	mov    r12,rax
   140027b9f:	test   rax,rax
   140027ba2:	jne    0x140027bda
   140027ba4:	lea    rdx,[rsp+0x70]
   140027ba9:	lea    rcx,[rsp+0x20]
   140027bae:	mov    QWORD PTR [rsp+0x70],0x0
   140027bb7:	call   0x140032fd4
   140027bbc:	lea    r11,[rip+0x40ccd]        # 0x140068890
   140027bc3:	lea    rdx,[rip+0x5b856]        # 0x140083420
   140027bca:	lea    rcx,[rsp+0x20]
   140027bcf:	mov    QWORD PTR [rsp+0x20],r11
   140027bd4:	call   0x140036358
   140027bd9:	int3   
   140027bda:	mov    rax,QWORD PTR [rdi+0x8]
   140027bde:	mov    QWORD PTR [rsp+0x78],rbx
   140027be3:	mov    rbx,QWORD PTR [rdi+0x10]
   140027be7:	shl    rbx,0x3
   140027beb:	mov    QWORD PTR [rsp+0x48],r13
   140027bf0:	lea    r13,[rbp*8+0x0]
   140027bf8:	lea    rdx,[r13+rax*1+0x0]
   140027bfd:	lea    rcx,[r13+r12*1+0x0]
   140027c02:	sub    rbx,rdx
   140027c05:	add    rbx,rax
   140027c08:	and    rbx,0xfffffffffffffff8
   140027c0c:	mov    r8,rbx
   140027c0f:	call   0x140033260
   140027c14:	mov    rdx,QWORD PTR [rdi+0x8]
   140027c18:	add    rax,rbx
   140027c1b:	mov    rcx,rax
   140027c1e:	cmp    rbp,rsi
   140027c21:	ja     0x140027c6e
   140027c23:	sar    r13,0x3
   140027c27:	mov    QWORD PTR [rsp+0x40],r14
   140027c2c:	mov    r14,rsi
   140027c2f:	lea    rbx,[r13*8+0x0]
   140027c37:	mov    r8,rbx
   140027c3a:	call   0x140033260
   140027c3f:	add    rax,rbx
   140027c42:	sub    r14,rbp
   140027c45:	je     0x140027c58
   140027c47:	shl    r14,0x3
   140027c4b:	xor    edx,edx
   140027c4d:	mov    rcx,rax
   140027c50:	mov    r8,r14
   140027c53:	call   0x140036dc0
   140027c58:	mov    r14,QWORD PTR [rsp+0x40]
   140027c5d:	test   rbp,rbp
   140027c60:	je     0x140027cc0
   140027c62:	shl    rbp,0x3
   140027c66:	mov    rcx,r12
   140027c69:	mov    r8,rbp
   140027c6c:	jmp    0x140027cb9
   140027c6e:	lea    rbx,[rsi*8+0x0]
   140027c76:	mov    r8,rbx
   140027c79:	and    r8,0xfffffffffffffff8
   140027c7d:	call   0x140033260
   140027c82:	mov    r11,QWORD PTR [rdi+0x8]
   140027c86:	mov    rcx,r12
   140027c89:	lea    rdx,[rbx+r11*1]
   140027c8d:	sub    r13,rdx
   140027c90:	add    r13,r11
   140027c93:	sar    r13,0x3
   140027c97:	lea    rbx,[r13*8+0x0]
   140027c9f:	mov    r8,rbx
   140027ca2:	call   0x140033260
   140027ca7:	add    rax,rbx
   140027caa:	test   rsi,rsi
   140027cad:	je     0x140027cc0
   140027caf:	mov    r8,rsi
   140027cb2:	mov    rcx,rax
   140027cb5:	shl    r8,0x3
   140027cb9:	xor    edx,edx
   140027cbb:	call   0x140036dc0
   140027cc0:	mov    rcx,QWORD PTR [rdi+0x8]
   140027cc4:	mov    r13,QWORD PTR [rsp+0x48]
   140027cc9:	mov    rbx,QWORD PTR [rsp+0x78]
   140027cce:	test   rcx,rcx
   140027cd1:	je     0x140027cd8
   140027cd3:	call   0x1400330c0
   140027cd8:	add    QWORD PTR [rdi+0x10],rsi
   140027cdc:	mov    rbp,QWORD PTR [rsp+0x80]
   140027ce4:	mov    QWORD PTR [rdi+0x8],r12
   140027ce8:	mov    r12,QWORD PTR [rsp+0x50]
   140027ced:	add    rsp,0x58
   140027cf1:	pop    rdi
   140027cf2:	pop    rsi
   140027cf3:	ret    
   140027cf4:	int3   
   140027cf5:	int3   
   140027cf6:	int3   
   140027cf7:	int3   
   140027cf8:	int3   
   140027cf9:	int3   
   140027cfa:	int3   
   140027cfb:	int3   
   140027cfc:	int3   
   140027cfd:	int3   
   140027cfe:	int3   
   140027cff:	int3   
   140027d00:	mov    QWORD PTR [rsp+0x10],rbx
   140027d05:	push   rdi
   140027d06:	sub    rsp,0x40
   140027d0a:	xor    edi,edi
   140027d0c:	mov    rbx,rcx
   140027d0f:	mov    QWORD PTR [rcx],rdi
   140027d12:	lea    ecx,[rdi+0x10]
   140027d15:	call   0x1400331a0
   140027d1a:	test   rax,rax
   140027d1d:	je     0x140027d4d
   140027d1f:	mov    QWORD PTR [rbx],rax
   140027d22:	mov    QWORD PTR [rax],rdi
   140027d25:	mov    QWORD PTR [rax+0x8],rdi
   140027d29:	mov    rax,QWORD PTR [rbx]
   140027d2c:	mov    QWORD PTR [rax],rbx
   140027d2f:	mov    QWORD PTR [rbx+0x8],rdi
   140027d33:	mov    QWORD PTR [rbx+0x10],rdi
   140027d37:	mov    QWORD PTR [rbx+0x18],rdi
   140027d3b:	mov    QWORD PTR [rbx+0x20],rdi
   140027d3f:	mov    rax,rbx
   140027d42:	mov    rbx,QWORD PTR [rsp+0x58]
   140027d47:	add    rsp,0x40
   140027d4b:	pop    rdi
   140027d4c:	ret    
   140027d4d:	lea    rdx,[rsp+0x50]
   140027d52:	lea    rcx,[rsp+0x20]
   140027d57:	mov    QWORD PTR [rsp+0x50],rdi
   140027d5c:	call   0x140032fd4
   140027d61:	lea    r11,[rip+0x40b28]        # 0x140068890
   140027d68:	lea    rdx,[rip+0x5b6b1]        # 0x140083420
   140027d6f:	lea    rcx,[rsp+0x20]
   140027d74:	mov    QWORD PTR [rsp+0x20],r11
   140027d79:	call   0x140036358
   140027d7e:	int3   
   140027d7f:	int3   
   140027d80:	mov    QWORD PTR [rsp+0x10],rbx
   140027d85:	mov    QWORD PTR [rsp+0x20],r9
   140027d8a:	mov    QWORD PTR [rsp+0x18],r8
   140027d8f:	push   rdi
   140027d90:	sub    rsp,0x20
   140027d94:	mov    rdi,rdx
   140027d97:	mov    rdx,QWORD PTR [rcx+0x8]
   140027d9b:	mov    rbx,rcx
   140027d9e:	cmp    r8,QWORD PTR [rdx]
   140027da1:	jne    0x140027de8
   140027da3:	cmp    r9,rdx
   140027da6:	jne    0x140027de8
   140027da8:	mov    rdx,QWORD PTR [rdx+0x8]
   140027dac:	call   0x140028980
   140027db1:	mov    r11,QWORD PTR [rbx+0x8]
   140027db5:	mov    QWORD PTR [r11+0x8],r11
   140027db9:	mov    rax,QWORD PTR [rbx+0x8]
   140027dbd:	mov    QWORD PTR [rax],rax
   140027dc0:	mov    rax,QWORD PTR [rbx+0x8]
   140027dc4:	mov    QWORD PTR [rax+0x10],rax
   140027dc8:	mov    rax,QWORD PTR [rbx+0x8]
   140027dcc:	mov    QWORD PTR [rbx+0x10],0x0
   140027dd4:	mov    rcx,QWORD PTR [rax]
   140027dd7:	mov    rax,rdi
   140027dda:	mov    QWORD PTR [rdi],rcx
   140027ddd:	mov    rbx,QWORD PTR [rsp+0x38]
   140027de2:	add    rsp,0x20
   140027de6:	pop    rdi
   140027de7:	ret    
   140027de8:	cmp    r8,r9
   140027deb:	je     0x140027e69
   140027ded:	nop    DWORD PTR [rax]
   140027df0:	cmp    BYTE PTR [r8+0x41],0x0
   140027df5:	mov    rax,r8
   140027df8:	jne    0x140027e4d
   140027dfa:	mov    rdx,QWORD PTR [r8+0x10]
   140027dfe:	cmp    BYTE PTR [rdx+0x41],0x0
   140027e02:	jne    0x140027e23
   140027e04:	mov    rcx,QWORD PTR [rdx]
   140027e07:	cmp    BYTE PTR [rcx+0x41],0x0
   140027e0b:	jne    0x140027e1c
   140027e0d:	nop    DWORD PTR [rax]
   140027e10:	mov    rdx,rcx
   140027e13:	mov    rcx,QWORD PTR [rcx]
   140027e16:	cmp    BYTE PTR [rcx+0x41],0x0
   140027e1a:	je     0x140027e10
   140027e1c:	mov    QWORD PTR [rsp+0x40],rdx
   140027e21:	jmp    0x140027e4d
   140027e23:	mov    rcx,QWORD PTR [r8+0x8]
   140027e27:	cmp    BYTE PTR [rcx+0x41],0x0
   140027e2b:	jne    0x140027e48
   140027e2d:	nop    DWORD PTR [rax]
   140027e30:	cmp    r8,QWORD PTR [rcx+0x10]
   140027e34:	jne    0x140027e48
   140027e36:	mov    QWORD PTR [rsp+0x40],rcx
   140027e3b:	mov    r8,rcx
   140027e3e:	mov    rcx,QWORD PTR [rcx+0x8]
   140027e42:	cmp    BYTE PTR [rcx+0x41],0x0
   140027e46:	je     0x140027e30
   140027e48:	mov    QWORD PTR [rsp+0x40],rcx
   140027e4d:	lea    rdx,[rsp+0x30]
   140027e52:	mov    r8,rax
   140027e55:	mov    rcx,rbx
   140027e58:	call   0x1400281a0
   140027e5d:	mov    r8,QWORD PTR [rsp+0x40]
   140027e62:	cmp    r8,QWORD PTR [rsp+0x48]
   140027e67:	jne    0x140027df0
   140027e69:	mov    rbx,QWORD PTR [rsp+0x38]
   140027e6e:	mov    QWORD PTR [rdi],r8
   140027e71:	mov    rax,rdi
   140027e74:	add    rsp,0x20
   140027e78:	pop    rdi
   140027e79:	ret    
   140027e7a:	int3   
   140027e7b:	int3   
   140027e7c:	int3   
   140027e7d:	int3   
   140027e7e:	int3   
   140027e7f:	int3   
   140027e80:	mov    QWORD PTR [rsp+0x10],rbx
   140027e85:	mov    QWORD PTR [rsp+0x20],r9
   140027e8a:	mov    QWORD PTR [rsp+0x18],r8
   140027e8f:	push   rdi
   140027e90:	sub    rsp,0x20
   140027e94:	mov    rax,QWORD PTR [rcx+0x8]
   140027e98:	mov    rdi,rdx
   140027e9b:	mov    rbx,rcx
   140027e9e:	cmp    r8,QWORD PTR [rax]
   140027ea1:	jne    0x140027ec5
   140027ea3:	cmp    r9,rax
   140027ea6:	jne    0x140027ec5
   140027ea8:	call   0x140028860
   140027ead:	mov    r11,QWORD PTR [rbx+0x8]
   140027eb1:	mov    rax,QWORD PTR [r11]
   140027eb4:	mov    QWORD PTR [rdi],rax
   140027eb7:	mov    rax,rdi
   140027eba:	mov    rbx,QWORD PTR [rsp+0x38]
   140027ebf:	add    rsp,0x20
   140027ec3:	pop    rdi
   140027ec4:	ret    
   140027ec5:	cmp    r8,r9
   140027ec8:	je     0x140027f49
   140027eca:	nop    WORD PTR [rax+rax*1+0x0]
   140027ed0:	cmp    BYTE PTR [r8+0x1d],0x0
   140027ed5:	mov    rax,r8
   140027ed8:	jne    0x140027f2d
   140027eda:	mov    rdx,QWORD PTR [r8+0x10]
   140027ede:	cmp    BYTE PTR [rdx+0x1d],0x0
   140027ee2:	jne    0x140027f03
   140027ee4:	mov    rcx,QWORD PTR [rdx]
   140027ee7:	cmp    BYTE PTR [rcx+0x1d],0x0
   140027eeb:	jne    0x140027efc
   140027eed:	nop    DWORD PTR [rax]
   140027ef0:	mov    rdx,rcx
   140027ef3:	mov    rcx,QWORD PTR [rcx]
   140027ef6:	cmp    BYTE PTR [rcx+0x1d],0x0
   140027efa:	je     0x140027ef0
   140027efc:	mov    QWORD PTR [rsp+0x40],rdx
   140027f01:	jmp    0x140027f2d
   140027f03:	mov    rcx,QWORD PTR [r8+0x8]
   140027f07:	cmp    BYTE PTR [rcx+0x1d],0x0
   140027f0b:	jne    0x140027f28
   140027f0d:	nop    DWORD PTR [rax]
   140027f10:	cmp    r8,QWORD PTR [rcx+0x10]
   140027f14:	jne    0x140027f28
   140027f16:	mov    QWORD PTR [rsp+0x40],rcx
   140027f1b:	mov    r8,rcx
   140027f1e:	mov    rcx,QWORD PTR [rcx+0x8]
   140027f22:	cmp    BYTE PTR [rcx+0x1d],0x0
   140027f26:	je     0x140027f10
   140027f28:	mov    QWORD PTR [rsp+0x40],rcx
   140027f2d:	lea    rdx,[rsp+0x30]
   140027f32:	mov    r8,rax
   140027f35:	mov    rcx,rbx
   140027f38:	call   0x140028500
   140027f3d:	mov    r8,QWORD PTR [rsp+0x40]
   140027f42:	cmp    r8,QWORD PTR [rsp+0x48]
   140027f47:	jne    0x140027ed0
   140027f49:	mov    rbx,QWORD PTR [rsp+0x38]
   140027f4e:	mov    QWORD PTR [rdi],r8
   140027f51:	mov    rax,rdi
   140027f54:	add    rsp,0x20
   140027f58:	pop    rdi
   140027f59:	ret    
   140027f5a:	int3   
   140027f5b:	int3   
   140027f5c:	int3   
   140027f5d:	int3   
   140027f5e:	int3   
   140027f5f:	int3   
   140027f60:	mov    QWORD PTR [rsp+0x8],rbx
   140027f65:	mov    QWORD PTR [rsp+0x10],rsi
   140027f6a:	push   rdi
   140027f6b:	sub    rsp,0x20
   140027f6f:	mov    rbx,QWORD PTR [rcx+0x8]
   140027f73:	mov    rdi,rdx
   140027f76:	mov    rdx,QWORD PTR [rdx+0x8]
   140027f7a:	mov    rdx,QWORD PTR [rdx+0x8]
   140027f7e:	mov    r8,rbx
   140027f81:	mov    rsi,rcx
   140027f84:	call   0x1400288e0
   140027f89:	mov    QWORD PTR [rbx+0x8],rax
   140027f8d:	mov    rax,QWORD PTR [rdi+0x10]
   140027f91:	mov    rdx,QWORD PTR [rsi+0x8]
   140027f95:	mov    QWORD PTR [rsi+0x10],rax
   140027f99:	mov    rcx,QWORD PTR [rdx+0x8]
   140027f9d:	cmp    BYTE PTR [rcx+0x1d],0x0
   140027fa1:	jne    0x140027ff2
   140027fa3:	mov    rax,QWORD PTR [rcx]
   140027fa6:	cmp    BYTE PTR [rax+0x1d],0x0
   140027faa:	jne    0x140027fbc
   140027fac:	nop    DWORD PTR [rax+0x0]
   140027fb0:	mov    rcx,rax
   140027fb3:	mov    rax,QWORD PTR [rax]
   140027fb6:	cmp    BYTE PTR [rax+0x1d],0x0
   140027fba:	je     0x140027fb0
   140027fbc:	mov    QWORD PTR [rdx],rcx
   140027fbf:	mov    rdx,QWORD PTR [rsi+0x8]
   140027fc3:	mov    rcx,QWORD PTR [rdx+0x8]
   140027fc7:	mov    rax,QWORD PTR [rcx+0x10]
   140027fcb:	cmp    BYTE PTR [rax+0x1d],0x0
   140027fcf:	jne    0x140027fde
   140027fd1:	mov    rcx,rax
   140027fd4:	mov    rax,QWORD PTR [rax+0x10]
   140027fd8:	cmp    BYTE PTR [rax+0x1d],0x0
   140027fdc:	je     0x140027fd1
   140027fde:	mov    QWORD PTR [rdx+0x10],rcx
   140027fe2:	mov    rbx,QWORD PTR [rsp+0x30]
   140027fe7:	mov    rsi,QWORD PTR [rsp+0x38]
   140027fec:	add    rsp,0x20
   140027ff0:	pop    rdi
   140027ff1:	ret    
   140027ff2:	mov    rbx,QWORD PTR [rsp+0x30]
   140027ff7:	mov    QWORD PTR [rdx],rdx
   140027ffa:	mov    rax,QWORD PTR [rsi+0x8]
   140027ffe:	mov    rsi,QWORD PTR [rsp+0x38]
   140028003:	mov    QWORD PTR [rax+0x10],rax
   140028007:	add    rsp,0x20
   14002800b:	pop    rdi
   14002800c:	ret    
   14002800d:	int3   
   14002800e:	int3   
   14002800f:	int3   
   140028010:	rex push rbx
   140028012:	sub    rsp,0x40
   140028016:	mov    rbx,rcx
   140028019:	mov    QWORD PTR [rcx+0x10],0x0
   140028021:	mov    ecx,0x20
   140028026:	call   0x1400331a0
   14002802b:	test   rax,rax
   14002802e:	je     0x140028060
   140028030:	mov    QWORD PTR [rbx+0x8],rax
   140028034:	mov    QWORD PTR [rax],rax
   140028037:	mov    rax,QWORD PTR [rbx+0x8]
   14002803b:	mov    QWORD PTR [rax+0x8],rax
   14002803f:	mov    rax,QWORD PTR [rbx+0x8]
   140028043:	mov    QWORD PTR [rax+0x10],rax
   140028047:	mov    rax,QWORD PTR [rbx+0x8]
   14002804b:	mov    BYTE PTR [rax+0x1c],0x1
   14002804f:	mov    rax,QWORD PTR [rbx+0x8]
   140028053:	mov    BYTE PTR [rax+0x1d],0x1
   140028057:	mov    rax,rbx
   14002805a:	add    rsp,0x40
   14002805e:	pop    rbx
   14002805f:	ret    
   140028060:	lea    rdx,[rsp+0x50]
   140028065:	lea    rcx,[rsp+0x20]
   14002806a:	mov    QWORD PTR [rsp+0x50],0x0
   140028073:	call   0x140032fd4
   140028078:	lea    r11,[rip+0x40811]        # 0x140068890
   14002807f:	lea    rdx,[rip+0x5b39a]        # 0x140083420
   140028086:	lea    rcx,[rsp+0x20]
   14002808b:	mov    QWORD PTR [rsp+0x20],r11
   140028090:	call   0x140036358
   140028095:	int3   
   140028096:	int3   
   140028097:	int3   
   140028098:	int3   
   140028099:	int3   
   14002809a:	int3   
   14002809b:	int3   
   14002809c:	int3   
   14002809d:	int3   
   14002809e:	int3   
   14002809f:	int3   
   1400280a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400280a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400280aa:	push   rdi
   1400280ab:	sub    rsp,0x20
   1400280af:	mov    rax,QWORD PTR [rcx]
   1400280b2:	xor    esi,esi
   1400280b4:	mov    rbx,rdx
   1400280b7:	mov    rdi,rcx
   1400280ba:	test   rax,rax
   1400280bd:	je     0x1400280e3
   1400280bf:	mov    rax,QWORD PTR [rax]
   1400280c2:	test   rax,rax
   1400280c5:	jne    0x1400280e0
   1400280c7:	lea    edx,[rsi+0x3]
   1400280ca:	lea    rcx,[rsp+0x30]
   1400280cf:	call   0x140032e78
   1400280d4:	lea    rcx,[rsp+0x30]
   1400280d9:	call   0x140032ea8
   1400280de:	jmp    0x1400280e3
   1400280e0:	mov    rsi,QWORD PTR [rax]
   1400280e3:	mov    rdi,QWORD PTR [rdi+0x10]
   1400280e7:	mov    QWORD PTR [rbx],0x0
   1400280ee:	mov    QWORD PTR [rbx+0x8],0x0
   1400280f6:	dec    rdi
   1400280f9:	test   rsi,rsi
   1400280fc:	je     0x140028125
   1400280fe:	mov    rax,QWORD PTR [rsi]
   140028101:	test   rax,rax
   140028104:	jne    0x14002811f
   140028106:	lea    edx,[rax+0x3]
   140028109:	lea    rcx,[rsp+0x30]
   14002810e:	call   0x140032e78
   140028113:	lea    rcx,[rsp+0x30]
   140028118:	call   0x140032ea8
   14002811d:	jmp    0x140028125
   14002811f:	mov    rax,QWORD PTR [rax]
   140028122:	mov    QWORD PTR [rbx],rax
   140028125:	mov    rsi,QWORD PTR [rsp+0x40]
   14002812a:	mov    QWORD PTR [rbx+0x10],rdi
   14002812e:	mov    rax,rbx
   140028131:	mov    rbx,QWORD PTR [rsp+0x38]
   140028136:	add    rsp,0x20
   14002813a:	pop    rdi
   14002813b:	ret    
   14002813c:	int3   
   14002813d:	int3   
   14002813e:	int3   
   14002813f:	int3   
   140028140:	sub    rsp,0x48
   140028144:	xor    eax,eax
   140028146:	test   rcx,rcx
   140028149:	je     0x140028191
   14002814b:	cmp    rcx,0xffffffffffffffff
   14002814f:	ja     0x14002815b
   140028151:	call   0x1400331a0
   140028156:	test   rax,rax
   140028159:	jne    0x140028191
   14002815b:	lea    rdx,[rsp+0x50]
   140028160:	lea    rcx,[rsp+0x20]
   140028165:	mov    QWORD PTR [rsp+0x50],0x0
   14002816e:	call   0x140032fd4
   140028173:	lea    r11,[rip+0x40716]        # 0x140068890
   14002817a:	lea    rdx,[rip+0x5b29f]        # 0x140083420
   140028181:	lea    rcx,[rsp+0x20]
   140028186:	mov    QWORD PTR [rsp+0x20],r11
   14002818b:	call   0x140036358
   140028190:	int3   
   140028191:	add    rsp,0x48
   140028195:	ret    
   140028196:	int3   
   140028197:	int3   
   140028198:	int3   
   140028199:	int3   
   14002819a:	int3   
   14002819b:	int3   
   14002819c:	int3   
   14002819d:	int3   
   14002819e:	int3   
   14002819f:	int3   
   1400281a0:	mov    QWORD PTR [rsp+0x18],r8
   1400281a5:	push   rsi
   1400281a6:	push   rdi
   1400281a7:	push   r12
   1400281a9:	sub    rsp,0x30
   1400281ad:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400281b6:	mov    QWORD PTR [rsp+0x50],rbx
   1400281bb:	mov    QWORD PTR [rsp+0x58],rbp
   1400281c0:	mov    r12,rdx
   1400281c3:	mov    rsi,rcx
   1400281c6:	cmp    BYTE PTR [r8+0x41],0x0
   1400281cb:	je     0x1400281da
   1400281cd:	lea    rcx,[rip+0x430dc]        # 0x14006b2b0
   1400281d4:	call   0x140032d5c
   1400281d9:	int3   
   1400281da:	mov    rbp,r8
   1400281dd:	lea    rcx,[r8+0x10]
   1400281e1:	mov    rdx,QWORD PTR [rcx]
   1400281e4:	cmp    BYTE PTR [rdx+0x41],0x0
   1400281e8:	jne    0x140028201
   1400281ea:	mov    rax,QWORD PTR [rdx]
   1400281ed:	cmp    BYTE PTR [rax+0x41],0x0
   1400281f1:	jne    0x140028228
   1400281f3:	mov    rdx,rax
   1400281f6:	mov    rax,QWORD PTR [rax]
   1400281f9:	cmp    BYTE PTR [rax+0x41],0x0
   1400281fd:	je     0x1400281f3
   1400281ff:	jmp    0x140028228
   140028201:	mov    rdx,QWORD PTR [r8+0x8]
   140028205:	cmp    BYTE PTR [rdx+0x41],0x0
   140028209:	jne    0x140028228
   14002820b:	nop    DWORD PTR [rax+rax*1+0x0]
   140028210:	cmp    r8,QWORD PTR [rdx+0x10]
   140028214:	jne    0x140028228
   140028216:	mov    r8,rdx
   140028219:	mov    QWORD PTR [rsp+0x60],rdx
   14002821e:	mov    rdx,QWORD PTR [rdx+0x8]
   140028222:	cmp    BYTE PTR [rdx+0x41],0x0
   140028226:	je     0x140028210
   140028228:	mov    QWORD PTR [rsp+0x60],rdx
   14002822d:	mov    r8,QWORD PTR [rbp+0x0]
   140028231:	cmp    BYTE PTR [r8+0x41],0x0
   140028236:	je     0x14002823d
   140028238:	mov    rdi,QWORD PTR [rcx]
   14002823b:	jmp    0x140028258
   14002823d:	mov    rax,QWORD PTR [rcx]
   140028240:	cmp    BYTE PTR [rax+0x41],0x0
   140028244:	je     0x14002824b
   140028246:	mov    rdi,r8
   140028249:	jmp    0x140028258
   14002824b:	mov    rdi,QWORD PTR [rdx+0x10]
   14002824f:	cmp    rdx,rbp
   140028252:	jne    0x1400282f3
   140028258:	mov    rbx,QWORD PTR [rbp+0x8]
   14002825c:	cmp    BYTE PTR [rdi+0x41],0x0
   140028260:	jne    0x140028266
   140028262:	mov    QWORD PTR [rdi+0x8],rbx
   140028266:	mov    rax,QWORD PTR [rsi+0x8]
   14002826a:	cmp    QWORD PTR [rax+0x8],rbp
   14002826e:	jne    0x140028276
   140028270:	mov    QWORD PTR [rax+0x8],rdi
   140028274:	jmp    0x140028284
   140028276:	cmp    QWORD PTR [rbx],rbp
   140028279:	jne    0x140028280
   14002827b:	mov    QWORD PTR [rbx],rdi
   14002827e:	jmp    0x140028284
   140028280:	mov    QWORD PTR [rbx+0x10],rdi
   140028284:	mov    rdx,QWORD PTR [rsi+0x8]
   140028288:	cmp    QWORD PTR [rdx],rbp
   14002828b:	jne    0x1400282b3
   14002828d:	cmp    BYTE PTR [rdi+0x41],0x0
   140028291:	je     0x140028298
   140028293:	mov    rcx,rbx
   140028296:	jmp    0x1400282b0
   140028298:	mov    rcx,rdi
   14002829b:	mov    rax,QWORD PTR [rdi]
   14002829e:	cmp    BYTE PTR [rax+0x41],0x0
   1400282a2:	jne    0x1400282b0
   1400282a4:	mov    rcx,rax
   1400282a7:	mov    rax,QWORD PTR [rax]
   1400282aa:	cmp    BYTE PTR [rax+0x41],0x0
   1400282ae:	je     0x1400282a4
   1400282b0:	mov    QWORD PTR [rdx],rcx
   1400282b3:	mov    rdx,QWORD PTR [rsi+0x8]
   1400282b7:	cmp    QWORD PTR [rdx+0x10],rbp
   1400282bb:	jne    0x14002835f
   1400282c1:	cmp    BYTE PTR [rdi+0x41],0x0
   1400282c5:	je     0x1400282cc
   1400282c7:	mov    rcx,rbx
   1400282ca:	jmp    0x1400282ed
   1400282cc:	mov    rcx,rdi
   1400282cf:	mov    rax,QWORD PTR [rdi+0x10]
   1400282d3:	cmp    BYTE PTR [rax+0x41],0x0
   1400282d7:	jne    0x1400282ed
   1400282d9:	nop    DWORD PTR [rax+0x0]
   1400282e0:	mov    rcx,rax
   1400282e3:	mov    rax,QWORD PTR [rax+0x10]
   1400282e7:	cmp    BYTE PTR [rax+0x41],0x0
   1400282eb:	je     0x1400282e0
   1400282ed:	mov    QWORD PTR [rdx+0x10],rcx
   1400282f1:	jmp    0x14002835f
   1400282f3:	mov    QWORD PTR [r8+0x8],rdx
   1400282f7:	mov    rax,QWORD PTR [rbp+0x0]
   1400282fb:	mov    QWORD PTR [rdx],rax
   1400282fe:	cmp    rdx,QWORD PTR [rcx]
   140028301:	jne    0x140028308
   140028303:	mov    rbx,rdx
   140028306:	jmp    0x140028327
   140028308:	mov    rbx,QWORD PTR [rdx+0x8]
   14002830c:	cmp    BYTE PTR [rdi+0x41],0x0
   140028310:	jne    0x140028316
   140028312:	mov    QWORD PTR [rdi+0x8],rbx
   140028316:	mov    QWORD PTR [rbx],rdi
   140028319:	mov    rax,QWORD PTR [rcx]
   14002831c:	mov    QWORD PTR [rdx+0x10],rax
   140028320:	mov    rax,QWORD PTR [rcx]
   140028323:	mov    QWORD PTR [rax+0x8],rdx
   140028327:	mov    rax,QWORD PTR [rsi+0x8]
   14002832b:	cmp    QWORD PTR [rax+0x8],rbp
   14002832f:	jne    0x140028337
   140028331:	mov    QWORD PTR [rax+0x8],rdx
   140028335:	jmp    0x140028349
   140028337:	mov    rax,QWORD PTR [rbp+0x8]
   14002833b:	cmp    QWORD PTR [rax],rbp
   14002833e:	jne    0x140028345
   140028340:	mov    QWORD PTR [rax],rdx
   140028343:	jmp    0x140028349
   140028345:	mov    QWORD PTR [rax+0x10],rdx
   140028349:	mov    rax,QWORD PTR [rbp+0x8]
   14002834d:	mov    QWORD PTR [rdx+0x8],rax
   140028351:	movzx  ecx,BYTE PTR [rdx+0x40]
   140028355:	movzx  eax,BYTE PTR [rbp+0x40]
   140028359:	mov    BYTE PTR [rdx+0x40],al
   14002835c:	mov    BYTE PTR [rbp+0x40],cl
   14002835f:	cmp    BYTE PTR [rbp+0x40],0x1
   140028363:	jne    0x140028492
   140028369:	mov    rax,QWORD PTR [rsi+0x8]
   14002836d:	cmp    rdi,QWORD PTR [rax+0x8]
   140028371:	je     0x14002848e
   140028377:	cmp    BYTE PTR [rdi+0x40],0x1
   14002837b:	jne    0x14002848e
   140028381:	mov    rcx,QWORD PTR [rbx]
   140028384:	cmp    rdi,rcx
   140028387:	jne    0x1400283c5
   140028389:	mov    rcx,QWORD PTR [rbx+0x10]
   14002838d:	cmp    BYTE PTR [rcx+0x40],0x0
   140028391:	jne    0x1400283aa
   140028393:	mov    BYTE PTR [rcx+0x40],0x1
   140028397:	mov    BYTE PTR [rbx+0x40],0x0
   14002839b:	mov    rdx,rbx
   14002839e:	mov    rcx,rsi
   1400283a1:	call   0x140028a10
   1400283a6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400283aa:	cmp    BYTE PTR [rcx+0x41],0x0
   1400283ae:	jne    0x1400283fe
   1400283b0:	mov    rax,QWORD PTR [rcx]
   1400283b3:	cmp    BYTE PTR [rax+0x40],0x1
   1400283b7:	jne    0x14002840a
   1400283b9:	mov    rax,QWORD PTR [rcx+0x10]
   1400283bd:	cmp    BYTE PTR [rax+0x40],0x1
   1400283c1:	jne    0x14002840a
   1400283c3:	jmp    0x1400283fa
   1400283c5:	cmp    BYTE PTR [rcx+0x40],0x0
   1400283c9:	jne    0x1400283e1
   1400283cb:	mov    BYTE PTR [rcx+0x40],0x1
   1400283cf:	mov    BYTE PTR [rbx+0x40],0x0
   1400283d3:	mov    rdx,rbx
   1400283d6:	mov    rcx,rsi
   1400283d9:	call   0x14002ba10
   1400283de:	mov    rcx,QWORD PTR [rbx]
   1400283e1:	cmp    BYTE PTR [rcx+0x41],0x0
   1400283e5:	jne    0x1400283fe
   1400283e7:	mov    rax,QWORD PTR [rcx+0x10]
   1400283eb:	cmp    BYTE PTR [rax+0x40],0x1
   1400283ef:	jne    0x14002844e
   1400283f1:	mov    rax,QWORD PTR [rcx]
   1400283f4:	cmp    BYTE PTR [rax+0x40],0x1
   1400283f8:	jne    0x14002844e
   1400283fa:	mov    BYTE PTR [rcx+0x40],0x0
   1400283fe:	mov    rdi,rbx
   140028401:	mov    rbx,QWORD PTR [rbx+0x8]
   140028405:	jmp    0x140028369
   14002840a:	mov    rax,QWORD PTR [rcx+0x10]
   14002840e:	cmp    BYTE PTR [rax+0x40],0x1
   140028412:	jne    0x14002842e
   140028414:	mov    rax,QWORD PTR [rcx]
   140028417:	mov    BYTE PTR [rax+0x40],0x1
   14002841b:	mov    BYTE PTR [rcx+0x40],0x0
   14002841f:	mov    rdx,rcx
   140028422:	mov    rcx,rsi
   140028425:	call   0x14002ba10
   14002842a:	mov    rcx,QWORD PTR [rbx+0x10]
   14002842e:	movzx  eax,BYTE PTR [rbx+0x40]
   140028432:	mov    BYTE PTR [rcx+0x40],al
   140028435:	mov    BYTE PTR [rbx+0x40],0x1
   140028439:	mov    rax,QWORD PTR [rcx+0x10]
   14002843d:	mov    BYTE PTR [rax+0x40],0x1
   140028441:	mov    rdx,rbx
   140028444:	mov    rcx,rsi
   140028447:	call   0x140028a10
   14002844c:	jmp    0x14002848e
   14002844e:	mov    rax,QWORD PTR [rcx]
   140028451:	cmp    BYTE PTR [rax+0x40],0x1
   140028455:	jne    0x140028471
   140028457:	mov    rax,QWORD PTR [rcx+0x10]
   14002845b:	mov    BYTE PTR [rax+0x40],0x1
   14002845f:	mov    BYTE PTR [rcx+0x40],0x0
   140028463:	mov    rdx,rcx
   140028466:	mov    rcx,rsi
   140028469:	call   0x140028a10
   14002846e:	mov    rcx,QWORD PTR [rbx]
   140028471:	movzx  eax,BYTE PTR [rbx+0x40]
   140028475:	mov    BYTE PTR [rcx+0x40],al
   140028478:	mov    BYTE PTR [rbx+0x40],0x1
   14002847c:	mov    rax,QWORD PTR [rcx]
   14002847f:	mov    BYTE PTR [rax+0x40],0x1
   140028483:	mov    rdx,rbx
   140028486:	mov    rcx,rsi
   140028489:	call   0x14002ba10
   14002848e:	mov    BYTE PTR [rdi+0x40],0x1
   140028492:	lea    rbx,[rbp+0x20]
   140028496:	mov    QWORD PTR [rsp+0x68],rbx
   14002849b:	mov    r8,QWORD PTR [rbx+0x8]
   14002849f:	mov    r9,r8
   1400284a2:	mov    r8,QWORD PTR [r8]
   1400284a5:	lea    rdx,[rsp+0x28]
   1400284aa:	mov    rcx,rbx
   1400284ad:	call   0x140027e80
   1400284b2:	nop
   1400284b3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400284b7:	call   0x1400330c0
   1400284bc:	mov    rcx,rbp
   1400284bf:	call   0x1400330c0
   1400284c4:	mov    rax,QWORD PTR [rsi+0x10]
   1400284c8:	test   rax,rax
   1400284cb:	je     0x1400284d4
   1400284cd:	dec    rax
   1400284d0:	mov    QWORD PTR [rsi+0x10],rax
   1400284d4:	mov    rax,QWORD PTR [rsp+0x60]
   1400284d9:	mov    QWORD PTR [r12],rax
   1400284dd:	mov    rax,r12
   1400284e0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400284e5:	mov    rbp,QWORD PTR [rsp+0x58]
   1400284ea:	add    rsp,0x30
   1400284ee:	pop    r12
   1400284f0:	pop    rdi
   1400284f1:	pop    rsi
   1400284f2:	ret    
   1400284f3:	int3   
   1400284f4:	int3   
   1400284f5:	int3   
   1400284f6:	int3   
   1400284f7:	int3   
   1400284f8:	int3   
   1400284f9:	int3   
   1400284fa:	int3   
   1400284fb:	int3   
   1400284fc:	int3   
   1400284fd:	int3   
   1400284fe:	int3   
   1400284ff:	int3   
   140028500:	mov    QWORD PTR [rsp+0x18],r8
   140028505:	push   rsi
   140028506:	push   r12
   140028508:	sub    rsp,0x28
   14002850c:	cmp    BYTE PTR [r8+0x1d],0x0
   140028511:	mov    r12,rdx
   140028514:	mov    rsi,rcx
   140028517:	je     0x140028526
   140028519:	lea    rcx,[rip+0x42d90]        # 0x14006b2b0
   140028520:	call   0x140032d5c
   140028525:	int3   
   140028526:	mov    rdx,QWORD PTR [r8+0x10]
   14002852a:	lea    r9,[r8+0x10]
   14002852e:	mov    QWORD PTR [rsp+0x48],rbp
   140028533:	cmp    BYTE PTR [rdx+0x1d],0x0
   140028537:	mov    rbp,r8
   14002853a:	jne    0x14002855e
   14002853c:	mov    rax,QWORD PTR [rdx]
   14002853f:	cmp    BYTE PTR [rax+0x1d],0x0
   140028543:	jne    0x140028580
   140028545:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140028550:	mov    rdx,rax
   140028553:	mov    rax,QWORD PTR [rax]
   140028556:	cmp    BYTE PTR [rax+0x1d],0x0
   14002855a:	je     0x140028550
   14002855c:	jmp    0x140028580
   14002855e:	mov    rdx,QWORD PTR [r8+0x8]
   140028562:	cmp    BYTE PTR [rdx+0x1d],0x0
   140028566:	jne    0x140028580
   140028568:	cmp    r8,QWORD PTR [rdx+0x10]
   14002856c:	jne    0x140028580
   14002856e:	mov    QWORD PTR [rsp+0x50],rdx
   140028573:	mov    r8,rdx
   140028576:	mov    rdx,QWORD PTR [rdx+0x8]
   14002857a:	cmp    BYTE PTR [rdx+0x1d],0x0
   14002857e:	je     0x140028568
   140028580:	mov    QWORD PTR [rsp+0x50],rdx
   140028585:	mov    rcx,QWORD PTR [rbp+0x0]
   140028589:	mov    QWORD PTR [rsp+0x40],rbx
   14002858e:	cmp    BYTE PTR [rcx+0x1d],0x0
   140028592:	mov    QWORD PTR [rsp+0x20],rdi
   140028597:	je     0x14002859e
   140028599:	mov    rdi,QWORD PTR [r9]
   14002859c:	jmp    0x1400285b9
   14002859e:	mov    rax,QWORD PTR [r9]
   1400285a1:	cmp    BYTE PTR [rax+0x1d],0x0
   1400285a5:	je     0x1400285ac
   1400285a7:	mov    rdi,rcx
   1400285aa:	jmp    0x1400285b9
   1400285ac:	mov    rdi,QWORD PTR [rdx+0x10]
   1400285b0:	cmp    rdx,rbp
   1400285b3:	jne    0x140028663
   1400285b9:	cmp    BYTE PTR [rdi+0x1d],0x0
   1400285bd:	mov    rbx,QWORD PTR [rbp+0x8]
   1400285c1:	jne    0x1400285c7
   1400285c3:	mov    QWORD PTR [rdi+0x8],rbx
   1400285c7:	mov    rax,QWORD PTR [rsi+0x8]
   1400285cb:	cmp    QWORD PTR [rax+0x8],rbp
   1400285cf:	jne    0x1400285d7
   1400285d1:	mov    QWORD PTR [rax+0x8],rdi
   1400285d5:	jmp    0x1400285e5
   1400285d7:	cmp    QWORD PTR [rbx],rbp
   1400285da:	jne    0x1400285e1
   1400285dc:	mov    QWORD PTR [rbx],rdi
   1400285df:	jmp    0x1400285e5
   1400285e1:	mov    QWORD PTR [rbx+0x10],rdi
   1400285e5:	mov    rdx,QWORD PTR [rsi+0x8]
   1400285e9:	cmp    QWORD PTR [rdx],rbp
   1400285ec:	jne    0x14002861f
   1400285ee:	cmp    BYTE PTR [rdi+0x1d],0x0
   1400285f2:	je     0x1400285f9
   1400285f4:	mov    rcx,rbx
   1400285f7:	jmp    0x14002861c
   1400285f9:	mov    rax,QWORD PTR [rdi]
   1400285fc:	mov    rcx,rdi
   1400285ff:	cmp    BYTE PTR [rax+0x1d],0x0
   140028603:	jne    0x14002861c
   140028605:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140028610:	mov    rcx,rax
   140028613:	mov    rax,QWORD PTR [rax]
   140028616:	cmp    BYTE PTR [rax+0x1d],0x0
   14002861a:	je     0x140028610
   14002861c:	mov    QWORD PTR [rdx],rcx
   14002861f:	mov    rdx,QWORD PTR [rsi+0x8]
   140028623:	cmp    QWORD PTR [rdx+0x10],rbp
   140028627:	jne    0x1400286cf
   14002862d:	cmp    BYTE PTR [rdi+0x1d],0x0
   140028631:	je     0x14002863f
   140028633:	mov    rcx,rbx
   140028636:	mov    QWORD PTR [rdx+0x10],rbx
   14002863a:	jmp    0x1400286cf
   14002863f:	mov    rax,QWORD PTR [rdi+0x10]
   140028643:	mov    rcx,rdi
   140028646:	cmp    BYTE PTR [rax+0x1d],0x0
   14002864a:	jne    0x14002865d
   14002864c:	nop    DWORD PTR [rax+0x0]
   140028650:	mov    rcx,rax
   140028653:	mov    rax,QWORD PTR [rax+0x10]
   140028657:	cmp    BYTE PTR [rax+0x1d],0x0
   14002865b:	je     0x140028650
   14002865d:	mov    QWORD PTR [rdx+0x10],rcx
   140028661:	jmp    0x1400286cf
   140028663:	mov    QWORD PTR [rcx+0x8],rdx
   140028667:	mov    rax,QWORD PTR [rbp+0x0]
   14002866b:	mov    QWORD PTR [rdx],rax
   14002866e:	cmp    rdx,QWORD PTR [r9]
   140028671:	jne    0x140028678
   140028673:	mov    rbx,rdx
   140028676:	jmp    0x140028697
   140028678:	cmp    BYTE PTR [rdi+0x1d],0x0
   14002867c:	mov    rbx,QWORD PTR [rdx+0x8]
   140028680:	jne    0x140028686
   140028682:	mov    QWORD PTR [rdi+0x8],rbx
   140028686:	mov    QWORD PTR [rbx],rdi
   140028689:	mov    rax,QWORD PTR [r9]
   14002868c:	mov    QWORD PTR [rdx+0x10],rax
   140028690:	mov    rax,QWORD PTR [r9]
   140028693:	mov    QWORD PTR [rax+0x8],rdx
   140028697:	mov    rax,QWORD PTR [rsi+0x8]
   14002869b:	cmp    QWORD PTR [rax+0x8],rbp
   14002869f:	jne    0x1400286a7
   1400286a1:	mov    QWORD PTR [rax+0x8],rdx
   1400286a5:	jmp    0x1400286b9
   1400286a7:	mov    rax,QWORD PTR [rbp+0x8]
   1400286ab:	cmp    QWORD PTR [rax],rbp
   1400286ae:	jne    0x1400286b5
   1400286b0:	mov    QWORD PTR [rax],rdx
   1400286b3:	jmp    0x1400286b9
   1400286b5:	mov    QWORD PTR [rax+0x10],rdx
   1400286b9:	mov    rax,QWORD PTR [rbp+0x8]
   1400286bd:	mov    QWORD PTR [rdx+0x8],rax
   1400286c1:	movzx  eax,BYTE PTR [rbp+0x1c]
   1400286c5:	movzx  ecx,BYTE PTR [rdx+0x1c]
   1400286c9:	mov    BYTE PTR [rdx+0x1c],al
   1400286cc:	mov    BYTE PTR [rbp+0x1c],cl
   1400286cf:	cmp    BYTE PTR [rbp+0x1c],0x1
   1400286d3:	jne    0x14002881f
   1400286d9:	mov    rax,QWORD PTR [rsi+0x8]
   1400286dd:	cmp    rdi,QWORD PTR [rax+0x8]
   1400286e1:	je     0x14002881b
   1400286e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400286f0:	cmp    BYTE PTR [rdi+0x1c],0x1
   1400286f4:	jne    0x14002881b
   1400286fa:	mov    rcx,QWORD PTR [rbx]
   1400286fd:	cmp    rdi,rcx
   140028700:	jne    0x14002878b
   140028706:	mov    rcx,QWORD PTR [rbx+0x10]
   14002870a:	cmp    BYTE PTR [rcx+0x1c],0x0
   14002870e:	jne    0x140028727
   140028710:	mov    BYTE PTR [rcx+0x1c],0x1
   140028714:	mov    rdx,rbx
   140028717:	mov    rcx,rsi
   14002871a:	mov    BYTE PTR [rbx+0x1c],0x0
   14002871e:	call   0x140028ac0
   140028723:	mov    rcx,QWORD PTR [rbx+0x10]
   140028727:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002872b:	jne    0x1400287c4
   140028731:	mov    rax,QWORD PTR [rcx]
   140028734:	cmp    BYTE PTR [rax+0x1c],0x1
   140028738:	jne    0x140028744
   14002873a:	mov    rax,QWORD PTR [rcx+0x10]
   14002873e:	cmp    BYTE PTR [rax+0x1c],0x1
   140028742:	je     0x1400287c0
   140028744:	mov    rax,QWORD PTR [rcx+0x10]
   140028748:	cmp    BYTE PTR [rax+0x1c],0x1
   14002874c:	jne    0x140028768
   14002874e:	mov    rax,QWORD PTR [rcx]
   140028751:	mov    rdx,rcx
   140028754:	mov    BYTE PTR [rax+0x1c],0x1
   140028758:	mov    BYTE PTR [rcx+0x1c],0x0
   14002875c:	mov    rcx,rsi
   14002875f:	call   0x140028b20
   140028764:	mov    rcx,QWORD PTR [rbx+0x10]
   140028768:	movzx  eax,BYTE PTR [rbx+0x1c]
   14002876c:	mov    rdx,rbx
   14002876f:	mov    BYTE PTR [rcx+0x1c],al
   140028772:	mov    BYTE PTR [rbx+0x1c],0x1
   140028776:	mov    rax,QWORD PTR [rcx+0x10]
   14002877a:	mov    rcx,rsi
   14002877d:	mov    BYTE PTR [rax+0x1c],0x1
   140028781:	call   0x140028ac0
   140028786:	jmp    0x14002881b
   14002878b:	cmp    BYTE PTR [rcx+0x1c],0x0
   14002878f:	jne    0x1400287a7
   140028791:	mov    BYTE PTR [rcx+0x1c],0x1
   140028795:	mov    rdx,rbx
   140028798:	mov    rcx,rsi
   14002879b:	mov    BYTE PTR [rbx+0x1c],0x0
   14002879f:	call   0x140028b20
   1400287a4:	mov    rcx,QWORD PTR [rbx]
   1400287a7:	cmp    BYTE PTR [rcx+0x1d],0x0
   1400287ab:	jne    0x1400287c4
   1400287ad:	mov    rax,QWORD PTR [rcx+0x10]
   1400287b1:	cmp    BYTE PTR [rax+0x1c],0x1
   1400287b5:	jne    0x1400287db
   1400287b7:	mov    rax,QWORD PTR [rcx]
   1400287ba:	cmp    BYTE PTR [rax+0x1c],0x1
   1400287be:	jne    0x1400287db
   1400287c0:	mov    BYTE PTR [rcx+0x1c],0x0
   1400287c4:	mov    rax,QWORD PTR [rsi+0x8]
   1400287c8:	mov    rdi,rbx
   1400287cb:	mov    rbx,QWORD PTR [rbx+0x8]
   1400287cf:	cmp    rdi,QWORD PTR [rax+0x8]
   1400287d3:	jne    0x1400286f0
   1400287d9:	jmp    0x14002881b
   1400287db:	mov    rax,QWORD PTR [rcx]
   1400287de:	cmp    BYTE PTR [rax+0x1c],0x1
   1400287e2:	jne    0x1400287fe
   1400287e4:	mov    rax,QWORD PTR [rcx+0x10]
   1400287e8:	mov    rdx,rcx
   1400287eb:	mov    BYTE PTR [rax+0x1c],0x1
   1400287ef:	mov    BYTE PTR [rcx+0x1c],0x0
   1400287f3:	mov    rcx,rsi
   1400287f6:	call   0x140028ac0
   1400287fb:	mov    rcx,QWORD PTR [rbx]
   1400287fe:	movzx  eax,BYTE PTR [rbx+0x1c]
   140028802:	mov    rdx,rbx
   140028805:	mov    BYTE PTR [rcx+0x1c],al
   140028808:	mov    BYTE PTR [rbx+0x1c],0x1
   14002880c:	mov    rax,QWORD PTR [rcx]
   14002880f:	mov    rcx,rsi
   140028812:	mov    BYTE PTR [rax+0x1c],0x1
   140028816:	call   0x140028b20
   14002881b:	mov    BYTE PTR [rdi+0x1c],0x1
   14002881f:	mov    rcx,rbp
   140028822:	call   0x1400330c0
   140028827:	mov    rax,QWORD PTR [rsi+0x10]
   14002882b:	mov    rdi,QWORD PTR [rsp+0x20]
   140028830:	mov    rbp,QWORD PTR [rsp+0x48]
   140028835:	mov    rbx,QWORD PTR [rsp+0x40]
   14002883a:	test   rax,rax
   14002883d:	je     0x140028846
   14002883f:	dec    rax
   140028842:	mov    QWORD PTR [rsi+0x10],rax
   140028846:	mov    rax,QWORD PTR [rsp+0x50]
   14002884b:	mov    QWORD PTR [r12],rax
   14002884f:	mov    rax,r12
   140028852:	add    rsp,0x28
   140028856:	pop    r12
   140028858:	pop    rsi
   140028859:	ret    
   14002885a:	int3   
   14002885b:	int3   
   14002885c:	int3   
   14002885d:	int3   
   14002885e:	int3   
   14002885f:	int3   
   140028860:	mov    QWORD PTR [rsp+0x8],rbx
   140028865:	mov    QWORD PTR [rsp+0x10],rsi
   14002886a:	push   rdi
   14002886b:	sub    rsp,0x20
   14002886f:	mov    rax,QWORD PTR [rcx+0x8]
   140028873:	mov    rbx,rcx
   140028876:	mov    rsi,QWORD PTR [rax+0x8]
   14002887a:	mov    rdi,rsi
   14002887d:	cmp    BYTE PTR [rsi+0x1d],0x0
   140028881:	jne    0x1400288a3
   140028883:	mov    rdx,QWORD PTR [rdi+0x10]
   140028887:	mov    rcx,rbx
   14002888a:	call   0x140028a70
   14002888f:	mov    rdi,QWORD PTR [rdi]
   140028892:	mov    rcx,rsi
   140028895:	call   0x1400330c0
   14002889a:	cmp    BYTE PTR [rdi+0x1d],0x0
   14002889e:	mov    rsi,rdi
   1400288a1:	je     0x140028883
   1400288a3:	mov    rax,QWORD PTR [rbx+0x8]
   1400288a7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400288ac:	mov    QWORD PTR [rax+0x8],rax
   1400288b0:	mov    rax,QWORD PTR [rbx+0x8]
   1400288b4:	mov    QWORD PTR [rax],rax
   1400288b7:	mov    rax,QWORD PTR [rbx+0x8]
   1400288bb:	mov    QWORD PTR [rax+0x10],rax
   1400288bf:	mov    QWORD PTR [rbx+0x10],0x0
   1400288c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400288cc:	add    rsp,0x20
   1400288d0:	pop    rdi
   1400288d1:	ret    
   1400288d2:	int3   
   1400288d3:	int3   
   1400288d4:	int3   
   1400288d5:	int3   
   1400288d6:	int3   
   1400288d7:	int3   
   1400288d8:	int3   
   1400288d9:	int3   
   1400288da:	int3   
   1400288db:	int3   
   1400288dc:	int3   
   1400288dd:	int3   
   1400288de:	int3   
   1400288df:	int3   
   1400288e0:	mov    QWORD PTR [rsp+0x18],r8
   1400288e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400288ea:	push   rbx
   1400288eb:	push   rsi
   1400288ec:	push   rdi
   1400288ed:	sub    rsp,0x30
   1400288f1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400288fa:	mov    rsi,rdx
   1400288fd:	mov    rbx,rcx
   140028900:	mov    rax,QWORD PTR [rcx+0x8]
   140028904:	mov    QWORD PTR [rsp+0x58],rax
   140028909:	cmp    BYTE PTR [rdx+0x1d],0x0
   14002890d:	jne    0x14002896b
   14002890f:	add    rdx,0x18
   140028913:	call   0x140028f00
   140028918:	mov    rdi,rax
   14002891b:	mov    rax,QWORD PTR [rsp+0x60]
   140028920:	mov    QWORD PTR [rdi+0x8],rax
   140028924:	movzx  eax,BYTE PTR [rsi+0x1c]
   140028928:	mov    BYTE PTR [rdi+0x1c],al
   14002892b:	mov    rax,QWORD PTR [rsp+0x58]
   140028930:	cmp    BYTE PTR [rax+0x1d],0x0
   140028934:	cmovne rax,rdi
   140028938:	mov    QWORD PTR [rsp+0x58],rax
   14002893d:	mov    QWORD PTR [rsp+0x68],rax
   140028942:	mov    r8,rdi
   140028945:	mov    rdx,QWORD PTR [rsi]
   140028948:	mov    rcx,rbx
   14002894b:	call   0x1400288e0
   140028950:	mov    QWORD PTR [rdi],rax
   140028953:	mov    r8,rdi
   140028956:	mov    rdx,QWORD PTR [rsi+0x10]
   14002895a:	mov    rcx,rbx
   14002895d:	call   0x1400288e0
   140028962:	mov    QWORD PTR [rdi+0x10],rax
   140028966:	mov    rax,QWORD PTR [rsp+0x58]
   14002896b:	add    rsp,0x30
   14002896f:	pop    rdi
   140028970:	pop    rsi
   140028971:	pop    rbx
   140028972:	ret    
   140028973:	int3   
   140028974:	int3   
   140028975:	int3   
   140028976:	int3   
   140028977:	int3   
   140028978:	int3   
   140028979:	int3   
   14002897a:	int3   
   14002897b:	int3   
   14002897c:	int3   
   14002897d:	int3   
   14002897e:	int3   
   14002897f:	int3   
   140028980:	rex push rbp
   140028982:	push   rsi
   140028983:	push   rdi
   140028984:	sub    rsp,0x30
   140028988:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028991:	mov    QWORD PTR [rsp+0x50],rbx
   140028996:	mov    rdi,rdx
   140028999:	mov    rbp,rcx
   14002899c:	mov    rsi,rdx
   14002899f:	cmp    BYTE PTR [rdx+0x41],0x0
   1400289a3:	jne    0x1400289fa
   1400289a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400289b0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400289b4:	mov    rcx,rbp
   1400289b7:	call   0x140028980
   1400289bc:	mov    rsi,QWORD PTR [rsi]
   1400289bf:	lea    rbx,[rdi+0x20]
   1400289c3:	mov    QWORD PTR [rsp+0x58],rbx
   1400289c8:	mov    r8,QWORD PTR [rbx+0x8]
   1400289cc:	mov    r9,r8
   1400289cf:	mov    r8,QWORD PTR [r8]
   1400289d2:	lea    rdx,[rsp+0x60]
   1400289d7:	mov    rcx,rbx
   1400289da:	call   0x140027e80
   1400289df:	nop
   1400289e0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400289e4:	call   0x1400330c0
   1400289e9:	mov    rcx,rdi
   1400289ec:	call   0x1400330c0
   1400289f1:	mov    rdi,rsi
   1400289f4:	cmp    BYTE PTR [rsi+0x41],0x0
   1400289f8:	je     0x1400289b0
   1400289fa:	mov    rbx,QWORD PTR [rsp+0x50]
   1400289ff:	add    rsp,0x30
   140028a03:	pop    rdi
   140028a04:	pop    rsi
   140028a05:	pop    rbp
   140028a06:	ret    
   140028a07:	int3   
   140028a08:	int3   
   140028a09:	int3   
   140028a0a:	int3   
   140028a0b:	int3   
   140028a0c:	int3   
   140028a0d:	int3   
   140028a0e:	int3   
   140028a0f:	int3   
   140028a10:	mov    r8,QWORD PTR [rdx+0x10]
   140028a14:	mov    rax,QWORD PTR [r8]
   140028a17:	mov    QWORD PTR [rdx+0x10],rax
   140028a1b:	mov    rax,QWORD PTR [r8]
   140028a1e:	cmp    BYTE PTR [rax+0x41],0x0
   140028a22:	jne    0x140028a28
   140028a24:	mov    QWORD PTR [rax+0x8],rdx
   140028a28:	mov    rax,QWORD PTR [rdx+0x8]
   140028a2c:	mov    QWORD PTR [r8+0x8],rax
   140028a30:	mov    rax,QWORD PTR [rcx+0x8]
   140028a34:	cmp    rdx,QWORD PTR [rax+0x8]
   140028a38:	jne    0x140028a46
   140028a3a:	mov    QWORD PTR [rax+0x8],r8
   140028a3e:	mov    QWORD PTR [r8],rdx
   140028a41:	mov    QWORD PTR [rdx+0x8],r8
   140028a45:	ret    
   140028a46:	mov    rax,QWORD PTR [rdx+0x8]
   140028a4a:	cmp    rdx,QWORD PTR [rax]
   140028a4d:	jne    0x140028a5a
   140028a4f:	mov    QWORD PTR [rax],r8
   140028a52:	mov    QWORD PTR [r8],rdx
   140028a55:	mov    QWORD PTR [rdx+0x8],r8
   140028a59:	ret    
   140028a5a:	mov    QWORD PTR [rax+0x10],r8
   140028a5e:	mov    QWORD PTR [r8],rdx
   140028a61:	mov    QWORD PTR [rdx+0x8],r8
   140028a65:	ret    
   140028a66:	int3   
   140028a67:	int3   
   140028a68:	int3   
   140028a69:	int3   
   140028a6a:	int3   
   140028a6b:	int3   
   140028a6c:	int3   
   140028a6d:	int3   
   140028a6e:	int3   
   140028a6f:	int3   
   140028a70:	mov    QWORD PTR [rsp+0x8],rbx
   140028a75:	mov    QWORD PTR [rsp+0x10],rsi
   140028a7a:	push   rdi
   140028a7b:	sub    rsp,0x20
   140028a7f:	cmp    BYTE PTR [rdx+0x1d],0x0
   140028a83:	mov    rdi,rdx
   140028a86:	mov    rsi,rcx
   140028a89:	mov    rbx,rdx
   140028a8c:	jne    0x140028ab0
   140028a8e:	xchg   ax,ax
   140028a90:	mov    rdx,QWORD PTR [rbx+0x10]
   140028a94:	mov    rcx,rsi
   140028a97:	call   0x140028a70
   140028a9c:	mov    rbx,QWORD PTR [rbx]
   140028a9f:	mov    rcx,rdi
   140028aa2:	call   0x1400330c0
   140028aa7:	cmp    BYTE PTR [rbx+0x1d],0x0
   140028aab:	mov    rdi,rbx
   140028aae:	je     0x140028a90
   140028ab0:	mov    rbx,QWORD PTR [rsp+0x30]
   140028ab5:	mov    rsi,QWORD PTR [rsp+0x38]
   140028aba:	add    rsp,0x20
   140028abe:	pop    rdi
   140028abf:	ret    
   140028ac0:	mov    r8,QWORD PTR [rdx+0x10]
   140028ac4:	mov    rax,QWORD PTR [r8]
   140028ac7:	mov    QWORD PTR [rdx+0x10],rax
   140028acb:	mov    rax,QWORD PTR [r8]
   140028ace:	cmp    BYTE PTR [rax+0x1d],0x0
   140028ad2:	jne    0x140028ad8
   140028ad4:	mov    QWORD PTR [rax+0x8],rdx
   140028ad8:	mov    rax,QWORD PTR [rdx+0x8]
   140028adc:	mov    QWORD PTR [r8+0x8],rax
   140028ae0:	mov    rax,QWORD PTR [rcx+0x8]
   140028ae4:	cmp    rdx,QWORD PTR [rax+0x8]
   140028ae8:	jne    0x140028af6
   140028aea:	mov    QWORD PTR [rax+0x8],r8
   140028aee:	mov    QWORD PTR [r8],rdx
   140028af1:	mov    QWORD PTR [rdx+0x8],r8
   140028af5:	ret    
   140028af6:	mov    rax,QWORD PTR [rdx+0x8]
   140028afa:	cmp    rdx,QWORD PTR [rax]
   140028afd:	jne    0x140028b0a
   140028aff:	mov    QWORD PTR [rax],r8
   140028b02:	mov    QWORD PTR [r8],rdx
   140028b05:	mov    QWORD PTR [rdx+0x8],r8
   140028b09:	ret    
   140028b0a:	mov    QWORD PTR [rax+0x10],r8
   140028b0e:	mov    QWORD PTR [r8],rdx
   140028b11:	mov    QWORD PTR [rdx+0x8],r8
   140028b15:	ret    
   140028b16:	int3   
   140028b17:	int3   
   140028b18:	int3   
   140028b19:	int3   
   140028b1a:	int3   
   140028b1b:	int3   
   140028b1c:	int3   
   140028b1d:	int3   
   140028b1e:	int3   
   140028b1f:	int3   
   140028b20:	mov    r8,QWORD PTR [rdx]
   140028b23:	mov    rax,QWORD PTR [r8+0x10]
   140028b27:	mov    QWORD PTR [rdx],rax
   140028b2a:	mov    rax,QWORD PTR [r8+0x10]
   140028b2e:	cmp    BYTE PTR [rax+0x1d],0x0
   140028b32:	jne    0x140028b38
   140028b34:	mov    QWORD PTR [rax+0x8],rdx
   140028b38:	mov    rax,QWORD PTR [rdx+0x8]
   140028b3c:	mov    QWORD PTR [r8+0x8],rax
   140028b40:	mov    rax,QWORD PTR [rcx+0x8]
   140028b44:	cmp    rdx,QWORD PTR [rax+0x8]
   140028b48:	jne    0x140028b57
   140028b4a:	mov    QWORD PTR [rax+0x8],r8
   140028b4e:	mov    QWORD PTR [r8+0x10],rdx
   140028b52:	mov    QWORD PTR [rdx+0x8],r8
   140028b56:	ret    
   140028b57:	mov    rax,QWORD PTR [rdx+0x8]
   140028b5b:	cmp    rdx,QWORD PTR [rax+0x10]
   140028b5f:	jne    0x140028b6e
   140028b61:	mov    QWORD PTR [rax+0x10],r8
   140028b65:	mov    QWORD PTR [r8+0x10],rdx
   140028b69:	mov    QWORD PTR [rdx+0x8],r8
   140028b6d:	ret    
   140028b6e:	mov    QWORD PTR [rax],r8
   140028b71:	mov    QWORD PTR [r8+0x10],rdx
   140028b75:	mov    QWORD PTR [rdx+0x8],r8
   140028b79:	ret    
   140028b7a:	int3   
   140028b7b:	int3   
   140028b7c:	int3   
   140028b7d:	int3   
   140028b7e:	int3   
   140028b7f:	int3   
   140028b80:	mov    QWORD PTR [rsp+0x8],rbx
   140028b85:	mov    QWORD PTR [rsp+0x10],rsi
   140028b8a:	push   rdi
   140028b8b:	sub    rsp,0x20
   140028b8f:	mov    r9d,DWORD PTR [rcx+0x10]
   140028b93:	mov    r8,QWORD PTR [rcx]
   140028b96:	mov    ebx,edx
   140028b98:	xor    edx,edx
   140028b9a:	mov    eax,ebx
   140028b9c:	mov    rsi,rcx
   140028b9f:	div    r9d
   140028ba2:	mov    edi,edx
   140028ba4:	test   r8,r8
   140028ba7:	je     0x140028be8
   140028ba9:	mov    rax,QWORD PTR [r8+rdx*8]
   140028bad:	test   rax,rax
   140028bb0:	je     0x140028bc4
   140028bb2:	cmp    DWORD PTR [rax+0x18],ebx
   140028bb5:	jne    0x140028bbb
   140028bb7:	cmp    DWORD PTR [rax],ebx
   140028bb9:	je     0x140028bd4
   140028bbb:	mov    rax,QWORD PTR [rax+0x10]
   140028bbf:	test   rax,rax
   140028bc2:	jne    0x140028bb2
   140028bc4:	mov    r9d,ebx
   140028bc7:	mov    r8d,edi
   140028bca:	mov    edx,ebx
   140028bcc:	mov    rcx,rsi
   140028bcf:	call   0x140029500
   140028bd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140028bd9:	mov    rsi,QWORD PTR [rsp+0x38]
   140028bde:	add    rax,0x8
   140028be2:	add    rsp,0x20
   140028be6:	pop    rdi
   140028be7:	ret    
   140028be8:	mov    r8b,0x1
   140028beb:	mov    edx,r9d
   140028bee:	call   0x140028fb0
   140028bf3:	test   al,al
   140028bf5:	jne    0x140028bc4
   140028bf7:	mov    ecx,0x8007000e
   140028bfc:	call   0x1400025f0
   140028c01:	int3   
   140028c02:	int3   
   140028c03:	int3   
   140028c04:	int3   
   140028c05:	int3   
   140028c06:	int3   
   140028c07:	int3   
   140028c08:	int3   
   140028c09:	int3   
   140028c0a:	int3   
   140028c0b:	int3   
   140028c0c:	int3   
   140028c0d:	int3   
   140028c0e:	int3   
   140028c0f:	int3   
   140028c10:	mov    rax,rsp
   140028c13:	push   rbx
   140028c14:	push   rdi
   140028c15:	push   r14
   140028c17:	push   r15
   140028c19:	sub    rsp,0x48
   140028c1d:	inc    DWORD PTR [rcx+0x30]
   140028c20:	mov    QWORD PTR [rax-0x28],r13
   140028c24:	movaps XMMWORD PTR [rax-0x38],xmm6
   140028c28:	movss  xmm6,DWORD PTR [rip+0x4e868]        # 0x140077498
   140028c30:	xor    r14d,r14d
   140028c33:	movaps XMMWORD PTR [rax-0x48],xmm7
   140028c37:	movss  xmm7,DWORD PTR [rip+0x4e85d]        # 0x14007749c
   140028c3f:	mov    rdi,rcx
   140028c42:	movabs rbx,0x8000000000000000
   140028c4c:	mov    r15d,0xffffffff
   140028c52:	lea    r13,[rip+0x47a47]        # 0x1400706a0
   140028c59:	cmp    QWORD PTR [rcx],r14
   140028c5c:	je     0x140028d78
   140028c62:	mov    QWORD PTR [rax+0x8],rbp
   140028c66:	mov    ebp,r14d
   140028c69:	cmp    DWORD PTR [rcx+0x10],r14d
   140028c6d:	jbe    0x140028d73
   140028c73:	mov    QWORD PTR [rax+0x10],rsi
   140028c77:	mov    QWORD PTR [rax+0x18],r12
   140028c7b:	mov    r12d,r14d
   140028c7e:	xchg   ax,ax
   140028c80:	mov    rax,QWORD PTR [rdi]
   140028c83:	mov    rsi,QWORD PTR [r12+rax*1]
   140028c87:	test   rsi,rsi
   140028c8a:	je     0x140028d57
   140028c90:	mov    rax,QWORD PTR [rdi+0x40]
   140028c94:	lea    rcx,[rsi+0x10]
   140028c98:	mov    rdx,rsi
   140028c9b:	mov    rsi,QWORD PTR [rcx]
   140028c9e:	mov    QWORD PTR [rcx],rax
   140028ca1:	dec    QWORD PTR [rdi+0x8]
   140028ca5:	mov    rax,QWORD PTR [rdi+0x8]
   140028ca9:	mov    QWORD PTR [rdi+0x40],rdx
   140028cad:	cmp    rax,QWORD PTR [rdi+0x28]
   140028cb1:	jae    0x140028d1d
   140028cb3:	cmp    DWORD PTR [rdi+0x30],r14d
   140028cb7:	jne    0x140028d1d
   140028cb9:	pxor   xmm0,xmm0
   140028cbd:	cvtsi2ss xmm0,rax
   140028cc2:	test   rax,rax
   140028cc5:	jns    0x140028ccb
   140028cc7:	addss  xmm0,xmm7
   140028ccb:	divss  xmm0,DWORD PTR [rdi+0x14]
   140028cd0:	xor    eax,eax
   140028cd2:	comiss xmm0,xmm6
   140028cd5:	jbe    0x140028ce3
   140028cd7:	subss  xmm0,xmm6
   140028cdb:	comiss xmm0,xmm6
   140028cde:	jae    0x140028ce3
   140028ce0:	mov    rax,rbx
   140028ce3:	cvttss2si rcx,xmm0
   140028ce8:	add    rcx,rax
   140028ceb:	mov    rax,r14
   140028cee:	cmp    rcx,r15
   140028cf1:	cmova  ecx,r15d
   140028cf5:	cmp    ecx,0x11
   140028cf8:	jbe    0x140028d0a
   140028cfa:	nop    WORD PTR [rax+rax*1+0x0]
   140028d00:	inc    rax
   140028d03:	cmp    ecx,DWORD PTR [r13+rax*4+0x0]
   140028d08:	ja     0x140028d00
   140028d0a:	mov    edx,DWORD PTR [r13+rax*4+0x0]
   140028d0f:	cmp    edx,r15d
   140028d12:	cmove  edx,ecx
   140028d15:	mov    rcx,rdi
   140028d18:	call   0x140029350
   140028d1d:	cmp    QWORD PTR [rdi+0x8],r14
   140028d21:	jne    0x140028d4e
   140028d23:	mov    rcx,QWORD PTR [rdi+0x38]
   140028d27:	mov    QWORD PTR [rdi+0x40],r14
   140028d2b:	test   rcx,rcx
   140028d2e:	je     0x140028d4e
   140028d30:	mov    rbx,QWORD PTR [rcx]
   140028d33:	call   0x140033594
   140028d38:	mov    rcx,rbx
   140028d3b:	test   rbx,rbx
   140028d3e:	jne    0x140028d30
   140028d40:	mov    QWORD PTR [rdi+0x38],r14
   140028d44:	movabs rbx,0x8000000000000000
   140028d4e:	test   rsi,rsi
   140028d51:	jne    0x140028c90
   140028d57:	inc    ebp
   140028d59:	add    r12,0x8
   140028d5d:	cmp    ebp,DWORD PTR [rdi+0x10]
   140028d60:	jb     0x140028c80
   140028d66:	mov    r12,QWORD PTR [rsp+0x80]
   140028d6e:	mov    rsi,QWORD PTR [rsp+0x78]
   140028d73:	mov    rbp,QWORD PTR [rsp+0x70]
   140028d78:	mov    rcx,QWORD PTR [rdi]
   140028d7b:	call   0x1400336a0
   140028d80:	mov    QWORD PTR [rdi],r14
   140028d83:	mov    QWORD PTR [rdi+0x8],r14
   140028d87:	cmp    DWORD PTR [rdi+0x30],r14d
   140028d8b:	jne    0x140028df7
   140028d8d:	pxor   xmm0,xmm0
   140028d91:	cvtsi2ss xmm0,r14
   140028d96:	test   r14,r14
   140028d99:	jns    0x140028d9f
   140028d9b:	addss  xmm0,xmm7
   140028d9f:	divss  xmm0,DWORD PTR [rdi+0x14]
   140028da4:	xor    eax,eax
   140028da6:	comiss xmm0,xmm6
   140028da9:	jbe    0x140028db7
   140028dab:	subss  xmm0,xmm6
   140028daf:	comiss xmm0,xmm6
   140028db2:	jae    0x140028db7
   140028db4:	mov    rax,rbx
   140028db7:	cvttss2si r8,xmm0
   140028dbc:	mov    ecx,r14d
   140028dbf:	add    r8,rax
   140028dc2:	cmp    r8,r15
   140028dc5:	cmova  r8d,r15d
   140028dc9:	cmp    r8d,0x11
   140028dcd:	jbe    0x140028ddd
   140028dcf:	mov    rax,r13
   140028dd2:	add    rax,0x4
   140028dd6:	inc    ecx
   140028dd8:	cmp    r8d,DWORD PTR [rax]
   140028ddb:	ja     0x140028dd2
   140028ddd:	movsxd rax,ecx
   140028de0:	mov    rcx,rdi
   140028de3:	mov    edx,DWORD PTR [r13+rax*4+0x0]
   140028de8:	cmp    edx,r15d
   140028deb:	cmove  edx,r8d
   140028def:	xor    r8d,r8d
   140028df2:	call   0x140028fb0
   140028df7:	mov    rcx,QWORD PTR [rdi+0x38]
   140028dfb:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140028e00:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140028e05:	mov    r13,QWORD PTR [rsp+0x40]
   140028e0a:	mov    QWORD PTR [rdi+0x40],r14
   140028e0e:	test   rcx,rcx
   140028e11:	je     0x140028e27
   140028e13:	mov    rbx,QWORD PTR [rcx]
   140028e16:	call   0x140033594
   140028e1b:	mov    rcx,rbx
   140028e1e:	test   rbx,rbx
   140028e21:	jne    0x140028e13
   140028e23:	mov    QWORD PTR [rdi+0x38],r14
   140028e27:	add    DWORD PTR [rdi+0x30],r15d
   140028e2b:	add    rsp,0x48
   140028e2f:	pop    r15
   140028e31:	pop    r14
   140028e33:	pop    rdi
   140028e34:	pop    rbx
   140028e35:	ret    
   140028e36:	int3   
   140028e37:	int3   
   140028e38:	int3   
   140028e39:	int3   
   140028e3a:	int3   
   140028e3b:	int3   
   140028e3c:	int3   
   140028e3d:	int3   
   140028e3e:	int3   
   140028e3f:	int3   
   140028e40:	sub    rsp,0x38
   140028e44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028e4d:	call   0x140028c10
   140028e52:	nop
   140028e53:	add    rsp,0x38
   140028e57:	ret    
   140028e58:	int3   
   140028e59:	int3   
   140028e5a:	int3   
   140028e5b:	int3   
   140028e5c:	int3   
   140028e5d:	int3   
   140028e5e:	int3   
   140028e5f:	int3   
   140028e60:	sub    rsp,0x38
   140028e64:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028e6d:	call   0x1400290e0
   140028e72:	nop
   140028e73:	add    rsp,0x38
   140028e77:	ret    
   140028e78:	int3   
   140028e79:	int3   
   140028e7a:	int3   
   140028e7b:	int3   
   140028e7c:	int3   
   140028e7d:	int3   
   140028e7e:	int3   
   140028e7f:	int3   
   140028e80:	sub    rsp,0x28
   140028e84:	mov    rcx,QWORD PTR [rcx]
   140028e87:	test   rcx,rcx
   140028e8a:	je     0x140028e91
   140028e8c:	call   0x140033594
   140028e91:	add    rsp,0x28
   140028e95:	ret    
   140028e96:	int3   
   140028e97:	int3   
   140028e98:	int3   
   140028e99:	int3   
   140028e9a:	int3   
   140028e9b:	int3   
   140028e9c:	int3   
   140028e9d:	int3   
   140028e9e:	int3   
   140028e9f:	int3   
   140028ea0:	mov    QWORD PTR [rsp+0x10],rdx
   140028ea5:	mov    QWORD PTR [rsp+0x18],r8
   140028eaa:	mov    QWORD PTR [rsp+0x20],r9
   140028eaf:	sub    rsp,0x28
   140028eb3:	mov    r8,rdx
   140028eb6:	lea    r9,[rsp+0x40]
   140028ebb:	mov    edx,0x32
   140028ec0:	call   0x140033b44
   140028ec5:	add    rsp,0x28
   140028ec9:	ret    
   140028eca:	int3   
   140028ecb:	int3   
   140028ecc:	int3   
   140028ecd:	int3   
   140028ece:	int3   
   140028ecf:	int3   
   140028ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140028ed5:	mov    QWORD PTR [rsp+0x18],r8
   140028eda:	mov    QWORD PTR [rsp+0x20],r9
   140028edf:	sub    rsp,0x28
   140028ee3:	mov    r8,rdx
   140028ee6:	lea    r9,[rsp+0x40]
   140028eeb:	mov    edx,0x64
   140028ef0:	call   0x140033b44
   140028ef5:	add    rsp,0x28
   140028ef9:	ret    
   140028efa:	int3   
   140028efb:	int3   
   140028efc:	int3   
   140028efd:	int3   
   140028efe:	int3   
   140028eff:	int3   
   140028f00:	rex push rbx
   140028f02:	sub    rsp,0x30
   140028f06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028f0f:	mov    rbx,rdx
   140028f12:	call   0x140028f30
   140028f17:	mov    QWORD PTR [rsp+0x50],rax
   140028f1c:	lea    r8,[rax+0x18]
   140028f20:	test   r8,r8
   140028f23:	je     0x140028f2a
   140028f25:	mov    ecx,DWORD PTR [rbx]
   140028f27:	mov    DWORD PTR [r8],ecx
   140028f2a:	add    rsp,0x30
   140028f2e:	pop    rbx
   140028f2f:	ret    
   140028f30:	rex push rbx
   140028f32:	sub    rsp,0x40
   140028f36:	mov    rbx,rcx
   140028f39:	mov    ecx,0x20
   140028f3e:	call   0x1400331a0
   140028f43:	test   rax,rax
   140028f46:	je     0x140028f6b
   140028f48:	mov    rdx,QWORD PTR [rbx+0x8]
   140028f4c:	mov    QWORD PTR [rax],rdx
   140028f4f:	mov    rdx,QWORD PTR [rbx+0x8]
   140028f53:	mov    QWORD PTR [rax+0x8],rdx
   140028f57:	mov    rcx,QWORD PTR [rbx+0x8]
   140028f5b:	mov    WORD PTR [rax+0x1c],0x0
   140028f61:	mov    QWORD PTR [rax+0x10],rcx
   140028f65:	add    rsp,0x40
   140028f69:	pop    rbx
   140028f6a:	ret    
   140028f6b:	lea    rdx,[rsp+0x58]
   140028f70:	lea    rcx,[rsp+0x20]
   140028f75:	mov    QWORD PTR [rsp+0x58],0x0
   140028f7e:	call   0x140032fd4
   140028f83:	lea    r11,[rip+0x3f906]        # 0x140068890
   140028f8a:	lea    rdx,[rip+0x5a48f]        # 0x140083420
   140028f91:	lea    rcx,[rsp+0x20]
   140028f96:	mov    QWORD PTR [rsp+0x20],r11
   140028f9b:	call   0x140036358
   140028fa0:	int3   
   140028fa1:	int3   
   140028fa2:	int3   
   140028fa3:	int3   
   140028fa4:	int3   
   140028fa5:	int3   
   140028fa6:	int3   
   140028fa7:	int3   
   140028fa8:	int3   
   140028fa9:	int3   
   140028faa:	int3   
   140028fab:	int3   
   140028fac:	int3   
   140028fad:	int3   
   140028fae:	int3   
   140028faf:	int3   
   140028fb0:	mov    DWORD PTR [rsp+0x10],edx
   140028fb4:	mov    QWORD PTR [rsp+0x8],rcx
   140028fb9:	push   rsi
   140028fba:	push   rdi
   140028fbb:	push   r12
   140028fbd:	sub    rsp,0x30
   140028fc1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028fca:	mov    QWORD PTR [rsp+0x60],rbx
   140028fcf:	movzx  r12d,r8b
   140028fd3:	mov    edi,edx
   140028fd5:	mov    rbx,rcx
   140028fd8:	mov    rcx,QWORD PTR [rcx]
   140028fdb:	test   rcx,rcx
   140028fde:	je     0x140028fec
   140028fe0:	call   0x1400336a0
   140028fe5:	xor    esi,esi
   140028fe7:	mov    QWORD PTR [rbx],rsi
   140028fea:	jmp    0x140028fee
   140028fec:	xor    esi,esi
   140028fee:	test   r12b,r12b
   140028ff1:	je     0x14002904e
   140028ff3:	mov    eax,0x8
   140028ff8:	mul    rdi
   140028ffb:	mov    rcx,0xffffffffffffffff
   140029002:	cmovo  rax,rcx
   140029006:	mov    rcx,rax
   140029009:	call   0x140032de8
   14002900e:	mov    QWORD PTR [rbx],rax
   140029011:	jmp    0x14002901e
   140029013:	xor    esi,esi
   140029015:	mov    rbx,QWORD PTR [rsp+0x50]
   14002901a:	mov    edi,DWORD PTR [rsp+0x58]
   14002901e:	mov    rcx,QWORD PTR [rbx]
   140029021:	test   rcx,rcx
   140029024:	jne    0x14002902d
   140029026:	xor    al,al
   140029028:	jmp    0x1400290cf
   14002902d:	cmp    edi,0x1fffffff
   140029033:	jbe    0x140029040
   140029035:	mov    ecx,0x80004005
   14002903a:	call   0x1400025f0
   14002903f:	int3   
   140029040:	mov    r8d,edi
   140029043:	shl    r8,0x3
   140029047:	xor    edx,edx
   140029049:	call   0x140036dc0
   14002904e:	mov    DWORD PTR [rbx+0x10],edi
   140029051:	mov    eax,edi
   140029053:	pxor   xmm2,xmm2
   140029057:	cvtsi2ss xmm2,rax
   14002905c:	movaps xmm0,xmm2
   14002905f:	mulss  xmm0,DWORD PTR [rbx+0x1c]
   140029064:	xor    edx,edx
   140029066:	movss  xmm1,DWORD PTR [rip+0x4e42a]        # 0x140077498
   14002906e:	comiss xmm0,xmm1
   140029071:	jbe    0x14002908b
   140029073:	subss  xmm0,xmm1
   140029077:	comiss xmm0,xmm1
   14002907a:	jae    0x14002908b
   14002907c:	movabs rcx,0x8000000000000000
   140029086:	mov    rdx,rcx
   140029089:	jmp    0x140029095
   14002908b:	movabs rcx,0x8000000000000000
   140029095:	cvttss2si rax,xmm0
   14002909a:	add    rax,rdx
   14002909d:	mov    QWORD PTR [rbx+0x20],rax
   1400290a1:	mulss  xmm2,DWORD PTR [rbx+0x18]
   1400290a6:	xor    edx,edx
   1400290a8:	comiss xmm2,xmm1
   1400290ab:	jbe    0x1400290b9
   1400290ad:	subss  xmm2,xmm1
   1400290b1:	comiss xmm2,xmm1
   1400290b4:	jae    0x1400290b9
   1400290b6:	mov    rdx,rcx
   1400290b9:	cvttss2si rax,xmm2
   1400290be:	add    rax,rdx
   1400290c1:	cmp    rax,0x11
   1400290c5:	cmovb  rax,rsi
   1400290c9:	mov    QWORD PTR [rbx+0x28],rax
   1400290cd:	mov    al,0x1
   1400290cf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400290d4:	add    rsp,0x30
   1400290d8:	pop    r12
   1400290da:	pop    rdi
   1400290db:	pop    rsi
   1400290dc:	ret    
   1400290dd:	int3   
   1400290de:	int3   
   1400290df:	int3   
   1400290e0:	mov    rax,rsp
   1400290e3:	push   rbx
   1400290e4:	push   rdi
   1400290e5:	push   r14
   1400290e7:	push   r15
   1400290e9:	sub    rsp,0x48
   1400290ed:	inc    DWORD PTR [rcx+0x30]
   1400290f0:	mov    QWORD PTR [rax-0x28],r13
   1400290f4:	movaps XMMWORD PTR [rax-0x38],xmm6
   1400290f8:	movss  xmm6,DWORD PTR [rip+0x4e398]        # 0x140077498
   140029100:	xor    r14d,r14d
   140029103:	movaps XMMWORD PTR [rax-0x48],xmm7
   140029107:	movss  xmm7,DWORD PTR [rip+0x4e38d]        # 0x14007749c
   14002910f:	mov    rdi,rcx
   140029112:	movabs rbx,0x8000000000000000
   14002911c:	mov    r15d,0xffffffff
   140029122:	lea    r13,[rip+0x47577]        # 0x1400706a0
   140029129:	cmp    QWORD PTR [rcx],r14
   14002912c:	je     0x140029248
   140029132:	mov    QWORD PTR [rax+0x8],rbp
   140029136:	mov    ebp,r14d
   140029139:	cmp    DWORD PTR [rcx+0x10],r14d
   14002913d:	jbe    0x140029243
   140029143:	mov    QWORD PTR [rax+0x10],rsi
   140029147:	mov    QWORD PTR [rax+0x18],r12
   14002914b:	mov    r12d,r14d
   14002914e:	xchg   ax,ax
   140029150:	mov    rax,QWORD PTR [rdi]
   140029153:	mov    rsi,QWORD PTR [r12+rax*1]
   140029157:	test   rsi,rsi
   14002915a:	je     0x140029227
   140029160:	mov    rax,QWORD PTR [rdi+0x40]
   140029164:	lea    rcx,[rsi+0x8]
   140029168:	mov    rdx,rsi
   14002916b:	mov    rsi,QWORD PTR [rcx]
   14002916e:	mov    QWORD PTR [rcx],rax
   140029171:	dec    QWORD PTR [rdi+0x8]
   140029175:	mov    rax,QWORD PTR [rdi+0x8]
   140029179:	mov    QWORD PTR [rdi+0x40],rdx
   14002917d:	cmp    rax,QWORD PTR [rdi+0x28]
   140029181:	jae    0x1400291ed
   140029183:	cmp    DWORD PTR [rdi+0x30],r14d
   140029187:	jne    0x1400291ed
   140029189:	pxor   xmm0,xmm0
   14002918d:	cvtsi2ss xmm0,rax
   140029192:	test   rax,rax
   140029195:	jns    0x14002919b
   140029197:	addss  xmm0,xmm7
   14002919b:	divss  xmm0,DWORD PTR [rdi+0x14]
   1400291a0:	xor    eax,eax
   1400291a2:	comiss xmm0,xmm6
   1400291a5:	jbe    0x1400291b3
   1400291a7:	subss  xmm0,xmm6
   1400291ab:	comiss xmm0,xmm6
   1400291ae:	jae    0x1400291b3
   1400291b0:	mov    rax,rbx
   1400291b3:	cvttss2si rcx,xmm0
   1400291b8:	add    rcx,rax
   1400291bb:	mov    rax,r14
   1400291be:	cmp    rcx,r15
   1400291c1:	cmova  ecx,r15d
   1400291c5:	cmp    ecx,0x11
   1400291c8:	jbe    0x1400291da
   1400291ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400291d0:	inc    rax
   1400291d3:	cmp    ecx,DWORD PTR [r13+rax*4+0x0]
   1400291d8:	ja     0x1400291d0
   1400291da:	mov    edx,DWORD PTR [r13+rax*4+0x0]
   1400291df:	cmp    edx,r15d
   1400291e2:	cmove  edx,ecx
   1400291e5:	mov    rcx,rdi
   1400291e8:	call   0x140029700
   1400291ed:	cmp    QWORD PTR [rdi+0x8],r14
   1400291f1:	jne    0x14002921e
   1400291f3:	mov    rcx,QWORD PTR [rdi+0x38]
   1400291f7:	mov    QWORD PTR [rdi+0x40],r14
   1400291fb:	test   rcx,rcx
   1400291fe:	je     0x14002921e
   140029200:	mov    rbx,QWORD PTR [rcx]
   140029203:	call   0x140033594
   140029208:	mov    rcx,rbx
   14002920b:	test   rbx,rbx
   14002920e:	jne    0x140029200
   140029210:	mov    QWORD PTR [rdi+0x38],r14
   140029214:	movabs rbx,0x8000000000000000
   14002921e:	test   rsi,rsi
   140029221:	jne    0x140029160
   140029227:	inc    ebp
   140029229:	add    r12,0x8
   14002922d:	cmp    ebp,DWORD PTR [rdi+0x10]
   140029230:	jb     0x140029150
   140029236:	mov    r12,QWORD PTR [rsp+0x80]
   14002923e:	mov    rsi,QWORD PTR [rsp+0x78]
   140029243:	mov    rbp,QWORD PTR [rsp+0x70]
   140029248:	mov    rcx,QWORD PTR [rdi]
   14002924b:	call   0x1400336a0
   140029250:	mov    QWORD PTR [rdi],r14
   140029253:	mov    QWORD PTR [rdi+0x8],r14
   140029257:	cmp    DWORD PTR [rdi+0x30],r14d
   14002925b:	jne    0x1400292c4
   14002925d:	pxor   xmm0,xmm0
   140029261:	cvtsi2ss xmm0,r14
   140029266:	test   r14,r14
   140029269:	jns    0x14002926f
   14002926b:	addss  xmm0,xmm7
   14002926f:	divss  xmm0,DWORD PTR [rdi+0x14]
   140029274:	xor    eax,eax
   140029276:	comiss xmm0,xmm6
   140029279:	jbe    0x140029287
   14002927b:	subss  xmm0,xmm6
   14002927f:	comiss xmm0,xmm6
   140029282:	jae    0x140029287
   140029284:	mov    rax,rbx
   140029287:	cvttss2si r8,xmm0
   14002928c:	mov    ecx,r14d
   14002928f:	add    r8,rax
   140029292:	cmp    r8,r15
   140029295:	cmova  r8d,r15d
   140029299:	cmp    r8d,0x11
   14002929d:	jbe    0x1400292ad
   14002929f:	mov    rax,r13
   1400292a2:	add    rax,0x4
   1400292a6:	inc    ecx
   1400292a8:	cmp    r8d,DWORD PTR [rax]
   1400292ab:	ja     0x1400292a2
   1400292ad:	movsxd rax,ecx
   1400292b0:	mov    rcx,rdi
   1400292b3:	mov    edx,DWORD PTR [r13+rax*4+0x0]
   1400292b8:	cmp    edx,r15d
   1400292bb:	cmove  edx,r8d
   1400292bf:	call   0x140029650
   1400292c4:	mov    rcx,QWORD PTR [rdi+0x38]
   1400292c8:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   1400292cd:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400292d2:	mov    r13,QWORD PTR [rsp+0x40]
   1400292d7:	mov    QWORD PTR [rdi+0x40],r14
   1400292db:	test   rcx,rcx
   1400292de:	je     0x1400292f4
   1400292e0:	mov    rbx,QWORD PTR [rcx]
   1400292e3:	call   0x140033594
   1400292e8:	mov    rcx,rbx
   1400292eb:	test   rbx,rbx
   1400292ee:	jne    0x1400292e0
   1400292f0:	mov    QWORD PTR [rdi+0x38],r14
   1400292f4:	add    DWORD PTR [rdi+0x30],r15d
   1400292f8:	add    rsp,0x48
   1400292fc:	pop    r15
   1400292fe:	pop    r14
   140029300:	pop    rdi
   140029301:	pop    rbx
   140029302:	ret    
   140029303:	int3   
   140029304:	int3   
   140029305:	int3   
   140029306:	int3   
   140029307:	int3   
   140029308:	int3   
   140029309:	int3   
   14002930a:	int3   
   14002930b:	int3   
   14002930c:	int3   
   14002930d:	int3   
   14002930e:	int3   
   14002930f:	int3   
   140029310:	rex push rbx
   140029312:	sub    rsp,0x30
   140029316:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002931f:	lea    rbx,[rcx+0x8]
   140029323:	mov    QWORD PTR [rsp+0x40],rbx
   140029328:	mov    r8,QWORD PTR [rbx+0x8]
   14002932c:	mov    r9,r8
   14002932f:	mov    r8,QWORD PTR [r8]
   140029332:	lea    rdx,[rsp+0x48]
   140029337:	mov    rcx,rbx
   14002933a:	call   0x140027e80
   14002933f:	nop
   140029340:	mov    rcx,QWORD PTR [rbx+0x8]
   140029344:	add    rsp,0x30
   140029348:	pop    rbx
   140029349:	jmp    0x1400330c0
   14002934e:	int3   
   14002934f:	int3   
   140029350:	mov    DWORD PTR [rsp+0x10],edx
   140029354:	mov    QWORD PTR [rsp+0x8],rcx
   140029359:	push   rbx
   14002935a:	push   rsi
   14002935b:	push   rdi
   14002935c:	sub    rsp,0x30
   140029360:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029369:	mov    edi,edx
   14002936b:	mov    rbx,rcx
   14002936e:	mov    QWORD PTR [rsp+0x60],0x0
   140029377:	test   edx,edx
   140029379:	jne    0x14002938a
   14002937b:	mov    rdx,QWORD PTR [rcx+0x8]
   14002937f:	call   0x1400298b0
   140029384:	mov    edi,eax
   140029386:	mov    DWORD PTR [rsp+0x58],eax
   14002938a:	cmp    edi,DWORD PTR [rbx+0x10]
   14002938d:	je     0x1400294ed
   140029393:	cmp    QWORD PTR [rbx],0x0
   140029397:	jne    0x1400293ab
   140029399:	xor    r8d,r8d
   14002939c:	mov    edx,edi
   14002939e:	mov    rcx,rbx
   1400293a1:	call   0x140028fb0
   1400293a6:	jmp    0x1400294ed
   1400293ab:	mov    ecx,edi
   1400293ad:	mov    eax,0x8
   1400293b2:	mul    rcx
   1400293b5:	mov    rcx,0xffffffffffffffff
   1400293bc:	cmovo  rax,rcx
   1400293c0:	mov    rcx,rax
   1400293c3:	call   0x140032de8
   1400293c8:	mov    rsi,rax
   1400293cb:	mov    QWORD PTR [rsp+0x60],rax
   1400293d0:	jmp    0x1400293e0
   1400293d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400293d7:	mov    edi,DWORD PTR [rsp+0x58]
   1400293db:	mov    rsi,QWORD PTR [rsp+0x60]
   1400293e0:	test   rsi,rsi
   1400293e3:	jne    0x1400293f0
   1400293e5:	mov    ecx,0x8007000e
   1400293ea:	call   0x1400025f0
   1400293ef:	int3   
   1400293f0:	cmp    edi,0x1fffffff
   1400293f6:	jbe    0x140029403
   1400293f8:	mov    ecx,0x80004005
   1400293fd:	call   0x1400025f0
   140029402:	int3   
   140029403:	mov    r8d,edi
   140029406:	shl    r8,0x3
   14002940a:	xor    edx,edx
   14002940c:	mov    rcx,rsi
   14002940f:	call   0x140036dc0
   140029414:	xor    r11d,r11d
   140029417:	cmp    DWORD PTR [rbx+0x10],r11d
   14002941b:	jbe    0x14002945d
   14002941d:	xor    r10d,r10d
   140029420:	mov    rax,QWORD PTR [rbx]
   140029423:	mov    r9,QWORD PTR [r10+rax*1]
   140029427:	test   r9,r9
   14002942a:	je     0x140029450
   14002942c:	nop    DWORD PTR [rax+0x0]
   140029430:	mov    r8,QWORD PTR [r9+0x10]
   140029434:	xor    edx,edx
   140029436:	mov    eax,DWORD PTR [r9+0x18]
   14002943a:	div    edi
   14002943c:	mov    rax,QWORD PTR [rsi+rdx*8]
   140029440:	mov    QWORD PTR [r9+0x10],rax
   140029444:	mov    QWORD PTR [rsi+rdx*8],r9
   140029448:	mov    r9,r8
   14002944b:	test   r8,r8
   14002944e:	jne    0x140029430
   140029450:	inc    r11d
   140029453:	add    r10,0x8
   140029457:	cmp    r11d,DWORD PTR [rbx+0x10]
   14002945b:	jb     0x140029420
   14002945d:	mov    rcx,QWORD PTR [rbx]
   140029460:	call   0x1400336a0
   140029465:	mov    QWORD PTR [rbx],rsi
   140029468:	mov    DWORD PTR [rbx+0x10],edi
   14002946b:	mov    eax,edi
   14002946d:	pxor   xmm0,xmm0
   140029471:	cvtsi2ss xmm0,rax
   140029476:	movaps xmm1,xmm0
   140029479:	mulss  xmm1,DWORD PTR [rbx+0x1c]
   14002947e:	xor    ecx,ecx
   140029480:	movss  xmm2,DWORD PTR [rip+0x4e010]        # 0x140077498
   140029488:	comiss xmm1,xmm2
   14002948b:	jbe    0x1400294a5
   14002948d:	subss  xmm1,xmm2
   140029491:	comiss xmm1,xmm2
   140029494:	jae    0x1400294a5
   140029496:	movabs rdx,0x8000000000000000
   1400294a0:	mov    rcx,rdx
   1400294a3:	jmp    0x1400294af
   1400294a5:	movabs rdx,0x8000000000000000
   1400294af:	cvttss2si rax,xmm1
   1400294b4:	add    rax,rcx
   1400294b7:	mov    QWORD PTR [rbx+0x20],rax
   1400294bb:	mulss  xmm0,DWORD PTR [rbx+0x18]
   1400294c0:	xor    ecx,ecx
   1400294c2:	comiss xmm0,xmm2
   1400294c5:	jbe    0x1400294d3
   1400294c7:	subss  xmm0,xmm2
   1400294cb:	comiss xmm0,xmm2
   1400294ce:	jae    0x1400294d3
   1400294d0:	mov    rcx,rdx
   1400294d3:	cvttss2si rax,xmm0
   1400294d8:	add    rax,rcx
   1400294db:	mov    QWORD PTR [rbx+0x28],rax
   1400294df:	cmp    rax,0x11
   1400294e3:	jae    0x1400294ed
   1400294e5:	mov    QWORD PTR [rbx+0x28],0x0
   1400294ed:	add    rsp,0x30
   1400294f1:	pop    rdi
   1400294f2:	pop    rsi
   1400294f3:	pop    rbx
   1400294f4:	ret    
   1400294f5:	int3   
   1400294f6:	int3   
   1400294f7:	int3   
   1400294f8:	int3   
   1400294f9:	int3   
   1400294fa:	int3   
   1400294fb:	int3   
   1400294fc:	int3   
   1400294fd:	int3   
   1400294fe:	int3   
   1400294ff:	int3   
   140029500:	mov    QWORD PTR [rsp+0x8],rcx
   140029505:	push   r12
   140029507:	push   r13
   140029509:	push   r14
   14002950b:	sub    rsp,0x30
   14002950f:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140029518:	mov    QWORD PTR [rsp+0x58],rbx
   14002951d:	mov    QWORD PTR [rsp+0x60],rsi
   140029522:	mov    QWORD PTR [rsp+0x68],rdi
   140029527:	mov    r12d,r9d
   14002952a:	mov    r14d,r8d
   14002952d:	mov    r13d,edx
   140029530:	mov    rbx,rcx
   140029533:	cmp    QWORD PTR [rcx+0x40],0x0
   140029538:	jne    0x1400295c2
   14002953e:	mov    ecx,DWORD PTR [rcx+0x34]
   140029541:	test   rcx,rcx
   140029544:	jne    0x140029550
   140029546:	xor    esi,esi
   140029548:	mov    ecx,esi
   14002954a:	or     r8,0xffffffffffffffff
   14002954e:	jmp    0x140029568
   140029550:	xor    edx,edx
   140029552:	or     r8,0xffffffffffffffff
   140029556:	mov    rax,r8
   140029559:	div    rcx
   14002955c:	cmp    rax,0x20
   140029560:	jb     0x1400295b7
   140029562:	shl    rcx,0x5
   140029566:	xor    esi,esi
   140029568:	sub    r8,rcx
   14002956b:	cmp    r8,0x10
   14002956f:	jb     0x1400295b7
   140029571:	add    rcx,0x10
   140029575:	call   0x140034828
   14002957a:	test   rax,rax
   14002957d:	je     0x1400295b7
   14002957f:	mov    rcx,QWORD PTR [rbx+0x38]
   140029583:	mov    QWORD PTR [rax],rcx
   140029586:	mov    QWORD PTR [rbx+0x38],rax
   14002958a:	mov    r8d,DWORD PTR [rbx+0x34]
   14002958e:	lea    edx,[r8-0x1]
   140029592:	shl    rdx,0x5
   140029596:	lea    rcx,[rdx+rax*1+0x10]
   14002959b:	dec    r8d
   14002959e:	js     0x1400295c4
   1400295a0:	mov    rax,QWORD PTR [rbx+0x40]
   1400295a4:	mov    QWORD PTR [rcx+0x10],rax
   1400295a8:	mov    QWORD PTR [rbx+0x40],rcx
   1400295ac:	sub    rcx,0x20
   1400295b0:	dec    r8d
   1400295b3:	jns    0x1400295a0
   1400295b5:	jmp    0x1400295c4
   1400295b7:	mov    ecx,0x8007000e
   1400295bc:	call   0x1400025f0
   1400295c1:	int3   
   1400295c2:	xor    esi,esi
   1400295c4:	mov    rdi,QWORD PTR [rbx+0x40]
   1400295c8:	test   rdi,rdi
   1400295cb:	setne  sil
   1400295cf:	test   esi,esi
   1400295d1:	jne    0x1400295de
   1400295d3:	mov    ecx,0x80004005
   1400295d8:	call   0x1400025f0
   1400295dd:	int3   
   1400295de:	mov    QWORD PTR [rsp+0x20],rdi
   1400295e3:	mov    rax,QWORD PTR [rdi+0x10]
   1400295e7:	mov    QWORD PTR [rbx+0x40],rax
   1400295eb:	mov    DWORD PTR [rdi],r13d
   1400295ee:	mov    DWORD PTR [rdi+0x18],r12d
   1400295f2:	inc    QWORD PTR [rbx+0x8]
   1400295f6:	mov    rax,QWORD PTR [rbx]
   1400295f9:	mov    rcx,QWORD PTR [rax+r14*8]
   1400295fd:	mov    QWORD PTR [rdi+0x10],rcx
   140029601:	mov    rax,QWORD PTR [rbx]
   140029604:	mov    QWORD PTR [rax+r14*8],rdi
   140029608:	mov    rdx,QWORD PTR [rbx+0x8]
   14002960c:	cmp    rdx,QWORD PTR [rbx+0x20]
   140029610:	jbe    0x14002962a
   140029612:	cmp    DWORD PTR [rbx+0x30],0x0
   140029616:	jne    0x14002962a
   140029618:	mov    rcx,rbx
   14002961b:	call   0x1400298b0
   140029620:	mov    edx,eax
   140029622:	mov    rcx,rbx
   140029625:	call   0x140029350
   14002962a:	mov    rax,rdi
   14002962d:	mov    rbx,QWORD PTR [rsp+0x58]
   140029632:	mov    rsi,QWORD PTR [rsp+0x60]
   140029637:	mov    rdi,QWORD PTR [rsp+0x68]
   14002963c:	add    rsp,0x30
   140029640:	pop    r14
   140029642:	pop    r13
   140029644:	pop    r12
   140029646:	ret    
   140029647:	int3   
   140029648:	int3   
   140029649:	int3   
   14002964a:	int3   
   14002964b:	int3   
   14002964c:	int3   
   14002964d:	int3   
   14002964e:	int3   
   14002964f:	int3   
   140029650:	mov    QWORD PTR [rsp+0x8],rbx
   140029655:	mov    QWORD PTR [rsp+0x10],rsi
   14002965a:	push   rdi
   14002965b:	sub    rsp,0x20
   14002965f:	mov    rbx,rcx
   140029662:	mov    rcx,QWORD PTR [rcx]
   140029665:	xor    esi,esi
   140029667:	mov    edi,edx
   140029669:	test   rcx,rcx
   14002966c:	je     0x140029676
   14002966e:	call   0x1400336a0
   140029673:	mov    QWORD PTR [rbx],rsi
   140029676:	movss  xmm0,DWORD PTR [rip+0x4de1a]        # 0x140077498
   14002967e:	pxor   xmm1,xmm1
   140029682:	xor    ecx,ecx
   140029684:	mov    DWORD PTR [rbx+0x10],edi
   140029687:	movabs rdx,0x8000000000000000
   140029691:	cvtsi2ss xmm1,rdi
   140029696:	movaps xmm2,xmm1
   140029699:	mulss  xmm2,DWORD PTR [rbx+0x1c]
   14002969e:	comiss xmm2,xmm0
   1400296a1:	jbe    0x1400296af
   1400296a3:	subss  xmm2,xmm0
   1400296a7:	comiss xmm2,xmm0
   1400296aa:	jae    0x1400296af
   1400296ac:	mov    rcx,rdx
   1400296af:	mulss  xmm1,DWORD PTR [rbx+0x18]
   1400296b4:	cvttss2si rax,xmm2
   1400296b9:	add    rax,rcx
   1400296bc:	xor    ecx,ecx
   1400296be:	comiss xmm1,xmm0
   1400296c1:	mov    QWORD PTR [rbx+0x20],rax
   1400296c5:	jbe    0x1400296d3
   1400296c7:	subss  xmm1,xmm0
   1400296cb:	comiss xmm1,xmm0
   1400296ce:	jae    0x1400296d3
   1400296d0:	mov    rcx,rdx
   1400296d3:	cvttss2si rax,xmm1
   1400296d8:	add    rax,rcx
   1400296db:	cmp    rax,0x11
   1400296df:	cmovb  rax,rsi
   1400296e3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400296e8:	mov    QWORD PTR [rbx+0x28],rax
   1400296ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400296f1:	mov    al,0x1
   1400296f3:	add    rsp,0x20
   1400296f7:	pop    rdi
   1400296f8:	ret    
   1400296f9:	int3   
   1400296fa:	int3   
   1400296fb:	int3   
   1400296fc:	int3   
   1400296fd:	int3   
   1400296fe:	int3   
   1400296ff:	int3   
   140029700:	mov    DWORD PTR [rsp+0x10],edx
   140029704:	mov    QWORD PTR [rsp+0x8],rcx
   140029709:	push   rbx
   14002970a:	push   rsi
   14002970b:	push   rdi
   14002970c:	sub    rsp,0x30
   140029710:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029719:	mov    edi,edx
   14002971b:	mov    rbx,rcx
   14002971e:	mov    QWORD PTR [rsp+0x60],0x0
   140029727:	test   edx,edx
   140029729:	jne    0x14002973a
   14002972b:	mov    rdx,QWORD PTR [rcx+0x8]
   14002972f:	call   0x1400298b0
   140029734:	mov    edi,eax
   140029736:	mov    DWORD PTR [rsp+0x58],eax
   14002973a:	cmp    edi,DWORD PTR [rbx+0x10]
   14002973d:	je     0x14002989d
   140029743:	cmp    QWORD PTR [rbx],0x0
   140029747:	jne    0x140029758
   140029749:	mov    edx,edi
   14002974b:	mov    rcx,rbx
   14002974e:	call   0x140029650
   140029753:	jmp    0x14002989d
   140029758:	mov    ecx,edi
   14002975a:	mov    eax,0x8
   14002975f:	mul    rcx
   140029762:	mov    rcx,0xffffffffffffffff
   140029769:	cmovo  rax,rcx
   14002976d:	mov    rcx,rax
   140029770:	call   0x140032de8
   140029775:	mov    rsi,rax
   140029778:	mov    QWORD PTR [rsp+0x60],rax
   14002977d:	jmp    0x14002978d
   14002977f:	mov    rbx,QWORD PTR [rsp+0x50]
   140029784:	mov    edi,DWORD PTR [rsp+0x58]
   140029788:	mov    rsi,QWORD PTR [rsp+0x60]
   14002978d:	test   rsi,rsi
   140029790:	jne    0x14002979d
   140029792:	mov    ecx,0x8007000e
   140029797:	call   0x1400025f0
   14002979c:	int3   
   14002979d:	cmp    edi,0x1fffffff
   1400297a3:	jbe    0x1400297b0
   1400297a5:	mov    ecx,0x80004005
   1400297aa:	call   0x1400025f0
   1400297af:	int3   
   1400297b0:	mov    r8d,edi
   1400297b3:	shl    r8,0x3
   1400297b7:	xor    edx,edx
   1400297b9:	mov    rcx,rsi
   1400297bc:	call   0x140036dc0
   1400297c1:	xor    r11d,r11d
   1400297c4:	cmp    DWORD PTR [rbx+0x10],r11d
   1400297c8:	jbe    0x14002980d
   1400297ca:	xor    r10d,r10d
   1400297cd:	nop    DWORD PTR [rax]
   1400297d0:	mov    rax,QWORD PTR [rbx]
   1400297d3:	mov    r9,QWORD PTR [r10+rax*1]
   1400297d7:	test   r9,r9
   1400297da:	je     0x140029800
   1400297dc:	nop    DWORD PTR [rax+0x0]
   1400297e0:	mov    r8,QWORD PTR [r9+0x8]
   1400297e4:	xor    edx,edx
   1400297e6:	mov    eax,DWORD PTR [r9+0x10]
   1400297ea:	div    edi
   1400297ec:	mov    rax,QWORD PTR [rsi+rdx*8]
   1400297f0:	mov    QWORD PTR [r9+0x8],rax
   1400297f4:	mov    QWORD PTR [rsi+rdx*8],r9
   1400297f8:	mov    r9,r8
   1400297fb:	test   r8,r8
   1400297fe:	jne    0x1400297e0
   140029800:	inc    r11d
   140029803:	add    r10,0x8
   140029807:	cmp    r11d,DWORD PTR [rbx+0x10]
   14002980b:	jb     0x1400297d0
   14002980d:	mov    rcx,QWORD PTR [rbx]
   140029810:	call   0x1400336a0
   140029815:	mov    QWORD PTR [rbx],rsi
   140029818:	mov    DWORD PTR [rbx+0x10],edi
   14002981b:	mov    eax,edi
   14002981d:	pxor   xmm0,xmm0
   140029821:	cvtsi2ss xmm0,rax
   140029826:	movaps xmm1,xmm0
   140029829:	mulss  xmm1,DWORD PTR [rbx+0x1c]
   14002982e:	xor    ecx,ecx
   140029830:	movss  xmm2,DWORD PTR [rip+0x4dc60]        # 0x140077498
   140029838:	comiss xmm1,xmm2
   14002983b:	jbe    0x140029855
   14002983d:	subss  xmm1,xmm2
   140029841:	comiss xmm1,xmm2
   140029844:	jae    0x140029855
   140029846:	movabs rdx,0x8000000000000000
   140029850:	mov    rcx,rdx
   140029853:	jmp    0x14002985f
   140029855:	movabs rdx,0x8000000000000000
   14002985f:	cvttss2si rax,xmm1
   140029864:	add    rax,rcx
   140029867:	mov    QWORD PTR [rbx+0x20],rax
   14002986b:	mulss  xmm0,DWORD PTR [rbx+0x18]
   140029870:	xor    ecx,ecx
   140029872:	comiss xmm0,xmm2
   140029875:	jbe    0x140029883
   140029877:	subss  xmm0,xmm2
   14002987b:	comiss xmm0,xmm2
   14002987e:	jae    0x140029883
   140029880:	mov    rcx,rdx
   140029883:	cvttss2si rax,xmm0
   140029888:	add    rax,rcx
   14002988b:	mov    QWORD PTR [rbx+0x28],rax
   14002988f:	cmp    rax,0x11
   140029893:	jae    0x14002989d
   140029895:	mov    QWORD PTR [rbx+0x28],0x0
   14002989d:	add    rsp,0x30
   1400298a1:	pop    rdi
   1400298a2:	pop    rsi
   1400298a3:	pop    rbx
   1400298a4:	ret    
   1400298a5:	int3   
   1400298a6:	int3   
   1400298a7:	int3   
   1400298a8:	int3   
   1400298a9:	int3   
   1400298aa:	int3   
   1400298ab:	int3   
   1400298ac:	int3   
   1400298ad:	int3   
   1400298ae:	int3   
   1400298af:	int3   
   1400298b0:	pxor   xmm0,xmm0
   1400298b4:	cvtsi2ss xmm0,rdx
   1400298b9:	test   rdx,rdx
   1400298bc:	jns    0x1400298c6
   1400298be:	addss  xmm0,DWORD PTR [rip+0x4dbd6]        # 0x14007749c
   1400298c6:	divss  xmm0,DWORD PTR [rcx+0x14]
   1400298cb:	movss  xmm1,DWORD PTR [rip+0x4dbc5]        # 0x140077498
   1400298d3:	xor    eax,eax
   1400298d5:	comiss xmm0,xmm1
   1400298d8:	jbe    0x1400298f0
   1400298da:	subss  xmm0,xmm1
   1400298de:	comiss xmm0,xmm1
   1400298e1:	jae    0x1400298f0
   1400298e3:	movabs rcx,0x8000000000000000
   1400298ed:	mov    rax,rcx
   1400298f0:	mov    r9d,0xffffffff
   1400298f6:	cvttss2si rdx,xmm0
   1400298fb:	lea    r8,[rip+0x46d9e]        # 0x1400706a0
   140029902:	add    rdx,rax
   140029905:	cmp    rdx,r9
   140029908:	cmova  edx,r9d
   14002990c:	xor    ecx,ecx
   14002990e:	cmp    edx,0x11
   140029911:	jbe    0x140029920
   140029913:	mov    rax,r8
   140029916:	add    rax,0x4
   14002991a:	inc    ecx
   14002991c:	cmp    edx,DWORD PTR [rax]
   14002991e:	ja     0x140029916
   140029920:	movsxd rax,ecx
   140029923:	mov    eax,DWORD PTR [r8+rax*4]
   140029927:	cmp    eax,r9d
   14002992a:	cmove  eax,edx
   14002992d:	ret    
   14002992e:	int3   
   14002992f:	int3   
   140029930:	sub    rcx,0x8
   140029934:	jmp    0x140021000
   140029939:	int3   
   14002993a:	int3   
   14002993b:	int3   
   14002993c:	int3   
   14002993d:	int3   
   14002993e:	int3   
   14002993f:	int3   
   140029940:	sub    rsp,0x28
   140029944:	test   r8,r8
   140029947:	je     0x140029951
   140029949:	mov    rcx,r8
   14002994c:	call   0x14002aba0
   140029951:	add    rsp,0x28
   140029955:	ret    
   140029956:	int3   
   140029957:	int3   
   140029958:	int3   
   140029959:	int3   
   14002995a:	int3   
   14002995b:	int3   
   14002995c:	int3   
   14002995d:	int3   
   14002995e:	int3   
   14002995f:	int3   
   140029960:	mov    QWORD PTR [rsp+0x8],rbx
   140029965:	push   rdi
   140029966:	sub    rsp,0x20
   14002996a:	mov    ebx,edx
   14002996c:	mov    rdi,rcx
   14002996f:	call   0x1400299d0
   140029974:	test   bl,0x1
   140029977:	je     0x140029981
   140029979:	mov    rcx,rdi
   14002997c:	call   0x1400330c0
   140029981:	mov    rax,rdi
   140029984:	mov    rbx,QWORD PTR [rsp+0x30]
   140029989:	add    rsp,0x20
   14002998d:	pop    rdi
   14002998e:	ret    
   14002998f:	int3   
   140029990:	mov    QWORD PTR [rsp+0x8],rcx
   140029995:	push   rbx
   140029996:	sub    rsp,0x30
   14002999a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400299a3:	mov    rbx,rcx
   1400299a6:	mov    r8,QWORD PTR [rcx+0x8]
   1400299aa:	mov    r9,r8
   1400299ad:	mov    r8,QWORD PTR [r8]
   1400299b0:	lea    rdx,[rsp+0x48]
   1400299b5:	call   0x14002b150
   1400299ba:	nop
   1400299bb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400299bf:	add    rsp,0x30
   1400299c3:	pop    rbx
   1400299c4:	jmp    0x1400330c0
   1400299c9:	int3   
   1400299ca:	int3   
   1400299cb:	int3   
   1400299cc:	int3   
   1400299cd:	int3   
   1400299ce:	int3   
   1400299cf:	int3   
   1400299d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400299d5:	push   rdi
   1400299d6:	sub    rsp,0x30
   1400299da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400299e3:	mov    QWORD PTR [rsp+0x58],rbx
   1400299e8:	mov    rdi,rcx
   1400299eb:	lea    rax,[rip+0x46f86]        # 0x140070978
   1400299f2:	mov    QWORD PTR [rcx],rax
   1400299f5:	call   0x140029b80
   1400299fa:	nop
   1400299fb:	lea    rbx,[rdi+0x20]
   1400299ff:	mov    QWORD PTR [rsp+0x48],rbx
   140029a04:	mov    r8,QWORD PTR [rbx+0x8]
   140029a08:	mov    r9,r8
   140029a0b:	mov    r8,QWORD PTR [r8]
   140029a0e:	lea    rdx,[rsp+0x50]
   140029a13:	mov    rcx,rbx
   140029a16:	call   0x14002b150
   140029a1b:	nop
   140029a1c:	mov    rcx,QWORD PTR [rbx+0x8]
   140029a20:	call   0x1400330c0
   140029a25:	nop
   140029a26:	lea    rax,[rip+0x465db]        # 0x140070008
   140029a2d:	mov    QWORD PTR [rdi],rax
   140029a30:	mov    rbx,QWORD PTR [rsp+0x58]
   140029a35:	add    rsp,0x30
   140029a39:	pop    rdi
   140029a3a:	ret    
   140029a3b:	int3   
   140029a3c:	int3   
   140029a3d:	int3   
   140029a3e:	int3   
   140029a3f:	int3   
   140029a40:	rex push rsi
   140029a42:	push   rdi
   140029a43:	push   r12
   140029a45:	push   r13
   140029a47:	push   r14
   140029a49:	sub    rsp,0x30
   140029a4d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029a56:	mov    QWORD PTR [rsp+0x68],rbx
   140029a5b:	mov    QWORD PTR [rsp+0x70],rbp
   140029a60:	mov    r12,r9
   140029a63:	mov    r13d,r8d
   140029a66:	mov    r14,rdx
   140029a69:	mov    rsi,rcx
   140029a6c:	cmp    BYTE PTR [rcx+0x8],0x0
   140029a70:	jne    0x140029b58
   140029a76:	xor    ebp,ebp
   140029a78:	cmp    QWORD PTR [rcx+0x10],rbp
   140029a7c:	jne    0x140029aa5
   140029a7e:	mov    ecx,0xfb8
   140029a83:	call   0x1400331a0
   140029a88:	mov    QWORD PTR [rsp+0x60],rax
   140029a8d:	test   rax,rax
   140029a90:	je     0x140029a9e
   140029a92:	xor    edx,edx
   140029a94:	mov    rcx,rax
   140029a97:	call   0x140020830
   140029a9c:	jmp    0x140029aa1
   140029a9e:	mov    rax,rbp
   140029aa1:	mov    QWORD PTR [rsi+0x10],rax
   140029aa5:	mov    rcx,QWORD PTR [rsi+0x10]
   140029aa9:	test   rcx,rcx
   140029aac:	je     0x140029aea
   140029aae:	mov    rax,QWORD PTR [rcx]
   140029ab1:	mov    r9,r12
   140029ab4:	mov    r8d,r13d
   140029ab7:	mov    rdx,r14
   140029aba:	call   QWORD PTR [rax+0x8]
   140029abd:	mov    rcx,QWORD PTR [rsi+0x10]
   140029ac1:	mov    rax,QWORD PTR [rcx]
   140029ac4:	lea    r8,[rsi+0x54]
   140029ac8:	lea    rdx,[rsi+0x58]
   140029acc:	call   QWORD PTR [rax+0xa0]
   140029ad2:	mov    rcx,QWORD PTR [rsi+0x10]
   140029ad6:	mov    rax,QWORD PTR [rcx]
   140029ad9:	lea    r9,[rsi+0x50]
   140029add:	mov    r8d,DWORD PTR [rsi+0x54]
   140029ae1:	mov    edx,DWORD PTR [rsi+0x58]
   140029ae4:	call   QWORD PTR [rax+0xe8]
   140029aea:	cmp    QWORD PTR [rsi+0x18],0x0
   140029aef:	jne    0x140029b1b
   140029af1:	mov    ecx,0xfb8
   140029af6:	call   0x1400331a0
   140029afb:	mov    QWORD PTR [rsp+0x60],rax
   140029b00:	test   rax,rax
   140029b03:	je     0x140029b14
   140029b05:	mov    edx,0x6
   140029b0a:	mov    rcx,rax
   140029b0d:	call   0x140020830
   140029b12:	jmp    0x140029b17
   140029b14:	mov    rax,rbp
   140029b17:	mov    QWORD PTR [rsi+0x18],rax
   140029b1b:	mov    rcx,QWORD PTR [rsi+0x18]
   140029b1f:	test   rcx,rcx
   140029b22:	je     0x140029b33
   140029b24:	mov    rax,QWORD PTR [rcx]
   140029b27:	mov    r9,r12
   140029b2a:	mov    r8d,r13d
   140029b2d:	mov    rdx,r14
   140029b30:	call   QWORD PTR [rax+0x8]
   140029b33:	mov    rcx,rsi
   140029b36:	call   0x14002a830
   140029b3b:	cmp    QWORD PTR [rsi+0x10],0x0
   140029b40:	je     0x140029b4e
   140029b42:	cmp    QWORD PTR [rsi+0x18],0x0
   140029b47:	je     0x140029b4e
   140029b49:	mov    ebp,0x1
   140029b4e:	mov    BYTE PTR [rsi+0x8],bpl
   140029b52:	movzx  eax,bpl
   140029b56:	jmp    0x140029b5c
   140029b58:	movzx  eax,BYTE PTR [rcx+0x8]
   140029b5c:	mov    rbx,QWORD PTR [rsp+0x68]
   140029b61:	mov    rbp,QWORD PTR [rsp+0x70]
   140029b66:	add    rsp,0x30
   140029b6a:	pop    r14
   140029b6c:	pop    r13
   140029b6e:	pop    r12
   140029b70:	pop    rdi
   140029b71:	pop    rsi
   140029b72:	ret    
   140029b73:	int3   
   140029b74:	int3   
   140029b75:	int3   
   140029b76:	int3   
   140029b77:	int3   
   140029b78:	int3   
   140029b79:	int3   
   140029b7a:	int3   
   140029b7b:	int3   
   140029b7c:	int3   
   140029b7d:	int3   
   140029b7e:	int3   
   140029b7f:	int3   
   140029b80:	rex push rbx
   140029b82:	sub    rsp,0x20
   140029b86:	mov    rbx,rcx
   140029b89:	mov    rcx,QWORD PTR [rcx+0x10]
   140029b8d:	test   rcx,rcx
   140029b90:	je     0x140029bb3
   140029b92:	mov    rax,QWORD PTR [rcx]
   140029b95:	call   QWORD PTR [rax+0x10]
   140029b98:	mov    rcx,QWORD PTR [rbx+0x10]
   140029b9c:	test   rcx,rcx
   140029b9f:	je     0x140029bab
   140029ba1:	mov    rax,QWORD PTR [rcx]
   140029ba4:	mov    edx,0x1
   140029ba9:	call   QWORD PTR [rax]
   140029bab:	mov    QWORD PTR [rbx+0x10],0x0
   140029bb3:	mov    rcx,QWORD PTR [rbx+0x18]
   140029bb7:	test   rcx,rcx
   140029bba:	je     0x140029bdd
   140029bbc:	mov    rax,QWORD PTR [rcx]
   140029bbf:	call   QWORD PTR [rax+0x10]
   140029bc2:	mov    rcx,QWORD PTR [rbx+0x18]
   140029bc6:	test   rcx,rcx
   140029bc9:	je     0x140029bd5
   140029bcb:	mov    rax,QWORD PTR [rcx]
   140029bce:	mov    edx,0x1
   140029bd3:	call   QWORD PTR [rax]
   140029bd5:	mov    QWORD PTR [rbx+0x18],0x0
   140029bdd:	mov    rdx,QWORD PTR [rbx+0x28]
   140029be1:	lea    rcx,[rbx+0x20]
   140029be5:	mov    rdx,QWORD PTR [rdx+0x8]
   140029be9:	call   0x14002b0d0
   140029bee:	mov    r11,QWORD PTR [rbx+0x28]
   140029bf2:	mov    QWORD PTR [r11+0x8],r11
   140029bf6:	mov    rax,QWORD PTR [rbx+0x28]
   140029bfa:	mov    QWORD PTR [rax],rax
   140029bfd:	mov    rax,QWORD PTR [rbx+0x28]
   140029c01:	mov    QWORD PTR [rax+0x10],rax
   140029c05:	mov    QWORD PTR [rbx+0x30],0x0
   140029c0d:	mov    al,0x1
   140029c0f:	add    rsp,0x20
   140029c13:	pop    rbx
   140029c14:	ret    
   140029c15:	int3   
   140029c16:	int3   
   140029c17:	int3   
   140029c18:	int3   
   140029c19:	int3   
   140029c1a:	int3   
   140029c1b:	int3   
   140029c1c:	int3   
   140029c1d:	int3   
   140029c1e:	int3   
   140029c1f:	int3   
   140029c20:	rex push rbx
   140029c22:	sub    rsp,0x20
   140029c26:	cmp    QWORD PTR [rcx+0x10],0x0
   140029c2b:	mov    rbx,rcx
   140029c2e:	je     0x140029c50
   140029c30:	cmp    QWORD PTR [rcx+0x18],0x0
   140029c35:	je     0x140029c50
   140029c37:	dec    edx
   140029c39:	je     0x140029c58
   140029c3b:	dec    edx
   140029c3d:	jne    0x140029c50
   140029c3f:	cvttsd2si edx,xmm2
   140029c43:	call   0x14002a790
   140029c48:	mov    al,0x1
   140029c4a:	add    rsp,0x20
   140029c4e:	pop    rbx
   140029c4f:	ret    
   140029c50:	xor    al,al
   140029c52:	add    rsp,0x20
   140029c56:	pop    rbx
   140029c57:	ret    
   140029c58:	mov    QWORD PTR [rsp+0x30],rdi
   140029c5d:	cvttsd2si edi,xmm2
   140029c61:	cmp    edi,0xffffffff
   140029c64:	je     0x140029c86
   140029c66:	xorpd  xmm1,xmm1
   140029c6a:	call   0x14002a130
   140029c6f:	mov    edx,edi
   140029c71:	mov    rcx,rbx
   140029c74:	call   0x14002a570
   140029c79:	mov    rdi,QWORD PTR [rsp+0x30]
   140029c7e:	mov    al,0x1
   140029c80:	add    rsp,0x20
   140029c84:	pop    rbx
   140029c85:	ret    
   140029c86:	movsd  xmm1,QWORD PTR [rip+0x4d812]        # 0x1400774a0
   140029c8e:	call   0x14002a130
   140029c93:	mov    rdi,QWORD PTR [rsp+0x30]
   140029c98:	mov    al,0x1
   140029c9a:	add    rsp,0x20
   140029c9e:	pop    rbx
   140029c9f:	ret    
   140029ca0:	mov    QWORD PTR [rsp+0x18],rbx
   140029ca5:	push   rdi
   140029ca6:	sub    rsp,0x20
   140029caa:	cmp    QWORD PTR [rcx+0x10],0x0
   140029caf:	mov    rbx,r8
   140029cb2:	mov    rdi,rcx
   140029cb5:	je     0x140029dd7
   140029cbb:	test   rbx,rbx
   140029cbe:	je     0x140029dd7
   140029cc4:	dec    edx
   140029cc6:	mov    QWORD PTR [rsp+0x38],rsi
   140029ccb:	je     0x140029d2c
   140029ccd:	dec    edx
   140029ccf:	jne    0x140029d1a
   140029cd1:	mov    rcx,QWORD PTR [rcx+0x10]
   140029cd5:	mov    DWORD PTR [rsp+0x30],0xffffffff
   140029cdd:	lea    rdx,[rsp+0x30]
   140029ce2:	mov    rax,QWORD PTR [rcx]
   140029ce5:	xor    r8d,r8d
   140029ce8:	xor    sil,sil
   140029ceb:	call   QWORD PTR [rax+0xa0]
   140029cf1:	test   al,al
   140029cf3:	je     0x140029d06
   140029cf5:	movd   xmm0,DWORD PTR [rsp+0x30]
   140029cfb:	cvtdq2pd xmm0,xmm0
   140029cff:	mov    sil,0x1
   140029d02:	movsd  QWORD PTR [rbx],xmm0
   140029d06:	movzx  eax,sil
   140029d0a:	mov    rsi,QWORD PTR [rsp+0x38]
   140029d0f:	mov    rbx,QWORD PTR [rsp+0x40]
   140029d14:	add    rsp,0x20
   140029d18:	pop    rdi
   140029d19:	ret    
   140029d1a:	xor    al,al
   140029d1c:	mov    rsi,QWORD PTR [rsp+0x38]
   140029d21:	mov    rbx,QWORD PTR [rsp+0x40]
   140029d26:	add    rsp,0x20
   140029d2a:	pop    rdi
   140029d2b:	ret    
   140029d2c:	mov    rcx,QWORD PTR [rcx+0x10]
   140029d30:	mov    DWORD PTR [rsp+0x30],0x0
   140029d38:	or     r8d,0xffffffff
   140029d3c:	mov    rax,QWORD PTR [rcx]
   140029d3f:	lea    r9,[rsp+0x30]
   140029d44:	or     edx,r8d
   140029d47:	call   QWORD PTR [rax+0xe8]
   140029d4d:	mov    r11d,DWORD PTR [rsp+0x30]
   140029d52:	and    r11d,0x1
   140029d56:	cmp    r11b,0x1
   140029d5a:	sete   al
   140029d5d:	test   al,al
   140029d5f:	je     0x140029d80
   140029d61:	mov    rsi,QWORD PTR [rsp+0x38]
   140029d66:	movabs rax,0xbff0000000000000
   140029d70:	mov    QWORD PTR [rbx],rax
   140029d73:	mov    al,0x1
   140029d75:	mov    rbx,QWORD PTR [rsp+0x40]
   140029d7a:	add    rsp,0x20
   140029d7e:	pop    rdi
   140029d7f:	ret    
   140029d80:	xor    sil,sil
   140029d83:	cmp    QWORD PTR [rdi+0x10],0x0
   140029d88:	je     0x140029d06
   140029d8e:	mov    rcx,QWORD PTR [rdi+0x10]
   140029d92:	mov    DWORD PTR [rsp+0x30],0xffffffff
   140029d9a:	lea    r8,[rsp+0x30]
   140029d9f:	mov    rax,QWORD PTR [rcx]
   140029da2:	xor    edx,edx
   140029da4:	call   QWORD PTR [rax+0xa0]
   140029daa:	test   al,al
   140029dac:	je     0x140029d06
   140029db2:	mov    ecx,DWORD PTR [rsp+0x30]
   140029db6:	mov    eax,0x66666667
   140029dbb:	imul   ecx
   140029dbd:	sar    edx,0x2
   140029dc0:	mov    eax,edx
   140029dc2:	shr    eax,0x1f
   140029dc5:	add    edx,eax
   140029dc7:	lea    eax,[rdx+rdx*4]
   140029dca:	add    eax,eax
   140029dcc:	sub    ecx,eax
   140029dce:	movd   xmm0,ecx
   140029dd2:	jmp    0x140029cfb
   140029dd7:	xor    al,al
   140029dd9:	mov    rbx,QWORD PTR [rsp+0x40]
   140029dde:	add    rsp,0x20
   140029de2:	pop    rdi
   140029de3:	ret    
   140029de4:	int3   
   140029de5:	int3   
   140029de6:	int3   
   140029de7:	int3   
   140029de8:	int3   
   140029de9:	int3   
   140029dea:	int3   
   140029deb:	int3   
   140029dec:	int3   
   140029ded:	int3   
   140029dee:	int3   
   140029def:	int3   
   140029df0:	mov    QWORD PTR [rsp+0x8],rbx
   140029df5:	mov    QWORD PTR [rsp+0x10],rsi
   140029dfa:	push   rdi
   140029dfb:	sub    rsp,0x20
   140029dff:	mov    rbx,rcx
   140029e02:	mov    rcx,QWORD PTR [rcx+0x10]
   140029e06:	mov    rdi,r9
   140029e09:	mov    rsi,r8
   140029e0c:	test   rcx,rcx
   140029e0f:	je     0x140029e39
   140029e11:	mov    rax,QWORD PTR [rcx]
   140029e14:	lea    r8,[rip+0xfffffffffffffb25]        # 0x140029940
   140029e1b:	mov    r9,rbx
   140029e1e:	call   QWORD PTR [rax+0x48]
   140029e21:	mov    QWORD PTR [rbx+0x40],rsi
   140029e25:	mov    QWORD PTR [rbx+0x48],rdi
   140029e29:	mov    rbx,QWORD PTR [rsp+0x30]
   140029e2e:	mov    rsi,QWORD PTR [rsp+0x38]
   140029e33:	add    rsp,0x20
   140029e37:	pop    rdi
   140029e38:	ret    
   140029e39:	mov    rbx,QWORD PTR [rsp+0x30]
   140029e3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140029e43:	xor    al,al
   140029e45:	add    rsp,0x20
   140029e49:	pop    rdi
   140029e4a:	ret    
   140029e4b:	int3   
   140029e4c:	int3   
   140029e4d:	int3   
   140029e4e:	int3   
   140029e4f:	int3   
   140029e50:	mov    r11,rsp
   140029e53:	mov    QWORD PTR [r11+0x18],rbx
   140029e57:	mov    QWORD PTR [r11+0x20],rbp
   140029e5b:	push   rsi
   140029e5c:	push   rdi
   140029e5d:	push   r12
   140029e5f:	sub    rsp,0x60
   140029e63:	mov    esi,r9d
   140029e66:	mov    ebp,r8d
   140029e69:	mov    r12,rcx
   140029e6c:	mov    rcx,QWORD PTR [rcx+0x10]
   140029e70:	mov    DWORD PTR [r11+0x8],0x0
   140029e78:	mov    rdi,rdx
   140029e7b:	movaps XMMWORD PTR [rsp+0x50],xmm6
   140029e80:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140029e85:	mov    rax,QWORD PTR [rcx]
   140029e88:	lea    r9,[r11+0x8]
   140029e8c:	mov    r8d,esi
   140029e8f:	mov    edx,ebp
   140029e91:	call   QWORD PTR [rax+0xe8]
   140029e97:	test   BYTE PTR [rsp+0x80],0x1
   140029e9f:	xorpd  xmm7,xmm7
   140029ea3:	je     0x140029eaf
   140029ea5:	movsd  xmm6,QWORD PTR [rip+0x4d5f3]        # 0x1400774a0
   140029ead:	jmp    0x140029eb3
   140029eaf:	movapd xmm6,xmm7
   140029eb3:	mov    rbx,QWORD PTR [rdi+0x8]
   140029eb7:	mov    rax,QWORD PTR [rbx+0x8]
   140029ebb:	cmp    BYTE PTR [rax+0x29],0x0
   140029ebf:	jne    0x140029ed9
   140029ec1:	cmp    DWORD PTR [rax+0x18],0x1
   140029ec5:	jae    0x140029ecd
   140029ec7:	mov    rax,QWORD PTR [rax+0x10]
   140029ecb:	jmp    0x140029ed3
   140029ecd:	mov    rbx,rax
   140029ed0:	mov    rax,QWORD PTR [rax]
   140029ed3:	cmp    BYTE PTR [rax+0x29],0x0
   140029ed7:	je     0x140029ec1
   140029ed9:	cmp    rbx,QWORD PTR [rdi+0x8]
   140029edd:	je     0x140029ee5
   140029edf:	cmp    DWORD PTR [rbx+0x18],0x1
   140029ee3:	jbe    0x140029f18
   140029ee5:	lea    rdx,[rsp+0x30]
   140029eea:	mov    rcx,rdi
   140029eed:	movsd  QWORD PTR [rsp+0x38],xmm7
   140029ef3:	mov    DWORD PTR [rsp+0x30],0x1
   140029efb:	call   0x1400312d0
   140029f00:	lea    rdx,[rsp+0x30]
   140029f05:	mov    r8,rbx
   140029f08:	mov    rcx,rdi
   140029f0b:	mov    r9,rax
   140029f0e:	call   0x140030730
   140029f13:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f18:	mov    rcx,QWORD PTR [r12+0x10]
   140029f1d:	lea    r8,[rsp+0x88]
   140029f25:	mov    r9d,ebp
   140029f28:	movsd  QWORD PTR [rbx+0x20],xmm6
   140029f2d:	mov    rax,QWORD PTR [rcx]
   140029f30:	mov    edx,0x14
   140029f35:	mov    DWORD PTR [rsp+0x20],esi
   140029f39:	call   QWORD PTR [rax+0xb0]
   140029f3f:	mov    rbx,QWORD PTR [rdi+0x8]
   140029f43:	mov    rax,QWORD PTR [rbx+0x8]
   140029f47:	cmp    BYTE PTR [rax+0x29],0x0
   140029f4b:	jne    0x140029f68
   140029f4d:	nop    DWORD PTR [rax]
   140029f50:	cmp    DWORD PTR [rax+0x18],0x14
   140029f54:	jae    0x140029f5c
   140029f56:	mov    rax,QWORD PTR [rax+0x10]
   140029f5a:	jmp    0x140029f62
   140029f5c:	mov    rbx,rax
   140029f5f:	mov    rax,QWORD PTR [rax]
   140029f62:	cmp    BYTE PTR [rax+0x29],0x0
   140029f66:	je     0x140029f50
   140029f68:	cmp    rbx,QWORD PTR [rdi+0x8]
   140029f6c:	je     0x140029f84
   140029f6e:	cmp    DWORD PTR [rbx+0x18],0x14
   140029f72:	ja     0x140029f84
   140029f74:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140029f7d:	movsd  QWORD PTR [rbx+0x20],xmm0
   140029f82:	jmp    0x140029fc6
   140029f84:	lea    rdx,[rsp+0x30]
   140029f89:	mov    rcx,rdi
   140029f8c:	movsd  QWORD PTR [rsp+0x38],xmm7
   140029f92:	mov    DWORD PTR [rsp+0x30],0x14
   140029f9a:	call   0x1400312d0
   140029f9f:	lea    rdx,[rsp+0x30]
   140029fa4:	mov    r8,rbx
   140029fa7:	mov    rcx,rdi
   140029faa:	mov    r9,rax
   140029fad:	call   0x140030730
   140029fb2:	mov    r11,QWORD PTR [rsp+0x30]
   140029fb7:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140029fc0:	movsd  QWORD PTR [r11+0x20],xmm0
   140029fc6:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140029fcb:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140029fd0:	lea    r11,[rsp+0x60]
   140029fd5:	mov    rbx,QWORD PTR [r11+0x30]
   140029fd9:	mov    rbp,QWORD PTR [r11+0x38]
   140029fdd:	mov    rsp,r11
   140029fe0:	pop    r12
   140029fe2:	pop    rdi
   140029fe3:	pop    rsi
   140029fe4:	ret    
   140029fe5:	int3   
   140029fe6:	int3   
   140029fe7:	int3   
   140029fe8:	int3   
   140029fe9:	int3   
   140029fea:	int3   
   140029feb:	int3   
   140029fec:	int3   
   140029fed:	int3   
   140029fee:	int3   
   140029fef:	int3   
   140029ff0:	mov    QWORD PTR [rsp+0x10],rbx
   140029ff5:	push   rdi
   140029ff6:	sub    rsp,0x40
   140029ffa:	mov    rbx,QWORD PTR [rcx+0x8]
   140029ffe:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14002a003:	mov    rdi,rcx
   14002a006:	mov    rax,QWORD PTR [rbx+0x8]
   14002a00a:	cmp    BYTE PTR [rax+0x29],0x0
   14002a00e:	jne    0x14002a028
   14002a010:	cmp    DWORD PTR [rax+0x18],0x1
   14002a014:	jae    0x14002a01c
   14002a016:	mov    rax,QWORD PTR [rax+0x10]
   14002a01a:	jmp    0x14002a022
   14002a01c:	mov    rbx,rax
   14002a01f:	mov    rax,QWORD PTR [rax]
   14002a022:	cmp    BYTE PTR [rax+0x29],0x0
   14002a026:	je     0x14002a010
   14002a028:	xorpd  xmm6,xmm6
   14002a02c:	cmp    rbx,QWORD PTR [rcx+0x8]
   14002a030:	je     0x14002a038
   14002a032:	cmp    DWORD PTR [rbx+0x18],0x1
   14002a036:	jbe    0x14002a068
   14002a038:	lea    rdx,[rsp+0x20]
   14002a03d:	movsd  QWORD PTR [rsp+0x28],xmm6
   14002a043:	mov    DWORD PTR [rsp+0x20],0x1
   14002a04b:	call   0x1400312d0
   14002a050:	lea    rdx,[rsp+0x50]
   14002a055:	mov    r8,rbx
   14002a058:	mov    r9,rax
   14002a05b:	mov    rcx,rdi
   14002a05e:	call   0x140030730
   14002a063:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a068:	ucomisd xmm6,QWORD PTR [rbx+0x20]
   14002a06d:	jp     0x14002a10e
   14002a073:	jne    0x14002a10e
   14002a079:	mov    rbx,QWORD PTR [rdi+0x8]
   14002a07d:	mov    rax,QWORD PTR [rbx+0x8]
   14002a081:	cmp    BYTE PTR [rax+0x29],0x0
   14002a085:	jne    0x14002a09f
   14002a087:	cmp    DWORD PTR [rax+0x18],0x14
   14002a08b:	jae    0x14002a093
   14002a08d:	mov    rax,QWORD PTR [rax+0x10]
   14002a091:	jmp    0x14002a099
   14002a093:	mov    rbx,rax
   14002a096:	mov    rax,QWORD PTR [rax]
   14002a099:	cmp    BYTE PTR [rax+0x29],0x0
   14002a09d:	je     0x14002a087
   14002a09f:	cmp    rbx,QWORD PTR [rdi+0x8]
   14002a0a3:	je     0x14002a0ab
   14002a0a5:	cmp    DWORD PTR [rbx+0x18],0x14
   14002a0a9:	jbe    0x14002a0de
   14002a0ab:	lea    rdx,[rsp+0x20]
   14002a0b0:	mov    rcx,rdi
   14002a0b3:	movsd  QWORD PTR [rsp+0x28],xmm6
   14002a0b9:	mov    DWORD PTR [rsp+0x20],0x14
   14002a0c1:	call   0x1400312d0
   14002a0c6:	lea    rdx,[rsp+0x50]
   14002a0cb:	mov    r8,rbx
   14002a0ce:	mov    rcx,rdi
   14002a0d1:	mov    r9,rax
   14002a0d4:	call   0x140030730
   14002a0d9:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a0de:	ucomisd xmm6,QWORD PTR [rbx+0x20]
   14002a0e3:	jp     0x14002a0fc
   14002a0e5:	jne    0x14002a0fc
   14002a0e7:	mov    eax,0x2
   14002a0ec:	mov    rbx,QWORD PTR [rsp+0x58]
   14002a0f1:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002a0f6:	add    rsp,0x40
   14002a0fa:	pop    rdi
   14002a0fb:	ret    
   14002a0fc:	xor    eax,eax
   14002a0fe:	mov    rbx,QWORD PTR [rsp+0x58]
   14002a103:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002a108:	add    rsp,0x40
   14002a10c:	pop    rdi
   14002a10d:	ret    
   14002a10e:	mov    rbx,QWORD PTR [rsp+0x58]
   14002a113:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002a118:	mov    eax,0x1
   14002a11d:	add    rsp,0x40
   14002a121:	pop    rdi
   14002a122:	ret    
   14002a123:	int3   
   14002a124:	int3   
   14002a125:	int3   
   14002a126:	int3   
   14002a127:	int3   
   14002a128:	int3   
   14002a129:	int3   
   14002a12a:	int3   
   14002a12b:	int3   
   14002a12c:	int3   
   14002a12d:	int3   
   14002a12e:	int3   
   14002a12f:	int3   
   14002a130:	mov    rax,rsp
   14002a133:	push   rbp
   14002a134:	push   rsi
   14002a135:	push   rdi
   14002a136:	push   r12
   14002a138:	push   r13
   14002a13a:	push   r14
   14002a13c:	push   r15
   14002a13e:	lea    rbp,[rax-0x5f]
   14002a142:	sub    rsp,0xf0
   14002a149:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14002a151:	mov    QWORD PTR [rax+0x10],rbx
   14002a155:	movaps XMMWORD PTR [rax-0x48],xmm6
   14002a159:	movaps XMMWORD PTR [rax-0x58],xmm7
   14002a15d:	movapd xmm6,xmm1
   14002a161:	mov    r14,rcx
   14002a164:	xor    r12b,r12b
   14002a167:	mov    BYTE PTR [rbp+0x67],r12b
   14002a16b:	cmp    QWORD PTR [rcx+0x10],0x0
   14002a170:	je     0x14002a505
   14002a176:	xor    r13d,r13d
   14002a179:	cmp    QWORD PTR [rcx+0x30],r13
   14002a17d:	jbe    0x14002a505
   14002a183:	lea    rdi,[rcx+0x20]
   14002a187:	xorpd  xmm7,xmm7
   14002a18b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a190:	mov    rbx,QWORD PTR [rdi+0x8]
   14002a194:	mov    rax,QWORD PTR [rbx+0x8]
   14002a198:	cmp    BYTE PTR [rax+0x41],0x0
   14002a19c:	jne    0x14002a1b8
   14002a19e:	xchg   ax,ax
   14002a1a0:	cmp    DWORD PTR [rax+0x18],r13d
   14002a1a4:	jae    0x14002a1ac
   14002a1a6:	mov    rax,QWORD PTR [rax+0x10]
   14002a1aa:	jmp    0x14002a1b2
   14002a1ac:	mov    rbx,rax
   14002a1af:	mov    rax,QWORD PTR [rax]
   14002a1b2:	cmp    BYTE PTR [rax+0x41],0x0
   14002a1b6:	je     0x14002a1a0
   14002a1b8:	cmp    rbx,QWORD PTR [rdi+0x8]
   14002a1bc:	je     0x14002a1c4
   14002a1be:	cmp    r13d,DWORD PTR [rbx+0x18]
   14002a1c2:	jae    0x14002a219
   14002a1c4:	mov    DWORD PTR [rbp-0x69],r13d
   14002a1c8:	xor    r12d,r12d
   14002a1cb:	mov    QWORD PTR [rbp-0x61],r12
   14002a1cf:	mov    QWORD PTR [rbp-0x59],r12
   14002a1d3:	mov    QWORD PTR [rbp-0x51],r12
   14002a1d7:	mov    QWORD PTR [rsp+0x20],r12
   14002a1dc:	mov    QWORD PTR [rsp+0x28],r12
   14002a1e1:	mov    QWORD PTR [rsp+0x30],r12
   14002a1e6:	lea    rdx,[rbp-0x69]
   14002a1ea:	mov    rcx,rdi
   14002a1ed:	call   0x14002c120
   14002a1f2:	mov    r9,rax
   14002a1f5:	mov    r8,rbx
   14002a1f8:	lea    rdx,[rbp+0x7f]
   14002a1fc:	mov    rcx,rdi
   14002a1ff:	call   0x14002bb00
   14002a204:	mov    rbx,QWORD PTR [rbp+0x7f]
   14002a208:	mov    rcx,QWORD PTR [rbp-0x61]
   14002a20c:	test   rcx,rcx
   14002a20f:	je     0x14002a217
   14002a211:	call   0x1400330c0
   14002a216:	nop
   14002a217:	jmp    0x14002a21c
   14002a219:	xor    r12d,r12d
   14002a21c:	lea    rdx,[rbx+0x20]
   14002a220:	lea    rcx,[rbp-0x39]
   14002a224:	call   0x14002ac40
   14002a229:	nop
   14002a22a:	mov    rax,QWORD PTR [rbp-0x39]
   14002a22e:	mov    rsi,rax
   14002a231:	mov    r15,QWORD PTR [rbp-0x31]
   14002a235:	cmp    rax,r15
   14002a238:	je     0x14002a4b3
   14002a23e:	xchg   ax,ax
   14002a240:	mov    edi,DWORD PTR [rsi]
   14002a242:	mov    DWORD PTR [rbp+0x77],r12d
   14002a246:	mov    rcx,QWORD PTR [r14+0x10]
   14002a24a:	mov    rax,QWORD PTR [rcx]
   14002a24d:	lea    r9,[rbp+0x77]
   14002a251:	mov    r8d,edi
   14002a254:	mov    edx,r13d
   14002a257:	call   QWORD PTR [rax+0xe8]
   14002a25d:	test   al,al
   14002a25f:	je     0x14002a49e
   14002a265:	mov    QWORD PTR [rsp+0x30],r12
   14002a26a:	mov    ecx,0x30
   14002a26f:	call   0x1400331a0
   14002a274:	test   rax,rax
   14002a277:	je     0x14002a4d1
   14002a27d:	mov    QWORD PTR [rsp+0x28],rax
   14002a282:	mov    QWORD PTR [rax],rax
   14002a285:	mov    rax,QWORD PTR [rsp+0x28]
   14002a28a:	mov    QWORD PTR [rax+0x8],rax
   14002a28e:	mov    rax,QWORD PTR [rsp+0x28]
   14002a293:	mov    QWORD PTR [rax+0x10],rax
   14002a297:	mov    rax,QWORD PTR [rsp+0x28]
   14002a29c:	mov    BYTE PTR [rax+0x28],0x1
   14002a2a0:	mov    rax,QWORD PTR [rsp+0x28]
   14002a2a5:	mov    BYTE PTR [rax+0x29],0x1
   14002a2a9:	cmp    QWORD PTR [r14+0x10],0x0
   14002a2ae:	je     0x14002a2c3
   14002a2b0:	mov    r9d,edi
   14002a2b3:	mov    r8d,r13d
   14002a2b6:	lea    rdx,[rsp+0x20]
   14002a2bb:	mov    rcx,r14
   14002a2be:	call   0x140029e50
   14002a2c3:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a2c8:	mov    rax,QWORD PTR [rcx+0x8]
   14002a2cc:	mov    rbx,rcx
   14002a2cf:	cmp    BYTE PTR [rax+0x29],0x0
   14002a2d3:	jne    0x14002a2ed
   14002a2d5:	cmp    DWORD PTR [rax+0x18],0x1
   14002a2d9:	jae    0x14002a2e1
   14002a2db:	mov    rax,QWORD PTR [rax+0x10]
   14002a2df:	jmp    0x14002a2e7
   14002a2e1:	mov    rbx,rax
   14002a2e4:	mov    rax,QWORD PTR [rax]
   14002a2e7:	cmp    BYTE PTR [rax+0x29],0x0
   14002a2eb:	je     0x14002a2d5
   14002a2ed:	cmp    rbx,rcx
   14002a2f0:	je     0x14002a2f8
   14002a2f2:	cmp    DWORD PTR [rbx+0x18],0x1
   14002a2f6:	jbe    0x14002a32c
   14002a2f8:	mov    DWORD PTR [rbp-0x79],0x1
   14002a2ff:	movsd  QWORD PTR [rbp-0x71],xmm7
   14002a304:	lea    rdx,[rbp-0x79]
   14002a308:	lea    rcx,[rsp+0x20]
   14002a30d:	call   0x1400312d0
   14002a312:	mov    r9,rax
   14002a315:	mov    r8,rbx
   14002a318:	lea    rdx,[rsp+0x48]
   14002a31d:	lea    rcx,[rsp+0x20]
   14002a322:	call   0x140030730
   14002a327:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a32c:	movsd  QWORD PTR [rbx+0x20],xmm6
   14002a331:	lea    rcx,[rsp+0x20]
   14002a336:	call   0x140029ff0
   14002a33b:	mov    ecx,DWORD PTR [rbp+0x77]
   14002a33e:	cmp    ecx,eax
   14002a340:	je     0x14002a364
   14002a342:	and    ecx,0xffffffc0
   14002a345:	or     eax,ecx
   14002a347:	mov    rcx,QWORD PTR [r14+0x10]
   14002a34b:	mov    r10,QWORD PTR [rcx]
   14002a34e:	mov    r9d,eax
   14002a351:	mov    r8d,edi
   14002a354:	mov    edx,r13d
   14002a357:	call   QWORD PTR [r10+0xe0]
   14002a35e:	mov    BYTE PTR [rbp+0x67],al
   14002a361:	xor    r12d,r12d
   14002a364:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a369:	mov    rdi,QWORD PTR [rcx+0x8]
   14002a36d:	mov    rbx,rdi
   14002a370:	cmp    BYTE PTR [rdi+0x29],0x0
   14002a374:	jne    0x14002a3a7
   14002a376:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002a380:	mov    rdx,QWORD PTR [rbx+0x10]
   14002a384:	lea    rcx,[rsp+0x20]
   14002a389:	call   0x140013280
   14002a38e:	mov    rbx,QWORD PTR [rbx]
   14002a391:	mov    rcx,rdi
   14002a394:	call   0x1400330c0
   14002a399:	mov    rdi,rbx
   14002a39c:	cmp    BYTE PTR [rbx+0x29],0x0
   14002a3a0:	je     0x14002a380
   14002a3a2:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a3a7:	mov    QWORD PTR [rcx+0x8],rcx
   14002a3ab:	mov    rax,QWORD PTR [rsp+0x28]
   14002a3b0:	mov    QWORD PTR [rax],rax
   14002a3b3:	mov    rax,QWORD PTR [rsp+0x28]
   14002a3b8:	mov    QWORD PTR [rax+0x10],rax
   14002a3bc:	mov    QWORD PTR [rsp+0x30],r12
   14002a3c1:	mov    rdi,QWORD PTR [rsp+0x28]
   14002a3c6:	mov    rbx,QWORD PTR [rdi]
   14002a3c9:	cmp    rbx,rbx
   14002a3cc:	jne    0x14002a426
   14002a3ce:	mov    r12,QWORD PTR [rdi+0x8]
   14002a3d2:	mov    rbx,r12
   14002a3d5:	cmp    BYTE PTR [r12+0x29],0x0
   14002a3db:	jne    0x14002a407
   14002a3dd:	nop    DWORD PTR [rax]
   14002a3e0:	mov    rdx,QWORD PTR [rbx+0x10]
   14002a3e4:	lea    rcx,[rsp+0x20]
   14002a3e9:	call   0x140013280
   14002a3ee:	mov    rbx,QWORD PTR [rbx]
   14002a3f1:	mov    rcx,r12
   14002a3f4:	call   0x1400330c0
   14002a3f9:	mov    r12,rbx
   14002a3fc:	cmp    BYTE PTR [rbx+0x29],0x0
   14002a400:	je     0x14002a3e0
   14002a402:	mov    rdi,QWORD PTR [rsp+0x28]
   14002a407:	mov    QWORD PTR [rdi+0x8],rdi
   14002a40b:	mov    rax,QWORD PTR [rsp+0x28]
   14002a410:	mov    QWORD PTR [rax],rax
   14002a413:	mov    rax,QWORD PTR [rsp+0x28]
   14002a418:	mov    QWORD PTR [rax+0x10],rax
   14002a41c:	xor    r12d,r12d
   14002a41f:	mov    QWORD PTR [rsp+0x30],r12
   14002a424:	jmp    0x14002a491
   14002a426:	cmp    rbx,rdi
   14002a429:	je     0x14002a496
   14002a42b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a430:	mov    r8,rbx
   14002a433:	cmp    BYTE PTR [rbx+0x29],0x0
   14002a437:	jne    0x14002a47e
   14002a439:	mov    rax,QWORD PTR [rbx+0x10]
   14002a43d:	cmp    BYTE PTR [rax+0x29],0x0
   14002a441:	jne    0x14002a45e
   14002a443:	mov    rbx,rax
   14002a446:	mov    rax,QWORD PTR [rax]
   14002a449:	cmp    BYTE PTR [rax+0x29],0x0
   14002a44d:	jne    0x14002a47e
   14002a44f:	nop
   14002a450:	mov    rbx,rax
   14002a453:	mov    rax,QWORD PTR [rax]
   14002a456:	cmp    BYTE PTR [rax+0x29],0x0
   14002a45a:	je     0x14002a450
   14002a45c:	jmp    0x14002a47e
   14002a45e:	mov    rax,QWORD PTR [rbx+0x8]
   14002a462:	cmp    BYTE PTR [rax+0x29],0x0
   14002a466:	jne    0x14002a47b
   14002a468:	cmp    rbx,QWORD PTR [rax+0x10]
   14002a46c:	jne    0x14002a47b
   14002a46e:	mov    rbx,rax
   14002a471:	mov    rax,QWORD PTR [rax+0x8]
   14002a475:	cmp    BYTE PTR [rax+0x29],0x0
   14002a479:	je     0x14002a468
   14002a47b:	mov    rbx,rax
   14002a47e:	lea    rdx,[rbp-0x41]
   14002a482:	lea    rcx,[rsp+0x20]
   14002a487:	call   0x14002b6b0
   14002a48c:	cmp    rbx,rdi
   14002a48f:	jne    0x14002a430
   14002a491:	mov    rdi,QWORD PTR [rsp+0x28]
   14002a496:	mov    rcx,rdi
   14002a499:	call   0x1400330c0
   14002a49e:	add    rsi,0x4
   14002a4a2:	cmp    rsi,r15
   14002a4a5:	jne    0x14002a240
   14002a4ab:	mov    rax,QWORD PTR [rbp-0x39]
   14002a4af:	lea    rdi,[r14+0x20]
   14002a4b3:	test   rax,rax
   14002a4b6:	je     0x14002a4c0
   14002a4b8:	mov    rcx,rax
   14002a4bb:	call   0x1400330c0
   14002a4c0:	inc    r13d
   14002a4c3:	movsxd rax,r13d
   14002a4c6:	cmp    rax,QWORD PTR [r14+0x30]
   14002a4ca:	jae    0x14002a500
   14002a4cc:	jmp    0x14002a190
   14002a4d1:	mov    QWORD PTR [rsp+0x40],r12
   14002a4d6:	lea    rdx,[rsp+0x40]
   14002a4db:	lea    rcx,[rbp-0x11]
   14002a4df:	call   0x140032fd4
   14002a4e4:	lea    r11,[rip+0x3e3a5]        # 0x140068890
   14002a4eb:	mov    QWORD PTR [rbp-0x11],r11
   14002a4ef:	lea    rdx,[rip+0x58f2a]        # 0x140083420
   14002a4f6:	lea    rcx,[rbp-0x11]
   14002a4fa:	call   0x140036358
   14002a4ff:	nop
   14002a500:	movzx  r12d,BYTE PTR [rbp+0x67]
   14002a505:	movzx  eax,r12b
   14002a509:	lea    r11,[rsp+0xf0]
   14002a511:	mov    rbx,QWORD PTR [r11+0x48]
   14002a515:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14002a51a:	movaps xmm7,XMMWORD PTR [r11-0x20]
   14002a51f:	mov    rsp,r11
   14002a522:	pop    r15
   14002a524:	pop    r14
   14002a526:	pop    r13
   14002a528:	pop    r12
   14002a52a:	pop    rdi
   14002a52b:	pop    rsi
   14002a52c:	pop    rbp
   14002a52d:	ret    
   14002a52e:	int3   
   14002a52f:	int3   
   14002a530:	mov    QWORD PTR [rsp+0x8],rcx
   14002a535:	push   rbx
   14002a536:	sub    rsp,0x30
   14002a53a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a543:	mov    rbx,rcx
   14002a546:	mov    r8,QWORD PTR [rcx+0x8]
   14002a54a:	mov    r9,r8
   14002a54d:	mov    r8,QWORD PTR [r8]
   14002a550:	lea    rdx,[rsp+0x48]
   14002a555:	call   0x14002b250
   14002a55a:	nop
   14002a55b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a55f:	add    rsp,0x30
   14002a563:	pop    rbx
   14002a564:	jmp    0x1400330c0
   14002a569:	int3   
   14002a56a:	int3   
   14002a56b:	int3   
   14002a56c:	int3   
   14002a56d:	int3   
   14002a56e:	int3   
   14002a56f:	int3   
   14002a570:	rex push rbp
   14002a572:	push   rdi
   14002a573:	sub    rsp,0x58
   14002a577:	cmp    QWORD PTR [rcx+0x10],0x0
   14002a57c:	mov    ebp,edx
   14002a57e:	mov    rdi,rcx
   14002a581:	je     0x14002a779
   14002a587:	cmp    QWORD PTR [rcx+0x18],0x0
   14002a58c:	je     0x14002a779
   14002a592:	mov    eax,0x66666667
   14002a597:	mov    QWORD PTR [rsp+0x50],rsi
   14002a59c:	mov    DWORD PTR [rsp+0x70],0xffffffff
   14002a5a4:	mov    QWORD PTR [rsp+0x48],r12
   14002a5a9:	imul   DWORD PTR [rcx+0x54]
   14002a5ac:	sar    edx,0x2
   14002a5af:	mov    eax,edx
   14002a5b1:	shr    eax,0x1f
   14002a5b4:	add    edx,eax
   14002a5b6:	test   edx,edx
   14002a5b8:	jle    0x14002a5c8
   14002a5ba:	cmp    ebp,0xa
   14002a5bd:	jge    0x14002a5c8
   14002a5bf:	lea    eax,[rdx+rdx*4]
   14002a5c2:	lea    esi,[rbp+rax*2+0x0]
   14002a5c6:	jmp    0x14002a5ca
   14002a5c8:	mov    esi,ebp
   14002a5ca:	xor    r12b,r12b
   14002a5cd:	cmp    QWORD PTR [rcx+0x30],0x0
   14002a5d2:	jbe    0x14002a766
   14002a5d8:	mov    QWORD PTR [rsp+0x78],rbx
   14002a5dd:	lea    rdx,[rsp+0x80]
   14002a5e5:	xor    ebx,ebx
   14002a5e7:	add    rcx,0x20
   14002a5eb:	mov    QWORD PTR [rsp+0x40],r13
   14002a5f0:	mov    DWORD PTR [rsp+0x80],ebx
   14002a5f7:	call   0x14002ae50
   14002a5fc:	lea    rcx,[rsp+0x20]
   14002a601:	mov    rdx,rax
   14002a604:	call   0x14002ac40
   14002a609:	mov    r11,QWORD PTR [rsp+0x20]
   14002a60e:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a613:	mov    rax,r11
   14002a616:	lea    r13d,[rbx+0x1]
   14002a61a:	cmp    r11,rcx
   14002a61d:	je     0x14002a63a
   14002a61f:	nop
   14002a620:	cmp    DWORD PTR [rax],esi
   14002a622:	je     0x14002a62f
   14002a624:	add    rax,0x4
   14002a628:	cmp    rax,rcx
   14002a62b:	jne    0x14002a620
   14002a62d:	jmp    0x14002a63a
   14002a62f:	movzx  r12d,r12b
   14002a633:	cmp    rax,rcx
   14002a636:	cmovne r12d,r13d
   14002a63a:	test   r11,r11
   14002a63d:	je     0x14002a647
   14002a63f:	mov    rcx,r11
   14002a642:	call   0x1400330c0
   14002a647:	test   r12b,r12b
   14002a64a:	je     0x14002a762
   14002a650:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a654:	lea    r8,[rsp+0x70]
   14002a659:	xor    edx,edx
   14002a65b:	mov    rax,QWORD PTR [rcx]
   14002a65e:	call   QWORD PTR [rax+0xa0]
   14002a664:	test   al,al
   14002a666:	je     0x14002a762
   14002a66c:	cmp    esi,DWORD PTR [rsp+0x70]
   14002a670:	je     0x14002a762
   14002a676:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a67a:	xor    r8d,r8d
   14002a67d:	xor    edx,edx
   14002a67f:	mov    rax,QWORD PTR [rcx]
   14002a682:	call   QWORD PTR [rax+0x88]
   14002a688:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a68c:	mov    r8d,esi
   14002a68f:	mov    rax,QWORD PTR [rcx]
   14002a692:	or     edx,0xffffffff
   14002a695:	call   QWORD PTR [rax+0x98]
   14002a69b:	mov    rcx,QWORD PTR [rdi+0x18]
   14002a69f:	mov    r8d,esi
   14002a6a2:	mov    r9,QWORD PTR [rcx]
   14002a6a5:	or     edx,0xffffffff
   14002a6a8:	movzx  r12d,al
   14002a6ac:	call   QWORD PTR [r9+0x98]
   14002a6b3:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a6b7:	xor    r8d,r8d
   14002a6ba:	mov    r9,QWORD PTR [rcx]
   14002a6bd:	mov    edx,r13d
   14002a6c0:	call   QWORD PTR [r9+0x88]
   14002a6c7:	cmp    QWORD PTR [rdi+0x30],rbx
   14002a6cb:	jbe    0x14002a743
   14002a6cd:	nop    DWORD PTR [rax]
   14002a6d0:	test   ebx,ebx
   14002a6d2:	jne    0x14002a712
   14002a6d4:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a6d8:	mov    DWORD PTR [rsp+0x80],ebp
   14002a6df:	lea    rdx,[rsp+0x80]
   14002a6e7:	mov    rax,QWORD PTR [rcx]
   14002a6ea:	xor    r8d,r8d
   14002a6ed:	call   QWORD PTR [rax+0x128]
   14002a6f3:	mov    eax,0x66666667
   14002a6f8:	imul   DWORD PTR [rsp+0x80]
   14002a6ff:	sar    edx,0x2
   14002a702:	mov    eax,edx
   14002a704:	shr    eax,0x1f
   14002a707:	add    edx,eax
   14002a709:	lea    eax,[rdx+rdx*4]
   14002a70c:	lea    esi,[rbp+rax*2+0x0]
   14002a710:	jmp    0x14002a714
   14002a712:	mov    esi,ebp
   14002a714:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a718:	mov    r8d,ebx
   14002a71b:	mov    edx,esi
   14002a71d:	mov    rax,QWORD PTR [rcx]
   14002a720:	call   QWORD PTR [rax+0x130]
   14002a726:	mov    rcx,QWORD PTR [rdi+0x18]
   14002a72a:	mov    r8d,ebx
   14002a72d:	mov    rax,QWORD PTR [rcx]
   14002a730:	mov    edx,esi
   14002a732:	call   QWORD PTR [rax+0x130]
   14002a738:	inc    ebx
   14002a73a:	movsxd rax,ebx
   14002a73d:	cmp    rax,QWORD PTR [rdi+0x30]
   14002a741:	jb     0x14002a6d0
   14002a743:	movzx  eax,r12b
   14002a747:	mov    rbx,QWORD PTR [rsp+0x78]
   14002a74c:	mov    r13,QWORD PTR [rsp+0x40]
   14002a751:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a756:	mov    r12,QWORD PTR [rsp+0x48]
   14002a75b:	add    rsp,0x58
   14002a75f:	pop    rdi
   14002a760:	pop    rbp
   14002a761:	ret    
   14002a762:	xor    al,al
   14002a764:	jmp    0x14002a747
   14002a766:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a76b:	mov    r12,QWORD PTR [rsp+0x48]
   14002a770:	xor    al,al
   14002a772:	add    rsp,0x58
   14002a776:	pop    rdi
   14002a777:	pop    rbp
   14002a778:	ret    
   14002a779:	xor    al,al
   14002a77b:	add    rsp,0x58
   14002a77f:	pop    rdi
   14002a780:	pop    rbp
   14002a781:	ret    
   14002a782:	int3   
   14002a783:	int3   
   14002a784:	int3   
   14002a785:	int3   
   14002a786:	int3   
   14002a787:	int3   
   14002a788:	int3   
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	int3   
   14002a78d:	int3   
   14002a78e:	int3   
   14002a78f:	int3   
   14002a790:	mov    QWORD PTR [rsp+0x18],rsi
   14002a795:	push   rdi
   14002a796:	sub    rsp,0x20
   14002a79a:	cmp    QWORD PTR [rcx+0x10],0x0
   14002a79f:	movsxd rsi,edx
   14002a7a2:	mov    rdi,rcx
   14002a7a5:	je     0x14002a820
   14002a7a7:	cmp    QWORD PTR [rcx+0x18],0x0
   14002a7ac:	je     0x14002a820
   14002a7ae:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a7b2:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14002a7ba:	lea    rdx,[rsp+0x30]
   14002a7bf:	mov    rax,QWORD PTR [rcx]
   14002a7c2:	xor    r8d,r8d
   14002a7c5:	call   QWORD PTR [rax+0xa0]
   14002a7cb:	test   al,al
   14002a7cd:	je     0x14002a820
   14002a7cf:	cmp    DWORD PTR [rsp+0x30],esi
   14002a7d3:	je     0x14002a820
   14002a7d5:	mov    rax,rsi
   14002a7d8:	cmp    rsi,QWORD PTR [rdi+0x30]
   14002a7dc:	jae    0x14002a820
   14002a7de:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a7e2:	or     r8d,0xffffffff
   14002a7e6:	mov    edx,esi
   14002a7e8:	mov    rax,QWORD PTR [rcx]
   14002a7eb:	mov    QWORD PTR [rsp+0x38],rbx
   14002a7f0:	call   QWORD PTR [rax+0x98]
   14002a7f6:	mov    rcx,QWORD PTR [rdi+0x18]
   14002a7fa:	or     r8d,0xffffffff
   14002a7fe:	mov    r9,QWORD PTR [rcx]
   14002a801:	mov    edx,esi
   14002a803:	movzx  ebx,al
   14002a806:	call   QWORD PTR [r9+0x98]
   14002a80d:	movzx  eax,bl
   14002a810:	mov    rbx,QWORD PTR [rsp+0x38]
   14002a815:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a81a:	add    rsp,0x20
   14002a81e:	pop    rdi
   14002a81f:	ret    
   14002a820:	xor    al,al
   14002a822:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a827:	add    rsp,0x20
   14002a82b:	pop    rdi
   14002a82c:	ret    
   14002a82d:	int3   
   14002a82e:	int3   
   14002a82f:	int3   
   14002a830:	mov    rax,rsp
   14002a833:	push   rbp
   14002a834:	push   r12
   14002a836:	push   r13
   14002a838:	push   r14
   14002a83a:	push   r15
   14002a83c:	lea    rbp,[rax-0xd8]
   14002a843:	sub    rsp,0x1b0
   14002a84a:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14002a852:	mov    QWORD PTR [rax+0x10],rbx
   14002a856:	mov    QWORD PTR [rax+0x18],rsi
   14002a85a:	mov    QWORD PTR [rax+0x20],rdi
   14002a85e:	mov    rax,QWORD PTR [rip+0x5a843]        # 0x1400850a8
   14002a865:	xor    rax,rsp
   14002a868:	mov    QWORD PTR [rbp+0xa0],rax
   14002a86f:	mov    rsi,rcx
   14002a872:	mov    QWORD PTR [rsp+0x68],rcx
   14002a877:	cmp    QWORD PTR [rcx+0x10],0x0
   14002a87c:	je     0x14002ab68
   14002a882:	lea    r15,[rcx+0x20]
   14002a886:	mov    rdx,QWORD PTR [r15+0x8]
   14002a88a:	mov    rdx,QWORD PTR [rdx+0x8]
   14002a88e:	mov    rcx,r15
   14002a891:	call   0x14002b0d0
   14002a896:	mov    r11,QWORD PTR [r15+0x8]
   14002a89a:	mov    QWORD PTR [r11+0x8],r11
   14002a89e:	mov    rax,QWORD PTR [r15+0x8]
   14002a8a2:	mov    QWORD PTR [rax],rax
   14002a8a5:	mov    rax,QWORD PTR [r15+0x8]
   14002a8a9:	mov    QWORD PTR [rax+0x10],rax
   14002a8ad:	mov    QWORD PTR [r15+0x10],0x0
   14002a8b5:	mov    DWORD PTR [rsp+0x44],0x0
   14002a8bd:	mov    rcx,QWORD PTR [rsi+0x10]
   14002a8c1:	mov    rax,QWORD PTR [rcx]
   14002a8c4:	xor    r8d,r8d
   14002a8c7:	lea    rdx,[rsp+0x44]
   14002a8cc:	call   QWORD PTR [rax+0x110]
   14002a8d2:	xor    r14d,r14d
   14002a8d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002a8e0:	xor    r13d,r13d
   14002a8e3:	xor    edi,edi
   14002a8e5:	mov    QWORD PTR [rsp+0x48],rdi
   14002a8ea:	xor    ebx,ebx
   14002a8ec:	mov    QWORD PTR [rsp+0x50],rbx
   14002a8f1:	xor    r12d,r12d
   14002a8f4:	mov    QWORD PTR [rsp+0x58],r12
   14002a8f9:	nop    DWORD PTR [rax+0x0]
   14002a900:	mov    BYTE PTR [rbp-0x30],0x0
   14002a904:	xor    edx,edx
   14002a906:	mov    r8d,0xc7
   14002a90c:	lea    rcx,[rbp-0x2f]
   14002a910:	call   0x140036dc0
   14002a915:	mov    rcx,QWORD PTR [rsi+0x10]
   14002a919:	mov    rax,QWORD PTR [rcx]
   14002a91c:	mov    DWORD PTR [rsp+0x30],0x0
   14002a924:	mov    DWORD PTR [rsp+0x28],r13d
   14002a929:	mov    DWORD PTR [rsp+0x20],r14d
   14002a92e:	mov    r9d,0xc8
   14002a934:	lea    r8,[rbp-0x30]
   14002a938:	xor    edx,edx
   14002a93a:	call   QWORD PTR [rax+0xf8]
   14002a940:	cmp    BYTE PTR [rbp-0x30],0x0
   14002a944:	je     0x14002aa7f
   14002a94a:	mov    DWORD PTR [rsp+0x40],r13d
   14002a94f:	lea    rax,[rsp+0x40]
   14002a954:	cmp    rax,rbx
   14002a957:	jae    0x14002a9fb
   14002a95d:	lea    rax,[rsp+0x40]
   14002a962:	cmp    rdi,rax
   14002a965:	ja     0x14002a9fb
   14002a96b:	lea    rsi,[rsp+0x40]
   14002a970:	sub    rsi,rdi
   14002a973:	sar    rsi,0x2
   14002a977:	cmp    rbx,r12
   14002a97a:	jne    0x14002a9ea
   14002a97c:	mov    rcx,rbx
   14002a97f:	sub    rcx,rdi
   14002a982:	sar    rcx,0x2
   14002a986:	movabs rax,0x3ffffffffffffffe
   14002a990:	cmp    rcx,rax
   14002a993:	ja     0x14002ab4e
   14002a999:	inc    rcx
   14002a99c:	mov    rdx,r12
   14002a99f:	sub    rdx,rdi
   14002a9a2:	sar    rdx,0x2
   14002a9a6:	cmp    rcx,rdx
   14002a9a9:	jbe    0x14002a9ea
   14002a9ab:	mov    r8,rdx
   14002a9ae:	shr    r8,1
   14002a9b1:	movabs rax,0x3fffffffffffffff
   14002a9bb:	sub    rax,r8
   14002a9be:	cmp    rax,rdx
   14002a9c1:	jae    0x14002a9c7
   14002a9c3:	xor    edx,edx
   14002a9c5:	jmp    0x14002a9ca
   14002a9c7:	add    rdx,r8
   14002a9ca:	cmp    rdx,rcx
   14002a9cd:	cmovb  rdx,rcx
   14002a9d1:	lea    rcx,[rsp+0x48]
   14002a9d6:	call   0x140027300
   14002a9db:	mov    r12,QWORD PTR [rsp+0x58]
   14002a9e0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a9e5:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a9ea:	test   rbx,rbx
   14002a9ed:	je     0x14002a9f4
   14002a9ef:	mov    eax,DWORD PTR [rdi+rsi*4]
   14002a9f2:	mov    DWORD PTR [rbx],eax
   14002a9f4:	mov    rsi,QWORD PTR [rsp+0x68]
   14002a9f9:	jmp    0x14002aa76
   14002a9fb:	cmp    rbx,r12
   14002a9fe:	jne    0x14002aa6e
   14002aa00:	mov    rcx,rbx
   14002aa03:	sub    rcx,rdi
   14002aa06:	sar    rcx,0x2
   14002aa0a:	movabs rax,0x3ffffffffffffffe
   14002aa14:	cmp    rcx,rax
   14002aa17:	ja     0x14002ab5b
   14002aa1d:	inc    rcx
   14002aa20:	mov    rdx,r12
   14002aa23:	sub    rdx,rdi
   14002aa26:	sar    rdx,0x2
   14002aa2a:	cmp    rcx,rdx
   14002aa2d:	jbe    0x14002aa6e
   14002aa2f:	mov    r8,rdx
   14002aa32:	shr    r8,1
   14002aa35:	movabs rax,0x3fffffffffffffff
   14002aa3f:	sub    rax,r8
   14002aa42:	cmp    rax,rdx
   14002aa45:	jae    0x14002aa4b
   14002aa47:	xor    edx,edx
   14002aa49:	jmp    0x14002aa4e
   14002aa4b:	add    rdx,r8
   14002aa4e:	cmp    rdx,rcx
   14002aa51:	cmovb  rdx,rcx
   14002aa55:	lea    rcx,[rsp+0x48]
   14002aa5a:	call   0x140027300
   14002aa5f:	mov    r12,QWORD PTR [rsp+0x58]
   14002aa64:	mov    rbx,QWORD PTR [rsp+0x50]
   14002aa69:	mov    rdi,QWORD PTR [rsp+0x48]
   14002aa6e:	test   rbx,rbx
   14002aa71:	je     0x14002aa76
   14002aa73:	mov    DWORD PTR [rbx],r13d
   14002aa76:	add    rbx,0x4
   14002aa7a:	mov    QWORD PTR [rsp+0x50],rbx
   14002aa7f:	inc    r13d
   14002aa82:	cmp    r13d,0x3c
   14002aa86:	jl     0x14002a900
   14002aa8c:	cmp    rdi,rbx
   14002aa8f:	je     0x14002ab32
   14002aa95:	mov    rbx,QWORD PTR [r15+0x8]
   14002aa99:	mov    rax,QWORD PTR [rbx+0x8]
   14002aa9d:	cmp    BYTE PTR [rax+0x41],0x0
   14002aaa1:	jne    0x14002aabb
   14002aaa3:	cmp    DWORD PTR [rax+0x18],r14d
   14002aaa7:	jae    0x14002aaaf
   14002aaa9:	mov    rax,QWORD PTR [rax+0x10]
   14002aaad:	jmp    0x14002aab5
   14002aaaf:	mov    rbx,rax
   14002aab2:	mov    rax,QWORD PTR [rax]
   14002aab5:	cmp    BYTE PTR [rax+0x41],0x0
   14002aab9:	je     0x14002aaa3
   14002aabb:	cmp    rbx,QWORD PTR [r15+0x8]
   14002aabf:	je     0x14002aac7
   14002aac1:	cmp    r14d,DWORD PTR [rbx+0x18]
   14002aac5:	jae    0x14002ab1a
   14002aac7:	mov    DWORD PTR [rsp+0x78],r14d
   14002aacc:	xor    eax,eax
   14002aace:	mov    QWORD PTR [rbp-0x80],rax
   14002aad2:	mov    QWORD PTR [rbp-0x78],rax
   14002aad6:	mov    QWORD PTR [rbp-0x70],rax
   14002aada:	mov    QWORD PTR [rbp-0x58],rax
   14002aade:	mov    QWORD PTR [rbp-0x50],rax
   14002aae2:	mov    QWORD PTR [rbp-0x48],rax
   14002aae6:	lea    rdx,[rsp+0x78]
   14002aaeb:	mov    rcx,r15
   14002aaee:	call   0x14002c120
   14002aaf3:	mov    r9,rax
   14002aaf6:	mov    r8,rbx
   14002aaf9:	lea    rdx,[rsp+0x70]
   14002aafe:	mov    rcx,r15
   14002ab01:	call   0x14002bb00
   14002ab06:	mov    rbx,QWORD PTR [rsp+0x70]
   14002ab0b:	mov    rcx,QWORD PTR [rbp-0x80]
   14002ab0f:	test   rcx,rcx
   14002ab12:	je     0x14002ab1a
   14002ab14:	call   0x1400330c0
   14002ab19:	nop
   14002ab1a:	lea    rcx,[rbx+0x20]
   14002ab1e:	lea    rax,[rsp+0x48]
   14002ab23:	cmp    rcx,rax
   14002ab26:	je     0x14002ab32
   14002ab28:	lea    rdx,[rsp+0x48]
   14002ab2d:	call   0x14002acf0
   14002ab32:	inc    r14d
   14002ab35:	test   rdi,rdi
   14002ab38:	je     0x14002ab42
   14002ab3a:	mov    rcx,rdi
   14002ab3d:	call   0x1400330c0
   14002ab42:	cmp    r14d,DWORD PTR [rsp+0x44]
   14002ab47:	jge    0x14002ab68
   14002ab49:	jmp    0x14002a8e0
   14002ab4e:	lea    rcx,[rip+0x40ad3]        # 0x14006b628
   14002ab55:	call   0x140032d00
   14002ab5a:	int3   
   14002ab5b:	lea    rcx,[rip+0x40ac6]        # 0x14006b628
   14002ab62:	call   0x140032d00
   14002ab67:	nop
   14002ab68:	mov    rcx,QWORD PTR [rbp+0xa0]
   14002ab6f:	xor    rcx,rsp
   14002ab72:	call   0x140032f00
   14002ab77:	lea    r11,[rsp+0x1b0]
   14002ab7f:	mov    rbx,QWORD PTR [r11+0x38]
   14002ab83:	mov    rsi,QWORD PTR [r11+0x40]
   14002ab87:	mov    rdi,QWORD PTR [r11+0x48]
   14002ab8b:	mov    rsp,r11
   14002ab8e:	pop    r15
   14002ab90:	pop    r14
   14002ab92:	pop    r13
   14002ab94:	pop    r12
   14002ab96:	pop    rbp
   14002ab97:	ret    
   14002ab98:	int3   
   14002ab99:	int3   
   14002ab9a:	int3   
   14002ab9b:	int3   
   14002ab9c:	int3   
   14002ab9d:	int3   
   14002ab9e:	int3   
   14002ab9f:	int3   
   14002aba0:	rex push rbx
   14002aba2:	sub    rsp,0x20
   14002aba6:	mov    rbx,rcx
   14002aba9:	mov    rcx,QWORD PTR [rcx+0x10]
   14002abad:	test   rcx,rcx
   14002abb0:	je     0x14002ac30
   14002abb2:	cmp    QWORD PTR [rbx+0x40],0x0
   14002abb7:	je     0x14002ac30
   14002abb9:	mov    DWORD PTR [rsp+0x40],0x0
   14002abc1:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14002abc9:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14002abd1:	mov    rax,QWORD PTR [rcx]
   14002abd4:	lea    r8,[rsp+0x30]
   14002abd9:	lea    rdx,[rsp+0x38]
   14002abde:	call   QWORD PTR [rax+0xa0]
   14002abe4:	mov    rcx,QWORD PTR [rbx+0x10]
   14002abe8:	mov    r8d,DWORD PTR [rsp+0x30]
   14002abed:	mov    rax,QWORD PTR [rcx]
   14002abf0:	mov    edx,DWORD PTR [rsp+0x38]
   14002abf4:	lea    r9,[rsp+0x40]
   14002abf9:	call   QWORD PTR [rax+0xe8]
   14002abff:	mov    edx,DWORD PTR [rsp+0x38]
   14002ac03:	mov    eax,DWORD PTR [rsp+0x40]
   14002ac07:	mov    ecx,DWORD PTR [rsp+0x30]
   14002ac0b:	cmp    DWORD PTR [rbx+0x58],edx
   14002ac0e:	jne    0x14002ac1a
   14002ac10:	cmp    DWORD PTR [rbx+0x54],ecx
   14002ac13:	jne    0x14002ac1a
   14002ac15:	cmp    DWORD PTR [rbx+0x50],eax
   14002ac18:	je     0x14002ac30
   14002ac1a:	mov    r8,QWORD PTR [rbx+0x48]
   14002ac1e:	xorpd  xmm1,xmm1
   14002ac22:	mov    DWORD PTR [rbx+0x54],ecx
   14002ac25:	xor    ecx,ecx
   14002ac27:	mov    DWORD PTR [rbx+0x58],edx
   14002ac2a:	mov    DWORD PTR [rbx+0x50],eax
   14002ac2d:	call   QWORD PTR [rbx+0x40]
   14002ac30:	add    rsp,0x20
   14002ac34:	pop    rbx
   14002ac35:	ret    
   14002ac36:	int3   
   14002ac37:	int3   
   14002ac38:	int3   
   14002ac39:	int3   
   14002ac3a:	int3   
   14002ac3b:	int3   
   14002ac3c:	int3   
   14002ac3d:	int3   
   14002ac3e:	int3   
   14002ac3f:	int3   
   14002ac40:	mov    QWORD PTR [rsp+0x8],rcx
   14002ac45:	push   rdi
   14002ac46:	sub    rsp,0x30
   14002ac4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ac53:	mov    QWORD PTR [rsp+0x48],rbx
   14002ac58:	mov    QWORD PTR [rsp+0x50],rsi
   14002ac5d:	mov    rsi,rdx
   14002ac60:	mov    rbx,rcx
   14002ac63:	xor    eax,eax
   14002ac65:	mov    QWORD PTR [rcx],rax
   14002ac68:	mov    QWORD PTR [rcx+0x8],rax
   14002ac6c:	mov    QWORD PTR [rcx+0x10],rax
   14002ac70:	mov    rdi,QWORD PTR [rdx+0x8]
   14002ac74:	sub    rdi,QWORD PTR [rdx]
   14002ac77:	sar    rdi,0x2
   14002ac7b:	mov    QWORD PTR [rcx],rax
   14002ac7e:	mov    QWORD PTR [rcx+0x8],rax
   14002ac82:	mov    QWORD PTR [rcx+0x10],rax
   14002ac86:	test   rdi,rdi
   14002ac89:	je     0x14002acd1
   14002ac8b:	movabs rax,0x3fffffffffffffff
   14002ac95:	cmp    rdi,rax
   14002ac98:	jbe    0x14002aca7
   14002ac9a:	lea    rcx,[rip+0x40987]        # 0x14006b628
   14002aca1:	call   0x140032d00
   14002aca6:	int3   
   14002aca7:	mov    rcx,rdi
   14002acaa:	call   0x140027690
   14002acaf:	mov    r8,rax
   14002acb2:	mov    QWORD PTR [rbx],rax
   14002acb5:	mov    QWORD PTR [rbx+0x8],rax
   14002acb9:	lea    rax,[rax+rdi*4]
   14002acbd:	mov    QWORD PTR [rbx+0x10],rax
   14002acc1:	mov    rdx,QWORD PTR [rsi+0x8]
   14002acc5:	mov    rcx,QWORD PTR [rsi]
   14002acc8:	call   0x14002c220
   14002accd:	mov    QWORD PTR [rbx+0x8],rax
   14002acd1:	mov    rax,rbx
   14002acd4:	mov    rbx,QWORD PTR [rsp+0x48]
   14002acd9:	mov    rsi,QWORD PTR [rsp+0x50]
   14002acde:	add    rsp,0x30
   14002ace2:	pop    rdi
   14002ace3:	ret    
   14002ace4:	int3   
   14002ace5:	int3   
   14002ace6:	int3   
   14002ace7:	int3   
   14002ace8:	int3   
   14002ace9:	int3   
   14002acea:	int3   
   14002aceb:	int3   
   14002acec:	int3   
   14002aced:	int3   
   14002acee:	int3   
   14002acef:	int3   
   14002acf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002acf5:	mov    QWORD PTR [rsp+0x10],rsi
   14002acfa:	push   rdi
   14002acfb:	sub    rsp,0x20
   14002acff:	mov    r8,QWORD PTR [rdx+0x8]
   14002ad03:	mov    r10,QWORD PTR [rdx]
   14002ad06:	mov    rsi,rcx
   14002ad09:	mov    rcx,r8
   14002ad0c:	mov    rbx,rdx
   14002ad0f:	mov    rdx,QWORD PTR [rsi+0x8]
   14002ad13:	sub    rcx,r10
   14002ad16:	sar    rcx,0x2
   14002ad1a:	test   rcx,rcx
   14002ad1d:	jne    0x14002ad63
   14002ad1f:	mov    rbx,QWORD PTR [rsi]
   14002ad22:	cmp    rbx,rdx
   14002ad25:	je     0x14002ae32
   14002ad2b:	mov    rax,rdx
   14002ad2e:	mov    rcx,rbx
   14002ad31:	sub    rax,rdx
   14002ad34:	sar    rax,0x2
   14002ad38:	lea    rdi,[rax*4+0x0]
   14002ad40:	mov    r8,rdi
   14002ad43:	call   0x140033260
   14002ad48:	lea    r11,[rdi+rbx*1]
   14002ad4c:	mov    rax,rsi
   14002ad4f:	mov    QWORD PTR [rsi+0x8],r11
   14002ad53:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad58:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ad5d:	add    rsp,0x20
   14002ad61:	pop    rdi
   14002ad62:	ret    
   14002ad63:	mov    r9,QWORD PTR [rsi]
   14002ad66:	sub    rdx,r9
   14002ad69:	sar    rdx,0x2
   14002ad6d:	cmp    rcx,rdx
   14002ad70:	ja     0x14002adad
   14002ad72:	sub    r8,r10
   14002ad75:	mov    rdx,r10
   14002ad78:	mov    rcx,r9
   14002ad7b:	and    r8,0xfffffffffffffffc
   14002ad7f:	call   0x140033260
   14002ad84:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ad88:	mov    rax,QWORD PTR [rsi]
   14002ad8b:	sub    rcx,QWORD PTR [rbx]
   14002ad8e:	sar    rcx,0x2
   14002ad92:	lea    rcx,[rax+rcx*4]
   14002ad96:	mov    rax,rsi
   14002ad99:	mov    QWORD PTR [rsi+0x8],rcx
   14002ad9d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ada2:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ada7:	add    rsp,0x20
   14002adab:	pop    rdi
   14002adac:	ret    
   14002adad:	mov    rax,QWORD PTR [rsi+0x10]
   14002adb1:	sub    rax,r9
   14002adb4:	sar    rax,0x2
   14002adb8:	cmp    rcx,rax
   14002adbb:	ja     0x14002ade6
   14002adbd:	lea    rdi,[r10+rdx*4]
   14002adc1:	mov    rcx,r9
   14002adc4:	mov    rdx,r10
   14002adc7:	mov    r8,rdi
   14002adca:	sub    r8,r10
   14002adcd:	and    r8,0xfffffffffffffffc
   14002add1:	call   0x140033260
   14002add6:	mov    rax,QWORD PTR [rbx+0x8]
   14002adda:	mov    rcx,QWORD PTR [rsi+0x8]
   14002adde:	sub    rax,rdi
   14002ade1:	mov    rdx,rdi
   14002ade4:	jmp    0x14002ae17
   14002ade6:	test   r9,r9
   14002ade9:	je     0x14002adf3
   14002adeb:	mov    rcx,r9
   14002adee:	call   0x1400330c0
   14002adf3:	mov    rdx,QWORD PTR [rbx+0x8]
   14002adf7:	mov    rcx,rsi
   14002adfa:	sub    rdx,QWORD PTR [rbx]
   14002adfd:	sar    rdx,0x2
   14002ae01:	call   0x14002afd0
   14002ae06:	test   al,al
   14002ae08:	je     0x14002ae32
   14002ae0a:	mov    rdx,QWORD PTR [rbx]
   14002ae0d:	mov    rax,QWORD PTR [rbx+0x8]
   14002ae11:	mov    rcx,QWORD PTR [rsi]
   14002ae14:	sub    rax,rdx
   14002ae17:	sar    rax,0x2
   14002ae1b:	lea    rbx,[rax*4+0x0]
   14002ae23:	mov    r8,rbx
   14002ae26:	call   0x140033260
   14002ae2b:	add    rax,rbx
   14002ae2e:	mov    QWORD PTR [rsi+0x8],rax
   14002ae32:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae37:	mov    rax,rsi
   14002ae3a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ae3f:	add    rsp,0x20
   14002ae43:	pop    rdi
   14002ae44:	ret    
   14002ae45:	int3   
   14002ae46:	int3   
   14002ae47:	int3   
   14002ae48:	int3   
   14002ae49:	int3   
   14002ae4a:	int3   
   14002ae4b:	int3   
   14002ae4c:	int3   
   14002ae4d:	int3   
   14002ae4e:	int3   
   14002ae4f:	int3   
   14002ae50:	rex push rdi
   14002ae52:	sub    rsp,0x70
   14002ae56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ae5f:	mov    QWORD PTR [rsp+0x88],rbx
   14002ae67:	mov    rdi,rcx
   14002ae6a:	mov    rbx,QWORD PTR [rcx+0x8]
   14002ae6e:	mov    rax,QWORD PTR [rbx+0x8]
   14002ae72:	cmp    BYTE PTR [rax+0x41],0x0
   14002ae76:	jne    0x14002ae98
   14002ae78:	mov    r8d,DWORD PTR [rdx]
   14002ae7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002ae80:	cmp    DWORD PTR [rax+0x18],r8d
   14002ae84:	jae    0x14002ae8c
   14002ae86:	mov    rax,QWORD PTR [rax+0x10]
   14002ae8a:	jmp    0x14002ae92
   14002ae8c:	mov    rbx,rax
   14002ae8f:	mov    rax,QWORD PTR [rax]
   14002ae92:	cmp    BYTE PTR [rax+0x41],0x0
   14002ae96:	je     0x14002ae80
   14002ae98:	cmp    rbx,QWORD PTR [rcx+0x8]
   14002ae9c:	je     0x14002aea5
   14002ae9e:	mov    eax,DWORD PTR [rbx+0x18]
   14002aea1:	cmp    DWORD PTR [rdx],eax
   14002aea3:	jae    0x14002af03
   14002aea5:	mov    eax,DWORD PTR [rdx]
   14002aea7:	mov    DWORD PTR [rsp+0x48],eax
   14002aeab:	xor    eax,eax
   14002aead:	mov    QWORD PTR [rsp+0x50],rax
   14002aeb2:	mov    QWORD PTR [rsp+0x58],rax
   14002aeb7:	mov    QWORD PTR [rsp+0x60],rax
   14002aebc:	mov    QWORD PTR [rsp+0x28],rax
   14002aec1:	mov    QWORD PTR [rsp+0x30],rax
   14002aec6:	mov    QWORD PTR [rsp+0x38],rax
   14002aecb:	lea    rdx,[rsp+0x48]
   14002aed0:	call   0x14002c120
   14002aed5:	mov    r9,rax
   14002aed8:	mov    r8,rbx
   14002aedb:	lea    rdx,[rsp+0x80]
   14002aee3:	mov    rcx,rdi
   14002aee6:	call   0x14002bb00
   14002aeeb:	mov    rbx,QWORD PTR [rsp+0x80]
   14002aef3:	mov    rcx,QWORD PTR [rsp+0x50]
   14002aef8:	test   rcx,rcx
   14002aefb:	je     0x14002af03
   14002aefd:	call   0x1400330c0
   14002af02:	nop
   14002af03:	lea    rax,[rbx+0x20]
   14002af07:	mov    rbx,QWORD PTR [rsp+0x88]
   14002af0f:	add    rsp,0x70
   14002af13:	pop    rdi
   14002af14:	ret    
   14002af15:	int3   
   14002af16:	int3   
   14002af17:	int3   
   14002af18:	int3   
   14002af19:	int3   
   14002af1a:	int3   
   14002af1b:	int3   
   14002af1c:	int3   
   14002af1d:	int3   
   14002af1e:	int3   
   14002af1f:	int3   
   14002af20:	mov    QWORD PTR [rsp+0x8],rbx
   14002af25:	mov    QWORD PTR [rsp+0x10],rsi
   14002af2a:	push   rdi
   14002af2b:	sub    rsp,0x20
   14002af2f:	mov    rax,QWORD PTR [rcx+0x8]
   14002af33:	mov    rbx,rcx
   14002af36:	mov    rsi,QWORD PTR [rax+0x8]
   14002af3a:	mov    rdi,rsi
   14002af3d:	cmp    BYTE PTR [rsi+0x29],0x0
   14002af41:	jne    0x14002af63
   14002af43:	mov    rdx,QWORD PTR [rdi+0x10]
   14002af47:	mov    rcx,rbx
   14002af4a:	call   0x140013280
   14002af4f:	mov    rdi,QWORD PTR [rdi]
   14002af52:	mov    rcx,rsi
   14002af55:	call   0x1400330c0
   14002af5a:	cmp    BYTE PTR [rdi+0x29],0x0
   14002af5e:	mov    rsi,rdi
   14002af61:	je     0x14002af43
   14002af63:	mov    rax,QWORD PTR [rbx+0x8]
   14002af67:	mov    rsi,QWORD PTR [rsp+0x38]
   14002af6c:	mov    QWORD PTR [rax+0x8],rax
   14002af70:	mov    rax,QWORD PTR [rbx+0x8]
   14002af74:	mov    QWORD PTR [rax],rax
   14002af77:	mov    rax,QWORD PTR [rbx+0x8]
   14002af7b:	mov    QWORD PTR [rax+0x10],rax
   14002af7f:	mov    QWORD PTR [rbx+0x10],0x0
   14002af87:	mov    rbx,QWORD PTR [rsp+0x30]
   14002af8c:	add    rsp,0x20
   14002af90:	pop    rdi
   14002af91:	ret    
   14002af92:	int3   
   14002af93:	int3   
   14002af94:	int3   
   14002af95:	int3   
   14002af96:	int3   
   14002af97:	int3   
   14002af98:	int3   
   14002af99:	int3   
   14002af9a:	int3   
   14002af9b:	int3   
   14002af9c:	int3   
   14002af9d:	int3   
   14002af9e:	int3   
   14002af9f:	int3   
   14002afa0:	rex push rbx
   14002afa2:	sub    rsp,0x20
   14002afa6:	mov    rbx,rcx
   14002afa9:	mov    rcx,QWORD PTR [rcx+0x8]
   14002afad:	test   rcx,rcx
   14002afb0:	je     0x14002afb7
   14002afb2:	call   0x1400330c0
   14002afb7:	xor    eax,eax
   14002afb9:	mov    QWORD PTR [rbx+0x8],rax
   14002afbd:	mov    QWORD PTR [rbx+0x10],rax
   14002afc1:	mov    QWORD PTR [rbx+0x18],rax
   14002afc5:	add    rsp,0x20
   14002afc9:	pop    rbx
   14002afca:	ret    
   14002afcb:	int3   
   14002afcc:	int3   
   14002afcd:	int3   
   14002afce:	int3   
   14002afcf:	int3   
   14002afd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002afd5:	push   rdi
   14002afd6:	sub    rsp,0x20
   14002afda:	xor    eax,eax
   14002afdc:	mov    rdi,rdx
   14002afdf:	mov    rbx,rcx
   14002afe2:	mov    QWORD PTR [rcx],rax
   14002afe5:	mov    QWORD PTR [rcx+0x8],rax
   14002afe9:	mov    QWORD PTR [rcx+0x10],rax
   14002afed:	test   rdx,rdx
   14002aff0:	je     0x14002b027
   14002aff2:	movabs rax,0x3fffffffffffffff
   14002affc:	cmp    rdx,rax
   14002afff:	jbe    0x14002b00e
   14002b001:	lea    rcx,[rip+0x40620]        # 0x14006b628
   14002b008:	call   0x140032d00
   14002b00d:	int3   
   14002b00e:	mov    rcx,rdx
   14002b011:	call   0x140027690
   14002b016:	mov    QWORD PTR [rbx],rax
   14002b019:	mov    QWORD PTR [rbx+0x8],rax
   14002b01d:	lea    rax,[rax+rdi*4]
   14002b021:	mov    QWORD PTR [rbx+0x10],rax
   14002b025:	mov    al,0x1
   14002b027:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b02c:	add    rsp,0x20
   14002b030:	pop    rdi
   14002b031:	ret    
   14002b032:	int3   
   14002b033:	int3   
   14002b034:	int3   
   14002b035:	int3   
   14002b036:	int3   
   14002b037:	int3   
   14002b038:	int3   
   14002b039:	int3   
   14002b03a:	int3   
   14002b03b:	int3   
   14002b03c:	int3   
   14002b03d:	int3   
   14002b03e:	int3   
   14002b03f:	int3   
   14002b040:	rex push rbx
   14002b042:	sub    rsp,0x40
   14002b046:	mov    rbx,rcx
   14002b049:	mov    QWORD PTR [rcx+0x10],0x0
   14002b051:	mov    ecx,0x48
   14002b056:	call   0x1400331a0
   14002b05b:	test   rax,rax
   14002b05e:	je     0x14002b090
   14002b060:	mov    QWORD PTR [rbx+0x8],rax
   14002b064:	mov    QWORD PTR [rax],rax
   14002b067:	mov    rax,QWORD PTR [rbx+0x8]
   14002b06b:	mov    QWORD PTR [rax+0x8],rax
   14002b06f:	mov    rax,QWORD PTR [rbx+0x8]
   14002b073:	mov    QWORD PTR [rax+0x10],rax
   14002b077:	mov    rax,QWORD PTR [rbx+0x8]
   14002b07b:	mov    BYTE PTR [rax+0x40],0x1
   14002b07f:	mov    rax,QWORD PTR [rbx+0x8]
   14002b083:	mov    BYTE PTR [rax+0x41],0x1
   14002b087:	mov    rax,rbx
   14002b08a:	add    rsp,0x40
   14002b08e:	pop    rbx
   14002b08f:	ret    
   14002b090:	lea    rdx,[rsp+0x50]
   14002b095:	lea    rcx,[rsp+0x20]
   14002b09a:	mov    QWORD PTR [rsp+0x50],0x0
   14002b0a3:	call   0x140032fd4
   14002b0a8:	lea    r11,[rip+0x3d7e1]        # 0x140068890
   14002b0af:	lea    rdx,[rip+0x5836a]        # 0x140083420
   14002b0b6:	lea    rcx,[rsp+0x20]
   14002b0bb:	mov    QWORD PTR [rsp+0x20],r11
   14002b0c0:	call   0x140036358
   14002b0c5:	int3   
   14002b0c6:	int3   
   14002b0c7:	int3   
   14002b0c8:	int3   
   14002b0c9:	int3   
   14002b0ca:	int3   
   14002b0cb:	int3   
   14002b0cc:	int3   
   14002b0cd:	int3   
   14002b0ce:	int3   
   14002b0cf:	int3   
   14002b0d0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b0d5:	mov    QWORD PTR [rsp+0x18],rsi
   14002b0da:	push   rdi
   14002b0db:	sub    rsp,0x20
   14002b0df:	cmp    BYTE PTR [rdx+0x41],0x0
   14002b0e3:	mov    rbx,rdx
   14002b0e6:	mov    rsi,rcx
   14002b0e9:	mov    rdi,rdx
   14002b0ec:	jne    0x14002b13f
   14002b0ee:	mov    QWORD PTR [rsp+0x30],rbp
   14002b0f3:	xor    ebp,ebp
   14002b0f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b100:	mov    rdx,QWORD PTR [rdi+0x10]
   14002b104:	mov    rcx,rsi
   14002b107:	call   0x14002b0d0
   14002b10c:	mov    rcx,QWORD PTR [rbx+0x20]
   14002b110:	mov    rdi,QWORD PTR [rdi]
   14002b113:	test   rcx,rcx
   14002b116:	je     0x14002b11d
   14002b118:	call   0x1400330c0
   14002b11d:	mov    rcx,rbx
   14002b120:	mov    QWORD PTR [rbx+0x20],rbp
   14002b124:	mov    QWORD PTR [rbx+0x28],rbp
   14002b128:	mov    QWORD PTR [rbx+0x30],rbp
   14002b12c:	call   0x1400330c0
   14002b131:	mov    rbx,rdi
   14002b134:	cmp    BYTE PTR [rdi+0x41],bpl
   14002b138:	je     0x14002b100
   14002b13a:	mov    rbp,QWORD PTR [rsp+0x30]
   14002b13f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b144:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b149:	add    rsp,0x20
   14002b14d:	pop    rdi
   14002b14e:	ret    
   14002b14f:	int3   
   14002b150:	mov    QWORD PTR [rsp+0x10],rbx
   14002b155:	mov    QWORD PTR [rsp+0x20],r9
   14002b15a:	mov    QWORD PTR [rsp+0x18],r8
   14002b15f:	push   rdi
   14002b160:	sub    rsp,0x20
   14002b164:	mov    rdi,rdx
   14002b167:	mov    rdx,QWORD PTR [rcx+0x8]
   14002b16b:	mov    rbx,rcx
   14002b16e:	cmp    r8,QWORD PTR [rdx]
   14002b171:	jne    0x14002b1b8
   14002b173:	cmp    r9,rdx
   14002b176:	jne    0x14002b1b8
   14002b178:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b17c:	call   0x14002b0d0
   14002b181:	mov    r11,QWORD PTR [rbx+0x8]
   14002b185:	mov    QWORD PTR [r11+0x8],r11
   14002b189:	mov    rax,QWORD PTR [rbx+0x8]
   14002b18d:	mov    QWORD PTR [rax],rax
   14002b190:	mov    rax,QWORD PTR [rbx+0x8]
   14002b194:	mov    QWORD PTR [rax+0x10],rax
   14002b198:	mov    rax,QWORD PTR [rbx+0x8]
   14002b19c:	mov    QWORD PTR [rbx+0x10],0x0
   14002b1a4:	mov    rcx,QWORD PTR [rax]
   14002b1a7:	mov    rax,rdi
   14002b1aa:	mov    QWORD PTR [rdi],rcx
   14002b1ad:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b1b2:	add    rsp,0x20
   14002b1b6:	pop    rdi
   14002b1b7:	ret    
   14002b1b8:	cmp    r8,r9
   14002b1bb:	je     0x14002b239
   14002b1bd:	nop    DWORD PTR [rax]
   14002b1c0:	cmp    BYTE PTR [r8+0x41],0x0
   14002b1c5:	mov    rax,r8
   14002b1c8:	jne    0x14002b21d
   14002b1ca:	mov    rdx,QWORD PTR [r8+0x10]
   14002b1ce:	cmp    BYTE PTR [rdx+0x41],0x0
   14002b1d2:	jne    0x14002b1f3
   14002b1d4:	mov    rcx,QWORD PTR [rdx]
   14002b1d7:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b1db:	jne    0x14002b1ec
   14002b1dd:	nop    DWORD PTR [rax]
   14002b1e0:	mov    rdx,rcx
   14002b1e3:	mov    rcx,QWORD PTR [rcx]
   14002b1e6:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b1ea:	je     0x14002b1e0
   14002b1ec:	mov    QWORD PTR [rsp+0x40],rdx
   14002b1f1:	jmp    0x14002b21d
   14002b1f3:	mov    rcx,QWORD PTR [r8+0x8]
   14002b1f7:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b1fb:	jne    0x14002b218
   14002b1fd:	nop    DWORD PTR [rax]
   14002b200:	cmp    r8,QWORD PTR [rcx+0x10]
   14002b204:	jne    0x14002b218
   14002b206:	mov    QWORD PTR [rsp+0x40],rcx
   14002b20b:	mov    r8,rcx
   14002b20e:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b212:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b216:	je     0x14002b200
   14002b218:	mov    QWORD PTR [rsp+0x40],rcx
   14002b21d:	lea    rdx,[rsp+0x30]
   14002b222:	mov    r8,rax
   14002b225:	mov    rcx,rbx
   14002b228:	call   0x14002b330
   14002b22d:	mov    r8,QWORD PTR [rsp+0x40]
   14002b232:	cmp    r8,QWORD PTR [rsp+0x48]
   14002b237:	jne    0x14002b1c0
   14002b239:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b23e:	mov    QWORD PTR [rdi],r8
   14002b241:	mov    rax,rdi
   14002b244:	add    rsp,0x20
   14002b248:	pop    rdi
   14002b249:	ret    
   14002b24a:	int3   
   14002b24b:	int3   
   14002b24c:	int3   
   14002b24d:	int3   
   14002b24e:	int3   
   14002b24f:	int3   
   14002b250:	mov    QWORD PTR [rsp+0x10],rbx
   14002b255:	mov    QWORD PTR [rsp+0x20],r9
   14002b25a:	mov    QWORD PTR [rsp+0x18],r8
   14002b25f:	push   rdi
   14002b260:	sub    rsp,0x20
   14002b264:	mov    rax,QWORD PTR [rcx+0x8]
   14002b268:	mov    rdi,rdx
   14002b26b:	mov    rbx,rcx
   14002b26e:	cmp    r8,QWORD PTR [rax]
   14002b271:	jne    0x14002b295
   14002b273:	cmp    r9,rax
   14002b276:	jne    0x14002b295
   14002b278:	call   0x14002af20
   14002b27d:	mov    r11,QWORD PTR [rbx+0x8]
   14002b281:	mov    rax,QWORD PTR [r11]
   14002b284:	mov    QWORD PTR [rdi],rax
   14002b287:	mov    rax,rdi
   14002b28a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b28f:	add    rsp,0x20
   14002b293:	pop    rdi
   14002b294:	ret    
   14002b295:	cmp    r8,r9
   14002b298:	je     0x14002b319
   14002b29a:	nop    WORD PTR [rax+rax*1+0x0]
   14002b2a0:	cmp    BYTE PTR [r8+0x29],0x0
   14002b2a5:	mov    rax,r8
   14002b2a8:	jne    0x14002b2fd
   14002b2aa:	mov    rdx,QWORD PTR [r8+0x10]
   14002b2ae:	cmp    BYTE PTR [rdx+0x29],0x0
   14002b2b2:	jne    0x14002b2d3
   14002b2b4:	mov    rcx,QWORD PTR [rdx]
   14002b2b7:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b2bb:	jne    0x14002b2cc
   14002b2bd:	nop    DWORD PTR [rax]
   14002b2c0:	mov    rdx,rcx
   14002b2c3:	mov    rcx,QWORD PTR [rcx]
   14002b2c6:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b2ca:	je     0x14002b2c0
   14002b2cc:	mov    QWORD PTR [rsp+0x40],rdx
   14002b2d1:	jmp    0x14002b2fd
   14002b2d3:	mov    rcx,QWORD PTR [r8+0x8]
   14002b2d7:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b2db:	jne    0x14002b2f8
   14002b2dd:	nop    DWORD PTR [rax]
   14002b2e0:	cmp    r8,QWORD PTR [rcx+0x10]
   14002b2e4:	jne    0x14002b2f8
   14002b2e6:	mov    QWORD PTR [rsp+0x40],rcx
   14002b2eb:	mov    r8,rcx
   14002b2ee:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b2f2:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b2f6:	je     0x14002b2e0
   14002b2f8:	mov    QWORD PTR [rsp+0x40],rcx
   14002b2fd:	lea    rdx,[rsp+0x30]
   14002b302:	mov    r8,rax
   14002b305:	mov    rcx,rbx
   14002b308:	call   0x14002b6b0
   14002b30d:	mov    r8,QWORD PTR [rsp+0x40]
   14002b312:	cmp    r8,QWORD PTR [rsp+0x48]
   14002b317:	jne    0x14002b2a0
   14002b319:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b31e:	mov    QWORD PTR [rdi],r8
   14002b321:	mov    rax,rdi
   14002b324:	add    rsp,0x20
   14002b328:	pop    rdi
   14002b329:	ret    
   14002b32a:	int3   
   14002b32b:	int3   
   14002b32c:	int3   
   14002b32d:	int3   
   14002b32e:	int3   
   14002b32f:	int3   
   14002b330:	mov    QWORD PTR [rsp+0x18],r8
   14002b335:	push   rsi
   14002b336:	push   r12
   14002b338:	sub    rsp,0x28
   14002b33c:	cmp    BYTE PTR [r8+0x41],0x0
   14002b341:	mov    r12,rdx
   14002b344:	mov    rsi,rcx
   14002b347:	je     0x14002b356
   14002b349:	lea    rcx,[rip+0x3ff60]        # 0x14006b2b0
   14002b350:	call   0x140032d5c
   14002b355:	int3   
   14002b356:	mov    rdx,QWORD PTR [r8+0x10]
   14002b35a:	lea    r9,[r8+0x10]
   14002b35e:	mov    QWORD PTR [rsp+0x48],rbp
   14002b363:	cmp    BYTE PTR [rdx+0x41],0x0
   14002b367:	mov    rbp,r8
   14002b36a:	jne    0x14002b38e
   14002b36c:	mov    rax,QWORD PTR [rdx]
   14002b36f:	cmp    BYTE PTR [rax+0x41],0x0
   14002b373:	jne    0x14002b3b0
   14002b375:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b380:	mov    rdx,rax
   14002b383:	mov    rax,QWORD PTR [rax]
   14002b386:	cmp    BYTE PTR [rax+0x41],0x0
   14002b38a:	je     0x14002b380
   14002b38c:	jmp    0x14002b3b0
   14002b38e:	mov    rdx,QWORD PTR [r8+0x8]
   14002b392:	cmp    BYTE PTR [rdx+0x41],0x0
   14002b396:	jne    0x14002b3b0
   14002b398:	cmp    r8,QWORD PTR [rdx+0x10]
   14002b39c:	jne    0x14002b3b0
   14002b39e:	mov    QWORD PTR [rsp+0x50],rdx
   14002b3a3:	mov    r8,rdx
   14002b3a6:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b3aa:	cmp    BYTE PTR [rdx+0x41],0x0
   14002b3ae:	je     0x14002b398
   14002b3b0:	mov    QWORD PTR [rsp+0x50],rdx
   14002b3b5:	mov    rcx,QWORD PTR [rbp+0x0]
   14002b3b9:	mov    QWORD PTR [rsp+0x40],rbx
   14002b3be:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b3c2:	mov    QWORD PTR [rsp+0x20],rdi
   14002b3c7:	je     0x14002b3ce
   14002b3c9:	mov    rdi,QWORD PTR [r9]
   14002b3cc:	jmp    0x14002b3e9
   14002b3ce:	mov    rax,QWORD PTR [r9]
   14002b3d1:	cmp    BYTE PTR [rax+0x41],0x0
   14002b3d5:	je     0x14002b3dc
   14002b3d7:	mov    rdi,rcx
   14002b3da:	jmp    0x14002b3e9
   14002b3dc:	mov    rdi,QWORD PTR [rdx+0x10]
   14002b3e0:	cmp    rdx,rbp
   14002b3e3:	jne    0x14002b493
   14002b3e9:	cmp    BYTE PTR [rdi+0x41],0x0
   14002b3ed:	mov    rbx,QWORD PTR [rbp+0x8]
   14002b3f1:	jne    0x14002b3f7
   14002b3f3:	mov    QWORD PTR [rdi+0x8],rbx
   14002b3f7:	mov    rax,QWORD PTR [rsi+0x8]
   14002b3fb:	cmp    QWORD PTR [rax+0x8],rbp
   14002b3ff:	jne    0x14002b407
   14002b401:	mov    QWORD PTR [rax+0x8],rdi
   14002b405:	jmp    0x14002b415
   14002b407:	cmp    QWORD PTR [rbx],rbp
   14002b40a:	jne    0x14002b411
   14002b40c:	mov    QWORD PTR [rbx],rdi
   14002b40f:	jmp    0x14002b415
   14002b411:	mov    QWORD PTR [rbx+0x10],rdi
   14002b415:	mov    rdx,QWORD PTR [rsi+0x8]
   14002b419:	cmp    QWORD PTR [rdx],rbp
   14002b41c:	jne    0x14002b44f
   14002b41e:	cmp    BYTE PTR [rdi+0x41],0x0
   14002b422:	je     0x14002b429
   14002b424:	mov    rcx,rbx
   14002b427:	jmp    0x14002b44c
   14002b429:	mov    rax,QWORD PTR [rdi]
   14002b42c:	mov    rcx,rdi
   14002b42f:	cmp    BYTE PTR [rax+0x41],0x0
   14002b433:	jne    0x14002b44c
   14002b435:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b440:	mov    rcx,rax
   14002b443:	mov    rax,QWORD PTR [rax]
   14002b446:	cmp    BYTE PTR [rax+0x41],0x0
   14002b44a:	je     0x14002b440
   14002b44c:	mov    QWORD PTR [rdx],rcx
   14002b44f:	mov    rdx,QWORD PTR [rsi+0x8]
   14002b453:	cmp    QWORD PTR [rdx+0x10],rbp
   14002b457:	jne    0x14002b4ff
   14002b45d:	cmp    BYTE PTR [rdi+0x41],0x0
   14002b461:	je     0x14002b46f
   14002b463:	mov    rcx,rbx
   14002b466:	mov    QWORD PTR [rdx+0x10],rbx
   14002b46a:	jmp    0x14002b4ff
   14002b46f:	mov    rax,QWORD PTR [rdi+0x10]
   14002b473:	mov    rcx,rdi
   14002b476:	cmp    BYTE PTR [rax+0x41],0x0
   14002b47a:	jne    0x14002b48d
   14002b47c:	nop    DWORD PTR [rax+0x0]
   14002b480:	mov    rcx,rax
   14002b483:	mov    rax,QWORD PTR [rax+0x10]
   14002b487:	cmp    BYTE PTR [rax+0x41],0x0
   14002b48b:	je     0x14002b480
   14002b48d:	mov    QWORD PTR [rdx+0x10],rcx
   14002b491:	jmp    0x14002b4ff
   14002b493:	mov    QWORD PTR [rcx+0x8],rdx
   14002b497:	mov    rax,QWORD PTR [rbp+0x0]
   14002b49b:	mov    QWORD PTR [rdx],rax
   14002b49e:	cmp    rdx,QWORD PTR [r9]
   14002b4a1:	jne    0x14002b4a8
   14002b4a3:	mov    rbx,rdx
   14002b4a6:	jmp    0x14002b4c7
   14002b4a8:	cmp    BYTE PTR [rdi+0x41],0x0
   14002b4ac:	mov    rbx,QWORD PTR [rdx+0x8]
   14002b4b0:	jne    0x14002b4b6
   14002b4b2:	mov    QWORD PTR [rdi+0x8],rbx
   14002b4b6:	mov    QWORD PTR [rbx],rdi
   14002b4b9:	mov    rax,QWORD PTR [r9]
   14002b4bc:	mov    QWORD PTR [rdx+0x10],rax
   14002b4c0:	mov    rax,QWORD PTR [r9]
   14002b4c3:	mov    QWORD PTR [rax+0x8],rdx
   14002b4c7:	mov    rax,QWORD PTR [rsi+0x8]
   14002b4cb:	cmp    QWORD PTR [rax+0x8],rbp
   14002b4cf:	jne    0x14002b4d7
   14002b4d1:	mov    QWORD PTR [rax+0x8],rdx
   14002b4d5:	jmp    0x14002b4e9
   14002b4d7:	mov    rax,QWORD PTR [rbp+0x8]
   14002b4db:	cmp    QWORD PTR [rax],rbp
   14002b4de:	jne    0x14002b4e5
   14002b4e0:	mov    QWORD PTR [rax],rdx
   14002b4e3:	jmp    0x14002b4e9
   14002b4e5:	mov    QWORD PTR [rax+0x10],rdx
   14002b4e9:	mov    rax,QWORD PTR [rbp+0x8]
   14002b4ed:	mov    QWORD PTR [rdx+0x8],rax
   14002b4f1:	movzx  eax,BYTE PTR [rbp+0x40]
   14002b4f5:	movzx  ecx,BYTE PTR [rdx+0x40]
   14002b4f9:	mov    BYTE PTR [rdx+0x40],al
   14002b4fc:	mov    BYTE PTR [rbp+0x40],cl
   14002b4ff:	cmp    BYTE PTR [rbp+0x40],0x1
   14002b503:	jne    0x14002b64f
   14002b509:	mov    rax,QWORD PTR [rsi+0x8]
   14002b50d:	cmp    rdi,QWORD PTR [rax+0x8]
   14002b511:	je     0x14002b64b
   14002b517:	nop    WORD PTR [rax+rax*1+0x0]
   14002b520:	cmp    BYTE PTR [rdi+0x40],0x1
   14002b524:	jne    0x14002b64b
   14002b52a:	mov    rcx,QWORD PTR [rbx]
   14002b52d:	cmp    rdi,rcx
   14002b530:	jne    0x14002b5bb
   14002b536:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b53a:	cmp    BYTE PTR [rcx+0x40],0x0
   14002b53e:	jne    0x14002b557
   14002b540:	mov    BYTE PTR [rcx+0x40],0x1
   14002b544:	mov    rdx,rbx
   14002b547:	mov    rcx,rsi
   14002b54a:	mov    BYTE PTR [rbx+0x40],0x0
   14002b54e:	call   0x140028a10
   14002b553:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b557:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b55b:	jne    0x14002b5f4
   14002b561:	mov    rax,QWORD PTR [rcx]
   14002b564:	cmp    BYTE PTR [rax+0x40],0x1
   14002b568:	jne    0x14002b574
   14002b56a:	mov    rax,QWORD PTR [rcx+0x10]
   14002b56e:	cmp    BYTE PTR [rax+0x40],0x1
   14002b572:	je     0x14002b5f0
   14002b574:	mov    rax,QWORD PTR [rcx+0x10]
   14002b578:	cmp    BYTE PTR [rax+0x40],0x1
   14002b57c:	jne    0x14002b598
   14002b57e:	mov    rax,QWORD PTR [rcx]
   14002b581:	mov    rdx,rcx
   14002b584:	mov    BYTE PTR [rax+0x40],0x1
   14002b588:	mov    BYTE PTR [rcx+0x40],0x0
   14002b58c:	mov    rcx,rsi
   14002b58f:	call   0x14002ba10
   14002b594:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b598:	movzx  eax,BYTE PTR [rbx+0x40]
   14002b59c:	mov    rdx,rbx
   14002b59f:	mov    BYTE PTR [rcx+0x40],al
   14002b5a2:	mov    BYTE PTR [rbx+0x40],0x1
   14002b5a6:	mov    rax,QWORD PTR [rcx+0x10]
   14002b5aa:	mov    rcx,rsi
   14002b5ad:	mov    BYTE PTR [rax+0x40],0x1
   14002b5b1:	call   0x140028a10
   14002b5b6:	jmp    0x14002b64b
   14002b5bb:	cmp    BYTE PTR [rcx+0x40],0x0
   14002b5bf:	jne    0x14002b5d7
   14002b5c1:	mov    BYTE PTR [rcx+0x40],0x1
   14002b5c5:	mov    rdx,rbx
   14002b5c8:	mov    rcx,rsi
   14002b5cb:	mov    BYTE PTR [rbx+0x40],0x0
   14002b5cf:	call   0x14002ba10
   14002b5d4:	mov    rcx,QWORD PTR [rbx]
   14002b5d7:	cmp    BYTE PTR [rcx+0x41],0x0
   14002b5db:	jne    0x14002b5f4
   14002b5dd:	mov    rax,QWORD PTR [rcx+0x10]
   14002b5e1:	cmp    BYTE PTR [rax+0x40],0x1
   14002b5e5:	jne    0x14002b60b
   14002b5e7:	mov    rax,QWORD PTR [rcx]
   14002b5ea:	cmp    BYTE PTR [rax+0x40],0x1
   14002b5ee:	jne    0x14002b60b
   14002b5f0:	mov    BYTE PTR [rcx+0x40],0x0
   14002b5f4:	mov    rax,QWORD PTR [rsi+0x8]
   14002b5f8:	mov    rdi,rbx
   14002b5fb:	mov    rbx,QWORD PTR [rbx+0x8]
   14002b5ff:	cmp    rdi,QWORD PTR [rax+0x8]
   14002b603:	jne    0x14002b520
   14002b609:	jmp    0x14002b64b
   14002b60b:	mov    rax,QWORD PTR [rcx]
   14002b60e:	cmp    BYTE PTR [rax+0x40],0x1
   14002b612:	jne    0x14002b62e
   14002b614:	mov    rax,QWORD PTR [rcx+0x10]
   14002b618:	mov    rdx,rcx
   14002b61b:	mov    BYTE PTR [rax+0x40],0x1
   14002b61f:	mov    BYTE PTR [rcx+0x40],0x0
   14002b623:	mov    rcx,rsi
   14002b626:	call   0x140028a10
   14002b62b:	mov    rcx,QWORD PTR [rbx]
   14002b62e:	movzx  eax,BYTE PTR [rbx+0x40]
   14002b632:	mov    rdx,rbx
   14002b635:	mov    BYTE PTR [rcx+0x40],al
   14002b638:	mov    BYTE PTR [rbx+0x40],0x1
   14002b63c:	mov    rax,QWORD PTR [rcx]
   14002b63f:	mov    rcx,rsi
   14002b642:	mov    BYTE PTR [rax+0x40],0x1
   14002b646:	call   0x14002ba10
   14002b64b:	mov    BYTE PTR [rdi+0x40],0x1
   14002b64f:	mov    rcx,QWORD PTR [rbp+0x20]
   14002b653:	mov    rdi,QWORD PTR [rsp+0x20]
   14002b658:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b65d:	test   rcx,rcx
   14002b660:	je     0x14002b667
   14002b662:	call   0x1400330c0
   14002b667:	xor    eax,eax
   14002b669:	mov    rcx,rbp
   14002b66c:	mov    QWORD PTR [rbp+0x20],rax
   14002b670:	mov    QWORD PTR [rbp+0x28],rax
   14002b674:	mov    QWORD PTR [rbp+0x30],rax
   14002b678:	call   0x1400330c0
   14002b67d:	mov    rax,QWORD PTR [rsi+0x10]
   14002b681:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b686:	test   rax,rax
   14002b689:	je     0x14002b692
   14002b68b:	dec    rax
   14002b68e:	mov    QWORD PTR [rsi+0x10],rax
   14002b692:	mov    rax,QWORD PTR [rsp+0x50]
   14002b697:	mov    QWORD PTR [r12],rax
   14002b69b:	mov    rax,r12
   14002b69e:	add    rsp,0x28
   14002b6a2:	pop    r12
   14002b6a4:	pop    rsi
   14002b6a5:	ret    
   14002b6a6:	int3   
   14002b6a7:	int3   
   14002b6a8:	int3   
   14002b6a9:	int3   
   14002b6aa:	int3   
   14002b6ab:	int3   
   14002b6ac:	int3   
   14002b6ad:	int3   
   14002b6ae:	int3   
   14002b6af:	int3   
   14002b6b0:	mov    QWORD PTR [rsp+0x18],r8
   14002b6b5:	push   rsi
   14002b6b6:	push   r12
   14002b6b8:	sub    rsp,0x28
   14002b6bc:	cmp    BYTE PTR [r8+0x29],0x0
   14002b6c1:	mov    r12,rdx
   14002b6c4:	mov    rsi,rcx
   14002b6c7:	je     0x14002b6d6
   14002b6c9:	lea    rcx,[rip+0x3fbe0]        # 0x14006b2b0
   14002b6d0:	call   0x140032d5c
   14002b6d5:	int3   
   14002b6d6:	mov    rdx,QWORD PTR [r8+0x10]
   14002b6da:	lea    r9,[r8+0x10]
   14002b6de:	mov    QWORD PTR [rsp+0x48],rbp
   14002b6e3:	cmp    BYTE PTR [rdx+0x29],0x0
   14002b6e7:	mov    rbp,r8
   14002b6ea:	jne    0x14002b70e
   14002b6ec:	mov    rax,QWORD PTR [rdx]
   14002b6ef:	cmp    BYTE PTR [rax+0x29],0x0
   14002b6f3:	jne    0x14002b730
   14002b6f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b700:	mov    rdx,rax
   14002b703:	mov    rax,QWORD PTR [rax]
   14002b706:	cmp    BYTE PTR [rax+0x29],0x0
   14002b70a:	je     0x14002b700
   14002b70c:	jmp    0x14002b730
   14002b70e:	mov    rdx,QWORD PTR [r8+0x8]
   14002b712:	cmp    BYTE PTR [rdx+0x29],0x0
   14002b716:	jne    0x14002b730
   14002b718:	cmp    r8,QWORD PTR [rdx+0x10]
   14002b71c:	jne    0x14002b730
   14002b71e:	mov    QWORD PTR [rsp+0x50],rdx
   14002b723:	mov    r8,rdx
   14002b726:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b72a:	cmp    BYTE PTR [rdx+0x29],0x0
   14002b72e:	je     0x14002b718
   14002b730:	mov    QWORD PTR [rsp+0x50],rdx
   14002b735:	mov    rcx,QWORD PTR [rbp+0x0]
   14002b739:	mov    QWORD PTR [rsp+0x40],rbx
   14002b73e:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b742:	mov    QWORD PTR [rsp+0x20],rdi
   14002b747:	je     0x14002b74e
   14002b749:	mov    rdi,QWORD PTR [r9]
   14002b74c:	jmp    0x14002b769
   14002b74e:	mov    rax,QWORD PTR [r9]
   14002b751:	cmp    BYTE PTR [rax+0x29],0x0
   14002b755:	je     0x14002b75c
   14002b757:	mov    rdi,rcx
   14002b75a:	jmp    0x14002b769
   14002b75c:	mov    rdi,QWORD PTR [rdx+0x10]
   14002b760:	cmp    rdx,rbp
   14002b763:	jne    0x14002b813
   14002b769:	cmp    BYTE PTR [rdi+0x29],0x0
   14002b76d:	mov    rbx,QWORD PTR [rbp+0x8]
   14002b771:	jne    0x14002b777
   14002b773:	mov    QWORD PTR [rdi+0x8],rbx
   14002b777:	mov    rax,QWORD PTR [rsi+0x8]
   14002b77b:	cmp    QWORD PTR [rax+0x8],rbp
   14002b77f:	jne    0x14002b787
   14002b781:	mov    QWORD PTR [rax+0x8],rdi
   14002b785:	jmp    0x14002b795
   14002b787:	cmp    QWORD PTR [rbx],rbp
   14002b78a:	jne    0x14002b791
   14002b78c:	mov    QWORD PTR [rbx],rdi
   14002b78f:	jmp    0x14002b795
   14002b791:	mov    QWORD PTR [rbx+0x10],rdi
   14002b795:	mov    rdx,QWORD PTR [rsi+0x8]
   14002b799:	cmp    QWORD PTR [rdx],rbp
   14002b79c:	jne    0x14002b7cf
   14002b79e:	cmp    BYTE PTR [rdi+0x29],0x0
   14002b7a2:	je     0x14002b7a9
   14002b7a4:	mov    rcx,rbx
   14002b7a7:	jmp    0x14002b7cc
   14002b7a9:	mov    rax,QWORD PTR [rdi]
   14002b7ac:	mov    rcx,rdi
   14002b7af:	cmp    BYTE PTR [rax+0x29],0x0
   14002b7b3:	jne    0x14002b7cc
   14002b7b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b7c0:	mov    rcx,rax
   14002b7c3:	mov    rax,QWORD PTR [rax]
   14002b7c6:	cmp    BYTE PTR [rax+0x29],0x0
   14002b7ca:	je     0x14002b7c0
   14002b7cc:	mov    QWORD PTR [rdx],rcx
   14002b7cf:	mov    rdx,QWORD PTR [rsi+0x8]
   14002b7d3:	cmp    QWORD PTR [rdx+0x10],rbp
   14002b7d7:	jne    0x14002b87f
   14002b7dd:	cmp    BYTE PTR [rdi+0x29],0x0
   14002b7e1:	je     0x14002b7ef
   14002b7e3:	mov    rcx,rbx
   14002b7e6:	mov    QWORD PTR [rdx+0x10],rbx
   14002b7ea:	jmp    0x14002b87f
   14002b7ef:	mov    rax,QWORD PTR [rdi+0x10]
   14002b7f3:	mov    rcx,rdi
   14002b7f6:	cmp    BYTE PTR [rax+0x29],0x0
   14002b7fa:	jne    0x14002b80d
   14002b7fc:	nop    DWORD PTR [rax+0x0]
   14002b800:	mov    rcx,rax
   14002b803:	mov    rax,QWORD PTR [rax+0x10]
   14002b807:	cmp    BYTE PTR [rax+0x29],0x0
   14002b80b:	je     0x14002b800
   14002b80d:	mov    QWORD PTR [rdx+0x10],rcx
   14002b811:	jmp    0x14002b87f
   14002b813:	mov    QWORD PTR [rcx+0x8],rdx
   14002b817:	mov    rax,QWORD PTR [rbp+0x0]
   14002b81b:	mov    QWORD PTR [rdx],rax
   14002b81e:	cmp    rdx,QWORD PTR [r9]
   14002b821:	jne    0x14002b828
   14002b823:	mov    rbx,rdx
   14002b826:	jmp    0x14002b847
   14002b828:	cmp    BYTE PTR [rdi+0x29],0x0
   14002b82c:	mov    rbx,QWORD PTR [rdx+0x8]
   14002b830:	jne    0x14002b836
   14002b832:	mov    QWORD PTR [rdi+0x8],rbx
   14002b836:	mov    QWORD PTR [rbx],rdi
   14002b839:	mov    rax,QWORD PTR [r9]
   14002b83c:	mov    QWORD PTR [rdx+0x10],rax
   14002b840:	mov    rax,QWORD PTR [r9]
   14002b843:	mov    QWORD PTR [rax+0x8],rdx
   14002b847:	mov    rax,QWORD PTR [rsi+0x8]
   14002b84b:	cmp    QWORD PTR [rax+0x8],rbp
   14002b84f:	jne    0x14002b857
   14002b851:	mov    QWORD PTR [rax+0x8],rdx
   14002b855:	jmp    0x14002b869
   14002b857:	mov    rax,QWORD PTR [rbp+0x8]
   14002b85b:	cmp    QWORD PTR [rax],rbp
   14002b85e:	jne    0x14002b865
   14002b860:	mov    QWORD PTR [rax],rdx
   14002b863:	jmp    0x14002b869
   14002b865:	mov    QWORD PTR [rax+0x10],rdx
   14002b869:	mov    rax,QWORD PTR [rbp+0x8]
   14002b86d:	mov    QWORD PTR [rdx+0x8],rax
   14002b871:	movzx  eax,BYTE PTR [rbp+0x28]
   14002b875:	movzx  ecx,BYTE PTR [rdx+0x28]
   14002b879:	mov    BYTE PTR [rdx+0x28],al
   14002b87c:	mov    BYTE PTR [rbp+0x28],cl
   14002b87f:	cmp    BYTE PTR [rbp+0x28],0x1
   14002b883:	jne    0x14002b9cf
   14002b889:	mov    rax,QWORD PTR [rsi+0x8]
   14002b88d:	cmp    rdi,QWORD PTR [rax+0x8]
   14002b891:	je     0x14002b9cb
   14002b897:	nop    WORD PTR [rax+rax*1+0x0]
   14002b8a0:	cmp    BYTE PTR [rdi+0x28],0x1
   14002b8a4:	jne    0x14002b9cb
   14002b8aa:	mov    rcx,QWORD PTR [rbx]
   14002b8ad:	cmp    rdi,rcx
   14002b8b0:	jne    0x14002b93b
   14002b8b6:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b8ba:	cmp    BYTE PTR [rcx+0x28],0x0
   14002b8be:	jne    0x14002b8d7
   14002b8c0:	mov    BYTE PTR [rcx+0x28],0x1
   14002b8c4:	mov    rdx,rbx
   14002b8c7:	mov    rcx,rsi
   14002b8ca:	mov    BYTE PTR [rbx+0x28],0x0
   14002b8ce:	call   0x140032380
   14002b8d3:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b8d7:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b8db:	jne    0x14002b974
   14002b8e1:	mov    rax,QWORD PTR [rcx]
   14002b8e4:	cmp    BYTE PTR [rax+0x28],0x1
   14002b8e8:	jne    0x14002b8f4
   14002b8ea:	mov    rax,QWORD PTR [rcx+0x10]
   14002b8ee:	cmp    BYTE PTR [rax+0x28],0x1
   14002b8f2:	je     0x14002b970
   14002b8f4:	mov    rax,QWORD PTR [rcx+0x10]
   14002b8f8:	cmp    BYTE PTR [rax+0x28],0x1
   14002b8fc:	jne    0x14002b918
   14002b8fe:	mov    rax,QWORD PTR [rcx]
   14002b901:	mov    rdx,rcx
   14002b904:	mov    BYTE PTR [rax+0x28],0x1
   14002b908:	mov    BYTE PTR [rcx+0x28],0x0
   14002b90c:	mov    rcx,rsi
   14002b90f:	call   0x140030610
   14002b914:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b918:	movzx  eax,BYTE PTR [rbx+0x28]
   14002b91c:	mov    rdx,rbx
   14002b91f:	mov    BYTE PTR [rcx+0x28],al
   14002b922:	mov    BYTE PTR [rbx+0x28],0x1
   14002b926:	mov    rax,QWORD PTR [rcx+0x10]
   14002b92a:	mov    rcx,rsi
   14002b92d:	mov    BYTE PTR [rax+0x28],0x1
   14002b931:	call   0x140032380
   14002b936:	jmp    0x14002b9cb
   14002b93b:	cmp    BYTE PTR [rcx+0x28],0x0
   14002b93f:	jne    0x14002b957
   14002b941:	mov    BYTE PTR [rcx+0x28],0x1
   14002b945:	mov    rdx,rbx
   14002b948:	mov    rcx,rsi
   14002b94b:	mov    BYTE PTR [rbx+0x28],0x0
   14002b94f:	call   0x140030610
   14002b954:	mov    rcx,QWORD PTR [rbx]
   14002b957:	cmp    BYTE PTR [rcx+0x29],0x0
   14002b95b:	jne    0x14002b974
   14002b95d:	mov    rax,QWORD PTR [rcx+0x10]
   14002b961:	cmp    BYTE PTR [rax+0x28],0x1
   14002b965:	jne    0x14002b98b
   14002b967:	mov    rax,QWORD PTR [rcx]
   14002b96a:	cmp    BYTE PTR [rax+0x28],0x1
   14002b96e:	jne    0x14002b98b
   14002b970:	mov    BYTE PTR [rcx+0x28],0x0
   14002b974:	mov    rax,QWORD PTR [rsi+0x8]
   14002b978:	mov    rdi,rbx
   14002b97b:	mov    rbx,QWORD PTR [rbx+0x8]
   14002b97f:	cmp    rdi,QWORD PTR [rax+0x8]
   14002b983:	jne    0x14002b8a0
   14002b989:	jmp    0x14002b9cb
   14002b98b:	mov    rax,QWORD PTR [rcx]
   14002b98e:	cmp    BYTE PTR [rax+0x28],0x1
   14002b992:	jne    0x14002b9ae
   14002b994:	mov    rax,QWORD PTR [rcx+0x10]
   14002b998:	mov    rdx,rcx
   14002b99b:	mov    BYTE PTR [rax+0x28],0x1
   14002b99f:	mov    BYTE PTR [rcx+0x28],0x0
   14002b9a3:	mov    rcx,rsi
   14002b9a6:	call   0x140032380
   14002b9ab:	mov    rcx,QWORD PTR [rbx]
   14002b9ae:	movzx  eax,BYTE PTR [rbx+0x28]
   14002b9b2:	mov    rdx,rbx
   14002b9b5:	mov    BYTE PTR [rcx+0x28],al
   14002b9b8:	mov    BYTE PTR [rbx+0x28],0x1
   14002b9bc:	mov    rax,QWORD PTR [rcx]
   14002b9bf:	mov    rcx,rsi
   14002b9c2:	mov    BYTE PTR [rax+0x28],0x1
   14002b9c6:	call   0x140030610
   14002b9cb:	mov    BYTE PTR [rdi+0x28],0x1
   14002b9cf:	mov    rcx,rbp
   14002b9d2:	call   0x1400330c0
   14002b9d7:	mov    rax,QWORD PTR [rsi+0x10]
   14002b9db:	mov    rdi,QWORD PTR [rsp+0x20]
   14002b9e0:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b9e5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b9ea:	test   rax,rax
   14002b9ed:	je     0x14002b9f6
   14002b9ef:	dec    rax
   14002b9f2:	mov    QWORD PTR [rsi+0x10],rax
   14002b9f6:	mov    rax,QWORD PTR [rsp+0x50]
   14002b9fb:	mov    QWORD PTR [r12],rax
   14002b9ff:	mov    rax,r12
   14002ba02:	add    rsp,0x28
   14002ba06:	pop    r12
   14002ba08:	pop    rsi
   14002ba09:	ret    
   14002ba0a:	int3   
   14002ba0b:	int3   
   14002ba0c:	int3   
   14002ba0d:	int3   
   14002ba0e:	int3   
   14002ba0f:	int3   
   14002ba10:	mov    r8,QWORD PTR [rdx]
   14002ba13:	mov    rax,QWORD PTR [r8+0x10]
   14002ba17:	mov    QWORD PTR [rdx],rax
   14002ba1a:	mov    rax,QWORD PTR [r8+0x10]
   14002ba1e:	cmp    BYTE PTR [rax+0x41],0x0
   14002ba22:	jne    0x14002ba28
   14002ba24:	mov    QWORD PTR [rax+0x8],rdx
   14002ba28:	mov    rax,QWORD PTR [rdx+0x8]
   14002ba2c:	mov    QWORD PTR [r8+0x8],rax
   14002ba30:	mov    rax,QWORD PTR [rcx+0x8]
   14002ba34:	cmp    rdx,QWORD PTR [rax+0x8]
   14002ba38:	jne    0x14002ba47
   14002ba3a:	mov    QWORD PTR [rax+0x8],r8
   14002ba3e:	mov    QWORD PTR [r8+0x10],rdx
   14002ba42:	mov    QWORD PTR [rdx+0x8],r8
   14002ba46:	ret    
   14002ba47:	mov    rax,QWORD PTR [rdx+0x8]
   14002ba4b:	cmp    rdx,QWORD PTR [rax+0x10]
   14002ba4f:	jne    0x14002ba5e
   14002ba51:	mov    QWORD PTR [rax+0x10],r8
   14002ba55:	mov    QWORD PTR [r8+0x10],rdx
   14002ba59:	mov    QWORD PTR [rdx+0x8],r8
   14002ba5d:	ret    
   14002ba5e:	mov    QWORD PTR [rax],r8
   14002ba61:	mov    QWORD PTR [r8+0x10],rdx
   14002ba65:	mov    QWORD PTR [rdx+0x8],r8
   14002ba69:	ret    
   14002ba6a:	int3   
   14002ba6b:	int3   
   14002ba6c:	int3   
   14002ba6d:	int3   
   14002ba6e:	int3   
   14002ba6f:	int3   
   14002ba70:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba75:	push   rdi
   14002ba76:	sub    rsp,0x20
   14002ba7a:	mov    rax,QWORD PTR [rcx+0x8]
   14002ba7e:	mov    rdi,rdx
   14002ba81:	mov    rbx,rcx
   14002ba84:	cmp    rdx,rax
   14002ba87:	jae    0x14002bac7
   14002ba89:	mov    rcx,QWORD PTR [rcx]
   14002ba8c:	cmp    rcx,rdx
   14002ba8f:	ja     0x14002bac7
   14002ba91:	sub    rdi,rcx
   14002ba94:	sar    rdi,0x2
   14002ba98:	cmp    rax,QWORD PTR [rbx+0x10]
   14002ba9c:	jne    0x14002baa6
   14002ba9e:	mov    rcx,rbx
   14002baa1:	call   0x140027600
   14002baa6:	mov    rdx,QWORD PTR [rbx+0x8]
   14002baaa:	test   rdx,rdx
   14002baad:	je     0x14002bae2
   14002baaf:	mov    rax,QWORD PTR [rbx]
   14002bab2:	mov    ecx,DWORD PTR [rax+rdi*4]
   14002bab5:	mov    DWORD PTR [rdx],ecx
   14002bab7:	add    QWORD PTR [rbx+0x8],0x4
   14002babc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bac1:	add    rsp,0x20
   14002bac5:	pop    rdi
   14002bac6:	ret    
   14002bac7:	cmp    rax,QWORD PTR [rbx+0x10]
   14002bacb:	jne    0x14002bad5
   14002bacd:	mov    rcx,rbx
   14002bad0:	call   0x140027600
   14002bad5:	mov    rcx,QWORD PTR [rbx+0x8]
   14002bad9:	test   rcx,rcx
   14002badc:	je     0x14002bae2
   14002bade:	mov    eax,DWORD PTR [rdi]
   14002bae0:	mov    DWORD PTR [rcx],eax
   14002bae2:	add    QWORD PTR [rbx+0x8],0x4
   14002bae7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002baec:	add    rsp,0x20
   14002baf0:	pop    rdi
   14002baf1:	ret    
   14002baf2:	int3   
   14002baf3:	int3   
   14002baf4:	int3   
   14002baf5:	int3   
   14002baf6:	int3   
   14002baf7:	int3   
   14002baf8:	int3   
   14002baf9:	int3   
   14002bafa:	int3   
   14002bafb:	int3   
   14002bafc:	int3   
   14002bafd:	int3   
   14002bafe:	int3   
   14002baff:	int3   
   14002bb00:	rex push rbx
   14002bb02:	sub    rsp,0x40
   14002bb06:	cmp    QWORD PTR [rcx+0x10],0x0
   14002bb0b:	mov    r10,r9
   14002bb0e:	mov    rbx,rdx
   14002bb11:	mov    r11,rcx
   14002bb14:	jne    0x14002bb30
   14002bb16:	mov    QWORD PTR [rsp+0x20],r9
   14002bb1b:	mov    r9,QWORD PTR [rcx+0x8]
   14002bb1f:	mov    r8b,0x1
   14002bb22:	call   0x14002be60
   14002bb27:	mov    rax,rbx
   14002bb2a:	add    rsp,0x40
   14002bb2e:	pop    rbx
   14002bb2f:	ret    
   14002bb30:	mov    rcx,QWORD PTR [rcx+0x8]
   14002bb34:	mov    QWORD PTR [rsp+0x50],rsi
   14002bb39:	cmp    r8,QWORD PTR [rcx]
   14002bb3c:	jne    0x14002bb6d
   14002bb3e:	mov    eax,DWORD PTR [r8+0x18]
   14002bb42:	cmp    DWORD PTR [r9+0x18],eax
   14002bb46:	jae    0x14002bceb
   14002bb4c:	mov    QWORD PTR [rsp+0x20],r9
   14002bb51:	mov    r9,r8
   14002bb54:	mov    rcx,r11
   14002bb57:	mov    r8b,0x1
   14002bb5a:	call   0x14002be60
   14002bb5f:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bb64:	mov    rax,rbx
   14002bb67:	add    rsp,0x40
   14002bb6b:	pop    rbx
   14002bb6c:	ret    
   14002bb6d:	cmp    r8,rcx
   14002bb70:	jne    0x14002bba2
   14002bb72:	mov    r9,QWORD PTR [rcx+0x10]
   14002bb76:	mov    eax,DWORD PTR [r10+0x18]
   14002bb7a:	cmp    DWORD PTR [r9+0x18],eax
   14002bb7e:	jae    0x14002bceb
   14002bb84:	xor    r8d,r8d
   14002bb87:	mov    rcx,r11
   14002bb8a:	mov    QWORD PTR [rsp+0x20],r10
   14002bb8f:	call   0x14002be60
   14002bb94:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bb99:	mov    rax,rbx
   14002bb9c:	add    rsp,0x40
   14002bba0:	pop    rbx
   14002bba1:	ret    
   14002bba2:	mov    esi,DWORD PTR [r9+0x18]
   14002bba6:	cmp    DWORD PTR [r8+0x18],esi
   14002bbaa:	jbe    0x14002bc59
   14002bbb0:	cmp    BYTE PTR [r8+0x41],0x0
   14002bbb5:	mov    rax,r8
   14002bbb8:	je     0x14002bbc0
   14002bbba:	mov    r9,QWORD PTR [r8+0x10]
   14002bbbe:	jmp    0x14002bc1d
   14002bbc0:	mov    r9,QWORD PTR [r8]
   14002bbc3:	cmp    BYTE PTR [r9+0x41],0x0
   14002bbc8:	jne    0x14002bbef
   14002bbca:	mov    rax,QWORD PTR [r9+0x10]
   14002bbce:	cmp    BYTE PTR [rax+0x41],0x0
   14002bbd2:	jne    0x14002bc1d
   14002bbd4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002bbe0:	mov    r9,rax
   14002bbe3:	mov    rax,QWORD PTR [rax+0x10]
   14002bbe7:	cmp    BYTE PTR [rax+0x41],0x0
   14002bbeb:	je     0x14002bbe0
   14002bbed:	jmp    0x14002bc1d
   14002bbef:	mov    rdx,QWORD PTR [r8+0x8]
   14002bbf3:	cmp    BYTE PTR [rdx+0x41],0x0
   14002bbf7:	jne    0x14002bc12
   14002bbf9:	nop    DWORD PTR [rax+0x0]
   14002bc00:	cmp    rax,QWORD PTR [rdx]
   14002bc03:	jne    0x14002bc12
   14002bc05:	mov    rax,rdx
   14002bc08:	mov    rdx,QWORD PTR [rdx+0x8]
   14002bc0c:	cmp    BYTE PTR [rdx+0x41],0x0
   14002bc10:	je     0x14002bc00
   14002bc12:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc16:	mov    r9,rax
   14002bc19:	cmove  r9,rdx
   14002bc1d:	cmp    DWORD PTR [r9+0x18],esi
   14002bc21:	jae    0x14002bc55
   14002bc23:	mov    rax,QWORD PTR [r9+0x10]
   14002bc27:	mov    QWORD PTR [rsp+0x20],r10
   14002bc2c:	mov    rdx,rbx
   14002bc2f:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc33:	mov    rcx,r11
   14002bc36:	jne    0x14002bcd5
   14002bc3c:	mov    r9,r8
   14002bc3f:	mov    r8b,0x1
   14002bc42:	call   0x14002be60
   14002bc47:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bc4c:	mov    rax,rbx
   14002bc4f:	add    rsp,0x40
   14002bc53:	pop    rbx
   14002bc54:	ret    
   14002bc55:	cmp    DWORD PTR [r8+0x18],esi
   14002bc59:	jae    0x14002bceb
   14002bc5f:	cmp    BYTE PTR [r8+0x41],0x0
   14002bc64:	mov    r9,r8
   14002bc67:	jne    0x14002bcae
   14002bc69:	mov    rax,QWORD PTR [r8+0x10]
   14002bc6d:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc71:	jne    0x14002bc8e
   14002bc73:	mov    r9,rax
   14002bc76:	mov    rax,QWORD PTR [rax]
   14002bc79:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc7d:	jne    0x14002bcae
   14002bc7f:	nop
   14002bc80:	mov    r9,rax
   14002bc83:	mov    rax,QWORD PTR [rax]
   14002bc86:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc8a:	je     0x14002bc80
   14002bc8c:	jmp    0x14002bcae
   14002bc8e:	mov    rax,QWORD PTR [r8+0x8]
   14002bc92:	cmp    BYTE PTR [rax+0x41],0x0
   14002bc96:	jne    0x14002bcab
   14002bc98:	cmp    r9,QWORD PTR [rax+0x10]
   14002bc9c:	jne    0x14002bcab
   14002bc9e:	mov    r9,rax
   14002bca1:	mov    rax,QWORD PTR [rax+0x8]
   14002bca5:	cmp    BYTE PTR [rax+0x41],0x0
   14002bca9:	je     0x14002bc98
   14002bcab:	mov    r9,rax
   14002bcae:	cmp    r9,rcx
   14002bcb1:	je     0x14002bcb9
   14002bcb3:	cmp    esi,DWORD PTR [r9+0x18]
   14002bcb7:	jae    0x14002bceb
   14002bcb9:	mov    rax,QWORD PTR [r8+0x10]
   14002bcbd:	mov    QWORD PTR [rsp+0x20],r10
   14002bcc2:	mov    rdx,rbx
   14002bcc5:	cmp    BYTE PTR [rax+0x41],0x0
   14002bcc9:	mov    rcx,r11
   14002bccc:	je     0x14002bc3f
   14002bcd2:	mov    r9,r8
   14002bcd5:	xor    r8d,r8d
   14002bcd8:	call   0x14002be60
   14002bcdd:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bce2:	mov    rax,rbx
   14002bce5:	add    rsp,0x40
   14002bce9:	pop    rbx
   14002bcea:	ret    
   14002bceb:	lea    rdx,[rsp+0x30]
   14002bcf0:	mov    r8,r10
   14002bcf3:	mov    rcx,r11
   14002bcf6:	call   0x14002bd10
   14002bcfb:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bd00:	mov    rcx,QWORD PTR [rax]
   14002bd03:	mov    rax,rbx
   14002bd06:	mov    QWORD PTR [rbx],rcx
   14002bd09:	add    rsp,0x40
   14002bd0d:	pop    rbx
   14002bd0e:	ret    
   14002bd0f:	int3   
   14002bd10:	mov    QWORD PTR [rsp+0x10],rbx
   14002bd15:	mov    QWORD PTR [rsp+0x18],rsi
   14002bd1a:	push   rdi
   14002bd1b:	sub    rsp,0x30
   14002bd1f:	mov    r9,QWORD PTR [rcx+0x8]
   14002bd23:	mov    rdi,r8
   14002bd26:	mov    rsi,rdx
   14002bd29:	mov    rax,QWORD PTR [r9+0x8]
   14002bd2d:	mov    r8b,0x1
   14002bd30:	cmp    BYTE PTR [rax+0x41],0x0
   14002bd34:	jne    0x14002bd5f
   14002bd36:	mov    r10d,DWORD PTR [rdi+0x18]
   14002bd3a:	nop    WORD PTR [rax+rax*1+0x0]
   14002bd40:	cmp    r10d,DWORD PTR [rax+0x18]
   14002bd44:	mov    r9,rax
   14002bd47:	setb   r8b
   14002bd4b:	test   r8b,r8b
   14002bd4e:	je     0x14002bd55
   14002bd50:	mov    rax,QWORD PTR [rax]
   14002bd53:	jmp    0x14002bd59
   14002bd55:	mov    rax,QWORD PTR [rax+0x10]
   14002bd59:	cmp    BYTE PTR [rax+0x41],0x0
   14002bd5d:	je     0x14002bd40
   14002bd5f:	mov    rbx,r9
   14002bd62:	test   r8b,r8b
   14002bd65:	je     0x14002be0a
   14002bd6b:	mov    rax,QWORD PTR [rcx+0x8]
   14002bd6f:	cmp    r9,QWORD PTR [rax]
   14002bd72:	jne    0x14002bda3
   14002bd74:	mov    r8b,0x1
   14002bd77:	lea    rdx,[rsp+0x40]
   14002bd7c:	mov    QWORD PTR [rsp+0x20],rdi
   14002bd81:	call   0x14002be60
   14002bd86:	mov    BYTE PTR [rsi+0x8],0x1
   14002bd8a:	mov    rcx,QWORD PTR [rax]
   14002bd8d:	mov    rax,rsi
   14002bd90:	mov    QWORD PTR [rsi],rcx
   14002bd93:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bd98:	mov    rsi,QWORD PTR [rsp+0x50]
   14002bd9d:	add    rsp,0x30
   14002bda1:	pop    rdi
   14002bda2:	ret    
   14002bda3:	cmp    BYTE PTR [r9+0x41],0x0
   14002bda8:	je     0x14002bdb0
   14002bdaa:	mov    rbx,QWORD PTR [r9+0x10]
   14002bdae:	jmp    0x14002be0a
   14002bdb0:	mov    rax,QWORD PTR [r9]
   14002bdb3:	cmp    BYTE PTR [rax+0x41],0x0
   14002bdb7:	jne    0x14002bddf
   14002bdb9:	mov    rbx,rax
   14002bdbc:	mov    rax,QWORD PTR [rax+0x10]
   14002bdc0:	cmp    BYTE PTR [rax+0x41],0x0
   14002bdc4:	jne    0x14002be0a
   14002bdc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bdd0:	mov    rbx,rax
   14002bdd3:	mov    rax,QWORD PTR [rax+0x10]
   14002bdd7:	cmp    BYTE PTR [rax+0x41],0x0
   14002bddb:	je     0x14002bdd0
   14002bddd:	jmp    0x14002be0a
   14002bddf:	mov    rax,QWORD PTR [r9+0x8]
   14002bde3:	cmp    BYTE PTR [rax+0x41],0x0
   14002bde7:	jne    0x14002be02
   14002bde9:	nop    DWORD PTR [rax+0x0]
   14002bdf0:	cmp    rbx,QWORD PTR [rax]
   14002bdf3:	jne    0x14002be02
   14002bdf5:	mov    rbx,rax
   14002bdf8:	mov    rax,QWORD PTR [rax+0x8]
   14002bdfc:	cmp    BYTE PTR [rax+0x41],0x0
   14002be00:	je     0x14002bdf0
   14002be02:	cmp    BYTE PTR [rbx+0x41],0x0
   14002be06:	cmove  rbx,rax
   14002be0a:	mov    eax,DWORD PTR [rdi+0x18]
   14002be0d:	cmp    DWORD PTR [rbx+0x18],eax
   14002be10:	jb     0x14002bd77
   14002be16:	mov    rcx,QWORD PTR [rdi+0x20]
   14002be1a:	test   rcx,rcx
   14002be1d:	je     0x14002be24
   14002be1f:	call   0x1400330c0
   14002be24:	xor    eax,eax
   14002be26:	mov    rcx,rdi
   14002be29:	mov    QWORD PTR [rdi+0x20],rax
   14002be2d:	mov    QWORD PTR [rdi+0x28],rax
   14002be31:	mov    QWORD PTR [rdi+0x30],rax
   14002be35:	call   0x1400330c0
   14002be3a:	mov    QWORD PTR [rsi],rbx
   14002be3d:	mov    rbx,QWORD PTR [rsp+0x48]
   14002be42:	mov    BYTE PTR [rsi+0x8],0x0
   14002be46:	mov    rax,rsi
   14002be49:	mov    rsi,QWORD PTR [rsp+0x50]
   14002be4e:	add    rsp,0x30
   14002be52:	pop    rdi
   14002be53:	ret    
   14002be54:	int3   
   14002be55:	int3   
   14002be56:	int3   
   14002be57:	int3   
   14002be58:	int3   
   14002be59:	int3   
   14002be5a:	int3   
   14002be5b:	int3   
   14002be5c:	int3   
   14002be5d:	int3   
   14002be5e:	int3   
   14002be5f:	int3   
   14002be60:	rex push rbx
   14002be62:	sub    rsp,0x20
   14002be66:	mov    rax,QWORD PTR [rcx+0x10]
   14002be6a:	mov    r10,rcx
   14002be6d:	movabs rcx,0x666666666666665
   14002be77:	mov    rbx,rdx
   14002be7a:	cmp    rax,rcx
   14002be7d:	jb     0x14002beb5
   14002be7f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002be84:	mov    rcx,QWORD PTR [rbx+0x20]
   14002be88:	test   rcx,rcx
   14002be8b:	je     0x14002be92
   14002be8d:	call   0x1400330c0
   14002be92:	xor    eax,eax
   14002be94:	mov    rcx,rbx
   14002be97:	mov    QWORD PTR [rbx+0x20],rax
   14002be9b:	mov    QWORD PTR [rbx+0x28],rax
   14002be9f:	mov    QWORD PTR [rbx+0x30],rax
   14002bea3:	call   0x1400330c0
   14002bea8:	lea    rcx,[rip+0x3f421]        # 0x14006b2d0
   14002beaf:	call   0x140032d00
   14002beb4:	int3   
   14002beb5:	mov    r11,QWORD PTR [rsp+0x50]
   14002beba:	inc    rax
   14002bebd:	mov    QWORD PTR [r10+0x10],rax
   14002bec1:	mov    QWORD PTR [r11+0x8],r9
   14002bec5:	mov    rax,QWORD PTR [r10+0x8]
   14002bec9:	cmp    r9,rax
   14002becc:	jne    0x14002bedf
   14002bece:	mov    QWORD PTR [rax+0x8],r11
   14002bed2:	mov    rax,QWORD PTR [r10+0x8]
   14002bed6:	mov    QWORD PTR [rax],r11
   14002bed9:	mov    rax,QWORD PTR [r10+0x8]
   14002bedd:	jmp    0x14002bf03
   14002bedf:	test   r8b,r8b
   14002bee2:	je     0x14002bef5
   14002bee4:	mov    QWORD PTR [r9],r11
   14002bee7:	mov    rax,QWORD PTR [r10+0x8]
   14002beeb:	cmp    r9,QWORD PTR [rax]
   14002beee:	jne    0x14002bf07
   14002bef0:	mov    QWORD PTR [rax],r11
   14002bef3:	jmp    0x14002bf07
   14002bef5:	mov    QWORD PTR [r9+0x10],r11
   14002bef9:	mov    rax,QWORD PTR [r10+0x8]
   14002befd:	cmp    r9,QWORD PTR [rax+0x10]
   14002bf01:	jne    0x14002bf07
   14002bf03:	mov    QWORD PTR [rax+0x10],r11
   14002bf07:	mov    rax,QWORD PTR [r11+0x8]
   14002bf0b:	mov    rdx,r11
   14002bf0e:	cmp    BYTE PTR [rax+0x40],0x0
   14002bf12:	jne    0x14002c0fa
   14002bf18:	nop    DWORD PTR [rax+rax*1+0x0]
   14002bf20:	mov    rax,QWORD PTR [rdx+0x8]
   14002bf24:	mov    rcx,QWORD PTR [rax+0x8]
   14002bf28:	cmp    rax,QWORD PTR [rcx]
   14002bf2b:	jne    0x14002c008
   14002bf31:	mov    r8,QWORD PTR [rcx+0x10]
   14002bf35:	cmp    BYTE PTR [r8+0x40],0x0
   14002bf3a:	je     0x14002c012
   14002bf40:	cmp    rdx,QWORD PTR [rax+0x10]
   14002bf44:	jne    0x14002bf92
   14002bf46:	mov    rcx,QWORD PTR [rax+0x10]
   14002bf4a:	mov    rdx,rax
   14002bf4d:	mov    rax,QWORD PTR [rcx]
   14002bf50:	mov    QWORD PTR [rdx+0x10],rax
   14002bf54:	mov    rax,QWORD PTR [rcx]
   14002bf57:	cmp    BYTE PTR [rax+0x41],0x0
   14002bf5b:	jne    0x14002bf61
   14002bf5d:	mov    QWORD PTR [rax+0x8],rdx
   14002bf61:	mov    rax,QWORD PTR [rdx+0x8]
   14002bf65:	mov    QWORD PTR [rcx+0x8],rax
   14002bf69:	mov    rax,QWORD PTR [r10+0x8]
   14002bf6d:	cmp    rdx,QWORD PTR [rax+0x8]
   14002bf71:	jne    0x14002bf79
   14002bf73:	mov    QWORD PTR [rax+0x8],rcx
   14002bf77:	jmp    0x14002bf8b
   14002bf79:	mov    rax,QWORD PTR [rdx+0x8]
   14002bf7d:	cmp    rdx,QWORD PTR [rax]
   14002bf80:	jne    0x14002bf87
   14002bf82:	mov    QWORD PTR [rax],rcx
   14002bf85:	jmp    0x14002bf8b
   14002bf87:	mov    QWORD PTR [rax+0x10],rcx
   14002bf8b:	mov    QWORD PTR [rcx],rdx
   14002bf8e:	mov    QWORD PTR [rdx+0x8],rcx
   14002bf92:	mov    rax,QWORD PTR [rdx+0x8]
   14002bf96:	mov    BYTE PTR [rax+0x40],0x1
   14002bf9a:	mov    rax,QWORD PTR [rdx+0x8]
   14002bf9e:	mov    rcx,QWORD PTR [rax+0x8]
   14002bfa2:	mov    BYTE PTR [rcx+0x40],0x0
   14002bfa6:	mov    rax,QWORD PTR [rdx+0x8]
   14002bfaa:	mov    rcx,QWORD PTR [rax+0x8]
   14002bfae:	mov    r8,QWORD PTR [rcx]
   14002bfb1:	mov    rax,QWORD PTR [r8+0x10]
   14002bfb5:	mov    QWORD PTR [rcx],rax
   14002bfb8:	mov    rax,QWORD PTR [r8+0x10]
   14002bfbc:	cmp    BYTE PTR [rax+0x41],0x0
   14002bfc0:	jne    0x14002bfc6
   14002bfc2:	mov    QWORD PTR [rax+0x8],rcx
   14002bfc6:	mov    rax,QWORD PTR [rcx+0x8]
   14002bfca:	mov    QWORD PTR [r8+0x8],rax
   14002bfce:	mov    rax,QWORD PTR [r10+0x8]
   14002bfd2:	cmp    rcx,QWORD PTR [rax+0x8]
   14002bfd6:	jne    0x14002bfe5
   14002bfd8:	mov    QWORD PTR [rax+0x8],r8
   14002bfdc:	mov    QWORD PTR [r8+0x10],rcx
   14002bfe0:	jmp    0x14002c0e8
   14002bfe5:	mov    rax,QWORD PTR [rcx+0x8]
   14002bfe9:	cmp    rcx,QWORD PTR [rax+0x10]
   14002bfed:	jne    0x14002bffc
   14002bfef:	mov    QWORD PTR [rax+0x10],r8
   14002bff3:	mov    QWORD PTR [r8+0x10],rcx
   14002bff7:	jmp    0x14002c0e8
   14002bffc:	mov    QWORD PTR [rax],r8
   14002bfff:	mov    QWORD PTR [r8+0x10],rcx
   14002c003:	jmp    0x14002c0e8
   14002c008:	mov    r8,QWORD PTR [rcx]
   14002c00b:	cmp    BYTE PTR [r8+0x40],0x0
   14002c010:	jne    0x14002c034
   14002c012:	mov    BYTE PTR [rax+0x40],0x1
   14002c016:	mov    BYTE PTR [r8+0x40],0x1
   14002c01b:	mov    rax,QWORD PTR [rdx+0x8]
   14002c01f:	mov    rcx,QWORD PTR [rax+0x8]
   14002c023:	mov    BYTE PTR [rcx+0x40],0x0
   14002c027:	mov    rax,QWORD PTR [rdx+0x8]
   14002c02b:	mov    rdx,QWORD PTR [rax+0x8]
   14002c02f:	jmp    0x14002c0ec
   14002c034:	cmp    rdx,QWORD PTR [rax]
   14002c037:	jne    0x14002c087
   14002c039:	mov    rcx,QWORD PTR [rax]
   14002c03c:	mov    rdx,rax
   14002c03f:	mov    rax,QWORD PTR [rcx+0x10]
   14002c043:	mov    QWORD PTR [rdx],rax
   14002c046:	mov    rax,QWORD PTR [rcx+0x10]
   14002c04a:	cmp    BYTE PTR [rax+0x41],0x0
   14002c04e:	jne    0x14002c054
   14002c050:	mov    QWORD PTR [rax+0x8],rdx
   14002c054:	mov    rax,QWORD PTR [rdx+0x8]
   14002c058:	mov    QWORD PTR [rcx+0x8],rax
   14002c05c:	mov    rax,QWORD PTR [r10+0x8]
   14002c060:	cmp    rdx,QWORD PTR [rax+0x8]
   14002c064:	jne    0x14002c06c
   14002c066:	mov    QWORD PTR [rax+0x8],rcx
   14002c06a:	jmp    0x14002c07f
   14002c06c:	mov    rax,QWORD PTR [rdx+0x8]
   14002c070:	cmp    rdx,QWORD PTR [rax+0x10]
   14002c074:	jne    0x14002c07c
   14002c076:	mov    QWORD PTR [rax+0x10],rcx
   14002c07a:	jmp    0x14002c07f
   14002c07c:	mov    QWORD PTR [rax],rcx
   14002c07f:	mov    QWORD PTR [rcx+0x10],rdx
   14002c083:	mov    QWORD PTR [rdx+0x8],rcx
   14002c087:	mov    rax,QWORD PTR [rdx+0x8]
   14002c08b:	mov    BYTE PTR [rax+0x40],0x1
   14002c08f:	mov    rax,QWORD PTR [rdx+0x8]
   14002c093:	mov    rcx,QWORD PTR [rax+0x8]
   14002c097:	mov    BYTE PTR [rcx+0x40],0x0
   14002c09b:	mov    rax,QWORD PTR [rdx+0x8]
   14002c09f:	mov    rcx,QWORD PTR [rax+0x8]
   14002c0a3:	mov    r8,QWORD PTR [rcx+0x10]
   14002c0a7:	mov    rax,QWORD PTR [r8]
   14002c0aa:	mov    QWORD PTR [rcx+0x10],rax
   14002c0ae:	mov    rax,QWORD PTR [r8]
   14002c0b1:	cmp    BYTE PTR [rax+0x41],0x0
   14002c0b5:	jne    0x14002c0bb
   14002c0b7:	mov    QWORD PTR [rax+0x8],rcx
   14002c0bb:	mov    rax,QWORD PTR [rcx+0x8]
   14002c0bf:	mov    QWORD PTR [r8+0x8],rax
   14002c0c3:	mov    rax,QWORD PTR [r10+0x8]
   14002c0c7:	cmp    rcx,QWORD PTR [rax+0x8]
   14002c0cb:	jne    0x14002c0d3
   14002c0cd:	mov    QWORD PTR [rax+0x8],r8
   14002c0d1:	jmp    0x14002c0e5
   14002c0d3:	mov    rax,QWORD PTR [rcx+0x8]
   14002c0d7:	cmp    rcx,QWORD PTR [rax]
   14002c0da:	jne    0x14002c0e1
   14002c0dc:	mov    QWORD PTR [rax],r8
   14002c0df:	jmp    0x14002c0e5
   14002c0e1:	mov    QWORD PTR [rax+0x10],r8
   14002c0e5:	mov    QWORD PTR [r8],rcx
   14002c0e8:	mov    QWORD PTR [rcx+0x8],r8
   14002c0ec:	mov    rax,QWORD PTR [rdx+0x8]
   14002c0f0:	cmp    BYTE PTR [rax+0x40],0x0
   14002c0f4:	je     0x14002bf20
   14002c0fa:	mov    rax,QWORD PTR [r10+0x8]
   14002c0fe:	mov    QWORD PTR [rbx],r11
   14002c101:	mov    rcx,QWORD PTR [rax+0x8]
   14002c105:	mov    rax,rbx
   14002c108:	mov    BYTE PTR [rcx+0x40],0x1
   14002c10c:	add    rsp,0x20
   14002c110:	pop    rbx
   14002c111:	ret    
   14002c112:	int3   
   14002c113:	int3   
   14002c114:	int3   
   14002c115:	int3   
   14002c116:	int3   
   14002c117:	int3   
   14002c118:	int3   
   14002c119:	int3   
   14002c11a:	int3   
   14002c11b:	int3   
   14002c11c:	int3   
   14002c11d:	int3   
   14002c11e:	int3   
   14002c11f:	int3   
   14002c120:	rex push rbx
   14002c122:	sub    rsp,0x40
   14002c126:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c12f:	mov    rbx,rdx
   14002c132:	call   0x14002c1a0
   14002c137:	mov    r11,rax
   14002c13a:	mov    QWORD PTR [rsp+0x60],rax
   14002c13f:	add    rax,0x18
   14002c143:	je     0x14002c190
   14002c145:	lea    rdx,[rbx+0x8]
   14002c149:	mov    ecx,DWORD PTR [rbx]
   14002c14b:	mov    DWORD PTR [rax],ecx
   14002c14d:	lea    rcx,[rax+0x8]
   14002c151:	xor    r8d,r8d
   14002c154:	mov    QWORD PTR [rcx],r8
   14002c157:	mov    QWORD PTR [rcx+0x8],r8
   14002c15b:	mov    QWORD PTR [rcx+0x10],r8
   14002c15f:	cmp    rcx,rdx
   14002c162:	je     0x14002c190
   14002c164:	mov    QWORD PTR [rcx],r8
   14002c167:	mov    QWORD PTR [rcx+0x8],r8
   14002c16b:	mov    QWORD PTR [rcx+0x10],r8
   14002c16f:	mov    rax,QWORD PTR [rdx]
   14002c172:	mov    QWORD PTR [rcx],rax
   14002c175:	mov    rax,QWORD PTR [rdx+0x8]
   14002c179:	mov    QWORD PTR [rcx+0x8],rax
   14002c17d:	mov    rax,QWORD PTR [rdx+0x10]
   14002c181:	mov    QWORD PTR [rcx+0x10],rax
   14002c185:	mov    QWORD PTR [rdx],r8
   14002c188:	mov    QWORD PTR [rdx+0x8],r8
   14002c18c:	mov    QWORD PTR [rdx+0x10],r8
   14002c190:	mov    rax,r11
   14002c193:	add    rsp,0x40
   14002c197:	pop    rbx
   14002c198:	ret    
   14002c199:	int3   
   14002c19a:	int3   
   14002c19b:	int3   
   14002c19c:	int3   
   14002c19d:	int3   
   14002c19e:	int3   
   14002c19f:	int3   
   14002c1a0:	rex push rbx
   14002c1a2:	sub    rsp,0x40
   14002c1a6:	mov    rbx,rcx
   14002c1a9:	mov    ecx,0x48
   14002c1ae:	call   0x1400331a0
   14002c1b3:	test   rax,rax
   14002c1b6:	je     0x14002c1db
   14002c1b8:	mov    rdx,QWORD PTR [rbx+0x8]
   14002c1bc:	mov    QWORD PTR [rax],rdx
   14002c1bf:	mov    rdx,QWORD PTR [rbx+0x8]
   14002c1c3:	mov    QWORD PTR [rax+0x8],rdx
   14002c1c7:	mov    rcx,QWORD PTR [rbx+0x8]
   14002c1cb:	mov    WORD PTR [rax+0x40],0x0
   14002c1d1:	mov    QWORD PTR [rax+0x10],rcx
   14002c1d5:	add    rsp,0x40
   14002c1d9:	pop    rbx
   14002c1da:	ret    
   14002c1db:	lea    rdx,[rsp+0x58]
   14002c1e0:	lea    rcx,[rsp+0x20]
   14002c1e5:	mov    QWORD PTR [rsp+0x58],0x0
   14002c1ee:	call   0x140032fd4
   14002c1f3:	lea    r11,[rip+0x3c696]        # 0x140068890
   14002c1fa:	lea    rdx,[rip+0x5721f]        # 0x140083420
   14002c201:	lea    rcx,[rsp+0x20]
   14002c206:	mov    QWORD PTR [rsp+0x20],r11
   14002c20b:	call   0x140036358
   14002c210:	int3   
   14002c211:	int3   
   14002c212:	int3   
   14002c213:	int3   
   14002c214:	int3   
   14002c215:	int3   
   14002c216:	int3   
   14002c217:	int3   
   14002c218:	int3   
   14002c219:	int3   
   14002c21a:	int3   
   14002c21b:	int3   
   14002c21c:	int3   
   14002c21d:	int3   
   14002c21e:	int3   
   14002c21f:	int3   
   14002c220:	mov    QWORD PTR [rsp+0x8],rcx
   14002c225:	sub    rsp,0x38
   14002c229:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c232:	cmp    rcx,rdx
   14002c235:	je     0x14002c250
   14002c237:	test   r8,r8
   14002c23a:	je     0x14002c241
   14002c23c:	mov    eax,DWORD PTR [rcx]
   14002c23e:	mov    DWORD PTR [r8],eax
   14002c241:	add    r8,0x4
   14002c245:	add    rcx,0x4
   14002c249:	mov    QWORD PTR [rsp+0x40],rcx
   14002c24e:	jmp    0x14002c232
   14002c250:	mov    rax,r8
   14002c253:	add    rsp,0x38
   14002c257:	ret    
   14002c258:	int3   
   14002c259:	int3   
   14002c25a:	int3   
   14002c25b:	int3   
   14002c25c:	int3   
   14002c25d:	int3   
   14002c25e:	int3   
   14002c25f:	int3   
   14002c260:	rex push rbp
   14002c262:	push   rsi
   14002c263:	push   rdi
   14002c264:	push   r12
   14002c266:	push   r13
   14002c268:	push   r14
   14002c26a:	push   r15
   14002c26c:	lea    rbp,[rsp-0x27]
   14002c271:	sub    rsp,0x90
   14002c278:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   14002c280:	mov    QWORD PTR [rsp+0xd0],rbx
   14002c288:	mov    r13,rcx
   14002c28b:	xor    dil,dil
   14002c28e:	xor    r14d,r14d
   14002c291:	mov    QWORD PTR [rbp-0x31],r14
   14002c295:	mov    QWORD PTR [rbp-0x21],r14
   14002c299:	lea    rax,[rbp-0x31]
   14002c29d:	mov    QWORD PTR [rsp+0x20],rax
   14002c2a2:	lea    r9,[rip+0x3f127]        # 0x14006b3d0
   14002c2a9:	xor    edx,edx
   14002c2ab:	lea    r8d,[r14+0x17]
   14002c2af:	lea    rcx,[rip+0x3f0fa]        # 0x14006b3b0
   14002c2b6:	call   QWORD PTR [rip+0x3c3bc]        # 0x140068678
   14002c2bc:	mov    rcx,QWORD PTR [rbp-0x31]
   14002c2c0:	test   rcx,rcx
   14002c2c3:	je     0x14002c562
   14002c2c9:	mov    rax,QWORD PTR [rcx]
   14002c2cc:	lea    r9,[rbp-0x21]
   14002c2d0:	mov    r15d,0x1
   14002c2d6:	mov    r8d,r15d
   14002c2d9:	mov    edx,r15d
   14002c2dc:	call   QWORD PTR [rax+0x18]
   14002c2df:	mov    r11,QWORD PTR [rbp-0x21]
   14002c2e3:	test   r11,r11
   14002c2e6:	je     0x14002c55c
   14002c2ec:	mov    DWORD PTR [rbp+0x6f],r14d
   14002c2f0:	mov    rax,QWORD PTR [r11]
   14002c2f3:	lea    rdx,[rbp+0x6f]
   14002c2f7:	mov    rcx,r11
   14002c2fa:	call   QWORD PTR [rax+0x18]
   14002c2fd:	mov    esi,eax
   14002c2ff:	mov    r12d,r14d
   14002c302:	test   esi,esi
   14002c304:	js     0x14002c556
   14002c30a:	cmp    r12d,DWORD PTR [rbp+0x6f]
   14002c30e:	jae    0x14002c556
   14002c314:	mov    QWORD PTR [rbp-0x1],r14
   14002c318:	mov    rcx,QWORD PTR [rbp-0x21]
   14002c31c:	mov    rax,QWORD PTR [rcx]
   14002c31f:	lea    r8,[rbp-0x1]
   14002c323:	mov    edx,r12d
   14002c326:	call   QWORD PTR [rax+0x20]
   14002c329:	mov    esi,eax
   14002c32b:	mov    rcx,QWORD PTR [rbp-0x1]
   14002c32f:	test   rcx,rcx
   14002c332:	je     0x14002c53f
   14002c338:	mov    QWORD PTR [rbp-0x29],r14
   14002c33c:	mov    QWORD PTR [rbp-0x19],r14
   14002c340:	mov    rax,QWORD PTR [rcx]
   14002c343:	lea    rdx,[rbp-0x29]
   14002c347:	mov    QWORD PTR [rsp+0x20],rdx
   14002c34c:	xor    r9d,r9d
   14002c34f:	lea    r8d,[r9+0x17]
   14002c353:	lea    rdx,[rip+0x3f3c6]        # 0x14006b720
   14002c35a:	call   QWORD PTR [rax+0x18]
   14002c35d:	mov    esi,eax
   14002c35f:	mov    rax,QWORD PTR [rbp-0x29]
   14002c363:	test   rax,rax
   14002c366:	je     0x14002c51a
   14002c36c:	mov    r8,QWORD PTR [rax]
   14002c36f:	lea    rdx,[rbp-0x19]
   14002c373:	mov    rcx,rax
   14002c376:	call   QWORD PTR [r8+0x28]
   14002c37a:	mov    rcx,QWORD PTR [rbp-0x19]
   14002c37e:	test   rcx,rcx
   14002c381:	je     0x14002c514
   14002c387:	mov    DWORD PTR [rbp+0x77],r14d
   14002c38b:	mov    rax,QWORD PTR [rcx]
   14002c38e:	lea    rdx,[rbp+0x77]
   14002c392:	call   QWORD PTR [rax+0x18]
   14002c395:	mov    esi,eax
   14002c397:	mov    ebx,r14d
   14002c39a:	test   dil,dil
   14002c39d:	jne    0x14002c50e
   14002c3a3:	test   esi,esi
   14002c3a5:	js     0x14002c50e
   14002c3ab:	cmp    ebx,DWORD PTR [rbp+0x77]
   14002c3ae:	jge    0x14002c50e
   14002c3b4:	mov    QWORD PTR [rbp-0x39],r14
   14002c3b8:	mov    QWORD PTR [rbp-0x11],r14
   14002c3bc:	mov    rcx,QWORD PTR [rbp-0x19]
   14002c3c0:	mov    rax,QWORD PTR [rcx]
   14002c3c3:	lea    r8,[rbp-0x39]
   14002c3c7:	mov    edx,ebx
   14002c3c9:	call   QWORD PTR [rax+0x20]
   14002c3cc:	mov    esi,eax
   14002c3ce:	mov    rcx,QWORD PTR [rbp-0x39]
   14002c3d2:	test   rcx,rcx
   14002c3d5:	je     0x14002c4e2
   14002c3db:	mov    DWORD PTR [rbp+0x7f],r14d
   14002c3df:	mov    rax,QWORD PTR [rcx]
   14002c3e2:	lea    rdx,[rbp+0x7f]
   14002c3e6:	call   QWORD PTR [rax+0x18]
   14002c3e9:	mov    rcx,QWORD PTR [rbp-0x39]
   14002c3ed:	cmp    DWORD PTR [rbp+0x7f],0x1
   14002c3f1:	jne    0x14002c4e2
   14002c3f7:	mov    rax,QWORD PTR [rcx]
   14002c3fa:	lea    r8,[rbp-0x11]
   14002c3fe:	lea    rdx,[rip+0x3f32b]        # 0x14006b730
   14002c405:	call   QWORD PTR [rax]
   14002c407:	mov    r11,QWORD PTR [rbp-0x11]
   14002c40b:	test   r11,r11
   14002c40e:	je     0x14002c4dc
   14002c414:	mov    QWORD PTR [rbp-0x9],r14
   14002c418:	mov    rax,QWORD PTR [r11]
   14002c41b:	lea    rdx,[rbp-0x9]
   14002c41f:	mov    rcx,r11
   14002c422:	call   QWORD PTR [rax+0x60]
   14002c425:	mov    rdx,QWORD PTR [rbp-0x9]
   14002c429:	test   rdx,rdx
   14002c42c:	je     0x14002c4d6
   14002c432:	lea    rcx,[rbp+0x7]
   14002c436:	call   0x140016ea0
   14002c43b:	nop
   14002c43c:	mov    rdx,r13
   14002c43f:	lea    rcx,[rbp+0xf]
   14002c443:	call   0x140016ea0
   14002c448:	nop
   14002c449:	lea    rcx,[rbp+0x7]
   14002c44d:	call   0x14002c5b0
   14002c452:	lea    rcx,[rbp+0xf]
   14002c456:	call   0x14002c5b0
   14002c45b:	mov    rdx,QWORD PTR [rbp+0xf]
   14002c45f:	test   rdx,rdx
   14002c462:	je     0x14002c489
   14002c464:	mov    rcx,QWORD PTR [rbp+0x7]
   14002c468:	cmp    DWORD PTR [rcx-0x10],0x0
   14002c46c:	jl     0x14002c489
   14002c46e:	call   0x140036118
   14002c473:	test   rax,rax
   14002c476:	je     0x14002c489
   14002c478:	sub    rax,QWORD PTR [rbp+0x7]
   14002c47c:	sar    rax,1
   14002c47f:	movzx  edi,dil
   14002c483:	test   eax,eax
   14002c485:	cmovns edi,r15d
   14002c489:	mov    rcx,QWORD PTR [rbp-0x9]
   14002c48d:	call   QWORD PTR [rip+0x3c205]        # 0x140068698
   14002c493:	mov    QWORD PTR [rbp-0x9],r14
   14002c497:	mov    rdx,QWORD PTR [rbp+0xf]
   14002c49b:	add    rdx,0xffffffffffffffe8
   14002c49f:	or     eax,0xffffffff
   14002c4a2:	lock xadd DWORD PTR [rdx+0x10],eax
   14002c4a7:	dec    eax
   14002c4a9:	test   eax,eax
   14002c4ab:	jg     0x14002c4b7
   14002c4ad:	mov    rcx,QWORD PTR [rdx]
   14002c4b0:	mov    rax,QWORD PTR [rcx]
   14002c4b3:	call   QWORD PTR [rax+0x8]
   14002c4b6:	nop
   14002c4b7:	mov    rdx,QWORD PTR [rbp+0x7]
   14002c4bb:	add    rdx,0xffffffffffffffe8
   14002c4bf:	or     eax,0xffffffff
   14002c4c2:	lock xadd DWORD PTR [rdx+0x10],eax
   14002c4c7:	dec    eax
   14002c4c9:	test   eax,eax
   14002c4cb:	jg     0x14002c4d6
   14002c4cd:	mov    rcx,QWORD PTR [rdx]
   14002c4d0:	mov    rax,QWORD PTR [rcx]
   14002c4d3:	call   QWORD PTR [rax+0x8]
   14002c4d6:	mov    rcx,QWORD PTR [rbp-0x39]
   14002c4da:	jmp    0x14002c4e2
   14002c4dc:	mov    rcx,QWORD PTR [rbp-0x39]
   14002c4e0:	jmp    0x14002c4e6
   14002c4e2:	mov    r11,QWORD PTR [rbp-0x11]
   14002c4e6:	test   r11,r11
   14002c4e9:	je     0x14002c4f8
   14002c4eb:	mov    rax,QWORD PTR [r11]
   14002c4ee:	mov    rcx,r11
   14002c4f1:	call   QWORD PTR [rax+0x10]
   14002c4f4:	mov    rcx,QWORD PTR [rbp-0x39]
   14002c4f8:	test   rcx,rcx
   14002c4fb:	je     0x14002c503
   14002c4fd:	mov    rax,QWORD PTR [rcx]
   14002c500:	call   QWORD PTR [rax+0x10]
   14002c503:	inc    ebx
   14002c505:	test   dil,dil
   14002c508:	je     0x14002c3a3
   14002c50e:	mov    rax,QWORD PTR [rbp-0x29]
   14002c512:	jmp    0x14002c51a
   14002c514:	mov    rax,QWORD PTR [rbp-0x29]
   14002c518:	jmp    0x14002c51e
   14002c51a:	mov    rcx,QWORD PTR [rbp-0x19]
   14002c51e:	test   rcx,rcx
   14002c521:	je     0x14002c52d
   14002c523:	mov    rax,QWORD PTR [rcx]
   14002c526:	call   QWORD PTR [rax+0x10]
   14002c529:	mov    rax,QWORD PTR [rbp-0x29]
   14002c52d:	test   rax,rax
   14002c530:	je     0x14002c53b
   14002c532:	mov    rdx,QWORD PTR [rax]
   14002c535:	mov    rcx,rax
   14002c538:	call   QWORD PTR [rdx+0x10]
   14002c53b:	mov    rcx,QWORD PTR [rbp-0x1]
   14002c53f:	test   rcx,rcx
   14002c542:	je     0x14002c54a
   14002c544:	mov    rax,QWORD PTR [rcx]
   14002c547:	call   QWORD PTR [rax+0x10]
   14002c54a:	inc    r12d
   14002c54d:	test   dil,dil
   14002c550:	je     0x14002c302
   14002c556:	mov    rcx,QWORD PTR [rbp-0x31]
   14002c55a:	jmp    0x14002c562
   14002c55c:	mov    rcx,QWORD PTR [rbp-0x31]
   14002c560:	jmp    0x14002c566
   14002c562:	mov    r11,QWORD PTR [rbp-0x21]
   14002c566:	test   r11,r11
   14002c569:	je     0x14002c578
   14002c56b:	mov    rdx,QWORD PTR [r11]
   14002c56e:	mov    rcx,r11
   14002c571:	call   QWORD PTR [rdx+0x10]
   14002c574:	mov    rcx,QWORD PTR [rbp-0x31]
   14002c578:	test   rcx,rcx
   14002c57b:	je     0x14002c583
   14002c57d:	mov    rdx,QWORD PTR [rcx]
   14002c580:	call   QWORD PTR [rdx+0x10]
   14002c583:	movzx  eax,dil
   14002c587:	mov    rbx,QWORD PTR [rsp+0xd0]
   14002c58f:	add    rsp,0x90
   14002c596:	pop    r15
   14002c598:	pop    r14
   14002c59a:	pop    r13
   14002c59c:	pop    r12
   14002c59e:	pop    rdi
   14002c59f:	pop    rsi
   14002c5a0:	pop    rbp
   14002c5a1:	ret    
   14002c5a2:	int3   
   14002c5a3:	int3   
   14002c5a4:	int3   
   14002c5a5:	int3   
   14002c5a6:	int3   
   14002c5a7:	int3   
   14002c5a8:	int3   
   14002c5a9:	int3   
   14002c5aa:	int3   
   14002c5ab:	int3   
   14002c5ac:	int3   
   14002c5ad:	int3   
   14002c5ae:	int3   
   14002c5af:	int3   
   14002c5b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c5b5:	push   rdi
   14002c5b6:	sub    rsp,0x20
   14002c5ba:	mov    rax,QWORD PTR [rcx]
   14002c5bd:	mov    rdi,rcx
   14002c5c0:	movsxd rbx,DWORD PTR [rax-0x10]
   14002c5c4:	test   ebx,ebx
   14002c5c6:	jns    0x14002c5d3
   14002c5c8:	mov    ecx,0x80070057
   14002c5cd:	call   0x1400025f0
   14002c5d2:	int3   
   14002c5d3:	mov    ecx,0x1
   14002c5d8:	sub    ecx,DWORD PTR [rax-0x8]
   14002c5db:	mov    eax,DWORD PTR [rax-0xc]
   14002c5de:	sub    eax,ebx
   14002c5e0:	or     ecx,eax
   14002c5e2:	jge    0x14002c5ee
   14002c5e4:	mov    edx,ebx
   14002c5e6:	mov    rcx,rdi
   14002c5e9:	call   0x140017200
   14002c5ee:	mov    rcx,QWORD PTR [rdi]
   14002c5f1:	lea    eax,[rbx+0x1]
   14002c5f4:	movsxd rdx,eax
   14002c5f7:	call   0x140036110
   14002c5fc:	mov    r11,QWORD PTR [rdi]
   14002c5ff:	cmp    ebx,DWORD PTR [r11-0xc]
   14002c603:	jg     0x14002c620
   14002c605:	mov    DWORD PTR [r11-0x10],ebx
   14002c609:	mov    rax,QWORD PTR [rdi]
   14002c60c:	xor    edx,edx
   14002c60e:	mov    WORD PTR [rax+rbx*2],dx
   14002c612:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c617:	mov    rax,rdi
   14002c61a:	add    rsp,0x20
   14002c61e:	pop    rdi
   14002c61f:	ret    
   14002c620:	mov    ecx,0x80070057
   14002c625:	call   0x1400025f0
   14002c62a:	int3   
   14002c62b:	int3   
   14002c62c:	int3   
   14002c62d:	int3   
   14002c62e:	int3   
   14002c62f:	int3   
   14002c630:	mov    r11,rsp
   14002c633:	push   rdi
   14002c634:	sub    rsp,0x60
   14002c638:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c641:	mov    QWORD PTR [r11+0x10],rbx
   14002c645:	mov    QWORD PTR [r11+0x20],rsi
   14002c649:	mov    rax,QWORD PTR [rip+0x58a58]        # 0x1400850a8
   14002c650:	xor    rax,rsp
   14002c653:	mov    QWORD PTR [rsp+0x50],rax
   14002c658:	mov    rsi,r8
   14002c65b:	mov    r8,rdx
   14002c65e:	mov    rbx,rcx
   14002c661:	mov    rax,QWORD PTR [rcx]
   14002c664:	lea    rdx,[rax+0x1]
   14002c668:	cmp    rdx,r8
   14002c66b:	ja     0x14002c6d2
   14002c66d:	movzx  edi,BYTE PTR [rax]
   14002c670:	lea    rax,[rdi+rax*1+0x1]
   14002c675:	cmp    rax,r8
   14002c678:	ja     0x14002c6d2
   14002c67a:	lea    r8,[rdi+rdx*1]
   14002c67e:	mov    QWORD PTR [r11-0x28],0xf
   14002c686:	mov    QWORD PTR [r11-0x30],0x0
   14002c68e:	mov    BYTE PTR [rsp+0x28],0x0
   14002c693:	cmp    rdx,r8
   14002c696:	je     0x14002c6a5
   14002c698:	sub    r8,rdx
   14002c69b:	lea    rcx,[r11-0x40]
   14002c69f:	call   0x140002ba0
   14002c6a4:	nop
   14002c6a5:	lea    rdx,[rsp+0x28]
   14002c6aa:	mov    rcx,rsi
   14002c6ad:	call   0x1400029d0
   14002c6b2:	nop
   14002c6b3:	cmp    QWORD PTR [rsp+0x40],0x10
   14002c6b9:	jb     0x14002c6c5
   14002c6bb:	mov    rcx,QWORD PTR [rsp+0x28]
   14002c6c0:	call   0x1400330c0
   14002c6c5:	lea    eax,[rdi+0x1]
   14002c6c8:	movsxd rcx,eax
   14002c6cb:	add    QWORD PTR [rbx],rcx
   14002c6ce:	mov    al,0x1
   14002c6d0:	jmp    0x14002c6d4
   14002c6d2:	xor    al,al
   14002c6d4:	mov    rcx,QWORD PTR [rsp+0x50]
   14002c6d9:	xor    rcx,rsp
   14002c6dc:	call   0x140032f00
   14002c6e1:	mov    rbx,QWORD PTR [rsp+0x78]
   14002c6e6:	mov    rsi,QWORD PTR [rsp+0x88]
   14002c6ee:	add    rsp,0x60
   14002c6f2:	pop    rdi
   14002c6f3:	ret    
   14002c6f4:	int3   
   14002c6f5:	int3   
   14002c6f6:	int3   
   14002c6f7:	int3   
   14002c6f8:	int3   
   14002c6f9:	int3   
   14002c6fa:	int3   
   14002c6fb:	int3   
   14002c6fc:	int3   
   14002c6fd:	int3   
   14002c6fe:	int3   
   14002c6ff:	int3   
   14002c700:	lea    rax,[rip+0x44491]        # 0x140070b98
   14002c707:	mov    QWORD PTR [rcx],rax
   14002c70a:	mov    QWORD PTR [rcx+0x20],0xf
   14002c712:	xor    eax,eax
   14002c714:	mov    QWORD PTR [rcx+0x18],rax
   14002c718:	mov    BYTE PTR [rcx+0x8],al
   14002c71b:	mov    QWORD PTR [rcx+0x40],rax
   14002c71f:	mov    QWORD PTR [rcx+0x48],0xf
   14002c727:	mov    BYTE PTR [rcx+0x30],al
   14002c72a:	mov    QWORD PTR [rcx+0x68],rax
   14002c72e:	mov    QWORD PTR [rcx+0x70],0xf
   14002c736:	mov    BYTE PTR [rcx+0x58],al
   14002c739:	mov    QWORD PTR [rcx+0x90],rax
   14002c740:	mov    QWORD PTR [rcx+0x98],0xf
   14002c74b:	mov    BYTE PTR [rcx+0x80],al
   14002c751:	mov    QWORD PTR [rcx+0xc0],rax
   14002c758:	mov    QWORD PTR [rcx+0xc8],rax
   14002c75f:	mov    QWORD PTR [rcx+0xd0],rax
   14002c766:	mov    QWORD PTR [rcx+0xe0],rax
   14002c76d:	mov    QWORD PTR [rcx+0xe8],rax
   14002c774:	mov    QWORD PTR [rcx+0xf0],rax
   14002c77b:	mov    QWORD PTR [rcx+0x100],rax
   14002c782:	mov    QWORD PTR [rcx+0x108],rax
   14002c789:	mov    QWORD PTR [rcx+0x110],rax
   14002c790:	mov    QWORD PTR [rcx+0x120],rax
   14002c797:	mov    QWORD PTR [rcx+0x128],rax
   14002c79e:	mov    QWORD PTR [rcx+0x130],rax
   14002c7a5:	mov    DWORD PTR [rcx+0xb4],eax
   14002c7ab:	mov    WORD PTR [rcx+0xb0],ax
   14002c7b2:	mov    BYTE PTR [rcx+0xb8],al
   14002c7b8:	mov    QWORD PTR [rcx+0xa8],0xffffffffffffffff
   14002c7c3:	mov    rax,rcx
   14002c7c6:	ret    
   14002c7c7:	int3   
   14002c7c8:	int3   
   14002c7c9:	int3   
   14002c7ca:	int3   
   14002c7cb:	int3   
   14002c7cc:	int3   
   14002c7cd:	int3   
   14002c7ce:	int3   
   14002c7cf:	int3   
   14002c7d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c7d5:	push   rdi
   14002c7d6:	sub    rsp,0x20
   14002c7da:	mov    ebx,edx
   14002c7dc:	mov    rdi,rcx
   14002c7df:	call   0x14002c800
   14002c7e4:	test   bl,0x1
   14002c7e7:	je     0x14002c7f1
   14002c7e9:	mov    rcx,rdi
   14002c7ec:	call   0x1400330c0
   14002c7f1:	mov    rax,rdi
   14002c7f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c7f9:	add    rsp,0x20
   14002c7fd:	pop    rdi
   14002c7fe:	ret    
   14002c7ff:	int3   
   14002c800:	mov    QWORD PTR [rsp+0x8],rbx
   14002c805:	push   rdi
   14002c806:	sub    rsp,0x20
   14002c80a:	lea    rax,[rip+0x44387]        # 0x140070b98
   14002c811:	mov    rbx,rcx
   14002c814:	add    rcx,0x120
   14002c81b:	mov    QWORD PTR [rcx-0x120],rax
   14002c822:	call   0x14002ece0
   14002c827:	mov    rcx,QWORD PTR [rbx+0x100]
   14002c82e:	test   rcx,rcx
   14002c831:	je     0x14002c838
   14002c833:	call   0x1400330c0
   14002c838:	xor    edi,edi
   14002c83a:	mov    QWORD PTR [rbx+0x100],rdi
   14002c841:	mov    QWORD PTR [rbx+0x108],rdi
   14002c848:	mov    QWORD PTR [rbx+0x110],rdi
   14002c84f:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002c856:	test   rcx,rcx
   14002c859:	je     0x14002c860
   14002c85b:	call   0x1400330c0
   14002c860:	mov    QWORD PTR [rbx+0xe0],rdi
   14002c867:	mov    QWORD PTR [rbx+0xe8],rdi
   14002c86e:	mov    QWORD PTR [rbx+0xf0],rdi
   14002c875:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002c87c:	test   rcx,rcx
   14002c87f:	je     0x14002c886
   14002c881:	call   0x1400330c0
   14002c886:	mov    QWORD PTR [rbx+0xc0],rdi
   14002c88d:	mov    QWORD PTR [rbx+0xc8],rdi
   14002c894:	mov    QWORD PTR [rbx+0xd0],rdi
   14002c89b:	cmp    QWORD PTR [rbx+0x98],0x10
   14002c8a3:	jb     0x14002c8b1
   14002c8a5:	mov    rcx,QWORD PTR [rbx+0x80]
   14002c8ac:	call   0x1400330c0
   14002c8b1:	mov    QWORD PTR [rbx+0x98],0xf
   14002c8bc:	mov    QWORD PTR [rbx+0x90],rdi
   14002c8c3:	mov    BYTE PTR [rbx+0x80],dil
   14002c8ca:	cmp    QWORD PTR [rbx+0x70],0x10
   14002c8cf:	jb     0x14002c8da
   14002c8d1:	mov    rcx,QWORD PTR [rbx+0x58]
   14002c8d5:	call   0x1400330c0
   14002c8da:	mov    QWORD PTR [rbx+0x70],0xf
   14002c8e2:	mov    QWORD PTR [rbx+0x68],rdi
   14002c8e6:	mov    BYTE PTR [rbx+0x58],dil
   14002c8ea:	cmp    QWORD PTR [rbx+0x48],0x10
   14002c8ef:	jb     0x14002c8fa
   14002c8f1:	mov    rcx,QWORD PTR [rbx+0x30]
   14002c8f5:	call   0x1400330c0
   14002c8fa:	mov    QWORD PTR [rbx+0x48],0xf
   14002c902:	mov    QWORD PTR [rbx+0x40],rdi
   14002c906:	mov    BYTE PTR [rbx+0x30],dil
   14002c90a:	cmp    QWORD PTR [rbx+0x20],0x10
   14002c90f:	jb     0x14002c91a
   14002c911:	mov    rcx,QWORD PTR [rbx+0x8]
   14002c915:	call   0x1400330c0
   14002c91a:	mov    QWORD PTR [rbx+0x20],0xf
   14002c922:	mov    QWORD PTR [rbx+0x18],rdi
   14002c926:	mov    BYTE PTR [rbx+0x8],dil
   14002c92a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c92f:	add    rsp,0x20
   14002c933:	pop    rdi
   14002c934:	ret    
   14002c935:	int3   
   14002c936:	int3   
   14002c937:	int3   
   14002c938:	int3   
   14002c939:	int3   
   14002c93a:	int3   
   14002c93b:	int3   
   14002c93c:	int3   
   14002c93d:	int3   
   14002c93e:	int3   
   14002c93f:	int3   
   14002c940:	mov    QWORD PTR [rsp+0x8],rbx
   14002c945:	xor    r10d,r10d
   14002c948:	mov    rbx,r8
   14002c94b:	mov    r8d,edx
   14002c94e:	mov    rdx,rcx
   14002c951:	mov    rcx,QWORD PTR [rcx+0xc8]
   14002c958:	or     r9d,0xffffffff
   14002c95c:	sub    rcx,QWORD PTR [rdx+0xc0]
   14002c963:	mov    r11d,r10d
   14002c966:	sar    rcx,0x2
   14002c96a:	nop    WORD PTR [rax+rax*1+0x0]
   14002c970:	cmp    r10d,ecx
   14002c973:	jge    0x14002c992
   14002c975:	mov    rax,QWORD PTR [rdx+0xc0]
   14002c97c:	cmp    DWORD PTR [r11+rax*1],r8d
   14002c980:	cmove  r9d,r10d
   14002c984:	inc    r10d
   14002c987:	add    r11,0x4
   14002c98b:	test   r9d,r9d
   14002c98e:	js     0x14002c970
   14002c990:	jmp    0x14002c997
   14002c992:	test   r9d,r9d
   14002c995:	js     0x14002c9b0
   14002c997:	mov    rax,QWORD PTR [rdx+0xe0]
   14002c99e:	movsxd rcx,r9d
   14002c9a1:	mov    rcx,QWORD PTR [rax+rcx*8]
   14002c9a5:	mov    al,0x1
   14002c9a7:	mov    QWORD PTR [rbx],rcx
   14002c9aa:	mov    rbx,QWORD PTR [rsp+0x8]
   14002c9af:	ret    
   14002c9b0:	mov    rbx,QWORD PTR [rsp+0x8]
   14002c9b5:	xor    al,al
   14002c9b7:	ret    
   14002c9b8:	int3   
   14002c9b9:	int3   
   14002c9ba:	int3   
   14002c9bb:	int3   
   14002c9bc:	int3   
   14002c9bd:	int3   
   14002c9be:	int3   
   14002c9bf:	int3   
   14002c9c0:	rex push rbx
   14002c9c2:	push   rsi
   14002c9c3:	push   rdi
   14002c9c4:	sub    rsp,0x50
   14002c9c8:	mov    rax,QWORD PTR [rip+0x586d9]        # 0x1400850a8
   14002c9cf:	xor    rax,rsp
   14002c9d2:	mov    QWORD PTR [rsp+0x40],rax
   14002c9d7:	mov    rax,QWORD PTR [rcx+0x108]
   14002c9de:	movsxd rbx,edx
   14002c9e1:	mov    rsi,r8
   14002c9e4:	sub    rax,QWORD PTR [rcx+0x100]
   14002c9eb:	mov    rdi,rcx
   14002c9ee:	sar    rax,0x2
   14002c9f2:	cmp    ebx,eax
   14002c9f4:	jge    0x14002ca3b
   14002c9f6:	test   edx,edx
   14002c9f8:	jne    0x14002ca0d
   14002c9fa:	mov    rdx,QWORD PTR [rcx+0x120]
   14002ca01:	mov    rcx,r8
   14002ca04:	call   0x14002e870
   14002ca09:	mov    al,0x1
   14002ca0b:	jmp    0x14002ca3d
   14002ca0d:	lea    rdx,[rip+0x440cc]        # 0x140070ae0
   14002ca14:	lea    rcx,[rsp+0x20]
   14002ca19:	mov    r8d,ebx
   14002ca1c:	call   0x14002f470
   14002ca21:	mov    rdx,rbx
   14002ca24:	mov    rcx,rsi
   14002ca27:	shl    rdx,0x5
   14002ca2b:	add    rdx,QWORD PTR [rdi+0x120]
   14002ca32:	call   0x14002e870
   14002ca37:	mov    al,0x1
   14002ca39:	jmp    0x14002ca3d
   14002ca3b:	xor    al,al
   14002ca3d:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ca42:	xor    rcx,rsp
   14002ca45:	call   0x140032f00
   14002ca4a:	add    rsp,0x50
   14002ca4e:	pop    rdi
   14002ca4f:	pop    rsi
   14002ca50:	pop    rbx
   14002ca51:	ret    
   14002ca52:	int3   
   14002ca53:	int3   
   14002ca54:	int3   
   14002ca55:	int3   
   14002ca56:	int3   
   14002ca57:	int3   
   14002ca58:	int3   
   14002ca59:	int3   
   14002ca5a:	int3   
   14002ca5b:	int3   
   14002ca5c:	int3   
   14002ca5d:	int3   
   14002ca5e:	int3   
   14002ca5f:	int3   
   14002ca60:	mov    rax,rsp
   14002ca63:	push   rsi
   14002ca64:	push   rdi
   14002ca65:	push   r12
   14002ca67:	push   r13
   14002ca69:	push   r14
   14002ca6b:	sub    rsp,0x50
   14002ca6f:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002ca78:	mov    QWORD PTR [rax+0x18],rbx
   14002ca7c:	mov    QWORD PTR [rax+0x20],rbp
   14002ca80:	movaps XMMWORD PTR [rax-0x38],xmm6
   14002ca84:	mov    rax,QWORD PTR [rip+0x5861d]        # 0x1400850a8
   14002ca8b:	xor    rax,rsp
   14002ca8e:	mov    QWORD PTR [rsp+0x38],rax
   14002ca93:	mov    r12,rdx
   14002ca96:	mov    r13,rcx
   14002ca99:	xor    r8d,r8d
   14002ca9c:	mov    ecx,0x1
   14002caa1:	movzx  eax,BYTE PTR [r13+0xb8]
   14002caa9:	cmp    BYTE PTR [rdx+0xb8],al
   14002caaf:	cmova  r8d,ecx
   14002cab3:	xor    esi,esi
   14002cab5:	xor    ebp,ebp
   14002cab7:	movsxd r14,r8d
   14002caba:	mov    rcx,QWORD PTR [rdx+0xc0]
   14002cac1:	mov    rax,QWORD PTR [rdx+0xc8]
   14002cac8:	sub    rax,rcx
   14002cacb:	sar    rax,0x2
   14002cacf:	test   eax,eax
   14002cad1:	jle    0x14002cc8e
   14002cad7:	test   rbp,rbp
   14002cada:	js     0x14002cc6a
   14002cae0:	cmp    esi,eax
   14002cae2:	jge    0x14002cc6a
   14002cae8:	mov    edi,DWORD PTR [rcx+rbp*4]
   14002caeb:	mov    DWORD PTR [rsp+0x20],edi
   14002caef:	mov    rax,QWORD PTR [r12+0xe0]
   14002caf7:	movsd  xmm6,QWORD PTR [rax+rbp*8]
   14002cafc:	movsd  QWORD PTR [rsp+0x28],xmm6
   14002cb02:	or     rcx,0xffffffffffffffff
   14002cb06:	xor    eax,eax
   14002cb08:	xor    r8d,r8d
   14002cb0b:	mov    rdx,QWORD PTR [r13+0xc0]
   14002cb12:	mov    r9,QWORD PTR [r13+0xc8]
   14002cb19:	sub    r9,rdx
   14002cb1c:	sar    r9,0x2
   14002cb20:	cmp    eax,r9d
   14002cb23:	jge    0x14002cb3b
   14002cb25:	cmp    DWORD PTR [rdx],edi
   14002cb27:	cmove  rcx,r8
   14002cb2b:	inc    eax
   14002cb2d:	inc    r8
   14002cb30:	add    rdx,0x4
   14002cb34:	test   rcx,rcx
   14002cb37:	js     0x14002cb20
   14002cb39:	jmp    0x14002cb40
   14002cb3b:	test   rcx,rcx
   14002cb3e:	js     0x14002cb56
   14002cb40:	test   r14,r14
   14002cb43:	je     0x14002cb56
   14002cb45:	mov    rax,QWORD PTR [r13+0xe0]
   14002cb4c:	movsd  QWORD PTR [rax+rcx*8],xmm6
   14002cb51:	jmp    0x14002cc6a
   14002cb56:	mov    rax,QWORD PTR [r13+0xc8]
   14002cb5d:	lea    rcx,[rsp+0x20]
   14002cb62:	cmp    rcx,rax
   14002cb65:	jae    0x14002cbb3
   14002cb67:	mov    rcx,QWORD PTR [r13+0xc0]
   14002cb6e:	lea    rdx,[rsp+0x20]
   14002cb73:	cmp    rcx,rdx
   14002cb76:	ja     0x14002cbb3
   14002cb78:	lea    rdi,[rsp+0x20]
   14002cb7d:	sub    rdi,rcx
   14002cb80:	sar    rdi,0x2
   14002cb84:	cmp    rax,QWORD PTR [r13+0xd0]
   14002cb8b:	jne    0x14002cb99
   14002cb8d:	lea    rcx,[r13+0xc0]
   14002cb94:	call   0x140027600
   14002cb99:	mov    rdx,QWORD PTR [r13+0xc8]
   14002cba0:	test   rdx,rdx
   14002cba3:	je     0x14002cbd6
   14002cba5:	mov    rax,QWORD PTR [r13+0xc0]
   14002cbac:	mov    ecx,DWORD PTR [rax+rdi*4]
   14002cbaf:	mov    DWORD PTR [rdx],ecx
   14002cbb1:	jmp    0x14002cbd6
   14002cbb3:	cmp    rax,QWORD PTR [r13+0xd0]
   14002cbba:	jne    0x14002cbc8
   14002cbbc:	lea    rcx,[r13+0xc0]
   14002cbc3:	call   0x140027600
   14002cbc8:	mov    rax,QWORD PTR [r13+0xc8]
   14002cbcf:	test   rax,rax
   14002cbd2:	je     0x14002cbd6
   14002cbd4:	mov    DWORD PTR [rax],edi
   14002cbd6:	add    QWORD PTR [r13+0xc8],0x4
   14002cbde:	mov    rax,QWORD PTR [r13+0xe8]
   14002cbe5:	lea    rcx,[rsp+0x28]
   14002cbea:	cmp    rcx,rax
   14002cbed:	jae    0x14002cc3d
   14002cbef:	mov    rcx,QWORD PTR [r13+0xe0]
   14002cbf6:	lea    rdx,[rsp+0x28]
   14002cbfb:	cmp    rcx,rdx
   14002cbfe:	ja     0x14002cc3d
   14002cc00:	lea    rdi,[rsp+0x28]
   14002cc05:	sub    rdi,rcx
   14002cc08:	sar    rdi,0x3
   14002cc0c:	cmp    rax,QWORD PTR [r13+0xf0]
   14002cc13:	jne    0x14002cc21
   14002cc15:	lea    rcx,[r13+0xe0]
   14002cc1c:	call   0x140027700
   14002cc21:	mov    rdx,QWORD PTR [r13+0xe8]
   14002cc28:	test   rdx,rdx
   14002cc2b:	je     0x14002cc62
   14002cc2d:	mov    rax,QWORD PTR [r13+0xe0]
   14002cc34:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002cc38:	mov    QWORD PTR [rdx],rcx
   14002cc3b:	jmp    0x14002cc62
   14002cc3d:	cmp    rax,QWORD PTR [r13+0xf0]
   14002cc44:	jne    0x14002cc52
   14002cc46:	lea    rcx,[r13+0xe0]
   14002cc4d:	call   0x140027700
   14002cc52:	mov    rax,QWORD PTR [r13+0xe8]
   14002cc59:	test   rax,rax
   14002cc5c:	je     0x14002cc62
   14002cc5e:	movsd  QWORD PTR [rax],xmm6
   14002cc62:	add    QWORD PTR [r13+0xe8],0x8
   14002cc6a:	inc    esi
   14002cc6c:	inc    rbp
   14002cc6f:	mov    rcx,QWORD PTR [r12+0xc0]
   14002cc77:	mov    rax,QWORD PTR [r12+0xc8]
   14002cc7f:	sub    rax,rcx
   14002cc82:	sar    rax,0x2
   14002cc86:	cmp    esi,eax
   14002cc88:	jl     0x14002cad7
   14002cc8e:	mov    rcx,QWORD PTR [rsp+0x38]
   14002cc93:	xor    rcx,rsp
   14002cc96:	call   0x140032f00
   14002cc9b:	lea    r11,[rsp+0x50]
   14002cca0:	mov    rbx,QWORD PTR [r11+0x40]
   14002cca4:	mov    rbp,QWORD PTR [r11+0x48]
   14002cca8:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14002ccad:	mov    rsp,r11
   14002ccb0:	pop    r14
   14002ccb2:	pop    r13
   14002ccb4:	pop    r12
   14002ccb6:	pop    rdi
   14002ccb7:	pop    rsi
   14002ccb8:	ret    
   14002ccb9:	int3   
   14002ccba:	int3   
   14002ccbb:	int3   
   14002ccbc:	int3   
   14002ccbd:	int3   
   14002ccbe:	int3   
   14002ccbf:	int3   
   14002ccc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ccc5:	push   rdi
   14002ccc6:	sub    rsp,0x20
   14002ccca:	xor    edi,edi
   14002cccc:	lea    rax,[rip+0x43eb5]        # 0x140070b88
   14002ccd3:	mov    rbx,rcx
   14002ccd6:	mov    QWORD PTR [rcx],rax
   14002ccd9:	mov    QWORD PTR [rcx+0x20],0xf
   14002cce1:	mov    QWORD PTR [rcx+0x18],rdi
   14002cce5:	mov    BYTE PTR [rcx+0x8],dil
   14002cce9:	mov    QWORD PTR [rcx+0x40],rdi
   14002cced:	mov    QWORD PTR [rcx+0x48],rdi
   14002ccf1:	mov    QWORD PTR [rcx+0x50],rdi
   14002ccf5:	mov    QWORD PTR [rcx+0x60],rdi
   14002ccf9:	mov    QWORD PTR [rcx+0x68],rdi
   14002ccfd:	mov    QWORD PTR [rcx+0x70],rdi
   14002cd01:	mov    QWORD PTR [rcx+0x98],0xf
   14002cd0c:	mov    QWORD PTR [rcx+0x90],rdi
   14002cd13:	mov    BYTE PTR [rcx+0x80],dil
   14002cd1a:	mov    QWORD PTR [rcx+0xa8],rdi
   14002cd21:	mov    QWORD PTR [rcx+0xb0],rdi
   14002cd28:	mov    QWORD PTR [rcx+0xb8],rdi
   14002cd2f:	mov    QWORD PTR [rcx+0xe0],0xf
   14002cd3a:	mov    QWORD PTR [rcx+0xd8],rdi
   14002cd41:	mov    BYTE PTR [rcx+0xc8],dil
   14002cd48:	lea    rcx,[rip+0x43da1]        # 0x140070af0
   14002cd4f:	call   QWORD PTR [rip+0x3b903]        # 0x140068658
   14002cd55:	lea    rcx,[rip+0x43dac]        # 0x140070b08
   14002cd5c:	mov    DWORD PTR [rip+0x5d732],eax        # 0x14008a494
   14002cd62:	call   QWORD PTR [rip+0x3b8f0]        # 0x140068658
   14002cd68:	lea    rcx,[rip+0x43db9]        # 0x140070b28
   14002cd6f:	mov    DWORD PTR [rip+0x5d71b],eax        # 0x14008a490
   14002cd75:	call   QWORD PTR [rip+0x3b8dd]        # 0x140068658
   14002cd7b:	mov    QWORD PTR [rbx+0x30],rdi
   14002cd7f:	mov    DWORD PTR [rip+0x5d713],eax        # 0x14008a498
   14002cd85:	mov    rax,rbx
   14002cd88:	mov    WORD PTR [rbx+0x38],di
   14002cd8c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cd91:	add    rsp,0x20
   14002cd95:	pop    rdi
   14002cd96:	ret    
   14002cd97:	int3   
   14002cd98:	int3   
   14002cd99:	int3   
   14002cd9a:	int3   
   14002cd9b:	int3   
   14002cd9c:	int3   
   14002cd9d:	int3   
   14002cd9e:	int3   
   14002cd9f:	int3   
   14002cda0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cda5:	push   rdi
   14002cda6:	sub    rsp,0x20
   14002cdaa:	mov    ebx,edx
   14002cdac:	mov    rdi,rcx
   14002cdaf:	call   0x14002cdd0
   14002cdb4:	test   bl,0x1
   14002cdb7:	je     0x14002cdc1
   14002cdb9:	mov    rcx,rdi
   14002cdbc:	call   0x1400330c0
   14002cdc1:	mov    rax,rdi
   14002cdc4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cdc9:	add    rsp,0x20
   14002cdcd:	pop    rdi
   14002cdce:	ret    
   14002cdcf:	int3   
   14002cdd0:	mov    QWORD PTR [rsp+0x8],rcx
   14002cdd5:	push   rdi
   14002cdd6:	sub    rsp,0x30
   14002cdda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cde3:	mov    QWORD PTR [rsp+0x48],rbx
   14002cde8:	mov    rbx,rcx
   14002cdeb:	lea    rax,[rip+0x43d96]        # 0x140070b88
   14002cdf2:	mov    QWORD PTR [rcx],rax
   14002cdf5:	call   0x14002d9f0
   14002cdfa:	nop
   14002cdfb:	cmp    QWORD PTR [rbx+0xe0],0x10
   14002ce03:	jb     0x14002ce11
   14002ce05:	mov    rcx,QWORD PTR [rbx+0xc8]
   14002ce0c:	call   0x1400330c0
   14002ce11:	mov    QWORD PTR [rbx+0xe0],0xf
   14002ce1c:	xor    edi,edi
   14002ce1e:	mov    QWORD PTR [rbx+0xd8],rdi
   14002ce25:	mov    BYTE PTR [rbx+0xc8],dil
   14002ce2c:	mov    rcx,QWORD PTR [rbx+0xa8]
   14002ce33:	test   rcx,rcx
   14002ce36:	je     0x14002ce3d
   14002ce38:	call   0x1400330c0
   14002ce3d:	mov    QWORD PTR [rbx+0xa8],rdi
   14002ce44:	mov    QWORD PTR [rbx+0xb0],rdi
   14002ce4b:	mov    QWORD PTR [rbx+0xb8],rdi
   14002ce52:	cmp    QWORD PTR [rbx+0x98],0x10
   14002ce5a:	jb     0x14002ce68
   14002ce5c:	mov    rcx,QWORD PTR [rbx+0x80]
   14002ce63:	call   0x1400330c0
   14002ce68:	mov    QWORD PTR [rbx+0x98],0xf
   14002ce73:	mov    QWORD PTR [rbx+0x90],rdi
   14002ce7a:	mov    BYTE PTR [rbx+0x80],0x0
   14002ce81:	mov    rcx,QWORD PTR [rbx+0x60]
   14002ce85:	test   rcx,rcx
   14002ce88:	je     0x14002ce8f
   14002ce8a:	call   0x1400330c0
   14002ce8f:	mov    QWORD PTR [rbx+0x60],rdi
   14002ce93:	mov    QWORD PTR [rbx+0x68],rdi
   14002ce97:	mov    QWORD PTR [rbx+0x70],rdi
   14002ce9b:	lea    rcx,[rbx+0x40]
   14002ce9f:	call   0x140008c90
   14002cea4:	nop
   14002cea5:	cmp    QWORD PTR [rbx+0x20],0x10
   14002ceaa:	jb     0x14002ceb5
   14002ceac:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ceb0:	call   0x1400330c0
   14002ceb5:	mov    QWORD PTR [rbx+0x20],0xf
   14002cebd:	mov    QWORD PTR [rbx+0x18],rdi
   14002cec1:	mov    BYTE PTR [rbx+0x8],0x0
   14002cec5:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ceca:	add    rsp,0x30
   14002cece:	pop    rdi
   14002cecf:	ret    
   14002ced0:	mov    QWORD PTR [rsp+0x8],rcx
   14002ced5:	push   rbp
   14002ced6:	push   rsi
   14002ced7:	push   rdi
   14002ced8:	push   r12
   14002ceda:	push   r13
   14002cedc:	push   r14
   14002cede:	push   r15
   14002cee0:	sub    rsp,0x50
   14002cee4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ceed:	mov    QWORD PTR [rsp+0xa8],rbx
   14002cef5:	mov    rdi,rdx
   14002cef8:	mov    r12,rcx
   14002cefb:	mov    esi,r8d
   14002cefe:	add    rsi,rdx
   14002cf01:	xor    r10d,r10d
   14002cf04:	mov    edx,r10d
   14002cf07:	mov    r8d,r10d
   14002cf0a:	lea    rax,[rdi+0x4]
   14002cf0e:	cmp    rax,rsi
   14002cf11:	ja     0x14002cf18
   14002cf13:	mov    edx,DWORD PTR [rdi]
   14002cf15:	mov    rdi,rax
   14002cf18:	lea    rax,[rdi+0x4]
   14002cf1c:	cmp    rax,rsi
   14002cf1f:	ja     0x14002cf27
   14002cf21:	mov    r8d,DWORD PTR [rdi]
   14002cf24:	mov    rdi,rax
   14002cf27:	cmp    edx,0x584d5452
   14002cf2d:	jne    0x14002d19a
   14002cf33:	mov    eax,esi
   14002cf35:	sub    eax,edi
   14002cf37:	cmp    r8d,eax
   14002cf3a:	ja     0x14002d19a
   14002cf40:	test   r9d,r9d
   14002cf43:	je     0x14002cf4d
   14002cf45:	call   0x14002d9f0
   14002cf4a:	xor    r10d,r10d
   14002cf4d:	mov    bpl,0x1
   14002cf50:	cmp    rdi,rsi
   14002cf53:	jae    0x14002d11e
   14002cf59:	nop    DWORD PTR [rax+0x0]
   14002cf60:	lea    rax,[rdi+0x1]
   14002cf64:	cmp    rax,rsi
   14002cf67:	ja     0x14002d0e6
   14002cf6d:	movzx  edx,BYTE PTR [rdi]
   14002cf70:	mov    BYTE PTR [rsp+0xa0],dl
   14002cf77:	mov    rdi,rax
   14002cf7a:	inc    rax
   14002cf7d:	cmp    rax,rsi
   14002cf80:	ja     0x14002d0e6
   14002cf86:	movzx  r15d,BYTE PTR [rdi]
   14002cf8a:	mov    rdi,rax
   14002cf8d:	add    rax,0x2
   14002cf91:	cmp    rax,rsi
   14002cf94:	ja     0x14002d0e6
   14002cf9a:	movzx  r14d,WORD PTR [rdi]
   14002cf9e:	mov    rdi,rax
   14002cfa1:	lea    rcx,[rax+0x4]
   14002cfa5:	cmp    rcx,rsi
   14002cfa8:	ja     0x14002d0e6
   14002cfae:	mov    eax,DWORD PTR [rax]
   14002cfb0:	mov    rdi,rcx
   14002cfb3:	test   eax,eax
   14002cfb5:	je     0x14002d088
   14002cfbb:	cmp    eax,0x3
   14002cfbe:	jne    0x14002d0e9
   14002cfc4:	mov    rcx,r10
   14002cfc7:	mov    QWORD PTR [rsp+0x28],rcx
   14002cfcc:	mov    QWORD PTR [rsp+0x30],r10
   14002cfd1:	mov    QWORD PTR [rsp+0x38],r10
   14002cfd6:	lea    rdx,[rdi+0x2]
   14002cfda:	cmp    rdx,rsi
   14002cfdd:	ja     0x14002d079
   14002cfe3:	movzx  eax,WORD PTR [rdi]
   14002cfe6:	mov    rdi,rdx
   14002cfe9:	mov    r12d,eax
   14002cfec:	mov    ebx,eax
   14002cfee:	lea    r13,[rax+rdx*1]
   14002cff2:	cmp    r13,rsi
   14002cff5:	ja     0x14002d071
   14002cff7:	mov    edx,eax
   14002cff9:	lea    rcx,[rsp+0x28]
   14002cffe:	call   0x140027510
   14002d003:	test   r12d,r12d
   14002d006:	je     0x14002d01b
   14002d008:	mov    r8d,ebx
   14002d00b:	mov    rdx,rdi
   14002d00e:	mov    rcx,QWORD PTR [rsp+0x28]
   14002d013:	call   0x140033260
   14002d018:	mov    rdi,r13
   14002d01b:	movzx  r8d,r15b
   14002d01f:	movzx  edx,BYTE PTR [rsp+0xa0]
   14002d027:	mov    r12,QWORD PTR [rsp+0x90]
   14002d02f:	mov    rcx,r12
   14002d032:	call   0x14002db40
   14002d037:	mov    rbx,rax
   14002d03a:	movzx  eax,r14w
   14002d03e:	mov    DWORD PTR [rsp+0xa0],eax
   14002d045:	lea    rcx,[rbx+0x100]
   14002d04c:	lea    rdx,[rsp+0xa0]
   14002d054:	call   0x14002ba70
   14002d059:	lea    rcx,[rbx+0x120]
   14002d060:	lea    rdx,[rsp+0x28]
   14002d065:	call   0x14002e7d0
   14002d06a:	mov    rcx,QWORD PTR [rsp+0x28]
   14002d06f:	jmp    0x14002d07c
   14002d071:	mov    r12,QWORD PTR [rsp+0x90]
   14002d079:	xor    bpl,bpl
   14002d07c:	test   rcx,rcx
   14002d07f:	je     0x14002d0e9
   14002d081:	call   0x1400330c0
   14002d086:	jmp    0x14002d0e9
   14002d088:	add    rcx,0x8
   14002d08c:	cmp    rcx,rsi
   14002d08f:	ja     0x14002d0e6
   14002d091:	mov    rax,QWORD PTR [rdi]
   14002d094:	mov    QWORD PTR [rsp+0x98],rax
   14002d09c:	mov    rdi,rcx
   14002d09f:	movzx  r8d,r15b
   14002d0a3:	movzx  edx,dl
   14002d0a6:	mov    rcx,r12
   14002d0a9:	call   0x14002db40
   14002d0ae:	mov    rbx,rax
   14002d0b1:	movzx  eax,r14w
   14002d0b5:	mov    DWORD PTR [rsp+0xa0],eax
   14002d0bc:	lea    rcx,[rbx+0xc0]
   14002d0c3:	lea    rdx,[rsp+0xa0]
   14002d0cb:	call   0x14002ba70
   14002d0d0:	lea    rcx,[rbx+0xe0]
   14002d0d7:	lea    rdx,[rsp+0x98]
   14002d0df:	call   0x140027480
   14002d0e4:	jmp    0x14002d0e9
   14002d0e6:	xor    bpl,bpl
   14002d0e9:	cmp    rdi,rsi
   14002d0ec:	mov    r10d,0x0
   14002d0f2:	jb     0x14002cf60
   14002d0f8:	test   bpl,bpl
   14002d0fb:	jne    0x14002d11e
   14002d0fd:	lea    rcx,[r12+0xc8]
   14002d105:	lea    r8d,[r10+0x11]
   14002d109:	lea    rdx,[rip+0x43a38]        # 0x140070b48
   14002d110:	call   0x140002ba0
   14002d115:	movzx  eax,bpl
   14002d119:	jmp    0x14002d1b5
   14002d11e:	mov    cl,0x1
   14002d120:	mov    rax,QWORD PTR [r12+0xa8]
   14002d128:	mov    r8,QWORD PTR [r12+0xb0]
   14002d130:	cmp    rax,r8
   14002d133:	je     0x14002d17f
   14002d135:	mov    rdx,QWORD PTR [rax]
   14002d138:	test   rdx,rdx
   14002d13b:	je     0x14002d171
   14002d13d:	mov    rcx,QWORD PTR [rdx+0xc8]
   14002d144:	sub    rcx,QWORD PTR [rdx+0xc0]
   14002d14b:	test   rcx,0xfffffffffffffffc
   14002d152:	jne    0x14002d16f
   14002d154:	mov    rcx,QWORD PTR [rdx+0x108]
   14002d15b:	sub    rcx,QWORD PTR [rdx+0x100]
   14002d162:	test   rcx,0xfffffffffffffffc
   14002d169:	jne    0x14002d16f
   14002d16b:	mov    cl,0x1
   14002d16d:	jmp    0x14002d171
   14002d16f:	xor    cl,cl
   14002d171:	add    rax,0x8
   14002d175:	test   cl,cl
   14002d177:	jne    0x14002d130
   14002d179:	movzx  eax,bpl
   14002d17d:	jmp    0x14002d1b5
   14002d17f:	test   cl,cl
   14002d181:	je     0x14002d179
   14002d183:	lea    rcx,[r12+0xc8]
   14002d18b:	mov    r8d,0x18
   14002d191:	lea    rdx,[rip+0x439c8]        # 0x140070b60
   14002d198:	jmp    0x14002d1ae
   14002d19a:	add    rcx,0xc8
   14002d1a1:	mov    r8d,0x11
   14002d1a7:	lea    rdx,[rip+0x4399a]        # 0x140070b48
   14002d1ae:	call   0x140002ba0
   14002d1b3:	xor    al,al
   14002d1b5:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002d1bd:	add    rsp,0x50
   14002d1c1:	pop    r15
   14002d1c3:	pop    r14
   14002d1c5:	pop    r13
   14002d1c7:	pop    r12
   14002d1c9:	pop    rdi
   14002d1ca:	pop    rsi
   14002d1cb:	pop    rbp
   14002d1cc:	ret    
   14002d1cd:	int3   
   14002d1ce:	int3   
   14002d1cf:	int3   
   14002d1d0:	mov    rax,rsp
   14002d1d3:	push   rbp
   14002d1d4:	push   rsi
   14002d1d5:	push   rdi
   14002d1d6:	push   r12
   14002d1d8:	push   r13
   14002d1da:	push   r14
   14002d1dc:	push   r15
   14002d1de:	lea    rbp,[rax-0x5f]
   14002d1e2:	sub    rsp,0xc0
   14002d1e9:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   14002d1f1:	mov    QWORD PTR [rax+0x18],rbx
   14002d1f5:	movaps XMMWORD PTR [rax-0x48],xmm6
   14002d1f9:	movaps XMMWORD PTR [rax-0x58],xmm7
   14002d1fd:	mov    rax,QWORD PTR [rip+0x57ea4]        # 0x1400850a8
   14002d204:	xor    rax,rsp
   14002d207:	mov    QWORD PTR [rbp-0x9],rax
   14002d20b:	mov    ebx,r8d
   14002d20e:	mov    rdi,rdx
   14002d211:	mov    r10,rcx
   14002d214:	mov    QWORD PTR [rbp-0x61],rcx
   14002d218:	mov    r14b,0x1
   14002d21b:	test   r9d,r9d
   14002d21e:	je     0x14002d229
   14002d220:	call   0x14002d9f0
   14002d225:	mov    r10,QWORD PTR [rbp-0x61]
   14002d229:	lea    r15,[rdi+rbx*1]
   14002d22d:	xor    r11d,r11d
   14002d230:	mov    ecx,r11d
   14002d233:	mov    edx,r11d
   14002d236:	lea    rax,[rdi+0x4]
   14002d23a:	cmp    rax,r15
   14002d23d:	ja     0x14002d244
   14002d23f:	mov    ecx,DWORD PTR [rdi]
   14002d241:	mov    rdi,rax
   14002d244:	lea    rax,[rdi+0x4]
   14002d248:	cmp    rax,r15
   14002d24b:	ja     0x14002d252
   14002d24d:	mov    edx,DWORD PTR [rdi]
   14002d24f:	mov    rdi,rax
   14002d252:	cmp    ecx,0x4d415042
   14002d258:	jne    0x14002d9b8
   14002d25e:	mov    eax,r15d
   14002d261:	sub    eax,edi
   14002d263:	cmp    edx,eax
   14002d265:	ja     0x14002d9b8
   14002d26b:	xorpd  xmm7,xmm7
   14002d26f:	nop
   14002d270:	lea    rax,[rdi+0x4]
   14002d274:	cmp    rax,r15
   14002d277:	ja     0x14002d99a
   14002d27d:	mov    ecx,DWORD PTR [rdi]
   14002d27f:	lea    rdi,[rax+0x1]
   14002d283:	cmp    rdi,r15
   14002d286:	ja     0x14002d99a
   14002d28c:	movzx  r9d,BYTE PTR [rax]
   14002d290:	mov    QWORD PTR [rbp-0x71],rdi
   14002d294:	lea    r8,[rdi+rcx*1]
   14002d298:	lea    rax,[r8-0x1]
   14002d29c:	cmp    rax,r15
   14002d29f:	ja     0x14002d99a
   14002d2a5:	mov    edx,r11d
   14002d2a8:	movzx  ecx,r9b
   14002d2ac:	dec    ecx
   14002d2ae:	je     0x14002d8f0
   14002d2b4:	dec    ecx
   14002d2b6:	je     0x14002d7cf
   14002d2bc:	dec    ecx
   14002d2be:	je     0x14002d797
   14002d2c4:	dec    ecx
   14002d2c6:	je     0x14002d2cd
   14002d2c8:	mov    rdi,r8
   14002d2cb:	jmp    0x14002d270
   14002d2cd:	movzx  ecx,r11w
   14002d2d1:	mov    WORD PTR [rbp-0x69],cx
   14002d2d5:	test   r14b,r14b
   14002d2d8:	je     0x14002d2f2
   14002d2da:	lea    rax,[rdi+0x2]
   14002d2de:	cmp    rax,r15
   14002d2e1:	ja     0x14002d2f2
   14002d2e3:	movzx  ecx,WORD PTR [rdi]
   14002d2e6:	mov    WORD PTR [rbp-0x69],cx
   14002d2ea:	mov    rdi,rax
   14002d2ed:	mov    r14b,0x1
   14002d2f0:	jmp    0x14002d2f5
   14002d2f2:	xor    r14b,r14b
   14002d2f5:	mov    WORD PTR [rbp-0x79],r11w
   14002d2fa:	cmp    r11w,cx
   14002d2fe:	jae    0x14002d270
   14002d304:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002d310:	xor    r12b,r12b
   14002d313:	xor    r13b,r13b
   14002d316:	movzx  esi,r11w
   14002d31a:	test   r14b,r14b
   14002d31d:	je     0x14002d32f
   14002d31f:	lea    rax,[rdi+0x2]
   14002d323:	cmp    rax,r15
   14002d326:	ja     0x14002d32f
   14002d328:	mov    rdi,rax
   14002d32b:	mov    bl,0x1
   14002d32d:	jmp    0x14002d331
   14002d32f:	xor    bl,bl
   14002d331:	mov    ecx,0x140
   14002d336:	call   0x1400331a0
   14002d33b:	test   rax,rax
   14002d33e:	je     0x14002d34d
   14002d340:	mov    rcx,rax
   14002d343:	call   0x14002c700
   14002d348:	mov    r14,rax
   14002d34b:	jmp    0x14002d350
   14002d34d:	xor    r14d,r14d
   14002d350:	mov    QWORD PTR [rbp-0x51],r14
   14002d354:	mov    QWORD PTR [rbp-0x49],r14
   14002d358:	test   bl,bl
   14002d35a:	je     0x14002d421
   14002d360:	lea    rax,[rdi+0x1]
   14002d364:	cmp    rax,r15
   14002d367:	ja     0x14002d421
   14002d36d:	movzx  r12d,BYTE PTR [rdi]
   14002d371:	mov    rdi,rax
   14002d374:	inc    rax
   14002d377:	cmp    rax,r15
   14002d37a:	ja     0x14002d421
   14002d380:	movzx  r13d,BYTE PTR [rdi]
   14002d384:	mov    rdi,rax
   14002d387:	lea    rcx,[rax+0x4]
   14002d38b:	cmp    rcx,r15
   14002d38e:	ja     0x14002d421
   14002d394:	mov    eax,DWORD PTR [rax]
   14002d396:	mov    DWORD PTR [r14+0xb4],eax
   14002d39d:	mov    rdi,rcx
   14002d3a0:	lea    rax,[rcx+0x2]
   14002d3a4:	cmp    rax,r15
   14002d3a7:	ja     0x14002d421
   14002d3a9:	movzx  esi,WORD PTR [rcx]
   14002d3ac:	mov    rdi,rax
   14002d3af:	lea    rcx,[rax+0x1]
   14002d3b3:	cmp    rcx,r15
   14002d3b6:	ja     0x14002d421
   14002d3b8:	movzx  eax,BYTE PTR [rax]
   14002d3bb:	mov    BYTE PTR [r14+0xb8],al
   14002d3c2:	mov    rdi,rcx
   14002d3c5:	lea    rax,[rcx+0x1]
   14002d3c9:	cmp    rax,r15
   14002d3cc:	ja     0x14002d421
   14002d3ce:	mov    rdi,rax
   14002d3d1:	lea    rcx,[rax+0x2]
   14002d3d5:	cmp    rcx,r15
   14002d3d8:	ja     0x14002d421
   14002d3da:	movzx  eax,WORD PTR [rax]
   14002d3dd:	mov    WORD PTR [r14+0xb0],ax
   14002d3e5:	mov    QWORD PTR [rbp-0x71],rcx
   14002d3e9:	lea    r8,[r14+0x8]
   14002d3ed:	mov    rdx,r15
   14002d3f0:	lea    rcx,[rbp-0x71]
   14002d3f4:	call   0x14002c630
   14002d3f9:	test   al,al
   14002d3fb:	je     0x14002d41d
   14002d3fd:	lea    r8,[r14+0x80]
   14002d404:	mov    rdx,r15
   14002d407:	lea    rcx,[rbp-0x71]
   14002d40b:	call   0x14002c630
   14002d410:	test   al,al
   14002d412:	je     0x14002d41d
   14002d414:	mov    r14b,0x1
   14002d417:	mov    rdi,QWORD PTR [rbp-0x71]
   14002d41b:	jmp    0x14002d424
   14002d41d:	mov    rdi,QWORD PTR [rbp-0x71]
   14002d421:	xor    r14b,r14b
   14002d424:	movsx  eax,r12b
   14002d428:	mov    r12,QWORD PTR [rbp-0x51]
   14002d42c:	mov    DWORD PTR [r12+0xa8],eax
   14002d434:	movsx  eax,r13b
   14002d438:	mov    DWORD PTR [r12+0xac],eax
   14002d440:	xor    r8d,r8d
   14002d443:	cmp    r8w,si
   14002d447:	jae    0x14002d6e8
   14002d44d:	movzx  eax,si
   14002d450:	mov    QWORD PTR [rbp-0x41],rax
   14002d454:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002d460:	movzx  r13d,r8w
   14002d464:	xor    cl,cl
   14002d466:	movzx  edx,r8w
   14002d46a:	test   r14b,r14b
   14002d46d:	je     0x14002d4a1
   14002d46f:	lea    rax,[rdi+0x2]
   14002d473:	cmp    rax,r15
   14002d476:	ja     0x14002d4a1
   14002d478:	movzx  r13d,WORD PTR [rdi]
   14002d47c:	mov    rdi,rax
   14002d47f:	inc    rax
   14002d482:	cmp    rax,r15
   14002d485:	ja     0x14002d4a1
   14002d487:	movzx  ecx,BYTE PTR [rdi]
   14002d48a:	mov    rdi,rax
   14002d48d:	add    rax,0x2
   14002d491:	cmp    rax,r15
   14002d494:	ja     0x14002d4a1
   14002d496:	movzx  edx,WORD PTR [rdi]
   14002d499:	mov    rdi,rax
   14002d49c:	mov    r14b,0x1
   14002d49f:	jmp    0x14002d4a4
   14002d4a1:	xor    r14b,r14b
   14002d4a4:	test   cl,cl
   14002d4a6:	je     0x14002d5a5
   14002d4ac:	cmp    cl,0x3
   14002d4af:	je     0x14002d4bc
   14002d4b1:	movzx  eax,dx
   14002d4b4:	add    rdi,rax
   14002d4b7:	jmp    0x14002d6d8
   14002d4bc:	mov    rcx,r8
   14002d4bf:	mov    QWORD PTR [rbp-0x31],rcx
   14002d4c3:	mov    QWORD PTR [rbp-0x29],r8
   14002d4c7:	mov    QWORD PTR [rbp-0x21],r8
   14002d4cb:	movzx  esi,dx
   14002d4ce:	mov    ebx,esi
   14002d4d0:	lea    r12,[rsi+rdi*1]
   14002d4d4:	cmp    r12,r15
   14002d4d7:	ja     0x14002d58b
   14002d4dd:	mov    edx,ebx
   14002d4df:	lea    rcx,[rbp-0x31]
   14002d4e3:	call   0x140027510
   14002d4e8:	test   esi,esi
   14002d4ea:	je     0x14002d4fe
   14002d4ec:	mov    r8d,ebx
   14002d4ef:	mov    rdx,rdi
   14002d4f2:	mov    rcx,QWORD PTR [rbp-0x31]
   14002d4f6:	call   0x140033260
   14002d4fb:	mov    rdi,r12
   14002d4fe:	movzx  esi,r13w
   14002d502:	mov    DWORD PTR [rbp-0x71],esi
   14002d505:	mov    r12,QWORD PTR [rbp-0x51]
   14002d509:	lea    rbx,[r12+0x100]
   14002d511:	mov    rax,QWORD PTR [rbx+0x8]
   14002d515:	lea    rcx,[rbp-0x71]
   14002d519:	cmp    rcx,rax
   14002d51c:	jae    0x14002d556
   14002d51e:	mov    rcx,QWORD PTR [rbx]
   14002d521:	lea    rdx,[rbp-0x71]
   14002d525:	cmp    rcx,rdx
   14002d528:	ja     0x14002d556
   14002d52a:	lea    rsi,[rbp-0x71]
   14002d52e:	sub    rsi,rcx
   14002d531:	sar    rsi,0x2
   14002d535:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d539:	jne    0x14002d543
   14002d53b:	mov    rcx,rbx
   14002d53e:	call   0x140027600
   14002d543:	mov    rax,QWORD PTR [rbx]
   14002d546:	mov    rcx,QWORD PTR [rbx+0x8]
   14002d54a:	test   rcx,rcx
   14002d54d:	je     0x14002d56f
   14002d54f:	mov    eax,DWORD PTR [rax+rsi*4]
   14002d552:	mov    DWORD PTR [rcx],eax
   14002d554:	jmp    0x14002d56f
   14002d556:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d55a:	jne    0x14002d564
   14002d55c:	mov    rcx,rbx
   14002d55f:	call   0x140027600
   14002d564:	mov    rax,QWORD PTR [rbx+0x8]
   14002d568:	test   rax,rax
   14002d56b:	je     0x14002d56f
   14002d56d:	mov    DWORD PTR [rax],esi
   14002d56f:	add    QWORD PTR [rbx+0x8],0x4
   14002d574:	lea    rcx,[r12+0x120]
   14002d57c:	lea    rdx,[rbp-0x31]
   14002d580:	call   0x14002e7d0
   14002d585:	mov    rcx,QWORD PTR [rbp-0x31]
   14002d589:	jmp    0x14002d592
   14002d58b:	xor    r14b,r14b
   14002d58e:	mov    r12,QWORD PTR [rbp-0x51]
   14002d592:	test   rcx,rcx
   14002d595:	je     0x14002d6d8
   14002d59b:	call   0x1400330c0
   14002d5a0:	jmp    0x14002d6d8
   14002d5a5:	movapd xmm6,xmm7
   14002d5a9:	movsd  QWORD PTR [rbp-0x59],xmm7
   14002d5ae:	test   r14b,r14b
   14002d5b1:	je     0x14002d5d0
   14002d5b3:	lea    rcx,[rdi+0x8]
   14002d5b7:	cmp    rcx,r15
   14002d5ba:	ja     0x14002d5d0
   14002d5bc:	mov    rax,QWORD PTR [rdi]
   14002d5bf:	mov    QWORD PTR [rbp-0x59],rax
   14002d5c3:	mov    rdi,rcx
   14002d5c6:	mov    r14b,0x1
   14002d5c9:	movsd  xmm6,QWORD PTR [rbp-0x59]
   14002d5ce:	jmp    0x14002d5d3
   14002d5d0:	xor    r14b,r14b
   14002d5d3:	movzx  esi,r13w
   14002d5d7:	mov    DWORD PTR [rbp-0x71],esi
   14002d5da:	mov    rax,QWORD PTR [r12+0xc8]
   14002d5e2:	lea    rcx,[rbp-0x71]
   14002d5e6:	cmp    rcx,rax
   14002d5e9:	jae    0x14002d63a
   14002d5eb:	mov    rcx,QWORD PTR [r12+0xc0]
   14002d5f3:	lea    rdx,[rbp-0x71]
   14002d5f7:	cmp    rcx,rdx
   14002d5fa:	ja     0x14002d63a
   14002d5fc:	lea    rsi,[rbp-0x71]
   14002d600:	sub    rsi,rcx
   14002d603:	sar    rsi,0x2
   14002d607:	cmp    rax,QWORD PTR [r12+0xd0]
   14002d60f:	jne    0x14002d61e
   14002d611:	lea    rcx,[r12+0xc0]
   14002d619:	call   0x140027600
   14002d61e:	mov    rdx,QWORD PTR [r12+0xc8]
   14002d626:	test   rdx,rdx
   14002d629:	je     0x14002d660
   14002d62b:	mov    rax,QWORD PTR [r12+0xc0]
   14002d633:	mov    ecx,DWORD PTR [rax+rsi*4]
   14002d636:	mov    DWORD PTR [rdx],ecx
   14002d638:	jmp    0x14002d660
   14002d63a:	cmp    rax,QWORD PTR [r12+0xd0]
   14002d642:	jne    0x14002d651
   14002d644:	lea    rcx,[r12+0xc0]
   14002d64c:	call   0x140027600
   14002d651:	mov    rax,QWORD PTR [r12+0xc8]
   14002d659:	test   rax,rax
   14002d65c:	je     0x14002d660
   14002d65e:	mov    DWORD PTR [rax],esi
   14002d660:	add    QWORD PTR [r12+0xc8],0x4
   14002d669:	lea    rbx,[r12+0xe0]
   14002d671:	mov    rax,QWORD PTR [rbx+0x8]
   14002d675:	lea    rcx,[rbp-0x59]
   14002d679:	cmp    rcx,rax
   14002d67c:	jae    0x14002d6b8
   14002d67e:	mov    rcx,QWORD PTR [rbx]
   14002d681:	lea    rdx,[rbp-0x59]
   14002d685:	cmp    rcx,rdx
   14002d688:	ja     0x14002d6b8
   14002d68a:	lea    rsi,[rbp-0x59]
   14002d68e:	sub    rsi,rcx
   14002d691:	sar    rsi,0x3
   14002d695:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d699:	jne    0x14002d6a3
   14002d69b:	mov    rcx,rbx
   14002d69e:	call   0x140027700
   14002d6a3:	mov    rdx,QWORD PTR [rbx+0x8]
   14002d6a7:	test   rdx,rdx
   14002d6aa:	je     0x14002d6d3
   14002d6ac:	mov    rax,QWORD PTR [rbx]
   14002d6af:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002d6b3:	mov    QWORD PTR [rdx],rcx
   14002d6b6:	jmp    0x14002d6d3
   14002d6b8:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d6bc:	jne    0x14002d6c6
   14002d6be:	mov    rcx,rbx
   14002d6c1:	call   0x140027700
   14002d6c6:	mov    rax,QWORD PTR [rbx+0x8]
   14002d6ca:	test   rax,rax
   14002d6cd:	je     0x14002d6d3
   14002d6cf:	movsd  QWORD PTR [rax],xmm6
   14002d6d3:	add    QWORD PTR [rbx+0x8],0x8
   14002d6d8:	dec    QWORD PTR [rbp-0x41]
   14002d6dc:	mov    r8d,0x0
   14002d6e2:	jne    0x14002d460
   14002d6e8:	test   r14b,r14b
   14002d6eb:	je     0x14002d765
   14002d6ed:	mov    rbx,QWORD PTR [rbp-0x61]
   14002d6f1:	add    rbx,0xa8
   14002d6f8:	mov    rax,QWORD PTR [rbx+0x8]
   14002d6fc:	lea    rcx,[rbp-0x49]
   14002d700:	cmp    rcx,rax
   14002d703:	jae    0x14002d744
   14002d705:	mov    rcx,QWORD PTR [rbx]
   14002d708:	lea    rdx,[rbp-0x49]
   14002d70c:	cmp    rcx,rdx
   14002d70f:	ja     0x14002d744
   14002d711:	lea    rsi,[rbp-0x49]
   14002d715:	sub    rsi,rcx
   14002d718:	sar    rsi,0x3
   14002d71c:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d720:	jne    0x14002d72a
   14002d722:	mov    rcx,rbx
   14002d725:	call   0x14002edc0
   14002d72a:	mov    rdx,QWORD PTR [rbx+0x8]
   14002d72e:	test   rdx,rdx
   14002d731:	je     0x14002d73d
   14002d733:	mov    rax,QWORD PTR [rbx]
   14002d736:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002d73a:	mov    QWORD PTR [rdx],rcx
   14002d73d:	add    QWORD PTR [rbx+0x8],0x8
   14002d742:	jmp    0x14002d773
   14002d744:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d748:	jne    0x14002d752
   14002d74a:	mov    rcx,rbx
   14002d74d:	call   0x14002edc0
   14002d752:	mov    rax,QWORD PTR [rbx+0x8]
   14002d756:	test   rax,rax
   14002d759:	je     0x14002d75e
   14002d75b:	mov    QWORD PTR [rax],r12
   14002d75e:	add    QWORD PTR [rbx+0x8],0x8
   14002d763:	jmp    0x14002d773
   14002d765:	mov    rax,QWORD PTR [r12]
   14002d769:	mov    edx,0x1
   14002d76e:	mov    rcx,r12
   14002d771:	call   QWORD PTR [rax]
   14002d773:	movzx  eax,WORD PTR [rbp-0x79]
   14002d777:	inc    ax
   14002d77a:	mov    WORD PTR [rbp-0x79],ax
   14002d77e:	cmp    ax,WORD PTR [rbp-0x69]
   14002d782:	mov    r11d,0x0
   14002d788:	jb     0x14002d310
   14002d78e:	mov    r10,QWORD PTR [rbp-0x61]
   14002d792:	jmp    0x14002d270
   14002d797:	test   r14b,r14b
   14002d79a:	je     0x14002d7c3
   14002d79c:	lea    r8,[r10+0x8]
   14002d7a0:	mov    rdx,r15
   14002d7a3:	lea    rcx,[rbp-0x71]
   14002d7a7:	call   0x14002c630
   14002d7ac:	mov    rdi,QWORD PTR [rbp-0x71]
   14002d7b0:	xor    r11d,r11d
   14002d7b3:	test   al,al
   14002d7b5:	je     0x14002d7c3
   14002d7b7:	mov    r14b,0x1
   14002d7ba:	mov    r10,QWORD PTR [rbp-0x61]
   14002d7be:	jmp    0x14002d270
   14002d7c3:	xor    r14b,r14b
   14002d7c6:	mov    r10,QWORD PTR [rbp-0x61]
   14002d7ca:	jmp    0x14002d270
   14002d7cf:	xor    al,al
   14002d7d1:	test   r14b,r14b
   14002d7d4:	je     0x14002d7ea
   14002d7d6:	lea    rcx,[rdi+0x1]
   14002d7da:	cmp    rcx,r15
   14002d7dd:	ja     0x14002d7ea
   14002d7df:	movzx  eax,BYTE PTR [rdi]
   14002d7e2:	mov    rdi,rcx
   14002d7e5:	mov    r14b,0x1
   14002d7e8:	jmp    0x14002d7ed
   14002d7ea:	xor    r14b,r14b
   14002d7ed:	test   al,al
   14002d7ef:	je     0x14002d270
   14002d7f5:	lea    rbx,[r10+0x60]
   14002d7f9:	lea    r13,[r10+0x40]
   14002d7fd:	movzx  r12d,al
   14002d801:	xor    sil,sil
   14002d804:	mov    BYTE PTR [rbp-0x79],sil
   14002d808:	mov    QWORD PTR [rbp-0x19],0xf
   14002d810:	mov    QWORD PTR [rbp-0x21],r11
   14002d814:	mov    BYTE PTR [rbp-0x31],sil
   14002d818:	test   r14b,r14b
   14002d81b:	je     0x14002d84e
   14002d81d:	lea    rax,[rdi+0x1]
   14002d821:	cmp    rax,r15
   14002d824:	ja     0x14002d84e
   14002d826:	movzx  esi,BYTE PTR [rdi]
   14002d829:	mov    BYTE PTR [rbp-0x79],sil
   14002d82d:	mov    QWORD PTR [rbp-0x71],rax
   14002d831:	lea    r8,[rbp-0x31]
   14002d835:	mov    rdx,r15
   14002d838:	lea    rcx,[rbp-0x71]
   14002d83c:	call   0x14002c630
   14002d841:	mov    rdi,QWORD PTR [rbp-0x71]
   14002d845:	test   al,al
   14002d847:	je     0x14002d84e
   14002d849:	mov    r14b,0x1
   14002d84c:	jmp    0x14002d851
   14002d84e:	xor    r14b,r14b
   14002d851:	mov    rax,QWORD PTR [rbx+0x8]
   14002d855:	lea    rcx,[rbp-0x79]
   14002d859:	cmp    rcx,rax
   14002d85c:	jae    0x14002d898
   14002d85e:	mov    rcx,QWORD PTR [rbx]
   14002d861:	lea    rdx,[rbp-0x79]
   14002d865:	cmp    rcx,rdx
   14002d868:	ja     0x14002d898
   14002d86a:	lea    rsi,[rbp-0x79]
   14002d86e:	sub    rsi,rcx
   14002d871:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d875:	jne    0x14002d884
   14002d877:	mov    edx,0x1
   14002d87c:	mov    rcx,rbx
   14002d87f:	call   0x140027800
   14002d884:	mov    rax,QWORD PTR [rbx]
   14002d887:	mov    rcx,QWORD PTR [rbx+0x8]
   14002d88b:	test   rcx,rcx
   14002d88e:	je     0x14002d8b7
   14002d890:	movzx  eax,BYTE PTR [rsi+rax*1]
   14002d894:	mov    BYTE PTR [rcx],al
   14002d896:	jmp    0x14002d8b7
   14002d898:	cmp    rax,QWORD PTR [rbx+0x10]
   14002d89c:	jne    0x14002d8ab
   14002d89e:	mov    edx,0x1
   14002d8a3:	mov    rcx,rbx
   14002d8a6:	call   0x140027800
   14002d8ab:	mov    rax,QWORD PTR [rbx+0x8]
   14002d8af:	test   rax,rax
   14002d8b2:	je     0x14002d8b7
   14002d8b4:	mov    BYTE PTR [rax],sil
   14002d8b7:	inc    QWORD PTR [rbx+0x8]
   14002d8bb:	lea    rdx,[rbp-0x31]
   14002d8bf:	mov    rcx,r13
   14002d8c2:	call   0x140008900
   14002d8c7:	nop
   14002d8c8:	cmp    QWORD PTR [rbp-0x19],0x10
   14002d8cd:	jb     0x14002d8d8
   14002d8cf:	mov    rcx,QWORD PTR [rbp-0x31]
   14002d8d3:	call   0x1400330c0
   14002d8d8:	dec    r12
   14002d8db:	mov    r11d,0x0
   14002d8e1:	jne    0x14002d801
   14002d8e7:	mov    r10,QWORD PTR [rbp-0x61]
   14002d8eb:	jmp    0x14002d270
   14002d8f0:	test   r14b,r14b
   14002d8f3:	je     0x14002d961
   14002d8f5:	lea    rcx,[rdi+0x4]
   14002d8f9:	cmp    rcx,r15
   14002d8fc:	ja     0x14002d961
   14002d8fe:	mov    eax,DWORD PTR [rdi]
   14002d900:	mov    DWORD PTR [r10+0x30],eax
   14002d904:	mov    rdi,rcx
   14002d907:	inc    rcx
   14002d90a:	cmp    rcx,r15
   14002d90d:	ja     0x14002d961
   14002d90f:	movzx  eax,BYTE PTR [rdi]
   14002d912:	mov    BYTE PTR [r10+0x34],al
   14002d916:	mov    rdi,rcx
   14002d919:	inc    rcx
   14002d91c:	cmp    rcx,r15
   14002d91f:	ja     0x14002d961
   14002d921:	movzx  eax,BYTE PTR [rdi]
   14002d924:	mov    BYTE PTR [r10+0x35],al
   14002d928:	mov    rdi,rcx
   14002d92b:	inc    rcx
   14002d92e:	cmp    rcx,r15
   14002d931:	ja     0x14002d961
   14002d933:	movzx  eax,BYTE PTR [rdi]
   14002d936:	mov    BYTE PTR [r10+0x36],al
   14002d93a:	mov    rdi,rcx
   14002d93d:	inc    rcx
   14002d940:	cmp    rcx,r15
   14002d943:	ja     0x14002d961
   14002d945:	movzx  eax,BYTE PTR [rdi]
   14002d948:	mov    BYTE PTR [r10+0x37],al
   14002d94c:	mov    rdi,rcx
   14002d94f:	lea    rax,[rcx+0x4]
   14002d953:	cmp    rax,r15
   14002d956:	ja     0x14002d961
   14002d958:	mov    edx,DWORD PTR [rcx]
   14002d95a:	mov    rdi,rax
   14002d95d:	mov    al,0x1
   14002d95f:	jmp    0x14002d963
   14002d961:	xor    al,al
   14002d963:	mov    BYTE PTR [r10+0x38],dl
   14002d967:	shr    edx,0x8
   14002d96a:	mov    BYTE PTR [r10+0x39],dl
   14002d96e:	test   al,al
   14002d970:	je     0x14002d992
   14002d972:	lea    rax,[rdi+0x4]
   14002d976:	cmp    rax,r15
   14002d979:	ja     0x14002d992
   14002d97b:	mov    rdi,rax
   14002d97e:	add    rax,0x4
   14002d982:	cmp    rax,r15
   14002d985:	ja     0x14002d992
   14002d987:	mov    rdi,rax
   14002d98a:	mov    r14b,0x1
   14002d98d:	jmp    0x14002d270
   14002d992:	xor    r14b,r14b
   14002d995:	jmp    0x14002d270
   14002d99a:	test   r14b,r14b
   14002d99d:	jne    0x14002d9b8
   14002d99f:	lea    rcx,[r10+0xc8]
   14002d9a6:	mov    r8d,0x11
   14002d9ac:	lea    rdx,[rip+0x43195]        # 0x140070b48
   14002d9b3:	call   0x140002ba0
   14002d9b8:	movzx  eax,r14b
   14002d9bc:	mov    rcx,QWORD PTR [rbp-0x9]
   14002d9c0:	xor    rcx,rsp
   14002d9c3:	call   0x140032f00
   14002d9c8:	lea    r11,[rsp+0xc0]
   14002d9d0:	mov    rbx,QWORD PTR [r11+0x50]
   14002d9d4:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14002d9d9:	movaps xmm7,XMMWORD PTR [r11-0x20]
   14002d9de:	mov    rsp,r11
   14002d9e1:	pop    r15
   14002d9e3:	pop    r14
   14002d9e5:	pop    r13
   14002d9e7:	pop    r12
   14002d9e9:	pop    rdi
   14002d9ea:	pop    rsi
   14002d9eb:	pop    rbp
   14002d9ec:	ret    
   14002d9ed:	int3   
   14002d9ee:	int3   
   14002d9ef:	int3   
   14002d9f0:	mov    QWORD PTR [rsp+0x20],rbx
   14002d9f5:	push   rsi
   14002d9f6:	sub    rsp,0x20
   14002d9fa:	mov    rbx,QWORD PTR [rcx+0xa8]
   14002da01:	mov    QWORD PTR [rsp+0x40],r12
   14002da06:	mov    rsi,rcx
   14002da09:	cmp    rbx,QWORD PTR [rcx+0xb0]
   14002da10:	je     0x14002da31
   14002da12:	mov    rcx,QWORD PTR [rbx]
   14002da15:	test   rcx,rcx
   14002da18:	je     0x14002da24
   14002da1a:	mov    rax,QWORD PTR [rcx]
   14002da1d:	mov    edx,0x1
   14002da22:	call   QWORD PTR [rax]
   14002da24:	add    rbx,0x8
   14002da28:	cmp    rbx,QWORD PTR [rsi+0xb0]
   14002da2f:	jne    0x14002da12
   14002da31:	mov    rdx,QWORD PTR [rsi+0xb0]
   14002da38:	mov    rbx,QWORD PTR [rsi+0xa8]
   14002da3f:	mov    QWORD PTR [rsp+0x38],rdi
   14002da44:	cmp    rbx,rdx
   14002da47:	je     0x14002da71
   14002da49:	mov    rax,rdx
   14002da4c:	mov    rcx,rbx
   14002da4f:	sub    rax,rdx
   14002da52:	sar    rax,0x3
   14002da56:	lea    rdi,[rax*8+0x0]
   14002da5e:	mov    r8,rdi
   14002da61:	call   0x140033260
   14002da66:	lea    r11,[rdi+rbx*1]
   14002da6a:	mov    QWORD PTR [rsi+0xb0],r11
   14002da71:	xor    r12d,r12d
   14002da74:	mov    QWORD PTR [rsi+0x30],r12
   14002da78:	mov    WORD PTR [rsi+0x38],r12w
   14002da7d:	mov    rcx,QWORD PTR [rsi+0x48]
   14002da81:	mov    r8,QWORD PTR [rsi+0x40]
   14002da85:	cmp    r8,rcx
   14002da88:	je     0x14002dad6
   14002da8a:	mov    rdx,rcx
   14002da8d:	mov    QWORD PTR [rsp+0x30],rbp
   14002da92:	call   0x14002fc30
   14002da97:	mov    rdi,QWORD PTR [rsi+0x48]
   14002da9b:	mov    rbp,rax
   14002da9e:	mov    rbx,rax
   14002daa1:	cmp    rax,rdi
   14002daa4:	je     0x14002dacd
   14002daa6:	cmp    QWORD PTR [rbx+0x18],0x10
   14002daab:	jb     0x14002dab5
   14002daad:	mov    rcx,QWORD PTR [rbx]
   14002dab0:	call   0x1400330c0
   14002dab5:	mov    QWORD PTR [rbx+0x18],0xf
   14002dabd:	mov    QWORD PTR [rbx+0x10],r12
   14002dac1:	mov    BYTE PTR [rbx],r12b
   14002dac4:	add    rbx,0x28
   14002dac8:	cmp    rbx,rdi
   14002dacb:	jne    0x14002daa6
   14002dacd:	mov    QWORD PTR [rsi+0x48],rbp
   14002dad1:	mov    rbp,QWORD PTR [rsp+0x30]
   14002dad6:	mov    rdx,QWORD PTR [rsi+0x68]
   14002dada:	mov    rbx,QWORD PTR [rsi+0x60]
   14002dade:	mov    r12,QWORD PTR [rsp+0x40]
   14002dae3:	cmp    rbx,rdx
   14002dae6:	je     0x14002db01
   14002dae8:	mov    rdi,rdx
   14002daeb:	mov    rcx,rbx
   14002daee:	sub    rdi,rdx
   14002daf1:	mov    r8,rdi
   14002daf4:	call   0x140033260
   14002daf9:	lea    r11,[rdi+rbx*1]
   14002dafd:	mov    QWORD PTR [rsi+0x68],r11
   14002db01:	lea    rcx,[rsi+0xc8]
   14002db08:	lea    rdx,[rip+0x3d787]        # 0x14006b296
   14002db0f:	xor    r8d,r8d
   14002db12:	call   0x140002ba0
   14002db17:	lea    rcx,[rsi+0x8]
   14002db1b:	lea    rdx,[rip+0x3d774]        # 0x14006b296
   14002db22:	xor    r8d,r8d
   14002db25:	mov    rdi,QWORD PTR [rsp+0x38]
   14002db2a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002db2f:	add    rsp,0x20
   14002db33:	pop    rsi
   14002db34:	jmp    0x140002ba0
   14002db39:	int3   
   14002db3a:	int3   
   14002db3b:	int3   
   14002db3c:	int3   
   14002db3d:	int3   
   14002db3e:	int3   
   14002db3f:	int3   
   14002db40:	mov    QWORD PTR [rsp+0x10],rbx
   14002db45:	mov    QWORD PTR [rsp+0x18],rbp
   14002db4a:	push   rsi
   14002db4b:	push   rdi
   14002db4c:	push   r12
   14002db4e:	push   r13
   14002db50:	push   r14
   14002db52:	sub    rsp,0x150
   14002db59:	mov    rax,QWORD PTR [rip+0x57548]        # 0x1400850a8
   14002db60:	xor    rax,rsp
   14002db63:	mov    QWORD PTR [rsp+0x140],rax
   14002db6b:	lea    rbp,[rcx+0xa8]
   14002db72:	xor    ebx,ebx
   14002db74:	xor    edi,edi
   14002db76:	mov    r9,QWORD PTR [rbp+0x8]
   14002db7a:	mov    r14d,r8d
   14002db7d:	mov    r13d,edx
   14002db80:	sub    r9,QWORD PTR [rbp+0x0]
   14002db84:	sar    r9,0x3
   14002db88:	test   r9d,r9d
   14002db8b:	jle    0x14002dbce
   14002db8d:	xor    edx,edx
   14002db8f:	nop
   14002db90:	test   rbx,rbx
   14002db93:	jne    0x14002dd83
   14002db99:	mov    rax,QWORD PTR [rbp+0x0]
   14002db9d:	mov    rcx,QWORD PTR [rdx+rax*1]
   14002dba1:	test   rcx,rcx
   14002dba4:	je     0x14002dbba
   14002dba6:	cmp    r13d,DWORD PTR [rcx+0xa8]
   14002dbad:	jne    0x14002dbba
   14002dbaf:	cmp    r8d,DWORD PTR [rcx+0xac]
   14002dbb6:	cmove  rbx,rcx
   14002dbba:	inc    edi
   14002dbbc:	add    rdx,0x8
   14002dbc0:	cmp    edi,r9d
   14002dbc3:	jl     0x14002db90
   14002dbc5:	test   rbx,rbx
   14002dbc8:	jne    0x14002dd83
   14002dbce:	mov    ecx,0x140
   14002dbd3:	call   0x1400331a0
   14002dbd8:	test   rax,rax
   14002dbdb:	je     0x14002dbea
   14002dbdd:	mov    rcx,rax
   14002dbe0:	call   0x14002c700
   14002dbe5:	mov    rbx,rax
   14002dbe8:	jmp    0x14002dbec
   14002dbea:	xor    ebx,ebx
   14002dbec:	or     rcx,0xffffffffffffffff
   14002dbf0:	xor    eax,eax
   14002dbf2:	mov    BYTE PTR [rsp+0x30],0x0
   14002dbf7:	lea    rdi,[rsp+0x30]
   14002dbfc:	lea    rsi,[rbx+0x8]
   14002dc00:	mov    QWORD PTR [rsp+0x20],rbx
   14002dc05:	repnz scas al,BYTE PTR es:[rdi]
   14002dc07:	not    rcx
   14002dc0a:	lea    rdi,[rcx-0x1]
   14002dc0e:	mov    rcx,QWORD PTR [rsi+0x18]
   14002dc12:	cmp    rcx,0x10
   14002dc16:	jb     0x14002dc1d
   14002dc18:	mov    rax,QWORD PTR [rsi]
   14002dc1b:	jmp    0x14002dc20
   14002dc1d:	mov    rax,rsi
   14002dc20:	lea    rdx,[rsp+0x30]
   14002dc25:	cmp    rdx,rax
   14002dc28:	jb     0x14002dc99
   14002dc2a:	cmp    rcx,0x10
   14002dc2e:	jb     0x14002dc35
   14002dc30:	mov    rax,QWORD PTR [rsi]
   14002dc33:	jmp    0x14002dc38
   14002dc35:	mov    rax,rsi
   14002dc38:	mov    rdx,QWORD PTR [rsi+0x10]
   14002dc3c:	lea    r8,[rsp+0x30]
   14002dc41:	add    rax,rdx
   14002dc44:	cmp    rax,r8
   14002dc47:	jbe    0x14002dc99
   14002dc49:	cmp    rcx,0x10
   14002dc4d:	jb     0x14002dc54
   14002dc4f:	mov    rax,QWORD PTR [rsi]
   14002dc52:	jmp    0x14002dc57
   14002dc54:	mov    rax,rsi
   14002dc57:	lea    r12,[rsp+0x30]
   14002dc5c:	sub    r12,rax
   14002dc5f:	cmp    rdx,r12
   14002dc62:	jae    0x14002dc71
   14002dc64:	lea    rcx,[rip+0x3d6cd]        # 0x14006b338
   14002dc6b:	call   0x140032d5c
   14002dc70:	int3   
   14002dc71:	sub    rdx,r12
   14002dc74:	mov    rcx,rsi
   14002dc77:	cmp    rdi,rdx
   14002dc7a:	cmovb  rdx,rdi
   14002dc7e:	or     r8,0xffffffffffffffff
   14002dc82:	add    rdx,r12
   14002dc85:	call   0x140002da0
   14002dc8a:	mov    r8,r12
   14002dc8d:	xor    edx,edx
   14002dc8f:	mov    rcx,rsi
   14002dc92:	call   0x140002da0
   14002dc97:	jmp    0x14002dd0a
   14002dc99:	cmp    rdi,0xfffffffffffffffe
   14002dc9d:	jbe    0x14002dcac
   14002dc9f:	lea    rcx,[rip+0x3d6aa]        # 0x14006b350
   14002dca6:	call   0x140032d00
   14002dcab:	int3   
   14002dcac:	cmp    rcx,rdi
   14002dcaf:	jae    0x14002dcd1
   14002dcb1:	mov    r8,QWORD PTR [rsi+0x10]
   14002dcb5:	mov    rdx,rdi
   14002dcb8:	mov    rcx,rsi
   14002dcbb:	call   0x140002e40
   14002dcc0:	test   rdi,rdi
   14002dcc3:	je     0x14002dd0a
   14002dcc5:	cmp    QWORD PTR [rsi+0x18],0x10
   14002dcca:	jb     0x14002dce8
   14002dccc:	mov    rcx,QWORD PTR [rsi]
   14002dccf:	jmp    0x14002dceb
   14002dcd1:	test   rdi,rdi
   14002dcd4:	jne    0x14002dcc5
   14002dcd6:	mov    QWORD PTR [rsi+0x10],rdi
   14002dcda:	cmp    rcx,0x10
   14002dcde:	jb     0x14002dce3
   14002dce0:	mov    rsi,QWORD PTR [rsi]
   14002dce3:	mov    BYTE PTR [rsi],0x0
   14002dce6:	jmp    0x14002dd0a
   14002dce8:	mov    rcx,rsi
   14002dceb:	lea    rdx,[rsp+0x30]
   14002dcf0:	mov    r8,rdi
   14002dcf3:	call   0x140033260
   14002dcf8:	cmp    QWORD PTR [rsi+0x18],0x10
   14002dcfd:	mov    QWORD PTR [rsi+0x10],rdi
   14002dd01:	jb     0x14002dd06
   14002dd03:	mov    rsi,QWORD PTR [rsi]
   14002dd06:	mov    BYTE PTR [rsi+rdi*1],0x0
   14002dd0a:	mov    DWORD PTR [rbx+0xa8],r13d
   14002dd11:	mov    DWORD PTR [rbx+0xac],r14d
   14002dd18:	mov    rax,QWORD PTR [rbp+0x8]
   14002dd1c:	lea    rcx,[rsp+0x20]
   14002dd21:	cmp    rcx,rax
   14002dd24:	jae    0x14002dd64
   14002dd26:	mov    rcx,QWORD PTR [rbp+0x0]
   14002dd2a:	lea    rdx,[rsp+0x20]
   14002dd2f:	cmp    rcx,rdx
   14002dd32:	ja     0x14002dd64
   14002dd34:	lea    rdi,[rsp+0x20]
   14002dd39:	sub    rdi,rcx
   14002dd3c:	sar    rdi,0x3
   14002dd40:	cmp    rax,QWORD PTR [rbp+0x10]
   14002dd44:	jne    0x14002dd4e
   14002dd46:	mov    rcx,rbp
   14002dd49:	call   0x14002edc0
   14002dd4e:	mov    rdx,QWORD PTR [rbp+0x8]
   14002dd52:	test   rdx,rdx
   14002dd55:	je     0x14002dd7e
   14002dd57:	mov    rax,QWORD PTR [rbp+0x0]
   14002dd5b:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002dd5f:	mov    QWORD PTR [rdx],rcx
   14002dd62:	jmp    0x14002dd7e
   14002dd64:	cmp    rax,QWORD PTR [rbp+0x10]
   14002dd68:	jne    0x14002dd72
   14002dd6a:	mov    rcx,rbp
   14002dd6d:	call   0x14002edc0
   14002dd72:	mov    rcx,QWORD PTR [rbp+0x8]
   14002dd76:	test   rcx,rcx
   14002dd79:	je     0x14002dd7e
   14002dd7b:	mov    QWORD PTR [rcx],rbx
   14002dd7e:	add    QWORD PTR [rbp+0x8],0x8
   14002dd83:	mov    rax,rbx
   14002dd86:	mov    rcx,QWORD PTR [rsp+0x140]
   14002dd8e:	xor    rcx,rsp
   14002dd91:	call   0x140032f00
   14002dd96:	lea    r11,[rsp+0x150]
   14002dd9e:	mov    rbx,QWORD PTR [r11+0x38]
   14002dda2:	mov    rbp,QWORD PTR [r11+0x40]
   14002dda6:	mov    rsp,r11
   14002dda9:	pop    r14
   14002ddab:	pop    r13
   14002ddad:	pop    r12
   14002ddaf:	pop    rdi
   14002ddb0:	pop    rsi
   14002ddb1:	ret    
   14002ddb2:	int3   
   14002ddb3:	int3   
   14002ddb4:	int3   
   14002ddb5:	int3   
   14002ddb6:	int3   
   14002ddb7:	int3   
   14002ddb8:	int3   
   14002ddb9:	int3   
   14002ddba:	int3   
   14002ddbb:	int3   
   14002ddbc:	int3   
   14002ddbd:	int3   
   14002ddbe:	int3   
   14002ddbf:	int3   
   14002ddc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ddc5:	mov    QWORD PTR [rsp+0x10],rsi
   14002ddca:	mov    QWORD PTR [rsp+0x18],rdi
   14002ddcf:	xor    r10d,r10d
   14002ddd2:	mov    esi,r9d
   14002ddd5:	mov    r9d,r8d
   14002ddd8:	mov    r8,QWORD PTR [rcx+0xb0]
   14002dddf:	mov    ebx,edx
   14002dde1:	mov    rdi,rcx
   14002dde4:	sub    r8,QWORD PTR [rcx+0xa8]
   14002ddeb:	mov    r11d,r10d
   14002ddee:	sar    r8,0x3
   14002ddf2:	test   r8d,r8d
   14002ddf5:	jle    0x14002de3c
   14002ddf7:	mov    edx,r10d
   14002ddfa:	nop    WORD PTR [rax+rax*1+0x0]
   14002de00:	test   r10,r10
   14002de03:	jne    0x14002de3c
   14002de05:	mov    rax,QWORD PTR [rdi+0xa8]
   14002de0c:	mov    rcx,QWORD PTR [rdx+rax*1]
   14002de10:	test   rcx,rcx
   14002de13:	je     0x14002de30
   14002de15:	cmp    ebx,DWORD PTR [rcx+0xa8]
   14002de1b:	jne    0x14002de30
   14002de1d:	cmp    r9d,DWORD PTR [rcx+0xac]
   14002de24:	jne    0x14002de30
   14002de26:	cmp    esi,DWORD PTR [rcx+0xb4]
   14002de2c:	cmove  r10,rcx
   14002de30:	inc    r11d
   14002de33:	add    rdx,0x8
   14002de37:	cmp    r11d,r8d
   14002de3a:	jl     0x14002de00
   14002de3c:	mov    rbx,QWORD PTR [rsp+0x8]
   14002de41:	mov    rsi,QWORD PTR [rsp+0x10]
   14002de46:	mov    rdi,QWORD PTR [rsp+0x18]
   14002de4b:	mov    rax,r10
   14002de4e:	ret    
   14002de4f:	int3   
   14002de50:	mov    r10,QWORD PTR [rcx+0xb0]
   14002de57:	xor    eax,eax
   14002de59:	mov    r11d,edx
   14002de5c:	sub    r10,QWORD PTR [rcx+0xa8]
   14002de63:	mov    r9d,eax
   14002de66:	sar    r10,0x3
   14002de6a:	test   r10d,r10d
   14002de6d:	jle    0x14002deab
   14002de6f:	mov    rdx,QWORD PTR [rcx+0xa8]
   14002de76:	mov    rcx,QWORD PTR [rdx]
   14002de79:	test   rcx,rcx
   14002de7c:	je     0x14002de9f
   14002de7e:	cmp    r11d,DWORD PTR [rcx+0xa8]
   14002de85:	jne    0x14002de9f
   14002de87:	cmp    r8d,DWORD PTR [rcx+0xac]
   14002de8e:	jne    0x14002de9f
   14002de90:	test   BYTE PTR [rcx+0xb0],0x1
   14002de97:	je     0x14002de9f
   14002de99:	or     eax,DWORD PTR [rcx+0xb4]
   14002de9f:	inc    r9d
   14002dea2:	add    rdx,0x8
   14002dea6:	cmp    r9d,r10d
   14002dea9:	jl     0x14002de76
   14002deab:	repz ret 
   14002dead:	int3   
   14002deae:	int3   
   14002deaf:	int3   
   14002deb0:	mov    QWORD PTR [rsp+0x18],rsi
   14002deb5:	mov    QWORD PTR [rsp+0x20],rdi
   14002deba:	push   r12
   14002debc:	push   r13
   14002debe:	push   r14
   14002dec0:	sub    rsp,0x20
   14002dec4:	mov    rax,QWORD PTR [rcx+0xb0]
   14002decb:	xor    esi,esi
   14002decd:	mov    r14d,r9d
   14002ded0:	sub    rax,QWORD PTR [rcx+0xa8]
   14002ded7:	mov    r12d,r8d
   14002deda:	mov    r13d,edx
   14002dedd:	sar    rax,0x3
   14002dee1:	mov    rdi,rcx
   14002dee4:	test   eax,eax
   14002dee6:	jle    0x14002df63
   14002dee8:	mov    QWORD PTR [rsp+0x40],rbx
   14002deed:	mov    QWORD PTR [rsp+0x48],rbp
   14002def2:	mov    rbp,QWORD PTR [rsp+0x60]
   14002def7:	mov    ebx,esi
   14002def9:	nop    DWORD PTR [rax+0x0]
   14002df00:	mov    rax,QWORD PTR [rdi+0xa8]
   14002df07:	mov    rdx,QWORD PTR [rbx+rax*1]
   14002df0b:	test   rdx,rdx
   14002df0e:	je     0x14002df3d
   14002df10:	cmp    r13d,DWORD PTR [rdx+0xa8]
   14002df17:	jne    0x14002df3d
   14002df19:	cmp    r12d,DWORD PTR [rdx+0xac]
   14002df20:	jne    0x14002df3d
   14002df22:	mov    ecx,DWORD PTR [rdx+0xb4]
   14002df28:	test   ecx,ecx
   14002df2a:	je     0x14002df3d
   14002df2c:	mov    eax,ecx
   14002df2e:	and    eax,r14d
   14002df31:	cmp    ecx,eax
   14002df33:	jne    0x14002df3d
   14002df35:	mov    rcx,rbp
   14002df38:	call   0x14002ca60
   14002df3d:	mov    rax,QWORD PTR [rdi+0xb0]
   14002df44:	inc    esi
   14002df46:	add    rbx,0x8
   14002df4a:	sub    rax,QWORD PTR [rdi+0xa8]
   14002df51:	sar    rax,0x3
   14002df55:	cmp    esi,eax
   14002df57:	jl     0x14002df00
   14002df59:	mov    rbp,QWORD PTR [rsp+0x48]
   14002df5e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002df63:	mov    rsi,QWORD PTR [rsp+0x50]
   14002df68:	mov    rdi,QWORD PTR [rsp+0x58]
   14002df6d:	add    rsp,0x20
   14002df71:	pop    r14
   14002df73:	pop    r13
   14002df75:	pop    r12
   14002df77:	ret    
   14002df78:	int3   
   14002df79:	int3   
   14002df7a:	int3   
   14002df7b:	int3   
   14002df7c:	int3   
   14002df7d:	int3   
   14002df7e:	int3   
   14002df7f:	int3   
   14002df80:	mov    rax,rsp
   14002df83:	mov    DWORD PTR [rax+0x10],edx
   14002df86:	push   rbp
   14002df87:	push   rdi
   14002df88:	push   r12
   14002df8a:	push   r13
   14002df8c:	push   r14
   14002df8e:	mov    rbp,rsp
   14002df91:	sub    rsp,0x80
   14002df98:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14002dfa0:	mov    QWORD PTR [rax+0x8],rbx
   14002dfa4:	mov    QWORD PTR [rax+0x18],rsi
   14002dfa8:	mov    rdi,r8
   14002dfab:	mov    rbx,rcx
   14002dfae:	test   edx,edx
   14002dfb0:	js     0x14002dfd2
   14002dfb2:	lea    rdx,[rbp+0x38]
   14002dfb6:	mov    rcx,r8
   14002dfb9:	call   0x140028f00
   14002dfbe:	mov    r8,rax
   14002dfc1:	lea    rdx,[rbp-0x50]
   14002dfc5:	mov    rcx,rdi
   14002dfc8:	call   0x14002f4a0
   14002dfcd:	jmp    0x14002e30b
   14002dfd2:	cmp    edx,0xfffffffd
   14002dfd5:	jne    0x14002e30b
   14002dfdb:	xor    r14d,r14d
   14002dfde:	mov    QWORD PTR [rbp-0x18],r14
   14002dfe2:	lea    ecx,[rdx+0x4b]
   14002dfe5:	call   0x1400331a0
   14002dfea:	test   rax,rax
   14002dfed:	je     0x14002e2de
   14002dff3:	mov    QWORD PTR [rbp-0x20],rax
   14002dff7:	mov    QWORD PTR [rax],rax
   14002dffa:	mov    rax,QWORD PTR [rbp-0x20]
   14002dffe:	mov    QWORD PTR [rax+0x8],rax
   14002e002:	mov    rax,QWORD PTR [rbp-0x20]
   14002e006:	mov    QWORD PTR [rax+0x10],rax
   14002e00a:	mov    rax,QWORD PTR [rbp-0x20]
   14002e00e:	mov    BYTE PTR [rax+0x40],0x1
   14002e012:	mov    rax,QWORD PTR [rbp-0x20]
   14002e016:	mov    BYTE PTR [rax+0x41],0x1
   14002e01a:	lea    rdx,[rbp-0x28]
   14002e01e:	mov    rcx,rbx
   14002e021:	call   0x14002e710
   14002e026:	mov    r11,QWORD PTR [rbp-0x20]
   14002e02a:	mov    rbx,QWORD PTR [r11]
   14002e02d:	cmp    rbx,r11
   14002e030:	je     0x14002e0a7
   14002e032:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002e040:	lea    r8,[rbx+0x18]
   14002e044:	lea    rdx,[rbp-0x50]
   14002e048:	mov    rcx,rdi
   14002e04b:	call   0x14002ee50
   14002e050:	cmp    BYTE PTR [rbx+0x41],0x0
   14002e054:	jne    0x14002e09e
   14002e056:	mov    rax,QWORD PTR [rbx+0x10]
   14002e05a:	cmp    BYTE PTR [rax+0x41],0x0
   14002e05e:	jne    0x14002e07e
   14002e060:	mov    rbx,rax
   14002e063:	mov    rax,QWORD PTR [rax]
   14002e066:	cmp    BYTE PTR [rax+0x41],0x0
   14002e06a:	jne    0x14002e09e
   14002e06c:	nop    DWORD PTR [rax+0x0]
   14002e070:	mov    rbx,rax
   14002e073:	mov    rax,QWORD PTR [rax]
   14002e076:	cmp    BYTE PTR [rax+0x41],0x0
   14002e07a:	je     0x14002e070
   14002e07c:	jmp    0x14002e09e
   14002e07e:	mov    rax,QWORD PTR [rbx+0x8]
   14002e082:	cmp    BYTE PTR [rax+0x41],0x0
   14002e086:	jne    0x14002e09b
   14002e088:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e08c:	jne    0x14002e09b
   14002e08e:	mov    rbx,rax
   14002e091:	mov    rax,QWORD PTR [rax+0x8]
   14002e095:	cmp    BYTE PTR [rax+0x41],0x0
   14002e099:	je     0x14002e088
   14002e09b:	mov    rbx,rax
   14002e09e:	mov    r11,QWORD PTR [rbp-0x20]
   14002e0a2:	cmp    rbx,r11
   14002e0a5:	jne    0x14002e040
   14002e0a7:	mov    r13,QWORD PTR [r11+0x8]
   14002e0ab:	mov    r12,r13
   14002e0ae:	cmp    BYTE PTR [r13+0x41],0x0
   14002e0b3:	jne    0x14002e1cb
   14002e0b9:	nop    DWORD PTR [rax+0x0]
   14002e0c0:	mov    rdx,QWORD PTR [r12+0x10]
   14002e0c5:	lea    rcx,[rbp-0x28]
   14002e0c9:	call   0x140028980
   14002e0ce:	mov    r12,QWORD PTR [r12]
   14002e0d2:	lea    rsi,[r13+0x20]
   14002e0d6:	mov    QWORD PTR [rbp-0x58],rsi
   14002e0da:	mov    rdi,QWORD PTR [rsi+0x8]
   14002e0de:	mov    rbx,QWORD PTR [rdi]
   14002e0e1:	cmp    rbx,rbx
   14002e0e4:	jne    0x14002e13d
   14002e0e6:	cmp    rdi,rdi
   14002e0e9:	jne    0x14002e13d
   14002e0eb:	mov    rdi,QWORD PTR [rdi+0x8]
   14002e0ef:	mov    rbx,rdi
   14002e0f2:	cmp    BYTE PTR [rdi+0x1d],0x0
   14002e0f6:	jne    0x14002e120
   14002e0f8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002e100:	mov    rdx,QWORD PTR [rbx+0x10]
   14002e104:	mov    rcx,rsi
   14002e107:	call   0x140028a70
   14002e10c:	mov    rbx,QWORD PTR [rbx]
   14002e10f:	mov    rcx,rdi
   14002e112:	call   0x1400330c0
   14002e117:	mov    rdi,rbx
   14002e11a:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002e11e:	je     0x14002e100
   14002e120:	mov    rax,QWORD PTR [rsi+0x8]
   14002e124:	mov    QWORD PTR [rax+0x8],rax
   14002e128:	mov    rax,QWORD PTR [rsi+0x8]
   14002e12c:	mov    QWORD PTR [rax],rax
   14002e12f:	mov    rax,QWORD PTR [rsi+0x8]
   14002e133:	mov    QWORD PTR [rax+0x10],rax
   14002e137:	mov    QWORD PTR [rsi+0x10],r14
   14002e13b:	jmp    0x14002e1a7
   14002e13d:	cmp    rbx,rdi
   14002e140:	je     0x14002e1a7
   14002e142:	mov    r8,rbx
   14002e145:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002e149:	jne    0x14002e196
   14002e14b:	mov    rax,QWORD PTR [rbx+0x10]
   14002e14f:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e153:	jne    0x14002e16f
   14002e155:	mov    rbx,rax
   14002e158:	mov    rax,QWORD PTR [rax]
   14002e15b:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e15f:	jne    0x14002e196
   14002e161:	mov    rbx,rax
   14002e164:	mov    rax,QWORD PTR [rax]
   14002e167:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e16b:	je     0x14002e161
   14002e16d:	jmp    0x14002e196
   14002e16f:	mov    rax,QWORD PTR [rbx+0x8]
   14002e173:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e177:	jne    0x14002e193
   14002e179:	nop    DWORD PTR [rax+0x0]
   14002e180:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e184:	jne    0x14002e193
   14002e186:	mov    rbx,rax
   14002e189:	mov    rax,QWORD PTR [rax+0x8]
   14002e18d:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e191:	je     0x14002e180
   14002e193:	mov    rbx,rax
   14002e196:	lea    rdx,[rbp-0x50]
   14002e19a:	mov    rcx,rsi
   14002e19d:	call   0x140028500
   14002e1a2:	cmp    rbx,rdi
   14002e1a5:	jne    0x14002e142
   14002e1a7:	mov    rcx,QWORD PTR [rsi+0x8]
   14002e1ab:	call   0x1400330c0
   14002e1b0:	mov    rcx,r13
   14002e1b3:	call   0x1400330c0
   14002e1b8:	mov    r13,r12
   14002e1bb:	cmp    BYTE PTR [r12+0x41],0x0
   14002e1c1:	je     0x14002e0c0
   14002e1c7:	mov    r11,QWORD PTR [rbp-0x20]
   14002e1cb:	mov    QWORD PTR [r11+0x8],r11
   14002e1cf:	mov    rax,QWORD PTR [rbp-0x20]
   14002e1d3:	mov    QWORD PTR [rax],rax
   14002e1d6:	mov    rax,QWORD PTR [rbp-0x20]
   14002e1da:	mov    QWORD PTR [rax+0x10],rax
   14002e1de:	mov    QWORD PTR [rbp-0x18],r14
   14002e1e2:	mov    rdi,QWORD PTR [rbp-0x20]
   14002e1e6:	mov    rbx,QWORD PTR [rdi]
   14002e1e9:	cmp    rbx,rbx
   14002e1ec:	jne    0x14002e26a
   14002e1ee:	mov    rsi,QWORD PTR [rdi+0x8]
   14002e1f2:	mov    r12,rsi
   14002e1f5:	cmp    BYTE PTR [rsi+0x41],0x0
   14002e1f9:	jne    0x14002e251
   14002e1fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002e200:	mov    rdx,QWORD PTR [r12+0x10]
   14002e205:	lea    rcx,[rbp-0x28]
   14002e209:	call   0x140028980
   14002e20e:	mov    r12,QWORD PTR [r12]
   14002e212:	lea    rbx,[rsi+0x20]
   14002e216:	mov    QWORD PTR [rbp+0x48],rbx
   14002e21a:	mov    r8,QWORD PTR [rbx+0x8]
   14002e21e:	mov    r9,r8
   14002e221:	mov    r8,QWORD PTR [r8]
   14002e224:	lea    rdx,[rbp-0x50]
   14002e228:	mov    rcx,rbx
   14002e22b:	call   0x140027e80
   14002e230:	nop
   14002e231:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e235:	call   0x1400330c0
   14002e23a:	mov    rcx,rsi
   14002e23d:	call   0x1400330c0
   14002e242:	mov    rsi,r12
   14002e245:	cmp    BYTE PTR [r12+0x41],0x0
   14002e24b:	je     0x14002e200
   14002e24d:	mov    rdi,QWORD PTR [rbp-0x20]
   14002e251:	mov    QWORD PTR [rdi+0x8],rdi
   14002e255:	mov    rax,QWORD PTR [rbp-0x20]
   14002e259:	mov    QWORD PTR [rax],rax
   14002e25c:	mov    rax,QWORD PTR [rbp-0x20]
   14002e260:	mov    QWORD PTR [rax+0x10],rax
   14002e264:	mov    QWORD PTR [rbp-0x18],r14
   14002e268:	jmp    0x14002e2d0
   14002e26a:	cmp    rbx,rdi
   14002e26d:	je     0x14002e2d4
   14002e26f:	nop
   14002e270:	mov    r8,rbx
   14002e273:	cmp    BYTE PTR [rbx+0x41],0x0
   14002e277:	jne    0x14002e2be
   14002e279:	mov    rax,QWORD PTR [rbx+0x10]
   14002e27d:	cmp    BYTE PTR [rax+0x41],0x0
   14002e281:	jne    0x14002e29e
   14002e283:	mov    rbx,rax
   14002e286:	mov    rax,QWORD PTR [rax]
   14002e289:	cmp    BYTE PTR [rax+0x41],0x0
   14002e28d:	jne    0x14002e2be
   14002e28f:	nop
   14002e290:	mov    rbx,rax
   14002e293:	mov    rax,QWORD PTR [rax]
   14002e296:	cmp    BYTE PTR [rax+0x41],0x0
   14002e29a:	je     0x14002e290
   14002e29c:	jmp    0x14002e2be
   14002e29e:	mov    rax,QWORD PTR [rbx+0x8]
   14002e2a2:	cmp    BYTE PTR [rax+0x41],0x0
   14002e2a6:	jne    0x14002e2bb
   14002e2a8:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e2ac:	jne    0x14002e2bb
   14002e2ae:	mov    rbx,rax
   14002e2b1:	mov    rax,QWORD PTR [rax+0x8]
   14002e2b5:	cmp    BYTE PTR [rax+0x41],0x0
   14002e2b9:	je     0x14002e2a8
   14002e2bb:	mov    rbx,rax
   14002e2be:	lea    rdx,[rbp+0x48]
   14002e2c2:	lea    rcx,[rbp-0x28]
   14002e2c6:	call   0x1400281a0
   14002e2cb:	cmp    rbx,rdi
   14002e2ce:	jne    0x14002e270
   14002e2d0:	mov    rdi,QWORD PTR [rbp-0x20]
   14002e2d4:	mov    rcx,rdi
   14002e2d7:	call   0x1400330c0
   14002e2dc:	jmp    0x14002e30b
   14002e2de:	mov    QWORD PTR [rbp+0x48],r14
   14002e2e2:	lea    rdx,[rbp+0x48]
   14002e2e6:	lea    rcx,[rbp-0x40]
   14002e2ea:	call   0x140032fd4
   14002e2ef:	lea    r11,[rip+0x3a59a]        # 0x140068890
   14002e2f6:	mov    QWORD PTR [rbp-0x40],r11
   14002e2fa:	lea    rdx,[rip+0x5511f]        # 0x140083420
   14002e301:	lea    rcx,[rbp-0x40]
   14002e305:	call   0x140036358
   14002e30a:	int3   
   14002e30b:	lea    r11,[rsp+0x80]
   14002e313:	mov    rbx,QWORD PTR [r11+0x30]
   14002e317:	mov    rsi,QWORD PTR [r11+0x40]
   14002e31b:	mov    rsp,r11
   14002e31e:	pop    r14
   14002e320:	pop    r13
   14002e322:	pop    r12
   14002e324:	pop    rdi
   14002e325:	pop    rbp
   14002e326:	ret    
   14002e327:	int3   
   14002e328:	int3   
   14002e329:	int3   
   14002e32a:	int3   
   14002e32b:	int3   
   14002e32c:	int3   
   14002e32d:	int3   
   14002e32e:	int3   
   14002e32f:	int3   
   14002e330:	mov    rax,rsp
   14002e333:	mov    DWORD PTR [rax+0x18],r8d
   14002e337:	push   rbp
   14002e338:	push   rdi
   14002e339:	push   r12
   14002e33b:	push   r13
   14002e33d:	push   r14
   14002e33f:	mov    rbp,rsp
   14002e342:	sub    rsp,0x80
   14002e349:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14002e351:	mov    QWORD PTR [rax+0x8],rbx
   14002e355:	mov    QWORD PTR [rax+0x10],rsi
   14002e359:	mov    rsi,r9
   14002e35c:	mov    r12d,edx
   14002e35f:	mov    rbx,rcx
   14002e362:	test   r8d,r8d
   14002e365:	js     0x14002e387
   14002e367:	lea    rdx,[rbp+0x40]
   14002e36b:	mov    rcx,r9
   14002e36e:	call   0x140028f00
   14002e373:	mov    r8,rax
   14002e376:	lea    rdx,[rbp-0x38]
   14002e37a:	mov    rcx,rsi
   14002e37d:	call   0x14002f4a0
   14002e382:	jmp    0x14002e6eb
   14002e387:	cmp    r8d,0xfffffffd
   14002e38b:	jne    0x14002e6eb
   14002e391:	xor    r14d,r14d
   14002e394:	mov    QWORD PTR [rbp-0x50],r14
   14002e398:	lea    ecx,[r8+0x4b]
   14002e39c:	call   0x1400331a0
   14002e3a1:	test   rax,rax
   14002e3a4:	je     0x14002e6be
   14002e3aa:	mov    QWORD PTR [rbp-0x58],rax
   14002e3ae:	mov    QWORD PTR [rax],rax
   14002e3b1:	mov    rax,QWORD PTR [rbp-0x58]
   14002e3b5:	mov    QWORD PTR [rax+0x8],rax
   14002e3b9:	mov    rax,QWORD PTR [rbp-0x58]
   14002e3bd:	mov    QWORD PTR [rax+0x10],rax
   14002e3c1:	mov    rax,QWORD PTR [rbp-0x58]
   14002e3c5:	mov    BYTE PTR [rax+0x40],0x1
   14002e3c9:	mov    rax,QWORD PTR [rbp-0x58]
   14002e3cd:	mov    BYTE PTR [rax+0x41],0x1
   14002e3d1:	lea    rdx,[rbp-0x60]
   14002e3d5:	mov    rcx,rbx
   14002e3d8:	call   0x14002e710
   14002e3dd:	mov    r11,QWORD PTR [rbp-0x58]
   14002e3e1:	mov    rbx,QWORD PTR [r11]
   14002e3e4:	cmp    QWORD PTR [rsi+0x10],r14
   14002e3e8:	jne    0x14002e489
   14002e3ee:	xchg   ax,ax
   14002e3f0:	cmp    rbx,r11
   14002e3f3:	je     0x14002e489
   14002e3f9:	cmp    r12d,DWORD PTR [rbx+0x18]
   14002e3fd:	jne    0x14002e42d
   14002e3ff:	lea    rdi,[rbx+0x20]
   14002e403:	cmp    rsi,rdi
   14002e406:	je     0x14002e42d
   14002e408:	mov    r8,QWORD PTR [rsi+0x8]
   14002e40c:	mov    r9,r8
   14002e40f:	mov    r8,QWORD PTR [r8]
   14002e412:	lea    rdx,[rbp-0x40]
   14002e416:	mov    rcx,rsi
   14002e419:	call   0x140027e80
   14002e41e:	mov    rdx,rdi
   14002e421:	mov    rcx,rsi
   14002e424:	call   0x140027f60
   14002e429:	mov    r11,QWORD PTR [rbp-0x58]
   14002e42d:	cmp    BYTE PTR [rbx+0x41],0x0
   14002e431:	jne    0x14002e47e
   14002e433:	mov    rax,QWORD PTR [rbx+0x10]
   14002e437:	cmp    BYTE PTR [rax+0x41],0x0
   14002e43b:	jne    0x14002e45e
   14002e43d:	mov    rbx,rax
   14002e440:	mov    rax,QWORD PTR [rax]
   14002e443:	cmp    BYTE PTR [rax+0x41],0x0
   14002e447:	jne    0x14002e47e
   14002e449:	nop    DWORD PTR [rax+0x0]
   14002e450:	mov    rbx,rax
   14002e453:	mov    rax,QWORD PTR [rax]
   14002e456:	cmp    BYTE PTR [rax+0x41],0x0
   14002e45a:	je     0x14002e450
   14002e45c:	jmp    0x14002e47e
   14002e45e:	mov    rax,QWORD PTR [rbx+0x8]
   14002e462:	cmp    BYTE PTR [rax+0x41],0x0
   14002e466:	jne    0x14002e47b
   14002e468:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e46c:	jne    0x14002e47b
   14002e46e:	mov    rbx,rax
   14002e471:	mov    rax,QWORD PTR [rax+0x8]
   14002e475:	cmp    BYTE PTR [rax+0x41],0x0
   14002e479:	je     0x14002e468
   14002e47b:	mov    rbx,rax
   14002e47e:	cmp    QWORD PTR [rsi+0x10],0x0
   14002e483:	je     0x14002e3f0
   14002e489:	mov    r13,QWORD PTR [r11+0x8]
   14002e48d:	mov    r12,r13
   14002e490:	cmp    BYTE PTR [r13+0x41],0x0
   14002e495:	jne    0x14002e5ab
   14002e49b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002e4a0:	mov    rdx,QWORD PTR [r12+0x10]
   14002e4a5:	lea    rcx,[rbp-0x60]
   14002e4a9:	call   0x140028980
   14002e4ae:	mov    r12,QWORD PTR [r12]
   14002e4b2:	lea    rsi,[r13+0x20]
   14002e4b6:	mov    QWORD PTR [rbp-0x40],rsi
   14002e4ba:	mov    rdi,QWORD PTR [rsi+0x8]
   14002e4be:	mov    rbx,QWORD PTR [rdi]
   14002e4c1:	cmp    rbx,rbx
   14002e4c4:	jne    0x14002e51d
   14002e4c6:	cmp    rdi,rdi
   14002e4c9:	jne    0x14002e51d
   14002e4cb:	mov    rdi,QWORD PTR [rdi+0x8]
   14002e4cf:	mov    rbx,rdi
   14002e4d2:	cmp    BYTE PTR [rdi+0x1d],0x0
   14002e4d6:	jne    0x14002e500
   14002e4d8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002e4e0:	mov    rdx,QWORD PTR [rbx+0x10]
   14002e4e4:	mov    rcx,rsi
   14002e4e7:	call   0x140028a70
   14002e4ec:	mov    rbx,QWORD PTR [rbx]
   14002e4ef:	mov    rcx,rdi
   14002e4f2:	call   0x1400330c0
   14002e4f7:	mov    rdi,rbx
   14002e4fa:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002e4fe:	je     0x14002e4e0
   14002e500:	mov    rax,QWORD PTR [rsi+0x8]
   14002e504:	mov    QWORD PTR [rax+0x8],rax
   14002e508:	mov    rax,QWORD PTR [rsi+0x8]
   14002e50c:	mov    QWORD PTR [rax],rax
   14002e50f:	mov    rax,QWORD PTR [rsi+0x8]
   14002e513:	mov    QWORD PTR [rax+0x10],rax
   14002e517:	mov    QWORD PTR [rsi+0x10],r14
   14002e51b:	jmp    0x14002e587
   14002e51d:	cmp    rbx,rdi
   14002e520:	je     0x14002e587
   14002e522:	mov    r8,rbx
   14002e525:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002e529:	jne    0x14002e576
   14002e52b:	mov    rax,QWORD PTR [rbx+0x10]
   14002e52f:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e533:	jne    0x14002e54f
   14002e535:	mov    rbx,rax
   14002e538:	mov    rax,QWORD PTR [rax]
   14002e53b:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e53f:	jne    0x14002e576
   14002e541:	mov    rbx,rax
   14002e544:	mov    rax,QWORD PTR [rax]
   14002e547:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e54b:	je     0x14002e541
   14002e54d:	jmp    0x14002e576
   14002e54f:	mov    rax,QWORD PTR [rbx+0x8]
   14002e553:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e557:	jne    0x14002e573
   14002e559:	nop    DWORD PTR [rax+0x0]
   14002e560:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e564:	jne    0x14002e573
   14002e566:	mov    rbx,rax
   14002e569:	mov    rax,QWORD PTR [rax+0x8]
   14002e56d:	cmp    BYTE PTR [rax+0x1d],0x0
   14002e571:	je     0x14002e560
   14002e573:	mov    rbx,rax
   14002e576:	lea    rdx,[rbp-0x38]
   14002e57a:	mov    rcx,rsi
   14002e57d:	call   0x140028500
   14002e582:	cmp    rbx,rdi
   14002e585:	jne    0x14002e522
   14002e587:	mov    rcx,QWORD PTR [rsi+0x8]
   14002e58b:	call   0x1400330c0
   14002e590:	mov    rcx,r13
   14002e593:	call   0x1400330c0
   14002e598:	mov    r13,r12
   14002e59b:	cmp    BYTE PTR [r12+0x41],0x0
   14002e5a1:	je     0x14002e4a0
   14002e5a7:	mov    r11,QWORD PTR [rbp-0x58]
   14002e5ab:	mov    QWORD PTR [r11+0x8],r11
   14002e5af:	mov    rax,QWORD PTR [rbp-0x58]
   14002e5b3:	mov    QWORD PTR [rax],rax
   14002e5b6:	mov    rax,QWORD PTR [rbp-0x58]
   14002e5ba:	mov    QWORD PTR [rax+0x10],rax
   14002e5be:	mov    QWORD PTR [rbp-0x50],r14
   14002e5c2:	mov    rdi,QWORD PTR [rbp-0x58]
   14002e5c6:	mov    rbx,QWORD PTR [rdi]
   14002e5c9:	cmp    rbx,rbx
   14002e5cc:	jne    0x14002e64a
   14002e5d2:	mov    rsi,QWORD PTR [rdi+0x8]
   14002e5d6:	mov    r12,rsi
   14002e5d9:	cmp    BYTE PTR [rsi+0x41],0x0
   14002e5dd:	jne    0x14002e631
   14002e5df:	nop
   14002e5e0:	mov    rdx,QWORD PTR [r12+0x10]
   14002e5e5:	lea    rcx,[rbp-0x60]
   14002e5e9:	call   0x140028980
   14002e5ee:	mov    r12,QWORD PTR [r12]
   14002e5f2:	lea    rbx,[rsi+0x20]
   14002e5f6:	mov    QWORD PTR [rbp-0x38],rbx
   14002e5fa:	mov    r8,QWORD PTR [rbx+0x8]
   14002e5fe:	mov    r9,r8
   14002e601:	mov    r8,QWORD PTR [r8]
   14002e604:	lea    rdx,[rbp-0x40]
   14002e608:	mov    rcx,rbx
   14002e60b:	call   0x140027e80
   14002e610:	nop
   14002e611:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e615:	call   0x1400330c0
   14002e61a:	mov    rcx,rsi
   14002e61d:	call   0x1400330c0
   14002e622:	mov    rsi,r12
   14002e625:	cmp    BYTE PTR [r12+0x41],0x0
   14002e62b:	je     0x14002e5e0
   14002e62d:	mov    rdi,QWORD PTR [rbp-0x58]
   14002e631:	mov    QWORD PTR [rdi+0x8],rdi
   14002e635:	mov    rax,QWORD PTR [rbp-0x58]
   14002e639:	mov    QWORD PTR [rax],rax
   14002e63c:	mov    rax,QWORD PTR [rbp-0x58]
   14002e640:	mov    QWORD PTR [rax+0x10],rax
   14002e644:	mov    QWORD PTR [rbp-0x50],r14
   14002e648:	jmp    0x14002e6b0
   14002e64a:	cmp    rbx,rdi
   14002e64d:	je     0x14002e6b4
   14002e64f:	nop
   14002e650:	mov    r8,rbx
   14002e653:	cmp    BYTE PTR [rbx+0x41],0x0
   14002e657:	jne    0x14002e69e
   14002e659:	mov    rax,QWORD PTR [rbx+0x10]
   14002e65d:	cmp    BYTE PTR [rax+0x41],0x0
   14002e661:	jne    0x14002e67e
   14002e663:	mov    rbx,rax
   14002e666:	mov    rax,QWORD PTR [rax]
   14002e669:	cmp    BYTE PTR [rax+0x41],0x0
   14002e66d:	jne    0x14002e69e
   14002e66f:	nop
   14002e670:	mov    rbx,rax
   14002e673:	mov    rax,QWORD PTR [rax]
   14002e676:	cmp    BYTE PTR [rax+0x41],0x0
   14002e67a:	je     0x14002e670
   14002e67c:	jmp    0x14002e69e
   14002e67e:	mov    rax,QWORD PTR [rbx+0x8]
   14002e682:	cmp    BYTE PTR [rax+0x41],0x0
   14002e686:	jne    0x14002e69b
   14002e688:	cmp    rbx,QWORD PTR [rax+0x10]
   14002e68c:	jne    0x14002e69b
   14002e68e:	mov    rbx,rax
   14002e691:	mov    rax,QWORD PTR [rax+0x8]
   14002e695:	cmp    BYTE PTR [rax+0x41],0x0
   14002e699:	je     0x14002e688
   14002e69b:	mov    rbx,rax
   14002e69e:	lea    rdx,[rbp-0x38]
   14002e6a2:	lea    rcx,[rbp-0x60]
   14002e6a6:	call   0x1400281a0
   14002e6ab:	cmp    rbx,rdi
   14002e6ae:	jne    0x14002e650
   14002e6b0:	mov    rdi,QWORD PTR [rbp-0x58]
   14002e6b4:	mov    rcx,rdi
   14002e6b7:	call   0x1400330c0
   14002e6bc:	jmp    0x14002e6eb
   14002e6be:	mov    QWORD PTR [rbp-0x28],r14
   14002e6c2:	lea    rdx,[rbp-0x28]
   14002e6c6:	lea    rcx,[rbp-0x20]
   14002e6ca:	call   0x140032fd4
   14002e6cf:	lea    r11,[rip+0x3a1ba]        # 0x140068890
   14002e6d6:	mov    QWORD PTR [rbp-0x20],r11
   14002e6da:	lea    rdx,[rip+0x54d3f]        # 0x140083420
   14002e6e1:	lea    rcx,[rbp-0x20]
   14002e6e5:	call   0x140036358
   14002e6ea:	int3   
   14002e6eb:	lea    r11,[rsp+0x80]
   14002e6f3:	mov    rbx,QWORD PTR [r11+0x30]
   14002e6f7:	mov    rsi,QWORD PTR [r11+0x38]
   14002e6fb:	mov    rsp,r11
   14002e6fe:	pop    r14
   14002e700:	pop    r13
   14002e702:	pop    r12
   14002e704:	pop    rdi
   14002e705:	pop    rbp
   14002e706:	ret    
   14002e707:	int3   
   14002e708:	int3   
   14002e709:	int3   
   14002e70a:	int3   
   14002e70b:	int3   
   14002e70c:	int3   
   14002e70d:	int3   
   14002e70e:	int3   
   14002e70f:	int3   
   14002e710:	rex push rsi
   14002e712:	push   rdi
   14002e713:	push   r12
   14002e715:	sub    rsp,0x30
   14002e719:	mov    rax,QWORD PTR [rcx+0xb0]
   14002e720:	xor    edi,edi
   14002e722:	mov    r12,rdx
   14002e725:	sub    rax,QWORD PTR [rcx+0xa8]
   14002e72c:	mov    rsi,rcx
   14002e72f:	sar    rax,0x3
   14002e733:	test   eax,eax
   14002e735:	jle    0x14002e7c2
   14002e73b:	mov    QWORD PTR [rsp+0x68],rbp
   14002e740:	mov    ebp,edi
   14002e742:	mov    QWORD PTR [rsp+0x58],rbx
   14002e747:	cmp    edi,eax
   14002e749:	jge    0x14002e79c
   14002e74b:	mov    rax,QWORD PTR [rsi+0xa8]
   14002e752:	mov    rcx,QWORD PTR [rax+rbp*1]
   14002e756:	test   rcx,rcx
   14002e759:	je     0x14002e79c
   14002e75b:	mov    eax,DWORD PTR [rcx+0xa8]
   14002e761:	lea    rdx,[rsp+0x50]
   14002e766:	mov    DWORD PTR [rsp+0x50],eax
   14002e76a:	mov    eax,DWORD PTR [rcx+0xac]
   14002e770:	mov    rcx,r12
   14002e773:	mov    DWORD PTR [rsp+0x60],eax
   14002e777:	call   0x14002e990
   14002e77c:	lea    rdx,[rsp+0x60]
   14002e781:	mov    rcx,rax
   14002e784:	mov    rbx,rax
   14002e787:	call   0x140028f00
   14002e78c:	lea    rdx,[rsp+0x20]
   14002e791:	mov    rcx,rbx
   14002e794:	mov    r8,rax
   14002e797:	call   0x14002f4a0
   14002e79c:	mov    rax,QWORD PTR [rsi+0xb0]
   14002e7a3:	inc    edi
   14002e7a5:	add    rbp,0x8
   14002e7a9:	sub    rax,QWORD PTR [rsi+0xa8]
   14002e7b0:	sar    rax,0x3
   14002e7b4:	cmp    edi,eax
   14002e7b6:	jl     0x14002e74b
   14002e7b8:	mov    rbp,QWORD PTR [rsp+0x68]
   14002e7bd:	mov    rbx,QWORD PTR [rsp+0x58]
   14002e7c2:	add    rsp,0x30
   14002e7c6:	pop    r12
   14002e7c8:	pop    rdi
   14002e7c9:	pop    rsi
   14002e7ca:	ret    
   14002e7cb:	int3   
   14002e7cc:	int3   
   14002e7cd:	int3   
   14002e7ce:	int3   
   14002e7cf:	int3   
   14002e7d0:	rex push rdi
   14002e7d2:	sub    rsp,0x30
   14002e7d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e7df:	mov    QWORD PTR [rsp+0x50],rbx
   14002e7e4:	mov    rdi,rdx
   14002e7e7:	mov    rbx,rcx
   14002e7ea:	mov    rax,QWORD PTR [rcx+0x8]
   14002e7ee:	cmp    rdx,rax
   14002e7f1:	jae    0x14002e831
   14002e7f3:	mov    rcx,QWORD PTR [rcx]
   14002e7f6:	cmp    rcx,rdx
   14002e7f9:	ja     0x14002e831
   14002e7fb:	sub    rdi,rcx
   14002e7fe:	cmp    rax,QWORD PTR [rbx+0x10]
   14002e802:	jne    0x14002e80c
   14002e804:	mov    rcx,rbx
   14002e807:	call   0x14002ec50
   14002e80c:	and    rdi,0xffffffffffffffe0
   14002e810:	add    rdi,QWORD PTR [rbx]
   14002e813:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e817:	mov    QWORD PTR [rsp+0x40],rcx
   14002e81c:	mov    QWORD PTR [rsp+0x48],rcx
   14002e821:	test   rcx,rcx
   14002e824:	je     0x14002e82f
   14002e826:	mov    rdx,rdi
   14002e829:	call   0x14002fce0
   14002e82e:	nop
   14002e82f:	jmp    0x14002e85b
   14002e831:	cmp    rax,QWORD PTR [rbx+0x10]
   14002e835:	jne    0x14002e83f
   14002e837:	mov    rcx,rbx
   14002e83a:	call   0x14002ec50
   14002e83f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e843:	mov    QWORD PTR [rsp+0x40],rcx
   14002e848:	mov    QWORD PTR [rsp+0x48],rcx
   14002e84d:	test   rcx,rcx
   14002e850:	je     0x14002e85b
   14002e852:	mov    rdx,rdi
   14002e855:	call   0x14002fce0
   14002e85a:	nop
   14002e85b:	add    QWORD PTR [rbx+0x8],0x20
   14002e860:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e865:	add    rsp,0x30
   14002e869:	pop    rdi
   14002e86a:	ret    
   14002e86b:	int3   
   14002e86c:	int3   
   14002e86d:	int3   
   14002e86e:	int3   
   14002e86f:	int3   
   14002e870:	mov    QWORD PTR [rsp+0x10],rbx
   14002e875:	push   rsi
   14002e876:	sub    rsp,0x20
   14002e87a:	mov    rbx,rdx
   14002e87d:	mov    rsi,rcx
   14002e880:	cmp    rcx,rdx
   14002e883:	je     0x14002e97c
   14002e889:	mov    r8,QWORD PTR [rdx+0x8]
   14002e88d:	mov    r10,QWORD PTR [rdx]
   14002e890:	mov    QWORD PTR [rsp+0x30],rdi
   14002e895:	mov    rdx,r8
   14002e898:	sub    rdx,r10
   14002e89b:	jne    0x14002e8d9
   14002e89d:	mov    rdx,QWORD PTR [rcx+0x8]
   14002e8a1:	mov    rbx,QWORD PTR [rcx]
   14002e8a4:	cmp    rbx,rdx
   14002e8a7:	je     0x14002e93a
   14002e8ad:	mov    rdi,rdx
   14002e8b0:	mov    rcx,rbx
   14002e8b3:	sub    rdi,rdx
   14002e8b6:	mov    r8,rdi
   14002e8b9:	call   0x140033260
   14002e8be:	lea    r11,[rdi+rbx*1]
   14002e8c2:	mov    rdi,QWORD PTR [rsp+0x30]
   14002e8c7:	mov    QWORD PTR [rsi+0x8],r11
   14002e8cb:	mov    rax,rsi
   14002e8ce:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e8d3:	add    rsp,0x20
   14002e8d7:	pop    rsi
   14002e8d8:	ret    
   14002e8d9:	mov    rcx,QWORD PTR [rcx]
   14002e8dc:	mov    r9,QWORD PTR [rsi+0x8]
   14002e8e0:	sub    r9,rcx
   14002e8e3:	cmp    rdx,r9
   14002e8e6:	ja     0x14002e8ff
   14002e8e8:	sub    r8,r10
   14002e8eb:	mov    rdx,r10
   14002e8ee:	call   0x140033260
   14002e8f3:	mov    rax,QWORD PTR [rbx+0x8]
   14002e8f7:	sub    rax,QWORD PTR [rbx]
   14002e8fa:	add    rax,QWORD PTR [rsi]
   14002e8fd:	jmp    0x14002e936
   14002e8ff:	mov    rax,QWORD PTR [rsi+0x10]
   14002e903:	sub    rax,rcx
   14002e906:	cmp    rdx,rax
   14002e909:	ja     0x14002e94d
   14002e90b:	lea    rdi,[r9+r10*1]
   14002e90f:	mov    rdx,r10
   14002e912:	mov    r8,rdi
   14002e915:	sub    r8,r10
   14002e918:	call   0x140033260
   14002e91d:	mov    rbx,QWORD PTR [rbx+0x8]
   14002e921:	mov    rcx,QWORD PTR [rsi+0x8]
   14002e925:	sub    rbx,rdi
   14002e928:	mov    rdx,rdi
   14002e92b:	mov    r8,rbx
   14002e92e:	call   0x140033260
   14002e933:	add    rax,rbx
   14002e936:	mov    QWORD PTR [rsi+0x8],rax
   14002e93a:	mov    rax,rsi
   14002e93d:	mov    rdi,QWORD PTR [rsp+0x30]
   14002e942:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e947:	add    rsp,0x20
   14002e94b:	pop    rsi
   14002e94c:	ret    
   14002e94d:	test   rcx,rcx
   14002e950:	je     0x14002e957
   14002e952:	call   0x1400330c0
   14002e957:	mov    rdx,QWORD PTR [rbx+0x8]
   14002e95b:	mov    rcx,rsi
   14002e95e:	sub    rdx,QWORD PTR [rbx]
   14002e961:	call   0x14002ed60
   14002e966:	test   al,al
   14002e968:	je     0x14002e93a
   14002e96a:	mov    rdx,QWORD PTR [rbx]
   14002e96d:	mov    rbx,QWORD PTR [rbx+0x8]
   14002e971:	mov    rcx,QWORD PTR [rsi]
   14002e974:	sub    rbx,rdx
   14002e977:	mov    r8,rbx
   14002e97a:	jmp    0x14002e92e
   14002e97c:	mov    rax,rcx
   14002e97f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e984:	add    rsp,0x20
   14002e988:	pop    rsi
   14002e989:	ret    
   14002e98a:	int3   
   14002e98b:	int3   
   14002e98c:	int3   
   14002e98d:	int3   
   14002e98e:	int3   
   14002e98f:	int3   
   14002e990:	mov    rax,rsp
   14002e993:	push   rbp
   14002e994:	push   rdi
   14002e995:	push   r12
   14002e997:	lea    rbp,[rax-0x5f]
   14002e99b:	sub    rsp,0x90
   14002e9a2:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14002e9aa:	mov    QWORD PTR [rax+0x10],rbx
   14002e9ae:	mov    QWORD PTR [rax+0x20],rsi
   14002e9b2:	mov    rbx,rdx
   14002e9b5:	mov    rdi,rcx
   14002e9b8:	mov    rsi,QWORD PTR [rcx+0x8]
   14002e9bc:	mov    rax,QWORD PTR [rsi+0x8]
   14002e9c0:	cmp    BYTE PTR [rax+0x41],0x0
   14002e9c4:	jne    0x14002e9e8
   14002e9c6:	mov    r8d,DWORD PTR [rdx]
   14002e9c9:	nop    DWORD PTR [rax+0x0]
   14002e9d0:	cmp    DWORD PTR [rax+0x18],r8d
   14002e9d4:	jge    0x14002e9dc
   14002e9d6:	mov    rax,QWORD PTR [rax+0x10]
   14002e9da:	jmp    0x14002e9e2
   14002e9dc:	mov    rsi,rax
   14002e9df:	mov    rax,QWORD PTR [rax]
   14002e9e2:	cmp    BYTE PTR [rax+0x41],0x0
   14002e9e6:	je     0x14002e9d0
   14002e9e8:	cmp    rsi,QWORD PTR [rcx+0x8]
   14002e9ec:	je     0x14002e9f9
   14002e9ee:	mov    eax,DWORD PTR [rsi+0x18]
   14002e9f1:	cmp    DWORD PTR [rdx],eax
   14002e9f3:	jge    0x14002eb9c
   14002e9f9:	mov    QWORD PTR [rbp+0x7],0x0
   14002ea01:	mov    ecx,0x20
   14002ea06:	call   0x1400331a0
   14002ea0b:	test   rax,rax
   14002ea0e:	je     0x14002eba2
   14002ea14:	mov    QWORD PTR [rbp-0x1],rax
   14002ea18:	mov    QWORD PTR [rax],rax
   14002ea1b:	mov    rax,QWORD PTR [rbp-0x1]
   14002ea1f:	mov    QWORD PTR [rax+0x8],rax
   14002ea23:	mov    rax,QWORD PTR [rbp-0x1]
   14002ea27:	mov    QWORD PTR [rax+0x10],rax
   14002ea2b:	mov    rax,QWORD PTR [rbp-0x1]
   14002ea2f:	mov    BYTE PTR [rax+0x1c],0x1
   14002ea33:	mov    rax,QWORD PTR [rbp-0x1]
   14002ea37:	mov    BYTE PTR [rax+0x1d],0x1
   14002ea3b:	mov    eax,DWORD PTR [rbx]
   14002ea3d:	mov    DWORD PTR [rbp+0x17],eax
   14002ea40:	lea    rax,[rbp+0x1f]
   14002ea44:	mov    QWORD PTR [rbp+0x77],rax
   14002ea48:	lea    rcx,[rbp+0x1f]
   14002ea4c:	call   0x140028010
   14002ea51:	nop
   14002ea52:	lea    rcx,[rbp+0x1f]
   14002ea56:	call   0x140028860
   14002ea5b:	mov    r11,QWORD PTR [rbp+0x27]
   14002ea5f:	mov    rax,QWORD PTR [rbp-0x1]
   14002ea63:	mov    QWORD PTR [rbp+0x27],rax
   14002ea67:	mov    QWORD PTR [rbp-0x1],r11
   14002ea6b:	mov    rcx,QWORD PTR [rbp+0x2f]
   14002ea6f:	mov    rax,QWORD PTR [rbp+0x7]
   14002ea73:	mov    QWORD PTR [rbp+0x2f],rax
   14002ea77:	mov    QWORD PTR [rbp+0x7],rcx
   14002ea7b:	lea    rdx,[rbp+0x17]
   14002ea7f:	mov    rcx,rdi
   14002ea82:	call   0x14002fbe0
   14002ea87:	mov    r9,rax
   14002ea8a:	mov    r8,rsi
   14002ea8d:	lea    rdx,[rbp+0x67]
   14002ea91:	mov    rcx,rdi
   14002ea94:	call   0x14002f5c0
   14002ea99:	mov    rsi,QWORD PTR [rbp+0x67]
   14002ea9d:	lea    rax,[rbp+0x1f]
   14002eaa1:	mov    QWORD PTR [rbp+0x67],rax
   14002eaa5:	mov    r8,QWORD PTR [rbp+0x27]
   14002eaa9:	mov    r9,r8
   14002eaac:	mov    r8,QWORD PTR [r8]
   14002eaaf:	lea    rdx,[rbp+0x77]
   14002eab3:	lea    rcx,[rbp+0x1f]
   14002eab7:	call   0x140027e80
   14002eabc:	nop
   14002eabd:	mov    rcx,QWORD PTR [rbp+0x27]
   14002eac1:	call   0x1400330c0
   14002eac6:	nop
   14002eac7:	mov    rdi,QWORD PTR [rbp-0x1]
   14002eacb:	mov    rbx,QWORD PTR [rdi]
   14002eace:	cmp    rbx,rbx
   14002ead1:	jne    0x14002eb24
   14002ead3:	mov    r12,QWORD PTR [rdi+0x8]
   14002ead7:	mov    rbx,r12
   14002eada:	cmp    BYTE PTR [r12+0x1d],0x0
   14002eae0:	jne    0x14002eb07
   14002eae2:	mov    rdx,QWORD PTR [rbx+0x10]
   14002eae6:	lea    rcx,[rbp-0x9]
   14002eaea:	call   0x140028a70
   14002eaef:	mov    rbx,QWORD PTR [rbx]
   14002eaf2:	mov    rcx,r12
   14002eaf5:	call   0x1400330c0
   14002eafa:	mov    r12,rbx
   14002eafd:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002eb01:	je     0x14002eae2
   14002eb03:	mov    rdi,QWORD PTR [rbp-0x1]
   14002eb07:	mov    QWORD PTR [rdi+0x8],rdi
   14002eb0b:	mov    rax,QWORD PTR [rbp-0x1]
   14002eb0f:	mov    QWORD PTR [rax],rax
   14002eb12:	mov    rax,QWORD PTR [rbp-0x1]
   14002eb16:	mov    QWORD PTR [rax+0x10],rax
   14002eb1a:	mov    QWORD PTR [rbp+0x7],0x0
   14002eb22:	jmp    0x14002eb90
   14002eb24:	cmp    rbx,rdi
   14002eb27:	je     0x14002eb94
   14002eb29:	nop    DWORD PTR [rax+0x0]
   14002eb30:	mov    r8,rbx
   14002eb33:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002eb37:	jne    0x14002eb7e
   14002eb39:	mov    rax,QWORD PTR [rbx+0x10]
   14002eb3d:	cmp    BYTE PTR [rax+0x1d],0x0
   14002eb41:	jne    0x14002eb5e
   14002eb43:	mov    rbx,rax
   14002eb46:	mov    rax,QWORD PTR [rax]
   14002eb49:	cmp    BYTE PTR [rax+0x1d],0x0
   14002eb4d:	jne    0x14002eb7e
   14002eb4f:	nop
   14002eb50:	mov    rbx,rax
   14002eb53:	mov    rax,QWORD PTR [rax]
   14002eb56:	cmp    BYTE PTR [rax+0x1d],0x0
   14002eb5a:	je     0x14002eb50
   14002eb5c:	jmp    0x14002eb7e
   14002eb5e:	mov    rax,QWORD PTR [rbx+0x8]
   14002eb62:	cmp    BYTE PTR [rax+0x1d],0x0
   14002eb66:	jne    0x14002eb7b
   14002eb68:	cmp    rbx,QWORD PTR [rax+0x10]
   14002eb6c:	jne    0x14002eb7b
   14002eb6e:	mov    rbx,rax
   14002eb71:	mov    rax,QWORD PTR [rax+0x8]
   14002eb75:	cmp    BYTE PTR [rax+0x1d],0x0
   14002eb79:	je     0x14002eb68
   14002eb7b:	mov    rbx,rax
   14002eb7e:	lea    rdx,[rbp+0x67]
   14002eb82:	lea    rcx,[rbp-0x9]
   14002eb86:	call   0x140028500
   14002eb8b:	cmp    rbx,rdi
   14002eb8e:	jne    0x14002eb30
   14002eb90:	mov    rdi,QWORD PTR [rbp-0x1]
   14002eb94:	mov    rcx,rdi
   14002eb97:	call   0x1400330c0
   14002eb9c:	lea    rax,[rsi+0x20]
   14002eba0:	jmp    0x14002ebd3
   14002eba2:	mov    QWORD PTR [rbp+0x67],0x0
   14002ebaa:	lea    rdx,[rbp+0x67]
   14002ebae:	lea    rcx,[rbp-0x21]
   14002ebb2:	call   0x140032fd4
   14002ebb7:	lea    r11,[rip+0x39cd2]        # 0x140068890
   14002ebbe:	mov    QWORD PTR [rbp-0x21],r11
   14002ebc2:	lea    rdx,[rip+0x54857]        # 0x140083420
   14002ebc9:	lea    rcx,[rbp-0x21]
   14002ebcd:	call   0x140036358
   14002ebd2:	int3   
   14002ebd3:	lea    r11,[rsp+0x90]
   14002ebdb:	mov    rbx,QWORD PTR [r11+0x28]
   14002ebdf:	mov    rsi,QWORD PTR [r11+0x38]
   14002ebe3:	mov    rsp,r11
   14002ebe6:	pop    r12
   14002ebe8:	pop    rdi
   14002ebe9:	pop    rbp
   14002ebea:	ret    
   14002ebeb:	int3   
   14002ebec:	int3   
   14002ebed:	int3   
   14002ebee:	int3   
   14002ebef:	int3   
   14002ebf0:	cmp    rcx,rdx
   14002ebf3:	je     0x14002ec40
   14002ebf5:	mov    QWORD PTR [rsp+0x10],rbx
   14002ebfa:	push   rdi
   14002ebfb:	sub    rsp,0x20
   14002ebff:	mov    QWORD PTR [rsp+0x30],rsi
   14002ec04:	mov    rdi,rdx
   14002ec07:	mov    rbx,rcx
   14002ec0a:	xor    esi,esi
   14002ec0c:	nop    DWORD PTR [rax+0x0]
   14002ec10:	mov    rcx,QWORD PTR [rbx]
   14002ec13:	test   rcx,rcx
   14002ec16:	je     0x14002ec1d
   14002ec18:	call   0x1400330c0
   14002ec1d:	mov    QWORD PTR [rbx],rsi
   14002ec20:	mov    QWORD PTR [rbx+0x8],rsi
   14002ec24:	mov    QWORD PTR [rbx+0x10],rsi
   14002ec28:	add    rbx,0x20
   14002ec2c:	cmp    rbx,rdi
   14002ec2f:	jne    0x14002ec10
   14002ec31:	mov    rsi,QWORD PTR [rsp+0x30]
   14002ec36:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ec3b:	add    rsp,0x20
   14002ec3f:	pop    rdi
   14002ec40:	repz ret 
   14002ec42:	int3   
   14002ec43:	int3   
   14002ec44:	int3   
   14002ec45:	int3   
   14002ec46:	int3   
   14002ec47:	int3   
   14002ec48:	int3   
   14002ec49:	int3   
   14002ec4a:	int3   
   14002ec4b:	int3   
   14002ec4c:	int3   
   14002ec4d:	int3   
   14002ec4e:	int3   
   14002ec4f:	int3   
   14002ec50:	sub    rsp,0x28
   14002ec54:	mov    rax,QWORD PTR [rcx]
   14002ec57:	mov    r8,QWORD PTR [rcx+0x8]
   14002ec5b:	mov    r9,rcx
   14002ec5e:	sub    r8,rax
   14002ec61:	movabs rcx,0x7fffffffffffffe
   14002ec6b:	sar    r8,0x5
   14002ec6f:	cmp    r8,rcx
   14002ec72:	jbe    0x14002ec81
   14002ec74:	lea    rcx,[rip+0x3c9ad]        # 0x14006b628
   14002ec7b:	call   0x140032d00
   14002ec80:	int3   
   14002ec81:	mov    rdx,QWORD PTR [r9+0x10]
   14002ec85:	inc    r8
   14002ec88:	sub    rdx,rax
   14002ec8b:	sar    rdx,0x5
   14002ec8f:	cmp    r8,rdx
   14002ec92:	jbe    0x14002ecd3
   14002ec94:	mov    rcx,rdx
   14002ec97:	movabs rax,0x7ffffffffffffff
   14002eca1:	shr    rcx,1
   14002eca4:	sub    rax,rcx
   14002eca7:	cmp    rax,rdx
   14002ecaa:	jae    0x14002ecc1
   14002ecac:	xor    edx,edx
   14002ecae:	mov    rcx,r9
   14002ecb1:	cmp    rdx,r8
   14002ecb4:	cmovb  rdx,r8
   14002ecb8:	add    rsp,0x28
   14002ecbc:	jmp    0x14002ef90
   14002ecc1:	add    rdx,rcx
   14002ecc4:	mov    rcx,r9
   14002ecc7:	cmp    rdx,r8
   14002ecca:	cmovb  rdx,r8
   14002ecce:	call   0x14002ef90
   14002ecd3:	add    rsp,0x28
   14002ecd7:	ret    
   14002ecd8:	int3   
   14002ecd9:	int3   
   14002ecda:	int3   
   14002ecdb:	int3   
   14002ecdc:	int3   
   14002ecdd:	int3   
   14002ecde:	int3   
   14002ecdf:	int3   
   14002ece0:	mov    QWORD PTR [rsp+0x10],rbx
   14002ece5:	mov    QWORD PTR [rsp+0x18],rbp
   14002ecea:	push   rdi
   14002eceb:	sub    rsp,0x20
   14002ecef:	mov    rbx,QWORD PTR [rcx]
   14002ecf2:	xor    ebp,ebp
   14002ecf4:	mov    rdi,rcx
   14002ecf7:	test   rbx,rbx
   14002ecfa:	je     0x14002ed3e
   14002ecfc:	mov    QWORD PTR [rsp+0x30],rsi
   14002ed01:	mov    rsi,QWORD PTR [rcx+0x8]
   14002ed05:	cmp    rbx,rsi
   14002ed08:	je     0x14002ed31
   14002ed0a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ed10:	mov    rcx,QWORD PTR [rbx]
   14002ed13:	test   rcx,rcx
   14002ed16:	je     0x14002ed1d
   14002ed18:	call   0x1400330c0
   14002ed1d:	mov    QWORD PTR [rbx],rbp
   14002ed20:	mov    QWORD PTR [rbx+0x8],rbp
   14002ed24:	mov    QWORD PTR [rbx+0x10],rbp
   14002ed28:	add    rbx,0x20
   14002ed2c:	cmp    rbx,rsi
   14002ed2f:	jne    0x14002ed10
   14002ed31:	mov    rcx,QWORD PTR [rdi]
   14002ed34:	call   0x1400330c0
   14002ed39:	mov    rsi,QWORD PTR [rsp+0x30]
   14002ed3e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ed43:	mov    QWORD PTR [rdi],rbp
   14002ed46:	mov    QWORD PTR [rdi+0x8],rbp
   14002ed4a:	mov    QWORD PTR [rdi+0x10],rbp
   14002ed4e:	mov    rbp,QWORD PTR [rsp+0x40]
   14002ed53:	add    rsp,0x20
   14002ed57:	pop    rdi
   14002ed58:	ret    
   14002ed59:	int3   
   14002ed5a:	int3   
   14002ed5b:	int3   
   14002ed5c:	int3   
   14002ed5d:	int3   
   14002ed5e:	int3   
   14002ed5f:	int3   
   14002ed60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ed65:	push   rdi
   14002ed66:	sub    rsp,0x20
   14002ed6a:	xor    eax,eax
   14002ed6c:	mov    rbx,rdx
   14002ed6f:	mov    rdi,rcx
   14002ed72:	mov    QWORD PTR [rcx],rax
   14002ed75:	mov    QWORD PTR [rcx+0x8],rax
   14002ed79:	mov    QWORD PTR [rcx+0x10],rax
   14002ed7d:	test   rdx,rdx
   14002ed80:	je     0x14002edad
   14002ed82:	cmp    rdx,0xffffffffffffffff
   14002ed86:	jbe    0x14002ed95
   14002ed88:	lea    rcx,[rip+0x3c899]        # 0x14006b628
   14002ed8f:	call   0x140032d00
   14002ed94:	int3   
   14002ed95:	mov    rcx,rdx
   14002ed98:	call   0x140028140
   14002ed9d:	mov    QWORD PTR [rdi],rax
   14002eda0:	mov    QWORD PTR [rdi+0x8],rax
   14002eda4:	add    rax,rbx
   14002eda7:	mov    QWORD PTR [rdi+0x10],rax
   14002edab:	mov    al,0x1
   14002edad:	mov    rbx,QWORD PTR [rsp+0x30]
   14002edb2:	add    rsp,0x20
   14002edb6:	pop    rdi
   14002edb7:	ret    
   14002edb8:	int3   
   14002edb9:	int3   
   14002edba:	int3   
   14002edbb:	int3   
   14002edbc:	int3   
   14002edbd:	int3   
   14002edbe:	int3   
   14002edbf:	int3   
   14002edc0:	sub    rsp,0x28
   14002edc4:	mov    rax,QWORD PTR [rcx]
   14002edc7:	mov    r8,QWORD PTR [rcx+0x8]
   14002edcb:	mov    r9,rcx
   14002edce:	sub    r8,rax
   14002edd1:	movabs rcx,0x1ffffffffffffffe
   14002eddb:	sar    r8,0x3
   14002eddf:	cmp    r8,rcx
   14002ede2:	jbe    0x14002edf1
   14002ede4:	lea    rcx,[rip+0x3c83d]        # 0x14006b628
   14002edeb:	call   0x140032d00
   14002edf0:	int3   
   14002edf1:	mov    rdx,QWORD PTR [r9+0x10]
   14002edf5:	inc    r8
   14002edf8:	sub    rdx,rax
   14002edfb:	sar    rdx,0x3
   14002edff:	cmp    r8,rdx
   14002ee02:	jbe    0x14002ee43
   14002ee04:	mov    rcx,rdx
   14002ee07:	movabs rax,0x1fffffffffffffff
   14002ee11:	shr    rcx,1
   14002ee14:	sub    rax,rcx
   14002ee17:	cmp    rax,rdx
   14002ee1a:	jae    0x14002ee31
   14002ee1c:	xor    edx,edx
   14002ee1e:	mov    rcx,r9
   14002ee21:	cmp    rdx,r8
   14002ee24:	cmovb  rdx,r8
   14002ee28:	add    rsp,0x28
   14002ee2c:	jmp    0x14002f0c0
   14002ee31:	add    rdx,rcx
   14002ee34:	mov    rcx,r9
   14002ee37:	cmp    rdx,r8
   14002ee3a:	cmovb  rdx,r8
   14002ee3e:	call   0x14002f0c0
   14002ee43:	add    rsp,0x28
   14002ee47:	ret    
   14002ee48:	int3   
   14002ee49:	int3   
   14002ee4a:	int3   
   14002ee4b:	int3   
   14002ee4c:	int3   
   14002ee4d:	int3   
   14002ee4e:	int3   
   14002ee4f:	int3   
   14002ee50:	mov    QWORD PTR [rsp+0x10],rbx
   14002ee55:	mov    QWORD PTR [rsp+0x18],rbp
   14002ee5a:	mov    QWORD PTR [rsp+0x20],rsi
   14002ee5f:	push   rdi
   14002ee60:	sub    rsp,0x30
   14002ee64:	mov    rbx,QWORD PTR [rcx+0x8]
   14002ee68:	mov    rsi,rdx
   14002ee6b:	mov    rbp,rcx
   14002ee6e:	mov    rax,QWORD PTR [rbx+0x8]
   14002ee72:	mov    dil,0x1
   14002ee75:	cmp    BYTE PTR [rax+0x1d],0x0
   14002ee79:	jne    0x14002ee9f
   14002ee7b:	mov    r9d,DWORD PTR [r8]
   14002ee7e:	xchg   ax,ax
   14002ee80:	cmp    r9d,DWORD PTR [rax+0x18]
   14002ee84:	mov    rbx,rax
   14002ee87:	setl   dil
   14002ee8b:	test   dil,dil
   14002ee8e:	je     0x14002ee95
   14002ee90:	mov    rax,QWORD PTR [rax]
   14002ee93:	jmp    0x14002ee99
   14002ee95:	mov    rax,QWORD PTR [rax+0x10]
   14002ee99:	cmp    BYTE PTR [rax+0x1d],0x0
   14002ee9d:	je     0x14002ee80
   14002ee9f:	mov    rax,rbx
   14002eea2:	test   dil,dil
   14002eea5:	je     0x14002ef4a
   14002eeab:	mov    rcx,QWORD PTR [rcx+0x8]
   14002eeaf:	cmp    rbx,QWORD PTR [rcx]
   14002eeb2:	jne    0x14002eee8
   14002eeb4:	mov    rdx,r8
   14002eeb7:	mov    rcx,rbp
   14002eeba:	call   0x140028f00
   14002eebf:	mov    r8b,0x1
   14002eec2:	lea    rdx,[rsp+0x40]
   14002eec7:	mov    r9,rbx
   14002eeca:	mov    rcx,rbp
   14002eecd:	mov    QWORD PTR [rsp+0x20],rax
   14002eed2:	call   0x14002f1d0
   14002eed7:	mov    r11,QWORD PTR [rsp+0x40]
   14002eedc:	mov    QWORD PTR [rsi],r11
   14002eedf:	mov    BYTE PTR [rsi+0x8],0x1
   14002eee3:	jmp    0x14002ef6d
   14002eee8:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002eeec:	je     0x14002eef4
   14002eeee:	mov    rax,QWORD PTR [rbx+0x10]
   14002eef2:	jmp    0x14002ef4a
   14002eef4:	mov    rcx,QWORD PTR [rbx]
   14002eef7:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002eefb:	jne    0x14002ef1f
   14002eefd:	mov    rax,rcx
   14002ef00:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ef04:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002ef08:	jne    0x14002ef4a
   14002ef0a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ef10:	mov    rax,rcx
   14002ef13:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ef17:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002ef1b:	je     0x14002ef10
   14002ef1d:	jmp    0x14002ef4a
   14002ef1f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ef23:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002ef27:	jne    0x14002ef42
   14002ef29:	nop    DWORD PTR [rax+0x0]
   14002ef30:	cmp    rax,QWORD PTR [rcx]
   14002ef33:	jne    0x14002ef42
   14002ef35:	mov    rax,rcx
   14002ef38:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ef3c:	cmp    BYTE PTR [rcx+0x1d],0x0
   14002ef40:	je     0x14002ef30
   14002ef42:	cmp    BYTE PTR [rax+0x1d],0x0
   14002ef46:	cmove  rax,rcx
   14002ef4a:	mov    ecx,DWORD PTR [r8]
   14002ef4d:	cmp    DWORD PTR [rax+0x18],ecx
   14002ef50:	jge    0x14002ef66
   14002ef52:	mov    rdx,r8
   14002ef55:	mov    rcx,rbp
   14002ef58:	call   0x140028f00
   14002ef5d:	movzx  r8d,dil
   14002ef61:	jmp    0x14002eec2
   14002ef66:	mov    QWORD PTR [rdx],rax
   14002ef69:	mov    BYTE PTR [rdx+0x8],0x0
   14002ef6d:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ef72:	mov    rbp,QWORD PTR [rsp+0x50]
   14002ef77:	mov    rax,rsi
   14002ef7a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ef7f:	add    rsp,0x30
   14002ef83:	pop    rdi
   14002ef84:	ret    
   14002ef85:	int3   
   14002ef86:	int3   
   14002ef87:	int3   
   14002ef88:	int3   
   14002ef89:	int3   
   14002ef8a:	int3   
   14002ef8b:	int3   
   14002ef8c:	int3   
   14002ef8d:	int3   
   14002ef8e:	int3   
   14002ef8f:	int3   
   14002ef90:	push   r12
   14002ef92:	sub    rsp,0x30
   14002ef96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ef9f:	mov    QWORD PTR [rsp+0x40],rbx
   14002efa4:	mov    QWORD PTR [rsp+0x50],rsi
   14002efa9:	mov    QWORD PTR [rsp+0x58],rdi
   14002efae:	mov    rdi,rdx
   14002efb1:	mov    rbx,rcx
   14002efb4:	movabs rax,0x7ffffffffffffff
   14002efbe:	cmp    rdx,rax
   14002efc1:	jbe    0x14002efd0
   14002efc3:	lea    rcx,[rip+0x3c65e]        # 0x14006b628
   14002efca:	call   0x140032d00
   14002efcf:	int3   
   14002efd0:	mov    rax,QWORD PTR [rcx+0x10]
   14002efd4:	sub    rax,QWORD PTR [rcx]
   14002efd7:	sar    rax,0x5
   14002efdb:	cmp    rax,rdx
   14002efde:	jae    0x14002f038
   14002efe0:	mov    rcx,rdx
   14002efe3:	call   0x14002f050
   14002efe8:	mov    r12,rax
   14002efeb:	mov    QWORD PTR [rsp+0x48],rax
   14002eff0:	mov    r8,rax
   14002eff3:	mov    rdx,QWORD PTR [rbx+0x8]
   14002eff7:	mov    rcx,QWORD PTR [rbx]
   14002effa:	call   0x14002fd80
   14002efff:	nop
   14002f000:	mov    rdx,QWORD PTR [rbx+0x8]
   14002f004:	mov    rcx,QWORD PTR [rbx]
   14002f007:	mov    rsi,rdx
   14002f00a:	sub    rsi,rcx
   14002f00d:	test   rcx,rcx
   14002f010:	je     0x14002f01f
   14002f012:	call   0x14002ebf0
   14002f017:	mov    rcx,QWORD PTR [rbx]
   14002f01a:	call   0x1400330c0
   14002f01f:	shl    rdi,0x5
   14002f023:	add    rdi,r12
   14002f026:	mov    QWORD PTR [rbx+0x10],rdi
   14002f02a:	and    rsi,0xffffffffffffffe0
   14002f02e:	add    rsi,r12
   14002f031:	mov    QWORD PTR [rbx+0x8],rsi
   14002f035:	mov    QWORD PTR [rbx],r12
   14002f038:	mov    rbx,QWORD PTR [rsp+0x40]
   14002f03d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f042:	mov    rdi,QWORD PTR [rsp+0x58]
   14002f047:	add    rsp,0x30
   14002f04b:	pop    r12
   14002f04d:	ret    
   14002f04e:	int3   
   14002f04f:	int3   
   14002f050:	sub    rsp,0x48
   14002f054:	xor    eax,eax
   14002f056:	test   rcx,rcx
   14002f059:	je     0x14002f0ae
   14002f05b:	movabs rax,0x7ffffffffffffff
   14002f065:	cmp    rcx,rax
   14002f068:	ja     0x14002f078
   14002f06a:	shl    rcx,0x5
   14002f06e:	call   0x1400331a0
   14002f073:	test   rax,rax
   14002f076:	jne    0x14002f0ae
   14002f078:	lea    rdx,[rsp+0x50]
   14002f07d:	lea    rcx,[rsp+0x20]
   14002f082:	mov    QWORD PTR [rsp+0x50],0x0
   14002f08b:	call   0x140032fd4
   14002f090:	lea    r11,[rip+0x397f9]        # 0x140068890
   14002f097:	lea    rdx,[rip+0x54382]        # 0x140083420
   14002f09e:	lea    rcx,[rsp+0x20]
   14002f0a3:	mov    QWORD PTR [rsp+0x20],r11
   14002f0a8:	call   0x140036358
   14002f0ad:	int3   
   14002f0ae:	add    rsp,0x48
   14002f0b2:	ret    
   14002f0b3:	int3   
   14002f0b4:	int3   
   14002f0b5:	int3   
   14002f0b6:	int3   
   14002f0b7:	int3   
   14002f0b8:	int3   
   14002f0b9:	int3   
   14002f0ba:	int3   
   14002f0bb:	int3   
   14002f0bc:	int3   
   14002f0bd:	int3   
   14002f0be:	int3   
   14002f0bf:	int3   
   14002f0c0:	push   r12
   14002f0c2:	sub    rsp,0x40
   14002f0c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f0cf:	mov    QWORD PTR [rsp+0x50],rbx
   14002f0d4:	mov    QWORD PTR [rsp+0x60],rsi
   14002f0d9:	mov    QWORD PTR [rsp+0x68],rdi
   14002f0de:	mov    rsi,rdx
   14002f0e1:	mov    rdi,rcx
   14002f0e4:	movabs rax,0x1fffffffffffffff
   14002f0ee:	cmp    rdx,rax
   14002f0f1:	jbe    0x14002f100
   14002f0f3:	lea    rcx,[rip+0x3c52e]        # 0x14006b628
   14002f0fa:	call   0x140032d00
   14002f0ff:	int3   
   14002f100:	mov    rax,QWORD PTR [rcx+0x10]
   14002f104:	sub    rax,QWORD PTR [rcx]
   14002f107:	sar    rax,0x3
   14002f10b:	cmp    rax,rdx
   14002f10e:	jae    0x14002f1ae
   14002f114:	xor    ebx,ebx
   14002f116:	mov    QWORD PTR [rsp+0x58],rbx
   14002f11b:	test   rdx,rdx
   14002f11e:	je     0x14002f16c
   14002f120:	lea    rcx,[rdx*8+0x0]
   14002f128:	call   0x1400331a0
   14002f12d:	mov    rbx,rax
   14002f130:	mov    QWORD PTR [rsp+0x58],rax
   14002f135:	test   rax,rax
   14002f138:	jne    0x14002f16c
   14002f13a:	mov    QWORD PTR [rsp+0x58],rax
   14002f13f:	lea    rdx,[rsp+0x58]
   14002f144:	lea    rcx,[rsp+0x28]
   14002f149:	call   0x140032fd4
   14002f14e:	lea    r11,[rip+0x3973b]        # 0x140068890
   14002f155:	mov    QWORD PTR [rsp+0x28],r11
   14002f15a:	lea    rdx,[rip+0x542bf]        # 0x140083420
   14002f161:	lea    rcx,[rsp+0x28]
   14002f166:	call   0x140036358
   14002f16b:	nop
   14002f16c:	mov    r8,QWORD PTR [rdi+0x8]
   14002f170:	mov    rdx,QWORD PTR [rdi]
   14002f173:	sub    r8,rdx
   14002f176:	and    r8,0xfffffffffffffff8
   14002f17a:	mov    rcx,rbx
   14002f17d:	call   0x140033260
   14002f182:	nop
   14002f183:	mov    rcx,QWORD PTR [rdi]
   14002f186:	mov    r12,QWORD PTR [rdi+0x8]
   14002f18a:	sub    r12,rcx
   14002f18d:	sar    r12,0x3
   14002f191:	test   rcx,rcx
   14002f194:	je     0x14002f19b
   14002f196:	call   0x1400330c0
   14002f19b:	lea    rax,[rbx+rsi*8]
   14002f19f:	mov    QWORD PTR [rdi+0x10],rax
   14002f1a3:	lea    rax,[rbx+r12*8]
   14002f1a7:	mov    QWORD PTR [rdi+0x8],rax
   14002f1ab:	mov    QWORD PTR [rdi],rbx
   14002f1ae:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f1b3:	mov    rsi,QWORD PTR [rsp+0x60]
   14002f1b8:	mov    rdi,QWORD PTR [rsp+0x68]
   14002f1bd:	add    rsp,0x40
   14002f1c1:	pop    r12
   14002f1c3:	ret    
   14002f1c4:	int3   
   14002f1c5:	int3   
   14002f1c6:	int3   
   14002f1c7:	int3   
   14002f1c8:	int3   
   14002f1c9:	int3   
   14002f1ca:	int3   
   14002f1cb:	int3   
   14002f1cc:	int3   
   14002f1cd:	int3   
   14002f1ce:	int3   
   14002f1cf:	int3   
   14002f1d0:	rex push rbx
   14002f1d2:	sub    rsp,0x20
   14002f1d6:	mov    rax,QWORD PTR [rcx+0x10]
   14002f1da:	mov    r10,rcx
   14002f1dd:	movabs rcx,0x3ffffffffffffffe
   14002f1e7:	mov    rbx,rdx
   14002f1ea:	cmp    rax,rcx
   14002f1ed:	jb     0x14002f206
   14002f1ef:	mov    rcx,QWORD PTR [rsp+0x50]
   14002f1f4:	call   0x1400330c0
   14002f1f9:	lea    rcx,[rip+0x3c0d0]        # 0x14006b2d0
   14002f200:	call   0x140032d00
   14002f205:	int3   
   14002f206:	mov    r11,QWORD PTR [rsp+0x50]
   14002f20b:	inc    rax
   14002f20e:	mov    QWORD PTR [r10+0x10],rax
   14002f212:	mov    QWORD PTR [r11+0x8],r9
   14002f216:	mov    rax,QWORD PTR [r10+0x8]
   14002f21a:	cmp    r9,rax
   14002f21d:	jne    0x14002f230
   14002f21f:	mov    QWORD PTR [rax+0x8],r11
   14002f223:	mov    rax,QWORD PTR [r10+0x8]
   14002f227:	mov    QWORD PTR [rax],r11
   14002f22a:	mov    rax,QWORD PTR [r10+0x8]
   14002f22e:	jmp    0x14002f254
   14002f230:	test   r8b,r8b
   14002f233:	je     0x14002f246
   14002f235:	mov    QWORD PTR [r9],r11
   14002f238:	mov    rax,QWORD PTR [r10+0x8]
   14002f23c:	cmp    r9,QWORD PTR [rax]
   14002f23f:	jne    0x14002f258
   14002f241:	mov    QWORD PTR [rax],r11
   14002f244:	jmp    0x14002f258
   14002f246:	mov    QWORD PTR [r9+0x10],r11
   14002f24a:	mov    rax,QWORD PTR [r10+0x8]
   14002f24e:	cmp    r9,QWORD PTR [rax+0x10]
   14002f252:	jne    0x14002f258
   14002f254:	mov    QWORD PTR [rax+0x10],r11
   14002f258:	mov    rax,QWORD PTR [r11+0x8]
   14002f25c:	mov    rdx,r11
   14002f25f:	cmp    BYTE PTR [rax+0x1c],0x0
   14002f263:	jne    0x14002f44a
   14002f269:	nop    DWORD PTR [rax+0x0]
   14002f270:	mov    rax,QWORD PTR [rdx+0x8]
   14002f274:	mov    rcx,QWORD PTR [rax+0x8]
   14002f278:	cmp    rax,QWORD PTR [rcx]
   14002f27b:	jne    0x14002f358
   14002f281:	mov    r8,QWORD PTR [rcx+0x10]
   14002f285:	cmp    BYTE PTR [r8+0x1c],0x0
   14002f28a:	je     0x14002f362
   14002f290:	cmp    rdx,QWORD PTR [rax+0x10]
   14002f294:	jne    0x14002f2e2
   14002f296:	mov    rcx,QWORD PTR [rax+0x10]
   14002f29a:	mov    rdx,rax
   14002f29d:	mov    rax,QWORD PTR [rcx]
   14002f2a0:	mov    QWORD PTR [rdx+0x10],rax
   14002f2a4:	mov    rax,QWORD PTR [rcx]
   14002f2a7:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f2ab:	jne    0x14002f2b1
   14002f2ad:	mov    QWORD PTR [rax+0x8],rdx
   14002f2b1:	mov    rax,QWORD PTR [rdx+0x8]
   14002f2b5:	mov    QWORD PTR [rcx+0x8],rax
   14002f2b9:	mov    rax,QWORD PTR [r10+0x8]
   14002f2bd:	cmp    rdx,QWORD PTR [rax+0x8]
   14002f2c1:	jne    0x14002f2c9
   14002f2c3:	mov    QWORD PTR [rax+0x8],rcx
   14002f2c7:	jmp    0x14002f2db
   14002f2c9:	mov    rax,QWORD PTR [rdx+0x8]
   14002f2cd:	cmp    rdx,QWORD PTR [rax]
   14002f2d0:	jne    0x14002f2d7
   14002f2d2:	mov    QWORD PTR [rax],rcx
   14002f2d5:	jmp    0x14002f2db
   14002f2d7:	mov    QWORD PTR [rax+0x10],rcx
   14002f2db:	mov    QWORD PTR [rcx],rdx
   14002f2de:	mov    QWORD PTR [rdx+0x8],rcx
   14002f2e2:	mov    rax,QWORD PTR [rdx+0x8]
   14002f2e6:	mov    BYTE PTR [rax+0x1c],0x1
   14002f2ea:	mov    rax,QWORD PTR [rdx+0x8]
   14002f2ee:	mov    rcx,QWORD PTR [rax+0x8]
   14002f2f2:	mov    BYTE PTR [rcx+0x1c],0x0
   14002f2f6:	mov    rax,QWORD PTR [rdx+0x8]
   14002f2fa:	mov    rcx,QWORD PTR [rax+0x8]
   14002f2fe:	mov    r8,QWORD PTR [rcx]
   14002f301:	mov    rax,QWORD PTR [r8+0x10]
   14002f305:	mov    QWORD PTR [rcx],rax
   14002f308:	mov    rax,QWORD PTR [r8+0x10]
   14002f30c:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f310:	jne    0x14002f316
   14002f312:	mov    QWORD PTR [rax+0x8],rcx
   14002f316:	mov    rax,QWORD PTR [rcx+0x8]
   14002f31a:	mov    QWORD PTR [r8+0x8],rax
   14002f31e:	mov    rax,QWORD PTR [r10+0x8]
   14002f322:	cmp    rcx,QWORD PTR [rax+0x8]
   14002f326:	jne    0x14002f335
   14002f328:	mov    QWORD PTR [rax+0x8],r8
   14002f32c:	mov    QWORD PTR [r8+0x10],rcx
   14002f330:	jmp    0x14002f438
   14002f335:	mov    rax,QWORD PTR [rcx+0x8]
   14002f339:	cmp    rcx,QWORD PTR [rax+0x10]
   14002f33d:	jne    0x14002f34c
   14002f33f:	mov    QWORD PTR [rax+0x10],r8
   14002f343:	mov    QWORD PTR [r8+0x10],rcx
   14002f347:	jmp    0x14002f438
   14002f34c:	mov    QWORD PTR [rax],r8
   14002f34f:	mov    QWORD PTR [r8+0x10],rcx
   14002f353:	jmp    0x14002f438
   14002f358:	mov    r8,QWORD PTR [rcx]
   14002f35b:	cmp    BYTE PTR [r8+0x1c],0x0
   14002f360:	jne    0x14002f384
   14002f362:	mov    BYTE PTR [rax+0x1c],0x1
   14002f366:	mov    BYTE PTR [r8+0x1c],0x1
   14002f36b:	mov    rax,QWORD PTR [rdx+0x8]
   14002f36f:	mov    rcx,QWORD PTR [rax+0x8]
   14002f373:	mov    BYTE PTR [rcx+0x1c],0x0
   14002f377:	mov    rax,QWORD PTR [rdx+0x8]
   14002f37b:	mov    rdx,QWORD PTR [rax+0x8]
   14002f37f:	jmp    0x14002f43c
   14002f384:	cmp    rdx,QWORD PTR [rax]
   14002f387:	jne    0x14002f3d7
   14002f389:	mov    rcx,QWORD PTR [rax]
   14002f38c:	mov    rdx,rax
   14002f38f:	mov    rax,QWORD PTR [rcx+0x10]
   14002f393:	mov    QWORD PTR [rdx],rax
   14002f396:	mov    rax,QWORD PTR [rcx+0x10]
   14002f39a:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f39e:	jne    0x14002f3a4
   14002f3a0:	mov    QWORD PTR [rax+0x8],rdx
   14002f3a4:	mov    rax,QWORD PTR [rdx+0x8]
   14002f3a8:	mov    QWORD PTR [rcx+0x8],rax
   14002f3ac:	mov    rax,QWORD PTR [r10+0x8]
   14002f3b0:	cmp    rdx,QWORD PTR [rax+0x8]
   14002f3b4:	jne    0x14002f3bc
   14002f3b6:	mov    QWORD PTR [rax+0x8],rcx
   14002f3ba:	jmp    0x14002f3cf
   14002f3bc:	mov    rax,QWORD PTR [rdx+0x8]
   14002f3c0:	cmp    rdx,QWORD PTR [rax+0x10]
   14002f3c4:	jne    0x14002f3cc
   14002f3c6:	mov    QWORD PTR [rax+0x10],rcx
   14002f3ca:	jmp    0x14002f3cf
   14002f3cc:	mov    QWORD PTR [rax],rcx
   14002f3cf:	mov    QWORD PTR [rcx+0x10],rdx
   14002f3d3:	mov    QWORD PTR [rdx+0x8],rcx
   14002f3d7:	mov    rax,QWORD PTR [rdx+0x8]
   14002f3db:	mov    BYTE PTR [rax+0x1c],0x1
   14002f3df:	mov    rax,QWORD PTR [rdx+0x8]
   14002f3e3:	mov    rcx,QWORD PTR [rax+0x8]
   14002f3e7:	mov    BYTE PTR [rcx+0x1c],0x0
   14002f3eb:	mov    rax,QWORD PTR [rdx+0x8]
   14002f3ef:	mov    rcx,QWORD PTR [rax+0x8]
   14002f3f3:	mov    r8,QWORD PTR [rcx+0x10]
   14002f3f7:	mov    rax,QWORD PTR [r8]
   14002f3fa:	mov    QWORD PTR [rcx+0x10],rax
   14002f3fe:	mov    rax,QWORD PTR [r8]
   14002f401:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f405:	jne    0x14002f40b
   14002f407:	mov    QWORD PTR [rax+0x8],rcx
   14002f40b:	mov    rax,QWORD PTR [rcx+0x8]
   14002f40f:	mov    QWORD PTR [r8+0x8],rax
   14002f413:	mov    rax,QWORD PTR [r10+0x8]
   14002f417:	cmp    rcx,QWORD PTR [rax+0x8]
   14002f41b:	jne    0x14002f423
   14002f41d:	mov    QWORD PTR [rax+0x8],r8
   14002f421:	jmp    0x14002f435
   14002f423:	mov    rax,QWORD PTR [rcx+0x8]
   14002f427:	cmp    rcx,QWORD PTR [rax]
   14002f42a:	jne    0x14002f431
   14002f42c:	mov    QWORD PTR [rax],r8
   14002f42f:	jmp    0x14002f435
   14002f431:	mov    QWORD PTR [rax+0x10],r8
   14002f435:	mov    QWORD PTR [r8],rcx
   14002f438:	mov    QWORD PTR [rcx+0x8],r8
   14002f43c:	mov    rax,QWORD PTR [rdx+0x8]
   14002f440:	cmp    BYTE PTR [rax+0x1c],0x0
   14002f444:	je     0x14002f270
   14002f44a:	mov    rax,QWORD PTR [r10+0x8]
   14002f44e:	mov    QWORD PTR [rbx],r11
   14002f451:	mov    rcx,QWORD PTR [rax+0x8]
   14002f455:	mov    rax,rbx
   14002f458:	mov    BYTE PTR [rcx+0x1c],0x1
   14002f45c:	add    rsp,0x20
   14002f460:	pop    rbx
   14002f461:	ret    
   14002f462:	int3   
   14002f463:	int3   
   14002f464:	int3   
   14002f465:	int3   
   14002f466:	int3   
   14002f467:	int3   
   14002f468:	int3   
   14002f469:	int3   
   14002f46a:	int3   
   14002f46b:	int3   
   14002f46c:	int3   
   14002f46d:	int3   
   14002f46e:	int3   
   14002f46f:	int3   
   14002f470:	mov    QWORD PTR [rsp+0x10],rdx
   14002f475:	mov    QWORD PTR [rsp+0x18],r8
   14002f47a:	mov    QWORD PTR [rsp+0x20],r9
   14002f47f:	sub    rsp,0x28
   14002f483:	mov    r8,rdx
   14002f486:	lea    r9,[rsp+0x40]
   14002f48b:	mov    edx,0x1e
   14002f490:	call   0x140033b44
   14002f495:	add    rsp,0x28
   14002f499:	ret    
   14002f49a:	int3   
   14002f49b:	int3   
   14002f49c:	int3   
   14002f49d:	int3   
   14002f49e:	int3   
   14002f49f:	int3   
   14002f4a0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f4a5:	push   rdi
   14002f4a6:	sub    rsp,0x30
   14002f4aa:	mov    r9,QWORD PTR [rcx+0x8]
   14002f4ae:	mov    r11,r8
   14002f4b1:	mov    rdi,rdx
   14002f4b4:	mov    rax,QWORD PTR [r9+0x8]
   14002f4b8:	mov    r8b,0x1
   14002f4bb:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f4bf:	jne    0x14002f4ef
   14002f4c1:	mov    r10d,DWORD PTR [r11+0x18]
   14002f4c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f4d0:	cmp    r10d,DWORD PTR [rax+0x18]
   14002f4d4:	mov    r9,rax
   14002f4d7:	setl   r8b
   14002f4db:	test   r8b,r8b
   14002f4de:	je     0x14002f4e5
   14002f4e0:	mov    rax,QWORD PTR [rax]
   14002f4e3:	jmp    0x14002f4e9
   14002f4e5:	mov    rax,QWORD PTR [rax+0x10]
   14002f4e9:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f4ed:	je     0x14002f4d0
   14002f4ef:	mov    rbx,r9
   14002f4f2:	test   r8b,r8b
   14002f4f5:	je     0x14002f58a
   14002f4fb:	mov    rax,QWORD PTR [rcx+0x8]
   14002f4ff:	cmp    r9,QWORD PTR [rax]
   14002f502:	jne    0x14002f52e
   14002f504:	mov    r8b,0x1
   14002f507:	lea    rdx,[rsp+0x40]
   14002f50c:	mov    QWORD PTR [rsp+0x20],r11
   14002f511:	call   0x14002f1d0
   14002f516:	mov    BYTE PTR [rdi+0x8],0x1
   14002f51a:	mov    rcx,QWORD PTR [rax]
   14002f51d:	mov    rax,rdi
   14002f520:	mov    QWORD PTR [rdi],rcx
   14002f523:	mov    rbx,QWORD PTR [rsp+0x48]
   14002f528:	add    rsp,0x30
   14002f52c:	pop    rdi
   14002f52d:	ret    
   14002f52e:	cmp    BYTE PTR [r9+0x1d],0x0
   14002f533:	je     0x14002f53b
   14002f535:	mov    rbx,QWORD PTR [r9+0x10]
   14002f539:	jmp    0x14002f58a
   14002f53b:	mov    rax,QWORD PTR [r9]
   14002f53e:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f542:	jne    0x14002f560
   14002f544:	mov    rbx,rax
   14002f547:	mov    rax,QWORD PTR [rax+0x10]
   14002f54b:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f54f:	jne    0x14002f58a
   14002f551:	mov    rbx,rax
   14002f554:	mov    rax,QWORD PTR [rax+0x10]
   14002f558:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f55c:	je     0x14002f551
   14002f55e:	jmp    0x14002f58a
   14002f560:	mov    rax,QWORD PTR [r9+0x8]
   14002f564:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f568:	jne    0x14002f582
   14002f56a:	nop    WORD PTR [rax+rax*1+0x0]
   14002f570:	cmp    rbx,QWORD PTR [rax]
   14002f573:	jne    0x14002f582
   14002f575:	mov    rbx,rax
   14002f578:	mov    rax,QWORD PTR [rax+0x8]
   14002f57c:	cmp    BYTE PTR [rax+0x1d],0x0
   14002f580:	je     0x14002f570
   14002f582:	cmp    BYTE PTR [rbx+0x1d],0x0
   14002f586:	cmove  rbx,rax
   14002f58a:	mov    eax,DWORD PTR [r11+0x18]
   14002f58e:	cmp    DWORD PTR [rbx+0x18],eax
   14002f591:	jl     0x14002f507
   14002f597:	mov    rcx,r11
   14002f59a:	call   0x1400330c0
   14002f59f:	mov    QWORD PTR [rdi],rbx
   14002f5a2:	mov    rbx,QWORD PTR [rsp+0x48]
   14002f5a7:	mov    BYTE PTR [rdi+0x8],0x0
   14002f5ab:	mov    rax,rdi
   14002f5ae:	add    rsp,0x30
   14002f5b2:	pop    rdi
   14002f5b3:	ret    
   14002f5b4:	int3   
   14002f5b5:	int3   
   14002f5b6:	int3   
   14002f5b7:	int3   
   14002f5b8:	int3   
   14002f5b9:	int3   
   14002f5ba:	int3   
   14002f5bb:	int3   
   14002f5bc:	int3   
   14002f5bd:	int3   
   14002f5be:	int3   
   14002f5bf:	int3   
   14002f5c0:	rex push rbx
   14002f5c2:	sub    rsp,0x40
   14002f5c6:	cmp    QWORD PTR [rcx+0x10],0x0
   14002f5cb:	mov    r10,r9
   14002f5ce:	mov    rbx,rdx
   14002f5d1:	mov    r11,rcx
   14002f5d4:	jne    0x14002f5f0
   14002f5d6:	mov    QWORD PTR [rsp+0x20],r9
   14002f5db:	mov    r9,QWORD PTR [rcx+0x8]
   14002f5df:	mov    r8b,0x1
   14002f5e2:	call   0x14002f920
   14002f5e7:	mov    rax,rbx
   14002f5ea:	add    rsp,0x40
   14002f5ee:	pop    rbx
   14002f5ef:	ret    
   14002f5f0:	mov    rcx,QWORD PTR [rcx+0x8]
   14002f5f4:	mov    QWORD PTR [rsp+0x50],rsi
   14002f5f9:	cmp    r8,QWORD PTR [rcx]
   14002f5fc:	jne    0x14002f62d
   14002f5fe:	mov    eax,DWORD PTR [r8+0x18]
   14002f602:	cmp    DWORD PTR [r9+0x18],eax
   14002f606:	jge    0x14002f7ab
   14002f60c:	mov    QWORD PTR [rsp+0x20],r9
   14002f611:	mov    r9,r8
   14002f614:	mov    rcx,r11
   14002f617:	mov    r8b,0x1
   14002f61a:	call   0x14002f920
   14002f61f:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f624:	mov    rax,rbx
   14002f627:	add    rsp,0x40
   14002f62b:	pop    rbx
   14002f62c:	ret    
   14002f62d:	cmp    r8,rcx
   14002f630:	jne    0x14002f662
   14002f632:	mov    r9,QWORD PTR [rcx+0x10]
   14002f636:	mov    eax,DWORD PTR [r10+0x18]
   14002f63a:	cmp    DWORD PTR [r9+0x18],eax
   14002f63e:	jge    0x14002f7ab
   14002f644:	xor    r8d,r8d
   14002f647:	mov    rcx,r11
   14002f64a:	mov    QWORD PTR [rsp+0x20],r10
   14002f64f:	call   0x14002f920
   14002f654:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f659:	mov    rax,rbx
   14002f65c:	add    rsp,0x40
   14002f660:	pop    rbx
   14002f661:	ret    
   14002f662:	mov    esi,DWORD PTR [r9+0x18]
   14002f666:	cmp    DWORD PTR [r8+0x18],esi
   14002f66a:	jle    0x14002f719
   14002f670:	cmp    BYTE PTR [r8+0x41],0x0
   14002f675:	mov    rax,r8
   14002f678:	je     0x14002f680
   14002f67a:	mov    r9,QWORD PTR [r8+0x10]
   14002f67e:	jmp    0x14002f6dd
   14002f680:	mov    r9,QWORD PTR [r8]
   14002f683:	cmp    BYTE PTR [r9+0x41],0x0
   14002f688:	jne    0x14002f6af
   14002f68a:	mov    rax,QWORD PTR [r9+0x10]
   14002f68e:	cmp    BYTE PTR [rax+0x41],0x0
   14002f692:	jne    0x14002f6dd
   14002f694:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f6a0:	mov    r9,rax
   14002f6a3:	mov    rax,QWORD PTR [rax+0x10]
   14002f6a7:	cmp    BYTE PTR [rax+0x41],0x0
   14002f6ab:	je     0x14002f6a0
   14002f6ad:	jmp    0x14002f6dd
   14002f6af:	mov    rdx,QWORD PTR [r8+0x8]
   14002f6b3:	cmp    BYTE PTR [rdx+0x41],0x0
   14002f6b7:	jne    0x14002f6d2
   14002f6b9:	nop    DWORD PTR [rax+0x0]
   14002f6c0:	cmp    rax,QWORD PTR [rdx]
   14002f6c3:	jne    0x14002f6d2
   14002f6c5:	mov    rax,rdx
   14002f6c8:	mov    rdx,QWORD PTR [rdx+0x8]
   14002f6cc:	cmp    BYTE PTR [rdx+0x41],0x0
   14002f6d0:	je     0x14002f6c0
   14002f6d2:	cmp    BYTE PTR [rax+0x41],0x0
   14002f6d6:	mov    r9,rax
   14002f6d9:	cmove  r9,rdx
   14002f6dd:	cmp    DWORD PTR [r9+0x18],esi
   14002f6e1:	jge    0x14002f715
   14002f6e3:	mov    rax,QWORD PTR [r9+0x10]
   14002f6e7:	mov    QWORD PTR [rsp+0x20],r10
   14002f6ec:	mov    rdx,rbx
   14002f6ef:	cmp    BYTE PTR [rax+0x41],0x0
   14002f6f3:	mov    rcx,r11
   14002f6f6:	jne    0x14002f795
   14002f6fc:	mov    r9,r8
   14002f6ff:	mov    r8b,0x1
   14002f702:	call   0x14002f920
   14002f707:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f70c:	mov    rax,rbx
   14002f70f:	add    rsp,0x40
   14002f713:	pop    rbx
   14002f714:	ret    
   14002f715:	cmp    DWORD PTR [r8+0x18],esi
   14002f719:	jge    0x14002f7ab
   14002f71f:	cmp    BYTE PTR [r8+0x41],0x0
   14002f724:	mov    r9,r8
   14002f727:	jne    0x14002f76e
   14002f729:	mov    rax,QWORD PTR [r8+0x10]
   14002f72d:	cmp    BYTE PTR [rax+0x41],0x0
   14002f731:	jne    0x14002f74e
   14002f733:	mov    r9,rax
   14002f736:	mov    rax,QWORD PTR [rax]
   14002f739:	cmp    BYTE PTR [rax+0x41],0x0
   14002f73d:	jne    0x14002f76e
   14002f73f:	nop
   14002f740:	mov    r9,rax
   14002f743:	mov    rax,QWORD PTR [rax]
   14002f746:	cmp    BYTE PTR [rax+0x41],0x0
   14002f74a:	je     0x14002f740
   14002f74c:	jmp    0x14002f76e
   14002f74e:	mov    rax,QWORD PTR [r8+0x8]
   14002f752:	cmp    BYTE PTR [rax+0x41],0x0
   14002f756:	jne    0x14002f76b
   14002f758:	cmp    r9,QWORD PTR [rax+0x10]
   14002f75c:	jne    0x14002f76b
   14002f75e:	mov    r9,rax
   14002f761:	mov    rax,QWORD PTR [rax+0x8]
   14002f765:	cmp    BYTE PTR [rax+0x41],0x0
   14002f769:	je     0x14002f758
   14002f76b:	mov    r9,rax
   14002f76e:	cmp    r9,rcx
   14002f771:	je     0x14002f779
   14002f773:	cmp    esi,DWORD PTR [r9+0x18]
   14002f777:	jge    0x14002f7ab
   14002f779:	mov    rax,QWORD PTR [r8+0x10]
   14002f77d:	mov    QWORD PTR [rsp+0x20],r10
   14002f782:	mov    rdx,rbx
   14002f785:	cmp    BYTE PTR [rax+0x41],0x0
   14002f789:	mov    rcx,r11
   14002f78c:	je     0x14002f6ff
   14002f792:	mov    r9,r8
   14002f795:	xor    r8d,r8d
   14002f798:	call   0x14002f920
   14002f79d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f7a2:	mov    rax,rbx
   14002f7a5:	add    rsp,0x40
   14002f7a9:	pop    rbx
   14002f7aa:	ret    
   14002f7ab:	lea    rdx,[rsp+0x30]
   14002f7b0:	mov    r8,r10
   14002f7b3:	mov    rcx,r11
   14002f7b6:	call   0x14002f7d0
   14002f7bb:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f7c0:	mov    rcx,QWORD PTR [rax]
   14002f7c3:	mov    rax,rbx
   14002f7c6:	mov    QWORD PTR [rbx],rcx
   14002f7c9:	add    rsp,0x40
   14002f7cd:	pop    rbx
   14002f7ce:	ret    
   14002f7cf:	int3   
   14002f7d0:	rex push rbp
   14002f7d2:	push   rsi
   14002f7d3:	push   rdi
   14002f7d4:	sub    rsp,0x40
   14002f7d8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002f7e1:	mov    QWORD PTR [rsp+0x68],rbx
   14002f7e6:	mov    rbp,r8
   14002f7e9:	mov    rsi,rdx
   14002f7ec:	mov    r9,QWORD PTR [rcx+0x8]
   14002f7f0:	mov    rax,QWORD PTR [r9+0x8]
   14002f7f4:	mov    r8b,0x1
   14002f7f7:	cmp    BYTE PTR [rax+0x41],0x0
   14002f7fb:	jne    0x14002f82f
   14002f7fd:	mov    r10d,DWORD PTR [rbp+0x18]
   14002f801:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f810:	mov    r9,rax
   14002f813:	cmp    r10d,DWORD PTR [rax+0x18]
   14002f817:	setl   r8b
   14002f81b:	test   r8b,r8b
   14002f81e:	je     0x14002f825
   14002f820:	mov    rax,QWORD PTR [rax]
   14002f823:	jmp    0x14002f829
   14002f825:	mov    rax,QWORD PTR [rax+0x10]
   14002f829:	cmp    BYTE PTR [rax+0x41],0x0
   14002f82d:	je     0x14002f810
   14002f82f:	mov    rbx,r9
   14002f832:	test   r8b,r8b
   14002f835:	je     0x14002f8ca
   14002f83b:	mov    rax,QWORD PTR [rcx+0x8]
   14002f83f:	cmp    r9,QWORD PTR [rax]
   14002f842:	jne    0x14002f865
   14002f844:	mov    r8b,0x1
   14002f847:	mov    QWORD PTR [rsp+0x20],rbp
   14002f84c:	lea    rdx,[rsp+0x60]
   14002f851:	call   0x14002f920
   14002f856:	mov    rcx,QWORD PTR [rax]
   14002f859:	mov    QWORD PTR [rsi],rcx
   14002f85c:	mov    BYTE PTR [rsi+0x8],0x1
   14002f860:	jmp    0x14002f90f
   14002f865:	cmp    BYTE PTR [r9+0x41],0x0
   14002f86a:	je     0x14002f872
   14002f86c:	mov    rbx,QWORD PTR [r9+0x10]
   14002f870:	jmp    0x14002f8ca
   14002f872:	mov    rax,QWORD PTR [r9]
   14002f875:	cmp    BYTE PTR [rax+0x41],0x0
   14002f879:	jne    0x14002f89f
   14002f87b:	mov    rbx,rax
   14002f87e:	mov    rax,QWORD PTR [rax+0x10]
   14002f882:	cmp    BYTE PTR [rax+0x41],0x0
   14002f886:	jne    0x14002f8ca
   14002f888:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f890:	mov    rbx,rax
   14002f893:	mov    rax,QWORD PTR [rax+0x10]
   14002f897:	cmp    BYTE PTR [rax+0x41],0x0
   14002f89b:	je     0x14002f890
   14002f89d:	jmp    0x14002f8ca
   14002f89f:	mov    rax,QWORD PTR [r9+0x8]
   14002f8a3:	cmp    BYTE PTR [rax+0x41],0x0
   14002f8a7:	jne    0x14002f8c2
   14002f8a9:	nop    DWORD PTR [rax+0x0]
   14002f8b0:	cmp    rbx,QWORD PTR [rax]
   14002f8b3:	jne    0x14002f8c2
   14002f8b5:	mov    rbx,rax
   14002f8b8:	mov    rax,QWORD PTR [rax+0x8]
   14002f8bc:	cmp    BYTE PTR [rax+0x41],0x0
   14002f8c0:	je     0x14002f8b0
   14002f8c2:	cmp    BYTE PTR [rbx+0x41],0x0
   14002f8c6:	cmove  rbx,rax
   14002f8ca:	mov    eax,DWORD PTR [rbp+0x18]
   14002f8cd:	cmp    DWORD PTR [rbx+0x18],eax
   14002f8d0:	jl     0x14002f847
   14002f8d6:	lea    rdi,[rbp+0x20]
   14002f8da:	mov    QWORD PTR [rsp+0x60],rdi
   14002f8df:	mov    r8,QWORD PTR [rdi+0x8]
   14002f8e3:	mov    r9,r8
   14002f8e6:	mov    r8,QWORD PTR [r8]
   14002f8e9:	lea    rdx,[rsp+0x70]
   14002f8ee:	mov    rcx,rdi
   14002f8f1:	call   0x140027e80
   14002f8f6:	nop
   14002f8f7:	mov    rcx,QWORD PTR [rdi+0x8]
   14002f8fb:	call   0x1400330c0
   14002f900:	mov    rcx,rbp
   14002f903:	call   0x1400330c0
   14002f908:	mov    QWORD PTR [rsi],rbx
   14002f90b:	mov    BYTE PTR [rsi+0x8],0x0
   14002f90f:	mov    rax,rsi
   14002f912:	mov    rbx,QWORD PTR [rsp+0x68]
   14002f917:	add    rsp,0x40
   14002f91b:	pop    rdi
   14002f91c:	pop    rsi
   14002f91d:	pop    rbp
   14002f91e:	ret    
   14002f91f:	int3   
   14002f920:	rex push rdi
   14002f922:	sub    rsp,0x30
   14002f926:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002f92f:	mov    QWORD PTR [rsp+0x48],rbx
   14002f934:	mov    rbx,rdx
   14002f937:	mov    r10,rcx
   14002f93a:	mov    rax,QWORD PTR [rcx+0x10]
   14002f93e:	movabs rcx,0x666666666666665
   14002f948:	cmp    rax,rcx
   14002f94b:	jb     0x14002f991
   14002f94d:	mov    rdi,QWORD PTR [rsp+0x60]
   14002f952:	lea    rbx,[rdi+0x20]
   14002f956:	mov    QWORD PTR [rsp+0x40],rbx
   14002f95b:	mov    r8,QWORD PTR [rbx+0x8]
   14002f95f:	mov    r9,r8
   14002f962:	mov    r8,QWORD PTR [r8]
   14002f965:	lea    rdx,[rsp+0x28]
   14002f96a:	mov    rcx,rbx
   14002f96d:	call   0x140027e80
   14002f972:	nop
   14002f973:	mov    rcx,QWORD PTR [rbx+0x8]
   14002f977:	call   0x1400330c0
   14002f97c:	mov    rcx,rdi
   14002f97f:	call   0x1400330c0
   14002f984:	lea    rcx,[rip+0x3b945]        # 0x14006b2d0
   14002f98b:	call   0x140032d00
   14002f990:	int3   
   14002f991:	inc    rax
   14002f994:	mov    QWORD PTR [r10+0x10],rax
   14002f998:	mov    r11,QWORD PTR [rsp+0x60]
   14002f99d:	mov    QWORD PTR [r11+0x8],r9
   14002f9a1:	mov    rax,QWORD PTR [r10+0x8]
   14002f9a5:	cmp    r9,rax
   14002f9a8:	jne    0x14002f9bb
   14002f9aa:	mov    QWORD PTR [rax+0x8],r11
   14002f9ae:	mov    rax,QWORD PTR [r10+0x8]
   14002f9b2:	mov    QWORD PTR [rax],r11
   14002f9b5:	mov    rax,QWORD PTR [r10+0x8]
   14002f9b9:	jmp    0x14002f9df
   14002f9bb:	test   r8b,r8b
   14002f9be:	je     0x14002f9d1
   14002f9c0:	mov    QWORD PTR [r9],r11
   14002f9c3:	mov    rax,QWORD PTR [r10+0x8]
   14002f9c7:	cmp    r9,QWORD PTR [rax]
   14002f9ca:	jne    0x14002f9e3
   14002f9cc:	mov    QWORD PTR [rax],r11
   14002f9cf:	jmp    0x14002f9e3
   14002f9d1:	mov    QWORD PTR [r9+0x10],r11
   14002f9d5:	mov    rax,QWORD PTR [r10+0x8]
   14002f9d9:	cmp    r9,QWORD PTR [rax+0x10]
   14002f9dd:	jne    0x14002f9e3
   14002f9df:	mov    QWORD PTR [rax+0x10],r11
   14002f9e3:	mov    rdx,r11
   14002f9e6:	mov    rax,QWORD PTR [r11+0x8]
   14002f9ea:	cmp    BYTE PTR [rax+0x40],0x0
   14002f9ee:	jne    0x14002fbc0
   14002f9f4:	mov    rax,QWORD PTR [rdx+0x8]
   14002f9f8:	mov    rcx,QWORD PTR [rax+0x8]
   14002f9fc:	cmp    rax,QWORD PTR [rcx]
   14002f9ff:	jne    0x14002face
   14002fa05:	mov    r8,QWORD PTR [rcx+0x10]
   14002fa09:	cmp    BYTE PTR [r8+0x40],0x0
   14002fa0e:	je     0x14002fad8
   14002fa14:	cmp    rdx,QWORD PTR [rax+0x10]
   14002fa18:	jne    0x14002fa66
   14002fa1a:	mov    rdx,rax
   14002fa1d:	mov    rcx,QWORD PTR [rax+0x10]
   14002fa21:	mov    rax,QWORD PTR [rcx]
   14002fa24:	mov    QWORD PTR [rdx+0x10],rax
   14002fa28:	mov    rax,QWORD PTR [rcx]
   14002fa2b:	cmp    BYTE PTR [rax+0x41],0x0
   14002fa2f:	jne    0x14002fa35
   14002fa31:	mov    QWORD PTR [rax+0x8],rdx
   14002fa35:	mov    rax,QWORD PTR [rdx+0x8]
   14002fa39:	mov    QWORD PTR [rcx+0x8],rax
   14002fa3d:	mov    rax,QWORD PTR [r10+0x8]
   14002fa41:	cmp    rdx,QWORD PTR [rax+0x8]
   14002fa45:	jne    0x14002fa4d
   14002fa47:	mov    QWORD PTR [rax+0x8],rcx
   14002fa4b:	jmp    0x14002fa5f
   14002fa4d:	mov    rax,QWORD PTR [rdx+0x8]
   14002fa51:	cmp    rdx,QWORD PTR [rax]
   14002fa54:	jne    0x14002fa5b
   14002fa56:	mov    QWORD PTR [rax],rcx
   14002fa59:	jmp    0x14002fa5f
   14002fa5b:	mov    QWORD PTR [rax+0x10],rcx
   14002fa5f:	mov    QWORD PTR [rcx],rdx
   14002fa62:	mov    QWORD PTR [rdx+0x8],rcx
   14002fa66:	mov    rax,QWORD PTR [rdx+0x8]
   14002fa6a:	mov    BYTE PTR [rax+0x40],0x1
   14002fa6e:	mov    rax,QWORD PTR [rdx+0x8]
   14002fa72:	mov    rcx,QWORD PTR [rax+0x8]
   14002fa76:	mov    BYTE PTR [rcx+0x40],0x0
   14002fa7a:	mov    rax,QWORD PTR [rdx+0x8]
   14002fa7e:	mov    rcx,QWORD PTR [rax+0x8]
   14002fa82:	mov    r8,QWORD PTR [rcx]
   14002fa85:	mov    rax,QWORD PTR [r8+0x10]
   14002fa89:	mov    QWORD PTR [rcx],rax
   14002fa8c:	mov    rax,QWORD PTR [r8+0x10]
   14002fa90:	cmp    BYTE PTR [rax+0x41],0x0
   14002fa94:	jne    0x14002fa9a
   14002fa96:	mov    QWORD PTR [rax+0x8],rcx
   14002fa9a:	mov    rax,QWORD PTR [rcx+0x8]
   14002fa9e:	mov    QWORD PTR [r8+0x8],rax
   14002faa2:	mov    rax,QWORD PTR [r10+0x8]
   14002faa6:	cmp    rcx,QWORD PTR [rax+0x8]
   14002faaa:	jne    0x14002fab2
   14002faac:	mov    QWORD PTR [rax+0x8],r8
   14002fab0:	jmp    0x14002fac5
   14002fab2:	mov    rax,QWORD PTR [rcx+0x8]
   14002fab6:	cmp    rcx,QWORD PTR [rax+0x10]
   14002faba:	jne    0x14002fac2
   14002fabc:	mov    QWORD PTR [rax+0x10],r8
   14002fac0:	jmp    0x14002fac5
   14002fac2:	mov    QWORD PTR [rax],r8
   14002fac5:	mov    QWORD PTR [r8+0x10],rcx
   14002fac9:	jmp    0x14002fbae
   14002face:	mov    r8,QWORD PTR [rcx]
   14002fad1:	cmp    BYTE PTR [r8+0x40],0x0
   14002fad6:	jne    0x14002fafa
   14002fad8:	mov    BYTE PTR [rax+0x40],0x1
   14002fadc:	mov    BYTE PTR [r8+0x40],0x1
   14002fae1:	mov    rax,QWORD PTR [rdx+0x8]
   14002fae5:	mov    rcx,QWORD PTR [rax+0x8]
   14002fae9:	mov    BYTE PTR [rcx+0x40],0x0
   14002faed:	mov    rax,QWORD PTR [rdx+0x8]
   14002faf1:	mov    rdx,QWORD PTR [rax+0x8]
   14002faf5:	jmp    0x14002fbb2
   14002fafa:	cmp    rdx,QWORD PTR [rax]
   14002fafd:	jne    0x14002fb4d
   14002faff:	mov    rdx,rax
   14002fb02:	mov    rcx,QWORD PTR [rax]
   14002fb05:	mov    rax,QWORD PTR [rcx+0x10]
   14002fb09:	mov    QWORD PTR [rdx],rax
   14002fb0c:	mov    rax,QWORD PTR [rcx+0x10]
   14002fb10:	cmp    BYTE PTR [rax+0x41],0x0
   14002fb14:	jne    0x14002fb1a
   14002fb16:	mov    QWORD PTR [rax+0x8],rdx
   14002fb1a:	mov    rax,QWORD PTR [rdx+0x8]
   14002fb1e:	mov    QWORD PTR [rcx+0x8],rax
   14002fb22:	mov    rax,QWORD PTR [r10+0x8]
   14002fb26:	cmp    rdx,QWORD PTR [rax+0x8]
   14002fb2a:	jne    0x14002fb32
   14002fb2c:	mov    QWORD PTR [rax+0x8],rcx
   14002fb30:	jmp    0x14002fb45
   14002fb32:	mov    rax,QWORD PTR [rdx+0x8]
   14002fb36:	cmp    rdx,QWORD PTR [rax+0x10]
   14002fb3a:	jne    0x14002fb42
   14002fb3c:	mov    QWORD PTR [rax+0x10],rcx
   14002fb40:	jmp    0x14002fb45
   14002fb42:	mov    QWORD PTR [rax],rcx
   14002fb45:	mov    QWORD PTR [rcx+0x10],rdx
   14002fb49:	mov    QWORD PTR [rdx+0x8],rcx
   14002fb4d:	mov    rax,QWORD PTR [rdx+0x8]
   14002fb51:	mov    BYTE PTR [rax+0x40],0x1
   14002fb55:	mov    rax,QWORD PTR [rdx+0x8]
   14002fb59:	mov    rcx,QWORD PTR [rax+0x8]
   14002fb5d:	mov    BYTE PTR [rcx+0x40],0x0
   14002fb61:	mov    rax,QWORD PTR [rdx+0x8]
   14002fb65:	mov    rcx,QWORD PTR [rax+0x8]
   14002fb69:	mov    r8,QWORD PTR [rcx+0x10]
   14002fb6d:	mov    rax,QWORD PTR [r8]
   14002fb70:	mov    QWORD PTR [rcx+0x10],rax
   14002fb74:	mov    rax,QWORD PTR [r8]
   14002fb77:	cmp    BYTE PTR [rax+0x41],0x0
   14002fb7b:	jne    0x14002fb81
   14002fb7d:	mov    QWORD PTR [rax+0x8],rcx
   14002fb81:	mov    rax,QWORD PTR [rcx+0x8]
   14002fb85:	mov    QWORD PTR [r8+0x8],rax
   14002fb89:	mov    rax,QWORD PTR [r10+0x8]
   14002fb8d:	cmp    rcx,QWORD PTR [rax+0x8]
   14002fb91:	jne    0x14002fb99
   14002fb93:	mov    QWORD PTR [rax+0x8],r8
   14002fb97:	jmp    0x14002fbab
   14002fb99:	mov    rax,QWORD PTR [rcx+0x8]
   14002fb9d:	cmp    rcx,QWORD PTR [rax]
   14002fba0:	jne    0x14002fba7
   14002fba2:	mov    QWORD PTR [rax],r8
   14002fba5:	jmp    0x14002fbab
   14002fba7:	mov    QWORD PTR [rax+0x10],r8
   14002fbab:	mov    QWORD PTR [r8],rcx
   14002fbae:	mov    QWORD PTR [rcx+0x8],r8
   14002fbb2:	mov    rax,QWORD PTR [rdx+0x8]
   14002fbb6:	cmp    BYTE PTR [rax+0x40],0x0
   14002fbba:	je     0x14002f9f4
   14002fbc0:	mov    rax,QWORD PTR [r10+0x8]
   14002fbc4:	mov    rcx,QWORD PTR [rax+0x8]
   14002fbc8:	mov    BYTE PTR [rcx+0x40],0x1
   14002fbcc:	mov    QWORD PTR [rbx],r11
   14002fbcf:	mov    rax,rbx
   14002fbd2:	mov    rbx,QWORD PTR [rsp+0x48]
   14002fbd7:	add    rsp,0x30
   14002fbdb:	pop    rdi
   14002fbdc:	ret    
   14002fbdd:	int3   
   14002fbde:	int3   
   14002fbdf:	int3   
   14002fbe0:	rex push rdi
   14002fbe2:	sub    rsp,0x30
   14002fbe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fbef:	mov    QWORD PTR [rsp+0x40],rbx
   14002fbf4:	mov    rdi,rdx
   14002fbf7:	call   0x14002c1a0
   14002fbfc:	mov    rbx,rax
   14002fbff:	mov    QWORD PTR [rsp+0x50],rax
   14002fc04:	lea    rcx,[rax+0x18]
   14002fc08:	mov    QWORD PTR [rsp+0x58],rcx
   14002fc0d:	mov    QWORD PTR [rsp+0x28],rcx
   14002fc12:	test   rcx,rcx
   14002fc15:	je     0x14002fc20
   14002fc17:	mov    rdx,rdi
   14002fc1a:	call   0x14002fe00
   14002fc1f:	nop
   14002fc20:	mov    rax,rbx
   14002fc23:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fc28:	add    rsp,0x30
   14002fc2c:	pop    rdi
   14002fc2d:	ret    
   14002fc2e:	int3   
   14002fc2f:	int3   
   14002fc30:	mov    QWORD PTR [rsp+0x10],rbx
   14002fc35:	mov    QWORD PTR [rsp+0x18],rsi
   14002fc3a:	push   rdi
   14002fc3b:	sub    rsp,0x20
   14002fc3f:	mov    rbx,r8
   14002fc42:	mov    rsi,rdx
   14002fc45:	mov    rdi,rcx
   14002fc48:	cmp    rcx,rdx
   14002fc4b:	je     0x14002fccc
   14002fc4d:	mov    QWORD PTR [rsp+0x30],rbp
   14002fc52:	xor    ebp,ebp
   14002fc54:	cmp    rbx,rdi
   14002fc57:	je     0x14002fcba
   14002fc59:	cmp    QWORD PTR [rbx+0x18],0x10
   14002fc5e:	jb     0x14002fc68
   14002fc60:	mov    rcx,QWORD PTR [rbx]
   14002fc63:	call   0x1400330c0
   14002fc68:	mov    QWORD PTR [rbx+0x18],0xf
   14002fc70:	mov    QWORD PTR [rbx+0x10],rbp
   14002fc74:	mov    BYTE PTR [rbx],bpl
   14002fc77:	cmp    QWORD PTR [rdi+0x18],0x10
   14002fc7c:	jae    0x14002fc92
   14002fc7e:	mov    r8,QWORD PTR [rdi+0x10]
   14002fc82:	mov    rdx,rdi
   14002fc85:	mov    rcx,rbx
   14002fc88:	inc    r8
   14002fc8b:	call   0x140033260
   14002fc90:	jmp    0x14002fc9b
   14002fc92:	mov    rax,QWORD PTR [rdi]
   14002fc95:	mov    QWORD PTR [rbx],rax
   14002fc98:	mov    QWORD PTR [rdi],rbp
   14002fc9b:	mov    rax,QWORD PTR [rdi+0x10]
   14002fc9f:	mov    QWORD PTR [rbx+0x10],rax
   14002fca3:	mov    rax,QWORD PTR [rdi+0x18]
   14002fca7:	mov    QWORD PTR [rbx+0x18],rax
   14002fcab:	mov    QWORD PTR [rdi+0x18],0xf
   14002fcb3:	mov    QWORD PTR [rdi+0x10],rbp
   14002fcb7:	mov    BYTE PTR [rdi],bpl
   14002fcba:	add    rdi,0x28
   14002fcbe:	add    rbx,0x28
   14002fcc2:	cmp    rdi,rsi
   14002fcc5:	jne    0x14002fc54
   14002fcc7:	mov    rbp,QWORD PTR [rsp+0x30]
   14002fccc:	mov    rsi,QWORD PTR [rsp+0x40]
   14002fcd1:	mov    rax,rbx
   14002fcd4:	mov    rbx,QWORD PTR [rsp+0x38]
   14002fcd9:	add    rsp,0x20
   14002fcdd:	pop    rdi
   14002fcde:	ret    
   14002fcdf:	int3   
   14002fce0:	mov    QWORD PTR [rsp+0x8],rcx
   14002fce5:	push   rdi
   14002fce6:	sub    rsp,0x30
   14002fcea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fcf3:	mov    QWORD PTR [rsp+0x48],rbx
   14002fcf8:	mov    QWORD PTR [rsp+0x50],rsi
   14002fcfd:	mov    rsi,rdx
   14002fd00:	mov    rbx,rcx
   14002fd03:	xor    eax,eax
   14002fd05:	mov    QWORD PTR [rcx],rax
   14002fd08:	mov    QWORD PTR [rcx+0x8],rax
   14002fd0c:	mov    QWORD PTR [rcx+0x10],rax
   14002fd10:	mov    rdi,QWORD PTR [rdx+0x8]
   14002fd14:	sub    rdi,QWORD PTR [rdx]
   14002fd17:	mov    QWORD PTR [rcx],rax
   14002fd1a:	mov    QWORD PTR [rcx+0x8],rax
   14002fd1e:	mov    QWORD PTR [rcx+0x10],rax
   14002fd22:	je     0x14002fd60
   14002fd24:	cmp    rdi,0xffffffffffffffff
   14002fd28:	jbe    0x14002fd37
   14002fd2a:	lea    rcx,[rip+0x3b8f7]        # 0x14006b628
   14002fd31:	call   0x140032d00
   14002fd36:	int3   
   14002fd37:	mov    rcx,rdi
   14002fd3a:	call   0x140028140
   14002fd3f:	mov    r8,rax
   14002fd42:	mov    QWORD PTR [rbx],rax
   14002fd45:	mov    QWORD PTR [rbx+0x8],rax
   14002fd49:	add    rax,rdi
   14002fd4c:	mov    QWORD PTR [rbx+0x10],rax
   14002fd50:	mov    rdx,QWORD PTR [rsi+0x8]
   14002fd54:	mov    rcx,QWORD PTR [rsi]
   14002fd57:	call   0x14002fe80
   14002fd5c:	mov    QWORD PTR [rbx+0x8],rax
   14002fd60:	mov    rax,rbx
   14002fd63:	mov    rbx,QWORD PTR [rsp+0x48]
   14002fd68:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fd6d:	add    rsp,0x30
   14002fd71:	pop    rdi
   14002fd72:	ret    
   14002fd73:	int3   
   14002fd74:	int3   
   14002fd75:	int3   
   14002fd76:	int3   
   14002fd77:	int3   
   14002fd78:	int3   
   14002fd79:	int3   
   14002fd7a:	int3   
   14002fd7b:	int3   
   14002fd7c:	int3   
   14002fd7d:	int3   
   14002fd7e:	int3   
   14002fd7f:	int3   
   14002fd80:	mov    QWORD PTR [rsp+0x18],r8
   14002fd85:	sub    rsp,0x38
   14002fd89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fd92:	mov    QWORD PTR [rsp+0x40],r8
   14002fd97:	xor    r9d,r9d
   14002fd9a:	nop    WORD PTR [rax+rax*1+0x0]
   14002fda0:	cmp    rcx,rdx
   14002fda3:	je     0x14002fdf5
   14002fda5:	test   r8,r8
   14002fda8:	je     0x14002fde6
   14002fdaa:	mov    QWORD PTR [r8],r9
   14002fdad:	mov    QWORD PTR [r8+0x8],r9
   14002fdb1:	mov    QWORD PTR [r8+0x10],r9
   14002fdb5:	cmp    r8,rcx
   14002fdb8:	je     0x14002fde6
   14002fdba:	mov    QWORD PTR [r8],r9
   14002fdbd:	mov    QWORD PTR [r8+0x8],r9
   14002fdc1:	mov    QWORD PTR [r8+0x10],r9
   14002fdc5:	mov    rax,QWORD PTR [rcx]
   14002fdc8:	mov    QWORD PTR [r8],rax
   14002fdcb:	mov    rax,QWORD PTR [rcx+0x8]
   14002fdcf:	mov    QWORD PTR [r8+0x8],rax
   14002fdd3:	mov    rax,QWORD PTR [rcx+0x10]
   14002fdd7:	mov    QWORD PTR [r8+0x10],rax
   14002fddb:	mov    QWORD PTR [rcx],r9
   14002fdde:	mov    QWORD PTR [rcx+0x8],r9
   14002fde2:	mov    QWORD PTR [rcx+0x10],r9
   14002fde6:	add    r8,0x20
   14002fdea:	mov    QWORD PTR [rsp+0x50],r8
   14002fdef:	add    rcx,0x20
   14002fdf3:	jmp    0x14002fda0
   14002fdf5:	mov    rax,r8
   14002fdf8:	add    rsp,0x38
   14002fdfc:	ret    
   14002fdfd:	int3   
   14002fdfe:	int3   
   14002fdff:	int3   
   14002fe00:	rex push rdi
   14002fe02:	sub    rsp,0x30
   14002fe06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fe0f:	mov    QWORD PTR [rsp+0x48],rbx
   14002fe14:	mov    QWORD PTR [rsp+0x50],rsi
   14002fe19:	mov    rbx,rcx
   14002fe1c:	lea    rsi,[rdx+0x8]
   14002fe20:	mov    eax,DWORD PTR [rdx]
   14002fe22:	mov    DWORD PTR [rcx],eax
   14002fe24:	lea    rdi,[rcx+0x8]
   14002fe28:	mov    QWORD PTR [rsp+0x40],rdi
   14002fe2d:	mov    rcx,rdi
   14002fe30:	call   0x140028010
   14002fe35:	nop
   14002fe36:	cmp    rdi,rsi
   14002fe39:	je     0x14002fe65
   14002fe3b:	mov    rcx,rdi
   14002fe3e:	call   0x140028860
   14002fe43:	mov    rcx,QWORD PTR [rdi+0x8]
   14002fe47:	mov    rax,QWORD PTR [rsi+0x8]
   14002fe4b:	mov    QWORD PTR [rdi+0x8],rax
   14002fe4f:	mov    QWORD PTR [rsi+0x8],rcx
   14002fe53:	mov    rcx,QWORD PTR [rdi+0x10]
   14002fe57:	mov    rax,QWORD PTR [rsi+0x10]
   14002fe5b:	mov    QWORD PTR [rdi+0x10],rax
   14002fe5f:	mov    QWORD PTR [rsi+0x10],rcx
   14002fe63:	jmp    0x14002fe65
   14002fe65:	mov    rax,rbx
   14002fe68:	mov    rbx,QWORD PTR [rsp+0x48]
   14002fe6d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fe72:	add    rsp,0x30
   14002fe76:	pop    rdi
   14002fe77:	ret    
   14002fe78:	int3   
   14002fe79:	int3   
   14002fe7a:	int3   
   14002fe7b:	int3   
   14002fe7c:	int3   
   14002fe7d:	int3   
   14002fe7e:	int3   
   14002fe7f:	int3   
   14002fe80:	mov    QWORD PTR [rsp+0x8],rcx
   14002fe85:	sub    rsp,0x38
   14002fe89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002fe92:	cmp    rcx,rdx
   14002fe95:	je     0x14002feaf
   14002fe97:	test   r8,r8
   14002fe9a:	je     0x14002fea2
   14002fe9c:	movzx  eax,BYTE PTR [rcx]
   14002fe9f:	mov    BYTE PTR [r8],al
   14002fea2:	inc    r8
   14002fea5:	inc    rcx
   14002fea8:	mov    QWORD PTR [rsp+0x40],rcx
   14002fead:	jmp    0x14002fe92
   14002feaf:	mov    rax,r8
   14002feb2:	add    rsp,0x38
   14002feb6:	ret    
   14002feb7:	int3   
   14002feb8:	int3   
   14002feb9:	int3   
   14002feba:	int3   
   14002febb:	int3   
   14002febc:	int3   
   14002febd:	int3   
   14002febe:	int3   
   14002febf:	int3   
   14002fec0:	mov    QWORD PTR [rsp+0x8],rbx
   14002fec5:	push   rdi
   14002fec6:	sub    rsp,0x20
   14002feca:	mov    ebx,edx
   14002fecc:	mov    rdi,rcx
   14002fecf:	call   0x140049d10
   14002fed4:	test   bl,0x1
   14002fed7:	je     0x14002fee1
   14002fed9:	mov    rcx,rdi
   14002fedc:	call   0x1400330c0
   14002fee1:	mov    rax,rdi
   14002fee4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fee9:	add    rsp,0x20
   14002feed:	pop    rdi
   14002feee:	ret    
   14002feef:	int3   
   14002fef0:	mov    QWORD PTR [rsp+0x8],rcx
   14002fef5:	push   rbx
   14002fef6:	sub    rsp,0x30
   14002fefa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ff03:	mov    rbx,rcx
   14002ff06:	mov    r8,QWORD PTR [rcx+0x8]
   14002ff0a:	mov    r9,r8
   14002ff0d:	mov    r8,QWORD PTR [r8]
   14002ff10:	lea    rdx,[rsp+0x48]
   14002ff15:	call   0x1400301d0
   14002ff1a:	nop
   14002ff1b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ff1f:	add    rsp,0x30
   14002ff23:	pop    rbx
   14002ff24:	jmp    0x1400330c0
   14002ff29:	int3   
   14002ff2a:	int3   
   14002ff2b:	int3   
   14002ff2c:	int3   
   14002ff2d:	int3   
   14002ff2e:	int3   
   14002ff2f:	int3   
   14002ff30:	mov    QWORD PTR [rsp+0x10],rbx
   14002ff35:	push   rdi
   14002ff36:	sub    rsp,0x30
   14002ff3a:	mov    rbx,QWORD PTR [rcx+0x8]
   14002ff3e:	mov    rdi,rcx
   14002ff41:	mov    rax,QWORD PTR [rbx+0x8]
   14002ff45:	cmp    BYTE PTR [rax+0x29],0x0
   14002ff49:	jne    0x14002ff68
   14002ff4b:	mov    r8d,DWORD PTR [rdx]
   14002ff4e:	xchg   ax,ax
   14002ff50:	cmp    DWORD PTR [rax+0x18],r8d
   14002ff54:	jae    0x14002ff5c
   14002ff56:	mov    rax,QWORD PTR [rax+0x10]
   14002ff5a:	jmp    0x14002ff62
   14002ff5c:	mov    rbx,rax
   14002ff5f:	mov    rax,QWORD PTR [rax]
   14002ff62:	cmp    BYTE PTR [rax+0x29],0x0
   14002ff66:	je     0x14002ff50
   14002ff68:	cmp    rbx,QWORD PTR [rcx+0x8]
   14002ff6c:	je     0x14002ff84
   14002ff6e:	mov    eax,DWORD PTR [rbx+0x18]
   14002ff71:	cmp    DWORD PTR [rdx],eax
   14002ff73:	jb     0x14002ff84
   14002ff75:	lea    rax,[rbx+0x20]
   14002ff79:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ff7e:	add    rsp,0x30
   14002ff82:	pop    rdi
   14002ff83:	ret    
   14002ff84:	mov    eax,DWORD PTR [rdx]
   14002ff86:	lea    rdx,[rsp+0x20]
   14002ff8b:	mov    QWORD PTR [rsp+0x28],0x0
   14002ff94:	mov    DWORD PTR [rsp+0x20],eax
   14002ff98:	call   0x1400312d0
   14002ff9d:	lea    rdx,[rsp+0x40]
   14002ffa2:	mov    r8,rbx
   14002ffa5:	mov    rcx,rdi
   14002ffa8:	mov    r9,rax
   14002ffab:	call   0x140030730
   14002ffb0:	mov    rax,QWORD PTR [rsp+0x40]
   14002ffb5:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ffba:	add    rax,0x20
   14002ffbe:	add    rsp,0x30
   14002ffc2:	pop    rdi
   14002ffc3:	ret    
   14002ffc4:	int3   
   14002ffc5:	int3   
   14002ffc6:	int3   
   14002ffc7:	int3   
   14002ffc8:	int3   
   14002ffc9:	int3   
   14002ffca:	int3   
   14002ffcb:	int3   
   14002ffcc:	int3   
   14002ffcd:	int3   
   14002ffce:	int3   
   14002ffcf:	int3   
   14002ffd0:	mov    QWORD PTR [rsp+0x10],rbx
   14002ffd5:	push   rdi
   14002ffd6:	sub    rsp,0x40
   14002ffda:	mov    rbx,QWORD PTR [rcx+0x8]
   14002ffde:	mov    rdi,rcx
   14002ffe1:	mov    rax,QWORD PTR [rbx+0x8]
   14002ffe5:	cmp    BYTE PTR [rax+0x31],0x0
   14002ffe9:	jne    0x140030008
   14002ffeb:	mov    r8d,DWORD PTR [rdx]
   14002ffee:	xchg   ax,ax
   14002fff0:	cmp    DWORD PTR [rax+0x18],r8d
   14002fff4:	jae    0x14002fffc
   14002fff6:	mov    rax,QWORD PTR [rax+0x10]
   14002fffa:	jmp    0x140030002
   14002fffc:	mov    rbx,rax
   14002ffff:	mov    rax,QWORD PTR [rax]
   140030002:	cmp    BYTE PTR [rax+0x31],0x0
   140030006:	je     0x14002fff0
   140030008:	cmp    rbx,QWORD PTR [rcx+0x8]
   14003000c:	je     0x140030024
   14003000e:	mov    eax,DWORD PTR [rbx+0x18]
   140030011:	cmp    DWORD PTR [rdx],eax
   140030013:	jb     0x140030024
   140030015:	lea    rax,[rbx+0x20]
   140030019:	mov    rbx,QWORD PTR [rsp+0x58]
   14003001e:	add    rsp,0x40
   140030022:	pop    rdi
   140030023:	ret    
   140030024:	mov    eax,DWORD PTR [rdx]
   140030026:	xor    r8d,r8d
   140030029:	lea    rdx,[rsp+0x20]
   14003002e:	mov    QWORD PTR [rsp+0x28],r8
   140030033:	mov    QWORD PTR [rsp+0x30],r8
   140030038:	mov    DWORD PTR [rsp+0x20],eax
   14003003c:	call   0x140031310
   140030041:	lea    rdx,[rsp+0x50]
   140030046:	mov    r8,rbx
   140030049:	mov    r9,rax
   14003004c:	mov    rcx,rdi
   14003004f:	call   0x140030940
   140030054:	mov    rax,QWORD PTR [rsp+0x50]
   140030059:	mov    rbx,QWORD PTR [rsp+0x58]
   14003005e:	add    rax,0x20
   140030062:	add    rsp,0x40
   140030066:	pop    rdi
   140030067:	ret    
   140030068:	int3   
   140030069:	int3   
   14003006a:	int3   
   14003006b:	int3   
   14003006c:	int3   
   14003006d:	int3   
   14003006e:	int3   
   14003006f:	int3   
   140030070:	mov    QWORD PTR [rsp+0x8],rbx
   140030075:	mov    QWORD PTR [rsp+0x10],rsi
   14003007a:	push   rdi
   14003007b:	sub    rsp,0x20
   14003007f:	mov    rax,QWORD PTR [rcx+0x8]
   140030083:	mov    rbx,rcx
   140030086:	mov    rsi,QWORD PTR [rax+0x8]
   14003008a:	mov    rdi,rsi
   14003008d:	cmp    BYTE PTR [rsi+0x31],0x0
   140030091:	jne    0x1400300b3
   140030093:	mov    rdx,QWORD PTR [rdi+0x10]
   140030097:	mov    rcx,rbx
   14003009a:	call   0x140030180
   14003009f:	mov    rdi,QWORD PTR [rdi]
   1400300a2:	mov    rcx,rsi
   1400300a5:	call   0x1400330c0
   1400300aa:	cmp    BYTE PTR [rdi+0x31],0x0
   1400300ae:	mov    rsi,rdi
   1400300b1:	je     0x140030093
   1400300b3:	mov    rax,QWORD PTR [rbx+0x8]
   1400300b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400300bc:	mov    QWORD PTR [rax+0x8],rax
   1400300c0:	mov    rax,QWORD PTR [rbx+0x8]
   1400300c4:	mov    QWORD PTR [rax],rax
   1400300c7:	mov    rax,QWORD PTR [rbx+0x8]
   1400300cb:	mov    QWORD PTR [rax+0x10],rax
   1400300cf:	mov    QWORD PTR [rbx+0x10],0x0
   1400300d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400300dc:	add    rsp,0x20
   1400300e0:	pop    rdi
   1400300e1:	ret    
   1400300e2:	int3   
   1400300e3:	int3   
   1400300e4:	int3   
   1400300e5:	int3   
   1400300e6:	int3   
   1400300e7:	int3   
   1400300e8:	int3   
   1400300e9:	int3   
   1400300ea:	int3   
   1400300eb:	int3   
   1400300ec:	int3   
   1400300ed:	int3   
   1400300ee:	int3   
   1400300ef:	int3   
   1400300f0:	rex push rbx
   1400300f2:	sub    rsp,0x40
   1400300f6:	mov    rbx,rcx
   1400300f9:	mov    QWORD PTR [rcx+0x10],0x0
   140030101:	mov    ecx,0x38
   140030106:	call   0x1400331a0
   14003010b:	test   rax,rax
   14003010e:	je     0x140030140
   140030110:	mov    QWORD PTR [rbx+0x8],rax
   140030114:	mov    QWORD PTR [rax],rax
   140030117:	mov    rax,QWORD PTR [rbx+0x8]
   14003011b:	mov    QWORD PTR [rax+0x8],rax
   14003011f:	mov    rax,QWORD PTR [rbx+0x8]
   140030123:	mov    QWORD PTR [rax+0x10],rax
   140030127:	mov    rax,QWORD PTR [rbx+0x8]
   14003012b:	mov    BYTE PTR [rax+0x30],0x1
   14003012f:	mov    rax,QWORD PTR [rbx+0x8]
   140030133:	mov    BYTE PTR [rax+0x31],0x1
   140030137:	mov    rax,rbx
   14003013a:	add    rsp,0x40
   14003013e:	pop    rbx
   14003013f:	ret    
   140030140:	lea    rdx,[rsp+0x50]
   140030145:	lea    rcx,[rsp+0x20]
   14003014a:	mov    QWORD PTR [rsp+0x50],0x0
   140030153:	call   0x140032fd4
   140030158:	lea    r11,[rip+0x38731]        # 0x140068890
   14003015f:	lea    rdx,[rip+0x532ba]        # 0x140083420
   140030166:	lea    rcx,[rsp+0x20]
   14003016b:	mov    QWORD PTR [rsp+0x20],r11
   140030170:	call   0x140036358
   140030175:	int3   
   140030176:	int3   
   140030177:	int3   
   140030178:	int3   
   140030179:	int3   
   14003017a:	int3   
   14003017b:	int3   
   14003017c:	int3   
   14003017d:	int3   
   14003017e:	int3   
   14003017f:	int3   
   140030180:	mov    QWORD PTR [rsp+0x8],rbx
   140030185:	mov    QWORD PTR [rsp+0x10],rsi
   14003018a:	push   rdi
   14003018b:	sub    rsp,0x20
   14003018f:	cmp    BYTE PTR [rdx+0x31],0x0
   140030193:	mov    rdi,rdx
   140030196:	mov    rsi,rcx
   140030199:	mov    rbx,rdx
   14003019c:	jne    0x1400301c0
   14003019e:	xchg   ax,ax
   1400301a0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400301a4:	mov    rcx,rsi
   1400301a7:	call   0x140030180
   1400301ac:	mov    rbx,QWORD PTR [rbx]
   1400301af:	mov    rcx,rdi
   1400301b2:	call   0x1400330c0
   1400301b7:	cmp    BYTE PTR [rbx+0x31],0x0
   1400301bb:	mov    rdi,rbx
   1400301be:	je     0x1400301a0
   1400301c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400301c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400301ca:	add    rsp,0x20
   1400301ce:	pop    rdi
   1400301cf:	ret    
   1400301d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400301d5:	mov    QWORD PTR [rsp+0x20],r9
   1400301da:	mov    QWORD PTR [rsp+0x18],r8
   1400301df:	push   rdi
   1400301e0:	sub    rsp,0x20
   1400301e4:	mov    rax,QWORD PTR [rcx+0x8]
   1400301e8:	mov    rdi,rdx
   1400301eb:	mov    rbx,rcx
   1400301ee:	cmp    r8,QWORD PTR [rax]
   1400301f1:	jne    0x140030215
   1400301f3:	cmp    r9,rax
   1400301f6:	jne    0x140030215
   1400301f8:	call   0x140030070
   1400301fd:	mov    r11,QWORD PTR [rbx+0x8]
   140030201:	mov    rax,QWORD PTR [r11]
   140030204:	mov    QWORD PTR [rdi],rax
   140030207:	mov    rax,rdi
   14003020a:	mov    rbx,QWORD PTR [rsp+0x38]
   14003020f:	add    rsp,0x20
   140030213:	pop    rdi
   140030214:	ret    
   140030215:	cmp    r8,r9
   140030218:	je     0x140030299
   14003021a:	nop    WORD PTR [rax+rax*1+0x0]
   140030220:	cmp    BYTE PTR [r8+0x31],0x0
   140030225:	mov    rax,r8
   140030228:	jne    0x14003027d
   14003022a:	mov    rdx,QWORD PTR [r8+0x10]
   14003022e:	cmp    BYTE PTR [rdx+0x31],0x0
   140030232:	jne    0x140030253
   140030234:	mov    rcx,QWORD PTR [rdx]
   140030237:	cmp    BYTE PTR [rcx+0x31],0x0
   14003023b:	jne    0x14003024c
   14003023d:	nop    DWORD PTR [rax]
   140030240:	mov    rdx,rcx
   140030243:	mov    rcx,QWORD PTR [rcx]
   140030246:	cmp    BYTE PTR [rcx+0x31],0x0
   14003024a:	je     0x140030240
   14003024c:	mov    QWORD PTR [rsp+0x40],rdx
   140030251:	jmp    0x14003027d
   140030253:	mov    rcx,QWORD PTR [r8+0x8]
   140030257:	cmp    BYTE PTR [rcx+0x31],0x0
   14003025b:	jne    0x140030278
   14003025d:	nop    DWORD PTR [rax]
   140030260:	cmp    r8,QWORD PTR [rcx+0x10]
   140030264:	jne    0x140030278
   140030266:	mov    QWORD PTR [rsp+0x40],rcx
   14003026b:	mov    r8,rcx
   14003026e:	mov    rcx,QWORD PTR [rcx+0x8]
   140030272:	cmp    BYTE PTR [rcx+0x31],0x0
   140030276:	je     0x140030260
   140030278:	mov    QWORD PTR [rsp+0x40],rcx
   14003027d:	lea    rdx,[rsp+0x30]
   140030282:	mov    r8,rax
   140030285:	mov    rcx,rbx
   140030288:	call   0x1400302b0
   14003028d:	mov    r8,QWORD PTR [rsp+0x40]
   140030292:	cmp    r8,QWORD PTR [rsp+0x48]
   140030297:	jne    0x140030220
   140030299:	mov    rbx,QWORD PTR [rsp+0x38]
   14003029e:	mov    QWORD PTR [rdi],r8
   1400302a1:	mov    rax,rdi
   1400302a4:	add    rsp,0x20
   1400302a8:	pop    rdi
   1400302a9:	ret    
   1400302aa:	int3   
   1400302ab:	int3   
   1400302ac:	int3   
   1400302ad:	int3   
   1400302ae:	int3   
   1400302af:	int3   
   1400302b0:	mov    QWORD PTR [rsp+0x18],r8
   1400302b5:	push   rsi
   1400302b6:	push   r12
   1400302b8:	sub    rsp,0x28
   1400302bc:	cmp    BYTE PTR [r8+0x31],0x0
   1400302c1:	mov    r12,rdx
   1400302c4:	mov    rsi,rcx
   1400302c7:	je     0x1400302d6
   1400302c9:	lea    rcx,[rip+0x3afe0]        # 0x14006b2b0
   1400302d0:	call   0x140032d5c
   1400302d5:	int3   
   1400302d6:	mov    rdx,QWORD PTR [r8+0x10]
   1400302da:	lea    r9,[r8+0x10]
   1400302de:	mov    QWORD PTR [rsp+0x48],rbp
   1400302e3:	cmp    BYTE PTR [rdx+0x31],0x0
   1400302e7:	mov    rbp,r8
   1400302ea:	jne    0x14003030e
   1400302ec:	mov    rax,QWORD PTR [rdx]
   1400302ef:	cmp    BYTE PTR [rax+0x31],0x0
   1400302f3:	jne    0x140030330
   1400302f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030300:	mov    rdx,rax
   140030303:	mov    rax,QWORD PTR [rax]
   140030306:	cmp    BYTE PTR [rax+0x31],0x0
   14003030a:	je     0x140030300
   14003030c:	jmp    0x140030330
   14003030e:	mov    rdx,QWORD PTR [r8+0x8]
   140030312:	cmp    BYTE PTR [rdx+0x31],0x0
   140030316:	jne    0x140030330
   140030318:	cmp    r8,QWORD PTR [rdx+0x10]
   14003031c:	jne    0x140030330
   14003031e:	mov    QWORD PTR [rsp+0x50],rdx
   140030323:	mov    r8,rdx
   140030326:	mov    rdx,QWORD PTR [rdx+0x8]
   14003032a:	cmp    BYTE PTR [rdx+0x31],0x0
   14003032e:	je     0x140030318
   140030330:	mov    QWORD PTR [rsp+0x50],rdx
   140030335:	mov    rcx,QWORD PTR [rbp+0x0]
   140030339:	mov    QWORD PTR [rsp+0x40],rbx
   14003033e:	cmp    BYTE PTR [rcx+0x31],0x0
   140030342:	mov    QWORD PTR [rsp+0x20],rdi
   140030347:	je     0x14003034e
   140030349:	mov    rdi,QWORD PTR [r9]
   14003034c:	jmp    0x140030369
   14003034e:	mov    rax,QWORD PTR [r9]
   140030351:	cmp    BYTE PTR [rax+0x31],0x0
   140030355:	je     0x14003035c
   140030357:	mov    rdi,rcx
   14003035a:	jmp    0x140030369
   14003035c:	mov    rdi,QWORD PTR [rdx+0x10]
   140030360:	cmp    rdx,rbp
   140030363:	jne    0x140030413
   140030369:	cmp    BYTE PTR [rdi+0x31],0x0
   14003036d:	mov    rbx,QWORD PTR [rbp+0x8]
   140030371:	jne    0x140030377
   140030373:	mov    QWORD PTR [rdi+0x8],rbx
   140030377:	mov    rax,QWORD PTR [rsi+0x8]
   14003037b:	cmp    QWORD PTR [rax+0x8],rbp
   14003037f:	jne    0x140030387
   140030381:	mov    QWORD PTR [rax+0x8],rdi
   140030385:	jmp    0x140030395
   140030387:	cmp    QWORD PTR [rbx],rbp
   14003038a:	jne    0x140030391
   14003038c:	mov    QWORD PTR [rbx],rdi
   14003038f:	jmp    0x140030395
   140030391:	mov    QWORD PTR [rbx+0x10],rdi
   140030395:	mov    rdx,QWORD PTR [rsi+0x8]
   140030399:	cmp    QWORD PTR [rdx],rbp
   14003039c:	jne    0x1400303cf
   14003039e:	cmp    BYTE PTR [rdi+0x31],0x0
   1400303a2:	je     0x1400303a9
   1400303a4:	mov    rcx,rbx
   1400303a7:	jmp    0x1400303cc
   1400303a9:	mov    rax,QWORD PTR [rdi]
   1400303ac:	mov    rcx,rdi
   1400303af:	cmp    BYTE PTR [rax+0x31],0x0
   1400303b3:	jne    0x1400303cc
   1400303b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400303c0:	mov    rcx,rax
   1400303c3:	mov    rax,QWORD PTR [rax]
   1400303c6:	cmp    BYTE PTR [rax+0x31],0x0
   1400303ca:	je     0x1400303c0
   1400303cc:	mov    QWORD PTR [rdx],rcx
   1400303cf:	mov    rdx,QWORD PTR [rsi+0x8]
   1400303d3:	cmp    QWORD PTR [rdx+0x10],rbp
   1400303d7:	jne    0x14003047f
   1400303dd:	cmp    BYTE PTR [rdi+0x31],0x0
   1400303e1:	je     0x1400303ef
   1400303e3:	mov    rcx,rbx
   1400303e6:	mov    QWORD PTR [rdx+0x10],rbx
   1400303ea:	jmp    0x14003047f
   1400303ef:	mov    rax,QWORD PTR [rdi+0x10]
   1400303f3:	mov    rcx,rdi
   1400303f6:	cmp    BYTE PTR [rax+0x31],0x0
   1400303fa:	jne    0x14003040d
   1400303fc:	nop    DWORD PTR [rax+0x0]
   140030400:	mov    rcx,rax
   140030403:	mov    rax,QWORD PTR [rax+0x10]
   140030407:	cmp    BYTE PTR [rax+0x31],0x0
   14003040b:	je     0x140030400
   14003040d:	mov    QWORD PTR [rdx+0x10],rcx
   140030411:	jmp    0x14003047f
   140030413:	mov    QWORD PTR [rcx+0x8],rdx
   140030417:	mov    rax,QWORD PTR [rbp+0x0]
   14003041b:	mov    QWORD PTR [rdx],rax
   14003041e:	cmp    rdx,QWORD PTR [r9]
   140030421:	jne    0x140030428
   140030423:	mov    rbx,rdx
   140030426:	jmp    0x140030447
   140030428:	cmp    BYTE PTR [rdi+0x31],0x0
   14003042c:	mov    rbx,QWORD PTR [rdx+0x8]
   140030430:	jne    0x140030436
   140030432:	mov    QWORD PTR [rdi+0x8],rbx
   140030436:	mov    QWORD PTR [rbx],rdi
   140030439:	mov    rax,QWORD PTR [r9]
   14003043c:	mov    QWORD PTR [rdx+0x10],rax
   140030440:	mov    rax,QWORD PTR [r9]
   140030443:	mov    QWORD PTR [rax+0x8],rdx
   140030447:	mov    rax,QWORD PTR [rsi+0x8]
   14003044b:	cmp    QWORD PTR [rax+0x8],rbp
   14003044f:	jne    0x140030457
   140030451:	mov    QWORD PTR [rax+0x8],rdx
   140030455:	jmp    0x140030469
   140030457:	mov    rax,QWORD PTR [rbp+0x8]
   14003045b:	cmp    QWORD PTR [rax],rbp
   14003045e:	jne    0x140030465
   140030460:	mov    QWORD PTR [rax],rdx
   140030463:	jmp    0x140030469
   140030465:	mov    QWORD PTR [rax+0x10],rdx
   140030469:	mov    rax,QWORD PTR [rbp+0x8]
   14003046d:	mov    QWORD PTR [rdx+0x8],rax
   140030471:	movzx  eax,BYTE PTR [rbp+0x30]
   140030475:	movzx  ecx,BYTE PTR [rdx+0x30]
   140030479:	mov    BYTE PTR [rdx+0x30],al
   14003047c:	mov    BYTE PTR [rbp+0x30],cl
   14003047f:	cmp    BYTE PTR [rbp+0x30],0x1
   140030483:	jne    0x1400305cf
   140030489:	mov    rax,QWORD PTR [rsi+0x8]
   14003048d:	cmp    rdi,QWORD PTR [rax+0x8]
   140030491:	je     0x1400305cb
   140030497:	nop    WORD PTR [rax+rax*1+0x0]
   1400304a0:	cmp    BYTE PTR [rdi+0x30],0x1
   1400304a4:	jne    0x1400305cb
   1400304aa:	mov    rcx,QWORD PTR [rbx]
   1400304ad:	cmp    rdi,rcx
   1400304b0:	jne    0x14003053b
   1400304b6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400304ba:	cmp    BYTE PTR [rcx+0x30],0x0
   1400304be:	jne    0x1400304d7
   1400304c0:	mov    BYTE PTR [rcx+0x30],0x1
   1400304c4:	mov    rdx,rbx
   1400304c7:	mov    rcx,rsi
   1400304ca:	mov    BYTE PTR [rbx+0x30],0x0
   1400304ce:	call   0x140030670
   1400304d3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400304d7:	cmp    BYTE PTR [rcx+0x31],0x0
   1400304db:	jne    0x140030574
   1400304e1:	mov    rax,QWORD PTR [rcx]
   1400304e4:	cmp    BYTE PTR [rax+0x30],0x1
   1400304e8:	jne    0x1400304f4
   1400304ea:	mov    rax,QWORD PTR [rcx+0x10]
   1400304ee:	cmp    BYTE PTR [rax+0x30],0x1
   1400304f2:	je     0x140030570
   1400304f4:	mov    rax,QWORD PTR [rcx+0x10]
   1400304f8:	cmp    BYTE PTR [rax+0x30],0x1
   1400304fc:	jne    0x140030518
   1400304fe:	mov    rax,QWORD PTR [rcx]
   140030501:	mov    rdx,rcx
   140030504:	mov    BYTE PTR [rax+0x30],0x1
   140030508:	mov    BYTE PTR [rcx+0x30],0x0
   14003050c:	mov    rcx,rsi
   14003050f:	call   0x1400306d0
   140030514:	mov    rcx,QWORD PTR [rbx+0x10]
   140030518:	movzx  eax,BYTE PTR [rbx+0x30]
   14003051c:	mov    rdx,rbx
   14003051f:	mov    BYTE PTR [rcx+0x30],al
   140030522:	mov    BYTE PTR [rbx+0x30],0x1
   140030526:	mov    rax,QWORD PTR [rcx+0x10]
   14003052a:	mov    rcx,rsi
   14003052d:	mov    BYTE PTR [rax+0x30],0x1
   140030531:	call   0x140030670
   140030536:	jmp    0x1400305cb
   14003053b:	cmp    BYTE PTR [rcx+0x30],0x0
   14003053f:	jne    0x140030557
   140030541:	mov    BYTE PTR [rcx+0x30],0x1
   140030545:	mov    rdx,rbx
   140030548:	mov    rcx,rsi
   14003054b:	mov    BYTE PTR [rbx+0x30],0x0
   14003054f:	call   0x1400306d0
   140030554:	mov    rcx,QWORD PTR [rbx]
   140030557:	cmp    BYTE PTR [rcx+0x31],0x0
   14003055b:	jne    0x140030574
   14003055d:	mov    rax,QWORD PTR [rcx+0x10]
   140030561:	cmp    BYTE PTR [rax+0x30],0x1
   140030565:	jne    0x14003058b
   140030567:	mov    rax,QWORD PTR [rcx]
   14003056a:	cmp    BYTE PTR [rax+0x30],0x1
   14003056e:	jne    0x14003058b
   140030570:	mov    BYTE PTR [rcx+0x30],0x0
   140030574:	mov    rax,QWORD PTR [rsi+0x8]
   140030578:	mov    rdi,rbx
   14003057b:	mov    rbx,QWORD PTR [rbx+0x8]
   14003057f:	cmp    rdi,QWORD PTR [rax+0x8]
   140030583:	jne    0x1400304a0
   140030589:	jmp    0x1400305cb
   14003058b:	mov    rax,QWORD PTR [rcx]
   14003058e:	cmp    BYTE PTR [rax+0x30],0x1
   140030592:	jne    0x1400305ae
   140030594:	mov    rax,QWORD PTR [rcx+0x10]
   140030598:	mov    rdx,rcx
   14003059b:	mov    BYTE PTR [rax+0x30],0x1
   14003059f:	mov    BYTE PTR [rcx+0x30],0x0
   1400305a3:	mov    rcx,rsi
   1400305a6:	call   0x140030670
   1400305ab:	mov    rcx,QWORD PTR [rbx]
   1400305ae:	movzx  eax,BYTE PTR [rbx+0x30]
   1400305b2:	mov    rdx,rbx
   1400305b5:	mov    BYTE PTR [rcx+0x30],al
   1400305b8:	mov    BYTE PTR [rbx+0x30],0x1
   1400305bc:	mov    rax,QWORD PTR [rcx]
   1400305bf:	mov    rcx,rsi
   1400305c2:	mov    BYTE PTR [rax+0x30],0x1
   1400305c6:	call   0x1400306d0
   1400305cb:	mov    BYTE PTR [rdi+0x30],0x1
   1400305cf:	mov    rcx,rbp
   1400305d2:	call   0x1400330c0
   1400305d7:	mov    rax,QWORD PTR [rsi+0x10]
   1400305db:	mov    rdi,QWORD PTR [rsp+0x20]
   1400305e0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400305e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400305ea:	test   rax,rax
   1400305ed:	je     0x1400305f6
   1400305ef:	dec    rax
   1400305f2:	mov    QWORD PTR [rsi+0x10],rax
   1400305f6:	mov    rax,QWORD PTR [rsp+0x50]
   1400305fb:	mov    QWORD PTR [r12],rax
   1400305ff:	mov    rax,r12
   140030602:	add    rsp,0x28
   140030606:	pop    r12
   140030608:	pop    rsi
   140030609:	ret    
   14003060a:	int3   
   14003060b:	int3   
   14003060c:	int3   
   14003060d:	int3   
   14003060e:	int3   
   14003060f:	int3   
   140030610:	mov    r8,QWORD PTR [rdx]
   140030613:	mov    rax,QWORD PTR [r8+0x10]
   140030617:	mov    QWORD PTR [rdx],rax
   14003061a:	mov    rax,QWORD PTR [r8+0x10]
   14003061e:	cmp    BYTE PTR [rax+0x29],0x0
   140030622:	jne    0x140030628
   140030624:	mov    QWORD PTR [rax+0x8],rdx
   140030628:	mov    rax,QWORD PTR [rdx+0x8]
   14003062c:	mov    QWORD PTR [r8+0x8],rax
   140030630:	mov    rax,QWORD PTR [rcx+0x8]
   140030634:	cmp    rdx,QWORD PTR [rax+0x8]
   140030638:	jne    0x140030647
   14003063a:	mov    QWORD PTR [rax+0x8],r8
   14003063e:	mov    QWORD PTR [r8+0x10],rdx
   140030642:	mov    QWORD PTR [rdx+0x8],r8
   140030646:	ret    
   140030647:	mov    rax,QWORD PTR [rdx+0x8]
   14003064b:	cmp    rdx,QWORD PTR [rax+0x10]
   14003064f:	jne    0x14003065e
   140030651:	mov    QWORD PTR [rax+0x10],r8
   140030655:	mov    QWORD PTR [r8+0x10],rdx
   140030659:	mov    QWORD PTR [rdx+0x8],r8
   14003065d:	ret    
   14003065e:	mov    QWORD PTR [rax],r8
   140030661:	mov    QWORD PTR [r8+0x10],rdx
   140030665:	mov    QWORD PTR [rdx+0x8],r8
   140030669:	ret    
   14003066a:	int3   
   14003066b:	int3   
   14003066c:	int3   
   14003066d:	int3   
   14003066e:	int3   
   14003066f:	int3   
   140030670:	mov    r8,QWORD PTR [rdx+0x10]
   140030674:	mov    rax,QWORD PTR [r8]
   140030677:	mov    QWORD PTR [rdx+0x10],rax
   14003067b:	mov    rax,QWORD PTR [r8]
   14003067e:	cmp    BYTE PTR [rax+0x31],0x0
   140030682:	jne    0x140030688
   140030684:	mov    QWORD PTR [rax+0x8],rdx
   140030688:	mov    rax,QWORD PTR [rdx+0x8]
   14003068c:	mov    QWORD PTR [r8+0x8],rax
   140030690:	mov    rax,QWORD PTR [rcx+0x8]
   140030694:	cmp    rdx,QWORD PTR [rax+0x8]
   140030698:	jne    0x1400306a6
   14003069a:	mov    QWORD PTR [rax+0x8],r8
   14003069e:	mov    QWORD PTR [r8],rdx
   1400306a1:	mov    QWORD PTR [rdx+0x8],r8
   1400306a5:	ret    
   1400306a6:	mov    rax,QWORD PTR [rdx+0x8]
   1400306aa:	cmp    rdx,QWORD PTR [rax]
   1400306ad:	jne    0x1400306ba
   1400306af:	mov    QWORD PTR [rax],r8
   1400306b2:	mov    QWORD PTR [r8],rdx
   1400306b5:	mov    QWORD PTR [rdx+0x8],r8
   1400306b9:	ret    
   1400306ba:	mov    QWORD PTR [rax+0x10],r8
   1400306be:	mov    QWORD PTR [r8],rdx
   1400306c1:	mov    QWORD PTR [rdx+0x8],r8
   1400306c5:	ret    
   1400306c6:	int3   
   1400306c7:	int3   
   1400306c8:	int3   
   1400306c9:	int3   
   1400306ca:	int3   
   1400306cb:	int3   
   1400306cc:	int3   
   1400306cd:	int3   
   1400306ce:	int3   
   1400306cf:	int3   
   1400306d0:	mov    r8,QWORD PTR [rdx]
   1400306d3:	mov    rax,QWORD PTR [r8+0x10]
   1400306d7:	mov    QWORD PTR [rdx],rax
   1400306da:	mov    rax,QWORD PTR [r8+0x10]
   1400306de:	cmp    BYTE PTR [rax+0x31],0x0
   1400306e2:	jne    0x1400306e8
   1400306e4:	mov    QWORD PTR [rax+0x8],rdx
   1400306e8:	mov    rax,QWORD PTR [rdx+0x8]
   1400306ec:	mov    QWORD PTR [r8+0x8],rax
   1400306f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400306f4:	cmp    rdx,QWORD PTR [rax+0x8]
   1400306f8:	jne    0x140030707
   1400306fa:	mov    QWORD PTR [rax+0x8],r8
   1400306fe:	mov    QWORD PTR [r8+0x10],rdx
   140030702:	mov    QWORD PTR [rdx+0x8],r8
   140030706:	ret    
   140030707:	mov    rax,QWORD PTR [rdx+0x8]
   14003070b:	cmp    rdx,QWORD PTR [rax+0x10]
   14003070f:	jne    0x14003071e
   140030711:	mov    QWORD PTR [rax+0x10],r8
   140030715:	mov    QWORD PTR [r8+0x10],rdx
   140030719:	mov    QWORD PTR [rdx+0x8],r8
   14003071d:	ret    
   14003071e:	mov    QWORD PTR [rax],r8
   140030721:	mov    QWORD PTR [r8+0x10],rdx
   140030725:	mov    QWORD PTR [rdx+0x8],r8
   140030729:	ret    
   14003072a:	int3   
   14003072b:	int3   
   14003072c:	int3   
   14003072d:	int3   
   14003072e:	int3   
   14003072f:	int3   
   140030730:	rex push rbx
   140030732:	sub    rsp,0x40
   140030736:	cmp    QWORD PTR [rcx+0x10],0x0
   14003073b:	mov    r10,r9
   14003073e:	mov    rbx,rdx
   140030741:	mov    r11,rcx
   140030744:	jne    0x140030760
   140030746:	mov    QWORD PTR [rsp+0x20],r9
   14003074b:	mov    r9,QWORD PTR [rcx+0x8]
   14003074f:	mov    r8b,0x1
   140030752:	call   0x140030c70
   140030757:	mov    rax,rbx
   14003075a:	add    rsp,0x40
   14003075e:	pop    rbx
   14003075f:	ret    
   140030760:	mov    rcx,QWORD PTR [rcx+0x8]
   140030764:	mov    QWORD PTR [rsp+0x50],rsi
   140030769:	cmp    r8,QWORD PTR [rcx]
   14003076c:	jne    0x14003079d
   14003076e:	mov    eax,DWORD PTR [r8+0x18]
   140030772:	cmp    DWORD PTR [r9+0x18],eax
   140030776:	jae    0x14003091b
   14003077c:	mov    QWORD PTR [rsp+0x20],r9
   140030781:	mov    r9,r8
   140030784:	mov    rcx,r11
   140030787:	mov    r8b,0x1
   14003078a:	call   0x140030c70
   14003078f:	mov    rsi,QWORD PTR [rsp+0x50]
   140030794:	mov    rax,rbx
   140030797:	add    rsp,0x40
   14003079b:	pop    rbx
   14003079c:	ret    
   14003079d:	cmp    r8,rcx
   1400307a0:	jne    0x1400307d2
   1400307a2:	mov    r9,QWORD PTR [rcx+0x10]
   1400307a6:	mov    eax,DWORD PTR [r10+0x18]
   1400307aa:	cmp    DWORD PTR [r9+0x18],eax
   1400307ae:	jae    0x14003091b
   1400307b4:	xor    r8d,r8d
   1400307b7:	mov    rcx,r11
   1400307ba:	mov    QWORD PTR [rsp+0x20],r10
   1400307bf:	call   0x140030c70
   1400307c4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400307c9:	mov    rax,rbx
   1400307cc:	add    rsp,0x40
   1400307d0:	pop    rbx
   1400307d1:	ret    
   1400307d2:	mov    esi,DWORD PTR [r9+0x18]
   1400307d6:	cmp    DWORD PTR [r8+0x18],esi
   1400307da:	jbe    0x140030889
   1400307e0:	cmp    BYTE PTR [r8+0x29],0x0
   1400307e5:	mov    rax,r8
   1400307e8:	je     0x1400307f0
   1400307ea:	mov    r9,QWORD PTR [r8+0x10]
   1400307ee:	jmp    0x14003084d
   1400307f0:	mov    r9,QWORD PTR [r8]
   1400307f3:	cmp    BYTE PTR [r9+0x29],0x0
   1400307f8:	jne    0x14003081f
   1400307fa:	mov    rax,QWORD PTR [r9+0x10]
   1400307fe:	cmp    BYTE PTR [rax+0x29],0x0
   140030802:	jne    0x14003084d
   140030804:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030810:	mov    r9,rax
   140030813:	mov    rax,QWORD PTR [rax+0x10]
   140030817:	cmp    BYTE PTR [rax+0x29],0x0
   14003081b:	je     0x140030810
   14003081d:	jmp    0x14003084d
   14003081f:	mov    rdx,QWORD PTR [r8+0x8]
   140030823:	cmp    BYTE PTR [rdx+0x29],0x0
   140030827:	jne    0x140030842
   140030829:	nop    DWORD PTR [rax+0x0]
   140030830:	cmp    rax,QWORD PTR [rdx]
   140030833:	jne    0x140030842
   140030835:	mov    rax,rdx
   140030838:	mov    rdx,QWORD PTR [rdx+0x8]
   14003083c:	cmp    BYTE PTR [rdx+0x29],0x0
   140030840:	je     0x140030830
   140030842:	cmp    BYTE PTR [rax+0x29],0x0
   140030846:	mov    r9,rax
   140030849:	cmove  r9,rdx
   14003084d:	cmp    DWORD PTR [r9+0x18],esi
   140030851:	jae    0x140030885
   140030853:	mov    rax,QWORD PTR [r9+0x10]
   140030857:	mov    QWORD PTR [rsp+0x20],r10
   14003085c:	mov    rdx,rbx
   14003085f:	cmp    BYTE PTR [rax+0x29],0x0
   140030863:	mov    rcx,r11
   140030866:	jne    0x140030905
   14003086c:	mov    r9,r8
   14003086f:	mov    r8b,0x1
   140030872:	call   0x140030c70
   140030877:	mov    rsi,QWORD PTR [rsp+0x50]
   14003087c:	mov    rax,rbx
   14003087f:	add    rsp,0x40
   140030883:	pop    rbx
   140030884:	ret    
   140030885:	cmp    DWORD PTR [r8+0x18],esi
   140030889:	jae    0x14003091b
   14003088f:	cmp    BYTE PTR [r8+0x29],0x0
   140030894:	mov    r9,r8
   140030897:	jne    0x1400308de
   140030899:	mov    rax,QWORD PTR [r8+0x10]
   14003089d:	cmp    BYTE PTR [rax+0x29],0x0
   1400308a1:	jne    0x1400308be
   1400308a3:	mov    r9,rax
   1400308a6:	mov    rax,QWORD PTR [rax]
   1400308a9:	cmp    BYTE PTR [rax+0x29],0x0
   1400308ad:	jne    0x1400308de
   1400308af:	nop
   1400308b0:	mov    r9,rax
   1400308b3:	mov    rax,QWORD PTR [rax]
   1400308b6:	cmp    BYTE PTR [rax+0x29],0x0
   1400308ba:	je     0x1400308b0
   1400308bc:	jmp    0x1400308de
   1400308be:	mov    rax,QWORD PTR [r8+0x8]
   1400308c2:	cmp    BYTE PTR [rax+0x29],0x0
   1400308c6:	jne    0x1400308db
   1400308c8:	cmp    r9,QWORD PTR [rax+0x10]
   1400308cc:	jne    0x1400308db
   1400308ce:	mov    r9,rax
   1400308d1:	mov    rax,QWORD PTR [rax+0x8]
   1400308d5:	cmp    BYTE PTR [rax+0x29],0x0
   1400308d9:	je     0x1400308c8
   1400308db:	mov    r9,rax
   1400308de:	cmp    r9,rcx
   1400308e1:	je     0x1400308e9
   1400308e3:	cmp    esi,DWORD PTR [r9+0x18]
   1400308e7:	jae    0x14003091b
   1400308e9:	mov    rax,QWORD PTR [r8+0x10]
   1400308ed:	mov    QWORD PTR [rsp+0x20],r10
   1400308f2:	mov    rdx,rbx
   1400308f5:	cmp    BYTE PTR [rax+0x29],0x0
   1400308f9:	mov    rcx,r11
   1400308fc:	je     0x14003086f
   140030902:	mov    r9,r8
   140030905:	xor    r8d,r8d
   140030908:	call   0x140030c70
   14003090d:	mov    rsi,QWORD PTR [rsp+0x50]
   140030912:	mov    rax,rbx
   140030915:	add    rsp,0x40
   140030919:	pop    rbx
   14003091a:	ret    
   14003091b:	lea    rdx,[rsp+0x30]
   140030920:	mov    r8,r10
   140030923:	mov    rcx,r11
   140030926:	call   0x140030b50
   14003092b:	mov    rsi,QWORD PTR [rsp+0x50]
   140030930:	mov    rcx,QWORD PTR [rax]
   140030933:	mov    rax,rbx
   140030936:	mov    QWORD PTR [rbx],rcx
   140030939:	add    rsp,0x40
   14003093d:	pop    rbx
   14003093e:	ret    
   14003093f:	int3   
   140030940:	rex push rbx
   140030942:	sub    rsp,0x40
   140030946:	cmp    QWORD PTR [rcx+0x10],0x0
   14003094b:	mov    r10,r9
   14003094e:	mov    rbx,rdx
   140030951:	mov    r11,rcx
   140030954:	jne    0x140030970
   140030956:	mov    QWORD PTR [rsp+0x20],r9
   14003095b:	mov    r9,QWORD PTR [rcx+0x8]
   14003095f:	mov    r8b,0x1
   140030962:	call   0x140031030
   140030967:	mov    rax,rbx
   14003096a:	add    rsp,0x40
   14003096e:	pop    rbx
   14003096f:	ret    
   140030970:	mov    rcx,QWORD PTR [rcx+0x8]
   140030974:	mov    QWORD PTR [rsp+0x50],rsi
   140030979:	cmp    r8,QWORD PTR [rcx]
   14003097c:	jne    0x1400309ad
   14003097e:	mov    eax,DWORD PTR [r8+0x18]
   140030982:	cmp    DWORD PTR [r9+0x18],eax
   140030986:	jae    0x140030b2b
   14003098c:	mov    QWORD PTR [rsp+0x20],r9
   140030991:	mov    r9,r8
   140030994:	mov    rcx,r11
   140030997:	mov    r8b,0x1
   14003099a:	call   0x140031030
   14003099f:	mov    rsi,QWORD PTR [rsp+0x50]
   1400309a4:	mov    rax,rbx
   1400309a7:	add    rsp,0x40
   1400309ab:	pop    rbx
   1400309ac:	ret    
   1400309ad:	cmp    r8,rcx
   1400309b0:	jne    0x1400309e2
   1400309b2:	mov    r9,QWORD PTR [rcx+0x10]
   1400309b6:	mov    eax,DWORD PTR [r10+0x18]
   1400309ba:	cmp    DWORD PTR [r9+0x18],eax
   1400309be:	jae    0x140030b2b
   1400309c4:	xor    r8d,r8d
   1400309c7:	mov    rcx,r11
   1400309ca:	mov    QWORD PTR [rsp+0x20],r10
   1400309cf:	call   0x140031030
   1400309d4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400309d9:	mov    rax,rbx
   1400309dc:	add    rsp,0x40
   1400309e0:	pop    rbx
   1400309e1:	ret    
   1400309e2:	mov    esi,DWORD PTR [r9+0x18]
   1400309e6:	cmp    DWORD PTR [r8+0x18],esi
   1400309ea:	jbe    0x140030a99
   1400309f0:	cmp    BYTE PTR [r8+0x31],0x0
   1400309f5:	mov    rax,r8
   1400309f8:	je     0x140030a00
   1400309fa:	mov    r9,QWORD PTR [r8+0x10]
   1400309fe:	jmp    0x140030a5d
   140030a00:	mov    r9,QWORD PTR [r8]
   140030a03:	cmp    BYTE PTR [r9+0x31],0x0
   140030a08:	jne    0x140030a2f
   140030a0a:	mov    rax,QWORD PTR [r9+0x10]
   140030a0e:	cmp    BYTE PTR [rax+0x31],0x0
   140030a12:	jne    0x140030a5d
   140030a14:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030a20:	mov    r9,rax
   140030a23:	mov    rax,QWORD PTR [rax+0x10]
   140030a27:	cmp    BYTE PTR [rax+0x31],0x0
   140030a2b:	je     0x140030a20
   140030a2d:	jmp    0x140030a5d
   140030a2f:	mov    rdx,QWORD PTR [r8+0x8]
   140030a33:	cmp    BYTE PTR [rdx+0x31],0x0
   140030a37:	jne    0x140030a52
   140030a39:	nop    DWORD PTR [rax+0x0]
   140030a40:	cmp    rax,QWORD PTR [rdx]
   140030a43:	jne    0x140030a52
   140030a45:	mov    rax,rdx
   140030a48:	mov    rdx,QWORD PTR [rdx+0x8]
   140030a4c:	cmp    BYTE PTR [rdx+0x31],0x0
   140030a50:	je     0x140030a40
   140030a52:	cmp    BYTE PTR [rax+0x31],0x0
   140030a56:	mov    r9,rax
   140030a59:	cmove  r9,rdx
   140030a5d:	cmp    DWORD PTR [r9+0x18],esi
   140030a61:	jae    0x140030a95
   140030a63:	mov    rax,QWORD PTR [r9+0x10]
   140030a67:	mov    QWORD PTR [rsp+0x20],r10
   140030a6c:	mov    rdx,rbx
   140030a6f:	cmp    BYTE PTR [rax+0x31],0x0
   140030a73:	mov    rcx,r11
   140030a76:	jne    0x140030b15
   140030a7c:	mov    r9,r8
   140030a7f:	mov    r8b,0x1
   140030a82:	call   0x140031030
   140030a87:	mov    rsi,QWORD PTR [rsp+0x50]
   140030a8c:	mov    rax,rbx
   140030a8f:	add    rsp,0x40
   140030a93:	pop    rbx
   140030a94:	ret    
   140030a95:	cmp    DWORD PTR [r8+0x18],esi
   140030a99:	jae    0x140030b2b
   140030a9f:	cmp    BYTE PTR [r8+0x31],0x0
   140030aa4:	mov    r9,r8
   140030aa7:	jne    0x140030aee
   140030aa9:	mov    rax,QWORD PTR [r8+0x10]
   140030aad:	cmp    BYTE PTR [rax+0x31],0x0
   140030ab1:	jne    0x140030ace
   140030ab3:	mov    r9,rax
   140030ab6:	mov    rax,QWORD PTR [rax]
   140030ab9:	cmp    BYTE PTR [rax+0x31],0x0
   140030abd:	jne    0x140030aee
   140030abf:	nop
   140030ac0:	mov    r9,rax
   140030ac3:	mov    rax,QWORD PTR [rax]
   140030ac6:	cmp    BYTE PTR [rax+0x31],0x0
   140030aca:	je     0x140030ac0
   140030acc:	jmp    0x140030aee
   140030ace:	mov    rax,QWORD PTR [r8+0x8]
   140030ad2:	cmp    BYTE PTR [rax+0x31],0x0
   140030ad6:	jne    0x140030aeb
   140030ad8:	cmp    r9,QWORD PTR [rax+0x10]
   140030adc:	jne    0x140030aeb
   140030ade:	mov    r9,rax
   140030ae1:	mov    rax,QWORD PTR [rax+0x8]
   140030ae5:	cmp    BYTE PTR [rax+0x31],0x0
   140030ae9:	je     0x140030ad8
   140030aeb:	mov    r9,rax
   140030aee:	cmp    r9,rcx
   140030af1:	je     0x140030af9
   140030af3:	cmp    esi,DWORD PTR [r9+0x18]
   140030af7:	jae    0x140030b2b
   140030af9:	mov    rax,QWORD PTR [r8+0x10]
   140030afd:	mov    QWORD PTR [rsp+0x20],r10
   140030b02:	mov    rdx,rbx
   140030b05:	cmp    BYTE PTR [rax+0x31],0x0
   140030b09:	mov    rcx,r11
   140030b0c:	je     0x140030a7f
   140030b12:	mov    r9,r8
   140030b15:	xor    r8d,r8d
   140030b18:	call   0x140031030
   140030b1d:	mov    rsi,QWORD PTR [rsp+0x50]
   140030b22:	mov    rax,rbx
   140030b25:	add    rsp,0x40
   140030b29:	pop    rbx
   140030b2a:	ret    
   140030b2b:	lea    rdx,[rsp+0x30]
   140030b30:	mov    r8,r10
   140030b33:	mov    rcx,r11
   140030b36:	call   0x140030f10
   140030b3b:	mov    rsi,QWORD PTR [rsp+0x50]
   140030b40:	mov    rcx,QWORD PTR [rax]
   140030b43:	mov    rax,rbx
   140030b46:	mov    QWORD PTR [rbx],rcx
   140030b49:	add    rsp,0x40
   140030b4d:	pop    rbx
   140030b4e:	ret    
   140030b4f:	int3   
   140030b50:	mov    QWORD PTR [rsp+0x10],rbx
   140030b55:	push   rdi
   140030b56:	sub    rsp,0x30
   140030b5a:	mov    r9,QWORD PTR [rcx+0x8]
   140030b5e:	mov    r11,r8
   140030b61:	mov    rdi,rdx
   140030b64:	mov    rax,QWORD PTR [r9+0x8]
   140030b68:	mov    r8b,0x1
   140030b6b:	cmp    BYTE PTR [rax+0x29],0x0
   140030b6f:	jne    0x140030b9f
   140030b71:	mov    r10d,DWORD PTR [r11+0x18]
   140030b75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030b80:	cmp    r10d,DWORD PTR [rax+0x18]
   140030b84:	mov    r9,rax
   140030b87:	setb   r8b
   140030b8b:	test   r8b,r8b
   140030b8e:	je     0x140030b95
   140030b90:	mov    rax,QWORD PTR [rax]
   140030b93:	jmp    0x140030b99
   140030b95:	mov    rax,QWORD PTR [rax+0x10]
   140030b99:	cmp    BYTE PTR [rax+0x29],0x0
   140030b9d:	je     0x140030b80
   140030b9f:	mov    rbx,r9
   140030ba2:	test   r8b,r8b
   140030ba5:	je     0x140030c3a
   140030bab:	mov    rax,QWORD PTR [rcx+0x8]
   140030baf:	cmp    r9,QWORD PTR [rax]
   140030bb2:	jne    0x140030bde
   140030bb4:	mov    r8b,0x1
   140030bb7:	lea    rdx,[rsp+0x40]
   140030bbc:	mov    QWORD PTR [rsp+0x20],r11
   140030bc1:	call   0x140030c70
   140030bc6:	mov    BYTE PTR [rdi+0x8],0x1
   140030bca:	mov    rcx,QWORD PTR [rax]
   140030bcd:	mov    rax,rdi
   140030bd0:	mov    QWORD PTR [rdi],rcx
   140030bd3:	mov    rbx,QWORD PTR [rsp+0x48]
   140030bd8:	add    rsp,0x30
   140030bdc:	pop    rdi
   140030bdd:	ret    
   140030bde:	cmp    BYTE PTR [r9+0x29],0x0
   140030be3:	je     0x140030beb
   140030be5:	mov    rbx,QWORD PTR [r9+0x10]
   140030be9:	jmp    0x140030c3a
   140030beb:	mov    rax,QWORD PTR [r9]
   140030bee:	cmp    BYTE PTR [rax+0x29],0x0
   140030bf2:	jne    0x140030c10
   140030bf4:	mov    rbx,rax
   140030bf7:	mov    rax,QWORD PTR [rax+0x10]
   140030bfb:	cmp    BYTE PTR [rax+0x29],0x0
   140030bff:	jne    0x140030c3a
   140030c01:	mov    rbx,rax
   140030c04:	mov    rax,QWORD PTR [rax+0x10]
   140030c08:	cmp    BYTE PTR [rax+0x29],0x0
   140030c0c:	je     0x140030c01
   140030c0e:	jmp    0x140030c3a
   140030c10:	mov    rax,QWORD PTR [r9+0x8]
   140030c14:	cmp    BYTE PTR [rax+0x29],0x0
   140030c18:	jne    0x140030c32
   140030c1a:	nop    WORD PTR [rax+rax*1+0x0]
   140030c20:	cmp    rbx,QWORD PTR [rax]
   140030c23:	jne    0x140030c32
   140030c25:	mov    rbx,rax
   140030c28:	mov    rax,QWORD PTR [rax+0x8]
   140030c2c:	cmp    BYTE PTR [rax+0x29],0x0
   140030c30:	je     0x140030c20
   140030c32:	cmp    BYTE PTR [rbx+0x29],0x0
   140030c36:	cmove  rbx,rax
   140030c3a:	mov    eax,DWORD PTR [r11+0x18]
   140030c3e:	cmp    DWORD PTR [rbx+0x18],eax
   140030c41:	jb     0x140030bb7
   140030c47:	mov    rcx,r11
   140030c4a:	call   0x1400330c0
   140030c4f:	mov    QWORD PTR [rdi],rbx
   140030c52:	mov    rbx,QWORD PTR [rsp+0x48]
   140030c57:	mov    BYTE PTR [rdi+0x8],0x0
   140030c5b:	mov    rax,rdi
   140030c5e:	add    rsp,0x30
   140030c62:	pop    rdi
   140030c63:	ret    
   140030c64:	int3   
   140030c65:	int3   
   140030c66:	int3   
   140030c67:	int3   
   140030c68:	int3   
   140030c69:	int3   
   140030c6a:	int3   
   140030c6b:	int3   
   140030c6c:	int3   
   140030c6d:	int3   
   140030c6e:	int3   
   140030c6f:	int3   
   140030c70:	rex push rbx
   140030c72:	sub    rsp,0x20
   140030c76:	mov    rax,QWORD PTR [rcx+0x10]
   140030c7a:	mov    r10,rcx
   140030c7d:	movabs rcx,0xffffffffffffffe
   140030c87:	mov    rbx,rdx
   140030c8a:	cmp    rax,rcx
   140030c8d:	jb     0x140030ca6
   140030c8f:	mov    rcx,QWORD PTR [rsp+0x50]
   140030c94:	call   0x1400330c0
   140030c99:	lea    rcx,[rip+0x3a630]        # 0x14006b2d0
   140030ca0:	call   0x140032d00
   140030ca5:	int3   
   140030ca6:	mov    r11,QWORD PTR [rsp+0x50]
   140030cab:	inc    rax
   140030cae:	mov    QWORD PTR [r10+0x10],rax
   140030cb2:	mov    QWORD PTR [r11+0x8],r9
   140030cb6:	mov    rax,QWORD PTR [r10+0x8]
   140030cba:	cmp    r9,rax
   140030cbd:	jne    0x140030cd0
   140030cbf:	mov    QWORD PTR [rax+0x8],r11
   140030cc3:	mov    rax,QWORD PTR [r10+0x8]
   140030cc7:	mov    QWORD PTR [rax],r11
   140030cca:	mov    rax,QWORD PTR [r10+0x8]
   140030cce:	jmp    0x140030cf4
   140030cd0:	test   r8b,r8b
   140030cd3:	je     0x140030ce6
   140030cd5:	mov    QWORD PTR [r9],r11
   140030cd8:	mov    rax,QWORD PTR [r10+0x8]
   140030cdc:	cmp    r9,QWORD PTR [rax]
   140030cdf:	jne    0x140030cf8
   140030ce1:	mov    QWORD PTR [rax],r11
   140030ce4:	jmp    0x140030cf8
   140030ce6:	mov    QWORD PTR [r9+0x10],r11
   140030cea:	mov    rax,QWORD PTR [r10+0x8]
   140030cee:	cmp    r9,QWORD PTR [rax+0x10]
   140030cf2:	jne    0x140030cf8
   140030cf4:	mov    QWORD PTR [rax+0x10],r11
   140030cf8:	mov    rax,QWORD PTR [r11+0x8]
   140030cfc:	mov    rdx,r11
   140030cff:	cmp    BYTE PTR [rax+0x28],0x0
   140030d03:	jne    0x140030eea
   140030d09:	nop    DWORD PTR [rax+0x0]
   140030d10:	mov    rax,QWORD PTR [rdx+0x8]
   140030d14:	mov    rcx,QWORD PTR [rax+0x8]
   140030d18:	cmp    rax,QWORD PTR [rcx]
   140030d1b:	jne    0x140030df8
   140030d21:	mov    r8,QWORD PTR [rcx+0x10]
   140030d25:	cmp    BYTE PTR [r8+0x28],0x0
   140030d2a:	je     0x140030e02
   140030d30:	cmp    rdx,QWORD PTR [rax+0x10]
   140030d34:	jne    0x140030d82
   140030d36:	mov    rcx,QWORD PTR [rax+0x10]
   140030d3a:	mov    rdx,rax
   140030d3d:	mov    rax,QWORD PTR [rcx]
   140030d40:	mov    QWORD PTR [rdx+0x10],rax
   140030d44:	mov    rax,QWORD PTR [rcx]
   140030d47:	cmp    BYTE PTR [rax+0x29],0x0
   140030d4b:	jne    0x140030d51
   140030d4d:	mov    QWORD PTR [rax+0x8],rdx
   140030d51:	mov    rax,QWORD PTR [rdx+0x8]
   140030d55:	mov    QWORD PTR [rcx+0x8],rax
   140030d59:	mov    rax,QWORD PTR [r10+0x8]
   140030d5d:	cmp    rdx,QWORD PTR [rax+0x8]
   140030d61:	jne    0x140030d69
   140030d63:	mov    QWORD PTR [rax+0x8],rcx
   140030d67:	jmp    0x140030d7b
   140030d69:	mov    rax,QWORD PTR [rdx+0x8]
   140030d6d:	cmp    rdx,QWORD PTR [rax]
   140030d70:	jne    0x140030d77
   140030d72:	mov    QWORD PTR [rax],rcx
   140030d75:	jmp    0x140030d7b
   140030d77:	mov    QWORD PTR [rax+0x10],rcx
   140030d7b:	mov    QWORD PTR [rcx],rdx
   140030d7e:	mov    QWORD PTR [rdx+0x8],rcx
   140030d82:	mov    rax,QWORD PTR [rdx+0x8]
   140030d86:	mov    BYTE PTR [rax+0x28],0x1
   140030d8a:	mov    rax,QWORD PTR [rdx+0x8]
   140030d8e:	mov    rcx,QWORD PTR [rax+0x8]
   140030d92:	mov    BYTE PTR [rcx+0x28],0x0
   140030d96:	mov    rax,QWORD PTR [rdx+0x8]
   140030d9a:	mov    rcx,QWORD PTR [rax+0x8]
   140030d9e:	mov    r8,QWORD PTR [rcx]
   140030da1:	mov    rax,QWORD PTR [r8+0x10]
   140030da5:	mov    QWORD PTR [rcx],rax
   140030da8:	mov    rax,QWORD PTR [r8+0x10]
   140030dac:	cmp    BYTE PTR [rax+0x29],0x0
   140030db0:	jne    0x140030db6
   140030db2:	mov    QWORD PTR [rax+0x8],rcx
   140030db6:	mov    rax,QWORD PTR [rcx+0x8]
   140030dba:	mov    QWORD PTR [r8+0x8],rax
   140030dbe:	mov    rax,QWORD PTR [r10+0x8]
   140030dc2:	cmp    rcx,QWORD PTR [rax+0x8]
   140030dc6:	jne    0x140030dd5
   140030dc8:	mov    QWORD PTR [rax+0x8],r8
   140030dcc:	mov    QWORD PTR [r8+0x10],rcx
   140030dd0:	jmp    0x140030ed8
   140030dd5:	mov    rax,QWORD PTR [rcx+0x8]
   140030dd9:	cmp    rcx,QWORD PTR [rax+0x10]
   140030ddd:	jne    0x140030dec
   140030ddf:	mov    QWORD PTR [rax+0x10],r8
   140030de3:	mov    QWORD PTR [r8+0x10],rcx
   140030de7:	jmp    0x140030ed8
   140030dec:	mov    QWORD PTR [rax],r8
   140030def:	mov    QWORD PTR [r8+0x10],rcx
   140030df3:	jmp    0x140030ed8
   140030df8:	mov    r8,QWORD PTR [rcx]
   140030dfb:	cmp    BYTE PTR [r8+0x28],0x0
   140030e00:	jne    0x140030e24
   140030e02:	mov    BYTE PTR [rax+0x28],0x1
   140030e06:	mov    BYTE PTR [r8+0x28],0x1
   140030e0b:	mov    rax,QWORD PTR [rdx+0x8]
   140030e0f:	mov    rcx,QWORD PTR [rax+0x8]
   140030e13:	mov    BYTE PTR [rcx+0x28],0x0
   140030e17:	mov    rax,QWORD PTR [rdx+0x8]
   140030e1b:	mov    rdx,QWORD PTR [rax+0x8]
   140030e1f:	jmp    0x140030edc
   140030e24:	cmp    rdx,QWORD PTR [rax]
   140030e27:	jne    0x140030e77
   140030e29:	mov    rcx,QWORD PTR [rax]
   140030e2c:	mov    rdx,rax
   140030e2f:	mov    rax,QWORD PTR [rcx+0x10]
   140030e33:	mov    QWORD PTR [rdx],rax
   140030e36:	mov    rax,QWORD PTR [rcx+0x10]
   140030e3a:	cmp    BYTE PTR [rax+0x29],0x0
   140030e3e:	jne    0x140030e44
   140030e40:	mov    QWORD PTR [rax+0x8],rdx
   140030e44:	mov    rax,QWORD PTR [rdx+0x8]
   140030e48:	mov    QWORD PTR [rcx+0x8],rax
   140030e4c:	mov    rax,QWORD PTR [r10+0x8]
   140030e50:	cmp    rdx,QWORD PTR [rax+0x8]
   140030e54:	jne    0x140030e5c
   140030e56:	mov    QWORD PTR [rax+0x8],rcx
   140030e5a:	jmp    0x140030e6f
   140030e5c:	mov    rax,QWORD PTR [rdx+0x8]
   140030e60:	cmp    rdx,QWORD PTR [rax+0x10]
   140030e64:	jne    0x140030e6c
   140030e66:	mov    QWORD PTR [rax+0x10],rcx
   140030e6a:	jmp    0x140030e6f
   140030e6c:	mov    QWORD PTR [rax],rcx
   140030e6f:	mov    QWORD PTR [rcx+0x10],rdx
   140030e73:	mov    QWORD PTR [rdx+0x8],rcx
   140030e77:	mov    rax,QWORD PTR [rdx+0x8]
   140030e7b:	mov    BYTE PTR [rax+0x28],0x1
   140030e7f:	mov    rax,QWORD PTR [rdx+0x8]
   140030e83:	mov    rcx,QWORD PTR [rax+0x8]
   140030e87:	mov    BYTE PTR [rcx+0x28],0x0
   140030e8b:	mov    rax,QWORD PTR [rdx+0x8]
   140030e8f:	mov    rcx,QWORD PTR [rax+0x8]
   140030e93:	mov    r8,QWORD PTR [rcx+0x10]
   140030e97:	mov    rax,QWORD PTR [r8]
   140030e9a:	mov    QWORD PTR [rcx+0x10],rax
   140030e9e:	mov    rax,QWORD PTR [r8]
   140030ea1:	cmp    BYTE PTR [rax+0x29],0x0
   140030ea5:	jne    0x140030eab
   140030ea7:	mov    QWORD PTR [rax+0x8],rcx
   140030eab:	mov    rax,QWORD PTR [rcx+0x8]
   140030eaf:	mov    QWORD PTR [r8+0x8],rax
   140030eb3:	mov    rax,QWORD PTR [r10+0x8]
   140030eb7:	cmp    rcx,QWORD PTR [rax+0x8]
   140030ebb:	jne    0x140030ec3
   140030ebd:	mov    QWORD PTR [rax+0x8],r8
   140030ec1:	jmp    0x140030ed5
   140030ec3:	mov    rax,QWORD PTR [rcx+0x8]
   140030ec7:	cmp    rcx,QWORD PTR [rax]
   140030eca:	jne    0x140030ed1
   140030ecc:	mov    QWORD PTR [rax],r8
   140030ecf:	jmp    0x140030ed5
   140030ed1:	mov    QWORD PTR [rax+0x10],r8
   140030ed5:	mov    QWORD PTR [r8],rcx
   140030ed8:	mov    QWORD PTR [rcx+0x8],r8
   140030edc:	mov    rax,QWORD PTR [rdx+0x8]
   140030ee0:	cmp    BYTE PTR [rax+0x28],0x0
   140030ee4:	je     0x140030d10
   140030eea:	mov    rax,QWORD PTR [r10+0x8]
   140030eee:	mov    QWORD PTR [rbx],r11
   140030ef1:	mov    rcx,QWORD PTR [rax+0x8]
   140030ef5:	mov    rax,rbx
   140030ef8:	mov    BYTE PTR [rcx+0x28],0x1
   140030efc:	add    rsp,0x20
   140030f00:	pop    rbx
   140030f01:	ret    
   140030f02:	int3   
   140030f03:	int3   
   140030f04:	int3   
   140030f05:	int3   
   140030f06:	int3   
   140030f07:	int3   
   140030f08:	int3   
   140030f09:	int3   
   140030f0a:	int3   
   140030f0b:	int3   
   140030f0c:	int3   
   140030f0d:	int3   
   140030f0e:	int3   
   140030f0f:	int3   
   140030f10:	mov    QWORD PTR [rsp+0x10],rbx
   140030f15:	push   rdi
   140030f16:	sub    rsp,0x30
   140030f1a:	mov    r9,QWORD PTR [rcx+0x8]
   140030f1e:	mov    r11,r8
   140030f21:	mov    rdi,rdx
   140030f24:	mov    rax,QWORD PTR [r9+0x8]
   140030f28:	mov    r8b,0x1
   140030f2b:	cmp    BYTE PTR [rax+0x31],0x0
   140030f2f:	jne    0x140030f5f
   140030f31:	mov    r10d,DWORD PTR [r11+0x18]
   140030f35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030f40:	cmp    r10d,DWORD PTR [rax+0x18]
   140030f44:	mov    r9,rax
   140030f47:	setb   r8b
   140030f4b:	test   r8b,r8b
   140030f4e:	je     0x140030f55
   140030f50:	mov    rax,QWORD PTR [rax]
   140030f53:	jmp    0x140030f59
   140030f55:	mov    rax,QWORD PTR [rax+0x10]
   140030f59:	cmp    BYTE PTR [rax+0x31],0x0
   140030f5d:	je     0x140030f40
   140030f5f:	mov    rbx,r9
   140030f62:	test   r8b,r8b
   140030f65:	je     0x140030ffa
   140030f6b:	mov    rax,QWORD PTR [rcx+0x8]
   140030f6f:	cmp    r9,QWORD PTR [rax]
   140030f72:	jne    0x140030f9e
   140030f74:	mov    r8b,0x1
   140030f77:	lea    rdx,[rsp+0x40]
   140030f7c:	mov    QWORD PTR [rsp+0x20],r11
   140030f81:	call   0x140031030
   140030f86:	mov    BYTE PTR [rdi+0x8],0x1
   140030f8a:	mov    rcx,QWORD PTR [rax]
   140030f8d:	mov    rax,rdi
   140030f90:	mov    QWORD PTR [rdi],rcx
   140030f93:	mov    rbx,QWORD PTR [rsp+0x48]
   140030f98:	add    rsp,0x30
   140030f9c:	pop    rdi
   140030f9d:	ret    
   140030f9e:	cmp    BYTE PTR [r9+0x31],0x0
   140030fa3:	je     0x140030fab
   140030fa5:	mov    rbx,QWORD PTR [r9+0x10]
   140030fa9:	jmp    0x140030ffa
   140030fab:	mov    rax,QWORD PTR [r9]
   140030fae:	cmp    BYTE PTR [rax+0x31],0x0
   140030fb2:	jne    0x140030fd0
   140030fb4:	mov    rbx,rax
   140030fb7:	mov    rax,QWORD PTR [rax+0x10]
   140030fbb:	cmp    BYTE PTR [rax+0x31],0x0
   140030fbf:	jne    0x140030ffa
   140030fc1:	mov    rbx,rax
   140030fc4:	mov    rax,QWORD PTR [rax+0x10]
   140030fc8:	cmp    BYTE PTR [rax+0x31],0x0
   140030fcc:	je     0x140030fc1
   140030fce:	jmp    0x140030ffa
   140030fd0:	mov    rax,QWORD PTR [r9+0x8]
   140030fd4:	cmp    BYTE PTR [rax+0x31],0x0
   140030fd8:	jne    0x140030ff2
   140030fda:	nop    WORD PTR [rax+rax*1+0x0]
   140030fe0:	cmp    rbx,QWORD PTR [rax]
   140030fe3:	jne    0x140030ff2
   140030fe5:	mov    rbx,rax
   140030fe8:	mov    rax,QWORD PTR [rax+0x8]
   140030fec:	cmp    BYTE PTR [rax+0x31],0x0
   140030ff0:	je     0x140030fe0
   140030ff2:	cmp    BYTE PTR [rbx+0x31],0x0
   140030ff6:	cmove  rbx,rax
   140030ffa:	mov    eax,DWORD PTR [r11+0x18]
   140030ffe:	cmp    DWORD PTR [rbx+0x18],eax
   140031001:	jb     0x140030f77
   140031007:	mov    rcx,r11
   14003100a:	call   0x1400330c0
   14003100f:	mov    QWORD PTR [rdi],rbx
   140031012:	mov    rbx,QWORD PTR [rsp+0x48]
   140031017:	mov    BYTE PTR [rdi+0x8],0x0
   14003101b:	mov    rax,rdi
   14003101e:	add    rsp,0x30
   140031022:	pop    rdi
   140031023:	ret    
   140031024:	int3   
   140031025:	int3   
   140031026:	int3   
   140031027:	int3   
   140031028:	int3   
   140031029:	int3   
   14003102a:	int3   
   14003102b:	int3   
   14003102c:	int3   
   14003102d:	int3   
   14003102e:	int3   
   14003102f:	int3   
   140031030:	rex push rbx
   140031032:	sub    rsp,0x20
   140031036:	mov    rax,QWORD PTR [rcx+0x10]
   14003103a:	mov    r10,rcx
   14003103d:	movabs rcx,0xaaaaaaaaaaaaaa9
   140031047:	mov    rbx,rdx
   14003104a:	cmp    rax,rcx
   14003104d:	jb     0x140031066
   14003104f:	mov    rcx,QWORD PTR [rsp+0x50]
   140031054:	call   0x1400330c0
   140031059:	lea    rcx,[rip+0x3a270]        # 0x14006b2d0
   140031060:	call   0x140032d00
   140031065:	int3   
   140031066:	mov    r11,QWORD PTR [rsp+0x50]
   14003106b:	inc    rax
   14003106e:	mov    QWORD PTR [r10+0x10],rax
   140031072:	mov    QWORD PTR [r11+0x8],r9
   140031076:	mov    rax,QWORD PTR [r10+0x8]
   14003107a:	cmp    r9,rax
   14003107d:	jne    0x140031090
   14003107f:	mov    QWORD PTR [rax+0x8],r11
   140031083:	mov    rax,QWORD PTR [r10+0x8]
   140031087:	mov    QWORD PTR [rax],r11
   14003108a:	mov    rax,QWORD PTR [r10+0x8]
   14003108e:	jmp    0x1400310b4
   140031090:	test   r8b,r8b
   140031093:	je     0x1400310a6
   140031095:	mov    QWORD PTR [r9],r11
   140031098:	mov    rax,QWORD PTR [r10+0x8]
   14003109c:	cmp    r9,QWORD PTR [rax]
   14003109f:	jne    0x1400310b8
   1400310a1:	mov    QWORD PTR [rax],r11
   1400310a4:	jmp    0x1400310b8
   1400310a6:	mov    QWORD PTR [r9+0x10],r11
   1400310aa:	mov    rax,QWORD PTR [r10+0x8]
   1400310ae:	cmp    r9,QWORD PTR [rax+0x10]
   1400310b2:	jne    0x1400310b8
   1400310b4:	mov    QWORD PTR [rax+0x10],r11
   1400310b8:	mov    rax,QWORD PTR [r11+0x8]
   1400310bc:	mov    rdx,r11
   1400310bf:	cmp    BYTE PTR [rax+0x30],0x0
   1400310c3:	jne    0x1400312aa
   1400310c9:	nop    DWORD PTR [rax+0x0]
   1400310d0:	mov    rax,QWORD PTR [rdx+0x8]
   1400310d4:	mov    rcx,QWORD PTR [rax+0x8]
   1400310d8:	cmp    rax,QWORD PTR [rcx]
   1400310db:	jne    0x1400311b8
   1400310e1:	mov    r8,QWORD PTR [rcx+0x10]
   1400310e5:	cmp    BYTE PTR [r8+0x30],0x0
   1400310ea:	je     0x1400311c2
   1400310f0:	cmp    rdx,QWORD PTR [rax+0x10]
   1400310f4:	jne    0x140031142
   1400310f6:	mov    rcx,QWORD PTR [rax+0x10]
   1400310fa:	mov    rdx,rax
   1400310fd:	mov    rax,QWORD PTR [rcx]
   140031100:	mov    QWORD PTR [rdx+0x10],rax
   140031104:	mov    rax,QWORD PTR [rcx]
   140031107:	cmp    BYTE PTR [rax+0x31],0x0
   14003110b:	jne    0x140031111
   14003110d:	mov    QWORD PTR [rax+0x8],rdx
   140031111:	mov    rax,QWORD PTR [rdx+0x8]
   140031115:	mov    QWORD PTR [rcx+0x8],rax
   140031119:	mov    rax,QWORD PTR [r10+0x8]
   14003111d:	cmp    rdx,QWORD PTR [rax+0x8]
   140031121:	jne    0x140031129
   140031123:	mov    QWORD PTR [rax+0x8],rcx
   140031127:	jmp    0x14003113b
   140031129:	mov    rax,QWORD PTR [rdx+0x8]
   14003112d:	cmp    rdx,QWORD PTR [rax]
   140031130:	jne    0x140031137
   140031132:	mov    QWORD PTR [rax],rcx
   140031135:	jmp    0x14003113b
   140031137:	mov    QWORD PTR [rax+0x10],rcx
   14003113b:	mov    QWORD PTR [rcx],rdx
   14003113e:	mov    QWORD PTR [rdx+0x8],rcx
   140031142:	mov    rax,QWORD PTR [rdx+0x8]
   140031146:	mov    BYTE PTR [rax+0x30],0x1
   14003114a:	mov    rax,QWORD PTR [rdx+0x8]
   14003114e:	mov    rcx,QWORD PTR [rax+0x8]
   140031152:	mov    BYTE PTR [rcx+0x30],0x0
   140031156:	mov    rax,QWORD PTR [rdx+0x8]
   14003115a:	mov    rcx,QWORD PTR [rax+0x8]
   14003115e:	mov    r8,QWORD PTR [rcx]
   140031161:	mov    rax,QWORD PTR [r8+0x10]
   140031165:	mov    QWORD PTR [rcx],rax
   140031168:	mov    rax,QWORD PTR [r8+0x10]
   14003116c:	cmp    BYTE PTR [rax+0x31],0x0
   140031170:	jne    0x140031176
   140031172:	mov    QWORD PTR [rax+0x8],rcx
   140031176:	mov    rax,QWORD PTR [rcx+0x8]
   14003117a:	mov    QWORD PTR [r8+0x8],rax
   14003117e:	mov    rax,QWORD PTR [r10+0x8]
   140031182:	cmp    rcx,QWORD PTR [rax+0x8]
   140031186:	jne    0x140031195
   140031188:	mov    QWORD PTR [rax+0x8],r8
   14003118c:	mov    QWORD PTR [r8+0x10],rcx
   140031190:	jmp    0x140031298
   140031195:	mov    rax,QWORD PTR [rcx+0x8]
   140031199:	cmp    rcx,QWORD PTR [rax+0x10]
   14003119d:	jne    0x1400311ac
   14003119f:	mov    QWORD PTR [rax+0x10],r8
   1400311a3:	mov    QWORD PTR [r8+0x10],rcx
   1400311a7:	jmp    0x140031298
   1400311ac:	mov    QWORD PTR [rax],r8
   1400311af:	mov    QWORD PTR [r8+0x10],rcx
   1400311b3:	jmp    0x140031298
   1400311b8:	mov    r8,QWORD PTR [rcx]
   1400311bb:	cmp    BYTE PTR [r8+0x30],0x0
   1400311c0:	jne    0x1400311e4
   1400311c2:	mov    BYTE PTR [rax+0x30],0x1
   1400311c6:	mov    BYTE PTR [r8+0x30],0x1
   1400311cb:	mov    rax,QWORD PTR [rdx+0x8]
   1400311cf:	mov    rcx,QWORD PTR [rax+0x8]
   1400311d3:	mov    BYTE PTR [rcx+0x30],0x0
   1400311d7:	mov    rax,QWORD PTR [rdx+0x8]
   1400311db:	mov    rdx,QWORD PTR [rax+0x8]
   1400311df:	jmp    0x14003129c
   1400311e4:	cmp    rdx,QWORD PTR [rax]
   1400311e7:	jne    0x140031237
   1400311e9:	mov    rcx,QWORD PTR [rax]
   1400311ec:	mov    rdx,rax
   1400311ef:	mov    rax,QWORD PTR [rcx+0x10]
   1400311f3:	mov    QWORD PTR [rdx],rax
   1400311f6:	mov    rax,QWORD PTR [rcx+0x10]
   1400311fa:	cmp    BYTE PTR [rax+0x31],0x0
   1400311fe:	jne    0x140031204
   140031200:	mov    QWORD PTR [rax+0x8],rdx
   140031204:	mov    rax,QWORD PTR [rdx+0x8]
   140031208:	mov    QWORD PTR [rcx+0x8],rax
   14003120c:	mov    rax,QWORD PTR [r10+0x8]
   140031210:	cmp    rdx,QWORD PTR [rax+0x8]
   140031214:	jne    0x14003121c
   140031216:	mov    QWORD PTR [rax+0x8],rcx
   14003121a:	jmp    0x14003122f
   14003121c:	mov    rax,QWORD PTR [rdx+0x8]
   140031220:	cmp    rdx,QWORD PTR [rax+0x10]
   140031224:	jne    0x14003122c
   140031226:	mov    QWORD PTR [rax+0x10],rcx
   14003122a:	jmp    0x14003122f
   14003122c:	mov    QWORD PTR [rax],rcx
   14003122f:	mov    QWORD PTR [rcx+0x10],rdx
   140031233:	mov    QWORD PTR [rdx+0x8],rcx
   140031237:	mov    rax,QWORD PTR [rdx+0x8]
   14003123b:	mov    BYTE PTR [rax+0x30],0x1
   14003123f:	mov    rax,QWORD PTR [rdx+0x8]
   140031243:	mov    rcx,QWORD PTR [rax+0x8]
   140031247:	mov    BYTE PTR [rcx+0x30],0x0
   14003124b:	mov    rax,QWORD PTR [rdx+0x8]
   14003124f:	mov    rcx,QWORD PTR [rax+0x8]
   140031253:	mov    r8,QWORD PTR [rcx+0x10]
   140031257:	mov    rax,QWORD PTR [r8]
   14003125a:	mov    QWORD PTR [rcx+0x10],rax
   14003125e:	mov    rax,QWORD PTR [r8]
   140031261:	cmp    BYTE PTR [rax+0x31],0x0
   140031265:	jne    0x14003126b
   140031267:	mov    QWORD PTR [rax+0x8],rcx
   14003126b:	mov    rax,QWORD PTR [rcx+0x8]
   14003126f:	mov    QWORD PTR [r8+0x8],rax
   140031273:	mov    rax,QWORD PTR [r10+0x8]
   140031277:	cmp    rcx,QWORD PTR [rax+0x8]
   14003127b:	jne    0x140031283
   14003127d:	mov    QWORD PTR [rax+0x8],r8
   140031281:	jmp    0x140031295
   140031283:	mov    rax,QWORD PTR [rcx+0x8]
   140031287:	cmp    rcx,QWORD PTR [rax]
   14003128a:	jne    0x140031291
   14003128c:	mov    QWORD PTR [rax],r8
   14003128f:	jmp    0x140031295
   140031291:	mov    QWORD PTR [rax+0x10],r8
   140031295:	mov    QWORD PTR [r8],rcx
   140031298:	mov    QWORD PTR [rcx+0x8],r8
   14003129c:	mov    rax,QWORD PTR [rdx+0x8]
   1400312a0:	cmp    BYTE PTR [rax+0x30],0x0
   1400312a4:	je     0x1400310d0
   1400312aa:	mov    rax,QWORD PTR [r10+0x8]
   1400312ae:	mov    QWORD PTR [rbx],r11
   1400312b1:	mov    rcx,QWORD PTR [rax+0x8]
   1400312b5:	mov    rax,rbx
   1400312b8:	mov    BYTE PTR [rcx+0x30],0x1
   1400312bc:	add    rsp,0x20
   1400312c0:	pop    rbx
   1400312c1:	ret    
   1400312c2:	int3   
   1400312c3:	int3   
   1400312c4:	int3   
   1400312c5:	int3   
   1400312c6:	int3   
   1400312c7:	int3   
   1400312c8:	int3   
   1400312c9:	int3   
   1400312ca:	int3   
   1400312cb:	int3   
   1400312cc:	int3   
   1400312cd:	int3   
   1400312ce:	int3   
   1400312cf:	int3   
   1400312d0:	rex push rbx
   1400312d2:	sub    rsp,0x30
   1400312d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400312df:	mov    rbx,rdx
   1400312e2:	call   0x140032c60
   1400312e7:	mov    QWORD PTR [rsp+0x50],rax
   1400312ec:	lea    r8,[rax+0x18]
   1400312f0:	test   r8,r8
   1400312f3:	je     0x140031302
   1400312f5:	mov    ecx,DWORD PTR [rbx]
   1400312f7:	mov    DWORD PTR [r8],ecx
   1400312fa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400312fe:	mov    QWORD PTR [r8+0x8],rcx
   140031302:	add    rsp,0x30
   140031306:	pop    rbx
   140031307:	ret    
   140031308:	int3   
   140031309:	int3   
   14003130a:	int3   
   14003130b:	int3   
   14003130c:	int3   
   14003130d:	int3   
   14003130e:	int3   
   14003130f:	int3   
   140031310:	rex push rbx
   140031312:	sub    rsp,0x30
   140031316:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003131f:	mov    rbx,rdx
   140031322:	call   0x140031360
   140031327:	mov    r11,rax
   14003132a:	mov    QWORD PTR [rsp+0x50],rax
   14003132f:	lea    r8,[rax+0x18]
   140031333:	test   r8,r8
   140031336:	je     0x14003134d
   140031338:	mov    ecx,DWORD PTR [rbx]
   14003133a:	mov    DWORD PTR [r8],ecx
   14003133d:	mov    rcx,QWORD PTR [rbx+0x8]
   140031341:	mov    QWORD PTR [r8+0x8],rcx
   140031345:	mov    rax,QWORD PTR [rbx+0x10]
   140031349:	mov    QWORD PTR [r8+0x10],rax
   14003134d:	mov    rax,r11
   140031350:	add    rsp,0x30
   140031354:	pop    rbx
   140031355:	ret    
   140031356:	int3   
   140031357:	int3   
   140031358:	int3   
   140031359:	int3   
   14003135a:	int3   
   14003135b:	int3   
   14003135c:	int3   
   14003135d:	int3   
   14003135e:	int3   
   14003135f:	int3   
   140031360:	rex push rbx
   140031362:	sub    rsp,0x40
   140031366:	mov    rbx,rcx
   140031369:	mov    ecx,0x38
   14003136e:	call   0x1400331a0
   140031373:	test   rax,rax
   140031376:	je     0x14003139b
   140031378:	mov    rdx,QWORD PTR [rbx+0x8]
   14003137c:	mov    QWORD PTR [rax],rdx
   14003137f:	mov    rdx,QWORD PTR [rbx+0x8]
   140031383:	mov    QWORD PTR [rax+0x8],rdx
   140031387:	mov    rcx,QWORD PTR [rbx+0x8]
   14003138b:	mov    WORD PTR [rax+0x30],0x0
   140031391:	mov    QWORD PTR [rax+0x10],rcx
   140031395:	add    rsp,0x40
   140031399:	pop    rbx
   14003139a:	ret    
   14003139b:	lea    rdx,[rsp+0x58]
   1400313a0:	lea    rcx,[rsp+0x20]
   1400313a5:	mov    QWORD PTR [rsp+0x58],0x0
   1400313ae:	call   0x140032fd4
   1400313b3:	lea    r11,[rip+0x374d6]        # 0x140068890
   1400313ba:	lea    rdx,[rip+0x5205f]        # 0x140083420
   1400313c1:	lea    rcx,[rsp+0x20]
   1400313c6:	mov    QWORD PTR [rsp+0x20],r11
   1400313cb:	call   0x140036358
   1400313d0:	int3   
   1400313d1:	int3   
   1400313d2:	int3   
   1400313d3:	int3   
   1400313d4:	int3   
   1400313d5:	int3   
   1400313d6:	int3   
   1400313d7:	int3   
   1400313d8:	int3   
   1400313d9:	int3   
   1400313da:	int3   
   1400313db:	int3   
   1400313dc:	int3   
   1400313dd:	int3   
   1400313de:	int3   
   1400313df:	int3   
   1400313e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400313e5:	push   rdi
   1400313e6:	sub    rsp,0x20
   1400313ea:	lea    rax,[rip+0x45fcf]        # 0x1400773c0
   1400313f1:	mov    rbx,rcx
   1400313f4:	mov    edi,edx
   1400313f6:	mov    QWORD PTR [rcx],rax
   1400313f9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400313fd:	test   rcx,rcx
   140031400:	je     0x140031410
   140031402:	call   QWORD PTR [rip+0x36c40]        # 0x140068048
   140031408:	mov    QWORD PTR [rbx+0x8],0x0
   140031410:	mov    QWORD PTR [rbx+0x10],0x0
   140031418:	test   dil,0x1
   14003141c:	je     0x140031426
   14003141e:	mov    rcx,rbx
   140031421:	call   0x1400330c0
   140031426:	mov    rax,rbx
   140031429:	mov    rbx,QWORD PTR [rsp+0x30]
   14003142e:	add    rsp,0x20
   140031432:	pop    rdi
   140031433:	ret    
   140031434:	int3   
   140031435:	int3   
   140031436:	int3   
   140031437:	int3   
   140031438:	int3   
   140031439:	int3   
   14003143a:	int3   
   14003143b:	int3   
   14003143c:	int3   
   14003143d:	int3   
   14003143e:	int3   
   14003143f:	int3   
   140031440:	rex push rbx
   140031442:	sub    rsp,0x20
   140031446:	lea    rax,[rip+0x45f73]        # 0x1400773c0
   14003144d:	mov    rbx,rcx
   140031450:	mov    QWORD PTR [rcx],rax
   140031453:	mov    rcx,QWORD PTR [rcx+0x8]
   140031457:	test   rcx,rcx
   14003145a:	je     0x140031473
   14003145c:	call   QWORD PTR [rip+0x36be6]        # 0x140068048
   140031462:	xor    r11d,r11d
   140031465:	mov    QWORD PTR [rbx+0x8],r11
   140031469:	mov    QWORD PTR [rbx+0x10],r11
   14003146d:	add    rsp,0x20
   140031471:	pop    rbx
   140031472:	ret    
   140031473:	xor    r11d,r11d
   140031476:	mov    QWORD PTR [rbx+0x10],r11
   14003147a:	add    rsp,0x20
   14003147e:	pop    rbx
   14003147f:	ret    
   140031480:	mov    QWORD PTR [rsp+0x8],rbx
   140031485:	mov    QWORD PTR [rsp+0x10],rbp
   14003148a:	mov    QWORD PTR [rsp+0x18],rsi
   14003148f:	push   rdi
   140031490:	push   r12
   140031492:	push   r13
   140031494:	sub    rsp,0x50
   140031498:	lea    rdi,[rcx+0x8]
   14003149c:	mov    rsi,rcx
   14003149f:	xor    ebx,ebx
   1400314a1:	mov    rcx,QWORD PTR [rdi]
   1400314a4:	mov    r12d,r9d
   1400314a7:	mov    ebp,r8d
   1400314aa:	mov    r13,rdx
   1400314ad:	test   rcx,rcx
   1400314b0:	je     0x1400314bf
   1400314b2:	call   QWORD PTR [rip+0x36b90]        # 0x140068048
   1400314b8:	mov    QWORD PTR [rdi],rbx
   1400314bb:	mov    QWORD PTR [rsi+0x10],rbx
   1400314bf:	or     r12d,0x20017
   1400314c6:	xor    r8d,r8d
   1400314c9:	mov    QWORD PTR [rdi],rbx
   1400314cc:	mov    rdx,r13
   1400314cf:	mov    rcx,0xffffffff80000002
   1400314d6:	test   ebp,ebp
   1400314d8:	je     0x1400314fd
   1400314da:	mov    QWORD PTR [rsp+0x40],rbx
   1400314df:	mov    QWORD PTR [rsp+0x38],rdi
   1400314e4:	mov    QWORD PTR [rsp+0x30],rbx
   1400314e9:	xor    r9d,r9d
   1400314ec:	mov    DWORD PTR [rsp+0x28],r12d
   1400314f1:	mov    DWORD PTR [rsp+0x20],ebx
   1400314f5:	call   QWORD PTR [rip+0x36b3d]        # 0x140068038
   1400314fb:	jmp    0x14003150b
   1400314fd:	mov    r9d,r12d
   140031500:	mov    QWORD PTR [rsp+0x20],rdi
   140031505:	call   QWORD PTR [rip+0x36b45]        # 0x140068050
   14003150b:	mov    rbp,QWORD PTR [rsp+0x78]
   140031510:	mov    rsi,QWORD PTR [rsp+0x80]
   140031518:	test   eax,eax
   14003151a:	sete   bl
   14003151d:	mov    eax,ebx
   14003151f:	mov    rbx,QWORD PTR [rsp+0x70]
   140031524:	add    rsp,0x50
   140031528:	pop    r13
   14003152a:	pop    r12
   14003152c:	pop    rdi
   14003152d:	ret    
   14003152e:	int3   
   14003152f:	int3   
   140031530:	rex push rbx
   140031532:	sub    rsp,0x70
   140031536:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14003153b:	mov    rax,QWORD PTR [rip+0x53b66]        # 0x1400850a8
   140031542:	xor    rax,rsp
   140031545:	mov    QWORD PTR [rsp+0x58],rax
   14003154a:	mov    rbx,rcx
   14003154d:	mov    r8d,edx
   140031550:	lea    rdx,[rip+0x3d2a9]        # 0x14006e800
   140031557:	lea    rcx,[rsp+0x38]
   14003155c:	movapd xmm6,xmm2
   140031560:	call   0x14002f470
   140031565:	mov    rcx,QWORD PTR [rbx+0x8]
   140031569:	lea    rax,[rsp+0x30]
   14003156e:	movsd  QWORD PTR [rsp+0x30],xmm6
   140031574:	lea    rdx,[rsp+0x38]
   140031579:	mov    r9d,0x3
   14003157f:	xor    r8d,r8d
   140031582:	mov    DWORD PTR [rsp+0x28],0x8
   14003158a:	mov    QWORD PTR [rsp+0x20],rax
   14003158f:	call   QWORD PTR [rip+0x36aab]        # 0x140068040
   140031595:	xor    ecx,ecx
   140031597:	test   eax,eax
   140031599:	sete   cl
   14003159c:	mov    eax,ecx
   14003159e:	mov    rcx,QWORD PTR [rsp+0x58]
   1400315a3:	xor    rcx,rsp
   1400315a6:	call   0x140032f00
   1400315ab:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   1400315b0:	add    rsp,0x70
   1400315b4:	pop    rbx
   1400315b5:	ret    
   1400315b6:	int3   
   1400315b7:	int3   
   1400315b8:	int3   
   1400315b9:	int3   
   1400315ba:	int3   
   1400315bb:	int3   
   1400315bc:	int3   
   1400315bd:	int3   
   1400315be:	int3   
   1400315bf:	int3   
   1400315c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400315c5:	push   rbp
   1400315c6:	push   rsi
   1400315c7:	push   rdi
   1400315c8:	sub    rsp,0x60
   1400315cc:	mov    rax,QWORD PTR [rip+0x53ad5]        # 0x1400850a8
   1400315d3:	xor    rax,rsp
   1400315d6:	mov    QWORD PTR [rsp+0x58],rax
   1400315db:	mov    rbp,r8
   1400315de:	mov    esi,edx
   1400315e0:	mov    rdi,rcx
   1400315e3:	mov    r8d,edx
   1400315e6:	lea    rcx,[rsp+0x38]
   1400315eb:	lea    rdx,[rip+0x3d20e]        # 0x14006e800
   1400315f2:	xor    ebx,ebx
   1400315f4:	call   0x14002f470
   1400315f9:	mov    rcx,QWORD PTR [rdi+0x8]
   1400315fd:	lea    rax,[rsp+0x30]
   140031602:	lea    r9,[rsp+0x34]
   140031607:	lea    rdx,[rsp+0x38]
   14003160c:	mov    QWORD PTR [rsp+0x28],rax
   140031611:	xor    r8d,r8d
   140031614:	mov    DWORD PTR [rsp+0x30],0x8
   14003161c:	mov    QWORD PTR [rsp+0x20],rbp
   140031621:	call   QWORD PTR [rip+0x36a31]        # 0x140068058
   140031627:	test   eax,eax
   140031629:	jne    0x140031630
   14003162b:	lea    eax,[rbx+0x1]
   14003162e:	jmp    0x14003164a
   140031630:	mov    rcx,QWORD PTR [rdi+0x10]
   140031634:	test   rcx,rcx
   140031637:	je     0x140031648
   140031639:	mov    r8,rbp
   14003163c:	mov    edx,esi
   14003163e:	call   0x14002c940
   140031643:	test   al,al
   140031645:	setne  bl
   140031648:	mov    eax,ebx
   14003164a:	mov    rcx,QWORD PTR [rsp+0x58]
   14003164f:	xor    rcx,rsp
   140031652:	call   0x140032f00
   140031657:	mov    rbx,QWORD PTR [rsp+0x98]
   14003165f:	add    rsp,0x60
   140031663:	pop    rdi
   140031664:	pop    rsi
   140031665:	pop    rbp
   140031666:	ret    
   140031667:	int3   
   140031668:	int3   
   140031669:	int3   
   14003166a:	int3   
   14003166b:	int3   
   14003166c:	int3   
   14003166d:	int3   
   14003166e:	int3   
   14003166f:	int3   
   140031670:	rex push rbx
   140031672:	push   rsi
   140031673:	push   rdi
   140031674:	sub    rsp,0x60
   140031678:	mov    rax,QWORD PTR [rip+0x53a29]        # 0x1400850a8
   14003167f:	xor    rax,rsp
   140031682:	mov    QWORD PTR [rsp+0x50],rax
   140031687:	mov    rbx,r8
   14003168a:	mov    rsi,rcx
   14003168d:	mov    r8d,edx
   140031690:	lea    rdx,[rip+0x45d19]        # 0x1400773b0
   140031697:	lea    rcx,[rsp+0x30]
   14003169c:	mov    edi,r9d
   14003169f:	call   0x14002f470
   1400316a4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400316a8:	lea    rdx,[rsp+0x30]
   1400316ad:	mov    r9d,0x3
   1400316b3:	xor    r8d,r8d
   1400316b6:	mov    DWORD PTR [rsp+0x28],edi
   1400316ba:	mov    QWORD PTR [rsp+0x20],rbx
   1400316bf:	call   QWORD PTR [rip+0x3697b]        # 0x140068040
   1400316c5:	xor    ecx,ecx
   1400316c7:	test   eax,eax
   1400316c9:	sete   cl
   1400316cc:	mov    eax,ecx
   1400316ce:	mov    rcx,QWORD PTR [rsp+0x50]
   1400316d3:	xor    rcx,rsp
   1400316d6:	call   0x140032f00
   1400316db:	add    rsp,0x60
   1400316df:	pop    rdi
   1400316e0:	pop    rsi
   1400316e1:	pop    rbx
   1400316e2:	ret    
   1400316e3:	int3   
   1400316e4:	int3   
   1400316e5:	int3   
   1400316e6:	int3   
   1400316e7:	int3   
   1400316e8:	int3   
   1400316e9:	int3   
   1400316ea:	int3   
   1400316eb:	int3   
   1400316ec:	int3   
   1400316ed:	int3   
   1400316ee:	int3   
   1400316ef:	int3   
   1400316f0:	rex push rbx
   1400316f2:	push   rbp
   1400316f3:	push   rsi
   1400316f4:	push   rdi
   1400316f5:	push   r12
   1400316f7:	sub    rsp,0x90
   1400316fe:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140031707:	mov    rax,QWORD PTR [rip+0x5399a]        # 0x1400850a8
   14003170e:	xor    rax,rsp
   140031711:	mov    QWORD PTR [rsp+0x80],rax
   140031719:	mov    rsi,r9
   14003171c:	mov    r12,r8
   14003171f:	mov    ebp,edx
   140031721:	mov    rdi,rcx
   140031724:	xor    ebx,ebx
   140031726:	test   r9,r9
   140031729:	je     0x1400317f2
   14003172f:	mov    r8d,edx
   140031732:	lea    rdx,[rip+0x45c77]        # 0x1400773b0
   140031739:	lea    rcx,[rsp+0x60]
   14003173e:	call   0x14002f470
   140031743:	mov    DWORD PTR [rsi],ebx
   140031745:	mov    QWORD PTR [rsp+0x28],rsi
   14003174a:	mov    QWORD PTR [rsp+0x20],rbx
   14003174f:	lea    r9,[rsp+0x30]
   140031754:	xor    r8d,r8d
   140031757:	lea    rdx,[rsp+0x60]
   14003175c:	mov    rcx,QWORD PTR [rdi+0x8]
   140031760:	call   QWORD PTR [rip+0x368f2]        # 0x140068058
   140031766:	cmp    DWORD PTR [rsi],ebx
   140031768:	je     0x14003179b
   14003176a:	mov    QWORD PTR [rsp+0x28],rsi
   14003176f:	mov    QWORD PTR [rsp+0x20],r12
   140031774:	lea    r9,[rsp+0x30]
   140031779:	xor    r8d,r8d
   14003177c:	lea    rdx,[rsp+0x60]
   140031781:	mov    rcx,QWORD PTR [rdi+0x8]
   140031785:	call   QWORD PTR [rip+0x368cd]        # 0x140068058
   14003178b:	mov    ecx,ebx
   14003178d:	test   eax,eax
   14003178f:	sete   cl
   140031792:	test   ecx,ecx
   140031794:	je     0x14003179b
   140031796:	lea    eax,[rbx+0x1]
   140031799:	jmp    0x1400317f4
   14003179b:	mov    rcx,QWORD PTR [rdi+0x10]
   14003179f:	test   rcx,rcx
   1400317a2:	je     0x1400317f2
   1400317a4:	mov    QWORD PTR [rsp+0x38],rbx
   1400317a9:	mov    QWORD PTR [rsp+0x40],rbx
   1400317ae:	mov    QWORD PTR [rsp+0x48],rbx
   1400317b3:	lea    r8,[rsp+0x38]
   1400317b8:	mov    edx,ebp
   1400317ba:	call   0x14002c9c0
   1400317bf:	mov    rdi,QWORD PTR [rsp+0x38]
   1400317c4:	test   al,al
   1400317c6:	je     0x1400317e5
   1400317c8:	mov    eax,DWORD PTR [rsp+0x40]
   1400317cc:	sub    eax,edi
   1400317ce:	mov    ebx,eax
   1400317d0:	mov    r8d,eax
   1400317d3:	mov    rdx,rdi
   1400317d6:	mov    rcx,r12
   1400317d9:	call   0x140033260
   1400317de:	mov    DWORD PTR [rsi],ebx
   1400317e0:	mov    ebx,0x1
   1400317e5:	test   rdi,rdi
   1400317e8:	je     0x1400317f2
   1400317ea:	mov    rcx,rdi
   1400317ed:	call   0x1400330c0
   1400317f2:	mov    eax,ebx
   1400317f4:	mov    rcx,QWORD PTR [rsp+0x80]
   1400317fc:	xor    rcx,rsp
   1400317ff:	call   0x140032f00
   140031804:	add    rsp,0x90
   14003180b:	pop    r12
   14003180d:	pop    rdi
   14003180e:	pop    rsi
   14003180f:	pop    rbp
   140031810:	pop    rbx
   140031811:	ret    
   140031812:	int3   
   140031813:	int3   
   140031814:	int3   
   140031815:	int3   
   140031816:	int3   
   140031817:	int3   
   140031818:	int3   
   140031819:	int3   
   14003181a:	int3   
   14003181b:	int3   
   14003181c:	int3   
   14003181d:	int3   
   14003181e:	int3   
   14003181f:	int3   
   140031820:	mov    DWORD PTR [rsp+0x18],r8d
   140031825:	sub    rsp,0x38
   140031829:	mov    rcx,QWORD PTR [rcx+0x8]
   14003182d:	lea    rax,[rsp+0x50]
   140031832:	mov    r9d,0x4
   140031838:	xor    r8d,r8d
   14003183b:	mov    DWORD PTR [rsp+0x28],0x4
   140031843:	mov    QWORD PTR [rsp+0x20],rax
   140031848:	call   QWORD PTR [rip+0x367f2]        # 0x140068040
   14003184e:	xor    ecx,ecx
   140031850:	test   eax,eax
   140031852:	sete   cl
   140031855:	mov    eax,ecx
   140031857:	add    rsp,0x38
   14003185b:	ret    
   14003185c:	int3   
   14003185d:	int3   
   14003185e:	int3   
   14003185f:	int3   
   140031860:	mov    rax,QWORD PTR [rcx+0x908]
   140031867:	inc    rax
   14003186a:	ret    
   14003186b:	int3   
   14003186c:	int3   
   14003186d:	int3   
   14003186e:	int3   
   14003186f:	int3   
   140031870:	mov    QWORD PTR [rsp+0x8],rbx
   140031875:	push   rdi
   140031876:	sub    rsp,0x20
   14003187a:	mov    ebx,edx
   14003187c:	mov    rdi,rcx
   14003187f:	call   0x1400318a0
   140031884:	test   bl,0x1
   140031887:	je     0x140031891
   140031889:	mov    rcx,rdi
   14003188c:	call   0x1400330c0
   140031891:	mov    rax,rdi
   140031894:	mov    rbx,QWORD PTR [rsp+0x30]
   140031899:	add    rsp,0x20
   14003189d:	pop    rdi
   14003189e:	ret    
   14003189f:	int3   
   1400318a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400318a5:	push   rdi
   1400318a6:	sub    rsp,0x30
   1400318aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400318b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400318b8:	mov    rbx,rcx
   1400318bb:	lea    rax,[rip+0x45b16]        # 0x1400773d8
   1400318c2:	mov    QWORD PTR [rcx],rax
   1400318c5:	call   0x140066560
   1400318ca:	mov    rcx,QWORD PTR [rbx+0xb70]
   1400318d1:	xor    edi,edi
   1400318d3:	test   rcx,rcx
   1400318d6:	je     0x1400318e4
   1400318d8:	call   0x1400336a0
   1400318dd:	mov    QWORD PTR [rbx+0xb70],rdi
   1400318e4:	lea    rax,[rip+0x3cb75]        # 0x14006e460
   1400318eb:	mov    QWORD PTR [rbx+0x910],rax
   1400318f2:	mov    rcx,QWORD PTR [rbx+0x920]
   1400318f9:	test   rcx,rcx
   1400318fc:	je     0x14003192c
   1400318fe:	mov    rax,QWORD PTR [rbx+0xa38]
   140031905:	test   rax,rax
   140031908:	je     0x140031913
   14003190a:	call   rax
   14003190c:	mov    QWORD PTR [rbx+0x920],rdi
   140031913:	mov    rcx,QWORD PTR [rbx+0x918]
   14003191a:	test   rcx,rcx
   14003191d:	je     0x14003192c
   14003191f:	call   QWORD PTR [rip+0x3681b]        # 0x140068140
   140031925:	mov    QWORD PTR [rbx+0x918],rdi
   14003192c:	mov    rcx,QWORD PTR [rbx+0x918]
   140031933:	test   rcx,rcx
   140031936:	je     0x140031945
   140031938:	call   QWORD PTR [rip+0x36802]        # 0x140068140
   14003193e:	mov    QWORD PTR [rbx+0x918],rdi
   140031945:	mov    rcx,rbx
   140031948:	mov    rbx,QWORD PTR [rsp+0x48]
   14003194d:	add    rsp,0x30
   140031951:	pop    rdi
   140031952:	jmp    0x1400664d0
   140031957:	int3   
   140031958:	int3   
   140031959:	int3   
   14003195a:	int3   
   14003195b:	int3   
   14003195c:	int3   
   14003195d:	int3   
   14003195e:	int3   
   14003195f:	int3   
   140031960:	rex push rbx
   140031962:	push   rbp
   140031963:	push   rsi
   140031964:	push   rdi
   140031965:	push   r12
   140031967:	sub    rsp,0x160
   14003196e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031977:	mov    rax,QWORD PTR [rip+0x5372a]        # 0x1400850a8
   14003197e:	xor    rax,rsp
   140031981:	mov    QWORD PTR [rsp+0x150],rax
   140031989:	mov    rbp,r8
   14003198c:	mov    r12,rdx
   14003198f:	mov    rsi,rcx
   140031992:	lea    rax,[rsp+0xc8]
   14003199a:	mov    QWORD PTR [rsp+0xc0],rax
   1400319a2:	xor    edi,edi
   1400319a4:	test   rdx,rdx
   1400319a7:	jne    0x1400319b3
   1400319a9:	mov    QWORD PTR [rsp+0xc0],rdi
   1400319b1:	jmp    0x140031a25
   1400319b3:	mov    rcx,rdx
   1400319b6:	call   QWORD PTR [rip+0x36a24]        # 0x1400683e0
   1400319bc:	lea    ebx,[rax+0x1]
   1400319bf:	lea    r8,[rsp+0xc8]
   1400319c7:	mov    edx,ebx
   1400319c9:	lea    rcx,[rsp+0xc0]
   1400319d1:	call   0x140002f80
   1400319d6:	movsxd rdx,ebx
   1400319d9:	mov    r9,rdx
   1400319dc:	mov    r8,r12
   1400319df:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400319e7:	call   0x140033ccc
   1400319ec:	test   eax,eax
   1400319ee:	je     0x140031a25
   1400319f0:	cmp    eax,0xc
   1400319f3:	je     0x140031a1a
   1400319f5:	cmp    eax,0x16
   1400319f8:	je     0x140031a0f
   1400319fa:	cmp    eax,0x22
   1400319fd:	je     0x140031a0f
   1400319ff:	cmp    eax,0x50
   140031a02:	je     0x140031a25
   140031a04:	mov    ecx,0x80004005
   140031a09:	call   0x1400025f0
   140031a0e:	int3   
   140031a0f:	mov    ecx,0x80070057
   140031a14:	call   0x1400025f0
   140031a19:	int3   
   140031a1a:	mov    ecx,0x8007000e
   140031a1f:	call   0x1400025f0
   140031a24:	nop
   140031a25:	lea    rax,[rsp+0x38]
   140031a2a:	mov    QWORD PTR [rsp+0x30],rax
   140031a2f:	test   rbp,rbp
   140031a32:	jne    0x140031a3b
   140031a34:	mov    QWORD PTR [rsp+0x30],rdi
   140031a39:	jmp    0x140031aa9
   140031a3b:	mov    rcx,rbp
   140031a3e:	call   QWORD PTR [rip+0x3699c]        # 0x1400683e0
   140031a44:	lea    ebx,[rax+0x1]
   140031a47:	lea    r8,[rsp+0x38]
   140031a4c:	mov    edx,ebx
   140031a4e:	lea    rcx,[rsp+0x30]
   140031a53:	call   0x140002f80
   140031a58:	movsxd rdx,ebx
   140031a5b:	mov    r9,rdx
   140031a5e:	mov    r8,rbp
   140031a61:	mov    rcx,QWORD PTR [rsp+0x30]
   140031a66:	call   0x140033ccc
   140031a6b:	test   eax,eax
   140031a6d:	je     0x140031aa4
   140031a6f:	cmp    eax,0xc
   140031a72:	je     0x140031a99
   140031a74:	cmp    eax,0x16
   140031a77:	je     0x140031a8e
   140031a79:	cmp    eax,0x22
   140031a7c:	je     0x140031a8e
   140031a7e:	cmp    eax,0x50
   140031a81:	je     0x140031aa4
   140031a83:	mov    ecx,0x80004005
   140031a88:	call   0x1400025f0
   140031a8d:	int3   
   140031a8e:	mov    ecx,0x80070057
   140031a93:	call   0x1400025f0
   140031a98:	int3   
   140031a99:	mov    ecx,0x8007000e
   140031a9e:	call   0x1400025f0
   140031aa3:	int3   
   140031aa4:	mov    rdi,QWORD PTR [rsp+0x30]
   140031aa9:	lea    rcx,[rsi+0x910]
   140031ab0:	mov    r8,QWORD PTR [rsp+0xc0]
   140031ab8:	mov    rdx,rdi
   140031abb:	call   0x1400189d0
   140031ac0:	movzx  ebx,al
   140031ac3:	lea    rax,[rsp+0x38]
   140031ac8:	mov    rcx,QWORD PTR [rsp+0x30]
   140031acd:	cmp    rcx,rax
   140031ad0:	je     0x140031ad8
   140031ad2:	call   0x140033594
   140031ad7:	nop
   140031ad8:	lea    rax,[rsp+0xc8]
   140031ae0:	mov    rcx,QWORD PTR [rsp+0xc0]
   140031ae8:	cmp    rcx,rax
   140031aeb:	je     0x140031af2
   140031aed:	call   0x140033594
   140031af2:	test   bl,bl
   140031af4:	je     0x140031b28
   140031af6:	cmp    QWORD PTR [rsi+0xb70],0x0
   140031afe:	jne    0x140031b21
   140031b00:	mov    ecx,0x1fff
   140031b05:	call   0x140032de8
   140031b0a:	mov    QWORD PTR [rsi+0xb70],rax
   140031b11:	xor    edx,edx
   140031b13:	mov    r8d,0x1fff
   140031b19:	mov    rcx,rax
   140031b1c:	call   0x140036dc0
   140031b21:	mov    eax,0x1
   140031b26:	jmp    0x140031b2a
   140031b28:	xor    eax,eax
   140031b2a:	mov    rcx,QWORD PTR [rsp+0x150]
   140031b32:	xor    rcx,rsp
   140031b35:	call   0x140032f00
   140031b3a:	add    rsp,0x160
   140031b41:	pop    r12
   140031b43:	pop    rdi
   140031b44:	pop    rsi
   140031b45:	pop    rbp
   140031b46:	pop    rbx
   140031b47:	ret    
   140031b48:	int3   
   140031b49:	int3   
   140031b4a:	int3   
   140031b4b:	int3   
   140031b4c:	int3   
   140031b4d:	int3   
   140031b4e:	int3   
   140031b4f:	int3   
   140031b50:	mov    QWORD PTR [rsp+0x8],rbx
   140031b55:	mov    QWORD PTR [rsp+0x10],rbp
   140031b5a:	mov    QWORD PTR [rsp+0x18],rsi
   140031b5f:	push   rdi
   140031b60:	push   r12
   140031b62:	push   r13
   140031b64:	sub    rsp,0x20
   140031b68:	cmp    QWORD PTR [rcx+0x918],0x0
   140031b70:	mov    r12d,r9d
   140031b73:	mov    rdi,r8
   140031b76:	mov    r13d,edx
   140031b79:	mov    rsi,rcx
   140031b7c:	je     0x140031c66
   140031b82:	mov    r10,QWORD PTR [rcx+0x920]
   140031b89:	test   r10,r10
   140031b8c:	je     0x140031c66
   140031b92:	mov    ecx,DWORD PTR [r8]
   140031b95:	dec    ecx
   140031b97:	je     0x140031c4b
   140031b9d:	dec    ecx
   140031b9f:	je     0x140031c31
   140031ba5:	dec    ecx
   140031ba7:	je     0x140031bf6
   140031ba9:	dec    ecx
   140031bab:	jne    0x140031c66
   140031bb1:	xor    ebx,ebx
   140031bb3:	cmp    DWORD PTR [r8+0x8],ebx
   140031bb7:	jbe    0x140031c66
   140031bbd:	lea    rbp,[r8+0x10]
   140031bc1:	mov    rcx,QWORD PTR [rsi+0x920]
   140031bc8:	test   rcx,rcx
   140031bcb:	je     0x140031be9
   140031bcd:	mov    r9,QWORD PTR [rsi+0xa50]
   140031bd4:	test   r9,r9
   140031bd7:	je     0x140031be9
   140031bd9:	mov    edx,DWORD PTR [rbp+0x0]
   140031bdc:	mov    eax,ebx
   140031bde:	add    rax,rax
   140031be1:	lea    r8,[rdi+rax*8+0x18]
   140031be6:	call   r9
   140031be9:	inc    ebx
   140031beb:	add    rbp,0x10
   140031bef:	cmp    ebx,DWORD PTR [rdi+0x8]
   140031bf2:	jb     0x140031bc1
   140031bf4:	jmp    0x140031c66
   140031bf6:	xor    ebx,ebx
   140031bf8:	cmp    DWORD PTR [r8+0x8],ebx
   140031bfc:	jbe    0x140031c66
   140031bfe:	lea    rbp,[r8+0x10]
   140031c02:	mov    rcx,QWORD PTR [rsi+0x920]
   140031c09:	test   rcx,rcx
   140031c0c:	je     0x140031c24
   140031c0e:	mov    rax,QWORD PTR [rsi+0xa48]
   140031c15:	test   rax,rax
   140031c18:	je     0x140031c24
   140031c1a:	mov    edx,DWORD PTR [rbp+0x0]
   140031c1d:	movsd  xmm2,QWORD PTR [rbp+0x8]
   140031c22:	call   rax
   140031c24:	inc    ebx
   140031c26:	add    rbp,0x10
   140031c2a:	cmp    ebx,DWORD PTR [rdi+0x8]
   140031c2d:	jb     0x140031c02
   140031c2f:	jmp    0x140031c66
   140031c31:	mov    rax,QWORD PTR [rsi+0xa50]
   140031c38:	test   rax,rax
   140031c3b:	je     0x140031c66
   140031c3d:	mov    edx,DWORD PTR [rdi+0x8]
   140031c40:	add    r8,0x10
   140031c44:	mov    rcx,r10
   140031c47:	call   rax
   140031c49:	jmp    0x140031c66
   140031c4b:	mov    rax,QWORD PTR [rsi+0xa48]
   140031c52:	test   rax,rax
   140031c55:	je     0x140031c66
   140031c57:	mov    edx,DWORD PTR [r8+0x8]
   140031c5b:	movsd  xmm2,QWORD PTR [r8+0x10]
   140031c61:	mov    rcx,r10
   140031c64:	call   rax
   140031c66:	mov    r9d,r12d
   140031c69:	mov    r8,rdi
   140031c6c:	mov    edx,r13d
   140031c6f:	mov    rcx,rsi
   140031c72:	mov    rbx,QWORD PTR [rsp+0x40]
   140031c77:	mov    rbp,QWORD PTR [rsp+0x48]
   140031c7c:	mov    rsi,QWORD PTR [rsp+0x50]
   140031c81:	add    rsp,0x20
   140031c85:	pop    r13
   140031c87:	pop    r12
   140031c89:	pop    rdi
   140031c8a:	jmp    0x140066d80
   140031c8f:	int3   
   140031c90:	rex push rbx
   140031c92:	sub    rsp,0x20
   140031c96:	mov    rbx,rcx
   140031c99:	call   0x140066560
   140031c9e:	mov    rcx,QWORD PTR [rbx+0xb70]
   140031ca5:	test   rcx,rcx
   140031ca8:	je     0x140031cba
   140031caa:	call   0x1400336a0
   140031caf:	mov    QWORD PTR [rbx+0xb70],0x0
   140031cba:	add    rsp,0x20
   140031cbe:	pop    rbx
   140031cbf:	ret    
   140031cc0:	sub    rsp,0x28
   140031cc4:	cmp    QWORD PTR [rcx+0x918],0x0
   140031ccc:	je     0x140031cfd
   140031cce:	mov    rax,QWORD PTR [rcx+0x920]
   140031cd5:	test   rax,rax
   140031cd8:	je     0x140031cfd
   140031cda:	mov    r8,QWORD PTR [rcx+0xa40]
   140031ce1:	xor    dl,dl
   140031ce3:	test   r8,r8
   140031ce6:	je     0x140031cf1
   140031ce8:	mov    rcx,rax
   140031ceb:	call   r8
   140031cee:	movzx  edx,al
   140031cf1:	xor    eax,eax
   140031cf3:	test   dl,dl
   140031cf5:	setne  al
   140031cf8:	add    rsp,0x28
   140031cfc:	ret    
   140031cfd:	add    rsp,0x28
   140031d01:	jmp    0x140066f40
   140031d06:	int3   
   140031d07:	int3   
   140031d08:	int3   
   140031d09:	int3   
   140031d0a:	int3   
   140031d0b:	int3   
   140031d0c:	int3   
   140031d0d:	int3   
   140031d0e:	int3   
   140031d0f:	int3   
   140031d10:	cmp    QWORD PTR [rcx+0x918],0x0
   140031d18:	je     0x140031d2c
   140031d1a:	cmp    QWORD PTR [rcx+0x920],0x0
   140031d22:	je     0x140031d2c
   140031d24:	mov    rax,QWORD PTR [rcx+0xb70]
   140031d2b:	ret    
   140031d2c:	mov    rax,QWORD PTR [rcx+0x908]
   140031d33:	inc    rax
   140031d36:	ret    
   140031d37:	int3   
   140031d38:	int3   
   140031d39:	int3   
   140031d3a:	int3   
   140031d3b:	int3   
   140031d3c:	int3   
   140031d3d:	int3   
   140031d3e:	int3   
   140031d3f:	int3   
   140031d40:	mov    QWORD PTR [rsp+0x8],rbx
   140031d45:	push   rdi
   140031d46:	sub    rsp,0x20
   140031d4a:	mov    ebx,edx
   140031d4c:	mov    rdi,rcx
   140031d4f:	call   0x1400664d0
   140031d54:	test   bl,0x1
   140031d57:	je     0x140031d61
   140031d59:	mov    rcx,rdi
   140031d5c:	call   0x1400330c0
   140031d61:	mov    rax,rdi
   140031d64:	mov    rbx,QWORD PTR [rsp+0x30]
   140031d69:	add    rsp,0x20
   140031d6d:	pop    rdi
   140031d6e:	ret    
   140031d6f:	int3   
   140031d70:	mov    QWORD PTR [rsp+0x8],rcx
   140031d75:	push   rbx
   140031d76:	sub    rsp,0x30
   140031d7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031d83:	mov    rbx,rcx
   140031d86:	mov    r8,QWORD PTR [rcx+0x8]
   140031d8a:	mov    r9,r8
   140031d8d:	mov    r8,QWORD PTR [r8]
   140031d90:	lea    rdx,[rsp+0x48]
   140031d95:	call   0x1400323e0
   140031d9a:	nop
   140031d9b:	mov    rcx,QWORD PTR [rbx+0x8]
   140031d9f:	add    rsp,0x30
   140031da3:	pop    rbx
   140031da4:	jmp    0x1400330c0
   140031da9:	int3   
   140031daa:	int3   
   140031dab:	int3   
   140031dac:	int3   
   140031dad:	int3   
   140031dae:	int3   
   140031daf:	int3   
   140031db0:	rex push rdi
   140031db2:	sub    rsp,0x40
   140031db6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031dbf:	mov    QWORD PTR [rsp+0x58],rbx
   140031dc4:	mov    QWORD PTR [rsp+0x60],rbp
   140031dc9:	mov    QWORD PTR [rsp+0x68],rsi
   140031dce:	mov    rsi,rdx
   140031dd1:	mov    rbp,rcx
   140031dd4:	mov    rbx,QWORD PTR [rcx+0x8]
   140031dd8:	mov    rdi,QWORD PTR [rbx+0x8]
   140031ddc:	cmp    BYTE PTR [rdi+0x29],0x0
   140031de0:	jne    0x140031e22
   140031de2:	mov    rdx,QWORD PTR [rsi]
   140031de5:	xor    eax,eax
   140031de7:	test   rdx,rdx
   140031dea:	setne  al
   140031ded:	test   eax,eax
   140031def:	je     0x140031e17
   140031df1:	mov    rcx,QWORD PTR [rdi+0x18]
   140031df5:	call   0x140034a94
   140031dfa:	test   eax,eax
   140031dfc:	sets   al
   140031dff:	test   al,al
   140031e01:	je     0x140031e09
   140031e03:	mov    rdi,QWORD PTR [rdi+0x10]
   140031e07:	jmp    0x140031e0f
   140031e09:	mov    rbx,rdi
   140031e0c:	mov    rdi,QWORD PTR [rdi]
   140031e0f:	cmp    BYTE PTR [rdi+0x29],0x0
   140031e13:	je     0x140031de2
   140031e15:	jmp    0x140031e22
   140031e17:	mov    ecx,0x80004005
   140031e1c:	call   0x1400025f0
   140031e21:	int3   
   140031e22:	cmp    rbx,QWORD PTR [rbp+0x8]
   140031e26:	je     0x140031e54
   140031e28:	mov    rdx,QWORD PTR [rbx+0x18]
   140031e2c:	xor    eax,eax
   140031e2e:	test   rdx,rdx
   140031e31:	setne  al
   140031e34:	test   eax,eax
   140031e36:	jne    0x140031e43
   140031e38:	mov    ecx,0x80004005
   140031e3d:	call   0x1400025f0
   140031e42:	int3   
   140031e43:	mov    rcx,QWORD PTR [rsi]
   140031e46:	call   0x140034a94
   140031e4b:	test   eax,eax
   140031e4d:	sets   al
   140031e50:	test   al,al
   140031e52:	je     0x140031eb2
   140031e54:	mov    rcx,QWORD PTR [rsi]
   140031e57:	sub    rcx,0x18
   140031e5b:	call   0x140008e50
   140031e60:	lea    rdi,[rax+0x18]
   140031e64:	mov    QWORD PTR [rsp+0x28],rdi
   140031e69:	mov    QWORD PTR [rsp+0x30],0x0
   140031e72:	lea    rdx,[rsp+0x28]
   140031e77:	mov    rcx,rbp
   140031e7a:	call   0x140032bf0
   140031e7f:	mov    r9,rax
   140031e82:	mov    r8,rbx
   140031e85:	lea    rdx,[rsp+0x50]
   140031e8a:	mov    rcx,rbp
   140031e8d:	call   0x1400324e0
   140031e92:	mov    rbx,QWORD PTR [rsp+0x50]
   140031e97:	lea    rdx,[rdi-0x18]
   140031e9b:	or     eax,0xffffffff
   140031e9e:	lock xadd DWORD PTR [rdx+0x10],eax
   140031ea3:	dec    eax
   140031ea5:	test   eax,eax
   140031ea7:	jg     0x140031eb2
   140031ea9:	mov    rcx,QWORD PTR [rdx]
   140031eac:	mov    rax,QWORD PTR [rcx]
   140031eaf:	call   QWORD PTR [rax+0x8]
   140031eb2:	lea    rax,[rbx+0x20]
   140031eb6:	mov    rbx,QWORD PTR [rsp+0x58]
   140031ebb:	mov    rbp,QWORD PTR [rsp+0x60]
   140031ec0:	mov    rsi,QWORD PTR [rsp+0x68]
   140031ec5:	add    rsp,0x40
   140031ec9:	pop    rdi
   140031eca:	ret    
   140031ecb:	int3   
   140031ecc:	int3   
   140031ecd:	int3   
   140031ece:	int3   
   140031ecf:	int3   
   140031ed0:	mov    QWORD PTR [rsp+0x18],r8
   140031ed5:	push   rsi
   140031ed6:	push   r12
   140031ed8:	sub    rsp,0x28
   140031edc:	cmp    BYTE PTR [r8+0x29],0x0
   140031ee1:	mov    r12,rdx
   140031ee4:	mov    rsi,rcx
   140031ee7:	je     0x140031ef6
   140031ee9:	lea    rcx,[rip+0x393c0]        # 0x14006b2b0
   140031ef0:	call   0x140032d5c
   140031ef5:	int3   
   140031ef6:	mov    rdx,QWORD PTR [r8+0x10]
   140031efa:	lea    r9,[r8+0x10]
   140031efe:	mov    QWORD PTR [rsp+0x48],rbp
   140031f03:	cmp    BYTE PTR [rdx+0x29],0x0
   140031f07:	mov    rbp,r8
   140031f0a:	jne    0x140031f2e
   140031f0c:	mov    rax,QWORD PTR [rdx]
   140031f0f:	cmp    BYTE PTR [rax+0x29],0x0
   140031f13:	jne    0x140031f50
   140031f15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140031f20:	mov    rdx,rax
   140031f23:	mov    rax,QWORD PTR [rax]
   140031f26:	cmp    BYTE PTR [rax+0x29],0x0
   140031f2a:	je     0x140031f20
   140031f2c:	jmp    0x140031f50
   140031f2e:	mov    rdx,QWORD PTR [r8+0x8]
   140031f32:	cmp    BYTE PTR [rdx+0x29],0x0
   140031f36:	jne    0x140031f50
   140031f38:	cmp    r8,QWORD PTR [rdx+0x10]
   140031f3c:	jne    0x140031f50
   140031f3e:	mov    QWORD PTR [rsp+0x50],rdx
   140031f43:	mov    r8,rdx
   140031f46:	mov    rdx,QWORD PTR [rdx+0x8]
   140031f4a:	cmp    BYTE PTR [rdx+0x29],0x0
   140031f4e:	je     0x140031f38
   140031f50:	mov    QWORD PTR [rsp+0x50],rdx
   140031f55:	mov    rcx,QWORD PTR [rbp+0x0]
   140031f59:	mov    QWORD PTR [rsp+0x40],rbx
   140031f5e:	cmp    BYTE PTR [rcx+0x29],0x0
   140031f62:	mov    QWORD PTR [rsp+0x20],rdi
   140031f67:	je     0x140031f6e
   140031f69:	mov    rdi,QWORD PTR [r9]
   140031f6c:	jmp    0x140031f89
   140031f6e:	mov    rax,QWORD PTR [r9]
   140031f71:	cmp    BYTE PTR [rax+0x29],0x0
   140031f75:	je     0x140031f7c
   140031f77:	mov    rdi,rcx
   140031f7a:	jmp    0x140031f89
   140031f7c:	mov    rdi,QWORD PTR [rdx+0x10]
   140031f80:	cmp    rdx,rbp
   140031f83:	jne    0x140032033
   140031f89:	cmp    BYTE PTR [rdi+0x29],0x0
   140031f8d:	mov    rbx,QWORD PTR [rbp+0x8]
   140031f91:	jne    0x140031f97
   140031f93:	mov    QWORD PTR [rdi+0x8],rbx
   140031f97:	mov    rax,QWORD PTR [rsi+0x8]
   140031f9b:	cmp    QWORD PTR [rax+0x8],rbp
   140031f9f:	jne    0x140031fa7
   140031fa1:	mov    QWORD PTR [rax+0x8],rdi
   140031fa5:	jmp    0x140031fb5
   140031fa7:	cmp    QWORD PTR [rbx],rbp
   140031faa:	jne    0x140031fb1
   140031fac:	mov    QWORD PTR [rbx],rdi
   140031faf:	jmp    0x140031fb5
   140031fb1:	mov    QWORD PTR [rbx+0x10],rdi
   140031fb5:	mov    rdx,QWORD PTR [rsi+0x8]
   140031fb9:	cmp    QWORD PTR [rdx],rbp
   140031fbc:	jne    0x140031fef
   140031fbe:	cmp    BYTE PTR [rdi+0x29],0x0
   140031fc2:	je     0x140031fc9
   140031fc4:	mov    rcx,rbx
   140031fc7:	jmp    0x140031fec
   140031fc9:	mov    rax,QWORD PTR [rdi]
   140031fcc:	mov    rcx,rdi
   140031fcf:	cmp    BYTE PTR [rax+0x29],0x0
   140031fd3:	jne    0x140031fec
   140031fd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140031fe0:	mov    rcx,rax
   140031fe3:	mov    rax,QWORD PTR [rax]
   140031fe6:	cmp    BYTE PTR [rax+0x29],0x0
   140031fea:	je     0x140031fe0
   140031fec:	mov    QWORD PTR [rdx],rcx
   140031fef:	mov    rdx,QWORD PTR [rsi+0x8]
   140031ff3:	cmp    QWORD PTR [rdx+0x10],rbp
   140031ff7:	jne    0x14003209f
   140031ffd:	cmp    BYTE PTR [rdi+0x29],0x0
   140032001:	je     0x14003200f
   140032003:	mov    rcx,rbx
   140032006:	mov    QWORD PTR [rdx+0x10],rbx
   14003200a:	jmp    0x14003209f
   14003200f:	mov    rax,QWORD PTR [rdi+0x10]
   140032013:	mov    rcx,rdi
   140032016:	cmp    BYTE PTR [rax+0x29],0x0
   14003201a:	jne    0x14003202d
   14003201c:	nop    DWORD PTR [rax+0x0]
   140032020:	mov    rcx,rax
   140032023:	mov    rax,QWORD PTR [rax+0x10]
   140032027:	cmp    BYTE PTR [rax+0x29],0x0
   14003202b:	je     0x140032020
   14003202d:	mov    QWORD PTR [rdx+0x10],rcx
   140032031:	jmp    0x14003209f
   140032033:	mov    QWORD PTR [rcx+0x8],rdx
   140032037:	mov    rax,QWORD PTR [rbp+0x0]
   14003203b:	mov    QWORD PTR [rdx],rax
   14003203e:	cmp    rdx,QWORD PTR [r9]
   140032041:	jne    0x140032048
   140032043:	mov    rbx,rdx
   140032046:	jmp    0x140032067
   140032048:	cmp    BYTE PTR [rdi+0x29],0x0
   14003204c:	mov    rbx,QWORD PTR [rdx+0x8]
   140032050:	jne    0x140032056
   140032052:	mov    QWORD PTR [rdi+0x8],rbx
   140032056:	mov    QWORD PTR [rbx],rdi
   140032059:	mov    rax,QWORD PTR [r9]
   14003205c:	mov    QWORD PTR [rdx+0x10],rax
   140032060:	mov    rax,QWORD PTR [r9]
   140032063:	mov    QWORD PTR [rax+0x8],rdx
   140032067:	mov    rax,QWORD PTR [rsi+0x8]
   14003206b:	cmp    QWORD PTR [rax+0x8],rbp
   14003206f:	jne    0x140032077
   140032071:	mov    QWORD PTR [rax+0x8],rdx
   140032075:	jmp    0x140032089
   140032077:	mov    rax,QWORD PTR [rbp+0x8]
   14003207b:	cmp    QWORD PTR [rax],rbp
   14003207e:	jne    0x140032085
   140032080:	mov    QWORD PTR [rax],rdx
   140032083:	jmp    0x140032089
   140032085:	mov    QWORD PTR [rax+0x10],rdx
   140032089:	mov    rax,QWORD PTR [rbp+0x8]
   14003208d:	mov    QWORD PTR [rdx+0x8],rax
   140032091:	movzx  eax,BYTE PTR [rbp+0x28]
   140032095:	movzx  ecx,BYTE PTR [rdx+0x28]
   140032099:	mov    BYTE PTR [rdx+0x28],al
   14003209c:	mov    BYTE PTR [rbp+0x28],cl
   14003209f:	cmp    BYTE PTR [rbp+0x28],0x1
   1400320a3:	jne    0x1400321ef
   1400320a9:	mov    rax,QWORD PTR [rsi+0x8]
   1400320ad:	cmp    rdi,QWORD PTR [rax+0x8]
   1400320b1:	je     0x1400321eb
   1400320b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400320c0:	cmp    BYTE PTR [rdi+0x28],0x1
   1400320c4:	jne    0x1400321eb
   1400320ca:	mov    rcx,QWORD PTR [rbx]
   1400320cd:	cmp    rdi,rcx
   1400320d0:	jne    0x14003215b
   1400320d6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400320da:	cmp    BYTE PTR [rcx+0x28],0x0
   1400320de:	jne    0x1400320f7
   1400320e0:	mov    BYTE PTR [rcx+0x28],0x1
   1400320e4:	mov    rdx,rbx
   1400320e7:	mov    rcx,rsi
   1400320ea:	mov    BYTE PTR [rbx+0x28],0x0
   1400320ee:	call   0x140032380
   1400320f3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400320f7:	cmp    BYTE PTR [rcx+0x29],0x0
   1400320fb:	jne    0x140032194
   140032101:	mov    rax,QWORD PTR [rcx]
   140032104:	cmp    BYTE PTR [rax+0x28],0x1
   140032108:	jne    0x140032114
   14003210a:	mov    rax,QWORD PTR [rcx+0x10]
   14003210e:	cmp    BYTE PTR [rax+0x28],0x1
   140032112:	je     0x140032190
   140032114:	mov    rax,QWORD PTR [rcx+0x10]
   140032118:	cmp    BYTE PTR [rax+0x28],0x1
   14003211c:	jne    0x140032138
   14003211e:	mov    rax,QWORD PTR [rcx]
   140032121:	mov    rdx,rcx
   140032124:	mov    BYTE PTR [rax+0x28],0x1
   140032128:	mov    BYTE PTR [rcx+0x28],0x0
   14003212c:	mov    rcx,rsi
   14003212f:	call   0x140030610
   140032134:	mov    rcx,QWORD PTR [rbx+0x10]
   140032138:	movzx  eax,BYTE PTR [rbx+0x28]
   14003213c:	mov    rdx,rbx
   14003213f:	mov    BYTE PTR [rcx+0x28],al
   140032142:	mov    BYTE PTR [rbx+0x28],0x1
   140032146:	mov    rax,QWORD PTR [rcx+0x10]
   14003214a:	mov    rcx,rsi
   14003214d:	mov    BYTE PTR [rax+0x28],0x1
   140032151:	call   0x140032380
   140032156:	jmp    0x1400321eb
   14003215b:	cmp    BYTE PTR [rcx+0x28],0x0
   14003215f:	jne    0x140032177
   140032161:	mov    BYTE PTR [rcx+0x28],0x1
   140032165:	mov    rdx,rbx
   140032168:	mov    rcx,rsi
   14003216b:	mov    BYTE PTR [rbx+0x28],0x0
   14003216f:	call   0x140030610
   140032174:	mov    rcx,QWORD PTR [rbx]
   140032177:	cmp    BYTE PTR [rcx+0x29],0x0
   14003217b:	jne    0x140032194
   14003217d:	mov    rax,QWORD PTR [rcx+0x10]
   140032181:	cmp    BYTE PTR [rax+0x28],0x1
   140032185:	jne    0x1400321ab
   140032187:	mov    rax,QWORD PTR [rcx]
   14003218a:	cmp    BYTE PTR [rax+0x28],0x1
   14003218e:	jne    0x1400321ab
   140032190:	mov    BYTE PTR [rcx+0x28],0x0
   140032194:	mov    rax,QWORD PTR [rsi+0x8]
   140032198:	mov    rdi,rbx
   14003219b:	mov    rbx,QWORD PTR [rbx+0x8]
   14003219f:	cmp    rdi,QWORD PTR [rax+0x8]
   1400321a3:	jne    0x1400320c0
   1400321a9:	jmp    0x1400321eb
   1400321ab:	mov    rax,QWORD PTR [rcx]
   1400321ae:	cmp    BYTE PTR [rax+0x28],0x1
   1400321b2:	jne    0x1400321ce
   1400321b4:	mov    rax,QWORD PTR [rcx+0x10]
   1400321b8:	mov    rdx,rcx
   1400321bb:	mov    BYTE PTR [rax+0x28],0x1
   1400321bf:	mov    BYTE PTR [rcx+0x28],0x0
   1400321c3:	mov    rcx,rsi
   1400321c6:	call   0x140032380
   1400321cb:	mov    rcx,QWORD PTR [rbx]
   1400321ce:	movzx  eax,BYTE PTR [rbx+0x28]
   1400321d2:	mov    rdx,rbx
   1400321d5:	mov    BYTE PTR [rcx+0x28],al
   1400321d8:	mov    BYTE PTR [rbx+0x28],0x1
   1400321dc:	mov    rax,QWORD PTR [rcx]
   1400321df:	mov    rcx,rsi
   1400321e2:	mov    BYTE PTR [rax+0x28],0x1
   1400321e6:	call   0x140030610
   1400321eb:	mov    BYTE PTR [rdi+0x28],0x1
   1400321ef:	mov    rdx,QWORD PTR [rbp+0x18]
   1400321f3:	sub    rdx,0x18
   1400321f7:	or     eax,0xffffffff
   1400321fa:	lock xadd DWORD PTR [rdx+0x10],eax
   1400321ff:	mov    rdi,QWORD PTR [rsp+0x20]
   140032204:	mov    rbx,QWORD PTR [rsp+0x40]
   140032209:	dec    eax
   14003220b:	test   eax,eax
   14003220d:	jg     0x140032218
   14003220f:	mov    rcx,QWORD PTR [rdx]
   140032212:	mov    rax,QWORD PTR [rcx]
   140032215:	call   QWORD PTR [rax+0x8]
   140032218:	mov    rcx,rbp
   14003221b:	call   0x1400330c0
   140032220:	mov    rax,QWORD PTR [rsi+0x10]
   140032224:	mov    rbp,QWORD PTR [rsp+0x48]
   140032229:	test   rax,rax
   14003222c:	je     0x140032235
   14003222e:	dec    rax
   140032231:	mov    QWORD PTR [rsi+0x10],rax
   140032235:	mov    rax,QWORD PTR [rsp+0x50]
   14003223a:	mov    QWORD PTR [r12],rax
   14003223e:	mov    rax,r12
   140032241:	add    rsp,0x28
   140032245:	pop    r12
   140032247:	pop    rsi
   140032248:	ret    
   140032249:	int3   
   14003224a:	int3   
   14003224b:	int3   
   14003224c:	int3   
   14003224d:	int3   
   14003224e:	int3   
   14003224f:	int3   
   140032250:	sub    rsp,0x28
   140032254:	mov    rdx,QWORD PTR [rcx]
   140032257:	sub    rdx,0x18
   14003225b:	or     eax,0xffffffff
   14003225e:	lock xadd DWORD PTR [rdx+0x10],eax
   140032263:	dec    eax
   140032265:	test   eax,eax
   140032267:	jg     0x140032272
   140032269:	mov    rcx,QWORD PTR [rdx]
   14003226c:	mov    rax,QWORD PTR [rcx]
   14003226f:	call   QWORD PTR [rax+0x8]
   140032272:	add    rsp,0x28
   140032276:	ret    
   140032277:	int3   
   140032278:	int3   
   140032279:	int3   
   14003227a:	int3   
   14003227b:	int3   
   14003227c:	int3   
   14003227d:	int3   
   14003227e:	int3   
   14003227f:	int3   
   140032280:	rex push rbx
   140032282:	sub    rsp,0x40
   140032286:	mov    rbx,rcx
   140032289:	mov    QWORD PTR [rcx+0x10],0x0
   140032291:	mov    ecx,0x30
   140032296:	call   0x1400331a0
   14003229b:	test   rax,rax
   14003229e:	je     0x1400322d0
   1400322a0:	mov    QWORD PTR [rbx+0x8],rax
   1400322a4:	mov    QWORD PTR [rax],rax
   1400322a7:	mov    rax,QWORD PTR [rbx+0x8]
   1400322ab:	mov    QWORD PTR [rax+0x8],rax
   1400322af:	mov    rax,QWORD PTR [rbx+0x8]
   1400322b3:	mov    QWORD PTR [rax+0x10],rax
   1400322b7:	mov    rax,QWORD PTR [rbx+0x8]
   1400322bb:	mov    BYTE PTR [rax+0x28],0x1
   1400322bf:	mov    rax,QWORD PTR [rbx+0x8]
   1400322c3:	mov    BYTE PTR [rax+0x29],0x1
   1400322c7:	mov    rax,rbx
   1400322ca:	add    rsp,0x40
   1400322ce:	pop    rbx
   1400322cf:	ret    
   1400322d0:	lea    rdx,[rsp+0x50]
   1400322d5:	lea    rcx,[rsp+0x20]
   1400322da:	mov    QWORD PTR [rsp+0x50],0x0
   1400322e3:	call   0x140032fd4
   1400322e8:	lea    r11,[rip+0x365a1]        # 0x140068890
   1400322ef:	lea    rdx,[rip+0x5112a]        # 0x140083420
   1400322f6:	lea    rcx,[rsp+0x20]
   1400322fb:	mov    QWORD PTR [rsp+0x20],r11
   140032300:	call   0x140036358
   140032305:	int3   
   140032306:	int3   
   140032307:	int3   
   140032308:	int3   
   140032309:	int3   
   14003230a:	int3   
   14003230b:	int3   
   14003230c:	int3   
   14003230d:	int3   
   14003230e:	int3   
   14003230f:	int3   
   140032310:	mov    QWORD PTR [rsp+0x8],rbx
   140032315:	mov    QWORD PTR [rsp+0x10],rsi
   14003231a:	push   rdi
   14003231b:	sub    rsp,0x20
   14003231f:	cmp    BYTE PTR [rdx+0x29],0x0
   140032323:	mov    rbx,rdx
   140032326:	mov    rsi,rcx
   140032329:	mov    rdi,rdx
   14003232c:	jne    0x14003236f
   14003232e:	xchg   ax,ax
   140032330:	mov    rdx,QWORD PTR [rdi+0x10]
   140032334:	mov    rcx,rsi
   140032337:	call   0x140032310
   14003233c:	mov    rdx,QWORD PTR [rbx+0x18]
   140032340:	mov    rdi,QWORD PTR [rdi]
   140032343:	sub    rdx,0x18
   140032347:	or     eax,0xffffffff
   14003234a:	lock xadd DWORD PTR [rdx+0x10],eax
   14003234f:	dec    eax
   140032351:	test   eax,eax
   140032353:	jg     0x14003235e
   140032355:	mov    rcx,QWORD PTR [rdx]
   140032358:	mov    rax,QWORD PTR [rcx]
   14003235b:	call   QWORD PTR [rax+0x8]
   14003235e:	mov    rcx,rbx
   140032361:	call   0x1400330c0
   140032366:	cmp    BYTE PTR [rdi+0x29],0x0
   14003236a:	mov    rbx,rdi
   14003236d:	je     0x140032330
   14003236f:	mov    rbx,QWORD PTR [rsp+0x30]
   140032374:	mov    rsi,QWORD PTR [rsp+0x38]
   140032379:	add    rsp,0x20
   14003237d:	pop    rdi
   14003237e:	ret    
   14003237f:	int3   
   140032380:	mov    r8,QWORD PTR [rdx+0x10]
   140032384:	mov    rax,QWORD PTR [r8]
   140032387:	mov    QWORD PTR [rdx+0x10],rax
   14003238b:	mov    rax,QWORD PTR [r8]
   14003238e:	cmp    BYTE PTR [rax+0x29],0x0
   140032392:	jne    0x140032398
   140032394:	mov    QWORD PTR [rax+0x8],rdx
   140032398:	mov    rax,QWORD PTR [rdx+0x8]
   14003239c:	mov    QWORD PTR [r8+0x8],rax
   1400323a0:	mov    rax,QWORD PTR [rcx+0x8]
   1400323a4:	cmp    rdx,QWORD PTR [rax+0x8]
   1400323a8:	jne    0x1400323b6
   1400323aa:	mov    QWORD PTR [rax+0x8],r8
   1400323ae:	mov    QWORD PTR [r8],rdx
   1400323b1:	mov    QWORD PTR [rdx+0x8],r8
   1400323b5:	ret    
   1400323b6:	mov    rax,QWORD PTR [rdx+0x8]
   1400323ba:	cmp    rdx,QWORD PTR [rax]
   1400323bd:	jne    0x1400323ca
   1400323bf:	mov    QWORD PTR [rax],r8
   1400323c2:	mov    QWORD PTR [r8],rdx
   1400323c5:	mov    QWORD PTR [rdx+0x8],r8
   1400323c9:	ret    
   1400323ca:	mov    QWORD PTR [rax+0x10],r8
   1400323ce:	mov    QWORD PTR [r8],rdx
   1400323d1:	mov    QWORD PTR [rdx+0x8],r8
   1400323d5:	ret    
   1400323d6:	int3   
   1400323d7:	int3   
   1400323d8:	int3   
   1400323d9:	int3   
   1400323da:	int3   
   1400323db:	int3   
   1400323dc:	int3   
   1400323dd:	int3   
   1400323de:	int3   
   1400323df:	int3   
   1400323e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400323e5:	mov    QWORD PTR [rsp+0x20],r9
   1400323ea:	mov    QWORD PTR [rsp+0x18],r8
   1400323ef:	push   rdi
   1400323f0:	sub    rsp,0x20
   1400323f4:	mov    rdi,rdx
   1400323f7:	mov    rdx,QWORD PTR [rcx+0x8]
   1400323fb:	mov    rbx,rcx
   1400323fe:	cmp    r8,QWORD PTR [rdx]
   140032401:	jne    0x140032448
   140032403:	cmp    r9,rdx
   140032406:	jne    0x140032448
   140032408:	mov    rdx,QWORD PTR [rdx+0x8]
   14003240c:	call   0x140032310
   140032411:	mov    r11,QWORD PTR [rbx+0x8]
   140032415:	mov    QWORD PTR [r11+0x8],r11
   140032419:	mov    rax,QWORD PTR [rbx+0x8]
   14003241d:	mov    QWORD PTR [rax],rax
   140032420:	mov    rax,QWORD PTR [rbx+0x8]
   140032424:	mov    QWORD PTR [rax+0x10],rax
   140032428:	mov    rax,QWORD PTR [rbx+0x8]
   14003242c:	mov    QWORD PTR [rbx+0x10],0x0
   140032434:	mov    rcx,QWORD PTR [rax]
   140032437:	mov    rax,rdi
   14003243a:	mov    QWORD PTR [rdi],rcx
   14003243d:	mov    rbx,QWORD PTR [rsp+0x38]
   140032442:	add    rsp,0x20
   140032446:	pop    rdi
   140032447:	ret    
   140032448:	cmp    r8,r9
   14003244b:	je     0x1400324c9
   14003244d:	nop    DWORD PTR [rax]
   140032450:	cmp    BYTE PTR [r8+0x29],0x0
   140032455:	mov    rax,r8
   140032458:	jne    0x1400324ad
   14003245a:	mov    rdx,QWORD PTR [r8+0x10]
   14003245e:	cmp    BYTE PTR [rdx+0x29],0x0
   140032462:	jne    0x140032483
   140032464:	mov    rcx,QWORD PTR [rdx]
   140032467:	cmp    BYTE PTR [rcx+0x29],0x0
   14003246b:	jne    0x14003247c
   14003246d:	nop    DWORD PTR [rax]
   140032470:	mov    rdx,rcx
   140032473:	mov    rcx,QWORD PTR [rcx]
   140032476:	cmp    BYTE PTR [rcx+0x29],0x0
   14003247a:	je     0x140032470
   14003247c:	mov    QWORD PTR [rsp+0x40],rdx
   140032481:	jmp    0x1400324ad
   140032483:	mov    rcx,QWORD PTR [r8+0x8]
   140032487:	cmp    BYTE PTR [rcx+0x29],0x0
   14003248b:	jne    0x1400324a8
   14003248d:	nop    DWORD PTR [rax]
   140032490:	cmp    r8,QWORD PTR [rcx+0x10]
   140032494:	jne    0x1400324a8
   140032496:	mov    QWORD PTR [rsp+0x40],rcx
   14003249b:	mov    r8,rcx
   14003249e:	mov    rcx,QWORD PTR [rcx+0x8]
   1400324a2:	cmp    BYTE PTR [rcx+0x29],0x0
   1400324a6:	je     0x140032490
   1400324a8:	mov    QWORD PTR [rsp+0x40],rcx
   1400324ad:	lea    rdx,[rsp+0x30]
   1400324b2:	mov    r8,rax
   1400324b5:	mov    rcx,rbx
   1400324b8:	call   0x140031ed0
   1400324bd:	mov    r8,QWORD PTR [rsp+0x40]
   1400324c2:	cmp    r8,QWORD PTR [rsp+0x48]
   1400324c7:	jne    0x140032450
   1400324c9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400324ce:	mov    QWORD PTR [rdi],r8
   1400324d1:	mov    rax,rdi
   1400324d4:	add    rsp,0x20
   1400324d8:	pop    rdi
   1400324d9:	ret    
   1400324da:	int3   
   1400324db:	int3   
   1400324dc:	int3   
   1400324dd:	int3   
   1400324de:	int3   
   1400324df:	int3   
   1400324e0:	mov    QWORD PTR [rsp+0x10],rbp
   1400324e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400324ea:	mov    QWORD PTR [rsp+0x18],r8
   1400324ef:	push   rdi
   1400324f0:	sub    rsp,0x40
   1400324f4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400324f9:	mov    rsi,r9
   1400324fc:	mov    rdi,rdx
   1400324ff:	mov    rbp,rcx
   140032502:	jne    0x140032528
   140032504:	mov    QWORD PTR [rsp+0x20],r9
   140032509:	mov    r9,QWORD PTR [rcx+0x8]
   14003250d:	mov    r8b,0x1
   140032510:	call   0x140032930
   140032515:	mov    rax,rdi
   140032518:	mov    rbp,QWORD PTR [rsp+0x58]
   14003251d:	mov    rsi,QWORD PTR [rsp+0x68]
   140032522:	add    rsp,0x40
   140032526:	pop    rdi
   140032527:	ret    
   140032528:	mov    rax,QWORD PTR [rcx+0x8]
   14003252c:	mov    QWORD PTR [rsp+0x50],rbx
   140032531:	cmp    r8,QWORD PTR [rax]
   140032534:	jne    0x140032578
   140032536:	mov    rdx,QWORD PTR [r8+0x18]
   14003253a:	test   rdx,rdx
   14003253d:	jne    0x14003254a
   14003253f:	mov    ecx,0x80004005
   140032544:	call   0x1400025f0
   140032549:	int3   
   14003254a:	mov    rcx,QWORD PTR [r9+0x18]
   14003254e:	call   0x140034a94
   140032553:	test   eax,eax
   140032555:	jns    0x140032778
   14003255b:	mov    r9,QWORD PTR [rsp+0x60]
   140032560:	mov    r8b,0x1
   140032563:	mov    rdx,rdi
   140032566:	mov    rcx,rbp
   140032569:	mov    QWORD PTR [rsp+0x20],rsi
   14003256e:	call   0x140032930
   140032573:	jmp    0x14003278e
   140032578:	cmp    r8,rax
   14003257b:	jne    0x1400325c6
   14003257d:	mov    rdx,QWORD PTR [r9+0x18]
   140032581:	mov    rcx,QWORD PTR [rax+0x10]
   140032585:	test   rdx,rdx
   140032588:	jne    0x140032595
   14003258a:	mov    ecx,0x80004005
   14003258f:	call   0x1400025f0
   140032594:	int3   
   140032595:	mov    rcx,QWORD PTR [rcx+0x18]
   140032599:	call   0x140034a94
   14003259e:	test   eax,eax
   1400325a0:	jns    0x140032778
   1400325a6:	mov    r9,QWORD PTR [rbp+0x8]
   1400325aa:	xor    r8d,r8d
   1400325ad:	mov    rdx,rdi
   1400325b0:	mov    r9,QWORD PTR [r9+0x10]
   1400325b4:	mov    rcx,rbp
   1400325b7:	mov    QWORD PTR [rsp+0x20],rsi
   1400325bc:	call   0x140032930
   1400325c1:	jmp    0x14003278e
   1400325c6:	mov    rdx,QWORD PTR [r8+0x18]
   1400325ca:	test   rdx,rdx
   1400325cd:	jne    0x1400325da
   1400325cf:	mov    ecx,0x80004005
   1400325d4:	call   0x1400025f0
   1400325d9:	int3   
   1400325da:	mov    rcx,QWORD PTR [r9+0x18]
   1400325de:	call   0x140034a94
   1400325e3:	test   eax,eax
   1400325e5:	jns    0x1400326a5
   1400325eb:	mov    rax,QWORD PTR [rsp+0x60]
   1400325f0:	cmp    BYTE PTR [rax+0x29],0x0
   1400325f4:	je     0x1400325fc
   1400325f6:	mov    rbx,QWORD PTR [rax+0x10]
   1400325fa:	jmp    0x14003264d
   1400325fc:	mov    rbx,QWORD PTR [rax]
   1400325ff:	cmp    BYTE PTR [rbx+0x29],0x0
   140032603:	jne    0x14003261f
   140032605:	mov    rax,QWORD PTR [rbx+0x10]
   140032609:	cmp    BYTE PTR [rax+0x29],0x0
   14003260d:	jne    0x14003264d
   14003260f:	nop
   140032610:	mov    rbx,rax
   140032613:	mov    rax,QWORD PTR [rax+0x10]
   140032617:	cmp    BYTE PTR [rax+0x29],0x0
   14003261b:	je     0x140032610
   14003261d:	jmp    0x14003264d
   14003261f:	mov    rcx,QWORD PTR [rax+0x8]
   140032623:	cmp    BYTE PTR [rcx+0x29],0x0
   140032627:	jne    0x140032642
   140032629:	nop    DWORD PTR [rax+0x0]
   140032630:	cmp    rax,QWORD PTR [rcx]
   140032633:	jne    0x140032642
   140032635:	mov    rax,rcx
   140032638:	mov    rcx,QWORD PTR [rcx+0x8]
   14003263c:	cmp    BYTE PTR [rcx+0x29],0x0
   140032640:	je     0x140032630
   140032642:	cmp    BYTE PTR [rax+0x29],0x0
   140032646:	mov    rbx,rax
   140032649:	cmove  rbx,rcx
   14003264d:	mov    rdx,QWORD PTR [rsi+0x18]
   140032651:	test   rdx,rdx
   140032654:	jne    0x140032661
   140032656:	mov    ecx,0x80004005
   14003265b:	call   0x1400025f0
   140032660:	int3   
   140032661:	mov    rcx,QWORD PTR [rbx+0x18]
   140032665:	call   0x140034a94
   14003266a:	test   eax,eax
   14003266c:	jns    0x1400326a5
   14003266e:	mov    rax,QWORD PTR [rbx+0x10]
   140032672:	mov    QWORD PTR [rsp+0x20],rsi
   140032677:	mov    rdx,rdi
   14003267a:	cmp    BYTE PTR [rax+0x29],0x0
   14003267e:	mov    rcx,rbp
   140032681:	je     0x140032693
   140032683:	mov    r9,rbx
   140032686:	xor    r8d,r8d
   140032689:	call   0x140032930
   14003268e:	jmp    0x14003278e
   140032693:	mov    r9,QWORD PTR [rsp+0x60]
   140032698:	mov    r8b,0x1
   14003269b:	call   0x140032930
   1400326a0:	jmp    0x14003278e
   1400326a5:	mov    rdx,QWORD PTR [rsi+0x18]
   1400326a9:	test   rdx,rdx
   1400326ac:	jne    0x1400326b9
   1400326ae:	mov    ecx,0x80004005
   1400326b3:	call   0x1400025f0
   1400326b8:	int3   
   1400326b9:	mov    rax,QWORD PTR [rsp+0x60]
   1400326be:	mov    rcx,QWORD PTR [rax+0x18]
   1400326c2:	call   0x140034a94
   1400326c7:	test   eax,eax
   1400326c9:	jns    0x140032778
   1400326cf:	mov    r9,QWORD PTR [rsp+0x60]
   1400326d4:	mov    rbx,r9
   1400326d7:	cmp    BYTE PTR [r9+0x29],0x0
   1400326dc:	jne    0x140032726
   1400326de:	mov    rax,QWORD PTR [r9+0x10]
   1400326e2:	cmp    BYTE PTR [rax+0x29],0x0
   1400326e6:	jne    0x140032702
   1400326e8:	mov    rbx,rax
   1400326eb:	mov    rax,QWORD PTR [rax]
   1400326ee:	cmp    BYTE PTR [rax+0x29],0x0
   1400326f2:	jne    0x140032726
   1400326f4:	mov    rbx,rax
   1400326f7:	mov    rax,QWORD PTR [rax]
   1400326fa:	cmp    BYTE PTR [rax+0x29],0x0
   1400326fe:	je     0x1400326f4
   140032700:	jmp    0x140032726
   140032702:	mov    rax,QWORD PTR [r9+0x8]
   140032706:	cmp    BYTE PTR [rax+0x29],0x0
   14003270a:	jne    0x140032723
   14003270c:	nop    DWORD PTR [rax+0x0]
   140032710:	cmp    rbx,QWORD PTR [rax+0x10]
   140032714:	jne    0x140032723
   140032716:	mov    rbx,rax
   140032719:	mov    rax,QWORD PTR [rax+0x8]
   14003271d:	cmp    BYTE PTR [rax+0x29],0x0
   140032721:	je     0x140032710
   140032723:	mov    rbx,rax
   140032726:	cmp    rbx,QWORD PTR [rbp+0x8]
   14003272a:	je     0x140032752
   14003272c:	mov    rdx,QWORD PTR [rbx+0x18]
   140032730:	test   rdx,rdx
   140032733:	jne    0x140032740
   140032735:	mov    ecx,0x80004005
   14003273a:	call   0x1400025f0
   14003273f:	int3   
   140032740:	mov    rcx,QWORD PTR [rsi+0x18]
   140032744:	call   0x140034a94
   140032749:	test   eax,eax
   14003274b:	jns    0x140032778
   14003274d:	mov    r9,QWORD PTR [rsp+0x60]
   140032752:	mov    rax,QWORD PTR [r9+0x10]
   140032756:	mov    QWORD PTR [rsp+0x20],rsi
   14003275b:	mov    rdx,rdi
   14003275e:	cmp    BYTE PTR [rax+0x29],0x0
   140032762:	mov    rcx,rbp
   140032765:	jne    0x140032686
   14003276b:	mov    r9,rbx
   14003276e:	mov    r8b,0x1
   140032771:	call   0x140032930
   140032776:	jmp    0x14003278e
   140032778:	lea    rdx,[rsp+0x30]
   14003277d:	mov    r8,rsi
   140032780:	mov    rcx,rbp
   140032783:	call   0x1400327b0
   140032788:	mov    rcx,QWORD PTR [rax]
   14003278b:	mov    QWORD PTR [rdi],rcx
   14003278e:	mov    rbx,QWORD PTR [rsp+0x50]
   140032793:	mov    rbp,QWORD PTR [rsp+0x58]
   140032798:	mov    rsi,QWORD PTR [rsp+0x68]
   14003279d:	mov    rax,rdi
   1400327a0:	add    rsp,0x40
   1400327a4:	pop    rdi
   1400327a5:	ret    
   1400327a6:	int3   
   1400327a7:	int3   
   1400327a8:	int3   
   1400327a9:	int3   
   1400327aa:	int3   
   1400327ab:	int3   
   1400327ac:	int3   
   1400327ad:	int3   
   1400327ae:	int3   
   1400327af:	int3   
   1400327b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400327b5:	push   rbp
   1400327b6:	push   rsi
   1400327b7:	push   rdi
   1400327b8:	push   r12
   1400327ba:	push   r13
   1400327bc:	sub    rsp,0x30
   1400327c0:	mov    rdi,QWORD PTR [rcx+0x8]
   1400327c4:	mov    rbp,r8
   1400327c7:	mov    rsi,rdx
   1400327ca:	mov    rbx,QWORD PTR [rdi+0x8]
   1400327ce:	mov    r13,rcx
   1400327d1:	mov    r12b,0x1
   1400327d4:	cmp    BYTE PTR [rbx+0x29],0x0
   1400327d8:	jne    0x14003280f
   1400327da:	nop    WORD PTR [rax+rax*1+0x0]
   1400327e0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400327e4:	mov    rdi,rbx
   1400327e7:	test   rdx,rdx
   1400327ea:	je     0x14003284b
   1400327ec:	mov    rcx,QWORD PTR [rbp+0x18]
   1400327f0:	call   0x140034a94
   1400327f5:	test   eax,eax
   1400327f7:	sets   r12b
   1400327fb:	test   r12b,r12b
   1400327fe:	je     0x140032805
   140032800:	mov    rbx,QWORD PTR [rbx]
   140032803:	jmp    0x140032809
   140032805:	mov    rbx,QWORD PTR [rbx+0x10]
   140032809:	cmp    BYTE PTR [rbx+0x29],0x0
   14003280d:	je     0x1400327e0
   14003280f:	mov    rbx,rdi
   140032812:	test   r12b,r12b
   140032815:	je     0x1400328ba
   14003281b:	mov    rax,QWORD PTR [r13+0x8]
   14003281f:	cmp    rdi,QWORD PTR [rax]
   140032822:	jne    0x140032856
   140032824:	mov    r8b,0x1
   140032827:	lea    rdx,[rsp+0x60]
   14003282c:	mov    r9,rdi
   14003282f:	mov    rcx,r13
   140032832:	mov    QWORD PTR [rsp+0x20],rbp
   140032837:	call   0x140032930
   14003283c:	mov    BYTE PTR [rsi+0x8],0x1
   140032840:	mov    rcx,QWORD PTR [rax]
   140032843:	mov    QWORD PTR [rsi],rcx
   140032846:	jmp    0x140032917
   14003284b:	mov    ecx,0x80004005
   140032850:	call   0x1400025f0
   140032855:	int3   
   140032856:	cmp    BYTE PTR [rdi+0x29],0x0
   14003285a:	je     0x140032862
   14003285c:	mov    rbx,QWORD PTR [rdi+0x10]
   140032860:	jmp    0x1400328ba
   140032862:	mov    rax,QWORD PTR [rdi]
   140032865:	cmp    BYTE PTR [rax+0x29],0x0
   140032869:	jne    0x14003288f
   14003286b:	mov    rbx,rax
   14003286e:	mov    rax,QWORD PTR [rax+0x10]
   140032872:	cmp    BYTE PTR [rax+0x29],0x0
   140032876:	jne    0x1400328ba
   140032878:	nop    DWORD PTR [rax+rax*1+0x0]
   140032880:	mov    rbx,rax
   140032883:	mov    rax,QWORD PTR [rax+0x10]
   140032887:	cmp    BYTE PTR [rax+0x29],0x0
   14003288b:	je     0x140032880
   14003288d:	jmp    0x1400328ba
   14003288f:	mov    rax,QWORD PTR [rdi+0x8]
   140032893:	cmp    BYTE PTR [rax+0x29],0x0
   140032897:	jne    0x1400328b2
   140032899:	nop    DWORD PTR [rax+0x0]
   1400328a0:	cmp    rbx,QWORD PTR [rax]
   1400328a3:	jne    0x1400328b2
   1400328a5:	mov    rbx,rax
   1400328a8:	mov    rax,QWORD PTR [rax+0x8]
   1400328ac:	cmp    BYTE PTR [rax+0x29],0x0
   1400328b0:	je     0x1400328a0
   1400328b2:	cmp    BYTE PTR [rbx+0x29],0x0
   1400328b6:	cmove  rbx,rax
   1400328ba:	mov    rdx,QWORD PTR [rbp+0x18]
   1400328be:	test   rdx,rdx
   1400328c1:	jne    0x1400328ce
   1400328c3:	mov    ecx,0x80004005
   1400328c8:	call   0x1400025f0
   1400328cd:	int3   
   1400328ce:	mov    rcx,QWORD PTR [rbx+0x18]
   1400328d2:	call   0x140034a94
   1400328d7:	test   eax,eax
   1400328d9:	jns    0x1400328e9
   1400328db:	movzx  r8d,r12b
   1400328df:	lea    rdx,[rsp+0x70]
   1400328e4:	jmp    0x14003282c
   1400328e9:	mov    rdx,QWORD PTR [rbp+0x18]
   1400328ed:	sub    rdx,0x18
   1400328f1:	or     eax,0xffffffff
   1400328f4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400328f9:	dec    eax
   1400328fb:	test   eax,eax
   1400328fd:	jg     0x140032908
   1400328ff:	mov    rcx,QWORD PTR [rdx]
   140032902:	mov    rax,QWORD PTR [rcx]
   140032905:	call   QWORD PTR [rax+0x8]
   140032908:	mov    rcx,rbp
   14003290b:	call   0x1400330c0
   140032910:	mov    QWORD PTR [rsi],rbx
   140032913:	mov    BYTE PTR [rsi+0x8],0x0
   140032917:	mov    rax,rsi
   14003291a:	mov    rbx,QWORD PTR [rsp+0x68]
   14003291f:	add    rsp,0x30
   140032923:	pop    r13
   140032925:	pop    r12
   140032927:	pop    rdi
   140032928:	pop    rsi
   140032929:	pop    rbp
   14003292a:	ret    
   14003292b:	int3   
   14003292c:	int3   
   14003292d:	int3   
   14003292e:	int3   
   14003292f:	int3   
   140032930:	rex push rbx
   140032932:	sub    rsp,0x20
   140032936:	mov    rax,QWORD PTR [rcx+0x10]
   14003293a:	mov    r10,rcx
   14003293d:	movabs rcx,0xffffffffffffffe
   140032947:	mov    rbx,rdx
   14003294a:	cmp    rax,rcx
   14003294d:	jb     0x140032988
   14003294f:	mov    rbx,QWORD PTR [rsp+0x50]
   140032954:	mov    rdx,QWORD PTR [rbx+0x18]
   140032958:	sub    rdx,0x18
   14003295c:	or     eax,0xffffffff
   14003295f:	lock xadd DWORD PTR [rdx+0x10],eax
   140032964:	dec    eax
   140032966:	test   eax,eax
   140032968:	jg     0x140032973
   14003296a:	mov    rcx,QWORD PTR [rdx]
   14003296d:	mov    rax,QWORD PTR [rcx]
   140032970:	call   QWORD PTR [rax+0x8]
   140032973:	mov    rcx,rbx
   140032976:	call   0x1400330c0
   14003297b:	lea    rcx,[rip+0x3894e]        # 0x14006b2d0
   140032982:	call   0x140032d00
   140032987:	int3   
   140032988:	mov    r11,QWORD PTR [rsp+0x50]
   14003298d:	inc    rax
   140032990:	mov    QWORD PTR [r10+0x10],rax
   140032994:	mov    QWORD PTR [r11+0x8],r9
   140032998:	mov    rax,QWORD PTR [r10+0x8]
   14003299c:	cmp    r9,rax
   14003299f:	jne    0x1400329b2
   1400329a1:	mov    QWORD PTR [rax+0x8],r11
   1400329a5:	mov    rax,QWORD PTR [r10+0x8]
   1400329a9:	mov    QWORD PTR [rax],r11
   1400329ac:	mov    rax,QWORD PTR [r10+0x8]
   1400329b0:	jmp    0x1400329d6
   1400329b2:	test   r8b,r8b
   1400329b5:	je     0x1400329c8
   1400329b7:	mov    QWORD PTR [r9],r11
   1400329ba:	mov    rax,QWORD PTR [r10+0x8]
   1400329be:	cmp    r9,QWORD PTR [rax]
   1400329c1:	jne    0x1400329da
   1400329c3:	mov    QWORD PTR [rax],r11
   1400329c6:	jmp    0x1400329da
   1400329c8:	mov    QWORD PTR [r9+0x10],r11
   1400329cc:	mov    rax,QWORD PTR [r10+0x8]
   1400329d0:	cmp    r9,QWORD PTR [rax+0x10]
   1400329d4:	jne    0x1400329da
   1400329d6:	mov    QWORD PTR [rax+0x10],r11
   1400329da:	mov    rax,QWORD PTR [r11+0x8]
   1400329de:	mov    rdx,r11
   1400329e1:	cmp    BYTE PTR [rax+0x28],0x0
   1400329e5:	jne    0x140032bca
   1400329eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400329f0:	mov    rax,QWORD PTR [rdx+0x8]
   1400329f4:	mov    rcx,QWORD PTR [rax+0x8]
   1400329f8:	cmp    rax,QWORD PTR [rcx]
   1400329fb:	jne    0x140032ad8
   140032a01:	mov    r8,QWORD PTR [rcx+0x10]
   140032a05:	cmp    BYTE PTR [r8+0x28],0x0
   140032a0a:	je     0x140032ae2
   140032a10:	cmp    rdx,QWORD PTR [rax+0x10]
   140032a14:	jne    0x140032a62
   140032a16:	mov    rcx,QWORD PTR [rax+0x10]
   140032a1a:	mov    rdx,rax
   140032a1d:	mov    rax,QWORD PTR [rcx]
   140032a20:	mov    QWORD PTR [rdx+0x10],rax
   140032a24:	mov    rax,QWORD PTR [rcx]
   140032a27:	cmp    BYTE PTR [rax+0x29],0x0
   140032a2b:	jne    0x140032a31
   140032a2d:	mov    QWORD PTR [rax+0x8],rdx
   140032a31:	mov    rax,QWORD PTR [rdx+0x8]
   140032a35:	mov    QWORD PTR [rcx+0x8],rax
   140032a39:	mov    rax,QWORD PTR [r10+0x8]
   140032a3d:	cmp    rdx,QWORD PTR [rax+0x8]
   140032a41:	jne    0x140032a49
   140032a43:	mov    QWORD PTR [rax+0x8],rcx
   140032a47:	jmp    0x140032a5b
   140032a49:	mov    rax,QWORD PTR [rdx+0x8]
   140032a4d:	cmp    rdx,QWORD PTR [rax]
   140032a50:	jne    0x140032a57
   140032a52:	mov    QWORD PTR [rax],rcx
   140032a55:	jmp    0x140032a5b
   140032a57:	mov    QWORD PTR [rax+0x10],rcx
   140032a5b:	mov    QWORD PTR [rcx],rdx
   140032a5e:	mov    QWORD PTR [rdx+0x8],rcx
   140032a62:	mov    rax,QWORD PTR [rdx+0x8]
   140032a66:	mov    BYTE PTR [rax+0x28],0x1
   140032a6a:	mov    rax,QWORD PTR [rdx+0x8]
   140032a6e:	mov    rcx,QWORD PTR [rax+0x8]
   140032a72:	mov    BYTE PTR [rcx+0x28],0x0
   140032a76:	mov    rax,QWORD PTR [rdx+0x8]
   140032a7a:	mov    rcx,QWORD PTR [rax+0x8]
   140032a7e:	mov    r8,QWORD PTR [rcx]
   140032a81:	mov    rax,QWORD PTR [r8+0x10]
   140032a85:	mov    QWORD PTR [rcx],rax
   140032a88:	mov    rax,QWORD PTR [r8+0x10]
   140032a8c:	cmp    BYTE PTR [rax+0x29],0x0
   140032a90:	jne    0x140032a96
   140032a92:	mov    QWORD PTR [rax+0x8],rcx
   140032a96:	mov    rax,QWORD PTR [rcx+0x8]
   140032a9a:	mov    QWORD PTR [r8+0x8],rax
   140032a9e:	mov    rax,QWORD PTR [r10+0x8]
   140032aa2:	cmp    rcx,QWORD PTR [rax+0x8]
   140032aa6:	jne    0x140032ab5
   140032aa8:	mov    QWORD PTR [rax+0x8],r8
   140032aac:	mov    QWORD PTR [r8+0x10],rcx
   140032ab0:	jmp    0x140032bb8
   140032ab5:	mov    rax,QWORD PTR [rcx+0x8]
   140032ab9:	cmp    rcx,QWORD PTR [rax+0x10]
   140032abd:	jne    0x140032acc
   140032abf:	mov    QWORD PTR [rax+0x10],r8
   140032ac3:	mov    QWORD PTR [r8+0x10],rcx
   140032ac7:	jmp    0x140032bb8
   140032acc:	mov    QWORD PTR [rax],r8
   140032acf:	mov    QWORD PTR [r8+0x10],rcx
   140032ad3:	jmp    0x140032bb8
   140032ad8:	mov    r8,QWORD PTR [rcx]
   140032adb:	cmp    BYTE PTR [r8+0x28],0x0
   140032ae0:	jne    0x140032b04
   140032ae2:	mov    BYTE PTR [rax+0x28],0x1
   140032ae6:	mov    BYTE PTR [r8+0x28],0x1
   140032aeb:	mov    rax,QWORD PTR [rdx+0x8]
   140032aef:	mov    rcx,QWORD PTR [rax+0x8]
   140032af3:	mov    BYTE PTR [rcx+0x28],0x0
   140032af7:	mov    rax,QWORD PTR [rdx+0x8]
   140032afb:	mov    rdx,QWORD PTR [rax+0x8]
   140032aff:	jmp    0x140032bbc
   140032b04:	cmp    rdx,QWORD PTR [rax]
   140032b07:	jne    0x140032b57
   140032b09:	mov    rcx,QWORD PTR [rax]
   140032b0c:	mov    rdx,rax
   140032b0f:	mov    rax,QWORD PTR [rcx+0x10]
   140032b13:	mov    QWORD PTR [rdx],rax
   140032b16:	mov    rax,QWORD PTR [rcx+0x10]
   140032b1a:	cmp    BYTE PTR [rax+0x29],0x0
   140032b1e:	jne    0x140032b24
   140032b20:	mov    QWORD PTR [rax+0x8],rdx
   140032b24:	mov    rax,QWORD PTR [rdx+0x8]
   140032b28:	mov    QWORD PTR [rcx+0x8],rax
   140032b2c:	mov    rax,QWORD PTR [r10+0x8]
   140032b30:	cmp    rdx,QWORD PTR [rax+0x8]
   140032b34:	jne    0x140032b3c
   140032b36:	mov    QWORD PTR [rax+0x8],rcx
   140032b3a:	jmp    0x140032b4f
   140032b3c:	mov    rax,QWORD PTR [rdx+0x8]
   140032b40:	cmp    rdx,QWORD PTR [rax+0x10]
   140032b44:	jne    0x140032b4c
   140032b46:	mov    QWORD PTR [rax+0x10],rcx
   140032b4a:	jmp    0x140032b4f
   140032b4c:	mov    QWORD PTR [rax],rcx
   140032b4f:	mov    QWORD PTR [rcx+0x10],rdx
   140032b53:	mov    QWORD PTR [rdx+0x8],rcx
   140032b57:	mov    rax,QWORD PTR [rdx+0x8]
   140032b5b:	mov    BYTE PTR [rax+0x28],0x1
   140032b5f:	mov    rax,QWORD PTR [rdx+0x8]
   140032b63:	mov    rcx,QWORD PTR [rax+0x8]
   140032b67:	mov    BYTE PTR [rcx+0x28],0x0
   140032b6b:	mov    rax,QWORD PTR [rdx+0x8]
   140032b6f:	mov    rcx,QWORD PTR [rax+0x8]
   140032b73:	mov    r8,QWORD PTR [rcx+0x10]
   140032b77:	mov    rax,QWORD PTR [r8]
   140032b7a:	mov    QWORD PTR [rcx+0x10],rax
   140032b7e:	mov    rax,QWORD PTR [r8]
   140032b81:	cmp    BYTE PTR [rax+0x29],0x0
   140032b85:	jne    0x140032b8b
   140032b87:	mov    QWORD PTR [rax+0x8],rcx
   140032b8b:	mov    rax,QWORD PTR [rcx+0x8]
   140032b8f:	mov    QWORD PTR [r8+0x8],rax
   140032b93:	mov    rax,QWORD PTR [r10+0x8]
   140032b97:	cmp    rcx,QWORD PTR [rax+0x8]
   140032b9b:	jne    0x140032ba3
   140032b9d:	mov    QWORD PTR [rax+0x8],r8
   140032ba1:	jmp    0x140032bb5
   140032ba3:	mov    rax,QWORD PTR [rcx+0x8]
   140032ba7:	cmp    rcx,QWORD PTR [rax]
   140032baa:	jne    0x140032bb1
   140032bac:	mov    QWORD PTR [rax],r8
   140032baf:	jmp    0x140032bb5
   140032bb1:	mov    QWORD PTR [rax+0x10],r8
   140032bb5:	mov    QWORD PTR [r8],rcx
   140032bb8:	mov    QWORD PTR [rcx+0x8],r8
   140032bbc:	mov    rax,QWORD PTR [rdx+0x8]
   140032bc0:	cmp    BYTE PTR [rax+0x28],0x0
   140032bc4:	je     0x1400329f0
   140032bca:	mov    rax,QWORD PTR [r10+0x8]
   140032bce:	mov    QWORD PTR [rbx],r11
   140032bd1:	mov    rcx,QWORD PTR [rax+0x8]
   140032bd5:	mov    rax,rbx
   140032bd8:	mov    BYTE PTR [rcx+0x28],0x1
   140032bdc:	add    rsp,0x20
   140032be0:	pop    rbx
   140032be1:	ret    
   140032be2:	int3   
   140032be3:	int3   
   140032be4:	int3   
   140032be5:	int3   
   140032be6:	int3   
   140032be7:	int3   
   140032be8:	int3   
   140032be9:	int3   
   140032bea:	int3   
   140032beb:	int3   
   140032bec:	int3   
   140032bed:	int3   
   140032bee:	int3   
   140032bef:	int3   
   140032bf0:	rex push rdi
   140032bf2:	sub    rsp,0x30
   140032bf6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032bff:	mov    QWORD PTR [rsp+0x40],rbx
   140032c04:	mov    QWORD PTR [rsp+0x48],rsi
   140032c09:	mov    rsi,rdx
   140032c0c:	call   0x140032c60
   140032c11:	mov    rdi,rax
   140032c14:	mov    QWORD PTR [rsp+0x50],rax
   140032c19:	lea    rbx,[rax+0x18]
   140032c1d:	mov    QWORD PTR [rsp+0x58],rbx
   140032c22:	mov    QWORD PTR [rsp+0x28],rbx
   140032c27:	test   rbx,rbx
   140032c2a:	je     0x140032c47
   140032c2c:	mov    rcx,QWORD PTR [rsi]
   140032c2f:	sub    rcx,0x18
   140032c33:	call   0x140008e50
   140032c38:	add    rax,0x18
   140032c3c:	mov    QWORD PTR [rbx],rax
   140032c3f:	mov    rax,QWORD PTR [rsi+0x8]
   140032c43:	mov    QWORD PTR [rbx+0x8],rax
   140032c47:	mov    rax,rdi
   140032c4a:	mov    rbx,QWORD PTR [rsp+0x40]
   140032c4f:	mov    rsi,QWORD PTR [rsp+0x48]
   140032c54:	add    rsp,0x30
   140032c58:	pop    rdi
   140032c59:	ret    
   140032c5a:	int3   
   140032c5b:	int3   
   140032c5c:	int3   
   140032c5d:	int3   
   140032c5e:	int3   
   140032c5f:	int3   
   140032c60:	rex push rbx
   140032c62:	sub    rsp,0x40
   140032c66:	mov    rbx,rcx
   140032c69:	mov    ecx,0x30
   140032c6e:	call   0x1400331a0
   140032c73:	test   rax,rax
   140032c76:	je     0x140032c9b
   140032c78:	mov    rdx,QWORD PTR [rbx+0x8]
   140032c7c:	mov    QWORD PTR [rax],rdx
   140032c7f:	mov    rdx,QWORD PTR [rbx+0x8]
   140032c83:	mov    QWORD PTR [rax+0x8],rdx
   140032c87:	mov    rcx,QWORD PTR [rbx+0x8]
   140032c8b:	mov    WORD PTR [rax+0x28],0x0
   140032c91:	mov    QWORD PTR [rax+0x10],rcx
   140032c95:	add    rsp,0x40
   140032c99:	pop    rbx
   140032c9a:	ret    
   140032c9b:	lea    rdx,[rsp+0x58]
   140032ca0:	lea    rcx,[rsp+0x20]
   140032ca5:	mov    QWORD PTR [rsp+0x58],0x0
   140032cae:	call   0x140032fd4
   140032cb3:	lea    r11,[rip+0x35bd6]        # 0x140068890
   140032cba:	lea    rdx,[rip+0x5075f]        # 0x140083420
   140032cc1:	lea    rcx,[rsp+0x20]
   140032cc6:	mov    QWORD PTR [rsp+0x20],r11
   140032ccb:	call   0x140036358
   140032cd0:	int3   
   140032cd1:	int3   
   140032cd2:	int3   
   140032cd3:	int3   
   140032cd4:	jmp    0x140033048
   140032cd9:	int3   
   140032cda:	int3   
   140032cdb:	int3   
   140032cdc:	rex push rbx
   140032cde:	sub    rsp,0x20
   140032ce2:	mov    rbx,rcx
   140032ce5:	call   0x140033094
   140032cea:	lea    r11,[rip+0x35b17]        # 0x140068808
   140032cf1:	mov    QWORD PTR [rbx],r11
   140032cf4:	mov    rax,rbx
   140032cf7:	add    rsp,0x20
   140032cfb:	pop    rbx
   140032cfc:	ret    
   140032cfd:	int3   
   140032cfe:	int3   
   140032cff:	int3   
   140032d00:	sub    rsp,0x48
   140032d04:	mov    QWORD PTR [rsp+0x50],rcx
   140032d09:	lea    rdx,[rsp+0x50]
   140032d0e:	lea    rcx,[rsp+0x20]
   140032d13:	call   0x140032fd4
   140032d18:	lea    r11,[rip+0x35b01]        # 0x140068820
   140032d1f:	lea    rdx,[rip+0x5050a]        # 0x140083230
   140032d26:	lea    rcx,[rsp+0x20]
   140032d2b:	mov    QWORD PTR [rsp+0x20],r11
   140032d30:	call   0x140036358
   140032d35:	int3   
   140032d36:	int3   
   140032d37:	int3   
   140032d38:	rex push rbx
   140032d3a:	sub    rsp,0x20
   140032d3e:	mov    rbx,rcx
   140032d41:	call   0x140033094
   140032d46:	lea    r11,[rip+0x35ad3]        # 0x140068820
   140032d4d:	mov    QWORD PTR [rbx],r11
   140032d50:	mov    rax,rbx
   140032d53:	add    rsp,0x20
   140032d57:	pop    rbx
   140032d58:	ret    
   140032d59:	int3   
   140032d5a:	int3   
   140032d5b:	int3   
   140032d5c:	sub    rsp,0x48
   140032d60:	mov    QWORD PTR [rsp+0x50],rcx
   140032d65:	lea    rdx,[rsp+0x50]
   140032d6a:	lea    rcx,[rsp+0x20]
   140032d6f:	call   0x140032fd4
   140032d74:	lea    r11,[rip+0x35abd]        # 0x140068838
   140032d7b:	lea    rdx,[rip+0x50516]        # 0x140083298
   140032d82:	lea    rcx,[rsp+0x20]
   140032d87:	mov    QWORD PTR [rsp+0x20],r11
   140032d8c:	call   0x140036358
   140032d91:	int3   
   140032d92:	int3   
   140032d93:	int3   
   140032d94:	rex push rbx
   140032d96:	sub    rsp,0x20
   140032d9a:	mov    rbx,rcx
   140032d9d:	call   0x140033094
   140032da2:	lea    r11,[rip+0x35a8f]        # 0x140068838
   140032da9:	mov    QWORD PTR [rbx],r11
   140032dac:	mov    rax,rbx
   140032daf:	add    rsp,0x20
   140032db3:	pop    rbx
   140032db4:	ret    
   140032db5:	int3   
   140032db6:	int3   
   140032db7:	int3   
   140032db8:	mov    QWORD PTR [rsp+0x8],rbx
   140032dbd:	push   rdi
   140032dbe:	sub    rsp,0x20
   140032dc2:	mov    ebx,edx
   140032dc4:	mov    rdi,rcx
   140032dc7:	call   0x140033048
   140032dcc:	test   bl,0x1
   140032dcf:	je     0x140032dd9
   140032dd1:	mov    rcx,rdi
   140032dd4:	call   0x1400330c0
   140032dd9:	mov    rax,rdi
   140032ddc:	mov    rbx,QWORD PTR [rsp+0x30]
   140032de1:	add    rsp,0x20
   140032de5:	pop    rdi
   140032de6:	ret    
   140032de7:	int3   
   140032de8:	jmp    0x1400331a0
   140032ded:	int3   
   140032dee:	int3   
   140032def:	int3   
   140032df0:	mov    QWORD PTR [rsp+0x8],rbx
   140032df5:	mov    QWORD PTR [rsp+0x10],rsi
   140032dfa:	push   rdi
   140032dfb:	sub    rsp,0x20
   140032dff:	mov    rbx,rcx
   140032e02:	lock inc DWORD PTR [rip+0x5226f]        # 0x140085078
   140032e09:	jne    0x140032e28
   140032e0b:	lea    rdi,[rip+0x562ee]        # 0x140089100
   140032e12:	mov    esi,0x4
   140032e17:	mov    rcx,rdi
   140032e1a:	call   0x140032ed0
   140032e1f:	add    rdi,0x28
   140032e23:	dec    rsi
   140032e26:	jne    0x140032e17
   140032e28:	mov    rsi,QWORD PTR [rsp+0x38]
   140032e2d:	mov    rax,rbx
   140032e30:	mov    rbx,QWORD PTR [rsp+0x30]
   140032e35:	add    rsp,0x20
   140032e39:	pop    rdi
   140032e3a:	ret    
   140032e3b:	int3   
   140032e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140032e41:	push   rdi
   140032e42:	sub    rsp,0x20
   140032e46:	lock add DWORD PTR [rip+0x5222a],0xffffffff        # 0x140085078
   140032e4e:	jns    0x140032e6d
   140032e50:	lea    rbx,[rip+0x562a9]        # 0x140089100
   140032e57:	mov    edi,0x4
   140032e5c:	mov    rcx,rbx
   140032e5f:	call   0x140032ed8
   140032e64:	add    rbx,0x28
   140032e68:	dec    rdi
   140032e6b:	jne    0x140032e5c
   140032e6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140032e72:	add    rsp,0x20
   140032e76:	pop    rdi
   140032e77:	ret    
   140032e78:	rex push rbx
   140032e7a:	sub    rsp,0x20
   140032e7e:	mov    rbx,rcx
   140032e81:	mov    DWORD PTR [rcx],edx
   140032e83:	cmp    edx,0x4
   140032e86:	jge    0x140032e9f
   140032e88:	movsxd rax,edx
   140032e8b:	lea    rdx,[rax+rax*4]
   140032e8f:	lea    rax,[rip+0x5626a]        # 0x140089100
   140032e96:	lea    rcx,[rax+rdx*8]
   140032e9a:	call   0x140032ee0
   140032e9f:	mov    rax,rbx
   140032ea2:	add    rsp,0x20
   140032ea6:	pop    rbx
   140032ea7:	ret    
   140032ea8:	sub    rsp,0x28
   140032eac:	cmp    DWORD PTR [rcx],0x4
   140032eaf:	jge    0x140032ec8
   140032eb1:	movsxd rax,DWORD PTR [rcx]
   140032eb4:	lea    rcx,[rax+rax*4]
   140032eb8:	lea    rax,[rip+0x56241]        # 0x140089100
   140032ebf:	lea    rcx,[rax+rcx*8]
   140032ec3:	call   0x140032ee8
   140032ec8:	add    rsp,0x28
   140032ecc:	ret    
   140032ecd:	int3   
   140032ece:	int3   
   140032ecf:	int3   
   140032ed0:	rex.W jmp QWORD PTR [rip+0x35541]        # 0x140068418
   140032ed7:	int3   
   140032ed8:	rex.W jmp QWORD PTR [rip+0x35531]        # 0x140068410
   140032edf:	int3   
   140032ee0:	rex.W jmp QWORD PTR [rip+0x35289]        # 0x140068170
   140032ee7:	int3   
   140032ee8:	rex.W jmp QWORD PTR [rip+0x35261]        # 0x140068150
   140032eef:	int3   
   140032ef0:	int3   
   140032ef1:	int3   
   140032ef2:	int3   
   140032ef3:	int3   
   140032ef4:	int3   
   140032ef5:	int3   
   140032ef6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140032f00:	cmp    rcx,QWORD PTR [rip+0x521a1]        # 0x1400850a8
   140032f07:	jne    0x140032f1a
   140032f09:	rol    rcx,0x10
   140032f0d:	test   cx,0xffff
   140032f12:	jne    0x140032f16
   140032f14:	repz ret 
   140032f16:	ror    rcx,0x10
   140032f1a:	jmp    0x1400363ec
   140032f1f:	int3   
   140032f20:	lea    rax,[rip+0x35929]        # 0x140068850
   140032f27:	mov    QWORD PTR [rcx],rax
   140032f2a:	mov    rax,QWORD PTR [rdx]
   140032f2d:	mov    BYTE PTR [rcx+0x10],0x0
   140032f31:	mov    QWORD PTR [rcx+0x8],rax
   140032f35:	mov    rax,rcx
   140032f38:	ret    
   140032f39:	int3   
   140032f3a:	int3   
   140032f3b:	int3   
   140032f3c:	cmp    QWORD PTR [rcx+0x8],0x0
   140032f41:	lea    rax,[rip+0x35918]        # 0x140068860
   140032f48:	cmovne rax,QWORD PTR [rcx+0x8]
   140032f4d:	ret    
   140032f4e:	int3   
   140032f4f:	int3   
   140032f50:	test   rdx,rdx
   140032f53:	je     0x140032fa9
   140032f55:	mov    QWORD PTR [rsp+0x8],rbx
   140032f5a:	mov    QWORD PTR [rsp+0x10],rsi
   140032f5f:	push   rdi
   140032f60:	sub    rsp,0x20
   140032f64:	mov    rdi,rcx
   140032f67:	mov    rcx,rdx
   140032f6a:	mov    rbx,rdx
   140032f6d:	call   0x140036550
   140032f72:	mov    rsi,rax
   140032f75:	lea    rcx,[rax+0x1]
   140032f79:	call   0x140034828
   140032f7e:	mov    QWORD PTR [rdi+0x8],rax
   140032f82:	test   rax,rax
   140032f85:	je     0x140032f9a
   140032f87:	lea    rdx,[rsi+0x1]
   140032f8b:	mov    r8,rbx
   140032f8e:	mov    rcx,rax
   140032f91:	call   0x1400336a8
   140032f96:	mov    BYTE PTR [rdi+0x10],0x1
   140032f9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140032f9f:	mov    rsi,QWORD PTR [rsp+0x38]
   140032fa4:	add    rsp,0x20
   140032fa8:	pop    rdi
   140032fa9:	ret    
   140032faa:	int3   
   140032fab:	int3   
   140032fac:	rex push rbx
   140032fae:	sub    rsp,0x20
   140032fb2:	cmp    BYTE PTR [rcx+0x10],0x0
   140032fb6:	mov    rbx,rcx
   140032fb9:	je     0x140032fc4
   140032fbb:	mov    rcx,QWORD PTR [rcx+0x8]
   140032fbf:	call   0x140033594
   140032fc4:	and    QWORD PTR [rbx+0x8],0x0
   140032fc9:	mov    BYTE PTR [rbx+0x10],0x0
   140032fcd:	add    rsp,0x20
   140032fd1:	pop    rbx
   140032fd2:	ret    
   140032fd3:	int3   
   140032fd4:	rex push rbx
   140032fd6:	sub    rsp,0x20
   140032fda:	and    QWORD PTR [rcx+0x8],0x0
   140032fdf:	lea    rax,[rip+0x3586a]        # 0x140068850
   140032fe6:	mov    BYTE PTR [rcx+0x10],0x0
   140032fea:	mov    QWORD PTR [rcx],rax
   140032fed:	mov    rdx,QWORD PTR [rdx]
   140032ff0:	mov    rbx,rcx
   140032ff3:	call   0x140032f50
   140032ff8:	mov    rax,rbx
   140032ffb:	add    rsp,0x20
   140032fff:	pop    rbx
   140033000:	ret    
   140033001:	int3   
   140033002:	int3   
   140033003:	int3   
   140033004:	mov    QWORD PTR [rsp+0x8],rbx
   140033009:	push   rdi
   14003300a:	sub    rsp,0x20
   14003300e:	mov    rdi,rdx
   140033011:	mov    rbx,rcx
   140033014:	cmp    rcx,rdx
   140033017:	je     0x14003303a
   140033019:	call   0x140032fac
   14003301e:	cmp    BYTE PTR [rdi+0x10],0x0
   140033022:	je     0x140033032
   140033024:	mov    rdx,QWORD PTR [rdi+0x8]
   140033028:	mov    rcx,rbx
   14003302b:	call   0x140032f50
   140033030:	jmp    0x14003303a
   140033032:	mov    rax,QWORD PTR [rdi+0x8]
   140033036:	mov    QWORD PTR [rbx+0x8],rax
   14003303a:	mov    rax,rbx
   14003303d:	mov    rbx,QWORD PTR [rsp+0x30]
   140033042:	add    rsp,0x20
   140033046:	pop    rdi
   140033047:	ret    
   140033048:	lea    rax,[rip+0x35801]        # 0x140068850
   14003304f:	mov    QWORD PTR [rcx],rax
   140033052:	jmp    0x140032fac
   140033057:	int3   
   140033058:	mov    QWORD PTR [rsp+0x8],rbx
   14003305d:	push   rdi
   14003305e:	sub    rsp,0x20
   140033062:	lea    rax,[rip+0x357e7]        # 0x140068850
   140033069:	mov    ebx,edx
   14003306b:	mov    rdi,rcx
   14003306e:	mov    QWORD PTR [rcx],rax
   140033071:	call   0x140032fac
   140033076:	test   bl,0x1
   140033079:	je     0x140033083
   14003307b:	mov    rcx,rdi
   14003307e:	call   0x1400330c0
   140033083:	mov    rax,rdi
   140033086:	mov    rbx,QWORD PTR [rsp+0x30]
   14003308b:	add    rsp,0x20
   14003308f:	pop    rdi
   140033090:	ret    
   140033091:	int3   
   140033092:	int3   
   140033093:	int3   
   140033094:	rex push rbx
   140033096:	sub    rsp,0x20
   14003309a:	and    QWORD PTR [rcx+0x8],0x0
   14003309f:	lea    rax,[rip+0x357aa]        # 0x140068850
   1400330a6:	mov    rbx,rcx
   1400330a9:	mov    QWORD PTR [rcx],rax
   1400330ac:	mov    BYTE PTR [rcx+0x10],0x0
   1400330b0:	call   0x140033004
   1400330b5:	mov    rax,rbx
   1400330b8:	add    rsp,0x20
   1400330bc:	pop    rbx
   1400330bd:	ret    
   1400330be:	int3   
   1400330bf:	int3   
   1400330c0:	jmp    0x140033594
   1400330c5:	int3   
   1400330c6:	int3   
   1400330c7:	int3   
   1400330c8:	rex push rbx
   1400330ca:	sub    rsp,0x20
   1400330ce:	xor    r10d,r10d
   1400330d1:	mov    r9,rcx
   1400330d4:	test   rcx,rcx
   1400330d7:	je     0x1400330e6
   1400330d9:	test   rdx,rdx
   1400330dc:	je     0x1400330e6
   1400330de:	test   r8,r8
   1400330e1:	jne    0x1400330ff
   1400330e3:	mov    BYTE PTR [rcx],r10b
   1400330e6:	call   0x140036858
   1400330eb:	mov    ebx,0x16
   1400330f0:	mov    DWORD PTR [rax],ebx
   1400330f2:	call   0x1400367f0
   1400330f7:	mov    eax,ebx
   1400330f9:	add    rsp,0x20
   1400330fd:	pop    rbx
   1400330fe:	ret    
   1400330ff:	cmp    BYTE PTR [rcx],r10b
   140033102:	je     0x14003310c
   140033104:	inc    rcx
   140033107:	dec    rdx
   14003310a:	jne    0x1400330ff
   14003310c:	test   rdx,rdx
   14003310f:	jne    0x140033116
   140033111:	mov    BYTE PTR [r9],r10b
   140033114:	jmp    0x1400330e6
   140033116:	sub    rcx,r8
   140033119:	mov    al,BYTE PTR [r8]
   14003311c:	mov    BYTE PTR [rcx+r8*1],al
   140033120:	inc    r8
   140033123:	test   al,al
   140033125:	je     0x14003312c
   140033127:	dec    rdx
   14003312a:	jne    0x140033119
   14003312c:	test   rdx,rdx
   14003312f:	jne    0x140033140
   140033131:	mov    BYTE PTR [r9],r10b
   140033134:	call   0x140036858
   140033139:	mov    ebx,0x22
   14003313e:	jmp    0x1400330f0
   140033140:	xor    eax,eax
   140033142:	jmp    0x1400330f9
   140033144:	mov    QWORD PTR [rsp+0x8],rbx
   140033149:	push   rdi
   14003314a:	sub    rsp,0x20
   14003314e:	lea    rax,[rip+0x3572b]        # 0x140068880
   140033155:	mov    ebx,edx
   140033157:	mov    rdi,rcx
   14003315a:	mov    QWORD PTR [rcx],rax
   14003315d:	call   0x1400368e0
   140033162:	test   bl,0x1
   140033165:	je     0x14003316f
   140033167:	mov    rcx,rdi
   14003316a:	call   0x1400330c0
   14003316f:	mov    rax,rdi
   140033172:	mov    rbx,QWORD PTR [rsp+0x30]
   140033177:	add    rsp,0x20
   14003317b:	pop    rdi
   14003317c:	ret    
   14003317d:	int3   
   14003317e:	int3   
   14003317f:	int3   
   140033180:	sub    rsp,0x28
   140033184:	mov    rax,rdx
   140033187:	lea    rdx,[rcx+0x11]
   14003318b:	lea    rcx,[rax+0x11]
   14003318f:	call   0x140036960
   140033194:	test   eax,eax
   140033196:	sete   al
   140033199:	add    rsp,0x28
   14003319d:	ret    
   14003319e:	int3   
   14003319f:	int3   
   1400331a0:	rex push rbx
   1400331a2:	sub    rsp,0x40
   1400331a6:	mov    rbx,rcx
   1400331a9:	jmp    0x1400331ba
   1400331ab:	mov    rcx,rbx
   1400331ae:	call   0x140036a18
   1400331b3:	test   eax,eax
   1400331b5:	je     0x1400331ca
   1400331b7:	mov    rcx,rbx
   1400331ba:	call   0x140034828
   1400331bf:	test   rax,rax
   1400331c2:	je     0x1400331ab
   1400331c4:	add    rsp,0x40
   1400331c8:	pop    rbx
   1400331c9:	ret    
   1400331ca:	mov    eax,DWORD PTR [rip+0x55ff0]        # 0x1400891c0
   1400331d0:	mov    r8d,0x1
   1400331d6:	lea    rbx,[rip+0x356b3]        # 0x140068890
   1400331dd:	test   r8b,al
   1400331e0:	jne    0x14003321b
   1400331e2:	or     eax,r8d
   1400331e5:	lea    rdx,[rsp+0x58]
   1400331ea:	lea    rcx,[rip+0x55fb7]        # 0x1400891a8
   1400331f1:	mov    DWORD PTR [rip+0x55fc9],eax        # 0x1400891c0
   1400331f7:	lea    rax,[rip+0x356a2]        # 0x1400688a0
   1400331fe:	mov    QWORD PTR [rsp+0x58],rax
   140033203:	call   0x140032f20
   140033208:	lea    rcx,[rip+0x15ba5]        # 0x140048db4
   14003320f:	mov    QWORD PTR [rip+0x55f92],rbx        # 0x1400891a8
   140033216:	call   0x14003444c
   14003321b:	lea    rdx,[rip+0x55f86]        # 0x1400891a8
   140033222:	lea    rcx,[rsp+0x20]
   140033227:	call   0x140033094
   14003322c:	lea    rdx,[rip+0x501ed]        # 0x140083420
   140033233:	lea    rcx,[rsp+0x20]
   140033238:	mov    QWORD PTR [rsp+0x20],rbx
   14003323d:	call   0x140036358
   140033242:	int3   
   140033243:	int3   
   140033244:	int3   
   140033245:	int3   
   140033246:	int3   
   140033247:	int3   
   140033248:	int3   
   140033249:	int3   
   14003324a:	int3   
   14003324b:	int3   
   14003324c:	int3   
   14003324d:	int3   
   14003324e:	int3   
   14003324f:	int3   
   140033250:	int3   
   140033251:	int3   
   140033252:	int3   
   140033253:	int3   
   140033254:	int3   
   140033255:	int3   
   140033256:	data16 nop WORD PTR [rax+rax*1+0x0]
   140033260:	mov    r11,rcx
   140033263:	sub    rdx,rcx
   140033266:	jb     0x14003340a
   14003326c:	cmp    r8,0x8
   140033270:	jb     0x1400332d3
   140033272:	test   cl,0x7
   140033275:	je     0x1400332ad
   140033277:	test   cl,0x1
   14003327a:	je     0x140033287
   14003327c:	mov    al,BYTE PTR [rdx+rcx*1]
   14003327f:	dec    r8
   140033282:	mov    BYTE PTR [rcx],al
   140033284:	inc    rcx
   140033287:	test   cl,0x2
   14003328a:	je     0x14003329b
   14003328c:	mov    ax,WORD PTR [rdx+rcx*1]
   140033290:	sub    r8,0x2
   140033294:	mov    WORD PTR [rcx],ax
   140033297:	add    rcx,0x2
   14003329b:	test   cl,0x4
   14003329e:	je     0x1400332ad
   1400332a0:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400332a3:	sub    r8,0x4
   1400332a7:	mov    DWORD PTR [rcx],eax
   1400332a9:	add    rcx,0x4
   1400332ad:	mov    r9,r8
   1400332b0:	shr    r9,0x5
   1400332b4:	jne    0x140033307
   1400332b6:	mov    r9,r8
   1400332b9:	shr    r9,0x3
   1400332bd:	je     0x1400332d3
   1400332bf:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400332c3:	mov    QWORD PTR [rcx],rax
   1400332c6:	add    rcx,0x8
   1400332ca:	dec    r9
   1400332cd:	jne    0x1400332bf
   1400332cf:	and    r8,0x7
   1400332d3:	test   r8,r8
   1400332d6:	jne    0x1400332e0
   1400332d8:	mov    rax,r11
   1400332db:	ret    
   1400332dc:	nop    DWORD PTR [rax+0x0]
   1400332e0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400332e3:	mov    BYTE PTR [rcx],al
   1400332e5:	inc    rcx
   1400332e8:	dec    r8
   1400332eb:	jne    0x1400332e0
   1400332ed:	mov    rax,r11
   1400332f0:	ret    
   1400332f1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140033300:	data16 data16 xchg ax,ax
   140033304:	data16 xchg ax,ax
   140033307:	cmp    r9,0x2000
   14003330e:	jae    0x140033352
   140033310:	mov    rax,QWORD PTR [rdx+rcx*1]
   140033314:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140033319:	add    rcx,0x20
   14003331d:	mov    QWORD PTR [rcx-0x20],rax
   140033321:	mov    QWORD PTR [rcx-0x18],r10
   140033325:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14003332a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14003332f:	dec    r9
   140033332:	mov    QWORD PTR [rcx-0x10],rax
   140033336:	mov    QWORD PTR [rcx-0x8],r10
   14003333a:	jne    0x140033310
   14003333c:	and    r8,0x1f
   140033340:	jmp    0x1400332b6
   140033345:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140033350:	xchg   ax,ax
   140033352:	cmp    rdx,0x1000
   140033359:	jb     0x140033310
   14003335b:	mov    eax,0x20
   140033360:	prefetchnta BYTE PTR [rdx+rcx*1]
   140033364:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140033369:	add    rcx,0x80
   140033370:	dec    eax
   140033372:	jne    0x140033360
   140033374:	sub    rcx,0x1000
   14003337b:	mov    eax,0x40
   140033380:	mov    r9,QWORD PTR [rdx+rcx*1]
   140033384:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140033389:	movnti QWORD PTR [rcx],r9
   14003338d:	movnti QWORD PTR [rcx+0x8],r10
   140033392:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140033397:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14003339c:	movnti QWORD PTR [rcx+0x10],r9
   1400333a1:	movnti QWORD PTR [rcx+0x18],r10
   1400333a6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   1400333ab:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   1400333b0:	add    rcx,0x40
   1400333b4:	movnti QWORD PTR [rcx-0x20],r9
   1400333b9:	movnti QWORD PTR [rcx-0x18],r10
   1400333be:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   1400333c3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400333c8:	dec    eax
   1400333ca:	movnti QWORD PTR [rcx-0x10],r9
   1400333cf:	movnti QWORD PTR [rcx-0x8],r10
   1400333d4:	jne    0x140033380
   1400333d6:	sub    r8,0x1000
   1400333dd:	cmp    r8,0x1000
   1400333e4:	jae    0x14003335b
   1400333ea:	lock or BYTE PTR [rsp],0x0
   1400333ef:	jmp    0x1400332ad
   1400333f4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140033400:	data16 data16 xchg ax,ax
   140033404:	data16 data16 xchg ax,ax
   140033408:	xchg   ax,ax
   14003340a:	add    rcx,r8
   14003340d:	cmp    r8,0x8
   140033411:	jb     0x140033474
   140033413:	test   cl,0x7
   140033416:	je     0x14003344e
   140033418:	test   cl,0x1
   14003341b:	je     0x140033428
   14003341d:	dec    rcx
   140033420:	mov    al,BYTE PTR [rdx+rcx*1]
   140033423:	dec    r8
   140033426:	mov    BYTE PTR [rcx],al
   140033428:	test   cl,0x2
   14003342b:	je     0x14003343c
   14003342d:	sub    rcx,0x2
   140033431:	mov    ax,WORD PTR [rdx+rcx*1]
   140033435:	sub    r8,0x2
   140033439:	mov    WORD PTR [rcx],ax
   14003343c:	test   cl,0x4
   14003343f:	je     0x14003344e
   140033441:	sub    rcx,0x4
   140033445:	mov    eax,DWORD PTR [rdx+rcx*1]
   140033448:	sub    r8,0x4
   14003344c:	mov    DWORD PTR [rcx],eax
   14003344e:	mov    r9,r8
   140033451:	shr    r9,0x5
   140033455:	jne    0x1400334a7
   140033457:	mov    r9,r8
   14003345a:	shr    r9,0x3
   14003345e:	je     0x140033474
   140033460:	sub    rcx,0x8
   140033464:	mov    rax,QWORD PTR [rdx+rcx*1]
   140033468:	dec    r9
   14003346b:	mov    QWORD PTR [rcx],rax
   14003346e:	jne    0x140033460
   140033470:	and    r8,0x7
   140033474:	test   r8,r8
   140033477:	jne    0x140033480
   140033479:	mov    rax,r11
   14003347c:	ret    
   14003347d:	nop    DWORD PTR [rax]
   140033480:	dec    rcx
   140033483:	mov    al,BYTE PTR [rdx+rcx*1]
   140033486:	dec    r8
   140033489:	mov    BYTE PTR [rcx],al
   14003348b:	jne    0x140033480
   14003348d:	mov    rax,r11
   140033490:	ret    
   140033491:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400334a0:	data16 data16 xchg ax,ax
   1400334a4:	data16 xchg ax,ax
   1400334a7:	cmp    r9,0x2000
   1400334ae:	jae    0x1400334f2
   1400334b0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   1400334b5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400334ba:	sub    rcx,0x20
   1400334be:	mov    QWORD PTR [rcx+0x18],rax
   1400334c2:	mov    QWORD PTR [rcx+0x10],r10
   1400334c6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400334cb:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400334cf:	dec    r9
   1400334d2:	mov    QWORD PTR [rcx+0x8],rax
   1400334d6:	mov    QWORD PTR [rcx],r10
   1400334d9:	jne    0x1400334b0
   1400334db:	and    r8,0x1f
   1400334df:	jmp    0x140033457
   1400334e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400334f0:	xchg   ax,ax
   1400334f2:	cmp    rdx,0xfffffffffffff000
   1400334f9:	ja     0x1400334b0
   1400334fb:	mov    eax,0x20
   140033500:	sub    rcx,0x80
   140033507:	prefetchnta BYTE PTR [rdx+rcx*1]
   14003350b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140033510:	dec    eax
   140033512:	jne    0x140033500
   140033514:	add    rcx,0x1000
   14003351b:	mov    eax,0x40
   140033520:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140033525:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14003352a:	movnti QWORD PTR [rcx-0x8],r9
   14003352f:	movnti QWORD PTR [rcx-0x10],r10
   140033534:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140033539:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14003353e:	movnti QWORD PTR [rcx-0x18],r9
   140033543:	movnti QWORD PTR [rcx-0x20],r10
   140033548:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14003354d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140033552:	sub    rcx,0x40
   140033556:	movnti QWORD PTR [rcx+0x18],r9
   14003355b:	movnti QWORD PTR [rcx+0x10],r10
   140033560:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140033565:	mov    r10,QWORD PTR [rdx+rcx*1]
   140033569:	dec    eax
   14003356b:	movnti QWORD PTR [rcx+0x8],r9
   140033570:	movnti QWORD PTR [rcx],r10
   140033574:	jne    0x140033520
   140033576:	sub    r8,0x1000
   14003357d:	cmp    r8,0x1000
   140033584:	jae    0x1400334fb
   14003358a:	lock or BYTE PTR [rsp],0x0
   14003358f:	jmp    0x14003344e
   140033594:	test   rcx,rcx
   140033597:	je     0x1400335d0
   140033599:	push   rbx
   14003359a:	sub    rsp,0x20
   14003359e:	mov    r8,rcx
   1400335a1:	mov    rcx,QWORD PTR [rip+0x56228]        # 0x1400897d0
   1400335a8:	xor    edx,edx
   1400335aa:	call   QWORD PTR [rip+0x34e58]        # 0x140068408
   1400335b0:	test   eax,eax
   1400335b2:	jne    0x1400335cb
   1400335b4:	call   0x140036858
   1400335b9:	mov    rbx,rax
   1400335bc:	call   QWORD PTR [rip+0x34dfe]        # 0x1400683c0
   1400335c2:	mov    ecx,eax
   1400335c4:	call   0x140036810
   1400335c9:	mov    DWORD PTR [rbx],eax
   1400335cb:	add    rsp,0x20
   1400335cf:	pop    rbx
   1400335d0:	ret    
   1400335d1:	int3   
   1400335d2:	int3   
   1400335d3:	int3   
   1400335d4:	rex push rbx
   1400335d6:	sub    rsp,0x20
   1400335da:	and    DWORD PTR [rsp+0x40],0x0
   1400335df:	lea    r8,[rsp+0x40]
   1400335e4:	call   0x140036aa4
   1400335e9:	mov    rbx,rax
   1400335ec:	test   rax,rax
   1400335ef:	jne    0x14003360c
   1400335f1:	cmp    DWORD PTR [rsp+0x40],eax
   1400335f5:	je     0x14003360c
   1400335f7:	call   0x140036858
   1400335fc:	test   rax,rax
   1400335ff:	je     0x14003360c
   140033601:	call   0x140036858
   140033606:	mov    ecx,DWORD PTR [rsp+0x40]
   14003360a:	mov    DWORD PTR [rax],ecx
   14003360c:	mov    rax,rbx
   14003360f:	add    rsp,0x20
   140033613:	pop    rbx
   140033614:	ret    
   140033615:	int3   
   140033616:	int3   
   140033617:	int3   
   140033618:	mov    QWORD PTR [rsp+0x8],rbx
   14003361d:	mov    QWORD PTR [rsp+0x10],rsi
   140033622:	push   rdi
   140033623:	sub    rsp,0x20
   140033627:	xor    edi,edi
   140033629:	mov    rbx,rdx
   14003362c:	mov    rsi,rcx
   14003362f:	test   rdx,rdx
   140033632:	je     0x140033651
   140033634:	xor    edx,edx
   140033636:	lea    rax,[rdi-0x20]
   14003363a:	div    rbx
   14003363d:	cmp    rax,r8
   140033640:	jae    0x140033651
   140033642:	call   0x140036858
   140033647:	mov    DWORD PTR [rax],0xc
   14003364d:	xor    eax,eax
   14003364f:	jmp    0x14003368e
   140033651:	imul   rbx,r8
   140033655:	test   rcx,rcx
   140033658:	je     0x140033662
   14003365a:	call   0x140036eac
   14003365f:	mov    rdi,rax
   140033662:	mov    rdx,rbx
   140033665:	mov    rcx,rsi
   140033668:	call   0x140034464
   14003366d:	mov    rsi,rax
   140033670:	test   rax,rax
   140033673:	je     0x14003368b
   140033675:	cmp    rdi,rbx
   140033678:	jae    0x14003368b
   14003367a:	sub    rbx,rdi
   14003367d:	lea    rcx,[rdi+rax*1]
   140033681:	xor    edx,edx
   140033683:	mov    r8,rbx
   140033686:	call   0x140036dc0
   14003368b:	mov    rax,rsi
   14003368e:	mov    rbx,QWORD PTR [rsp+0x30]
   140033693:	mov    rsi,QWORD PTR [rsp+0x38]
   140033698:	add    rsp,0x20
   14003369c:	pop    rdi
   14003369d:	ret    
   14003369e:	int3   
   14003369f:	int3   
   1400336a0:	jmp    0x1400330c0
   1400336a5:	int3   
   1400336a6:	int3   
   1400336a7:	int3   
   1400336a8:	rex push rbx
   1400336aa:	sub    rsp,0x20
   1400336ae:	test   rcx,rcx
   1400336b1:	je     0x1400336c0
   1400336b3:	test   rdx,rdx
   1400336b6:	je     0x1400336c0
   1400336b8:	test   r8,r8
   1400336bb:	jne    0x1400336d9
   1400336bd:	mov    BYTE PTR [rcx],r8b
   1400336c0:	call   0x140036858
   1400336c5:	mov    ebx,0x16
   1400336ca:	mov    DWORD PTR [rax],ebx
   1400336cc:	call   0x1400367f0
   1400336d1:	mov    eax,ebx
   1400336d3:	add    rsp,0x20
   1400336d7:	pop    rbx
   1400336d8:	ret    
   1400336d9:	mov    r9,rcx
   1400336dc:	sub    r9,r8
   1400336df:	mov    al,BYTE PTR [r8]
   1400336e2:	mov    BYTE PTR [r9+r8*1],al
   1400336e6:	inc    r8
   1400336e9:	test   al,al
   1400336eb:	je     0x1400336f2
   1400336ed:	dec    rdx
   1400336f0:	jne    0x1400336df
   1400336f2:	test   rdx,rdx
   1400336f5:	jne    0x140033705
   1400336f7:	mov    BYTE PTR [rcx],dl
   1400336f9:	call   0x140036858
   1400336fe:	mov    ebx,0x22
   140033703:	jmp    0x1400336ca
   140033705:	xor    eax,eax
   140033707:	jmp    0x1400336d3
   140033709:	int3   
   14003370a:	int3   
   14003370b:	int3   
   14003370c:	rex push rbx
   14003370e:	sub    rsp,0x20
   140033712:	mov    rbx,rcx
   140033715:	mov    BYTE PTR [rcx+0x18],0x0
   140033719:	test   rdx,rdx
   14003371c:	jne    0x14003379d
   14003371e:	call   0x140037c34
   140033723:	mov    QWORD PTR [rbx+0x10],rax
   140033727:	mov    rdx,QWORD PTR [rax+0xc0]
   14003372e:	mov    QWORD PTR [rbx],rdx
   140033731:	mov    rcx,QWORD PTR [rax+0xb8]
   140033738:	mov    QWORD PTR [rbx+0x8],rcx
   14003373c:	cmp    rdx,QWORD PTR [rip+0x5244d]        # 0x140085b90
   140033743:	je     0x14003375b
   140033745:	mov    eax,DWORD PTR [rax+0xc8]
   14003374b:	test   DWORD PTR [rip+0x5200f],eax        # 0x140085760
   140033751:	jne    0x14003375b
   140033753:	call   0x140037a34
   140033758:	mov    QWORD PTR [rbx],rax
   14003375b:	mov    rax,QWORD PTR [rip+0x51efe]        # 0x140085660
   140033762:	cmp    QWORD PTR [rbx+0x8],rax
   140033766:	je     0x140033783
   140033768:	mov    rax,QWORD PTR [rbx+0x10]
   14003376c:	mov    ecx,DWORD PTR [rax+0xc8]
   140033772:	test   DWORD PTR [rip+0x51fe8],ecx        # 0x140085760
   140033778:	jne    0x140033783
   14003377a:	call   0x140037164
   14003377f:	mov    QWORD PTR [rbx+0x8],rax
   140033783:	mov    rax,QWORD PTR [rbx+0x10]
   140033787:	test   BYTE PTR [rax+0xc8],0x2
   14003378e:	jne    0x1400337a4
   140033790:	or     DWORD PTR [rax+0xc8],0x2
   140033797:	mov    BYTE PTR [rbx+0x18],0x1
   14003379b:	jmp    0x1400337a4
   14003379d:	movups xmm0,XMMWORD PTR [rdx]
   1400337a0:	movdqu XMMWORD PTR [rcx],xmm0
   1400337a4:	mov    rax,rbx
   1400337a7:	add    rsp,0x20
   1400337ab:	pop    rbx
   1400337ac:	ret    
   1400337ad:	int3   
   1400337ae:	int3   
   1400337af:	int3   
   1400337b0:	mov    r9,rcx
   1400337b3:	movzx  r8d,BYTE PTR [r9]
   1400337b7:	inc    r9
   1400337ba:	lea    eax,[r8-0x41]
   1400337be:	cmp    eax,0x19
   1400337c1:	ja     0x1400337c7
   1400337c3:	add    r8d,0x20
   1400337c7:	movzx  ecx,BYTE PTR [rdx]
   1400337ca:	inc    rdx
   1400337cd:	lea    eax,[rcx-0x41]
   1400337d0:	cmp    eax,0x19
   1400337d3:	ja     0x1400337d8
   1400337d5:	add    ecx,0x20
   1400337d8:	test   r8d,r8d
   1400337db:	je     0x1400337e2
   1400337dd:	cmp    r8d,ecx
   1400337e0:	je     0x1400337b3
   1400337e2:	sub    r8d,ecx
   1400337e5:	mov    eax,r8d
   1400337e8:	ret    
   1400337e9:	int3   
   1400337ea:	int3   
   1400337eb:	int3   
   1400337ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400337f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400337f6:	mov    QWORD PTR [rsp+0x18],rdi
   1400337fb:	push   rbp
   1400337fc:	mov    rbp,rsp
   1400337ff:	sub    rsp,0x40
   140033803:	mov    rsi,rcx
   140033806:	mov    rdi,rdx
   140033809:	lea    rcx,[rbp-0x20]
   14003380d:	mov    rdx,r8
   140033810:	call   0x14003370c
   140033815:	test   rsi,rsi
   140033818:	jne    0x140033842
   14003381a:	call   0x140036858
   14003381f:	mov    DWORD PTR [rax],0x16
   140033825:	call   0x1400367f0
   14003382a:	cmp    BYTE PTR [rbp-0x8],0x0
   14003382e:	je     0x14003383b
   140033830:	mov    rax,QWORD PTR [rbp-0x10]
   140033834:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003383b:	mov    eax,0x7fffffff
   140033840:	jmp    0x1400338ad
   140033842:	test   rdi,rdi
   140033845:	je     0x14003381a
   140033847:	mov    rax,QWORD PTR [rbp-0x20]
   14003384b:	cmp    DWORD PTR [rax+0x14],0x0
   14003384f:	jne    0x14003386f
   140033851:	mov    rdx,rdi
   140033854:	mov    rcx,rsi
   140033857:	call   0x1400337b0
   14003385c:	cmp    BYTE PTR [rbp-0x8],0x0
   140033860:	je     0x1400338ad
   140033862:	mov    rcx,QWORD PTR [rbp-0x10]
   140033866:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003386d:	jmp    0x1400338ad
   14003386f:	sub    rsi,rdi
   140033872:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140033876:	lea    rdx,[rbp-0x20]
   14003387a:	call   0x140033b5c
   14003387f:	movzx  ecx,BYTE PTR [rdi]
   140033882:	lea    rdx,[rbp-0x20]
   140033886:	mov    ebx,eax
   140033888:	call   0x140033b5c
   14003388d:	inc    rdi
   140033890:	test   ebx,ebx
   140033892:	je     0x140033898
   140033894:	cmp    ebx,eax
   140033896:	je     0x140033872
   140033898:	sub    ebx,eax
   14003389a:	cmp    BYTE PTR [rbp-0x8],0x0
   14003389e:	je     0x1400338ab
   1400338a0:	mov    rcx,QWORD PTR [rbp-0x10]
   1400338a4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400338ab:	mov    eax,ebx
   1400338ad:	mov    rbx,QWORD PTR [rsp+0x50]
   1400338b2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400338b7:	mov    rdi,QWORD PTR [rsp+0x60]
   1400338bc:	add    rsp,0x40
   1400338c0:	pop    rbp
   1400338c1:	ret    
   1400338c2:	int3   
   1400338c3:	int3   
   1400338c4:	sub    rsp,0x28
   1400338c8:	cmp    DWORD PTR [rip+0x55f31],0x0        # 0x140089800
   1400338cf:	jne    0x1400338fe
   1400338d1:	test   rcx,rcx
   1400338d4:	jne    0x1400338f0
   1400338d6:	call   0x140036858
   1400338db:	mov    DWORD PTR [rax],0x16
   1400338e1:	call   0x1400367f0
   1400338e6:	mov    eax,0x7fffffff
   1400338eb:	add    rsp,0x28
   1400338ef:	ret    
   1400338f0:	test   rdx,rdx
   1400338f3:	je     0x1400338d6
   1400338f5:	add    rsp,0x28
   1400338f9:	jmp    0x1400337b0
   1400338fe:	xor    r8d,r8d
   140033901:	add    rsp,0x28
   140033905:	jmp    0x1400337ec
   14003390a:	int3   
   14003390b:	int3   
   14003390c:	mov    QWORD PTR [rsp+0x10],rdx
   140033911:	mov    QWORD PTR [rsp+0x18],r8
   140033916:	mov    QWORD PTR [rsp+0x20],r9
   14003391b:	push   rbp
   14003391c:	push   rbx
   14003391d:	push   rdi
   14003391e:	mov    rbp,rsp
   140033921:	sub    rsp,0x50
   140033925:	and    QWORD PTR [rbp-0x30],0x0
   14003392a:	mov    rdi,rdx
   14003392d:	xor    edx,edx
   14003392f:	mov    rbx,rcx
   140033932:	lea    rcx,[rbp-0x28]
   140033936:	lea    r8d,[rdx+0x28]
   14003393a:	call   0x140036dc0
   14003393f:	test   rdi,rdi
   140033942:	jne    0x140033959
   140033944:	call   0x140036858
   140033949:	mov    DWORD PTR [rax],0x16
   14003394f:	call   0x1400367f0
   140033954:	or     eax,0xffffffff
   140033957:	jmp    0x1400339a4
   140033959:	test   rbx,rbx
   14003395c:	je     0x140033944
   14003395e:	lea    r9,[rbp+0x30]
   140033962:	lea    rcx,[rbp-0x30]
   140033966:	xor    r8d,r8d
   140033969:	mov    rdx,rdi
   14003396c:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140033973:	mov    DWORD PTR [rbp-0x18],0x42
   14003397a:	mov    QWORD PTR [rbp-0x20],rbx
   14003397e:	mov    QWORD PTR [rbp-0x30],rbx
   140033982:	call   0x140038078
   140033987:	dec    DWORD PTR [rbp-0x28]
   14003398a:	mov    ebx,eax
   14003398c:	js     0x140033997
   14003398e:	mov    rcx,QWORD PTR [rbp-0x30]
   140033992:	mov    BYTE PTR [rcx],0x0
   140033995:	jmp    0x1400339a2
   140033997:	lea    rdx,[rbp-0x30]
   14003399b:	xor    ecx,ecx
   14003399d:	call   0x140037e50
   1400339a2:	mov    eax,ebx
   1400339a4:	add    rsp,0x50
   1400339a8:	pop    rdi
   1400339a9:	pop    rbx
   1400339aa:	pop    rbp
   1400339ab:	ret    
   1400339ac:	mov    r11,rsp
   1400339af:	mov    QWORD PTR [r11+0x18],r8
   1400339b3:	mov    QWORD PTR [r11+0x20],r9
   1400339b7:	sub    rsp,0x38
   1400339bb:	lea    rax,[r11+0x20]
   1400339bf:	xor    r9d,r9d
   1400339c2:	mov    QWORD PTR [r11-0x18],rax
   1400339c6:	call   0x140033ad4
   1400339cb:	add    rsp,0x38
   1400339cf:	ret    
   1400339d0:	test   r8,r8
   1400339d3:	je     0x1400339e1
   1400339d5:	cmp    BYTE PTR [rcx],dl
   1400339d7:	je     0x1400339e1
   1400339d9:	inc    rcx
   1400339dc:	dec    r8
   1400339df:	jne    0x1400339d5
   1400339e1:	neg    r8
   1400339e4:	sbb    rax,rax
   1400339e7:	and    rax,rcx
   1400339ea:	ret    
   1400339eb:	int3   
   1400339ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400339f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400339f6:	mov    QWORD PTR [rsp+0x18],rdi
   1400339fb:	push   rbp
   1400339fc:	push   r12
   1400339fe:	push   r13
   140033a00:	mov    rbp,rsp
   140033a03:	sub    rsp,0x50
   140033a07:	xor    ebx,ebx
   140033a09:	mov    r12,r8
   140033a0c:	mov    r13,rcx
   140033a0f:	mov    rsi,rdx
   140033a12:	lea    rcx,[rbp-0x28]
   140033a16:	lea    r8d,[rbx+0x28]
   140033a1a:	xor    edx,edx
   140033a1c:	mov    rdi,r9
   140033a1f:	mov    QWORD PTR [rbp-0x30],rbx
   140033a23:	call   0x140036dc0
   140033a28:	test   rdi,rdi
   140033a2b:	jne    0x140033a42
   140033a2d:	call   0x140036858
   140033a32:	mov    DWORD PTR [rax],0x16
   140033a38:	call   0x1400367f0
   140033a3d:	or     eax,0xffffffff
   140033a40:	jmp    0x140033ab8
   140033a42:	test   r12,r12
   140033a45:	je     0x140033a4c
   140033a47:	test   rsi,rsi
   140033a4a:	je     0x140033a2d
   140033a4c:	mov    r9,QWORD PTR [rbp+0x48]
   140033a50:	mov    r8,QWORD PTR [rbp+0x40]
   140033a54:	mov    ecx,0x7fffffff
   140033a59:	cmp    r12,rcx
   140033a5c:	mov    eax,r12d
   140033a5f:	mov    rdx,rdi
   140033a62:	cmova  eax,ecx
   140033a65:	lea    rcx,[rbp-0x30]
   140033a69:	mov    DWORD PTR [rbp-0x18],0x42
   140033a70:	mov    QWORD PTR [rbp-0x20],rsi
   140033a74:	mov    QWORD PTR [rbp-0x30],rsi
   140033a78:	mov    DWORD PTR [rbp-0x28],eax
   140033a7b:	call   r13
   140033a7e:	mov    edi,eax
   140033a80:	test   rsi,rsi
   140033a83:	je     0x140033ab8
   140033a85:	test   eax,eax
   140033a87:	js     0x140033aaa
   140033a89:	dec    DWORD PTR [rbp-0x28]
   140033a8c:	js     0x140033a96
   140033a8e:	mov    rax,QWORD PTR [rbp-0x30]
   140033a92:	mov    BYTE PTR [rax],bl
   140033a94:	jmp    0x140033aa6
   140033a96:	lea    rdx,[rbp-0x30]
   140033a9a:	xor    ecx,ecx
   140033a9c:	call   0x140037e50
   140033aa1:	cmp    eax,0xffffffff
   140033aa4:	je     0x140033aaa
   140033aa6:	mov    eax,edi
   140033aa8:	jmp    0x140033ab8
   140033aaa:	cmp    DWORD PTR [rbp-0x28],ebx
   140033aad:	mov    BYTE PTR [rsi+r12*1-0x1],bl
   140033ab2:	setge  bl
   140033ab5:	lea    eax,[rbx-0x2]
   140033ab8:	lea    r11,[rsp+0x50]
   140033abd:	mov    rbx,QWORD PTR [r11+0x20]
   140033ac1:	mov    rsi,QWORD PTR [r11+0x28]
   140033ac5:	mov    rdi,QWORD PTR [r11+0x30]
   140033ac9:	mov    rsp,r11
   140033acc:	pop    r13
   140033ace:	pop    r12
   140033ad0:	pop    rbp
   140033ad1:	ret    
   140033ad2:	int3   
   140033ad3:	int3   
   140033ad4:	rex push rbx
   140033ad6:	sub    rsp,0x30
   140033ada:	mov    rbx,rcx
   140033add:	test   r8,r8
   140033ae0:	je     0x140033b29
   140033ae2:	test   rcx,rcx
   140033ae5:	je     0x140033b29
   140033ae7:	test   rdx,rdx
   140033aea:	je     0x140033b29
   140033aec:	mov    rax,QWORD PTR [rsp+0x60]
   140033af1:	mov    QWORD PTR [rsp+0x28],rax
   140033af6:	mov    QWORD PTR [rsp+0x20],r9
   140033afb:	mov    r9,r8
   140033afe:	mov    r8,rdx
   140033b01:	mov    rdx,rcx
   140033b04:	lea    rcx,[rip+0x50b5]        # 0x140038bc0
   140033b0b:	call   0x1400339ec
   140033b10:	test   eax,eax
   140033b12:	jns    0x140033b17
   140033b14:	mov    BYTE PTR [rbx],0x0
   140033b17:	cmp    eax,0xfffffffe
   140033b1a:	jne    0x140033b3c
   140033b1c:	call   0x140036858
   140033b21:	mov    DWORD PTR [rax],0x22
   140033b27:	jmp    0x140033b34
   140033b29:	call   0x140036858
   140033b2e:	mov    DWORD PTR [rax],0x16
   140033b34:	call   0x1400367f0
   140033b39:	or     eax,0xffffffff
   140033b3c:	add    rsp,0x30
   140033b40:	pop    rbx
   140033b41:	ret    
   140033b42:	int3   
   140033b43:	int3   
   140033b44:	sub    rsp,0x38
   140033b48:	mov    QWORD PTR [rsp+0x20],r9
   140033b4d:	xor    r9d,r9d
   140033b50:	call   0x140033ad4
   140033b55:	add    rsp,0x38
   140033b59:	ret    
   140033b5a:	int3   
   140033b5b:	int3   
   140033b5c:	mov    QWORD PTR [rsp+0x10],rdi
   140033b61:	mov    QWORD PTR [rsp+0x20],r12
   140033b66:	push   rbp
   140033b67:	mov    rbp,rsp
   140033b6a:	sub    rsp,0x70
   140033b6e:	movsxd rdi,ecx
   140033b71:	lea    rcx,[rbp-0x20]
   140033b75:	call   0x14003370c
   140033b7a:	cmp    edi,0x100
   140033b80:	jae    0x140033bdf
   140033b82:	mov    rdx,QWORD PTR [rbp-0x20]
   140033b86:	cmp    DWORD PTR [rdx+0x10c],0x1
   140033b8d:	jle    0x140033ba5
   140033b8f:	lea    r8,[rbp-0x20]
   140033b93:	mov    edx,0x1
   140033b98:	mov    ecx,edi
   140033b9a:	call   0x140039a84
   140033b9f:	mov    rdx,QWORD PTR [rbp-0x20]
   140033ba3:	jmp    0x140033bb3
   140033ba5:	mov    rax,QWORD PTR [rdx+0x140]
   140033bac:	movzx  eax,WORD PTR [rax+rdi*2]
   140033bb0:	and    eax,0x1
   140033bb3:	test   eax,eax
   140033bb5:	je     0x140033bc7
   140033bb7:	mov    rax,QWORD PTR [rdx+0x148]
   140033bbe:	movzx  eax,BYTE PTR [rax+rdi*1]
   140033bc2:	jmp    0x140033c87
   140033bc7:	cmp    BYTE PTR [rbp-0x8],0x0
   140033bcb:	je     0x140033bd8
   140033bcd:	mov    rax,QWORD PTR [rbp-0x10]
   140033bd1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033bd8:	mov    eax,edi
   140033bda:	jmp    0x140033c98
   140033bdf:	mov    rax,QWORD PTR [rbp-0x20]
   140033be3:	cmp    DWORD PTR [rax+0x10c],0x1
   140033bea:	jle    0x140033c17
   140033bec:	mov    r12d,edi
   140033bef:	lea    rdx,[rbp-0x20]
   140033bf3:	sar    r12d,0x8
   140033bf7:	movzx  ecx,r12b
   140033bfb:	call   0x1400399f4
   140033c00:	test   eax,eax
   140033c02:	je     0x140033c17
   140033c04:	mov    BYTE PTR [rbp+0x10],r12b
   140033c08:	mov    BYTE PTR [rbp+0x11],dil
   140033c0c:	mov    BYTE PTR [rbp+0x12],0x0
   140033c10:	mov    edx,0x2
   140033c15:	jmp    0x140033c2f
   140033c17:	call   0x140036858
   140033c1c:	mov    edx,0x1
   140033c21:	mov    DWORD PTR [rax],0x2a
   140033c27:	mov    BYTE PTR [rbp+0x10],dil
   140033c2b:	mov    BYTE PTR [rbp+0x11],0x0
   140033c2f:	mov    rcx,QWORD PTR [rbp-0x20]
   140033c33:	mov    DWORD PTR [rsp+0x40],0x1
   140033c3b:	lea    r9,[rbp+0x10]
   140033c3f:	mov    eax,DWORD PTR [rcx+0x4]
   140033c42:	mov    r8d,0x100
   140033c48:	mov    DWORD PTR [rsp+0x38],eax
   140033c4c:	lea    rax,[rbp+0x20]
   140033c50:	mov    DWORD PTR [rsp+0x30],0x3
   140033c58:	mov    QWORD PTR [rsp+0x28],rax
   140033c5d:	mov    DWORD PTR [rsp+0x20],edx
   140033c61:	mov    edx,DWORD PTR [rcx+0x14]
   140033c64:	lea    rcx,[rbp-0x20]
   140033c68:	call   0x14003995c
   140033c6d:	test   eax,eax
   140033c6f:	je     0x140033bc7
   140033c75:	cmp    eax,0x1
   140033c78:	movzx  eax,BYTE PTR [rbp+0x20]
   140033c7c:	je     0x140033c87
   140033c7e:	movzx  ecx,BYTE PTR [rbp+0x21]
   140033c82:	shl    eax,0x8
   140033c85:	or     eax,ecx
   140033c87:	cmp    BYTE PTR [rbp-0x8],0x0
   140033c8b:	je     0x140033c98
   140033c8d:	mov    rcx,QWORD PTR [rbp-0x10]
   140033c91:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033c98:	lea    r11,[rsp+0x70]
   140033c9d:	mov    rdi,QWORD PTR [r11+0x18]
   140033ca1:	mov    r12,QWORD PTR [r11+0x28]
   140033ca5:	mov    rsp,r11
   140033ca8:	pop    rbp
   140033ca9:	ret    
   140033caa:	int3   
   140033cab:	int3   
   140033cac:	cmp    DWORD PTR [rip+0x55b4d],0x0        # 0x140089800
   140033cb3:	jne    0x140033cc3
   140033cb5:	lea    eax,[rcx-0x41]
   140033cb8:	cmp    eax,0x19
   140033cbb:	ja     0x140033cc0
   140033cbd:	add    ecx,0x20
   140033cc0:	mov    eax,ecx
   140033cc2:	ret    
   140033cc3:	xor    edx,edx
   140033cc5:	jmp    0x140033b5c
   140033cca:	int3   
   140033ccb:	int3   
   140033ccc:	mov    QWORD PTR [rsp+0x8],rbx
   140033cd1:	mov    QWORD PTR [rsp+0x10],rsi
   140033cd6:	push   rdi
   140033cd7:	sub    rsp,0x20
   140033cdb:	mov    rbx,r9
   140033cde:	mov    rsi,r8
   140033ce1:	mov    rdi,rdx
   140033ce4:	test   r9,r9
   140033ce7:	jne    0x140033ced
   140033ce9:	xor    eax,eax
   140033ceb:	jmp    0x140033d43
   140033ced:	test   rcx,rcx
   140033cf0:	jne    0x140033d07
   140033cf2:	call   0x140036858
   140033cf7:	mov    ebx,0x16
   140033cfc:	mov    DWORD PTR [rax],ebx
   140033cfe:	call   0x1400367f0
   140033d03:	mov    eax,ebx
   140033d05:	jmp    0x140033d43
   140033d07:	test   r8,r8
   140033d0a:	je     0x140033d1e
   140033d0c:	cmp    rdx,rbx
   140033d0f:	jb     0x140033d1e
   140033d11:	mov    r8,rbx
   140033d14:	mov    rdx,rsi
   140033d17:	call   0x140033260
   140033d1c:	jmp    0x140033ce9
   140033d1e:	mov    r8,rdx
   140033d21:	xor    edx,edx
   140033d23:	call   0x140036dc0
   140033d28:	test   rsi,rsi
   140033d2b:	je     0x140033cf2
   140033d2d:	cmp    rdi,rbx
   140033d30:	jae    0x140033d3e
   140033d32:	call   0x140036858
   140033d37:	mov    ebx,0x22
   140033d3c:	jmp    0x140033cfc
   140033d3e:	mov    eax,0x16
   140033d43:	mov    rbx,QWORD PTR [rsp+0x30]
   140033d48:	mov    rsi,QWORD PTR [rsp+0x38]
   140033d4d:	add    rsp,0x20
   140033d51:	pop    rdi
   140033d52:	ret    
   140033d53:	int3   
   140033d54:	mov    r9,rcx
   140033d57:	xor    r8d,r8d
   140033d5a:	mov    al,BYTE PTR [rcx]
   140033d5c:	inc    rcx
   140033d5f:	test   al,al
   140033d61:	jne    0x140033d5a
   140033d63:	dec    rcx
   140033d66:	cmp    rcx,r9
   140033d69:	je     0x140033d6f
   140033d6b:	cmp    BYTE PTR [rcx],dl
   140033d6d:	jne    0x140033d63
   140033d6f:	cmp    BYTE PTR [rcx],dl
   140033d71:	cmove  r8,rcx
   140033d75:	mov    rax,r8
   140033d78:	ret    
   140033d79:	int3   
   140033d7a:	int3   
   140033d7b:	int3   
   140033d7c:	rex push rbx
   140033d7e:	sub    rsp,0x20
   140033d82:	mov    rax,r8
   140033d85:	test   r9,r9
   140033d88:	je     0x140033dc5
   140033d8a:	test   rcx,rcx
   140033d8d:	jne    0x140033da4
   140033d8f:	call   0x140036858
   140033d94:	mov    ebx,0x16
   140033d99:	mov    DWORD PTR [rax],ebx
   140033d9b:	call   0x1400367f0
   140033da0:	mov    eax,ebx
   140033da2:	jmp    0x140033dc7
   140033da4:	test   rax,rax
   140033da7:	je     0x140033d8f
   140033da9:	cmp    rdx,r9
   140033dac:	jae    0x140033dba
   140033dae:	call   0x140036858
   140033db3:	mov    ebx,0x22
   140033db8:	jmp    0x140033d99
   140033dba:	mov    r8,r9
   140033dbd:	mov    rdx,rax
   140033dc0:	call   0x140033260
   140033dc5:	xor    eax,eax
   140033dc7:	add    rsp,0x20
   140033dcb:	pop    rbx
   140033dcc:	ret    
   140033dcd:	int3   
   140033dce:	int3   
   140033dcf:	int3   
   140033dd0:	sub    rsp,0x28
   140033dd4:	mov    rcx,QWORD PTR [rip+0x5605d]        # 0x140089e38
   140033ddb:	call   QWORD PTR [rip+0x345af]        # 0x140068390
   140033de1:	test   rax,rax
   140033de4:	je     0x140033de8
   140033de6:	call   rax
   140033de8:	mov    ecx,0x19
   140033ded:	call   0x140039bf4
   140033df2:	mov    edx,0x1
   140033df7:	xor    ecx,ecx
   140033df9:	call   0x140039bac
   140033dfe:	add    rsp,0x28
   140033e02:	jmp    0x140039b6c
   140033e07:	int3   
   140033e08:	xor    edx,edx
   140033e0a:	lea    r8d,[rdx+0xa]
   140033e0e:	jmp    0x14003422c
   140033e13:	int3   
   140033e14:	xor    r11d,r11d
   140033e17:	mov    r10,rdx
   140033e1a:	mov    r8,rcx
   140033e1d:	cmp    BYTE PTR [rdx],r11b
   140033e20:	jne    0x140033e26
   140033e22:	mov    rax,rcx
   140033e25:	ret    
   140033e26:	mov    al,BYTE PTR [rcx]
   140033e28:	test   al,al
   140033e2a:	je     0x140033e65
   140033e2c:	mov    r9,rcx
   140033e2f:	sub    r9,rdx
   140033e32:	mov    rdx,r10
   140033e35:	test   al,al
   140033e37:	je     0x140033e53
   140033e39:	cmp    BYTE PTR [rdx],r11b
   140033e3c:	je     0x140033e68
   140033e3e:	movsx  ecx,BYTE PTR [r9+rdx*1]
   140033e43:	movsx  eax,BYTE PTR [rdx]
   140033e46:	cmp    ecx,eax
   140033e48:	jne    0x140033e53
   140033e4a:	inc    rdx
   140033e4d:	cmp    BYTE PTR [r9+rdx*1],r11b
   140033e51:	jne    0x140033e39
   140033e53:	cmp    BYTE PTR [rdx],r11b
   140033e56:	je     0x140033e68
   140033e58:	inc    r8
   140033e5b:	inc    r9
   140033e5e:	mov    al,BYTE PTR [r8]
   140033e61:	test   al,al
   140033e63:	jne    0x140033e32
   140033e65:	xor    eax,eax
   140033e67:	ret    
   140033e68:	mov    rax,r8
   140033e6b:	ret    
   140033e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140033e71:	mov    QWORD PTR [rsp+0x10],rsi
   140033e76:	mov    QWORD PTR [rsp+0x18],rdi
   140033e7b:	push   rbp
   140033e7c:	push   r12
   140033e7e:	push   r13
   140033e80:	mov    rbp,rsp
   140033e83:	sub    rsp,0x40
   140033e87:	mov    rdi,rcx
   140033e8a:	mov    rsi,rdx
   140033e8d:	lea    rcx,[rbp-0x20]
   140033e91:	mov    rdx,r8
   140033e94:	call   0x14003370c
   140033e99:	mov    r12,QWORD PTR [rbp-0x18]
   140033e9d:	xor    r13d,r13d
   140033ea0:	cmp    DWORD PTR [r12+0x8],r13d
   140033ea5:	jne    0x140033ec5
   140033ea7:	mov    rdx,rsi
   140033eaa:	mov    rcx,rdi
   140033ead:	call   0x140033e14
   140033eb2:	cmp    BYTE PTR [rbp-0x8],r13b
   140033eb6:	je     0x140033eed
   140033eb8:	mov    rcx,QWORD PTR [rbp-0x10]
   140033ebc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033ec3:	jmp    0x140033eed
   140033ec5:	test   rsi,rsi
   140033ec8:	jne    0x140033f06
   140033eca:	call   0x140036858
   140033ecf:	mov    DWORD PTR [rax],0x16
   140033ed5:	call   0x1400367f0
   140033eda:	cmp    BYTE PTR [rbp-0x8],r13b
   140033ede:	je     0x140033eeb
   140033ee0:	mov    rax,QWORD PTR [rbp-0x10]
   140033ee4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033eeb:	xor    eax,eax
   140033eed:	mov    rbx,QWORD PTR [rsp+0x60]
   140033ef2:	mov    rsi,QWORD PTR [rsp+0x68]
   140033ef7:	mov    rdi,QWORD PTR [rsp+0x70]
   140033efc:	add    rsp,0x40
   140033f00:	pop    r13
   140033f02:	pop    r12
   140033f04:	pop    rbp
   140033f05:	ret    
   140033f06:	cmp    BYTE PTR [rsi],r13b
   140033f09:	jne    0x140033f21
   140033f0b:	cmp    BYTE PTR [rbp-0x8],r13b
   140033f0f:	je     0x140033f1c
   140033f11:	mov    rax,QWORD PTR [rbp-0x10]
   140033f15:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033f1c:	mov    rax,rdi
   140033f1f:	jmp    0x140033eed
   140033f21:	test   rdi,rdi
   140033f24:	je     0x140033eca
   140033f26:	mov    rcx,rsi
   140033f29:	call   0x140036550
   140033f2e:	mov    rbx,rdi
   140033f31:	mov    rcx,rdi
   140033f34:	sub    rbx,rax
   140033f37:	call   0x140036550
   140033f3c:	lea    r11,[rbx+rax*1]
   140033f40:	cmp    BYTE PTR [rdi],r13b
   140033f43:	je     0x140033eda
   140033f45:	mov    rdx,rdi
   140033f48:	sub    rdx,rsi
   140033f4b:	cmp    rdi,r11
   140033f4e:	ja     0x140033eda
   140033f50:	mov    rax,rsi
   140033f53:	cmp    BYTE PTR [rdi],r13b
   140033f56:	je     0x140033f6c
   140033f58:	mov    cl,BYTE PTR [rax]
   140033f5a:	test   cl,cl
   140033f5c:	je     0x140033f9d
   140033f5e:	cmp    BYTE PTR [rdx+rax*1],cl
   140033f61:	jne    0x140033f6c
   140033f63:	inc    rax
   140033f66:	cmp    BYTE PTR [rdx+rax*1],r13b
   140033f6a:	jne    0x140033f58
   140033f6c:	cmp    BYTE PTR [rax],r13b
   140033f6f:	je     0x140033f9d
   140033f71:	movzx  eax,BYTE PTR [rdi]
   140033f74:	inc    rdx
   140033f77:	inc    rdi
   140033f7a:	mov    cl,BYTE PTR [rax+r12*1+0x1d]
   140033f7f:	and    cl,0x4
   140033f82:	je     0x140033f93
   140033f84:	cmp    BYTE PTR [rdi],r13b
   140033f87:	je     0x140033eda
   140033f8d:	inc    rdi
   140033f90:	inc    rdx
   140033f93:	cmp    BYTE PTR [rdi],r13b
   140033f96:	jne    0x140033f4b
   140033f98:	jmp    0x140033eda
   140033f9d:	cmp    BYTE PTR [rbp-0x8],r13b
   140033fa1:	je     0x140033f1c
   140033fa7:	mov    rcx,QWORD PTR [rbp-0x10]
   140033fab:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033fb2:	jmp    0x140033f1c
   140033fb7:	int3   
   140033fb8:	xor    r8d,r8d
   140033fbb:	jmp    0x140033e6c
   140033fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140033fc5:	mov    QWORD PTR [rsp+0x18],rsi
   140033fca:	mov    QWORD PTR [rsp+0x20],rdi
   140033fcf:	push   rbp
   140033fd0:	push   r12
   140033fd2:	push   r13
   140033fd4:	push   r14
   140033fd6:	push   r15
   140033fd8:	mov    rbp,rsp
   140033fdb:	sub    rsp,0x40
   140033fdf:	mov    r15,rdx
   140033fe2:	mov    rdx,rcx
   140033fe5:	lea    rcx,[rbp-0x20]
   140033fe9:	mov    r13d,r9d
   140033fec:	mov    r14,r8
   140033fef:	call   0x14003370c
   140033ff4:	test   r14,r14
   140033ff7:	je     0x140033ffc
   140033ff9:	mov    QWORD PTR [r14],r15
   140033ffc:	test   r15,r15
   140033fff:	jne    0x14003401a
   140034001:	call   0x140036858
   140034006:	mov    DWORD PTR [rax],0x16
   14003400c:	call   0x1400367f0
   140034011:	cmp    BYTE PTR [rbp-0x8],0x0
   140034015:	jmp    0x1400341fe
   14003401a:	test   r13d,r13d
   14003401d:	je     0x14003402b
   14003401f:	cmp    r13d,0x2
   140034023:	jl     0x140034001
   140034025:	cmp    r13d,0x24
   140034029:	jg     0x140034001
   14003402b:	mov    r12b,BYTE PTR [r15]
   14003402e:	mov    r8,QWORD PTR [rbp-0x20]
   140034032:	xor    edi,edi
   140034034:	lea    rbx,[r15+0x1]
   140034038:	cmp    DWORD PTR [r8+0x10c],0x1
   140034040:	jle    0x14003405a
   140034042:	lea    r8,[rbp-0x20]
   140034046:	movzx  ecx,r12b
   14003404a:	mov    edx,0x8
   14003404f:	call   0x140039a84
   140034054:	mov    r8,QWORD PTR [rbp-0x20]
   140034058:	jmp    0x14003406c
   14003405a:	mov    rax,QWORD PTR [r8+0x140]
   140034061:	movzx  ecx,r12b
   140034065:	movzx  eax,WORD PTR [rax+rcx*2]
   140034069:	and    eax,0x8
   14003406c:	test   eax,eax
   14003406e:	je     0x140034078
   140034070:	mov    r12b,BYTE PTR [rbx]
   140034073:	inc    rbx
   140034076:	jmp    0x140034038
   140034078:	mov    esi,DWORD PTR [rbp+0x50]
   14003407b:	cmp    r12b,0x2d
   14003407f:	jne    0x140034086
   140034081:	or     esi,0x2
   140034084:	jmp    0x14003408c
   140034086:	cmp    r12b,0x2b
   14003408a:	jne    0x140034092
   14003408c:	mov    r12b,BYTE PTR [rbx]
   14003408f:	inc    rbx
   140034092:	test   r13d,r13d
   140034095:	js     0x1400341f2
   14003409b:	cmp    r13d,0x1
   14003409f:	je     0x1400341f2
   1400340a5:	cmp    r13d,0x24
   1400340a9:	jg     0x1400341f2
   1400340af:	test   r13d,r13d
   1400340b2:	jne    0x1400340dc
   1400340b4:	cmp    r12b,0x30
   1400340b8:	je     0x1400340c2
   1400340ba:	mov    r13d,0xa
   1400340c0:	jmp    0x1400340fa
   1400340c2:	cmp    BYTE PTR [rbx],0x78
   1400340c5:	je     0x1400340d4
   1400340c7:	cmp    BYTE PTR [rbx],0x58
   1400340ca:	je     0x1400340d4
   1400340cc:	mov    r13d,0x8
   1400340d2:	jmp    0x1400340fa
   1400340d4:	mov    r13d,0x10
   1400340da:	jmp    0x1400340e8
   1400340dc:	cmp    r13d,0x10
   1400340e0:	jne    0x1400340fa
   1400340e2:	cmp    r12b,0x30
   1400340e6:	jne    0x1400340fa
   1400340e8:	cmp    BYTE PTR [rbx],0x78
   1400340eb:	je     0x1400340f2
   1400340ed:	cmp    BYTE PTR [rbx],0x58
   1400340f0:	jne    0x1400340fa
   1400340f2:	mov    r12b,BYTE PTR [rbx+0x1]
   1400340f6:	add    rbx,0x2
   1400340fa:	mov    r10,QWORD PTR [r8+0x140]
   140034101:	xor    edx,edx
   140034103:	or     eax,0xffffffff
   140034106:	div    r13d
   140034109:	mov    r9d,eax
   14003410c:	movzx  ecx,r12b
   140034110:	movzx  r8d,WORD PTR [r10+rcx*2]
   140034115:	mov    ecx,r8d
   140034118:	and    ecx,0x4
   14003411b:	je     0x140034126
   14003411d:	movsx  ecx,r12b
   140034121:	sub    ecx,0x30
   140034124:	jmp    0x140034142
   140034126:	and    r8d,0x103
   14003412d:	je     0x14003415d
   14003412f:	lea    eax,[r12-0x61]
   140034134:	movsx  ecx,r12b
   140034138:	cmp    al,0x19
   14003413a:	ja     0x14003413f
   14003413c:	sub    ecx,0x20
   14003413f:	add    ecx,0xffffffc9
   140034142:	cmp    ecx,r13d
   140034145:	jae    0x14003415d
   140034147:	or     esi,0x8
   14003414a:	cmp    edi,r9d
   14003414d:	jb     0x140034171
   14003414f:	jne    0x140034155
   140034151:	cmp    ecx,edx
   140034153:	jbe    0x140034171
   140034155:	or     esi,0x4
   140034158:	test   r14,r14
   14003415b:	jne    0x140034177
   14003415d:	dec    rbx
   140034160:	test   sil,0x8
   140034164:	jne    0x14003417f
   140034166:	test   r14,r14
   140034169:	cmovne rbx,r15
   14003416d:	xor    edi,edi
   14003416f:	jmp    0x1400341cd
   140034171:	imul   edi,r13d
   140034175:	add    edi,ecx
   140034177:	mov    r12b,BYTE PTR [rbx]
   14003417a:	inc    rbx
   14003417d:	jmp    0x14003410c
   14003417f:	mov    r12d,0x7fffffff
   140034185:	test   sil,0x4
   140034189:	jne    0x1400341a9
   14003418b:	test   sil,0x1
   14003418f:	jne    0x1400341cd
   140034191:	mov    eax,esi
   140034193:	and    eax,0x2
   140034196:	je     0x1400341a0
   140034198:	cmp    edi,0x80000000
   14003419e:	ja     0x1400341a9
   1400341a0:	test   eax,eax
   1400341a2:	jne    0x1400341cd
   1400341a4:	cmp    edi,r12d
   1400341a7:	jbe    0x1400341cd
   1400341a9:	call   0x140036858
   1400341ae:	mov    DWORD PTR [rax],0x22
   1400341b4:	test   sil,0x1
   1400341b8:	je     0x1400341bf
   1400341ba:	or     edi,0xffffffff
   1400341bd:	jmp    0x1400341cd
   1400341bf:	mov    al,sil
   1400341c2:	and    al,0x2
   1400341c4:	neg    al
   1400341c6:	sbb    edi,edi
   1400341c8:	neg    edi
   1400341ca:	add    edi,r12d
   1400341cd:	test   r14,r14
   1400341d0:	je     0x1400341d5
   1400341d2:	mov    QWORD PTR [r14],rbx
   1400341d5:	test   sil,0x2
   1400341d9:	je     0x1400341dd
   1400341db:	neg    edi
   1400341dd:	cmp    BYTE PTR [rbp-0x8],0x0
   1400341e1:	je     0x1400341ee
   1400341e3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400341e7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400341ee:	mov    eax,edi
   1400341f0:	jmp    0x14003420d
   1400341f2:	test   r14,r14
   1400341f5:	je     0x1400341fa
   1400341f7:	mov    QWORD PTR [r14],r15
   1400341fa:	cmp    BYTE PTR [rbp-0x8],dil
   1400341fe:	je     0x14003420b
   140034200:	mov    rax,QWORD PTR [rbp-0x10]
   140034204:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003420b:	xor    eax,eax
   14003420d:	lea    r11,[rsp+0x40]
   140034212:	mov    rbx,QWORD PTR [r11+0x30]
   140034216:	mov    rsi,QWORD PTR [r11+0x40]
   14003421a:	mov    rdi,QWORD PTR [r11+0x48]
   14003421e:	mov    rsp,r11
   140034221:	pop    r15
   140034223:	pop    r14
   140034225:	pop    r13
   140034227:	pop    r12
   140034229:	pop    rbp
   14003422a:	ret    
   14003422b:	int3   
   14003422c:	sub    rsp,0x38
   140034230:	xor    eax,eax
   140034232:	mov    r9d,r8d
   140034235:	mov    r8,rdx
   140034238:	cmp    DWORD PTR [rip+0x555c2],eax        # 0x140089800
   14003423e:	mov    DWORD PTR [rsp+0x20],eax
   140034242:	mov    rdx,rcx
   140034245:	jne    0x140034250
   140034247:	lea    rcx,[rip+0x5194a]        # 0x140085b98
   14003424e:	jmp    0x140034252
   140034250:	xor    ecx,ecx
   140034252:	call   0x140033fc0
   140034257:	add    rsp,0x38
   14003425b:	ret    
   14003425c:	sub    rsp,0x38
   140034260:	cmp    DWORD PTR [rip+0x55599],0x0        # 0x140089800
   140034267:	mov    r9d,r8d
   14003426a:	mov    r8,rdx
   14003426d:	mov    rdx,rcx
   140034270:	mov    DWORD PTR [rsp+0x20],0x1
   140034278:	jne    0x140034283
   14003427a:	lea    rcx,[rip+0x51917]        # 0x140085b98
   140034281:	jmp    0x140034285
   140034283:	xor    ecx,ecx
   140034285:	call   0x140033fc0
   14003428a:	add    rsp,0x38
   14003428e:	ret    
   14003428f:	int3   
   140034290:	rex push rbx
   140034292:	sub    rsp,0x20
   140034296:	xor    r10d,r10d
   140034299:	mov    r9,rcx
   14003429c:	test   rcx,rcx
   14003429f:	je     0x1400342af
   1400342a1:	test   rdx,rdx
   1400342a4:	je     0x1400342af
   1400342a6:	test   r8,r8
   1400342a9:	jne    0x1400342c8
   1400342ab:	mov    WORD PTR [rcx],r10w
   1400342af:	call   0x140036858
   1400342b4:	mov    ebx,0x16
   1400342b9:	mov    DWORD PTR [rax],ebx
   1400342bb:	call   0x1400367f0
   1400342c0:	mov    eax,ebx
   1400342c2:	add    rsp,0x20
   1400342c6:	pop    rbx
   1400342c7:	ret    
   1400342c8:	sub    rcx,r8
   1400342cb:	movzx  eax,WORD PTR [r8]
   1400342cf:	mov    WORD PTR [rcx+r8*1],ax
   1400342d4:	add    r8,0x2
   1400342d8:	test   ax,ax
   1400342db:	je     0x1400342e2
   1400342dd:	dec    rdx
   1400342e0:	jne    0x1400342cb
   1400342e2:	test   rdx,rdx
   1400342e5:	jne    0x1400342f7
   1400342e7:	mov    WORD PTR [r9],r10w
   1400342eb:	call   0x140036858
   1400342f0:	mov    ebx,0x22
   1400342f5:	jmp    0x1400342b9
   1400342f7:	xor    eax,eax
   1400342f9:	jmp    0x1400342c2
   1400342fb:	int3   
   1400342fc:	rex push rbx
   1400342fe:	sub    rsp,0x20
   140034302:	mov    edx,0x8
   140034307:	lea    ecx,[rdx+0x18]
   14003430a:	call   0x140039f20
   14003430f:	mov    rcx,rax
   140034312:	mov    rbx,rax
   140034315:	call   QWORD PTR [rip+0x34145]        # 0x140068460
   14003431b:	mov    QWORD PTR [rip+0x57c96],rax        # 0x14008bfb8
   140034322:	mov    QWORD PTR [rip+0x57c87],rax        # 0x14008bfb0
   140034329:	test   rbx,rbx
   14003432c:	jne    0x140034333
   14003432e:	lea    eax,[rbx+0x18]
   140034331:	jmp    0x140034339
   140034333:	and    QWORD PTR [rbx],0x0
   140034337:	xor    eax,eax
   140034339:	add    rsp,0x20
   14003433d:	pop    rbx
   14003433e:	ret    
   14003433f:	int3   
   140034340:	mov    QWORD PTR [rsp+0x8],rbx
   140034345:	mov    QWORD PTR [rsp+0x10],rsi
   14003434a:	mov    QWORD PTR [rsp+0x18],rdi
   14003434f:	push   r12
   140034351:	push   r13
   140034353:	push   r14
   140034355:	sub    rsp,0x20
   140034359:	mov    r14,rcx
   14003435c:	call   0x140034e40
   140034361:	nop
   140034362:	mov    rcx,QWORD PTR [rip+0x57c4f]        # 0x14008bfb8
   140034369:	call   QWORD PTR [rip+0x34021]        # 0x140068390
   14003436f:	mov    r12,rax
   140034372:	mov    rcx,QWORD PTR [rip+0x57c37]        # 0x14008bfb0
   140034379:	call   QWORD PTR [rip+0x34011]        # 0x140068390
   14003437f:	mov    rbx,rax
   140034382:	cmp    rax,r12
   140034385:	jb     0x140034426
   14003438b:	mov    rdi,rax
   14003438e:	sub    rdi,r12
   140034391:	lea    r13,[rdi+0x8]
   140034395:	cmp    r13,0x8
   140034399:	jb     0x140034426
   14003439f:	mov    rcx,r12
   1400343a2:	call   0x140036eac
   1400343a7:	mov    rsi,rax
   1400343aa:	cmp    rax,r13
   1400343ad:	jae    0x140034404
   1400343af:	mov    edx,0x1000
   1400343b4:	cmp    rax,rdx
   1400343b7:	cmovb  rdx,rax
   1400343bb:	add    rdx,rax
   1400343be:	cmp    rdx,rax
   1400343c1:	jb     0x1400343d4
   1400343c3:	mov    rcx,r12
   1400343c6:	call   0x140039fa4
   1400343cb:	xor    ebx,ebx
   1400343cd:	test   rax,rax
   1400343d0:	jne    0x1400343ec
   1400343d2:	jmp    0x1400343d6
   1400343d4:	xor    ebx,ebx
   1400343d6:	lea    rdx,[rsi+0x20]
   1400343da:	cmp    rdx,rsi
   1400343dd:	jb     0x140034428
   1400343df:	mov    rcx,r12
   1400343e2:	call   0x140039fa4
   1400343e7:	test   rax,rax
   1400343ea:	je     0x140034428
   1400343ec:	sar    rdi,0x3
   1400343f0:	lea    rbx,[rax+rdi*8]
   1400343f4:	mov    rcx,rax
   1400343f7:	call   QWORD PTR [rip+0x34063]        # 0x140068460
   1400343fd:	mov    QWORD PTR [rip+0x57bb4],rax        # 0x14008bfb8
   140034404:	mov    rcx,r14
   140034407:	call   QWORD PTR [rip+0x34053]        # 0x140068460
   14003440d:	mov    QWORD PTR [rbx],rax
   140034410:	lea    rcx,[rbx+0x8]
   140034414:	call   QWORD PTR [rip+0x34046]        # 0x140068460
   14003441a:	mov    QWORD PTR [rip+0x57b8f],rax        # 0x14008bfb0
   140034421:	mov    rbx,r14
   140034424:	jmp    0x140034428
   140034426:	xor    ebx,ebx
   140034428:	call   0x140034e4c
   14003442d:	mov    rax,rbx
   140034430:	mov    rbx,QWORD PTR [rsp+0x40]
   140034435:	mov    rsi,QWORD PTR [rsp+0x48]
   14003443a:	mov    rdi,QWORD PTR [rsp+0x50]
   14003443f:	add    rsp,0x20
   140034443:	pop    r14
   140034445:	pop    r13
   140034447:	pop    r12
   140034449:	ret    
   14003444a:	int3   
   14003444b:	int3   
   14003444c:	sub    rsp,0x28
   140034450:	call   0x140034340
   140034455:	neg    rax
   140034458:	sbb    eax,eax
   14003445a:	neg    eax
   14003445c:	dec    eax
   14003445e:	add    rsp,0x28
   140034462:	ret    
   140034463:	int3   
   140034464:	mov    QWORD PTR [rsp+0x8],rbx
   140034469:	mov    QWORD PTR [rsp+0x10],rsi
   14003446e:	push   rdi
   14003446f:	sub    rsp,0x20
   140034473:	mov    rbx,rdx
   140034476:	mov    rdi,rcx
   140034479:	test   rcx,rcx
   14003447c:	jne    0x140034488
   14003447e:	mov    rcx,rdx
   140034481:	call   0x140034828
   140034486:	jmp    0x1400344f2
   140034488:	test   rdx,rdx
   14003448b:	jne    0x140034494
   14003448d:	call   0x140033594
   140034492:	jmp    0x1400344f0
   140034494:	cmp    rdx,0xffffffffffffffe0
   140034498:	ja     0x1400344dd
   14003449a:	mov    rcx,QWORD PTR [rip+0x5532f]        # 0x1400897d0
   1400344a1:	mov    eax,0x1
   1400344a6:	test   rbx,rbx
   1400344a9:	cmove  rbx,rax
   1400344ad:	mov    r8,rdi
   1400344b0:	xor    edx,edx
   1400344b2:	mov    r9,rbx
   1400344b5:	call   QWORD PTR [rip+0x33f9d]        # 0x140068458
   1400344bb:	mov    rsi,rax
   1400344be:	test   rax,rax
   1400344c1:	jne    0x140034532
   1400344c3:	cmp    DWORD PTR [rip+0x5597b],eax        # 0x140089e44
   1400344c9:	je     0x14003451b
   1400344cb:	mov    rcx,rbx
   1400344ce:	call   0x140036a18
   1400344d3:	test   eax,eax
   1400344d5:	je     0x140034502
   1400344d7:	cmp    rbx,0xffffffffffffffe0
   1400344db:	jbe    0x14003449a
   1400344dd:	mov    rcx,rbx
   1400344e0:	call   0x140036a18
   1400344e5:	call   0x140036858
   1400344ea:	mov    DWORD PTR [rax],0xc
   1400344f0:	xor    eax,eax
   1400344f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400344f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400344fc:	add    rsp,0x20
   140034500:	pop    rdi
   140034501:	ret    
   140034502:	call   0x140036858
   140034507:	mov    rbx,rax
   14003450a:	call   QWORD PTR [rip+0x33eb0]        # 0x1400683c0
   140034510:	mov    ecx,eax
   140034512:	call   0x140036810
   140034517:	mov    DWORD PTR [rbx],eax
   140034519:	jmp    0x1400344f0
   14003451b:	call   0x140036858
   140034520:	mov    rbx,rax
   140034523:	call   QWORD PTR [rip+0x33e97]        # 0x1400683c0
   140034529:	mov    ecx,eax
   14003452b:	call   0x140036810
   140034530:	mov    DWORD PTR [rbx],eax
   140034532:	mov    rax,rsi
   140034535:	jmp    0x1400344f2
   140034537:	int3   
   140034538:	rex push rbx
   14003453a:	sub    rsp,0x20
   14003453e:	xor    ebx,ebx
   140034540:	mov    r10,r8
   140034543:	test   r9,r9
   140034546:	jne    0x140034556
   140034548:	test   rcx,rcx
   14003454b:	jne    0x14003455b
   14003454d:	test   rdx,rdx
   140034550:	jne    0x140034570
   140034552:	xor    eax,eax
   140034554:	jmp    0x140034583
   140034556:	test   rcx,rcx
   140034559:	je     0x140034570
   14003455b:	test   rdx,rdx
   14003455e:	je     0x140034570
   140034560:	test   r9,r9
   140034563:	jne    0x140034569
   140034565:	mov    BYTE PTR [rcx],bl
   140034567:	jmp    0x140034552
   140034569:	test   r8,r8
   14003456c:	jne    0x140034589
   14003456e:	mov    BYTE PTR [rcx],bl
   140034570:	call   0x140036858
   140034575:	mov    ebx,0x16
   14003457a:	mov    DWORD PTR [rax],ebx
   14003457c:	call   0x1400367f0
   140034581:	mov    eax,ebx
   140034583:	add    rsp,0x20
   140034587:	pop    rbx
   140034588:	ret    
   140034589:	mov    r11,rcx
   14003458c:	mov    r8,rdx
   14003458f:	cmp    r9,0xffffffffffffffff
   140034593:	jne    0x1400345ad
   140034595:	sub    r11,r10
   140034598:	mov    al,BYTE PTR [r10]
   14003459b:	mov    BYTE PTR [r11+r10*1],al
   14003459f:	inc    r10
   1400345a2:	test   al,al
   1400345a4:	je     0x1400345d0
   1400345a6:	dec    r8
   1400345a9:	jne    0x140034598
   1400345ab:	jmp    0x1400345d0
   1400345ad:	sub    r10,rcx
   1400345b0:	mov    al,BYTE PTR [r10+r11*1]
   1400345b4:	mov    BYTE PTR [r11],al
   1400345b7:	inc    r11
   1400345ba:	test   al,al
   1400345bc:	je     0x1400345c8
   1400345be:	dec    r8
   1400345c1:	je     0x1400345c8
   1400345c3:	dec    r9
   1400345c6:	jne    0x1400345b0
   1400345c8:	test   r9,r9
   1400345cb:	jne    0x1400345d0
   1400345cd:	mov    BYTE PTR [r11],bl
   1400345d0:	test   r8,r8
   1400345d3:	jne    0x140034552
   1400345d9:	cmp    r9,0xffffffffffffffff
   1400345dd:	jne    0x1400345e9
   1400345df:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   1400345e3:	lea    eax,[r8+0x50]
   1400345e7:	jmp    0x140034583
   1400345e9:	mov    BYTE PTR [rcx],bl
   1400345eb:	call   0x140036858
   1400345f0:	mov    ebx,0x22
   1400345f5:	jmp    0x14003457a
   1400345f7:	int3   
   1400345f8:	xor    eax,eax
   1400345fa:	test   rdx,rdx
   1400345fd:	je     0x14003460f
   1400345ff:	cmp    BYTE PTR [rcx],0x0
   140034602:	je     0x14003460f
   140034604:	inc    rax
   140034607:	inc    rcx
   14003460a:	cmp    rax,rdx
   14003460d:	jb     0x1400345ff
   14003460f:	repz ret 
   140034611:	int3   
   140034612:	int3   
   140034613:	int3   
   140034614:	mov    QWORD PTR [rsp+0x10],rbx
   140034619:	mov    QWORD PTR [rsp+0x18],rsi
   14003461e:	push   rbp
   14003461f:	push   rdi
   140034620:	push   r12
   140034622:	push   r14
   140034624:	push   r15
   140034626:	mov    rbp,rsp
   140034629:	sub    rsp,0x70
   14003462d:	mov    rdi,rcx
   140034630:	mov    rsi,rdx
   140034633:	lea    rcx,[rbp-0x20]
   140034637:	mov    rdx,r8
   14003463a:	call   0x14003370c
   14003463f:	xor    r12d,r12d
   140034642:	test   rdi,rdi
   140034645:	jne    0x140034672
   140034647:	call   0x140036858
   14003464c:	mov    DWORD PTR [rax],0x16
   140034652:	call   0x1400367f0
   140034657:	cmp    BYTE PTR [rbp-0x8],r12b
   14003465b:	je     0x140034668
   14003465d:	mov    rax,QWORD PTR [rbp-0x10]
   140034661:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034668:	mov    eax,0x7fffffff
   14003466d:	jmp    0x140034806
   140034672:	test   rsi,rsi
   140034675:	je     0x140034647
   140034677:	mov    rdx,QWORD PTR [rbp-0x18]
   14003467b:	cmp    DWORD PTR [rdx+0x8],r12d
   14003467f:	jne    0x140034695
   140034681:	lea    r8,[rbp-0x20]
   140034685:	mov    rdx,rsi
   140034688:	mov    rcx,rdi
   14003468b:	call   0x1400337ec
   140034690:	jmp    0x1400347f5
   140034695:	mov    r14d,0x2
   14003469b:	mov    r15d,0x100
   1400346a1:	movzx  ebx,BYTE PTR [rdi]
   1400346a4:	inc    rdi
   1400346a7:	test   BYTE PTR [rbx+rdx*1+0x1d],0x4
   1400346ac:	je     0x14003471e
   1400346ae:	cmp    BYTE PTR [rdi],r12b
   1400346b1:	jne    0x1400346b9
   1400346b3:	movzx  ebx,r12w
   1400346b7:	jmp    0x140034730
   1400346b9:	mov    eax,DWORD PTR [rdx+0x4]
   1400346bc:	mov    edx,DWORD PTR [rdx+0xc]
   1400346bf:	mov    DWORD PTR [rsp+0x40],0x1
   1400346c7:	mov    DWORD PTR [rsp+0x38],eax
   1400346cb:	lea    rax,[rbp+0x30]
   1400346cf:	mov    DWORD PTR [rsp+0x30],r14d
   1400346d4:	mov    QWORD PTR [rsp+0x28],rax
   1400346d9:	lea    r9,[rdi-0x1]
   1400346dd:	lea    rcx,[rbp-0x20]
   1400346e1:	mov    r8d,0x200
   1400346e7:	mov    DWORD PTR [rsp+0x20],r14d
   1400346ec:	call   0x14003995c
   1400346f1:	cmp    eax,0x1
   1400346f4:	jne    0x1400346fc
   1400346f6:	movzx  ebx,BYTE PTR [rbp+0x30]
   1400346fa:	jmp    0x140034715
   1400346fc:	cmp    eax,r14d
   1400346ff:	jne    0x1400347de
   140034705:	movzx  ebx,BYTE PTR [rbp+0x30]
   140034709:	movzx  eax,BYTE PTR [rbp+0x31]
   14003470d:	imul   bx,r15w
   140034712:	add    bx,ax
   140034715:	mov    rdx,QWORD PTR [rbp-0x18]
   140034719:	inc    rdi
   14003471c:	jmp    0x140034730
   14003471e:	movzx  eax,bx
   140034721:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   140034726:	je     0x140034730
   140034728:	movzx  ebx,BYTE PTR [rax+rdx*1+0x11d]
   140034730:	movzx  ecx,BYTE PTR [rsi]
   140034733:	inc    rsi
   140034736:	test   BYTE PTR [rcx+rdx*1+0x1d],0x4
   14003473b:	je     0x1400347a9
   14003473d:	cmp    BYTE PTR [rsi],r12b
   140034740:	jne    0x140034748
   140034742:	movzx  ecx,r12w
   140034746:	jmp    0x1400347bb
   140034748:	mov    eax,DWORD PTR [rdx+0x4]
   14003474b:	mov    edx,DWORD PTR [rdx+0xc]
   14003474e:	mov    DWORD PTR [rsp+0x40],0x1
   140034756:	mov    DWORD PTR [rsp+0x38],eax
   14003475a:	lea    rax,[rbp+0x30]
   14003475e:	mov    DWORD PTR [rsp+0x30],r14d
   140034763:	mov    QWORD PTR [rsp+0x28],rax
   140034768:	lea    r9,[rsi-0x1]
   14003476c:	lea    rcx,[rbp-0x20]
   140034770:	mov    r8d,0x200
   140034776:	mov    DWORD PTR [rsp+0x20],r14d
   14003477b:	call   0x14003995c
   140034780:	cmp    eax,0x1
   140034783:	jne    0x14003478b
   140034785:	movzx  ecx,BYTE PTR [rbp+0x30]
   140034789:	jmp    0x1400347a0
   14003478b:	cmp    eax,r14d
   14003478e:	jne    0x1400347de
   140034790:	movzx  ecx,BYTE PTR [rbp+0x30]
   140034794:	movzx  eax,BYTE PTR [rbp+0x31]
   140034798:	imul   cx,r15w
   14003479d:	add    cx,ax
   1400347a0:	mov    rdx,QWORD PTR [rbp-0x18]
   1400347a4:	inc    rsi
   1400347a7:	jmp    0x1400347bb
   1400347a9:	movzx  eax,cx
   1400347ac:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   1400347b1:	je     0x1400347bb
   1400347b3:	movzx  ecx,BYTE PTR [rax+rdx*1+0x11d]
   1400347bb:	cmp    cx,bx
   1400347be:	jne    0x1400347ee
   1400347c0:	test   bx,bx
   1400347c3:	jne    0x1400346a1
   1400347c9:	cmp    BYTE PTR [rbp-0x8],r12b
   1400347cd:	je     0x1400347da
   1400347cf:	mov    rax,QWORD PTR [rbp-0x10]
   1400347d3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400347da:	xor    eax,eax
   1400347dc:	jmp    0x140034806
   1400347de:	call   0x140036858
   1400347e3:	mov    DWORD PTR [rax],0x16
   1400347e9:	jmp    0x140034657
   1400347ee:	sbb    eax,eax
   1400347f0:	and    eax,r14d
   1400347f3:	dec    eax
   1400347f5:	cmp    BYTE PTR [rbp-0x8],r12b
   1400347f9:	je     0x140034806
   1400347fb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400347ff:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034806:	lea    r11,[rsp+0x70]
   14003480b:	mov    rbx,QWORD PTR [r11+0x38]
   14003480f:	mov    rsi,QWORD PTR [r11+0x40]
   140034813:	mov    rsp,r11
   140034816:	pop    r15
   140034818:	pop    r14
   14003481a:	pop    r12
   14003481c:	pop    rdi
   14003481d:	pop    rbp
   14003481e:	ret    
   14003481f:	int3   
   140034820:	xor    r8d,r8d
   140034823:	jmp    0x140034614
   140034828:	mov    QWORD PTR [rsp+0x8],rbx
   14003482d:	mov    QWORD PTR [rsp+0x10],rsi
   140034832:	push   rdi
   140034833:	sub    rsp,0x20
   140034837:	mov    rbx,rcx
   14003483a:	cmp    rcx,0xffffffffffffffe0
   14003483e:	ja     0x1400348bc
   140034840:	mov    edi,0x1
   140034845:	test   rcx,rcx
   140034848:	cmovne rdi,rcx
   14003484c:	mov    rcx,QWORD PTR [rip+0x54f7d]        # 0x1400897d0
   140034853:	test   rcx,rcx
   140034856:	jne    0x140034878
   140034858:	call   0x140039e54
   14003485d:	mov    ecx,0x1e
   140034862:	call   0x140039bf4
   140034867:	mov    ecx,0xff
   14003486c:	call   0x140034e28
   140034871:	mov    rcx,QWORD PTR [rip+0x54f58]        # 0x1400897d0
   140034878:	mov    r8,rdi
   14003487b:	xor    edx,edx
   14003487d:	call   QWORD PTR [rip+0x3387d]        # 0x140068100
   140034883:	mov    rsi,rax
   140034886:	test   rax,rax
   140034889:	jne    0x1400348b7
   14003488b:	cmp    DWORD PTR [rip+0x555b3],eax        # 0x140089e44
   140034891:	je     0x1400348a1
   140034893:	mov    rcx,rbx
   140034896:	call   0x140036a18
   14003489b:	test   eax,eax
   14003489d:	je     0x1400348ac
   14003489f:	jmp    0x14003484c
   1400348a1:	call   0x140036858
   1400348a6:	mov    DWORD PTR [rax],0xc
   1400348ac:	call   0x140036858
   1400348b1:	mov    DWORD PTR [rax],0xc
   1400348b7:	mov    rax,rsi
   1400348ba:	jmp    0x1400348ce
   1400348bc:	call   0x140036a18
   1400348c1:	call   0x140036858
   1400348c6:	mov    DWORD PTR [rax],0xc
   1400348cc:	xor    eax,eax
   1400348ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400348d3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400348d8:	add    rsp,0x20
   1400348dc:	pop    rdi
   1400348dd:	ret    
   1400348de:	int3   
   1400348df:	int3   
   1400348e0:	mov    rax,rsp
   1400348e3:	mov    QWORD PTR [rax+0x8],rbx
   1400348e7:	mov    QWORD PTR [rax+0x10],rbp
   1400348eb:	mov    QWORD PTR [rax+0x18],rsi
   1400348ef:	push   rdi
   1400348f0:	sub    rsp,0x50
   1400348f4:	and    QWORD PTR [rax-0x38],0x0
   1400348f9:	mov    rbx,rdx
   1400348fc:	xor    edx,edx
   1400348fe:	mov    rsi,r8
   140034901:	mov    rbp,rcx
   140034904:	lea    r8d,[rdx+0x28]
   140034908:	lea    rcx,[rax-0x30]
   14003490c:	mov    rdi,r9
   14003490f:	call   0x140036dc0
   140034914:	test   rbx,rbx
   140034917:	jne    0x14003492e
   140034919:	call   0x140036858
   14003491e:	mov    DWORD PTR [rax],0x16
   140034924:	call   0x1400367f0
   140034929:	or     eax,0xffffffff
   14003492c:	jmp    0x14003495a
   14003492e:	and    QWORD PTR [rsp+0x30],0x0
   140034934:	and    QWORD PTR [rsp+0x20],0x0
   14003493a:	lea    rcx,[rsp+0x20]
   14003493f:	mov    r9,rdi
   140034942:	mov    r8,rsi
   140034945:	mov    rdx,rbx
   140034948:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   140034950:	mov    DWORD PTR [rsp+0x38],0x42
   140034958:	call   rbp
   14003495a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003495f:	mov    rbp,QWORD PTR [rsp+0x68]
   140034964:	mov    rsi,QWORD PTR [rsp+0x70]
   140034969:	add    rsp,0x50
   14003496d:	pop    rdi
   14003496e:	ret    
   14003496f:	int3   
   140034970:	mov    r9,rdx
   140034973:	mov    rdx,rcx
   140034976:	lea    rcx,[rip+0x36fb]        # 0x140038078
   14003497d:	xor    r8d,r8d
   140034980:	jmp    0x1400348e0
   140034985:	int3   
   140034986:	int3   
   140034987:	int3   
   140034988:	mov    QWORD PTR [rsp+0x8],rbx
   14003498d:	mov    QWORD PTR [rsp+0x10],rsi
   140034992:	mov    QWORD PTR [rsp+0x18],rdi
   140034997:	push   rbp
   140034998:	mov    rbp,rsp
   14003499b:	sub    rsp,0x40
   14003499f:	mov    rdi,rcx
   1400349a2:	mov    rbx,rdx
   1400349a5:	lea    rcx,[rbp-0x20]
   1400349a9:	mov    rdx,r8
   1400349ac:	call   0x14003370c
   1400349b1:	xor    esi,esi
   1400349b3:	test   rdi,rdi
   1400349b6:	jne    0x1400349e3
   1400349b8:	call   0x140036858
   1400349bd:	mov    DWORD PTR [rax],0x16
   1400349c3:	call   0x1400367f0
   1400349c8:	cmp    BYTE PTR [rbp-0x8],sil
   1400349cc:	je     0x1400349d9
   1400349ce:	mov    rax,QWORD PTR [rbp-0x10]
   1400349d2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400349d9:	mov    eax,0x7fffffff
   1400349de:	jmp    0x140034a7e
   1400349e3:	test   rbx,rbx
   1400349e6:	je     0x1400349b8
   1400349e8:	mov    r8,QWORD PTR [rbp-0x18]
   1400349ec:	cmp    DWORD PTR [r8+0x8],esi
   1400349f0:	jne    0x1400349ff
   1400349f2:	mov    rdx,rbx
   1400349f5:	mov    rcx,rdi
   1400349f8:	call   0x140036960
   1400349fd:	jmp    0x140034a6d
   1400349ff:	movzx  ecx,BYTE PTR [rdi]
   140034a02:	inc    rdi
   140034a05:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   140034a0b:	je     0x140034a23
   140034a0d:	cmp    BYTE PTR [rdi],sil
   140034a10:	jne    0x140034a16
   140034a12:	mov    ecx,esi
   140034a14:	jmp    0x140034a23
   140034a16:	movzx  eax,BYTE PTR [rdi]
   140034a19:	shl    cx,0x8
   140034a1d:	or     cx,ax
   140034a20:	inc    rdi
   140034a23:	movzx  edx,BYTE PTR [rbx]
   140034a26:	inc    rbx
   140034a29:	test   BYTE PTR [rdx+r8*1+0x1d],0x4
   140034a2f:	je     0x140034a47
   140034a31:	cmp    BYTE PTR [rbx],sil
   140034a34:	jne    0x140034a3a
   140034a36:	mov    edx,esi
   140034a38:	jmp    0x140034a47
   140034a3a:	movzx  eax,BYTE PTR [rbx]
   140034a3d:	shl    dx,0x8
   140034a41:	or     dx,ax
   140034a44:	inc    rbx
   140034a47:	cmp    dx,cx
   140034a4a:	jne    0x140034a66
   140034a4c:	test   cx,cx
   140034a4f:	jne    0x1400349ff
   140034a51:	cmp    BYTE PTR [rbp-0x8],sil
   140034a55:	je     0x140034a62
   140034a57:	mov    rax,QWORD PTR [rbp-0x10]
   140034a5b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034a62:	xor    eax,eax
   140034a64:	jmp    0x140034a7e
   140034a66:	sbb    eax,eax
   140034a68:	and    eax,0x2
   140034a6b:	dec    eax
   140034a6d:	cmp    BYTE PTR [rbp-0x8],sil
   140034a71:	je     0x140034a7e
   140034a73:	mov    rcx,QWORD PTR [rbp-0x10]
   140034a77:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034a7e:	mov    rbx,QWORD PTR [rsp+0x50]
   140034a83:	mov    rsi,QWORD PTR [rsp+0x58]
   140034a88:	mov    rdi,QWORD PTR [rsp+0x60]
   140034a8d:	add    rsp,0x40
   140034a91:	pop    rbp
   140034a92:	ret    
   140034a93:	int3   
   140034a94:	xor    r8d,r8d
   140034a97:	jmp    0x140034988
   140034a9c:	rex push rbx
   140034a9e:	sub    rsp,0x40
   140034aa2:	cmp    DWORD PTR [rip+0x54d57],0x0        # 0x140089800
   140034aa9:	movsxd rbx,ecx
   140034aac:	jne    0x140034abe
   140034aae:	mov    rax,QWORD PTR [rip+0x510bb]        # 0x140085b70
   140034ab5:	movzx  eax,WORD PTR [rax+rbx*2]
   140034ab9:	and    eax,0x4
   140034abc:	jmp    0x140034b14
   140034abe:	lea    rcx,[rsp+0x20]
   140034ac3:	xor    edx,edx
   140034ac5:	call   0x14003370c
   140034aca:	mov    rax,QWORD PTR [rsp+0x20]
   140034acf:	cmp    DWORD PTR [rax+0x10c],0x1
   140034ad6:	jle    0x140034aee
   140034ad8:	lea    r8,[rsp+0x20]
   140034add:	mov    edx,0x4
   140034ae2:	mov    ecx,ebx
   140034ae4:	call   0x140039a84
   140034ae9:	mov    r11d,eax
   140034aec:	jmp    0x140034afe
   140034aee:	mov    rax,QWORD PTR [rax+0x140]
   140034af5:	movzx  r11d,WORD PTR [rax+rbx*2]
   140034afa:	and    r11d,0x4
   140034afe:	cmp    BYTE PTR [rsp+0x38],0x0
   140034b03:	je     0x140034b11
   140034b05:	mov    rax,QWORD PTR [rsp+0x30]
   140034b0a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034b11:	mov    eax,r11d
   140034b14:	add    rsp,0x40
   140034b18:	pop    rbx
   140034b19:	ret    
   140034b1a:	int3   
   140034b1b:	int3   
   140034b1c:	rex push rbx
   140034b1e:	sub    rsp,0x40
   140034b22:	cmp    DWORD PTR [rip+0x54cd7],0x0        # 0x140089800
   140034b29:	movsxd rbx,ecx
   140034b2c:	jne    0x140034b40
   140034b2e:	mov    rax,QWORD PTR [rip+0x5103b]        # 0x140085b70
   140034b35:	movzx  eax,WORD PTR [rax+rbx*2]
   140034b39:	and    eax,0x107
   140034b3e:	jmp    0x140034b99
   140034b40:	lea    rcx,[rsp+0x20]
   140034b45:	xor    edx,edx
   140034b47:	call   0x14003370c
   140034b4c:	mov    rax,QWORD PTR [rsp+0x20]
   140034b51:	cmp    DWORD PTR [rax+0x10c],0x1
   140034b58:	jle    0x140034b70
   140034b5a:	lea    r8,[rsp+0x20]
   140034b5f:	mov    edx,0x107
   140034b64:	mov    ecx,ebx
   140034b66:	call   0x140039a84
   140034b6b:	mov    r11d,eax
   140034b6e:	jmp    0x140034b83
   140034b70:	mov    rax,QWORD PTR [rax+0x140]
   140034b77:	movzx  r11d,WORD PTR [rax+rbx*2]
   140034b7c:	and    r11d,0x107
   140034b83:	cmp    BYTE PTR [rsp+0x38],0x0
   140034b88:	je     0x140034b96
   140034b8a:	mov    rax,QWORD PTR [rsp+0x30]
   140034b8f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034b96:	mov    eax,r11d
   140034b99:	add    rsp,0x40
   140034b9d:	pop    rbx
   140034b9e:	ret    
   140034b9f:	int3   
   140034ba0:	rex push rbx
   140034ba2:	sub    rsp,0x20
   140034ba6:	mov    rbx,rcx
   140034ba9:	test   rcx,rcx
   140034bac:	jne    0x140034bc2
   140034bae:	call   0x140036858
   140034bb3:	mov    DWORD PTR [rax],0x16
   140034bb9:	call   0x1400367f0
   140034bbe:	xor    eax,eax
   140034bc0:	jmp    0x140034bdc
   140034bc2:	movzx  ecx,BYTE PTR [rcx]
   140034bc5:	call   0x14003a0a8
   140034bca:	inc    rbx
   140034bcd:	test   eax,eax
   140034bcf:	je     0x140034bd9
   140034bd1:	cmp    BYTE PTR [rbx],0x0
   140034bd4:	je     0x140034bd9
   140034bd6:	inc    rbx
   140034bd9:	mov    rax,rbx
   140034bdc:	add    rsp,0x20
   140034be0:	pop    rbx
   140034be1:	ret    
   140034be2:	int3   
   140034be3:	int3   
   140034be4:	mov    rax,rsp
   140034be7:	mov    QWORD PTR [rax+0x8],rbx
   140034beb:	mov    QWORD PTR [rax+0x10],rbp
   140034bef:	mov    QWORD PTR [rax+0x18],rsi
   140034bf3:	push   rdi
   140034bf4:	sub    rsp,0x40
   140034bf8:	mov    rsi,rcx
   140034bfb:	mov    rdi,rdx
   140034bfe:	lea    rcx,[rax-0x28]
   140034c02:	mov    rdx,r8
   140034c05:	call   0x14003370c
   140034c0a:	xor    ebp,ebp
   140034c0c:	test   rsi,rsi
   140034c0f:	jne    0x140034c3e
   140034c11:	call   0x140036858
   140034c16:	mov    DWORD PTR [rax],0x16
   140034c1c:	call   0x1400367f0
   140034c21:	cmp    BYTE PTR [rsp+0x38],bpl
   140034c26:	je     0x140034c34
   140034c28:	mov    rax,QWORD PTR [rsp+0x30]
   140034c2d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034c34:	mov    eax,0x7fffffff
   140034c39:	jmp    0x140034cd1
   140034c3e:	test   rdi,rdi
   140034c41:	je     0x140034c11
   140034c43:	mov    rax,QWORD PTR [rsp+0x20]
   140034c48:	cmp    DWORD PTR [rax+0x14],ebp
   140034c4b:	jne    0x140034c87
   140034c4d:	sub    rsi,rdi
   140034c50:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140034c54:	cmp    bx,0x41
   140034c58:	jb     0x140034c64
   140034c5a:	cmp    bx,0x5a
   140034c5e:	ja     0x140034c64
   140034c60:	add    bx,0x20
   140034c64:	movzx  eax,WORD PTR [rdi]
   140034c67:	cmp    ax,0x41
   140034c6b:	jb     0x140034c77
   140034c6d:	cmp    ax,0x5a
   140034c71:	ja     0x140034c77
   140034c73:	add    ax,0x20
   140034c77:	add    rdi,0x2
   140034c7b:	test   bx,bx
   140034c7e:	je     0x140034cb6
   140034c80:	cmp    bx,ax
   140034c83:	je     0x140034c50
   140034c85:	jmp    0x140034cb6
   140034c87:	movzx  ecx,WORD PTR [rsi]
   140034c8a:	lea    rdx,[rsp+0x20]
   140034c8f:	call   0x14003a0bc
   140034c94:	movzx  ecx,WORD PTR [rdi]
   140034c97:	lea    rdx,[rsp+0x20]
   140034c9c:	movzx  ebx,ax
   140034c9f:	add    rsi,0x2
   140034ca3:	call   0x14003a0bc
   140034ca8:	add    rdi,0x2
   140034cac:	test   bx,bx
   140034caf:	je     0x140034cb6
   140034cb1:	cmp    bx,ax
   140034cb4:	je     0x140034c87
   140034cb6:	movzx  ecx,ax
   140034cb9:	movzx  eax,bx
   140034cbc:	sub    eax,ecx
   140034cbe:	cmp    BYTE PTR [rsp+0x38],bpl
   140034cc3:	je     0x140034cd1
   140034cc5:	mov    rcx,QWORD PTR [rsp+0x30]
   140034cca:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034cd1:	mov    rbx,QWORD PTR [rsp+0x50]
   140034cd6:	mov    rbp,QWORD PTR [rsp+0x58]
   140034cdb:	mov    rsi,QWORD PTR [rsp+0x60]
   140034ce0:	add    rsp,0x40
   140034ce4:	pop    rdi
   140034ce5:	ret    
   140034ce6:	int3   
   140034ce7:	int3   
   140034ce8:	sub    rsp,0x28
   140034cec:	xor    r8d,r8d
   140034cef:	mov    r9,rcx
   140034cf2:	cmp    DWORD PTR [rip+0x54b07],r8d        # 0x140089800
   140034cf9:	jne    0x140034d65
   140034cfb:	test   rcx,rcx
   140034cfe:	jne    0x140034d1a
   140034d00:	call   0x140036858
   140034d05:	mov    DWORD PTR [rax],0x16
   140034d0b:	call   0x1400367f0
   140034d10:	mov    eax,0x7fffffff
   140034d15:	add    rsp,0x28
   140034d19:	ret    
   140034d1a:	test   rdx,rdx
   140034d1d:	je     0x140034d00
   140034d1f:	sub    r9,rdx
   140034d22:	movzx  eax,WORD PTR [r9+rdx*1]
   140034d27:	cmp    ax,0x41
   140034d2b:	jb     0x140034d37
   140034d2d:	cmp    ax,0x5a
   140034d31:	ja     0x140034d37
   140034d33:	add    ax,0x20
   140034d37:	movzx  ecx,WORD PTR [rdx]
   140034d3a:	cmp    cx,0x41
   140034d3e:	jb     0x140034d4a
   140034d40:	cmp    cx,0x5a
   140034d44:	ja     0x140034d4a
   140034d46:	add    cx,0x20
   140034d4a:	add    rdx,0x2
   140034d4e:	test   ax,ax
   140034d51:	je     0x140034d58
   140034d53:	cmp    ax,cx
   140034d56:	je     0x140034d22
   140034d58:	movzx  ecx,cx
   140034d5b:	movzx  eax,ax
   140034d5e:	sub    eax,ecx
   140034d60:	add    rsp,0x28
   140034d64:	ret    
   140034d65:	add    rsp,0x28
   140034d69:	jmp    0x140034be4
   140034d6e:	int3   
   140034d6f:	int3   
   140034d70:	rex push rdi
   140034d72:	sub    rsp,0x20
   140034d76:	mov    r10,r8
   140034d79:	xor    r8d,r8d
   140034d7c:	test   r9,r9
   140034d7f:	jne    0x140034d85
   140034d81:	xor    eax,eax
   140034d83:	jmp    0x140034de4
   140034d85:	test   rcx,rcx
   140034d88:	jne    0x140034d9f
   140034d8a:	call   0x140036858
   140034d8f:	mov    edi,0x16
   140034d94:	mov    DWORD PTR [rax],edi
   140034d96:	call   0x1400367f0
   140034d9b:	mov    eax,edi
   140034d9d:	jmp    0x140034de4
   140034d9f:	test   r10,r10
   140034da2:	je     0x140034db7
   140034da4:	cmp    rdx,r9
   140034da7:	jb     0x140034db7
   140034da9:	lea    r8,[r9+r9*1]
   140034dad:	mov    rdx,r10
   140034db0:	call   0x140033260
   140034db5:	jmp    0x140034d81
   140034db7:	test   rdx,rdx
   140034dba:	je     0x140034dc9
   140034dbc:	mov    rdi,rcx
   140034dbf:	movzx  eax,r8w
   140034dc3:	mov    rcx,rdx
   140034dc6:	rep stos WORD PTR es:[rdi],ax
   140034dc9:	test   r10,r10
   140034dcc:	je     0x140034d8a
   140034dce:	cmp    rdx,r9
   140034dd1:	jae    0x140034ddf
   140034dd3:	call   0x140036858
   140034dd8:	mov    edi,0x22
   140034ddd:	jmp    0x140034d94
   140034ddf:	mov    eax,0x16
   140034de4:	add    rsp,0x20
   140034de8:	pop    rdi
   140034de9:	ret    
   140034dea:	int3   
   140034deb:	int3   
   140034dec:	rex push rbx
   140034dee:	sub    rsp,0x20
   140034df2:	mov    ebx,ecx
   140034df4:	lea    rcx,[rip+0x33ac5]        # 0x1400688c0
   140034dfb:	call   QWORD PTR [rip+0x3364f]        # 0x140068450
   140034e01:	test   rax,rax
   140034e04:	je     0x140034e1f
   140034e06:	lea    rdx,[rip+0x33aa3]        # 0x1400688b0
   140034e0d:	mov    rcx,rax
   140034e10:	call   QWORD PTR [rip+0x33302]        # 0x140068118
   140034e16:	test   rax,rax
   140034e19:	je     0x140034e1f
   140034e1b:	mov    ecx,ebx
   140034e1d:	call   rax
   140034e1f:	add    rsp,0x20
   140034e23:	pop    rbx
   140034e24:	ret    
   140034e25:	int3   
   140034e26:	int3   
   140034e27:	int3   
   140034e28:	rex push rbx
   140034e2a:	sub    rsp,0x20
   140034e2e:	mov    ebx,ecx
   140034e30:	call   0x140034dec
   140034e35:	mov    ecx,ebx
   140034e37:	call   QWORD PTR [rip+0x3360b]        # 0x140068448
   140034e3d:	int3   
   140034e3e:	int3   
   140034e3f:	int3   
   140034e40:	mov    ecx,0x8
   140034e45:	jmp    0x14003a3a0
   140034e4a:	int3   
   140034e4b:	int3   
   140034e4c:	mov    ecx,0x8
   140034e51:	jmp    0x14003a2a0
   140034e56:	int3   
   140034e57:	int3   
   140034e58:	rex push rbx
   140034e5a:	sub    rsp,0x20
   140034e5e:	call   0x140037aac
   140034e63:	mov    rcx,rax
   140034e66:	mov    rbx,rax
   140034e69:	call   0x140036a10
   140034e6e:	mov    rcx,rbx
   140034e71:	call   0x1400365f8
   140034e76:	mov    rcx,rbx
   140034e79:	call   0x140039e98
   140034e7e:	mov    rcx,rbx
   140034e81:	call   0x14003a648
   140034e86:	mov    rcx,rbx
   140034e89:	call   0x14003a3e4
   140034e8e:	mov    rcx,rbx
   140034e91:	add    rsp,0x20
   140034e95:	pop    rbx
   140034e96:	jmp    0x140036b8c
   140034e9b:	int3   
   140034e9c:	cmp    rcx,rdx
   140034e9f:	jae    0x140034ece
   140034ea1:	mov    QWORD PTR [rsp+0x8],rbx
   140034ea6:	push   rdi
   140034ea7:	sub    rsp,0x20
   140034eab:	mov    rdi,rdx
   140034eae:	mov    rbx,rcx
   140034eb1:	mov    rax,QWORD PTR [rbx]
   140034eb4:	test   rax,rax
   140034eb7:	je     0x140034ebb
   140034eb9:	call   rax
   140034ebb:	add    rbx,0x8
   140034ebf:	cmp    rbx,rdi
   140034ec2:	jb     0x140034eb1
   140034ec4:	mov    rbx,QWORD PTR [rsp+0x30]
   140034ec9:	add    rsp,0x20
   140034ecd:	pop    rdi
   140034ece:	ret    
   140034ecf:	int3   
   140034ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140034ed5:	push   rdi
   140034ed6:	sub    rsp,0x20
   140034eda:	xor    eax,eax
   140034edc:	mov    rdi,rdx
   140034edf:	mov    rbx,rcx
   140034ee2:	cmp    rcx,rdx
   140034ee5:	jae    0x140034efe
   140034ee7:	test   eax,eax
   140034ee9:	jne    0x140034efe
   140034eeb:	mov    rcx,QWORD PTR [rbx]
   140034eee:	test   rcx,rcx
   140034ef1:	je     0x140034ef5
   140034ef3:	call   rcx
   140034ef5:	add    rbx,0x8
   140034ef9:	cmp    rbx,rdi
   140034efc:	jb     0x140034ee7
   140034efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140034f03:	add    rsp,0x20
   140034f07:	pop    rdi
   140034f08:	ret    
   140034f09:	int3   
   140034f0a:	int3   
   140034f0b:	int3   
   140034f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140034f11:	push   rdi
   140034f12:	sub    rsp,0x20
   140034f16:	cmp    QWORD PTR [rip+0x34b1a],0x0        # 0x140069a38
   140034f1e:	mov    ebx,ecx
   140034f20:	je     0x140034f3a
   140034f22:	lea    rcx,[rip+0x34b0f]        # 0x140069a38
   140034f29:	call   0x14003a780
   140034f2e:	test   eax,eax
   140034f30:	je     0x140034f3a
   140034f32:	mov    ecx,ebx
   140034f34:	call   QWORD PTR [rip+0x34afe]        # 0x140069a38
   140034f3a:	call   0x14003a6c0
   140034f3f:	lea    rdx,[rip+0x3381a]        # 0x140068760
   140034f46:	lea    rcx,[rip+0x337eb]        # 0x140068738
   140034f4d:	call   0x140034ed0
   140034f52:	test   eax,eax
   140034f54:	jne    0x140034fb0
   140034f56:	lea    rcx,[rip+0x572b]        # 0x14003a688
   140034f5d:	call   0x14003444c
   140034f62:	lea    rbx,[rip+0x3373f]        # 0x1400686a8
   140034f69:	lea    rdi,[rip+0x337c0]        # 0x140068730
   140034f70:	jmp    0x140034f80
   140034f72:	mov    rax,QWORD PTR [rbx]
   140034f75:	test   rax,rax
   140034f78:	je     0x140034f7c
   140034f7a:	call   rax
   140034f7c:	add    rbx,0x8
   140034f80:	cmp    rbx,rdi
   140034f83:	jb     0x140034f72
   140034f85:	cmp    QWORD PTR [rip+0x5703b],0x0        # 0x14008bfc8
   140034f8d:	je     0x140034fae
   140034f8f:	lea    rcx,[rip+0x57032]        # 0x14008bfc8
   140034f96:	call   0x14003a780
   140034f9b:	test   eax,eax
   140034f9d:	je     0x140034fae
   140034f9f:	xor    r8d,r8d
   140034fa2:	xor    ecx,ecx
   140034fa4:	lea    edx,[r8+0x2]
   140034fa8:	call   QWORD PTR [rip+0x5701a]        # 0x14008bfc8
   140034fae:	xor    eax,eax
   140034fb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140034fb5:	add    rsp,0x20
   140034fb9:	pop    rdi
   140034fba:	ret    
   140034fbb:	int3   
   140034fbc:	mov    QWORD PTR [rsp+0x8],rbx
   140034fc1:	mov    QWORD PTR [rsp+0x10],rsi
   140034fc6:	mov    DWORD PTR [rsp+0x18],r8d
   140034fcb:	push   rdi
   140034fcc:	push   r12
   140034fce:	push   r13
   140034fd0:	push   r14
   140034fd2:	push   r15
   140034fd4:	sub    rsp,0x40
   140034fd8:	mov    r12d,r8d
   140034fdb:	mov    ebx,edx
   140034fdd:	mov    r15d,ecx
   140034fe0:	mov    ecx,0x8
   140034fe5:	call   0x14003a3a0
   140034fea:	nop
   140034feb:	cmp    DWORD PTR [rip+0x54226],0x1        # 0x140089218
   140034ff2:	je     0x1400350f9
   140034ff8:	mov    DWORD PTR [rip+0x54212],0x1        # 0x140089214
   140035002:	mov    BYTE PTR [rip+0x54207],r12b        # 0x140089210
   140035009:	test   ebx,ebx
   14003500b:	jne    0x1400350e5
   140035011:	mov    rcx,QWORD PTR [rip+0x56fa0]        # 0x14008bfb8
   140035018:	call   QWORD PTR [rip+0x33372]        # 0x140068390
   14003501e:	mov    rsi,rax
   140035021:	mov    QWORD PTR [rsp+0x30],rax
   140035026:	test   rax,rax
   140035029:	je     0x1400350d2
   14003502f:	mov    rcx,QWORD PTR [rip+0x56f7a]        # 0x14008bfb0
   140035036:	call   QWORD PTR [rip+0x33354]        # 0x140068390
   14003503c:	mov    rdi,rax
   14003503f:	mov    QWORD PTR [rsp+0x20],rax
   140035044:	mov    r14,rsi
   140035047:	mov    QWORD PTR [rsp+0x28],rsi
   14003504c:	mov    r13,rax
   14003504f:	mov    QWORD PTR [rsp+0x38],rax
   140035054:	sub    rdi,0x8
   140035058:	mov    QWORD PTR [rsp+0x20],rdi
   14003505d:	cmp    rdi,rsi
   140035060:	jb     0x1400350d2
   140035062:	call   0x140037aac
   140035067:	cmp    QWORD PTR [rdi],rax
   14003506a:	jne    0x14003506e
   14003506c:	jmp    0x140035054
   14003506e:	cmp    rdi,rsi
   140035071:	jb     0x1400350d2
   140035073:	mov    rcx,QWORD PTR [rdi]
   140035076:	call   QWORD PTR [rip+0x33314]        # 0x140068390
   14003507c:	mov    rbx,rax
   14003507f:	call   0x140037aac
   140035084:	mov    QWORD PTR [rdi],rax
   140035087:	call   rbx
   140035089:	mov    rcx,QWORD PTR [rip+0x56f28]        # 0x14008bfb8
   140035090:	call   QWORD PTR [rip+0x332fa]        # 0x140068390
   140035096:	mov    rbx,rax
   140035099:	mov    rcx,QWORD PTR [rip+0x56f10]        # 0x14008bfb0
   1400350a0:	call   QWORD PTR [rip+0x332ea]        # 0x140068390
   1400350a6:	cmp    r14,rbx
   1400350a9:	jne    0x1400350b0
   1400350ab:	cmp    r13,rax
   1400350ae:	je     0x14003506c
   1400350b0:	mov    r14,rbx
   1400350b3:	mov    QWORD PTR [rsp+0x28],rbx
   1400350b8:	mov    rsi,rbx
   1400350bb:	mov    QWORD PTR [rsp+0x30],rbx
   1400350c0:	mov    r13,rax
   1400350c3:	mov    QWORD PTR [rsp+0x38],rax
   1400350c8:	mov    rdi,rax
   1400350cb:	mov    QWORD PTR [rsp+0x20],rax
   1400350d0:	jmp    0x14003506c
   1400350d2:	lea    rdx,[rip+0x336a7]        # 0x140068780
   1400350d9:	lea    rcx,[rip+0x33688]        # 0x140068768
   1400350e0:	call   0x140034e9c
   1400350e5:	lea    rdx,[rip+0x336a4]        # 0x140068790
   1400350ec:	lea    rcx,[rip+0x33695]        # 0x140068788
   1400350f3:	call   0x140034e9c
   1400350f8:	nop
   1400350f9:	test   r12d,r12d
   1400350fc:	je     0x14003510d
   1400350fe:	mov    ecx,0x8
   140035103:	call   0x14003a2a0
   140035108:	test   r12d,r12d
   14003510b:	jne    0x140035133
   14003510d:	mov    DWORD PTR [rip+0x54101],0x1        # 0x140089218
   140035117:	mov    ecx,0x8
   14003511c:	call   0x14003a2a0
   140035121:	mov    ecx,r15d
   140035124:	call   0x140034dec
   140035129:	mov    ecx,r15d
   14003512c:	call   QWORD PTR [rip+0x33316]        # 0x140068448
   140035132:	int3   
   140035133:	mov    rbx,QWORD PTR [rsp+0x70]
   140035138:	mov    rsi,QWORD PTR [rsp+0x78]
   14003513d:	add    rsp,0x40
   140035141:	pop    r15
   140035143:	pop    r14
   140035145:	pop    r13
   140035147:	pop    r12
   140035149:	pop    rdi
   14003514a:	ret    
   14003514b:	int3   
   14003514c:	xor    r8d,r8d
   14003514f:	xor    edx,edx
   140035151:	jmp    0x140034fbc
   140035156:	int3   
   140035157:	int3   
   140035158:	xor    r8d,r8d
   14003515b:	lea    edx,[r8+0x1]
   14003515f:	jmp    0x140034fbc
   140035164:	xor    edx,edx
   140035166:	xor    ecx,ecx
   140035168:	lea    r8d,[rdx+0x1]
   14003516c:	jmp    0x140034fbc
   140035171:	int3   
   140035172:	int3   
   140035173:	int3   
   140035174:	mov    edx,0x1
   140035179:	xor    ecx,ecx
   14003517b:	mov    r8d,edx
   14003517e:	jmp    0x140034fbc
   140035183:	int3   
   140035184:	rex push rbx
   140035186:	sub    rsp,0x20
   14003518a:	mov    ebx,ecx
   14003518c:	call   0x140039e54
   140035191:	mov    ecx,ebx
   140035193:	call   0x140039bf4
   140035198:	xor    r8d,r8d
   14003519b:	mov    ecx,0xff
   1400351a0:	lea    edx,[r8+0x1]
   1400351a4:	call   0x140034fbc
   1400351a9:	int3   
   1400351aa:	int3   
   1400351ab:	int3   
   1400351ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400351b1:	push   rdi
   1400351b2:	sub    rsp,0xa0
   1400351b9:	lea    rcx,[rsp+0x30]
   1400351be:	call   QWORD PTR [rip+0x33164]        # 0x140068328
   1400351c4:	mov    r11d,0x5a4d
   1400351ca:	lea    rdi,[rip+0xfffffffffffcae2f]        # 0x140000000
   1400351d1:	cmp    WORD PTR [rip+0xfffffffffffcae27],r11w        # 0x140000000
   1400351d9:	je     0x1400351df
   1400351db:	xor    ebx,ebx
   1400351dd:	jmp    0x140035210
   1400351df:	movsxd rax,DWORD PTR [rip+0xfffffffffffcae56]        # 0x14000003c
   1400351e6:	add    rax,rdi
   1400351e9:	cmp    DWORD PTR [rax],0x4550
   1400351ef:	jne    0x1400351db
   1400351f1:	mov    ecx,0x20b
   1400351f6:	cmp    WORD PTR [rax+0x18],cx
   1400351fa:	jne    0x1400351db
   1400351fc:	xor    ebx,ebx
   1400351fe:	cmp    DWORD PTR [rax+0x84],0xe
   140035205:	jbe    0x140035210
   140035207:	cmp    DWORD PTR [rax+0xf8],ebx
   14003520d:	setne  bl
   140035210:	mov    DWORD PTR [rsp+0xb0],ebx
   140035217:	call   0x140036a4c
   14003521c:	test   eax,eax
   14003521e:	jne    0x140035242
   140035220:	cmp    DWORD PTR [rip+0x54009],0x1        # 0x140089230
   140035227:	jne    0x14003522e
   140035229:	call   0x140039e54
   14003522e:	mov    ecx,0x1c
   140035233:	call   0x140039bf4
   140035238:	mov    ecx,0xff
   14003523d:	call   0x140034e28
   140035242:	call   0x140037dcc
   140035247:	test   eax,eax
   140035249:	jne    0x14003526d
   14003524b:	cmp    DWORD PTR [rip+0x53fde],0x1        # 0x140089230
   140035252:	jne    0x140035259
   140035254:	call   0x140039e54
   140035259:	mov    ecx,0x10
   14003525e:	call   0x140039bf4
   140035263:	mov    ecx,0xff
   140035268:	call   0x140034e28
   14003526d:	call   0x14003a650
   140035272:	nop
   140035273:	call   0x14003af58
   140035278:	test   eax,eax
   14003527a:	jns    0x140035286
   14003527c:	mov    ecx,0x1b
   140035281:	call   0x140035184
   140035286:	call   QWORD PTR [rip+0x331b4]        # 0x140068440
   14003528c:	mov    QWORD PTR [rip+0x56d0d],rax        # 0x14008bfa0
   140035293:	call   0x14003ae64
   140035298:	mov    QWORD PTR [rip+0x53f81],rax        # 0x140089220
   14003529f:	call   0x14003ad6c
   1400352a4:	test   eax,eax
   1400352a6:	jns    0x1400352b2
   1400352a8:	mov    ecx,0x8
   1400352ad:	call   0x140035184
   1400352b2:	call   0x14003aa6c
   1400352b7:	test   eax,eax
   1400352b9:	jns    0x1400352c5
   1400352bb:	mov    ecx,0x9
   1400352c0:	call   0x140035184
   1400352c5:	mov    ecx,0x1
   1400352ca:	call   0x140034f0c
   1400352cf:	test   eax,eax
   1400352d1:	je     0x1400352da
   1400352d3:	mov    ecx,eax
   1400352d5:	call   0x140035184
   1400352da:	call   0x14003a9f0
   1400352df:	test   BYTE PTR [rsp+0x6c],0x1
   1400352e4:	movzx  edx,WORD PTR [rsp+0x70]
   1400352e9:	mov    r9d,0xa
   1400352ef:	cmovne r9d,edx
   1400352f3:	mov    r8,rax
   1400352f6:	xor    edx,edx
   1400352f8:	mov    rcx,rdi
   1400352fb:	call   0x14001b950
   140035300:	mov    edi,eax
   140035302:	mov    DWORD PTR [rsp+0x20],eax
   140035306:	test   ebx,ebx
   140035308:	jne    0x140035311
   14003530a:	mov    ecx,eax
   14003530c:	call   0x14003514c
   140035311:	call   0x140035164
   140035316:	jmp    0x140035332
   140035318:	mov    edi,eax
   14003531a:	cmp    DWORD PTR [rsp+0xb0],0x0
   140035322:	jne    0x14003532c
   140035324:	mov    ecx,eax
   140035326:	call   0x140035158
   14003532b:	int3   
   14003532c:	call   0x140035174
   140035331:	nop
   140035332:	mov    eax,edi
   140035334:	mov    rbx,QWORD PTR [rsp+0xb8]
   14003533c:	add    rsp,0xa0
   140035343:	pop    rdi
   140035344:	ret    
   140035345:	int3   
   140035346:	int3   
   140035347:	int3   
   140035348:	sub    rsp,0x28
   14003534c:	call   0x14003b22c
   140035351:	add    rsp,0x28
   140035355:	jmp    0x1400351ac
   14003535a:	int3   
   14003535b:	int3   
   14003535c:	mov    QWORD PTR [rsp+0x8],rbx
   140035361:	mov    QWORD PTR [rsp+0x10],rsi
   140035366:	mov    QWORD PTR [rsp+0x18],rdi
   14003536b:	push   rbp
   14003536c:	mov    rbp,rsp
   14003536f:	sub    rsp,0x40
   140035373:	mov    rbx,rcx
   140035376:	mov    edi,edx
   140035378:	lea    rcx,[rbp-0x20]
   14003537c:	mov    rdx,r8
   14003537f:	call   0x14003370c
   140035384:	xor    esi,esi
   140035386:	test   rbx,rbx
   140035389:	jne    0x1400353c3
   14003538b:	call   0x140036858
   140035390:	mov    DWORD PTR [rax],0x16
   140035396:	call   0x1400367f0
   14003539b:	cmp    BYTE PTR [rbp-0x8],sil
   14003539f:	je     0x1400353ac
   1400353a1:	mov    rax,QWORD PTR [rbp-0x10]
   1400353a5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400353ac:	xor    eax,eax
   1400353ae:	mov    rbx,QWORD PTR [rsp+0x50]
   1400353b3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400353b8:	mov    rdi,QWORD PTR [rsp+0x60]
   1400353bd:	add    rsp,0x40
   1400353c1:	pop    rbp
   1400353c2:	ret    
   1400353c3:	mov    rdx,QWORD PTR [rbp-0x18]
   1400353c7:	cmp    DWORD PTR [rdx+0x8],esi
   1400353ca:	jne    0x1400353e9
   1400353cc:	mov    edx,edi
   1400353ce:	mov    rcx,rbx
   1400353d1:	call   0x14003b2e0
   1400353d6:	cmp    BYTE PTR [rbp-0x8],sil
   1400353da:	je     0x1400353ae
   1400353dc:	mov    rcx,QWORD PTR [rbp-0x10]
   1400353e0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400353e7:	jmp    0x1400353ae
   1400353e9:	movzx  ecx,BYTE PTR [rbx]
   1400353ec:	test   cx,cx
   1400353ef:	je     0x140035424
   1400353f1:	movzx  eax,cl
   1400353f4:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   1400353f9:	je     0x140035418
   1400353fb:	inc    rbx
   1400353fe:	cmp    BYTE PTR [rbx],sil
   140035401:	je     0x14003539b
   140035403:	movzx  eax,BYTE PTR [rbx]
   140035406:	movzx  ecx,cx
   140035409:	shl    ecx,0x8
   14003540c:	or     ecx,eax
   14003540e:	cmp    edi,ecx
   140035410:	jne    0x14003541f
   140035412:	lea    rax,[rbx-0x1]
   140035416:	jmp    0x1400353d6
   140035418:	movzx  eax,cx
   14003541b:	cmp    edi,eax
   14003541d:	je     0x140035424
   14003541f:	inc    rbx
   140035422:	jmp    0x1400353e9
   140035424:	movzx  eax,cx
   140035427:	cmp    edi,eax
   140035429:	jne    0x14003539b
   14003542f:	cmp    BYTE PTR [rbp-0x8],sil
   140035433:	je     0x140035440
   140035435:	mov    rax,QWORD PTR [rbp-0x10]
   140035439:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140035440:	mov    rax,rbx
   140035443:	jmp    0x1400353ae
   140035448:	xor    r8d,r8d
   14003544b:	jmp    0x14003535c
   140035450:	rex push rbx
   140035452:	sub    rsp,0x20
   140035456:	xor    ebx,ebx
   140035458:	mov    r10,r8
   14003545b:	test   r9,r9
   14003545e:	jne    0x14003546e
   140035460:	test   rcx,rcx
   140035463:	jne    0x140035473
   140035465:	test   rdx,rdx
   140035468:	jne    0x14003548a
   14003546a:	xor    eax,eax
   14003546c:	jmp    0x14003549d
   14003546e:	test   rcx,rcx
   140035471:	je     0x14003548a
   140035473:	test   rdx,rdx
   140035476:	je     0x14003548a
   140035478:	test   r9,r9
   14003547b:	jne    0x140035482
   14003547d:	mov    WORD PTR [rcx],bx
   140035480:	jmp    0x14003546a
   140035482:	test   r8,r8
   140035485:	jne    0x1400354a3
   140035487:	mov    WORD PTR [rcx],bx
   14003548a:	call   0x140036858
   14003548f:	mov    ebx,0x16
   140035494:	mov    DWORD PTR [rax],ebx
   140035496:	call   0x1400367f0
   14003549b:	mov    eax,ebx
   14003549d:	add    rsp,0x20
   1400354a1:	pop    rbx
   1400354a2:	ret    
   1400354a3:	mov    r11,rcx
   1400354a6:	mov    r8,rdx
   1400354a9:	cmp    r9,0xffffffffffffffff
   1400354ad:	jne    0x1400354cb
   1400354af:	sub    r11,r10
   1400354b2:	movzx  eax,WORD PTR [r10]
   1400354b6:	mov    WORD PTR [r11+r10*1],ax
   1400354bb:	add    r10,0x2
   1400354bf:	test   ax,ax
   1400354c2:	je     0x1400354f3
   1400354c4:	dec    r8
   1400354c7:	jne    0x1400354b2
   1400354c9:	jmp    0x1400354f3
   1400354cb:	sub    r10,rcx
   1400354ce:	movzx  eax,WORD PTR [r10+r11*1]
   1400354d3:	mov    WORD PTR [r11],ax
   1400354d7:	add    r11,0x2
   1400354db:	test   ax,ax
   1400354de:	je     0x1400354ea
   1400354e0:	dec    r8
   1400354e3:	je     0x1400354ea
   1400354e5:	dec    r9
   1400354e8:	jne    0x1400354ce
   1400354ea:	test   r9,r9
   1400354ed:	jne    0x1400354f3
   1400354ef:	mov    WORD PTR [r11],bx
   1400354f3:	test   r8,r8
   1400354f6:	jne    0x14003546a
   1400354fc:	cmp    r9,0xffffffffffffffff
   140035500:	jne    0x14003550d
   140035502:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140035507:	lea    eax,[r8+0x50]
   14003550b:	jmp    0x14003549d
   14003550d:	mov    WORD PTR [rcx],bx
   140035510:	call   0x140036858
   140035515:	mov    ebx,0x22
   14003551a:	jmp    0x140035494
   14003551f:	int3   
   140035520:	mov    rax,rsp
   140035523:	mov    QWORD PTR [rax+0x8],rbx
   140035527:	mov    QWORD PTR [rax+0x10],rsi
   14003552b:	mov    QWORD PTR [rax+0x18],rdi
   14003552f:	mov    QWORD PTR [rax+0x20],r12
   140035533:	push   rbp
   140035534:	mov    rbp,rsp
   140035537:	sub    rsp,0x40
   14003553b:	xor    r12d,r12d
   14003553e:	mov    rbx,r8
   140035541:	mov    rsi,rdx
   140035544:	mov    rdi,rcx
   140035547:	test   r8,r8
   14003554a:	jne    0x140035553
   14003554c:	xor    eax,eax
   14003554e:	jmp    0x140035666
   140035553:	lea    rcx,[rbp-0x20]
   140035557:	mov    rdx,r9
   14003555a:	call   0x14003370c
   14003555f:	mov    r11,QWORD PTR [rbp-0x18]
   140035563:	cmp    DWORD PTR [r11+0x8],r12d
   140035567:	jne    0x14003557c
   140035569:	mov    r8,rbx
   14003556c:	mov    rdx,rsi
   14003556f:	mov    rcx,rdi
   140035572:	call   0x14003b310
   140035577:	jmp    0x140035655
   14003557c:	test   rdi,rdi
   14003557f:	jne    0x1400355ac
   140035581:	call   0x140036858
   140035586:	mov    DWORD PTR [rax],0x16
   14003558c:	call   0x1400367f0
   140035591:	cmp    BYTE PTR [rbp-0x8],r12b
   140035595:	je     0x1400355a2
   140035597:	mov    rax,QWORD PTR [rbp-0x10]
   14003559b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400355a2:	mov    eax,0x7fffffff
   1400355a7:	jmp    0x140035666
   1400355ac:	test   rsi,rsi
   1400355af:	je     0x140035581
   1400355b1:	mov    r8b,0x4
   1400355b4:	movzx  ecx,BYTE PTR [rdi]
   1400355b7:	dec    rbx
   1400355ba:	inc    rdi
   1400355bd:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   1400355c2:	je     0x1400355f3
   1400355c4:	test   rbx,rbx
   1400355c7:	jne    0x1400355db
   1400355c9:	movzx  eax,BYTE PTR [rsi]
   1400355cc:	mov    ecx,r12d
   1400355cf:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   1400355d4:	jne    0x140035634
   1400355d6:	movzx  edx,ax
   1400355d9:	jmp    0x140035625
   1400355db:	cmp    BYTE PTR [rdi],r12b
   1400355de:	jne    0x1400355e6
   1400355e0:	movzx  ecx,r12w
   1400355e4:	jmp    0x1400355f3
   1400355e6:	movzx  eax,BYTE PTR [rdi]
   1400355e9:	shl    cx,0x8
   1400355ed:	or     cx,ax
   1400355f0:	inc    rdi
   1400355f3:	movzx  edx,BYTE PTR [rsi]
   1400355f6:	inc    rsi
   1400355f9:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   1400355fe:	je     0x140035625
   140035600:	test   rbx,rbx
   140035603:	jne    0x14003560a
   140035605:	mov    edx,r12d
   140035608:	jmp    0x140035625
   14003560a:	dec    rbx
   14003560d:	cmp    BYTE PTR [rsi],r12b
   140035610:	jne    0x140035618
   140035612:	movzx  edx,r12w
   140035616:	jmp    0x140035625
   140035618:	movzx  eax,BYTE PTR [rsi]
   14003561b:	shl    dx,0x8
   14003561f:	or     dx,ax
   140035622:	inc    rsi
   140035625:	cmp    dx,cx
   140035628:	jne    0x14003564e
   14003562a:	test   cx,cx
   14003562d:	je     0x140035634
   14003562f:	test   rbx,rbx
   140035632:	jne    0x1400355b4
   140035634:	cmp    BYTE PTR [rbp-0x8],r12b
   140035638:	je     0x14003554c
   14003563e:	mov    rax,QWORD PTR [rbp-0x10]
   140035642:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140035649:	jmp    0x14003554c
   14003564e:	sbb    eax,eax
   140035650:	and    eax,0x2
   140035653:	dec    eax
   140035655:	cmp    BYTE PTR [rbp-0x8],r12b
   140035659:	je     0x140035666
   14003565b:	mov    rcx,QWORD PTR [rbp-0x10]
   14003565f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140035666:	mov    rbx,QWORD PTR [rsp+0x50]
   14003566b:	mov    rsi,QWORD PTR [rsp+0x58]
   140035670:	mov    rdi,QWORD PTR [rsp+0x60]
   140035675:	mov    r12,QWORD PTR [rsp+0x68]
   14003567a:	add    rsp,0x40
   14003567e:	pop    rbp
   14003567f:	ret    
   140035680:	xor    r9d,r9d
   140035683:	jmp    0x140035520
   140035688:	mov    QWORD PTR [rsp+0x10],rbx
   14003568d:	mov    QWORD PTR [rsp+0x18],rsi
   140035692:	mov    QWORD PTR [rsp+0x20],rdi
   140035697:	push   r12
   140035699:	sub    rsp,0x30
   14003569d:	mov    QWORD PTR [rsp+0x20],rsp
   1400356a2:	mov    r12d,r8d
   1400356a5:	mov    rdi,rdx
   1400356a8:	mov    rsi,rcx
   1400356ab:	xor    eax,eax
   1400356ad:	test   rcx,rcx
   1400356b0:	setne  al
   1400356b3:	test   eax,eax
   1400356b5:	jne    0x1400356cb
   1400356b7:	call   0x140036858
   1400356bc:	mov    DWORD PTR [rax],0x16
   1400356c2:	call   0x1400367f0
   1400356c7:	xor    eax,eax
   1400356c9:	jmp    0x140035747
   1400356cb:	xor    eax,eax
   1400356cd:	test   rdx,rdx
   1400356d0:	setne  al
   1400356d3:	test   eax,eax
   1400356d5:	je     0x1400356b7
   1400356d7:	xor    eax,eax
   1400356d9:	cmp    BYTE PTR [rdx],al
   1400356db:	setne  al
   1400356de:	test   eax,eax
   1400356e0:	je     0x1400356b7
   1400356e2:	call   0x14003b894
   1400356e7:	mov    rbx,rax
   1400356ea:	mov    QWORD PTR [rsp+0x40],rax
   1400356ef:	test   rax,rax
   1400356f2:	jne    0x140035701
   1400356f4:	call   0x140036858
   1400356f9:	mov    DWORD PTR [rax],0x18
   1400356ff:	jmp    0x1400356c7
   140035701:	cmp    BYTE PTR [rsi],0x0
   140035704:	jne    0x140035728
   140035706:	call   0x140036858
   14003570b:	mov    DWORD PTR [rax],0x16
   140035711:	lea    rdx,[rip+0xc]        # 0x140035724
   140035718:	mov    rcx,QWORD PTR [rsp+0x20]
   14003571d:	call   0x14003ba00
   140035722:	nop
   140035723:	nop
   140035724:	xor    eax,eax
   140035726:	jmp    0x140035747
   140035728:	mov    r9,rax
   14003572b:	mov    r8d,r12d
   14003572e:	mov    rdx,rdi
   140035731:	mov    rcx,rsi
   140035734:	call   0x14003b5dc
   140035739:	mov    rdi,rax
   14003573c:	mov    rcx,rbx
   14003573f:	call   0x14003b570
   140035744:	mov    rax,rdi
   140035747:	mov    rbx,QWORD PTR [rsp+0x48]
   14003574c:	mov    rsi,QWORD PTR [rsp+0x50]
   140035751:	mov    rdi,QWORD PTR [rsp+0x58]
   140035756:	add    rsp,0x30
   14003575a:	pop    r12
   14003575c:	ret    
   14003575d:	int3   
   14003575e:	int3   
   14003575f:	int3   
   140035760:	rex push rbx
   140035762:	sub    rsp,0x20
   140035766:	mov    rax,r8
   140035769:	mov    r9,rdx
   14003576c:	mov    rbx,rcx
   14003576f:	test   rcx,rcx
   140035772:	jne    0x140035789
   140035774:	call   0x140036858
   140035779:	mov    ebx,0x16
   14003577e:	mov    DWORD PTR [rax],ebx
   140035780:	call   0x1400367f0
   140035785:	mov    eax,ebx
   140035787:	jmp    0x1400357ad
   140035789:	mov    r8d,0x80
   14003578f:	mov    rdx,rax
   140035792:	mov    rcx,r9
   140035795:	call   0x140035688
   14003579a:	mov    QWORD PTR [rbx],rax
   14003579d:	test   rax,rax
   1400357a0:	je     0x1400357a6
   1400357a2:	xor    eax,eax
   1400357a4:	jmp    0x1400357ad
   1400357a6:	call   0x140036858
   1400357ab:	mov    eax,DWORD PTR [rax]
   1400357ad:	add    rsp,0x20
   1400357b1:	pop    rbx
   1400357b2:	ret    
   1400357b3:	int3   
   1400357b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400357b9:	push   rbp
   1400357ba:	push   rsi
   1400357bb:	push   rdi
   1400357bc:	push   r12
   1400357be:	push   r13
   1400357c0:	push   r14
   1400357c2:	push   r15
   1400357c4:	sub    rsp,0x20
   1400357c8:	mov    r13,rcx
   1400357cb:	mov    r14,rcx
   1400357ce:	mov    QWORD PTR [rsp+0x68],rcx
   1400357d3:	mov    rcx,rdx
   1400357d6:	mov    r15,r9
   1400357d9:	mov    r12,r8
   1400357dc:	mov    rsi,rdx
   1400357df:	mov    QWORD PTR [rsp+0x70],rdx
   1400357e4:	test   r8,r8
   1400357e7:	je     0x140035803
   1400357e9:	test   r9,r9
   1400357ec:	je     0x140035803
   1400357ee:	test   r14,r14
   1400357f1:	jne    0x14003581a
   1400357f3:	call   0x140036858
   1400357f8:	mov    DWORD PTR [rax],0x16
   1400357fe:	call   0x1400367f0
   140035803:	xor    eax,eax
   140035805:	mov    rbx,QWORD PTR [rsp+0x78]
   14003580a:	add    rsp,0x20
   14003580e:	pop    r15
   140035810:	pop    r14
   140035812:	pop    r13
   140035814:	pop    r12
   140035816:	pop    rdi
   140035817:	pop    rsi
   140035818:	pop    rbp
   140035819:	ret    
   14003581a:	mov    rdi,QWORD PTR [rsp+0x80]
   140035822:	test   rdi,rdi
   140035825:	je     0x140035835
   140035827:	xor    edx,edx
   140035829:	or     rax,0xffffffffffffffff
   14003582d:	div    r12
   140035830:	cmp    r9,rax
   140035833:	jbe    0x14003585e
   140035835:	cmp    rsi,0xffffffffffffffff
   140035839:	je     0x14003584b
   14003583b:	mov    r8,rsi
   14003583e:	xor    edx,edx
   140035840:	mov    rcx,r13
   140035843:	call   0x140036dc0
   140035848:	mov    rcx,rsi
   14003584b:	test   rdi,rdi
   14003584e:	je     0x1400357f3
   140035850:	xor    edx,edx
   140035852:	or     rax,0xffffffffffffffff
   140035856:	div    r12
   140035859:	cmp    r15,rax
   14003585c:	ja     0x1400357f3
   14003585e:	mov    rbx,r12
   140035861:	imul   rbx,r15
   140035865:	test   DWORD PTR [rdi+0x18],0x10c
   14003586c:	mov    rbp,rbx
   14003586f:	je     0x140035877
   140035871:	mov    r9d,DWORD PTR [rdi+0x24]
   140035875:	jmp    0x14003587d
   140035877:	mov    r9d,0x1000
   14003587d:	mov    DWORD PTR [rsp+0x60],r9d
   140035882:	test   rbx,rbx
   140035885:	je     0x1400359e3
   14003588b:	test   DWORD PTR [rdi+0x18],0x10c
   140035892:	mov    r10d,0x7fffffff
   140035898:	je     0x1400358f8
   14003589a:	movsxd r14,DWORD PTR [rdi+0x8]
   14003589e:	test   r14d,r14d
   1400358a1:	je     0x1400358f3
   1400358a3:	js     0x1400359c9
   1400358a9:	cmp    rbp,r14
   1400358ac:	cmovb  r14d,ebp
   1400358b0:	mov    r9d,r14d
   1400358b3:	cmp    r9,rcx
   1400358b6:	ja     0x1400359a6
   1400358bc:	mov    r8,QWORD PTR [rdi]
   1400358bf:	mov    rdx,rcx
   1400358c2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400358c7:	call   0x140033ccc
   1400358cc:	sub    DWORD PTR [rdi+0x8],r14d
   1400358d0:	mov    eax,r14d
   1400358d3:	mov    r14,QWORD PTR [rsp+0x68]
   1400358d8:	sub    rbp,rax
   1400358db:	add    QWORD PTR [rdi],rax
   1400358de:	mov    rcx,QWORD PTR [rsp+0x70]
   1400358e3:	mov    r9d,DWORD PTR [rsp+0x60]
   1400358e8:	add    r14,rax
   1400358eb:	sub    rcx,rax
   1400358ee:	jmp    0x140035994
   1400358f3:	mov    r14,QWORD PTR [rsp+0x68]
   1400358f8:	mov    r8d,r9d
   1400358fb:	cmp    rbp,r8
   1400358fe:	jb     0x140035968
   140035900:	test   r9d,r9d
   140035903:	je     0x140035925
   140035905:	xor    edx,edx
   140035907:	cmp    rbp,r10
   14003590a:	jbe    0x140035917
   14003590c:	mov    eax,r10d
   14003590f:	mov    r14d,r10d
   140035912:	div    r9d
   140035915:	jmp    0x140035920
   140035917:	mov    rax,rbp
   14003591a:	mov    r14d,ebp
   14003591d:	div    r8
   140035920:	sub    r14d,edx
   140035923:	jmp    0x14003592f
   140035925:	mov    r14d,ebp
   140035928:	cmp    rbp,r10
   14003592b:	cmova  r14d,r10d
   14003592f:	mov    eax,r14d
   140035932:	cmp    rax,rcx
   140035935:	ja     0x1400359a6
   140035937:	mov    rcx,rdi
   14003593a:	call   0x14003c3f8
   14003593f:	mov    r8d,r14d
   140035942:	mov    r14,QWORD PTR [rsp+0x68]
   140035947:	mov    rdx,r14
   14003594a:	mov    ecx,eax
   14003594c:	call   0x14003c2dc
   140035951:	test   eax,eax
   140035953:	je     0x1400359dd
   140035959:	cmp    eax,0xffffffff
   14003595c:	je     0x1400359c9
   14003595e:	mov    eax,eax
   140035960:	sub    rbp,rax
   140035963:	jmp    0x1400358de
   140035968:	mov    rcx,rdi
   14003596b:	call   0x14003ba64
   140035970:	cmp    eax,0xffffffff
   140035973:	je     0x1400359cd
   140035975:	mov    rcx,QWORD PTR [rsp+0x70]
   14003597a:	test   rcx,rcx
   14003597d:	je     0x1400359a6
   14003597f:	mov    BYTE PTR [r14],al
   140035982:	mov    r9d,DWORD PTR [rdi+0x24]
   140035986:	dec    rbp
   140035989:	inc    r14
   14003598c:	dec    rcx
   14003598f:	mov    DWORD PTR [rsp+0x60],r9d
   140035994:	mov    QWORD PTR [rsp+0x68],r14
   140035999:	mov    QWORD PTR [rsp+0x70],rcx
   14003599e:	test   rbp,rbp
   1400359a1:	jmp    0x140035885
   1400359a6:	cmp    rsi,0xffffffffffffffff
   1400359aa:	je     0x1400359b9
   1400359ac:	mov    r8,rsi
   1400359af:	xor    edx,edx
   1400359b1:	mov    rcx,r13
   1400359b4:	call   0x140036dc0
   1400359b9:	call   0x140036858
   1400359be:	mov    DWORD PTR [rax],0x22
   1400359c4:	jmp    0x1400357fe
   1400359c9:	or     DWORD PTR [rdi+0x18],0x20
   1400359cd:	sub    rbx,rbp
   1400359d0:	xor    edx,edx
   1400359d2:	mov    rax,rbx
   1400359d5:	div    r12
   1400359d8:	jmp    0x140035805
   1400359dd:	or     DWORD PTR [rdi+0x18],0x10
   1400359e1:	jmp    0x1400359cd
   1400359e3:	mov    rax,r15
   1400359e6:	jmp    0x140035805
   1400359eb:	int3   
   1400359ec:	mov    rax,rsp
   1400359ef:	mov    QWORD PTR [rax+0x8],rbx
   1400359f3:	mov    QWORD PTR [rax+0x10],rsi
   1400359f7:	mov    QWORD PTR [rax+0x18],rdi
   1400359fb:	mov    QWORD PTR [rax+0x20],r12
   1400359ff:	push   r13
   140035a01:	sub    rsp,0x30
   140035a05:	mov    rsi,r9
   140035a08:	mov    r13,r8
   140035a0b:	mov    rdi,rdx
   140035a0e:	mov    r12,rcx
   140035a11:	test   r8,r8
   140035a14:	je     0x140035a76
   140035a16:	test   r9,r9
   140035a19:	je     0x140035a76
   140035a1b:	mov    rbx,QWORD PTR [rsp+0x60]
   140035a20:	test   rbx,rbx
   140035a23:	jne    0x140035a47
   140035a25:	cmp    rdx,0xffffffffffffffff
   140035a29:	je     0x140035a35
   140035a2b:	mov    r8,rdx
   140035a2e:	xor    edx,edx
   140035a30:	call   0x140036dc0
   140035a35:	call   0x140036858
   140035a3a:	mov    DWORD PTR [rax],0x16
   140035a40:	call   0x1400367f0
   140035a45:	jmp    0x140035a76
   140035a47:	mov    rcx,rbx
   140035a4a:	call   0x14003b4d8
   140035a4f:	nop
   140035a50:	mov    QWORD PTR [rsp+0x20],rbx
   140035a55:	mov    r9,rsi
   140035a58:	mov    r8,r13
   140035a5b:	mov    rdx,rdi
   140035a5e:	mov    rcx,r12
   140035a61:	call   0x1400357b4
   140035a66:	mov    rdi,rax
   140035a69:	mov    rcx,rbx
   140035a6c:	call   0x14003b570
   140035a71:	mov    rax,rdi
   140035a74:	jmp    0x140035a78
   140035a76:	xor    eax,eax
   140035a78:	mov    rbx,QWORD PTR [rsp+0x40]
   140035a7d:	mov    rsi,QWORD PTR [rsp+0x48]
   140035a82:	mov    rdi,QWORD PTR [rsp+0x50]
   140035a87:	mov    r12,QWORD PTR [rsp+0x58]
   140035a8c:	add    rsp,0x30
   140035a90:	pop    r13
   140035a92:	ret    
   140035a93:	int3   
   140035a94:	sub    rsp,0x38
   140035a98:	mov    QWORD PTR [rsp+0x20],r9
   140035a9d:	mov    r9,r8
   140035aa0:	mov    r8,rdx
   140035aa3:	or     rdx,0xffffffffffffffff
   140035aa7:	call   0x1400359ec
   140035aac:	add    rsp,0x38
   140035ab0:	ret    
   140035ab1:	int3   
   140035ab2:	int3   
   140035ab3:	int3   
   140035ab4:	mov    rax,rsp
   140035ab7:	mov    QWORD PTR [rax+0x8],rbx
   140035abb:	mov    QWORD PTR [rax+0x10],rbp
   140035abf:	mov    QWORD PTR [rax+0x18],rsi
   140035ac3:	mov    QWORD PTR [rax+0x20],rdi
   140035ac7:	push   r12
   140035ac9:	push   r13
   140035acb:	push   r14
   140035acd:	sub    rsp,0x20
   140035ad1:	mov    rbx,rcx
   140035ad4:	test   rcx,rcx
   140035ad7:	jne    0x140035af1
   140035ad9:	call   0x140036858
   140035ade:	mov    DWORD PTR [rax],0x16
   140035ae4:	call   0x1400367f0
   140035ae9:	or     eax,0xffffffff
   140035aec:	jmp    0x140035c4b
   140035af1:	call   0x14003c3f8
   140035af6:	cmp    DWORD PTR [rbx+0x8],0x0
   140035afa:	movsxd r12,eax
   140035afd:	jge    0x140035b03
   140035aff:	and    DWORD PTR [rbx+0x8],0x0
   140035b03:	xor    edx,edx
   140035b05:	mov    ecx,r12d
   140035b08:	lea    r8d,[rdx+0x1]
   140035b0c:	call   0x14003c4b8
   140035b11:	mov    esi,eax
   140035b13:	test   eax,eax
   140035b15:	js     0x140035ae9
   140035b17:	mov    edx,DWORD PTR [rbx+0x18]
   140035b1a:	test   edx,0x108
   140035b20:	jne    0x140035b2c
   140035b22:	sub    esi,DWORD PTR [rbx+0x8]
   140035b25:	mov    eax,esi
   140035b27:	jmp    0x140035c4b
   140035b2c:	mov    edi,DWORD PTR [rbx]
   140035b2e:	lea    r8,[rip+0x5626b]        # 0x14008bda0
   140035b35:	mov    ebp,edi
   140035b37:	sub    ebp,DWORD PTR [rbx+0x10]
   140035b3a:	test   dl,0x3
   140035b3d:	je     0x140035b7b
   140035b3f:	mov    rcx,r12
   140035b42:	mov    rax,r12
   140035b45:	sar    rax,0x5
   140035b49:	and    ecx,0x1f
   140035b4c:	mov    rax,QWORD PTR [r8+rax*8]
   140035b50:	imul   rcx,rcx,0x58
   140035b54:	test   BYTE PTR [rax+rcx*1+0x8],0x80
   140035b59:	je     0x140035b70
   140035b5b:	mov    rax,QWORD PTR [rbx+0x10]
   140035b5f:	jmp    0x140035b6b
   140035b61:	cmp    BYTE PTR [rax],0xa
   140035b64:	jne    0x140035b68
   140035b66:	inc    ebp
   140035b68:	inc    rax
   140035b6b:	cmp    rax,QWORD PTR [rbx]
   140035b6e:	jb     0x140035b61
   140035b70:	test   esi,esi
   140035b72:	jne    0x140035b8f
   140035b74:	mov    eax,ebp
   140035b76:	jmp    0x140035c4b
   140035b7b:	test   dl,dl
   140035b7d:	js     0x140035b70
   140035b7f:	call   0x140036858
   140035b84:	mov    DWORD PTR [rax],0x16
   140035b8a:	jmp    0x140035ae9
   140035b8f:	test   dl,0x1
   140035b92:	je     0x140035c47
   140035b98:	cmp    DWORD PTR [rbx+0x8],0x0
   140035b9c:	jne    0x140035ba5
   140035b9e:	xor    ebp,ebp
   140035ba0:	jmp    0x140035c47
   140035ba5:	sub    edi,DWORD PTR [rbx+0x10]
   140035ba8:	mov    r13,r12
   140035bab:	mov    r14,r12
   140035bae:	add    edi,DWORD PTR [rbx+0x8]
   140035bb1:	sar    r14,0x5
   140035bb5:	and    r13d,0x1f
   140035bb9:	mov    rax,QWORD PTR [r8+r14*8]
   140035bbd:	imul   r13,r13,0x58
   140035bc1:	test   BYTE PTR [r13+rax*1+0x8],0x80
   140035bc7:	je     0x140035c45
   140035bc9:	xor    edx,edx
   140035bcb:	mov    ecx,r12d
   140035bce:	lea    r8d,[rdx+0x2]
   140035bd2:	call   0x14003c4b8
   140035bd7:	cmp    eax,esi
   140035bd9:	jne    0x140035bfe
   140035bdb:	mov    rax,QWORD PTR [rbx+0x10]
   140035bdf:	mov    ecx,edi
   140035be1:	add    rcx,rax
   140035be4:	jmp    0x140035bf0
   140035be6:	cmp    BYTE PTR [rax],0xa
   140035be9:	jne    0x140035bed
   140035beb:	inc    edi
   140035bed:	inc    rax
   140035bf0:	cmp    rax,rcx
   140035bf3:	jb     0x140035be6
   140035bf5:	test   DWORD PTR [rbx+0x18],0x2000
   140035bfc:	jmp    0x140035c41
   140035bfe:	xor    r8d,r8d
   140035c01:	mov    edx,esi
   140035c03:	mov    ecx,r12d
   140035c06:	call   0x14003c4b8
   140035c0b:	test   eax,eax
   140035c0d:	js     0x140035ae9
   140035c13:	mov    eax,0x200
   140035c18:	cmp    edi,eax
   140035c1a:	ja     0x140035c2d
   140035c1c:	test   BYTE PTR [rbx+0x18],0x8
   140035c20:	je     0x140035c2d
   140035c22:	test   DWORD PTR [rbx+0x18],0x400
   140035c29:	mov    edi,eax
   140035c2b:	je     0x140035c30
   140035c2d:	mov    edi,DWORD PTR [rbx+0x24]
   140035c30:	lea    rax,[rip+0x56169]        # 0x14008bda0
   140035c37:	mov    rax,QWORD PTR [rax+r14*8]
   140035c3b:	test   BYTE PTR [r13+rax*1+0x8],0x4
   140035c41:	je     0x140035c45
   140035c43:	inc    edi
   140035c45:	sub    esi,edi
   140035c47:	lea    eax,[rbp+rsi*1+0x0]
   140035c4b:	mov    rbx,QWORD PTR [rsp+0x40]
   140035c50:	mov    rbp,QWORD PTR [rsp+0x48]
   140035c55:	mov    rsi,QWORD PTR [rsp+0x50]
   140035c5a:	mov    rdi,QWORD PTR [rsp+0x58]
   140035c5f:	add    rsp,0x20
   140035c63:	pop    r14
   140035c65:	pop    r13
   140035c67:	pop    r12
   140035c69:	ret    
   140035c6a:	int3   
   140035c6b:	int3   
   140035c6c:	mov    QWORD PTR [rsp+0x10],rbx
   140035c71:	mov    QWORD PTR [rsp+0x8],rcx
   140035c76:	push   rdi
   140035c77:	sub    rsp,0x20
   140035c7b:	mov    rbx,rcx
   140035c7e:	xor    eax,eax
   140035c80:	test   rcx,rcx
   140035c83:	setne  al
   140035c86:	test   eax,eax
   140035c88:	jne    0x140035c9f
   140035c8a:	call   0x140036858
   140035c8f:	mov    DWORD PTR [rax],0x16
   140035c95:	call   0x1400367f0
   140035c9a:	or     eax,0xffffffff
   140035c9d:	jmp    0x140035cb9
   140035c9f:	call   0x14003b4d8
   140035ca4:	nop
   140035ca5:	mov    rcx,rbx
   140035ca8:	call   0x140035ab4
   140035cad:	mov    edi,eax
   140035caf:	mov    rcx,rbx
   140035cb2:	call   0x14003b570
   140035cb7:	mov    eax,edi
   140035cb9:	mov    rbx,QWORD PTR [rsp+0x38]
   140035cbe:	add    rsp,0x20
   140035cc2:	pop    rdi
   140035cc3:	ret    
   140035cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140035cc9:	mov    QWORD PTR [rsp+0x10],rbp
   140035cce:	mov    QWORD PTR [rsp+0x18],rsi
   140035cd3:	push   rdi
   140035cd4:	sub    rsp,0x20
   140035cd8:	mov    eax,DWORD PTR [rcx+0x18]
   140035cdb:	mov    edi,r8d
   140035cde:	mov    esi,edx
   140035ce0:	mov    rbx,rcx
   140035ce3:	test   al,0x83
   140035ce5:	jne    0x140035cf7
   140035ce7:	call   0x140036858
   140035cec:	mov    DWORD PTR [rax],0x16
   140035cf2:	or     eax,0xffffffff
   140035cf5:	jmp    0x140035d61
   140035cf7:	and    eax,0xffffffef
   140035cfa:	xor    ebp,ebp
   140035cfc:	mov    DWORD PTR [rcx+0x18],eax
   140035cff:	cmp    r8d,0x1
   140035d03:	jne    0x140035d0e
   140035d05:	call   0x140035ab4
   140035d0a:	mov    edi,ebp
   140035d0c:	add    esi,eax
   140035d0e:	mov    rcx,rbx
   140035d11:	call   0x14003c598
   140035d16:	mov    r11d,DWORD PTR [rbx+0x18]
   140035d1a:	test   r11b,r11b
   140035d1d:	jns    0x140035d29
   140035d1f:	and    r11d,0xfffffffc
   140035d23:	mov    DWORD PTR [rbx+0x18],r11d
   140035d27:	jmp    0x140035d43
   140035d29:	test   r11b,0x1
   140035d2d:	je     0x140035d43
   140035d2f:	test   r11b,0x8
   140035d33:	je     0x140035d43
   140035d35:	bt     r11d,0xa
   140035d3a:	jb     0x140035d43
   140035d3c:	mov    DWORD PTR [rbx+0x24],0x200
   140035d43:	mov    rcx,rbx
   140035d46:	call   0x14003c3f8
   140035d4b:	mov    r8d,edi
   140035d4e:	mov    edx,esi
   140035d50:	mov    ecx,eax
   140035d52:	call   0x14003c4b8
   140035d57:	cmp    eax,0xffffffff
   140035d5a:	setne  bpl
   140035d5e:	lea    eax,[rbp-0x1]
   140035d61:	mov    rbx,QWORD PTR [rsp+0x30]
   140035d66:	mov    rbp,QWORD PTR [rsp+0x38]
   140035d6b:	mov    rsi,QWORD PTR [rsp+0x40]
   140035d70:	add    rsp,0x20
   140035d74:	pop    rdi
   140035d75:	ret    
   140035d76:	int3   
   140035d77:	int3   
   140035d78:	mov    QWORD PTR [rsp+0x10],rbx
   140035d7d:	mov    QWORD PTR [rsp+0x18],rsi
   140035d82:	mov    QWORD PTR [rsp+0x8],rcx
   140035d87:	push   rdi
   140035d88:	sub    rsp,0x20
   140035d8c:	mov    ebx,r8d
   140035d8f:	mov    esi,edx
   140035d91:	mov    rdi,rcx
   140035d94:	xor    eax,eax
   140035d96:	test   rcx,rcx
   140035d99:	setne  al
   140035d9c:	test   eax,eax
   140035d9e:	jne    0x140035db5
   140035da0:	call   0x140036858
   140035da5:	mov    DWORD PTR [rax],0x16
   140035dab:	call   0x1400367f0
   140035db0:	or     eax,0xffffffff
   140035db3:	jmp    0x140035de2
   140035db5:	test   ebx,ebx
   140035db7:	je     0x140035dc3
   140035db9:	cmp    ebx,0x1
   140035dbc:	je     0x140035dc3
   140035dbe:	cmp    ebx,0x2
   140035dc1:	jne    0x140035da0
   140035dc3:	call   0x14003b4d8
   140035dc8:	nop
   140035dc9:	mov    r8d,ebx
   140035dcc:	mov    edx,esi
   140035dce:	mov    rcx,rdi
   140035dd1:	call   0x140035cc4
   140035dd6:	mov    ebx,eax
   140035dd8:	mov    rcx,rdi
   140035ddb:	call   0x14003b570
   140035de0:	mov    eax,ebx
   140035de2:	mov    rbx,QWORD PTR [rsp+0x38]
   140035de7:	mov    rsi,QWORD PTR [rsp+0x40]
   140035dec:	add    rsp,0x20
   140035df0:	pop    rdi
   140035df1:	ret    
   140035df2:	int3   
   140035df3:	int3   
   140035df4:	mov    QWORD PTR [rsp+0x8],rbx
   140035df9:	push   rdi
   140035dfa:	sub    rsp,0x20
   140035dfe:	or     edi,0xffffffff
   140035e01:	mov    rbx,rcx
   140035e04:	test   rcx,rcx
   140035e07:	jne    0x140035e1d
   140035e09:	call   0x140036858
   140035e0e:	mov    DWORD PTR [rax],0x16
   140035e14:	call   0x1400367f0
   140035e19:	or     eax,edi
   140035e1b:	jmp    0x140035e63
   140035e1d:	test   BYTE PTR [rcx+0x18],0x83
   140035e21:	je     0x140035e5d
   140035e23:	call   0x14003c598
   140035e28:	mov    rcx,rbx
   140035e2b:	mov    edi,eax
   140035e2d:	call   0x14003c8d8
   140035e32:	mov    rcx,rbx
   140035e35:	call   0x14003c3f8
   140035e3a:	mov    ecx,eax
   140035e3c:	call   0x14003c814
   140035e41:	test   eax,eax
   140035e43:	jns    0x140035e4a
   140035e45:	or     edi,0xffffffff
   140035e48:	jmp    0x140035e5d
   140035e4a:	mov    rcx,QWORD PTR [rbx+0x28]
   140035e4e:	test   rcx,rcx
   140035e51:	je     0x140035e5d
   140035e53:	call   0x140033594
   140035e58:	and    QWORD PTR [rbx+0x28],0x0
   140035e5d:	and    DWORD PTR [rbx+0x18],0x0
   140035e61:	mov    eax,edi
   140035e63:	mov    rbx,QWORD PTR [rsp+0x30]
   140035e68:	add    rsp,0x20
   140035e6c:	pop    rdi
   140035e6d:	ret    
   140035e6e:	int3   
   140035e6f:	int3   
   140035e70:	mov    QWORD PTR [rsp+0x10],rbx
   140035e75:	mov    QWORD PTR [rsp+0x8],rcx
   140035e7a:	push   rdi
   140035e7b:	sub    rsp,0x20
   140035e7f:	mov    rbx,rcx
   140035e82:	or     edi,0xffffffff
   140035e85:	xor    eax,eax
   140035e87:	test   rcx,rcx
   140035e8a:	setne  al
   140035e8d:	test   eax,eax
   140035e8f:	jne    0x140035ea5
   140035e91:	call   0x140036858
   140035e96:	mov    DWORD PTR [rax],0x16
   140035e9c:	call   0x1400367f0
   140035ea1:	mov    eax,edi
   140035ea3:	jmp    0x140035ecb
   140035ea5:	test   BYTE PTR [rcx+0x18],0x40
   140035ea9:	je     0x140035eb1
   140035eab:	and    DWORD PTR [rcx+0x18],0x0
   140035eaf:	jmp    0x140035ea1
   140035eb1:	call   0x14003b4d8
   140035eb6:	nop
   140035eb7:	mov    rcx,rbx
   140035eba:	call   0x140035df4
   140035ebf:	mov    edi,eax
   140035ec1:	mov    rcx,rbx
   140035ec4:	call   0x14003b570
   140035ec9:	jmp    0x140035ea1
   140035ecb:	mov    rbx,QWORD PTR [rsp+0x38]
   140035ed0:	add    rsp,0x20
   140035ed4:	pop    rdi
   140035ed5:	ret    
   140035ed6:	int3   
   140035ed7:	int3   
   140035ed8:	rex push rbp
   140035eda:	push   r13
   140035edc:	push   r14
   140035ede:	sub    rsp,0x40
   140035ee2:	lea    rbp,[rsp+0x30]
   140035ee7:	mov    QWORD PTR [rbp+0x30],rbx
   140035eeb:	mov    QWORD PTR [rbp+0x38],rsi
   140035eef:	mov    QWORD PTR [rbp+0x40],rdi
   140035ef3:	mov    QWORD PTR [rbp+0x48],r12
   140035ef7:	mov    rax,QWORD PTR [rip+0x4f1aa]        # 0x1400850a8
   140035efe:	xor    rax,rbp
   140035f01:	mov    QWORD PTR [rbp+0x0],rax
   140035f05:	xor    r14d,r14d
   140035f08:	mov    r13,r8
   140035f0b:	mov    rsi,rdx
   140035f0e:	mov    rbx,rcx
   140035f11:	test   rcx,rcx
   140035f14:	jne    0x140035f2c
   140035f16:	call   0x140036858
   140035f1b:	mov    ebx,0x16
   140035f20:	mov    DWORD PTR [rax],ebx
   140035f22:	call   0x1400367f0
   140035f27:	jmp    0x14003609b
   140035f2c:	call   0x14003c9f4
   140035f31:	cmp    rax,rsi
   140035f34:	jb     0x140035f3c
   140035f36:	mov    WORD PTR [rbx],r14w
   140035f3a:	jmp    0x140035f16
   140035f3c:	mov    rax,QWORD PTR [r13+0x0]
   140035f40:	mov    ecx,DWORD PTR [rax+0x14]
   140035f43:	test   ecx,ecx
   140035f45:	je     0x140035f9b
   140035f47:	or     r9d,0xffffffff
   140035f4b:	mov    r8,rbx
   140035f4e:	mov    edx,0x100
   140035f53:	mov    DWORD PTR [rsp+0x28],r14d
   140035f58:	mov    QWORD PTR [rsp+0x20],r14
   140035f5d:	call   0x14003c994
   140035f62:	movsxd r12,eax
   140035f65:	test   eax,eax
   140035f67:	jne    0x140035fa8
   140035f69:	call   0x140036858
   140035f6e:	mov    ebx,0x2a
   140035f73:	mov    DWORD PTR [rax],ebx
   140035f75:	call   0x140036858
   140035f7a:	mov    eax,DWORD PTR [rax]
   140035f7c:	jmp    0x14003609d
   140035f81:	movzx  eax,WORD PTR [rbx]
   140035f84:	cmp    ax,0x41
   140035f88:	jb     0x140035f97
   140035f8a:	cmp    ax,0x5a
   140035f8e:	ja     0x140035f97
   140035f90:	add    ax,0x20
   140035f94:	mov    WORD PTR [rbx],ax
   140035f97:	add    rbx,0x2
   140035f9b:	cmp    WORD PTR [rbx],r14w
   140035f9f:	jne    0x140035f81
   140035fa1:	xor    eax,eax
   140035fa3:	jmp    0x14003609d
   140035fa8:	mov    rcx,r12
   140035fab:	cmp    rsi,r12
   140035fae:	jae    0x140035fc3
   140035fb0:	mov    WORD PTR [rbx],r14w
   140035fb4:	call   0x140036858
   140035fb9:	mov    ebx,0x22
   140035fbe:	jmp    0x140035f20
   140035fc3:	test   eax,eax
   140035fc5:	jle    0x14003602e
   140035fc7:	xor    edx,edx
   140035fc9:	lea    rax,[rdx-0x20]
   140035fcd:	div    rcx
   140035fd0:	cmp    rax,0x2
   140035fd4:	jb     0x14003602e
   140035fd6:	lea    rcx,[r12+r12*1+0x10]
   140035fdb:	cmp    rcx,0x400
   140035fe2:	ja     0x140036015
   140035fe4:	lea    rax,[rcx+0xf]
   140035fe8:	cmp    rax,rcx
   140035feb:	ja     0x140035ff7
   140035fed:	movabs rax,0xffffffffffffff0
   140035ff7:	and    rax,0xfffffffffffffff0
   140035ffb:	call   0x14003ca30
   140036000:	sub    rsp,rax
   140036003:	lea    rdi,[rsp+0x30]
   140036008:	test   rdi,rdi
   14003600b:	je     0x140036036
   14003600d:	mov    DWORD PTR [rdi],0xcccc
   140036013:	jmp    0x140036028
   140036015:	call   0x140034828
   14003601a:	mov    rdi,rax
   14003601d:	test   rax,rax
   140036020:	je     0x140036031
   140036022:	mov    DWORD PTR [rax],0xdddd
   140036028:	add    rdi,0x10
   14003602c:	jmp    0x140036031
   14003602e:	mov    rdi,r14
   140036031:	test   rdi,rdi
   140036034:	jne    0x140036046
   140036036:	call   0x140036858
   14003603b:	mov    DWORD PTR [rax],0xc
   140036041:	jmp    0x140035f75
   140036046:	mov    rax,QWORD PTR [r13+0x0]
   14003604a:	or     r9d,0xffffffff
   14003604e:	mov    r8,rbx
   140036051:	mov    ecx,DWORD PTR [rax+0x14]
   140036054:	mov    edx,0x100
   140036059:	mov    DWORD PTR [rsp+0x28],r12d
   14003605e:	mov    QWORD PTR [rsp+0x20],rdi
   140036063:	call   0x14003c994
   140036068:	test   eax,eax
   14003606a:	je     0x14003607e
   14003606c:	mov    r8,rdi
   14003606f:	mov    rdx,rsi
   140036072:	mov    rcx,rbx
   140036075:	call   0x140034290
   14003607a:	mov    ebx,eax
   14003607c:	jmp    0x14003608a
   14003607e:	call   0x140036858
   140036083:	mov    ebx,0x2a
   140036088:	mov    DWORD PTR [rax],ebx
   14003608a:	lea    rcx,[rdi-0x10]
   14003608e:	cmp    DWORD PTR [rcx],0xdddd
   140036094:	jne    0x14003609b
   140036096:	call   0x140033594
   14003609b:	mov    eax,ebx
   14003609d:	mov    rcx,QWORD PTR [rbp+0x0]
   1400360a1:	xor    rcx,rbp
   1400360a4:	call   0x140032f00
   1400360a9:	mov    rbx,QWORD PTR [rbp+0x30]
   1400360ad:	mov    rsi,QWORD PTR [rbp+0x38]
   1400360b1:	mov    rdi,QWORD PTR [rbp+0x40]
   1400360b5:	mov    r12,QWORD PTR [rbp+0x48]
   1400360b9:	lea    rsp,[rbp+0x10]
   1400360bd:	pop    r14
   1400360bf:	pop    r13
   1400360c1:	pop    rbp
   1400360c2:	ret    
   1400360c3:	int3   
   1400360c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400360c9:	push   rdi
   1400360ca:	sub    rsp,0x40
   1400360ce:	mov    rdi,rcx
   1400360d1:	mov    rbx,rdx
   1400360d4:	lea    rcx,[rsp+0x20]
   1400360d9:	mov    rdx,r8
   1400360dc:	call   0x14003370c
   1400360e1:	lea    r8,[rsp+0x20]
   1400360e6:	mov    rdx,rbx
   1400360e9:	mov    rcx,rdi
   1400360ec:	call   0x140035ed8
   1400360f1:	cmp    BYTE PTR [rsp+0x38],0x0
   1400360f6:	je     0x140036104
   1400360f8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400360fd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140036104:	mov    rbx,QWORD PTR [rsp+0x50]
   140036109:	add    rsp,0x40
   14003610d:	pop    rdi
   14003610e:	ret    
   14003610f:	int3   
   140036110:	xor    r8d,r8d
   140036113:	jmp    0x1400360c4
   140036118:	xor    r11d,r11d
   14003611b:	mov    r10,rdx
   14003611e:	mov    r8,rcx
   140036121:	cmp    WORD PTR [rdx],r11w
   140036125:	jne    0x14003612b
   140036127:	mov    rax,rcx
   14003612a:	ret    
   14003612b:	movzx  eax,WORD PTR [rcx]
   14003612e:	test   ax,ax
   140036131:	je     0x140036175
   140036133:	mov    r9,rcx
   140036136:	sub    r9,rdx
   140036139:	mov    rdx,r10
   14003613c:	test   ax,ax
   14003613f:	je     0x14003615e
   140036141:	cmp    WORD PTR [rdx],r11w
   140036145:	je     0x140036178
   140036147:	movzx  ecx,WORD PTR [r9+rdx*1]
   14003614c:	movzx  eax,WORD PTR [rdx]
   14003614f:	cmp    ecx,eax
   140036151:	jne    0x14003615e
   140036153:	add    rdx,0x2
   140036157:	cmp    WORD PTR [r9+rdx*1],r11w
   14003615c:	jne    0x140036141
   14003615e:	cmp    WORD PTR [rdx],r11w
   140036162:	je     0x140036178
   140036164:	add    r8,0x2
   140036168:	add    r9,0x2
   14003616c:	movzx  eax,WORD PTR [r8]
   140036170:	test   ax,ax
   140036173:	jne    0x140036139
   140036175:	xor    eax,eax
   140036177:	ret    
   140036178:	mov    rax,r8
   14003617b:	ret    
   14003617c:	mov    rcx,QWORD PTR [rip+0x4ef25]        # 0x1400850a8
   140036183:	xor    eax,eax
   140036185:	or     rcx,0x1
   140036189:	cmp    QWORD PTR [rip+0x530a8],rcx        # 0x140089238
   140036190:	sete   al
   140036193:	ret    
   140036194:	rex push rbx
   140036196:	sub    rsp,0x20
   14003619a:	mov    ebx,ecx
   14003619c:	call   0x140037bb0
   1400361a1:	test   rax,rax
   1400361a4:	je     0x1400361ae
   1400361a6:	mov    rcx,rax
   1400361a9:	call   0x140037d8c
   1400361ae:	mov    ecx,ebx
   1400361b0:	call   QWORD PTR [rip+0x3216a]        # 0x140068320
   1400361b6:	int3   
   1400361b7:	int3   
   1400361b8:	sub    rsp,0x28
   1400361bc:	call   0x140037c34
   1400361c1:	nop
   1400361c2:	mov    rcx,QWORD PTR [rax+0x98]
   1400361c9:	call   QWORD PTR [rax+0x90]
   1400361cf:	mov    ecx,eax
   1400361d1:	call   0x140036194
   1400361d6:	nop
   1400361d7:	mov    ecx,eax
   1400361d9:	call   0x140035158
   1400361de:	nop
   1400361df:	add    rsp,0x28
   1400361e3:	ret    
   1400361e4:	rex push rbx
   1400361e6:	sub    rsp,0x20
   1400361ea:	mov    rbx,rcx
   1400361ed:	call   0x1400456f8
   1400361f2:	call   0x140037ac0
   1400361f7:	mov    ecx,eax
   1400361f9:	call   0x140037ab8
   1400361fe:	mov    r11,rax
   140036201:	test   rax,rax
   140036204:	jne    0x140036232
   140036206:	call   0x140037ac0
   14003620b:	mov    rdx,rbx
   14003620e:	mov    ecx,eax
   140036210:	call   0x140037ac8
   140036215:	test   eax,eax
   140036217:	jne    0x140036228
   140036219:	call   QWORD PTR [rip+0x321a1]        # 0x1400683c0
   14003621f:	mov    ecx,eax
   140036221:	call   QWORD PTR [rip+0x320f9]        # 0x140068320
   140036227:	int3   
   140036228:	call   QWORD PTR [rip+0x31f4a]        # 0x140068178
   14003622e:	mov    DWORD PTR [rbx],eax
   140036230:	jmp    0x14003625e
   140036232:	mov    rax,QWORD PTR [rbx+0x90]
   140036239:	mov    rcx,rbx
   14003623c:	mov    QWORD PTR [r11+0x90],rax
   140036243:	mov    rax,QWORD PTR [rbx+0x98]
   14003624a:	mov    QWORD PTR [r11+0x98],rax
   140036251:	mov    rax,QWORD PTR [rbx+0x8]
   140036255:	mov    QWORD PTR [r11+0x8],rax
   140036259:	call   0x140037c58
   14003625e:	call   0x1400361b8
   140036263:	int3   
   140036264:	mov    QWORD PTR [rsp+0x8],rbx
   140036269:	mov    QWORD PTR [rsp+0x10],rbp
   14003626e:	mov    QWORD PTR [rsp+0x20],rsi
   140036273:	push   rdi
   140036274:	push   r12
   140036276:	push   r13
   140036278:	sub    rsp,0x30
   14003627c:	xor    ebx,ebx
   14003627e:	mov    rbp,r9
   140036281:	mov    rsi,r8
   140036284:	mov    r12d,edx
   140036287:	mov    r13,rcx
   14003628a:	test   r8,r8
   14003628d:	jne    0x1400362a4
   14003628f:	call   0x140036858
   140036294:	mov    DWORD PTR [rax],0x16
   14003629a:	call   0x1400367f0
   14003629f:	jmp    0x14003633b
   1400362a4:	call   0x1400456f8
   1400362a9:	mov    edx,0x2c8
   1400362ae:	mov    ecx,0x1
   1400362b3:	call   0x140039f20
   1400362b8:	mov    rdi,rax
   1400362bb:	test   rax,rax
   1400362be:	je     0x140036328
   1400362c0:	call   0x140037c34
   1400362c5:	mov    rcx,rdi
   1400362c8:	mov    rdx,QWORD PTR [rax+0xc0]
   1400362cf:	call   0x140037af8
   1400362d4:	mov    rcx,QWORD PTR [rsp+0x78]
   1400362d9:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   1400362de:	mov    eax,DWORD PTR [rsp+0x70]
   1400362e2:	test   rcx,rcx
   1400362e5:	lea    r8,[rsp+0x60]
   1400362ea:	cmovne r8,rcx
   1400362ee:	mov    rdx,r12
   1400362f1:	mov    r9,rdi
   1400362f4:	mov    QWORD PTR [rsp+0x28],r8
   1400362f9:	lea    r8,[rip+0xfffffffffffffee4]        # 0x1400361e4
   140036300:	mov    rcx,r13
   140036303:	mov    QWORD PTR [rdi+0x90],rsi
   14003630a:	mov    QWORD PTR [rdi+0x98],rbp
   140036311:	mov    DWORD PTR [rsp+0x20],eax
   140036315:	call   QWORD PTR [rip+0x320cd]        # 0x1400683e8
   14003631b:	test   rax,rax
   14003631e:	jne    0x14003633d
   140036320:	call   QWORD PTR [rip+0x3209a]        # 0x1400683c0
   140036326:	mov    ebx,eax
   140036328:	mov    rcx,rdi
   14003632b:	call   0x140033594
   140036330:	test   ebx,ebx
   140036332:	je     0x14003633b
   140036334:	mov    ecx,ebx
   140036336:	call   0x140036898
   14003633b:	xor    eax,eax
   14003633d:	mov    rbx,QWORD PTR [rsp+0x50]
   140036342:	mov    rbp,QWORD PTR [rsp+0x58]
   140036347:	mov    rsi,QWORD PTR [rsp+0x68]
   14003634c:	add    rsp,0x30
   140036350:	pop    r13
   140036352:	pop    r12
   140036354:	pop    rdi
   140036355:	ret    
   140036356:	int3   
   140036357:	int3   
   140036358:	mov    QWORD PTR [rsp+0x10],rbx
   14003635d:	mov    QWORD PTR [rsp+0x18],rdi
   140036362:	push   rbp
   140036363:	mov    rbp,rsp
   140036366:	sub    rsp,0x60
   14003636a:	mov    rdi,rdx
   14003636d:	mov    rbx,rcx
   140036370:	lea    rcx,[rbp-0x40]
   140036374:	lea    rdx,[rip+0x32565]        # 0x1400688e0
   14003637b:	mov    r8d,0x40
   140036381:	call   0x140033260
   140036386:	lea    rdx,[rbp+0x10]
   14003638a:	mov    rcx,rdi
   14003638d:	mov    QWORD PTR [rbp-0x18],rbx
   140036391:	mov    QWORD PTR [rbp-0x10],rdi
   140036395:	call   0x1400432f4
   14003639a:	mov    r11,rax
   14003639d:	mov    QWORD PTR [rbp+0x10],rax
   1400363a1:	mov    QWORD PTR [rbp-0x8],rax
   1400363a5:	test   rdi,rdi
   1400363a8:	je     0x1400363c5
   1400363aa:	test   BYTE PTR [rdi],0x8
   1400363ad:	mov    ecx,0x1994000
   1400363b2:	je     0x1400363b9
   1400363b4:	mov    DWORD PTR [rbp-0x20],ecx
   1400363b7:	jmp    0x1400363c5
   1400363b9:	mov    eax,DWORD PTR [rbp-0x20]
   1400363bc:	test   r11,r11
   1400363bf:	cmove  eax,ecx
   1400363c2:	mov    DWORD PTR [rbp-0x20],eax
   1400363c5:	mov    r8d,DWORD PTR [rbp-0x28]
   1400363c9:	mov    edx,DWORD PTR [rbp-0x3c]
   1400363cc:	mov    ecx,DWORD PTR [rbp-0x40]
   1400363cf:	lea    r9,[rbp-0x20]
   1400363d3:	call   QWORD PTR [rip+0x31d87]        # 0x140068160
   1400363d9:	lea    r11,[rsp+0x60]
   1400363de:	mov    rbx,QWORD PTR [r11+0x18]
   1400363e2:	mov    rdi,QWORD PTR [r11+0x20]
   1400363e6:	mov    rsp,r11
   1400363e9:	pop    rbp
   1400363ea:	ret    
   1400363eb:	int3   
   1400363ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400363f1:	sub    rsp,0x88
   1400363f8:	lea    rcx,[rip+0x52ee1]        # 0x1400892e0
   1400363ff:	call   QWORD PTR [rip+0x31edb]        # 0x1400682e0
   140036405:	mov    rax,QWORD PTR [rip+0x52fcc]        # 0x1400893d8
   14003640c:	mov    QWORD PTR [rsp+0x58],rax
   140036411:	xor    r8d,r8d
   140036414:	lea    rdx,[rsp+0x60]
   140036419:	mov    rcx,QWORD PTR [rsp+0x58]
   14003641e:	call   0x140043300
   140036423:	mov    QWORD PTR [rsp+0x50],rax
   140036428:	cmp    QWORD PTR [rsp+0x50],0x0
   14003642e:	je     0x140036471
   140036430:	mov    QWORD PTR [rsp+0x38],0x0
   140036439:	lea    rax,[rsp+0x48]
   14003643e:	mov    QWORD PTR [rsp+0x30],rax
   140036443:	lea    rax,[rsp+0x40]
   140036448:	mov    QWORD PTR [rsp+0x28],rax
   14003644d:	lea    rax,[rip+0x52e8c]        # 0x1400892e0
   140036454:	mov    QWORD PTR [rsp+0x20],rax
   140036459:	mov    r9,QWORD PTR [rsp+0x50]
   14003645e:	mov    r8,QWORD PTR [rsp+0x58]
   140036463:	mov    rdx,QWORD PTR [rsp+0x60]
   140036468:	xor    ecx,ecx
   14003646a:	call   0x1400432fa
   14003646f:	jmp    0x140036493
   140036471:	mov    rax,QWORD PTR [rsp+0x88]
   140036479:	mov    QWORD PTR [rip+0x52f58],rax        # 0x1400893d8
   140036480:	lea    rax,[rsp+0x88]
   140036488:	add    rax,0x8
   14003648c:	mov    QWORD PTR [rip+0x52ee5],rax        # 0x140089378
   140036493:	mov    rax,QWORD PTR [rip+0x52f3e]        # 0x1400893d8
   14003649a:	mov    QWORD PTR [rip+0x52daf],rax        # 0x140089250
   1400364a1:	mov    rax,QWORD PTR [rsp+0x90]
   1400364a9:	mov    QWORD PTR [rip+0x52eb0],rax        # 0x140089360
   1400364b0:	mov    DWORD PTR [rip+0x52d86],0xc0000409        # 0x140089240
   1400364ba:	mov    DWORD PTR [rip+0x52d80],0x1        # 0x140089244
   1400364c4:	mov    rax,QWORD PTR [rip+0x4ebdd]        # 0x1400850a8
   1400364cb:	mov    QWORD PTR [rsp+0x68],rax
   1400364d0:	mov    rax,QWORD PTR [rip+0x4ebd9]        # 0x1400850b0
   1400364d7:	mov    QWORD PTR [rsp+0x70],rax
   1400364dc:	call   QWORD PTR [rip+0x31e16]        # 0x1400682f8
   1400364e2:	mov    DWORD PTR [rip+0x52df0],eax        # 0x1400892d8
   1400364e8:	mov    ecx,0x1
   1400364ed:	call   0x14003dd94
   1400364f2:	xor    ecx,ecx
   1400364f4:	call   QWORD PTR [rip+0x31e06]        # 0x140068300
   1400364fa:	lea    rcx,[rip+0x3241f]        # 0x140068920
   140036501:	call   QWORD PTR [rip+0x31e01]        # 0x140068308
   140036507:	cmp    DWORD PTR [rip+0x52dca],0x0        # 0x1400892d8
   14003650e:	jne    0x14003651a
   140036510:	mov    ecx,0x1
   140036515:	call   0x14003dd94
   14003651a:	call   QWORD PTR [rip+0x31be8]        # 0x140068108
   140036520:	mov    edx,0xc0000409
   140036525:	mov    rcx,rax
   140036528:	call   QWORD PTR [rip+0x31de2]        # 0x140068310
   14003652e:	add    rsp,0x88
   140036535:	ret    
   140036536:	int3   
   140036537:	int3   
   140036538:	int3   
   140036539:	int3   
   14003653a:	int3   
   14003653b:	int3   
   14003653c:	int3   
   14003653d:	int3   
   14003653e:	int3   
   14003653f:	int3   
   140036540:	int3   
   140036541:	int3   
   140036542:	int3   
   140036543:	int3   
   140036544:	int3   
   140036545:	int3   
   140036546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036550:	mov    rax,rcx
   140036553:	neg    rcx
   140036556:	test   rax,0x7
   14003655c:	je     0x14003656d
   14003655e:	xchg   ax,ax
   140036560:	mov    dl,BYTE PTR [rax]
   140036562:	inc    rax
   140036565:	test   dl,dl
   140036567:	je     0x1400365c8
   140036569:	test   al,0x7
   14003656b:	jne    0x140036560
   14003656d:	movabs r8,0x7efefefefefefeff
   140036577:	movabs r11,0x8101010101010100
   140036581:	mov    rdx,QWORD PTR [rax]
   140036584:	mov    r9,r8
   140036587:	add    rax,0x8
   14003658b:	add    r9,rdx
   14003658e:	not    rdx
   140036591:	xor    rdx,r9
   140036594:	and    rdx,r11
   140036597:	je     0x140036581
   140036599:	mov    rdx,QWORD PTR [rax-0x8]
   14003659d:	test   dl,dl
   14003659f:	je     0x1400365f2
   1400365a1:	test   dh,dh
   1400365a3:	je     0x1400365ec
   1400365a5:	shr    rdx,0x10
   1400365a9:	test   dl,dl
   1400365ab:	je     0x1400365e6
   1400365ad:	test   dh,dh
   1400365af:	je     0x1400365e0
   1400365b1:	shr    rdx,0x10
   1400365b5:	test   dl,dl
   1400365b7:	je     0x1400365da
   1400365b9:	test   dh,dh
   1400365bb:	je     0x1400365d4
   1400365bd:	shr    edx,0x10
   1400365c0:	test   dl,dl
   1400365c2:	je     0x1400365ce
   1400365c4:	test   dh,dh
   1400365c6:	jne    0x140036581
   1400365c8:	lea    rax,[rcx+rax*1-0x1]
   1400365cd:	ret    
   1400365ce:	lea    rax,[rcx+rax*1-0x2]
   1400365d3:	ret    
   1400365d4:	lea    rax,[rcx+rax*1-0x3]
   1400365d9:	ret    
   1400365da:	lea    rax,[rcx+rax*1-0x4]
   1400365df:	ret    
   1400365e0:	lea    rax,[rcx+rax*1-0x5]
   1400365e5:	ret    
   1400365e6:	lea    rax,[rcx+rax*1-0x6]
   1400365eb:	ret    
   1400365ec:	lea    rax,[rcx+rax*1-0x7]
   1400365f1:	ret    
   1400365f2:	lea    rax,[rcx+rax*1-0x8]
   1400365f7:	ret    
   1400365f8:	mov    QWORD PTR [rip+0x531b1],rcx        # 0x1400897b0
   1400365ff:	ret    
   140036600:	mov    QWORD PTR [rsp+0x10],rbx
   140036605:	mov    QWORD PTR [rsp+0x18],rsi
   14003660a:	push   rbp
   14003660b:	push   rdi
   14003660c:	push   r12
   14003660e:	lea    rbp,[rsp-0x4f0]
   140036616:	sub    rsp,0x5f0
   14003661d:	mov    rax,QWORD PTR [rip+0x4ea84]        # 0x1400850a8
   140036624:	xor    rax,rsp
   140036627:	mov    QWORD PTR [rbp+0x4e0],rax
   14003662e:	mov    edi,r8d
   140036631:	mov    esi,edx
   140036633:	mov    ebx,ecx
   140036635:	cmp    ecx,0xffffffff
   140036638:	je     0x14003663f
   14003663a:	call   0x14003dd94
   14003663f:	and    DWORD PTR [rsp+0x70],0x0
   140036644:	lea    rcx,[rsp+0x74]
   140036649:	xor    edx,edx
   14003664b:	mov    r8d,0x94
   140036651:	call   0x140036dc0
   140036656:	lea    r11,[rsp+0x70]
   14003665b:	lea    rax,[rbp+0x10]
   14003665f:	lea    rcx,[rbp+0x10]
   140036663:	mov    QWORD PTR [rsp+0x48],r11
   140036668:	mov    QWORD PTR [rsp+0x50],rax
   14003666d:	call   QWORD PTR [rip+0x31c6d]        # 0x1400682e0
   140036673:	mov    r12,QWORD PTR [rbp+0x108]
   14003667a:	lea    rdx,[rsp+0x40]
   14003667f:	mov    rcx,r12
   140036682:	xor    r8d,r8d
   140036685:	call   0x140043300
   14003668a:	test   rax,rax
   14003668d:	je     0x1400366c6
   14003668f:	and    QWORD PTR [rsp+0x38],0x0
   140036695:	mov    rdx,QWORD PTR [rsp+0x40]
   14003669a:	lea    rcx,[rsp+0x60]
   14003669f:	mov    QWORD PTR [rsp+0x30],rcx
   1400366a4:	lea    rcx,[rsp+0x58]
   1400366a9:	mov    r9,rax
   1400366ac:	mov    QWORD PTR [rsp+0x28],rcx
   1400366b1:	lea    rcx,[rbp+0x10]
   1400366b5:	mov    r8,r12
   1400366b8:	mov    QWORD PTR [rsp+0x20],rcx
   1400366bd:	xor    ecx,ecx
   1400366bf:	call   0x1400432fa
   1400366c4:	jmp    0x1400366e2
   1400366c6:	mov    rax,QWORD PTR [rbp+0x508]
   1400366cd:	mov    QWORD PTR [rbp+0x108],rax
   1400366d4:	lea    rax,[rbp+0x508]
   1400366db:	mov    QWORD PTR [rbp+0xa8],rax
   1400366e2:	mov    rax,QWORD PTR [rbp+0x508]
   1400366e9:	mov    DWORD PTR [rsp+0x70],esi
   1400366ed:	mov    DWORD PTR [rsp+0x74],edi
   1400366f1:	mov    QWORD PTR [rbp-0x80],rax
   1400366f5:	call   QWORD PTR [rip+0x31bfd]        # 0x1400682f8
   1400366fb:	xor    ecx,ecx
   1400366fd:	mov    edi,eax
   1400366ff:	call   QWORD PTR [rip+0x31bfb]        # 0x140068300
   140036705:	lea    rcx,[rsp+0x48]
   14003670a:	call   QWORD PTR [rip+0x31bf8]        # 0x140068308
   140036710:	test   eax,eax
   140036712:	jne    0x140036724
   140036714:	test   edi,edi
   140036716:	jne    0x140036724
   140036718:	cmp    ebx,0xffffffff
   14003671b:	je     0x140036724
   14003671d:	mov    ecx,ebx
   14003671f:	call   0x14003dd94
   140036724:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14003672b:	xor    rcx,rsp
   14003672e:	call   0x140032f00
   140036733:	lea    r11,[rsp+0x5f0]
   14003673b:	mov    rbx,QWORD PTR [r11+0x28]
   14003673f:	mov    rsi,QWORD PTR [r11+0x30]
   140036743:	mov    rsp,r11
   140036746:	pop    r12
   140036748:	pop    rdi
   140036749:	pop    rbp
   14003674a:	ret    
   14003674b:	int3   
   14003674c:	sub    rsp,0x28
   140036750:	mov    r8d,0x1
   140036756:	mov    edx,0xc0000417
   14003675b:	lea    ecx,[r8+0x1]
   14003675f:	call   0x140036600
   140036764:	call   QWORD PTR [rip+0x3199e]        # 0x140068108
   14003676a:	mov    edx,0xc0000417
   14003676f:	mov    rcx,rax
   140036772:	add    rsp,0x28
   140036776:	rex.W jmp QWORD PTR [rip+0x31b93]        # 0x140068310
   14003677d:	int3   
   14003677e:	int3   
   14003677f:	int3   
   140036780:	mov    QWORD PTR [rsp+0x8],rbx
   140036785:	mov    QWORD PTR [rsp+0x10],rbp
   14003678a:	mov    QWORD PTR [rsp+0x18],rsi
   14003678f:	push   rdi
   140036790:	sub    rsp,0x30
   140036794:	mov    rbp,rcx
   140036797:	mov    rcx,QWORD PTR [rip+0x53012]        # 0x1400897b0
   14003679e:	mov    ebx,r9d
   1400367a1:	mov    rdi,r8
   1400367a4:	mov    rsi,rdx
   1400367a7:	call   QWORD PTR [rip+0x31be3]        # 0x140068390
   1400367ad:	mov    r9d,ebx
   1400367b0:	mov    r8,rdi
   1400367b3:	mov    rdx,rsi
   1400367b6:	mov    rcx,rbp
   1400367b9:	test   rax,rax
   1400367bc:	je     0x1400367df
   1400367be:	mov    r10,QWORD PTR [rsp+0x60]
   1400367c3:	mov    QWORD PTR [rsp+0x20],r10
   1400367c8:	call   rax
   1400367ca:	mov    rbx,QWORD PTR [rsp+0x40]
   1400367cf:	mov    rbp,QWORD PTR [rsp+0x48]
   1400367d4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400367d9:	add    rsp,0x30
   1400367dd:	pop    rdi
   1400367de:	ret    
   1400367df:	mov    rax,QWORD PTR [rsp+0x60]
   1400367e4:	mov    QWORD PTR [rsp+0x20],rax
   1400367e9:	call   0x14003674c
   1400367ee:	int3   
   1400367ef:	int3   
   1400367f0:	sub    rsp,0x38
   1400367f4:	and    QWORD PTR [rsp+0x20],0x0
   1400367fa:	xor    r9d,r9d
   1400367fd:	xor    r8d,r8d
   140036800:	xor    edx,edx
   140036802:	xor    ecx,ecx
   140036804:	call   0x140036780
   140036809:	add    rsp,0x38
   14003680d:	ret    
   14003680e:	int3   
   14003680f:	int3   
   140036810:	lea    r9,[rip+0x4e8a9]        # 0x1400850c0
   140036817:	xor    eax,eax
   140036819:	mov    rdx,r9
   14003681c:	lea    r8d,[rax+0x8]
   140036820:	cmp    ecx,DWORD PTR [rdx]
   140036822:	je     0x14003684f
   140036824:	inc    eax
   140036826:	add    rdx,r8
   140036829:	cmp    eax,0x2d
   14003682c:	jb     0x140036820
   14003682e:	lea    eax,[rcx-0x13]
   140036831:	cmp    eax,0x11
   140036834:	ja     0x14003683c
   140036836:	mov    eax,0xd
   14003683b:	ret    
   14003683c:	add    ecx,0xffffff44
   140036842:	mov    eax,0x16
   140036847:	cmp    ecx,0xe
   14003684a:	cmovbe eax,r8d
   14003684e:	ret    
   14003684f:	cdqe   
   140036851:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140036856:	ret    
   140036857:	int3   
   140036858:	sub    rsp,0x28
   14003685c:	call   0x140037bb0
   140036861:	test   rax,rax
   140036864:	jne    0x14003686f
   140036866:	lea    rax,[rip+0x4e9bb]        # 0x140085228
   14003686d:	jmp    0x140036873
   14003686f:	add    rax,0x10
   140036873:	add    rsp,0x28
   140036877:	ret    
   140036878:	sub    rsp,0x28
   14003687c:	call   0x140037bb0
   140036881:	test   rax,rax
   140036884:	jne    0x14003688f
   140036886:	lea    rax,[rip+0x4e99f]        # 0x14008522c
   14003688d:	jmp    0x140036893
   14003688f:	add    rax,0x14
   140036893:	add    rsp,0x28
   140036897:	ret    
   140036898:	rex push rbx
   14003689a:	sub    rsp,0x20
   14003689e:	mov    ebx,ecx
   1400368a0:	call   0x140037bb0
   1400368a5:	test   rax,rax
   1400368a8:	jne    0x1400368b3
   1400368aa:	lea    rax,[rip+0x4e97b]        # 0x14008522c
   1400368b1:	jmp    0x1400368b7
   1400368b3:	add    rax,0x14
   1400368b7:	mov    DWORD PTR [rax],ebx
   1400368b9:	call   0x140037bb0
   1400368be:	lea    r10,[rip+0x4e963]        # 0x140085228
   1400368c5:	test   rax,rax
   1400368c8:	je     0x1400368ce
   1400368ca:	lea    r10,[rax+0x10]
   1400368ce:	mov    ecx,ebx
   1400368d0:	call   0x140036810
   1400368d5:	mov    DWORD PTR [r10],eax
   1400368d8:	add    rsp,0x20
   1400368dc:	pop    rbx
   1400368dd:	ret    
   1400368de:	int3   
   1400368df:	int3   
   1400368e0:	rex push rbx
   1400368e2:	sub    rsp,0x30
   1400368e6:	mov    rbx,rcx
   1400368e9:	mov    ecx,0xe
   1400368ee:	call   0x14003a3a0
   1400368f3:	nop
   1400368f4:	mov    rax,QWORD PTR [rbx+0x8]
   1400368f8:	test   rax,rax
   1400368fb:	je     0x14003693c
   1400368fd:	mov    rcx,QWORD PTR [rip+0x52ebc]        # 0x1400897c0
   140036904:	lea    rdx,[rip+0x52ead]        # 0x1400897b8
   14003690b:	mov    QWORD PTR [rsp+0x20],rcx
   140036910:	test   rcx,rcx
   140036913:	je     0x14003692e
   140036915:	cmp    QWORD PTR [rcx],rax
   140036918:	jne    0x140036929
   14003691a:	mov    rax,QWORD PTR [rcx+0x8]
   14003691e:	mov    QWORD PTR [rdx+0x8],rax
   140036922:	call   0x140033594
   140036927:	jmp    0x14003692e
   140036929:	mov    rdx,rcx
   14003692c:	jmp    0x14003690b
   14003692e:	mov    rcx,QWORD PTR [rbx+0x8]
   140036932:	call   0x140033594
   140036937:	and    QWORD PTR [rbx+0x8],0x0
   14003693c:	mov    ecx,0xe
   140036941:	call   0x14003a2a0
   140036946:	add    rsp,0x30
   14003694a:	pop    rbx
   14003694b:	ret    
   14003694c:	int3   
   14003694d:	int3   
   14003694e:	int3   
   14003694f:	int3   
   140036950:	int3   
   140036951:	int3   
   140036952:	int3   
   140036953:	int3   
   140036954:	int3   
   140036955:	int3   
   140036956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036960:	sub    rdx,rcx
   140036963:	mov    r9,rdx
   140036966:	test   cl,0x7
   140036969:	je     0x140036986
   14003696b:	mov    al,BYTE PTR [rcx]
   14003696d:	mov    dl,BYTE PTR [rcx+r9*1]
   140036971:	cmp    al,dl
   140036973:	jne    0x1400369cb
   140036975:	inc    rcx
   140036978:	test   al,al
   14003697a:	je     0x1400369d3
   14003697c:	test   rcx,0x7
   140036983:	jne    0x14003696b
   140036985:	nop
   140036986:	movabs r11,0x8101010101010100
   140036990:	lea    rdx,[rcx+r9*1]
   140036994:	and    dx,0xfff
   140036999:	cmp    dx,0xff8
   14003699e:	ja     0x14003696b
   1400369a0:	mov    rax,QWORD PTR [rcx]
   1400369a3:	mov    rdx,QWORD PTR [rcx+r9*1]
   1400369a7:	cmp    rax,rdx
   1400369aa:	jne    0x14003696b
   1400369ac:	movabs r10,0x7efefefefefefeff
   1400369b6:	add    r10,rdx
   1400369b9:	xor    rax,0xffffffffffffffff
   1400369bd:	add    rcx,0x8
   1400369c1:	xor    rax,r10
   1400369c4:	test   r11,rax
   1400369c7:	je     0x140036990
   1400369c9:	jmp    0x1400369da
   1400369cb:	sbb    rax,rax
   1400369ce:	sbb    rax,0xffffffffffffffff
   1400369d2:	ret    
   1400369d3:	xor    eax,eax
   1400369d5:	ret    
   1400369d6:	data16 data16 xchg ax,ax
   1400369da:	test   dl,dl
   1400369dc:	je     0x140036a05
   1400369de:	test   dh,dh
   1400369e0:	je     0x140036a05
   1400369e2:	shr    rdx,0x10
   1400369e6:	test   dl,dl
   1400369e8:	je     0x140036a05
   1400369ea:	test   dh,dh
   1400369ec:	je     0x140036a05
   1400369ee:	shr    rdx,0x10
   1400369f2:	test   dl,dl
   1400369f4:	je     0x140036a05
   1400369f6:	test   dh,dh
   1400369f8:	je     0x140036a05
   1400369fa:	shr    edx,0x10
   1400369fd:	test   dl,dl
   1400369ff:	je     0x140036a05
   140036a01:	test   dh,dh
   140036a03:	jne    0x140036990
   140036a05:	xor    eax,eax
   140036a07:	ret    
   140036a08:	sbb    rax,rax
   140036a0b:	sbb    rax,0xffffffffffffffff
   140036a0f:	ret    
   140036a10:	mov    QWORD PTR [rip+0x52db1],rcx        # 0x1400897c8
   140036a17:	ret    
   140036a18:	rex push rbx
   140036a1a:	sub    rsp,0x20
   140036a1e:	mov    rbx,rcx
   140036a21:	mov    rcx,QWORD PTR [rip+0x52da0]        # 0x1400897c8
   140036a28:	call   QWORD PTR [rip+0x31962]        # 0x140068390
   140036a2e:	test   rax,rax
   140036a31:	je     0x140036a43
   140036a33:	mov    rcx,rbx
   140036a36:	call   rax
   140036a38:	test   eax,eax
   140036a3a:	je     0x140036a43
   140036a3c:	mov    eax,0x1
   140036a41:	jmp    0x140036a45
   140036a43:	xor    eax,eax
   140036a45:	add    rsp,0x20
   140036a49:	pop    rbx
   140036a4a:	ret    
   140036a4b:	int3   
   140036a4c:	sub    rsp,0x28
   140036a50:	xor    r8d,r8d
   140036a53:	mov    edx,0x1000
   140036a58:	xor    ecx,ecx
   140036a5a:	mov    DWORD PTR [rsp+0x30],0x2
   140036a62:	call   QWORD PTR [rip+0x31860]        # 0x1400682c8
   140036a68:	mov    QWORD PTR [rip+0x52d61],rax        # 0x1400897d0
   140036a6f:	test   rax,rax
   140036a72:	je     0x140036a9d
   140036a74:	call   QWORD PTR [rip+0x31856]        # 0x1400682d0
   140036a7a:	cmp    al,0x6
   140036a7c:	jae    0x140036a98
   140036a7e:	mov    rcx,QWORD PTR [rip+0x52d4b]        # 0x1400897d0
   140036a85:	lea    r8,[rsp+0x30]
   140036a8a:	mov    r9d,0x4
   140036a90:	xor    edx,edx
   140036a92:	call   QWORD PTR [rip+0x31840]        # 0x1400682d8
   140036a98:	mov    eax,0x1
   140036a9d:	add    rsp,0x28
   140036aa1:	ret    
   140036aa2:	int3   
   140036aa3:	int3   
   140036aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140036aa9:	push   rdi
   140036aaa:	sub    rsp,0x20
   140036aae:	mov    rbx,r8
   140036ab1:	mov    rdi,rdx
   140036ab4:	test   rcx,rcx
   140036ab7:	je     0x140036ad6
   140036ab9:	xor    edx,edx
   140036abb:	lea    rax,[rdx-0x20]
   140036abf:	div    rcx
   140036ac2:	cmp    rax,rdi
   140036ac5:	jae    0x140036ad6
   140036ac7:	call   0x140036858
   140036acc:	mov    DWORD PTR [rax],0xc
   140036ad2:	xor    eax,eax
   140036ad4:	jmp    0x140036b33
   140036ad6:	imul   rdi,rcx
   140036ada:	mov    eax,0x1
   140036adf:	test   rdi,rdi
   140036ae2:	cmove  rdi,rax
   140036ae6:	xor    eax,eax
   140036ae8:	cmp    rdi,0xffffffffffffffe0
   140036aec:	ja     0x140036b06
   140036aee:	mov    rcx,QWORD PTR [rip+0x52cdb]        # 0x1400897d0
   140036af5:	lea    edx,[rax+0x8]
   140036af8:	mov    r8,rdi
   140036afb:	call   QWORD PTR [rip+0x315ff]        # 0x140068100
   140036b01:	test   rax,rax
   140036b04:	jne    0x140036b33
   140036b06:	cmp    DWORD PTR [rip+0x53337],0x0        # 0x140089e44
   140036b0d:	je     0x140036b28
   140036b0f:	mov    rcx,rdi
   140036b12:	call   0x140036a18
   140036b17:	test   eax,eax
   140036b19:	jne    0x140036ae6
   140036b1b:	test   rbx,rbx
   140036b1e:	je     0x140036ad2
   140036b20:	mov    DWORD PTR [rbx],0xc
   140036b26:	jmp    0x140036ad2
   140036b28:	test   rbx,rbx
   140036b2b:	je     0x140036b33
   140036b2d:	mov    DWORD PTR [rbx],0xc
   140036b33:	mov    rbx,QWORD PTR [rsp+0x30]
   140036b38:	add    rsp,0x20
   140036b3c:	pop    rdi
   140036b3d:	ret    
   140036b3e:	int3   
   140036b3f:	int3   
   140036b40:	sub    rsp,0x28
   140036b44:	call   0x140037c34
   140036b49:	mov    rcx,QWORD PTR [rax+0xd0]
   140036b50:	test   rcx,rcx
   140036b53:	je     0x140036b59
   140036b55:	call   rcx
   140036b57:	jmp    0x140036b59
   140036b59:	call   0x140039b6c
   140036b5e:	add    rsp,0x28
   140036b62:	ret    
   140036b63:	int3   
   140036b64:	sub    rsp,0x28
   140036b68:	mov    rcx,QWORD PTR [rip+0x52c69]        # 0x1400897d8
   140036b6f:	call   QWORD PTR [rip+0x3181b]        # 0x140068390
   140036b75:	test   rax,rax
   140036b78:	je     0x140036b7e
   140036b7a:	call   rax
   140036b7c:	jmp    0x140036b7e
   140036b7e:	call   0x140036b40
   140036b83:	int3   
   140036b84:	add    rsp,0x28
   140036b88:	ret    
   140036b89:	int3   
   140036b8a:	int3   
   140036b8b:	int3   
   140036b8c:	sub    rsp,0x28
   140036b90:	lea    rcx,[rip+0xffffffffffffffa9]        # 0x140036b40
   140036b97:	call   QWORD PTR [rip+0x318c3]        # 0x140068460
   140036b9d:	mov    QWORD PTR [rip+0x52c34],rax        # 0x1400897d8
   140036ba4:	add    rsp,0x28
   140036ba8:	ret    
   140036ba9:	int3   
   140036baa:	int3   
   140036bab:	int3   
   140036bac:	mov    r11,rsp
   140036baf:	mov    QWORD PTR [r11+0x8],rbx
   140036bb3:	mov    QWORD PTR [r11+0x18],rbp
   140036bb7:	mov    QWORD PTR [r11+0x20],rsi
   140036bbb:	mov    QWORD PTR [r11+0x10],rdx
   140036bbf:	push   rdi
   140036bc0:	push   r12
   140036bc2:	push   r13
   140036bc4:	push   r14
   140036bc6:	push   r15
   140036bc8:	sub    rsp,0x40
   140036bcc:	mov    r15,QWORD PTR [r9+0x8]
   140036bd0:	mov    r14,QWORD PTR [r9]
   140036bd3:	mov    eax,DWORD PTR [rcx+0x4]
   140036bd6:	mov    rdi,QWORD PTR [r9+0x38]
   140036bda:	sub    r14,r15
   140036bdd:	mov    r12,r9
   140036be0:	mov    r13,rdx
   140036be3:	mov    rbp,rcx
   140036be6:	test   al,0x66
   140036be8:	jne    0x140036cdb
   140036bee:	movsxd rsi,DWORD PTR [r9+0x48]
   140036bf2:	mov    QWORD PTR [r11-0x38],rcx
   140036bf6:	mov    QWORD PTR [r11-0x30],r8
   140036bfa:	mov    rax,rsi
   140036bfd:	cmp    esi,DWORD PTR [rdi]
   140036bff:	jae    0x140036d86
   140036c05:	add    rax,rax
   140036c08:	lea    rbx,[rdi+rax*8+0xc]
   140036c0d:	mov    eax,DWORD PTR [rbx-0x8]
   140036c10:	cmp    r14,rax
   140036c13:	jb     0x140036cc1
   140036c19:	mov    eax,DWORD PTR [rbx-0x4]
   140036c1c:	cmp    r14,rax
   140036c1f:	jae    0x140036cc1
   140036c25:	cmp    DWORD PTR [rbx+0x4],0x0
   140036c29:	je     0x140036cc1
   140036c2f:	cmp    DWORD PTR [rbx],0x1
   140036c32:	je     0x140036c4d
   140036c34:	mov    eax,DWORD PTR [rbx]
   140036c36:	lea    rcx,[rsp+0x30]
   140036c3b:	mov    rdx,r13
   140036c3e:	add    rax,r15
   140036c41:	call   rax
   140036c43:	test   eax,eax
   140036c45:	js     0x140036cd4
   140036c4b:	jle    0x140036cc1
   140036c4d:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140036c54:	jne    0x140036c7e
   140036c56:	cmp    QWORD PTR [rip+0x3460a],0x0        # 0x14006b268
   140036c5e:	je     0x140036c7e
   140036c60:	lea    rcx,[rip+0x34601]        # 0x14006b268
   140036c67:	call   0x14003a780
   140036c6c:	test   eax,eax
   140036c6e:	je     0x140036c7e
   140036c70:	mov    edx,0x1
   140036c75:	mov    rcx,rbp
   140036c78:	call   QWORD PTR [rip+0x345ea]        # 0x14006b268
   140036c7e:	mov    ecx,DWORD PTR [rbx+0x4]
   140036c81:	mov    r8d,0x1
   140036c87:	mov    rdx,r13
   140036c8a:	add    rcx,r15
   140036c8d:	call   0x14003ba30
   140036c92:	mov    rax,QWORD PTR [r12+0x40]
   140036c97:	mov    edx,DWORD PTR [rbx+0x4]
   140036c9a:	movsxd r9,DWORD PTR [rbp+0x0]
   140036c9e:	mov    QWORD PTR [rsp+0x28],rax
   140036ca3:	mov    rax,QWORD PTR [r12+0x28]
   140036ca8:	add    rdx,r15
   140036cab:	mov    r8,rbp
   140036cae:	mov    rcx,r13
   140036cb1:	mov    QWORD PTR [rsp+0x20],rax
   140036cb6:	call   QWORD PTR [rip+0x315fc]        # 0x1400682b8
   140036cbc:	call   0x14003ba60
   140036cc1:	inc    esi
   140036cc3:	add    rbx,0x10
   140036cc7:	cmp    esi,DWORD PTR [rdi]
   140036cc9:	jae    0x140036d86
   140036ccf:	jmp    0x140036c0d
   140036cd4:	xor    eax,eax
   140036cd6:	jmp    0x140036d8b
   140036cdb:	mov    r8,QWORD PTR [r9+0x20]
   140036cdf:	xor    ebp,ebp
   140036ce1:	xor    r13d,r13d
   140036ce4:	sub    r8,r15
   140036ce7:	test   al,0x20
   140036ce9:	je     0x140036d26
   140036ceb:	xor    edx,edx
   140036ced:	cmp    DWORD PTR [rdi],edx
   140036cef:	jbe    0x140036d26
   140036cf1:	lea    rcx,[rdi+0x8]
   140036cf5:	mov    eax,DWORD PTR [rcx-0x4]
   140036cf8:	cmp    r8,rax
   140036cfb:	jb     0x140036d04
   140036cfd:	mov    eax,DWORD PTR [rcx]
   140036cff:	cmp    r8,rax
   140036d02:	jbe    0x140036d10
   140036d04:	inc    edx
   140036d06:	add    rcx,0x10
   140036d0a:	cmp    edx,DWORD PTR [rdi]
   140036d0c:	jae    0x140036d26
   140036d0e:	jmp    0x140036cf5
   140036d10:	mov    eax,edx
   140036d12:	add    rax,rax
   140036d15:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   140036d19:	test   ecx,ecx
   140036d1b:	jne    0x140036d23
   140036d1d:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   140036d21:	jmp    0x140036d26
   140036d23:	mov    r13d,ecx
   140036d26:	movsxd rsi,DWORD PTR [r9+0x48]
   140036d2a:	mov    rbx,rsi
   140036d2d:	cmp    esi,DWORD PTR [rdi]
   140036d2f:	jae    0x140036d86
   140036d31:	inc    rbx
   140036d34:	shl    rbx,0x4
   140036d38:	add    rbx,rdi
   140036d3b:	mov    eax,DWORD PTR [rbx-0xc]
   140036d3e:	cmp    r14,rax
   140036d41:	jb     0x140036d7c
   140036d43:	mov    eax,DWORD PTR [rbx-0x8]
   140036d46:	cmp    r14,rax
   140036d49:	jae    0x140036d7c
   140036d4b:	test   r13d,r13d
   140036d4e:	je     0x140036d55
   140036d50:	cmp    r13d,DWORD PTR [rbx]
   140036d53:	je     0x140036d86
   140036d55:	test   ebp,ebp
   140036d57:	je     0x140036d5e
   140036d59:	cmp    ebp,DWORD PTR [rbx-0x4]
   140036d5c:	je     0x140036d86
   140036d5e:	cmp    DWORD PTR [rbx],0x0
   140036d61:	jne    0x140036d7c
   140036d63:	mov    rdx,QWORD PTR [rsp+0x78]
   140036d68:	lea    eax,[rsi+0x1]
   140036d6b:	mov    cl,0x1
   140036d6d:	mov    DWORD PTR [r12+0x48],eax
   140036d72:	mov    r8d,DWORD PTR [rbx-0x4]
   140036d76:	add    r8,r15
   140036d79:	call   r8
   140036d7c:	inc    esi
   140036d7e:	add    rbx,0x10
   140036d82:	cmp    esi,DWORD PTR [rdi]
   140036d84:	jb     0x140036d3b
   140036d86:	mov    eax,0x1
   140036d8b:	lea    r11,[rsp+0x40]
   140036d90:	mov    rbx,QWORD PTR [r11+0x30]
   140036d94:	mov    rbp,QWORD PTR [r11+0x40]
   140036d98:	mov    rsi,QWORD PTR [r11+0x48]
   140036d9c:	mov    rsp,r11
   140036d9f:	pop    r15
   140036da1:	pop    r14
   140036da3:	pop    r13
   140036da5:	pop    r12
   140036da7:	pop    rdi
   140036da8:	ret    
   140036da9:	int3   
   140036daa:	int3   
   140036dab:	int3   
   140036dac:	int3   
   140036dad:	int3   
   140036dae:	int3   
   140036daf:	int3   
   140036db0:	int3   
   140036db1:	int3   
   140036db2:	int3   
   140036db3:	int3   
   140036db4:	int3   
   140036db5:	int3   
   140036db6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036dc0:	mov    rax,rcx
   140036dc3:	cmp    r8,0x8
   140036dc7:	jb     0x140036e1c
   140036dc9:	movzx  edx,dl
   140036dcc:	movabs r9,0x101010101010101
   140036dd6:	imul   rdx,r9
   140036dda:	cmp    r8,0x40
   140036dde:	jb     0x140036dfe
   140036de0:	neg    rcx
   140036de3:	and    ecx,0x7
   140036de6:	je     0x140036dee
   140036de8:	sub    r8,rcx
   140036deb:	mov    QWORD PTR [rax],rdx
   140036dee:	add    rcx,rax
   140036df1:	mov    r9,r8
   140036df4:	and    r8,0x3f
   140036df8:	shr    r9,0x6
   140036dfc:	jne    0x140036e37
   140036dfe:	mov    r9,r8
   140036e01:	and    r8,0x7
   140036e05:	shr    r9,0x3
   140036e09:	je     0x140036e1c
   140036e0b:	data16 data16 xchg ax,ax
   140036e0f:	nop
   140036e10:	mov    QWORD PTR [rcx],rdx
   140036e13:	add    rcx,0x8
   140036e17:	dec    r9
   140036e1a:	jne    0x140036e10
   140036e1c:	test   r8,r8
   140036e1f:	je     0x140036e2b
   140036e21:	mov    BYTE PTR [rcx],dl
   140036e23:	inc    rcx
   140036e26:	dec    r8
   140036e29:	jne    0x140036e21
   140036e2b:	ret    
   140036e2c:	nop    DWORD PTR [rax+0x0]
   140036e30:	data16 data16 xchg ax,ax
   140036e34:	data16 xchg ax,ax
   140036e37:	cmp    r9,0x1c00
   140036e3e:	jae    0x140036e70
   140036e40:	mov    QWORD PTR [rcx],rdx
   140036e43:	mov    QWORD PTR [rcx+0x8],rdx
   140036e47:	mov    QWORD PTR [rcx+0x10],rdx
   140036e4b:	add    rcx,0x40
   140036e4f:	mov    QWORD PTR [rcx-0x28],rdx
   140036e53:	mov    QWORD PTR [rcx-0x20],rdx
   140036e57:	dec    r9
   140036e5a:	mov    QWORD PTR [rcx-0x18],rdx
   140036e5e:	mov    QWORD PTR [rcx-0x10],rdx
   140036e62:	mov    QWORD PTR [rcx-0x8],rdx
   140036e66:	jne    0x140036e40
   140036e68:	jmp    0x140036dfe
   140036e6a:	nop    WORD PTR [rax+rax*1+0x0]
   140036e70:	movnti QWORD PTR [rcx],rdx
   140036e74:	movnti QWORD PTR [rcx+0x8],rdx
   140036e79:	movnti QWORD PTR [rcx+0x10],rdx
   140036e7e:	add    rcx,0x40
   140036e82:	movnti QWORD PTR [rcx-0x28],rdx
   140036e87:	movnti QWORD PTR [rcx-0x20],rdx
   140036e8c:	dec    r9
   140036e8f:	movnti QWORD PTR [rcx-0x18],rdx
   140036e94:	movnti QWORD PTR [rcx-0x10],rdx
   140036e99:	movnti QWORD PTR [rcx-0x8],rdx
   140036e9e:	jne    0x140036e70
   140036ea0:	lock or BYTE PTR [rsp],0x0
   140036ea5:	jmp    0x140036dfe
   140036eaa:	int3   
   140036eab:	int3   
   140036eac:	sub    rsp,0x28
   140036eb0:	test   rcx,rcx
   140036eb3:	jne    0x140036ece
   140036eb5:	call   0x140036858
   140036eba:	mov    DWORD PTR [rax],0x16
   140036ec0:	call   0x1400367f0
   140036ec5:	or     rax,0xffffffffffffffff
   140036ec9:	add    rsp,0x28
   140036ecd:	ret    
   140036ece:	mov    r8,rcx
   140036ed1:	mov    rcx,QWORD PTR [rip+0x528f8]        # 0x1400897d0
   140036ed8:	xor    edx,edx
   140036eda:	add    rsp,0x28
   140036ede:	rex.W jmp QWORD PTR [rip+0x313cb]        # 0x1400682b0
   140036ee5:	int3   
   140036ee6:	int3   
   140036ee7:	int3   
   140036ee8:	mov    QWORD PTR [rsp+0x8],rbx
   140036eed:	mov    QWORD PTR [rsp+0x10],rbp
   140036ef2:	mov    QWORD PTR [rsp+0x18],rsi
   140036ef7:	push   rdi
   140036ef8:	sub    rsp,0x20
   140036efc:	lea    rbx,[rcx+0x1c]
   140036f00:	mov    rbp,rcx
   140036f03:	mov    esi,0x101
   140036f08:	mov    rcx,rbx
   140036f0b:	mov    r8d,esi
   140036f0e:	xor    edx,edx
   140036f10:	call   0x140036dc0
   140036f15:	xor    r11d,r11d
   140036f18:	lea    rdi,[rbp+0x10]
   140036f1c:	lea    ecx,[r11+0x6]
   140036f20:	movzx  eax,r11w
   140036f24:	mov    DWORD PTR [rbp+0xc],r11d
   140036f28:	mov    QWORD PTR [rbp+0x4],r11
   140036f2c:	rep stos WORD PTR es:[rdi],ax
   140036f2f:	lea    rdi,[rip+0x4e2fa]        # 0x140085230
   140036f36:	sub    rdi,rbp
   140036f39:	mov    al,BYTE PTR [rdi+rbx*1]
   140036f3c:	mov    BYTE PTR [rbx],al
   140036f3e:	inc    rbx
   140036f41:	dec    rsi
   140036f44:	jne    0x140036f39
   140036f46:	lea    rcx,[rbp+0x11d]
   140036f4d:	mov    edx,0x100
   140036f52:	mov    al,BYTE PTR [rcx+rdi*1]
   140036f55:	mov    BYTE PTR [rcx],al
   140036f57:	inc    rcx
   140036f5a:	dec    rdx
   140036f5d:	jne    0x140036f52
   140036f5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140036f64:	mov    rbp,QWORD PTR [rsp+0x38]
   140036f69:	mov    rsi,QWORD PTR [rsp+0x40]
   140036f6e:	add    rsp,0x20
   140036f72:	pop    rdi
   140036f73:	ret    
   140036f74:	mov    rax,rsp
   140036f77:	mov    QWORD PTR [rax+0x10],rbx
   140036f7b:	mov    QWORD PTR [rax+0x18],rsi
   140036f7f:	mov    QWORD PTR [rax+0x20],rdi
   140036f83:	push   rbp
   140036f84:	lea    rbp,[rax-0x488]
   140036f8b:	sub    rsp,0x580
   140036f92:	mov    rax,QWORD PTR [rip+0x4e10f]        # 0x1400850a8
   140036f99:	xor    rax,rsp
   140036f9c:	mov    QWORD PTR [rbp+0x470],rax
   140036fa3:	mov    rsi,rcx
   140036fa6:	mov    ecx,DWORD PTR [rcx+0x4]
   140036fa9:	lea    rdx,[rsp+0x50]
   140036fae:	call   QWORD PTR [rip+0x312f4]        # 0x1400682a8
   140036fb4:	mov    ebx,0x100
   140036fb9:	test   eax,eax
   140036fbb:	je     0x1400370fd
   140036fc1:	xor    eax,eax
   140036fc3:	lea    rcx,[rsp+0x70]
   140036fc8:	mov    BYTE PTR [rcx],al
   140036fca:	inc    eax
   140036fcc:	inc    rcx
   140036fcf:	cmp    eax,ebx
   140036fd1:	jb     0x140036fc8
   140036fd3:	mov    al,BYTE PTR [rsp+0x56]
   140036fd7:	mov    BYTE PTR [rsp+0x70],0x20
   140036fdc:	lea    rdi,[rsp+0x56]
   140036fe1:	jmp    0x14003700c
   140036fe3:	movzx  edx,BYTE PTR [rdi+0x1]
   140036fe7:	movzx  r8d,al
   140036feb:	cmp    r8d,edx
   140036fee:	ja     0x140037006
   140036ff0:	sub    edx,r8d
   140036ff3:	mov    eax,r8d
   140036ff6:	lea    rcx,[rsp+r8*1+0x70]
   140036ffb:	lea    r8d,[rdx+0x1]
   140036fff:	mov    dl,0x20
   140037001:	call   0x140036dc0
   140037006:	add    rdi,0x2
   14003700a:	mov    al,BYTE PTR [rdi]
   14003700c:	test   al,al
   14003700e:	jne    0x140036fe3
   140037010:	mov    eax,DWORD PTR [rsi+0xc]
   140037013:	and    DWORD PTR [rsp+0x38],0x0
   140037018:	lea    r8,[rsp+0x70]
   14003701d:	mov    DWORD PTR [rsp+0x30],eax
   140037021:	mov    eax,DWORD PTR [rsi+0x4]
   140037024:	mov    r9d,ebx
   140037027:	mov    DWORD PTR [rsp+0x28],eax
   14003702b:	lea    rax,[rbp+0x270]
   140037032:	mov    edx,0x1
   140037037:	xor    ecx,ecx
   140037039:	mov    QWORD PTR [rsp+0x20],rax
   14003703e:	call   0x14003cbe0
   140037043:	and    DWORD PTR [rsp+0x40],0x0
   140037048:	mov    eax,DWORD PTR [rsi+0x4]
   14003704b:	mov    edx,DWORD PTR [rsi+0xc]
   14003704e:	mov    DWORD PTR [rsp+0x38],eax
   140037052:	lea    rax,[rbp+0x70]
   140037056:	mov    DWORD PTR [rsp+0x30],ebx
   14003705a:	mov    QWORD PTR [rsp+0x28],rax
   14003705f:	lea    r9,[rsp+0x70]
   140037064:	mov    r8d,ebx
   140037067:	xor    ecx,ecx
   140037069:	mov    DWORD PTR [rsp+0x20],ebx
   14003706d:	call   0x14003995c
   140037072:	and    DWORD PTR [rsp+0x40],0x0
   140037077:	mov    eax,DWORD PTR [rsi+0x4]
   14003707a:	mov    edx,DWORD PTR [rsi+0xc]
   14003707d:	mov    DWORD PTR [rsp+0x38],eax
   140037081:	lea    rax,[rbp+0x170]
   140037088:	mov    DWORD PTR [rsp+0x30],ebx
   14003708c:	mov    QWORD PTR [rsp+0x28],rax
   140037091:	lea    r9,[rsp+0x70]
   140037096:	mov    r8d,0x200
   14003709c:	xor    ecx,ecx
   14003709e:	mov    DWORD PTR [rsp+0x20],ebx
   1400370a2:	call   0x14003995c
   1400370a7:	lea    rdx,[rbp+0x70]
   1400370ab:	lea    r8,[rbp+0x170]
   1400370b2:	sub    rdx,rsi
   1400370b5:	lea    r11,[rbp+0x270]
   1400370bc:	lea    rcx,[rsi+0x1d]
   1400370c0:	sub    r8,rsi
   1400370c3:	test   BYTE PTR [r11],0x1
   1400370c7:	je     0x1400370d2
   1400370c9:	or     BYTE PTR [rcx],0x10
   1400370cc:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   1400370d0:	jmp    0x1400370e0
   1400370d2:	test   BYTE PTR [r11],0x2
   1400370d6:	je     0x1400370e8
   1400370d8:	or     BYTE PTR [rcx],0x20
   1400370db:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   1400370e0:	mov    BYTE PTR [rcx+0x100],al
   1400370e6:	jmp    0x1400370ef
   1400370e8:	mov    BYTE PTR [rcx+0x100],0x0
   1400370ef:	inc    rcx
   1400370f2:	add    r11,0x2
   1400370f6:	dec    rbx
   1400370f9:	jne    0x1400370c3
   1400370fb:	jmp    0x14003713c
   1400370fd:	xor    edx,edx
   1400370ff:	lea    rcx,[rsi+0x1d]
   140037103:	lea    r8d,[rdx-0x61]
   140037107:	lea    eax,[r8+0x20]
   14003710b:	cmp    eax,0x19
   14003710e:	ja     0x140037118
   140037110:	or     BYTE PTR [rcx],0x10
   140037113:	lea    eax,[rdx+0x20]
   140037116:	jmp    0x140037124
   140037118:	cmp    r8d,0x19
   14003711c:	ja     0x14003712c
   14003711e:	or     BYTE PTR [rcx],0x20
   140037121:	lea    eax,[rdx-0x20]
   140037124:	mov    BYTE PTR [rcx+0x100],al
   14003712a:	jmp    0x140037133
   14003712c:	mov    BYTE PTR [rcx+0x100],0x0
   140037133:	inc    edx
   140037135:	inc    rcx
   140037138:	cmp    edx,ebx
   14003713a:	jb     0x140037103
   14003713c:	mov    rcx,QWORD PTR [rbp+0x470]
   140037143:	xor    rcx,rsp
   140037146:	call   0x140032f00
   14003714b:	lea    r11,[rsp+0x580]
   140037153:	mov    rbx,QWORD PTR [r11+0x18]
   140037157:	mov    rsi,QWORD PTR [r11+0x20]
   14003715b:	mov    rdi,QWORD PTR [r11+0x28]
   14003715f:	mov    rsp,r11
   140037162:	pop    rbp
   140037163:	ret    
   140037164:	mov    QWORD PTR [rsp+0x10],rbx
   140037169:	push   rdi
   14003716a:	sub    rsp,0x20
   14003716e:	call   0x140037c34
   140037173:	mov    rdi,rax
   140037176:	mov    ecx,DWORD PTR [rax+0xc8]
   14003717c:	test   DWORD PTR [rip+0x4e5de],ecx        # 0x140085760
   140037182:	je     0x140037197
   140037184:	cmp    QWORD PTR [rax+0xc0],0x0
   14003718c:	je     0x140037197
   14003718e:	mov    rbx,QWORD PTR [rax+0xb8]
   140037195:	jmp    0x140037203
   140037197:	mov    ecx,0xd
   14003719c:	call   0x14003a3a0
   1400371a1:	nop
   1400371a2:	mov    rbx,QWORD PTR [rdi+0xb8]
   1400371a9:	mov    QWORD PTR [rsp+0x30],rbx
   1400371ae:	cmp    rbx,QWORD PTR [rip+0x4e4ab]        # 0x140085660
   1400371b5:	je     0x1400371f9
   1400371b7:	test   rbx,rbx
   1400371ba:	je     0x1400371d7
   1400371bc:	lock dec DWORD PTR [rbx]
   1400371bf:	jne    0x1400371d7
   1400371c1:	lea    rax,[rip+0x4e068]        # 0x140085230
   1400371c8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400371cd:	cmp    rcx,rax
   1400371d0:	je     0x1400371d7
   1400371d2:	call   0x140033594
   1400371d7:	mov    rax,QWORD PTR [rip+0x4e482]        # 0x140085660
   1400371de:	mov    QWORD PTR [rdi+0xb8],rax
   1400371e5:	mov    rax,QWORD PTR [rip+0x4e474]        # 0x140085660
   1400371ec:	mov    QWORD PTR [rsp+0x30],rax
   1400371f1:	lock inc DWORD PTR [rax]
   1400371f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400371f9:	mov    ecx,0xd
   1400371fe:	call   0x14003a2a0
   140037203:	test   rbx,rbx
   140037206:	jne    0x140037210
   140037208:	lea    ecx,[rbx+0x20]
   14003720b:	call   0x140035184
   140037210:	mov    rax,rbx
   140037213:	mov    rbx,QWORD PTR [rsp+0x38]
   140037218:	add    rsp,0x20
   14003721c:	pop    rdi
   14003721d:	ret    
   14003721e:	int3   
   14003721f:	int3   
   140037220:	rex push rbx
   140037222:	sub    rsp,0x40
   140037226:	mov    ebx,ecx
   140037228:	lea    rcx,[rsp+0x20]
   14003722d:	xor    edx,edx
   14003722f:	call   0x14003370c
   140037234:	and    DWORD PTR [rip+0x525a5],0x0        # 0x1400897e0
   14003723b:	cmp    ebx,0xfffffffe
   14003723e:	jne    0x140037265
   140037240:	mov    DWORD PTR [rip+0x52596],0x1        # 0x1400897e0
   14003724a:	call   QWORD PTR [rip+0x31048]        # 0x140068298
   140037250:	cmp    BYTE PTR [rsp+0x38],0x0
   140037255:	je     0x1400372aa
   140037257:	mov    rcx,QWORD PTR [rsp+0x30]
   14003725c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140037263:	jmp    0x1400372aa
   140037265:	cmp    ebx,0xfffffffd
   140037268:	jne    0x14003727c
   14003726a:	mov    DWORD PTR [rip+0x5256c],0x1        # 0x1400897e0
   140037274:	call   QWORD PTR [rip+0x31026]        # 0x1400682a0
   14003727a:	jmp    0x140037250
   14003727c:	cmp    ebx,0xfffffffc
   14003727f:	jne    0x140037295
   140037281:	mov    rax,QWORD PTR [rsp+0x20]
   140037286:	mov    DWORD PTR [rip+0x52550],0x1        # 0x1400897e0
   140037290:	mov    eax,DWORD PTR [rax+0x4]
   140037293:	jmp    0x140037250
   140037295:	cmp    BYTE PTR [rsp+0x38],0x0
   14003729a:	je     0x1400372a8
   14003729c:	mov    rax,QWORD PTR [rsp+0x30]
   1400372a1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400372a8:	mov    eax,ebx
   1400372aa:	add    rsp,0x40
   1400372ae:	pop    rbx
   1400372af:	ret    
   1400372b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400372b5:	push   rbp
   1400372b6:	push   rsi
   1400372b7:	push   rdi
   1400372b8:	push   r12
   1400372ba:	push   r13
   1400372bc:	sub    rsp,0x40
   1400372c0:	mov    rax,QWORD PTR [rip+0x4dde1]        # 0x1400850a8
   1400372c7:	xor    rax,rsp
   1400372ca:	mov    QWORD PTR [rsp+0x38],rax
   1400372cf:	mov    rsi,rdx
   1400372d2:	call   0x140037220
   1400372d7:	xor    ebx,ebx
   1400372d9:	mov    edi,eax
   1400372db:	test   eax,eax
   1400372dd:	jne    0x1400372ec
   1400372df:	mov    rcx,rsi
   1400372e2:	call   0x140036ee8
   1400372e7:	jmp    0x140037502
   1400372ec:	lea    r13,[rip+0x4e37d]        # 0x140085670
   1400372f3:	mov    ecx,ebx
   1400372f5:	mov    rbp,rbx
   1400372f8:	mov    rax,r13
   1400372fb:	mov    r12d,0x1
   140037301:	cmp    DWORD PTR [rax],edi
   140037303:	je     0x14003742f
   140037309:	add    ecx,r12d
   14003730c:	add    rbp,r12
   14003730f:	add    rax,0x30
   140037313:	cmp    ecx,0x5
   140037316:	jb     0x140037301
   140037318:	cmp    edi,0xfde8
   14003731e:	je     0x140037427
   140037324:	cmp    edi,0xfde9
   14003732a:	je     0x140037427
   140037330:	movzx  ecx,di
   140037333:	call   QWORD PTR [rip+0x30f57]        # 0x140068290
   140037339:	test   eax,eax
   14003733b:	je     0x140037427
   140037341:	lea    rdx,[rsp+0x20]
   140037346:	mov    ecx,edi
   140037348:	call   QWORD PTR [rip+0x30f5a]        # 0x1400682a8
   14003734e:	test   eax,eax
   140037350:	je     0x14003741b
   140037356:	lea    rcx,[rsi+0x1c]
   14003735a:	xor    edx,edx
   14003735c:	mov    r8d,0x101
   140037362:	call   0x140036dc0
   140037367:	mov    DWORD PTR [rsi+0x4],edi
   14003736a:	mov    DWORD PTR [rsi+0xc],ebx
   14003736d:	cmp    DWORD PTR [rsp+0x20],r12d
   140037372:	jbe    0x140037404
   140037378:	lea    rax,[rsp+0x26]
   14003737d:	cmp    BYTE PTR [rsp+0x26],bl
   140037381:	je     0x1400373b0
   140037383:	cmp    BYTE PTR [rax+0x1],bl
   140037386:	je     0x1400373b0
   140037388:	movzx  edi,BYTE PTR [rax]
   14003738b:	movzx  ecx,BYTE PTR [rax+0x1]
   14003738f:	cmp    edi,ecx
   140037391:	ja     0x1400373a8
   140037393:	sub    ecx,edi
   140037395:	lea    rdx,[rdi+rsi*1+0x1d]
   14003739a:	add    ecx,r12d
   14003739d:	or     BYTE PTR [rdx],0x4
   1400373a0:	add    rdx,r12
   1400373a3:	sub    rcx,r12
   1400373a6:	jne    0x14003739d
   1400373a8:	add    rax,0x2
   1400373ac:	cmp    BYTE PTR [rax],bl
   1400373ae:	jne    0x140037383
   1400373b0:	lea    rax,[rsi+0x1e]
   1400373b4:	mov    ecx,0xfe
   1400373b9:	or     BYTE PTR [rax],0x8
   1400373bc:	add    rax,r12
   1400373bf:	sub    rcx,r12
   1400373c2:	jne    0x1400373b9
   1400373c4:	mov    ecx,DWORD PTR [rsi+0x4]
   1400373c7:	sub    ecx,0x3a4
   1400373cd:	je     0x1400373f6
   1400373cf:	sub    ecx,0x4
   1400373d2:	je     0x1400373ef
   1400373d4:	sub    ecx,0xd
   1400373d7:	je     0x1400373e8
   1400373d9:	dec    ecx
   1400373db:	je     0x1400373e1
   1400373dd:	mov    eax,ebx
   1400373df:	jmp    0x1400373fb
   1400373e1:	mov    eax,0x404
   1400373e6:	jmp    0x1400373fb
   1400373e8:	mov    eax,0x412
   1400373ed:	jmp    0x1400373fb
   1400373ef:	mov    eax,0x804
   1400373f4:	jmp    0x1400373fb
   1400373f6:	mov    eax,0x411
   1400373fb:	mov    DWORD PTR [rsi+0xc],eax
   1400373fe:	mov    DWORD PTR [rsi+0x8],r12d
   140037402:	jmp    0x140037407
   140037404:	mov    DWORD PTR [rsi+0x8],ebx
   140037407:	lea    rdi,[rsi+0x10]
   14003740b:	movzx  eax,bx
   14003740e:	mov    ecx,0x6
   140037413:	rep stos WORD PTR es:[rdi],ax
   140037416:	jmp    0x1400374fa
   14003741b:	cmp    DWORD PTR [rip+0x523bf],ebx        # 0x1400897e0
   140037421:	jne    0x1400372df
   140037427:	or     eax,0xffffffff
   14003742a:	jmp    0x140037504
   14003742f:	lea    rcx,[rsi+0x1c]
   140037433:	xor    edx,edx
   140037435:	mov    r8d,0x101
   14003743b:	call   0x140036dc0
   140037440:	lea    r10,[rbp+rbp*2+0x0]
   140037445:	lea    r11,[rip+0x4e21c]        # 0x140085668
   14003744c:	shl    r10,0x4
   140037450:	mov    ebp,0x4
   140037455:	lea    r8,[r10+r13*1+0x10]
   14003745a:	mov    rcx,r8
   14003745d:	cmp    BYTE PTR [r8],bl
   140037460:	je     0x140037493
   140037462:	cmp    BYTE PTR [rcx+0x1],bl
   140037465:	je     0x140037493
   140037467:	movzx  edx,BYTE PTR [rcx]
   14003746a:	movzx  eax,BYTE PTR [rcx+0x1]
   14003746e:	cmp    edx,eax
   140037470:	ja     0x14003748b
   140037472:	lea    r9,[rdx+rsi*1+0x1d]
   140037477:	mov    al,BYTE PTR [r11]
   14003747a:	add    edx,r12d
   14003747d:	or     BYTE PTR [r9],al
   140037480:	movzx  eax,BYTE PTR [rcx+0x1]
   140037484:	add    r9,r12
   140037487:	cmp    edx,eax
   140037489:	jbe    0x140037477
   14003748b:	add    rcx,0x2
   14003748f:	cmp    BYTE PTR [rcx],bl
   140037491:	jne    0x140037462
   140037493:	add    r8,0x8
   140037497:	add    r11,r12
   14003749a:	sub    rbp,r12
   14003749d:	jne    0x14003745a
   14003749f:	mov    DWORD PTR [rsi+0x4],edi
   1400374a2:	sub    edi,0x3a4
   1400374a8:	mov    DWORD PTR [rsi+0x8],r12d
   1400374ac:	je     0x1400374d1
   1400374ae:	sub    edi,0x4
   1400374b1:	je     0x1400374ca
   1400374b3:	sub    edi,0xd
   1400374b6:	je     0x1400374c3
   1400374b8:	dec    edi
   1400374ba:	jne    0x1400374d6
   1400374bc:	mov    ebx,0x404
   1400374c1:	jmp    0x1400374d6
   1400374c3:	mov    ebx,0x412
   1400374c8:	jmp    0x1400374d6
   1400374ca:	mov    ebx,0x804
   1400374cf:	jmp    0x1400374d6
   1400374d1:	mov    ebx,0x411
   1400374d6:	sub    r10,rsi
   1400374d9:	mov    DWORD PTR [rsi+0xc],ebx
   1400374dc:	lea    rcx,[rsi+0x10]
   1400374e0:	lea    rdi,[r10+r13*1-0xc]
   1400374e5:	mov    edx,0x6
   1400374ea:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400374ee:	mov    WORD PTR [rcx],ax
   1400374f1:	add    rcx,0x2
   1400374f5:	sub    rdx,r12
   1400374f8:	jne    0x1400374ea
   1400374fa:	mov    rcx,rsi
   1400374fd:	call   0x140036f74
   140037502:	xor    eax,eax
   140037504:	mov    rcx,QWORD PTR [rsp+0x38]
   140037509:	xor    rcx,rsp
   14003750c:	call   0x140032f00
   140037511:	mov    rbx,QWORD PTR [rsp+0x80]
   140037519:	add    rsp,0x40
   14003751d:	pop    r13
   14003751f:	pop    r12
   140037521:	pop    rdi
   140037522:	pop    rsi
   140037523:	pop    rbp
   140037524:	ret    
   140037525:	int3   
   140037526:	int3   
   140037527:	int3   
   140037528:	mov    rax,rsp
   14003752b:	mov    QWORD PTR [rax+0x8],rbx
   14003752f:	mov    QWORD PTR [rax+0x10],rsi
   140037533:	mov    QWORD PTR [rax+0x18],rdi
   140037537:	mov    QWORD PTR [rax+0x20],r12
   14003753b:	push   r13
   14003753d:	sub    rsp,0x30
   140037541:	mov    edi,ecx
   140037543:	or     r13d,0xffffffff
   140037547:	call   0x140037c34
   14003754c:	mov    rsi,rax
   14003754f:	call   0x140037164
   140037554:	mov    rbx,QWORD PTR [rsi+0xb8]
   14003755b:	mov    ecx,edi
   14003755d:	call   0x140037220
   140037562:	mov    r12d,eax
   140037565:	cmp    eax,DWORD PTR [rbx+0x4]
   140037568:	je     0x1400376e3
   14003756e:	mov    ecx,0x220
   140037573:	call   0x140039ea0
   140037578:	mov    rbx,rax
   14003757b:	xor    edi,edi
   14003757d:	test   rax,rax
   140037580:	je     0x1400376e8
   140037586:	mov    rdx,QWORD PTR [rsi+0xb8]
   14003758d:	mov    rcx,rax
   140037590:	mov    r8d,0x220
   140037596:	call   0x140033260
   14003759b:	mov    DWORD PTR [rbx],edi
   14003759d:	mov    rdx,rbx
   1400375a0:	mov    ecx,r12d
   1400375a3:	call   0x1400372b0
   1400375a8:	mov    r13d,eax
   1400375ab:	test   eax,eax
   1400375ad:	jne    0x1400376bd
   1400375b3:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400375ba:	lea    r12,[rip+0x4dc6f]        # 0x140085230
   1400375c1:	lock dec DWORD PTR [rcx]
   1400375c4:	jne    0x1400375d7
   1400375c6:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400375cd:	cmp    rcx,r12
   1400375d0:	je     0x1400375d7
   1400375d2:	call   0x140033594
   1400375d7:	mov    QWORD PTR [rsi+0xb8],rbx
   1400375de:	lock inc DWORD PTR [rbx]
   1400375e1:	test   BYTE PTR [rsi+0xc8],0x2
   1400375e8:	jne    0x1400376e8
   1400375ee:	test   BYTE PTR [rip+0x4e16b],0x1        # 0x140085760
   1400375f5:	jne    0x1400376e8
   1400375fb:	mov    esi,0xd
   140037600:	mov    ecx,esi
   140037602:	call   0x14003a3a0
   140037607:	nop
   140037608:	mov    eax,DWORD PTR [rbx+0x4]
   14003760b:	mov    DWORD PTR [rip+0x521e3],eax        # 0x1400897f4
   140037611:	mov    eax,DWORD PTR [rbx+0x8]
   140037614:	mov    DWORD PTR [rip+0x521de],eax        # 0x1400897f8
   14003761a:	mov    eax,DWORD PTR [rbx+0xc]
   14003761d:	mov    DWORD PTR [rip+0x521d9],eax        # 0x1400897fc
   140037623:	mov    edx,edi
   140037625:	lea    r8,[rip+0xfffffffffffc89d4]        # 0x140000000
   14003762c:	mov    DWORD PTR [rsp+0x20],edx
   140037630:	cmp    edx,0x5
   140037633:	jge    0x14003764a
   140037635:	movsxd rcx,edx
   140037638:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14003763d:	mov    WORD PTR [r8+rcx*2+0x897e8],ax
   140037646:	inc    edx
   140037648:	jmp    0x14003762c
   14003764a:	mov    edx,edi
   14003764c:	mov    DWORD PTR [rsp+0x20],edx
   140037650:	cmp    edx,0x101
   140037656:	jge    0x14003766b
   140037658:	movsxd rcx,edx
   14003765b:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14003765f:	mov    BYTE PTR [rcx+r8*1+0x85450],al
   140037667:	inc    edx
   140037669:	jmp    0x14003764c
   14003766b:	mov    DWORD PTR [rsp+0x20],edi
   14003766f:	cmp    edi,0x100
   140037675:	jge    0x14003768d
   140037677:	movsxd rcx,edi
   14003767a:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140037681:	mov    BYTE PTR [rcx+r8*1+0x85560],al
   140037689:	inc    edi
   14003768b:	jmp    0x14003766b
   14003768d:	mov    rax,QWORD PTR [rip+0x4dfcc]        # 0x140085660
   140037694:	lock dec DWORD PTR [rax]
   140037697:	jne    0x1400376aa
   140037699:	mov    rcx,QWORD PTR [rip+0x4dfc0]        # 0x140085660
   1400376a0:	cmp    rcx,r12
   1400376a3:	je     0x1400376aa
   1400376a5:	call   0x140033594
   1400376aa:	mov    QWORD PTR [rip+0x4dfaf],rbx        # 0x140085660
   1400376b1:	lock inc DWORD PTR [rbx]
   1400376b4:	mov    ecx,esi
   1400376b6:	call   0x14003a2a0
   1400376bb:	jmp    0x1400376e8
   1400376bd:	cmp    eax,0xffffffff
   1400376c0:	jne    0x1400376e8
   1400376c2:	lea    r12,[rip+0x4db67]        # 0x140085230
   1400376c9:	cmp    rbx,r12
   1400376cc:	je     0x1400376d6
   1400376ce:	mov    rcx,rbx
   1400376d1:	call   0x140033594
   1400376d6:	call   0x140036858
   1400376db:	mov    DWORD PTR [rax],0x16
   1400376e1:	jmp    0x1400376e8
   1400376e3:	xor    edi,edi
   1400376e5:	mov    r13d,edi
   1400376e8:	mov    eax,r13d
   1400376eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400376f0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400376f5:	mov    rdi,QWORD PTR [rsp+0x50]
   1400376fa:	mov    r12,QWORD PTR [rsp+0x58]
   1400376ff:	add    rsp,0x30
   140037703:	pop    r13
   140037705:	ret    
   140037706:	int3   
   140037707:	int3   
   140037708:	sub    rsp,0x28
   14003770c:	cmp    DWORD PTR [rip+0x548ad],0x0        # 0x14008bfc0
   140037713:	jne    0x140037729
   140037715:	mov    ecx,0xfffffffd
   14003771a:	call   0x140037528
   14003771f:	mov    DWORD PTR [rip+0x54897],0x1        # 0x14008bfc0
   140037729:	xor    eax,eax
   14003772b:	add    rsp,0x28
   14003772f:	ret    
   140037730:	lock inc DWORD PTR [rcx]
   140037733:	mov    rax,QWORD PTR [rcx+0x110]
   14003773a:	test   rax,rax
   14003773d:	je     0x140037742
   14003773f:	lock inc DWORD PTR [rax]
   140037742:	mov    rax,QWORD PTR [rcx+0x120]
   140037749:	test   rax,rax
   14003774c:	je     0x140037751
   14003774e:	lock inc DWORD PTR [rax]
   140037751:	mov    rax,QWORD PTR [rcx+0x118]
   140037758:	test   rax,rax
   14003775b:	je     0x140037760
   14003775d:	lock inc DWORD PTR [rax]
   140037760:	mov    rax,QWORD PTR [rcx+0x130]
   140037767:	test   rax,rax
   14003776a:	je     0x14003776f
   14003776c:	lock inc DWORD PTR [rax]
   14003776f:	lea    rax,[rcx+0x58]
   140037773:	mov    r8d,0x6
   140037779:	lea    rdx,[rip+0x4dfe4]        # 0x140085764
   140037780:	cmp    QWORD PTR [rax-0x10],rdx
   140037784:	je     0x140037791
   140037786:	mov    rdx,QWORD PTR [rax]
   140037789:	test   rdx,rdx
   14003778c:	je     0x140037791
   14003778e:	lock inc DWORD PTR [rdx]
   140037791:	cmp    QWORD PTR [rax-0x8],0x0
   140037796:	je     0x1400377a4
   140037798:	mov    rdx,QWORD PTR [rax+0x8]
   14003779c:	test   rdx,rdx
   14003779f:	je     0x1400377a4
   1400377a1:	lock inc DWORD PTR [rdx]
   1400377a4:	add    rax,0x20
   1400377a8:	dec    r8
   1400377ab:	jne    0x140037779
   1400377ad:	mov    rax,QWORD PTR [rcx+0x158]
   1400377b4:	lock inc DWORD PTR [rax+0x160]
   1400377bb:	ret    
   1400377bc:	test   rcx,rcx
   1400377bf:	je     0x14003785c
   1400377c5:	or     r9d,0xffffffff
   1400377c9:	lock add DWORD PTR [rcx],r9d
   1400377cd:	mov    rax,QWORD PTR [rcx+0x110]
   1400377d4:	test   rax,rax
   1400377d7:	je     0x1400377dd
   1400377d9:	lock add DWORD PTR [rax],r9d
   1400377dd:	mov    rax,QWORD PTR [rcx+0x120]
   1400377e4:	test   rax,rax
   1400377e7:	je     0x1400377ed
   1400377e9:	lock add DWORD PTR [rax],r9d
   1400377ed:	mov    rax,QWORD PTR [rcx+0x118]
   1400377f4:	test   rax,rax
   1400377f7:	je     0x1400377fd
   1400377f9:	lock add DWORD PTR [rax],r9d
   1400377fd:	mov    rax,QWORD PTR [rcx+0x130]
   140037804:	test   rax,rax
   140037807:	je     0x14003780d
   140037809:	lock add DWORD PTR [rax],r9d
   14003780d:	lea    rax,[rcx+0x58]
   140037811:	mov    r8d,0x6
   140037817:	lea    rdx,[rip+0x4df46]        # 0x140085764
   14003781e:	cmp    QWORD PTR [rax-0x10],rdx
   140037822:	je     0x140037830
   140037824:	mov    rdx,QWORD PTR [rax]
   140037827:	test   rdx,rdx
   14003782a:	je     0x140037830
   14003782c:	lock add DWORD PTR [rdx],r9d
   140037830:	cmp    QWORD PTR [rax-0x8],0x0
   140037835:	je     0x140037844
   140037837:	mov    rdx,QWORD PTR [rax+0x8]
   14003783b:	test   rdx,rdx
   14003783e:	je     0x140037844
   140037840:	lock add DWORD PTR [rdx],r9d
   140037844:	add    rax,0x20
   140037848:	dec    r8
   14003784b:	jne    0x140037817
   14003784d:	mov    rax,QWORD PTR [rcx+0x158]
   140037854:	lock add DWORD PTR [rax+0x160],r9d
   14003785c:	mov    rax,rcx
   14003785f:	ret    
   140037860:	mov    QWORD PTR [rsp+0x8],rbx
   140037865:	mov    QWORD PTR [rsp+0x10],rsi
   14003786a:	push   rdi
   14003786b:	sub    rsp,0x20
   14003786f:	mov    rax,QWORD PTR [rcx+0x128]
   140037876:	mov    rbx,rcx
   140037879:	test   rax,rax
   14003787c:	je     0x1400378f7
   14003787e:	lea    rcx,[rip+0x4eb1b]        # 0x1400863a0
   140037885:	cmp    rax,rcx
   140037888:	je     0x1400378f7
   14003788a:	mov    rax,QWORD PTR [rbx+0x110]
   140037891:	test   rax,rax
   140037894:	je     0x1400378f7
   140037896:	cmp    DWORD PTR [rax],0x0
   140037899:	jne    0x1400378f7
   14003789b:	mov    rcx,QWORD PTR [rbx+0x120]
   1400378a2:	test   rcx,rcx
   1400378a5:	je     0x1400378bd
   1400378a7:	cmp    DWORD PTR [rcx],0x0
   1400378aa:	jne    0x1400378bd
   1400378ac:	call   0x140033594
   1400378b1:	mov    rcx,QWORD PTR [rbx+0x128]
   1400378b8:	call   0x14003e1f8
   1400378bd:	mov    rcx,QWORD PTR [rbx+0x118]
   1400378c4:	test   rcx,rcx
   1400378c7:	je     0x1400378df
   1400378c9:	cmp    DWORD PTR [rcx],0x0
   1400378cc:	jne    0x1400378df
   1400378ce:	call   0x140033594
   1400378d3:	mov    rcx,QWORD PTR [rbx+0x128]
   1400378da:	call   0x14003e18c
   1400378df:	mov    rcx,QWORD PTR [rbx+0x110]
   1400378e6:	call   0x140033594
   1400378eb:	mov    rcx,QWORD PTR [rbx+0x128]
   1400378f2:	call   0x140033594
   1400378f7:	mov    rax,QWORD PTR [rbx+0x130]
   1400378fe:	test   rax,rax
   140037901:	je     0x14003794a
   140037903:	cmp    DWORD PTR [rax],0x0
   140037906:	jne    0x14003794a
   140037908:	mov    rcx,QWORD PTR [rbx+0x138]
   14003790f:	sub    rcx,0xfe
   140037916:	call   0x140033594
   14003791b:	mov    rcx,QWORD PTR [rbx+0x148]
   140037922:	mov    edi,0x80
   140037927:	sub    rcx,rdi
   14003792a:	call   0x140033594
   14003792f:	mov    rcx,QWORD PTR [rbx+0x150]
   140037936:	sub    rcx,rdi
   140037939:	call   0x140033594
   14003793e:	mov    rcx,QWORD PTR [rbx+0x130]
   140037945:	call   0x140033594
   14003794a:	mov    rcx,QWORD PTR [rbx+0x158]
   140037951:	lea    rax,[rip+0x4de18]        # 0x140085770
   140037958:	cmp    rcx,rax
   14003795b:	je     0x140037977
   14003795d:	cmp    DWORD PTR [rcx+0x160],0x0
   140037964:	jne    0x140037977
   140037966:	call   0x14003dd9c
   14003796b:	mov    rcx,QWORD PTR [rbx+0x158]
   140037972:	call   0x140033594
   140037977:	lea    rdi,[rbx+0x58]
   14003797b:	mov    esi,0x6
   140037980:	lea    rax,[rip+0x4dddd]        # 0x140085764
   140037987:	cmp    QWORD PTR [rdi-0x10],rax
   14003798b:	je     0x14003799f
   14003798d:	mov    rcx,QWORD PTR [rdi]
   140037990:	test   rcx,rcx
   140037993:	je     0x14003799f
   140037995:	cmp    DWORD PTR [rcx],0x0
   140037998:	jne    0x14003799f
   14003799a:	call   0x140033594
   14003799f:	cmp    QWORD PTR [rdi-0x8],0x0
   1400379a4:	je     0x1400379b9
   1400379a6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400379aa:	test   rcx,rcx
   1400379ad:	je     0x1400379b9
   1400379af:	cmp    DWORD PTR [rcx],0x0
   1400379b2:	jne    0x1400379b9
   1400379b4:	call   0x140033594
   1400379b9:	add    rdi,0x20
   1400379bd:	dec    rsi
   1400379c0:	jne    0x140037980
   1400379c2:	mov    rcx,rbx
   1400379c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400379ca:	mov    rsi,QWORD PTR [rsp+0x38]
   1400379cf:	add    rsp,0x20
   1400379d3:	pop    rdi
   1400379d4:	jmp    0x140033594
   1400379d9:	int3   
   1400379da:	int3   
   1400379db:	int3   
   1400379dc:	rex push rbx
   1400379de:	sub    rsp,0x20
   1400379e2:	mov    rbx,rdx
   1400379e5:	test   rdx,rdx
   1400379e8:	je     0x140037a2b
   1400379ea:	test   rcx,rcx
   1400379ed:	je     0x140037a2b
   1400379ef:	mov    r10,QWORD PTR [rcx]
   1400379f2:	cmp    r10,rdx
   1400379f5:	je     0x140037a26
   1400379f7:	mov    QWORD PTR [rcx],rdx
   1400379fa:	mov    rcx,rdx
   1400379fd:	call   0x140037730
   140037a02:	test   r10,r10
   140037a05:	je     0x140037a26
   140037a07:	mov    rcx,r10
   140037a0a:	call   0x1400377bc
   140037a0f:	cmp    DWORD PTR [r10],0x0
   140037a13:	jne    0x140037a26
   140037a15:	lea    rax,[rip+0x4e014]        # 0x140085a30
   140037a1c:	cmp    r10,rax
   140037a1f:	je     0x140037a26
   140037a21:	call   0x140037860
   140037a26:	mov    rax,rbx
   140037a29:	jmp    0x140037a2d
   140037a2b:	xor    eax,eax
   140037a2d:	add    rsp,0x20
   140037a31:	pop    rbx
   140037a32:	ret    
   140037a33:	int3   
   140037a34:	rex push rbx
   140037a36:	sub    rsp,0x20
   140037a3a:	call   0x140037c34
   140037a3f:	mov    rbx,rax
   140037a42:	mov    ecx,DWORD PTR [rax+0xc8]
   140037a48:	test   DWORD PTR [rip+0x4dd12],ecx        # 0x140085760
   140037a4e:	je     0x140037a68
   140037a50:	cmp    QWORD PTR [rax+0xc0],0x0
   140037a58:	je     0x140037a68
   140037a5a:	call   0x140037c34
   140037a5f:	mov    rbx,QWORD PTR [rax+0xc0]
   140037a66:	jmp    0x140037a93
   140037a68:	mov    ecx,0xc
   140037a6d:	call   0x14003a3a0
   140037a72:	nop
   140037a73:	lea    rcx,[rbx+0xc0]
   140037a7a:	mov    rdx,QWORD PTR [rip+0x4e10f]        # 0x140085b90
   140037a81:	call   0x1400379dc
   140037a86:	mov    rbx,rax
   140037a89:	mov    ecx,0xc
   140037a8e:	call   0x14003a2a0
   140037a93:	test   rbx,rbx
   140037a96:	jne    0x140037aa0
   140037a98:	lea    ecx,[rbx+0x20]
   140037a9b:	call   0x140035184
   140037aa0:	mov    rax,rbx
   140037aa3:	add    rsp,0x20
   140037aa7:	pop    rbx
   140037aa8:	ret    
   140037aa9:	int3   
   140037aaa:	int3   
   140037aab:	int3   
   140037aac:	xor    ecx,ecx
   140037aae:	rex.W jmp QWORD PTR [rip+0x309ab]        # 0x140068460
   140037ab5:	int3   
   140037ab6:	int3   
   140037ab7:	int3   
   140037ab8:	rex.W jmp QWORD PTR [rip+0x307c9]        # 0x140068288
   140037abf:	int3   
   140037ac0:	mov    eax,DWORD PTR [rip+0x4e0e2]        # 0x140085ba8
   140037ac6:	ret    
   140037ac7:	int3   
   140037ac8:	rex.W jmp QWORD PTR [rip+0x307b1]        # 0x140068280
   140037acf:	int3   
   140037ad0:	sub    rsp,0x28
   140037ad4:	mov    ecx,DWORD PTR [rip+0x4e0ce]        # 0x140085ba8
   140037ada:	cmp    ecx,0xffffffff
   140037add:	je     0x140037aec
   140037adf:	call   QWORD PTR [rip+0x30793]        # 0x140068278
   140037ae5:	or     DWORD PTR [rip+0x4e0bc],0xffffffff        # 0x140085ba8
   140037aec:	add    rsp,0x28
   140037af0:	jmp    0x14003a218
   140037af5:	int3   
   140037af6:	int3   
   140037af7:	int3   
   140037af8:	mov    QWORD PTR [rsp+0x8],rbx
   140037afd:	push   rdi
   140037afe:	sub    rsp,0x20
   140037b02:	mov    rdi,rdx
   140037b05:	mov    rbx,rcx
   140037b08:	lea    rax,[rip+0x31e31]        # 0x140069940
   140037b0f:	mov    QWORD PTR [rcx+0xa0],rax
   140037b16:	and    DWORD PTR [rcx+0x10],0x0
   140037b1a:	mov    DWORD PTR [rcx+0x1c],0x1
   140037b21:	mov    DWORD PTR [rcx+0xc8],0x1
   140037b2b:	mov    BYTE PTR [rcx+0x174],0x43
   140037b32:	mov    BYTE PTR [rcx+0x1f7],0x43
   140037b39:	lea    rax,[rip+0x4d6f0]        # 0x140085230
   140037b40:	mov    QWORD PTR [rcx+0xb8],rax
   140037b47:	mov    ecx,0xd
   140037b4c:	call   0x14003a3a0
   140037b51:	nop
   140037b52:	mov    rax,QWORD PTR [rbx+0xb8]
   140037b59:	lock inc DWORD PTR [rax]
   140037b5c:	mov    ecx,0xd
   140037b61:	call   0x14003a2a0
   140037b66:	mov    ecx,0xc
   140037b6b:	call   0x14003a3a0
   140037b70:	nop
   140037b71:	mov    QWORD PTR [rbx+0xc0],rdi
   140037b78:	test   rdi,rdi
   140037b7b:	jne    0x140037b8b
   140037b7d:	mov    rax,QWORD PTR [rip+0x4e00c]        # 0x140085b90
   140037b84:	mov    QWORD PTR [rbx+0xc0],rax
   140037b8b:	mov    rcx,QWORD PTR [rbx+0xc0]
   140037b92:	call   0x140037730
   140037b97:	nop
   140037b98:	mov    ecx,0xc
   140037b9d:	call   0x14003a2a0
   140037ba2:	mov    rbx,QWORD PTR [rsp+0x30]
   140037ba7:	add    rsp,0x20
   140037bab:	pop    rdi
   140037bac:	ret    
   140037bad:	int3   
   140037bae:	int3   
   140037baf:	int3   
   140037bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140037bb5:	push   rdi
   140037bb6:	sub    rsp,0x20
   140037bba:	call   QWORD PTR [rip+0x30800]        # 0x1400683c0
   140037bc0:	mov    ecx,DWORD PTR [rip+0x4dfe2]        # 0x140085ba8
   140037bc6:	mov    edi,eax
   140037bc8:	call   QWORD PTR [rip+0x306ba]        # 0x140068288
   140037bce:	mov    rbx,rax
   140037bd1:	test   rax,rax
   140037bd4:	jne    0x140037c1e
   140037bd6:	lea    ecx,[rax+0x1]
   140037bd9:	mov    edx,0x2c8
   140037bde:	call   0x140039f20
   140037be3:	mov    rbx,rax
   140037be6:	test   rax,rax
   140037be9:	je     0x140037c1e
   140037beb:	mov    ecx,DWORD PTR [rip+0x4dfb7]        # 0x140085ba8
   140037bf1:	mov    rdx,rax
   140037bf4:	call   QWORD PTR [rip+0x30686]        # 0x140068280
   140037bfa:	mov    rcx,rbx
   140037bfd:	test   eax,eax
   140037bff:	je     0x140037c17
   140037c01:	xor    edx,edx
   140037c03:	call   0x140037af8
   140037c08:	call   QWORD PTR [rip+0x3056a]        # 0x140068178
   140037c0e:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140037c13:	mov    DWORD PTR [rbx],eax
   140037c15:	jmp    0x140037c1e
   140037c17:	call   0x140033594
   140037c1c:	xor    ebx,ebx
   140037c1e:	mov    ecx,edi
   140037c20:	call   QWORD PTR [rip+0x30542]        # 0x140068168
   140037c26:	mov    rax,rbx
   140037c29:	mov    rbx,QWORD PTR [rsp+0x30]
   140037c2e:	add    rsp,0x20
   140037c32:	pop    rdi
   140037c33:	ret    
   140037c34:	rex push rbx
   140037c36:	sub    rsp,0x20
   140037c3a:	call   0x140037bb0
   140037c3f:	mov    rbx,rax
   140037c42:	test   rax,rax
   140037c45:	jne    0x140037c4f
   140037c47:	lea    ecx,[rax+0x10]
   140037c4a:	call   0x140035184
   140037c4f:	mov    rax,rbx
   140037c52:	add    rsp,0x20
   140037c56:	pop    rbx
   140037c57:	ret    
   140037c58:	test   rcx,rcx
   140037c5b:	je     0x140037d8a
   140037c61:	mov    QWORD PTR [rsp+0x10],rbx
   140037c66:	push   rdi
   140037c67:	sub    rsp,0x20
   140037c6b:	mov    rbx,rcx
   140037c6e:	mov    rcx,QWORD PTR [rcx+0x38]
   140037c72:	test   rcx,rcx
   140037c75:	je     0x140037c7c
   140037c77:	call   0x140033594
   140037c7c:	mov    rcx,QWORD PTR [rbx+0x48]
   140037c80:	test   rcx,rcx
   140037c83:	je     0x140037c8a
   140037c85:	call   0x140033594
   140037c8a:	mov    rcx,QWORD PTR [rbx+0x58]
   140037c8e:	test   rcx,rcx
   140037c91:	je     0x140037c98
   140037c93:	call   0x140033594
   140037c98:	mov    rcx,QWORD PTR [rbx+0x68]
   140037c9c:	test   rcx,rcx
   140037c9f:	je     0x140037ca6
   140037ca1:	call   0x140033594
   140037ca6:	mov    rcx,QWORD PTR [rbx+0x70]
   140037caa:	test   rcx,rcx
   140037cad:	je     0x140037cb4
   140037caf:	call   0x140033594
   140037cb4:	mov    rcx,QWORD PTR [rbx+0x78]
   140037cb8:	test   rcx,rcx
   140037cbb:	je     0x140037cc2
   140037cbd:	call   0x140033594
   140037cc2:	mov    rcx,QWORD PTR [rbx+0x80]
   140037cc9:	test   rcx,rcx
   140037ccc:	je     0x140037cd3
   140037cce:	call   0x140033594
   140037cd3:	mov    rcx,QWORD PTR [rbx+0xa0]
   140037cda:	lea    rax,[rip+0x31c5f]        # 0x140069940
   140037ce1:	cmp    rcx,rax
   140037ce4:	je     0x140037ceb
   140037ce6:	call   0x140033594
   140037ceb:	mov    edi,0xd
   140037cf0:	mov    ecx,edi
   140037cf2:	call   0x14003a3a0
   140037cf7:	nop
   140037cf8:	mov    rcx,QWORD PTR [rbx+0xb8]
   140037cff:	mov    QWORD PTR [rsp+0x30],rcx
   140037d04:	test   rcx,rcx
   140037d07:	je     0x140037d25
   140037d09:	lock dec DWORD PTR [rcx]
   140037d0c:	jne    0x140037d25
   140037d0e:	lea    rax,[rip+0x4d51b]        # 0x140085230
   140037d15:	mov    rcx,QWORD PTR [rsp+0x30]
   140037d1a:	cmp    rcx,rax
   140037d1d:	je     0x140037d25
   140037d1f:	call   0x140033594
   140037d24:	nop
   140037d25:	mov    ecx,edi
   140037d27:	call   0x14003a2a0
   140037d2c:	mov    ecx,0xc
   140037d31:	call   0x14003a3a0
   140037d36:	nop
   140037d37:	mov    rdi,QWORD PTR [rbx+0xc0]
   140037d3e:	test   rdi,rdi
   140037d41:	je     0x140037d6e
   140037d43:	mov    rcx,rdi
   140037d46:	call   0x1400377bc
   140037d4b:	cmp    rdi,QWORD PTR [rip+0x4de3e]        # 0x140085b90
   140037d52:	je     0x140037d6e
   140037d54:	lea    rax,[rip+0x4dcd5]        # 0x140085a30
   140037d5b:	cmp    rdi,rax
   140037d5e:	je     0x140037d6e
   140037d60:	cmp    DWORD PTR [rdi],0x0
   140037d63:	jne    0x140037d6e
   140037d65:	mov    rcx,rdi
   140037d68:	call   0x140037860
   140037d6d:	nop
   140037d6e:	mov    ecx,0xc
   140037d73:	call   0x14003a2a0
   140037d78:	mov    rcx,rbx
   140037d7b:	call   0x140033594
   140037d80:	mov    rbx,QWORD PTR [rsp+0x38]
   140037d85:	add    rsp,0x20
   140037d89:	pop    rdi
   140037d8a:	ret    
   140037d8b:	int3   
   140037d8c:	rex push rbx
   140037d8e:	sub    rsp,0x20
   140037d92:	mov    rbx,rcx
   140037d95:	mov    ecx,DWORD PTR [rip+0x4de0d]        # 0x140085ba8
   140037d9b:	cmp    ecx,0xffffffff
   140037d9e:	je     0x140037dc4
   140037da0:	test   rbx,rbx
   140037da3:	jne    0x140037db4
   140037da5:	call   QWORD PTR [rip+0x304dd]        # 0x140068288
   140037dab:	mov    ecx,DWORD PTR [rip+0x4ddf7]        # 0x140085ba8
   140037db1:	mov    rbx,rax
   140037db4:	xor    edx,edx
   140037db6:	call   QWORD PTR [rip+0x304c4]        # 0x140068280
   140037dbc:	mov    rcx,rbx
   140037dbf:	call   0x140037c58
   140037dc4:	add    rsp,0x20
   140037dc8:	pop    rbx
   140037dc9:	ret    
   140037dca:	int3   
   140037dcb:	int3   
   140037dcc:	rex push rbx
   140037dce:	sub    rsp,0x20
   140037dd2:	call   0x140034e58
   140037dd7:	call   0x14003a194
   140037ddc:	test   eax,eax
   140037dde:	je     0x140037e40
   140037de0:	lea    rcx,[rip+0xfffffffffffffe71]        # 0x140037c58
   140037de7:	call   QWORD PTR [rip+0x30483]        # 0x140068270
   140037ded:	mov    DWORD PTR [rip+0x4ddb5],eax        # 0x140085ba8
   140037df3:	cmp    eax,0xffffffff
   140037df6:	je     0x140037e40
   140037df8:	mov    edx,0x2c8
   140037dfd:	mov    ecx,0x1
   140037e02:	call   0x140039f20
   140037e07:	mov    rbx,rax
   140037e0a:	test   rax,rax
   140037e0d:	je     0x140037e40
   140037e0f:	mov    ecx,DWORD PTR [rip+0x4dd93]        # 0x140085ba8
   140037e15:	mov    rdx,rax
   140037e18:	call   QWORD PTR [rip+0x30462]        # 0x140068280
   140037e1e:	test   eax,eax
   140037e20:	je     0x140037e40
   140037e22:	xor    edx,edx
   140037e24:	mov    rcx,rbx
   140037e27:	call   0x140037af8
   140037e2c:	call   QWORD PTR [rip+0x30346]        # 0x140068178
   140037e32:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140037e37:	mov    DWORD PTR [rbx],eax
   140037e39:	mov    eax,0x1
   140037e3e:	jmp    0x140037e47
   140037e40:	call   0x140037ad0
   140037e45:	xor    eax,eax
   140037e47:	add    rsp,0x20
   140037e4b:	pop    rbx
   140037e4c:	ret    
   140037e4d:	int3   
   140037e4e:	int3   
   140037e4f:	int3   
   140037e50:	mov    rax,rsp
   140037e53:	mov    QWORD PTR [rax+0x10],rbx
   140037e57:	mov    QWORD PTR [rax+0x18],rbp
   140037e5b:	mov    QWORD PTR [rax+0x20],rsi
   140037e5f:	mov    DWORD PTR [rax+0x8],ecx
   140037e62:	push   rdi
   140037e63:	sub    rsp,0x20
   140037e67:	mov    rcx,rdx
   140037e6a:	mov    rbx,rdx
   140037e6d:	call   0x14003c3f8
   140037e72:	mov    ecx,DWORD PTR [rbx+0x18]
   140037e75:	movsxd rsi,eax
   140037e78:	test   cl,0x82
   140037e7b:	jne    0x140037e94
   140037e7d:	call   0x140036858
   140037e82:	mov    DWORD PTR [rax],0x9
   140037e88:	or     DWORD PTR [rbx+0x18],0x20
   140037e8c:	or     eax,0xffffffff
   140037e8f:	jmp    0x140037fc8
   140037e94:	test   cl,0x40
   140037e97:	je     0x140037ea6
   140037e99:	call   0x140036858
   140037e9e:	mov    DWORD PTR [rax],0x22
   140037ea4:	jmp    0x140037e88
   140037ea6:	xor    edi,edi
   140037ea8:	test   cl,0x1
   140037eab:	je     0x140037ec6
   140037ead:	mov    DWORD PTR [rbx+0x8],edi
   140037eb0:	test   cl,0x10
   140037eb3:	je     0x140037f42
   140037eb9:	mov    rax,QWORD PTR [rbx+0x10]
   140037ebd:	and    ecx,0xfffffffe
   140037ec0:	mov    QWORD PTR [rbx],rax
   140037ec3:	mov    DWORD PTR [rbx+0x18],ecx
   140037ec6:	mov    eax,DWORD PTR [rbx+0x18]
   140037ec9:	mov    DWORD PTR [rbx+0x8],edi
   140037ecc:	and    eax,0xffffffef
   140037ecf:	or     eax,0x2
   140037ed2:	mov    DWORD PTR [rbx+0x18],eax
   140037ed5:	test   eax,0x10c
   140037eda:	jne    0x140037f0b
   140037edc:	call   0x14003b3c8
   140037ee1:	add    rax,0x30
   140037ee5:	cmp    rbx,rax
   140037ee8:	je     0x140037ef8
   140037eea:	call   0x14003b3c8
   140037eef:	add    rax,0x60
   140037ef3:	cmp    rbx,rax
   140037ef6:	jne    0x140037f03
   140037ef8:	mov    ecx,esi
   140037efa:	call   0x14003e5b8
   140037eff:	test   eax,eax
   140037f01:	jne    0x140037f0b
   140037f03:	mov    rcx,rbx
   140037f06:	call   0x14003e564
   140037f0b:	test   DWORD PTR [rbx+0x18],0x108
   140037f12:	je     0x140037fa5
   140037f18:	mov    ebp,DWORD PTR [rbx]
   140037f1a:	mov    rdx,QWORD PTR [rbx+0x10]
   140037f1e:	sub    ebp,DWORD PTR [rbx+0x10]
   140037f21:	lea    rax,[rdx+0x1]
   140037f25:	mov    QWORD PTR [rbx],rax
   140037f28:	mov    eax,DWORD PTR [rbx+0x24]
   140037f2b:	dec    eax
   140037f2d:	mov    DWORD PTR [rbx+0x8],eax
   140037f30:	test   ebp,ebp
   140037f32:	jle    0x140037f4d
   140037f34:	mov    r8d,ebp
   140037f37:	mov    ecx,esi
   140037f39:	call   0x14003d3c0
   140037f3e:	mov    edi,eax
   140037f40:	jmp    0x140037f99
   140037f42:	or     ecx,0x20
   140037f45:	mov    DWORD PTR [rbx+0x18],ecx
   140037f48:	jmp    0x140037e8c
   140037f4d:	cmp    esi,0xffffffff
   140037f50:	je     0x140037f75
   140037f52:	cmp    esi,0xfffffffe
   140037f55:	je     0x140037f75
   140037f57:	mov    rcx,rsi
   140037f5a:	mov    rax,rsi
   140037f5d:	lea    rdx,[rip+0x53e3c]        # 0x14008bda0
   140037f64:	and    ecx,0x1f
   140037f67:	sar    rax,0x5
   140037f6b:	imul   rcx,rcx,0x58
   140037f6f:	add    rcx,QWORD PTR [rdx+rax*8]
   140037f73:	jmp    0x140037f7c
   140037f75:	lea    rcx,[rip+0x4dee4]        # 0x140085e60
   140037f7c:	test   BYTE PTR [rcx+0x8],0x20
   140037f80:	je     0x140037f99
   140037f82:	xor    edx,edx
   140037f84:	mov    ecx,esi
   140037f86:	lea    r8d,[rdx+0x2]
   140037f8a:	call   0x14003e480
   140037f8f:	cmp    rax,0xffffffffffffffff
   140037f93:	je     0x140037e88
   140037f99:	mov    rcx,QWORD PTR [rbx+0x10]
   140037f9d:	mov    al,BYTE PTR [rsp+0x30]
   140037fa1:	mov    BYTE PTR [rcx],al
   140037fa3:	jmp    0x140037fbb
   140037fa5:	mov    ebp,0x1
   140037faa:	lea    rdx,[rsp+0x30]
   140037faf:	mov    ecx,esi
   140037fb1:	mov    r8d,ebp
   140037fb4:	call   0x14003d3c0
   140037fb9:	mov    edi,eax
   140037fbb:	cmp    edi,ebp
   140037fbd:	jne    0x140037e88
   140037fc3:	movzx  eax,BYTE PTR [rsp+0x30]
   140037fc8:	mov    rbx,QWORD PTR [rsp+0x38]
   140037fcd:	mov    rbp,QWORD PTR [rsp+0x40]
   140037fd2:	mov    rsi,QWORD PTR [rsp+0x48]
   140037fd7:	add    rsp,0x20
   140037fdb:	pop    rdi
   140037fdc:	ret    
   140037fdd:	int3   
   140037fde:	int3   
   140037fdf:	int3   
   140037fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140037fe5:	mov    QWORD PTR [rsp+0x10],rbp
   140037fea:	mov    QWORD PTR [rsp+0x18],rsi
   140037fef:	push   rdi
   140037ff0:	push   r12
   140037ff2:	push   r13
   140037ff4:	sub    rsp,0x20
   140037ff8:	test   BYTE PTR [r8+0x18],0x40
   140037ffd:	mov    rbx,QWORD PTR [rsp+0x60]
   140038002:	mov    rdi,r9
   140038005:	mov    r12d,DWORD PTR [rbx]
   140038008:	mov    rbp,r8
   14003800b:	mov    esi,edx
   14003800d:	mov    r13,rcx
   140038010:	je     0x14003801e
   140038012:	cmp    QWORD PTR [r8+0x10],0x0
   140038017:	jne    0x14003801e
   140038019:	add    DWORD PTR [r9],edx
   14003801c:	jmp    0x14003805c
   14003801e:	and    DWORD PTR [rbx],0x0
   140038021:	test   edx,edx
   140038023:	jle    0x140038059
   140038025:	mov    cl,BYTE PTR [r13+0x0]
   140038029:	mov    r8,rdi
   14003802c:	mov    rdx,rbp
   14003802f:	dec    esi
   140038031:	call   0x140038b24
   140038036:	inc    r13
   140038039:	cmp    DWORD PTR [rdi],0xffffffff
   14003803c:	jne    0x140038050
   14003803e:	cmp    DWORD PTR [rbx],0x2a
   140038041:	jne    0x140038054
   140038043:	mov    r8,rdi
   140038046:	mov    rdx,rbp
   140038049:	mov    cl,0x3f
   14003804b:	call   0x140038b24
   140038050:	test   esi,esi
   140038052:	jg     0x140038025
   140038054:	cmp    DWORD PTR [rbx],0x0
   140038057:	jne    0x14003805c
   140038059:	mov    DWORD PTR [rbx],r12d
   14003805c:	mov    rbx,QWORD PTR [rsp+0x40]
   140038061:	mov    rbp,QWORD PTR [rsp+0x48]
   140038066:	mov    rsi,QWORD PTR [rsp+0x50]
   14003806b:	add    rsp,0x20
   14003806f:	pop    r13
   140038071:	pop    r12
   140038073:	pop    rdi
   140038074:	ret    
   140038075:	int3   
   140038076:	int3   
   140038077:	int3   
   140038078:	mov    QWORD PTR [rsp+0x18],rbx
   14003807d:	push   rbp
   14003807e:	push   rsi
   14003807f:	push   rdi
   140038080:	push   r12
   140038082:	push   r13
   140038084:	push   r14
   140038086:	push   r15
   140038088:	lea    rbp,[rsp-0x1d0]
   140038090:	sub    rsp,0x2d0
   140038097:	mov    rax,QWORD PTR [rip+0x4d00a]        # 0x1400850a8
   14003809e:	xor    rax,rsp
   1400380a1:	mov    QWORD PTR [rbp+0x1c8],rax
   1400380a8:	xor    eax,eax
   1400380aa:	mov    rbx,rcx
   1400380ad:	mov    QWORD PTR [rsp+0x70],rcx
   1400380b2:	mov    QWORD PTR [rsp+0x68],rdx
   1400380b7:	lea    rcx,[rbp-0x80]
   1400380bb:	mov    rdx,r8
   1400380be:	mov    r14,r9
   1400380c1:	mov    DWORD PTR [rsp+0x64],eax
   1400380c5:	mov    r13d,eax
   1400380c8:	mov    DWORD PTR [rsp+0x58],eax
   1400380cc:	mov    edi,eax
   1400380ce:	mov    DWORD PTR [rsp+0x44],eax
   1400380d2:	mov    DWORD PTR [rsp+0x4c],eax
   1400380d6:	mov    DWORD PTR [rsp+0x5c],eax
   1400380da:	mov    DWORD PTR [rsp+0x54],eax
   1400380de:	call   0x14003370c
   1400380e3:	call   0x140036858
   1400380e8:	xor    r10d,r10d
   1400380eb:	mov    QWORD PTR [rbp-0x60],rax
   1400380ef:	test   rbx,rbx
   1400380f2:	jne    0x140038120
   1400380f4:	call   0x140036858
   1400380f9:	mov    DWORD PTR [rax],0x16
   1400380ff:	call   0x1400367f0
   140038104:	xor    r11d,r11d
   140038107:	cmp    BYTE PTR [rbp-0x68],r11b
   14003810b:	je     0x140038118
   14003810d:	mov    rax,QWORD PTR [rbp-0x70]
   140038111:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038118:	or     eax,0xffffffff
   14003811b:	jmp    0x1400388da
   140038120:	or     r15d,0xffffffff
   140038124:	test   BYTE PTR [rbx+0x18],0x40
   140038128:	lea    r9,[rip+0xfffffffffffc7ed1]        # 0x140000000
   14003812f:	jne    0x1400381da
   140038135:	mov    rcx,rbx
   140038138:	call   0x14003c3f8
   14003813d:	lea    rdx,[rip+0x4dd1c]        # 0x140085e60
   140038144:	cmp    eax,r15d
   140038147:	je     0x140038171
   140038149:	cmp    eax,0xfffffffe
   14003814c:	je     0x140038171
   14003814e:	movsxd r8,eax
   140038151:	lea    r9,[rip+0xfffffffffffc7ea8]        # 0x140000000
   140038158:	mov    rcx,r8
   14003815b:	and    r8d,0x1f
   14003815f:	sar    rcx,0x5
   140038163:	imul   r8,r8,0x58
   140038167:	add    r8,QWORD PTR [r9+rcx*8+0x8bda0]
   14003816f:	jmp    0x14003817b
   140038171:	mov    r8,rdx
   140038174:	lea    r9,[rip+0xfffffffffffc7e85]        # 0x140000000
   14003817b:	test   BYTE PTR [r8+0x38],0x7f
   140038180:	jne    0x1400381ab
   140038182:	cmp    eax,r15d
   140038185:	je     0x1400381a5
   140038187:	cmp    eax,0xfffffffe
   14003818a:	je     0x1400381a5
   14003818c:	movsxd rdx,eax
   14003818f:	mov    rax,rdx
   140038192:	and    edx,0x1f
   140038195:	sar    rax,0x5
   140038199:	imul   rdx,rdx,0x58
   14003819d:	add    rdx,QWORD PTR [r9+rax*8+0x8bda0]
   1400381a5:	test   BYTE PTR [rdx+0x38],0x80
   1400381a9:	je     0x1400381d7
   1400381ab:	call   0x140036858
   1400381b0:	mov    DWORD PTR [rax],0x16
   1400381b6:	call   0x1400367f0
   1400381bb:	xor    r11d,r11d
   1400381be:	cmp    BYTE PTR [rbp-0x68],r11b
   1400381c2:	je     0x1400381cf
   1400381c4:	mov    rax,QWORD PTR [rbp-0x70]
   1400381c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400381cf:	mov    eax,r15d
   1400381d2:	jmp    0x1400388da
   1400381d7:	xor    r10d,r10d
   1400381da:	mov    r8,QWORD PTR [rsp+0x68]
   1400381df:	test   r8,r8
   1400381e2:	je     0x1400381ab
   1400381e4:	mov    r12b,BYTE PTR [r8]
   1400381e7:	mov    esi,r10d
   1400381ea:	mov    DWORD PTR [rsp+0x40],r10d
   1400381ef:	mov    DWORD PTR [rsp+0x48],r10d
   1400381f4:	mov    edx,r10d
   1400381f7:	mov    QWORD PTR [rbp-0x50],r10
   1400381fb:	test   r12b,r12b
   1400381fe:	je     0x1400388c7
   140038204:	mov    rbx,QWORD PTR [rbp-0x48]
   140038208:	mov    r11d,0x200
   14003820e:	inc    r8
   140038211:	mov    QWORD PTR [rsp+0x68],r8
   140038216:	test   esi,esi
   140038218:	js     0x1400388c7
   14003821e:	lea    eax,[r12-0x20]
   140038223:	cmp    al,0x58
   140038225:	ja     0x140038239
   140038227:	movsx  rax,r12b
   14003822b:	movsx  ecx,BYTE PTR [rax+r9*1+0x68d60]
   140038234:	and    ecx,0xf
   140038237:	jmp    0x14003823c
   140038239:	mov    ecx,r10d
   14003823c:	movsxd rax,edx
   14003823f:	movsxd rcx,ecx
   140038242:	lea    rdx,[rax+rcx*8]
   140038246:	movsx  edx,BYTE PTR [rdx+r9*1+0x68d80]
   14003824f:	sar    edx,0x4
   140038252:	mov    DWORD PTR [rsp+0x60],edx
   140038256:	mov    ecx,edx
   140038258:	test   edx,edx
   14003825a:	je     0x1400389b1
   140038260:	dec    ecx
   140038262:	je     0x140038ae2
   140038268:	dec    ecx
   14003826a:	je     0x140038a92
   140038270:	dec    ecx
   140038272:	je     0x140038a59
   140038278:	dec    ecx
   14003827a:	je     0x140038a4c
   140038280:	dec    ecx
   140038282:	je     0x140038a12
   140038288:	dec    ecx
   14003828a:	je     0x140038904
   140038290:	dec    ecx
   140038292:	jne    0x1400388bb
   140038298:	movsx  eax,r12b
   14003829c:	cmp    eax,0x64
   14003829f:	jg     0x140038418
   1400382a5:	je     0x140038519
   1400382ab:	cmp    eax,0x41
   1400382ae:	je     0x1400383ec
   1400382b4:	cmp    eax,0x43
   1400382b7:	je     0x140038392
   1400382bd:	cmp    eax,0x45
   1400382c0:	je     0x1400383ec
   1400382c6:	cmp    eax,0x47
   1400382c9:	je     0x1400383ec
   1400382cf:	cmp    eax,0x53
   1400382d2:	je     0x140038348
   1400382d4:	cmp    eax,0x58
   1400382d7:	je     0x1400384b3
   1400382dd:	cmp    eax,0x5a
   1400382e0:	je     0x1400382f9
   1400382e2:	cmp    eax,0x61
   1400382e5:	je     0x1400383f8
   1400382eb:	cmp    eax,0x63
   1400382ee:	je     0x1400383a0
   1400382f4:	jmp    0x140038724
   1400382f9:	mov    rax,QWORD PTR [r14]
   1400382fc:	add    r14,0x8
   140038300:	test   rax,rax
   140038303:	je     0x140038334
   140038305:	mov    rbx,QWORD PTR [rax+0x8]
   140038309:	test   rbx,rbx
   14003830c:	je     0x140038334
   14003830e:	movsx  eax,WORD PTR [rax]
   140038311:	bt     r13d,0xb
   140038316:	jae    0x14003832a
   140038318:	cdq    
   140038319:	mov    DWORD PTR [rsp+0x54],0x1
   140038321:	sub    eax,edx
   140038323:	sar    eax,1
   140038325:	jmp    0x140038720
   14003832a:	mov    DWORD PTR [rsp+0x54],r10d
   14003832f:	jmp    0x140038720
   140038334:	mov    rbx,QWORD PTR [rip+0x4d87d]        # 0x140085bb8
   14003833b:	mov    rcx,rbx
   14003833e:	call   0x140036550
   140038343:	jmp    0x14003871d
   140038348:	test   r13d,0x830
   14003834f:	jne    0x140038356
   140038351:	bts    r13d,0xb
   140038356:	mov    rbx,QWORD PTR [r14]
   140038359:	cmp    edi,r15d
   14003835c:	mov    eax,edi
   14003835e:	mov    ecx,0x7fffffff
   140038363:	cmove  eax,ecx
   140038366:	add    r14,0x8
   14003836a:	test   r13d,0x810
   140038371:	je     0x140038480
   140038377:	test   rbx,rbx
   14003837a:	mov    DWORD PTR [rsp+0x54],0x1
   140038382:	cmove  rbx,QWORD PTR [rip+0x4d836]        # 0x140085bc0
   14003838a:	mov    rcx,rbx
   14003838d:	jmp    0x140038474
   140038392:	test   r13d,0x830
   140038399:	jne    0x1400383a0
   14003839b:	bts    r13d,0xb
   1400383a0:	add    r14,0x8
   1400383a4:	test   r13d,0x810
   1400383ab:	je     0x1400383d4
   1400383ad:	movzx  r9d,WORD PTR [r14-0x8]
   1400383b2:	lea    rdx,[rbp-0x40]
   1400383b6:	lea    rcx,[rsp+0x48]
   1400383bb:	mov    r8,r11
   1400383be:	call   0x14003e7dc
   1400383c3:	xor    r10d,r10d
   1400383c6:	test   eax,eax
   1400383c8:	je     0x1400383e3
   1400383ca:	mov    DWORD PTR [rsp+0x5c],0x1
   1400383d2:	jmp    0x1400383e3
   1400383d4:	mov    al,BYTE PTR [r14-0x8]
   1400383d8:	mov    DWORD PTR [rsp+0x48],0x1
   1400383e0:	mov    BYTE PTR [rbp-0x40],al
   1400383e3:	lea    rbx,[rbp-0x40]
   1400383e7:	jmp    0x140038724
   1400383ec:	mov    DWORD PTR [rsp+0x78],0x1
   1400383f4:	add    r12b,0x20
   1400383f8:	or     r13d,0x40
   1400383fc:	lea    rbx,[rbp-0x40]
   140038400:	mov    esi,r11d
   140038403:	test   edi,edi
   140038405:	jns    0x140038629
   14003840b:	mov    DWORD PTR [rsp+0x44],0x6
   140038413:	jmp    0x140038674
   140038418:	cmp    eax,0x65
   14003841b:	jl     0x140038724
   140038421:	cmp    eax,0x67
   140038424:	jle    0x1400383f8
   140038426:	cmp    eax,0x69
   140038429:	je     0x140038519
   14003842f:	cmp    eax,0x6e
   140038432:	je     0x1400384e8
   140038438:	cmp    eax,0x6f
   14003843b:	je     0x1400384d8
   140038441:	cmp    eax,0x70
   140038444:	je     0x1400384a9
   140038446:	cmp    eax,0x73
   140038449:	je     0x140038356
   14003844f:	cmp    eax,0x75
   140038452:	je     0x14003851d
   140038458:	cmp    eax,0x78
   14003845b:	jne    0x140038724
   140038461:	mov    eax,0x27
   140038466:	jmp    0x1400384b8
   140038468:	dec    eax
   14003846a:	cmp    WORD PTR [rcx],r10w
   14003846e:	je     0x140038478
   140038470:	add    rcx,0x2
   140038474:	test   eax,eax
   140038476:	jne    0x140038468
   140038478:	sub    rcx,rbx
   14003847b:	sar    rcx,1
   14003847e:	jmp    0x1400384a0
   140038480:	test   rbx,rbx
   140038483:	cmove  rbx,QWORD PTR [rip+0x4d72d]        # 0x140085bb8
   14003848b:	mov    rcx,rbx
   14003848e:	jmp    0x14003849a
   140038490:	dec    eax
   140038492:	cmp    BYTE PTR [rcx],r10b
   140038495:	je     0x14003849e
   140038497:	inc    rcx
   14003849a:	test   eax,eax
   14003849c:	jne    0x140038490
   14003849e:	sub    ecx,ebx
   1400384a0:	mov    DWORD PTR [rsp+0x48],ecx
   1400384a4:	jmp    0x140038724
   1400384a9:	mov    edi,0x10
   1400384ae:	bts    r13d,0xf
   1400384b3:	mov    eax,0x7
   1400384b8:	mov    DWORD PTR [rsp+0x64],eax
   1400384bc:	mov    r9d,0x10
   1400384c2:	test   r13b,r13b
   1400384c5:	jns    0x140038523
   1400384c7:	add    al,0x51
   1400384c9:	mov    BYTE PTR [rsp+0x50],0x30
   1400384ce:	lea    edx,[r9-0xe]
   1400384d2:	mov    BYTE PTR [rsp+0x51],al
   1400384d6:	jmp    0x140038527
   1400384d8:	mov    r9d,0x8
   1400384de:	test   r13b,r13b
   1400384e1:	jns    0x140038523
   1400384e3:	or     r13d,r11d
   1400384e6:	jmp    0x140038523
   1400384e8:	mov    rdi,QWORD PTR [r14]
   1400384eb:	add    r14,0x8
   1400384ef:	call   0x14003617c
   1400384f4:	xor    r10d,r10d
   1400384f7:	test   eax,eax
   1400384f9:	je     0x1400381ab
   1400384ff:	test   r13b,0x20
   140038503:	je     0x14003850a
   140038505:	mov    WORD PTR [rdi],si
   140038508:	jmp    0x14003850c
   14003850a:	mov    DWORD PTR [rdi],esi
   14003850c:	mov    DWORD PTR [rsp+0x5c],0x1
   140038514:	jmp    0x140038889
   140038519:	or     r13d,0x40
   14003851d:	mov    r9d,0xa
   140038523:	mov    edx,DWORD PTR [rsp+0x4c]
   140038527:	mov    eax,0x8000
   14003852c:	test   eax,r13d
   14003852f:	jne    0x140038538
   140038531:	bt     r13d,0xc
   140038536:	jae    0x140038541
   140038538:	mov    r8,QWORD PTR [r14]
   14003853b:	add    r14,0x8
   14003853f:	jmp    0x14003856f
   140038541:	add    r14,0x8
   140038545:	test   r13b,0x20
   140038549:	je     0x14003855f
   14003854b:	test   r13b,0x40
   14003854f:	je     0x140038558
   140038551:	movsx  r8,WORD PTR [r14-0x8]
   140038556:	jmp    0x14003856f
   140038558:	movzx  r8d,WORD PTR [r14-0x8]
   14003855d:	jmp    0x14003856f
   14003855f:	test   r13b,0x40
   140038563:	je     0x14003856b
   140038565:	movsxd r8,DWORD PTR [r14-0x8]
   140038569:	jmp    0x14003856f
   14003856b:	mov    r8d,DWORD PTR [r14-0x8]
   14003856f:	test   r13b,0x40
   140038573:	je     0x140038582
   140038575:	test   r8,r8
   140038578:	jns    0x140038582
   14003857a:	neg    r8
   14003857d:	bts    r13d,0x8
   140038582:	test   eax,r13d
   140038585:	jne    0x140038591
   140038587:	bt     r13d,0xc
   14003858c:	jb     0x140038591
   14003858e:	mov    r8d,r8d
   140038591:	test   edi,edi
   140038593:	jns    0x14003859c
   140038595:	mov    edi,0x1
   14003859a:	jmp    0x1400385a7
   14003859c:	and    r13d,0xfffffff7
   1400385a0:	cmp    edi,r11d
   1400385a3:	cmovg  edi,r11d
   1400385a7:	mov    esi,DWORD PTR [rsp+0x64]
   1400385ab:	mov    rax,r8
   1400385ae:	lea    rbx,[rbp+0x1bf]
   1400385b5:	neg    rax
   1400385b8:	sbb    ecx,ecx
   1400385ba:	and    ecx,edx
   1400385bc:	mov    DWORD PTR [rsp+0x4c],ecx
   1400385c0:	mov    ecx,edi
   1400385c2:	dec    edi
   1400385c4:	test   ecx,ecx
   1400385c6:	jg     0x1400385cd
   1400385c8:	test   r8,r8
   1400385cb:	je     0x1400385ec
   1400385cd:	xor    edx,edx
   1400385cf:	mov    rax,r8
   1400385d2:	movsxd rcx,r9d
   1400385d5:	div    rcx
   1400385d8:	mov    r8,rax
   1400385db:	lea    eax,[rdx+0x30]
   1400385de:	cmp    eax,0x39
   1400385e1:	jle    0x1400385e5
   1400385e3:	add    eax,esi
   1400385e5:	mov    BYTE PTR [rbx],al
   1400385e7:	dec    rbx
   1400385ea:	jmp    0x1400385c0
   1400385ec:	mov    esi,DWORD PTR [rsp+0x40]
   1400385f0:	lea    rax,[rbp+0x1bf]
   1400385f7:	mov    DWORD PTR [rsp+0x44],edi
   1400385fb:	sub    eax,ebx
   1400385fd:	inc    rbx
   140038600:	mov    DWORD PTR [rsp+0x48],eax
   140038604:	test   r11d,r13d
   140038607:	je     0x140038724
   14003860d:	test   eax,eax
   14003860f:	je     0x14003861a
   140038611:	cmp    BYTE PTR [rbx],0x30
   140038614:	je     0x140038724
   14003861a:	dec    rbx
   14003861d:	inc    DWORD PTR [rsp+0x48]
   140038621:	mov    BYTE PTR [rbx],0x30
   140038624:	jmp    0x140038724
   140038629:	jne    0x14003863b
   14003862b:	cmp    r12b,0x67
   14003862f:	jne    0x140038674
   140038631:	mov    DWORD PTR [rsp+0x44],0x1
   140038639:	jmp    0x140038674
   14003863b:	cmp    edi,r11d
   14003863e:	cmovg  edi,r11d
   140038642:	mov    DWORD PTR [rsp+0x44],edi
   140038646:	cmp    edi,0xa3
   14003864c:	jle    0x140038674
   14003864e:	add    edi,0x15d
   140038654:	movsxd rcx,edi
   140038657:	call   0x140039ea0
   14003865c:	mov    QWORD PTR [rbp-0x50],rax
   140038660:	test   rax,rax
   140038663:	je     0x14003866c
   140038665:	mov    rbx,rax
   140038668:	mov    esi,edi
   14003866a:	jmp    0x140038674
   14003866c:	mov    DWORD PTR [rsp+0x44],0xa3
   140038674:	mov    rax,QWORD PTR [r14]
   140038677:	mov    rcx,QWORD PTR [rip+0x4d7c2]        # 0x140085e40
   14003867e:	add    r14,0x8
   140038682:	movsx  edi,r12b
   140038686:	movsxd rsi,esi
   140038689:	mov    QWORD PTR [rbp-0x48],rax
   14003868d:	call   QWORD PTR [rip+0x2fcfd]        # 0x140068390
   140038693:	lea    rcx,[rbp-0x80]
   140038697:	mov    r9d,edi
   14003869a:	mov    QWORD PTR [rsp+0x30],rcx
   14003869f:	mov    ecx,DWORD PTR [rsp+0x78]
   1400386a3:	mov    r8,rsi
   1400386a6:	mov    DWORD PTR [rsp+0x28],ecx
   1400386aa:	mov    ecx,DWORD PTR [rsp+0x44]
   1400386ae:	mov    rdx,rbx
   1400386b1:	mov    DWORD PTR [rsp+0x20],ecx
   1400386b5:	lea    rcx,[rbp-0x48]
   1400386b9:	call   rax
   1400386bb:	mov    edi,r13d
   1400386be:	and    edi,0x80
   1400386c4:	je     0x1400386e4
   1400386c6:	xor    eax,eax
   1400386c8:	cmp    DWORD PTR [rsp+0x44],eax
   1400386cc:	jne    0x1400386e4
   1400386ce:	mov    rcx,QWORD PTR [rip+0x4d783]        # 0x140085e58
   1400386d5:	call   QWORD PTR [rip+0x2fcb5]        # 0x140068390
   1400386db:	lea    rdx,[rbp-0x80]
   1400386df:	mov    rcx,rbx
   1400386e2:	call   rax
   1400386e4:	cmp    r12b,0x67
   1400386e8:	jne    0x140038704
   1400386ea:	test   edi,edi
   1400386ec:	jne    0x140038704
   1400386ee:	mov    rcx,QWORD PTR [rip+0x4d75b]        # 0x140085e50
   1400386f5:	call   QWORD PTR [rip+0x2fc95]        # 0x140068390
   1400386fb:	lea    rdx,[rbp-0x80]
   1400386ff:	mov    rcx,rbx
   140038702:	call   rax
   140038704:	cmp    BYTE PTR [rbx],0x2d
   140038707:	jne    0x140038711
   140038709:	bts    r13d,0x8
   14003870e:	inc    rbx
   140038711:	mov    rcx,rbx
   140038714:	call   0x140036550
   140038719:	mov    esi,DWORD PTR [rsp+0x40]
   14003871d:	xor    r10d,r10d
   140038720:	mov    DWORD PTR [rsp+0x48],eax
   140038724:	cmp    DWORD PTR [rsp+0x5c],r10d
   140038729:	jne    0x140038889
   14003872f:	test   r13b,0x40
   140038733:	je     0x140038766
   140038735:	bt     r13d,0x8
   14003873a:	jae    0x140038743
   14003873c:	mov    BYTE PTR [rsp+0x50],0x2d
   140038741:	jmp    0x14003874e
   140038743:	test   r13b,0x1
   140038747:	je     0x140038759
   140038749:	mov    BYTE PTR [rsp+0x50],0x2b
   14003874e:	mov    edi,0x1
   140038753:	mov    DWORD PTR [rsp+0x4c],edi
   140038757:	jmp    0x14003876a
   140038759:	test   r13b,0x2
   14003875d:	je     0x140038766
   14003875f:	mov    BYTE PTR [rsp+0x50],0x20
   140038764:	jmp    0x14003874e
   140038766:	mov    edi,DWORD PTR [rsp+0x4c]
   14003876a:	mov    r12d,DWORD PTR [rsp+0x58]
   14003876f:	mov    rsi,QWORD PTR [rsp+0x70]
   140038774:	sub    r12d,DWORD PTR [rsp+0x48]
   140038779:	sub    r12d,edi
   14003877c:	test   r13b,0xc
   140038780:	jne    0x140038794
   140038782:	lea    r9,[rsp+0x40]
   140038787:	mov    r8,rsi
   14003878a:	mov    edx,r12d
   14003878d:	mov    cl,0x20
   14003878f:	call   0x140038b6c
   140038794:	mov    rax,QWORD PTR [rbp-0x60]
   140038798:	lea    r9,[rsp+0x40]
   14003879d:	lea    rcx,[rsp+0x50]
   1400387a2:	mov    r8,rsi
   1400387a5:	mov    edx,edi
   1400387a7:	mov    QWORD PTR [rsp+0x20],rax
   1400387ac:	call   0x140037fe0
   1400387b1:	test   r13b,0x8
   1400387b5:	je     0x1400387cf
   1400387b7:	test   r13b,0x4
   1400387bb:	jne    0x1400387cf
   1400387bd:	lea    r9,[rsp+0x40]
   1400387c2:	mov    r8,rsi
   1400387c5:	mov    edx,r12d
   1400387c8:	mov    cl,0x30
   1400387ca:	call   0x140038b6c
   1400387cf:	mov    edi,DWORD PTR [rsp+0x48]
   1400387d3:	xor    eax,eax
   1400387d5:	cmp    DWORD PTR [rsp+0x54],eax
   1400387d9:	je     0x140038842
   1400387db:	test   edi,edi
   1400387dd:	jle    0x140038842
   1400387df:	mov    rsi,rbx
   1400387e2:	movzx  r9d,WORD PTR [rsi]
   1400387e6:	lea    rdx,[rbp+0x1c0]
   1400387ed:	lea    rcx,[rbp-0x58]
   1400387f1:	mov    r8d,0x6
   1400387f7:	dec    edi
   1400387f9:	add    rsi,0x2
   1400387fd:	call   0x14003e7dc
   140038802:	xor    r10d,r10d
   140038805:	test   eax,eax
   140038807:	jne    0x140038838
   140038809:	mov    edx,DWORD PTR [rbp-0x58]
   14003880c:	test   edx,edx
   14003880e:	je     0x140038838
   140038810:	mov    rax,QWORD PTR [rbp-0x60]
   140038814:	mov    r8,QWORD PTR [rsp+0x70]
   140038819:	lea    r9,[rsp+0x40]
   14003881e:	lea    rcx,[rbp+0x1c0]
   140038825:	mov    QWORD PTR [rsp+0x20],rax
   14003882a:	call   0x140037fe0
   14003882f:	xor    r10d,r10d
   140038832:	test   edi,edi
   140038834:	jne    0x1400387e2
   140038836:	jmp    0x140038860
   140038838:	mov    esi,r15d
   14003883b:	mov    DWORD PTR [rsp+0x40],r15d
   140038840:	jmp    0x140038864
   140038842:	mov    rax,QWORD PTR [rbp-0x60]
   140038846:	lea    r9,[rsp+0x40]
   14003884b:	mov    r8,rsi
   14003884e:	mov    edx,edi
   140038850:	mov    rcx,rbx
   140038853:	mov    QWORD PTR [rsp+0x20],rax
   140038858:	call   0x140037fe0
   14003885d:	xor    r10d,r10d
   140038860:	mov    esi,DWORD PTR [rsp+0x40]
   140038864:	test   esi,esi
   140038866:	js     0x140038889
   140038868:	test   r13b,0x4
   14003886c:	je     0x140038889
   14003886e:	mov    r8,QWORD PTR [rsp+0x70]
   140038873:	lea    r9,[rsp+0x40]
   140038878:	mov    edx,r12d
   14003887b:	mov    cl,0x20
   14003887d:	call   0x140038b6c
   140038882:	mov    esi,DWORD PTR [rsp+0x40]
   140038886:	xor    r10d,r10d
   140038889:	mov    rax,QWORD PTR [rbp-0x50]
   14003888d:	test   rax,rax
   140038890:	je     0x1400388a1
   140038892:	mov    rcx,rax
   140038895:	call   0x140033594
   14003889a:	xor    r10d,r10d
   14003889d:	mov    QWORD PTR [rbp-0x50],r10
   1400388a1:	mov    edi,DWORD PTR [rsp+0x44]
   1400388a5:	mov    r8,QWORD PTR [rsp+0x68]
   1400388aa:	mov    edx,DWORD PTR [rsp+0x60]
   1400388ae:	mov    r11d,0x200
   1400388b4:	lea    r9,[rip+0xfffffffffffc7745]        # 0x140000000
   1400388bb:	mov    r12b,BYTE PTR [r8]
   1400388be:	test   r12b,r12b
   1400388c1:	jne    0x14003820e
   1400388c7:	cmp    BYTE PTR [rbp-0x68],r10b
   1400388cb:	je     0x1400388d8
   1400388cd:	mov    rcx,QWORD PTR [rbp-0x70]
   1400388d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400388d8:	mov    eax,esi
   1400388da:	mov    rcx,QWORD PTR [rbp+0x1c8]
   1400388e1:	xor    rcx,rsp
   1400388e4:	call   0x140032f00
   1400388e9:	mov    rbx,QWORD PTR [rsp+0x320]
   1400388f1:	add    rsp,0x2d0
   1400388f8:	pop    r15
   1400388fa:	pop    r14
   1400388fc:	pop    r13
   1400388fe:	pop    r12
   140038900:	pop    rdi
   140038901:	pop    rsi
   140038902:	pop    rbp
   140038903:	ret    
   140038904:	cmp    r12b,0x49
   140038908:	je     0x140038942
   14003890a:	cmp    r12b,0x68
   14003890e:	je     0x140038939
   140038910:	cmp    r12b,0x6c
   140038914:	je     0x140038923
   140038916:	cmp    r12b,0x77
   14003891a:	jne    0x1400388bb
   14003891c:	bts    r13d,0xb
   140038921:	jmp    0x1400388bb
   140038923:	cmp    BYTE PTR [r8],0x6c
   140038927:	jne    0x140038933
   140038929:	inc    r8
   14003892c:	bts    r13d,0xc
   140038931:	jmp    0x1400388bb
   140038933:	or     r13d,0x10
   140038937:	jmp    0x1400388bb
   140038939:	or     r13d,0x20
   14003893d:	jmp    0x1400388bb
   140038942:	mov    al,BYTE PTR [r8]
   140038945:	bts    r13d,0xf
   14003894a:	cmp    al,0x36
   14003894c:	jne    0x140038963
   14003894e:	cmp    BYTE PTR [r8+0x1],0x34
   140038953:	jne    0x140038963
   140038955:	add    r8,0x2
   140038959:	bts    r13d,0xf
   14003895e:	jmp    0x1400388bb
   140038963:	cmp    al,0x33
   140038965:	jne    0x14003897c
   140038967:	cmp    BYTE PTR [r8+0x1],0x32
   14003896c:	jne    0x14003897c
   14003896e:	add    r8,0x2
   140038972:	btr    r13d,0xf
   140038977:	jmp    0x1400388bb
   14003897c:	cmp    al,0x64
   14003897e:	je     0x1400388bb
   140038984:	cmp    al,0x69
   140038986:	je     0x1400388bb
   14003898c:	cmp    al,0x6f
   14003898e:	je     0x1400388bb
   140038994:	cmp    al,0x75
   140038996:	je     0x1400388bb
   14003899c:	cmp    al,0x78
   14003899e:	je     0x1400388bb
   1400389a4:	cmp    al,0x58
   1400389a6:	je     0x1400388bb
   1400389ac:	mov    DWORD PTR [rsp+0x60],r10d
   1400389b1:	lea    rdx,[rbp-0x80]
   1400389b5:	movzx  ecx,r12b
   1400389b9:	mov    DWORD PTR [rsp+0x54],r10d
   1400389be:	call   0x1400399f4
   1400389c3:	xor    esi,esi
   1400389c5:	test   eax,eax
   1400389c7:	je     0x1400389f4
   1400389c9:	mov    rdx,QWORD PTR [rsp+0x70]
   1400389ce:	lea    r8,[rsp+0x40]
   1400389d3:	mov    cl,r12b
   1400389d6:	call   0x140038b24
   1400389db:	mov    rdx,QWORD PTR [rsp+0x68]
   1400389e0:	mov    r12b,BYTE PTR [rdx]
   1400389e3:	inc    rdx
   1400389e6:	mov    QWORD PTR [rsp+0x68],rdx
   1400389eb:	test   r12b,r12b
   1400389ee:	je     0x140038b0b
   1400389f4:	mov    rdx,QWORD PTR [rsp+0x70]
   1400389f9:	lea    r8,[rsp+0x40]
   1400389fe:	mov    cl,r12b
   140038a01:	call   0x140038b24
   140038a06:	mov    esi,DWORD PTR [rsp+0x40]
   140038a0a:	xor    r10d,r10d
   140038a0d:	jmp    0x1400388a5
   140038a12:	cmp    r12b,0x2a
   140038a16:	jne    0x140038a38
   140038a18:	mov    edi,DWORD PTR [r14]
   140038a1b:	add    r14,0x8
   140038a1f:	mov    DWORD PTR [rsp+0x44],edi
   140038a23:	test   edi,edi
   140038a25:	jns    0x1400388bb
   140038a2b:	mov    edi,r15d
   140038a2e:	mov    DWORD PTR [rsp+0x44],r15d
   140038a33:	jmp    0x1400388bb
   140038a38:	lea    ecx,[rdi+rdi*4]
   140038a3b:	movsx  eax,r12b
   140038a3f:	lea    edi,[rax+rcx*2-0x30]
   140038a43:	mov    DWORD PTR [rsp+0x44],edi
   140038a47:	jmp    0x1400388bb
   140038a4c:	mov    edi,r10d
   140038a4f:	mov    DWORD PTR [rsp+0x44],r10d
   140038a54:	jmp    0x1400388bb
   140038a59:	cmp    r12b,0x2a
   140038a5d:	jne    0x140038a7a
   140038a5f:	mov    eax,DWORD PTR [r14]
   140038a62:	add    r14,0x8
   140038a66:	mov    DWORD PTR [rsp+0x58],eax
   140038a6a:	test   eax,eax
   140038a6c:	jns    0x1400388bb
   140038a72:	or     r13d,0x4
   140038a76:	neg    eax
   140038a78:	jmp    0x140038a89
   140038a7a:	mov    eax,DWORD PTR [rsp+0x58]
   140038a7e:	lea    ecx,[rax+rax*4]
   140038a81:	movsx  eax,r12b
   140038a85:	lea    eax,[rax+rcx*2-0x30]
   140038a89:	mov    DWORD PTR [rsp+0x58],eax
   140038a8d:	jmp    0x1400388bb
   140038a92:	cmp    r12b,0x20
   140038a96:	je     0x140038ad9
   140038a98:	cmp    r12b,0x23
   140038a9c:	je     0x140038acf
   140038a9e:	cmp    r12b,0x2b
   140038aa2:	je     0x140038ac6
   140038aa4:	cmp    r12b,0x2d
   140038aa8:	je     0x140038abd
   140038aaa:	cmp    r12b,0x30
   140038aae:	jne    0x1400388bb
   140038ab4:	or     r13d,0x8
   140038ab8:	jmp    0x1400388bb
   140038abd:	or     r13d,0x4
   140038ac1:	jmp    0x1400388bb
   140038ac6:	or     r13d,0x1
   140038aca:	jmp    0x1400388bb
   140038acf:	bts    r13d,0x7
   140038ad4:	jmp    0x1400388bb
   140038ad9:	or     r13d,0x2
   140038add:	jmp    0x1400388bb
   140038ae2:	mov    DWORD PTR [rsp+0x78],r10d
   140038ae7:	mov    DWORD PTR [rsp+0x5c],r10d
   140038aec:	mov    DWORD PTR [rsp+0x58],r10d
   140038af1:	mov    DWORD PTR [rsp+0x4c],r10d
   140038af6:	mov    r13d,r10d
   140038af9:	mov    edi,r15d
   140038afc:	mov    DWORD PTR [rsp+0x44],r15d
   140038b01:	mov    DWORD PTR [rsp+0x54],r10d
   140038b06:	jmp    0x1400388bb
   140038b0b:	call   0x140036858
   140038b10:	mov    DWORD PTR [rax],0x16
   140038b16:	call   0x1400367f0
   140038b1b:	cmp    BYTE PTR [rbp-0x68],sil
   140038b1f:	jmp    0x1400381c2
   140038b24:	rex push rbx
   140038b26:	sub    rsp,0x20
   140038b2a:	test   BYTE PTR [rdx+0x18],0x40
   140038b2e:	mov    rbx,r8
   140038b31:	je     0x140038b3f
   140038b33:	cmp    QWORD PTR [rdx+0x10],0x0
   140038b38:	jne    0x140038b3f
   140038b3a:	inc    DWORD PTR [r8]
   140038b3d:	jmp    0x140038b64
   140038b3f:	dec    DWORD PTR [rdx+0x8]
   140038b42:	js     0x140038b51
   140038b44:	mov    rax,QWORD PTR [rdx]
   140038b47:	mov    BYTE PTR [rax],cl
   140038b49:	inc    QWORD PTR [rdx]
   140038b4c:	movzx  eax,cl
   140038b4f:	jmp    0x140038b59
   140038b51:	movsx  ecx,cl
   140038b54:	call   0x140037e50
   140038b59:	cmp    eax,0xffffffff
   140038b5c:	jne    0x140038b62
   140038b5e:	or     DWORD PTR [rbx],eax
   140038b60:	jmp    0x140038b64
   140038b62:	inc    DWORD PTR [rbx]
   140038b64:	add    rsp,0x20
   140038b68:	pop    rbx
   140038b69:	ret    
   140038b6a:	int3   
   140038b6b:	int3   
   140038b6c:	test   edx,edx
   140038b6e:	jle    0x140038bbc
   140038b70:	mov    QWORD PTR [rsp+0x8],rbx
   140038b75:	mov    QWORD PTR [rsp+0x10],rbp
   140038b7a:	mov    QWORD PTR [rsp+0x18],rsi
   140038b7f:	push   rdi
   140038b80:	sub    rsp,0x20
   140038b84:	mov    rdi,r9
   140038b87:	mov    rsi,r8
   140038b8a:	mov    ebx,edx
   140038b8c:	mov    bpl,cl
   140038b8f:	mov    r8,rdi
   140038b92:	mov    rdx,rsi
   140038b95:	mov    cl,bpl
   140038b98:	dec    ebx
   140038b9a:	call   0x140038b24
   140038b9f:	cmp    DWORD PTR [rdi],0xffffffff
   140038ba2:	je     0x140038ba8
   140038ba4:	test   ebx,ebx
   140038ba6:	jg     0x140038b8f
   140038ba8:	mov    rbx,QWORD PTR [rsp+0x30]
   140038bad:	mov    rbp,QWORD PTR [rsp+0x38]
   140038bb2:	mov    rsi,QWORD PTR [rsp+0x40]
   140038bb7:	add    rsp,0x20
   140038bbb:	pop    rdi
   140038bbc:	ret    
   140038bbd:	int3   
   140038bbe:	int3   
   140038bbf:	int3   
   140038bc0:	mov    QWORD PTR [rsp+0x18],rbx
   140038bc5:	push   rbp
   140038bc6:	push   rsi
   140038bc7:	push   rdi
   140038bc8:	push   r12
   140038bca:	push   r13
   140038bcc:	push   r14
   140038bce:	push   r15
   140038bd0:	lea    rbp,[rsp-0x1d0]
   140038bd8:	sub    rsp,0x2d0
   140038bdf:	mov    rax,QWORD PTR [rip+0x4c4c2]        # 0x1400850a8
   140038be6:	xor    rax,rsp
   140038be9:	mov    QWORD PTR [rbp+0x1c8],rax
   140038bf0:	xor    eax,eax
   140038bf2:	mov    rbx,rcx
   140038bf5:	mov    QWORD PTR [rsp+0x70],rcx
   140038bfa:	mov    QWORD PTR [rsp+0x68],rdx
   140038bff:	lea    rcx,[rbp-0x80]
   140038c03:	mov    rdx,r8
   140038c06:	mov    r15,r9
   140038c09:	mov    DWORD PTR [rsp+0x64],eax
   140038c0d:	mov    r13d,eax
   140038c10:	mov    DWORD PTR [rsp+0x58],eax
   140038c14:	mov    edi,eax
   140038c16:	mov    DWORD PTR [rsp+0x44],eax
   140038c1a:	mov    DWORD PTR [rsp+0x4c],eax
   140038c1e:	mov    DWORD PTR [rsp+0x5c],eax
   140038c22:	mov    DWORD PTR [rsp+0x54],eax
   140038c26:	call   0x14003370c
   140038c2b:	call   0x140036858
   140038c30:	xor    r10d,r10d
   140038c33:	mov    QWORD PTR [rbp-0x60],rax
   140038c37:	test   rbx,rbx
   140038c3a:	jne    0x140038c68
   140038c3c:	call   0x140036858
   140038c41:	mov    DWORD PTR [rax],0x16
   140038c47:	call   0x1400367f0
   140038c4c:	xor    r11d,r11d
   140038c4f:	cmp    BYTE PTR [rbp-0x68],r11b
   140038c53:	je     0x140038c60
   140038c55:	mov    rax,QWORD PTR [rbp-0x70]
   140038c59:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038c60:	or     eax,0xffffffff
   140038c63:	jmp    0x140039443
   140038c68:	or     r14d,0xffffffff
   140038c6c:	test   BYTE PTR [rbx+0x18],0x40
   140038c70:	lea    r9,[rip+0xfffffffffffc7389]        # 0x140000000
   140038c77:	jne    0x140038d22
   140038c7d:	mov    rcx,rbx
   140038c80:	call   0x14003c3f8
   140038c85:	lea    rdx,[rip+0x4d1d4]        # 0x140085e60
   140038c8c:	cmp    eax,r14d
   140038c8f:	je     0x140038cb9
   140038c91:	cmp    eax,0xfffffffe
   140038c94:	je     0x140038cb9
   140038c96:	movsxd r8,eax
   140038c99:	lea    r9,[rip+0xfffffffffffc7360]        # 0x140000000
   140038ca0:	mov    rcx,r8
   140038ca3:	and    r8d,0x1f
   140038ca7:	sar    rcx,0x5
   140038cab:	imul   r8,r8,0x58
   140038caf:	add    r8,QWORD PTR [r9+rcx*8+0x8bda0]
   140038cb7:	jmp    0x140038cc3
   140038cb9:	mov    r8,rdx
   140038cbc:	lea    r9,[rip+0xfffffffffffc733d]        # 0x140000000
   140038cc3:	test   BYTE PTR [r8+0x38],0x7f
   140038cc8:	jne    0x140038cf3
   140038cca:	cmp    eax,r14d
   140038ccd:	je     0x140038ced
   140038ccf:	cmp    eax,0xfffffffe
   140038cd2:	je     0x140038ced
   140038cd4:	movsxd rdx,eax
   140038cd7:	mov    rax,rdx
   140038cda:	and    edx,0x1f
   140038cdd:	sar    rax,0x5
   140038ce1:	imul   rdx,rdx,0x58
   140038ce5:	add    rdx,QWORD PTR [r9+rax*8+0x8bda0]
   140038ced:	test   BYTE PTR [rdx+0x38],0x80
   140038cf1:	je     0x140038d1f
   140038cf3:	call   0x140036858
   140038cf8:	mov    DWORD PTR [rax],0x16
   140038cfe:	call   0x1400367f0
   140038d03:	xor    r11d,r11d
   140038d06:	cmp    BYTE PTR [rbp-0x68],r11b
   140038d0a:	je     0x140038d17
   140038d0c:	mov    rax,QWORD PTR [rbp-0x70]
   140038d10:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038d17:	mov    eax,r14d
   140038d1a:	jmp    0x140039443
   140038d1f:	xor    r10d,r10d
   140038d22:	mov    rdx,QWORD PTR [rsp+0x68]
   140038d27:	test   rdx,rdx
   140038d2a:	je     0x140038cf3
   140038d2c:	mov    r12b,BYTE PTR [rdx]
   140038d2f:	mov    esi,r10d
   140038d32:	mov    DWORD PTR [rsp+0x40],r10d
   140038d37:	mov    DWORD PTR [rsp+0x48],r10d
   140038d3c:	mov    r8d,r10d
   140038d3f:	mov    QWORD PTR [rbp-0x50],r10
   140038d43:	test   r12b,r12b
   140038d46:	je     0x140039430
   140038d4c:	mov    rbx,QWORD PTR [rbp-0x48]
   140038d50:	mov    r11d,0x200
   140038d56:	inc    rdx
   140038d59:	mov    QWORD PTR [rsp+0x68],rdx
   140038d5e:	test   esi,esi
   140038d60:	js     0x140039421
   140038d66:	lea    eax,[r12-0x20]
   140038d6b:	cmp    al,0x58
   140038d6d:	ja     0x140038d81
   140038d6f:	movsx  rax,r12b
   140038d73:	movzx  ecx,BYTE PTR [rax+r9*1+0x68dc0]
   140038d7c:	and    ecx,0xf
   140038d7f:	jmp    0x140038d84
   140038d81:	mov    ecx,r10d
   140038d84:	movsxd rax,ecx
   140038d87:	lea    rcx,[rax+rax*8]
   140038d8b:	movsxd rax,r8d
   140038d8e:	add    rcx,rax
   140038d91:	movzx  r8d,BYTE PTR [rcx+r9*1+0x68de0]
   140038d9a:	shr    r8d,0x4
   140038d9e:	mov    DWORD PTR [rsp+0x60],r8d
   140038da3:	cmp    r8d,0x8
   140038da7:	je     0x140038cf3
   140038dad:	mov    ecx,r8d
   140038db0:	test   r8d,r8d
   140038db3:	je     0x14003951c
   140038db9:	dec    ecx
   140038dbb:	je     0x14003964d
   140038dc1:	dec    ecx
   140038dc3:	je     0x1400395fd
   140038dc9:	dec    ecx
   140038dcb:	je     0x1400395c4
   140038dd1:	dec    ecx
   140038dd3:	je     0x1400395b7
   140038dd9:	dec    ecx
   140038ddb:	je     0x14003957d
   140038de1:	dec    ecx
   140038de3:	je     0x14003946d
   140038de9:	dec    ecx
   140038deb:	jne    0x140039415
   140038df1:	movsx  eax,r12b
   140038df5:	cmp    eax,0x64
   140038df8:	jg     0x140038f71
   140038dfe:	je     0x140039072
   140038e04:	cmp    eax,0x41
   140038e07:	je     0x140038f45
   140038e0d:	cmp    eax,0x43
   140038e10:	je     0x140038eeb
   140038e16:	cmp    eax,0x45
   140038e19:	je     0x140038f45
   140038e1f:	cmp    eax,0x47
   140038e22:	je     0x140038f45
   140038e28:	cmp    eax,0x53
   140038e2b:	je     0x140038ea1
   140038e2d:	cmp    eax,0x58
   140038e30:	je     0x14003900c
   140038e36:	cmp    eax,0x5a
   140038e39:	je     0x140038e52
   140038e3b:	cmp    eax,0x61
   140038e3e:	je     0x140038f51
   140038e44:	cmp    eax,0x63
   140038e47:	je     0x140038ef9
   140038e4d:	jmp    0x14003927d
   140038e52:	mov    rax,QWORD PTR [r15]
   140038e55:	add    r15,0x8
   140038e59:	test   rax,rax
   140038e5c:	je     0x140038e8d
   140038e5e:	mov    rbx,QWORD PTR [rax+0x8]
   140038e62:	test   rbx,rbx
   140038e65:	je     0x140038e8d
   140038e67:	movsx  eax,WORD PTR [rax]
   140038e6a:	bt     r13d,0xb
   140038e6f:	jae    0x140038e83
   140038e71:	cdq    
   140038e72:	mov    DWORD PTR [rsp+0x54],0x1
   140038e7a:	sub    eax,edx
   140038e7c:	sar    eax,1
   140038e7e:	jmp    0x140039279
   140038e83:	mov    DWORD PTR [rsp+0x54],r10d
   140038e88:	jmp    0x140039279
   140038e8d:	mov    rbx,QWORD PTR [rip+0x4cd24]        # 0x140085bb8
   140038e94:	mov    rcx,rbx
   140038e97:	call   0x140036550
   140038e9c:	jmp    0x140039276
   140038ea1:	test   r13d,0x830
   140038ea8:	jne    0x140038eaf
   140038eaa:	bts    r13d,0xb
   140038eaf:	mov    rbx,QWORD PTR [r15]
   140038eb2:	cmp    edi,r14d
   140038eb5:	mov    eax,edi
   140038eb7:	mov    ecx,0x7fffffff
   140038ebc:	cmove  eax,ecx
   140038ebf:	add    r15,0x8
   140038ec3:	test   r13d,0x810
   140038eca:	je     0x140038fd9
   140038ed0:	test   rbx,rbx
   140038ed3:	mov    DWORD PTR [rsp+0x54],0x1
   140038edb:	cmove  rbx,QWORD PTR [rip+0x4ccdd]        # 0x140085bc0
   140038ee3:	mov    rcx,rbx
   140038ee6:	jmp    0x140038fcd
   140038eeb:	test   r13d,0x830
   140038ef2:	jne    0x140038ef9
   140038ef4:	bts    r13d,0xb
   140038ef9:	add    r15,0x8
   140038efd:	test   r13d,0x810
   140038f04:	je     0x140038f2d
   140038f06:	movzx  r9d,WORD PTR [r15-0x8]
   140038f0b:	lea    rdx,[rbp-0x40]
   140038f0f:	lea    rcx,[rsp+0x48]
   140038f14:	mov    r8,r11
   140038f17:	call   0x14003e7dc
   140038f1c:	xor    r10d,r10d
   140038f1f:	test   eax,eax
   140038f21:	je     0x140038f3c
   140038f23:	mov    DWORD PTR [rsp+0x5c],0x1
   140038f2b:	jmp    0x140038f3c
   140038f2d:	mov    al,BYTE PTR [r15-0x8]
   140038f31:	mov    DWORD PTR [rsp+0x48],0x1
   140038f39:	mov    BYTE PTR [rbp-0x40],al
   140038f3c:	lea    rbx,[rbp-0x40]
   140038f40:	jmp    0x14003927d
   140038f45:	mov    DWORD PTR [rsp+0x78],0x1
   140038f4d:	add    r12b,0x20
   140038f51:	or     r13d,0x40
   140038f55:	lea    rbx,[rbp-0x40]
   140038f59:	mov    esi,r11d
   140038f5c:	test   edi,edi
   140038f5e:	jns    0x140039182
   140038f64:	mov    DWORD PTR [rsp+0x44],0x6
   140038f6c:	jmp    0x1400391cd
   140038f71:	cmp    eax,0x65
   140038f74:	jl     0x14003927d
   140038f7a:	cmp    eax,0x67
   140038f7d:	jle    0x140038f51
   140038f7f:	cmp    eax,0x69
   140038f82:	je     0x140039072
   140038f88:	cmp    eax,0x6e
   140038f8b:	je     0x140039041
   140038f91:	cmp    eax,0x6f
   140038f94:	je     0x140039031
   140038f9a:	cmp    eax,0x70
   140038f9d:	je     0x140039002
   140038f9f:	cmp    eax,0x73
   140038fa2:	je     0x140038eaf
   140038fa8:	cmp    eax,0x75
   140038fab:	je     0x140039076
   140038fb1:	cmp    eax,0x78
   140038fb4:	jne    0x14003927d
   140038fba:	mov    eax,0x27
   140038fbf:	jmp    0x140039011
   140038fc1:	dec    eax
   140038fc3:	cmp    WORD PTR [rcx],r10w
   140038fc7:	je     0x140038fd1
   140038fc9:	add    rcx,0x2
   140038fcd:	test   eax,eax
   140038fcf:	jne    0x140038fc1
   140038fd1:	sub    rcx,rbx
   140038fd4:	sar    rcx,1
   140038fd7:	jmp    0x140038ff9
   140038fd9:	test   rbx,rbx
   140038fdc:	cmove  rbx,QWORD PTR [rip+0x4cbd4]        # 0x140085bb8
   140038fe4:	mov    rcx,rbx
   140038fe7:	jmp    0x140038ff3
   140038fe9:	dec    eax
   140038feb:	cmp    BYTE PTR [rcx],r10b
   140038fee:	je     0x140038ff7
   140038ff0:	inc    rcx
   140038ff3:	test   eax,eax
   140038ff5:	jne    0x140038fe9
   140038ff7:	sub    ecx,ebx
   140038ff9:	mov    DWORD PTR [rsp+0x48],ecx
   140038ffd:	jmp    0x14003927d
   140039002:	mov    edi,0x10
   140039007:	bts    r13d,0xf
   14003900c:	mov    eax,0x7
   140039011:	mov    DWORD PTR [rsp+0x64],eax
   140039015:	mov    r9d,0x10
   14003901b:	test   r13b,r13b
   14003901e:	jns    0x14003907c
   140039020:	add    al,0x51
   140039022:	mov    BYTE PTR [rsp+0x50],0x30
   140039027:	lea    edx,[r9-0xe]
   14003902b:	mov    BYTE PTR [rsp+0x51],al
   14003902f:	jmp    0x140039080
   140039031:	mov    r9d,0x8
   140039037:	test   r13b,r13b
   14003903a:	jns    0x14003907c
   14003903c:	or     r13d,r11d
   14003903f:	jmp    0x14003907c
   140039041:	mov    rdi,QWORD PTR [r15]
   140039044:	add    r15,0x8
   140039048:	call   0x14003617c
   14003904d:	xor    r10d,r10d
   140039050:	test   eax,eax
   140039052:	je     0x140038cf3
   140039058:	test   r13b,0x20
   14003905c:	je     0x140039063
   14003905e:	mov    WORD PTR [rdi],si
   140039061:	jmp    0x140039065
   140039063:	mov    DWORD PTR [rdi],esi
   140039065:	mov    DWORD PTR [rsp+0x5c],0x1
   14003906d:	jmp    0x1400393e2
   140039072:	or     r13d,0x40
   140039076:	mov    r9d,0xa
   14003907c:	mov    edx,DWORD PTR [rsp+0x4c]
   140039080:	mov    eax,0x8000
   140039085:	test   eax,r13d
   140039088:	jne    0x140039091
   14003908a:	bt     r13d,0xc
   14003908f:	jae    0x14003909a
   140039091:	mov    r8,QWORD PTR [r15]
   140039094:	add    r15,0x8
   140039098:	jmp    0x1400390c8
   14003909a:	add    r15,0x8
   14003909e:	test   r13b,0x20
   1400390a2:	je     0x1400390b8
   1400390a4:	test   r13b,0x40
   1400390a8:	je     0x1400390b1
   1400390aa:	movsx  r8,WORD PTR [r15-0x8]
   1400390af:	jmp    0x1400390c8
   1400390b1:	movzx  r8d,WORD PTR [r15-0x8]
   1400390b6:	jmp    0x1400390c8
   1400390b8:	test   r13b,0x40
   1400390bc:	je     0x1400390c4
   1400390be:	movsxd r8,DWORD PTR [r15-0x8]
   1400390c2:	jmp    0x1400390c8
   1400390c4:	mov    r8d,DWORD PTR [r15-0x8]
   1400390c8:	test   r13b,0x40
   1400390cc:	je     0x1400390db
   1400390ce:	test   r8,r8
   1400390d1:	jns    0x1400390db
   1400390d3:	neg    r8
   1400390d6:	bts    r13d,0x8
   1400390db:	test   eax,r13d
   1400390de:	jne    0x1400390ea
   1400390e0:	bt     r13d,0xc
   1400390e5:	jb     0x1400390ea
   1400390e7:	mov    r8d,r8d
   1400390ea:	test   edi,edi
   1400390ec:	jns    0x1400390f5
   1400390ee:	mov    edi,0x1
   1400390f3:	jmp    0x140039100
   1400390f5:	and    r13d,0xfffffff7
   1400390f9:	cmp    edi,r11d
   1400390fc:	cmovg  edi,r11d
   140039100:	mov    esi,DWORD PTR [rsp+0x64]
   140039104:	mov    rax,r8
   140039107:	lea    rbx,[rbp+0x1bf]
   14003910e:	neg    rax
   140039111:	sbb    ecx,ecx
   140039113:	and    ecx,edx
   140039115:	mov    DWORD PTR [rsp+0x4c],ecx
   140039119:	mov    ecx,edi
   14003911b:	dec    edi
   14003911d:	test   ecx,ecx
   14003911f:	jg     0x140039126
   140039121:	test   r8,r8
   140039124:	je     0x140039145
   140039126:	xor    edx,edx
   140039128:	mov    rax,r8
   14003912b:	movsxd rcx,r9d
   14003912e:	div    rcx
   140039131:	mov    r8,rax
   140039134:	lea    eax,[rdx+0x30]
   140039137:	cmp    eax,0x39
   14003913a:	jle    0x14003913e
   14003913c:	add    eax,esi
   14003913e:	mov    BYTE PTR [rbx],al
   140039140:	dec    rbx
   140039143:	jmp    0x140039119
   140039145:	mov    esi,DWORD PTR [rsp+0x40]
   140039149:	lea    rax,[rbp+0x1bf]
   140039150:	mov    DWORD PTR [rsp+0x44],edi
   140039154:	sub    eax,ebx
   140039156:	inc    rbx
   140039159:	mov    DWORD PTR [rsp+0x48],eax
   14003915d:	test   r11d,r13d
   140039160:	je     0x14003927d
   140039166:	test   eax,eax
   140039168:	je     0x140039173
   14003916a:	cmp    BYTE PTR [rbx],0x30
   14003916d:	je     0x14003927d
   140039173:	dec    rbx
   140039176:	inc    DWORD PTR [rsp+0x48]
   14003917a:	mov    BYTE PTR [rbx],0x30
   14003917d:	jmp    0x14003927d
   140039182:	jne    0x140039194
   140039184:	cmp    r12b,0x67
   140039188:	jne    0x1400391cd
   14003918a:	mov    DWORD PTR [rsp+0x44],0x1
   140039192:	jmp    0x1400391cd
   140039194:	cmp    edi,r11d
   140039197:	cmovg  edi,r11d
   14003919b:	mov    DWORD PTR [rsp+0x44],edi
   14003919f:	cmp    edi,0xa3
   1400391a5:	jle    0x1400391cd
   1400391a7:	add    edi,0x15d
   1400391ad:	movsxd rcx,edi
   1400391b0:	call   0x140039ea0
   1400391b5:	mov    QWORD PTR [rbp-0x50],rax
   1400391b9:	test   rax,rax
   1400391bc:	je     0x1400391c5
   1400391be:	mov    rbx,rax
   1400391c1:	mov    esi,edi
   1400391c3:	jmp    0x1400391cd
   1400391c5:	mov    DWORD PTR [rsp+0x44],0xa3
   1400391cd:	mov    rax,QWORD PTR [r15]
   1400391d0:	mov    rcx,QWORD PTR [rip+0x4cc69]        # 0x140085e40
   1400391d7:	add    r15,0x8
   1400391db:	movsx  edi,r12b
   1400391df:	movsxd rsi,esi
   1400391e2:	mov    QWORD PTR [rbp-0x48],rax
   1400391e6:	call   QWORD PTR [rip+0x2f1a4]        # 0x140068390
   1400391ec:	lea    rcx,[rbp-0x80]
   1400391f0:	mov    r9d,edi
   1400391f3:	mov    QWORD PTR [rsp+0x30],rcx
   1400391f8:	mov    ecx,DWORD PTR [rsp+0x78]
   1400391fc:	mov    r8,rsi
   1400391ff:	mov    DWORD PTR [rsp+0x28],ecx
   140039203:	mov    ecx,DWORD PTR [rsp+0x44]
   140039207:	mov    rdx,rbx
   14003920a:	mov    DWORD PTR [rsp+0x20],ecx
   14003920e:	lea    rcx,[rbp-0x48]
   140039212:	call   rax
   140039214:	mov    edi,r13d
   140039217:	and    edi,0x80
   14003921d:	je     0x14003923d
   14003921f:	xor    eax,eax
   140039221:	cmp    DWORD PTR [rsp+0x44],eax
   140039225:	jne    0x14003923d
   140039227:	mov    rcx,QWORD PTR [rip+0x4cc2a]        # 0x140085e58
   14003922e:	call   QWORD PTR [rip+0x2f15c]        # 0x140068390
   140039234:	lea    rdx,[rbp-0x80]
   140039238:	mov    rcx,rbx
   14003923b:	call   rax
   14003923d:	cmp    r12b,0x67
   140039241:	jne    0x14003925d
   140039243:	test   edi,edi
   140039245:	jne    0x14003925d
   140039247:	mov    rcx,QWORD PTR [rip+0x4cc02]        # 0x140085e50
   14003924e:	call   QWORD PTR [rip+0x2f13c]        # 0x140068390
   140039254:	lea    rdx,[rbp-0x80]
   140039258:	mov    rcx,rbx
   14003925b:	call   rax
   14003925d:	cmp    BYTE PTR [rbx],0x2d
   140039260:	jne    0x14003926a
   140039262:	bts    r13d,0x8
   140039267:	inc    rbx
   14003926a:	mov    rcx,rbx
   14003926d:	call   0x140036550
   140039272:	mov    esi,DWORD PTR [rsp+0x40]
   140039276:	xor    r10d,r10d
   140039279:	mov    DWORD PTR [rsp+0x48],eax
   14003927d:	cmp    DWORD PTR [rsp+0x5c],r10d
   140039282:	jne    0x1400393e2
   140039288:	test   r13b,0x40
   14003928c:	je     0x1400392bf
   14003928e:	bt     r13d,0x8
   140039293:	jae    0x14003929c
   140039295:	mov    BYTE PTR [rsp+0x50],0x2d
   14003929a:	jmp    0x1400392a7
   14003929c:	test   r13b,0x1
   1400392a0:	je     0x1400392b2
   1400392a2:	mov    BYTE PTR [rsp+0x50],0x2b
   1400392a7:	mov    edi,0x1
   1400392ac:	mov    DWORD PTR [rsp+0x4c],edi
   1400392b0:	jmp    0x1400392c3
   1400392b2:	test   r13b,0x2
   1400392b6:	je     0x1400392bf
   1400392b8:	mov    BYTE PTR [rsp+0x50],0x20
   1400392bd:	jmp    0x1400392a7
   1400392bf:	mov    edi,DWORD PTR [rsp+0x4c]
   1400392c3:	mov    r12d,DWORD PTR [rsp+0x58]
   1400392c8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400392cd:	sub    r12d,DWORD PTR [rsp+0x48]
   1400392d2:	sub    r12d,edi
   1400392d5:	test   r13b,0xc
   1400392d9:	jne    0x1400392ed
   1400392db:	lea    r9,[rsp+0x40]
   1400392e0:	mov    r8,rsi
   1400392e3:	mov    edx,r12d
   1400392e6:	mov    cl,0x20
   1400392e8:	call   0x140038b6c
   1400392ed:	mov    rax,QWORD PTR [rbp-0x60]
   1400392f1:	lea    r9,[rsp+0x40]
   1400392f6:	lea    rcx,[rsp+0x50]
   1400392fb:	mov    r8,rsi
   1400392fe:	mov    edx,edi
   140039300:	mov    QWORD PTR [rsp+0x20],rax
   140039305:	call   0x140037fe0
   14003930a:	test   r13b,0x8
   14003930e:	je     0x140039328
   140039310:	test   r13b,0x4
   140039314:	jne    0x140039328
   140039316:	lea    r9,[rsp+0x40]
   14003931b:	mov    r8,rsi
   14003931e:	mov    edx,r12d
   140039321:	mov    cl,0x30
   140039323:	call   0x140038b6c
   140039328:	mov    edi,DWORD PTR [rsp+0x48]
   14003932c:	xor    eax,eax
   14003932e:	cmp    DWORD PTR [rsp+0x54],eax
   140039332:	je     0x14003939b
   140039334:	test   edi,edi
   140039336:	jle    0x14003939b
   140039338:	mov    rsi,rbx
   14003933b:	movzx  r9d,WORD PTR [rsi]
   14003933f:	lea    rdx,[rbp+0x1c0]
   140039346:	lea    rcx,[rbp-0x58]
   14003934a:	mov    r8d,0x6
   140039350:	dec    edi
   140039352:	add    rsi,0x2
   140039356:	call   0x14003e7dc
   14003935b:	xor    r10d,r10d
   14003935e:	test   eax,eax
   140039360:	jne    0x140039391
   140039362:	mov    edx,DWORD PTR [rbp-0x58]
   140039365:	test   edx,edx
   140039367:	je     0x140039391
   140039369:	mov    rax,QWORD PTR [rbp-0x60]
   14003936d:	mov    r8,QWORD PTR [rsp+0x70]
   140039372:	lea    r9,[rsp+0x40]
   140039377:	lea    rcx,[rbp+0x1c0]
   14003937e:	mov    QWORD PTR [rsp+0x20],rax
   140039383:	call   0x140037fe0
   140039388:	xor    r10d,r10d
   14003938b:	test   edi,edi
   14003938d:	jne    0x14003933b
   14003938f:	jmp    0x1400393b9
   140039391:	mov    esi,r14d
   140039394:	mov    DWORD PTR [rsp+0x40],r14d
   140039399:	jmp    0x1400393bd
   14003939b:	mov    rax,QWORD PTR [rbp-0x60]
   14003939f:	lea    r9,[rsp+0x40]
   1400393a4:	mov    r8,rsi
   1400393a7:	mov    edx,edi
   1400393a9:	mov    rcx,rbx
   1400393ac:	mov    QWORD PTR [rsp+0x20],rax
   1400393b1:	call   0x140037fe0
   1400393b6:	xor    r10d,r10d
   1400393b9:	mov    esi,DWORD PTR [rsp+0x40]
   1400393bd:	test   esi,esi
   1400393bf:	js     0x1400393e2
   1400393c1:	test   r13b,0x4
   1400393c5:	je     0x1400393e2
   1400393c7:	mov    r8,QWORD PTR [rsp+0x70]
   1400393cc:	lea    r9,[rsp+0x40]
   1400393d1:	mov    edx,r12d
   1400393d4:	mov    cl,0x20
   1400393d6:	call   0x140038b6c
   1400393db:	mov    esi,DWORD PTR [rsp+0x40]
   1400393df:	xor    r10d,r10d
   1400393e2:	mov    rax,QWORD PTR [rbp-0x50]
   1400393e6:	test   rax,rax
   1400393e9:	je     0x1400393fa
   1400393eb:	mov    rcx,rax
   1400393ee:	call   0x140033594
   1400393f3:	xor    r10d,r10d
   1400393f6:	mov    QWORD PTR [rbp-0x50],r10
   1400393fa:	mov    edi,DWORD PTR [rsp+0x44]
   1400393fe:	mov    rdx,QWORD PTR [rsp+0x68]
   140039403:	mov    r8d,DWORD PTR [rsp+0x60]
   140039408:	mov    r11d,0x200
   14003940e:	lea    r9,[rip+0xfffffffffffc6beb]        # 0x140000000
   140039415:	mov    r12b,BYTE PTR [rdx]
   140039418:	test   r12b,r12b
   14003941b:	jne    0x140038d56
   140039421:	test   r8d,r8d
   140039424:	je     0x140039430
   140039426:	cmp    r8d,0x7
   14003942a:	jne    0x140038cf3
   140039430:	cmp    BYTE PTR [rbp-0x68],r10b
   140039434:	je     0x140039441
   140039436:	mov    rcx,QWORD PTR [rbp-0x70]
   14003943a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039441:	mov    eax,esi
   140039443:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14003944a:	xor    rcx,rsp
   14003944d:	call   0x140032f00
   140039452:	mov    rbx,QWORD PTR [rsp+0x320]
   14003945a:	add    rsp,0x2d0
   140039461:	pop    r15
   140039463:	pop    r14
   140039465:	pop    r13
   140039467:	pop    r12
   140039469:	pop    rdi
   14003946a:	pop    rsi
   14003946b:	pop    rbp
   14003946c:	ret    
   14003946d:	cmp    r12b,0x49
   140039471:	je     0x1400394b0
   140039473:	cmp    r12b,0x68
   140039477:	je     0x1400394a7
   140039479:	cmp    r12b,0x6c
   14003947d:	je     0x14003948c
   14003947f:	cmp    r12b,0x77
   140039483:	jne    0x140039415
   140039485:	bts    r13d,0xb
   14003948a:	jmp    0x140039415
   14003948c:	cmp    BYTE PTR [rdx],0x6c
   14003948f:	jne    0x14003949e
   140039491:	inc    rdx
   140039494:	bts    r13d,0xc
   140039499:	jmp    0x140039415
   14003949e:	or     r13d,0x10
   1400394a2:	jmp    0x140039415
   1400394a7:	or     r13d,0x20
   1400394ab:	jmp    0x140039415
   1400394b0:	mov    al,BYTE PTR [rdx]
   1400394b2:	bts    r13d,0xf
   1400394b7:	cmp    al,0x36
   1400394b9:	jne    0x1400394cf
   1400394bb:	cmp    BYTE PTR [rdx+0x1],0x34
   1400394bf:	jne    0x1400394cf
   1400394c1:	add    rdx,0x2
   1400394c5:	bts    r13d,0xf
   1400394ca:	jmp    0x140039415
   1400394cf:	cmp    al,0x33
   1400394d1:	jne    0x1400394e7
   1400394d3:	cmp    BYTE PTR [rdx+0x1],0x32
   1400394d7:	jne    0x1400394e7
   1400394d9:	add    rdx,0x2
   1400394dd:	btr    r13d,0xf
   1400394e2:	jmp    0x140039415
   1400394e7:	cmp    al,0x64
   1400394e9:	je     0x140039415
   1400394ef:	cmp    al,0x69
   1400394f1:	je     0x140039415
   1400394f7:	cmp    al,0x6f
   1400394f9:	je     0x140039415
   1400394ff:	cmp    al,0x75
   140039501:	je     0x140039415
   140039507:	cmp    al,0x78
   140039509:	je     0x140039415
   14003950f:	cmp    al,0x58
   140039511:	je     0x140039415
   140039517:	mov    DWORD PTR [rsp+0x60],r10d
   14003951c:	lea    rdx,[rbp-0x80]
   140039520:	movzx  ecx,r12b
   140039524:	mov    DWORD PTR [rsp+0x54],r10d
   140039529:	call   0x1400399f4
   14003952e:	xor    esi,esi
   140039530:	test   eax,eax
   140039532:	je     0x14003955f
   140039534:	mov    rdx,QWORD PTR [rsp+0x70]
   140039539:	lea    r8,[rsp+0x40]
   14003953e:	mov    cl,r12b
   140039541:	call   0x140038b24
   140039546:	mov    rdx,QWORD PTR [rsp+0x68]
   14003954b:	mov    r12b,BYTE PTR [rdx]
   14003954e:	inc    rdx
   140039551:	mov    QWORD PTR [rsp+0x68],rdx
   140039556:	test   r12b,r12b
   140039559:	je     0x140039676
   14003955f:	mov    rdx,QWORD PTR [rsp+0x70]
   140039564:	lea    r8,[rsp+0x40]
   140039569:	mov    cl,r12b
   14003956c:	call   0x140038b24
   140039571:	mov    esi,DWORD PTR [rsp+0x40]
   140039575:	xor    r10d,r10d
   140039578:	jmp    0x1400393fe
   14003957d:	cmp    r12b,0x2a
   140039581:	jne    0x1400395a3
   140039583:	mov    edi,DWORD PTR [r15]
   140039586:	add    r15,0x8
   14003958a:	mov    DWORD PTR [rsp+0x44],edi
   14003958e:	test   edi,edi
   140039590:	jns    0x140039415
   140039596:	mov    edi,r14d
   140039599:	mov    DWORD PTR [rsp+0x44],r14d
   14003959e:	jmp    0x140039415
   1400395a3:	lea    ecx,[rdi+rdi*4]
   1400395a6:	movsx  eax,r12b
   1400395aa:	lea    edi,[rax+rcx*2-0x30]
   1400395ae:	mov    DWORD PTR [rsp+0x44],edi
   1400395b2:	jmp    0x140039415
   1400395b7:	mov    edi,r10d
   1400395ba:	mov    DWORD PTR [rsp+0x44],r10d
   1400395bf:	jmp    0x140039415
   1400395c4:	cmp    r12b,0x2a
   1400395c8:	jne    0x1400395e5
   1400395ca:	mov    eax,DWORD PTR [r15]
   1400395cd:	add    r15,0x8
   1400395d1:	mov    DWORD PTR [rsp+0x58],eax
   1400395d5:	test   eax,eax
   1400395d7:	jns    0x140039415
   1400395dd:	or     r13d,0x4
   1400395e1:	neg    eax
   1400395e3:	jmp    0x1400395f4
   1400395e5:	mov    eax,DWORD PTR [rsp+0x58]
   1400395e9:	lea    ecx,[rax+rax*4]
   1400395ec:	movsx  eax,r12b
   1400395f0:	lea    eax,[rax+rcx*2-0x30]
   1400395f4:	mov    DWORD PTR [rsp+0x58],eax
   1400395f8:	jmp    0x140039415
   1400395fd:	cmp    r12b,0x20
   140039601:	je     0x140039644
   140039603:	cmp    r12b,0x23
   140039607:	je     0x14003963a
   140039609:	cmp    r12b,0x2b
   14003960d:	je     0x140039631
   14003960f:	cmp    r12b,0x2d
   140039613:	je     0x140039628
   140039615:	cmp    r12b,0x30
   140039619:	jne    0x140039415
   14003961f:	or     r13d,0x8
   140039623:	jmp    0x140039415
   140039628:	or     r13d,0x4
   14003962c:	jmp    0x140039415
   140039631:	or     r13d,0x1
   140039635:	jmp    0x140039415
   14003963a:	bts    r13d,0x7
   14003963f:	jmp    0x140039415
   140039644:	or     r13d,0x2
   140039648:	jmp    0x140039415
   14003964d:	mov    DWORD PTR [rsp+0x78],r10d
   140039652:	mov    DWORD PTR [rsp+0x5c],r10d
   140039657:	mov    DWORD PTR [rsp+0x58],r10d
   14003965c:	mov    DWORD PTR [rsp+0x4c],r10d
   140039661:	mov    r13d,r10d
   140039664:	mov    edi,r14d
   140039667:	mov    DWORD PTR [rsp+0x44],r14d
   14003966c:	mov    DWORD PTR [rsp+0x54],r10d
   140039671:	jmp    0x140039415
   140039676:	call   0x140036858
   14003967b:	mov    DWORD PTR [rax],0x16
   140039681:	call   0x1400367f0
   140039686:	cmp    BYTE PTR [rbp-0x68],sil
   14003968a:	jmp    0x140038d0a
   14003968f:	int3   
   140039690:	rex push rbp
   140039692:	push   r12
   140039694:	push   r13
   140039696:	push   r14
   140039698:	push   r15
   14003969a:	sub    rsp,0x50
   14003969e:	lea    rbp,[rsp+0x40]
   1400396a3:	mov    QWORD PTR [rbp+0x40],rbx
   1400396a7:	mov    QWORD PTR [rbp+0x48],rsi
   1400396ab:	mov    QWORD PTR [rbp+0x50],rdi
   1400396af:	mov    rax,QWORD PTR [rip+0x4b9f2]        # 0x1400850a8
   1400396b6:	xor    rax,rbp
   1400396b9:	mov    QWORD PTR [rbp+0x8],rax
   1400396bd:	mov    ebx,DWORD PTR [rbp+0x60]
   1400396c0:	xor    edi,edi
   1400396c2:	mov    r14,r9
   1400396c5:	mov    r15d,r8d
   1400396c8:	mov    DWORD PTR [rbp+0x0],edx
   1400396cb:	test   ebx,ebx
   1400396cd:	jle    0x1400396f9
   1400396cf:	mov    r10d,ebx
   1400396d2:	mov    rax,r9
   1400396d5:	dec    r10d
   1400396d8:	cmp    BYTE PTR [rax],dil
   1400396db:	je     0x1400396e9
   1400396dd:	inc    rax
   1400396e0:	test   r10d,r10d
   1400396e3:	jne    0x1400396d5
   1400396e5:	or     r10d,0xffffffff
   1400396e9:	mov    eax,ebx
   1400396eb:	sub    eax,r10d
   1400396ee:	dec    eax
   1400396f0:	cmp    eax,ebx
   1400396f2:	lea    ebx,[rax+0x1]
   1400396f5:	jl     0x1400396f9
   1400396f7:	mov    ebx,eax
   1400396f9:	mov    r12d,DWORD PTR [rbp+0x78]
   1400396fd:	mov    esi,edi
   1400396ff:	test   r12d,r12d
   140039702:	jne    0x14003970b
   140039704:	mov    rax,QWORD PTR [rcx]
   140039707:	mov    r12d,DWORD PTR [rax+0x4]
   14003970b:	neg    DWORD PTR [rbp+0x80]
   140039711:	mov    r9d,ebx
   140039714:	mov    r8,r14
   140039717:	sbb    edx,edx
   140039719:	mov    ecx,r12d
   14003971c:	mov    DWORD PTR [rsp+0x28],edi
   140039720:	and    edx,0x8
   140039723:	mov    QWORD PTR [rsp+0x20],rdi
   140039728:	inc    edx
   14003972a:	call   QWORD PTR [rip+0x2eca0]        # 0x1400683d0
   140039730:	movsxd r13,eax
   140039733:	test   eax,eax
   140039735:	jne    0x14003973e
   140039737:	xor    eax,eax
   140039739:	jmp    0x140039934
   14003973e:	movabs r8,0xffffffffffffff0
   140039748:	test   eax,eax
   14003974a:	jle    0x1400397aa
   14003974c:	xor    edx,edx
   14003974e:	lea    rax,[rdx-0x20]
   140039752:	div    r13
   140039755:	cmp    rax,0x2
   140039759:	jb     0x1400397aa
   14003975b:	lea    rcx,[r13+r13*1+0x10]
   140039760:	cmp    rcx,0x400
   140039767:	ja     0x140039793
   140039769:	lea    rax,[rcx+0xf]
   14003976d:	cmp    rax,rcx
   140039770:	ja     0x140039775
   140039772:	mov    rax,r8
   140039775:	and    rax,0xfffffffffffffff0
   140039779:	call   0x14003ca30
   14003977e:	sub    rsp,rax
   140039781:	lea    rdi,[rsp+0x40]
   140039786:	test   rdi,rdi
   140039789:	je     0x140039737
   14003978b:	mov    DWORD PTR [rdi],0xcccc
   140039791:	jmp    0x1400397a6
   140039793:	call   0x140034828
   140039798:	mov    rdi,rax
   14003979b:	test   rax,rax
   14003979e:	je     0x1400397aa
   1400397a0:	mov    DWORD PTR [rax],0xdddd
   1400397a6:	add    rdi,0x10
   1400397aa:	test   rdi,rdi
   1400397ad:	je     0x140039737
   1400397af:	mov    r9d,ebx
   1400397b2:	mov    r8,r14
   1400397b5:	mov    edx,0x1
   1400397ba:	mov    ecx,r12d
   1400397bd:	mov    DWORD PTR [rsp+0x28],r13d
   1400397c2:	mov    QWORD PTR [rsp+0x20],rdi
   1400397c7:	call   QWORD PTR [rip+0x2ec03]        # 0x1400683d0
   1400397cd:	test   eax,eax
   1400397cf:	je     0x140039921
   1400397d5:	mov    r14d,DWORD PTR [rbp+0x0]
   1400397d9:	and    DWORD PTR [rsp+0x28],esi
   1400397dd:	and    QWORD PTR [rsp+0x20],rsi
   1400397e2:	mov    ecx,r14d
   1400397e5:	mov    r9d,r13d
   1400397e8:	mov    r8,rdi
   1400397eb:	mov    edx,r15d
   1400397ee:	call   QWORD PTR [rip+0x2ea74]        # 0x140068268
   1400397f4:	movsxd rsi,eax
   1400397f7:	test   eax,eax
   1400397f9:	je     0x140039921
   1400397ff:	mov    r8d,0x400
   140039805:	test   r8d,r15d
   140039808:	je     0x140039841
   14003980a:	mov    ecx,DWORD PTR [rbp+0x70]
   14003980d:	test   ecx,ecx
   14003980f:	je     0x140039921
   140039815:	cmp    esi,ecx
   140039817:	jg     0x140039921
   14003981d:	mov    rax,QWORD PTR [rbp+0x68]
   140039821:	mov    DWORD PTR [rsp+0x28],ecx
   140039825:	mov    r9d,r13d
   140039828:	mov    r8,rdi
   14003982b:	mov    edx,r15d
   14003982e:	mov    ecx,r14d
   140039831:	mov    QWORD PTR [rsp+0x20],rax
   140039836:	call   QWORD PTR [rip+0x2ea2c]        # 0x140068268
   14003983c:	jmp    0x140039921
   140039841:	test   eax,eax
   140039843:	jle    0x1400398ac
   140039845:	xor    edx,edx
   140039847:	lea    rax,[rdx-0x20]
   14003984b:	div    rsi
   14003984e:	cmp    rax,0x2
   140039852:	jb     0x1400398ac
   140039854:	lea    rcx,[rsi+rsi*1+0x10]
   140039859:	cmp    rcx,r8
   14003985c:	ja     0x140039893
   14003985e:	lea    rax,[rcx+0xf]
   140039862:	cmp    rax,rcx
   140039865:	ja     0x140039871
   140039867:	movabs rax,0xffffffffffffff0
   140039871:	and    rax,0xfffffffffffffff0
   140039875:	call   0x14003ca30
   14003987a:	sub    rsp,rax
   14003987d:	lea    rbx,[rsp+0x40]
   140039882:	test   rbx,rbx
   140039885:	je     0x140039921
   14003988b:	mov    DWORD PTR [rbx],0xcccc
   140039891:	jmp    0x1400398a6
   140039893:	call   0x140034828
   140039898:	mov    rbx,rax
   14003989b:	test   rax,rax
   14003989e:	je     0x1400398ae
   1400398a0:	mov    DWORD PTR [rax],0xdddd
   1400398a6:	add    rbx,0x10
   1400398aa:	jmp    0x1400398ae
   1400398ac:	xor    ebx,ebx
   1400398ae:	test   rbx,rbx
   1400398b1:	je     0x140039921
   1400398b3:	mov    r9d,r13d
   1400398b6:	mov    r8,rdi
   1400398b9:	mov    edx,r15d
   1400398bc:	mov    ecx,r14d
   1400398bf:	mov    DWORD PTR [rsp+0x28],esi
   1400398c3:	mov    QWORD PTR [rsp+0x20],rbx
   1400398c8:	call   QWORD PTR [rip+0x2e99a]        # 0x140068268
   1400398ce:	xor    ecx,ecx
   1400398d0:	test   eax,eax
   1400398d2:	je     0x140039910
   1400398d4:	mov    eax,DWORD PTR [rbp+0x70]
   1400398d7:	xor    edx,edx
   1400398d9:	mov    QWORD PTR [rsp+0x38],rcx
   1400398de:	mov    r9d,esi
   1400398e1:	mov    r8,rbx
   1400398e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400398e9:	test   eax,eax
   1400398eb:	jne    0x1400398f8
   1400398ed:	mov    DWORD PTR [rsp+0x28],ecx
   1400398f1:	mov    QWORD PTR [rsp+0x20],rcx
   1400398f6:	jmp    0x140039905
   1400398f8:	mov    DWORD PTR [rsp+0x28],eax
   1400398fc:	mov    rax,QWORD PTR [rbp+0x68]
   140039900:	mov    QWORD PTR [rsp+0x20],rax
   140039905:	mov    ecx,r12d
   140039908:	call   QWORD PTR [rip+0x2eaca]        # 0x1400683d8
   14003990e:	mov    esi,eax
   140039910:	lea    rcx,[rbx-0x10]
   140039914:	cmp    DWORD PTR [rcx],0xdddd
   14003991a:	jne    0x140039921
   14003991c:	call   0x140033594
   140039921:	lea    rcx,[rdi-0x10]
   140039925:	cmp    DWORD PTR [rcx],0xdddd
   14003992b:	jne    0x140039932
   14003992d:	call   0x140033594
   140039932:	mov    eax,esi
   140039934:	mov    rcx,QWORD PTR [rbp+0x8]
   140039938:	xor    rcx,rbp
   14003993b:	call   0x140032f00
   140039940:	mov    rbx,QWORD PTR [rbp+0x40]
   140039944:	mov    rsi,QWORD PTR [rbp+0x48]
   140039948:	mov    rdi,QWORD PTR [rbp+0x50]
   14003994c:	lea    rsp,[rbp+0x10]
   140039950:	pop    r15
   140039952:	pop    r14
   140039954:	pop    r13
   140039956:	pop    r12
   140039958:	pop    rbp
   140039959:	ret    
   14003995a:	int3   
   14003995b:	int3   
   14003995c:	mov    QWORD PTR [rsp+0x8],rbx
   140039961:	mov    QWORD PTR [rsp+0x10],rsi
   140039966:	push   rdi
   140039967:	sub    rsp,0x70
   14003996b:	mov    esi,edx
   14003996d:	mov    rdx,rcx
   140039970:	lea    rcx,[rsp+0x50]
   140039975:	mov    rbx,r9
   140039978:	mov    edi,r8d
   14003997b:	call   0x14003370c
   140039980:	mov    eax,DWORD PTR [rsp+0xb8]
   140039987:	mov    r11d,DWORD PTR [rsp+0xc0]
   14003998f:	lea    rcx,[rsp+0x50]
   140039994:	mov    DWORD PTR [rsp+0x40],r11d
   140039999:	mov    DWORD PTR [rsp+0x38],eax
   14003999d:	mov    eax,DWORD PTR [rsp+0xb0]
   1400399a4:	mov    DWORD PTR [rsp+0x30],eax
   1400399a8:	mov    rax,QWORD PTR [rsp+0xa8]
   1400399b0:	mov    r9,rbx
   1400399b3:	mov    QWORD PTR [rsp+0x28],rax
   1400399b8:	mov    eax,DWORD PTR [rsp+0xa0]
   1400399bf:	mov    r8d,edi
   1400399c2:	mov    edx,esi
   1400399c4:	mov    DWORD PTR [rsp+0x20],eax
   1400399c8:	call   0x140039690
   1400399cd:	cmp    BYTE PTR [rsp+0x68],0x0
   1400399d2:	je     0x1400399e0
   1400399d4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400399d9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400399e0:	lea    r11,[rsp+0x70]
   1400399e5:	mov    rbx,QWORD PTR [r11+0x10]
   1400399e9:	mov    rsi,QWORD PTR [r11+0x18]
   1400399ed:	mov    rsp,r11
   1400399f0:	pop    rdi
   1400399f1:	ret    
   1400399f2:	int3   
   1400399f3:	int3   
   1400399f4:	rex push rbx
   1400399f6:	sub    rsp,0x40
   1400399fa:	mov    ebx,ecx
   1400399fc:	lea    rcx,[rsp+0x20]
   140039a01:	call   0x14003370c
   140039a06:	mov    rax,QWORD PTR [rsp+0x20]
   140039a0b:	movzx  r11d,bl
   140039a0f:	mov    rcx,QWORD PTR [rax+0x140]
   140039a16:	movzx  eax,WORD PTR [rcx+r11*2]
   140039a1b:	and    eax,0x8000
   140039a20:	cmp    BYTE PTR [rsp+0x38],0x0
   140039a25:	je     0x140039a33
   140039a27:	mov    rcx,QWORD PTR [rsp+0x30]
   140039a2c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039a33:	add    rsp,0x40
   140039a37:	pop    rbx
   140039a38:	ret    
   140039a39:	int3   
   140039a3a:	int3   
   140039a3b:	int3   
   140039a3c:	rex push rbx
   140039a3e:	sub    rsp,0x40
   140039a42:	mov    ebx,ecx
   140039a44:	lea    rcx,[rsp+0x20]
   140039a49:	xor    edx,edx
   140039a4b:	call   0x14003370c
   140039a50:	mov    rax,QWORD PTR [rsp+0x20]
   140039a55:	movzx  r11d,bl
   140039a59:	mov    rcx,QWORD PTR [rax+0x140]
   140039a60:	movzx  eax,WORD PTR [rcx+r11*2]
   140039a65:	and    eax,0x8000
   140039a6a:	cmp    BYTE PTR [rsp+0x38],0x0
   140039a6f:	je     0x140039a7d
   140039a71:	mov    rcx,QWORD PTR [rsp+0x30]
   140039a76:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039a7d:	add    rsp,0x40
   140039a81:	pop    rbx
   140039a82:	ret    
   140039a83:	int3   
   140039a84:	mov    QWORD PTR [rsp+0x10],rsi
   140039a89:	push   rbp
   140039a8a:	push   rdi
   140039a8b:	push   r12
   140039a8d:	mov    rbp,rsp
   140039a90:	sub    rsp,0x60
   140039a94:	movsxd rdi,ecx
   140039a97:	mov    r12d,edx
   140039a9a:	lea    rcx,[rbp-0x20]
   140039a9e:	mov    rdx,r8
   140039aa1:	call   0x14003370c
   140039aa6:	lea    r11d,[rdi+0x1]
   140039aaa:	cmp    r11d,0x100
   140039ab1:	ja     0x140039ac7
   140039ab3:	mov    rax,QWORD PTR [rbp-0x20]
   140039ab7:	mov    rcx,QWORD PTR [rax+0x140]
   140039abe:	movzx  eax,WORD PTR [rcx+rdi*2]
   140039ac2:	jmp    0x140039b47
   140039ac7:	mov    esi,edi
   140039ac9:	lea    rdx,[rbp-0x20]
   140039acd:	sar    esi,0x8
   140039ad0:	movzx  ecx,sil
   140039ad4:	call   0x1400399f4
   140039ad9:	mov    edx,0x1
   140039ade:	test   eax,eax
   140039ae0:	je     0x140039af4
   140039ae2:	mov    BYTE PTR [rbp+0x38],sil
   140039ae6:	mov    BYTE PTR [rbp+0x39],dil
   140039aea:	mov    BYTE PTR [rbp+0x3a],0x0
   140039aee:	lea    r9d,[rdx+0x1]
   140039af2:	jmp    0x140039aff
   140039af4:	mov    BYTE PTR [rbp+0x38],dil
   140039af8:	mov    BYTE PTR [rbp+0x39],0x0
   140039afc:	mov    r9d,edx
   140039aff:	mov    rcx,QWORD PTR [rbp-0x20]
   140039b03:	mov    DWORD PTR [rsp+0x38],edx
   140039b07:	lea    r8,[rbp+0x38]
   140039b0b:	mov    eax,DWORD PTR [rcx+0x14]
   140039b0e:	mov    DWORD PTR [rsp+0x30],eax
   140039b12:	mov    eax,DWORD PTR [rcx+0x4]
   140039b15:	lea    rcx,[rbp-0x20]
   140039b19:	mov    DWORD PTR [rsp+0x28],eax
   140039b1d:	lea    rax,[rbp+0x20]
   140039b21:	mov    QWORD PTR [rsp+0x20],rax
   140039b26:	call   0x14003cbe0
   140039b2b:	test   eax,eax
   140039b2d:	jne    0x140039b43
   140039b2f:	cmp    BYTE PTR [rbp-0x8],al
   140039b32:	je     0x140039b3f
   140039b34:	mov    rax,QWORD PTR [rbp-0x10]
   140039b38:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140039b3f:	xor    eax,eax
   140039b41:	jmp    0x140039b5b
   140039b43:	movzx  eax,WORD PTR [rbp+0x20]
   140039b47:	and    eax,r12d
   140039b4a:	cmp    BYTE PTR [rbp-0x8],0x0
   140039b4e:	je     0x140039b5b
   140039b50:	mov    rcx,QWORD PTR [rbp-0x10]
   140039b54:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140039b5b:	mov    rsi,QWORD PTR [rsp+0x88]
   140039b63:	add    rsp,0x60
   140039b67:	pop    r12
   140039b69:	pop    rdi
   140039b6a:	pop    rbp
   140039b6b:	ret    
   140039b6c:	sub    rsp,0x28
   140039b70:	call   0x14003a404
   140039b75:	test   rax,rax
   140039b78:	je     0x140039b84
   140039b7a:	mov    ecx,0x16
   140039b7f:	call   0x14003a414
   140039b84:	test   BYTE PTR [rip+0x4c03d],0x2        # 0x140085bc8
   140039b8b:	je     0x140039ba1
   140039b8d:	mov    r8d,0x1
   140039b93:	mov    edx,0x40000015
   140039b98:	lea    ecx,[r8+0x2]
   140039b9c:	call   0x140036600
   140039ba1:	mov    ecx,0x3
   140039ba6:	call   0x140035158
   140039bab:	int3   
   140039bac:	mov    eax,DWORD PTR [rip+0x4c016]        # 0x140085bc8
   140039bb2:	mov    r8d,edx
   140039bb5:	and    ecx,edx
   140039bb7:	not    r8d
   140039bba:	and    r8d,eax
   140039bbd:	or     r8d,ecx
   140039bc0:	mov    DWORD PTR [rip+0x4c001],r8d        # 0x140085bc8
   140039bc7:	ret    
   140039bc8:	lea    r8,[rip+0x2fb41]        # 0x140069710
   140039bcf:	xor    eax,eax
   140039bd1:	mov    rdx,r8
   140039bd4:	cmp    ecx,DWORD PTR [rdx]
   140039bd6:	je     0x140039be6
   140039bd8:	inc    eax
   140039bda:	add    rdx,0x10
   140039bde:	cmp    eax,0x16
   140039be1:	jb     0x140039bd4
   140039be3:	xor    eax,eax
   140039be5:	ret    
   140039be6:	cdqe   
   140039be8:	add    rax,rax
   140039beb:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   140039bf0:	ret    
   140039bf1:	int3   
   140039bf2:	int3   
   140039bf3:	int3   
   140039bf4:	mov    QWORD PTR [rsp+0x10],rbx
   140039bf9:	mov    QWORD PTR [rsp+0x18],rbp
   140039bfe:	mov    QWORD PTR [rsp+0x20],rsi
   140039c03:	push   rdi
   140039c04:	push   r12
   140039c06:	push   r13
   140039c08:	sub    rsp,0x250
   140039c0f:	mov    rax,QWORD PTR [rip+0x4b492]        # 0x1400850a8
   140039c16:	xor    rax,rsp
   140039c19:	mov    QWORD PTR [rsp+0x240],rax
   140039c21:	mov    edi,ecx
   140039c23:	call   0x140039bc8
   140039c28:	xor    esi,esi
   140039c2a:	mov    rbx,rax
   140039c2d:	test   rax,rax
   140039c30:	je     0x140039e24
   140039c36:	lea    ecx,[rsi+0x3]
   140039c39:	call   0x14003eb04
   140039c3e:	cmp    eax,0x1
   140039c41:	je     0x140039dbc
   140039c47:	lea    ecx,[rsi+0x3]
   140039c4a:	call   0x14003eb04
   140039c4f:	test   eax,eax
   140039c51:	jne    0x140039c60
   140039c53:	cmp    DWORD PTR [rip+0x4b446],0x1        # 0x1400850a0
   140039c5a:	je     0x140039dbc
   140039c60:	cmp    edi,0xfc
   140039c66:	je     0x140039e24
   140039c6c:	lea    rbp,[rip+0x4fb9d]        # 0x140089810
   140039c73:	mov    r12d,0x314
   140039c79:	lea    r8,[rip+0x2fc80]        # 0x140069900
   140039c80:	mov    rcx,rbp
   140039c83:	mov    edx,r12d
   140039c86:	call   0x140034290
   140039c8b:	xor    ecx,ecx
   140039c8d:	test   eax,eax
   140039c8f:	jne    0x140039da9
   140039c95:	lea    r13,[rip+0x4fba6]        # 0x140089842
   140039c9c:	mov    r8d,0x104
   140039ca2:	mov    WORD PTR [rip+0x4fda1],si        # 0x140089a4a
   140039ca9:	mov    rdx,r13
   140039cac:	call   QWORD PTR [rip+0x2e59e]        # 0x140068250
   140039cb2:	lea    edi,[r12-0x19]
   140039cb7:	test   eax,eax
   140039cb9:	jne    0x140039ce5
   140039cbb:	lea    r8,[rip+0x2fc0e]        # 0x1400698d0
   140039cc2:	mov    edx,edi
   140039cc4:	mov    rcx,r13
   140039cc7:	call   0x140034290
   140039ccc:	test   eax,eax
   140039cce:	je     0x140039ce5
   140039cd0:	xor    r9d,r9d
   140039cd3:	xor    r8d,r8d
   140039cd6:	xor    edx,edx
   140039cd8:	xor    ecx,ecx
   140039cda:	mov    QWORD PTR [rsp+0x20],rsi
   140039cdf:	call   0x14003674c
   140039ce4:	int3   
   140039ce5:	mov    rcx,r13
   140039ce8:	call   0x14003eae8
   140039ced:	inc    rax
   140039cf0:	cmp    rax,0x3c
   140039cf4:	jbe    0x140039d3d
   140039cf6:	mov    rcx,r13
   140039cf9:	call   0x14003eae8
   140039cfe:	lea    r8,[rip+0x2fbc3]        # 0x1400698c8
   140039d05:	mov    r9d,0x3
   140039d0b:	lea    rcx,[rbp+rax*2-0x44]
   140039d10:	mov    rax,rcx
   140039d13:	sub    rax,r13
   140039d16:	sar    rax,1
   140039d19:	sub    rdi,rax
   140039d1c:	mov    rdx,rdi
   140039d1f:	call   0x140035450
   140039d24:	test   eax,eax
   140039d26:	je     0x140039d3d
   140039d28:	xor    r9d,r9d
   140039d2b:	xor    r8d,r8d
   140039d2e:	xor    edx,edx
   140039d30:	xor    ecx,ecx
   140039d32:	mov    QWORD PTR [rsp+0x20],rsi
   140039d37:	call   0x14003674c
   140039d3c:	int3   
   140039d3d:	lea    r8,[rip+0x2fb78]        # 0x1400698bc
   140039d44:	mov    rdx,r12
   140039d47:	mov    rcx,rbp
   140039d4a:	call   0x14003ea60
   140039d4f:	test   eax,eax
   140039d51:	jne    0x140039d94
   140039d53:	mov    r8,rbx
   140039d56:	mov    rdx,r12
   140039d59:	mov    rcx,rbp
   140039d5c:	call   0x14003ea60
   140039d61:	test   eax,eax
   140039d63:	jne    0x140039d7f
   140039d65:	lea    rdx,[rip+0x2fb04]        # 0x140069870
   140039d6c:	mov    r8d,0x12010
   140039d72:	mov    rcx,rbp
   140039d75:	call   0x14003e858
   140039d7a:	jmp    0x140039e24
   140039d7f:	xor    r9d,r9d
   140039d82:	xor    r8d,r8d
   140039d85:	xor    edx,edx
   140039d87:	xor    ecx,ecx
   140039d89:	mov    QWORD PTR [rsp+0x20],rsi
   140039d8e:	call   0x14003674c
   140039d93:	int3   
   140039d94:	xor    r9d,r9d
   140039d97:	xor    r8d,r8d
   140039d9a:	xor    edx,edx
   140039d9c:	xor    ecx,ecx
   140039d9e:	mov    QWORD PTR [rsp+0x20],rsi
   140039da3:	call   0x14003674c
   140039da8:	int3   
   140039da9:	xor    r9d,r9d
   140039dac:	xor    r8d,r8d
   140039daf:	xor    edx,edx
   140039db1:	mov    QWORD PTR [rsp+0x20],rsi
   140039db6:	call   0x14003674c
   140039dbb:	int3   
   140039dbc:	mov    ecx,0xfffffff4
   140039dc1:	call   QWORD PTR [rip+0x2e491]        # 0x140068258
   140039dc7:	mov    rdi,rax
   140039dca:	test   rax,rax
   140039dcd:	je     0x140039e24
   140039dcf:	cmp    rax,0xffffffffffffffff
   140039dd3:	je     0x140039e24
   140039dd5:	mov    edx,esi
   140039dd7:	lea    r8,[rsp+0x40]
   140039ddc:	mov    cl,BYTE PTR [rbx]
   140039dde:	mov    BYTE PTR [r8],cl
   140039de1:	cmp    WORD PTR [rbx],si
   140039de4:	je     0x140039df7
   140039de6:	inc    edx
   140039de8:	inc    r8
   140039deb:	add    rbx,0x2
   140039def:	cmp    edx,0x1f4
   140039df5:	jb     0x140039ddc
   140039df7:	lea    rcx,[rsp+0x40]
   140039dfc:	mov    BYTE PTR [rsp+0x233],sil
   140039e04:	call   0x140036550
   140039e09:	lea    r9,[rsp+0x30]
   140039e0e:	lea    rdx,[rsp+0x40]
   140039e13:	mov    rcx,rdi
   140039e16:	mov    r8,rax
   140039e19:	mov    QWORD PTR [rsp+0x20],rsi
   140039e1e:	call   QWORD PTR [rip+0x2e43c]        # 0x140068260
   140039e24:	mov    rcx,QWORD PTR [rsp+0x240]
   140039e2c:	xor    rcx,rsp
   140039e2f:	call   0x140032f00
   140039e34:	lea    r11,[rsp+0x250]
   140039e3c:	mov    rbx,QWORD PTR [r11+0x28]
   140039e40:	mov    rbp,QWORD PTR [r11+0x30]
   140039e44:	mov    rsi,QWORD PTR [r11+0x38]
   140039e48:	mov    rsp,r11
   140039e4b:	pop    r13
   140039e4d:	pop    r12
   140039e4f:	pop    rdi
   140039e50:	ret    
   140039e51:	int3   
   140039e52:	int3   
   140039e53:	int3   
   140039e54:	sub    rsp,0x28
   140039e58:	mov    ecx,0x3
   140039e5d:	call   0x14003eb04
   140039e62:	cmp    eax,0x1
   140039e65:	je     0x140039e7e
   140039e67:	mov    ecx,0x3
   140039e6c:	call   0x14003eb04
   140039e71:	test   eax,eax
   140039e73:	jne    0x140039e92
   140039e75:	cmp    DWORD PTR [rip+0x4b224],0x1        # 0x1400850a0
   140039e7c:	jne    0x140039e92
   140039e7e:	mov    ecx,0xfc
   140039e83:	call   0x140039bf4
   140039e88:	mov    ecx,0xff
   140039e8d:	call   0x140039bf4
   140039e92:	add    rsp,0x28
   140039e96:	ret    
   140039e97:	int3   
   140039e98:	mov    QWORD PTR [rip+0x4ff99],rcx        # 0x140089e38
   140039e9f:	ret    
   140039ea0:	mov    rax,rsp
   140039ea3:	mov    QWORD PTR [rax+0x8],rbx
   140039ea7:	mov    QWORD PTR [rax+0x10],rbp
   140039eab:	mov    QWORD PTR [rax+0x18],rsi
   140039eaf:	mov    QWORD PTR [rax+0x20],rdi
   140039eb3:	push   r12
   140039eb5:	sub    rsp,0x20
   140039eb9:	mov    edi,DWORD PTR [rip+0x4ff81]        # 0x140089e40
   140039ebf:	xor    ebp,ebp
   140039ec1:	mov    rsi,rcx
   140039ec4:	or     r12d,0xffffffff
   140039ec8:	mov    rcx,rsi
   140039ecb:	call   0x140034828
   140039ed0:	mov    rbx,rax
   140039ed3:	test   rax,rax
   140039ed6:	jne    0x140039f00
   140039ed8:	test   edi,edi
   140039eda:	je     0x140039f00
   140039edc:	mov    ecx,ebp
   140039ede:	call   QWORD PTR [rip+0x2e23c]        # 0x140068120
   140039ee4:	mov    edi,DWORD PTR [rip+0x4ff56]        # 0x140089e40
   140039eea:	lea    r11d,[rbp+0x3e8]
   140039ef1:	cmp    r11d,edi
   140039ef4:	mov    ebp,r11d
   140039ef7:	cmova  ebp,r12d
   140039efb:	cmp    ebp,r12d
   140039efe:	jne    0x140039ec8
   140039f00:	mov    rbp,QWORD PTR [rsp+0x38]
   140039f05:	mov    rsi,QWORD PTR [rsp+0x40]
   140039f0a:	mov    rdi,QWORD PTR [rsp+0x48]
   140039f0f:	mov    rax,rbx
   140039f12:	mov    rbx,QWORD PTR [rsp+0x30]
   140039f17:	add    rsp,0x20
   140039f1b:	pop    r12
   140039f1d:	ret    
   140039f1e:	int3   
   140039f1f:	int3   
   140039f20:	mov    rax,rsp
   140039f23:	mov    QWORD PTR [rax+0x8],rbx
   140039f27:	mov    QWORD PTR [rax+0x10],rbp
   140039f2b:	mov    QWORD PTR [rax+0x18],rsi
   140039f2f:	mov    QWORD PTR [rax+0x20],rdi
   140039f33:	push   r12
   140039f35:	sub    rsp,0x20
   140039f39:	xor    edi,edi
   140039f3b:	mov    rsi,rdx
   140039f3e:	mov    rbp,rcx
   140039f41:	or     r12d,0xffffffff
   140039f45:	xor    r8d,r8d
   140039f48:	mov    rdx,rsi
   140039f4b:	mov    rcx,rbp
   140039f4e:	call   0x140036aa4
   140039f53:	mov    rbx,rax
   140039f56:	test   rax,rax
   140039f59:	jne    0x140039f85
   140039f5b:	cmp    DWORD PTR [rip+0x4fedf],eax        # 0x140089e40
   140039f61:	jbe    0x140039f85
   140039f63:	mov    ecx,edi
   140039f65:	call   QWORD PTR [rip+0x2e1b5]        # 0x140068120
   140039f6b:	lea    r11d,[rdi+0x3e8]
   140039f72:	cmp    r11d,DWORD PTR [rip+0x4fec7]        # 0x140089e40
   140039f79:	mov    edi,r11d
   140039f7c:	cmova  edi,r12d
   140039f80:	cmp    edi,r12d
   140039f83:	jne    0x140039f45
   140039f85:	mov    rbp,QWORD PTR [rsp+0x38]
   140039f8a:	mov    rsi,QWORD PTR [rsp+0x40]
   140039f8f:	mov    rdi,QWORD PTR [rsp+0x48]
   140039f94:	mov    rax,rbx
   140039f97:	mov    rbx,QWORD PTR [rsp+0x30]
   140039f9c:	add    rsp,0x20
   140039fa0:	pop    r12
   140039fa2:	ret    
   140039fa3:	int3   
   140039fa4:	mov    rax,rsp
   140039fa7:	mov    QWORD PTR [rax+0x8],rbx
   140039fab:	mov    QWORD PTR [rax+0x10],rbp
   140039faf:	mov    QWORD PTR [rax+0x18],rsi
   140039fb3:	mov    QWORD PTR [rax+0x20],rdi
   140039fb7:	push   r12
   140039fb9:	sub    rsp,0x20
   140039fbd:	xor    esi,esi
   140039fbf:	mov    rdi,rdx
   140039fc2:	mov    rbp,rcx
   140039fc5:	or     r12d,0xffffffff
   140039fc9:	mov    rdx,rdi
   140039fcc:	mov    rcx,rbp
   140039fcf:	call   0x140034464
   140039fd4:	mov    rbx,rax
   140039fd7:	test   rax,rax
   140039fda:	jne    0x14003a00b
   140039fdc:	test   rdi,rdi
   140039fdf:	je     0x14003a00b
   140039fe1:	cmp    DWORD PTR [rip+0x4fe59],eax        # 0x140089e40
   140039fe7:	jbe    0x14003a00b
   140039fe9:	mov    ecx,esi
   140039feb:	call   QWORD PTR [rip+0x2e12f]        # 0x140068120
   140039ff1:	lea    r11d,[rsi+0x3e8]
   140039ff8:	cmp    r11d,DWORD PTR [rip+0x4fe41]        # 0x140089e40
   140039fff:	mov    esi,r11d
   14003a002:	cmova  esi,r12d
   14003a006:	cmp    esi,r12d
   14003a009:	jne    0x140039fc9
   14003a00b:	mov    rbp,QWORD PTR [rsp+0x38]
   14003a010:	mov    rsi,QWORD PTR [rsp+0x40]
   14003a015:	mov    rdi,QWORD PTR [rsp+0x48]
   14003a01a:	mov    rax,rbx
   14003a01d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a022:	add    rsp,0x20
   14003a026:	pop    r12
   14003a028:	ret    
   14003a029:	int3   
   14003a02a:	int3   
   14003a02b:	int3   
   14003a02c:	mov    QWORD PTR [rsp+0x8],rbx
   14003a031:	mov    QWORD PTR [rsp+0x10],rsi
   14003a036:	push   rdi
   14003a037:	sub    rsp,0x40
   14003a03b:	mov    ebx,edx
   14003a03d:	mov    rdx,rcx
   14003a040:	lea    rcx,[rsp+0x20]
   14003a045:	mov    edi,r9d
   14003a048:	mov    esi,r8d
   14003a04b:	call   0x14003370c
   14003a050:	mov    rax,QWORD PTR [rsp+0x28]
   14003a055:	movzx  r11d,bl
   14003a059:	test   BYTE PTR [r11+rax*1+0x1d],dil
   14003a05e:	jne    0x14003a07f
   14003a060:	test   esi,esi
   14003a062:	je     0x14003a079
   14003a064:	mov    rax,QWORD PTR [rsp+0x20]
   14003a069:	mov    rcx,QWORD PTR [rax+0x140]
   14003a070:	movzx  eax,WORD PTR [rcx+r11*2]
   14003a075:	and    eax,esi
   14003a077:	jmp    0x14003a07b
   14003a079:	xor    eax,eax
   14003a07b:	test   eax,eax
   14003a07d:	je     0x14003a084
   14003a07f:	mov    eax,0x1
   14003a084:	cmp    BYTE PTR [rsp+0x38],0x0
   14003a089:	je     0x14003a097
   14003a08b:	mov    rcx,QWORD PTR [rsp+0x30]
   14003a090:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003a097:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a09c:	mov    rsi,QWORD PTR [rsp+0x58]
   14003a0a1:	add    rsp,0x40
   14003a0a5:	pop    rdi
   14003a0a6:	ret    
   14003a0a7:	int3   
   14003a0a8:	mov    edx,ecx
   14003a0aa:	mov    r9d,0x4
   14003a0b0:	xor    r8d,r8d
   14003a0b3:	xor    ecx,ecx
   14003a0b5:	jmp    0x14003a02c
   14003a0ba:	int3   
   14003a0bb:	int3   
   14003a0bc:	mov    QWORD PTR [rsp+0x10],rbx
   14003a0c1:	mov    WORD PTR [rsp+0x8],cx
   14003a0c6:	push   rbp
   14003a0c7:	mov    rbp,rsp
   14003a0ca:	sub    rsp,0x50
   14003a0ce:	mov    eax,0xffff
   14003a0d3:	cmp    cx,ax
   14003a0d6:	je     0x14003a186
   14003a0dc:	lea    rcx,[rbp-0x20]
   14003a0e0:	call   0x14003370c
   14003a0e5:	mov    rbx,QWORD PTR [rbp-0x20]
   14003a0e9:	cmp    DWORD PTR [rbx+0x14],0x0
   14003a0ed:	jne    0x14003a116
   14003a0ef:	movzx  edx,WORD PTR [rbp+0x10]
   14003a0f3:	lea    eax,[rdx-0x41]
   14003a0f6:	cmp    ax,0x19
   14003a0fa:	ja     0x14003a100
   14003a0fc:	add    dx,0x20
   14003a100:	cmp    BYTE PTR [rbp-0x8],0x0
   14003a104:	je     0x14003a111
   14003a106:	mov    rcx,QWORD PTR [rbp-0x10]
   14003a10a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003a111:	movzx  eax,dx
   14003a114:	jmp    0x14003a186
   14003a116:	movzx  ecx,WORD PTR [rbp+0x10]
   14003a11a:	mov    edx,0x100
   14003a11f:	cmp    cx,dx
   14003a122:	jae    0x14003a149
   14003a124:	mov    edx,0x1
   14003a129:	call   0x14003e7f0
   14003a12e:	test   eax,eax
   14003a130:	jne    0x14003a138
   14003a132:	movzx  eax,WORD PTR [rbp+0x10]
   14003a136:	jmp    0x14003a175
   14003a138:	movzx  ecx,WORD PTR [rbp+0x10]
   14003a13c:	mov    rax,QWORD PTR [rbx+0x148]
   14003a143:	movzx  eax,BYTE PTR [rax+rcx*1]
   14003a147:	jmp    0x14003a175
   14003a149:	mov    ecx,DWORD PTR [rbx+0x14]
   14003a14c:	lea    rax,[rbp+0x20]
   14003a150:	mov    r9d,0x1
   14003a156:	mov    DWORD PTR [rsp+0x28],r9d
   14003a15b:	lea    r8,[rbp+0x10]
   14003a15f:	mov    QWORD PTR [rsp+0x20],rax
   14003a164:	call   0x14003c994
   14003a169:	test   eax,eax
   14003a16b:	movzx  eax,WORD PTR [rbp+0x10]
   14003a16f:	je     0x14003a175
   14003a171:	movzx  eax,WORD PTR [rbp+0x20]
   14003a175:	cmp    BYTE PTR [rbp-0x8],0x0
   14003a179:	je     0x14003a186
   14003a17b:	mov    rcx,QWORD PTR [rbp-0x10]
   14003a17f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003a186:	mov    rbx,QWORD PTR [rsp+0x68]
   14003a18b:	add    rsp,0x50
   14003a18f:	pop    rbp
   14003a190:	ret    
   14003a191:	int3   
   14003a192:	int3   
   14003a193:	int3   
   14003a194:	mov    QWORD PTR [rsp+0x8],rbx
   14003a199:	mov    QWORD PTR [rsp+0x10],rsi
   14003a19e:	mov    QWORD PTR [rsp+0x18],rdi
   14003a1a3:	push   r12
   14003a1a5:	sub    rsp,0x20
   14003a1a9:	lea    r12,[rip+0x4ba20]        # 0x140085bd0
   14003a1b0:	xor    esi,esi
   14003a1b2:	xor    ebx,ebx
   14003a1b4:	mov    rdi,r12
   14003a1b7:	cmp    DWORD PTR [rdi+0x8],0x1
   14003a1bb:	jne    0x14003a1e3
   14003a1bd:	movsxd rax,esi
   14003a1c0:	mov    edx,0xfa0
   14003a1c5:	inc    esi
   14003a1c7:	lea    rcx,[rax+rax*4]
   14003a1cb:	lea    rax,[rip+0x4fc7e]        # 0x140089e50
   14003a1d2:	lea    rcx,[rax+rcx*8]
   14003a1d6:	mov    QWORD PTR [rdi],rcx
   14003a1d9:	call   QWORD PTR [rip+0x2e069]        # 0x140068248
   14003a1df:	test   eax,eax
   14003a1e1:	je     0x14003a209
   14003a1e3:	inc    ebx
   14003a1e5:	add    rdi,0x10
   14003a1e9:	cmp    ebx,0x24
   14003a1ec:	jl     0x14003a1b7
   14003a1ee:	mov    eax,0x1
   14003a1f3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a1f8:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a1fd:	mov    rdi,QWORD PTR [rsp+0x40]
   14003a202:	add    rsp,0x20
   14003a206:	pop    r12
   14003a208:	ret    
   14003a209:	movsxd rax,ebx
   14003a20c:	add    rax,rax
   14003a20f:	and    QWORD PTR [r12+rax*8],0x0
   14003a214:	xor    eax,eax
   14003a216:	jmp    0x14003a1f3
   14003a218:	mov    QWORD PTR [rsp+0x8],rbx
   14003a21d:	mov    QWORD PTR [rsp+0x10],rbp
   14003a222:	mov    QWORD PTR [rsp+0x18],rsi
   14003a227:	push   rdi
   14003a228:	sub    rsp,0x20
   14003a22c:	mov    edi,0x24
   14003a231:	lea    rbx,[rip+0x4b998]        # 0x140085bd0
   14003a238:	mov    esi,edi
   14003a23a:	mov    rbp,QWORD PTR [rbx]
   14003a23d:	test   rbp,rbp
   14003a240:	je     0x14003a25d
   14003a242:	cmp    DWORD PTR [rbx+0x8],0x1
   14003a246:	je     0x14003a25d
   14003a248:	mov    rcx,rbp
   14003a24b:	call   QWORD PTR [rip+0x2e1bf]        # 0x140068410
   14003a251:	mov    rcx,rbp
   14003a254:	call   0x140033594
   14003a259:	and    QWORD PTR [rbx],0x0
   14003a25d:	add    rbx,0x10
   14003a261:	dec    rsi
   14003a264:	jne    0x14003a23a
   14003a266:	lea    rbx,[rip+0x4b96b]        # 0x140085bd8
   14003a26d:	mov    rcx,QWORD PTR [rbx-0x8]
   14003a271:	test   rcx,rcx
   14003a274:	je     0x14003a281
   14003a276:	cmp    DWORD PTR [rbx],0x1
   14003a279:	jne    0x14003a281
   14003a27b:	call   QWORD PTR [rip+0x2e18f]        # 0x140068410
   14003a281:	add    rbx,0x10
   14003a285:	dec    rdi
   14003a288:	jne    0x14003a26d
   14003a28a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a28f:	mov    rbp,QWORD PTR [rsp+0x38]
   14003a294:	mov    rsi,QWORD PTR [rsp+0x40]
   14003a299:	add    rsp,0x20
   14003a29d:	pop    rdi
   14003a29e:	ret    
   14003a29f:	int3   
   14003a2a0:	movsxd rcx,ecx
   14003a2a3:	lea    rax,[rip+0x4b926]        # 0x140085bd0
   14003a2aa:	add    rcx,rcx
   14003a2ad:	mov    rcx,QWORD PTR [rax+rcx*8]
   14003a2b1:	rex.W jmp QWORD PTR [rip+0x2de98]        # 0x140068150
   14003a2b8:	mov    QWORD PTR [rsp+0x8],rbx
   14003a2bd:	mov    QWORD PTR [rsp+0x10],rsi
   14003a2c2:	mov    QWORD PTR [rsp+0x18],rdi
   14003a2c7:	push   r13
   14003a2c9:	sub    rsp,0x20
   14003a2cd:	movsxd rbx,ecx
   14003a2d0:	mov    esi,0x1
   14003a2d5:	cmp    QWORD PTR [rip+0x4f4f3],0x0        # 0x1400897d0
   14003a2dd:	jne    0x14003a2f6
   14003a2df:	call   0x140039e54
   14003a2e4:	lea    ecx,[rsi+0x1d]
   14003a2e7:	call   0x140039bf4
   14003a2ec:	mov    ecx,0xff
   14003a2f1:	call   0x140034e28
   14003a2f6:	mov    rdi,rbx
   14003a2f9:	add    rdi,rdi
   14003a2fc:	lea    r13,[rip+0x4b8cd]        # 0x140085bd0
   14003a303:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14003a309:	je     0x14003a30f
   14003a30b:	mov    eax,esi
   14003a30d:	jmp    0x14003a388
   14003a30f:	mov    ecx,0x28
   14003a314:	call   0x140039ea0
   14003a319:	mov    rbx,rax
   14003a31c:	test   rax,rax
   14003a31f:	jne    0x14003a330
   14003a321:	call   0x140036858
   14003a326:	mov    DWORD PTR [rax],0xc
   14003a32c:	xor    eax,eax
   14003a32e:	jmp    0x14003a388
   14003a330:	mov    ecx,0xa
   14003a335:	call   0x14003a3a0
   14003a33a:	nop
   14003a33b:	mov    rcx,rbx
   14003a33e:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14003a344:	jne    0x14003a373
   14003a346:	mov    edx,0xfa0
   14003a34b:	call   QWORD PTR [rip+0x2def7]        # 0x140068248
   14003a351:	test   eax,eax
   14003a353:	jne    0x14003a36c
   14003a355:	mov    rcx,rbx
   14003a358:	call   0x140033594
   14003a35d:	call   0x140036858
   14003a362:	mov    DWORD PTR [rax],0xc
   14003a368:	xor    esi,esi
   14003a36a:	jmp    0x14003a379
   14003a36c:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14003a371:	jmp    0x14003a379
   14003a373:	call   0x140033594
   14003a378:	nop
   14003a379:	mov    rcx,QWORD PTR [rip+0x4b8f0]        # 0x140085c70
   14003a380:	call   QWORD PTR [rip+0x2ddca]        # 0x140068150
   14003a386:	jmp    0x14003a30b
   14003a388:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a38d:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a392:	mov    rdi,QWORD PTR [rsp+0x40]
   14003a397:	add    rsp,0x20
   14003a39b:	pop    r13
   14003a39d:	ret    
   14003a39e:	int3   
   14003a39f:	int3   
   14003a3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14003a3a5:	push   rdi
   14003a3a6:	sub    rsp,0x20
   14003a3aa:	movsxd rbx,ecx
   14003a3ad:	lea    rdi,[rip+0x4b81c]        # 0x140085bd0
   14003a3b4:	add    rbx,rbx
   14003a3b7:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14003a3bc:	jne    0x14003a3cf
   14003a3be:	call   0x14003a2b8
   14003a3c3:	test   eax,eax
   14003a3c5:	jne    0x14003a3cf
   14003a3c7:	lea    ecx,[rax+0x11]
   14003a3ca:	call   0x140035184
   14003a3cf:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14003a3d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a3d8:	add    rsp,0x20
   14003a3dc:	pop    rdi
   14003a3dd:	rex.W jmp QWORD PTR [rip+0x2dd8c]        # 0x140068170
   14003a3e4:	mov    QWORD PTR [rip+0x4fc95],rcx        # 0x14008a080
   14003a3eb:	mov    QWORD PTR [rip+0x4fc96],rcx        # 0x14008a088
   14003a3f2:	mov    QWORD PTR [rip+0x4fc97],rcx        # 0x14008a090
   14003a3f9:	mov    QWORD PTR [rip+0x4fc98],rcx        # 0x14008a098
   14003a400:	ret    
   14003a401:	int3   
   14003a402:	int3   
   14003a403:	int3   
   14003a404:	mov    rcx,QWORD PTR [rip+0x4fc85]        # 0x14008a090
   14003a40b:	rex.W jmp QWORD PTR [rip+0x2df7e]        # 0x140068390
   14003a412:	int3   
   14003a413:	int3   
   14003a414:	mov    QWORD PTR [rsp+0x10],rbx
   14003a419:	mov    QWORD PTR [rsp+0x18],rsi
   14003a41e:	push   rdi
   14003a41f:	push   r12
   14003a421:	push   r13
   14003a423:	push   r14
   14003a425:	push   r15
   14003a427:	sub    rsp,0x30
   14003a42b:	mov    ebx,ecx
   14003a42d:	xor    edi,edi
   14003a42f:	mov    DWORD PTR [rsp+0x60],edi
   14003a433:	xor    esi,esi
   14003a435:	mov    edx,ecx
   14003a437:	sub    edx,0x2
   14003a43a:	je     0x14003a505
   14003a440:	sub    edx,0x2
   14003a443:	je     0x14003a4a7
   14003a445:	sub    edx,0x2
   14003a448:	je     0x14003a497
   14003a44a:	sub    edx,0x2
   14003a44d:	je     0x14003a4a7
   14003a44f:	sub    edx,0x3
   14003a452:	je     0x14003a4a7
   14003a454:	sub    edx,0x4
   14003a457:	je     0x14003a487
   14003a459:	sub    edx,0x6
   14003a45c:	je     0x14003a474
   14003a45e:	dec    edx
   14003a460:	je     0x14003a497
   14003a462:	call   0x140036858
   14003a467:	mov    DWORD PTR [rax],0x16
   14003a46d:	call   0x1400367f0
   14003a472:	jmp    0x14003a4b4
   14003a474:	lea    r12,[rip+0x4fc0d]        # 0x14008a088
   14003a47b:	mov    rcx,QWORD PTR [rip+0x4fc06]        # 0x14008a088
   14003a482:	jmp    0x14003a513
   14003a487:	lea    r12,[rip+0x4fc0a]        # 0x14008a098
   14003a48e:	mov    rcx,QWORD PTR [rip+0x4fc03]        # 0x14008a098
   14003a495:	jmp    0x14003a513
   14003a497:	lea    r12,[rip+0x4fbf2]        # 0x14008a090
   14003a49e:	mov    rcx,QWORD PTR [rip+0x4fbeb]        # 0x14008a090
   14003a4a5:	jmp    0x14003a513
   14003a4a7:	call   0x140037bb0
   14003a4ac:	mov    rsi,rax
   14003a4af:	test   rax,rax
   14003a4b2:	jne    0x14003a4bc
   14003a4b4:	or     eax,0xffffffff
   14003a4b7:	jmp    0x14003a62e
   14003a4bc:	mov    rdx,QWORD PTR [rax+0xa0]
   14003a4c3:	mov    rcx,rdx
   14003a4c6:	movsxd r8,DWORD PTR [rip+0x2f53f]        # 0x140069a0c
   14003a4cd:	cmp    DWORD PTR [rcx+0x4],ebx
   14003a4d0:	je     0x14003a4e5
   14003a4d2:	add    rcx,0x10
   14003a4d6:	mov    rax,r8
   14003a4d9:	shl    rax,0x4
   14003a4dd:	add    rax,rdx
   14003a4e0:	cmp    rcx,rax
   14003a4e3:	jb     0x14003a4cd
   14003a4e5:	mov    rax,r8
   14003a4e8:	shl    rax,0x4
   14003a4ec:	add    rax,rdx
   14003a4ef:	cmp    rcx,rax
   14003a4f2:	jae    0x14003a4f9
   14003a4f4:	cmp    DWORD PTR [rcx+0x4],ebx
   14003a4f7:	je     0x14003a4fb
   14003a4f9:	xor    ecx,ecx
   14003a4fb:	lea    r12,[rcx+0x8]
   14003a4ff:	mov    r13,QWORD PTR [r12]
   14003a503:	jmp    0x14003a525
   14003a505:	lea    r12,[rip+0x4fb74]        # 0x14008a080
   14003a50c:	mov    rcx,QWORD PTR [rip+0x4fb6d]        # 0x14008a080
   14003a513:	mov    edi,0x1
   14003a518:	mov    DWORD PTR [rsp+0x60],edi
   14003a51c:	call   QWORD PTR [rip+0x2de6e]        # 0x140068390
   14003a522:	mov    r13,rax
   14003a525:	cmp    r13,0x1
   14003a529:	jne    0x14003a532
   14003a52b:	xor    eax,eax
   14003a52d:	jmp    0x14003a62e
   14003a532:	test   r13,r13
   14003a535:	jne    0x14003a541
   14003a537:	lea    ecx,[r13+0x3]
   14003a53b:	call   0x140035158
   14003a540:	int3   
   14003a541:	test   edi,edi
   14003a543:	je     0x14003a54d
   14003a545:	xor    ecx,ecx
   14003a547:	call   0x14003a3a0
   14003a54c:	nop
   14003a54d:	cmp    ebx,0x8
   14003a550:	je     0x14003a563
   14003a552:	cmp    ebx,0xb
   14003a555:	je     0x14003a563
   14003a557:	cmp    ebx,0x4
   14003a55a:	je     0x14003a563
   14003a55c:	mov    r15,QWORD PTR [rsp+0x28]
   14003a561:	jmp    0x14003a58f
   14003a563:	mov    r15,QWORD PTR [rsi+0xa8]
   14003a56a:	mov    QWORD PTR [rsp+0x28],r15
   14003a56f:	and    QWORD PTR [rsi+0xa8],0x0
   14003a577:	cmp    ebx,0x8
   14003a57a:	jne    0x14003a58f
   14003a57c:	mov    r14d,DWORD PTR [rsi+0xb0]
   14003a583:	mov    DWORD PTR [rsi+0xb0],0x8c
   14003a58d:	jmp    0x14003a594
   14003a58f:	mov    r14d,DWORD PTR [rsp+0x60]
   14003a594:	cmp    ebx,0x8
   14003a597:	jne    0x14003a5d2
   14003a599:	mov    ecx,DWORD PTR [rip+0x2f461]        # 0x140069a00
   14003a59f:	mov    edx,ecx
   14003a5a1:	mov    DWORD PTR [rsp+0x20],ecx
   14003a5a5:	mov    eax,DWORD PTR [rip+0x2f459]        # 0x140069a04
   14003a5ab:	add    ecx,eax
   14003a5ad:	cmp    edx,ecx
   14003a5af:	jge    0x14003a5db
   14003a5b1:	movsxd rcx,edx
   14003a5b4:	add    rcx,rcx
   14003a5b7:	mov    rax,QWORD PTR [rsi+0xa0]
   14003a5be:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14003a5c4:	inc    edx
   14003a5c6:	mov    DWORD PTR [rsp+0x20],edx
   14003a5ca:	mov    ecx,DWORD PTR [rip+0x2f430]        # 0x140069a00
   14003a5d0:	jmp    0x14003a5a5
   14003a5d2:	call   0x140037aac
   14003a5d7:	mov    QWORD PTR [r12],rax
   14003a5db:	test   edi,edi
   14003a5dd:	je     0x14003a5e6
   14003a5df:	xor    ecx,ecx
   14003a5e1:	call   0x14003a2a0
   14003a5e6:	mov    edi,0x8
   14003a5eb:	cmp    ebx,edi
   14003a5ed:	jne    0x14003a5fc
   14003a5ef:	mov    edx,DWORD PTR [rsi+0xb0]
   14003a5f5:	mov    ecx,edi
   14003a5f7:	call   r13
   14003a5fa:	jmp    0x14003a601
   14003a5fc:	mov    ecx,ebx
   14003a5fe:	call   r13
   14003a601:	cmp    ebx,edi
   14003a603:	je     0x14003a613
   14003a605:	cmp    ebx,0xb
   14003a608:	je     0x14003a613
   14003a60a:	cmp    ebx,0x4
   14003a60d:	jne    0x14003a52b
   14003a613:	mov    QWORD PTR [rsi+0xa8],r15
   14003a61a:	cmp    ebx,edi
   14003a61c:	jne    0x14003a52b
   14003a622:	mov    DWORD PTR [rsi+0xb0],r14d
   14003a629:	jmp    0x14003a52b
   14003a62e:	mov    rbx,QWORD PTR [rsp+0x68]
   14003a633:	mov    rsi,QWORD PTR [rsp+0x70]
   14003a638:	add    rsp,0x30
   14003a63c:	pop    r15
   14003a63e:	pop    r14
   14003a640:	pop    r13
   14003a642:	pop    r12
   14003a644:	pop    rdi
   14003a645:	ret    
   14003a646:	int3   
   14003a647:	int3   
   14003a648:	mov    QWORD PTR [rip+0x4fa59],rcx        # 0x14008a0a8
   14003a64f:	ret    
   14003a650:	mov    QWORD PTR [rsp+0x8],rbx
   14003a655:	push   rdi
   14003a656:	sub    rsp,0x20
   14003a65a:	lea    rbx,[rip+0x40c5f]        # 0x14007b2c0
   14003a661:	lea    rdi,[rip+0x40c58]        # 0x14007b2c0
   14003a668:	jmp    0x14003a678
   14003a66a:	mov    rax,QWORD PTR [rbx]
   14003a66d:	test   rax,rax
   14003a670:	je     0x14003a674
   14003a672:	call   rax
   14003a674:	add    rbx,0x8
   14003a678:	cmp    rbx,rdi
   14003a67b:	jb     0x14003a66a
   14003a67d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a682:	add    rsp,0x20
   14003a686:	pop    rdi
   14003a687:	ret    
   14003a688:	mov    QWORD PTR [rsp+0x8],rbx
   14003a68d:	push   rdi
   14003a68e:	sub    rsp,0x20
   14003a692:	lea    rbx,[rip+0x40c37]        # 0x14007b2d0
   14003a699:	lea    rdi,[rip+0x40c30]        # 0x14007b2d0
   14003a6a0:	jmp    0x14003a6b0
   14003a6a2:	mov    rax,QWORD PTR [rbx]
   14003a6a5:	test   rax,rax
   14003a6a8:	je     0x14003a6ac
   14003a6aa:	call   rax
   14003a6ac:	add    rbx,0x8
   14003a6b0:	cmp    rbx,rdi
   14003a6b3:	jb     0x14003a6a2
   14003a6b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a6ba:	add    rsp,0x20
   14003a6be:	pop    rdi
   14003a6bf:	ret    
   14003a6c0:	mov    QWORD PTR [rsp+0x8],rbx
   14003a6c5:	push   rdi
   14003a6c6:	sub    rsp,0x20
   14003a6ca:	lea    rbx,[rip+0x4b73f]        # 0x140085e10
   14003a6d1:	mov    edi,0xa
   14003a6d6:	mov    rcx,QWORD PTR [rbx]
   14003a6d9:	call   QWORD PTR [rip+0x2dd81]        # 0x140068460
   14003a6df:	mov    QWORD PTR [rbx],rax
   14003a6e2:	add    rbx,0x8
   14003a6e6:	dec    rdi
   14003a6e9:	jne    0x14003a6d6
   14003a6eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a6f0:	add    rsp,0x20
   14003a6f4:	pop    rdi
   14003a6f5:	ret    
   14003a6f6:	int3   
   14003a6f7:	int3   
   14003a6f8:	int3   
   14003a6f9:	int3   
   14003a6fa:	int3   
   14003a6fb:	int3   
   14003a6fc:	int3   
   14003a6fd:	int3   
   14003a6fe:	int3   
   14003a6ff:	int3   
   14003a700:	mov    rax,rcx
   14003a703:	mov    ecx,0x5a4d
   14003a708:	cmp    WORD PTR [rax],cx
   14003a70b:	je     0x14003a710
   14003a70d:	xor    eax,eax
   14003a70f:	ret    
   14003a710:	movsxd rcx,DWORD PTR [rax+0x3c]
   14003a714:	add    rcx,rax
   14003a717:	xor    eax,eax
   14003a719:	cmp    DWORD PTR [rcx],0x4550
   14003a71f:	jne    0x14003a72d
   14003a721:	mov    edx,0x20b
   14003a726:	cmp    WORD PTR [rcx+0x18],dx
   14003a72a:	sete   al
   14003a72d:	repz ret 
   14003a72f:	int3   
   14003a730:	movsxd r8,DWORD PTR [rcx+0x3c]
   14003a734:	xor    r9d,r9d
   14003a737:	mov    r10,rdx
   14003a73a:	add    r8,rcx
   14003a73d:	movzx  eax,WORD PTR [r8+0x14]
   14003a742:	movzx  r11d,WORD PTR [r8+0x6]
   14003a747:	lea    rcx,[rax+r8*1+0x18]
   14003a74c:	test   r11d,r11d
   14003a74f:	je     0x14003a76f
   14003a751:	mov    edx,DWORD PTR [rcx+0xc]
   14003a754:	cmp    r10,rdx
   14003a757:	jb     0x14003a763
   14003a759:	mov    eax,DWORD PTR [rcx+0x8]
   14003a75c:	add    eax,edx
   14003a75e:	cmp    r10,rax
   14003a761:	jb     0x14003a772
   14003a763:	inc    r9d
   14003a766:	add    rcx,0x28
   14003a76a:	cmp    r9d,r11d
   14003a76d:	jb     0x14003a751
   14003a76f:	xor    eax,eax
   14003a771:	ret    
   14003a772:	mov    rax,rcx
   14003a775:	ret    
   14003a776:	int3   
   14003a777:	int3   
   14003a778:	int3   
   14003a779:	int3   
   14003a77a:	int3   
   14003a77b:	int3   
   14003a77c:	int3   
   14003a77d:	int3   
   14003a77e:	int3   
   14003a77f:	int3   
   14003a780:	sub    rsp,0x28
   14003a784:	mov    r8,rcx
   14003a787:	lea    r9,[rip+0xfffffffffffc5872]        # 0x140000000
   14003a78e:	mov    rcx,r9
   14003a791:	call   0x14003a700
   14003a796:	test   eax,eax
   14003a798:	je     0x14003a7bc
   14003a79a:	sub    r8,r9
   14003a79d:	mov    rdx,r8
   14003a7a0:	mov    rcx,r9
   14003a7a3:	call   0x14003a730
   14003a7a8:	test   rax,rax
   14003a7ab:	je     0x14003a7bc
   14003a7ad:	mov    eax,DWORD PTR [rax+0x24]
   14003a7b0:	shr    eax,0x1f
   14003a7b3:	not    eax
   14003a7b5:	and    eax,0x1
   14003a7b8:	jmp    0x14003a7bc
   14003a7ba:	xor    eax,eax
   14003a7bc:	add    rsp,0x28
   14003a7c0:	ret    
   14003a7c1:	int3   
   14003a7c2:	int3   
   14003a7c3:	int3   
   14003a7c4:	sub    rsp,0x28
   14003a7c8:	mov    rax,QWORD PTR [rcx]
   14003a7cb:	cmp    DWORD PTR [rax],0xe06d7363
   14003a7d1:	jne    0x14003a7fe
   14003a7d3:	cmp    DWORD PTR [rax+0x18],0x4
   14003a7d7:	jne    0x14003a7fe
   14003a7d9:	mov    eax,DWORD PTR [rax+0x20]
   14003a7dc:	cmp    eax,0x19930520
   14003a7e1:	je     0x14003a7f8
   14003a7e3:	cmp    eax,0x19930521
   14003a7e8:	je     0x14003a7f8
   14003a7ea:	cmp    eax,0x19930522
   14003a7ef:	je     0x14003a7f8
   14003a7f1:	cmp    eax,0x1994000
   14003a7f6:	jne    0x14003a7fe
   14003a7f8:	call   0x140036b40
   14003a7fd:	int3   
   14003a7fe:	xor    eax,eax
   14003a800:	add    rsp,0x28
   14003a804:	ret    
   14003a805:	int3   
   14003a806:	int3   
   14003a807:	int3   
   14003a808:	sub    rsp,0x28
   14003a80c:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14003a7c4
   14003a813:	call   QWORD PTR [rip+0x2dae7]        # 0x140068300
   14003a819:	xor    eax,eax
   14003a81b:	add    rsp,0x28
   14003a81f:	ret    
   14003a820:	mov    QWORD PTR [rsp+0x8],rbx
   14003a825:	mov    QWORD PTR [rsp+0x10],rbp
   14003a82a:	mov    QWORD PTR [rsp+0x18],rsi
   14003a82f:	push   rdi
   14003a830:	sub    rsp,0x20
   14003a834:	mov    rsi,rdx
   14003a837:	mov    edi,ecx
   14003a839:	call   0x140037bb0
   14003a83e:	xor    r9d,r9d
   14003a841:	mov    rbx,rax
   14003a844:	test   rax,rax
   14003a847:	je     0x14003a9d9
   14003a84d:	mov    rdx,QWORD PTR [rax+0xa0]
   14003a854:	mov    rcx,rdx
   14003a857:	cmp    DWORD PTR [rcx],edi
   14003a859:	je     0x14003a86b
   14003a85b:	lea    rax,[rdx+0xc0]
   14003a862:	add    rcx,0x10
   14003a866:	cmp    rcx,rax
   14003a869:	jb     0x14003a857
   14003a86b:	lea    rax,[rdx+0xc0]
   14003a872:	cmp    rcx,rax
   14003a875:	jae    0x14003a87b
   14003a877:	cmp    DWORD PTR [rcx],edi
   14003a879:	je     0x14003a87e
   14003a87b:	mov    rcx,r9
   14003a87e:	test   rcx,rcx
   14003a881:	je     0x14003a9d9
   14003a887:	mov    r8,QWORD PTR [rcx+0x8]
   14003a88b:	test   r8,r8
   14003a88e:	je     0x14003a9d9
   14003a894:	cmp    r8,0x5
   14003a898:	jne    0x14003a8a7
   14003a89a:	mov    QWORD PTR [rcx+0x8],r9
   14003a89e:	lea    eax,[r8-0x4]
   14003a8a2:	jmp    0x14003a9db
   14003a8a7:	cmp    r8,0x1
   14003a8ab:	jne    0x14003a8b5
   14003a8ad:	or     eax,0xffffffff
   14003a8b0:	jmp    0x14003a9db
   14003a8b5:	mov    rbp,QWORD PTR [rbx+0xa8]
   14003a8bc:	mov    QWORD PTR [rbx+0xa8],rsi
   14003a8c3:	cmp    DWORD PTR [rcx+0x4],0x8
   14003a8c7:	jne    0x14003a9c3
   14003a8cd:	mov    edx,0x30
   14003a8d2:	mov    rax,QWORD PTR [rbx+0xa0]
   14003a8d9:	add    rdx,0x10
   14003a8dd:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14003a8e2:	cmp    rdx,0xc0
   14003a8e9:	jl     0x14003a8d2
   14003a8eb:	cmp    DWORD PTR [rcx],0xc000008e
   14003a8f1:	mov    edi,DWORD PTR [rbx+0xb0]
   14003a8f7:	jne    0x14003a908
   14003a8f9:	mov    DWORD PTR [rbx+0xb0],0x83
   14003a903:	jmp    0x14003a9ad
   14003a908:	cmp    DWORD PTR [rcx],0xc0000090
   14003a90e:	jne    0x14003a91f
   14003a910:	mov    DWORD PTR [rbx+0xb0],0x81
   14003a91a:	jmp    0x14003a9ad
   14003a91f:	cmp    DWORD PTR [rcx],0xc0000091
   14003a925:	jne    0x14003a933
   14003a927:	mov    DWORD PTR [rbx+0xb0],0x84
   14003a931:	jmp    0x14003a9ad
   14003a933:	cmp    DWORD PTR [rcx],0xc0000093
   14003a939:	jne    0x14003a947
   14003a93b:	mov    DWORD PTR [rbx+0xb0],0x85
   14003a945:	jmp    0x14003a9ad
   14003a947:	cmp    DWORD PTR [rcx],0xc000008d
   14003a94d:	jne    0x14003a95b
   14003a94f:	mov    DWORD PTR [rbx+0xb0],0x82
   14003a959:	jmp    0x14003a9ad
   14003a95b:	cmp    DWORD PTR [rcx],0xc000008f
   14003a961:	jne    0x14003a96f
   14003a963:	mov    DWORD PTR [rbx+0xb0],0x86
   14003a96d:	jmp    0x14003a9ad
   14003a96f:	cmp    DWORD PTR [rcx],0xc0000092
   14003a975:	jne    0x14003a983
   14003a977:	mov    DWORD PTR [rbx+0xb0],0x8a
   14003a981:	jmp    0x14003a9ad
   14003a983:	cmp    DWORD PTR [rcx],0xc00002b5
   14003a989:	jne    0x14003a997
   14003a98b:	mov    DWORD PTR [rbx+0xb0],0x8d
   14003a995:	jmp    0x14003a9ad
   14003a997:	cmp    DWORD PTR [rcx],0xc00002b4
   14003a99d:	mov    eax,edi
   14003a99f:	mov    edx,0x8e
   14003a9a4:	cmove  eax,edx
   14003a9a7:	mov    DWORD PTR [rbx+0xb0],eax
   14003a9ad:	mov    edx,DWORD PTR [rbx+0xb0]
   14003a9b3:	mov    ecx,0x8
   14003a9b8:	call   r8
   14003a9bb:	mov    DWORD PTR [rbx+0xb0],edi
   14003a9c1:	jmp    0x14003a9cd
   14003a9c3:	mov    QWORD PTR [rcx+0x8],r9
   14003a9c7:	mov    ecx,DWORD PTR [rcx+0x4]
   14003a9ca:	call   r8
   14003a9cd:	mov    QWORD PTR [rbx+0xa8],rbp
   14003a9d4:	jmp    0x14003a8ad
   14003a9d9:	xor    eax,eax
   14003a9db:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a9e0:	mov    rbp,QWORD PTR [rsp+0x38]
   14003a9e5:	mov    rsi,QWORD PTR [rsp+0x40]
   14003a9ea:	add    rsp,0x20
   14003a9ee:	pop    rdi
   14003a9ef:	ret    
   14003a9f0:	mov    QWORD PTR [rsp+0x8],rbx
   14003a9f5:	push   rdi
   14003a9f6:	sub    rsp,0x20
   14003a9fa:	xor    edi,edi
   14003a9fc:	cmp    DWORD PTR [rip+0x515be],edi        # 0x14008bfc0
   14003aa02:	jne    0x14003aa09
   14003aa04:	call   0x140037708
   14003aa09:	mov    rbx,QWORD PTR [rip+0x51590]        # 0x14008bfa0
   14003aa10:	lea    rax,[rip+0x3087f]        # 0x14006b296
   14003aa17:	test   rbx,rbx
   14003aa1a:	cmove  rbx,rax
   14003aa1e:	cmp    BYTE PTR [rbx],0x20
   14003aa21:	ja     0x14003aa2c
   14003aa23:	cmp    BYTE PTR [rbx],0x0
   14003aa26:	je     0x14003aa5b
   14003aa28:	test   edi,edi
   14003aa2a:	je     0x14003aa55
   14003aa2c:	cmp    BYTE PTR [rbx],0x22
   14003aa2f:	jne    0x14003aa3a
   14003aa31:	xor    eax,eax
   14003aa33:	test   edi,edi
   14003aa35:	sete   al
   14003aa38:	mov    edi,eax
   14003aa3a:	movzx  ecx,BYTE PTR [rbx]
   14003aa3d:	call   0x14003a0a8
   14003aa42:	test   eax,eax
   14003aa44:	je     0x14003aa49
   14003aa46:	inc    rbx
   14003aa49:	inc    rbx
   14003aa4c:	jmp    0x14003aa1e
   14003aa4e:	cmp    al,0x20
   14003aa50:	ja     0x14003aa5b
   14003aa52:	inc    rbx
   14003aa55:	mov    al,BYTE PTR [rbx]
   14003aa57:	test   al,al
   14003aa59:	jne    0x14003aa4e
   14003aa5b:	mov    rax,rbx
   14003aa5e:	mov    rbx,QWORD PTR [rsp+0x30]
   14003aa63:	add    rsp,0x20
   14003aa67:	pop    rdi
   14003aa68:	ret    
   14003aa69:	int3   
   14003aa6a:	int3   
   14003aa6b:	int3   
   14003aa6c:	mov    QWORD PTR [rsp+0x8],rbx
   14003aa71:	mov    QWORD PTR [rsp+0x10],rbp
   14003aa76:	mov    QWORD PTR [rsp+0x18],rsi
   14003aa7b:	push   rdi
   14003aa7c:	sub    rsp,0x30
   14003aa80:	cmp    DWORD PTR [rip+0x51539],0x0        # 0x14008bfc0
   14003aa87:	jne    0x14003aa8e
   14003aa89:	call   0x140037708
   14003aa8e:	mov    rbx,QWORD PTR [rip+0x4e78b]        # 0x140089220
   14003aa95:	xor    edi,edi
   14003aa97:	test   rbx,rbx
   14003aa9a:	jne    0x14003aab7
   14003aa9c:	or     eax,0xffffffff
   14003aa9f:	jmp    0x14003ab58
   14003aaa4:	cmp    al,0x3d
   14003aaa6:	je     0x14003aaaa
   14003aaa8:	inc    edi
   14003aaaa:	mov    rcx,rbx
   14003aaad:	call   0x140036550
   14003aab2:	lea    rbx,[rbx+rax*1+0x1]
   14003aab7:	mov    al,BYTE PTR [rbx]
   14003aab9:	test   al,al
   14003aabb:	jne    0x14003aaa4
   14003aabd:	lea    eax,[rdi+0x1]
   14003aac0:	mov    edx,0x8
   14003aac5:	movsxd rcx,eax
   14003aac8:	call   0x140039f20
   14003aacd:	mov    rdi,rax
   14003aad0:	mov    QWORD PTR [rip+0x4e709],rax        # 0x1400891e0
   14003aad7:	test   rax,rax
   14003aada:	je     0x14003aa9c
   14003aadc:	mov    rbx,QWORD PTR [rip+0x4e73d]        # 0x140089220
   14003aae3:	cmp    BYTE PTR [rbx],0x0
   14003aae6:	je     0x14003ab38
   14003aae8:	mov    rcx,rbx
   14003aaeb:	call   0x140036550
   14003aaf0:	cmp    BYTE PTR [rbx],0x3d
   14003aaf3:	lea    esi,[rax+0x1]
   14003aaf6:	je     0x14003ab26
   14003aaf8:	movsxd rbp,esi
   14003aafb:	mov    edx,0x1
   14003ab00:	mov    rcx,rbp
   14003ab03:	call   0x140039f20
   14003ab08:	mov    QWORD PTR [rdi],rax
   14003ab0b:	test   rax,rax
   14003ab0e:	je     0x14003ab83
   14003ab10:	mov    r8,rbx
   14003ab13:	mov    rdx,rbp
   14003ab16:	mov    rcx,rax
   14003ab19:	call   0x1400336a8
   14003ab1e:	test   eax,eax
   14003ab20:	jne    0x14003ab6d
   14003ab22:	add    rdi,0x8
   14003ab26:	movsxd rax,esi
   14003ab29:	add    rbx,rax
   14003ab2c:	cmp    BYTE PTR [rbx],0x0
   14003ab2f:	jne    0x14003aae8
   14003ab31:	mov    rbx,QWORD PTR [rip+0x4e6e8]        # 0x140089220
   14003ab38:	mov    rcx,rbx
   14003ab3b:	call   0x140033594
   14003ab40:	and    QWORD PTR [rip+0x4e6d8],0x0        # 0x140089220
   14003ab48:	and    QWORD PTR [rdi],0x0
   14003ab4c:	mov    DWORD PTR [rip+0x51452],0x1        # 0x14008bfa8
   14003ab56:	xor    eax,eax
   14003ab58:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ab5d:	mov    rbp,QWORD PTR [rsp+0x48]
   14003ab62:	mov    rsi,QWORD PTR [rsp+0x50]
   14003ab67:	add    rsp,0x30
   14003ab6b:	pop    rdi
   14003ab6c:	ret    
   14003ab6d:	and    QWORD PTR [rsp+0x20],0x0
   14003ab73:	xor    r9d,r9d
   14003ab76:	xor    r8d,r8d
   14003ab79:	xor    edx,edx
   14003ab7b:	xor    ecx,ecx
   14003ab7d:	call   0x14003674c
   14003ab82:	int3   
   14003ab83:	mov    rcx,QWORD PTR [rip+0x4e656]        # 0x1400891e0
   14003ab8a:	call   0x140033594
   14003ab8f:	and    QWORD PTR [rip+0x4e649],0x0        # 0x1400891e0
   14003ab97:	jmp    0x14003aa9c
   14003ab9c:	mov    rax,rsp
   14003ab9f:	mov    QWORD PTR [rax+0x8],rbx
   14003aba3:	mov    QWORD PTR [rax+0x10],rbp
   14003aba7:	mov    QWORD PTR [rax+0x18],rsi
   14003abab:	mov    QWORD PTR [rax+0x20],rdi
   14003abaf:	push   r12
   14003abb1:	push   r13
   14003abb3:	push   r14
   14003abb5:	sub    rsp,0x20
   14003abb9:	mov    r13,QWORD PTR [rsp+0x60]
   14003abbe:	mov    r14,r9
   14003abc1:	mov    rdi,r8
   14003abc4:	and    DWORD PTR [r13+0x0],0x0
   14003abc9:	mov    r12,rdx
   14003abcc:	mov    rbx,rcx
   14003abcf:	mov    DWORD PTR [r9],0x1
   14003abd6:	test   rdx,rdx
   14003abd9:	je     0x14003abe2
   14003abdb:	mov    QWORD PTR [rdx],r8
   14003abde:	add    r12,0x8
   14003abe2:	xor    ebp,ebp
   14003abe4:	cmp    BYTE PTR [rbx],0x22
   14003abe7:	jne    0x14003abfa
   14003abe9:	xor    eax,eax
   14003abeb:	test   ebp,ebp
   14003abed:	mov    sil,0x22
   14003abf0:	sete   al
   14003abf3:	inc    rbx
   14003abf6:	mov    ebp,eax
   14003abf8:	jmp    0x14003ac33
   14003abfa:	inc    DWORD PTR [r13+0x0]
   14003abfe:	test   rdi,rdi
   14003ac01:	je     0x14003ac0a
   14003ac03:	mov    al,BYTE PTR [rbx]
   14003ac05:	mov    BYTE PTR [rdi],al
   14003ac07:	inc    rdi
   14003ac0a:	movzx  esi,BYTE PTR [rbx]
   14003ac0d:	inc    rbx
   14003ac10:	mov    ecx,esi
   14003ac12:	call   0x14003a0a8
   14003ac17:	test   eax,eax
   14003ac19:	je     0x14003ac2e
   14003ac1b:	inc    DWORD PTR [r13+0x0]
   14003ac1f:	test   rdi,rdi
   14003ac22:	je     0x14003ac2b
   14003ac24:	mov    al,BYTE PTR [rbx]
   14003ac26:	mov    BYTE PTR [rdi],al
   14003ac28:	inc    rdi
   14003ac2b:	inc    rbx
   14003ac2e:	test   sil,sil
   14003ac31:	je     0x14003ac4e
   14003ac33:	test   ebp,ebp
   14003ac35:	jne    0x14003abe4
   14003ac37:	cmp    sil,0x20
   14003ac3b:	je     0x14003ac43
   14003ac3d:	cmp    sil,0x9
   14003ac41:	jne    0x14003abe4
   14003ac43:	test   rdi,rdi
   14003ac46:	je     0x14003ac51
   14003ac48:	mov    BYTE PTR [rdi-0x1],0x0
   14003ac4c:	jmp    0x14003ac51
   14003ac4e:	dec    rbx
   14003ac51:	xor    esi,esi
   14003ac53:	cmp    BYTE PTR [rbx],0x0
   14003ac56:	je     0x14003ad3f
   14003ac5c:	cmp    BYTE PTR [rbx],0x20
   14003ac5f:	je     0x14003ac66
   14003ac61:	cmp    BYTE PTR [rbx],0x9
   14003ac64:	jne    0x14003ac6b
   14003ac66:	inc    rbx
   14003ac69:	jmp    0x14003ac5c
   14003ac6b:	cmp    BYTE PTR [rbx],0x0
   14003ac6e:	je     0x14003ad3f
   14003ac74:	test   r12,r12
   14003ac77:	je     0x14003ac81
   14003ac79:	mov    QWORD PTR [r12],rdi
   14003ac7d:	add    r12,0x8
   14003ac81:	inc    DWORD PTR [r14]
   14003ac84:	mov    edx,0x1
   14003ac89:	xor    ecx,ecx
   14003ac8b:	jmp    0x14003ac92
   14003ac8d:	inc    rbx
   14003ac90:	inc    ecx
   14003ac92:	cmp    BYTE PTR [rbx],0x5c
   14003ac95:	je     0x14003ac8d
   14003ac97:	cmp    BYTE PTR [rbx],0x22
   14003ac9a:	jne    0x14003acd2
   14003ac9c:	test   dl,cl
   14003ac9e:	jne    0x14003acbd
   14003aca0:	test   esi,esi
   14003aca2:	je     0x14003acb2
   14003aca4:	lea    rax,[rbx+0x1]
   14003aca8:	cmp    BYTE PTR [rax],0x22
   14003acab:	jne    0x14003acb2
   14003acad:	mov    rbx,rax
   14003acb0:	jmp    0x14003acbd
   14003acb2:	xor    eax,eax
   14003acb4:	xor    edx,edx
   14003acb6:	test   esi,esi
   14003acb8:	sete   al
   14003acbb:	mov    esi,eax
   14003acbd:	shr    ecx,1
   14003acbf:	jmp    0x14003acd2
   14003acc1:	dec    ecx
   14003acc3:	test   rdi,rdi
   14003acc6:	je     0x14003acce
   14003acc8:	mov    BYTE PTR [rdi],0x5c
   14003accb:	inc    rdi
   14003acce:	inc    DWORD PTR [r13+0x0]
   14003acd2:	test   ecx,ecx
   14003acd4:	jne    0x14003acc1
   14003acd6:	mov    al,BYTE PTR [rbx]
   14003acd8:	test   al,al
   14003acda:	je     0x14003ad2b
   14003acdc:	test   esi,esi
   14003acde:	jne    0x14003ace8
   14003ace0:	cmp    al,0x20
   14003ace2:	je     0x14003ad2b
   14003ace4:	cmp    al,0x9
   14003ace6:	je     0x14003ad2b
   14003ace8:	test   edx,edx
   14003acea:	je     0x14003ad23
   14003acec:	movsx  ecx,al
   14003acef:	call   0x14003a0a8
   14003acf4:	test   rdi,rdi
   14003acf7:	je     0x14003ad14
   14003acf9:	test   eax,eax
   14003acfb:	je     0x14003ad0b
   14003acfd:	mov    al,BYTE PTR [rbx]
   14003acff:	inc    rbx
   14003ad02:	mov    BYTE PTR [rdi],al
   14003ad04:	inc    rdi
   14003ad07:	inc    DWORD PTR [r13+0x0]
   14003ad0b:	mov    al,BYTE PTR [rbx]
   14003ad0d:	mov    BYTE PTR [rdi],al
   14003ad0f:	inc    rdi
   14003ad12:	jmp    0x14003ad1f
   14003ad14:	test   eax,eax
   14003ad16:	je     0x14003ad1f
   14003ad18:	inc    rbx
   14003ad1b:	inc    DWORD PTR [r13+0x0]
   14003ad1f:	inc    DWORD PTR [r13+0x0]
   14003ad23:	inc    rbx
   14003ad26:	jmp    0x14003ac84
   14003ad2b:	test   rdi,rdi
   14003ad2e:	je     0x14003ad36
   14003ad30:	mov    BYTE PTR [rdi],0x0
   14003ad33:	inc    rdi
   14003ad36:	inc    DWORD PTR [r13+0x0]
   14003ad3a:	jmp    0x14003ac53
   14003ad3f:	test   r12,r12
   14003ad42:	je     0x14003ad49
   14003ad44:	and    QWORD PTR [r12],0x0
   14003ad49:	inc    DWORD PTR [r14]
   14003ad4c:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ad51:	mov    rbp,QWORD PTR [rsp+0x48]
   14003ad56:	mov    rsi,QWORD PTR [rsp+0x50]
   14003ad5b:	mov    rdi,QWORD PTR [rsp+0x58]
   14003ad60:	add    rsp,0x20
   14003ad64:	pop    r14
   14003ad66:	pop    r13
   14003ad68:	pop    r12
   14003ad6a:	ret    
   14003ad6b:	int3   
   14003ad6c:	mov    QWORD PTR [rsp+0x18],rbx
   14003ad71:	mov    QWORD PTR [rsp+0x20],rsi
   14003ad76:	push   rdi
   14003ad77:	sub    rsp,0x30
   14003ad7b:	cmp    DWORD PTR [rip+0x5123e],0x0        # 0x14008bfc0
   14003ad82:	jne    0x14003ad89
   14003ad84:	call   0x140037708
   14003ad89:	lea    rdi,[rip+0x4f320]        # 0x14008a0b0
   14003ad90:	mov    r8d,0x104
   14003ad96:	xor    ecx,ecx
   14003ad98:	mov    rdx,rdi
   14003ad9b:	mov    BYTE PTR [rip+0x4f412],0x0        # 0x14008a1b4
   14003ada2:	call   QWORD PTR [rip+0x2d3e8]        # 0x140068190
   14003ada8:	mov    rbx,QWORD PTR [rip+0x511f1]        # 0x14008bfa0
   14003adaf:	mov    QWORD PTR [rip+0x4e44a],rdi        # 0x140089200
   14003adb6:	test   rbx,rbx
   14003adb9:	je     0x14003adc0
   14003adbb:	cmp    BYTE PTR [rbx],0x0
   14003adbe:	jne    0x14003adc3
   14003adc0:	mov    rbx,rdi
   14003adc3:	lea    rax,[rsp+0x48]
   14003adc8:	lea    r9,[rsp+0x40]
   14003adcd:	xor    r8d,r8d
   14003add0:	xor    edx,edx
   14003add2:	mov    rcx,rbx
   14003add5:	mov    QWORD PTR [rsp+0x20],rax
   14003adda:	call   0x14003ab9c
   14003addf:	movsxd rsi,DWORD PTR [rsp+0x40]
   14003ade4:	movabs rcx,0x1fffffffffffffff
   14003adee:	cmp    rsi,rcx
   14003adf1:	jae    0x14003ae4f
   14003adf3:	movsxd rcx,DWORD PTR [rsp+0x48]
   14003adf8:	cmp    rcx,0xffffffffffffffff
   14003adfc:	jae    0x14003ae4f
   14003adfe:	lea    rdx,[rcx+rsi*8]
   14003ae02:	cmp    rdx,rcx
   14003ae05:	jb     0x14003ae4f
   14003ae07:	mov    rcx,rdx
   14003ae0a:	call   0x140039ea0
   14003ae0f:	mov    rdi,rax
   14003ae12:	test   rax,rax
   14003ae15:	je     0x14003ae4f
   14003ae17:	lea    r8,[rax+rsi*8]
   14003ae1b:	lea    rax,[rsp+0x48]
   14003ae20:	lea    r9,[rsp+0x40]
   14003ae25:	mov    rdx,rdi
   14003ae28:	mov    rcx,rbx
   14003ae2b:	mov    QWORD PTR [rsp+0x20],rax
   14003ae30:	call   0x14003ab9c
   14003ae35:	mov    r11d,DWORD PTR [rsp+0x40]
   14003ae3a:	mov    QWORD PTR [rip+0x4e38f],rdi        # 0x1400891d0
   14003ae41:	dec    r11d
   14003ae44:	xor    eax,eax
   14003ae46:	mov    DWORD PTR [rip+0x4e37f],r11d        # 0x1400891cc
   14003ae4d:	jmp    0x14003ae52
   14003ae4f:	or     eax,0xffffffff
   14003ae52:	mov    rbx,QWORD PTR [rsp+0x50]
   14003ae57:	mov    rsi,QWORD PTR [rsp+0x58]
   14003ae5c:	add    rsp,0x30
   14003ae60:	pop    rdi
   14003ae61:	ret    
   14003ae62:	int3   
   14003ae63:	int3   
   14003ae64:	mov    rax,rsp
   14003ae67:	mov    QWORD PTR [rax+0x8],rbx
   14003ae6b:	mov    QWORD PTR [rax+0x10],rbp
   14003ae6f:	mov    QWORD PTR [rax+0x18],rsi
   14003ae73:	mov    QWORD PTR [rax+0x20],rdi
   14003ae77:	push   r12
   14003ae79:	sub    rsp,0x40
   14003ae7d:	call   QWORD PTR [rip+0x2d3ad]        # 0x140068230
   14003ae83:	xor    r12d,r12d
   14003ae86:	mov    rdi,rax
   14003ae89:	test   rax,rax
   14003ae8c:	je     0x14003af3b
   14003ae92:	mov    rbx,rax
   14003ae95:	cmp    WORD PTR [rax],r12w
   14003ae99:	je     0x14003aeaf
   14003ae9b:	add    rbx,0x2
   14003ae9f:	cmp    WORD PTR [rbx],r12w
   14003aea3:	jne    0x14003ae9b
   14003aea5:	add    rbx,0x2
   14003aea9:	cmp    WORD PTR [rbx],r12w
   14003aead:	jne    0x14003ae9b
   14003aeaf:	mov    QWORD PTR [rsp+0x38],r12
   14003aeb4:	sub    rbx,rax
   14003aeb7:	mov    QWORD PTR [rsp+0x30],r12
   14003aebc:	sar    rbx,1
   14003aebf:	mov    r8,rax
   14003aec2:	xor    edx,edx
   14003aec4:	lea    r9d,[rbx+0x1]
   14003aec8:	xor    ecx,ecx
   14003aeca:	mov    DWORD PTR [rsp+0x28],r12d
   14003aecf:	mov    QWORD PTR [rsp+0x20],r12
   14003aed4:	call   QWORD PTR [rip+0x2d4fe]        # 0x1400683d8
   14003aeda:	movsxd rbp,eax
   14003aedd:	test   eax,eax
   14003aedf:	je     0x14003af32
   14003aee1:	mov    rcx,rbp
   14003aee4:	call   0x140039ea0
   14003aee9:	mov    rsi,rax
   14003aeec:	test   rax,rax
   14003aeef:	je     0x14003af32
   14003aef1:	mov    QWORD PTR [rsp+0x38],r12
   14003aef6:	mov    QWORD PTR [rsp+0x30],r12
   14003aefb:	lea    r9d,[rbx+0x1]
   14003aeff:	mov    r8,rdi
   14003af02:	xor    edx,edx
   14003af04:	xor    ecx,ecx
   14003af06:	mov    DWORD PTR [rsp+0x28],ebp
   14003af0a:	mov    QWORD PTR [rsp+0x20],rax
   14003af0f:	call   QWORD PTR [rip+0x2d4c3]        # 0x1400683d8
   14003af15:	test   eax,eax
   14003af17:	jne    0x14003af24
   14003af19:	mov    rcx,rsi
   14003af1c:	call   0x140033594
   14003af21:	mov    rsi,r12
   14003af24:	mov    rcx,rdi
   14003af27:	call   QWORD PTR [rip+0x2d30b]        # 0x140068238
   14003af2d:	mov    rax,rsi
   14003af30:	jmp    0x14003af3d
   14003af32:	mov    rcx,rdi
   14003af35:	call   QWORD PTR [rip+0x2d2fd]        # 0x140068238
   14003af3b:	xor    eax,eax
   14003af3d:	mov    rbx,QWORD PTR [rsp+0x50]
   14003af42:	mov    rbp,QWORD PTR [rsp+0x58]
   14003af47:	mov    rsi,QWORD PTR [rsp+0x60]
   14003af4c:	mov    rdi,QWORD PTR [rsp+0x68]
   14003af51:	add    rsp,0x40
   14003af55:	pop    r12
   14003af57:	ret    
   14003af58:	mov    QWORD PTR [rsp+0x8],rbx
   14003af5d:	mov    QWORD PTR [rsp+0x10],rbp
   14003af62:	mov    QWORD PTR [rsp+0x18],rdi
   14003af67:	push   r12
   14003af69:	push   r13
   14003af6b:	push   r14
   14003af6d:	sub    rsp,0x90
   14003af74:	lea    rcx,[rsp+0x20]
   14003af79:	call   QWORD PTR [rip+0x2d3a9]        # 0x140068328
   14003af7f:	mov    edx,0x58
   14003af84:	lea    ebp,[rdx-0x38]
   14003af87:	mov    ecx,ebp
   14003af89:	call   0x140039f20
   14003af8e:	xor    r14d,r14d
   14003af91:	mov    rdx,rax
   14003af94:	test   rax,rax
   14003af97:	jne    0x14003afa1
   14003af99:	or     eax,0xffffffff
   14003af9c:	jmp    0x14003b20c
   14003afa1:	mov    QWORD PTR [rip+0x50df8],rax        # 0x14008bda0
   14003afa8:	add    rax,0xb00
   14003afae:	mov    ecx,ebp
   14003afb0:	mov    DWORD PTR [rip+0x50dce],ecx        # 0x14008bd84
   14003afb6:	cmp    rdx,rax
   14003afb9:	jae    0x14003b000
   14003afbb:	add    rdx,0x9
   14003afbf:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14003afc4:	mov    WORD PTR [rdx-0x1],0xa00
   14003afca:	mov    DWORD PTR [rdx+0x3],r14d
   14003afce:	mov    WORD PTR [rdx+0x2f],0xa00
   14003afd4:	mov    BYTE PTR [rdx+0x31],0xa
   14003afd8:	mov    DWORD PTR [rdx+0x47],r14d
   14003afdc:	mov    BYTE PTR [rdx+0x43],r14b
   14003afe0:	mov    rax,QWORD PTR [rip+0x50db9]        # 0x14008bda0
   14003afe7:	add    rdx,0x58
   14003afeb:	lea    rcx,[rdx-0x9]
   14003afef:	add    rax,0xb00
   14003aff5:	cmp    rcx,rax
   14003aff8:	jb     0x14003afbf
   14003affa:	mov    ecx,DWORD PTR [rip+0x50d84]        # 0x14008bd84
   14003b000:	cmp    WORD PTR [rsp+0x62],r14w
   14003b006:	je     0x14003b140
   14003b00c:	mov    rax,QWORD PTR [rsp+0x68]
   14003b011:	test   rax,rax
   14003b014:	je     0x14003b140
   14003b01a:	movsxd r12,DWORD PTR [rax]
   14003b01d:	mov    ebx,0x800
   14003b022:	lea    r13,[rax+0x4]
   14003b026:	add    r12,r13
   14003b029:	cmp    DWORD PTR [rax],ebx
   14003b02b:	cmovl  ebx,DWORD PTR [rax]
   14003b02e:	cmp    ecx,ebx
   14003b030:	jge    0x14003b0bd
   14003b036:	lea    rdi,[rip+0x50d6b]        # 0x14008bda8
   14003b03d:	mov    edx,0x58
   14003b042:	mov    rcx,rbp
   14003b045:	call   0x140039f20
   14003b04a:	test   rax,rax
   14003b04d:	je     0x14003b0b7
   14003b04f:	mov    edx,DWORD PTR [rip+0x50d2f]        # 0x14008bd84
   14003b055:	lea    rcx,[rax+0xb00]
   14003b05c:	mov    QWORD PTR [rdi],rax
   14003b05f:	add    edx,ebp
   14003b061:	mov    DWORD PTR [rip+0x50d1d],edx        # 0x14008bd84
   14003b067:	cmp    rax,rcx
   14003b06a:	jae    0x14003b0ad
   14003b06c:	lea    rdx,[rax+0x9]
   14003b070:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14003b075:	and    BYTE PTR [rdx+0x2f],0x80
   14003b079:	mov    WORD PTR [rdx-0x1],0xa00
   14003b07f:	mov    DWORD PTR [rdx+0x3],r14d
   14003b083:	mov    WORD PTR [rdx+0x30],0xa0a
   14003b089:	mov    DWORD PTR [rdx+0x47],r14d
   14003b08d:	mov    BYTE PTR [rdx+0x43],r14b
   14003b091:	mov    rax,QWORD PTR [rdi]
   14003b094:	add    rdx,0x58
   14003b098:	lea    rcx,[rdx-0x9]
   14003b09c:	add    rax,0xb00
   14003b0a2:	cmp    rcx,rax
   14003b0a5:	jb     0x14003b070
   14003b0a7:	mov    edx,DWORD PTR [rip+0x50cd7]        # 0x14008bd84
   14003b0ad:	add    rdi,0x8
   14003b0b1:	cmp    edx,ebx
   14003b0b3:	jl     0x14003b03d
   14003b0b5:	jmp    0x14003b0bd
   14003b0b7:	mov    ebx,DWORD PTR [rip+0x50cc7]        # 0x14008bd84
   14003b0bd:	mov    edi,r14d
   14003b0c0:	test   ebx,ebx
   14003b0c2:	jle    0x14003b140
   14003b0c4:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14003b0c9:	je     0x14003b133
   14003b0cb:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14003b0d0:	je     0x14003b133
   14003b0d2:	test   BYTE PTR [r13+0x0],0x1
   14003b0d7:	je     0x14003b133
   14003b0d9:	test   BYTE PTR [r13+0x0],0x8
   14003b0de:	jne    0x14003b0ee
   14003b0e0:	mov    rcx,QWORD PTR [r12]
   14003b0e4:	call   QWORD PTR [rip+0x2d306]        # 0x1400683f0
   14003b0ea:	test   eax,eax
   14003b0ec:	je     0x14003b133
   14003b0ee:	movsxd rbp,edi
   14003b0f1:	lea    rcx,[rip+0x50ca8]        # 0x14008bda0
   14003b0f8:	mov    edx,0xfa0
   14003b0fd:	mov    rax,rbp
   14003b100:	and    ebp,0x1f
   14003b103:	sar    rax,0x5
   14003b107:	imul   rbp,rbp,0x58
   14003b10b:	add    rbp,QWORD PTR [rcx+rax*8]
   14003b10f:	mov    rax,QWORD PTR [r12]
   14003b113:	mov    QWORD PTR [rbp+0x0],rax
   14003b117:	mov    al,BYTE PTR [r13+0x0]
   14003b11b:	lea    rcx,[rbp+0x10]
   14003b11f:	mov    BYTE PTR [rbp+0x8],al
   14003b122:	call   QWORD PTR [rip+0x2d120]        # 0x140068248
   14003b128:	test   eax,eax
   14003b12a:	je     0x14003af99
   14003b130:	inc    DWORD PTR [rbp+0xc]
   14003b133:	inc    edi
   14003b135:	inc    r13
   14003b138:	add    r12,0x8
   14003b13c:	cmp    edi,ebx
   14003b13e:	jl     0x14003b0c4
   14003b140:	mov    r12d,r14d
   14003b143:	mov    rbx,r14
   14003b146:	mov    rdi,QWORD PTR [rip+0x50c53]        # 0x14008bda0
   14003b14d:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14003b152:	je     0x14003b165
   14003b154:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14003b159:	je     0x14003b165
   14003b15b:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14003b160:	jmp    0x14003b1ea
   14003b165:	lea    eax,[r12-0x1]
   14003b16a:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14003b16f:	neg    eax
   14003b171:	mov    eax,0xfffffff6
   14003b176:	sbb    ecx,ecx
   14003b178:	add    ecx,0xfffffff5
   14003b17b:	test   r12d,r12d
   14003b17e:	cmove  ecx,eax
   14003b181:	call   QWORD PTR [rip+0x2d0d1]        # 0x140068258
   14003b187:	mov    rbp,rax
   14003b18a:	cmp    rax,0xffffffffffffffff
   14003b18e:	je     0x14003b1dd
   14003b190:	test   rax,rax
   14003b193:	je     0x14003b1dd
   14003b195:	mov    rcx,rax
   14003b198:	call   QWORD PTR [rip+0x2d252]        # 0x1400683f0
   14003b19e:	test   eax,eax
   14003b1a0:	je     0x14003b1dd
   14003b1a2:	movzx  eax,al
   14003b1a5:	mov    QWORD PTR [rbx+rdi*1],rbp
   14003b1a9:	cmp    eax,0x2
   14003b1ac:	jne    0x14003b1b5
   14003b1ae:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14003b1b3:	jmp    0x14003b1bf
   14003b1b5:	cmp    eax,0x3
   14003b1b8:	jne    0x14003b1bf
   14003b1ba:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14003b1bf:	lea    rcx,[rbx+rdi*1+0x10]
   14003b1c4:	mov    edx,0xfa0
   14003b1c9:	call   QWORD PTR [rip+0x2d079]        # 0x140068248
   14003b1cf:	test   eax,eax
   14003b1d1:	je     0x14003af99
   14003b1d7:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14003b1db:	jmp    0x14003b1ea
   14003b1dd:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14003b1e2:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14003b1ea:	add    rbx,0x58
   14003b1ee:	inc    r12d
   14003b1f1:	cmp    rbx,0x108
   14003b1f8:	jl     0x14003b146
   14003b1fe:	mov    ecx,DWORD PTR [rip+0x50b80]        # 0x14008bd84
   14003b204:	call   QWORD PTR [rip+0x2d01e]        # 0x140068228
   14003b20a:	xor    eax,eax
   14003b20c:	lea    r11,[rsp+0x90]
   14003b214:	mov    rbx,QWORD PTR [r11+0x20]
   14003b218:	mov    rbp,QWORD PTR [r11+0x28]
   14003b21c:	mov    rdi,QWORD PTR [r11+0x30]
   14003b220:	mov    rsp,r11
   14003b223:	pop    r14
   14003b225:	pop    r13
   14003b227:	pop    r12
   14003b229:	ret    
   14003b22a:	int3   
   14003b22b:	int3   
   14003b22c:	mov    QWORD PTR [rsp+0x18],rbx
   14003b231:	push   rdi
   14003b232:	sub    rsp,0x20
   14003b236:	mov    rax,QWORD PTR [rip+0x49e6b]        # 0x1400850a8
   14003b23d:	and    QWORD PTR [rsp+0x30],0x0
   14003b243:	movabs rdi,0x2b992ddfa232
   14003b24d:	cmp    rax,rdi
   14003b250:	je     0x14003b25e
   14003b252:	not    rax
   14003b255:	mov    QWORD PTR [rip+0x49e54],rax        # 0x1400850b0
   14003b25c:	jmp    0x14003b2d4
   14003b25e:	lea    rcx,[rsp+0x30]
   14003b263:	call   QWORD PTR [rip+0x2cf9f]        # 0x140068208
   14003b269:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b26e:	call   QWORD PTR [rip+0x2cf9c]        # 0x140068210
   14003b274:	mov    r11d,eax
   14003b277:	xor    rbx,r11
   14003b27a:	call   QWORD PTR [rip+0x2cef8]        # 0x140068178
   14003b280:	mov    r11d,eax
   14003b283:	xor    rbx,r11
   14003b286:	call   QWORD PTR [rip+0x2cf8c]        # 0x140068218
   14003b28c:	lea    rcx,[rsp+0x38]
   14003b291:	mov    r11d,eax
   14003b294:	xor    rbx,r11
   14003b297:	call   QWORD PTR [rip+0x2d093]        # 0x140068330
   14003b29d:	mov    r11,QWORD PTR [rsp+0x38]
   14003b2a2:	xor    r11,rbx
   14003b2a5:	movabs rax,0xffffffffffff
   14003b2af:	and    r11,rax
   14003b2b2:	movabs rax,0x2b992ddfa233
   14003b2bc:	cmp    r11,rdi
   14003b2bf:	cmove  r11,rax
   14003b2c3:	mov    QWORD PTR [rip+0x49dde],r11        # 0x1400850a8
   14003b2ca:	not    r11
   14003b2cd:	mov    QWORD PTR [rip+0x49ddc],r11        # 0x1400850b0
   14003b2d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14003b2d9:	add    rsp,0x20
   14003b2dd:	pop    rdi
   14003b2de:	ret    
   14003b2df:	int3   
   14003b2e0:	jmp    0x14003b2e9
   14003b2e2:	cmp    al,dl
   14003b2e4:	je     0x14003b2f3
   14003b2e6:	inc    rcx
   14003b2e9:	mov    al,BYTE PTR [rcx]
   14003b2eb:	test   al,al
   14003b2ed:	jne    0x14003b2e2
   14003b2ef:	cmp    al,dl
   14003b2f1:	jne    0x14003b2f7
   14003b2f3:	mov    rax,rcx
   14003b2f6:	ret    
   14003b2f7:	xor    eax,eax
   14003b2f9:	ret    
   14003b2fa:	int3   
   14003b2fb:	int3   
   14003b2fc:	int3   
   14003b2fd:	int3   
   14003b2fe:	int3   
   14003b2ff:	int3   
   14003b300:	int3   
   14003b301:	int3   
   14003b302:	int3   
   14003b303:	int3   
   14003b304:	int3   
   14003b305:	int3   
   14003b306:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003b310:	test   r8,r8
   14003b313:	je     0x14003b38a
   14003b315:	sub    rdx,rcx
   14003b318:	mov    r9,rdx
   14003b31b:	movabs r11,0x8101010101010100
   14003b325:	test   cl,0x7
   14003b328:	je     0x14003b349
   14003b32a:	mov    al,BYTE PTR [rcx]
   14003b32c:	mov    dl,BYTE PTR [rcx+r9*1]
   14003b330:	inc    rcx
   14003b333:	cmp    al,dl
   14003b335:	jne    0x14003b38e
   14003b337:	dec    r8
   14003b33a:	je     0x14003b38a
   14003b33c:	test   al,al
   14003b33e:	je     0x14003b38a
   14003b340:	test   rcx,0x7
   14003b347:	jne    0x14003b32a
   14003b349:	lea    rdx,[rcx+r9*1]
   14003b34d:	and    dx,0xfff
   14003b352:	cmp    dx,0xff8
   14003b357:	ja     0x14003b32a
   14003b359:	mov    rax,QWORD PTR [rcx]
   14003b35c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14003b360:	cmp    rax,rdx
   14003b363:	jne    0x14003b32a
   14003b365:	add    rcx,0x8
   14003b369:	sub    r8,0x8
   14003b36d:	movabs r10,0x7efefefefefefeff
   14003b377:	jbe    0x14003b38a
   14003b379:	xor    rax,0xffffffffffffffff
   14003b37d:	add    r10,rdx
   14003b380:	xor    rax,r10
   14003b383:	test   r11,rax
   14003b386:	je     0x14003b349
   14003b388:	jmp    0x14003b396
   14003b38a:	xor    rax,rax
   14003b38d:	ret    
   14003b38e:	sbb    rax,rax
   14003b391:	sbb    rax,0xffffffffffffffff
   14003b395:	ret    
   14003b396:	test   dl,dl
   14003b398:	je     0x14003b3c1
   14003b39a:	test   dh,dh
   14003b39c:	je     0x14003b3c1
   14003b39e:	shr    rdx,0x10
   14003b3a2:	test   dl,dl
   14003b3a4:	je     0x14003b3c1
   14003b3a6:	test   dh,dh
   14003b3a8:	je     0x14003b3c1
   14003b3aa:	shr    rdx,0x10
   14003b3ae:	test   dl,dl
   14003b3b0:	je     0x14003b3c1
   14003b3b2:	test   dh,dh
   14003b3b4:	je     0x14003b3c1
   14003b3b6:	shr    edx,0x10
   14003b3b9:	test   dl,dl
   14003b3bb:	je     0x14003b3c1
   14003b3bd:	test   dh,dh
   14003b3bf:	jne    0x14003b349
   14003b3c1:	xor    rax,rax
   14003b3c4:	ret    
   14003b3c5:	int3   
   14003b3c6:	int3   
   14003b3c7:	int3   
   14003b3c8:	lea    rax,[rip+0x4aaf1]        # 0x140085ec0
   14003b3cf:	ret    
   14003b3d0:	rex push rbx
   14003b3d2:	sub    rsp,0x20
   14003b3d6:	mov    eax,DWORD PTR [rip+0x509a4]        # 0x14008bd80
   14003b3dc:	mov    ebx,0x14
   14003b3e1:	test   eax,eax
   14003b3e3:	jne    0x14003b3ec
   14003b3e5:	mov    eax,0x200
   14003b3ea:	jmp    0x14003b3f1
   14003b3ec:	cmp    eax,ebx
   14003b3ee:	cmovl  eax,ebx
   14003b3f1:	movsxd rcx,eax
   14003b3f4:	mov    edx,0x8
   14003b3f9:	mov    DWORD PTR [rip+0x50981],eax        # 0x14008bd80
   14003b3ff:	call   0x140039f20
   14003b404:	mov    QWORD PTR [rip+0x4f965],rax        # 0x14008ad70
   14003b40b:	test   rax,rax
   14003b40e:	jne    0x14003b434
   14003b410:	lea    edx,[rax+0x8]
   14003b413:	mov    rcx,rbx
   14003b416:	mov    DWORD PTR [rip+0x50964],ebx        # 0x14008bd80
   14003b41c:	call   0x140039f20
   14003b421:	mov    QWORD PTR [rip+0x4f948],rax        # 0x14008ad70
   14003b428:	test   rax,rax
   14003b42b:	jne    0x14003b434
   14003b42d:	mov    eax,0x1a
   14003b432:	jmp    0x14003b4aa
   14003b434:	xor    ecx,ecx
   14003b436:	lea    rdx,[rip+0x4aa83]        # 0x140085ec0
   14003b43d:	mov    QWORD PTR [rcx+rax*1],rdx
   14003b441:	add    rdx,0x30
   14003b445:	add    rcx,0x8
   14003b449:	dec    rbx
   14003b44c:	je     0x14003b457
   14003b44e:	mov    rax,QWORD PTR [rip+0x4f91b]        # 0x14008ad70
   14003b455:	jmp    0x14003b43d
   14003b457:	xor    r8d,r8d
   14003b45a:	lea    rdx,[rip+0x4aa7b]        # 0x140085edc
   14003b461:	lea    r9d,[r8+0x3]
   14003b465:	mov    rcx,r8
   14003b468:	lea    r10,[rip+0x50931]        # 0x14008bda0
   14003b46f:	mov    rax,r8
   14003b472:	sar    rax,0x5
   14003b476:	and    ecx,0x1f
   14003b479:	mov    rax,QWORD PTR [r10+rax*8]
   14003b47d:	imul   rcx,rcx,0x58
   14003b481:	mov    r10,QWORD PTR [rcx+rax*1]
   14003b485:	cmp    r10,0xffffffffffffffff
   14003b489:	je     0x14003b496
   14003b48b:	cmp    r10,0xfffffffffffffffe
   14003b48f:	je     0x14003b496
   14003b491:	test   r10,r10
   14003b494:	jne    0x14003b49c
   14003b496:	mov    DWORD PTR [rdx],0xfffffffe
   14003b49c:	inc    r8
   14003b49f:	add    rdx,0x30
   14003b4a3:	dec    r9
   14003b4a6:	jne    0x14003b465
   14003b4a8:	xor    eax,eax
   14003b4aa:	add    rsp,0x20
   14003b4ae:	pop    rbx
   14003b4af:	ret    
   14003b4b0:	sub    rsp,0x28
   14003b4b4:	call   0x14003c74c
   14003b4b9:	cmp    BYTE PTR [rip+0x4dd50],0x0        # 0x140089210
   14003b4c0:	je     0x14003b4c7
   14003b4c2:	call   0x14003ecd0
   14003b4c7:	mov    rcx,QWORD PTR [rip+0x4f8a2]        # 0x14008ad70
   14003b4ce:	add    rsp,0x28
   14003b4d2:	jmp    0x140033594
   14003b4d7:	int3   
   14003b4d8:	rex push rbx
   14003b4da:	sub    rsp,0x20
   14003b4de:	mov    rbx,rcx
   14003b4e1:	lea    rcx,[rip+0x4a9d8]        # 0x140085ec0
   14003b4e8:	cmp    rbx,rcx
   14003b4eb:	jb     0x14003b52b
   14003b4ed:	lea    rax,[rip+0x4ad5c]        # 0x140086250
   14003b4f4:	cmp    rbx,rax
   14003b4f7:	ja     0x14003b52b
   14003b4f9:	mov    rdx,rbx
   14003b4fc:	movabs rax,0x2aaaaaaaaaaaaaab
   14003b506:	sub    rdx,rcx
   14003b509:	imul   rdx
   14003b50c:	sar    rdx,0x3
   14003b510:	mov    rcx,rdx
   14003b513:	shr    rcx,0x3f
   14003b517:	lea    ecx,[rcx+rdx*1+0x10]
   14003b51b:	call   0x14003a3a0
   14003b520:	bts    DWORD PTR [rbx+0x18],0xf
   14003b525:	add    rsp,0x20
   14003b529:	pop    rbx
   14003b52a:	ret    
   14003b52b:	lea    rcx,[rbx+0x30]
   14003b52f:	add    rsp,0x20
   14003b533:	pop    rbx
   14003b534:	rex.W jmp QWORD PTR [rip+0x2cc35]        # 0x140068170
   14003b53b:	int3   
   14003b53c:	rex push rbx
   14003b53e:	sub    rsp,0x20
   14003b542:	mov    rbx,rdx
   14003b545:	cmp    ecx,0x14
   14003b548:	jge    0x14003b55d
   14003b54a:	add    ecx,0x10
   14003b54d:	call   0x14003a3a0
   14003b552:	bts    DWORD PTR [rbx+0x18],0xf
   14003b557:	add    rsp,0x20
   14003b55b:	pop    rbx
   14003b55c:	ret    
   14003b55d:	lea    rcx,[rdx+0x30]
   14003b561:	add    rsp,0x20
   14003b565:	pop    rbx
   14003b566:	rex.W jmp QWORD PTR [rip+0x2cc03]        # 0x140068170
   14003b56d:	int3   
   14003b56e:	int3   
   14003b56f:	int3   
   14003b570:	lea    rdx,[rip+0x4a949]        # 0x140085ec0
   14003b577:	cmp    rcx,rdx
   14003b57a:	jb     0x14003b5b1
   14003b57c:	lea    rax,[rip+0x4accd]        # 0x140086250
   14003b583:	cmp    rcx,rax
   14003b586:	ja     0x14003b5b1
   14003b588:	btr    DWORD PTR [rcx+0x18],0xf
   14003b58d:	sub    rcx,rdx
   14003b590:	movabs rax,0x2aaaaaaaaaaaaaab
   14003b59a:	imul   rcx
   14003b59d:	sar    rdx,0x3
   14003b5a1:	mov    rcx,rdx
   14003b5a4:	shr    rcx,0x3f
   14003b5a8:	lea    ecx,[rcx+rdx*1+0x10]
   14003b5ac:	jmp    0x14003a2a0
   14003b5b1:	add    rcx,0x30
   14003b5b5:	rex.W jmp QWORD PTR [rip+0x2cb94]        # 0x140068150
   14003b5bc:	cmp    ecx,0x14
   14003b5bf:	jge    0x14003b5ce
   14003b5c1:	btr    DWORD PTR [rdx+0x18],0xf
   14003b5c6:	add    ecx,0x10
   14003b5c9:	jmp    0x14003a2a0
   14003b5ce:	lea    rcx,[rdx+0x30]
   14003b5d2:	rex.W jmp QWORD PTR [rip+0x2cb77]        # 0x140068150
   14003b5d9:	int3   
   14003b5da:	int3   
   14003b5db:	int3   
   14003b5dc:	mov    QWORD PTR [rsp+0x8],rbx
   14003b5e1:	mov    QWORD PTR [rsp+0x18],rbp
   14003b5e6:	push   rsi
   14003b5e7:	push   rdi
   14003b5e8:	push   r12
   14003b5ea:	push   r13
   14003b5ec:	push   r15
   14003b5ee:	sub    rsp,0x30
   14003b5f2:	mov    ebp,DWORD PTR [rip+0x4ec80]        # 0x14008a278
   14003b5f8:	mov    rsi,r9
   14003b5fb:	xor    r9d,r9d
   14003b5fe:	xor    r10d,r10d
   14003b601:	xor    r11d,r11d
   14003b604:	cmp    BYTE PTR [rdx],0x20
   14003b607:	lea    r15d,[r9+0x1]
   14003b60b:	mov    r12d,r8d
   14003b60e:	mov    rbx,rdx
   14003b611:	mov    r13,rcx
   14003b614:	jne    0x14003b61e
   14003b616:	add    rbx,r15
   14003b619:	cmp    BYTE PTR [rbx],0x20
   14003b61c:	je     0x14003b616
   14003b61e:	cmp    BYTE PTR [rbx],0x61
   14003b621:	je     0x14003b652
   14003b623:	cmp    BYTE PTR [rbx],0x72
   14003b626:	je     0x14003b64b
   14003b628:	cmp    BYTE PTR [rbx],0x77
   14003b62b:	je     0x14003b644
   14003b62d:	call   0x140036858
   14003b632:	mov    DWORD PTR [rax],0x16
   14003b638:	call   0x1400367f0
   14003b63d:	xor    eax,eax
   14003b63f:	jmp    0x14003b87b
   14003b644:	mov    edi,0x301
   14003b649:	jmp    0x14003b657
   14003b64b:	xor    edi,edi
   14003b64d:	or     ebp,r15d
   14003b650:	jmp    0x14003b65a
   14003b652:	mov    edi,0x109
   14003b657:	or     ebp,0x2
   14003b65a:	add    rbx,r15
   14003b65d:	mov    edx,r15d
   14003b660:	mov    al,BYTE PTR [rbx]
   14003b662:	test   al,al
   14003b664:	je     0x14003b825
   14003b66a:	mov    r8d,0x4000
   14003b670:	test   edx,edx
   14003b672:	je     0x14003b766
   14003b678:	movsx  ecx,al
   14003b67b:	cmp    ecx,0x53
   14003b67e:	jg     0x14003b6f9
   14003b680:	je     0x14003b6ec
   14003b682:	sub    ecx,0x20
   14003b685:	je     0x14003b759
   14003b68b:	sub    ecx,0xb
   14003b68e:	je     0x14003b6d7
   14003b690:	dec    ecx
   14003b692:	je     0x14003b6d2
   14003b694:	sub    ecx,0x18
   14003b697:	je     0x14003b6c0
   14003b699:	sub    ecx,0xa
   14003b69c:	je     0x14003b6b7
   14003b69e:	cmp    ecx,0x4
   14003b6a1:	jne    0x14003b62d
   14003b6a3:	test   r10d,r10d
   14003b6a6:	jne    0x14003b751
   14003b6ac:	mov    r10d,r15d
   14003b6af:	or     edi,0x10
   14003b6b2:	jmp    0x14003b759
   14003b6b7:	bts    edi,0x7
   14003b6bb:	jmp    0x14003b759
   14003b6c0:	test   dil,0x40
   14003b6c4:	jne    0x14003b751
   14003b6ca:	or     edi,0x40
   14003b6cd:	jmp    0x14003b759
   14003b6d2:	mov    r11d,r15d
   14003b6d5:	jmp    0x14003b751
   14003b6d7:	test   dil,0x2
   14003b6db:	jne    0x14003b751
   14003b6dd:	and    edi,0xfffffffe
   14003b6e0:	and    ebp,0xfffffffc
   14003b6e3:	or     edi,0x2
   14003b6e6:	bts    ebp,0x7
   14003b6ea:	jmp    0x14003b759
   14003b6ec:	test   r10d,r10d
   14003b6ef:	jne    0x14003b751
   14003b6f1:	mov    r10d,r15d
   14003b6f4:	or     edi,0x20
   14003b6f7:	jmp    0x14003b759
   14003b6f9:	sub    ecx,0x54
   14003b6fc:	je     0x14003b74b
   14003b6fe:	sub    ecx,0xe
   14003b701:	je     0x14003b73d
   14003b703:	dec    ecx
   14003b705:	je     0x14003b730
   14003b707:	sub    ecx,0xb
   14003b70a:	je     0x14003b722
   14003b70c:	cmp    ecx,0x6
   14003b70f:	jne    0x14003b62d
   14003b715:	test   edi,0xc000
   14003b71b:	jne    0x14003b751
   14003b71d:	or     edi,r8d
   14003b720:	jmp    0x14003b759
   14003b722:	test   r9d,r9d
   14003b725:	jne    0x14003b751
   14003b727:	mov    r9d,r15d
   14003b72a:	btr    ebp,0xe
   14003b72e:	jmp    0x14003b759
   14003b730:	test   r9d,r9d
   14003b733:	jne    0x14003b751
   14003b735:	mov    r9d,r15d
   14003b738:	or     ebp,r8d
   14003b73b:	jmp    0x14003b759
   14003b73d:	test   edi,0xc000
   14003b743:	jne    0x14003b751
   14003b745:	bts    edi,0xf
   14003b749:	jmp    0x14003b759
   14003b74b:	bt     edi,0xc
   14003b74f:	jae    0x14003b755
   14003b751:	xor    edx,edx
   14003b753:	jmp    0x14003b759
   14003b755:	bts    edi,0xc
   14003b759:	add    rbx,r15
   14003b75c:	mov    al,BYTE PTR [rbx]
   14003b75e:	test   al,al
   14003b760:	jne    0x14003b670
   14003b766:	test   r11d,r11d
   14003b769:	je     0x14003b825
   14003b76f:	jmp    0x14003b774
   14003b771:	add    rbx,r15
   14003b774:	cmp    BYTE PTR [rbx],0x20
   14003b777:	je     0x14003b771
   14003b779:	lea    rcx,[rip+0x2e290]        # 0x140069a10
   14003b780:	mov    r8d,0x3
   14003b786:	mov    rdx,rbx
   14003b789:	call   0x140035680
   14003b78e:	test   eax,eax
   14003b790:	jne    0x14003b62d
   14003b796:	add    rbx,0x3
   14003b79a:	jmp    0x14003b79f
   14003b79c:	add    rbx,r15
   14003b79f:	cmp    BYTE PTR [rbx],0x20
   14003b7a2:	je     0x14003b79c
   14003b7a4:	cmp    BYTE PTR [rbx],0x3d
   14003b7a7:	jne    0x14003b62d
   14003b7ad:	add    rbx,r15
   14003b7b0:	cmp    BYTE PTR [rbx],0x20
   14003b7b3:	je     0x14003b7ad
   14003b7b5:	lea    rdx,[rip+0x2e258]        # 0x140069a14
   14003b7bc:	mov    r8d,0x5
   14003b7c2:	mov    rcx,rbx
   14003b7c5:	call   0x14003f814
   14003b7ca:	test   eax,eax
   14003b7cc:	jne    0x14003b7d8
   14003b7ce:	add    rbx,0x5
   14003b7d2:	bts    edi,0x12
   14003b7d6:	jmp    0x14003b825
   14003b7d8:	lea    rdx,[rip+0x2e241]        # 0x140069a20
   14003b7df:	mov    r8d,0x8
   14003b7e5:	mov    rcx,rbx
   14003b7e8:	call   0x14003f814
   14003b7ed:	test   eax,eax
   14003b7ef:	jne    0x14003b7fb
   14003b7f1:	add    rbx,0x8
   14003b7f5:	bts    edi,0x11
   14003b7f9:	jmp    0x14003b825
   14003b7fb:	lea    rdx,[rip+0x2e22e]        # 0x140069a30
   14003b802:	mov    r8d,0x7
   14003b808:	mov    rcx,rbx
   14003b80b:	call   0x14003f814
   14003b810:	test   eax,eax
   14003b812:	jne    0x14003b62d
   14003b818:	add    rbx,0x7
   14003b81c:	bts    edi,0x10
   14003b820:	jmp    0x14003b825
   14003b822:	add    rbx,r15
   14003b825:	cmp    BYTE PTR [rbx],0x20
   14003b828:	je     0x14003b822
   14003b82a:	cmp    BYTE PTR [rbx],0x0
   14003b82d:	jne    0x14003b62d
   14003b833:	lea    rcx,[rsp+0x68]
   14003b838:	mov    r9d,r12d
   14003b83b:	mov    r8d,edi
   14003b83e:	mov    rdx,r13
   14003b841:	mov    DWORD PTR [rsp+0x20],0x180
   14003b849:	call   0x14003f5f8
   14003b84e:	test   eax,eax
   14003b850:	jne    0x14003b63d
   14003b856:	add    DWORD PTR [rip+0x4e95b],r15d        # 0x14008a1b8
   14003b85d:	and    DWORD PTR [rsi+0x8],eax
   14003b860:	mov    eax,DWORD PTR [rsp+0x68]
   14003b864:	and    QWORD PTR [rsi],0x0
   14003b868:	and    QWORD PTR [rsi+0x10],0x0
   14003b86d:	and    QWORD PTR [rsi+0x28],0x0
   14003b872:	mov    DWORD PTR [rsi+0x1c],eax
   14003b875:	mov    DWORD PTR [rsi+0x18],ebp
   14003b878:	mov    rax,rsi
   14003b87b:	mov    rbx,QWORD PTR [rsp+0x60]
   14003b880:	mov    rbp,QWORD PTR [rsp+0x70]
   14003b885:	add    rsp,0x30
   14003b889:	pop    r15
   14003b88b:	pop    r13
   14003b88d:	pop    r12
   14003b88f:	pop    rdi
   14003b890:	pop    rsi
   14003b891:	ret    
   14003b892:	int3   
   14003b893:	int3   
   14003b894:	mov    QWORD PTR [rsp+0x8],rbx
   14003b899:	mov    QWORD PTR [rsp+0x10],rsi
   14003b89e:	push   rdi
   14003b89f:	sub    rsp,0x30
   14003b8a3:	xor    ebx,ebx
   14003b8a5:	lea    ecx,[rbx+0x1]
   14003b8a8:	call   0x14003a3a0
   14003b8ad:	nop
   14003b8ae:	xor    edi,edi
   14003b8b0:	mov    DWORD PTR [rsp+0x20],edi
   14003b8b4:	cmp    edi,DWORD PTR [rip+0x504c6]        # 0x14008bd80
   14003b8ba:	jge    0x14003b9ac
   14003b8c0:	movsxd rsi,edi
   14003b8c3:	mov    rax,QWORD PTR [rip+0x4f4a6]        # 0x14008ad70
   14003b8ca:	cmp    QWORD PTR [rax+rsi*8],0x0
   14003b8cf:	je     0x14003b937
   14003b8d1:	mov    rax,QWORD PTR [rax+rsi*8]
   14003b8d5:	test   BYTE PTR [rax+0x18],0x83
   14003b8d9:	jne    0x14003b930
   14003b8db:	test   DWORD PTR [rax+0x18],0x8000
   14003b8e2:	jne    0x14003b930
   14003b8e4:	lea    eax,[rdi-0x3]
   14003b8e7:	cmp    eax,0x10
   14003b8ea:	ja     0x14003b8fc
   14003b8ec:	lea    ecx,[rdi+0x10]
   14003b8ef:	call   0x14003a2b8
   14003b8f4:	test   eax,eax
   14003b8f6:	je     0x14003b9ac
   14003b8fc:	mov    rdx,QWORD PTR [rip+0x4f46d]        # 0x14008ad70
   14003b903:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14003b907:	mov    ecx,edi
   14003b909:	call   0x14003b53c
   14003b90e:	mov    r11,QWORD PTR [rip+0x4f45b]        # 0x14008ad70
   14003b915:	mov    rax,QWORD PTR [r11+rsi*8]
   14003b919:	test   BYTE PTR [rax+0x18],0x83
   14003b91d:	je     0x14003b92b
   14003b91f:	mov    rdx,rax
   14003b922:	mov    ecx,edi
   14003b924:	call   0x14003b5bc
   14003b929:	jmp    0x14003b930
   14003b92b:	mov    rbx,rax
   14003b92e:	jmp    0x14003b9ac
   14003b930:	inc    edi
   14003b932:	jmp    0x14003b8b0
   14003b937:	mov    ecx,0x58
   14003b93c:	call   0x140039ea0
   14003b941:	mov    rcx,rax
   14003b944:	movsxd rdi,edi
   14003b947:	mov    rax,QWORD PTR [rip+0x4f422]        # 0x14008ad70
   14003b94e:	mov    QWORD PTR [rax+rdi*8],rcx
   14003b952:	test   rcx,rcx
   14003b955:	je     0x14003b9ac
   14003b957:	add    rcx,0x30
   14003b95b:	mov    edx,0xfa0
   14003b960:	call   QWORD PTR [rip+0x2c8e2]        # 0x140068248
   14003b966:	test   eax,eax
   14003b968:	jne    0x14003b988
   14003b96a:	mov    rcx,QWORD PTR [rip+0x4f3ff]        # 0x14008ad70
   14003b971:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14003b975:	call   0x140033594
   14003b97a:	mov    r11,QWORD PTR [rip+0x4f3ef]        # 0x14008ad70
   14003b981:	and    QWORD PTR [r11+rdi*8],0x0
   14003b986:	jmp    0x14003b9ac
   14003b988:	mov    rax,QWORD PTR [rip+0x4f3e1]        # 0x14008ad70
   14003b98f:	mov    rcx,QWORD PTR [rax+rdi*8]
   14003b993:	add    rcx,0x30
   14003b997:	call   QWORD PTR [rip+0x2c7d3]        # 0x140068170
   14003b99d:	mov    r11,QWORD PTR [rip+0x4f3cc]        # 0x14008ad70
   14003b9a4:	mov    rbx,QWORD PTR [r11+rdi*8]
   14003b9a8:	and    DWORD PTR [rbx+0x18],0x0
   14003b9ac:	test   rbx,rbx
   14003b9af:	je     0x14003b9ce
   14003b9b1:	and    DWORD PTR [rbx+0x18],0x8000
   14003b9b8:	and    DWORD PTR [rbx+0x8],0x0
   14003b9bc:	and    QWORD PTR [rbx+0x10],0x0
   14003b9c1:	and    QWORD PTR [rbx],0x0
   14003b9c5:	and    QWORD PTR [rbx+0x28],0x0
   14003b9ca:	or     DWORD PTR [rbx+0x1c],0xffffffff
   14003b9ce:	mov    ecx,0x1
   14003b9d3:	call   0x14003a2a0
   14003b9d8:	mov    rax,rbx
   14003b9db:	mov    rbx,QWORD PTR [rsp+0x40]
   14003b9e0:	mov    rsi,QWORD PTR [rsp+0x48]
   14003b9e5:	add    rsp,0x30
   14003b9e9:	pop    rdi
   14003b9ea:	ret    
   14003b9eb:	int3   
   14003b9ec:	int3   
   14003b9ed:	int3   
   14003b9ee:	int3   
   14003b9ef:	int3   
   14003b9f0:	int3   
   14003b9f1:	int3   
   14003b9f2:	int3   
   14003b9f3:	int3   
   14003b9f4:	int3   
   14003b9f5:	int3   
   14003b9f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003ba00:	sub    rsp,0x4d8
   14003ba07:	xor    r8,r8
   14003ba0a:	xor    r9,r9
   14003ba0d:	mov    QWORD PTR [rsp+0x20],rsp
   14003ba12:	mov    QWORD PTR [rsp+0x28],r8
   14003ba17:	call   0x140043306
   14003ba1c:	add    rsp,0x4d8
   14003ba23:	ret    
   14003ba24:	int3   
   14003ba25:	int3   
   14003ba26:	int3   
   14003ba27:	int3   
   14003ba28:	int3   
   14003ba29:	int3   
   14003ba2a:	nop    WORD PTR [rax+rax*1+0x0]
   14003ba30:	mov    QWORD PTR [rsp+0x8],rcx
   14003ba35:	mov    QWORD PTR [rsp+0x18],rdx
   14003ba3a:	mov    DWORD PTR [rsp+0x10],r8d
   14003ba3f:	mov    r9,0x19930520
   14003ba46:	jmp    0x14003ba50
   14003ba48:	int3   
   14003ba49:	int3   
   14003ba4a:	int3   
   14003ba4b:	int3   
   14003ba4c:	int3   
   14003ba4d:	int3   
   14003ba4e:	xchg   ax,ax
   14003ba50:	ret    
   14003ba51:	int3   
   14003ba52:	int3   
   14003ba53:	int3   
   14003ba54:	int3   
   14003ba55:	int3   
   14003ba56:	int3   
   14003ba57:	nop    WORD PTR [rax+rax*1+0x0]
   14003ba60:	ret    
   14003ba61:	int3   
   14003ba62:	int3   
   14003ba63:	int3   
   14003ba64:	mov    QWORD PTR [rsp+0x8],rbx
   14003ba69:	mov    QWORD PTR [rsp+0x10],rsi
   14003ba6e:	push   rdi
   14003ba6f:	sub    rsp,0x20
   14003ba73:	mov    rdi,rcx
   14003ba76:	test   rcx,rcx
   14003ba79:	jne    0x14003ba90
   14003ba7b:	call   0x140036858
   14003ba80:	mov    DWORD PTR [rax],0x16
   14003ba86:	call   0x1400367f0
   14003ba8b:	jmp    0x14003bba3
   14003ba90:	mov    eax,DWORD PTR [rcx+0x18]
   14003ba93:	test   al,0x83
   14003ba95:	je     0x14003bba3
   14003ba9b:	test   al,0x40
   14003ba9d:	jne    0x14003bba3
   14003baa3:	test   al,0x2
   14003baa5:	je     0x14003bab2
   14003baa7:	or     eax,0x20
   14003baaa:	mov    DWORD PTR [rcx+0x18],eax
   14003baad:	jmp    0x14003bba3
   14003bab2:	or     eax,0x1
   14003bab5:	mov    DWORD PTR [rcx+0x18],eax
   14003bab8:	test   eax,0x10c
   14003babd:	jne    0x14003bac6
   14003babf:	call   0x14003e564
   14003bac4:	jmp    0x14003bacd
   14003bac6:	mov    rax,QWORD PTR [rcx+0x10]
   14003baca:	mov    QWORD PTR [rcx],rax
   14003bacd:	mov    rcx,rdi
   14003bad0:	call   0x14003c3f8
   14003bad5:	mov    r8d,DWORD PTR [rdi+0x24]
   14003bad9:	mov    rdx,QWORD PTR [rdi+0x10]
   14003badd:	mov    ecx,eax
   14003badf:	call   0x14003c2dc
   14003bae4:	mov    DWORD PTR [rdi+0x8],eax
   14003bae7:	test   eax,eax
   14003bae9:	je     0x14003bb92
   14003baef:	cmp    eax,0xffffffff
   14003baf2:	je     0x14003bb92
   14003baf8:	test   BYTE PTR [rdi+0x18],0x82
   14003bafc:	jne    0x14003bb5d
   14003bafe:	mov    rcx,rdi
   14003bb01:	call   0x14003c3f8
   14003bb06:	cmp    eax,0xffffffff
   14003bb09:	je     0x14003bb47
   14003bb0b:	mov    rcx,rdi
   14003bb0e:	call   0x14003c3f8
   14003bb13:	cmp    eax,0xfffffffe
   14003bb16:	je     0x14003bb47
   14003bb18:	mov    rcx,rdi
   14003bb1b:	call   0x14003c3f8
   14003bb20:	mov    rcx,rdi
   14003bb23:	lea    rsi,[rip+0x50276]        # 0x14008bda0
   14003bb2a:	movsxd rbx,eax
   14003bb2d:	sar    rbx,0x5
   14003bb31:	call   0x14003c3f8
   14003bb36:	mov    r11d,eax
   14003bb39:	and    r11d,0x1f
   14003bb3d:	imul   r11,r11,0x58
   14003bb41:	add    r11,QWORD PTR [rsi+rbx*8]
   14003bb45:	jmp    0x14003bb4e
   14003bb47:	lea    r11,[rip+0x4a312]        # 0x140085e60
   14003bb4e:	mov    al,BYTE PTR [r11+0x8]
   14003bb52:	and    al,0x82
   14003bb54:	cmp    al,0x82
   14003bb56:	jne    0x14003bb5d
   14003bb58:	bts    DWORD PTR [rdi+0x18],0xd
   14003bb5d:	cmp    DWORD PTR [rdi+0x24],0x200
   14003bb64:	jne    0x14003bb81
   14003bb66:	test   BYTE PTR [rdi+0x18],0x8
   14003bb6a:	je     0x14003bb81
   14003bb6c:	mov    eax,DWORD PTR [rdi+0x24]
   14003bb6f:	test   DWORD PTR [rdi+0x18],0x400
   14003bb76:	mov    ecx,0x1000
   14003bb7b:	cmove  eax,ecx
   14003bb7e:	mov    DWORD PTR [rdi+0x24],eax
   14003bb81:	mov    rcx,QWORD PTR [rdi]
   14003bb84:	dec    DWORD PTR [rdi+0x8]
   14003bb87:	movzx  eax,BYTE PTR [rcx]
   14003bb8a:	inc    rcx
   14003bb8d:	mov    QWORD PTR [rdi],rcx
   14003bb90:	jmp    0x14003bba6
   14003bb92:	neg    eax
   14003bb94:	sbb    eax,eax
   14003bb96:	and    eax,0x10
   14003bb99:	add    eax,0x10
   14003bb9c:	or     DWORD PTR [rdi+0x18],eax
   14003bb9f:	and    DWORD PTR [rdi+0x8],0x0
   14003bba3:	or     eax,0xffffffff
   14003bba6:	mov    rbx,QWORD PTR [rsp+0x30]
   14003bbab:	mov    rsi,QWORD PTR [rsp+0x38]
   14003bbb0:	add    rsp,0x20
   14003bbb4:	pop    rdi
   14003bbb5:	ret    
   14003bbb6:	int3   
   14003bbb7:	int3   
   14003bbb8:	mov    QWORD PTR [rsp+0x10],rdx
   14003bbbd:	mov    DWORD PTR [rsp+0x8],ecx
   14003bbc1:	push   rbp
   14003bbc2:	push   rbx
   14003bbc3:	push   rsi
   14003bbc4:	push   rdi
   14003bbc5:	push   r12
   14003bbc7:	push   r13
   14003bbc9:	push   r14
   14003bbcb:	push   r15
   14003bbcd:	mov    rbp,rsp
   14003bbd0:	sub    rsp,0x58
   14003bbd4:	movsxd rax,ecx
   14003bbd7:	mov    ebx,r8d
   14003bbda:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   14003bbe1:	mov    DWORD PTR [rbp-0x1c],ebx
   14003bbe4:	cmp    eax,0xfffffffe
   14003bbe7:	jne    0x14003bc02
   14003bbe9:	call   0x140036878
   14003bbee:	xor    edi,edi
   14003bbf0:	mov    DWORD PTR [rax],edi
   14003bbf2:	call   0x140036858
   14003bbf7:	mov    DWORD PTR [rax],0x9
   14003bbfd:	jmp    0x14003c2c7
   14003bc02:	xor    edi,edi
   14003bc04:	test   ecx,ecx
   14003bc06:	js     0x14003c2b0
   14003bc0c:	cmp    eax,DWORD PTR [rip+0x50172]        # 0x14008bd84
   14003bc12:	jae    0x14003c2b0
   14003bc18:	mov    rsi,rax
   14003bc1b:	mov    r15,rax
   14003bc1e:	lea    r9,[rip+0xfffffffffffc43db]        # 0x140000000
   14003bc25:	sar    r15,0x5
   14003bc29:	and    esi,0x1f
   14003bc2c:	mov    rcx,QWORD PTR [r9+r15*8+0x8bda0]
   14003bc34:	imul   rsi,rsi,0x58
   14003bc38:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   14003bc3c:	test   al,0x1
   14003bc3e:	je     0x14003c2b0
   14003bc44:	cmp    ebx,0x7fffffff
   14003bc4a:	jbe    0x14003bc63
   14003bc4c:	call   0x140036878
   14003bc51:	mov    DWORD PTR [rax],edi
   14003bc53:	call   0x140036858
   14003bc58:	mov    DWORD PTR [rax],0x16
   14003bc5e:	jmp    0x14003c2c2
   14003bc63:	mov    r12d,edi
   14003bc66:	test   ebx,ebx
   14003bc68:	je     0x14003c2ac
   14003bc6e:	test   al,0x2
   14003bc70:	jne    0x14003c2ac
   14003bc76:	test   rdx,rdx
   14003bc79:	je     0x14003bc4c
   14003bc7b:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   14003bc80:	mov    r8d,0x4
   14003bc86:	add    r13b,r13b
   14003bc89:	sar    r13b,1
   14003bc8c:	movsx  ecx,r13b
   14003bc90:	mov    BYTE PTR [rbp+0x60],r13b
   14003bc94:	dec    ecx
   14003bc96:	je     0x14003bcac
   14003bc98:	dec    ecx
   14003bc9a:	jne    0x14003bca7
   14003bc9c:	mov    eax,ebx
   14003bc9e:	not    eax
   14003bca0:	test   al,0x1
   14003bca2:	je     0x14003bc4c
   14003bca4:	and    ebx,0xfffffffe
   14003bca7:	mov    r14,rdx
   14003bcaa:	jmp    0x14003bd0c
   14003bcac:	mov    eax,ebx
   14003bcae:	not    eax
   14003bcb0:	test   al,0x1
   14003bcb2:	je     0x14003bc4c
   14003bcb4:	shr    ebx,1
   14003bcb6:	cmp    ebx,r8d
   14003bcb9:	cmovb  ebx,r8d
   14003bcbd:	mov    ecx,ebx
   14003bcbf:	call   0x140039ea0
   14003bcc4:	mov    r14,rax
   14003bcc7:	test   rax,rax
   14003bcca:	jne    0x14003bce7
   14003bccc:	call   0x140036858
   14003bcd1:	mov    DWORD PTR [rax],0xc
   14003bcd7:	call   0x140036878
   14003bcdc:	mov    DWORD PTR [rax],0x8
   14003bce2:	jmp    0x14003c2c7
   14003bce7:	mov    ecx,DWORD PTR [rbp+0x48]
   14003bcea:	xor    edx,edx
   14003bcec:	lea    r8d,[rdx+0x1]
   14003bcf0:	call   0x14003e3e8
   14003bcf5:	lea    r9,[rip+0xfffffffffffc4304]        # 0x140000000
   14003bcfc:	mov    r11,rax
   14003bcff:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd07:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   14003bd0c:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd14:	mov    rdx,r14
   14003bd17:	mov    r8d,0xa
   14003bd1d:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14003bd22:	je     0x14003bdc3
   14003bd28:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   14003bd2c:	cmp    cl,r8b
   14003bd2f:	je     0x14003bdc3
   14003bd35:	test   ebx,ebx
   14003bd37:	je     0x14003bdc3
   14003bd3d:	mov    BYTE PTR [r14],cl
   14003bd40:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd48:	or     r10d,0xffffffff
   14003bd4c:	add    ebx,r10d
   14003bd4f:	lea    rdx,[r14+0x1]
   14003bd53:	lea    r12d,[r8-0x9]
   14003bd57:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   14003bd5c:	test   r13b,r13b
   14003bd5f:	je     0x14003bdc3
   14003bd61:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd69:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   14003bd6d:	cmp    cl,r8b
   14003bd70:	je     0x14003bdc3
   14003bd72:	test   ebx,ebx
   14003bd74:	je     0x14003bdc3
   14003bd76:	mov    BYTE PTR [rdx],cl
   14003bd78:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd80:	add    ebx,r10d
   14003bd83:	inc    rdx
   14003bd86:	lea    r12d,[r8-0x8]
   14003bd8a:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   14003bd8f:	cmp    r13b,0x1
   14003bd93:	jne    0x14003bdc3
   14003bd95:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bd9d:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   14003bda1:	cmp    cl,r8b
   14003bda4:	je     0x14003bdc3
   14003bda6:	test   ebx,ebx
   14003bda8:	je     0x14003bdc3
   14003bdaa:	mov    BYTE PTR [rdx],cl
   14003bdac:	mov    rax,QWORD PTR [r9+r15*8+0x8bda0]
   14003bdb4:	inc    rdx
   14003bdb7:	lea    r12d,[r8-0x7]
   14003bdbb:	add    ebx,r10d
   14003bdbe:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14003bdc3:	mov    rcx,QWORD PTR [r9+r15*8+0x8bda0]
   14003bdcb:	lea    r9,[rbp-0x24]
   14003bdcf:	mov    r8d,ebx
   14003bdd2:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14003bdd6:	mov    QWORD PTR [rsp+0x20],rdi
   14003bddb:	call   QWORD PTR [rip+0x2c41f]        # 0x140068200
   14003bde1:	test   eax,eax
   14003bde3:	je     0x14003c271
   14003bde9:	movsxd rdx,DWORD PTR [rbp-0x24]
   14003bded:	test   edx,edx
   14003bdef:	js     0x14003c271
   14003bdf5:	mov    eax,ebx
   14003bdf7:	cmp    rdx,rax
   14003bdfa:	ja     0x14003c271
   14003be00:	lea    r8,[rip+0xfffffffffffc41f9]        # 0x140000000
   14003be07:	add    r12d,edx
   14003be0a:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003be12:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14003be17:	je     0x14003c252
   14003be1d:	cmp    r13b,0x2
   14003be21:	je     0x14003c0b3
   14003be27:	test   edx,edx
   14003be29:	je     0x14003be38
   14003be2b:	cmp    BYTE PTR [r14],0xa
   14003be2f:	jne    0x14003be38
   14003be31:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14003be36:	jmp    0x14003be3d
   14003be38:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14003be3d:	movsxd rax,r12d
   14003be40:	mov    rbx,r14
   14003be43:	mov    r13,r14
   14003be46:	add    rax,r14
   14003be49:	mov    QWORD PTR [rbp-0x18],rax
   14003be4d:	cmp    r14,rax
   14003be50:	jae    0x14003bf71
   14003be56:	mov    r12d,0xd
   14003be5c:	mov    al,BYTE PTR [r13+0x0]
   14003be60:	cmp    al,0x1a
   14003be62:	je     0x14003bf52
   14003be68:	cmp    al,r12b
   14003be6b:	je     0x14003be7a
   14003be6d:	mov    BYTE PTR [rbx],al
   14003be6f:	inc    rbx
   14003be72:	inc    r13
   14003be75:	jmp    0x14003bf46
   14003be7a:	mov    rax,QWORD PTR [rbp-0x18]
   14003be7e:	dec    rax
   14003be81:	cmp    r13,rax
   14003be84:	jae    0x14003be9d
   14003be86:	lea    rax,[r13+0x1]
   14003be8a:	cmp    BYTE PTR [rax],0xa
   14003be8d:	jne    0x14003be95
   14003be8f:	add    r13,0x2
   14003be93:	jmp    0x14003bf13
   14003be95:	mov    r13,rax
   14003be98:	jmp    0x14003bf40
   14003be9d:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003bea5:	lea    r9,[rbp-0x24]
   14003bea9:	lea    rdx,[rbp+0x58]
   14003bead:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14003beb1:	mov    r8d,0x1
   14003beb7:	inc    r13
   14003beba:	mov    QWORD PTR [rsp+0x20],rdi
   14003bebf:	call   QWORD PTR [rip+0x2c33b]        # 0x140068200
   14003bec5:	test   eax,eax
   14003bec7:	jne    0x14003bed3
   14003bec9:	call   QWORD PTR [rip+0x2c4f1]        # 0x1400683c0
   14003becf:	test   eax,eax
   14003bed1:	jne    0x14003bf39
   14003bed3:	cmp    DWORD PTR [rbp-0x24],edi
   14003bed6:	je     0x14003bf39
   14003bed8:	lea    r8,[rip+0xfffffffffffc4121]        # 0x140000000
   14003bedf:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003bee7:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14003beec:	je     0x14003bf08
   14003beee:	cmp    BYTE PTR [rbp+0x58],0xa
   14003bef2:	je     0x14003bf13
   14003bef4:	mov    BYTE PTR [rbx],r12b
   14003bef7:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003beff:	mov    al,BYTE PTR [rbp+0x58]
   14003bf02:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14003bf06:	jmp    0x14003bf43
   14003bf08:	cmp    rbx,r14
   14003bf0b:	jne    0x14003bf18
   14003bf0d:	cmp    BYTE PTR [rbp+0x58],0xa
   14003bf11:	jne    0x14003bf18
   14003bf13:	mov    BYTE PTR [rbx],0xa
   14003bf16:	jmp    0x14003bf43
   14003bf18:	mov    ecx,DWORD PTR [rbp+0x48]
   14003bf1b:	mov    r8d,0x1
   14003bf21:	or     rdx,0xffffffffffffffff
   14003bf25:	call   0x14003e3e8
   14003bf2a:	cmp    BYTE PTR [rbp+0x58],0xa
   14003bf2e:	lea    r8,[rip+0xfffffffffffc40cb]        # 0x140000000
   14003bf35:	je     0x14003bf46
   14003bf37:	jmp    0x14003bf40
   14003bf39:	lea    r8,[rip+0xfffffffffffc40c0]        # 0x140000000
   14003bf40:	mov    BYTE PTR [rbx],r12b
   14003bf43:	inc    rbx
   14003bf46:	cmp    r13,QWORD PTR [rbp-0x18]
   14003bf4a:	jb     0x14003be5c
   14003bf50:	jmp    0x14003bf71
   14003bf52:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003bf5a:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14003bf5f:	jne    0x14003bf68
   14003bf61:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14003bf66:	jmp    0x14003bf71
   14003bf68:	mov    al,BYTE PTR [r13+0x0]
   14003bf6c:	mov    BYTE PTR [rbx],al
   14003bf6e:	inc    rbx
   14003bf71:	mov    r12d,ebx
   14003bf74:	sub    r12d,r14d
   14003bf77:	cmp    BYTE PTR [rbp+0x60],0x1
   14003bf7b:	jne    0x14003c252
   14003bf81:	test   r12d,r12d
   14003bf84:	je     0x14003c252
   14003bf8a:	dec    rbx
   14003bf8d:	test   BYTE PTR [rbx],0x80
   14003bf90:	jne    0x14003bf9a
   14003bf92:	inc    rbx
   14003bf95:	jmp    0x14003c04b
   14003bf9a:	mov    edx,0x1
   14003bf9f:	jmp    0x14003bfb0
   14003bfa1:	cmp    edx,0x4
   14003bfa4:	jg     0x14003bfbd
   14003bfa6:	cmp    rbx,r14
   14003bfa9:	jb     0x14003bfbd
   14003bfab:	dec    rbx
   14003bfae:	inc    edx
   14003bfb0:	movzx  eax,BYTE PTR [rbx]
   14003bfb3:	cmp    BYTE PTR [rax+r8*1+0x86280],dil
   14003bfbb:	je     0x14003bfa1
   14003bfbd:	movzx  ecx,BYTE PTR [rbx]
   14003bfc0:	movsx  eax,BYTE PTR [rcx+r8*1+0x86280]
   14003bfc9:	test   eax,eax
   14003bfcb:	jne    0x14003bfe0
   14003bfcd:	call   0x140036858
   14003bfd2:	mov    DWORD PTR [rax],0x2a
   14003bfd8:	or     ebx,0xffffffff
   14003bfdb:	jmp    0x14003c255
   14003bfe0:	inc    eax
   14003bfe2:	cmp    eax,edx
   14003bfe4:	jne    0x14003bfee
   14003bfe6:	movsxd rax,edx
   14003bfe9:	add    rbx,rax
   14003bfec:	jmp    0x14003c04b
   14003bfee:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003bff6:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14003bffb:	je     0x14003c038
   14003bffd:	inc    rbx
   14003c000:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   14003c004:	cmp    edx,0x2
   14003c007:	jl     0x14003c01a
   14003c009:	mov    al,BYTE PTR [rbx]
   14003c00b:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003c013:	inc    rbx
   14003c016:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14003c01a:	cmp    edx,0x3
   14003c01d:	jne    0x14003c030
   14003c01f:	mov    al,BYTE PTR [rbx]
   14003c021:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003c029:	inc    rbx
   14003c02c:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   14003c030:	movsxd rax,edx
   14003c033:	sub    rbx,rax
   14003c036:	jmp    0x14003c04b
   14003c038:	mov    ecx,DWORD PTR [rbp+0x48]
   14003c03b:	neg    edx
   14003c03d:	mov    r8d,0x1
   14003c043:	movsxd rdx,edx
   14003c046:	call   0x14003e3e8
   14003c04b:	mov    eax,DWORD PTR [rbp-0x1c]
   14003c04e:	mov    r13,QWORD PTR [rbp+0x50]
   14003c052:	sub    ebx,r14d
   14003c055:	shr    eax,1
   14003c057:	mov    r9d,ebx
   14003c05a:	mov    r8,r14
   14003c05d:	mov    DWORD PTR [rsp+0x28],eax
   14003c061:	xor    edx,edx
   14003c063:	mov    ecx,0xfde9
   14003c068:	mov    QWORD PTR [rsp+0x20],r13
   14003c06d:	call   QWORD PTR [rip+0x2c35d]        # 0x1400683d0
   14003c073:	mov    r12d,eax
   14003c076:	test   eax,eax
   14003c078:	jne    0x14003c08f
   14003c07a:	call   QWORD PTR [rip+0x2c340]        # 0x1400683c0
   14003c080:	mov    ecx,eax
   14003c082:	call   0x140036898
   14003c087:	or     ebx,0xffffffff
   14003c08a:	jmp    0x14003c259
   14003c08f:	cmp    eax,ebx
   14003c091:	mov    ebx,DWORD PTR [rbp-0x20]
   14003c094:	lea    rax,[rip+0xfffffffffffc3f65]        # 0x140000000
   14003c09b:	mov    rax,QWORD PTR [rax+r15*8+0x8bda0]
   14003c0a3:	setne  dil
   14003c0a7:	add    r12d,r12d
   14003c0aa:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   14003c0ae:	jmp    0x14003c259
   14003c0b3:	test   edx,edx
   14003c0b5:	mov    edx,0xa
   14003c0ba:	je     0x14003c0c9
   14003c0bc:	cmp    WORD PTR [r14],dx
   14003c0c0:	jne    0x14003c0c9
   14003c0c2:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14003c0c7:	jmp    0x14003c0ce
   14003c0c9:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14003c0ce:	movsxd rax,r12d
   14003c0d1:	mov    rbx,r14
   14003c0d4:	mov    r13,r14
   14003c0d7:	add    rax,r14
   14003c0da:	mov    QWORD PTR [rbp+0x60],rax
   14003c0de:	cmp    r14,rax
   14003c0e1:	jae    0x14003c24c
   14003c0e7:	mov    r12d,0xd
   14003c0ed:	movzx  eax,WORD PTR [r13+0x0]
   14003c0f2:	cmp    ax,0x1a
   14003c0f6:	je     0x14003c22a
   14003c0fc:	cmp    ax,r12w
   14003c100:	je     0x14003c112
   14003c102:	mov    WORD PTR [rbx],ax
   14003c105:	add    rbx,0x2
   14003c109:	add    r13,0x2
   14003c10d:	jmp    0x14003c21e
   14003c112:	mov    rax,QWORD PTR [rbp+0x60]
   14003c116:	add    rax,0xfffffffffffffffe
   14003c11a:	cmp    r13,rax
   14003c11d:	jae    0x14003c139
   14003c11f:	lea    rax,[r13+0x2]
   14003c123:	cmp    WORD PTR [rax],dx
   14003c126:	jne    0x14003c131
   14003c128:	add    r13,0x4
   14003c12c:	jmp    0x14003c1de
   14003c131:	mov    r13,rax
   14003c134:	jmp    0x14003c216
   14003c139:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003c141:	lea    r9,[rbp-0x24]
   14003c145:	lea    rdx,[rbp-0x28]
   14003c149:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14003c14d:	mov    r8d,0x2
   14003c153:	add    r13,0x2
   14003c157:	mov    QWORD PTR [rsp+0x20],rdi
   14003c15c:	call   QWORD PTR [rip+0x2c09e]        # 0x140068200
   14003c162:	test   eax,eax
   14003c164:	jne    0x14003c174
   14003c166:	call   QWORD PTR [rip+0x2c254]        # 0x1400683c0
   14003c16c:	test   eax,eax
   14003c16e:	jne    0x14003c20a
   14003c174:	cmp    DWORD PTR [rbp-0x24],edi
   14003c177:	je     0x14003c20a
   14003c17d:	lea    r8,[rip+0xfffffffffffc3e7c]        # 0x140000000
   14003c184:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003c18c:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14003c191:	je     0x14003c1ce
   14003c193:	mov    edx,0xa
   14003c198:	cmp    WORD PTR [rbp-0x28],dx
   14003c19c:	je     0x14003c1de
   14003c19e:	mov    WORD PTR [rbx],r12w
   14003c1a2:	mov    al,BYTE PTR [rbp-0x28]
   14003c1a5:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003c1ad:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14003c1b1:	mov    al,BYTE PTR [rbp-0x27]
   14003c1b4:	mov    rcx,QWORD PTR [r8+r15*8+0x8bda0]
   14003c1bc:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14003c1c0:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003c1c8:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   14003c1cc:	jmp    0x14003c21a
   14003c1ce:	cmp    rbx,r14
   14003c1d1:	jne    0x14003c1e3
   14003c1d3:	mov    edx,0xa
   14003c1d8:	cmp    WORD PTR [rbp-0x28],dx
   14003c1dc:	jne    0x14003c1e3
   14003c1de:	mov    WORD PTR [rbx],dx
   14003c1e1:	jmp    0x14003c21a
   14003c1e3:	mov    ecx,DWORD PTR [rbp+0x48]
   14003c1e6:	mov    rdx,0xfffffffffffffffe
   14003c1ed:	lea    r8d,[rdx+0x3]
   14003c1f1:	call   0x14003e3e8
   14003c1f6:	mov    edx,0xa
   14003c1fb:	lea    r8,[rip+0xfffffffffffc3dfe]        # 0x140000000
   14003c202:	cmp    WORD PTR [rbp-0x28],dx
   14003c206:	je     0x14003c21e
   14003c208:	jmp    0x14003c216
   14003c20a:	mov    edx,0xa
   14003c20f:	lea    r8,[rip+0xfffffffffffc3dea]        # 0x140000000
   14003c216:	mov    WORD PTR [rbx],r12w
   14003c21a:	add    rbx,0x2
   14003c21e:	cmp    r13,QWORD PTR [rbp+0x60]
   14003c222:	jb     0x14003c0ed
   14003c228:	jmp    0x14003c24c
   14003c22a:	mov    rax,QWORD PTR [r8+r15*8+0x8bda0]
   14003c232:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14003c237:	jne    0x14003c240
   14003c239:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14003c23e:	jmp    0x14003c24c
   14003c240:	movzx  eax,WORD PTR [r13+0x0]
   14003c245:	mov    WORD PTR [rbx],ax
   14003c248:	add    rbx,0x2
   14003c24c:	mov    r12d,ebx
   14003c24f:	sub    r12d,r14d
   14003c252:	mov    ebx,DWORD PTR [rbp-0x20]
   14003c255:	mov    r13,QWORD PTR [rbp+0x50]
   14003c259:	cmp    r14,r13
   14003c25c:	je     0x14003c266
   14003c25e:	mov    rcx,r14
   14003c261:	call   0x140033594
   14003c266:	cmp    ebx,0xfffffffe
   14003c269:	cmove  ebx,r12d
   14003c26d:	mov    eax,ebx
   14003c26f:	jmp    0x14003c2ca
   14003c271:	call   QWORD PTR [rip+0x2c149]        # 0x1400683c0
   14003c277:	cmp    eax,0x5
   14003c27a:	jne    0x14003c297
   14003c27c:	call   0x140036858
   14003c281:	mov    DWORD PTR [rax],0x9
   14003c287:	call   0x140036878
   14003c28c:	mov    DWORD PTR [rax],0x5
   14003c292:	jmp    0x14003bfd8
   14003c297:	cmp    eax,0x6d
   14003c29a:	jne    0x14003c2a0
   14003c29c:	mov    ebx,edi
   14003c29e:	jmp    0x14003c255
   14003c2a0:	mov    ecx,eax
   14003c2a2:	call   0x140036898
   14003c2a7:	jmp    0x14003bfd8
   14003c2ac:	xor    eax,eax
   14003c2ae:	jmp    0x14003c2ca
   14003c2b0:	call   0x140036878
   14003c2b5:	mov    DWORD PTR [rax],edi
   14003c2b7:	call   0x140036858
   14003c2bc:	mov    DWORD PTR [rax],0x9
   14003c2c2:	call   0x1400367f0
   14003c2c7:	or     eax,0xffffffff
   14003c2ca:	add    rsp,0x58
   14003c2ce:	pop    r15
   14003c2d0:	pop    r14
   14003c2d2:	pop    r13
   14003c2d4:	pop    r12
   14003c2d6:	pop    rdi
   14003c2d7:	pop    rsi
   14003c2d8:	pop    rbx
   14003c2d9:	pop    rbp
   14003c2da:	ret    
   14003c2db:	int3   
   14003c2dc:	mov    QWORD PTR [rsp+0x10],rbx
   14003c2e1:	mov    QWORD PTR [rsp+0x18],rsi
   14003c2e6:	mov    DWORD PTR [rsp+0x8],ecx
   14003c2ea:	push   rdi
   14003c2eb:	push   r12
   14003c2ed:	push   r13
   14003c2ef:	push   r14
   14003c2f1:	push   r15
   14003c2f3:	sub    rsp,0x20
   14003c2f7:	mov    esi,r8d
   14003c2fa:	mov    r13,rdx
   14003c2fd:	movsxd rdi,ecx
   14003c300:	cmp    edi,0xfffffffe
   14003c303:	jne    0x14003c31e
   14003c305:	call   0x140036878
   14003c30a:	xor    ebx,ebx
   14003c30c:	mov    DWORD PTR [rax],ebx
   14003c30e:	call   0x140036858
   14003c313:	mov    DWORD PTR [rax],0x9
   14003c319:	jmp    0x14003c3dc
   14003c31e:	xor    ebx,ebx
   14003c320:	test   ecx,ecx
   14003c322:	js     0x14003c3c5
   14003c328:	cmp    edi,DWORD PTR [rip+0x4fa56]        # 0x14008bd84
   14003c32e:	jae    0x14003c3c5
   14003c334:	mov    r12,rdi
   14003c337:	mov    r14,rdi
   14003c33a:	sar    r14,0x5
   14003c33e:	lea    r15,[rip+0x4fa5b]        # 0x14008bda0
   14003c345:	and    r12d,0x1f
   14003c349:	imul   r12,r12,0x58
   14003c34d:	mov    rax,QWORD PTR [r15+r14*8]
   14003c351:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14003c357:	and    ecx,0x1
   14003c35a:	je     0x14003c3c5
   14003c35c:	mov    eax,ebx
   14003c35e:	cmp    r8d,0x7fffffff
   14003c365:	setbe  al
   14003c368:	test   eax,eax
   14003c36a:	jne    0x14003c380
   14003c36c:	call   0x140036878
   14003c371:	mov    DWORD PTR [rax],ebx
   14003c373:	call   0x140036858
   14003c378:	mov    DWORD PTR [rax],0x16
   14003c37e:	jmp    0x14003c3d7
   14003c380:	mov    ecx,edi
   14003c382:	call   0x14003f9ec
   14003c387:	nop
   14003c388:	mov    rax,QWORD PTR [r15+r14*8]
   14003c38c:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14003c392:	je     0x14003c3a5
   14003c394:	mov    r8d,esi
   14003c397:	mov    rdx,r13
   14003c39a:	mov    ecx,edi
   14003c39c:	call   0x14003bbb8
   14003c3a1:	mov    ebx,eax
   14003c3a3:	jmp    0x14003c3ba
   14003c3a5:	call   0x140036858
   14003c3aa:	mov    DWORD PTR [rax],0x9
   14003c3b0:	call   0x140036878
   14003c3b5:	mov    DWORD PTR [rax],ebx
   14003c3b7:	or     ebx,0xffffffff
   14003c3ba:	mov    ecx,edi
   14003c3bc:	call   0x14003fa94
   14003c3c1:	mov    eax,ebx
   14003c3c3:	jmp    0x14003c3df
   14003c3c5:	call   0x140036878
   14003c3ca:	mov    DWORD PTR [rax],ebx
   14003c3cc:	call   0x140036858
   14003c3d1:	mov    DWORD PTR [rax],0x9
   14003c3d7:	call   0x1400367f0
   14003c3dc:	or     eax,0xffffffff
   14003c3df:	mov    rbx,QWORD PTR [rsp+0x58]
   14003c3e4:	mov    rsi,QWORD PTR [rsp+0x60]
   14003c3e9:	add    rsp,0x20
   14003c3ed:	pop    r15
   14003c3ef:	pop    r14
   14003c3f1:	pop    r13
   14003c3f3:	pop    r12
   14003c3f5:	pop    rdi
   14003c3f6:	ret    
   14003c3f7:	int3   
   14003c3f8:	sub    rsp,0x28
   14003c3fc:	test   rcx,rcx
   14003c3ff:	jne    0x14003c416
   14003c401:	call   0x140036858
   14003c406:	mov    DWORD PTR [rax],0x16
   14003c40c:	call   0x1400367f0
   14003c411:	or     eax,0xffffffff
   14003c414:	jmp    0x14003c419
   14003c416:	mov    eax,DWORD PTR [rcx+0x1c]
   14003c419:	add    rsp,0x28
   14003c41d:	ret    
   14003c41e:	int3   
   14003c41f:	int3   
   14003c420:	mov    QWORD PTR [rsp+0x8],rbx
   14003c425:	mov    QWORD PTR [rsp+0x10],rsi
   14003c42a:	push   rdi
   14003c42b:	sub    rsp,0x20
   14003c42f:	movsxd rbx,ecx
   14003c432:	mov    edi,r8d
   14003c435:	mov    esi,edx
   14003c437:	mov    ecx,ebx
   14003c439:	call   0x14003f978
   14003c43e:	cmp    rax,0xffffffffffffffff
   14003c442:	jne    0x14003c454
   14003c444:	call   0x140036858
   14003c449:	mov    DWORD PTR [rax],0x9
   14003c44f:	or     eax,0xffffffff
   14003c452:	jmp    0x14003c4a6
   14003c454:	mov    r9d,edi
   14003c457:	xor    r8d,r8d
   14003c45a:	mov    edx,esi
   14003c45c:	mov    rcx,rax
   14003c45f:	call   QWORD PTR [rip+0x2bd93]        # 0x1400681f8
   14003c465:	mov    edi,eax
   14003c467:	cmp    eax,0xffffffff
   14003c46a:	jne    0x14003c474
   14003c46c:	call   QWORD PTR [rip+0x2bf4e]        # 0x1400683c0
   14003c472:	jmp    0x14003c476
   14003c474:	xor    eax,eax
   14003c476:	test   eax,eax
   14003c478:	je     0x14003c483
   14003c47a:	mov    ecx,eax
   14003c47c:	call   0x140036898
   14003c481:	jmp    0x14003c44f
   14003c483:	mov    rcx,rbx
   14003c486:	mov    rax,rbx
   14003c489:	lea    rdx,[rip+0x4f910]        # 0x14008bda0
   14003c490:	sar    rax,0x5
   14003c494:	and    ecx,0x1f
   14003c497:	mov    rax,QWORD PTR [rdx+rax*8]
   14003c49b:	imul   rcx,rcx,0x58
   14003c49f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14003c4a4:	mov    eax,edi
   14003c4a6:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c4ab:	mov    rsi,QWORD PTR [rsp+0x38]
   14003c4b0:	add    rsp,0x20
   14003c4b4:	pop    rdi
   14003c4b5:	ret    
   14003c4b6:	int3   
   14003c4b7:	int3   
   14003c4b8:	mov    QWORD PTR [rsp+0x10],rbx
   14003c4bd:	mov    DWORD PTR [rsp+0x8],ecx
   14003c4c1:	push   rsi
   14003c4c2:	push   rdi
   14003c4c3:	push   r12
   14003c4c5:	push   r13
   14003c4c7:	push   r14
   14003c4c9:	sub    rsp,0x20
   14003c4cd:	mov    esi,r8d
   14003c4d0:	mov    r12d,edx
   14003c4d3:	movsxd rdi,ecx
   14003c4d6:	cmp    edi,0xfffffffe
   14003c4d9:	jne    0x14003c4f3
   14003c4db:	call   0x140036878
   14003c4e0:	and    DWORD PTR [rax],0x0
   14003c4e3:	call   0x140036858
   14003c4e8:	mov    DWORD PTR [rax],0x9
   14003c4ee:	jmp    0x14003c582
   14003c4f3:	test   ecx,ecx
   14003c4f5:	js     0x14003c56a
   14003c4f7:	cmp    edi,DWORD PTR [rip+0x4f887]        # 0x14008bd84
   14003c4fd:	jae    0x14003c56a
   14003c4ff:	mov    rbx,rdi
   14003c502:	mov    r13,rdi
   14003c505:	sar    r13,0x5
   14003c509:	lea    r14,[rip+0x4f890]        # 0x14008bda0
   14003c510:	and    ebx,0x1f
   14003c513:	imul   rbx,rbx,0x58
   14003c517:	mov    rax,QWORD PTR [r14+r13*8]
   14003c51b:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14003c520:	and    ecx,0x1
   14003c523:	je     0x14003c56a
   14003c525:	mov    ecx,edi
   14003c527:	call   0x14003f9ec
   14003c52c:	nop
   14003c52d:	mov    rax,QWORD PTR [r14+r13*8]
   14003c531:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003c536:	je     0x14003c549
   14003c538:	mov    r8d,esi
   14003c53b:	mov    edx,r12d
   14003c53e:	mov    ecx,edi
   14003c540:	call   0x14003c420
   14003c545:	mov    ebx,eax
   14003c547:	jmp    0x14003c55f
   14003c549:	call   0x140036858
   14003c54e:	mov    DWORD PTR [rax],0x9
   14003c554:	call   0x140036878
   14003c559:	and    DWORD PTR [rax],0x0
   14003c55c:	or     ebx,0xffffffff
   14003c55f:	mov    ecx,edi
   14003c561:	call   0x14003fa94
   14003c566:	mov    eax,ebx
   14003c568:	jmp    0x14003c585
   14003c56a:	call   0x140036878
   14003c56f:	and    DWORD PTR [rax],0x0
   14003c572:	call   0x140036858
   14003c577:	mov    DWORD PTR [rax],0x9
   14003c57d:	call   0x1400367f0
   14003c582:	or     eax,0xffffffff
   14003c585:	mov    rbx,QWORD PTR [rsp+0x58]
   14003c58a:	add    rsp,0x20
   14003c58e:	pop    r14
   14003c590:	pop    r13
   14003c592:	pop    r12
   14003c594:	pop    rdi
   14003c595:	pop    rsi
   14003c596:	ret    
   14003c597:	int3   
   14003c598:	mov    QWORD PTR [rsp+0x8],rbx
   14003c59d:	mov    QWORD PTR [rsp+0x10],rsi
   14003c5a2:	push   rdi
   14003c5a3:	sub    rsp,0x20
   14003c5a7:	mov    eax,DWORD PTR [rcx+0x18]
   14003c5aa:	xor    esi,esi
   14003c5ac:	mov    rbx,rcx
   14003c5af:	and    al,0x3
   14003c5b1:	cmp    al,0x2
   14003c5b3:	jne    0x14003c5f4
   14003c5b5:	test   DWORD PTR [rcx+0x18],0x108
   14003c5bc:	je     0x14003c5f4
   14003c5be:	mov    edi,DWORD PTR [rcx]
   14003c5c0:	sub    edi,DWORD PTR [rcx+0x10]
   14003c5c3:	test   edi,edi
   14003c5c5:	jle    0x14003c5f4
   14003c5c7:	call   0x14003c3f8
   14003c5cc:	mov    rdx,QWORD PTR [rbx+0x10]
   14003c5d0:	mov    r8d,edi
   14003c5d3:	mov    ecx,eax
   14003c5d5:	call   0x14003d3c0
   14003c5da:	cmp    eax,edi
   14003c5dc:	jne    0x14003c5ed
   14003c5de:	mov    eax,DWORD PTR [rbx+0x18]
   14003c5e1:	test   al,al
   14003c5e3:	jns    0x14003c5f4
   14003c5e5:	and    eax,0xfffffffd
   14003c5e8:	mov    DWORD PTR [rbx+0x18],eax
   14003c5eb:	jmp    0x14003c5f4
   14003c5ed:	or     DWORD PTR [rbx+0x18],0x20
   14003c5f1:	or     esi,0xffffffff
   14003c5f4:	mov    rcx,QWORD PTR [rbx+0x10]
   14003c5f8:	and    DWORD PTR [rbx+0x8],0x0
   14003c5fc:	mov    eax,esi
   14003c5fe:	mov    rsi,QWORD PTR [rsp+0x38]
   14003c603:	mov    QWORD PTR [rbx],rcx
   14003c606:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c60b:	add    rsp,0x20
   14003c60f:	pop    rdi
   14003c610:	ret    
   14003c611:	int3   
   14003c612:	int3   
   14003c613:	int3   
   14003c614:	rex push rbx
   14003c616:	sub    rsp,0x20
   14003c61a:	mov    rbx,rcx
   14003c61d:	test   rcx,rcx
   14003c620:	jne    0x14003c62c
   14003c622:	add    rsp,0x20
   14003c626:	pop    rbx
   14003c627:	jmp    0x14003c660
   14003c62c:	call   0x14003c598
   14003c631:	test   eax,eax
   14003c633:	je     0x14003c63a
   14003c635:	or     eax,0xffffffff
   14003c638:	jmp    0x14003c65a
   14003c63a:	test   DWORD PTR [rbx+0x18],0x4000
   14003c641:	je     0x14003c658
   14003c643:	mov    rcx,rbx
   14003c646:	call   0x14003c3f8
   14003c64b:	mov    ecx,eax
   14003c64d:	call   0x14003fcc4
   14003c652:	neg    eax
   14003c654:	sbb    eax,eax
   14003c656:	jmp    0x14003c65a
   14003c658:	xor    eax,eax
   14003c65a:	add    rsp,0x20
   14003c65e:	pop    rbx
   14003c65f:	ret    
   14003c660:	mov    QWORD PTR [rsp+0x8],rbx
   14003c665:	mov    QWORD PTR [rsp+0x10],rsi
   14003c66a:	mov    QWORD PTR [rsp+0x18],rdi
   14003c66f:	push   r12
   14003c671:	push   r13
   14003c673:	push   r15
   14003c675:	sub    rsp,0x30
   14003c679:	mov    r13d,ecx
   14003c67c:	xor    esi,esi
   14003c67e:	xor    edi,edi
   14003c680:	lea    ecx,[rsi+0x1]
   14003c683:	call   0x14003a3a0
   14003c688:	nop
   14003c689:	xor    ebx,ebx
   14003c68b:	or     r15d,0xffffffff
   14003c68f:	mov    DWORD PTR [rsp+0x20],ebx
   14003c693:	cmp    ebx,DWORD PTR [rip+0x4f6e7]        # 0x14008bd80
   14003c699:	jge    0x14003c71f
   14003c69f:	movsxd r12,ebx
   14003c6a2:	mov    rax,QWORD PTR [rip+0x4e6c7]        # 0x14008ad70
   14003c6a9:	cmp    QWORD PTR [rax+r12*8],0x0
   14003c6ae:	je     0x14003c718
   14003c6b0:	mov    rdx,QWORD PTR [rax+r12*8]
   14003c6b4:	test   BYTE PTR [rdx+0x18],0x83
   14003c6b8:	je     0x14003c718
   14003c6ba:	mov    ecx,ebx
   14003c6bc:	call   0x14003b53c
   14003c6c1:	nop
   14003c6c2:	mov    rax,QWORD PTR [rip+0x4e6a7]        # 0x14008ad70
   14003c6c9:	mov    rcx,QWORD PTR [rax+r12*8]
   14003c6cd:	test   BYTE PTR [rcx+0x18],0x83
   14003c6d1:	je     0x14003c706
   14003c6d3:	cmp    r13d,0x1
   14003c6d7:	jne    0x14003c6eb
   14003c6d9:	call   0x14003c614
   14003c6de:	cmp    eax,r15d
   14003c6e1:	je     0x14003c706
   14003c6e3:	inc    esi
   14003c6e5:	mov    DWORD PTR [rsp+0x24],esi
   14003c6e9:	jmp    0x14003c706
   14003c6eb:	test   r13d,r13d
   14003c6ee:	jne    0x14003c706
   14003c6f0:	test   BYTE PTR [rcx+0x18],0x2
   14003c6f4:	je     0x14003c706
   14003c6f6:	call   0x14003c614
   14003c6fb:	cmp    eax,r15d
   14003c6fe:	cmove  edi,r15d
   14003c702:	mov    DWORD PTR [rsp+0x28],edi
   14003c706:	mov    rdx,QWORD PTR [rip+0x4e663]        # 0x14008ad70
   14003c70d:	mov    rdx,QWORD PTR [rdx+r12*8]
   14003c711:	mov    ecx,ebx
   14003c713:	call   0x14003b5bc
   14003c718:	inc    ebx
   14003c71a:	jmp    0x14003c68f
   14003c71f:	mov    ecx,0x1
   14003c724:	call   0x14003a2a0
   14003c729:	cmp    r13d,0x1
   14003c72d:	cmove  edi,esi
   14003c730:	mov    eax,edi
   14003c732:	mov    rbx,QWORD PTR [rsp+0x50]
   14003c737:	mov    rsi,QWORD PTR [rsp+0x58]
   14003c73c:	mov    rdi,QWORD PTR [rsp+0x60]
   14003c741:	add    rsp,0x30
   14003c745:	pop    r15
   14003c747:	pop    r13
   14003c749:	pop    r12
   14003c74b:	ret    
   14003c74c:	mov    ecx,0x1
   14003c751:	jmp    0x14003c660
   14003c756:	int3   
   14003c757:	int3   
   14003c758:	mov    QWORD PTR [rsp+0x8],rbx
   14003c75d:	push   rdi
   14003c75e:	sub    rsp,0x20
   14003c762:	movsxd rdi,ecx
   14003c765:	mov    ecx,edi
   14003c767:	call   0x14003f978
   14003c76c:	cmp    rax,0xffffffffffffffff
   14003c770:	je     0x14003c7cb
   14003c772:	mov    rax,QWORD PTR [rip+0x4f627]        # 0x14008bda0
   14003c779:	mov    ecx,0x2
   14003c77e:	cmp    edi,0x1
   14003c781:	jne    0x14003c78c
   14003c783:	test   BYTE PTR [rax+0xb8],dil
   14003c78a:	jne    0x14003c796
   14003c78c:	cmp    edi,ecx
   14003c78e:	jne    0x14003c7ad
   14003c790:	test   BYTE PTR [rax+0x60],0x1
   14003c794:	je     0x14003c7ad
   14003c796:	call   0x14003f978
   14003c79b:	mov    ecx,0x1
   14003c7a0:	mov    rbx,rax
   14003c7a3:	call   0x14003f978
   14003c7a8:	cmp    rax,rbx
   14003c7ab:	je     0x14003c7cb
   14003c7ad:	mov    ecx,edi
   14003c7af:	call   0x14003f978
   14003c7b4:	mov    rcx,rax
   14003c7b7:	call   QWORD PTR [rip+0x2bbdb]        # 0x140068398
   14003c7bd:	test   eax,eax
   14003c7bf:	jne    0x14003c7cb
   14003c7c1:	call   QWORD PTR [rip+0x2bbf9]        # 0x1400683c0
   14003c7c7:	mov    ebx,eax
   14003c7c9:	jmp    0x14003c7cd
   14003c7cb:	xor    ebx,ebx
   14003c7cd:	mov    ecx,edi
   14003c7cf:	call   0x14003f8cc
   14003c7d4:	mov    r11,rdi
   14003c7d7:	mov    rcx,rdi
   14003c7da:	sar    rcx,0x5
   14003c7de:	and    r11d,0x1f
   14003c7e2:	lea    rdx,[rip+0x4f5b7]        # 0x14008bda0
   14003c7e9:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14003c7ed:	imul   r11,r11,0x58
   14003c7f1:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14003c7f7:	test   ebx,ebx
   14003c7f9:	je     0x14003c807
   14003c7fb:	mov    ecx,ebx
   14003c7fd:	call   0x140036898
   14003c802:	or     eax,0xffffffff
   14003c805:	jmp    0x14003c809
   14003c807:	xor    eax,eax
   14003c809:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c80e:	add    rsp,0x20
   14003c812:	pop    rdi
   14003c813:	ret    
   14003c814:	mov    QWORD PTR [rsp+0x18],rbx
   14003c819:	mov    DWORD PTR [rsp+0x8],ecx
   14003c81d:	push   rsi
   14003c81e:	push   rdi
   14003c81f:	push   r12
   14003c821:	sub    rsp,0x20
   14003c825:	movsxd rbx,ecx
   14003c828:	cmp    ebx,0xfffffffe
   14003c82b:	jne    0x14003c845
   14003c82d:	call   0x140036878
   14003c832:	and    DWORD PTR [rax],0x0
   14003c835:	call   0x140036858
   14003c83a:	mov    DWORD PTR [rax],0x9
   14003c840:	jmp    0x14003c8c6
   14003c845:	test   ecx,ecx
   14003c847:	js     0x14003c8ae
   14003c849:	cmp    ebx,DWORD PTR [rip+0x4f535]        # 0x14008bd84
   14003c84f:	jae    0x14003c8ae
   14003c851:	mov    rdi,rbx
   14003c854:	mov    rsi,rbx
   14003c857:	sar    rsi,0x5
   14003c85b:	lea    r12,[rip+0x4f53e]        # 0x14008bda0
   14003c862:	and    edi,0x1f
   14003c865:	imul   rdi,rdi,0x58
   14003c869:	mov    rax,QWORD PTR [r12+rsi*8]
   14003c86d:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   14003c872:	and    ecx,0x1
   14003c875:	je     0x14003c8ae
   14003c877:	mov    ecx,ebx
   14003c879:	call   0x14003f9ec
   14003c87e:	nop
   14003c87f:	mov    rax,QWORD PTR [r12+rsi*8]
   14003c883:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   14003c888:	je     0x14003c895
   14003c88a:	mov    ecx,ebx
   14003c88c:	call   0x14003c758
   14003c891:	mov    edi,eax
   14003c893:	jmp    0x14003c8a3
   14003c895:	call   0x140036858
   14003c89a:	mov    DWORD PTR [rax],0x9
   14003c8a0:	or     edi,0xffffffff
   14003c8a3:	mov    ecx,ebx
   14003c8a5:	call   0x14003fa94
   14003c8aa:	mov    eax,edi
   14003c8ac:	jmp    0x14003c8c9
   14003c8ae:	call   0x140036878
   14003c8b3:	and    DWORD PTR [rax],0x0
   14003c8b6:	call   0x140036858
   14003c8bb:	mov    DWORD PTR [rax],0x9
   14003c8c1:	call   0x1400367f0
   14003c8c6:	or     eax,0xffffffff
   14003c8c9:	mov    rbx,QWORD PTR [rsp+0x50]
   14003c8ce:	add    rsp,0x20
   14003c8d2:	pop    r12
   14003c8d4:	pop    rdi
   14003c8d5:	pop    rsi
   14003c8d6:	ret    
   14003c8d7:	int3   
   14003c8d8:	rex push rbx
   14003c8da:	sub    rsp,0x20
   14003c8de:	test   BYTE PTR [rcx+0x18],0x83
   14003c8e2:	mov    rbx,rcx
   14003c8e5:	je     0x14003c909
   14003c8e7:	test   BYTE PTR [rcx+0x18],0x8
   14003c8eb:	je     0x14003c909
   14003c8ed:	mov    rcx,QWORD PTR [rcx+0x10]
   14003c8f1:	call   0x140033594
   14003c8f6:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14003c8fd:	xor    eax,eax
   14003c8ff:	mov    QWORD PTR [rbx],rax
   14003c902:	mov    QWORD PTR [rbx+0x10],rax
   14003c906:	mov    DWORD PTR [rbx+0x8],eax
   14003c909:	add    rsp,0x20
   14003c90d:	pop    rbx
   14003c90e:	ret    
   14003c90f:	int3   
   14003c910:	rex push rbx
   14003c912:	sub    rsp,0x20
   14003c916:	mov    r11d,DWORD PTR [r8]
   14003c919:	mov    rbx,rdx
   14003c91c:	mov    r9,rcx
   14003c91f:	and    r11d,0xfffffff8
   14003c923:	test   BYTE PTR [r8],0x4
   14003c927:	mov    r10,rcx
   14003c92a:	je     0x14003c93f
   14003c92c:	mov    eax,DWORD PTR [r8+0x8]
   14003c930:	movsxd r10,DWORD PTR [r8+0x4]
   14003c934:	neg    eax
   14003c936:	add    r10,rcx
   14003c939:	movsxd rcx,eax
   14003c93c:	and    r10,rcx
   14003c93f:	movsxd rax,r11d
   14003c942:	mov    rdx,QWORD PTR [rax+r10*1]
   14003c946:	mov    rax,QWORD PTR [rbx+0x10]
   14003c94a:	mov    ecx,DWORD PTR [rax+0x8]
   14003c94d:	add    rcx,QWORD PTR [rbx+0x8]
   14003c951:	test   BYTE PTR [rcx+0x3],0xf
   14003c955:	je     0x14003c963
   14003c957:	movzx  eax,BYTE PTR [rcx+0x3]
   14003c95b:	and    eax,0xfffffff0
   14003c95e:	cdqe   
   14003c960:	add    r9,rax
   14003c963:	xor    r9,rdx
   14003c966:	mov    rcx,r9
   14003c969:	add    rsp,0x20
   14003c96d:	pop    rbx
   14003c96e:	jmp    0x140032f00
   14003c973:	int3   
   14003c974:	sub    rsp,0x28
   14003c978:	mov    r8,QWORD PTR [r9+0x38]
   14003c97c:	mov    rcx,rdx
   14003c97f:	mov    rdx,r9
   14003c982:	call   0x14003c910
   14003c987:	mov    eax,0x1
   14003c98c:	add    rsp,0x28
   14003c990:	ret    
   14003c991:	int3   
   14003c992:	int3   
   14003c993:	int3   
   14003c994:	mov    QWORD PTR [rsp+0x8],rbx
   14003c999:	mov    QWORD PTR [rsp+0x10],rsi
   14003c99e:	push   rdi
   14003c99f:	sub    rsp,0x30
   14003c9a3:	movsxd rax,r9d
   14003c9a6:	mov    rbx,r8
   14003c9a9:	mov    edi,edx
   14003c9ab:	mov    esi,ecx
   14003c9ad:	test   r9d,r9d
   14003c9b0:	jle    0x14003c9bd
   14003c9b2:	mov    rdx,rax
   14003c9b5:	mov    rcx,rbx
   14003c9b8:	call   0x14003c9f4
   14003c9bd:	mov    r9d,DWORD PTR [rsp+0x68]
   14003c9c2:	mov    rdx,QWORD PTR [rsp+0x60]
   14003c9c7:	mov    r8,rbx
   14003c9ca:	mov    DWORD PTR [rsp+0x28],r9d
   14003c9cf:	mov    QWORD PTR [rsp+0x20],rdx
   14003c9d4:	mov    edx,edi
   14003c9d6:	mov    r9d,eax
   14003c9d9:	mov    ecx,esi
   14003c9db:	call   QWORD PTR [rip+0x2b887]        # 0x140068268
   14003c9e1:	mov    rbx,QWORD PTR [rsp+0x40]
   14003c9e6:	mov    rsi,QWORD PTR [rsp+0x48]
   14003c9eb:	add    rsp,0x30
   14003c9ef:	pop    rdi
   14003c9f0:	ret    
   14003c9f1:	int3   
   14003c9f2:	int3   
   14003c9f3:	int3   
   14003c9f4:	xor    r8d,r8d
   14003c9f7:	mov    eax,r8d
   14003c9fa:	test   rdx,rdx
   14003c9fd:	je     0x14003ca11
   14003c9ff:	cmp    WORD PTR [rcx],r8w
   14003ca03:	je     0x14003ca11
   14003ca05:	inc    rax
   14003ca08:	add    rcx,0x2
   14003ca0c:	cmp    rax,rdx
   14003ca0f:	jb     0x14003c9ff
   14003ca11:	repz ret 
   14003ca13:	int3   
   14003ca14:	int3   
   14003ca15:	int3   
   14003ca16:	int3   
   14003ca17:	int3   
   14003ca18:	int3   
   14003ca19:	int3   
   14003ca1a:	int3   
   14003ca1b:	int3   
   14003ca1c:	int3   
   14003ca1d:	int3   
   14003ca1e:	int3   
   14003ca1f:	int3   
   14003ca20:	int3   
   14003ca21:	int3   
   14003ca22:	int3   
   14003ca23:	int3   
   14003ca24:	int3   
   14003ca25:	int3   
   14003ca26:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003ca30:	sub    rsp,0x10
   14003ca34:	mov    QWORD PTR [rsp],r10
   14003ca38:	mov    QWORD PTR [rsp+0x8],r11
   14003ca3d:	xor    r11,r11
   14003ca40:	lea    r10,[rsp+0x18]
   14003ca45:	sub    r10,rax
   14003ca48:	cmovb  r10,r11
   14003ca4c:	mov    r11,QWORD PTR gs:0x10
   14003ca55:	cmp    r10,r11
   14003ca58:	jae    0x14003ca70
   14003ca5a:	and    r10w,0xf000
   14003ca60:	lea    r11,[r11-0x1000]
   14003ca67:	mov    BYTE PTR [r11],0x0
   14003ca6b:	cmp    r10,r11
   14003ca6e:	jne    0x14003ca60
   14003ca70:	mov    r10,QWORD PTR [rsp]
   14003ca74:	mov    r11,QWORD PTR [rsp+0x8]
   14003ca79:	add    rsp,0x10
   14003ca7d:	ret    
   14003ca7e:	int3   
   14003ca7f:	int3   
   14003ca80:	rex push rbp
   14003ca82:	push   r12
   14003ca84:	push   r13
   14003ca86:	push   r14
   14003ca88:	push   r15
   14003ca8a:	sub    rsp,0x40
   14003ca8e:	lea    rbp,[rsp+0x30]
   14003ca93:	mov    QWORD PTR [rbp+0x40],rbx
   14003ca97:	mov    QWORD PTR [rbp+0x48],rsi
   14003ca9b:	mov    QWORD PTR [rbp+0x50],rdi
   14003ca9f:	mov    rax,QWORD PTR [rip+0x48602]        # 0x1400850a8
   14003caa6:	xor    rax,rbp
   14003caa9:	mov    QWORD PTR [rbp+0x0],rax
   14003caad:	mov    esi,DWORD PTR [rbp+0x68]
   14003cab0:	xor    edi,edi
   14003cab2:	mov    r13d,r9d
   14003cab5:	mov    r14,r8
   14003cab8:	mov    r15d,edx
   14003cabb:	test   esi,esi
   14003cabd:	jne    0x14003cac5
   14003cabf:	mov    rax,QWORD PTR [rcx]
   14003cac2:	mov    esi,DWORD PTR [rax+0x4]
   14003cac5:	neg    DWORD PTR [rbp+0x70]
   14003cac8:	mov    ecx,esi
   14003caca:	mov    DWORD PTR [rsp+0x28],edi
   14003cace:	sbb    edx,edx
   14003cad0:	mov    QWORD PTR [rsp+0x20],rdi
   14003cad5:	and    edx,0x8
   14003cad8:	inc    edx
   14003cada:	call   QWORD PTR [rip+0x2b8f0]        # 0x1400683d0
   14003cae0:	movsxd r12,eax
   14003cae3:	test   eax,eax
   14003cae5:	jne    0x14003caee
   14003cae7:	xor    eax,eax
   14003cae9:	jmp    0x14003cbb8
   14003caee:	jle    0x14003cb57
   14003caf0:	movabs rax,0x7ffffffffffffff0
   14003cafa:	cmp    r12,rax
   14003cafd:	ja     0x14003cb57
   14003caff:	lea    rcx,[r12+r12*1+0x10]
   14003cb04:	cmp    rcx,0x400
   14003cb0b:	ja     0x14003cb3e
   14003cb0d:	lea    rax,[rcx+0xf]
   14003cb11:	cmp    rax,rcx
   14003cb14:	ja     0x14003cb20
   14003cb16:	movabs rax,0xffffffffffffff0
   14003cb20:	and    rax,0xfffffffffffffff0
   14003cb24:	call   0x14003ca30
   14003cb29:	sub    rsp,rax
   14003cb2c:	lea    rbx,[rsp+0x30]
   14003cb31:	test   rbx,rbx
   14003cb34:	je     0x14003cae7
   14003cb36:	mov    DWORD PTR [rbx],0xcccc
   14003cb3c:	jmp    0x14003cb51
   14003cb3e:	call   0x140034828
   14003cb43:	mov    rbx,rax
   14003cb46:	test   rax,rax
   14003cb49:	je     0x14003cb5a
   14003cb4b:	mov    DWORD PTR [rax],0xdddd
   14003cb51:	add    rbx,0x10
   14003cb55:	jmp    0x14003cb5a
   14003cb57:	mov    rbx,rdi
   14003cb5a:	test   rbx,rbx
   14003cb5d:	je     0x14003cae7
   14003cb5f:	mov    r8,r12
   14003cb62:	xor    edx,edx
   14003cb64:	mov    rcx,rbx
   14003cb67:	add    r8,r8
   14003cb6a:	call   0x140036dc0
   14003cb6f:	mov    r9d,r13d
   14003cb72:	mov    r8,r14
   14003cb75:	mov    edx,0x1
   14003cb7a:	mov    ecx,esi
   14003cb7c:	mov    DWORD PTR [rsp+0x28],r12d
   14003cb81:	mov    QWORD PTR [rsp+0x20],rbx
   14003cb86:	call   QWORD PTR [rip+0x2b844]        # 0x1400683d0
   14003cb8c:	test   eax,eax
   14003cb8e:	je     0x14003cba5
   14003cb90:	mov    r9,QWORD PTR [rbp+0x60]
   14003cb94:	mov    r8d,eax
   14003cb97:	mov    rdx,rbx
   14003cb9a:	mov    ecx,r15d
   14003cb9d:	call   QWORD PTR [rip+0x2b7cd]        # 0x140068370
   14003cba3:	mov    edi,eax
   14003cba5:	lea    rcx,[rbx-0x10]
   14003cba9:	cmp    DWORD PTR [rcx],0xdddd
   14003cbaf:	jne    0x14003cbb6
   14003cbb1:	call   0x140033594
   14003cbb6:	mov    eax,edi
   14003cbb8:	mov    rcx,QWORD PTR [rbp+0x0]
   14003cbbc:	xor    rcx,rbp
   14003cbbf:	call   0x140032f00
   14003cbc4:	mov    rbx,QWORD PTR [rbp+0x40]
   14003cbc8:	mov    rsi,QWORD PTR [rbp+0x48]
   14003cbcc:	mov    rdi,QWORD PTR [rbp+0x50]
   14003cbd0:	lea    rsp,[rbp+0x10]
   14003cbd4:	pop    r15
   14003cbd6:	pop    r14
   14003cbd8:	pop    r13
   14003cbda:	pop    r12
   14003cbdc:	pop    rbp
   14003cbdd:	ret    
   14003cbde:	int3   
   14003cbdf:	int3   
   14003cbe0:	mov    QWORD PTR [rsp+0x8],rbx
   14003cbe5:	mov    QWORD PTR [rsp+0x10],rsi
   14003cbea:	push   rdi
   14003cbeb:	sub    rsp,0x60
   14003cbef:	mov    esi,edx
   14003cbf1:	mov    rdx,rcx
   14003cbf4:	lea    rcx,[rsp+0x40]
   14003cbf9:	mov    ebx,r9d
   14003cbfc:	mov    rdi,r8
   14003cbff:	call   0x14003370c
   14003cc04:	mov    r11d,DWORD PTR [rsp+0xa8]
   14003cc0c:	mov    eax,DWORD PTR [rsp+0x98]
   14003cc13:	lea    rcx,[rsp+0x40]
   14003cc18:	mov    DWORD PTR [rsp+0x30],r11d
   14003cc1d:	mov    DWORD PTR [rsp+0x28],eax
   14003cc21:	mov    rax,QWORD PTR [rsp+0x90]
   14003cc29:	mov    r9d,ebx
   14003cc2c:	mov    r8,rdi
   14003cc2f:	mov    edx,esi
   14003cc31:	mov    QWORD PTR [rsp+0x20],rax
   14003cc36:	call   0x14003ca80
   14003cc3b:	cmp    BYTE PTR [rsp+0x58],0x0
   14003cc40:	je     0x14003cc4e
   14003cc42:	mov    rcx,QWORD PTR [rsp+0x50]
   14003cc47:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003cc4e:	mov    rbx,QWORD PTR [rsp+0x70]
   14003cc53:	mov    rsi,QWORD PTR [rsp+0x78]
   14003cc58:	add    rsp,0x60
   14003cc5c:	pop    rdi
   14003cc5d:	ret    
   14003cc5e:	int3   
   14003cc5f:	int3   
   14003cc60:	mov    QWORD PTR [rsp+0x20],rbx
   14003cc65:	push   rbp
   14003cc66:	push   rsi
   14003cc67:	push   rdi
   14003cc68:	push   r12
   14003cc6a:	push   r13
   14003cc6c:	push   r14
   14003cc6e:	push   r15
   14003cc70:	lea    rbp,[rsp-0x1a30]
   14003cc78:	mov    eax,0x1b30
   14003cc7d:	call   0x14003ca30
   14003cc82:	sub    rsp,rax
   14003cc85:	mov    rax,QWORD PTR [rip+0x4841c]        # 0x1400850a8
   14003cc8c:	xor    rax,rsp
   14003cc8f:	mov    QWORD PTR [rbp+0x1a20],rax
   14003cc96:	xor    edi,edi
   14003cc98:	mov    r14d,r8d
   14003cc9b:	mov    r13,rdx
   14003cc9e:	and    DWORD PTR [rsp+0x44],edi
   14003cca2:	movsxd rbx,ecx
   14003cca5:	test   r8d,r8d
   14003cca8:	jne    0x14003ccb1
   14003ccaa:	xor    eax,eax
   14003ccac:	jmp    0x14003d396
   14003ccb1:	test   rdx,rdx
   14003ccb4:	jne    0x14003ccd5
   14003ccb6:	call   0x140036878
   14003ccbb:	and    DWORD PTR [rax],edi
   14003ccbd:	call   0x140036858
   14003ccc2:	mov    DWORD PTR [rax],0x16
   14003ccc8:	call   0x1400367f0
   14003cccd:	or     eax,0xffffffff
   14003ccd0:	jmp    0x14003d396
   14003ccd5:	mov    r15,rbx
   14003ccd8:	mov    r12,rbx
   14003ccdb:	lea    rax,[rip+0x4f0be]        # 0x14008bda0
   14003cce2:	sar    r12,0x5
   14003cce6:	and    r15d,0x1f
   14003ccea:	mov    rcx,QWORD PTR [rax+r12*8]
   14003ccee:	mov    QWORD PTR [rsp+0x50],r12
   14003ccf3:	imul   r15,r15,0x58
   14003ccf7:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   14003ccfc:	mov    QWORD PTR [rsp+0x60],r15
   14003cd01:	add    sil,sil
   14003cd04:	sar    sil,1
   14003cd07:	cmp    sil,0x2
   14003cd0b:	je     0x14003cd13
   14003cd0d:	cmp    sil,0x1
   14003cd11:	jne    0x14003cd1c
   14003cd13:	mov    eax,r14d
   14003cd16:	not    eax
   14003cd18:	test   al,0x1
   14003cd1a:	je     0x14003ccb6
   14003cd1c:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   14003cd22:	je     0x14003cd31
   14003cd24:	xor    edx,edx
   14003cd26:	mov    ecx,ebx
   14003cd28:	lea    r8d,[rdx+0x2]
   14003cd2c:	call   0x14003e3e8
   14003cd31:	mov    ecx,ebx
   14003cd33:	call   0x14003e5b8
   14003cd38:	test   eax,eax
   14003cd3a:	je     0x14003d00a
   14003cd40:	lea    rax,[rip+0x4f059]        # 0x14008bda0
   14003cd47:	mov    rax,QWORD PTR [rax+r12*8]
   14003cd4b:	test   BYTE PTR [r15+rax*1+0x8],0x80
   14003cd51:	je     0x14003d00a
   14003cd57:	call   0x140037c34
   14003cd5c:	xor    ebx,ebx
   14003cd5e:	lea    rdx,[rsp+0x5c]
   14003cd63:	mov    rcx,QWORD PTR [rax+0xc0]
   14003cd6a:	lea    rax,[rip+0x4f02f]        # 0x14008bda0
   14003cd71:	cmp    DWORD PTR [rcx+0x14],ebx
   14003cd74:	mov    rcx,QWORD PTR [rax+r12*8]
   14003cd78:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003cd7c:	sete   bl
   14003cd7f:	call   QWORD PTR [rip+0x2b45b]        # 0x1400681e0
   14003cd85:	test   eax,eax
   14003cd87:	je     0x14003d00a
   14003cd8d:	test   ebx,ebx
   14003cd8f:	je     0x14003cd9a
   14003cd91:	test   sil,sil
   14003cd94:	je     0x14003d00a
   14003cd9a:	call   QWORD PTR [rip+0x2b698]        # 0x140068438
   14003cda0:	and    DWORD PTR [rsp+0x58],edi
   14003cda4:	mov    rbx,r13
   14003cda7:	mov    DWORD PTR [rsp+0x5c],eax
   14003cdab:	test   r14d,r14d
   14003cdae:	je     0x14003d001
   14003cdb4:	test   sil,sil
   14003cdb7:	jne    0x14003cf41
   14003cdbd:	mov    cl,BYTE PTR [rbx]
   14003cdbf:	xor    eax,eax
   14003cdc1:	cmp    cl,0xa
   14003cdc4:	sete   al
   14003cdc7:	mov    DWORD PTR [rsp+0x4c],eax
   14003cdcb:	lea    rax,[rip+0x4efce]        # 0x14008bda0
   14003cdd2:	mov    rdx,QWORD PTR [rax+r12*8]
   14003cdd6:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14003cddc:	je     0x14003cdfe
   14003cdde:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   14003cde3:	mov    BYTE PTR [rsp+0x61],cl
   14003cde7:	mov    r8d,0x2
   14003cded:	mov    BYTE PTR [rsp+0x60],al
   14003cdf1:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   14003cdf7:	lea    rdx,[rsp+0x60]
   14003cdfc:	jmp    0x14003ce47
   14003cdfe:	movsx  ecx,cl
   14003ce01:	call   0x140039a3c
   14003ce06:	test   eax,eax
   14003ce08:	je     0x14003ce3e
   14003ce0a:	mov    rax,r14
   14003ce0d:	sub    rax,rbx
   14003ce10:	add    rax,r13
   14003ce13:	cmp    rax,0x1
   14003ce17:	jle    0x14003cfca
   14003ce1d:	lea    rcx,[rsp+0x40]
   14003ce22:	mov    r8d,0x2
   14003ce28:	mov    rdx,rbx
   14003ce2b:	call   0x14003ecbc
   14003ce30:	cmp    eax,0xffffffff
   14003ce33:	je     0x14003cfeb
   14003ce39:	inc    rbx
   14003ce3c:	jmp    0x14003ce5a
   14003ce3e:	mov    r8d,0x1
   14003ce44:	mov    rdx,rbx
   14003ce47:	lea    rcx,[rsp+0x40]
   14003ce4c:	call   0x14003ecbc
   14003ce51:	cmp    eax,0xffffffff
   14003ce54:	je     0x14003cfeb
   14003ce5a:	and    QWORD PTR [rsp+0x38],0x0
   14003ce60:	and    QWORD PTR [rsp+0x30],0x0
   14003ce66:	mov    ecx,DWORD PTR [rsp+0x5c]
   14003ce6a:	lea    rax,[rsp+0x60]
   14003ce6f:	lea    r8,[rsp+0x40]
   14003ce74:	mov    r9d,0x1
   14003ce7a:	xor    edx,edx
   14003ce7c:	mov    DWORD PTR [rsp+0x28],0x5
   14003ce84:	inc    rbx
   14003ce87:	mov    QWORD PTR [rsp+0x20],rax
   14003ce8c:	call   QWORD PTR [rip+0x2b546]        # 0x1400683d8
   14003ce92:	mov    r12d,eax
   14003ce95:	test   eax,eax
   14003ce97:	je     0x14003cfeb
   14003ce9d:	mov    rcx,QWORD PTR [rsp+0x50]
   14003cea2:	and    QWORD PTR [rsp+0x20],0x0
   14003cea8:	lea    rax,[rip+0x4eef1]        # 0x14008bda0
   14003ceaf:	mov    rcx,QWORD PTR [rax+rcx*8]
   14003ceb3:	lea    r9,[rsp+0x58]
   14003ceb8:	lea    rdx,[rsp+0x60]
   14003cebd:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003cec1:	mov    r8d,r12d
   14003cec4:	call   QWORD PTR [rip+0x2b396]        # 0x140068260
   14003ceca:	test   eax,eax
   14003cecc:	je     0x14003cff4
   14003ced2:	mov    edi,ebx
   14003ced4:	sub    edi,r13d
   14003ced7:	add    edi,DWORD PTR [rsp+0x44]
   14003cedb:	cmp    DWORD PTR [rsp+0x58],r12d
   14003cee0:	jl     0x14003cfeb
   14003cee6:	cmp    DWORD PTR [rsp+0x4c],0x0
   14003ceeb:	mov    r12,QWORD PTR [rsp+0x50]
   14003cef0:	je     0x14003cfbb
   14003cef6:	and    QWORD PTR [rsp+0x20],0x0
   14003cefc:	lea    rax,[rip+0x4ee9d]        # 0x14008bda0
   14003cf03:	mov    BYTE PTR [rsp+0x60],0xd
   14003cf08:	mov    rcx,QWORD PTR [rax+r12*8]
   14003cf0c:	lea    r9,[rsp+0x58]
   14003cf11:	lea    rdx,[rsp+0x60]
   14003cf16:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003cf1a:	mov    r8d,0x1
   14003cf20:	call   QWORD PTR [rip+0x2b33a]        # 0x140068260
   14003cf26:	test   eax,eax
   14003cf28:	je     0x14003cff4
   14003cf2e:	cmp    DWORD PTR [rsp+0x58],0x1
   14003cf33:	jl     0x14003cfeb
   14003cf39:	inc    DWORD PTR [rsp+0x44]
   14003cf3d:	inc    edi
   14003cf3f:	jmp    0x14003cfbb
   14003cf41:	cmp    sil,0x1
   14003cf45:	je     0x14003cf4d
   14003cf47:	cmp    sil,0x2
   14003cf4b:	jne    0x14003cf6b
   14003cf4d:	movzx  eax,WORD PTR [rbx]
   14003cf50:	xor    r12d,r12d
   14003cf53:	cmp    ax,0xa
   14003cf57:	mov    WORD PTR [rsp+0x40],ax
   14003cf5c:	sete   r12b
   14003cf60:	add    rbx,0x2
   14003cf64:	mov    DWORD PTR [rsp+0x4c],r12d
   14003cf69:	jmp    0x14003cf70
   14003cf6b:	mov    r12d,DWORD PTR [rsp+0x4c]
   14003cf70:	cmp    sil,0x1
   14003cf74:	je     0x14003cf7c
   14003cf76:	cmp    sil,0x2
   14003cf7a:	jne    0x14003cfb6
   14003cf7c:	movzx  ecx,WORD PTR [rsp+0x40]
   14003cf81:	call   0x14003fd9c
   14003cf86:	cmp    ax,WORD PTR [rsp+0x40]
   14003cf8b:	jne    0x14003cff4
   14003cf8d:	add    edi,0x2
   14003cf90:	test   r12d,r12d
   14003cf93:	je     0x14003cfb6
   14003cf95:	mov    r12d,0xd
   14003cf9b:	mov    ecx,r12d
   14003cf9e:	mov    WORD PTR [rsp+0x40],r12w
   14003cfa4:	call   0x14003fd9c
   14003cfa9:	cmp    ax,WORD PTR [rsp+0x40]
   14003cfae:	jne    0x14003cff4
   14003cfb0:	inc    edi
   14003cfb2:	inc    DWORD PTR [rsp+0x44]
   14003cfb6:	mov    r12,QWORD PTR [rsp+0x50]
   14003cfbb:	mov    eax,ebx
   14003cfbd:	sub    eax,r13d
   14003cfc0:	cmp    eax,r14d
   14003cfc3:	jae    0x14003cfeb
   14003cfc5:	jmp    0x14003cdb4
   14003cfca:	mov    al,BYTE PTR [rbx]
   14003cfcc:	lea    rdx,[rip+0x4edcd]        # 0x14008bda0
   14003cfd3:	inc    edi
   14003cfd5:	mov    rcx,QWORD PTR [rdx+r12*8]
   14003cfd9:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   14003cfde:	mov    rax,QWORD PTR [rdx+r12*8]
   14003cfe2:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   14003cfeb:	mov    ebx,DWORD PTR [rsp+0x4c]
   14003cfef:	jmp    0x14003d2ed
   14003cff4:	call   QWORD PTR [rip+0x2b3c6]        # 0x1400683c0
   14003cffa:	mov    ebx,eax
   14003cffc:	jmp    0x14003d2ed
   14003d001:	mov    ebx,DWORD PTR [rsp+0x4c]
   14003d005:	jmp    0x14003d2f5
   14003d00a:	lea    rax,[rip+0x4ed8f]        # 0x14008bda0
   14003d011:	mov    rcx,QWORD PTR [rax+r12*8]
   14003d015:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   14003d01b:	je     0x14003d31f
   14003d021:	xor    ebx,ebx
   14003d023:	mov    r12,r13
   14003d026:	test   sil,sil
   14003d029:	jne    0x14003d0fa
   14003d02f:	test   r14d,r14d
   14003d032:	je     0x14003d355
   14003d038:	lea    edx,[rbx+0xd]
   14003d03b:	mov    r15d,DWORD PTR [rsp+0x44]
   14003d040:	lea    rsi,[rbp+0x620]
   14003d047:	xor    ecx,ecx
   14003d049:	mov    eax,r12d
   14003d04c:	sub    eax,r13d
   14003d04f:	cmp    eax,r14d
   14003d052:	jae    0x14003d07b
   14003d054:	mov    al,BYTE PTR [r12]
   14003d058:	inc    r12
   14003d05b:	cmp    al,0xa
   14003d05d:	jne    0x14003d06a
   14003d05f:	mov    BYTE PTR [rsi],dl
   14003d061:	inc    r15d
   14003d064:	inc    rsi
   14003d067:	inc    rcx
   14003d06a:	inc    rcx
   14003d06d:	mov    BYTE PTR [rsi],al
   14003d06f:	inc    rsi
   14003d072:	cmp    rcx,0x13ff
   14003d079:	jb     0x14003d049
   14003d07b:	and    QWORD PTR [rsp+0x20],rbx
   14003d080:	lea    rax,[rbp+0x620]
   14003d087:	mov    r8d,esi
   14003d08a:	sub    r8d,eax
   14003d08d:	mov    rax,QWORD PTR [rsp+0x50]
   14003d092:	lea    rcx,[rip+0x4ed07]        # 0x14008bda0
   14003d099:	mov    rcx,QWORD PTR [rcx+rax*8]
   14003d09d:	mov    DWORD PTR [rsp+0x44],r15d
   14003d0a2:	mov    r15,QWORD PTR [rsp+0x60]
   14003d0a7:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003d0ab:	lea    r9,[rsp+0x48]
   14003d0b0:	lea    rdx,[rbp+0x620]
   14003d0b7:	call   QWORD PTR [rip+0x2b1a3]        # 0x140068260
   14003d0bd:	test   eax,eax
   14003d0bf:	je     0x14003cff4
   14003d0c5:	add    edi,DWORD PTR [rsp+0x48]
   14003d0c9:	lea    rax,[rbp+0x620]
   14003d0d0:	sub    rsi,rax
   14003d0d3:	movsxd rax,DWORD PTR [rsp+0x48]
   14003d0d8:	cmp    rax,rsi
   14003d0db:	jl     0x14003d2ed
   14003d0e1:	mov    eax,r12d
   14003d0e4:	mov    edx,0xd
   14003d0e9:	sub    eax,r13d
   14003d0ec:	cmp    eax,r14d
   14003d0ef:	jb     0x14003d03b
   14003d0f5:	jmp    0x14003d2ed
   14003d0fa:	cmp    sil,0x2
   14003d0fe:	jne    0x14003d1dc
   14003d104:	test   r14d,r14d
   14003d107:	je     0x14003d355
   14003d10d:	mov    edx,0xd
   14003d112:	mov    r15d,DWORD PTR [rsp+0x44]
   14003d117:	lea    rsi,[rbp+0x620]
   14003d11e:	xor    ecx,ecx
   14003d120:	mov    eax,r12d
   14003d123:	sub    eax,r13d
   14003d126:	cmp    eax,r14d
   14003d129:	jae    0x14003d15d
   14003d12b:	movzx  eax,WORD PTR [r12]
   14003d130:	add    r12,0x2
   14003d134:	cmp    ax,0xa
   14003d138:	jne    0x14003d149
   14003d13a:	mov    WORD PTR [rsi],dx
   14003d13d:	add    r15d,0x2
   14003d141:	add    rsi,0x2
   14003d145:	add    rcx,0x2
   14003d149:	add    rcx,0x2
   14003d14d:	mov    WORD PTR [rsi],ax
   14003d150:	add    rsi,0x2
   14003d154:	cmp    rcx,0x13fe
   14003d15b:	jb     0x14003d120
   14003d15d:	and    QWORD PTR [rsp+0x20],rbx
   14003d162:	lea    rax,[rbp+0x620]
   14003d169:	mov    r8d,esi
   14003d16c:	sub    r8d,eax
   14003d16f:	mov    rax,QWORD PTR [rsp+0x50]
   14003d174:	lea    rcx,[rip+0x4ec25]        # 0x14008bda0
   14003d17b:	mov    rcx,QWORD PTR [rcx+rax*8]
   14003d17f:	mov    DWORD PTR [rsp+0x44],r15d
   14003d184:	mov    r15,QWORD PTR [rsp+0x60]
   14003d189:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003d18d:	lea    r9,[rsp+0x48]
   14003d192:	lea    rdx,[rbp+0x620]
   14003d199:	call   QWORD PTR [rip+0x2b0c1]        # 0x140068260
   14003d19f:	test   eax,eax
   14003d1a1:	je     0x14003cff4
   14003d1a7:	add    edi,DWORD PTR [rsp+0x48]
   14003d1ab:	lea    rax,[rbp+0x620]
   14003d1b2:	sub    rsi,rax
   14003d1b5:	movsxd rax,DWORD PTR [rsp+0x48]
   14003d1ba:	cmp    rax,rsi
   14003d1bd:	jl     0x14003d2ed
   14003d1c3:	mov    eax,r12d
   14003d1c6:	mov    edx,0xd
   14003d1cb:	sub    eax,r13d
   14003d1ce:	cmp    eax,r14d
   14003d1d1:	jb     0x14003d112
   14003d1d7:	jmp    0x14003d2ed
   14003d1dc:	test   r14d,r14d
   14003d1df:	je     0x14003d355
   14003d1e5:	mov    r8d,0xd
   14003d1eb:	lea    rcx,[rsp+0x70]
   14003d1f0:	xor    edx,edx
   14003d1f2:	mov    eax,r12d
   14003d1f5:	sub    eax,r13d
   14003d1f8:	cmp    eax,r14d
   14003d1fb:	jae    0x14003d22c
   14003d1fd:	movzx  eax,WORD PTR [r12]
   14003d202:	add    r12,0x2
   14003d206:	cmp    ax,0xa
   14003d20a:	jne    0x14003d218
   14003d20c:	mov    WORD PTR [rcx],r8w
   14003d210:	add    rcx,0x2
   14003d214:	add    rdx,0x2
   14003d218:	add    rdx,0x2
   14003d21c:	mov    WORD PTR [rcx],ax
   14003d21f:	add    rcx,0x2
   14003d223:	cmp    rdx,0x6a8
   14003d22a:	jb     0x14003d1f2
   14003d22c:	and    QWORD PTR [rsp+0x38],0x0
   14003d232:	and    QWORD PTR [rsp+0x30],0x0
   14003d238:	lea    rax,[rsp+0x70]
   14003d23d:	sub    ecx,eax
   14003d23f:	lea    r8,[rsp+0x70]
   14003d244:	mov    DWORD PTR [rsp+0x28],0xd55
   14003d24c:	mov    eax,ecx
   14003d24e:	mov    ecx,0xfde9
   14003d253:	cdq    
   14003d254:	sub    eax,edx
   14003d256:	xor    edx,edx
   14003d258:	sar    eax,1
   14003d25a:	mov    r9d,eax
   14003d25d:	lea    rax,[rbp+0x620]
   14003d264:	mov    QWORD PTR [rsp+0x20],rax
   14003d269:	call   QWORD PTR [rip+0x2b169]        # 0x1400683d8
   14003d26f:	mov    r15d,eax
   14003d272:	test   eax,eax
   14003d274:	je     0x14003d315
   14003d27a:	xor    esi,esi
   14003d27c:	mov    rax,QWORD PTR [rsp+0x50]
   14003d281:	and    QWORD PTR [rsp+0x20],0x0
   14003d287:	movsxd rcx,esi
   14003d28a:	lea    rdx,[rbp+rcx*1+0x620]
   14003d292:	mov    r8d,r15d
   14003d295:	lea    rcx,[rip+0x4eb04]        # 0x14008bda0
   14003d29c:	mov    rcx,QWORD PTR [rcx+rax*8]
   14003d2a0:	mov    rax,QWORD PTR [rsp+0x60]
   14003d2a5:	lea    r9,[rsp+0x48]
   14003d2aa:	mov    rcx,QWORD PTR [rax+rcx*1]
   14003d2ae:	sub    r8d,esi
   14003d2b1:	call   QWORD PTR [rip+0x2afa9]        # 0x140068260
   14003d2b7:	test   eax,eax
   14003d2b9:	je     0x14003d2c6
   14003d2bb:	add    esi,DWORD PTR [rsp+0x48]
   14003d2bf:	cmp    r15d,esi
   14003d2c2:	jg     0x14003d27c
   14003d2c4:	jmp    0x14003d2ce
   14003d2c6:	call   QWORD PTR [rip+0x2b0f4]        # 0x1400683c0
   14003d2cc:	mov    ebx,eax
   14003d2ce:	cmp    r15d,esi
   14003d2d1:	jg     0x14003d2e8
   14003d2d3:	mov    edi,r12d
   14003d2d6:	mov    r8d,0xd
   14003d2dc:	sub    edi,r13d
   14003d2df:	cmp    edi,r14d
   14003d2e2:	jb     0x14003d1eb
   14003d2e8:	mov    r15,QWORD PTR [rsp+0x60]
   14003d2ed:	test   edi,edi
   14003d2ef:	jne    0x14003d390
   14003d2f5:	test   ebx,ebx
   14003d2f7:	je     0x14003d355
   14003d2f9:	cmp    ebx,0x5
   14003d2fc:	jne    0x14003d349
   14003d2fe:	call   0x140036858
   14003d303:	mov    DWORD PTR [rax],0x9
   14003d309:	call   0x140036878
   14003d30e:	mov    DWORD PTR [rax],ebx
   14003d310:	jmp    0x14003cccd
   14003d315:	call   QWORD PTR [rip+0x2b0a5]        # 0x1400683c0
   14003d31b:	mov    ebx,eax
   14003d31d:	jmp    0x14003d2e8
   14003d31f:	mov    rcx,QWORD PTR [r15+rcx*1]
   14003d323:	and    QWORD PTR [rsp+0x20],rdi
   14003d328:	lea    r9,[rsp+0x48]
   14003d32d:	mov    r8d,r14d
   14003d330:	mov    rdx,r13
   14003d333:	call   QWORD PTR [rip+0x2af27]        # 0x140068260
   14003d339:	test   eax,eax
   14003d33b:	je     0x14003cff4
   14003d341:	mov    edi,DWORD PTR [rsp+0x48]
   14003d345:	xor    ebx,ebx
   14003d347:	jmp    0x14003d2ed
   14003d349:	mov    ecx,ebx
   14003d34b:	call   0x140036898
   14003d350:	jmp    0x14003cccd
   14003d355:	mov    rax,QWORD PTR [rsp+0x50]
   14003d35a:	lea    rcx,[rip+0x4ea3f]        # 0x14008bda0
   14003d361:	mov    rax,QWORD PTR [rcx+rax*8]
   14003d365:	test   BYTE PTR [r15+rax*1+0x8],0x40
   14003d36b:	je     0x14003d378
   14003d36d:	cmp    BYTE PTR [r13+0x0],0x1a
   14003d372:	je     0x14003ccaa
   14003d378:	call   0x140036858
   14003d37d:	mov    DWORD PTR [rax],0x1c
   14003d383:	call   0x140036878
   14003d388:	and    DWORD PTR [rax],0x0
   14003d38b:	jmp    0x14003cccd
   14003d390:	sub    edi,DWORD PTR [rsp+0x44]
   14003d394:	mov    eax,edi
   14003d396:	mov    rcx,QWORD PTR [rbp+0x1a20]
   14003d39d:	xor    rcx,rsp
   14003d3a0:	call   0x140032f00
   14003d3a5:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14003d3ad:	add    rsp,0x1b30
   14003d3b4:	pop    r15
   14003d3b6:	pop    r14
   14003d3b8:	pop    r13
   14003d3ba:	pop    r12
   14003d3bc:	pop    rdi
   14003d3bd:	pop    rsi
   14003d3be:	pop    rbp
   14003d3bf:	ret    
   14003d3c0:	mov    QWORD PTR [rsp+0x10],rbx
   14003d3c5:	mov    DWORD PTR [rsp+0x8],ecx
   14003d3c9:	push   rsi
   14003d3ca:	push   rdi
   14003d3cb:	push   r12
   14003d3cd:	push   r13
   14003d3cf:	push   r14
   14003d3d1:	sub    rsp,0x20
   14003d3d5:	mov    esi,r8d
   14003d3d8:	mov    r12,rdx
   14003d3db:	movsxd rdi,ecx
   14003d3de:	cmp    edi,0xfffffffe
   14003d3e1:	jne    0x14003d3fb
   14003d3e3:	call   0x140036878
   14003d3e8:	and    DWORD PTR [rax],0x0
   14003d3eb:	call   0x140036858
   14003d3f0:	mov    DWORD PTR [rax],0x9
   14003d3f6:	jmp    0x14003d48a
   14003d3fb:	test   ecx,ecx
   14003d3fd:	js     0x14003d472
   14003d3ff:	cmp    edi,DWORD PTR [rip+0x4e97f]        # 0x14008bd84
   14003d405:	jae    0x14003d472
   14003d407:	mov    rbx,rdi
   14003d40a:	mov    r13,rdi
   14003d40d:	sar    r13,0x5
   14003d411:	lea    r14,[rip+0x4e988]        # 0x14008bda0
   14003d418:	and    ebx,0x1f
   14003d41b:	imul   rbx,rbx,0x58
   14003d41f:	mov    rax,QWORD PTR [r14+r13*8]
   14003d423:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14003d428:	and    ecx,0x1
   14003d42b:	je     0x14003d472
   14003d42d:	mov    ecx,edi
   14003d42f:	call   0x14003f9ec
   14003d434:	nop
   14003d435:	mov    rax,QWORD PTR [r14+r13*8]
   14003d439:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003d43e:	je     0x14003d451
   14003d440:	mov    r8d,esi
   14003d443:	mov    rdx,r12
   14003d446:	mov    ecx,edi
   14003d448:	call   0x14003cc60
   14003d44d:	mov    ebx,eax
   14003d44f:	jmp    0x14003d467
   14003d451:	call   0x140036858
   14003d456:	mov    DWORD PTR [rax],0x9
   14003d45c:	call   0x140036878
   14003d461:	and    DWORD PTR [rax],0x0
   14003d464:	or     ebx,0xffffffff
   14003d467:	mov    ecx,edi
   14003d469:	call   0x14003fa94
   14003d46e:	mov    eax,ebx
   14003d470:	jmp    0x14003d48d
   14003d472:	call   0x140036878
   14003d477:	and    DWORD PTR [rax],0x0
   14003d47a:	call   0x140036858
   14003d47f:	mov    DWORD PTR [rax],0x9
   14003d485:	call   0x1400367f0
   14003d48a:	or     eax,0xffffffff
   14003d48d:	mov    rbx,QWORD PTR [rsp+0x58]
   14003d492:	add    rsp,0x20
   14003d496:	pop    r14
   14003d498:	pop    r13
   14003d49a:	pop    r12
   14003d49c:	pop    rdi
   14003d49d:	pop    rsi
   14003d49e:	ret    
   14003d49f:	int3   
   14003d4a0:	lea    rax,[rip+0x3675]        # 0x140040b1c
   14003d4a7:	lea    rcx,[rip+0x41be]        # 0x14004166c
   14003d4ae:	mov    QWORD PTR [rip+0x48963],rax        # 0x140085e18
   14003d4b5:	lea    rax,[rip+0x3650]        # 0x140040b0c
   14003d4bc:	mov    QWORD PTR [rip+0x4894d],rcx        # 0x140085e10
   14003d4c3:	mov    QWORD PTR [rip+0x48956],rax        # 0x140085e20
   14003d4ca:	lea    rax,[rip+0x3643]        # 0x140040b14
   14003d4d1:	mov    QWORD PTR [rip+0x48960],rcx        # 0x140085e38
   14003d4d8:	mov    QWORD PTR [rip+0x48949],rax        # 0x140085e28
   14003d4df:	lea    rax,[rip+0x35ca]        # 0x140040ab0
   14003d4e6:	mov    QWORD PTR [rip+0x48943],rax        # 0x140085e30
   14003d4ed:	lea    rax,[rip+0x40e0]        # 0x1400415d4
   14003d4f4:	mov    QWORD PTR [rip+0x48945],rax        # 0x140085e40
   14003d4fb:	lea    rax,[rip+0x35c6]        # 0x140040ac8
   14003d502:	mov    QWORD PTR [rip+0x4893f],rax        # 0x140085e48
   14003d509:	lea    rax,[rip+0x3500]        # 0x140040a10
   14003d510:	mov    QWORD PTR [rip+0x48939],rax        # 0x140085e50
   14003d517:	lea    rax,[rip+0x3472]        # 0x140040990
   14003d51e:	mov    QWORD PTR [rip+0x48933],rax        # 0x140085e58
   14003d525:	ret    
   14003d526:	int3   
   14003d527:	int3   
   14003d528:	jmp    0x14003d4a0
   14003d52d:	int3   
   14003d52e:	int3   
   14003d52f:	int3   
   14003d530:	mov    QWORD PTR [rsp+0x18],rbx
   14003d535:	push   rbp
   14003d536:	push   rsi
   14003d537:	push   rdi
   14003d538:	push   r12
   14003d53a:	push   r13
   14003d53c:	push   r14
   14003d53e:	push   r15
   14003d540:	lea    rbp,[rsp-0x7]
   14003d545:	sub    rsp,0xa0
   14003d54c:	mov    rax,QWORD PTR [rip+0x47b55]        # 0x1400850a8
   14003d553:	xor    rax,rsp
   14003d556:	mov    QWORD PTR [rbp-0x1],rax
   14003d55a:	mov    r13,QWORD PTR [rbp+0x7f]
   14003d55e:	xor    ebx,ebx
   14003d560:	mov    DWORD PTR [rbp-0x71],r9d
   14003d564:	lea    r9d,[rbx+0x1]
   14003d568:	mov    QWORD PTR [rbp-0x59],rcx
   14003d56c:	mov    QWORD PTR [rbp-0x69],rdx
   14003d570:	lea    r10,[rbp-0x21]
   14003d574:	mov    WORD PTR [rbp-0x6d],bx
   14003d578:	mov    edi,ebx
   14003d57a:	mov    DWORD PTR [rbp-0x75],r9d
   14003d57e:	mov    r14d,ebx
   14003d581:	mov    DWORD PTR [rbp-0x79],ebx
   14003d584:	mov    r15d,ebx
   14003d587:	mov    esi,ebx
   14003d589:	mov    r12d,ebx
   14003d58c:	mov    ecx,ebx
   14003d58e:	test   r13,r13
   14003d591:	jne    0x14003d5aa
   14003d593:	call   0x140036858
   14003d598:	mov    DWORD PTR [rax],0x16
   14003d59e:	call   0x1400367f0
   14003d5a3:	xor    eax,eax
   14003d5a5:	jmp    0x14003dd6a
   14003d5aa:	mov    r11,r8
   14003d5ad:	mov    al,BYTE PTR [r8]
   14003d5b0:	cmp    al,0x20
   14003d5b2:	je     0x14003d5c0
   14003d5b4:	cmp    al,0x9
   14003d5b6:	je     0x14003d5c0
   14003d5b8:	cmp    al,0xa
   14003d5ba:	je     0x14003d5c0
   14003d5bc:	cmp    al,0xd
   14003d5be:	jne    0x14003d5c5
   14003d5c0:	add    r8,r9
   14003d5c3:	jmp    0x14003d5ad
   14003d5c5:	mov    dl,BYTE PTR [r8]
   14003d5c8:	add    r8,r9
   14003d5cb:	cmp    ecx,0x5
   14003d5ce:	jg     0x14003d7ee
   14003d5d4:	je     0x14003d7d4
   14003d5da:	mov    r9d,ecx
   14003d5dd:	test   ecx,ecx
   14003d5df:	je     0x14003d773
   14003d5e5:	dec    r9d
   14003d5e8:	je     0x14003d72b
   14003d5ee:	dec    r9d
   14003d5f1:	je     0x14003d6d8
   14003d5f7:	dec    r9d
   14003d5fa:	je     0x14003d68b
   14003d600:	dec    r9d
   14003d603:	jne    0x14003d8b3
   14003d609:	mov    r9d,0x1
   14003d60f:	mov    r14d,r9d
   14003d612:	mov    DWORD PTR [rbp-0x79],r9d
   14003d616:	test   edi,edi
   14003d618:	jne    0x14003d64b
   14003d61a:	jmp    0x14003d625
   14003d61c:	mov    dl,BYTE PTR [r8]
   14003d61f:	sub    r12d,r9d
   14003d622:	add    r8,r9
   14003d625:	cmp    dl,0x30
   14003d628:	je     0x14003d61c
   14003d62a:	jmp    0x14003d64b
   14003d62c:	cmp    dl,0x39
   14003d62f:	jg     0x14003d650
   14003d631:	cmp    edi,0x19
   14003d634:	jae    0x14003d645
   14003d636:	sub    dl,0x30
   14003d639:	add    edi,r9d
   14003d63c:	mov    BYTE PTR [r10],dl
   14003d63f:	add    r10,r9
   14003d642:	sub    r12d,r9d
   14003d645:	mov    dl,BYTE PTR [r8]
   14003d648:	add    r8,r9
   14003d64b:	cmp    dl,0x30
   14003d64e:	jge    0x14003d62c
   14003d650:	cmp    dl,0x2b
   14003d653:	je     0x14003d67e
   14003d655:	cmp    dl,0x2d
   14003d658:	je     0x14003d67e
   14003d65a:	cmp    dl,0x43
   14003d65d:	jle    0x14003d7ad
   14003d663:	cmp    dl,0x45
   14003d666:	jle    0x14003d674
   14003d668:	sub    dl,0x64
   14003d66b:	cmp    dl,r9b
   14003d66e:	ja     0x14003d7ad
   14003d674:	mov    ecx,0x6
   14003d679:	jmp    0x14003d5c5
   14003d67e:	sub    r8,r9
   14003d681:	mov    ecx,0xb
   14003d686:	jmp    0x14003d5c5
   14003d68b:	mov    r9d,0x1
   14003d691:	mov    al,0x30
   14003d693:	mov    r14d,r9d
   14003d696:	jmp    0x14003d6b8
   14003d698:	cmp    dl,0x39
   14003d69b:	jg     0x14003d6bc
   14003d69d:	cmp    edi,0x19
   14003d6a0:	jae    0x14003d6af
   14003d6a2:	sub    dl,al
   14003d6a4:	add    edi,r9d
   14003d6a7:	mov    BYTE PTR [r10],dl
   14003d6aa:	add    r10,r9
   14003d6ad:	jmp    0x14003d6b2
   14003d6af:	add    r12d,r9d
   14003d6b2:	mov    dl,BYTE PTR [r8]
   14003d6b5:	add    r8,r9
   14003d6b8:	cmp    dl,al
   14003d6ba:	jge    0x14003d698
   14003d6bc:	mov    rax,QWORD PTR [r13+0x0]
   14003d6c0:	mov    rcx,QWORD PTR [rax+0x128]
   14003d6c7:	mov    rax,QWORD PTR [rcx]
   14003d6ca:	cmp    dl,BYTE PTR [rax]
   14003d6cc:	jne    0x14003d650
   14003d6ce:	mov    ecx,0x4
   14003d6d3:	jmp    0x14003d5c5
   14003d6d8:	lea    eax,[rdx-0x31]
   14003d6db:	cmp    al,0x8
   14003d6dd:	ja     0x14003d6f2
   14003d6df:	mov    ecx,0x3
   14003d6e4:	mov    r9d,0x1
   14003d6ea:	sub    r8,r9
   14003d6ed:	jmp    0x14003d5c5
   14003d6f2:	mov    rax,QWORD PTR [r13+0x0]
   14003d6f6:	mov    rcx,QWORD PTR [rax+0x128]
   14003d6fd:	mov    rax,QWORD PTR [rcx]
   14003d700:	cmp    dl,BYTE PTR [rax]
   14003d702:	jne    0x14003d714
   14003d704:	mov    ecx,0x5
   14003d709:	mov    r9d,0x1
   14003d70f:	jmp    0x14003d5c5
   14003d714:	cmp    dl,0x30
   14003d717:	jne    0x14003d914
   14003d71d:	mov    r9d,0x1
   14003d723:	mov    ecx,r9d
   14003d726:	jmp    0x14003d5c5
   14003d72b:	lea    eax,[rdx-0x31]
   14003d72e:	mov    r9d,0x1
   14003d734:	mov    r14d,r9d
   14003d737:	cmp    al,0x8
   14003d739:	ja     0x14003d741
   14003d73b:	lea    ecx,[r9+0x2]
   14003d73f:	jmp    0x14003d6ea
   14003d741:	mov    rax,QWORD PTR [r13+0x0]
   14003d745:	mov    rcx,QWORD PTR [rax+0x128]
   14003d74c:	mov    rax,QWORD PTR [rcx]
   14003d74f:	cmp    dl,BYTE PTR [rax]
   14003d751:	je     0x14003d6ce
   14003d757:	cmp    dl,0x2b
   14003d75a:	je     0x14003d67e
   14003d760:	cmp    dl,0x2d
   14003d763:	je     0x14003d67e
   14003d769:	cmp    dl,0x30
   14003d76c:	je     0x14003d723
   14003d76e:	jmp    0x14003d65a
   14003d773:	lea    eax,[rdx-0x31]
   14003d776:	cmp    al,0x8
   14003d778:	jbe    0x14003d6df
   14003d77e:	mov    rax,QWORD PTR [r13+0x0]
   14003d782:	mov    rcx,QWORD PTR [rax+0x128]
   14003d789:	mov    rax,QWORD PTR [rcx]
   14003d78c:	cmp    dl,BYTE PTR [rax]
   14003d78e:	je     0x14003d704
   14003d794:	cmp    dl,0x2b
   14003d797:	je     0x14003d7c6
   14003d799:	cmp    dl,0x2d
   14003d79c:	je     0x14003d7b5
   14003d79e:	cmp    dl,0x30
   14003d7a1:	je     0x14003d71d
   14003d7a7:	mov    r9d,0x1
   14003d7ad:	sub    r8,r9
   14003d7b0:	jmp    0x14003d91d
   14003d7b5:	mov    ecx,0x2
   14003d7ba:	mov    DWORD PTR [rbp-0x6d],0x8000
   14003d7c1:	jmp    0x14003d709
   14003d7c6:	mov    ecx,0x2
   14003d7cb:	mov    WORD PTR [rbp-0x6d],bx
   14003d7cf:	jmp    0x14003d709
   14003d7d4:	sub    dl,0x30
   14003d7d7:	mov    DWORD PTR [rbp-0x79],r9d
   14003d7db:	cmp    dl,0x9
   14003d7de:	ja     0x14003d8bd
   14003d7e4:	mov    ecx,0x4
   14003d7e9:	jmp    0x14003d6ea
   14003d7ee:	mov    r9d,ecx
   14003d7f1:	sub    r9d,0x6
   14003d7f5:	je     0x14003d897
   14003d7fb:	dec    r9d
   14003d7fe:	je     0x14003d873
   14003d800:	dec    r9d
   14003d803:	je     0x14003d847
   14003d805:	dec    r9d
   14003d808:	je     0x14003d8c2
   14003d80e:	cmp    r9d,0x2
   14003d812:	jne    0x14003d8b3
   14003d818:	cmp    DWORD PTR [rbp+0x77],ebx
   14003d81b:	je     0x14003d7a7
   14003d81d:	lea    r11,[r8-0x1]
   14003d821:	cmp    dl,0x2b
   14003d824:	je     0x14003d83d
   14003d826:	cmp    dl,0x2d
   14003d829:	jne    0x14003d914
   14003d82f:	or     DWORD PTR [rbp-0x75],0xffffffff
   14003d833:	mov    ecx,0x7
   14003d838:	jmp    0x14003d709
   14003d83d:	mov    ecx,0x7
   14003d842:	jmp    0x14003d709
   14003d847:	mov    r9d,0x1
   14003d84d:	mov    r15d,r9d
   14003d850:	jmp    0x14003d858
   14003d852:	mov    dl,BYTE PTR [r8]
   14003d855:	add    r8,r9
   14003d858:	cmp    dl,0x30
   14003d85b:	je     0x14003d852
   14003d85d:	sub    dl,0x31
   14003d860:	cmp    dl,0x8
   14003d863:	ja     0x14003d7ad
   14003d869:	mov    ecx,0x9
   14003d86e:	jmp    0x14003d6ea
   14003d873:	lea    eax,[rdx-0x31]
   14003d876:	cmp    al,0x8
   14003d878:	ja     0x14003d884
   14003d87a:	mov    ecx,0x9
   14003d87f:	jmp    0x14003d6e4
   14003d884:	cmp    dl,0x30
   14003d887:	jne    0x14003d914
   14003d88d:	mov    ecx,0x8
   14003d892:	jmp    0x14003d709
   14003d897:	lea    eax,[rdx-0x31]
   14003d89a:	lea    r11,[r8-0x2]
   14003d89e:	cmp    al,0x8
   14003d8a0:	jbe    0x14003d87a
   14003d8a2:	cmp    dl,0x2b
   14003d8a5:	je     0x14003d8ae
   14003d8a7:	cmp    dl,0x2d
   14003d8aa:	je     0x14003d82f
   14003d8ac:	jmp    0x14003d884
   14003d8ae:	mov    ecx,0x7
   14003d8b3:	cmp    ecx,0xa
   14003d8b6:	je     0x14003d917
   14003d8b8:	jmp    0x14003d709
   14003d8bd:	mov    r8,r11
   14003d8c0:	jmp    0x14003d91d
   14003d8c2:	mov    r9d,0x1
   14003d8c8:	mov    r11b,0x30
   14003d8cb:	mov    r15d,r9d
   14003d8ce:	jmp    0x14003d8ed
   14003d8d0:	cmp    dl,0x39
   14003d8d3:	jg     0x14003d90a
   14003d8d5:	lea    ecx,[rsi+rsi*4]
   14003d8d8:	movsx  eax,dl
   14003d8db:	lea    esi,[rax+rcx*2-0x30]
   14003d8df:	cmp    esi,0x1450
   14003d8e5:	jg     0x14003d8f4
   14003d8e7:	mov    dl,BYTE PTR [r8]
   14003d8ea:	add    r8,r9
   14003d8ed:	cmp    dl,r11b
   14003d8f0:	jge    0x14003d8d0
   14003d8f2:	jmp    0x14003d90a
   14003d8f4:	mov    esi,0x1451
   14003d8f9:	jmp    0x14003d90a
   14003d8fb:	cmp    dl,0x39
   14003d8fe:	jg     0x14003d7ad
   14003d904:	mov    dl,BYTE PTR [r8]
   14003d907:	add    r8,r9
   14003d90a:	cmp    dl,r11b
   14003d90d:	jge    0x14003d8fb
   14003d90f:	jmp    0x14003d7ad
   14003d914:	mov    r8,r11
   14003d917:	mov    r9d,0x1
   14003d91d:	mov    rax,QWORD PTR [rbp-0x69]
   14003d921:	mov    QWORD PTR [rax],r8
   14003d924:	test   r14d,r14d
   14003d927:	je     0x14003dd40
   14003d92d:	cmp    edi,0x18
   14003d930:	jbe    0x14003d94a
   14003d932:	mov    al,BYTE PTR [rbp-0xa]
   14003d935:	cmp    al,0x5
   14003d937:	jl     0x14003d93f
   14003d939:	add    al,r9b
   14003d93c:	mov    BYTE PTR [rbp-0xa],al
   14003d93f:	sub    r10,r9
   14003d942:	mov    edi,0x18
   14003d947:	add    r12d,r9d
   14003d94a:	test   edi,edi
   14003d94c:	jne    0x14003d962
   14003d94e:	movzx  edx,bx
   14003d951:	movzx  eax,bx
   14003d954:	mov    edi,ebx
   14003d956:	mov    ecx,ebx
   14003d958:	jmp    0x14003dd4f
   14003d95d:	dec    edi
   14003d95f:	add    r12d,r9d
   14003d962:	sub    r10,r9
   14003d965:	cmp    BYTE PTR [r10],bl
   14003d968:	je     0x14003d95d
   14003d96a:	lea    r8,[rbp-0x41]
   14003d96e:	lea    rcx,[rbp-0x21]
   14003d972:	mov    edx,edi
   14003d974:	call   0x140041690
   14003d979:	cmp    DWORD PTR [rbp-0x75],ebx
   14003d97c:	jge    0x14003d980
   14003d97e:	neg    esi
   14003d980:	add    esi,r12d
   14003d983:	test   r15d,r15d
   14003d986:	jne    0x14003d98b
   14003d988:	add    esi,DWORD PTR [rbp+0x67]
   14003d98b:	cmp    DWORD PTR [rbp-0x79],ebx
   14003d98e:	jne    0x14003d993
   14003d990:	sub    esi,DWORD PTR [rbp+0x6f]
   14003d993:	cmp    esi,0x1450
   14003d999:	jg     0x14003dd2a
   14003d99f:	cmp    esi,0xffffebb0
   14003d9a5:	jl     0x14003dd1a
   14003d9ab:	lea    r13,[rip+0x48ade]        # 0x140086490
   14003d9b2:	sub    r13,0x60
   14003d9b6:	test   esi,esi
   14003d9b8:	je     0x14003dd08
   14003d9be:	jns    0x14003d9cd
   14003d9c0:	lea    r13,[rip+0x48c29]        # 0x1400865f0
   14003d9c7:	neg    esi
   14003d9c9:	sub    r13,0x60
   14003d9cd:	cmp    DWORD PTR [rbp-0x71],ebx
   14003d9d0:	jne    0x14003d9d6
   14003d9d2:	mov    WORD PTR [rbp-0x41],bx
   14003d9d6:	test   esi,esi
   14003d9d8:	je     0x14003dd08
   14003d9de:	mov    edi,0x80000000
   14003d9e3:	mov    r10d,0x7fff
   14003d9e9:	mov    r12d,0x1
   14003d9ef:	mov    eax,esi
   14003d9f1:	add    r13,0x54
   14003d9f5:	sar    esi,0x3
   14003d9f8:	and    eax,0x7
   14003d9fb:	mov    DWORD PTR [rbp-0x71],esi
   14003d9fe:	mov    QWORD PTR [rbp-0x61],r13
   14003da02:	je     0x14003dd00
   14003da08:	cdqe   
   14003da0a:	mov    r15d,0x8000
   14003da10:	lea    rcx,[rax+rax*2]
   14003da14:	lea    rdx,[r13+rcx*4+0x0]
   14003da19:	cmp    WORD PTR [rdx],r15w
   14003da1d:	jb     0x14003da3a
   14003da1f:	mov    rcx,QWORD PTR [rdx]
   14003da22:	mov    eax,DWORD PTR [rdx+0x8]
   14003da25:	lea    rdx,[rbp-0x31]
   14003da29:	mov    QWORD PTR [rbp-0x31],rcx
   14003da2d:	shr    rcx,0x10
   14003da31:	mov    DWORD PTR [rbp-0x29],eax
   14003da34:	sub    ecx,r12d
   14003da37:	mov    DWORD PTR [rbp-0x2f],ecx
   14003da3a:	movzx  eax,WORD PTR [rdx+0xa]
   14003da3e:	movzx  ecx,WORD PTR [rbp-0x37]
   14003da42:	mov    QWORD PTR [rbp-0x51],rbx
   14003da46:	movzx  r9d,ax
   14003da4a:	and    ax,r10w
   14003da4e:	mov    DWORD PTR [rbp-0x49],ebx
   14003da51:	xor    r9w,cx
   14003da55:	and    cx,r10w
   14003da59:	and    r9w,r15w
   14003da5d:	lea    r8d,[rcx+rax*1]
   14003da61:	mov    WORD PTR [rbp-0x75],r9w
   14003da66:	cmp    cx,r10w
   14003da6a:	jae    0x14003dcec
   14003da70:	cmp    ax,r10w
   14003da74:	jae    0x14003dcec
   14003da7a:	mov    r11d,0xbffd
   14003da80:	cmp    r8w,r11w
   14003da84:	ja     0x14003dcec
   14003da8a:	mov    r9d,0x3fbf
   14003da90:	cmp    r8w,r9w
   14003da94:	ja     0x14003daa2
   14003da96:	mov    QWORD PTR [rbp-0x3d],rbx
   14003da9a:	mov    DWORD PTR [rbp-0x41],ebx
   14003da9d:	jmp    0x14003dd00
   14003daa2:	test   cx,cx
   14003daa5:	jne    0x14003dac7
   14003daa7:	add    r8w,r12w
   14003daab:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14003dab2:	jne    0x14003dac7
   14003dab4:	cmp    DWORD PTR [rbp-0x3d],ebx
   14003dab7:	jne    0x14003dac7
   14003dab9:	cmp    DWORD PTR [rbp-0x41],ebx
   14003dabc:	jne    0x14003dac7
   14003dabe:	mov    WORD PTR [rbp-0x37],bx
   14003dac2:	jmp    0x14003dd00
   14003dac7:	test   ax,ax
   14003daca:	jne    0x14003dae2
   14003dacc:	add    r8w,r12w
   14003dad0:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14003dad7:	jne    0x14003dae2
   14003dad9:	cmp    DWORD PTR [rdx+0x4],ebx
   14003dadc:	jne    0x14003dae2
   14003dade:	cmp    DWORD PTR [rdx],ebx
   14003dae0:	je     0x14003da96
   14003dae2:	mov    r10d,0x5
   14003dae8:	mov    r12d,ebx
   14003daeb:	lea    rcx,[rbp-0x51]
   14003daef:	lea    r13d,[r10-0x4]
   14003daf3:	lea    eax,[r12+r12*1]
   14003daf7:	mov    DWORD PTR [rbp-0x79],r10d
   14003dafb:	movsxd r9,eax
   14003dafe:	test   r10d,r10d
   14003db01:	jle    0x14003db57
   14003db03:	mov    edi,r12d
   14003db06:	lea    r14,[rbp+r9*1-0x41]
   14003db0b:	lea    r15,[rdx+0x8]
   14003db0f:	and    edi,r13d
   14003db12:	movzx  eax,WORD PTR [r14]
   14003db16:	movzx  r9d,WORD PTR [r15]
   14003db1a:	mov    r11d,ebx
   14003db1d:	imul   r9d,eax
   14003db21:	mov    eax,DWORD PTR [rcx]
   14003db23:	lea    esi,[rax+r9*1]
   14003db27:	cmp    esi,eax
   14003db29:	jb     0x14003db30
   14003db2b:	cmp    esi,r9d
   14003db2e:	jae    0x14003db33
   14003db30:	mov    r11d,r13d
   14003db33:	mov    DWORD PTR [rcx],esi
   14003db35:	test   r11d,r11d
   14003db38:	je     0x14003db3f
   14003db3a:	add    WORD PTR [rcx+0x4],r13w
   14003db3f:	mov    r11d,DWORD PTR [rbp-0x79]
   14003db43:	add    r14,0x2
   14003db47:	sub    r15,0x2
   14003db4b:	sub    r11d,r13d
   14003db4e:	mov    DWORD PTR [rbp-0x79],r11d
   14003db52:	test   r11d,r11d
   14003db55:	jg     0x14003db12
   14003db57:	sub    r10d,r13d
   14003db5a:	add    rcx,0x2
   14003db5e:	add    r12d,r13d
   14003db61:	test   r10d,r10d
   14003db64:	jg     0x14003daf3
   14003db66:	mov    r10d,DWORD PTR [rbp-0x49]
   14003db6a:	mov    r9d,DWORD PTR [rbp-0x51]
   14003db6e:	mov    eax,0xc002
   14003db73:	add    r8w,ax
   14003db77:	mov    edi,0x80000000
   14003db7c:	mov    r14d,0xffff
   14003db82:	test   r8w,r8w
   14003db86:	jle    0x14003dbc7
   14003db88:	test   edi,r10d
   14003db8b:	jne    0x14003dbc1
   14003db8d:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003db91:	mov    edx,r9d
   14003db94:	add    r10d,r10d
   14003db97:	shr    edx,0x1f
   14003db9a:	add    r9d,r9d
   14003db9d:	mov    ecx,r11d
   14003dba0:	shr    ecx,0x1f
   14003dba3:	lea    eax,[r11+r11*1]
   14003dba7:	add    r8w,r14w
   14003dbab:	or     eax,edx
   14003dbad:	or     r10d,ecx
   14003dbb0:	mov    DWORD PTR [rbp-0x51],r9d
   14003dbb4:	mov    DWORD PTR [rbp-0x4d],eax
   14003dbb7:	mov    DWORD PTR [rbp-0x49],r10d
   14003dbbb:	test   r8w,r8w
   14003dbbf:	jg     0x14003db88
   14003dbc1:	test   r8w,r8w
   14003dbc5:	jg     0x14003dc31
   14003dbc7:	add    r8w,r14w
   14003dbcb:	jns    0x14003dc31
   14003dbcd:	movzx  eax,r8w
   14003dbd1:	mov    edi,ebx
   14003dbd3:	neg    ax
   14003dbd6:	movzx  edx,ax
   14003dbd9:	add    r8w,dx
   14003dbdd:	test   BYTE PTR [rbp-0x51],r13b
   14003dbe1:	je     0x14003dbe6
   14003dbe3:	add    edi,r13d
   14003dbe6:	mov    r11d,DWORD PTR [rbp-0x4d]
   14003dbea:	mov    eax,r10d
   14003dbed:	shr    r9d,1
   14003dbf0:	mov    ecx,r11d
   14003dbf3:	shl    eax,0x1f
   14003dbf6:	shr    r11d,1
   14003dbf9:	shl    ecx,0x1f
   14003dbfc:	or     r11d,eax
   14003dbff:	shr    r10d,1
   14003dc02:	or     r9d,ecx
   14003dc05:	sub    rdx,r13
   14003dc08:	mov    DWORD PTR [rbp-0x4d],r11d
   14003dc0c:	mov    DWORD PTR [rbp-0x51],r9d
   14003dc10:	jne    0x14003dbdd
   14003dc12:	test   edi,edi
   14003dc14:	mov    DWORD PTR [rbp-0x49],r10d
   14003dc18:	mov    edi,0x80000000
   14003dc1d:	je     0x14003dc31
   14003dc1f:	movzx  eax,r9w
   14003dc23:	or     ax,r13w
   14003dc27:	mov    WORD PTR [rbp-0x51],ax
   14003dc2b:	mov    r9d,DWORD PTR [rbp-0x51]
   14003dc2f:	jmp    0x14003dc35
   14003dc31:	movzx  eax,WORD PTR [rbp-0x51]
   14003dc35:	mov    r13,QWORD PTR [rbp-0x61]
   14003dc39:	mov    r15d,0x8000
   14003dc3f:	cmp    ax,r15w
   14003dc43:	ja     0x14003dc55
   14003dc45:	and    r9d,0x1ffff
   14003dc4c:	cmp    r9d,0x18000
   14003dc53:	jne    0x14003dca5
   14003dc55:	mov    eax,DWORD PTR [rbp-0x4f]
   14003dc58:	or     ecx,0xffffffff
   14003dc5b:	mov    r12d,0x1
   14003dc61:	cmp    eax,ecx
   14003dc63:	jne    0x14003dc9d
   14003dc65:	mov    eax,DWORD PTR [rbp-0x4b]
   14003dc68:	mov    DWORD PTR [rbp-0x4f],ebx
   14003dc6b:	cmp    eax,ecx
   14003dc6d:	jne    0x14003dc91
   14003dc6f:	movzx  eax,WORD PTR [rbp-0x47]
   14003dc73:	mov    DWORD PTR [rbp-0x4b],ebx
   14003dc76:	cmp    ax,r14w
   14003dc7a:	jne    0x14003dc87
   14003dc7c:	mov    WORD PTR [rbp-0x47],r15w
   14003dc81:	add    r8w,r12w
   14003dc85:	jmp    0x14003dc97
   14003dc87:	add    ax,r12w
   14003dc8b:	mov    WORD PTR [rbp-0x47],ax
   14003dc8f:	jmp    0x14003dc97
   14003dc91:	add    eax,r12d
   14003dc94:	mov    DWORD PTR [rbp-0x4b],eax
   14003dc97:	mov    r10d,DWORD PTR [rbp-0x49]
   14003dc9b:	jmp    0x14003dcab
   14003dc9d:	add    eax,r12d
   14003dca0:	mov    DWORD PTR [rbp-0x4f],eax
   14003dca3:	jmp    0x14003dcab
   14003dca5:	mov    r12d,0x1
   14003dcab:	mov    esi,DWORD PTR [rbp-0x71]
   14003dcae:	mov    eax,0x7fff
   14003dcb3:	cmp    r8w,ax
   14003dcb7:	jb     0x14003dcc8
   14003dcb9:	movzx  eax,WORD PTR [rbp-0x75]
   14003dcbd:	mov    r10d,0x7fff
   14003dcc3:	neg    ax
   14003dcc6:	jmp    0x14003dcf0
   14003dcc8:	movzx  eax,WORD PTR [rbp-0x4f]
   14003dccc:	or     r8w,WORD PTR [rbp-0x75]
   14003dcd1:	mov    DWORD PTR [rbp-0x3b],r10d
   14003dcd5:	mov    WORD PTR [rbp-0x41],ax
   14003dcd9:	mov    eax,DWORD PTR [rbp-0x4d]
   14003dcdc:	mov    WORD PTR [rbp-0x37],r8w
   14003dce1:	mov    DWORD PTR [rbp-0x3f],eax
   14003dce4:	mov    r10d,0x7fff
   14003dcea:	jmp    0x14003dd00
   14003dcec:	neg    r9w
   14003dcf0:	sbb    eax,eax
   14003dcf2:	mov    QWORD PTR [rbp-0x41],rbx
   14003dcf6:	and    eax,edi
   14003dcf8:	add    eax,0x7fff8000
   14003dcfd:	mov    DWORD PTR [rbp-0x39],eax
   14003dd00:	test   esi,esi
   14003dd02:	jne    0x14003d9ef
   14003dd08:	mov    eax,DWORD PTR [rbp-0x39]
   14003dd0b:	movzx  edx,WORD PTR [rbp-0x41]
   14003dd0f:	mov    ecx,DWORD PTR [rbp-0x3f]
   14003dd12:	mov    edi,DWORD PTR [rbp-0x3b]
   14003dd15:	shr    eax,0x10
   14003dd18:	jmp    0x14003dd4f
   14003dd1a:	mov    edx,ebx
   14003dd1c:	movzx  eax,bx
   14003dd1f:	mov    edi,ebx
   14003dd21:	mov    ecx,ebx
   14003dd23:	mov    ebx,0x1
   14003dd28:	jmp    0x14003dd4f
   14003dd2a:	mov    ecx,ebx
   14003dd2c:	movzx  edx,bx
   14003dd2f:	mov    eax,0x7fff
   14003dd34:	mov    ebx,0x2
   14003dd39:	mov    edi,0x80000000
   14003dd3e:	jmp    0x14003dd4f
   14003dd40:	movzx  edx,bx
   14003dd43:	movzx  eax,bx
   14003dd46:	mov    edi,ebx
   14003dd48:	mov    ecx,ebx
   14003dd4a:	mov    ebx,0x4
   14003dd4f:	mov    r8,QWORD PTR [rbp-0x59]
   14003dd53:	or     ax,WORD PTR [rbp-0x6d]
   14003dd57:	mov    WORD PTR [r8+0xa],ax
   14003dd5c:	mov    eax,ebx
   14003dd5e:	mov    WORD PTR [r8],dx
   14003dd62:	mov    DWORD PTR [r8+0x2],ecx
   14003dd66:	mov    DWORD PTR [r8+0x6],edi
   14003dd6a:	mov    rcx,QWORD PTR [rbp-0x1]
   14003dd6e:	xor    rcx,rsp
   14003dd71:	call   0x140032f00
   14003dd76:	mov    rbx,QWORD PTR [rsp+0xf0]
   14003dd7e:	add    rsp,0xa0
   14003dd85:	pop    r15
   14003dd87:	pop    r14
   14003dd89:	pop    r13
   14003dd8b:	pop    r12
   14003dd8d:	pop    rdi
   14003dd8e:	pop    rsi
   14003dd8f:	pop    rbp
   14003dd90:	ret    
   14003dd91:	int3   
   14003dd92:	int3   
   14003dd93:	int3   
   14003dd94:	and    DWORD PTR [rip+0x4cfd1],0x0        # 0x14008ad6c
   14003dd9b:	ret    
   14003dd9c:	test   rcx,rcx
   14003dd9f:	je     0x14003e189
   14003dda5:	push   rbx
   14003dda6:	sub    rsp,0x20
   14003ddaa:	mov    rbx,rcx
   14003ddad:	mov    rcx,QWORD PTR [rcx+0x8]
   14003ddb1:	call   0x140033594
   14003ddb6:	mov    rcx,QWORD PTR [rbx+0x10]
   14003ddba:	call   0x140033594
   14003ddbf:	mov    rcx,QWORD PTR [rbx+0x18]
   14003ddc3:	call   0x140033594
   14003ddc8:	mov    rcx,QWORD PTR [rbx+0x20]
   14003ddcc:	call   0x140033594
   14003ddd1:	mov    rcx,QWORD PTR [rbx+0x28]
   14003ddd5:	call   0x140033594
   14003ddda:	mov    rcx,QWORD PTR [rbx+0x30]
   14003ddde:	call   0x140033594
   14003dde3:	mov    rcx,QWORD PTR [rbx]
   14003dde6:	call   0x140033594
   14003ddeb:	mov    rcx,QWORD PTR [rbx+0x40]
   14003ddef:	call   0x140033594
   14003ddf4:	mov    rcx,QWORD PTR [rbx+0x48]
   14003ddf8:	call   0x140033594
   14003ddfd:	mov    rcx,QWORD PTR [rbx+0x50]
   14003de01:	call   0x140033594
   14003de06:	mov    rcx,QWORD PTR [rbx+0x58]
   14003de0a:	call   0x140033594
   14003de0f:	mov    rcx,QWORD PTR [rbx+0x60]
   14003de13:	call   0x140033594
   14003de18:	mov    rcx,QWORD PTR [rbx+0x68]
   14003de1c:	call   0x140033594
   14003de21:	mov    rcx,QWORD PTR [rbx+0x38]
   14003de25:	call   0x140033594
   14003de2a:	mov    rcx,QWORD PTR [rbx+0x70]
   14003de2e:	call   0x140033594
   14003de33:	mov    rcx,QWORD PTR [rbx+0x78]
   14003de37:	call   0x140033594
   14003de3c:	mov    rcx,QWORD PTR [rbx+0x80]
   14003de43:	call   0x140033594
   14003de48:	mov    rcx,QWORD PTR [rbx+0x88]
   14003de4f:	call   0x140033594
   14003de54:	mov    rcx,QWORD PTR [rbx+0x90]
   14003de5b:	call   0x140033594
   14003de60:	mov    rcx,QWORD PTR [rbx+0x98]
   14003de67:	call   0x140033594
   14003de6c:	mov    rcx,QWORD PTR [rbx+0xa0]
   14003de73:	call   0x140033594
   14003de78:	mov    rcx,QWORD PTR [rbx+0xa8]
   14003de7f:	call   0x140033594
   14003de84:	mov    rcx,QWORD PTR [rbx+0xb0]
   14003de8b:	call   0x140033594
   14003de90:	mov    rcx,QWORD PTR [rbx+0xb8]
   14003de97:	call   0x140033594
   14003de9c:	mov    rcx,QWORD PTR [rbx+0xc0]
   14003dea3:	call   0x140033594
   14003dea8:	mov    rcx,QWORD PTR [rbx+0xc8]
   14003deaf:	call   0x140033594
   14003deb4:	mov    rcx,QWORD PTR [rbx+0xd0]
   14003debb:	call   0x140033594
   14003dec0:	mov    rcx,QWORD PTR [rbx+0xd8]
   14003dec7:	call   0x140033594
   14003decc:	mov    rcx,QWORD PTR [rbx+0xe0]
   14003ded3:	call   0x140033594
   14003ded8:	mov    rcx,QWORD PTR [rbx+0xe8]
   14003dedf:	call   0x140033594
   14003dee4:	mov    rcx,QWORD PTR [rbx+0xf0]
   14003deeb:	call   0x140033594
   14003def0:	mov    rcx,QWORD PTR [rbx+0xf8]
   14003def7:	call   0x140033594
   14003defc:	mov    rcx,QWORD PTR [rbx+0x100]
   14003df03:	call   0x140033594
   14003df08:	mov    rcx,QWORD PTR [rbx+0x108]
   14003df0f:	call   0x140033594
   14003df14:	mov    rcx,QWORD PTR [rbx+0x110]
   14003df1b:	call   0x140033594
   14003df20:	mov    rcx,QWORD PTR [rbx+0x118]
   14003df27:	call   0x140033594
   14003df2c:	mov    rcx,QWORD PTR [rbx+0x120]
   14003df33:	call   0x140033594
   14003df38:	mov    rcx,QWORD PTR [rbx+0x128]
   14003df3f:	call   0x140033594
   14003df44:	mov    rcx,QWORD PTR [rbx+0x130]
   14003df4b:	call   0x140033594
   14003df50:	mov    rcx,QWORD PTR [rbx+0x138]
   14003df57:	call   0x140033594
   14003df5c:	mov    rcx,QWORD PTR [rbx+0x140]
   14003df63:	call   0x140033594
   14003df68:	mov    rcx,QWORD PTR [rbx+0x148]
   14003df6f:	call   0x140033594
   14003df74:	mov    rcx,QWORD PTR [rbx+0x150]
   14003df7b:	call   0x140033594
   14003df80:	mov    rcx,QWORD PTR [rbx+0x170]
   14003df87:	call   0x140033594
   14003df8c:	mov    rcx,QWORD PTR [rbx+0x178]
   14003df93:	call   0x140033594
   14003df98:	mov    rcx,QWORD PTR [rbx+0x180]
   14003df9f:	call   0x140033594
   14003dfa4:	mov    rcx,QWORD PTR [rbx+0x188]
   14003dfab:	call   0x140033594
   14003dfb0:	mov    rcx,QWORD PTR [rbx+0x190]
   14003dfb7:	call   0x140033594
   14003dfbc:	mov    rcx,QWORD PTR [rbx+0x198]
   14003dfc3:	call   0x140033594
   14003dfc8:	mov    rcx,QWORD PTR [rbx+0x168]
   14003dfcf:	call   0x140033594
   14003dfd4:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14003dfdb:	call   0x140033594
   14003dfe0:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14003dfe7:	call   0x140033594
   14003dfec:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14003dff3:	call   0x140033594
   14003dff8:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14003dfff:	call   0x140033594
   14003e004:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14003e00b:	call   0x140033594
   14003e010:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14003e017:	call   0x140033594
   14003e01c:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14003e023:	call   0x140033594
   14003e028:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14003e02f:	call   0x140033594
   14003e034:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14003e03b:	call   0x140033594
   14003e040:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14003e047:	call   0x140033594
   14003e04c:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14003e053:	call   0x140033594
   14003e058:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14003e05f:	call   0x140033594
   14003e064:	mov    rcx,QWORD PTR [rbx+0x200]
   14003e06b:	call   0x140033594
   14003e070:	mov    rcx,QWORD PTR [rbx+0x208]
   14003e077:	call   0x140033594
   14003e07c:	mov    rcx,QWORD PTR [rbx+0x210]
   14003e083:	call   0x140033594
   14003e088:	mov    rcx,QWORD PTR [rbx+0x218]
   14003e08f:	call   0x140033594
   14003e094:	mov    rcx,QWORD PTR [rbx+0x220]
   14003e09b:	call   0x140033594
   14003e0a0:	mov    rcx,QWORD PTR [rbx+0x228]
   14003e0a7:	call   0x140033594
   14003e0ac:	mov    rcx,QWORD PTR [rbx+0x230]
   14003e0b3:	call   0x140033594
   14003e0b8:	mov    rcx,QWORD PTR [rbx+0x238]
   14003e0bf:	call   0x140033594
   14003e0c4:	mov    rcx,QWORD PTR [rbx+0x240]
   14003e0cb:	call   0x140033594
   14003e0d0:	mov    rcx,QWORD PTR [rbx+0x248]
   14003e0d7:	call   0x140033594
   14003e0dc:	mov    rcx,QWORD PTR [rbx+0x250]
   14003e0e3:	call   0x140033594
   14003e0e8:	mov    rcx,QWORD PTR [rbx+0x258]
   14003e0ef:	call   0x140033594
   14003e0f4:	mov    rcx,QWORD PTR [rbx+0x260]
   14003e0fb:	call   0x140033594
   14003e100:	mov    rcx,QWORD PTR [rbx+0x268]
   14003e107:	call   0x140033594
   14003e10c:	mov    rcx,QWORD PTR [rbx+0x270]
   14003e113:	call   0x140033594
   14003e118:	mov    rcx,QWORD PTR [rbx+0x278]
   14003e11f:	call   0x140033594
   14003e124:	mov    rcx,QWORD PTR [rbx+0x280]
   14003e12b:	call   0x140033594
   14003e130:	mov    rcx,QWORD PTR [rbx+0x288]
   14003e137:	call   0x140033594
   14003e13c:	mov    rcx,QWORD PTR [rbx+0x290]
   14003e143:	call   0x140033594
   14003e148:	mov    rcx,QWORD PTR [rbx+0x298]
   14003e14f:	call   0x140033594
   14003e154:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14003e15b:	call   0x140033594
   14003e160:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14003e167:	call   0x140033594
   14003e16c:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14003e173:	call   0x140033594
   14003e178:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14003e17f:	call   0x140033594
   14003e184:	add    rsp,0x20
   14003e188:	pop    rbx
   14003e189:	ret    
   14003e18a:	int3   
   14003e18b:	int3   
   14003e18c:	test   rcx,rcx
   14003e18f:	je     0x14003e1f7
   14003e191:	push   rbx
   14003e192:	sub    rsp,0x20
   14003e196:	mov    rbx,rcx
   14003e199:	mov    rcx,QWORD PTR [rcx]
   14003e19c:	cmp    rcx,QWORD PTR [rip+0x481fd]        # 0x1400863a0
   14003e1a3:	je     0x14003e1aa
   14003e1a5:	call   0x140033594
   14003e1aa:	mov    rcx,QWORD PTR [rbx+0x8]
   14003e1ae:	cmp    rcx,QWORD PTR [rip+0x481f3]        # 0x1400863a8
   14003e1b5:	je     0x14003e1bc
   14003e1b7:	call   0x140033594
   14003e1bc:	mov    rcx,QWORD PTR [rbx+0x10]
   14003e1c0:	cmp    rcx,QWORD PTR [rip+0x481e9]        # 0x1400863b0
   14003e1c7:	je     0x14003e1ce
   14003e1c9:	call   0x140033594
   14003e1ce:	mov    rcx,QWORD PTR [rbx+0x58]
   14003e1d2:	cmp    rcx,QWORD PTR [rip+0x4821f]        # 0x1400863f8
   14003e1d9:	je     0x14003e1e0
   14003e1db:	call   0x140033594
   14003e1e0:	mov    rcx,QWORD PTR [rbx+0x60]
   14003e1e4:	cmp    rcx,QWORD PTR [rip+0x48215]        # 0x140086400
   14003e1eb:	je     0x14003e1f2
   14003e1ed:	call   0x140033594
   14003e1f2:	add    rsp,0x20
   14003e1f6:	pop    rbx
   14003e1f7:	ret    
   14003e1f8:	test   rcx,rcx
   14003e1fb:	je     0x14003e301
   14003e201:	push   rbx
   14003e202:	sub    rsp,0x20
   14003e206:	mov    rbx,rcx
   14003e209:	mov    rcx,QWORD PTR [rcx+0x18]
   14003e20d:	cmp    rcx,QWORD PTR [rip+0x481a4]        # 0x1400863b8
   14003e214:	je     0x14003e21b
   14003e216:	call   0x140033594
   14003e21b:	mov    rcx,QWORD PTR [rbx+0x20]
   14003e21f:	cmp    rcx,QWORD PTR [rip+0x4819a]        # 0x1400863c0
   14003e226:	je     0x14003e22d
   14003e228:	call   0x140033594
   14003e22d:	mov    rcx,QWORD PTR [rbx+0x28]
   14003e231:	cmp    rcx,QWORD PTR [rip+0x48190]        # 0x1400863c8
   14003e238:	je     0x14003e23f
   14003e23a:	call   0x140033594
   14003e23f:	mov    rcx,QWORD PTR [rbx+0x30]
   14003e243:	cmp    rcx,QWORD PTR [rip+0x48186]        # 0x1400863d0
   14003e24a:	je     0x14003e251
   14003e24c:	call   0x140033594
   14003e251:	mov    rcx,QWORD PTR [rbx+0x38]
   14003e255:	cmp    rcx,QWORD PTR [rip+0x4817c]        # 0x1400863d8
   14003e25c:	je     0x14003e263
   14003e25e:	call   0x140033594
   14003e263:	mov    rcx,QWORD PTR [rbx+0x40]
   14003e267:	cmp    rcx,QWORD PTR [rip+0x48172]        # 0x1400863e0
   14003e26e:	je     0x14003e275
   14003e270:	call   0x140033594
   14003e275:	mov    rcx,QWORD PTR [rbx+0x48]
   14003e279:	cmp    rcx,QWORD PTR [rip+0x48168]        # 0x1400863e8
   14003e280:	je     0x14003e287
   14003e282:	call   0x140033594
   14003e287:	mov    rcx,QWORD PTR [rbx+0x68]
   14003e28b:	cmp    rcx,QWORD PTR [rip+0x48176]        # 0x140086408
   14003e292:	je     0x14003e299
   14003e294:	call   0x140033594
   14003e299:	mov    rcx,QWORD PTR [rbx+0x70]
   14003e29d:	cmp    rcx,QWORD PTR [rip+0x4816c]        # 0x140086410
   14003e2a4:	je     0x14003e2ab
   14003e2a6:	call   0x140033594
   14003e2ab:	mov    rcx,QWORD PTR [rbx+0x78]
   14003e2af:	cmp    rcx,QWORD PTR [rip+0x48162]        # 0x140086418
   14003e2b6:	je     0x14003e2bd
   14003e2b8:	call   0x140033594
   14003e2bd:	mov    rcx,QWORD PTR [rbx+0x80]
   14003e2c4:	cmp    rcx,QWORD PTR [rip+0x48155]        # 0x140086420
   14003e2cb:	je     0x14003e2d2
   14003e2cd:	call   0x140033594
   14003e2d2:	mov    rcx,QWORD PTR [rbx+0x88]
   14003e2d9:	cmp    rcx,QWORD PTR [rip+0x48148]        # 0x140086428
   14003e2e0:	je     0x14003e2e7
   14003e2e2:	call   0x140033594
   14003e2e7:	mov    rcx,QWORD PTR [rbx+0x90]
   14003e2ee:	cmp    rcx,QWORD PTR [rip+0x4813b]        # 0x140086430
   14003e2f5:	je     0x14003e2fc
   14003e2f7:	call   0x140033594
   14003e2fc:	add    rsp,0x20
   14003e300:	pop    rbx
   14003e301:	ret    
   14003e302:	int3   
   14003e303:	int3   
   14003e304:	int3   
   14003e305:	int3   
   14003e306:	int3   
   14003e307:	int3   
   14003e308:	int3   
   14003e309:	int3   
   14003e30a:	int3   
   14003e30b:	int3   
   14003e30c:	int3   
   14003e30d:	int3   
   14003e30e:	int3   
   14003e30f:	int3   
   14003e310:	int3   
   14003e311:	int3   
   14003e312:	int3   
   14003e313:	int3   
   14003e314:	int3   
   14003e315:	int3   
   14003e316:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003e320:	sub    rdx,rcx
   14003e323:	cmp    r8,0x8
   14003e327:	jb     0x14003e34b
   14003e329:	test   cl,0x7
   14003e32c:	je     0x14003e342
   14003e32e:	xchg   ax,ax
   14003e330:	mov    al,BYTE PTR [rcx]
   14003e332:	cmp    al,BYTE PTR [rdx+rcx*1]
   14003e335:	jne    0x14003e363
   14003e337:	inc    rcx
   14003e33a:	dec    r8
   14003e33d:	test   cl,0x7
   14003e340:	jne    0x14003e330
   14003e342:	mov    r9,r8
   14003e345:	shr    r9,0x3
   14003e349:	jne    0x14003e36a
   14003e34b:	test   r8,r8
   14003e34e:	je     0x14003e35f
   14003e350:	mov    al,BYTE PTR [rcx]
   14003e352:	cmp    al,BYTE PTR [rdx+rcx*1]
   14003e355:	jne    0x14003e363
   14003e357:	inc    rcx
   14003e35a:	dec    r8
   14003e35d:	jne    0x14003e350
   14003e35f:	xor    rax,rax
   14003e362:	ret    
   14003e363:	sbb    eax,eax
   14003e365:	sbb    eax,0xffffffff
   14003e368:	ret    
   14003e369:	nop
   14003e36a:	shr    r9,0x2
   14003e36e:	je     0x14003e3a7
   14003e370:	mov    rax,QWORD PTR [rcx]
   14003e373:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14003e377:	jne    0x14003e3d4
   14003e379:	mov    rax,QWORD PTR [rcx+0x8]
   14003e37d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14003e382:	jne    0x14003e3d0
   14003e384:	mov    rax,QWORD PTR [rcx+0x10]
   14003e388:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14003e38d:	jne    0x14003e3cc
   14003e38f:	mov    rax,QWORD PTR [rcx+0x18]
   14003e393:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14003e398:	jne    0x14003e3c8
   14003e39a:	add    rcx,0x20
   14003e39e:	dec    r9
   14003e3a1:	jne    0x14003e370
   14003e3a3:	and    r8,0x1f
   14003e3a7:	mov    r9,r8
   14003e3aa:	shr    r9,0x3
   14003e3ae:	je     0x14003e34b
   14003e3b0:	mov    rax,QWORD PTR [rcx]
   14003e3b3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14003e3b7:	jne    0x14003e3d4
   14003e3b9:	add    rcx,0x8
   14003e3bd:	dec    r9
   14003e3c0:	jne    0x14003e3b0
   14003e3c2:	and    r8,0x7
   14003e3c6:	jmp    0x14003e34b
   14003e3c8:	add    rcx,0x8
   14003e3cc:	add    rcx,0x8
   14003e3d0:	add    rcx,0x8
   14003e3d4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14003e3d8:	bswap  rax
   14003e3db:	bswap  rcx
   14003e3de:	cmp    rax,rcx
   14003e3e1:	sbb    eax,eax
   14003e3e3:	sbb    eax,0xffffffff
   14003e3e6:	ret    
   14003e3e7:	int3   
   14003e3e8:	mov    QWORD PTR [rsp+0x8],rbx
   14003e3ed:	push   rdi
   14003e3ee:	sub    rsp,0x20
   14003e3f2:	movsxd rbx,ecx
   14003e3f5:	mov    edi,r8d
   14003e3f8:	mov    QWORD PTR [rsp+0x38],rdx
   14003e3fd:	mov    ecx,ebx
   14003e3ff:	call   0x14003f978
   14003e404:	cmp    rax,0xffffffffffffffff
   14003e408:	jne    0x14003e41b
   14003e40a:	call   0x140036858
   14003e40f:	mov    DWORD PTR [rax],0x9
   14003e415:	or     rax,0xffffffffffffffff
   14003e419:	jmp    0x14003e472
   14003e41b:	mov    edx,DWORD PTR [rsp+0x38]
   14003e41f:	lea    r8,[rsp+0x3c]
   14003e424:	mov    r9d,edi
   14003e427:	mov    rcx,rax
   14003e42a:	call   QWORD PTR [rip+0x29dc8]        # 0x1400681f8
   14003e430:	mov    DWORD PTR [rsp+0x38],eax
   14003e434:	cmp    eax,0xffffffff
   14003e437:	jne    0x14003e44c
   14003e439:	call   QWORD PTR [rip+0x29f81]        # 0x1400683c0
   14003e43f:	test   eax,eax
   14003e441:	je     0x14003e44c
   14003e443:	mov    ecx,eax
   14003e445:	call   0x140036898
   14003e44a:	jmp    0x14003e415
   14003e44c:	mov    rcx,rbx
   14003e44f:	mov    rax,rbx
   14003e452:	lea    rdx,[rip+0x4d947]        # 0x14008bda0
   14003e459:	sar    rax,0x5
   14003e45d:	and    ecx,0x1f
   14003e460:	mov    rax,QWORD PTR [rdx+rax*8]
   14003e464:	imul   rcx,rcx,0x58
   14003e468:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14003e46d:	mov    rax,QWORD PTR [rsp+0x38]
   14003e472:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e477:	add    rsp,0x20
   14003e47b:	pop    rdi
   14003e47c:	ret    
   14003e47d:	int3   
   14003e47e:	int3   
   14003e47f:	int3   
   14003e480:	mov    QWORD PTR [rsp+0x10],rbx
   14003e485:	mov    DWORD PTR [rsp+0x8],ecx
   14003e489:	push   rsi
   14003e48a:	push   rdi
   14003e48b:	push   r12
   14003e48d:	push   r13
   14003e48f:	push   r14
   14003e491:	sub    rsp,0x20
   14003e495:	mov    esi,r8d
   14003e498:	mov    r12,rdx
   14003e49b:	movsxd rdi,ecx
   14003e49e:	cmp    edi,0xfffffffe
   14003e4a1:	jne    0x14003e4bb
   14003e4a3:	call   0x140036878
   14003e4a8:	and    DWORD PTR [rax],0x0
   14003e4ab:	call   0x140036858
   14003e4b0:	mov    DWORD PTR [rax],0x9
   14003e4b6:	jmp    0x14003e54d
   14003e4bb:	test   ecx,ecx
   14003e4bd:	js     0x14003e535
   14003e4bf:	cmp    edi,DWORD PTR [rip+0x4d8bf]        # 0x14008bd84
   14003e4c5:	jae    0x14003e535
   14003e4c7:	mov    rbx,rdi
   14003e4ca:	mov    r13,rdi
   14003e4cd:	sar    r13,0x5
   14003e4d1:	lea    r14,[rip+0x4d8c8]        # 0x14008bda0
   14003e4d8:	and    ebx,0x1f
   14003e4db:	imul   rbx,rbx,0x58
   14003e4df:	mov    rax,QWORD PTR [r14+r13*8]
   14003e4e3:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14003e4e8:	and    ecx,0x1
   14003e4eb:	je     0x14003e535
   14003e4ed:	mov    ecx,edi
   14003e4ef:	call   0x14003f9ec
   14003e4f4:	nop
   14003e4f5:	mov    rax,QWORD PTR [r14+r13*8]
   14003e4f9:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003e4fe:	je     0x14003e512
   14003e500:	mov    r8d,esi
   14003e503:	mov    rdx,r12
   14003e506:	mov    ecx,edi
   14003e508:	call   0x14003e3e8
   14003e50d:	mov    rbx,rax
   14003e510:	jmp    0x14003e529
   14003e512:	call   0x140036858
   14003e517:	mov    DWORD PTR [rax],0x9
   14003e51d:	call   0x140036878
   14003e522:	and    DWORD PTR [rax],0x0
   14003e525:	or     rbx,0xffffffffffffffff
   14003e529:	mov    ecx,edi
   14003e52b:	call   0x14003fa94
   14003e530:	mov    rax,rbx
   14003e533:	jmp    0x14003e551
   14003e535:	call   0x140036878
   14003e53a:	and    DWORD PTR [rax],0x0
   14003e53d:	call   0x140036858
   14003e542:	mov    DWORD PTR [rax],0x9
   14003e548:	call   0x1400367f0
   14003e54d:	or     rax,0xffffffffffffffff
   14003e551:	mov    rbx,QWORD PTR [rsp+0x58]
   14003e556:	add    rsp,0x20
   14003e55a:	pop    r14
   14003e55c:	pop    r13
   14003e55e:	pop    r12
   14003e560:	pop    rdi
   14003e561:	pop    rsi
   14003e562:	ret    
   14003e563:	int3   
   14003e564:	rex push rbx
   14003e566:	sub    rsp,0x20
   14003e56a:	inc    DWORD PTR [rip+0x4bc48]        # 0x14008a1b8
   14003e570:	mov    rbx,rcx
   14003e573:	mov    ecx,0x1000
   14003e578:	call   0x140039ea0
   14003e57d:	mov    QWORD PTR [rbx+0x10],rax
   14003e581:	test   rax,rax
   14003e584:	je     0x14003e593
   14003e586:	or     DWORD PTR [rbx+0x18],0x8
   14003e58a:	mov    DWORD PTR [rbx+0x24],0x1000
   14003e591:	jmp    0x14003e5a6
   14003e593:	or     DWORD PTR [rbx+0x18],0x4
   14003e597:	lea    rax,[rbx+0x20]
   14003e59b:	mov    DWORD PTR [rbx+0x24],0x2
   14003e5a2:	mov    QWORD PTR [rbx+0x10],rax
   14003e5a6:	mov    rax,QWORD PTR [rbx+0x10]
   14003e5aa:	and    DWORD PTR [rbx+0x8],0x0
   14003e5ae:	mov    QWORD PTR [rbx],rax
   14003e5b1:	add    rsp,0x20
   14003e5b5:	pop    rbx
   14003e5b6:	ret    
   14003e5b7:	int3   
   14003e5b8:	sub    rsp,0x28
   14003e5bc:	cmp    ecx,0xfffffffe
   14003e5bf:	jne    0x14003e5ce
   14003e5c1:	call   0x140036858
   14003e5c6:	mov    DWORD PTR [rax],0x9
   14003e5cc:	jmp    0x14003e610
   14003e5ce:	test   ecx,ecx
   14003e5d0:	js     0x14003e600
   14003e5d2:	cmp    ecx,DWORD PTR [rip+0x4d7ac]        # 0x14008bd84
   14003e5d8:	jae    0x14003e600
   14003e5da:	movsxd rcx,ecx
   14003e5dd:	lea    rdx,[rip+0x4d7bc]        # 0x14008bda0
   14003e5e4:	mov    rax,rcx
   14003e5e7:	and    ecx,0x1f
   14003e5ea:	sar    rax,0x5
   14003e5ee:	imul   rcx,rcx,0x58
   14003e5f2:	mov    rax,QWORD PTR [rdx+rax*8]
   14003e5f6:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14003e5fb:	and    eax,0x40
   14003e5fe:	jmp    0x14003e612
   14003e600:	call   0x140036858
   14003e605:	mov    DWORD PTR [rax],0x9
   14003e60b:	call   0x1400367f0
   14003e610:	xor    eax,eax
   14003e612:	add    rsp,0x28
   14003e616:	ret    
   14003e617:	int3   
   14003e618:	mov    QWORD PTR [rsp+0x8],rbx
   14003e61d:	mov    WORD PTR [rsp+0x20],r9w
   14003e623:	push   rbp
   14003e624:	push   rsi
   14003e625:	push   rdi
   14003e626:	mov    rbp,rsp
   14003e629:	sub    rsp,0x60
   14003e62d:	mov    rdi,r8
   14003e630:	mov    rsi,rdx
   14003e633:	mov    rbx,rcx
   14003e636:	test   rdx,rdx
   14003e639:	jne    0x14003e64e
   14003e63b:	test   r8,r8
   14003e63e:	je     0x14003e64e
   14003e640:	test   rcx,rcx
   14003e643:	je     0x14003e647
   14003e645:	and    DWORD PTR [rcx],edx
   14003e647:	xor    eax,eax
   14003e649:	jmp    0x14003e6d8
   14003e64e:	test   rcx,rcx
   14003e651:	je     0x14003e656
   14003e653:	or     DWORD PTR [rcx],0xffffffff
   14003e656:	cmp    r8,0x7fffffff
   14003e65d:	jbe    0x14003e674
   14003e65f:	call   0x140036858
   14003e664:	mov    ebx,0x16
   14003e669:	mov    DWORD PTR [rax],ebx
   14003e66b:	call   0x1400367f0
   14003e670:	mov    eax,ebx
   14003e672:	jmp    0x14003e6d8
   14003e674:	mov    rdx,QWORD PTR [rbp+0x40]
   14003e678:	lea    rcx,[rbp-0x20]
   14003e67c:	call   0x14003370c
   14003e681:	mov    r11,QWORD PTR [rbp-0x20]
   14003e685:	cmp    DWORD PTR [r11+0x14],0x0
   14003e68a:	jne    0x14003e742
   14003e690:	movzx  eax,WORD PTR [rbp+0x38]
   14003e694:	mov    ecx,0xff
   14003e699:	cmp    ax,cx
   14003e69c:	jbe    0x14003e6e8
   14003e69e:	test   rsi,rsi
   14003e6a1:	je     0x14003e6b5
   14003e6a3:	test   rdi,rdi
   14003e6a6:	je     0x14003e6b5
   14003e6a8:	mov    r8,rdi
   14003e6ab:	xor    edx,edx
   14003e6ad:	mov    rcx,rsi
   14003e6b0:	call   0x140036dc0
   14003e6b5:	call   0x140036858
   14003e6ba:	mov    DWORD PTR [rax],0x2a
   14003e6c0:	call   0x140036858
   14003e6c5:	cmp    BYTE PTR [rbp-0x8],0x0
   14003e6c9:	mov    eax,DWORD PTR [rax]
   14003e6cb:	je     0x14003e6d8
   14003e6cd:	mov    rcx,QWORD PTR [rbp-0x10]
   14003e6d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003e6d8:	mov    rbx,QWORD PTR [rsp+0x80]
   14003e6e0:	add    rsp,0x60
   14003e6e4:	pop    rdi
   14003e6e5:	pop    rsi
   14003e6e6:	pop    rbp
   14003e6e7:	ret    
   14003e6e8:	test   rsi,rsi
   14003e6eb:	je     0x14003e71d
   14003e6ed:	test   rdi,rdi
   14003e6f0:	jne    0x14003e71b
   14003e6f2:	call   0x140036858
   14003e6f7:	lea    ebx,[rdi+0x22]
   14003e6fa:	mov    DWORD PTR [rax],ebx
   14003e6fc:	call   0x1400367f0
   14003e701:	cmp    BYTE PTR [rbp-0x8],dil
   14003e705:	je     0x14003e670
   14003e70b:	mov    rcx,QWORD PTR [rbp-0x10]
   14003e70f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003e716:	jmp    0x14003e670
   14003e71b:	mov    BYTE PTR [rsi],al
   14003e71d:	test   rbx,rbx
   14003e720:	je     0x14003e728
   14003e722:	mov    DWORD PTR [rbx],0x1
   14003e728:	cmp    BYTE PTR [rbp-0x8],0x0
   14003e72c:	je     0x14003e647
   14003e732:	mov    rax,QWORD PTR [rbp-0x10]
   14003e736:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003e73d:	jmp    0x14003e647
   14003e742:	and    DWORD PTR [rbp+0x28],0x0
   14003e746:	mov    ecx,DWORD PTR [r11+0x4]
   14003e74a:	lea    rax,[rbp+0x28]
   14003e74e:	mov    QWORD PTR [rsp+0x38],rax
   14003e753:	and    QWORD PTR [rsp+0x30],0x0
   14003e759:	lea    r8,[rbp+0x38]
   14003e75d:	mov    r9d,0x1
   14003e763:	xor    edx,edx
   14003e765:	mov    DWORD PTR [rsp+0x28],edi
   14003e769:	mov    QWORD PTR [rsp+0x20],rsi
   14003e76e:	call   QWORD PTR [rip+0x29c64]        # 0x1400683d8
   14003e774:	test   eax,eax
   14003e776:	je     0x14003e78b
   14003e778:	cmp    DWORD PTR [rbp+0x28],0x0
   14003e77c:	jne    0x14003e6b5
   14003e782:	test   rbx,rbx
   14003e785:	je     0x14003e728
   14003e787:	mov    DWORD PTR [rbx],eax
   14003e789:	jmp    0x14003e728
   14003e78b:	call   QWORD PTR [rip+0x29c2f]        # 0x1400683c0
   14003e791:	cmp    eax,0x7a
   14003e794:	jne    0x14003e6b5
   14003e79a:	test   rsi,rsi
   14003e79d:	je     0x14003e7b1
   14003e79f:	test   rdi,rdi
   14003e7a2:	je     0x14003e7b1
   14003e7a4:	mov    r8,rdi
   14003e7a7:	xor    edx,edx
   14003e7a9:	mov    rcx,rsi
   14003e7ac:	call   0x140036dc0
   14003e7b1:	call   0x140036858
   14003e7b6:	mov    ebx,0x22
   14003e7bb:	mov    DWORD PTR [rax],ebx
   14003e7bd:	call   0x1400367f0
   14003e7c2:	cmp    BYTE PTR [rbp-0x8],0x0
   14003e7c6:	je     0x14003e670
   14003e7cc:	mov    rax,QWORD PTR [rbp-0x10]
   14003e7d0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003e7d7:	jmp    0x14003e670
   14003e7dc:	sub    rsp,0x38
   14003e7e0:	and    QWORD PTR [rsp+0x20],0x0
   14003e7e6:	call   0x14003e618
   14003e7eb:	add    rsp,0x38
   14003e7ef:	ret    
   14003e7f0:	mov    WORD PTR [rsp+0x8],cx
   14003e7f5:	push   rbx
   14003e7f6:	sub    rsp,0x20
   14003e7fa:	mov    eax,0xffff
   14003e7ff:	movzx  ebx,dx
   14003e802:	cmp    cx,ax
   14003e805:	jne    0x14003e80b
   14003e807:	xor    eax,eax
   14003e809:	jmp    0x14003e850
   14003e80b:	mov    eax,0x100
   14003e810:	cmp    cx,ax
   14003e813:	jae    0x14003e825
   14003e815:	mov    rax,QWORD PTR [rip+0x47c24]        # 0x140086440
   14003e81c:	movzx  ecx,cx
   14003e81f:	movzx  eax,WORD PTR [rax+rcx*2]
   14003e823:	jmp    0x14003e84b
   14003e825:	mov    ecx,0x1
   14003e82a:	lea    r9,[rsp+0x40]
   14003e82f:	lea    rdx,[rsp+0x30]
   14003e834:	mov    r8d,ecx
   14003e837:	call   QWORD PTR [rip+0x29b33]        # 0x140068370
   14003e83d:	xor    ecx,ecx
   14003e83f:	test   eax,eax
   14003e841:	je     0x14003e848
   14003e843:	movzx  ecx,WORD PTR [rsp+0x40]
   14003e848:	movzx  eax,cx
   14003e84b:	movzx  ecx,bx
   14003e84e:	and    eax,ecx
   14003e850:	add    rsp,0x20
   14003e854:	pop    rbx
   14003e855:	ret    
   14003e856:	int3   
   14003e857:	int3   
   14003e858:	rex push rbx
   14003e85a:	push   rbp
   14003e85b:	push   rsi
   14003e85c:	push   rdi
   14003e85d:	push   r12
   14003e85f:	push   r13
   14003e861:	push   r14
   14003e863:	sub    rsp,0x50
   14003e867:	mov    rax,QWORD PTR [rip+0x4683a]        # 0x1400850a8
   14003e86e:	xor    rax,rsp
   14003e871:	mov    QWORD PTR [rsp+0x48],rax
   14003e876:	mov    ebp,r8d
   14003e879:	mov    r14,rdx
   14003e87c:	mov    r13,rcx
   14003e87f:	call   0x140037aac
   14003e884:	xor    ebx,ebx
   14003e886:	cmp    QWORD PTR [rip+0x4b9c3],rbx        # 0x14008a250
   14003e88d:	mov    rdi,rax
   14003e890:	jne    0x14003e96b
   14003e896:	lea    rcx,[rip+0x2c353]        # 0x14006abf0
   14003e89d:	call   QWORD PTR [rip+0x2999d]        # 0x140068240
   14003e8a3:	mov    rsi,rax
   14003e8a6:	test   rax,rax
   14003e8a9:	je     0x14003ea42
   14003e8af:	lea    rdx,[rip+0x2c32a]        # 0x14006abe0
   14003e8b6:	mov    rcx,rax
   14003e8b9:	call   QWORD PTR [rip+0x29859]        # 0x140068118
   14003e8bf:	test   rax,rax
   14003e8c2:	je     0x14003ea42
   14003e8c8:	mov    rcx,rax
   14003e8cb:	call   QWORD PTR [rip+0x29b8f]        # 0x140068460
   14003e8d1:	lea    rdx,[rip+0x2c2f8]        # 0x14006abd0
   14003e8d8:	mov    rcx,rsi
   14003e8db:	mov    QWORD PTR [rip+0x4b96e],rax        # 0x14008a250
   14003e8e2:	call   QWORD PTR [rip+0x29830]        # 0x140068118
   14003e8e8:	mov    rcx,rax
   14003e8eb:	call   QWORD PTR [rip+0x29b6f]        # 0x140068460
   14003e8f1:	lea    rdx,[rip+0x2c2c0]        # 0x14006abb8
   14003e8f8:	mov    rcx,rsi
   14003e8fb:	mov    QWORD PTR [rip+0x4b956],rax        # 0x14008a258
   14003e902:	call   QWORD PTR [rip+0x29810]        # 0x140068118
   14003e908:	mov    rcx,rax
   14003e90b:	call   QWORD PTR [rip+0x29b4f]        # 0x140068460
   14003e911:	lea    rdx,[rip+0x2c280]        # 0x14006ab98
   14003e918:	mov    rcx,rsi
   14003e91b:	mov    QWORD PTR [rip+0x4b93e],rax        # 0x14008a260
   14003e922:	call   QWORD PTR [rip+0x297f0]        # 0x140068118
   14003e928:	mov    rcx,rax
   14003e92b:	call   QWORD PTR [rip+0x29b2f]        # 0x140068460
   14003e931:	mov    r11,rax
   14003e934:	mov    QWORD PTR [rip+0x4b935],rax        # 0x14008a270
   14003e93b:	test   rax,rax
   14003e93e:	je     0x14003e962
   14003e940:	lea    rdx,[rip+0x2c239]        # 0x14006ab80
   14003e947:	mov    rcx,rsi
   14003e94a:	call   QWORD PTR [rip+0x297c8]        # 0x140068118
   14003e950:	mov    rcx,rax
   14003e953:	call   QWORD PTR [rip+0x29b07]        # 0x140068460
   14003e959:	mov    QWORD PTR [rip+0x4b908],rax        # 0x14008a268
   14003e960:	jmp    0x14003e972
   14003e962:	mov    rax,QWORD PTR [rip+0x4b8ff]        # 0x14008a268
   14003e969:	jmp    0x14003e979
   14003e96b:	mov    rax,QWORD PTR [rip+0x4b8f6]        # 0x14008a268
   14003e972:	mov    r11,QWORD PTR [rip+0x4b8f7]        # 0x14008a270
   14003e979:	cmp    rax,rdi
   14003e97c:	je     0x14003e9e0
   14003e97e:	cmp    r11,rdi
   14003e981:	je     0x14003e9e0
   14003e983:	mov    rcx,rax
   14003e986:	call   QWORD PTR [rip+0x29a04]        # 0x140068390
   14003e98c:	mov    rcx,QWORD PTR [rip+0x4b8dd]        # 0x14008a270
   14003e993:	mov    rsi,rax
   14003e996:	call   QWORD PTR [rip+0x299f4]        # 0x140068390
   14003e99c:	mov    r12,rax
   14003e99f:	test   rsi,rsi
   14003e9a2:	je     0x14003e9e0
   14003e9a4:	test   rax,rax
   14003e9a7:	je     0x14003e9e0
   14003e9a9:	call   rsi
   14003e9ab:	test   rax,rax
   14003e9ae:	je     0x14003e9da
   14003e9b0:	lea    rcx,[rsp+0x30]
   14003e9b5:	mov    r9d,0xc
   14003e9bb:	lea    r8,[rsp+0x38]
   14003e9c0:	mov    QWORD PTR [rsp+0x20],rcx
   14003e9c5:	lea    edx,[r9-0xb]
   14003e9c9:	mov    rcx,rax
   14003e9cc:	call   r12
   14003e9cf:	test   eax,eax
   14003e9d1:	je     0x14003e9da
   14003e9d3:	test   BYTE PTR [rsp+0x40],0x1
   14003e9d8:	jne    0x14003e9e0
   14003e9da:	bts    ebp,0x15
   14003e9de:	jmp    0x14003ea20
   14003e9e0:	mov    rcx,QWORD PTR [rip+0x4b871]        # 0x14008a258
   14003e9e7:	cmp    rcx,rdi
   14003e9ea:	je     0x14003ea20
   14003e9ec:	call   QWORD PTR [rip+0x2999e]        # 0x140068390
   14003e9f2:	test   rax,rax
   14003e9f5:	je     0x14003ea20
   14003e9f7:	call   rax
   14003e9f9:	mov    rbx,rax
   14003e9fc:	test   rax,rax
   14003e9ff:	je     0x14003ea20
   14003ea01:	mov    rcx,QWORD PTR [rip+0x4b858]        # 0x14008a260
   14003ea08:	cmp    rcx,rdi
   14003ea0b:	je     0x14003ea20
   14003ea0d:	call   QWORD PTR [rip+0x2997d]        # 0x140068390
   14003ea13:	test   rax,rax
   14003ea16:	je     0x14003ea20
   14003ea18:	mov    rcx,rbx
   14003ea1b:	call   rax
   14003ea1d:	mov    rbx,rax
   14003ea20:	mov    rcx,QWORD PTR [rip+0x4b829]        # 0x14008a250
   14003ea27:	call   QWORD PTR [rip+0x29963]        # 0x140068390
   14003ea2d:	test   rax,rax
   14003ea30:	je     0x14003ea42
   14003ea32:	mov    r9d,ebp
   14003ea35:	mov    r8,r14
   14003ea38:	mov    rdx,r13
   14003ea3b:	mov    rcx,rbx
   14003ea3e:	call   rax
   14003ea40:	jmp    0x14003ea44
   14003ea42:	xor    eax,eax
   14003ea44:	mov    rcx,QWORD PTR [rsp+0x48]
   14003ea49:	xor    rcx,rsp
   14003ea4c:	call   0x140032f00
   14003ea51:	add    rsp,0x50
   14003ea55:	pop    r14
   14003ea57:	pop    r13
   14003ea59:	pop    r12
   14003ea5b:	pop    rdi
   14003ea5c:	pop    rsi
   14003ea5d:	pop    rbp
   14003ea5e:	pop    rbx
   14003ea5f:	ret    
   14003ea60:	rex push rbx
   14003ea62:	sub    rsp,0x20
   14003ea66:	xor    r10d,r10d
   14003ea69:	mov    r9,rcx
   14003ea6c:	test   rcx,rcx
   14003ea6f:	je     0x14003ea7f
   14003ea71:	test   rdx,rdx
   14003ea74:	je     0x14003ea7f
   14003ea76:	test   r8,r8
   14003ea79:	jne    0x14003ea98
   14003ea7b:	mov    WORD PTR [rcx],r10w
   14003ea7f:	call   0x140036858
   14003ea84:	mov    ebx,0x16
   14003ea89:	mov    DWORD PTR [rax],ebx
   14003ea8b:	call   0x1400367f0
   14003ea90:	mov    eax,ebx
   14003ea92:	add    rsp,0x20
   14003ea96:	pop    rbx
   14003ea97:	ret    
   14003ea98:	cmp    WORD PTR [rcx],r10w
   14003ea9c:	je     0x14003eaa7
   14003ea9e:	add    rcx,0x2
   14003eaa2:	dec    rdx
   14003eaa5:	jne    0x14003ea98
   14003eaa7:	test   rdx,rdx
   14003eaaa:	jne    0x14003eab2
   14003eaac:	mov    WORD PTR [r9],r10w
   14003eab0:	jmp    0x14003ea7f
   14003eab2:	sub    rcx,r8
   14003eab5:	movzx  eax,WORD PTR [r8]
   14003eab9:	mov    WORD PTR [rcx+r8*1],ax
   14003eabe:	add    r8,0x2
   14003eac2:	test   ax,ax
   14003eac5:	je     0x14003eacc
   14003eac7:	dec    rdx
   14003eaca:	jne    0x14003eab5
   14003eacc:	test   rdx,rdx
   14003eacf:	jne    0x14003eae1
   14003ead1:	mov    WORD PTR [r9],r10w
   14003ead5:	call   0x140036858
   14003eada:	mov    ebx,0x22
   14003eadf:	jmp    0x14003ea89
   14003eae1:	xor    eax,eax
   14003eae3:	jmp    0x14003ea92
   14003eae5:	int3   
   14003eae6:	int3   
   14003eae7:	int3   
   14003eae8:	mov    rax,rcx
   14003eaeb:	movzx  edx,WORD PTR [rax]
   14003eaee:	add    rax,0x2
   14003eaf2:	test   dx,dx
   14003eaf5:	jne    0x14003eaeb
   14003eaf7:	sub    rax,rcx
   14003eafa:	sar    rax,1
   14003eafd:	dec    rax
   14003eb00:	ret    
   14003eb01:	int3   
   14003eb02:	int3   
   14003eb03:	int3   
   14003eb04:	sub    rsp,0x28
   14003eb08:	test   ecx,ecx
   14003eb0a:	js     0x14003eb2c
   14003eb0c:	cmp    ecx,0x2
   14003eb0f:	jle    0x14003eb1e
   14003eb11:	cmp    ecx,0x3
   14003eb14:	jne    0x14003eb2c
   14003eb16:	mov    eax,DWORD PTR [rip+0x4a714]        # 0x140089230
   14003eb1c:	jmp    0x14003eb3f
   14003eb1e:	mov    eax,DWORD PTR [rip+0x4a70c]        # 0x140089230
   14003eb24:	mov    DWORD PTR [rip+0x4a706],ecx        # 0x140089230
   14003eb2a:	jmp    0x14003eb3f
   14003eb2c:	call   0x140036858
   14003eb31:	mov    DWORD PTR [rax],0x16
   14003eb37:	call   0x1400367f0
   14003eb3c:	or     eax,0xffffffff
   14003eb3f:	add    rsp,0x28
   14003eb43:	ret    
   14003eb44:	mov    rax,rsp
   14003eb47:	mov    QWORD PTR [rax+0x8],rbx
   14003eb4b:	mov    QWORD PTR [rax+0x10],rsi
   14003eb4f:	mov    QWORD PTR [rax+0x18],rdi
   14003eb53:	mov    QWORD PTR [rax+0x20],r12
   14003eb57:	push   rbp
   14003eb58:	mov    rbp,rsp
   14003eb5b:	sub    rsp,0x50
   14003eb5f:	xor    r12d,r12d
   14003eb62:	mov    rsi,r8
   14003eb65:	mov    rdi,rdx
   14003eb68:	mov    rbx,rcx
   14003eb6b:	test   rdx,rdx
   14003eb6e:	je     0x14003eb83
   14003eb70:	test   r8,r8
   14003eb73:	je     0x14003eb83
   14003eb75:	cmp    BYTE PTR [rdx],r12b
   14003eb78:	jne    0x14003eb9f
   14003eb7a:	test   rcx,rcx
   14003eb7d:	je     0x14003eb83
   14003eb7f:	mov    WORD PTR [rcx],r12w
   14003eb83:	xor    eax,eax
   14003eb85:	mov    rbx,QWORD PTR [rsp+0x60]
   14003eb8a:	mov    rsi,QWORD PTR [rsp+0x68]
   14003eb8f:	mov    rdi,QWORD PTR [rsp+0x70]
   14003eb94:	mov    r12,QWORD PTR [rsp+0x78]
   14003eb99:	add    rsp,0x50
   14003eb9d:	pop    rbp
   14003eb9e:	ret    
   14003eb9f:	lea    rcx,[rbp-0x20]
   14003eba3:	mov    rdx,r9
   14003eba6:	call   0x14003370c
   14003ebab:	mov    r11,QWORD PTR [rbp-0x20]
   14003ebaf:	cmp    DWORD PTR [r11+0x14],r12d
   14003ebb3:	jne    0x14003ebd8
   14003ebb5:	test   rbx,rbx
   14003ebb8:	je     0x14003ebc0
   14003ebba:	movzx  eax,BYTE PTR [rdi]
   14003ebbd:	mov    WORD PTR [rbx],ax
   14003ebc0:	cmp    BYTE PTR [rbp-0x8],r12b
   14003ebc4:	je     0x14003ebd1
   14003ebc6:	mov    rax,QWORD PTR [rbp-0x10]
   14003ebca:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003ebd1:	mov    eax,0x1
   14003ebd6:	jmp    0x14003eb85
   14003ebd8:	movzx  ecx,BYTE PTR [rdi]
   14003ebdb:	lea    rdx,[rbp-0x20]
   14003ebdf:	call   0x1400399f4
   14003ebe4:	test   eax,eax
   14003ebe6:	je     0x14003ec83
   14003ebec:	mov    rcx,QWORD PTR [rbp-0x20]
   14003ebf0:	mov    r9d,DWORD PTR [rcx+0x10c]
   14003ebf7:	cmp    r9d,0x1
   14003ebfb:	jle    0x14003ec2d
   14003ebfd:	cmp    esi,r9d
   14003ec00:	jl     0x14003ec2d
   14003ec02:	mov    ecx,DWORD PTR [rcx+0x4]
   14003ec05:	mov    eax,r12d
   14003ec08:	test   rbx,rbx
   14003ec0b:	setne  al
   14003ec0e:	mov    r8,rdi
   14003ec11:	mov    edx,0x9
   14003ec16:	mov    DWORD PTR [rsp+0x28],eax
   14003ec1a:	mov    QWORD PTR [rsp+0x20],rbx
   14003ec1f:	call   QWORD PTR [rip+0x297ab]        # 0x1400683d0
   14003ec25:	mov    rcx,QWORD PTR [rbp-0x20]
   14003ec29:	test   eax,eax
   14003ec2b:	jne    0x14003ec3f
   14003ec2d:	movsxd rax,DWORD PTR [rcx+0x10c]
   14003ec34:	cmp    rsi,rax
   14003ec37:	jb     0x14003ec5f
   14003ec39:	cmp    BYTE PTR [rdi+0x1],r12b
   14003ec3d:	je     0x14003ec5f
   14003ec3f:	mov    eax,DWORD PTR [rcx+0x10c]
   14003ec45:	cmp    BYTE PTR [rbp-0x8],r12b
   14003ec49:	je     0x14003eb85
   14003ec4f:	mov    rcx,QWORD PTR [rbp-0x10]
   14003ec53:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003ec5a:	jmp    0x14003eb85
   14003ec5f:	call   0x140036858
   14003ec64:	mov    DWORD PTR [rax],0x2a
   14003ec6a:	cmp    BYTE PTR [rbp-0x8],r12b
   14003ec6e:	je     0x14003ec7b
   14003ec70:	mov    rax,QWORD PTR [rbp-0x10]
   14003ec74:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003ec7b:	or     eax,0xffffffff
   14003ec7e:	jmp    0x14003eb85
   14003ec83:	mov    eax,r12d
   14003ec86:	mov    r9d,0x1
   14003ec8c:	test   rbx,rbx
   14003ec8f:	setne  al
   14003ec92:	lea    edx,[r9+0x8]
   14003ec96:	mov    r8,rdi
   14003ec99:	mov    DWORD PTR [rsp+0x28],eax
   14003ec9d:	mov    rax,QWORD PTR [rbp-0x20]
   14003eca1:	mov    QWORD PTR [rsp+0x20],rbx
   14003eca6:	mov    ecx,DWORD PTR [rax+0x4]
   14003eca9:	call   QWORD PTR [rip+0x29721]        # 0x1400683d0
   14003ecaf:	test   eax,eax
   14003ecb1:	jne    0x14003ebc0
   14003ecb7:	jmp    0x14003ec5f
   14003ecb9:	int3   
   14003ecba:	int3   
   14003ecbb:	int3   
   14003ecbc:	xor    r9d,r9d
   14003ecbf:	jmp    0x14003eb44
   14003ecc4:	mov    ecx,0x2
   14003ecc9:	jmp    0x140035184
   14003ecce:	int3   
   14003eccf:	int3   
   14003ecd0:	mov    QWORD PTR [rsp+0x8],rbx
   14003ecd5:	mov    QWORD PTR [rsp+0x10],rsi
   14003ecda:	push   rdi
   14003ecdb:	sub    rsp,0x30
   14003ecdf:	xor    edi,edi
   14003ece1:	lea    ecx,[rdi+0x1]
   14003ece4:	call   0x14003a3a0
   14003ece9:	nop
   14003ecea:	lea    ebx,[rdi+0x3]
   14003eced:	mov    DWORD PTR [rsp+0x20],ebx
   14003ecf1:	cmp    ebx,DWORD PTR [rip+0x4d089]        # 0x14008bd80
   14003ecf7:	jge    0x14003ed5e
   14003ecf9:	movsxd rsi,ebx
   14003ecfc:	mov    rax,QWORD PTR [rip+0x4c06d]        # 0x14008ad70
   14003ed03:	cmp    QWORD PTR [rax+rsi*8],0x0
   14003ed08:	je     0x14003ed5a
   14003ed0a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003ed0e:	test   BYTE PTR [rcx+0x18],0x83
   14003ed12:	je     0x14003ed24
   14003ed14:	call   0x140035e70
   14003ed19:	cmp    eax,0xffffffff
   14003ed1c:	je     0x14003ed24
   14003ed1e:	inc    edi
   14003ed20:	mov    DWORD PTR [rsp+0x24],edi
   14003ed24:	cmp    ebx,0x14
   14003ed27:	jl     0x14003ed5a
   14003ed29:	mov    rax,QWORD PTR [rip+0x4c040]        # 0x14008ad70
   14003ed30:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003ed34:	add    rcx,0x30
   14003ed38:	call   QWORD PTR [rip+0x296d2]        # 0x140068410
   14003ed3e:	mov    rcx,QWORD PTR [rip+0x4c02b]        # 0x14008ad70
   14003ed45:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14003ed49:	call   0x140033594
   14003ed4e:	mov    r11,QWORD PTR [rip+0x4c01b]        # 0x14008ad70
   14003ed55:	and    QWORD PTR [r11+rsi*8],0x0
   14003ed5a:	inc    ebx
   14003ed5c:	jmp    0x14003eced
   14003ed5e:	mov    ecx,0x1
   14003ed63:	call   0x14003a2a0
   14003ed68:	mov    eax,edi
   14003ed6a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ed6f:	mov    rsi,QWORD PTR [rsp+0x48]
   14003ed74:	add    rsp,0x30
   14003ed78:	pop    rdi
   14003ed79:	ret    
   14003ed7a:	int3   
   14003ed7b:	int3   
   14003ed7c:	mov    QWORD PTR [rsp+0x10],rbx
   14003ed81:	mov    QWORD PTR [rsp+0x18],r8
   14003ed86:	mov    QWORD PTR [rsp+0x8],rcx
   14003ed8b:	push   rbp
   14003ed8c:	push   rsi
   14003ed8d:	push   rdi
   14003ed8e:	push   r12
   14003ed90:	push   r13
   14003ed92:	push   r14
   14003ed94:	push   r15
   14003ed96:	mov    rbp,rsp
   14003ed99:	sub    rsp,0x80
   14003eda0:	xor    edi,edi
   14003eda2:	mov    r13b,0x80
   14003eda5:	mov    esi,r9d
   14003eda8:	mov    rbx,rdx
   14003edab:	mov    DWORD PTR [rbp-0x18],0x18
   14003edb2:	lea    r12d,[rdi+0x1]
   14003edb6:	mov    DWORD PTR [rbp-0x28],edi
   14003edb9:	mov    BYTE PTR [rbp+0x58],dil
   14003edbd:	mov    QWORD PTR [rbp-0x10],rdi
   14003edc1:	test   r13b,r9b
   14003edc4:	je     0x14003edce
   14003edc6:	mov    DWORD PTR [rbp-0x8],edi
   14003edc9:	mov    r15b,0x10
   14003edcc:	jmp    0x14003edd5
   14003edce:	mov    DWORD PTR [rbp-0x8],r12d
   14003edd2:	mov    r15b,dil
   14003edd5:	lea    rcx,[rbp-0x28]
   14003edd9:	call   0x140041cbc
   14003edde:	test   eax,eax
   14003ede0:	jne    0x14003f50e
   14003ede6:	mov    eax,0x8000
   14003edeb:	test   eax,esi
   14003eded:	jne    0x14003edff
   14003edef:	test   esi,0x74000
   14003edf5:	jne    0x14003edfc
   14003edf7:	cmp    DWORD PTR [rbp-0x28],eax
   14003edfa:	je     0x14003edff
   14003edfc:	or     r15b,r13b
   14003edff:	mov    ecx,esi
   14003ee01:	mov    r9d,0x3
   14003ee07:	mov    eax,0xc0000000
   14003ee0c:	and    ecx,r9d
   14003ee0f:	mov    r8d,0x80000000
   14003ee15:	je     0x14003ee72
   14003ee17:	dec    ecx
   14003ee19:	je     0x14003ee5c
   14003ee1b:	dec    ecx
   14003ee1d:	je     0x14003ee57
   14003ee1f:	call   0x140036878
   14003ee24:	mov    DWORD PTR [rax],edi
   14003ee26:	or     DWORD PTR [rbx],0xffffffff
   14003ee29:	call   0x140036858
   14003ee2e:	mov    ebx,0x16
   14003ee33:	mov    DWORD PTR [rax],ebx
   14003ee35:	call   0x1400367f0
   14003ee3a:	mov    eax,ebx
   14003ee3c:	mov    rbx,QWORD PTR [rsp+0xc8]
   14003ee44:	add    rsp,0x80
   14003ee4b:	pop    r15
   14003ee4d:	pop    r14
   14003ee4f:	pop    r13
   14003ee51:	pop    r12
   14003ee53:	pop    rdi
   14003ee54:	pop    rsi
   14003ee55:	pop    rbp
   14003ee56:	ret    
   14003ee57:	mov    r14d,eax
   14003ee5a:	jmp    0x14003ee75
   14003ee5c:	test   sil,0x8
   14003ee60:	je     0x14003ee6a
   14003ee62:	test   esi,0x70000
   14003ee68:	jne    0x14003ee57
   14003ee6a:	mov    r14d,0x40000000
   14003ee70:	jmp    0x14003ee75
   14003ee72:	mov    r14d,r8d
   14003ee75:	mov    ecx,DWORD PTR [rbp+0x60]
   14003ee78:	mov    DWORD PTR [rbp-0x3c],r14d
   14003ee7c:	mov    r13d,0x2
   14003ee82:	sub    ecx,0x10
   14003ee85:	je     0x14003eeb4
   14003ee87:	sub    ecx,0x10
   14003ee8a:	je     0x14003eeaf
   14003ee8c:	sub    ecx,0x10
   14003ee8f:	je     0x14003eeaa
   14003ee91:	sub    ecx,0x10
   14003ee94:	je     0x14003eea5
   14003ee96:	cmp    ecx,0x40
   14003ee99:	jne    0x14003ee1f
   14003ee9b:	cmp    r14d,r8d
   14003ee9e:	mov    edx,edi
   14003eea0:	sete   dl
   14003eea3:	jmp    0x14003eeb6
   14003eea5:	mov    edx,r9d
   14003eea8:	jmp    0x14003eeb6
   14003eeaa:	mov    edx,r13d
   14003eead:	jmp    0x14003eeb6
   14003eeaf:	mov    edx,r12d
   14003eeb2:	jmp    0x14003eeb6
   14003eeb4:	mov    edx,edi
   14003eeb6:	mov    eax,esi
   14003eeb8:	mov    ecx,0x700
   14003eebd:	mov    DWORD PTR [rbp-0x38],edx
   14003eec0:	and    eax,ecx
   14003eec2:	mov    r8d,0x100
   14003eec8:	je     0x14003ef10
   14003eeca:	cmp    eax,r8d
   14003eecd:	je     0x14003ef08
   14003eecf:	cmp    eax,0x200
   14003eed4:	je     0x14003ef00
   14003eed6:	cmp    eax,0x300
   14003eedb:	je     0x14003eefb
   14003eedd:	cmp    eax,0x400
   14003eee2:	je     0x14003ef10
   14003eee4:	cmp    eax,0x500
   14003eee9:	je     0x14003ef13
   14003eeeb:	cmp    eax,0x600
   14003eef0:	je     0x14003ef00
   14003eef2:	cmp    eax,ecx
   14003eef4:	je     0x14003ef13
   14003eef6:	jmp    0x14003ee1f
   14003eefb:	mov    r12d,r13d
   14003eefe:	jmp    0x14003ef13
   14003ef00:	mov    r12d,0x5
   14003ef06:	jmp    0x14003ef13
   14003ef08:	mov    r12d,0x4
   14003ef0e:	jmp    0x14003ef13
   14003ef10:	mov    r12d,r9d
   14003ef13:	mov    ecx,0x80
   14003ef18:	mov    DWORD PTR [rbp-0x30],ecx
   14003ef1b:	test   r8d,esi
   14003ef1e:	je     0x14003ef36
   14003ef20:	mov    al,BYTE PTR [rip+0x4a2a2]        # 0x1400891c8
   14003ef26:	not    al
   14003ef28:	and    al,BYTE PTR [rbp+0x68]
   14003ef2b:	test   al,0x80
   14003ef2d:	lea    eax,[rcx-0x7f]
   14003ef30:	cmove  ecx,eax
   14003ef33:	mov    DWORD PTR [rbp-0x30],ecx
   14003ef36:	test   sil,0x40
   14003ef3a:	je     0x14003ef52
   14003ef3c:	bts    ecx,0x1a
   14003ef40:	bts    r14d,0x10
   14003ef45:	or     edx,0x4
   14003ef48:	mov    DWORD PTR [rbp-0x38],edx
   14003ef4b:	mov    DWORD PTR [rbp-0x30],ecx
   14003ef4e:	mov    DWORD PTR [rbp-0x3c],r14d
   14003ef52:	bt     esi,0xc
   14003ef56:	jae    0x14003ef5e
   14003ef58:	or     ecx,r8d
   14003ef5b:	mov    DWORD PTR [rbp-0x30],ecx
   14003ef5e:	test   sil,0x20
   14003ef62:	je     0x14003ef6a
   14003ef64:	bts    ecx,0x1b
   14003ef68:	jmp    0x14003ef74
   14003ef6a:	test   sil,0x10
   14003ef6e:	je     0x14003ef77
   14003ef70:	bts    ecx,0x1c
   14003ef74:	mov    DWORD PTR [rbp-0x30],ecx
   14003ef77:	call   0x14003fabc
   14003ef7c:	mov    DWORD PTR [rbx],eax
   14003ef7e:	cmp    eax,0xffffffff
   14003ef81:	jne    0x14003efa4
   14003ef83:	call   0x140036878
   14003ef88:	mov    DWORD PTR [rax],edi
   14003ef8a:	or     DWORD PTR [rbx],0xffffffff
   14003ef8d:	call   0x140036858
   14003ef92:	mov    DWORD PTR [rax],0x18
   14003ef98:	call   0x140036858
   14003ef9d:	mov    eax,DWORD PTR [rax]
   14003ef9f:	jmp    0x14003ee3c
   14003efa4:	mov    rax,QWORD PTR [rbp+0x40]
   14003efa8:	mov    r8d,DWORD PTR [rbp-0x38]
   14003efac:	mov    rcx,QWORD PTR [rbp+0x50]
   14003efb0:	mov    DWORD PTR [rax],0x1
   14003efb6:	mov    eax,DWORD PTR [rbp-0x30]
   14003efb9:	mov    QWORD PTR [rsp+0x30],rdi
   14003efbe:	mov    DWORD PTR [rsp+0x28],eax
   14003efc2:	lea    r9,[rbp-0x18]
   14003efc6:	mov    edx,r14d
   14003efc9:	mov    DWORD PTR [rsp+0x20],r12d
   14003efce:	call   QWORD PTR [rip+0x29204]        # 0x1400681d8
   14003efd4:	mov    QWORD PTR [rbp-0x20],rax
   14003efd8:	cmp    rax,0xffffffffffffffff
   14003efdc:	jne    0x14003f06d
   14003efe2:	mov    ecx,0xc0000000
   14003efe7:	mov    eax,r14d
   14003efea:	and    eax,ecx
   14003efec:	cmp    eax,ecx
   14003efee:	jne    0x14003f033
   14003eff0:	mov    eax,0x1
   14003eff5:	test   al,sil
   14003eff8:	je     0x14003f033
   14003effa:	mov    eax,DWORD PTR [rbp-0x30]
   14003effd:	mov    r8d,DWORD PTR [rbp-0x38]
   14003f001:	mov    rcx,QWORD PTR [rbp+0x50]
   14003f005:	btr    r14d,0x1f
   14003f00a:	mov    QWORD PTR [rsp+0x30],rdi
   14003f00f:	mov    DWORD PTR [rsp+0x28],eax
   14003f013:	lea    r9,[rbp-0x18]
   14003f017:	mov    edx,r14d
   14003f01a:	mov    DWORD PTR [rsp+0x20],r12d
   14003f01f:	mov    DWORD PTR [rbp-0x3c],r14d
   14003f023:	call   QWORD PTR [rip+0x291af]        # 0x1400681d8
   14003f029:	mov    QWORD PTR [rbp-0x20],rax
   14003f02d:	cmp    rax,0xffffffffffffffff
   14003f031:	jne    0x14003f06d
   14003f033:	movsxd rcx,DWORD PTR [rbx]
   14003f036:	lea    r14,[rip+0x4cd63]        # 0x14008bda0
   14003f03d:	mov    rax,rcx
   14003f040:	and    ecx,0x1f
   14003f043:	sar    rax,0x5
   14003f047:	imul   rcx,rcx,0x58
   14003f04b:	mov    rax,QWORD PTR [r14+rax*8]
   14003f04f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14003f054:	call   QWORD PTR [rip+0x29366]        # 0x1400683c0
   14003f05a:	mov    ecx,eax
   14003f05c:	call   0x140036898
   14003f061:	call   0x140036858
   14003f066:	mov    edi,DWORD PTR [rax]
   14003f068:	jmp    0x14003f507
   14003f06d:	mov    rcx,rax
   14003f070:	call   QWORD PTR [rip+0x2937a]        # 0x1400683f0
   14003f076:	test   eax,eax
   14003f078:	jne    0x14003f0c5
   14003f07a:	movsxd rcx,DWORD PTR [rbx]
   14003f07d:	lea    r14,[rip+0x4cd1c]        # 0x14008bda0
   14003f084:	mov    rax,rcx
   14003f087:	and    ecx,0x1f
   14003f08a:	sar    rax,0x5
   14003f08e:	imul   rcx,rcx,0x58
   14003f092:	mov    rax,QWORD PTR [r14+rax*8]
   14003f096:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14003f09b:	call   QWORD PTR [rip+0x2931f]        # 0x1400683c0
   14003f0a1:	mov    ecx,eax
   14003f0a3:	mov    ebx,eax
   14003f0a5:	call   0x140036898
   14003f0aa:	mov    rcx,QWORD PTR [rbp-0x20]
   14003f0ae:	call   QWORD PTR [rip+0x292e4]        # 0x140068398
   14003f0b4:	test   ebx,ebx
   14003f0b6:	jne    0x14003f061
   14003f0b8:	call   0x140036858
   14003f0bd:	mov    DWORD PTR [rax],0xd
   14003f0c3:	jmp    0x14003f061
   14003f0c5:	cmp    eax,r13d
   14003f0c8:	jne    0x14003f0d0
   14003f0ca:	or     r15b,0x40
   14003f0ce:	jmp    0x14003f0d9
   14003f0d0:	cmp    eax,0x3
   14003f0d3:	jne    0x14003f0d9
   14003f0d5:	or     r15b,0x8
   14003f0d9:	mov    rdx,QWORD PTR [rbp-0x20]
   14003f0dd:	mov    ecx,DWORD PTR [rbx]
   14003f0df:	call   0x14003f81c
   14003f0e4:	movsxd rcx,DWORD PTR [rbx]
   14003f0e7:	lea    r14,[rip+0x4ccb2]        # 0x14008bda0
   14003f0ee:	mov    rax,rcx
   14003f0f1:	and    ecx,0x1f
   14003f0f4:	mov    r8d,0x1
   14003f0fa:	sar    rax,0x5
   14003f0fe:	or     r15b,r8b
   14003f101:	mov    rax,QWORD PTR [r14+rax*8]
   14003f105:	imul   rcx,rcx,0x58
   14003f109:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   14003f10e:	movsxd rcx,DWORD PTR [rbx]
   14003f111:	mov    rax,rcx
   14003f114:	and    ecx,0x1f
   14003f117:	sar    rax,0x5
   14003f11b:	imul   rcx,rcx,0x58
   14003f11f:	mov    rax,QWORD PTR [r14+rax*8]
   14003f123:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14003f128:	mov    al,r15b
   14003f12b:	and    al,0x48
   14003f12d:	mov    BYTE PTR [rbp-0x2c],al
   14003f130:	jne    0x14003f1b8
   14003f136:	test   r15b,r15b
   14003f139:	jns    0x14003f3e3
   14003f13f:	test   r13b,sil
   14003f142:	je     0x14003f1b8
   14003f144:	mov    ecx,DWORD PTR [rbx]
   14003f146:	mov    r8d,r13d
   14003f149:	or     edx,0xffffffff
   14003f14c:	call   0x14003c420
   14003f151:	mov    DWORD PTR [rbp-0x34],eax
   14003f154:	cmp    eax,0xffffffff
   14003f157:	jne    0x14003f172
   14003f159:	call   0x140036878
   14003f15e:	cmp    DWORD PTR [rax],0x83
   14003f164:	je     0x14003f1b2
   14003f166:	mov    ecx,DWORD PTR [rbx]
   14003f168:	call   0x14003c758
   14003f16d:	jmp    0x14003f061
   14003f172:	mov    ecx,DWORD PTR [rbx]
   14003f174:	lea    rdx,[rbp-0x40]
   14003f178:	mov    r8d,0x1
   14003f17e:	mov    BYTE PTR [rbp-0x40],dil
   14003f182:	call   0x14003bbb8
   14003f187:	test   eax,eax
   14003f189:	jne    0x14003f1a1
   14003f18b:	cmp    BYTE PTR [rbp-0x40],0x1a
   14003f18f:	jne    0x14003f1a1
   14003f191:	movsxd rdx,DWORD PTR [rbp-0x34]
   14003f195:	mov    ecx,DWORD PTR [rbx]
   14003f197:	call   0x140041a54
   14003f19c:	cmp    eax,0xffffffff
   14003f19f:	je     0x14003f166
   14003f1a1:	mov    ecx,DWORD PTR [rbx]
   14003f1a3:	xor    r8d,r8d
   14003f1a6:	xor    edx,edx
   14003f1a8:	call   0x14003c420
   14003f1ad:	cmp    eax,0xffffffff
   14003f1b0:	je     0x14003f166
   14003f1b2:	mov    r8d,0x1
   14003f1b8:	test   r15b,r15b
   14003f1bb:	jns    0x14003f3e3
   14003f1c1:	mov    edx,0x74000
   14003f1c6:	mov    ecx,0x4000
   14003f1cb:	test   edx,esi
   14003f1cd:	jne    0x14003f1dc
   14003f1cf:	mov    eax,DWORD PTR [rbp-0x28]
   14003f1d2:	and    eax,edx
   14003f1d4:	jne    0x14003f1da
   14003f1d6:	or     esi,ecx
   14003f1d8:	jmp    0x14003f1dc
   14003f1da:	or     esi,eax
   14003f1dc:	mov    eax,esi
   14003f1de:	and    eax,edx
   14003f1e0:	cmp    eax,ecx
   14003f1e2:	je     0x14003f227
   14003f1e4:	cmp    eax,0x10000
   14003f1e9:	je     0x14003f214
   14003f1eb:	cmp    eax,0x14000
   14003f1f0:	je     0x14003f214
   14003f1f2:	cmp    eax,0x20000
   14003f1f7:	je     0x14003f221
   14003f1f9:	cmp    eax,0x24000
   14003f1fe:	je     0x14003f221
   14003f200:	cmp    eax,0x40000
   14003f205:	je     0x14003f20e
   14003f207:	cmp    eax,0x44000
   14003f20c:	jne    0x14003f22b
   14003f20e:	mov    BYTE PTR [rbp+0x58],r8b
   14003f212:	jmp    0x14003f22b
   14003f214:	mov    ecx,0x301
   14003f219:	mov    eax,esi
   14003f21b:	and    eax,ecx
   14003f21d:	cmp    eax,ecx
   14003f21f:	jne    0x14003f22b
   14003f221:	mov    BYTE PTR [rbp+0x58],r13b
   14003f225:	jmp    0x14003f22b
   14003f227:	mov    BYTE PTR [rbp+0x58],dil
   14003f22b:	test   esi,0x70000
   14003f231:	je     0x14003f3e3
   14003f237:	test   r15b,0x40
   14003f23b:	mov    r15d,DWORD PTR [rbp-0x3c]
   14003f23f:	mov    DWORD PTR [rbp-0x34],edi
   14003f242:	jne    0x14003f3e7
   14003f248:	mov    eax,r15d
   14003f24b:	mov    ecx,0xc0000000
   14003f250:	and    eax,ecx
   14003f252:	cmp    eax,0x40000000
   14003f257:	je     0x14003f36a
   14003f25d:	cmp    eax,0x80000000
   14003f262:	je     0x14003f2d4
   14003f264:	cmp    eax,ecx
   14003f266:	jne    0x14003f3e7
   14003f26c:	test   r12d,r12d
   14003f26f:	je     0x14003f3e7
   14003f275:	cmp    r12d,r13d
   14003f278:	jbe    0x14003f28a
   14003f27a:	cmp    r12d,0x4
   14003f27e:	jbe    0x14003f2ad
   14003f280:	cmp    r12d,0x5
   14003f284:	jne    0x14003f3e7
   14003f28a:	movsx  ecx,BYTE PTR [rbp+0x58]
   14003f28e:	mov    r12d,edi
   14003f291:	dec    ecx
   14003f293:	je     0x14003f3ae
   14003f299:	dec    ecx
   14003f29b:	jne    0x14003f3e7
   14003f2a1:	mov    DWORD PTR [rbp-0x34],0xfeff
   14003f2a8:	jmp    0x14003f3bb
   14003f2ad:	mov    ecx,DWORD PTR [rbx]
   14003f2af:	mov    r8d,r13d
   14003f2b2:	xor    edx,edx
   14003f2b4:	call   0x14003e3e8
   14003f2b9:	test   rax,rax
   14003f2bc:	je     0x14003f28a
   14003f2be:	mov    ecx,DWORD PTR [rbx]
   14003f2c0:	xor    r8d,r8d
   14003f2c3:	xor    edx,edx
   14003f2c5:	call   0x14003e3e8
   14003f2ca:	cmp    rax,0xffffffffffffffff
   14003f2ce:	je     0x14003f166
   14003f2d4:	mov    ecx,DWORD PTR [rbx]
   14003f2d6:	lea    rdx,[rbp-0x34]
   14003f2da:	mov    r8d,0x3
   14003f2e0:	call   0x14003bbb8
   14003f2e5:	cmp    eax,0xffffffff
   14003f2e8:	je     0x14003f166
   14003f2ee:	cmp    eax,r13d
   14003f2f1:	je     0x14003f30e
   14003f2f3:	cmp    eax,0x3
   14003f2f6:	jne    0x14003f359
   14003f2f8:	cmp    DWORD PTR [rbp-0x34],0xbfbbef
   14003f2ff:	jne    0x14003f30e
   14003f301:	lea    r8d,[rax-0x2]
   14003f305:	mov    BYTE PTR [rbp+0x58],r8b
   14003f309:	jmp    0x14003f3ed
   14003f30e:	movzx  eax,WORD PTR [rbp-0x34]
   14003f312:	cmp    eax,0xfffe
   14003f317:	jne    0x14003f333
   14003f319:	mov    ecx,DWORD PTR [rbx]
   14003f31b:	call   0x14003c758
   14003f320:	call   0x140036858
   14003f325:	mov    ebx,0x16
   14003f32a:	mov    DWORD PTR [rax],ebx
   14003f32c:	mov    edi,ebx
   14003f32e:	jmp    0x14003f507
   14003f333:	cmp    eax,0xfeff
   14003f338:	jne    0x14003f359
   14003f33a:	mov    ecx,DWORD PTR [rbx]
   14003f33c:	xor    r8d,r8d
   14003f33f:	mov    edx,r13d
   14003f342:	call   0x14003c420
   14003f347:	cmp    eax,0xffffffff
   14003f34a:	je     0x14003f166
   14003f350:	mov    BYTE PTR [rbp+0x58],r13b
   14003f354:	jmp    0x14003f3e7
   14003f359:	mov    ecx,DWORD PTR [rbx]
   14003f35b:	xor    r8d,r8d
   14003f35e:	xor    edx,edx
   14003f360:	call   0x14003c420
   14003f365:	cmp    eax,0xffffffff
   14003f368:	jmp    0x14003f3a7
   14003f36a:	test   r12d,r12d
   14003f36d:	je     0x14003f3e7
   14003f36f:	cmp    r12d,r13d
   14003f372:	jbe    0x14003f28a
   14003f378:	cmp    r12d,0x4
   14003f37c:	ja     0x14003f280
   14003f382:	mov    ecx,DWORD PTR [rbx]
   14003f384:	mov    r8d,r13d
   14003f387:	xor    edx,edx
   14003f389:	call   0x14003e3e8
   14003f38e:	test   rax,rax
   14003f391:	je     0x14003f28a
   14003f397:	mov    ecx,DWORD PTR [rbx]
   14003f399:	xor    r8d,r8d
   14003f39c:	xor    edx,edx
   14003f39e:	call   0x14003e3e8
   14003f3a3:	cmp    rax,0xffffffffffffffff
   14003f3a7:	jne    0x14003f3e7
   14003f3a9:	jmp    0x14003f166
   14003f3ae:	mov    DWORD PTR [rbp-0x34],0xbfbbef
   14003f3b5:	mov    r13d,0x3
   14003f3bb:	mov    ecx,DWORD PTR [rbx]
   14003f3bd:	movsxd rax,r12d
   14003f3c0:	mov    r8d,r13d
   14003f3c3:	lea    rdx,[rbp+rax*1-0x34]
   14003f3c8:	sub    r8d,r12d
   14003f3cb:	call   0x14003d3c0
   14003f3d0:	cmp    eax,0xffffffff
   14003f3d3:	je     0x14003f166
   14003f3d9:	add    r12d,eax
   14003f3dc:	cmp    r13d,r12d
   14003f3df:	jg     0x14003f3bb
   14003f3e1:	jmp    0x14003f3e7
   14003f3e3:	mov    r15d,DWORD PTR [rbp-0x3c]
   14003f3e7:	mov    r8d,0x1
   14003f3ed:	movsxd rcx,DWORD PTR [rbx]
   14003f3f0:	mov    r12b,BYTE PTR [rbp+0x58]
   14003f3f4:	mov    rax,rcx
   14003f3f7:	and    ecx,0x1f
   14003f3fa:	and    r12b,0x7f
   14003f3fe:	sar    rax,0x5
   14003f402:	imul   rcx,rcx,0x58
   14003f406:	mov    rax,QWORD PTR [r14+rax*8]
   14003f40a:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14003f40f:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   14003f414:	movsxd rdx,DWORD PTR [rbx]
   14003f417:	mov    rax,rdx
   14003f41a:	and    edx,0x1f
   14003f41d:	sar    rax,0x5
   14003f421:	imul   rdx,rdx,0x58
   14003f425:	mov    rcx,QWORD PTR [r14+rax*8]
   14003f429:	mov    eax,esi
   14003f42b:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   14003f430:	shr    eax,0x10
   14003f433:	shl    al,0x7
   14003f436:	or     BYTE PTR [rcx+rdx*1+0x38],al
   14003f43a:	cmp    BYTE PTR [rbp-0x2c],dil
   14003f43e:	jne    0x14003f460
   14003f440:	test   sil,0x8
   14003f444:	je     0x14003f460
   14003f446:	movsxd rcx,DWORD PTR [rbx]
   14003f449:	mov    rax,rcx
   14003f44c:	and    ecx,0x1f
   14003f44f:	sar    rax,0x5
   14003f453:	imul   rcx,rcx,0x58
   14003f457:	mov    rax,QWORD PTR [r14+rax*8]
   14003f45b:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14003f460:	mov    ecx,0xc0000000
   14003f465:	mov    eax,r15d
   14003f468:	and    eax,ecx
   14003f46a:	cmp    eax,ecx
   14003f46c:	jne    0x14003f507
   14003f472:	test   r8b,sil
   14003f475:	je     0x14003f507
   14003f47b:	mov    rcx,QWORD PTR [rbp-0x20]
   14003f47f:	call   QWORD PTR [rip+0x28f13]        # 0x140068398
   14003f485:	mov    eax,DWORD PTR [rbp-0x30]
   14003f488:	mov    r8d,DWORD PTR [rbp-0x38]
   14003f48c:	mov    rcx,QWORD PTR [rbp+0x50]
   14003f490:	mov    QWORD PTR [rsp+0x30],rdi
   14003f495:	mov    DWORD PTR [rsp+0x28],eax
   14003f499:	btr    r15d,0x1f
   14003f49e:	lea    r9,[rbp-0x18]
   14003f4a2:	mov    DWORD PTR [rsp+0x20],0x3
   14003f4aa:	mov    edx,r15d
   14003f4ad:	call   QWORD PTR [rip+0x28d25]        # 0x1400681d8
   14003f4b3:	cmp    rax,0xffffffffffffffff
   14003f4b7:	jne    0x14003f4ee
   14003f4b9:	call   QWORD PTR [rip+0x28f01]        # 0x1400683c0
   14003f4bf:	mov    ecx,eax
   14003f4c1:	call   0x140036898
   14003f4c6:	movsxd r11,DWORD PTR [rbx]
   14003f4c9:	mov    rax,r11
   14003f4cc:	and    r11d,0x1f
   14003f4d0:	sar    rax,0x5
   14003f4d4:	imul   r11,r11,0x58
   14003f4d8:	mov    rax,QWORD PTR [r14+rax*8]
   14003f4dc:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14003f4e2:	mov    ecx,DWORD PTR [rbx]
   14003f4e4:	call   0x14003f8cc
   14003f4e9:	jmp    0x14003f061
   14003f4ee:	movsxd rdx,DWORD PTR [rbx]
   14003f4f1:	mov    rcx,rdx
   14003f4f4:	and    edx,0x1f
   14003f4f7:	sar    rcx,0x5
   14003f4fb:	imul   rdx,rdx,0x58
   14003f4ff:	mov    rcx,QWORD PTR [r14+rcx*8]
   14003f503:	mov    QWORD PTR [rdx+rcx*1],rax
   14003f507:	mov    eax,edi
   14003f509:	jmp    0x14003ee3c
   14003f50e:	xor    r9d,r9d
   14003f511:	xor    r8d,r8d
   14003f514:	xor    edx,edx
   14003f516:	xor    ecx,ecx
   14003f518:	mov    QWORD PTR [rsp+0x20],rdi
   14003f51d:	call   0x14003674c
   14003f522:	int3   
   14003f523:	int3   
   14003f524:	mov    QWORD PTR [rsp+0x8],rbx
   14003f529:	push   rdi
   14003f52a:	sub    rsp,0x40
   14003f52e:	and    DWORD PTR [rsp+0x30],0x0
   14003f533:	xor    eax,eax
   14003f535:	mov    rdi,QWORD PTR [rsp+0x70]
   14003f53a:	test   rdi,rdi
   14003f53d:	setne  al
   14003f540:	test   eax,eax
   14003f542:	jne    0x14003f55c
   14003f544:	call   0x140036858
   14003f549:	mov    ebx,0x16
   14003f54e:	mov    DWORD PTR [rax],ebx
   14003f550:	call   0x1400367f0
   14003f555:	mov    eax,ebx
   14003f557:	jmp    0x14003f5eb
   14003f55c:	or     DWORD PTR [rdi],0xffffffff
   14003f55f:	xor    eax,eax
   14003f561:	test   rcx,rcx
   14003f564:	setne  al
   14003f567:	test   eax,eax
   14003f569:	je     0x14003f544
   14003f56b:	cmp    DWORD PTR [rsp+0x78],0x0
   14003f570:	je     0x14003f585
   14003f572:	test   r9d,0xfffffe7f
   14003f579:	mov    eax,0x0
   14003f57e:	sete   al
   14003f581:	test   eax,eax
   14003f583:	je     0x14003f544
   14003f585:	mov    DWORD PTR [rsp+0x28],r9d
   14003f58a:	mov    DWORD PTR [rsp+0x20],r8d
   14003f58f:	mov    r9d,edx
   14003f592:	mov    r8,rcx
   14003f595:	mov    rdx,rdi
   14003f598:	lea    rcx,[rsp+0x30]
   14003f59d:	call   0x14003ed7c
   14003f5a2:	mov    ebx,eax
   14003f5a4:	mov    DWORD PTR [rsp+0x34],eax
   14003f5a8:	cmp    DWORD PTR [rsp+0x30],0x0
   14003f5ad:	je     0x14003f5db
   14003f5af:	test   eax,eax
   14003f5b1:	je     0x14003f5d4
   14003f5b3:	movsxd rcx,DWORD PTR [rdi]
   14003f5b6:	mov    rax,rcx
   14003f5b9:	sar    rax,0x5
   14003f5bd:	lea    rdx,[rip+0x4c7dc]        # 0x14008bda0
   14003f5c4:	and    ecx,0x1f
   14003f5c7:	imul   rcx,rcx,0x58
   14003f5cb:	mov    rax,QWORD PTR [rdx+rax*8]
   14003f5cf:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14003f5d4:	mov    ecx,DWORD PTR [rdi]
   14003f5d6:	call   0x14003fa94
   14003f5db:	test   ebx,ebx
   14003f5dd:	je     0x14003f555
   14003f5e3:	or     DWORD PTR [rdi],0xffffffff
   14003f5e6:	jmp    0x14003f555
   14003f5eb:	mov    rbx,QWORD PTR [rsp+0x50]
   14003f5f0:	add    rsp,0x40
   14003f5f4:	pop    rdi
   14003f5f5:	ret    
   14003f5f6:	int3   
   14003f5f7:	int3   
   14003f5f8:	sub    rsp,0x38
   14003f5fc:	mov    eax,r9d
   14003f5ff:	mov    r9d,DWORD PTR [rsp+0x60]
   14003f604:	mov    r10d,r8d
   14003f607:	mov    r11,rdx
   14003f60a:	mov    DWORD PTR [rsp+0x28],0x1
   14003f612:	mov    QWORD PTR [rsp+0x20],rcx
   14003f617:	mov    r8d,eax
   14003f61a:	mov    edx,r10d
   14003f61d:	mov    rcx,r11
   14003f620:	call   0x14003f524
   14003f625:	add    rsp,0x38
   14003f629:	ret    
   14003f62a:	int3   
   14003f62b:	int3   
   14003f62c:	mov    rax,rsp
   14003f62f:	mov    QWORD PTR [rax+0x8],rbx
   14003f633:	mov    QWORD PTR [rax+0x10],rsi
   14003f637:	mov    QWORD PTR [rax+0x18],rdi
   14003f63b:	mov    QWORD PTR [rax+0x20],r12
   14003f63f:	push   rbp
   14003f640:	mov    rbp,rsp
   14003f643:	sub    rsp,0x40
   14003f647:	mov    rdi,rcx
   14003f64a:	mov    rsi,rdx
   14003f64d:	lea    rcx,[rbp-0x20]
   14003f651:	mov    rdx,r9
   14003f654:	mov    rbx,r8
   14003f657:	call   0x14003370c
   14003f65c:	xor    r12d,r12d
   14003f65f:	test   rbx,rbx
   14003f662:	jne    0x14003f67c
   14003f664:	cmp    BYTE PTR [rbp-0x8],r12b
   14003f668:	je     0x14003f675
   14003f66a:	mov    rax,QWORD PTR [rbp-0x10]
   14003f66e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003f675:	xor    eax,eax
   14003f677:	jmp    0x14003f7f8
   14003f67c:	mov    rcx,QWORD PTR [rbp-0x18]
   14003f680:	cmp    DWORD PTR [rcx+0x8],r12d
   14003f684:	jne    0x14003f699
   14003f686:	mov    r8,rbx
   14003f689:	mov    rdx,rsi
   14003f68c:	mov    rcx,rdi
   14003f68f:	call   0x140041a04
   14003f694:	jmp    0x14003f7e7
   14003f699:	test   rdi,rdi
   14003f69c:	jne    0x14003f6c9
   14003f69e:	call   0x140036858
   14003f6a3:	mov    DWORD PTR [rax],0x16
   14003f6a9:	call   0x1400367f0
   14003f6ae:	cmp    BYTE PTR [rbp-0x8],r12b
   14003f6b2:	je     0x14003f6bf
   14003f6b4:	mov    rax,QWORD PTR [rbp-0x10]
   14003f6b8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003f6bf:	mov    eax,0x7fffffff
   14003f6c4:	jmp    0x14003f7f8
   14003f6c9:	test   rsi,rsi
   14003f6cc:	je     0x14003f69e
   14003f6ce:	mov    r9b,0x4
   14003f6d1:	movzx  edx,BYTE PTR [rdi]
   14003f6d4:	dec    rbx
   14003f6d7:	inc    rdi
   14003f6da:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   14003f6df:	je     0x14003f738
   14003f6e1:	test   rbx,rbx
   14003f6e4:	jne    0x14003f6fd
   14003f6e6:	movzx  eax,BYTE PTR [rsi]
   14003f6e9:	movzx  edx,r12w
   14003f6ed:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   14003f6f2:	jne    0x14003f664
   14003f6f8:	jmp    0x14003f7c4
   14003f6fd:	cmp    BYTE PTR [rdi],r12b
   14003f700:	jne    0x14003f707
   14003f702:	mov    edx,r12d
   14003f705:	jmp    0x14003f74a
   14003f707:	movzx  eax,BYTE PTR [rdi]
   14003f70a:	shl    dx,0x8
   14003f70e:	inc    rdi
   14003f711:	or     dx,ax
   14003f714:	cmp    dx,WORD PTR [rcx+0x10]
   14003f718:	jb     0x14003f726
   14003f71a:	cmp    dx,WORD PTR [rcx+0x12]
   14003f71e:	ja     0x14003f726
   14003f720:	add    dx,WORD PTR [rcx+0x14]
   14003f724:	jmp    0x14003f74a
   14003f726:	cmp    dx,WORD PTR [rcx+0x16]
   14003f72a:	jb     0x14003f74a
   14003f72c:	cmp    dx,WORD PTR [rcx+0x18]
   14003f730:	ja     0x14003f74a
   14003f732:	add    dx,WORD PTR [rcx+0x1a]
   14003f736:	jmp    0x14003f74a
   14003f738:	movzx  eax,dx
   14003f73b:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   14003f740:	je     0x14003f74a
   14003f742:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   14003f74a:	movzx  r8d,BYTE PTR [rsi]
   14003f74e:	inc    rsi
   14003f751:	mov    eax,r8d
   14003f754:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   14003f759:	je     0x14003f7ab
   14003f75b:	test   rbx,rbx
   14003f75e:	jne    0x14003f765
   14003f760:	mov    eax,r12d
   14003f763:	jmp    0x14003f7c4
   14003f765:	dec    rbx
   14003f768:	cmp    BYTE PTR [rsi],r12b
   14003f76b:	jne    0x14003f773
   14003f76d:	movzx  eax,r12w
   14003f771:	jmp    0x14003f7c4
   14003f773:	movzx  eax,BYTE PTR [rsi]
   14003f776:	shl    r8w,0x8
   14003f77b:	inc    rsi
   14003f77e:	or     r8w,ax
   14003f782:	movzx  eax,r8w
   14003f786:	cmp    r8w,WORD PTR [rcx+0x10]
   14003f78b:	jb     0x14003f799
   14003f78d:	cmp    ax,WORD PTR [rcx+0x12]
   14003f791:	ja     0x14003f799
   14003f793:	add    ax,WORD PTR [rcx+0x14]
   14003f797:	jmp    0x14003f7c4
   14003f799:	cmp    ax,WORD PTR [rcx+0x16]
   14003f79d:	jb     0x14003f7c4
   14003f79f:	cmp    ax,WORD PTR [rcx+0x18]
   14003f7a3:	ja     0x14003f7c4
   14003f7a5:	add    ax,WORD PTR [rcx+0x1a]
   14003f7a9:	jmp    0x14003f7c4
   14003f7ab:	movzx  eax,r8w
   14003f7af:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   14003f7b4:	je     0x14003f7c0
   14003f7b6:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   14003f7be:	jmp    0x14003f7c4
   14003f7c0:	movzx  eax,r8w
   14003f7c4:	cmp    ax,dx
   14003f7c7:	jne    0x14003f7e0
   14003f7c9:	test   dx,dx
   14003f7cc:	je     0x14003f664
   14003f7d2:	test   rbx,rbx
   14003f7d5:	jne    0x14003f6d1
   14003f7db:	jmp    0x14003f664
   14003f7e0:	sbb    eax,eax
   14003f7e2:	and    eax,0x2
   14003f7e5:	dec    eax
   14003f7e7:	cmp    BYTE PTR [rbp-0x8],r12b
   14003f7eb:	je     0x14003f7f8
   14003f7ed:	mov    rcx,QWORD PTR [rbp-0x10]
   14003f7f1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003f7f8:	mov    rbx,QWORD PTR [rsp+0x50]
   14003f7fd:	mov    rsi,QWORD PTR [rsp+0x58]
   14003f802:	mov    rdi,QWORD PTR [rsp+0x60]
   14003f807:	mov    r12,QWORD PTR [rsp+0x68]
   14003f80c:	add    rsp,0x40
   14003f810:	pop    rbp
   14003f811:	ret    
   14003f812:	int3   
   14003f813:	int3   
   14003f814:	xor    r9d,r9d
   14003f817:	jmp    0x14003f62c
   14003f81c:	mov    QWORD PTR [rsp+0x8],rbx
   14003f821:	mov    QWORD PTR [rsp+0x10],rbp
   14003f826:	mov    QWORD PTR [rsp+0x18],rsi
   14003f82b:	push   rdi
   14003f82c:	sub    rsp,0x20
   14003f830:	mov    rbx,rdx
   14003f833:	test   ecx,ecx
   14003f835:	js     0x14003f89e
   14003f837:	cmp    ecx,DWORD PTR [rip+0x4c547]        # 0x14008bd84
   14003f83d:	jae    0x14003f89e
   14003f83f:	movsxd rdi,ecx
   14003f842:	lea    rbp,[rip+0x4c557]        # 0x14008bda0
   14003f849:	mov    rsi,rdi
   14003f84c:	and    edi,0x1f
   14003f84f:	sar    rsi,0x5
   14003f853:	imul   rdi,rdi,0x58
   14003f857:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14003f85c:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14003f861:	jne    0x14003f89e
   14003f863:	cmp    DWORD PTR [rip+0x45836],0x1        # 0x1400850a0
   14003f86a:	jne    0x14003f891
   14003f86c:	test   ecx,ecx
   14003f86e:	je     0x14003f886
   14003f870:	dec    ecx
   14003f872:	je     0x14003f87f
   14003f874:	dec    ecx
   14003f876:	jne    0x14003f891
   14003f878:	mov    ecx,0xfffffff4
   14003f87d:	jmp    0x14003f88b
   14003f87f:	mov    ecx,0xfffffff5
   14003f884:	jmp    0x14003f88b
   14003f886:	mov    ecx,0xfffffff6
   14003f88b:	call   QWORD PTR [rip+0x2893f]        # 0x1400681d0
   14003f891:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14003f896:	mov    QWORD PTR [rdi+rax*1],rbx
   14003f89a:	xor    eax,eax
   14003f89c:	jmp    0x14003f8b4
   14003f89e:	call   0x140036858
   14003f8a3:	mov    DWORD PTR [rax],0x9
   14003f8a9:	call   0x140036878
   14003f8ae:	and    DWORD PTR [rax],0x0
   14003f8b1:	or     eax,0xffffffff
   14003f8b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f8b9:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f8be:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f8c3:	add    rsp,0x20
   14003f8c7:	pop    rdi
   14003f8c8:	ret    
   14003f8c9:	int3   
   14003f8ca:	int3   
   14003f8cb:	int3   
   14003f8cc:	mov    QWORD PTR [rsp+0x8],rbx
   14003f8d1:	mov    QWORD PTR [rsp+0x10],rbp
   14003f8d6:	push   rdi
   14003f8d7:	sub    rsp,0x20
   14003f8db:	test   ecx,ecx
   14003f8dd:	js     0x14003f950
   14003f8df:	cmp    ecx,DWORD PTR [rip+0x4c49f]        # 0x14008bd84
   14003f8e5:	jae    0x14003f950
   14003f8e7:	movsxd rbx,ecx
   14003f8ea:	lea    rbp,[rip+0x4c4af]        # 0x14008bda0
   14003f8f1:	mov    rdi,rbx
   14003f8f4:	and    ebx,0x1f
   14003f8f7:	sar    rdi,0x5
   14003f8fb:	imul   rbx,rbx,0x58
   14003f8ff:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14003f904:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003f909:	je     0x14003f950
   14003f90b:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14003f910:	je     0x14003f950
   14003f912:	cmp    DWORD PTR [rip+0x45787],0x1        # 0x1400850a0
   14003f919:	jne    0x14003f942
   14003f91b:	test   ecx,ecx
   14003f91d:	je     0x14003f935
   14003f91f:	dec    ecx
   14003f921:	je     0x14003f92e
   14003f923:	dec    ecx
   14003f925:	jne    0x14003f942
   14003f927:	mov    ecx,0xfffffff4
   14003f92c:	jmp    0x14003f93a
   14003f92e:	mov    ecx,0xfffffff5
   14003f933:	jmp    0x14003f93a
   14003f935:	mov    ecx,0xfffffff6
   14003f93a:	xor    edx,edx
   14003f93c:	call   QWORD PTR [rip+0x2888e]        # 0x1400681d0
   14003f942:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14003f947:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14003f94c:	xor    eax,eax
   14003f94e:	jmp    0x14003f966
   14003f950:	call   0x140036858
   14003f955:	mov    DWORD PTR [rax],0x9
   14003f95b:	call   0x140036878
   14003f960:	and    DWORD PTR [rax],0x0
   14003f963:	or     eax,0xffffffff
   14003f966:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f96b:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f970:	add    rsp,0x20
   14003f974:	pop    rdi
   14003f975:	ret    
   14003f976:	int3   
   14003f977:	int3   
   14003f978:	sub    rsp,0x28
   14003f97c:	cmp    ecx,0xfffffffe
   14003f97f:	jne    0x14003f996
   14003f981:	call   0x140036878
   14003f986:	and    DWORD PTR [rax],0x0
   14003f989:	call   0x140036858
   14003f98e:	mov    DWORD PTR [rax],0x9
   14003f994:	jmp    0x14003f9e3
   14003f996:	test   ecx,ecx
   14003f998:	js     0x14003f9cb
   14003f99a:	cmp    ecx,DWORD PTR [rip+0x4c3e4]        # 0x14008bd84
   14003f9a0:	jae    0x14003f9cb
   14003f9a2:	movsxd rdx,ecx
   14003f9a5:	lea    rcx,[rip+0x4c3f4]        # 0x14008bda0
   14003f9ac:	mov    rax,rdx
   14003f9af:	and    edx,0x1f
   14003f9b2:	sar    rax,0x5
   14003f9b6:	imul   rdx,rdx,0x58
   14003f9ba:	mov    rax,QWORD PTR [rcx+rax*8]
   14003f9be:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14003f9c3:	je     0x14003f9cb
   14003f9c5:	mov    rax,QWORD PTR [rax+rdx*1]
   14003f9c9:	jmp    0x14003f9e7
   14003f9cb:	call   0x140036878
   14003f9d0:	and    DWORD PTR [rax],0x0
   14003f9d3:	call   0x140036858
   14003f9d8:	mov    DWORD PTR [rax],0x9
   14003f9de:	call   0x1400367f0
   14003f9e3:	or     rax,0xffffffffffffffff
   14003f9e7:	add    rsp,0x28
   14003f9eb:	ret    
   14003f9ec:	mov    rax,rsp
   14003f9ef:	mov    QWORD PTR [rax+0x8],rbx
   14003f9f3:	mov    QWORD PTR [rax+0x10],rsi
   14003f9f7:	mov    QWORD PTR [rax+0x18],rdi
   14003f9fb:	mov    QWORD PTR [rax+0x20],r12
   14003f9ff:	push   r14
   14003fa01:	sub    rsp,0x20
   14003fa05:	movsxd rbx,ecx
   14003fa08:	mov    r12,rbx
   14003fa0b:	sar    r12,0x5
   14003fa0f:	lea    r14,[rip+0x4c38a]        # 0x14008bda0
   14003fa16:	and    ebx,0x1f
   14003fa19:	imul   rbx,rbx,0x58
   14003fa1d:	mov    rsi,QWORD PTR [r14+r12*8]
   14003fa21:	mov    edi,0x1
   14003fa26:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14003fa2b:	jne    0x14003fa61
   14003fa2d:	lea    ecx,[rdi+0x9]
   14003fa30:	call   0x14003a3a0
   14003fa35:	nop
   14003fa36:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14003fa3b:	jne    0x14003fa57
   14003fa3d:	lea    rcx,[rbx+rsi*1+0x10]
   14003fa42:	mov    edx,0xfa0
   14003fa47:	call   QWORD PTR [rip+0x287fb]        # 0x140068248
   14003fa4d:	neg    eax
   14003fa4f:	sbb    edx,edx
   14003fa51:	and    edi,edx
   14003fa53:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14003fa57:	mov    ecx,0xa
   14003fa5c:	call   0x14003a2a0
   14003fa61:	test   edi,edi
   14003fa63:	je     0x14003fa74
   14003fa65:	mov    rcx,QWORD PTR [r14+r12*8]
   14003fa69:	lea    rcx,[rcx+rbx*1+0x10]
   14003fa6e:	call   QWORD PTR [rip+0x286fc]        # 0x140068170
   14003fa74:	mov    eax,edi
   14003fa76:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fa7b:	mov    rsi,QWORD PTR [rsp+0x38]
   14003fa80:	mov    rdi,QWORD PTR [rsp+0x40]
   14003fa85:	mov    r12,QWORD PTR [rsp+0x48]
   14003fa8a:	add    rsp,0x20
   14003fa8e:	pop    r14
   14003fa90:	ret    
   14003fa91:	int3   
   14003fa92:	int3   
   14003fa93:	int3   
   14003fa94:	movsxd rdx,ecx
   14003fa97:	lea    rcx,[rip+0x4c302]        # 0x14008bda0
   14003fa9e:	mov    rax,rdx
   14003faa1:	and    edx,0x1f
   14003faa4:	sar    rax,0x5
   14003faa8:	imul   rdx,rdx,0x58
   14003faac:	mov    rax,QWORD PTR [rcx+rax*8]
   14003fab0:	lea    rcx,[rax+rdx*1+0x10]
   14003fab5:	rex.W jmp QWORD PTR [rip+0x28694]        # 0x140068150
   14003fabc:	mov    QWORD PTR [rsp+0x8],rbx
   14003fac1:	mov    QWORD PTR [rsp+0x10],rsi
   14003fac6:	mov    QWORD PTR [rsp+0x18],rdi
   14003facb:	push   r12
   14003facd:	push   r13
   14003facf:	push   r14
   14003fad1:	sub    rsp,0x40
   14003fad5:	or     rsi,0xffffffffffffffff
   14003fad9:	mov    r12d,esi
   14003fadc:	xor    r13d,r13d
   14003fadf:	lea    ebx,[rsi+0xc]
   14003fae2:	mov    ecx,ebx
   14003fae4:	call   0x14003a2b8
   14003fae9:	test   eax,eax
   14003faeb:	jne    0x14003faf4
   14003faed:	mov    eax,esi
   14003faef:	jmp    0x14003fcaa
   14003faf4:	mov    ecx,ebx
   14003faf6:	call   0x14003a3a0
   14003fafb:	nop
   14003fafc:	xor    edi,edi
   14003fafe:	lea    rax,[rip+0x4c29b]        # 0x14008bda0
   14003fb05:	mov    DWORD PTR [rsp+0x24],edi
   14003fb09:	cmp    edi,0x40
   14003fb0c:	jge    0x14003fc9d
   14003fb12:	movsxd r14,edi
   14003fb15:	mov    rbx,QWORD PTR [rax+r14*8]
   14003fb19:	test   rbx,rbx
   14003fb1c:	je     0x14003fc13
   14003fb22:	mov    QWORD PTR [rsp+0x30],rbx
   14003fb27:	mov    rax,QWORD PTR [rax+r14*8]
   14003fb2b:	add    rax,0xb00
   14003fb31:	cmp    rbx,rax
   14003fb34:	jae    0x14003fc03
   14003fb3a:	test   BYTE PTR [rbx+0x8],0x1
   14003fb3e:	jne    0x14003fbef
   14003fb44:	cmp    DWORD PTR [rbx+0xc],0x0
   14003fb48:	jne    0x14003fb86
   14003fb4a:	mov    ecx,0xa
   14003fb4f:	call   0x14003a3a0
   14003fb54:	nop
   14003fb55:	cmp    DWORD PTR [rbx+0xc],0x0
   14003fb59:	jne    0x14003fb7c
   14003fb5b:	lea    rcx,[rbx+0x10]
   14003fb5f:	mov    edx,0xfa0
   14003fb64:	call   QWORD PTR [rip+0x286de]        # 0x140068248
   14003fb6a:	test   eax,eax
   14003fb6c:	jne    0x14003fb79
   14003fb6e:	lea    r13d,[rax+0x1]
   14003fb72:	mov    DWORD PTR [rsp+0x28],r13d
   14003fb77:	jmp    0x14003fb7c
   14003fb79:	inc    DWORD PTR [rbx+0xc]
   14003fb7c:	mov    ecx,0xa
   14003fb81:	call   0x14003a2a0
   14003fb86:	test   r13d,r13d
   14003fb89:	jne    0x14003fbef
   14003fb8b:	lea    rcx,[rbx+0x10]
   14003fb8f:	call   QWORD PTR [rip+0x285db]        # 0x140068170
   14003fb95:	test   BYTE PTR [rbx+0x8],0x1
   14003fb99:	je     0x14003fba7
   14003fb9b:	lea    rcx,[rbx+0x10]
   14003fb9f:	call   QWORD PTR [rip+0x285ab]        # 0x140068150
   14003fba5:	jmp    0x14003fbef
   14003fba7:	or     rsi,0xffffffffffffffff
   14003fbab:	test   r13d,r13d
   14003fbae:	jne    0x14003fbef
   14003fbb0:	mov    BYTE PTR [rbx+0x8],0x1
   14003fbb4:	mov    QWORD PTR [rbx],rsi
   14003fbb7:	lea    r8,[rip+0x4c1e2]        # 0x14008bda0
   14003fbbe:	sub    rbx,QWORD PTR [r8+r14*8]
   14003fbc2:	movabs rax,0x2e8ba2e8ba2e8ba3
   14003fbcc:	imul   rbx
   14003fbcf:	mov    r12,rdx
   14003fbd2:	sar    r12,0x4
   14003fbd6:	mov    rax,r12
   14003fbd9:	shr    rax,0x3f
   14003fbdd:	add    r12,rax
   14003fbe0:	mov    eax,edi
   14003fbe2:	shl    eax,0x5
   14003fbe5:	add    r12d,eax
   14003fbe8:	mov    DWORD PTR [rsp+0x20],r12d
   14003fbed:	jmp    0x14003fc03
   14003fbef:	add    rbx,0x58
   14003fbf3:	or     rsi,0xffffffffffffffff
   14003fbf7:	lea    rax,[rip+0x4c1a2]        # 0x14008bda0
   14003fbfe:	jmp    0x14003fb22
   14003fc03:	cmp    r12d,esi
   14003fc06:	jne    0x14003fc9d
   14003fc0c:	inc    edi
   14003fc0e:	jmp    0x14003fafe
   14003fc13:	mov    edx,0x58
   14003fc18:	lea    ecx,[rdx-0x38]
   14003fc1b:	call   0x140039f20
   14003fc20:	mov    QWORD PTR [rsp+0x30],rax
   14003fc25:	test   rax,rax
   14003fc28:	je     0x14003fc9d
   14003fc2a:	movsxd rdx,edi
   14003fc2d:	lea    r8,[rip+0x4c16c]        # 0x14008bda0
   14003fc34:	mov    QWORD PTR [r8+rdx*8],rax
   14003fc38:	add    DWORD PTR [rip+0x4c145],0x20        # 0x14008bd84
   14003fc3f:	mov    rcx,QWORD PTR [r8+rdx*8]
   14003fc43:	add    rcx,0xb00
   14003fc4a:	cmp    rax,rcx
   14003fc4d:	jae    0x14003fc69
   14003fc4f:	mov    BYTE PTR [rax+0x8],0x0
   14003fc53:	mov    QWORD PTR [rax],rsi
   14003fc56:	mov    BYTE PTR [rax+0x9],0xa
   14003fc5a:	and    DWORD PTR [rax+0xc],0x0
   14003fc5e:	add    rax,0x58
   14003fc62:	mov    QWORD PTR [rsp+0x30],rax
   14003fc67:	jmp    0x14003fc3f
   14003fc69:	shl    edi,0x5
   14003fc6c:	mov    DWORD PTR [rsp+0x20],edi
   14003fc70:	movsxd rcx,edi
   14003fc73:	mov    rax,rcx
   14003fc76:	sar    rax,0x5
   14003fc7a:	and    ecx,0x1f
   14003fc7d:	imul   rcx,rcx,0x58
   14003fc81:	mov    rax,QWORD PTR [r8+rax*8]
   14003fc85:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14003fc8a:	mov    ecx,edi
   14003fc8c:	call   0x14003f9ec
   14003fc91:	test   eax,eax
   14003fc93:	cmove  edi,esi
   14003fc96:	mov    r12d,edi
   14003fc99:	mov    DWORD PTR [rsp+0x20],edi
   14003fc9d:	mov    ecx,0xb
   14003fca2:	call   0x14003a2a0
   14003fca7:	mov    eax,r12d
   14003fcaa:	mov    rbx,QWORD PTR [rsp+0x60]
   14003fcaf:	mov    rsi,QWORD PTR [rsp+0x68]
   14003fcb4:	mov    rdi,QWORD PTR [rsp+0x70]
   14003fcb9:	add    rsp,0x40
   14003fcbd:	pop    r14
   14003fcbf:	pop    r13
   14003fcc1:	pop    r12
   14003fcc3:	ret    
   14003fcc4:	mov    QWORD PTR [rsp+0x18],rbx
   14003fcc9:	mov    DWORD PTR [rsp+0x8],ecx
   14003fccd:	push   rsi
   14003fcce:	push   rdi
   14003fccf:	push   r12
   14003fcd1:	sub    rsp,0x20
   14003fcd5:	movsxd rdi,ecx
   14003fcd8:	cmp    edi,0xfffffffe
   14003fcdb:	jne    0x14003fced
   14003fcdd:	call   0x140036858
   14003fce2:	mov    DWORD PTR [rax],0x9
   14003fce8:	jmp    0x14003fd8a
   14003fced:	test   ecx,ecx
   14003fcef:	js     0x14003fd7a
   14003fcf5:	cmp    edi,DWORD PTR [rip+0x4c089]        # 0x14008bd84
   14003fcfb:	jae    0x14003fd7a
   14003fcfd:	mov    rbx,rdi
   14003fd00:	mov    rsi,rdi
   14003fd03:	sar    rsi,0x5
   14003fd07:	lea    r12,[rip+0x4c092]        # 0x14008bda0
   14003fd0e:	and    ebx,0x1f
   14003fd11:	imul   rbx,rbx,0x58
   14003fd15:	mov    rax,QWORD PTR [r12+rsi*8]
   14003fd19:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14003fd1e:	and    ecx,0x1
   14003fd21:	je     0x14003fd7a
   14003fd23:	mov    ecx,edi
   14003fd25:	call   0x14003f9ec
   14003fd2a:	nop
   14003fd2b:	mov    rax,QWORD PTR [r12+rsi*8]
   14003fd2f:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14003fd34:	je     0x14003fd61
   14003fd36:	mov    ecx,edi
   14003fd38:	call   0x14003f978
   14003fd3d:	mov    rcx,rax
   14003fd40:	call   QWORD PTR [rip+0x28482]        # 0x1400681c8
   14003fd46:	test   eax,eax
   14003fd48:	jne    0x14003fd54
   14003fd4a:	call   QWORD PTR [rip+0x28670]        # 0x1400683c0
   14003fd50:	mov    ebx,eax
   14003fd52:	jmp    0x14003fd56
   14003fd54:	xor    ebx,ebx
   14003fd56:	test   ebx,ebx
   14003fd58:	je     0x14003fd6f
   14003fd5a:	call   0x140036878
   14003fd5f:	mov    DWORD PTR [rax],ebx
   14003fd61:	call   0x140036858
   14003fd66:	mov    DWORD PTR [rax],0x9
   14003fd6c:	or     ebx,0xffffffff
   14003fd6f:	mov    ecx,edi
   14003fd71:	call   0x14003fa94
   14003fd76:	mov    eax,ebx
   14003fd78:	jmp    0x14003fd8d
   14003fd7a:	call   0x140036858
   14003fd7f:	mov    DWORD PTR [rax],0x9
   14003fd85:	call   0x1400367f0
   14003fd8a:	or     eax,0xffffffff
   14003fd8d:	mov    rbx,QWORD PTR [rsp+0x50]
   14003fd92:	add    rsp,0x20
   14003fd96:	pop    r12
   14003fd98:	pop    rdi
   14003fd99:	pop    rsi
   14003fd9a:	ret    
   14003fd9b:	int3   
   14003fd9c:	mov    WORD PTR [rsp+0x8],cx
   14003fda1:	sub    rsp,0x38
   14003fda5:	mov    rcx,QWORD PTR [rip+0x469a4]        # 0x140086750
   14003fdac:	cmp    rcx,0xfffffffffffffffe
   14003fdb0:	jne    0x14003fdbe
   14003fdb2:	call   0x140041cec
   14003fdb7:	mov    rcx,QWORD PTR [rip+0x46992]        # 0x140086750
   14003fdbe:	cmp    rcx,0xffffffffffffffff
   14003fdc2:	jne    0x14003fdcb
   14003fdc4:	mov    eax,0xffff
   14003fdc9:	jmp    0x14003fdf0
   14003fdcb:	and    QWORD PTR [rsp+0x20],0x0
   14003fdd1:	lea    r9,[rsp+0x48]
   14003fdd6:	lea    rdx,[rsp+0x40]
   14003fddb:	mov    r8d,0x1
   14003fde1:	call   QWORD PTR [rip+0x283d9]        # 0x1400681c0
   14003fde7:	test   eax,eax
   14003fde9:	je     0x14003fdc4
   14003fdeb:	movzx  eax,WORD PTR [rsp+0x40]
   14003fdf0:	add    rsp,0x38
   14003fdf4:	ret    
   14003fdf5:	int3   
   14003fdf6:	int3   
   14003fdf7:	int3   
   14003fdf8:	mov    QWORD PTR [rsp+0x18],rbx
   14003fdfd:	push   rbp
   14003fdfe:	push   rsi
   14003fdff:	push   rdi
   14003fe00:	push   r12
   14003fe02:	push   r13
   14003fe04:	push   r14
   14003fe06:	push   r15
   14003fe08:	mov    rbp,rsp
   14003fe0b:	sub    rsp,0x60
   14003fe0f:	mov    rax,QWORD PTR [rip+0x45292]        # 0x1400850a8
   14003fe16:	xor    rax,rsp
   14003fe19:	mov    QWORD PTR [rbp-0x10],rax
   14003fe1d:	movzx  eax,WORD PTR [rcx+0xa]
   14003fe21:	xor    ebx,ebx
   14003fe23:	mov    r15d,0x1f
   14003fe29:	mov    edi,eax
   14003fe2b:	and    eax,0x8000
   14003fe30:	mov    QWORD PTR [rbp-0x38],rdx
   14003fe34:	mov    DWORD PTR [rbp-0x3c],eax
   14003fe37:	mov    eax,DWORD PTR [rcx+0x6]
   14003fe3a:	and    edi,0x7fff
   14003fe40:	mov    DWORD PTR [rbp-0x30],eax
   14003fe43:	mov    eax,DWORD PTR [rcx+0x2]
   14003fe46:	sub    edi,0x3fff
   14003fe4c:	mov    DWORD PTR [rbp-0x2c],eax
   14003fe4f:	movzx  eax,WORD PTR [rcx]
   14003fe52:	lea    esi,[rbx+0x1]
   14003fe55:	shl    eax,0x10
   14003fe58:	lea    r12d,[r15-0x1c]
   14003fe5c:	mov    DWORD PTR [rbp-0x28],eax
   14003fe5f:	cmp    edi,0xffffc001
   14003fe65:	jne    0x14003fe90
   14003fe67:	mov    r8d,ebx
   14003fe6a:	mov    eax,ebx
   14003fe6c:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14003fe70:	jne    0x14003fe7f
   14003fe72:	add    rax,rsi
   14003fe75:	cmp    rax,r12
   14003fe78:	jl     0x14003fe6c
   14003fe7a:	jmp    0x140040361
   14003fe7f:	mov    QWORD PTR [rbp-0x30],rbx
   14003fe83:	mov    DWORD PTR [rbp-0x28],ebx
   14003fe86:	mov    ebx,0x2
   14003fe8b:	jmp    0x140040361
   14003fe90:	mov    r9d,DWORD PTR [rip+0x465d1]        # 0x140086468
   14003fe97:	lea    rcx,[rbp-0x30]
   14003fe9b:	mov    r11d,r15d
   14003fe9e:	mov    rax,QWORD PTR [rcx]
   14003fea1:	or     r14d,0xffffffff
   14003fea5:	mov    DWORD PTR [rbp-0x40],edi
   14003fea8:	mov    QWORD PTR [rbp-0x20],rax
   14003feac:	mov    eax,DWORD PTR [rcx+0x8]
   14003feaf:	mov    r13d,ebx
   14003feb2:	mov    DWORD PTR [rbp-0x18],eax
   14003feb5:	mov    eax,r9d
   14003feb8:	cdq    
   14003feb9:	and    edx,r15d
   14003febc:	add    eax,edx
   14003febe:	mov    r10d,eax
   14003fec1:	and    eax,r15d
   14003fec4:	sub    eax,edx
   14003fec6:	sar    r10d,0x5
   14003feca:	sub    r11d,eax
   14003fecd:	movsxd rax,r10d
   14003fed0:	mov    ecx,DWORD PTR [rbp+rax*4-0x30]
   14003fed4:	bt     ecx,r11d
   14003fed8:	jae    0x14003ff73
   14003fede:	mov    ecx,r11d
   14003fee1:	mov    eax,r14d
   14003fee4:	movsxd r8,r10d
   14003fee7:	shl    eax,cl
   14003fee9:	not    eax
   14003feeb:	test   DWORD PTR [rbp+r8*4-0x30],eax
   14003fef0:	jne    0x14003ff0a
   14003fef2:	lea    eax,[rsi+r8*1]
   14003fef6:	cdqe   
   14003fef8:	jmp    0x14003ff03
   14003fefa:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14003fefe:	jne    0x14003ff0a
   14003ff00:	add    rax,rsi
   14003ff03:	cmp    rax,r12
   14003ff06:	jl     0x14003fefa
   14003ff08:	jmp    0x14003ff73
   14003ff0a:	lea    eax,[r9-0x1]
   14003ff0e:	mov    ecx,r15d
   14003ff11:	cdq    
   14003ff12:	and    edx,r15d
   14003ff15:	add    eax,edx
   14003ff17:	mov    r8d,eax
   14003ff1a:	and    eax,r15d
   14003ff1d:	sub    eax,edx
   14003ff1f:	sar    r8d,0x5
   14003ff23:	mov    edx,esi
   14003ff25:	sub    ecx,eax
   14003ff27:	movsxd r9,r8d
   14003ff2a:	mov    eax,DWORD PTR [rbp+r9*4-0x30]
   14003ff2f:	shl    edx,cl
   14003ff31:	lea    ecx,[rax+rdx*1]
   14003ff34:	cmp    ecx,eax
   14003ff36:	jb     0x14003ff3c
   14003ff38:	cmp    ecx,edx
   14003ff3a:	jae    0x14003ff3f
   14003ff3c:	mov    r13d,esi
   14003ff3f:	sub    r8d,esi
   14003ff42:	mov    DWORD PTR [rbp+r9*4-0x30],ecx
   14003ff47:	movsxd rdx,r8d
   14003ff4a:	js     0x14003ff73
   14003ff4c:	test   r13d,r13d
   14003ff4f:	je     0x14003ff73
   14003ff51:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   14003ff55:	mov    r13d,ebx
   14003ff58:	lea    r8d,[rax+0x1]
   14003ff5c:	cmp    r8d,eax
   14003ff5f:	jb     0x14003ff66
   14003ff61:	cmp    r8d,esi
   14003ff64:	jae    0x14003ff69
   14003ff66:	mov    r13d,esi
   14003ff69:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14003ff6e:	sub    rdx,rsi
   14003ff71:	jns    0x14003ff4c
   14003ff73:	mov    ecx,r11d
   14003ff76:	mov    eax,r14d
   14003ff79:	shl    eax,cl
   14003ff7b:	movsxd rcx,r10d
   14003ff7e:	and    DWORD PTR [rbp+rcx*4-0x30],eax
   14003ff82:	lea    eax,[r10+0x1]
   14003ff86:	movsxd rdx,eax
   14003ff89:	cmp    rdx,r12
   14003ff8c:	jge    0x14003ffa4
   14003ff8e:	lea    rcx,[rbp+rdx*4-0x30]
   14003ff93:	mov    r8,r12
   14003ff96:	sub    r8,rdx
   14003ff99:	xor    edx,edx
   14003ff9b:	shl    r8,0x2
   14003ff9f:	call   0x140036dc0
   14003ffa4:	test   r13d,r13d
   14003ffa7:	je     0x14003ffab
   14003ffa9:	add    edi,esi
   14003ffab:	mov    edx,DWORD PTR [rip+0x464b3]        # 0x140086464
   14003ffb1:	mov    eax,edx
   14003ffb3:	sub    eax,DWORD PTR [rip+0x464af]        # 0x140086468
   14003ffb9:	cmp    edi,eax
   14003ffbb:	jge    0x14003ffd1
   14003ffbd:	mov    QWORD PTR [rbp-0x30],rbx
   14003ffc1:	mov    DWORD PTR [rbp-0x28],ebx
   14003ffc4:	mov    r8d,ebx
   14003ffc7:	mov    ebx,0x2
   14003ffcc:	jmp    0x14004035d
   14003ffd1:	cmp    edi,edx
   14003ffd3:	jg     0x140040218
   14003ffd9:	sub    edx,DWORD PTR [rbp-0x40]
   14003ffdc:	lea    rax,[rbp-0x20]
   14003ffe0:	mov    edi,r14d
   14003ffe3:	mov    rcx,QWORD PTR [rax]
   14003ffe6:	mov    r9d,ebx
   14003ffe9:	lea    r8,[rbp-0x30]
   14003ffed:	mov    QWORD PTR [rbp-0x30],rcx
   14003fff1:	mov    ecx,DWORD PTR [rax+0x8]
   14003fff4:	mov    eax,edx
   14003fff6:	cdq    
   14003fff7:	mov    DWORD PTR [rbp-0x28],ecx
   14003fffa:	mov    r10,r12
   14003fffd:	and    edx,r15d
   140040000:	add    eax,edx
   140040002:	mov    r11d,eax
   140040005:	and    eax,r15d
   140040008:	mov    r15d,0x20
   14004000e:	sub    eax,edx
   140040010:	sar    r11d,0x5
   140040014:	mov    ecx,eax
   140040016:	mov    r13d,eax
   140040019:	shl    edi,cl
   14004001b:	sub    r15d,eax
   14004001e:	not    edi
   140040020:	mov    edx,DWORD PTR [r8]
   140040023:	mov    ecx,r13d
   140040026:	mov    eax,edx
   140040028:	shr    edx,cl
   14004002a:	mov    ecx,r15d
   14004002d:	or     edx,r9d
   140040030:	and    eax,edi
   140040032:	mov    DWORD PTR [rbp-0x40],eax
   140040035:	mov    DWORD PTR [r8],edx
   140040038:	add    r8,0x4
   14004003c:	mov    r9d,DWORD PTR [rbp-0x40]
   140040040:	shl    r9d,cl
   140040043:	sub    r10,rsi
   140040046:	jne    0x140040020
   140040048:	lea    edi,[r10+0x2]
   14004004c:	movsxd r10,r11d
   14004004f:	mov    r9,r10
   140040052:	mov    r8d,edi
   140040055:	neg    r9
   140040058:	cmp    r8,r10
   14004005b:	jl     0x140040072
   14004005d:	mov    rdx,r8
   140040060:	shl    rdx,0x2
   140040064:	lea    rax,[rdx+r9*4]
   140040068:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14004006c:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   140040070:	jmp    0x140040077
   140040072:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   140040077:	sub    r8,rsi
   14004007a:	jns    0x140040058
   14004007c:	mov    r9d,DWORD PTR [rip+0x463e5]        # 0x140086468
   140040083:	mov    r13d,0x1f
   140040089:	mov    eax,r9d
   14004008c:	mov    r11d,r13d
   14004008f:	cdq    
   140040090:	and    edx,r13d
   140040093:	add    eax,edx
   140040095:	mov    r10d,eax
   140040098:	and    eax,r13d
   14004009b:	sar    r10d,0x5
   14004009f:	sub    eax,edx
   1400400a1:	movsxd r15,r10d
   1400400a4:	sub    r11d,eax
   1400400a7:	mov    ecx,DWORD PTR [rbp+r15*4-0x30]
   1400400ac:	bt     ecx,r11d
   1400400b0:	jae    0x14004014d
   1400400b6:	mov    ecx,r11d
   1400400b9:	mov    eax,r14d
   1400400bc:	movsxd r8,r10d
   1400400bf:	shl    eax,cl
   1400400c1:	not    eax
   1400400c3:	test   DWORD PTR [rbp+r8*4-0x30],eax
   1400400c8:	jne    0x1400400e2
   1400400ca:	lea    eax,[rsi+r8*1]
   1400400ce:	cdqe   
   1400400d0:	jmp    0x1400400db
   1400400d2:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   1400400d6:	jne    0x1400400e2
   1400400d8:	add    rax,rsi
   1400400db:	cmp    rax,r12
   1400400de:	jl     0x1400400d2
   1400400e0:	jmp    0x14004014d
   1400400e2:	lea    eax,[r9-0x1]
   1400400e6:	mov    ecx,r13d
   1400400e9:	mov    r9d,esi
   1400400ec:	cdq    
   1400400ed:	and    edx,r13d
   1400400f0:	add    eax,edx
   1400400f2:	mov    r8d,eax
   1400400f5:	and    eax,r13d
   1400400f8:	sub    eax,edx
   1400400fa:	sar    r8d,0x5
   1400400fe:	sub    ecx,eax
   140040100:	movsxd r13,r8d
   140040103:	mov    eax,DWORD PTR [rbp+r13*4-0x30]
   140040108:	shl    r9d,cl
   14004010b:	mov    ecx,ebx
   14004010d:	lea    edx,[rax+r9*1]
   140040111:	cmp    edx,eax
   140040113:	jb     0x14004011a
   140040115:	cmp    edx,r9d
   140040118:	jae    0x14004011c
   14004011a:	mov    ecx,esi
   14004011c:	sub    r8d,esi
   14004011f:	mov    DWORD PTR [rbp+r13*4-0x30],edx
   140040124:	movsxd rdx,r8d
   140040127:	js     0x14004014d
   140040129:	test   ecx,ecx
   14004012b:	je     0x14004014d
   14004012d:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   140040131:	mov    ecx,ebx
   140040133:	lea    r8d,[rax+0x1]
   140040137:	cmp    r8d,eax
   14004013a:	jb     0x140040141
   14004013c:	cmp    r8d,esi
   14004013f:	jae    0x140040143
   140040141:	mov    ecx,esi
   140040143:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   140040148:	sub    rdx,rsi
   14004014b:	jns    0x140040129
   14004014d:	mov    ecx,r11d
   140040150:	mov    eax,r14d
   140040153:	shl    eax,cl
   140040155:	and    DWORD PTR [rbp+r15*4-0x30],eax
   14004015a:	lea    eax,[r10+0x1]
   14004015e:	movsxd rdx,eax
   140040161:	cmp    rdx,r12
   140040164:	jge    0x14004017c
   140040166:	lea    rcx,[rbp+rdx*4-0x30]
   14004016b:	mov    r8,r12
   14004016e:	sub    r8,rdx
   140040171:	xor    edx,edx
   140040173:	shl    r8,0x2
   140040177:	call   0x140036dc0
   14004017c:	mov    eax,DWORD PTR [rip+0x462ea]        # 0x14008646c
   140040182:	mov    r15d,0x1f
   140040188:	mov    r9d,ebx
   14004018b:	inc    eax
   14004018d:	lea    r13d,[r15+0x1]
   140040191:	lea    r8,[rbp-0x30]
   140040195:	cdq    
   140040196:	and    edx,r15d
   140040199:	add    eax,edx
   14004019b:	mov    r10d,eax
   14004019e:	and    eax,r15d
   1400401a1:	sub    eax,edx
   1400401a3:	sar    r10d,0x5
   1400401a7:	mov    ecx,eax
   1400401a9:	mov    r11d,eax
   1400401ac:	shl    r14d,cl
   1400401af:	sub    r13d,eax
   1400401b2:	not    r14d
   1400401b5:	mov    edx,DWORD PTR [r8]
   1400401b8:	mov    ecx,r11d
   1400401bb:	mov    eax,edx
   1400401bd:	shr    edx,cl
   1400401bf:	mov    ecx,r13d
   1400401c2:	or     edx,r9d
   1400401c5:	and    eax,r14d
   1400401c8:	mov    DWORD PTR [rbp-0x40],eax
   1400401cb:	mov    DWORD PTR [r8],edx
   1400401ce:	add    r8,0x4
   1400401d2:	mov    r9d,DWORD PTR [rbp-0x40]
   1400401d6:	shl    r9d,cl
   1400401d9:	sub    r12,rsi
   1400401dc:	jne    0x1400401b5
   1400401de:	movsxd r10,r10d
   1400401e1:	mov    r8,rdi
   1400401e4:	mov    r9,r10
   1400401e7:	neg    r9
   1400401ea:	cmp    r8,r10
   1400401ed:	jl     0x140040204
   1400401ef:	mov    rdx,r8
   1400401f2:	shl    rdx,0x2
   1400401f6:	lea    rax,[rdx+r9*4]
   1400401fa:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   1400401fe:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   140040202:	jmp    0x140040209
   140040204:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   140040209:	sub    r8,rsi
   14004020c:	jns    0x1400401ea
   14004020e:	mov    r8d,ebx
   140040211:	mov    ebx,edi
   140040213:	jmp    0x14004035d
   140040218:	mov    eax,DWORD PTR [rip+0x4624e]        # 0x14008646c
   14004021e:	cdq    
   14004021f:	and    edx,r15d
   140040222:	add    eax,edx
   140040224:	cmp    edi,DWORD PTR [rip+0x46236]        # 0x140086460
   14004022a:	jl     0x1400402cf
   140040230:	mov    r10d,eax
   140040233:	and    eax,r15d
   140040236:	mov    edi,0x20
   14004023b:	sub    eax,edx
   14004023d:	mov    QWORD PTR [rbp-0x30],rbx
   140040241:	bts    DWORD PTR [rbp-0x30],0x1f
   140040246:	mov    ecx,eax
   140040248:	sar    r10d,0x5
   14004024c:	mov    DWORD PTR [rbp-0x28],ebx
   14004024f:	shl    r14d,cl
   140040252:	mov    r11d,eax
   140040255:	mov    r9d,ebx
   140040258:	not    r14d
   14004025b:	sub    edi,eax
   14004025d:	lea    r8,[rbp-0x30]
   140040261:	mov    edx,DWORD PTR [r8]
   140040264:	mov    ecx,r11d
   140040267:	mov    eax,edx
   140040269:	shr    edx,cl
   14004026b:	mov    ecx,edi
   14004026d:	or     edx,r9d
   140040270:	and    eax,r14d
   140040273:	mov    DWORD PTR [rbp-0x40],eax
   140040276:	mov    DWORD PTR [r8],edx
   140040279:	add    r8,0x4
   14004027d:	mov    r9d,DWORD PTR [rbp-0x40]
   140040281:	shl    r9d,cl
   140040284:	sub    r12,rsi
   140040287:	jne    0x140040261
   140040289:	movsxd r9,r10d
   14004028c:	lea    edi,[r12+0x2]
   140040291:	mov    r8,r9
   140040294:	neg    r8
   140040297:	cmp    rdi,r9
   14004029a:	jl     0x1400402b1
   14004029c:	mov    rdx,rdi
   14004029f:	shl    rdx,0x2
   1400402a3:	lea    rax,[rdx+r8*4]
   1400402a7:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   1400402ab:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   1400402af:	jmp    0x1400402b5
   1400402b1:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   1400402b5:	sub    rdi,rsi
   1400402b8:	jns    0x140040297
   1400402ba:	mov    r8d,DWORD PTR [rip+0x461b3]        # 0x140086474
   1400402c1:	mov    ebx,esi
   1400402c3:	add    r8d,DWORD PTR [rip+0x46196]        # 0x140086460
   1400402ca:	jmp    0x14004035d
   1400402cf:	mov    r8d,DWORD PTR [rip+0x4619e]        # 0x140086474
   1400402d6:	btr    DWORD PTR [rbp-0x30],0x1f
   1400402db:	mov    r11d,eax
   1400402de:	and    eax,r15d
   1400402e1:	add    r8d,edi
   1400402e4:	mov    r13d,0x20
   1400402ea:	sub    eax,edx
   1400402ec:	sar    r11d,0x5
   1400402f0:	mov    r10d,ebx
   1400402f3:	mov    ecx,eax
   1400402f5:	mov    edi,eax
   1400402f7:	lea    r9,[rbp-0x30]
   1400402fb:	shl    r14d,cl
   1400402fe:	sub    r13d,eax
   140040301:	not    r14d
   140040304:	mov    edx,DWORD PTR [r9]
   140040307:	mov    ecx,edi
   140040309:	mov    eax,edx
   14004030b:	shr    edx,cl
   14004030d:	mov    ecx,r13d
   140040310:	or     edx,r10d
   140040313:	and    eax,r14d
   140040316:	mov    DWORD PTR [rbp-0x40],eax
   140040319:	mov    DWORD PTR [r9],edx
   14004031c:	add    r9,0x4
   140040320:	mov    r10d,DWORD PTR [rbp-0x40]
   140040324:	shl    r10d,cl
   140040327:	sub    r12,rsi
   14004032a:	jne    0x140040304
   14004032c:	movsxd r10,r11d
   14004032f:	lea    edi,[r12+0x2]
   140040334:	mov    r9,r10
   140040337:	neg    r9
   14004033a:	cmp    rdi,r10
   14004033d:	jl     0x140040354
   14004033f:	mov    rdx,rdi
   140040342:	shl    rdx,0x2
   140040346:	lea    rax,[rdx+r9*4]
   14004034a:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14004034e:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   140040352:	jmp    0x140040358
   140040354:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   140040358:	sub    rdi,rsi
   14004035b:	jns    0x14004033a
   14004035d:	mov    rdx,QWORD PTR [rbp-0x38]
   140040361:	sub    r15d,DWORD PTR [rip+0x46104]        # 0x14008646c
   140040368:	mov    cl,r15b
   14004036b:	shl    r8d,cl
   14004036e:	neg    DWORD PTR [rbp-0x3c]
   140040371:	sbb    eax,eax
   140040373:	and    eax,0x80000000
   140040378:	or     r8d,eax
   14004037b:	mov    eax,DWORD PTR [rip+0x460ef]        # 0x140086470
   140040381:	or     r8d,DWORD PTR [rbp-0x30]
   140040385:	cmp    eax,0x40
   140040388:	jne    0x140040395
   14004038a:	mov    eax,DWORD PTR [rbp-0x2c]
   14004038d:	mov    DWORD PTR [rdx+0x4],r8d
   140040391:	mov    DWORD PTR [rdx],eax
   140040393:	jmp    0x14004039d
   140040395:	cmp    eax,0x20
   140040398:	jne    0x14004039d
   14004039a:	mov    DWORD PTR [rdx],r8d
   14004039d:	mov    eax,ebx
   14004039f:	mov    rcx,QWORD PTR [rbp-0x10]
   1400403a3:	xor    rcx,rsp
   1400403a6:	call   0x140032f00
   1400403ab:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400403b3:	add    rsp,0x60
   1400403b7:	pop    r15
   1400403b9:	pop    r14
   1400403bb:	pop    r13
   1400403bd:	pop    r12
   1400403bf:	pop    rdi
   1400403c0:	pop    rsi
   1400403c1:	pop    rbp
   1400403c2:	ret    
   1400403c3:	int3   
   1400403c4:	mov    QWORD PTR [rsp+0x18],rbx
   1400403c9:	push   rbp
   1400403ca:	push   rsi
   1400403cb:	push   rdi
   1400403cc:	push   r12
   1400403ce:	push   r13
   1400403d0:	push   r14
   1400403d2:	push   r15
   1400403d4:	mov    rbp,rsp
   1400403d7:	sub    rsp,0x60
   1400403db:	mov    rax,QWORD PTR [rip+0x44cc6]        # 0x1400850a8
   1400403e2:	xor    rax,rsp
   1400403e5:	mov    QWORD PTR [rbp-0x10],rax
   1400403e9:	movzx  eax,WORD PTR [rcx+0xa]
   1400403ed:	xor    ebx,ebx
   1400403ef:	mov    r15d,0x1f
   1400403f5:	mov    edi,eax
   1400403f7:	and    eax,0x8000
   1400403fc:	mov    QWORD PTR [rbp-0x38],rdx
   140040400:	mov    DWORD PTR [rbp-0x3c],eax
   140040403:	mov    eax,DWORD PTR [rcx+0x6]
   140040406:	and    edi,0x7fff
   14004040c:	mov    DWORD PTR [rbp-0x30],eax
   14004040f:	mov    eax,DWORD PTR [rcx+0x2]
   140040412:	sub    edi,0x3fff
   140040418:	mov    DWORD PTR [rbp-0x2c],eax
   14004041b:	movzx  eax,WORD PTR [rcx]
   14004041e:	lea    esi,[rbx+0x1]
   140040421:	shl    eax,0x10
   140040424:	lea    r12d,[r15-0x1c]
   140040428:	mov    DWORD PTR [rbp-0x28],eax
   14004042b:	cmp    edi,0xffffc001
   140040431:	jne    0x14004045c
   140040433:	mov    r8d,ebx
   140040436:	mov    eax,ebx
   140040438:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14004043c:	jne    0x14004044b
   14004043e:	add    rax,rsi
   140040441:	cmp    rax,r12
   140040444:	jl     0x140040438
   140040446:	jmp    0x14004092d
   14004044b:	mov    QWORD PTR [rbp-0x30],rbx
   14004044f:	mov    DWORD PTR [rbp-0x28],ebx
   140040452:	mov    ebx,0x2
   140040457:	jmp    0x14004092d
   14004045c:	mov    r9d,DWORD PTR [rip+0x4601d]        # 0x140086480
   140040463:	lea    rcx,[rbp-0x30]
   140040467:	mov    r11d,r15d
   14004046a:	mov    rax,QWORD PTR [rcx]
   14004046d:	or     r14d,0xffffffff
   140040471:	mov    DWORD PTR [rbp-0x40],edi
   140040474:	mov    QWORD PTR [rbp-0x20],rax
   140040478:	mov    eax,DWORD PTR [rcx+0x8]
   14004047b:	mov    r13d,ebx
   14004047e:	mov    DWORD PTR [rbp-0x18],eax
   140040481:	mov    eax,r9d
   140040484:	cdq    
   140040485:	and    edx,r15d
   140040488:	add    eax,edx
   14004048a:	mov    r10d,eax
   14004048d:	and    eax,r15d
   140040490:	sub    eax,edx
   140040492:	sar    r10d,0x5
   140040496:	sub    r11d,eax
   140040499:	movsxd rax,r10d
   14004049c:	mov    ecx,DWORD PTR [rbp+rax*4-0x30]
   1400404a0:	bt     ecx,r11d
   1400404a4:	jae    0x14004053f
   1400404aa:	mov    ecx,r11d
   1400404ad:	mov    eax,r14d
   1400404b0:	movsxd r8,r10d
   1400404b3:	shl    eax,cl
   1400404b5:	not    eax
   1400404b7:	test   DWORD PTR [rbp+r8*4-0x30],eax
   1400404bc:	jne    0x1400404d6
   1400404be:	lea    eax,[rsi+r8*1]
   1400404c2:	cdqe   
   1400404c4:	jmp    0x1400404cf
   1400404c6:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   1400404ca:	jne    0x1400404d6
   1400404cc:	add    rax,rsi
   1400404cf:	cmp    rax,r12
   1400404d2:	jl     0x1400404c6
   1400404d4:	jmp    0x14004053f
   1400404d6:	lea    eax,[r9-0x1]
   1400404da:	mov    ecx,r15d
   1400404dd:	cdq    
   1400404de:	and    edx,r15d
   1400404e1:	add    eax,edx
   1400404e3:	mov    r8d,eax
   1400404e6:	and    eax,r15d
   1400404e9:	sub    eax,edx
   1400404eb:	sar    r8d,0x5
   1400404ef:	mov    edx,esi
   1400404f1:	sub    ecx,eax
   1400404f3:	movsxd r9,r8d
   1400404f6:	mov    eax,DWORD PTR [rbp+r9*4-0x30]
   1400404fb:	shl    edx,cl
   1400404fd:	lea    ecx,[rax+rdx*1]
   140040500:	cmp    ecx,eax
   140040502:	jb     0x140040508
   140040504:	cmp    ecx,edx
   140040506:	jae    0x14004050b
   140040508:	mov    r13d,esi
   14004050b:	sub    r8d,esi
   14004050e:	mov    DWORD PTR [rbp+r9*4-0x30],ecx
   140040513:	movsxd rdx,r8d
   140040516:	js     0x14004053f
   140040518:	test   r13d,r13d
   14004051b:	je     0x14004053f
   14004051d:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   140040521:	mov    r13d,ebx
   140040524:	lea    r8d,[rax+0x1]
   140040528:	cmp    r8d,eax
   14004052b:	jb     0x140040532
   14004052d:	cmp    r8d,esi
   140040530:	jae    0x140040535
   140040532:	mov    r13d,esi
   140040535:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14004053a:	sub    rdx,rsi
   14004053d:	jns    0x140040518
   14004053f:	mov    ecx,r11d
   140040542:	mov    eax,r14d
   140040545:	shl    eax,cl
   140040547:	movsxd rcx,r10d
   14004054a:	and    DWORD PTR [rbp+rcx*4-0x30],eax
   14004054e:	lea    eax,[r10+0x1]
   140040552:	movsxd rdx,eax
   140040555:	cmp    rdx,r12
   140040558:	jge    0x140040570
   14004055a:	lea    rcx,[rbp+rdx*4-0x30]
   14004055f:	mov    r8,r12
   140040562:	sub    r8,rdx
   140040565:	xor    edx,edx
   140040567:	shl    r8,0x2
   14004056b:	call   0x140036dc0
   140040570:	test   r13d,r13d
   140040573:	je     0x140040577
   140040575:	add    edi,esi
   140040577:	mov    edx,DWORD PTR [rip+0x45eff]        # 0x14008647c
   14004057d:	mov    eax,edx
   14004057f:	sub    eax,DWORD PTR [rip+0x45efb]        # 0x140086480
   140040585:	cmp    edi,eax
   140040587:	jge    0x14004059d
   140040589:	mov    QWORD PTR [rbp-0x30],rbx
   14004058d:	mov    DWORD PTR [rbp-0x28],ebx
   140040590:	mov    r8d,ebx
   140040593:	mov    ebx,0x2
   140040598:	jmp    0x140040929
   14004059d:	cmp    edi,edx
   14004059f:	jg     0x1400407e4
   1400405a5:	sub    edx,DWORD PTR [rbp-0x40]
   1400405a8:	lea    rax,[rbp-0x20]
   1400405ac:	mov    edi,r14d
   1400405af:	mov    rcx,QWORD PTR [rax]
   1400405b2:	mov    r9d,ebx
   1400405b5:	lea    r8,[rbp-0x30]
   1400405b9:	mov    QWORD PTR [rbp-0x30],rcx
   1400405bd:	mov    ecx,DWORD PTR [rax+0x8]
   1400405c0:	mov    eax,edx
   1400405c2:	cdq    
   1400405c3:	mov    DWORD PTR [rbp-0x28],ecx
   1400405c6:	mov    r10,r12
   1400405c9:	and    edx,r15d
   1400405cc:	add    eax,edx
   1400405ce:	mov    r11d,eax
   1400405d1:	and    eax,r15d
   1400405d4:	mov    r15d,0x20
   1400405da:	sub    eax,edx
   1400405dc:	sar    r11d,0x5
   1400405e0:	mov    ecx,eax
   1400405e2:	mov    r13d,eax
   1400405e5:	shl    edi,cl
   1400405e7:	sub    r15d,eax
   1400405ea:	not    edi
   1400405ec:	mov    edx,DWORD PTR [r8]
   1400405ef:	mov    ecx,r13d
   1400405f2:	mov    eax,edx
   1400405f4:	shr    edx,cl
   1400405f6:	mov    ecx,r15d
   1400405f9:	or     edx,r9d
   1400405fc:	and    eax,edi
   1400405fe:	mov    DWORD PTR [rbp-0x40],eax
   140040601:	mov    DWORD PTR [r8],edx
   140040604:	add    r8,0x4
   140040608:	mov    r9d,DWORD PTR [rbp-0x40]
   14004060c:	shl    r9d,cl
   14004060f:	sub    r10,rsi
   140040612:	jne    0x1400405ec
   140040614:	lea    edi,[r10+0x2]
   140040618:	movsxd r10,r11d
   14004061b:	mov    r9,r10
   14004061e:	mov    r8d,edi
   140040621:	neg    r9
   140040624:	cmp    r8,r10
   140040627:	jl     0x14004063e
   140040629:	mov    rdx,r8
   14004062c:	shl    rdx,0x2
   140040630:	lea    rax,[rdx+r9*4]
   140040634:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   140040638:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14004063c:	jmp    0x140040643
   14004063e:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   140040643:	sub    r8,rsi
   140040646:	jns    0x140040624
   140040648:	mov    r9d,DWORD PTR [rip+0x45e31]        # 0x140086480
   14004064f:	mov    r13d,0x1f
   140040655:	mov    eax,r9d
   140040658:	mov    r11d,r13d
   14004065b:	cdq    
   14004065c:	and    edx,r13d
   14004065f:	add    eax,edx
   140040661:	mov    r10d,eax
   140040664:	and    eax,r13d
   140040667:	sar    r10d,0x5
   14004066b:	sub    eax,edx
   14004066d:	movsxd r15,r10d
   140040670:	sub    r11d,eax
   140040673:	mov    ecx,DWORD PTR [rbp+r15*4-0x30]
   140040678:	bt     ecx,r11d
   14004067c:	jae    0x140040719
   140040682:	mov    ecx,r11d
   140040685:	mov    eax,r14d
   140040688:	movsxd r8,r10d
   14004068b:	shl    eax,cl
   14004068d:	not    eax
   14004068f:	test   DWORD PTR [rbp+r8*4-0x30],eax
   140040694:	jne    0x1400406ae
   140040696:	lea    eax,[rsi+r8*1]
   14004069a:	cdqe   
   14004069c:	jmp    0x1400406a7
   14004069e:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   1400406a2:	jne    0x1400406ae
   1400406a4:	add    rax,rsi
   1400406a7:	cmp    rax,r12
   1400406aa:	jl     0x14004069e
   1400406ac:	jmp    0x140040719
   1400406ae:	lea    eax,[r9-0x1]
   1400406b2:	mov    ecx,r13d
   1400406b5:	mov    r9d,esi
   1400406b8:	cdq    
   1400406b9:	and    edx,r13d
   1400406bc:	add    eax,edx
   1400406be:	mov    r8d,eax
   1400406c1:	and    eax,r13d
   1400406c4:	sub    eax,edx
   1400406c6:	sar    r8d,0x5
   1400406ca:	sub    ecx,eax
   1400406cc:	movsxd r13,r8d
   1400406cf:	mov    eax,DWORD PTR [rbp+r13*4-0x30]
   1400406d4:	shl    r9d,cl
   1400406d7:	mov    ecx,ebx
   1400406d9:	lea    edx,[rax+r9*1]
   1400406dd:	cmp    edx,eax
   1400406df:	jb     0x1400406e6
   1400406e1:	cmp    edx,r9d
   1400406e4:	jae    0x1400406e8
   1400406e6:	mov    ecx,esi
   1400406e8:	sub    r8d,esi
   1400406eb:	mov    DWORD PTR [rbp+r13*4-0x30],edx
   1400406f0:	movsxd rdx,r8d
   1400406f3:	js     0x140040719
   1400406f5:	test   ecx,ecx
   1400406f7:	je     0x140040719
   1400406f9:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   1400406fd:	mov    ecx,ebx
   1400406ff:	lea    r8d,[rax+0x1]
   140040703:	cmp    r8d,eax
   140040706:	jb     0x14004070d
   140040708:	cmp    r8d,esi
   14004070b:	jae    0x14004070f
   14004070d:	mov    ecx,esi
   14004070f:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   140040714:	sub    rdx,rsi
   140040717:	jns    0x1400406f5
   140040719:	mov    ecx,r11d
   14004071c:	mov    eax,r14d
   14004071f:	shl    eax,cl
   140040721:	and    DWORD PTR [rbp+r15*4-0x30],eax
   140040726:	lea    eax,[r10+0x1]
   14004072a:	movsxd rdx,eax
   14004072d:	cmp    rdx,r12
   140040730:	jge    0x140040748
   140040732:	lea    rcx,[rbp+rdx*4-0x30]
   140040737:	mov    r8,r12
   14004073a:	sub    r8,rdx
   14004073d:	xor    edx,edx
   14004073f:	shl    r8,0x2
   140040743:	call   0x140036dc0
   140040748:	mov    eax,DWORD PTR [rip+0x45d36]        # 0x140086484
   14004074e:	mov    r15d,0x1f
   140040754:	mov    r9d,ebx
   140040757:	inc    eax
   140040759:	lea    r13d,[r15+0x1]
   14004075d:	lea    r8,[rbp-0x30]
   140040761:	cdq    
   140040762:	and    edx,r15d
   140040765:	add    eax,edx
   140040767:	mov    r10d,eax
   14004076a:	and    eax,r15d
   14004076d:	sub    eax,edx
   14004076f:	sar    r10d,0x5
   140040773:	mov    ecx,eax
   140040775:	mov    r11d,eax
   140040778:	shl    r14d,cl
   14004077b:	sub    r13d,eax
   14004077e:	not    r14d
   140040781:	mov    edx,DWORD PTR [r8]
   140040784:	mov    ecx,r11d
   140040787:	mov    eax,edx
   140040789:	shr    edx,cl
   14004078b:	mov    ecx,r13d
   14004078e:	or     edx,r9d
   140040791:	and    eax,r14d
   140040794:	mov    DWORD PTR [rbp-0x40],eax
   140040797:	mov    DWORD PTR [r8],edx
   14004079a:	add    r8,0x4
   14004079e:	mov    r9d,DWORD PTR [rbp-0x40]
   1400407a2:	shl    r9d,cl
   1400407a5:	sub    r12,rsi
   1400407a8:	jne    0x140040781
   1400407aa:	movsxd r10,r10d
   1400407ad:	mov    r8,rdi
   1400407b0:	mov    r9,r10
   1400407b3:	neg    r9
   1400407b6:	cmp    r8,r10
   1400407b9:	jl     0x1400407d0
   1400407bb:	mov    rdx,r8
   1400407be:	shl    rdx,0x2
   1400407c2:	lea    rax,[rdx+r9*4]
   1400407c6:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   1400407ca:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   1400407ce:	jmp    0x1400407d5
   1400407d0:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   1400407d5:	sub    r8,rsi
   1400407d8:	jns    0x1400407b6
   1400407da:	mov    r8d,ebx
   1400407dd:	mov    ebx,edi
   1400407df:	jmp    0x140040929
   1400407e4:	mov    eax,DWORD PTR [rip+0x45c9a]        # 0x140086484
   1400407ea:	cdq    
   1400407eb:	and    edx,r15d
   1400407ee:	add    eax,edx
   1400407f0:	cmp    edi,DWORD PTR [rip+0x45c82]        # 0x140086478
   1400407f6:	jl     0x14004089b
   1400407fc:	mov    r10d,eax
   1400407ff:	and    eax,r15d
   140040802:	mov    edi,0x20
   140040807:	sub    eax,edx
   140040809:	mov    QWORD PTR [rbp-0x30],rbx
   14004080d:	bts    DWORD PTR [rbp-0x30],0x1f
   140040812:	mov    ecx,eax
   140040814:	sar    r10d,0x5
   140040818:	mov    DWORD PTR [rbp-0x28],ebx
   14004081b:	shl    r14d,cl
   14004081e:	mov    r11d,eax
   140040821:	mov    r9d,ebx
   140040824:	not    r14d
   140040827:	sub    edi,eax
   140040829:	lea    r8,[rbp-0x30]
   14004082d:	mov    edx,DWORD PTR [r8]
   140040830:	mov    ecx,r11d
   140040833:	mov    eax,edx
   140040835:	shr    edx,cl
   140040837:	mov    ecx,edi
   140040839:	or     edx,r9d
   14004083c:	and    eax,r14d
   14004083f:	mov    DWORD PTR [rbp-0x40],eax
   140040842:	mov    DWORD PTR [r8],edx
   140040845:	add    r8,0x4
   140040849:	mov    r9d,DWORD PTR [rbp-0x40]
   14004084d:	shl    r9d,cl
   140040850:	sub    r12,rsi
   140040853:	jne    0x14004082d
   140040855:	movsxd r9,r10d
   140040858:	lea    edi,[r12+0x2]
   14004085d:	mov    r8,r9
   140040860:	neg    r8
   140040863:	cmp    rdi,r9
   140040866:	jl     0x14004087d
   140040868:	mov    rdx,rdi
   14004086b:	shl    rdx,0x2
   14004086f:	lea    rax,[rdx+r8*4]
   140040873:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   140040877:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14004087b:	jmp    0x140040881
   14004087d:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   140040881:	sub    rdi,rsi
   140040884:	jns    0x140040863
   140040886:	mov    r8d,DWORD PTR [rip+0x45bff]        # 0x14008648c
   14004088d:	mov    ebx,esi
   14004088f:	add    r8d,DWORD PTR [rip+0x45be2]        # 0x140086478
   140040896:	jmp    0x140040929
   14004089b:	mov    r8d,DWORD PTR [rip+0x45bea]        # 0x14008648c
   1400408a2:	btr    DWORD PTR [rbp-0x30],0x1f
   1400408a7:	mov    r11d,eax
   1400408aa:	and    eax,r15d
   1400408ad:	add    r8d,edi
   1400408b0:	mov    r13d,0x20
   1400408b6:	sub    eax,edx
   1400408b8:	sar    r11d,0x5
   1400408bc:	mov    r10d,ebx
   1400408bf:	mov    ecx,eax
   1400408c1:	mov    edi,eax
   1400408c3:	lea    r9,[rbp-0x30]
   1400408c7:	shl    r14d,cl
   1400408ca:	sub    r13d,eax
   1400408cd:	not    r14d
   1400408d0:	mov    edx,DWORD PTR [r9]
   1400408d3:	mov    ecx,edi
   1400408d5:	mov    eax,edx
   1400408d7:	shr    edx,cl
   1400408d9:	mov    ecx,r13d
   1400408dc:	or     edx,r10d
   1400408df:	and    eax,r14d
   1400408e2:	mov    DWORD PTR [rbp-0x40],eax
   1400408e5:	mov    DWORD PTR [r9],edx
   1400408e8:	add    r9,0x4
   1400408ec:	mov    r10d,DWORD PTR [rbp-0x40]
   1400408f0:	shl    r10d,cl
   1400408f3:	sub    r12,rsi
   1400408f6:	jne    0x1400408d0
   1400408f8:	movsxd r10,r11d
   1400408fb:	lea    edi,[r12+0x2]
   140040900:	mov    r9,r10
   140040903:	neg    r9
   140040906:	cmp    rdi,r10
   140040909:	jl     0x140040920
   14004090b:	mov    rdx,rdi
   14004090e:	shl    rdx,0x2
   140040912:	lea    rax,[rdx+r9*4]
   140040916:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14004091a:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14004091e:	jmp    0x140040924
   140040920:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   140040924:	sub    rdi,rsi
   140040927:	jns    0x140040906
   140040929:	mov    rdx,QWORD PTR [rbp-0x38]
   14004092d:	sub    r15d,DWORD PTR [rip+0x45b50]        # 0x140086484
   140040934:	mov    cl,r15b
   140040937:	shl    r8d,cl
   14004093a:	neg    DWORD PTR [rbp-0x3c]
   14004093d:	sbb    eax,eax
   14004093f:	and    eax,0x80000000
   140040944:	or     r8d,eax
   140040947:	mov    eax,DWORD PTR [rip+0x45b3b]        # 0x140086488
   14004094d:	or     r8d,DWORD PTR [rbp-0x30]
   140040951:	cmp    eax,0x40
   140040954:	jne    0x140040961
   140040956:	mov    eax,DWORD PTR [rbp-0x2c]
   140040959:	mov    DWORD PTR [rdx+0x4],r8d
   14004095d:	mov    DWORD PTR [rdx],eax
   14004095f:	jmp    0x140040969
   140040961:	cmp    eax,0x20
   140040964:	jne    0x140040969
   140040966:	mov    DWORD PTR [rdx],r8d
   140040969:	mov    eax,ebx
   14004096b:	mov    rcx,QWORD PTR [rbp-0x10]
   14004096f:	xor    rcx,rsp
   140040972:	call   0x140032f00
   140040977:	mov    rbx,QWORD PTR [rsp+0xb0]
   14004097f:	add    rsp,0x60
   140040983:	pop    r15
   140040985:	pop    r14
   140040987:	pop    r13
   140040989:	pop    r12
   14004098b:	pop    rdi
   14004098c:	pop    rsi
   14004098d:	pop    rbp
   14004098e:	ret    
   14004098f:	int3   
   140040990:	rex push rbx
   140040992:	sub    rsp,0x40
   140040996:	mov    rbx,rcx
   140040999:	lea    rcx,[rsp+0x20]
   14004099e:	call   0x14003370c
   1400409a3:	movsx  ecx,BYTE PTR [rbx]
   1400409a6:	call   0x140033cac
   1400409ab:	cmp    eax,0x65
   1400409ae:	je     0x1400409bf
   1400409b0:	inc    rbx
   1400409b3:	movzx  ecx,BYTE PTR [rbx]
   1400409b6:	call   0x140034a9c
   1400409bb:	test   eax,eax
   1400409bd:	jne    0x1400409b0
   1400409bf:	movsx  ecx,BYTE PTR [rbx]
   1400409c2:	call   0x140033cac
   1400409c7:	cmp    eax,0x78
   1400409ca:	jne    0x1400409d0
   1400409cc:	add    rbx,0x2
   1400409d0:	mov    rax,QWORD PTR [rsp+0x20]
   1400409d5:	mov    dl,BYTE PTR [rbx]
   1400409d7:	mov    rcx,QWORD PTR [rax+0x128]
   1400409de:	mov    rax,QWORD PTR [rcx]
   1400409e1:	mov    cl,BYTE PTR [rax]
   1400409e3:	mov    BYTE PTR [rbx],cl
   1400409e5:	inc    rbx
   1400409e8:	mov    al,BYTE PTR [rbx]
   1400409ea:	mov    BYTE PTR [rbx],dl
   1400409ec:	mov    dl,al
   1400409ee:	mov    al,BYTE PTR [rbx]
   1400409f0:	inc    rbx
   1400409f3:	test   al,al
   1400409f5:	jne    0x1400409e8
   1400409f7:	cmp    BYTE PTR [rsp+0x38],al
   1400409fb:	je     0x140040a09
   1400409fd:	mov    rax,QWORD PTR [rsp+0x30]
   140040a02:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140040a09:	add    rsp,0x40
   140040a0d:	pop    rbx
   140040a0e:	ret    
   140040a0f:	int3   
   140040a10:	rex push rbx
   140040a12:	sub    rsp,0x40
   140040a16:	mov    rbx,rcx
   140040a19:	lea    rcx,[rsp+0x20]
   140040a1e:	call   0x14003370c
   140040a23:	mov    r11b,BYTE PTR [rbx]
   140040a26:	mov    rcx,QWORD PTR [rsp+0x20]
   140040a2b:	test   r11b,r11b
   140040a2e:	je     0x140040a4c
   140040a30:	mov    rax,QWORD PTR [rcx+0x128]
   140040a37:	mov    rdx,QWORD PTR [rax]
   140040a3a:	mov    al,BYTE PTR [rdx]
   140040a3c:	cmp    r11b,al
   140040a3f:	je     0x140040a4c
   140040a41:	inc    rbx
   140040a44:	mov    r11b,BYTE PTR [rbx]
   140040a47:	test   r11b,r11b
   140040a4a:	jne    0x140040a3c
   140040a4c:	mov    al,BYTE PTR [rbx]
   140040a4e:	inc    rbx
   140040a51:	test   al,al
   140040a53:	je     0x140040a94
   140040a55:	jmp    0x140040a62
   140040a57:	cmp    al,0x65
   140040a59:	je     0x140040a68
   140040a5b:	cmp    al,0x45
   140040a5d:	je     0x140040a68
   140040a5f:	inc    rbx
   140040a62:	mov    al,BYTE PTR [rbx]
   140040a64:	test   al,al
   140040a66:	jne    0x140040a57
   140040a68:	mov    rdx,rbx
   140040a6b:	dec    rbx
   140040a6e:	cmp    BYTE PTR [rbx],0x30
   140040a71:	je     0x140040a6b
   140040a73:	mov    rax,QWORD PTR [rcx+0x128]
   140040a7a:	mov    rcx,QWORD PTR [rax]
   140040a7d:	mov    al,BYTE PTR [rcx]
   140040a7f:	cmp    BYTE PTR [rbx],al
   140040a81:	jne    0x140040a86
   140040a83:	dec    rbx
   140040a86:	mov    al,BYTE PTR [rdx]
   140040a88:	inc    rbx
   140040a8b:	inc    rdx
   140040a8e:	mov    BYTE PTR [rbx],al
   140040a90:	test   al,al
   140040a92:	jne    0x140040a86
   140040a94:	cmp    BYTE PTR [rsp+0x38],0x0
   140040a99:	je     0x140040aa7
   140040a9b:	mov    rax,QWORD PTR [rsp+0x30]
   140040aa0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140040aa7:	add    rsp,0x40
   140040aab:	pop    rbx
   140040aac:	ret    
   140040aad:	int3   
   140040aae:	int3   
   140040aaf:	int3   
   140040ab0:	movsd  xmm0,QWORD PTR [rcx]
   140040ab4:	comisd xmm0,QWORD PTR [rip+0x36df4]        # 0x1400778b0
   140040abc:	jb     0x140040ac4
   140040abe:	mov    eax,0x1
   140040ac3:	ret    
   140040ac4:	xor    eax,eax
   140040ac6:	ret    
   140040ac7:	int3   
   140040ac8:	rex push rbx
   140040aca:	sub    rsp,0x30
   140040ace:	mov    rax,r8
   140040ad1:	mov    rbx,rdx
   140040ad4:	mov    r8,r9
   140040ad7:	mov    rdx,rax
   140040ada:	test   ecx,ecx
   140040adc:	je     0x140040af2
   140040ade:	lea    rcx,[rsp+0x20]
   140040ae3:	call   0x140041d4c
   140040ae8:	mov    r11,QWORD PTR [rsp+0x20]
   140040aed:	mov    QWORD PTR [rbx],r11
   140040af0:	jmp    0x140040b04
   140040af2:	lea    rcx,[rsp+0x40]
   140040af7:	call   0x140041e4c
   140040afc:	mov    r11d,DWORD PTR [rsp+0x40]
   140040b01:	mov    DWORD PTR [rbx],r11d
   140040b04:	add    rsp,0x30
   140040b08:	pop    rbx
   140040b09:	ret    
   140040b0a:	int3   
   140040b0b:	int3   
   140040b0c:	xor    r9d,r9d
   140040b0f:	jmp    0x140040ac8
   140040b14:	xor    edx,edx
   140040b16:	jmp    0x140040990
   140040b1b:	int3   
   140040b1c:	xor    edx,edx
   140040b1e:	jmp    0x140040a10
   140040b23:	int3   
   140040b24:	mov    rax,rsp
   140040b27:	mov    QWORD PTR [rax+0x8],rbx
   140040b2b:	mov    QWORD PTR [rax+0x10],rbp
   140040b2f:	mov    QWORD PTR [rax+0x18],rsi
   140040b33:	mov    QWORD PTR [rax+0x20],rdi
   140040b37:	push   r12
   140040b39:	push   r13
   140040b3b:	push   r15
   140040b3d:	sub    rsp,0x50
   140040b41:	mov    r12,rdx
   140040b44:	mov    rdx,QWORD PTR [rsp+0xa0]
   140040b4c:	mov    rdi,rcx
   140040b4f:	lea    rcx,[rax-0x38]
   140040b53:	mov    r15d,r9d
   140040b56:	movsxd rbx,r8d
   140040b59:	call   0x14003370c
   140040b5e:	test   rdi,rdi
   140040b61:	jne    0x140040ba6
   140040b63:	call   0x140036858
   140040b68:	lea    ebx,[rdi+0x16]
   140040b6b:	mov    DWORD PTR [rax],ebx
   140040b6d:	call   0x1400367f0
   140040b72:	cmp    BYTE PTR [rsp+0x48],0x0
   140040b77:	je     0x140040b85
   140040b79:	mov    rcx,QWORD PTR [rsp+0x40]
   140040b7e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140040b85:	mov    eax,ebx
   140040b87:	lea    r11,[rsp+0x50]
   140040b8c:	mov    rbx,QWORD PTR [r11+0x20]
   140040b90:	mov    rbp,QWORD PTR [r11+0x28]
   140040b94:	mov    rsi,QWORD PTR [r11+0x30]
   140040b98:	mov    rdi,QWORD PTR [r11+0x38]
   140040b9c:	mov    rsp,r11
   140040b9f:	pop    r15
   140040ba1:	pop    r13
   140040ba3:	pop    r12
   140040ba5:	ret    
   140040ba6:	test   r12,r12
   140040ba9:	jne    0x140040bd1
   140040bab:	call   0x140036858
   140040bb0:	lea    ebx,[r12+0x16]
   140040bb5:	mov    DWORD PTR [rax],ebx
   140040bb7:	call   0x1400367f0
   140040bbc:	cmp    BYTE PTR [rsp+0x48],r12b
   140040bc1:	je     0x140040b85
   140040bc3:	mov    rax,QWORD PTR [rsp+0x40]
   140040bc8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140040bcf:	jmp    0x140040b85
   140040bd1:	xor    eax,eax
   140040bd3:	test   ebx,ebx
   140040bd5:	cmovg  eax,ebx
   140040bd8:	add    eax,0x9
   140040bdb:	cdqe   
   140040bdd:	cmp    r12,rax
   140040be0:	ja     0x140040bf1
   140040be2:	call   0x140036858
   140040be7:	mov    ebx,0x22
   140040bec:	jmp    0x140040b6b
   140040bf1:	cmp    BYTE PTR [rsp+0x98],0x0
   140040bf9:	mov    rsi,QWORD PTR [rsp+0x90]
   140040c01:	je     0x140040c37
   140040c03:	xor    ebp,ebp
   140040c05:	cmp    DWORD PTR [rsi],0x2d
   140040c08:	sete   bpl
   140040c0c:	xor    r13d,r13d
   140040c0f:	add    rbp,rdi
   140040c12:	test   ebx,ebx
   140040c14:	setg   r13b
   140040c18:	test   r13d,r13d
   140040c1b:	je     0x140040c37
   140040c1d:	mov    rcx,rbp
   140040c20:	call   0x140036550
   140040c25:	movsxd rcx,r13d
   140040c28:	mov    rdx,rbp
   140040c2b:	lea    r8,[rax+0x1]
   140040c2f:	add    rcx,rbp
   140040c32:	call   0x140033260
   140040c37:	cmp    DWORD PTR [rsi],0x2d
   140040c3a:	mov    rdx,rdi
   140040c3d:	jne    0x140040c46
   140040c3f:	mov    BYTE PTR [rdi],0x2d
   140040c42:	lea    rdx,[rdi+0x1]
   140040c46:	test   ebx,ebx
   140040c48:	jle    0x140040c65
   140040c4a:	mov    al,BYTE PTR [rdx+0x1]
   140040c4d:	mov    BYTE PTR [rdx],al
   140040c4f:	mov    rax,QWORD PTR [rsp+0x30]
   140040c54:	inc    rdx
   140040c57:	mov    rcx,QWORD PTR [rax+0x128]
   140040c5e:	mov    rax,QWORD PTR [rcx]
   140040c61:	mov    cl,BYTE PTR [rax]
   140040c63:	mov    BYTE PTR [rdx],cl
   140040c65:	xor    ecx,ecx
   140040c67:	lea    r8,[rip+0x29f9a]        # 0x14006ac08
   140040c6e:	cmp    BYTE PTR [rsp+0x98],cl
   140040c75:	sete   cl
   140040c78:	add    rbx,rdx
   140040c7b:	add    rbx,rcx
   140040c7e:	sub    rdi,rbx
   140040c81:	cmp    r12,0xffffffffffffffff
   140040c85:	mov    rcx,rbx
   140040c88:	lea    rdx,[r12+rdi*1]
   140040c8c:	cmove  rdx,r12
   140040c90:	call   0x1400336a8
   140040c95:	test   eax,eax
   140040c97:	jne    0x140040d3f
   140040c9d:	lea    rcx,[rbx+0x2]
   140040ca1:	test   r15d,r15d
   140040ca4:	je     0x140040ca9
   140040ca6:	mov    BYTE PTR [rbx],0x45
   140040ca9:	mov    rax,QWORD PTR [rsi+0x10]
   140040cad:	cmp    BYTE PTR [rax],0x30
   140040cb0:	je     0x140040d08
   140040cb2:	mov    r8d,DWORD PTR [rsi+0x4]
   140040cb6:	dec    r8d
   140040cb9:	jns    0x140040cc2
   140040cbb:	neg    r8d
   140040cbe:	mov    BYTE PTR [rbx+0x1],0x2d
   140040cc2:	cmp    r8d,0x64
   140040cc6:	jl     0x140040ce3
   140040cc8:	mov    eax,0x51eb851f
   140040ccd:	imul   r8d
   140040cd0:	sar    edx,0x5
   140040cd3:	mov    eax,edx
   140040cd5:	shr    eax,0x1f
   140040cd8:	add    edx,eax
   140040cda:	add    BYTE PTR [rbx+0x2],dl
   140040cdd:	imul   edx,edx,0xffffff9c
   140040ce0:	add    r8d,edx
   140040ce3:	cmp    r8d,0xa
   140040ce7:	jl     0x140040d04
   140040ce9:	mov    eax,0x66666667
   140040cee:	imul   r8d
   140040cf1:	sar    edx,0x2
   140040cf4:	mov    eax,edx
   140040cf6:	shr    eax,0x1f
   140040cf9:	add    edx,eax
   140040cfb:	add    BYTE PTR [rbx+0x3],dl
   140040cfe:	imul   edx,edx,0xfffffff6
   140040d01:	add    r8d,edx
   140040d04:	add    BYTE PTR [rbx+0x4],r8b
   140040d08:	test   BYTE PTR [rip+0x4956d],0x1        # 0x14008a27c
   140040d0f:	je     0x140040d25
   140040d11:	cmp    BYTE PTR [rcx],0x30
   140040d14:	jne    0x140040d25
   140040d16:	lea    rdx,[rcx+0x1]
   140040d1a:	mov    r8d,0x3
   140040d20:	call   0x140033260
   140040d25:	cmp    BYTE PTR [rsp+0x48],0x0
   140040d2a:	je     0x140040d38
   140040d2c:	mov    rax,QWORD PTR [rsp+0x40]
   140040d31:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140040d38:	xor    eax,eax
   140040d3a:	jmp    0x140040b87
   140040d3f:	and    QWORD PTR [rsp+0x20],0x0
   140040d45:	xor    r9d,r9d
   140040d48:	xor    r8d,r8d
   140040d4b:	xor    edx,edx
   140040d4d:	xor    ecx,ecx
   140040d4f:	call   0x14003674c
   140040d54:	int3   
   140040d55:	int3   
   140040d56:	int3   
   140040d57:	int3   
   140040d58:	rex push rbx
   140040d5a:	push   rbp
   140040d5b:	push   rsi
   140040d5c:	push   rdi
   140040d5d:	sub    rsp,0x88
   140040d64:	mov    rax,QWORD PTR [rip+0x4433d]        # 0x1400850a8
   140040d6b:	xor    rax,rsp
   140040d6e:	mov    QWORD PTR [rsp+0x70],rax
   140040d73:	mov    rcx,QWORD PTR [rcx]
   140040d76:	mov    rbx,r8
   140040d79:	mov    rdi,rdx
   140040d7c:	mov    esi,r9d
   140040d7f:	mov    ebp,0x16
   140040d84:	lea    r8,[rsp+0x58]
   140040d89:	lea    rdx,[rsp+0x40]
   140040d8e:	mov    r9d,ebp
   140040d91:	call   0x1400420e0
   140040d96:	test   rdi,rdi
   140040d99:	jne    0x140040dae
   140040d9b:	call   0x140036858
   140040da0:	mov    DWORD PTR [rax],ebp
   140040da2:	call   0x1400367f0
   140040da7:	mov    eax,ebp
   140040da9:	jmp    0x140040e36
   140040dae:	test   rbx,rbx
   140040db1:	je     0x140040d9b
   140040db3:	or     rdx,0xffffffffffffffff
   140040db7:	cmp    rbx,rdx
   140040dba:	je     0x140040dd6
   140040dbc:	xor    eax,eax
   140040dbe:	cmp    DWORD PTR [rsp+0x40],0x2d
   140040dc3:	mov    rdx,rbx
   140040dc6:	sete   al
   140040dc9:	sub    rdx,rax
   140040dcc:	xor    eax,eax
   140040dce:	test   esi,esi
   140040dd0:	setg   al
   140040dd3:	sub    rdx,rax
   140040dd6:	xor    eax,eax
   140040dd8:	cmp    DWORD PTR [rsp+0x40],0x2d
   140040ddd:	lea    r8d,[rsi+0x1]
   140040de1:	sete   al
   140040de4:	xor    ecx,ecx
   140040de6:	test   esi,esi
   140040de8:	setg   cl
   140040deb:	add    rax,rdi
   140040dee:	lea    r9,[rsp+0x40]
   140040df3:	add    rcx,rax
   140040df6:	call   0x140041f4c
   140040dfb:	test   eax,eax
   140040dfd:	je     0x140040e04
   140040dff:	mov    BYTE PTR [rdi],0x0
   140040e02:	jmp    0x140040e36
   140040e04:	mov    rax,QWORD PTR [rsp+0xd8]
   140040e0c:	mov    r9d,DWORD PTR [rsp+0xd0]
   140040e14:	mov    r8d,esi
   140040e17:	mov    QWORD PTR [rsp+0x30],rax
   140040e1c:	lea    rax,[rsp+0x40]
   140040e21:	mov    rdx,rbx
   140040e24:	mov    rcx,rdi
   140040e27:	mov    BYTE PTR [rsp+0x28],0x0
   140040e2c:	mov    QWORD PTR [rsp+0x20],rax
   140040e31:	call   0x140040b24
   140040e36:	mov    rcx,QWORD PTR [rsp+0x70]
   140040e3b:	xor    rcx,rsp
   140040e3e:	call   0x140032f00
   140040e43:	add    rsp,0x88
   140040e4a:	pop    rdi
   140040e4b:	pop    rsi
   140040e4c:	pop    rbp
   140040e4d:	pop    rbx
   140040e4e:	ret    
   140040e4f:	int3   
   140040e50:	mov    QWORD PTR [rsp+0x10],rbx
   140040e55:	mov    QWORD PTR [rsp+0x18],rdi
   140040e5a:	push   rbp
   140040e5b:	push   r12
   140040e5d:	push   r13
   140040e5f:	push   r14
   140040e61:	push   r15
   140040e63:	mov    rbp,rsp
   140040e66:	sub    rsp,0x50
   140040e6a:	mov    rdi,rdx
   140040e6d:	mov    rdx,QWORD PTR [rbp+0x58]
   140040e71:	mov    r14,rcx
   140040e74:	lea    rcx,[rbp-0x20]
   140040e78:	mov    r12d,r9d
   140040e7b:	mov    rbx,r8
   140040e7e:	mov    QWORD PTR [rbp+0x30],0x3ff
   140040e86:	mov    r13d,0x30
   140040e8c:	call   0x14003370c
   140040e91:	xor    r15d,r15d
   140040e94:	test   r12d,r12d
   140040e97:	cmovs  r12d,r15d
   140040e9b:	test   rdi,rdi
   140040e9e:	jne    0x140040ec7
   140040ea0:	call   0x140036858
   140040ea5:	lea    ebx,[rdi+0x16]
   140040ea8:	mov    DWORD PTR [rax],ebx
   140040eaa:	call   0x1400367f0
   140040eaf:	cmp    BYTE PTR [rbp-0x8],r15b
   140040eb3:	je     0x140040ec0
   140040eb5:	mov    rcx,QWORD PTR [rbp-0x10]
   140040eb9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140040ec0:	mov    eax,ebx
   140040ec2:	jmp    0x140041216
   140040ec7:	test   rbx,rbx
   140040eca:	jne    0x140040ef0
   140040ecc:	call   0x140036858
   140040ed1:	mov    ebx,0x16
   140040ed6:	mov    DWORD PTR [rax],ebx
   140040ed8:	call   0x1400367f0
   140040edd:	cmp    BYTE PTR [rbp-0x8],r15b
   140040ee1:	je     0x140040ec0
   140040ee3:	mov    rax,QWORD PTR [rbp-0x10]
   140040ee7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140040eee:	jmp    0x140040ec0
   140040ef0:	lea    eax,[r12+0xb]
   140040ef5:	mov    BYTE PTR [rdi],r15b
   140040ef8:	movsxd rcx,eax
   140040efb:	cmp    rbx,rcx
   140040efe:	ja     0x140040f0c
   140040f00:	call   0x140036858
   140040f05:	mov    ebx,0x22
   140040f0a:	jmp    0x140040ea8
   140040f0c:	mov    rax,QWORD PTR [r14]
   140040f0f:	mov    ecx,0x7ff
   140040f14:	shr    rax,0x34
   140040f18:	and    rax,rcx
   140040f1b:	cmp    rax,rcx
   140040f1e:	jne    0x140040fb7
   140040f24:	lea    r8,[rbx-0x2]
   140040f28:	cmp    rbx,0xffffffffffffffff
   140040f2c:	lea    rdx,[rdi+0x2]
   140040f30:	mov    r9d,r12d
   140040f33:	mov    rcx,r14
   140040f36:	cmove  r8,rbx
   140040f3a:	mov    QWORD PTR [rsp+0x28],r15
   140040f3f:	mov    DWORD PTR [rsp+0x20],r15d
   140040f44:	call   0x140040d58
   140040f49:	test   eax,eax
   140040f4b:	je     0x140040f6a
   140040f4d:	mov    BYTE PTR [rdi],r15b
   140040f50:	cmp    BYTE PTR [rbp-0x8],r15b
   140040f54:	je     0x140041216
   140040f5a:	mov    rcx,QWORD PTR [rbp-0x10]
   140040f5e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140040f65:	jmp    0x140041216
   140040f6a:	cmp    BYTE PTR [rdi+0x2],0x2d
   140040f6e:	jne    0x140040f76
   140040f70:	mov    BYTE PTR [rdi],0x2d
   140040f73:	inc    rdi
   140040f76:	mov    ebx,DWORD PTR [rbp+0x50]
   140040f79:	mov    BYTE PTR [rdi],0x30
   140040f7c:	mov    edx,0x65
   140040f81:	mov    eax,ebx
   140040f83:	neg    eax
   140040f85:	sbb    cl,cl
   140040f87:	and    cl,0xe0
   140040f8a:	add    cl,0x78
   140040f8d:	mov    BYTE PTR [rdi+0x1],cl
   140040f90:	lea    rcx,[rdi+0x2]
   140040f94:	call   0x140033d54
   140040f99:	test   rax,rax
   140040f9c:	je     0x140040fae
   140040f9e:	neg    ebx
   140040fa0:	sbb    cl,cl
   140040fa2:	and    cl,0xe0
   140040fa5:	add    cl,0x70
   140040fa8:	mov    BYTE PTR [rax],cl
   140040faa:	mov    BYTE PTR [rax+0x3],r15b
   140040fae:	cmp    BYTE PTR [rbp-0x8],r15b
   140040fb2:	jmp    0x140041207
   140040fb7:	movabs rax,0x8000000000000000
   140040fc1:	test   QWORD PTR [r14],rax
   140040fc4:	je     0x140040fcc
   140040fc6:	mov    BYTE PTR [rdi],0x2d
   140040fc9:	inc    rdi
   140040fcc:	mov    r9d,DWORD PTR [rbp+0x50]
   140040fd0:	mov    r11d,0x30
   140040fd6:	movabs rbx,0xfffffffffffff
   140040fe0:	mov    eax,r9d
   140040fe3:	mov    BYTE PTR [rdi],r11b
   140040fe6:	neg    eax
   140040fe8:	mov    eax,r9d
   140040feb:	sbb    cl,cl
   140040fed:	and    cl,0xe0
   140040ff0:	add    cl,0x78
   140040ff3:	neg    eax
   140040ff5:	movabs rax,0x7ff0000000000000
   140040fff:	sbb    edx,edx
   140041001:	mov    BYTE PTR [rdi+0x1],cl
   140041004:	and    edx,0xffffffe0
   140041007:	sub    edx,0xffffffd9
   14004100a:	test   QWORD PTR [r14],rax
   14004100d:	jne    0x14004102e
   14004100f:	mov    BYTE PTR [rdi+0x2],r11b
   140041013:	mov    rax,QWORD PTR [r14]
   140041016:	add    rdi,0x3
   14004101a:	and    rax,rbx
   14004101d:	neg    rax
   140041020:	sbb    rax,rax
   140041023:	and    eax,0x3fe
   140041028:	mov    QWORD PTR [rbp+0x30],rax
   14004102c:	jmp    0x140041036
   14004102e:	mov    BYTE PTR [rdi+0x2],0x31
   140041032:	add    rdi,0x3
   140041036:	mov    r15,rdi
   140041039:	xor    r10d,r10d
   14004103c:	inc    rdi
   14004103f:	test   r12d,r12d
   140041042:	jne    0x140041049
   140041044:	mov    BYTE PTR [r15],r10b
   140041047:	jmp    0x14004105c
   140041049:	mov    rax,QWORD PTR [rbp-0x20]
   14004104d:	mov    rcx,QWORD PTR [rax+0x128]
   140041054:	mov    rax,QWORD PTR [rcx]
   140041057:	mov    cl,BYTE PTR [rax]
   140041059:	mov    BYTE PTR [r15],cl
   14004105c:	test   QWORD PTR [r14],rbx
   14004105f:	jbe    0x1400410f0
   140041065:	movabs r8,0xf000000000000
   14004106f:	test   r12d,r12d
   140041072:	jle    0x1400410a3
   140041074:	mov    rax,QWORD PTR [r14]
   140041077:	mov    cl,r13b
   14004107a:	and    rax,r8
   14004107d:	and    rax,rbx
   140041080:	shr    rax,cl
   140041083:	add    ax,r11w
   140041087:	cmp    ax,0x39
   14004108b:	jbe    0x140041090
   14004108d:	add    ax,dx
   140041090:	mov    BYTE PTR [rdi],al
   140041092:	shr    r8,0x4
   140041096:	dec    r12d
   140041099:	inc    rdi
   14004109c:	add    r13w,0xfffc
   1400410a1:	jns    0x14004106f
   1400410a3:	test   r13w,r13w
   1400410a7:	js     0x1400410f0
   1400410a9:	mov    rax,QWORD PTR [r14]
   1400410ac:	mov    cl,r13b
   1400410af:	and    rax,r8
   1400410b2:	and    rax,rbx
   1400410b5:	shr    rax,cl
   1400410b8:	cmp    ax,0x8
   1400410bc:	jbe    0x1400410f0
   1400410be:	lea    rax,[rdi-0x1]
   1400410c2:	cmp    BYTE PTR [rax],0x66
   1400410c5:	je     0x1400410cc
   1400410c7:	cmp    BYTE PTR [rax],0x46
   1400410ca:	jne    0x1400410d4
   1400410cc:	mov    BYTE PTR [rax],r11b
   1400410cf:	dec    rax
   1400410d2:	jmp    0x1400410c2
   1400410d4:	cmp    rax,r15
   1400410d7:	je     0x1400410ed
   1400410d9:	mov    cl,BYTE PTR [rax]
   1400410db:	cmp    cl,0x39
   1400410de:	jne    0x1400410e7
   1400410e0:	add    dl,0x3a
   1400410e3:	mov    BYTE PTR [rax],dl
   1400410e5:	jmp    0x1400410f0
   1400410e7:	inc    cl
   1400410e9:	mov    BYTE PTR [rax],cl
   1400410eb:	jmp    0x1400410f0
   1400410ed:	inc    BYTE PTR [rax-0x1]
   1400410f0:	test   r12d,r12d
   1400410f3:	jle    0x140041114
   1400410f5:	mov    r8d,r12d
   1400410f8:	mov    dl,r11b
   1400410fb:	mov    rcx,rdi
   1400410fe:	mov    ebx,r12d
   140041101:	call   0x140036dc0
   140041106:	mov    r9d,DWORD PTR [rbp+0x50]
   14004110a:	add    rdi,rbx
   14004110d:	xor    r10d,r10d
   140041110:	lea    r11d,[r10+0x30]
   140041114:	cmp    BYTE PTR [r15],r10b
   140041117:	cmove  rdi,r15
   14004111b:	neg    r9d
   14004111e:	sbb    al,al
   140041120:	and    al,0xe0
   140041122:	add    al,0x70
   140041124:	mov    BYTE PTR [rdi],al
   140041126:	mov    rcx,QWORD PTR [r14]
   140041129:	shr    rcx,0x34
   14004112d:	and    ecx,0x7ff
   140041133:	sub    rcx,QWORD PTR [rbp+0x30]
   140041137:	js     0x140041143
   140041139:	mov    BYTE PTR [rdi+0x1],0x2b
   14004113d:	add    rdi,0x2
   140041141:	jmp    0x14004114e
   140041143:	mov    BYTE PTR [rdi+0x1],0x2d
   140041147:	add    rdi,0x2
   14004114b:	neg    rcx
   14004114e:	mov    r8,rdi
   140041151:	mov    BYTE PTR [rdi],r11b
   140041154:	cmp    rcx,0x3e8
   14004115b:	jl     0x140041190
   14004115d:	movabs rax,0x20c49ba5e353f7cf
   140041167:	imul   rcx
   14004116a:	sar    rdx,0x7
   14004116e:	mov    rax,rdx
   140041171:	shr    rax,0x3f
   140041175:	add    rdx,rax
   140041178:	lea    eax,[r11+rdx*1]
   14004117c:	imul   rdx,rdx,0xfffffffffffffc18
   140041183:	mov    BYTE PTR [rdi],al
   140041185:	inc    rdi
   140041188:	add    rcx,rdx
   14004118b:	cmp    rdi,r8
   14004118e:	jne    0x140041196
   140041190:	cmp    rcx,0x64
   140041194:	jl     0x1400411c4
   140041196:	movabs rax,0xa3d70a3d70a3d70b
   1400411a0:	imul   rcx
   1400411a3:	add    rdx,rcx
   1400411a6:	sar    rdx,0x6
   1400411aa:	mov    rax,rdx
   1400411ad:	shr    rax,0x3f
   1400411b1:	add    rdx,rax
   1400411b4:	lea    eax,[r11+rdx*1]
   1400411b8:	imul   rdx,rdx,0xffffffffffffff9c
   1400411bc:	mov    BYTE PTR [rdi],al
   1400411be:	inc    rdi
   1400411c1:	add    rcx,rdx
   1400411c4:	cmp    rdi,r8
   1400411c7:	jne    0x1400411cf
   1400411c9:	cmp    rcx,0xa
   1400411cd:	jl     0x1400411fa
   1400411cf:	movabs rax,0x6666666666666667
   1400411d9:	imul   rcx
   1400411dc:	sar    rdx,0x2
   1400411e0:	mov    rax,rdx
   1400411e3:	shr    rax,0x3f
   1400411e7:	add    rdx,rax
   1400411ea:	lea    eax,[r11+rdx*1]
   1400411ee:	imul   rdx,rdx,0xfffffffffffffff6
   1400411f2:	mov    BYTE PTR [rdi],al
   1400411f4:	inc    rdi
   1400411f7:	add    rcx,rdx
   1400411fa:	add    cl,r11b
   1400411fd:	cmp    BYTE PTR [rbp-0x8],r10b
   140041201:	mov    BYTE PTR [rdi],cl
   140041203:	mov    BYTE PTR [rdi+0x1],r10b
   140041207:	je     0x140041214
   140041209:	mov    rax,QWORD PTR [rbp-0x10]
   14004120d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041214:	xor    eax,eax
   140041216:	lea    r11,[rsp+0x50]
   14004121b:	mov    rbx,QWORD PTR [r11+0x38]
   14004121f:	mov    rdi,QWORD PTR [r11+0x40]
   140041223:	mov    rsp,r11
   140041226:	pop    r15
   140041228:	pop    r14
   14004122a:	pop    r13
   14004122c:	pop    r12
   14004122e:	pop    rbp
   14004122f:	ret    
   140041230:	mov    rax,rsp
   140041233:	mov    QWORD PTR [rax+0x8],rbx
   140041237:	mov    QWORD PTR [rax+0x10],rbp
   14004123b:	mov    QWORD PTR [rax+0x18],rsi
   14004123f:	mov    QWORD PTR [rax+0x20],rdi
   140041243:	push   r12
   140041245:	sub    rsp,0x40
   140041249:	mov    ebx,DWORD PTR [r9+0x4]
   14004124d:	mov    rsi,rdx
   140041250:	mov    rdx,QWORD PTR [rsp+0x78]
   140041255:	mov    rdi,rcx
   140041258:	lea    rcx,[rax-0x28]
   14004125c:	mov    r12,r9
   14004125f:	dec    ebx
   140041261:	mov    ebp,r8d
   140041264:	call   0x14003370c
   140041269:	test   rdi,rdi
   14004126c:	jne    0x140041297
   14004126e:	call   0x140036858
   140041273:	lea    ebx,[rdi+0x16]
   140041276:	mov    DWORD PTR [rax],ebx
   140041278:	call   0x1400367f0
   14004127d:	cmp    BYTE PTR [rsp+0x38],dil
   140041282:	je     0x140041290
   140041284:	mov    rcx,QWORD PTR [rsp+0x30]
   140041289:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140041290:	mov    eax,ebx
   140041292:	jmp    0x1400413ae
   140041297:	test   rsi,rsi
   14004129a:	jne    0x1400412c0
   14004129c:	call   0x140036858
   1400412a1:	lea    ebx,[rsi+0x16]
   1400412a4:	mov    DWORD PTR [rax],ebx
   1400412a6:	call   0x1400367f0
   1400412ab:	cmp    BYTE PTR [rsp+0x38],sil
   1400412b0:	je     0x140041290
   1400412b2:	mov    rax,QWORD PTR [rsp+0x30]
   1400412b7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400412be:	jmp    0x140041290
   1400412c0:	cmp    BYTE PTR [rsp+0x70],0x0
   1400412c5:	je     0x1400412e1
   1400412c7:	cmp    ebx,ebp
   1400412c9:	jne    0x1400412e1
   1400412cb:	xor    eax,eax
   1400412cd:	cmp    DWORD PTR [r12],0x2d
   1400412d2:	movsxd rcx,ebx
   1400412d5:	sete   al
   1400412d8:	add    rax,rdi
   1400412db:	mov    WORD PTR [rcx+rax*1],0x30
   1400412e1:	cmp    DWORD PTR [r12],0x2d
   1400412e6:	jne    0x1400412ee
   1400412e8:	mov    BYTE PTR [rdi],0x2d
   1400412eb:	inc    rdi
   1400412ee:	cmp    DWORD PTR [r12+0x4],0x0
   1400412f4:	jg     0x140041316
   1400412f6:	mov    rcx,rdi
   1400412f9:	call   0x140036550
   1400412fe:	lea    rcx,[rdi+0x1]
   140041302:	mov    rdx,rdi
   140041305:	lea    r8,[rax+0x1]
   140041309:	call   0x140033260
   14004130e:	mov    BYTE PTR [rdi],0x30
   140041311:	inc    rdi
   140041314:	jmp    0x14004131e
   140041316:	movsxd rax,DWORD PTR [r12+0x4]
   14004131b:	add    rdi,rax
   14004131e:	test   ebp,ebp
   140041320:	jle    0x140041399
   140041322:	mov    rcx,rdi
   140041325:	lea    rsi,[rdi+0x1]
   140041329:	call   0x140036550
   14004132e:	mov    rdx,rdi
   140041331:	mov    rcx,rsi
   140041334:	lea    r8,[rax+0x1]
   140041338:	call   0x140033260
   14004133d:	mov    r11,QWORD PTR [rsp+0x20]
   140041342:	mov    rax,QWORD PTR [r11+0x128]
   140041349:	mov    rcx,QWORD PTR [rax]
   14004134c:	mov    al,BYTE PTR [rcx]
   14004134e:	mov    BYTE PTR [rdi],al
   140041350:	mov    ebx,DWORD PTR [r12+0x4]
   140041355:	test   ebx,ebx
   140041357:	jns    0x140041399
   140041359:	neg    ebx
   14004135b:	cmp    BYTE PTR [rsp+0x70],0x0
   140041360:	jne    0x14004136b
   140041362:	mov    eax,ebx
   140041364:	mov    ebx,ebp
   140041366:	cmp    ebp,eax
   140041368:	cmovge ebx,eax
   14004136b:	test   ebx,ebx
   14004136d:	je     0x140041389
   14004136f:	mov    rcx,rsi
   140041372:	call   0x140036550
   140041377:	movsxd rcx,ebx
   14004137a:	mov    rdx,rsi
   14004137d:	lea    r8,[rax+0x1]
   140041381:	add    rcx,rsi
   140041384:	call   0x140033260
   140041389:	movsxd r8,ebx
   14004138c:	mov    edx,0x30
   140041391:	mov    rcx,rsi
   140041394:	call   0x140036dc0
   140041399:	cmp    BYTE PTR [rsp+0x38],0x0
   14004139e:	je     0x1400413ac
   1400413a0:	mov    rax,QWORD PTR [rsp+0x30]
   1400413a5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400413ac:	xor    eax,eax
   1400413ae:	mov    rbx,QWORD PTR [rsp+0x50]
   1400413b3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400413b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400413bd:	mov    rdi,QWORD PTR [rsp+0x68]
   1400413c2:	add    rsp,0x40
   1400413c6:	pop    r12
   1400413c8:	ret    
   1400413c9:	int3   
   1400413ca:	int3   
   1400413cb:	int3   
   1400413cc:	rex push rbx
   1400413ce:	push   rbp
   1400413cf:	push   rsi
   1400413d0:	push   rdi
   1400413d1:	sub    rsp,0x78
   1400413d5:	mov    rax,QWORD PTR [rip+0x43ccc]        # 0x1400850a8
   1400413dc:	xor    rax,rsp
   1400413df:	mov    QWORD PTR [rsp+0x60],rax
   1400413e4:	mov    rcx,QWORD PTR [rcx]
   1400413e7:	mov    rbx,r8
   1400413ea:	mov    rdi,rdx
   1400413ed:	mov    esi,r9d
   1400413f0:	mov    ebp,0x16
   1400413f5:	lea    r8,[rsp+0x48]
   1400413fa:	lea    rdx,[rsp+0x30]
   1400413ff:	mov    r9d,ebp
   140041402:	call   0x1400420e0
   140041407:	test   rdi,rdi
   14004140a:	jne    0x14004141c
   14004140c:	call   0x140036858
   140041411:	mov    DWORD PTR [rax],ebp
   140041413:	call   0x1400367f0
   140041418:	mov    eax,ebp
   14004141a:	jmp    0x140041487
   14004141c:	test   rbx,rbx
   14004141f:	je     0x14004140c
   140041421:	or     rdx,0xffffffffffffffff
   140041425:	cmp    rbx,rdx
   140041428:	je     0x14004143a
   14004142a:	xor    eax,eax
   14004142c:	cmp    DWORD PTR [rsp+0x30],0x2d
   140041431:	mov    rdx,rbx
   140041434:	sete   al
   140041437:	sub    rdx,rax
   14004143a:	mov    r8d,DWORD PTR [rsp+0x34]
   14004143f:	xor    ecx,ecx
   140041441:	lea    r9,[rsp+0x30]
   140041446:	add    r8d,esi
   140041449:	cmp    DWORD PTR [rsp+0x30],0x2d
   14004144e:	sete   cl
   140041451:	add    rcx,rdi
   140041454:	call   0x140041f4c
   140041459:	test   eax,eax
   14004145b:	je     0x140041462
   14004145d:	mov    BYTE PTR [rdi],0x0
   140041460:	jmp    0x140041487
   140041462:	mov    rax,QWORD PTR [rsp+0xc0]
   14004146a:	lea    r9,[rsp+0x30]
   14004146f:	mov    r8d,esi
   140041472:	mov    QWORD PTR [rsp+0x28],rax
   140041477:	mov    rdx,rbx
   14004147a:	mov    rcx,rdi
   14004147d:	mov    BYTE PTR [rsp+0x20],0x0
   140041482:	call   0x140041230
   140041487:	mov    rcx,QWORD PTR [rsp+0x60]
   14004148c:	xor    rcx,rsp
   14004148f:	call   0x140032f00
   140041494:	add    rsp,0x78
   140041498:	pop    rdi
   140041499:	pop    rsi
   14004149a:	pop    rbp
   14004149b:	pop    rbx
   14004149c:	ret    
   14004149d:	int3   
   14004149e:	int3   
   14004149f:	int3   
   1400414a0:	rex push rbx
   1400414a2:	push   rbp
   1400414a3:	push   rsi
   1400414a4:	push   rdi
   1400414a5:	push   r12
   1400414a7:	sub    rsp,0x80
   1400414ae:	mov    rax,QWORD PTR [rip+0x43bf3]        # 0x1400850a8
   1400414b5:	xor    rax,rsp
   1400414b8:	mov    QWORD PTR [rsp+0x70],rax
   1400414bd:	mov    rcx,QWORD PTR [rcx]
   1400414c0:	mov    rdi,r8
   1400414c3:	mov    rsi,rdx
   1400414c6:	mov    ebp,r9d
   1400414c9:	mov    ebx,0x16
   1400414ce:	lea    r8,[rsp+0x58]
   1400414d3:	lea    rdx,[rsp+0x40]
   1400414d8:	mov    r9d,ebx
   1400414db:	call   0x1400420e0
   1400414e0:	test   rsi,rsi
   1400414e3:	jne    0x1400414f8
   1400414e5:	call   0x140036858
   1400414ea:	mov    DWORD PTR [rax],ebx
   1400414ec:	call   0x1400367f0
   1400414f1:	mov    eax,ebx
   1400414f3:	jmp    0x1400415b9
   1400414f8:	test   rdi,rdi
   1400414fb:	je     0x1400414e5
   1400414fd:	mov    r12d,DWORD PTR [rsp+0x44]
   140041502:	xor    eax,eax
   140041504:	dec    r12d
   140041507:	cmp    DWORD PTR [rsp+0x40],0x2d
   14004150c:	sete   al
   14004150f:	or     rdx,0xffffffffffffffff
   140041513:	lea    rbx,[rax+rsi*1]
   140041517:	cmp    rdi,rdx
   14004151a:	je     0x140041522
   14004151c:	mov    rdx,rdi
   14004151f:	sub    rdx,rax
   140041522:	lea    r9,[rsp+0x40]
   140041527:	mov    r8d,ebp
   14004152a:	mov    rcx,rbx
   14004152d:	call   0x140041f4c
   140041532:	test   eax,eax
   140041534:	je     0x14004153b
   140041536:	mov    BYTE PTR [rsi],0x0
   140041539:	jmp    0x1400415b9
   14004153b:	mov    eax,DWORD PTR [rsp+0x44]
   14004153f:	dec    eax
   140041541:	cmp    r12d,eax
   140041544:	setl   cl
   140041547:	cmp    eax,0xfffffffc
   14004154a:	jl     0x140041587
   14004154c:	cmp    eax,ebp
   14004154e:	jge    0x140041587
   140041550:	test   cl,cl
   140041552:	je     0x140041560
   140041554:	mov    al,BYTE PTR [rbx]
   140041556:	inc    rbx
   140041559:	test   al,al
   14004155b:	jne    0x140041554
   14004155d:	mov    BYTE PTR [rbx-0x2],al
   140041560:	mov    rax,QWORD PTR [rsp+0xd8]
   140041568:	lea    r9,[rsp+0x40]
   14004156d:	mov    r8d,ebp
   140041570:	mov    QWORD PTR [rsp+0x28],rax
   140041575:	mov    rdx,rdi
   140041578:	mov    rcx,rsi
   14004157b:	mov    BYTE PTR [rsp+0x20],0x1
   140041580:	call   0x140041230
   140041585:	jmp    0x1400415b9
   140041587:	mov    rax,QWORD PTR [rsp+0xd8]
   14004158f:	mov    r9d,DWORD PTR [rsp+0xd0]
   140041597:	mov    r8d,ebp
   14004159a:	mov    QWORD PTR [rsp+0x30],rax
   14004159f:	lea    rax,[rsp+0x40]
   1400415a4:	mov    rdx,rdi
   1400415a7:	mov    rcx,rsi
   1400415aa:	mov    BYTE PTR [rsp+0x28],0x1
   1400415af:	mov    QWORD PTR [rsp+0x20],rax
   1400415b4:	call   0x140040b24
   1400415b9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400415be:	xor    rcx,rsp
   1400415c1:	call   0x140032f00
   1400415c6:	add    rsp,0x80
   1400415cd:	pop    r12
   1400415cf:	pop    rdi
   1400415d0:	pop    rsi
   1400415d1:	pop    rbp
   1400415d2:	pop    rbx
   1400415d3:	ret    
   1400415d4:	sub    rsp,0x38
   1400415d8:	cmp    r9d,0x65
   1400415dc:	je     0x140041648
   1400415de:	cmp    r9d,0x45
   1400415e2:	je     0x140041648
   1400415e4:	cmp    r9d,0x66
   1400415e8:	jne    0x140041600
   1400415ea:	mov    rax,QWORD PTR [rsp+0x70]
   1400415ef:	mov    r9d,DWORD PTR [rsp+0x60]
   1400415f4:	mov    QWORD PTR [rsp+0x20],rax
   1400415f9:	call   0x1400413cc
   1400415fe:	jmp    0x140041664
   140041600:	cmp    r9d,0x61
   140041604:	je     0x14004162a
   140041606:	cmp    r9d,0x41
   14004160a:	je     0x14004162a
   14004160c:	mov    rax,QWORD PTR [rsp+0x70]
   140041611:	mov    r9d,DWORD PTR [rsp+0x60]
   140041616:	mov    QWORD PTR [rsp+0x28],rax
   14004161b:	mov    eax,DWORD PTR [rsp+0x68]
   14004161f:	mov    DWORD PTR [rsp+0x20],eax
   140041623:	call   0x1400414a0
   140041628:	jmp    0x140041664
   14004162a:	mov    rax,QWORD PTR [rsp+0x70]
   14004162f:	mov    r9d,DWORD PTR [rsp+0x60]
   140041634:	mov    QWORD PTR [rsp+0x28],rax
   140041639:	mov    eax,DWORD PTR [rsp+0x68]
   14004163d:	mov    DWORD PTR [rsp+0x20],eax
   140041641:	call   0x140040e50
   140041646:	jmp    0x140041664
   140041648:	mov    rax,QWORD PTR [rsp+0x70]
   14004164d:	mov    r9d,DWORD PTR [rsp+0x60]
   140041652:	mov    QWORD PTR [rsp+0x28],rax
   140041657:	mov    eax,DWORD PTR [rsp+0x68]
   14004165b:	mov    DWORD PTR [rsp+0x20],eax
   14004165f:	call   0x140040d58
   140041664:	add    rsp,0x38
   140041668:	ret    
   140041669:	int3   
   14004166a:	int3   
   14004166b:	int3   
   14004166c:	sub    rsp,0x48
   140041670:	mov    eax,DWORD PTR [rsp+0x78]
   140041674:	and    QWORD PTR [rsp+0x30],0x0
   14004167a:	mov    DWORD PTR [rsp+0x28],eax
   14004167e:	mov    eax,DWORD PTR [rsp+0x70]
   140041682:	mov    DWORD PTR [rsp+0x20],eax
   140041686:	call   0x1400415d4
   14004168b:	add    rsp,0x48
   14004168f:	ret    
   140041690:	mov    rax,rsp
   140041693:	mov    QWORD PTR [rax+0x8],rbx
   140041697:	mov    QWORD PTR [rax+0x10],rbp
   14004169b:	mov    QWORD PTR [rax+0x18],rsi
   14004169f:	mov    QWORD PTR [rax+0x20],rdi
   1400416a3:	push   r12
   1400416a5:	push   r13
   1400416a7:	push   r15
   1400416a9:	sub    rsp,0x10
   1400416ad:	and    DWORD PTR [r8],0x0
   1400416b1:	and    DWORD PTR [r8+0x4],0x0
   1400416b6:	and    DWORD PTR [r8+0x8],0x0
   1400416bb:	mov    r10,r8
   1400416be:	mov    edi,edx
   1400416c0:	mov    r12,rcx
   1400416c3:	mov    ebx,0x404e
   1400416c8:	test   edx,edx
   1400416ca:	je     0x14004180b
   1400416d0:	xor    r11d,r11d
   1400416d3:	xor    r8d,r8d
   1400416d6:	xor    r9d,r9d
   1400416d9:	lea    r15d,[r11+0x1]
   1400416dd:	mov    rsi,QWORD PTR [r10]
   1400416e0:	mov    r13d,DWORD PTR [r10+0x8]
   1400416e4:	mov    ecx,r8d
   1400416e7:	shr    ecx,0x1f
   1400416ea:	add    r8d,r8d
   1400416ed:	add    r9d,r9d
   1400416f0:	or     r9d,ecx
   1400416f3:	lea    edx,[r11+r11*1]
   1400416f7:	mov    eax,r11d
   1400416fa:	shr    eax,0x1f
   1400416fd:	add    r9d,r9d
   140041700:	mov    QWORD PTR [rsp],rsi
   140041704:	or     r8d,eax
   140041707:	mov    eax,edx
   140041709:	add    edx,edx
   14004170b:	mov    ecx,r8d
   14004170e:	shr    eax,0x1f
   140041711:	add    r8d,r8d
   140041714:	shr    ecx,0x1f
   140041717:	or     r8d,eax
   14004171a:	xor    eax,eax
   14004171c:	or     r9d,ecx
   14004171f:	mov    ecx,esi
   140041721:	mov    DWORD PTR [r10],edx
   140041724:	lea    ebp,[rdx+rcx*1]
   140041727:	mov    DWORD PTR [r10+0x4],r8d
   14004172b:	mov    DWORD PTR [r10+0x8],r9d
   14004172f:	cmp    ebp,edx
   140041731:	jb     0x140041737
   140041733:	cmp    ebp,ecx
   140041735:	jae    0x14004173a
   140041737:	mov    eax,r15d
   14004173a:	mov    DWORD PTR [r10],ebp
   14004173d:	test   eax,eax
   14004173f:	je     0x140041765
   140041741:	mov    eax,r8d
   140041744:	inc    r8d
   140041747:	xor    ecx,ecx
   140041749:	cmp    r8d,eax
   14004174c:	jb     0x140041753
   14004174e:	cmp    r8d,r15d
   140041751:	jae    0x140041756
   140041753:	mov    ecx,r15d
   140041756:	mov    DWORD PTR [r10+0x4],r8d
   14004175a:	test   ecx,ecx
   14004175c:	je     0x140041765
   14004175e:	inc    r9d
   140041761:	mov    DWORD PTR [r10+0x8],r9d
   140041765:	shr    rsi,0x20
   140041769:	xor    eax,eax
   14004176b:	lea    r11d,[r8+rsi*1]
   14004176f:	cmp    r11d,r8d
   140041772:	jb     0x140041779
   140041774:	cmp    r11d,esi
   140041777:	jae    0x14004177c
   140041779:	mov    eax,r15d
   14004177c:	mov    DWORD PTR [r10+0x4],r11d
   140041780:	test   eax,eax
   140041782:	je     0x14004178b
   140041784:	add    r9d,r15d
   140041787:	mov    DWORD PTR [r10+0x8],r9d
   14004178b:	add    r9d,r13d
   14004178e:	lea    edx,[rbp+rbp*1+0x0]
   140041792:	mov    ecx,r11d
   140041795:	shr    ecx,0x1f
   140041798:	lea    r8d,[r11+r11*1]
   14004179c:	add    r9d,r9d
   14004179f:	or     r9d,ecx
   1400417a2:	mov    eax,ebp
   1400417a4:	mov    DWORD PTR [r10],edx
   1400417a7:	shr    eax,0x1f
   1400417aa:	mov    DWORD PTR [r10+0x8],r9d
   1400417ae:	or     r8d,eax
   1400417b1:	xor    eax,eax
   1400417b3:	mov    DWORD PTR [r10+0x4],r8d
   1400417b7:	movsx  ecx,BYTE PTR [r12]
   1400417bc:	lea    r11d,[rdx+rcx*1]
   1400417c0:	cmp    r11d,edx
   1400417c3:	jb     0x1400417ca
   1400417c5:	cmp    r11d,ecx
   1400417c8:	jae    0x1400417cd
   1400417ca:	mov    eax,r15d
   1400417cd:	mov    DWORD PTR [r10],r11d
   1400417d0:	test   eax,eax
   1400417d2:	je     0x1400417f8
   1400417d4:	mov    eax,r8d
   1400417d7:	inc    r8d
   1400417da:	xor    ecx,ecx
   1400417dc:	cmp    r8d,eax
   1400417df:	jb     0x1400417e6
   1400417e1:	cmp    r8d,r15d
   1400417e4:	jae    0x1400417e9
   1400417e6:	mov    ecx,r15d
   1400417e9:	mov    DWORD PTR [r10+0x4],r8d
   1400417ed:	test   ecx,ecx
   1400417ef:	je     0x1400417f8
   1400417f1:	inc    r9d
   1400417f4:	mov    DWORD PTR [r10+0x8],r9d
   1400417f8:	add    r12,r15
   1400417fb:	dec    edi
   1400417fd:	mov    DWORD PTR [r10+0x4],r8d
   140041801:	mov    DWORD PTR [r10+0x8],r9d
   140041805:	jne    0x1400416dd
   14004180b:	cmp    DWORD PTR [r10+0x8],0x0
   140041810:	jne    0x14004184c
   140041812:	mov    r9d,DWORD PTR [r10+0x4]
   140041816:	mov    edx,DWORD PTR [r10]
   140041819:	mov    eax,r9d
   14004181c:	mov    r8d,r9d
   14004181f:	shl    eax,0x10
   140041822:	mov    ecx,edx
   140041824:	shr    r8d,0x10
   140041828:	shr    ecx,0x10
   14004182b:	shl    edx,0x10
   14004182e:	mov    DWORD PTR [r10+0x8],r8d
   140041832:	mov    r9d,ecx
   140041835:	mov    DWORD PTR [r10],edx
   140041838:	or     r9d,eax
   14004183b:	mov    eax,0xfff0
   140041840:	add    bx,ax
   140041843:	mov    DWORD PTR [r10+0x4],r9d
   140041847:	test   r8d,r8d
   14004184a:	je     0x140041816
   14004184c:	mov    r8d,DWORD PTR [r10+0x8]
   140041850:	mov    r11d,0x8000
   140041856:	test   r11d,r8d
   140041859:	jne    0x140041893
   14004185b:	mov    r9d,DWORD PTR [r10+0x4]
   14004185f:	mov    eax,DWORD PTR [r10]
   140041862:	mov    edx,r9d
   140041865:	add    r8d,r8d
   140041868:	mov    ecx,eax
   14004186a:	add    eax,eax
   14004186c:	shr    edx,0x1f
   14004186f:	shr    ecx,0x1f
   140041872:	add    r9d,r9d
   140041875:	or     r8d,edx
   140041878:	or     r9d,ecx
   14004187b:	mov    DWORD PTR [r10],eax
   14004187e:	mov    eax,0xffff
   140041883:	add    bx,ax
   140041886:	mov    DWORD PTR [r10+0x4],r9d
   14004188a:	mov    DWORD PTR [r10+0x8],r8d
   14004188e:	test   r11d,r8d
   140041891:	je     0x14004185f
   140041893:	mov    rbp,QWORD PTR [rsp+0x38]
   140041898:	mov    rsi,QWORD PTR [rsp+0x40]
   14004189d:	mov    rdi,QWORD PTR [rsp+0x48]
   1400418a2:	mov    WORD PTR [r10+0xa],bx
   1400418a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400418ac:	add    rsp,0x10
   1400418b0:	pop    r15
   1400418b2:	pop    r13
   1400418b4:	pop    r12
   1400418b6:	ret    
   1400418b7:	int3   
   1400418b8:	mov    r10,rcx
   1400418bb:	test   r8,r8
   1400418be:	je     0x1400418fb
   1400418c0:	movzx  r9d,BYTE PTR [r10]
   1400418c4:	inc    r10
   1400418c7:	lea    eax,[r9-0x41]
   1400418cb:	cmp    eax,0x19
   1400418ce:	ja     0x1400418d4
   1400418d0:	add    r9d,0x20
   1400418d4:	movzx  ecx,BYTE PTR [rdx]
   1400418d7:	inc    rdx
   1400418da:	lea    eax,[rcx-0x41]
   1400418dd:	cmp    eax,0x19
   1400418e0:	ja     0x1400418e5
   1400418e2:	add    ecx,0x20
   1400418e5:	dec    r8
   1400418e8:	je     0x1400418f4
   1400418ea:	test   r9d,r9d
   1400418ed:	je     0x1400418f4
   1400418ef:	cmp    r9d,ecx
   1400418f2:	je     0x1400418c0
   1400418f4:	sub    r9d,ecx
   1400418f7:	mov    eax,r9d
   1400418fa:	ret    
   1400418fb:	xor    eax,eax
   1400418fd:	ret    
   1400418fe:	int3   
   1400418ff:	int3   
   140041900:	mov    rax,rsp
   140041903:	mov    QWORD PTR [rax+0x8],rbx
   140041907:	mov    QWORD PTR [rax+0x10],rsi
   14004190b:	mov    QWORD PTR [rax+0x18],rdi
   14004190f:	mov    QWORD PTR [rax+0x20],r12
   140041913:	push   rbp
   140041914:	mov    rbp,rsp
   140041917:	sub    rsp,0x40
   14004191b:	mov    r12,r8
   14004191e:	mov    rsi,rdx
   140041921:	mov    rdi,rcx
   140041924:	test   r8,r8
   140041927:	je     0x1400419e7
   14004192d:	lea    rcx,[rbp-0x20]
   140041931:	mov    rdx,r9
   140041934:	call   0x14003370c
   140041939:	test   rdi,rdi
   14004193c:	jne    0x140041969
   14004193e:	call   0x140036858
   140041943:	mov    DWORD PTR [rax],0x16
   140041949:	call   0x1400367f0
   14004194e:	cmp    BYTE PTR [rbp-0x8],0x0
   140041952:	je     0x14004195f
   140041954:	mov    rax,QWORD PTR [rbp-0x10]
   140041958:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14004195f:	mov    eax,0x7fffffff
   140041964:	jmp    0x1400419e9
   140041969:	test   rsi,rsi
   14004196c:	je     0x14004193e
   14004196e:	cmp    r12,0x7fffffff
   140041975:	ja     0x14004193e
   140041977:	mov    rax,QWORD PTR [rbp-0x20]
   14004197b:	cmp    DWORD PTR [rax+0x14],0x0
   14004197f:	jne    0x1400419a2
   140041981:	mov    r8,r12
   140041984:	mov    rdx,rsi
   140041987:	mov    rcx,rdi
   14004198a:	call   0x1400418b8
   14004198f:	cmp    BYTE PTR [rbp-0x8],0x0
   140041993:	je     0x1400419e9
   140041995:	mov    rcx,QWORD PTR [rbp-0x10]
   140041999:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400419a0:	jmp    0x1400419e9
   1400419a2:	sub    rdi,rsi
   1400419a5:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   1400419a9:	lea    rdx,[rbp-0x20]
   1400419ad:	call   0x140033b5c
   1400419b2:	movzx  ecx,BYTE PTR [rsi]
   1400419b5:	lea    rdx,[rbp-0x20]
   1400419b9:	mov    ebx,eax
   1400419bb:	call   0x140033b5c
   1400419c0:	inc    rsi
   1400419c3:	dec    r12
   1400419c6:	je     0x1400419d0
   1400419c8:	test   ebx,ebx
   1400419ca:	je     0x1400419d0
   1400419cc:	cmp    ebx,eax
   1400419ce:	je     0x1400419a5
   1400419d0:	sub    ebx,eax
   1400419d2:	cmp    BYTE PTR [rbp-0x8],0x0
   1400419d6:	je     0x1400419e3
   1400419d8:	mov    rcx,QWORD PTR [rbp-0x10]
   1400419dc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400419e3:	mov    eax,ebx
   1400419e5:	jmp    0x1400419e9
   1400419e7:	xor    eax,eax
   1400419e9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400419ee:	mov    rsi,QWORD PTR [rsp+0x58]
   1400419f3:	mov    rdi,QWORD PTR [rsp+0x60]
   1400419f8:	mov    r12,QWORD PTR [rsp+0x68]
   1400419fd:	add    rsp,0x40
   140041a01:	pop    rbp
   140041a02:	ret    
   140041a03:	int3   
   140041a04:	sub    rsp,0x28
   140041a08:	cmp    DWORD PTR [rip+0x47df1],0x0        # 0x140089800
   140041a0f:	jne    0x140041a47
   140041a11:	test   rcx,rcx
   140041a14:	jne    0x140041a30
   140041a16:	call   0x140036858
   140041a1b:	mov    DWORD PTR [rax],0x16
   140041a21:	call   0x1400367f0
   140041a26:	mov    eax,0x7fffffff
   140041a2b:	add    rsp,0x28
   140041a2f:	ret    
   140041a30:	test   rdx,rdx
   140041a33:	je     0x140041a16
   140041a35:	cmp    r8,0x7fffffff
   140041a3c:	ja     0x140041a16
   140041a3e:	add    rsp,0x28
   140041a42:	jmp    0x1400418b8
   140041a47:	xor    r9d,r9d
   140041a4a:	add    rsp,0x28
   140041a4e:	jmp    0x140041900
   140041a53:	int3   
   140041a54:	mov    rax,rsp
   140041a57:	mov    QWORD PTR [rax+0x8],rbx
   140041a5b:	mov    QWORD PTR [rax+0x10],rbp
   140041a5f:	mov    QWORD PTR [rax+0x18],rsi
   140041a63:	mov    QWORD PTR [rax+0x20],rdi
   140041a67:	push   r12
   140041a69:	push   r13
   140041a6b:	push   r15
   140041a6d:	sub    rsp,0x20
   140041a71:	mov    rbp,rdx
   140041a74:	xor    edi,edi
   140041a76:	xor    edx,edx
   140041a78:	lea    r8d,[rdi+0x1]
   140041a7c:	mov    esi,ecx
   140041a7e:	call   0x14003e3e8
   140041a83:	mov    r13,rax
   140041a86:	cmp    rax,0xffffffffffffffff
   140041a8a:	je     0x140041adc
   140041a8c:	lea    r8d,[rdi+0x2]
   140041a90:	xor    edx,edx
   140041a92:	mov    ecx,esi
   140041a94:	call   0x14003e3e8
   140041a99:	cmp    rax,0xffffffffffffffff
   140041a9d:	je     0x140041adc
   140041a9f:	mov    rbx,rbp
   140041aa2:	sub    rbx,rax
   140041aa5:	test   rbx,rbx
   140041aa8:	jle    0x140041b6f
   140041aae:	call   QWORD PTR [rip+0x2665c]        # 0x140068110
   140041ab4:	mov    r15d,0x1000
   140041aba:	lea    edx,[rdi+0x8]
   140041abd:	mov    rcx,rax
   140041ac0:	mov    r8d,r15d
   140041ac3:	call   QWORD PTR [rip+0x26637]        # 0x140068100
   140041ac9:	mov    rbp,rax
   140041acc:	test   rax,rax
   140041acf:	jne    0x140041b02
   140041ad1:	call   0x140036858
   140041ad6:	mov    DWORD PTR [rax],0xc
   140041adc:	call   0x140036858
   140041ae1:	mov    eax,DWORD PTR [rax]
   140041ae3:	mov    rbx,QWORD PTR [rsp+0x40]
   140041ae8:	mov    rbp,QWORD PTR [rsp+0x48]
   140041aed:	mov    rsi,QWORD PTR [rsp+0x50]
   140041af2:	mov    rdi,QWORD PTR [rsp+0x58]
   140041af7:	add    rsp,0x20
   140041afb:	pop    r15
   140041afd:	pop    r13
   140041aff:	pop    r12
   140041b01:	ret    
   140041b02:	mov    edx,0x8000
   140041b07:	mov    ecx,esi
   140041b09:	call   0x140041bec
   140041b0e:	mov    r12d,eax
   140041b11:	mov    r8d,ebx
   140041b14:	cmp    rbx,r15
   140041b17:	mov    rdx,rbp
   140041b1a:	cmovge r8d,r15d
   140041b1e:	mov    ecx,esi
   140041b20:	call   0x14003cc60
   140041b25:	cmp    eax,0xffffffff
   140041b28:	je     0x140041b36
   140041b2a:	cdqe   
   140041b2c:	sub    rbx,rax
   140041b2f:	test   rbx,rbx
   140041b32:	jle    0x140041b4f
   140041b34:	jmp    0x140041b11
   140041b36:	call   0x140036878
   140041b3b:	cmp    DWORD PTR [rax],0x5
   140041b3e:	jne    0x140041b4b
   140041b40:	call   0x140036858
   140041b45:	mov    DWORD PTR [rax],0xd
   140041b4b:	or     rdi,0xffffffffffffffff
   140041b4f:	mov    edx,r12d
   140041b52:	mov    ecx,esi
   140041b54:	call   0x140041bec
   140041b59:	call   QWORD PTR [rip+0x265b1]        # 0x140068110
   140041b5f:	mov    r8,rbp
   140041b62:	mov    rcx,rax
   140041b65:	xor    edx,edx
   140041b67:	call   QWORD PTR [rip+0x2689b]        # 0x140068408
   140041b6d:	jmp    0x140041bc4
   140041b6f:	jns    0x140041bce
   140041b71:	xor    r8d,r8d
   140041b74:	mov    rdx,rbp
   140041b77:	mov    ecx,esi
   140041b79:	call   0x14003e3e8
   140041b7e:	cmp    rax,0xffffffffffffffff
   140041b82:	je     0x140041adc
   140041b88:	mov    ecx,esi
   140041b8a:	call   0x14003f978
   140041b8f:	mov    rcx,rax
   140041b92:	call   QWORD PTR [rip+0x26620]        # 0x1400681b8
   140041b98:	neg    eax
   140041b9a:	sbb    rdi,rdi
   140041b9d:	neg    rdi
   140041ba0:	dec    rdi
   140041ba3:	cmp    rdi,0xffffffffffffffff
   140041ba7:	jne    0x140041bce
   140041ba9:	call   0x140036858
   140041bae:	mov    DWORD PTR [rax],0xd
   140041bb4:	call   0x140036878
   140041bb9:	mov    rbx,rax
   140041bbc:	call   QWORD PTR [rip+0x267fe]        # 0x1400683c0
   140041bc2:	mov    DWORD PTR [rbx],eax
   140041bc4:	cmp    rdi,0xffffffffffffffff
   140041bc8:	je     0x140041adc
   140041bce:	xor    r8d,r8d
   140041bd1:	mov    rdx,r13
   140041bd4:	mov    ecx,esi
   140041bd6:	call   0x14003e3e8
   140041bdb:	cmp    rax,0xffffffffffffffff
   140041bdf:	je     0x140041adc
   140041be5:	xor    eax,eax
   140041be7:	jmp    0x140041ae3
   140041bec:	mov    QWORD PTR [rsp+0x8],rbx
   140041bf1:	movsxd r8,ecx
   140041bf4:	lea    rbx,[rip+0x4a1a5]        # 0x14008bda0
   140041bfb:	mov    r9,r8
   140041bfe:	and    r8d,0x1f
   140041c02:	sar    r9,0x5
   140041c06:	imul   r8,r8,0x58
   140041c0a:	mov    rcx,QWORD PTR [rbx+r9*8]
   140041c0e:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   140041c13:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140041c19:	add    al,al
   140041c1b:	and    r11d,0x80
   140041c22:	movsx  r10d,al
   140041c26:	sar    r10d,1
   140041c29:	cmp    edx,0x4000
   140041c2f:	je     0x140041c89
   140041c31:	cmp    edx,0x8000
   140041c37:	je     0x140041c81
   140041c39:	cmp    edx,0x10000
   140041c3f:	je     0x140041c69
   140041c41:	cmp    edx,0x20000
   140041c47:	je     0x140041c69
   140041c49:	cmp    edx,0x40000
   140041c4f:	jne    0x140041c99
   140041c51:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140041c57:	mov    rax,QWORD PTR [rbx+r9*8]
   140041c5b:	and    BYTE PTR [rax+r8*1+0x38],0x81
   140041c61:	or     BYTE PTR [rax+r8*1+0x38],0x1
   140041c67:	jmp    0x140041c99
   140041c69:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140041c6f:	mov    rax,QWORD PTR [rbx+r9*8]
   140041c73:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140041c79:	or     BYTE PTR [rax+r8*1+0x38],0x2
   140041c7f:	jmp    0x140041c99
   140041c81:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   140041c87:	jmp    0x140041c99
   140041c89:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140041c8f:	mov    rcx,QWORD PTR [rbx+r9*8]
   140041c93:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   140041c99:	test   r11d,r11d
   140041c9c:	jne    0x140041ca5
   140041c9e:	mov    eax,0x8000
   140041ca3:	jmp    0x140041cb4
   140041ca5:	neg    r10d
   140041ca8:	sbb    eax,eax
   140041caa:	and    eax,0xc000
   140041caf:	add    eax,0x4000
   140041cb4:	mov    rbx,QWORD PTR [rsp+0x8]
   140041cb9:	ret    
   140041cba:	int3   
   140041cbb:	int3   
   140041cbc:	sub    rsp,0x28
   140041cc0:	test   rcx,rcx
   140041cc3:	jne    0x140041cdc
   140041cc5:	call   0x140036858
   140041cca:	mov    DWORD PTR [rax],0x16
   140041cd0:	call   0x1400367f0
   140041cd5:	mov    eax,0x16
   140041cda:	jmp    0x140041ce6
   140041cdc:	mov    eax,DWORD PTR [rip+0x4859e]        # 0x14008a280
   140041ce2:	mov    DWORD PTR [rcx],eax
   140041ce4:	xor    eax,eax
   140041ce6:	add    rsp,0x28
   140041cea:	ret    
   140041ceb:	int3   
   140041cec:	sub    rsp,0x48
   140041cf0:	and    QWORD PTR [rsp+0x30],0x0
   140041cf6:	and    DWORD PTR [rsp+0x28],0x0
   140041cfb:	mov    r8d,0x3
   140041d01:	lea    rcx,[rip+0x28f08]        # 0x14006ac10
   140041d08:	xor    r9d,r9d
   140041d0b:	mov    edx,0x40000000
   140041d10:	mov    DWORD PTR [rsp+0x20],r8d
   140041d15:	call   QWORD PTR [rip+0x26495]        # 0x1400681b0
   140041d1b:	mov    QWORD PTR [rip+0x44a2e],rax        # 0x140086750
   140041d22:	add    rsp,0x48
   140041d26:	ret    
   140041d27:	int3   
   140041d28:	sub    rsp,0x28
   140041d2c:	mov    rcx,QWORD PTR [rip+0x44a1d]        # 0x140086750
   140041d33:	cmp    rcx,0xffffffffffffffff
   140041d37:	je     0x140041d45
   140041d39:	cmp    rcx,0xfffffffffffffffe
   140041d3d:	je     0x140041d45
   140041d3f:	call   QWORD PTR [rip+0x26653]        # 0x140068398
   140041d45:	add    rsp,0x28
   140041d49:	ret    
   140041d4a:	int3   
   140041d4b:	int3   
   140041d4c:	mov    QWORD PTR [rsp+0x18],rbx
   140041d51:	mov    QWORD PTR [rsp+0x20],rdi
   140041d56:	push   rbp
   140041d57:	mov    rbp,rsp
   140041d5a:	sub    rsp,0x80
   140041d61:	mov    rax,QWORD PTR [rip+0x43340]        # 0x1400850a8
   140041d68:	xor    rax,rsp
   140041d6b:	mov    QWORD PTR [rbp-0x8],rax
   140041d6f:	mov    rdi,rcx
   140041d72:	mov    rbx,rdx
   140041d75:	lea    rcx,[rbp-0x40]
   140041d79:	mov    rdx,r8
   140041d7c:	call   0x14003370c
   140041d81:	lea    r11,[rbp-0x40]
   140041d85:	lea    rdx,[rbp-0x20]
   140041d89:	mov    QWORD PTR [rsp+0x38],r11
   140041d8e:	and    DWORD PTR [rsp+0x30],0x0
   140041d93:	and    DWORD PTR [rsp+0x28],0x0
   140041d98:	and    DWORD PTR [rsp+0x20],0x0
   140041d9d:	lea    rcx,[rbp-0x18]
   140041da1:	xor    r9d,r9d
   140041da4:	mov    r8,rbx
   140041da7:	call   0x14003d530
   140041dac:	lea    rcx,[rbp-0x18]
   140041db0:	mov    rdx,rdi
   140041db3:	mov    ebx,eax
   140041db5:	call   0x14003fdf8
   140041dba:	mov    edx,0x3
   140041dbf:	test   dl,bl
   140041dc1:	jne    0x140041dfa
   140041dc3:	cmp    eax,0x1
   140041dc6:	jne    0x140041ddd
   140041dc8:	cmp    BYTE PTR [rbp-0x28],0x0
   140041dcc:	je     0x140041dd9
   140041dce:	mov    rcx,QWORD PTR [rbp-0x30]
   140041dd2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140041dd9:	mov    eax,edx
   140041ddb:	jmp    0x140041e2a
   140041ddd:	cmp    eax,0x2
   140041de0:	jne    0x140041e17
   140041de2:	cmp    BYTE PTR [rbp-0x28],0x0
   140041de6:	je     0x140041df3
   140041de8:	mov    rax,QWORD PTR [rbp-0x30]
   140041dec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041df3:	mov    eax,0x4
   140041df8:	jmp    0x140041e2a
   140041dfa:	test   bl,0x1
   140041dfd:	jne    0x140041de2
   140041dff:	test   bl,0x2
   140041e02:	je     0x140041e17
   140041e04:	cmp    BYTE PTR [rbp-0x28],0x0
   140041e08:	je     0x140041dd9
   140041e0a:	mov    rax,QWORD PTR [rbp-0x30]
   140041e0e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041e15:	jmp    0x140041dd9
   140041e17:	cmp    BYTE PTR [rbp-0x28],0x0
   140041e1b:	je     0x140041e28
   140041e1d:	mov    rax,QWORD PTR [rbp-0x30]
   140041e21:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041e28:	xor    eax,eax
   140041e2a:	mov    rcx,QWORD PTR [rbp-0x8]
   140041e2e:	xor    rcx,rsp
   140041e31:	call   0x140032f00
   140041e36:	lea    r11,[rsp+0x80]
   140041e3e:	mov    rbx,QWORD PTR [r11+0x20]
   140041e42:	mov    rdi,QWORD PTR [r11+0x28]
   140041e46:	mov    rsp,r11
   140041e49:	pop    rbp
   140041e4a:	ret    
   140041e4b:	int3   
   140041e4c:	mov    QWORD PTR [rsp+0x18],rbx
   140041e51:	mov    QWORD PTR [rsp+0x20],rdi
   140041e56:	push   rbp
   140041e57:	mov    rbp,rsp
   140041e5a:	sub    rsp,0x80
   140041e61:	mov    rax,QWORD PTR [rip+0x43240]        # 0x1400850a8
   140041e68:	xor    rax,rsp
   140041e6b:	mov    QWORD PTR [rbp-0x8],rax
   140041e6f:	mov    rdi,rcx
   140041e72:	mov    rbx,rdx
   140041e75:	lea    rcx,[rbp-0x40]
   140041e79:	mov    rdx,r8
   140041e7c:	call   0x14003370c
   140041e81:	lea    r11,[rbp-0x40]
   140041e85:	lea    rdx,[rbp-0x20]
   140041e89:	mov    QWORD PTR [rsp+0x38],r11
   140041e8e:	and    DWORD PTR [rsp+0x30],0x0
   140041e93:	and    DWORD PTR [rsp+0x28],0x0
   140041e98:	and    DWORD PTR [rsp+0x20],0x0
   140041e9d:	lea    rcx,[rbp-0x18]
   140041ea1:	xor    r9d,r9d
   140041ea4:	mov    r8,rbx
   140041ea7:	call   0x14003d530
   140041eac:	lea    rcx,[rbp-0x18]
   140041eb0:	mov    rdx,rdi
   140041eb3:	mov    ebx,eax
   140041eb5:	call   0x1400403c4
   140041eba:	mov    edx,0x3
   140041ebf:	test   dl,bl
   140041ec1:	jne    0x140041efa
   140041ec3:	cmp    eax,0x1
   140041ec6:	jne    0x140041edd
   140041ec8:	cmp    BYTE PTR [rbp-0x28],0x0
   140041ecc:	je     0x140041ed9
   140041ece:	mov    rcx,QWORD PTR [rbp-0x30]
   140041ed2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140041ed9:	mov    eax,edx
   140041edb:	jmp    0x140041f2a
   140041edd:	cmp    eax,0x2
   140041ee0:	jne    0x140041f17
   140041ee2:	cmp    BYTE PTR [rbp-0x28],0x0
   140041ee6:	je     0x140041ef3
   140041ee8:	mov    rax,QWORD PTR [rbp-0x30]
   140041eec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041ef3:	mov    eax,0x4
   140041ef8:	jmp    0x140041f2a
   140041efa:	test   bl,0x1
   140041efd:	jne    0x140041ee2
   140041eff:	test   bl,0x2
   140041f02:	je     0x140041f17
   140041f04:	cmp    BYTE PTR [rbp-0x28],0x0
   140041f08:	je     0x140041ed9
   140041f0a:	mov    rax,QWORD PTR [rbp-0x30]
   140041f0e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041f15:	jmp    0x140041ed9
   140041f17:	cmp    BYTE PTR [rbp-0x28],0x0
   140041f1b:	je     0x140041f28
   140041f1d:	mov    rax,QWORD PTR [rbp-0x30]
   140041f21:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140041f28:	xor    eax,eax
   140041f2a:	mov    rcx,QWORD PTR [rbp-0x8]
   140041f2e:	xor    rcx,rsp
   140041f31:	call   0x140032f00
   140041f36:	lea    r11,[rsp+0x80]
   140041f3e:	mov    rbx,QWORD PTR [r11+0x20]
   140041f42:	mov    rdi,QWORD PTR [r11+0x28]
   140041f46:	mov    rsp,r11
   140041f49:	pop    rbp
   140041f4a:	ret    
   140041f4b:	int3   
   140041f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140041f51:	push   rdi
   140041f52:	sub    rsp,0x20
   140041f56:	mov    r10,QWORD PTR [r9+0x10]
   140041f5a:	xor    r11d,r11d
   140041f5d:	mov    rbx,rcx
   140041f60:	test   rcx,rcx
   140041f63:	jne    0x140041f7d
   140041f65:	call   0x140036858
   140041f6a:	mov    ebx,0x16
   140041f6f:	mov    DWORD PTR [rax],ebx
   140041f71:	call   0x1400367f0
   140041f76:	mov    eax,ebx
   140041f78:	jmp    0x14004200d
   140041f7d:	test   rdx,rdx
   140041f80:	je     0x140041f65
   140041f82:	mov    eax,r11d
   140041f85:	test   r8d,r8d
   140041f88:	mov    BYTE PTR [rcx],r11b
   140041f8b:	cmovg  eax,r8d
   140041f8f:	inc    eax
   140041f91:	cdqe   
   140041f93:	cmp    rdx,rax
   140041f96:	ja     0x140041fa4
   140041f98:	call   0x140036858
   140041f9d:	mov    ebx,0x22
   140041fa2:	jmp    0x140041f6f
   140041fa4:	mov    BYTE PTR [rcx],0x30
   140041fa7:	lea    rax,[rcx+0x1]
   140041fab:	jmp    0x140041fc8
   140041fad:	cmp    BYTE PTR [r10],r11b
   140041fb0:	je     0x140041fbb
   140041fb2:	movsx  ecx,BYTE PTR [r10]
   140041fb6:	inc    r10
   140041fb9:	jmp    0x140041fc0
   140041fbb:	mov    ecx,0x30
   140041fc0:	mov    BYTE PTR [rax],cl
   140041fc2:	inc    rax
   140041fc5:	dec    r8d
   140041fc8:	test   r8d,r8d
   140041fcb:	jg     0x140041fad
   140041fcd:	mov    BYTE PTR [rax],r11b
   140041fd0:	js     0x140041fe7
   140041fd2:	cmp    BYTE PTR [r10],0x35
   140041fd6:	jl     0x140041fe7
   140041fd8:	jmp    0x140041fdd
   140041fda:	mov    BYTE PTR [rax],0x30
   140041fdd:	dec    rax
   140041fe0:	cmp    BYTE PTR [rax],0x39
   140041fe3:	je     0x140041fda
   140041fe5:	inc    BYTE PTR [rax]
   140041fe7:	cmp    BYTE PTR [rbx],0x31
   140041fea:	jne    0x140041ff2
   140041fec:	inc    DWORD PTR [r9+0x4]
   140041ff0:	jmp    0x14004200b
   140041ff2:	lea    rcx,[rbx+0x1]
   140041ff6:	call   0x140036550
   140041ffb:	lea    rdx,[rbx+0x1]
   140041fff:	mov    rcx,rbx
   140042002:	lea    r8,[rax+0x1]
   140042006:	call   0x140033260
   14004200b:	xor    eax,eax
   14004200d:	mov    rbx,QWORD PTR [rsp+0x30]
   140042012:	add    rsp,0x20
   140042016:	pop    rdi
   140042017:	ret    
   140042018:	mov    QWORD PTR [rsp+0x8],rbx
   14004201d:	movzx  r11d,WORD PTR [rdx+0x6]
   140042022:	mov    r9,rcx
   140042025:	mov    ecx,DWORD PTR [rdx+0x4]
   140042028:	movzx  r8d,r11w
   14004202c:	mov    eax,0x8000
   140042031:	mov    r10d,0x7ff
   140042037:	shr    r8w,0x4
   14004203c:	and    r11w,ax
   140042040:	mov    eax,DWORD PTR [rdx]
   140042042:	and    r8w,r10w
   140042046:	and    ecx,0xfffff
   14004204c:	mov    ebx,0x80000000
   140042051:	movzx  edx,r8w
   140042055:	test   edx,edx
   140042057:	je     0x140042071
   140042059:	cmp    edx,r10d
   14004205c:	je     0x140042069
   14004205e:	mov    edx,0x3c00
   140042063:	add    r8w,dx
   140042067:	jmp    0x14004208d
   140042069:	mov    r8d,0x7fff
   14004206f:	jmp    0x14004208d
   140042071:	test   ecx,ecx
   140042073:	jne    0x140042082
   140042075:	test   eax,eax
   140042077:	jne    0x140042082
   140042079:	and    DWORD PTR [r9+0x4],eax
   14004207d:	and    DWORD PTR [r9],eax
   140042080:	jmp    0x1400420d3
   140042082:	mov    edx,0x3c01
   140042087:	add    r8w,dx
   14004208b:	xor    ebx,ebx
   14004208d:	mov    r10d,eax
   140042090:	shl    ecx,0xb
   140042093:	shr    r10d,0x15
   140042097:	or     r10d,ecx
   14004209a:	or     r10d,ebx
   14004209d:	shl    eax,0xb
   1400420a0:	mov    DWORD PTR [r9],eax
   1400420a3:	jmp    0x1400420c6
   1400420a5:	mov    edx,DWORD PTR [r9]
   1400420a8:	lea    eax,[r10+r10*1]
   1400420ac:	mov    ecx,edx
   1400420ae:	shr    ecx,0x1f
   1400420b1:	mov    r10d,ecx
   1400420b4:	or     r10d,eax
   1400420b7:	lea    eax,[rdx+rdx*1]
   1400420ba:	mov    DWORD PTR [r9],eax
   1400420bd:	mov    eax,0xffff
   1400420c2:	add    r8w,ax
   1400420c6:	mov    DWORD PTR [r9+0x4],r10d
   1400420ca:	test   r10d,r10d
   1400420cd:	jns    0x1400420a5
   1400420cf:	or     r11w,r8w
   1400420d3:	mov    rbx,QWORD PTR [rsp+0x8]
   1400420d8:	mov    WORD PTR [r9+0x8],r11w
   1400420dd:	ret    
   1400420de:	int3   
   1400420df:	int3   
   1400420e0:	rex push rbp
   1400420e2:	push   rbx
   1400420e3:	push   rsi
   1400420e4:	push   rdi
   1400420e5:	lea    rbp,[rsp-0x3f]
   1400420ea:	sub    rsp,0x88
   1400420f1:	mov    rax,QWORD PTR [rip+0x42fb0]        # 0x1400850a8
   1400420f8:	xor    rax,rsp
   1400420fb:	mov    QWORD PTR [rbp+0x27],rax
   1400420ff:	mov    rdi,rdx
   140042102:	mov    QWORD PTR [rbp-0x19],rcx
   140042106:	lea    rdx,[rbp-0x19]
   14004210a:	lea    rcx,[rbp-0x9]
   14004210e:	mov    rbx,r9
   140042111:	mov    rsi,r8
   140042114:	call   0x140042018
   140042119:	mov    rax,QWORD PTR [rbp-0x9]
   14004211d:	xor    r8d,r8d
   140042120:	mov    QWORD PTR [rbp-0x19],rax
   140042124:	movzx  eax,WORD PTR [rbp-0x1]
   140042128:	lea    r9,[rbp+0x7]
   14004212c:	lea    edx,[r8+0x11]
   140042130:	lea    rcx,[rbp-0x19]
   140042134:	mov    WORD PTR [rbp-0x11],ax
   140042138:	call   0x140042198
   14004213d:	movsx  ecx,BYTE PTR [rbp+0x9]
   140042141:	lea    r8,[rbp+0xb]
   140042145:	mov    DWORD PTR [rdi],ecx
   140042147:	movsx  ecx,WORD PTR [rbp+0x7]
   14004214b:	mov    rdx,rbx
   14004214e:	mov    DWORD PTR [rdi+0x4],ecx
   140042151:	mov    rcx,rsi
   140042154:	mov    DWORD PTR [rdi+0x8],eax
   140042157:	call   0x1400336a8
   14004215c:	test   eax,eax
   14004215e:	jne    0x14004217f
   140042160:	mov    QWORD PTR [rdi+0x10],rsi
   140042164:	mov    rax,rdi
   140042167:	mov    rcx,QWORD PTR [rbp+0x27]
   14004216b:	xor    rcx,rsp
   14004216e:	call   0x140032f00
   140042173:	add    rsp,0x88
   14004217a:	pop    rdi
   14004217b:	pop    rsi
   14004217c:	pop    rbx
   14004217d:	pop    rbp
   14004217e:	ret    
   14004217f:	and    QWORD PTR [rsp+0x20],0x0
   140042185:	xor    r9d,r9d
   140042188:	xor    r8d,r8d
   14004218b:	xor    edx,edx
   14004218d:	xor    ecx,ecx
   14004218f:	call   0x14003674c
   140042194:	int3   
   140042195:	int3   
   140042196:	int3   
   140042197:	int3   
   140042198:	mov    QWORD PTR [rsp+0x10],rbx
   14004219d:	push   rbp
   14004219e:	push   rsi
   14004219f:	push   rdi
   1400421a0:	push   r12
   1400421a2:	push   r13
   1400421a4:	push   r14
   1400421a6:	push   r15
   1400421a8:	lea    rbp,[rsp-0x27]
   1400421ad:	sub    rsp,0xc0
   1400421b4:	mov    rax,QWORD PTR [rip+0x42eed]        # 0x1400850a8
   1400421bb:	xor    rax,rsp
   1400421be:	mov    QWORD PTR [rbp+0x17],rax
   1400421c2:	movzx  edi,WORD PTR [rcx+0x8]
   1400421c6:	mov    r10d,DWORD PTR [rcx]
   1400421c9:	mov    rbx,r9
   1400421cc:	mov    r9d,DWORD PTR [rcx+0x4]
   1400421d0:	movzx  ecx,di
   1400421d3:	mov    r11d,0x1
   1400421d9:	mov    DWORD PTR [rbp-0x4d],edx
   1400421dc:	mov    edx,0x8000
   1400421e1:	xor    r13d,r13d
   1400421e4:	and    cx,dx
   1400421e7:	lea    r15d,[rdx-0x1]
   1400421eb:	mov    DWORD PTR [rbp-0x39],r8d
   1400421ef:	and    di,r15w
   1400421f3:	mov    QWORD PTR [rbp-0x41],rbx
   1400421f7:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   1400421fe:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   140042205:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   14004220c:	mov    WORD PTR [rbp-0x67],cx
   140042210:	lea    eax,[r11+0x1f]
   140042214:	lea    r8d,[r11+0x2c]
   140042218:	test   cx,cx
   14004221b:	je     0x140042223
   14004221d:	mov    BYTE PTR [rbx+0x2],r8b
   140042221:	jmp    0x140042226
   140042223:	mov    BYTE PTR [rbx+0x2],al
   140042226:	test   di,di
   140042229:	jne    0x14004225a
   14004222b:	test   r9d,r9d
   14004222e:	jne    0x14004236b
   140042234:	test   r10d,r10d
   140042237:	jne    0x14004236b
   14004223d:	cmp    cx,dx
   140042240:	cmove  eax,r8d
   140042244:	mov    WORD PTR [rbx+0x3],0x3001
   14004224a:	mov    WORD PTR [rbx],r13w
   14004224e:	mov    BYTE PTR [rbx+0x2],al
   140042251:	mov    BYTE PTR [rbx+0x5],r13b
   140042255:	jmp    0x140042be3
   14004225a:	cmp    di,r15w
   14004225e:	jne    0x14004236b
   140042264:	mov    esi,0x80000000
   140042269:	mov    WORD PTR [rbx],r11w
   14004226d:	cmp    r9d,esi
   140042270:	jne    0x140042277
   140042272:	test   r10d,r10d
   140042275:	je     0x1400422b0
   140042277:	bt     r9d,0x1e
   14004227c:	jb     0x1400422b0
   14004227e:	lea    rcx,[rbx+0x4]
   140042282:	lea    r8,[rip+0x289af]        # 0x14006ac38
   140042289:	mov    edx,0x16
   14004228e:	call   0x1400336a8
   140042293:	test   eax,eax
   140042295:	je     0x14004234a
   14004229b:	xor    r9d,r9d
   14004229e:	xor    r8d,r8d
   1400422a1:	xor    edx,edx
   1400422a3:	xor    ecx,ecx
   1400422a5:	mov    QWORD PTR [rsp+0x20],r13
   1400422aa:	call   0x14003674c
   1400422af:	int3   
   1400422b0:	test   cx,cx
   1400422b3:	je     0x1400422f0
   1400422b5:	cmp    r9d,0xc0000000
   1400422bc:	jne    0x1400422f0
   1400422be:	test   r10d,r10d
   1400422c1:	jne    0x140042331
   1400422c3:	lea    rcx,[rbx+0x4]
   1400422c7:	lea    r8,[rip+0x28962]        # 0x14006ac30
   1400422ce:	lea    edx,[r10+0x16]
   1400422d2:	call   0x1400336a8
   1400422d7:	test   eax,eax
   1400422d9:	je     0x140042312
   1400422db:	xor    r9d,r9d
   1400422de:	xor    r8d,r8d
   1400422e1:	xor    edx,edx
   1400422e3:	xor    ecx,ecx
   1400422e5:	mov    QWORD PTR [rsp+0x20],r13
   1400422ea:	call   0x14003674c
   1400422ef:	int3   
   1400422f0:	cmp    r9d,esi
   1400422f3:	jne    0x140042331
   1400422f5:	test   r10d,r10d
   1400422f8:	jne    0x140042331
   1400422fa:	lea    rcx,[rbx+0x4]
   1400422fe:	lea    r8,[rip+0x28923]        # 0x14006ac28
   140042305:	lea    edx,[r10+0x16]
   140042309:	call   0x1400336a8
   14004230e:	test   eax,eax
   140042310:	jne    0x14004231c
   140042312:	mov    eax,0x5
   140042317:	mov    BYTE PTR [rbx+0x3],al
   14004231a:	jmp    0x14004234e
   14004231c:	xor    r9d,r9d
   14004231f:	xor    r8d,r8d
   140042322:	xor    edx,edx
   140042324:	xor    ecx,ecx
   140042326:	mov    QWORD PTR [rsp+0x20],r13
   14004232b:	call   0x14003674c
   140042330:	int3   
   140042331:	lea    rcx,[rbx+0x4]
   140042335:	lea    r8,[rip+0x288e4]        # 0x14006ac20
   14004233c:	mov    edx,0x16
   140042341:	call   0x1400336a8
   140042346:	test   eax,eax
   140042348:	jne    0x140042356
   14004234a:	mov    BYTE PTR [rbx+0x3],0x6
   14004234e:	mov    r11d,r13d
   140042351:	jmp    0x140042be3
   140042356:	xor    r9d,r9d
   140042359:	xor    r8d,r8d
   14004235c:	xor    edx,edx
   14004235e:	xor    ecx,ecx
   140042360:	mov    QWORD PTR [rsp+0x20],r13
   140042365:	call   0x14003674c
   14004236a:	int3   
   14004236b:	movzx  r8d,di
   14004236f:	mov    ecx,r9d
   140042372:	mov    DWORD PTR [rbp-0x13],r9d
   140042376:	shr    ecx,0x18
   140042379:	mov    eax,r8d
   14004237c:	mov    DWORD PTR [rbp-0x17],r10d
   140042380:	shr    eax,0x8
   140042383:	lea    r9,[rip+0x44106]        # 0x140086490
   14004238a:	mov    esi,0x80000000
   14004238f:	imul   r8d,r8d,0x4d10
   140042396:	lea    edx,[rax+rcx*2]
   140042399:	mov    r12d,0x5
   14004239f:	sub    r9,0x60
   1400423a3:	mov    WORD PTR [rbp-0xf],di
   1400423a7:	mov    WORD PTR [rbp-0x19],r13w
   1400423ac:	mov    r14d,0xbffd
   1400423b2:	imul   edx,edx,0x4d
   1400423b5:	lea    ecx,[rdx+r8*1-0x134312f4]
   1400423bd:	mov    DWORD PTR [rbp-0x49],r12d
   1400423c1:	lea    edi,[rsi-0x1]
   1400423c4:	sar    ecx,0x10
   1400423c7:	movsx  r10d,cx
   1400423cb:	mov    DWORD PTR [rbp-0x61],ecx
   1400423ce:	neg    r10d
   1400423d1:	je     0x14004273c
   1400423d7:	test   r10d,r10d
   1400423da:	jns    0x1400423ed
   1400423dc:	lea    r9,[rip+0x4420d]        # 0x1400865f0
   1400423e3:	neg    r10d
   1400423e6:	sub    r9,0x60
   1400423ea:	test   r10d,r10d
   1400423ed:	je     0x14004273c
   1400423f3:	mov    r8d,DWORD PTR [rbp-0x15]
   1400423f7:	mov    edx,DWORD PTR [rbp-0x19]
   1400423fa:	mov    eax,r10d
   1400423fd:	add    r9,0x54
   140042401:	sar    r10d,0x3
   140042405:	and    eax,0x7
   140042408:	mov    DWORD PTR [rbp-0x51],r10d
   14004240c:	mov    QWORD PTR [rbp-0x59],r9
   140042410:	je     0x140042724
   140042416:	cdqe   
   140042418:	lea    rcx,[rax+rax*2]
   14004241c:	lea    r14,[r9+rcx*4]
   140042420:	mov    r9d,0x8000
   140042426:	mov    QWORD PTR [rbp-0x31],r14
   14004242a:	cmp    WORD PTR [r14],r9w
   14004242e:	jb     0x140042450
   140042430:	mov    rcx,QWORD PTR [r14]
   140042433:	mov    eax,DWORD PTR [r14+0x8]
   140042437:	lea    r14,[rbp+0x7]
   14004243b:	mov    QWORD PTR [rbp+0x7],rcx
   14004243f:	shr    rcx,0x10
   140042443:	mov    DWORD PTR [rbp+0xf],eax
   140042446:	sub    ecx,r11d
   140042449:	mov    QWORD PTR [rbp-0x31],r14
   14004244d:	mov    DWORD PTR [rbp+0x9],ecx
   140042450:	movzx  ecx,WORD PTR [r14+0xa]
   140042455:	movzx  eax,WORD PTR [rbp-0xf]
   140042459:	mov    DWORD PTR [rbp-0x65],r13d
   14004245d:	movzx  ebx,cx
   140042460:	and    cx,r15w
   140042464:	mov    QWORD PTR [rbp-0x29],0x0
   14004246c:	xor    bx,ax
   14004246f:	and    ax,r15w
   140042473:	mov    DWORD PTR [rbp-0x21],r13d
   140042477:	and    bx,r9w
   14004247b:	lea    r9d,[rax+rcx*1]
   14004247f:	mov    WORD PTR [rbp-0x69],bx
   140042483:	cmp    ax,r15w
   140042487:	jae    0x140042704
   14004248d:	cmp    cx,r15w
   140042491:	jae    0x140042704
   140042497:	mov    r15d,0xbffd
   14004249d:	cmp    r9w,r15w
   1400424a1:	ja     0x1400426fe
   1400424a7:	mov    ebx,0x3fbf
   1400424ac:	cmp    r9w,bx
   1400424b0:	ja     0x1400424c5
   1400424b2:	mov    QWORD PTR [rbp-0x15],0x0
   1400424ba:	mov    r15d,0x7fff
   1400424c0:	jmp    0x140042717
   1400424c5:	test   ax,ax
   1400424c8:	jne    0x1400424ec
   1400424ca:	add    r9w,r11w
   1400424ce:	test   DWORD PTR [rbp-0x11],edi
   1400424d1:	jne    0x1400424ec
   1400424d3:	test   r8d,r8d
   1400424d6:	jne    0x1400424ec
   1400424d8:	test   edx,edx
   1400424da:	jne    0x1400424ec
   1400424dc:	mov    WORD PTR [rbp-0xf],r13w
   1400424e1:	mov    r15d,0x7fff
   1400424e7:	jmp    0x140042720
   1400424ec:	test   cx,cx
   1400424ef:	jne    0x140042506
   1400424f1:	add    r9w,r11w
   1400424f5:	test   DWORD PTR [r14+0x8],edi
   1400424f9:	jne    0x140042506
   1400424fb:	cmp    DWORD PTR [r14+0x4],r13d
   1400424ff:	jne    0x140042506
   140042501:	cmp    DWORD PTR [r14],r13d
   140042504:	je     0x1400424b2
   140042506:	mov    esi,r13d
   140042509:	lea    r10,[rbp-0x29]
   14004250d:	mov    edi,r12d
   140042510:	lea    eax,[rsi+rsi*1]
   140042513:	mov    r15d,edi
   140042516:	movsxd rcx,eax
   140042519:	test   edi,edi
   14004251b:	jle    0x140042573
   14004251d:	mov    ebx,esi
   14004251f:	lea    r13,[r14+0x8]
   140042523:	lea    r12,[rbp+rcx*1-0x19]
   140042528:	and    ebx,r11d
   14004252b:	xor    r14d,r14d
   14004252e:	movzx  eax,WORD PTR [r12]
   140042533:	movzx  ecx,WORD PTR [r13+0x0]
   140042538:	mov    r8d,r14d
   14004253b:	imul   ecx,eax
   14004253e:	mov    eax,DWORD PTR [r10]
   140042541:	lea    edx,[rax+rcx*1]
   140042544:	cmp    edx,eax
   140042546:	jb     0x14004254c
   140042548:	cmp    edx,ecx
   14004254a:	jae    0x14004254f
   14004254c:	mov    r8d,r11d
   14004254f:	mov    DWORD PTR [r10],edx
   140042552:	test   r8d,r8d
   140042555:	je     0x14004255c
   140042557:	add    WORD PTR [r10+0x4],r11w
   14004255c:	sub    r15d,r11d
   14004255f:	add    r12,0x2
   140042563:	sub    r13,0x2
   140042567:	test   r15d,r15d
   14004256a:	jg     0x14004252e
   14004256c:	mov    r14,QWORD PTR [rbp-0x31]
   140042570:	xor    r13d,r13d
   140042573:	sub    edi,r11d
   140042576:	add    r10,0x2
   14004257a:	add    esi,r11d
   14004257d:	test   edi,edi
   14004257f:	jg     0x140042510
   140042581:	mov    r10d,DWORD PTR [rbp-0x21]
   140042585:	mov    r8d,DWORD PTR [rbp-0x29]
   140042589:	mov    eax,0xc002
   14004258e:	add    r9w,ax
   140042592:	mov    esi,0x80000000
   140042597:	mov    ebx,0xffff
   14004259c:	test   r9w,r9w
   1400425a0:	jle    0x1400425de
   1400425a2:	test   esi,r10d
   1400425a5:	jne    0x1400425d8
   1400425a7:	mov    edi,DWORD PTR [rbp-0x25]
   1400425aa:	mov    edx,r8d
   1400425ad:	add    r10d,r10d
   1400425b0:	shr    edx,0x1f
   1400425b3:	add    r8d,r8d
   1400425b6:	mov    ecx,edi
   1400425b8:	shr    ecx,0x1f
   1400425bb:	lea    eax,[rdi+rdi*1]
   1400425be:	add    r9w,bx
   1400425c2:	or     eax,edx
   1400425c4:	or     r10d,ecx
   1400425c7:	mov    DWORD PTR [rbp-0x29],r8d
   1400425cb:	mov    DWORD PTR [rbp-0x25],eax
   1400425ce:	mov    DWORD PTR [rbp-0x21],r10d
   1400425d2:	test   r9w,r9w
   1400425d6:	jg     0x1400425a2
   1400425d8:	test   r9w,r9w
   1400425dc:	jg     0x14004264b
   1400425de:	add    r9w,bx
   1400425e2:	jns    0x14004264b
   1400425e4:	movzx  eax,r9w
   1400425e8:	neg    ax
   1400425eb:	movzx  edx,ax
   1400425ee:	add    r9w,dx
   1400425f2:	mov    WORD PTR [rbp-0x5d],r9w
   1400425f7:	mov    r9d,DWORD PTR [rbp-0x65]
   1400425fb:	test   BYTE PTR [rbp-0x29],r11b
   1400425ff:	je     0x140042604
   140042601:	add    r9d,r11d
   140042604:	mov    edi,DWORD PTR [rbp-0x25]
   140042607:	mov    eax,r10d
   14004260a:	shr    r8d,1
   14004260d:	mov    ecx,edi
   14004260f:	shl    eax,0x1f
   140042612:	shr    edi,1
   140042614:	shl    ecx,0x1f
   140042617:	or     edi,eax
   140042619:	shr    r10d,1
   14004261c:	or     r8d,ecx
   14004261f:	sub    rdx,r11
   140042622:	mov    DWORD PTR [rbp-0x25],edi
   140042625:	mov    DWORD PTR [rbp-0x29],r8d
   140042629:	jne    0x1400425fb
   14004262b:	test   r9d,r9d
   14004262e:	movzx  r9d,WORD PTR [rbp-0x5d]
   140042633:	mov    DWORD PTR [rbp-0x21],r10d
   140042637:	je     0x14004264b
   140042639:	movzx  eax,r8w
   14004263d:	or     ax,r11w
   140042641:	mov    WORD PTR [rbp-0x29],ax
   140042645:	mov    r8d,DWORD PTR [rbp-0x29]
   140042649:	jmp    0x14004264f
   14004264b:	movzx  eax,WORD PTR [rbp-0x29]
   14004264f:	mov    ecx,0x8000
   140042654:	cmp    ax,cx
   140042657:	ja     0x140042669
   140042659:	and    r8d,0x1ffff
   140042660:	cmp    r8d,0x18000
   140042667:	jne    0x1400426b1
   140042669:	mov    eax,DWORD PTR [rbp-0x27]
   14004266c:	or     edx,0xffffffff
   14004266f:	cmp    eax,edx
   140042671:	jne    0x1400426ab
   140042673:	mov    eax,DWORD PTR [rbp-0x23]
   140042676:	mov    DWORD PTR [rbp-0x27],r13d
   14004267a:	cmp    eax,edx
   14004267c:	jne    0x14004269f
   14004267e:	movzx  eax,WORD PTR [rbp-0x1f]
   140042682:	mov    DWORD PTR [rbp-0x23],r13d
   140042686:	cmp    ax,bx
   140042689:	jne    0x140042695
   14004268b:	mov    WORD PTR [rbp-0x1f],cx
   14004268f:	add    r9w,r11w
   140042693:	jmp    0x1400426a5
   140042695:	add    ax,r11w
   140042699:	mov    WORD PTR [rbp-0x1f],ax
   14004269d:	jmp    0x1400426a5
   14004269f:	add    eax,r11d
   1400426a2:	mov    DWORD PTR [rbp-0x23],eax
   1400426a5:	mov    r10d,DWORD PTR [rbp-0x21]
   1400426a9:	jmp    0x1400426b1
   1400426ab:	add    eax,r11d
   1400426ae:	mov    DWORD PTR [rbp-0x27],eax
   1400426b1:	mov    r15d,0x7fff
   1400426b7:	mov    r12d,0x5
   1400426bd:	mov    edi,0x7fffffff
   1400426c2:	cmp    r9w,r15w
   1400426c6:	jb     0x1400426d5
   1400426c8:	movzx  eax,WORD PTR [rbp-0x69]
   1400426cc:	mov    r10d,DWORD PTR [rbp-0x51]
   1400426d0:	neg    ax
   1400426d3:	jmp    0x140042707
   1400426d5:	movzx  eax,WORD PTR [rbp-0x27]
   1400426d9:	or     r9w,WORD PTR [rbp-0x69]
   1400426de:	mov    DWORD PTR [rbp-0x13],r10d
   1400426e2:	mov    r10d,DWORD PTR [rbp-0x51]
   1400426e6:	mov    WORD PTR [rbp-0x19],ax
   1400426ea:	mov    eax,DWORD PTR [rbp-0x25]
   1400426ed:	mov    DWORD PTR [rbp-0x17],eax
   1400426f0:	mov    r8d,DWORD PTR [rbp-0x15]
   1400426f4:	mov    edx,DWORD PTR [rbp-0x19]
   1400426f7:	mov    WORD PTR [rbp-0xf],r9w
   1400426fc:	jmp    0x140042720
   1400426fe:	mov    r15d,0x7fff
   140042704:	neg    bx
   140042707:	sbb    eax,eax
   140042709:	mov    DWORD PTR [rbp-0x15],r13d
   14004270d:	and    eax,esi
   14004270f:	add    eax,0x7fff8000
   140042714:	mov    DWORD PTR [rbp-0x11],eax
   140042717:	mov    edx,r13d
   14004271a:	mov    r8d,r13d
   14004271d:	mov    DWORD PTR [rbp-0x19],edx
   140042720:	mov    r9,QWORD PTR [rbp-0x59]
   140042724:	test   r10d,r10d
   140042727:	jne    0x1400423fa
   14004272d:	mov    rbx,QWORD PTR [rbp-0x41]
   140042731:	mov    ecx,DWORD PTR [rbp-0x61]
   140042734:	mov    r14d,0xbffd
   14004273a:	jmp    0x140042743
   14004273c:	mov    r8d,DWORD PTR [rbp-0x15]
   140042740:	mov    edx,DWORD PTR [rbp-0x19]
   140042743:	mov    eax,DWORD PTR [rbp-0x11]
   140042746:	mov    r9d,0x3fff
   14004274c:	shr    eax,0x10
   14004274f:	cmp    ax,r9w
   140042753:	jb     0x140042a0d
   140042759:	add    cx,r11w
   14004275d:	mov    r9d,0x8000
   140042763:	mov    DWORD PTR [rbp-0x65],r13d
   140042767:	lea    r10d,[r9-0x1]
   14004276b:	mov    DWORD PTR [rbp-0x61],ecx
   14004276e:	movzx  ecx,WORD PTR [rbp+0x1]
   140042772:	movzx  r15d,cx
   140042776:	and    cx,r10w
   14004277a:	mov    QWORD PTR [rbp-0x29],0x0
   140042782:	xor    r15w,ax
   140042786:	and    ax,r10w
   14004278a:	mov    DWORD PTR [rbp-0x21],r13d
   14004278e:	and    r15w,r9w
   140042792:	lea    r9d,[rax+rcx*1]
   140042796:	cmp    ax,r10w
   14004279a:	jae    0x1400429f7
   1400427a0:	cmp    cx,r10w
   1400427a4:	jae    0x1400429f7
   1400427aa:	cmp    r9w,r14w
   1400427ae:	ja     0x1400429f7
   1400427b4:	mov    r10d,0x3fbf
   1400427ba:	cmp    r9w,r10w
   1400427be:	ja     0x1400427c9
   1400427c0:	mov    DWORD PTR [rbp-0x11],r13d
   1400427c4:	jmp    0x140042a07
   1400427c9:	test   ax,ax
   1400427cc:	jne    0x1400427ea
   1400427ce:	add    r9w,r11w
   1400427d2:	test   DWORD PTR [rbp-0x11],edi
   1400427d5:	jne    0x1400427ea
   1400427d7:	test   r8d,r8d
   1400427da:	jne    0x1400427ea
   1400427dc:	test   edx,edx
   1400427de:	jne    0x1400427ea
   1400427e0:	mov    WORD PTR [rbp-0xf],r13w
   1400427e5:	jmp    0x140042a0d
   1400427ea:	test   cx,cx
   1400427ed:	jne    0x140042804
   1400427ef:	add    r9w,r11w
   1400427f3:	test   DWORD PTR [rbp-0x1],edi
   1400427f6:	jne    0x140042804
   1400427f8:	cmp    DWORD PTR [rbp-0x5],r13d
   1400427fc:	jne    0x140042804
   1400427fe:	cmp    DWORD PTR [rbp-0x9],r13d
   140042802:	je     0x1400427c0
   140042804:	mov    edi,r13d
   140042807:	lea    rdx,[rbp-0x29]
   14004280b:	lea    eax,[rdi+rdi*1]
   14004280e:	xor    ebx,ebx
   140042810:	mov    r13d,r12d
   140042813:	movsxd rcx,eax
   140042816:	test   r12d,r12d
   140042819:	jle    0x14004286c
   14004281b:	mov    r14d,edi
   14004281e:	lea    rsi,[rbp-0x1]
   140042822:	lea    r12,[rbp+rcx*1-0x19]
   140042827:	and    r14d,r11d
   14004282a:	movzx  eax,WORD PTR [r12]
   14004282f:	movzx  ecx,WORD PTR [rsi]
   140042832:	mov    r8d,ebx
   140042835:	imul   ecx,eax
   140042838:	mov    eax,DWORD PTR [rdx]
   14004283a:	lea    r10d,[rax+rcx*1]
   14004283e:	cmp    r10d,eax
   140042841:	jb     0x140042848
   140042843:	cmp    r10d,ecx
   140042846:	jae    0x14004284b
   140042848:	mov    r8d,r11d
   14004284b:	mov    DWORD PTR [rdx],r10d
   14004284e:	test   r8d,r8d
   140042851:	je     0x140042858
   140042853:	add    WORD PTR [rdx+0x4],r11w
   140042858:	sub    r13d,r11d
   14004285b:	add    r12,0x2
   14004285f:	sub    rsi,0x2
   140042863:	test   r13d,r13d
   140042866:	jg     0x14004282a
   140042868:	mov    r12d,DWORD PTR [rbp-0x49]
   14004286c:	sub    r12d,r11d
   14004286f:	add    rdx,0x2
   140042873:	add    edi,r11d
   140042876:	xor    r13d,r13d
   140042879:	mov    DWORD PTR [rbp-0x49],r12d
   14004287d:	test   r12d,r12d
   140042880:	jg     0x14004280b
   140042882:	mov    rbx,QWORD PTR [rbp-0x41]
   140042886:	mov    r8d,DWORD PTR [rbp-0x21]
   14004288a:	mov    r10d,DWORD PTR [rbp-0x29]
   14004288e:	mov    eax,0xc002
   140042893:	mov    esi,0x80000000
   140042898:	mov    r12d,0xffff
   14004289e:	add    r9w,ax
   1400428a2:	test   r9w,r9w
   1400428a6:	jle    0x1400428e4
   1400428a8:	test   esi,r8d
   1400428ab:	jne    0x1400428de
   1400428ad:	mov    edi,DWORD PTR [rbp-0x25]
   1400428b0:	mov    edx,r10d
   1400428b3:	add    r8d,r8d
   1400428b6:	shr    edx,0x1f
   1400428b9:	add    r10d,r10d
   1400428bc:	mov    ecx,edi
   1400428be:	shr    ecx,0x1f
   1400428c1:	lea    eax,[rdi+rdi*1]
   1400428c4:	add    r9w,r12w
   1400428c8:	or     eax,edx
   1400428ca:	or     r8d,ecx
   1400428cd:	mov    DWORD PTR [rbp-0x29],r10d
   1400428d1:	mov    DWORD PTR [rbp-0x25],eax
   1400428d4:	mov    DWORD PTR [rbp-0x21],r8d
   1400428d8:	test   r9w,r9w
   1400428dc:	jg     0x1400428a8
   1400428de:	test   r9w,r9w
   1400428e2:	jg     0x140042949
   1400428e4:	add    r9w,r12w
   1400428e8:	jns    0x140042949
   1400428ea:	mov    ebx,DWORD PTR [rbp-0x65]
   1400428ed:	movzx  eax,r9w
   1400428f1:	neg    ax
   1400428f4:	movzx  edx,ax
   1400428f7:	add    r9w,dx
   1400428fb:	test   BYTE PTR [rbp-0x29],r11b
   1400428ff:	je     0x140042904
   140042901:	add    ebx,r11d
   140042904:	mov    edi,DWORD PTR [rbp-0x25]
   140042907:	mov    eax,r8d
   14004290a:	shr    r10d,1
   14004290d:	mov    ecx,edi
   14004290f:	shl    eax,0x1f
   140042912:	shr    edi,1
   140042914:	shl    ecx,0x1f
   140042917:	or     edi,eax
   140042919:	shr    r8d,1
   14004291c:	or     r10d,ecx
   14004291f:	sub    rdx,r11
   140042922:	mov    DWORD PTR [rbp-0x25],edi
   140042925:	mov    DWORD PTR [rbp-0x29],r10d
   140042929:	jne    0x1400428fb
   14004292b:	test   ebx,ebx
   14004292d:	mov    rbx,QWORD PTR [rbp-0x41]
   140042931:	mov    DWORD PTR [rbp-0x21],r8d
   140042935:	je     0x140042949
   140042937:	movzx  eax,r10w
   14004293b:	or     ax,r11w
   14004293f:	mov    WORD PTR [rbp-0x29],ax
   140042943:	mov    r10d,DWORD PTR [rbp-0x29]
   140042947:	jmp    0x14004294d
   140042949:	movzx  eax,WORD PTR [rbp-0x29]
   14004294d:	mov    ecx,0x8000
   140042952:	cmp    ax,cx
   140042955:	ja     0x140042967
   140042957:	and    r10d,0x1ffff
   14004295e:	cmp    r10d,0x18000
   140042965:	jne    0x1400429b0
   140042967:	mov    eax,DWORD PTR [rbp-0x27]
   14004296a:	or     edx,0xffffffff
   14004296d:	cmp    eax,edx
   14004296f:	jne    0x1400429aa
   140042971:	mov    eax,DWORD PTR [rbp-0x23]
   140042974:	mov    DWORD PTR [rbp-0x27],r13d
   140042978:	cmp    eax,edx
   14004297a:	jne    0x14004299e
   14004297c:	movzx  eax,WORD PTR [rbp-0x1f]
   140042980:	mov    DWORD PTR [rbp-0x23],r13d
   140042984:	cmp    ax,r12w
   140042988:	jne    0x140042994
   14004298a:	mov    WORD PTR [rbp-0x1f],cx
   14004298e:	add    r9w,r11w
   140042992:	jmp    0x1400429a4
   140042994:	add    ax,r11w
   140042998:	mov    WORD PTR [rbp-0x1f],ax
   14004299c:	jmp    0x1400429a4
   14004299e:	add    eax,r11d
   1400429a1:	mov    DWORD PTR [rbp-0x23],eax
   1400429a4:	mov    r8d,DWORD PTR [rbp-0x21]
   1400429a8:	jmp    0x1400429b0
   1400429aa:	add    eax,r11d
   1400429ad:	mov    DWORD PTR [rbp-0x27],eax
   1400429b0:	mov    eax,0x7fff
   1400429b5:	cmp    r9w,ax
   1400429b9:	jb     0x1400429d3
   1400429bb:	neg    r15w
   1400429bf:	mov    r8d,r13d
   1400429c2:	mov    edx,r13d
   1400429c5:	sbb    eax,eax
   1400429c7:	and    eax,esi
   1400429c9:	add    eax,0x7fff8000
   1400429ce:	mov    DWORD PTR [rbp-0x11],eax
   1400429d1:	jmp    0x140042a12
   1400429d3:	movzx  eax,WORD PTR [rbp-0x27]
   1400429d7:	or     r9w,r15w
   1400429db:	mov    DWORD PTR [rbp-0x13],r8d
   1400429df:	mov    WORD PTR [rbp-0x19],ax
   1400429e3:	mov    eax,DWORD PTR [rbp-0x25]
   1400429e6:	mov    WORD PTR [rbp-0xf],r9w
   1400429eb:	mov    DWORD PTR [rbp-0x17],eax
   1400429ee:	mov    r8d,DWORD PTR [rbp-0x15]
   1400429f2:	mov    edx,DWORD PTR [rbp-0x19]
   1400429f5:	jmp    0x140042a12
   1400429f7:	neg    r15w
   1400429fb:	sbb    eax,eax
   1400429fd:	and    eax,esi
   1400429ff:	add    eax,0x7fff8000
   140042a04:	mov    DWORD PTR [rbp-0x11],eax
   140042a07:	mov    edx,r13d
   140042a0a:	mov    r8d,r13d
   140042a0d:	mov    ecx,0x8000
   140042a12:	mov    eax,DWORD PTR [rbp-0x61]
   140042a15:	mov    r12d,DWORD PTR [rbp-0x4d]
   140042a19:	mov    WORD PTR [rbx],ax
   140042a1c:	test   BYTE PTR [rbp-0x39],r11b
   140042a20:	je     0x140042a3f
   140042a22:	cwde   
   140042a23:	add    r12d,eax
   140042a26:	test   r12d,r12d
   140042a29:	jg     0x140042a3f
   140042a2b:	cmp    WORD PTR [rbp-0x67],cx
   140042a2f:	mov    eax,0x20
   140042a34:	lea    ecx,[rax+0xd]
   140042a37:	cmove  eax,ecx
   140042a3a:	jmp    0x140042244
   140042a3f:	mov    r9d,DWORD PTR [rbp-0x11]
   140042a43:	mov    eax,0x15
   140042a48:	mov    WORD PTR [rbp-0xf],r13w
   140042a4d:	mov    esi,DWORD PTR [rbp-0x11]
   140042a50:	cmp    r12d,eax
   140042a53:	lea    r10d,[rax-0xd]
   140042a57:	cmovg  r12d,eax
   140042a5b:	shr    r9d,0x10
   140042a5f:	sub    r9d,0x3ffe
   140042a66:	mov    ecx,r8d
   140042a69:	mov    eax,edx
   140042a6b:	add    esi,esi
   140042a6d:	add    r8d,r8d
   140042a70:	shr    eax,0x1f
   140042a73:	shr    ecx,0x1f
   140042a76:	or     r8d,eax
   140042a79:	or     esi,ecx
   140042a7b:	add    edx,edx
   140042a7d:	sub    r10,r11
   140042a80:	jne    0x140042a66
   140042a82:	mov    DWORD PTR [rbp-0x15],r8d
   140042a86:	mov    DWORD PTR [rbp-0x19],edx
   140042a89:	test   r9d,r9d
   140042a8c:	jns    0x140042ac0
   140042a8e:	neg    r9d
   140042a91:	movzx  r10d,r9b
   140042a95:	test   r10d,r10d
   140042a98:	jle    0x140042ac0
   140042a9a:	mov    ecx,r8d
   140042a9d:	mov    eax,esi
   140042a9f:	shr    edx,1
   140042aa1:	shr    r8d,1
   140042aa4:	shl    eax,0x1f
   140042aa7:	shl    ecx,0x1f
   140042aaa:	sub    r10d,r11d
   140042aad:	shr    esi,1
   140042aaf:	or     r8d,eax
   140042ab2:	or     edx,ecx
   140042ab4:	test   r10d,r10d
   140042ab7:	jg     0x140042a9a
   140042ab9:	mov    DWORD PTR [rbp-0x15],r8d
   140042abd:	mov    DWORD PTR [rbp-0x19],edx
   140042ac0:	lea    r14d,[r12+0x1]
   140042ac5:	lea    rdi,[rbx+0x4]
   140042ac9:	mov    r10,rdi
   140042acc:	test   r14d,r14d
   140042acf:	jle    0x140042b9f
   140042ad5:	mov    r13,QWORD PTR [rbp-0x19]
   140042ad9:	mov    ecx,r8d
   140042adc:	add    r8d,r8d
   140042adf:	shr    ecx,0x1f
   140042ae2:	mov    eax,edx
   140042ae4:	add    edx,edx
   140042ae6:	shr    eax,0x1f
   140042ae9:	lea    r9d,[rsi+rsi*1]
   140042aed:	mov    QWORD PTR [rbp+0x7],r13
   140042af1:	or     r8d,eax
   140042af4:	or     r9d,ecx
   140042af7:	mov    eax,edx
   140042af9:	mov    ecx,r8d
   140042afc:	shr    eax,0x1f
   140042aff:	add    r8d,r8d
   140042b02:	or     r8d,eax
   140042b05:	add    edx,edx
   140042b07:	add    r9d,r9d
   140042b0a:	shr    ecx,0x1f
   140042b0d:	mov    eax,r13d
   140042b10:	lea    r15d,[rax+rdx*1]
   140042b14:	or     r9d,ecx
   140042b17:	cmp    r15d,edx
   140042b1a:	jb     0x140042b21
   140042b1c:	cmp    r15d,eax
   140042b1f:	jae    0x140042b3e
   140042b21:	lea    eax,[r8+0x1]
   140042b25:	xor    ecx,ecx
   140042b27:	cmp    eax,r8d
   140042b2a:	jb     0x140042b31
   140042b2c:	cmp    eax,r11d
   140042b2f:	jae    0x140042b34
   140042b31:	mov    ecx,r11d
   140042b34:	mov    r8d,eax
   140042b37:	test   ecx,ecx
   140042b39:	je     0x140042b3e
   140042b3b:	add    r9d,r11d
   140042b3e:	shr    r13,0x20
   140042b42:	lea    r12d,[r8+r13*1]
   140042b46:	cmp    r12d,r8d
   140042b49:	jb     0x140042b50
   140042b4b:	cmp    r12d,r13d
   140042b4e:	jae    0x140042b53
   140042b50:	add    r9d,r11d
   140042b53:	add    r9d,esi
   140042b56:	xor    r13d,r13d
   140042b59:	mov    eax,r15d
   140042b5c:	shr    eax,0x1f
   140042b5f:	lea    r8d,[r12+r12*1]
   140042b63:	mov    ecx,r12d
   140042b66:	or     r8d,eax
   140042b69:	shr    ecx,0x1f
   140042b6c:	lea    eax,[r9+r9*1]
   140042b70:	or     eax,ecx
   140042b72:	lea    edx,[r15+r15*1]
   140042b76:	sub    r14d,r11d
   140042b79:	mov    DWORD PTR [rbp-0x11],eax
   140042b7c:	shr    eax,0x18
   140042b7f:	mov    DWORD PTR [rbp-0x19],edx
   140042b82:	add    al,0x30
   140042b84:	mov    DWORD PTR [rbp-0x15],r8d
   140042b88:	mov    BYTE PTR [rbp-0xe],r13b
   140042b8c:	mov    BYTE PTR [r10],al
   140042b8f:	add    r10,r11
   140042b92:	test   r14d,r14d
   140042b95:	jle    0x140042b9f
   140042b97:	mov    esi,DWORD PTR [rbp-0x11]
   140042b9a:	jmp    0x140042ad5
   140042b9f:	sub    r10,r11
   140042ba2:	mov    al,BYTE PTR [r10]
   140042ba5:	sub    r10,r11
   140042ba8:	cmp    al,0x35
   140042baa:	jl     0x140042c16
   140042bac:	jmp    0x140042bbb
   140042bae:	cmp    BYTE PTR [r10],0x39
   140042bb2:	jne    0x140042bc0
   140042bb4:	mov    BYTE PTR [r10],0x30
   140042bb8:	sub    r10,r11
   140042bbb:	cmp    r10,rdi
   140042bbe:	jae    0x140042bae
   140042bc0:	cmp    r10,rdi
   140042bc3:	jae    0x140042bcc
   140042bc5:	add    r10,r11
   140042bc8:	add    WORD PTR [rbx],r11w
   140042bcc:	add    BYTE PTR [r10],r11b
   140042bcf:	sub    r10b,bl
   140042bd2:	sub    r10b,0x3
   140042bd6:	movsx  rax,r10b
   140042bda:	mov    BYTE PTR [rbx+0x3],r10b
   140042bde:	mov    BYTE PTR [rax+rbx*1+0x4],r13b
   140042be3:	mov    eax,r11d
   140042be6:	mov    rcx,QWORD PTR [rbp+0x17]
   140042bea:	xor    rcx,rsp
   140042bed:	call   0x140032f00
   140042bf2:	mov    rbx,QWORD PTR [rsp+0x108]
   140042bfa:	add    rsp,0xc0
   140042c01:	pop    r15
   140042c03:	pop    r14
   140042c05:	pop    r13
   140042c07:	pop    r12
   140042c09:	pop    rdi
   140042c0a:	pop    rsi
   140042c0b:	pop    rbp
   140042c0c:	ret    
   140042c0d:	cmp    BYTE PTR [r10],0x30
   140042c11:	jne    0x140042c1b
   140042c13:	sub    r10,r11
   140042c16:	cmp    r10,rdi
   140042c19:	jae    0x140042c0d
   140042c1b:	cmp    r10,rdi
   140042c1e:	jae    0x140042bcf
   140042c20:	mov    eax,0x20
   140042c25:	mov    r9d,0x8000
   140042c2b:	mov    BYTE PTR [rbx+0x3],r11b
   140042c2f:	cmp    WORD PTR [rbp-0x67],r9w
   140042c34:	lea    ecx,[rax+0xd]
   140042c37:	mov    BYTE PTR [rdi],0x30
   140042c3a:	cmove  eax,ecx
   140042c3d:	jmp    0x14004224a
   140042c42:	int3   
   140042c43:	int3   
   140042c44:	mov    rdx,rcx
   140042c47:	mov    rcx,QWORD PTR [rip+0x4763a]        # 0x14008a288
   140042c4e:	rex.W jmp QWORD PTR [rip+0x25553]        # 0x1400681a8
   140042c55:	int3   
   140042c56:	int3   
   140042c57:	int3   
   140042c58:	mov    QWORD PTR [rsp+0x10],rbx
   140042c5d:	push   rdi
   140042c5e:	sub    rsp,0x20
   140042c62:	mov    rcx,QWORD PTR [rip+0x4761f]        # 0x14008a288
   140042c69:	test   rcx,rcx
   140042c6c:	jne    0x140042cd3
   140042c6e:	mov    rax,QWORD PTR gs:0x30
   140042c77:	mov    rbx,QWORD PTR [rax+0x60]
   140042c7b:	mov    rcx,QWORD PTR [rbx+0x40]
   140042c7f:	test   rcx,rcx
   140042c82:	jne    0x140042ccc
   140042c84:	call   QWORD PTR [rip+0x25486]        # 0x140068110
   140042c8a:	xor    edx,edx
   140042c8c:	lea    r8d,[rdx+0x10]
   140042c90:	mov    rcx,rax
   140042c93:	call   QWORD PTR [rip+0x25467]        # 0x140068100
   140042c99:	mov    rdi,rax
   140042c9c:	test   rax,rax
   140042c9f:	je     0x140042cfe
   140042ca1:	and    QWORD PTR [rax],0x0
   140042ca5:	and    QWORD PTR [rax+0x8],0x0
   140042caa:	xor    eax,eax
   140042cac:	lock cmpxchg QWORD PTR [rbx+0x40],rdi
   140042cb2:	je     0x140042cc8
   140042cb4:	call   QWORD PTR [rip+0x25456]        # 0x140068110
   140042cba:	mov    r8,rdi
   140042cbd:	xor    edx,edx
   140042cbf:	mov    rcx,rax
   140042cc2:	call   QWORD PTR [rip+0x25740]        # 0x140068408
   140042cc8:	mov    rcx,QWORD PTR [rbx+0x40]
   140042ccc:	mov    QWORD PTR [rip+0x475b5],rcx        # 0x14008a288
   140042cd3:	call   QWORD PTR [rip+0x25727]        # 0x140068400
   140042cd9:	test   rax,rax
   140042cdc:	jne    0x140042d71
   140042ce2:	mov    edx,0x1000
   140042ce7:	lea    r9d,[rax+0x40]
   140042ceb:	xor    ecx,ecx
   140042ced:	mov    r8d,edx
   140042cf0:	call   QWORD PTR [rip+0x254a2]        # 0x140068198
   140042cf6:	mov    rbx,rax
   140042cf9:	test   rax,rax
   140042cfc:	jne    0x140042d21
   140042cfe:	xor    edx,edx
   140042d00:	lea    r9,[rsp+0x30]
   140042d05:	mov    ecx,0xc0000017
   140042d0a:	lea    r8d,[rdx+0x1]
   140042d0e:	mov    QWORD PTR [rsp+0x30],0x20
   140042d17:	call   QWORD PTR [rip+0x25443]        # 0x140068160
   140042d1d:	xor    eax,eax
   140042d1f:	jmp    0x140042d71
   140042d21:	mov    eax,DWORD PTR [rax]
   140042d23:	mov    rcx,QWORD PTR [rip+0x4755e]        # 0x14008a288
   140042d2a:	call   QWORD PTR [rip+0x256d0]        # 0x140068400
   140042d30:	mov    rdi,rax
   140042d33:	test   rax,rax
   140042d36:	je     0x140042d4e
   140042d38:	xor    edx,edx
   140042d3a:	mov    r8d,0x8000
   140042d40:	mov    rcx,rbx
   140042d43:	call   QWORD PTR [rip+0x25457]        # 0x1400681a0
   140042d49:	mov    rax,rdi
   140042d4c:	jmp    0x140042d71
   140042d4e:	lea    rdi,[rbx+0xfe0]
   140042d55:	mov    rcx,QWORD PTR [rip+0x4752c]        # 0x14008a288
   140042d5c:	mov    rdx,rbx
   140042d5f:	call   QWORD PTR [rip+0x25443]        # 0x1400681a8
   140042d65:	add    rbx,0x20
   140042d69:	cmp    rbx,rdi
   140042d6c:	jb     0x140042d55
   140042d6e:	mov    rax,rbx
   140042d71:	mov    rbx,QWORD PTR [rsp+0x38]
   140042d76:	add    rsp,0x20
   140042d7a:	pop    rdi
   140042d7b:	ret    
   140042d7c:	jmp    0x140042c58
   140042d81:	int3   
   140042d82:	int3   
   140042d83:	int3   
   140042d84:	mov    rcx,QWORD PTR [rcx+0x8]
   140042d88:	mov    r8,rdx
   140042d8b:	xor    edx,edx
   140042d8d:	rex.W jmp QWORD PTR [rip+0x2536c]        # 0x140068100
   140042d94:	sub    rsp,0x28
   140042d98:	test   rdx,rdx
   140042d9b:	je     0x140042dac
   140042d9d:	mov    rcx,QWORD PTR [rcx+0x8]
   140042da1:	mov    r8,rdx
   140042da4:	xor    edx,edx
   140042da6:	call   QWORD PTR [rip+0x2565c]        # 0x140068408
   140042dac:	add    rsp,0x28
   140042db0:	ret    
   140042db1:	int3   
   140042db2:	int3   
   140042db3:	int3   
   140042db4:	sub    rsp,0x28
   140042db8:	test   rdx,rdx
   140042dbb:	jne    0x140042dca
   140042dbd:	mov    rax,QWORD PTR [rcx]
   140042dc0:	mov    rdx,r8
   140042dc3:	add    rsp,0x28
   140042dc7:	rex.W jmp QWORD PTR [rax]
   140042dca:	test   r8,r8
   140042dcd:	jne    0x140042ddc
   140042dcf:	mov    rax,QWORD PTR [rcx]
   140042dd2:	call   QWORD PTR [rax+0x8]
   140042dd5:	xor    eax,eax
   140042dd7:	add    rsp,0x28
   140042ddb:	ret    
   140042ddc:	mov    rcx,QWORD PTR [rcx+0x8]
   140042de0:	mov    r9,r8
   140042de3:	mov    r8,rdx
   140042de6:	xor    edx,edx
   140042de8:	add    rsp,0x28
   140042dec:	rex.W jmp QWORD PTR [rip+0x25665]        # 0x140068458
   140042df3:	int3   
   140042df4:	mov    rcx,QWORD PTR [rcx+0x8]
   140042df8:	mov    r8,rdx
   140042dfb:	xor    edx,edx
   140042dfd:	rex.W jmp QWORD PTR [rip+0x254ac]        # 0x1400682b0
   140042e04:	mov    QWORD PTR [rsp+0x8],rbx
   140042e09:	push   rdi
   140042e0a:	sub    rsp,0x20
   140042e0e:	cmp    BYTE PTR [rcx+0x10],0x0
   140042e12:	lea    rax,[rip+0x27e27]        # 0x14006ac40
   140042e19:	mov    edi,edx
   140042e1b:	mov    QWORD PTR [rcx],rax
   140042e1e:	mov    rbx,rcx
   140042e21:	je     0x140042e32
   140042e23:	mov    rcx,QWORD PTR [rcx+0x8]
   140042e27:	test   rcx,rcx
   140042e2a:	je     0x140042e32
   140042e2c:	call   QWORD PTR [rip+0x2548e]        # 0x1400682c0
   140042e32:	test   dil,0x1
   140042e36:	je     0x140042e40
   140042e38:	mov    rcx,rbx
   140042e3b:	call   0x1400330c0
   140042e40:	mov    rax,rbx
   140042e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140042e48:	add    rsp,0x20
   140042e4c:	pop    rdi
   140042e4d:	ret    
   140042e4e:	int3   
   140042e4f:	int3   
   140042e50:	mov    rcx,QWORD PTR [rcx+0x8]
   140042e54:	mov    rax,QWORD PTR [rcx]
   140042e57:	rex.W jmp QWORD PTR [rax+0x8]
   140042e5b:	int3   
   140042e5c:	lock inc DWORD PTR [rcx+0x20]
   140042e60:	lea    rax,[rcx+0x10]
   140042e64:	ret    
   140042e65:	int3   
   140042e66:	int3   
   140042e67:	int3   
   140042e68:	mov    rax,rcx
   140042e6b:	ret    
   140042e6c:	rex push rbx
   140042e6e:	sub    rsp,0x20
   140042e72:	lea    rax,[rip+0x27def]        # 0x14006ac68
   140042e79:	mov    rbx,rcx
   140042e7c:	mov    QWORD PTR [rcx],rax
   140042e7f:	test   dl,0x1
   140042e82:	je     0x140042e89
   140042e84:	call   0x1400330c0
   140042e89:	mov    rax,rbx
   140042e8c:	add    rsp,0x20
   140042e90:	pop    rbx
   140042e91:	ret    
   140042e92:	int3   
   140042e93:	int3   
   140042e94:	mov    QWORD PTR [rsp+0x8],rbx
   140042e99:	push   rdi
   140042e9a:	sub    rsp,0x20
   140042e9e:	lea    ebx,[rdx+0x8]
   140042ea1:	movsxd r9,r8d
   140042ea4:	mov    rdi,rcx
   140042ea7:	and    ebx,0xfffffff8
   140042eaa:	movsxd r8,ebx
   140042ead:	jne    0x140042eb4
   140042eaf:	xor    r8d,r8d
   140042eb2:	jmp    0x140042ecc
   140042eb4:	xor    edx,edx
   140042eb6:	or     rax,0xffffffffffffffff
   140042eba:	div    r8
   140042ebd:	cmp    rax,r9
   140042ec0:	jb     0x140042efc
   140042ec2:	imul   r8,r9
   140042ec6:	cmp    r8,0xffffffffffffffe7
   140042eca:	ja     0x140042efc
   140042ecc:	mov    rcx,QWORD PTR [rcx+0x8]
   140042ed0:	lea    rdx,[r8+0x18]
   140042ed4:	mov    rax,QWORD PTR [rcx]
   140042ed7:	call   QWORD PTR [rax]
   140042ed9:	mov    r11,rax
   140042edc:	test   rax,rax
   140042edf:	je     0x140042efc
   140042ee1:	and    DWORD PTR [r11+0x8],0x0
   140042ee6:	mov    QWORD PTR [rax],rdi
   140042ee9:	mov    DWORD PTR [rax+0x10],0x1
   140042ef0:	lea    eax,[rbx-0x1]
   140042ef3:	mov    DWORD PTR [r11+0xc],eax
   140042ef7:	mov    rax,r11
   140042efa:	jmp    0x140042efe
   140042efc:	xor    eax,eax
   140042efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140042f03:	add    rsp,0x20
   140042f07:	pop    rdi
   140042f08:	ret    
   140042f09:	int3   
   140042f0a:	int3   
   140042f0b:	int3   
   140042f0c:	rex push rbx
   140042f0e:	sub    rsp,0x20
   140042f12:	lea    ebx,[r8+0x8]
   140042f16:	mov    eax,r9d
   140042f19:	and    ebx,0xfffffff8
   140042f1c:	mov    r8d,ebx
   140042f1f:	imul   r8,rax
   140042f23:	mov    eax,0xffffffff
   140042f28:	cmp    r8,rax
   140042f2b:	ja     0x140042f56
   140042f2d:	cmp    r8d,0xffffffe7
   140042f31:	ja     0x140042f56
   140042f33:	mov    rcx,QWORD PTR [rcx+0x8]
   140042f37:	add    r8d,0x18
   140042f3b:	mov    r9,QWORD PTR [rcx]
   140042f3e:	call   QWORD PTR [r9+0x10]
   140042f42:	mov    r11,rax
   140042f45:	test   rax,rax
   140042f48:	je     0x140042f56
   140042f4a:	lea    eax,[rbx-0x1]
   140042f4d:	mov    DWORD PTR [r11+0xc],eax
   140042f51:	mov    rax,r11
   140042f54:	jmp    0x140042f58
   140042f56:	xor    eax,eax
   140042f58:	add    rsp,0x20
   140042f5c:	pop    rbx
   140042f5d:	ret    
   140042f5e:	int3   
   140042f5f:	int3   
   140042f60:	rex push rbx
   140042f62:	sub    rsp,0x20
   140042f66:	mov    rbx,rcx
   140042f69:	add    rcx,0x28
   140042f6d:	call   QWORD PTR [rip+0x2549d]        # 0x140068410
   140042f73:	mov    rcx,QWORD PTR [rbx+0x50]
   140042f77:	test   rcx,rcx
   140042f7a:	je     0x140042f86
   140042f7c:	call   0x140033594
   140042f81:	and    QWORD PTR [rbx+0x50],0x0
   140042f86:	and    DWORD PTR [rbx+0x58],0x0
   140042f8a:	and    DWORD PTR [rbx+0x5c],0x0
   140042f8e:	add    rsp,0x20
   140042f92:	pop    rbx
   140042f93:	ret    
   140042f94:	mov    QWORD PTR [rsp+0x8],rbx
   140042f99:	mov    QWORD PTR [rsp+0x10],rsi
   140042f9e:	push   rdi
   140042f9f:	sub    rsp,0x20
   140042fa3:	mov    rsi,rcx
   140042fa6:	add    rcx,0x28
   140042faa:	movsxd rbx,edx
   140042fad:	call   QWORD PTR [rip+0x251bd]        # 0x140068170
   140042fb3:	cmp    ebx,DWORD PTR [rsi+0x58]
   140042fb6:	jg     0x140042ff6
   140042fb8:	test   ebx,ebx
   140042fba:	js     0x140042ff6
   140042fbc:	cmp    ebx,DWORD PTR [rsi+0x58]
   140042fbf:	jne    0x140042fd4
   140042fc1:	mov    rbx,QWORD PTR [rsi+0x10]
   140042fc5:	lea    rcx,[rsi+0x28]
   140042fc9:	call   QWORD PTR [rip+0x25181]        # 0x140068150
   140042fcf:	mov    rax,rbx
   140042fd2:	jmp    0x140043002
   140042fd4:	jge    0x140042fe0
   140042fd6:	mov    rax,QWORD PTR [rsi+0x50]
   140042fda:	mov    rbx,QWORD PTR [rax+rbx*8]
   140042fde:	jmp    0x140042fc5
   140042fe0:	xor    r9d,r9d
   140042fe3:	xor    r8d,r8d
   140042fe6:	mov    ecx,0xc000008c
   140042feb:	lea    edx,[r9+0x1]
   140042fef:	call   QWORD PTR [rip+0x2516b]        # 0x140068160
   140042ff5:	int3   
   140042ff6:	lea    rcx,[rsi+0x28]
   140042ffa:	call   QWORD PTR [rip+0x25150]        # 0x140068150
   140043000:	xor    eax,eax
   140043002:	mov    rbx,QWORD PTR [rsp+0x30]
   140043007:	mov    rsi,QWORD PTR [rsp+0x38]
   14004300c:	add    rsp,0x20
   140043010:	pop    rdi
   140043011:	ret    
   140043012:	int3   
   140043013:	int3   
   140043014:	mov    QWORD PTR [rsp+0x8],rbx
   140043019:	push   rdi
   14004301a:	sub    rsp,0x20
   14004301e:	xor    edx,edx
   140043020:	mov    rdi,rcx
   140043023:	lea    r8d,[rdx+0x28]
   140043027:	add    rcx,r8
   14004302a:	call   0x140036dc0
   14004302f:	and    QWORD PTR [rdi+0x50],0x0
   140043034:	and    DWORD PTR [rdi+0x58],0x0
   140043038:	and    DWORD PTR [rdi+0x5c],0x0
   14004303c:	lea    rax,[rip+0xfffffffffffbcfbd]        # 0x140000000
   140043043:	lea    rcx,[rdi+0x28]
   140043047:	mov    QWORD PTR [rdi+0x10],rax
   14004304b:	mov    QWORD PTR [rdi+0x8],rax
   14004304f:	lea    rax,[rip+0x27c62]        # 0x14006acb8
   140043056:	xor    edx,edx
   140043058:	mov    DWORD PTR [rdi],0x60
   14004305e:	mov    DWORD PTR [rdi+0x18],0xa00
   140043065:	mov    QWORD PTR [rdi+0x20],rax
   140043069:	call   QWORD PTR [rip+0x251d9]        # 0x140068248
   14004306f:	test   eax,eax
   140043071:	jne    0x14004309e
   140043073:	call   QWORD PTR [rip+0x25347]        # 0x1400683c0
   140043079:	mov    edx,0x1
   14004307e:	movzx  ecx,ax
   140043081:	or     ecx,0x80070000
   140043087:	test   eax,eax
   140043089:	cmovle ecx,eax
   14004308c:	movzx  eax,BYTE PTR [rip+0x4731d]        # 0x14008a3b0
   140043093:	test   ecx,ecx
   140043095:	cmovs  eax,edx
   140043098:	mov    BYTE PTR [rip+0x47312],al        # 0x14008a3b0
   14004309e:	mov    rax,rdi
   1400430a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400430a6:	add    rsp,0x20
   1400430aa:	pop    rdi
   1400430ab:	ret    
   1400430ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400430b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400430b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400430bb:	push   rdi
   1400430bc:	sub    rsp,0x20
   1400430c0:	mov    rbp,rdx
   1400430c3:	mov    rbx,rcx
   1400430c6:	test   rcx,rcx
   1400430c9:	jne    0x1400430d2
   1400430cb:	mov    eax,0x80070057
   1400430d0:	jmp    0x140043134
   1400430d2:	cmp    DWORD PTR [rcx],0x0
   1400430d5:	je     0x140043132
   1400430d7:	cmp    DWORD PTR [rcx],0x48
   1400430da:	jne    0x1400430cb
   1400430dc:	xor    esi,esi
   1400430de:	xor    edi,edi
   1400430e0:	cmp    DWORD PTR [rcx+0x40],esi
   1400430e3:	jle    0x14004310a
   1400430e5:	test   rsi,rsi
   1400430e8:	js     0x140043149
   1400430ea:	cmp    edi,DWORD PTR [rbx+0x40]
   1400430ed:	jge    0x140043149
   1400430ef:	mov    rax,QWORD PTR [rbx+0x38]
   1400430f3:	mov    rdx,rbp
   1400430f6:	movzx  ecx,WORD PTR [rax+rsi*2]
   1400430fa:	call   QWORD PTR [rip+0x254e0]        # 0x1400685e0
   140043100:	inc    edi
   140043102:	inc    rsi
   140043105:	cmp    edi,DWORD PTR [rbx+0x40]
   140043108:	jl     0x1400430e5
   14004310a:	mov    rcx,QWORD PTR [rbx+0x38]
   14004310e:	test   rcx,rcx
   140043111:	je     0x14004311d
   140043113:	call   0x140033594
   140043118:	and    QWORD PTR [rbx+0x38],0x0
   14004311d:	and    DWORD PTR [rbx+0x40],0x0
   140043121:	and    DWORD PTR [rbx+0x44],0x0
   140043125:	lea    rcx,[rbx+0x8]
   140043129:	call   QWORD PTR [rip+0x252e1]        # 0x140068410
   14004312f:	and    DWORD PTR [rbx],0x0
   140043132:	xor    eax,eax
   140043134:	mov    rbx,QWORD PTR [rsp+0x30]
   140043139:	mov    rbp,QWORD PTR [rsp+0x38]
   14004313e:	mov    rsi,QWORD PTR [rsp+0x40]
   140043143:	add    rsp,0x20
   140043147:	pop    rdi
   140043148:	ret    
   140043149:	xor    r9d,r9d
   14004314c:	xor    r8d,r8d
   14004314f:	mov    ecx,0xc000008c
   140043154:	lea    edx,[r9+0x1]
   140043158:	call   QWORD PTR [rip+0x25002]        # 0x140068160
   14004315e:	int3   
   14004315f:	int3   
   140043160:	mov    QWORD PTR [rsp+0x8],rbx
   140043165:	push   rdi
   140043166:	sub    rsp,0x20
   14004316a:	xor    edx,edx
   14004316c:	mov    rdi,rcx
   14004316f:	add    rcx,0x8
   140043173:	lea    r8d,[rdx+0x28]
   140043177:	call   0x140036dc0
   14004317c:	and    QWORD PTR [rdi+0x38],0x0
   140043181:	and    DWORD PTR [rdi+0x40],0x0
   140043185:	and    DWORD PTR [rdi+0x44],0x0
   140043189:	and    QWORD PTR [rdi+0x30],0x0
   14004318e:	lea    rcx,[rdi+0x8]
   140043192:	xor    edx,edx
   140043194:	mov    DWORD PTR [rdi],0x48
   14004319a:	call   QWORD PTR [rip+0x250a8]        # 0x140068248
   1400431a0:	test   eax,eax
   1400431a2:	jne    0x1400431c6
   1400431a4:	call   QWORD PTR [rip+0x25216]        # 0x1400683c0
   1400431aa:	movzx  ecx,ax
   1400431ad:	or     ecx,0x80070000
   1400431b3:	test   eax,eax
   1400431b5:	cmovle ecx,eax
   1400431b8:	test   ecx,ecx
   1400431ba:	jns    0x1400431c6
   1400431bc:	mov    BYTE PTR [rip+0x471ed],0x1        # 0x14008a3b0
   1400431c3:	and    DWORD PTR [rdi],0x0
   1400431c6:	mov    rax,rdi
   1400431c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400431ce:	add    rsp,0x20
   1400431d2:	pop    rdi
   1400431d3:	ret    
   1400431d4:	jmp    QWORD PTR [rip+0x2548e]        # 0x140068668
   1400431da:	int3   
   1400431db:	int3   
   1400431dc:	int3   
   1400431dd:	int3   
   1400431de:	int3   
   1400431df:	int3   
   1400431e0:	rex push rbx
   1400431e2:	sub    rsp,0x20
   1400431e6:	lea    rax,[rip+0x27fdb]        # 0x14006b1c8
   1400431ed:	mov    rbx,rcx
   1400431f0:	mov    QWORD PTR [rcx],rax
   1400431f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400431f7:	test   rcx,rcx
   1400431fa:	je     0x140043202
   1400431fc:	mov    rax,QWORD PTR [rcx]
   1400431ff:	call   QWORD PTR [rax+0x10]
   140043202:	mov    rcx,QWORD PTR [rbx+0x18]
   140043206:	test   rcx,rcx
   140043209:	je     0x140043211
   14004320b:	call   QWORD PTR [rip+0x24ee7]        # 0x1400680f8
   140043211:	add    rsp,0x20
   140043215:	pop    rbx
   140043216:	ret    
   140043217:	int3   
   140043218:	int3   
   140043219:	int3   
   14004321a:	int3   
   14004321b:	int3   
   14004321c:	int3   
   14004321d:	int3   
   14004321e:	int3   
   14004321f:	int3   
   140043220:	sub    rsp,0x48
   140043224:	lea    rax,[rip+0x27f9d]        # 0x14006b1c8
   14004322b:	mov    DWORD PTR [rsp+0x28],ecx
   14004322f:	mov    QWORD PTR [rsp+0x30],rdx
   140043234:	lea    rdx,[rip+0x400c5]        # 0x140083300
   14004323b:	lea    rcx,[rsp+0x20]
   140043240:	mov    QWORD PTR [rsp+0x38],0x0
   140043249:	mov    QWORD PTR [rsp+0x20],rax
   14004324e:	call   0x140036358
   140043253:	int3   
   140043254:	int3   
   140043255:	int3   
   140043256:	int3   
   140043257:	int3   
   140043258:	int3   
   140043259:	int3   
   14004325a:	int3   
   14004325b:	int3   
   14004325c:	int3   
   14004325d:	int3   
   14004325e:	int3   
   14004325f:	int3   
   140043260:	rex push rbx
   140043262:	sub    rsp,0x20
   140043266:	lea    rax,[rip+0x27f5b]        # 0x14006b1c8
   14004326d:	mov    rbx,rcx
   140043270:	mov    QWORD PTR [rcx],rax
   140043273:	mov    eax,DWORD PTR [rdx+0x8]
   140043276:	mov    DWORD PTR [rcx+0x8],eax
   140043279:	mov    rax,QWORD PTR [rdx+0x10]
   14004327d:	mov    QWORD PTR [rcx+0x18],0x0
   140043285:	mov    QWORD PTR [rcx+0x10],rax
   140043289:	mov    rcx,rax
   14004328c:	test   rax,rax
   14004328f:	je     0x140043297
   140043291:	mov    rax,QWORD PTR [rax]
   140043294:	call   QWORD PTR [rax+0x8]
   140043297:	mov    rax,rbx
   14004329a:	add    rsp,0x20
   14004329e:	pop    rbx
   14004329f:	ret    
   1400432a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400432a5:	push   rdi
   1400432a6:	sub    rsp,0x20
   1400432aa:	lea    rax,[rip+0x27f17]        # 0x14006b1c8
   1400432b1:	mov    rbx,rcx
   1400432b4:	mov    edi,edx
   1400432b6:	mov    QWORD PTR [rcx],rax
   1400432b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400432bd:	test   rcx,rcx
   1400432c0:	je     0x1400432c8
   1400432c2:	mov    rax,QWORD PTR [rcx]
   1400432c5:	call   QWORD PTR [rax+0x10]
   1400432c8:	mov    rcx,QWORD PTR [rbx+0x18]
   1400432cc:	test   rcx,rcx
   1400432cf:	je     0x1400432d7
   1400432d1:	call   QWORD PTR [rip+0x24e21]        # 0x1400680f8
   1400432d7:	test   dil,0x1
   1400432db:	je     0x1400432e5
   1400432dd:	mov    rcx,rbx
   1400432e0:	call   0x1400330c0
   1400432e5:	mov    rax,rbx
   1400432e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400432ed:	add    rsp,0x20
   1400432f1:	pop    rdi
   1400432f2:	ret    
   1400432f3:	int3   
   1400432f4:	jmp    QWORD PTR [rip+0x2501e]        # 0x140068318
   1400432fa:	jmp    QWORD PTR [rip+0x24ff0]        # 0x1400682f0
   140043300:	jmp    QWORD PTR [rip+0x24fe2]        # 0x1400682e8
   140043306:	jmp    QWORD PTR [rip+0x24fac]        # 0x1400682b8
   14004330c:	mov    QWORD PTR [rsp+0x10],rbx
   140043311:	mov    QWORD PTR [rsp+0x18],rbp
   140043316:	mov    QWORD PTR [rsp+0x20],rsi
   14004331b:	push   rdi
   14004331c:	push   r12
   14004331e:	push   r13
   140043320:	push   r14
   140043322:	push   r15
   140043324:	sub    rsp,0x20
   140043328:	movsxd rdi,DWORD PTR [r8+0xc]
   14004332c:	mov    r15,rcx
   14004332f:	mov    rcx,r8
   140043332:	mov    rbp,r9
   140043335:	mov    r13,r8
   140043338:	mov    r14,rdx
   14004333b:	call   0x140043a0c
   140043340:	mov    r10,QWORD PTR [r15]
   140043343:	mov    QWORD PTR [rbp+0x0],r10
   140043347:	mov    r12d,eax
   14004334a:	test   edi,edi
   14004334c:	je     0x1400433d6
   140043352:	lea    rcx,[rdi+rdi*4]
   140043356:	lea    rsi,[rcx*4-0x14]
   14004335e:	movsxd rbx,DWORD PTR [r13+0x10]
   140043362:	add    rbx,QWORD PTR [r14+0x8]
   140043366:	add    rbx,rsi
   140043369:	cmp    r12d,DWORD PTR [rbx+0x4]
   14004336d:	jle    0x1400433b8
   14004336f:	cmp    r12d,DWORD PTR [rbx+0x8]
   140043373:	jg     0x1400433b8
   140043375:	mov    rcx,QWORD PTR [r14]
   140043378:	lea    rdx,[rsp+0x50]
   14004337d:	xor    r8d,r8d
   140043380:	call   0x140043300
   140043385:	movsxd r8,DWORD PTR [rbx+0x10]
   140043389:	mov    r9d,DWORD PTR [rbx+0xc]
   14004338d:	add    r8,QWORD PTR [rsp+0x50]
   140043392:	mov    r10d,DWORD PTR [rax]
   140043395:	xor    ecx,ecx
   140043397:	test   r9d,r9d
   14004339a:	je     0x1400433b3
   14004339c:	lea    rdx,[r8+0xc]
   1400433a0:	movsxd rax,DWORD PTR [rdx]
   1400433a3:	cmp    rax,r10
   1400433a6:	je     0x1400433b3
   1400433a8:	inc    ecx
   1400433aa:	add    rdx,0x14
   1400433ae:	cmp    ecx,r9d
   1400433b1:	jb     0x1400433a0
   1400433b3:	cmp    ecx,r9d
   1400433b6:	jb     0x1400433c2
   1400433b8:	sub    rsi,0x14
   1400433bc:	dec    edi
   1400433be:	je     0x1400433d6
   1400433c0:	jmp    0x14004335e
   1400433c2:	mov    rax,QWORD PTR [r15]
   1400433c5:	lea    rcx,[rcx+rcx*4]
   1400433c9:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400433ce:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400433d2:	mov    QWORD PTR [rbp+0x0],rcx
   1400433d6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400433db:	mov    rsi,QWORD PTR [rsp+0x68]
   1400433e0:	mov    rax,rbp
   1400433e3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400433e8:	add    rsp,0x20
   1400433ec:	pop    r15
   1400433ee:	pop    r14
   1400433f0:	pop    r13
   1400433f2:	pop    r12
   1400433f4:	pop    rdi
   1400433f5:	ret    
   1400433f6:	int3   
   1400433f7:	int3   
   1400433f8:	sub    rsp,0x28
   1400433fc:	call   0x140037c34
   140043401:	mov    rax,QWORD PTR [rax+0x128]
   140043408:	add    rsp,0x28
   14004340c:	ret    
   14004340d:	int3   
   14004340e:	int3   
   14004340f:	int3   
   140043410:	sub    rsp,0x28
   140043414:	call   0x140037c34
   140043419:	mov    rax,QWORD PTR [rax+0x130]
   140043420:	add    rsp,0x28
   140043424:	ret    
   140043425:	int3   
   140043426:	int3   
   140043427:	int3   
   140043428:	rex push rbx
   14004342a:	sub    rsp,0x20
   14004342e:	mov    rbx,rcx
   140043431:	call   0x140037c34
   140043436:	mov    QWORD PTR [rax+0x128],rbx
   14004343d:	add    rsp,0x20
   140043441:	pop    rbx
   140043442:	ret    
   140043443:	int3   
   140043444:	rex push rbx
   140043446:	sub    rsp,0x20
   14004344a:	mov    rbx,rcx
   14004344d:	call   0x140037c34
   140043452:	mov    QWORD PTR [rax+0x130],rbx
   140043459:	add    rsp,0x20
   14004345d:	pop    rbx
   14004345e:	ret    
   14004345f:	int3   
   140043460:	mov    rax,rsp
   140043463:	mov    QWORD PTR [rax+0x8],rbx
   140043467:	mov    QWORD PTR [rax+0x10],rbp
   14004346b:	mov    QWORD PTR [rax+0x20],rsi
   14004346f:	push   rdi
   140043470:	push   r12
   140043472:	push   r13
   140043474:	sub    rsp,0x20
   140043478:	lea    r9,[rax+0x18]
   14004347c:	mov    rbp,r8
   14004347f:	mov    r12,rdx
   140043482:	call   0x14004330c
   140043487:	mov    rdx,r12
   14004348a:	mov    rcx,rbp
   14004348d:	mov    r13,rax
   140043490:	call   0x140043a0c
   140043495:	movsxd rdi,DWORD PTR [rbp+0xc]
   140043499:	mov    esi,eax
   14004349b:	test   edi,edi
   14004349d:	je     0x1400434d3
   14004349f:	lea    rcx,[rdi+rdi*4]
   1400434a3:	lea    rbx,[rcx*4-0x14]
   1400434ab:	call   0x140037c34
   1400434b0:	movsxd rcx,DWORD PTR [rbp+0x10]
   1400434b4:	mov    rdx,QWORD PTR [rax+0x128]
   1400434bb:	add    rdx,rcx
   1400434be:	add    rdx,rbx
   1400434c1:	cmp    esi,DWORD PTR [rdx+0x4]
   1400434c4:	jle    0x1400434cb
   1400434c6:	cmp    esi,DWORD PTR [rdx+0x8]
   1400434c9:	jle    0x1400434d5
   1400434cb:	sub    rbx,0x14
   1400434cf:	dec    edi
   1400434d1:	jne    0x1400434ab
   1400434d3:	xor    edx,edx
   1400434d5:	test   rdx,rdx
   1400434d8:	jne    0x1400434e0
   1400434da:	or     r9d,0xffffffff
   1400434de:	jmp    0x1400434e4
   1400434e0:	mov    r9d,DWORD PTR [rdx+0x4]
   1400434e4:	mov    r8,rbp
   1400434e7:	mov    rdx,r12
   1400434ea:	mov    rcx,r13
   1400434ed:	call   0x140043c74
   1400434f2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400434f7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400434fc:	mov    rsi,QWORD PTR [rsp+0x58]
   140043501:	add    rsp,0x20
   140043505:	pop    r13
   140043507:	pop    r12
   140043509:	pop    rdi
   14004350a:	ret    
   14004350b:	int3   
   14004350c:	mov    QWORD PTR [rsp+0x10],rbx
   140043511:	mov    QWORD PTR [rsp+0x18],rsi
   140043516:	push   rdi
   140043517:	sub    rsp,0x40
   14004351b:	mov    rbx,r9
   14004351e:	mov    rdi,r8
   140043521:	mov    rsi,rcx
   140043524:	mov    QWORD PTR [rsp+0x50],rdx
   140043529:	call   0x140037c34
   14004352e:	mov    rdx,QWORD PTR [rbx+0x8]
   140043532:	mov    QWORD PTR [rax+0x128],rdx
   140043539:	call   0x140037c34
   14004353e:	mov    rdx,QWORD PTR [rsi+0x38]
   140043542:	mov    QWORD PTR [rax+0x130],rdx
   140043549:	call   0x140037c34
   14004354e:	mov    rdx,QWORD PTR [rbx+0x38]
   140043552:	mov    r8d,DWORD PTR [rdx]
   140043555:	lea    rdx,[rsp+0x50]
   14004355a:	mov    r9,rbx
   14004355d:	add    r8,QWORD PTR [rax+0x128]
   140043564:	xor    eax,eax
   140043566:	mov    rcx,rsi
   140043569:	mov    DWORD PTR [rsp+0x38],eax
   14004356d:	mov    QWORD PTR [rsp+0x30],rax
   140043572:	mov    DWORD PTR [rsp+0x28],eax
   140043576:	mov    QWORD PTR [rsp+0x20],r8
   14004357b:	mov    r8,rdi
   14004357e:	call   0x140044bf4
   140043583:	mov    rbx,QWORD PTR [rsp+0x58]
   140043588:	mov    rsi,QWORD PTR [rsp+0x60]
   14004358d:	add    rsp,0x40
   140043591:	pop    rdi
   140043592:	ret    
   140043593:	int3   
   140043594:	mov    QWORD PTR [rsp+0x8],rbx
   140043599:	mov    QWORD PTR [rsp+0x10],rbp
   14004359e:	mov    QWORD PTR [rsp+0x18],rsi
   1400435a3:	push   rdi
   1400435a4:	sub    rsp,0x40
   1400435a8:	mov    rsi,r9
   1400435ab:	mov    rbp,r8
   1400435ae:	mov    rbx,rdx
   1400435b1:	mov    rdi,rcx
   1400435b4:	call   0x140037c34
   1400435b9:	mov    QWORD PTR [rax+0x138],rbx
   1400435c0:	mov    rbx,QWORD PTR [rdi]
   1400435c3:	call   0x140037c34
   1400435c8:	mov    rdx,QWORD PTR [rbx+0x38]
   1400435cc:	mov    rcx,QWORD PTR [rsp+0x78]
   1400435d1:	mov    r9,QWORD PTR [rsp+0x70]
   1400435d6:	mov    DWORD PTR [rsp+0x38],0x1
   1400435de:	mov    QWORD PTR [rax+0x130],rdx
   1400435e5:	xor    ebx,ebx
   1400435e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400435ec:	mov    DWORD PTR [rsp+0x28],ebx
   1400435f0:	mov    QWORD PTR [rsp+0x20],rcx
   1400435f5:	mov    rcx,QWORD PTR [rdi]
   1400435f8:	mov    r8,rsi
   1400435fb:	mov    rdx,rbp
   1400435fe:	call   0x140044bf4
   140043603:	call   0x140037c34
   140043608:	mov    rcx,QWORD PTR [rsp+0x80]
   140043610:	mov    rbp,QWORD PTR [rsp+0x58]
   140043615:	mov    rsi,QWORD PTR [rsp+0x60]
   14004361a:	mov    QWORD PTR [rax+0x138],rbx
   140043621:	lea    eax,[rbx+0x1]
   140043624:	mov    rbx,QWORD PTR [rsp+0x50]
   140043629:	mov    DWORD PTR [rcx],0x1
   14004362f:	add    rsp,0x40
   140043633:	pop    rdi
   140043634:	ret    
   140043635:	int3   
   140043636:	int3   
   140043637:	int3   
   140043638:	mov    rax,rsp
   14004363b:	mov    QWORD PTR [rax+0x20],r9
   14004363f:	mov    QWORD PTR [rax+0x18],r8
   140043643:	mov    QWORD PTR [rax+0x10],rdx
   140043647:	mov    QWORD PTR [rax+0x8],rcx
   14004364b:	push   rbx
   14004364c:	sub    rsp,0x60
   140043650:	mov    rbx,rcx
   140043653:	and    DWORD PTR [rax-0x28],0x0
   140043657:	mov    QWORD PTR [rax-0x20],rcx
   14004365b:	mov    QWORD PTR [rax-0x18],r8
   14004365f:	call   0x140037c34
   140043664:	mov    r8,QWORD PTR [rax+0xe0]
   14004366b:	lea    rdx,[rsp+0x48]
   140043670:	mov    ecx,DWORD PTR [rbx]
   140043672:	call   r8
   140043675:	mov    DWORD PTR [rsp+0x40],0x0
   14004367d:	jmp    0x14004367f
   14004367f:	mov    eax,DWORD PTR [rsp+0x40]
   140043683:	add    rsp,0x60
   140043687:	pop    rbx
   140043688:	ret    
   140043689:	int3   
   14004368a:	int3   
   14004368b:	int3   
   14004368c:	mov    QWORD PTR [rsp+0x8],rbx
   140043691:	mov    QWORD PTR [rsp+0x10],rbp
   140043696:	mov    QWORD PTR [rsp+0x18],rsi
   14004369b:	push   rdi
   14004369c:	push   r12
   14004369e:	push   r13
   1400436a0:	sub    rsp,0x20
   1400436a4:	movsxd rbx,DWORD PTR [rdx+0xc]
   1400436a8:	mov    r12,QWORD PTR [rsp+0x70]
   1400436ad:	mov    rdi,rdx
   1400436b0:	mov    rcx,rdi
   1400436b3:	mov    rdx,r12
   1400436b6:	mov    r13d,r9d
   1400436b9:	xor    ebp,ebp
   1400436bb:	call   0x140043a0c
   1400436c0:	mov    esi,eax
   1400436c2:	test   ebx,ebx
   1400436c4:	jne    0x1400436cb
   1400436c6:	call   0x140036b64
   1400436cb:	mov    r10,QWORD PTR [rsp+0x68]
   1400436d0:	mov    r8,QWORD PTR [rsp+0x60]
   1400436d5:	or     r11d,0xffffffff
   1400436d9:	mov    DWORD PTR [r10],r11d
   1400436dc:	mov    edx,ebx
   1400436de:	mov    DWORD PTR [r8],r11d
   1400436e1:	test   ebx,ebx
   1400436e3:	je     0x14004370f
   1400436e5:	movsxd rcx,DWORD PTR [rdi+0x10]
   1400436e9:	lea    rax,[rbx+rbx*4]
   1400436ed:	lea    rcx,[rcx+rax*4]
   1400436f1:	mov    rax,QWORD PTR [r12+0x8]
   1400436f6:	lea    r9,[rcx+rax*1-0xc]
   1400436fb:	cmp    esi,DWORD PTR [r9-0x4]
   1400436ff:	jle    0x140043706
   140043701:	cmp    esi,DWORD PTR [r9]
   140043704:	jle    0x14004370f
   140043706:	sub    r9,0x14
   14004370a:	add    edx,r11d
   14004370d:	jne    0x1400436fb
   14004370f:	test   edx,edx
   140043711:	je     0x140043727
   140043713:	lea    eax,[rdx-0x1]
   140043716:	lea    rdx,[rax+rax*4]
   14004371a:	movsxd rax,DWORD PTR [rdi+0x10]
   14004371e:	lea    rbp,[rax+rdx*4]
   140043722:	add    rbp,QWORD PTR [r12+0x8]
   140043727:	xor    edx,edx
   140043729:	test   ebx,ebx
   14004372b:	je     0x140043792
   14004372d:	xor    r9d,r9d
   140043730:	movsxd rcx,DWORD PTR [rdi+0x10]
   140043734:	add    rcx,QWORD PTR [r12+0x8]
   140043739:	add    rcx,r9
   14004373c:	test   rbp,rbp
   14004373f:	je     0x140043750
   140043741:	mov    eax,DWORD PTR [rbp+0x4]
   140043744:	cmp    DWORD PTR [rcx],eax
   140043746:	jle    0x14004376d
   140043748:	mov    eax,DWORD PTR [rbp+0x8]
   14004374b:	cmp    DWORD PTR [rcx+0x4],eax
   14004374e:	jg     0x14004376d
   140043750:	cmp    r13d,DWORD PTR [rcx]
   140043753:	jl     0x14004376d
   140043755:	cmp    r13d,DWORD PTR [rcx+0x4]
   140043759:	jg     0x14004376d
   14004375b:	mov    eax,DWORD PTR [r8]
   14004375e:	cmp    eax,r11d
   140043761:	cmove  eax,edx
   140043764:	mov    DWORD PTR [r8],eax
   140043767:	lea    eax,[rdx+0x1]
   14004376a:	mov    DWORD PTR [r10],eax
   14004376d:	inc    edx
   14004376f:	add    r9,0x14
   140043773:	cmp    edx,ebx
   140043775:	jb     0x140043730
   140043777:	cmp    DWORD PTR [r8],r11d
   14004377a:	je     0x140043792
   14004377c:	mov    eax,DWORD PTR [r8]
   14004377f:	lea    rcx,[rax+rax*4]
   140043783:	movsxd rax,DWORD PTR [rdi+0x10]
   140043787:	lea    rax,[rax+rcx*4]
   14004378b:	add    rax,QWORD PTR [r12+0x8]
   140043790:	jmp    0x14004379c
   140043792:	and    DWORD PTR [r8],0x0
   140043796:	and    DWORD PTR [r10],0x0
   14004379a:	xor    eax,eax
   14004379c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400437a1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400437a6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400437ab:	add    rsp,0x20
   1400437af:	pop    r13
   1400437b1:	pop    r12
   1400437b3:	pop    rdi
   1400437b4:	ret    
   1400437b5:	int3   
   1400437b6:	int3   
   1400437b7:	int3   
   1400437b8:	rex push rbx
   1400437ba:	sub    rsp,0x20
   1400437be:	mov    rbx,rcx
   1400437c1:	mov    QWORD PTR [rcx],rdx
   1400437c4:	call   0x140037c34
   1400437c9:	cmp    rbx,QWORD PTR [rax+0x120]
   1400437d0:	jae    0x1400437e0
   1400437d2:	call   0x140037c34
   1400437d7:	mov    rcx,QWORD PTR [rax+0x120]
   1400437de:	jmp    0x1400437e2
   1400437e0:	xor    ecx,ecx
   1400437e2:	mov    QWORD PTR [rbx+0x8],rcx
   1400437e6:	call   0x140037c34
   1400437eb:	mov    QWORD PTR [rax+0x120],rbx
   1400437f2:	mov    rax,rbx
   1400437f5:	add    rsp,0x20
   1400437f9:	pop    rbx
   1400437fa:	ret    
   1400437fb:	int3   
   1400437fc:	rex push rbx
   1400437fe:	sub    rsp,0x20
   140043802:	mov    rbx,rcx
   140043805:	call   0x140037c34
   14004380a:	mov    rdx,QWORD PTR [rax+0x120]
   140043811:	jmp    0x14004381c
   140043813:	cmp    QWORD PTR [rdx],rbx
   140043816:	je     0x14004382a
   140043818:	mov    rdx,QWORD PTR [rdx+0x8]
   14004381c:	test   rdx,rdx
   14004381f:	jne    0x140043813
   140043821:	lea    eax,[rdx+0x1]
   140043824:	add    rsp,0x20
   140043828:	pop    rbx
   140043829:	ret    
   14004382a:	xor    eax,eax
   14004382c:	jmp    0x140043824
   14004382e:	int3   
   14004382f:	int3   
   140043830:	mov    QWORD PTR [rsp+0x8],rbx
   140043835:	push   rdi
   140043836:	sub    rsp,0x20
   14004383a:	mov    rdi,rcx
   14004383d:	call   0x140037c34
   140043842:	cmp    rdi,QWORD PTR [rax+0x120]
   140043849:	je     0x140043850
   14004384b:	call   0x140036b64
   140043850:	call   0x140037c34
   140043855:	mov    rbx,QWORD PTR [rax+0x120]
   14004385c:	jmp    0x140043867
   14004385e:	cmp    rdi,rbx
   140043861:	je     0x14004387c
   140043863:	mov    rbx,QWORD PTR [rbx+0x8]
   140043867:	test   rbx,rbx
   14004386a:	jne    0x14004385e
   14004386c:	call   0x140036b64
   140043871:	mov    rbx,QWORD PTR [rsp+0x30]
   140043876:	add    rsp,0x20
   14004387a:	pop    rdi
   14004387b:	ret    
   14004387c:	call   0x140037c34
   140043881:	mov    rcx,QWORD PTR [rbx+0x8]
   140043885:	mov    QWORD PTR [rax+0x120],rcx
   14004388c:	jmp    0x140043871
   14004388e:	int3   
   14004388f:	int3   
   140043890:	rex push rbp
   140043892:	push   rbx
   140043893:	push   rsi
   140043894:	push   rdi
   140043895:	push   r12
   140043897:	push   r13
   140043899:	push   r14
   14004389b:	push   r15
   14004389d:	lea    rbp,[rsp-0x4b8]
   1400438a5:	sub    rsp,0x5b8
   1400438ac:	mov    rax,QWORD PTR [rip+0x417f5]        # 0x1400850a8
   1400438b3:	xor    rax,rsp
   1400438b6:	mov    QWORD PTR [rbp+0x4a0],rax
   1400438bd:	mov    rbx,QWORD PTR [rbp+0x520]
   1400438c4:	mov    rdi,QWORD PTR [rbp+0x530]
   1400438cb:	mov    r14,QWORD PTR [rbp+0x538]
   1400438d2:	mov    r13,rdx
   1400438d5:	mov    r15,rcx
   1400438d8:	mov    r12,r8
   1400438db:	lea    rcx,[rsp+0x30]
   1400438e0:	lea    rdx,[rip+0x278e9]        # 0x14006b1d0
   1400438e7:	mov    r8d,0x98
   1400438ed:	mov    rsi,r9
   1400438f0:	call   0x140033260
   1400438f5:	movsxd rax,DWORD PTR [rbp+0x528]
   1400438fc:	mov    rdx,QWORD PTR [r14]
   1400438ff:	mov    rcx,QWORD PTR [r15]
   140043902:	mov    QWORD PTR [rsp+0x68],rax
   140043907:	movzx  eax,BYTE PTR [rbp+0x540]
   14004390e:	lea    r11,[rip+0x627]        # 0x140043f3c
   140043915:	lea    r8,[rsp+0x30]
   14004391a:	mov    QWORD PTR [rbp-0x78],rax
   14004391e:	mov    rax,QWORD PTR [r14+0x40]
   140043922:	xor    r9d,r9d
   140043925:	mov    QWORD PTR [rsp+0x28],rax
   14004392a:	lea    rax,[rbp-0x30]
   14004392e:	mov    QWORD PTR [rsp+0x50],r11
   140043933:	mov    QWORD PTR [rsp+0x58],rsi
   140043938:	mov    QWORD PTR [rsp+0x60],rbx
   14004393d:	mov    QWORD PTR [rsp+0x70],r12
   140043942:	mov    QWORD PTR [rsp+0x20],rax
   140043947:	mov    QWORD PTR [rsp+0x78],rdi
   14004394c:	mov    QWORD PTR [rbp-0x80],r13
   140043950:	mov    QWORD PTR [rbp-0x70],0x19930520
   140043958:	call   0x140043306
   14004395d:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140043964:	xor    rcx,rsp
   140043967:	call   0x140032f00
   14004396c:	add    rsp,0x5b8
   140043973:	pop    r15
   140043975:	pop    r14
   140043977:	pop    r13
   140043979:	pop    r12
   14004397b:	pop    rdi
   14004397c:	pop    rsi
   14004397d:	pop    rbx
   14004397e:	pop    rbp
   14004397f:	ret    
   140043980:	mov    QWORD PTR [rsp+0x8],rbx
   140043985:	mov    QWORD PTR [rsp+0x10],rbp
   14004398a:	mov    QWORD PTR [rsp+0x18],rsi
   14004398f:	push   rdi
   140043990:	sub    rsp,0x20
   140043994:	mov    rbp,r8
   140043997:	mov    rsi,rdx
   14004399a:	mov    rbx,rcx
   14004399d:	test   rcx,rcx
   1400439a0:	jne    0x1400439a7
   1400439a2:	call   0x140036b64
   1400439a7:	movsxd rax,DWORD PTR [rbx+0x18]
   1400439ab:	mov    edi,DWORD PTR [rbx+0x14]
   1400439ae:	add    rax,QWORD PTR [rsi+0x8]
   1400439b2:	jne    0x1400439b9
   1400439b4:	call   0x140036b64
   1400439b9:	xor    ecx,ecx
   1400439bb:	test   edi,edi
   1400439bd:	je     0x1400439f2
   1400439bf:	mov    r9,QWORD PTR [rsi+0x8]
   1400439c3:	movsxd r8,DWORD PTR [rbx+0x18]
   1400439c7:	lea    rdx,[r9+r8*1]
   1400439cb:	movsxd rax,DWORD PTR [rdx]
   1400439ce:	add    rax,r9
   1400439d1:	cmp    rbp,rax
   1400439d4:	jl     0x1400439e0
   1400439d6:	inc    ecx
   1400439d8:	add    rdx,0x8
   1400439dc:	cmp    ecx,edi
   1400439de:	jb     0x1400439cb
   1400439e0:	test   ecx,ecx
   1400439e2:	je     0x1400439f2
   1400439e4:	lea    eax,[rcx-0x1]
   1400439e7:	lea    rdx,[r8+rax*8]
   1400439eb:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   1400439f0:	jmp    0x1400439f5
   1400439f2:	or     eax,0xffffffff
   1400439f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400439fa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400439ff:	mov    rsi,QWORD PTR [rsp+0x40]
   140043a04:	add    rsp,0x20
   140043a08:	pop    rdi
   140043a09:	ret    
   140043a0a:	int3   
   140043a0b:	int3   
   140043a0c:	mov    r8,QWORD PTR [rdx]
   140043a0f:	jmp    0x140043980
   140043a14:	sub    rsp,0x28
   140043a18:	movsxd r9,DWORD PTR [r8+0x1c]
   140043a1c:	mov    rax,QWORD PTR [rcx]
   140043a1f:	mov    r10,r8
   140043a22:	mov    eax,DWORD PTR [r9+rax*1]
   140043a26:	cmp    eax,0xfffffffe
   140043a29:	jne    0x140043a36
   140043a2b:	mov    r8,QWORD PTR [rdx]
   140043a2e:	mov    rcx,r10
   140043a31:	call   0x140043980
   140043a36:	add    rsp,0x28
   140043a3a:	ret    
   140043a3b:	int3   
   140043a3c:	movsxd rdx,DWORD PTR [r8+0x1c]
   140043a40:	mov    rax,QWORD PTR [rcx]
   140043a43:	mov    DWORD PTR [rdx+rax*1],r9d
   140043a47:	ret    
   140043a48:	mov    QWORD PTR [rsp+0x8],rbx
   140043a4d:	push   rdi
   140043a4e:	sub    rsp,0x20
   140043a52:	mov    edi,r9d
   140043a55:	lea    r9,[rsp+0x40]
   140043a5a:	mov    rbx,r8
   140043a5d:	call   0x14004330c
   140043a62:	mov    rcx,QWORD PTR [rax]
   140043a65:	movsxd rax,DWORD PTR [rbx+0x1c]
   140043a69:	mov    QWORD PTR [rsp+0x40],rcx
   140043a6e:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   140043a72:	jle    0x140043a78
   140043a74:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140043a78:	mov    rbx,QWORD PTR [rsp+0x30]
   140043a7d:	add    rsp,0x20
   140043a81:	pop    rdi
   140043a82:	ret    
   140043a83:	int3   
   140043a84:	rex push rbx
   140043a86:	sub    rsp,0x20
   140043a8a:	lea    r9,[rsp+0x40]
   140043a8f:	mov    rbx,r8
   140043a92:	call   0x14004330c
   140043a97:	mov    rcx,QWORD PTR [rax]
   140043a9a:	movsxd rax,DWORD PTR [rbx+0x1c]
   140043a9e:	mov    QWORD PTR [rsp+0x40],rcx
   140043aa3:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   140043aa7:	add    rsp,0x20
   140043aab:	pop    rbx
   140043aac:	ret    
   140043aad:	int3   
   140043aae:	int3   
   140043aaf:	int3   
   140043ab0:	lea    rax,[rip+0x277c1]        # 0x14006b278
   140043ab7:	mov    QWORD PTR [rcx],rax
   140043aba:	jmp    0x140033048
   140043abf:	int3   
   140043ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140043ac5:	push   rdi
   140043ac6:	sub    rsp,0x20
   140043aca:	lea    rax,[rip+0x277a7]        # 0x14006b278
   140043ad1:	mov    ebx,edx
   140043ad3:	mov    rdi,rcx
   140043ad6:	mov    QWORD PTR [rcx],rax
   140043ad9:	call   0x140033048
   140043ade:	test   bl,0x1
   140043ae1:	je     0x140043aeb
   140043ae3:	mov    rcx,rdi
   140043ae6:	call   0x1400330c0
   140043aeb:	mov    rax,rdi
   140043aee:	mov    rbx,QWORD PTR [rsp+0x30]
   140043af3:	add    rsp,0x20
   140043af7:	pop    rdi
   140043af8:	ret    
   140043af9:	int3   
   140043afa:	int3   
   140043afb:	int3   
   140043afc:	mov    rax,rsp
   140043aff:	mov    QWORD PTR [rax+0x8],rbx
   140043b03:	mov    QWORD PTR [rax+0x10],rbp
   140043b07:	mov    QWORD PTR [rax+0x18],rsi
   140043b0b:	mov    QWORD PTR [rax+0x20],rdi
   140043b0f:	push   r12
   140043b11:	sub    rsp,0x20
   140043b15:	mov    esi,DWORD PTR [rcx+0x4]
   140043b18:	xor    ebx,ebx
   140043b1a:	mov    r12,r8
   140043b1d:	mov    rbp,rdx
   140043b20:	mov    rdi,rcx
   140043b23:	test   esi,esi
   140043b25:	je     0x140043b35
   140043b27:	movsxd rsi,esi
   140043b2a:	call   0x1400433f8
   140043b2f:	lea    r11,[rsi+rax*1]
   140043b33:	jmp    0x140043b38
   140043b35:	mov    r11,rbx
   140043b38:	test   r11,r11
   140043b3b:	je     0x140043bff
   140043b41:	test   esi,esi
   140043b43:	je     0x140043b54
   140043b45:	movsxd rsi,DWORD PTR [rdi+0x4]
   140043b49:	call   0x1400433f8
   140043b4e:	lea    r11,[rsi+rax*1]
   140043b52:	jmp    0x140043b57
   140043b54:	mov    r11,rbx
   140043b57:	cmp    BYTE PTR [r11+0x10],bl
   140043b5b:	je     0x140043bff
   140043b61:	test   esi,esi
   140043b63:	je     0x140043b76
   140043b65:	call   0x1400433f8
   140043b6a:	mov    rsi,rax
   140043b6d:	movsxd rax,DWORD PTR [rdi+0x4]
   140043b71:	add    rsi,rax
   140043b74:	jmp    0x140043b79
   140043b76:	mov    rsi,rbx
   140043b79:	call   0x140043410
   140043b7e:	mov    r11,rax
   140043b81:	movsxd rax,DWORD PTR [rbp+0x4]
   140043b85:	add    r11,rax
   140043b88:	cmp    rsi,r11
   140043b8b:	je     0x140043bc8
   140043b8d:	cmp    DWORD PTR [rdi+0x4],ebx
   140043b90:	je     0x140043ba3
   140043b92:	call   0x1400433f8
   140043b97:	mov    rsi,rax
   140043b9a:	movsxd rax,DWORD PTR [rdi+0x4]
   140043b9e:	add    rsi,rax
   140043ba1:	jmp    0x140043ba6
   140043ba3:	mov    rsi,rbx
   140043ba6:	call   0x140043410
   140043bab:	lea    rcx,[rsi+0x10]
   140043baf:	mov    r11,rax
   140043bb2:	movsxd rax,DWORD PTR [rbp+0x4]
   140043bb6:	lea    rdx,[r11+rax*1+0x10]
   140043bbb:	call   0x140036960
   140043bc0:	test   eax,eax
   140043bc2:	je     0x140043bc8
   140043bc4:	xor    eax,eax
   140043bc6:	jmp    0x140043c04
   140043bc8:	mov    al,0x2
   140043bca:	test   BYTE PTR [rbp+0x0],al
   140043bcd:	je     0x140043bd4
   140043bcf:	test   BYTE PTR [rdi],0x8
   140043bd2:	je     0x140043bfb
   140043bd4:	test   BYTE PTR [r12],0x1
   140043bd9:	je     0x140043be0
   140043bdb:	test   BYTE PTR [rdi],0x1
   140043bde:	je     0x140043bfb
   140043be0:	test   BYTE PTR [r12],0x4
   140043be5:	je     0x140043bec
   140043be7:	test   BYTE PTR [rdi],0x4
   140043bea:	je     0x140043bfb
   140043bec:	test   BYTE PTR [r12],al
   140043bf0:	je     0x140043bf6
   140043bf2:	test   BYTE PTR [rdi],al
   140043bf4:	je     0x140043bfb
   140043bf6:	mov    ebx,0x1
   140043bfb:	mov    eax,ebx
   140043bfd:	jmp    0x140043c04
   140043bff:	mov    eax,0x1
   140043c04:	mov    rbx,QWORD PTR [rsp+0x30]
   140043c09:	mov    rbp,QWORD PTR [rsp+0x38]
   140043c0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140043c13:	mov    rdi,QWORD PTR [rsp+0x48]
   140043c18:	add    rsp,0x20
   140043c1c:	pop    r12
   140043c1e:	ret    
   140043c1f:	int3   
   140043c20:	sub    rsp,0x28
   140043c24:	mov    rax,QWORD PTR [rcx]
   140043c27:	cmp    DWORD PTR [rax],0xe0434352
   140043c2d:	je     0x140043c51
   140043c2f:	cmp    DWORD PTR [rax],0xe0434f4d
   140043c35:	je     0x140043c51
   140043c37:	cmp    DWORD PTR [rax],0xe06d7363
   140043c3d:	jne    0x140043c6a
   140043c3f:	call   0x140037c34
   140043c44:	and    DWORD PTR [rax+0x100],0x0
   140043c4b:	call   0x140036b40
   140043c50:	int3   
   140043c51:	call   0x140037c34
   140043c56:	cmp    DWORD PTR [rax+0x100],0x0
   140043c5d:	jle    0x140043c6a
   140043c5f:	call   0x140037c34
   140043c64:	dec    DWORD PTR [rax+0x100]
   140043c6a:	xor    eax,eax
   140043c6c:	add    rsp,0x28
   140043c70:	ret    
   140043c71:	int3   
   140043c72:	int3   
   140043c73:	int3   
   140043c74:	mov    rax,rsp
   140043c77:	mov    DWORD PTR [rax+0x20],r9d
   140043c7b:	mov    QWORD PTR [rax+0x18],r8
   140043c7f:	mov    QWORD PTR [rax+0x10],rdx
   140043c83:	mov    QWORD PTR [rax+0x8],rcx
   140043c87:	push   rbx
   140043c88:	push   rsi
   140043c89:	push   rdi
   140043c8a:	push   r12
   140043c8c:	push   r13
   140043c8e:	push   r14
   140043c90:	push   r15
   140043c92:	sub    rsp,0x30
   140043c96:	mov    r13d,r9d
   140043c99:	mov    rsi,r8
   140043c9c:	mov    r15,rdx
   140043c9f:	mov    r14,rcx
   140043ca2:	call   0x140043a14
   140043ca7:	mov    edi,eax
   140043ca9:	call   0x1400433f8
   140043cae:	mov    QWORD PTR [rsp+0x28],rax
   140043cb3:	call   0x140037c34
   140043cb8:	inc    DWORD PTR [rax+0x100]
   140043cbe:	cmp    edi,0xffffffff
   140043cc1:	je     0x140043db4
   140043cc7:	cmp    edi,r13d
   140043cca:	jle    0x140043db4
   140043cd0:	cmp    edi,0xffffffff
   140043cd3:	jle    0x140043cda
   140043cd5:	cmp    edi,DWORD PTR [rsi+0x4]
   140043cd8:	jl     0x140043cdf
   140043cda:	call   0x140036b64
   140043cdf:	movsxd r12,edi
   140043ce2:	call   0x1400433f8
   140043ce7:	movsxd rcx,DWORD PTR [rsi+0x8]
   140043ceb:	lea    rax,[rax+r12*8]
   140043cef:	mov    edi,DWORD PTR [rcx+rax*1]
   140043cf2:	mov    DWORD PTR [rsp+0x20],edi
   140043cf6:	call   0x1400433f8
   140043cfb:	movsxd rcx,DWORD PTR [rsi+0x8]
   140043cff:	lea    rax,[rax+r12*8]
   140043d03:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140043d08:	je     0x140043d26
   140043d0a:	call   0x1400433f8
   140043d0f:	movsxd rcx,DWORD PTR [rsi+0x8]
   140043d13:	lea    rax,[rax+r12*8]
   140043d17:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140043d1c:	call   0x1400433f8
   140043d21:	add    rax,rbx
   140043d24:	jmp    0x140043d28
   140043d26:	xor    eax,eax
   140043d28:	test   rax,rax
   140043d2b:	je     0x140043d8b
   140043d2d:	mov    r9d,edi
   140043d30:	mov    r8,rsi
   140043d33:	mov    rdx,r15
   140043d36:	mov    rcx,r14
   140043d39:	call   0x140043a3c
   140043d3e:	call   0x1400433f8
   140043d43:	movsxd rcx,DWORD PTR [rsi+0x8]
   140043d47:	lea    rax,[rax+r12*8]
   140043d4b:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140043d50:	je     0x140043d6e
   140043d52:	call   0x1400433f8
   140043d57:	movsxd rcx,DWORD PTR [rsi+0x8]
   140043d5b:	lea    rax,[rax+r12*8]
   140043d5f:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140043d64:	call   0x1400433f8
   140043d69:	add    rax,rbx
   140043d6c:	jmp    0x140043d70
   140043d6e:	xor    eax,eax
   140043d70:	mov    r8d,0x103
   140043d76:	mov    rdx,r14
   140043d79:	mov    rcx,rax
   140043d7c:	call   0x140044e30
   140043d81:	mov    rcx,QWORD PTR [rsp+0x28]
   140043d86:	call   0x140043428
   140043d8b:	jmp    0x140043dab
   140043d8d:	mov    r13d,DWORD PTR [rsp+0x88]
   140043d95:	mov    rsi,QWORD PTR [rsp+0x80]
   140043d9d:	mov    r15,QWORD PTR [rsp+0x78]
   140043da2:	mov    r14,QWORD PTR [rsp+0x70]
   140043da7:	mov    edi,DWORD PTR [rsp+0x20]
   140043dab:	mov    DWORD PTR [rsp+0x24],edi
   140043daf:	jmp    0x140043cbe
   140043db4:	call   0x140037c34
   140043db9:	cmp    DWORD PTR [rax+0x100],0x0
   140043dc0:	jle    0x140043dcd
   140043dc2:	call   0x140037c34
   140043dc7:	dec    DWORD PTR [rax+0x100]
   140043dcd:	cmp    edi,0xffffffff
   140043dd0:	je     0x140043ddc
   140043dd2:	cmp    edi,r13d
   140043dd5:	jle    0x140043ddc
   140043dd7:	call   0x140036b64
   140043ddc:	mov    r9d,edi
   140043ddf:	mov    r8,rsi
   140043de2:	mov    rdx,r15
   140043de5:	mov    rcx,r14
   140043de8:	call   0x140043a3c
   140043ded:	add    rsp,0x30
   140043df1:	pop    r15
   140043df3:	pop    r14
   140043df5:	pop    r13
   140043df7:	pop    r12
   140043df9:	pop    rdi
   140043dfa:	pop    rsi
   140043dfb:	pop    rbx
   140043dfc:	ret    
   140043dfd:	int3   
   140043dfe:	int3   
   140043dff:	int3   
   140043e00:	test   rcx,rcx
   140043e03:	je     0x140043e41
   140043e05:	mov    BYTE PTR [rsp+0x10],dl
   140043e09:	sub    rsp,0x28
   140043e0d:	cmp    DWORD PTR [rcx],0xe06d7363
   140043e13:	jne    0x140043e3d
   140043e15:	mov    rax,QWORD PTR [rcx+0x30]
   140043e19:	test   rax,rax
   140043e1c:	je     0x140043e3d
   140043e1e:	cmp    DWORD PTR [rax+0x4],0x0
   140043e22:	je     0x140043e3d
   140043e24:	movsxd rax,DWORD PTR [rax+0x4]
   140043e28:	mov    rdx,QWORD PTR [rcx+0x38]
   140043e2c:	add    rdx,rax
   140043e2f:	mov    rcx,QWORD PTR [rcx+0x28]
   140043e33:	call   rdx
   140043e35:	jmp    0x140043e3d
   140043e37:	call   0x140036b40
   140043e3c:	nop
   140043e3d:	add    rsp,0x28
   140043e41:	ret    
   140043e42:	int3   
   140043e43:	int3   
   140043e44:	movsxd rax,DWORD PTR [rdx]
   140043e47:	add    rax,rcx
   140043e4a:	cmp    DWORD PTR [rdx+0x4],0x0
   140043e4e:	jl     0x140043e66
   140043e50:	movsxd r9,DWORD PTR [rdx+0x4]
   140043e54:	movsxd rdx,DWORD PTR [rdx+0x8]
   140043e58:	mov    rcx,QWORD PTR [r9+rcx*1]
   140043e5c:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140043e60:	add    r8,r9
   140043e63:	add    rax,r8
   140043e66:	ret    
   140043e67:	int3   
   140043e68:	mov    QWORD PTR [rsp+0x8],rbx
   140043e6d:	mov    QWORD PTR [rsp+0x10],rbp
   140043e72:	mov    QWORD PTR [rsp+0x18],rsi
   140043e77:	push   rdi
   140043e78:	push   r12
   140043e7a:	push   r13
   140043e7c:	push   r14
   140043e7e:	push   r15
   140043e80:	sub    rsp,0x20
   140043e84:	mov    rsi,rdx
   140043e87:	mov    r14,rcx
   140043e8a:	test   rdx,rdx
   140043e8d:	jne    0x140043e9a
   140043e8f:	call   0x140036b64
   140043e94:	call   0x140036b40
   140043e99:	int3   
   140043e9a:	xor    edi,edi
   140043e9c:	xor    r12b,r12b
   140043e9f:	cmp    DWORD PTR [rdx],edi
   140043ea1:	jle    0x140043f1b
   140043ea3:	call   0x140043410
   140043ea8:	mov    r11,rax
   140043eab:	mov    rax,QWORD PTR [r14+0x30]
   140043eaf:	movsxd rcx,DWORD PTR [rax+0xc]
   140043eb3:	lea    r13,[r11+rcx*1+0x4]
   140043eb8:	call   0x140043410
   140043ebd:	mov    r11,rax
   140043ec0:	mov    rax,QWORD PTR [r14+0x30]
   140043ec4:	movsxd rcx,DWORD PTR [rax+0xc]
   140043ec8:	mov    ebp,DWORD PTR [r11+rcx*1]
   140043ecc:	test   ebp,ebp
   140043ece:	jle    0x140043f15
   140043ed0:	movsxd rax,edi
   140043ed3:	lea    r15,[rax+rax*4]
   140043ed7:	call   0x140043410
   140043edc:	mov    rbx,rax
   140043edf:	movsxd rax,DWORD PTR [r13+0x0]
   140043ee3:	add    rbx,rax
   140043ee6:	call   0x1400433f8
   140043eeb:	movsxd rcx,DWORD PTR [rsi+0x4]
   140043eef:	mov    r8,QWORD PTR [r14+0x30]
   140043ef3:	lea    rax,[rax+r15*4]
   140043ef7:	mov    rdx,rbx
   140043efa:	add    rcx,rax
   140043efd:	call   0x140043afc
   140043f02:	test   eax,eax
   140043f04:	jne    0x140043f12
   140043f06:	dec    ebp
   140043f08:	add    r13,0x4
   140043f0c:	test   ebp,ebp
   140043f0e:	jg     0x140043ed7
   140043f10:	jmp    0x140043f15
   140043f12:	mov    r12b,0x1
   140043f15:	inc    edi
   140043f17:	cmp    edi,DWORD PTR [rsi]
   140043f19:	jl     0x140043ea3
   140043f1b:	mov    rbx,QWORD PTR [rsp+0x50]
   140043f20:	mov    rbp,QWORD PTR [rsp+0x58]
   140043f25:	mov    rsi,QWORD PTR [rsp+0x60]
   140043f2a:	mov    al,r12b
   140043f2d:	add    rsp,0x20
   140043f31:	pop    r15
   140043f33:	pop    r14
   140043f35:	pop    r13
   140043f37:	pop    r12
   140043f39:	pop    rdi
   140043f3a:	ret    
   140043f3b:	int3   
   140043f3c:	rex push rbx
   140043f3e:	push   rsi
   140043f3f:	push   rdi
   140043f40:	push   r12
   140043f42:	push   r13
   140043f44:	push   r14
   140043f46:	push   r15
   140043f48:	sub    rsp,0x80
   140043f4f:	mov    rdi,rcx
   140043f52:	xor    r13d,r13d
   140043f55:	mov    DWORD PTR [rsp+0x20],r13d
   140043f5a:	and    DWORD PTR [rsp+0xc0],r13d
   140043f62:	and    QWORD PTR [rsp+0x48],r13
   140043f67:	and    QWORD PTR [rsp+0x40],r13
   140043f6c:	call   0x140037c34
   140043f71:	mov    rax,QWORD PTR [rax+0xf8]
   140043f78:	mov    QWORD PTR [rsp+0xd8],rax
   140043f80:	call   0x140037c34
   140043f85:	mov    rax,QWORD PTR [rax+0xf0]
   140043f8c:	mov    QWORD PTR [rsp+0xd0],rax
   140043f94:	mov    rsi,QWORD PTR [rdi+0x50]
   140043f98:	mov    QWORD PTR [rsp+0xc8],rsi
   140043fa0:	mov    rax,QWORD PTR [rdi+0x48]
   140043fa4:	mov    QWORD PTR [rsp+0x38],rax
   140043fa9:	mov    rbx,QWORD PTR [rdi+0x40]
   140043fad:	mov    r15,QWORD PTR [rdi+0x30]
   140043fb1:	mov    r12,QWORD PTR [rdi+0x28]
   140043fb5:	mov    QWORD PTR [rsp+0x60],r12
   140043fba:	call   0x140037c34
   140043fbf:	mov    QWORD PTR [rax+0xf0],rsi
   140043fc6:	call   0x140037c34
   140043fcb:	mov    QWORD PTR [rax+0xf8],rbx
   140043fd2:	call   0x140037c34
   140043fd7:	mov    rdx,QWORD PTR [rax+0xf0]
   140043fde:	mov    rdx,QWORD PTR [rdx+0x28]
   140043fe2:	lea    rcx,[rsp+0x70]
   140043fe7:	call   0x1400437b8
   140043fec:	mov    r14,rax
   140043fef:	mov    QWORD PTR [rsp+0x50],rax
   140043ff4:	cmp    QWORD PTR [rdi+0x58],r13
   140043ff8:	je     0x140044016
   140043ffa:	mov    DWORD PTR [rsp+0xc0],0x1
   140044005:	call   0x140037c34
   14004400a:	mov    rcx,QWORD PTR [rax+0x138]
   140044011:	mov    QWORD PTR [rsp+0x40],rcx
   140044016:	mov    r8d,0x100
   14004401c:	mov    rdx,r12
   14004401f:	mov    rcx,r15
   140044022:	call   0x140044e30
   140044027:	mov    rbx,rax
   14004402a:	mov    QWORD PTR [rsp+0x48],rax
   14004402f:	mov    rdi,QWORD PTR [rsp+0xd8]
   140044037:	mov    r15,QWORD PTR [rsp+0xd0]
   14004403f:	jmp    0x1400440be
   140044041:	mov    DWORD PTR [rsp+0x20],0x1
   140044049:	call   0x140037c34
   14004404e:	and    DWORD PTR [rax+0x2c0],0x0
   140044055:	mov    rsi,QWORD PTR [rsp+0xc8]
   14004405d:	cmp    DWORD PTR [rsp+0xc0],0x0
   140044065:	je     0x140044087
   140044067:	mov    dl,0x1
   140044069:	mov    rcx,rsi
   14004406c:	call   0x140043e00
   140044071:	mov    r11,QWORD PTR [rsp+0x40]
   140044076:	lea    r9,[r11+0x20]
   14004407a:	mov    r8d,DWORD PTR [r11+0x18]
   14004407e:	mov    edx,DWORD PTR [r11+0x4]
   140044082:	mov    ecx,DWORD PTR [r11]
   140044085:	jmp    0x140044094
   140044087:	lea    r9,[rsi+0x20]
   14004408b:	mov    r8d,DWORD PTR [rsi+0x18]
   14004408f:	mov    edx,DWORD PTR [rsi+0x4]
   140044092:	mov    ecx,DWORD PTR [rsi]
   140044094:	call   QWORD PTR [rip+0x240c6]        # 0x140068160
   14004409a:	mov    r13d,DWORD PTR [rsp+0x20]
   14004409f:	mov    rbx,QWORD PTR [rsp+0x48]
   1400440a4:	mov    rdi,QWORD PTR [rsp+0xd8]
   1400440ac:	mov    r15,QWORD PTR [rsp+0xd0]
   1400440b4:	mov    r12,QWORD PTR [rsp+0x60]
   1400440b9:	mov    r14,QWORD PTR [rsp+0x50]
   1400440be:	mov    rcx,r14
   1400440c1:	call   0x140043830
   1400440c6:	test   r13d,r13d
   1400440c9:	jne    0x14004410b
   1400440cb:	cmp    DWORD PTR [rsi],0xe06d7363
   1400440d1:	jne    0x14004410b
   1400440d3:	cmp    DWORD PTR [rsi+0x18],0x4
   1400440d7:	jne    0x14004410b
   1400440d9:	cmp    DWORD PTR [rsi+0x20],0x19930520
   1400440e0:	je     0x1400440f4
   1400440e2:	cmp    DWORD PTR [rsi+0x20],0x19930521
   1400440e9:	je     0x1400440f4
   1400440eb:	cmp    DWORD PTR [rsi+0x20],0x19930522
   1400440f2:	jne    0x14004410b
   1400440f4:	mov    rcx,QWORD PTR [rsi+0x28]
   1400440f8:	call   0x1400437fc
   1400440fd:	test   eax,eax
   1400440ff:	je     0x14004410b
   140044101:	mov    dl,0x1
   140044103:	mov    rcx,rsi
   140044106:	call   0x140043e00
   14004410b:	call   0x140037c34
   140044110:	mov    QWORD PTR [rax+0xf0],r15
   140044117:	call   0x140037c34
   14004411c:	mov    QWORD PTR [rax+0xf8],rdi
   140044123:	mov    rax,QWORD PTR [rsp+0x38]
   140044128:	movsxd rcx,DWORD PTR [rax+0x1c]
   14004412c:	mov    rax,QWORD PTR [r12]
   140044130:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140044138:	mov    rax,rbx
   14004413b:	add    rsp,0x80
   140044142:	pop    r15
   140044144:	pop    r14
   140044146:	pop    r13
   140044148:	pop    r12
   14004414a:	pop    rdi
   14004414b:	pop    rsi
   14004414c:	pop    rbx
   14004414d:	ret    
   14004414e:	int3   
   14004414f:	int3   
   140044150:	mov    QWORD PTR [rsp+0x8],rbx
   140044155:	mov    QWORD PTR [rsp+0x10],rsi
   14004415a:	mov    QWORD PTR [rsp+0x18],rdi
   14004415f:	push   r12
   140044161:	push   r13
   140044163:	push   r14
   140044165:	sub    rsp,0x30
   140044169:	mov    rsi,r9
   14004416c:	mov    rdi,r8
   14004416f:	mov    r12,rdx
   140044172:	mov    r14,rcx
   140044175:	xor    ebx,ebx
   140044177:	mov    r13d,DWORD PTR [r8+0x4]
   14004417b:	test   r13d,r13d
   14004417e:	je     0x14004418f
   140044180:	movsxd r13,r13d
   140044183:	call   0x1400433f8
   140044188:	lea    r11,[r13+rax*1+0x0]
   14004418d:	jmp    0x140044192
   14004418f:	mov    r11,rbx
   140044192:	test   r11,r11
   140044195:	je     0x140044336
   14004419b:	test   r13d,r13d
   14004419e:	je     0x1400441b1
   1400441a0:	call   0x1400433f8
   1400441a5:	mov    r11,rax
   1400441a8:	movsxd rax,DWORD PTR [rdi+0x4]
   1400441ac:	add    r11,rax
   1400441af:	jmp    0x1400441b4
   1400441b1:	mov    r11,rbx
   1400441b4:	cmp    BYTE PTR [r11+0x10],bl
   1400441b8:	je     0x140044336
   1400441be:	cmp    DWORD PTR [rdi+0x8],ebx
   1400441c1:	jne    0x1400441cf
   1400441c3:	test   DWORD PTR [rdi],0x80000000
   1400441c9:	je     0x140044336
   1400441cf:	mov    ecx,DWORD PTR [rdi]
   1400441d1:	test   ecx,ecx
   1400441d3:	js     0x1400441e0
   1400441d5:	movsxd rax,DWORD PTR [rdi+0x8]
   1400441d9:	add    rax,QWORD PTR [r12]
   1400441dd:	mov    r12,rax
   1400441e0:	mov    edi,0x1
   1400441e5:	test   cl,0x8
   1400441e8:	je     0x140044229
   1400441ea:	mov    edx,edi
   1400441ec:	mov    rcx,QWORD PTR [r14+0x28]
   1400441f0:	call   0x140044e78
   1400441f5:	test   eax,eax
   1400441f7:	je     0x140044326
   1400441fd:	mov    edx,edi
   1400441ff:	mov    rcx,r12
   140044202:	call   0x140044e78
   140044207:	test   eax,eax
   140044209:	je     0x140044326
   14004420f:	mov    rcx,QWORD PTR [r14+0x28]
   140044213:	mov    QWORD PTR [r12],rcx
   140044217:	lea    rdx,[rsi+0x8]
   14004421b:	call   0x140043e44
   140044220:	mov    QWORD PTR [r12],rax
   140044224:	jmp    0x14004432c
   140044229:	test   BYTE PTR [rsi],dil
   14004422c:	je     0x14004427d
   14004422e:	mov    edx,edi
   140044230:	mov    rcx,QWORD PTR [r14+0x28]
   140044234:	call   0x140044e78
   140044239:	test   eax,eax
   14004423b:	je     0x140044326
   140044241:	mov    edx,edi
   140044243:	mov    rcx,r12
   140044246:	call   0x140044e78
   14004424b:	test   eax,eax
   14004424d:	je     0x140044326
   140044253:	movsxd r8,DWORD PTR [rsi+0x14]
   140044257:	mov    rdx,QWORD PTR [r14+0x28]
   14004425b:	mov    rcx,r12
   14004425e:	call   0x140033260
   140044263:	cmp    DWORD PTR [rsi+0x14],0x8
   140044267:	jne    0x14004432c
   14004426d:	cmp    QWORD PTR [r12],rbx
   140044271:	je     0x14004432c
   140044277:	mov    rcx,QWORD PTR [r12]
   14004427b:	jmp    0x140044217
   14004427d:	cmp    DWORD PTR [rsi+0x18],ebx
   140044280:	je     0x140044293
   140044282:	call   0x140043410
   140044287:	mov    r11,rax
   14004428a:	movsxd rax,DWORD PTR [rsi+0x18]
   14004428e:	add    r11,rax
   140044291:	jmp    0x140044296
   140044293:	mov    r11,rbx
   140044296:	mov    edx,edi
   140044298:	mov    rcx,QWORD PTR [r14+0x28]
   14004429c:	test   r11,r11
   14004429f:	jne    0x1400442d9
   1400442a1:	call   0x140044e78
   1400442a6:	test   eax,eax
   1400442a8:	je     0x140044326
   1400442aa:	mov    edx,edi
   1400442ac:	mov    rcx,r12
   1400442af:	call   0x140044e78
   1400442b4:	test   eax,eax
   1400442b6:	je     0x140044326
   1400442b8:	movsxd r10,DWORD PTR [rsi+0x14]
   1400442bc:	lea    rdx,[rsi+0x8]
   1400442c0:	mov    rcx,QWORD PTR [r14+0x28]
   1400442c4:	call   0x140043e44
   1400442c9:	mov    rdx,rax
   1400442cc:	mov    r8,r10
   1400442cf:	mov    rcx,r12
   1400442d2:	call   0x140033260
   1400442d7:	jmp    0x14004432c
   1400442d9:	call   0x140044e78
   1400442de:	test   eax,eax
   1400442e0:	je     0x140044326
   1400442e2:	mov    edx,edi
   1400442e4:	mov    rcx,r12
   1400442e7:	call   0x140044e78
   1400442ec:	test   eax,eax
   1400442ee:	je     0x140044326
   1400442f0:	cmp    DWORD PTR [rsi+0x18],ebx
   1400442f3:	je     0x140044306
   1400442f5:	call   0x140043410
   1400442fa:	mov    rcx,rax
   1400442fd:	movsxd rax,DWORD PTR [rsi+0x18]
   140044301:	add    rcx,rax
   140044304:	jmp    0x140044309
   140044306:	mov    rcx,rbx
   140044309:	call   0x140044e78
   14004430e:	test   eax,eax
   140044310:	je     0x140044326
   140044312:	mov    al,BYTE PTR [rsi]
   140044314:	and    al,0x4
   140044316:	neg    al
   140044318:	sbb    ecx,ecx
   14004431a:	neg    ecx
   14004431c:	add    ecx,edi
   14004431e:	mov    ebx,ecx
   140044320:	mov    DWORD PTR [rsp+0x20],ecx
   140044324:	jmp    0x14004432c
   140044326:	call   0x140036b64
   14004432b:	nop
   14004432c:	mov    eax,ebx
   14004432e:	jmp    0x140044338
   140044330:	call   0x140036b40
   140044335:	nop
   140044336:	xor    eax,eax
   140044338:	mov    rbx,QWORD PTR [rsp+0x50]
   14004433d:	mov    rsi,QWORD PTR [rsp+0x58]
   140044342:	mov    rdi,QWORD PTR [rsp+0x60]
   140044347:	add    rsp,0x30
   14004434b:	pop    r14
   14004434d:	pop    r13
   14004434f:	pop    r12
   140044351:	ret    
   140044352:	int3   
   140044353:	int3   
   140044354:	mov    QWORD PTR [rsp+0x8],rbx
   140044359:	mov    QWORD PTR [rsp+0x10],rsi
   14004435e:	push   rdi
   14004435f:	sub    rsp,0x20
   140044363:	mov    rbx,r9
   140044366:	mov    rsi,rcx
   140044369:	test   DWORD PTR [r8],0x80000000
   140044370:	je     0x140044377
   140044372:	mov    rdi,rdx
   140044375:	jmp    0x14004437e
   140044377:	movsxd rdi,DWORD PTR [r8+0x8]
   14004437b:	add    rdi,QWORD PTR [rdx]
   14004437e:	call   0x140044150
   140044383:	dec    eax
   140044385:	je     0x1400443c1
   140044387:	dec    eax
   140044389:	jne    0x1400443ec
   14004438b:	xor    r10d,r10d
   14004438e:	cmp    DWORD PTR [rbx+0x18],r10d
   140044392:	je     0x1400443a3
   140044394:	call   0x140043410
   140044399:	mov    r10,rax
   14004439c:	movsxd rax,DWORD PTR [rbx+0x18]
   1400443a0:	add    r10,rax
   1400443a3:	lea    rdx,[rbx+0x8]
   1400443a7:	mov    rcx,QWORD PTR [rsi+0x28]
   1400443ab:	call   0x140043e44
   1400443b0:	mov    rdx,rax
   1400443b3:	mov    r8d,0x1
   1400443b9:	mov    rcx,rdi
   1400443bc:	call   r10
   1400443bf:	jmp    0x1400443ec
   1400443c1:	xor    r10d,r10d
   1400443c4:	cmp    DWORD PTR [rbx+0x18],r10d
   1400443c8:	je     0x1400443d6
   1400443ca:	call   0x140043410
   1400443cf:	movsxd r10,DWORD PTR [rbx+0x18]
   1400443d3:	add    r10,rax
   1400443d6:	lea    rdx,[rbx+0x8]
   1400443da:	mov    rcx,QWORD PTR [rsi+0x28]
   1400443de:	call   0x140043e44
   1400443e3:	mov    rdx,rax
   1400443e6:	mov    rcx,rdi
   1400443e9:	call   r10
   1400443ec:	jmp    0x1400443f4
   1400443ee:	call   0x140036b40
   1400443f3:	nop
   1400443f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400443f9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400443fe:	add    rsp,0x20
   140044402:	pop    rdi
   140044403:	ret    
   140044404:	mov    rax,rsp
   140044407:	mov    QWORD PTR [rax+0x8],rbx
   14004440b:	mov    QWORD PTR [rax+0x18],rbp
   14004440f:	push   rsi
   140044410:	push   rdi
   140044411:	push   r12
   140044413:	push   r13
   140044415:	push   r14
   140044417:	sub    rsp,0x50
   14004441b:	mov    r13,QWORD PTR [rsp+0xa0]
   140044423:	mov    rbp,r9
   140044426:	mov    r12,rdx
   140044429:	mov    r14,r8
   14004442c:	mov    rbx,rcx
   14004442f:	lea    r9,[rax+0x10]
   140044433:	mov    r8,r13
   140044436:	mov    rdx,rbp
   140044439:	mov    rcx,r12
   14004443c:	call   0x14004330c
   140044441:	mov    r9,QWORD PTR [rsp+0xb0]
   140044449:	mov    rsi,QWORD PTR [rsp+0xa8]
   140044451:	mov    rdi,rax
   140044454:	test   r9,r9
   140044457:	je     0x140044467
   140044459:	mov    r8,rsi
   14004445c:	mov    rdx,rax
   14004445f:	mov    rcx,rbx
   140044462:	call   0x140044354
   140044467:	call   0x1400433f8
   14004446c:	movsxd rcx,DWORD PTR [rsi+0xc]
   140044470:	mov    r9,rdi
   140044473:	add    rax,rcx
   140044476:	mov    cl,BYTE PTR [rsp+0xc0]
   14004447d:	mov    r8,r14
   140044480:	mov    BYTE PTR [rsp+0x40],cl
   140044484:	mov    rcx,QWORD PTR [rsp+0xb8]
   14004448c:	mov    QWORD PTR [rsp+0x38],rbp
   140044491:	mov    edx,DWORD PTR [rcx]
   140044493:	mov    QWORD PTR [rsp+0x30],r13
   140044498:	mov    rcx,r12
   14004449b:	mov    DWORD PTR [rsp+0x28],edx
   14004449f:	mov    rdx,rbx
   1400444a2:	mov    QWORD PTR [rsp+0x20],rax
   1400444a7:	call   0x140043890
   1400444ac:	lea    r11,[rsp+0x50]
   1400444b1:	mov    rbx,QWORD PTR [r11+0x30]
   1400444b5:	mov    rbp,QWORD PTR [r11+0x40]
   1400444b9:	mov    rsp,r11
   1400444bc:	pop    r14
   1400444be:	pop    r13
   1400444c0:	pop    r12
   1400444c2:	pop    rdi
   1400444c3:	pop    rsi
   1400444c4:	ret    
   1400444c5:	int3   
   1400444c6:	int3   
   1400444c7:	int3   
   1400444c8:	mov    QWORD PTR [rsp+0x10],rbx
   1400444cd:	mov    QWORD PTR [rsp+0x18],r8
   1400444d2:	push   rbp
   1400444d3:	push   rsi
   1400444d4:	push   rdi
   1400444d5:	push   r12
   1400444d7:	push   r13
   1400444d9:	push   r14
   1400444db:	push   r15
   1400444dd:	sub    rsp,0x60
   1400444e1:	cmp    DWORD PTR [rcx],0x80000003
   1400444e7:	mov    r14,r9
   1400444ea:	mov    r12,r8
   1400444ed:	mov    r15,rdx
   1400444f0:	mov    rsi,rcx
   1400444f3:	je     0x1400446e8
   1400444f9:	call   0x140037c34
   1400444fe:	mov    edi,DWORD PTR [rsp+0xd0]
   140044505:	mov    rbp,QWORD PTR [rsp+0xc0]
   14004450d:	cmp    QWORD PTR [rax+0xe0],0x0
   140044515:	je     0x14004456c
   140044517:	call   0x140037c34
   14004451c:	mov    rbx,rax
   14004451f:	call   0x140037aac
   140044524:	cmp    QWORD PTR [rbx+0xe0],rax
   14004452b:	je     0x14004456c
   14004452d:	cmp    DWORD PTR [rsi],0xe0434f4d
   140044533:	je     0x14004456c
   140044535:	cmp    DWORD PTR [rsi],0xe0434352
   14004453b:	je     0x14004456c
   14004453d:	mov    rax,QWORD PTR [rsp+0xd8]
   140044545:	mov    r9,r14
   140044548:	mov    r8,r12
   14004454b:	mov    QWORD PTR [rsp+0x30],rax
   140044550:	mov    rdx,r15
   140044553:	mov    rcx,rsi
   140044556:	mov    DWORD PTR [rsp+0x28],edi
   14004455a:	mov    QWORD PTR [rsp+0x20],rbp
   14004455f:	call   0x140043638
   140044564:	test   eax,eax
   140044566:	jne    0x1400446e8
   14004456c:	cmp    DWORD PTR [rbp+0xc],0x0
   140044570:	jne    0x140044577
   140044572:	call   0x140036b64
   140044577:	mov    r12d,DWORD PTR [rsp+0xc8]
   14004457f:	lea    rax,[rsp+0x50]
   140044584:	mov    QWORD PTR [rsp+0x30],r14
   140044589:	mov    QWORD PTR [rsp+0x28],rax
   14004458e:	lea    rax,[rsp+0xa0]
   140044596:	mov    r8d,edi
   140044599:	mov    r9d,r12d
   14004459c:	mov    rdx,rbp
   14004459f:	mov    rcx,r15
   1400445a2:	mov    QWORD PTR [rsp+0x20],rax
   1400445a7:	call   0x14004368c
   1400445ac:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400445b3:	cmp    ecx,DWORD PTR [rsp+0x50]
   1400445b7:	jae    0x1400446e8
   1400445bd:	lea    rdi,[rax+0xc]
   1400445c1:	lea    r13,[rdi-0xc]
   1400445c5:	cmp    r12d,DWORD PTR [r13+0x0]
   1400445c9:	jl     0x1400446d1
   1400445cf:	cmp    r12d,DWORD PTR [rdi-0x8]
   1400445d3:	jg     0x1400446d1
   1400445d9:	call   0x1400433f8
   1400445de:	movsxd rcx,DWORD PTR [rdi]
   1400445e1:	lea    rdx,[rcx+rcx*4]
   1400445e5:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400445e9:	lea    rdx,[rcx+rdx*4]
   1400445ed:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   1400445f2:	je     0x140044617
   1400445f4:	call   0x1400433f8
   1400445f9:	movsxd rcx,DWORD PTR [rdi]
   1400445fc:	lea    rdx,[rcx+rcx*4]
   140044600:	movsxd rcx,DWORD PTR [rdi+0x4]
   140044604:	lea    rdx,[rcx+rdx*4]
   140044608:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14004460d:	call   0x1400433f8
   140044612:	add    rax,rbx
   140044615:	jmp    0x140044619
   140044617:	xor    eax,eax
   140044619:	test   rax,rax
   14004461c:	je     0x140044664
   14004461e:	call   0x1400433f8
   140044623:	movsxd rcx,DWORD PTR [rdi]
   140044626:	lea    rdx,[rcx+rcx*4]
   14004462a:	movsxd rcx,DWORD PTR [rdi+0x4]
   14004462e:	lea    rdx,[rcx+rdx*4]
   140044632:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140044637:	je     0x14004465c
   140044639:	call   0x1400433f8
   14004463e:	movsxd rcx,DWORD PTR [rdi]
   140044641:	lea    rdx,[rcx+rcx*4]
   140044645:	movsxd rcx,DWORD PTR [rdi+0x4]
   140044649:	lea    rdx,[rcx+rdx*4]
   14004464d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140044652:	call   0x1400433f8
   140044657:	add    rax,rbx
   14004465a:	jmp    0x14004465e
   14004465c:	xor    eax,eax
   14004465e:	cmp    BYTE PTR [rax+0x10],0x0
   140044662:	jne    0x1400446ca
   140044664:	call   0x1400433f8
   140044669:	movsxd rcx,DWORD PTR [rdi]
   14004466c:	lea    rdx,[rcx+rcx*4]
   140044670:	movsxd rcx,DWORD PTR [rdi+0x4]
   140044674:	lea    rdx,[rcx+rdx*4]
   140044678:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14004467d:	jne    0x1400446ca
   14004467f:	call   0x1400433f8
   140044684:	mov    ecx,DWORD PTR [rdi]
   140044686:	mov    r8,QWORD PTR [rsp+0xb0]
   14004468e:	dec    ecx
   140044690:	mov    BYTE PTR [rsp+0x40],0x0
   140044695:	mov    QWORD PTR [rsp+0x38],r13
   14004469a:	and    QWORD PTR [rsp+0x30],0x0
   1400446a0:	movsxd rcx,ecx
   1400446a3:	mov    r9,r14
   1400446a6:	lea    rdx,[rcx+rcx*4]
   1400446aa:	lea    rcx,[rax+rdx*4]
   1400446ae:	movsxd rax,DWORD PTR [rdi+0x4]
   1400446b2:	mov    rdx,r15
   1400446b5:	add    rcx,rax
   1400446b8:	mov    QWORD PTR [rsp+0x28],rcx
   1400446bd:	mov    rcx,rsi
   1400446c0:	mov    QWORD PTR [rsp+0x20],rbp
   1400446c5:	call   0x140044404
   1400446ca:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400446d1:	inc    ecx
   1400446d3:	add    rdi,0x14
   1400446d7:	mov    DWORD PTR [rsp+0xa0],ecx
   1400446de:	cmp    ecx,DWORD PTR [rsp+0x50]
   1400446e2:	jb     0x1400445c1
   1400446e8:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400446f0:	add    rsp,0x60
   1400446f4:	pop    r15
   1400446f6:	pop    r14
   1400446f8:	pop    r13
   1400446fa:	pop    r12
   1400446fc:	pop    rdi
   1400446fd:	pop    rsi
   1400446fe:	pop    rbp
   1400446ff:	ret    
   140044700:	mov    rax,rsp
   140044703:	mov    QWORD PTR [rax+0x20],rbx
   140044707:	mov    QWORD PTR [rax+0x18],r8
   14004470b:	mov    QWORD PTR [rax+0x10],rdx
   14004470f:	push   rbp
   140044710:	push   rsi
   140044711:	push   rdi
   140044712:	push   r12
   140044714:	push   r13
   140044716:	push   r14
   140044718:	push   r15
   14004471a:	lea    rbp,[rax-0x3f]
   14004471e:	sub    rsp,0x90
   140044725:	mov    rbx,QWORD PTR [rbp+0x67]
   140044729:	mov    r13,rdx
   14004472c:	mov    rdi,rcx
   14004472f:	xor    r14b,r14b
   140044732:	mov    rdx,r9
   140044735:	mov    rcx,rbx
   140044738:	mov    r15,r9
   14004473b:	mov    r12,r8
   14004473e:	mov    BYTE PTR [rbp+0x47],r14b
   140044742:	call   0x140043a0c
   140044747:	lea    r9,[rbp-0x21]
   14004474b:	mov    r8,rbx
   14004474e:	mov    rdx,r15
   140044751:	mov    rcx,r13
   140044754:	mov    esi,eax
   140044756:	call   0x14004330c
   14004475b:	mov    r8,rbx
   14004475e:	mov    rdx,r15
   140044761:	mov    rcx,r13
   140044764:	call   0x140043a84
   140044769:	mov    r8,rbx
   14004476c:	mov    rdx,r15
   14004476f:	cmp    esi,eax
   140044771:	jle    0x140044792
   140044773:	lea    rcx,[rbp-0x21]
   140044777:	mov    r9d,esi
   14004477a:	call   0x140043a3c
   14004477f:	mov    r9d,esi
   140044782:	mov    r8,rbx
   140044785:	mov    rdx,r15
   140044788:	mov    rcx,r13
   14004478b:	call   0x140043a48
   140044790:	jmp    0x14004479c
   140044792:	mov    rcx,r13
   140044795:	call   0x140043a84
   14004479a:	mov    esi,eax
   14004479c:	cmp    esi,0xffffffff
   14004479f:	jl     0x1400447a6
   1400447a1:	cmp    esi,DWORD PTR [rbx+0x4]
   1400447a4:	jl     0x1400447ab
   1400447a6:	call   0x140036b64
   1400447ab:	cmp    DWORD PTR [rdi],0xe06d7363
   1400447b1:	jne    0x140044b8f
   1400447b7:	cmp    DWORD PTR [rdi+0x18],0x4
   1400447bb:	jne    0x140044952
   1400447c1:	cmp    DWORD PTR [rdi+0x20],0x19930520
   1400447c8:	je     0x1400447e0
   1400447ca:	cmp    DWORD PTR [rdi+0x20],0x19930521
   1400447d1:	je     0x1400447e0
   1400447d3:	cmp    DWORD PTR [rdi+0x20],0x19930522
   1400447da:	jne    0x140044952
   1400447e0:	cmp    QWORD PTR [rdi+0x30],0x0
   1400447e5:	jne    0x140044952
   1400447eb:	call   0x140037c34
   1400447f0:	cmp    QWORD PTR [rax+0xf0],0x0
   1400447f8:	je     0x140044b74
   1400447fe:	call   0x140037c34
   140044803:	mov    rdi,QWORD PTR [rax+0xf0]
   14004480a:	call   0x140037c34
   14004480f:	mov    rcx,QWORD PTR [rdi+0x38]
   140044813:	mov    r12,QWORD PTR [rax+0xf8]
   14004481a:	mov    QWORD PTR [rbp+0x57],r12
   14004481e:	call   0x140043444
   140044823:	mov    edx,0x1
   140044828:	mov    rcx,rdi
   14004482b:	call   0x140044e78
   140044830:	test   eax,eax
   140044832:	jne    0x140044839
   140044834:	call   0x140036b64
   140044839:	cmp    DWORD PTR [rdi],0xe06d7363
   14004483f:	jne    0x14004486e
   140044841:	cmp    DWORD PTR [rdi+0x18],0x4
   140044845:	jne    0x14004486e
   140044847:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14004484e:	je     0x140044862
   140044850:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140044857:	je     0x140044862
   140044859:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140044860:	jne    0x14004486e
   140044862:	cmp    QWORD PTR [rdi+0x30],0x0
   140044867:	jne    0x14004486e
   140044869:	call   0x140036b64
   14004486e:	call   0x140037c34
   140044873:	cmp    QWORD PTR [rax+0x108],0x0
   14004487b:	je     0x140044952
   140044881:	call   0x140037c34
   140044886:	mov    r12,QWORD PTR [rax+0x108]
   14004488d:	call   0x140037c34
   140044892:	mov    rdx,r12
   140044895:	and    QWORD PTR [rax+0x108],0x0
   14004489d:	mov    rcx,rdi
   1400448a0:	call   0x140043e68
   1400448a5:	test   al,al
   1400448a7:	jne    0x14004494e
   1400448ad:	xor    r13d,r13d
   1400448b0:	cmp    DWORD PTR [r12],r13d
   1400448b4:	jle    0x14004490a
   1400448b6:	xor    esi,esi
   1400448b8:	call   0x1400433f8
   1400448bd:	movsxd rcx,DWORD PTR [r12+0x4]
   1400448c2:	add    rax,rsi
   1400448c5:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400448ca:	je     0x1400448e8
   1400448cc:	call   0x1400433f8
   1400448d1:	movsxd rcx,DWORD PTR [r12+0x4]
   1400448d6:	add    rax,rsi
   1400448d9:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   1400448de:	call   0x1400433f8
   1400448e3:	add    rax,rbx
   1400448e6:	jmp    0x1400448ea
   1400448e8:	xor    eax,eax
   1400448ea:	lea    rdx,[rip+0x41edf]        # 0x1400867d0
   1400448f1:	mov    rcx,rax
   1400448f4:	call   0x140033180
   1400448f9:	test   al,al
   1400448fb:	jne    0x140044910
   1400448fd:	inc    r13d
   140044900:	add    rsi,0x14
   140044904:	cmp    r13d,DWORD PTR [r12]
   140044908:	jl     0x1400448b8
   14004490a:	call   0x140036b40
   14004490f:	int3   
   140044910:	mov    dl,0x1
   140044912:	mov    rcx,rdi
   140044915:	call   0x140043e00
   14004491a:	lea    r11,[rip+0x26967]        # 0x14006b288
   140044921:	lea    rdx,[rbp+0x47]
   140044925:	lea    rcx,[rbp-0x11]
   140044929:	mov    QWORD PTR [rbp+0x47],r11
   14004492d:	call   0x140032fd4
   140044932:	lea    r11,[rip+0x2693f]        # 0x14006b278
   140044939:	lea    rdx,[rip+0x3ea18]        # 0x140083358
   140044940:	lea    rcx,[rbp-0x11]
   140044944:	mov    QWORD PTR [rbp-0x11],r11
   140044948:	call   0x140036358
   14004494d:	int3   
   14004494e:	mov    r12,QWORD PTR [rbp+0x57]
   140044952:	cmp    DWORD PTR [rdi],0xe06d7363
   140044958:	jne    0x140044b8f
   14004495e:	cmp    DWORD PTR [rdi+0x18],0x4
   140044962:	jne    0x140044b8f
   140044968:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14004496f:	je     0x140044987
   140044971:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140044978:	je     0x140044987
   14004497a:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140044981:	jne    0x140044b8f
   140044987:	cmp    DWORD PTR [rbx+0xc],0x0
   14004498b:	jbe    0x140044ad4
   140044991:	mov    r8d,DWORD PTR [rbp+0x77]
   140044995:	lea    rax,[rbp-0x31]
   140044999:	mov    QWORD PTR [rsp+0x30],r15
   14004499e:	mov    QWORD PTR [rsp+0x28],rax
   1400449a3:	lea    rax,[rbp-0x39]
   1400449a7:	mov    r9d,esi
   1400449aa:	mov    rdx,rbx
   1400449ad:	mov    rcx,r13
   1400449b0:	mov    QWORD PTR [rsp+0x20],rax
   1400449b5:	call   0x14004368c
   1400449ba:	mov    ecx,DWORD PTR [rbp-0x39]
   1400449bd:	mov    edx,DWORD PTR [rbp-0x31]
   1400449c0:	cmp    ecx,edx
   1400449c2:	jae    0x140044ad4
   1400449c8:	lea    r12,[rax+0x10]
   1400449cc:	cmp    DWORD PTR [r12-0x10],esi
   1400449d1:	jg     0x140044aba
   1400449d7:	cmp    esi,DWORD PTR [r12-0xc]
   1400449dc:	jg     0x140044aba
   1400449e2:	call   0x1400433f8
   1400449e7:	movsxd r13,DWORD PTR [r12]
   1400449eb:	mov    r14d,DWORD PTR [r12-0x4]
   1400449f0:	add    r13,rax
   1400449f3:	test   r14d,r14d
   1400449f6:	jle    0x140044aac
   1400449fc:	call   0x140043410
   140044a01:	mov    rcx,QWORD PTR [rdi+0x30]
   140044a05:	movsxd rdx,DWORD PTR [rcx+0xc]
   140044a09:	lea    rax,[rax+rdx*1+0x4]
   140044a0e:	mov    QWORD PTR [rbp-0x29],rax
   140044a12:	call   0x140043410
   140044a17:	mov    rcx,QWORD PTR [rdi+0x30]
   140044a1b:	movsxd rdx,DWORD PTR [rcx+0xc]
   140044a1f:	mov    ecx,DWORD PTR [rax+rdx*1]
   140044a22:	mov    DWORD PTR [rbp-0x35],ecx
   140044a25:	test   ecx,ecx
   140044a27:	jle    0x140044a60
   140044a29:	call   0x140043410
   140044a2e:	mov    rcx,QWORD PTR [rbp-0x29]
   140044a32:	mov    r8,QWORD PTR [rdi+0x30]
   140044a36:	movsxd rcx,DWORD PTR [rcx]
   140044a39:	add    rax,rcx
   140044a3c:	mov    rcx,r13
   140044a3f:	mov    rdx,rax
   140044a42:	mov    QWORD PTR [rbp-0x19],rax
   140044a46:	call   0x140043afc
   140044a4b:	test   eax,eax
   140044a4d:	jne    0x140044a69
   140044a4f:	mov    eax,DWORD PTR [rbp-0x35]
   140044a52:	add    QWORD PTR [rbp-0x29],0x4
   140044a57:	dec    eax
   140044a59:	mov    DWORD PTR [rbp-0x35],eax
   140044a5c:	test   eax,eax
   140044a5e:	jg     0x140044a29
   140044a60:	dec    r14d
   140044a63:	add    r13,0x14
   140044a67:	jmp    0x1400449f3
   140044a69:	mov    al,BYTE PTR [rbp+0x6f]
   140044a6c:	mov    r8,QWORD PTR [rbp+0x57]
   140044a70:	mov    r14b,0x1
   140044a73:	mov    BYTE PTR [rsp+0x40],al
   140044a77:	lea    rax,[r12-0x10]
   140044a7c:	mov    r9,r15
   140044a7f:	mov    QWORD PTR [rsp+0x38],rax
   140044a84:	mov    rax,QWORD PTR [rbp-0x19]
   140044a88:	mov    rcx,rdi
   140044a8b:	mov    QWORD PTR [rsp+0x30],rax
   140044a90:	mov    QWORD PTR [rsp+0x28],r13
   140044a95:	mov    r13,QWORD PTR [rbp+0x4f]
   140044a99:	mov    rdx,r13
   140044a9c:	mov    BYTE PTR [rbp+0x47],r14b
   140044aa0:	mov    QWORD PTR [rsp+0x20],rbx
   140044aa5:	call   0x140044404
   140044aaa:	jmp    0x140044ab4
   140044aac:	mov    r14b,BYTE PTR [rbp+0x47]
   140044ab0:	mov    r13,QWORD PTR [rbp+0x4f]
   140044ab4:	mov    edx,DWORD PTR [rbp-0x31]
   140044ab7:	mov    ecx,DWORD PTR [rbp-0x39]
   140044aba:	inc    ecx
   140044abc:	add    r12,0x14
   140044ac0:	mov    DWORD PTR [rbp-0x39],ecx
   140044ac3:	cmp    ecx,edx
   140044ac5:	jb     0x1400449cc
   140044acb:	test   r14b,r14b
   140044ace:	jne    0x140044b60
   140044ad4:	mov    eax,DWORD PTR [rbx]
   140044ad6:	and    eax,0x1fffffff
   140044adb:	cmp    eax,0x19930521
   140044ae0:	jb     0x140044b60
   140044ae2:	mov    esi,DWORD PTR [rbx+0x20]
   140044ae5:	test   esi,esi
   140044ae7:	je     0x140044af6
   140044ae9:	movsxd rsi,esi
   140044aec:	call   0x1400433f8
   140044af1:	add    rax,rsi
   140044af4:	jmp    0x140044af8
   140044af6:	xor    eax,eax
   140044af8:	test   rax,rax
   140044afb:	je     0x140044b60
   140044afd:	test   esi,esi
   140044aff:	je     0x140044b12
   140044b01:	call   0x1400433f8
   140044b06:	mov    rdx,rax
   140044b09:	movsxd rax,DWORD PTR [rbx+0x20]
   140044b0d:	add    rdx,rax
   140044b10:	jmp    0x140044b14
   140044b12:	xor    edx,edx
   140044b14:	mov    rcx,rdi
   140044b17:	call   0x140043e68
   140044b1c:	test   al,al
   140044b1e:	jne    0x140044b60
   140044b20:	lea    r9,[rbp+0x47]
   140044b24:	mov    r8,rbx
   140044b27:	mov    rdx,r15
   140044b2a:	mov    rcx,r13
   140044b2d:	call   0x14004330c
   140044b32:	mov    cl,BYTE PTR [rbp+0x6f]
   140044b35:	mov    r8,QWORD PTR [rbp+0x57]
   140044b39:	mov    BYTE PTR [rsp+0x40],cl
   140044b3d:	mov    QWORD PTR [rsp+0x38],r15
   140044b42:	mov    QWORD PTR [rsp+0x30],rbx
   140044b47:	or     DWORD PTR [rsp+0x28],0xffffffff
   140044b4c:	and    QWORD PTR [rsp+0x20],0x0
   140044b52:	mov    r9,rax
   140044b55:	mov    rdx,rdi
   140044b58:	mov    rcx,r13
   140044b5b:	call   0x140043890
   140044b60:	call   0x140037c34
   140044b65:	cmp    QWORD PTR [rax+0x108],0x0
   140044b6d:	je     0x140044b74
   140044b6f:	call   0x140036b64
   140044b74:	mov    rbx,QWORD PTR [rsp+0xe8]
   140044b7c:	add    rsp,0x90
   140044b83:	pop    r15
   140044b85:	pop    r14
   140044b87:	pop    r13
   140044b89:	pop    r12
   140044b8b:	pop    rdi
   140044b8c:	pop    rsi
   140044b8d:	pop    rbp
   140044b8e:	ret    
   140044b8f:	cmp    DWORD PTR [rbx+0xc],0x0
   140044b93:	jbe    0x140044b60
   140044b95:	cmp    BYTE PTR [rbp+0x6f],0x0
   140044b99:	jne    0x140044bc7
   140044b9b:	mov    rax,QWORD PTR [rbp+0x7f]
   140044b9f:	mov    r9,r15
   140044ba2:	mov    r8,r12
   140044ba5:	mov    QWORD PTR [rsp+0x38],rax
   140044baa:	mov    eax,DWORD PTR [rbp+0x77]
   140044bad:	mov    rdx,r13
   140044bb0:	mov    DWORD PTR [rsp+0x30],eax
   140044bb4:	mov    rcx,rdi
   140044bb7:	mov    DWORD PTR [rsp+0x28],esi
   140044bbb:	mov    QWORD PTR [rsp+0x20],rbx
   140044bc0:	call   0x1400444c8
   140044bc5:	jmp    0x140044b60
   140044bc7:	call   0x140036b40
   140044bcc:	int3   
   140044bcd:	int3   
   140044bce:	int3   
   140044bcf:	int3   
   140044bd0:	rex push rbx
   140044bd2:	sub    rsp,0x20
   140044bd6:	mov    rbx,rcx
   140044bd9:	call   0x140033094
   140044bde:	lea    r11,[rip+0x26693]        # 0x14006b278
   140044be5:	mov    QWORD PTR [rbx],r11
   140044be8:	mov    rax,rbx
   140044beb:	add    rsp,0x20
   140044bef:	pop    rbx
   140044bf0:	ret    
   140044bf1:	int3   
   140044bf2:	int3   
   140044bf3:	int3   
   140044bf4:	mov    QWORD PTR [rsp+0x8],rbx
   140044bf9:	mov    QWORD PTR [rsp+0x10],rbp
   140044bfe:	mov    QWORD PTR [rsp+0x18],rsi
   140044c03:	push   rdi
   140044c04:	push   r12
   140044c06:	push   r14
   140044c08:	sub    rsp,0x40
   140044c0c:	mov    rbp,r9
   140044c0f:	mov    r12,r8
   140044c12:	mov    rsi,rdx
   140044c15:	mov    rbx,rcx
   140044c18:	call   0x140037c34
   140044c1d:	mov    rdi,QWORD PTR [rsp+0x80]
   140044c25:	cmp    DWORD PTR [rax+0x2c0],0x0
   140044c2c:	mov    edx,0x1fffffff
   140044c31:	mov    r8d,0x80000029
   140044c37:	mov    r9d,0x80000026
   140044c3d:	mov    r14d,0x1
   140044c43:	jne    0x140044c7d
   140044c45:	cmp    DWORD PTR [rbx],0xe06d7363
   140044c4b:	je     0x140044c7d
   140044c4d:	cmp    DWORD PTR [rbx],r8d
   140044c50:	jne    0x140044c62
   140044c52:	cmp    DWORD PTR [rbx+0x18],0xf
   140044c56:	jne    0x140044c62
   140044c58:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140044c60:	je     0x140044c7d
   140044c62:	cmp    DWORD PTR [rbx],r9d
   140044c65:	je     0x140044c7d
   140044c67:	mov    ecx,DWORD PTR [rdi]
   140044c69:	and    ecx,edx
   140044c6b:	cmp    ecx,0x19930522
   140044c71:	jb     0x140044c7d
   140044c73:	test   BYTE PTR [rdi+0x24],r14b
   140044c77:	jne    0x140044dfd
   140044c7d:	mov    eax,DWORD PTR [rbx+0x4]
   140044c80:	test   al,0x66
   140044c82:	je     0x140044d1b
   140044c88:	cmp    DWORD PTR [rdi+0x4],0x0
   140044c8c:	je     0x140044dfd
   140044c92:	cmp    DWORD PTR [rsp+0x88],0x0
   140044c9a:	jne    0x140044dfd
   140044ca0:	and    eax,0x20
   140044ca3:	je     0x140044ce4
   140044ca5:	cmp    DWORD PTR [rbx],r9d
   140044ca8:	jne    0x140044ce4
   140044caa:	mov    r8,QWORD PTR [r12+0xf8]
   140044cb2:	mov    rdx,rbp
   140044cb5:	mov    rcx,rdi
   140044cb8:	call   0x140043980
   140044cbd:	mov    ebx,eax
   140044cbf:	cmp    eax,0xffffffff
   140044cc2:	jl     0x140044cc9
   140044cc4:	cmp    eax,DWORD PTR [rdi+0x4]
   140044cc7:	jl     0x140044cce
   140044cc9:	call   0x140036b64
   140044cce:	mov    r9d,ebx
   140044cd1:	mov    rcx,rsi
   140044cd4:	mov    rdx,rbp
   140044cd7:	mov    r8,rdi
   140044cda:	call   0x140043c74
   140044cdf:	jmp    0x140044dfd
   140044ce4:	test   eax,eax
   140044ce6:	je     0x140044d08
   140044ce8:	cmp    DWORD PTR [rbx],r8d
   140044ceb:	jne    0x140044d08
   140044ced:	mov    esi,DWORD PTR [rbx+0x38]
   140044cf0:	cmp    esi,0xffffffff
   140044cf3:	jl     0x140044cfa
   140044cf5:	cmp    esi,DWORD PTR [rdi+0x4]
   140044cf8:	jl     0x140044cff
   140044cfa:	call   0x140036b64
   140044cff:	mov    rcx,QWORD PTR [rbx+0x28]
   140044d03:	mov    r9d,esi
   140044d06:	jmp    0x140044cd4
   140044d08:	mov    r8,rdi
   140044d0b:	mov    rdx,rbp
   140044d0e:	mov    rcx,rsi
   140044d11:	call   0x140043460
   140044d16:	jmp    0x140044dfd
   140044d1b:	cmp    DWORD PTR [rdi+0xc],0x0
   140044d1f:	jne    0x140044d4f
   140044d21:	mov    eax,DWORD PTR [rdi]
   140044d23:	and    eax,edx
   140044d25:	cmp    eax,0x19930521
   140044d2a:	jb     0x140044dfd
   140044d30:	cmp    DWORD PTR [rdi+0x20],0x0
   140044d34:	je     0x140044d44
   140044d36:	call   0x1400433f8
   140044d3b:	movsxd rcx,DWORD PTR [rdi+0x20]
   140044d3f:	add    rax,rcx
   140044d42:	jmp    0x140044d46
   140044d44:	xor    eax,eax
   140044d46:	test   rax,rax
   140044d49:	je     0x140044dfd
   140044d4f:	cmp    DWORD PTR [rbx],0xe06d7363
   140044d55:	jne    0x140044dc4
   140044d57:	cmp    DWORD PTR [rbx+0x18],0x3
   140044d5b:	jb     0x140044dc4
   140044d5d:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140044d64:	jbe    0x140044dc4
   140044d66:	mov    rax,QWORD PTR [rbx+0x30]
   140044d6a:	cmp    DWORD PTR [rax+0x8],0x0
   140044d6e:	je     0x140044d82
   140044d70:	call   0x140043410
   140044d75:	mov    rcx,QWORD PTR [rbx+0x30]
   140044d79:	movsxd r11,DWORD PTR [rcx+0x8]
   140044d7d:	add    r11,rax
   140044d80:	jmp    0x140044d85
   140044d82:	xor    r11d,r11d
   140044d85:	test   r11,r11
   140044d88:	je     0x140044dc4
   140044d8a:	movzx  eax,BYTE PTR [rsp+0x98]
   140044d92:	mov    r9,rbp
   140044d95:	mov    r8,r12
   140044d98:	mov    DWORD PTR [rsp+0x38],eax
   140044d9c:	mov    rax,QWORD PTR [rsp+0x90]
   140044da4:	mov    rdx,rsi
   140044da7:	mov    QWORD PTR [rsp+0x30],rax
   140044dac:	mov    eax,DWORD PTR [rsp+0x88]
   140044db3:	mov    rcx,rbx
   140044db6:	mov    DWORD PTR [rsp+0x28],eax
   140044dba:	mov    QWORD PTR [rsp+0x20],rdi
   140044dbf:	call   r11
   140044dc2:	jmp    0x140044e00
   140044dc4:	mov    rax,QWORD PTR [rsp+0x90]
   140044dcc:	mov    r9,rbp
   140044dcf:	mov    r8,r12
   140044dd2:	mov    QWORD PTR [rsp+0x38],rax
   140044dd7:	mov    eax,DWORD PTR [rsp+0x88]
   140044dde:	mov    rdx,rsi
   140044de1:	mov    DWORD PTR [rsp+0x30],eax
   140044de5:	mov    al,BYTE PTR [rsp+0x98]
   140044dec:	mov    rcx,rbx
   140044def:	mov    BYTE PTR [rsp+0x28],al
   140044df3:	mov    QWORD PTR [rsp+0x20],rdi
   140044df8:	call   0x140044700
   140044dfd:	mov    eax,r14d
   140044e00:	mov    rbx,QWORD PTR [rsp+0x60]
   140044e05:	mov    rbp,QWORD PTR [rsp+0x68]
   140044e0a:	mov    rsi,QWORD PTR [rsp+0x70]
   140044e0f:	add    rsp,0x40
   140044e13:	pop    r14
   140044e15:	pop    r12
   140044e17:	pop    rdi
   140044e18:	ret    
   140044e19:	int3   
   140044e1a:	int3   
   140044e1b:	int3   
   140044e1c:	int3   
   140044e1d:	int3   
   140044e1e:	int3   
   140044e1f:	int3   
   140044e20:	int3   
   140044e21:	int3   
   140044e22:	int3   
   140044e23:	int3   
   140044e24:	int3   
   140044e25:	int3   
   140044e26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140044e30:	sub    rsp,0x28
   140044e34:	mov    QWORD PTR [rsp+0x30],rcx
   140044e39:	mov    QWORD PTR [rsp+0x38],rdx
   140044e3e:	mov    DWORD PTR [rsp+0x40],r8d
   140044e43:	mov    rdx,QWORD PTR [rdx]
   140044e46:	mov    rax,rcx
   140044e49:	call   0x14003ba30
   140044e4e:	call   rax
   140044e50:	call   0x14003ba60
   140044e55:	mov    rcx,rax
   140044e58:	mov    rdx,QWORD PTR [rsp+0x38]
   140044e5d:	mov    rdx,QWORD PTR [rdx]
   140044e60:	mov    r8d,0x2
   140044e66:	call   0x14003ba30
   140044e6b:	add    rsp,0x28
   140044e6f:	ret    
   140044e70:	mov    rax,QWORD PTR [rsp]
   140044e74:	mov    QWORD PTR [rcx],rax
   140044e77:	ret    
   140044e78:	neg    rcx
   140044e7b:	sbb    eax,eax
   140044e7d:	and    eax,0x1
   140044e80:	ret    
   140044e81:	int3   
   140044e82:	int3   
   140044e83:	int3   
   140044e84:	int3   
   140044e85:	int3   
   140044e86:	int3   
   140044e87:	int3   
   140044e88:	int3   
   140044e89:	int3   
   140044e8a:	int3   
   140044e8b:	int3   
   140044e8c:	int3   
   140044e8d:	int3   
   140044e8e:	int3   
   140044e8f:	int3   
   140044e90:	mov    rax,rsp
   140044e93:	mov    QWORD PTR [rax+0x8],rbx
   140044e97:	mov    QWORD PTR [rax+0x10],rbp
   140044e9b:	mov    QWORD PTR [rax+0x18],rsi
   140044e9f:	mov    QWORD PTR [rax+0x20],rdi
   140044ea3:	push   r12
   140044ea5:	sub    rsp,0x20
   140044ea9:	mov    rbx,QWORD PTR [r9+0x38]
   140044ead:	mov    rsi,rdx
   140044eb0:	mov    r12,r8
   140044eb3:	mov    rbp,rcx
   140044eb6:	lea    r8,[rbx+0x4]
   140044eba:	mov    rdx,r9
   140044ebd:	mov    rcx,rsi
   140044ec0:	mov    rdi,r9
   140044ec3:	call   0x14003c910
   140044ec8:	mov    r11d,DWORD PTR [rbx+0x4]
   140044ecc:	mov    r10d,DWORD PTR [rbp+0x4]
   140044ed0:	mov    eax,r11d
   140044ed3:	and    r11d,0x2
   140044ed7:	mov    r8d,0x1
   140044edd:	and    eax,r8d
   140044ee0:	and    r10b,0x66
   140044ee4:	cmove  r11d,eax
   140044ee8:	test   r11d,r11d
   140044eeb:	je     0x140044f01
   140044eed:	mov    r9,rdi
   140044ef0:	mov    r8,r12
   140044ef3:	mov    rdx,rsi
   140044ef6:	mov    rcx,rbp
   140044ef9:	call   0x14004350c
   140044efe:	mov    r8d,eax
   140044f01:	mov    rbx,QWORD PTR [rsp+0x30]
   140044f06:	mov    rbp,QWORD PTR [rsp+0x38]
   140044f0b:	mov    rsi,QWORD PTR [rsp+0x40]
   140044f10:	mov    rdi,QWORD PTR [rsp+0x48]
   140044f15:	mov    eax,r8d
   140044f18:	add    rsp,0x20
   140044f1c:	pop    r12
   140044f1e:	ret    
   140044f1f:	int3   
   140044f20:	mov    QWORD PTR [rsp+0x8],rbx
   140044f25:	mov    QWORD PTR [rsp+0x10],rsi
   140044f2a:	push   rdi
   140044f2b:	sub    rsp,0x20
   140044f2f:	mov    ebx,ecx
   140044f31:	mov    rsi,rdx
   140044f34:	mov    edi,ecx
   140044f36:	and    ebx,0x1f
   140044f39:	test   cl,0x8
   140044f3c:	je     0x140044f51
   140044f3e:	test   dl,dl
   140044f40:	jns    0x140044f51
   140044f42:	mov    ecx,0x1
   140044f47:	call   0x1400457ac
   140044f4c:	and    ebx,0xfffffff7
   140044f4f:	jmp    0x140044fa8
   140044f51:	mov    ecx,0x4
   140044f56:	test   cl,dil
   140044f59:	je     0x140044f6c
   140044f5b:	bt     rdx,0x9
   140044f60:	jae    0x140044f6c
   140044f62:	call   0x1400457ac
   140044f67:	and    ebx,0xfffffffb
   140044f6a:	jmp    0x140044fa8
   140044f6c:	test   dil,0x1
   140044f70:	je     0x140044f88
   140044f72:	bt     rdx,0xa
   140044f77:	jae    0x140044f88
   140044f79:	mov    ecx,0x8
   140044f7e:	call   0x1400457ac
   140044f83:	and    ebx,0xfffffffe
   140044f86:	jmp    0x140044fa8
   140044f88:	test   dil,0x2
   140044f8c:	je     0x140044fa8
   140044f8e:	bt     rdx,0xb
   140044f93:	jae    0x140044fa8
   140044f95:	test   dil,0x10
   140044f99:	je     0x140044fa5
   140044f9b:	mov    ecx,0x10
   140044fa0:	call   0x1400457ac
   140044fa5:	and    ebx,0xfffffffd
   140044fa8:	test   dil,0x10
   140044fac:	je     0x140044fc2
   140044fae:	bt     rsi,0xc
   140044fb3:	jae    0x140044fc2
   140044fb5:	mov    ecx,0x20
   140044fba:	call   0x1400457ac
   140044fbf:	and    ebx,0xffffffef
   140044fc2:	mov    rsi,QWORD PTR [rsp+0x38]
   140044fc7:	xor    eax,eax
   140044fc9:	test   ebx,ebx
   140044fcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140044fd0:	sete   al
   140044fd3:	add    rsp,0x20
   140044fd7:	pop    rdi
   140044fd8:	ret    
   140044fd9:	int3   
   140044fda:	int3   
   140044fdb:	int3   
   140044fdc:	mov    rax,rsp
   140044fdf:	push   rbp
   140044fe0:	push   rbx
   140044fe1:	push   rsi
   140044fe2:	push   rdi
   140044fe3:	push   r12
   140044fe5:	push   r13
   140044fe7:	lea    rbp,[rax-0x38]
   140044feb:	sub    rsp,0x108
   140044ff2:	movaps XMMWORD PTR [rax-0x48],xmm6
   140044ff6:	mov    rax,QWORD PTR [rip+0x400ab]        # 0x1400850a8
   140044ffd:	xor    rax,rsp
   140045000:	mov    QWORD PTR [rbp-0x20],rax
   140045004:	mov    esi,edx
   140045006:	mov    r12,rcx
   140045009:	mov    r13d,0xffc0
   14004500f:	mov    ecx,0x1f80
   140045014:	mov    edx,r13d
   140045017:	mov    edi,r9d
   14004501a:	mov    rbx,r8
   14004501d:	call   0x140045730
   140045022:	mov    ecx,DWORD PTR [rbp+0x60]
   140045025:	mov    QWORD PTR [rsp+0x38],rax
   14004502a:	mov    DWORD PTR [rsp+0x40],ebx
   14004502e:	movss  xmm0,DWORD PTR [rsp+0x40]
   140045034:	mov    rdx,QWORD PTR [rsp+0x38]
   140045039:	movss  DWORD PTR [rsp+0x30],xmm0
   14004503f:	call   0x140044f20
   140045044:	movss  xmm6,DWORD PTR [rbp+0x78]
   140045049:	test   eax,eax
   14004504b:	jne    0x140045090
   14004504d:	cmp    DWORD PTR [rbp+0x80],0x2
   140045054:	jne    0x140045067
   140045056:	mov    eax,DWORD PTR [rbp-0x50]
   140045059:	movss  DWORD PTR [rbp-0x60],xmm6
   14004505e:	and    eax,0xffffffe1
   140045061:	or     eax,0x1
   140045064:	mov    DWORD PTR [rbp-0x50],eax
   140045067:	mov    r8d,DWORD PTR [rbp+0x60]
   14004506b:	lea    rax,[rsp+0x30]
   140045070:	lea    rdx,[rsp+0x38]
   140045075:	mov    QWORD PTR [rsp+0x28],rax
   14004507a:	lea    rax,[rbp+0x70]
   14004507e:	lea    rcx,[rsp+0x70]
   140045083:	mov    r9d,esi
   140045086:	mov    QWORD PTR [rsp+0x20],rax
   14004508b:	call   0x14004569c
   140045090:	cmp    DWORD PTR [rip+0x44039],0x0        # 0x1400890d0
   140045097:	jne    0x1400450f9
   140045099:	test   edi,edi
   14004509b:	je     0x1400450f9
   14004509d:	movd   xmm0,DWORD PTR [rbp+0x70]
   1400450a2:	mov    rcx,QWORD PTR [rsp+0x38]
   1400450a7:	unpcklps xmm6,xmm6
   1400450aa:	mov    rdx,r13
   1400450ad:	mov    DWORD PTR [rsp+0x48],edi
   1400450b1:	mov    QWORD PTR [rsp+0x50],r12
   1400450b6:	cvtps2pd xmm1,xmm6
   1400450b9:	cvtps2pd xmm0,xmm0
   1400450bc:	movsd  QWORD PTR [rsp+0x60],xmm1
   1400450c2:	movsd  QWORD PTR [rsp+0x58],xmm0
   1400450c8:	movd   xmm0,DWORD PTR [rsp+0x30]
   1400450ce:	cvtps2pd xmm0,xmm0
   1400450d1:	movsd  QWORD PTR [rsp+0x68],xmm0
   1400450d7:	call   0x140045730
   1400450dc:	lea    rcx,[rsp+0x48]
   1400450e1:	call   0x1400456f8
   1400450e6:	test   eax,eax
   1400450e8:	jne    0x1400450f1
   1400450ea:	mov    ecx,edi
   1400450ec:	call   0x1400456c8
   1400450f1:	cvtsd2ss xmm0,QWORD PTR [rsp+0x68]
   1400450f7:	jmp    0x140045113
   1400450f9:	mov    ecx,edi
   1400450fb:	call   0x1400456c8
   140045100:	mov    rcx,QWORD PTR [rsp+0x38]
   140045105:	mov    rdx,r13
   140045108:	call   0x140045730
   14004510d:	movss  xmm0,DWORD PTR [rsp+0x30]
   140045113:	mov    rcx,QWORD PTR [rbp-0x20]
   140045117:	xor    rcx,rsp
   14004511a:	call   0x140032f00
   14004511f:	movaps xmm6,XMMWORD PTR [rsp+0xf0]
   140045127:	add    rsp,0x108
   14004512e:	pop    r13
   140045130:	pop    r12
   140045132:	pop    rdi
   140045133:	pop    rsi
   140045134:	pop    rbx
   140045135:	pop    rbp
   140045136:	ret    
   140045137:	int3   
   140045138:	sub    rsp,0x78
   14004513c:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140045141:	mov    eax,0x2
   140045146:	movaps xmm6,xmm2
   140045149:	cmp    r9d,0x1
   14004514d:	je     0x14004520e
   140045153:	cmp    r9d,eax
   140045156:	je     0x1400451e9
   14004515c:	jbe    0x140045250
   140045162:	cmp    r9d,0x6
   140045166:	jbe    0x1400451c9
   140045168:	cmp    r9d,0x7
   14004516c:	je     0x1400451a1
   14004516e:	cmp    r9d,0x9
   140045172:	jne    0x140045250
   140045178:	mov    DWORD PTR [rsp+0x40],eax
   14004517c:	movss  DWORD PTR [rsp+0x38],xmm1
   140045182:	movss  DWORD PTR [rsp+0x30],xmm0
   140045188:	mov    DWORD PTR [rsp+0x28],0x22
   140045190:	lea    r9d,[rax+0x1]
   140045194:	mov    DWORD PTR [rsp+0x20],0x11
   14004519c:	jmp    0x14004522e
   1400451a1:	mov    DWORD PTR [rsp+0x40],eax
   1400451a5:	movss  DWORD PTR [rsp+0x38],xmm1
   1400451ab:	movss  DWORD PTR [rsp+0x30],xmm0
   1400451b1:	mov    DWORD PTR [rsp+0x28],0x22
   1400451b9:	mov    r9d,0x4
   1400451bf:	mov    DWORD PTR [rsp+0x20],0x12
   1400451c7:	jmp    0x14004522e
   1400451c9:	mov    DWORD PTR [rsp+0x40],eax
   1400451cd:	movss  DWORD PTR [rsp+0x38],xmm1
   1400451d3:	movss  DWORD PTR [rsp+0x30],xmm0
   1400451d9:	mov    DWORD PTR [rsp+0x28],0x21
   1400451e1:	mov    r9d,0x1
   1400451e7:	jmp    0x140045226
   1400451e9:	mov    DWORD PTR [rsp+0x40],eax
   1400451ed:	movss  DWORD PTR [rsp+0x38],xmm1
   1400451f3:	movss  DWORD PTR [rsp+0x30],xmm0
   1400451f9:	mov    DWORD PTR [rsp+0x28],0x22
   140045201:	mov    r9d,eax
   140045204:	mov    DWORD PTR [rsp+0x20],0x4
   14004520c:	jmp    0x14004522e
   14004520e:	mov    DWORD PTR [rsp+0x40],eax
   140045212:	movss  DWORD PTR [rsp+0x38],xmm1
   140045218:	movss  DWORD PTR [rsp+0x30],xmm0
   14004521e:	and    DWORD PTR [rsp+0x28],0x0
   140045223:	xor    r9d,r9d
   140045226:	mov    DWORD PTR [rsp+0x20],0x8
   14004522e:	and    QWORD PTR [rsp+0x50],0x0
   140045234:	movss  DWORD PTR [rsp+0x50],xmm6
   14004523a:	lea    rcx,[rip+0x34027]        # 0x140079268
   140045241:	mov    r8,QWORD PTR [rsp+0x50]
   140045246:	mov    edx,0x1d
   14004524b:	call   0x140044fdc
   140045250:	movaps xmm0,xmm6
   140045253:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140045258:	add    rsp,0x78
   14004525c:	ret    
   14004525d:	int3   
   14004525e:	int3   
   14004525f:	int3   
   140045260:	sub    rsp,0x78
   140045264:	dec    r8d
   140045267:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14004526c:	mov    edx,r9d
   14004526f:	movaps xmm6,xmm1
   140045272:	movaps xmm2,xmm0
   140045275:	je     0x140045318
   14004527b:	dec    r8d
   14004527e:	je     0x1400452eb
   140045280:	dec    r8d
   140045283:	jne    0x140045362
   140045289:	and    QWORD PTR [rsp+0x50],0x0
   14004528f:	xorps  xmm0,xmm0
   140045292:	mov    rcx,QWORD PTR [rsp+0xa0]
   14004529a:	lea    eax,[r8+0x1]
   14004529e:	movss  DWORD PTR [rsp+0x88],xmm2
   1400452a7:	test   DWORD PTR [rsp+0x88],0x400000
   1400452b2:	movss  DWORD PTR [rsp+0x50],xmm6
   1400452b8:	mov    r8,QWORD PTR [rsp+0x50]
   1400452bd:	mov    DWORD PTR [rsp+0x40],eax
   1400452c1:	mov    r9d,eax
   1400452c4:	movss  DWORD PTR [rsp+0x38],xmm0
   1400452ca:	movss  DWORD PTR [rsp+0x30],xmm2
   1400452d0:	mov    DWORD PTR [rsp+0x28],0x21
   1400452d8:	jne    0x1400452e4
   1400452da:	mov    DWORD PTR [rsp+0x20],0x8
   1400452e2:	jmp    0x14004535d
   1400452e4:	and    DWORD PTR [rsp+0x20],0x0
   1400452e9:	jmp    0x14004535d
   1400452eb:	xorps  xmm0,xmm0
   1400452ee:	mov    eax,0x1
   1400452f3:	mov    DWORD PTR [rsp+0x40],eax
   1400452f7:	movss  DWORD PTR [rsp+0x38],xmm0
   1400452fd:	movss  DWORD PTR [rsp+0x30],xmm2
   140045303:	mov    DWORD PTR [rsp+0x28],0x21
   14004530b:	mov    DWORD PTR [rsp+0x20],0x8
   140045313:	mov    r9d,eax
   140045316:	jmp    0x140045344
   140045318:	xorps  xmm0,xmm0
   14004531b:	mov    eax,0x1
   140045320:	mov    DWORD PTR [rsp+0x40],eax
   140045324:	movss  DWORD PTR [rsp+0x38],xmm0
   14004532a:	movss  DWORD PTR [rsp+0x30],xmm2
   140045330:	mov    DWORD PTR [rsp+0x28],0x22
   140045338:	mov    DWORD PTR [rsp+0x20],0x4
   140045340:	lea    r9d,[rax+0x1]
   140045344:	and    QWORD PTR [rsp+0x50],0x0
   14004534a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140045352:	movss  DWORD PTR [rsp+0x50],xmm6
   140045358:	mov    r8,QWORD PTR [rsp+0x50]
   14004535d:	call   0x140044fdc
   140045362:	movaps xmm0,xmm6
   140045365:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14004536a:	add    rsp,0x78
   14004536e:	ret    
   14004536f:	int3   
   140045370:	sub    rsp,0x38
   140045374:	lea    rax,[rip+0x33ef9]        # 0x140079274
   14004537b:	mov    r9d,0x1b
   140045381:	mov    QWORD PTR [rsp+0x20],rax
   140045386:	call   0x140045260
   14004538b:	add    rsp,0x38
   14004538f:	ret    
   140045390:	mov    rax,rsp
   140045393:	mov    QWORD PTR [rax+0x10],rbx
   140045397:	mov    QWORD PTR [rax+0x18],rsi
   14004539b:	mov    QWORD PTR [rax+0x20],rdi
   14004539f:	mov    QWORD PTR [rax+0x8],rcx
   1400453a3:	push   rbp
   1400453a4:	mov    rbp,rsp
   1400453a7:	sub    rsp,0x20
   1400453ab:	mov    rbx,rdx
   1400453ae:	xor    edx,edx
   1400453b0:	mov    esi,r9d
   1400453b3:	mov    DWORD PTR [rcx+0x4],edx
   1400453b6:	mov    rax,QWORD PTR [rbp+0x10]
   1400453ba:	mov    DWORD PTR [rax+0x8],edx
   1400453bd:	mov    rax,QWORD PTR [rbp+0x10]
   1400453c1:	mov    DWORD PTR [rax+0xc],edx
   1400453c4:	test   r8b,0x10
   1400453c8:	je     0x1400453d9
   1400453ca:	mov    rax,QWORD PTR [rbp+0x10]
   1400453ce:	mov    edi,0xc000008f
   1400453d3:	or     DWORD PTR [rax+0x4],0x1
   1400453d7:	jmp    0x1400453dc
   1400453d9:	mov    edi,DWORD PTR [rbp+0x40]
   1400453dc:	test   r8b,0x2
   1400453e0:	je     0x1400453ef
   1400453e2:	mov    rax,QWORD PTR [rbp+0x10]
   1400453e6:	mov    edi,0xc0000093
   1400453eb:	or     DWORD PTR [rax+0x4],0x2
   1400453ef:	test   r8b,0x1
   1400453f3:	je     0x140045402
   1400453f5:	mov    rax,QWORD PTR [rbp+0x10]
   1400453f9:	mov    edi,0xc0000091
   1400453fe:	or     DWORD PTR [rax+0x4],0x4
   140045402:	test   r8b,0x4
   140045406:	je     0x140045415
   140045408:	mov    rax,QWORD PTR [rbp+0x10]
   14004540c:	mov    edi,0xc000008e
   140045411:	or     DWORD PTR [rax+0x4],0x8
   140045415:	test   r8b,0x8
   140045419:	je     0x140045428
   14004541b:	mov    rax,QWORD PTR [rbp+0x10]
   14004541f:	mov    edi,0xc0000090
   140045424:	or     DWORD PTR [rax+0x4],0x10
   140045428:	mov    rcx,QWORD PTR [rbp+0x10]
   14004542c:	mov    rax,QWORD PTR [rbx]
   14004542f:	shr    rax,0x7
   140045433:	shl    eax,0x4
   140045436:	not    eax
   140045438:	xor    eax,DWORD PTR [rcx+0x8]
   14004543b:	and    eax,0x10
   14004543e:	xor    DWORD PTR [rcx+0x8],eax
   140045441:	mov    rcx,QWORD PTR [rbp+0x10]
   140045445:	mov    rax,QWORD PTR [rbx]
   140045448:	shr    rax,0x9
   14004544c:	shl    eax,0x3
   14004544f:	not    eax
   140045451:	xor    eax,DWORD PTR [rcx+0x8]
   140045454:	and    eax,0x8
   140045457:	xor    DWORD PTR [rcx+0x8],eax
   14004545a:	mov    rcx,QWORD PTR [rbp+0x10]
   14004545e:	mov    rax,QWORD PTR [rbx]
   140045461:	shr    rax,0xa
   140045465:	shl    eax,0x2
   140045468:	not    eax
   14004546a:	xor    eax,DWORD PTR [rcx+0x8]
   14004546d:	and    eax,0x4
   140045470:	xor    DWORD PTR [rcx+0x8],eax
   140045473:	mov    rcx,QWORD PTR [rbp+0x10]
   140045477:	mov    rax,QWORD PTR [rbx]
   14004547a:	shr    rax,0xb
   14004547e:	add    eax,eax
   140045480:	not    eax
   140045482:	xor    eax,DWORD PTR [rcx+0x8]
   140045485:	and    eax,0x2
   140045488:	xor    DWORD PTR [rcx+0x8],eax
   14004548b:	mov    eax,DWORD PTR [rbx]
   14004548d:	mov    rcx,QWORD PTR [rbp+0x10]
   140045491:	shr    rax,0xc
   140045495:	not    eax
   140045497:	xor    eax,DWORD PTR [rcx+0x8]
   14004549a:	and    eax,0x1
   14004549d:	xor    DWORD PTR [rcx+0x8],eax
   1400454a0:	call   0x1400456fc
   1400454a5:	mov    r11,rax
   1400454a8:	test   al,0x1
   1400454aa:	je     0x1400454b4
   1400454ac:	mov    rcx,QWORD PTR [rbp+0x10]
   1400454b0:	or     DWORD PTR [rcx+0xc],0x10
   1400454b4:	test   al,0x4
   1400454b6:	je     0x1400454c0
   1400454b8:	mov    rcx,QWORD PTR [rbp+0x10]
   1400454bc:	or     DWORD PTR [rcx+0xc],0x8
   1400454c0:	test   al,0x8
   1400454c2:	je     0x1400454cc
   1400454c4:	mov    rax,QWORD PTR [rbp+0x10]
   1400454c8:	or     DWORD PTR [rax+0xc],0x4
   1400454cc:	test   r11b,0x10
   1400454d0:	je     0x1400454da
   1400454d2:	mov    rax,QWORD PTR [rbp+0x10]
   1400454d6:	or     DWORD PTR [rax+0xc],0x2
   1400454da:	test   r11b,0x20
   1400454de:	je     0x1400454e8
   1400454e0:	mov    rax,QWORD PTR [rbp+0x10]
   1400454e4:	or     DWORD PTR [rax+0xc],0x1
   1400454e8:	mov    eax,DWORD PTR [rbx]
   1400454ea:	mov    ecx,0x6000
   1400454ef:	and    rax,rcx
   1400454f2:	je     0x140045532
   1400454f4:	cmp    rax,0x2000
   1400454fa:	je     0x140045522
   1400454fc:	cmp    rax,0x4000
   140045502:	je     0x140045512
   140045504:	cmp    rax,rcx
   140045507:	jne    0x140045539
   140045509:	mov    rax,QWORD PTR [rbp+0x10]
   14004550d:	or     DWORD PTR [rax],0x3
   140045510:	jmp    0x140045539
   140045512:	mov    rax,QWORD PTR [rbp+0x10]
   140045516:	and    DWORD PTR [rax],0xfffffffe
   140045519:	mov    rax,QWORD PTR [rbp+0x10]
   14004551d:	or     DWORD PTR [rax],0x2
   140045520:	jmp    0x140045539
   140045522:	mov    rax,QWORD PTR [rbp+0x10]
   140045526:	and    DWORD PTR [rax],0xfffffffd
   140045529:	mov    rax,QWORD PTR [rbp+0x10]
   14004552d:	or     DWORD PTR [rax],0x1
   140045530:	jmp    0x140045539
   140045532:	mov    rax,QWORD PTR [rbp+0x10]
   140045536:	and    DWORD PTR [rax],0xfffffffc
   140045539:	mov    rax,QWORD PTR [rbp+0x10]
   14004553d:	and    esi,0xfff
   140045543:	and    DWORD PTR [rax],0xfffe001f
   140045549:	mov    rax,QWORD PTR [rbp+0x10]
   14004554d:	shl    esi,0x5
   140045550:	or     DWORD PTR [rax],esi
   140045552:	mov    rax,QWORD PTR [rbp+0x10]
   140045556:	mov    rsi,QWORD PTR [rbp+0x38]
   14004555a:	or     DWORD PTR [rax+0x20],0x1
   14004555e:	cmp    DWORD PTR [rbp+0x40],0x0
   140045562:	je     0x140045597
   140045564:	mov    rax,QWORD PTR [rbp+0x10]
   140045568:	mov    edx,0xffffffe1
   14004556d:	and    DWORD PTR [rax+0x20],edx
   140045570:	mov    rax,QWORD PTR [rbp+0x30]
   140045574:	mov    ecx,DWORD PTR [rax]
   140045576:	mov    rax,QWORD PTR [rbp+0x10]
   14004557a:	mov    DWORD PTR [rax+0x10],ecx
   14004557d:	mov    rax,QWORD PTR [rbp+0x10]
   140045581:	or     DWORD PTR [rax+0x60],0x1
   140045585:	mov    rax,QWORD PTR [rbp+0x10]
   140045589:	and    DWORD PTR [rax+0x60],edx
   14004558c:	mov    rax,QWORD PTR [rbp+0x10]
   140045590:	mov    ecx,DWORD PTR [rsi]
   140045592:	mov    DWORD PTR [rax+0x50],ecx
   140045595:	jmp    0x1400455df
   140045597:	mov    rcx,QWORD PTR [rbp+0x10]
   14004559b:	mov    r8d,0xffffffe3
   1400455a1:	mov    eax,DWORD PTR [rcx+0x20]
   1400455a4:	and    eax,r8d
   1400455a7:	or     eax,0x2
   1400455aa:	mov    DWORD PTR [rcx+0x20],eax
   1400455ad:	mov    rax,QWORD PTR [rbp+0x30]
   1400455b1:	mov    rcx,QWORD PTR [rax]
   1400455b4:	mov    rax,QWORD PTR [rbp+0x10]
   1400455b8:	mov    QWORD PTR [rax+0x10],rcx
   1400455bc:	mov    rax,QWORD PTR [rbp+0x10]
   1400455c0:	or     DWORD PTR [rax+0x60],0x1
   1400455c4:	mov    rdx,QWORD PTR [rbp+0x10]
   1400455c8:	mov    eax,DWORD PTR [rdx+0x60]
   1400455cb:	and    eax,r8d
   1400455ce:	or     eax,0x2
   1400455d1:	mov    DWORD PTR [rdx+0x60],eax
   1400455d4:	mov    rax,QWORD PTR [rbp+0x10]
   1400455d8:	mov    rdx,QWORD PTR [rsi]
   1400455db:	mov    QWORD PTR [rax+0x50],rdx
   1400455df:	call   0x140045710
   1400455e4:	xor    edx,edx
   1400455e6:	lea    r9,[rbp+0x10]
   1400455ea:	lea    r8d,[rdx+0x1]
   1400455ee:	mov    ecx,edi
   1400455f0:	call   QWORD PTR [rip+0x22b6a]        # 0x140068160
   1400455f6:	mov    r11,QWORD PTR [rbp+0x10]
   1400455fa:	test   BYTE PTR [r11+0x8],0x10
   1400455ff:	je     0x140045606
   140045601:	btr    QWORD PTR [rbx],0x7
   140045606:	test   BYTE PTR [r11+0x8],0x8
   14004560b:	je     0x140045612
   14004560d:	btr    QWORD PTR [rbx],0x9
   140045612:	test   BYTE PTR [r11+0x8],0x4
   140045617:	je     0x14004561e
   140045619:	btr    QWORD PTR [rbx],0xa
   14004561e:	test   BYTE PTR [r11+0x8],0x2
   140045623:	je     0x14004562a
   140045625:	btr    QWORD PTR [rbx],0xb
   14004562a:	test   BYTE PTR [r11+0x8],0x1
   14004562f:	je     0x140045636
   140045631:	btr    QWORD PTR [rbx],0xc
   140045636:	mov    eax,DWORD PTR [r11]
   140045639:	and    eax,0x3
   14004563c:	je     0x14004566b
   14004563e:	dec    eax
   140045640:	je     0x14004565f
   140045642:	dec    eax
   140045644:	je     0x140045653
   140045646:	dec    eax
   140045648:	jne    0x140045672
   14004564a:	or     QWORD PTR [rbx],0x6000
   140045651:	jmp    0x140045672
   140045653:	btr    QWORD PTR [rbx],0xd
   140045658:	bts    QWORD PTR [rbx],0xe
   14004565d:	jmp    0x140045672
   14004565f:	btr    QWORD PTR [rbx],0xe
   140045664:	bts    QWORD PTR [rbx],0xd
   140045669:	jmp    0x140045672
   14004566b:	and    QWORD PTR [rbx],0xffffffffffff9fff
   140045672:	cmp    DWORD PTR [rbp+0x40],0x0
   140045676:	je     0x140045680
   140045678:	mov    eax,DWORD PTR [r11+0x50]
   14004567c:	mov    DWORD PTR [rsi],eax
   14004567e:	jmp    0x140045687
   140045680:	mov    rax,QWORD PTR [r11+0x50]
   140045684:	mov    QWORD PTR [rsi],rax
   140045687:	mov    rbx,QWORD PTR [rsp+0x38]
   14004568c:	mov    rsi,QWORD PTR [rsp+0x40]
   140045691:	mov    rdi,QWORD PTR [rsp+0x48]
   140045696:	add    rsp,0x20
   14004569a:	pop    rbp
   14004569b:	ret    
   14004569c:	sub    rsp,0x48
   1400456a0:	mov    rax,QWORD PTR [rsp+0x78]
   1400456a5:	mov    DWORD PTR [rsp+0x30],0x1
   1400456ad:	mov    QWORD PTR [rsp+0x28],rax
   1400456b2:	mov    rax,QWORD PTR [rsp+0x70]
   1400456b7:	mov    QWORD PTR [rsp+0x20],rax
   1400456bc:	call   0x140045390
   1400456c1:	add    rsp,0x48
   1400456c5:	ret    
   1400456c6:	int3   
   1400456c7:	int3   
   1400456c8:	sub    rsp,0x28
   1400456cc:	cmp    ecx,0x1
   1400456cf:	je     0x1400456e5
   1400456d1:	jle    0x1400456f0
   1400456d3:	cmp    ecx,0x3
   1400456d6:	jg     0x1400456f0
   1400456d8:	call   0x140036858
   1400456dd:	mov    DWORD PTR [rax],0x22
   1400456e3:	jmp    0x1400456f0
   1400456e5:	call   0x140036858
   1400456ea:	mov    DWORD PTR [rax],0x21
   1400456f0:	add    rsp,0x28
   1400456f4:	ret    
   1400456f5:	int3   
   1400456f6:	int3   
   1400456f7:	int3   
   1400456f8:	xor    eax,eax
   1400456fa:	ret    
   1400456fb:	int3   
   1400456fc:	sub    rsp,0x28
   140045700:	call   0x1400457e0
   140045705:	and    eax,0x3f
   140045708:	add    rsp,0x28
   14004570c:	ret    
   14004570d:	int3   
   14004570e:	int3   
   14004570f:	int3   
   140045710:	rex push rbx
   140045712:	sub    rsp,0x20
   140045716:	call   0x1400457e0
   14004571b:	mov    ebx,eax
   14004571d:	and    ebx,0x3f
   140045720:	call   0x1400457fa
   140045725:	mov    eax,ebx
   140045727:	add    rsp,0x20
   14004572b:	pop    rbx
   14004572c:	ret    
   14004572d:	int3   
   14004572e:	int3   
   14004572f:	int3   
   140045730:	mov    QWORD PTR [rsp+0x18],rbx
   140045735:	mov    QWORD PTR [rsp+0x20],rsi
   14004573a:	push   rdi
   14004573b:	sub    rsp,0x20
   14004573f:	mov    rbx,rdx
   140045742:	mov    rdi,rcx
   140045745:	call   0x1400457e0
   14004574a:	mov    esi,eax
   14004574c:	mov    DWORD PTR [rsp+0x38],eax
   140045750:	mov    ecx,ebx
   140045752:	not    ecx
   140045754:	or     ecx,0xffff807f
   14004575a:	and    ecx,eax
   14004575c:	and    edi,ebx
   14004575e:	or     ecx,edi
   140045760:	mov    DWORD PTR [rsp+0x30],ecx
   140045764:	cmp    BYTE PTR [rip+0x43969],0x0        # 0x1400890d4
   14004576b:	je     0x140045792
   14004576d:	test   cl,0x40
   140045770:	je     0x140045792
   140045772:	call   0x1400457f0
   140045777:	jmp    0x140045790
   140045779:	mov    BYTE PTR [rip+0x43954],0x0        # 0x1400890d4
   140045780:	mov    ecx,DWORD PTR [rsp+0x30]
   140045784:	and    ecx,0xffffffbf
   140045787:	call   0x1400457f0
   14004578c:	mov    esi,DWORD PTR [rsp+0x38]
   140045790:	jmp    0x14004579a
   140045792:	and    ecx,0xffffffbf
   140045795:	call   0x1400457f0
   14004579a:	mov    eax,esi
   14004579c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400457a1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400457a6:	add    rsp,0x20
   1400457aa:	pop    rdi
   1400457ab:	ret    
   1400457ac:	rex push rbx
   1400457ae:	sub    rsp,0x20
   1400457b2:	mov    rbx,rcx
   1400457b5:	call   0x1400457e0
   1400457ba:	and    ebx,0x3f
   1400457bd:	or     eax,ebx
   1400457bf:	mov    ecx,eax
   1400457c1:	add    rsp,0x20
   1400457c5:	pop    rbx
   1400457c6:	jmp    0x1400457f0
   1400457cb:	int3   
   1400457cc:	int3   
   1400457cd:	int3   
   1400457ce:	int3   
   1400457cf:	int3   
   1400457d0:	int3   
   1400457d1:	int3   
   1400457d2:	int3   
   1400457d3:	int3   
   1400457d4:	int3   
   1400457d5:	int3   
   1400457d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400457e0:	sub    rsp,0x8
   1400457e4:	stmxcsr DWORD PTR [rsp]
   1400457e8:	mov    eax,DWORD PTR [rsp]
   1400457eb:	add    rsp,0x8
   1400457ef:	ret    
   1400457f0:	mov    DWORD PTR [rsp+0x8],ecx
   1400457f4:	ldmxcsr DWORD PTR [rsp+0x8]
   1400457f9:	ret    
   1400457fa:	stmxcsr DWORD PTR [rsp+0x8]
   1400457ff:	mov    ecx,0xffffffc0
   140045804:	and    DWORD PTR [rsp+0x8],ecx
   140045808:	ldmxcsr DWORD PTR [rsp+0x8]
   14004580d:	ret    
   14004580e:	ucomisd xmm0,QWORD PTR [rip+0x33b2a]        # 0x140079340
   140045816:	jae    0x14004582c
   140045818:	ucomisd xmm0,QWORD PTR [rip+0x33b28]        # 0x140079348
   140045820:	jbe    0x14004582c
   140045822:	cvtsd2si rcx,xmm0
   140045827:	cvtsi2sd xmm0,rcx
   14004582c:	ret    
   14004582d:	int3   
   14004582e:	int3   
   14004582f:	int3   
   140045830:	rex push rbp
   140045832:	sub    rsp,0x20
   140045836:	mov    rbp,rdx
   140045839:	call   0x140034e4c
   14004583e:	nop
   14004583f:	add    rsp,0x20
   140045843:	pop    rbp
   140045844:	ret    
   140045845:	int3   
   140045846:	rex push rbp
   140045848:	sub    rsp,0x20
   14004584c:	mov    rbp,rdx
   14004584f:	cmp    DWORD PTR [rbp+0x80],0x0
   140045856:	je     0x140045863
   140045858:	mov    ecx,0x8
   14004585d:	call   0x14003a2a0
   140045862:	nop
   140045863:	add    rsp,0x20
   140045867:	pop    rbp
   140045868:	ret    
   140045869:	int3   
   14004586a:	rex push rbp
   14004586c:	sub    rsp,0x20
   140045870:	mov    rbp,rdx
   140045873:	mov    rax,QWORD PTR [rcx]
   140045876:	mov    rdx,rcx
   140045879:	mov    ecx,DWORD PTR [rax]
   14004587b:	call   0x14003a820
   140045880:	nop
   140045881:	add    rsp,0x20
   140045885:	pop    rbp
   140045886:	ret    
   140045887:	int3   
   140045888:	rex push rbp
   14004588a:	sub    rsp,0x20
   14004588e:	mov    rbp,rdx
   140045891:	mov    rcx,QWORD PTR [rbp+0x40]
   140045895:	call   0x14003b570
   14004589a:	nop
   14004589b:	add    rsp,0x20
   14004589f:	pop    rbp
   1400458a0:	ret    
   1400458a1:	int3   
   1400458a2:	rex push rbp
   1400458a4:	sub    rsp,0x30
   1400458a8:	mov    rbp,rdx
   1400458ab:	mov    rcx,QWORD PTR [rbp+0x60]
   1400458af:	call   0x14003b570
   1400458b4:	nop
   1400458b5:	add    rsp,0x30
   1400458b9:	pop    rbp
   1400458ba:	ret    
   1400458bb:	int3   
   1400458bc:	rex push rbp
   1400458be:	sub    rsp,0x20
   1400458c2:	mov    rbp,rdx
   1400458c5:	mov    rcx,QWORD PTR [rbp+0x30]
   1400458c9:	call   0x14003b570
   1400458ce:	nop
   1400458cf:	add    rsp,0x20
   1400458d3:	pop    rbp
   1400458d4:	ret    
   1400458d5:	int3   
   1400458d6:	rex push rbp
   1400458d8:	sub    rsp,0x20
   1400458dc:	mov    rbp,rdx
   1400458df:	mov    ecx,0xe
   1400458e4:	call   0x14003a2a0
   1400458e9:	nop
   1400458ea:	add    rsp,0x20
   1400458ee:	pop    rbp
   1400458ef:	ret    
   1400458f0:	int3   
   1400458f1:	rex push rbp
   1400458f3:	sub    rsp,0x20
   1400458f7:	mov    rbp,rdx
   1400458fa:	mov    ecx,0xd
   1400458ff:	call   0x14003a2a0
   140045904:	nop
   140045905:	add    rsp,0x20
   140045909:	pop    rbp
   14004590a:	ret    
   14004590b:	int3   
   14004590c:	rex push rbp
   14004590e:	sub    rsp,0x20
   140045912:	mov    rbp,rdx
   140045915:	mov    ecx,0xc
   14004591a:	call   0x14003a2a0
   14004591f:	nop
   140045920:	add    rsp,0x20
   140045924:	pop    rbp
   140045925:	ret    
   140045926:	int3   
   140045927:	rex push rbp
   140045929:	sub    rsp,0x20
   14004592d:	mov    rbp,rdx
   140045930:	mov    ecx,0xd
   140045935:	call   0x14003a2a0
   14004593a:	nop
   14004593b:	add    rsp,0x20
   14004593f:	pop    rbp
   140045940:	ret    
   140045941:	int3   
   140045942:	int3   
   140045943:	int3   
   140045944:	int3   
   140045945:	int3   
   140045946:	int3   
   140045947:	rex push rbp
   140045949:	sub    rsp,0x20
   14004594d:	mov    rbp,rdx
   140045950:	mov    ecx,0xc
   140045955:	call   0x14003a2a0
   14004595a:	nop
   14004595b:	add    rsp,0x20
   14004595f:	pop    rbp
   140045960:	ret    
   140045961:	int3   
   140045962:	rex push rbp
   140045964:	sub    rsp,0x20
   140045968:	mov    rbp,rdx
   14004596b:	mov    rcx,QWORD PTR [rip+0x402fe]        # 0x140085c70
   140045972:	call   QWORD PTR [rip+0x227d8]        # 0x140068150
   140045978:	nop
   140045979:	add    rsp,0x20
   14004597d:	pop    rbp
   14004597e:	ret    
   14004597f:	int3   
   140045980:	rex push rbp
   140045982:	sub    rsp,0x20
   140045986:	mov    rbp,rdx
   140045989:	cmp    DWORD PTR [rbp+0x60],0x0
   14004598d:	je     0x140045997
   14004598f:	xor    ecx,ecx
   140045991:	call   0x14003a2a0
   140045996:	nop
   140045997:	add    rsp,0x20
   14004599b:	pop    rbp
   14004599c:	ret    
   14004599d:	int3   
   14004599e:	int3   
   14004599f:	int3   
   1400459a0:	rex push rbp
   1400459a2:	sub    rsp,0x20
   1400459a6:	mov    rbp,rdx
   1400459a9:	mov    rax,QWORD PTR [rcx]
   1400459ac:	xor    ecx,ecx
   1400459ae:	cmp    DWORD PTR [rax],0xc0000005
   1400459b4:	sete   cl
   1400459b7:	mov    eax,ecx
   1400459b9:	mov    eax,ecx
   1400459bb:	add    rsp,0x20
   1400459bf:	pop    rbp
   1400459c0:	ret    
   1400459c1:	int3   
   1400459c2:	rex push rbp
   1400459c4:	sub    rsp,0x20
   1400459c8:	mov    rbp,rdx
   1400459cb:	mov    ecx,0x1
   1400459d0:	call   0x14003a2a0
   1400459d5:	nop
   1400459d6:	add    rsp,0x20
   1400459da:	pop    rbp
   1400459db:	ret    
   1400459dc:	int3   
   1400459dd:	rex push rbp
   1400459df:	sub    rsp,0x20
   1400459e3:	mov    rbp,rdx
   1400459e6:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400459ea:	mov    rax,rcx
   1400459ed:	mov    rdx,QWORD PTR [rip+0x4537c]        # 0x14008ad70
   1400459f4:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400459f8:	call   0x14003b5bc
   1400459fd:	nop
   1400459fe:	add    rsp,0x20
   140045a02:	pop    rbp
   140045a03:	ret    
   140045a04:	int3   
   140045a05:	int3   
   140045a06:	int3   
   140045a07:	int3   
   140045a08:	int3   
   140045a09:	int3   
   140045a0a:	int3   
   140045a0b:	int3   
   140045a0c:	int3   
   140045a0d:	rex push rbp
   140045a0f:	sub    rsp,0x20
   140045a13:	mov    rbp,rdx
   140045a16:	mov    ecx,0x1
   140045a1b:	call   0x14003a2a0
   140045a20:	nop
   140045a21:	add    rsp,0x20
   140045a25:	pop    rbp
   140045a26:	ret    
   140045a27:	int3   
   140045a28:	rex push rbp
   140045a2a:	sub    rsp,0x20
   140045a2e:	mov    rbp,rdx
   140045a31:	mov    ecx,DWORD PTR [rbp+0x40]
   140045a34:	call   0x14003fa94
   140045a39:	nop
   140045a3a:	add    rsp,0x20
   140045a3e:	pop    rbp
   140045a3f:	ret    
   140045a40:	int3   
   140045a41:	rex push rbp
   140045a43:	sub    rsp,0x20
   140045a47:	mov    rbp,rdx
   140045a4a:	mov    ecx,DWORD PTR [rbp+0x50]
   140045a4d:	call   0x14003fa94
   140045a52:	nop
   140045a53:	add    rsp,0x20
   140045a57:	pop    rbp
   140045a58:	ret    
   140045a59:	int3   
   140045a5a:	rex push rbp
   140045a5c:	sub    rsp,0x30
   140045a60:	mov    rbp,rdx
   140045a63:	cmp    DWORD PTR [rbp+0x30],0x0
   140045a67:	je     0x140045a9c
   140045a69:	mov    rdx,QWORD PTR [rbp+0x70]
   140045a6d:	cmp    DWORD PTR [rbp+0x34],0x0
   140045a71:	je     0x140045a94
   140045a73:	movsxd rcx,DWORD PTR [rdx]
   140045a76:	mov    rax,rcx
   140045a79:	sar    rax,0x5
   140045a7d:	lea    r8,[rip+0x4631c]        # 0x14008bda0
   140045a84:	and    ecx,0x1f
   140045a87:	imul   rcx,rcx,0x58
   140045a8b:	mov    rax,QWORD PTR [r8+rax*8]
   140045a8f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140045a94:	mov    ecx,DWORD PTR [rdx]
   140045a96:	call   0x14003fa94
   140045a9b:	nop
   140045a9c:	add    rsp,0x30
   140045aa0:	pop    rbp
   140045aa1:	ret    
   140045aa2:	int3   
   140045aa3:	rex push rbp
   140045aa5:	sub    rsp,0x20
   140045aa9:	mov    rbp,rdx
   140045aac:	mov    ecx,0xa
   140045ab1:	call   0x14003a2a0
   140045ab6:	nop
   140045ab7:	add    rsp,0x20
   140045abb:	pop    rbp
   140045abc:	ret    
   140045abd:	int3   
   140045abe:	rex push rbp
   140045ac0:	sub    rsp,0x20
   140045ac4:	mov    rbp,rdx
   140045ac7:	mov    ecx,0xa
   140045acc:	call   0x14003a2a0
   140045ad1:	nop
   140045ad2:	add    rsp,0x20
   140045ad6:	pop    rbp
   140045ad7:	ret    
   140045ad8:	int3   
   140045ad9:	int3   
   140045ada:	int3   
   140045adb:	int3   
   140045adc:	int3   
   140045add:	int3   
   140045ade:	rex push rbp
   140045ae0:	sub    rsp,0x20
   140045ae4:	mov    rbp,rdx
   140045ae7:	mov    ecx,0xb
   140045aec:	call   0x14003a2a0
   140045af1:	nop
   140045af2:	add    rsp,0x20
   140045af6:	pop    rbp
   140045af7:	ret    
   140045af8:	int3   
   140045af9:	rex push rbp
   140045afb:	sub    rsp,0x40
   140045aff:	mov    rbp,rdx
   140045b02:	lea    rax,[rbp+0x40]
   140045b06:	mov    QWORD PTR [rsp+0x30],rax
   140045b0b:	mov    rax,QWORD PTR [rbp+0x90]
   140045b12:	mov    QWORD PTR [rsp+0x28],rax
   140045b17:	mov    rax,QWORD PTR [rbp+0x88]
   140045b1e:	mov    QWORD PTR [rsp+0x20],rax
   140045b23:	mov    r9,QWORD PTR [rbp+0x80]
   140045b2a:	mov    r8,QWORD PTR [rbp+0x78]
   140045b2e:	mov    rdx,QWORD PTR [rbp+0x70]
   140045b32:	call   0x140043594
   140045b37:	nop
   140045b38:	add    rsp,0x40
   140045b3c:	pop    rbp
   140045b3d:	ret    
   140045b3e:	int3   
   140045b3f:	rex push rbp
   140045b41:	sub    rsp,0x20
   140045b45:	mov    rbp,rdx
   140045b48:	call   0x140043c20
   140045b4d:	nop
   140045b4e:	add    rsp,0x20
   140045b52:	pop    rbp
   140045b53:	ret    
   140045b54:	int3   
   140045b55:	int3   
   140045b56:	int3   
   140045b57:	int3   
   140045b58:	int3   
   140045b59:	int3   
   140045b5a:	int3   
   140045b5b:	int3   
   140045b5c:	int3   
   140045b5d:	int3   
   140045b5e:	int3   
   140045b5f:	rex push rbp
   140045b61:	sub    rsp,0x20
   140045b65:	mov    rbp,rdx
   140045b68:	call   0x140037c34
   140045b6d:	cmp    DWORD PTR [rax+0x100],0x0
   140045b74:	jle    0x140045b81
   140045b76:	call   0x140037c34
   140045b7b:	dec    DWORD PTR [rax+0x100]
   140045b81:	add    rsp,0x20
   140045b85:	pop    rbp
   140045b86:	ret    
   140045b87:	int3   
   140045b88:	rex push rbp
   140045b8a:	sub    rsp,0x20
   140045b8e:	mov    rbp,rdx
   140045b91:	xor    eax,eax
   140045b93:	cmp    BYTE PTR [rbp+0x38],al
   140045b96:	setne  al
   140045b99:	add    rsp,0x20
   140045b9d:	pop    rbp
   140045b9e:	ret    
   140045b9f:	int3   
   140045ba0:	rex push rbp
   140045ba2:	sub    rsp,0x20
   140045ba6:	mov    rbp,rdx
   140045ba9:	mov    QWORD PTR [rbp+0x68],rcx
   140045bad:	mov    QWORD PTR [rbp+0x58],rcx
   140045bb1:	mov    rax,QWORD PTR [rbp+0x58]
   140045bb5:	mov    rcx,QWORD PTR [rax]
   140045bb8:	mov    QWORD PTR [rbp+0x28],rcx
   140045bbc:	mov    DWORD PTR [rbp+0x20],0x0
   140045bc3:	mov    rax,QWORD PTR [rbp+0x28]
   140045bc7:	cmp    DWORD PTR [rax],0xe06d7363
   140045bcd:	jne    0x140045c1c
   140045bcf:	mov    rax,QWORD PTR [rbp+0x28]
   140045bd3:	cmp    DWORD PTR [rax+0x18],0x4
   140045bd7:	jne    0x140045c1c
   140045bd9:	mov    rax,QWORD PTR [rbp+0x28]
   140045bdd:	cmp    DWORD PTR [rax+0x20],0x19930520
   140045be4:	je     0x140045c00
   140045be6:	mov    rax,QWORD PTR [rbp+0x28]
   140045bea:	cmp    DWORD PTR [rax+0x20],0x19930521
   140045bf1:	je     0x140045c00
   140045bf3:	mov    rax,QWORD PTR [rbp+0x28]
   140045bf7:	cmp    DWORD PTR [rax+0x20],0x19930522
   140045bfe:	jne    0x140045c1c
   140045c00:	mov    rdx,QWORD PTR [rbp+0x28]
   140045c04:	mov    rax,QWORD PTR [rbp+0xc8]
   140045c0b:	mov    rcx,QWORD PTR [rax+0x28]
   140045c0f:	cmp    QWORD PTR [rdx+0x28],rcx
   140045c13:	jne    0x140045c1c
   140045c15:	mov    DWORD PTR [rbp+0x20],0x1
   140045c1c:	mov    rax,QWORD PTR [rbp+0x28]
   140045c20:	cmp    DWORD PTR [rax],0xe06d7363
   140045c26:	jne    0x140045c83
   140045c28:	mov    rax,QWORD PTR [rbp+0x28]
   140045c2c:	cmp    DWORD PTR [rax+0x18],0x4
   140045c30:	jne    0x140045c83
   140045c32:	mov    rax,QWORD PTR [rbp+0x28]
   140045c36:	cmp    DWORD PTR [rax+0x20],0x19930520
   140045c3d:	je     0x140045c59
   140045c3f:	mov    rax,QWORD PTR [rbp+0x28]
   140045c43:	cmp    DWORD PTR [rax+0x20],0x19930521
   140045c4a:	je     0x140045c59
   140045c4c:	mov    rax,QWORD PTR [rbp+0x28]
   140045c50:	cmp    DWORD PTR [rax+0x20],0x19930522
   140045c57:	jne    0x140045c83
   140045c59:	mov    rax,QWORD PTR [rbp+0x28]
   140045c5d:	cmp    QWORD PTR [rax+0x30],0x0
   140045c62:	jne    0x140045c83
   140045c64:	call   0x140037c34
   140045c69:	mov    DWORD PTR [rax+0x2c0],0x1
   140045c73:	mov    DWORD PTR [rbp+0x20],0x1
   140045c7a:	mov    DWORD PTR [rbp+0x30],0x1
   140045c81:	jmp    0x140045c8a
   140045c83:	mov    DWORD PTR [rbp+0x30],0x0
   140045c8a:	mov    eax,DWORD PTR [rbp+0x30]
   140045c8d:	add    rsp,0x20
   140045c91:	pop    rbp
   140045c92:	ret    
   140045c93:	int3   
   140045c94:	int3   
   140045c95:	int3   
   140045c96:	int3   
   140045c97:	int3   
   140045c98:	int3   
   140045c99:	int3   
   140045c9a:	int3   
   140045c9b:	int3   
   140045c9c:	int3   
   140045c9d:	int3   
   140045c9e:	int3   
   140045c9f:	int3   
   140045ca0:	rex push rbx
   140045ca2:	push   rbp
   140045ca3:	sub    rsp,0x28
   140045ca7:	mov    rbp,rdx
   140045caa:	mov    rcx,QWORD PTR [rbp+0x50]
   140045cae:	call   0x140043830
   140045cb3:	cmp    DWORD PTR [rbp+0x20],0x0
   140045cb7:	jne    0x140045d01
   140045cb9:	mov    rbx,QWORD PTR [rbp+0xc8]
   140045cc0:	cmp    DWORD PTR [rbx],0xe06d7363
   140045cc6:	jne    0x140045d01
   140045cc8:	cmp    DWORD PTR [rbx+0x18],0x4
   140045ccc:	jne    0x140045d01
   140045cce:	cmp    DWORD PTR [rbx+0x20],0x19930520
   140045cd5:	je     0x140045ce9
   140045cd7:	cmp    DWORD PTR [rbx+0x20],0x19930521
   140045cde:	je     0x140045ce9
   140045ce0:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140045ce7:	jne    0x140045d01
   140045ce9:	mov    rcx,QWORD PTR [rbx+0x28]
   140045ced:	call   0x1400437fc
   140045cf2:	test   eax,eax
   140045cf4:	je     0x140045d01
   140045cf6:	mov    dl,0x1
   140045cf8:	mov    rcx,rbx
   140045cfb:	call   0x140043e00
   140045d00:	nop
   140045d01:	call   0x140037c34
   140045d06:	mov    rcx,QWORD PTR [rbp+0xd0]
   140045d0d:	mov    QWORD PTR [rax+0xf0],rcx
   140045d14:	call   0x140037c34
   140045d19:	mov    rcx,QWORD PTR [rbp+0xd8]
   140045d20:	mov    QWORD PTR [rax+0xf8],rcx
   140045d27:	add    rsp,0x28
   140045d2b:	pop    rbp
   140045d2c:	pop    rbx
   140045d2d:	ret    
   140045d2e:	int3   
   140045d2f:	int3   
   140045d30:	mov    QWORD PTR [rsp+0x10],rdx
   140045d35:	push   rbp
   140045d36:	sub    rsp,0x20
   140045d3a:	mov    rbp,rdx
   140045d3d:	mov    rcx,QWORD PTR [rbp+0x58]
   140045d41:	call   0x1400330c0
   140045d46:	xor    edx,edx
   140045d48:	xor    ecx,ecx
   140045d4a:	call   0x140036358
   140045d4f:	nop
   140045d50:	mov    QWORD PTR [rsp+0x10],rdx
   140045d55:	push   rbp
   140045d56:	sub    rsp,0x20
   140045d5a:	mov    rbp,rdx
   140045d5d:	mov    rcx,QWORD PTR [rbp+0x48]
   140045d61:	call   0x1400330c0
   140045d66:	xor    edx,edx
   140045d68:	xor    ecx,ecx
   140045d6a:	call   0x140036358
   140045d6f:	nop
   140045d70:	mov    QWORD PTR [rsp+0x10],rdx
   140045d75:	push   rbp
   140045d76:	sub    rsp,0x20
   140045d7a:	mov    rbp,rdx
   140045d7d:	mov    rcx,QWORD PTR [rbp+0x48]
   140045d81:	call   0x1400330c0
   140045d86:	xor    edx,edx
   140045d88:	xor    ecx,ecx
   140045d8a:	call   0x140036358
   140045d8f:	nop
   140045d90:	mov    QWORD PTR [rsp+0x10],rdx
   140045d95:	push   rbp
   140045d96:	sub    rsp,0x20
   140045d9a:	mov    rbp,rdx
   140045d9d:	mov    rcx,QWORD PTR [rbp+0x48]
   140045da1:	call   0x1400330c0
   140045da6:	xor    edx,edx
   140045da8:	xor    ecx,ecx
   140045daa:	call   0x140036358
   140045daf:	nop
   140045db0:	lea    rcx,[rdx+0x60]
   140045db7:	jmp    0x140002990
   140045dbc:	int3   
   140045dbd:	int3   
   140045dbe:	int3   
   140045dbf:	int3   
   140045dc0:	lea    rcx,[rdx+0x58]
   140045dc7:	jmp    0x140002990
   140045dcc:	int3   
   140045dcd:	int3   
   140045dce:	int3   
   140045dcf:	int3   
   140045dd0:	lea    rcx,[rdx+0x68]
   140045dd7:	jmp    0x140002990
   140045ddc:	int3   
   140045ddd:	int3   
   140045dde:	int3   
   140045ddf:	int3   
   140045de0:	mov    QWORD PTR [rsp+0x10],rdx
   140045de5:	push   rbp
   140045de6:	sub    rsp,0x20
   140045dea:	mov    rbp,rdx
   140045ded:	xor    edx,edx
   140045def:	xor    ecx,ecx
   140045df1:	call   0x140036358
   140045df6:	nop
   140045df7:	int3   
   140045df8:	int3   
   140045df9:	int3   
   140045dfa:	int3   
   140045dfb:	int3   
   140045dfc:	int3   
   140045dfd:	int3   
   140045dfe:	int3   
   140045dff:	int3   
   140045e00:	mov    QWORD PTR [rsp+0x10],rdx
   140045e05:	push   rbp
   140045e06:	sub    rsp,0x20
   140045e0a:	mov    rbp,rdx
   140045e0d:	mov    rcx,QWORD PTR [rbp+0x58]
   140045e11:	call   0x1400330c0
   140045e16:	xor    edx,edx
   140045e18:	xor    ecx,ecx
   140045e1a:	call   0x140036358
   140045e1f:	nop
   140045e20:	lea    rcx,[rdx+0x58]
   140045e27:	jmp    0x140002990
   140045e2c:	int3   
   140045e2d:	int3   
   140045e2e:	int3   
   140045e2f:	int3   
   140045e30:	lea    rcx,[rdx+0x60]
   140045e37:	jmp    0x140002990
   140045e3c:	int3   
   140045e3d:	int3   
   140045e3e:	int3   
   140045e3f:	int3   
   140045e40:	mov    rcx,QWORD PTR [rdx+0x40]
   140045e47:	add    rcx,0x40
   140045e4b:	jmp    0x140002990
   140045e50:	mov    QWORD PTR [rsp+0x10],rdx
   140045e55:	push   rbp
   140045e56:	sub    rsp,0x20
   140045e5a:	mov    rbp,rdx
   140045e5d:	mov    rcx,QWORD PTR [rbp+0x50]
   140045e61:	call   0x1400330c0
   140045e66:	xor    edx,edx
   140045e68:	xor    ecx,ecx
   140045e6a:	call   0x140036358
   140045e6f:	nop
   140045e70:	mov    QWORD PTR [rsp+0x10],rdx
   140045e75:	push   rbp
   140045e76:	sub    rsp,0x20
   140045e7a:	mov    rbp,rdx
   140045e7d:	mov    rcx,QWORD PTR [rbp+0x50]
   140045e81:	call   0x1400330c0
   140045e86:	xor    edx,edx
   140045e88:	xor    ecx,ecx
   140045e8a:	call   0x140036358
   140045e8f:	nop
   140045e90:	mov    QWORD PTR [rsp+0x10],rdx
   140045e95:	push   rbp
   140045e96:	sub    rsp,0x20
   140045e9a:	mov    rbp,rdx
   140045e9d:	xor    edx,edx
   140045e9f:	xor    ecx,ecx
   140045ea1:	call   0x140036358
   140045ea6:	nop
   140045ea7:	int3   
   140045ea8:	int3   
   140045ea9:	int3   
   140045eaa:	int3   
   140045eab:	int3   
   140045eac:	int3   
   140045ead:	int3   
   140045eae:	int3   
   140045eaf:	int3   
   140045eb0:	mov    QWORD PTR [rsp+0x10],rdx
   140045eb5:	push   rbp
   140045eb6:	sub    rsp,0x20
   140045eba:	mov    rbp,rdx
   140045ebd:	xor    edx,edx
   140045ebf:	xor    ecx,ecx
   140045ec1:	call   0x140036358
   140045ec6:	nop
   140045ec7:	int3   
   140045ec8:	int3   
   140045ec9:	int3   
   140045eca:	int3   
   140045ecb:	int3   
   140045ecc:	int3   
   140045ecd:	int3   
   140045ece:	int3   
   140045ecf:	int3   
   140045ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140045ed5:	push   rbx
   140045ed6:	push   rbp
   140045ed7:	sub    rsp,0x28
   140045edb:	mov    rbp,rdx
   140045ede:	mov    rbx,QWORD PTR [rbp+0x40]
   140045ee2:	mov    rcx,QWORD PTR [rbx]
   140045ee5:	test   rcx,rcx
   140045ee8:	je     0x140045eef
   140045eea:	call   0x1400330c0
   140045eef:	mov    QWORD PTR [rbx],0x0
   140045ef6:	mov    QWORD PTR [rbx+0x8],0x0
   140045efe:	mov    QWORD PTR [rbx+0x10],0x0
   140045f06:	xor    edx,edx
   140045f08:	xor    ecx,ecx
   140045f0a:	call   0x140036358
   140045f0f:	nop
   140045f10:	mov    QWORD PTR [rsp+0x10],rdx
   140045f15:	push   rbp
   140045f16:	sub    rsp,0x20
   140045f1a:	mov    rbp,rdx
   140045f1d:	lea    rax,[rip+0xfffffffffffe30ef]        # 0x140029013
   140045f24:	add    rsp,0x20
   140045f28:	pop    rbp
   140045f29:	ret    
   140045f2a:	int3   
   140045f2b:	int3   
   140045f2c:	int3   
   140045f2d:	int3   
   140045f2e:	int3   
   140045f2f:	int3   
   140045f30:	mov    QWORD PTR [rsp+0x10],rdx
   140045f35:	push   rbp
   140045f36:	sub    rsp,0x20
   140045f3a:	mov    rbp,rdx
   140045f3d:	mov    rcx,QWORD PTR [rbp+0x50]
   140045f41:	call   0x1400330c0
   140045f46:	xor    edx,edx
   140045f48:	xor    ecx,ecx
   140045f4a:	call   0x140036358
   140045f4f:	nop
   140045f50:	mov    QWORD PTR [rsp+0x10],rdx
   140045f55:	push   rbx
   140045f56:	push   rbp
   140045f57:	push   rsi
   140045f58:	push   rdi
   140045f59:	sub    rsp,0x28
   140045f5d:	mov    rbp,rdx
   140045f60:	mov    rdi,QWORD PTR [rbp+0x68]
   140045f64:	mov    rbx,rdi
   140045f67:	cmp    BYTE PTR [rdi+0x1d],0x0
   140045f6b:	jne    0x140045f91
   140045f6d:	mov    rsi,QWORD PTR [rbp+0x50]
   140045f71:	mov    rdx,QWORD PTR [rbx+0x10]
   140045f75:	mov    rcx,rsi
   140045f78:	call   0x140028a70
   140045f7d:	mov    rbx,QWORD PTR [rbx]
   140045f80:	mov    rcx,rdi
   140045f83:	call   0x1400330c0
   140045f88:	mov    rdi,rbx
   140045f8b:	cmp    BYTE PTR [rbx+0x1d],0x0
   140045f8f:	je     0x140045f71
   140045f91:	xor    edx,edx
   140045f93:	xor    ecx,ecx
   140045f95:	call   0x140036358
   140045f9a:	nop
   140045f9b:	int3   
   140045f9c:	int3   
   140045f9d:	int3   
   140045f9e:	int3   
   140045f9f:	int3   
   140045fa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140045fa7:	jmp    0x1400279f0
   140045fac:	int3   
   140045fad:	int3   
   140045fae:	int3   
   140045faf:	int3   
   140045fb0:	mov    QWORD PTR [rsp+0x10],rdx
   140045fb5:	push   rbp
   140045fb6:	sub    rsp,0x20
   140045fba:	mov    rbp,rdx
   140045fbd:	mov    rcx,QWORD PTR [rbp+0x40]
   140045fc1:	mov    r8,QWORD PTR [rcx+0x8]
   140045fc5:	mov    r9,r8
   140045fc8:	mov    r8,QWORD PTR [r8]
   140045fcb:	lea    rdx,[rbp+0x50]
   140045fcf:	call   0x140027e80
   140045fd4:	xor    edx,edx
   140045fd6:	xor    ecx,ecx
   140045fd8:	call   0x140036358
   140045fdd:	nop
   140045fde:	int3   
   140045fdf:	int3   
   140045fe0:	mov    rcx,QWORD PTR [rdx+0x40]
   140045fe7:	jmp    0x1400279f0
   140045fec:	int3   
   140045fed:	int3   
   140045fee:	int3   
   140045fef:	int3   
   140045ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140045ff5:	push   rbp
   140045ff6:	sub    rsp,0x60
   140045ffa:	mov    rbp,rdx
   140045ffd:	lea    rax,[rip+0xfffffffffffdc56a]        # 0x14002256e
   140046004:	add    rsp,0x60
   140046008:	pop    rbp
   140046009:	ret    
   14004600a:	int3   
   14004600b:	int3   
   14004600c:	int3   
   14004600d:	int3   
   14004600e:	int3   
   14004600f:	int3   
   140046010:	lea    rcx,[rdx+0x78]
   140046017:	jmp    0x140002990
   14004601c:	int3   
   14004601d:	int3   
   14004601e:	int3   
   14004601f:	int3   
   140046020:	lea    rcx,[rdx+0x78]
   140046027:	jmp    0x140002990
   14004602c:	int3   
   14004602d:	int3   
   14004602e:	int3   
   14004602f:	int3   
   140046030:	lea    rcx,[rdx+0x78]
   140046037:	jmp    0x140002990
   14004603c:	int3   
   14004603d:	int3   
   14004603e:	int3   
   14004603f:	int3   
   140046040:	mov    rcx,QWORD PTR [rdx+0x40]
   140046047:	add    rcx,0x30
   14004604b:	jmp    0x140002990
   140046050:	mov    rcx,QWORD PTR [rdx+0x40]
   140046057:	add    rcx,0x38
   14004605b:	jmp    0x140002990
   140046060:	mov    rcx,QWORD PTR [rdx+0x40]
   140046067:	add    rcx,0x40
   14004606b:	jmp    0x140002990
   140046070:	mov    rcx,QWORD PTR [rdx+0x40]
   140046077:	add    rcx,0x18
   14004607b:	jmp    0x140018540
   140046080:	mov    rcx,QWORD PTR [rdx+0x40]
   140046087:	add    rcx,0x278
   14004608e:	jmp    0x140032250
   140046093:	int3   
   140046094:	int3   
   140046095:	int3   
   140046096:	int3   
   140046097:	int3   
   140046098:	int3   
   140046099:	int3   
   14004609a:	int3   
   14004609b:	int3   
   14004609c:	int3   
   14004609d:	int3   
   14004609e:	int3   
   14004609f:	int3   
   1400460a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400460a7:	add    rcx,0x280
   1400460ae:	jmp    0x140032250
   1400460b3:	int3   
   1400460b4:	int3   
   1400460b5:	int3   
   1400460b6:	int3   
   1400460b7:	int3   
   1400460b8:	int3   
   1400460b9:	int3   
   1400460ba:	int3   
   1400460bb:	int3   
   1400460bc:	int3   
   1400460bd:	int3   
   1400460be:	int3   
   1400460bf:	int3   
   1400460c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400460c7:	add    rcx,0x288
   1400460ce:	jmp    0x140002990
   1400460d3:	int3   
   1400460d4:	int3   
   1400460d5:	int3   
   1400460d6:	int3   
   1400460d7:	int3   
   1400460d8:	int3   
   1400460d9:	int3   
   1400460da:	int3   
   1400460db:	int3   
   1400460dc:	int3   
   1400460dd:	int3   
   1400460de:	int3   
   1400460df:	int3   
   1400460e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400460e5:	push   rbp
   1400460e6:	sub    rsp,0x20
   1400460ea:	mov    rbp,rdx
   1400460ed:	mov    rcx,QWORD PTR [rbp+0x48]
   1400460f1:	call   0x1400330c0
   1400460f6:	xor    edx,edx
   1400460f8:	xor    ecx,ecx
   1400460fa:	call   0x140036358
   1400460ff:	nop
   140046100:	mov    rcx,QWORD PTR [rdx+0x40]
   140046107:	jmp    0x14000a250
   14004610c:	int3   
   14004610d:	int3   
   14004610e:	int3   
   14004610f:	int3   
   140046110:	mov    rcx,QWORD PTR [rdx+0x40]
   140046117:	add    rcx,0x118
   14004611e:	jmp    0x1400032b0
   140046123:	int3   
   140046124:	int3   
   140046125:	int3   
   140046126:	int3   
   140046127:	int3   
   140046128:	int3   
   140046129:	int3   
   14004612a:	int3   
   14004612b:	int3   
   14004612c:	int3   
   14004612d:	int3   
   14004612e:	int3   
   14004612f:	int3   
   140046130:	mov    rcx,QWORD PTR [rdx+0x40]
   140046137:	add    rcx,0x138
   14004613e:	jmp    0x140002990
   140046143:	int3   
   140046144:	int3   
   140046145:	int3   
   140046146:	int3   
   140046147:	int3   
   140046148:	int3   
   140046149:	int3   
   14004614a:	int3   
   14004614b:	int3   
   14004614c:	int3   
   14004614d:	int3   
   14004614e:	int3   
   14004614f:	int3   
   140046150:	mov    rcx,QWORD PTR [rdx+0x40]
   140046157:	add    rcx,0x140
   14004615e:	jmp    0x140002990
   140046163:	int3   
   140046164:	int3   
   140046165:	int3   
   140046166:	int3   
   140046167:	int3   
   140046168:	int3   
   140046169:	int3   
   14004616a:	int3   
   14004616b:	int3   
   14004616c:	int3   
   14004616d:	int3   
   14004616e:	int3   
   14004616f:	int3   
   140046170:	mov    rcx,QWORD PTR [rdx+0x40]
   140046177:	add    rcx,0x148
   14004617e:	jmp    0x1400272d0
   140046183:	int3   
   140046184:	int3   
   140046185:	int3   
   140046186:	int3   
   140046187:	int3   
   140046188:	int3   
   140046189:	int3   
   14004618a:	int3   
   14004618b:	int3   
   14004618c:	int3   
   14004618d:	int3   
   14004618e:	int3   
   14004618f:	int3   
   140046190:	mov    rcx,QWORD PTR [rdx+0x40]
   140046197:	add    rcx,0x8
   14004619b:	jmp    0x140003400
   1400461a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400461a7:	add    rcx,0x28
   1400461ab:	jmp    0x140002990
   1400461b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400461b7:	add    rcx,0x30
   1400461bb:	jmp    0x140005240
   1400461c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400461c7:	add    rcx,0x58
   1400461cb:	jmp    0x140005240
   1400461d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400461d5:	push   rbp
   1400461d6:	sub    rsp,0x20
   1400461da:	mov    rbp,rdx
   1400461dd:	mov    rcx,QWORD PTR [rbp+0x78]
   1400461e1:	mov    QWORD PTR [rbp+0x78],rcx
   1400461e5:	inc    rcx
   1400461e8:	call   0x140028140
   1400461ed:	mov    QWORD PTR [rbp+0x88],rax
   1400461f4:	lea    rax,[rip+0xfffffffffffbcd0f]        # 0x140002f0a
   1400461fb:	add    rsp,0x20
   1400461ff:	pop    rbp
   140046200:	ret    
   140046201:	int3   
   140046202:	int3   
   140046203:	int3   
   140046204:	int3   
   140046205:	int3   
   140046206:	int3   
   140046207:	int3   
   140046208:	int3   
   140046209:	int3   
   14004620a:	int3   
   14004620b:	int3   
   14004620c:	int3   
   14004620d:	int3   
   14004620e:	int3   
   14004620f:	int3   
   140046210:	mov    QWORD PTR [rsp+0x10],rdx
   140046215:	push   rbx
   140046216:	push   rbp
   140046217:	sub    rsp,0x28
   14004621b:	mov    rbp,rdx
   14004621e:	mov    rbx,QWORD PTR [rbp+0x70]
   140046222:	cmp    QWORD PTR [rbx+0x18],0x10
   140046227:	jb     0x140046231
   140046229:	mov    rcx,QWORD PTR [rbx]
   14004622c:	call   0x1400330c0
   140046231:	mov    QWORD PTR [rbx+0x18],0xf
   140046239:	mov    QWORD PTR [rbx+0x10],0x0
   140046241:	mov    BYTE PTR [rbx],0x0
   140046244:	xor    edx,edx
   140046246:	xor    ecx,ecx
   140046248:	call   0x140036358
   14004624d:	nop
   14004624e:	int3   
   14004624f:	int3   
   140046250:	mov    QWORD PTR [rsp+0x10],rdx
   140046255:	push   rbp
   140046256:	sub    rsp,0x20
   14004625a:	mov    rbp,rdx
   14004625d:	mov    rcx,QWORD PTR [rbp+0x50]
   140046261:	call   0x1400330c0
   140046266:	xor    edx,edx
   140046268:	xor    ecx,ecx
   14004626a:	call   0x140036358
   14004626f:	nop
   140046270:	mov    QWORD PTR [rsp+0x10],rdx
   140046275:	push   rbx
   140046276:	push   rbp
   140046277:	sub    rsp,0x28
   14004627b:	mov    rbp,rdx
   14004627e:	mov    rbx,QWORD PTR [rbp+0x40]
   140046282:	mov    rcx,QWORD PTR [rbx]
   140046285:	test   rcx,rcx
   140046288:	je     0x14004628f
   14004628a:	call   0x1400330c0
   14004628f:	mov    QWORD PTR [rbx],0x0
   140046296:	mov    QWORD PTR [rbx+0x8],0x0
   14004629e:	mov    QWORD PTR [rbx+0x10],0x0
   1400462a6:	xor    edx,edx
   1400462a8:	xor    ecx,ecx
   1400462aa:	call   0x140036358
   1400462af:	nop
   1400462b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400462b5:	push   rbp
   1400462b6:	sub    rsp,0x20
   1400462ba:	mov    rbp,rdx
   1400462bd:	lea    rax,[rip+0xfffffffffffe34bb]        # 0x14002977f
   1400462c4:	add    rsp,0x20
   1400462c8:	pop    rbp
   1400462c9:	ret    
   1400462ca:	int3   
   1400462cb:	int3   
   1400462cc:	int3   
   1400462cd:	int3   
   1400462ce:	int3   
   1400462cf:	int3   
   1400462d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400462d5:	push   rbp
   1400462d6:	sub    rsp,0x20
   1400462da:	mov    rbp,rdx
   1400462dd:	lea    rax,[rip+0xfffffffffffe30ee]        # 0x1400293d2
   1400462e4:	add    rsp,0x20
   1400462e8:	pop    rbp
   1400462e9:	ret    
   1400462ea:	int3   
   1400462eb:	int3   
   1400462ec:	int3   
   1400462ed:	int3   
   1400462ee:	int3   
   1400462ef:	int3   
   1400462f0:	mov    rcx,QWORD PTR [rdx+0x58]
   1400462f7:	jmp    0x1400279f0
   1400462fc:	int3   
   1400462fd:	int3   
   1400462fe:	int3   
   1400462ff:	int3   
   140046300:	mov    rcx,QWORD PTR [rdx+0x68]
   140046307:	jmp    0x1400279f0
   14004630c:	int3   
   14004630d:	int3   
   14004630e:	int3   
   14004630f:	int3   
   140046310:	mov    QWORD PTR [rsp+0x10],rdx
   140046315:	push   rbp
   140046316:	sub    rsp,0x20
   14004631a:	mov    rbp,rdx
   14004631d:	lea    rax,[rip+0xfffffffffffdb0ff]        # 0x140021423
   140046324:	add    rsp,0x20
   140046328:	pop    rbp
   140046329:	ret    
   14004632a:	int3   
   14004632b:	int3   
   14004632c:	int3   
   14004632d:	int3   
   14004632e:	int3   
   14004632f:	int3   
   140046330:	rex push rbp
   140046332:	sub    rsp,0x20
   140046336:	mov    rbp,rdx
   140046339:	mov    eax,DWORD PTR [rbp+0x48]
   14004633c:	and    eax,0x1
   14004633f:	test   eax,eax
   140046341:	je     0x140046350
   140046343:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140046347:	mov    rcx,QWORD PTR [rbp+0x58]
   14004634b:	call   0x140005240
   140046350:	add    rsp,0x20
   140046354:	pop    rbp
   140046355:	ret    
   140046356:	int3   
   140046357:	int3   
   140046358:	int3   
   140046359:	int3   
   14004635a:	int3   
   14004635b:	int3   
   14004635c:	int3   
   14004635d:	int3   
   14004635e:	int3   
   14004635f:	int3   
   140046360:	rex push rbp
   140046362:	mov    rbp,rdx
   140046365:	mov    eax,DWORD PTR [rip+0x449fd]        # 0x14008ad68
   14004636b:	and    eax,0xfffffffe
   14004636e:	mov    DWORD PTR [rip+0x449f4],eax        # 0x14008ad68
   140046374:	pop    rbp
   140046375:	ret    
   140046376:	int3   
   140046377:	int3   
   140046378:	int3   
   140046379:	int3   
   14004637a:	int3   
   14004637b:	int3   
   14004637c:	int3   
   14004637d:	int3   
   14004637e:	int3   
   14004637f:	int3   
   140046380:	rex push rbp
   140046382:	sub    rsp,0x20
   140046386:	mov    rbp,rdx
   140046389:	mov    rdx,QWORD PTR [rbp+0x58]
   14004638d:	mov    rcx,QWORD PTR [rbp+0x28]
   140046391:	call   0x140016a70
   140046396:	add    rsp,0x20
   14004639a:	pop    rbp
   14004639b:	ret    
   14004639c:	int3   
   14004639d:	int3   
   14004639e:	int3   
   14004639f:	int3   
   1400463a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400463a5:	push   rbp
   1400463a6:	sub    rsp,0x20
   1400463aa:	mov    rbp,rdx
   1400463ad:	mov    rcx,QWORD PTR [rbp+0x50]
   1400463b1:	call   0x1400330c0
   1400463b6:	xor    edx,edx
   1400463b8:	xor    ecx,ecx
   1400463ba:	call   0x140036358
   1400463bf:	nop
   1400463c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400463c5:	push   rbp
   1400463c6:	sub    rsp,0x20
   1400463ca:	mov    rbp,rdx
   1400463cd:	mov    rcx,QWORD PTR [rbp+0x78]
   1400463d1:	mov    QWORD PTR [rbp+0x78],rcx
   1400463d5:	inc    rcx
   1400463d8:	call   0x14000ea20
   1400463dd:	mov    QWORD PTR [rbp+0x88],rax
   1400463e4:	lea    rax,[rip+0xfffffffffffc85c2]        # 0x14000e9ad
   1400463eb:	add    rsp,0x20
   1400463ef:	pop    rbp
   1400463f0:	ret    
   1400463f1:	int3   
   1400463f2:	int3   
   1400463f3:	int3   
   1400463f4:	int3   
   1400463f5:	int3   
   1400463f6:	int3   
   1400463f7:	int3   
   1400463f8:	int3   
   1400463f9:	int3   
   1400463fa:	int3   
   1400463fb:	int3   
   1400463fc:	int3   
   1400463fd:	int3   
   1400463fe:	int3   
   1400463ff:	int3   
   140046400:	mov    QWORD PTR [rsp+0x10],rdx
   140046405:	push   rbx
   140046406:	push   rbp
   140046407:	sub    rsp,0x28
   14004640b:	mov    rbp,rdx
   14004640e:	mov    rbx,QWORD PTR [rbp+0x70]
   140046412:	cmp    QWORD PTR [rbx+0x18],0x8
   140046417:	jb     0x140046421
   140046419:	mov    rcx,QWORD PTR [rbx]
   14004641c:	call   0x1400330c0
   140046421:	mov    QWORD PTR [rbx+0x18],0x7
   140046429:	mov    QWORD PTR [rbx+0x10],0x0
   140046431:	xor    eax,eax
   140046433:	mov    WORD PTR [rbx],ax
   140046436:	xor    edx,edx
   140046438:	xor    ecx,ecx
   14004643a:	call   0x140036358
   14004643f:	nop
   140046440:	mov    rcx,QWORD PTR [rdx+0x40]
   140046447:	jmp    0x14000a200
   14004644c:	int3   
   14004644d:	int3   
   14004644e:	int3   
   14004644f:	int3   
   140046450:	rex push rbp
   140046452:	sub    rsp,0x20
   140046456:	mov    rbp,rdx
   140046459:	mov    eax,DWORD PTR [rbp+0x40]
   14004645c:	and    eax,0x1
   14004645f:	test   eax,eax
   140046461:	je     0x140046470
   140046463:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140046467:	mov    rcx,QWORD PTR [rbp+0x48]
   14004646b:	call   0x140005240
   140046470:	add    rsp,0x20
   140046474:	pop    rbp
   140046475:	ret    
   140046476:	int3   
   140046477:	int3   
   140046478:	int3   
   140046479:	int3   
   14004647a:	int3   
   14004647b:	int3   
   14004647c:	int3   
   14004647d:	int3   
   14004647e:	int3   
   14004647f:	int3   
   140046480:	rex push rbp
   140046482:	sub    rsp,0x20
   140046486:	mov    rbp,rdx
   140046489:	mov    rdx,QWORD PTR [rbp+0x60]
   14004648d:	mov    rcx,QWORD PTR [rbp+0x58]
   140046491:	call   0x140016a70
   140046496:	add    rsp,0x20
   14004649a:	pop    rbp
   14004649b:	ret    
   14004649c:	int3   
   14004649d:	int3   
   14004649e:	int3   
   14004649f:	int3   
   1400464a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400464a5:	push   rbx
   1400464a6:	push   rbp
   1400464a7:	push   rdi
   1400464a8:	sub    rsp,0x20
   1400464ac:	mov    rbp,rdx
   1400464af:	mov    rbx,QWORD PTR [rbp+0x50]
   1400464b3:	mov    rdi,QWORD PTR [rbp+0x60]
   1400464b7:	cmp    rbx,rdi
   1400464ba:	je     0x1400464d1
   1400464bc:	nop    DWORD PTR [rax+0x0]
   1400464c0:	mov    rcx,rbx
   1400464c3:	call   0x140005240
   1400464c8:	add    rbx,0x28
   1400464cc:	cmp    rbx,rdi
   1400464cf:	jne    0x1400464c0
   1400464d1:	xor    edx,edx
   1400464d3:	xor    ecx,ecx
   1400464d5:	call   0x140036358
   1400464da:	nop
   1400464db:	int3   
   1400464dc:	int3   
   1400464dd:	int3   
   1400464de:	int3   
   1400464df:	int3   
   1400464e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400464e5:	push   rbp
   1400464e6:	sub    rsp,0x20
   1400464ea:	mov    rbp,rdx
   1400464ed:	mov    rcx,QWORD PTR [rbp+0x48]
   1400464f1:	call   0x1400330c0
   1400464f6:	xor    edx,edx
   1400464f8:	xor    ecx,ecx
   1400464fa:	call   0x140036358
   1400464ff:	nop
   140046500:	lea    rcx,[rdx+0x30]
   140046507:	jmp    0x140002990
   14004650c:	int3   
   14004650d:	int3   
   14004650e:	int3   
   14004650f:	int3   
   140046510:	lea    rcx,[rdx+0x40]
   140046517:	jmp    0x140005920
   14004651c:	int3   
   14004651d:	int3   
   14004651e:	int3   
   14004651f:	int3   
   140046520:	mov    rcx,QWORD PTR [rdx+0x60]
   140046527:	add    rcx,0x8
   14004652b:	jmp    0x140049080
   140046530:	mov    rcx,QWORD PTR [rdx+0x60]
   140046537:	add    rcx,0x70
   14004653b:	jmp    0x1400011d0
   140046540:	rex push rbp
   140046542:	sub    rsp,0x20
   140046546:	mov    rbp,rdx
   140046549:	mov    rdx,QWORD PTR [rbp+0x58]
   14004654d:	mov    rcx,QWORD PTR [rbp+0x28]
   140046551:	call   0x140016a70
   140046556:	add    rsp,0x20
   14004655a:	pop    rbp
   14004655b:	ret    
   14004655c:	int3   
   14004655d:	int3   
   14004655e:	int3   
   14004655f:	int3   
   140046560:	mov    QWORD PTR [rsp+0x10],rdx
   140046565:	push   rbp
   140046566:	sub    rsp,0x20
   14004656a:	mov    rbp,rdx
   14004656d:	mov    rcx,QWORD PTR [rbp+0x50]
   140046571:	call   0x1400330c0
   140046576:	xor    edx,edx
   140046578:	xor    ecx,ecx
   14004657a:	call   0x140036358
   14004657f:	nop
   140046580:	lea    rcx,[rdx+0x28]
   140046587:	jmp    0x140032250
   14004658c:	int3   
   14004658d:	int3   
   14004658e:	int3   
   14004658f:	int3   
   140046590:	lea    rcx,[rdx+0x38]
   140046597:	jmp    0x1400272d0
   14004659c:	int3   
   14004659d:	int3   
   14004659e:	int3   
   14004659f:	int3   
   1400465a0:	rex push rbp
   1400465a2:	sub    rsp,0x20
   1400465a6:	mov    rbp,rdx
   1400465a9:	mov    rdx,QWORD PTR [rbp+0x50]
   1400465ad:	mov    rcx,QWORD PTR [rbp+0x28]
   1400465b1:	call   0x140016a70
   1400465b6:	add    rsp,0x20
   1400465ba:	pop    rbp
   1400465bb:	ret    
   1400465bc:	int3   
   1400465bd:	int3   
   1400465be:	int3   
   1400465bf:	int3   
   1400465c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400465c5:	push   rbx
   1400465c6:	push   rbp
   1400465c7:	push   rdi
   1400465c8:	sub    rsp,0x20
   1400465cc:	mov    rbp,rdx
   1400465cf:	mov    rbx,QWORD PTR [rbp+0x40]
   1400465d3:	mov    rdi,QWORD PTR [rbp+0x50]
   1400465d7:	cmp    rbx,rdi
   1400465da:	je     0x14004660d
   1400465dc:	nop    DWORD PTR [rax+0x0]
   1400465e0:	mov    rcx,QWORD PTR [rbx]
   1400465e3:	test   rcx,rcx
   1400465e6:	je     0x1400465ed
   1400465e8:	call   0x1400330c0
   1400465ed:	mov    QWORD PTR [rbx],0x0
   1400465f4:	mov    QWORD PTR [rbx+0x8],0x0
   1400465fc:	mov    QWORD PTR [rbx+0x10],0x0
   140046604:	add    rbx,0x20
   140046608:	cmp    rbx,rdi
   14004660b:	jne    0x1400465e0
   14004660d:	xor    edx,edx
   14004660f:	xor    ecx,ecx
   140046611:	call   0x140036358
   140046616:	nop
   140046617:	int3   
   140046618:	int3   
   140046619:	int3   
   14004661a:	int3   
   14004661b:	int3   
   14004661c:	int3   
   14004661d:	int3   
   14004661e:	int3   
   14004661f:	int3   
   140046620:	rex push rbp
   140046622:	sub    rsp,0x20
   140046626:	mov    rbp,rdx
   140046629:	mov    rdx,QWORD PTR [rbp+0x58]
   14004662d:	mov    rcx,QWORD PTR [rbp+0x28]
   140046631:	call   0x140016a70
   140046636:	add    rsp,0x20
   14004663a:	pop    rbp
   14004663b:	ret    
   14004663c:	int3   
   14004663d:	int3   
   14004663e:	int3   
   14004663f:	int3   
   140046640:	mov    QWORD PTR [rsp+0x10],rdx
   140046645:	push   rbp
   140046646:	sub    rsp,0x20
   14004664a:	mov    rbp,rdx
   14004664d:	mov    rcx,QWORD PTR [rbp+0x50]
   140046651:	call   0x1400330c0
   140046656:	xor    edx,edx
   140046658:	xor    ecx,ecx
   14004665a:	call   0x140036358
   14004665f:	nop
   140046660:	mov    rcx,QWORD PTR [rdx+0x60]
   140046667:	jmp    0x1400279f0
   14004666c:	int3   
   14004666d:	int3   
   14004666e:	int3   
   14004666f:	int3   
   140046670:	mov    QWORD PTR [rsp+0x10],rdx
   140046675:	push   rbp
   140046676:	sub    rsp,0x20
   14004667a:	mov    rbp,rdx
   14004667d:	mov    rcx,QWORD PTR [rbp+0x48]
   140046681:	call   0x1400330c0
   140046686:	xor    edx,edx
   140046688:	xor    ecx,ecx
   14004668a:	call   0x140036358
   14004668f:	nop
   140046690:	lea    rcx,[rdx+0x40]
   140046697:	jmp    0x140023920
   14004669c:	int3   
   14004669d:	int3   
   14004669e:	int3   
   14004669f:	int3   
   1400466a0:	mov    rcx,QWORD PTR [rdx+0xc0]
   1400466a7:	jmp    0x1400279f0
   1400466ac:	int3   
   1400466ad:	int3   
   1400466ae:	int3   
   1400466af:	int3   
   1400466b0:	lea    rcx,[rdx+0x60]
   1400466b7:	jmp    0x140029310
   1400466bc:	int3   
   1400466bd:	int3   
   1400466be:	int3   
   1400466bf:	int3   
   1400466c0:	mov    rcx,QWORD PTR [rdx+0xb0]
   1400466c7:	jmp    0x1400279f0
   1400466cc:	int3   
   1400466cd:	int3   
   1400466ce:	int3   
   1400466cf:	int3   
   1400466d0:	lea    rcx,[rdx+0x40]
   1400466d7:	jmp    0x1400279f0
   1400466dc:	int3   
   1400466dd:	int3   
   1400466de:	int3   
   1400466df:	int3   
   1400466e0:	lea    rcx,[rdx+0x20]
   1400466e7:	jmp    0x1400238e0
   1400466ec:	int3   
   1400466ed:	int3   
   1400466ee:	int3   
   1400466ef:	int3   
   1400466f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400466f7:	jmp    0x1400279f0
   1400466fc:	int3   
   1400466fd:	int3   
   1400466fe:	int3   
   1400466ff:	int3   
   140046700:	lea    rcx,[rdx+0x20]
   140046707:	jmp    0x1400279f0
   14004670c:	int3   
   14004670d:	int3   
   14004670e:	int3   
   14004670f:	int3   
   140046710:	mov    rcx,QWORD PTR [rdx+0x48]
   140046717:	jmp    0x1400279f0
   14004671c:	int3   
   14004671d:	int3   
   14004671e:	int3   
   14004671f:	int3   
   140046720:	lea    rcx,[rdx+0x58]
   140046727:	jmp    0x1400238e0
   14004672c:	int3   
   14004672d:	int3   
   14004672e:	int3   
   14004672f:	int3   
   140046730:	mov    rcx,QWORD PTR [rdx+0x28]
   140046737:	jmp    0x1400279f0
   14004673c:	int3   
   14004673d:	int3   
   14004673e:	int3   
   14004673f:	int3   
   140046740:	lea    rcx,[rdx+0x58]
   140046747:	jmp    0x1400279f0
   14004674c:	int3   
   14004674d:	int3   
   14004674e:	int3   
   14004674f:	int3   
   140046750:	mov    rcx,QWORD PTR [rdx+0xc8]
   140046757:	jmp    0x1400279f0
   14004675c:	int3   
   14004675d:	int3   
   14004675e:	int3   
   14004675f:	int3   
   140046760:	lea    rcx,[rdx+0x28]
   140046767:	jmp    0x1400272d0
   14004676c:	int3   
   14004676d:	int3   
   14004676e:	int3   
   14004676f:	int3   
   140046770:	mov    rcx,QWORD PTR [rdx+0x40]
   140046777:	add    rcx,0x8
   14004677b:	jmp    0x140005240
   140046780:	mov    rcx,QWORD PTR [rdx+0x40]
   140046787:	add    rcx,0x40
   14004678b:	jmp    0x1400088f0
   140046790:	mov    rcx,QWORD PTR [rdx+0x40]
   140046797:	add    rcx,0x60
   14004679b:	jmp    0x1400272d0
   1400467a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400467a7:	add    rcx,0x80
   1400467ae:	jmp    0x140005240
   1400467b3:	int3   
   1400467b4:	int3   
   1400467b5:	int3   
   1400467b6:	int3   
   1400467b7:	int3   
   1400467b8:	int3   
   1400467b9:	int3   
   1400467ba:	int3   
   1400467bb:	int3   
   1400467bc:	int3   
   1400467bd:	int3   
   1400467be:	int3   
   1400467bf:	int3   
   1400467c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400467c7:	add    rcx,0xa8
   1400467ce:	jmp    0x1400272d0
   1400467d3:	int3   
   1400467d4:	int3   
   1400467d5:	int3   
   1400467d6:	int3   
   1400467d7:	int3   
   1400467d8:	int3   
   1400467d9:	int3   
   1400467da:	int3   
   1400467db:	int3   
   1400467dc:	int3   
   1400467dd:	int3   
   1400467de:	int3   
   1400467df:	int3   
   1400467e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400467e7:	add    rcx,0xc8
   1400467ee:	jmp    0x140005240
   1400467f3:	int3   
   1400467f4:	int3   
   1400467f5:	int3   
   1400467f6:	int3   
   1400467f7:	int3   
   1400467f8:	int3   
   1400467f9:	int3   
   1400467fa:	int3   
   1400467fb:	int3   
   1400467fc:	int3   
   1400467fd:	int3   
   1400467fe:	int3   
   1400467ff:	int3   
   140046800:	rex push rbp
   140046802:	sub    rsp,0x20
   140046806:	mov    rbp,rdx
   140046809:	mov    rdx,QWORD PTR [rbp+0x28]
   14004680d:	mov    rcx,QWORD PTR [rbp+0x30]
   140046811:	call   0x140016a70
   140046816:	add    rsp,0x20
   14004681a:	pop    rbp
   14004681b:	ret    
   14004681c:	int3   
   14004681d:	int3   
   14004681e:	int3   
   14004681f:	int3   
   140046820:	mov    QWORD PTR [rsp+0x10],rdx
   140046825:	push   rbp
   140046826:	sub    rsp,0x20
   14004682a:	mov    rbp,rdx
   14004682d:	mov    rcx,QWORD PTR [rbp+0x60]
   140046831:	call   0x1400330c0
   140046836:	xor    edx,edx
   140046838:	xor    ecx,ecx
   14004683a:	call   0x140036358
   14004683f:	nop
   140046840:	lea    rcx,[rdx+0x28]
   140046847:	jmp    0x1400272d0
   14004684c:	int3   
   14004684d:	int3   
   14004684e:	int3   
   14004684f:	int3   
   140046850:	lea    rcx,[rdx+0x48]
   140046857:	jmp    0x14002afa0
   14004685c:	int3   
   14004685d:	int3   
   14004685e:	int3   
   14004685f:	int3   
   140046860:	lea    rcx,[rdx+0x48]
   140046867:	jmp    0x1400272d0
   14004686c:	int3   
   14004686d:	int3   
   14004686e:	int3   
   14004686f:	int3   
   140046870:	lea    rcx,[rdx+0xa8]
   140046877:	jmp    0x1400272d0
   14004687c:	int3   
   14004687d:	int3   
   14004687e:	int3   
   14004687f:	int3   
   140046880:	lea    rcx,[rdx+0x78]
   140046887:	jmp    0x14002afa0
   14004688c:	int3   
   14004688d:	int3   
   14004688e:	int3   
   14004688f:	int3   
   140046890:	lea    rcx,[rdx+0x20]
   140046897:	jmp    0x1400272d0
   14004689c:	int3   
   14004689d:	int3   
   14004689e:	int3   
   14004689f:	int3   
   1400468a0:	lea    rcx,[rdx+0x60]
   1400468a7:	jmp    0x14002afa0
   1400468ac:	int3   
   1400468ad:	int3   
   1400468ae:	int3   
   1400468af:	int3   
   1400468b0:	lea    rcx,[rdx+0x90]
   1400468b7:	jmp    0x1400272d0
   1400468bc:	int3   
   1400468bd:	int3   
   1400468be:	int3   
   1400468bf:	int3   
   1400468c0:	lea    rcx,[rdx+0x20]
   1400468c7:	jmp    0x14002a530
   1400468cc:	int3   
   1400468cd:	int3   
   1400468ce:	int3   
   1400468cf:	int3   
   1400468d0:	lea    rcx,[rdx+0x20]
   1400468d7:	jmp    0x1400279f0
   1400468dc:	int3   
   1400468dd:	int3   
   1400468de:	int3   
   1400468df:	int3   
   1400468e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400468e5:	push   rbp
   1400468e6:	sub    rsp,0x20
   1400468ea:	mov    rbp,rdx
   1400468ed:	mov    rdx,QWORD PTR [rbp+0x50]
   1400468f1:	mov    rax,QWORD PTR [rdx+0x40]
   1400468f5:	mov    rcx,QWORD PTR [rbp+0x20]
   1400468f9:	mov    QWORD PTR [rcx+0x10],rax
   1400468fd:	mov    QWORD PTR [rdx+0x40],rcx
   140046901:	xor    edx,edx
   140046903:	xor    ecx,ecx
   140046905:	call   0x140036358
   14004690a:	nop
   14004690b:	int3   
   14004690c:	int3   
   14004690d:	int3   
   14004690e:	int3   
   14004690f:	int3   
   140046910:	mov    QWORD PTR [rsp+0x10],rdx
   140046915:	push   rbp
   140046916:	sub    rsp,0x20
   14004691a:	mov    rbp,rdx
   14004691d:	lea    rax,[rip+0xfffffffffffe254f]        # 0x140028e73
   140046924:	add    rsp,0x20
   140046928:	pop    rbp
   140046929:	ret    
   14004692a:	int3   
   14004692b:	int3   
   14004692c:	int3   
   14004692d:	int3   
   14004692e:	int3   
   14004692f:	int3   
   140046930:	mov    QWORD PTR [rsp+0x10],rdx
   140046935:	push   rbp
   140046936:	sub    rsp,0x20
   14004693a:	mov    rbp,rdx
   14004693d:	lea    rax,[rip+0xfffffffffffe250f]        # 0x140028e53
   140046944:	add    rsp,0x20
   140046948:	pop    rbp
   140046949:	ret    
   14004694a:	int3   
   14004694b:	int3   
   14004694c:	int3   
   14004694d:	int3   
   14004694e:	int3   
   14004694f:	int3   
   140046950:	lea    rcx,[rdx+0x78]
   140046957:	jmp    0x1400272d0
   14004695c:	int3   
   14004695d:	int3   
   14004695e:	int3   
   14004695f:	int3   
   140046960:	lea    rcx,[rdx+0x58]
   140046967:	jmp    0x1400272d0
   14004696c:	int3   
   14004696d:	int3   
   14004696e:	int3   
   14004696f:	int3   
   140046970:	mov    rcx,QWORD PTR [rdx+0x40]
   140046977:	jmp    0x14000c480
   14004697c:	int3   
   14004697d:	int3   
   14004697e:	int3   
   14004697f:	int3   
   140046980:	mov    rcx,QWORD PTR [rdx+0x58]
   140046987:	jmp    0x140032250
   14004698c:	int3   
   14004698d:	int3   
   14004698e:	int3   
   14004698f:	int3   
   140046990:	rex push rbp
   140046992:	sub    rsp,0x20
   140046996:	mov    rbp,rdx
   140046999:	mov    eax,DWORD PTR [rbp+0x58]
   14004699c:	and    eax,0x1
   14004699f:	test   eax,eax
   1400469a1:	je     0x1400469b0
   1400469a3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   1400469a7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400469ab:	call   0x140032250
   1400469b0:	add    rsp,0x20
   1400469b4:	pop    rbp
   1400469b5:	ret    
   1400469b6:	int3   
   1400469b7:	int3   
   1400469b8:	int3   
   1400469b9:	int3   
   1400469ba:	int3   
   1400469bb:	int3   
   1400469bc:	int3   
   1400469bd:	int3   
   1400469be:	int3   
   1400469bf:	int3   
   1400469c0:	lea    rcx,[rdx+0x30]
   1400469c7:	jmp    0x140005920
   1400469cc:	int3   
   1400469cd:	int3   
   1400469ce:	int3   
   1400469cf:	int3   
   1400469d0:	rex push rbp
   1400469d2:	sub    rsp,0x20
   1400469d6:	mov    rbp,rdx
   1400469d9:	mov    rdx,QWORD PTR [rbp+0x60]
   1400469dd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400469e1:	call   0x140016a70
   1400469e6:	add    rsp,0x20
   1400469ea:	pop    rbp
   1400469eb:	ret    
   1400469ec:	int3   
   1400469ed:	int3   
   1400469ee:	int3   
   1400469ef:	int3   
   1400469f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400469f5:	push   rbx
   1400469f6:	push   rbp
   1400469f7:	push   rdi
   1400469f8:	sub    rsp,0x20
   1400469fc:	mov    rbp,rdx
   1400469ff:	mov    rbx,QWORD PTR [rbp+0x50]
   140046a03:	mov    rdi,QWORD PTR [rbp+0x60]
   140046a07:	cmp    rbx,rdi
   140046a0a:	je     0x140046a3b
   140046a0c:	nop    DWORD PTR [rax+0x0]
   140046a10:	cmp    QWORD PTR [rbx+0x18],0x10
   140046a15:	jb     0x140046a1f
   140046a17:	mov    rcx,QWORD PTR [rbx]
   140046a1a:	call   0x1400330c0
   140046a1f:	mov    QWORD PTR [rbx+0x18],0xf
   140046a27:	mov    QWORD PTR [rbx+0x10],0x0
   140046a2f:	mov    BYTE PTR [rbx],0x0
   140046a32:	add    rbx,0x38
   140046a36:	cmp    rbx,rdi
   140046a39:	jne    0x140046a10
   140046a3b:	xor    edx,edx
   140046a3d:	xor    ecx,ecx
   140046a3f:	call   0x140036358
   140046a44:	nop
   140046a45:	int3   
   140046a46:	int3   
   140046a47:	int3   
   140046a48:	int3   
   140046a49:	int3   
   140046a4a:	int3   
   140046a4b:	int3   
   140046a4c:	int3   
   140046a4d:	int3   
   140046a4e:	int3   
   140046a4f:	int3   
   140046a50:	mov    QWORD PTR [rsp+0x10],rdx
   140046a55:	push   rbp
   140046a56:	sub    rsp,0x20
   140046a5a:	mov    rbp,rdx
   140046a5d:	mov    rcx,QWORD PTR [rbp+0x58]
   140046a61:	call   0x1400330c0
   140046a66:	xor    edx,edx
   140046a68:	xor    ecx,ecx
   140046a6a:	call   0x140036358
   140046a6f:	nop
   140046a70:	rex push rbp
   140046a72:	sub    rsp,0x20
   140046a76:	mov    rbp,rdx
   140046a79:	mov    rdx,QWORD PTR [rbp+0x40]
   140046a7d:	mov    rcx,QWORD PTR [rbp+0x48]
   140046a81:	call   0x140016a70
   140046a86:	add    rsp,0x20
   140046a8a:	pop    rbp
   140046a8b:	ret    
   140046a8c:	int3   
   140046a8d:	int3   
   140046a8e:	int3   
   140046a8f:	int3   
   140046a90:	rex push rbp
   140046a92:	sub    rsp,0x20
   140046a96:	mov    rbp,rdx
   140046a99:	mov    rdx,QWORD PTR [rbp+0x40]
   140046a9d:	mov    rcx,QWORD PTR [rbp+0x48]
   140046aa1:	call   0x140016a70
   140046aa6:	add    rsp,0x20
   140046aaa:	pop    rbp
   140046aab:	ret    
   140046aac:	int3   
   140046aad:	int3   
   140046aae:	int3   
   140046aaf:	int3   
   140046ab0:	lea    rcx,[rdx+0x60]
   140046ab7:	jmp    0x140005240
   140046abc:	int3   
   140046abd:	int3   
   140046abe:	int3   
   140046abf:	int3   
   140046ac0:	lea    rcx,[rdx+0x30]
   140046ac7:	jmp    0x140011a10
   140046acc:	int3   
   140046acd:	int3   
   140046ace:	int3   
   140046acf:	int3   
   140046ad0:	rex push rbp
   140046ad2:	sub    rsp,0x20
   140046ad6:	mov    rbp,rdx
   140046ad9:	mov    eax,DWORD PTR [rbp+0x70]
   140046adc:	and    eax,0x1
   140046adf:	test   eax,eax
   140046ae1:	je     0x140046af3
   140046ae3:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140046ae7:	mov    rcx,QWORD PTR [rbp+0x98]
   140046aee:	call   0x140005240
   140046af3:	add    rsp,0x20
   140046af7:	pop    rbp
   140046af8:	ret    
   140046af9:	int3   
   140046afa:	int3   
   140046afb:	int3   
   140046afc:	int3   
   140046afd:	int3   
   140046afe:	int3   
   140046aff:	int3   
   140046b00:	lea    rcx,[rdx+0x40]
   140046b07:	jmp    0x140002990
   140046b0c:	int3   
   140046b0d:	int3   
   140046b0e:	int3   
   140046b0f:	int3   
   140046b10:	lea    rcx,[rdx+0x58]
   140046b17:	jmp    0x140002990
   140046b1c:	int3   
   140046b1d:	int3   
   140046b1e:	int3   
   140046b1f:	int3   
   140046b20:	lea    rcx,[rdx+0x48]
   140046b27:	jmp    0x140002990
   140046b2c:	int3   
   140046b2d:	int3   
   140046b2e:	int3   
   140046b2f:	int3   
   140046b30:	lea    rcx,[rdx+0x50]
   140046b37:	jmp    0x140002990
   140046b3c:	int3   
   140046b3d:	int3   
   140046b3e:	int3   
   140046b3f:	int3   
   140046b40:	lea    rcx,[rdx+0xa0]
   140046b47:	jmp    0x140005920
   140046b4c:	int3   
   140046b4d:	int3   
   140046b4e:	int3   
   140046b4f:	int3   
   140046b50:	lea    rcx,[rdx+0x30]
   140046b57:	jmp    0x140002990
   140046b5c:	int3   
   140046b5d:	int3   
   140046b5e:	int3   
   140046b5f:	int3   
   140046b60:	lea    rcx,[rdx+0x38]
   140046b67:	jmp    0x140002990
   140046b6c:	int3   
   140046b6d:	int3   
   140046b6e:	int3   
   140046b6f:	int3   
   140046b70:	lea    rcx,[rdx+0x50]
   140046b77:	jmp    0x140005920
   140046b7c:	int3   
   140046b7d:	int3   
   140046b7e:	int3   
   140046b7f:	int3   
   140046b80:	lea    rcx,[rdx+0x38]
   140046b87:	jmp    0x140002990
   140046b8c:	int3   
   140046b8d:	int3   
   140046b8e:	int3   
   140046b8f:	int3   
   140046b90:	lea    rcx,[rdx+0x40]
   140046b97:	jmp    0x140002990
   140046b9c:	int3   
   140046b9d:	int3   
   140046b9e:	int3   
   140046b9f:	int3   
   140046ba0:	lea    rcx,[rdx+0x30]
   140046ba7:	jmp    0x140002990
   140046bac:	int3   
   140046bad:	int3   
   140046bae:	int3   
   140046baf:	int3   
   140046bb0:	lea    rcx,[rdx+0x48]
   140046bb7:	jmp    0x140002990
   140046bbc:	int3   
   140046bbd:	int3   
   140046bbe:	int3   
   140046bbf:	int3   
   140046bc0:	lea    rcx,[rdx+0x78]
   140046bc7:	jmp    0x14000e5c0
   140046bcc:	int3   
   140046bcd:	int3   
   140046bce:	int3   
   140046bcf:	int3   
   140046bd0:	mov    rcx,QWORD PTR [rdx+0x50]
   140046bd7:	add    rcx,0x8
   140046bdb:	jmp    0x140002990
   140046be0:	mov    rcx,QWORD PTR [rdx+0x50]
   140046be7:	add    rcx,0x10
   140046beb:	jmp    0x140002990
   140046bf0:	mov    rcx,QWORD PTR [rdx+0x50]
   140046bf7:	add    rcx,0x18
   140046bfb:	jmp    0x140002990
   140046c00:	mov    rcx,QWORD PTR [rdx+0x50]
   140046c07:	add    rcx,0x20
   140046c0b:	jmp    0x140002990
   140046c10:	mov    rcx,QWORD PTR [rdx+0x50]
   140046c17:	add    rcx,0x28
   140046c1b:	jmp    0x140002990
   140046c20:	mov    rcx,QWORD PTR [rdx+0x50]
   140046c27:	add    rcx,0x30
   140046c2b:	jmp    0x140002990
   140046c30:	mov    rcx,QWORD PTR [rdx+0x50]
   140046c37:	add    rcx,0x40
   140046c3b:	jmp    0x14000e5c0
   140046c40:	rex push rbp
   140046c42:	sub    rsp,0x20
   140046c46:	mov    rbp,rdx
   140046c49:	mov    rdx,QWORD PTR [rbp+0x58]
   140046c4d:	mov    rcx,QWORD PTR [rbp+0x28]
   140046c51:	call   0x140016a70
   140046c56:	add    rsp,0x20
   140046c5a:	pop    rbp
   140046c5b:	ret    
   140046c5c:	int3   
   140046c5d:	int3   
   140046c5e:	int3   
   140046c5f:	int3   
   140046c60:	mov    QWORD PTR [rsp+0x10],rdx
   140046c65:	push   rbp
   140046c66:	sub    rsp,0x20
   140046c6a:	mov    rbp,rdx
   140046c6d:	mov    rcx,QWORD PTR [rbp+0x50]
   140046c71:	call   0x1400330c0
   140046c76:	xor    edx,edx
   140046c78:	xor    ecx,ecx
   140046c7a:	call   0x140036358
   140046c7f:	nop
   140046c80:	lea    rcx,[rdx+0x70]
   140046c87:	jmp    0x140005920
   140046c8c:	int3   
   140046c8d:	int3   
   140046c8e:	int3   
   140046c8f:	int3   
   140046c90:	lea    rcx,[rdx+0x30]
   140046c97:	jmp    0x140005240
   140046c9c:	int3   
   140046c9d:	int3   
   140046c9e:	int3   
   140046c9f:	int3   
   140046ca0:	lea    rcx,[rdx+0x2098]
   140046ca7:	jmp    0x140005240
   140046cac:	int3   
   140046cad:	int3   
   140046cae:	int3   
   140046caf:	int3   
   140046cb0:	lea    rcx,[rdx+0x20c0]
   140046cb7:	jmp    0x140005920
   140046cbc:	int3   
   140046cbd:	int3   
   140046cbe:	int3   
   140046cbf:	int3   
   140046cc0:	lea    rcx,[rdx+0x20c0]
   140046cc7:	jmp    0x140005920
   140046ccc:	int3   
   140046ccd:	int3   
   140046cce:	int3   
   140046ccf:	int3   
   140046cd0:	lea    rcx,[rdx+0x60]
   140046cd7:	jmp    0x140005920
   140046cdc:	int3   
   140046cdd:	int3   
   140046cde:	int3   
   140046cdf:	int3   
   140046ce0:	mov    rcx,QWORD PTR [rdx+0x58]
   140046ce7:	add    rcx,0x8
   140046ceb:	jmp    0x140003400
   140046cf0:	mov    rcx,QWORD PTR [rdx+0x58]
   140046cf7:	add    rcx,0x28
   140046cfb:	jmp    0x140002990
   140046d00:	mov    rcx,QWORD PTR [rdx+0x58]
   140046d07:	add    rcx,0x30
   140046d0b:	jmp    0x140005240
   140046d10:	mov    rcx,QWORD PTR [rdx+0x58]
   140046d17:	add    rcx,0x58
   140046d1b:	jmp    0x140005240
   140046d20:	lea    rcx,[rdx+0x60]
   140046d27:	jmp    0x140005920
   140046d2c:	int3   
   140046d2d:	int3   
   140046d2e:	int3   
   140046d2f:	int3   
   140046d30:	lea    rcx,[rdx+0x60]
   140046d37:	jmp    0x140005920
   140046d3c:	int3   
   140046d3d:	int3   
   140046d3e:	int3   
   140046d3f:	int3   
   140046d40:	mov    rcx,QWORD PTR [rdx+0x50]
   140046d47:	add    rcx,0x8
   140046d4b:	jmp    0x140049080
   140046d50:	mov    rcx,QWORD PTR [rdx+0x58]
   140046d57:	jmp    0x1400279f0
   140046d5c:	int3   
   140046d5d:	int3   
   140046d5e:	int3   
   140046d5f:	int3   
   140046d60:	lea    rcx,[rdx+0xc0]
   140046d67:	jmp    0x140005920
   140046d6c:	int3   
   140046d6d:	int3   
   140046d6e:	int3   
   140046d6f:	int3   
   140046d70:	lea    rcx,[rdx+0x30]
   140046d77:	jmp    0x140005920
   140046d7c:	int3   
   140046d7d:	int3   
   140046d7e:	int3   
   140046d7f:	int3   
   140046d80:	mov    rcx,QWORD PTR [rdx+0x40]
   140046d87:	jmp    0x1400664d0
   140046d8c:	int3   
   140046d8d:	int3   
   140046d8e:	int3   
   140046d8f:	int3   
   140046d90:	mov    rcx,QWORD PTR [rdx+0x40]
   140046d97:	add    rcx,0x910
   140046d9e:	jmp    0x140018540
   140046da3:	int3   
   140046da4:	int3   
   140046da5:	int3   
   140046da6:	int3   
   140046da7:	int3   
   140046da8:	int3   
   140046da9:	int3   
   140046daa:	int3   
   140046dab:	int3   
   140046dac:	int3   
   140046dad:	int3   
   140046dae:	int3   
   140046daf:	int3   
   140046db0:	lea    rcx,[rdx+0x68]
   140046db7:	jmp    0x140005240
   140046dbc:	int3   
   140046dbd:	int3   
   140046dbe:	int3   
   140046dbf:	int3   
   140046dc0:	lea    rcx,[rdx+0x68]
   140046dc7:	jmp    0x1400272d0
   140046dcc:	int3   
   140046dcd:	int3   
   140046dce:	int3   
   140046dcf:	int3   
   140046dd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046dd7:	jmp    0x14001f620
   140046ddc:	int3   
   140046ddd:	int3   
   140046dde:	int3   
   140046ddf:	int3   
   140046de0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046de7:	add    rcx,0x20
   140046deb:	jmp    0x140029990
   140046df0:	mov    rcx,QWORD PTR [rdx+0x48]
   140046df7:	jmp    0x1400279f0
   140046dfc:	int3   
   140046dfd:	int3   
   140046dfe:	int3   
   140046dff:	int3   
   140046e00:	rex push rbp
   140046e02:	sub    rsp,0x20
   140046e06:	mov    rbp,rdx
   140046e09:	mov    eax,DWORD PTR [rbp+0x70]
   140046e0c:	and    eax,0x1
   140046e0f:	test   eax,eax
   140046e11:	je     0x140046e20
   140046e13:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140046e17:	mov    rcx,QWORD PTR [rbp+0x60]
   140046e1b:	call   0x140032250
   140046e20:	add    rsp,0x20
   140046e24:	pop    rbp
   140046e25:	ret    
   140046e26:	int3   
   140046e27:	int3   
   140046e28:	int3   
   140046e29:	int3   
   140046e2a:	int3   
   140046e2b:	int3   
   140046e2c:	int3   
   140046e2d:	int3   
   140046e2e:	int3   
   140046e2f:	int3   
   140046e30:	rex push rbp
   140046e32:	sub    rsp,0x20
   140046e36:	mov    rbp,rdx
   140046e39:	mov    eax,DWORD PTR [rbp+0x68]
   140046e3c:	and    eax,0x1
   140046e3f:	test   eax,eax
   140046e41:	je     0x140046e50
   140046e43:	and    DWORD PTR [rbp+0x68],0xfffffffe
   140046e47:	mov    rcx,QWORD PTR [rbp+0x60]
   140046e4b:	call   0x140032250
   140046e50:	add    rsp,0x20
   140046e54:	pop    rbp
   140046e55:	ret    
   140046e56:	int3   
   140046e57:	int3   
   140046e58:	int3   
   140046e59:	int3   
   140046e5a:	int3   
   140046e5b:	int3   
   140046e5c:	int3   
   140046e5d:	int3   
   140046e5e:	int3   
   140046e5f:	int3   
   140046e60:	lea    rcx,[rdx+0x48]
   140046e67:	jmp    0x140031440
   140046e6c:	int3   
   140046e6d:	int3   
   140046e6e:	int3   
   140046e6f:	int3   
   140046e70:	lea    rcx,[rdx+0x68]
   140046e77:	jmp    0x140032250
   140046e7c:	int3   
   140046e7d:	int3   
   140046e7e:	int3   
   140046e7f:	int3   
   140046e80:	lea    rcx,[rdx+0x38]
   140046e87:	jmp    0x140032250
   140046e8c:	int3   
   140046e8d:	int3   
   140046e8e:	int3   
   140046e8f:	int3   
   140046e90:	mov    rcx,QWORD PTR [rdx+0x40]
   140046e97:	jmp    0x14001f620
   140046e9c:	int3   
   140046e9d:	int3   
   140046e9e:	int3   
   140046e9f:	int3   
   140046ea0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046ea7:	add    rcx,0x8
   140046eab:	jmp    0x1400128b0
   140046eb0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046eb7:	add    rcx,0x38
   140046ebb:	jmp    0x1400318a0
   140046ec0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046ec7:	add    rcx,0xbb0
   140046ece:	jmp    0x140049d10
   140046ed3:	int3   
   140046ed4:	int3   
   140046ed5:	int3   
   140046ed6:	int3   
   140046ed7:	int3   
   140046ed8:	int3   
   140046ed9:	int3   
   140046eda:	int3   
   140046edb:	int3   
   140046edc:	int3   
   140046edd:	int3   
   140046ede:	int3   
   140046edf:	int3   
   140046ee0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046ee7:	add    rcx,0xc10
   140046eee:	jmp    0x140031440
   140046ef3:	int3   
   140046ef4:	int3   
   140046ef5:	int3   
   140046ef6:	int3   
   140046ef7:	int3   
   140046ef8:	int3   
   140046ef9:	int3   
   140046efa:	int3   
   140046efb:	int3   
   140046efc:	int3   
   140046efd:	int3   
   140046efe:	int3   
   140046eff:	int3   
   140046f00:	mov    rcx,QWORD PTR [rdx+0x40]
   140046f07:	add    rcx,0xc28
   140046f0e:	jmp    0x140031440
   140046f13:	int3   
   140046f14:	int3   
   140046f15:	int3   
   140046f16:	int3   
   140046f17:	int3   
   140046f18:	int3   
   140046f19:	int3   
   140046f1a:	int3   
   140046f1b:	int3   
   140046f1c:	int3   
   140046f1d:	int3   
   140046f1e:	int3   
   140046f1f:	int3   
   140046f20:	mov    rcx,QWORD PTR [rdx+0x40]
   140046f27:	add    rcx,0xc40
   140046f2e:	jmp    0x140032250
   140046f33:	int3   
   140046f34:	int3   
   140046f35:	int3   
   140046f36:	int3   
   140046f37:	int3   
   140046f38:	int3   
   140046f39:	int3   
   140046f3a:	int3   
   140046f3b:	int3   
   140046f3c:	int3   
   140046f3d:	int3   
   140046f3e:	int3   
   140046f3f:	int3   
   140046f40:	mov    rcx,QWORD PTR [rdx+0x40]
   140046f47:	add    rcx,0xc48
   140046f4e:	jmp    0x140032250
   140046f53:	int3   
   140046f54:	int3   
   140046f55:	int3   
   140046f56:	int3   
   140046f57:	int3   
   140046f58:	int3   
   140046f59:	int3   
   140046f5a:	int3   
   140046f5b:	int3   
   140046f5c:	int3   
   140046f5d:	int3   
   140046f5e:	int3   
   140046f5f:	int3   
   140046f60:	mov    rcx,QWORD PTR [rdx+0x40]
   140046f67:	add    rcx,0xc50
   140046f6e:	jmp    0x140032250
   140046f73:	int3   
   140046f74:	int3   
   140046f75:	int3   
   140046f76:	int3   
   140046f77:	int3   
   140046f78:	int3   
   140046f79:	int3   
   140046f7a:	int3   
   140046f7b:	int3   
   140046f7c:	int3   
   140046f7d:	int3   
   140046f7e:	int3   
   140046f7f:	int3   
   140046f80:	mov    rcx,QWORD PTR [rdx+0x40]
   140046f87:	add    rcx,0xc58
   140046f8e:	jmp    0x140032250
   140046f93:	int3   
   140046f94:	int3   
   140046f95:	int3   
   140046f96:	int3   
   140046f97:	int3   
   140046f98:	int3   
   140046f99:	int3   
   140046f9a:	int3   
   140046f9b:	int3   
   140046f9c:	int3   
   140046f9d:	int3   
   140046f9e:	int3   
   140046f9f:	int3   
   140046fa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046fa7:	add    rcx,0xc70
   140046fae:	jmp    0x140032250
   140046fb3:	int3   
   140046fb4:	int3   
   140046fb5:	int3   
   140046fb6:	int3   
   140046fb7:	int3   
   140046fb8:	int3   
   140046fb9:	int3   
   140046fba:	int3   
   140046fbb:	int3   
   140046fbc:	int3   
   140046fbd:	int3   
   140046fbe:	int3   
   140046fbf:	int3   
   140046fc0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046fc7:	add    rcx,0xc78
   140046fce:	jmp    0x140032250
   140046fd3:	int3   
   140046fd4:	int3   
   140046fd5:	int3   
   140046fd6:	int3   
   140046fd7:	int3   
   140046fd8:	int3   
   140046fd9:	int3   
   140046fda:	int3   
   140046fdb:	int3   
   140046fdc:	int3   
   140046fdd:	int3   
   140046fde:	int3   
   140046fdf:	int3   
   140046fe0:	mov    rcx,QWORD PTR [rdx+0x40]
   140046fe7:	add    rcx,0xc80
   140046fee:	jmp    0x140032250
   140046ff3:	int3   
   140046ff4:	int3   
   140046ff5:	int3   
   140046ff6:	int3   
   140046ff7:	int3   
   140046ff8:	int3   
   140046ff9:	int3   
   140046ffa:	int3   
   140046ffb:	int3   
   140046ffc:	int3   
   140046ffd:	int3   
   140046ffe:	int3   
   140046fff:	int3   
   140047000:	mov    rcx,QWORD PTR [rdx+0x40]
   140047007:	add    rcx,0xc88
   14004700e:	jmp    0x140032250
   140047013:	int3   
   140047014:	int3   
   140047015:	int3   
   140047016:	int3   
   140047017:	int3   
   140047018:	int3   
   140047019:	int3   
   14004701a:	int3   
   14004701b:	int3   
   14004701c:	int3   
   14004701d:	int3   
   14004701e:	int3   
   14004701f:	int3   
   140047020:	mov    rcx,QWORD PTR [rdx+0x40]
   140047027:	add    rcx,0xc90
   14004702e:	jmp    0x140032250
   140047033:	int3   
   140047034:	int3   
   140047035:	int3   
   140047036:	int3   
   140047037:	int3   
   140047038:	int3   
   140047039:	int3   
   14004703a:	int3   
   14004703b:	int3   
   14004703c:	int3   
   14004703d:	int3   
   14004703e:	int3   
   14004703f:	int3   
   140047040:	mov    rcx,QWORD PTR [rdx+0x40]
   140047047:	add    rcx,0xc98
   14004704e:	jmp    0x140032250
   140047053:	int3   
   140047054:	int3   
   140047055:	int3   
   140047056:	int3   
   140047057:	int3   
   140047058:	int3   
   140047059:	int3   
   14004705a:	int3   
   14004705b:	int3   
   14004705c:	int3   
   14004705d:	int3   
   14004705e:	int3   
   14004705f:	int3   
   140047060:	mov    rcx,QWORD PTR [rdx+0x40]
   140047067:	add    rcx,0xca0
   14004706e:	jmp    0x140032250
   140047073:	int3   
   140047074:	int3   
   140047075:	int3   
   140047076:	int3   
   140047077:	int3   
   140047078:	int3   
   140047079:	int3   
   14004707a:	int3   
   14004707b:	int3   
   14004707c:	int3   
   14004707d:	int3   
   14004707e:	int3   
   14004707f:	int3   
   140047080:	mov    rcx,QWORD PTR [rdx+0x40]
   140047087:	add    rcx,0xcb8
   14004708e:	jmp    0x14002cdd0
   140047093:	int3   
   140047094:	int3   
   140047095:	int3   
   140047096:	int3   
   140047097:	int3   
   140047098:	int3   
   140047099:	int3   
   14004709a:	int3   
   14004709b:	int3   
   14004709c:	int3   
   14004709d:	int3   
   14004709e:	int3   
   14004709f:	int3   
   1400470a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400470a7:	add    rcx,0xdf8
   1400470ae:	jmp    0x140028e40
   1400470b3:	int3   
   1400470b4:	int3   
   1400470b5:	int3   
   1400470b6:	int3   
   1400470b7:	int3   
   1400470b8:	int3   
   1400470b9:	int3   
   1400470ba:	int3   
   1400470bb:	int3   
   1400470bc:	int3   
   1400470bd:	int3   
   1400470be:	int3   
   1400470bf:	int3   
   1400470c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400470c7:	add    rcx,0xe40
   1400470ce:	jmp    0x140028e60
   1400470d3:	int3   
   1400470d4:	int3   
   1400470d5:	int3   
   1400470d6:	int3   
   1400470d7:	int3   
   1400470d8:	int3   
   1400470d9:	int3   
   1400470da:	int3   
   1400470db:	int3   
   1400470dc:	int3   
   1400470dd:	int3   
   1400470de:	int3   
   1400470df:	int3   
   1400470e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400470e7:	add    rcx,0xe88
   1400470ee:	jmp    0x140028e60
   1400470f3:	int3   
   1400470f4:	int3   
   1400470f5:	int3   
   1400470f6:	int3   
   1400470f7:	int3   
   1400470f8:	int3   
   1400470f9:	int3   
   1400470fa:	int3   
   1400470fb:	int3   
   1400470fc:	int3   
   1400470fd:	int3   
   1400470fe:	int3   
   1400470ff:	int3   
   140047100:	mov    rcx,QWORD PTR [rdx+0x40]
   140047107:	add    rcx,0xed0
   14004710e:	jmp    0x140028e80
   140047113:	int3   
   140047114:	int3   
   140047115:	int3   
   140047116:	int3   
   140047117:	int3   
   140047118:	int3   
   140047119:	int3   
   14004711a:	int3   
   14004711b:	int3   
   14004711c:	int3   
   14004711d:	int3   
   14004711e:	int3   
   14004711f:	int3   
   140047120:	mov    rcx,QWORD PTR [rdx+0x40]
   140047127:	add    rcx,0xef8
   14004712e:	jmp    0x140021030
   140047133:	int3   
   140047134:	int3   
   140047135:	int3   
   140047136:	int3   
   140047137:	int3   
   140047138:	int3   
   140047139:	int3   
   14004713a:	int3   
   14004713b:	int3   
   14004713c:	int3   
   14004713d:	int3   
   14004713e:	int3   
   14004713f:	int3   
   140047140:	mov    rcx,QWORD PTR [rdx+0x40]
   140047147:	add    rcx,0xf28
   14004714e:	jmp    0x140001210
   140047153:	int3   
   140047154:	int3   
   140047155:	int3   
   140047156:	int3   
   140047157:	int3   
   140047158:	int3   
   140047159:	int3   
   14004715a:	int3   
   14004715b:	int3   
   14004715c:	int3   
   14004715d:	int3   
   14004715e:	int3   
   14004715f:	int3   
   140047160:	mov    rcx,QWORD PTR [rdx+0x70]
   140047167:	jmp    0x14001f620
   14004716c:	int3   
   14004716d:	int3   
   14004716e:	int3   
   14004716f:	int3   
   140047170:	mov    rcx,QWORD PTR [rdx+0x70]
   140047177:	add    rcx,0x8
   14004717b:	jmp    0x1400128b0
   140047180:	mov    rcx,QWORD PTR [rdx+0x80]
   140047187:	jmp    0x1400664d0
   14004718c:	int3   
   14004718d:	int3   
   14004718e:	int3   
   14004718f:	int3   
   140047190:	mov    rcx,QWORD PTR [rdx+0x70]
   140047197:	add    rcx,0x38
   14004719b:	jmp    0x1400318a0
   1400471a0:	mov    rcx,QWORD PTR [rdx+0x80]
   1400471a7:	add    rcx,0x10
   1400471ab:	jmp    0x14002a530
   1400471b0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400471b7:	add    rcx,0xbb0
   1400471be:	jmp    0x140049d10
   1400471c3:	int3   
   1400471c4:	int3   
   1400471c5:	int3   
   1400471c6:	int3   
   1400471c7:	int3   
   1400471c8:	int3   
   1400471c9:	int3   
   1400471ca:	int3   
   1400471cb:	int3   
   1400471cc:	int3   
   1400471cd:	int3   
   1400471ce:	int3   
   1400471cf:	int3   
   1400471d0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400471d7:	add    rcx,0xc10
   1400471de:	jmp    0x140031440
   1400471e3:	int3   
   1400471e4:	int3   
   1400471e5:	int3   
   1400471e6:	int3   
   1400471e7:	int3   
   1400471e8:	int3   
   1400471e9:	int3   
   1400471ea:	int3   
   1400471eb:	int3   
   1400471ec:	int3   
   1400471ed:	int3   
   1400471ee:	int3   
   1400471ef:	int3   
   1400471f0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400471f7:	add    rcx,0xc28
   1400471fe:	jmp    0x140031440
   140047203:	int3   
   140047204:	int3   
   140047205:	int3   
   140047206:	int3   
   140047207:	int3   
   140047208:	int3   
   140047209:	int3   
   14004720a:	int3   
   14004720b:	int3   
   14004720c:	int3   
   14004720d:	int3   
   14004720e:	int3   
   14004720f:	int3   
   140047210:	mov    rcx,QWORD PTR [rdx+0x70]
   140047217:	add    rcx,0xc40
   14004721e:	jmp    0x140032250
   140047223:	int3   
   140047224:	int3   
   140047225:	int3   
   140047226:	int3   
   140047227:	int3   
   140047228:	int3   
   140047229:	int3   
   14004722a:	int3   
   14004722b:	int3   
   14004722c:	int3   
   14004722d:	int3   
   14004722e:	int3   
   14004722f:	int3   
   140047230:	mov    rcx,QWORD PTR [rdx+0x70]
   140047237:	add    rcx,0xc48
   14004723e:	jmp    0x140032250
   140047243:	int3   
   140047244:	int3   
   140047245:	int3   
   140047246:	int3   
   140047247:	int3   
   140047248:	int3   
   140047249:	int3   
   14004724a:	int3   
   14004724b:	int3   
   14004724c:	int3   
   14004724d:	int3   
   14004724e:	int3   
   14004724f:	int3   
   140047250:	mov    rcx,QWORD PTR [rdx+0x70]
   140047257:	add    rcx,0xc50
   14004725e:	jmp    0x140032250
   140047263:	int3   
   140047264:	int3   
   140047265:	int3   
   140047266:	int3   
   140047267:	int3   
   140047268:	int3   
   140047269:	int3   
   14004726a:	int3   
   14004726b:	int3   
   14004726c:	int3   
   14004726d:	int3   
   14004726e:	int3   
   14004726f:	int3   
   140047270:	mov    rcx,QWORD PTR [rdx+0x70]
   140047277:	add    rcx,0xc58
   14004727e:	jmp    0x140032250
   140047283:	int3   
   140047284:	int3   
   140047285:	int3   
   140047286:	int3   
   140047287:	int3   
   140047288:	int3   
   140047289:	int3   
   14004728a:	int3   
   14004728b:	int3   
   14004728c:	int3   
   14004728d:	int3   
   14004728e:	int3   
   14004728f:	int3   
   140047290:	mov    rcx,QWORD PTR [rdx+0x70]
   140047297:	add    rcx,0xc70
   14004729e:	jmp    0x140032250
   1400472a3:	int3   
   1400472a4:	int3   
   1400472a5:	int3   
   1400472a6:	int3   
   1400472a7:	int3   
   1400472a8:	int3   
   1400472a9:	int3   
   1400472aa:	int3   
   1400472ab:	int3   
   1400472ac:	int3   
   1400472ad:	int3   
   1400472ae:	int3   
   1400472af:	int3   
   1400472b0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400472b7:	add    rcx,0xc78
   1400472be:	jmp    0x140032250
   1400472c3:	int3   
   1400472c4:	int3   
   1400472c5:	int3   
   1400472c6:	int3   
   1400472c7:	int3   
   1400472c8:	int3   
   1400472c9:	int3   
   1400472ca:	int3   
   1400472cb:	int3   
   1400472cc:	int3   
   1400472cd:	int3   
   1400472ce:	int3   
   1400472cf:	int3   
   1400472d0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400472d7:	add    rcx,0xc80
   1400472de:	jmp    0x140032250
   1400472e3:	int3   
   1400472e4:	int3   
   1400472e5:	int3   
   1400472e6:	int3   
   1400472e7:	int3   
   1400472e8:	int3   
   1400472e9:	int3   
   1400472ea:	int3   
   1400472eb:	int3   
   1400472ec:	int3   
   1400472ed:	int3   
   1400472ee:	int3   
   1400472ef:	int3   
   1400472f0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400472f7:	add    rcx,0xc88
   1400472fe:	jmp    0x140032250
   140047303:	int3   
   140047304:	int3   
   140047305:	int3   
   140047306:	int3   
   140047307:	int3   
   140047308:	int3   
   140047309:	int3   
   14004730a:	int3   
   14004730b:	int3   
   14004730c:	int3   
   14004730d:	int3   
   14004730e:	int3   
   14004730f:	int3   
   140047310:	mov    rcx,QWORD PTR [rdx+0x70]
   140047317:	add    rcx,0xc90
   14004731e:	jmp    0x140032250
   140047323:	int3   
   140047324:	int3   
   140047325:	int3   
   140047326:	int3   
   140047327:	int3   
   140047328:	int3   
   140047329:	int3   
   14004732a:	int3   
   14004732b:	int3   
   14004732c:	int3   
   14004732d:	int3   
   14004732e:	int3   
   14004732f:	int3   
   140047330:	mov    rcx,QWORD PTR [rdx+0x70]
   140047337:	add    rcx,0xc98
   14004733e:	jmp    0x140032250
   140047343:	int3   
   140047344:	int3   
   140047345:	int3   
   140047346:	int3   
   140047347:	int3   
   140047348:	int3   
   140047349:	int3   
   14004734a:	int3   
   14004734b:	int3   
   14004734c:	int3   
   14004734d:	int3   
   14004734e:	int3   
   14004734f:	int3   
   140047350:	mov    rcx,QWORD PTR [rdx+0x70]
   140047357:	add    rcx,0xca0
   14004735e:	jmp    0x140032250
   140047363:	int3   
   140047364:	int3   
   140047365:	int3   
   140047366:	int3   
   140047367:	int3   
   140047368:	int3   
   140047369:	int3   
   14004736a:	int3   
   14004736b:	int3   
   14004736c:	int3   
   14004736d:	int3   
   14004736e:	int3   
   14004736f:	int3   
   140047370:	mov    rcx,QWORD PTR [rdx+0x70]
   140047377:	add    rcx,0xcb8
   14004737e:	jmp    0x14002cdd0
   140047383:	int3   
   140047384:	int3   
   140047385:	int3   
   140047386:	int3   
   140047387:	int3   
   140047388:	int3   
   140047389:	int3   
   14004738a:	int3   
   14004738b:	int3   
   14004738c:	int3   
   14004738d:	int3   
   14004738e:	int3   
   14004738f:	int3   
   140047390:	mov    rcx,QWORD PTR [rdx+0x70]
   140047397:	add    rcx,0xdf8
   14004739e:	jmp    0x140028e40
   1400473a3:	int3   
   1400473a4:	int3   
   1400473a5:	int3   
   1400473a6:	int3   
   1400473a7:	int3   
   1400473a8:	int3   
   1400473a9:	int3   
   1400473aa:	int3   
   1400473ab:	int3   
   1400473ac:	int3   
   1400473ad:	int3   
   1400473ae:	int3   
   1400473af:	int3   
   1400473b0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400473b7:	add    rcx,0xe40
   1400473be:	jmp    0x140028e60
   1400473c3:	int3   
   1400473c4:	int3   
   1400473c5:	int3   
   1400473c6:	int3   
   1400473c7:	int3   
   1400473c8:	int3   
   1400473c9:	int3   
   1400473ca:	int3   
   1400473cb:	int3   
   1400473cc:	int3   
   1400473cd:	int3   
   1400473ce:	int3   
   1400473cf:	int3   
   1400473d0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400473d7:	add    rcx,0xe88
   1400473de:	jmp    0x140028e60
   1400473e3:	int3   
   1400473e4:	int3   
   1400473e5:	int3   
   1400473e6:	int3   
   1400473e7:	int3   
   1400473e8:	int3   
   1400473e9:	int3   
   1400473ea:	int3   
   1400473eb:	int3   
   1400473ec:	int3   
   1400473ed:	int3   
   1400473ee:	int3   
   1400473ef:	int3   
   1400473f0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400473f7:	add    rcx,0xed0
   1400473fe:	jmp    0x140028e80
   140047403:	int3   
   140047404:	int3   
   140047405:	int3   
   140047406:	int3   
   140047407:	int3   
   140047408:	int3   
   140047409:	int3   
   14004740a:	int3   
   14004740b:	int3   
   14004740c:	int3   
   14004740d:	int3   
   14004740e:	int3   
   14004740f:	int3   
   140047410:	mov    rcx,QWORD PTR [rdx+0x70]
   140047417:	add    rcx,0xef8
   14004741e:	jmp    0x140021030
   140047423:	int3   
   140047424:	int3   
   140047425:	int3   
   140047426:	int3   
   140047427:	int3   
   140047428:	int3   
   140047429:	int3   
   14004742a:	int3   
   14004742b:	int3   
   14004742c:	int3   
   14004742d:	int3   
   14004742e:	int3   
   14004742f:	int3   
   140047430:	mov    rcx,QWORD PTR [rdx+0x70]
   140047437:	add    rcx,0xf28
   14004743e:	jmp    0x140001210
   140047443:	int3   
   140047444:	int3   
   140047445:	int3   
   140047446:	int3   
   140047447:	int3   
   140047448:	int3   
   140047449:	int3   
   14004744a:	int3   
   14004744b:	int3   
   14004744c:	int3   
   14004744d:	int3   
   14004744e:	int3   
   14004744f:	int3   
   140047450:	mov    rcx,QWORD PTR [rdx+0x40]
   140047457:	jmp    0x140006420
   14004745c:	int3   
   14004745d:	int3   
   14004745e:	int3   
   14004745f:	int3   
   140047460:	mov    rcx,QWORD PTR [rdx+0x40]
   140047467:	jmp    0x140032250
   14004746c:	int3   
   14004746d:	int3   
   14004746e:	int3   
   14004746f:	int3   
   140047470:	rex push rbp
   140047472:	sub    rsp,0x20
   140047476:	mov    rbp,rdx
   140047479:	mov    eax,DWORD PTR [rbp+0x30]
   14004747c:	and    eax,0x1
   14004747f:	test   eax,eax
   140047481:	je     0x140047490
   140047483:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140047487:	mov    rcx,QWORD PTR [rbp+0x58]
   14004748b:	call   0x140005240
   140047490:	add    rsp,0x20
   140047494:	pop    rbp
   140047495:	ret    
   140047496:	int3   
   140047497:	int3   
   140047498:	int3   
   140047499:	int3   
   14004749a:	int3   
   14004749b:	int3   
   14004749c:	int3   
   14004749d:	int3   
   14004749e:	int3   
   14004749f:	int3   
   1400474a0:	lea    rcx,[rdx+0x128]
   1400474a7:	jmp    0x140005240
   1400474ac:	int3   
   1400474ad:	int3   
   1400474ae:	int3   
   1400474af:	int3   
   1400474b0:	lea    rcx,[rdx+0x100]
   1400474b7:	jmp    0x140005240
   1400474bc:	int3   
   1400474bd:	int3   
   1400474be:	int3   
   1400474bf:	int3   
   1400474c0:	lea    rcx,[rdx+0xd8]
   1400474c7:	jmp    0x140005240
   1400474cc:	int3   
   1400474cd:	int3   
   1400474ce:	int3   
   1400474cf:	int3   
   1400474d0:	lea    rcx,[rdx+0xb0]
   1400474d7:	jmp    0x140005240
   1400474dc:	int3   
   1400474dd:	int3   
   1400474de:	int3   
   1400474df:	int3   
   1400474e0:	lea    rcx,[rdx+0x88]
   1400474e7:	jmp    0x140005240
   1400474ec:	int3   
   1400474ed:	int3   
   1400474ee:	int3   
   1400474ef:	int3   
   1400474f0:	lea    rcx,[rdx+0x150]
   1400474f7:	jmp    0x140005240
   1400474fc:	int3   
   1400474fd:	int3   
   1400474fe:	int3   
   1400474ff:	int3   
   140047500:	lea    rcx,[rdx+0x60]
   140047507:	jmp    0x140005240
   14004750c:	int3   
   14004750d:	int3   
   14004750e:	int3   
   14004750f:	int3   
   140047510:	rex push rbp
   140047512:	sub    rsp,0x20
   140047516:	mov    rbp,rdx
   140047519:	mov    eax,DWORD PTR [rbp+0x30]
   14004751c:	and    eax,0x2
   14004751f:	test   eax,eax
   140047521:	je     0x140047533
   140047523:	and    DWORD PTR [rbp+0x30],0xfffffffd
   140047527:	lea    rcx,[rbp+0x210]
   14004752e:	call   0x140005920
   140047533:	add    rsp,0x20
   140047537:	pop    rbp
   140047538:	ret    
   140047539:	int3   
   14004753a:	int3   
   14004753b:	int3   
   14004753c:	int3   
   14004753d:	int3   
   14004753e:	int3   
   14004753f:	int3   
   140047540:	lea    rcx,[rdx+0x150]
   140047547:	jmp    0x140005240
   14004754c:	int3   
   14004754d:	int3   
   14004754e:	int3   
   14004754f:	int3   
   140047550:	lea    rcx,[rdx+0x150]
   140047557:	jmp    0x140005240
   14004755c:	int3   
   14004755d:	int3   
   14004755e:	int3   
   14004755f:	int3   
   140047560:	lea    rcx,[rdx+0x90]
   140047567:	jmp    0x140005920
   14004756c:	int3   
   14004756d:	int3   
   14004756e:	int3   
   14004756f:	int3   
   140047570:	lea    rcx,[rdx+0x50]
   140047577:	jmp    0x140005920
   14004757c:	int3   
   14004757d:	int3   
   14004757e:	int3   
   14004757f:	int3   
   140047580:	lea    rcx,[rdx+0x28]
   140047587:	jmp    0x140005240
   14004758c:	int3   
   14004758d:	int3   
   14004758e:	int3   
   14004758f:	int3   
   140047590:	mov    rcx,QWORD PTR [rdx+0x40]
   140047597:	jmp    0x14000ee50
   14004759c:	int3   
   14004759d:	int3   
   14004759e:	int3   
   14004759f:	int3   
   1400475a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400475a7:	jmp    0x1400279f0
   1400475ac:	int3   
   1400475ad:	int3   
   1400475ae:	int3   
   1400475af:	int3   
   1400475b0:	rex push rbp
   1400475b2:	sub    rsp,0x20
   1400475b6:	mov    rbp,rdx
   1400475b9:	mov    eax,DWORD PTR [rbp+0x20]
   1400475bc:	and    eax,0x1
   1400475bf:	test   eax,eax
   1400475c1:	je     0x1400475d0
   1400475c3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400475c7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400475cb:	call   0x140005240
   1400475d0:	add    rsp,0x20
   1400475d4:	pop    rbp
   1400475d5:	ret    
   1400475d6:	int3   
   1400475d7:	int3   
   1400475d8:	int3   
   1400475d9:	int3   
   1400475da:	int3   
   1400475db:	int3   
   1400475dc:	int3   
   1400475dd:	int3   
   1400475de:	int3   
   1400475df:	int3   
   1400475e0:	lea    rcx,[rdx+0x40]
   1400475e7:	jmp    0x140005920
   1400475ec:	int3   
   1400475ed:	int3   
   1400475ee:	int3   
   1400475ef:	int3   
   1400475f0:	lea    rcx,[rdx+0xe0]
   1400475f7:	jmp    0x140005920
   1400475fc:	int3   
   1400475fd:	int3   
   1400475fe:	int3   
   1400475ff:	int3   
   140047600:	mov    rcx,QWORD PTR [rdx+0x40]
   140047607:	add    rcx,0x18
   14004760b:	jmp    0x140006440
   140047610:	mov    rcx,QWORD PTR [rdx+0x40]
   140047617:	jmp    0x1400279f0
   14004761c:	int3   
   14004761d:	int3   
   14004761e:	int3   
   14004761f:	int3   
   140047620:	lea    rcx,[rdx+0x50]
   140047627:	jmp    0x140002990
   14004762c:	int3   
   14004762d:	int3   
   14004762e:	int3   
   14004762f:	int3   
   140047630:	lea    rcx,[rdx+0x28]
   140047637:	jmp    0x140002990
   14004763c:	int3   
   14004763d:	int3   
   14004763e:	int3   
   14004763f:	int3   
   140047640:	lea    rcx,[rdx+0x20]
   140047647:	jmp    0x140002990
   14004764c:	int3   
   14004764d:	int3   
   14004764e:	int3   
   14004764f:	int3   
   140047650:	rex push rbp
   140047652:	sub    rsp,0x20
   140047656:	mov    rbp,rdx
   140047659:	mov    eax,DWORD PTR [rbp+0x38]
   14004765c:	and    eax,0x1
   14004765f:	test   eax,eax
   140047661:	je     0x140047670
   140047663:	and    DWORD PTR [rbp+0x38],0xfffffffe
   140047667:	lea    rcx,[rbp+0x60]
   14004766b:	call   0x140005920
   140047670:	add    rsp,0x20
   140047674:	pop    rbp
   140047675:	ret    
   140047676:	int3   
   140047677:	int3   
   140047678:	int3   
   140047679:	int3   
   14004767a:	int3   
   14004767b:	int3   
   14004767c:	int3   
   14004767d:	int3   
   14004767e:	int3   
   14004767f:	int3   
   140047680:	mov    rcx,QWORD PTR [rdx+0x38]
   140047687:	jmp    0x1400330c0
   14004768c:	int3   
   14004768d:	int3   
   14004768e:	int3   
   14004768f:	int3   
   140047690:	lea    rcx,[rdx+0x38]
   140047697:	jmp    0x140002990
   14004769c:	int3   
   14004769d:	int3   
   14004769e:	int3   
   14004769f:	int3   
   1400476a0:	lea    rcx,[rdx+0x48]
   1400476a7:	jmp    0x140002990
   1400476ac:	int3   
   1400476ad:	int3   
   1400476ae:	int3   
   1400476af:	int3   
   1400476b0:	lea    rcx,[rdx+0x68]
   1400476b7:	jmp    0x140002990
   1400476bc:	int3   
   1400476bd:	int3   
   1400476be:	int3   
   1400476bf:	int3   
   1400476c0:	lea    rcx,[rdx+0x40]
   1400476c7:	jmp    0x140002990
   1400476cc:	int3   
   1400476cd:	int3   
   1400476ce:	int3   
   1400476cf:	int3   
   1400476d0:	lea    rcx,[rdx+0x50]
   1400476d7:	jmp    0x140002990
   1400476dc:	int3   
   1400476dd:	int3   
   1400476de:	int3   
   1400476df:	int3   
   1400476e0:	lea    rcx,[rdx+0x30]
   1400476e7:	jmp    0x140002990
   1400476ec:	int3   
   1400476ed:	int3   
   1400476ee:	int3   
   1400476ef:	int3   
   1400476f0:	lea    rcx,[rdx+0x58]
   1400476f7:	jmp    0x140002990
   1400476fc:	int3   
   1400476fd:	int3   
   1400476fe:	int3   
   1400476ff:	int3   
   140047700:	lea    rcx,[rdx+0x70]
   140047707:	jmp    0x140032250
   14004770c:	int3   
   14004770d:	int3   
   14004770e:	int3   
   14004770f:	int3   
   140047710:	lea    rcx,[rdx+0x78]
   140047717:	jmp    0x140032250
   14004771c:	int3   
   14004771d:	int3   
   14004771e:	int3   
   14004771f:	int3   
   140047720:	mov    rcx,QWORD PTR [rdx+0x60]
   140047727:	jmp    0x1400330c0
   14004772c:	int3   
   14004772d:	int3   
   14004772e:	int3   
   14004772f:	int3   
   140047730:	mov    rcx,QWORD PTR [rdx+0x60]
   140047737:	jmp    0x1400330c0
   14004773c:	int3   
   14004773d:	int3   
   14004773e:	int3   
   14004773f:	int3   
   140047740:	lea    rcx,[rdx+0x20]
   140047747:	jmp    0x140023920
   14004774c:	int3   
   14004774d:	int3   
   14004774e:	int3   
   14004774f:	int3   
   140047750:	lea    rcx,[rdx+0x40]
   140047757:	jmp    0x140023920
   14004775c:	int3   
   14004775d:	int3   
   14004775e:	int3   
   14004775f:	int3   
   140047760:	lea    rcx,[rdx+0x40]
   140047767:	jmp    0x1400279f0
   14004776c:	int3   
   14004776d:	int3   
   14004776e:	int3   
   14004776f:	int3   
   140047770:	lea    rcx,[rdx+0x20]
   140047777:	jmp    0x1400279f0
   14004777c:	int3   
   14004777d:	int3   
   14004777e:	int3   
   14004777f:	int3   
   140047780:	lea    rcx,[rdx+0x30]
   140047787:	jmp    0x140032250
   14004778c:	int3   
   14004778d:	int3   
   14004778e:	int3   
   14004778f:	int3   
   140047790:	lea    rcx,[rdx+0x60]
   140047797:	jmp    0x140032250
   14004779c:	int3   
   14004779d:	int3   
   14004779e:	int3   
   14004779f:	int3   
   1400477a0:	lea    rcx,[rdx+0x28]
   1400477a7:	jmp    0x140005240
   1400477ac:	int3   
   1400477ad:	int3   
   1400477ae:	int3   
   1400477af:	int3   
   1400477b0:	lea    rcx,[rdx+0xc0]
   1400477b7:	jmp    0x140031440
   1400477bc:	int3   
   1400477bd:	int3   
   1400477be:	int3   
   1400477bf:	int3   
   1400477c0:	lea    rcx,[rdx+0x98]
   1400477c7:	jmp    0x140032250
   1400477cc:	int3   
   1400477cd:	int3   
   1400477ce:	int3   
   1400477cf:	int3   
   1400477d0:	lea    rcx,[rdx+0x60]
   1400477d7:	jmp    0x1400238e0
   1400477dc:	int3   
   1400477dd:	int3   
   1400477de:	int3   
   1400477df:	int3   
   1400477e0:	lea    rcx,[rdx+0xa0]
   1400477e7:	jmp    0x140023920
   1400477ec:	int3   
   1400477ed:	int3   
   1400477ee:	int3   
   1400477ef:	int3   
   1400477f0:	lea    rcx,[rdx+0xa0]
   1400477f7:	jmp    0x1400279f0
   1400477fc:	int3   
   1400477fd:	int3   
   1400477fe:	int3   
   1400477ff:	int3   
   140047800:	lea    rcx,[rdx+0x60]
   140047807:	jmp    0x1400279f0
   14004780c:	int3   
   14004780d:	int3   
   14004780e:	int3   
   14004780f:	int3   
   140047810:	mov    rcx,QWORD PTR [rdx+0xd8]
   140047817:	jmp    0x1400279f0
   14004781c:	int3   
   14004781d:	int3   
   14004781e:	int3   
   14004781f:	int3   
   140047820:	lea    rcx,[rdx+0x60]
   140047827:	jmp    0x140005240
   14004782c:	int3   
   14004782d:	int3   
   14004782e:	int3   
   14004782f:	int3   
   140047830:	lea    rcx,[rdx+0x88]
   140047837:	jmp    0x140005240
   14004783c:	int3   
   14004783d:	int3   
   14004783e:	int3   
   14004783f:	int3   
   140047840:	rex push rbp
   140047842:	sub    rsp,0x20
   140047846:	mov    rbp,rdx
   140047849:	mov    rax,QWORD PTR [rbp+0x50]
   14004784d:	imul   rax,rax,0x8
   140047851:	mov    rdx,QWORD PTR [rbp+0x48]
   140047855:	mov    rdx,QWORD PTR [rdx]
   140047858:	add    rdx,rax
   14004785b:	mov    rcx,QWORD PTR [rbp+0x58]
   14004785f:	call   0x140016a70
   140047864:	add    rsp,0x20
   140047868:	pop    rbp
   140047869:	ret    
   14004786a:	int3   
   14004786b:	int3   
   14004786c:	int3   
   14004786d:	int3   
   14004786e:	int3   
   14004786f:	int3   
   140047870:	mov    rcx,QWORD PTR [rdx+0x58]
   140047877:	jmp    0x140032250
   14004787c:	int3   
   14004787d:	int3   
   14004787e:	int3   
   14004787f:	int3   
   140047880:	rex push rbp
   140047882:	sub    rsp,0x20
   140047886:	mov    rbp,rdx
   140047889:	mov    eax,DWORD PTR [rbp+0x30]
   14004788c:	and    eax,0x1
   14004788f:	test   eax,eax
   140047891:	je     0x1400478a0
   140047893:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140047897:	mov    rcx,QWORD PTR [rbp+0x70]
   14004789b:	call   0x140032250
   1400478a0:	add    rsp,0x20
   1400478a4:	pop    rbp
   1400478a5:	ret    
   1400478a6:	int3   
   1400478a7:	int3   
   1400478a8:	int3   
   1400478a9:	int3   
   1400478aa:	int3   
   1400478ab:	int3   
   1400478ac:	int3   
   1400478ad:	int3   
   1400478ae:	int3   
   1400478af:	int3   
   1400478b0:	lea    rcx,[rdx+0x58]
   1400478b7:	jmp    0x1400147a0
   1400478bc:	int3   
   1400478bd:	int3   
   1400478be:	int3   
   1400478bf:	int3   
   1400478c0:	lea    rcx,[rdx+0x30]
   1400478c7:	jmp    0x140032250
   1400478cc:	int3   
   1400478cd:	int3   
   1400478ce:	int3   
   1400478cf:	int3   
   1400478d0:	lea    rcx,[rdx+0x30]
   1400478d7:	jmp    0x140032250
   1400478dc:	int3   
   1400478dd:	int3   
   1400478de:	int3   
   1400478df:	int3   
   1400478e0:	lea    rcx,[rdx+0x30]
   1400478e7:	jmp    0x140032250
   1400478ec:	int3   
   1400478ed:	int3   
   1400478ee:	int3   
   1400478ef:	int3   
   1400478f0:	lea    rcx,[rdx+0x40]
   1400478f7:	jmp    0x140005920
   1400478fc:	int3   
   1400478fd:	int3   
   1400478fe:	int3   
   1400478ff:	int3   
   140047900:	lea    rcx,[rdx+0x80]
   140047907:	jmp    0x140005920
   14004790c:	int3   
   14004790d:	int3   
   14004790e:	int3   
   14004790f:	int3   
   140047910:	lea    rcx,[rdx+0x50]
   140047917:	jmp    0x140005240
   14004791c:	int3   
   14004791d:	int3   
   14004791e:	int3   
   14004791f:	int3   
   140047920:	lea    rcx,[rdx+0x70]
   140047927:	jmp    0x140005920
   14004792c:	int3   
   14004792d:	int3   
   14004792e:	int3   
   14004792f:	int3   
   140047930:	lea    rcx,[rdx+0x48]
   140047937:	jmp    0x140005240
   14004793c:	int3   
   14004793d:	int3   
   14004793e:	int3   
   14004793f:	int3   
   140047940:	lea    rcx,[rdx+0x50]
   140047947:	jmp    0x140005920
   14004794c:	int3   
   14004794d:	int3   
   14004794e:	int3   
   14004794f:	int3   
   140047950:	lea    rcx,[rdx+0x50]
   140047957:	jmp    0x140005920
   14004795c:	int3   
   14004795d:	int3   
   14004795e:	int3   
   14004795f:	int3   
   140047960:	lea    rcx,[rdx+0x68]
   140047967:	jmp    0x140032250
   14004796c:	int3   
   14004796d:	int3   
   14004796e:	int3   
   14004796f:	int3   
   140047970:	lea    rcx,[rdx+0x68]
   140047977:	jmp    0x140032250
   14004797c:	int3   
   14004797d:	int3   
   14004797e:	int3   
   14004797f:	int3   
   140047980:	lea    rcx,[rdx+0xe8]
   140047987:	jmp    0x140005240
   14004798c:	int3   
   14004798d:	int3   
   14004798e:	int3   
   14004798f:	int3   
   140047990:	lea    rcx,[rdx+0x20]
   140047997:	jmp    0x14000ee50
   14004799c:	int3   
   14004799d:	int3   
   14004799e:	int3   
   14004799f:	int3   
   1400479a0:	lea    rcx,[rdx+0x20]
   1400479a7:	jmp    0x14000ee90
   1400479ac:	int3   
   1400479ad:	int3   
   1400479ae:	int3   
   1400479af:	int3   
   1400479b0:	lea    rcx,[rdx+0xc0]
   1400479b7:	jmp    0x140005240
   1400479bc:	int3   
   1400479bd:	int3   
   1400479be:	int3   
   1400479bf:	int3   
   1400479c0:	lea    rcx,[rdx+0x98]
   1400479c7:	jmp    0x140005240
   1400479cc:	int3   
   1400479cd:	int3   
   1400479ce:	int3   
   1400479cf:	int3   
   1400479d0:	lea    rcx,[rdx+0x70]
   1400479d7:	jmp    0x140005240
   1400479dc:	int3   
   1400479dd:	int3   
   1400479de:	int3   
   1400479df:	int3   
   1400479e0:	lea    rcx,[rdx+0x20]
   1400479e7:	jmp    0x14000ee50
   1400479ec:	int3   
   1400479ed:	int3   
   1400479ee:	int3   
   1400479ef:	int3   
   1400479f0:	lea    rcx,[rdx+0x20]
   1400479f7:	jmp    0x1400279f0
   1400479fc:	int3   
   1400479fd:	int3   
   1400479fe:	int3   
   1400479ff:	int3   
   140047a00:	lea    rcx,[rdx+0x48]
   140047a07:	jmp    0x140005240
   140047a0c:	int3   
   140047a0d:	int3   
   140047a0e:	int3   
   140047a0f:	int3   
   140047a10:	lea    rcx,[rdx+0x70]
   140047a17:	jmp    0x140005240
   140047a1c:	int3   
   140047a1d:	int3   
   140047a1e:	int3   
   140047a1f:	int3   
   140047a20:	rex push rbp
   140047a22:	sub    rsp,0x20
   140047a26:	mov    rbp,rdx
   140047a29:	mov    eax,DWORD PTR [rbp+0x20]
   140047a2c:	and    eax,0x1
   140047a2f:	test   eax,eax
   140047a31:	je     0x140047a40
   140047a33:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140047a37:	mov    rcx,QWORD PTR [rbp+0x30]
   140047a3b:	call   0x140005240
   140047a40:	add    rsp,0x20
   140047a44:	pop    rbp
   140047a45:	ret    
   140047a46:	int3   
   140047a47:	int3   
   140047a48:	int3   
   140047a49:	int3   
   140047a4a:	int3   
   140047a4b:	int3   
   140047a4c:	int3   
   140047a4d:	int3   
   140047a4e:	int3   
   140047a4f:	int3   
   140047a50:	lea    rcx,[rdx+0x30]
   140047a57:	jmp    0x14000a2a0
   140047a5c:	int3   
   140047a5d:	int3   
   140047a5e:	int3   
   140047a5f:	int3   
   140047a60:	lea    rcx,[rdx+0x68]
   140047a67:	jmp    0x140005240
   140047a6c:	int3   
   140047a6d:	int3   
   140047a6e:	int3   
   140047a6f:	int3   
   140047a70:	lea    rcx,[rdx+0x90]
   140047a77:	jmp    0x140005240
   140047a7c:	int3   
   140047a7d:	int3   
   140047a7e:	int3   
   140047a7f:	int3   
   140047a80:	lea    rcx,[rdx+0x40]
   140047a87:	jmp    0x140005240
   140047a8c:	int3   
   140047a8d:	int3   
   140047a8e:	int3   
   140047a8f:	int3   
   140047a90:	lea    rcx,[rdx+0xd0]
   140047a97:	jmp    0x140005920
   140047a9c:	int3   
   140047a9d:	int3   
   140047a9e:	int3   
   140047a9f:	int3   
   140047aa0:	lea    rcx,[rdx+0x48]
   140047aa7:	jmp    0x1400088f0
   140047aac:	int3   
   140047aad:	int3   
   140047aae:	int3   
   140047aaf:	int3   
   140047ab0:	lea    rcx,[rdx+0xa0]
   140047ab7:	jmp    0x140005240
   140047abc:	int3   
   140047abd:	int3   
   140047abe:	int3   
   140047abf:	int3   
   140047ac0:	rex push rbp
   140047ac2:	sub    rsp,0x20
   140047ac6:	mov    rbp,rdx
   140047ac9:	mov    rdx,QWORD PTR [rbp+0x70]
   140047acd:	mov    rcx,QWORD PTR [rbp+0x68]
   140047ad1:	call   0x140016a70
   140047ad6:	add    rsp,0x20
   140047ada:	pop    rbp
   140047adb:	ret    
   140047adc:	int3   
   140047add:	int3   
   140047ade:	int3   
   140047adf:	int3   
   140047ae0:	lea    rcx,[rdx+0xa0]
   140047ae7:	jmp    0x140005240
   140047aec:	int3   
   140047aed:	int3   
   140047aee:	int3   
   140047aef:	int3   
   140047af0:	rex push rbp
   140047af2:	sub    rsp,0x20
   140047af6:	mov    rbp,rdx
   140047af9:	mov    rdx,QWORD PTR [rbp+0x70]
   140047afd:	mov    rcx,QWORD PTR [rbp+0x68]
   140047b01:	call   0x140016a70
   140047b06:	add    rsp,0x20
   140047b0a:	pop    rbp
   140047b0b:	ret    
   140047b0c:	int3   
   140047b0d:	int3   
   140047b0e:	int3   
   140047b0f:	int3   
   140047b10:	rex push rbp
   140047b12:	sub    rsp,0x20
   140047b16:	mov    rbp,rdx
   140047b19:	mov    rdx,QWORD PTR [rbp+0x70]
   140047b1d:	mov    rcx,QWORD PTR [rbp+0x68]
   140047b21:	call   0x140016a70
   140047b26:	add    rsp,0x20
   140047b2a:	pop    rbp
   140047b2b:	ret    
   140047b2c:	int3   
   140047b2d:	int3   
   140047b2e:	int3   
   140047b2f:	int3   
   140047b30:	lea    rcx,[rdx+0xa0]
   140047b37:	jmp    0x140005240
   140047b3c:	int3   
   140047b3d:	int3   
   140047b3e:	int3   
   140047b3f:	int3   
   140047b40:	rex push rbp
   140047b42:	sub    rsp,0x20
   140047b46:	mov    rbp,rdx
   140047b49:	mov    rdx,QWORD PTR [rbp+0x70]
   140047b4d:	mov    rcx,QWORD PTR [rbp+0x68]
   140047b51:	call   0x140016a70
   140047b56:	add    rsp,0x20
   140047b5a:	pop    rbp
   140047b5b:	ret    
   140047b5c:	int3   
   140047b5d:	int3   
   140047b5e:	int3   
   140047b5f:	int3   
   140047b60:	lea    rcx,[rdx+0xa0]
   140047b67:	jmp    0x140005240
   140047b6c:	int3   
   140047b6d:	int3   
   140047b6e:	int3   
   140047b6f:	int3   
   140047b70:	lea    rcx,[rdx+0xa0]
   140047b77:	jmp    0x140005240
   140047b7c:	int3   
   140047b7d:	int3   
   140047b7e:	int3   
   140047b7f:	int3   
   140047b80:	lea    rcx,[rdx+0xa0]
   140047b87:	jmp    0x140005240
   140047b8c:	int3   
   140047b8d:	int3   
   140047b8e:	int3   
   140047b8f:	int3   
   140047b90:	lea    rcx,[rdx+0xa0]
   140047b97:	jmp    0x140005240
   140047b9c:	int3   
   140047b9d:	int3   
   140047b9e:	int3   
   140047b9f:	int3   
   140047ba0:	lea    rcx,[rdx+0xa0]
   140047ba7:	jmp    0x140005240
   140047bac:	int3   
   140047bad:	int3   
   140047bae:	int3   
   140047baf:	int3   
   140047bb0:	lea    rcx,[rdx+0xa0]
   140047bb7:	jmp    0x140005240
   140047bbc:	int3   
   140047bbd:	int3   
   140047bbe:	int3   
   140047bbf:	int3   
   140047bc0:	lea    rcx,[rdx+0xd0]
   140047bc7:	jmp    0x140005920
   140047bcc:	int3   
   140047bcd:	int3   
   140047bce:	int3   
   140047bcf:	int3   
   140047bd0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047bd7:	jmp    0x140006420
   140047bdc:	int3   
   140047bdd:	int3   
   140047bde:	int3   
   140047bdf:	int3   
   140047be0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047be7:	add    rcx,0x50
   140047beb:	jmp    0x1400026b0
   140047bf0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047bf7:	add    rcx,0x1b0
   140047bfe:	jmp    0x140005940
   140047c03:	int3   
   140047c04:	int3   
   140047c05:	int3   
   140047c06:	int3   
   140047c07:	int3   
   140047c08:	int3   
   140047c09:	int3   
   140047c0a:	int3   
   140047c0b:	int3   
   140047c0c:	int3   
   140047c0d:	int3   
   140047c0e:	int3   
   140047c0f:	int3   
   140047c10:	mov    rcx,QWORD PTR [rdx+0x70]
   140047c17:	add    rcx,0x1d0
   140047c1e:	jmp    0x140004e70
   140047c23:	int3   
   140047c24:	int3   
   140047c25:	int3   
   140047c26:	int3   
   140047c27:	int3   
   140047c28:	int3   
   140047c29:	int3   
   140047c2a:	int3   
   140047c2b:	int3   
   140047c2c:	int3   
   140047c2d:	int3   
   140047c2e:	int3   
   140047c2f:	int3   
   140047c30:	mov    rcx,QWORD PTR [rdx+0x70]
   140047c37:	add    rcx,0x208
   140047c3e:	jmp    0x140004e70
   140047c43:	int3   
   140047c44:	int3   
   140047c45:	int3   
   140047c46:	int3   
   140047c47:	int3   
   140047c48:	int3   
   140047c49:	int3   
   140047c4a:	int3   
   140047c4b:	int3   
   140047c4c:	int3   
   140047c4d:	int3   
   140047c4e:	int3   
   140047c4f:	int3   
   140047c50:	mov    rcx,QWORD PTR [rdx+0x70]
   140047c57:	add    rcx,0x240
   140047c5e:	jmp    0x1400272d0
   140047c63:	int3   
   140047c64:	int3   
   140047c65:	int3   
   140047c66:	int3   
   140047c67:	int3   
   140047c68:	int3   
   140047c69:	int3   
   140047c6a:	int3   
   140047c6b:	int3   
   140047c6c:	int3   
   140047c6d:	int3   
   140047c6e:	int3   
   140047c6f:	int3   
   140047c70:	mov    rcx,QWORD PTR [rdx+0x70]
   140047c77:	add    rcx,0x260
   140047c7e:	jmp    0x140006440
   140047c83:	int3   
   140047c84:	int3   
   140047c85:	int3   
   140047c86:	int3   
   140047c87:	int3   
   140047c88:	int3   
   140047c89:	int3   
   140047c8a:	int3   
   140047c8b:	int3   
   140047c8c:	int3   
   140047c8d:	int3   
   140047c8e:	int3   
   140047c8f:	int3   
   140047c90:	mov    rcx,QWORD PTR [rdx+0x70]
   140047c97:	add    rcx,0x280
   140047c9e:	jmp    0x140005240
   140047ca3:	int3   
   140047ca4:	int3   
   140047ca5:	int3   
   140047ca6:	int3   
   140047ca7:	int3   
   140047ca8:	int3   
   140047ca9:	int3   
   140047caa:	int3   
   140047cab:	int3   
   140047cac:	int3   
   140047cad:	int3   
   140047cae:	int3   
   140047caf:	int3   
   140047cb0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047cb7:	add    rcx,0x2a8
   140047cbe:	jmp    0x14000e580
   140047cc3:	int3   
   140047cc4:	int3   
   140047cc5:	int3   
   140047cc6:	int3   
   140047cc7:	int3   
   140047cc8:	int3   
   140047cc9:	int3   
   140047cca:	int3   
   140047ccb:	int3   
   140047ccc:	int3   
   140047ccd:	int3   
   140047cce:	int3   
   140047ccf:	int3   
   140047cd0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047cd7:	add    rcx,0x2b0
   140047cde:	jmp    0x140032250
   140047ce3:	int3   
   140047ce4:	int3   
   140047ce5:	int3   
   140047ce6:	int3   
   140047ce7:	int3   
   140047ce8:	int3   
   140047ce9:	int3   
   140047cea:	int3   
   140047ceb:	int3   
   140047cec:	int3   
   140047ced:	int3   
   140047cee:	int3   
   140047cef:	int3   
   140047cf0:	mov    rcx,QWORD PTR [rdx+0x70]
   140047cf7:	add    rcx,0x2c0
   140047cfe:	jmp    0x140005240
   140047d03:	int3   
   140047d04:	int3   
   140047d05:	int3   
   140047d06:	int3   
   140047d07:	int3   
   140047d08:	int3   
   140047d09:	int3   
   140047d0a:	int3   
   140047d0b:	int3   
   140047d0c:	int3   
   140047d0d:	int3   
   140047d0e:	int3   
   140047d0f:	int3   
   140047d10:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d17:	jmp    0x1400279f0
   140047d1c:	int3   
   140047d1d:	int3   
   140047d1e:	int3   
   140047d1f:	int3   
   140047d20:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d27:	add    rcx,0x18
   140047d2b:	jmp    0x140006440
   140047d30:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d37:	jmp    0x1400279f0
   140047d3c:	int3   
   140047d3d:	int3   
   140047d3e:	int3   
   140047d3f:	int3   
   140047d40:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d47:	add    rcx,0x18
   140047d4b:	jmp    0x140006440
   140047d50:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d57:	jmp    0x1400279f0
   140047d5c:	int3   
   140047d5d:	int3   
   140047d5e:	int3   
   140047d5f:	int3   
   140047d60:	mov    rcx,QWORD PTR [rdx+0x78]
   140047d67:	add    rcx,0x40
   140047d6b:	jmp    0x140002990
   140047d70:	mov    rcx,QWORD PTR [rdx+0x40]
   140047d77:	jmp    0x140006420
   140047d7c:	int3   
   140047d7d:	int3   
   140047d7e:	int3   
   140047d7f:	int3   
   140047d80:	mov    rcx,QWORD PTR [rdx+0x40]
   140047d87:	add    rcx,0x50
   140047d8b:	jmp    0x1400026b0
   140047d90:	mov    rcx,QWORD PTR [rdx+0x40]
   140047d97:	add    rcx,0x1b0
   140047d9e:	jmp    0x140005940
   140047da3:	int3   
   140047da4:	int3   
   140047da5:	int3   
   140047da6:	int3   
   140047da7:	int3   
   140047da8:	int3   
   140047da9:	int3   
   140047daa:	int3   
   140047dab:	int3   
   140047dac:	int3   
   140047dad:	int3   
   140047dae:	int3   
   140047daf:	int3   
   140047db0:	mov    rcx,QWORD PTR [rdx+0x40]
   140047db7:	add    rcx,0x1d0
   140047dbe:	jmp    0x140004e70
   140047dc3:	int3   
   140047dc4:	int3   
   140047dc5:	int3   
   140047dc6:	int3   
   140047dc7:	int3   
   140047dc8:	int3   
   140047dc9:	int3   
   140047dca:	int3   
   140047dcb:	int3   
   140047dcc:	int3   
   140047dcd:	int3   
   140047dce:	int3   
   140047dcf:	int3   
   140047dd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140047dd7:	add    rcx,0x208
   140047dde:	jmp    0x140004e70
   140047de3:	int3   
   140047de4:	int3   
   140047de5:	int3   
   140047de6:	int3   
   140047de7:	int3   
   140047de8:	int3   
   140047de9:	int3   
   140047dea:	int3   
   140047deb:	int3   
   140047dec:	int3   
   140047ded:	int3   
   140047dee:	int3   
   140047def:	int3   
   140047df0:	mov    rcx,QWORD PTR [rdx+0x40]
   140047df7:	add    rcx,0x240
   140047dfe:	jmp    0x1400272d0
   140047e03:	int3   
   140047e04:	int3   
   140047e05:	int3   
   140047e06:	int3   
   140047e07:	int3   
   140047e08:	int3   
   140047e09:	int3   
   140047e0a:	int3   
   140047e0b:	int3   
   140047e0c:	int3   
   140047e0d:	int3   
   140047e0e:	int3   
   140047e0f:	int3   
   140047e10:	mov    rcx,QWORD PTR [rdx+0x40]
   140047e17:	add    rcx,0x260
   140047e1e:	jmp    0x140006440
   140047e23:	int3   
   140047e24:	int3   
   140047e25:	int3   
   140047e26:	int3   
   140047e27:	int3   
   140047e28:	int3   
   140047e29:	int3   
   140047e2a:	int3   
   140047e2b:	int3   
   140047e2c:	int3   
   140047e2d:	int3   
   140047e2e:	int3   
   140047e2f:	int3   
   140047e30:	mov    rcx,QWORD PTR [rdx+0x40]
   140047e37:	add    rcx,0x280
   140047e3e:	jmp    0x140005240
   140047e43:	int3   
   140047e44:	int3   
   140047e45:	int3   
   140047e46:	int3   
   140047e47:	int3   
   140047e48:	int3   
   140047e49:	int3   
   140047e4a:	int3   
   140047e4b:	int3   
   140047e4c:	int3   
   140047e4d:	int3   
   140047e4e:	int3   
   140047e4f:	int3   
   140047e50:	mov    rcx,QWORD PTR [rdx+0x48]
   140047e57:	jmp    0x1400330c0
   140047e5c:	int3   
   140047e5d:	int3   
   140047e5e:	int3   
   140047e5f:	int3   
   140047e60:	mov    rcx,QWORD PTR [rdx+0x40]
   140047e67:	add    rcx,0x2a8
   140047e6e:	jmp    0x14000e580
   140047e73:	int3   
   140047e74:	int3   
   140047e75:	int3   
   140047e76:	int3   
   140047e77:	int3   
   140047e78:	int3   
   140047e79:	int3   
   140047e7a:	int3   
   140047e7b:	int3   
   140047e7c:	int3   
   140047e7d:	int3   
   140047e7e:	int3   
   140047e7f:	int3   
   140047e80:	mov    rcx,QWORD PTR [rdx+0x40]
   140047e87:	add    rcx,0x2b0
   140047e8e:	jmp    0x140032250
   140047e93:	int3   
   140047e94:	int3   
   140047e95:	int3   
   140047e96:	int3   
   140047e97:	int3   
   140047e98:	int3   
   140047e99:	int3   
   140047e9a:	int3   
   140047e9b:	int3   
   140047e9c:	int3   
   140047e9d:	int3   
   140047e9e:	int3   
   140047e9f:	int3   
   140047ea0:	mov    rcx,QWORD PTR [rdx+0x40]
   140047ea7:	add    rcx,0x2c0
   140047eae:	jmp    0x140005240
   140047eb3:	int3   
   140047eb4:	int3   
   140047eb5:	int3   
   140047eb6:	int3   
   140047eb7:	int3   
   140047eb8:	int3   
   140047eb9:	int3   
   140047eba:	int3   
   140047ebb:	int3   
   140047ebc:	int3   
   140047ebd:	int3   
   140047ebe:	int3   
   140047ebf:	int3   
   140047ec0:	mov    rcx,QWORD PTR [rdx+0x50]
   140047ec7:	jmp    0x1400330c0
   140047ecc:	int3   
   140047ecd:	int3   
   140047ece:	int3   
   140047ecf:	int3   
   140047ed0:	lea    rcx,[rdx+0x28]
   140047ed7:	jmp    0x14000ee50
   140047edc:	int3   
   140047edd:	int3   
   140047ede:	int3   
   140047edf:	int3   
   140047ee0:	lea    rcx,[rdx+0x28]
   140047ee7:	jmp    0x14000ee90
   140047eec:	int3   
   140047eed:	int3   
   140047eee:	int3   
   140047eef:	int3   
   140047ef0:	lea    rcx,[rdx+0xa0]
   140047ef7:	jmp    0x140005240
   140047efc:	int3   
   140047efd:	int3   
   140047efe:	int3   
   140047eff:	int3   
   140047f00:	lea    rcx,[rdx+0xd0]
   140047f07:	jmp    0x140005920
   140047f0c:	int3   
   140047f0d:	int3   
   140047f0e:	int3   
   140047f0f:	int3   
   140047f10:	lea    rcx,[rdx+0x78]
   140047f17:	jmp    0x140005240
   140047f1c:	int3   
   140047f1d:	int3   
   140047f1e:	int3   
   140047f1f:	int3   
   140047f20:	lea    rcx,[rdx+0x28]
   140047f27:	jmp    0x14000ee50
   140047f2c:	int3   
   140047f2d:	int3   
   140047f2e:	int3   
   140047f2f:	int3   
   140047f30:	lea    rcx,[rdx+0x28]
   140047f37:	jmp    0x1400279f0
   140047f3c:	int3   
   140047f3d:	int3   
   140047f3e:	int3   
   140047f3f:	int3   
   140047f40:	lea    rcx,[rdx+0x88]
   140047f47:	jmp    0x140005240
   140047f4c:	int3   
   140047f4d:	int3   
   140047f4e:	int3   
   140047f4f:	int3   
   140047f50:	mov    rcx,QWORD PTR [rdx+0x20]
   140047f57:	jmp    0x1400330c0
   140047f5c:	int3   
   140047f5d:	int3   
   140047f5e:	int3   
   140047f5f:	int3   
   140047f60:	lea    rcx,[rdx+0x30]
   140047f67:	jmp    0x14000ee50
   140047f6c:	int3   
   140047f6d:	int3   
   140047f6e:	int3   
   140047f6f:	int3   
   140047f70:	lea    rcx,[rdx+0x30]
   140047f77:	jmp    0x14000ee90
   140047f7c:	int3   
   140047f7d:	int3   
   140047f7e:	int3   
   140047f7f:	int3   
   140047f80:	lea    rcx,[rdx+0xd8]
   140047f87:	jmp    0x140005240
   140047f8c:	int3   
   140047f8d:	int3   
   140047f8e:	int3   
   140047f8f:	int3   
   140047f90:	lea    rcx,[rdx+0x30]
   140047f97:	jmp    0x14000ee50
   140047f9c:	int3   
   140047f9d:	int3   
   140047f9e:	int3   
   140047f9f:	int3   
   140047fa0:	lea    rcx,[rdx+0x30]
   140047fa7:	jmp    0x1400279f0
   140047fac:	int3   
   140047fad:	int3   
   140047fae:	int3   
   140047faf:	int3   
   140047fb0:	mov    rcx,QWORD PTR [rdx+0x20]
   140047fb7:	jmp    0x1400330c0
   140047fbc:	int3   
   140047fbd:	int3   
   140047fbe:	int3   
   140047fbf:	int3   
   140047fc0:	lea    rcx,[rdx+0x58]
   140047fc7:	jmp    0x14000ee50
   140047fcc:	int3   
   140047fcd:	int3   
   140047fce:	int3   
   140047fcf:	int3   
   140047fd0:	lea    rcx,[rdx+0x58]
   140047fd7:	jmp    0x14000ee90
   140047fdc:	int3   
   140047fdd:	int3   
   140047fde:	int3   
   140047fdf:	int3   
   140047fe0:	lea    rcx,[rdx+0xd8]
   140047fe7:	jmp    0x140005240
   140047fec:	int3   
   140047fed:	int3   
   140047fee:	int3   
   140047fef:	int3   
   140047ff0:	lea    rcx,[rdx+0x58]
   140047ff7:	jmp    0x14000ee50
   140047ffc:	int3   
   140047ffd:	int3   
   140047ffe:	int3   
   140047fff:	int3   
   140048000:	lea    rcx,[rdx+0x58]
   140048007:	jmp    0x1400279f0
   14004800c:	int3   
   14004800d:	int3   
   14004800e:	int3   
   14004800f:	int3   
   140048010:	mov    rcx,QWORD PTR [rdx+0x20]
   140048017:	jmp    0x1400330c0
   14004801c:	int3   
   14004801d:	int3   
   14004801e:	int3   
   14004801f:	int3   
   140048020:	lea    rcx,[rdx+0xd8]
   140048027:	jmp    0x14000ee50
   14004802c:	int3   
   14004802d:	int3   
   14004802e:	int3   
   14004802f:	int3   
   140048030:	lea    rcx,[rdx+0xd8]
   140048037:	jmp    0x14000ee90
   14004803c:	int3   
   14004803d:	int3   
   14004803e:	int3   
   14004803f:	int3   
   140048040:	lea    rcx,[rdx+0x100]
   140048047:	jmp    0x140005240
   14004804c:	int3   
   14004804d:	int3   
   14004804e:	int3   
   14004804f:	int3   
   140048050:	mov    rcx,QWORD PTR [rdx+0x20]
   140048057:	jmp    0x1400330c0
   14004805c:	int3   
   14004805d:	int3   
   14004805e:	int3   
   14004805f:	int3   
   140048060:	lea    rcx,[rdx+0x100]
   140048067:	jmp    0x14000ee50
   14004806c:	int3   
   14004806d:	int3   
   14004806e:	int3   
   14004806f:	int3   
   140048070:	lea    rcx,[rdx+0x100]
   140048077:	jmp    0x14000ee90
   14004807c:	int3   
   14004807d:	int3   
   14004807e:	int3   
   14004807f:	int3   
   140048080:	lea    rcx,[rdx+0xd8]
   140048087:	jmp    0x140005240
   14004808c:	int3   
   14004808d:	int3   
   14004808e:	int3   
   14004808f:	int3   
   140048090:	lea    rcx,[rdx+0x130]
   140048097:	jmp    0x140005920
   14004809c:	int3   
   14004809d:	int3   
   14004809e:	int3   
   14004809f:	int3   
   1400480a0:	lea    rcx,[rdx+0xb0]
   1400480a7:	jmp    0x140005240
   1400480ac:	int3   
   1400480ad:	int3   
   1400480ae:	int3   
   1400480af:	int3   
   1400480b0:	lea    rcx,[rdx+0x40]
   1400480b7:	jmp    0x14000ee50
   1400480bc:	int3   
   1400480bd:	int3   
   1400480be:	int3   
   1400480bf:	int3   
   1400480c0:	lea    rcx,[rdx+0x40]
   1400480c7:	jmp    0x14000ee50
   1400480cc:	int3   
   1400480cd:	int3   
   1400480ce:	int3   
   1400480cf:	int3   
   1400480d0:	lea    rcx,[rdx+0x40]
   1400480d7:	jmp    0x1400279f0
   1400480dc:	int3   
   1400480dd:	int3   
   1400480de:	int3   
   1400480df:	int3   
   1400480e0:	lea    rcx,[rdx+0x40]
   1400480e7:	jmp    0x14000ee50
   1400480ec:	int3   
   1400480ed:	int3   
   1400480ee:	int3   
   1400480ef:	int3   
   1400480f0:	lea    rcx,[rdx+0x40]
   1400480f7:	jmp    0x14000ee90
   1400480fc:	int3   
   1400480fd:	int3   
   1400480fe:	int3   
   1400480ff:	int3   
   140048100:	lea    rcx,[rdx+0x98]
   140048107:	jmp    0x140005240
   14004810c:	int3   
   14004810d:	int3   
   14004810e:	int3   
   14004810f:	int3   
   140048110:	lea    rcx,[rdx+0x40]
   140048117:	jmp    0x14000ee50
   14004811c:	int3   
   14004811d:	int3   
   14004811e:	int3   
   14004811f:	int3   
   140048120:	lea    rcx,[rdx+0x40]
   140048127:	jmp    0x1400279f0
   14004812c:	int3   
   14004812d:	int3   
   14004812e:	int3   
   14004812f:	int3   
   140048130:	lea    rcx,[rdx+0x50]
   140048137:	jmp    0x140002990
   14004813c:	int3   
   14004813d:	int3   
   14004813e:	int3   
   14004813f:	int3   
   140048140:	lea    rcx,[rdx+0x40]
   140048147:	jmp    0x140002990
   14004814c:	int3   
   14004814d:	int3   
   14004814e:	int3   
   14004814f:	int3   
   140048150:	lea    rcx,[rdx+0x48]
   140048157:	jmp    0x140002990
   14004815c:	int3   
   14004815d:	int3   
   14004815e:	int3   
   14004815f:	int3   
   140048160:	lea    rcx,[rdx+0x38]
   140048167:	jmp    0x140002990
   14004816c:	int3   
   14004816d:	int3   
   14004816e:	int3   
   14004816f:	int3   
   140048170:	lea    rcx,[rdx+0x70]
   140048177:	jmp    0x140005920
   14004817c:	int3   
   14004817d:	int3   
   14004817e:	int3   
   14004817f:	int3   
   140048180:	lea    rcx,[rdx+0x20]
   140048187:	jmp    0x14000ee50
   14004818c:	int3   
   14004818d:	int3   
   14004818e:	int3   
   14004818f:	int3   
   140048190:	lea    rcx,[rdx+0x20]
   140048197:	jmp    0x14000ee90
   14004819c:	int3   
   14004819d:	int3   
   14004819e:	int3   
   14004819f:	int3   
   1400481a0:	lea    rcx,[rdx+0xb0]
   1400481a7:	jmp    0x140005240
   1400481ac:	int3   
   1400481ad:	int3   
   1400481ae:	int3   
   1400481af:	int3   
   1400481b0:	lea    rcx,[rdx+0x78]
   1400481b7:	jmp    0x140005240
   1400481bc:	int3   
   1400481bd:	int3   
   1400481be:	int3   
   1400481bf:	int3   
   1400481c0:	lea    rcx,[rdx+0x20]
   1400481c7:	jmp    0x14000ee50
   1400481cc:	int3   
   1400481cd:	int3   
   1400481ce:	int3   
   1400481cf:	int3   
   1400481d0:	lea    rcx,[rdx+0x20]
   1400481d7:	jmp    0x1400279f0
   1400481dc:	int3   
   1400481dd:	int3   
   1400481de:	int3   
   1400481df:	int3   
   1400481e0:	lea    rcx,[rdx+0xc0]
   1400481e7:	jmp    0x140005240
   1400481ec:	int3   
   1400481ed:	int3   
   1400481ee:	int3   
   1400481ef:	int3   
   1400481f0:	lea    rcx,[rdx+0xe8]
   1400481f7:	jmp    0x140005240
   1400481fc:	int3   
   1400481fd:	int3   
   1400481fe:	int3   
   1400481ff:	int3   
   140048200:	lea    rcx,[rdx+0x20]
   140048207:	jmp    0x14000ee50
   14004820c:	int3   
   14004820d:	int3   
   14004820e:	int3   
   14004820f:	int3   
   140048210:	lea    rcx,[rdx+0x20]
   140048217:	jmp    0x14000ee90
   14004821c:	int3   
   14004821d:	int3   
   14004821e:	int3   
   14004821f:	int3   
   140048220:	lea    rcx,[rdx+0x98]
   140048227:	jmp    0x140005240
   14004822c:	int3   
   14004822d:	int3   
   14004822e:	int3   
   14004822f:	int3   
   140048230:	lea    rcx,[rdx+0x70]
   140048237:	jmp    0x140005240
   14004823c:	int3   
   14004823d:	int3   
   14004823e:	int3   
   14004823f:	int3   
   140048240:	lea    rcx,[rdx+0x20]
   140048247:	jmp    0x14000ee50
   14004824c:	int3   
   14004824d:	int3   
   14004824e:	int3   
   14004824f:	int3   
   140048250:	lea    rcx,[rdx+0x20]
   140048257:	jmp    0x1400279f0
   14004825c:	int3   
   14004825d:	int3   
   14004825e:	int3   
   14004825f:	int3   
   140048260:	lea    rcx,[rdx+0x28]
   140048267:	jmp    0x140005240
   14004826c:	int3   
   14004826d:	int3   
   14004826e:	int3   
   14004826f:	int3   
   140048270:	lea    rcx,[rdx+0x50]
   140048277:	jmp    0x140005240
   14004827c:	int3   
   14004827d:	int3   
   14004827e:	int3   
   14004827f:	int3   
   140048280:	rex push rbp
   140048282:	sub    rsp,0x20
   140048286:	mov    rbp,rdx
   140048289:	mov    eax,DWORD PTR [rbp+0x38]
   14004828c:	and    eax,0x1
   14004828f:	test   eax,eax
   140048291:	je     0x1400482a3
   140048293:	and    DWORD PTR [rbp+0x38],0xfffffffe
   140048297:	lea    rcx,[rbp+0x180]
   14004829e:	call   0x140005920
   1400482a3:	add    rsp,0x20
   1400482a7:	pop    rbp
   1400482a8:	ret    
   1400482a9:	int3   
   1400482aa:	int3   
   1400482ab:	int3   
   1400482ac:	int3   
   1400482ad:	int3   
   1400482ae:	int3   
   1400482af:	int3   
   1400482b0:	rex push rbp
   1400482b2:	sub    rsp,0x20
   1400482b6:	mov    rbp,rdx
   1400482b9:	mov    eax,DWORD PTR [rbp+0x70]
   1400482bc:	and    eax,0x1
   1400482bf:	test   eax,eax
   1400482c1:	je     0x1400482d0
   1400482c3:	and    DWORD PTR [rbp+0x70],0xfffffffe
   1400482c7:	mov    rcx,QWORD PTR [rbp+0x78]
   1400482cb:	call   0x140005240
   1400482d0:	add    rsp,0x20
   1400482d4:	pop    rbp
   1400482d5:	ret    
   1400482d6:	int3   
   1400482d7:	int3   
   1400482d8:	int3   
   1400482d9:	int3   
   1400482da:	int3   
   1400482db:	int3   
   1400482dc:	int3   
   1400482dd:	int3   
   1400482de:	int3   
   1400482df:	int3   
   1400482e0:	lea    rcx,[rdx+0x48]
   1400482e7:	jmp    0x140005240
   1400482ec:	int3   
   1400482ed:	int3   
   1400482ee:	int3   
   1400482ef:	int3   
   1400482f0:	lea    rcx,[rdx+0x20]
   1400482f7:	jmp    0x140005940
   1400482fc:	int3   
   1400482fd:	int3   
   1400482fe:	int3   
   1400482ff:	int3   
   140048300:	lea    rcx,[rdx+0x78]
   140048307:	jmp    0x140005240
   14004830c:	int3   
   14004830d:	int3   
   14004830e:	int3   
   14004830f:	int3   
   140048310:	mov    rcx,QWORD PTR [rdx+0x48]
   140048317:	jmp    0x1400330c0
   14004831c:	int3   
   14004831d:	int3   
   14004831e:	int3   
   14004831f:	int3   
   140048320:	mov    rcx,QWORD PTR [rdx+0x48]
   140048327:	add    rcx,0x118
   14004832e:	jmp    0x1400032b0
   140048333:	int3   
   140048334:	int3   
   140048335:	int3   
   140048336:	int3   
   140048337:	int3   
   140048338:	int3   
   140048339:	int3   
   14004833a:	int3   
   14004833b:	int3   
   14004833c:	int3   
   14004833d:	int3   
   14004833e:	int3   
   14004833f:	int3   
   140048340:	mov    rcx,QWORD PTR [rdx+0x48]
   140048347:	add    rcx,0x138
   14004834e:	jmp    0x140002990
   140048353:	int3   
   140048354:	int3   
   140048355:	int3   
   140048356:	int3   
   140048357:	int3   
   140048358:	int3   
   140048359:	int3   
   14004835a:	int3   
   14004835b:	int3   
   14004835c:	int3   
   14004835d:	int3   
   14004835e:	int3   
   14004835f:	int3   
   140048360:	mov    rcx,QWORD PTR [rdx+0x48]
   140048367:	add    rcx,0x140
   14004836e:	jmp    0x140002990
   140048373:	int3   
   140048374:	int3   
   140048375:	int3   
   140048376:	int3   
   140048377:	int3   
   140048378:	int3   
   140048379:	int3   
   14004837a:	int3   
   14004837b:	int3   
   14004837c:	int3   
   14004837d:	int3   
   14004837e:	int3   
   14004837f:	int3   
   140048380:	mov    rcx,QWORD PTR [rdx+0x48]
   140048387:	add    rcx,0x148
   14004838e:	jmp    0x1400272d0
   140048393:	int3   
   140048394:	int3   
   140048395:	int3   
   140048396:	int3   
   140048397:	int3   
   140048398:	int3   
   140048399:	int3   
   14004839a:	int3   
   14004839b:	int3   
   14004839c:	int3   
   14004839d:	int3   
   14004839e:	int3   
   14004839f:	int3   
   1400483a0:	lea    rcx,[rdx+0x50]
   1400483a7:	jmp    0x140005240
   1400483ac:	int3   
   1400483ad:	int3   
   1400483ae:	int3   
   1400483af:	int3   
   1400483b0:	lea    rcx,[rdx+0x40]
   1400483b7:	jmp    0x14002c800
   1400483bc:	int3   
   1400483bd:	int3   
   1400483be:	int3   
   1400483bf:	int3   
   1400483c0:	lea    rcx,[rdx+0x30]
   1400483c7:	jmp    0x140023920
   1400483cc:	int3   
   1400483cd:	int3   
   1400483ce:	int3   
   1400483cf:	int3   
   1400483d0:	lea    rcx,[rdx+0x50]
   1400483d7:	jmp    0x140023920
   1400483dc:	int3   
   1400483dd:	int3   
   1400483de:	int3   
   1400483df:	int3   
   1400483e0:	lea    rcx,[rdx+0x50]
   1400483e7:	jmp    0x1400279f0
   1400483ec:	int3   
   1400483ed:	int3   
   1400483ee:	int3   
   1400483ef:	int3   
   1400483f0:	lea    rcx,[rdx+0x30]
   1400483f7:	jmp    0x1400279f0
   1400483fc:	int3   
   1400483fd:	int3   
   1400483fe:	int3   
   1400483ff:	int3   
   140048400:	lea    rcx,[rdx+0x40]
   140048407:	jmp    0x140023920
   14004840c:	int3   
   14004840d:	int3   
   14004840e:	int3   
   14004840f:	int3   
   140048410:	lea    rcx,[rdx+0x60]
   140048417:	jmp    0x140023920
   14004841c:	int3   
   14004841d:	int3   
   14004841e:	int3   
   14004841f:	int3   
   140048420:	lea    rcx,[rdx+0xd0]
   140048427:	jmp    0x14002c800
   14004842c:	int3   
   14004842d:	int3   
   14004842e:	int3   
   14004842f:	int3   
   140048430:	lea    rcx,[rdx+0x60]
   140048437:	jmp    0x1400279f0
   14004843c:	int3   
   14004843d:	int3   
   14004843e:	int3   
   14004843f:	int3   
   140048440:	lea    rcx,[rdx+0x40]
   140048447:	jmp    0x1400279f0
   14004844c:	int3   
   14004844d:	int3   
   14004844e:	int3   
   14004844f:	int3   
   140048450:	lea    rcx,[rdx+0x70]
   140048457:	jmp    0x140032250
   14004845c:	int3   
   14004845d:	int3   
   14004845e:	int3   
   14004845f:	int3   
   140048460:	lea    rcx,[rdx+0x98]
   140048467:	jmp    0x140032250
   14004846c:	int3   
   14004846d:	int3   
   14004846e:	int3   
   14004846f:	int3   
   140048470:	lea    rcx,[rdx+0x98]
   140048477:	jmp    0x140032250
   14004847c:	int3   
   14004847d:	int3   
   14004847e:	int3   
   14004847f:	int3   
   140048480:	lea    rcx,[rdx+0xb0]
   140048487:	jmp    0x140032250
   14004848c:	int3   
   14004848d:	int3   
   14004848e:	int3   
   14004848f:	int3   
   140048490:	lea    rcx,[rdx+0x170]
   140048497:	jmp    0x140018540
   14004849c:	int3   
   14004849d:	int3   
   14004849e:	int3   
   14004849f:	int3   
   1400484a0:	lea    rcx,[rdx+0xa8]
   1400484a7:	jmp    0x140032250
   1400484ac:	int3   
   1400484ad:	int3   
   1400484ae:	int3   
   1400484af:	int3   
   1400484b0:	lea    rcx,[rdx+0x80]
   1400484b7:	jmp    0x140032250
   1400484bc:	int3   
   1400484bd:	int3   
   1400484be:	int3   
   1400484bf:	int3   
   1400484c0:	lea    rcx,[rdx+0x58]
   1400484c7:	jmp    0x14000ee50
   1400484cc:	int3   
   1400484cd:	int3   
   1400484ce:	int3   
   1400484cf:	int3   
   1400484d0:	lea    rcx,[rdx+0x58]
   1400484d7:	jmp    0x14000ee90
   1400484dc:	int3   
   1400484dd:	int3   
   1400484de:	int3   
   1400484df:	int3   
   1400484e0:	lea    rcx,[rdx+0x58]
   1400484e7:	jmp    0x14000ee50
   1400484ec:	int3   
   1400484ed:	int3   
   1400484ee:	int3   
   1400484ef:	int3   
   1400484f0:	lea    rcx,[rdx+0x58]
   1400484f7:	jmp    0x1400279f0
   1400484fc:	int3   
   1400484fd:	int3   
   1400484fe:	int3   
   1400484ff:	int3   
   140048500:	lea    rcx,[rdx+0xa0]
   140048507:	jmp    0x140032250
   14004850c:	int3   
   14004850d:	int3   
   14004850e:	int3   
   14004850f:	int3   
   140048510:	lea    rcx,[rdx+0x20]
   140048517:	jmp    0x14000ee50
   14004851c:	int3   
   14004851d:	int3   
   14004851e:	int3   
   14004851f:	int3   
   140048520:	lea    rcx,[rdx+0x20]
   140048527:	jmp    0x14000ee90
   14004852c:	int3   
   14004852d:	int3   
   14004852e:	int3   
   14004852f:	int3   
   140048530:	lea    rcx,[rdx+0x80]
   140048537:	jmp    0x140005240
   14004853c:	int3   
   14004853d:	int3   
   14004853e:	int3   
   14004853f:	int3   
   140048540:	lea    rcx,[rdx+0x20]
   140048547:	jmp    0x14000ee50
   14004854c:	int3   
   14004854d:	int3   
   14004854e:	int3   
   14004854f:	int3   
   140048550:	lea    rcx,[rdx+0x20]
   140048557:	jmp    0x1400279f0
   14004855c:	int3   
   14004855d:	int3   
   14004855e:	int3   
   14004855f:	int3   
   140048560:	lea    rcx,[rdx+0x48]
   140048567:	jmp    0x140032250
   14004856c:	int3   
   14004856d:	int3   
   14004856e:	int3   
   14004856f:	int3   
   140048570:	lea    rcx,[rdx+0xa8]
   140048577:	jmp    0x140005240
   14004857c:	int3   
   14004857d:	int3   
   14004857e:	int3   
   14004857f:	int3   
   140048580:	lea    rcx,[rdx+0x40]
   140048587:	jmp    0x140032250
   14004858c:	int3   
   14004858d:	int3   
   14004858e:	int3   
   14004858f:	int3   
   140048590:	lea    rcx,[rdx+0x50]
   140048597:	jmp    0x140032250
   14004859c:	int3   
   14004859d:	int3   
   14004859e:	int3   
   14004859f:	int3   
   1400485a0:	lea    rcx,[rdx+0x68]
   1400485a7:	jmp    0x140032250
   1400485ac:	int3   
   1400485ad:	int3   
   1400485ae:	int3   
   1400485af:	int3   
   1400485b0:	lea    rcx,[rdx+0x60]
   1400485b7:	jmp    0x140032250
   1400485bc:	int3   
   1400485bd:	int3   
   1400485be:	int3   
   1400485bf:	int3   
   1400485c0:	lea    rcx,[rip+0x3f989]        # 0x140087f50
   1400485c7:	add    rcx,0x10
   1400485cb:	jmp    0x14002a530
   1400485d0:	lea    rcx,[rip+0x3f9d9]        # 0x140087fb0
   1400485d7:	add    rcx,0x10
   1400485db:	jmp    0x14002a530
   1400485e0:	lea    rcx,[rip+0x3fa29]        # 0x140088010
   1400485e7:	add    rcx,0x10
   1400485eb:	jmp    0x14002a530
   1400485f0:	lea    rcx,[rip+0x3fa19]        # 0x140088010
   1400485f7:	add    rcx,0x10
   1400485fb:	jmp    0x14002a530
   140048600:	lea    rcx,[rip+0x3fa09]        # 0x140088010
   140048607:	add    rcx,0x30
   14004860b:	jmp    0x14002fef0
   140048610:	mov    rcx,QWORD PTR [rdx+0x40]
   140048617:	jmp    0x1400279f0
   14004861c:	int3   
   14004861d:	int3   
   14004861e:	int3   
   14004861f:	int3   
   140048620:	mov    rcx,QWORD PTR [rdx+0x40]
   140048627:	jmp    0x1400279f0
   14004862c:	int3   
   14004862d:	int3   
   14004862e:	int3   
   14004862f:	int3   
   140048630:	lea    rcx,[rip+0x3f979]        # 0x140087fb0
   140048637:	add    rcx,0x10
   14004863b:	jmp    0x14002a530
   140048640:	lea    rcx,[rip+0x3f969]        # 0x140087fb0
   140048647:	add    rcx,0x30
   14004864b:	jmp    0x14002fef0
   140048650:	mov    rcx,QWORD PTR [rdx+0x40]
   140048657:	jmp    0x1400279f0
   14004865c:	int3   
   14004865d:	int3   
   14004865e:	int3   
   14004865f:	int3   
   140048660:	mov    rcx,QWORD PTR [rdx+0x40]
   140048667:	jmp    0x1400279f0
   14004866c:	int3   
   14004866d:	int3   
   14004866e:	int3   
   14004866f:	int3   
   140048670:	lea    rcx,[rip+0x3f8d9]        # 0x140087f50
   140048677:	add    rcx,0x10
   14004867b:	jmp    0x14002a530
   140048680:	lea    rcx,[rip+0x3f8c9]        # 0x140087f50
   140048687:	add    rcx,0x30
   14004868b:	jmp    0x14002fef0
   140048690:	mov    rcx,QWORD PTR [rdx+0x40]
   140048697:	jmp    0x1400279f0
   14004869c:	int3   
   14004869d:	int3   
   14004869e:	int3   
   14004869f:	int3   
   1400486a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400486a7:	jmp    0x1400279f0
   1400486ac:	int3   
   1400486ad:	int3   
   1400486ae:	int3   
   1400486af:	int3   
   1400486b0:	lea    rcx,[rip+0x42691]        # 0x14008ad48
   1400486b7:	jmp    0x140012ea0
   1400486bc:	rex push rbp
   1400486be:	sub    rsp,0x20
   1400486c2:	mov    rbp,rdx
   1400486c5:	mov    rax,QWORD PTR [rcx]
   1400486c8:	cmp    DWORD PTR [rax],0xc0000005
   1400486ce:	je     0x1400486dc
   1400486d0:	cmp    DWORD PTR [rax],0xc000001d
   1400486d6:	je     0x1400486dc
   1400486d8:	xor    eax,eax
   1400486da:	jmp    0x1400486e1
   1400486dc:	mov    eax,0x1
   1400486e1:	add    rsp,0x20
   1400486e5:	pop    rbp
   1400486e6:	ret    
   1400486e7:	int3   
   1400486e8:	int3   
   1400486e9:	int3   
   1400486ea:	int3   
   1400486eb:	int3   
   1400486ec:	int3   
   1400486ed:	int3   
   1400486ee:	int3   
   1400486ef:	int3   
   1400486f0:	rex push rbx
   1400486f2:	sub    rsp,0x20
   1400486f6:	xor    eax,eax
   1400486f8:	lea    rbx,[rip+0x3f771]        # 0x140087e70
   1400486ff:	lea    edx,[rax+0x1]
   140048702:	mov    rcx,rbx
   140048705:	mov    QWORD PTR [rip+0x3f764],rax        # 0x140087e70
   14004870c:	mov    QWORD PTR [rip+0x3f765],rax        # 0x140087e78
   140048713:	mov    QWORD PTR [rip+0x3f766],rax        # 0x140087e80
   14004871a:	mov    QWORD PTR [rip+0x3f767],rax        # 0x140087e88
   140048721:	mov    QWORD PTR [rip+0x3f768],rax        # 0x140087e90
   140048728:	mov    QWORD PTR [rip+0x3f769],rax        # 0x140087e98
   14004872f:	mov    QWORD PTR [rip+0x3f76a],rax        # 0x140087ea0
   140048736:	mov    QWORD PTR [rip+0x3f76b],rax        # 0x140087ea8
   14004873d:	call   QWORD PTR [rip+0x1f8e5]        # 0x140068028
   140048743:	xor    r9d,r9d
   140048746:	lea    edx,[r9+0x1]
   14004874a:	xor    r8d,r8d
   14004874d:	mov    rcx,rbx
   140048750:	call   QWORD PTR [rip+0x1f8ca]        # 0x140068020
   140048756:	lea    rcx,[rip+0x323]        # 0x140048a80
   14004875d:	mov    DWORD PTR [rip+0x3f731],0x18        # 0x140087e98
   140048767:	mov    QWORD PTR [rip+0x3f732],rbx        # 0x140087ea0
   14004876e:	add    rsp,0x20
   140048772:	pop    rbx
   140048773:	jmp    0x14003444c
   140048778:	int3   
   140048779:	int3   
   14004877a:	int3   
   14004877b:	int3   
   14004877c:	int3   
   14004877d:	int3   
   14004877e:	int3   
   14004877f:	int3   
   140048780:	sub    rsp,0x28
   140048784:	lea    rcx,[rip+0x3ee45]        # 0x1400875d0
   14004878b:	call   QWORD PTR [rip+0x1fdd7]        # 0x140068568
   140048791:	mov    DWORD PTR [rip+0x41d05],eax        # 0x14008a49c
   140048797:	add    rsp,0x28
   14004879b:	ret    
   14004879c:	int3   
   14004879d:	int3   
   14004879e:	int3   
   14004879f:	int3   
   1400487a0:	sub    rsp,0x28
   1400487a4:	call   0x140013a10
   1400487a9:	lea    rcx,[rip+0x330]        # 0x140048ae0
   1400487b0:	add    rsp,0x28
   1400487b4:	jmp    0x14003444c
   1400487b9:	int3   
   1400487ba:	int3   
   1400487bb:	int3   
   1400487bc:	int3   
   1400487bd:	int3   
   1400487be:	int3   
   1400487bf:	int3   
   1400487c0:	sub    rsp,0x28
   1400487c4:	call   0x140019fa0
   1400487c9:	lea    rcx,[rip+0x320]        # 0x140048af0
   1400487d0:	add    rsp,0x28
   1400487d4:	jmp    0x14003444c
   1400487d9:	int3   
   1400487da:	int3   
   1400487db:	int3   
   1400487dc:	int3   
   1400487dd:	int3   
   1400487de:	int3   
   1400487df:	int3   
   1400487e0:	sub    rsp,0x28
   1400487e4:	lea    rdx,[rip+0x2656d]        # 0x14006ed58
   1400487eb:	lea    rcx,[rip+0x3f736]        # 0x140087f28
   1400487f2:	mov    r8d,0x7
   1400487f8:	call   0x140002ba0
   1400487fd:	lea    rcx,[rip+0x32c]        # 0x140048b30
   140048804:	add    rsp,0x28
   140048808:	jmp    0x14003444c
   14004880d:	int3   
   14004880e:	int3   
   14004880f:	int3   
   140048810:	sub    rsp,0x38
   140048814:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004881d:	lea    rcx,[rip+0x3f73c]        # 0x140087f60
   140048824:	call   0x140032280
   140048829:	nop
   14004882a:	lea    rcx,[rip+0x3f74f]        # 0x140087f80
   140048831:	call   0x1400300f0
   140048836:	xor    r11d,r11d
   140048839:	mov    QWORD PTR [rip+0x3f760],r11        # 0x140087fa0
   140048840:	mov    QWORD PTR [rip+0x3f761],r11        # 0x140087fa8
   140048847:	mov    DWORD PTR [rip+0x3f70a],r11d        # 0x140087f58
   14004884e:	lea    rcx,[rip+0x31b]        # 0x140048b70
   140048855:	add    rsp,0x38
   140048859:	jmp    0x14003444c
   14004885e:	int3   
   14004885f:	int3   
   140048860:	sub    rsp,0x38
   140048864:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004886d:	lea    rcx,[rip+0x3f74c]        # 0x140087fc0
   140048874:	call   0x140032280
   140048879:	nop
   14004887a:	lea    rcx,[rip+0x3f75f]        # 0x140087fe0
   140048881:	call   0x1400300f0
   140048886:	xor    r11d,r11d
   140048889:	mov    QWORD PTR [rip+0x3f770],r11        # 0x140088000
   140048890:	mov    QWORD PTR [rip+0x3f771],r11        # 0x140088008
   140048897:	mov    DWORD PTR [rip+0x3f717],0x1        # 0x140087fb8
   1400488a1:	lea    rcx,[rip+0x388]        # 0x140048c30
   1400488a8:	add    rsp,0x38
   1400488ac:	jmp    0x14003444c
   1400488b1:	int3   
   1400488b2:	int3   
   1400488b3:	int3   
   1400488b4:	int3   
   1400488b5:	int3   
   1400488b6:	int3   
   1400488b7:	int3   
   1400488b8:	int3   
   1400488b9:	int3   
   1400488ba:	int3   
   1400488bb:	int3   
   1400488bc:	int3   
   1400488bd:	int3   
   1400488be:	int3   
   1400488bf:	int3   
   1400488c0:	sub    rsp,0x38
   1400488c4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400488cd:	lea    rcx,[rip+0x3f74c]        # 0x140088020
   1400488d4:	call   0x140032280
   1400488d9:	nop
   1400488da:	lea    rcx,[rip+0x3f75f]        # 0x140088040
   1400488e1:	call   0x1400300f0
   1400488e6:	xor    r11d,r11d
   1400488e9:	mov    QWORD PTR [rip+0x3f770],r11        # 0x140088060
   1400488f0:	mov    QWORD PTR [rip+0x3f771],r11        # 0x140088068
   1400488f7:	mov    DWORD PTR [rip+0x3f717],0x2        # 0x140088018
   140048901:	lea    rcx,[rip+0x3e8]        # 0x140048cf0
   140048908:	add    rsp,0x38
   14004890c:	jmp    0x14003444c
   140048911:	int3   
   140048912:	int3   
   140048913:	int3   
   140048914:	sub    rsp,0x28
   140048918:	lea    rcx,[rip+0x40881]        # 0x1400891a0
   14004891f:	call   0x140032df0
   140048924:	lea    rcx,[rip+0x47d]        # 0x140048da8
   14004892b:	add    rsp,0x28
   14004892f:	jmp    0x14003444c
   140048934:	sub    rsp,0x28
   140048938:	call   QWORD PTR [rip+0x1f7d2]        # 0x140068110
   14004893e:	lea    rcx,[rip+0x222fb]        # 0x14006ac40
   140048945:	mov    BYTE PTR [rip+0x41954],0x0        # 0x14008a2a0
   14004894c:	mov    QWORD PTR [rip+0x4193d],rcx        # 0x14008a290
   140048953:	lea    rcx,[rip+0x476]        # 0x140048dd0
   14004895a:	mov    QWORD PTR [rip+0x41937],rax        # 0x14008a298
   140048961:	add    rsp,0x28
   140048965:	jmp    0x14003444c
   14004896a:	int3   
   14004896b:	int3   
   14004896c:	lea    rcx,[rip+0x491]        # 0x140048e04
   140048973:	jmp    0x14003444c
   140048978:	sub    rsp,0x28
   14004897c:	lea    rcx,[rip+0x4192d]        # 0x14008a2b0
   140048983:	call   0x140043014
   140048988:	lea    rcx,[rip+0x485]        # 0x140048e14
   14004898f:	add    rsp,0x28
   140048993:	jmp    0x14003444c
   140048998:	sub    rsp,0x28
   14004899c:	lea    rcx,[rip+0x4196d]        # 0x14008a310
   1400489a3:	call   0x140043160
   1400489a8:	lea    rcx,[rip+0x471]        # 0x140048e20
   1400489af:	add    rsp,0x28
   1400489b3:	jmp    0x14003444c
   1400489b8:	sub    rsp,0x28
   1400489bc:	lea    rcx,[rip+0x4199d]        # 0x14008a360
   1400489c3:	xor    edx,edx
   1400489c5:	call   QWORD PTR [rip+0x1f87d]        # 0x140068248
   1400489cb:	test   eax,eax
   1400489cd:	jne    0x1400489e9
   1400489cf:	call   QWORD PTR [rip+0x1f9eb]        # 0x1400683c0
   1400489d5:	movzx  ecx,ax
   1400489d8:	or     ecx,0x80070000
   1400489de:	test   eax,eax
   1400489e0:	cmovle ecx,eax
   1400489e3:	mov    DWORD PTR [rip+0x419a3],ecx        # 0x14008a38c
   1400489e9:	lea    rcx,[rip+0x474]        # 0x140048e64
   1400489f0:	add    rsp,0x28
   1400489f4:	jmp    0x14003444c
   1400489f9:	int3   
   1400489fa:	int3   
   1400489fb:	int3   
   1400489fc:	xor    eax,eax
   1400489fe:	lea    rcx,[rip+0x4ab]        # 0x140048eb0
   140048a05:	mov    QWORD PTR [rip+0x41984],rax        # 0x14008a390
   140048a0c:	mov    QWORD PTR [rip+0x41985],rax        # 0x14008a398
   140048a13:	mov    QWORD PTR [rip+0x41986],rax        # 0x14008a3a0
   140048a1a:	mov    QWORD PTR [rip+0x41987],rax        # 0x14008a3a8
   140048a21:	jmp    0x14003444c
   140048a26:	int3   
   140048a27:	int3   
   140048a28:	int3   
   140048a29:	int3   
   140048a2a:	int3   
   140048a2b:	int3   
   140048a2c:	int3   
   140048a2d:	int3   
   140048a2e:	int3   
   140048a2f:	int3   
   140048a30:	lea    rcx,[rip+0x4b9]        # 0x140048ef0
   140048a37:	jmp    0x14003444c
   140048a3c:	int3   
   140048a3d:	int3   
   140048a3e:	int3   
   140048a3f:	int3   
   140048a40:	sub    rsp,0x38
   140048a44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140048a4d:	mov    rdx,QWORD PTR [rip+0x422fc]        # 0x14008ad50
   140048a54:	mov    r8,rdx
   140048a57:	mov    rdx,QWORD PTR [rdx]
   140048a5a:	lea    rcx,[rsp+0x40]
   140048a5f:	call   0x140012de0
   140048a64:	nop
   140048a65:	mov    rcx,QWORD PTR [rip+0x422e4]        # 0x14008ad50
   140048a6c:	add    rsp,0x38
   140048a70:	jmp    0x1400330c0
   140048a75:	int3   
   140048a76:	int3   
   140048a77:	int3   
   140048a78:	int3   
   140048a79:	int3   
   140048a7a:	int3   
   140048a7b:	int3   
   140048a7c:	int3   
   140048a7d:	int3   
   140048a7e:	int3   
   140048a7f:	int3   
   140048a80:	rex push rbx
   140048a82:	sub    rsp,0x20
   140048a86:	mov    rcx,QWORD PTR [rip+0x3f3d3]        # 0x140087e60
   140048a8d:	lea    rax,[rip+0x24c4c]        # 0x14006d6e0
   140048a94:	xor    ebx,ebx
   140048a96:	mov    QWORD PTR [rip+0x3f3b3],rax        # 0x140087e50
   140048a9d:	test   rcx,rcx
   140048aa0:	je     0x140048aaf
   140048aa2:	call   QWORD PTR [rip+0x1f638]        # 0x1400680e0
   140048aa8:	mov    QWORD PTR [rip+0x3f3b1],rbx        # 0x140087e60
   140048aaf:	mov    rcx,QWORD PTR [rip+0x3f3b2]        # 0x140087e68
   140048ab6:	test   rcx,rcx
   140048ab9:	je     0x140048ac8
   140048abb:	call   QWORD PTR [rip+0x1f8d7]        # 0x140068398
   140048ac1:	mov    QWORD PTR [rip+0x3f3a0],rbx        # 0x140087e68
   140048ac8:	mov    DWORD PTR [rip+0x3f38a],ebx        # 0x140087e58
   140048ace:	add    rsp,0x20
   140048ad2:	pop    rbx
   140048ad3:	ret    
   140048ad4:	int3   
   140048ad5:	int3   
   140048ad6:	int3   
   140048ad7:	int3   
   140048ad8:	int3   
   140048ad9:	int3   
   140048ada:	int3   
   140048adb:	int3   
   140048adc:	int3   
   140048add:	int3   
   140048ade:	int3   
   140048adf:	int3   
   140048ae0:	lea    rcx,[rip+0x419b9]        # 0x14008a4a0
   140048ae7:	jmp    0x140013ac0
   140048aec:	int3   
   140048aed:	int3   
   140048aee:	int3   
   140048aef:	int3   
   140048af0:	sub    rsp,0x28
   140048af4:	lea    rax,[rip+0x25bed]        # 0x14006e6e8
   140048afb:	lea    rcx,[rip+0x41ce6]        # 0x14008a7e8
   140048b02:	mov    QWORD PTR [rip+0x41c37],rax        # 0x14008a740
   140048b09:	call   0x140019880
   140048b0e:	lea    rcx,[rip+0x41c83]        # 0x14008a798
   140048b15:	call   0x140019880
   140048b1a:	mov    rcx,QWORD PTR [rip+0x41c47]        # 0x14008a768
   140048b21:	test   rcx,rcx
   140048b24:	je     0x140048b2b
   140048b26:	call   0x140042c44
   140048b2b:	add    rsp,0x28
   140048b2f:	ret    
   140048b30:	sub    rsp,0x28
   140048b34:	cmp    QWORD PTR [rip+0x3f404],0x10        # 0x140087f40
   140048b3c:	jb     0x140048b4a
   140048b3e:	mov    rcx,QWORD PTR [rip+0x3f3e3]        # 0x140087f28
   140048b45:	call   0x1400330c0
   140048b4a:	mov    QWORD PTR [rip+0x3f3eb],0xf        # 0x140087f40
   140048b55:	mov    QWORD PTR [rip+0x3f3d8],0x0        # 0x140087f38
   140048b60:	mov    BYTE PTR [rip+0x3f3c1],0x0        # 0x140087f28
   140048b67:	add    rsp,0x28
   140048b6b:	ret    
   140048b6c:	int3   
   140048b6d:	int3   
   140048b6e:	int3   
   140048b6f:	int3   
   140048b70:	rex push rdi
   140048b72:	sub    rsp,0x30
   140048b76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140048b7f:	mov    QWORD PTR [rsp+0x50],rbx
   140048b84:	lea    rax,[rip+0x2e81d]        # 0x1400773a8
   140048b8b:	mov    QWORD PTR [rip+0x3f3be],rax        # 0x140087f50
   140048b92:	lea    rdi,[rip+0x3f3c7]        # 0x140087f60
   140048b99:	mov    rcx,rdi
   140048b9c:	call   0x14002af20
   140048ba1:	lea    rbx,[rip+0x3f3d8]        # 0x140087f80
   140048ba8:	mov    rcx,rbx
   140048bab:	call   0x140030070
   140048bb0:	mov    r11,QWORD PTR [rip+0x3f3b1]        # 0x140087f68
   140048bb7:	mov    QWORD PTR [rip+0x3f3e2],r11        # 0x140087fa0
   140048bbe:	mov    r8,QWORD PTR [rip+0x3f3c3]        # 0x140087f88
   140048bc5:	mov    QWORD PTR [rip+0x3f3dc],r8        # 0x140087fa8
   140048bcc:	mov    QWORD PTR [rsp+0x40],rbx
   140048bd1:	mov    r9,r8
   140048bd4:	mov    r8,QWORD PTR [r8]
   140048bd7:	lea    rdx,[rsp+0x48]
   140048bdc:	mov    rcx,rbx
   140048bdf:	call   0x1400301d0
   140048be4:	nop
   140048be5:	mov    rcx,QWORD PTR [rip+0x3f39c]        # 0x140087f88
   140048bec:	call   0x1400330c0
   140048bf1:	nop
   140048bf2:	mov    QWORD PTR [rsp+0x40],rdi
   140048bf7:	mov    r8,QWORD PTR [rip+0x3f36a]        # 0x140087f68
   140048bfe:	mov    r9,r8
   140048c01:	mov    r8,QWORD PTR [r8]
   140048c04:	lea    rdx,[rsp+0x48]
   140048c09:	mov    rcx,rdi
   140048c0c:	call   0x14002b250
   140048c11:	nop
   140048c12:	mov    rcx,QWORD PTR [rip+0x3f34f]        # 0x140087f68
   140048c19:	mov    rbx,QWORD PTR [rsp+0x50]
   140048c1e:	add    rsp,0x30
   140048c22:	pop    rdi
   140048c23:	jmp    0x1400330c0
   140048c28:	int3   
   140048c29:	int3   
   140048c2a:	int3   
   140048c2b:	int3   
   140048c2c:	int3   
   140048c2d:	int3   
   140048c2e:	int3   
   140048c2f:	int3   
   140048c30:	rex push rdi
   140048c32:	sub    rsp,0x30
   140048c36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140048c3f:	mov    QWORD PTR [rsp+0x50],rbx
   140048c44:	lea    rax,[rip+0x2e75d]        # 0x1400773a8
   140048c4b:	mov    QWORD PTR [rip+0x3f35e],rax        # 0x140087fb0
   140048c52:	lea    rdi,[rip+0x3f367]        # 0x140087fc0
   140048c59:	mov    rcx,rdi
   140048c5c:	call   0x14002af20
   140048c61:	lea    rbx,[rip+0x3f378]        # 0x140087fe0
   140048c68:	mov    rcx,rbx
   140048c6b:	call   0x140030070
   140048c70:	mov    r11,QWORD PTR [rip+0x3f351]        # 0x140087fc8
   140048c77:	mov    QWORD PTR [rip+0x3f382],r11        # 0x140088000
   140048c7e:	mov    r8,QWORD PTR [rip+0x3f363]        # 0x140087fe8
   140048c85:	mov    QWORD PTR [rip+0x3f37c],r8        # 0x140088008
   140048c8c:	mov    QWORD PTR [rsp+0x40],rbx
   140048c91:	mov    r9,r8
   140048c94:	mov    r8,QWORD PTR [r8]
   140048c97:	lea    rdx,[rsp+0x48]
   140048c9c:	mov    rcx,rbx
   140048c9f:	call   0x1400301d0
   140048ca4:	nop
   140048ca5:	mov    rcx,QWORD PTR [rip+0x3f33c]        # 0x140087fe8
   140048cac:	call   0x1400330c0
   140048cb1:	nop
   140048cb2:	mov    QWORD PTR [rsp+0x40],rdi
   140048cb7:	mov    r8,QWORD PTR [rip+0x3f30a]        # 0x140087fc8
   140048cbe:	mov    r9,r8
   140048cc1:	mov    r8,QWORD PTR [r8]
   140048cc4:	lea    rdx,[rsp+0x48]
   140048cc9:	mov    rcx,rdi
   140048ccc:	call   0x14002b250
   140048cd1:	nop
   140048cd2:	mov    rcx,QWORD PTR [rip+0x3f2ef]        # 0x140087fc8
   140048cd9:	mov    rbx,QWORD PTR [rsp+0x50]
   140048cde:	add    rsp,0x30
   140048ce2:	pop    rdi
   140048ce3:	jmp    0x1400330c0
   140048ce8:	int3   
   140048ce9:	int3   
   140048cea:	int3   
   140048ceb:	int3   
   140048cec:	int3   
   140048ced:	int3   
   140048cee:	int3   
   140048cef:	int3   
   140048cf0:	rex push rdi
   140048cf2:	sub    rsp,0x30
   140048cf6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140048cff:	mov    QWORD PTR [rsp+0x50],rbx
   140048d04:	lea    rax,[rip+0x2e69d]        # 0x1400773a8
   140048d0b:	mov    QWORD PTR [rip+0x3f2fe],rax        # 0x140088010
   140048d12:	lea    rdi,[rip+0x3f307]        # 0x140088020
   140048d19:	mov    rcx,rdi
   140048d1c:	call   0x14002af20
   140048d21:	lea    rbx,[rip+0x3f318]        # 0x140088040
   140048d28:	mov    rcx,rbx
   140048d2b:	call   0x140030070
   140048d30:	mov    r11,QWORD PTR [rip+0x3f2f1]        # 0x140088028
   140048d37:	mov    QWORD PTR [rip+0x3f322],r11        # 0x140088060
   140048d3e:	mov    r8,QWORD PTR [rip+0x3f303]        # 0x140088048
   140048d45:	mov    QWORD PTR [rip+0x3f31c],r8        # 0x140088068
   140048d4c:	mov    QWORD PTR [rsp+0x40],rbx
   140048d51:	mov    r9,r8
   140048d54:	mov    r8,QWORD PTR [r8]
   140048d57:	lea    rdx,[rsp+0x48]
   140048d5c:	mov    rcx,rbx
   140048d5f:	call   0x1400301d0
   140048d64:	nop
   140048d65:	mov    rcx,QWORD PTR [rip+0x3f2dc]        # 0x140088048
   140048d6c:	call   0x1400330c0
   140048d71:	nop
   140048d72:	mov    QWORD PTR [rsp+0x40],rdi
   140048d77:	mov    r8,QWORD PTR [rip+0x3f2aa]        # 0x140088028
   140048d7e:	mov    r9,r8
   140048d81:	mov    r8,QWORD PTR [r8]
   140048d84:	lea    rdx,[rsp+0x48]
   140048d89:	mov    rcx,rdi
   140048d8c:	call   0x14002b250
   140048d91:	nop
   140048d92:	mov    rcx,QWORD PTR [rip+0x3f28f]        # 0x140088028
   140048d99:	mov    rbx,QWORD PTR [rsp+0x50]
   140048d9e:	add    rsp,0x30
   140048da2:	pop    rdi
   140048da3:	jmp    0x1400330c0
   140048da8:	lea    rcx,[rip+0x403f1]        # 0x1400891a0
   140048daf:	jmp    0x140032e3c
   140048db4:	lea    rax,[rip+0x1fad5]        # 0x140068890
   140048dbb:	lea    rcx,[rip+0x403e6]        # 0x1400891a8
   140048dc2:	mov    QWORD PTR [rip+0x403df],rax        # 0x1400891a8
   140048dc9:	jmp    0x140033048
   140048dce:	int3   
   140048dcf:	int3   
   140048dd0:	sub    rsp,0x28
   140048dd4:	cmp    BYTE PTR [rip+0x414c5],0x0        # 0x14008a2a0
   140048ddb:	lea    rax,[rip+0x21e5e]        # 0x14006ac40
   140048de2:	mov    QWORD PTR [rip+0x414a7],rax        # 0x14008a290
   140048de9:	je     0x140048dfd
   140048deb:	mov    rcx,QWORD PTR [rip+0x414a6]        # 0x14008a298
   140048df2:	test   rcx,rcx
   140048df5:	je     0x140048dfd
   140048df7:	call   QWORD PTR [rip+0x1f4c3]        # 0x1400682c0
   140048dfd:	add    rsp,0x28
   140048e01:	ret    
   140048e02:	int3   
   140048e03:	int3   
   140048e04:	lea    rax,[rip+0x21e5d]        # 0x14006ac68
   140048e0b:	mov    QWORD PTR [rip+0x3d946],rax        # 0x140086758
   140048e12:	ret    
   140048e13:	int3   
   140048e14:	lea    rcx,[rip+0x41495]        # 0x14008a2b0
   140048e1b:	jmp    0x140042f60
   140048e20:	sub    rsp,0x28
   140048e24:	mov    rdx,QWORD PTR [rip+0x4148d]        # 0x14008a2b8
   140048e2b:	lea    rcx,[rip+0x414de]        # 0x14008a310
   140048e32:	call   0x1400430ac
   140048e37:	mov    rcx,QWORD PTR [rip+0x4150a]        # 0x14008a348
   140048e3e:	test   rcx,rcx
   140048e41:	je     0x140048e50
   140048e43:	call   0x140033594
   140048e48:	and    QWORD PTR [rip+0x414f8],0x0        # 0x14008a348
   140048e50:	and    DWORD PTR [rip+0x414f9],0x0        # 0x14008a350
   140048e57:	and    DWORD PTR [rip+0x414f6],0x0        # 0x14008a354
   140048e5e:	add    rsp,0x28
   140048e62:	ret    
   140048e63:	int3   
   140048e64:	sub    rsp,0x28
   140048e68:	lea    rcx,[rip+0x414f1]        # 0x14008a360
   140048e6f:	call   QWORD PTR [rip+0x1f2fb]        # 0x140068170
   140048e75:	mov    rcx,QWORD PTR [rip+0x414dc]        # 0x14008a358
   140048e7c:	test   rcx,rcx
   140048e7f:	je     0x140048e86
   140048e81:	call   0x1400431d4
   140048e86:	and    QWORD PTR [rip+0x414ca],0x0        # 0x14008a358
   140048e8e:	lea    rcx,[rip+0x414cb]        # 0x14008a360
   140048e95:	call   QWORD PTR [rip+0x1f2b5]        # 0x140068150
   140048e9b:	lea    rcx,[rip+0x414be]        # 0x14008a360
   140048ea2:	add    rsp,0x28
   140048ea6:	rex.W jmp QWORD PTR [rip+0x1f563]        # 0x140068410
   140048ead:	int3   
   140048eae:	int3   
   140048eaf:	int3   
   140048eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140048eb5:	push   rdi
   140048eb6:	sub    rsp,0x20
   140048eba:	lea    rbx,[rip+0x414cf]        # 0x14008a390
   140048ec1:	mov    edi,0x4
   140048ec6:	mov    rcx,QWORD PTR [rbx]
   140048ec9:	test   rcx,rcx
   140048ecc:	je     0x140048ed4
   140048ece:	call   QWORD PTR [rip+0x1f1ac]        # 0x140068080
   140048ed4:	add    rbx,0x8
   140048ed8:	dec    rdi
   140048edb:	jne    0x140048ec6
   140048edd:	mov    rbx,QWORD PTR [rsp+0x30]
   140048ee2:	add    rsp,0x20
   140048ee6:	pop    rdi
   140048ee7:	ret    
   140048ee8:	int3   
   140048ee9:	int3   
   140048eea:	int3   
   140048eeb:	int3   
   140048eec:	int3   
   140048eed:	int3   
   140048eee:	int3   
   140048eef:	int3   
   140048ef0:	lea    rcx,[rip+0x3d899]        # 0x140086790
   140048ef7:	rex.W jmp QWORD PTR [rip+0x1f592]        # 0x140068490

Disassembly of section RT_CODE:

0000000140049000 <RT_CODE>:
   140049000:	mov    QWORD PTR [rsp+0x8],rbx
   140049005:	push   rdi
   140049006:	sub    rsp,0x20
   14004900a:	xor    eax,eax
   14004900c:	lea    rbx,[rcx+0x18]
   140049010:	mov    rdi,rcx
   140049013:	mov    DWORD PTR [rcx],eax
   140049015:	mov    QWORD PTR [rcx+0x8],rax
   140049019:	mov    QWORD PTR [rcx+0x10],rax
   14004901d:	mov    QWORD PTR [rbx],rax
   140049020:	mov    QWORD PTR [rbx+0x8],rax
   140049024:	mov    QWORD PTR [rbx+0x10],rax
   140049028:	mov    QWORD PTR [rbx+0x18],rax
   14004902c:	mov    QWORD PTR [rbx+0x20],rax
   140049030:	mov    QWORD PTR [rcx+0x40],rax
   140049034:	mov    QWORD PTR [rcx+0x48],rax
   140049038:	mov    QWORD PTR [rcx+0x50],rax
   14004903c:	lea    edx,[rax+0x1]
   14004903f:	mov    rcx,rbx
   140049042:	call   QWORD PTR [rip+0x1efe0]        # 0x140068028
   140049048:	xor    r9d,r9d
   14004904b:	xor    r8d,r8d
   14004904e:	lea    edx,[r9+0x1]
   140049052:	mov    rcx,rbx
   140049055:	call   QWORD PTR [rip+0x1efc5]        # 0x140068020
   14004905b:	mov    QWORD PTR [rdi+0x48],rbx
   14004905f:	mov    rbx,QWORD PTR [rsp+0x30]
   140049064:	mov    DWORD PTR [rdi+0x40],0x18
   14004906b:	mov    rax,rdi
   14004906e:	add    rsp,0x20
   140049072:	pop    rdi
   140049073:	ret    
   140049074:	int3   
   140049075:	int3   
   140049076:	int3   
   140049077:	int3   
   140049078:	int3   
   140049079:	int3   
   14004907a:	int3   
   14004907b:	int3   
   14004907c:	int3   
   14004907d:	int3   
   14004907e:	int3   
   14004907f:	int3   
   140049080:	mov    QWORD PTR [rsp+0x8],rbx
   140049085:	push   rdi
   140049086:	sub    rsp,0x20
   14004908a:	mov    rbx,rcx
   14004908d:	mov    rcx,QWORD PTR [rcx+0x8]
   140049091:	xor    edi,edi
   140049093:	test   rcx,rcx
   140049096:	je     0x1400490a2
   140049098:	call   QWORD PTR [rip+0x1f042]        # 0x1400680e0
   14004909e:	mov    QWORD PTR [rbx+0x8],rdi
   1400490a2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400490a6:	test   rcx,rcx
   1400490a9:	je     0x1400490b5
   1400490ab:	call   QWORD PTR [rip+0x1f2e7]        # 0x140068398
   1400490b1:	mov    QWORD PTR [rbx+0x10],rdi
   1400490b5:	mov    DWORD PTR [rbx],edi
   1400490b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400490bc:	add    rsp,0x20
   1400490c0:	pop    rdi
   1400490c1:	ret    
   1400490c2:	int3   
   1400490c3:	int3   
   1400490c4:	int3   
   1400490c5:	int3   
   1400490c6:	int3   
   1400490c7:	int3   
   1400490c8:	int3   
   1400490c9:	int3   
   1400490ca:	int3   
   1400490cb:	int3   
   1400490cc:	int3   
   1400490cd:	int3   
   1400490ce:	int3   
   1400490cf:	int3   
   1400490d0:	mov    r11,rsp
   1400490d3:	push   rdi
   1400490d4:	sub    rsp,0x170
   1400490db:	mov    rax,QWORD PTR [rip+0x3bfc6]        # 0x1400850a8
   1400490e2:	xor    rax,rsp
   1400490e5:	mov    QWORD PTR [rsp+0x140],rax
   1400490ed:	mov    eax,DWORD PTR [rip+0x2464d]        # 0x14006d740
   1400490f3:	mov    QWORD PTR [r11-0x10],rbx
   1400490f7:	mov    QWORD PTR [r11-0x20],rsi
   1400490fb:	mov    DWORD PTR [rsp+0x30],eax
   1400490ff:	movzx  eax,WORD PTR [rip+0x2463e]        # 0x14006d744
   140049106:	mov    rdi,rcx
   140049109:	mov    WORD PTR [rsp+0x34],ax
   14004910e:	movzx  eax,BYTE PTR [rip+0x24631]        # 0x14006d746
   140049115:	mov    esi,r8d
   140049118:	mov    rbx,rdx
   14004911b:	mov    QWORD PTR [r11-0x28],r12
   14004911f:	lea    rcx,[rsp+0x37]
   140049124:	xor    edx,edx
   140049126:	mov    r8d,0xfd
   14004912c:	mov    BYTE PTR [rsp+0x36],al
   140049130:	mov    r12,r9
   140049133:	call   0x140036dc0
   140049138:	lea    r8,[rip+0x24609]        # 0x14006d748
   14004913f:	lea    rcx,[rsp+0x30]
   140049144:	mov    edx,0x104
   140049149:	call   0x1400336a8
   14004914e:	lea    rcx,[rsp+0x30]
   140049153:	mov    r8,rbx
   140049156:	mov    edx,0x104
   14004915b:	call   0x1400330c8
   140049160:	cmp    DWORD PTR [rsp+0x1a0],0x0
   140049168:	je     0x140049196
   14004916a:	cmp    QWORD PTR [rdi+0x10],0x0
   14004916f:	jne    0x1400491b1
   140049171:	xor    r9d,r9d
   140049174:	lea    rax,[rsp+0x30]
   140049179:	lea    rdx,[rdi+0x40]
   14004917d:	mov    QWORD PTR [rsp+0x28],rax
   140049182:	lea    r8d,[r9+0x4]
   140049186:	or     rcx,0xffffffffffffffff
   14004918a:	mov    DWORD PTR [rsp+0x20],esi
   14004918e:	call   QWORD PTR [rip+0x1ef54]        # 0x1400680e8
   140049194:	jmp    0x1400491ad
   140049196:	cmp    QWORD PTR [rdi+0x10],0x0
   14004919b:	jne    0x1400491b1
   14004919d:	xor    edx,edx
   14004919f:	lea    r8,[rsp+0x30]
   1400491a4:	lea    ecx,[rdx+0x6]
   1400491a7:	call   QWORD PTR [rip+0x1ef7b]        # 0x140068128
   1400491ad:	mov    QWORD PTR [rdi+0x10],rax
   1400491b1:	call   QWORD PTR [rip+0x1f209]        # 0x1400683c0
   1400491b7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400491bb:	xor    ebx,ebx
   1400491bd:	cmp    eax,0xb7
   1400491c2:	sete   bl
   1400491c5:	test   rcx,rcx
   1400491c8:	je     0x14004921b
   1400491ca:	cmp    QWORD PTR [rdi+0x8],0x0
   1400491cf:	jne    0x14004921b
   1400491d1:	xor    r9d,r9d
   1400491d4:	xor    r8d,r8d
   1400491d7:	mov    edx,0xf001f
   1400491dc:	mov    QWORD PTR [rsp+0x160],rbp
   1400491e4:	mov    QWORD PTR [rsp+0x20],rsi
   1400491e9:	call   QWORD PTR [rip+0x1eee9]        # 0x1400680d8
   1400491ef:	cmp    DWORD PTR [rsp+0x1a0],0x0
   1400491f7:	mov    QWORD PTR [rdi+0x8],rax
   1400491fb:	je     0x140049213
   1400491fd:	test   ebx,ebx
   1400491ff:	jne    0x140049213
   140049201:	test   rax,rax
   140049204:	je     0x140049213
   140049206:	mov    r8,rsi
   140049209:	xor    edx,edx
   14004920b:	mov    rcx,rax
   14004920e:	call   0x140036dc0
   140049213:	mov    rbp,QWORD PTR [rsp+0x160]
   14004921b:	cmp    QWORD PTR [rdi+0x10],0x0
   140049220:	je     0x140049236
   140049222:	cmp    QWORD PTR [rdi+0x8],0x0
   140049227:	je     0x140049236
   140049229:	mov    DWORD PTR [rdi],esi
   14004922b:	test   r12,r12
   14004922e:	je     0x14004926a
   140049230:	mov    DWORD PTR [r12],ebx
   140049234:	jmp    0x14004926a
   140049236:	mov    rcx,QWORD PTR [rdi+0x8]
   14004923a:	test   rcx,rcx
   14004923d:	je     0x14004924d
   14004923f:	call   QWORD PTR [rip+0x1ee9b]        # 0x1400680e0
   140049245:	mov    QWORD PTR [rdi+0x8],0x0
   14004924d:	mov    rcx,QWORD PTR [rdi+0x10]
   140049251:	test   rcx,rcx
   140049254:	je     0x140049264
   140049256:	call   QWORD PTR [rip+0x1f13c]        # 0x140068398
   14004925c:	mov    QWORD PTR [rdi+0x10],0x0
   140049264:	mov    DWORD PTR [rdi],0x0
   14004926a:	cmp    QWORD PTR [rdi+0x10],0x0
   14004926f:	mov    r12,QWORD PTR [rsp+0x150]
   140049277:	mov    rsi,QWORD PTR [rsp+0x158]
   14004927f:	mov    rbx,QWORD PTR [rsp+0x168]
   140049287:	je     0x140049297
   140049289:	cmp    QWORD PTR [rdi+0x8],0x0
   14004928e:	je     0x140049297
   140049290:	mov    eax,0x1
   140049295:	jmp    0x140049299
   140049297:	xor    eax,eax
   140049299:	mov    rcx,QWORD PTR [rsp+0x140]
   1400492a1:	xor    rcx,rsp
   1400492a4:	call   0x140032f00
   1400492a9:	add    rsp,0x170
   1400492b0:	pop    rdi
   1400492b1:	ret    
   1400492b2:	int3   
   1400492b3:	int3   
   1400492b4:	int3   
   1400492b5:	int3   
   1400492b6:	int3   
   1400492b7:	int3   
   1400492b8:	int3   
   1400492b9:	int3   
   1400492ba:	int3   
   1400492bb:	int3   
   1400492bc:	int3   
   1400492bd:	int3   
   1400492be:	int3   
   1400492bf:	int3   
   1400492c0:	mov    rax,rsp
   1400492c3:	mov    QWORD PTR [rax+0x20],r9
   1400492c7:	mov    QWORD PTR [rax+0x18],r8
   1400492cb:	push   rbp
   1400492cc:	push   rsi
   1400492cd:	push   rdi
   1400492ce:	push   r12
   1400492d0:	push   r13
   1400492d2:	push   r14
   1400492d4:	push   r15
   1400492d6:	lea    rbp,[rax-0x5f]
   1400492da:	sub    rsp,0xa0
   1400492e1:	mov    QWORD PTR [rbp+0x1f],0xfffffffffffffffe
   1400492e9:	mov    QWORD PTR [rax+0x8],rbx
   1400492ed:	mov    r12,rdx
   1400492f0:	mov    r14d,ecx
   1400492f3:	lea    rcx,[rip+0x3d45e]        # 0x140086758
   1400492fa:	mov    rax,QWORD PTR [rip+0x3d457]        # 0x140086758
   140049301:	call   QWORD PTR [rax+0x18]
   140049304:	lea    rbx,[rax+0x18]
   140049308:	mov    QWORD PTR [rbp-0x51],rbx
   14004930c:	lea    rcx,[rip+0x3d445]        # 0x140086758
   140049313:	mov    rax,QWORD PTR [rip+0x3d43e]        # 0x140086758
   14004931a:	call   QWORD PTR [rax+0x18]
   14004931d:	lea    rsi,[rax+0x18]
   140049321:	mov    QWORD PTR [rbp-0x59],rsi
   140049325:	or     r13,0xffffffffffffffff
   140049329:	test   r12,r12
   14004932c:	je     0x14004936a
   14004932e:	test   r12,0xffffffffffff0000
   140049335:	jne    0x140049358
   140049337:	movzx  edi,r12w
   14004933b:	mov    ecx,edi
   14004933d:	call   0x14000c810
   140049342:	test   rax,rax
   140049345:	je     0x14004937f
   140049347:	mov    r8d,edi
   14004934a:	mov    rdx,rax
   14004934d:	lea    rcx,[rbp-0x59]
   140049351:	call   0x14000c9d0
   140049356:	jmp    0x14004937b
   140049358:	xor    eax,eax
   14004935a:	mov    rcx,r13
   14004935d:	mov    rdi,r12
   140049360:	repnz scas al,BYTE PTR es:[rdi]
   140049362:	not    rcx
   140049365:	dec    rcx
   140049368:	jmp    0x14004936c
   14004936a:	xor    ecx,ecx
   14004936c:	mov    r8d,ecx
   14004936f:	mov    rdx,r12
   140049372:	lea    rcx,[rbp-0x59]
   140049376:	call   0x140008d10
   14004937b:	mov    rsi,QWORD PTR [rbp-0x59]
   14004937f:	cmp    DWORD PTR [rsi-0x10],0x0
   140049383:	jle    0x1400494c7
   140049389:	mov    edx,0x3b
   14004938e:	mov    rcx,rsi
   140049391:	call   0x140035448
   140049396:	mov    rdi,rax
   140049399:	test   rax,rax
   14004939c:	je     0x1400494c7
   1400493a2:	sub    edi,esi
   1400493a4:	js     0x1400494c7
   1400493aa:	lea    r8d,[rdi+0x1]
   1400493ae:	lea    rdx,[rbp-0x11]
   1400493b2:	lea    rcx,[rbp-0x59]
   1400493b6:	call   0x140014fc0
   1400493bb:	nop
   1400493bc:	mov    rdx,QWORD PTR [rax]
   1400493bf:	lea    rcx,[rdx-0x18]
   1400493c3:	add    rbx,0xffffffffffffffe8
   1400493c7:	cmp    rcx,rbx
   1400493ca:	je     0x140049414
   1400493cc:	cmp    DWORD PTR [rbx+0x10],0x0
   1400493d0:	jl     0x140049406
   1400493d2:	mov    rax,QWORD PTR [rbx]
   1400493d5:	cmp    QWORD PTR [rcx],rax
   1400493d8:	jne    0x140049406
   1400493da:	call   0x140008e50
   1400493df:	mov    rsi,rax
   1400493e2:	mov    ecx,r13d
   1400493e5:	lock xadd DWORD PTR [rbx+0x10],ecx
   1400493ea:	dec    ecx
   1400493ec:	test   ecx,ecx
   1400493ee:	jg     0x1400493fc
   1400493f0:	mov    rcx,QWORD PTR [rbx]
   1400493f3:	mov    rax,QWORD PTR [rcx]
   1400493f6:	mov    rdx,rbx
   1400493f9:	call   QWORD PTR [rax+0x8]
   1400493fc:	lea    rax,[rsi+0x18]
   140049400:	mov    QWORD PTR [rbp-0x51],rax
   140049404:	jmp    0x140049414
   140049406:	mov    r8d,DWORD PTR [rdx-0x10]
   14004940a:	lea    rcx,[rbp-0x51]
   14004940e:	call   0x140008d10
   140049413:	nop
   140049414:	mov    rdx,QWORD PTR [rbp-0x11]
   140049418:	add    rdx,0xffffffffffffffe8
   14004941c:	mov    eax,r13d
   14004941f:	lock xadd DWORD PTR [rdx+0x10],eax
   140049424:	dec    eax
   140049426:	test   eax,eax
   140049428:	jg     0x140049433
   14004942a:	mov    rcx,QWORD PTR [rdx]
   14004942d:	mov    rax,QWORD PTR [rcx]
   140049430:	call   QWORD PTR [rax+0x8]
   140049433:	mov    r8d,edi
   140049436:	lea    rdx,[rbp-0x19]
   14004943a:	lea    rcx,[rbp-0x59]
   14004943e:	call   0x140017360
   140049443:	nop
   140049444:	mov    rdx,QWORD PTR [rax]
   140049447:	lea    rcx,[rdx-0x18]
   14004944b:	mov    rdi,QWORD PTR [rbp-0x59]
   14004944f:	add    rdi,0xffffffffffffffe8
   140049453:	cmp    rcx,rdi
   140049456:	je     0x1400494a0
   140049458:	cmp    DWORD PTR [rdi+0x10],0x0
   14004945c:	jl     0x140049492
   14004945e:	mov    rax,QWORD PTR [rdi]
   140049461:	cmp    QWORD PTR [rcx],rax
   140049464:	jne    0x140049492
   140049466:	call   0x140008e50
   14004946b:	mov    rbx,rax
   14004946e:	mov    ecx,r13d
   140049471:	lock xadd DWORD PTR [rdi+0x10],ecx
   140049476:	dec    ecx
   140049478:	test   ecx,ecx
   14004947a:	jg     0x140049488
   14004947c:	mov    rcx,QWORD PTR [rdi]
   14004947f:	mov    rax,QWORD PTR [rcx]
   140049482:	mov    rdx,rdi
   140049485:	call   QWORD PTR [rax+0x8]
   140049488:	lea    rax,[rbx+0x18]
   14004948c:	mov    QWORD PTR [rbp-0x59],rax
   140049490:	jmp    0x1400494a0
   140049492:	mov    r8d,DWORD PTR [rdx-0x10]
   140049496:	lea    rcx,[rbp-0x59]
   14004949a:	call   0x140008d10
   14004949f:	nop
   1400494a0:	mov    rdx,QWORD PTR [rbp-0x19]
   1400494a4:	add    rdx,0xffffffffffffffe8
   1400494a8:	mov    eax,r13d
   1400494ab:	lock xadd DWORD PTR [rdx+0x10],eax
   1400494b0:	dec    eax
   1400494b2:	test   eax,eax
   1400494b4:	jg     0x1400494bf
   1400494b6:	mov    rcx,QWORD PTR [rdx]
   1400494b9:	mov    rax,QWORD PTR [rcx]
   1400494bc:	call   QWORD PTR [rax+0x8]
   1400494bf:	mov    rsi,QWORD PTR [rbp-0x59]
   1400494c3:	mov    rbx,QWORD PTR [rbp-0x51]
   1400494c7:	xor    r12d,r12d
   1400494ca:	mov    r15d,r12d
   1400494cd:	cmp    DWORD PTR [rbx-0x10],r12d
   1400494d1:	jle    0x1400496fb
   1400494d7:	lea    edx,[r12+0x7b]
   1400494dc:	mov    rcx,rbx
   1400494df:	call   0x140035448
   1400494e4:	test   rax,rax
   1400494e7:	je     0x1400496fb
   1400494ed:	sub    eax,ebx
   1400494ef:	js     0x1400496fb
   1400494f5:	mov    QWORD PTR [rbp-0x39],r12
   1400494f9:	lea    ecx,[r12+0x50]
   1400494fe:	call   0x1400331a0
   140049503:	test   rax,rax
   140049506:	je     0x1400496ce
   14004950c:	mov    QWORD PTR [rbp-0x41],rax
   140049510:	mov    QWORD PTR [rax],rax
   140049513:	mov    rax,QWORD PTR [rbp-0x41]
   140049517:	mov    QWORD PTR [rax+0x8],rax
   14004951b:	mov    rax,QWORD PTR [rbp-0x41]
   14004951f:	mov    QWORD PTR [rax+0x10],rax
   140049523:	mov    rax,QWORD PTR [rbp-0x41]
   140049527:	mov    BYTE PTR [rax+0x48],0x1
   14004952b:	mov    rax,QWORD PTR [rbp-0x41]
   14004952f:	mov    BYTE PTR [rax+0x49],0x1
   140049533:	mov    DWORD PTR [rbp-0x29],r14d
   140049537:	lea    rcx,[rbp-0x49]
   14004953b:	call   0x14000ef00
   140049540:	nop
   140049541:	mov    rdx,rbx
   140049544:	lea    rcx,[rbp-0x49]
   140049548:	call   0x14000f390
   14004954d:	cmp    eax,0xffffffff
   140049550:	cmovne r15d,eax
   140049554:	mov    rax,QWORD PTR [rbp-0x41]
   140049558:	mov    rdi,QWORD PTR [rax+0x8]
   14004955c:	mov    rbx,rdi
   14004955f:	cmp    BYTE PTR [rdi+0x49],r12b
   140049563:	jne    0x1400495b5
   140049565:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140049570:	mov    rdx,QWORD PTR [rbx+0x10]
   140049574:	lea    rcx,[rbp-0x49]
   140049578:	call   0x140011a50
   14004957d:	mov    rbx,QWORD PTR [rbx]
   140049580:	cmp    QWORD PTR [rdi+0x38],0x10
   140049585:	jb     0x140049590
   140049587:	mov    rcx,QWORD PTR [rdi+0x20]
   14004958b:	call   0x1400330c0
   140049590:	mov    QWORD PTR [rdi+0x38],0xf
   140049598:	mov    QWORD PTR [rdi+0x30],r12
   14004959c:	mov    BYTE PTR [rdi+0x20],0x0
   1400495a0:	mov    rcx,rdi
   1400495a3:	call   0x1400330c0
   1400495a8:	mov    rdi,rbx
   1400495ab:	cmp    BYTE PTR [rbx+0x49],0x0
   1400495af:	je     0x140049570
   1400495b1:	mov    rax,QWORD PTR [rbp-0x41]
   1400495b5:	mov    QWORD PTR [rax+0x8],rax
   1400495b9:	mov    rax,QWORD PTR [rbp-0x41]
   1400495bd:	mov    QWORD PTR [rax],rax
   1400495c0:	mov    rax,QWORD PTR [rbp-0x41]
   1400495c4:	mov    QWORD PTR [rax+0x10],rax
   1400495c8:	mov    QWORD PTR [rbp-0x39],r12
   1400495cc:	mov    rbx,QWORD PTR [rbp-0x41]
   1400495d0:	mov    rdi,QWORD PTR [rbx]
   1400495d3:	cmp    rdi,rdi
   1400495d6:	jne    0x140049651
   1400495d8:	mov    rdi,QWORD PTR [rbx+0x8]
   1400495dc:	mov    r12,rdi
   1400495df:	xor    r14d,r14d
   1400495e2:	cmp    BYTE PTR [rdi+0x49],r14b
   1400495e6:	jne    0x140049638
   1400495e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400495f0:	mov    rdx,QWORD PTR [r12+0x10]
   1400495f5:	lea    rcx,[rbp-0x49]
   1400495f9:	call   0x140011a50
   1400495fe:	mov    r12,QWORD PTR [r12]
   140049602:	cmp    QWORD PTR [rdi+0x38],0x10
   140049607:	jb     0x140049612
   140049609:	mov    rcx,QWORD PTR [rdi+0x20]
   14004960d:	call   0x1400330c0
   140049612:	mov    QWORD PTR [rdi+0x38],0xf
   14004961a:	mov    QWORD PTR [rdi+0x30],r14
   14004961e:	mov    BYTE PTR [rdi+0x20],r14b
   140049622:	mov    rcx,rdi
   140049625:	call   0x1400330c0
   14004962a:	mov    rdi,r12
   14004962d:	cmp    BYTE PTR [r12+0x49],r14b
   140049632:	je     0x1400495f0
   140049634:	mov    rbx,QWORD PTR [rbp-0x41]
   140049638:	mov    QWORD PTR [rbx+0x8],rbx
   14004963c:	mov    rax,QWORD PTR [rbp-0x41]
   140049640:	mov    QWORD PTR [rax],rax
   140049643:	mov    rax,QWORD PTR [rbp-0x41]
   140049647:	mov    QWORD PTR [rax+0x10],rax
   14004964b:	mov    QWORD PTR [rbp-0x39],r14
   14004964f:	jmp    0x1400496c0
   140049651:	cmp    rdi,rbx
   140049654:	je     0x1400496c4
   140049656:	mov    r8,rdi
   140049659:	cmp    BYTE PTR [rdi+0x49],0x0
   14004965d:	jne    0x1400496ae
   14004965f:	mov    rax,QWORD PTR [rdi+0x10]
   140049663:	cmp    BYTE PTR [rax+0x49],0x0
   140049667:	jne    0x14004968e
   140049669:	mov    rdi,rax
   14004966c:	mov    rax,QWORD PTR [rax]
   14004966f:	cmp    BYTE PTR [rax+0x49],0x0
   140049673:	jne    0x1400496ae
   140049675:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140049680:	mov    rdi,rax
   140049683:	mov    rax,QWORD PTR [rax]
   140049686:	cmp    BYTE PTR [rax+0x49],0x0
   14004968a:	je     0x140049680
   14004968c:	jmp    0x1400496ae
   14004968e:	mov    rax,QWORD PTR [rdi+0x8]
   140049692:	cmp    BYTE PTR [rax+0x49],0x0
   140049696:	jne    0x1400496ab
   140049698:	cmp    rdi,QWORD PTR [rax+0x10]
   14004969c:	jne    0x1400496ab
   14004969e:	mov    rdi,rax
   1400496a1:	mov    rax,QWORD PTR [rax+0x8]
   1400496a5:	cmp    BYTE PTR [rax+0x49],0x0
   1400496a9:	je     0x140049698
   1400496ab:	mov    rdi,rax
   1400496ae:	lea    rdx,[rbp-0x1]
   1400496b2:	lea    rcx,[rbp-0x49]
   1400496b6:	call   0x140011560
   1400496bb:	cmp    rdi,rbx
   1400496be:	jne    0x140049656
   1400496c0:	mov    rbx,QWORD PTR [rbp-0x41]
   1400496c4:	mov    rcx,rbx
   1400496c7:	call   0x1400330c0
   1400496cc:	jmp    0x140049736
   1400496ce:	mov    QWORD PTR [rbp-0x9],r12
   1400496d2:	lea    rdx,[rbp-0x9]
   1400496d6:	lea    rcx,[rbp+0x7]
   1400496da:	call   0x140032fd4
   1400496df:	lea    rdx,[rip+0x1f1aa]        # 0x140068890
   1400496e6:	mov    QWORD PTR [rbp+0x7],rdx
   1400496ea:	lea    rdx,[rip+0x39d2f]        # 0x140083420
   1400496f1:	lea    rcx,[rbp+0x7]
   1400496f5:	call   0x140036358
   1400496fa:	int3   
   1400496fb:	mov    eax,DWORD PTR [rbx-0x10]
   1400496fe:	test   eax,eax
   140049700:	je     0x140049736
   140049702:	jns    0x14004970f
   140049704:	mov    ecx,0x80070057
   140049709:	call   0x1400025f0
   14004970e:	int3   
   14004970f:	movzx  ecx,BYTE PTR [rbx]
   140049712:	cmp    cl,0x30
   140049715:	jl     0x140049736
   140049717:	test   eax,eax
   140049719:	jns    0x140049726
   14004971b:	mov    ecx,0x80070057
   140049720:	call   0x1400025f0
   140049725:	int3   
   140049726:	cmp    cl,0x39
   140049729:	jg     0x140049736
   14004972b:	mov    rcx,rbx
   14004972e:	call   0x140033e08
   140049733:	mov    r15d,eax
   140049736:	mov    rax,QWORD PTR [rbp+0x7f]
   14004973a:	test   rax,rax
   14004973d:	je     0x140049742
   14004973f:	mov    DWORD PTR [rax],r15d
   140049742:	lea    rcx,[rsi-0x18]
   140049746:	call   0x140008e50
   14004974b:	lea    rdi,[rax+0x18]
   14004974f:	mov    QWORD PTR [rbp-0x21],rdi
   140049753:	test   r15d,r15d
   140049756:	je     0x14004976f
   140049758:	mov    r8d,r15d
   14004975b:	lea    rdx,[rip+0x25aea]        # 0x14006f24c
   140049762:	lea    rcx,[rbp-0x21]
   140049766:	call   0x14001f510
   14004976b:	mov    rdi,QWORD PTR [rbp-0x21]
   14004976f:	mov    r8,rdi
   140049772:	mov    edx,0x104
   140049777:	mov    rcx,QWORD PTR [rbp+0x77]
   14004977b:	call   0x1400336a8
   140049780:	nop
   140049781:	lea    rdx,[rdi-0x18]
   140049785:	mov    eax,r13d
   140049788:	lock xadd DWORD PTR [rdx+0x10],eax
   14004978d:	dec    eax
   14004978f:	test   eax,eax
   140049791:	jg     0x14004979d
   140049793:	mov    rcx,QWORD PTR [rdx]
   140049796:	mov    rax,QWORD PTR [rcx]
   140049799:	call   QWORD PTR [rax+0x8]
   14004979c:	nop
   14004979d:	mov    eax,r13d
   1400497a0:	lock xadd DWORD PTR [rsi-0x8],eax
   1400497a5:	dec    eax
   1400497a7:	test   eax,eax
   1400497a9:	jg     0x1400497ba
   1400497ab:	mov    rcx,QWORD PTR [rsi-0x18]
   1400497af:	mov    rax,QWORD PTR [rcx]
   1400497b2:	lea    rdx,[rsi-0x18]
   1400497b6:	call   QWORD PTR [rax+0x8]
   1400497b9:	nop
   1400497ba:	mov    rdx,QWORD PTR [rbp-0x51]
   1400497be:	add    rdx,0xffffffffffffffe8
   1400497c2:	lock xadd DWORD PTR [rdx+0x10],r13d
   1400497c8:	dec    r13d
   1400497cb:	test   r13d,r13d
   1400497ce:	jg     0x1400497d9
   1400497d0:	mov    rcx,QWORD PTR [rdx]
   1400497d3:	mov    rax,QWORD PTR [rcx]
   1400497d6:	call   QWORD PTR [rax+0x8]
   1400497d9:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400497e1:	add    rsp,0xa0
   1400497e8:	pop    r15
   1400497ea:	pop    r14
   1400497ec:	pop    r13
   1400497ee:	pop    r12
   1400497f0:	pop    rdi
   1400497f1:	pop    rsi
   1400497f2:	pop    rbp
   1400497f3:	ret    
   1400497f4:	int3   
   1400497f5:	int3   
   1400497f6:	int3   
   1400497f7:	int3   
   1400497f8:	int3   
   1400497f9:	int3   
   1400497fa:	int3   
   1400497fb:	int3   
   1400497fc:	int3   
   1400497fd:	int3   
   1400497fe:	int3   
   1400497ff:	int3   
   140049800:	sub    rsp,0x28
   140049804:	mov    r10,r8
   140049807:	test   edx,edx
   140049809:	jne    0x1400498a0
   14004980f:	cmp    ecx,0xe
   140049812:	ja     0x140049930
   140049818:	movsxd rax,ecx
   14004981b:	lea    rcx,[rip+0xfffffffffffb67de]        # 0x140000000
   140049822:	mov    eax,DWORD PTR [rcx+rax*4+0x49938]
   140049829:	add    rax,rcx
   14004982c:	jmp    rax
   14004982e:	lea    r8,[rip+0x21f1b]        # 0x14006b750
   140049835:	jmp    0x14004988f
   140049837:	lea    r8,[rip+0x25a12]        # 0x14006f250
   14004983e:	jmp    0x14004988f
   140049840:	lea    r8,[rip+0x25a39]        # 0x14006f280
   140049847:	jmp    0x14004988f
   140049849:	lea    r8,[rip+0x25a60]        # 0x14006f2b0
   140049850:	jmp    0x14004988f
   140049852:	lea    r8,[rip+0x25a87]        # 0x14006f2e0
   140049859:	jmp    0x14004988f
   14004985b:	lea    r8,[rip+0x24fa6]        # 0x14006e808
   140049862:	jmp    0x14004988f
   140049864:	lea    r8,[rip+0x25aa5]        # 0x14006f310
   14004986b:	jmp    0x14004988f
   14004986d:	lea    r8,[rip+0x25acc]        # 0x14006f340
   140049874:	jmp    0x14004988f
   140049876:	lea    r8,[rip+0x25af3]        # 0x14006f370
   14004987d:	jmp    0x14004988f
   14004987f:	lea    r8,[rip+0x25b1a]        # 0x14006f3a0
   140049886:	jmp    0x14004988f
   140049888:	lea    r8,[rip+0x25b39]        # 0x14006f3c8
   14004988f:	mov    edx,0x104
   140049894:	mov    rcx,r10
   140049897:	add    rsp,0x28
   14004989b:	jmp    0x1400336a8
   1400498a0:	cmp    ecx,0xe
   1400498a3:	ja     0x140049930
   1400498a9:	movsxd rax,ecx
   1400498ac:	lea    rcx,[rip+0xfffffffffffb674d]        # 0x140000000
   1400498b3:	mov    eax,DWORD PTR [rcx+rax*4+0x49974]
   1400498ba:	add    rax,rcx
   1400498bd:	jmp    rax
   1400498bf:	lea    r8,[rip+0x25b32]        # 0x14006f3f8
   1400498c6:	jmp    0x140049920
   1400498c8:	lea    r8,[rip+0x25b51]        # 0x14006f420
   1400498cf:	jmp    0x140049920
   1400498d1:	lea    r8,[rip+0x25b78]        # 0x14006f450
   1400498d8:	jmp    0x140049920
   1400498da:	lea    r8,[rip+0x25b9f]        # 0x14006f480
   1400498e1:	jmp    0x140049920
   1400498e3:	lea    r8,[rip+0x25bc6]        # 0x14006f4b0
   1400498ea:	jmp    0x140049920
   1400498ec:	lea    r8,[rip+0x25bed]        # 0x14006f4e0
   1400498f3:	jmp    0x140049920
   1400498f5:	lea    r8,[rip+0x25c0c]        # 0x14006f508
   1400498fc:	jmp    0x140049920
   1400498fe:	lea    r8,[rip+0x25c33]        # 0x14006f538
   140049905:	jmp    0x140049920
   140049907:	lea    r8,[rip+0x25c5a]        # 0x14006f568
   14004990e:	jmp    0x140049920
   140049910:	lea    r8,[rip+0x25c81]        # 0x14006f598
   140049917:	jmp    0x140049920
   140049919:	lea    r8,[rip+0x25ca8]        # 0x14006f5c8
   140049920:	mov    r9d,edx
   140049923:	mov    rcx,r10
   140049926:	mov    edx,0x104
   14004992b:	call   0x1400339ac
   140049930:	add    rsp,0x28
   140049934:	ret    
   140049935:	nop    DWORD PTR [rax]
   140049938:	cs cwde 
   14004993a:	add    al,0x0
   14004993c:	xor    BYTE PTR [rcx-0x67adfffc],bl
   140049942:	add    al,0x0
   140049944:	xor    BYTE PTR [rcx-0x67a4fffc],bl
   14004994a:	add    al,0x0
   14004994c:	jg     0x1400498e6
   14004994e:	add    al,0x0
   140049950:	rex.WB cdqe 
   140049952:	add    al,0x0
   140049954:	mov    BYTE PTR [rax-0x67c8fffc],bl
   14004995a:	add    al,0x0
   14004995c:	rex cwde 
   14004995e:	add    al,0x0
   140049960:	xor    BYTE PTR [rcx-0x67d1fffc],bl
   140049966:	add    al,0x0
   140049968:	ins    DWORD PTR es:[rdi],dx
   140049969:	cwde   
   14004996a:	add    al,0x0
   14004996c:	fs cwde 
   14004996e:	add    al,0x0
   140049970:	jbe    0x14004990a
   140049972:	add    al,0x0
   140049974:	mov    edi,0x30000498
   140049979:	cdq    
   14004997a:	add    al,0x0
   14004997c:	jrcxz  0x140049916
   14004997e:	add    al,0x0
   140049980:	xor    BYTE PTR [rcx-0x6713fffc],bl
   140049986:	add    al,0x0
   140049988:	(bad)  
   140049989:	cwde   
   14004998a:	add    al,0x0
   14004998c:	ficomp DWORD PTR [rax-0x66e6fffc]
   140049992:	add    al,0x0
   140049994:	enter  0x498,0x0
   140049998:	rcr    DWORD PTR [rax-0x66cffffc],1
   14004999e:	add    al,0x0
   1400499a0:	mov    edi,0x7000498
   1400499a5:	cdq    
   1400499a6:	add    al,0x0
   1400499a8:	cmc    
   1400499a9:	cwde   
   1400499aa:	add    al,0x0
   1400499ac:	adc    BYTE PTR [rcx-0x7cb7fffc],bl
   1400499b2:	in     al,dx
   1400499b3:	sub    BYTE PTR [rbp-0x75],cl
   1400499b6:	rol    BYTE PTR [rbp-0x6e7af02e],1
   1400499bc:	add    BYTE PTR [rax],al
   1400499be:	add    BYTE PTR [rbx-0x78f0f107],al
   1400499c4:	sbb    BYTE PTR [rcx],al
   1400499c6:	add    BYTE PTR [rax],al
   1400499c8:	movsxd rax,ecx
   1400499cb:	lea    rcx,[rip+0xfffffffffffb662e]        # 0x140000000
   1400499d2:	mov    eax,DWORD PTR [rcx+rax*4+0x49ae8]
   1400499d9:	add    rax,rcx
   1400499dc:	jmp    rax
   1400499de:	lea    r8,[rip+0x25c13]        # 0x14006f5f8
   1400499e5:	jmp    0x140049a3f
   1400499e7:	lea    r8,[rip+0x25c3a]        # 0x14006f628
   1400499ee:	jmp    0x140049a3f
   1400499f0:	lea    r8,[rip+0x25c69]        # 0x14006f660
   1400499f7:	jmp    0x140049a3f
   1400499f9:	lea    r8,[rip+0x25c98]        # 0x14006f698
   140049a00:	jmp    0x140049a3f
   140049a02:	lea    r8,[rip+0x25cbf]        # 0x14006f6c8
   140049a09:	jmp    0x140049a3f
   140049a0b:	lea    r8,[rip+0x25ce6]        # 0x14006f6f8
   140049a12:	jmp    0x140049a3f
   140049a14:	lea    r8,[rip+0x25d0d]        # 0x14006f728
   140049a1b:	jmp    0x140049a3f
   140049a1d:	lea    r8,[rip+0x25d34]        # 0x14006f758
   140049a24:	jmp    0x140049a3f
   140049a26:	lea    r8,[rip+0x25d5b]        # 0x14006f788
   140049a2d:	jmp    0x140049a3f
   140049a2f:	lea    r8,[rip+0x25d8a]        # 0x14006f7c0
   140049a36:	jmp    0x140049a3f
   140049a38:	lea    r8,[rip+0x25db9]        # 0x14006f7f8
   140049a3f:	mov    edx,0x104
   140049a44:	mov    rcx,r10
   140049a47:	add    rsp,0x28
   140049a4b:	jmp    0x1400336a8
   140049a50:	cmp    ecx,0xe
   140049a53:	ja     0x140049ae0
   140049a59:	movsxd rax,ecx
   140049a5c:	lea    rcx,[rip+0xfffffffffffb659d]        # 0x140000000
   140049a63:	mov    eax,DWORD PTR [rcx+rax*4+0x49b24]
   140049a6a:	add    rax,rcx
   140049a6d:	jmp    rax
   140049a6f:	lea    r8,[rip+0x25db2]        # 0x14006f828
   140049a76:	jmp    0x140049ad0
   140049a78:	lea    r8,[rip+0x25de1]        # 0x14006f860
   140049a7f:	jmp    0x140049ad0
   140049a81:	lea    r8,[rip+0x25e18]        # 0x14006f8a0
   140049a88:	jmp    0x140049ad0
   140049a8a:	lea    r8,[rip+0x25e4f]        # 0x14006f8e0
   140049a91:	jmp    0x140049ad0
   140049a93:	lea    r8,[rip+0x25e7e]        # 0x14006f918
   140049a9a:	jmp    0x140049ad0
   140049a9c:	lea    r8,[rip+0x25ead]        # 0x14006f950
   140049aa3:	jmp    0x140049ad0
   140049aa5:	lea    r8,[rip+0x25edc]        # 0x14006f988
   140049aac:	jmp    0x140049ad0
   140049aae:	lea    r8,[rip+0x25f0b]        # 0x14006f9c0
   140049ab5:	jmp    0x140049ad0
   140049ab7:	lea    r8,[rip+0x25f42]        # 0x14006fa00
   140049abe:	jmp    0x140049ad0
   140049ac0:	lea    r8,[rip+0x25f79]        # 0x14006fa40
   140049ac7:	jmp    0x140049ad0
   140049ac9:	lea    r8,[rip+0x25fa8]        # 0x14006fa78
   140049ad0:	mov    r9d,edx
   140049ad3:	mov    rcx,r10
   140049ad6:	mov    edx,0x104
   140049adb:	call   0x1400339ac
   140049ae0:	add    rsp,0x28
   140049ae4:	ret    
   140049ae5:	nop    DWORD PTR [rax]
   140049ae8:	ficomp WORD PTR [rcx-0x651ffffc]
   140049aee:	add    al,0x0
   140049af0:	add    bl,BYTE PTR [rdx-0x651ffffc]
   140049af6:	add    al,0x0
   140049af8:	or     ebx,DWORD PTR [rdx-0x65e2fffc]
   140049afe:	add    al,0x0
   140049b00:	stc    
   140049b01:	cdq    
   140049b02:	add    al,0x0
   140049b04:	cmp    BYTE PTR [rdx-0x6618fffc],bl
   140049b0a:	add    al,0x0
   140049b0c:	lock cdq 
   140049b0e:	add    al,0x0
   140049b10:	loopne 0x140049aac
   140049b12:	add    al,0x0
   140049b14:	ficomp WORD PTR [rcx-0x65d9fffc]
   140049b1a:	add    al,0x0
   140049b1c:	adc    al,0x9a
   140049b1e:	add    al,0x0
   140049b20:	(bad)  
   140049b21:	(bad)  
   140049b22:	add    al,0x0
   140049b24:	outs   dx,DWORD PTR ds:[rsi]
   140049b25:	(bad)  
   140049b26:	add    al,0x0
   140049b28:	loopne 0x140049ac4
   140049b2a:	add    al,0x0
   140049b2c:	xchg   ebx,eax
   140049b2d:	(bad)  
   140049b2e:	add    al,0x0
   140049b30:	loopne 0x140049acc
   140049b32:	add    al,0x0
   140049b34:	pushf  
   140049b35:	(bad)  
   140049b36:	add    al,0x0
   140049b38:	rcr    BYTE PTR [rdx-0x6575fffc],0x4
   140049b3f:	add    cl,cl
   140049b41:	(bad)  
   140049b42:	add    al,0x0
   140049b44:	js     0x140049ae0
   140049b46:	add    al,0x0
   140049b48:	sbb    DWORD PTR [rdx-0x651ffffc],0x9a6f0004
   140049b52:	add    al,0x0
   140049b54:	scas   al,BYTE PTR es:[rdi]
   140049b55:	(bad)  
   140049b56:	add    al,0x0
   140049b58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049b59:	(bad)  
   140049b5a:	add    al,0x0
   140049b5c:	mov    bh,0x9a
   140049b5e:	add    al,0x0
   140049b60:	sub    rsp,0x28
   140049b64:	mov    r10,r8
   140049b67:	test   edx,edx
   140049b69:	jne    0x140049c00
   140049b6f:	cmp    ecx,0xe
   140049b72:	ja     0x140049c90
   140049b78:	movsxd rax,ecx
   140049b7b:	lea    rcx,[rip+0xfffffffffffb647e]        # 0x140000000
   140049b82:	mov    eax,DWORD PTR [rcx+rax*4+0x49c98]
   140049b89:	add    rax,rcx
   140049b8c:	jmp    rax
   140049b8e:	lea    r8,[rip+0x25f23]        # 0x14006fab8
   140049b95:	jmp    0x140049bef
   140049b97:	lea    r8,[rip+0x25f4a]        # 0x14006fae8
   140049b9e:	jmp    0x140049bef
   140049ba0:	lea    r8,[rip+0x25f79]        # 0x14006fb20
   140049ba7:	jmp    0x140049bef
   140049ba9:	lea    r8,[rip+0x25fa8]        # 0x14006fb58
   140049bb0:	jmp    0x140049bef
   140049bb2:	lea    r8,[rip+0x25fd7]        # 0x14006fb90
   140049bb9:	jmp    0x140049bef
   140049bbb:	lea    r8,[rip+0x26006]        # 0x14006fbc8
   140049bc2:	jmp    0x140049bef
   140049bc4:	lea    r8,[rip+0x2602d]        # 0x14006fbf8
   140049bcb:	jmp    0x140049bef
   140049bcd:	lea    r8,[rip+0x2605c]        # 0x14006fc30
   140049bd4:	jmp    0x140049bef
   140049bd6:	lea    r8,[rip+0x26083]        # 0x14006fc60
   140049bdd:	jmp    0x140049bef
   140049bdf:	lea    r8,[rip+0x260b2]        # 0x14006fc98
   140049be6:	jmp    0x140049bef
   140049be8:	lea    r8,[rip+0x260e1]        # 0x14006fcd0
   140049bef:	mov    edx,0x104
   140049bf4:	mov    rcx,r10
   140049bf7:	add    rsp,0x28
   140049bfb:	jmp    0x1400336a8
   140049c00:	cmp    ecx,0xe
   140049c03:	ja     0x140049c90
   140049c09:	movsxd rax,ecx
   140049c0c:	lea    rcx,[rip+0xfffffffffffb63ed]        # 0x140000000
   140049c13:	mov    eax,DWORD PTR [rcx+rax*4+0x49cd4]
   140049c1a:	add    rax,rcx
   140049c1d:	jmp    rax
   140049c1f:	lea    r8,[rip+0x260e2]        # 0x14006fd08
   140049c26:	jmp    0x140049c80
   140049c28:	lea    r8,[rip+0x26111]        # 0x14006fd40
   140049c2f:	jmp    0x140049c80
   140049c31:	lea    r8,[rip+0x26148]        # 0x14006fd80
   140049c38:	jmp    0x140049c80
   140049c3a:	lea    r8,[rip+0x2617f]        # 0x14006fdc0
   140049c41:	jmp    0x140049c80
   140049c43:	lea    r8,[rip+0x261b6]        # 0x14006fe00
   140049c4a:	jmp    0x140049c80
   140049c4c:	lea    r8,[rip+0x261ed]        # 0x14006fe40
   140049c53:	jmp    0x140049c80
   140049c55:	lea    r8,[rip+0x2621c]        # 0x14006fe78
   140049c5c:	jmp    0x140049c80
   140049c5e:	lea    r8,[rip+0x26253]        # 0x14006feb8
   140049c65:	jmp    0x140049c80
   140049c67:	lea    r8,[rip+0x2628a]        # 0x14006fef8
   140049c6e:	jmp    0x140049c80
   140049c70:	lea    r8,[rip+0x262c1]        # 0x14006ff38
   140049c77:	jmp    0x140049c80
   140049c79:	lea    r8,[rip+0x262f8]        # 0x14006ff78
   140049c80:	mov    r9d,edx
   140049c83:	mov    rcx,r10
   140049c86:	mov    edx,0x104
   140049c8b:	call   0x1400339ac
   140049c90:	add    rsp,0x28
   140049c94:	ret    
   140049c95:	nop    DWORD PTR [rax]
   140049c98:	mov    ds,WORD PTR [rbx-0x636ffffc]
   140049c9e:	add    al,0x0
   140049ca0:	mov    dl,0x9b
   140049ca2:	add    al,0x0
   140049ca4:	nop
   140049ca5:	pushf  
   140049ca6:	add    al,0x0
   140049ca8:	mov    ebx,0xcd00049b
   140049cad:	fwait
   140049cae:	add    al,0x0
   140049cb0:	test   eax,0xe800049b
   140049cb5:	fwait
   140049cb6:	add    al,0x0
   140049cb8:	xchg   edi,eax
   140049cb9:	fwait
   140049cba:	add    al,0x0
   140049cbc:	movabs al,ds:0x8e00049c9000049b
   140049cc5:	fwait
   140049cc6:	add    al,0x0
   140049cc8:	(bad)  
   140049cc9:	fwait
   140049cca:	add    al,0x0
   140049ccc:	(bad)  
   140049ccd:	fwait
   140049cce:	add    al,0x0
   140049cd0:	fistp  WORD PTR [rbx-0x63e0fffc]
   140049cd6:	add    al,0x0
   140049cd8:	nop
   140049cd9:	pushf  
   140049cda:	add    al,0x0
   140049cdc:	rex.XB pushf 
   140049cde:	add    al,0x0
   140049ce0:	nop
   140049ce1:	pushf  
   140049ce2:	add    al,0x0
   140049ce4:	rex.WR pushf 
   140049ce6:	add    al,0x0
   140049ce8:	jo     0x140049c86
   140049cea:	add    al,0x0
   140049cec:	cmp    bl,BYTE PTR [rsp+rax*1+0x49c7900]
   140049cf3:	add    BYTE PTR [rax],ch
   140049cf5:	pushf  
   140049cf6:	add    al,0x0
   140049cf8:	xor    DWORD PTR [rsp+rax*1+0x49c9000],ebx
   140049cff:	add    BYTE PTR [rdi],bl
   140049d01:	pushf  
   140049d02:	add    al,0x0
   140049d04:	pop    rsi
   140049d05:	pushf  
   140049d06:	add    al,0x0
   140049d08:	push   rbp
   140049d09:	pushf  
   140049d0a:	add    al,0x0
   140049d0c:	addr32 pushf 
   140049d0e:	add    al,0x0
   140049d10:	mov    QWORD PTR [rsp+0x8],rcx
   140049d15:	push   rbx
   140049d16:	push   rsi
   140049d17:	push   rdi
   140049d18:	sub    rsp,0x30
   140049d1c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140049d25:	mov    rbx,rcx
   140049d28:	lea    rax,[rip+0x2d679]        # 0x1400773a8
   140049d2f:	mov    QWORD PTR [rcx],rax
   140049d32:	lea    rsi,[rcx+0x10]
   140049d36:	mov    rcx,rsi
   140049d39:	call   0x14002af20
   140049d3e:	lea    rdi,[rbx+0x30]
   140049d42:	mov    rcx,rdi
   140049d45:	call   0x140030070
   140049d4a:	mov    r11,QWORD PTR [rbx+0x18]
   140049d4e:	mov    QWORD PTR [rbx+0x50],r11
   140049d52:	mov    rax,QWORD PTR [rbx+0x38]
   140049d56:	mov    QWORD PTR [rbx+0x58],rax
   140049d5a:	mov    QWORD PTR [rsp+0x58],rdi
   140049d5f:	mov    r8,QWORD PTR [rdi+0x8]
   140049d63:	mov    r9,r8
   140049d66:	mov    r8,QWORD PTR [r8]
   140049d69:	lea    rdx,[rsp+0x60]
   140049d6e:	mov    rcx,rdi
   140049d71:	call   0x1400301d0
   140049d76:	nop
   140049d77:	mov    rcx,QWORD PTR [rdi+0x8]
   140049d7b:	call   0x1400330c0
   140049d80:	nop
   140049d81:	mov    QWORD PTR [rsp+0x50],rsi
   140049d86:	mov    r8,QWORD PTR [rsi+0x8]
   140049d8a:	mov    r9,r8
   140049d8d:	mov    r8,QWORD PTR [r8]
   140049d90:	lea    rdx,[rsp+0x58]
   140049d95:	mov    rcx,rsi
   140049d98:	call   0x14002b250
   140049d9d:	nop
   140049d9e:	mov    rcx,QWORD PTR [rsi+0x8]
   140049da2:	add    rsp,0x30
   140049da6:	pop    rdi
   140049da7:	pop    rsi
   140049da8:	pop    rbx
   140049da9:	jmp    0x1400330c0
   140049dae:	int3   
   140049daf:	int3   
   140049db0:	rex push rbp
   140049db2:	push   rbx
   140049db3:	push   rsi
   140049db4:	push   rdi
   140049db5:	mov    rbp,rsp
   140049db8:	sub    rsp,0x38
   140049dbc:	mov    QWORD PTR [rsp+0x70],r12
   140049dc1:	mov    QWORD PTR [rsp+0x30],r13
   140049dc6:	xor    r12d,r12d
   140049dc9:	mov    QWORD PTR [rsp+0x28],r14
   140049dce:	mov    rsi,rcx
   140049dd1:	mov    QWORD PTR [rsp+0x20],r15
   140049dd6:	cmp    DWORD PTR [rcx+0x8],r12d
   140049dda:	jne    0x140049e30
   140049ddc:	lea    rdx,[rbp+0x28]
   140049de0:	add    rcx,0x30
   140049de4:	mov    DWORD PTR [rbp+0x28],0x2c
   140049deb:	call   0x14002ffd0
   140049df0:	lea    rcx,[rip+0x26da9]        # 0x140070ba0
   140049df7:	lea    rdx,[rbp+0x28]
   140049dfb:	mov    DWORD PTR [rax],r12d
   140049dfe:	mov    DWORD PTR [rax+0x4],0x2c
   140049e05:	mov    QWORD PTR [rax+0x8],rcx
   140049e09:	lea    rcx,[rsi+0x10]
   140049e0d:	mov    DWORD PTR [rbp+0x30],0x2c
   140049e14:	mov    DWORD PTR [rbp+0x28],r12d
   140049e18:	call   0x14002ff30
   140049e1d:	lea    rdx,[rbp+0x30]
   140049e21:	lea    rcx,[rsi+0x30]
   140049e25:	mov    rbx,rax
   140049e28:	call   0x14002ffd0
   140049e2d:	mov    QWORD PTR [rbx],rax
   140049e30:	cmp    DWORD PTR [rsi+0x8],r12d
   140049e34:	jne    0x14005b3df
   140049e3a:	lea    rdx,[rbp+0x28]
   140049e3e:	lea    rcx,[rsi+0x30]
   140049e42:	mov    DWORD PTR [rbp+0x28],0x28
   140049e49:	call   0x14002ffd0
   140049e4e:	lea    rcx,[rip+0x26d63]        # 0x140070bb8
   140049e55:	lea    rdx,[rbp+0x28]
   140049e59:	mov    DWORD PTR [rax],0x1
   140049e5f:	mov    DWORD PTR [rax+0x4],0x28
   140049e66:	mov    QWORD PTR [rax+0x8],rcx
   140049e6a:	lea    rcx,[rsi+0x10]
   140049e6e:	mov    DWORD PTR [rbp+0x30],0x28
   140049e75:	mov    DWORD PTR [rbp+0x28],0x1
   140049e7c:	call   0x14002ff30
   140049e81:	lea    rdx,[rbp+0x30]
   140049e85:	lea    rcx,[rsi+0x30]
   140049e89:	mov    rbx,rax
   140049e8c:	call   0x14002ffd0
   140049e91:	mov    QWORD PTR [rbx],rax
   140049e94:	cmp    DWORD PTR [rsi+0x8],r12d
   140049e98:	jne    0x14005b3df
   140049e9e:	lea    rdx,[rbp+0x28]
   140049ea2:	lea    rcx,[rsi+0x30]
   140049ea6:	mov    DWORD PTR [rbp+0x28],0x2a
   140049ead:	call   0x14002ffd0
   140049eb2:	lea    rcx,[rip+0x26d0f]        # 0x140070bc8
   140049eb9:	lea    rdx,[rbp+0x28]
   140049ebd:	mov    DWORD PTR [rax],0x2
   140049ec3:	mov    DWORD PTR [rax+0x4],0x2a
   140049eca:	mov    QWORD PTR [rax+0x8],rcx
   140049ece:	lea    rcx,[rsi+0x10]
   140049ed2:	mov    DWORD PTR [rbp+0x30],0x2a
   140049ed9:	mov    DWORD PTR [rbp+0x28],0x2
   140049ee0:	call   0x14002ff30
   140049ee5:	lea    rdx,[rbp+0x30]
   140049ee9:	lea    rcx,[rsi+0x30]
   140049eed:	mov    rbx,rax
   140049ef0:	call   0x14002ffd0
   140049ef5:	mov    QWORD PTR [rbx],rax
   140049ef8:	cmp    DWORD PTR [rsi+0x8],r12d
   140049efc:	jne    0x14005b3df
   140049f02:	lea    rdx,[rbp+0x28]
   140049f06:	lea    rcx,[rsi+0x30]
   140049f0a:	mov    DWORD PTR [rbp+0x28],0x29
   140049f11:	call   0x14002ffd0
   140049f16:	lea    rcx,[rip+0x26cbb]        # 0x140070bd8
   140049f1d:	lea    rdx,[rbp+0x28]
   140049f21:	mov    DWORD PTR [rax],0x3
   140049f27:	mov    DWORD PTR [rax+0x4],0x29
   140049f2e:	mov    QWORD PTR [rax+0x8],rcx
   140049f32:	lea    rcx,[rsi+0x10]
   140049f36:	mov    DWORD PTR [rbp+0x30],0x29
   140049f3d:	mov    DWORD PTR [rbp+0x28],0x3
   140049f44:	call   0x14002ff30
   140049f49:	lea    rdx,[rbp+0x30]
   140049f4d:	lea    rcx,[rsi+0x30]
   140049f51:	mov    rbx,rax
   140049f54:	call   0x14002ffd0
   140049f59:	mov    QWORD PTR [rbx],rax
   140049f5c:	cmp    DWORD PTR [rsi+0x8],r12d
   140049f60:	jne    0x14005b3df
   140049f66:	lea    rdx,[rbp+0x28]
   140049f6a:	lea    rcx,[rsi+0x30]
   140049f6e:	mov    DWORD PTR [rbp+0x28],0x2b
   140049f75:	call   0x14002ffd0
   140049f7a:	lea    rcx,[rip+0x26c67]        # 0x140070be8
   140049f81:	lea    rdx,[rbp+0x28]
   140049f85:	mov    DWORD PTR [rax],0x4
   140049f8b:	mov    DWORD PTR [rax+0x4],0x2b
   140049f92:	mov    QWORD PTR [rax+0x8],rcx
   140049f96:	lea    rcx,[rsi+0x10]
   140049f9a:	mov    DWORD PTR [rbp+0x30],0x2b
   140049fa1:	mov    DWORD PTR [rbp+0x28],0x4
   140049fa8:	call   0x14002ff30
   140049fad:	lea    rdx,[rbp+0x30]
   140049fb1:	lea    rcx,[rsi+0x30]
   140049fb5:	mov    rbx,rax
   140049fb8:	call   0x14002ffd0
   140049fbd:	mov    QWORD PTR [rbx],rax
   140049fc0:	cmp    DWORD PTR [rsi+0x8],r12d
   140049fc4:	jne    0x14005b3df
   140049fca:	lea    rdx,[rbp+0x28]
   140049fce:	lea    rcx,[rsi+0x30]
   140049fd2:	mov    DWORD PTR [rbp+0x28],0x36
   140049fd9:	call   0x14002ffd0
   140049fde:	lea    rcx,[rip+0x26c13]        # 0x140070bf8
   140049fe5:	lea    rdx,[rbp+0x28]
   140049fe9:	mov    DWORD PTR [rax],0x5
   140049fef:	mov    DWORD PTR [rax+0x4],0x36
   140049ff6:	mov    QWORD PTR [rax+0x8],rcx
   140049ffa:	lea    rcx,[rsi+0x10]
   140049ffe:	mov    DWORD PTR [rbp+0x30],0x36
   14004a005:	mov    DWORD PTR [rbp+0x28],0x5
   14004a00c:	call   0x14002ff30
   14004a011:	lea    rdx,[rbp+0x30]
   14004a015:	lea    rcx,[rsi+0x30]
   14004a019:	mov    rbx,rax
   14004a01c:	call   0x14002ffd0
   14004a021:	mov    QWORD PTR [rbx],rax
   14004a024:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a028:	jne    0x14005b3df
   14004a02e:	lea    rdx,[rbp+0x28]
   14004a032:	lea    rcx,[rsi+0x30]
   14004a036:	mov    DWORD PTR [rbp+0x28],0x32
   14004a03d:	call   0x14002ffd0
   14004a042:	lea    rcx,[rip+0x26bc7]        # 0x140070c10
   14004a049:	lea    rdx,[rbp+0x28]
   14004a04d:	mov    DWORD PTR [rax],0x6
   14004a053:	mov    DWORD PTR [rax+0x4],0x32
   14004a05a:	mov    QWORD PTR [rax+0x8],rcx
   14004a05e:	lea    rcx,[rsi+0x10]
   14004a062:	mov    DWORD PTR [rbp+0x30],0x32
   14004a069:	mov    DWORD PTR [rbp+0x28],0x6
   14004a070:	call   0x14002ff30
   14004a075:	lea    rdx,[rbp+0x30]
   14004a079:	lea    rcx,[rsi+0x30]
   14004a07d:	mov    rbx,rax
   14004a080:	call   0x14002ffd0
   14004a085:	mov    QWORD PTR [rbx],rax
   14004a088:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a08c:	jne    0x14005b3df
   14004a092:	lea    rdx,[rbp+0x28]
   14004a096:	lea    rcx,[rsi+0x30]
   14004a09a:	mov    DWORD PTR [rbp+0x28],0x34
   14004a0a1:	call   0x14002ffd0
   14004a0a6:	lea    rcx,[rip+0x26b73]        # 0x140070c20
   14004a0ad:	lea    rdx,[rbp+0x28]
   14004a0b1:	mov    DWORD PTR [rax],0x7
   14004a0b7:	mov    DWORD PTR [rax+0x4],0x34
   14004a0be:	mov    QWORD PTR [rax+0x8],rcx
   14004a0c2:	lea    rcx,[rsi+0x10]
   14004a0c6:	mov    DWORD PTR [rbp+0x30],0x34
   14004a0cd:	mov    DWORD PTR [rbp+0x28],0x7
   14004a0d4:	call   0x14002ff30
   14004a0d9:	lea    rdx,[rbp+0x30]
   14004a0dd:	lea    rcx,[rsi+0x30]
   14004a0e1:	mov    rbx,rax
   14004a0e4:	call   0x14002ffd0
   14004a0e9:	mov    QWORD PTR [rbx],rax
   14004a0ec:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a0f0:	jne    0x14005b3df
   14004a0f6:	lea    rdx,[rbp+0x28]
   14004a0fa:	lea    rcx,[rsi+0x30]
   14004a0fe:	mov    DWORD PTR [rbp+0x28],0x33
   14004a105:	call   0x14002ffd0
   14004a10a:	lea    rcx,[rip+0x26b1f]        # 0x140070c30
   14004a111:	lea    rdx,[rbp+0x28]
   14004a115:	mov    DWORD PTR [rax],0x8
   14004a11b:	mov    DWORD PTR [rax+0x4],0x33
   14004a122:	mov    QWORD PTR [rax+0x8],rcx
   14004a126:	lea    rcx,[rsi+0x10]
   14004a12a:	mov    DWORD PTR [rbp+0x30],0x33
   14004a131:	mov    DWORD PTR [rbp+0x28],0x8
   14004a138:	call   0x14002ff30
   14004a13d:	lea    rdx,[rbp+0x30]
   14004a141:	lea    rcx,[rsi+0x30]
   14004a145:	mov    rbx,rax
   14004a148:	call   0x14002ffd0
   14004a14d:	mov    QWORD PTR [rbx],rax
   14004a150:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a154:	jne    0x14005b3df
   14004a15a:	lea    rdx,[rbp+0x28]
   14004a15e:	lea    rcx,[rsi+0x30]
   14004a162:	mov    DWORD PTR [rbp+0x28],0x35
   14004a169:	call   0x14002ffd0
   14004a16e:	lea    rcx,[rip+0x26acb]        # 0x140070c40
   14004a175:	lea    rdx,[rbp+0x28]
   14004a179:	mov    DWORD PTR [rax],0x9
   14004a17f:	mov    DWORD PTR [rax+0x4],0x35
   14004a186:	mov    QWORD PTR [rax+0x8],rcx
   14004a18a:	lea    rcx,[rsi+0x10]
   14004a18e:	mov    DWORD PTR [rbp+0x30],0x35
   14004a195:	mov    DWORD PTR [rbp+0x28],0x9
   14004a19c:	call   0x14002ff30
   14004a1a1:	lea    rdx,[rbp+0x30]
   14004a1a5:	lea    rcx,[rsi+0x30]
   14004a1a9:	mov    rbx,rax
   14004a1ac:	call   0x14002ffd0
   14004a1b1:	mov    QWORD PTR [rbx],rax
   14004a1b4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a1b8:	jne    0x14005b3df
   14004a1be:	lea    rdx,[rbp+0x28]
   14004a1c2:	lea    rcx,[rsi+0x30]
   14004a1c6:	mov    DWORD PTR [rbp+0x28],0x40
   14004a1cd:	call   0x14002ffd0
   14004a1d2:	lea    rcx,[rip+0x26a77]        # 0x140070c50
   14004a1d9:	lea    rdx,[rbp+0x28]
   14004a1dd:	mov    DWORD PTR [rax],0xa
   14004a1e3:	mov    DWORD PTR [rax+0x4],0x40
   14004a1ea:	mov    QWORD PTR [rax+0x8],rcx
   14004a1ee:	lea    rcx,[rsi+0x10]
   14004a1f2:	mov    DWORD PTR [rbp+0x30],0x40
   14004a1f9:	mov    DWORD PTR [rbp+0x28],0xa
   14004a200:	call   0x14002ff30
   14004a205:	lea    rdx,[rbp+0x30]
   14004a209:	lea    rcx,[rsi+0x30]
   14004a20d:	mov    rbx,rax
   14004a210:	call   0x14002ffd0
   14004a215:	mov    QWORD PTR [rbx],rax
   14004a218:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a21c:	jne    0x14005b3df
   14004a222:	lea    rdx,[rbp+0x28]
   14004a226:	lea    rcx,[rsi+0x30]
   14004a22a:	mov    DWORD PTR [rbp+0x28],0x3c
   14004a231:	call   0x14002ffd0
   14004a236:	lea    rcx,[rip+0x26a2b]        # 0x140070c68
   14004a23d:	lea    rdx,[rbp+0x28]
   14004a241:	mov    DWORD PTR [rax],0xb
   14004a247:	mov    DWORD PTR [rax+0x4],0x3c
   14004a24e:	mov    QWORD PTR [rax+0x8],rcx
   14004a252:	lea    rcx,[rsi+0x10]
   14004a256:	mov    DWORD PTR [rbp+0x30],0x3c
   14004a25d:	mov    DWORD PTR [rbp+0x28],0xb
   14004a264:	call   0x14002ff30
   14004a269:	lea    rdx,[rbp+0x30]
   14004a26d:	lea    rcx,[rsi+0x30]
   14004a271:	mov    rbx,rax
   14004a274:	call   0x14002ffd0
   14004a279:	mov    QWORD PTR [rbx],rax
   14004a27c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a280:	jne    0x14005b3df
   14004a286:	lea    rdx,[rbp+0x28]
   14004a28a:	lea    rcx,[rsi+0x30]
   14004a28e:	mov    DWORD PTR [rbp+0x28],0x3e
   14004a295:	call   0x14002ffd0
   14004a29a:	lea    rcx,[rip+0x269d7]        # 0x140070c78
   14004a2a1:	lea    rdx,[rbp+0x28]
   14004a2a5:	mov    DWORD PTR [rax],0xc
   14004a2ab:	mov    DWORD PTR [rax+0x4],0x3e
   14004a2b2:	mov    QWORD PTR [rax+0x8],rcx
   14004a2b6:	lea    rcx,[rsi+0x10]
   14004a2ba:	mov    DWORD PTR [rbp+0x30],0x3e
   14004a2c1:	mov    DWORD PTR [rbp+0x28],0xc
   14004a2c8:	call   0x14002ff30
   14004a2cd:	lea    rdx,[rbp+0x30]
   14004a2d1:	lea    rcx,[rsi+0x30]
   14004a2d5:	mov    rbx,rax
   14004a2d8:	call   0x14002ffd0
   14004a2dd:	mov    QWORD PTR [rbx],rax
   14004a2e0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a2e4:	jne    0x14005b3df
   14004a2ea:	lea    rdx,[rbp+0x28]
   14004a2ee:	lea    rcx,[rsi+0x30]
   14004a2f2:	mov    DWORD PTR [rbp+0x28],0x3d
   14004a2f9:	call   0x14002ffd0
   14004a2fe:	lea    rcx,[rip+0x26983]        # 0x140070c88
   14004a305:	lea    rdx,[rbp+0x28]
   14004a309:	mov    DWORD PTR [rax],0xd
   14004a30f:	mov    DWORD PTR [rax+0x4],0x3d
   14004a316:	mov    QWORD PTR [rax+0x8],rcx
   14004a31a:	lea    rcx,[rsi+0x10]
   14004a31e:	mov    DWORD PTR [rbp+0x30],0x3d
   14004a325:	mov    DWORD PTR [rbp+0x28],0xd
   14004a32c:	call   0x14002ff30
   14004a331:	lea    rdx,[rbp+0x30]
   14004a335:	lea    rcx,[rsi+0x30]
   14004a339:	mov    rbx,rax
   14004a33c:	call   0x14002ffd0
   14004a341:	mov    QWORD PTR [rbx],rax
   14004a344:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a348:	jne    0x14005b3df
   14004a34e:	lea    rdx,[rbp+0x28]
   14004a352:	lea    rcx,[rsi+0x30]
   14004a356:	mov    DWORD PTR [rbp+0x28],0x3f
   14004a35d:	call   0x14002ffd0
   14004a362:	lea    rcx,[rip+0x2692f]        # 0x140070c98
   14004a369:	lea    rdx,[rbp+0x28]
   14004a36d:	mov    DWORD PTR [rax],0xe
   14004a373:	mov    DWORD PTR [rax+0x4],0x3f
   14004a37a:	mov    QWORD PTR [rax+0x8],rcx
   14004a37e:	lea    rcx,[rsi+0x10]
   14004a382:	mov    DWORD PTR [rbp+0x30],0x3f
   14004a389:	mov    DWORD PTR [rbp+0x28],0xe
   14004a390:	call   0x14002ff30
   14004a395:	lea    rdx,[rbp+0x30]
   14004a399:	lea    rcx,[rsi+0x30]
   14004a39d:	mov    rbx,rax
   14004a3a0:	call   0x14002ffd0
   14004a3a5:	mov    QWORD PTR [rbx],rax
   14004a3a8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a3ac:	jne    0x14005b3df
   14004a3b2:	lea    rdx,[rbp+0x28]
   14004a3b6:	lea    rcx,[rsi+0x30]
   14004a3ba:	mov    DWORD PTR [rbp+0x28],0x4a
   14004a3c1:	call   0x14002ffd0
   14004a3c6:	lea    rcx,[rip+0x268db]        # 0x140070ca8
   14004a3cd:	lea    rdx,[rbp+0x28]
   14004a3d1:	mov    DWORD PTR [rax],0xf
   14004a3d7:	mov    DWORD PTR [rax+0x4],0x4a
   14004a3de:	mov    QWORD PTR [rax+0x8],rcx
   14004a3e2:	lea    rcx,[rsi+0x10]
   14004a3e6:	mov    DWORD PTR [rbp+0x30],0x4a
   14004a3ed:	mov    DWORD PTR [rbp+0x28],0xf
   14004a3f4:	call   0x14002ff30
   14004a3f9:	lea    rdx,[rbp+0x30]
   14004a3fd:	lea    rcx,[rsi+0x30]
   14004a401:	mov    rbx,rax
   14004a404:	call   0x14002ffd0
   14004a409:	mov    QWORD PTR [rbx],rax
   14004a40c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a410:	jne    0x14005b3df
   14004a416:	lea    rdx,[rbp+0x28]
   14004a41a:	lea    rcx,[rsi+0x30]
   14004a41e:	mov    DWORD PTR [rbp+0x28],0x46
   14004a425:	call   0x14002ffd0
   14004a42a:	lea    rcx,[rip+0x2688f]        # 0x140070cc0
   14004a431:	lea    rdx,[rbp+0x28]
   14004a435:	mov    DWORD PTR [rax],0x10
   14004a43b:	mov    DWORD PTR [rax+0x4],0x46
   14004a442:	mov    QWORD PTR [rax+0x8],rcx
   14004a446:	lea    rcx,[rsi+0x10]
   14004a44a:	mov    DWORD PTR [rbp+0x30],0x46
   14004a451:	mov    DWORD PTR [rbp+0x28],0x10
   14004a458:	call   0x14002ff30
   14004a45d:	lea    rdx,[rbp+0x30]
   14004a461:	lea    rcx,[rsi+0x30]
   14004a465:	mov    rbx,rax
   14004a468:	call   0x14002ffd0
   14004a46d:	mov    QWORD PTR [rbx],rax
   14004a470:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a474:	jne    0x14005b3df
   14004a47a:	lea    rdx,[rbp+0x28]
   14004a47e:	lea    rcx,[rsi+0x30]
   14004a482:	mov    DWORD PTR [rbp+0x28],0x48
   14004a489:	call   0x14002ffd0
   14004a48e:	lea    rcx,[rip+0x2683b]        # 0x140070cd0
   14004a495:	lea    rdx,[rbp+0x28]
   14004a499:	mov    DWORD PTR [rax],0x11
   14004a49f:	mov    DWORD PTR [rax+0x4],0x48
   14004a4a6:	mov    QWORD PTR [rax+0x8],rcx
   14004a4aa:	lea    rcx,[rsi+0x10]
   14004a4ae:	mov    DWORD PTR [rbp+0x30],0x48
   14004a4b5:	mov    DWORD PTR [rbp+0x28],0x11
   14004a4bc:	call   0x14002ff30
   14004a4c1:	lea    rdx,[rbp+0x30]
   14004a4c5:	lea    rcx,[rsi+0x30]
   14004a4c9:	mov    rbx,rax
   14004a4cc:	call   0x14002ffd0
   14004a4d1:	mov    QWORD PTR [rbx],rax
   14004a4d4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a4d8:	jne    0x14005b3df
   14004a4de:	lea    rdx,[rbp+0x28]
   14004a4e2:	lea    rcx,[rsi+0x30]
   14004a4e6:	mov    DWORD PTR [rbp+0x28],0x47
   14004a4ed:	call   0x14002ffd0
   14004a4f2:	lea    rcx,[rip+0x267e7]        # 0x140070ce0
   14004a4f9:	lea    rdx,[rbp+0x28]
   14004a4fd:	mov    DWORD PTR [rax],0x12
   14004a503:	mov    DWORD PTR [rax+0x4],0x47
   14004a50a:	mov    QWORD PTR [rax+0x8],rcx
   14004a50e:	lea    rcx,[rsi+0x10]
   14004a512:	mov    DWORD PTR [rbp+0x30],0x47
   14004a519:	mov    DWORD PTR [rbp+0x28],0x12
   14004a520:	call   0x14002ff30
   14004a525:	lea    rdx,[rbp+0x30]
   14004a529:	lea    rcx,[rsi+0x30]
   14004a52d:	mov    rbx,rax
   14004a530:	call   0x14002ffd0
   14004a535:	mov    QWORD PTR [rbx],rax
   14004a538:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a53c:	jne    0x14005b3df
   14004a542:	lea    rdx,[rbp+0x28]
   14004a546:	lea    rcx,[rsi+0x30]
   14004a54a:	mov    DWORD PTR [rbp+0x28],0x49
   14004a551:	call   0x14002ffd0
   14004a556:	lea    rcx,[rip+0x26793]        # 0x140070cf0
   14004a55d:	lea    rdx,[rbp+0x28]
   14004a561:	mov    DWORD PTR [rax],0x13
   14004a567:	mov    DWORD PTR [rax+0x4],0x49
   14004a56e:	mov    QWORD PTR [rax+0x8],rcx
   14004a572:	lea    rcx,[rsi+0x10]
   14004a576:	mov    DWORD PTR [rbp+0x30],0x49
   14004a57d:	mov    DWORD PTR [rbp+0x28],0x13
   14004a584:	call   0x14002ff30
   14004a589:	lea    rdx,[rbp+0x30]
   14004a58d:	lea    rcx,[rsi+0x30]
   14004a591:	mov    rbx,rax
   14004a594:	call   0x14002ffd0
   14004a599:	mov    QWORD PTR [rbx],rax
   14004a59c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a5a0:	jne    0x14005b3df
   14004a5a6:	lea    rdx,[rbp+0x28]
   14004a5aa:	lea    rcx,[rsi+0x30]
   14004a5ae:	mov    DWORD PTR [rbp+0x28],0x54
   14004a5b5:	call   0x14002ffd0
   14004a5ba:	lea    rcx,[rip+0x2673f]        # 0x140070d00
   14004a5c1:	lea    rdx,[rbp+0x28]
   14004a5c5:	mov    DWORD PTR [rax],0x14
   14004a5cb:	mov    DWORD PTR [rax+0x4],0x54
   14004a5d2:	mov    QWORD PTR [rax+0x8],rcx
   14004a5d6:	lea    rcx,[rsi+0x10]
   14004a5da:	mov    DWORD PTR [rbp+0x30],0x54
   14004a5e1:	mov    DWORD PTR [rbp+0x28],0x14
   14004a5e8:	call   0x14002ff30
   14004a5ed:	lea    rdx,[rbp+0x30]
   14004a5f1:	lea    rcx,[rsi+0x30]
   14004a5f5:	mov    rbx,rax
   14004a5f8:	call   0x14002ffd0
   14004a5fd:	mov    QWORD PTR [rbx],rax
   14004a600:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a604:	jne    0x14005b3df
   14004a60a:	lea    rdx,[rbp+0x28]
   14004a60e:	lea    rcx,[rsi+0x30]
   14004a612:	mov    DWORD PTR [rbp+0x28],0x50
   14004a619:	call   0x14002ffd0
   14004a61e:	lea    rcx,[rip+0x266f3]        # 0x140070d18
   14004a625:	lea    rdx,[rbp+0x28]
   14004a629:	mov    DWORD PTR [rax],0x15
   14004a62f:	mov    DWORD PTR [rax+0x4],0x50
   14004a636:	mov    QWORD PTR [rax+0x8],rcx
   14004a63a:	lea    rcx,[rsi+0x10]
   14004a63e:	mov    DWORD PTR [rbp+0x30],0x50
   14004a645:	mov    DWORD PTR [rbp+0x28],0x15
   14004a64c:	call   0x14002ff30
   14004a651:	lea    rdx,[rbp+0x30]
   14004a655:	lea    rcx,[rsi+0x30]
   14004a659:	mov    rbx,rax
   14004a65c:	call   0x14002ffd0
   14004a661:	mov    QWORD PTR [rbx],rax
   14004a664:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a668:	jne    0x14005b3df
   14004a66e:	lea    rdx,[rbp+0x28]
   14004a672:	lea    rcx,[rsi+0x30]
   14004a676:	mov    DWORD PTR [rbp+0x28],0x52
   14004a67d:	call   0x14002ffd0
   14004a682:	lea    rcx,[rip+0x2669f]        # 0x140070d28
   14004a689:	lea    rdx,[rbp+0x28]
   14004a68d:	mov    DWORD PTR [rax],0x16
   14004a693:	mov    DWORD PTR [rax+0x4],0x52
   14004a69a:	mov    QWORD PTR [rax+0x8],rcx
   14004a69e:	lea    rcx,[rsi+0x10]
   14004a6a2:	mov    DWORD PTR [rbp+0x30],0x52
   14004a6a9:	mov    DWORD PTR [rbp+0x28],0x16
   14004a6b0:	call   0x14002ff30
   14004a6b5:	lea    rdx,[rbp+0x30]
   14004a6b9:	lea    rcx,[rsi+0x30]
   14004a6bd:	mov    rbx,rax
   14004a6c0:	call   0x14002ffd0
   14004a6c5:	mov    QWORD PTR [rbx],rax
   14004a6c8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a6cc:	jne    0x14005b3df
   14004a6d2:	lea    rdx,[rbp+0x28]
   14004a6d6:	lea    rcx,[rsi+0x30]
   14004a6da:	mov    DWORD PTR [rbp+0x28],0x51
   14004a6e1:	call   0x14002ffd0
   14004a6e6:	lea    rcx,[rip+0x2664b]        # 0x140070d38
   14004a6ed:	lea    rdx,[rbp+0x28]
   14004a6f1:	mov    DWORD PTR [rax],0x17
   14004a6f7:	mov    DWORD PTR [rax+0x4],0x51
   14004a6fe:	mov    QWORD PTR [rax+0x8],rcx
   14004a702:	lea    rcx,[rsi+0x10]
   14004a706:	mov    DWORD PTR [rbp+0x30],0x51
   14004a70d:	mov    DWORD PTR [rbp+0x28],0x17
   14004a714:	call   0x14002ff30
   14004a719:	lea    rdx,[rbp+0x30]
   14004a71d:	lea    rcx,[rsi+0x30]
   14004a721:	mov    rbx,rax
   14004a724:	call   0x14002ffd0
   14004a729:	mov    QWORD PTR [rbx],rax
   14004a72c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a730:	jne    0x14005b3df
   14004a736:	lea    rdx,[rbp+0x28]
   14004a73a:	lea    rcx,[rsi+0x30]
   14004a73e:	mov    DWORD PTR [rbp+0x28],0x53
   14004a745:	call   0x14002ffd0
   14004a74a:	lea    rcx,[rip+0x265f7]        # 0x140070d48
   14004a751:	lea    rdx,[rbp+0x28]
   14004a755:	mov    DWORD PTR [rax],0x18
   14004a75b:	mov    DWORD PTR [rax+0x4],0x53
   14004a762:	mov    QWORD PTR [rax+0x8],rcx
   14004a766:	lea    rcx,[rsi+0x10]
   14004a76a:	mov    DWORD PTR [rbp+0x30],0x53
   14004a771:	mov    DWORD PTR [rbp+0x28],0x18
   14004a778:	call   0x14002ff30
   14004a77d:	lea    rdx,[rbp+0x30]
   14004a781:	lea    rcx,[rsi+0x30]
   14004a785:	mov    rbx,rax
   14004a788:	call   0x14002ffd0
   14004a78d:	mov    QWORD PTR [rbx],rax
   14004a790:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a794:	jne    0x14005b3df
   14004a79a:	lea    rdx,[rbp+0x28]
   14004a79e:	lea    rcx,[rsi+0x30]
   14004a7a2:	mov    DWORD PTR [rbp+0x28],0x5e
   14004a7a9:	call   0x14002ffd0
   14004a7ae:	lea    rcx,[rip+0x265a3]        # 0x140070d58
   14004a7b5:	lea    rdx,[rbp+0x28]
   14004a7b9:	mov    DWORD PTR [rax],0x79
   14004a7bf:	mov    DWORD PTR [rax+0x4],0x5e
   14004a7c6:	mov    QWORD PTR [rax+0x8],rcx
   14004a7ca:	lea    rcx,[rsi+0x10]
   14004a7ce:	mov    DWORD PTR [rbp+0x30],0x5e
   14004a7d5:	mov    DWORD PTR [rbp+0x28],0x79
   14004a7dc:	call   0x14002ff30
   14004a7e1:	lea    rdx,[rbp+0x30]
   14004a7e5:	lea    rcx,[rsi+0x30]
   14004a7e9:	mov    rbx,rax
   14004a7ec:	call   0x14002ffd0
   14004a7f1:	mov    QWORD PTR [rbx],rax
   14004a7f4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a7f8:	jne    0x14005b3df
   14004a7fe:	lea    rdx,[rbp+0x28]
   14004a802:	lea    rcx,[rsi+0x30]
   14004a806:	mov    DWORD PTR [rbp+0x28],0x5a
   14004a80d:	call   0x14002ffd0
   14004a812:	lea    rcx,[rip+0x26557]        # 0x140070d70
   14004a819:	lea    rdx,[rbp+0x28]
   14004a81d:	mov    DWORD PTR [rax],0x7a
   14004a823:	mov    DWORD PTR [rax+0x4],0x5a
   14004a82a:	mov    QWORD PTR [rax+0x8],rcx
   14004a82e:	lea    rcx,[rsi+0x10]
   14004a832:	mov    DWORD PTR [rbp+0x30],0x5a
   14004a839:	mov    DWORD PTR [rbp+0x28],0x7a
   14004a840:	call   0x14002ff30
   14004a845:	lea    rdx,[rbp+0x30]
   14004a849:	lea    rcx,[rsi+0x30]
   14004a84d:	mov    rbx,rax
   14004a850:	call   0x14002ffd0
   14004a855:	mov    QWORD PTR [rbx],rax
   14004a858:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a85c:	jne    0x14005b3df
   14004a862:	lea    rdx,[rbp+0x28]
   14004a866:	lea    rcx,[rsi+0x30]
   14004a86a:	mov    DWORD PTR [rbp+0x28],0x5c
   14004a871:	call   0x14002ffd0
   14004a876:	lea    rcx,[rip+0x26503]        # 0x140070d80
   14004a87d:	lea    rdx,[rbp+0x28]
   14004a881:	mov    DWORD PTR [rax],0x7b
   14004a887:	mov    DWORD PTR [rax+0x4],0x5c
   14004a88e:	mov    QWORD PTR [rax+0x8],rcx
   14004a892:	lea    rcx,[rsi+0x10]
   14004a896:	mov    DWORD PTR [rbp+0x30],0x5c
   14004a89d:	mov    DWORD PTR [rbp+0x28],0x7b
   14004a8a4:	call   0x14002ff30
   14004a8a9:	lea    rdx,[rbp+0x30]
   14004a8ad:	lea    rcx,[rsi+0x30]
   14004a8b1:	mov    rbx,rax
   14004a8b4:	call   0x14002ffd0
   14004a8b9:	mov    QWORD PTR [rbx],rax
   14004a8bc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a8c0:	jne    0x14005b3df
   14004a8c6:	lea    rdx,[rbp+0x28]
   14004a8ca:	lea    rcx,[rsi+0x30]
   14004a8ce:	mov    DWORD PTR [rbp+0x28],0x5b
   14004a8d5:	call   0x14002ffd0
   14004a8da:	lea    rcx,[rip+0x264af]        # 0x140070d90
   14004a8e1:	lea    rdx,[rbp+0x28]
   14004a8e5:	mov    DWORD PTR [rax],0x7c
   14004a8eb:	mov    DWORD PTR [rax+0x4],0x5b
   14004a8f2:	mov    QWORD PTR [rax+0x8],rcx
   14004a8f6:	lea    rcx,[rsi+0x10]
   14004a8fa:	mov    DWORD PTR [rbp+0x30],0x5b
   14004a901:	mov    DWORD PTR [rbp+0x28],0x7c
   14004a908:	call   0x14002ff30
   14004a90d:	lea    rdx,[rbp+0x30]
   14004a911:	lea    rcx,[rsi+0x30]
   14004a915:	mov    rbx,rax
   14004a918:	call   0x14002ffd0
   14004a91d:	mov    QWORD PTR [rbx],rax
   14004a920:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a924:	jne    0x14005b3df
   14004a92a:	lea    rdx,[rbp+0x28]
   14004a92e:	lea    rcx,[rsi+0x30]
   14004a932:	mov    DWORD PTR [rbp+0x28],0x5d
   14004a939:	call   0x14002ffd0
   14004a93e:	lea    rcx,[rip+0x2645b]        # 0x140070da0
   14004a945:	lea    rdx,[rbp+0x28]
   14004a949:	mov    DWORD PTR [rax],0x7d
   14004a94f:	mov    DWORD PTR [rax+0x4],0x5d
   14004a956:	mov    QWORD PTR [rax+0x8],rcx
   14004a95a:	lea    rcx,[rsi+0x10]
   14004a95e:	mov    DWORD PTR [rbp+0x30],0x5d
   14004a965:	mov    DWORD PTR [rbp+0x28],0x7d
   14004a96c:	call   0x14002ff30
   14004a971:	lea    rdx,[rbp+0x30]
   14004a975:	lea    rcx,[rsi+0x30]
   14004a979:	mov    rbx,rax
   14004a97c:	call   0x14002ffd0
   14004a981:	mov    QWORD PTR [rbx],rax
   14004a984:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a988:	jne    0x14005b3df
   14004a98e:	lea    rdx,[rbp+0x28]
   14004a992:	lea    rcx,[rsi+0x30]
   14004a996:	mov    DWORD PTR [rbp+0x28],0x68
   14004a99d:	call   0x14002ffd0
   14004a9a2:	lea    rcx,[rip+0x26407]        # 0x140070db0
   14004a9a9:	lea    rdx,[rbp+0x28]
   14004a9ad:	mov    DWORD PTR [rax],0x7e
   14004a9b3:	mov    DWORD PTR [rax+0x4],0x68
   14004a9ba:	mov    QWORD PTR [rax+0x8],rcx
   14004a9be:	lea    rcx,[rsi+0x10]
   14004a9c2:	mov    DWORD PTR [rbp+0x30],0x68
   14004a9c9:	mov    DWORD PTR [rbp+0x28],0x7e
   14004a9d0:	call   0x14002ff30
   14004a9d5:	lea    rdx,[rbp+0x30]
   14004a9d9:	lea    rcx,[rsi+0x30]
   14004a9dd:	mov    rbx,rax
   14004a9e0:	call   0x14002ffd0
   14004a9e5:	mov    QWORD PTR [rbx],rax
   14004a9e8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004a9ec:	jne    0x14005b3df
   14004a9f2:	lea    rdx,[rbp+0x28]
   14004a9f6:	lea    rcx,[rsi+0x30]
   14004a9fa:	mov    DWORD PTR [rbp+0x28],0x64
   14004aa01:	call   0x14002ffd0
   14004aa06:	lea    rcx,[rip+0x263bb]        # 0x140070dc8
   14004aa0d:	lea    rdx,[rbp+0x28]
   14004aa11:	mov    DWORD PTR [rax],0x7f
   14004aa17:	mov    DWORD PTR [rax+0x4],0x64
   14004aa1e:	mov    QWORD PTR [rax+0x8],rcx
   14004aa22:	lea    rcx,[rsi+0x10]
   14004aa26:	mov    DWORD PTR [rbp+0x30],0x64
   14004aa2d:	mov    DWORD PTR [rbp+0x28],0x7f
   14004aa34:	call   0x14002ff30
   14004aa39:	lea    rdx,[rbp+0x30]
   14004aa3d:	lea    rcx,[rsi+0x30]
   14004aa41:	mov    rbx,rax
   14004aa44:	call   0x14002ffd0
   14004aa49:	mov    QWORD PTR [rbx],rax
   14004aa4c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004aa50:	jne    0x14005b3df
   14004aa56:	lea    rdx,[rbp+0x28]
   14004aa5a:	lea    rcx,[rsi+0x30]
   14004aa5e:	mov    DWORD PTR [rbp+0x28],0x66
   14004aa65:	call   0x14002ffd0
   14004aa6a:	lea    rcx,[rip+0x26367]        # 0x140070dd8
   14004aa71:	lea    rdx,[rbp+0x28]
   14004aa75:	mov    DWORD PTR [rax],0x80
   14004aa7b:	mov    DWORD PTR [rax+0x4],0x66
   14004aa82:	mov    QWORD PTR [rax+0x8],rcx
   14004aa86:	lea    rcx,[rsi+0x10]
   14004aa8a:	mov    DWORD PTR [rbp+0x30],0x66
   14004aa91:	mov    DWORD PTR [rbp+0x28],0x80
   14004aa98:	call   0x14002ff30
   14004aa9d:	lea    rdx,[rbp+0x30]
   14004aaa1:	lea    rcx,[rsi+0x30]
   14004aaa5:	mov    rbx,rax
   14004aaa8:	call   0x14002ffd0
   14004aaad:	mov    QWORD PTR [rbx],rax
   14004aab0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004aab4:	jne    0x14005b3df
   14004aaba:	lea    rdx,[rbp+0x28]
   14004aabe:	lea    rcx,[rsi+0x30]
   14004aac2:	mov    DWORD PTR [rbp+0x28],0x65
   14004aac9:	call   0x14002ffd0
   14004aace:	lea    rcx,[rip+0x26313]        # 0x140070de8
   14004aad5:	lea    rdx,[rbp+0x28]
   14004aad9:	mov    DWORD PTR [rax],0x81
   14004aadf:	mov    DWORD PTR [rax+0x4],0x65
   14004aae6:	mov    QWORD PTR [rax+0x8],rcx
   14004aaea:	lea    rcx,[rsi+0x10]
   14004aaee:	mov    DWORD PTR [rbp+0x30],0x65
   14004aaf5:	mov    DWORD PTR [rbp+0x28],0x81
   14004aafc:	call   0x14002ff30
   14004ab01:	lea    rdx,[rbp+0x30]
   14004ab05:	lea    rcx,[rsi+0x30]
   14004ab09:	mov    rbx,rax
   14004ab0c:	call   0x14002ffd0
   14004ab11:	mov    QWORD PTR [rbx],rax
   14004ab14:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ab18:	jne    0x14005b3df
   14004ab1e:	lea    rdx,[rbp+0x28]
   14004ab22:	lea    rcx,[rsi+0x30]
   14004ab26:	mov    DWORD PTR [rbp+0x28],0x67
   14004ab2d:	call   0x14002ffd0
   14004ab32:	lea    rcx,[rip+0x262bf]        # 0x140070df8
   14004ab39:	lea    rdx,[rbp+0x28]
   14004ab3d:	mov    DWORD PTR [rax],0x82
   14004ab43:	mov    DWORD PTR [rax+0x4],0x67
   14004ab4a:	mov    QWORD PTR [rax+0x8],rcx
   14004ab4e:	lea    rcx,[rsi+0x10]
   14004ab52:	mov    DWORD PTR [rbp+0x30],0x67
   14004ab59:	mov    DWORD PTR [rbp+0x28],0x82
   14004ab60:	call   0x14002ff30
   14004ab65:	lea    rdx,[rbp+0x30]
   14004ab69:	lea    rcx,[rsi+0x30]
   14004ab6d:	mov    rbx,rax
   14004ab70:	call   0x14002ffd0
   14004ab75:	mov    QWORD PTR [rbx],rax
   14004ab78:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ab7c:	jne    0x14005b3df
   14004ab82:	lea    rdx,[rbp+0x28]
   14004ab86:	lea    rcx,[rsi+0x30]
   14004ab8a:	mov    DWORD PTR [rbp+0x28],0x72
   14004ab91:	call   0x14002ffd0
   14004ab96:	lea    rcx,[rip+0x2626b]        # 0x140070e08
   14004ab9d:	lea    rdx,[rbp+0x28]
   14004aba1:	mov    DWORD PTR [rax],0x83
   14004aba7:	mov    DWORD PTR [rax+0x4],0x72
   14004abae:	mov    QWORD PTR [rax+0x8],rcx
   14004abb2:	lea    rcx,[rsi+0x10]
   14004abb6:	mov    DWORD PTR [rbp+0x30],0x72
   14004abbd:	mov    DWORD PTR [rbp+0x28],0x83
   14004abc4:	call   0x14002ff30
   14004abc9:	lea    rdx,[rbp+0x30]
   14004abcd:	lea    rcx,[rsi+0x30]
   14004abd1:	mov    rbx,rax
   14004abd4:	call   0x14002ffd0
   14004abd9:	mov    QWORD PTR [rbx],rax
   14004abdc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004abe0:	jne    0x14005b3df
   14004abe6:	lea    rdx,[rbp+0x28]
   14004abea:	lea    rcx,[rsi+0x30]
   14004abee:	mov    DWORD PTR [rbp+0x28],0x6e
   14004abf5:	call   0x14002ffd0
   14004abfa:	lea    rcx,[rip+0x2621f]        # 0x140070e20
   14004ac01:	lea    rdx,[rbp+0x28]
   14004ac05:	mov    DWORD PTR [rax],0x84
   14004ac0b:	mov    DWORD PTR [rax+0x4],0x6e
   14004ac12:	mov    QWORD PTR [rax+0x8],rcx
   14004ac16:	lea    rcx,[rsi+0x10]
   14004ac1a:	mov    DWORD PTR [rbp+0x30],0x6e
   14004ac21:	mov    DWORD PTR [rbp+0x28],0x84
   14004ac28:	call   0x14002ff30
   14004ac2d:	lea    rdx,[rbp+0x30]
   14004ac31:	lea    rcx,[rsi+0x30]
   14004ac35:	mov    rbx,rax
   14004ac38:	call   0x14002ffd0
   14004ac3d:	mov    QWORD PTR [rbx],rax
   14004ac40:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ac44:	jne    0x14005b3df
   14004ac4a:	lea    rdx,[rbp+0x28]
   14004ac4e:	lea    rcx,[rsi+0x30]
   14004ac52:	mov    DWORD PTR [rbp+0x28],0x70
   14004ac59:	call   0x14002ffd0
   14004ac5e:	lea    rcx,[rip+0x261cb]        # 0x140070e30
   14004ac65:	lea    rdx,[rbp+0x28]
   14004ac69:	mov    DWORD PTR [rax],0x85
   14004ac6f:	mov    DWORD PTR [rax+0x4],0x70
   14004ac76:	mov    QWORD PTR [rax+0x8],rcx
   14004ac7a:	lea    rcx,[rsi+0x10]
   14004ac7e:	mov    DWORD PTR [rbp+0x30],0x70
   14004ac85:	mov    DWORD PTR [rbp+0x28],0x85
   14004ac8c:	call   0x14002ff30
   14004ac91:	lea    rdx,[rbp+0x30]
   14004ac95:	lea    rcx,[rsi+0x30]
   14004ac99:	mov    rbx,rax
   14004ac9c:	call   0x14002ffd0
   14004aca1:	mov    QWORD PTR [rbx],rax
   14004aca4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004aca8:	jne    0x14005b3df
   14004acae:	lea    rdx,[rbp+0x28]
   14004acb2:	lea    rcx,[rsi+0x30]
   14004acb6:	mov    DWORD PTR [rbp+0x28],0x6f
   14004acbd:	call   0x14002ffd0
   14004acc2:	lea    rcx,[rip+0x26177]        # 0x140070e40
   14004acc9:	lea    rdx,[rbp+0x28]
   14004accd:	mov    DWORD PTR [rax],0x86
   14004acd3:	mov    DWORD PTR [rax+0x4],0x6f
   14004acda:	mov    QWORD PTR [rax+0x8],rcx
   14004acde:	lea    rcx,[rsi+0x10]
   14004ace2:	mov    DWORD PTR [rbp+0x30],0x6f
   14004ace9:	mov    DWORD PTR [rbp+0x28],0x86
   14004acf0:	call   0x14002ff30
   14004acf5:	lea    rdx,[rbp+0x30]
   14004acf9:	lea    rcx,[rsi+0x30]
   14004acfd:	mov    rbx,rax
   14004ad00:	call   0x14002ffd0
   14004ad05:	mov    QWORD PTR [rbx],rax
   14004ad08:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ad0c:	jne    0x14005b3df
   14004ad12:	lea    rdx,[rbp+0x28]
   14004ad16:	lea    rcx,[rsi+0x30]
   14004ad1a:	mov    DWORD PTR [rbp+0x28],0x71
   14004ad21:	call   0x14002ffd0
   14004ad26:	lea    rcx,[rip+0x26123]        # 0x140070e50
   14004ad2d:	lea    rdx,[rbp+0x28]
   14004ad31:	mov    DWORD PTR [rax],0x87
   14004ad37:	mov    DWORD PTR [rax+0x4],0x71
   14004ad3e:	mov    QWORD PTR [rax+0x8],rcx
   14004ad42:	lea    rcx,[rsi+0x10]
   14004ad46:	mov    DWORD PTR [rbp+0x30],0x71
   14004ad4d:	mov    DWORD PTR [rbp+0x28],0x87
   14004ad54:	call   0x14002ff30
   14004ad59:	lea    rdx,[rbp+0x30]
   14004ad5d:	lea    rcx,[rsi+0x30]
   14004ad61:	mov    rbx,rax
   14004ad64:	call   0x14002ffd0
   14004ad69:	mov    QWORD PTR [rbx],rax
   14004ad6c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ad70:	jne    0x14005b3df
   14004ad76:	lea    rdx,[rbp+0x28]
   14004ad7a:	lea    rcx,[rsi+0x30]
   14004ad7e:	mov    DWORD PTR [rbp+0x28],0x7c
   14004ad85:	call   0x14002ffd0
   14004ad8a:	lea    rcx,[rip+0x260cf]        # 0x140070e60
   14004ad91:	lea    rdx,[rbp+0x28]
   14004ad95:	mov    DWORD PTR [rax],0x88
   14004ad9b:	mov    DWORD PTR [rax+0x4],0x7c
   14004ada2:	mov    QWORD PTR [rax+0x8],rcx
   14004ada6:	lea    rcx,[rsi+0x10]
   14004adaa:	mov    DWORD PTR [rbp+0x30],0x7c
   14004adb1:	mov    DWORD PTR [rbp+0x28],0x88
   14004adb8:	call   0x14002ff30
   14004adbd:	lea    rdx,[rbp+0x30]
   14004adc1:	lea    rcx,[rsi+0x30]
   14004adc5:	mov    rbx,rax
   14004adc8:	call   0x14002ffd0
   14004adcd:	mov    QWORD PTR [rbx],rax
   14004add0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004add4:	jne    0x14005b3df
   14004adda:	lea    rdx,[rbp+0x28]
   14004adde:	lea    rcx,[rsi+0x30]
   14004ade2:	mov    DWORD PTR [rbp+0x28],0x78
   14004ade9:	call   0x14002ffd0
   14004adee:	lea    rcx,[rip+0x26083]        # 0x140070e78
   14004adf5:	lea    rdx,[rbp+0x28]
   14004adf9:	mov    DWORD PTR [rax],0x89
   14004adff:	mov    DWORD PTR [rax+0x4],0x78
   14004ae06:	mov    QWORD PTR [rax+0x8],rcx
   14004ae0a:	lea    rcx,[rsi+0x10]
   14004ae0e:	mov    DWORD PTR [rbp+0x30],0x78
   14004ae15:	mov    DWORD PTR [rbp+0x28],0x89
   14004ae1c:	call   0x14002ff30
   14004ae21:	lea    rdx,[rbp+0x30]
   14004ae25:	lea    rcx,[rsi+0x30]
   14004ae29:	mov    rbx,rax
   14004ae2c:	call   0x14002ffd0
   14004ae31:	mov    QWORD PTR [rbx],rax
   14004ae34:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ae38:	jne    0x14005b3df
   14004ae3e:	lea    rdx,[rbp+0x28]
   14004ae42:	lea    rcx,[rsi+0x30]
   14004ae46:	mov    DWORD PTR [rbp+0x28],0x7a
   14004ae4d:	call   0x14002ffd0
   14004ae52:	lea    rcx,[rip+0x2602f]        # 0x140070e88
   14004ae59:	lea    rdx,[rbp+0x28]
   14004ae5d:	mov    DWORD PTR [rax],0x8a
   14004ae63:	mov    DWORD PTR [rax+0x4],0x7a
   14004ae6a:	mov    QWORD PTR [rax+0x8],rcx
   14004ae6e:	lea    rcx,[rsi+0x10]
   14004ae72:	mov    DWORD PTR [rbp+0x30],0x7a
   14004ae79:	mov    DWORD PTR [rbp+0x28],0x8a
   14004ae80:	call   0x14002ff30
   14004ae85:	lea    rdx,[rbp+0x30]
   14004ae89:	lea    rcx,[rsi+0x30]
   14004ae8d:	mov    rbx,rax
   14004ae90:	call   0x14002ffd0
   14004ae95:	mov    QWORD PTR [rbx],rax
   14004ae98:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ae9c:	jne    0x14005b3df
   14004aea2:	lea    rdx,[rbp+0x28]
   14004aea6:	lea    rcx,[rsi+0x30]
   14004aeaa:	mov    DWORD PTR [rbp+0x28],0x79
   14004aeb1:	call   0x14002ffd0
   14004aeb6:	lea    rcx,[rip+0x25fdb]        # 0x140070e98
   14004aebd:	lea    rdx,[rbp+0x28]
   14004aec1:	mov    DWORD PTR [rax],0x8b
   14004aec7:	mov    DWORD PTR [rax+0x4],0x79
   14004aece:	mov    QWORD PTR [rax+0x8],rcx
   14004aed2:	lea    rcx,[rsi+0x10]
   14004aed6:	mov    DWORD PTR [rbp+0x30],0x79
   14004aedd:	mov    DWORD PTR [rbp+0x28],0x8b
   14004aee4:	call   0x14002ff30
   14004aee9:	lea    rdx,[rbp+0x30]
   14004aeed:	lea    rcx,[rsi+0x30]
   14004aef1:	mov    rbx,rax
   14004aef4:	call   0x14002ffd0
   14004aef9:	mov    QWORD PTR [rbx],rax
   14004aefc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004af00:	jne    0x14005b3df
   14004af06:	lea    rdx,[rbp+0x28]
   14004af0a:	lea    rcx,[rsi+0x30]
   14004af0e:	mov    DWORD PTR [rbp+0x28],0x7b
   14004af15:	call   0x14002ffd0
   14004af1a:	lea    rcx,[rip+0x25f87]        # 0x140070ea8
   14004af21:	lea    rdx,[rbp+0x28]
   14004af25:	mov    DWORD PTR [rax],0x8c
   14004af2b:	mov    DWORD PTR [rax+0x4],0x7b
   14004af32:	mov    QWORD PTR [rax+0x8],rcx
   14004af36:	lea    rcx,[rsi+0x10]
   14004af3a:	mov    DWORD PTR [rbp+0x30],0x7b
   14004af41:	mov    DWORD PTR [rbp+0x28],0x8c
   14004af48:	call   0x14002ff30
   14004af4d:	lea    rdx,[rbp+0x30]
   14004af51:	lea    rcx,[rsi+0x30]
   14004af55:	mov    rbx,rax
   14004af58:	call   0x14002ffd0
   14004af5d:	mov    QWORD PTR [rbx],rax
   14004af60:	cmp    DWORD PTR [rsi+0x8],r12d
   14004af64:	jne    0x14005b3df
   14004af6a:	lea    rdx,[rbp+0x28]
   14004af6e:	lea    rcx,[rsi+0x30]
   14004af72:	mov    DWORD PTR [rbp+0x28],0x86
   14004af79:	call   0x14002ffd0
   14004af7e:	lea    rcx,[rip+0x25f33]        # 0x140070eb8
   14004af85:	lea    rdx,[rbp+0x28]
   14004af89:	mov    DWORD PTR [rax],0x8d
   14004af8f:	mov    DWORD PTR [rax+0x4],0x86
   14004af96:	mov    QWORD PTR [rax+0x8],rcx
   14004af9a:	lea    rcx,[rsi+0x10]
   14004af9e:	mov    DWORD PTR [rbp+0x30],0x86
   14004afa5:	mov    DWORD PTR [rbp+0x28],0x8d
   14004afac:	call   0x14002ff30
   14004afb1:	lea    rdx,[rbp+0x30]
   14004afb5:	lea    rcx,[rsi+0x30]
   14004afb9:	mov    rbx,rax
   14004afbc:	call   0x14002ffd0
   14004afc1:	mov    QWORD PTR [rbx],rax
   14004afc4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004afc8:	jne    0x14005b3df
   14004afce:	lea    rdx,[rbp+0x28]
   14004afd2:	lea    rcx,[rsi+0x30]
   14004afd6:	mov    DWORD PTR [rbp+0x28],0x82
   14004afdd:	call   0x14002ffd0
   14004afe2:	lea    rcx,[rip+0x25ee7]        # 0x140070ed0
   14004afe9:	lea    rdx,[rbp+0x28]
   14004afed:	mov    DWORD PTR [rax],0x8e
   14004aff3:	mov    DWORD PTR [rax+0x4],0x82
   14004affa:	mov    QWORD PTR [rax+0x8],rcx
   14004affe:	lea    rcx,[rsi+0x10]
   14004b002:	mov    DWORD PTR [rbp+0x30],0x82
   14004b009:	mov    DWORD PTR [rbp+0x28],0x8e
   14004b010:	call   0x14002ff30
   14004b015:	lea    rdx,[rbp+0x30]
   14004b019:	lea    rcx,[rsi+0x30]
   14004b01d:	mov    rbx,rax
   14004b020:	call   0x14002ffd0
   14004b025:	mov    QWORD PTR [rbx],rax
   14004b028:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b02c:	jne    0x14005b3df
   14004b032:	lea    rdx,[rbp+0x28]
   14004b036:	lea    rcx,[rsi+0x30]
   14004b03a:	mov    DWORD PTR [rbp+0x28],0x84
   14004b041:	call   0x14002ffd0
   14004b046:	lea    rcx,[rip+0x25e9b]        # 0x140070ee8
   14004b04d:	lea    rdx,[rbp+0x28]
   14004b051:	mov    DWORD PTR [rax],0x8f
   14004b057:	mov    DWORD PTR [rax+0x4],0x84
   14004b05e:	mov    QWORD PTR [rax+0x8],rcx
   14004b062:	lea    rcx,[rsi+0x10]
   14004b066:	mov    DWORD PTR [rbp+0x30],0x84
   14004b06d:	mov    DWORD PTR [rbp+0x28],0x8f
   14004b074:	call   0x14002ff30
   14004b079:	lea    rdx,[rbp+0x30]
   14004b07d:	lea    rcx,[rsi+0x30]
   14004b081:	mov    rbx,rax
   14004b084:	call   0x14002ffd0
   14004b089:	mov    QWORD PTR [rbx],rax
   14004b08c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b090:	jne    0x14005b3df
   14004b096:	lea    rdx,[rbp+0x28]
   14004b09a:	lea    rcx,[rsi+0x30]
   14004b09e:	mov    DWORD PTR [rbp+0x28],0x83
   14004b0a5:	call   0x14002ffd0
   14004b0aa:	lea    rcx,[rip+0x25e4f]        # 0x140070f00
   14004b0b1:	lea    rdx,[rbp+0x28]
   14004b0b5:	mov    DWORD PTR [rax],0x90
   14004b0bb:	mov    DWORD PTR [rax+0x4],0x83
   14004b0c2:	mov    QWORD PTR [rax+0x8],rcx
   14004b0c6:	lea    rcx,[rsi+0x10]
   14004b0ca:	mov    DWORD PTR [rbp+0x30],0x83
   14004b0d1:	mov    DWORD PTR [rbp+0x28],0x90
   14004b0d8:	call   0x14002ff30
   14004b0dd:	lea    rdx,[rbp+0x30]
   14004b0e1:	lea    rcx,[rsi+0x30]
   14004b0e5:	mov    rbx,rax
   14004b0e8:	call   0x14002ffd0
   14004b0ed:	mov    QWORD PTR [rbx],rax
   14004b0f0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b0f4:	jne    0x14005b3df
   14004b0fa:	lea    rdx,[rbp+0x28]
   14004b0fe:	lea    rcx,[rsi+0x30]
   14004b102:	mov    DWORD PTR [rbp+0x28],0x85
   14004b109:	call   0x14002ffd0
   14004b10e:	lea    rcx,[rip+0x25e03]        # 0x140070f18
   14004b115:	lea    rdx,[rbp+0x28]
   14004b119:	mov    DWORD PTR [rax],0x91
   14004b11f:	mov    DWORD PTR [rax+0x4],0x85
   14004b126:	mov    QWORD PTR [rax+0x8],rcx
   14004b12a:	lea    rcx,[rsi+0x10]
   14004b12e:	mov    DWORD PTR [rbp+0x30],0x85
   14004b135:	mov    DWORD PTR [rbp+0x28],0x91
   14004b13c:	call   0x14002ff30
   14004b141:	lea    rdx,[rbp+0x30]
   14004b145:	lea    rcx,[rsi+0x30]
   14004b149:	mov    rbx,rax
   14004b14c:	call   0x14002ffd0
   14004b151:	mov    QWORD PTR [rbx],rax
   14004b154:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b158:	jne    0x14005b3df
   14004b15e:	lea    rdx,[rbp+0x28]
   14004b162:	lea    rcx,[rsi+0x30]
   14004b166:	mov    DWORD PTR [rbp+0x28],0x31
   14004b16d:	call   0x14002ffd0
   14004b172:	lea    rcx,[rip+0x25daf]        # 0x140070f28
   14004b179:	lea    rdx,[rbp+0x28]
   14004b17d:	mov    DWORD PTR [rax],0xaf
   14004b183:	mov    DWORD PTR [rax+0x4],0x31
   14004b18a:	mov    QWORD PTR [rax+0x8],rcx
   14004b18e:	lea    rcx,[rsi+0x10]
   14004b192:	mov    DWORD PTR [rbp+0x30],0x31
   14004b199:	mov    DWORD PTR [rbp+0x28],0xaf
   14004b1a0:	call   0x14002ff30
   14004b1a5:	lea    rdx,[rbp+0x30]
   14004b1a9:	lea    rcx,[rsi+0x30]
   14004b1ad:	mov    rbx,rax
   14004b1b0:	call   0x14002ffd0
   14004b1b5:	mov    QWORD PTR [rbx],rax
   14004b1b8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b1bc:	jne    0x14005b3df
   14004b1c2:	lea    rdx,[rbp+0x28]
   14004b1c6:	lea    rcx,[rsi+0x30]
   14004b1ca:	mov    DWORD PTR [rbp+0x28],0x2d
   14004b1d1:	call   0x14002ffd0
   14004b1d6:	lea    rcx,[rip+0x25d63]        # 0x140070f40
   14004b1dd:	lea    rdx,[rbp+0x28]
   14004b1e1:	mov    DWORD PTR [rax],0xb0
   14004b1e7:	mov    DWORD PTR [rax+0x4],0x2d
   14004b1ee:	mov    QWORD PTR [rax+0x8],rcx
   14004b1f2:	lea    rcx,[rsi+0x10]
   14004b1f6:	mov    DWORD PTR [rbp+0x30],0x2d
   14004b1fd:	mov    DWORD PTR [rbp+0x28],0xb0
   14004b204:	call   0x14002ff30
   14004b209:	lea    rdx,[rbp+0x30]
   14004b20d:	lea    rcx,[rsi+0x30]
   14004b211:	mov    rbx,rax
   14004b214:	call   0x14002ffd0
   14004b219:	mov    QWORD PTR [rbx],rax
   14004b21c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b220:	jne    0x14005b3df
   14004b226:	lea    rdx,[rbp+0x28]
   14004b22a:	lea    rcx,[rsi+0x30]
   14004b22e:	mov    DWORD PTR [rbp+0x28],0x2f
   14004b235:	call   0x14002ffd0
   14004b23a:	lea    rcx,[rip+0x25d17]        # 0x140070f58
   14004b241:	lea    rdx,[rbp+0x28]
   14004b245:	mov    DWORD PTR [rax],0xb1
   14004b24b:	mov    DWORD PTR [rax+0x4],0x2f
   14004b252:	mov    QWORD PTR [rax+0x8],rcx
   14004b256:	lea    rcx,[rsi+0x10]
   14004b25a:	mov    DWORD PTR [rbp+0x30],0x2f
   14004b261:	mov    DWORD PTR [rbp+0x28],0xb1
   14004b268:	call   0x14002ff30
   14004b26d:	lea    rdx,[rbp+0x30]
   14004b271:	lea    rcx,[rsi+0x30]
   14004b275:	mov    rbx,rax
   14004b278:	call   0x14002ffd0
   14004b27d:	mov    QWORD PTR [rbx],rax
   14004b280:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b284:	jne    0x14005b3df
   14004b28a:	lea    rdx,[rbp+0x28]
   14004b28e:	lea    rcx,[rsi+0x30]
   14004b292:	mov    DWORD PTR [rbp+0x28],0x2e
   14004b299:	call   0x14002ffd0
   14004b29e:	lea    rcx,[rip+0x25ccb]        # 0x140070f70
   14004b2a5:	lea    rdx,[rbp+0x28]
   14004b2a9:	mov    DWORD PTR [rax],0xb2
   14004b2af:	mov    DWORD PTR [rax+0x4],0x2e
   14004b2b6:	mov    QWORD PTR [rax+0x8],rcx
   14004b2ba:	lea    rcx,[rsi+0x10]
   14004b2be:	mov    DWORD PTR [rbp+0x30],0x2e
   14004b2c5:	mov    DWORD PTR [rbp+0x28],0xb2
   14004b2cc:	call   0x14002ff30
   14004b2d1:	lea    rdx,[rbp+0x30]
   14004b2d5:	lea    rcx,[rsi+0x30]
   14004b2d9:	mov    rbx,rax
   14004b2dc:	call   0x14002ffd0
   14004b2e1:	mov    QWORD PTR [rbx],rax
   14004b2e4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b2e8:	jne    0x14005b3df
   14004b2ee:	lea    rdx,[rbp+0x28]
   14004b2f2:	lea    rcx,[rsi+0x30]
   14004b2f6:	mov    DWORD PTR [rbp+0x28],0x30
   14004b2fd:	call   0x14002ffd0
   14004b302:	lea    rcx,[rip+0x25c7f]        # 0x140070f88
   14004b309:	lea    rdx,[rbp+0x28]
   14004b30d:	mov    DWORD PTR [rax],0xb3
   14004b313:	mov    DWORD PTR [rax+0x4],0x30
   14004b31a:	mov    QWORD PTR [rax+0x8],rcx
   14004b31e:	lea    rcx,[rsi+0x10]
   14004b322:	mov    DWORD PTR [rbp+0x30],0x30
   14004b329:	mov    DWORD PTR [rbp+0x28],0xb3
   14004b330:	call   0x14002ff30
   14004b335:	lea    rdx,[rbp+0x30]
   14004b339:	lea    rcx,[rsi+0x30]
   14004b33d:	mov    rbx,rax
   14004b340:	call   0x14002ffd0
   14004b345:	mov    QWORD PTR [rbx],rax
   14004b348:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b34c:	jne    0x14005b3df
   14004b352:	lea    rdx,[rbp+0x28]
   14004b356:	lea    rcx,[rsi+0x30]
   14004b35a:	mov    DWORD PTR [rbp+0x28],0x3b
   14004b361:	call   0x14002ffd0
   14004b366:	lea    rcx,[rip+0x25c33]        # 0x140070fa0
   14004b36d:	lea    rdx,[rbp+0x28]
   14004b371:	mov    DWORD PTR [rax],0xb4
   14004b377:	mov    DWORD PTR [rax+0x4],0x3b
   14004b37e:	mov    QWORD PTR [rax+0x8],rcx
   14004b382:	lea    rcx,[rsi+0x10]
   14004b386:	mov    DWORD PTR [rbp+0x30],0x3b
   14004b38d:	mov    DWORD PTR [rbp+0x28],0xb4
   14004b394:	call   0x14002ff30
   14004b399:	lea    rdx,[rbp+0x30]
   14004b39d:	lea    rcx,[rsi+0x30]
   14004b3a1:	mov    rbx,rax
   14004b3a4:	call   0x14002ffd0
   14004b3a9:	mov    QWORD PTR [rbx],rax
   14004b3ac:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b3b0:	jne    0x14005b3df
   14004b3b6:	lea    rdx,[rbp+0x28]
   14004b3ba:	lea    rcx,[rsi+0x30]
   14004b3be:	mov    DWORD PTR [rbp+0x28],0x37
   14004b3c5:	call   0x14002ffd0
   14004b3ca:	lea    rcx,[rip+0x25be7]        # 0x140070fb8
   14004b3d1:	lea    rdx,[rbp+0x28]
   14004b3d5:	mov    DWORD PTR [rax],0xb5
   14004b3db:	mov    DWORD PTR [rax+0x4],0x37
   14004b3e2:	mov    QWORD PTR [rax+0x8],rcx
   14004b3e6:	lea    rcx,[rsi+0x10]
   14004b3ea:	mov    DWORD PTR [rbp+0x30],0x37
   14004b3f1:	mov    DWORD PTR [rbp+0x28],0xb5
   14004b3f8:	call   0x14002ff30
   14004b3fd:	lea    rdx,[rbp+0x30]
   14004b401:	lea    rcx,[rsi+0x30]
   14004b405:	mov    rbx,rax
   14004b408:	call   0x14002ffd0
   14004b40d:	mov    QWORD PTR [rbx],rax
   14004b410:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b414:	jne    0x14005b3df
   14004b41a:	lea    rdx,[rbp+0x28]
   14004b41e:	lea    rcx,[rsi+0x30]
   14004b422:	mov    DWORD PTR [rbp+0x28],0x39
   14004b429:	call   0x14002ffd0
   14004b42e:	lea    rcx,[rip+0x25b9b]        # 0x140070fd0
   14004b435:	lea    rdx,[rbp+0x28]
   14004b439:	mov    DWORD PTR [rax],0xb6
   14004b43f:	mov    DWORD PTR [rax+0x4],0x39
   14004b446:	mov    QWORD PTR [rax+0x8],rcx
   14004b44a:	lea    rcx,[rsi+0x10]
   14004b44e:	mov    DWORD PTR [rbp+0x30],0x39
   14004b455:	mov    DWORD PTR [rbp+0x28],0xb6
   14004b45c:	call   0x14002ff30
   14004b461:	lea    rdx,[rbp+0x30]
   14004b465:	lea    rcx,[rsi+0x30]
   14004b469:	mov    rbx,rax
   14004b46c:	call   0x14002ffd0
   14004b471:	mov    QWORD PTR [rbx],rax
   14004b474:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b478:	jne    0x14005b3df
   14004b47e:	lea    rdx,[rbp+0x28]
   14004b482:	lea    rcx,[rsi+0x30]
   14004b486:	mov    DWORD PTR [rbp+0x28],0x38
   14004b48d:	call   0x14002ffd0
   14004b492:	lea    rcx,[rip+0x25b4f]        # 0x140070fe8
   14004b499:	lea    rdx,[rbp+0x28]
   14004b49d:	mov    DWORD PTR [rax],0xb7
   14004b4a3:	mov    DWORD PTR [rax+0x4],0x38
   14004b4aa:	mov    QWORD PTR [rax+0x8],rcx
   14004b4ae:	lea    rcx,[rsi+0x10]
   14004b4b2:	mov    DWORD PTR [rbp+0x30],0x38
   14004b4b9:	mov    DWORD PTR [rbp+0x28],0xb7
   14004b4c0:	call   0x14002ff30
   14004b4c5:	lea    rdx,[rbp+0x30]
   14004b4c9:	lea    rcx,[rsi+0x30]
   14004b4cd:	mov    rbx,rax
   14004b4d0:	call   0x14002ffd0
   14004b4d5:	mov    QWORD PTR [rbx],rax
   14004b4d8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b4dc:	jne    0x14005b3df
   14004b4e2:	lea    rdx,[rbp+0x28]
   14004b4e6:	lea    rcx,[rsi+0x30]
   14004b4ea:	mov    DWORD PTR [rbp+0x28],0x3a
   14004b4f1:	call   0x14002ffd0
   14004b4f6:	lea    rcx,[rip+0x25b03]        # 0x140071000
   14004b4fd:	lea    rdx,[rbp+0x28]
   14004b501:	mov    DWORD PTR [rax],0xb8
   14004b507:	mov    DWORD PTR [rax+0x4],0x3a
   14004b50e:	mov    QWORD PTR [rax+0x8],rcx
   14004b512:	lea    rcx,[rsi+0x10]
   14004b516:	mov    DWORD PTR [rbp+0x30],0x3a
   14004b51d:	mov    DWORD PTR [rbp+0x28],0xb8
   14004b524:	call   0x14002ff30
   14004b529:	lea    rdx,[rbp+0x30]
   14004b52d:	lea    rcx,[rsi+0x30]
   14004b531:	mov    rbx,rax
   14004b534:	call   0x14002ffd0
   14004b539:	mov    QWORD PTR [rbx],rax
   14004b53c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b540:	jne    0x14005b3df
   14004b546:	lea    rdx,[rbp+0x28]
   14004b54a:	lea    rcx,[rsi+0x30]
   14004b54e:	mov    DWORD PTR [rbp+0x28],0x45
   14004b555:	call   0x14002ffd0
   14004b55a:	lea    rcx,[rip+0x25ab7]        # 0x140071018
   14004b561:	lea    rdx,[rbp+0x28]
   14004b565:	mov    DWORD PTR [rax],0xb9
   14004b56b:	mov    DWORD PTR [rax+0x4],0x45
   14004b572:	mov    QWORD PTR [rax+0x8],rcx
   14004b576:	lea    rcx,[rsi+0x10]
   14004b57a:	mov    DWORD PTR [rbp+0x30],0x45
   14004b581:	mov    DWORD PTR [rbp+0x28],0xb9
   14004b588:	call   0x14002ff30
   14004b58d:	lea    rdx,[rbp+0x30]
   14004b591:	lea    rcx,[rsi+0x30]
   14004b595:	mov    rbx,rax
   14004b598:	call   0x14002ffd0
   14004b59d:	mov    QWORD PTR [rbx],rax
   14004b5a0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b5a4:	jne    0x14005b3df
   14004b5aa:	lea    rdx,[rbp+0x28]
   14004b5ae:	lea    rcx,[rsi+0x30]
   14004b5b2:	mov    DWORD PTR [rbp+0x28],0x41
   14004b5b9:	call   0x14002ffd0
   14004b5be:	lea    rcx,[rip+0x25a6b]        # 0x140071030
   14004b5c5:	lea    rdx,[rbp+0x28]
   14004b5c9:	mov    DWORD PTR [rax],0xba
   14004b5cf:	mov    DWORD PTR [rax+0x4],0x41
   14004b5d6:	mov    QWORD PTR [rax+0x8],rcx
   14004b5da:	lea    rcx,[rsi+0x10]
   14004b5de:	mov    DWORD PTR [rbp+0x30],0x41
   14004b5e5:	mov    DWORD PTR [rbp+0x28],0xba
   14004b5ec:	call   0x14002ff30
   14004b5f1:	lea    rdx,[rbp+0x30]
   14004b5f5:	lea    rcx,[rsi+0x30]
   14004b5f9:	mov    rbx,rax
   14004b5fc:	call   0x14002ffd0
   14004b601:	mov    QWORD PTR [rbx],rax
   14004b604:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b608:	jne    0x14005b3df
   14004b60e:	lea    rdx,[rbp+0x28]
   14004b612:	lea    rcx,[rsi+0x30]
   14004b616:	mov    DWORD PTR [rbp+0x28],0x43
   14004b61d:	call   0x14002ffd0
   14004b622:	lea    rcx,[rip+0x25a1f]        # 0x140071048
   14004b629:	lea    rdx,[rbp+0x28]
   14004b62d:	mov    DWORD PTR [rax],0xbb
   14004b633:	mov    DWORD PTR [rax+0x4],0x43
   14004b63a:	mov    QWORD PTR [rax+0x8],rcx
   14004b63e:	lea    rcx,[rsi+0x10]
   14004b642:	mov    DWORD PTR [rbp+0x30],0x43
   14004b649:	mov    DWORD PTR [rbp+0x28],0xbb
   14004b650:	call   0x14002ff30
   14004b655:	lea    rdx,[rbp+0x30]
   14004b659:	lea    rcx,[rsi+0x30]
   14004b65d:	mov    rbx,rax
   14004b660:	call   0x14002ffd0
   14004b665:	mov    QWORD PTR [rbx],rax
   14004b668:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b66c:	jne    0x14005b3df
   14004b672:	lea    rdx,[rbp+0x28]
   14004b676:	lea    rcx,[rsi+0x30]
   14004b67a:	mov    DWORD PTR [rbp+0x28],0x42
   14004b681:	call   0x14002ffd0
   14004b686:	lea    rcx,[rip+0x259d3]        # 0x140071060
   14004b68d:	lea    rdx,[rbp+0x28]
   14004b691:	mov    DWORD PTR [rax],0xbc
   14004b697:	mov    DWORD PTR [rax+0x4],0x42
   14004b69e:	mov    QWORD PTR [rax+0x8],rcx
   14004b6a2:	lea    rcx,[rsi+0x10]
   14004b6a6:	mov    DWORD PTR [rbp+0x30],0x42
   14004b6ad:	mov    DWORD PTR [rbp+0x28],0xbc
   14004b6b4:	call   0x14002ff30
   14004b6b9:	lea    rdx,[rbp+0x30]
   14004b6bd:	lea    rcx,[rsi+0x30]
   14004b6c1:	mov    rbx,rax
   14004b6c4:	call   0x14002ffd0
   14004b6c9:	mov    QWORD PTR [rbx],rax
   14004b6cc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b6d0:	jne    0x14005b3df
   14004b6d6:	lea    rdx,[rbp+0x28]
   14004b6da:	lea    rcx,[rsi+0x30]
   14004b6de:	mov    DWORD PTR [rbp+0x28],0x44
   14004b6e5:	call   0x14002ffd0
   14004b6ea:	lea    rcx,[rip+0x25987]        # 0x140071078
   14004b6f1:	lea    rdx,[rbp+0x28]
   14004b6f5:	mov    DWORD PTR [rax],0xbd
   14004b6fb:	mov    DWORD PTR [rax+0x4],0x44
   14004b702:	mov    QWORD PTR [rax+0x8],rcx
   14004b706:	lea    rcx,[rsi+0x10]
   14004b70a:	mov    DWORD PTR [rbp+0x30],0x44
   14004b711:	mov    DWORD PTR [rbp+0x28],0xbd
   14004b718:	call   0x14002ff30
   14004b71d:	lea    rdx,[rbp+0x30]
   14004b721:	lea    rcx,[rsi+0x30]
   14004b725:	mov    rbx,rax
   14004b728:	call   0x14002ffd0
   14004b72d:	mov    QWORD PTR [rbx],rax
   14004b730:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b734:	jne    0x14005b3df
   14004b73a:	lea    rdx,[rbp+0x28]
   14004b73e:	lea    rcx,[rsi+0x30]
   14004b742:	mov    DWORD PTR [rbp+0x28],0x4f
   14004b749:	call   0x14002ffd0
   14004b74e:	lea    rcx,[rip+0x2593b]        # 0x140071090
   14004b755:	lea    rdx,[rbp+0x28]
   14004b759:	mov    DWORD PTR [rax],0xbe
   14004b75f:	mov    DWORD PTR [rax+0x4],0x4f
   14004b766:	mov    QWORD PTR [rax+0x8],rcx
   14004b76a:	lea    rcx,[rsi+0x10]
   14004b76e:	mov    DWORD PTR [rbp+0x30],0x4f
   14004b775:	mov    DWORD PTR [rbp+0x28],0xbe
   14004b77c:	call   0x14002ff30
   14004b781:	lea    rdx,[rbp+0x30]
   14004b785:	lea    rcx,[rsi+0x30]
   14004b789:	mov    rbx,rax
   14004b78c:	call   0x14002ffd0
   14004b791:	mov    QWORD PTR [rbx],rax
   14004b794:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b798:	jne    0x14005b3df
   14004b79e:	lea    rdx,[rbp+0x28]
   14004b7a2:	lea    rcx,[rsi+0x30]
   14004b7a6:	mov    DWORD PTR [rbp+0x28],0x4b
   14004b7ad:	call   0x14002ffd0
   14004b7b2:	lea    rcx,[rip+0x258ef]        # 0x1400710a8
   14004b7b9:	lea    rdx,[rbp+0x28]
   14004b7bd:	mov    DWORD PTR [rax],0xbf
   14004b7c3:	mov    DWORD PTR [rax+0x4],0x4b
   14004b7ca:	mov    QWORD PTR [rax+0x8],rcx
   14004b7ce:	lea    rcx,[rsi+0x10]
   14004b7d2:	mov    DWORD PTR [rbp+0x30],0x4b
   14004b7d9:	mov    DWORD PTR [rbp+0x28],0xbf
   14004b7e0:	call   0x14002ff30
   14004b7e5:	lea    rdx,[rbp+0x30]
   14004b7e9:	lea    rcx,[rsi+0x30]
   14004b7ed:	mov    rbx,rax
   14004b7f0:	call   0x14002ffd0
   14004b7f5:	mov    QWORD PTR [rbx],rax
   14004b7f8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b7fc:	jne    0x14005b3df
   14004b802:	lea    rdx,[rbp+0x28]
   14004b806:	lea    rcx,[rsi+0x30]
   14004b80a:	mov    DWORD PTR [rbp+0x28],0x4d
   14004b811:	call   0x14002ffd0
   14004b816:	lea    rcx,[rip+0x258a3]        # 0x1400710c0
   14004b81d:	lea    rdx,[rbp+0x28]
   14004b821:	mov    DWORD PTR [rax],0xc0
   14004b827:	mov    DWORD PTR [rax+0x4],0x4d
   14004b82e:	mov    QWORD PTR [rax+0x8],rcx
   14004b832:	lea    rcx,[rsi+0x10]
   14004b836:	mov    DWORD PTR [rbp+0x30],0x4d
   14004b83d:	mov    DWORD PTR [rbp+0x28],0xc0
   14004b844:	call   0x14002ff30
   14004b849:	lea    rdx,[rbp+0x30]
   14004b84d:	lea    rcx,[rsi+0x30]
   14004b851:	mov    rbx,rax
   14004b854:	call   0x14002ffd0
   14004b859:	mov    QWORD PTR [rbx],rax
   14004b85c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b860:	jne    0x14005b3df
   14004b866:	lea    rdx,[rbp+0x28]
   14004b86a:	lea    rcx,[rsi+0x30]
   14004b86e:	mov    DWORD PTR [rbp+0x28],0x4c
   14004b875:	call   0x14002ffd0
   14004b87a:	lea    rcx,[rip+0x25857]        # 0x1400710d8
   14004b881:	lea    rdx,[rbp+0x28]
   14004b885:	mov    DWORD PTR [rax],0xc1
   14004b88b:	mov    DWORD PTR [rax+0x4],0x4c
   14004b892:	mov    QWORD PTR [rax+0x8],rcx
   14004b896:	lea    rcx,[rsi+0x10]
   14004b89a:	mov    DWORD PTR [rbp+0x30],0x4c
   14004b8a1:	mov    DWORD PTR [rbp+0x28],0xc1
   14004b8a8:	call   0x14002ff30
   14004b8ad:	lea    rdx,[rbp+0x30]
   14004b8b1:	lea    rcx,[rsi+0x30]
   14004b8b5:	mov    rbx,rax
   14004b8b8:	call   0x14002ffd0
   14004b8bd:	mov    QWORD PTR [rbx],rax
   14004b8c0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b8c4:	jne    0x14005b3df
   14004b8ca:	lea    rdx,[rbp+0x28]
   14004b8ce:	lea    rcx,[rsi+0x30]
   14004b8d2:	mov    DWORD PTR [rbp+0x28],0x4e
   14004b8d9:	call   0x14002ffd0
   14004b8de:	lea    rcx,[rip+0x2580b]        # 0x1400710f0
   14004b8e5:	lea    rdx,[rbp+0x28]
   14004b8e9:	mov    DWORD PTR [rax],0xc2
   14004b8ef:	mov    DWORD PTR [rax+0x4],0x4e
   14004b8f6:	mov    QWORD PTR [rax+0x8],rcx
   14004b8fa:	lea    rcx,[rsi+0x10]
   14004b8fe:	mov    DWORD PTR [rbp+0x30],0x4e
   14004b905:	mov    DWORD PTR [rbp+0x28],0xc2
   14004b90c:	call   0x14002ff30
   14004b911:	lea    rdx,[rbp+0x30]
   14004b915:	lea    rcx,[rsi+0x30]
   14004b919:	mov    rbx,rax
   14004b91c:	call   0x14002ffd0
   14004b921:	mov    QWORD PTR [rbx],rax
   14004b924:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b928:	jne    0x14005b3df
   14004b92e:	lea    rdx,[rbp+0x28]
   14004b932:	lea    rcx,[rsi+0x30]
   14004b936:	mov    DWORD PTR [rbp+0x28],0x59
   14004b93d:	call   0x14002ffd0
   14004b942:	lea    rcx,[rip+0x257bf]        # 0x140071108
   14004b949:	lea    rdx,[rbp+0x28]
   14004b94d:	mov    DWORD PTR [rax],0xc3
   14004b953:	mov    DWORD PTR [rax+0x4],0x59
   14004b95a:	mov    QWORD PTR [rax+0x8],rcx
   14004b95e:	lea    rcx,[rsi+0x10]
   14004b962:	mov    DWORD PTR [rbp+0x30],0x59
   14004b969:	mov    DWORD PTR [rbp+0x28],0xc3
   14004b970:	call   0x14002ff30
   14004b975:	lea    rdx,[rbp+0x30]
   14004b979:	lea    rcx,[rsi+0x30]
   14004b97d:	mov    rbx,rax
   14004b980:	call   0x14002ffd0
   14004b985:	mov    QWORD PTR [rbx],rax
   14004b988:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b98c:	jne    0x14005b3df
   14004b992:	lea    rdx,[rbp+0x28]
   14004b996:	lea    rcx,[rsi+0x30]
   14004b99a:	mov    DWORD PTR [rbp+0x28],0x55
   14004b9a1:	call   0x14002ffd0
   14004b9a6:	lea    rcx,[rip+0x25773]        # 0x140071120
   14004b9ad:	lea    rdx,[rbp+0x28]
   14004b9b1:	mov    DWORD PTR [rax],0xc4
   14004b9b7:	mov    DWORD PTR [rax+0x4],0x55
   14004b9be:	mov    QWORD PTR [rax+0x8],rcx
   14004b9c2:	lea    rcx,[rsi+0x10]
   14004b9c6:	mov    DWORD PTR [rbp+0x30],0x55
   14004b9cd:	mov    DWORD PTR [rbp+0x28],0xc4
   14004b9d4:	call   0x14002ff30
   14004b9d9:	lea    rdx,[rbp+0x30]
   14004b9dd:	lea    rcx,[rsi+0x30]
   14004b9e1:	mov    rbx,rax
   14004b9e4:	call   0x14002ffd0
   14004b9e9:	mov    QWORD PTR [rbx],rax
   14004b9ec:	cmp    DWORD PTR [rsi+0x8],r12d
   14004b9f0:	jne    0x14005b3df
   14004b9f6:	lea    rdx,[rbp+0x28]
   14004b9fa:	lea    rcx,[rsi+0x30]
   14004b9fe:	mov    DWORD PTR [rbp+0x28],0x57
   14004ba05:	call   0x14002ffd0
   14004ba0a:	lea    rcx,[rip+0x25727]        # 0x140071138
   14004ba11:	lea    rdx,[rbp+0x28]
   14004ba15:	mov    DWORD PTR [rax],0xc5
   14004ba1b:	mov    DWORD PTR [rax+0x4],0x57
   14004ba22:	mov    QWORD PTR [rax+0x8],rcx
   14004ba26:	lea    rcx,[rsi+0x10]
   14004ba2a:	mov    DWORD PTR [rbp+0x30],0x57
   14004ba31:	mov    DWORD PTR [rbp+0x28],0xc5
   14004ba38:	call   0x14002ff30
   14004ba3d:	lea    rdx,[rbp+0x30]
   14004ba41:	lea    rcx,[rsi+0x30]
   14004ba45:	mov    rbx,rax
   14004ba48:	call   0x14002ffd0
   14004ba4d:	mov    QWORD PTR [rbx],rax
   14004ba50:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ba54:	jne    0x14005b3df
   14004ba5a:	lea    rdx,[rbp+0x28]
   14004ba5e:	lea    rcx,[rsi+0x30]
   14004ba62:	mov    DWORD PTR [rbp+0x28],0x56
   14004ba69:	call   0x14002ffd0
   14004ba6e:	lea    rcx,[rip+0x256db]        # 0x140071150
   14004ba75:	lea    rdx,[rbp+0x28]
   14004ba79:	mov    DWORD PTR [rax],0xc6
   14004ba7f:	mov    DWORD PTR [rax+0x4],0x56
   14004ba86:	mov    QWORD PTR [rax+0x8],rcx
   14004ba8a:	lea    rcx,[rsi+0x10]
   14004ba8e:	mov    DWORD PTR [rbp+0x30],0x56
   14004ba95:	mov    DWORD PTR [rbp+0x28],0xc6
   14004ba9c:	call   0x14002ff30
   14004baa1:	lea    rdx,[rbp+0x30]
   14004baa5:	lea    rcx,[rsi+0x30]
   14004baa9:	mov    rbx,rax
   14004baac:	call   0x14002ffd0
   14004bab1:	mov    QWORD PTR [rbx],rax
   14004bab4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bab8:	jne    0x14005b3df
   14004babe:	lea    rdx,[rbp+0x28]
   14004bac2:	lea    rcx,[rsi+0x30]
   14004bac6:	mov    DWORD PTR [rbp+0x28],0x58
   14004bacd:	call   0x14002ffd0
   14004bad2:	lea    rcx,[rip+0x2568f]        # 0x140071168
   14004bad9:	lea    rdx,[rbp+0x28]
   14004badd:	mov    DWORD PTR [rax],0xc7
   14004bae3:	mov    DWORD PTR [rax+0x4],0x58
   14004baea:	mov    QWORD PTR [rax+0x8],rcx
   14004baee:	lea    rcx,[rsi+0x10]
   14004baf2:	mov    DWORD PTR [rbp+0x30],0x58
   14004baf9:	mov    DWORD PTR [rbp+0x28],0xc7
   14004bb00:	call   0x14002ff30
   14004bb05:	lea    rdx,[rbp+0x30]
   14004bb09:	lea    rcx,[rsi+0x30]
   14004bb0d:	mov    rbx,rax
   14004bb10:	call   0x14002ffd0
   14004bb15:	mov    QWORD PTR [rbx],rax
   14004bb18:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bb1c:	jne    0x14005b3df
   14004bb22:	lea    rdx,[rbp+0x28]
   14004bb26:	lea    rcx,[rsi+0x30]
   14004bb2a:	mov    DWORD PTR [rbp+0x28],0x63
   14004bb31:	call   0x14002ffd0
   14004bb36:	lea    rcx,[rip+0x25643]        # 0x140071180
   14004bb3d:	lea    rdx,[rbp+0x28]
   14004bb41:	mov    DWORD PTR [rax],0xc8
   14004bb47:	mov    DWORD PTR [rax+0x4],0x63
   14004bb4e:	mov    QWORD PTR [rax+0x8],rcx
   14004bb52:	lea    rcx,[rsi+0x10]
   14004bb56:	mov    DWORD PTR [rbp+0x30],0x63
   14004bb5d:	mov    DWORD PTR [rbp+0x28],0xc8
   14004bb64:	call   0x14002ff30
   14004bb69:	lea    rdx,[rbp+0x30]
   14004bb6d:	lea    rcx,[rsi+0x30]
   14004bb71:	mov    rbx,rax
   14004bb74:	call   0x14002ffd0
   14004bb79:	mov    QWORD PTR [rbx],rax
   14004bb7c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bb80:	jne    0x14005b3df
   14004bb86:	lea    rdx,[rbp+0x28]
   14004bb8a:	lea    rcx,[rsi+0x30]
   14004bb8e:	mov    DWORD PTR [rbp+0x28],0x5f
   14004bb95:	call   0x14002ffd0
   14004bb9a:	lea    rcx,[rip+0x255f7]        # 0x140071198
   14004bba1:	lea    rdx,[rbp+0x28]
   14004bba5:	mov    DWORD PTR [rax],0xc9
   14004bbab:	mov    DWORD PTR [rax+0x4],0x5f
   14004bbb2:	mov    QWORD PTR [rax+0x8],rcx
   14004bbb6:	lea    rcx,[rsi+0x10]
   14004bbba:	mov    DWORD PTR [rbp+0x30],0x5f
   14004bbc1:	mov    DWORD PTR [rbp+0x28],0xc9
   14004bbc8:	call   0x14002ff30
   14004bbcd:	lea    rdx,[rbp+0x30]
   14004bbd1:	lea    rcx,[rsi+0x30]
   14004bbd5:	mov    rbx,rax
   14004bbd8:	call   0x14002ffd0
   14004bbdd:	mov    QWORD PTR [rbx],rax
   14004bbe0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bbe4:	jne    0x14005b3df
   14004bbea:	lea    rdx,[rbp+0x28]
   14004bbee:	lea    rcx,[rsi+0x30]
   14004bbf2:	mov    DWORD PTR [rbp+0x28],0x61
   14004bbf9:	call   0x14002ffd0
   14004bbfe:	lea    rcx,[rip+0x255ab]        # 0x1400711b0
   14004bc05:	lea    rdx,[rbp+0x28]
   14004bc09:	mov    DWORD PTR [rax],0xca
   14004bc0f:	mov    DWORD PTR [rax+0x4],0x61
   14004bc16:	mov    QWORD PTR [rax+0x8],rcx
   14004bc1a:	lea    rcx,[rsi+0x10]
   14004bc1e:	mov    DWORD PTR [rbp+0x30],0x61
   14004bc25:	mov    DWORD PTR [rbp+0x28],0xca
   14004bc2c:	call   0x14002ff30
   14004bc31:	lea    rdx,[rbp+0x30]
   14004bc35:	lea    rcx,[rsi+0x30]
   14004bc39:	mov    rbx,rax
   14004bc3c:	call   0x14002ffd0
   14004bc41:	mov    QWORD PTR [rbx],rax
   14004bc44:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bc48:	jne    0x14005b3df
   14004bc4e:	lea    rdx,[rbp+0x28]
   14004bc52:	lea    rcx,[rsi+0x30]
   14004bc56:	mov    DWORD PTR [rbp+0x28],0x60
   14004bc5d:	call   0x14002ffd0
   14004bc62:	lea    rcx,[rip+0x2555f]        # 0x1400711c8
   14004bc69:	lea    rdx,[rbp+0x28]
   14004bc6d:	mov    DWORD PTR [rax],0xcb
   14004bc73:	mov    DWORD PTR [rax+0x4],0x60
   14004bc7a:	mov    QWORD PTR [rax+0x8],rcx
   14004bc7e:	lea    rcx,[rsi+0x10]
   14004bc82:	mov    DWORD PTR [rbp+0x30],0x60
   14004bc89:	mov    DWORD PTR [rbp+0x28],0xcb
   14004bc90:	call   0x14002ff30
   14004bc95:	lea    rdx,[rbp+0x30]
   14004bc99:	lea    rcx,[rsi+0x30]
   14004bc9d:	mov    rbx,rax
   14004bca0:	call   0x14002ffd0
   14004bca5:	mov    QWORD PTR [rbx],rax
   14004bca8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bcac:	jne    0x14005b3df
   14004bcb2:	lea    rdx,[rbp+0x28]
   14004bcb6:	lea    rcx,[rsi+0x30]
   14004bcba:	mov    DWORD PTR [rbp+0x28],0x62
   14004bcc1:	call   0x14002ffd0
   14004bcc6:	lea    rcx,[rip+0x25513]        # 0x1400711e0
   14004bccd:	lea    rdx,[rbp+0x28]
   14004bcd1:	mov    DWORD PTR [rax],0xcc
   14004bcd7:	mov    DWORD PTR [rax+0x4],0x62
   14004bcde:	mov    QWORD PTR [rax+0x8],rcx
   14004bce2:	lea    rcx,[rsi+0x10]
   14004bce6:	mov    DWORD PTR [rbp+0x30],0x62
   14004bced:	mov    DWORD PTR [rbp+0x28],0xcc
   14004bcf4:	call   0x14002ff30
   14004bcf9:	lea    rdx,[rbp+0x30]
   14004bcfd:	lea    rcx,[rsi+0x30]
   14004bd01:	mov    rbx,rax
   14004bd04:	call   0x14002ffd0
   14004bd09:	mov    QWORD PTR [rbx],rax
   14004bd0c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bd10:	jne    0x14005b3df
   14004bd16:	lea    rdx,[rbp+0x28]
   14004bd1a:	lea    rcx,[rsi+0x30]
   14004bd1e:	mov    DWORD PTR [rbp+0x28],0x6d
   14004bd25:	call   0x14002ffd0
   14004bd2a:	lea    rcx,[rip+0x254c7]        # 0x1400711f8
   14004bd31:	lea    rdx,[rbp+0x28]
   14004bd35:	mov    DWORD PTR [rax],0xcd
   14004bd3b:	mov    DWORD PTR [rax+0x4],0x6d
   14004bd42:	mov    QWORD PTR [rax+0x8],rcx
   14004bd46:	lea    rcx,[rsi+0x10]
   14004bd4a:	mov    DWORD PTR [rbp+0x30],0x6d
   14004bd51:	mov    DWORD PTR [rbp+0x28],0xcd
   14004bd58:	call   0x14002ff30
   14004bd5d:	lea    rdx,[rbp+0x30]
   14004bd61:	lea    rcx,[rsi+0x30]
   14004bd65:	mov    rbx,rax
   14004bd68:	call   0x14002ffd0
   14004bd6d:	mov    QWORD PTR [rbx],rax
   14004bd70:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bd74:	jne    0x14005b3df
   14004bd7a:	lea    rdx,[rbp+0x28]
   14004bd7e:	lea    rcx,[rsi+0x30]
   14004bd82:	mov    DWORD PTR [rbp+0x28],0x69
   14004bd89:	call   0x14002ffd0
   14004bd8e:	lea    rcx,[rip+0x2547b]        # 0x140071210
   14004bd95:	lea    rdx,[rbp+0x28]
   14004bd99:	mov    DWORD PTR [rax],0xce
   14004bd9f:	mov    DWORD PTR [rax+0x4],0x69
   14004bda6:	mov    QWORD PTR [rax+0x8],rcx
   14004bdaa:	lea    rcx,[rsi+0x10]
   14004bdae:	mov    DWORD PTR [rbp+0x30],0x69
   14004bdb5:	mov    DWORD PTR [rbp+0x28],0xce
   14004bdbc:	call   0x14002ff30
   14004bdc1:	lea    rdx,[rbp+0x30]
   14004bdc5:	lea    rcx,[rsi+0x30]
   14004bdc9:	mov    rbx,rax
   14004bdcc:	call   0x14002ffd0
   14004bdd1:	mov    QWORD PTR [rbx],rax
   14004bdd4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bdd8:	jne    0x14005b3df
   14004bdde:	lea    rdx,[rbp+0x28]
   14004bde2:	lea    rcx,[rsi+0x30]
   14004bde6:	mov    DWORD PTR [rbp+0x28],0x6b
   14004bded:	call   0x14002ffd0
   14004bdf2:	lea    rcx,[rip+0x2542f]        # 0x140071228
   14004bdf9:	lea    rdx,[rbp+0x28]
   14004bdfd:	mov    DWORD PTR [rax],0xcf
   14004be03:	mov    DWORD PTR [rax+0x4],0x6b
   14004be0a:	mov    QWORD PTR [rax+0x8],rcx
   14004be0e:	lea    rcx,[rsi+0x10]
   14004be12:	mov    DWORD PTR [rbp+0x30],0x6b
   14004be19:	mov    DWORD PTR [rbp+0x28],0xcf
   14004be20:	call   0x14002ff30
   14004be25:	lea    rdx,[rbp+0x30]
   14004be29:	lea    rcx,[rsi+0x30]
   14004be2d:	mov    rbx,rax
   14004be30:	call   0x14002ffd0
   14004be35:	mov    QWORD PTR [rbx],rax
   14004be38:	cmp    DWORD PTR [rsi+0x8],r12d
   14004be3c:	jne    0x14005b3df
   14004be42:	lea    rdx,[rbp+0x28]
   14004be46:	lea    rcx,[rsi+0x30]
   14004be4a:	mov    DWORD PTR [rbp+0x28],0x6a
   14004be51:	call   0x14002ffd0
   14004be56:	lea    rcx,[rip+0x253e3]        # 0x140071240
   14004be5d:	lea    rdx,[rbp+0x28]
   14004be61:	mov    DWORD PTR [rax],0xd0
   14004be67:	mov    DWORD PTR [rax+0x4],0x6a
   14004be6e:	mov    QWORD PTR [rax+0x8],rcx
   14004be72:	lea    rcx,[rsi+0x10]
   14004be76:	mov    DWORD PTR [rbp+0x30],0x6a
   14004be7d:	mov    DWORD PTR [rbp+0x28],0xd0
   14004be84:	call   0x14002ff30
   14004be89:	lea    rdx,[rbp+0x30]
   14004be8d:	lea    rcx,[rsi+0x30]
   14004be91:	mov    rbx,rax
   14004be94:	call   0x14002ffd0
   14004be99:	mov    QWORD PTR [rbx],rax
   14004be9c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bea0:	jne    0x14005b3df
   14004bea6:	lea    rdx,[rbp+0x28]
   14004beaa:	lea    rcx,[rsi+0x30]
   14004beae:	mov    DWORD PTR [rbp+0x28],0x6c
   14004beb5:	call   0x14002ffd0
   14004beba:	lea    rcx,[rip+0x25397]        # 0x140071258
   14004bec1:	lea    rdx,[rbp+0x28]
   14004bec5:	mov    DWORD PTR [rax],0xd1
   14004becb:	mov    DWORD PTR [rax+0x4],0x6c
   14004bed2:	mov    QWORD PTR [rax+0x8],rcx
   14004bed6:	lea    rcx,[rsi+0x10]
   14004beda:	mov    DWORD PTR [rbp+0x30],0x6c
   14004bee1:	mov    DWORD PTR [rbp+0x28],0xd1
   14004bee8:	call   0x14002ff30
   14004beed:	lea    rdx,[rbp+0x30]
   14004bef1:	lea    rcx,[rsi+0x30]
   14004bef5:	mov    rbx,rax
   14004bef8:	call   0x14002ffd0
   14004befd:	mov    QWORD PTR [rbx],rax
   14004bf00:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bf04:	jne    0x14005b3df
   14004bf0a:	lea    rdx,[rbp+0x28]
   14004bf0e:	lea    rcx,[rsi+0x30]
   14004bf12:	mov    DWORD PTR [rbp+0x28],0x77
   14004bf19:	call   0x14002ffd0
   14004bf1e:	lea    rcx,[rip+0x2534b]        # 0x140071270
   14004bf25:	lea    rdx,[rbp+0x28]
   14004bf29:	mov    DWORD PTR [rax],0xd2
   14004bf2f:	mov    DWORD PTR [rax+0x4],0x77
   14004bf36:	mov    QWORD PTR [rax+0x8],rcx
   14004bf3a:	lea    rcx,[rsi+0x10]
   14004bf3e:	mov    DWORD PTR [rbp+0x30],0x77
   14004bf45:	mov    DWORD PTR [rbp+0x28],0xd2
   14004bf4c:	call   0x14002ff30
   14004bf51:	lea    rdx,[rbp+0x30]
   14004bf55:	lea    rcx,[rsi+0x30]
   14004bf59:	mov    rbx,rax
   14004bf5c:	call   0x14002ffd0
   14004bf61:	mov    QWORD PTR [rbx],rax
   14004bf64:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bf68:	jne    0x14005b3df
   14004bf6e:	lea    rdx,[rbp+0x28]
   14004bf72:	lea    rcx,[rsi+0x30]
   14004bf76:	mov    DWORD PTR [rbp+0x28],0x73
   14004bf7d:	call   0x14002ffd0
   14004bf82:	lea    rcx,[rip+0x252ff]        # 0x140071288
   14004bf89:	lea    rdx,[rbp+0x28]
   14004bf8d:	mov    DWORD PTR [rax],0xd3
   14004bf93:	mov    DWORD PTR [rax+0x4],0x73
   14004bf9a:	mov    QWORD PTR [rax+0x8],rcx
   14004bf9e:	lea    rcx,[rsi+0x10]
   14004bfa2:	mov    DWORD PTR [rbp+0x30],0x73
   14004bfa9:	mov    DWORD PTR [rbp+0x28],0xd3
   14004bfb0:	call   0x14002ff30
   14004bfb5:	lea    rdx,[rbp+0x30]
   14004bfb9:	lea    rcx,[rsi+0x30]
   14004bfbd:	mov    rbx,rax
   14004bfc0:	call   0x14002ffd0
   14004bfc5:	mov    QWORD PTR [rbx],rax
   14004bfc8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004bfcc:	jne    0x14005b3df
   14004bfd2:	lea    rdx,[rbp+0x28]
   14004bfd6:	lea    rcx,[rsi+0x30]
   14004bfda:	mov    DWORD PTR [rbp+0x28],0x75
   14004bfe1:	call   0x14002ffd0
   14004bfe6:	lea    rcx,[rip+0x252b3]        # 0x1400712a0
   14004bfed:	lea    rdx,[rbp+0x28]
   14004bff1:	mov    DWORD PTR [rax],0xd4
   14004bff7:	mov    DWORD PTR [rax+0x4],0x75
   14004bffe:	mov    QWORD PTR [rax+0x8],rcx
   14004c002:	lea    rcx,[rsi+0x10]
   14004c006:	mov    DWORD PTR [rbp+0x30],0x75
   14004c00d:	mov    DWORD PTR [rbp+0x28],0xd4
   14004c014:	call   0x14002ff30
   14004c019:	lea    rdx,[rbp+0x30]
   14004c01d:	lea    rcx,[rsi+0x30]
   14004c021:	mov    rbx,rax
   14004c024:	call   0x14002ffd0
   14004c029:	mov    QWORD PTR [rbx],rax
   14004c02c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c030:	jne    0x14005b3df
   14004c036:	lea    rdx,[rbp+0x28]
   14004c03a:	lea    rcx,[rsi+0x30]
   14004c03e:	mov    DWORD PTR [rbp+0x28],0x74
   14004c045:	call   0x14002ffd0
   14004c04a:	lea    rcx,[rip+0x25267]        # 0x1400712b8
   14004c051:	lea    rdx,[rbp+0x28]
   14004c055:	mov    DWORD PTR [rax],0xd5
   14004c05b:	mov    DWORD PTR [rax+0x4],0x74
   14004c062:	mov    QWORD PTR [rax+0x8],rcx
   14004c066:	lea    rcx,[rsi+0x10]
   14004c06a:	mov    DWORD PTR [rbp+0x30],0x74
   14004c071:	mov    DWORD PTR [rbp+0x28],0xd5
   14004c078:	call   0x14002ff30
   14004c07d:	lea    rdx,[rbp+0x30]
   14004c081:	lea    rcx,[rsi+0x30]
   14004c085:	mov    rbx,rax
   14004c088:	call   0x14002ffd0
   14004c08d:	mov    QWORD PTR [rbx],rax
   14004c090:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c094:	jne    0x14005b3df
   14004c09a:	lea    rdx,[rbp+0x28]
   14004c09e:	lea    rcx,[rsi+0x30]
   14004c0a2:	mov    DWORD PTR [rbp+0x28],0x76
   14004c0a9:	call   0x14002ffd0
   14004c0ae:	lea    rcx,[rip+0x2521b]        # 0x1400712d0
   14004c0b5:	lea    rdx,[rbp+0x28]
   14004c0b9:	mov    DWORD PTR [rax],0xd6
   14004c0bf:	mov    DWORD PTR [rax+0x4],0x76
   14004c0c6:	mov    QWORD PTR [rax+0x8],rcx
   14004c0ca:	lea    rcx,[rsi+0x10]
   14004c0ce:	mov    DWORD PTR [rbp+0x30],0x76
   14004c0d5:	mov    DWORD PTR [rbp+0x28],0xd6
   14004c0dc:	call   0x14002ff30
   14004c0e1:	lea    rdx,[rbp+0x30]
   14004c0e5:	lea    rcx,[rsi+0x30]
   14004c0e9:	mov    rbx,rax
   14004c0ec:	call   0x14002ffd0
   14004c0f1:	mov    QWORD PTR [rbx],rax
   14004c0f4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c0f8:	jne    0x14005b3df
   14004c0fe:	lea    rdx,[rbp+0x28]
   14004c102:	lea    rcx,[rsi+0x30]
   14004c106:	mov    DWORD PTR [rbp+0x28],0x81
   14004c10d:	call   0x14002ffd0
   14004c112:	lea    rcx,[rip+0x251cf]        # 0x1400712e8
   14004c119:	lea    rdx,[rbp+0x28]
   14004c11d:	mov    DWORD PTR [rax],0xd7
   14004c123:	mov    DWORD PTR [rax+0x4],0x81
   14004c12a:	mov    QWORD PTR [rax+0x8],rcx
   14004c12e:	lea    rcx,[rsi+0x10]
   14004c132:	mov    DWORD PTR [rbp+0x30],0x81
   14004c139:	mov    DWORD PTR [rbp+0x28],0xd7
   14004c140:	call   0x14002ff30
   14004c145:	lea    rdx,[rbp+0x30]
   14004c149:	lea    rcx,[rsi+0x30]
   14004c14d:	mov    rbx,rax
   14004c150:	call   0x14002ffd0
   14004c155:	mov    QWORD PTR [rbx],rax
   14004c158:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c15c:	jne    0x14005b3df
   14004c162:	lea    rdx,[rbp+0x28]
   14004c166:	lea    rcx,[rsi+0x30]
   14004c16a:	mov    DWORD PTR [rbp+0x28],0x7d
   14004c171:	call   0x14002ffd0
   14004c176:	lea    rcx,[rip+0x25183]        # 0x140071300
   14004c17d:	lea    rdx,[rbp+0x28]
   14004c181:	mov    DWORD PTR [rax],0xd8
   14004c187:	mov    DWORD PTR [rax+0x4],0x7d
   14004c18e:	mov    QWORD PTR [rax+0x8],rcx
   14004c192:	lea    rcx,[rsi+0x10]
   14004c196:	mov    DWORD PTR [rbp+0x30],0x7d
   14004c19d:	mov    DWORD PTR [rbp+0x28],0xd8
   14004c1a4:	call   0x14002ff30
   14004c1a9:	lea    rdx,[rbp+0x30]
   14004c1ad:	lea    rcx,[rsi+0x30]
   14004c1b1:	mov    rbx,rax
   14004c1b4:	call   0x14002ffd0
   14004c1b9:	mov    QWORD PTR [rbx],rax
   14004c1bc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c1c0:	jne    0x14005b3df
   14004c1c6:	lea    rdx,[rbp+0x28]
   14004c1ca:	lea    rcx,[rsi+0x30]
   14004c1ce:	mov    DWORD PTR [rbp+0x28],0x7f
   14004c1d5:	call   0x14002ffd0
   14004c1da:	lea    rcx,[rip+0x25137]        # 0x140071318
   14004c1e1:	lea    rdx,[rbp+0x28]
   14004c1e5:	mov    DWORD PTR [rax],0xd9
   14004c1eb:	mov    DWORD PTR [rax+0x4],0x7f
   14004c1f2:	mov    QWORD PTR [rax+0x8],rcx
   14004c1f6:	lea    rcx,[rsi+0x10]
   14004c1fa:	mov    DWORD PTR [rbp+0x30],0x7f
   14004c201:	mov    DWORD PTR [rbp+0x28],0xd9
   14004c208:	call   0x14002ff30
   14004c20d:	lea    rdx,[rbp+0x30]
   14004c211:	lea    rcx,[rsi+0x30]
   14004c215:	mov    rbx,rax
   14004c218:	call   0x14002ffd0
   14004c21d:	mov    QWORD PTR [rbx],rax
   14004c220:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c224:	jne    0x14005b3df
   14004c22a:	lea    rdx,[rbp+0x28]
   14004c22e:	lea    rcx,[rsi+0x30]
   14004c232:	mov    DWORD PTR [rbp+0x28],0x7e
   14004c239:	call   0x14002ffd0
   14004c23e:	lea    rcx,[rip+0x250eb]        # 0x140071330
   14004c245:	lea    rdx,[rbp+0x28]
   14004c249:	mov    DWORD PTR [rax],0xda
   14004c24f:	mov    DWORD PTR [rax+0x4],0x7e
   14004c256:	mov    QWORD PTR [rax+0x8],rcx
   14004c25a:	lea    rcx,[rsi+0x10]
   14004c25e:	mov    DWORD PTR [rbp+0x30],0x7e
   14004c265:	mov    DWORD PTR [rbp+0x28],0xda
   14004c26c:	call   0x14002ff30
   14004c271:	lea    rdx,[rbp+0x30]
   14004c275:	lea    rcx,[rsi+0x30]
   14004c279:	mov    rbx,rax
   14004c27c:	call   0x14002ffd0
   14004c281:	mov    QWORD PTR [rbx],rax
   14004c284:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c288:	jne    0x14005b3df
   14004c28e:	lea    rdx,[rbp+0x28]
   14004c292:	lea    rcx,[rsi+0x30]
   14004c296:	mov    DWORD PTR [rbp+0x28],0x80
   14004c29d:	call   0x14002ffd0
   14004c2a2:	lea    rcx,[rip+0x2509f]        # 0x140071348
   14004c2a9:	lea    rdx,[rbp+0x28]
   14004c2ad:	mov    DWORD PTR [rax],0xdb
   14004c2b3:	mov    DWORD PTR [rax+0x4],0x80
   14004c2ba:	mov    QWORD PTR [rax+0x8],rcx
   14004c2be:	lea    rcx,[rsi+0x10]
   14004c2c2:	mov    DWORD PTR [rbp+0x30],0x80
   14004c2c9:	mov    DWORD PTR [rbp+0x28],0xdb
   14004c2d0:	call   0x14002ff30
   14004c2d5:	lea    rdx,[rbp+0x30]
   14004c2d9:	lea    rcx,[rsi+0x30]
   14004c2dd:	mov    rbx,rax
   14004c2e0:	call   0x14002ffd0
   14004c2e5:	mov    QWORD PTR [rbx],rax
   14004c2e8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c2ec:	jne    0x14005b3df
   14004c2f2:	lea    rdx,[rbp+0x28]
   14004c2f6:	lea    rcx,[rsi+0x30]
   14004c2fa:	mov    DWORD PTR [rbp+0x28],0x8b
   14004c301:	call   0x14002ffd0
   14004c306:	lea    rcx,[rip+0x25053]        # 0x140071360
   14004c30d:	lea    rdx,[rbp+0x28]
   14004c311:	mov    DWORD PTR [rax],0xdc
   14004c317:	mov    DWORD PTR [rax+0x4],0x8b
   14004c31e:	mov    QWORD PTR [rax+0x8],rcx
   14004c322:	lea    rcx,[rsi+0x10]
   14004c326:	mov    DWORD PTR [rbp+0x30],0x8b
   14004c32d:	mov    DWORD PTR [rbp+0x28],0xdc
   14004c334:	call   0x14002ff30
   14004c339:	lea    rdx,[rbp+0x30]
   14004c33d:	lea    rcx,[rsi+0x30]
   14004c341:	mov    rbx,rax
   14004c344:	call   0x14002ffd0
   14004c349:	mov    QWORD PTR [rbx],rax
   14004c34c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c350:	jne    0x14005b3df
   14004c356:	lea    rdx,[rbp+0x28]
   14004c35a:	lea    rcx,[rsi+0x30]
   14004c35e:	mov    DWORD PTR [rbp+0x28],0x87
   14004c365:	call   0x14002ffd0
   14004c36a:	lea    rcx,[rip+0x25007]        # 0x140071378
   14004c371:	lea    rdx,[rbp+0x28]
   14004c375:	mov    DWORD PTR [rax],0xdd
   14004c37b:	mov    DWORD PTR [rax+0x4],0x87
   14004c382:	mov    QWORD PTR [rax+0x8],rcx
   14004c386:	lea    rcx,[rsi+0x10]
   14004c38a:	mov    DWORD PTR [rbp+0x30],0x87
   14004c391:	mov    DWORD PTR [rbp+0x28],0xdd
   14004c398:	call   0x14002ff30
   14004c39d:	lea    rdx,[rbp+0x30]
   14004c3a1:	lea    rcx,[rsi+0x30]
   14004c3a5:	mov    rbx,rax
   14004c3a8:	call   0x14002ffd0
   14004c3ad:	mov    QWORD PTR [rbx],rax
   14004c3b0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c3b4:	jne    0x14005b3df
   14004c3ba:	lea    rdx,[rbp+0x28]
   14004c3be:	lea    rcx,[rsi+0x30]
   14004c3c2:	mov    DWORD PTR [rbp+0x28],0x89
   14004c3c9:	call   0x14002ffd0
   14004c3ce:	lea    rcx,[rip+0x24fbb]        # 0x140071390
   14004c3d5:	lea    rdx,[rbp+0x28]
   14004c3d9:	mov    DWORD PTR [rax],0xde
   14004c3df:	mov    DWORD PTR [rax+0x4],0x89
   14004c3e6:	mov    QWORD PTR [rax+0x8],rcx
   14004c3ea:	lea    rcx,[rsi+0x10]
   14004c3ee:	mov    DWORD PTR [rbp+0x30],0x89
   14004c3f5:	mov    DWORD PTR [rbp+0x28],0xde
   14004c3fc:	call   0x14002ff30
   14004c401:	lea    rdx,[rbp+0x30]
   14004c405:	lea    rcx,[rsi+0x30]
   14004c409:	mov    rbx,rax
   14004c40c:	call   0x14002ffd0
   14004c411:	mov    QWORD PTR [rbx],rax
   14004c414:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c418:	jne    0x14005b3df
   14004c41e:	lea    rdx,[rbp+0x28]
   14004c422:	lea    rcx,[rsi+0x30]
   14004c426:	mov    DWORD PTR [rbp+0x28],0x88
   14004c42d:	call   0x14002ffd0
   14004c432:	lea    rcx,[rip+0x24f6f]        # 0x1400713a8
   14004c439:	lea    rdx,[rbp+0x28]
   14004c43d:	mov    DWORD PTR [rax],0xdf
   14004c443:	mov    DWORD PTR [rax+0x4],0x88
   14004c44a:	mov    QWORD PTR [rax+0x8],rcx
   14004c44e:	lea    rcx,[rsi+0x10]
   14004c452:	mov    DWORD PTR [rbp+0x30],0x88
   14004c459:	mov    DWORD PTR [rbp+0x28],0xdf
   14004c460:	call   0x14002ff30
   14004c465:	lea    rdx,[rbp+0x30]
   14004c469:	lea    rcx,[rsi+0x30]
   14004c46d:	mov    rbx,rax
   14004c470:	call   0x14002ffd0
   14004c475:	mov    QWORD PTR [rbx],rax
   14004c478:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c47c:	jne    0x14005b3df
   14004c482:	lea    rdx,[rbp+0x28]
   14004c486:	lea    rcx,[rsi+0x30]
   14004c48a:	mov    DWORD PTR [rbp+0x28],0x8a
   14004c491:	call   0x14002ffd0
   14004c496:	lea    rcx,[rip+0x24f23]        # 0x1400713c0
   14004c49d:	lea    rdx,[rbp+0x28]
   14004c4a1:	mov    DWORD PTR [rax],0xe0
   14004c4a7:	mov    DWORD PTR [rax+0x4],0x8a
   14004c4ae:	mov    QWORD PTR [rax+0x8],rcx
   14004c4b2:	lea    rcx,[rsi+0x10]
   14004c4b6:	mov    DWORD PTR [rbp+0x30],0x8a
   14004c4bd:	mov    DWORD PTR [rbp+0x28],0xe0
   14004c4c4:	call   0x14002ff30
   14004c4c9:	lea    rdx,[rbp+0x30]
   14004c4cd:	lea    rcx,[rsi+0x30]
   14004c4d1:	mov    rbx,rax
   14004c4d4:	call   0x14002ffd0
   14004c4d9:	mov    QWORD PTR [rbx],rax
   14004c4dc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c4e0:	jne    0x14005b3df
   14004c4e6:	lea    rdx,[rbp+0x28]
   14004c4ea:	lea    rcx,[rsi+0x30]
   14004c4ee:	mov    DWORD PTR [rbp+0x28],0x27
   14004c4f5:	call   0x14002ffd0
   14004c4fa:	lea    rcx,[rip+0x24ed7]        # 0x1400713d8
   14004c501:	lea    rdx,[rbp+0x28]
   14004c505:	mov    DWORD PTR [rax],0xae
   14004c50b:	mov    DWORD PTR [rax+0x4],0x27
   14004c512:	mov    QWORD PTR [rax+0x8],rcx
   14004c516:	lea    rcx,[rsi+0x10]
   14004c51a:	mov    DWORD PTR [rbp+0x30],0x27
   14004c521:	mov    DWORD PTR [rbp+0x28],0xae
   14004c528:	call   0x14002ff30
   14004c52d:	lea    rdx,[rbp+0x30]
   14004c531:	lea    rcx,[rsi+0x30]
   14004c535:	mov    rbx,rax
   14004c538:	call   0x14002ffd0
   14004c53d:	mov    QWORD PTR [rbx],rax
   14004c540:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c544:	jne    0x14005b3df
   14004c54a:	lea    rdx,[rbp+0x28]
   14004c54e:	lea    rcx,[rsi+0x30]
   14004c552:	mov    DWORD PTR [rbp+0x28],0x8d
   14004c559:	call   0x14002ffd0
   14004c55e:	lea    rcx,[rip+0x24e8b]        # 0x1400713f0
   14004c565:	lea    rdx,[rbp+0x28]
   14004c569:	mov    DWORD PTR [rax],0x341
   14004c56f:	mov    DWORD PTR [rax+0x4],0x8d
   14004c576:	mov    QWORD PTR [rax+0x8],rcx
   14004c57a:	lea    rcx,[rsi+0x10]
   14004c57e:	mov    DWORD PTR [rbp+0x30],0x8d
   14004c585:	mov    DWORD PTR [rbp+0x28],0x341
   14004c58c:	call   0x14002ff30
   14004c591:	lea    rdx,[rbp+0x30]
   14004c595:	lea    rcx,[rsi+0x30]
   14004c599:	mov    rbx,rax
   14004c59c:	call   0x14002ffd0
   14004c5a1:	mov    QWORD PTR [rbx],rax
   14004c5a4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c5a8:	jne    0x14005b3df
   14004c5ae:	lea    rdx,[rbp+0x28]
   14004c5b2:	lea    rcx,[rsi+0x30]
   14004c5b6:	mov    DWORD PTR [rbp+0x28],0x15d
   14004c5bd:	call   0x14002ffd0
   14004c5c2:	lea    rcx,[rip+0x24e3f]        # 0x140071408
   14004c5c9:	lea    rdx,[rbp+0x28]
   14004c5cd:	mov    DWORD PTR [rax],0x342
   14004c5d3:	mov    DWORD PTR [rax+0x4],0x15d
   14004c5da:	mov    QWORD PTR [rax+0x8],rcx
   14004c5de:	lea    rcx,[rsi+0x10]
   14004c5e2:	mov    DWORD PTR [rbp+0x30],0x15d
   14004c5e9:	mov    DWORD PTR [rbp+0x28],0x342
   14004c5f0:	call   0x14002ff30
   14004c5f5:	lea    rdx,[rbp+0x30]
   14004c5f9:	lea    rcx,[rsi+0x30]
   14004c5fd:	mov    rbx,rax
   14004c600:	call   0x14002ffd0
   14004c605:	mov    QWORD PTR [rbx],rax
   14004c608:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c60c:	jne    0x14005b3df
   14004c612:	lea    rdx,[rbp+0x28]
   14004c616:	lea    rcx,[rsi+0x30]
   14004c61a:	mov    DWORD PTR [rbp+0x28],0x159
   14004c621:	call   0x14002ffd0
   14004c626:	lea    rcx,[rip+0x24df3]        # 0x140071420
   14004c62d:	lea    rdx,[rbp+0x28]
   14004c631:	mov    DWORD PTR [rax],0x343
   14004c637:	mov    DWORD PTR [rax+0x4],0x159
   14004c63e:	mov    QWORD PTR [rax+0x8],rcx
   14004c642:	lea    rcx,[rsi+0x10]
   14004c646:	mov    DWORD PTR [rbp+0x30],0x159
   14004c64d:	mov    DWORD PTR [rbp+0x28],0x343
   14004c654:	call   0x14002ff30
   14004c659:	lea    rdx,[rbp+0x30]
   14004c65d:	lea    rcx,[rsi+0x30]
   14004c661:	mov    rbx,rax
   14004c664:	call   0x14002ffd0
   14004c669:	mov    QWORD PTR [rbx],rax
   14004c66c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c670:	jne    0x14005b3df
   14004c676:	lea    rdx,[rbp+0x28]
   14004c67a:	lea    rcx,[rsi+0x30]
   14004c67e:	mov    DWORD PTR [rbp+0x28],0x15b
   14004c685:	call   0x14002ffd0
   14004c68a:	lea    rcx,[rip+0x24da7]        # 0x140071438
   14004c691:	lea    rdx,[rbp+0x28]
   14004c695:	mov    DWORD PTR [rax],0x344
   14004c69b:	mov    DWORD PTR [rax+0x4],0x15b
   14004c6a2:	mov    QWORD PTR [rax+0x8],rcx
   14004c6a6:	lea    rcx,[rsi+0x10]
   14004c6aa:	mov    DWORD PTR [rbp+0x30],0x15b
   14004c6b1:	mov    DWORD PTR [rbp+0x28],0x344
   14004c6b8:	call   0x14002ff30
   14004c6bd:	lea    rdx,[rbp+0x30]
   14004c6c1:	lea    rcx,[rsi+0x30]
   14004c6c5:	mov    rbx,rax
   14004c6c8:	call   0x14002ffd0
   14004c6cd:	mov    QWORD PTR [rbx],rax
   14004c6d0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c6d4:	jne    0x14005b3df
   14004c6da:	lea    rdx,[rbp+0x28]
   14004c6de:	lea    rcx,[rsi+0x30]
   14004c6e2:	mov    DWORD PTR [rbp+0x28],0x15a
   14004c6e9:	call   0x14002ffd0
   14004c6ee:	lea    rcx,[rip+0x24d5b]        # 0x140071450
   14004c6f5:	lea    rdx,[rbp+0x28]
   14004c6f9:	mov    DWORD PTR [rax],0x345
   14004c6ff:	mov    DWORD PTR [rax+0x4],0x15a
   14004c706:	mov    QWORD PTR [rax+0x8],rcx
   14004c70a:	lea    rcx,[rsi+0x10]
   14004c70e:	mov    DWORD PTR [rbp+0x30],0x15a
   14004c715:	mov    DWORD PTR [rbp+0x28],0x345
   14004c71c:	call   0x14002ff30
   14004c721:	lea    rdx,[rbp+0x30]
   14004c725:	lea    rcx,[rsi+0x30]
   14004c729:	mov    rbx,rax
   14004c72c:	call   0x14002ffd0
   14004c731:	mov    QWORD PTR [rbx],rax
   14004c734:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c738:	jne    0x14005b3df
   14004c73e:	lea    rdx,[rbp+0x28]
   14004c742:	lea    rcx,[rsi+0x30]
   14004c746:	mov    DWORD PTR [rbp+0x28],0x15c
   14004c74d:	call   0x14002ffd0
   14004c752:	lea    rcx,[rip+0x24d0f]        # 0x140071468
   14004c759:	lea    rdx,[rbp+0x28]
   14004c75d:	mov    DWORD PTR [rax],0x346
   14004c763:	mov    DWORD PTR [rax+0x4],0x15c
   14004c76a:	mov    QWORD PTR [rax+0x8],rcx
   14004c76e:	lea    rcx,[rsi+0x10]
   14004c772:	mov    DWORD PTR [rbp+0x30],0x15c
   14004c779:	mov    DWORD PTR [rbp+0x28],0x346
   14004c780:	call   0x14002ff30
   14004c785:	lea    rdx,[rbp+0x30]
   14004c789:	lea    rcx,[rsi+0x30]
   14004c78d:	mov    rbx,rax
   14004c790:	call   0x14002ffd0
   14004c795:	mov    QWORD PTR [rbx],rax
   14004c798:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c79c:	jne    0x14005b3df
   14004c7a2:	lea    rdx,[rbp+0x28]
   14004c7a6:	lea    rcx,[rsi+0x30]
   14004c7aa:	mov    DWORD PTR [rbp+0x28],0x167
   14004c7b1:	call   0x14002ffd0
   14004c7b6:	lea    rcx,[rip+0x24cc3]        # 0x140071480
   14004c7bd:	lea    rdx,[rbp+0x28]
   14004c7c1:	mov    DWORD PTR [rax],0x347
   14004c7c7:	mov    DWORD PTR [rax+0x4],0x167
   14004c7ce:	mov    QWORD PTR [rax+0x8],rcx
   14004c7d2:	lea    rcx,[rsi+0x10]
   14004c7d6:	mov    DWORD PTR [rbp+0x30],0x167
   14004c7dd:	mov    DWORD PTR [rbp+0x28],0x347
   14004c7e4:	call   0x14002ff30
   14004c7e9:	lea    rdx,[rbp+0x30]
   14004c7ed:	lea    rcx,[rsi+0x30]
   14004c7f1:	mov    rbx,rax
   14004c7f4:	call   0x14002ffd0
   14004c7f9:	mov    QWORD PTR [rbx],rax
   14004c7fc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c800:	jne    0x14005b3df
   14004c806:	lea    rdx,[rbp+0x28]
   14004c80a:	lea    rcx,[rsi+0x30]
   14004c80e:	mov    DWORD PTR [rbp+0x28],0x163
   14004c815:	call   0x14002ffd0
   14004c81a:	lea    rcx,[rip+0x24c77]        # 0x140071498
   14004c821:	lea    rdx,[rbp+0x28]
   14004c825:	mov    DWORD PTR [rax],0x348
   14004c82b:	mov    DWORD PTR [rax+0x4],0x163
   14004c832:	mov    QWORD PTR [rax+0x8],rcx
   14004c836:	lea    rcx,[rsi+0x10]
   14004c83a:	mov    DWORD PTR [rbp+0x30],0x163
   14004c841:	mov    DWORD PTR [rbp+0x28],0x348
   14004c848:	call   0x14002ff30
   14004c84d:	lea    rdx,[rbp+0x30]
   14004c851:	lea    rcx,[rsi+0x30]
   14004c855:	mov    rbx,rax
   14004c858:	call   0x14002ffd0
   14004c85d:	mov    QWORD PTR [rbx],rax
   14004c860:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c864:	jne    0x14005b3df
   14004c86a:	lea    rdx,[rbp+0x28]
   14004c86e:	lea    rcx,[rsi+0x30]
   14004c872:	mov    DWORD PTR [rbp+0x28],0x165
   14004c879:	call   0x14002ffd0
   14004c87e:	lea    rcx,[rip+0x24c2b]        # 0x1400714b0
   14004c885:	lea    rdx,[rbp+0x28]
   14004c889:	mov    DWORD PTR [rax],0x349
   14004c88f:	mov    DWORD PTR [rax+0x4],0x165
   14004c896:	mov    QWORD PTR [rax+0x8],rcx
   14004c89a:	lea    rcx,[rsi+0x10]
   14004c89e:	mov    DWORD PTR [rbp+0x30],0x165
   14004c8a5:	mov    DWORD PTR [rbp+0x28],0x349
   14004c8ac:	call   0x14002ff30
   14004c8b1:	lea    rdx,[rbp+0x30]
   14004c8b5:	lea    rcx,[rsi+0x30]
   14004c8b9:	mov    rbx,rax
   14004c8bc:	call   0x14002ffd0
   14004c8c1:	mov    QWORD PTR [rbx],rax
   14004c8c4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c8c8:	jne    0x14005b3df
   14004c8ce:	lea    rdx,[rbp+0x28]
   14004c8d2:	lea    rcx,[rsi+0x30]
   14004c8d6:	mov    DWORD PTR [rbp+0x28],0x164
   14004c8dd:	call   0x14002ffd0
   14004c8e2:	lea    rcx,[rip+0x24bdf]        # 0x1400714c8
   14004c8e9:	lea    rdx,[rbp+0x28]
   14004c8ed:	mov    DWORD PTR [rax],0x34a
   14004c8f3:	mov    DWORD PTR [rax+0x4],0x164
   14004c8fa:	mov    QWORD PTR [rax+0x8],rcx
   14004c8fe:	lea    rcx,[rsi+0x10]
   14004c902:	mov    DWORD PTR [rbp+0x30],0x164
   14004c909:	mov    DWORD PTR [rbp+0x28],0x34a
   14004c910:	call   0x14002ff30
   14004c915:	lea    rdx,[rbp+0x30]
   14004c919:	lea    rcx,[rsi+0x30]
   14004c91d:	mov    rbx,rax
   14004c920:	call   0x14002ffd0
   14004c925:	mov    QWORD PTR [rbx],rax
   14004c928:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c92c:	jne    0x14005b3df
   14004c932:	lea    rdx,[rbp+0x28]
   14004c936:	lea    rcx,[rsi+0x30]
   14004c93a:	mov    DWORD PTR [rbp+0x28],0x166
   14004c941:	call   0x14002ffd0
   14004c946:	lea    rcx,[rip+0x24b93]        # 0x1400714e0
   14004c94d:	lea    rdx,[rbp+0x28]
   14004c951:	mov    DWORD PTR [rax],0x34b
   14004c957:	mov    DWORD PTR [rax+0x4],0x166
   14004c95e:	mov    QWORD PTR [rax+0x8],rcx
   14004c962:	lea    rcx,[rsi+0x10]
   14004c966:	mov    DWORD PTR [rbp+0x30],0x166
   14004c96d:	mov    DWORD PTR [rbp+0x28],0x34b
   14004c974:	call   0x14002ff30
   14004c979:	lea    rdx,[rbp+0x30]
   14004c97d:	lea    rcx,[rsi+0x30]
   14004c981:	mov    rbx,rax
   14004c984:	call   0x14002ffd0
   14004c989:	mov    QWORD PTR [rbx],rax
   14004c98c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c990:	jne    0x14005b3df
   14004c996:	lea    rdx,[rbp+0x28]
   14004c99a:	lea    rcx,[rsi+0x30]
   14004c99e:	mov    DWORD PTR [rbp+0x28],0x171
   14004c9a5:	call   0x14002ffd0
   14004c9aa:	lea    rcx,[rip+0x24b47]        # 0x1400714f8
   14004c9b1:	lea    rdx,[rbp+0x28]
   14004c9b5:	mov    DWORD PTR [rax],0x34c
   14004c9bb:	mov    DWORD PTR [rax+0x4],0x171
   14004c9c2:	mov    QWORD PTR [rax+0x8],rcx
   14004c9c6:	lea    rcx,[rsi+0x10]
   14004c9ca:	mov    DWORD PTR [rbp+0x30],0x171
   14004c9d1:	mov    DWORD PTR [rbp+0x28],0x34c
   14004c9d8:	call   0x14002ff30
   14004c9dd:	lea    rdx,[rbp+0x30]
   14004c9e1:	lea    rcx,[rsi+0x30]
   14004c9e5:	mov    rbx,rax
   14004c9e8:	call   0x14002ffd0
   14004c9ed:	mov    QWORD PTR [rbx],rax
   14004c9f0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004c9f4:	jne    0x14005b3df
   14004c9fa:	lea    rdx,[rbp+0x28]
   14004c9fe:	lea    rcx,[rsi+0x30]
   14004ca02:	mov    DWORD PTR [rbp+0x28],0x16d
   14004ca09:	call   0x14002ffd0
   14004ca0e:	lea    rcx,[rip+0x24afb]        # 0x140071510
   14004ca15:	lea    rdx,[rbp+0x28]
   14004ca19:	mov    DWORD PTR [rax],0x34d
   14004ca1f:	mov    DWORD PTR [rax+0x4],0x16d
   14004ca26:	mov    QWORD PTR [rax+0x8],rcx
   14004ca2a:	lea    rcx,[rsi+0x10]
   14004ca2e:	mov    DWORD PTR [rbp+0x30],0x16d
   14004ca35:	mov    DWORD PTR [rbp+0x28],0x34d
   14004ca3c:	call   0x14002ff30
   14004ca41:	lea    rdx,[rbp+0x30]
   14004ca45:	lea    rcx,[rsi+0x30]
   14004ca49:	mov    rbx,rax
   14004ca4c:	call   0x14002ffd0
   14004ca51:	mov    QWORD PTR [rbx],rax
   14004ca54:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ca58:	jne    0x14005b3df
   14004ca5e:	lea    rdx,[rbp+0x28]
   14004ca62:	lea    rcx,[rsi+0x30]
   14004ca66:	mov    DWORD PTR [rbp+0x28],0x16f
   14004ca6d:	call   0x14002ffd0
   14004ca72:	lea    rcx,[rip+0x24aaf]        # 0x140071528
   14004ca79:	lea    rdx,[rbp+0x28]
   14004ca7d:	mov    DWORD PTR [rax],0x34e
   14004ca83:	mov    DWORD PTR [rax+0x4],0x16f
   14004ca8a:	mov    QWORD PTR [rax+0x8],rcx
   14004ca8e:	lea    rcx,[rsi+0x10]
   14004ca92:	mov    DWORD PTR [rbp+0x30],0x16f
   14004ca99:	mov    DWORD PTR [rbp+0x28],0x34e
   14004caa0:	call   0x14002ff30
   14004caa5:	lea    rdx,[rbp+0x30]
   14004caa9:	lea    rcx,[rsi+0x30]
   14004caad:	mov    rbx,rax
   14004cab0:	call   0x14002ffd0
   14004cab5:	mov    QWORD PTR [rbx],rax
   14004cab8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cabc:	jne    0x14005b3df
   14004cac2:	lea    rdx,[rbp+0x28]
   14004cac6:	lea    rcx,[rsi+0x30]
   14004caca:	mov    DWORD PTR [rbp+0x28],0x16e
   14004cad1:	call   0x14002ffd0
   14004cad6:	lea    rcx,[rip+0x24a63]        # 0x140071540
   14004cadd:	lea    rdx,[rbp+0x28]
   14004cae1:	mov    DWORD PTR [rax],0x34f
   14004cae7:	mov    DWORD PTR [rax+0x4],0x16e
   14004caee:	mov    QWORD PTR [rax+0x8],rcx
   14004caf2:	lea    rcx,[rsi+0x10]
   14004caf6:	mov    DWORD PTR [rbp+0x30],0x16e
   14004cafd:	mov    DWORD PTR [rbp+0x28],0x34f
   14004cb04:	call   0x14002ff30
   14004cb09:	lea    rdx,[rbp+0x30]
   14004cb0d:	lea    rcx,[rsi+0x30]
   14004cb11:	mov    rbx,rax
   14004cb14:	call   0x14002ffd0
   14004cb19:	mov    QWORD PTR [rbx],rax
   14004cb1c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cb20:	jne    0x14005b3df
   14004cb26:	lea    rdx,[rbp+0x28]
   14004cb2a:	lea    rcx,[rsi+0x30]
   14004cb2e:	mov    DWORD PTR [rbp+0x28],0x170
   14004cb35:	call   0x14002ffd0
   14004cb3a:	lea    rcx,[rip+0x24a17]        # 0x140071558
   14004cb41:	lea    rdx,[rbp+0x28]
   14004cb45:	mov    DWORD PTR [rax],0x350
   14004cb4b:	mov    DWORD PTR [rax+0x4],0x170
   14004cb52:	mov    QWORD PTR [rax+0x8],rcx
   14004cb56:	lea    rcx,[rsi+0x10]
   14004cb5a:	mov    DWORD PTR [rbp+0x30],0x170
   14004cb61:	mov    DWORD PTR [rbp+0x28],0x350
   14004cb68:	call   0x14002ff30
   14004cb6d:	lea    rdx,[rbp+0x30]
   14004cb71:	lea    rcx,[rsi+0x30]
   14004cb75:	mov    rbx,rax
   14004cb78:	call   0x14002ffd0
   14004cb7d:	mov    QWORD PTR [rbx],rax
   14004cb80:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cb84:	jne    0x14005b3df
   14004cb8a:	lea    rdx,[rbp+0x28]
   14004cb8e:	lea    rcx,[rsi+0x30]
   14004cb92:	mov    DWORD PTR [rbp+0x28],0x17b
   14004cb99:	call   0x14002ffd0
   14004cb9e:	lea    rcx,[rip+0x249cb]        # 0x140071570
   14004cba5:	lea    rdx,[rbp+0x28]
   14004cba9:	mov    DWORD PTR [rax],0x351
   14004cbaf:	mov    DWORD PTR [rax+0x4],0x17b
   14004cbb6:	mov    QWORD PTR [rax+0x8],rcx
   14004cbba:	lea    rcx,[rsi+0x10]
   14004cbbe:	mov    DWORD PTR [rbp+0x30],0x17b
   14004cbc5:	mov    DWORD PTR [rbp+0x28],0x351
   14004cbcc:	call   0x14002ff30
   14004cbd1:	lea    rdx,[rbp+0x30]
   14004cbd5:	lea    rcx,[rsi+0x30]
   14004cbd9:	mov    rbx,rax
   14004cbdc:	call   0x14002ffd0
   14004cbe1:	mov    QWORD PTR [rbx],rax
   14004cbe4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cbe8:	jne    0x14005b3df
   14004cbee:	lea    rdx,[rbp+0x28]
   14004cbf2:	lea    rcx,[rsi+0x30]
   14004cbf6:	mov    DWORD PTR [rbp+0x28],0x177
   14004cbfd:	call   0x14002ffd0
   14004cc02:	lea    rcx,[rip+0x2497f]        # 0x140071588
   14004cc09:	lea    rdx,[rbp+0x28]
   14004cc0d:	mov    DWORD PTR [rax],0x352
   14004cc13:	mov    DWORD PTR [rax+0x4],0x177
   14004cc1a:	mov    QWORD PTR [rax+0x8],rcx
   14004cc1e:	lea    rcx,[rsi+0x10]
   14004cc22:	mov    DWORD PTR [rbp+0x30],0x177
   14004cc29:	mov    DWORD PTR [rbp+0x28],0x352
   14004cc30:	call   0x14002ff30
   14004cc35:	lea    rdx,[rbp+0x30]
   14004cc39:	lea    rcx,[rsi+0x30]
   14004cc3d:	mov    rbx,rax
   14004cc40:	call   0x14002ffd0
   14004cc45:	mov    QWORD PTR [rbx],rax
   14004cc48:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cc4c:	jne    0x14005b3df
   14004cc52:	lea    rdx,[rbp+0x28]
   14004cc56:	lea    rcx,[rsi+0x30]
   14004cc5a:	mov    DWORD PTR [rbp+0x28],0x179
   14004cc61:	call   0x14002ffd0
   14004cc66:	lea    rcx,[rip+0x24933]        # 0x1400715a0
   14004cc6d:	lea    rdx,[rbp+0x28]
   14004cc71:	mov    DWORD PTR [rax],0x353
   14004cc77:	mov    DWORD PTR [rax+0x4],0x179
   14004cc7e:	mov    QWORD PTR [rax+0x8],rcx
   14004cc82:	lea    rcx,[rsi+0x10]
   14004cc86:	mov    DWORD PTR [rbp+0x30],0x179
   14004cc8d:	mov    DWORD PTR [rbp+0x28],0x353
   14004cc94:	call   0x14002ff30
   14004cc99:	lea    rdx,[rbp+0x30]
   14004cc9d:	lea    rcx,[rsi+0x30]
   14004cca1:	mov    rbx,rax
   14004cca4:	call   0x14002ffd0
   14004cca9:	mov    QWORD PTR [rbx],rax
   14004ccac:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ccb0:	jne    0x14005b3df
   14004ccb6:	lea    rdx,[rbp+0x28]
   14004ccba:	lea    rcx,[rsi+0x30]
   14004ccbe:	mov    DWORD PTR [rbp+0x28],0x178
   14004ccc5:	call   0x14002ffd0
   14004ccca:	lea    rcx,[rip+0x248e7]        # 0x1400715b8
   14004ccd1:	lea    rdx,[rbp+0x28]
   14004ccd5:	mov    DWORD PTR [rax],0x354
   14004ccdb:	mov    DWORD PTR [rax+0x4],0x178
   14004cce2:	mov    QWORD PTR [rax+0x8],rcx
   14004cce6:	lea    rcx,[rsi+0x10]
   14004ccea:	mov    DWORD PTR [rbp+0x30],0x178
   14004ccf1:	mov    DWORD PTR [rbp+0x28],0x354
   14004ccf8:	call   0x14002ff30
   14004ccfd:	lea    rdx,[rbp+0x30]
   14004cd01:	lea    rcx,[rsi+0x30]
   14004cd05:	mov    rbx,rax
   14004cd08:	call   0x14002ffd0
   14004cd0d:	mov    QWORD PTR [rbx],rax
   14004cd10:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cd14:	jne    0x14005b3df
   14004cd1a:	lea    rdx,[rbp+0x28]
   14004cd1e:	lea    rcx,[rsi+0x30]
   14004cd22:	mov    DWORD PTR [rbp+0x28],0x17a
   14004cd29:	call   0x14002ffd0
   14004cd2e:	lea    rcx,[rip+0x2489b]        # 0x1400715d0
   14004cd35:	lea    rdx,[rbp+0x28]
   14004cd39:	mov    DWORD PTR [rax],0x355
   14004cd3f:	mov    DWORD PTR [rax+0x4],0x17a
   14004cd46:	mov    QWORD PTR [rax+0x8],rcx
   14004cd4a:	lea    rcx,[rsi+0x10]
   14004cd4e:	mov    DWORD PTR [rbp+0x30],0x17a
   14004cd55:	mov    DWORD PTR [rbp+0x28],0x355
   14004cd5c:	call   0x14002ff30
   14004cd61:	lea    rdx,[rbp+0x30]
   14004cd65:	lea    rcx,[rsi+0x30]
   14004cd69:	mov    rbx,rax
   14004cd6c:	call   0x14002ffd0
   14004cd71:	mov    QWORD PTR [rbx],rax
   14004cd74:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cd78:	jne    0x14005b3df
   14004cd7e:	lea    rdx,[rbp+0x28]
   14004cd82:	lea    rcx,[rsi+0x30]
   14004cd86:	mov    DWORD PTR [rbp+0x28],0x185
   14004cd8d:	call   0x14002ffd0
   14004cd92:	lea    rcx,[rip+0x2484f]        # 0x1400715e8
   14004cd99:	lea    rdx,[rbp+0x28]
   14004cd9d:	mov    DWORD PTR [rax],0x356
   14004cda3:	mov    DWORD PTR [rax+0x4],0x185
   14004cdaa:	mov    QWORD PTR [rax+0x8],rcx
   14004cdae:	lea    rcx,[rsi+0x10]
   14004cdb2:	mov    DWORD PTR [rbp+0x30],0x185
   14004cdb9:	mov    DWORD PTR [rbp+0x28],0x356
   14004cdc0:	call   0x14002ff30
   14004cdc5:	lea    rdx,[rbp+0x30]
   14004cdc9:	lea    rcx,[rsi+0x30]
   14004cdcd:	mov    rbx,rax
   14004cdd0:	call   0x14002ffd0
   14004cdd5:	mov    QWORD PTR [rbx],rax
   14004cdd8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cddc:	jne    0x14005b3df
   14004cde2:	lea    rdx,[rbp+0x28]
   14004cde6:	lea    rcx,[rsi+0x30]
   14004cdea:	mov    DWORD PTR [rbp+0x28],0x181
   14004cdf1:	call   0x14002ffd0
   14004cdf6:	lea    rcx,[rip+0x24803]        # 0x140071600
   14004cdfd:	lea    rdx,[rbp+0x28]
   14004ce01:	mov    DWORD PTR [rax],0x357
   14004ce07:	mov    DWORD PTR [rax+0x4],0x181
   14004ce0e:	mov    QWORD PTR [rax+0x8],rcx
   14004ce12:	lea    rcx,[rsi+0x10]
   14004ce16:	mov    DWORD PTR [rbp+0x30],0x181
   14004ce1d:	mov    DWORD PTR [rbp+0x28],0x357
   14004ce24:	call   0x14002ff30
   14004ce29:	lea    rdx,[rbp+0x30]
   14004ce2d:	lea    rcx,[rsi+0x30]
   14004ce31:	mov    rbx,rax
   14004ce34:	call   0x14002ffd0
   14004ce39:	mov    QWORD PTR [rbx],rax
   14004ce3c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ce40:	jne    0x14005b3df
   14004ce46:	lea    rdx,[rbp+0x28]
   14004ce4a:	lea    rcx,[rsi+0x30]
   14004ce4e:	mov    DWORD PTR [rbp+0x28],0x183
   14004ce55:	call   0x14002ffd0
   14004ce5a:	lea    rcx,[rip+0x247b7]        # 0x140071618
   14004ce61:	lea    rdx,[rbp+0x28]
   14004ce65:	mov    DWORD PTR [rax],0x358
   14004ce6b:	mov    DWORD PTR [rax+0x4],0x183
   14004ce72:	mov    QWORD PTR [rax+0x8],rcx
   14004ce76:	lea    rcx,[rsi+0x10]
   14004ce7a:	mov    DWORD PTR [rbp+0x30],0x183
   14004ce81:	mov    DWORD PTR [rbp+0x28],0x358
   14004ce88:	call   0x14002ff30
   14004ce8d:	lea    rdx,[rbp+0x30]
   14004ce91:	lea    rcx,[rsi+0x30]
   14004ce95:	mov    rbx,rax
   14004ce98:	call   0x14002ffd0
   14004ce9d:	mov    QWORD PTR [rbx],rax
   14004cea0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cea4:	jne    0x14005b3df
   14004ceaa:	lea    rdx,[rbp+0x28]
   14004ceae:	lea    rcx,[rsi+0x30]
   14004ceb2:	mov    DWORD PTR [rbp+0x28],0x182
   14004ceb9:	call   0x14002ffd0
   14004cebe:	lea    rcx,[rip+0x2476b]        # 0x140071630
   14004cec5:	lea    rdx,[rbp+0x28]
   14004cec9:	mov    DWORD PTR [rax],0x359
   14004cecf:	mov    DWORD PTR [rax+0x4],0x182
   14004ced6:	mov    QWORD PTR [rax+0x8],rcx
   14004ceda:	lea    rcx,[rsi+0x10]
   14004cede:	mov    DWORD PTR [rbp+0x30],0x182
   14004cee5:	mov    DWORD PTR [rbp+0x28],0x359
   14004ceec:	call   0x14002ff30
   14004cef1:	lea    rdx,[rbp+0x30]
   14004cef5:	lea    rcx,[rsi+0x30]
   14004cef9:	mov    rbx,rax
   14004cefc:	call   0x14002ffd0
   14004cf01:	mov    QWORD PTR [rbx],rax
   14004cf04:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cf08:	jne    0x14005b3df
   14004cf0e:	lea    rdx,[rbp+0x28]
   14004cf12:	lea    rcx,[rsi+0x30]
   14004cf16:	mov    DWORD PTR [rbp+0x28],0x184
   14004cf1d:	call   0x14002ffd0
   14004cf22:	lea    rcx,[rip+0x2471f]        # 0x140071648
   14004cf29:	lea    rdx,[rbp+0x28]
   14004cf2d:	mov    DWORD PTR [rax],0x35a
   14004cf33:	mov    DWORD PTR [rax+0x4],0x184
   14004cf3a:	mov    QWORD PTR [rax+0x8],rcx
   14004cf3e:	lea    rcx,[rsi+0x10]
   14004cf42:	mov    DWORD PTR [rbp+0x30],0x184
   14004cf49:	mov    DWORD PTR [rbp+0x28],0x35a
   14004cf50:	call   0x14002ff30
   14004cf55:	lea    rdx,[rbp+0x30]
   14004cf59:	lea    rcx,[rsi+0x30]
   14004cf5d:	mov    rbx,rax
   14004cf60:	call   0x14002ffd0
   14004cf65:	mov    QWORD PTR [rbx],rax
   14004cf68:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cf6c:	jne    0x14005b3df
   14004cf72:	lea    rdx,[rbp+0x28]
   14004cf76:	lea    rcx,[rsi+0x30]
   14004cf7a:	mov    DWORD PTR [rbp+0x28],0x18f
   14004cf81:	call   0x14002ffd0
   14004cf86:	lea    rcx,[rip+0x246d3]        # 0x140071660
   14004cf8d:	lea    rdx,[rbp+0x28]
   14004cf91:	mov    DWORD PTR [rax],0x35b
   14004cf97:	mov    DWORD PTR [rax+0x4],0x18f
   14004cf9e:	mov    QWORD PTR [rax+0x8],rcx
   14004cfa2:	lea    rcx,[rsi+0x10]
   14004cfa6:	mov    DWORD PTR [rbp+0x30],0x18f
   14004cfad:	mov    DWORD PTR [rbp+0x28],0x35b
   14004cfb4:	call   0x14002ff30
   14004cfb9:	lea    rdx,[rbp+0x30]
   14004cfbd:	lea    rcx,[rsi+0x30]
   14004cfc1:	mov    rbx,rax
   14004cfc4:	call   0x14002ffd0
   14004cfc9:	mov    QWORD PTR [rbx],rax
   14004cfcc:	cmp    DWORD PTR [rsi+0x8],r12d
   14004cfd0:	jne    0x14005b3df
   14004cfd6:	lea    rdx,[rbp+0x28]
   14004cfda:	lea    rcx,[rsi+0x30]
   14004cfde:	mov    DWORD PTR [rbp+0x28],0x18b
   14004cfe5:	call   0x14002ffd0
   14004cfea:	lea    rcx,[rip+0x24687]        # 0x140071678
   14004cff1:	lea    rdx,[rbp+0x28]
   14004cff5:	mov    DWORD PTR [rax],0x35c
   14004cffb:	mov    DWORD PTR [rax+0x4],0x18b
   14004d002:	mov    QWORD PTR [rax+0x8],rcx
   14004d006:	lea    rcx,[rsi+0x10]
   14004d00a:	mov    DWORD PTR [rbp+0x30],0x18b
   14004d011:	mov    DWORD PTR [rbp+0x28],0x35c
   14004d018:	call   0x14002ff30
   14004d01d:	lea    rdx,[rbp+0x30]
   14004d021:	lea    rcx,[rsi+0x30]
   14004d025:	mov    rbx,rax
   14004d028:	call   0x14002ffd0
   14004d02d:	mov    QWORD PTR [rbx],rax
   14004d030:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d034:	jne    0x14005b3df
   14004d03a:	lea    rdx,[rbp+0x28]
   14004d03e:	lea    rcx,[rsi+0x30]
   14004d042:	mov    DWORD PTR [rbp+0x28],0x18d
   14004d049:	call   0x14002ffd0
   14004d04e:	lea    rcx,[rip+0x2463b]        # 0x140071690
   14004d055:	lea    rdx,[rbp+0x28]
   14004d059:	mov    DWORD PTR [rax],0x35d
   14004d05f:	mov    DWORD PTR [rax+0x4],0x18d
   14004d066:	mov    QWORD PTR [rax+0x8],rcx
   14004d06a:	lea    rcx,[rsi+0x10]
   14004d06e:	mov    DWORD PTR [rbp+0x30],0x18d
   14004d075:	mov    DWORD PTR [rbp+0x28],0x35d
   14004d07c:	call   0x14002ff30
   14004d081:	lea    rdx,[rbp+0x30]
   14004d085:	lea    rcx,[rsi+0x30]
   14004d089:	mov    rbx,rax
   14004d08c:	call   0x14002ffd0
   14004d091:	mov    QWORD PTR [rbx],rax
   14004d094:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d098:	jne    0x14005b3df
   14004d09e:	lea    rdx,[rbp+0x28]
   14004d0a2:	lea    rcx,[rsi+0x30]
   14004d0a6:	mov    DWORD PTR [rbp+0x28],0x18c
   14004d0ad:	call   0x14002ffd0
   14004d0b2:	lea    rcx,[rip+0x245ef]        # 0x1400716a8
   14004d0b9:	lea    rdx,[rbp+0x28]
   14004d0bd:	mov    DWORD PTR [rax],0x35e
   14004d0c3:	mov    DWORD PTR [rax+0x4],0x18c
   14004d0ca:	mov    QWORD PTR [rax+0x8],rcx
   14004d0ce:	lea    rcx,[rsi+0x10]
   14004d0d2:	mov    DWORD PTR [rbp+0x30],0x18c
   14004d0d9:	mov    DWORD PTR [rbp+0x28],0x35e
   14004d0e0:	call   0x14002ff30
   14004d0e5:	lea    rdx,[rbp+0x30]
   14004d0e9:	lea    rcx,[rsi+0x30]
   14004d0ed:	mov    rbx,rax
   14004d0f0:	call   0x14002ffd0
   14004d0f5:	mov    QWORD PTR [rbx],rax
   14004d0f8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d0fc:	jne    0x14005b3df
   14004d102:	lea    rdx,[rbp+0x28]
   14004d106:	lea    rcx,[rsi+0x30]
   14004d10a:	mov    DWORD PTR [rbp+0x28],0x18e
   14004d111:	call   0x14002ffd0
   14004d116:	lea    rcx,[rip+0x245a3]        # 0x1400716c0
   14004d11d:	lea    rdx,[rbp+0x28]
   14004d121:	mov    DWORD PTR [rax],0x35f
   14004d127:	mov    DWORD PTR [rax+0x4],0x18e
   14004d12e:	mov    QWORD PTR [rax+0x8],rcx
   14004d132:	lea    rcx,[rsi+0x10]
   14004d136:	mov    DWORD PTR [rbp+0x30],0x18e
   14004d13d:	mov    DWORD PTR [rbp+0x28],0x35f
   14004d144:	call   0x14002ff30
   14004d149:	lea    rdx,[rbp+0x30]
   14004d14d:	lea    rcx,[rsi+0x30]
   14004d151:	mov    rbx,rax
   14004d154:	call   0x14002ffd0
   14004d159:	mov    QWORD PTR [rbx],rax
   14004d15c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d160:	jne    0x14005b3df
   14004d166:	lea    rdx,[rbp+0x28]
   14004d16a:	lea    rcx,[rsi+0x30]
   14004d16e:	mov    DWORD PTR [rbp+0x28],0x199
   14004d175:	call   0x14002ffd0
   14004d17a:	lea    rcx,[rip+0x24557]        # 0x1400716d8
   14004d181:	lea    rdx,[rbp+0x28]
   14004d185:	mov    DWORD PTR [rax],0x360
   14004d18b:	mov    DWORD PTR [rax+0x4],0x199
   14004d192:	mov    QWORD PTR [rax+0x8],rcx
   14004d196:	lea    rcx,[rsi+0x10]
   14004d19a:	mov    DWORD PTR [rbp+0x30],0x199
   14004d1a1:	mov    DWORD PTR [rbp+0x28],0x360
   14004d1a8:	call   0x14002ff30
   14004d1ad:	lea    rdx,[rbp+0x30]
   14004d1b1:	lea    rcx,[rsi+0x30]
   14004d1b5:	mov    rbx,rax
   14004d1b8:	call   0x14002ffd0
   14004d1bd:	mov    QWORD PTR [rbx],rax
   14004d1c0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d1c4:	jne    0x14005b3df
   14004d1ca:	lea    rdx,[rbp+0x28]
   14004d1ce:	lea    rcx,[rsi+0x30]
   14004d1d2:	mov    DWORD PTR [rbp+0x28],0x195
   14004d1d9:	call   0x14002ffd0
   14004d1de:	lea    rcx,[rip+0x2450b]        # 0x1400716f0
   14004d1e5:	lea    rdx,[rbp+0x28]
   14004d1e9:	mov    DWORD PTR [rax],0x361
   14004d1ef:	mov    DWORD PTR [rax+0x4],0x195
   14004d1f6:	mov    QWORD PTR [rax+0x8],rcx
   14004d1fa:	lea    rcx,[rsi+0x10]
   14004d1fe:	mov    DWORD PTR [rbp+0x30],0x195
   14004d205:	mov    DWORD PTR [rbp+0x28],0x361
   14004d20c:	call   0x14002ff30
   14004d211:	lea    rdx,[rbp+0x30]
   14004d215:	lea    rcx,[rsi+0x30]
   14004d219:	mov    rbx,rax
   14004d21c:	call   0x14002ffd0
   14004d221:	mov    QWORD PTR [rbx],rax
   14004d224:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d228:	jne    0x14005b3df
   14004d22e:	lea    rdx,[rbp+0x28]
   14004d232:	lea    rcx,[rsi+0x30]
   14004d236:	mov    DWORD PTR [rbp+0x28],0x197
   14004d23d:	call   0x14002ffd0
   14004d242:	lea    rcx,[rip+0x244bf]        # 0x140071708
   14004d249:	lea    rdx,[rbp+0x28]
   14004d24d:	mov    DWORD PTR [rax],0x362
   14004d253:	mov    DWORD PTR [rax+0x4],0x197
   14004d25a:	mov    QWORD PTR [rax+0x8],rcx
   14004d25e:	lea    rcx,[rsi+0x10]
   14004d262:	mov    DWORD PTR [rbp+0x30],0x197
   14004d269:	mov    DWORD PTR [rbp+0x28],0x362
   14004d270:	call   0x14002ff30
   14004d275:	lea    rdx,[rbp+0x30]
   14004d279:	lea    rcx,[rsi+0x30]
   14004d27d:	mov    rbx,rax
   14004d280:	call   0x14002ffd0
   14004d285:	mov    QWORD PTR [rbx],rax
   14004d288:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d28c:	jne    0x14005b3df
   14004d292:	lea    rdx,[rbp+0x28]
   14004d296:	lea    rcx,[rsi+0x30]
   14004d29a:	mov    DWORD PTR [rbp+0x28],0x196
   14004d2a1:	call   0x14002ffd0
   14004d2a6:	lea    rcx,[rip+0x24473]        # 0x140071720
   14004d2ad:	lea    rdx,[rbp+0x28]
   14004d2b1:	mov    DWORD PTR [rax],0x363
   14004d2b7:	mov    DWORD PTR [rax+0x4],0x196
   14004d2be:	mov    QWORD PTR [rax+0x8],rcx
   14004d2c2:	lea    rcx,[rsi+0x10]
   14004d2c6:	mov    DWORD PTR [rbp+0x30],0x196
   14004d2cd:	mov    DWORD PTR [rbp+0x28],0x363
   14004d2d4:	call   0x14002ff30
   14004d2d9:	lea    rdx,[rbp+0x30]
   14004d2dd:	lea    rcx,[rsi+0x30]
   14004d2e1:	mov    rbx,rax
   14004d2e4:	call   0x14002ffd0
   14004d2e9:	mov    QWORD PTR [rbx],rax
   14004d2ec:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d2f0:	jne    0x14005b3df
   14004d2f6:	lea    rdx,[rbp+0x28]
   14004d2fa:	lea    rcx,[rsi+0x30]
   14004d2fe:	mov    DWORD PTR [rbp+0x28],0x198
   14004d305:	call   0x14002ffd0
   14004d30a:	lea    rcx,[rip+0x24427]        # 0x140071738
   14004d311:	lea    rdx,[rbp+0x28]
   14004d315:	mov    DWORD PTR [rax],0x364
   14004d31b:	mov    DWORD PTR [rax+0x4],0x198
   14004d322:	mov    QWORD PTR [rax+0x8],rcx
   14004d326:	lea    rcx,[rsi+0x10]
   14004d32a:	mov    DWORD PTR [rbp+0x30],0x198
   14004d331:	mov    DWORD PTR [rbp+0x28],0x364
   14004d338:	call   0x14002ff30
   14004d33d:	lea    rdx,[rbp+0x30]
   14004d341:	lea    rcx,[rsi+0x30]
   14004d345:	mov    rbx,rax
   14004d348:	call   0x14002ffd0
   14004d34d:	mov    QWORD PTR [rbx],rax
   14004d350:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d354:	jne    0x14005b3df
   14004d35a:	lea    rdx,[rbp+0x28]
   14004d35e:	lea    rcx,[rsi+0x30]
   14004d362:	mov    DWORD PTR [rbp+0x28],0x1a3
   14004d369:	call   0x14002ffd0
   14004d36e:	lea    rcx,[rip+0x243db]        # 0x140071750
   14004d375:	lea    rdx,[rbp+0x28]
   14004d379:	mov    DWORD PTR [rax],0x365
   14004d37f:	mov    DWORD PTR [rax+0x4],0x1a3
   14004d386:	mov    QWORD PTR [rax+0x8],rcx
   14004d38a:	lea    rcx,[rsi+0x10]
   14004d38e:	mov    DWORD PTR [rbp+0x30],0x1a3
   14004d395:	mov    DWORD PTR [rbp+0x28],0x365
   14004d39c:	call   0x14002ff30
   14004d3a1:	lea    rdx,[rbp+0x30]
   14004d3a5:	lea    rcx,[rsi+0x30]
   14004d3a9:	mov    rbx,rax
   14004d3ac:	call   0x14002ffd0
   14004d3b1:	mov    QWORD PTR [rbx],rax
   14004d3b4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d3b8:	jne    0x14005b3df
   14004d3be:	lea    rdx,[rbp+0x28]
   14004d3c2:	lea    rcx,[rsi+0x30]
   14004d3c6:	mov    DWORD PTR [rbp+0x28],0x19f
   14004d3cd:	call   0x14002ffd0
   14004d3d2:	lea    rcx,[rip+0x2438f]        # 0x140071768
   14004d3d9:	lea    rdx,[rbp+0x28]
   14004d3dd:	mov    DWORD PTR [rax],0x366
   14004d3e3:	mov    DWORD PTR [rax+0x4],0x19f
   14004d3ea:	mov    QWORD PTR [rax+0x8],rcx
   14004d3ee:	lea    rcx,[rsi+0x10]
   14004d3f2:	mov    DWORD PTR [rbp+0x30],0x19f
   14004d3f9:	mov    DWORD PTR [rbp+0x28],0x366
   14004d400:	call   0x14002ff30
   14004d405:	lea    rdx,[rbp+0x30]
   14004d409:	lea    rcx,[rsi+0x30]
   14004d40d:	mov    rbx,rax
   14004d410:	call   0x14002ffd0
   14004d415:	mov    QWORD PTR [rbx],rax
   14004d418:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d41c:	jne    0x14005b3df
   14004d422:	lea    rdx,[rbp+0x28]
   14004d426:	lea    rcx,[rsi+0x30]
   14004d42a:	mov    DWORD PTR [rbp+0x28],0x1a1
   14004d431:	call   0x14002ffd0
   14004d436:	lea    rcx,[rip+0x24343]        # 0x140071780
   14004d43d:	lea    rdx,[rbp+0x28]
   14004d441:	mov    DWORD PTR [rax],0x367
   14004d447:	mov    DWORD PTR [rax+0x4],0x1a1
   14004d44e:	mov    QWORD PTR [rax+0x8],rcx
   14004d452:	lea    rcx,[rsi+0x10]
   14004d456:	mov    DWORD PTR [rbp+0x30],0x1a1
   14004d45d:	mov    DWORD PTR [rbp+0x28],0x367
   14004d464:	call   0x14002ff30
   14004d469:	lea    rdx,[rbp+0x30]
   14004d46d:	lea    rcx,[rsi+0x30]
   14004d471:	mov    rbx,rax
   14004d474:	call   0x14002ffd0
   14004d479:	mov    QWORD PTR [rbx],rax
   14004d47c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d480:	jne    0x14005b3df
   14004d486:	lea    rdx,[rbp+0x28]
   14004d48a:	lea    rcx,[rsi+0x30]
   14004d48e:	mov    DWORD PTR [rbp+0x28],0x1a0
   14004d495:	call   0x14002ffd0
   14004d49a:	lea    rcx,[rip+0x242f7]        # 0x140071798
   14004d4a1:	lea    rdx,[rbp+0x28]
   14004d4a5:	mov    DWORD PTR [rax],0x368
   14004d4ab:	mov    DWORD PTR [rax+0x4],0x1a0
   14004d4b2:	mov    QWORD PTR [rax+0x8],rcx
   14004d4b6:	lea    rcx,[rsi+0x10]
   14004d4ba:	mov    DWORD PTR [rbp+0x30],0x1a0
   14004d4c1:	mov    DWORD PTR [rbp+0x28],0x368
   14004d4c8:	call   0x14002ff30
   14004d4cd:	lea    rdx,[rbp+0x30]
   14004d4d1:	lea    rcx,[rsi+0x30]
   14004d4d5:	mov    rbx,rax
   14004d4d8:	call   0x14002ffd0
   14004d4dd:	mov    QWORD PTR [rbx],rax
   14004d4e0:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d4e4:	jne    0x14005b3df
   14004d4ea:	lea    rdx,[rbp+0x28]
   14004d4ee:	lea    rcx,[rsi+0x30]
   14004d4f2:	mov    DWORD PTR [rbp+0x28],0x1a2
   14004d4f9:	call   0x14002ffd0
   14004d4fe:	lea    rcx,[rip+0x242ab]        # 0x1400717b0
   14004d505:	lea    rdx,[rbp+0x28]
   14004d509:	mov    DWORD PTR [rax],0x369
   14004d50f:	mov    DWORD PTR [rax+0x4],0x1a2
   14004d516:	mov    QWORD PTR [rax+0x8],rcx
   14004d51a:	lea    rcx,[rsi+0x10]
   14004d51e:	mov    DWORD PTR [rbp+0x30],0x1a2
   14004d525:	mov    DWORD PTR [rbp+0x28],0x369
   14004d52c:	call   0x14002ff30
   14004d531:	lea    rdx,[rbp+0x30]
   14004d535:	lea    rcx,[rsi+0x30]
   14004d539:	mov    rbx,rax
   14004d53c:	call   0x14002ffd0
   14004d541:	mov    QWORD PTR [rbx],rax
   14004d544:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d548:	jne    0x14005b3df
   14004d54e:	lea    rdx,[rbp+0x28]
   14004d552:	lea    rcx,[rsi+0x30]
   14004d556:	mov    DWORD PTR [rbp+0x28],0x1ad
   14004d55d:	call   0x14002ffd0
   14004d562:	lea    rcx,[rip+0x2425f]        # 0x1400717c8
   14004d569:	lea    rdx,[rbp+0x28]
   14004d56d:	mov    DWORD PTR [rax],0x36a
   14004d573:	mov    DWORD PTR [rax+0x4],0x1ad
   14004d57a:	mov    QWORD PTR [rax+0x8],rcx
   14004d57e:	lea    rcx,[rsi+0x10]
   14004d582:	mov    DWORD PTR [rbp+0x30],0x1ad
   14004d589:	mov    DWORD PTR [rbp+0x28],0x36a
   14004d590:	call   0x14002ff30
   14004d595:	lea    rdx,[rbp+0x30]
   14004d599:	lea    rcx,[rsi+0x30]
   14004d59d:	mov    rbx,rax
   14004d5a0:	call   0x14002ffd0
   14004d5a5:	mov    QWORD PTR [rbx],rax
   14004d5a8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d5ac:	jne    0x14005b3df
   14004d5b2:	lea    rdx,[rbp+0x28]
   14004d5b6:	lea    rcx,[rsi+0x30]
   14004d5ba:	mov    DWORD PTR [rbp+0x28],0x1a9
   14004d5c1:	call   0x14002ffd0
   14004d5c6:	lea    rcx,[rip+0x24213]        # 0x1400717e0
   14004d5cd:	lea    rdx,[rbp+0x28]
   14004d5d1:	mov    DWORD PTR [rax],0x36b
   14004d5d7:	mov    DWORD PTR [rax+0x4],0x1a9
   14004d5de:	mov    QWORD PTR [rax+0x8],rcx
   14004d5e2:	lea    rcx,[rsi+0x10]
   14004d5e6:	mov    DWORD PTR [rbp+0x30],0x1a9
   14004d5ed:	mov    DWORD PTR [rbp+0x28],0x36b
   14004d5f4:	call   0x14002ff30
   14004d5f9:	lea    rdx,[rbp+0x30]
   14004d5fd:	lea    rcx,[rsi+0x30]
   14004d601:	mov    rbx,rax
   14004d604:	call   0x14002ffd0
   14004d609:	mov    QWORD PTR [rbx],rax
   14004d60c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d610:	jne    0x14005b3df
   14004d616:	lea    rdx,[rbp+0x28]
   14004d61a:	lea    rcx,[rsi+0x30]
   14004d61e:	mov    DWORD PTR [rbp+0x28],0x1ab
   14004d625:	call   0x14002ffd0
   14004d62a:	lea    rcx,[rip+0x241c7]        # 0x1400717f8
   14004d631:	lea    rdx,[rbp+0x28]
   14004d635:	mov    DWORD PTR [rax],0x36c
   14004d63b:	mov    DWORD PTR [rax+0x4],0x1ab
   14004d642:	mov    QWORD PTR [rax+0x8],rcx
   14004d646:	lea    rcx,[rsi+0x10]
   14004d64a:	mov    DWORD PTR [rbp+0x30],0x1ab
   14004d651:	mov    DWORD PTR [rbp+0x28],0x36c
   14004d658:	call   0x14002ff30
   14004d65d:	lea    rdx,[rbp+0x30]
   14004d661:	lea    rcx,[rsi+0x30]
   14004d665:	mov    rbx,rax
   14004d668:	call   0x14002ffd0
   14004d66d:	mov    QWORD PTR [rbx],rax
   14004d670:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d674:	jne    0x14005b3df
   14004d67a:	lea    rdx,[rbp+0x28]
   14004d67e:	lea    rcx,[rsi+0x30]
   14004d682:	mov    DWORD PTR [rbp+0x28],0x1aa
   14004d689:	call   0x14002ffd0
   14004d68e:	lea    rcx,[rip+0x2417b]        # 0x140071810
   14004d695:	lea    rdx,[rbp+0x28]
   14004d699:	mov    DWORD PTR [rax],0x36d
   14004d69f:	mov    DWORD PTR [rax+0x4],0x1aa
   14004d6a6:	mov    QWORD PTR [rax+0x8],rcx
   14004d6aa:	lea    rcx,[rsi+0x10]
   14004d6ae:	mov    DWORD PTR [rbp+0x30],0x1aa
   14004d6b5:	mov    DWORD PTR [rbp+0x28],0x36d
   14004d6bc:	call   0x14002ff30
   14004d6c1:	lea    rdx,[rbp+0x30]
   14004d6c5:	lea    rcx,[rsi+0x30]
   14004d6c9:	mov    rbx,rax
   14004d6cc:	call   0x14002ffd0
   14004d6d1:	mov    QWORD PTR [rbx],rax
   14004d6d4:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d6d8:	jne    0x14005b3df
   14004d6de:	lea    rdx,[rbp+0x28]
   14004d6e2:	lea    rcx,[rsi+0x30]
   14004d6e6:	mov    DWORD PTR [rbp+0x28],0x1ac
   14004d6ed:	call   0x14002ffd0
   14004d6f2:	lea    rcx,[rip+0x2412f]        # 0x140071828
   14004d6f9:	lea    rdx,[rbp+0x28]
   14004d6fd:	mov    DWORD PTR [rax],0x36e
   14004d703:	mov    DWORD PTR [rax+0x4],0x1ac
   14004d70a:	mov    QWORD PTR [rax+0x8],rcx
   14004d70e:	lea    rcx,[rsi+0x10]
   14004d712:	mov    DWORD PTR [rbp+0x30],0x1ac
   14004d719:	mov    DWORD PTR [rbp+0x28],0x36e
   14004d720:	call   0x14002ff30
   14004d725:	lea    rdx,[rbp+0x30]
   14004d729:	lea    rcx,[rsi+0x30]
   14004d72d:	mov    rbx,rax
   14004d730:	call   0x14002ffd0
   14004d735:	mov    QWORD PTR [rbx],rax
   14004d738:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d73c:	jne    0x14005b3df
   14004d742:	lea    rdx,[rbp+0x28]
   14004d746:	lea    rcx,[rsi+0x30]
   14004d74a:	mov    DWORD PTR [rbp+0x28],0x1b7
   14004d751:	call   0x14002ffd0
   14004d756:	lea    rcx,[rip+0x240e3]        # 0x140071840
   14004d75d:	lea    rdx,[rbp+0x28]
   14004d761:	mov    DWORD PTR [rax],0x36f
   14004d767:	mov    DWORD PTR [rax+0x4],0x1b7
   14004d76e:	mov    QWORD PTR [rax+0x8],rcx
   14004d772:	lea    rcx,[rsi+0x10]
   14004d776:	mov    DWORD PTR [rbp+0x30],0x1b7
   14004d77d:	mov    DWORD PTR [rbp+0x28],0x36f
   14004d784:	call   0x14002ff30
   14004d789:	lea    rdx,[rbp+0x30]
   14004d78d:	lea    rcx,[rsi+0x30]
   14004d791:	mov    rbx,rax
   14004d794:	call   0x14002ffd0
   14004d799:	mov    QWORD PTR [rbx],rax
   14004d79c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d7a0:	jne    0x14005b3df
   14004d7a6:	lea    rdx,[rbp+0x28]
   14004d7aa:	lea    rcx,[rsi+0x30]
   14004d7ae:	mov    DWORD PTR [rbp+0x28],0x1b3
   14004d7b5:	call   0x14002ffd0
   14004d7ba:	lea    rcx,[rip+0x24097]        # 0x140071858
   14004d7c1:	lea    rdx,[rbp+0x28]
   14004d7c5:	mov    DWORD PTR [rax],0x370
   14004d7cb:	mov    DWORD PTR [rax+0x4],0x1b3
   14004d7d2:	mov    QWORD PTR [rax+0x8],rcx
   14004d7d6:	lea    rcx,[rsi+0x10]
   14004d7da:	mov    DWORD PTR [rbp+0x30],0x1b3
   14004d7e1:	mov    DWORD PTR [rbp+0x28],0x370
   14004d7e8:	call   0x14002ff30
   14004d7ed:	lea    rdx,[rbp+0x30]
   14004d7f1:	lea    rcx,[rsi+0x30]
   14004d7f5:	mov    rbx,rax
   14004d7f8:	call   0x14002ffd0
   14004d7fd:	mov    QWORD PTR [rbx],rax
   14004d800:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d804:	jne    0x14005b3df
   14004d80a:	lea    rdx,[rbp+0x28]
   14004d80e:	lea    rcx,[rsi+0x30]
   14004d812:	mov    DWORD PTR [rbp+0x28],0x1b5
   14004d819:	call   0x14002ffd0
   14004d81e:	lea    rcx,[rip+0x2404b]        # 0x140071870
   14004d825:	lea    rdx,[rbp+0x28]
   14004d829:	mov    DWORD PTR [rax],0x371
   14004d82f:	mov    DWORD PTR [rax+0x4],0x1b5
   14004d836:	mov    QWORD PTR [rax+0x8],rcx
   14004d83a:	lea    rcx,[rsi+0x10]
   14004d83e:	mov    DWORD PTR [rbp+0x30],0x1b5
   14004d845:	mov    DWORD PTR [rbp+0x28],0x371
   14004d84c:	call   0x14002ff30
   14004d851:	lea    rdx,[rbp+0x30]
   14004d855:	lea    rcx,[rsi+0x30]
   14004d859:	mov    rbx,rax
   14004d85c:	call   0x14002ffd0
   14004d861:	mov    QWORD PTR [rbx],rax
   14004d864:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d868:	jne    0x14005b3df
   14004d86e:	lea    rdx,[rbp+0x28]
   14004d872:	lea    rcx,[rsi+0x30]
   14004d876:	mov    DWORD PTR [rbp+0x28],0x1b4
   14004d87d:	call   0x14002ffd0
   14004d882:	lea    rcx,[rip+0x23fff]        # 0x140071888
   14004d889:	lea    rdx,[rbp+0x28]
   14004d88d:	mov    DWORD PTR [rax],0x372
   14004d893:	mov    DWORD PTR [rax+0x4],0x1b4
   14004d89a:	mov    QWORD PTR [rax+0x8],rcx
   14004d89e:	lea    rcx,[rsi+0x10]
   14004d8a2:	mov    DWORD PTR [rbp+0x30],0x1b4
   14004d8a9:	mov    DWORD PTR [rbp+0x28],0x372
   14004d8b0:	call   0x14002ff30
   14004d8b5:	lea    rdx,[rbp+0x30]
   14004d8b9:	lea    rcx,[rsi+0x30]
   14004d8bd:	mov    rbx,rax
   14004d8c0:	call   0x14002ffd0
   14004d8c5:	mov    QWORD PTR [rbx],rax
   14004d8c8:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d8cc:	jne    0x14005b3df
   14004d8d2:	lea    rdx,[rbp+0x28]
   14004d8d6:	lea    rcx,[rsi+0x30]
   14004d8da:	mov    DWORD PTR [rbp+0x28],0x1b6
   14004d8e1:	call   0x14002ffd0
   14004d8e6:	lea    rcx,[rip+0x23fb3]        # 0x1400718a0
   14004d8ed:	lea    rdx,[rbp+0x28]
   14004d8f1:	mov    DWORD PTR [rax],0x373
   14004d8f7:	mov    DWORD PTR [rax+0x4],0x1b6
   14004d8fe:	mov    QWORD PTR [rax+0x8],rcx
   14004d902:	lea    rcx,[rsi+0x10]
   14004d906:	mov    DWORD PTR [rbp+0x30],0x1b6
   14004d90d:	mov    DWORD PTR [rbp+0x28],0x373
   14004d914:	call   0x14002ff30
   14004d919:	lea    rdx,[rbp+0x30]
   14004d91d:	lea    rcx,[rsi+0x30]
   14004d921:	mov    rbx,rax
   14004d924:	call   0x14002ffd0
   14004d929:	mov    QWORD PTR [rbx],rax
   14004d92c:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d930:	jne    0x14005b3df
   14004d936:	lea    rdx,[rbp+0x28]
   14004d93a:	lea    rcx,[rsi+0x30]
   14004d93e:	mov    DWORD PTR [rbp+0x28],r12d
   14004d942:	call   0x14002ffd0
   14004d947:	lea    rcx,[rip+0x23f6a]        # 0x1400718b8
   14004d94e:	lea    rdx,[rbp+0x28]
   14004d952:	mov    DWORD PTR [rax],0x47
   14004d958:	mov    DWORD PTR [rax+0x4],r12d
   14004d95c:	mov    QWORD PTR [rax+0x8],rcx
   14004d960:	lea    rcx,[rsi+0x10]
   14004d964:	mov    DWORD PTR [rbp+0x30],r12d
   14004d968:	mov    DWORD PTR [rbp+0x28],0x47
   14004d96f:	call   0x14002ff30
   14004d974:	lea    rdx,[rbp+0x30]
   14004d978:	lea    rcx,[rsi+0x30]
   14004d97c:	mov    rbx,rax
   14004d97f:	call   0x14002ffd0
   14004d984:	mov    QWORD PTR [rbx],rax
   14004d987:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d98b:	jne    0x14005b3df
   14004d991:	lea    rdx,[rbp+0x28]
   14004d995:	lea    rcx,[rsi+0x30]
   14004d999:	mov    DWORD PTR [rbp+0x28],0x2
   14004d9a0:	call   0x14002ffd0
   14004d9a5:	lea    rcx,[rip+0x23f24]        # 0x1400718d0
   14004d9ac:	lea    rdx,[rbp+0x28]
   14004d9b0:	mov    DWORD PTR [rax],0x49
   14004d9b6:	mov    DWORD PTR [rax+0x4],0x2
   14004d9bd:	mov    QWORD PTR [rax+0x8],rcx
   14004d9c1:	lea    rcx,[rsi+0x10]
   14004d9c5:	mov    DWORD PTR [rbp+0x30],0x2
   14004d9cc:	mov    DWORD PTR [rbp+0x28],0x49
   14004d9d3:	call   0x14002ff30
   14004d9d8:	lea    rdx,[rbp+0x30]
   14004d9dc:	lea    rcx,[rsi+0x30]
   14004d9e0:	mov    rbx,rax
   14004d9e3:	call   0x14002ffd0
   14004d9e8:	mov    QWORD PTR [rbx],rax
   14004d9eb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004d9ef:	jne    0x14005b3df
   14004d9f5:	lea    rdx,[rbp+0x28]
   14004d9f9:	lea    rcx,[rsi+0x30]
   14004d9fd:	mov    DWORD PTR [rbp+0x28],0x1
   14004da04:	call   0x14002ffd0
   14004da09:	lea    rcx,[rip+0x23ed0]        # 0x1400718e0
   14004da10:	lea    rdx,[rbp+0x28]
   14004da14:	mov    DWORD PTR [rax],0x4a
   14004da1a:	mov    DWORD PTR [rax+0x4],0x1
   14004da21:	mov    QWORD PTR [rax+0x8],rcx
   14004da25:	lea    rcx,[rsi+0x10]
   14004da29:	mov    DWORD PTR [rbp+0x30],0x1
   14004da30:	mov    DWORD PTR [rbp+0x28],0x4a
   14004da37:	call   0x14002ff30
   14004da3c:	lea    rdx,[rbp+0x30]
   14004da40:	lea    rcx,[rsi+0x30]
   14004da44:	mov    rbx,rax
   14004da47:	call   0x14002ffd0
   14004da4c:	mov    QWORD PTR [rbx],rax
   14004da4f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004da53:	jne    0x14005b3df
   14004da59:	lea    rdx,[rbp+0x28]
   14004da5d:	lea    rcx,[rsi+0x30]
   14004da61:	mov    DWORD PTR [rbp+0x28],0xb
   14004da68:	call   0x14002ffd0
   14004da6d:	lea    rcx,[rip+0x23e7c]        # 0x1400718f0
   14004da74:	lea    rdx,[rbp+0x28]
   14004da78:	mov    DWORD PTR [rax],0x4b
   14004da7e:	mov    DWORD PTR [rax+0x4],0xb
   14004da85:	mov    QWORD PTR [rax+0x8],rcx
   14004da89:	lea    rcx,[rsi+0x10]
   14004da8d:	mov    DWORD PTR [rbp+0x30],0xb
   14004da94:	mov    DWORD PTR [rbp+0x28],0x4b
   14004da9b:	call   0x14002ff30
   14004daa0:	lea    rdx,[rbp+0x30]
   14004daa4:	lea    rcx,[rsi+0x30]
   14004daa8:	mov    rbx,rax
   14004daab:	call   0x14002ffd0
   14004dab0:	mov    QWORD PTR [rbx],rax
   14004dab3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dab7:	jne    0x14005b3df
   14004dabd:	lea    rdx,[rbp+0x28]
   14004dac1:	lea    rcx,[rsi+0x30]
   14004dac5:	mov    DWORD PTR [rbp+0x28],0xc
   14004dacc:	call   0x14002ffd0
   14004dad1:	lea    rcx,[rip+0x23e30]        # 0x140071908
   14004dad8:	lea    rdx,[rbp+0x28]
   14004dadc:	mov    DWORD PTR [rax],0x4c
   14004dae2:	mov    DWORD PTR [rax+0x4],0xc
   14004dae9:	mov    QWORD PTR [rax+0x8],rcx
   14004daed:	lea    rcx,[rsi+0x10]
   14004daf1:	mov    DWORD PTR [rbp+0x30],0xc
   14004daf8:	mov    DWORD PTR [rbp+0x28],0x4c
   14004daff:	call   0x14002ff30
   14004db04:	lea    rdx,[rbp+0x30]
   14004db08:	lea    rcx,[rsi+0x30]
   14004db0c:	mov    rbx,rax
   14004db0f:	call   0x14002ffd0
   14004db14:	mov    QWORD PTR [rbx],rax
   14004db17:	cmp    DWORD PTR [rsi+0x8],r12d
   14004db1b:	jne    0x14005b3df
   14004db21:	lea    rdx,[rbp+0x28]
   14004db25:	lea    rcx,[rsi+0x30]
   14004db29:	mov    DWORD PTR [rbp+0x28],0xf
   14004db30:	call   0x14002ffd0
   14004db35:	lea    rcx,[rip+0x23dec]        # 0x140071928
   14004db3c:	lea    rdx,[rbp+0x28]
   14004db40:	mov    DWORD PTR [rax],0x5c
   14004db46:	mov    DWORD PTR [rax+0x4],0xf
   14004db4d:	mov    QWORD PTR [rax+0x8],rcx
   14004db51:	lea    rcx,[rsi+0x10]
   14004db55:	mov    DWORD PTR [rbp+0x30],0xf
   14004db5c:	mov    DWORD PTR [rbp+0x28],0x5c
   14004db63:	call   0x14002ff30
   14004db68:	lea    rdx,[rbp+0x30]
   14004db6c:	lea    rcx,[rsi+0x30]
   14004db70:	mov    rbx,rax
   14004db73:	call   0x14002ffd0
   14004db78:	mov    QWORD PTR [rbx],rax
   14004db7b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004db7f:	jne    0x14005b3df
   14004db85:	lea    rdx,[rbp+0x28]
   14004db89:	lea    rcx,[rsi+0x30]
   14004db8d:	mov    DWORD PTR [rbp+0x28],0x10
   14004db94:	call   0x14002ffd0
   14004db99:	lea    rcx,[rip+0x23da0]        # 0x140071940
   14004dba0:	lea    rdx,[rbp+0x28]
   14004dba4:	mov    DWORD PTR [rax],0x5d
   14004dbaa:	mov    DWORD PTR [rax+0x4],0x10
   14004dbb1:	mov    QWORD PTR [rax+0x8],rcx
   14004dbb5:	lea    rcx,[rsi+0x10]
   14004dbb9:	mov    DWORD PTR [rbp+0x30],0x10
   14004dbc0:	mov    DWORD PTR [rbp+0x28],0x5d
   14004dbc7:	call   0x14002ff30
   14004dbcc:	lea    rdx,[rbp+0x30]
   14004dbd0:	lea    rcx,[rsi+0x30]
   14004dbd4:	mov    rbx,rax
   14004dbd7:	call   0x14002ffd0
   14004dbdc:	mov    QWORD PTR [rbx],rax
   14004dbdf:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dbe3:	jne    0x14005b3df
   14004dbe9:	lea    rdx,[rbp+0x28]
   14004dbed:	lea    rcx,[rsi+0x30]
   14004dbf1:	mov    DWORD PTR [rbp+0x28],0x11
   14004dbf8:	call   0x14002ffd0
   14004dbfd:	lea    rcx,[rip+0x23d5c]        # 0x140071960
   14004dc04:	lea    rdx,[rbp+0x28]
   14004dc08:	mov    DWORD PTR [rax],0x5e
   14004dc0e:	mov    DWORD PTR [rax+0x4],0x11
   14004dc15:	mov    QWORD PTR [rax+0x8],rcx
   14004dc19:	lea    rcx,[rsi+0x10]
   14004dc1d:	mov    DWORD PTR [rbp+0x30],0x11
   14004dc24:	mov    DWORD PTR [rbp+0x28],0x5e
   14004dc2b:	call   0x14002ff30
   14004dc30:	lea    rdx,[rbp+0x30]
   14004dc34:	lea    rcx,[rsi+0x30]
   14004dc38:	mov    rbx,rax
   14004dc3b:	call   0x14002ffd0
   14004dc40:	mov    QWORD PTR [rbx],rax
   14004dc43:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dc47:	jne    0x14005b3df
   14004dc4d:	lea    rdx,[rbp+0x28]
   14004dc51:	lea    rcx,[rsi+0x30]
   14004dc55:	mov    DWORD PTR [rbp+0x28],0x1b
   14004dc5c:	call   0x14002ffd0
   14004dc61:	lea    rcx,[rip+0x23d10]        # 0x140071978
   14004dc68:	lea    rdx,[rbp+0x28]
   14004dc6c:	mov    DWORD PTR [rax],0x73
   14004dc72:	mov    DWORD PTR [rax+0x4],0x1b
   14004dc79:	mov    QWORD PTR [rax+0x8],rcx
   14004dc7d:	lea    rcx,[rsi+0x10]
   14004dc81:	mov    DWORD PTR [rbp+0x30],0x1b
   14004dc88:	mov    DWORD PTR [rbp+0x28],0x73
   14004dc8f:	call   0x14002ff30
   14004dc94:	lea    rdx,[rbp+0x30]
   14004dc98:	lea    rcx,[rsi+0x30]
   14004dc9c:	mov    rbx,rax
   14004dc9f:	call   0x14002ffd0
   14004dca4:	mov    QWORD PTR [rbx],rax
   14004dca7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dcab:	jne    0x14005b3df
   14004dcb1:	lea    rdx,[rbp+0x28]
   14004dcb5:	lea    rcx,[rsi+0x30]
   14004dcb9:	mov    DWORD PTR [rbp+0x28],0x8
   14004dcc0:	call   0x14002ffd0
   14004dcc5:	lea    rcx,[rip+0x23ccc]        # 0x140071998
   14004dccc:	lea    rdx,[rbp+0x28]
   14004dcd0:	mov    DWORD PTR [rax],0x5f
   14004dcd6:	mov    DWORD PTR [rax+0x4],0x8
   14004dcdd:	mov    QWORD PTR [rax+0x8],rcx
   14004dce1:	lea    rcx,[rsi+0x10]
   14004dce5:	mov    DWORD PTR [rbp+0x30],0x8
   14004dcec:	mov    DWORD PTR [rbp+0x28],0x5f
   14004dcf3:	call   0x14002ff30
   14004dcf8:	lea    rdx,[rbp+0x30]
   14004dcfc:	lea    rcx,[rsi+0x30]
   14004dd00:	mov    rbx,rax
   14004dd03:	call   0x14002ffd0
   14004dd08:	mov    QWORD PTR [rbx],rax
   14004dd0b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dd0f:	jne    0x14005b3df
   14004dd15:	lea    rdx,[rbp+0x28]
   14004dd19:	lea    rcx,[rsi+0x30]
   14004dd1d:	mov    DWORD PTR [rbp+0x28],0x5
   14004dd24:	call   0x14002ffd0
   14004dd29:	lea    rcx,[rip+0x23c80]        # 0x1400719b0
   14004dd30:	lea    rdx,[rbp+0x28]
   14004dd34:	mov    DWORD PTR [rax],0x60
   14004dd3a:	mov    DWORD PTR [rax+0x4],0x5
   14004dd41:	mov    QWORD PTR [rax+0x8],rcx
   14004dd45:	lea    rcx,[rsi+0x10]
   14004dd49:	mov    DWORD PTR [rbp+0x30],0x5
   14004dd50:	mov    DWORD PTR [rbp+0x28],0x60
   14004dd57:	call   0x14002ff30
   14004dd5c:	lea    rdx,[rbp+0x30]
   14004dd60:	lea    rcx,[rsi+0x30]
   14004dd64:	mov    rbx,rax
   14004dd67:	call   0x14002ffd0
   14004dd6c:	mov    QWORD PTR [rbx],rax
   14004dd6f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dd73:	jne    0x14005b3df
   14004dd79:	lea    rdx,[rbp+0x28]
   14004dd7d:	lea    rcx,[rsi+0x30]
   14004dd81:	mov    DWORD PTR [rbp+0x28],0xe
   14004dd88:	call   0x14002ffd0
   14004dd8d:	lea    rcx,[rip+0x23c3c]        # 0x1400719d0
   14004dd94:	lea    rdx,[rbp+0x28]
   14004dd98:	mov    DWORD PTR [rax],0x63
   14004dd9e:	mov    DWORD PTR [rax+0x4],0xe
   14004dda5:	mov    QWORD PTR [rax+0x8],rcx
   14004dda9:	lea    rcx,[rsi+0x10]
   14004ddad:	mov    DWORD PTR [rbp+0x30],0xe
   14004ddb4:	mov    DWORD PTR [rbp+0x28],0x63
   14004ddbb:	call   0x14002ff30
   14004ddc0:	lea    rdx,[rbp+0x30]
   14004ddc4:	lea    rcx,[rsi+0x30]
   14004ddc8:	mov    rbx,rax
   14004ddcb:	call   0x14002ffd0
   14004ddd0:	mov    QWORD PTR [rbx],rax
   14004ddd3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ddd7:	jne    0x14005b3df
   14004dddd:	lea    rdx,[rbp+0x28]
   14004dde1:	lea    rcx,[rsi+0x30]
   14004dde5:	mov    DWORD PTR [rbp+0x28],0xa
   14004ddec:	call   0x14002ffd0
   14004ddf1:	lea    rcx,[rip+0x23bf0]        # 0x1400719e8
   14004ddf8:	lea    rdx,[rbp+0x28]
   14004ddfc:	mov    DWORD PTR [rax],0x64
   14004de02:	mov    DWORD PTR [rax+0x4],0xa
   14004de09:	mov    QWORD PTR [rax+0x8],rcx
   14004de0d:	lea    rcx,[rsi+0x10]
   14004de11:	mov    DWORD PTR [rbp+0x30],0xa
   14004de18:	mov    DWORD PTR [rbp+0x28],0x64
   14004de1f:	call   0x14002ff30
   14004de24:	lea    rdx,[rbp+0x30]
   14004de28:	lea    rcx,[rsi+0x30]
   14004de2c:	mov    rbx,rax
   14004de2f:	call   0x14002ffd0
   14004de34:	mov    QWORD PTR [rbx],rax
   14004de37:	cmp    DWORD PTR [rsi+0x8],r12d
   14004de3b:	jne    0x14005b3df
   14004de41:	lea    rdx,[rbp+0x28]
   14004de45:	lea    rcx,[rsi+0x30]
   14004de49:	mov    DWORD PTR [rbp+0x28],0x7
   14004de50:	call   0x14002ffd0
   14004de55:	lea    rcx,[rip+0x23ba4]        # 0x140071a00
   14004de5c:	lea    rdx,[rbp+0x28]
   14004de60:	mov    DWORD PTR [rax],0x65
   14004de66:	mov    DWORD PTR [rax+0x4],0x7
   14004de6d:	mov    QWORD PTR [rax+0x8],rcx
   14004de71:	lea    rcx,[rsi+0x10]
   14004de75:	mov    DWORD PTR [rbp+0x30],0x7
   14004de7c:	mov    DWORD PTR [rbp+0x28],0x65
   14004de83:	call   0x14002ff30
   14004de88:	lea    rdx,[rbp+0x30]
   14004de8c:	lea    rcx,[rsi+0x30]
   14004de90:	mov    rbx,rax
   14004de93:	call   0x14002ffd0
   14004de98:	mov    QWORD PTR [rbx],rax
   14004de9b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004de9f:	jne    0x14005b3df
   14004dea5:	lea    rdx,[rbp+0x28]
   14004dea9:	lea    rcx,[rsi+0x30]
   14004dead:	mov    DWORD PTR [rbp+0x28],0x4
   14004deb4:	call   0x14002ffd0
   14004deb9:	lea    rcx,[rip+0x23b58]        # 0x140071a18
   14004dec0:	lea    rdx,[rbp+0x28]
   14004dec4:	mov    DWORD PTR [rax],0x66
   14004deca:	mov    DWORD PTR [rax+0x4],0x4
   14004ded1:	mov    QWORD PTR [rax+0x8],rcx
   14004ded5:	lea    rcx,[rsi+0x10]
   14004ded9:	mov    DWORD PTR [rbp+0x30],0x4
   14004dee0:	mov    DWORD PTR [rbp+0x28],0x66
   14004dee7:	call   0x14002ff30
   14004deec:	lea    rdx,[rbp+0x30]
   14004def0:	lea    rcx,[rsi+0x30]
   14004def4:	mov    rbx,rax
   14004def7:	call   0x14002ffd0
   14004defc:	mov    QWORD PTR [rbx],rax
   14004deff:	cmp    DWORD PTR [rsi+0x8],r12d
   14004df03:	jne    0x14005b3df
   14004df09:	lea    rdx,[rbp+0x28]
   14004df0d:	lea    rcx,[rsi+0x30]
   14004df11:	mov    DWORD PTR [rbp+0x28],0x12
   14004df18:	call   0x14002ffd0
   14004df1d:	lea    rcx,[rip+0x23b0c]        # 0x140071a30
   14004df24:	lea    rdx,[rbp+0x28]
   14004df28:	mov    DWORD PTR [rax],0x67
   14004df2e:	mov    DWORD PTR [rax+0x4],0x12
   14004df35:	mov    QWORD PTR [rax+0x8],rcx
   14004df39:	lea    rcx,[rsi+0x10]
   14004df3d:	mov    DWORD PTR [rbp+0x30],0x12
   14004df44:	mov    DWORD PTR [rbp+0x28],0x67
   14004df4b:	call   0x14002ff30
   14004df50:	lea    rdx,[rbp+0x30]
   14004df54:	lea    rcx,[rsi+0x30]
   14004df58:	mov    rbx,rax
   14004df5b:	call   0x14002ffd0
   14004df60:	mov    QWORD PTR [rbx],rax
   14004df63:	cmp    DWORD PTR [rsi+0x8],r12d
   14004df67:	jne    0x14005b3df
   14004df6d:	lea    rdx,[rbp+0x28]
   14004df71:	lea    rcx,[rsi+0x30]
   14004df75:	mov    DWORD PTR [rbp+0x28],0x17
   14004df7c:	call   0x14002ffd0
   14004df81:	lea    rcx,[rip+0x23ac8]        # 0x140071a50
   14004df88:	lea    rdx,[rbp+0x28]
   14004df8c:	mov    DWORD PTR [rax],0x6f
   14004df92:	mov    DWORD PTR [rax+0x4],0x17
   14004df99:	mov    QWORD PTR [rax+0x8],rcx
   14004df9d:	lea    rcx,[rsi+0x10]
   14004dfa1:	mov    DWORD PTR [rbp+0x30],0x17
   14004dfa8:	mov    DWORD PTR [rbp+0x28],0x6f
   14004dfaf:	call   0x14002ff30
   14004dfb4:	lea    rdx,[rbp+0x30]
   14004dfb8:	lea    rcx,[rsi+0x30]
   14004dfbc:	mov    rbx,rax
   14004dfbf:	call   0x14002ffd0
   14004dfc4:	mov    QWORD PTR [rbx],rax
   14004dfc7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004dfcb:	jne    0x14005b3df
   14004dfd1:	lea    rdx,[rbp+0x28]
   14004dfd5:	lea    rcx,[rsi+0x30]
   14004dfd9:	mov    DWORD PTR [rbp+0x28],0x18
   14004dfe0:	call   0x14002ffd0
   14004dfe5:	lea    rcx,[rip+0x23a8c]        # 0x140071a78
   14004dfec:	lea    rdx,[rbp+0x28]
   14004dff0:	mov    DWORD PTR [rax],0x70
   14004dff6:	mov    DWORD PTR [rax+0x4],0x18
   14004dffd:	mov    QWORD PTR [rax+0x8],rcx
   14004e001:	lea    rcx,[rsi+0x10]
   14004e005:	mov    DWORD PTR [rbp+0x30],0x18
   14004e00c:	mov    DWORD PTR [rbp+0x28],0x70
   14004e013:	call   0x14002ff30
   14004e018:	lea    rdx,[rbp+0x30]
   14004e01c:	lea    rcx,[rsi+0x30]
   14004e020:	mov    rbx,rax
   14004e023:	call   0x14002ffd0
   14004e028:	mov    QWORD PTR [rbx],rax
   14004e02b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e02f:	jne    0x14005b3df
   14004e035:	lea    rdx,[rbp+0x28]
   14004e039:	lea    rcx,[rsi+0x30]
   14004e03d:	mov    DWORD PTR [rbp+0x28],0x19
   14004e044:	call   0x14002ffd0
   14004e049:	lea    rcx,[rip+0x23a48]        # 0x140071a98
   14004e050:	lea    rdx,[rbp+0x28]
   14004e054:	mov    DWORD PTR [rax],0x71
   14004e05a:	mov    DWORD PTR [rax+0x4],0x19
   14004e061:	mov    QWORD PTR [rax+0x8],rcx
   14004e065:	lea    rcx,[rsi+0x10]
   14004e069:	mov    DWORD PTR [rbp+0x30],0x19
   14004e070:	mov    DWORD PTR [rbp+0x28],0x71
   14004e077:	call   0x14002ff30
   14004e07c:	lea    rdx,[rbp+0x30]
   14004e080:	lea    rcx,[rsi+0x30]
   14004e084:	mov    rbx,rax
   14004e087:	call   0x14002ffd0
   14004e08c:	mov    QWORD PTR [rbx],rax
   14004e08f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e093:	jne    0x14005b3df
   14004e099:	lea    rdx,[rbp+0x28]
   14004e09d:	lea    rcx,[rsi+0x30]
   14004e0a1:	mov    DWORD PTR [rbp+0x28],0x1a
   14004e0a8:	call   0x14002ffd0
   14004e0ad:	lea    rcx,[rip+0x23a0c]        # 0x140071ac0
   14004e0b4:	lea    rdx,[rbp+0x28]
   14004e0b8:	mov    DWORD PTR [rax],0x72
   14004e0be:	mov    DWORD PTR [rax+0x4],0x1a
   14004e0c5:	mov    QWORD PTR [rax+0x8],rcx
   14004e0c9:	lea    rcx,[rsi+0x10]
   14004e0cd:	mov    DWORD PTR [rbp+0x30],0x1a
   14004e0d4:	mov    DWORD PTR [rbp+0x28],0x72
   14004e0db:	call   0x14002ff30
   14004e0e0:	lea    rdx,[rbp+0x30]
   14004e0e4:	lea    rcx,[rsi+0x30]
   14004e0e8:	mov    rbx,rax
   14004e0eb:	call   0x14002ffd0
   14004e0f0:	mov    QWORD PTR [rbx],rax
   14004e0f3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e0f7:	jne    0x14005b3df
   14004e0fd:	lea    rdx,[rbp+0x28]
   14004e101:	lea    rcx,[rsi+0x30]
   14004e105:	mov    DWORD PTR [rbp+0x28],0x3
   14004e10c:	call   0x14002ffd0
   14004e111:	lea    rcx,[rip+0x239c8]        # 0x140071ae0
   14004e118:	lea    rdx,[rbp+0x28]
   14004e11c:	mov    DWORD PTR [rax],0x68
   14004e122:	mov    DWORD PTR [rax+0x4],0x3
   14004e129:	mov    QWORD PTR [rax+0x8],rcx
   14004e12d:	lea    rcx,[rsi+0x10]
   14004e131:	mov    DWORD PTR [rbp+0x30],0x3
   14004e138:	mov    DWORD PTR [rbp+0x28],0x68
   14004e13f:	call   0x14002ff30
   14004e144:	lea    rdx,[rbp+0x30]
   14004e148:	lea    rcx,[rsi+0x30]
   14004e14c:	mov    rbx,rax
   14004e14f:	call   0x14002ffd0
   14004e154:	mov    QWORD PTR [rbx],rax
   14004e157:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e15b:	jne    0x14005b3df
   14004e161:	lea    rdx,[rbp+0x28]
   14004e165:	lea    rcx,[rsi+0x30]
   14004e169:	mov    DWORD PTR [rbp+0x28],0x15
   14004e170:	call   0x14002ffd0
   14004e175:	lea    rcx,[rip+0x23974]        # 0x140071af0
   14004e17c:	lea    rdx,[rbp+0x28]
   14004e180:	mov    DWORD PTR [rax],0x69
   14004e186:	mov    DWORD PTR [rax+0x4],0x15
   14004e18d:	mov    QWORD PTR [rax+0x8],rcx
   14004e191:	lea    rcx,[rsi+0x10]
   14004e195:	mov    DWORD PTR [rbp+0x30],0x15
   14004e19c:	mov    DWORD PTR [rbp+0x28],0x69
   14004e1a3:	call   0x14002ff30
   14004e1a8:	lea    rdx,[rbp+0x30]
   14004e1ac:	lea    rcx,[rsi+0x30]
   14004e1b0:	mov    rbx,rax
   14004e1b3:	call   0x14002ffd0
   14004e1b8:	mov    QWORD PTR [rbx],rax
   14004e1bb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e1bf:	jne    0x14005b3df
   14004e1c5:	lea    rdx,[rbp+0x28]
   14004e1c9:	lea    rcx,[rsi+0x30]
   14004e1cd:	mov    DWORD PTR [rbp+0x28],0x6
   14004e1d4:	call   0x14002ffd0
   14004e1d9:	lea    rcx,[rip+0x23928]        # 0x140071b08
   14004e1e0:	lea    rdx,[rbp+0x28]
   14004e1e4:	mov    DWORD PTR [rax],0x6a
   14004e1ea:	mov    DWORD PTR [rax+0x4],0x6
   14004e1f1:	mov    QWORD PTR [rax+0x8],rcx
   14004e1f5:	lea    rcx,[rsi+0x10]
   14004e1f9:	mov    DWORD PTR [rbp+0x30],0x6
   14004e200:	mov    DWORD PTR [rbp+0x28],0x6a
   14004e207:	call   0x14002ff30
   14004e20c:	lea    rdx,[rbp+0x30]
   14004e210:	lea    rcx,[rsi+0x30]
   14004e214:	mov    rbx,rax
   14004e217:	call   0x14002ffd0
   14004e21c:	mov    QWORD PTR [rbx],rax
   14004e21f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e223:	jne    0x14005b3df
   14004e229:	lea    rdx,[rbp+0x28]
   14004e22d:	lea    rcx,[rsi+0x30]
   14004e231:	mov    DWORD PTR [rbp+0x28],0x9
   14004e238:	call   0x14002ffd0
   14004e23d:	lea    rcx,[rip+0x238dc]        # 0x140071b20
   14004e244:	lea    rdx,[rbp+0x28]
   14004e248:	mov    DWORD PTR [rax],0x6b
   14004e24e:	mov    DWORD PTR [rax+0x4],0x9
   14004e255:	mov    QWORD PTR [rax+0x8],rcx
   14004e259:	lea    rcx,[rsi+0x10]
   14004e25d:	mov    DWORD PTR [rbp+0x30],0x9
   14004e264:	mov    DWORD PTR [rbp+0x28],0x6b
   14004e26b:	call   0x14002ff30
   14004e270:	lea    rdx,[rbp+0x30]
   14004e274:	lea    rcx,[rsi+0x30]
   14004e278:	mov    rbx,rax
   14004e27b:	call   0x14002ffd0
   14004e280:	mov    QWORD PTR [rbx],rax
   14004e283:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e287:	jne    0x14005b3df
   14004e28d:	lea    rdx,[rbp+0x28]
   14004e291:	lea    rcx,[rsi+0x30]
   14004e295:	mov    DWORD PTR [rbp+0x28],0xd
   14004e29c:	call   0x14002ffd0
   14004e2a1:	lea    rcx,[rip+0x23890]        # 0x140071b38
   14004e2a8:	lea    rdx,[rbp+0x28]
   14004e2ac:	mov    DWORD PTR [rax],0x6c
   14004e2b2:	mov    DWORD PTR [rax+0x4],0xd
   14004e2b9:	mov    QWORD PTR [rax+0x8],rcx
   14004e2bd:	lea    rcx,[rsi+0x10]
   14004e2c1:	mov    DWORD PTR [rbp+0x30],0xd
   14004e2c8:	mov    DWORD PTR [rbp+0x28],0x6c
   14004e2cf:	call   0x14002ff30
   14004e2d4:	lea    rdx,[rbp+0x30]
   14004e2d8:	lea    rcx,[rsi+0x30]
   14004e2dc:	mov    rbx,rax
   14004e2df:	call   0x14002ffd0
   14004e2e4:	mov    QWORD PTR [rbx],rax
   14004e2e7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e2eb:	jne    0x14005b3df
   14004e2f1:	lea    rdx,[rbp+0x28]
   14004e2f5:	lea    rcx,[rsi+0x30]
   14004e2f9:	mov    DWORD PTR [rbp+0x28],0x14
   14004e300:	call   0x14002ffd0
   14004e305:	lea    rcx,[rip+0x23844]        # 0x140071b50
   14004e30c:	lea    rdx,[rbp+0x28]
   14004e310:	mov    DWORD PTR [rax],0x6d
   14004e316:	mov    DWORD PTR [rax+0x4],0x14
   14004e31d:	mov    QWORD PTR [rax+0x8],rcx
   14004e321:	lea    rcx,[rsi+0x10]
   14004e325:	mov    DWORD PTR [rbp+0x30],0x14
   14004e32c:	mov    DWORD PTR [rbp+0x28],0x6d
   14004e333:	call   0x14002ff30
   14004e338:	lea    rdx,[rbp+0x30]
   14004e33c:	lea    rcx,[rsi+0x30]
   14004e340:	mov    rbx,rax
   14004e343:	call   0x14002ffd0
   14004e348:	mov    QWORD PTR [rbx],rax
   14004e34b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e34f:	jne    0x14005b3df
   14004e355:	lea    rdx,[rbp+0x28]
   14004e359:	lea    rcx,[rsi+0x30]
   14004e35d:	mov    DWORD PTR [rbp+0x28],0x13
   14004e364:	call   0x14002ffd0
   14004e369:	lea    rcx,[rip+0x237f8]        # 0x140071b68
   14004e370:	lea    rdx,[rbp+0x28]
   14004e374:	mov    DWORD PTR [rax],0x6e
   14004e37a:	mov    DWORD PTR [rax+0x4],0x13
   14004e381:	mov    QWORD PTR [rax+0x8],rcx
   14004e385:	lea    rcx,[rsi+0x10]
   14004e389:	mov    DWORD PTR [rbp+0x30],0x13
   14004e390:	mov    DWORD PTR [rbp+0x28],0x6e
   14004e397:	call   0x14002ff30
   14004e39c:	lea    rdx,[rbp+0x30]
   14004e3a0:	lea    rcx,[rsi+0x30]
   14004e3a4:	mov    rbx,rax
   14004e3a7:	call   0x14002ffd0
   14004e3ac:	mov    QWORD PTR [rbx],rax
   14004e3af:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e3b3:	jne    0x14005b3df
   14004e3b9:	lea    rdx,[rbp+0x28]
   14004e3bd:	lea    rcx,[rsi+0x30]
   14004e3c1:	mov    DWORD PTR [rbp+0x28],0x1e
   14004e3c8:	call   0x14002ffd0
   14004e3cd:	lea    rcx,[rip+0x237ac]        # 0x140071b80
   14004e3d4:	lea    rdx,[rbp+0x28]
   14004e3d8:	mov    DWORD PTR [rax],0x74
   14004e3de:	mov    DWORD PTR [rax+0x4],0x1e
   14004e3e5:	mov    QWORD PTR [rax+0x8],rcx
   14004e3e9:	lea    rcx,[rsi+0x10]
   14004e3ed:	mov    DWORD PTR [rbp+0x30],0x1e
   14004e3f4:	mov    DWORD PTR [rbp+0x28],0x74
   14004e3fb:	call   0x14002ff30
   14004e400:	lea    rdx,[rbp+0x30]
   14004e404:	lea    rcx,[rsi+0x30]
   14004e408:	mov    rbx,rax
   14004e40b:	call   0x14002ffd0
   14004e410:	mov    QWORD PTR [rbx],rax
   14004e413:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e417:	jne    0x14005b3df
   14004e41d:	lea    rdx,[rbp+0x28]
   14004e421:	lea    rcx,[rsi+0x30]
   14004e425:	mov    DWORD PTR [rbp+0x28],0x1c
   14004e42c:	call   0x14002ffd0
   14004e431:	lea    rcx,[rip+0x23758]        # 0x140071b90
   14004e438:	lea    rdx,[rbp+0x28]
   14004e43c:	mov    DWORD PTR [rax],0x77
   14004e442:	mov    DWORD PTR [rax+0x4],0x1c
   14004e449:	mov    QWORD PTR [rax+0x8],rcx
   14004e44d:	lea    rcx,[rsi+0x10]
   14004e451:	mov    DWORD PTR [rbp+0x30],0x1c
   14004e458:	mov    DWORD PTR [rbp+0x28],0x77
   14004e45f:	call   0x14002ff30
   14004e464:	lea    rdx,[rbp+0x30]
   14004e468:	lea    rcx,[rsi+0x30]
   14004e46c:	mov    rbx,rax
   14004e46f:	call   0x14002ffd0
   14004e474:	mov    QWORD PTR [rbx],rax
   14004e477:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e47b:	jne    0x14005b3df
   14004e481:	lea    rdx,[rbp+0x28]
   14004e485:	lea    rcx,[rsi+0x30]
   14004e489:	mov    DWORD PTR [rbp+0x28],0x1d
   14004e490:	call   0x14002ffd0
   14004e495:	lea    rcx,[rip+0x23714]        # 0x140071bb0
   14004e49c:	lea    rdx,[rbp+0x28]
   14004e4a0:	mov    DWORD PTR [rax],0x78
   14004e4a6:	mov    DWORD PTR [rax+0x4],0x1d
   14004e4ad:	mov    QWORD PTR [rax+0x8],rcx
   14004e4b1:	lea    rcx,[rsi+0x10]
   14004e4b5:	mov    DWORD PTR [rbp+0x30],0x1d
   14004e4bc:	mov    DWORD PTR [rbp+0x28],0x78
   14004e4c3:	call   0x14002ff30
   14004e4c8:	lea    rdx,[rbp+0x30]
   14004e4cc:	lea    rcx,[rsi+0x30]
   14004e4d0:	mov    rbx,rax
   14004e4d3:	call   0x14002ffd0
   14004e4d8:	mov    QWORD PTR [rbx],rax
   14004e4db:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e4df:	jne    0x14005b3df
   14004e4e5:	lea    rdx,[rbp+0x28]
   14004e4e9:	lea    rcx,[rsi+0x30]
   14004e4ed:	mov    DWORD PTR [rbp+0x28],0x20
   14004e4f4:	call   0x14002ffd0
   14004e4f9:	lea    rcx,[rip+0x236d0]        # 0x140071bd0
   14004e500:	lea    rdx,[rbp+0x28]
   14004e504:	mov    DWORD PTR [rax],0x95
   14004e50a:	mov    DWORD PTR [rax+0x4],0x20
   14004e511:	mov    QWORD PTR [rax+0x8],rcx
   14004e515:	lea    rcx,[rsi+0x10]
   14004e519:	mov    DWORD PTR [rbp+0x30],0x20
   14004e520:	mov    DWORD PTR [rbp+0x28],0x95
   14004e527:	call   0x14002ff30
   14004e52c:	lea    rdx,[rbp+0x30]
   14004e530:	lea    rcx,[rsi+0x30]
   14004e534:	mov    rbx,rax
   14004e537:	call   0x14002ffd0
   14004e53c:	mov    QWORD PTR [rbx],rax
   14004e53f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e543:	jne    0x14005b3df
   14004e549:	lea    rdx,[rbp+0x28]
   14004e54d:	lea    rcx,[rsi+0x30]
   14004e551:	mov    DWORD PTR [rbp+0x28],0x21
   14004e558:	call   0x14002ffd0
   14004e55d:	lea    rcx,[rip+0x2367c]        # 0x140071be0
   14004e564:	lea    rdx,[rbp+0x28]
   14004e568:	mov    DWORD PTR [rax],0x96
   14004e56e:	mov    DWORD PTR [rax+0x4],0x21
   14004e575:	mov    QWORD PTR [rax+0x8],rcx
   14004e579:	lea    rcx,[rsi+0x10]
   14004e57d:	mov    DWORD PTR [rbp+0x30],0x21
   14004e584:	mov    DWORD PTR [rbp+0x28],0x96
   14004e58b:	call   0x14002ff30
   14004e590:	lea    rdx,[rbp+0x30]
   14004e594:	lea    rcx,[rsi+0x30]
   14004e598:	mov    rbx,rax
   14004e59b:	call   0x14002ffd0
   14004e5a0:	mov    QWORD PTR [rbx],rax
   14004e5a3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e5a7:	jne    0x14005b3df
   14004e5ad:	lea    rdx,[rbp+0x28]
   14004e5b1:	lea    rcx,[rsi+0x30]
   14004e5b5:	mov    DWORD PTR [rbp+0x28],0x22
   14004e5bc:	call   0x14002ffd0
   14004e5c1:	lea    rcx,[rip+0x23638]        # 0x140071c00
   14004e5c8:	lea    rdx,[rbp+0x28]
   14004e5cc:	mov    DWORD PTR [rax],0x97
   14004e5d2:	mov    DWORD PTR [rax+0x4],0x22
   14004e5d9:	mov    QWORD PTR [rax+0x8],rcx
   14004e5dd:	lea    rcx,[rsi+0x10]
   14004e5e1:	mov    DWORD PTR [rbp+0x30],0x22
   14004e5e8:	mov    DWORD PTR [rbp+0x28],0x97
   14004e5ef:	call   0x14002ff30
   14004e5f4:	lea    rdx,[rbp+0x30]
   14004e5f8:	lea    rcx,[rsi+0x30]
   14004e5fc:	mov    rbx,rax
   14004e5ff:	call   0x14002ffd0
   14004e604:	mov    QWORD PTR [rbx],rax
   14004e607:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e60b:	jne    0x14005b3df
   14004e611:	lea    rdx,[rbp+0x28]
   14004e615:	lea    rcx,[rsi+0x30]
   14004e619:	mov    DWORD PTR [rbp+0x28],0x23
   14004e620:	call   0x14002ffd0
   14004e625:	lea    rcx,[rip+0x235f4]        # 0x140071c20
   14004e62c:	lea    rdx,[rbp+0x28]
   14004e630:	mov    DWORD PTR [rax],0x98
   14004e636:	mov    DWORD PTR [rax+0x4],0x23
   14004e63d:	mov    QWORD PTR [rax+0x8],rcx
   14004e641:	lea    rcx,[rsi+0x10]
   14004e645:	mov    DWORD PTR [rbp+0x30],0x23
   14004e64c:	mov    DWORD PTR [rbp+0x28],0x98
   14004e653:	call   0x14002ff30
   14004e658:	lea    rdx,[rbp+0x30]
   14004e65c:	lea    rcx,[rsi+0x30]
   14004e660:	mov    rbx,rax
   14004e663:	call   0x14002ffd0
   14004e668:	mov    QWORD PTR [rbx],rax
   14004e66b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e66f:	jne    0x14005b3df
   14004e675:	lea    rdx,[rbp+0x28]
   14004e679:	lea    rcx,[rsi+0x30]
   14004e67d:	mov    DWORD PTR [rbp+0x28],0x24
   14004e684:	call   0x14002ffd0
   14004e689:	lea    rcx,[rip+0x235b0]        # 0x140071c40
   14004e690:	lea    rdx,[rbp+0x28]
   14004e694:	mov    DWORD PTR [rax],0x99
   14004e69a:	mov    DWORD PTR [rax+0x4],0x24
   14004e6a1:	mov    QWORD PTR [rax+0x8],rcx
   14004e6a5:	lea    rcx,[rsi+0x10]
   14004e6a9:	mov    DWORD PTR [rbp+0x30],0x24
   14004e6b0:	mov    DWORD PTR [rbp+0x28],0x99
   14004e6b7:	call   0x14002ff30
   14004e6bc:	lea    rdx,[rbp+0x30]
   14004e6c0:	lea    rcx,[rsi+0x30]
   14004e6c4:	mov    rbx,rax
   14004e6c7:	call   0x14002ffd0
   14004e6cc:	mov    QWORD PTR [rbx],rax
   14004e6cf:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e6d3:	jne    0x14005b3df
   14004e6d9:	lea    rdx,[rbp+0x28]
   14004e6dd:	lea    rcx,[rsi+0x30]
   14004e6e1:	mov    DWORD PTR [rbp+0x28],0x8c
   14004e6e8:	call   0x14002ffd0
   14004e6ed:	lea    rcx,[rip+0x2356c]        # 0x140071c60
   14004e6f4:	lea    rdx,[rbp+0x28]
   14004e6f8:	mov    DWORD PTR [rax],0x337
   14004e6fe:	mov    DWORD PTR [rax+0x4],0x8c
   14004e705:	mov    QWORD PTR [rax+0x8],rcx
   14004e709:	lea    rcx,[rsi+0x10]
   14004e70d:	mov    DWORD PTR [rbp+0x30],0x8c
   14004e714:	mov    DWORD PTR [rbp+0x28],0x337
   14004e71b:	call   0x14002ff30
   14004e720:	lea    rdx,[rbp+0x30]
   14004e724:	lea    rcx,[rsi+0x30]
   14004e728:	mov    rbx,rax
   14004e72b:	call   0x14002ffd0
   14004e730:	mov    QWORD PTR [rbx],rax
   14004e733:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e737:	jne    0x14005b3df
   14004e73d:	lea    rdx,[rbp+0x28]
   14004e741:	lea    rcx,[rsi+0x30]
   14004e745:	mov    DWORD PTR [rbp+0x28],0x16
   14004e74c:	call   0x14002ffd0
   14004e751:	lea    rcx,[rip+0x23528]        # 0x140071c80
   14004e758:	lea    rdx,[rbp+0x28]
   14004e75c:	mov    DWORD PTR [rax],0xffffffff
   14004e762:	mov    DWORD PTR [rax+0x4],0x16
   14004e769:	mov    QWORD PTR [rax+0x8],rcx
   14004e76d:	lea    rcx,[rsi+0x10]
   14004e771:	mov    DWORD PTR [rbp+0x30],0x16
   14004e778:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14004e77f:	call   0x14002ff30
   14004e784:	lea    rdx,[rbp+0x30]
   14004e788:	lea    rcx,[rsi+0x30]
   14004e78c:	mov    rbx,rax
   14004e78f:	call   0x14002ffd0
   14004e794:	mov    QWORD PTR [rbx],rax
   14004e797:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e79b:	jne    0x14005b3df
   14004e7a1:	lea    rdx,[rbp+0x28]
   14004e7a5:	lea    rcx,[rsi+0x30]
   14004e7a9:	mov    DWORD PTR [rbp+0x28],0x25
   14004e7b0:	call   0x14002ffd0
   14004e7b5:	lea    rcx,[rip+0x234e4]        # 0x140071ca0
   14004e7bc:	lea    rdx,[rbp+0x28]
   14004e7c0:	mov    DWORD PTR [rax],0x9a
   14004e7c6:	mov    DWORD PTR [rax+0x4],0x25
   14004e7cd:	mov    QWORD PTR [rax+0x8],rcx
   14004e7d1:	lea    rcx,[rsi+0x10]
   14004e7d5:	mov    DWORD PTR [rbp+0x30],0x25
   14004e7dc:	mov    DWORD PTR [rbp+0x28],0x9a
   14004e7e3:	call   0x14002ff30
   14004e7e8:	lea    rdx,[rbp+0x30]
   14004e7ec:	lea    rcx,[rsi+0x30]
   14004e7f0:	mov    rbx,rax
   14004e7f3:	call   0x14002ffd0
   14004e7f8:	mov    QWORD PTR [rbx],rax
   14004e7fb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e7ff:	jne    0x14005b3df
   14004e805:	lea    rdx,[rbp+0x28]
   14004e809:	lea    rcx,[rsi+0x30]
   14004e80d:	mov    DWORD PTR [rbp+0x28],0x9d
   14004e814:	call   0x14002ffd0
   14004e819:	lea    rcx,[rip+0x234a0]        # 0x140071cc0
   14004e820:	lea    rdx,[rbp+0x28]
   14004e824:	mov    DWORD PTR [rax],0x9b
   14004e82a:	mov    DWORD PTR [rax+0x4],0x9d
   14004e831:	mov    QWORD PTR [rax+0x8],rcx
   14004e835:	lea    rcx,[rsi+0x10]
   14004e839:	mov    DWORD PTR [rbp+0x30],0x9d
   14004e840:	mov    DWORD PTR [rbp+0x28],0x9b
   14004e847:	call   0x14002ff30
   14004e84c:	lea    rdx,[rbp+0x30]
   14004e850:	lea    rcx,[rsi+0x30]
   14004e854:	mov    rbx,rax
   14004e857:	call   0x14002ffd0
   14004e85c:	mov    QWORD PTR [rbx],rax
   14004e85f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e863:	jne    0x14005b3df
   14004e869:	lea    rdx,[rbp+0x28]
   14004e86d:	lea    rcx,[rsi+0x30]
   14004e871:	mov    DWORD PTR [rbp+0x28],0x9e
   14004e878:	call   0x14002ffd0
   14004e87d:	lea    rcx,[rip+0x23454]        # 0x140071cd8
   14004e884:	lea    rdx,[rbp+0x28]
   14004e888:	mov    DWORD PTR [rax],0x9c
   14004e88e:	mov    DWORD PTR [rax+0x4],0x9e
   14004e895:	mov    QWORD PTR [rax+0x8],rcx
   14004e899:	lea    rcx,[rsi+0x10]
   14004e89d:	mov    DWORD PTR [rbp+0x30],0x9e
   14004e8a4:	mov    DWORD PTR [rbp+0x28],0x9c
   14004e8ab:	call   0x14002ff30
   14004e8b0:	lea    rdx,[rbp+0x30]
   14004e8b4:	lea    rcx,[rsi+0x30]
   14004e8b8:	mov    rbx,rax
   14004e8bb:	call   0x14002ffd0
   14004e8c0:	mov    QWORD PTR [rbx],rax
   14004e8c3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e8c7:	jne    0x14005b3df
   14004e8cd:	lea    rdx,[rbp+0x28]
   14004e8d1:	lea    rcx,[rsi+0x30]
   14004e8d5:	mov    DWORD PTR [rbp+0x28],0x9f
   14004e8dc:	call   0x14002ffd0
   14004e8e1:	lea    rcx,[rip+0x23410]        # 0x140071cf8
   14004e8e8:	lea    rdx,[rbp+0x28]
   14004e8ec:	mov    DWORD PTR [rax],0x9d
   14004e8f2:	mov    DWORD PTR [rax+0x4],0x9f
   14004e8f9:	mov    QWORD PTR [rax+0x8],rcx
   14004e8fd:	lea    rcx,[rsi+0x10]
   14004e901:	mov    DWORD PTR [rbp+0x30],0x9f
   14004e908:	mov    DWORD PTR [rbp+0x28],0x9d
   14004e90f:	call   0x14002ff30
   14004e914:	lea    rdx,[rbp+0x30]
   14004e918:	lea    rcx,[rsi+0x30]
   14004e91c:	mov    rbx,rax
   14004e91f:	call   0x14002ffd0
   14004e924:	mov    QWORD PTR [rbx],rax
   14004e927:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e92b:	jne    0x14005b3df
   14004e931:	lea    rdx,[rbp+0x28]
   14004e935:	lea    rcx,[rsi+0x30]
   14004e939:	mov    DWORD PTR [rbp+0x28],0xa0
   14004e940:	call   0x14002ffd0
   14004e945:	lea    rcx,[rip+0x233cc]        # 0x140071d18
   14004e94c:	lea    rdx,[rbp+0x28]
   14004e950:	mov    DWORD PTR [rax],0x9e
   14004e956:	mov    DWORD PTR [rax+0x4],0xa0
   14004e95d:	mov    QWORD PTR [rax+0x8],rcx
   14004e961:	lea    rcx,[rsi+0x10]
   14004e965:	mov    DWORD PTR [rbp+0x30],0xa0
   14004e96c:	mov    DWORD PTR [rbp+0x28],0x9e
   14004e973:	call   0x14002ff30
   14004e978:	lea    rdx,[rbp+0x30]
   14004e97c:	lea    rcx,[rsi+0x30]
   14004e980:	mov    rbx,rax
   14004e983:	call   0x14002ffd0
   14004e988:	mov    QWORD PTR [rbx],rax
   14004e98b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e98f:	jne    0x14005b3df
   14004e995:	lea    rdx,[rbp+0x28]
   14004e999:	lea    rcx,[rsi+0x30]
   14004e99d:	mov    DWORD PTR [rbp+0x28],0xa1
   14004e9a4:	call   0x14002ffd0
   14004e9a9:	lea    rcx,[rip+0x23390]        # 0x140071d40
   14004e9b0:	lea    rdx,[rbp+0x28]
   14004e9b4:	mov    DWORD PTR [rax],0x9f
   14004e9ba:	mov    DWORD PTR [rax+0x4],0xa1
   14004e9c1:	mov    QWORD PTR [rax+0x8],rcx
   14004e9c5:	lea    rcx,[rsi+0x10]
   14004e9c9:	mov    DWORD PTR [rbp+0x30],0xa1
   14004e9d0:	mov    DWORD PTR [rbp+0x28],0x9f
   14004e9d7:	call   0x14002ff30
   14004e9dc:	lea    rdx,[rbp+0x30]
   14004e9e0:	lea    rcx,[rsi+0x30]
   14004e9e4:	mov    rbx,rax
   14004e9e7:	call   0x14002ffd0
   14004e9ec:	mov    QWORD PTR [rbx],rax
   14004e9ef:	cmp    DWORD PTR [rsi+0x8],r12d
   14004e9f3:	jne    0x14005b3df
   14004e9f9:	lea    rdx,[rbp+0x28]
   14004e9fd:	lea    rcx,[rsi+0x30]
   14004ea01:	mov    DWORD PTR [rbp+0x28],0xa2
   14004ea08:	call   0x14002ffd0
   14004ea0d:	lea    rcx,[rip+0x23354]        # 0x140071d68
   14004ea14:	lea    rdx,[rbp+0x28]
   14004ea18:	mov    DWORD PTR [rax],0xa0
   14004ea1e:	mov    DWORD PTR [rax+0x4],0xa2
   14004ea25:	mov    QWORD PTR [rax+0x8],rcx
   14004ea29:	lea    rcx,[rsi+0x10]
   14004ea2d:	mov    DWORD PTR [rbp+0x30],0xa2
   14004ea34:	mov    DWORD PTR [rbp+0x28],0xa0
   14004ea3b:	call   0x14002ff30
   14004ea40:	lea    rdx,[rbp+0x30]
   14004ea44:	lea    rcx,[rsi+0x30]
   14004ea48:	mov    rbx,rax
   14004ea4b:	call   0x14002ffd0
   14004ea50:	mov    QWORD PTR [rbx],rax
   14004ea53:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ea57:	jne    0x14005b3df
   14004ea5d:	lea    rdx,[rbp+0x28]
   14004ea61:	lea    rcx,[rsi+0x30]
   14004ea65:	mov    DWORD PTR [rbp+0x28],0xa3
   14004ea6c:	call   0x14002ffd0
   14004ea71:	lea    rcx,[rip+0x23310]        # 0x140071d88
   14004ea78:	lea    rdx,[rbp+0x28]
   14004ea7c:	mov    DWORD PTR [rax],0xa1
   14004ea82:	mov    DWORD PTR [rax+0x4],0xa3
   14004ea89:	mov    QWORD PTR [rax+0x8],rcx
   14004ea8d:	lea    rcx,[rsi+0x10]
   14004ea91:	mov    DWORD PTR [rbp+0x30],0xa3
   14004ea98:	mov    DWORD PTR [rbp+0x28],0xa1
   14004ea9f:	call   0x14002ff30
   14004eaa4:	lea    rdx,[rbp+0x30]
   14004eaa8:	lea    rcx,[rsi+0x30]
   14004eaac:	mov    rbx,rax
   14004eaaf:	call   0x14002ffd0
   14004eab4:	mov    QWORD PTR [rbx],rax
   14004eab7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004eabb:	jne    0x14005b3df
   14004eac1:	lea    rdx,[rbp+0x28]
   14004eac5:	lea    rcx,[rsi+0x30]
   14004eac9:	mov    DWORD PTR [rbp+0x28],0x96
   14004ead0:	call   0x14002ffd0
   14004ead5:	lea    rcx,[rip+0x232c4]        # 0x140071da0
   14004eadc:	lea    rdx,[rbp+0x28]
   14004eae0:	mov    DWORD PTR [rax],0xa2
   14004eae6:	mov    DWORD PTR [rax+0x4],0x96
   14004eaed:	mov    QWORD PTR [rax+0x8],rcx
   14004eaf1:	lea    rcx,[rsi+0x10]
   14004eaf5:	mov    DWORD PTR [rbp+0x30],0x96
   14004eafc:	mov    DWORD PTR [rbp+0x28],0xa2
   14004eb03:	call   0x14002ff30
   14004eb08:	lea    rdx,[rbp+0x30]
   14004eb0c:	lea    rcx,[rsi+0x30]
   14004eb10:	mov    rbx,rax
   14004eb13:	call   0x14002ffd0
   14004eb18:	mov    QWORD PTR [rbx],rax
   14004eb1b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004eb1f:	jne    0x14005b3df
   14004eb25:	lea    rdx,[rbp+0x28]
   14004eb29:	lea    rcx,[rsi+0x30]
   14004eb2d:	mov    DWORD PTR [rbp+0x28],0x97
   14004eb34:	call   0x14002ffd0
   14004eb39:	lea    rcx,[rip+0x23278]        # 0x140071db8
   14004eb40:	lea    rdx,[rbp+0x28]
   14004eb44:	mov    DWORD PTR [rax],0xa3
   14004eb4a:	mov    DWORD PTR [rax+0x4],0x97
   14004eb51:	mov    QWORD PTR [rax+0x8],rcx
   14004eb55:	lea    rcx,[rsi+0x10]
   14004eb59:	mov    DWORD PTR [rbp+0x30],0x97
   14004eb60:	mov    DWORD PTR [rbp+0x28],0xa3
   14004eb67:	call   0x14002ff30
   14004eb6c:	lea    rdx,[rbp+0x30]
   14004eb70:	lea    rcx,[rsi+0x30]
   14004eb74:	mov    rbx,rax
   14004eb77:	call   0x14002ffd0
   14004eb7c:	mov    QWORD PTR [rbx],rax
   14004eb7f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004eb83:	jne    0x14005b3df
   14004eb89:	lea    rdx,[rbp+0x28]
   14004eb8d:	lea    rcx,[rsi+0x30]
   14004eb91:	mov    DWORD PTR [rbp+0x28],0x98
   14004eb98:	call   0x14002ffd0
   14004eb9d:	lea    rcx,[rip+0x2322c]        # 0x140071dd0
   14004eba4:	lea    rdx,[rbp+0x28]
   14004eba8:	mov    DWORD PTR [rax],0xa4
   14004ebae:	mov    DWORD PTR [rax+0x4],0x98
   14004ebb5:	mov    QWORD PTR [rax+0x8],rcx
   14004ebb9:	lea    rcx,[rsi+0x10]
   14004ebbd:	mov    DWORD PTR [rbp+0x30],0x98
   14004ebc4:	mov    DWORD PTR [rbp+0x28],0xa4
   14004ebcb:	call   0x14002ff30
   14004ebd0:	lea    rdx,[rbp+0x30]
   14004ebd4:	lea    rcx,[rsi+0x30]
   14004ebd8:	mov    rbx,rax
   14004ebdb:	call   0x14002ffd0
   14004ebe0:	mov    QWORD PTR [rbx],rax
   14004ebe3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ebe7:	jne    0x14005b3df
   14004ebed:	lea    rdx,[rbp+0x28]
   14004ebf1:	lea    rcx,[rsi+0x30]
   14004ebf5:	mov    DWORD PTR [rbp+0x28],0x99
   14004ebfc:	call   0x14002ffd0
   14004ec01:	lea    rcx,[rip+0x231e8]        # 0x140071df0
   14004ec08:	lea    rdx,[rbp+0x28]
   14004ec0c:	mov    DWORD PTR [rax],0xa5
   14004ec12:	mov    DWORD PTR [rax+0x4],0x99
   14004ec19:	mov    QWORD PTR [rax+0x8],rcx
   14004ec1d:	lea    rcx,[rsi+0x10]
   14004ec21:	mov    DWORD PTR [rbp+0x30],0x99
   14004ec28:	mov    DWORD PTR [rbp+0x28],0xa5
   14004ec2f:	call   0x14002ff30
   14004ec34:	lea    rdx,[rbp+0x30]
   14004ec38:	lea    rcx,[rsi+0x30]
   14004ec3c:	mov    rbx,rax
   14004ec3f:	call   0x14002ffd0
   14004ec44:	mov    QWORD PTR [rbx],rax
   14004ec47:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ec4b:	jne    0x14005b3df
   14004ec51:	lea    rdx,[rbp+0x28]
   14004ec55:	lea    rcx,[rsi+0x30]
   14004ec59:	mov    DWORD PTR [rbp+0x28],0x9a
   14004ec60:	call   0x14002ffd0
   14004ec65:	lea    rcx,[rip+0x2319c]        # 0x140071e08
   14004ec6c:	lea    rdx,[rbp+0x28]
   14004ec70:	mov    DWORD PTR [rax],0xa6
   14004ec76:	mov    DWORD PTR [rax+0x4],0x9a
   14004ec7d:	mov    QWORD PTR [rax+0x8],rcx
   14004ec81:	lea    rcx,[rsi+0x10]
   14004ec85:	mov    DWORD PTR [rbp+0x30],0x9a
   14004ec8c:	mov    DWORD PTR [rbp+0x28],0xa6
   14004ec93:	call   0x14002ff30
   14004ec98:	lea    rdx,[rbp+0x30]
   14004ec9c:	lea    rcx,[rsi+0x30]
   14004eca0:	mov    rbx,rax
   14004eca3:	call   0x14002ffd0
   14004eca8:	mov    QWORD PTR [rbx],rax
   14004ecab:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ecaf:	jne    0x14005b3df
   14004ecb5:	lea    rdx,[rbp+0x28]
   14004ecb9:	lea    rcx,[rsi+0x30]
   14004ecbd:	mov    DWORD PTR [rbp+0x28],0x9b
   14004ecc4:	call   0x14002ffd0
   14004ecc9:	lea    rcx,[rip+0x23150]        # 0x140071e20
   14004ecd0:	lea    rdx,[rbp+0x28]
   14004ecd4:	mov    DWORD PTR [rax],0xa7
   14004ecda:	mov    DWORD PTR [rax+0x4],0x9b
   14004ece1:	mov    QWORD PTR [rax+0x8],rcx
   14004ece5:	lea    rcx,[rsi+0x10]
   14004ece9:	mov    DWORD PTR [rbp+0x30],0x9b
   14004ecf0:	mov    DWORD PTR [rbp+0x28],0xa7
   14004ecf7:	call   0x14002ff30
   14004ecfc:	lea    rdx,[rbp+0x30]
   14004ed00:	lea    rcx,[rsi+0x30]
   14004ed04:	mov    rbx,rax
   14004ed07:	call   0x14002ffd0
   14004ed0c:	mov    QWORD PTR [rbx],rax
   14004ed0f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ed13:	jne    0x14005b3df
   14004ed19:	lea    rdx,[rbp+0x28]
   14004ed1d:	lea    rcx,[rsi+0x30]
   14004ed21:	mov    DWORD PTR [rbp+0x28],0x9c
   14004ed28:	call   0x14002ffd0
   14004ed2d:	lea    rcx,[rip+0x23104]        # 0x140071e38
   14004ed34:	lea    rdx,[rbp+0x28]
   14004ed38:	mov    DWORD PTR [rax],0xa9
   14004ed3e:	mov    DWORD PTR [rax+0x4],0x9c
   14004ed45:	mov    QWORD PTR [rax+0x8],rcx
   14004ed49:	lea    rcx,[rsi+0x10]
   14004ed4d:	mov    DWORD PTR [rbp+0x30],0x9c
   14004ed54:	mov    DWORD PTR [rbp+0x28],0xa9
   14004ed5b:	call   0x14002ff30
   14004ed60:	lea    rdx,[rbp+0x30]
   14004ed64:	lea    rcx,[rsi+0x30]
   14004ed68:	mov    rbx,rax
   14004ed6b:	call   0x14002ffd0
   14004ed70:	mov    QWORD PTR [rbx],rax
   14004ed73:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ed77:	jne    0x14005b3df
   14004ed7d:	lea    rdx,[rbp+0x28]
   14004ed81:	lea    rcx,[rsi+0x30]
   14004ed85:	mov    DWORD PTR [rbp+0x28],0xa4
   14004ed8c:	call   0x14002ffd0
   14004ed91:	lea    rcx,[rip+0x230b8]        # 0x140071e50
   14004ed98:	lea    rdx,[rbp+0x28]
   14004ed9c:	mov    DWORD PTR [rax],0xe5
   14004eda2:	mov    DWORD PTR [rax+0x4],0xa4
   14004eda9:	mov    QWORD PTR [rax+0x8],rcx
   14004edad:	lea    rcx,[rsi+0x10]
   14004edb1:	mov    DWORD PTR [rbp+0x30],0xa4
   14004edb8:	mov    DWORD PTR [rbp+0x28],0xe5
   14004edbf:	call   0x14002ff30
   14004edc4:	lea    rdx,[rbp+0x30]
   14004edc8:	lea    rcx,[rsi+0x30]
   14004edcc:	mov    rbx,rax
   14004edcf:	call   0x14002ffd0
   14004edd4:	mov    QWORD PTR [rbx],rax
   14004edd7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004eddb:	jne    0x14005b3df
   14004ede1:	lea    rdx,[rbp+0x28]
   14004ede5:	lea    rcx,[rsi+0x30]
   14004ede9:	mov    DWORD PTR [rbp+0x28],0xa5
   14004edf0:	call   0x14002ffd0
   14004edf5:	lea    rcx,[rip+0x23074]        # 0x140071e70
   14004edfc:	lea    rdx,[rbp+0x28]
   14004ee00:	mov    DWORD PTR [rax],0xe8
   14004ee06:	mov    DWORD PTR [rax+0x4],0xa5
   14004ee0d:	mov    QWORD PTR [rax+0x8],rcx
   14004ee11:	lea    rcx,[rsi+0x10]
   14004ee15:	mov    DWORD PTR [rbp+0x30],0xa5
   14004ee1c:	mov    DWORD PTR [rbp+0x28],0xe8
   14004ee23:	call   0x14002ff30
   14004ee28:	lea    rdx,[rbp+0x30]
   14004ee2c:	lea    rcx,[rsi+0x30]
   14004ee30:	mov    rbx,rax
   14004ee33:	call   0x14002ffd0
   14004ee38:	mov    QWORD PTR [rbx],rax
   14004ee3b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ee3f:	jne    0x14005b3df
   14004ee45:	lea    rdx,[rbp+0x28]
   14004ee49:	lea    rcx,[rsi+0x30]
   14004ee4d:	mov    DWORD PTR [rbp+0x28],0xa6
   14004ee54:	call   0x14002ffd0
   14004ee59:	lea    rcx,[rip+0x23030]        # 0x140071e90
   14004ee60:	lea    rdx,[rbp+0x28]
   14004ee64:	mov    DWORD PTR [rax],0xe9
   14004ee6a:	mov    DWORD PTR [rax+0x4],0xa6
   14004ee71:	mov    QWORD PTR [rax+0x8],rcx
   14004ee75:	lea    rcx,[rsi+0x10]
   14004ee79:	mov    DWORD PTR [rbp+0x30],0xa6
   14004ee80:	mov    DWORD PTR [rbp+0x28],0xe9
   14004ee87:	call   0x14002ff30
   14004ee8c:	lea    rdx,[rbp+0x30]
   14004ee90:	lea    rcx,[rsi+0x30]
   14004ee94:	mov    rbx,rax
   14004ee97:	call   0x14002ffd0
   14004ee9c:	mov    QWORD PTR [rbx],rax
   14004ee9f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004eea3:	jne    0x14005b3df
   14004eea9:	lea    rdx,[rbp+0x28]
   14004eead:	lea    rcx,[rsi+0x30]
   14004eeb1:	mov    DWORD PTR [rbp+0x28],0xa7
   14004eeb8:	call   0x14002ffd0
   14004eebd:	lea    rcx,[rip+0x22ff4]        # 0x140071eb8
   14004eec4:	lea    rdx,[rbp+0x28]
   14004eec8:	mov    DWORD PTR [rax],0xe6
   14004eece:	mov    DWORD PTR [rax+0x4],0xa7
   14004eed5:	mov    QWORD PTR [rax+0x8],rcx
   14004eed9:	lea    rcx,[rsi+0x10]
   14004eedd:	mov    DWORD PTR [rbp+0x30],0xa7
   14004eee4:	mov    DWORD PTR [rbp+0x28],0xe6
   14004eeeb:	call   0x14002ff30
   14004eef0:	lea    rdx,[rbp+0x30]
   14004eef4:	lea    rcx,[rsi+0x30]
   14004eef8:	mov    rbx,rax
   14004eefb:	call   0x14002ffd0
   14004ef00:	mov    QWORD PTR [rbx],rax
   14004ef03:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ef07:	jne    0x14005b3df
   14004ef0d:	lea    rdx,[rbp+0x28]
   14004ef11:	lea    rcx,[rsi+0x30]
   14004ef15:	mov    DWORD PTR [rbp+0x28],0xa8
   14004ef1c:	call   0x14002ffd0
   14004ef21:	lea    rcx,[rip+0x22fb0]        # 0x140071ed8
   14004ef28:	lea    rdx,[rbp+0x28]
   14004ef2c:	mov    DWORD PTR [rax],0xe7
   14004ef32:	mov    DWORD PTR [rax+0x4],0xa8
   14004ef39:	mov    QWORD PTR [rax+0x8],rcx
   14004ef3d:	lea    rcx,[rsi+0x10]
   14004ef41:	mov    DWORD PTR [rbp+0x30],0xa8
   14004ef48:	mov    DWORD PTR [rbp+0x28],0xe7
   14004ef4f:	call   0x14002ff30
   14004ef54:	lea    rdx,[rbp+0x30]
   14004ef58:	lea    rcx,[rsi+0x30]
   14004ef5c:	mov    rbx,rax
   14004ef5f:	call   0x14002ffd0
   14004ef64:	mov    QWORD PTR [rbx],rax
   14004ef67:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ef6b:	jne    0x14005b3df
   14004ef71:	lea    rdx,[rbp+0x28]
   14004ef75:	lea    rcx,[rsi+0x30]
   14004ef79:	mov    DWORD PTR [rbp+0x28],0xa9
   14004ef80:	call   0x14002ffd0
   14004ef85:	lea    rcx,[rip+0x22f6c]        # 0x140071ef8
   14004ef8c:	lea    rdx,[rbp+0x28]
   14004ef90:	mov    DWORD PTR [rax],0xea
   14004ef96:	mov    DWORD PTR [rax+0x4],0xa9
   14004ef9d:	mov    QWORD PTR [rax+0x8],rcx
   14004efa1:	lea    rcx,[rsi+0x10]
   14004efa5:	mov    DWORD PTR [rbp+0x30],0xa9
   14004efac:	mov    DWORD PTR [rbp+0x28],0xea
   14004efb3:	call   0x14002ff30
   14004efb8:	lea    rdx,[rbp+0x30]
   14004efbc:	lea    rcx,[rsi+0x30]
   14004efc0:	mov    rbx,rax
   14004efc3:	call   0x14002ffd0
   14004efc8:	mov    QWORD PTR [rbx],rax
   14004efcb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004efcf:	jne    0x14005b3df
   14004efd5:	lea    rdx,[rbp+0x28]
   14004efd9:	lea    rcx,[rsi+0x30]
   14004efdd:	mov    DWORD PTR [rbp+0x28],0xaa
   14004efe4:	call   0x14002ffd0
   14004efe9:	lea    rcx,[rip+0x22f28]        # 0x140071f18
   14004eff0:	lea    rdx,[rbp+0x28]
   14004eff4:	mov    DWORD PTR [rax],0xeb
   14004effa:	mov    DWORD PTR [rax+0x4],0xaa
   14004f001:	mov    QWORD PTR [rax+0x8],rcx
   14004f005:	lea    rcx,[rsi+0x10]
   14004f009:	mov    DWORD PTR [rbp+0x30],0xaa
   14004f010:	mov    DWORD PTR [rbp+0x28],0xeb
   14004f017:	call   0x14002ff30
   14004f01c:	lea    rdx,[rbp+0x30]
   14004f020:	lea    rcx,[rsi+0x30]
   14004f024:	mov    rbx,rax
   14004f027:	call   0x14002ffd0
   14004f02c:	mov    QWORD PTR [rbx],rax
   14004f02f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f033:	jne    0x14005b3df
   14004f039:	lea    rdx,[rbp+0x28]
   14004f03d:	lea    rcx,[rsi+0x30]
   14004f041:	mov    DWORD PTR [rbp+0x28],0xab
   14004f048:	call   0x14002ffd0
   14004f04d:	lea    rcx,[rip+0x22ee4]        # 0x140071f38
   14004f054:	lea    rdx,[rbp+0x28]
   14004f058:	mov    DWORD PTR [rax],0xec
   14004f05e:	mov    DWORD PTR [rax+0x4],0xab
   14004f065:	mov    QWORD PTR [rax+0x8],rcx
   14004f069:	lea    rcx,[rsi+0x10]
   14004f06d:	mov    DWORD PTR [rbp+0x30],0xab
   14004f074:	mov    DWORD PTR [rbp+0x28],0xec
   14004f07b:	call   0x14002ff30
   14004f080:	lea    rdx,[rbp+0x30]
   14004f084:	lea    rcx,[rsi+0x30]
   14004f088:	mov    rbx,rax
   14004f08b:	call   0x14002ffd0
   14004f090:	mov    QWORD PTR [rbx],rax
   14004f093:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f097:	jne    0x14005b3df
   14004f09d:	lea    rdx,[rbp+0x28]
   14004f0a1:	lea    rcx,[rsi+0x30]
   14004f0a5:	mov    DWORD PTR [rbp+0x28],0xac
   14004f0ac:	call   0x14002ffd0
   14004f0b1:	lea    rcx,[rip+0x22e98]        # 0x140071f50
   14004f0b8:	lea    rdx,[rbp+0x28]
   14004f0bc:	mov    DWORD PTR [rax],0xed
   14004f0c2:	mov    DWORD PTR [rax+0x4],0xac
   14004f0c9:	mov    QWORD PTR [rax+0x8],rcx
   14004f0cd:	lea    rcx,[rsi+0x10]
   14004f0d1:	mov    DWORD PTR [rbp+0x30],0xac
   14004f0d8:	mov    DWORD PTR [rbp+0x28],0xed
   14004f0df:	call   0x14002ff30
   14004f0e4:	lea    rdx,[rbp+0x30]
   14004f0e8:	lea    rcx,[rsi+0x30]
   14004f0ec:	mov    rbx,rax
   14004f0ef:	call   0x14002ffd0
   14004f0f4:	mov    QWORD PTR [rbx],rax
   14004f0f7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f0fb:	jne    0x14005b3df
   14004f101:	lea    rdx,[rbp+0x28]
   14004f105:	lea    rcx,[rsi+0x30]
   14004f109:	mov    DWORD PTR [rbp+0x28],0xad
   14004f110:	call   0x14002ffd0
   14004f115:	lea    rcx,[rip+0x22e4c]        # 0x140071f68
   14004f11c:	lea    rdx,[rbp+0x28]
   14004f120:	mov    DWORD PTR [rax],0xee
   14004f126:	mov    DWORD PTR [rax+0x4],0xad
   14004f12d:	mov    QWORD PTR [rax+0x8],rcx
   14004f131:	lea    rcx,[rsi+0x10]
   14004f135:	mov    DWORD PTR [rbp+0x30],0xad
   14004f13c:	mov    DWORD PTR [rbp+0x28],0xee
   14004f143:	call   0x14002ff30
   14004f148:	lea    rdx,[rbp+0x30]
   14004f14c:	lea    rcx,[rsi+0x30]
   14004f150:	mov    rbx,rax
   14004f153:	call   0x14002ffd0
   14004f158:	mov    QWORD PTR [rbx],rax
   14004f15b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f15f:	jne    0x14005b3df
   14004f165:	lea    rdx,[rbp+0x28]
   14004f169:	lea    rcx,[rsi+0x30]
   14004f16d:	mov    DWORD PTR [rbp+0x28],0xae
   14004f174:	call   0x14002ffd0
   14004f179:	lea    rcx,[rip+0x22df8]        # 0x140071f78
   14004f180:	lea    rdx,[rbp+0x28]
   14004f184:	mov    DWORD PTR [rax],0xef
   14004f18a:	mov    DWORD PTR [rax+0x4],0xae
   14004f191:	mov    QWORD PTR [rax+0x8],rcx
   14004f195:	lea    rcx,[rsi+0x10]
   14004f199:	mov    DWORD PTR [rbp+0x30],0xae
   14004f1a0:	mov    DWORD PTR [rbp+0x28],0xef
   14004f1a7:	call   0x14002ff30
   14004f1ac:	lea    rdx,[rbp+0x30]
   14004f1b0:	lea    rcx,[rsi+0x30]
   14004f1b4:	mov    rbx,rax
   14004f1b7:	call   0x14002ffd0
   14004f1bc:	mov    QWORD PTR [rbx],rax
   14004f1bf:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f1c3:	jne    0x14005b3df
   14004f1c9:	lea    rdx,[rbp+0x28]
   14004f1cd:	lea    rcx,[rsi+0x30]
   14004f1d1:	mov    DWORD PTR [rbp+0x28],0xaf
   14004f1d8:	call   0x14002ffd0
   14004f1dd:	lea    rcx,[rip+0x22dac]        # 0x140071f90
   14004f1e4:	lea    rdx,[rbp+0x28]
   14004f1e8:	mov    DWORD PTR [rax],0x187
   14004f1ee:	mov    DWORD PTR [rax+0x4],0xaf
   14004f1f5:	mov    QWORD PTR [rax+0x8],rcx
   14004f1f9:	lea    rcx,[rsi+0x10]
   14004f1fd:	mov    DWORD PTR [rbp+0x30],0xaf
   14004f204:	mov    DWORD PTR [rbp+0x28],0x187
   14004f20b:	call   0x14002ff30
   14004f210:	lea    rdx,[rbp+0x30]
   14004f214:	lea    rcx,[rsi+0x30]
   14004f218:	mov    rbx,rax
   14004f21b:	call   0x14002ffd0
   14004f220:	mov    QWORD PTR [rbx],rax
   14004f223:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f227:	jne    0x14005b3df
   14004f22d:	lea    rdx,[rbp+0x28]
   14004f231:	lea    rcx,[rsi+0x30]
   14004f235:	mov    DWORD PTR [rbp+0x28],0x8e
   14004f23c:	call   0x14002ffd0
   14004f241:	lea    rcx,[rip+0x22d68]        # 0x140071fb0
   14004f248:	lea    rdx,[rbp+0x28]
   14004f24c:	mov    DWORD PTR [rax],0x37e
   14004f252:	mov    DWORD PTR [rax+0x4],0x8e
   14004f259:	mov    QWORD PTR [rax+0x8],rcx
   14004f25d:	lea    rcx,[rsi+0x10]
   14004f261:	mov    DWORD PTR [rbp+0x30],0x8e
   14004f268:	mov    DWORD PTR [rbp+0x28],0x37e
   14004f26f:	call   0x14002ff30
   14004f274:	lea    rdx,[rbp+0x30]
   14004f278:	lea    rcx,[rsi+0x30]
   14004f27c:	mov    rbx,rax
   14004f27f:	call   0x14002ffd0
   14004f284:	mov    QWORD PTR [rbx],rax
   14004f287:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f28b:	jne    0x14005b3df
   14004f291:	lea    rdx,[rbp+0x28]
   14004f295:	lea    rcx,[rsi+0x30]
   14004f299:	mov    DWORD PTR [rbp+0x28],0x158
   14004f2a0:	call   0x14002ffd0
   14004f2a5:	lea    rcx,[rip+0x22d24]        # 0x140071fd0
   14004f2ac:	lea    rdx,[rbp+0x28]
   14004f2b0:	mov    DWORD PTR [rax],0x1e
   14004f2b6:	mov    DWORD PTR [rax+0x4],0x158
   14004f2bd:	mov    QWORD PTR [rax+0x8],rcx
   14004f2c1:	lea    rcx,[rsi+0x10]
   14004f2c5:	mov    DWORD PTR [rbp+0x30],0x158
   14004f2cc:	mov    DWORD PTR [rbp+0x28],0x1e
   14004f2d3:	call   0x14002ff30
   14004f2d8:	lea    rdx,[rbp+0x30]
   14004f2dc:	lea    rcx,[rsi+0x30]
   14004f2e0:	mov    rbx,rax
   14004f2e3:	call   0x14002ffd0
   14004f2e8:	mov    QWORD PTR [rbx],rax
   14004f2eb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f2ef:	jne    0x14005b3df
   14004f2f5:	lea    rdx,[rbp+0x28]
   14004f2f9:	lea    rcx,[rsi+0x30]
   14004f2fd:	mov    DWORD PTR [rbp+0x28],0x154
   14004f304:	call   0x14002ffd0
   14004f309:	lea    rcx,[rip+0x22cd8]        # 0x140071fe8
   14004f310:	lea    rdx,[rbp+0x28]
   14004f314:	mov    DWORD PTR [rax],0x1f
   14004f31a:	mov    DWORD PTR [rax+0x4],0x154
   14004f321:	mov    QWORD PTR [rax+0x8],rcx
   14004f325:	lea    rcx,[rsi+0x10]
   14004f329:	mov    DWORD PTR [rbp+0x30],0x154
   14004f330:	mov    DWORD PTR [rbp+0x28],0x1f
   14004f337:	call   0x14002ff30
   14004f33c:	lea    rdx,[rbp+0x30]
   14004f340:	lea    rcx,[rsi+0x30]
   14004f344:	mov    rbx,rax
   14004f347:	call   0x14002ffd0
   14004f34c:	mov    QWORD PTR [rbx],rax
   14004f34f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f353:	jne    0x14005b3df
   14004f359:	lea    rdx,[rbp+0x28]
   14004f35d:	lea    rcx,[rsi+0x30]
   14004f361:	mov    DWORD PTR [rbp+0x28],0x156
   14004f368:	call   0x14002ffd0
   14004f36d:	lea    rcx,[rip+0x22c8c]        # 0x140072000
   14004f374:	lea    rdx,[rbp+0x28]
   14004f378:	mov    DWORD PTR [rax],0x20
   14004f37e:	mov    DWORD PTR [rax+0x4],0x156
   14004f385:	mov    QWORD PTR [rax+0x8],rcx
   14004f389:	lea    rcx,[rsi+0x10]
   14004f38d:	mov    DWORD PTR [rbp+0x30],0x156
   14004f394:	mov    DWORD PTR [rbp+0x28],0x20
   14004f39b:	call   0x14002ff30
   14004f3a0:	lea    rdx,[rbp+0x30]
   14004f3a4:	lea    rcx,[rsi+0x30]
   14004f3a8:	mov    rbx,rax
   14004f3ab:	call   0x14002ffd0
   14004f3b0:	mov    QWORD PTR [rbx],rax
   14004f3b3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f3b7:	jne    0x14005b3df
   14004f3bd:	lea    rdx,[rbp+0x28]
   14004f3c1:	lea    rcx,[rsi+0x30]
   14004f3c5:	mov    DWORD PTR [rbp+0x28],0x155
   14004f3cc:	call   0x14002ffd0
   14004f3d1:	lea    rcx,[rip+0x22c40]        # 0x140072018
   14004f3d8:	lea    rdx,[rbp+0x28]
   14004f3dc:	mov    DWORD PTR [rax],0x21
   14004f3e2:	mov    DWORD PTR [rax+0x4],0x155
   14004f3e9:	mov    QWORD PTR [rax+0x8],rcx
   14004f3ed:	lea    rcx,[rsi+0x10]
   14004f3f1:	mov    DWORD PTR [rbp+0x30],0x155
   14004f3f8:	mov    DWORD PTR [rbp+0x28],0x21
   14004f3ff:	call   0x14002ff30
   14004f404:	lea    rdx,[rbp+0x30]
   14004f408:	lea    rcx,[rsi+0x30]
   14004f40c:	mov    rbx,rax
   14004f40f:	call   0x14002ffd0
   14004f414:	mov    QWORD PTR [rbx],rax
   14004f417:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f41b:	jne    0x14005b3df
   14004f421:	lea    rdx,[rbp+0x28]
   14004f425:	lea    rcx,[rsi+0x30]
   14004f429:	mov    DWORD PTR [rbp+0x28],0x157
   14004f430:	call   0x14002ffd0
   14004f435:	lea    rcx,[rip+0x22bf4]        # 0x140072030
   14004f43c:	lea    rdx,[rbp+0x28]
   14004f440:	mov    DWORD PTR [rax],0x22
   14004f446:	mov    DWORD PTR [rax+0x4],0x157
   14004f44d:	mov    QWORD PTR [rax+0x8],rcx
   14004f451:	lea    rcx,[rsi+0x10]
   14004f455:	mov    DWORD PTR [rbp+0x30],0x157
   14004f45c:	mov    DWORD PTR [rbp+0x28],0x22
   14004f463:	call   0x14002ff30
   14004f468:	lea    rdx,[rbp+0x30]
   14004f46c:	lea    rcx,[rsi+0x30]
   14004f470:	mov    rbx,rax
   14004f473:	call   0x14002ffd0
   14004f478:	mov    QWORD PTR [rbx],rax
   14004f47b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f47f:	jne    0x14005b3df
   14004f485:	lea    rdx,[rbp+0x28]
   14004f489:	lea    rcx,[rsi+0x30]
   14004f48d:	mov    DWORD PTR [rbp+0x28],0x162
   14004f494:	call   0x14002ffd0
   14004f499:	lea    rcx,[rip+0x22ba0]        # 0x140072040
   14004f4a0:	lea    rdx,[rbp+0x28]
   14004f4a4:	mov    DWORD PTR [rax],0x23
   14004f4aa:	mov    DWORD PTR [rax+0x4],0x162
   14004f4b1:	mov    QWORD PTR [rax+0x8],rcx
   14004f4b5:	lea    rcx,[rsi+0x10]
   14004f4b9:	mov    DWORD PTR [rbp+0x30],0x162
   14004f4c0:	mov    DWORD PTR [rbp+0x28],0x23
   14004f4c7:	call   0x14002ff30
   14004f4cc:	lea    rdx,[rbp+0x30]
   14004f4d0:	lea    rcx,[rsi+0x30]
   14004f4d4:	mov    rbx,rax
   14004f4d7:	call   0x14002ffd0
   14004f4dc:	mov    QWORD PTR [rbx],rax
   14004f4df:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f4e3:	jne    0x14005b3df
   14004f4e9:	lea    rdx,[rbp+0x28]
   14004f4ed:	lea    rcx,[rsi+0x30]
   14004f4f1:	mov    DWORD PTR [rbp+0x28],0x15e
   14004f4f8:	call   0x14002ffd0
   14004f4fd:	lea    rcx,[rip+0x22b54]        # 0x140072058
   14004f504:	lea    rdx,[rbp+0x28]
   14004f508:	mov    DWORD PTR [rax],0x24
   14004f50e:	mov    DWORD PTR [rax+0x4],0x15e
   14004f515:	mov    QWORD PTR [rax+0x8],rcx
   14004f519:	lea    rcx,[rsi+0x10]
   14004f51d:	mov    DWORD PTR [rbp+0x30],0x15e
   14004f524:	mov    DWORD PTR [rbp+0x28],0x24
   14004f52b:	call   0x14002ff30
   14004f530:	lea    rdx,[rbp+0x30]
   14004f534:	lea    rcx,[rsi+0x30]
   14004f538:	mov    rbx,rax
   14004f53b:	call   0x14002ffd0
   14004f540:	mov    QWORD PTR [rbx],rax
   14004f543:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f547:	jne    0x14005b3df
   14004f54d:	lea    rdx,[rbp+0x28]
   14004f551:	lea    rcx,[rsi+0x30]
   14004f555:	mov    DWORD PTR [rbp+0x28],0x160
   14004f55c:	call   0x14002ffd0
   14004f561:	lea    rcx,[rip+0x22b08]        # 0x140072070
   14004f568:	lea    rdx,[rbp+0x28]
   14004f56c:	mov    DWORD PTR [rax],0x25
   14004f572:	mov    DWORD PTR [rax+0x4],0x160
   14004f579:	mov    QWORD PTR [rax+0x8],rcx
   14004f57d:	lea    rcx,[rsi+0x10]
   14004f581:	mov    DWORD PTR [rbp+0x30],0x160
   14004f588:	mov    DWORD PTR [rbp+0x28],0x25
   14004f58f:	call   0x14002ff30
   14004f594:	lea    rdx,[rbp+0x30]
   14004f598:	lea    rcx,[rsi+0x30]
   14004f59c:	mov    rbx,rax
   14004f59f:	call   0x14002ffd0
   14004f5a4:	mov    QWORD PTR [rbx],rax
   14004f5a7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f5ab:	jne    0x14005b3df
   14004f5b1:	lea    rdx,[rbp+0x28]
   14004f5b5:	lea    rcx,[rsi+0x30]
   14004f5b9:	mov    DWORD PTR [rbp+0x28],0x15f
   14004f5c0:	call   0x14002ffd0
   14004f5c5:	lea    rcx,[rip+0x22abc]        # 0x140072088
   14004f5cc:	lea    rdx,[rbp+0x28]
   14004f5d0:	mov    DWORD PTR [rax],0x26
   14004f5d6:	mov    DWORD PTR [rax+0x4],0x15f
   14004f5dd:	mov    QWORD PTR [rax+0x8],rcx
   14004f5e1:	lea    rcx,[rsi+0x10]
   14004f5e5:	mov    DWORD PTR [rbp+0x30],0x15f
   14004f5ec:	mov    DWORD PTR [rbp+0x28],0x26
   14004f5f3:	call   0x14002ff30
   14004f5f8:	lea    rdx,[rbp+0x30]
   14004f5fc:	lea    rcx,[rsi+0x30]
   14004f600:	mov    rbx,rax
   14004f603:	call   0x14002ffd0
   14004f608:	mov    QWORD PTR [rbx],rax
   14004f60b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f60f:	jne    0x14005b3df
   14004f615:	lea    rdx,[rbp+0x28]
   14004f619:	lea    rcx,[rsi+0x30]
   14004f61d:	mov    DWORD PTR [rbp+0x28],0x161
   14004f624:	call   0x14002ffd0
   14004f629:	lea    rcx,[rip+0x22a70]        # 0x1400720a0
   14004f630:	lea    rdx,[rbp+0x28]
   14004f634:	mov    DWORD PTR [rax],0x27
   14004f63a:	mov    DWORD PTR [rax+0x4],0x161
   14004f641:	mov    QWORD PTR [rax+0x8],rcx
   14004f645:	lea    rcx,[rsi+0x10]
   14004f649:	mov    DWORD PTR [rbp+0x30],0x161
   14004f650:	mov    DWORD PTR [rbp+0x28],0x27
   14004f657:	call   0x14002ff30
   14004f65c:	lea    rdx,[rbp+0x30]
   14004f660:	lea    rcx,[rsi+0x30]
   14004f664:	mov    rbx,rax
   14004f667:	call   0x14002ffd0
   14004f66c:	mov    QWORD PTR [rbx],rax
   14004f66f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f673:	jne    0x14005b3df
   14004f679:	lea    rdx,[rbp+0x28]
   14004f67d:	lea    rcx,[rsi+0x30]
   14004f681:	mov    DWORD PTR [rbp+0x28],0x16c
   14004f688:	call   0x14002ffd0
   14004f68d:	lea    rcx,[rip+0x22a1c]        # 0x1400720b0
   14004f694:	lea    rdx,[rbp+0x28]
   14004f698:	mov    DWORD PTR [rax],0x28
   14004f69e:	mov    DWORD PTR [rax+0x4],0x16c
   14004f6a5:	mov    QWORD PTR [rax+0x8],rcx
   14004f6a9:	lea    rcx,[rsi+0x10]
   14004f6ad:	mov    DWORD PTR [rbp+0x30],0x16c
   14004f6b4:	mov    DWORD PTR [rbp+0x28],0x28
   14004f6bb:	call   0x14002ff30
   14004f6c0:	lea    rdx,[rbp+0x30]
   14004f6c4:	lea    rcx,[rsi+0x30]
   14004f6c8:	mov    rbx,rax
   14004f6cb:	call   0x14002ffd0
   14004f6d0:	mov    QWORD PTR [rbx],rax
   14004f6d3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f6d7:	jne    0x14005b3df
   14004f6dd:	lea    rdx,[rbp+0x28]
   14004f6e1:	lea    rcx,[rsi+0x30]
   14004f6e5:	mov    DWORD PTR [rbp+0x28],0x168
   14004f6ec:	call   0x14002ffd0
   14004f6f1:	lea    rcx,[rip+0x229d0]        # 0x1400720c8
   14004f6f8:	lea    rdx,[rbp+0x28]
   14004f6fc:	mov    DWORD PTR [rax],0x29
   14004f702:	mov    DWORD PTR [rax+0x4],0x168
   14004f709:	mov    QWORD PTR [rax+0x8],rcx
   14004f70d:	lea    rcx,[rsi+0x10]
   14004f711:	mov    DWORD PTR [rbp+0x30],0x168
   14004f718:	mov    DWORD PTR [rbp+0x28],0x29
   14004f71f:	call   0x14002ff30
   14004f724:	lea    rdx,[rbp+0x30]
   14004f728:	lea    rcx,[rsi+0x30]
   14004f72c:	mov    rbx,rax
   14004f72f:	call   0x14002ffd0
   14004f734:	mov    QWORD PTR [rbx],rax
   14004f737:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f73b:	jne    0x14005b3df
   14004f741:	lea    rdx,[rbp+0x28]
   14004f745:	lea    rcx,[rsi+0x30]
   14004f749:	mov    DWORD PTR [rbp+0x28],0x16a
   14004f750:	call   0x14002ffd0
   14004f755:	lea    rcx,[rip+0x22984]        # 0x1400720e0
   14004f75c:	lea    rdx,[rbp+0x28]
   14004f760:	mov    DWORD PTR [rax],0x2a
   14004f766:	mov    DWORD PTR [rax+0x4],0x16a
   14004f76d:	mov    QWORD PTR [rax+0x8],rcx
   14004f771:	lea    rcx,[rsi+0x10]
   14004f775:	mov    DWORD PTR [rbp+0x30],0x16a
   14004f77c:	mov    DWORD PTR [rbp+0x28],0x2a
   14004f783:	call   0x14002ff30
   14004f788:	lea    rdx,[rbp+0x30]
   14004f78c:	lea    rcx,[rsi+0x30]
   14004f790:	mov    rbx,rax
   14004f793:	call   0x14002ffd0
   14004f798:	mov    QWORD PTR [rbx],rax
   14004f79b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f79f:	jne    0x14005b3df
   14004f7a5:	lea    rdx,[rbp+0x28]
   14004f7a9:	lea    rcx,[rsi+0x30]
   14004f7ad:	mov    DWORD PTR [rbp+0x28],0x169
   14004f7b4:	call   0x14002ffd0
   14004f7b9:	lea    rcx,[rip+0x22938]        # 0x1400720f8
   14004f7c0:	lea    rdx,[rbp+0x28]
   14004f7c4:	mov    DWORD PTR [rax],0x2b
   14004f7ca:	mov    DWORD PTR [rax+0x4],0x169
   14004f7d1:	mov    QWORD PTR [rax+0x8],rcx
   14004f7d5:	lea    rcx,[rsi+0x10]
   14004f7d9:	mov    DWORD PTR [rbp+0x30],0x169
   14004f7e0:	mov    DWORD PTR [rbp+0x28],0x2b
   14004f7e7:	call   0x14002ff30
   14004f7ec:	lea    rdx,[rbp+0x30]
   14004f7f0:	lea    rcx,[rsi+0x30]
   14004f7f4:	mov    rbx,rax
   14004f7f7:	call   0x14002ffd0
   14004f7fc:	mov    QWORD PTR [rbx],rax
   14004f7ff:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f803:	jne    0x14005b3df
   14004f809:	lea    rdx,[rbp+0x28]
   14004f80d:	lea    rcx,[rsi+0x30]
   14004f811:	mov    DWORD PTR [rbp+0x28],0x16b
   14004f818:	call   0x14002ffd0
   14004f81d:	lea    rcx,[rip+0x228ec]        # 0x140072110
   14004f824:	lea    rdx,[rbp+0x28]
   14004f828:	mov    DWORD PTR [rax],0x2c
   14004f82e:	mov    DWORD PTR [rax+0x4],0x16b
   14004f835:	mov    QWORD PTR [rax+0x8],rcx
   14004f839:	lea    rcx,[rsi+0x10]
   14004f83d:	mov    DWORD PTR [rbp+0x30],0x16b
   14004f844:	mov    DWORD PTR [rbp+0x28],0x2c
   14004f84b:	call   0x14002ff30
   14004f850:	lea    rdx,[rbp+0x30]
   14004f854:	lea    rcx,[rsi+0x30]
   14004f858:	mov    rbx,rax
   14004f85b:	call   0x14002ffd0
   14004f860:	mov    QWORD PTR [rbx],rax
   14004f863:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f867:	jne    0x14005b3df
   14004f86d:	lea    rdx,[rbp+0x28]
   14004f871:	lea    rcx,[rsi+0x30]
   14004f875:	mov    DWORD PTR [rbp+0x28],0x176
   14004f87c:	call   0x14002ffd0
   14004f881:	lea    rcx,[rip+0x22898]        # 0x140072120
   14004f888:	lea    rdx,[rbp+0x28]
   14004f88c:	mov    DWORD PTR [rax],0x2d
   14004f892:	mov    DWORD PTR [rax+0x4],0x176
   14004f899:	mov    QWORD PTR [rax+0x8],rcx
   14004f89d:	lea    rcx,[rsi+0x10]
   14004f8a1:	mov    DWORD PTR [rbp+0x30],0x176
   14004f8a8:	mov    DWORD PTR [rbp+0x28],0x2d
   14004f8af:	call   0x14002ff30
   14004f8b4:	lea    rdx,[rbp+0x30]
   14004f8b8:	lea    rcx,[rsi+0x30]
   14004f8bc:	mov    rbx,rax
   14004f8bf:	call   0x14002ffd0
   14004f8c4:	mov    QWORD PTR [rbx],rax
   14004f8c7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f8cb:	jne    0x14005b3df
   14004f8d1:	lea    rdx,[rbp+0x28]
   14004f8d5:	lea    rcx,[rsi+0x30]
   14004f8d9:	mov    DWORD PTR [rbp+0x28],0x172
   14004f8e0:	call   0x14002ffd0
   14004f8e5:	lea    rcx,[rip+0x2284c]        # 0x140072138
   14004f8ec:	lea    rdx,[rbp+0x28]
   14004f8f0:	mov    DWORD PTR [rax],0x2e
   14004f8f6:	mov    DWORD PTR [rax+0x4],0x172
   14004f8fd:	mov    QWORD PTR [rax+0x8],rcx
   14004f901:	lea    rcx,[rsi+0x10]
   14004f905:	mov    DWORD PTR [rbp+0x30],0x172
   14004f90c:	mov    DWORD PTR [rbp+0x28],0x2e
   14004f913:	call   0x14002ff30
   14004f918:	lea    rdx,[rbp+0x30]
   14004f91c:	lea    rcx,[rsi+0x30]
   14004f920:	mov    rbx,rax
   14004f923:	call   0x14002ffd0
   14004f928:	mov    QWORD PTR [rbx],rax
   14004f92b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f92f:	jne    0x14005b3df
   14004f935:	lea    rdx,[rbp+0x28]
   14004f939:	lea    rcx,[rsi+0x30]
   14004f93d:	mov    DWORD PTR [rbp+0x28],0x174
   14004f944:	call   0x14002ffd0
   14004f949:	lea    rcx,[rip+0x22800]        # 0x140072150
   14004f950:	lea    rdx,[rbp+0x28]
   14004f954:	mov    DWORD PTR [rax],0x2f
   14004f95a:	mov    DWORD PTR [rax+0x4],0x174
   14004f961:	mov    QWORD PTR [rax+0x8],rcx
   14004f965:	lea    rcx,[rsi+0x10]
   14004f969:	mov    DWORD PTR [rbp+0x30],0x174
   14004f970:	mov    DWORD PTR [rbp+0x28],0x2f
   14004f977:	call   0x14002ff30
   14004f97c:	lea    rdx,[rbp+0x30]
   14004f980:	lea    rcx,[rsi+0x30]
   14004f984:	mov    rbx,rax
   14004f987:	call   0x14002ffd0
   14004f98c:	mov    QWORD PTR [rbx],rax
   14004f98f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f993:	jne    0x14005b3df
   14004f999:	lea    rdx,[rbp+0x28]
   14004f99d:	lea    rcx,[rsi+0x30]
   14004f9a1:	mov    DWORD PTR [rbp+0x28],0x173
   14004f9a8:	call   0x14002ffd0
   14004f9ad:	lea    rcx,[rip+0x227b4]        # 0x140072168
   14004f9b4:	lea    rdx,[rbp+0x28]
   14004f9b8:	mov    DWORD PTR [rax],0x30
   14004f9be:	mov    DWORD PTR [rax+0x4],0x173
   14004f9c5:	mov    QWORD PTR [rax+0x8],rcx
   14004f9c9:	lea    rcx,[rsi+0x10]
   14004f9cd:	mov    DWORD PTR [rbp+0x30],0x173
   14004f9d4:	mov    DWORD PTR [rbp+0x28],0x30
   14004f9db:	call   0x14002ff30
   14004f9e0:	lea    rdx,[rbp+0x30]
   14004f9e4:	lea    rcx,[rsi+0x30]
   14004f9e8:	mov    rbx,rax
   14004f9eb:	call   0x14002ffd0
   14004f9f0:	mov    QWORD PTR [rbx],rax
   14004f9f3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004f9f7:	jne    0x14005b3df
   14004f9fd:	lea    rdx,[rbp+0x28]
   14004fa01:	lea    rcx,[rsi+0x30]
   14004fa05:	mov    DWORD PTR [rbp+0x28],0x175
   14004fa0c:	call   0x14002ffd0
   14004fa11:	lea    rcx,[rip+0x22768]        # 0x140072180
   14004fa18:	lea    rdx,[rbp+0x28]
   14004fa1c:	mov    DWORD PTR [rax],0x31
   14004fa22:	mov    DWORD PTR [rax+0x4],0x175
   14004fa29:	mov    QWORD PTR [rax+0x8],rcx
   14004fa2d:	lea    rcx,[rsi+0x10]
   14004fa31:	mov    DWORD PTR [rbp+0x30],0x175
   14004fa38:	mov    DWORD PTR [rbp+0x28],0x31
   14004fa3f:	call   0x14002ff30
   14004fa44:	lea    rdx,[rbp+0x30]
   14004fa48:	lea    rcx,[rsi+0x30]
   14004fa4c:	mov    rbx,rax
   14004fa4f:	call   0x14002ffd0
   14004fa54:	mov    QWORD PTR [rbx],rax
   14004fa57:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fa5b:	jne    0x14005b3df
   14004fa61:	lea    rdx,[rbp+0x28]
   14004fa65:	lea    rcx,[rsi+0x30]
   14004fa69:	mov    DWORD PTR [rbp+0x28],0x180
   14004fa70:	call   0x14002ffd0
   14004fa75:	lea    rcx,[rip+0x22714]        # 0x140072190
   14004fa7c:	lea    rdx,[rbp+0x28]
   14004fa80:	mov    DWORD PTR [rax],0x32
   14004fa86:	mov    DWORD PTR [rax+0x4],0x180
   14004fa8d:	mov    QWORD PTR [rax+0x8],rcx
   14004fa91:	lea    rcx,[rsi+0x10]
   14004fa95:	mov    DWORD PTR [rbp+0x30],0x180
   14004fa9c:	mov    DWORD PTR [rbp+0x28],0x32
   14004faa3:	call   0x14002ff30
   14004faa8:	lea    rdx,[rbp+0x30]
   14004faac:	lea    rcx,[rsi+0x30]
   14004fab0:	mov    rbx,rax
   14004fab3:	call   0x14002ffd0
   14004fab8:	mov    QWORD PTR [rbx],rax
   14004fabb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fabf:	jne    0x14005b3df
   14004fac5:	lea    rdx,[rbp+0x28]
   14004fac9:	lea    rcx,[rsi+0x30]
   14004facd:	mov    DWORD PTR [rbp+0x28],0x17c
   14004fad4:	call   0x14002ffd0
   14004fad9:	lea    rcx,[rip+0x226c8]        # 0x1400721a8
   14004fae0:	lea    rdx,[rbp+0x28]
   14004fae4:	mov    DWORD PTR [rax],0x33
   14004faea:	mov    DWORD PTR [rax+0x4],0x17c
   14004faf1:	mov    QWORD PTR [rax+0x8],rcx
   14004faf5:	lea    rcx,[rsi+0x10]
   14004faf9:	mov    DWORD PTR [rbp+0x30],0x17c
   14004fb00:	mov    DWORD PTR [rbp+0x28],0x33
   14004fb07:	call   0x14002ff30
   14004fb0c:	lea    rdx,[rbp+0x30]
   14004fb10:	lea    rcx,[rsi+0x30]
   14004fb14:	mov    rbx,rax
   14004fb17:	call   0x14002ffd0
   14004fb1c:	mov    QWORD PTR [rbx],rax
   14004fb1f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fb23:	jne    0x14005b3df
   14004fb29:	lea    rdx,[rbp+0x28]
   14004fb2d:	lea    rcx,[rsi+0x30]
   14004fb31:	mov    DWORD PTR [rbp+0x28],0x17e
   14004fb38:	call   0x14002ffd0
   14004fb3d:	lea    rcx,[rip+0x2267c]        # 0x1400721c0
   14004fb44:	lea    rdx,[rbp+0x28]
   14004fb48:	mov    DWORD PTR [rax],0x34
   14004fb4e:	mov    DWORD PTR [rax+0x4],0x17e
   14004fb55:	mov    QWORD PTR [rax+0x8],rcx
   14004fb59:	lea    rcx,[rsi+0x10]
   14004fb5d:	mov    DWORD PTR [rbp+0x30],0x17e
   14004fb64:	mov    DWORD PTR [rbp+0x28],0x34
   14004fb6b:	call   0x14002ff30
   14004fb70:	lea    rdx,[rbp+0x30]
   14004fb74:	lea    rcx,[rsi+0x30]
   14004fb78:	mov    rbx,rax
   14004fb7b:	call   0x14002ffd0
   14004fb80:	mov    QWORD PTR [rbx],rax
   14004fb83:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fb87:	jne    0x14005b3df
   14004fb8d:	lea    rdx,[rbp+0x28]
   14004fb91:	lea    rcx,[rsi+0x30]
   14004fb95:	mov    DWORD PTR [rbp+0x28],0x17d
   14004fb9c:	call   0x14002ffd0
   14004fba1:	lea    rcx,[rip+0x22630]        # 0x1400721d8
   14004fba8:	lea    rdx,[rbp+0x28]
   14004fbac:	mov    DWORD PTR [rax],0x35
   14004fbb2:	mov    DWORD PTR [rax+0x4],0x17d
   14004fbb9:	mov    QWORD PTR [rax+0x8],rcx
   14004fbbd:	lea    rcx,[rsi+0x10]
   14004fbc1:	mov    DWORD PTR [rbp+0x30],0x17d
   14004fbc8:	mov    DWORD PTR [rbp+0x28],0x35
   14004fbcf:	call   0x14002ff30
   14004fbd4:	lea    rdx,[rbp+0x30]
   14004fbd8:	lea    rcx,[rsi+0x30]
   14004fbdc:	mov    rbx,rax
   14004fbdf:	call   0x14002ffd0
   14004fbe4:	mov    QWORD PTR [rbx],rax
   14004fbe7:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fbeb:	jne    0x14005b3df
   14004fbf1:	lea    rdx,[rbp+0x28]
   14004fbf5:	lea    rcx,[rsi+0x30]
   14004fbf9:	mov    DWORD PTR [rbp+0x28],0x17f
   14004fc00:	call   0x14002ffd0
   14004fc05:	lea    rcx,[rip+0x225e4]        # 0x1400721f0
   14004fc0c:	lea    rdx,[rbp+0x28]
   14004fc10:	mov    DWORD PTR [rax],0x36
   14004fc16:	mov    DWORD PTR [rax+0x4],0x17f
   14004fc1d:	mov    QWORD PTR [rax+0x8],rcx
   14004fc21:	lea    rcx,[rsi+0x10]
   14004fc25:	mov    DWORD PTR [rbp+0x30],0x17f
   14004fc2c:	mov    DWORD PTR [rbp+0x28],0x36
   14004fc33:	call   0x14002ff30
   14004fc38:	lea    rdx,[rbp+0x30]
   14004fc3c:	lea    rcx,[rsi+0x30]
   14004fc40:	mov    rbx,rax
   14004fc43:	call   0x14002ffd0
   14004fc48:	mov    QWORD PTR [rbx],rax
   14004fc4b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fc4f:	jne    0x14005b3df
   14004fc55:	lea    rdx,[rbp+0x28]
   14004fc59:	lea    rcx,[rsi+0x30]
   14004fc5d:	mov    DWORD PTR [rbp+0x28],0x18a
   14004fc64:	call   0x14002ffd0
   14004fc69:	lea    rcx,[rip+0x22590]        # 0x140072200
   14004fc70:	lea    rdx,[rbp+0x28]
   14004fc74:	mov    DWORD PTR [rax],0x37
   14004fc7a:	mov    DWORD PTR [rax+0x4],0x18a
   14004fc81:	mov    QWORD PTR [rax+0x8],rcx
   14004fc85:	lea    rcx,[rsi+0x10]
   14004fc89:	mov    DWORD PTR [rbp+0x30],0x18a
   14004fc90:	mov    DWORD PTR [rbp+0x28],0x37
   14004fc97:	call   0x14002ff30
   14004fc9c:	lea    rdx,[rbp+0x30]
   14004fca0:	lea    rcx,[rsi+0x30]
   14004fca4:	mov    rbx,rax
   14004fca7:	call   0x14002ffd0
   14004fcac:	mov    QWORD PTR [rbx],rax
   14004fcaf:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fcb3:	jne    0x14005b3df
   14004fcb9:	lea    rdx,[rbp+0x28]
   14004fcbd:	lea    rcx,[rsi+0x30]
   14004fcc1:	mov    DWORD PTR [rbp+0x28],0x186
   14004fcc8:	call   0x14002ffd0
   14004fccd:	lea    rcx,[rip+0x22544]        # 0x140072218
   14004fcd4:	lea    rdx,[rbp+0x28]
   14004fcd8:	mov    DWORD PTR [rax],0x38
   14004fcde:	mov    DWORD PTR [rax+0x4],0x186
   14004fce5:	mov    QWORD PTR [rax+0x8],rcx
   14004fce9:	lea    rcx,[rsi+0x10]
   14004fced:	mov    DWORD PTR [rbp+0x30],0x186
   14004fcf4:	mov    DWORD PTR [rbp+0x28],0x38
   14004fcfb:	call   0x14002ff30
   14004fd00:	lea    rdx,[rbp+0x30]
   14004fd04:	lea    rcx,[rsi+0x30]
   14004fd08:	mov    rbx,rax
   14004fd0b:	call   0x14002ffd0
   14004fd10:	mov    QWORD PTR [rbx],rax
   14004fd13:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fd17:	jne    0x14005b3df
   14004fd1d:	lea    rdx,[rbp+0x28]
   14004fd21:	lea    rcx,[rsi+0x30]
   14004fd25:	mov    DWORD PTR [rbp+0x28],0x188
   14004fd2c:	call   0x14002ffd0
   14004fd31:	lea    rcx,[rip+0x224f8]        # 0x140072230
   14004fd38:	lea    rdx,[rbp+0x28]
   14004fd3c:	mov    DWORD PTR [rax],0x39
   14004fd42:	mov    DWORD PTR [rax+0x4],0x188
   14004fd49:	mov    QWORD PTR [rax+0x8],rcx
   14004fd4d:	lea    rcx,[rsi+0x10]
   14004fd51:	mov    DWORD PTR [rbp+0x30],0x188
   14004fd58:	mov    DWORD PTR [rbp+0x28],0x39
   14004fd5f:	call   0x14002ff30
   14004fd64:	lea    rdx,[rbp+0x30]
   14004fd68:	lea    rcx,[rsi+0x30]
   14004fd6c:	mov    rbx,rax
   14004fd6f:	call   0x14002ffd0
   14004fd74:	mov    QWORD PTR [rbx],rax
   14004fd77:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fd7b:	jne    0x14005b3df
   14004fd81:	lea    rdx,[rbp+0x28]
   14004fd85:	lea    rcx,[rsi+0x30]
   14004fd89:	mov    DWORD PTR [rbp+0x28],0x187
   14004fd90:	call   0x14002ffd0
   14004fd95:	lea    rcx,[rip+0x224ac]        # 0x140072248
   14004fd9c:	lea    rdx,[rbp+0x28]
   14004fda0:	mov    DWORD PTR [rax],0x3a
   14004fda6:	mov    DWORD PTR [rax+0x4],0x187
   14004fdad:	mov    QWORD PTR [rax+0x8],rcx
   14004fdb1:	lea    rcx,[rsi+0x10]
   14004fdb5:	mov    DWORD PTR [rbp+0x30],0x187
   14004fdbc:	mov    DWORD PTR [rbp+0x28],0x3a
   14004fdc3:	call   0x14002ff30
   14004fdc8:	lea    rdx,[rbp+0x30]
   14004fdcc:	lea    rcx,[rsi+0x30]
   14004fdd0:	mov    rbx,rax
   14004fdd3:	call   0x14002ffd0
   14004fdd8:	mov    QWORD PTR [rbx],rax
   14004fddb:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fddf:	jne    0x14005b3df
   14004fde5:	lea    rdx,[rbp+0x28]
   14004fde9:	lea    rcx,[rsi+0x30]
   14004fded:	mov    DWORD PTR [rbp+0x28],0x189
   14004fdf4:	call   0x14002ffd0
   14004fdf9:	lea    rcx,[rip+0x22460]        # 0x140072260
   14004fe00:	lea    rdx,[rbp+0x28]
   14004fe04:	mov    DWORD PTR [rax],0x3b
   14004fe0a:	mov    DWORD PTR [rax+0x4],0x189
   14004fe11:	mov    QWORD PTR [rax+0x8],rcx
   14004fe15:	lea    rcx,[rsi+0x10]
   14004fe19:	mov    DWORD PTR [rbp+0x30],0x189
   14004fe20:	mov    DWORD PTR [rbp+0x28],0x3b
   14004fe27:	call   0x14002ff30
   14004fe2c:	lea    rdx,[rbp+0x30]
   14004fe30:	lea    rcx,[rsi+0x30]
   14004fe34:	mov    rbx,rax
   14004fe37:	call   0x14002ffd0
   14004fe3c:	mov    QWORD PTR [rbx],rax
   14004fe3f:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fe43:	jne    0x14005b3df
   14004fe49:	lea    rdx,[rbp+0x28]
   14004fe4d:	lea    rcx,[rsi+0x30]
   14004fe51:	mov    DWORD PTR [rbp+0x28],0x194
   14004fe58:	call   0x14002ffd0
   14004fe5d:	lea    rcx,[rip+0x2240c]        # 0x140072270
   14004fe64:	lea    rdx,[rbp+0x28]
   14004fe68:	mov    DWORD PTR [rax],0xf0
   14004fe6e:	mov    DWORD PTR [rax+0x4],0x194
   14004fe75:	mov    QWORD PTR [rax+0x8],rcx
   14004fe79:	lea    rcx,[rsi+0x10]
   14004fe7d:	mov    DWORD PTR [rbp+0x30],0x194
   14004fe84:	mov    DWORD PTR [rbp+0x28],0xf0
   14004fe8b:	call   0x14002ff30
   14004fe90:	lea    rdx,[rbp+0x30]
   14004fe94:	lea    rcx,[rsi+0x30]
   14004fe98:	mov    rbx,rax
   14004fe9b:	call   0x14002ffd0
   14004fea0:	mov    QWORD PTR [rbx],rax
   14004fea3:	cmp    DWORD PTR [rsi+0x8],r12d
   14004fea7:	jne    0x14005b3df
   14004fead:	lea    rdx,[rbp+0x28]
   14004feb1:	lea    rcx,[rsi+0x30]
   14004feb5:	mov    DWORD PTR [rbp+0x28],0x190
   14004febc:	call   0x14002ffd0
   14004fec1:	lea    rcx,[rip+0x223c0]        # 0x140072288
   14004fec8:	lea    rdx,[rbp+0x28]
   14004fecc:	mov    DWORD PTR [rax],0xf1
   14004fed2:	mov    DWORD PTR [rax+0x4],0x190
   14004fed9:	mov    QWORD PTR [rax+0x8],rcx
   14004fedd:	lea    rcx,[rsi+0x10]
   14004fee1:	mov    DWORD PTR [rbp+0x30],0x190
   14004fee8:	mov    DWORD PTR [rbp+0x28],0xf1
   14004feef:	call   0x14002ff30
   14004fef4:	lea    rdx,[rbp+0x30]
   14004fef8:	lea    rcx,[rsi+0x30]
   14004fefc:	mov    rbx,rax
   14004feff:	call   0x14002ffd0
   14004ff04:	mov    QWORD PTR [rbx],rax
   14004ff07:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ff0b:	jne    0x14005b3df
   14004ff11:	lea    rdx,[rbp+0x28]
   14004ff15:	lea    rcx,[rsi+0x30]
   14004ff19:	mov    DWORD PTR [rbp+0x28],0x192
   14004ff20:	call   0x14002ffd0
   14004ff25:	lea    rcx,[rip+0x22374]        # 0x1400722a0
   14004ff2c:	lea    rdx,[rbp+0x28]
   14004ff30:	mov    DWORD PTR [rax],0xf2
   14004ff36:	mov    DWORD PTR [rax+0x4],0x192
   14004ff3d:	mov    QWORD PTR [rax+0x8],rcx
   14004ff41:	lea    rcx,[rsi+0x10]
   14004ff45:	mov    DWORD PTR [rbp+0x30],0x192
   14004ff4c:	mov    DWORD PTR [rbp+0x28],0xf2
   14004ff53:	call   0x14002ff30
   14004ff58:	lea    rdx,[rbp+0x30]
   14004ff5c:	lea    rcx,[rsi+0x30]
   14004ff60:	mov    rbx,rax
   14004ff63:	call   0x14002ffd0
   14004ff68:	mov    QWORD PTR [rbx],rax
   14004ff6b:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ff6f:	jne    0x14005b3df
   14004ff75:	lea    rdx,[rbp+0x28]
   14004ff79:	lea    rcx,[rsi+0x30]
   14004ff7d:	mov    DWORD PTR [rbp+0x28],0x191
   14004ff84:	call   0x14002ffd0
   14004ff89:	lea    rcx,[rip+0x22328]        # 0x1400722b8
   14004ff90:	lea    rdx,[rbp+0x28]
   14004ff94:	mov    DWORD PTR [rax],0xf3
   14004ff9a:	mov    DWORD PTR [rax+0x4],0x191
   14004ffa1:	mov    QWORD PTR [rax+0x8],rcx
   14004ffa5:	lea    rcx,[rsi+0x10]
   14004ffa9:	mov    DWORD PTR [rbp+0x30],0x191
   14004ffb0:	mov    DWORD PTR [rbp+0x28],0xf3
   14004ffb7:	call   0x14002ff30
   14004ffbc:	lea    rdx,[rbp+0x30]
   14004ffc0:	lea    rcx,[rsi+0x30]
   14004ffc4:	mov    rbx,rax
   14004ffc7:	call   0x14002ffd0
   14004ffcc:	mov    QWORD PTR [rbx],rax
   14004ffcf:	cmp    DWORD PTR [rsi+0x8],r12d
   14004ffd3:	jne    0x14005b3df
   14004ffd9:	lea    rdx,[rbp+0x28]
   14004ffdd:	lea    rcx,[rsi+0x30]
   14004ffe1:	mov    DWORD PTR [rbp+0x28],0x193
   14004ffe8:	call   0x14002ffd0
   14004ffed:	lea    rcx,[rip+0x222dc]        # 0x1400722d0
   14004fff4:	lea    rdx,[rbp+0x28]
   14004fff8:	mov    DWORD PTR [rax],0xf4
   14004fffe:	mov    DWORD PTR [rax+0x4],0x193
   140050005:	mov    QWORD PTR [rax+0x8],rcx
   140050009:	lea    rcx,[rsi+0x10]
   14005000d:	mov    DWORD PTR [rbp+0x30],0x193
   140050014:	mov    DWORD PTR [rbp+0x28],0xf4
   14005001b:	call   0x14002ff30
   140050020:	lea    rdx,[rbp+0x30]
   140050024:	lea    rcx,[rsi+0x30]
   140050028:	mov    rbx,rax
   14005002b:	call   0x14002ffd0
   140050030:	mov    QWORD PTR [rbx],rax
   140050033:	cmp    DWORD PTR [rsi+0x8],r12d
   140050037:	jne    0x14005b3df
   14005003d:	lea    rdx,[rbp+0x28]
   140050041:	lea    rcx,[rsi+0x30]
   140050045:	mov    DWORD PTR [rbp+0x28],0x19e
   14005004c:	call   0x14002ffd0
   140050051:	lea    rcx,[rip+0x22288]        # 0x1400722e0
   140050058:	lea    rdx,[rbp+0x28]
   14005005c:	mov    DWORD PTR [rax],0xf5
   140050062:	mov    DWORD PTR [rax+0x4],0x19e
   140050069:	mov    QWORD PTR [rax+0x8],rcx
   14005006d:	lea    rcx,[rsi+0x10]
   140050071:	mov    DWORD PTR [rbp+0x30],0x19e
   140050078:	mov    DWORD PTR [rbp+0x28],0xf5
   14005007f:	call   0x14002ff30
   140050084:	lea    rdx,[rbp+0x30]
   140050088:	lea    rcx,[rsi+0x30]
   14005008c:	mov    rbx,rax
   14005008f:	call   0x14002ffd0
   140050094:	mov    QWORD PTR [rbx],rax
   140050097:	cmp    DWORD PTR [rsi+0x8],r12d
   14005009b:	jne    0x14005b3df
   1400500a1:	lea    rdx,[rbp+0x28]
   1400500a5:	lea    rcx,[rsi+0x30]
   1400500a9:	mov    DWORD PTR [rbp+0x28],0x19a
   1400500b0:	call   0x14002ffd0
   1400500b5:	lea    rcx,[rip+0x2223c]        # 0x1400722f8
   1400500bc:	lea    rdx,[rbp+0x28]
   1400500c0:	mov    DWORD PTR [rax],0xf6
   1400500c6:	mov    DWORD PTR [rax+0x4],0x19a
   1400500cd:	mov    QWORD PTR [rax+0x8],rcx
   1400500d1:	lea    rcx,[rsi+0x10]
   1400500d5:	mov    DWORD PTR [rbp+0x30],0x19a
   1400500dc:	mov    DWORD PTR [rbp+0x28],0xf6
   1400500e3:	call   0x14002ff30
   1400500e8:	lea    rdx,[rbp+0x30]
   1400500ec:	lea    rcx,[rsi+0x30]
   1400500f0:	mov    rbx,rax
   1400500f3:	call   0x14002ffd0
   1400500f8:	mov    QWORD PTR [rbx],rax
   1400500fb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400500ff:	jne    0x14005b3df
   140050105:	lea    rdx,[rbp+0x28]
   140050109:	lea    rcx,[rsi+0x30]
   14005010d:	mov    DWORD PTR [rbp+0x28],0x19c
   140050114:	call   0x14002ffd0
   140050119:	lea    rcx,[rip+0x221f0]        # 0x140072310
   140050120:	lea    rdx,[rbp+0x28]
   140050124:	mov    DWORD PTR [rax],0xf7
   14005012a:	mov    DWORD PTR [rax+0x4],0x19c
   140050131:	mov    QWORD PTR [rax+0x8],rcx
   140050135:	lea    rcx,[rsi+0x10]
   140050139:	mov    DWORD PTR [rbp+0x30],0x19c
   140050140:	mov    DWORD PTR [rbp+0x28],0xf7
   140050147:	call   0x14002ff30
   14005014c:	lea    rdx,[rbp+0x30]
   140050150:	lea    rcx,[rsi+0x30]
   140050154:	mov    rbx,rax
   140050157:	call   0x14002ffd0
   14005015c:	mov    QWORD PTR [rbx],rax
   14005015f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050163:	jne    0x14005b3df
   140050169:	lea    rdx,[rbp+0x28]
   14005016d:	lea    rcx,[rsi+0x30]
   140050171:	mov    DWORD PTR [rbp+0x28],0x19b
   140050178:	call   0x14002ffd0
   14005017d:	lea    rcx,[rip+0x221a4]        # 0x140072328
   140050184:	lea    rdx,[rbp+0x28]
   140050188:	mov    DWORD PTR [rax],0xf8
   14005018e:	mov    DWORD PTR [rax+0x4],0x19b
   140050195:	mov    QWORD PTR [rax+0x8],rcx
   140050199:	lea    rcx,[rsi+0x10]
   14005019d:	mov    DWORD PTR [rbp+0x30],0x19b
   1400501a4:	mov    DWORD PTR [rbp+0x28],0xf8
   1400501ab:	call   0x14002ff30
   1400501b0:	lea    rdx,[rbp+0x30]
   1400501b4:	lea    rcx,[rsi+0x30]
   1400501b8:	mov    rbx,rax
   1400501bb:	call   0x14002ffd0
   1400501c0:	mov    QWORD PTR [rbx],rax
   1400501c3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400501c7:	jne    0x14005b3df
   1400501cd:	lea    rdx,[rbp+0x28]
   1400501d1:	lea    rcx,[rsi+0x30]
   1400501d5:	mov    DWORD PTR [rbp+0x28],0x19d
   1400501dc:	call   0x14002ffd0
   1400501e1:	lea    rcx,[rip+0x22158]        # 0x140072340
   1400501e8:	lea    rdx,[rbp+0x28]
   1400501ec:	mov    DWORD PTR [rax],0xf9
   1400501f2:	mov    DWORD PTR [rax+0x4],0x19d
   1400501f9:	mov    QWORD PTR [rax+0x8],rcx
   1400501fd:	lea    rcx,[rsi+0x10]
   140050201:	mov    DWORD PTR [rbp+0x30],0x19d
   140050208:	mov    DWORD PTR [rbp+0x28],0xf9
   14005020f:	call   0x14002ff30
   140050214:	lea    rdx,[rbp+0x30]
   140050218:	lea    rcx,[rsi+0x30]
   14005021c:	mov    rbx,rax
   14005021f:	call   0x14002ffd0
   140050224:	mov    QWORD PTR [rbx],rax
   140050227:	cmp    DWORD PTR [rsi+0x8],r12d
   14005022b:	jne    0x14005b3df
   140050231:	lea    rdx,[rbp+0x28]
   140050235:	lea    rcx,[rsi+0x30]
   140050239:	mov    DWORD PTR [rbp+0x28],0x1a8
   140050240:	call   0x14002ffd0
   140050245:	lea    rcx,[rip+0x22104]        # 0x140072350
   14005024c:	lea    rdx,[rbp+0x28]
   140050250:	mov    DWORD PTR [rax],0xfa
   140050256:	mov    DWORD PTR [rax+0x4],0x1a8
   14005025d:	mov    QWORD PTR [rax+0x8],rcx
   140050261:	lea    rcx,[rsi+0x10]
   140050265:	mov    DWORD PTR [rbp+0x30],0x1a8
   14005026c:	mov    DWORD PTR [rbp+0x28],0xfa
   140050273:	call   0x14002ff30
   140050278:	lea    rdx,[rbp+0x30]
   14005027c:	lea    rcx,[rsi+0x30]
   140050280:	mov    rbx,rax
   140050283:	call   0x14002ffd0
   140050288:	mov    QWORD PTR [rbx],rax
   14005028b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005028f:	jne    0x14005b3df
   140050295:	lea    rdx,[rbp+0x28]
   140050299:	lea    rcx,[rsi+0x30]
   14005029d:	mov    DWORD PTR [rbp+0x28],0x1a4
   1400502a4:	call   0x14002ffd0
   1400502a9:	lea    rcx,[rip+0x220b8]        # 0x140072368
   1400502b0:	lea    rdx,[rbp+0x28]
   1400502b4:	mov    DWORD PTR [rax],0xfb
   1400502ba:	mov    DWORD PTR [rax+0x4],0x1a4
   1400502c1:	mov    QWORD PTR [rax+0x8],rcx
   1400502c5:	lea    rcx,[rsi+0x10]
   1400502c9:	mov    DWORD PTR [rbp+0x30],0x1a4
   1400502d0:	mov    DWORD PTR [rbp+0x28],0xfb
   1400502d7:	call   0x14002ff30
   1400502dc:	lea    rdx,[rbp+0x30]
   1400502e0:	lea    rcx,[rsi+0x30]
   1400502e4:	mov    rbx,rax
   1400502e7:	call   0x14002ffd0
   1400502ec:	mov    QWORD PTR [rbx],rax
   1400502ef:	cmp    DWORD PTR [rsi+0x8],r12d
   1400502f3:	jne    0x14005b3df
   1400502f9:	lea    rdx,[rbp+0x28]
   1400502fd:	lea    rcx,[rsi+0x30]
   140050301:	mov    DWORD PTR [rbp+0x28],0x1a6
   140050308:	call   0x14002ffd0
   14005030d:	lea    rcx,[rip+0x2206c]        # 0x140072380
   140050314:	lea    rdx,[rbp+0x28]
   140050318:	mov    DWORD PTR [rax],0xfc
   14005031e:	mov    DWORD PTR [rax+0x4],0x1a6
   140050325:	mov    QWORD PTR [rax+0x8],rcx
   140050329:	lea    rcx,[rsi+0x10]
   14005032d:	mov    DWORD PTR [rbp+0x30],0x1a6
   140050334:	mov    DWORD PTR [rbp+0x28],0xfc
   14005033b:	call   0x14002ff30
   140050340:	lea    rdx,[rbp+0x30]
   140050344:	lea    rcx,[rsi+0x30]
   140050348:	mov    rbx,rax
   14005034b:	call   0x14002ffd0
   140050350:	mov    QWORD PTR [rbx],rax
   140050353:	cmp    DWORD PTR [rsi+0x8],r12d
   140050357:	jne    0x14005b3df
   14005035d:	lea    rdx,[rbp+0x28]
   140050361:	lea    rcx,[rsi+0x30]
   140050365:	mov    DWORD PTR [rbp+0x28],0x1a5
   14005036c:	call   0x14002ffd0
   140050371:	lea    rcx,[rip+0x22020]        # 0x140072398
   140050378:	lea    rdx,[rbp+0x28]
   14005037c:	mov    DWORD PTR [rax],0xfd
   140050382:	mov    DWORD PTR [rax+0x4],0x1a5
   140050389:	mov    QWORD PTR [rax+0x8],rcx
   14005038d:	lea    rcx,[rsi+0x10]
   140050391:	mov    DWORD PTR [rbp+0x30],0x1a5
   140050398:	mov    DWORD PTR [rbp+0x28],0xfd
   14005039f:	call   0x14002ff30
   1400503a4:	lea    rdx,[rbp+0x30]
   1400503a8:	lea    rcx,[rsi+0x30]
   1400503ac:	mov    rbx,rax
   1400503af:	call   0x14002ffd0
   1400503b4:	mov    QWORD PTR [rbx],rax
   1400503b7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400503bb:	jne    0x14005b3df
   1400503c1:	lea    rdx,[rbp+0x28]
   1400503c5:	lea    rcx,[rsi+0x30]
   1400503c9:	mov    DWORD PTR [rbp+0x28],0x1a7
   1400503d0:	call   0x14002ffd0
   1400503d5:	lea    rcx,[rip+0x21fd4]        # 0x1400723b0
   1400503dc:	lea    rdx,[rbp+0x28]
   1400503e0:	mov    DWORD PTR [rax],0xfe
   1400503e6:	mov    DWORD PTR [rax+0x4],0x1a7
   1400503ed:	mov    QWORD PTR [rax+0x8],rcx
   1400503f1:	lea    rcx,[rsi+0x10]
   1400503f5:	mov    DWORD PTR [rbp+0x30],0x1a7
   1400503fc:	mov    DWORD PTR [rbp+0x28],0xfe
   140050403:	call   0x14002ff30
   140050408:	lea    rdx,[rbp+0x30]
   14005040c:	lea    rcx,[rsi+0x30]
   140050410:	mov    rbx,rax
   140050413:	call   0x14002ffd0
   140050418:	mov    QWORD PTR [rbx],rax
   14005041b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005041f:	jne    0x14005b3df
   140050425:	lea    rdx,[rbp+0x28]
   140050429:	lea    rcx,[rsi+0x30]
   14005042d:	mov    DWORD PTR [rbp+0x28],0x1b2
   140050434:	call   0x14002ffd0
   140050439:	lea    rcx,[rip+0x21f80]        # 0x1400723c0
   140050440:	lea    rdx,[rbp+0x28]
   140050444:	mov    DWORD PTR [rax],0xff
   14005044a:	mov    DWORD PTR [rax+0x4],0x1b2
   140050451:	mov    QWORD PTR [rax+0x8],rcx
   140050455:	lea    rcx,[rsi+0x10]
   140050459:	mov    DWORD PTR [rbp+0x30],0x1b2
   140050460:	mov    DWORD PTR [rbp+0x28],0xff
   140050467:	call   0x14002ff30
   14005046c:	lea    rdx,[rbp+0x30]
   140050470:	lea    rcx,[rsi+0x30]
   140050474:	mov    rbx,rax
   140050477:	call   0x14002ffd0
   14005047c:	mov    QWORD PTR [rbx],rax
   14005047f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050483:	jne    0x14005b3df
   140050489:	lea    rdx,[rbp+0x28]
   14005048d:	lea    rcx,[rsi+0x30]
   140050491:	mov    DWORD PTR [rbp+0x28],0x1ae
   140050498:	call   0x14002ffd0
   14005049d:	lea    rcx,[rip+0x21f34]        # 0x1400723d8
   1400504a4:	lea    rdx,[rbp+0x28]
   1400504a8:	mov    DWORD PTR [rax],0x100
   1400504ae:	mov    DWORD PTR [rax+0x4],0x1ae
   1400504b5:	mov    QWORD PTR [rax+0x8],rcx
   1400504b9:	lea    rcx,[rsi+0x10]
   1400504bd:	mov    DWORD PTR [rbp+0x30],0x1ae
   1400504c4:	mov    DWORD PTR [rbp+0x28],0x100
   1400504cb:	call   0x14002ff30
   1400504d0:	lea    rdx,[rbp+0x30]
   1400504d4:	lea    rcx,[rsi+0x30]
   1400504d8:	mov    rbx,rax
   1400504db:	call   0x14002ffd0
   1400504e0:	mov    QWORD PTR [rbx],rax
   1400504e3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400504e7:	jne    0x14005b3df
   1400504ed:	lea    rdx,[rbp+0x28]
   1400504f1:	lea    rcx,[rsi+0x30]
   1400504f5:	mov    DWORD PTR [rbp+0x28],0x1b0
   1400504fc:	call   0x14002ffd0
   140050501:	lea    rcx,[rip+0x21ee8]        # 0x1400723f0
   140050508:	lea    rdx,[rbp+0x28]
   14005050c:	mov    DWORD PTR [rax],0x101
   140050512:	mov    DWORD PTR [rax+0x4],0x1b0
   140050519:	mov    QWORD PTR [rax+0x8],rcx
   14005051d:	lea    rcx,[rsi+0x10]
   140050521:	mov    DWORD PTR [rbp+0x30],0x1b0
   140050528:	mov    DWORD PTR [rbp+0x28],0x101
   14005052f:	call   0x14002ff30
   140050534:	lea    rdx,[rbp+0x30]
   140050538:	lea    rcx,[rsi+0x30]
   14005053c:	mov    rbx,rax
   14005053f:	call   0x14002ffd0
   140050544:	mov    QWORD PTR [rbx],rax
   140050547:	cmp    DWORD PTR [rsi+0x8],r12d
   14005054b:	jne    0x14005b3df
   140050551:	lea    rdx,[rbp+0x28]
   140050555:	lea    rcx,[rsi+0x30]
   140050559:	mov    DWORD PTR [rbp+0x28],0x1af
   140050560:	call   0x14002ffd0
   140050565:	lea    rcx,[rip+0x21e9c]        # 0x140072408
   14005056c:	lea    rdx,[rbp+0x28]
   140050570:	mov    DWORD PTR [rax],0x102
   140050576:	mov    DWORD PTR [rax+0x4],0x1af
   14005057d:	mov    QWORD PTR [rax+0x8],rcx
   140050581:	lea    rcx,[rsi+0x10]
   140050585:	mov    DWORD PTR [rbp+0x30],0x1af
   14005058c:	mov    DWORD PTR [rbp+0x28],0x102
   140050593:	call   0x14002ff30
   140050598:	lea    rdx,[rbp+0x30]
   14005059c:	lea    rcx,[rsi+0x30]
   1400505a0:	mov    rbx,rax
   1400505a3:	call   0x14002ffd0
   1400505a8:	mov    QWORD PTR [rbx],rax
   1400505ab:	cmp    DWORD PTR [rsi+0x8],r12d
   1400505af:	jne    0x14005b3df
   1400505b5:	lea    rdx,[rbp+0x28]
   1400505b9:	lea    rcx,[rsi+0x30]
   1400505bd:	mov    DWORD PTR [rbp+0x28],0x1b1
   1400505c4:	call   0x14002ffd0
   1400505c9:	lea    rcx,[rip+0x21e50]        # 0x140072420
   1400505d0:	lea    rdx,[rbp+0x28]
   1400505d4:	mov    DWORD PTR [rax],0x103
   1400505da:	mov    DWORD PTR [rax+0x4],0x1b1
   1400505e1:	mov    QWORD PTR [rax+0x8],rcx
   1400505e5:	lea    rcx,[rsi+0x10]
   1400505e9:	mov    DWORD PTR [rbp+0x30],0x1b1
   1400505f0:	mov    DWORD PTR [rbp+0x28],0x103
   1400505f7:	call   0x14002ff30
   1400505fc:	lea    rdx,[rbp+0x30]
   140050600:	lea    rcx,[rsi+0x30]
   140050604:	mov    rbx,rax
   140050607:	call   0x14002ffd0
   14005060c:	mov    QWORD PTR [rbx],rax
   14005060f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050613:	jne    0x14005b3df
   140050619:	lea    rdx,[rbp+0x28]
   14005061d:	lea    rcx,[rsi+0x30]
   140050621:	mov    DWORD PTR [rbp+0x28],0xb4
   140050628:	call   0x14002ffd0
   14005062d:	lea    rcx,[rip+0x21dfc]        # 0x140072430
   140050634:	lea    rdx,[rbp+0x28]
   140050638:	mov    DWORD PTR [rax],0x105
   14005063e:	mov    DWORD PTR [rax+0x4],0xb4
   140050645:	mov    QWORD PTR [rax+0x8],rcx
   140050649:	lea    rcx,[rsi+0x10]
   14005064d:	mov    DWORD PTR [rbp+0x30],0xb4
   140050654:	mov    DWORD PTR [rbp+0x28],0x105
   14005065b:	call   0x14002ff30
   140050660:	lea    rdx,[rbp+0x30]
   140050664:	lea    rcx,[rsi+0x30]
   140050668:	mov    rbx,rax
   14005066b:	call   0x14002ffd0
   140050670:	mov    QWORD PTR [rbx],rax
   140050673:	cmp    DWORD PTR [rsi+0x8],r12d
   140050677:	jne    0x14005b3df
   14005067d:	lea    rdx,[rbp+0x28]
   140050681:	lea    rcx,[rsi+0x30]
   140050685:	mov    DWORD PTR [rbp+0x28],0xb5
   14005068c:	call   0x14002ffd0
   140050691:	lea    rcx,[rip+0x21db0]        # 0x140072448
   140050698:	lea    rdx,[rbp+0x28]
   14005069c:	mov    DWORD PTR [rax],0x106
   1400506a2:	mov    DWORD PTR [rax+0x4],0xb5
   1400506a9:	mov    QWORD PTR [rax+0x8],rcx
   1400506ad:	lea    rcx,[rsi+0x10]
   1400506b1:	mov    DWORD PTR [rbp+0x30],0xb5
   1400506b8:	mov    DWORD PTR [rbp+0x28],0x106
   1400506bf:	call   0x14002ff30
   1400506c4:	lea    rdx,[rbp+0x30]
   1400506c8:	lea    rcx,[rsi+0x30]
   1400506cc:	mov    rbx,rax
   1400506cf:	call   0x14002ffd0
   1400506d4:	mov    QWORD PTR [rbx],rax
   1400506d7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400506db:	jne    0x14005b3df
   1400506e1:	lea    rdx,[rbp+0x28]
   1400506e5:	lea    rcx,[rsi+0x30]
   1400506e9:	mov    DWORD PTR [rbp+0x28],0xb6
   1400506f0:	call   0x14002ffd0
   1400506f5:	lea    rcx,[rip+0x21d64]        # 0x140072460
   1400506fc:	lea    rdx,[rbp+0x28]
   140050700:	mov    DWORD PTR [rax],0x107
   140050706:	mov    DWORD PTR [rax+0x4],0xb6
   14005070d:	mov    QWORD PTR [rax+0x8],rcx
   140050711:	lea    rcx,[rsi+0x10]
   140050715:	mov    DWORD PTR [rbp+0x30],0xb6
   14005071c:	mov    DWORD PTR [rbp+0x28],0x107
   140050723:	call   0x14002ff30
   140050728:	lea    rdx,[rbp+0x30]
   14005072c:	lea    rcx,[rsi+0x30]
   140050730:	mov    rbx,rax
   140050733:	call   0x14002ffd0
   140050738:	mov    QWORD PTR [rbx],rax
   14005073b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005073f:	jne    0x14005b3df
   140050745:	lea    rdx,[rbp+0x28]
   140050749:	lea    rcx,[rsi+0x30]
   14005074d:	mov    DWORD PTR [rbp+0x28],0xb7
   140050754:	call   0x14002ffd0
   140050759:	lea    rcx,[rip+0x21d18]        # 0x140072478
   140050760:	lea    rdx,[rbp+0x28]
   140050764:	mov    DWORD PTR [rax],0x108
   14005076a:	mov    DWORD PTR [rax+0x4],0xb7
   140050771:	mov    QWORD PTR [rax+0x8],rcx
   140050775:	lea    rcx,[rsi+0x10]
   140050779:	mov    DWORD PTR [rbp+0x30],0xb7
   140050780:	mov    DWORD PTR [rbp+0x28],0x108
   140050787:	call   0x14002ff30
   14005078c:	lea    rdx,[rbp+0x30]
   140050790:	lea    rcx,[rsi+0x30]
   140050794:	mov    rbx,rax
   140050797:	call   0x14002ffd0
   14005079c:	mov    QWORD PTR [rbx],rax
   14005079f:	cmp    DWORD PTR [rsi+0x8],r12d
   1400507a3:	jne    0x14005b3df
   1400507a9:	lea    rdx,[rbp+0x28]
   1400507ad:	lea    rcx,[rsi+0x30]
   1400507b1:	mov    DWORD PTR [rbp+0x28],0xb8
   1400507b8:	call   0x14002ffd0
   1400507bd:	lea    rcx,[rip+0x21ccc]        # 0x140072490
   1400507c4:	lea    rdx,[rbp+0x28]
   1400507c8:	mov    DWORD PTR [rax],0x109
   1400507ce:	mov    DWORD PTR [rax+0x4],0xb8
   1400507d5:	mov    QWORD PTR [rax+0x8],rcx
   1400507d9:	lea    rcx,[rsi+0x10]
   1400507dd:	mov    DWORD PTR [rbp+0x30],0xb8
   1400507e4:	mov    DWORD PTR [rbp+0x28],0x109
   1400507eb:	call   0x14002ff30
   1400507f0:	lea    rdx,[rbp+0x30]
   1400507f4:	lea    rcx,[rsi+0x30]
   1400507f8:	mov    rbx,rax
   1400507fb:	call   0x14002ffd0
   140050800:	mov    QWORD PTR [rbx],rax
   140050803:	cmp    DWORD PTR [rsi+0x8],r12d
   140050807:	jne    0x14005b3df
   14005080d:	lea    rdx,[rbp+0x28]
   140050811:	lea    rcx,[rsi+0x30]
   140050815:	mov    DWORD PTR [rbp+0x28],0xb9
   14005081c:	call   0x14002ffd0
   140050821:	lea    rcx,[rip+0x21c80]        # 0x1400724a8
   140050828:	lea    rdx,[rbp+0x28]
   14005082c:	mov    DWORD PTR [rax],0x10a
   140050832:	mov    DWORD PTR [rax+0x4],0xb9
   140050839:	mov    QWORD PTR [rax+0x8],rcx
   14005083d:	lea    rcx,[rsi+0x10]
   140050841:	mov    DWORD PTR [rbp+0x30],0xb9
   140050848:	mov    DWORD PTR [rbp+0x28],0x10a
   14005084f:	call   0x14002ff30
   140050854:	lea    rdx,[rbp+0x30]
   140050858:	lea    rcx,[rsi+0x30]
   14005085c:	mov    rbx,rax
   14005085f:	call   0x14002ffd0
   140050864:	mov    QWORD PTR [rbx],rax
   140050867:	cmp    DWORD PTR [rsi+0x8],r12d
   14005086b:	jne    0x14005b3df
   140050871:	lea    rdx,[rbp+0x28]
   140050875:	lea    rcx,[rsi+0x30]
   140050879:	mov    DWORD PTR [rbp+0x28],0xba
   140050880:	call   0x14002ffd0
   140050885:	lea    rcx,[rip+0x21c2c]        # 0x1400724b8
   14005088c:	lea    rdx,[rbp+0x28]
   140050890:	mov    DWORD PTR [rax],0x10b
   140050896:	mov    DWORD PTR [rax+0x4],0xba
   14005089d:	mov    QWORD PTR [rax+0x8],rcx
   1400508a1:	lea    rcx,[rsi+0x10]
   1400508a5:	mov    DWORD PTR [rbp+0x30],0xba
   1400508ac:	mov    DWORD PTR [rbp+0x28],0x10b
   1400508b3:	call   0x14002ff30
   1400508b8:	lea    rdx,[rbp+0x30]
   1400508bc:	lea    rcx,[rsi+0x30]
   1400508c0:	mov    rbx,rax
   1400508c3:	call   0x14002ffd0
   1400508c8:	mov    QWORD PTR [rbx],rax
   1400508cb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400508cf:	jne    0x14005b3df
   1400508d5:	lea    rdx,[rbp+0x28]
   1400508d9:	lea    rcx,[rsi+0x30]
   1400508dd:	mov    DWORD PTR [rbp+0x28],0xbb
   1400508e4:	call   0x14002ffd0
   1400508e9:	lea    rcx,[rip+0x21be0]        # 0x1400724d0
   1400508f0:	lea    rdx,[rbp+0x28]
   1400508f4:	mov    DWORD PTR [rax],0x10c
   1400508fa:	mov    DWORD PTR [rax+0x4],0xbb
   140050901:	mov    QWORD PTR [rax+0x8],rcx
   140050905:	lea    rcx,[rsi+0x10]
   140050909:	mov    DWORD PTR [rbp+0x30],0xbb
   140050910:	mov    DWORD PTR [rbp+0x28],0x10c
   140050917:	call   0x14002ff30
   14005091c:	lea    rdx,[rbp+0x30]
   140050920:	lea    rcx,[rsi+0x30]
   140050924:	mov    rbx,rax
   140050927:	call   0x14002ffd0
   14005092c:	mov    QWORD PTR [rbx],rax
   14005092f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050933:	jne    0x14005b3df
   140050939:	lea    rdx,[rbp+0x28]
   14005093d:	lea    rcx,[rsi+0x30]
   140050941:	mov    DWORD PTR [rbp+0x28],0xbc
   140050948:	call   0x14002ffd0
   14005094d:	lea    rcx,[rip+0x21b94]        # 0x1400724e8
   140050954:	lea    rdx,[rbp+0x28]
   140050958:	mov    DWORD PTR [rax],0x10d
   14005095e:	mov    DWORD PTR [rax+0x4],0xbc
   140050965:	mov    QWORD PTR [rax+0x8],rcx
   140050969:	lea    rcx,[rsi+0x10]
   14005096d:	mov    DWORD PTR [rbp+0x30],0xbc
   140050974:	mov    DWORD PTR [rbp+0x28],0x10d
   14005097b:	call   0x14002ff30
   140050980:	lea    rdx,[rbp+0x30]
   140050984:	lea    rcx,[rsi+0x30]
   140050988:	mov    rbx,rax
   14005098b:	call   0x14002ffd0
   140050990:	mov    QWORD PTR [rbx],rax
   140050993:	cmp    DWORD PTR [rsi+0x8],r12d
   140050997:	jne    0x14005b3df
   14005099d:	lea    rdx,[rbp+0x28]
   1400509a1:	lea    rcx,[rsi+0x30]
   1400509a5:	mov    DWORD PTR [rbp+0x28],0xbd
   1400509ac:	call   0x14002ffd0
   1400509b1:	lea    rcx,[rip+0x21b48]        # 0x140072500
   1400509b8:	lea    rdx,[rbp+0x28]
   1400509bc:	mov    DWORD PTR [rax],0x10e
   1400509c2:	mov    DWORD PTR [rax+0x4],0xbd
   1400509c9:	mov    QWORD PTR [rax+0x8],rcx
   1400509cd:	lea    rcx,[rsi+0x10]
   1400509d1:	mov    DWORD PTR [rbp+0x30],0xbd
   1400509d8:	mov    DWORD PTR [rbp+0x28],0x10e
   1400509df:	call   0x14002ff30
   1400509e4:	lea    rdx,[rbp+0x30]
   1400509e8:	lea    rcx,[rsi+0x30]
   1400509ec:	mov    rbx,rax
   1400509ef:	call   0x14002ffd0
   1400509f4:	mov    QWORD PTR [rbx],rax
   1400509f7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400509fb:	jne    0x14005b3df
   140050a01:	lea    rdx,[rbp+0x28]
   140050a05:	lea    rcx,[rsi+0x30]
   140050a09:	mov    DWORD PTR [rbp+0x28],0xbe
   140050a10:	call   0x14002ffd0
   140050a15:	lea    rcx,[rip+0x21afc]        # 0x140072518
   140050a1c:	lea    rdx,[rbp+0x28]
   140050a20:	mov    DWORD PTR [rax],0x10f
   140050a26:	mov    DWORD PTR [rax+0x4],0xbe
   140050a2d:	mov    QWORD PTR [rax+0x8],rcx
   140050a31:	lea    rcx,[rsi+0x10]
   140050a35:	mov    DWORD PTR [rbp+0x30],0xbe
   140050a3c:	mov    DWORD PTR [rbp+0x28],0x10f
   140050a43:	call   0x14002ff30
   140050a48:	lea    rdx,[rbp+0x30]
   140050a4c:	lea    rcx,[rsi+0x30]
   140050a50:	mov    rbx,rax
   140050a53:	call   0x14002ffd0
   140050a58:	mov    QWORD PTR [rbx],rax
   140050a5b:	cmp    DWORD PTR [rsi+0x8],r12d
   140050a5f:	jne    0x14005b3df
   140050a65:	lea    rdx,[rbp+0x28]
   140050a69:	lea    rcx,[rsi+0x30]
   140050a6d:	mov    DWORD PTR [rbp+0x28],0xbf
   140050a74:	call   0x14002ffd0
   140050a79:	lea    rcx,[rip+0x21ab0]        # 0x140072530
   140050a80:	lea    rdx,[rbp+0x28]
   140050a84:	mov    DWORD PTR [rax],0x110
   140050a8a:	mov    DWORD PTR [rax+0x4],0xbf
   140050a91:	mov    QWORD PTR [rax+0x8],rcx
   140050a95:	lea    rcx,[rsi+0x10]
   140050a99:	mov    DWORD PTR [rbp+0x30],0xbf
   140050aa0:	mov    DWORD PTR [rbp+0x28],0x110
   140050aa7:	call   0x14002ff30
   140050aac:	lea    rdx,[rbp+0x30]
   140050ab0:	lea    rcx,[rsi+0x30]
   140050ab4:	mov    rbx,rax
   140050ab7:	call   0x14002ffd0
   140050abc:	mov    QWORD PTR [rbx],rax
   140050abf:	cmp    DWORD PTR [rsi+0x8],r12d
   140050ac3:	jne    0x14005b3df
   140050ac9:	lea    rdx,[rbp+0x28]
   140050acd:	lea    rcx,[rsi+0x30]
   140050ad1:	mov    DWORD PTR [rbp+0x28],0xc0
   140050ad8:	call   0x14002ffd0
   140050add:	lea    rcx,[rip+0x21a64]        # 0x140072548
   140050ae4:	lea    rdx,[rbp+0x28]
   140050ae8:	mov    DWORD PTR [rax],0x111
   140050aee:	mov    DWORD PTR [rax+0x4],0xc0
   140050af5:	mov    QWORD PTR [rax+0x8],rcx
   140050af9:	lea    rcx,[rsi+0x10]
   140050afd:	mov    DWORD PTR [rbp+0x30],0xc0
   140050b04:	mov    DWORD PTR [rbp+0x28],0x111
   140050b0b:	call   0x14002ff30
   140050b10:	lea    rdx,[rbp+0x30]
   140050b14:	lea    rcx,[rsi+0x30]
   140050b18:	mov    rbx,rax
   140050b1b:	call   0x14002ffd0
   140050b20:	mov    QWORD PTR [rbx],rax
   140050b23:	cmp    DWORD PTR [rsi+0x8],r12d
   140050b27:	jne    0x14005b3df
   140050b2d:	lea    rdx,[rbp+0x28]
   140050b31:	lea    rcx,[rsi+0x30]
   140050b35:	mov    DWORD PTR [rbp+0x28],0xc1
   140050b3c:	call   0x14002ffd0
   140050b41:	lea    rcx,[rip+0x21a18]        # 0x140072560
   140050b48:	lea    rdx,[rbp+0x28]
   140050b4c:	mov    DWORD PTR [rax],0x112
   140050b52:	mov    DWORD PTR [rax+0x4],0xc1
   140050b59:	mov    QWORD PTR [rax+0x8],rcx
   140050b5d:	lea    rcx,[rsi+0x10]
   140050b61:	mov    DWORD PTR [rbp+0x30],0xc1
   140050b68:	mov    DWORD PTR [rbp+0x28],0x112
   140050b6f:	call   0x14002ff30
   140050b74:	lea    rdx,[rbp+0x30]
   140050b78:	lea    rcx,[rsi+0x30]
   140050b7c:	mov    rbx,rax
   140050b7f:	call   0x14002ffd0
   140050b84:	mov    QWORD PTR [rbx],rax
   140050b87:	cmp    DWORD PTR [rsi+0x8],r12d
   140050b8b:	jne    0x14005b3df
   140050b91:	lea    rdx,[rbp+0x28]
   140050b95:	lea    rcx,[rsi+0x30]
   140050b99:	mov    DWORD PTR [rbp+0x28],0xc2
   140050ba0:	call   0x14002ffd0
   140050ba5:	lea    rcx,[rip+0x219cc]        # 0x140072578
   140050bac:	lea    rdx,[rbp+0x28]
   140050bb0:	mov    DWORD PTR [rax],0x113
   140050bb6:	mov    DWORD PTR [rax+0x4],0xc2
   140050bbd:	mov    QWORD PTR [rax+0x8],rcx
   140050bc1:	lea    rcx,[rsi+0x10]
   140050bc5:	mov    DWORD PTR [rbp+0x30],0xc2
   140050bcc:	mov    DWORD PTR [rbp+0x28],0x113
   140050bd3:	call   0x14002ff30
   140050bd8:	lea    rdx,[rbp+0x30]
   140050bdc:	lea    rcx,[rsi+0x30]
   140050be0:	mov    rbx,rax
   140050be3:	call   0x14002ffd0
   140050be8:	mov    QWORD PTR [rbx],rax
   140050beb:	cmp    DWORD PTR [rsi+0x8],r12d
   140050bef:	jne    0x14005b3df
   140050bf5:	lea    rdx,[rbp+0x28]
   140050bf9:	lea    rcx,[rsi+0x30]
   140050bfd:	mov    DWORD PTR [rbp+0x28],0xc3
   140050c04:	call   0x14002ffd0
   140050c09:	lea    rcx,[rip+0x21980]        # 0x140072590
   140050c10:	lea    rdx,[rbp+0x28]
   140050c14:	mov    DWORD PTR [rax],0x114
   140050c1a:	mov    DWORD PTR [rax+0x4],0xc3
   140050c21:	mov    QWORD PTR [rax+0x8],rcx
   140050c25:	lea    rcx,[rsi+0x10]
   140050c29:	mov    DWORD PTR [rbp+0x30],0xc3
   140050c30:	mov    DWORD PTR [rbp+0x28],0x114
   140050c37:	call   0x14002ff30
   140050c3c:	lea    rdx,[rbp+0x30]
   140050c40:	lea    rcx,[rsi+0x30]
   140050c44:	mov    rbx,rax
   140050c47:	call   0x14002ffd0
   140050c4c:	mov    QWORD PTR [rbx],rax
   140050c4f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050c53:	jne    0x14005b3df
   140050c59:	lea    rdx,[rbp+0x28]
   140050c5d:	lea    rcx,[rsi+0x30]
   140050c61:	mov    DWORD PTR [rbp+0x28],0xc4
   140050c68:	call   0x14002ffd0
   140050c6d:	lea    rcx,[rip+0x2193c]        # 0x1400725b0
   140050c74:	lea    rdx,[rbp+0x28]
   140050c78:	mov    DWORD PTR [rax],0x115
   140050c7e:	mov    DWORD PTR [rax+0x4],0xc4
   140050c85:	mov    QWORD PTR [rax+0x8],rcx
   140050c89:	lea    rcx,[rsi+0x10]
   140050c8d:	mov    DWORD PTR [rbp+0x30],0xc4
   140050c94:	mov    DWORD PTR [rbp+0x28],0x115
   140050c9b:	call   0x14002ff30
   140050ca0:	lea    rdx,[rbp+0x30]
   140050ca4:	lea    rcx,[rsi+0x30]
   140050ca8:	mov    rbx,rax
   140050cab:	call   0x14002ffd0
   140050cb0:	mov    QWORD PTR [rbx],rax
   140050cb3:	cmp    DWORD PTR [rsi+0x8],r12d
   140050cb7:	jne    0x14005b3df
   140050cbd:	lea    rdx,[rbp+0x28]
   140050cc1:	lea    rcx,[rsi+0x30]
   140050cc5:	mov    DWORD PTR [rbp+0x28],0xc5
   140050ccc:	call   0x14002ffd0
   140050cd1:	lea    rcx,[rip+0x218f0]        # 0x1400725c8
   140050cd8:	lea    rdx,[rbp+0x28]
   140050cdc:	mov    DWORD PTR [rax],0x116
   140050ce2:	mov    DWORD PTR [rax+0x4],0xc5
   140050ce9:	mov    QWORD PTR [rax+0x8],rcx
   140050ced:	lea    rcx,[rsi+0x10]
   140050cf1:	mov    DWORD PTR [rbp+0x30],0xc5
   140050cf8:	mov    DWORD PTR [rbp+0x28],0x116
   140050cff:	call   0x14002ff30
   140050d04:	lea    rdx,[rbp+0x30]
   140050d08:	lea    rcx,[rsi+0x30]
   140050d0c:	mov    rbx,rax
   140050d0f:	call   0x14002ffd0
   140050d14:	mov    QWORD PTR [rbx],rax
   140050d17:	cmp    DWORD PTR [rsi+0x8],r12d
   140050d1b:	jne    0x14005b3df
   140050d21:	lea    rdx,[rbp+0x28]
   140050d25:	lea    rcx,[rsi+0x30]
   140050d29:	mov    DWORD PTR [rbp+0x28],0xc6
   140050d30:	call   0x14002ffd0
   140050d35:	lea    rcx,[rip+0x218a4]        # 0x1400725e0
   140050d3c:	lea    rdx,[rbp+0x28]
   140050d40:	mov    DWORD PTR [rax],0x117
   140050d46:	mov    DWORD PTR [rax+0x4],0xc6
   140050d4d:	mov    QWORD PTR [rax+0x8],rcx
   140050d51:	lea    rcx,[rsi+0x10]
   140050d55:	mov    DWORD PTR [rbp+0x30],0xc6
   140050d5c:	mov    DWORD PTR [rbp+0x28],0x117
   140050d63:	call   0x14002ff30
   140050d68:	lea    rdx,[rbp+0x30]
   140050d6c:	lea    rcx,[rsi+0x30]
   140050d70:	mov    rbx,rax
   140050d73:	call   0x14002ffd0
   140050d78:	mov    QWORD PTR [rbx],rax
   140050d7b:	cmp    DWORD PTR [rsi+0x8],r12d
   140050d7f:	jne    0x14005b3df
   140050d85:	lea    rdx,[rbp+0x28]
   140050d89:	lea    rcx,[rsi+0x30]
   140050d8d:	mov    DWORD PTR [rbp+0x28],0xc7
   140050d94:	call   0x14002ffd0
   140050d99:	lea    rcx,[rip+0x21858]        # 0x1400725f8
   140050da0:	lea    rdx,[rbp+0x28]
   140050da4:	mov    DWORD PTR [rax],0x118
   140050daa:	mov    DWORD PTR [rax+0x4],0xc7
   140050db1:	mov    QWORD PTR [rax+0x8],rcx
   140050db5:	lea    rcx,[rsi+0x10]
   140050db9:	mov    DWORD PTR [rbp+0x30],0xc7
   140050dc0:	mov    DWORD PTR [rbp+0x28],0x118
   140050dc7:	call   0x14002ff30
   140050dcc:	lea    rdx,[rbp+0x30]
   140050dd0:	lea    rcx,[rsi+0x30]
   140050dd4:	mov    rbx,rax
   140050dd7:	call   0x14002ffd0
   140050ddc:	mov    QWORD PTR [rbx],rax
   140050ddf:	cmp    DWORD PTR [rsi+0x8],r12d
   140050de3:	jne    0x14005b3df
   140050de9:	lea    rdx,[rbp+0x28]
   140050ded:	lea    rcx,[rsi+0x30]
   140050df1:	mov    DWORD PTR [rbp+0x28],0xc8
   140050df8:	call   0x14002ffd0
   140050dfd:	lea    rcx,[rip+0x2180c]        # 0x140072610
   140050e04:	lea    rdx,[rbp+0x28]
   140050e08:	mov    DWORD PTR [rax],0x119
   140050e0e:	mov    DWORD PTR [rax+0x4],0xc8
   140050e15:	mov    QWORD PTR [rax+0x8],rcx
   140050e19:	lea    rcx,[rsi+0x10]
   140050e1d:	mov    DWORD PTR [rbp+0x30],0xc8
   140050e24:	mov    DWORD PTR [rbp+0x28],0x119
   140050e2b:	call   0x14002ff30
   140050e30:	lea    rdx,[rbp+0x30]
   140050e34:	lea    rcx,[rsi+0x30]
   140050e38:	mov    rbx,rax
   140050e3b:	call   0x14002ffd0
   140050e40:	mov    QWORD PTR [rbx],rax
   140050e43:	cmp    DWORD PTR [rsi+0x8],r12d
   140050e47:	jne    0x14005b3df
   140050e4d:	lea    rdx,[rbp+0x28]
   140050e51:	lea    rcx,[rsi+0x30]
   140050e55:	mov    DWORD PTR [rbp+0x28],0xc9
   140050e5c:	call   0x14002ffd0
   140050e61:	lea    rcx,[rip+0x217b8]        # 0x140072620
   140050e68:	lea    rdx,[rbp+0x28]
   140050e6c:	mov    DWORD PTR [rax],0x11a
   140050e72:	mov    DWORD PTR [rax+0x4],0xc9
   140050e79:	mov    QWORD PTR [rax+0x8],rcx
   140050e7d:	lea    rcx,[rsi+0x10]
   140050e81:	mov    DWORD PTR [rbp+0x30],0xc9
   140050e88:	mov    DWORD PTR [rbp+0x28],0x11a
   140050e8f:	call   0x14002ff30
   140050e94:	lea    rdx,[rbp+0x30]
   140050e98:	lea    rcx,[rsi+0x30]
   140050e9c:	mov    rbx,rax
   140050e9f:	call   0x14002ffd0
   140050ea4:	mov    QWORD PTR [rbx],rax
   140050ea7:	cmp    DWORD PTR [rsi+0x8],r12d
   140050eab:	jne    0x14005b3df
   140050eb1:	lea    rdx,[rbp+0x28]
   140050eb5:	lea    rcx,[rsi+0x30]
   140050eb9:	mov    DWORD PTR [rbp+0x28],0xca
   140050ec0:	call   0x14002ffd0
   140050ec5:	lea    rcx,[rip+0x2176c]        # 0x140072638
   140050ecc:	lea    rdx,[rbp+0x28]
   140050ed0:	mov    DWORD PTR [rax],0x11b
   140050ed6:	mov    DWORD PTR [rax+0x4],0xca
   140050edd:	mov    QWORD PTR [rax+0x8],rcx
   140050ee1:	lea    rcx,[rsi+0x10]
   140050ee5:	mov    DWORD PTR [rbp+0x30],0xca
   140050eec:	mov    DWORD PTR [rbp+0x28],0x11b
   140050ef3:	call   0x14002ff30
   140050ef8:	lea    rdx,[rbp+0x30]
   140050efc:	lea    rcx,[rsi+0x30]
   140050f00:	mov    rbx,rax
   140050f03:	call   0x14002ffd0
   140050f08:	mov    QWORD PTR [rbx],rax
   140050f0b:	cmp    DWORD PTR [rsi+0x8],r12d
   140050f0f:	jne    0x14005b3df
   140050f15:	lea    rdx,[rbp+0x28]
   140050f19:	lea    rcx,[rsi+0x30]
   140050f1d:	mov    DWORD PTR [rbp+0x28],0xcb
   140050f24:	call   0x14002ffd0
   140050f29:	lea    rcx,[rip+0x21720]        # 0x140072650
   140050f30:	lea    rdx,[rbp+0x28]
   140050f34:	mov    DWORD PTR [rax],0x11c
   140050f3a:	mov    DWORD PTR [rax+0x4],0xcb
   140050f41:	mov    QWORD PTR [rax+0x8],rcx
   140050f45:	lea    rcx,[rsi+0x10]
   140050f49:	mov    DWORD PTR [rbp+0x30],0xcb
   140050f50:	mov    DWORD PTR [rbp+0x28],0x11c
   140050f57:	call   0x14002ff30
   140050f5c:	lea    rdx,[rbp+0x30]
   140050f60:	lea    rcx,[rsi+0x30]
   140050f64:	mov    rbx,rax
   140050f67:	call   0x14002ffd0
   140050f6c:	mov    QWORD PTR [rbx],rax
   140050f6f:	cmp    DWORD PTR [rsi+0x8],r12d
   140050f73:	jne    0x14005b3df
   140050f79:	lea    rdx,[rbp+0x28]
   140050f7d:	lea    rcx,[rsi+0x30]
   140050f81:	mov    DWORD PTR [rbp+0x28],0xcc
   140050f88:	call   0x14002ffd0
   140050f8d:	lea    rcx,[rip+0x216d4]        # 0x140072668
   140050f94:	lea    rdx,[rbp+0x28]
   140050f98:	mov    DWORD PTR [rax],0x11d
   140050f9e:	mov    DWORD PTR [rax+0x4],0xcc
   140050fa5:	mov    QWORD PTR [rax+0x8],rcx
   140050fa9:	lea    rcx,[rsi+0x10]
   140050fad:	mov    DWORD PTR [rbp+0x30],0xcc
   140050fb4:	mov    DWORD PTR [rbp+0x28],0x11d
   140050fbb:	call   0x14002ff30
   140050fc0:	lea    rdx,[rbp+0x30]
   140050fc4:	lea    rcx,[rsi+0x30]
   140050fc8:	mov    rbx,rax
   140050fcb:	call   0x14002ffd0
   140050fd0:	mov    QWORD PTR [rbx],rax
   140050fd3:	cmp    DWORD PTR [rsi+0x8],r12d
   140050fd7:	jne    0x14005b3df
   140050fdd:	lea    rdx,[rbp+0x28]
   140050fe1:	lea    rcx,[rsi+0x30]
   140050fe5:	mov    DWORD PTR [rbp+0x28],0xcd
   140050fec:	call   0x14002ffd0
   140050ff1:	lea    rcx,[rip+0x21688]        # 0x140072680
   140050ff8:	lea    rdx,[rbp+0x28]
   140050ffc:	mov    DWORD PTR [rax],0x11e
   140051002:	mov    DWORD PTR [rax+0x4],0xcd
   140051009:	mov    QWORD PTR [rax+0x8],rcx
   14005100d:	lea    rcx,[rsi+0x10]
   140051011:	mov    DWORD PTR [rbp+0x30],0xcd
   140051018:	mov    DWORD PTR [rbp+0x28],0x11e
   14005101f:	call   0x14002ff30
   140051024:	lea    rdx,[rbp+0x30]
   140051028:	lea    rcx,[rsi+0x30]
   14005102c:	mov    rbx,rax
   14005102f:	call   0x14002ffd0
   140051034:	mov    QWORD PTR [rbx],rax
   140051037:	cmp    DWORD PTR [rsi+0x8],r12d
   14005103b:	jne    0x14005b3df
   140051041:	lea    rdx,[rbp+0x28]
   140051045:	lea    rcx,[rsi+0x30]
   140051049:	mov    DWORD PTR [rbp+0x28],0xce
   140051050:	call   0x14002ffd0
   140051055:	lea    rcx,[rip+0x2163c]        # 0x140072698
   14005105c:	lea    rdx,[rbp+0x28]
   140051060:	mov    DWORD PTR [rax],0x11f
   140051066:	mov    DWORD PTR [rax+0x4],0xce
   14005106d:	mov    QWORD PTR [rax+0x8],rcx
   140051071:	lea    rcx,[rsi+0x10]
   140051075:	mov    DWORD PTR [rbp+0x30],0xce
   14005107c:	mov    DWORD PTR [rbp+0x28],0x11f
   140051083:	call   0x14002ff30
   140051088:	lea    rdx,[rbp+0x30]
   14005108c:	lea    rcx,[rsi+0x30]
   140051090:	mov    rbx,rax
   140051093:	call   0x14002ffd0
   140051098:	mov    QWORD PTR [rbx],rax
   14005109b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005109f:	jne    0x14005b3df
   1400510a5:	lea    rdx,[rbp+0x28]
   1400510a9:	lea    rcx,[rsi+0x30]
   1400510ad:	mov    DWORD PTR [rbp+0x28],0xcf
   1400510b4:	call   0x14002ffd0
   1400510b9:	lea    rcx,[rip+0x215f0]        # 0x1400726b0
   1400510c0:	lea    rdx,[rbp+0x28]
   1400510c4:	mov    DWORD PTR [rax],0x120
   1400510ca:	mov    DWORD PTR [rax+0x4],0xcf
   1400510d1:	mov    QWORD PTR [rax+0x8],rcx
   1400510d5:	lea    rcx,[rsi+0x10]
   1400510d9:	mov    DWORD PTR [rbp+0x30],0xcf
   1400510e0:	mov    DWORD PTR [rbp+0x28],0x120
   1400510e7:	call   0x14002ff30
   1400510ec:	lea    rdx,[rbp+0x30]
   1400510f0:	lea    rcx,[rsi+0x30]
   1400510f4:	mov    rbx,rax
   1400510f7:	call   0x14002ffd0
   1400510fc:	mov    QWORD PTR [rbx],rax
   1400510ff:	cmp    DWORD PTR [rsi+0x8],r12d
   140051103:	jne    0x14005b3df
   140051109:	lea    rdx,[rbp+0x28]
   14005110d:	lea    rcx,[rsi+0x30]
   140051111:	mov    DWORD PTR [rbp+0x28],0xd0
   140051118:	call   0x14002ffd0
   14005111d:	lea    rcx,[rip+0x215a4]        # 0x1400726c8
   140051124:	lea    rdx,[rbp+0x28]
   140051128:	mov    DWORD PTR [rax],0x121
   14005112e:	mov    DWORD PTR [rax+0x4],0xd0
   140051135:	mov    QWORD PTR [rax+0x8],rcx
   140051139:	lea    rcx,[rsi+0x10]
   14005113d:	mov    DWORD PTR [rbp+0x30],0xd0
   140051144:	mov    DWORD PTR [rbp+0x28],0x121
   14005114b:	call   0x14002ff30
   140051150:	lea    rdx,[rbp+0x30]
   140051154:	lea    rcx,[rsi+0x30]
   140051158:	mov    rbx,rax
   14005115b:	call   0x14002ffd0
   140051160:	mov    QWORD PTR [rbx],rax
   140051163:	cmp    DWORD PTR [rsi+0x8],r12d
   140051167:	jne    0x14005b3df
   14005116d:	lea    rdx,[rbp+0x28]
   140051171:	lea    rcx,[rsi+0x30]
   140051175:	mov    DWORD PTR [rbp+0x28],0xd1
   14005117c:	call   0x14002ffd0
   140051181:	lea    rcx,[rip+0x21558]        # 0x1400726e0
   140051188:	lea    rdx,[rbp+0x28]
   14005118c:	mov    DWORD PTR [rax],0x122
   140051192:	mov    DWORD PTR [rax+0x4],0xd1
   140051199:	mov    QWORD PTR [rax+0x8],rcx
   14005119d:	lea    rcx,[rsi+0x10]
   1400511a1:	mov    DWORD PTR [rbp+0x30],0xd1
   1400511a8:	mov    DWORD PTR [rbp+0x28],0x122
   1400511af:	call   0x14002ff30
   1400511b4:	lea    rdx,[rbp+0x30]
   1400511b8:	lea    rcx,[rsi+0x30]
   1400511bc:	mov    rbx,rax
   1400511bf:	call   0x14002ffd0
   1400511c4:	mov    QWORD PTR [rbx],rax
   1400511c7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400511cb:	jne    0x14005b3df
   1400511d1:	lea    rdx,[rbp+0x28]
   1400511d5:	lea    rcx,[rsi+0x30]
   1400511d9:	mov    DWORD PTR [rbp+0x28],0xd2
   1400511e0:	call   0x14002ffd0
   1400511e5:	lea    rcx,[rip+0x2150c]        # 0x1400726f8
   1400511ec:	lea    rdx,[rbp+0x28]
   1400511f0:	mov    DWORD PTR [rax],0x123
   1400511f6:	mov    DWORD PTR [rax+0x4],0xd2
   1400511fd:	mov    QWORD PTR [rax+0x8],rcx
   140051201:	lea    rcx,[rsi+0x10]
   140051205:	mov    DWORD PTR [rbp+0x30],0xd2
   14005120c:	mov    DWORD PTR [rbp+0x28],0x123
   140051213:	call   0x14002ff30
   140051218:	lea    rdx,[rbp+0x30]
   14005121c:	lea    rcx,[rsi+0x30]
   140051220:	mov    rbx,rax
   140051223:	call   0x14002ffd0
   140051228:	mov    QWORD PTR [rbx],rax
   14005122b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005122f:	jne    0x14005b3df
   140051235:	lea    rdx,[rbp+0x28]
   140051239:	lea    rcx,[rsi+0x30]
   14005123d:	mov    DWORD PTR [rbp+0x28],0xd3
   140051244:	call   0x14002ffd0
   140051249:	lea    rcx,[rip+0x214c8]        # 0x140072718
   140051250:	lea    rdx,[rbp+0x28]
   140051254:	mov    DWORD PTR [rax],0x124
   14005125a:	mov    DWORD PTR [rax+0x4],0xd3
   140051261:	mov    QWORD PTR [rax+0x8],rcx
   140051265:	lea    rcx,[rsi+0x10]
   140051269:	mov    DWORD PTR [rbp+0x30],0xd3
   140051270:	mov    DWORD PTR [rbp+0x28],0x124
   140051277:	call   0x14002ff30
   14005127c:	lea    rdx,[rbp+0x30]
   140051280:	lea    rcx,[rsi+0x30]
   140051284:	mov    rbx,rax
   140051287:	call   0x14002ffd0
   14005128c:	mov    QWORD PTR [rbx],rax
   14005128f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051293:	jne    0x14005b3df
   140051299:	lea    rdx,[rbp+0x28]
   14005129d:	lea    rcx,[rsi+0x30]
   1400512a1:	mov    DWORD PTR [rbp+0x28],0xd4
   1400512a8:	call   0x14002ffd0
   1400512ad:	lea    rcx,[rip+0x2147c]        # 0x140072730
   1400512b4:	lea    rdx,[rbp+0x28]
   1400512b8:	mov    DWORD PTR [rax],0x125
   1400512be:	mov    DWORD PTR [rax+0x4],0xd4
   1400512c5:	mov    QWORD PTR [rax+0x8],rcx
   1400512c9:	lea    rcx,[rsi+0x10]
   1400512cd:	mov    DWORD PTR [rbp+0x30],0xd4
   1400512d4:	mov    DWORD PTR [rbp+0x28],0x125
   1400512db:	call   0x14002ff30
   1400512e0:	lea    rdx,[rbp+0x30]
   1400512e4:	lea    rcx,[rsi+0x30]
   1400512e8:	mov    rbx,rax
   1400512eb:	call   0x14002ffd0
   1400512f0:	mov    QWORD PTR [rbx],rax
   1400512f3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400512f7:	jne    0x14005b3df
   1400512fd:	lea    rdx,[rbp+0x28]
   140051301:	lea    rcx,[rsi+0x30]
   140051305:	mov    DWORD PTR [rbp+0x28],0xd5
   14005130c:	call   0x14002ffd0
   140051311:	lea    rcx,[rip+0x21430]        # 0x140072748
   140051318:	lea    rdx,[rbp+0x28]
   14005131c:	mov    DWORD PTR [rax],0x126
   140051322:	mov    DWORD PTR [rax+0x4],0xd5
   140051329:	mov    QWORD PTR [rax+0x8],rcx
   14005132d:	lea    rcx,[rsi+0x10]
   140051331:	mov    DWORD PTR [rbp+0x30],0xd5
   140051338:	mov    DWORD PTR [rbp+0x28],0x126
   14005133f:	call   0x14002ff30
   140051344:	lea    rdx,[rbp+0x30]
   140051348:	lea    rcx,[rsi+0x30]
   14005134c:	mov    rbx,rax
   14005134f:	call   0x14002ffd0
   140051354:	mov    QWORD PTR [rbx],rax
   140051357:	cmp    DWORD PTR [rsi+0x8],r12d
   14005135b:	jne    0x14005b3df
   140051361:	lea    rdx,[rbp+0x28]
   140051365:	lea    rcx,[rsi+0x30]
   140051369:	mov    DWORD PTR [rbp+0x28],0xd6
   140051370:	call   0x14002ffd0
   140051375:	lea    rcx,[rip+0x213e4]        # 0x140072760
   14005137c:	lea    rdx,[rbp+0x28]
   140051380:	mov    DWORD PTR [rax],0x127
   140051386:	mov    DWORD PTR [rax+0x4],0xd6
   14005138d:	mov    QWORD PTR [rax+0x8],rcx
   140051391:	lea    rcx,[rsi+0x10]
   140051395:	mov    DWORD PTR [rbp+0x30],0xd6
   14005139c:	mov    DWORD PTR [rbp+0x28],0x127
   1400513a3:	call   0x14002ff30
   1400513a8:	lea    rdx,[rbp+0x30]
   1400513ac:	lea    rcx,[rsi+0x30]
   1400513b0:	mov    rbx,rax
   1400513b3:	call   0x14002ffd0
   1400513b8:	mov    QWORD PTR [rbx],rax
   1400513bb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400513bf:	jne    0x14005b3df
   1400513c5:	lea    rdx,[rbp+0x28]
   1400513c9:	lea    rcx,[rsi+0x30]
   1400513cd:	mov    DWORD PTR [rbp+0x28],0xd7
   1400513d4:	call   0x14002ffd0
   1400513d9:	lea    rcx,[rip+0x21398]        # 0x140072778
   1400513e0:	lea    rdx,[rbp+0x28]
   1400513e4:	mov    DWORD PTR [rax],0x128
   1400513ea:	mov    DWORD PTR [rax+0x4],0xd7
   1400513f1:	mov    QWORD PTR [rax+0x8],rcx
   1400513f5:	lea    rcx,[rsi+0x10]
   1400513f9:	mov    DWORD PTR [rbp+0x30],0xd7
   140051400:	mov    DWORD PTR [rbp+0x28],0x128
   140051407:	call   0x14002ff30
   14005140c:	lea    rdx,[rbp+0x30]
   140051410:	lea    rcx,[rsi+0x30]
   140051414:	mov    rbx,rax
   140051417:	call   0x14002ffd0
   14005141c:	mov    QWORD PTR [rbx],rax
   14005141f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051423:	jne    0x14005b3df
   140051429:	lea    rdx,[rbp+0x28]
   14005142d:	lea    rcx,[rsi+0x30]
   140051431:	mov    DWORD PTR [rbp+0x28],0xd8
   140051438:	call   0x14002ffd0
   14005143d:	lea    rcx,[rip+0x21344]        # 0x140072788
   140051444:	lea    rdx,[rbp+0x28]
   140051448:	mov    DWORD PTR [rax],0x129
   14005144e:	mov    DWORD PTR [rax+0x4],0xd8
   140051455:	mov    QWORD PTR [rax+0x8],rcx
   140051459:	lea    rcx,[rsi+0x10]
   14005145d:	mov    DWORD PTR [rbp+0x30],0xd8
   140051464:	mov    DWORD PTR [rbp+0x28],0x129
   14005146b:	call   0x14002ff30
   140051470:	lea    rdx,[rbp+0x30]
   140051474:	lea    rcx,[rsi+0x30]
   140051478:	mov    rbx,rax
   14005147b:	call   0x14002ffd0
   140051480:	mov    QWORD PTR [rbx],rax
   140051483:	cmp    DWORD PTR [rsi+0x8],r12d
   140051487:	jne    0x14005b3df
   14005148d:	lea    rdx,[rbp+0x28]
   140051491:	lea    rcx,[rsi+0x30]
   140051495:	mov    DWORD PTR [rbp+0x28],0xd9
   14005149c:	call   0x14002ffd0
   1400514a1:	lea    rcx,[rip+0x212f8]        # 0x1400727a0
   1400514a8:	lea    rdx,[rbp+0x28]
   1400514ac:	mov    DWORD PTR [rax],0x12a
   1400514b2:	mov    DWORD PTR [rax+0x4],0xd9
   1400514b9:	mov    QWORD PTR [rax+0x8],rcx
   1400514bd:	lea    rcx,[rsi+0x10]
   1400514c1:	mov    DWORD PTR [rbp+0x30],0xd9
   1400514c8:	mov    DWORD PTR [rbp+0x28],0x12a
   1400514cf:	call   0x14002ff30
   1400514d4:	lea    rdx,[rbp+0x30]
   1400514d8:	lea    rcx,[rsi+0x30]
   1400514dc:	mov    rbx,rax
   1400514df:	call   0x14002ffd0
   1400514e4:	mov    QWORD PTR [rbx],rax
   1400514e7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400514eb:	jne    0x14005b3df
   1400514f1:	lea    rdx,[rbp+0x28]
   1400514f5:	lea    rcx,[rsi+0x30]
   1400514f9:	mov    DWORD PTR [rbp+0x28],0xda
   140051500:	call   0x14002ffd0
   140051505:	lea    rcx,[rip+0x212ac]        # 0x1400727b8
   14005150c:	lea    rdx,[rbp+0x28]
   140051510:	mov    DWORD PTR [rax],0x12b
   140051516:	mov    DWORD PTR [rax+0x4],0xda
   14005151d:	mov    QWORD PTR [rax+0x8],rcx
   140051521:	lea    rcx,[rsi+0x10]
   140051525:	mov    DWORD PTR [rbp+0x30],0xda
   14005152c:	mov    DWORD PTR [rbp+0x28],0x12b
   140051533:	call   0x14002ff30
   140051538:	lea    rdx,[rbp+0x30]
   14005153c:	lea    rcx,[rsi+0x30]
   140051540:	mov    rbx,rax
   140051543:	call   0x14002ffd0
   140051548:	mov    QWORD PTR [rbx],rax
   14005154b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005154f:	jne    0x14005b3df
   140051555:	lea    rdx,[rbp+0x28]
   140051559:	lea    rcx,[rsi+0x30]
   14005155d:	mov    DWORD PTR [rbp+0x28],0xdb
   140051564:	call   0x14002ffd0
   140051569:	lea    rcx,[rip+0x21260]        # 0x1400727d0
   140051570:	lea    rdx,[rbp+0x28]
   140051574:	mov    DWORD PTR [rax],0x12c
   14005157a:	mov    DWORD PTR [rax+0x4],0xdb
   140051581:	mov    QWORD PTR [rax+0x8],rcx
   140051585:	lea    rcx,[rsi+0x10]
   140051589:	mov    DWORD PTR [rbp+0x30],0xdb
   140051590:	mov    DWORD PTR [rbp+0x28],0x12c
   140051597:	call   0x14002ff30
   14005159c:	lea    rdx,[rbp+0x30]
   1400515a0:	lea    rcx,[rsi+0x30]
   1400515a4:	mov    rbx,rax
   1400515a7:	call   0x14002ffd0
   1400515ac:	mov    QWORD PTR [rbx],rax
   1400515af:	cmp    DWORD PTR [rsi+0x8],r12d
   1400515b3:	jne    0x14005b3df
   1400515b9:	lea    rdx,[rbp+0x28]
   1400515bd:	lea    rcx,[rsi+0x30]
   1400515c1:	mov    DWORD PTR [rbp+0x28],0xdc
   1400515c8:	call   0x14002ffd0
   1400515cd:	lea    rcx,[rip+0x21214]        # 0x1400727e8
   1400515d4:	lea    rdx,[rbp+0x28]
   1400515d8:	mov    DWORD PTR [rax],0x12d
   1400515de:	mov    DWORD PTR [rax+0x4],0xdc
   1400515e5:	mov    QWORD PTR [rax+0x8],rcx
   1400515e9:	lea    rcx,[rsi+0x10]
   1400515ed:	mov    DWORD PTR [rbp+0x30],0xdc
   1400515f4:	mov    DWORD PTR [rbp+0x28],0x12d
   1400515fb:	call   0x14002ff30
   140051600:	lea    rdx,[rbp+0x30]
   140051604:	lea    rcx,[rsi+0x30]
   140051608:	mov    rbx,rax
   14005160b:	call   0x14002ffd0
   140051610:	mov    QWORD PTR [rbx],rax
   140051613:	cmp    DWORD PTR [rsi+0x8],r12d
   140051617:	jne    0x14005b3df
   14005161d:	lea    rdx,[rbp+0x28]
   140051621:	lea    rcx,[rsi+0x30]
   140051625:	mov    DWORD PTR [rbp+0x28],0xdd
   14005162c:	call   0x14002ffd0
   140051631:	lea    rcx,[rip+0x211c8]        # 0x140072800
   140051638:	lea    rdx,[rbp+0x28]
   14005163c:	mov    DWORD PTR [rax],0x12e
   140051642:	mov    DWORD PTR [rax+0x4],0xdd
   140051649:	mov    QWORD PTR [rax+0x8],rcx
   14005164d:	lea    rcx,[rsi+0x10]
   140051651:	mov    DWORD PTR [rbp+0x30],0xdd
   140051658:	mov    DWORD PTR [rbp+0x28],0x12e
   14005165f:	call   0x14002ff30
   140051664:	lea    rdx,[rbp+0x30]
   140051668:	lea    rcx,[rsi+0x30]
   14005166c:	mov    rbx,rax
   14005166f:	call   0x14002ffd0
   140051674:	mov    QWORD PTR [rbx],rax
   140051677:	cmp    DWORD PTR [rsi+0x8],r12d
   14005167b:	jne    0x14005b3df
   140051681:	lea    rdx,[rbp+0x28]
   140051685:	lea    rcx,[rsi+0x30]
   140051689:	mov    DWORD PTR [rbp+0x28],0xde
   140051690:	call   0x14002ffd0
   140051695:	lea    rcx,[rip+0x2117c]        # 0x140072818
   14005169c:	lea    rdx,[rbp+0x28]
   1400516a0:	mov    DWORD PTR [rax],0x12f
   1400516a6:	mov    DWORD PTR [rax+0x4],0xde
   1400516ad:	mov    QWORD PTR [rax+0x8],rcx
   1400516b1:	lea    rcx,[rsi+0x10]
   1400516b5:	mov    DWORD PTR [rbp+0x30],0xde
   1400516bc:	mov    DWORD PTR [rbp+0x28],0x12f
   1400516c3:	call   0x14002ff30
   1400516c8:	lea    rdx,[rbp+0x30]
   1400516cc:	lea    rcx,[rsi+0x30]
   1400516d0:	mov    rbx,rax
   1400516d3:	call   0x14002ffd0
   1400516d8:	mov    QWORD PTR [rbx],rax
   1400516db:	cmp    DWORD PTR [rsi+0x8],r12d
   1400516df:	jne    0x14005b3df
   1400516e5:	lea    rdx,[rbp+0x28]
   1400516e9:	lea    rcx,[rsi+0x30]
   1400516ed:	mov    DWORD PTR [rbp+0x28],0xdf
   1400516f4:	call   0x14002ffd0
   1400516f9:	lea    rcx,[rip+0x21130]        # 0x140072830
   140051700:	lea    rdx,[rbp+0x28]
   140051704:	mov    DWORD PTR [rax],0x130
   14005170a:	mov    DWORD PTR [rax+0x4],0xdf
   140051711:	mov    QWORD PTR [rax+0x8],rcx
   140051715:	lea    rcx,[rsi+0x10]
   140051719:	mov    DWORD PTR [rbp+0x30],0xdf
   140051720:	mov    DWORD PTR [rbp+0x28],0x130
   140051727:	call   0x14002ff30
   14005172c:	lea    rdx,[rbp+0x30]
   140051730:	lea    rcx,[rsi+0x30]
   140051734:	mov    rbx,rax
   140051737:	call   0x14002ffd0
   14005173c:	mov    QWORD PTR [rbx],rax
   14005173f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051743:	jne    0x14005b3df
   140051749:	lea    rdx,[rbp+0x28]
   14005174d:	lea    rcx,[rsi+0x30]
   140051751:	mov    DWORD PTR [rbp+0x28],0xe0
   140051758:	call   0x14002ffd0
   14005175d:	lea    rcx,[rip+0x210e4]        # 0x140072848
   140051764:	lea    rdx,[rbp+0x28]
   140051768:	mov    DWORD PTR [rax],0x131
   14005176e:	mov    DWORD PTR [rax+0x4],0xe0
   140051775:	mov    QWORD PTR [rax+0x8],rcx
   140051779:	lea    rcx,[rsi+0x10]
   14005177d:	mov    DWORD PTR [rbp+0x30],0xe0
   140051784:	mov    DWORD PTR [rbp+0x28],0x131
   14005178b:	call   0x14002ff30
   140051790:	lea    rdx,[rbp+0x30]
   140051794:	lea    rcx,[rsi+0x30]
   140051798:	mov    rbx,rax
   14005179b:	call   0x14002ffd0
   1400517a0:	mov    QWORD PTR [rbx],rax
   1400517a3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400517a7:	jne    0x14005b3df
   1400517ad:	lea    rdx,[rbp+0x28]
   1400517b1:	lea    rcx,[rsi+0x30]
   1400517b5:	mov    DWORD PTR [rbp+0x28],0xe1
   1400517bc:	call   0x14002ffd0
   1400517c1:	lea    rcx,[rip+0x21098]        # 0x140072860
   1400517c8:	lea    rdx,[rbp+0x28]
   1400517cc:	mov    DWORD PTR [rax],0x132
   1400517d2:	mov    DWORD PTR [rax+0x4],0xe1
   1400517d9:	mov    QWORD PTR [rax+0x8],rcx
   1400517dd:	lea    rcx,[rsi+0x10]
   1400517e1:	mov    DWORD PTR [rbp+0x30],0xe1
   1400517e8:	mov    DWORD PTR [rbp+0x28],0x132
   1400517ef:	call   0x14002ff30
   1400517f4:	lea    rdx,[rbp+0x30]
   1400517f8:	lea    rcx,[rsi+0x30]
   1400517fc:	mov    rbx,rax
   1400517ff:	call   0x14002ffd0
   140051804:	mov    QWORD PTR [rbx],rax
   140051807:	cmp    DWORD PTR [rsi+0x8],r12d
   14005180b:	jne    0x14005b3df
   140051811:	lea    rdx,[rbp+0x28]
   140051815:	lea    rcx,[rsi+0x30]
   140051819:	mov    DWORD PTR [rbp+0x28],0xe2
   140051820:	call   0x14002ffd0
   140051825:	lea    rcx,[rip+0x21054]        # 0x140072880
   14005182c:	lea    rdx,[rbp+0x28]
   140051830:	mov    DWORD PTR [rax],0x133
   140051836:	mov    DWORD PTR [rax+0x4],0xe2
   14005183d:	mov    QWORD PTR [rax+0x8],rcx
   140051841:	lea    rcx,[rsi+0x10]
   140051845:	mov    DWORD PTR [rbp+0x30],0xe2
   14005184c:	mov    DWORD PTR [rbp+0x28],0x133
   140051853:	call   0x14002ff30
   140051858:	lea    rdx,[rbp+0x30]
   14005185c:	lea    rcx,[rsi+0x30]
   140051860:	mov    rbx,rax
   140051863:	call   0x14002ffd0
   140051868:	mov    QWORD PTR [rbx],rax
   14005186b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005186f:	jne    0x14005b3df
   140051875:	lea    rdx,[rbp+0x28]
   140051879:	lea    rcx,[rsi+0x30]
   14005187d:	mov    DWORD PTR [rbp+0x28],0xe3
   140051884:	call   0x14002ffd0
   140051889:	lea    rcx,[rip+0x21008]        # 0x140072898
   140051890:	lea    rdx,[rbp+0x28]
   140051894:	mov    DWORD PTR [rax],0x134
   14005189a:	mov    DWORD PTR [rax+0x4],0xe3
   1400518a1:	mov    QWORD PTR [rax+0x8],rcx
   1400518a5:	lea    rcx,[rsi+0x10]
   1400518a9:	mov    DWORD PTR [rbp+0x30],0xe3
   1400518b0:	mov    DWORD PTR [rbp+0x28],0x134
   1400518b7:	call   0x14002ff30
   1400518bc:	lea    rdx,[rbp+0x30]
   1400518c0:	lea    rcx,[rsi+0x30]
   1400518c4:	mov    rbx,rax
   1400518c7:	call   0x14002ffd0
   1400518cc:	mov    QWORD PTR [rbx],rax
   1400518cf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400518d3:	jne    0x14005b3df
   1400518d9:	lea    rdx,[rbp+0x28]
   1400518dd:	lea    rcx,[rsi+0x30]
   1400518e1:	mov    DWORD PTR [rbp+0x28],0xe4
   1400518e8:	call   0x14002ffd0
   1400518ed:	lea    rcx,[rip+0x20fbc]        # 0x1400728b0
   1400518f4:	lea    rdx,[rbp+0x28]
   1400518f8:	mov    DWORD PTR [rax],0x135
   1400518fe:	mov    DWORD PTR [rax+0x4],0xe4
   140051905:	mov    QWORD PTR [rax+0x8],rcx
   140051909:	lea    rcx,[rsi+0x10]
   14005190d:	mov    DWORD PTR [rbp+0x30],0xe4
   140051914:	mov    DWORD PTR [rbp+0x28],0x135
   14005191b:	call   0x14002ff30
   140051920:	lea    rdx,[rbp+0x30]
   140051924:	lea    rcx,[rsi+0x30]
   140051928:	mov    rbx,rax
   14005192b:	call   0x14002ffd0
   140051930:	mov    QWORD PTR [rbx],rax
   140051933:	cmp    DWORD PTR [rsi+0x8],r12d
   140051937:	jne    0x14005b3df
   14005193d:	lea    rdx,[rbp+0x28]
   140051941:	lea    rcx,[rsi+0x30]
   140051945:	mov    DWORD PTR [rbp+0x28],0xe5
   14005194c:	call   0x14002ffd0
   140051951:	lea    rcx,[rip+0x20f70]        # 0x1400728c8
   140051958:	lea    rdx,[rbp+0x28]
   14005195c:	mov    DWORD PTR [rax],0x136
   140051962:	mov    DWORD PTR [rax+0x4],0xe5
   140051969:	mov    QWORD PTR [rax+0x8],rcx
   14005196d:	lea    rcx,[rsi+0x10]
   140051971:	mov    DWORD PTR [rbp+0x30],0xe5
   140051978:	mov    DWORD PTR [rbp+0x28],0x136
   14005197f:	call   0x14002ff30
   140051984:	lea    rdx,[rbp+0x30]
   140051988:	lea    rcx,[rsi+0x30]
   14005198c:	mov    rbx,rax
   14005198f:	call   0x14002ffd0
   140051994:	mov    QWORD PTR [rbx],rax
   140051997:	cmp    DWORD PTR [rsi+0x8],r12d
   14005199b:	jne    0x14005b3df
   1400519a1:	lea    rdx,[rbp+0x28]
   1400519a5:	lea    rcx,[rsi+0x30]
   1400519a9:	mov    DWORD PTR [rbp+0x28],0xe6
   1400519b0:	call   0x14002ffd0
   1400519b5:	lea    rcx,[rip+0x20f24]        # 0x1400728e0
   1400519bc:	lea    rdx,[rbp+0x28]
   1400519c0:	mov    DWORD PTR [rax],0x137
   1400519c6:	mov    DWORD PTR [rax+0x4],0xe6
   1400519cd:	mov    QWORD PTR [rax+0x8],rcx
   1400519d1:	lea    rcx,[rsi+0x10]
   1400519d5:	mov    DWORD PTR [rbp+0x30],0xe6
   1400519dc:	mov    DWORD PTR [rbp+0x28],0x137
   1400519e3:	call   0x14002ff30
   1400519e8:	lea    rdx,[rbp+0x30]
   1400519ec:	lea    rcx,[rsi+0x30]
   1400519f0:	mov    rbx,rax
   1400519f3:	call   0x14002ffd0
   1400519f8:	mov    QWORD PTR [rbx],rax
   1400519fb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400519ff:	jne    0x14005b3df
   140051a05:	lea    rdx,[rbp+0x28]
   140051a09:	lea    rcx,[rsi+0x30]
   140051a0d:	mov    DWORD PTR [rbp+0x28],0xe7
   140051a14:	call   0x14002ffd0
   140051a19:	lea    rcx,[rip+0x20ed0]        # 0x1400728f0
   140051a20:	lea    rdx,[rbp+0x28]
   140051a24:	mov    DWORD PTR [rax],0x138
   140051a2a:	mov    DWORD PTR [rax+0x4],0xe7
   140051a31:	mov    QWORD PTR [rax+0x8],rcx
   140051a35:	lea    rcx,[rsi+0x10]
   140051a39:	mov    DWORD PTR [rbp+0x30],0xe7
   140051a40:	mov    DWORD PTR [rbp+0x28],0x138
   140051a47:	call   0x14002ff30
   140051a4c:	lea    rdx,[rbp+0x30]
   140051a50:	lea    rcx,[rsi+0x30]
   140051a54:	mov    rbx,rax
   140051a57:	call   0x14002ffd0
   140051a5c:	mov    QWORD PTR [rbx],rax
   140051a5f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051a63:	jne    0x14005b3df
   140051a69:	lea    rdx,[rbp+0x28]
   140051a6d:	lea    rcx,[rsi+0x30]
   140051a71:	mov    DWORD PTR [rbp+0x28],0xe8
   140051a78:	call   0x14002ffd0
   140051a7d:	lea    rcx,[rip+0x20e84]        # 0x140072908
   140051a84:	lea    rdx,[rbp+0x28]
   140051a88:	mov    DWORD PTR [rax],0x139
   140051a8e:	mov    DWORD PTR [rax+0x4],0xe8
   140051a95:	mov    QWORD PTR [rax+0x8],rcx
   140051a99:	lea    rcx,[rsi+0x10]
   140051a9d:	mov    DWORD PTR [rbp+0x30],0xe8
   140051aa4:	mov    DWORD PTR [rbp+0x28],0x139
   140051aab:	call   0x14002ff30
   140051ab0:	lea    rdx,[rbp+0x30]
   140051ab4:	lea    rcx,[rsi+0x30]
   140051ab8:	mov    rbx,rax
   140051abb:	call   0x14002ffd0
   140051ac0:	mov    QWORD PTR [rbx],rax
   140051ac3:	cmp    DWORD PTR [rsi+0x8],r12d
   140051ac7:	jne    0x14005b3df
   140051acd:	lea    rdx,[rbp+0x28]
   140051ad1:	lea    rcx,[rsi+0x30]
   140051ad5:	mov    DWORD PTR [rbp+0x28],0xe9
   140051adc:	call   0x14002ffd0
   140051ae1:	lea    rcx,[rip+0x20e38]        # 0x140072920
   140051ae8:	lea    rdx,[rbp+0x28]
   140051aec:	mov    DWORD PTR [rax],0x13a
   140051af2:	mov    DWORD PTR [rax+0x4],0xe9
   140051af9:	mov    QWORD PTR [rax+0x8],rcx
   140051afd:	lea    rcx,[rsi+0x10]
   140051b01:	mov    DWORD PTR [rbp+0x30],0xe9
   140051b08:	mov    DWORD PTR [rbp+0x28],0x13a
   140051b0f:	call   0x14002ff30
   140051b14:	lea    rdx,[rbp+0x30]
   140051b18:	lea    rcx,[rsi+0x30]
   140051b1c:	mov    rbx,rax
   140051b1f:	call   0x14002ffd0
   140051b24:	mov    QWORD PTR [rbx],rax
   140051b27:	cmp    DWORD PTR [rsi+0x8],r12d
   140051b2b:	jne    0x14005b3df
   140051b31:	lea    rdx,[rbp+0x28]
   140051b35:	lea    rcx,[rsi+0x30]
   140051b39:	mov    DWORD PTR [rbp+0x28],0xea
   140051b40:	call   0x14002ffd0
   140051b45:	lea    rcx,[rip+0x20dec]        # 0x140072938
   140051b4c:	lea    rdx,[rbp+0x28]
   140051b50:	mov    DWORD PTR [rax],0x13b
   140051b56:	mov    DWORD PTR [rax+0x4],0xea
   140051b5d:	mov    QWORD PTR [rax+0x8],rcx
   140051b61:	lea    rcx,[rsi+0x10]
   140051b65:	mov    DWORD PTR [rbp+0x30],0xea
   140051b6c:	mov    DWORD PTR [rbp+0x28],0x13b
   140051b73:	call   0x14002ff30
   140051b78:	lea    rdx,[rbp+0x30]
   140051b7c:	lea    rcx,[rsi+0x30]
   140051b80:	mov    rbx,rax
   140051b83:	call   0x14002ffd0
   140051b88:	mov    QWORD PTR [rbx],rax
   140051b8b:	cmp    DWORD PTR [rsi+0x8],r12d
   140051b8f:	jne    0x14005b3df
   140051b95:	lea    rdx,[rbp+0x28]
   140051b99:	lea    rcx,[rsi+0x30]
   140051b9d:	mov    DWORD PTR [rbp+0x28],0xeb
   140051ba4:	call   0x14002ffd0
   140051ba9:	lea    rcx,[rip+0x20da0]        # 0x140072950
   140051bb0:	lea    rdx,[rbp+0x28]
   140051bb4:	mov    DWORD PTR [rax],0x13c
   140051bba:	mov    DWORD PTR [rax+0x4],0xeb
   140051bc1:	mov    QWORD PTR [rax+0x8],rcx
   140051bc5:	lea    rcx,[rsi+0x10]
   140051bc9:	mov    DWORD PTR [rbp+0x30],0xeb
   140051bd0:	mov    DWORD PTR [rbp+0x28],0x13c
   140051bd7:	call   0x14002ff30
   140051bdc:	lea    rdx,[rbp+0x30]
   140051be0:	lea    rcx,[rsi+0x30]
   140051be4:	mov    rbx,rax
   140051be7:	call   0x14002ffd0
   140051bec:	mov    QWORD PTR [rbx],rax
   140051bef:	cmp    DWORD PTR [rsi+0x8],r12d
   140051bf3:	jne    0x14005b3df
   140051bf9:	lea    rdx,[rbp+0x28]
   140051bfd:	lea    rcx,[rsi+0x30]
   140051c01:	mov    DWORD PTR [rbp+0x28],0xec
   140051c08:	call   0x14002ffd0
   140051c0d:	lea    rcx,[rip+0x20d54]        # 0x140072968
   140051c14:	lea    rdx,[rbp+0x28]
   140051c18:	mov    DWORD PTR [rax],0x13d
   140051c1e:	mov    DWORD PTR [rax+0x4],0xec
   140051c25:	mov    QWORD PTR [rax+0x8],rcx
   140051c29:	lea    rcx,[rsi+0x10]
   140051c2d:	mov    DWORD PTR [rbp+0x30],0xec
   140051c34:	mov    DWORD PTR [rbp+0x28],0x13d
   140051c3b:	call   0x14002ff30
   140051c40:	lea    rdx,[rbp+0x30]
   140051c44:	lea    rcx,[rsi+0x30]
   140051c48:	mov    rbx,rax
   140051c4b:	call   0x14002ffd0
   140051c50:	mov    QWORD PTR [rbx],rax
   140051c53:	cmp    DWORD PTR [rsi+0x8],r12d
   140051c57:	jne    0x14005b3df
   140051c5d:	lea    rdx,[rbp+0x28]
   140051c61:	lea    rcx,[rsi+0x30]
   140051c65:	mov    DWORD PTR [rbp+0x28],0xed
   140051c6c:	call   0x14002ffd0
   140051c71:	lea    rcx,[rip+0x20d08]        # 0x140072980
   140051c78:	lea    rdx,[rbp+0x28]
   140051c7c:	mov    DWORD PTR [rax],0x13e
   140051c82:	mov    DWORD PTR [rax+0x4],0xed
   140051c89:	mov    QWORD PTR [rax+0x8],rcx
   140051c8d:	lea    rcx,[rsi+0x10]
   140051c91:	mov    DWORD PTR [rbp+0x30],0xed
   140051c98:	mov    DWORD PTR [rbp+0x28],0x13e
   140051c9f:	call   0x14002ff30
   140051ca4:	lea    rdx,[rbp+0x30]
   140051ca8:	lea    rcx,[rsi+0x30]
   140051cac:	mov    rbx,rax
   140051caf:	call   0x14002ffd0
   140051cb4:	mov    QWORD PTR [rbx],rax
   140051cb7:	cmp    DWORD PTR [rsi+0x8],r12d
   140051cbb:	jne    0x14005b3df
   140051cc1:	lea    rdx,[rbp+0x28]
   140051cc5:	lea    rcx,[rsi+0x30]
   140051cc9:	mov    DWORD PTR [rbp+0x28],0xee
   140051cd0:	call   0x14002ffd0
   140051cd5:	lea    rcx,[rip+0x20cbc]        # 0x140072998
   140051cdc:	lea    rdx,[rbp+0x28]
   140051ce0:	mov    DWORD PTR [rax],0x13f
   140051ce6:	mov    DWORD PTR [rax+0x4],0xee
   140051ced:	mov    QWORD PTR [rax+0x8],rcx
   140051cf1:	lea    rcx,[rsi+0x10]
   140051cf5:	mov    DWORD PTR [rbp+0x30],0xee
   140051cfc:	mov    DWORD PTR [rbp+0x28],0x13f
   140051d03:	call   0x14002ff30
   140051d08:	lea    rdx,[rbp+0x30]
   140051d0c:	lea    rcx,[rsi+0x30]
   140051d10:	mov    rbx,rax
   140051d13:	call   0x14002ffd0
   140051d18:	mov    QWORD PTR [rbx],rax
   140051d1b:	cmp    DWORD PTR [rsi+0x8],r12d
   140051d1f:	jne    0x14005b3df
   140051d25:	lea    rdx,[rbp+0x28]
   140051d29:	lea    rcx,[rsi+0x30]
   140051d2d:	mov    DWORD PTR [rbp+0x28],0xef
   140051d34:	call   0x14002ffd0
   140051d39:	lea    rcx,[rip+0x20c70]        # 0x1400729b0
   140051d40:	lea    rdx,[rbp+0x28]
   140051d44:	mov    DWORD PTR [rax],0x140
   140051d4a:	mov    DWORD PTR [rax+0x4],0xef
   140051d51:	mov    QWORD PTR [rax+0x8],rcx
   140051d55:	lea    rcx,[rsi+0x10]
   140051d59:	mov    DWORD PTR [rbp+0x30],0xef
   140051d60:	mov    DWORD PTR [rbp+0x28],0x140
   140051d67:	call   0x14002ff30
   140051d6c:	lea    rdx,[rbp+0x30]
   140051d70:	lea    rcx,[rsi+0x30]
   140051d74:	mov    rbx,rax
   140051d77:	call   0x14002ffd0
   140051d7c:	mov    QWORD PTR [rbx],rax
   140051d7f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051d83:	jne    0x14005b3df
   140051d89:	lea    rdx,[rbp+0x28]
   140051d8d:	lea    rcx,[rsi+0x30]
   140051d91:	mov    DWORD PTR [rbp+0x28],0xf0
   140051d98:	call   0x14002ffd0
   140051d9d:	lea    rcx,[rip+0x20c24]        # 0x1400729c8
   140051da4:	lea    rdx,[rbp+0x28]
   140051da8:	mov    DWORD PTR [rax],0x141
   140051dae:	mov    DWORD PTR [rax+0x4],0xf0
   140051db5:	mov    QWORD PTR [rax+0x8],rcx
   140051db9:	lea    rcx,[rsi+0x10]
   140051dbd:	mov    DWORD PTR [rbp+0x30],0xf0
   140051dc4:	mov    DWORD PTR [rbp+0x28],0x141
   140051dcb:	call   0x14002ff30
   140051dd0:	lea    rdx,[rbp+0x30]
   140051dd4:	lea    rcx,[rsi+0x30]
   140051dd8:	mov    rbx,rax
   140051ddb:	call   0x14002ffd0
   140051de0:	mov    QWORD PTR [rbx],rax
   140051de3:	cmp    DWORD PTR [rsi+0x8],r12d
   140051de7:	jne    0x14005b3df
   140051ded:	lea    rdx,[rbp+0x28]
   140051df1:	lea    rcx,[rsi+0x30]
   140051df5:	mov    DWORD PTR [rbp+0x28],0xf1
   140051dfc:	call   0x14002ffd0
   140051e01:	lea    rcx,[rip+0x20be0]        # 0x1400729e8
   140051e08:	lea    rdx,[rbp+0x28]
   140051e0c:	mov    DWORD PTR [rax],0x142
   140051e12:	mov    DWORD PTR [rax+0x4],0xf1
   140051e19:	mov    QWORD PTR [rax+0x8],rcx
   140051e1d:	lea    rcx,[rsi+0x10]
   140051e21:	mov    DWORD PTR [rbp+0x30],0xf1
   140051e28:	mov    DWORD PTR [rbp+0x28],0x142
   140051e2f:	call   0x14002ff30
   140051e34:	lea    rdx,[rbp+0x30]
   140051e38:	lea    rcx,[rsi+0x30]
   140051e3c:	mov    rbx,rax
   140051e3f:	call   0x14002ffd0
   140051e44:	mov    QWORD PTR [rbx],rax
   140051e47:	cmp    DWORD PTR [rsi+0x8],r12d
   140051e4b:	jne    0x14005b3df
   140051e51:	lea    rdx,[rbp+0x28]
   140051e55:	lea    rcx,[rsi+0x30]
   140051e59:	mov    DWORD PTR [rbp+0x28],0xf2
   140051e60:	call   0x14002ffd0
   140051e65:	lea    rcx,[rip+0x20b94]        # 0x140072a00
   140051e6c:	lea    rdx,[rbp+0x28]
   140051e70:	mov    DWORD PTR [rax],0x143
   140051e76:	mov    DWORD PTR [rax+0x4],0xf2
   140051e7d:	mov    QWORD PTR [rax+0x8],rcx
   140051e81:	lea    rcx,[rsi+0x10]
   140051e85:	mov    DWORD PTR [rbp+0x30],0xf2
   140051e8c:	mov    DWORD PTR [rbp+0x28],0x143
   140051e93:	call   0x14002ff30
   140051e98:	lea    rdx,[rbp+0x30]
   140051e9c:	lea    rcx,[rsi+0x30]
   140051ea0:	mov    rbx,rax
   140051ea3:	call   0x14002ffd0
   140051ea8:	mov    QWORD PTR [rbx],rax
   140051eab:	cmp    DWORD PTR [rsi+0x8],r12d
   140051eaf:	jne    0x14005b3df
   140051eb5:	lea    rdx,[rbp+0x28]
   140051eb9:	lea    rcx,[rsi+0x30]
   140051ebd:	mov    DWORD PTR [rbp+0x28],0xf3
   140051ec4:	call   0x14002ffd0
   140051ec9:	lea    rcx,[rip+0x20b48]        # 0x140072a18
   140051ed0:	lea    rdx,[rbp+0x28]
   140051ed4:	mov    DWORD PTR [rax],0x144
   140051eda:	mov    DWORD PTR [rax+0x4],0xf3
   140051ee1:	mov    QWORD PTR [rax+0x8],rcx
   140051ee5:	lea    rcx,[rsi+0x10]
   140051ee9:	mov    DWORD PTR [rbp+0x30],0xf3
   140051ef0:	mov    DWORD PTR [rbp+0x28],0x144
   140051ef7:	call   0x14002ff30
   140051efc:	lea    rdx,[rbp+0x30]
   140051f00:	lea    rcx,[rsi+0x30]
   140051f04:	mov    rbx,rax
   140051f07:	call   0x14002ffd0
   140051f0c:	mov    QWORD PTR [rbx],rax
   140051f0f:	cmp    DWORD PTR [rsi+0x8],r12d
   140051f13:	jne    0x14005b3df
   140051f19:	lea    rdx,[rbp+0x28]
   140051f1d:	lea    rcx,[rsi+0x30]
   140051f21:	mov    DWORD PTR [rbp+0x28],0xf4
   140051f28:	call   0x14002ffd0
   140051f2d:	lea    rcx,[rip+0x20afc]        # 0x140072a30
   140051f34:	lea    rdx,[rbp+0x28]
   140051f38:	mov    DWORD PTR [rax],0x145
   140051f3e:	mov    DWORD PTR [rax+0x4],0xf4
   140051f45:	mov    QWORD PTR [rax+0x8],rcx
   140051f49:	lea    rcx,[rsi+0x10]
   140051f4d:	mov    DWORD PTR [rbp+0x30],0xf4
   140051f54:	mov    DWORD PTR [rbp+0x28],0x145
   140051f5b:	call   0x14002ff30
   140051f60:	lea    rdx,[rbp+0x30]
   140051f64:	lea    rcx,[rsi+0x30]
   140051f68:	mov    rbx,rax
   140051f6b:	call   0x14002ffd0
   140051f70:	mov    QWORD PTR [rbx],rax
   140051f73:	cmp    DWORD PTR [rsi+0x8],r12d
   140051f77:	jne    0x14005b3df
   140051f7d:	lea    rdx,[rbp+0x28]
   140051f81:	lea    rcx,[rsi+0x30]
   140051f85:	mov    DWORD PTR [rbp+0x28],0xf5
   140051f8c:	call   0x14002ffd0
   140051f91:	lea    rcx,[rip+0x20ab0]        # 0x140072a48
   140051f98:	lea    rdx,[rbp+0x28]
   140051f9c:	mov    DWORD PTR [rax],0x146
   140051fa2:	mov    DWORD PTR [rax+0x4],0xf5
   140051fa9:	mov    QWORD PTR [rax+0x8],rcx
   140051fad:	lea    rcx,[rsi+0x10]
   140051fb1:	mov    DWORD PTR [rbp+0x30],0xf5
   140051fb8:	mov    DWORD PTR [rbp+0x28],0x146
   140051fbf:	call   0x14002ff30
   140051fc4:	lea    rdx,[rbp+0x30]
   140051fc8:	lea    rcx,[rsi+0x30]
   140051fcc:	mov    rbx,rax
   140051fcf:	call   0x14002ffd0
   140051fd4:	mov    QWORD PTR [rbx],rax
   140051fd7:	cmp    DWORD PTR [rsi+0x8],r12d
   140051fdb:	jne    0x14005b3df
   140051fe1:	lea    rdx,[rbp+0x28]
   140051fe5:	lea    rcx,[rsi+0x30]
   140051fe9:	mov    DWORD PTR [rbp+0x28],0xf6
   140051ff0:	call   0x14002ffd0
   140051ff5:	lea    rcx,[rip+0x20a5c]        # 0x140072a58
   140051ffc:	lea    rdx,[rbp+0x28]
   140052000:	mov    DWORD PTR [rax],0x147
   140052006:	mov    DWORD PTR [rax+0x4],0xf6
   14005200d:	mov    QWORD PTR [rax+0x8],rcx
   140052011:	lea    rcx,[rsi+0x10]
   140052015:	mov    DWORD PTR [rbp+0x30],0xf6
   14005201c:	mov    DWORD PTR [rbp+0x28],0x147
   140052023:	call   0x14002ff30
   140052028:	lea    rdx,[rbp+0x30]
   14005202c:	lea    rcx,[rsi+0x30]
   140052030:	mov    rbx,rax
   140052033:	call   0x14002ffd0
   140052038:	mov    QWORD PTR [rbx],rax
   14005203b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005203f:	jne    0x14005b3df
   140052045:	lea    rdx,[rbp+0x28]
   140052049:	lea    rcx,[rsi+0x30]
   14005204d:	mov    DWORD PTR [rbp+0x28],0xf7
   140052054:	call   0x14002ffd0
   140052059:	lea    rcx,[rip+0x20a10]        # 0x140072a70
   140052060:	lea    rdx,[rbp+0x28]
   140052064:	mov    DWORD PTR [rax],0x148
   14005206a:	mov    DWORD PTR [rax+0x4],0xf7
   140052071:	mov    QWORD PTR [rax+0x8],rcx
   140052075:	lea    rcx,[rsi+0x10]
   140052079:	mov    DWORD PTR [rbp+0x30],0xf7
   140052080:	mov    DWORD PTR [rbp+0x28],0x148
   140052087:	call   0x14002ff30
   14005208c:	lea    rdx,[rbp+0x30]
   140052090:	lea    rcx,[rsi+0x30]
   140052094:	mov    rbx,rax
   140052097:	call   0x14002ffd0
   14005209c:	mov    QWORD PTR [rbx],rax
   14005209f:	cmp    DWORD PTR [rsi+0x8],r12d
   1400520a3:	jne    0x14005b3df
   1400520a9:	lea    rdx,[rbp+0x28]
   1400520ad:	lea    rcx,[rsi+0x30]
   1400520b1:	mov    DWORD PTR [rbp+0x28],0xf8
   1400520b8:	call   0x14002ffd0
   1400520bd:	lea    rcx,[rip+0x209c4]        # 0x140072a88
   1400520c4:	lea    rdx,[rbp+0x28]
   1400520c8:	mov    DWORD PTR [rax],0x149
   1400520ce:	mov    DWORD PTR [rax+0x4],0xf8
   1400520d5:	mov    QWORD PTR [rax+0x8],rcx
   1400520d9:	lea    rcx,[rsi+0x10]
   1400520dd:	mov    DWORD PTR [rbp+0x30],0xf8
   1400520e4:	mov    DWORD PTR [rbp+0x28],0x149
   1400520eb:	call   0x14002ff30
   1400520f0:	lea    rdx,[rbp+0x30]
   1400520f4:	lea    rcx,[rsi+0x30]
   1400520f8:	mov    rbx,rax
   1400520fb:	call   0x14002ffd0
   140052100:	mov    QWORD PTR [rbx],rax
   140052103:	cmp    DWORD PTR [rsi+0x8],r12d
   140052107:	jne    0x14005b3df
   14005210d:	lea    rdx,[rbp+0x28]
   140052111:	lea    rcx,[rsi+0x30]
   140052115:	mov    DWORD PTR [rbp+0x28],0xf9
   14005211c:	call   0x14002ffd0
   140052121:	lea    rcx,[rip+0x20978]        # 0x140072aa0
   140052128:	lea    rdx,[rbp+0x28]
   14005212c:	mov    DWORD PTR [rax],0x14a
   140052132:	mov    DWORD PTR [rax+0x4],0xf9
   140052139:	mov    QWORD PTR [rax+0x8],rcx
   14005213d:	lea    rcx,[rsi+0x10]
   140052141:	mov    DWORD PTR [rbp+0x30],0xf9
   140052148:	mov    DWORD PTR [rbp+0x28],0x14a
   14005214f:	call   0x14002ff30
   140052154:	lea    rdx,[rbp+0x30]
   140052158:	lea    rcx,[rsi+0x30]
   14005215c:	mov    rbx,rax
   14005215f:	call   0x14002ffd0
   140052164:	mov    QWORD PTR [rbx],rax
   140052167:	cmp    DWORD PTR [rsi+0x8],r12d
   14005216b:	jne    0x14005b3df
   140052171:	lea    rdx,[rbp+0x28]
   140052175:	lea    rcx,[rsi+0x30]
   140052179:	mov    DWORD PTR [rbp+0x28],0xfa
   140052180:	call   0x14002ffd0
   140052185:	lea    rcx,[rip+0x2092c]        # 0x140072ab8
   14005218c:	lea    rdx,[rbp+0x28]
   140052190:	mov    DWORD PTR [rax],0x14b
   140052196:	mov    DWORD PTR [rax+0x4],0xfa
   14005219d:	mov    QWORD PTR [rax+0x8],rcx
   1400521a1:	lea    rcx,[rsi+0x10]
   1400521a5:	mov    DWORD PTR [rbp+0x30],0xfa
   1400521ac:	mov    DWORD PTR [rbp+0x28],0x14b
   1400521b3:	call   0x14002ff30
   1400521b8:	lea    rdx,[rbp+0x30]
   1400521bc:	lea    rcx,[rsi+0x30]
   1400521c0:	mov    rbx,rax
   1400521c3:	call   0x14002ffd0
   1400521c8:	mov    QWORD PTR [rbx],rax
   1400521cb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400521cf:	jne    0x14005b3df
   1400521d5:	lea    rdx,[rbp+0x28]
   1400521d9:	lea    rcx,[rsi+0x30]
   1400521dd:	mov    DWORD PTR [rbp+0x28],0xfb
   1400521e4:	call   0x14002ffd0
   1400521e9:	lea    rcx,[rip+0x208e0]        # 0x140072ad0
   1400521f0:	lea    rdx,[rbp+0x28]
   1400521f4:	mov    DWORD PTR [rax],0x14c
   1400521fa:	mov    DWORD PTR [rax+0x4],0xfb
   140052201:	mov    QWORD PTR [rax+0x8],rcx
   140052205:	lea    rcx,[rsi+0x10]
   140052209:	mov    DWORD PTR [rbp+0x30],0xfb
   140052210:	mov    DWORD PTR [rbp+0x28],0x14c
   140052217:	call   0x14002ff30
   14005221c:	lea    rdx,[rbp+0x30]
   140052220:	lea    rcx,[rsi+0x30]
   140052224:	mov    rbx,rax
   140052227:	call   0x14002ffd0
   14005222c:	mov    QWORD PTR [rbx],rax
   14005222f:	cmp    DWORD PTR [rsi+0x8],r12d
   140052233:	jne    0x14005b3df
   140052239:	lea    rdx,[rbp+0x28]
   14005223d:	lea    rcx,[rsi+0x30]
   140052241:	mov    DWORD PTR [rbp+0x28],0xfc
   140052248:	call   0x14002ffd0
   14005224d:	lea    rcx,[rip+0x20894]        # 0x140072ae8
   140052254:	lea    rdx,[rbp+0x28]
   140052258:	mov    DWORD PTR [rax],0x14d
   14005225e:	mov    DWORD PTR [rax+0x4],0xfc
   140052265:	mov    QWORD PTR [rax+0x8],rcx
   140052269:	lea    rcx,[rsi+0x10]
   14005226d:	mov    DWORD PTR [rbp+0x30],0xfc
   140052274:	mov    DWORD PTR [rbp+0x28],0x14d
   14005227b:	call   0x14002ff30
   140052280:	lea    rdx,[rbp+0x30]
   140052284:	lea    rcx,[rsi+0x30]
   140052288:	mov    rbx,rax
   14005228b:	call   0x14002ffd0
   140052290:	mov    QWORD PTR [rbx],rax
   140052293:	cmp    DWORD PTR [rsi+0x8],r12d
   140052297:	jne    0x14005b3df
   14005229d:	lea    rdx,[rbp+0x28]
   1400522a1:	lea    rcx,[rsi+0x30]
   1400522a5:	mov    DWORD PTR [rbp+0x28],0xfd
   1400522ac:	call   0x14002ffd0
   1400522b1:	lea    rcx,[rip+0x20848]        # 0x140072b00
   1400522b8:	lea    rdx,[rbp+0x28]
   1400522bc:	mov    DWORD PTR [rax],0x14e
   1400522c2:	mov    DWORD PTR [rax+0x4],0xfd
   1400522c9:	mov    QWORD PTR [rax+0x8],rcx
   1400522cd:	lea    rcx,[rsi+0x10]
   1400522d1:	mov    DWORD PTR [rbp+0x30],0xfd
   1400522d8:	mov    DWORD PTR [rbp+0x28],0x14e
   1400522df:	call   0x14002ff30
   1400522e4:	lea    rdx,[rbp+0x30]
   1400522e8:	lea    rcx,[rsi+0x30]
   1400522ec:	mov    rbx,rax
   1400522ef:	call   0x14002ffd0
   1400522f4:	mov    QWORD PTR [rbx],rax
   1400522f7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400522fb:	jne    0x14005b3df
   140052301:	lea    rdx,[rbp+0x28]
   140052305:	lea    rcx,[rsi+0x30]
   140052309:	mov    DWORD PTR [rbp+0x28],0xfe
   140052310:	call   0x14002ffd0
   140052315:	lea    rcx,[rip+0x207fc]        # 0x140072b18
   14005231c:	lea    rdx,[rbp+0x28]
   140052320:	mov    DWORD PTR [rax],0x14f
   140052326:	mov    DWORD PTR [rax+0x4],0xfe
   14005232d:	mov    QWORD PTR [rax+0x8],rcx
   140052331:	lea    rcx,[rsi+0x10]
   140052335:	mov    DWORD PTR [rbp+0x30],0xfe
   14005233c:	mov    DWORD PTR [rbp+0x28],0x14f
   140052343:	call   0x14002ff30
   140052348:	lea    rdx,[rbp+0x30]
   14005234c:	lea    rcx,[rsi+0x30]
   140052350:	mov    rbx,rax
   140052353:	call   0x14002ffd0
   140052358:	mov    QWORD PTR [rbx],rax
   14005235b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005235f:	jne    0x14005b3df
   140052365:	lea    rdx,[rbp+0x28]
   140052369:	lea    rcx,[rsi+0x30]
   14005236d:	mov    DWORD PTR [rbp+0x28],0xff
   140052374:	call   0x14002ffd0
   140052379:	lea    rcx,[rip+0x207b0]        # 0x140072b30
   140052380:	lea    rdx,[rbp+0x28]
   140052384:	mov    DWORD PTR [rax],0x150
   14005238a:	mov    DWORD PTR [rax+0x4],0xff
   140052391:	mov    QWORD PTR [rax+0x8],rcx
   140052395:	lea    rcx,[rsi+0x10]
   140052399:	mov    DWORD PTR [rbp+0x30],0xff
   1400523a0:	mov    DWORD PTR [rbp+0x28],0x150
   1400523a7:	call   0x14002ff30
   1400523ac:	lea    rdx,[rbp+0x30]
   1400523b0:	lea    rcx,[rsi+0x30]
   1400523b4:	mov    rbx,rax
   1400523b7:	call   0x14002ffd0
   1400523bc:	mov    QWORD PTR [rbx],rax
   1400523bf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400523c3:	jne    0x14005b3df
   1400523c9:	lea    rdx,[rbp+0x28]
   1400523cd:	lea    rcx,[rsi+0x30]
   1400523d1:	mov    DWORD PTR [rbp+0x28],0x100
   1400523d8:	call   0x14002ffd0
   1400523dd:	lea    rcx,[rip+0x2076c]        # 0x140072b50
   1400523e4:	lea    rdx,[rbp+0x28]
   1400523e8:	mov    DWORD PTR [rax],0x151
   1400523ee:	mov    DWORD PTR [rax+0x4],0x100
   1400523f5:	mov    QWORD PTR [rax+0x8],rcx
   1400523f9:	lea    rcx,[rsi+0x10]
   1400523fd:	mov    DWORD PTR [rbp+0x30],0x100
   140052404:	mov    DWORD PTR [rbp+0x28],0x151
   14005240b:	call   0x14002ff30
   140052410:	lea    rdx,[rbp+0x30]
   140052414:	lea    rcx,[rsi+0x30]
   140052418:	mov    rbx,rax
   14005241b:	call   0x14002ffd0
   140052420:	mov    QWORD PTR [rbx],rax
   140052423:	cmp    DWORD PTR [rsi+0x8],r12d
   140052427:	jne    0x14005b3df
   14005242d:	lea    rdx,[rbp+0x28]
   140052431:	lea    rcx,[rsi+0x30]
   140052435:	mov    DWORD PTR [rbp+0x28],0x101
   14005243c:	call   0x14002ffd0
   140052441:	lea    rcx,[rip+0x20720]        # 0x140072b68
   140052448:	lea    rdx,[rbp+0x28]
   14005244c:	mov    DWORD PTR [rax],0x152
   140052452:	mov    DWORD PTR [rax+0x4],0x101
   140052459:	mov    QWORD PTR [rax+0x8],rcx
   14005245d:	lea    rcx,[rsi+0x10]
   140052461:	mov    DWORD PTR [rbp+0x30],0x101
   140052468:	mov    DWORD PTR [rbp+0x28],0x152
   14005246f:	call   0x14002ff30
   140052474:	lea    rdx,[rbp+0x30]
   140052478:	lea    rcx,[rsi+0x30]
   14005247c:	mov    rbx,rax
   14005247f:	call   0x14002ffd0
   140052484:	mov    QWORD PTR [rbx],rax
   140052487:	cmp    DWORD PTR [rsi+0x8],r12d
   14005248b:	jne    0x14005b3df
   140052491:	lea    rdx,[rbp+0x28]
   140052495:	lea    rcx,[rsi+0x30]
   140052499:	mov    DWORD PTR [rbp+0x28],0x102
   1400524a0:	call   0x14002ffd0
   1400524a5:	lea    rcx,[rip+0x206d4]        # 0x140072b80
   1400524ac:	lea    rdx,[rbp+0x28]
   1400524b0:	mov    DWORD PTR [rax],0x153
   1400524b6:	mov    DWORD PTR [rax+0x4],0x102
   1400524bd:	mov    QWORD PTR [rax+0x8],rcx
   1400524c1:	lea    rcx,[rsi+0x10]
   1400524c5:	mov    DWORD PTR [rbp+0x30],0x102
   1400524cc:	mov    DWORD PTR [rbp+0x28],0x153
   1400524d3:	call   0x14002ff30
   1400524d8:	lea    rdx,[rbp+0x30]
   1400524dc:	lea    rcx,[rsi+0x30]
   1400524e0:	mov    rbx,rax
   1400524e3:	call   0x14002ffd0
   1400524e8:	mov    QWORD PTR [rbx],rax
   1400524eb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400524ef:	jne    0x14005b3df
   1400524f5:	lea    rdx,[rbp+0x28]
   1400524f9:	lea    rcx,[rsi+0x30]
   1400524fd:	mov    DWORD PTR [rbp+0x28],0x103
   140052504:	call   0x14002ffd0
   140052509:	lea    rcx,[rip+0x20688]        # 0x140072b98
   140052510:	lea    rdx,[rbp+0x28]
   140052514:	mov    DWORD PTR [rax],0x154
   14005251a:	mov    DWORD PTR [rax+0x4],0x103
   140052521:	mov    QWORD PTR [rax+0x8],rcx
   140052525:	lea    rcx,[rsi+0x10]
   140052529:	mov    DWORD PTR [rbp+0x30],0x103
   140052530:	mov    DWORD PTR [rbp+0x28],0x154
   140052537:	call   0x14002ff30
   14005253c:	lea    rdx,[rbp+0x30]
   140052540:	lea    rcx,[rsi+0x30]
   140052544:	mov    rbx,rax
   140052547:	call   0x14002ffd0
   14005254c:	mov    QWORD PTR [rbx],rax
   14005254f:	cmp    DWORD PTR [rsi+0x8],r12d
   140052553:	jne    0x14005b3df
   140052559:	lea    rdx,[rbp+0x28]
   14005255d:	lea    rcx,[rsi+0x30]
   140052561:	mov    DWORD PTR [rbp+0x28],0x104
   140052568:	call   0x14002ffd0
   14005256d:	lea    rcx,[rip+0x2063c]        # 0x140072bb0
   140052574:	lea    rdx,[rbp+0x28]
   140052578:	mov    DWORD PTR [rax],0x155
   14005257e:	mov    DWORD PTR [rax+0x4],0x104
   140052585:	mov    QWORD PTR [rax+0x8],rcx
   140052589:	lea    rcx,[rsi+0x10]
   14005258d:	mov    DWORD PTR [rbp+0x30],0x104
   140052594:	mov    DWORD PTR [rbp+0x28],0x155
   14005259b:	call   0x14002ff30
   1400525a0:	lea    rdx,[rbp+0x30]
   1400525a4:	lea    rcx,[rsi+0x30]
   1400525a8:	mov    rbx,rax
   1400525ab:	call   0x14002ffd0
   1400525b0:	mov    QWORD PTR [rbx],rax
   1400525b3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400525b7:	jne    0x14005b3df
   1400525bd:	lea    rdx,[rbp+0x28]
   1400525c1:	lea    rcx,[rsi+0x30]
   1400525c5:	mov    DWORD PTR [rbp+0x28],0x105
   1400525cc:	call   0x14002ffd0
   1400525d1:	lea    rcx,[rip+0x205e8]        # 0x140072bc0
   1400525d8:	lea    rdx,[rbp+0x28]
   1400525dc:	mov    DWORD PTR [rax],0x156
   1400525e2:	mov    DWORD PTR [rax+0x4],0x105
   1400525e9:	mov    QWORD PTR [rax+0x8],rcx
   1400525ed:	lea    rcx,[rsi+0x10]
   1400525f1:	mov    DWORD PTR [rbp+0x30],0x105
   1400525f8:	mov    DWORD PTR [rbp+0x28],0x156
   1400525ff:	call   0x14002ff30
   140052604:	lea    rdx,[rbp+0x30]
   140052608:	lea    rcx,[rsi+0x30]
   14005260c:	mov    rbx,rax
   14005260f:	call   0x14002ffd0
   140052614:	mov    QWORD PTR [rbx],rax
   140052617:	cmp    DWORD PTR [rsi+0x8],r12d
   14005261b:	jne    0x14005b3df
   140052621:	lea    rdx,[rbp+0x28]
   140052625:	lea    rcx,[rsi+0x30]
   140052629:	mov    DWORD PTR [rbp+0x28],0x106
   140052630:	call   0x14002ffd0
   140052635:	lea    rcx,[rip+0x2059c]        # 0x140072bd8
   14005263c:	lea    rdx,[rbp+0x28]
   140052640:	mov    DWORD PTR [rax],0x157
   140052646:	mov    DWORD PTR [rax+0x4],0x106
   14005264d:	mov    QWORD PTR [rax+0x8],rcx
   140052651:	lea    rcx,[rsi+0x10]
   140052655:	mov    DWORD PTR [rbp+0x30],0x106
   14005265c:	mov    DWORD PTR [rbp+0x28],0x157
   140052663:	call   0x14002ff30
   140052668:	lea    rdx,[rbp+0x30]
   14005266c:	lea    rcx,[rsi+0x30]
   140052670:	mov    rbx,rax
   140052673:	call   0x14002ffd0
   140052678:	mov    QWORD PTR [rbx],rax
   14005267b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005267f:	jne    0x14005b3df
   140052685:	lea    rdx,[rbp+0x28]
   140052689:	lea    rcx,[rsi+0x30]
   14005268d:	mov    DWORD PTR [rbp+0x28],0x107
   140052694:	call   0x14002ffd0
   140052699:	lea    rcx,[rip+0x20550]        # 0x140072bf0
   1400526a0:	lea    rdx,[rbp+0x28]
   1400526a4:	mov    DWORD PTR [rax],0x158
   1400526aa:	mov    DWORD PTR [rax+0x4],0x107
   1400526b1:	mov    QWORD PTR [rax+0x8],rcx
   1400526b5:	lea    rcx,[rsi+0x10]
   1400526b9:	mov    DWORD PTR [rbp+0x30],0x107
   1400526c0:	mov    DWORD PTR [rbp+0x28],0x158
   1400526c7:	call   0x14002ff30
   1400526cc:	lea    rdx,[rbp+0x30]
   1400526d0:	lea    rcx,[rsi+0x30]
   1400526d4:	mov    rbx,rax
   1400526d7:	call   0x14002ffd0
   1400526dc:	mov    QWORD PTR [rbx],rax
   1400526df:	cmp    DWORD PTR [rsi+0x8],r12d
   1400526e3:	jne    0x14005b3df
   1400526e9:	lea    rdx,[rbp+0x28]
   1400526ed:	lea    rcx,[rsi+0x30]
   1400526f1:	mov    DWORD PTR [rbp+0x28],0x108
   1400526f8:	call   0x14002ffd0
   1400526fd:	lea    rcx,[rip+0x20504]        # 0x140072c08
   140052704:	lea    rdx,[rbp+0x28]
   140052708:	mov    DWORD PTR [rax],0x159
   14005270e:	mov    DWORD PTR [rax+0x4],0x108
   140052715:	mov    QWORD PTR [rax+0x8],rcx
   140052719:	lea    rcx,[rsi+0x10]
   14005271d:	mov    DWORD PTR [rbp+0x30],0x108
   140052724:	mov    DWORD PTR [rbp+0x28],0x159
   14005272b:	call   0x14002ff30
   140052730:	lea    rdx,[rbp+0x30]
   140052734:	lea    rcx,[rsi+0x30]
   140052738:	mov    rbx,rax
   14005273b:	call   0x14002ffd0
   140052740:	mov    QWORD PTR [rbx],rax
   140052743:	cmp    DWORD PTR [rsi+0x8],r12d
   140052747:	jne    0x14005b3df
   14005274d:	lea    rdx,[rbp+0x28]
   140052751:	lea    rcx,[rsi+0x30]
   140052755:	mov    DWORD PTR [rbp+0x28],0x109
   14005275c:	call   0x14002ffd0
   140052761:	lea    rcx,[rip+0x204b8]        # 0x140072c20
   140052768:	lea    rdx,[rbp+0x28]
   14005276c:	mov    DWORD PTR [rax],0x15a
   140052772:	mov    DWORD PTR [rax+0x4],0x109
   140052779:	mov    QWORD PTR [rax+0x8],rcx
   14005277d:	lea    rcx,[rsi+0x10]
   140052781:	mov    DWORD PTR [rbp+0x30],0x109
   140052788:	mov    DWORD PTR [rbp+0x28],0x15a
   14005278f:	call   0x14002ff30
   140052794:	lea    rdx,[rbp+0x30]
   140052798:	lea    rcx,[rsi+0x30]
   14005279c:	mov    rbx,rax
   14005279f:	call   0x14002ffd0
   1400527a4:	mov    QWORD PTR [rbx],rax
   1400527a7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400527ab:	jne    0x14005b3df
   1400527b1:	lea    rdx,[rbp+0x28]
   1400527b5:	lea    rcx,[rsi+0x30]
   1400527b9:	mov    DWORD PTR [rbp+0x28],0x10a
   1400527c0:	call   0x14002ffd0
   1400527c5:	lea    rcx,[rip+0x2046c]        # 0x140072c38
   1400527cc:	lea    rdx,[rbp+0x28]
   1400527d0:	mov    DWORD PTR [rax],0x15b
   1400527d6:	mov    DWORD PTR [rax+0x4],0x10a
   1400527dd:	mov    QWORD PTR [rax+0x8],rcx
   1400527e1:	lea    rcx,[rsi+0x10]
   1400527e5:	mov    DWORD PTR [rbp+0x30],0x10a
   1400527ec:	mov    DWORD PTR [rbp+0x28],0x15b
   1400527f3:	call   0x14002ff30
   1400527f8:	lea    rdx,[rbp+0x30]
   1400527fc:	lea    rcx,[rsi+0x30]
   140052800:	mov    rbx,rax
   140052803:	call   0x14002ffd0
   140052808:	mov    QWORD PTR [rbx],rax
   14005280b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005280f:	jne    0x14005b3df
   140052815:	lea    rdx,[rbp+0x28]
   140052819:	lea    rcx,[rsi+0x30]
   14005281d:	mov    DWORD PTR [rbp+0x28],0x10b
   140052824:	call   0x14002ffd0
   140052829:	lea    rcx,[rip+0x20420]        # 0x140072c50
   140052830:	lea    rdx,[rbp+0x28]
   140052834:	mov    DWORD PTR [rax],0x15c
   14005283a:	mov    DWORD PTR [rax+0x4],0x10b
   140052841:	mov    QWORD PTR [rax+0x8],rcx
   140052845:	lea    rcx,[rsi+0x10]
   140052849:	mov    DWORD PTR [rbp+0x30],0x10b
   140052850:	mov    DWORD PTR [rbp+0x28],0x15c
   140052857:	call   0x14002ff30
   14005285c:	lea    rdx,[rbp+0x30]
   140052860:	lea    rcx,[rsi+0x30]
   140052864:	mov    rbx,rax
   140052867:	call   0x14002ffd0
   14005286c:	mov    QWORD PTR [rbx],rax
   14005286f:	cmp    DWORD PTR [rsi+0x8],r12d
   140052873:	jne    0x14005b3df
   140052879:	lea    rdx,[rbp+0x28]
   14005287d:	lea    rcx,[rsi+0x30]
   140052881:	mov    DWORD PTR [rbp+0x28],0x10c
   140052888:	call   0x14002ffd0
   14005288d:	lea    rcx,[rip+0x203d4]        # 0x140072c68
   140052894:	lea    rdx,[rbp+0x28]
   140052898:	mov    DWORD PTR [rax],0x15d
   14005289e:	mov    DWORD PTR [rax+0x4],0x10c
   1400528a5:	mov    QWORD PTR [rax+0x8],rcx
   1400528a9:	lea    rcx,[rsi+0x10]
   1400528ad:	mov    DWORD PTR [rbp+0x30],0x10c
   1400528b4:	mov    DWORD PTR [rbp+0x28],0x15d
   1400528bb:	call   0x14002ff30
   1400528c0:	lea    rdx,[rbp+0x30]
   1400528c4:	lea    rcx,[rsi+0x30]
   1400528c8:	mov    rbx,rax
   1400528cb:	call   0x14002ffd0
   1400528d0:	mov    QWORD PTR [rbx],rax
   1400528d3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400528d7:	jne    0x14005b3df
   1400528dd:	lea    rdx,[rbp+0x28]
   1400528e1:	lea    rcx,[rsi+0x30]
   1400528e5:	mov    DWORD PTR [rbp+0x28],0x10d
   1400528ec:	call   0x14002ffd0
   1400528f1:	lea    rcx,[rip+0x20388]        # 0x140072c80
   1400528f8:	lea    rdx,[rbp+0x28]
   1400528fc:	mov    DWORD PTR [rax],0x15e
   140052902:	mov    DWORD PTR [rax+0x4],0x10d
   140052909:	mov    QWORD PTR [rax+0x8],rcx
   14005290d:	lea    rcx,[rsi+0x10]
   140052911:	mov    DWORD PTR [rbp+0x30],0x10d
   140052918:	mov    DWORD PTR [rbp+0x28],0x15e
   14005291f:	call   0x14002ff30
   140052924:	lea    rdx,[rbp+0x30]
   140052928:	lea    rcx,[rsi+0x30]
   14005292c:	mov    rbx,rax
   14005292f:	call   0x14002ffd0
   140052934:	mov    QWORD PTR [rbx],rax
   140052937:	cmp    DWORD PTR [rsi+0x8],r12d
   14005293b:	jne    0x14005b3df
   140052941:	lea    rdx,[rbp+0x28]
   140052945:	lea    rcx,[rsi+0x30]
   140052949:	mov    DWORD PTR [rbp+0x28],0x10e
   140052950:	call   0x14002ffd0
   140052955:	lea    rcx,[rip+0x2033c]        # 0x140072c98
   14005295c:	lea    rdx,[rbp+0x28]
   140052960:	mov    DWORD PTR [rax],0x15f
   140052966:	mov    DWORD PTR [rax+0x4],0x10e
   14005296d:	mov    QWORD PTR [rax+0x8],rcx
   140052971:	lea    rcx,[rsi+0x10]
   140052975:	mov    DWORD PTR [rbp+0x30],0x10e
   14005297c:	mov    DWORD PTR [rbp+0x28],0x15f
   140052983:	call   0x14002ff30
   140052988:	lea    rdx,[rbp+0x30]
   14005298c:	lea    rcx,[rsi+0x30]
   140052990:	mov    rbx,rax
   140052993:	call   0x14002ffd0
   140052998:	mov    QWORD PTR [rbx],rax
   14005299b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005299f:	jne    0x14005b3df
   1400529a5:	lea    rdx,[rbp+0x28]
   1400529a9:	lea    rcx,[rsi+0x30]
   1400529ad:	mov    DWORD PTR [rbp+0x28],0x10f
   1400529b4:	call   0x14002ffd0
   1400529b9:	lea    rcx,[rip+0x202f8]        # 0x140072cb8
   1400529c0:	lea    rdx,[rbp+0x28]
   1400529c4:	mov    DWORD PTR [rax],0x160
   1400529ca:	mov    DWORD PTR [rax+0x4],0x10f
   1400529d1:	mov    QWORD PTR [rax+0x8],rcx
   1400529d5:	lea    rcx,[rsi+0x10]
   1400529d9:	mov    DWORD PTR [rbp+0x30],0x10f
   1400529e0:	mov    DWORD PTR [rbp+0x28],0x160
   1400529e7:	call   0x14002ff30
   1400529ec:	lea    rdx,[rbp+0x30]
   1400529f0:	lea    rcx,[rsi+0x30]
   1400529f4:	mov    rbx,rax
   1400529f7:	call   0x14002ffd0
   1400529fc:	mov    QWORD PTR [rbx],rax
   1400529ff:	cmp    DWORD PTR [rsi+0x8],r12d
   140052a03:	jne    0x14005b3df
   140052a09:	lea    rdx,[rbp+0x28]
   140052a0d:	lea    rcx,[rsi+0x30]
   140052a11:	mov    DWORD PTR [rbp+0x28],0x110
   140052a18:	call   0x14002ffd0
   140052a1d:	lea    rcx,[rip+0x202ac]        # 0x140072cd0
   140052a24:	lea    rdx,[rbp+0x28]
   140052a28:	mov    DWORD PTR [rax],0x161
   140052a2e:	mov    DWORD PTR [rax+0x4],0x110
   140052a35:	mov    QWORD PTR [rax+0x8],rcx
   140052a39:	lea    rcx,[rsi+0x10]
   140052a3d:	mov    DWORD PTR [rbp+0x30],0x110
   140052a44:	mov    DWORD PTR [rbp+0x28],0x161
   140052a4b:	call   0x14002ff30
   140052a50:	lea    rdx,[rbp+0x30]
   140052a54:	lea    rcx,[rsi+0x30]
   140052a58:	mov    rbx,rax
   140052a5b:	call   0x14002ffd0
   140052a60:	mov    QWORD PTR [rbx],rax
   140052a63:	cmp    DWORD PTR [rsi+0x8],r12d
   140052a67:	jne    0x14005b3df
   140052a6d:	lea    rdx,[rbp+0x28]
   140052a71:	lea    rcx,[rsi+0x30]
   140052a75:	mov    DWORD PTR [rbp+0x28],0x111
   140052a7c:	call   0x14002ffd0
   140052a81:	lea    rcx,[rip+0x20260]        # 0x140072ce8
   140052a88:	lea    rdx,[rbp+0x28]
   140052a8c:	mov    DWORD PTR [rax],0x162
   140052a92:	mov    DWORD PTR [rax+0x4],0x111
   140052a99:	mov    QWORD PTR [rax+0x8],rcx
   140052a9d:	lea    rcx,[rsi+0x10]
   140052aa1:	mov    DWORD PTR [rbp+0x30],0x111
   140052aa8:	mov    DWORD PTR [rbp+0x28],0x162
   140052aaf:	call   0x14002ff30
   140052ab4:	lea    rdx,[rbp+0x30]
   140052ab8:	lea    rcx,[rsi+0x30]
   140052abc:	mov    rbx,rax
   140052abf:	call   0x14002ffd0
   140052ac4:	mov    QWORD PTR [rbx],rax
   140052ac7:	cmp    DWORD PTR [rsi+0x8],r12d
   140052acb:	jne    0x14005b3df
   140052ad1:	lea    rdx,[rbp+0x28]
   140052ad5:	lea    rcx,[rsi+0x30]
   140052ad9:	mov    DWORD PTR [rbp+0x28],0x112
   140052ae0:	call   0x14002ffd0
   140052ae5:	lea    rcx,[rip+0x20214]        # 0x140072d00
   140052aec:	lea    rdx,[rbp+0x28]
   140052af0:	mov    DWORD PTR [rax],0x163
   140052af6:	mov    DWORD PTR [rax+0x4],0x112
   140052afd:	mov    QWORD PTR [rax+0x8],rcx
   140052b01:	lea    rcx,[rsi+0x10]
   140052b05:	mov    DWORD PTR [rbp+0x30],0x112
   140052b0c:	mov    DWORD PTR [rbp+0x28],0x163
   140052b13:	call   0x14002ff30
   140052b18:	lea    rdx,[rbp+0x30]
   140052b1c:	lea    rcx,[rsi+0x30]
   140052b20:	mov    rbx,rax
   140052b23:	call   0x14002ffd0
   140052b28:	mov    QWORD PTR [rbx],rax
   140052b2b:	cmp    DWORD PTR [rsi+0x8],r12d
   140052b2f:	jne    0x14005b3df
   140052b35:	lea    rdx,[rbp+0x28]
   140052b39:	lea    rcx,[rsi+0x30]
   140052b3d:	mov    DWORD PTR [rbp+0x28],0x113
   140052b44:	call   0x14002ffd0
   140052b49:	lea    rcx,[rip+0x201c8]        # 0x140072d18
   140052b50:	lea    rdx,[rbp+0x28]
   140052b54:	mov    DWORD PTR [rax],0x164
   140052b5a:	mov    DWORD PTR [rax+0x4],0x113
   140052b61:	mov    QWORD PTR [rax+0x8],rcx
   140052b65:	lea    rcx,[rsi+0x10]
   140052b69:	mov    DWORD PTR [rbp+0x30],0x113
   140052b70:	mov    DWORD PTR [rbp+0x28],0x164
   140052b77:	call   0x14002ff30
   140052b7c:	lea    rdx,[rbp+0x30]
   140052b80:	lea    rcx,[rsi+0x30]
   140052b84:	mov    rbx,rax
   140052b87:	call   0x14002ffd0
   140052b8c:	mov    QWORD PTR [rbx],rax
   140052b8f:	cmp    DWORD PTR [rsi+0x8],r12d
   140052b93:	jne    0x14005b3df
   140052b99:	lea    rdx,[rbp+0x28]
   140052b9d:	lea    rcx,[rsi+0x30]
   140052ba1:	mov    DWORD PTR [rbp+0x28],0x114
   140052ba8:	call   0x14002ffd0
   140052bad:	lea    rcx,[rip+0x20174]        # 0x140072d28
   140052bb4:	lea    rdx,[rbp+0x28]
   140052bb8:	mov    DWORD PTR [rax],0x165
   140052bbe:	mov    DWORD PTR [rax+0x4],0x114
   140052bc5:	mov    QWORD PTR [rax+0x8],rcx
   140052bc9:	lea    rcx,[rsi+0x10]
   140052bcd:	mov    DWORD PTR [rbp+0x30],0x114
   140052bd4:	mov    DWORD PTR [rbp+0x28],0x165
   140052bdb:	call   0x14002ff30
   140052be0:	lea    rdx,[rbp+0x30]
   140052be4:	lea    rcx,[rsi+0x30]
   140052be8:	mov    rbx,rax
   140052beb:	call   0x14002ffd0
   140052bf0:	mov    QWORD PTR [rbx],rax
   140052bf3:	cmp    DWORD PTR [rsi+0x8],r12d
   140052bf7:	jne    0x14005b3df
   140052bfd:	lea    rdx,[rbp+0x28]
   140052c01:	lea    rcx,[rsi+0x30]
   140052c05:	mov    DWORD PTR [rbp+0x28],0x115
   140052c0c:	call   0x14002ffd0
   140052c11:	lea    rcx,[rip+0x20128]        # 0x140072d40
   140052c18:	lea    rdx,[rbp+0x28]
   140052c1c:	mov    DWORD PTR [rax],0x166
   140052c22:	mov    DWORD PTR [rax+0x4],0x115
   140052c29:	mov    QWORD PTR [rax+0x8],rcx
   140052c2d:	lea    rcx,[rsi+0x10]
   140052c31:	mov    DWORD PTR [rbp+0x30],0x115
   140052c38:	mov    DWORD PTR [rbp+0x28],0x166
   140052c3f:	call   0x14002ff30
   140052c44:	lea    rdx,[rbp+0x30]
   140052c48:	lea    rcx,[rsi+0x30]
   140052c4c:	mov    rbx,rax
   140052c4f:	call   0x14002ffd0
   140052c54:	mov    QWORD PTR [rbx],rax
   140052c57:	cmp    DWORD PTR [rsi+0x8],r12d
   140052c5b:	jne    0x14005b3df
   140052c61:	lea    rdx,[rbp+0x28]
   140052c65:	lea    rcx,[rsi+0x30]
   140052c69:	mov    DWORD PTR [rbp+0x28],0x116
   140052c70:	call   0x14002ffd0
   140052c75:	lea    rcx,[rip+0x200dc]        # 0x140072d58
   140052c7c:	lea    rdx,[rbp+0x28]
   140052c80:	mov    DWORD PTR [rax],0x167
   140052c86:	mov    DWORD PTR [rax+0x4],0x116
   140052c8d:	mov    QWORD PTR [rax+0x8],rcx
   140052c91:	lea    rcx,[rsi+0x10]
   140052c95:	mov    DWORD PTR [rbp+0x30],0x116
   140052c9c:	mov    DWORD PTR [rbp+0x28],0x167
   140052ca3:	call   0x14002ff30
   140052ca8:	lea    rdx,[rbp+0x30]
   140052cac:	lea    rcx,[rsi+0x30]
   140052cb0:	mov    rbx,rax
   140052cb3:	call   0x14002ffd0
   140052cb8:	mov    QWORD PTR [rbx],rax
   140052cbb:	cmp    DWORD PTR [rsi+0x8],r12d
   140052cbf:	jne    0x14005b3df
   140052cc5:	lea    rdx,[rbp+0x28]
   140052cc9:	lea    rcx,[rsi+0x30]
   140052ccd:	mov    DWORD PTR [rbp+0x28],0x117
   140052cd4:	call   0x14002ffd0
   140052cd9:	lea    rcx,[rip+0x20090]        # 0x140072d70
   140052ce0:	lea    rdx,[rbp+0x28]
   140052ce4:	mov    DWORD PTR [rax],0x168
   140052cea:	mov    DWORD PTR [rax+0x4],0x117
   140052cf1:	mov    QWORD PTR [rax+0x8],rcx
   140052cf5:	lea    rcx,[rsi+0x10]
   140052cf9:	mov    DWORD PTR [rbp+0x30],0x117
   140052d00:	mov    DWORD PTR [rbp+0x28],0x168
   140052d07:	call   0x14002ff30
   140052d0c:	lea    rdx,[rbp+0x30]
   140052d10:	lea    rcx,[rsi+0x30]
   140052d14:	mov    rbx,rax
   140052d17:	call   0x14002ffd0
   140052d1c:	mov    QWORD PTR [rbx],rax
   140052d1f:	cmp    DWORD PTR [rsi+0x8],r12d
   140052d23:	jne    0x14005b3df
   140052d29:	lea    rdx,[rbp+0x28]
   140052d2d:	lea    rcx,[rsi+0x30]
   140052d31:	mov    DWORD PTR [rbp+0x28],0x118
   140052d38:	call   0x14002ffd0
   140052d3d:	lea    rcx,[rip+0x20044]        # 0x140072d88
   140052d44:	lea    rdx,[rbp+0x28]
   140052d48:	mov    DWORD PTR [rax],0x169
   140052d4e:	mov    DWORD PTR [rax+0x4],0x118
   140052d55:	mov    QWORD PTR [rax+0x8],rcx
   140052d59:	lea    rcx,[rsi+0x10]
   140052d5d:	mov    DWORD PTR [rbp+0x30],0x118
   140052d64:	mov    DWORD PTR [rbp+0x28],0x169
   140052d6b:	call   0x14002ff30
   140052d70:	lea    rdx,[rbp+0x30]
   140052d74:	lea    rcx,[rsi+0x30]
   140052d78:	mov    rbx,rax
   140052d7b:	call   0x14002ffd0
   140052d80:	mov    QWORD PTR [rbx],rax
   140052d83:	cmp    DWORD PTR [rsi+0x8],r12d
   140052d87:	jne    0x14005b3df
   140052d8d:	lea    rdx,[rbp+0x28]
   140052d91:	lea    rcx,[rsi+0x30]
   140052d95:	mov    DWORD PTR [rbp+0x28],0x119
   140052d9c:	call   0x14002ffd0
   140052da1:	lea    rcx,[rip+0x1fff8]        # 0x140072da0
   140052da8:	lea    rdx,[rbp+0x28]
   140052dac:	mov    DWORD PTR [rax],0x16a
   140052db2:	mov    DWORD PTR [rax+0x4],0x119
   140052db9:	mov    QWORD PTR [rax+0x8],rcx
   140052dbd:	lea    rcx,[rsi+0x10]
   140052dc1:	mov    DWORD PTR [rbp+0x30],0x119
   140052dc8:	mov    DWORD PTR [rbp+0x28],0x16a
   140052dcf:	call   0x14002ff30
   140052dd4:	lea    rdx,[rbp+0x30]
   140052dd8:	lea    rcx,[rsi+0x30]
   140052ddc:	mov    rbx,rax
   140052ddf:	call   0x14002ffd0
   140052de4:	mov    QWORD PTR [rbx],rax
   140052de7:	cmp    DWORD PTR [rsi+0x8],r12d
   140052deb:	jne    0x14005b3df
   140052df1:	lea    rdx,[rbp+0x28]
   140052df5:	lea    rcx,[rsi+0x30]
   140052df9:	mov    DWORD PTR [rbp+0x28],0x11a
   140052e00:	call   0x14002ffd0
   140052e05:	lea    rcx,[rip+0x1ffac]        # 0x140072db8
   140052e0c:	lea    rdx,[rbp+0x28]
   140052e10:	mov    DWORD PTR [rax],0x16b
   140052e16:	mov    DWORD PTR [rax+0x4],0x11a
   140052e1d:	mov    QWORD PTR [rax+0x8],rcx
   140052e21:	lea    rcx,[rsi+0x10]
   140052e25:	mov    DWORD PTR [rbp+0x30],0x11a
   140052e2c:	mov    DWORD PTR [rbp+0x28],0x16b
   140052e33:	call   0x14002ff30
   140052e38:	lea    rdx,[rbp+0x30]
   140052e3c:	lea    rcx,[rsi+0x30]
   140052e40:	mov    rbx,rax
   140052e43:	call   0x14002ffd0
   140052e48:	mov    QWORD PTR [rbx],rax
   140052e4b:	cmp    DWORD PTR [rsi+0x8],r12d
   140052e4f:	jne    0x14005b3df
   140052e55:	lea    rdx,[rbp+0x28]
   140052e59:	lea    rcx,[rsi+0x30]
   140052e5d:	mov    DWORD PTR [rbp+0x28],0x11b
   140052e64:	call   0x14002ffd0
   140052e69:	lea    rcx,[rip+0x1ff60]        # 0x140072dd0
   140052e70:	lea    rdx,[rbp+0x28]
   140052e74:	mov    DWORD PTR [rax],0x16c
   140052e7a:	mov    DWORD PTR [rax+0x4],0x11b
   140052e81:	mov    QWORD PTR [rax+0x8],rcx
   140052e85:	lea    rcx,[rsi+0x10]
   140052e89:	mov    DWORD PTR [rbp+0x30],0x11b
   140052e90:	mov    DWORD PTR [rbp+0x28],0x16c
   140052e97:	call   0x14002ff30
   140052e9c:	lea    rdx,[rbp+0x30]
   140052ea0:	lea    rcx,[rsi+0x30]
   140052ea4:	mov    rbx,rax
   140052ea7:	call   0x14002ffd0
   140052eac:	mov    QWORD PTR [rbx],rax
   140052eaf:	cmp    DWORD PTR [rsi+0x8],r12d
   140052eb3:	jne    0x14005b3df
   140052eb9:	lea    rdx,[rbp+0x28]
   140052ebd:	lea    rcx,[rsi+0x30]
   140052ec1:	mov    DWORD PTR [rbp+0x28],0x11c
   140052ec8:	call   0x14002ffd0
   140052ecd:	lea    rcx,[rip+0x1ff14]        # 0x140072de8
   140052ed4:	lea    rdx,[rbp+0x28]
   140052ed8:	mov    DWORD PTR [rax],0x16d
   140052ede:	mov    DWORD PTR [rax+0x4],0x11c
   140052ee5:	mov    QWORD PTR [rax+0x8],rcx
   140052ee9:	lea    rcx,[rsi+0x10]
   140052eed:	mov    DWORD PTR [rbp+0x30],0x11c
   140052ef4:	mov    DWORD PTR [rbp+0x28],0x16d
   140052efb:	call   0x14002ff30
   140052f00:	lea    rdx,[rbp+0x30]
   140052f04:	lea    rcx,[rsi+0x30]
   140052f08:	mov    rbx,rax
   140052f0b:	call   0x14002ffd0
   140052f10:	mov    QWORD PTR [rbx],rax
   140052f13:	cmp    DWORD PTR [rsi+0x8],r12d
   140052f17:	jne    0x14005b3df
   140052f1d:	lea    rdx,[rbp+0x28]
   140052f21:	lea    rcx,[rsi+0x30]
   140052f25:	mov    DWORD PTR [rbp+0x28],0x11d
   140052f2c:	call   0x14002ffd0
   140052f31:	lea    rcx,[rip+0x1fec8]        # 0x140072e00
   140052f38:	lea    rdx,[rbp+0x28]
   140052f3c:	mov    DWORD PTR [rax],0x16e
   140052f42:	mov    DWORD PTR [rax+0x4],0x11d
   140052f49:	mov    QWORD PTR [rax+0x8],rcx
   140052f4d:	lea    rcx,[rsi+0x10]
   140052f51:	mov    DWORD PTR [rbp+0x30],0x11d
   140052f58:	mov    DWORD PTR [rbp+0x28],0x16e
   140052f5f:	call   0x14002ff30
   140052f64:	lea    rdx,[rbp+0x30]
   140052f68:	lea    rcx,[rsi+0x30]
   140052f6c:	mov    rbx,rax
   140052f6f:	call   0x14002ffd0
   140052f74:	mov    QWORD PTR [rbx],rax
   140052f77:	cmp    DWORD PTR [rsi+0x8],r12d
   140052f7b:	jne    0x14005b3df
   140052f81:	lea    rdx,[rbp+0x28]
   140052f85:	lea    rcx,[rsi+0x30]
   140052f89:	mov    DWORD PTR [rbp+0x28],0xb0
   140052f90:	call   0x14002ffd0
   140052f95:	lea    rcx,[rip+0x1fe84]        # 0x140072e20
   140052f9c:	lea    rdx,[rbp+0x28]
   140052fa0:	mov    DWORD PTR [rax],0x188
   140052fa6:	mov    DWORD PTR [rax+0x4],0xb0
   140052fad:	mov    QWORD PTR [rax+0x8],rcx
   140052fb1:	lea    rcx,[rsi+0x10]
   140052fb5:	mov    DWORD PTR [rbp+0x30],0xb0
   140052fbc:	mov    DWORD PTR [rbp+0x28],0x188
   140052fc3:	call   0x14002ff30
   140052fc8:	lea    rdx,[rbp+0x30]
   140052fcc:	lea    rcx,[rsi+0x30]
   140052fd0:	mov    rbx,rax
   140052fd3:	call   0x14002ffd0
   140052fd8:	mov    QWORD PTR [rbx],rax
   140052fdb:	cmp    DWORD PTR [rsi+0x8],r12d
   140052fdf:	jne    0x14005b3df
   140052fe5:	lea    rdx,[rbp+0x28]
   140052fe9:	lea    rcx,[rsi+0x30]
   140052fed:	mov    DWORD PTR [rbp+0x28],0x11e
   140052ff4:	call   0x14002ffd0
   140052ff9:	lea    rcx,[rip+0x1fe38]        # 0x140072e38
   140053000:	lea    rdx,[rbp+0x28]
   140053004:	mov    DWORD PTR [rax],0x16f
   14005300a:	mov    DWORD PTR [rax+0x4],0x11e
   140053011:	mov    QWORD PTR [rax+0x8],rcx
   140053015:	lea    rcx,[rsi+0x10]
   140053019:	mov    DWORD PTR [rbp+0x30],0x11e
   140053020:	mov    DWORD PTR [rbp+0x28],0x16f
   140053027:	call   0x14002ff30
   14005302c:	lea    rdx,[rbp+0x30]
   140053030:	lea    rcx,[rsi+0x30]
   140053034:	mov    rbx,rax
   140053037:	call   0x14002ffd0
   14005303c:	mov    QWORD PTR [rbx],rax
   14005303f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053043:	jne    0x14005b3df
   140053049:	lea    rdx,[rbp+0x28]
   14005304d:	lea    rcx,[rsi+0x30]
   140053051:	mov    DWORD PTR [rbp+0x28],0x11f
   140053058:	call   0x14002ffd0
   14005305d:	lea    rcx,[rip+0x1fdec]        # 0x140072e50
   140053064:	lea    rdx,[rbp+0x28]
   140053068:	mov    DWORD PTR [rax],0x170
   14005306e:	mov    DWORD PTR [rax+0x4],0x11f
   140053075:	mov    QWORD PTR [rax+0x8],rcx
   140053079:	lea    rcx,[rsi+0x10]
   14005307d:	mov    DWORD PTR [rbp+0x30],0x11f
   140053084:	mov    DWORD PTR [rbp+0x28],0x170
   14005308b:	call   0x14002ff30
   140053090:	lea    rdx,[rbp+0x30]
   140053094:	lea    rcx,[rsi+0x30]
   140053098:	mov    rbx,rax
   14005309b:	call   0x14002ffd0
   1400530a0:	mov    QWORD PTR [rbx],rax
   1400530a3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400530a7:	jne    0x14005b3df
   1400530ad:	lea    rdx,[rbp+0x28]
   1400530b1:	lea    rcx,[rsi+0x30]
   1400530b5:	mov    DWORD PTR [rbp+0x28],0x120
   1400530bc:	call   0x14002ffd0
   1400530c1:	lea    rcx,[rip+0x1fda0]        # 0x140072e68
   1400530c8:	lea    rdx,[rbp+0x28]
   1400530cc:	mov    DWORD PTR [rax],0x171
   1400530d2:	mov    DWORD PTR [rax+0x4],0x120
   1400530d9:	mov    QWORD PTR [rax+0x8],rcx
   1400530dd:	lea    rcx,[rsi+0x10]
   1400530e1:	mov    DWORD PTR [rbp+0x30],0x120
   1400530e8:	mov    DWORD PTR [rbp+0x28],0x171
   1400530ef:	call   0x14002ff30
   1400530f4:	lea    rdx,[rbp+0x30]
   1400530f8:	lea    rcx,[rsi+0x30]
   1400530fc:	mov    rbx,rax
   1400530ff:	call   0x14002ffd0
   140053104:	mov    QWORD PTR [rbx],rax
   140053107:	cmp    DWORD PTR [rsi+0x8],r12d
   14005310b:	jne    0x14005b3df
   140053111:	lea    rdx,[rbp+0x28]
   140053115:	lea    rcx,[rsi+0x30]
   140053119:	mov    DWORD PTR [rbp+0x28],0x121
   140053120:	call   0x14002ffd0
   140053125:	lea    rcx,[rip+0x1fd54]        # 0x140072e80
   14005312c:	lea    rdx,[rbp+0x28]
   140053130:	mov    DWORD PTR [rax],0x172
   140053136:	mov    DWORD PTR [rax+0x4],0x121
   14005313d:	mov    QWORD PTR [rax+0x8],rcx
   140053141:	lea    rcx,[rsi+0x10]
   140053145:	mov    DWORD PTR [rbp+0x30],0x121
   14005314c:	mov    DWORD PTR [rbp+0x28],0x172
   140053153:	call   0x14002ff30
   140053158:	lea    rdx,[rbp+0x30]
   14005315c:	lea    rcx,[rsi+0x30]
   140053160:	mov    rbx,rax
   140053163:	call   0x14002ffd0
   140053168:	mov    QWORD PTR [rbx],rax
   14005316b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005316f:	jne    0x14005b3df
   140053175:	lea    rdx,[rbp+0x28]
   140053179:	lea    rcx,[rsi+0x30]
   14005317d:	mov    DWORD PTR [rbp+0x28],0x122
   140053184:	call   0x14002ffd0
   140053189:	lea    rcx,[rip+0x1fd08]        # 0x140072e98
   140053190:	lea    rdx,[rbp+0x28]
   140053194:	mov    DWORD PTR [rax],0x173
   14005319a:	mov    DWORD PTR [rax+0x4],0x122
   1400531a1:	mov    QWORD PTR [rax+0x8],rcx
   1400531a5:	lea    rcx,[rsi+0x10]
   1400531a9:	mov    DWORD PTR [rbp+0x30],0x122
   1400531b0:	mov    DWORD PTR [rbp+0x28],0x173
   1400531b7:	call   0x14002ff30
   1400531bc:	lea    rdx,[rbp+0x30]
   1400531c0:	lea    rcx,[rsi+0x30]
   1400531c4:	mov    rbx,rax
   1400531c7:	call   0x14002ffd0
   1400531cc:	mov    QWORD PTR [rbx],rax
   1400531cf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400531d3:	jne    0x14005b3df
   1400531d9:	lea    rdx,[rbp+0x28]
   1400531dd:	lea    rcx,[rsi+0x30]
   1400531e1:	mov    DWORD PTR [rbp+0x28],0x123
   1400531e8:	call   0x14002ffd0
   1400531ed:	lea    rcx,[rip+0x1fcb4]        # 0x140072ea8
   1400531f4:	lea    rdx,[rbp+0x28]
   1400531f8:	mov    DWORD PTR [rax],0x174
   1400531fe:	mov    DWORD PTR [rax+0x4],0x123
   140053205:	mov    QWORD PTR [rax+0x8],rcx
   140053209:	lea    rcx,[rsi+0x10]
   14005320d:	mov    DWORD PTR [rbp+0x30],0x123
   140053214:	mov    DWORD PTR [rbp+0x28],0x174
   14005321b:	call   0x14002ff30
   140053220:	lea    rdx,[rbp+0x30]
   140053224:	lea    rcx,[rsi+0x30]
   140053228:	mov    rbx,rax
   14005322b:	call   0x14002ffd0
   140053230:	mov    QWORD PTR [rbx],rax
   140053233:	cmp    DWORD PTR [rsi+0x8],r12d
   140053237:	jne    0x14005b3df
   14005323d:	lea    rdx,[rbp+0x28]
   140053241:	lea    rcx,[rsi+0x30]
   140053245:	mov    DWORD PTR [rbp+0x28],0x124
   14005324c:	call   0x14002ffd0
   140053251:	lea    rcx,[rip+0x1fc68]        # 0x140072ec0
   140053258:	lea    rdx,[rbp+0x28]
   14005325c:	mov    DWORD PTR [rax],0x175
   140053262:	mov    DWORD PTR [rax+0x4],0x124
   140053269:	mov    QWORD PTR [rax+0x8],rcx
   14005326d:	lea    rcx,[rsi+0x10]
   140053271:	mov    DWORD PTR [rbp+0x30],0x124
   140053278:	mov    DWORD PTR [rbp+0x28],0x175
   14005327f:	call   0x14002ff30
   140053284:	lea    rdx,[rbp+0x30]
   140053288:	lea    rcx,[rsi+0x30]
   14005328c:	mov    rbx,rax
   14005328f:	call   0x14002ffd0
   140053294:	mov    QWORD PTR [rbx],rax
   140053297:	cmp    DWORD PTR [rsi+0x8],r12d
   14005329b:	jne    0x14005b3df
   1400532a1:	lea    rdx,[rbp+0x28]
   1400532a5:	lea    rcx,[rsi+0x30]
   1400532a9:	mov    DWORD PTR [rbp+0x28],0x125
   1400532b0:	call   0x14002ffd0
   1400532b5:	lea    rcx,[rip+0x1fc1c]        # 0x140072ed8
   1400532bc:	lea    rdx,[rbp+0x28]
   1400532c0:	mov    DWORD PTR [rax],0x176
   1400532c6:	mov    DWORD PTR [rax+0x4],0x125
   1400532cd:	mov    QWORD PTR [rax+0x8],rcx
   1400532d1:	lea    rcx,[rsi+0x10]
   1400532d5:	mov    DWORD PTR [rbp+0x30],0x125
   1400532dc:	mov    DWORD PTR [rbp+0x28],0x176
   1400532e3:	call   0x14002ff30
   1400532e8:	lea    rdx,[rbp+0x30]
   1400532ec:	lea    rcx,[rsi+0x30]
   1400532f0:	mov    rbx,rax
   1400532f3:	call   0x14002ffd0
   1400532f8:	mov    QWORD PTR [rbx],rax
   1400532fb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400532ff:	jne    0x14005b3df
   140053305:	lea    rdx,[rbp+0x28]
   140053309:	lea    rcx,[rsi+0x30]
   14005330d:	mov    DWORD PTR [rbp+0x28],0x126
   140053314:	call   0x14002ffd0
   140053319:	lea    rcx,[rip+0x1fbd0]        # 0x140072ef0
   140053320:	lea    rdx,[rbp+0x28]
   140053324:	mov    DWORD PTR [rax],0x177
   14005332a:	mov    DWORD PTR [rax+0x4],0x126
   140053331:	mov    QWORD PTR [rax+0x8],rcx
   140053335:	lea    rcx,[rsi+0x10]
   140053339:	mov    DWORD PTR [rbp+0x30],0x126
   140053340:	mov    DWORD PTR [rbp+0x28],0x177
   140053347:	call   0x14002ff30
   14005334c:	lea    rdx,[rbp+0x30]
   140053350:	lea    rcx,[rsi+0x30]
   140053354:	mov    rbx,rax
   140053357:	call   0x14002ffd0
   14005335c:	mov    QWORD PTR [rbx],rax
   14005335f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053363:	jne    0x14005b3df
   140053369:	lea    rdx,[rbp+0x28]
   14005336d:	lea    rcx,[rsi+0x30]
   140053371:	mov    DWORD PTR [rbp+0x28],0x127
   140053378:	call   0x14002ffd0
   14005337d:	lea    rcx,[rip+0x1fb84]        # 0x140072f08
   140053384:	lea    rdx,[rbp+0x28]
   140053388:	mov    DWORD PTR [rax],0x178
   14005338e:	mov    DWORD PTR [rax+0x4],0x127
   140053395:	mov    QWORD PTR [rax+0x8],rcx
   140053399:	lea    rcx,[rsi+0x10]
   14005339d:	mov    DWORD PTR [rbp+0x30],0x127
   1400533a4:	mov    DWORD PTR [rbp+0x28],0x178
   1400533ab:	call   0x14002ff30
   1400533b0:	lea    rdx,[rbp+0x30]
   1400533b4:	lea    rcx,[rsi+0x30]
   1400533b8:	mov    rbx,rax
   1400533bb:	call   0x14002ffd0
   1400533c0:	mov    QWORD PTR [rbx],rax
   1400533c3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400533c7:	jne    0x14005b3df
   1400533cd:	lea    rdx,[rbp+0x28]
   1400533d1:	lea    rcx,[rsi+0x30]
   1400533d5:	mov    DWORD PTR [rbp+0x28],0x128
   1400533dc:	call   0x14002ffd0
   1400533e1:	lea    rcx,[rip+0x1fb38]        # 0x140072f20
   1400533e8:	lea    rdx,[rbp+0x28]
   1400533ec:	mov    DWORD PTR [rax],0x179
   1400533f2:	mov    DWORD PTR [rax+0x4],0x128
   1400533f9:	mov    QWORD PTR [rax+0x8],rcx
   1400533fd:	lea    rcx,[rsi+0x10]
   140053401:	mov    DWORD PTR [rbp+0x30],0x128
   140053408:	mov    DWORD PTR [rbp+0x28],0x179
   14005340f:	call   0x14002ff30
   140053414:	lea    rdx,[rbp+0x30]
   140053418:	lea    rcx,[rsi+0x30]
   14005341c:	mov    rbx,rax
   14005341f:	call   0x14002ffd0
   140053424:	mov    QWORD PTR [rbx],rax
   140053427:	cmp    DWORD PTR [rsi+0x8],r12d
   14005342b:	jne    0x14005b3df
   140053431:	lea    rdx,[rbp+0x28]
   140053435:	lea    rcx,[rsi+0x30]
   140053439:	mov    DWORD PTR [rbp+0x28],0x129
   140053440:	call   0x14002ffd0
   140053445:	lea    rcx,[rip+0x1faec]        # 0x140072f38
   14005344c:	lea    rdx,[rbp+0x28]
   140053450:	mov    DWORD PTR [rax],0x17a
   140053456:	mov    DWORD PTR [rax+0x4],0x129
   14005345d:	mov    QWORD PTR [rax+0x8],rcx
   140053461:	lea    rcx,[rsi+0x10]
   140053465:	mov    DWORD PTR [rbp+0x30],0x129
   14005346c:	mov    DWORD PTR [rbp+0x28],0x17a
   140053473:	call   0x14002ff30
   140053478:	lea    rdx,[rbp+0x30]
   14005347c:	lea    rcx,[rsi+0x30]
   140053480:	mov    rbx,rax
   140053483:	call   0x14002ffd0
   140053488:	mov    QWORD PTR [rbx],rax
   14005348b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005348f:	jne    0x14005b3df
   140053495:	lea    rdx,[rbp+0x28]
   140053499:	lea    rcx,[rsi+0x30]
   14005349d:	mov    DWORD PTR [rbp+0x28],0x12a
   1400534a4:	call   0x14002ffd0
   1400534a9:	lea    rcx,[rip+0x1faa0]        # 0x140072f50
   1400534b0:	lea    rdx,[rbp+0x28]
   1400534b4:	mov    DWORD PTR [rax],0x17b
   1400534ba:	mov    DWORD PTR [rax+0x4],0x12a
   1400534c1:	mov    QWORD PTR [rax+0x8],rcx
   1400534c5:	lea    rcx,[rsi+0x10]
   1400534c9:	mov    DWORD PTR [rbp+0x30],0x12a
   1400534d0:	mov    DWORD PTR [rbp+0x28],0x17b
   1400534d7:	call   0x14002ff30
   1400534dc:	lea    rdx,[rbp+0x30]
   1400534e0:	lea    rcx,[rsi+0x30]
   1400534e4:	mov    rbx,rax
   1400534e7:	call   0x14002ffd0
   1400534ec:	mov    QWORD PTR [rbx],rax
   1400534ef:	cmp    DWORD PTR [rsi+0x8],r12d
   1400534f3:	jne    0x14005b3df
   1400534f9:	lea    rdx,[rbp+0x28]
   1400534fd:	lea    rcx,[rsi+0x30]
   140053501:	mov    DWORD PTR [rbp+0x28],0x12b
   140053508:	call   0x14002ffd0
   14005350d:	lea    rcx,[rip+0x1fa54]        # 0x140072f68
   140053514:	lea    rdx,[rbp+0x28]
   140053518:	mov    DWORD PTR [rax],0x17c
   14005351e:	mov    DWORD PTR [rax+0x4],0x12b
   140053525:	mov    QWORD PTR [rax+0x8],rcx
   140053529:	lea    rcx,[rsi+0x10]
   14005352d:	mov    DWORD PTR [rbp+0x30],0x12b
   140053534:	mov    DWORD PTR [rbp+0x28],0x17c
   14005353b:	call   0x14002ff30
   140053540:	lea    rdx,[rbp+0x30]
   140053544:	lea    rcx,[rsi+0x30]
   140053548:	mov    rbx,rax
   14005354b:	call   0x14002ffd0
   140053550:	mov    QWORD PTR [rbx],rax
   140053553:	cmp    DWORD PTR [rsi+0x8],r12d
   140053557:	jne    0x14005b3df
   14005355d:	lea    rdx,[rbp+0x28]
   140053561:	lea    rcx,[rsi+0x30]
   140053565:	mov    DWORD PTR [rbp+0x28],0x12c
   14005356c:	call   0x14002ffd0
   140053571:	lea    rcx,[rip+0x1fa08]        # 0x140072f80
   140053578:	lea    rdx,[rbp+0x28]
   14005357c:	mov    DWORD PTR [rax],0x17d
   140053582:	mov    DWORD PTR [rax+0x4],0x12c
   140053589:	mov    QWORD PTR [rax+0x8],rcx
   14005358d:	lea    rcx,[rsi+0x10]
   140053591:	mov    DWORD PTR [rbp+0x30],0x12c
   140053598:	mov    DWORD PTR [rbp+0x28],0x17d
   14005359f:	call   0x14002ff30
   1400535a4:	lea    rdx,[rbp+0x30]
   1400535a8:	lea    rcx,[rsi+0x30]
   1400535ac:	mov    rbx,rax
   1400535af:	call   0x14002ffd0
   1400535b4:	mov    QWORD PTR [rbx],rax
   1400535b7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400535bb:	jne    0x14005b3df
   1400535c1:	lea    rdx,[rbp+0x28]
   1400535c5:	lea    rcx,[rsi+0x30]
   1400535c9:	mov    DWORD PTR [rbp+0x28],0xb1
   1400535d0:	call   0x14002ffd0
   1400535d5:	lea    rcx,[rip+0x1f9c4]        # 0x140072fa0
   1400535dc:	lea    rdx,[rbp+0x28]
   1400535e0:	mov    DWORD PTR [rax],0x18a
   1400535e6:	mov    DWORD PTR [rax+0x4],0xb1
   1400535ed:	mov    QWORD PTR [rax+0x8],rcx
   1400535f1:	lea    rcx,[rsi+0x10]
   1400535f5:	mov    DWORD PTR [rbp+0x30],0xb1
   1400535fc:	mov    DWORD PTR [rbp+0x28],0x18a
   140053603:	call   0x14002ff30
   140053608:	lea    rdx,[rbp+0x30]
   14005360c:	lea    rcx,[rsi+0x30]
   140053610:	mov    rbx,rax
   140053613:	call   0x14002ffd0
   140053618:	mov    QWORD PTR [rbx],rax
   14005361b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005361f:	jne    0x14005b3df
   140053625:	lea    rdx,[rbp+0x28]
   140053629:	lea    rcx,[rsi+0x30]
   14005362d:	mov    DWORD PTR [rbp+0x28],0xb2
   140053634:	call   0x14002ffd0
   140053639:	lea    rcx,[rip+0x1f980]        # 0x140072fc0
   140053640:	lea    rdx,[rbp+0x28]
   140053644:	mov    DWORD PTR [rax],0x18b
   14005364a:	mov    DWORD PTR [rax+0x4],0xb2
   140053651:	mov    QWORD PTR [rax+0x8],rcx
   140053655:	lea    rcx,[rsi+0x10]
   140053659:	mov    DWORD PTR [rbp+0x30],0xb2
   140053660:	mov    DWORD PTR [rbp+0x28],0x18b
   140053667:	call   0x14002ff30
   14005366c:	lea    rdx,[rbp+0x30]
   140053670:	lea    rcx,[rsi+0x30]
   140053674:	mov    rbx,rax
   140053677:	call   0x14002ffd0
   14005367c:	mov    QWORD PTR [rbx],rax
   14005367f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053683:	jne    0x14005b3df
   140053689:	lea    rdx,[rbp+0x28]
   14005368d:	lea    rcx,[rsi+0x30]
   140053691:	mov    DWORD PTR [rbp+0x28],0xb3
   140053698:	call   0x14002ffd0
   14005369d:	lea    rcx,[rip+0x1f93c]        # 0x140072fe0
   1400536a4:	lea    rdx,[rbp+0x28]
   1400536a8:	mov    DWORD PTR [rax],0x18c
   1400536ae:	mov    DWORD PTR [rax+0x4],0xb3
   1400536b5:	mov    QWORD PTR [rax+0x8],rcx
   1400536b9:	lea    rcx,[rsi+0x10]
   1400536bd:	mov    DWORD PTR [rbp+0x30],0xb3
   1400536c4:	mov    DWORD PTR [rbp+0x28],0x18c
   1400536cb:	call   0x14002ff30
   1400536d0:	lea    rdx,[rbp+0x30]
   1400536d4:	lea    rcx,[rsi+0x30]
   1400536d8:	mov    rbx,rax
   1400536db:	call   0x14002ffd0
   1400536e0:	mov    QWORD PTR [rbx],rax
   1400536e3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400536e7:	jne    0x14005b3df
   1400536ed:	lea    rdx,[rbp+0x28]
   1400536f1:	lea    rcx,[rsi+0x30]
   1400536f5:	mov    DWORD PTR [rbp+0x28],0x385
   1400536fc:	call   0x14002ffd0
   140053701:	lea    rcx,[rip+0x1f8f8]        # 0x140073000
   140053708:	lea    rdx,[rbp+0x28]
   14005370c:	mov    DWORD PTR [rax],0x18d
   140053712:	mov    DWORD PTR [rax+0x4],0x385
   140053719:	mov    QWORD PTR [rax+0x8],rcx
   14005371d:	lea    rcx,[rsi+0x10]
   140053721:	mov    DWORD PTR [rbp+0x30],0x385
   140053728:	mov    DWORD PTR [rbp+0x28],0x18d
   14005372f:	call   0x14002ff30
   140053734:	lea    rdx,[rbp+0x30]
   140053738:	lea    rcx,[rsi+0x30]
   14005373c:	mov    rbx,rax
   14005373f:	call   0x14002ffd0
   140053744:	mov    QWORD PTR [rbx],rax
   140053747:	cmp    DWORD PTR [rsi+0x8],r12d
   14005374b:	jne    0x14005b3df
   140053751:	lea    rdx,[rbp+0x28]
   140053755:	lea    rcx,[rsi+0x30]
   140053759:	mov    DWORD PTR [rbp+0x28],0x386
   140053760:	call   0x14002ffd0
   140053765:	lea    rcx,[rip+0x1f8ac]        # 0x140073018
   14005376c:	lea    rdx,[rbp+0x28]
   140053770:	mov    DWORD PTR [rax],0x18e
   140053776:	mov    DWORD PTR [rax+0x4],0x386
   14005377d:	mov    QWORD PTR [rax+0x8],rcx
   140053781:	lea    rcx,[rsi+0x10]
   140053785:	mov    DWORD PTR [rbp+0x30],0x386
   14005378c:	mov    DWORD PTR [rbp+0x28],0x18e
   140053793:	call   0x14002ff30
   140053798:	lea    rdx,[rbp+0x30]
   14005379c:	lea    rcx,[rsi+0x30]
   1400537a0:	mov    rbx,rax
   1400537a3:	call   0x14002ffd0
   1400537a8:	mov    QWORD PTR [rbx],rax
   1400537ab:	cmp    DWORD PTR [rsi+0x8],r12d
   1400537af:	jne    0x14005b3df
   1400537b5:	lea    rdx,[rbp+0x28]
   1400537b9:	lea    rcx,[rsi+0x30]
   1400537bd:	mov    DWORD PTR [rbp+0x28],0x387
   1400537c4:	call   0x14002ffd0
   1400537c9:	lea    rcx,[rip+0x1f860]        # 0x140073030
   1400537d0:	lea    rdx,[rbp+0x28]
   1400537d4:	mov    DWORD PTR [rax],0x18f
   1400537da:	mov    DWORD PTR [rax+0x4],0x387
   1400537e1:	mov    QWORD PTR [rax+0x8],rcx
   1400537e5:	lea    rcx,[rsi+0x10]
   1400537e9:	mov    DWORD PTR [rbp+0x30],0x387
   1400537f0:	mov    DWORD PTR [rbp+0x28],0x18f
   1400537f7:	call   0x14002ff30
   1400537fc:	lea    rdx,[rbp+0x30]
   140053800:	lea    rcx,[rsi+0x30]
   140053804:	mov    rbx,rax
   140053807:	call   0x14002ffd0
   14005380c:	mov    QWORD PTR [rbx],rax
   14005380f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053813:	jne    0x14005b3df
   140053819:	lea    rdx,[rbp+0x28]
   14005381d:	lea    rcx,[rsi+0x30]
   140053821:	mov    DWORD PTR [rbp+0x28],0x388
   140053828:	call   0x14002ffd0
   14005382d:	lea    rcx,[rip+0x1f81c]        # 0x140073050
   140053834:	lea    rdx,[rbp+0x28]
   140053838:	mov    DWORD PTR [rax],0x190
   14005383e:	mov    DWORD PTR [rax+0x4],0x388
   140053845:	mov    QWORD PTR [rax+0x8],rcx
   140053849:	lea    rcx,[rsi+0x10]
   14005384d:	mov    DWORD PTR [rbp+0x30],0x388
   140053854:	mov    DWORD PTR [rbp+0x28],0x190
   14005385b:	call   0x14002ff30
   140053860:	lea    rdx,[rbp+0x30]
   140053864:	lea    rcx,[rsi+0x30]
   140053868:	mov    rbx,rax
   14005386b:	call   0x14002ffd0
   140053870:	mov    QWORD PTR [rbx],rax
   140053873:	cmp    DWORD PTR [rsi+0x8],r12d
   140053877:	jne    0x14005b3df
   14005387d:	lea    rdx,[rbp+0x28]
   140053881:	lea    rcx,[rsi+0x30]
   140053885:	mov    DWORD PTR [rbp+0x28],0x389
   14005388c:	call   0x14002ffd0
   140053891:	lea    rcx,[rip+0x1f7d8]        # 0x140073070
   140053898:	lea    rdx,[rbp+0x28]
   14005389c:	mov    DWORD PTR [rax],0x191
   1400538a2:	mov    DWORD PTR [rax+0x4],0x389
   1400538a9:	mov    QWORD PTR [rax+0x8],rcx
   1400538ad:	lea    rcx,[rsi+0x10]
   1400538b1:	mov    DWORD PTR [rbp+0x30],0x389
   1400538b8:	mov    DWORD PTR [rbp+0x28],0x191
   1400538bf:	call   0x14002ff30
   1400538c4:	lea    rdx,[rbp+0x30]
   1400538c8:	lea    rcx,[rsi+0x30]
   1400538cc:	mov    rbx,rax
   1400538cf:	call   0x14002ffd0
   1400538d4:	mov    QWORD PTR [rbx],rax
   1400538d7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400538db:	jne    0x14005b3df
   1400538e1:	lea    rdx,[rbp+0x28]
   1400538e5:	lea    rcx,[rsi+0x30]
   1400538e9:	mov    DWORD PTR [rbp+0x28],0x38a
   1400538f0:	call   0x14002ffd0
   1400538f5:	lea    rcx,[rip+0x1f78c]        # 0x140073088
   1400538fc:	lea    rdx,[rbp+0x28]
   140053900:	mov    DWORD PTR [rax],0x192
   140053906:	mov    DWORD PTR [rax+0x4],0x38a
   14005390d:	mov    QWORD PTR [rax+0x8],rcx
   140053911:	lea    rcx,[rsi+0x10]
   140053915:	mov    DWORD PTR [rbp+0x30],0x38a
   14005391c:	mov    DWORD PTR [rbp+0x28],0x192
   140053923:	call   0x14002ff30
   140053928:	lea    rdx,[rbp+0x30]
   14005392c:	lea    rcx,[rsi+0x30]
   140053930:	mov    rbx,rax
   140053933:	call   0x14002ffd0
   140053938:	mov    QWORD PTR [rbx],rax
   14005393b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005393f:	jne    0x14005b3df
   140053945:	lea    rdx,[rbp+0x28]
   140053949:	lea    rcx,[rsi+0x30]
   14005394d:	mov    DWORD PTR [rbp+0x28],0x38b
   140053954:	call   0x14002ffd0
   140053959:	lea    rcx,[rip+0x1f748]        # 0x1400730a8
   140053960:	lea    rdx,[rbp+0x28]
   140053964:	mov    DWORD PTR [rax],0xffffffff
   14005396a:	mov    DWORD PTR [rax+0x4],0x38b
   140053971:	mov    QWORD PTR [rax+0x8],rcx
   140053975:	lea    rcx,[rsi+0x10]
   140053979:	mov    DWORD PTR [rbp+0x30],0x38b
   140053980:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053987:	call   0x14002ff30
   14005398c:	lea    rdx,[rbp+0x30]
   140053990:	lea    rcx,[rsi+0x30]
   140053994:	mov    rbx,rax
   140053997:	call   0x14002ffd0
   14005399c:	mov    QWORD PTR [rbx],rax
   14005399f:	cmp    DWORD PTR [rsi+0x8],r12d
   1400539a3:	jne    0x14005b3df
   1400539a9:	lea    rdx,[rbp+0x28]
   1400539ad:	lea    rcx,[rsi+0x30]
   1400539b1:	mov    DWORD PTR [rbp+0x28],0x38c
   1400539b8:	call   0x14002ffd0
   1400539bd:	lea    rcx,[rip+0x1f704]        # 0x1400730c8
   1400539c4:	lea    rdx,[rbp+0x28]
   1400539c8:	mov    DWORD PTR [rax],0xffffffff
   1400539ce:	mov    DWORD PTR [rax+0x4],0x38c
   1400539d5:	mov    QWORD PTR [rax+0x8],rcx
   1400539d9:	lea    rcx,[rsi+0x10]
   1400539dd:	mov    DWORD PTR [rbp+0x30],0x38c
   1400539e4:	mov    DWORD PTR [rbp+0x28],0xffffffff
   1400539eb:	call   0x14002ff30
   1400539f0:	lea    rdx,[rbp+0x30]
   1400539f4:	lea    rcx,[rsi+0x30]
   1400539f8:	mov    rbx,rax
   1400539fb:	call   0x14002ffd0
   140053a00:	mov    QWORD PTR [rbx],rax
   140053a03:	cmp    DWORD PTR [rsi+0x8],r12d
   140053a07:	jne    0x14005b3df
   140053a0d:	lea    rdx,[rbp+0x28]
   140053a11:	lea    rcx,[rsi+0x30]
   140053a15:	mov    DWORD PTR [rbp+0x28],0x38d
   140053a1c:	call   0x14002ffd0
   140053a21:	lea    rcx,[rip+0x1f6c0]        # 0x1400730e8
   140053a28:	lea    rdx,[rbp+0x28]
   140053a2c:	mov    DWORD PTR [rax],0xffffffff
   140053a32:	mov    DWORD PTR [rax+0x4],0x38d
   140053a39:	mov    QWORD PTR [rax+0x8],rcx
   140053a3d:	lea    rcx,[rsi+0x10]
   140053a41:	mov    DWORD PTR [rbp+0x30],0x38d
   140053a48:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053a4f:	call   0x14002ff30
   140053a54:	lea    rdx,[rbp+0x30]
   140053a58:	lea    rcx,[rsi+0x30]
   140053a5c:	mov    rbx,rax
   140053a5f:	call   0x14002ffd0
   140053a64:	mov    QWORD PTR [rbx],rax
   140053a67:	cmp    DWORD PTR [rsi+0x8],r12d
   140053a6b:	jne    0x14005b3df
   140053a71:	lea    rdx,[rbp+0x28]
   140053a75:	lea    rcx,[rsi+0x30]
   140053a79:	mov    DWORD PTR [rbp+0x28],0x38e
   140053a80:	call   0x14002ffd0
   140053a85:	lea    rcx,[rip+0x1f674]        # 0x140073100
   140053a8c:	lea    rdx,[rbp+0x28]
   140053a90:	mov    DWORD PTR [rax],0xffffffff
   140053a96:	mov    DWORD PTR [rax+0x4],0x38e
   140053a9d:	mov    QWORD PTR [rax+0x8],rcx
   140053aa1:	lea    rcx,[rsi+0x10]
   140053aa5:	mov    DWORD PTR [rbp+0x30],0x38e
   140053aac:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053ab3:	call   0x14002ff30
   140053ab8:	lea    rdx,[rbp+0x30]
   140053abc:	lea    rcx,[rsi+0x30]
   140053ac0:	mov    rbx,rax
   140053ac3:	call   0x14002ffd0
   140053ac8:	mov    QWORD PTR [rbx],rax
   140053acb:	cmp    DWORD PTR [rsi+0x8],r12d
   140053acf:	jne    0x14005b3df
   140053ad5:	lea    rdx,[rbp+0x28]
   140053ad9:	lea    rcx,[rsi+0x30]
   140053add:	mov    DWORD PTR [rbp+0x28],0x38f
   140053ae4:	call   0x14002ffd0
   140053ae9:	lea    rcx,[rip+0x1f630]        # 0x140073120
   140053af0:	lea    rdx,[rbp+0x28]
   140053af4:	mov    DWORD PTR [rax],0xffffffff
   140053afa:	mov    DWORD PTR [rax+0x4],0x38f
   140053b01:	mov    QWORD PTR [rax+0x8],rcx
   140053b05:	lea    rcx,[rsi+0x10]
   140053b09:	mov    DWORD PTR [rbp+0x30],0x38f
   140053b10:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053b17:	call   0x14002ff30
   140053b1c:	lea    rdx,[rbp+0x30]
   140053b20:	lea    rcx,[rsi+0x30]
   140053b24:	mov    rbx,rax
   140053b27:	call   0x14002ffd0
   140053b2c:	mov    QWORD PTR [rbx],rax
   140053b2f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053b33:	jne    0x14005b3df
   140053b39:	lea    rdx,[rbp+0x28]
   140053b3d:	lea    rcx,[rsi+0x30]
   140053b41:	mov    DWORD PTR [rbp+0x28],0x390
   140053b48:	call   0x14002ffd0
   140053b4d:	lea    rcx,[rip+0x1f5ec]        # 0x140073140
   140053b54:	lea    rdx,[rbp+0x28]
   140053b58:	mov    DWORD PTR [rax],0xffffffff
   140053b5e:	mov    DWORD PTR [rax+0x4],0x390
   140053b65:	mov    QWORD PTR [rax+0x8],rcx
   140053b69:	lea    rcx,[rsi+0x10]
   140053b6d:	mov    DWORD PTR [rbp+0x30],0x390
   140053b74:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053b7b:	call   0x14002ff30
   140053b80:	lea    rdx,[rbp+0x30]
   140053b84:	lea    rcx,[rsi+0x30]
   140053b88:	mov    rbx,rax
   140053b8b:	call   0x14002ffd0
   140053b90:	mov    QWORD PTR [rbx],rax
   140053b93:	cmp    DWORD PTR [rsi+0x8],r12d
   140053b97:	jne    0x14005b3df
   140053b9d:	lea    rdx,[rbp+0x28]
   140053ba1:	lea    rcx,[rsi+0x30]
   140053ba5:	mov    DWORD PTR [rbp+0x28],0x391
   140053bac:	call   0x14002ffd0
   140053bb1:	lea    rcx,[rip+0x1f5a8]        # 0x140073160
   140053bb8:	lea    rdx,[rbp+0x28]
   140053bbc:	mov    DWORD PTR [rax],0xffffffff
   140053bc2:	mov    DWORD PTR [rax+0x4],0x391
   140053bc9:	mov    QWORD PTR [rax+0x8],rcx
   140053bcd:	lea    rcx,[rsi+0x10]
   140053bd1:	mov    DWORD PTR [rbp+0x30],0x391
   140053bd8:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053bdf:	call   0x14002ff30
   140053be4:	lea    rdx,[rbp+0x30]
   140053be8:	lea    rcx,[rsi+0x30]
   140053bec:	mov    rbx,rax
   140053bef:	call   0x14002ffd0
   140053bf4:	mov    QWORD PTR [rbx],rax
   140053bf7:	cmp    DWORD PTR [rsi+0x8],r12d
   140053bfb:	jne    0x14005b3df
   140053c01:	lea    rdx,[rbp+0x28]
   140053c05:	lea    rcx,[rsi+0x30]
   140053c09:	mov    DWORD PTR [rbp+0x28],0x392
   140053c10:	call   0x14002ffd0
   140053c15:	lea    rcx,[rip+0x1f55c]        # 0x140073178
   140053c1c:	lea    rdx,[rbp+0x28]
   140053c20:	mov    DWORD PTR [rax],0xffffffff
   140053c26:	mov    DWORD PTR [rax+0x4],0x392
   140053c2d:	mov    QWORD PTR [rax+0x8],rcx
   140053c31:	lea    rcx,[rsi+0x10]
   140053c35:	mov    DWORD PTR [rbp+0x30],0x392
   140053c3c:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053c43:	call   0x14002ff30
   140053c48:	lea    rdx,[rbp+0x30]
   140053c4c:	lea    rcx,[rsi+0x30]
   140053c50:	mov    rbx,rax
   140053c53:	call   0x14002ffd0
   140053c58:	mov    QWORD PTR [rbx],rax
   140053c5b:	cmp    DWORD PTR [rsi+0x8],r12d
   140053c5f:	jne    0x14005b3df
   140053c65:	lea    rdx,[rbp+0x28]
   140053c69:	lea    rcx,[rsi+0x30]
   140053c6d:	mov    DWORD PTR [rbp+0x28],0x393
   140053c74:	call   0x14002ffd0
   140053c79:	lea    rcx,[rip+0x1f518]        # 0x140073198
   140053c80:	lea    rdx,[rbp+0x28]
   140053c84:	mov    DWORD PTR [rax],0xffffffff
   140053c8a:	mov    DWORD PTR [rax+0x4],0x393
   140053c91:	mov    QWORD PTR [rax+0x8],rcx
   140053c95:	lea    rcx,[rsi+0x10]
   140053c99:	mov    DWORD PTR [rbp+0x30],0x393
   140053ca0:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053ca7:	call   0x14002ff30
   140053cac:	lea    rdx,[rbp+0x30]
   140053cb0:	lea    rcx,[rsi+0x30]
   140053cb4:	mov    rbx,rax
   140053cb7:	call   0x14002ffd0
   140053cbc:	mov    QWORD PTR [rbx],rax
   140053cbf:	cmp    DWORD PTR [rsi+0x8],r12d
   140053cc3:	jne    0x14005b3df
   140053cc9:	lea    rdx,[rbp+0x28]
   140053ccd:	lea    rcx,[rsi+0x30]
   140053cd1:	mov    DWORD PTR [rbp+0x28],0x394
   140053cd8:	call   0x14002ffd0
   140053cdd:	lea    rcx,[rip+0x1f4d4]        # 0x1400731b8
   140053ce4:	lea    rdx,[rbp+0x28]
   140053ce8:	mov    DWORD PTR [rax],0xffffffff
   140053cee:	mov    DWORD PTR [rax+0x4],0x394
   140053cf5:	mov    QWORD PTR [rax+0x8],rcx
   140053cf9:	lea    rcx,[rsi+0x10]
   140053cfd:	mov    DWORD PTR [rbp+0x30],0x394
   140053d04:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053d0b:	call   0x14002ff30
   140053d10:	lea    rdx,[rbp+0x30]
   140053d14:	lea    rcx,[rsi+0x30]
   140053d18:	mov    rbx,rax
   140053d1b:	call   0x14002ffd0
   140053d20:	mov    QWORD PTR [rbx],rax
   140053d23:	cmp    DWORD PTR [rsi+0x8],r12d
   140053d27:	jne    0x14005b3df
   140053d2d:	lea    rdx,[rbp+0x28]
   140053d31:	lea    rcx,[rsi+0x30]
   140053d35:	mov    DWORD PTR [rbp+0x28],0x395
   140053d3c:	call   0x14002ffd0
   140053d41:	lea    rcx,[rip+0x1f490]        # 0x1400731d8
   140053d48:	lea    rdx,[rbp+0x28]
   140053d4c:	mov    DWORD PTR [rax],0xffffffff
   140053d52:	mov    DWORD PTR [rax+0x4],0x395
   140053d59:	mov    QWORD PTR [rax+0x8],rcx
   140053d5d:	lea    rcx,[rsi+0x10]
   140053d61:	mov    DWORD PTR [rbp+0x30],0x395
   140053d68:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053d6f:	call   0x14002ff30
   140053d74:	lea    rdx,[rbp+0x30]
   140053d78:	lea    rcx,[rsi+0x30]
   140053d7c:	mov    rbx,rax
   140053d7f:	call   0x14002ffd0
   140053d84:	mov    QWORD PTR [rbx],rax
   140053d87:	cmp    DWORD PTR [rsi+0x8],r12d
   140053d8b:	jne    0x14005b3df
   140053d91:	lea    rdx,[rbp+0x28]
   140053d95:	lea    rcx,[rsi+0x30]
   140053d99:	mov    DWORD PTR [rbp+0x28],0x396
   140053da0:	call   0x14002ffd0
   140053da5:	lea    rcx,[rip+0x1f444]        # 0x1400731f0
   140053dac:	lea    rdx,[rbp+0x28]
   140053db0:	mov    DWORD PTR [rax],0xffffffff
   140053db6:	mov    DWORD PTR [rax+0x4],0x396
   140053dbd:	mov    QWORD PTR [rax+0x8],rcx
   140053dc1:	lea    rcx,[rsi+0x10]
   140053dc5:	mov    DWORD PTR [rbp+0x30],0x396
   140053dcc:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053dd3:	call   0x14002ff30
   140053dd8:	lea    rdx,[rbp+0x30]
   140053ddc:	lea    rcx,[rsi+0x30]
   140053de0:	mov    rbx,rax
   140053de3:	call   0x14002ffd0
   140053de8:	mov    QWORD PTR [rbx],rax
   140053deb:	cmp    DWORD PTR [rsi+0x8],r12d
   140053def:	jne    0x14005b3df
   140053df5:	lea    rdx,[rbp+0x28]
   140053df9:	lea    rcx,[rsi+0x30]
   140053dfd:	mov    DWORD PTR [rbp+0x28],0x397
   140053e04:	call   0x14002ffd0
   140053e09:	lea    rcx,[rip+0x1f400]        # 0x140073210
   140053e10:	lea    rdx,[rbp+0x28]
   140053e14:	mov    DWORD PTR [rax],0xffffffff
   140053e1a:	mov    DWORD PTR [rax+0x4],0x397
   140053e21:	mov    QWORD PTR [rax+0x8],rcx
   140053e25:	lea    rcx,[rsi+0x10]
   140053e29:	mov    DWORD PTR [rbp+0x30],0x397
   140053e30:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053e37:	call   0x14002ff30
   140053e3c:	lea    rdx,[rbp+0x30]
   140053e40:	lea    rcx,[rsi+0x30]
   140053e44:	mov    rbx,rax
   140053e47:	call   0x14002ffd0
   140053e4c:	mov    QWORD PTR [rbx],rax
   140053e4f:	cmp    DWORD PTR [rsi+0x8],r12d
   140053e53:	jne    0x14005b3df
   140053e59:	lea    rdx,[rbp+0x28]
   140053e5d:	lea    rcx,[rsi+0x30]
   140053e61:	mov    DWORD PTR [rbp+0x28],0x398
   140053e68:	call   0x14002ffd0
   140053e6d:	lea    rcx,[rip+0x1f3bc]        # 0x140073230
   140053e74:	lea    rdx,[rbp+0x28]
   140053e78:	mov    DWORD PTR [rax],0xffffffff
   140053e7e:	mov    DWORD PTR [rax+0x4],0x398
   140053e85:	mov    QWORD PTR [rax+0x8],rcx
   140053e89:	lea    rcx,[rsi+0x10]
   140053e8d:	mov    DWORD PTR [rbp+0x30],0x398
   140053e94:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053e9b:	call   0x14002ff30
   140053ea0:	lea    rdx,[rbp+0x30]
   140053ea4:	lea    rcx,[rsi+0x30]
   140053ea8:	mov    rbx,rax
   140053eab:	call   0x14002ffd0
   140053eb0:	mov    QWORD PTR [rbx],rax
   140053eb3:	cmp    DWORD PTR [rsi+0x8],r12d
   140053eb7:	jne    0x14005b3df
   140053ebd:	lea    rdx,[rbp+0x28]
   140053ec1:	lea    rcx,[rsi+0x30]
   140053ec5:	mov    DWORD PTR [rbp+0x28],0x399
   140053ecc:	call   0x14002ffd0
   140053ed1:	lea    rcx,[rip+0x1f378]        # 0x140073250
   140053ed8:	lea    rdx,[rbp+0x28]
   140053edc:	mov    DWORD PTR [rax],0xffffffff
   140053ee2:	mov    DWORD PTR [rax+0x4],0x399
   140053ee9:	mov    QWORD PTR [rax+0x8],rcx
   140053eed:	lea    rcx,[rsi+0x10]
   140053ef1:	mov    DWORD PTR [rbp+0x30],0x399
   140053ef8:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053eff:	call   0x14002ff30
   140053f04:	lea    rdx,[rbp+0x30]
   140053f08:	lea    rcx,[rsi+0x30]
   140053f0c:	mov    rbx,rax
   140053f0f:	call   0x14002ffd0
   140053f14:	mov    QWORD PTR [rbx],rax
   140053f17:	cmp    DWORD PTR [rsi+0x8],r12d
   140053f1b:	jne    0x14005b3df
   140053f21:	lea    rdx,[rbp+0x28]
   140053f25:	lea    rcx,[rsi+0x30]
   140053f29:	mov    DWORD PTR [rbp+0x28],0x39a
   140053f30:	call   0x14002ffd0
   140053f35:	lea    rcx,[rip+0x1f32c]        # 0x140073268
   140053f3c:	lea    rdx,[rbp+0x28]
   140053f40:	mov    DWORD PTR [rax],0xffffffff
   140053f46:	mov    DWORD PTR [rax+0x4],0x39a
   140053f4d:	mov    QWORD PTR [rax+0x8],rcx
   140053f51:	lea    rcx,[rsi+0x10]
   140053f55:	mov    DWORD PTR [rbp+0x30],0x39a
   140053f5c:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140053f63:	call   0x14002ff30
   140053f68:	lea    rdx,[rbp+0x30]
   140053f6c:	lea    rcx,[rsi+0x30]
   140053f70:	mov    rbx,rax
   140053f73:	call   0x14002ffd0
   140053f78:	mov    QWORD PTR [rbx],rax
   140053f7b:	cmp    DWORD PTR [rsi+0x8],r12d
   140053f7f:	jne    0x14005b3df
   140053f85:	lea    rdx,[rbp+0x28]
   140053f89:	lea    rcx,[rsi+0x30]
   140053f8d:	mov    DWORD PTR [rbp+0x28],0x39b
   140053f94:	call   0x14002ffd0
   140053f99:	lea    rcx,[rip+0x1f2e8]        # 0x140073288
   140053fa0:	lea    rdx,[rbp+0x28]
   140053fa4:	mov    DWORD PTR [rax],0x1a3
   140053faa:	mov    DWORD PTR [rax+0x4],0x39b
   140053fb1:	mov    QWORD PTR [rax+0x8],rcx
   140053fb5:	lea    rcx,[rsi+0x10]
   140053fb9:	mov    DWORD PTR [rbp+0x30],0x39b
   140053fc0:	mov    DWORD PTR [rbp+0x28],0x1a3
   140053fc7:	call   0x14002ff30
   140053fcc:	lea    rdx,[rbp+0x30]
   140053fd0:	lea    rcx,[rsi+0x30]
   140053fd4:	mov    rbx,rax
   140053fd7:	call   0x14002ffd0
   140053fdc:	mov    QWORD PTR [rbx],rax
   140053fdf:	cmp    DWORD PTR [rsi+0x8],r12d
   140053fe3:	jne    0x14005b3df
   140053fe9:	lea    rdx,[rbp+0x28]
   140053fed:	lea    rcx,[rsi+0x30]
   140053ff1:	mov    DWORD PTR [rbp+0x28],0x39c
   140053ff8:	call   0x14002ffd0
   140053ffd:	lea    rcx,[rip+0x1f2a4]        # 0x1400732a8
   140054004:	lea    rdx,[rbp+0x28]
   140054008:	mov    DWORD PTR [rax],0x1a4
   14005400e:	mov    DWORD PTR [rax+0x4],0x39c
   140054015:	mov    QWORD PTR [rax+0x8],rcx
   140054019:	lea    rcx,[rsi+0x10]
   14005401d:	mov    DWORD PTR [rbp+0x30],0x39c
   140054024:	mov    DWORD PTR [rbp+0x28],0x1a4
   14005402b:	call   0x14002ff30
   140054030:	lea    rdx,[rbp+0x30]
   140054034:	lea    rcx,[rsi+0x30]
   140054038:	mov    rbx,rax
   14005403b:	call   0x14002ffd0
   140054040:	mov    QWORD PTR [rbx],rax
   140054043:	cmp    DWORD PTR [rsi+0x8],r12d
   140054047:	jne    0x14005b3df
   14005404d:	lea    rdx,[rbp+0x28]
   140054051:	lea    rcx,[rsi+0x30]
   140054055:	mov    DWORD PTR [rbp+0x28],0x39d
   14005405c:	call   0x14002ffd0
   140054061:	lea    rcx,[rip+0x1f260]        # 0x1400732c8
   140054068:	lea    rdx,[rbp+0x28]
   14005406c:	mov    DWORD PTR [rax],0x1a5
   140054072:	mov    DWORD PTR [rax+0x4],0x39d
   140054079:	mov    QWORD PTR [rax+0x8],rcx
   14005407d:	lea    rcx,[rsi+0x10]
   140054081:	mov    DWORD PTR [rbp+0x30],0x39d
   140054088:	mov    DWORD PTR [rbp+0x28],0x1a5
   14005408f:	call   0x14002ff30
   140054094:	lea    rdx,[rbp+0x30]
   140054098:	lea    rcx,[rsi+0x30]
   14005409c:	mov    rbx,rax
   14005409f:	call   0x14002ffd0
   1400540a4:	mov    QWORD PTR [rbx],rax
   1400540a7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400540ab:	jne    0x14005b3df
   1400540b1:	lea    rdx,[rbp+0x28]
   1400540b5:	lea    rcx,[rsi+0x30]
   1400540b9:	mov    DWORD PTR [rbp+0x28],0x39e
   1400540c0:	call   0x14002ffd0
   1400540c5:	lea    rcx,[rip+0x1f214]        # 0x1400732e0
   1400540cc:	lea    rdx,[rbp+0x28]
   1400540d0:	mov    DWORD PTR [rax],0x1a6
   1400540d6:	mov    DWORD PTR [rax+0x4],0x39e
   1400540dd:	mov    QWORD PTR [rax+0x8],rcx
   1400540e1:	lea    rcx,[rsi+0x10]
   1400540e5:	mov    DWORD PTR [rbp+0x30],0x39e
   1400540ec:	mov    DWORD PTR [rbp+0x28],0x1a6
   1400540f3:	call   0x14002ff30
   1400540f8:	lea    rdx,[rbp+0x30]
   1400540fc:	lea    rcx,[rsi+0x30]
   140054100:	mov    rbx,rax
   140054103:	call   0x14002ffd0
   140054108:	mov    QWORD PTR [rbx],rax
   14005410b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005410f:	jne    0x14005b3df
   140054115:	lea    rdx,[rbp+0x28]
   140054119:	lea    rcx,[rsi+0x30]
   14005411d:	mov    DWORD PTR [rbp+0x28],0x39f
   140054124:	call   0x14002ffd0
   140054129:	lea    rcx,[rip+0x1f1c8]        # 0x1400732f8
   140054130:	lea    rdx,[rbp+0x28]
   140054134:	mov    DWORD PTR [rax],0x1a7
   14005413a:	mov    DWORD PTR [rax+0x4],0x39f
   140054141:	mov    QWORD PTR [rax+0x8],rcx
   140054145:	lea    rcx,[rsi+0x10]
   140054149:	mov    DWORD PTR [rbp+0x30],0x39f
   140054150:	mov    DWORD PTR [rbp+0x28],0x1a7
   140054157:	call   0x14002ff30
   14005415c:	lea    rdx,[rbp+0x30]
   140054160:	lea    rcx,[rsi+0x30]
   140054164:	mov    rbx,rax
   140054167:	call   0x14002ffd0
   14005416c:	mov    QWORD PTR [rbx],rax
   14005416f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054173:	jne    0x14005b3df
   140054179:	lea    rdx,[rbp+0x28]
   14005417d:	lea    rcx,[rsi+0x30]
   140054181:	mov    DWORD PTR [rbp+0x28],0x3a0
   140054188:	call   0x14002ffd0
   14005418d:	lea    rcx,[rip+0x1f184]        # 0x140073318
   140054194:	lea    rdx,[rbp+0x28]
   140054198:	mov    DWORD PTR [rax],0x1a8
   14005419e:	mov    DWORD PTR [rax+0x4],0x3a0
   1400541a5:	mov    QWORD PTR [rax+0x8],rcx
   1400541a9:	lea    rcx,[rsi+0x10]
   1400541ad:	mov    DWORD PTR [rbp+0x30],0x3a0
   1400541b4:	mov    DWORD PTR [rbp+0x28],0x1a8
   1400541bb:	call   0x14002ff30
   1400541c0:	lea    rdx,[rbp+0x30]
   1400541c4:	lea    rcx,[rsi+0x30]
   1400541c8:	mov    rbx,rax
   1400541cb:	call   0x14002ffd0
   1400541d0:	mov    QWORD PTR [rbx],rax
   1400541d3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400541d7:	jne    0x14005b3df
   1400541dd:	lea    rdx,[rbp+0x28]
   1400541e1:	lea    rcx,[rsi+0x30]
   1400541e5:	mov    DWORD PTR [rbp+0x28],0x3a1
   1400541ec:	call   0x14002ffd0
   1400541f1:	lea    rcx,[rip+0x1f130]        # 0x140073328
   1400541f8:	lea    rdx,[rbp+0x28]
   1400541fc:	mov    DWORD PTR [rax],0x1a9
   140054202:	mov    DWORD PTR [rax+0x4],0x3a1
   140054209:	mov    QWORD PTR [rax+0x8],rcx
   14005420d:	lea    rcx,[rsi+0x10]
   140054211:	mov    DWORD PTR [rbp+0x30],0x3a1
   140054218:	mov    DWORD PTR [rbp+0x28],0x1a9
   14005421f:	call   0x14002ff30
   140054224:	lea    rdx,[rbp+0x30]
   140054228:	lea    rcx,[rsi+0x30]
   14005422c:	mov    rbx,rax
   14005422f:	call   0x14002ffd0
   140054234:	mov    QWORD PTR [rbx],rax
   140054237:	cmp    DWORD PTR [rsi+0x8],r12d
   14005423b:	jne    0x14005b3df
   140054241:	lea    rdx,[rbp+0x28]
   140054245:	lea    rcx,[rsi+0x30]
   140054249:	mov    DWORD PTR [rbp+0x28],0x3a2
   140054250:	call   0x14002ffd0
   140054255:	lea    rcx,[rip+0x1f0e4]        # 0x140073340
   14005425c:	lea    rdx,[rbp+0x28]
   140054260:	mov    DWORD PTR [rax],0xffffffff
   140054266:	mov    DWORD PTR [rax+0x4],0x3a2
   14005426d:	mov    QWORD PTR [rax+0x8],rcx
   140054271:	lea    rcx,[rsi+0x10]
   140054275:	mov    DWORD PTR [rbp+0x30],0x3a2
   14005427c:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140054283:	call   0x14002ff30
   140054288:	lea    rdx,[rbp+0x30]
   14005428c:	lea    rcx,[rsi+0x30]
   140054290:	mov    rbx,rax
   140054293:	call   0x14002ffd0
   140054298:	mov    QWORD PTR [rbx],rax
   14005429b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005429f:	jne    0x14005b3df
   1400542a5:	lea    rdx,[rbp+0x28]
   1400542a9:	lea    rcx,[rsi+0x30]
   1400542ad:	mov    DWORD PTR [rbp+0x28],0x3a3
   1400542b4:	call   0x14002ffd0
   1400542b9:	lea    rcx,[rip+0x1f098]        # 0x140073358
   1400542c0:	lea    rdx,[rbp+0x28]
   1400542c4:	mov    DWORD PTR [rax],0x1ab
   1400542ca:	mov    DWORD PTR [rax+0x4],0x3a3
   1400542d1:	mov    QWORD PTR [rax+0x8],rcx
   1400542d5:	lea    rcx,[rsi+0x10]
   1400542d9:	mov    DWORD PTR [rbp+0x30],0x3a3
   1400542e0:	mov    DWORD PTR [rbp+0x28],0x1ab
   1400542e7:	call   0x14002ff30
   1400542ec:	lea    rdx,[rbp+0x30]
   1400542f0:	lea    rcx,[rsi+0x30]
   1400542f4:	mov    rbx,rax
   1400542f7:	call   0x14002ffd0
   1400542fc:	mov    QWORD PTR [rbx],rax
   1400542ff:	cmp    DWORD PTR [rsi+0x8],r12d
   140054303:	jne    0x14005b3df
   140054309:	lea    rdx,[rbp+0x28]
   14005430d:	lea    rcx,[rsi+0x30]
   140054311:	mov    DWORD PTR [rbp+0x28],0x3a4
   140054318:	call   0x14002ffd0
   14005431d:	lea    rcx,[rip+0x1f04c]        # 0x140073370
   140054324:	lea    rdx,[rbp+0x28]
   140054328:	mov    DWORD PTR [rax],0x1ac
   14005432e:	mov    DWORD PTR [rax+0x4],0x3a4
   140054335:	mov    QWORD PTR [rax+0x8],rcx
   140054339:	lea    rcx,[rsi+0x10]
   14005433d:	mov    DWORD PTR [rbp+0x30],0x3a4
   140054344:	mov    DWORD PTR [rbp+0x28],0x1ac
   14005434b:	call   0x14002ff30
   140054350:	lea    rdx,[rbp+0x30]
   140054354:	lea    rcx,[rsi+0x30]
   140054358:	mov    rbx,rax
   14005435b:	call   0x14002ffd0
   140054360:	mov    QWORD PTR [rbx],rax
   140054363:	cmp    DWORD PTR [rsi+0x8],r12d
   140054367:	jne    0x14005b3df
   14005436d:	lea    rdx,[rbp+0x28]
   140054371:	lea    rcx,[rsi+0x30]
   140054375:	mov    DWORD PTR [rbp+0x28],0x3a5
   14005437c:	call   0x14002ffd0
   140054381:	lea    rcx,[rip+0x1f008]        # 0x140073390
   140054388:	lea    rdx,[rbp+0x28]
   14005438c:	mov    DWORD PTR [rax],0x1ad
   140054392:	mov    DWORD PTR [rax+0x4],0x3a5
   140054399:	mov    QWORD PTR [rax+0x8],rcx
   14005439d:	lea    rcx,[rsi+0x10]
   1400543a1:	mov    DWORD PTR [rbp+0x30],0x3a5
   1400543a8:	mov    DWORD PTR [rbp+0x28],0x1ad
   1400543af:	call   0x14002ff30
   1400543b4:	lea    rdx,[rbp+0x30]
   1400543b8:	lea    rcx,[rsi+0x30]
   1400543bc:	mov    rbx,rax
   1400543bf:	call   0x14002ffd0
   1400543c4:	mov    QWORD PTR [rbx],rax
   1400543c7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400543cb:	jne    0x14005b3df
   1400543d1:	lea    rdx,[rbp+0x28]
   1400543d5:	lea    rcx,[rsi+0x30]
   1400543d9:	mov    DWORD PTR [rbp+0x28],0x3a6
   1400543e0:	call   0x14002ffd0
   1400543e5:	lea    rcx,[rip+0x1efc4]        # 0x1400733b0
   1400543ec:	lea    rdx,[rbp+0x28]
   1400543f0:	mov    DWORD PTR [rax],0x1ae
   1400543f6:	mov    DWORD PTR [rax+0x4],0x3a6
   1400543fd:	mov    QWORD PTR [rax+0x8],rcx
   140054401:	lea    rcx,[rsi+0x10]
   140054405:	mov    DWORD PTR [rbp+0x30],0x3a6
   14005440c:	mov    DWORD PTR [rbp+0x28],0x1ae
   140054413:	call   0x14002ff30
   140054418:	lea    rdx,[rbp+0x30]
   14005441c:	lea    rcx,[rsi+0x30]
   140054420:	mov    rbx,rax
   140054423:	call   0x14002ffd0
   140054428:	mov    QWORD PTR [rbx],rax
   14005442b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005442f:	jne    0x14005b3df
   140054435:	lea    rdx,[rbp+0x28]
   140054439:	lea    rcx,[rsi+0x30]
   14005443d:	mov    DWORD PTR [rbp+0x28],0x3a7
   140054444:	call   0x14002ffd0
   140054449:	lea    rcx,[rip+0x1ef80]        # 0x1400733d0
   140054450:	lea    rdx,[rbp+0x28]
   140054454:	mov    DWORD PTR [rax],0x1af
   14005445a:	mov    DWORD PTR [rax+0x4],0x3a7
   140054461:	mov    QWORD PTR [rax+0x8],rcx
   140054465:	lea    rcx,[rsi+0x10]
   140054469:	mov    DWORD PTR [rbp+0x30],0x3a7
   140054470:	mov    DWORD PTR [rbp+0x28],0x1af
   140054477:	call   0x14002ff30
   14005447c:	lea    rdx,[rbp+0x30]
   140054480:	lea    rcx,[rsi+0x30]
   140054484:	mov    rbx,rax
   140054487:	call   0x14002ffd0
   14005448c:	mov    QWORD PTR [rbx],rax
   14005448f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054493:	jne    0x14005b3df
   140054499:	lea    rdx,[rbp+0x28]
   14005449d:	lea    rcx,[rsi+0x30]
   1400544a1:	mov    DWORD PTR [rbp+0x28],0x1bc
   1400544a8:	call   0x14002ffd0
   1400544ad:	lea    rcx,[rip+0x1ef3c]        # 0x1400733f0
   1400544b4:	lea    rdx,[rbp+0x28]
   1400544b8:	mov    DWORD PTR [rax],0x1b0
   1400544be:	mov    DWORD PTR [rax+0x4],0x1bc
   1400544c5:	mov    QWORD PTR [rax+0x8],rcx
   1400544c9:	lea    rcx,[rsi+0x10]
   1400544cd:	mov    DWORD PTR [rbp+0x30],0x1bc
   1400544d4:	mov    DWORD PTR [rbp+0x28],0x1b0
   1400544db:	call   0x14002ff30
   1400544e0:	lea    rdx,[rbp+0x30]
   1400544e4:	lea    rcx,[rsi+0x30]
   1400544e8:	mov    rbx,rax
   1400544eb:	call   0x14002ffd0
   1400544f0:	mov    QWORD PTR [rbx],rax
   1400544f3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400544f7:	jne    0x14005b3df
   1400544fd:	lea    rdx,[rbp+0x28]
   140054501:	lea    rcx,[rsi+0x30]
   140054505:	mov    DWORD PTR [rbp+0x28],0x1b8
   14005450c:	call   0x14002ffd0
   140054511:	lea    rcx,[rip+0x1eef8]        # 0x140073410
   140054518:	lea    rdx,[rbp+0x28]
   14005451c:	mov    DWORD PTR [rax],0x1b1
   140054522:	mov    DWORD PTR [rax+0x4],0x1b8
   140054529:	mov    QWORD PTR [rax+0x8],rcx
   14005452d:	lea    rcx,[rsi+0x10]
   140054531:	mov    DWORD PTR [rbp+0x30],0x1b8
   140054538:	mov    DWORD PTR [rbp+0x28],0x1b1
   14005453f:	call   0x14002ff30
   140054544:	lea    rdx,[rbp+0x30]
   140054548:	lea    rcx,[rsi+0x30]
   14005454c:	mov    rbx,rax
   14005454f:	call   0x14002ffd0
   140054554:	mov    QWORD PTR [rbx],rax
   140054557:	cmp    DWORD PTR [rsi+0x8],r12d
   14005455b:	jne    0x14005b3df
   140054561:	lea    rdx,[rbp+0x28]
   140054565:	lea    rcx,[rsi+0x30]
   140054569:	mov    DWORD PTR [rbp+0x28],0x1ba
   140054570:	call   0x14002ffd0
   140054575:	lea    rcx,[rip+0x1eeac]        # 0x140073428
   14005457c:	lea    rdx,[rbp+0x28]
   140054580:	mov    DWORD PTR [rax],0x1b2
   140054586:	mov    DWORD PTR [rax+0x4],0x1ba
   14005458d:	mov    QWORD PTR [rax+0x8],rcx
   140054591:	lea    rcx,[rsi+0x10]
   140054595:	mov    DWORD PTR [rbp+0x30],0x1ba
   14005459c:	mov    DWORD PTR [rbp+0x28],0x1b2
   1400545a3:	call   0x14002ff30
   1400545a8:	lea    rdx,[rbp+0x30]
   1400545ac:	lea    rcx,[rsi+0x30]
   1400545b0:	mov    rbx,rax
   1400545b3:	call   0x14002ffd0
   1400545b8:	mov    QWORD PTR [rbx],rax
   1400545bb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400545bf:	jne    0x14005b3df
   1400545c5:	lea    rdx,[rbp+0x28]
   1400545c9:	lea    rcx,[rsi+0x30]
   1400545cd:	mov    DWORD PTR [rbp+0x28],0x1b9
   1400545d4:	call   0x14002ffd0
   1400545d9:	lea    rcx,[rip+0x1ee60]        # 0x140073440
   1400545e0:	lea    rdx,[rbp+0x28]
   1400545e4:	mov    DWORD PTR [rax],0x1b3
   1400545ea:	mov    DWORD PTR [rax+0x4],0x1b9
   1400545f1:	mov    QWORD PTR [rax+0x8],rcx
   1400545f5:	lea    rcx,[rsi+0x10]
   1400545f9:	mov    DWORD PTR [rbp+0x30],0x1b9
   140054600:	mov    DWORD PTR [rbp+0x28],0x1b3
   140054607:	call   0x14002ff30
   14005460c:	lea    rdx,[rbp+0x30]
   140054610:	lea    rcx,[rsi+0x30]
   140054614:	mov    rbx,rax
   140054617:	call   0x14002ffd0
   14005461c:	mov    QWORD PTR [rbx],rax
   14005461f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054623:	jne    0x14005b3df
   140054629:	lea    rdx,[rbp+0x28]
   14005462d:	lea    rcx,[rsi+0x30]
   140054631:	mov    DWORD PTR [rbp+0x28],0x1bb
   140054638:	call   0x14002ffd0
   14005463d:	lea    rcx,[rip+0x1ee14]        # 0x140073458
   140054644:	lea    rdx,[rbp+0x28]
   140054648:	mov    DWORD PTR [rax],0x1b4
   14005464e:	mov    DWORD PTR [rax+0x4],0x1bb
   140054655:	mov    QWORD PTR [rax+0x8],rcx
   140054659:	lea    rcx,[rsi+0x10]
   14005465d:	mov    DWORD PTR [rbp+0x30],0x1bb
   140054664:	mov    DWORD PTR [rbp+0x28],0x1b4
   14005466b:	call   0x14002ff30
   140054670:	lea    rdx,[rbp+0x30]
   140054674:	lea    rcx,[rsi+0x30]
   140054678:	mov    rbx,rax
   14005467b:	call   0x14002ffd0
   140054680:	mov    QWORD PTR [rbx],rax
   140054683:	cmp    DWORD PTR [rsi+0x8],r12d
   140054687:	jne    0x14005b3df
   14005468d:	lea    rdx,[rbp+0x28]
   140054691:	lea    rcx,[rsi+0x30]
   140054695:	mov    DWORD PTR [rbp+0x28],0x1c6
   14005469c:	call   0x14002ffd0
   1400546a1:	lea    rcx,[rip+0x1edc8]        # 0x140073470
   1400546a8:	lea    rdx,[rbp+0x28]
   1400546ac:	mov    DWORD PTR [rax],0x1b5
   1400546b2:	mov    DWORD PTR [rax+0x4],0x1c6
   1400546b9:	mov    QWORD PTR [rax+0x8],rcx
   1400546bd:	lea    rcx,[rsi+0x10]
   1400546c1:	mov    DWORD PTR [rbp+0x30],0x1c6
   1400546c8:	mov    DWORD PTR [rbp+0x28],0x1b5
   1400546cf:	call   0x14002ff30
   1400546d4:	lea    rdx,[rbp+0x30]
   1400546d8:	lea    rcx,[rsi+0x30]
   1400546dc:	mov    rbx,rax
   1400546df:	call   0x14002ffd0
   1400546e4:	mov    QWORD PTR [rbx],rax
   1400546e7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400546eb:	jne    0x14005b3df
   1400546f1:	lea    rdx,[rbp+0x28]
   1400546f5:	lea    rcx,[rsi+0x30]
   1400546f9:	mov    DWORD PTR [rbp+0x28],0x1c2
   140054700:	call   0x14002ffd0
   140054705:	lea    rcx,[rip+0x1ed84]        # 0x140073490
   14005470c:	lea    rdx,[rbp+0x28]
   140054710:	mov    DWORD PTR [rax],0x1b6
   140054716:	mov    DWORD PTR [rax+0x4],0x1c2
   14005471d:	mov    QWORD PTR [rax+0x8],rcx
   140054721:	lea    rcx,[rsi+0x10]
   140054725:	mov    DWORD PTR [rbp+0x30],0x1c2
   14005472c:	mov    DWORD PTR [rbp+0x28],0x1b6
   140054733:	call   0x14002ff30
   140054738:	lea    rdx,[rbp+0x30]
   14005473c:	lea    rcx,[rsi+0x30]
   140054740:	mov    rbx,rax
   140054743:	call   0x14002ffd0
   140054748:	mov    QWORD PTR [rbx],rax
   14005474b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005474f:	jne    0x14005b3df
   140054755:	lea    rdx,[rbp+0x28]
   140054759:	lea    rcx,[rsi+0x30]
   14005475d:	mov    DWORD PTR [rbp+0x28],0x1c4
   140054764:	call   0x14002ffd0
   140054769:	lea    rcx,[rip+0x1ed38]        # 0x1400734a8
   140054770:	lea    rdx,[rbp+0x28]
   140054774:	mov    DWORD PTR [rax],0x1b7
   14005477a:	mov    DWORD PTR [rax+0x4],0x1c4
   140054781:	mov    QWORD PTR [rax+0x8],rcx
   140054785:	lea    rcx,[rsi+0x10]
   140054789:	mov    DWORD PTR [rbp+0x30],0x1c4
   140054790:	mov    DWORD PTR [rbp+0x28],0x1b7
   140054797:	call   0x14002ff30
   14005479c:	lea    rdx,[rbp+0x30]
   1400547a0:	lea    rcx,[rsi+0x30]
   1400547a4:	mov    rbx,rax
   1400547a7:	call   0x14002ffd0
   1400547ac:	mov    QWORD PTR [rbx],rax
   1400547af:	cmp    DWORD PTR [rsi+0x8],r12d
   1400547b3:	jne    0x14005b3df
   1400547b9:	lea    rdx,[rbp+0x28]
   1400547bd:	lea    rcx,[rsi+0x30]
   1400547c1:	mov    DWORD PTR [rbp+0x28],0x1c3
   1400547c8:	call   0x14002ffd0
   1400547cd:	lea    rcx,[rip+0x1ecec]        # 0x1400734c0
   1400547d4:	lea    rdx,[rbp+0x28]
   1400547d8:	mov    DWORD PTR [rax],0x1b8
   1400547de:	mov    DWORD PTR [rax+0x4],0x1c3
   1400547e5:	mov    QWORD PTR [rax+0x8],rcx
   1400547e9:	lea    rcx,[rsi+0x10]
   1400547ed:	mov    DWORD PTR [rbp+0x30],0x1c3
   1400547f4:	mov    DWORD PTR [rbp+0x28],0x1b8
   1400547fb:	call   0x14002ff30
   140054800:	lea    rdx,[rbp+0x30]
   140054804:	lea    rcx,[rsi+0x30]
   140054808:	mov    rbx,rax
   14005480b:	call   0x14002ffd0
   140054810:	mov    QWORD PTR [rbx],rax
   140054813:	cmp    DWORD PTR [rsi+0x8],r12d
   140054817:	jne    0x14005b3df
   14005481d:	lea    rdx,[rbp+0x28]
   140054821:	lea    rcx,[rsi+0x30]
   140054825:	mov    DWORD PTR [rbp+0x28],0x1c5
   14005482c:	call   0x14002ffd0
   140054831:	lea    rcx,[rip+0x1eca0]        # 0x1400734d8
   140054838:	lea    rdx,[rbp+0x28]
   14005483c:	mov    DWORD PTR [rax],0x1b9
   140054842:	mov    DWORD PTR [rax+0x4],0x1c5
   140054849:	mov    QWORD PTR [rax+0x8],rcx
   14005484d:	lea    rcx,[rsi+0x10]
   140054851:	mov    DWORD PTR [rbp+0x30],0x1c5
   140054858:	mov    DWORD PTR [rbp+0x28],0x1b9
   14005485f:	call   0x14002ff30
   140054864:	lea    rdx,[rbp+0x30]
   140054868:	lea    rcx,[rsi+0x30]
   14005486c:	mov    rbx,rax
   14005486f:	call   0x14002ffd0
   140054874:	mov    QWORD PTR [rbx],rax
   140054877:	cmp    DWORD PTR [rsi+0x8],r12d
   14005487b:	jne    0x14005b3df
   140054881:	lea    rdx,[rbp+0x28]
   140054885:	lea    rcx,[rsi+0x30]
   140054889:	mov    DWORD PTR [rbp+0x28],0x1d0
   140054890:	call   0x14002ffd0
   140054895:	lea    rcx,[rip+0x1ec54]        # 0x1400734f0
   14005489c:	lea    rdx,[rbp+0x28]
   1400548a0:	mov    DWORD PTR [rax],0x1ba
   1400548a6:	mov    DWORD PTR [rax+0x4],0x1d0
   1400548ad:	mov    QWORD PTR [rax+0x8],rcx
   1400548b1:	lea    rcx,[rsi+0x10]
   1400548b5:	mov    DWORD PTR [rbp+0x30],0x1d0
   1400548bc:	mov    DWORD PTR [rbp+0x28],0x1ba
   1400548c3:	call   0x14002ff30
   1400548c8:	lea    rdx,[rbp+0x30]
   1400548cc:	lea    rcx,[rsi+0x30]
   1400548d0:	mov    rbx,rax
   1400548d3:	call   0x14002ffd0
   1400548d8:	mov    QWORD PTR [rbx],rax
   1400548db:	cmp    DWORD PTR [rsi+0x8],r12d
   1400548df:	jne    0x14005b3df
   1400548e5:	lea    rdx,[rbp+0x28]
   1400548e9:	lea    rcx,[rsi+0x30]
   1400548ed:	mov    DWORD PTR [rbp+0x28],0x1cc
   1400548f4:	call   0x14002ffd0
   1400548f9:	lea    rcx,[rip+0x1ec10]        # 0x140073510
   140054900:	lea    rdx,[rbp+0x28]
   140054904:	mov    DWORD PTR [rax],0x1bb
   14005490a:	mov    DWORD PTR [rax+0x4],0x1cc
   140054911:	mov    QWORD PTR [rax+0x8],rcx
   140054915:	lea    rcx,[rsi+0x10]
   140054919:	mov    DWORD PTR [rbp+0x30],0x1cc
   140054920:	mov    DWORD PTR [rbp+0x28],0x1bb
   140054927:	call   0x14002ff30
   14005492c:	lea    rdx,[rbp+0x30]
   140054930:	lea    rcx,[rsi+0x30]
   140054934:	mov    rbx,rax
   140054937:	call   0x14002ffd0
   14005493c:	mov    QWORD PTR [rbx],rax
   14005493f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054943:	jne    0x14005b3df
   140054949:	lea    rdx,[rbp+0x28]
   14005494d:	lea    rcx,[rsi+0x30]
   140054951:	mov    DWORD PTR [rbp+0x28],0x1ce
   140054958:	call   0x14002ffd0
   14005495d:	lea    rcx,[rip+0x1ebc4]        # 0x140073528
   140054964:	lea    rdx,[rbp+0x28]
   140054968:	mov    DWORD PTR [rax],0x1bc
   14005496e:	mov    DWORD PTR [rax+0x4],0x1ce
   140054975:	mov    QWORD PTR [rax+0x8],rcx
   140054979:	lea    rcx,[rsi+0x10]
   14005497d:	mov    DWORD PTR [rbp+0x30],0x1ce
   140054984:	mov    DWORD PTR [rbp+0x28],0x1bc
   14005498b:	call   0x14002ff30
   140054990:	lea    rdx,[rbp+0x30]
   140054994:	lea    rcx,[rsi+0x30]
   140054998:	mov    rbx,rax
   14005499b:	call   0x14002ffd0
   1400549a0:	mov    QWORD PTR [rbx],rax
   1400549a3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400549a7:	jne    0x14005b3df
   1400549ad:	lea    rdx,[rbp+0x28]
   1400549b1:	lea    rcx,[rsi+0x30]
   1400549b5:	mov    DWORD PTR [rbp+0x28],0x1cd
   1400549bc:	call   0x14002ffd0
   1400549c1:	lea    rcx,[rip+0x1eb78]        # 0x140073540
   1400549c8:	lea    rdx,[rbp+0x28]
   1400549cc:	mov    DWORD PTR [rax],0x1bd
   1400549d2:	mov    DWORD PTR [rax+0x4],0x1cd
   1400549d9:	mov    QWORD PTR [rax+0x8],rcx
   1400549dd:	lea    rcx,[rsi+0x10]
   1400549e1:	mov    DWORD PTR [rbp+0x30],0x1cd
   1400549e8:	mov    DWORD PTR [rbp+0x28],0x1bd
   1400549ef:	call   0x14002ff30
   1400549f4:	lea    rdx,[rbp+0x30]
   1400549f8:	lea    rcx,[rsi+0x30]
   1400549fc:	mov    rbx,rax
   1400549ff:	call   0x14002ffd0
   140054a04:	mov    QWORD PTR [rbx],rax
   140054a07:	cmp    DWORD PTR [rsi+0x8],r12d
   140054a0b:	jne    0x14005b3df
   140054a11:	lea    rdx,[rbp+0x28]
   140054a15:	lea    rcx,[rsi+0x30]
   140054a19:	mov    DWORD PTR [rbp+0x28],0x1cf
   140054a20:	call   0x14002ffd0
   140054a25:	lea    rcx,[rip+0x1eb2c]        # 0x140073558
   140054a2c:	lea    rdx,[rbp+0x28]
   140054a30:	mov    DWORD PTR [rax],0x1be
   140054a36:	mov    DWORD PTR [rax+0x4],0x1cf
   140054a3d:	mov    QWORD PTR [rax+0x8],rcx
   140054a41:	lea    rcx,[rsi+0x10]
   140054a45:	mov    DWORD PTR [rbp+0x30],0x1cf
   140054a4c:	mov    DWORD PTR [rbp+0x28],0x1be
   140054a53:	call   0x14002ff30
   140054a58:	lea    rdx,[rbp+0x30]
   140054a5c:	lea    rcx,[rsi+0x30]
   140054a60:	mov    rbx,rax
   140054a63:	call   0x14002ffd0
   140054a68:	mov    QWORD PTR [rbx],rax
   140054a6b:	cmp    DWORD PTR [rsi+0x8],r12d
   140054a6f:	jne    0x14005b3df
   140054a75:	lea    rdx,[rbp+0x28]
   140054a79:	lea    rcx,[rsi+0x30]
   140054a7d:	mov    DWORD PTR [rbp+0x28],0x1da
   140054a84:	call   0x14002ffd0
   140054a89:	lea    rcx,[rip+0x1eae0]        # 0x140073570
   140054a90:	lea    rdx,[rbp+0x28]
   140054a94:	mov    DWORD PTR [rax],0x1bf
   140054a9a:	mov    DWORD PTR [rax+0x4],0x1da
   140054aa1:	mov    QWORD PTR [rax+0x8],rcx
   140054aa5:	lea    rcx,[rsi+0x10]
   140054aa9:	mov    DWORD PTR [rbp+0x30],0x1da
   140054ab0:	mov    DWORD PTR [rbp+0x28],0x1bf
   140054ab7:	call   0x14002ff30
   140054abc:	lea    rdx,[rbp+0x30]
   140054ac0:	lea    rcx,[rsi+0x30]
   140054ac4:	mov    rbx,rax
   140054ac7:	call   0x14002ffd0
   140054acc:	mov    QWORD PTR [rbx],rax
   140054acf:	cmp    DWORD PTR [rsi+0x8],r12d
   140054ad3:	jne    0x14005b3df
   140054ad9:	lea    rdx,[rbp+0x28]
   140054add:	lea    rcx,[rsi+0x30]
   140054ae1:	mov    DWORD PTR [rbp+0x28],0x1d6
   140054ae8:	call   0x14002ffd0
   140054aed:	lea    rcx,[rip+0x1ea9c]        # 0x140073590
   140054af4:	lea    rdx,[rbp+0x28]
   140054af8:	mov    DWORD PTR [rax],0x1c0
   140054afe:	mov    DWORD PTR [rax+0x4],0x1d6
   140054b05:	mov    QWORD PTR [rax+0x8],rcx
   140054b09:	lea    rcx,[rsi+0x10]
   140054b0d:	mov    DWORD PTR [rbp+0x30],0x1d6
   140054b14:	mov    DWORD PTR [rbp+0x28],0x1c0
   140054b1b:	call   0x14002ff30
   140054b20:	lea    rdx,[rbp+0x30]
   140054b24:	lea    rcx,[rsi+0x30]
   140054b28:	mov    rbx,rax
   140054b2b:	call   0x14002ffd0
   140054b30:	mov    QWORD PTR [rbx],rax
   140054b33:	cmp    DWORD PTR [rsi+0x8],r12d
   140054b37:	jne    0x14005b3df
   140054b3d:	lea    rdx,[rbp+0x28]
   140054b41:	lea    rcx,[rsi+0x30]
   140054b45:	mov    DWORD PTR [rbp+0x28],0x1d8
   140054b4c:	call   0x14002ffd0
   140054b51:	lea    rcx,[rip+0x1ea50]        # 0x1400735a8
   140054b58:	lea    rdx,[rbp+0x28]
   140054b5c:	mov    DWORD PTR [rax],0x1c1
   140054b62:	mov    DWORD PTR [rax+0x4],0x1d8
   140054b69:	mov    QWORD PTR [rax+0x8],rcx
   140054b6d:	lea    rcx,[rsi+0x10]
   140054b71:	mov    DWORD PTR [rbp+0x30],0x1d8
   140054b78:	mov    DWORD PTR [rbp+0x28],0x1c1
   140054b7f:	call   0x14002ff30
   140054b84:	lea    rdx,[rbp+0x30]
   140054b88:	lea    rcx,[rsi+0x30]
   140054b8c:	mov    rbx,rax
   140054b8f:	call   0x14002ffd0
   140054b94:	mov    QWORD PTR [rbx],rax
   140054b97:	cmp    DWORD PTR [rsi+0x8],r12d
   140054b9b:	jne    0x14005b3df
   140054ba1:	lea    rdx,[rbp+0x28]
   140054ba5:	lea    rcx,[rsi+0x30]
   140054ba9:	mov    DWORD PTR [rbp+0x28],0x1d7
   140054bb0:	call   0x14002ffd0
   140054bb5:	lea    rcx,[rip+0x1ea04]        # 0x1400735c0
   140054bbc:	lea    rdx,[rbp+0x28]
   140054bc0:	mov    DWORD PTR [rax],0x1c2
   140054bc6:	mov    DWORD PTR [rax+0x4],0x1d7
   140054bcd:	mov    QWORD PTR [rax+0x8],rcx
   140054bd1:	lea    rcx,[rsi+0x10]
   140054bd5:	mov    DWORD PTR [rbp+0x30],0x1d7
   140054bdc:	mov    DWORD PTR [rbp+0x28],0x1c2
   140054be3:	call   0x14002ff30
   140054be8:	lea    rdx,[rbp+0x30]
   140054bec:	lea    rcx,[rsi+0x30]
   140054bf0:	mov    rbx,rax
   140054bf3:	call   0x14002ffd0
   140054bf8:	mov    QWORD PTR [rbx],rax
   140054bfb:	cmp    DWORD PTR [rsi+0x8],r12d
   140054bff:	jne    0x14005b3df
   140054c05:	lea    rdx,[rbp+0x28]
   140054c09:	lea    rcx,[rsi+0x30]
   140054c0d:	mov    DWORD PTR [rbp+0x28],0x1d9
   140054c14:	call   0x14002ffd0
   140054c19:	lea    rcx,[rip+0x1e9b8]        # 0x1400735d8
   140054c20:	lea    rdx,[rbp+0x28]
   140054c24:	mov    DWORD PTR [rax],0x1c3
   140054c2a:	mov    DWORD PTR [rax+0x4],0x1d9
   140054c31:	mov    QWORD PTR [rax+0x8],rcx
   140054c35:	lea    rcx,[rsi+0x10]
   140054c39:	mov    DWORD PTR [rbp+0x30],0x1d9
   140054c40:	mov    DWORD PTR [rbp+0x28],0x1c3
   140054c47:	call   0x14002ff30
   140054c4c:	lea    rdx,[rbp+0x30]
   140054c50:	lea    rcx,[rsi+0x30]
   140054c54:	mov    rbx,rax
   140054c57:	call   0x14002ffd0
   140054c5c:	mov    QWORD PTR [rbx],rax
   140054c5f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054c63:	jne    0x14005b3df
   140054c69:	lea    rdx,[rbp+0x28]
   140054c6d:	lea    rcx,[rsi+0x30]
   140054c71:	mov    DWORD PTR [rbp+0x28],0x1e4
   140054c78:	call   0x14002ffd0
   140054c7d:	lea    rcx,[rip+0x1e96c]        # 0x1400735f0
   140054c84:	lea    rdx,[rbp+0x28]
   140054c88:	mov    DWORD PTR [rax],0x1c4
   140054c8e:	mov    DWORD PTR [rax+0x4],0x1e4
   140054c95:	mov    QWORD PTR [rax+0x8],rcx
   140054c99:	lea    rcx,[rsi+0x10]
   140054c9d:	mov    DWORD PTR [rbp+0x30],0x1e4
   140054ca4:	mov    DWORD PTR [rbp+0x28],0x1c4
   140054cab:	call   0x14002ff30
   140054cb0:	lea    rdx,[rbp+0x30]
   140054cb4:	lea    rcx,[rsi+0x30]
   140054cb8:	mov    rbx,rax
   140054cbb:	call   0x14002ffd0
   140054cc0:	mov    QWORD PTR [rbx],rax
   140054cc3:	cmp    DWORD PTR [rsi+0x8],r12d
   140054cc7:	jne    0x14005b3df
   140054ccd:	lea    rdx,[rbp+0x28]
   140054cd1:	lea    rcx,[rsi+0x30]
   140054cd5:	mov    DWORD PTR [rbp+0x28],0x1e0
   140054cdc:	call   0x14002ffd0
   140054ce1:	lea    rcx,[rip+0x1e928]        # 0x140073610
   140054ce8:	lea    rdx,[rbp+0x28]
   140054cec:	mov    DWORD PTR [rax],0x1c5
   140054cf2:	mov    DWORD PTR [rax+0x4],0x1e0
   140054cf9:	mov    QWORD PTR [rax+0x8],rcx
   140054cfd:	lea    rcx,[rsi+0x10]
   140054d01:	mov    DWORD PTR [rbp+0x30],0x1e0
   140054d08:	mov    DWORD PTR [rbp+0x28],0x1c5
   140054d0f:	call   0x14002ff30
   140054d14:	lea    rdx,[rbp+0x30]
   140054d18:	lea    rcx,[rsi+0x30]
   140054d1c:	mov    rbx,rax
   140054d1f:	call   0x14002ffd0
   140054d24:	mov    QWORD PTR [rbx],rax
   140054d27:	cmp    DWORD PTR [rsi+0x8],r12d
   140054d2b:	jne    0x14005b3df
   140054d31:	lea    rdx,[rbp+0x28]
   140054d35:	lea    rcx,[rsi+0x30]
   140054d39:	mov    DWORD PTR [rbp+0x28],0x1e2
   140054d40:	call   0x14002ffd0
   140054d45:	lea    rcx,[rip+0x1e8dc]        # 0x140073628
   140054d4c:	lea    rdx,[rbp+0x28]
   140054d50:	mov    DWORD PTR [rax],0x1c6
   140054d56:	mov    DWORD PTR [rax+0x4],0x1e2
   140054d5d:	mov    QWORD PTR [rax+0x8],rcx
   140054d61:	lea    rcx,[rsi+0x10]
   140054d65:	mov    DWORD PTR [rbp+0x30],0x1e2
   140054d6c:	mov    DWORD PTR [rbp+0x28],0x1c6
   140054d73:	call   0x14002ff30
   140054d78:	lea    rdx,[rbp+0x30]
   140054d7c:	lea    rcx,[rsi+0x30]
   140054d80:	mov    rbx,rax
   140054d83:	call   0x14002ffd0
   140054d88:	mov    QWORD PTR [rbx],rax
   140054d8b:	cmp    DWORD PTR [rsi+0x8],r12d
   140054d8f:	jne    0x14005b3df
   140054d95:	lea    rdx,[rbp+0x28]
   140054d99:	lea    rcx,[rsi+0x30]
   140054d9d:	mov    DWORD PTR [rbp+0x28],0x1e1
   140054da4:	call   0x14002ffd0
   140054da9:	lea    rcx,[rip+0x1e890]        # 0x140073640
   140054db0:	lea    rdx,[rbp+0x28]
   140054db4:	mov    DWORD PTR [rax],0x1c7
   140054dba:	mov    DWORD PTR [rax+0x4],0x1e1
   140054dc1:	mov    QWORD PTR [rax+0x8],rcx
   140054dc5:	lea    rcx,[rsi+0x10]
   140054dc9:	mov    DWORD PTR [rbp+0x30],0x1e1
   140054dd0:	mov    DWORD PTR [rbp+0x28],0x1c7
   140054dd7:	call   0x14002ff30
   140054ddc:	lea    rdx,[rbp+0x30]
   140054de0:	lea    rcx,[rsi+0x30]
   140054de4:	mov    rbx,rax
   140054de7:	call   0x14002ffd0
   140054dec:	mov    QWORD PTR [rbx],rax
   140054def:	cmp    DWORD PTR [rsi+0x8],r12d
   140054df3:	jne    0x14005b3df
   140054df9:	lea    rdx,[rbp+0x28]
   140054dfd:	lea    rcx,[rsi+0x30]
   140054e01:	mov    DWORD PTR [rbp+0x28],0x1e3
   140054e08:	call   0x14002ffd0
   140054e0d:	lea    rcx,[rip+0x1e844]        # 0x140073658
   140054e14:	lea    rdx,[rbp+0x28]
   140054e18:	mov    DWORD PTR [rax],0x1c8
   140054e1e:	mov    DWORD PTR [rax+0x4],0x1e3
   140054e25:	mov    QWORD PTR [rax+0x8],rcx
   140054e29:	lea    rcx,[rsi+0x10]
   140054e2d:	mov    DWORD PTR [rbp+0x30],0x1e3
   140054e34:	mov    DWORD PTR [rbp+0x28],0x1c8
   140054e3b:	call   0x14002ff30
   140054e40:	lea    rdx,[rbp+0x30]
   140054e44:	lea    rcx,[rsi+0x30]
   140054e48:	mov    rbx,rax
   140054e4b:	call   0x14002ffd0
   140054e50:	mov    QWORD PTR [rbx],rax
   140054e53:	cmp    DWORD PTR [rsi+0x8],r12d
   140054e57:	jne    0x14005b3df
   140054e5d:	lea    rdx,[rbp+0x28]
   140054e61:	lea    rcx,[rsi+0x30]
   140054e65:	mov    DWORD PTR [rbp+0x28],0x1ee
   140054e6c:	call   0x14002ffd0
   140054e71:	lea    rcx,[rip+0x1e7f8]        # 0x140073670
   140054e78:	lea    rdx,[rbp+0x28]
   140054e7c:	mov    DWORD PTR [rax],0x1c9
   140054e82:	mov    DWORD PTR [rax+0x4],0x1ee
   140054e89:	mov    QWORD PTR [rax+0x8],rcx
   140054e8d:	lea    rcx,[rsi+0x10]
   140054e91:	mov    DWORD PTR [rbp+0x30],0x1ee
   140054e98:	mov    DWORD PTR [rbp+0x28],0x1c9
   140054e9f:	call   0x14002ff30
   140054ea4:	lea    rdx,[rbp+0x30]
   140054ea8:	lea    rcx,[rsi+0x30]
   140054eac:	mov    rbx,rax
   140054eaf:	call   0x14002ffd0
   140054eb4:	mov    QWORD PTR [rbx],rax
   140054eb7:	cmp    DWORD PTR [rsi+0x8],r12d
   140054ebb:	jne    0x14005b3df
   140054ec1:	lea    rdx,[rbp+0x28]
   140054ec5:	lea    rcx,[rsi+0x30]
   140054ec9:	mov    DWORD PTR [rbp+0x28],0x1ea
   140054ed0:	call   0x14002ffd0
   140054ed5:	lea    rcx,[rip+0x1e7b4]        # 0x140073690
   140054edc:	lea    rdx,[rbp+0x28]
   140054ee0:	mov    DWORD PTR [rax],0x1ca
   140054ee6:	mov    DWORD PTR [rax+0x4],0x1ea
   140054eed:	mov    QWORD PTR [rax+0x8],rcx
   140054ef1:	lea    rcx,[rsi+0x10]
   140054ef5:	mov    DWORD PTR [rbp+0x30],0x1ea
   140054efc:	mov    DWORD PTR [rbp+0x28],0x1ca
   140054f03:	call   0x14002ff30
   140054f08:	lea    rdx,[rbp+0x30]
   140054f0c:	lea    rcx,[rsi+0x30]
   140054f10:	mov    rbx,rax
   140054f13:	call   0x14002ffd0
   140054f18:	mov    QWORD PTR [rbx],rax
   140054f1b:	cmp    DWORD PTR [rsi+0x8],r12d
   140054f1f:	jne    0x14005b3df
   140054f25:	lea    rdx,[rbp+0x28]
   140054f29:	lea    rcx,[rsi+0x30]
   140054f2d:	mov    DWORD PTR [rbp+0x28],0x1ec
   140054f34:	call   0x14002ffd0
   140054f39:	lea    rcx,[rip+0x1e768]        # 0x1400736a8
   140054f40:	lea    rdx,[rbp+0x28]
   140054f44:	mov    DWORD PTR [rax],0x1cb
   140054f4a:	mov    DWORD PTR [rax+0x4],0x1ec
   140054f51:	mov    QWORD PTR [rax+0x8],rcx
   140054f55:	lea    rcx,[rsi+0x10]
   140054f59:	mov    DWORD PTR [rbp+0x30],0x1ec
   140054f60:	mov    DWORD PTR [rbp+0x28],0x1cb
   140054f67:	call   0x14002ff30
   140054f6c:	lea    rdx,[rbp+0x30]
   140054f70:	lea    rcx,[rsi+0x30]
   140054f74:	mov    rbx,rax
   140054f77:	call   0x14002ffd0
   140054f7c:	mov    QWORD PTR [rbx],rax
   140054f7f:	cmp    DWORD PTR [rsi+0x8],r12d
   140054f83:	jne    0x14005b3df
   140054f89:	lea    rdx,[rbp+0x28]
   140054f8d:	lea    rcx,[rsi+0x30]
   140054f91:	mov    DWORD PTR [rbp+0x28],0x1eb
   140054f98:	call   0x14002ffd0
   140054f9d:	lea    rcx,[rip+0x1e71c]        # 0x1400736c0
   140054fa4:	lea    rdx,[rbp+0x28]
   140054fa8:	mov    DWORD PTR [rax],0x1cc
   140054fae:	mov    DWORD PTR [rax+0x4],0x1eb
   140054fb5:	mov    QWORD PTR [rax+0x8],rcx
   140054fb9:	lea    rcx,[rsi+0x10]
   140054fbd:	mov    DWORD PTR [rbp+0x30],0x1eb
   140054fc4:	mov    DWORD PTR [rbp+0x28],0x1cc
   140054fcb:	call   0x14002ff30
   140054fd0:	lea    rdx,[rbp+0x30]
   140054fd4:	lea    rcx,[rsi+0x30]
   140054fd8:	mov    rbx,rax
   140054fdb:	call   0x14002ffd0
   140054fe0:	mov    QWORD PTR [rbx],rax
   140054fe3:	cmp    DWORD PTR [rsi+0x8],r12d
   140054fe7:	jne    0x14005b3df
   140054fed:	lea    rdx,[rbp+0x28]
   140054ff1:	lea    rcx,[rsi+0x30]
   140054ff5:	mov    DWORD PTR [rbp+0x28],0x1ed
   140054ffc:	call   0x14002ffd0
   140055001:	lea    rcx,[rip+0x1e6d0]        # 0x1400736d8
   140055008:	lea    rdx,[rbp+0x28]
   14005500c:	mov    DWORD PTR [rax],0x1cd
   140055012:	mov    DWORD PTR [rax+0x4],0x1ed
   140055019:	mov    QWORD PTR [rax+0x8],rcx
   14005501d:	lea    rcx,[rsi+0x10]
   140055021:	mov    DWORD PTR [rbp+0x30],0x1ed
   140055028:	mov    DWORD PTR [rbp+0x28],0x1cd
   14005502f:	call   0x14002ff30
   140055034:	lea    rdx,[rbp+0x30]
   140055038:	lea    rcx,[rsi+0x30]
   14005503c:	mov    rbx,rax
   14005503f:	call   0x14002ffd0
   140055044:	mov    QWORD PTR [rbx],rax
   140055047:	cmp    DWORD PTR [rsi+0x8],r12d
   14005504b:	jne    0x14005b3df
   140055051:	lea    rdx,[rbp+0x28]
   140055055:	lea    rcx,[rsi+0x30]
   140055059:	mov    DWORD PTR [rbp+0x28],0x1f8
   140055060:	call   0x14002ffd0
   140055065:	lea    rcx,[rip+0x1e684]        # 0x1400736f0
   14005506c:	lea    rdx,[rbp+0x28]
   140055070:	mov    DWORD PTR [rax],0x1ce
   140055076:	mov    DWORD PTR [rax+0x4],0x1f8
   14005507d:	mov    QWORD PTR [rax+0x8],rcx
   140055081:	lea    rcx,[rsi+0x10]
   140055085:	mov    DWORD PTR [rbp+0x30],0x1f8
   14005508c:	mov    DWORD PTR [rbp+0x28],0x1ce
   140055093:	call   0x14002ff30
   140055098:	lea    rdx,[rbp+0x30]
   14005509c:	lea    rcx,[rsi+0x30]
   1400550a0:	mov    rbx,rax
   1400550a3:	call   0x14002ffd0
   1400550a8:	mov    QWORD PTR [rbx],rax
   1400550ab:	cmp    DWORD PTR [rsi+0x8],r12d
   1400550af:	jne    0x14005b3df
   1400550b5:	lea    rdx,[rbp+0x28]
   1400550b9:	lea    rcx,[rsi+0x30]
   1400550bd:	mov    DWORD PTR [rbp+0x28],0x1f4
   1400550c4:	call   0x14002ffd0
   1400550c9:	lea    rcx,[rip+0x1e640]        # 0x140073710
   1400550d0:	lea    rdx,[rbp+0x28]
   1400550d4:	mov    DWORD PTR [rax],0x1cf
   1400550da:	mov    DWORD PTR [rax+0x4],0x1f4
   1400550e1:	mov    QWORD PTR [rax+0x8],rcx
   1400550e5:	lea    rcx,[rsi+0x10]
   1400550e9:	mov    DWORD PTR [rbp+0x30],0x1f4
   1400550f0:	mov    DWORD PTR [rbp+0x28],0x1cf
   1400550f7:	call   0x14002ff30
   1400550fc:	lea    rdx,[rbp+0x30]
   140055100:	lea    rcx,[rsi+0x30]
   140055104:	mov    rbx,rax
   140055107:	call   0x14002ffd0
   14005510c:	mov    QWORD PTR [rbx],rax
   14005510f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055113:	jne    0x14005b3df
   140055119:	lea    rdx,[rbp+0x28]
   14005511d:	lea    rcx,[rsi+0x30]
   140055121:	mov    DWORD PTR [rbp+0x28],0x1f6
   140055128:	call   0x14002ffd0
   14005512d:	lea    rcx,[rip+0x1e5f4]        # 0x140073728
   140055134:	lea    rdx,[rbp+0x28]
   140055138:	mov    DWORD PTR [rax],0x1d0
   14005513e:	mov    DWORD PTR [rax+0x4],0x1f6
   140055145:	mov    QWORD PTR [rax+0x8],rcx
   140055149:	lea    rcx,[rsi+0x10]
   14005514d:	mov    DWORD PTR [rbp+0x30],0x1f6
   140055154:	mov    DWORD PTR [rbp+0x28],0x1d0
   14005515b:	call   0x14002ff30
   140055160:	lea    rdx,[rbp+0x30]
   140055164:	lea    rcx,[rsi+0x30]
   140055168:	mov    rbx,rax
   14005516b:	call   0x14002ffd0
   140055170:	mov    QWORD PTR [rbx],rax
   140055173:	cmp    DWORD PTR [rsi+0x8],r12d
   140055177:	jne    0x14005b3df
   14005517d:	lea    rdx,[rbp+0x28]
   140055181:	lea    rcx,[rsi+0x30]
   140055185:	mov    DWORD PTR [rbp+0x28],0x1f5
   14005518c:	call   0x14002ffd0
   140055191:	lea    rcx,[rip+0x1e5a8]        # 0x140073740
   140055198:	lea    rdx,[rbp+0x28]
   14005519c:	mov    DWORD PTR [rax],0x1d1
   1400551a2:	mov    DWORD PTR [rax+0x4],0x1f5
   1400551a9:	mov    QWORD PTR [rax+0x8],rcx
   1400551ad:	lea    rcx,[rsi+0x10]
   1400551b1:	mov    DWORD PTR [rbp+0x30],0x1f5
   1400551b8:	mov    DWORD PTR [rbp+0x28],0x1d1
   1400551bf:	call   0x14002ff30
   1400551c4:	lea    rdx,[rbp+0x30]
   1400551c8:	lea    rcx,[rsi+0x30]
   1400551cc:	mov    rbx,rax
   1400551cf:	call   0x14002ffd0
   1400551d4:	mov    QWORD PTR [rbx],rax
   1400551d7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400551db:	jne    0x14005b3df
   1400551e1:	lea    rdx,[rbp+0x28]
   1400551e5:	lea    rcx,[rsi+0x30]
   1400551e9:	mov    DWORD PTR [rbp+0x28],0x1f7
   1400551f0:	call   0x14002ffd0
   1400551f5:	lea    rcx,[rip+0x1e55c]        # 0x140073758
   1400551fc:	lea    rdx,[rbp+0x28]
   140055200:	mov    DWORD PTR [rax],0x1d2
   140055206:	mov    DWORD PTR [rax+0x4],0x1f7
   14005520d:	mov    QWORD PTR [rax+0x8],rcx
   140055211:	lea    rcx,[rsi+0x10]
   140055215:	mov    DWORD PTR [rbp+0x30],0x1f7
   14005521c:	mov    DWORD PTR [rbp+0x28],0x1d2
   140055223:	call   0x14002ff30
   140055228:	lea    rdx,[rbp+0x30]
   14005522c:	lea    rcx,[rsi+0x30]
   140055230:	mov    rbx,rax
   140055233:	call   0x14002ffd0
   140055238:	mov    QWORD PTR [rbx],rax
   14005523b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005523f:	jne    0x14005b3df
   140055245:	lea    rdx,[rbp+0x28]
   140055249:	lea    rcx,[rsi+0x30]
   14005524d:	mov    DWORD PTR [rbp+0x28],0x202
   140055254:	call   0x14002ffd0
   140055259:	lea    rcx,[rip+0x1e510]        # 0x140073770
   140055260:	lea    rdx,[rbp+0x28]
   140055264:	mov    DWORD PTR [rax],0x1d3
   14005526a:	mov    DWORD PTR [rax+0x4],0x202
   140055271:	mov    QWORD PTR [rax+0x8],rcx
   140055275:	lea    rcx,[rsi+0x10]
   140055279:	mov    DWORD PTR [rbp+0x30],0x202
   140055280:	mov    DWORD PTR [rbp+0x28],0x1d3
   140055287:	call   0x14002ff30
   14005528c:	lea    rdx,[rbp+0x30]
   140055290:	lea    rcx,[rsi+0x30]
   140055294:	mov    rbx,rax
   140055297:	call   0x14002ffd0
   14005529c:	mov    QWORD PTR [rbx],rax
   14005529f:	cmp    DWORD PTR [rsi+0x8],r12d
   1400552a3:	jne    0x14005b3df
   1400552a9:	lea    rdx,[rbp+0x28]
   1400552ad:	lea    rcx,[rsi+0x30]
   1400552b1:	mov    DWORD PTR [rbp+0x28],0x1fe
   1400552b8:	call   0x14002ffd0
   1400552bd:	lea    rcx,[rip+0x1e4cc]        # 0x140073790
   1400552c4:	lea    rdx,[rbp+0x28]
   1400552c8:	mov    DWORD PTR [rax],0x1d4
   1400552ce:	mov    DWORD PTR [rax+0x4],0x1fe
   1400552d5:	mov    QWORD PTR [rax+0x8],rcx
   1400552d9:	lea    rcx,[rsi+0x10]
   1400552dd:	mov    DWORD PTR [rbp+0x30],0x1fe
   1400552e4:	mov    DWORD PTR [rbp+0x28],0x1d4
   1400552eb:	call   0x14002ff30
   1400552f0:	lea    rdx,[rbp+0x30]
   1400552f4:	lea    rcx,[rsi+0x30]
   1400552f8:	mov    rbx,rax
   1400552fb:	call   0x14002ffd0
   140055300:	mov    QWORD PTR [rbx],rax
   140055303:	cmp    DWORD PTR [rsi+0x8],r12d
   140055307:	jne    0x14005b3df
   14005530d:	lea    rdx,[rbp+0x28]
   140055311:	lea    rcx,[rsi+0x30]
   140055315:	mov    DWORD PTR [rbp+0x28],0x200
   14005531c:	call   0x14002ffd0
   140055321:	lea    rcx,[rip+0x1e480]        # 0x1400737a8
   140055328:	lea    rdx,[rbp+0x28]
   14005532c:	mov    DWORD PTR [rax],0x1d5
   140055332:	mov    DWORD PTR [rax+0x4],0x200
   140055339:	mov    QWORD PTR [rax+0x8],rcx
   14005533d:	lea    rcx,[rsi+0x10]
   140055341:	mov    DWORD PTR [rbp+0x30],0x200
   140055348:	mov    DWORD PTR [rbp+0x28],0x1d5
   14005534f:	call   0x14002ff30
   140055354:	lea    rdx,[rbp+0x30]
   140055358:	lea    rcx,[rsi+0x30]
   14005535c:	mov    rbx,rax
   14005535f:	call   0x14002ffd0
   140055364:	mov    QWORD PTR [rbx],rax
   140055367:	cmp    DWORD PTR [rsi+0x8],r12d
   14005536b:	jne    0x14005b3df
   140055371:	lea    rdx,[rbp+0x28]
   140055375:	lea    rcx,[rsi+0x30]
   140055379:	mov    DWORD PTR [rbp+0x28],0x1ff
   140055380:	call   0x14002ffd0
   140055385:	lea    rcx,[rip+0x1e434]        # 0x1400737c0
   14005538c:	lea    rdx,[rbp+0x28]
   140055390:	mov    DWORD PTR [rax],0x1d6
   140055396:	mov    DWORD PTR [rax+0x4],0x1ff
   14005539d:	mov    QWORD PTR [rax+0x8],rcx
   1400553a1:	lea    rcx,[rsi+0x10]
   1400553a5:	mov    DWORD PTR [rbp+0x30],0x1ff
   1400553ac:	mov    DWORD PTR [rbp+0x28],0x1d6
   1400553b3:	call   0x14002ff30
   1400553b8:	lea    rdx,[rbp+0x30]
   1400553bc:	lea    rcx,[rsi+0x30]
   1400553c0:	mov    rbx,rax
   1400553c3:	call   0x14002ffd0
   1400553c8:	mov    QWORD PTR [rbx],rax
   1400553cb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400553cf:	jne    0x14005b3df
   1400553d5:	lea    rdx,[rbp+0x28]
   1400553d9:	lea    rcx,[rsi+0x30]
   1400553dd:	mov    DWORD PTR [rbp+0x28],0x201
   1400553e4:	call   0x14002ffd0
   1400553e9:	lea    rcx,[rip+0x1e3e8]        # 0x1400737d8
   1400553f0:	lea    rdx,[rbp+0x28]
   1400553f4:	mov    DWORD PTR [rax],0x1d7
   1400553fa:	mov    DWORD PTR [rax+0x4],0x201
   140055401:	mov    QWORD PTR [rax+0x8],rcx
   140055405:	lea    rcx,[rsi+0x10]
   140055409:	mov    DWORD PTR [rbp+0x30],0x201
   140055410:	mov    DWORD PTR [rbp+0x28],0x1d7
   140055417:	call   0x14002ff30
   14005541c:	lea    rdx,[rbp+0x30]
   140055420:	lea    rcx,[rsi+0x30]
   140055424:	mov    rbx,rax
   140055427:	call   0x14002ffd0
   14005542c:	mov    QWORD PTR [rbx],rax
   14005542f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055433:	jne    0x14005b3df
   140055439:	lea    rdx,[rbp+0x28]
   14005543d:	lea    rcx,[rsi+0x30]
   140055441:	mov    DWORD PTR [rbp+0x28],0x20c
   140055448:	call   0x14002ffd0
   14005544d:	lea    rcx,[rip+0x1e39c]        # 0x1400737f0
   140055454:	lea    rdx,[rbp+0x28]
   140055458:	mov    DWORD PTR [rax],0x1d8
   14005545e:	mov    DWORD PTR [rax+0x4],0x20c
   140055465:	mov    QWORD PTR [rax+0x8],rcx
   140055469:	lea    rcx,[rsi+0x10]
   14005546d:	mov    DWORD PTR [rbp+0x30],0x20c
   140055474:	mov    DWORD PTR [rbp+0x28],0x1d8
   14005547b:	call   0x14002ff30
   140055480:	lea    rdx,[rbp+0x30]
   140055484:	lea    rcx,[rsi+0x30]
   140055488:	mov    rbx,rax
   14005548b:	call   0x14002ffd0
   140055490:	mov    QWORD PTR [rbx],rax
   140055493:	cmp    DWORD PTR [rsi+0x8],r12d
   140055497:	jne    0x14005b3df
   14005549d:	lea    rdx,[rbp+0x28]
   1400554a1:	lea    rcx,[rsi+0x30]
   1400554a5:	mov    DWORD PTR [rbp+0x28],0x208
   1400554ac:	call   0x14002ffd0
   1400554b1:	lea    rcx,[rip+0x1e358]        # 0x140073810
   1400554b8:	lea    rdx,[rbp+0x28]
   1400554bc:	mov    DWORD PTR [rax],0x1d9
   1400554c2:	mov    DWORD PTR [rax+0x4],0x208
   1400554c9:	mov    QWORD PTR [rax+0x8],rcx
   1400554cd:	lea    rcx,[rsi+0x10]
   1400554d1:	mov    DWORD PTR [rbp+0x30],0x208
   1400554d8:	mov    DWORD PTR [rbp+0x28],0x1d9
   1400554df:	call   0x14002ff30
   1400554e4:	lea    rdx,[rbp+0x30]
   1400554e8:	lea    rcx,[rsi+0x30]
   1400554ec:	mov    rbx,rax
   1400554ef:	call   0x14002ffd0
   1400554f4:	mov    QWORD PTR [rbx],rax
   1400554f7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400554fb:	jne    0x14005b3df
   140055501:	lea    rdx,[rbp+0x28]
   140055505:	lea    rcx,[rsi+0x30]
   140055509:	mov    DWORD PTR [rbp+0x28],0x20a
   140055510:	call   0x14002ffd0
   140055515:	lea    rcx,[rip+0x1e30c]        # 0x140073828
   14005551c:	lea    rdx,[rbp+0x28]
   140055520:	mov    DWORD PTR [rax],0x1da
   140055526:	mov    DWORD PTR [rax+0x4],0x20a
   14005552d:	mov    QWORD PTR [rax+0x8],rcx
   140055531:	lea    rcx,[rsi+0x10]
   140055535:	mov    DWORD PTR [rbp+0x30],0x20a
   14005553c:	mov    DWORD PTR [rbp+0x28],0x1da
   140055543:	call   0x14002ff30
   140055548:	lea    rdx,[rbp+0x30]
   14005554c:	lea    rcx,[rsi+0x30]
   140055550:	mov    rbx,rax
   140055553:	call   0x14002ffd0
   140055558:	mov    QWORD PTR [rbx],rax
   14005555b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005555f:	jne    0x14005b3df
   140055565:	lea    rdx,[rbp+0x28]
   140055569:	lea    rcx,[rsi+0x30]
   14005556d:	mov    DWORD PTR [rbp+0x28],0x209
   140055574:	call   0x14002ffd0
   140055579:	lea    rcx,[rip+0x1e2c0]        # 0x140073840
   140055580:	lea    rdx,[rbp+0x28]
   140055584:	mov    DWORD PTR [rax],0x1db
   14005558a:	mov    DWORD PTR [rax+0x4],0x209
   140055591:	mov    QWORD PTR [rax+0x8],rcx
   140055595:	lea    rcx,[rsi+0x10]
   140055599:	mov    DWORD PTR [rbp+0x30],0x209
   1400555a0:	mov    DWORD PTR [rbp+0x28],0x1db
   1400555a7:	call   0x14002ff30
   1400555ac:	lea    rdx,[rbp+0x30]
   1400555b0:	lea    rcx,[rsi+0x30]
   1400555b4:	mov    rbx,rax
   1400555b7:	call   0x14002ffd0
   1400555bc:	mov    QWORD PTR [rbx],rax
   1400555bf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400555c3:	jne    0x14005b3df
   1400555c9:	lea    rdx,[rbp+0x28]
   1400555cd:	lea    rcx,[rsi+0x30]
   1400555d1:	mov    DWORD PTR [rbp+0x28],0x20b
   1400555d8:	call   0x14002ffd0
   1400555dd:	lea    rcx,[rip+0x1e274]        # 0x140073858
   1400555e4:	lea    rdx,[rbp+0x28]
   1400555e8:	mov    DWORD PTR [rax],0x1dc
   1400555ee:	mov    DWORD PTR [rax+0x4],0x20b
   1400555f5:	mov    QWORD PTR [rax+0x8],rcx
   1400555f9:	lea    rcx,[rsi+0x10]
   1400555fd:	mov    DWORD PTR [rbp+0x30],0x20b
   140055604:	mov    DWORD PTR [rbp+0x28],0x1dc
   14005560b:	call   0x14002ff30
   140055610:	lea    rdx,[rbp+0x30]
   140055614:	lea    rcx,[rsi+0x30]
   140055618:	mov    rbx,rax
   14005561b:	call   0x14002ffd0
   140055620:	mov    QWORD PTR [rbx],rax
   140055623:	cmp    DWORD PTR [rsi+0x8],r12d
   140055627:	jne    0x14005b3df
   14005562d:	lea    rdx,[rbp+0x28]
   140055631:	lea    rcx,[rsi+0x30]
   140055635:	mov    DWORD PTR [rbp+0x28],0x216
   14005563c:	call   0x14002ffd0
   140055641:	lea    rcx,[rip+0x1e228]        # 0x140073870
   140055648:	lea    rdx,[rbp+0x28]
   14005564c:	mov    DWORD PTR [rax],0x1dd
   140055652:	mov    DWORD PTR [rax+0x4],0x216
   140055659:	mov    QWORD PTR [rax+0x8],rcx
   14005565d:	lea    rcx,[rsi+0x10]
   140055661:	mov    DWORD PTR [rbp+0x30],0x216
   140055668:	mov    DWORD PTR [rbp+0x28],0x1dd
   14005566f:	call   0x14002ff30
   140055674:	lea    rdx,[rbp+0x30]
   140055678:	lea    rcx,[rsi+0x30]
   14005567c:	mov    rbx,rax
   14005567f:	call   0x14002ffd0
   140055684:	mov    QWORD PTR [rbx],rax
   140055687:	cmp    DWORD PTR [rsi+0x8],r12d
   14005568b:	jne    0x14005b3df
   140055691:	lea    rdx,[rbp+0x28]
   140055695:	lea    rcx,[rsi+0x30]
   140055699:	mov    DWORD PTR [rbp+0x28],0x212
   1400556a0:	call   0x14002ffd0
   1400556a5:	lea    rcx,[rip+0x1e1e4]        # 0x140073890
   1400556ac:	lea    rdx,[rbp+0x28]
   1400556b0:	mov    DWORD PTR [rax],0x1de
   1400556b6:	mov    DWORD PTR [rax+0x4],0x212
   1400556bd:	mov    QWORD PTR [rax+0x8],rcx
   1400556c1:	lea    rcx,[rsi+0x10]
   1400556c5:	mov    DWORD PTR [rbp+0x30],0x212
   1400556cc:	mov    DWORD PTR [rbp+0x28],0x1de
   1400556d3:	call   0x14002ff30
   1400556d8:	lea    rdx,[rbp+0x30]
   1400556dc:	lea    rcx,[rsi+0x30]
   1400556e0:	mov    rbx,rax
   1400556e3:	call   0x14002ffd0
   1400556e8:	mov    QWORD PTR [rbx],rax
   1400556eb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400556ef:	jne    0x14005b3df
   1400556f5:	lea    rdx,[rbp+0x28]
   1400556f9:	lea    rcx,[rsi+0x30]
   1400556fd:	mov    DWORD PTR [rbp+0x28],0x214
   140055704:	call   0x14002ffd0
   140055709:	lea    rcx,[rip+0x1e198]        # 0x1400738a8
   140055710:	lea    rdx,[rbp+0x28]
   140055714:	mov    DWORD PTR [rax],0x1df
   14005571a:	mov    DWORD PTR [rax+0x4],0x214
   140055721:	mov    QWORD PTR [rax+0x8],rcx
   140055725:	lea    rcx,[rsi+0x10]
   140055729:	mov    DWORD PTR [rbp+0x30],0x214
   140055730:	mov    DWORD PTR [rbp+0x28],0x1df
   140055737:	call   0x14002ff30
   14005573c:	lea    rdx,[rbp+0x30]
   140055740:	lea    rcx,[rsi+0x30]
   140055744:	mov    rbx,rax
   140055747:	call   0x14002ffd0
   14005574c:	mov    QWORD PTR [rbx],rax
   14005574f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055753:	jne    0x14005b3df
   140055759:	lea    rdx,[rbp+0x28]
   14005575d:	lea    rcx,[rsi+0x30]
   140055761:	mov    DWORD PTR [rbp+0x28],0x213
   140055768:	call   0x14002ffd0
   14005576d:	lea    rcx,[rip+0x1e14c]        # 0x1400738c0
   140055774:	lea    rdx,[rbp+0x28]
   140055778:	mov    DWORD PTR [rax],0x1e0
   14005577e:	mov    DWORD PTR [rax+0x4],0x213
   140055785:	mov    QWORD PTR [rax+0x8],rcx
   140055789:	lea    rcx,[rsi+0x10]
   14005578d:	mov    DWORD PTR [rbp+0x30],0x213
   140055794:	mov    DWORD PTR [rbp+0x28],0x1e0
   14005579b:	call   0x14002ff30
   1400557a0:	lea    rdx,[rbp+0x30]
   1400557a4:	lea    rcx,[rsi+0x30]
   1400557a8:	mov    rbx,rax
   1400557ab:	call   0x14002ffd0
   1400557b0:	mov    QWORD PTR [rbx],rax
   1400557b3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400557b7:	jne    0x14005b3df
   1400557bd:	lea    rdx,[rbp+0x28]
   1400557c1:	lea    rcx,[rsi+0x30]
   1400557c5:	mov    DWORD PTR [rbp+0x28],0x215
   1400557cc:	call   0x14002ffd0
   1400557d1:	lea    rcx,[rip+0x1e100]        # 0x1400738d8
   1400557d8:	lea    rdx,[rbp+0x28]
   1400557dc:	mov    DWORD PTR [rax],0x1e1
   1400557e2:	mov    DWORD PTR [rax+0x4],0x215
   1400557e9:	mov    QWORD PTR [rax+0x8],rcx
   1400557ed:	lea    rcx,[rsi+0x10]
   1400557f1:	mov    DWORD PTR [rbp+0x30],0x215
   1400557f8:	mov    DWORD PTR [rbp+0x28],0x1e1
   1400557ff:	call   0x14002ff30
   140055804:	lea    rdx,[rbp+0x30]
   140055808:	lea    rcx,[rsi+0x30]
   14005580c:	mov    rbx,rax
   14005580f:	call   0x14002ffd0
   140055814:	mov    QWORD PTR [rbx],rax
   140055817:	cmp    DWORD PTR [rsi+0x8],r12d
   14005581b:	jne    0x14005b3df
   140055821:	lea    rdx,[rbp+0x28]
   140055825:	lea    rcx,[rsi+0x30]
   140055829:	mov    DWORD PTR [rbp+0x28],0x3a8
   140055830:	call   0x14002ffd0
   140055835:	lea    rcx,[rip+0x1e0b4]        # 0x1400738f0
   14005583c:	lea    rdx,[rbp+0x28]
   140055840:	mov    DWORD PTR [rax],0x1e2
   140055846:	mov    DWORD PTR [rax+0x4],0x3a8
   14005584d:	mov    QWORD PTR [rax+0x8],rcx
   140055851:	lea    rcx,[rsi+0x10]
   140055855:	mov    DWORD PTR [rbp+0x30],0x3a8
   14005585c:	mov    DWORD PTR [rbp+0x28],0x1e2
   140055863:	call   0x14002ff30
   140055868:	lea    rdx,[rbp+0x30]
   14005586c:	lea    rcx,[rsi+0x30]
   140055870:	mov    rbx,rax
   140055873:	call   0x14002ffd0
   140055878:	mov    QWORD PTR [rbx],rax
   14005587b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005587f:	jne    0x14005b3df
   140055885:	lea    rdx,[rbp+0x28]
   140055889:	lea    rcx,[rsi+0x30]
   14005588d:	mov    DWORD PTR [rbp+0x28],0x3a9
   140055894:	call   0x14002ffd0
   140055899:	lea    rcx,[rip+0x1e070]        # 0x140073910
   1400558a0:	lea    rdx,[rbp+0x28]
   1400558a4:	mov    DWORD PTR [rax],0x1e3
   1400558aa:	mov    DWORD PTR [rax+0x4],0x3a9
   1400558b1:	mov    QWORD PTR [rax+0x8],rcx
   1400558b5:	lea    rcx,[rsi+0x10]
   1400558b9:	mov    DWORD PTR [rbp+0x30],0x3a9
   1400558c0:	mov    DWORD PTR [rbp+0x28],0x1e3
   1400558c7:	call   0x14002ff30
   1400558cc:	lea    rdx,[rbp+0x30]
   1400558d0:	lea    rcx,[rsi+0x30]
   1400558d4:	mov    rbx,rax
   1400558d7:	call   0x14002ffd0
   1400558dc:	mov    QWORD PTR [rbx],rax
   1400558df:	cmp    DWORD PTR [rsi+0x8],r12d
   1400558e3:	jne    0x14005b3df
   1400558e9:	lea    rdx,[rbp+0x28]
   1400558ed:	lea    rcx,[rsi+0x30]
   1400558f1:	mov    DWORD PTR [rbp+0x28],0x3aa
   1400558f8:	call   0x14002ffd0
   1400558fd:	lea    rcx,[rip+0x1e02c]        # 0x140073930
   140055904:	lea    rdx,[rbp+0x28]
   140055908:	mov    DWORD PTR [rax],0x1e4
   14005590e:	mov    DWORD PTR [rax+0x4],0x3aa
   140055915:	mov    QWORD PTR [rax+0x8],rcx
   140055919:	lea    rcx,[rsi+0x10]
   14005591d:	mov    DWORD PTR [rbp+0x30],0x3aa
   140055924:	mov    DWORD PTR [rbp+0x28],0x1e4
   14005592b:	call   0x14002ff30
   140055930:	lea    rdx,[rbp+0x30]
   140055934:	lea    rcx,[rsi+0x30]
   140055938:	mov    rbx,rax
   14005593b:	call   0x14002ffd0
   140055940:	mov    QWORD PTR [rbx],rax
   140055943:	cmp    DWORD PTR [rsi+0x8],r12d
   140055947:	jne    0x14005b3df
   14005594d:	lea    rdx,[rbp+0x28]
   140055951:	lea    rcx,[rsi+0x30]
   140055955:	mov    DWORD PTR [rbp+0x28],0x3ab
   14005595c:	call   0x14002ffd0
   140055961:	lea    rcx,[rip+0x1dff0]        # 0x140073958
   140055968:	lea    rdx,[rbp+0x28]
   14005596c:	mov    DWORD PTR [rax],0xffffffff
   140055972:	mov    DWORD PTR [rax+0x4],0x3ab
   140055979:	mov    QWORD PTR [rax+0x8],rcx
   14005597d:	lea    rcx,[rsi+0x10]
   140055981:	mov    DWORD PTR [rbp+0x30],0x3ab
   140055988:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14005598f:	call   0x14002ff30
   140055994:	lea    rdx,[rbp+0x30]
   140055998:	lea    rcx,[rsi+0x30]
   14005599c:	mov    rbx,rax
   14005599f:	call   0x14002ffd0
   1400559a4:	mov    QWORD PTR [rbx],rax
   1400559a7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400559ab:	jne    0x14005b3df
   1400559b1:	lea    rdx,[rbp+0x28]
   1400559b5:	lea    rcx,[rsi+0x30]
   1400559b9:	mov    DWORD PTR [rbp+0x28],0x3ac
   1400559c0:	call   0x14002ffd0
   1400559c5:	lea    rcx,[rip+0x1df9c]        # 0x140073968
   1400559cc:	lea    rdx,[rbp+0x28]
   1400559d0:	mov    DWORD PTR [rax],0x1e6
   1400559d6:	mov    DWORD PTR [rax+0x4],0x3ac
   1400559dd:	mov    QWORD PTR [rax+0x8],rcx
   1400559e1:	lea    rcx,[rsi+0x10]
   1400559e5:	mov    DWORD PTR [rbp+0x30],0x3ac
   1400559ec:	mov    DWORD PTR [rbp+0x28],0x1e6
   1400559f3:	call   0x14002ff30
   1400559f8:	lea    rdx,[rbp+0x30]
   1400559fc:	lea    rcx,[rsi+0x30]
   140055a00:	mov    rbx,rax
   140055a03:	call   0x14002ffd0
   140055a08:	mov    QWORD PTR [rbx],rax
   140055a0b:	cmp    DWORD PTR [rsi+0x8],r12d
   140055a0f:	jne    0x14005b3df
   140055a15:	lea    rdx,[rbp+0x28]
   140055a19:	lea    rcx,[rsi+0x30]
   140055a1d:	mov    DWORD PTR [rbp+0x28],0x3ad
   140055a24:	call   0x14002ffd0
   140055a29:	lea    rcx,[rip+0x1df50]        # 0x140073980
   140055a30:	lea    rdx,[rbp+0x28]
   140055a34:	mov    DWORD PTR [rax],0x1e7
   140055a3a:	mov    DWORD PTR [rax+0x4],0x3ad
   140055a41:	mov    QWORD PTR [rax+0x8],rcx
   140055a45:	lea    rcx,[rsi+0x10]
   140055a49:	mov    DWORD PTR [rbp+0x30],0x3ad
   140055a50:	mov    DWORD PTR [rbp+0x28],0x1e7
   140055a57:	call   0x14002ff30
   140055a5c:	lea    rdx,[rbp+0x30]
   140055a60:	lea    rcx,[rsi+0x30]
   140055a64:	mov    rbx,rax
   140055a67:	call   0x14002ffd0
   140055a6c:	mov    QWORD PTR [rbx],rax
   140055a6f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055a73:	jne    0x14005b3df
   140055a79:	lea    rdx,[rbp+0x28]
   140055a7d:	lea    rcx,[rsi+0x30]
   140055a81:	mov    DWORD PTR [rbp+0x28],0x3ae
   140055a88:	call   0x14002ffd0
   140055a8d:	lea    rcx,[rip+0x1df04]        # 0x140073998
   140055a94:	lea    rdx,[rbp+0x28]
   140055a98:	mov    DWORD PTR [rax],0x1e8
   140055a9e:	mov    DWORD PTR [rax+0x4],0x3ae
   140055aa5:	mov    QWORD PTR [rax+0x8],rcx
   140055aa9:	lea    rcx,[rsi+0x10]
   140055aad:	mov    DWORD PTR [rbp+0x30],0x3ae
   140055ab4:	mov    DWORD PTR [rbp+0x28],0x1e8
   140055abb:	call   0x14002ff30
   140055ac0:	lea    rdx,[rbp+0x30]
   140055ac4:	lea    rcx,[rsi+0x30]
   140055ac8:	mov    rbx,rax
   140055acb:	call   0x14002ffd0
   140055ad0:	mov    QWORD PTR [rbx],rax
   140055ad3:	cmp    DWORD PTR [rsi+0x8],r12d
   140055ad7:	jne    0x14005b3df
   140055add:	lea    rdx,[rbp+0x28]
   140055ae1:	lea    rcx,[rsi+0x30]
   140055ae5:	mov    DWORD PTR [rbp+0x28],0x3af
   140055aec:	call   0x14002ffd0
   140055af1:	lea    rcx,[rip+0x1dec0]        # 0x1400739b8
   140055af8:	lea    rdx,[rbp+0x28]
   140055afc:	mov    DWORD PTR [rax],0x1e9
   140055b02:	mov    DWORD PTR [rax+0x4],0x3af
   140055b09:	mov    QWORD PTR [rax+0x8],rcx
   140055b0d:	lea    rcx,[rsi+0x10]
   140055b11:	mov    DWORD PTR [rbp+0x30],0x3af
   140055b18:	mov    DWORD PTR [rbp+0x28],0x1e9
   140055b1f:	call   0x14002ff30
   140055b24:	lea    rdx,[rbp+0x30]
   140055b28:	lea    rcx,[rsi+0x30]
   140055b2c:	mov    rbx,rax
   140055b2f:	call   0x14002ffd0
   140055b34:	mov    QWORD PTR [rbx],rax
   140055b37:	cmp    DWORD PTR [rsi+0x8],r12d
   140055b3b:	jne    0x14005b3df
   140055b41:	lea    rdx,[rbp+0x28]
   140055b45:	lea    rcx,[rsi+0x30]
   140055b49:	mov    DWORD PTR [rbp+0x28],0x3b0
   140055b50:	call   0x14002ffd0
   140055b55:	lea    rcx,[rip+0x1de7c]        # 0x1400739d8
   140055b5c:	lea    rdx,[rbp+0x28]
   140055b60:	mov    DWORD PTR [rax],0x1ea
   140055b66:	mov    DWORD PTR [rax+0x4],0x3b0
   140055b6d:	mov    QWORD PTR [rax+0x8],rcx
   140055b71:	lea    rcx,[rsi+0x10]
   140055b75:	mov    DWORD PTR [rbp+0x30],0x3b0
   140055b7c:	mov    DWORD PTR [rbp+0x28],0x1ea
   140055b83:	call   0x14002ff30
   140055b88:	lea    rdx,[rbp+0x30]
   140055b8c:	lea    rcx,[rsi+0x30]
   140055b90:	mov    rbx,rax
   140055b93:	call   0x14002ffd0
   140055b98:	mov    QWORD PTR [rbx],rax
   140055b9b:	cmp    DWORD PTR [rsi+0x8],r12d
   140055b9f:	jne    0x14005b3df
   140055ba5:	lea    rdx,[rbp+0x28]
   140055ba9:	lea    rcx,[rsi+0x30]
   140055bad:	mov    DWORD PTR [rbp+0x28],0x220
   140055bb4:	call   0x14002ffd0
   140055bb9:	lea    rcx,[rip+0x1de38]        # 0x1400739f8
   140055bc0:	lea    rdx,[rbp+0x28]
   140055bc4:	mov    DWORD PTR [rax],0x1eb
   140055bca:	mov    DWORD PTR [rax+0x4],0x220
   140055bd1:	mov    QWORD PTR [rax+0x8],rcx
   140055bd5:	lea    rcx,[rsi+0x10]
   140055bd9:	mov    DWORD PTR [rbp+0x30],0x220
   140055be0:	mov    DWORD PTR [rbp+0x28],0x1eb
   140055be7:	call   0x14002ff30
   140055bec:	lea    rdx,[rbp+0x30]
   140055bf0:	lea    rcx,[rsi+0x30]
   140055bf4:	mov    rbx,rax
   140055bf7:	call   0x14002ffd0
   140055bfc:	mov    QWORD PTR [rbx],rax
   140055bff:	cmp    DWORD PTR [rsi+0x8],r12d
   140055c03:	jne    0x14005b3df
   140055c09:	lea    rdx,[rbp+0x28]
   140055c0d:	lea    rcx,[rsi+0x30]
   140055c11:	mov    DWORD PTR [rbp+0x28],0x21c
   140055c18:	call   0x14002ffd0
   140055c1d:	lea    rcx,[rip+0x1ddec]        # 0x140073a10
   140055c24:	lea    rdx,[rbp+0x28]
   140055c28:	mov    DWORD PTR [rax],0x1ec
   140055c2e:	mov    DWORD PTR [rax+0x4],0x21c
   140055c35:	mov    QWORD PTR [rax+0x8],rcx
   140055c39:	lea    rcx,[rsi+0x10]
   140055c3d:	mov    DWORD PTR [rbp+0x30],0x21c
   140055c44:	mov    DWORD PTR [rbp+0x28],0x1ec
   140055c4b:	call   0x14002ff30
   140055c50:	lea    rdx,[rbp+0x30]
   140055c54:	lea    rcx,[rsi+0x30]
   140055c58:	mov    rbx,rax
   140055c5b:	call   0x14002ffd0
   140055c60:	mov    QWORD PTR [rbx],rax
   140055c63:	cmp    DWORD PTR [rsi+0x8],r12d
   140055c67:	jne    0x14005b3df
   140055c6d:	lea    rdx,[rbp+0x28]
   140055c71:	lea    rcx,[rsi+0x30]
   140055c75:	mov    DWORD PTR [rbp+0x28],0x21e
   140055c7c:	call   0x14002ffd0
   140055c81:	lea    rcx,[rip+0x1dda0]        # 0x140073a28
   140055c88:	lea    rdx,[rbp+0x28]
   140055c8c:	mov    DWORD PTR [rax],0x1ed
   140055c92:	mov    DWORD PTR [rax+0x4],0x21e
   140055c99:	mov    QWORD PTR [rax+0x8],rcx
   140055c9d:	lea    rcx,[rsi+0x10]
   140055ca1:	mov    DWORD PTR [rbp+0x30],0x21e
   140055ca8:	mov    DWORD PTR [rbp+0x28],0x1ed
   140055caf:	call   0x14002ff30
   140055cb4:	lea    rdx,[rbp+0x30]
   140055cb8:	lea    rcx,[rsi+0x30]
   140055cbc:	mov    rbx,rax
   140055cbf:	call   0x14002ffd0
   140055cc4:	mov    QWORD PTR [rbx],rax
   140055cc7:	cmp    DWORD PTR [rsi+0x8],r12d
   140055ccb:	jne    0x14005b3df
   140055cd1:	lea    rdx,[rbp+0x28]
   140055cd5:	lea    rcx,[rsi+0x30]
   140055cd9:	mov    DWORD PTR [rbp+0x28],0x21d
   140055ce0:	call   0x14002ffd0
   140055ce5:	lea    rcx,[rip+0x1dd54]        # 0x140073a40
   140055cec:	lea    rdx,[rbp+0x28]
   140055cf0:	mov    DWORD PTR [rax],0x1ee
   140055cf6:	mov    DWORD PTR [rax+0x4],0x21d
   140055cfd:	mov    QWORD PTR [rax+0x8],rcx
   140055d01:	lea    rcx,[rsi+0x10]
   140055d05:	mov    DWORD PTR [rbp+0x30],0x21d
   140055d0c:	mov    DWORD PTR [rbp+0x28],0x1ee
   140055d13:	call   0x14002ff30
   140055d18:	lea    rdx,[rbp+0x30]
   140055d1c:	lea    rcx,[rsi+0x30]
   140055d20:	mov    rbx,rax
   140055d23:	call   0x14002ffd0
   140055d28:	mov    QWORD PTR [rbx],rax
   140055d2b:	cmp    DWORD PTR [rsi+0x8],r12d
   140055d2f:	jne    0x14005b3df
   140055d35:	lea    rdx,[rbp+0x28]
   140055d39:	lea    rcx,[rsi+0x30]
   140055d3d:	mov    DWORD PTR [rbp+0x28],0x21f
   140055d44:	call   0x14002ffd0
   140055d49:	lea    rcx,[rip+0x1dd08]        # 0x140073a58
   140055d50:	lea    rdx,[rbp+0x28]
   140055d54:	mov    DWORD PTR [rax],0x1ef
   140055d5a:	mov    DWORD PTR [rax+0x4],0x21f
   140055d61:	mov    QWORD PTR [rax+0x8],rcx
   140055d65:	lea    rcx,[rsi+0x10]
   140055d69:	mov    DWORD PTR [rbp+0x30],0x21f
   140055d70:	mov    DWORD PTR [rbp+0x28],0x1ef
   140055d77:	call   0x14002ff30
   140055d7c:	lea    rdx,[rbp+0x30]
   140055d80:	lea    rcx,[rsi+0x30]
   140055d84:	mov    rbx,rax
   140055d87:	call   0x14002ffd0
   140055d8c:	mov    QWORD PTR [rbx],rax
   140055d8f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055d93:	jne    0x14005b3df
   140055d99:	lea    rdx,[rbp+0x28]
   140055d9d:	lea    rcx,[rsi+0x30]
   140055da1:	mov    DWORD PTR [rbp+0x28],0x22a
   140055da8:	call   0x14002ffd0
   140055dad:	lea    rcx,[rip+0x1dcbc]        # 0x140073a70
   140055db4:	lea    rdx,[rbp+0x28]
   140055db8:	mov    DWORD PTR [rax],0x1f0
   140055dbe:	mov    DWORD PTR [rax+0x4],0x22a
   140055dc5:	mov    QWORD PTR [rax+0x8],rcx
   140055dc9:	lea    rcx,[rsi+0x10]
   140055dcd:	mov    DWORD PTR [rbp+0x30],0x22a
   140055dd4:	mov    DWORD PTR [rbp+0x28],0x1f0
   140055ddb:	call   0x14002ff30
   140055de0:	lea    rdx,[rbp+0x30]
   140055de4:	lea    rcx,[rsi+0x30]
   140055de8:	mov    rbx,rax
   140055deb:	call   0x14002ffd0
   140055df0:	mov    QWORD PTR [rbx],rax
   140055df3:	cmp    DWORD PTR [rsi+0x8],r12d
   140055df7:	jne    0x14005b3df
   140055dfd:	lea    rdx,[rbp+0x28]
   140055e01:	lea    rcx,[rsi+0x30]
   140055e05:	mov    DWORD PTR [rbp+0x28],0x226
   140055e0c:	call   0x14002ffd0
   140055e11:	lea    rcx,[rip+0x1dc70]        # 0x140073a88
   140055e18:	lea    rdx,[rbp+0x28]
   140055e1c:	mov    DWORD PTR [rax],0x1f1
   140055e22:	mov    DWORD PTR [rax+0x4],0x226
   140055e29:	mov    QWORD PTR [rax+0x8],rcx
   140055e2d:	lea    rcx,[rsi+0x10]
   140055e31:	mov    DWORD PTR [rbp+0x30],0x226
   140055e38:	mov    DWORD PTR [rbp+0x28],0x1f1
   140055e3f:	call   0x14002ff30
   140055e44:	lea    rdx,[rbp+0x30]
   140055e48:	lea    rcx,[rsi+0x30]
   140055e4c:	mov    rbx,rax
   140055e4f:	call   0x14002ffd0
   140055e54:	mov    QWORD PTR [rbx],rax
   140055e57:	cmp    DWORD PTR [rsi+0x8],r12d
   140055e5b:	jne    0x14005b3df
   140055e61:	lea    rdx,[rbp+0x28]
   140055e65:	lea    rcx,[rsi+0x30]
   140055e69:	mov    DWORD PTR [rbp+0x28],0x228
   140055e70:	call   0x14002ffd0
   140055e75:	lea    rcx,[rip+0x1dc24]        # 0x140073aa0
   140055e7c:	lea    rdx,[rbp+0x28]
   140055e80:	mov    DWORD PTR [rax],0x1f2
   140055e86:	mov    DWORD PTR [rax+0x4],0x228
   140055e8d:	mov    QWORD PTR [rax+0x8],rcx
   140055e91:	lea    rcx,[rsi+0x10]
   140055e95:	mov    DWORD PTR [rbp+0x30],0x228
   140055e9c:	mov    DWORD PTR [rbp+0x28],0x1f2
   140055ea3:	call   0x14002ff30
   140055ea8:	lea    rdx,[rbp+0x30]
   140055eac:	lea    rcx,[rsi+0x30]
   140055eb0:	mov    rbx,rax
   140055eb3:	call   0x14002ffd0
   140055eb8:	mov    QWORD PTR [rbx],rax
   140055ebb:	cmp    DWORD PTR [rsi+0x8],r12d
   140055ebf:	jne    0x14005b3df
   140055ec5:	lea    rdx,[rbp+0x28]
   140055ec9:	lea    rcx,[rsi+0x30]
   140055ecd:	mov    DWORD PTR [rbp+0x28],0x227
   140055ed4:	call   0x14002ffd0
   140055ed9:	lea    rcx,[rip+0x1dbd8]        # 0x140073ab8
   140055ee0:	lea    rdx,[rbp+0x28]
   140055ee4:	mov    DWORD PTR [rax],0x1f3
   140055eea:	mov    DWORD PTR [rax+0x4],0x227
   140055ef1:	mov    QWORD PTR [rax+0x8],rcx
   140055ef5:	lea    rcx,[rsi+0x10]
   140055ef9:	mov    DWORD PTR [rbp+0x30],0x227
   140055f00:	mov    DWORD PTR [rbp+0x28],0x1f3
   140055f07:	call   0x14002ff30
   140055f0c:	lea    rdx,[rbp+0x30]
   140055f10:	lea    rcx,[rsi+0x30]
   140055f14:	mov    rbx,rax
   140055f17:	call   0x14002ffd0
   140055f1c:	mov    QWORD PTR [rbx],rax
   140055f1f:	cmp    DWORD PTR [rsi+0x8],r12d
   140055f23:	jne    0x14005b3df
   140055f29:	lea    rdx,[rbp+0x28]
   140055f2d:	lea    rcx,[rsi+0x30]
   140055f31:	mov    DWORD PTR [rbp+0x28],0x229
   140055f38:	call   0x14002ffd0
   140055f3d:	lea    rcx,[rip+0x1db8c]        # 0x140073ad0
   140055f44:	lea    rdx,[rbp+0x28]
   140055f48:	mov    DWORD PTR [rax],0x1f4
   140055f4e:	mov    DWORD PTR [rax+0x4],0x229
   140055f55:	mov    QWORD PTR [rax+0x8],rcx
   140055f59:	lea    rcx,[rsi+0x10]
   140055f5d:	mov    DWORD PTR [rbp+0x30],0x229
   140055f64:	mov    DWORD PTR [rbp+0x28],0x1f4
   140055f6b:	call   0x14002ff30
   140055f70:	lea    rdx,[rbp+0x30]
   140055f74:	lea    rcx,[rsi+0x30]
   140055f78:	mov    rbx,rax
   140055f7b:	call   0x14002ffd0
   140055f80:	mov    QWORD PTR [rbx],rax
   140055f83:	cmp    DWORD PTR [rsi+0x8],r12d
   140055f87:	jne    0x14005b3df
   140055f8d:	lea    rdx,[rbp+0x28]
   140055f91:	lea    rcx,[rsi+0x30]
   140055f95:	mov    DWORD PTR [rbp+0x28],0x234
   140055f9c:	call   0x14002ffd0
   140055fa1:	lea    rcx,[rip+0x1db40]        # 0x140073ae8
   140055fa8:	lea    rdx,[rbp+0x28]
   140055fac:	mov    DWORD PTR [rax],0x1f5
   140055fb2:	mov    DWORD PTR [rax+0x4],0x234
   140055fb9:	mov    QWORD PTR [rax+0x8],rcx
   140055fbd:	lea    rcx,[rsi+0x10]
   140055fc1:	mov    DWORD PTR [rbp+0x30],0x234
   140055fc8:	mov    DWORD PTR [rbp+0x28],0x1f5
   140055fcf:	call   0x14002ff30
   140055fd4:	lea    rdx,[rbp+0x30]
   140055fd8:	lea    rcx,[rsi+0x30]
   140055fdc:	mov    rbx,rax
   140055fdf:	call   0x14002ffd0
   140055fe4:	mov    QWORD PTR [rbx],rax
   140055fe7:	cmp    DWORD PTR [rsi+0x8],r12d
   140055feb:	jne    0x14005b3df
   140055ff1:	lea    rdx,[rbp+0x28]
   140055ff5:	lea    rcx,[rsi+0x30]
   140055ff9:	mov    DWORD PTR [rbp+0x28],0x230
   140056000:	call   0x14002ffd0
   140056005:	lea    rcx,[rip+0x1daf4]        # 0x140073b00
   14005600c:	lea    rdx,[rbp+0x28]
   140056010:	mov    DWORD PTR [rax],0x1f6
   140056016:	mov    DWORD PTR [rax+0x4],0x230
   14005601d:	mov    QWORD PTR [rax+0x8],rcx
   140056021:	lea    rcx,[rsi+0x10]
   140056025:	mov    DWORD PTR [rbp+0x30],0x230
   14005602c:	mov    DWORD PTR [rbp+0x28],0x1f6
   140056033:	call   0x14002ff30
   140056038:	lea    rdx,[rbp+0x30]
   14005603c:	lea    rcx,[rsi+0x30]
   140056040:	mov    rbx,rax
   140056043:	call   0x14002ffd0
   140056048:	mov    QWORD PTR [rbx],rax
   14005604b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005604f:	jne    0x14005b3df
   140056055:	lea    rdx,[rbp+0x28]
   140056059:	lea    rcx,[rsi+0x30]
   14005605d:	mov    DWORD PTR [rbp+0x28],0x232
   140056064:	call   0x14002ffd0
   140056069:	lea    rcx,[rip+0x1daa8]        # 0x140073b18
   140056070:	lea    rdx,[rbp+0x28]
   140056074:	mov    DWORD PTR [rax],0x1f7
   14005607a:	mov    DWORD PTR [rax+0x4],0x232
   140056081:	mov    QWORD PTR [rax+0x8],rcx
   140056085:	lea    rcx,[rsi+0x10]
   140056089:	mov    DWORD PTR [rbp+0x30],0x232
   140056090:	mov    DWORD PTR [rbp+0x28],0x1f7
   140056097:	call   0x14002ff30
   14005609c:	lea    rdx,[rbp+0x30]
   1400560a0:	lea    rcx,[rsi+0x30]
   1400560a4:	mov    rbx,rax
   1400560a7:	call   0x14002ffd0
   1400560ac:	mov    QWORD PTR [rbx],rax
   1400560af:	cmp    DWORD PTR [rsi+0x8],r12d
   1400560b3:	jne    0x14005b3df
   1400560b9:	lea    rdx,[rbp+0x28]
   1400560bd:	lea    rcx,[rsi+0x30]
   1400560c1:	mov    DWORD PTR [rbp+0x28],0x231
   1400560c8:	call   0x14002ffd0
   1400560cd:	lea    rcx,[rip+0x1da5c]        # 0x140073b30
   1400560d4:	lea    rdx,[rbp+0x28]
   1400560d8:	mov    DWORD PTR [rax],0x1f8
   1400560de:	mov    DWORD PTR [rax+0x4],0x231
   1400560e5:	mov    QWORD PTR [rax+0x8],rcx
   1400560e9:	lea    rcx,[rsi+0x10]
   1400560ed:	mov    DWORD PTR [rbp+0x30],0x231
   1400560f4:	mov    DWORD PTR [rbp+0x28],0x1f8
   1400560fb:	call   0x14002ff30
   140056100:	lea    rdx,[rbp+0x30]
   140056104:	lea    rcx,[rsi+0x30]
   140056108:	mov    rbx,rax
   14005610b:	call   0x14002ffd0
   140056110:	mov    QWORD PTR [rbx],rax
   140056113:	cmp    DWORD PTR [rsi+0x8],r12d
   140056117:	jne    0x14005b3df
   14005611d:	lea    rdx,[rbp+0x28]
   140056121:	lea    rcx,[rsi+0x30]
   140056125:	mov    DWORD PTR [rbp+0x28],0x233
   14005612c:	call   0x14002ffd0
   140056131:	lea    rcx,[rip+0x1da10]        # 0x140073b48
   140056138:	lea    rdx,[rbp+0x28]
   14005613c:	mov    DWORD PTR [rax],0x1f9
   140056142:	mov    DWORD PTR [rax+0x4],0x233
   140056149:	mov    QWORD PTR [rax+0x8],rcx
   14005614d:	lea    rcx,[rsi+0x10]
   140056151:	mov    DWORD PTR [rbp+0x30],0x233
   140056158:	mov    DWORD PTR [rbp+0x28],0x1f9
   14005615f:	call   0x14002ff30
   140056164:	lea    rdx,[rbp+0x30]
   140056168:	lea    rcx,[rsi+0x30]
   14005616c:	mov    rbx,rax
   14005616f:	call   0x14002ffd0
   140056174:	mov    QWORD PTR [rbx],rax
   140056177:	cmp    DWORD PTR [rsi+0x8],r12d
   14005617b:	jne    0x14005b3df
   140056181:	lea    rdx,[rbp+0x28]
   140056185:	lea    rcx,[rsi+0x30]
   140056189:	mov    DWORD PTR [rbp+0x28],0x23e
   140056190:	call   0x14002ffd0
   140056195:	lea    rcx,[rip+0x1d9c4]        # 0x140073b60
   14005619c:	lea    rdx,[rbp+0x28]
   1400561a0:	mov    DWORD PTR [rax],0x1fa
   1400561a6:	mov    DWORD PTR [rax+0x4],0x23e
   1400561ad:	mov    QWORD PTR [rax+0x8],rcx
   1400561b1:	lea    rcx,[rsi+0x10]
   1400561b5:	mov    DWORD PTR [rbp+0x30],0x23e
   1400561bc:	mov    DWORD PTR [rbp+0x28],0x1fa
   1400561c3:	call   0x14002ff30
   1400561c8:	lea    rdx,[rbp+0x30]
   1400561cc:	lea    rcx,[rsi+0x30]
   1400561d0:	mov    rbx,rax
   1400561d3:	call   0x14002ffd0
   1400561d8:	mov    QWORD PTR [rbx],rax
   1400561db:	cmp    DWORD PTR [rsi+0x8],r12d
   1400561df:	jne    0x14005b3df
   1400561e5:	lea    rdx,[rbp+0x28]
   1400561e9:	lea    rcx,[rsi+0x30]
   1400561ed:	mov    DWORD PTR [rbp+0x28],0x23a
   1400561f4:	call   0x14002ffd0
   1400561f9:	lea    rcx,[rip+0x1d978]        # 0x140073b78
   140056200:	lea    rdx,[rbp+0x28]
   140056204:	mov    DWORD PTR [rax],0x1fb
   14005620a:	mov    DWORD PTR [rax+0x4],0x23a
   140056211:	mov    QWORD PTR [rax+0x8],rcx
   140056215:	lea    rcx,[rsi+0x10]
   140056219:	mov    DWORD PTR [rbp+0x30],0x23a
   140056220:	mov    DWORD PTR [rbp+0x28],0x1fb
   140056227:	call   0x14002ff30
   14005622c:	lea    rdx,[rbp+0x30]
   140056230:	lea    rcx,[rsi+0x30]
   140056234:	mov    rbx,rax
   140056237:	call   0x14002ffd0
   14005623c:	mov    QWORD PTR [rbx],rax
   14005623f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056243:	jne    0x14005b3df
   140056249:	lea    rdx,[rbp+0x28]
   14005624d:	lea    rcx,[rsi+0x30]
   140056251:	mov    DWORD PTR [rbp+0x28],0x23c
   140056258:	call   0x14002ffd0
   14005625d:	lea    rcx,[rip+0x1d92c]        # 0x140073b90
   140056264:	lea    rdx,[rbp+0x28]
   140056268:	mov    DWORD PTR [rax],0x1fc
   14005626e:	mov    DWORD PTR [rax+0x4],0x23c
   140056275:	mov    QWORD PTR [rax+0x8],rcx
   140056279:	lea    rcx,[rsi+0x10]
   14005627d:	mov    DWORD PTR [rbp+0x30],0x23c
   140056284:	mov    DWORD PTR [rbp+0x28],0x1fc
   14005628b:	call   0x14002ff30
   140056290:	lea    rdx,[rbp+0x30]
   140056294:	lea    rcx,[rsi+0x30]
   140056298:	mov    rbx,rax
   14005629b:	call   0x14002ffd0
   1400562a0:	mov    QWORD PTR [rbx],rax
   1400562a3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400562a7:	jne    0x14005b3df
   1400562ad:	lea    rdx,[rbp+0x28]
   1400562b1:	lea    rcx,[rsi+0x30]
   1400562b5:	mov    DWORD PTR [rbp+0x28],0x23b
   1400562bc:	call   0x14002ffd0
   1400562c1:	lea    rcx,[rip+0x1d8e0]        # 0x140073ba8
   1400562c8:	lea    rdx,[rbp+0x28]
   1400562cc:	mov    DWORD PTR [rax],0x1fd
   1400562d2:	mov    DWORD PTR [rax+0x4],0x23b
   1400562d9:	mov    QWORD PTR [rax+0x8],rcx
   1400562dd:	lea    rcx,[rsi+0x10]
   1400562e1:	mov    DWORD PTR [rbp+0x30],0x23b
   1400562e8:	mov    DWORD PTR [rbp+0x28],0x1fd
   1400562ef:	call   0x14002ff30
   1400562f4:	lea    rdx,[rbp+0x30]
   1400562f8:	lea    rcx,[rsi+0x30]
   1400562fc:	mov    rbx,rax
   1400562ff:	call   0x14002ffd0
   140056304:	mov    QWORD PTR [rbx],rax
   140056307:	cmp    DWORD PTR [rsi+0x8],r12d
   14005630b:	jne    0x14005b3df
   140056311:	lea    rdx,[rbp+0x28]
   140056315:	lea    rcx,[rsi+0x30]
   140056319:	mov    DWORD PTR [rbp+0x28],0x23d
   140056320:	call   0x14002ffd0
   140056325:	lea    rcx,[rip+0x1d894]        # 0x140073bc0
   14005632c:	lea    rdx,[rbp+0x28]
   140056330:	mov    DWORD PTR [rax],0x1fe
   140056336:	mov    DWORD PTR [rax+0x4],0x23d
   14005633d:	mov    QWORD PTR [rax+0x8],rcx
   140056341:	lea    rcx,[rsi+0x10]
   140056345:	mov    DWORD PTR [rbp+0x30],0x23d
   14005634c:	mov    DWORD PTR [rbp+0x28],0x1fe
   140056353:	call   0x14002ff30
   140056358:	lea    rdx,[rbp+0x30]
   14005635c:	lea    rcx,[rsi+0x30]
   140056360:	mov    rbx,rax
   140056363:	call   0x14002ffd0
   140056368:	mov    QWORD PTR [rbx],rax
   14005636b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005636f:	jne    0x14005b3df
   140056375:	lea    rdx,[rbp+0x28]
   140056379:	lea    rcx,[rsi+0x30]
   14005637d:	mov    DWORD PTR [rbp+0x28],0x248
   140056384:	call   0x14002ffd0
   140056389:	lea    rcx,[rip+0x1d848]        # 0x140073bd8
   140056390:	lea    rdx,[rbp+0x28]
   140056394:	mov    DWORD PTR [rax],0x1ff
   14005639a:	mov    DWORD PTR [rax+0x4],0x248
   1400563a1:	mov    QWORD PTR [rax+0x8],rcx
   1400563a5:	lea    rcx,[rsi+0x10]
   1400563a9:	mov    DWORD PTR [rbp+0x30],0x248
   1400563b0:	mov    DWORD PTR [rbp+0x28],0x1ff
   1400563b7:	call   0x14002ff30
   1400563bc:	lea    rdx,[rbp+0x30]
   1400563c0:	lea    rcx,[rsi+0x30]
   1400563c4:	mov    rbx,rax
   1400563c7:	call   0x14002ffd0
   1400563cc:	mov    QWORD PTR [rbx],rax
   1400563cf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400563d3:	jne    0x14005b3df
   1400563d9:	lea    rdx,[rbp+0x28]
   1400563dd:	lea    rcx,[rsi+0x30]
   1400563e1:	mov    DWORD PTR [rbp+0x28],0x244
   1400563e8:	call   0x14002ffd0
   1400563ed:	lea    rcx,[rip+0x1d7fc]        # 0x140073bf0
   1400563f4:	lea    rdx,[rbp+0x28]
   1400563f8:	mov    DWORD PTR [rax],0x200
   1400563fe:	mov    DWORD PTR [rax+0x4],0x244
   140056405:	mov    QWORD PTR [rax+0x8],rcx
   140056409:	lea    rcx,[rsi+0x10]
   14005640d:	mov    DWORD PTR [rbp+0x30],0x244
   140056414:	mov    DWORD PTR [rbp+0x28],0x200
   14005641b:	call   0x14002ff30
   140056420:	lea    rdx,[rbp+0x30]
   140056424:	lea    rcx,[rsi+0x30]
   140056428:	mov    rbx,rax
   14005642b:	call   0x14002ffd0
   140056430:	mov    QWORD PTR [rbx],rax
   140056433:	cmp    DWORD PTR [rsi+0x8],r12d
   140056437:	jne    0x14005b3df
   14005643d:	lea    rdx,[rbp+0x28]
   140056441:	lea    rcx,[rsi+0x30]
   140056445:	mov    DWORD PTR [rbp+0x28],0x246
   14005644c:	call   0x14002ffd0
   140056451:	lea    rcx,[rip+0x1d7b0]        # 0x140073c08
   140056458:	lea    rdx,[rbp+0x28]
   14005645c:	mov    DWORD PTR [rax],0x201
   140056462:	mov    DWORD PTR [rax+0x4],0x246
   140056469:	mov    QWORD PTR [rax+0x8],rcx
   14005646d:	lea    rcx,[rsi+0x10]
   140056471:	mov    DWORD PTR [rbp+0x30],0x246
   140056478:	mov    DWORD PTR [rbp+0x28],0x201
   14005647f:	call   0x14002ff30
   140056484:	lea    rdx,[rbp+0x30]
   140056488:	lea    rcx,[rsi+0x30]
   14005648c:	mov    rbx,rax
   14005648f:	call   0x14002ffd0
   140056494:	mov    QWORD PTR [rbx],rax
   140056497:	cmp    DWORD PTR [rsi+0x8],r12d
   14005649b:	jne    0x14005b3df
   1400564a1:	lea    rdx,[rbp+0x28]
   1400564a5:	lea    rcx,[rsi+0x30]
   1400564a9:	mov    DWORD PTR [rbp+0x28],0x245
   1400564b0:	call   0x14002ffd0
   1400564b5:	lea    rcx,[rip+0x1d764]        # 0x140073c20
   1400564bc:	lea    rdx,[rbp+0x28]
   1400564c0:	mov    DWORD PTR [rax],0x202
   1400564c6:	mov    DWORD PTR [rax+0x4],0x245
   1400564cd:	mov    QWORD PTR [rax+0x8],rcx
   1400564d1:	lea    rcx,[rsi+0x10]
   1400564d5:	mov    DWORD PTR [rbp+0x30],0x245
   1400564dc:	mov    DWORD PTR [rbp+0x28],0x202
   1400564e3:	call   0x14002ff30
   1400564e8:	lea    rdx,[rbp+0x30]
   1400564ec:	lea    rcx,[rsi+0x30]
   1400564f0:	mov    rbx,rax
   1400564f3:	call   0x14002ffd0
   1400564f8:	mov    QWORD PTR [rbx],rax
   1400564fb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400564ff:	jne    0x14005b3df
   140056505:	lea    rdx,[rbp+0x28]
   140056509:	lea    rcx,[rsi+0x30]
   14005650d:	mov    DWORD PTR [rbp+0x28],0x247
   140056514:	call   0x14002ffd0
   140056519:	lea    rcx,[rip+0x1d718]        # 0x140073c38
   140056520:	lea    rdx,[rbp+0x28]
   140056524:	mov    DWORD PTR [rax],0x203
   14005652a:	mov    DWORD PTR [rax+0x4],0x247
   140056531:	mov    QWORD PTR [rax+0x8],rcx
   140056535:	lea    rcx,[rsi+0x10]
   140056539:	mov    DWORD PTR [rbp+0x30],0x247
   140056540:	mov    DWORD PTR [rbp+0x28],0x203
   140056547:	call   0x14002ff30
   14005654c:	lea    rdx,[rbp+0x30]
   140056550:	lea    rcx,[rsi+0x30]
   140056554:	mov    rbx,rax
   140056557:	call   0x14002ffd0
   14005655c:	mov    QWORD PTR [rbx],rax
   14005655f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056563:	jne    0x14005b3df
   140056569:	lea    rdx,[rbp+0x28]
   14005656d:	lea    rcx,[rsi+0x30]
   140056571:	mov    DWORD PTR [rbp+0x28],0x252
   140056578:	call   0x14002ffd0
   14005657d:	lea    rcx,[rip+0x1d6cc]        # 0x140073c50
   140056584:	lea    rdx,[rbp+0x28]
   140056588:	mov    DWORD PTR [rax],0x204
   14005658e:	mov    DWORD PTR [rax+0x4],0x252
   140056595:	mov    QWORD PTR [rax+0x8],rcx
   140056599:	lea    rcx,[rsi+0x10]
   14005659d:	mov    DWORD PTR [rbp+0x30],0x252
   1400565a4:	mov    DWORD PTR [rbp+0x28],0x204
   1400565ab:	call   0x14002ff30
   1400565b0:	lea    rdx,[rbp+0x30]
   1400565b4:	lea    rcx,[rsi+0x30]
   1400565b8:	mov    rbx,rax
   1400565bb:	call   0x14002ffd0
   1400565c0:	mov    QWORD PTR [rbx],rax
   1400565c3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400565c7:	jne    0x14005b3df
   1400565cd:	lea    rdx,[rbp+0x28]
   1400565d1:	lea    rcx,[rsi+0x30]
   1400565d5:	mov    DWORD PTR [rbp+0x28],0x24e
   1400565dc:	call   0x14002ffd0
   1400565e1:	lea    rcx,[rip+0x1d680]        # 0x140073c68
   1400565e8:	lea    rdx,[rbp+0x28]
   1400565ec:	mov    DWORD PTR [rax],0x205
   1400565f2:	mov    DWORD PTR [rax+0x4],0x24e
   1400565f9:	mov    QWORD PTR [rax+0x8],rcx
   1400565fd:	lea    rcx,[rsi+0x10]
   140056601:	mov    DWORD PTR [rbp+0x30],0x24e
   140056608:	mov    DWORD PTR [rbp+0x28],0x205
   14005660f:	call   0x14002ff30
   140056614:	lea    rdx,[rbp+0x30]
   140056618:	lea    rcx,[rsi+0x30]
   14005661c:	mov    rbx,rax
   14005661f:	call   0x14002ffd0
   140056624:	mov    QWORD PTR [rbx],rax
   140056627:	cmp    DWORD PTR [rsi+0x8],r12d
   14005662b:	jne    0x14005b3df
   140056631:	lea    rdx,[rbp+0x28]
   140056635:	lea    rcx,[rsi+0x30]
   140056639:	mov    DWORD PTR [rbp+0x28],0x250
   140056640:	call   0x14002ffd0
   140056645:	lea    rcx,[rip+0x1d634]        # 0x140073c80
   14005664c:	lea    rdx,[rbp+0x28]
   140056650:	mov    DWORD PTR [rax],0x206
   140056656:	mov    DWORD PTR [rax+0x4],0x250
   14005665d:	mov    QWORD PTR [rax+0x8],rcx
   140056661:	lea    rcx,[rsi+0x10]
   140056665:	mov    DWORD PTR [rbp+0x30],0x250
   14005666c:	mov    DWORD PTR [rbp+0x28],0x206
   140056673:	call   0x14002ff30
   140056678:	lea    rdx,[rbp+0x30]
   14005667c:	lea    rcx,[rsi+0x30]
   140056680:	mov    rbx,rax
   140056683:	call   0x14002ffd0
   140056688:	mov    QWORD PTR [rbx],rax
   14005668b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005668f:	jne    0x14005b3df
   140056695:	lea    rdx,[rbp+0x28]
   140056699:	lea    rcx,[rsi+0x30]
   14005669d:	mov    DWORD PTR [rbp+0x28],0x24f
   1400566a4:	call   0x14002ffd0
   1400566a9:	lea    rcx,[rip+0x1d5e8]        # 0x140073c98
   1400566b0:	lea    rdx,[rbp+0x28]
   1400566b4:	mov    DWORD PTR [rax],0x207
   1400566ba:	mov    DWORD PTR [rax+0x4],0x24f
   1400566c1:	mov    QWORD PTR [rax+0x8],rcx
   1400566c5:	lea    rcx,[rsi+0x10]
   1400566c9:	mov    DWORD PTR [rbp+0x30],0x24f
   1400566d0:	mov    DWORD PTR [rbp+0x28],0x207
   1400566d7:	call   0x14002ff30
   1400566dc:	lea    rdx,[rbp+0x30]
   1400566e0:	lea    rcx,[rsi+0x30]
   1400566e4:	mov    rbx,rax
   1400566e7:	call   0x14002ffd0
   1400566ec:	mov    QWORD PTR [rbx],rax
   1400566ef:	cmp    DWORD PTR [rsi+0x8],r12d
   1400566f3:	jne    0x14005b3df
   1400566f9:	lea    rdx,[rbp+0x28]
   1400566fd:	lea    rcx,[rsi+0x30]
   140056701:	mov    DWORD PTR [rbp+0x28],0x251
   140056708:	call   0x14002ffd0
   14005670d:	lea    rcx,[rip+0x1d59c]        # 0x140073cb0
   140056714:	lea    rdx,[rbp+0x28]
   140056718:	mov    DWORD PTR [rax],0x208
   14005671e:	mov    DWORD PTR [rax+0x4],0x251
   140056725:	mov    QWORD PTR [rax+0x8],rcx
   140056729:	lea    rcx,[rsi+0x10]
   14005672d:	mov    DWORD PTR [rbp+0x30],0x251
   140056734:	mov    DWORD PTR [rbp+0x28],0x208
   14005673b:	call   0x14002ff30
   140056740:	lea    rdx,[rbp+0x30]
   140056744:	lea    rcx,[rsi+0x30]
   140056748:	mov    rbx,rax
   14005674b:	call   0x14002ffd0
   140056750:	mov    QWORD PTR [rbx],rax
   140056753:	cmp    DWORD PTR [rsi+0x8],r12d
   140056757:	jne    0x14005b3df
   14005675d:	lea    rdx,[rbp+0x28]
   140056761:	lea    rcx,[rsi+0x30]
   140056765:	mov    DWORD PTR [rbp+0x28],0x25c
   14005676c:	call   0x14002ffd0
   140056771:	lea    rcx,[rip+0x1d550]        # 0x140073cc8
   140056778:	lea    rdx,[rbp+0x28]
   14005677c:	mov    DWORD PTR [rax],0x209
   140056782:	mov    DWORD PTR [rax+0x4],0x25c
   140056789:	mov    QWORD PTR [rax+0x8],rcx
   14005678d:	lea    rcx,[rsi+0x10]
   140056791:	mov    DWORD PTR [rbp+0x30],0x25c
   140056798:	mov    DWORD PTR [rbp+0x28],0x209
   14005679f:	call   0x14002ff30
   1400567a4:	lea    rdx,[rbp+0x30]
   1400567a8:	lea    rcx,[rsi+0x30]
   1400567ac:	mov    rbx,rax
   1400567af:	call   0x14002ffd0
   1400567b4:	mov    QWORD PTR [rbx],rax
   1400567b7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400567bb:	jne    0x14005b3df
   1400567c1:	lea    rdx,[rbp+0x28]
   1400567c5:	lea    rcx,[rsi+0x30]
   1400567c9:	mov    DWORD PTR [rbp+0x28],0x258
   1400567d0:	call   0x14002ffd0
   1400567d5:	lea    rcx,[rip+0x1d504]        # 0x140073ce0
   1400567dc:	lea    rdx,[rbp+0x28]
   1400567e0:	mov    DWORD PTR [rax],0x20a
   1400567e6:	mov    DWORD PTR [rax+0x4],0x258
   1400567ed:	mov    QWORD PTR [rax+0x8],rcx
   1400567f1:	lea    rcx,[rsi+0x10]
   1400567f5:	mov    DWORD PTR [rbp+0x30],0x258
   1400567fc:	mov    DWORD PTR [rbp+0x28],0x20a
   140056803:	call   0x14002ff30
   140056808:	lea    rdx,[rbp+0x30]
   14005680c:	lea    rcx,[rsi+0x30]
   140056810:	mov    rbx,rax
   140056813:	call   0x14002ffd0
   140056818:	mov    QWORD PTR [rbx],rax
   14005681b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005681f:	jne    0x14005b3df
   140056825:	lea    rdx,[rbp+0x28]
   140056829:	lea    rcx,[rsi+0x30]
   14005682d:	mov    DWORD PTR [rbp+0x28],0x25a
   140056834:	call   0x14002ffd0
   140056839:	lea    rcx,[rip+0x1d4b8]        # 0x140073cf8
   140056840:	lea    rdx,[rbp+0x28]
   140056844:	mov    DWORD PTR [rax],0x20b
   14005684a:	mov    DWORD PTR [rax+0x4],0x25a
   140056851:	mov    QWORD PTR [rax+0x8],rcx
   140056855:	lea    rcx,[rsi+0x10]
   140056859:	mov    DWORD PTR [rbp+0x30],0x25a
   140056860:	mov    DWORD PTR [rbp+0x28],0x20b
   140056867:	call   0x14002ff30
   14005686c:	lea    rdx,[rbp+0x30]
   140056870:	lea    rcx,[rsi+0x30]
   140056874:	mov    rbx,rax
   140056877:	call   0x14002ffd0
   14005687c:	mov    QWORD PTR [rbx],rax
   14005687f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056883:	jne    0x14005b3df
   140056889:	lea    rdx,[rbp+0x28]
   14005688d:	lea    rcx,[rsi+0x30]
   140056891:	mov    DWORD PTR [rbp+0x28],0x259
   140056898:	call   0x14002ffd0
   14005689d:	lea    rcx,[rip+0x1d46c]        # 0x140073d10
   1400568a4:	lea    rdx,[rbp+0x28]
   1400568a8:	mov    DWORD PTR [rax],0x20c
   1400568ae:	mov    DWORD PTR [rax+0x4],0x259
   1400568b5:	mov    QWORD PTR [rax+0x8],rcx
   1400568b9:	lea    rcx,[rsi+0x10]
   1400568bd:	mov    DWORD PTR [rbp+0x30],0x259
   1400568c4:	mov    DWORD PTR [rbp+0x28],0x20c
   1400568cb:	call   0x14002ff30
   1400568d0:	lea    rdx,[rbp+0x30]
   1400568d4:	lea    rcx,[rsi+0x30]
   1400568d8:	mov    rbx,rax
   1400568db:	call   0x14002ffd0
   1400568e0:	mov    QWORD PTR [rbx],rax
   1400568e3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400568e7:	jne    0x14005b3df
   1400568ed:	lea    rdx,[rbp+0x28]
   1400568f1:	lea    rcx,[rsi+0x30]
   1400568f5:	mov    DWORD PTR [rbp+0x28],0x25b
   1400568fc:	call   0x14002ffd0
   140056901:	lea    rcx,[rip+0x1d420]        # 0x140073d28
   140056908:	lea    rdx,[rbp+0x28]
   14005690c:	mov    DWORD PTR [rax],0x20d
   140056912:	mov    DWORD PTR [rax+0x4],0x25b
   140056919:	mov    QWORD PTR [rax+0x8],rcx
   14005691d:	lea    rcx,[rsi+0x10]
   140056921:	mov    DWORD PTR [rbp+0x30],0x25b
   140056928:	mov    DWORD PTR [rbp+0x28],0x20d
   14005692f:	call   0x14002ff30
   140056934:	lea    rdx,[rbp+0x30]
   140056938:	lea    rcx,[rsi+0x30]
   14005693c:	mov    rbx,rax
   14005693f:	call   0x14002ffd0
   140056944:	mov    QWORD PTR [rbx],rax
   140056947:	cmp    DWORD PTR [rsi+0x8],r12d
   14005694b:	jne    0x14005b3df
   140056951:	lea    rdx,[rbp+0x28]
   140056955:	lea    rcx,[rsi+0x30]
   140056959:	mov    DWORD PTR [rbp+0x28],0x266
   140056960:	call   0x14002ffd0
   140056965:	lea    rcx,[rip+0x1d3d4]        # 0x140073d40
   14005696c:	lea    rdx,[rbp+0x28]
   140056970:	mov    DWORD PTR [rax],0x20e
   140056976:	mov    DWORD PTR [rax+0x4],0x266
   14005697d:	mov    QWORD PTR [rax+0x8],rcx
   140056981:	lea    rcx,[rsi+0x10]
   140056985:	mov    DWORD PTR [rbp+0x30],0x266
   14005698c:	mov    DWORD PTR [rbp+0x28],0x20e
   140056993:	call   0x14002ff30
   140056998:	lea    rdx,[rbp+0x30]
   14005699c:	lea    rcx,[rsi+0x30]
   1400569a0:	mov    rbx,rax
   1400569a3:	call   0x14002ffd0
   1400569a8:	mov    QWORD PTR [rbx],rax
   1400569ab:	cmp    DWORD PTR [rsi+0x8],r12d
   1400569af:	jne    0x14005b3df
   1400569b5:	lea    rdx,[rbp+0x28]
   1400569b9:	lea    rcx,[rsi+0x30]
   1400569bd:	mov    DWORD PTR [rbp+0x28],0x262
   1400569c4:	call   0x14002ffd0
   1400569c9:	lea    rcx,[rip+0x1d388]        # 0x140073d58
   1400569d0:	lea    rdx,[rbp+0x28]
   1400569d4:	mov    DWORD PTR [rax],0x20f
   1400569da:	mov    DWORD PTR [rax+0x4],0x262
   1400569e1:	mov    QWORD PTR [rax+0x8],rcx
   1400569e5:	lea    rcx,[rsi+0x10]
   1400569e9:	mov    DWORD PTR [rbp+0x30],0x262
   1400569f0:	mov    DWORD PTR [rbp+0x28],0x20f
   1400569f7:	call   0x14002ff30
   1400569fc:	lea    rdx,[rbp+0x30]
   140056a00:	lea    rcx,[rsi+0x30]
   140056a04:	mov    rbx,rax
   140056a07:	call   0x14002ffd0
   140056a0c:	mov    QWORD PTR [rbx],rax
   140056a0f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056a13:	jne    0x14005b3df
   140056a19:	lea    rdx,[rbp+0x28]
   140056a1d:	lea    rcx,[rsi+0x30]
   140056a21:	mov    DWORD PTR [rbp+0x28],0x264
   140056a28:	call   0x14002ffd0
   140056a2d:	lea    rcx,[rip+0x1d33c]        # 0x140073d70
   140056a34:	lea    rdx,[rbp+0x28]
   140056a38:	mov    DWORD PTR [rax],0x210
   140056a3e:	mov    DWORD PTR [rax+0x4],0x264
   140056a45:	mov    QWORD PTR [rax+0x8],rcx
   140056a49:	lea    rcx,[rsi+0x10]
   140056a4d:	mov    DWORD PTR [rbp+0x30],0x264
   140056a54:	mov    DWORD PTR [rbp+0x28],0x210
   140056a5b:	call   0x14002ff30
   140056a60:	lea    rdx,[rbp+0x30]
   140056a64:	lea    rcx,[rsi+0x30]
   140056a68:	mov    rbx,rax
   140056a6b:	call   0x14002ffd0
   140056a70:	mov    QWORD PTR [rbx],rax
   140056a73:	cmp    DWORD PTR [rsi+0x8],r12d
   140056a77:	jne    0x14005b3df
   140056a7d:	lea    rdx,[rbp+0x28]
   140056a81:	lea    rcx,[rsi+0x30]
   140056a85:	mov    DWORD PTR [rbp+0x28],0x263
   140056a8c:	call   0x14002ffd0
   140056a91:	lea    rcx,[rip+0x1d2f0]        # 0x140073d88
   140056a98:	lea    rdx,[rbp+0x28]
   140056a9c:	mov    DWORD PTR [rax],0x211
   140056aa2:	mov    DWORD PTR [rax+0x4],0x263
   140056aa9:	mov    QWORD PTR [rax+0x8],rcx
   140056aad:	lea    rcx,[rsi+0x10]
   140056ab1:	mov    DWORD PTR [rbp+0x30],0x263
   140056ab8:	mov    DWORD PTR [rbp+0x28],0x211
   140056abf:	call   0x14002ff30
   140056ac4:	lea    rdx,[rbp+0x30]
   140056ac8:	lea    rcx,[rsi+0x30]
   140056acc:	mov    rbx,rax
   140056acf:	call   0x14002ffd0
   140056ad4:	mov    QWORD PTR [rbx],rax
   140056ad7:	cmp    DWORD PTR [rsi+0x8],r12d
   140056adb:	jne    0x14005b3df
   140056ae1:	lea    rdx,[rbp+0x28]
   140056ae5:	lea    rcx,[rsi+0x30]
   140056ae9:	mov    DWORD PTR [rbp+0x28],0x265
   140056af0:	call   0x14002ffd0
   140056af5:	lea    rcx,[rip+0x1d2a4]        # 0x140073da0
   140056afc:	lea    rdx,[rbp+0x28]
   140056b00:	mov    DWORD PTR [rax],0x212
   140056b06:	mov    DWORD PTR [rax+0x4],0x265
   140056b0d:	mov    QWORD PTR [rax+0x8],rcx
   140056b11:	lea    rcx,[rsi+0x10]
   140056b15:	mov    DWORD PTR [rbp+0x30],0x265
   140056b1c:	mov    DWORD PTR [rbp+0x28],0x212
   140056b23:	call   0x14002ff30
   140056b28:	lea    rdx,[rbp+0x30]
   140056b2c:	lea    rcx,[rsi+0x30]
   140056b30:	mov    rbx,rax
   140056b33:	call   0x14002ffd0
   140056b38:	mov    QWORD PTR [rbx],rax
   140056b3b:	cmp    DWORD PTR [rsi+0x8],r12d
   140056b3f:	jne    0x14005b3df
   140056b45:	lea    rdx,[rbp+0x28]
   140056b49:	lea    rcx,[rsi+0x30]
   140056b4d:	mov    DWORD PTR [rbp+0x28],0x270
   140056b54:	call   0x14002ffd0
   140056b59:	lea    rcx,[rip+0x1d258]        # 0x140073db8
   140056b60:	lea    rdx,[rbp+0x28]
   140056b64:	mov    DWORD PTR [rax],0x213
   140056b6a:	mov    DWORD PTR [rax+0x4],0x270
   140056b71:	mov    QWORD PTR [rax+0x8],rcx
   140056b75:	lea    rcx,[rsi+0x10]
   140056b79:	mov    DWORD PTR [rbp+0x30],0x270
   140056b80:	mov    DWORD PTR [rbp+0x28],0x213
   140056b87:	call   0x14002ff30
   140056b8c:	lea    rdx,[rbp+0x30]
   140056b90:	lea    rcx,[rsi+0x30]
   140056b94:	mov    rbx,rax
   140056b97:	call   0x14002ffd0
   140056b9c:	mov    QWORD PTR [rbx],rax
   140056b9f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056ba3:	jne    0x14005b3df
   140056ba9:	lea    rdx,[rbp+0x28]
   140056bad:	lea    rcx,[rsi+0x30]
   140056bb1:	mov    DWORD PTR [rbp+0x28],0x26c
   140056bb8:	call   0x14002ffd0
   140056bbd:	lea    rcx,[rip+0x1d20c]        # 0x140073dd0
   140056bc4:	lea    rdx,[rbp+0x28]
   140056bc8:	mov    DWORD PTR [rax],0x214
   140056bce:	mov    DWORD PTR [rax+0x4],0x26c
   140056bd5:	mov    QWORD PTR [rax+0x8],rcx
   140056bd9:	lea    rcx,[rsi+0x10]
   140056bdd:	mov    DWORD PTR [rbp+0x30],0x26c
   140056be4:	mov    DWORD PTR [rbp+0x28],0x214
   140056beb:	call   0x14002ff30
   140056bf0:	lea    rdx,[rbp+0x30]
   140056bf4:	lea    rcx,[rsi+0x30]
   140056bf8:	mov    rbx,rax
   140056bfb:	call   0x14002ffd0
   140056c00:	mov    QWORD PTR [rbx],rax
   140056c03:	cmp    DWORD PTR [rsi+0x8],r12d
   140056c07:	jne    0x14005b3df
   140056c0d:	lea    rdx,[rbp+0x28]
   140056c11:	lea    rcx,[rsi+0x30]
   140056c15:	mov    DWORD PTR [rbp+0x28],0x26e
   140056c1c:	call   0x14002ffd0
   140056c21:	lea    rcx,[rip+0x1d1c0]        # 0x140073de8
   140056c28:	lea    rdx,[rbp+0x28]
   140056c2c:	mov    DWORD PTR [rax],0x215
   140056c32:	mov    DWORD PTR [rax+0x4],0x26e
   140056c39:	mov    QWORD PTR [rax+0x8],rcx
   140056c3d:	lea    rcx,[rsi+0x10]
   140056c41:	mov    DWORD PTR [rbp+0x30],0x26e
   140056c48:	mov    DWORD PTR [rbp+0x28],0x215
   140056c4f:	call   0x14002ff30
   140056c54:	lea    rdx,[rbp+0x30]
   140056c58:	lea    rcx,[rsi+0x30]
   140056c5c:	mov    rbx,rax
   140056c5f:	call   0x14002ffd0
   140056c64:	mov    QWORD PTR [rbx],rax
   140056c67:	cmp    DWORD PTR [rsi+0x8],r12d
   140056c6b:	jne    0x14005b3df
   140056c71:	lea    rdx,[rbp+0x28]
   140056c75:	lea    rcx,[rsi+0x30]
   140056c79:	mov    DWORD PTR [rbp+0x28],0x26d
   140056c80:	call   0x14002ffd0
   140056c85:	lea    rcx,[rip+0x1d174]        # 0x140073e00
   140056c8c:	lea    rdx,[rbp+0x28]
   140056c90:	mov    DWORD PTR [rax],0x216
   140056c96:	mov    DWORD PTR [rax+0x4],0x26d
   140056c9d:	mov    QWORD PTR [rax+0x8],rcx
   140056ca1:	lea    rcx,[rsi+0x10]
   140056ca5:	mov    DWORD PTR [rbp+0x30],0x26d
   140056cac:	mov    DWORD PTR [rbp+0x28],0x216
   140056cb3:	call   0x14002ff30
   140056cb8:	lea    rdx,[rbp+0x30]
   140056cbc:	lea    rcx,[rsi+0x30]
   140056cc0:	mov    rbx,rax
   140056cc3:	call   0x14002ffd0
   140056cc8:	mov    QWORD PTR [rbx],rax
   140056ccb:	cmp    DWORD PTR [rsi+0x8],r12d
   140056ccf:	jne    0x14005b3df
   140056cd5:	lea    rdx,[rbp+0x28]
   140056cd9:	lea    rcx,[rsi+0x30]
   140056cdd:	mov    DWORD PTR [rbp+0x28],0x26f
   140056ce4:	call   0x14002ffd0
   140056ce9:	lea    rcx,[rip+0x1d128]        # 0x140073e18
   140056cf0:	lea    rdx,[rbp+0x28]
   140056cf4:	mov    DWORD PTR [rax],0x217
   140056cfa:	mov    DWORD PTR [rax+0x4],0x26f
   140056d01:	mov    QWORD PTR [rax+0x8],rcx
   140056d05:	lea    rcx,[rsi+0x10]
   140056d09:	mov    DWORD PTR [rbp+0x30],0x26f
   140056d10:	mov    DWORD PTR [rbp+0x28],0x217
   140056d17:	call   0x14002ff30
   140056d1c:	lea    rdx,[rbp+0x30]
   140056d20:	lea    rcx,[rsi+0x30]
   140056d24:	mov    rbx,rax
   140056d27:	call   0x14002ffd0
   140056d2c:	mov    QWORD PTR [rbx],rax
   140056d2f:	cmp    DWORD PTR [rsi+0x8],r12d
   140056d33:	jne    0x14005b3df
   140056d39:	lea    rdx,[rbp+0x28]
   140056d3d:	lea    rcx,[rsi+0x30]
   140056d41:	mov    DWORD PTR [rbp+0x28],0x27a
   140056d48:	call   0x14002ffd0
   140056d4d:	lea    rcx,[rip+0x1d0dc]        # 0x140073e30
   140056d54:	lea    rdx,[rbp+0x28]
   140056d58:	mov    DWORD PTR [rax],0x218
   140056d5e:	mov    DWORD PTR [rax+0x4],0x27a
   140056d65:	mov    QWORD PTR [rax+0x8],rcx
   140056d69:	lea    rcx,[rsi+0x10]
   140056d6d:	mov    DWORD PTR [rbp+0x30],0x27a
   140056d74:	mov    DWORD PTR [rbp+0x28],0x218
   140056d7b:	call   0x14002ff30
   140056d80:	lea    rdx,[rbp+0x30]
   140056d84:	lea    rcx,[rsi+0x30]
   140056d88:	mov    rbx,rax
   140056d8b:	call   0x14002ffd0
   140056d90:	mov    QWORD PTR [rbx],rax
   140056d93:	cmp    DWORD PTR [rsi+0x8],r12d
   140056d97:	jne    0x14005b3df
   140056d9d:	lea    rdx,[rbp+0x28]
   140056da1:	lea    rcx,[rsi+0x30]
   140056da5:	mov    DWORD PTR [rbp+0x28],0x276
   140056dac:	call   0x14002ffd0
   140056db1:	lea    rcx,[rip+0x1d090]        # 0x140073e48
   140056db8:	lea    rdx,[rbp+0x28]
   140056dbc:	mov    DWORD PTR [rax],0x219
   140056dc2:	mov    DWORD PTR [rax+0x4],0x276
   140056dc9:	mov    QWORD PTR [rax+0x8],rcx
   140056dcd:	lea    rcx,[rsi+0x10]
   140056dd1:	mov    DWORD PTR [rbp+0x30],0x276
   140056dd8:	mov    DWORD PTR [rbp+0x28],0x219
   140056ddf:	call   0x14002ff30
   140056de4:	lea    rdx,[rbp+0x30]
   140056de8:	lea    rcx,[rsi+0x30]
   140056dec:	mov    rbx,rax
   140056def:	call   0x14002ffd0
   140056df4:	mov    QWORD PTR [rbx],rax
   140056df7:	cmp    DWORD PTR [rsi+0x8],r12d
   140056dfb:	jne    0x14005b3df
   140056e01:	lea    rdx,[rbp+0x28]
   140056e05:	lea    rcx,[rsi+0x30]
   140056e09:	mov    DWORD PTR [rbp+0x28],0x278
   140056e10:	call   0x14002ffd0
   140056e15:	lea    rcx,[rip+0x1d044]        # 0x140073e60
   140056e1c:	lea    rdx,[rbp+0x28]
   140056e20:	mov    DWORD PTR [rax],0x21a
   140056e26:	mov    DWORD PTR [rax+0x4],0x278
   140056e2d:	mov    QWORD PTR [rax+0x8],rcx
   140056e31:	lea    rcx,[rsi+0x10]
   140056e35:	mov    DWORD PTR [rbp+0x30],0x278
   140056e3c:	mov    DWORD PTR [rbp+0x28],0x21a
   140056e43:	call   0x14002ff30
   140056e48:	lea    rdx,[rbp+0x30]
   140056e4c:	lea    rcx,[rsi+0x30]
   140056e50:	mov    rbx,rax
   140056e53:	call   0x14002ffd0
   140056e58:	mov    QWORD PTR [rbx],rax
   140056e5b:	cmp    DWORD PTR [rsi+0x8],r12d
   140056e5f:	jne    0x14005b3df
   140056e65:	lea    rdx,[rbp+0x28]
   140056e69:	lea    rcx,[rsi+0x30]
   140056e6d:	mov    DWORD PTR [rbp+0x28],0x277
   140056e74:	call   0x14002ffd0
   140056e79:	lea    rcx,[rip+0x1cff8]        # 0x140073e78
   140056e80:	lea    rdx,[rbp+0x28]
   140056e84:	mov    DWORD PTR [rax],0x21b
   140056e8a:	mov    DWORD PTR [rax+0x4],0x277
   140056e91:	mov    QWORD PTR [rax+0x8],rcx
   140056e95:	lea    rcx,[rsi+0x10]
   140056e99:	mov    DWORD PTR [rbp+0x30],0x277
   140056ea0:	mov    DWORD PTR [rbp+0x28],0x21b
   140056ea7:	call   0x14002ff30
   140056eac:	lea    rdx,[rbp+0x30]
   140056eb0:	lea    rcx,[rsi+0x30]
   140056eb4:	mov    rbx,rax
   140056eb7:	call   0x14002ffd0
   140056ebc:	mov    QWORD PTR [rbx],rax
   140056ebf:	cmp    DWORD PTR [rsi+0x8],r12d
   140056ec3:	jne    0x14005b3df
   140056ec9:	lea    rdx,[rbp+0x28]
   140056ecd:	lea    rcx,[rsi+0x30]
   140056ed1:	mov    DWORD PTR [rbp+0x28],0x279
   140056ed8:	call   0x14002ffd0
   140056edd:	lea    rcx,[rip+0x1cfac]        # 0x140073e90
   140056ee4:	lea    rdx,[rbp+0x28]
   140056ee8:	mov    DWORD PTR [rax],0x21c
   140056eee:	mov    DWORD PTR [rax+0x4],0x279
   140056ef5:	mov    QWORD PTR [rax+0x8],rcx
   140056ef9:	lea    rcx,[rsi+0x10]
   140056efd:	mov    DWORD PTR [rbp+0x30],0x279
   140056f04:	mov    DWORD PTR [rbp+0x28],0x21c
   140056f0b:	call   0x14002ff30
   140056f10:	lea    rdx,[rbp+0x30]
   140056f14:	lea    rcx,[rsi+0x30]
   140056f18:	mov    rbx,rax
   140056f1b:	call   0x14002ffd0
   140056f20:	mov    QWORD PTR [rbx],rax
   140056f23:	cmp    DWORD PTR [rsi+0x8],r12d
   140056f27:	jne    0x14005b3df
   140056f2d:	lea    rdx,[rbp+0x28]
   140056f31:	lea    rcx,[rsi+0x30]
   140056f35:	mov    DWORD PTR [rbp+0x28],0x3b1
   140056f3c:	call   0x14002ffd0
   140056f41:	lea    rcx,[rip+0x1cf60]        # 0x140073ea8
   140056f48:	lea    rdx,[rbp+0x28]
   140056f4c:	mov    DWORD PTR [rax],0xffffffff
   140056f52:	mov    DWORD PTR [rax+0x4],0x3b1
   140056f59:	mov    QWORD PTR [rax+0x8],rcx
   140056f5d:	lea    rcx,[rsi+0x10]
   140056f61:	mov    DWORD PTR [rbp+0x30],0x3b1
   140056f68:	mov    DWORD PTR [rbp+0x28],0xffffffff
   140056f6f:	call   0x14002ff30
   140056f74:	lea    rdx,[rbp+0x30]
   140056f78:	lea    rcx,[rsi+0x30]
   140056f7c:	mov    rbx,rax
   140056f7f:	call   0x14002ffd0
   140056f84:	mov    QWORD PTR [rbx],rax
   140056f87:	cmp    DWORD PTR [rsi+0x8],r12d
   140056f8b:	jne    0x14005b3df
   140056f91:	lea    rdx,[rbp+0x28]
   140056f95:	lea    rcx,[rsi+0x30]
   140056f99:	mov    DWORD PTR [rbp+0x28],0x3b2
   140056fa0:	call   0x14002ffd0
   140056fa5:	lea    rcx,[rip+0x1cf14]        # 0x140073ec0
   140056fac:	lea    rdx,[rbp+0x28]
   140056fb0:	mov    DWORD PTR [rax],0x21e
   140056fb6:	mov    DWORD PTR [rax+0x4],0x3b2
   140056fbd:	mov    QWORD PTR [rax+0x8],rcx
   140056fc1:	lea    rcx,[rsi+0x10]
   140056fc5:	mov    DWORD PTR [rbp+0x30],0x3b2
   140056fcc:	mov    DWORD PTR [rbp+0x28],0x21e
   140056fd3:	call   0x14002ff30
   140056fd8:	lea    rdx,[rbp+0x30]
   140056fdc:	lea    rcx,[rsi+0x30]
   140056fe0:	mov    rbx,rax
   140056fe3:	call   0x14002ffd0
   140056fe8:	mov    QWORD PTR [rbx],rax
   140056feb:	cmp    DWORD PTR [rsi+0x8],r12d
   140056fef:	jne    0x14005b3df
   140056ff5:	lea    rdx,[rbp+0x28]
   140056ff9:	lea    rcx,[rsi+0x30]
   140056ffd:	mov    DWORD PTR [rbp+0x28],0x3b3
   140057004:	call   0x14002ffd0
   140057009:	lea    rcx,[rip+0x1cec8]        # 0x140073ed8
   140057010:	lea    rdx,[rbp+0x28]
   140057014:	mov    DWORD PTR [rax],0x21f
   14005701a:	mov    DWORD PTR [rax+0x4],0x3b3
   140057021:	mov    QWORD PTR [rax+0x8],rcx
   140057025:	lea    rcx,[rsi+0x10]
   140057029:	mov    DWORD PTR [rbp+0x30],0x3b3
   140057030:	mov    DWORD PTR [rbp+0x28],0x21f
   140057037:	call   0x14002ff30
   14005703c:	lea    rdx,[rbp+0x30]
   140057040:	lea    rcx,[rsi+0x30]
   140057044:	mov    rbx,rax
   140057047:	call   0x14002ffd0
   14005704c:	mov    QWORD PTR [rbx],rax
   14005704f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057053:	jne    0x14005b3df
   140057059:	lea    rdx,[rbp+0x28]
   14005705d:	lea    rcx,[rsi+0x30]
   140057061:	mov    DWORD PTR [rbp+0x28],0x3b4
   140057068:	call   0x14002ffd0
   14005706d:	lea    rcx,[rip+0x1ce7c]        # 0x140073ef0
   140057074:	lea    rdx,[rbp+0x28]
   140057078:	mov    DWORD PTR [rax],0x220
   14005707e:	mov    DWORD PTR [rax+0x4],0x3b4
   140057085:	mov    QWORD PTR [rax+0x8],rcx
   140057089:	lea    rcx,[rsi+0x10]
   14005708d:	mov    DWORD PTR [rbp+0x30],0x3b4
   140057094:	mov    DWORD PTR [rbp+0x28],0x220
   14005709b:	call   0x14002ff30
   1400570a0:	lea    rdx,[rbp+0x30]
   1400570a4:	lea    rcx,[rsi+0x30]
   1400570a8:	mov    rbx,rax
   1400570ab:	call   0x14002ffd0
   1400570b0:	mov    QWORD PTR [rbx],rax
   1400570b3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400570b7:	jne    0x14005b3df
   1400570bd:	lea    rdx,[rbp+0x28]
   1400570c1:	lea    rcx,[rsi+0x30]
   1400570c5:	mov    DWORD PTR [rbp+0x28],0x3b5
   1400570cc:	call   0x14002ffd0
   1400570d1:	lea    rcx,[rip+0x1ce38]        # 0x140073f10
   1400570d8:	lea    rdx,[rbp+0x28]
   1400570dc:	mov    DWORD PTR [rax],0x221
   1400570e2:	mov    DWORD PTR [rax+0x4],0x3b5
   1400570e9:	mov    QWORD PTR [rax+0x8],rcx
   1400570ed:	lea    rcx,[rsi+0x10]
   1400570f1:	mov    DWORD PTR [rbp+0x30],0x3b5
   1400570f8:	mov    DWORD PTR [rbp+0x28],0x221
   1400570ff:	call   0x14002ff30
   140057104:	lea    rdx,[rbp+0x30]
   140057108:	lea    rcx,[rsi+0x30]
   14005710c:	mov    rbx,rax
   14005710f:	call   0x14002ffd0
   140057114:	mov    QWORD PTR [rbx],rax
   140057117:	cmp    DWORD PTR [rsi+0x8],r12d
   14005711b:	jne    0x14005b3df
   140057121:	lea    rdx,[rbp+0x28]
   140057125:	lea    rcx,[rsi+0x30]
   140057129:	mov    DWORD PTR [rbp+0x28],0x3b6
   140057130:	call   0x14002ffd0
   140057135:	lea    rcx,[rip+0x1cdf4]        # 0x140073f30
   14005713c:	lea    rdx,[rbp+0x28]
   140057140:	mov    DWORD PTR [rax],0x222
   140057146:	mov    DWORD PTR [rax+0x4],0x3b6
   14005714d:	mov    QWORD PTR [rax+0x8],rcx
   140057151:	lea    rcx,[rsi+0x10]
   140057155:	mov    DWORD PTR [rbp+0x30],0x3b6
   14005715c:	mov    DWORD PTR [rbp+0x28],0x222
   140057163:	call   0x14002ff30
   140057168:	lea    rdx,[rbp+0x30]
   14005716c:	lea    rcx,[rsi+0x30]
   140057170:	mov    rbx,rax
   140057173:	call   0x14002ffd0
   140057178:	mov    QWORD PTR [rbx],rax
   14005717b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005717f:	jne    0x14005b3df
   140057185:	lea    rdx,[rbp+0x28]
   140057189:	lea    rcx,[rsi+0x30]
   14005718d:	mov    DWORD PTR [rbp+0x28],0x284
   140057194:	call   0x14002ffd0
   140057199:	lea    rcx,[rip+0x1cdb0]        # 0x140073f50
   1400571a0:	lea    rdx,[rbp+0x28]
   1400571a4:	mov    DWORD PTR [rax],0x223
   1400571aa:	mov    DWORD PTR [rax+0x4],0x284
   1400571b1:	mov    QWORD PTR [rax+0x8],rcx
   1400571b5:	lea    rcx,[rsi+0x10]
   1400571b9:	mov    DWORD PTR [rbp+0x30],0x284
   1400571c0:	mov    DWORD PTR [rbp+0x28],0x223
   1400571c7:	call   0x14002ff30
   1400571cc:	lea    rdx,[rbp+0x30]
   1400571d0:	lea    rcx,[rsi+0x30]
   1400571d4:	mov    rbx,rax
   1400571d7:	call   0x14002ffd0
   1400571dc:	mov    QWORD PTR [rbx],rax
   1400571df:	cmp    DWORD PTR [rsi+0x8],r12d
   1400571e3:	jne    0x14005b3df
   1400571e9:	lea    rdx,[rbp+0x28]
   1400571ed:	lea    rcx,[rsi+0x30]
   1400571f1:	mov    DWORD PTR [rbp+0x28],0x280
   1400571f8:	call   0x14002ffd0
   1400571fd:	lea    rcx,[rip+0x1cd64]        # 0x140073f68
   140057204:	lea    rdx,[rbp+0x28]
   140057208:	mov    DWORD PTR [rax],0x224
   14005720e:	mov    DWORD PTR [rax+0x4],0x280
   140057215:	mov    QWORD PTR [rax+0x8],rcx
   140057219:	lea    rcx,[rsi+0x10]
   14005721d:	mov    DWORD PTR [rbp+0x30],0x280
   140057224:	mov    DWORD PTR [rbp+0x28],0x224
   14005722b:	call   0x14002ff30
   140057230:	lea    rdx,[rbp+0x30]
   140057234:	lea    rcx,[rsi+0x30]
   140057238:	mov    rbx,rax
   14005723b:	call   0x14002ffd0
   140057240:	mov    QWORD PTR [rbx],rax
   140057243:	cmp    DWORD PTR [rsi+0x8],r12d
   140057247:	jne    0x14005b3df
   14005724d:	lea    rdx,[rbp+0x28]
   140057251:	lea    rcx,[rsi+0x30]
   140057255:	mov    DWORD PTR [rbp+0x28],0x282
   14005725c:	call   0x14002ffd0
   140057261:	lea    rcx,[rip+0x1cd18]        # 0x140073f80
   140057268:	lea    rdx,[rbp+0x28]
   14005726c:	mov    DWORD PTR [rax],0x225
   140057272:	mov    DWORD PTR [rax+0x4],0x282
   140057279:	mov    QWORD PTR [rax+0x8],rcx
   14005727d:	lea    rcx,[rsi+0x10]
   140057281:	mov    DWORD PTR [rbp+0x30],0x282
   140057288:	mov    DWORD PTR [rbp+0x28],0x225
   14005728f:	call   0x14002ff30
   140057294:	lea    rdx,[rbp+0x30]
   140057298:	lea    rcx,[rsi+0x30]
   14005729c:	mov    rbx,rax
   14005729f:	call   0x14002ffd0
   1400572a4:	mov    QWORD PTR [rbx],rax
   1400572a7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400572ab:	jne    0x14005b3df
   1400572b1:	lea    rdx,[rbp+0x28]
   1400572b5:	lea    rcx,[rsi+0x30]
   1400572b9:	mov    DWORD PTR [rbp+0x28],0x281
   1400572c0:	call   0x14002ffd0
   1400572c5:	lea    rcx,[rip+0x1cccc]        # 0x140073f98
   1400572cc:	lea    rdx,[rbp+0x28]
   1400572d0:	mov    DWORD PTR [rax],0x226
   1400572d6:	mov    DWORD PTR [rax+0x4],0x281
   1400572dd:	mov    QWORD PTR [rax+0x8],rcx
   1400572e1:	lea    rcx,[rsi+0x10]
   1400572e5:	mov    DWORD PTR [rbp+0x30],0x281
   1400572ec:	mov    DWORD PTR [rbp+0x28],0x226
   1400572f3:	call   0x14002ff30
   1400572f8:	lea    rdx,[rbp+0x30]
   1400572fc:	lea    rcx,[rsi+0x30]
   140057300:	mov    rbx,rax
   140057303:	call   0x14002ffd0
   140057308:	mov    QWORD PTR [rbx],rax
   14005730b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005730f:	jne    0x14005b3df
   140057315:	lea    rdx,[rbp+0x28]
   140057319:	lea    rcx,[rsi+0x30]
   14005731d:	mov    DWORD PTR [rbp+0x28],0x283
   140057324:	call   0x14002ffd0
   140057329:	lea    rcx,[rip+0x1cc80]        # 0x140073fb0
   140057330:	lea    rdx,[rbp+0x28]
   140057334:	mov    DWORD PTR [rax],0x227
   14005733a:	mov    DWORD PTR [rax+0x4],0x283
   140057341:	mov    QWORD PTR [rax+0x8],rcx
   140057345:	lea    rcx,[rsi+0x10]
   140057349:	mov    DWORD PTR [rbp+0x30],0x283
   140057350:	mov    DWORD PTR [rbp+0x28],0x227
   140057357:	call   0x14002ff30
   14005735c:	lea    rdx,[rbp+0x30]
   140057360:	lea    rcx,[rsi+0x30]
   140057364:	mov    rbx,rax
   140057367:	call   0x14002ffd0
   14005736c:	mov    QWORD PTR [rbx],rax
   14005736f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057373:	jne    0x14005b3df
   140057379:	lea    rdx,[rbp+0x28]
   14005737d:	lea    rcx,[rsi+0x30]
   140057381:	mov    DWORD PTR [rbp+0x28],0x28e
   140057388:	call   0x14002ffd0
   14005738d:	lea    rcx,[rip+0x1cc34]        # 0x140073fc8
   140057394:	lea    rdx,[rbp+0x28]
   140057398:	mov    DWORD PTR [rax],0x228
   14005739e:	mov    DWORD PTR [rax+0x4],0x28e
   1400573a5:	mov    QWORD PTR [rax+0x8],rcx
   1400573a9:	lea    rcx,[rsi+0x10]
   1400573ad:	mov    DWORD PTR [rbp+0x30],0x28e
   1400573b4:	mov    DWORD PTR [rbp+0x28],0x228
   1400573bb:	call   0x14002ff30
   1400573c0:	lea    rdx,[rbp+0x30]
   1400573c4:	lea    rcx,[rsi+0x30]
   1400573c8:	mov    rbx,rax
   1400573cb:	call   0x14002ffd0
   1400573d0:	mov    QWORD PTR [rbx],rax
   1400573d3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400573d7:	jne    0x14005b3df
   1400573dd:	lea    rdx,[rbp+0x28]
   1400573e1:	lea    rcx,[rsi+0x30]
   1400573e5:	mov    DWORD PTR [rbp+0x28],0x28a
   1400573ec:	call   0x14002ffd0
   1400573f1:	lea    rcx,[rip+0x1cbe8]        # 0x140073fe0
   1400573f8:	lea    rdx,[rbp+0x28]
   1400573fc:	mov    DWORD PTR [rax],0x229
   140057402:	mov    DWORD PTR [rax+0x4],0x28a
   140057409:	mov    QWORD PTR [rax+0x8],rcx
   14005740d:	lea    rcx,[rsi+0x10]
   140057411:	mov    DWORD PTR [rbp+0x30],0x28a
   140057418:	mov    DWORD PTR [rbp+0x28],0x229
   14005741f:	call   0x14002ff30
   140057424:	lea    rdx,[rbp+0x30]
   140057428:	lea    rcx,[rsi+0x30]
   14005742c:	mov    rbx,rax
   14005742f:	call   0x14002ffd0
   140057434:	mov    QWORD PTR [rbx],rax
   140057437:	cmp    DWORD PTR [rsi+0x8],r12d
   14005743b:	jne    0x14005b3df
   140057441:	lea    rdx,[rbp+0x28]
   140057445:	lea    rcx,[rsi+0x30]
   140057449:	mov    DWORD PTR [rbp+0x28],0x28c
   140057450:	call   0x14002ffd0
   140057455:	lea    rcx,[rip+0x1cb9c]        # 0x140073ff8
   14005745c:	lea    rdx,[rbp+0x28]
   140057460:	mov    DWORD PTR [rax],0x22a
   140057466:	mov    DWORD PTR [rax+0x4],0x28c
   14005746d:	mov    QWORD PTR [rax+0x8],rcx
   140057471:	lea    rcx,[rsi+0x10]
   140057475:	mov    DWORD PTR [rbp+0x30],0x28c
   14005747c:	mov    DWORD PTR [rbp+0x28],0x22a
   140057483:	call   0x14002ff30
   140057488:	lea    rdx,[rbp+0x30]
   14005748c:	lea    rcx,[rsi+0x30]
   140057490:	mov    rbx,rax
   140057493:	call   0x14002ffd0
   140057498:	mov    QWORD PTR [rbx],rax
   14005749b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005749f:	jne    0x14005b3df
   1400574a5:	lea    rdx,[rbp+0x28]
   1400574a9:	lea    rcx,[rsi+0x30]
   1400574ad:	mov    DWORD PTR [rbp+0x28],0x28b
   1400574b4:	call   0x14002ffd0
   1400574b9:	lea    rcx,[rip+0x1cb50]        # 0x140074010
   1400574c0:	lea    rdx,[rbp+0x28]
   1400574c4:	mov    DWORD PTR [rax],0x22b
   1400574ca:	mov    DWORD PTR [rax+0x4],0x28b
   1400574d1:	mov    QWORD PTR [rax+0x8],rcx
   1400574d5:	lea    rcx,[rsi+0x10]
   1400574d9:	mov    DWORD PTR [rbp+0x30],0x28b
   1400574e0:	mov    DWORD PTR [rbp+0x28],0x22b
   1400574e7:	call   0x14002ff30
   1400574ec:	lea    rdx,[rbp+0x30]
   1400574f0:	lea    rcx,[rsi+0x30]
   1400574f4:	mov    rbx,rax
   1400574f7:	call   0x14002ffd0
   1400574fc:	mov    QWORD PTR [rbx],rax
   1400574ff:	cmp    DWORD PTR [rsi+0x8],r12d
   140057503:	jne    0x14005b3df
   140057509:	lea    rdx,[rbp+0x28]
   14005750d:	lea    rcx,[rsi+0x30]
   140057511:	mov    DWORD PTR [rbp+0x28],0x28d
   140057518:	call   0x14002ffd0
   14005751d:	lea    rcx,[rip+0x1cb04]        # 0x140074028
   140057524:	lea    rdx,[rbp+0x28]
   140057528:	mov    DWORD PTR [rax],0x22c
   14005752e:	mov    DWORD PTR [rax+0x4],0x28d
   140057535:	mov    QWORD PTR [rax+0x8],rcx
   140057539:	lea    rcx,[rsi+0x10]
   14005753d:	mov    DWORD PTR [rbp+0x30],0x28d
   140057544:	mov    DWORD PTR [rbp+0x28],0x22c
   14005754b:	call   0x14002ff30
   140057550:	lea    rdx,[rbp+0x30]
   140057554:	lea    rcx,[rsi+0x30]
   140057558:	mov    rbx,rax
   14005755b:	call   0x14002ffd0
   140057560:	mov    QWORD PTR [rbx],rax
   140057563:	cmp    DWORD PTR [rsi+0x8],r12d
   140057567:	jne    0x14005b3df
   14005756d:	lea    rdx,[rbp+0x28]
   140057571:	lea    rcx,[rsi+0x30]
   140057575:	mov    DWORD PTR [rbp+0x28],0x298
   14005757c:	call   0x14002ffd0
   140057581:	lea    rcx,[rip+0x1cab8]        # 0x140074040
   140057588:	lea    rdx,[rbp+0x28]
   14005758c:	mov    DWORD PTR [rax],0x22d
   140057592:	mov    DWORD PTR [rax+0x4],0x298
   140057599:	mov    QWORD PTR [rax+0x8],rcx
   14005759d:	lea    rcx,[rsi+0x10]
   1400575a1:	mov    DWORD PTR [rbp+0x30],0x298
   1400575a8:	mov    DWORD PTR [rbp+0x28],0x22d
   1400575af:	call   0x14002ff30
   1400575b4:	lea    rdx,[rbp+0x30]
   1400575b8:	lea    rcx,[rsi+0x30]
   1400575bc:	mov    rbx,rax
   1400575bf:	call   0x14002ffd0
   1400575c4:	mov    QWORD PTR [rbx],rax
   1400575c7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400575cb:	jne    0x14005b3df
   1400575d1:	lea    rdx,[rbp+0x28]
   1400575d5:	lea    rcx,[rsi+0x30]
   1400575d9:	mov    DWORD PTR [rbp+0x28],0x294
   1400575e0:	call   0x14002ffd0
   1400575e5:	lea    rcx,[rip+0x1ca6c]        # 0x140074058
   1400575ec:	lea    rdx,[rbp+0x28]
   1400575f0:	mov    DWORD PTR [rax],0x22e
   1400575f6:	mov    DWORD PTR [rax+0x4],0x294
   1400575fd:	mov    QWORD PTR [rax+0x8],rcx
   140057601:	lea    rcx,[rsi+0x10]
   140057605:	mov    DWORD PTR [rbp+0x30],0x294
   14005760c:	mov    DWORD PTR [rbp+0x28],0x22e
   140057613:	call   0x14002ff30
   140057618:	lea    rdx,[rbp+0x30]
   14005761c:	lea    rcx,[rsi+0x30]
   140057620:	mov    rbx,rax
   140057623:	call   0x14002ffd0
   140057628:	mov    QWORD PTR [rbx],rax
   14005762b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005762f:	jne    0x14005b3df
   140057635:	lea    rdx,[rbp+0x28]
   140057639:	lea    rcx,[rsi+0x30]
   14005763d:	mov    DWORD PTR [rbp+0x28],0x296
   140057644:	call   0x14002ffd0
   140057649:	lea    rcx,[rip+0x1ca20]        # 0x140074070
   140057650:	lea    rdx,[rbp+0x28]
   140057654:	mov    DWORD PTR [rax],0x22f
   14005765a:	mov    DWORD PTR [rax+0x4],0x296
   140057661:	mov    QWORD PTR [rax+0x8],rcx
   140057665:	lea    rcx,[rsi+0x10]
   140057669:	mov    DWORD PTR [rbp+0x30],0x296
   140057670:	mov    DWORD PTR [rbp+0x28],0x22f
   140057677:	call   0x14002ff30
   14005767c:	lea    rdx,[rbp+0x30]
   140057680:	lea    rcx,[rsi+0x30]
   140057684:	mov    rbx,rax
   140057687:	call   0x14002ffd0
   14005768c:	mov    QWORD PTR [rbx],rax
   14005768f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057693:	jne    0x14005b3df
   140057699:	lea    rdx,[rbp+0x28]
   14005769d:	lea    rcx,[rsi+0x30]
   1400576a1:	mov    DWORD PTR [rbp+0x28],0x295
   1400576a8:	call   0x14002ffd0
   1400576ad:	lea    rcx,[rip+0x1c9d4]        # 0x140074088
   1400576b4:	lea    rdx,[rbp+0x28]
   1400576b8:	mov    DWORD PTR [rax],0x230
   1400576be:	mov    DWORD PTR [rax+0x4],0x295
   1400576c5:	mov    QWORD PTR [rax+0x8],rcx
   1400576c9:	lea    rcx,[rsi+0x10]
   1400576cd:	mov    DWORD PTR [rbp+0x30],0x295
   1400576d4:	mov    DWORD PTR [rbp+0x28],0x230
   1400576db:	call   0x14002ff30
   1400576e0:	lea    rdx,[rbp+0x30]
   1400576e4:	lea    rcx,[rsi+0x30]
   1400576e8:	mov    rbx,rax
   1400576eb:	call   0x14002ffd0
   1400576f0:	mov    QWORD PTR [rbx],rax
   1400576f3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400576f7:	jne    0x14005b3df
   1400576fd:	lea    rdx,[rbp+0x28]
   140057701:	lea    rcx,[rsi+0x30]
   140057705:	mov    DWORD PTR [rbp+0x28],0x297
   14005770c:	call   0x14002ffd0
   140057711:	lea    rcx,[rip+0x1c988]        # 0x1400740a0
   140057718:	lea    rdx,[rbp+0x28]
   14005771c:	mov    DWORD PTR [rax],0x231
   140057722:	mov    DWORD PTR [rax+0x4],0x297
   140057729:	mov    QWORD PTR [rax+0x8],rcx
   14005772d:	lea    rcx,[rsi+0x10]
   140057731:	mov    DWORD PTR [rbp+0x30],0x297
   140057738:	mov    DWORD PTR [rbp+0x28],0x231
   14005773f:	call   0x14002ff30
   140057744:	lea    rdx,[rbp+0x30]
   140057748:	lea    rcx,[rsi+0x30]
   14005774c:	mov    rbx,rax
   14005774f:	call   0x14002ffd0
   140057754:	mov    QWORD PTR [rbx],rax
   140057757:	cmp    DWORD PTR [rsi+0x8],r12d
   14005775b:	jne    0x14005b3df
   140057761:	lea    rdx,[rbp+0x28]
   140057765:	lea    rcx,[rsi+0x30]
   140057769:	mov    DWORD PTR [rbp+0x28],0x2a2
   140057770:	call   0x14002ffd0
   140057775:	lea    rcx,[rip+0x1c93c]        # 0x1400740b8
   14005777c:	lea    rdx,[rbp+0x28]
   140057780:	mov    DWORD PTR [rax],0x232
   140057786:	mov    DWORD PTR [rax+0x4],0x2a2
   14005778d:	mov    QWORD PTR [rax+0x8],rcx
   140057791:	lea    rcx,[rsi+0x10]
   140057795:	mov    DWORD PTR [rbp+0x30],0x2a2
   14005779c:	mov    DWORD PTR [rbp+0x28],0x232
   1400577a3:	call   0x14002ff30
   1400577a8:	lea    rdx,[rbp+0x30]
   1400577ac:	lea    rcx,[rsi+0x30]
   1400577b0:	mov    rbx,rax
   1400577b3:	call   0x14002ffd0
   1400577b8:	mov    QWORD PTR [rbx],rax
   1400577bb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400577bf:	jne    0x14005b3df
   1400577c5:	lea    rdx,[rbp+0x28]
   1400577c9:	lea    rcx,[rsi+0x30]
   1400577cd:	mov    DWORD PTR [rbp+0x28],0x29e
   1400577d4:	call   0x14002ffd0
   1400577d9:	lea    rcx,[rip+0x1c8f0]        # 0x1400740d0
   1400577e0:	lea    rdx,[rbp+0x28]
   1400577e4:	mov    DWORD PTR [rax],0x233
   1400577ea:	mov    DWORD PTR [rax+0x4],0x29e
   1400577f1:	mov    QWORD PTR [rax+0x8],rcx
   1400577f5:	lea    rcx,[rsi+0x10]
   1400577f9:	mov    DWORD PTR [rbp+0x30],0x29e
   140057800:	mov    DWORD PTR [rbp+0x28],0x233
   140057807:	call   0x14002ff30
   14005780c:	lea    rdx,[rbp+0x30]
   140057810:	lea    rcx,[rsi+0x30]
   140057814:	mov    rbx,rax
   140057817:	call   0x14002ffd0
   14005781c:	mov    QWORD PTR [rbx],rax
   14005781f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057823:	jne    0x14005b3df
   140057829:	lea    rdx,[rbp+0x28]
   14005782d:	lea    rcx,[rsi+0x30]
   140057831:	mov    DWORD PTR [rbp+0x28],0x2a0
   140057838:	call   0x14002ffd0
   14005783d:	lea    rcx,[rip+0x1c8a4]        # 0x1400740e8
   140057844:	lea    rdx,[rbp+0x28]
   140057848:	mov    DWORD PTR [rax],0x234
   14005784e:	mov    DWORD PTR [rax+0x4],0x2a0
   140057855:	mov    QWORD PTR [rax+0x8],rcx
   140057859:	lea    rcx,[rsi+0x10]
   14005785d:	mov    DWORD PTR [rbp+0x30],0x2a0
   140057864:	mov    DWORD PTR [rbp+0x28],0x234
   14005786b:	call   0x14002ff30
   140057870:	lea    rdx,[rbp+0x30]
   140057874:	lea    rcx,[rsi+0x30]
   140057878:	mov    rbx,rax
   14005787b:	call   0x14002ffd0
   140057880:	mov    QWORD PTR [rbx],rax
   140057883:	cmp    DWORD PTR [rsi+0x8],r12d
   140057887:	jne    0x14005b3df
   14005788d:	lea    rdx,[rbp+0x28]
   140057891:	lea    rcx,[rsi+0x30]
   140057895:	mov    DWORD PTR [rbp+0x28],0x29f
   14005789c:	call   0x14002ffd0
   1400578a1:	lea    rcx,[rip+0x1c858]        # 0x140074100
   1400578a8:	lea    rdx,[rbp+0x28]
   1400578ac:	mov    DWORD PTR [rax],0x235
   1400578b2:	mov    DWORD PTR [rax+0x4],0x29f
   1400578b9:	mov    QWORD PTR [rax+0x8],rcx
   1400578bd:	lea    rcx,[rsi+0x10]
   1400578c1:	mov    DWORD PTR [rbp+0x30],0x29f
   1400578c8:	mov    DWORD PTR [rbp+0x28],0x235
   1400578cf:	call   0x14002ff30
   1400578d4:	lea    rdx,[rbp+0x30]
   1400578d8:	lea    rcx,[rsi+0x30]
   1400578dc:	mov    rbx,rax
   1400578df:	call   0x14002ffd0
   1400578e4:	mov    QWORD PTR [rbx],rax
   1400578e7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400578eb:	jne    0x14005b3df
   1400578f1:	lea    rdx,[rbp+0x28]
   1400578f5:	lea    rcx,[rsi+0x30]
   1400578f9:	mov    DWORD PTR [rbp+0x28],0x2a1
   140057900:	call   0x14002ffd0
   140057905:	lea    rcx,[rip+0x1c80c]        # 0x140074118
   14005790c:	lea    rdx,[rbp+0x28]
   140057910:	mov    DWORD PTR [rax],0x236
   140057916:	mov    DWORD PTR [rax+0x4],0x2a1
   14005791d:	mov    QWORD PTR [rax+0x8],rcx
   140057921:	lea    rcx,[rsi+0x10]
   140057925:	mov    DWORD PTR [rbp+0x30],0x2a1
   14005792c:	mov    DWORD PTR [rbp+0x28],0x236
   140057933:	call   0x14002ff30
   140057938:	lea    rdx,[rbp+0x30]
   14005793c:	lea    rcx,[rsi+0x30]
   140057940:	mov    rbx,rax
   140057943:	call   0x14002ffd0
   140057948:	mov    QWORD PTR [rbx],rax
   14005794b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005794f:	jne    0x14005b3df
   140057955:	lea    rdx,[rbp+0x28]
   140057959:	lea    rcx,[rsi+0x30]
   14005795d:	mov    DWORD PTR [rbp+0x28],0x2ac
   140057964:	call   0x14002ffd0
   140057969:	lea    rcx,[rip+0x1c7c0]        # 0x140074130
   140057970:	lea    rdx,[rbp+0x28]
   140057974:	mov    DWORD PTR [rax],0x237
   14005797a:	mov    DWORD PTR [rax+0x4],0x2ac
   140057981:	mov    QWORD PTR [rax+0x8],rcx
   140057985:	lea    rcx,[rsi+0x10]
   140057989:	mov    DWORD PTR [rbp+0x30],0x2ac
   140057990:	mov    DWORD PTR [rbp+0x28],0x237
   140057997:	call   0x14002ff30
   14005799c:	lea    rdx,[rbp+0x30]
   1400579a0:	lea    rcx,[rsi+0x30]
   1400579a4:	mov    rbx,rax
   1400579a7:	call   0x14002ffd0
   1400579ac:	mov    QWORD PTR [rbx],rax
   1400579af:	cmp    DWORD PTR [rsi+0x8],r12d
   1400579b3:	jne    0x14005b3df
   1400579b9:	lea    rdx,[rbp+0x28]
   1400579bd:	lea    rcx,[rsi+0x30]
   1400579c1:	mov    DWORD PTR [rbp+0x28],0x2a8
   1400579c8:	call   0x14002ffd0
   1400579cd:	lea    rcx,[rip+0x1c774]        # 0x140074148
   1400579d4:	lea    rdx,[rbp+0x28]
   1400579d8:	mov    DWORD PTR [rax],0x238
   1400579de:	mov    DWORD PTR [rax+0x4],0x2a8
   1400579e5:	mov    QWORD PTR [rax+0x8],rcx
   1400579e9:	lea    rcx,[rsi+0x10]
   1400579ed:	mov    DWORD PTR [rbp+0x30],0x2a8
   1400579f4:	mov    DWORD PTR [rbp+0x28],0x238
   1400579fb:	call   0x14002ff30
   140057a00:	lea    rdx,[rbp+0x30]
   140057a04:	lea    rcx,[rsi+0x30]
   140057a08:	mov    rbx,rax
   140057a0b:	call   0x14002ffd0
   140057a10:	mov    QWORD PTR [rbx],rax
   140057a13:	cmp    DWORD PTR [rsi+0x8],r12d
   140057a17:	jne    0x14005b3df
   140057a1d:	lea    rdx,[rbp+0x28]
   140057a21:	lea    rcx,[rsi+0x30]
   140057a25:	mov    DWORD PTR [rbp+0x28],0x2aa
   140057a2c:	call   0x14002ffd0
   140057a31:	lea    rcx,[rip+0x1c728]        # 0x140074160
   140057a38:	lea    rdx,[rbp+0x28]
   140057a3c:	mov    DWORD PTR [rax],0x239
   140057a42:	mov    DWORD PTR [rax+0x4],0x2aa
   140057a49:	mov    QWORD PTR [rax+0x8],rcx
   140057a4d:	lea    rcx,[rsi+0x10]
   140057a51:	mov    DWORD PTR [rbp+0x30],0x2aa
   140057a58:	mov    DWORD PTR [rbp+0x28],0x239
   140057a5f:	call   0x14002ff30
   140057a64:	lea    rdx,[rbp+0x30]
   140057a68:	lea    rcx,[rsi+0x30]
   140057a6c:	mov    rbx,rax
   140057a6f:	call   0x14002ffd0
   140057a74:	mov    QWORD PTR [rbx],rax
   140057a77:	cmp    DWORD PTR [rsi+0x8],r12d
   140057a7b:	jne    0x14005b3df
   140057a81:	lea    rdx,[rbp+0x28]
   140057a85:	lea    rcx,[rsi+0x30]
   140057a89:	mov    DWORD PTR [rbp+0x28],0x2a9
   140057a90:	call   0x14002ffd0
   140057a95:	lea    rcx,[rip+0x1c6dc]        # 0x140074178
   140057a9c:	lea    rdx,[rbp+0x28]
   140057aa0:	mov    DWORD PTR [rax],0x23a
   140057aa6:	mov    DWORD PTR [rax+0x4],0x2a9
   140057aad:	mov    QWORD PTR [rax+0x8],rcx
   140057ab1:	lea    rcx,[rsi+0x10]
   140057ab5:	mov    DWORD PTR [rbp+0x30],0x2a9
   140057abc:	mov    DWORD PTR [rbp+0x28],0x23a
   140057ac3:	call   0x14002ff30
   140057ac8:	lea    rdx,[rbp+0x30]
   140057acc:	lea    rcx,[rsi+0x30]
   140057ad0:	mov    rbx,rax
   140057ad3:	call   0x14002ffd0
   140057ad8:	mov    QWORD PTR [rbx],rax
   140057adb:	cmp    DWORD PTR [rsi+0x8],r12d
   140057adf:	jne    0x14005b3df
   140057ae5:	lea    rdx,[rbp+0x28]
   140057ae9:	lea    rcx,[rsi+0x30]
   140057aed:	mov    DWORD PTR [rbp+0x28],0x2ab
   140057af4:	call   0x14002ffd0
   140057af9:	lea    rcx,[rip+0x1c690]        # 0x140074190
   140057b00:	lea    rdx,[rbp+0x28]
   140057b04:	mov    DWORD PTR [rax],0x23b
   140057b0a:	mov    DWORD PTR [rax+0x4],0x2ab
   140057b11:	mov    QWORD PTR [rax+0x8],rcx
   140057b15:	lea    rcx,[rsi+0x10]
   140057b19:	mov    DWORD PTR [rbp+0x30],0x2ab
   140057b20:	mov    DWORD PTR [rbp+0x28],0x23b
   140057b27:	call   0x14002ff30
   140057b2c:	lea    rdx,[rbp+0x30]
   140057b30:	lea    rcx,[rsi+0x30]
   140057b34:	mov    rbx,rax
   140057b37:	call   0x14002ffd0
   140057b3c:	mov    QWORD PTR [rbx],rax
   140057b3f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057b43:	jne    0x14005b3df
   140057b49:	lea    rdx,[rbp+0x28]
   140057b4d:	lea    rcx,[rsi+0x30]
   140057b51:	mov    DWORD PTR [rbp+0x28],0x2b6
   140057b58:	call   0x14002ffd0
   140057b5d:	lea    rcx,[rip+0x1c644]        # 0x1400741a8
   140057b64:	lea    rdx,[rbp+0x28]
   140057b68:	mov    DWORD PTR [rax],0x23c
   140057b6e:	mov    DWORD PTR [rax+0x4],0x2b6
   140057b75:	mov    QWORD PTR [rax+0x8],rcx
   140057b79:	lea    rcx,[rsi+0x10]
   140057b7d:	mov    DWORD PTR [rbp+0x30],0x2b6
   140057b84:	mov    DWORD PTR [rbp+0x28],0x23c
   140057b8b:	call   0x14002ff30
   140057b90:	lea    rdx,[rbp+0x30]
   140057b94:	lea    rcx,[rsi+0x30]
   140057b98:	mov    rbx,rax
   140057b9b:	call   0x14002ffd0
   140057ba0:	mov    QWORD PTR [rbx],rax
   140057ba3:	cmp    DWORD PTR [rsi+0x8],r12d
   140057ba7:	jne    0x14005b3df
   140057bad:	lea    rdx,[rbp+0x28]
   140057bb1:	lea    rcx,[rsi+0x30]
   140057bb5:	mov    DWORD PTR [rbp+0x28],0x2b2
   140057bbc:	call   0x14002ffd0
   140057bc1:	lea    rcx,[rip+0x1c5f8]        # 0x1400741c0
   140057bc8:	lea    rdx,[rbp+0x28]
   140057bcc:	mov    DWORD PTR [rax],0x23d
   140057bd2:	mov    DWORD PTR [rax+0x4],0x2b2
   140057bd9:	mov    QWORD PTR [rax+0x8],rcx
   140057bdd:	lea    rcx,[rsi+0x10]
   140057be1:	mov    DWORD PTR [rbp+0x30],0x2b2
   140057be8:	mov    DWORD PTR [rbp+0x28],0x23d
   140057bef:	call   0x14002ff30
   140057bf4:	lea    rdx,[rbp+0x30]
   140057bf8:	lea    rcx,[rsi+0x30]
   140057bfc:	mov    rbx,rax
   140057bff:	call   0x14002ffd0
   140057c04:	mov    QWORD PTR [rbx],rax
   140057c07:	cmp    DWORD PTR [rsi+0x8],r12d
   140057c0b:	jne    0x14005b3df
   140057c11:	lea    rdx,[rbp+0x28]
   140057c15:	lea    rcx,[rsi+0x30]
   140057c19:	mov    DWORD PTR [rbp+0x28],0x2b4
   140057c20:	call   0x14002ffd0
   140057c25:	lea    rcx,[rip+0x1c5ac]        # 0x1400741d8
   140057c2c:	lea    rdx,[rbp+0x28]
   140057c30:	mov    DWORD PTR [rax],0x23e
   140057c36:	mov    DWORD PTR [rax+0x4],0x2b4
   140057c3d:	mov    QWORD PTR [rax+0x8],rcx
   140057c41:	lea    rcx,[rsi+0x10]
   140057c45:	mov    DWORD PTR [rbp+0x30],0x2b4
   140057c4c:	mov    DWORD PTR [rbp+0x28],0x23e
   140057c53:	call   0x14002ff30
   140057c58:	lea    rdx,[rbp+0x30]
   140057c5c:	lea    rcx,[rsi+0x30]
   140057c60:	mov    rbx,rax
   140057c63:	call   0x14002ffd0
   140057c68:	mov    QWORD PTR [rbx],rax
   140057c6b:	cmp    DWORD PTR [rsi+0x8],r12d
   140057c6f:	jne    0x14005b3df
   140057c75:	lea    rdx,[rbp+0x28]
   140057c79:	lea    rcx,[rsi+0x30]
   140057c7d:	mov    DWORD PTR [rbp+0x28],0x2b3
   140057c84:	call   0x14002ffd0
   140057c89:	lea    rcx,[rip+0x1c560]        # 0x1400741f0
   140057c90:	lea    rdx,[rbp+0x28]
   140057c94:	mov    DWORD PTR [rax],0x23f
   140057c9a:	mov    DWORD PTR [rax+0x4],0x2b3
   140057ca1:	mov    QWORD PTR [rax+0x8],rcx
   140057ca5:	lea    rcx,[rsi+0x10]
   140057ca9:	mov    DWORD PTR [rbp+0x30],0x2b3
   140057cb0:	mov    DWORD PTR [rbp+0x28],0x23f
   140057cb7:	call   0x14002ff30
   140057cbc:	lea    rdx,[rbp+0x30]
   140057cc0:	lea    rcx,[rsi+0x30]
   140057cc4:	mov    rbx,rax
   140057cc7:	call   0x14002ffd0
   140057ccc:	mov    QWORD PTR [rbx],rax
   140057ccf:	cmp    DWORD PTR [rsi+0x8],r12d
   140057cd3:	jne    0x14005b3df
   140057cd9:	lea    rdx,[rbp+0x28]
   140057cdd:	lea    rcx,[rsi+0x30]
   140057ce1:	mov    DWORD PTR [rbp+0x28],0x2b5
   140057ce8:	call   0x14002ffd0
   140057ced:	lea    rcx,[rip+0x1c514]        # 0x140074208
   140057cf4:	lea    rdx,[rbp+0x28]
   140057cf8:	mov    DWORD PTR [rax],0x240
   140057cfe:	mov    DWORD PTR [rax+0x4],0x2b5
   140057d05:	mov    QWORD PTR [rax+0x8],rcx
   140057d09:	lea    rcx,[rsi+0x10]
   140057d0d:	mov    DWORD PTR [rbp+0x30],0x2b5
   140057d14:	mov    DWORD PTR [rbp+0x28],0x240
   140057d1b:	call   0x14002ff30
   140057d20:	lea    rdx,[rbp+0x30]
   140057d24:	lea    rcx,[rsi+0x30]
   140057d28:	mov    rbx,rax
   140057d2b:	call   0x14002ffd0
   140057d30:	mov    QWORD PTR [rbx],rax
   140057d33:	cmp    DWORD PTR [rsi+0x8],r12d
   140057d37:	jne    0x14005b3df
   140057d3d:	lea    rdx,[rbp+0x28]
   140057d41:	lea    rcx,[rsi+0x30]
   140057d45:	mov    DWORD PTR [rbp+0x28],0x2c0
   140057d4c:	call   0x14002ffd0
   140057d51:	lea    rcx,[rip+0x1c4c8]        # 0x140074220
   140057d58:	lea    rdx,[rbp+0x28]
   140057d5c:	mov    DWORD PTR [rax],0x241
   140057d62:	mov    DWORD PTR [rax+0x4],0x2c0
   140057d69:	mov    QWORD PTR [rax+0x8],rcx
   140057d6d:	lea    rcx,[rsi+0x10]
   140057d71:	mov    DWORD PTR [rbp+0x30],0x2c0
   140057d78:	mov    DWORD PTR [rbp+0x28],0x241
   140057d7f:	call   0x14002ff30
   140057d84:	lea    rdx,[rbp+0x30]
   140057d88:	lea    rcx,[rsi+0x30]
   140057d8c:	mov    rbx,rax
   140057d8f:	call   0x14002ffd0
   140057d94:	mov    QWORD PTR [rbx],rax
   140057d97:	cmp    DWORD PTR [rsi+0x8],r12d
   140057d9b:	jne    0x14005b3df
   140057da1:	lea    rdx,[rbp+0x28]
   140057da5:	lea    rcx,[rsi+0x30]
   140057da9:	mov    DWORD PTR [rbp+0x28],0x2bc
   140057db0:	call   0x14002ffd0
   140057db5:	lea    rcx,[rip+0x1c47c]        # 0x140074238
   140057dbc:	lea    rdx,[rbp+0x28]
   140057dc0:	mov    DWORD PTR [rax],0x242
   140057dc6:	mov    DWORD PTR [rax+0x4],0x2bc
   140057dcd:	mov    QWORD PTR [rax+0x8],rcx
   140057dd1:	lea    rcx,[rsi+0x10]
   140057dd5:	mov    DWORD PTR [rbp+0x30],0x2bc
   140057ddc:	mov    DWORD PTR [rbp+0x28],0x242
   140057de3:	call   0x14002ff30
   140057de8:	lea    rdx,[rbp+0x30]
   140057dec:	lea    rcx,[rsi+0x30]
   140057df0:	mov    rbx,rax
   140057df3:	call   0x14002ffd0
   140057df8:	mov    QWORD PTR [rbx],rax
   140057dfb:	cmp    DWORD PTR [rsi+0x8],r12d
   140057dff:	jne    0x14005b3df
   140057e05:	lea    rdx,[rbp+0x28]
   140057e09:	lea    rcx,[rsi+0x30]
   140057e0d:	mov    DWORD PTR [rbp+0x28],0x2be
   140057e14:	call   0x14002ffd0
   140057e19:	lea    rcx,[rip+0x1c430]        # 0x140074250
   140057e20:	lea    rdx,[rbp+0x28]
   140057e24:	mov    DWORD PTR [rax],0x243
   140057e2a:	mov    DWORD PTR [rax+0x4],0x2be
   140057e31:	mov    QWORD PTR [rax+0x8],rcx
   140057e35:	lea    rcx,[rsi+0x10]
   140057e39:	mov    DWORD PTR [rbp+0x30],0x2be
   140057e40:	mov    DWORD PTR [rbp+0x28],0x243
   140057e47:	call   0x14002ff30
   140057e4c:	lea    rdx,[rbp+0x30]
   140057e50:	lea    rcx,[rsi+0x30]
   140057e54:	mov    rbx,rax
   140057e57:	call   0x14002ffd0
   140057e5c:	mov    QWORD PTR [rbx],rax
   140057e5f:	cmp    DWORD PTR [rsi+0x8],r12d
   140057e63:	jne    0x14005b3df
   140057e69:	lea    rdx,[rbp+0x28]
   140057e6d:	lea    rcx,[rsi+0x30]
   140057e71:	mov    DWORD PTR [rbp+0x28],0x2bd
   140057e78:	call   0x14002ffd0
   140057e7d:	lea    rcx,[rip+0x1c3e4]        # 0x140074268
   140057e84:	lea    rdx,[rbp+0x28]
   140057e88:	mov    DWORD PTR [rax],0x244
   140057e8e:	mov    DWORD PTR [rax+0x4],0x2bd
   140057e95:	mov    QWORD PTR [rax+0x8],rcx
   140057e99:	lea    rcx,[rsi+0x10]
   140057e9d:	mov    DWORD PTR [rbp+0x30],0x2bd
   140057ea4:	mov    DWORD PTR [rbp+0x28],0x244
   140057eab:	call   0x14002ff30
   140057eb0:	lea    rdx,[rbp+0x30]
   140057eb4:	lea    rcx,[rsi+0x30]
   140057eb8:	mov    rbx,rax
   140057ebb:	call   0x14002ffd0
   140057ec0:	mov    QWORD PTR [rbx],rax
   140057ec3:	cmp    DWORD PTR [rsi+0x8],r12d
   140057ec7:	jne    0x14005b3df
   140057ecd:	lea    rdx,[rbp+0x28]
   140057ed1:	lea    rcx,[rsi+0x30]
   140057ed5:	mov    DWORD PTR [rbp+0x28],0x2bf
   140057edc:	call   0x14002ffd0
   140057ee1:	lea    rcx,[rip+0x1c398]        # 0x140074280
   140057ee8:	lea    rdx,[rbp+0x28]
   140057eec:	mov    DWORD PTR [rax],0x245
   140057ef2:	mov    DWORD PTR [rax+0x4],0x2bf
   140057ef9:	mov    QWORD PTR [rax+0x8],rcx
   140057efd:	lea    rcx,[rsi+0x10]
   140057f01:	mov    DWORD PTR [rbp+0x30],0x2bf
   140057f08:	mov    DWORD PTR [rbp+0x28],0x245
   140057f0f:	call   0x14002ff30
   140057f14:	lea    rdx,[rbp+0x30]
   140057f18:	lea    rcx,[rsi+0x30]
   140057f1c:	mov    rbx,rax
   140057f1f:	call   0x14002ffd0
   140057f24:	mov    QWORD PTR [rbx],rax
   140057f27:	cmp    DWORD PTR [rsi+0x8],r12d
   140057f2b:	jne    0x14005b3df
   140057f31:	lea    rdx,[rbp+0x28]
   140057f35:	lea    rcx,[rsi+0x30]
   140057f39:	mov    DWORD PTR [rbp+0x28],0x2ca
   140057f40:	call   0x14002ffd0
   140057f45:	lea    rcx,[rip+0x1c34c]        # 0x140074298
   140057f4c:	lea    rdx,[rbp+0x28]
   140057f50:	mov    DWORD PTR [rax],0x246
   140057f56:	mov    DWORD PTR [rax+0x4],0x2ca
   140057f5d:	mov    QWORD PTR [rax+0x8],rcx
   140057f61:	lea    rcx,[rsi+0x10]
   140057f65:	mov    DWORD PTR [rbp+0x30],0x2ca
   140057f6c:	mov    DWORD PTR [rbp+0x28],0x246
   140057f73:	call   0x14002ff30
   140057f78:	lea    rdx,[rbp+0x30]
   140057f7c:	lea    rcx,[rsi+0x30]
   140057f80:	mov    rbx,rax
   140057f83:	call   0x14002ffd0
   140057f88:	mov    QWORD PTR [rbx],rax
   140057f8b:	cmp    DWORD PTR [rsi+0x8],r12d
   140057f8f:	jne    0x14005b3df
   140057f95:	lea    rdx,[rbp+0x28]
   140057f99:	lea    rcx,[rsi+0x30]
   140057f9d:	mov    DWORD PTR [rbp+0x28],0x2c6
   140057fa4:	call   0x14002ffd0
   140057fa9:	lea    rcx,[rip+0x1c300]        # 0x1400742b0
   140057fb0:	lea    rdx,[rbp+0x28]
   140057fb4:	mov    DWORD PTR [rax],0x247
   140057fba:	mov    DWORD PTR [rax+0x4],0x2c6
   140057fc1:	mov    QWORD PTR [rax+0x8],rcx
   140057fc5:	lea    rcx,[rsi+0x10]
   140057fc9:	mov    DWORD PTR [rbp+0x30],0x2c6
   140057fd0:	mov    DWORD PTR [rbp+0x28],0x247
   140057fd7:	call   0x14002ff30
   140057fdc:	lea    rdx,[rbp+0x30]
   140057fe0:	lea    rcx,[rsi+0x30]
   140057fe4:	mov    rbx,rax
   140057fe7:	call   0x14002ffd0
   140057fec:	mov    QWORD PTR [rbx],rax
   140057fef:	cmp    DWORD PTR [rsi+0x8],r12d
   140057ff3:	jne    0x14005b3df
   140057ff9:	lea    rdx,[rbp+0x28]
   140057ffd:	lea    rcx,[rsi+0x30]
   140058001:	mov    DWORD PTR [rbp+0x28],0x2c8
   140058008:	call   0x14002ffd0
   14005800d:	lea    rcx,[rip+0x1c2b4]        # 0x1400742c8
   140058014:	lea    rdx,[rbp+0x28]
   140058018:	mov    DWORD PTR [rax],0x248
   14005801e:	mov    DWORD PTR [rax+0x4],0x2c8
   140058025:	mov    QWORD PTR [rax+0x8],rcx
   140058029:	lea    rcx,[rsi+0x10]
   14005802d:	mov    DWORD PTR [rbp+0x30],0x2c8
   140058034:	mov    DWORD PTR [rbp+0x28],0x248
   14005803b:	call   0x14002ff30
   140058040:	lea    rdx,[rbp+0x30]
   140058044:	lea    rcx,[rsi+0x30]
   140058048:	mov    rbx,rax
   14005804b:	call   0x14002ffd0
   140058050:	mov    QWORD PTR [rbx],rax
   140058053:	cmp    DWORD PTR [rsi+0x8],r12d
   140058057:	jne    0x14005b3df
   14005805d:	lea    rdx,[rbp+0x28]
   140058061:	lea    rcx,[rsi+0x30]
   140058065:	mov    DWORD PTR [rbp+0x28],0x2c7
   14005806c:	call   0x14002ffd0
   140058071:	lea    rcx,[rip+0x1c268]        # 0x1400742e0
   140058078:	lea    rdx,[rbp+0x28]
   14005807c:	mov    DWORD PTR [rax],0x249
   140058082:	mov    DWORD PTR [rax+0x4],0x2c7
   140058089:	mov    QWORD PTR [rax+0x8],rcx
   14005808d:	lea    rcx,[rsi+0x10]
   140058091:	mov    DWORD PTR [rbp+0x30],0x2c7
   140058098:	mov    DWORD PTR [rbp+0x28],0x249
   14005809f:	call   0x14002ff30
   1400580a4:	lea    rdx,[rbp+0x30]
   1400580a8:	lea    rcx,[rsi+0x30]
   1400580ac:	mov    rbx,rax
   1400580af:	call   0x14002ffd0
   1400580b4:	mov    QWORD PTR [rbx],rax
   1400580b7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400580bb:	jne    0x14005b3df
   1400580c1:	lea    rdx,[rbp+0x28]
   1400580c5:	lea    rcx,[rsi+0x30]
   1400580c9:	mov    DWORD PTR [rbp+0x28],0x2c9
   1400580d0:	call   0x14002ffd0
   1400580d5:	lea    rcx,[rip+0x1c21c]        # 0x1400742f8
   1400580dc:	lea    rdx,[rbp+0x28]
   1400580e0:	mov    DWORD PTR [rax],0x24a
   1400580e6:	mov    DWORD PTR [rax+0x4],0x2c9
   1400580ed:	mov    QWORD PTR [rax+0x8],rcx
   1400580f1:	lea    rcx,[rsi+0x10]
   1400580f5:	mov    DWORD PTR [rbp+0x30],0x2c9
   1400580fc:	mov    DWORD PTR [rbp+0x28],0x24a
   140058103:	call   0x14002ff30
   140058108:	lea    rdx,[rbp+0x30]
   14005810c:	lea    rcx,[rsi+0x30]
   140058110:	mov    rbx,rax
   140058113:	call   0x14002ffd0
   140058118:	mov    QWORD PTR [rbx],rax
   14005811b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005811f:	jne    0x14005b3df
   140058125:	lea    rdx,[rbp+0x28]
   140058129:	lea    rcx,[rsi+0x30]
   14005812d:	mov    DWORD PTR [rbp+0x28],0x2d4
   140058134:	call   0x14002ffd0
   140058139:	lea    rcx,[rip+0x1c1d0]        # 0x140074310
   140058140:	lea    rdx,[rbp+0x28]
   140058144:	mov    DWORD PTR [rax],0x24b
   14005814a:	mov    DWORD PTR [rax+0x4],0x2d4
   140058151:	mov    QWORD PTR [rax+0x8],rcx
   140058155:	lea    rcx,[rsi+0x10]
   140058159:	mov    DWORD PTR [rbp+0x30],0x2d4
   140058160:	mov    DWORD PTR [rbp+0x28],0x24b
   140058167:	call   0x14002ff30
   14005816c:	lea    rdx,[rbp+0x30]
   140058170:	lea    rcx,[rsi+0x30]
   140058174:	mov    rbx,rax
   140058177:	call   0x14002ffd0
   14005817c:	mov    QWORD PTR [rbx],rax
   14005817f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058183:	jne    0x14005b3df
   140058189:	lea    rdx,[rbp+0x28]
   14005818d:	lea    rcx,[rsi+0x30]
   140058191:	mov    DWORD PTR [rbp+0x28],0x2d0
   140058198:	call   0x14002ffd0
   14005819d:	lea    rcx,[rip+0x1c184]        # 0x140074328
   1400581a4:	lea    rdx,[rbp+0x28]
   1400581a8:	mov    DWORD PTR [rax],0x24c
   1400581ae:	mov    DWORD PTR [rax+0x4],0x2d0
   1400581b5:	mov    QWORD PTR [rax+0x8],rcx
   1400581b9:	lea    rcx,[rsi+0x10]
   1400581bd:	mov    DWORD PTR [rbp+0x30],0x2d0
   1400581c4:	mov    DWORD PTR [rbp+0x28],0x24c
   1400581cb:	call   0x14002ff30
   1400581d0:	lea    rdx,[rbp+0x30]
   1400581d4:	lea    rcx,[rsi+0x30]
   1400581d8:	mov    rbx,rax
   1400581db:	call   0x14002ffd0
   1400581e0:	mov    QWORD PTR [rbx],rax
   1400581e3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400581e7:	jne    0x14005b3df
   1400581ed:	lea    rdx,[rbp+0x28]
   1400581f1:	lea    rcx,[rsi+0x30]
   1400581f5:	mov    DWORD PTR [rbp+0x28],0x2d2
   1400581fc:	call   0x14002ffd0
   140058201:	lea    rcx,[rip+0x1c138]        # 0x140074340
   140058208:	lea    rdx,[rbp+0x28]
   14005820c:	mov    DWORD PTR [rax],0x24d
   140058212:	mov    DWORD PTR [rax+0x4],0x2d2
   140058219:	mov    QWORD PTR [rax+0x8],rcx
   14005821d:	lea    rcx,[rsi+0x10]
   140058221:	mov    DWORD PTR [rbp+0x30],0x2d2
   140058228:	mov    DWORD PTR [rbp+0x28],0x24d
   14005822f:	call   0x14002ff30
   140058234:	lea    rdx,[rbp+0x30]
   140058238:	lea    rcx,[rsi+0x30]
   14005823c:	mov    rbx,rax
   14005823f:	call   0x14002ffd0
   140058244:	mov    QWORD PTR [rbx],rax
   140058247:	cmp    DWORD PTR [rsi+0x8],r12d
   14005824b:	jne    0x14005b3df
   140058251:	lea    rdx,[rbp+0x28]
   140058255:	lea    rcx,[rsi+0x30]
   140058259:	mov    DWORD PTR [rbp+0x28],0x2d1
   140058260:	call   0x14002ffd0
   140058265:	lea    rcx,[rip+0x1c0ec]        # 0x140074358
   14005826c:	lea    rdx,[rbp+0x28]
   140058270:	mov    DWORD PTR [rax],0x24e
   140058276:	mov    DWORD PTR [rax+0x4],0x2d1
   14005827d:	mov    QWORD PTR [rax+0x8],rcx
   140058281:	lea    rcx,[rsi+0x10]
   140058285:	mov    DWORD PTR [rbp+0x30],0x2d1
   14005828c:	mov    DWORD PTR [rbp+0x28],0x24e
   140058293:	call   0x14002ff30
   140058298:	lea    rdx,[rbp+0x30]
   14005829c:	lea    rcx,[rsi+0x30]
   1400582a0:	mov    rbx,rax
   1400582a3:	call   0x14002ffd0
   1400582a8:	mov    QWORD PTR [rbx],rax
   1400582ab:	cmp    DWORD PTR [rsi+0x8],r12d
   1400582af:	jne    0x14005b3df
   1400582b5:	lea    rdx,[rbp+0x28]
   1400582b9:	lea    rcx,[rsi+0x30]
   1400582bd:	mov    DWORD PTR [rbp+0x28],0x2d3
   1400582c4:	call   0x14002ffd0
   1400582c9:	lea    rcx,[rip+0x1c0a0]        # 0x140074370
   1400582d0:	lea    rdx,[rbp+0x28]
   1400582d4:	mov    DWORD PTR [rax],0x24f
   1400582da:	mov    DWORD PTR [rax+0x4],0x2d3
   1400582e1:	mov    QWORD PTR [rax+0x8],rcx
   1400582e5:	lea    rcx,[rsi+0x10]
   1400582e9:	mov    DWORD PTR [rbp+0x30],0x2d3
   1400582f0:	mov    DWORD PTR [rbp+0x28],0x24f
   1400582f7:	call   0x14002ff30
   1400582fc:	lea    rdx,[rbp+0x30]
   140058300:	lea    rcx,[rsi+0x30]
   140058304:	mov    rbx,rax
   140058307:	call   0x14002ffd0
   14005830c:	mov    QWORD PTR [rbx],rax
   14005830f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058313:	jne    0x14005b3df
   140058319:	lea    rdx,[rbp+0x28]
   14005831d:	lea    rcx,[rsi+0x30]
   140058321:	mov    DWORD PTR [rbp+0x28],0x2de
   140058328:	call   0x14002ffd0
   14005832d:	lea    rcx,[rip+0x1c054]        # 0x140074388
   140058334:	lea    rdx,[rbp+0x28]
   140058338:	mov    DWORD PTR [rax],0x250
   14005833e:	mov    DWORD PTR [rax+0x4],0x2de
   140058345:	mov    QWORD PTR [rax+0x8],rcx
   140058349:	lea    rcx,[rsi+0x10]
   14005834d:	mov    DWORD PTR [rbp+0x30],0x2de
   140058354:	mov    DWORD PTR [rbp+0x28],0x250
   14005835b:	call   0x14002ff30
   140058360:	lea    rdx,[rbp+0x30]
   140058364:	lea    rcx,[rsi+0x30]
   140058368:	mov    rbx,rax
   14005836b:	call   0x14002ffd0
   140058370:	mov    QWORD PTR [rbx],rax
   140058373:	cmp    DWORD PTR [rsi+0x8],r12d
   140058377:	jne    0x14005b3df
   14005837d:	lea    rdx,[rbp+0x28]
   140058381:	lea    rcx,[rsi+0x30]
   140058385:	mov    DWORD PTR [rbp+0x28],0x2da
   14005838c:	call   0x14002ffd0
   140058391:	lea    rcx,[rip+0x1c008]        # 0x1400743a0
   140058398:	lea    rdx,[rbp+0x28]
   14005839c:	mov    DWORD PTR [rax],0x251
   1400583a2:	mov    DWORD PTR [rax+0x4],0x2da
   1400583a9:	mov    QWORD PTR [rax+0x8],rcx
   1400583ad:	lea    rcx,[rsi+0x10]
   1400583b1:	mov    DWORD PTR [rbp+0x30],0x2da
   1400583b8:	mov    DWORD PTR [rbp+0x28],0x251
   1400583bf:	call   0x14002ff30
   1400583c4:	lea    rdx,[rbp+0x30]
   1400583c8:	lea    rcx,[rsi+0x30]
   1400583cc:	mov    rbx,rax
   1400583cf:	call   0x14002ffd0
   1400583d4:	mov    QWORD PTR [rbx],rax
   1400583d7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400583db:	jne    0x14005b3df
   1400583e1:	lea    rdx,[rbp+0x28]
   1400583e5:	lea    rcx,[rsi+0x30]
   1400583e9:	mov    DWORD PTR [rbp+0x28],0x2dc
   1400583f0:	call   0x14002ffd0
   1400583f5:	lea    rcx,[rip+0x1bfbc]        # 0x1400743b8
   1400583fc:	lea    rdx,[rbp+0x28]
   140058400:	mov    DWORD PTR [rax],0x252
   140058406:	mov    DWORD PTR [rax+0x4],0x2dc
   14005840d:	mov    QWORD PTR [rax+0x8],rcx
   140058411:	lea    rcx,[rsi+0x10]
   140058415:	mov    DWORD PTR [rbp+0x30],0x2dc
   14005841c:	mov    DWORD PTR [rbp+0x28],0x252
   140058423:	call   0x14002ff30
   140058428:	lea    rdx,[rbp+0x30]
   14005842c:	lea    rcx,[rsi+0x30]
   140058430:	mov    rbx,rax
   140058433:	call   0x14002ffd0
   140058438:	mov    QWORD PTR [rbx],rax
   14005843b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005843f:	jne    0x14005b3df
   140058445:	lea    rdx,[rbp+0x28]
   140058449:	lea    rcx,[rsi+0x30]
   14005844d:	mov    DWORD PTR [rbp+0x28],0x2db
   140058454:	call   0x14002ffd0
   140058459:	lea    rcx,[rip+0x1bf70]        # 0x1400743d0
   140058460:	lea    rdx,[rbp+0x28]
   140058464:	mov    DWORD PTR [rax],0x253
   14005846a:	mov    DWORD PTR [rax+0x4],0x2db
   140058471:	mov    QWORD PTR [rax+0x8],rcx
   140058475:	lea    rcx,[rsi+0x10]
   140058479:	mov    DWORD PTR [rbp+0x30],0x2db
   140058480:	mov    DWORD PTR [rbp+0x28],0x253
   140058487:	call   0x14002ff30
   14005848c:	lea    rdx,[rbp+0x30]
   140058490:	lea    rcx,[rsi+0x30]
   140058494:	mov    rbx,rax
   140058497:	call   0x14002ffd0
   14005849c:	mov    QWORD PTR [rbx],rax
   14005849f:	cmp    DWORD PTR [rsi+0x8],r12d
   1400584a3:	jne    0x14005b3df
   1400584a9:	lea    rdx,[rbp+0x28]
   1400584ad:	lea    rcx,[rsi+0x30]
   1400584b1:	mov    DWORD PTR [rbp+0x28],0x2dd
   1400584b8:	call   0x14002ffd0
   1400584bd:	lea    rcx,[rip+0x1bf24]        # 0x1400743e8
   1400584c4:	lea    rdx,[rbp+0x28]
   1400584c8:	mov    DWORD PTR [rax],0x254
   1400584ce:	mov    DWORD PTR [rax+0x4],0x2dd
   1400584d5:	mov    QWORD PTR [rax+0x8],rcx
   1400584d9:	lea    rcx,[rsi+0x10]
   1400584dd:	mov    DWORD PTR [rbp+0x30],0x2dd
   1400584e4:	mov    DWORD PTR [rbp+0x28],0x254
   1400584eb:	call   0x14002ff30
   1400584f0:	lea    rdx,[rbp+0x30]
   1400584f4:	lea    rcx,[rsi+0x30]
   1400584f8:	mov    rbx,rax
   1400584fb:	call   0x14002ffd0
   140058500:	mov    QWORD PTR [rbx],rax
   140058503:	cmp    DWORD PTR [rsi+0x8],r12d
   140058507:	jne    0x14005b3df
   14005850d:	lea    rdx,[rbp+0x28]
   140058511:	lea    rcx,[rsi+0x30]
   140058515:	mov    DWORD PTR [rbp+0x28],0x3b7
   14005851c:	call   0x14002ffd0
   140058521:	lea    rcx,[rip+0x1bed8]        # 0x140074400
   140058528:	lea    rdx,[rbp+0x28]
   14005852c:	mov    DWORD PTR [rax],0x255
   140058532:	mov    DWORD PTR [rax+0x4],0x3b7
   140058539:	mov    QWORD PTR [rax+0x8],rcx
   14005853d:	lea    rcx,[rsi+0x10]
   140058541:	mov    DWORD PTR [rbp+0x30],0x3b7
   140058548:	mov    DWORD PTR [rbp+0x28],0x255
   14005854f:	call   0x14002ff30
   140058554:	lea    rdx,[rbp+0x30]
   140058558:	lea    rcx,[rsi+0x30]
   14005855c:	mov    rbx,rax
   14005855f:	call   0x14002ffd0
   140058564:	mov    QWORD PTR [rbx],rax
   140058567:	cmp    DWORD PTR [rsi+0x8],r12d
   14005856b:	jne    0x14005b3df
   140058571:	lea    rdx,[rbp+0x28]
   140058575:	lea    rcx,[rsi+0x30]
   140058579:	mov    DWORD PTR [rbp+0x28],0x3b8
   140058580:	call   0x14002ffd0
   140058585:	lea    rcx,[rip+0x1be94]        # 0x140074420
   14005858c:	lea    rdx,[rbp+0x28]
   140058590:	mov    DWORD PTR [rax],0x256
   140058596:	mov    DWORD PTR [rax+0x4],0x3b8
   14005859d:	mov    QWORD PTR [rax+0x8],rcx
   1400585a1:	lea    rcx,[rsi+0x10]
   1400585a5:	mov    DWORD PTR [rbp+0x30],0x3b8
   1400585ac:	mov    DWORD PTR [rbp+0x28],0x256
   1400585b3:	call   0x14002ff30
   1400585b8:	lea    rdx,[rbp+0x30]
   1400585bc:	lea    rcx,[rsi+0x30]
   1400585c0:	mov    rbx,rax
   1400585c3:	call   0x14002ffd0
   1400585c8:	mov    QWORD PTR [rbx],rax
   1400585cb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400585cf:	jne    0x14005b3df
   1400585d5:	lea    rdx,[rbp+0x28]
   1400585d9:	lea    rcx,[rsi+0x30]
   1400585dd:	mov    DWORD PTR [rbp+0x28],0x3b9
   1400585e4:	call   0x14002ffd0
   1400585e9:	lea    rcx,[rip+0x1be50]        # 0x140074440
   1400585f0:	lea    rdx,[rbp+0x28]
   1400585f4:	mov    DWORD PTR [rax],0x257
   1400585fa:	mov    DWORD PTR [rax+0x4],0x3b9
   140058601:	mov    QWORD PTR [rax+0x8],rcx
   140058605:	lea    rcx,[rsi+0x10]
   140058609:	mov    DWORD PTR [rbp+0x30],0x3b9
   140058610:	mov    DWORD PTR [rbp+0x28],0x257
   140058617:	call   0x14002ff30
   14005861c:	lea    rdx,[rbp+0x30]
   140058620:	lea    rcx,[rsi+0x30]
   140058624:	mov    rbx,rax
   140058627:	call   0x14002ffd0
   14005862c:	mov    QWORD PTR [rbx],rax
   14005862f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058633:	jne    0x14005b3df
   140058639:	lea    rdx,[rbp+0x28]
   14005863d:	lea    rcx,[rsi+0x30]
   140058641:	mov    DWORD PTR [rbp+0x28],0x3ba
   140058648:	call   0x14002ffd0
   14005864d:	lea    rcx,[rip+0x1be0c]        # 0x140074460
   140058654:	lea    rdx,[rbp+0x28]
   140058658:	mov    DWORD PTR [rax],0xffffffff
   14005865e:	mov    DWORD PTR [rax+0x4],0x3ba
   140058665:	mov    QWORD PTR [rax+0x8],rcx
   140058669:	lea    rcx,[rsi+0x10]
   14005866d:	mov    DWORD PTR [rbp+0x30],0x3ba
   140058674:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14005867b:	call   0x14002ff30
   140058680:	lea    rdx,[rbp+0x30]
   140058684:	lea    rcx,[rsi+0x30]
   140058688:	mov    rbx,rax
   14005868b:	call   0x14002ffd0
   140058690:	mov    QWORD PTR [rbx],rax
   140058693:	cmp    DWORD PTR [rsi+0x8],r12d
   140058697:	jne    0x14005b3df
   14005869d:	lea    rdx,[rbp+0x28]
   1400586a1:	lea    rcx,[rsi+0x30]
   1400586a5:	mov    DWORD PTR [rbp+0x28],0x3bb
   1400586ac:	call   0x14002ffd0
   1400586b1:	lea    rcx,[rip+0x1bdc0]        # 0x140074478
   1400586b8:	lea    rdx,[rbp+0x28]
   1400586bc:	mov    DWORD PTR [rax],0x259
   1400586c2:	mov    DWORD PTR [rax+0x4],0x3bb
   1400586c9:	mov    QWORD PTR [rax+0x8],rcx
   1400586cd:	lea    rcx,[rsi+0x10]
   1400586d1:	mov    DWORD PTR [rbp+0x30],0x3bb
   1400586d8:	mov    DWORD PTR [rbp+0x28],0x259
   1400586df:	call   0x14002ff30
   1400586e4:	lea    rdx,[rbp+0x30]
   1400586e8:	lea    rcx,[rsi+0x30]
   1400586ec:	mov    rbx,rax
   1400586ef:	call   0x14002ffd0
   1400586f4:	mov    QWORD PTR [rbx],rax
   1400586f7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400586fb:	jne    0x14005b3df
   140058701:	lea    rdx,[rbp+0x28]
   140058705:	lea    rcx,[rsi+0x30]
   140058709:	mov    DWORD PTR [rbp+0x28],0x3bc
   140058710:	call   0x14002ffd0
   140058715:	lea    rcx,[rip+0x1bd74]        # 0x140074490
   14005871c:	lea    rdx,[rbp+0x28]
   140058720:	mov    DWORD PTR [rax],0x25a
   140058726:	mov    DWORD PTR [rax+0x4],0x3bc
   14005872d:	mov    QWORD PTR [rax+0x8],rcx
   140058731:	lea    rcx,[rsi+0x10]
   140058735:	mov    DWORD PTR [rbp+0x30],0x3bc
   14005873c:	mov    DWORD PTR [rbp+0x28],0x25a
   140058743:	call   0x14002ff30
   140058748:	lea    rdx,[rbp+0x30]
   14005874c:	lea    rcx,[rsi+0x30]
   140058750:	mov    rbx,rax
   140058753:	call   0x14002ffd0
   140058758:	mov    QWORD PTR [rbx],rax
   14005875b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005875f:	jne    0x14005b3df
   140058765:	lea    rdx,[rbp+0x28]
   140058769:	lea    rcx,[rsi+0x30]
   14005876d:	mov    DWORD PTR [rbp+0x28],0x3bd
   140058774:	call   0x14002ffd0
   140058779:	lea    rcx,[rip+0x1bd30]        # 0x1400744b0
   140058780:	lea    rdx,[rbp+0x28]
   140058784:	mov    DWORD PTR [rax],0x25b
   14005878a:	mov    DWORD PTR [rax+0x4],0x3bd
   140058791:	mov    QWORD PTR [rax+0x8],rcx
   140058795:	lea    rcx,[rsi+0x10]
   140058799:	mov    DWORD PTR [rbp+0x30],0x3bd
   1400587a0:	mov    DWORD PTR [rbp+0x28],0x25b
   1400587a7:	call   0x14002ff30
   1400587ac:	lea    rdx,[rbp+0x30]
   1400587b0:	lea    rcx,[rsi+0x30]
   1400587b4:	mov    rbx,rax
   1400587b7:	call   0x14002ffd0
   1400587bc:	mov    QWORD PTR [rbx],rax
   1400587bf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400587c3:	jne    0x14005b3df
   1400587c9:	lea    rdx,[rbp+0x28]
   1400587cd:	lea    rcx,[rsi+0x30]
   1400587d1:	mov    DWORD PTR [rbp+0x28],0x3be
   1400587d8:	call   0x14002ffd0
   1400587dd:	lea    rcx,[rip+0x1bcec]        # 0x1400744d0
   1400587e4:	lea    rdx,[rbp+0x28]
   1400587e8:	mov    DWORD PTR [rax],0x25c
   1400587ee:	mov    DWORD PTR [rax+0x4],0x3be
   1400587f5:	mov    QWORD PTR [rax+0x8],rcx
   1400587f9:	lea    rcx,[rsi+0x10]
   1400587fd:	mov    DWORD PTR [rbp+0x30],0x3be
   140058804:	mov    DWORD PTR [rbp+0x28],0x25c
   14005880b:	call   0x14002ff30
   140058810:	lea    rdx,[rbp+0x30]
   140058814:	lea    rcx,[rsi+0x30]
   140058818:	mov    rbx,rax
   14005881b:	call   0x14002ffd0
   140058820:	mov    QWORD PTR [rbx],rax
   140058823:	cmp    DWORD PTR [rsi+0x8],r12d
   140058827:	jne    0x14005b3df
   14005882d:	lea    rdx,[rbp+0x28]
   140058831:	lea    rcx,[rsi+0x30]
   140058835:	mov    DWORD PTR [rbp+0x28],0x3bf
   14005883c:	call   0x14002ffd0
   140058841:	lea    rcx,[rip+0x1bca8]        # 0x1400744f0
   140058848:	lea    rdx,[rbp+0x28]
   14005884c:	mov    DWORD PTR [rax],0x25d
   140058852:	mov    DWORD PTR [rax+0x4],0x3bf
   140058859:	mov    QWORD PTR [rax+0x8],rcx
   14005885d:	lea    rcx,[rsi+0x10]
   140058861:	mov    DWORD PTR [rbp+0x30],0x3bf
   140058868:	mov    DWORD PTR [rbp+0x28],0x25d
   14005886f:	call   0x14002ff30
   140058874:	lea    rdx,[rbp+0x30]
   140058878:	lea    rcx,[rsi+0x30]
   14005887c:	mov    rbx,rax
   14005887f:	call   0x14002ffd0
   140058884:	mov    QWORD PTR [rbx],rax
   140058887:	cmp    DWORD PTR [rsi+0x8],r12d
   14005888b:	jne    0x14005b3df
   140058891:	lea    rdx,[rbp+0x28]
   140058895:	lea    rcx,[rsi+0x30]
   140058899:	mov    DWORD PTR [rbp+0x28],0x2e8
   1400588a0:	call   0x14002ffd0
   1400588a5:	lea    rcx,[rip+0x1bc64]        # 0x140074510
   1400588ac:	lea    rdx,[rbp+0x28]
   1400588b0:	mov    DWORD PTR [rax],0x25e
   1400588b6:	mov    DWORD PTR [rax+0x4],0x2e8
   1400588bd:	mov    QWORD PTR [rax+0x8],rcx
   1400588c1:	lea    rcx,[rsi+0x10]
   1400588c5:	mov    DWORD PTR [rbp+0x30],0x2e8
   1400588cc:	mov    DWORD PTR [rbp+0x28],0x25e
   1400588d3:	call   0x14002ff30
   1400588d8:	lea    rdx,[rbp+0x30]
   1400588dc:	lea    rcx,[rsi+0x30]
   1400588e0:	mov    rbx,rax
   1400588e3:	call   0x14002ffd0
   1400588e8:	mov    QWORD PTR [rbx],rax
   1400588eb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400588ef:	jne    0x14005b3df
   1400588f5:	lea    rdx,[rbp+0x28]
   1400588f9:	lea    rcx,[rsi+0x30]
   1400588fd:	mov    DWORD PTR [rbp+0x28],0x2e4
   140058904:	call   0x14002ffd0
   140058909:	lea    rcx,[rip+0x1bc18]        # 0x140074528
   140058910:	lea    rdx,[rbp+0x28]
   140058914:	mov    DWORD PTR [rax],0x25f
   14005891a:	mov    DWORD PTR [rax+0x4],0x2e4
   140058921:	mov    QWORD PTR [rax+0x8],rcx
   140058925:	lea    rcx,[rsi+0x10]
   140058929:	mov    DWORD PTR [rbp+0x30],0x2e4
   140058930:	mov    DWORD PTR [rbp+0x28],0x25f
   140058937:	call   0x14002ff30
   14005893c:	lea    rdx,[rbp+0x30]
   140058940:	lea    rcx,[rsi+0x30]
   140058944:	mov    rbx,rax
   140058947:	call   0x14002ffd0
   14005894c:	mov    QWORD PTR [rbx],rax
   14005894f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058953:	jne    0x14005b3df
   140058959:	lea    rdx,[rbp+0x28]
   14005895d:	lea    rcx,[rsi+0x30]
   140058961:	mov    DWORD PTR [rbp+0x28],0x2e6
   140058968:	call   0x14002ffd0
   14005896d:	lea    rcx,[rip+0x1bbcc]        # 0x140074540
   140058974:	lea    rdx,[rbp+0x28]
   140058978:	mov    DWORD PTR [rax],0x260
   14005897e:	mov    DWORD PTR [rax+0x4],0x2e6
   140058985:	mov    QWORD PTR [rax+0x8],rcx
   140058989:	lea    rcx,[rsi+0x10]
   14005898d:	mov    DWORD PTR [rbp+0x30],0x2e6
   140058994:	mov    DWORD PTR [rbp+0x28],0x260
   14005899b:	call   0x14002ff30
   1400589a0:	lea    rdx,[rbp+0x30]
   1400589a4:	lea    rcx,[rsi+0x30]
   1400589a8:	mov    rbx,rax
   1400589ab:	call   0x14002ffd0
   1400589b0:	mov    QWORD PTR [rbx],rax
   1400589b3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400589b7:	jne    0x14005b3df
   1400589bd:	lea    rdx,[rbp+0x28]
   1400589c1:	lea    rcx,[rsi+0x30]
   1400589c5:	mov    DWORD PTR [rbp+0x28],0x2e5
   1400589cc:	call   0x14002ffd0
   1400589d1:	lea    rcx,[rip+0x1bb80]        # 0x140074558
   1400589d8:	lea    rdx,[rbp+0x28]
   1400589dc:	mov    DWORD PTR [rax],0x261
   1400589e2:	mov    DWORD PTR [rax+0x4],0x2e5
   1400589e9:	mov    QWORD PTR [rax+0x8],rcx
   1400589ed:	lea    rcx,[rsi+0x10]
   1400589f1:	mov    DWORD PTR [rbp+0x30],0x2e5
   1400589f8:	mov    DWORD PTR [rbp+0x28],0x261
   1400589ff:	call   0x14002ff30
   140058a04:	lea    rdx,[rbp+0x30]
   140058a08:	lea    rcx,[rsi+0x30]
   140058a0c:	mov    rbx,rax
   140058a0f:	call   0x14002ffd0
   140058a14:	mov    QWORD PTR [rbx],rax
   140058a17:	cmp    DWORD PTR [rsi+0x8],r12d
   140058a1b:	jne    0x14005b3df
   140058a21:	lea    rdx,[rbp+0x28]
   140058a25:	lea    rcx,[rsi+0x30]
   140058a29:	mov    DWORD PTR [rbp+0x28],0x2e7
   140058a30:	call   0x14002ffd0
   140058a35:	lea    rcx,[rip+0x1bb34]        # 0x140074570
   140058a3c:	lea    rdx,[rbp+0x28]
   140058a40:	mov    DWORD PTR [rax],0x262
   140058a46:	mov    DWORD PTR [rax+0x4],0x2e7
   140058a4d:	mov    QWORD PTR [rax+0x8],rcx
   140058a51:	lea    rcx,[rsi+0x10]
   140058a55:	mov    DWORD PTR [rbp+0x30],0x2e7
   140058a5c:	mov    DWORD PTR [rbp+0x28],0x262
   140058a63:	call   0x14002ff30
   140058a68:	lea    rdx,[rbp+0x30]
   140058a6c:	lea    rcx,[rsi+0x30]
   140058a70:	mov    rbx,rax
   140058a73:	call   0x14002ffd0
   140058a78:	mov    QWORD PTR [rbx],rax
   140058a7b:	cmp    DWORD PTR [rsi+0x8],r12d
   140058a7f:	jne    0x14005b3df
   140058a85:	lea    rdx,[rbp+0x28]
   140058a89:	lea    rcx,[rsi+0x30]
   140058a8d:	mov    DWORD PTR [rbp+0x28],0x2f2
   140058a94:	call   0x14002ffd0
   140058a99:	lea    rcx,[rip+0x1bae8]        # 0x140074588
   140058aa0:	lea    rdx,[rbp+0x28]
   140058aa4:	mov    DWORD PTR [rax],0x263
   140058aaa:	mov    DWORD PTR [rax+0x4],0x2f2
   140058ab1:	mov    QWORD PTR [rax+0x8],rcx
   140058ab5:	lea    rcx,[rsi+0x10]
   140058ab9:	mov    DWORD PTR [rbp+0x30],0x2f2
   140058ac0:	mov    DWORD PTR [rbp+0x28],0x263
   140058ac7:	call   0x14002ff30
   140058acc:	lea    rdx,[rbp+0x30]
   140058ad0:	lea    rcx,[rsi+0x30]
   140058ad4:	mov    rbx,rax
   140058ad7:	call   0x14002ffd0
   140058adc:	mov    QWORD PTR [rbx],rax
   140058adf:	cmp    DWORD PTR [rsi+0x8],r12d
   140058ae3:	jne    0x14005b3df
   140058ae9:	lea    rdx,[rbp+0x28]
   140058aed:	lea    rcx,[rsi+0x30]
   140058af1:	mov    DWORD PTR [rbp+0x28],0x2ee
   140058af8:	call   0x14002ffd0
   140058afd:	lea    rcx,[rip+0x1ba9c]        # 0x1400745a0
   140058b04:	lea    rdx,[rbp+0x28]
   140058b08:	mov    DWORD PTR [rax],0x264
   140058b0e:	mov    DWORD PTR [rax+0x4],0x2ee
   140058b15:	mov    QWORD PTR [rax+0x8],rcx
   140058b19:	lea    rcx,[rsi+0x10]
   140058b1d:	mov    DWORD PTR [rbp+0x30],0x2ee
   140058b24:	mov    DWORD PTR [rbp+0x28],0x264
   140058b2b:	call   0x14002ff30
   140058b30:	lea    rdx,[rbp+0x30]
   140058b34:	lea    rcx,[rsi+0x30]
   140058b38:	mov    rbx,rax
   140058b3b:	call   0x14002ffd0
   140058b40:	mov    QWORD PTR [rbx],rax
   140058b43:	cmp    DWORD PTR [rsi+0x8],r12d
   140058b47:	jne    0x14005b3df
   140058b4d:	lea    rdx,[rbp+0x28]
   140058b51:	lea    rcx,[rsi+0x30]
   140058b55:	mov    DWORD PTR [rbp+0x28],0x2f0
   140058b5c:	call   0x14002ffd0
   140058b61:	lea    rcx,[rip+0x1ba50]        # 0x1400745b8
   140058b68:	lea    rdx,[rbp+0x28]
   140058b6c:	mov    DWORD PTR [rax],0x265
   140058b72:	mov    DWORD PTR [rax+0x4],0x2f0
   140058b79:	mov    QWORD PTR [rax+0x8],rcx
   140058b7d:	lea    rcx,[rsi+0x10]
   140058b81:	mov    DWORD PTR [rbp+0x30],0x2f0
   140058b88:	mov    DWORD PTR [rbp+0x28],0x265
   140058b8f:	call   0x14002ff30
   140058b94:	lea    rdx,[rbp+0x30]
   140058b98:	lea    rcx,[rsi+0x30]
   140058b9c:	mov    rbx,rax
   140058b9f:	call   0x14002ffd0
   140058ba4:	mov    QWORD PTR [rbx],rax
   140058ba7:	cmp    DWORD PTR [rsi+0x8],r12d
   140058bab:	jne    0x14005b3df
   140058bb1:	lea    rdx,[rbp+0x28]
   140058bb5:	lea    rcx,[rsi+0x30]
   140058bb9:	mov    DWORD PTR [rbp+0x28],0x2ef
   140058bc0:	call   0x14002ffd0
   140058bc5:	lea    rcx,[rip+0x1ba04]        # 0x1400745d0
   140058bcc:	lea    rdx,[rbp+0x28]
   140058bd0:	mov    DWORD PTR [rax],0x266
   140058bd6:	mov    DWORD PTR [rax+0x4],0x2ef
   140058bdd:	mov    QWORD PTR [rax+0x8],rcx
   140058be1:	lea    rcx,[rsi+0x10]
   140058be5:	mov    DWORD PTR [rbp+0x30],0x2ef
   140058bec:	mov    DWORD PTR [rbp+0x28],0x266
   140058bf3:	call   0x14002ff30
   140058bf8:	lea    rdx,[rbp+0x30]
   140058bfc:	lea    rcx,[rsi+0x30]
   140058c00:	mov    rbx,rax
   140058c03:	call   0x14002ffd0
   140058c08:	mov    QWORD PTR [rbx],rax
   140058c0b:	cmp    DWORD PTR [rsi+0x8],r12d
   140058c0f:	jne    0x14005b3df
   140058c15:	lea    rdx,[rbp+0x28]
   140058c19:	lea    rcx,[rsi+0x30]
   140058c1d:	mov    DWORD PTR [rbp+0x28],0x2f1
   140058c24:	call   0x14002ffd0
   140058c29:	lea    rcx,[rip+0x1b9b8]        # 0x1400745e8
   140058c30:	lea    rdx,[rbp+0x28]
   140058c34:	mov    DWORD PTR [rax],0x267
   140058c3a:	mov    DWORD PTR [rax+0x4],0x2f1
   140058c41:	mov    QWORD PTR [rax+0x8],rcx
   140058c45:	lea    rcx,[rsi+0x10]
   140058c49:	mov    DWORD PTR [rbp+0x30],0x2f1
   140058c50:	mov    DWORD PTR [rbp+0x28],0x267
   140058c57:	call   0x14002ff30
   140058c5c:	lea    rdx,[rbp+0x30]
   140058c60:	lea    rcx,[rsi+0x30]
   140058c64:	mov    rbx,rax
   140058c67:	call   0x14002ffd0
   140058c6c:	mov    QWORD PTR [rbx],rax
   140058c6f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058c73:	jne    0x14005b3df
   140058c79:	lea    rdx,[rbp+0x28]
   140058c7d:	lea    rcx,[rsi+0x30]
   140058c81:	mov    DWORD PTR [rbp+0x28],0x2fc
   140058c88:	call   0x14002ffd0
   140058c8d:	lea    rcx,[rip+0x1b96c]        # 0x140074600
   140058c94:	lea    rdx,[rbp+0x28]
   140058c98:	mov    DWORD PTR [rax],0x268
   140058c9e:	mov    DWORD PTR [rax+0x4],0x2fc
   140058ca5:	mov    QWORD PTR [rax+0x8],rcx
   140058ca9:	lea    rcx,[rsi+0x10]
   140058cad:	mov    DWORD PTR [rbp+0x30],0x2fc
   140058cb4:	mov    DWORD PTR [rbp+0x28],0x268
   140058cbb:	call   0x14002ff30
   140058cc0:	lea    rdx,[rbp+0x30]
   140058cc4:	lea    rcx,[rsi+0x30]
   140058cc8:	mov    rbx,rax
   140058ccb:	call   0x14002ffd0
   140058cd0:	mov    QWORD PTR [rbx],rax
   140058cd3:	cmp    DWORD PTR [rsi+0x8],r12d
   140058cd7:	jne    0x14005b3df
   140058cdd:	lea    rdx,[rbp+0x28]
   140058ce1:	lea    rcx,[rsi+0x30]
   140058ce5:	mov    DWORD PTR [rbp+0x28],0x2f8
   140058cec:	call   0x14002ffd0
   140058cf1:	lea    rcx,[rip+0x1b920]        # 0x140074618
   140058cf8:	lea    rdx,[rbp+0x28]
   140058cfc:	mov    DWORD PTR [rax],0x269
   140058d02:	mov    DWORD PTR [rax+0x4],0x2f8
   140058d09:	mov    QWORD PTR [rax+0x8],rcx
   140058d0d:	lea    rcx,[rsi+0x10]
   140058d11:	mov    DWORD PTR [rbp+0x30],0x2f8
   140058d18:	mov    DWORD PTR [rbp+0x28],0x269
   140058d1f:	call   0x14002ff30
   140058d24:	lea    rdx,[rbp+0x30]
   140058d28:	lea    rcx,[rsi+0x30]
   140058d2c:	mov    rbx,rax
   140058d2f:	call   0x14002ffd0
   140058d34:	mov    QWORD PTR [rbx],rax
   140058d37:	cmp    DWORD PTR [rsi+0x8],r12d
   140058d3b:	jne    0x14005b3df
   140058d41:	lea    rdx,[rbp+0x28]
   140058d45:	lea    rcx,[rsi+0x30]
   140058d49:	mov    DWORD PTR [rbp+0x28],0x2fa
   140058d50:	call   0x14002ffd0
   140058d55:	lea    rcx,[rip+0x1b8d4]        # 0x140074630
   140058d5c:	lea    rdx,[rbp+0x28]
   140058d60:	mov    DWORD PTR [rax],0x26a
   140058d66:	mov    DWORD PTR [rax+0x4],0x2fa
   140058d6d:	mov    QWORD PTR [rax+0x8],rcx
   140058d71:	lea    rcx,[rsi+0x10]
   140058d75:	mov    DWORD PTR [rbp+0x30],0x2fa
   140058d7c:	mov    DWORD PTR [rbp+0x28],0x26a
   140058d83:	call   0x14002ff30
   140058d88:	lea    rdx,[rbp+0x30]
   140058d8c:	lea    rcx,[rsi+0x30]
   140058d90:	mov    rbx,rax
   140058d93:	call   0x14002ffd0
   140058d98:	mov    QWORD PTR [rbx],rax
   140058d9b:	cmp    DWORD PTR [rsi+0x8],r12d
   140058d9f:	jne    0x14005b3df
   140058da5:	lea    rdx,[rbp+0x28]
   140058da9:	lea    rcx,[rsi+0x30]
   140058dad:	mov    DWORD PTR [rbp+0x28],0x2f9
   140058db4:	call   0x14002ffd0
   140058db9:	lea    rcx,[rip+0x1b888]        # 0x140074648
   140058dc0:	lea    rdx,[rbp+0x28]
   140058dc4:	mov    DWORD PTR [rax],0x26b
   140058dca:	mov    DWORD PTR [rax+0x4],0x2f9
   140058dd1:	mov    QWORD PTR [rax+0x8],rcx
   140058dd5:	lea    rcx,[rsi+0x10]
   140058dd9:	mov    DWORD PTR [rbp+0x30],0x2f9
   140058de0:	mov    DWORD PTR [rbp+0x28],0x26b
   140058de7:	call   0x14002ff30
   140058dec:	lea    rdx,[rbp+0x30]
   140058df0:	lea    rcx,[rsi+0x30]
   140058df4:	mov    rbx,rax
   140058df7:	call   0x14002ffd0
   140058dfc:	mov    QWORD PTR [rbx],rax
   140058dff:	cmp    DWORD PTR [rsi+0x8],r12d
   140058e03:	jne    0x14005b3df
   140058e09:	lea    rdx,[rbp+0x28]
   140058e0d:	lea    rcx,[rsi+0x30]
   140058e11:	mov    DWORD PTR [rbp+0x28],0x2fb
   140058e18:	call   0x14002ffd0
   140058e1d:	lea    rcx,[rip+0x1b83c]        # 0x140074660
   140058e24:	lea    rdx,[rbp+0x28]
   140058e28:	mov    DWORD PTR [rax],0x26c
   140058e2e:	mov    DWORD PTR [rax+0x4],0x2fb
   140058e35:	mov    QWORD PTR [rax+0x8],rcx
   140058e39:	lea    rcx,[rsi+0x10]
   140058e3d:	mov    DWORD PTR [rbp+0x30],0x2fb
   140058e44:	mov    DWORD PTR [rbp+0x28],0x26c
   140058e4b:	call   0x14002ff30
   140058e50:	lea    rdx,[rbp+0x30]
   140058e54:	lea    rcx,[rsi+0x30]
   140058e58:	mov    rbx,rax
   140058e5b:	call   0x14002ffd0
   140058e60:	mov    QWORD PTR [rbx],rax
   140058e63:	cmp    DWORD PTR [rsi+0x8],r12d
   140058e67:	jne    0x14005b3df
   140058e6d:	lea    rdx,[rbp+0x28]
   140058e71:	lea    rcx,[rsi+0x30]
   140058e75:	mov    DWORD PTR [rbp+0x28],0x306
   140058e7c:	call   0x14002ffd0
   140058e81:	lea    rcx,[rip+0x1b7f0]        # 0x140074678
   140058e88:	lea    rdx,[rbp+0x28]
   140058e8c:	mov    DWORD PTR [rax],0x26d
   140058e92:	mov    DWORD PTR [rax+0x4],0x306
   140058e99:	mov    QWORD PTR [rax+0x8],rcx
   140058e9d:	lea    rcx,[rsi+0x10]
   140058ea1:	mov    DWORD PTR [rbp+0x30],0x306
   140058ea8:	mov    DWORD PTR [rbp+0x28],0x26d
   140058eaf:	call   0x14002ff30
   140058eb4:	lea    rdx,[rbp+0x30]
   140058eb8:	lea    rcx,[rsi+0x30]
   140058ebc:	mov    rbx,rax
   140058ebf:	call   0x14002ffd0
   140058ec4:	mov    QWORD PTR [rbx],rax
   140058ec7:	cmp    DWORD PTR [rsi+0x8],r12d
   140058ecb:	jne    0x14005b3df
   140058ed1:	lea    rdx,[rbp+0x28]
   140058ed5:	lea    rcx,[rsi+0x30]
   140058ed9:	mov    DWORD PTR [rbp+0x28],0x302
   140058ee0:	call   0x14002ffd0
   140058ee5:	lea    rcx,[rip+0x1b7a4]        # 0x140074690
   140058eec:	lea    rdx,[rbp+0x28]
   140058ef0:	mov    DWORD PTR [rax],0x26e
   140058ef6:	mov    DWORD PTR [rax+0x4],0x302
   140058efd:	mov    QWORD PTR [rax+0x8],rcx
   140058f01:	lea    rcx,[rsi+0x10]
   140058f05:	mov    DWORD PTR [rbp+0x30],0x302
   140058f0c:	mov    DWORD PTR [rbp+0x28],0x26e
   140058f13:	call   0x14002ff30
   140058f18:	lea    rdx,[rbp+0x30]
   140058f1c:	lea    rcx,[rsi+0x30]
   140058f20:	mov    rbx,rax
   140058f23:	call   0x14002ffd0
   140058f28:	mov    QWORD PTR [rbx],rax
   140058f2b:	cmp    DWORD PTR [rsi+0x8],r12d
   140058f2f:	jne    0x14005b3df
   140058f35:	lea    rdx,[rbp+0x28]
   140058f39:	lea    rcx,[rsi+0x30]
   140058f3d:	mov    DWORD PTR [rbp+0x28],0x304
   140058f44:	call   0x14002ffd0
   140058f49:	lea    rcx,[rip+0x1b758]        # 0x1400746a8
   140058f50:	lea    rdx,[rbp+0x28]
   140058f54:	mov    DWORD PTR [rax],0x26f
   140058f5a:	mov    DWORD PTR [rax+0x4],0x304
   140058f61:	mov    QWORD PTR [rax+0x8],rcx
   140058f65:	lea    rcx,[rsi+0x10]
   140058f69:	mov    DWORD PTR [rbp+0x30],0x304
   140058f70:	mov    DWORD PTR [rbp+0x28],0x26f
   140058f77:	call   0x14002ff30
   140058f7c:	lea    rdx,[rbp+0x30]
   140058f80:	lea    rcx,[rsi+0x30]
   140058f84:	mov    rbx,rax
   140058f87:	call   0x14002ffd0
   140058f8c:	mov    QWORD PTR [rbx],rax
   140058f8f:	cmp    DWORD PTR [rsi+0x8],r12d
   140058f93:	jne    0x14005b3df
   140058f99:	lea    rdx,[rbp+0x28]
   140058f9d:	lea    rcx,[rsi+0x30]
   140058fa1:	mov    DWORD PTR [rbp+0x28],0x303
   140058fa8:	call   0x14002ffd0
   140058fad:	lea    rcx,[rip+0x1b70c]        # 0x1400746c0
   140058fb4:	lea    rdx,[rbp+0x28]
   140058fb8:	mov    DWORD PTR [rax],0x270
   140058fbe:	mov    DWORD PTR [rax+0x4],0x303
   140058fc5:	mov    QWORD PTR [rax+0x8],rcx
   140058fc9:	lea    rcx,[rsi+0x10]
   140058fcd:	mov    DWORD PTR [rbp+0x30],0x303
   140058fd4:	mov    DWORD PTR [rbp+0x28],0x270
   140058fdb:	call   0x14002ff30
   140058fe0:	lea    rdx,[rbp+0x30]
   140058fe4:	lea    rcx,[rsi+0x30]
   140058fe8:	mov    rbx,rax
   140058feb:	call   0x14002ffd0
   140058ff0:	mov    QWORD PTR [rbx],rax
   140058ff3:	cmp    DWORD PTR [rsi+0x8],r12d
   140058ff7:	jne    0x14005b3df
   140058ffd:	lea    rdx,[rbp+0x28]
   140059001:	lea    rcx,[rsi+0x30]
   140059005:	mov    DWORD PTR [rbp+0x28],0x305
   14005900c:	call   0x14002ffd0
   140059011:	lea    rcx,[rip+0x1b6c0]        # 0x1400746d8
   140059018:	lea    rdx,[rbp+0x28]
   14005901c:	mov    DWORD PTR [rax],0x271
   140059022:	mov    DWORD PTR [rax+0x4],0x305
   140059029:	mov    QWORD PTR [rax+0x8],rcx
   14005902d:	lea    rcx,[rsi+0x10]
   140059031:	mov    DWORD PTR [rbp+0x30],0x305
   140059038:	mov    DWORD PTR [rbp+0x28],0x271
   14005903f:	call   0x14002ff30
   140059044:	lea    rdx,[rbp+0x30]
   140059048:	lea    rcx,[rsi+0x30]
   14005904c:	mov    rbx,rax
   14005904f:	call   0x14002ffd0
   140059054:	mov    QWORD PTR [rbx],rax
   140059057:	cmp    DWORD PTR [rsi+0x8],r12d
   14005905b:	jne    0x14005b3df
   140059061:	lea    rdx,[rbp+0x28]
   140059065:	lea    rcx,[rsi+0x30]
   140059069:	mov    DWORD PTR [rbp+0x28],0x310
   140059070:	call   0x14002ffd0
   140059075:	lea    rcx,[rip+0x1b674]        # 0x1400746f0
   14005907c:	lea    rdx,[rbp+0x28]
   140059080:	mov    DWORD PTR [rax],0x272
   140059086:	mov    DWORD PTR [rax+0x4],0x310
   14005908d:	mov    QWORD PTR [rax+0x8],rcx
   140059091:	lea    rcx,[rsi+0x10]
   140059095:	mov    DWORD PTR [rbp+0x30],0x310
   14005909c:	mov    DWORD PTR [rbp+0x28],0x272
   1400590a3:	call   0x14002ff30
   1400590a8:	lea    rdx,[rbp+0x30]
   1400590ac:	lea    rcx,[rsi+0x30]
   1400590b0:	mov    rbx,rax
   1400590b3:	call   0x14002ffd0
   1400590b8:	mov    QWORD PTR [rbx],rax
   1400590bb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400590bf:	jne    0x14005b3df
   1400590c5:	lea    rdx,[rbp+0x28]
   1400590c9:	lea    rcx,[rsi+0x30]
   1400590cd:	mov    DWORD PTR [rbp+0x28],0x30c
   1400590d4:	call   0x14002ffd0
   1400590d9:	lea    rcx,[rip+0x1b628]        # 0x140074708
   1400590e0:	lea    rdx,[rbp+0x28]
   1400590e4:	mov    DWORD PTR [rax],0x273
   1400590ea:	mov    DWORD PTR [rax+0x4],0x30c
   1400590f1:	mov    QWORD PTR [rax+0x8],rcx
   1400590f5:	lea    rcx,[rsi+0x10]
   1400590f9:	mov    DWORD PTR [rbp+0x30],0x30c
   140059100:	mov    DWORD PTR [rbp+0x28],0x273
   140059107:	call   0x14002ff30
   14005910c:	lea    rdx,[rbp+0x30]
   140059110:	lea    rcx,[rsi+0x30]
   140059114:	mov    rbx,rax
   140059117:	call   0x14002ffd0
   14005911c:	mov    QWORD PTR [rbx],rax
   14005911f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059123:	jne    0x14005b3df
   140059129:	lea    rdx,[rbp+0x28]
   14005912d:	lea    rcx,[rsi+0x30]
   140059131:	mov    DWORD PTR [rbp+0x28],0x30e
   140059138:	call   0x14002ffd0
   14005913d:	lea    rcx,[rip+0x1b5dc]        # 0x140074720
   140059144:	lea    rdx,[rbp+0x28]
   140059148:	mov    DWORD PTR [rax],0x274
   14005914e:	mov    DWORD PTR [rax+0x4],0x30e
   140059155:	mov    QWORD PTR [rax+0x8],rcx
   140059159:	lea    rcx,[rsi+0x10]
   14005915d:	mov    DWORD PTR [rbp+0x30],0x30e
   140059164:	mov    DWORD PTR [rbp+0x28],0x274
   14005916b:	call   0x14002ff30
   140059170:	lea    rdx,[rbp+0x30]
   140059174:	lea    rcx,[rsi+0x30]
   140059178:	mov    rbx,rax
   14005917b:	call   0x14002ffd0
   140059180:	mov    QWORD PTR [rbx],rax
   140059183:	cmp    DWORD PTR [rsi+0x8],r12d
   140059187:	jne    0x14005b3df
   14005918d:	lea    rdx,[rbp+0x28]
   140059191:	lea    rcx,[rsi+0x30]
   140059195:	mov    DWORD PTR [rbp+0x28],0x30d
   14005919c:	call   0x14002ffd0
   1400591a1:	lea    rcx,[rip+0x1b590]        # 0x140074738
   1400591a8:	lea    rdx,[rbp+0x28]
   1400591ac:	mov    DWORD PTR [rax],0x275
   1400591b2:	mov    DWORD PTR [rax+0x4],0x30d
   1400591b9:	mov    QWORD PTR [rax+0x8],rcx
   1400591bd:	lea    rcx,[rsi+0x10]
   1400591c1:	mov    DWORD PTR [rbp+0x30],0x30d
   1400591c8:	mov    DWORD PTR [rbp+0x28],0x275
   1400591cf:	call   0x14002ff30
   1400591d4:	lea    rdx,[rbp+0x30]
   1400591d8:	lea    rcx,[rsi+0x30]
   1400591dc:	mov    rbx,rax
   1400591df:	call   0x14002ffd0
   1400591e4:	mov    QWORD PTR [rbx],rax
   1400591e7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400591eb:	jne    0x14005b3df
   1400591f1:	lea    rdx,[rbp+0x28]
   1400591f5:	lea    rcx,[rsi+0x30]
   1400591f9:	mov    DWORD PTR [rbp+0x28],0x30f
   140059200:	call   0x14002ffd0
   140059205:	lea    rcx,[rip+0x1b544]        # 0x140074750
   14005920c:	lea    rdx,[rbp+0x28]
   140059210:	mov    DWORD PTR [rax],0x276
   140059216:	mov    DWORD PTR [rax+0x4],0x30f
   14005921d:	mov    QWORD PTR [rax+0x8],rcx
   140059221:	lea    rcx,[rsi+0x10]
   140059225:	mov    DWORD PTR [rbp+0x30],0x30f
   14005922c:	mov    DWORD PTR [rbp+0x28],0x276
   140059233:	call   0x14002ff30
   140059238:	lea    rdx,[rbp+0x30]
   14005923c:	lea    rcx,[rsi+0x30]
   140059240:	mov    rbx,rax
   140059243:	call   0x14002ffd0
   140059248:	mov    QWORD PTR [rbx],rax
   14005924b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005924f:	jne    0x14005b3df
   140059255:	lea    rdx,[rbp+0x28]
   140059259:	lea    rcx,[rsi+0x30]
   14005925d:	mov    DWORD PTR [rbp+0x28],0x31a
   140059264:	call   0x14002ffd0
   140059269:	lea    rcx,[rip+0x1b4f8]        # 0x140074768
   140059270:	lea    rdx,[rbp+0x28]
   140059274:	mov    DWORD PTR [rax],0x277
   14005927a:	mov    DWORD PTR [rax+0x4],0x31a
   140059281:	mov    QWORD PTR [rax+0x8],rcx
   140059285:	lea    rcx,[rsi+0x10]
   140059289:	mov    DWORD PTR [rbp+0x30],0x31a
   140059290:	mov    DWORD PTR [rbp+0x28],0x277
   140059297:	call   0x14002ff30
   14005929c:	lea    rdx,[rbp+0x30]
   1400592a0:	lea    rcx,[rsi+0x30]
   1400592a4:	mov    rbx,rax
   1400592a7:	call   0x14002ffd0
   1400592ac:	mov    QWORD PTR [rbx],rax
   1400592af:	cmp    DWORD PTR [rsi+0x8],r12d
   1400592b3:	jne    0x14005b3df
   1400592b9:	lea    rdx,[rbp+0x28]
   1400592bd:	lea    rcx,[rsi+0x30]
   1400592c1:	mov    DWORD PTR [rbp+0x28],0x316
   1400592c8:	call   0x14002ffd0
   1400592cd:	lea    rcx,[rip+0x1b4ac]        # 0x140074780
   1400592d4:	lea    rdx,[rbp+0x28]
   1400592d8:	mov    DWORD PTR [rax],0x278
   1400592de:	mov    DWORD PTR [rax+0x4],0x316
   1400592e5:	mov    QWORD PTR [rax+0x8],rcx
   1400592e9:	lea    rcx,[rsi+0x10]
   1400592ed:	mov    DWORD PTR [rbp+0x30],0x316
   1400592f4:	mov    DWORD PTR [rbp+0x28],0x278
   1400592fb:	call   0x14002ff30
   140059300:	lea    rdx,[rbp+0x30]
   140059304:	lea    rcx,[rsi+0x30]
   140059308:	mov    rbx,rax
   14005930b:	call   0x14002ffd0
   140059310:	mov    QWORD PTR [rbx],rax
   140059313:	cmp    DWORD PTR [rsi+0x8],r12d
   140059317:	jne    0x14005b3df
   14005931d:	lea    rdx,[rbp+0x28]
   140059321:	lea    rcx,[rsi+0x30]
   140059325:	mov    DWORD PTR [rbp+0x28],0x318
   14005932c:	call   0x14002ffd0
   140059331:	lea    rcx,[rip+0x1b460]        # 0x140074798
   140059338:	lea    rdx,[rbp+0x28]
   14005933c:	mov    DWORD PTR [rax],0x279
   140059342:	mov    DWORD PTR [rax+0x4],0x318
   140059349:	mov    QWORD PTR [rax+0x8],rcx
   14005934d:	lea    rcx,[rsi+0x10]
   140059351:	mov    DWORD PTR [rbp+0x30],0x318
   140059358:	mov    DWORD PTR [rbp+0x28],0x279
   14005935f:	call   0x14002ff30
   140059364:	lea    rdx,[rbp+0x30]
   140059368:	lea    rcx,[rsi+0x30]
   14005936c:	mov    rbx,rax
   14005936f:	call   0x14002ffd0
   140059374:	mov    QWORD PTR [rbx],rax
   140059377:	cmp    DWORD PTR [rsi+0x8],r12d
   14005937b:	jne    0x14005b3df
   140059381:	lea    rdx,[rbp+0x28]
   140059385:	lea    rcx,[rsi+0x30]
   140059389:	mov    DWORD PTR [rbp+0x28],0x317
   140059390:	call   0x14002ffd0
   140059395:	lea    rcx,[rip+0x1b414]        # 0x1400747b0
   14005939c:	lea    rdx,[rbp+0x28]
   1400593a0:	mov    DWORD PTR [rax],0x27a
   1400593a6:	mov    DWORD PTR [rax+0x4],0x317
   1400593ad:	mov    QWORD PTR [rax+0x8],rcx
   1400593b1:	lea    rcx,[rsi+0x10]
   1400593b5:	mov    DWORD PTR [rbp+0x30],0x317
   1400593bc:	mov    DWORD PTR [rbp+0x28],0x27a
   1400593c3:	call   0x14002ff30
   1400593c8:	lea    rdx,[rbp+0x30]
   1400593cc:	lea    rcx,[rsi+0x30]
   1400593d0:	mov    rbx,rax
   1400593d3:	call   0x14002ffd0
   1400593d8:	mov    QWORD PTR [rbx],rax
   1400593db:	cmp    DWORD PTR [rsi+0x8],r12d
   1400593df:	jne    0x14005b3df
   1400593e5:	lea    rdx,[rbp+0x28]
   1400593e9:	lea    rcx,[rsi+0x30]
   1400593ed:	mov    DWORD PTR [rbp+0x28],0x319
   1400593f4:	call   0x14002ffd0
   1400593f9:	lea    rcx,[rip+0x1b3c8]        # 0x1400747c8
   140059400:	lea    rdx,[rbp+0x28]
   140059404:	mov    DWORD PTR [rax],0x27b
   14005940a:	mov    DWORD PTR [rax+0x4],0x319
   140059411:	mov    QWORD PTR [rax+0x8],rcx
   140059415:	lea    rcx,[rsi+0x10]
   140059419:	mov    DWORD PTR [rbp+0x30],0x319
   140059420:	mov    DWORD PTR [rbp+0x28],0x27b
   140059427:	call   0x14002ff30
   14005942c:	lea    rdx,[rbp+0x30]
   140059430:	lea    rcx,[rsi+0x30]
   140059434:	mov    rbx,rax
   140059437:	call   0x14002ffd0
   14005943c:	mov    QWORD PTR [rbx],rax
   14005943f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059443:	jne    0x14005b3df
   140059449:	lea    rdx,[rbp+0x28]
   14005944d:	lea    rcx,[rsi+0x30]
   140059451:	mov    DWORD PTR [rbp+0x28],0x324
   140059458:	call   0x14002ffd0
   14005945d:	lea    rcx,[rip+0x1b37c]        # 0x1400747e0
   140059464:	lea    rdx,[rbp+0x28]
   140059468:	mov    DWORD PTR [rax],0x27c
   14005946e:	mov    DWORD PTR [rax+0x4],0x324
   140059475:	mov    QWORD PTR [rax+0x8],rcx
   140059479:	lea    rcx,[rsi+0x10]
   14005947d:	mov    DWORD PTR [rbp+0x30],0x324
   140059484:	mov    DWORD PTR [rbp+0x28],0x27c
   14005948b:	call   0x14002ff30
   140059490:	lea    rdx,[rbp+0x30]
   140059494:	lea    rcx,[rsi+0x30]
   140059498:	mov    rbx,rax
   14005949b:	call   0x14002ffd0
   1400594a0:	mov    QWORD PTR [rbx],rax
   1400594a3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400594a7:	jne    0x14005b3df
   1400594ad:	lea    rdx,[rbp+0x28]
   1400594b1:	lea    rcx,[rsi+0x30]
   1400594b5:	mov    DWORD PTR [rbp+0x28],0x320
   1400594bc:	call   0x14002ffd0
   1400594c1:	lea    rcx,[rip+0x1b330]        # 0x1400747f8
   1400594c8:	lea    rdx,[rbp+0x28]
   1400594cc:	mov    DWORD PTR [rax],0x27d
   1400594d2:	mov    DWORD PTR [rax+0x4],0x320
   1400594d9:	mov    QWORD PTR [rax+0x8],rcx
   1400594dd:	lea    rcx,[rsi+0x10]
   1400594e1:	mov    DWORD PTR [rbp+0x30],0x320
   1400594e8:	mov    DWORD PTR [rbp+0x28],0x27d
   1400594ef:	call   0x14002ff30
   1400594f4:	lea    rdx,[rbp+0x30]
   1400594f8:	lea    rcx,[rsi+0x30]
   1400594fc:	mov    rbx,rax
   1400594ff:	call   0x14002ffd0
   140059504:	mov    QWORD PTR [rbx],rax
   140059507:	cmp    DWORD PTR [rsi+0x8],r12d
   14005950b:	jne    0x14005b3df
   140059511:	lea    rdx,[rbp+0x28]
   140059515:	lea    rcx,[rsi+0x30]
   140059519:	mov    DWORD PTR [rbp+0x28],0x322
   140059520:	call   0x14002ffd0
   140059525:	lea    rcx,[rip+0x1b2e4]        # 0x140074810
   14005952c:	lea    rdx,[rbp+0x28]
   140059530:	mov    DWORD PTR [rax],0x27e
   140059536:	mov    DWORD PTR [rax+0x4],0x322
   14005953d:	mov    QWORD PTR [rax+0x8],rcx
   140059541:	lea    rcx,[rsi+0x10]
   140059545:	mov    DWORD PTR [rbp+0x30],0x322
   14005954c:	mov    DWORD PTR [rbp+0x28],0x27e
   140059553:	call   0x14002ff30
   140059558:	lea    rdx,[rbp+0x30]
   14005955c:	lea    rcx,[rsi+0x30]
   140059560:	mov    rbx,rax
   140059563:	call   0x14002ffd0
   140059568:	mov    QWORD PTR [rbx],rax
   14005956b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005956f:	jne    0x14005b3df
   140059575:	lea    rdx,[rbp+0x28]
   140059579:	lea    rcx,[rsi+0x30]
   14005957d:	mov    DWORD PTR [rbp+0x28],0x321
   140059584:	call   0x14002ffd0
   140059589:	lea    rcx,[rip+0x1b298]        # 0x140074828
   140059590:	lea    rdx,[rbp+0x28]
   140059594:	mov    DWORD PTR [rax],0x27f
   14005959a:	mov    DWORD PTR [rax+0x4],0x321
   1400595a1:	mov    QWORD PTR [rax+0x8],rcx
   1400595a5:	lea    rcx,[rsi+0x10]
   1400595a9:	mov    DWORD PTR [rbp+0x30],0x321
   1400595b0:	mov    DWORD PTR [rbp+0x28],0x27f
   1400595b7:	call   0x14002ff30
   1400595bc:	lea    rdx,[rbp+0x30]
   1400595c0:	lea    rcx,[rsi+0x30]
   1400595c4:	mov    rbx,rax
   1400595c7:	call   0x14002ffd0
   1400595cc:	mov    QWORD PTR [rbx],rax
   1400595cf:	cmp    DWORD PTR [rsi+0x8],r12d
   1400595d3:	jne    0x14005b3df
   1400595d9:	lea    rdx,[rbp+0x28]
   1400595dd:	lea    rcx,[rsi+0x30]
   1400595e1:	mov    DWORD PTR [rbp+0x28],0x323
   1400595e8:	call   0x14002ffd0
   1400595ed:	lea    rcx,[rip+0x1b24c]        # 0x140074840
   1400595f4:	lea    rdx,[rbp+0x28]
   1400595f8:	mov    DWORD PTR [rax],0x280
   1400595fe:	mov    DWORD PTR [rax+0x4],0x323
   140059605:	mov    QWORD PTR [rax+0x8],rcx
   140059609:	lea    rcx,[rsi+0x10]
   14005960d:	mov    DWORD PTR [rbp+0x30],0x323
   140059614:	mov    DWORD PTR [rbp+0x28],0x280
   14005961b:	call   0x14002ff30
   140059620:	lea    rdx,[rbp+0x30]
   140059624:	lea    rcx,[rsi+0x30]
   140059628:	mov    rbx,rax
   14005962b:	call   0x14002ffd0
   140059630:	mov    QWORD PTR [rbx],rax
   140059633:	cmp    DWORD PTR [rsi+0x8],r12d
   140059637:	jne    0x14005b3df
   14005963d:	lea    rdx,[rbp+0x28]
   140059641:	lea    rcx,[rsi+0x30]
   140059645:	mov    DWORD PTR [rbp+0x28],0x32e
   14005964c:	call   0x14002ffd0
   140059651:	lea    rcx,[rip+0x1b200]        # 0x140074858
   140059658:	lea    rdx,[rbp+0x28]
   14005965c:	mov    DWORD PTR [rax],0x281
   140059662:	mov    DWORD PTR [rax+0x4],0x32e
   140059669:	mov    QWORD PTR [rax+0x8],rcx
   14005966d:	lea    rcx,[rsi+0x10]
   140059671:	mov    DWORD PTR [rbp+0x30],0x32e
   140059678:	mov    DWORD PTR [rbp+0x28],0x281
   14005967f:	call   0x14002ff30
   140059684:	lea    rdx,[rbp+0x30]
   140059688:	lea    rcx,[rsi+0x30]
   14005968c:	mov    rbx,rax
   14005968f:	call   0x14002ffd0
   140059694:	mov    QWORD PTR [rbx],rax
   140059697:	cmp    DWORD PTR [rsi+0x8],r12d
   14005969b:	jne    0x14005b3df
   1400596a1:	lea    rdx,[rbp+0x28]
   1400596a5:	lea    rcx,[rsi+0x30]
   1400596a9:	mov    DWORD PTR [rbp+0x28],0x32a
   1400596b0:	call   0x14002ffd0
   1400596b5:	lea    rcx,[rip+0x1b1b4]        # 0x140074870
   1400596bc:	lea    rdx,[rbp+0x28]
   1400596c0:	mov    DWORD PTR [rax],0x282
   1400596c6:	mov    DWORD PTR [rax+0x4],0x32a
   1400596cd:	mov    QWORD PTR [rax+0x8],rcx
   1400596d1:	lea    rcx,[rsi+0x10]
   1400596d5:	mov    DWORD PTR [rbp+0x30],0x32a
   1400596dc:	mov    DWORD PTR [rbp+0x28],0x282
   1400596e3:	call   0x14002ff30
   1400596e8:	lea    rdx,[rbp+0x30]
   1400596ec:	lea    rcx,[rsi+0x30]
   1400596f0:	mov    rbx,rax
   1400596f3:	call   0x14002ffd0
   1400596f8:	mov    QWORD PTR [rbx],rax
   1400596fb:	cmp    DWORD PTR [rsi+0x8],r12d
   1400596ff:	jne    0x14005b3df
   140059705:	lea    rdx,[rbp+0x28]
   140059709:	lea    rcx,[rsi+0x30]
   14005970d:	mov    DWORD PTR [rbp+0x28],0x32c
   140059714:	call   0x14002ffd0
   140059719:	lea    rcx,[rip+0x1b168]        # 0x140074888
   140059720:	lea    rdx,[rbp+0x28]
   140059724:	mov    DWORD PTR [rax],0x283
   14005972a:	mov    DWORD PTR [rax+0x4],0x32c
   140059731:	mov    QWORD PTR [rax+0x8],rcx
   140059735:	lea    rcx,[rsi+0x10]
   140059739:	mov    DWORD PTR [rbp+0x30],0x32c
   140059740:	mov    DWORD PTR [rbp+0x28],0x283
   140059747:	call   0x14002ff30
   14005974c:	lea    rdx,[rbp+0x30]
   140059750:	lea    rcx,[rsi+0x30]
   140059754:	mov    rbx,rax
   140059757:	call   0x14002ffd0
   14005975c:	mov    QWORD PTR [rbx],rax
   14005975f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059763:	jne    0x14005b3df
   140059769:	lea    rdx,[rbp+0x28]
   14005976d:	lea    rcx,[rsi+0x30]
   140059771:	mov    DWORD PTR [rbp+0x28],0x32b
   140059778:	call   0x14002ffd0
   14005977d:	lea    rcx,[rip+0x1b11c]        # 0x1400748a0
   140059784:	lea    rdx,[rbp+0x28]
   140059788:	mov    DWORD PTR [rax],0x284
   14005978e:	mov    DWORD PTR [rax+0x4],0x32b
   140059795:	mov    QWORD PTR [rax+0x8],rcx
   140059799:	lea    rcx,[rsi+0x10]
   14005979d:	mov    DWORD PTR [rbp+0x30],0x32b
   1400597a4:	mov    DWORD PTR [rbp+0x28],0x284
   1400597ab:	call   0x14002ff30
   1400597b0:	lea    rdx,[rbp+0x30]
   1400597b4:	lea    rcx,[rsi+0x30]
   1400597b8:	mov    rbx,rax
   1400597bb:	call   0x14002ffd0
   1400597c0:	mov    QWORD PTR [rbx],rax
   1400597c3:	cmp    DWORD PTR [rsi+0x8],r12d
   1400597c7:	jne    0x14005b3df
   1400597cd:	lea    rdx,[rbp+0x28]
   1400597d1:	lea    rcx,[rsi+0x30]
   1400597d5:	mov    DWORD PTR [rbp+0x28],0x32d
   1400597dc:	call   0x14002ffd0
   1400597e1:	lea    rcx,[rip+0x1b0d0]        # 0x1400748b8
   1400597e8:	lea    rdx,[rbp+0x28]
   1400597ec:	mov    DWORD PTR [rax],0x285
   1400597f2:	mov    DWORD PTR [rax+0x4],0x32d
   1400597f9:	mov    QWORD PTR [rax+0x8],rcx
   1400597fd:	lea    rcx,[rsi+0x10]
   140059801:	mov    DWORD PTR [rbp+0x30],0x32d
   140059808:	mov    DWORD PTR [rbp+0x28],0x285
   14005980f:	call   0x14002ff30
   140059814:	lea    rdx,[rbp+0x30]
   140059818:	lea    rcx,[rsi+0x30]
   14005981c:	mov    rbx,rax
   14005981f:	call   0x14002ffd0
   140059824:	mov    QWORD PTR [rbx],rax
   140059827:	cmp    DWORD PTR [rsi+0x8],r12d
   14005982b:	jne    0x14005b3df
   140059831:	lea    rdx,[rbp+0x28]
   140059835:	lea    rcx,[rsi+0x30]
   140059839:	mov    DWORD PTR [rbp+0x28],0x338
   140059840:	call   0x14002ffd0
   140059845:	lea    rcx,[rip+0x1b084]        # 0x1400748d0
   14005984c:	lea    rdx,[rbp+0x28]
   140059850:	mov    DWORD PTR [rax],0x286
   140059856:	mov    DWORD PTR [rax+0x4],0x338
   14005985d:	mov    QWORD PTR [rax+0x8],rcx
   140059861:	lea    rcx,[rsi+0x10]
   140059865:	mov    DWORD PTR [rbp+0x30],0x338
   14005986c:	mov    DWORD PTR [rbp+0x28],0x286
   140059873:	call   0x14002ff30
   140059878:	lea    rdx,[rbp+0x30]
   14005987c:	lea    rcx,[rsi+0x30]
   140059880:	mov    rbx,rax
   140059883:	call   0x14002ffd0
   140059888:	mov    QWORD PTR [rbx],rax
   14005988b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005988f:	jne    0x14005b3df
   140059895:	lea    rdx,[rbp+0x28]
   140059899:	lea    rcx,[rsi+0x30]
   14005989d:	mov    DWORD PTR [rbp+0x28],0x334
   1400598a4:	call   0x14002ffd0
   1400598a9:	lea    rcx,[rip+0x1b038]        # 0x1400748e8
   1400598b0:	lea    rdx,[rbp+0x28]
   1400598b4:	mov    DWORD PTR [rax],0x287
   1400598ba:	mov    DWORD PTR [rax+0x4],0x334
   1400598c1:	mov    QWORD PTR [rax+0x8],rcx
   1400598c5:	lea    rcx,[rsi+0x10]
   1400598c9:	mov    DWORD PTR [rbp+0x30],0x334
   1400598d0:	mov    DWORD PTR [rbp+0x28],0x287
   1400598d7:	call   0x14002ff30
   1400598dc:	lea    rdx,[rbp+0x30]
   1400598e0:	lea    rcx,[rsi+0x30]
   1400598e4:	mov    rbx,rax
   1400598e7:	call   0x14002ffd0
   1400598ec:	mov    QWORD PTR [rbx],rax
   1400598ef:	cmp    DWORD PTR [rsi+0x8],r12d
   1400598f3:	jne    0x14005b3df
   1400598f9:	lea    rdx,[rbp+0x28]
   1400598fd:	lea    rcx,[rsi+0x30]
   140059901:	mov    DWORD PTR [rbp+0x28],0x336
   140059908:	call   0x14002ffd0
   14005990d:	lea    rcx,[rip+0x1afec]        # 0x140074900
   140059914:	lea    rdx,[rbp+0x28]
   140059918:	mov    DWORD PTR [rax],0x288
   14005991e:	mov    DWORD PTR [rax+0x4],0x336
   140059925:	mov    QWORD PTR [rax+0x8],rcx
   140059929:	lea    rcx,[rsi+0x10]
   14005992d:	mov    DWORD PTR [rbp+0x30],0x336
   140059934:	mov    DWORD PTR [rbp+0x28],0x288
   14005993b:	call   0x14002ff30
   140059940:	lea    rdx,[rbp+0x30]
   140059944:	lea    rcx,[rsi+0x30]
   140059948:	mov    rbx,rax
   14005994b:	call   0x14002ffd0
   140059950:	mov    QWORD PTR [rbx],rax
   140059953:	cmp    DWORD PTR [rsi+0x8],r12d
   140059957:	jne    0x14005b3df
   14005995d:	lea    rdx,[rbp+0x28]
   140059961:	lea    rcx,[rsi+0x30]
   140059965:	mov    DWORD PTR [rbp+0x28],0x335
   14005996c:	call   0x14002ffd0
   140059971:	lea    rcx,[rip+0x1afa0]        # 0x140074918
   140059978:	lea    rdx,[rbp+0x28]
   14005997c:	mov    DWORD PTR [rax],0x289
   140059982:	mov    DWORD PTR [rax+0x4],0x335
   140059989:	mov    QWORD PTR [rax+0x8],rcx
   14005998d:	lea    rcx,[rsi+0x10]
   140059991:	mov    DWORD PTR [rbp+0x30],0x335
   140059998:	mov    DWORD PTR [rbp+0x28],0x289
   14005999f:	call   0x14002ff30
   1400599a4:	lea    rdx,[rbp+0x30]
   1400599a8:	lea    rcx,[rsi+0x30]
   1400599ac:	mov    rbx,rax
   1400599af:	call   0x14002ffd0
   1400599b4:	mov    QWORD PTR [rbx],rax
   1400599b7:	cmp    DWORD PTR [rsi+0x8],r12d
   1400599bb:	jne    0x14005b3df
   1400599c1:	lea    rdx,[rbp+0x28]
   1400599c5:	lea    rcx,[rsi+0x30]
   1400599c9:	mov    DWORD PTR [rbp+0x28],0x337
   1400599d0:	call   0x14002ffd0
   1400599d5:	lea    rcx,[rip+0x1af54]        # 0x140074930
   1400599dc:	lea    rdx,[rbp+0x28]
   1400599e0:	mov    DWORD PTR [rax],0x28a
   1400599e6:	mov    DWORD PTR [rax+0x4],0x337
   1400599ed:	mov    QWORD PTR [rax+0x8],rcx
   1400599f1:	lea    rcx,[rsi+0x10]
   1400599f5:	mov    DWORD PTR [rbp+0x30],0x337
   1400599fc:	mov    DWORD PTR [rbp+0x28],0x28a
   140059a03:	call   0x14002ff30
   140059a08:	lea    rdx,[rbp+0x30]
   140059a0c:	lea    rcx,[rsi+0x30]
   140059a10:	mov    rbx,rax
   140059a13:	call   0x14002ffd0
   140059a18:	mov    QWORD PTR [rbx],rax
   140059a1b:	cmp    DWORD PTR [rsi+0x8],r12d
   140059a1f:	jne    0x14005b3df
   140059a25:	lea    rdx,[rbp+0x28]
   140059a29:	lea    rcx,[rsi+0x30]
   140059a2d:	mov    DWORD PTR [rbp+0x28],0x342
   140059a34:	call   0x14002ffd0
   140059a39:	lea    rcx,[rip+0x1af08]        # 0x140074948
   140059a40:	lea    rdx,[rbp+0x28]
   140059a44:	mov    DWORD PTR [rax],0x28b
   140059a4a:	mov    DWORD PTR [rax+0x4],0x342
   140059a51:	mov    QWORD PTR [rax+0x8],rcx
   140059a55:	lea    rcx,[rsi+0x10]
   140059a59:	mov    DWORD PTR [rbp+0x30],0x342
   140059a60:	mov    DWORD PTR [rbp+0x28],0x28b
   140059a67:	call   0x14002ff30
   140059a6c:	lea    rdx,[rbp+0x30]
   140059a70:	lea    rcx,[rsi+0x30]
   140059a74:	mov    rbx,rax
   140059a77:	call   0x14002ffd0
   140059a7c:	mov    QWORD PTR [rbx],rax
   140059a7f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059a83:	jne    0x14005b3df
   140059a89:	lea    rdx,[rbp+0x28]
   140059a8d:	lea    rcx,[rsi+0x30]
   140059a91:	mov    DWORD PTR [rbp+0x28],0x33e
   140059a98:	call   0x14002ffd0
   140059a9d:	lea    rcx,[rip+0x1aec4]        # 0x140074968
   140059aa4:	lea    rdx,[rbp+0x28]
   140059aa8:	mov    DWORD PTR [rax],0x28c
   140059aae:	mov    DWORD PTR [rax+0x4],0x33e
   140059ab5:	mov    QWORD PTR [rax+0x8],rcx
   140059ab9:	lea    rcx,[rsi+0x10]
   140059abd:	mov    DWORD PTR [rbp+0x30],0x33e
   140059ac4:	mov    DWORD PTR [rbp+0x28],0x28c
   140059acb:	call   0x14002ff30
   140059ad0:	lea    rdx,[rbp+0x30]
   140059ad4:	lea    rcx,[rsi+0x30]
   140059ad8:	mov    rbx,rax
   140059adb:	call   0x14002ffd0
   140059ae0:	mov    QWORD PTR [rbx],rax
   140059ae3:	cmp    DWORD PTR [rsi+0x8],r12d
   140059ae7:	jne    0x14005b3df
   140059aed:	lea    rdx,[rbp+0x28]
   140059af1:	lea    rcx,[rsi+0x30]
   140059af5:	mov    DWORD PTR [rbp+0x28],0x340
   140059afc:	call   0x14002ffd0
   140059b01:	lea    rcx,[rip+0x1ae78]        # 0x140074980
   140059b08:	lea    rdx,[rbp+0x28]
   140059b0c:	mov    DWORD PTR [rax],0x28d
   140059b12:	mov    DWORD PTR [rax+0x4],0x340
   140059b19:	mov    QWORD PTR [rax+0x8],rcx
   140059b1d:	lea    rcx,[rsi+0x10]
   140059b21:	mov    DWORD PTR [rbp+0x30],0x340
   140059b28:	mov    DWORD PTR [rbp+0x28],0x28d
   140059b2f:	call   0x14002ff30
   140059b34:	lea    rdx,[rbp+0x30]
   140059b38:	lea    rcx,[rsi+0x30]
   140059b3c:	mov    rbx,rax
   140059b3f:	call   0x14002ffd0
   140059b44:	mov    QWORD PTR [rbx],rax
   140059b47:	cmp    DWORD PTR [rsi+0x8],r12d
   140059b4b:	jne    0x14005b3df
   140059b51:	lea    rdx,[rbp+0x28]
   140059b55:	lea    rcx,[rsi+0x30]
   140059b59:	mov    DWORD PTR [rbp+0x28],0x33f
   140059b60:	call   0x14002ffd0
   140059b65:	lea    rcx,[rip+0x1ae2c]        # 0x140074998
   140059b6c:	lea    rdx,[rbp+0x28]
   140059b70:	mov    DWORD PTR [rax],0x28e
   140059b76:	mov    DWORD PTR [rax+0x4],0x33f
   140059b7d:	mov    QWORD PTR [rax+0x8],rcx
   140059b81:	lea    rcx,[rsi+0x10]
   140059b85:	mov    DWORD PTR [rbp+0x30],0x33f
   140059b8c:	mov    DWORD PTR [rbp+0x28],0x28e
   140059b93:	call   0x14002ff30
   140059b98:	lea    rdx,[rbp+0x30]
   140059b9c:	lea    rcx,[rsi+0x30]
   140059ba0:	mov    rbx,rax
   140059ba3:	call   0x14002ffd0
   140059ba8:	mov    QWORD PTR [rbx],rax
   140059bab:	cmp    DWORD PTR [rsi+0x8],r12d
   140059baf:	jne    0x14005b3df
   140059bb5:	lea    rdx,[rbp+0x28]
   140059bb9:	lea    rcx,[rsi+0x30]
   140059bbd:	mov    DWORD PTR [rbp+0x28],0x341
   140059bc4:	call   0x14002ffd0
   140059bc9:	lea    rcx,[rip+0x1ade0]        # 0x1400749b0
   140059bd0:	lea    rdx,[rbp+0x28]
   140059bd4:	mov    DWORD PTR [rax],0x28f
   140059bda:	mov    DWORD PTR [rax+0x4],0x341
   140059be1:	mov    QWORD PTR [rax+0x8],rcx
   140059be5:	lea    rcx,[rsi+0x10]
   140059be9:	mov    DWORD PTR [rbp+0x30],0x341
   140059bf0:	mov    DWORD PTR [rbp+0x28],0x28f
   140059bf7:	call   0x14002ff30
   140059bfc:	lea    rdx,[rbp+0x30]
   140059c00:	lea    rcx,[rsi+0x30]
   140059c04:	mov    rbx,rax
   140059c07:	call   0x14002ffd0
   140059c0c:	mov    QWORD PTR [rbx],rax
   140059c0f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059c13:	jne    0x14005b3df
   140059c19:	lea    rdx,[rbp+0x28]
   140059c1d:	lea    rcx,[rsi+0x30]
   140059c21:	mov    DWORD PTR [rbp+0x28],0x3c0
   140059c28:	call   0x14002ffd0
   140059c2d:	lea    rcx,[rip+0x1ad94]        # 0x1400749c8
   140059c34:	lea    rdx,[rbp+0x28]
   140059c38:	mov    DWORD PTR [rax],0x290
   140059c3e:	mov    DWORD PTR [rax+0x4],0x3c0
   140059c45:	mov    QWORD PTR [rax+0x8],rcx
   140059c49:	lea    rcx,[rsi+0x10]
   140059c4d:	mov    DWORD PTR [rbp+0x30],0x3c0
   140059c54:	mov    DWORD PTR [rbp+0x28],0x290
   140059c5b:	call   0x14002ff30
   140059c60:	lea    rdx,[rbp+0x30]
   140059c64:	lea    rcx,[rsi+0x30]
   140059c68:	mov    rbx,rax
   140059c6b:	call   0x14002ffd0
   140059c70:	mov    QWORD PTR [rbx],rax
   140059c73:	cmp    DWORD PTR [rsi+0x8],r12d
   140059c77:	jne    0x14005b3df
   140059c7d:	lea    rdx,[rbp+0x28]
   140059c81:	lea    rcx,[rsi+0x30]
   140059c85:	mov    DWORD PTR [rbp+0x28],0x3c1
   140059c8c:	call   0x14002ffd0
   140059c91:	lea    rcx,[rip+0x1ad50]        # 0x1400749e8
   140059c98:	lea    rdx,[rbp+0x28]
   140059c9c:	mov    DWORD PTR [rax],0x291
   140059ca2:	mov    DWORD PTR [rax+0x4],0x3c1
   140059ca9:	mov    QWORD PTR [rax+0x8],rcx
   140059cad:	lea    rcx,[rsi+0x10]
   140059cb1:	mov    DWORD PTR [rbp+0x30],0x3c1
   140059cb8:	mov    DWORD PTR [rbp+0x28],0x291
   140059cbf:	call   0x14002ff30
   140059cc4:	lea    rdx,[rbp+0x30]
   140059cc8:	lea    rcx,[rsi+0x30]
   140059ccc:	mov    rbx,rax
   140059ccf:	call   0x14002ffd0
   140059cd4:	mov    QWORD PTR [rbx],rax
   140059cd7:	cmp    DWORD PTR [rsi+0x8],r12d
   140059cdb:	jne    0x14005b3df
   140059ce1:	lea    rdx,[rbp+0x28]
   140059ce5:	lea    rcx,[rsi+0x30]
   140059ce9:	mov    DWORD PTR [rbp+0x28],0x3c2
   140059cf0:	call   0x14002ffd0
   140059cf5:	lea    rcx,[rip+0x1ad0c]        # 0x140074a08
   140059cfc:	lea    rdx,[rbp+0x28]
   140059d00:	mov    DWORD PTR [rax],0x292
   140059d06:	mov    DWORD PTR [rax+0x4],0x3c2
   140059d0d:	mov    QWORD PTR [rax+0x8],rcx
   140059d11:	lea    rcx,[rsi+0x10]
   140059d15:	mov    DWORD PTR [rbp+0x30],0x3c2
   140059d1c:	mov    DWORD PTR [rbp+0x28],0x292
   140059d23:	call   0x14002ff30
   140059d28:	lea    rdx,[rbp+0x30]
   140059d2c:	lea    rcx,[rsi+0x30]
   140059d30:	mov    rbx,rax
   140059d33:	call   0x14002ffd0
   140059d38:	mov    QWORD PTR [rbx],rax
   140059d3b:	cmp    DWORD PTR [rsi+0x8],r12d
   140059d3f:	jne    0x14005b3df
   140059d45:	lea    rdx,[rbp+0x28]
   140059d49:	lea    rcx,[rsi+0x30]
   140059d4d:	mov    DWORD PTR [rbp+0x28],0x3c5
   140059d54:	call   0x14002ffd0
   140059d59:	lea    rcx,[rip+0x1acc8]        # 0x140074a28
   140059d60:	lea    rdx,[rbp+0x28]
   140059d64:	mov    DWORD PTR [rax],0x299
   140059d6a:	mov    DWORD PTR [rax+0x4],0x3c5
   140059d71:	mov    QWORD PTR [rax+0x8],rcx
   140059d75:	lea    rcx,[rsi+0x10]
   140059d79:	mov    DWORD PTR [rbp+0x30],0x3c5
   140059d80:	mov    DWORD PTR [rbp+0x28],0x299
   140059d87:	call   0x14002ff30
   140059d8c:	lea    rdx,[rbp+0x30]
   140059d90:	lea    rcx,[rsi+0x30]
   140059d94:	mov    rbx,rax
   140059d97:	call   0x14002ffd0
   140059d9c:	mov    QWORD PTR [rbx],rax
   140059d9f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059da3:	jne    0x14005b3df
   140059da9:	lea    rdx,[rbp+0x28]
   140059dad:	lea    rcx,[rsi+0x30]
   140059db1:	mov    DWORD PTR [rbp+0x28],0x131
   140059db8:	call   0x14002ffd0
   140059dbd:	lea    rcx,[rip+0x1ac84]        # 0x140074a48
   140059dc4:	lea    rdx,[rbp+0x28]
   140059dc8:	mov    DWORD PTR [rax],0x29e
   140059dce:	mov    DWORD PTR [rax+0x4],0x131
   140059dd5:	mov    QWORD PTR [rax+0x8],rcx
   140059dd9:	lea    rcx,[rsi+0x10]
   140059ddd:	mov    DWORD PTR [rbp+0x30],0x131
   140059de4:	mov    DWORD PTR [rbp+0x28],0x29e
   140059deb:	call   0x14002ff30
   140059df0:	lea    rdx,[rbp+0x30]
   140059df4:	lea    rcx,[rsi+0x30]
   140059df8:	mov    rbx,rax
   140059dfb:	call   0x14002ffd0
   140059e00:	mov    QWORD PTR [rbx],rax
   140059e03:	cmp    DWORD PTR [rsi+0x8],r12d
   140059e07:	jne    0x14005b3df
   140059e0d:	lea    rdx,[rbp+0x28]
   140059e11:	lea    rcx,[rsi+0x30]
   140059e15:	mov    DWORD PTR [rbp+0x28],0x132
   140059e1c:	call   0x14002ffd0
   140059e21:	lea    rcx,[rip+0x1ac38]        # 0x140074a60
   140059e28:	lea    rdx,[rbp+0x28]
   140059e2c:	mov    DWORD PTR [rax],0x29f
   140059e32:	mov    DWORD PTR [rax+0x4],0x132
   140059e39:	mov    QWORD PTR [rax+0x8],rcx
   140059e3d:	lea    rcx,[rsi+0x10]
   140059e41:	mov    DWORD PTR [rbp+0x30],0x132
   140059e48:	mov    DWORD PTR [rbp+0x28],0x29f
   140059e4f:	call   0x14002ff30
   140059e54:	lea    rdx,[rbp+0x30]
   140059e58:	lea    rcx,[rsi+0x30]
   140059e5c:	mov    rbx,rax
   140059e5f:	call   0x14002ffd0
   140059e64:	mov    QWORD PTR [rbx],rax
   140059e67:	cmp    DWORD PTR [rsi+0x8],r12d
   140059e6b:	jne    0x14005b3df
   140059e71:	lea    rdx,[rbp+0x28]
   140059e75:	lea    rcx,[rsi+0x30]
   140059e79:	mov    DWORD PTR [rbp+0x28],0x12d
   140059e80:	call   0x14002ffd0
   140059e85:	lea    rcx,[rip+0x1abec]        # 0x140074a78
   140059e8c:	lea    rdx,[rbp+0x28]
   140059e90:	mov    DWORD PTR [rax],0x2a0
   140059e96:	mov    DWORD PTR [rax+0x4],0x12d
   140059e9d:	mov    QWORD PTR [rax+0x8],rcx
   140059ea1:	lea    rcx,[rsi+0x10]
   140059ea5:	mov    DWORD PTR [rbp+0x30],0x12d
   140059eac:	mov    DWORD PTR [rbp+0x28],0x2a0
   140059eb3:	call   0x14002ff30
   140059eb8:	lea    rdx,[rbp+0x30]
   140059ebc:	lea    rcx,[rsi+0x30]
   140059ec0:	mov    rbx,rax
   140059ec3:	call   0x14002ffd0
   140059ec8:	mov    QWORD PTR [rbx],rax
   140059ecb:	cmp    DWORD PTR [rsi+0x8],r12d
   140059ecf:	jne    0x14005b3df
   140059ed5:	lea    rdx,[rbp+0x28]
   140059ed9:	lea    rcx,[rsi+0x30]
   140059edd:	mov    DWORD PTR [rbp+0x28],0x12e
   140059ee4:	call   0x14002ffd0
   140059ee9:	lea    rcx,[rip+0x1aba0]        # 0x140074a90
   140059ef0:	lea    rdx,[rbp+0x28]
   140059ef4:	mov    DWORD PTR [rax],0x2a2
   140059efa:	mov    DWORD PTR [rax+0x4],0x12e
   140059f01:	mov    QWORD PTR [rax+0x8],rcx
   140059f05:	lea    rcx,[rsi+0x10]
   140059f09:	mov    DWORD PTR [rbp+0x30],0x12e
   140059f10:	mov    DWORD PTR [rbp+0x28],0x2a2
   140059f17:	call   0x14002ff30
   140059f1c:	lea    rdx,[rbp+0x30]
   140059f20:	lea    rcx,[rsi+0x30]
   140059f24:	mov    rbx,rax
   140059f27:	call   0x14002ffd0
   140059f2c:	mov    QWORD PTR [rbx],rax
   140059f2f:	cmp    DWORD PTR [rsi+0x8],r12d
   140059f33:	jne    0x14005b3df
   140059f39:	lea    rdx,[rbp+0x28]
   140059f3d:	lea    rcx,[rsi+0x30]
   140059f41:	mov    DWORD PTR [rbp+0x28],0x12f
   140059f48:	call   0x14002ffd0
   140059f4d:	lea    rcx,[rip+0x1ab54]        # 0x140074aa8
   140059f54:	lea    rdx,[rbp+0x28]
   140059f58:	mov    DWORD PTR [rax],0x2a3
   140059f5e:	mov    DWORD PTR [rax+0x4],0x12f
   140059f65:	mov    QWORD PTR [rax+0x8],rcx
   140059f69:	lea    rcx,[rsi+0x10]
   140059f6d:	mov    DWORD PTR [rbp+0x30],0x12f
   140059f74:	mov    DWORD PTR [rbp+0x28],0x2a3
   140059f7b:	call   0x14002ff30
   140059f80:	lea    rdx,[rbp+0x30]
   140059f84:	lea    rcx,[rsi+0x30]
   140059f88:	mov    rbx,rax
   140059f8b:	call   0x14002ffd0
   140059f90:	mov    QWORD PTR [rbx],rax
   140059f93:	cmp    DWORD PTR [rsi+0x8],r12d
   140059f97:	jne    0x14005b3df
   140059f9d:	lea    rdx,[rbp+0x28]
   140059fa1:	lea    rcx,[rsi+0x30]
   140059fa5:	mov    DWORD PTR [rbp+0x28],0x130
   140059fac:	call   0x14002ffd0
   140059fb1:	lea    rcx,[rip+0x1ab08]        # 0x140074ac0
   140059fb8:	lea    rdx,[rbp+0x28]
   140059fbc:	mov    DWORD PTR [rax],0x2e5
   140059fc2:	mov    DWORD PTR [rax+0x4],0x130
   140059fc9:	mov    QWORD PTR [rax+0x8],rcx
   140059fcd:	lea    rcx,[rsi+0x10]
   140059fd1:	mov    DWORD PTR [rbp+0x30],0x130
   140059fd8:	mov    DWORD PTR [rbp+0x28],0x2e5
   140059fdf:	call   0x14002ff30
   140059fe4:	lea    rdx,[rbp+0x30]
   140059fe8:	lea    rcx,[rsi+0x30]
   140059fec:	mov    rbx,rax
   140059fef:	call   0x14002ffd0
   140059ff4:	mov    QWORD PTR [rbx],rax
   140059ff7:	cmp    DWORD PTR [rsi+0x8],r12d
   140059ffb:	jne    0x14005b3df
   14005a001:	lea    rdx,[rbp+0x28]
   14005a005:	lea    rcx,[rsi+0x30]
   14005a009:	mov    DWORD PTR [rbp+0x28],0x133
   14005a010:	call   0x14002ffd0
   14005a015:	lea    rcx,[rip+0x1aabc]        # 0x140074ad8
   14005a01c:	lea    rdx,[rbp+0x28]
   14005a020:	mov    DWORD PTR [rax],0x2a4
   14005a026:	mov    DWORD PTR [rax+0x4],0x133
   14005a02d:	mov    QWORD PTR [rax+0x8],rcx
   14005a031:	lea    rcx,[rsi+0x10]
   14005a035:	mov    DWORD PTR [rbp+0x30],0x133
   14005a03c:	mov    DWORD PTR [rbp+0x28],0x2a4
   14005a043:	call   0x14002ff30
   14005a048:	lea    rdx,[rbp+0x30]
   14005a04c:	lea    rcx,[rsi+0x30]
   14005a050:	mov    rbx,rax
   14005a053:	call   0x14002ffd0
   14005a058:	mov    QWORD PTR [rbx],rax
   14005a05b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a05f:	jne    0x14005b3df
   14005a065:	lea    rdx,[rbp+0x28]
   14005a069:	lea    rcx,[rsi+0x30]
   14005a06d:	mov    DWORD PTR [rbp+0x28],0x7d1
   14005a074:	call   0x14002ffd0
   14005a079:	lea    rcx,[rip+0x1aa70]        # 0x140074af0
   14005a080:	lea    rdx,[rbp+0x28]
   14005a084:	mov    DWORD PTR [rax],0x2a5
   14005a08a:	mov    DWORD PTR [rax+0x4],0x7d1
   14005a091:	mov    QWORD PTR [rax+0x8],rcx
   14005a095:	lea    rcx,[rsi+0x10]
   14005a099:	mov    DWORD PTR [rbp+0x30],0x7d1
   14005a0a0:	mov    DWORD PTR [rbp+0x28],0x2a5
   14005a0a7:	call   0x14002ff30
   14005a0ac:	lea    rdx,[rbp+0x30]
   14005a0b0:	lea    rcx,[rsi+0x30]
   14005a0b4:	mov    rbx,rax
   14005a0b7:	call   0x14002ffd0
   14005a0bc:	mov    QWORD PTR [rbx],rax
   14005a0bf:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a0c3:	jne    0x14005b3df
   14005a0c9:	lea    rdx,[rbp+0x28]
   14005a0cd:	lea    rcx,[rsi+0x30]
   14005a0d1:	mov    DWORD PTR [rbp+0x28],0x7d2
   14005a0d8:	call   0x14002ffd0
   14005a0dd:	lea    rcx,[rip+0x1aa34]        # 0x140074b18
   14005a0e4:	lea    rdx,[rbp+0x28]
   14005a0e8:	mov    DWORD PTR [rax],0x2a6
   14005a0ee:	mov    DWORD PTR [rax+0x4],0x7d2
   14005a0f5:	mov    QWORD PTR [rax+0x8],rcx
   14005a0f9:	lea    rcx,[rsi+0x10]
   14005a0fd:	mov    DWORD PTR [rbp+0x30],0x7d2
   14005a104:	mov    DWORD PTR [rbp+0x28],0x2a6
   14005a10b:	call   0x14002ff30
   14005a110:	lea    rdx,[rbp+0x30]
   14005a114:	lea    rcx,[rsi+0x30]
   14005a118:	mov    rbx,rax
   14005a11b:	call   0x14002ffd0
   14005a120:	mov    QWORD PTR [rbx],rax
   14005a123:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a127:	jne    0x14005b3df
   14005a12d:	lea    rdx,[rbp+0x28]
   14005a131:	lea    rcx,[rsi+0x30]
   14005a135:	mov    DWORD PTR [rbp+0x28],0x7d3
   14005a13c:	call   0x14002ffd0
   14005a141:	lea    rcx,[rip+0x1a9f8]        # 0x140074b40
   14005a148:	lea    rdx,[rbp+0x28]
   14005a14c:	mov    DWORD PTR [rax],0x2a7
   14005a152:	mov    DWORD PTR [rax+0x4],0x7d3
   14005a159:	mov    QWORD PTR [rax+0x8],rcx
   14005a15d:	lea    rcx,[rsi+0x10]
   14005a161:	mov    DWORD PTR [rbp+0x30],0x7d3
   14005a168:	mov    DWORD PTR [rbp+0x28],0x2a7
   14005a16f:	call   0x14002ff30
   14005a174:	lea    rdx,[rbp+0x30]
   14005a178:	lea    rcx,[rsi+0x30]
   14005a17c:	mov    rbx,rax
   14005a17f:	call   0x14002ffd0
   14005a184:	mov    QWORD PTR [rbx],rax
   14005a187:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a18b:	jne    0x14005b3df
   14005a191:	lea    rdx,[rbp+0x28]
   14005a195:	lea    rcx,[rsi+0x30]
   14005a199:	mov    DWORD PTR [rbp+0x28],0x7d4
   14005a1a0:	call   0x14002ffd0
   14005a1a5:	lea    rcx,[rip+0x1a9a4]        # 0x140074b50
   14005a1ac:	lea    rdx,[rbp+0x28]
   14005a1b0:	mov    DWORD PTR [rax],0x2a8
   14005a1b6:	mov    DWORD PTR [rax+0x4],0x7d4
   14005a1bd:	mov    QWORD PTR [rax+0x8],rcx
   14005a1c1:	lea    rcx,[rsi+0x10]
   14005a1c5:	mov    DWORD PTR [rbp+0x30],0x7d4
   14005a1cc:	mov    DWORD PTR [rbp+0x28],0x2a8
   14005a1d3:	call   0x14002ff30
   14005a1d8:	lea    rdx,[rbp+0x30]
   14005a1dc:	lea    rcx,[rsi+0x30]
   14005a1e0:	mov    rbx,rax
   14005a1e3:	call   0x14002ffd0
   14005a1e8:	mov    QWORD PTR [rbx],rax
   14005a1eb:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a1ef:	jne    0x14005b3df
   14005a1f5:	lea    rdx,[rbp+0x28]
   14005a1f9:	lea    rcx,[rsi+0x30]
   14005a1fd:	mov    DWORD PTR [rbp+0x28],0x7d5
   14005a204:	call   0x14002ffd0
   14005a209:	lea    rcx,[rip+0x1a950]        # 0x140074b60
   14005a210:	lea    rdx,[rbp+0x28]
   14005a214:	mov    DWORD PTR [rax],0x2a9
   14005a21a:	mov    DWORD PTR [rax+0x4],0x7d5
   14005a221:	mov    QWORD PTR [rax+0x8],rcx
   14005a225:	lea    rcx,[rsi+0x10]
   14005a229:	mov    DWORD PTR [rbp+0x30],0x7d5
   14005a230:	mov    DWORD PTR [rbp+0x28],0x2a9
   14005a237:	call   0x14002ff30
   14005a23c:	lea    rdx,[rbp+0x30]
   14005a240:	lea    rcx,[rsi+0x30]
   14005a244:	mov    rbx,rax
   14005a247:	call   0x14002ffd0
   14005a24c:	mov    QWORD PTR [rbx],rax
   14005a24f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a253:	jne    0x14005b3df
   14005a259:	lea    rdx,[rbp+0x28]
   14005a25d:	lea    rcx,[rsi+0x30]
   14005a261:	mov    DWORD PTR [rbp+0x28],0x7d6
   14005a268:	call   0x14002ffd0
   14005a26d:	lea    rcx,[rip+0x1a8fc]        # 0x140074b70
   14005a274:	lea    rdx,[rbp+0x28]
   14005a278:	mov    DWORD PTR [rax],0x2aa
   14005a27e:	mov    DWORD PTR [rax+0x4],0x7d6
   14005a285:	mov    QWORD PTR [rax+0x8],rcx
   14005a289:	lea    rcx,[rsi+0x10]
   14005a28d:	mov    DWORD PTR [rbp+0x30],0x7d6
   14005a294:	mov    DWORD PTR [rbp+0x28],0x2aa
   14005a29b:	call   0x14002ff30
   14005a2a0:	lea    rdx,[rbp+0x30]
   14005a2a4:	lea    rcx,[rsi+0x30]
   14005a2a8:	mov    rbx,rax
   14005a2ab:	call   0x14002ffd0
   14005a2b0:	mov    QWORD PTR [rbx],rax
   14005a2b3:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a2b7:	jne    0x14005b3df
   14005a2bd:	lea    rdx,[rbp+0x28]
   14005a2c1:	lea    rcx,[rsi+0x30]
   14005a2c5:	mov    DWORD PTR [rbp+0x28],0x7d7
   14005a2cc:	call   0x14002ffd0
   14005a2d1:	lea    rcx,[rip+0x1a8a8]        # 0x140074b80
   14005a2d8:	lea    rdx,[rbp+0x28]
   14005a2dc:	mov    DWORD PTR [rax],0x2ab
   14005a2e2:	mov    DWORD PTR [rax+0x4],0x7d7
   14005a2e9:	mov    QWORD PTR [rax+0x8],rcx
   14005a2ed:	lea    rcx,[rsi+0x10]
   14005a2f1:	mov    DWORD PTR [rbp+0x30],0x7d7
   14005a2f8:	mov    DWORD PTR [rbp+0x28],0x2ab
   14005a2ff:	call   0x14002ff30
   14005a304:	lea    rdx,[rbp+0x30]
   14005a308:	lea    rcx,[rsi+0x30]
   14005a30c:	mov    rbx,rax
   14005a30f:	call   0x14002ffd0
   14005a314:	mov    QWORD PTR [rbx],rax
   14005a317:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a31b:	jne    0x14005b3df
   14005a321:	lea    rdx,[rbp+0x28]
   14005a325:	lea    rcx,[rsi+0x30]
   14005a329:	mov    DWORD PTR [rbp+0x28],0x7d8
   14005a330:	call   0x14002ffd0
   14005a335:	lea    rcx,[rip+0x1a854]        # 0x140074b90
   14005a33c:	lea    rdx,[rbp+0x28]
   14005a340:	mov    DWORD PTR [rax],0x2ac
   14005a346:	mov    DWORD PTR [rax+0x4],0x7d8
   14005a34d:	mov    QWORD PTR [rax+0x8],rcx
   14005a351:	lea    rcx,[rsi+0x10]
   14005a355:	mov    DWORD PTR [rbp+0x30],0x7d8
   14005a35c:	mov    DWORD PTR [rbp+0x28],0x2ac
   14005a363:	call   0x14002ff30
   14005a368:	lea    rdx,[rbp+0x30]
   14005a36c:	lea    rcx,[rsi+0x30]
   14005a370:	mov    rbx,rax
   14005a373:	call   0x14002ffd0
   14005a378:	mov    QWORD PTR [rbx],rax
   14005a37b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a37f:	jne    0x14005b3df
   14005a385:	lea    rdx,[rbp+0x28]
   14005a389:	lea    rcx,[rsi+0x30]
   14005a38d:	mov    DWORD PTR [rbp+0x28],0x7d9
   14005a394:	call   0x14002ffd0
   14005a399:	lea    rcx,[rip+0x1a808]        # 0x140074ba8
   14005a3a0:	lea    rdx,[rbp+0x28]
   14005a3a4:	mov    DWORD PTR [rax],0x2ad
   14005a3aa:	mov    DWORD PTR [rax+0x4],0x7d9
   14005a3b1:	mov    QWORD PTR [rax+0x8],rcx
   14005a3b5:	lea    rcx,[rsi+0x10]
   14005a3b9:	mov    DWORD PTR [rbp+0x30],0x7d9
   14005a3c0:	mov    DWORD PTR [rbp+0x28],0x2ad
   14005a3c7:	call   0x14002ff30
   14005a3cc:	lea    rdx,[rbp+0x30]
   14005a3d0:	lea    rcx,[rsi+0x30]
   14005a3d4:	mov    rbx,rax
   14005a3d7:	call   0x14002ffd0
   14005a3dc:	mov    QWORD PTR [rbx],rax
   14005a3df:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a3e3:	jne    0x14005b3df
   14005a3e9:	lea    rdx,[rbp+0x28]
   14005a3ed:	lea    rcx,[rsi+0x30]
   14005a3f1:	mov    DWORD PTR [rbp+0x28],0x7da
   14005a3f8:	call   0x14002ffd0
   14005a3fd:	lea    rcx,[rip+0x1a7bc]        # 0x140074bc0
   14005a404:	lea    rdx,[rbp+0x28]
   14005a408:	mov    DWORD PTR [rax],0x2ae
   14005a40e:	mov    DWORD PTR [rax+0x4],0x7da
   14005a415:	mov    QWORD PTR [rax+0x8],rcx
   14005a419:	lea    rcx,[rsi+0x10]
   14005a41d:	mov    DWORD PTR [rbp+0x30],0x7da
   14005a424:	mov    DWORD PTR [rbp+0x28],0x2ae
   14005a42b:	call   0x14002ff30
   14005a430:	lea    rdx,[rbp+0x30]
   14005a434:	lea    rcx,[rsi+0x30]
   14005a438:	mov    rbx,rax
   14005a43b:	call   0x14002ffd0
   14005a440:	mov    QWORD PTR [rbx],rax
   14005a443:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a447:	jne    0x14005b3df
   14005a44d:	lea    rdx,[rbp+0x28]
   14005a451:	lea    rcx,[rsi+0x30]
   14005a455:	mov    DWORD PTR [rbp+0x28],0x7db
   14005a45c:	call   0x14002ffd0
   14005a461:	lea    rcx,[rip+0x1a770]        # 0x140074bd8
   14005a468:	lea    rdx,[rbp+0x28]
   14005a46c:	mov    DWORD PTR [rax],0x2af
   14005a472:	mov    DWORD PTR [rax+0x4],0x7db
   14005a479:	mov    QWORD PTR [rax+0x8],rcx
   14005a47d:	lea    rcx,[rsi+0x10]
   14005a481:	mov    DWORD PTR [rbp+0x30],0x7db
   14005a488:	mov    DWORD PTR [rbp+0x28],0x2af
   14005a48f:	call   0x14002ff30
   14005a494:	lea    rdx,[rbp+0x30]
   14005a498:	lea    rcx,[rsi+0x30]
   14005a49c:	mov    rbx,rax
   14005a49f:	call   0x14002ffd0
   14005a4a4:	mov    QWORD PTR [rbx],rax
   14005a4a7:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a4ab:	jne    0x14005b3df
   14005a4b1:	lea    rdx,[rbp+0x28]
   14005a4b5:	lea    rcx,[rsi+0x30]
   14005a4b9:	mov    DWORD PTR [rbp+0x28],0x7dc
   14005a4c0:	call   0x14002ffd0
   14005a4c5:	lea    rcx,[rip+0x1a72c]        # 0x140074bf8
   14005a4cc:	lea    rdx,[rbp+0x28]
   14005a4d0:	mov    DWORD PTR [rax],0x2b0
   14005a4d6:	mov    DWORD PTR [rax+0x4],0x7dc
   14005a4dd:	mov    QWORD PTR [rax+0x8],rcx
   14005a4e1:	lea    rcx,[rsi+0x10]
   14005a4e5:	mov    DWORD PTR [rbp+0x30],0x7dc
   14005a4ec:	mov    DWORD PTR [rbp+0x28],0x2b0
   14005a4f3:	call   0x14002ff30
   14005a4f8:	lea    rdx,[rbp+0x30]
   14005a4fc:	lea    rcx,[rsi+0x30]
   14005a500:	mov    rbx,rax
   14005a503:	call   0x14002ffd0
   14005a508:	mov    QWORD PTR [rbx],rax
   14005a50b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a50f:	jne    0x14005b3df
   14005a515:	lea    rdx,[rbp+0x28]
   14005a519:	lea    rcx,[rsi+0x30]
   14005a51d:	mov    DWORD PTR [rbp+0x28],0x7dd
   14005a524:	call   0x14002ffd0
   14005a529:	lea    rcx,[rip+0x1a6e8]        # 0x140074c18
   14005a530:	lea    rdx,[rbp+0x28]
   14005a534:	mov    DWORD PTR [rax],0x2b1
   14005a53a:	mov    DWORD PTR [rax+0x4],0x7dd
   14005a541:	mov    QWORD PTR [rax+0x8],rcx
   14005a545:	lea    rcx,[rsi+0x10]
   14005a549:	mov    DWORD PTR [rbp+0x30],0x7dd
   14005a550:	mov    DWORD PTR [rbp+0x28],0x2b1
   14005a557:	call   0x14002ff30
   14005a55c:	lea    rdx,[rbp+0x30]
   14005a560:	lea    rcx,[rsi+0x30]
   14005a564:	mov    rbx,rax
   14005a567:	call   0x14002ffd0
   14005a56c:	mov    QWORD PTR [rbx],rax
   14005a56f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a573:	jne    0x14005b3df
   14005a579:	lea    rdx,[rbp+0x28]
   14005a57d:	lea    rcx,[rsi+0x30]
   14005a581:	mov    DWORD PTR [rbp+0x28],0x7de
   14005a588:	call   0x14002ffd0
   14005a58d:	lea    rcx,[rip+0x1a6a4]        # 0x140074c38
   14005a594:	lea    rdx,[rbp+0x28]
   14005a598:	mov    DWORD PTR [rax],0x2b2
   14005a59e:	mov    DWORD PTR [rax+0x4],0x7de
   14005a5a5:	mov    QWORD PTR [rax+0x8],rcx
   14005a5a9:	lea    rcx,[rsi+0x10]
   14005a5ad:	mov    DWORD PTR [rbp+0x30],0x7de
   14005a5b4:	mov    DWORD PTR [rbp+0x28],0x2b2
   14005a5bb:	call   0x14002ff30
   14005a5c0:	lea    rdx,[rbp+0x30]
   14005a5c4:	lea    rcx,[rsi+0x30]
   14005a5c8:	mov    rbx,rax
   14005a5cb:	call   0x14002ffd0
   14005a5d0:	mov    QWORD PTR [rbx],rax
   14005a5d3:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a5d7:	jne    0x14005b3df
   14005a5dd:	lea    rdx,[rbp+0x28]
   14005a5e1:	lea    rcx,[rsi+0x30]
   14005a5e5:	mov    DWORD PTR [rbp+0x28],0x7df
   14005a5ec:	call   0x14002ffd0
   14005a5f1:	lea    rcx,[rip+0x1a660]        # 0x140074c58
   14005a5f8:	lea    rdx,[rbp+0x28]
   14005a5fc:	mov    DWORD PTR [rax],0x2b3
   14005a602:	mov    DWORD PTR [rax+0x4],0x7df
   14005a609:	mov    QWORD PTR [rax+0x8],rcx
   14005a60d:	lea    rcx,[rsi+0x10]
   14005a611:	mov    DWORD PTR [rbp+0x30],0x7df
   14005a618:	mov    DWORD PTR [rbp+0x28],0x2b3
   14005a61f:	call   0x14002ff30
   14005a624:	lea    rdx,[rbp+0x30]
   14005a628:	lea    rcx,[rsi+0x30]
   14005a62c:	mov    rbx,rax
   14005a62f:	call   0x14002ffd0
   14005a634:	mov    QWORD PTR [rbx],rax
   14005a637:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a63b:	jne    0x14005b3df
   14005a641:	lea    rdx,[rbp+0x28]
   14005a645:	lea    rcx,[rsi+0x30]
   14005a649:	mov    DWORD PTR [rbp+0x28],0x7e0
   14005a650:	call   0x14002ffd0
   14005a655:	lea    rcx,[rip+0x1a61c]        # 0x140074c78
   14005a65c:	lea    rdx,[rbp+0x28]
   14005a660:	mov    DWORD PTR [rax],0x2b4
   14005a666:	mov    DWORD PTR [rax+0x4],0x7e0
   14005a66d:	mov    QWORD PTR [rax+0x8],rcx
   14005a671:	lea    rcx,[rsi+0x10]
   14005a675:	mov    DWORD PTR [rbp+0x30],0x7e0
   14005a67c:	mov    DWORD PTR [rbp+0x28],0x2b4
   14005a683:	call   0x14002ff30
   14005a688:	lea    rdx,[rbp+0x30]
   14005a68c:	lea    rcx,[rsi+0x30]
   14005a690:	mov    rbx,rax
   14005a693:	call   0x14002ffd0
   14005a698:	mov    QWORD PTR [rbx],rax
   14005a69b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a69f:	jne    0x14005b3df
   14005a6a5:	lea    rdx,[rbp+0x28]
   14005a6a9:	lea    rcx,[rsi+0x30]
   14005a6ad:	mov    DWORD PTR [rbp+0x28],0x7e1
   14005a6b4:	call   0x14002ffd0
   14005a6b9:	lea    rcx,[rip+0x1a5d8]        # 0x140074c98
   14005a6c0:	lea    rdx,[rbp+0x28]
   14005a6c4:	mov    DWORD PTR [rax],0x2b5
   14005a6ca:	mov    DWORD PTR [rax+0x4],0x7e1
   14005a6d1:	mov    QWORD PTR [rax+0x8],rcx
   14005a6d5:	lea    rcx,[rsi+0x10]
   14005a6d9:	mov    DWORD PTR [rbp+0x30],0x7e1
   14005a6e0:	mov    DWORD PTR [rbp+0x28],0x2b5
   14005a6e7:	call   0x14002ff30
   14005a6ec:	lea    rdx,[rbp+0x30]
   14005a6f0:	lea    rcx,[rsi+0x30]
   14005a6f4:	mov    rbx,rax
   14005a6f7:	call   0x14002ffd0
   14005a6fc:	mov    QWORD PTR [rbx],rax
   14005a6ff:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a703:	jne    0x14005b3df
   14005a709:	lea    rdx,[rbp+0x28]
   14005a70d:	lea    rcx,[rsi+0x30]
   14005a711:	mov    DWORD PTR [rbp+0x28],0x7e2
   14005a718:	call   0x14002ffd0
   14005a71d:	lea    rcx,[rip+0x1a594]        # 0x140074cb8
   14005a724:	lea    rdx,[rbp+0x28]
   14005a728:	mov    DWORD PTR [rax],0x2b6
   14005a72e:	mov    DWORD PTR [rax+0x4],0x7e2
   14005a735:	mov    QWORD PTR [rax+0x8],rcx
   14005a739:	lea    rcx,[rsi+0x10]
   14005a73d:	mov    DWORD PTR [rbp+0x30],0x7e2
   14005a744:	mov    DWORD PTR [rbp+0x28],0x2b6
   14005a74b:	call   0x14002ff30
   14005a750:	lea    rdx,[rbp+0x30]
   14005a754:	lea    rcx,[rsi+0x30]
   14005a758:	mov    rbx,rax
   14005a75b:	call   0x14002ffd0
   14005a760:	mov    QWORD PTR [rbx],rax
   14005a763:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a767:	jne    0x14005b3df
   14005a76d:	lea    rdx,[rbp+0x28]
   14005a771:	lea    rcx,[rsi+0x30]
   14005a775:	mov    DWORD PTR [rbp+0x28],0x7e3
   14005a77c:	call   0x14002ffd0
   14005a781:	lea    rcx,[rip+0x1a550]        # 0x140074cd8
   14005a788:	lea    rdx,[rbp+0x28]
   14005a78c:	mov    DWORD PTR [rax],0x2b7
   14005a792:	mov    DWORD PTR [rax+0x4],0x7e3
   14005a799:	mov    QWORD PTR [rax+0x8],rcx
   14005a79d:	lea    rcx,[rsi+0x10]
   14005a7a1:	mov    DWORD PTR [rbp+0x30],0x7e3
   14005a7a8:	mov    DWORD PTR [rbp+0x28],0x2b7
   14005a7af:	call   0x14002ff30
   14005a7b4:	lea    rdx,[rbp+0x30]
   14005a7b8:	lea    rcx,[rsi+0x30]
   14005a7bc:	mov    rbx,rax
   14005a7bf:	call   0x14002ffd0
   14005a7c4:	mov    QWORD PTR [rbx],rax
   14005a7c7:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a7cb:	jne    0x14005b3df
   14005a7d1:	lea    rdx,[rbp+0x28]
   14005a7d5:	lea    rcx,[rsi+0x30]
   14005a7d9:	mov    DWORD PTR [rbp+0x28],0x7e4
   14005a7e0:	call   0x14002ffd0
   14005a7e5:	lea    rcx,[rip+0x1a504]        # 0x140074cf0
   14005a7ec:	lea    rdx,[rbp+0x28]
   14005a7f0:	mov    DWORD PTR [rax],0x2b8
   14005a7f6:	mov    DWORD PTR [rax+0x4],0x7e4
   14005a7fd:	mov    QWORD PTR [rax+0x8],rcx
   14005a801:	lea    rcx,[rsi+0x10]
   14005a805:	mov    DWORD PTR [rbp+0x30],0x7e4
   14005a80c:	mov    DWORD PTR [rbp+0x28],0x2b8
   14005a813:	call   0x14002ff30
   14005a818:	lea    rdx,[rbp+0x30]
   14005a81c:	lea    rcx,[rsi+0x30]
   14005a820:	mov    rbx,rax
   14005a823:	call   0x14002ffd0
   14005a828:	mov    QWORD PTR [rbx],rax
   14005a82b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a82f:	jne    0x14005b3df
   14005a835:	lea    rdx,[rbp+0x28]
   14005a839:	lea    rcx,[rsi+0x30]
   14005a83d:	mov    DWORD PTR [rbp+0x28],0x7e5
   14005a844:	call   0x14002ffd0
   14005a849:	lea    rcx,[rip+0x1a4b8]        # 0x140074d08
   14005a850:	lea    rdx,[rbp+0x28]
   14005a854:	mov    DWORD PTR [rax],0x2b9
   14005a85a:	mov    DWORD PTR [rax+0x4],0x7e5
   14005a861:	mov    QWORD PTR [rax+0x8],rcx
   14005a865:	lea    rcx,[rsi+0x10]
   14005a869:	mov    DWORD PTR [rbp+0x30],0x7e5
   14005a870:	mov    DWORD PTR [rbp+0x28],0x2b9
   14005a877:	call   0x14002ff30
   14005a87c:	lea    rdx,[rbp+0x30]
   14005a880:	lea    rcx,[rsi+0x30]
   14005a884:	mov    rbx,rax
   14005a887:	call   0x14002ffd0
   14005a88c:	mov    QWORD PTR [rbx],rax
   14005a88f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a893:	jne    0x14005b3df
   14005a899:	lea    rdx,[rbp+0x28]
   14005a89d:	lea    rcx,[rsi+0x30]
   14005a8a1:	mov    DWORD PTR [rbp+0x28],0x7e6
   14005a8a8:	call   0x14002ffd0
   14005a8ad:	lea    rcx,[rip+0x1a46c]        # 0x140074d20
   14005a8b4:	lea    rdx,[rbp+0x28]
   14005a8b8:	mov    DWORD PTR [rax],0x2ba
   14005a8be:	mov    DWORD PTR [rax+0x4],0x7e6
   14005a8c5:	mov    QWORD PTR [rax+0x8],rcx
   14005a8c9:	lea    rcx,[rsi+0x10]
   14005a8cd:	mov    DWORD PTR [rbp+0x30],0x7e6
   14005a8d4:	mov    DWORD PTR [rbp+0x28],0x2ba
   14005a8db:	call   0x14002ff30
   14005a8e0:	lea    rdx,[rbp+0x30]
   14005a8e4:	lea    rcx,[rsi+0x30]
   14005a8e8:	mov    rbx,rax
   14005a8eb:	call   0x14002ffd0
   14005a8f0:	mov    QWORD PTR [rbx],rax
   14005a8f3:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a8f7:	jne    0x14005b3df
   14005a8fd:	lea    rdx,[rbp+0x28]
   14005a901:	lea    rcx,[rsi+0x30]
   14005a905:	mov    DWORD PTR [rbp+0x28],0x7e7
   14005a90c:	call   0x14002ffd0
   14005a911:	lea    rcx,[rip+0x1a420]        # 0x140074d38
   14005a918:	lea    rdx,[rbp+0x28]
   14005a91c:	mov    DWORD PTR [rax],0x2bb
   14005a922:	mov    DWORD PTR [rax+0x4],0x7e7
   14005a929:	mov    QWORD PTR [rax+0x8],rcx
   14005a92d:	lea    rcx,[rsi+0x10]
   14005a931:	mov    DWORD PTR [rbp+0x30],0x7e7
   14005a938:	mov    DWORD PTR [rbp+0x28],0x2bb
   14005a93f:	call   0x14002ff30
   14005a944:	lea    rdx,[rbp+0x30]
   14005a948:	lea    rcx,[rsi+0x30]
   14005a94c:	mov    rbx,rax
   14005a94f:	call   0x14002ffd0
   14005a954:	mov    QWORD PTR [rbx],rax
   14005a957:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a95b:	jne    0x14005b3df
   14005a961:	lea    rdx,[rbp+0x28]
   14005a965:	lea    rcx,[rsi+0x30]
   14005a969:	mov    DWORD PTR [rbp+0x28],0x7e8
   14005a970:	call   0x14002ffd0
   14005a975:	lea    rcx,[rip+0x1a3d4]        # 0x140074d50
   14005a97c:	lea    rdx,[rbp+0x28]
   14005a980:	mov    DWORD PTR [rax],0x2bc
   14005a986:	mov    DWORD PTR [rax+0x4],0x7e8
   14005a98d:	mov    QWORD PTR [rax+0x8],rcx
   14005a991:	lea    rcx,[rsi+0x10]
   14005a995:	mov    DWORD PTR [rbp+0x30],0x7e8
   14005a99c:	mov    DWORD PTR [rbp+0x28],0x2bc
   14005a9a3:	call   0x14002ff30
   14005a9a8:	lea    rdx,[rbp+0x30]
   14005a9ac:	lea    rcx,[rsi+0x30]
   14005a9b0:	mov    rbx,rax
   14005a9b3:	call   0x14002ffd0
   14005a9b8:	mov    QWORD PTR [rbx],rax
   14005a9bb:	cmp    DWORD PTR [rsi+0x8],r12d
   14005a9bf:	jne    0x14005b3df
   14005a9c5:	lea    rdx,[rbp+0x28]
   14005a9c9:	lea    rcx,[rsi+0x30]
   14005a9cd:	mov    DWORD PTR [rbp+0x28],0x7e9
   14005a9d4:	call   0x14002ffd0
   14005a9d9:	lea    rcx,[rip+0x1a388]        # 0x140074d68
   14005a9e0:	lea    rdx,[rbp+0x28]
   14005a9e4:	mov    DWORD PTR [rax],0x2bd
   14005a9ea:	mov    DWORD PTR [rax+0x4],0x7e9
   14005a9f1:	mov    QWORD PTR [rax+0x8],rcx
   14005a9f5:	lea    rcx,[rsi+0x10]
   14005a9f9:	mov    DWORD PTR [rbp+0x30],0x7e9
   14005aa00:	mov    DWORD PTR [rbp+0x28],0x2bd
   14005aa07:	call   0x14002ff30
   14005aa0c:	lea    rdx,[rbp+0x30]
   14005aa10:	lea    rcx,[rsi+0x30]
   14005aa14:	mov    rbx,rax
   14005aa17:	call   0x14002ffd0
   14005aa1c:	mov    QWORD PTR [rbx],rax
   14005aa1f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005aa23:	jne    0x14005b3df
   14005aa29:	lea    rdx,[rbp+0x28]
   14005aa2d:	lea    rcx,[rsi+0x30]
   14005aa31:	mov    DWORD PTR [rbp+0x28],0x7ea
   14005aa38:	call   0x14002ffd0
   14005aa3d:	lea    rcx,[rip+0x1a33c]        # 0x140074d80
   14005aa44:	lea    rdx,[rbp+0x28]
   14005aa48:	mov    DWORD PTR [rax],0x2be
   14005aa4e:	mov    DWORD PTR [rax+0x4],0x7ea
   14005aa55:	mov    QWORD PTR [rax+0x8],rcx
   14005aa59:	lea    rcx,[rsi+0x10]
   14005aa5d:	mov    DWORD PTR [rbp+0x30],0x7ea
   14005aa64:	mov    DWORD PTR [rbp+0x28],0x2be
   14005aa6b:	call   0x14002ff30
   14005aa70:	lea    rdx,[rbp+0x30]
   14005aa74:	lea    rcx,[rsi+0x30]
   14005aa78:	mov    rbx,rax
   14005aa7b:	call   0x14002ffd0
   14005aa80:	mov    QWORD PTR [rbx],rax
   14005aa83:	cmp    DWORD PTR [rsi+0x8],r12d
   14005aa87:	jne    0x14005b3df
   14005aa8d:	lea    rdx,[rbp+0x28]
   14005aa91:	lea    rcx,[rsi+0x30]
   14005aa95:	mov    DWORD PTR [rbp+0x28],0x134
   14005aa9c:	call   0x14002ffd0
   14005aaa1:	lea    rcx,[rip+0x1a2f0]        # 0x140074d98
   14005aaa8:	lea    rdx,[rbp+0x28]
   14005aaac:	mov    DWORD PTR [rax],0x333
   14005aab2:	mov    DWORD PTR [rax+0x4],0x134
   14005aab9:	mov    QWORD PTR [rax+0x8],rcx
   14005aabd:	lea    rcx,[rsi+0x10]
   14005aac1:	mov    DWORD PTR [rbp+0x30],0x134
   14005aac8:	mov    DWORD PTR [rbp+0x28],0x333
   14005aacf:	call   0x14002ff30
   14005aad4:	lea    rdx,[rbp+0x30]
   14005aad8:	lea    rcx,[rsi+0x30]
   14005aadc:	mov    rbx,rax
   14005aadf:	call   0x14002ffd0
   14005aae4:	mov    QWORD PTR [rbx],rax
   14005aae7:	cmp    DWORD PTR [rsi+0x8],r12d
   14005aaeb:	jne    0x14005b3df
   14005aaf1:	lea    rdx,[rbp+0x28]
   14005aaf5:	lea    rcx,[rsi+0x30]
   14005aaf9:	mov    DWORD PTR [rbp+0x28],0x136
   14005ab00:	call   0x14002ffd0
   14005ab05:	lea    rcx,[rip+0x1a2a4]        # 0x140074db0
   14005ab0c:	lea    rdx,[rbp+0x28]
   14005ab10:	mov    DWORD PTR [rax],0x32c
   14005ab16:	mov    DWORD PTR [rax+0x4],0x136
   14005ab1d:	mov    QWORD PTR [rax+0x8],rcx
   14005ab21:	lea    rcx,[rsi+0x10]
   14005ab25:	mov    DWORD PTR [rbp+0x30],0x136
   14005ab2c:	mov    DWORD PTR [rbp+0x28],0x32c
   14005ab33:	call   0x14002ff30
   14005ab38:	lea    rdx,[rbp+0x30]
   14005ab3c:	lea    rcx,[rsi+0x30]
   14005ab40:	mov    rbx,rax
   14005ab43:	call   0x14002ffd0
   14005ab48:	mov    QWORD PTR [rbx],rax
   14005ab4b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ab4f:	jne    0x14005b3df
   14005ab55:	lea    rdx,[rbp+0x28]
   14005ab59:	lea    rcx,[rsi+0x30]
   14005ab5d:	mov    DWORD PTR [rbp+0x28],0x137
   14005ab64:	call   0x14002ffd0
   14005ab69:	lea    rcx,[rip+0x1a258]        # 0x140074dc8
   14005ab70:	lea    rdx,[rbp+0x28]
   14005ab74:	mov    DWORD PTR [rax],0x32b
   14005ab7a:	mov    DWORD PTR [rax+0x4],0x137
   14005ab81:	mov    QWORD PTR [rax+0x8],rcx
   14005ab85:	lea    rcx,[rsi+0x10]
   14005ab89:	mov    DWORD PTR [rbp+0x30],0x137
   14005ab90:	mov    DWORD PTR [rbp+0x28],0x32b
   14005ab97:	call   0x14002ff30
   14005ab9c:	lea    rdx,[rbp+0x30]
   14005aba0:	lea    rcx,[rsi+0x30]
   14005aba4:	mov    rbx,rax
   14005aba7:	call   0x14002ffd0
   14005abac:	mov    QWORD PTR [rbx],rax
   14005abaf:	cmp    DWORD PTR [rsi+0x8],r12d
   14005abb3:	jne    0x14005b3df
   14005abb9:	lea    rdx,[rbp+0x28]
   14005abbd:	lea    rcx,[rsi+0x30]
   14005abc1:	mov    DWORD PTR [rbp+0x28],0x140
   14005abc8:	call   0x14002ffd0
   14005abcd:	lea    rcx,[rip+0x1a20c]        # 0x140074de0
   14005abd4:	lea    rdx,[rbp+0x28]
   14005abd8:	mov    DWORD PTR [rax],0x37f
   14005abde:	mov    DWORD PTR [rax+0x4],0x140
   14005abe5:	mov    QWORD PTR [rax+0x8],rcx
   14005abe9:	lea    rcx,[rsi+0x10]
   14005abed:	mov    DWORD PTR [rbp+0x30],0x140
   14005abf4:	mov    DWORD PTR [rbp+0x28],0x37f
   14005abfb:	call   0x14002ff30
   14005ac00:	lea    rdx,[rbp+0x30]
   14005ac04:	lea    rcx,[rsi+0x30]
   14005ac08:	mov    rbx,rax
   14005ac0b:	call   0x14002ffd0
   14005ac10:	mov    QWORD PTR [rbx],rax
   14005ac13:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ac17:	jne    0x14005b3df
   14005ac1d:	lea    rdx,[rbp+0x28]
   14005ac21:	lea    rcx,[rsi+0x30]
   14005ac25:	mov    DWORD PTR [rbp+0x28],0x141
   14005ac2c:	call   0x14002ffd0
   14005ac31:	lea    rcx,[rip+0x1a1c0]        # 0x140074df8
   14005ac38:	lea    rdx,[rbp+0x28]
   14005ac3c:	mov    DWORD PTR [rax],0x377
   14005ac42:	mov    DWORD PTR [rax+0x4],0x141
   14005ac49:	mov    QWORD PTR [rax+0x8],rcx
   14005ac4d:	lea    rcx,[rsi+0x10]
   14005ac51:	mov    DWORD PTR [rbp+0x30],0x141
   14005ac58:	mov    DWORD PTR [rbp+0x28],0x377
   14005ac5f:	call   0x14002ff30
   14005ac64:	lea    rdx,[rbp+0x30]
   14005ac68:	lea    rcx,[rsi+0x30]
   14005ac6c:	mov    rbx,rax
   14005ac6f:	call   0x14002ffd0
   14005ac74:	mov    QWORD PTR [rbx],rax
   14005ac77:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ac7b:	jne    0x14005b3df
   14005ac81:	lea    rdx,[rbp+0x28]
   14005ac85:	lea    rcx,[rsi+0x30]
   14005ac89:	mov    DWORD PTR [rbp+0x28],0x142
   14005ac90:	call   0x14002ffd0
   14005ac95:	lea    rcx,[rip+0x1a17c]        # 0x140074e18
   14005ac9c:	lea    rdx,[rbp+0x28]
   14005aca0:	mov    DWORD PTR [rax],0x378
   14005aca6:	mov    DWORD PTR [rax+0x4],0x142
   14005acad:	mov    QWORD PTR [rax+0x8],rcx
   14005acb1:	lea    rcx,[rsi+0x10]
   14005acb5:	mov    DWORD PTR [rbp+0x30],0x142
   14005acbc:	mov    DWORD PTR [rbp+0x28],0x378
   14005acc3:	call   0x14002ff30
   14005acc8:	lea    rdx,[rbp+0x30]
   14005accc:	lea    rcx,[rsi+0x30]
   14005acd0:	mov    rbx,rax
   14005acd3:	call   0x14002ffd0
   14005acd8:	mov    QWORD PTR [rbx],rax
   14005acdb:	cmp    DWORD PTR [rsi+0x8],r12d
   14005acdf:	jne    0x14005b3df
   14005ace5:	lea    rdx,[rbp+0x28]
   14005ace9:	lea    rcx,[rsi+0x30]
   14005aced:	mov    DWORD PTR [rbp+0x28],0x143
   14005acf4:	call   0x14002ffd0
   14005acf9:	lea    rcx,[rip+0x1a140]        # 0x140074e40
   14005ad00:	lea    rdx,[rbp+0x28]
   14005ad04:	mov    DWORD PTR [rax],0x379
   14005ad0a:	mov    DWORD PTR [rax+0x4],0x143
   14005ad11:	mov    QWORD PTR [rax+0x8],rcx
   14005ad15:	lea    rcx,[rsi+0x10]
   14005ad19:	mov    DWORD PTR [rbp+0x30],0x143
   14005ad20:	mov    DWORD PTR [rbp+0x28],0x379
   14005ad27:	call   0x14002ff30
   14005ad2c:	lea    rdx,[rbp+0x30]
   14005ad30:	lea    rcx,[rsi+0x30]
   14005ad34:	mov    rbx,rax
   14005ad37:	call   0x14002ffd0
   14005ad3c:	mov    QWORD PTR [rbx],rax
   14005ad3f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ad43:	jne    0x14005b3df
   14005ad49:	lea    rdx,[rbp+0x28]
   14005ad4d:	lea    rcx,[rsi+0x30]
   14005ad51:	mov    DWORD PTR [rbp+0x28],0x144
   14005ad58:	call   0x14002ffd0
   14005ad5d:	lea    rcx,[rip+0x1a0fc]        # 0x140074e60
   14005ad64:	lea    rdx,[rbp+0x28]
   14005ad68:	mov    DWORD PTR [rax],0x37a
   14005ad6e:	mov    DWORD PTR [rax+0x4],0x144
   14005ad75:	mov    QWORD PTR [rax+0x8],rcx
   14005ad79:	lea    rcx,[rsi+0x10]
   14005ad7d:	mov    DWORD PTR [rbp+0x30],0x144
   14005ad84:	mov    DWORD PTR [rbp+0x28],0x37a
   14005ad8b:	call   0x14002ff30
   14005ad90:	lea    rdx,[rbp+0x30]
   14005ad94:	lea    rcx,[rsi+0x30]
   14005ad98:	mov    rbx,rax
   14005ad9b:	call   0x14002ffd0
   14005ada0:	mov    QWORD PTR [rbx],rax
   14005ada3:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ada7:	jne    0x14005b3df
   14005adad:	lea    rdx,[rbp+0x28]
   14005adb1:	lea    rcx,[rsi+0x30]
   14005adb5:	mov    DWORD PTR [rbp+0x28],0x901
   14005adbc:	call   0x14002ffd0
   14005adc1:	lea    rcx,[rip+0x1a0c0]        # 0x140074e88
   14005adc8:	lea    rdx,[rbp+0x28]
   14005adcc:	mov    DWORD PTR [rax],0x3ab
   14005add2:	mov    DWORD PTR [rax+0x4],0x901
   14005add9:	mov    QWORD PTR [rax+0x8],rcx
   14005addd:	lea    rcx,[rsi+0x10]
   14005ade1:	mov    DWORD PTR [rbp+0x30],0x901
   14005ade8:	mov    DWORD PTR [rbp+0x28],0x3ab
   14005adef:	call   0x14002ff30
   14005adf4:	lea    rdx,[rbp+0x30]
   14005adf8:	lea    rcx,[rsi+0x30]
   14005adfc:	mov    rbx,rax
   14005adff:	call   0x14002ffd0
   14005ae04:	mov    QWORD PTR [rbx],rax
   14005ae07:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ae0b:	jne    0x14005b3df
   14005ae11:	lea    rdx,[rbp+0x28]
   14005ae15:	lea    rcx,[rsi+0x30]
   14005ae19:	mov    DWORD PTR [rbp+0x28],0x145
   14005ae20:	call   0x14002ffd0
   14005ae25:	lea    rcx,[rip+0x1a08c]        # 0x140074eb8
   14005ae2c:	lea    rdx,[rbp+0x28]
   14005ae30:	mov    DWORD PTR [rax],0x386
   14005ae36:	mov    DWORD PTR [rax+0x4],0x145
   14005ae3d:	mov    QWORD PTR [rax+0x8],rcx
   14005ae41:	lea    rcx,[rsi+0x10]
   14005ae45:	mov    DWORD PTR [rbp+0x30],0x145
   14005ae4c:	mov    DWORD PTR [rbp+0x28],0x386
   14005ae53:	call   0x14002ff30
   14005ae58:	lea    rdx,[rbp+0x30]
   14005ae5c:	lea    rcx,[rsi+0x30]
   14005ae60:	mov    rbx,rax
   14005ae63:	call   0x14002ffd0
   14005ae68:	mov    QWORD PTR [rbx],rax
   14005ae6b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005ae6f:	jne    0x14005b3df
   14005ae75:	lea    rdx,[rbp+0x28]
   14005ae79:	lea    rcx,[rsi+0x30]
   14005ae7d:	mov    DWORD PTR [rbp+0x28],0x146
   14005ae84:	call   0x14002ffd0
   14005ae89:	lea    rcx,[rip+0x1a050]        # 0x140074ee0
   14005ae90:	lea    rdx,[rbp+0x28]
   14005ae94:	mov    DWORD PTR [rax],0x387
   14005ae9a:	mov    DWORD PTR [rax+0x4],0x146
   14005aea1:	mov    QWORD PTR [rax+0x8],rcx
   14005aea5:	lea    rcx,[rsi+0x10]
   14005aea9:	mov    DWORD PTR [rbp+0x30],0x146
   14005aeb0:	mov    DWORD PTR [rbp+0x28],0x387
   14005aeb7:	call   0x14002ff30
   14005aebc:	lea    rdx,[rbp+0x30]
   14005aec0:	lea    rcx,[rsi+0x30]
   14005aec4:	mov    rbx,rax
   14005aec7:	call   0x14002ffd0
   14005aecc:	mov    QWORD PTR [rbx],rax
   14005aecf:	cmp    DWORD PTR [rsi+0x8],r12d
   14005aed3:	jne    0x14005b3df
   14005aed9:	lea    rdx,[rbp+0x28]
   14005aedd:	lea    rcx,[rsi+0x30]
   14005aee1:	mov    DWORD PTR [rbp+0x28],0x147
   14005aee8:	call   0x14002ffd0
   14005aeed:	lea    rcx,[rip+0x1a00c]        # 0x140074f00
   14005aef4:	lea    rdx,[rbp+0x28]
   14005aef8:	mov    DWORD PTR [rax],0x390
   14005aefe:	mov    DWORD PTR [rax+0x4],0x147
   14005af05:	mov    QWORD PTR [rax+0x8],rcx
   14005af09:	lea    rcx,[rsi+0x10]
   14005af0d:	mov    DWORD PTR [rbp+0x30],0x147
   14005af14:	mov    DWORD PTR [rbp+0x28],0x390
   14005af1b:	call   0x14002ff30
   14005af20:	lea    rdx,[rbp+0x30]
   14005af24:	lea    rcx,[rsi+0x30]
   14005af28:	mov    rbx,rax
   14005af2b:	call   0x14002ffd0
   14005af30:	mov    QWORD PTR [rbx],rax
   14005af33:	cmp    DWORD PTR [rsi+0x8],r12d
   14005af37:	jne    0x14005b3df
   14005af3d:	lea    rdx,[rbp+0x28]
   14005af41:	lea    rcx,[rsi+0x30]
   14005af45:	mov    DWORD PTR [rbp+0x28],0x148
   14005af4c:	call   0x14002ffd0
   14005af51:	lea    rcx,[rip+0x19fd0]        # 0x140074f28
   14005af58:	lea    rdx,[rbp+0x28]
   14005af5c:	mov    DWORD PTR [rax],0x391
   14005af62:	mov    DWORD PTR [rax+0x4],0x148
   14005af69:	mov    QWORD PTR [rax+0x8],rcx
   14005af6d:	lea    rcx,[rsi+0x10]
   14005af71:	mov    DWORD PTR [rbp+0x30],0x148
   14005af78:	mov    DWORD PTR [rbp+0x28],0x391
   14005af7f:	call   0x14002ff30
   14005af84:	lea    rdx,[rbp+0x30]
   14005af88:	lea    rcx,[rsi+0x30]
   14005af8c:	mov    rbx,rax
   14005af8f:	call   0x14002ffd0
   14005af94:	mov    QWORD PTR [rbx],rax
   14005af97:	cmp    DWORD PTR [rsi+0x8],r12d
   14005af9b:	jne    0x14005b3df
   14005afa1:	lea    rdx,[rbp+0x28]
   14005afa5:	lea    rcx,[rsi+0x30]
   14005afa9:	mov    DWORD PTR [rbp+0x28],0x149
   14005afb0:	call   0x14002ffd0
   14005afb5:	lea    rcx,[rip+0x19f94]        # 0x140074f50
   14005afbc:	lea    rdx,[rbp+0x28]
   14005afc0:	mov    DWORD PTR [rax],0x392
   14005afc6:	mov    DWORD PTR [rax+0x4],0x149
   14005afcd:	mov    QWORD PTR [rax+0x8],rcx
   14005afd1:	lea    rcx,[rsi+0x10]
   14005afd5:	mov    DWORD PTR [rbp+0x30],0x149
   14005afdc:	mov    DWORD PTR [rbp+0x28],0x392
   14005afe3:	call   0x14002ff30
   14005afe8:	lea    rdx,[rbp+0x30]
   14005afec:	lea    rcx,[rsi+0x30]
   14005aff0:	mov    rbx,rax
   14005aff3:	call   0x14002ffd0
   14005aff8:	mov    QWORD PTR [rbx],rax
   14005affb:	cmp    DWORD PTR [rsi+0x8],r12d
   14005afff:	jne    0x14005b3df
   14005b005:	lea    rdx,[rbp+0x28]
   14005b009:	lea    rcx,[rsi+0x30]
   14005b00d:	mov    DWORD PTR [rbp+0x28],0x14a
   14005b014:	call   0x14002ffd0
   14005b019:	lea    rcx,[rip+0x19f58]        # 0x140074f78
   14005b020:	lea    rdx,[rbp+0x28]
   14005b024:	mov    DWORD PTR [rax],0x393
   14005b02a:	mov    DWORD PTR [rax+0x4],0x14a
   14005b031:	mov    QWORD PTR [rax+0x8],rcx
   14005b035:	lea    rcx,[rsi+0x10]
   14005b039:	mov    DWORD PTR [rbp+0x30],0x14a
   14005b040:	mov    DWORD PTR [rbp+0x28],0x393
   14005b047:	call   0x14002ff30
   14005b04c:	lea    rdx,[rbp+0x30]
   14005b050:	lea    rcx,[rsi+0x30]
   14005b054:	mov    rbx,rax
   14005b057:	call   0x14002ffd0
   14005b05c:	mov    QWORD PTR [rbx],rax
   14005b05f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b063:	jne    0x14005b3df
   14005b069:	lea    rdx,[rbp+0x28]
   14005b06d:	lea    rcx,[rsi+0x30]
   14005b071:	mov    DWORD PTR [rbp+0x28],0x14b
   14005b078:	call   0x14002ffd0
   14005b07d:	lea    rcx,[rip+0x19f1c]        # 0x140074fa0
   14005b084:	lea    rdx,[rbp+0x28]
   14005b088:	mov    DWORD PTR [rax],0x394
   14005b08e:	mov    DWORD PTR [rax+0x4],0x14b
   14005b095:	mov    QWORD PTR [rax+0x8],rcx
   14005b099:	lea    rcx,[rsi+0x10]
   14005b09d:	mov    DWORD PTR [rbp+0x30],0x14b
   14005b0a4:	mov    DWORD PTR [rbp+0x28],0x394
   14005b0ab:	call   0x14002ff30
   14005b0b0:	lea    rdx,[rbp+0x30]
   14005b0b4:	lea    rcx,[rsi+0x30]
   14005b0b8:	mov    rbx,rax
   14005b0bb:	call   0x14002ffd0
   14005b0c0:	mov    QWORD PTR [rbx],rax
   14005b0c3:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b0c7:	jne    0x14005b3df
   14005b0cd:	lea    rdx,[rbp+0x28]
   14005b0d1:	lea    rcx,[rsi+0x30]
   14005b0d5:	mov    DWORD PTR [rbp+0x28],0x14c
   14005b0dc:	call   0x14002ffd0
   14005b0e1:	lea    rcx,[rip+0x19ee0]        # 0x140074fc8
   14005b0e8:	lea    rdx,[rbp+0x28]
   14005b0ec:	mov    DWORD PTR [rax],0x395
   14005b0f2:	mov    DWORD PTR [rax+0x4],0x14c
   14005b0f9:	mov    QWORD PTR [rax+0x8],rcx
   14005b0fd:	lea    rcx,[rsi+0x10]
   14005b101:	mov    DWORD PTR [rbp+0x30],0x14c
   14005b108:	mov    DWORD PTR [rbp+0x28],0x395
   14005b10f:	call   0x14002ff30
   14005b114:	lea    rdx,[rbp+0x30]
   14005b118:	lea    rcx,[rsi+0x30]
   14005b11c:	mov    rbx,rax
   14005b11f:	call   0x14002ffd0
   14005b124:	mov    QWORD PTR [rbx],rax
   14005b127:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b12b:	jne    0x14005b3df
   14005b131:	lea    rdx,[rbp+0x28]
   14005b135:	lea    rcx,[rsi+0x30]
   14005b139:	mov    DWORD PTR [rbp+0x28],0x14d
   14005b140:	call   0x14002ffd0
   14005b145:	lea    rcx,[rip+0x19ea4]        # 0x140074ff0
   14005b14c:	lea    rdx,[rbp+0x28]
   14005b150:	mov    DWORD PTR [rax],0x396
   14005b156:	mov    DWORD PTR [rax+0x4],0x14d
   14005b15d:	mov    QWORD PTR [rax+0x8],rcx
   14005b161:	lea    rcx,[rsi+0x10]
   14005b165:	mov    DWORD PTR [rbp+0x30],0x14d
   14005b16c:	mov    DWORD PTR [rbp+0x28],0x396
   14005b173:	call   0x14002ff30
   14005b178:	lea    rdx,[rbp+0x30]
   14005b17c:	lea    rcx,[rsi+0x30]
   14005b180:	mov    rbx,rax
   14005b183:	call   0x14002ffd0
   14005b188:	mov    QWORD PTR [rbx],rax
   14005b18b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b18f:	jne    0x14005b3df
   14005b195:	lea    rdx,[rbp+0x28]
   14005b199:	lea    rcx,[rsi+0x30]
   14005b19d:	mov    DWORD PTR [rbp+0x28],0x90
   14005b1a4:	call   0x14002ffd0
   14005b1a9:	lea    rcx,[rip+0x19e68]        # 0x140075018
   14005b1b0:	lea    rdx,[rbp+0x28]
   14005b1b4:	mov    DWORD PTR [rax],0x39b
   14005b1ba:	mov    DWORD PTR [rax+0x4],0x90
   14005b1c1:	mov    QWORD PTR [rax+0x8],rcx
   14005b1c5:	lea    rcx,[rsi+0x10]
   14005b1c9:	mov    DWORD PTR [rbp+0x30],0x90
   14005b1d0:	mov    DWORD PTR [rbp+0x28],0x39b
   14005b1d7:	call   0x14002ff30
   14005b1dc:	lea    rdx,[rbp+0x30]
   14005b1e0:	lea    rcx,[rsi+0x30]
   14005b1e4:	mov    rbx,rax
   14005b1e7:	call   0x14002ffd0
   14005b1ec:	mov    QWORD PTR [rbx],rax
   14005b1ef:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b1f3:	jne    0x14005b3df
   14005b1f9:	lea    rdx,[rbp+0x28]
   14005b1fd:	lea    rcx,[rsi+0x30]
   14005b201:	mov    DWORD PTR [rbp+0x28],0x14e
   14005b208:	call   0x14002ffd0
   14005b20d:	lea    rcx,[rip+0x19e1c]        # 0x140075030
   14005b214:	lea    rdx,[rbp+0x28]
   14005b218:	mov    DWORD PTR [rax],0x3a3
   14005b21e:	mov    DWORD PTR [rax+0x4],0x14e
   14005b225:	mov    QWORD PTR [rax+0x8],rcx
   14005b229:	lea    rcx,[rsi+0x10]
   14005b22d:	mov    DWORD PTR [rbp+0x30],0x14e
   14005b234:	mov    DWORD PTR [rbp+0x28],0x3a3
   14005b23b:	call   0x14002ff30
   14005b240:	lea    rdx,[rbp+0x30]
   14005b244:	lea    rcx,[rsi+0x30]
   14005b248:	mov    rbx,rax
   14005b24b:	call   0x14002ffd0
   14005b250:	mov    QWORD PTR [rbx],rax
   14005b253:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b257:	jne    0x14005b3df
   14005b25d:	lea    rdx,[rbp+0x28]
   14005b261:	lea    rcx,[rsi+0x30]
   14005b265:	mov    DWORD PTR [rbp+0x28],0x8f
   14005b26c:	call   0x14002ffd0
   14005b271:	lea    rcx,[rip+0x19de0]        # 0x140075058
   14005b278:	lea    rdx,[rbp+0x28]
   14005b27c:	mov    DWORD PTR [rax],0x380
   14005b282:	mov    DWORD PTR [rax+0x4],0x8f
   14005b289:	mov    QWORD PTR [rax+0x8],rcx
   14005b28d:	lea    rcx,[rsi+0x10]
   14005b291:	mov    DWORD PTR [rbp+0x30],0x8f
   14005b298:	mov    DWORD PTR [rbp+0x28],0x380
   14005b29f:	call   0x14002ff30
   14005b2a4:	lea    rdx,[rbp+0x30]
   14005b2a8:	lea    rcx,[rsi+0x30]
   14005b2ac:	mov    rbx,rax
   14005b2af:	call   0x14002ffd0
   14005b2b4:	mov    QWORD PTR [rbx],rax
   14005b2b7:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b2bb:	jne    0x14005b3df
   14005b2c1:	lea    rdx,[rbp+0x28]
   14005b2c5:	lea    rcx,[rsi+0x30]
   14005b2c9:	mov    DWORD PTR [rbp+0x28],0x14f
   14005b2d0:	call   0x14002ffd0
   14005b2d5:	lea    rcx,[rip+0x19d9c]        # 0x140075078
   14005b2dc:	lea    rdx,[rbp+0x28]
   14005b2e0:	mov    DWORD PTR [rax],0x3a5
   14005b2e6:	mov    DWORD PTR [rax+0x4],0x14f
   14005b2ed:	mov    QWORD PTR [rax+0x8],rcx
   14005b2f1:	lea    rcx,[rsi+0x10]
   14005b2f5:	mov    DWORD PTR [rbp+0x30],0x14f
   14005b2fc:	mov    DWORD PTR [rbp+0x28],0x3a5
   14005b303:	call   0x14002ff30
   14005b308:	lea    rdx,[rbp+0x30]
   14005b30c:	lea    rcx,[rsi+0x30]
   14005b310:	mov    rbx,rax
   14005b313:	call   0x14002ffd0
   14005b318:	mov    QWORD PTR [rbx],rax
   14005b31b:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b31f:	jne    0x14005b3df
   14005b325:	lea    rdx,[rbp+0x28]
   14005b329:	lea    rcx,[rsi+0x30]
   14005b32d:	mov    DWORD PTR [rbp+0x28],0x91
   14005b334:	call   0x14002ffd0
   14005b339:	lea    rcx,[rip+0x19d58]        # 0x140075098
   14005b340:	lea    rdx,[rbp+0x28]
   14005b344:	mov    DWORD PTR [rax],0x40c
   14005b34a:	mov    DWORD PTR [rax+0x4],0x91
   14005b351:	mov    QWORD PTR [rax+0x8],rcx
   14005b355:	lea    rcx,[rsi+0x10]
   14005b359:	mov    DWORD PTR [rbp+0x30],0x91
   14005b360:	mov    DWORD PTR [rbp+0x28],0x40c
   14005b367:	call   0x14002ff30
   14005b36c:	lea    rdx,[rbp+0x30]
   14005b370:	lea    rcx,[rsi+0x30]
   14005b374:	mov    rbx,rax
   14005b377:	call   0x14002ffd0
   14005b37c:	mov    QWORD PTR [rbx],rax
   14005b37f:	cmp    DWORD PTR [rsi+0x8],r12d
   14005b383:	jne    0x14005b3df
   14005b385:	lea    rdx,[rbp+0x28]
   14005b389:	lea    rcx,[rsi+0x30]
   14005b38d:	mov    DWORD PTR [rbp+0x28],0x92
   14005b394:	call   0x14002ffd0
   14005b399:	lea    rcx,[rip+0x19d10]        # 0x1400750b0
   14005b3a0:	lea    rdx,[rbp+0x28]
   14005b3a4:	mov    DWORD PTR [rax],0x40d
   14005b3aa:	mov    DWORD PTR [rax+0x4],0x92
   14005b3b1:	mov    QWORD PTR [rax+0x8],rcx
   14005b3b5:	lea    rcx,[rsi+0x10]
   14005b3b9:	mov    DWORD PTR [rbp+0x30],0x92
   14005b3c0:	mov    DWORD PTR [rbp+0x28],0x40d
   14005b3c7:	call   0x14002ff30
   14005b3cc:	lea    rdx,[rbp+0x30]
   14005b3d0:	lea    rcx,[rsi+0x30]
   14005b3d4:	mov    rbx,rax
   14005b3d7:	call   0x14002ffd0
   14005b3dc:	mov    QWORD PTR [rbx],rax
   14005b3df:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b3e3:	lea    rbx,[rip+0x19cde]        # 0x1400750c8
   14005b3ea:	jne    0x14005b439
   14005b3ec:	lea    rdx,[rbp+0x28]
   14005b3f0:	lea    rcx,[rsi+0x30]
   14005b3f4:	mov    DWORD PTR [rbp+0x28],0x3e8
   14005b3fb:	call   0x14002ffd0
   14005b400:	lea    rcx,[rsi+0x10]
   14005b404:	lea    rdx,[rbp+0x28]
   14005b408:	mov    DWORD PTR [rax],r12d
   14005b40b:	mov    DWORD PTR [rax+0x4],0x3e8
   14005b412:	mov    DWORD PTR [rbp+0x30],0x3e8
   14005b419:	mov    QWORD PTR [rax+0x8],rbx
   14005b41d:	mov    DWORD PTR [rbp+0x28],r12d
   14005b421:	call   0x14002ff30
   14005b426:	lea    rdx,[rbp+0x30]
   14005b42a:	lea    rcx,[rsi+0x30]
   14005b42e:	mov    rbx,rax
   14005b431:	call   0x14002ffd0
   14005b436:	mov    QWORD PTR [rbx],rax
   14005b439:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b43d:	lea    rbx,[rip+0x19c9c]        # 0x1400750e0
   14005b444:	jne    0x14005b499
   14005b446:	lea    rdx,[rbp+0x28]
   14005b44a:	lea    rcx,[rsi+0x30]
   14005b44e:	mov    DWORD PTR [rbp+0x28],0x3e9
   14005b455:	call   0x14002ffd0
   14005b45a:	lea    rcx,[rsi+0x10]
   14005b45e:	lea    rdx,[rbp+0x28]
   14005b462:	mov    DWORD PTR [rax],0x51
   14005b468:	mov    DWORD PTR [rax+0x4],0x3e9
   14005b46f:	mov    DWORD PTR [rbp+0x30],0x3e9
   14005b476:	mov    QWORD PTR [rax+0x8],rbx
   14005b47a:	mov    DWORD PTR [rbp+0x28],0x51
   14005b481:	call   0x14002ff30
   14005b486:	lea    rdx,[rbp+0x30]
   14005b48a:	lea    rcx,[rsi+0x30]
   14005b48e:	mov    rbx,rax
   14005b491:	call   0x14002ffd0
   14005b496:	mov    QWORD PTR [rbx],rax
   14005b499:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b49d:	lea    rbx,[rip+0x19c54]        # 0x1400750f8
   14005b4a4:	jne    0x14005b4f9
   14005b4a6:	lea    rdx,[rbp+0x28]
   14005b4aa:	lea    rcx,[rsi+0x30]
   14005b4ae:	mov    DWORD PTR [rbp+0x28],0x3eb
   14005b4b5:	call   0x14002ffd0
   14005b4ba:	lea    rcx,[rsi+0x10]
   14005b4be:	lea    rdx,[rbp+0x28]
   14005b4c2:	mov    DWORD PTR [rax],0x46
   14005b4c8:	mov    DWORD PTR [rax+0x4],0x3eb
   14005b4cf:	mov    DWORD PTR [rbp+0x30],0x3eb
   14005b4d6:	mov    QWORD PTR [rax+0x8],rbx
   14005b4da:	mov    DWORD PTR [rbp+0x28],0x46
   14005b4e1:	call   0x14002ff30
   14005b4e6:	lea    rdx,[rbp+0x30]
   14005b4ea:	lea    rcx,[rsi+0x30]
   14005b4ee:	mov    rbx,rax
   14005b4f1:	call   0x14002ffd0
   14005b4f6:	mov    QWORD PTR [rbx],rax
   14005b4f9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b4fd:	lea    rbx,[rip+0x19c04]        # 0x140075108
   14005b504:	jne    0x14005b559
   14005b506:	lea    rdx,[rbp+0x28]
   14005b50a:	lea    rcx,[rsi+0x30]
   14005b50e:	mov    DWORD PTR [rbp+0x28],0x3ec
   14005b515:	call   0x14002ffd0
   14005b51a:	lea    rcx,[rsi+0x10]
   14005b51e:	lea    rdx,[rbp+0x28]
   14005b522:	mov    DWORD PTR [rax],0x3c
   14005b528:	mov    DWORD PTR [rax+0x4],0x3ec
   14005b52f:	mov    DWORD PTR [rbp+0x30],0x3ec
   14005b536:	mov    QWORD PTR [rax+0x8],rbx
   14005b53a:	mov    DWORD PTR [rbp+0x28],0x3c
   14005b541:	call   0x14002ff30
   14005b546:	lea    rdx,[rbp+0x30]
   14005b54a:	lea    rcx,[rsi+0x30]
   14005b54e:	mov    rbx,rax
   14005b551:	call   0x14002ffd0
   14005b556:	mov    QWORD PTR [rbx],rax
   14005b559:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b55d:	lea    rbx,[rip+0x19bb4]        # 0x140075118
   14005b564:	jne    0x14005b5b9
   14005b566:	lea    rdx,[rbp+0x28]
   14005b56a:	lea    rcx,[rsi+0x30]
   14005b56e:	mov    DWORD PTR [rbp+0x28],0x3ed
   14005b575:	call   0x14002ffd0
   14005b57a:	lea    rcx,[rsi+0x10]
   14005b57e:	lea    rdx,[rbp+0x28]
   14005b582:	mov    DWORD PTR [rax],0x3d
   14005b588:	mov    DWORD PTR [rax+0x4],0x3ed
   14005b58f:	mov    DWORD PTR [rbp+0x30],0x3ed
   14005b596:	mov    QWORD PTR [rax+0x8],rbx
   14005b59a:	mov    DWORD PTR [rbp+0x28],0x3d
   14005b5a1:	call   0x14002ff30
   14005b5a6:	lea    rdx,[rbp+0x30]
   14005b5aa:	lea    rcx,[rsi+0x30]
   14005b5ae:	mov    rbx,rax
   14005b5b1:	call   0x14002ffd0
   14005b5b6:	mov    QWORD PTR [rbx],rax
   14005b5b9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b5bd:	lea    rbx,[rip+0x19b6c]        # 0x140075130
   14005b5c4:	jne    0x14005b619
   14005b5c6:	lea    rdx,[rbp+0x28]
   14005b5ca:	lea    rcx,[rsi+0x30]
   14005b5ce:	mov    DWORD PTR [rbp+0x28],0x3ee
   14005b5d5:	call   0x14002ffd0
   14005b5da:	lea    rcx,[rsi+0x10]
   14005b5de:	lea    rdx,[rbp+0x28]
   14005b5e2:	mov    DWORD PTR [rax],0x63
   14005b5e8:	mov    DWORD PTR [rax+0x4],0x3ee
   14005b5ef:	mov    DWORD PTR [rbp+0x30],0x3ee
   14005b5f6:	mov    QWORD PTR [rax+0x8],rbx
   14005b5fa:	mov    DWORD PTR [rbp+0x28],0x63
   14005b601:	call   0x14002ff30
   14005b606:	lea    rdx,[rbp+0x30]
   14005b60a:	lea    rcx,[rsi+0x30]
   14005b60e:	mov    rbx,rax
   14005b611:	call   0x14002ffd0
   14005b616:	mov    QWORD PTR [rbx],rax
   14005b619:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b61d:	lea    rbx,[rip+0x19b24]        # 0x140075148
   14005b624:	jne    0x14005b679
   14005b626:	lea    rdx,[rbp+0x28]
   14005b62a:	lea    rcx,[rsi+0x30]
   14005b62e:	mov    DWORD PTR [rbp+0x28],0x3ef
   14005b635:	call   0x14002ffd0
   14005b63a:	lea    rcx,[rsi+0x10]
   14005b63e:	lea    rdx,[rbp+0x28]
   14005b642:	mov    DWORD PTR [rax],0x68
   14005b648:	mov    DWORD PTR [rax+0x4],0x3ef
   14005b64f:	mov    DWORD PTR [rbp+0x30],0x3ef
   14005b656:	mov    QWORD PTR [rax+0x8],rbx
   14005b65a:	mov    DWORD PTR [rbp+0x28],0x68
   14005b661:	call   0x14002ff30
   14005b666:	lea    rdx,[rbp+0x30]
   14005b66a:	lea    rcx,[rsi+0x30]
   14005b66e:	mov    rbx,rax
   14005b671:	call   0x14002ffd0
   14005b676:	mov    QWORD PTR [rbx],rax
   14005b679:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b67d:	lea    rbx,[rip+0x19adc]        # 0x140075160
   14005b684:	jne    0x14005b6d9
   14005b686:	lea    rdx,[rbp+0x28]
   14005b68a:	lea    rcx,[rsi+0x30]
   14005b68e:	mov    DWORD PTR [rbp+0x28],0x3f0
   14005b695:	call   0x14002ffd0
   14005b69a:	lea    rcx,[rsi+0x10]
   14005b69e:	lea    rdx,[rbp+0x28]
   14005b6a2:	mov    DWORD PTR [rax],0x6d
   14005b6a8:	mov    DWORD PTR [rax+0x4],0x3f0
   14005b6af:	mov    DWORD PTR [rbp+0x30],0x3f0
   14005b6b6:	mov    QWORD PTR [rax+0x8],rbx
   14005b6ba:	mov    DWORD PTR [rbp+0x28],0x6d
   14005b6c1:	call   0x14002ff30
   14005b6c6:	lea    rdx,[rbp+0x30]
   14005b6ca:	lea    rcx,[rsi+0x30]
   14005b6ce:	mov    rbx,rax
   14005b6d1:	call   0x14002ffd0
   14005b6d6:	mov    QWORD PTR [rbx],rax
   14005b6d9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b6dd:	lea    rbx,[rip+0x19a8c]        # 0x140075170
   14005b6e4:	jne    0x14005b9f5
   14005b6ea:	lea    rdx,[rbp+0x28]
   14005b6ee:	lea    rcx,[rsi+0x30]
   14005b6f2:	mov    DWORD PTR [rbp+0x28],0x3f4
   14005b6f9:	call   0x14002ffd0
   14005b6fe:	lea    rcx,[rsi+0x10]
   14005b702:	lea    rdx,[rbp+0x28]
   14005b706:	mov    DWORD PTR [rax],0xe6
   14005b70c:	mov    DWORD PTR [rax+0x4],0x3f4
   14005b713:	mov    DWORD PTR [rbp+0x30],0x3f4
   14005b71a:	mov    QWORD PTR [rax+0x8],rbx
   14005b71e:	mov    DWORD PTR [rbp+0x28],0xe6
   14005b725:	call   0x14002ff30
   14005b72a:	lea    rdx,[rbp+0x30]
   14005b72e:	lea    rcx,[rsi+0x30]
   14005b732:	mov    rbx,rax
   14005b735:	call   0x14002ffd0
   14005b73a:	mov    QWORD PTR [rbx],rax
   14005b73d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b741:	jne    0x14005b9f5
   14005b747:	lea    rdx,[rbp+0x28]
   14005b74b:	lea    rcx,[rsi+0x30]
   14005b74f:	mov    DWORD PTR [rbp+0x28],0x3f6
   14005b756:	call   0x14002ffd0
   14005b75b:	lea    rcx,[rip+0x19a2e]        # 0x140075190
   14005b762:	lea    rdx,[rbp+0x28]
   14005b766:	mov    DWORD PTR [rax],0xdc
   14005b76c:	mov    DWORD PTR [rax+0x4],0x3f6
   14005b773:	mov    QWORD PTR [rax+0x8],rcx
   14005b777:	lea    rcx,[rsi+0x10]
   14005b77b:	mov    DWORD PTR [rbp+0x30],0x3f6
   14005b782:	mov    DWORD PTR [rbp+0x28],0xdc
   14005b789:	call   0x14002ff30
   14005b78e:	lea    rdx,[rbp+0x30]
   14005b792:	lea    rcx,[rsi+0x30]
   14005b796:	mov    rbx,rax
   14005b799:	call   0x14002ffd0
   14005b79e:	mov    QWORD PTR [rbx],rax
   14005b7a1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b7a5:	jne    0x14005b9f5
   14005b7ab:	lea    rdx,[rbp+0x28]
   14005b7af:	lea    rcx,[rsi+0x30]
   14005b7b3:	mov    DWORD PTR [rbp+0x28],0x3f7
   14005b7ba:	call   0x14002ffd0
   14005b7bf:	lea    rcx,[rip+0x199e2]        # 0x1400751a8
   14005b7c6:	lea    rdx,[rbp+0x28]
   14005b7ca:	mov    DWORD PTR [rax],0xdd
   14005b7d0:	mov    DWORD PTR [rax+0x4],0x3f7
   14005b7d7:	mov    QWORD PTR [rax+0x8],rcx
   14005b7db:	lea    rcx,[rsi+0x10]
   14005b7df:	mov    DWORD PTR [rbp+0x30],0x3f7
   14005b7e6:	mov    DWORD PTR [rbp+0x28],0xdd
   14005b7ed:	call   0x14002ff30
   14005b7f2:	lea    rdx,[rbp+0x30]
   14005b7f6:	lea    rcx,[rsi+0x30]
   14005b7fa:	mov    rbx,rax
   14005b7fd:	call   0x14002ffd0
   14005b802:	mov    QWORD PTR [rbx],rax
   14005b805:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b809:	jne    0x14005b9f5
   14005b80f:	lea    rdx,[rbp+0x28]
   14005b813:	lea    rcx,[rsi+0x30]
   14005b817:	mov    DWORD PTR [rbp+0x28],0x3f8
   14005b81e:	call   0x14002ffd0
   14005b823:	lea    rcx,[rip+0x19996]        # 0x1400751c0
   14005b82a:	lea    rdx,[rbp+0x28]
   14005b82e:	mov    DWORD PTR [rax],0xde
   14005b834:	mov    DWORD PTR [rax+0x4],0x3f8
   14005b83b:	mov    QWORD PTR [rax+0x8],rcx
   14005b83f:	lea    rcx,[rsi+0x10]
   14005b843:	mov    DWORD PTR [rbp+0x30],0x3f8
   14005b84a:	mov    DWORD PTR [rbp+0x28],0xde
   14005b851:	call   0x14002ff30
   14005b856:	lea    rdx,[rbp+0x30]
   14005b85a:	lea    rcx,[rsi+0x30]
   14005b85e:	mov    rbx,rax
   14005b861:	call   0x14002ffd0
   14005b866:	mov    QWORD PTR [rbx],rax
   14005b869:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b86d:	jne    0x14005b9f5
   14005b873:	lea    rdx,[rbp+0x28]
   14005b877:	lea    rcx,[rsi+0x30]
   14005b87b:	mov    DWORD PTR [rbp+0x28],0x3f9
   14005b882:	call   0x14002ffd0
   14005b887:	lea    rcx,[rip+0x1994a]        # 0x1400751d8
   14005b88e:	lea    rdx,[rbp+0x28]
   14005b892:	mov    DWORD PTR [rax],0xdf
   14005b898:	mov    DWORD PTR [rax+0x4],0x3f9
   14005b89f:	mov    QWORD PTR [rax+0x8],rcx
   14005b8a3:	lea    rcx,[rsi+0x10]
   14005b8a7:	mov    DWORD PTR [rbp+0x30],0x3f9
   14005b8ae:	mov    DWORD PTR [rbp+0x28],0xdf
   14005b8b5:	call   0x14002ff30
   14005b8ba:	lea    rdx,[rbp+0x30]
   14005b8be:	lea    rcx,[rsi+0x30]
   14005b8c2:	mov    rbx,rax
   14005b8c5:	call   0x14002ffd0
   14005b8ca:	mov    QWORD PTR [rbx],rax
   14005b8cd:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b8d1:	jne    0x14005b9f5
   14005b8d7:	lea    rdx,[rbp+0x28]
   14005b8db:	lea    rcx,[rsi+0x30]
   14005b8df:	mov    DWORD PTR [rbp+0x28],0x3fa
   14005b8e6:	call   0x14002ffd0
   14005b8eb:	lea    rcx,[rip+0x198fe]        # 0x1400751f0
   14005b8f2:	lea    rdx,[rbp+0x28]
   14005b8f6:	mov    DWORD PTR [rax],0xe4
   14005b8fc:	mov    DWORD PTR [rax+0x4],0x3fa
   14005b903:	mov    QWORD PTR [rax+0x8],rcx
   14005b907:	lea    rcx,[rsi+0x10]
   14005b90b:	mov    DWORD PTR [rbp+0x30],0x3fa
   14005b912:	mov    DWORD PTR [rbp+0x28],0xe4
   14005b919:	call   0x14002ff30
   14005b91e:	lea    rdx,[rbp+0x30]
   14005b922:	lea    rcx,[rsi+0x30]
   14005b926:	mov    rbx,rax
   14005b929:	call   0x14002ffd0
   14005b92e:	mov    QWORD PTR [rbx],rax
   14005b931:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b935:	jne    0x14005b9f5
   14005b93b:	lea    rdx,[rbp+0x28]
   14005b93f:	lea    rcx,[rsi+0x30]
   14005b943:	mov    DWORD PTR [rbp+0x28],0x3fb
   14005b94a:	call   0x14002ffd0
   14005b94f:	lea    rcx,[rip+0x198ba]        # 0x140075210
   14005b956:	lea    rdx,[rbp+0x28]
   14005b95a:	mov    DWORD PTR [rax],0xe5
   14005b960:	mov    DWORD PTR [rax+0x4],0x3fb
   14005b967:	mov    QWORD PTR [rax+0x8],rcx
   14005b96b:	lea    rcx,[rsi+0x10]
   14005b96f:	mov    DWORD PTR [rbp+0x30],0x3fb
   14005b976:	mov    DWORD PTR [rbp+0x28],0xe5
   14005b97d:	call   0x14002ff30
   14005b982:	lea    rdx,[rbp+0x30]
   14005b986:	lea    rcx,[rsi+0x30]
   14005b98a:	mov    rbx,rax
   14005b98d:	call   0x14002ffd0
   14005b992:	mov    QWORD PTR [rbx],rax
   14005b995:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b999:	jne    0x14005b9f5
   14005b99b:	lea    rdx,[rbp+0x28]
   14005b99f:	lea    rcx,[rsi+0x30]
   14005b9a3:	mov    DWORD PTR [rbp+0x28],0x3fc
   14005b9aa:	call   0x14002ffd0
   14005b9af:	lea    rcx,[rip+0x1987a]        # 0x140075230
   14005b9b6:	lea    rdx,[rbp+0x28]
   14005b9ba:	mov    DWORD PTR [rax],0x144
   14005b9c0:	mov    DWORD PTR [rax+0x4],0x3fc
   14005b9c7:	mov    QWORD PTR [rax+0x8],rcx
   14005b9cb:	lea    rcx,[rsi+0x10]
   14005b9cf:	mov    DWORD PTR [rbp+0x30],0x3fc
   14005b9d6:	mov    DWORD PTR [rbp+0x28],0x144
   14005b9dd:	call   0x14002ff30
   14005b9e2:	lea    rdx,[rbp+0x30]
   14005b9e6:	lea    rcx,[rsi+0x30]
   14005b9ea:	mov    rbx,rax
   14005b9ed:	call   0x14002ffd0
   14005b9f2:	mov    QWORD PTR [rbx],rax
   14005b9f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005b9f9:	lea    rbx,[rip+0x19850]        # 0x140075250
   14005ba00:	jne    0x14005ba55
   14005ba02:	lea    rdx,[rbp+0x28]
   14005ba06:	lea    rcx,[rsi+0x30]
   14005ba0a:	mov    DWORD PTR [rbp+0x28],0x41b
   14005ba11:	call   0x14002ffd0
   14005ba16:	lea    rcx,[rsi+0x10]
   14005ba1a:	lea    rdx,[rbp+0x28]
   14005ba1e:	mov    DWORD PTR [rax],0x1
   14005ba24:	mov    DWORD PTR [rax+0x4],0x41b
   14005ba2b:	mov    DWORD PTR [rbp+0x30],0x41b
   14005ba32:	mov    QWORD PTR [rax+0x8],rbx
   14005ba36:	mov    DWORD PTR [rbp+0x28],0x1
   14005ba3d:	call   0x14002ff30
   14005ba42:	lea    rdx,[rbp+0x30]
   14005ba46:	lea    rcx,[rsi+0x30]
   14005ba4a:	mov    rbx,rax
   14005ba4d:	call   0x14002ffd0
   14005ba52:	mov    QWORD PTR [rbx],rax
   14005ba55:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ba59:	lea    rbx,[rip+0x19808]        # 0x140075268
   14005ba60:	jne    0x14005bab5
   14005ba62:	lea    rdx,[rbp+0x28]
   14005ba66:	lea    rcx,[rsi+0x30]
   14005ba6a:	mov    DWORD PTR [rbp+0x28],0x41c
   14005ba71:	call   0x14002ffd0
   14005ba76:	lea    rcx,[rsi+0x10]
   14005ba7a:	lea    rdx,[rbp+0x28]
   14005ba7e:	mov    DWORD PTR [rax],0x2
   14005ba84:	mov    DWORD PTR [rax+0x4],0x41c
   14005ba8b:	mov    DWORD PTR [rbp+0x30],0x41c
   14005ba92:	mov    QWORD PTR [rax+0x8],rbx
   14005ba96:	mov    DWORD PTR [rbp+0x28],0x2
   14005ba9d:	call   0x14002ff30
   14005baa2:	lea    rdx,[rbp+0x30]
   14005baa6:	lea    rcx,[rsi+0x30]
   14005baaa:	mov    rbx,rax
   14005baad:	call   0x14002ffd0
   14005bab2:	mov    QWORD PTR [rbx],rax
   14005bab5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bab9:	lea    rbx,[rip+0x197c8]        # 0x140075288
   14005bac0:	jne    0x14005bb15
   14005bac2:	lea    rdx,[rbp+0x28]
   14005bac6:	lea    rcx,[rsi+0x30]
   14005baca:	mov    DWORD PTR [rbp+0x28],0x41d
   14005bad1:	call   0x14002ffd0
   14005bad6:	lea    rcx,[rsi+0x10]
   14005bada:	lea    rdx,[rbp+0x28]
   14005bade:	mov    DWORD PTR [rax],0x3
   14005bae4:	mov    DWORD PTR [rax+0x4],0x41d
   14005baeb:	mov    DWORD PTR [rbp+0x30],0x41d
   14005baf2:	mov    QWORD PTR [rax+0x8],rbx
   14005baf6:	mov    DWORD PTR [rbp+0x28],0x3
   14005bafd:	call   0x14002ff30
   14005bb02:	lea    rdx,[rbp+0x30]
   14005bb06:	lea    rcx,[rsi+0x30]
   14005bb0a:	mov    rbx,rax
   14005bb0d:	call   0x14002ffd0
   14005bb12:	mov    QWORD PTR [rbx],rax
   14005bb15:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bb19:	lea    rbx,[rip+0x19788]        # 0x1400752a8
   14005bb20:	jne    0x14005bb75
   14005bb22:	lea    rdx,[rbp+0x28]
   14005bb26:	lea    rcx,[rsi+0x30]
   14005bb2a:	mov    DWORD PTR [rbp+0x28],0x41e
   14005bb31:	call   0x14002ffd0
   14005bb36:	lea    rcx,[rsi+0x10]
   14005bb3a:	lea    rdx,[rbp+0x28]
   14005bb3e:	mov    DWORD PTR [rax],0x4
   14005bb44:	mov    DWORD PTR [rax+0x4],0x41e
   14005bb4b:	mov    DWORD PTR [rbp+0x30],0x41e
   14005bb52:	mov    QWORD PTR [rax+0x8],rbx
   14005bb56:	mov    DWORD PTR [rbp+0x28],0x4
   14005bb5d:	call   0x14002ff30
   14005bb62:	lea    rdx,[rbp+0x30]
   14005bb66:	lea    rcx,[rsi+0x30]
   14005bb6a:	mov    rbx,rax
   14005bb6d:	call   0x14002ffd0
   14005bb72:	mov    QWORD PTR [rbx],rax
   14005bb75:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bb79:	lea    rbx,[rip+0x19748]        # 0x1400752c8
   14005bb80:	jne    0x14005bbd5
   14005bb82:	lea    rdx,[rbp+0x28]
   14005bb86:	lea    rcx,[rsi+0x30]
   14005bb8a:	mov    DWORD PTR [rbp+0x28],0x41f
   14005bb91:	call   0x14002ffd0
   14005bb96:	lea    rcx,[rsi+0x10]
   14005bb9a:	lea    rdx,[rbp+0x28]
   14005bb9e:	mov    DWORD PTR [rax],0x5
   14005bba4:	mov    DWORD PTR [rax+0x4],0x41f
   14005bbab:	mov    DWORD PTR [rbp+0x30],0x41f
   14005bbb2:	mov    QWORD PTR [rax+0x8],rbx
   14005bbb6:	mov    DWORD PTR [rbp+0x28],0x5
   14005bbbd:	call   0x14002ff30
   14005bbc2:	lea    rdx,[rbp+0x30]
   14005bbc6:	lea    rcx,[rsi+0x30]
   14005bbca:	mov    rbx,rax
   14005bbcd:	call   0x14002ffd0
   14005bbd2:	mov    QWORD PTR [rbx],rax
   14005bbd5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bbd9:	lea    rbx,[rip+0x19708]        # 0x1400752e8
   14005bbe0:	jne    0x14005bc35
   14005bbe2:	lea    rdx,[rbp+0x28]
   14005bbe6:	lea    rcx,[rsi+0x30]
   14005bbea:	mov    DWORD PTR [rbp+0x28],0x420
   14005bbf1:	call   0x14002ffd0
   14005bbf6:	lea    rcx,[rsi+0x10]
   14005bbfa:	lea    rdx,[rbp+0x28]
   14005bbfe:	mov    DWORD PTR [rax],0x6
   14005bc04:	mov    DWORD PTR [rax+0x4],0x420
   14005bc0b:	mov    DWORD PTR [rbp+0x30],0x420
   14005bc12:	mov    QWORD PTR [rax+0x8],rbx
   14005bc16:	mov    DWORD PTR [rbp+0x28],0x6
   14005bc1d:	call   0x14002ff30
   14005bc22:	lea    rdx,[rbp+0x30]
   14005bc26:	lea    rcx,[rsi+0x30]
   14005bc2a:	mov    rbx,rax
   14005bc2d:	call   0x14002ffd0
   14005bc32:	mov    QWORD PTR [rbx],rax
   14005bc35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bc39:	lea    rbx,[rip+0x196c8]        # 0x140075308
   14005bc40:	jne    0x14005bc95
   14005bc42:	lea    rdx,[rbp+0x28]
   14005bc46:	lea    rcx,[rsi+0x30]
   14005bc4a:	mov    DWORD PTR [rbp+0x28],0x421
   14005bc51:	call   0x14002ffd0
   14005bc56:	lea    rcx,[rsi+0x10]
   14005bc5a:	lea    rdx,[rbp+0x28]
   14005bc5e:	mov    DWORD PTR [rax],0x7
   14005bc64:	mov    DWORD PTR [rax+0x4],0x421
   14005bc6b:	mov    DWORD PTR [rbp+0x30],0x421
   14005bc72:	mov    QWORD PTR [rax+0x8],rbx
   14005bc76:	mov    DWORD PTR [rbp+0x28],0x7
   14005bc7d:	call   0x14002ff30
   14005bc82:	lea    rdx,[rbp+0x30]
   14005bc86:	lea    rcx,[rsi+0x30]
   14005bc8a:	mov    rbx,rax
   14005bc8d:	call   0x14002ffd0
   14005bc92:	mov    QWORD PTR [rbx],rax
   14005bc95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bc99:	lea    rbx,[rip+0x19688]        # 0x140075328
   14005bca0:	jne    0x14005bcf5
   14005bca2:	lea    rdx,[rbp+0x28]
   14005bca6:	lea    rcx,[rsi+0x30]
   14005bcaa:	mov    DWORD PTR [rbp+0x28],0x422
   14005bcb1:	call   0x14002ffd0
   14005bcb6:	lea    rcx,[rsi+0x10]
   14005bcba:	lea    rdx,[rbp+0x28]
   14005bcbe:	mov    DWORD PTR [rax],0x8
   14005bcc4:	mov    DWORD PTR [rax+0x4],0x422
   14005bccb:	mov    DWORD PTR [rbp+0x30],0x422
   14005bcd2:	mov    QWORD PTR [rax+0x8],rbx
   14005bcd6:	mov    DWORD PTR [rbp+0x28],0x8
   14005bcdd:	call   0x14002ff30
   14005bce2:	lea    rdx,[rbp+0x30]
   14005bce6:	lea    rcx,[rsi+0x30]
   14005bcea:	mov    rbx,rax
   14005bced:	call   0x14002ffd0
   14005bcf2:	mov    QWORD PTR [rbx],rax
   14005bcf5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bcf9:	lea    rbx,[rip+0x19640]        # 0x140075340
   14005bd00:	jne    0x14005bd55
   14005bd02:	lea    rdx,[rbp+0x28]
   14005bd06:	lea    rcx,[rsi+0x30]
   14005bd0a:	mov    DWORD PTR [rbp+0x28],0x423
   14005bd11:	call   0x14002ffd0
   14005bd16:	lea    rcx,[rsi+0x10]
   14005bd1a:	lea    rdx,[rbp+0x28]
   14005bd1e:	mov    DWORD PTR [rax],0x9
   14005bd24:	mov    DWORD PTR [rax+0x4],0x423
   14005bd2b:	mov    DWORD PTR [rbp+0x30],0x423
   14005bd32:	mov    QWORD PTR [rax+0x8],rbx
   14005bd36:	mov    DWORD PTR [rbp+0x28],0x9
   14005bd3d:	call   0x14002ff30
   14005bd42:	lea    rdx,[rbp+0x30]
   14005bd46:	lea    rcx,[rsi+0x30]
   14005bd4a:	mov    rbx,rax
   14005bd4d:	call   0x14002ffd0
   14005bd52:	mov    QWORD PTR [rbx],rax
   14005bd55:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bd59:	lea    rbx,[rip+0x19600]        # 0x140075360
   14005bd60:	jne    0x14005bdb5
   14005bd62:	lea    rdx,[rbp+0x28]
   14005bd66:	lea    rcx,[rsi+0x30]
   14005bd6a:	mov    DWORD PTR [rbp+0x28],0x424
   14005bd71:	call   0x14002ffd0
   14005bd76:	lea    rcx,[rsi+0x10]
   14005bd7a:	lea    rdx,[rbp+0x28]
   14005bd7e:	mov    DWORD PTR [rax],0x5e
   14005bd84:	mov    DWORD PTR [rax+0x4],0x424
   14005bd8b:	mov    DWORD PTR [rbp+0x30],0x424
   14005bd92:	mov    QWORD PTR [rax+0x8],rbx
   14005bd96:	mov    DWORD PTR [rbp+0x28],0x5e
   14005bd9d:	call   0x14002ff30
   14005bda2:	lea    rdx,[rbp+0x30]
   14005bda6:	lea    rcx,[rsi+0x30]
   14005bdaa:	mov    rbx,rax
   14005bdad:	call   0x14002ffd0
   14005bdb2:	mov    QWORD PTR [rbx],rax
   14005bdb5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bdb9:	lea    rbx,[rip+0x195b8]        # 0x140075378
   14005bdc0:	jne    0x14005be15
   14005bdc2:	lea    rdx,[rbp+0x28]
   14005bdc6:	lea    rcx,[rsi+0x30]
   14005bdca:	mov    DWORD PTR [rbp+0x28],0x425
   14005bdd1:	call   0x14002ffd0
   14005bdd6:	lea    rcx,[rsi+0x10]
   14005bdda:	lea    rdx,[rbp+0x28]
   14005bdde:	mov    DWORD PTR [rax],0x60
   14005bde4:	mov    DWORD PTR [rax+0x4],0x425
   14005bdeb:	mov    DWORD PTR [rbp+0x30],0x425
   14005bdf2:	mov    QWORD PTR [rax+0x8],rbx
   14005bdf6:	mov    DWORD PTR [rbp+0x28],0x60
   14005bdfd:	call   0x14002ff30
   14005be02:	lea    rdx,[rbp+0x30]
   14005be06:	lea    rcx,[rsi+0x30]
   14005be0a:	mov    rbx,rax
   14005be0d:	call   0x14002ffd0
   14005be12:	mov    QWORD PTR [rbx],rax
   14005be15:	cmp    DWORD PTR [rsi+0x8],0x1
   14005be19:	lea    rbx,[rip+0x19578]        # 0x140075398
   14005be20:	jne    0x14005be75
   14005be22:	lea    rdx,[rbp+0x28]
   14005be26:	lea    rcx,[rsi+0x30]
   14005be2a:	mov    DWORD PTR [rbp+0x28],0x426
   14005be31:	call   0x14002ffd0
   14005be36:	lea    rcx,[rsi+0x10]
   14005be3a:	lea    rdx,[rbp+0x28]
   14005be3e:	mov    DWORD PTR [rax],0x61
   14005be44:	mov    DWORD PTR [rax+0x4],0x426
   14005be4b:	mov    DWORD PTR [rbp+0x30],0x426
   14005be52:	mov    QWORD PTR [rax+0x8],rbx
   14005be56:	mov    DWORD PTR [rbp+0x28],0x61
   14005be5d:	call   0x14002ff30
   14005be62:	lea    rdx,[rbp+0x30]
   14005be66:	lea    rcx,[rsi+0x30]
   14005be6a:	mov    rbx,rax
   14005be6d:	call   0x14002ffd0
   14005be72:	mov    QWORD PTR [rbx],rax
   14005be75:	cmp    DWORD PTR [rsi+0x8],0x2
   14005be79:	jne    0x14005bed5
   14005be7b:	lea    rdx,[rbp+0x28]
   14005be7f:	lea    rcx,[rsi+0x30]
   14005be83:	mov    DWORD PTR [rbp+0x28],0x427
   14005be8a:	call   0x14002ffd0
   14005be8f:	lea    rcx,[rip+0x19522]        # 0x1400753b8
   14005be96:	lea    rdx,[rbp+0x28]
   14005be9a:	mov    DWORD PTR [rax],0xffffffff
   14005bea0:	mov    DWORD PTR [rax+0x4],0x427
   14005bea7:	mov    QWORD PTR [rax+0x8],rcx
   14005beab:	lea    rcx,[rsi+0x10]
   14005beaf:	mov    DWORD PTR [rbp+0x30],0x427
   14005beb6:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14005bebd:	call   0x14002ff30
   14005bec2:	lea    rdx,[rbp+0x30]
   14005bec6:	lea    rcx,[rsi+0x30]
   14005beca:	mov    rbx,rax
   14005becd:	call   0x14002ffd0
   14005bed2:	mov    QWORD PTR [rbx],rax
   14005bed5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bed9:	lea    rbx,[rip+0x194f0]        # 0x1400753d0
   14005bee0:	jne    0x14005bf35
   14005bee2:	lea    rdx,[rbp+0x28]
   14005bee6:	lea    rcx,[rsi+0x30]
   14005beea:	mov    DWORD PTR [rbp+0x28],0x428
   14005bef1:	call   0x14002ffd0
   14005bef6:	lea    rcx,[rsi+0x10]
   14005befa:	lea    rdx,[rbp+0x28]
   14005befe:	mov    DWORD PTR [rax],0x5f
   14005bf04:	mov    DWORD PTR [rax+0x4],0x428
   14005bf0b:	mov    DWORD PTR [rbp+0x30],0x428
   14005bf12:	mov    QWORD PTR [rax+0x8],rbx
   14005bf16:	mov    DWORD PTR [rbp+0x28],0x5f
   14005bf1d:	call   0x14002ff30
   14005bf22:	lea    rdx,[rbp+0x30]
   14005bf26:	lea    rcx,[rsi+0x30]
   14005bf2a:	mov    rbx,rax
   14005bf2d:	call   0x14002ffd0
   14005bf32:	mov    QWORD PTR [rbx],rax
   14005bf35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bf39:	lea    rbx,[rip+0x194b0]        # 0x1400753f0
   14005bf40:	jne    0x14005bf95
   14005bf42:	lea    rdx,[rbp+0x28]
   14005bf46:	lea    rcx,[rsi+0x30]
   14005bf4a:	mov    DWORD PTR [rbp+0x28],0x429
   14005bf51:	call   0x14002ffd0
   14005bf56:	lea    rcx,[rsi+0x10]
   14005bf5a:	lea    rdx,[rbp+0x28]
   14005bf5e:	mov    DWORD PTR [rax],0x76
   14005bf64:	mov    DWORD PTR [rax+0x4],0x429
   14005bf6b:	mov    DWORD PTR [rbp+0x30],0x429
   14005bf72:	mov    QWORD PTR [rax+0x8],rbx
   14005bf76:	mov    DWORD PTR [rbp+0x28],0x76
   14005bf7d:	call   0x14002ff30
   14005bf82:	lea    rdx,[rbp+0x30]
   14005bf86:	lea    rcx,[rsi+0x30]
   14005bf8a:	mov    rbx,rax
   14005bf8d:	call   0x14002ffd0
   14005bf92:	mov    QWORD PTR [rbx],rax
   14005bf95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bf99:	lea    rbx,[rip+0x19468]        # 0x140075408
   14005bfa0:	jne    0x14005bff5
   14005bfa2:	lea    rdx,[rbp+0x28]
   14005bfa6:	lea    rcx,[rsi+0x30]
   14005bfaa:	mov    DWORD PTR [rbp+0x28],0x42a
   14005bfb1:	call   0x14002ffd0
   14005bfb6:	lea    rcx,[rsi+0x10]
   14005bfba:	lea    rdx,[rbp+0x28]
   14005bfbe:	mov    DWORD PTR [rax],0x77
   14005bfc4:	mov    DWORD PTR [rax+0x4],0x42a
   14005bfcb:	mov    DWORD PTR [rbp+0x30],0x42a
   14005bfd2:	mov    QWORD PTR [rax+0x8],rbx
   14005bfd6:	mov    DWORD PTR [rbp+0x28],0x77
   14005bfdd:	call   0x14002ff30
   14005bfe2:	lea    rdx,[rbp+0x30]
   14005bfe6:	lea    rcx,[rsi+0x30]
   14005bfea:	mov    rbx,rax
   14005bfed:	call   0x14002ffd0
   14005bff2:	mov    QWORD PTR [rbx],rax
   14005bff5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005bff9:	lea    rbx,[rip+0x19428]        # 0x140075428
   14005c000:	jne    0x14005c055
   14005c002:	lea    rdx,[rbp+0x28]
   14005c006:	lea    rcx,[rsi+0x30]
   14005c00a:	mov    DWORD PTR [rbp+0x28],0x488
   14005c011:	call   0x14002ffd0
   14005c016:	lea    rcx,[rsi+0x10]
   14005c01a:	lea    rdx,[rbp+0x28]
   14005c01e:	mov    DWORD PTR [rax],0xb
   14005c024:	mov    DWORD PTR [rax+0x4],0x488
   14005c02b:	mov    DWORD PTR [rbp+0x30],0x488
   14005c032:	mov    QWORD PTR [rax+0x8],rbx
   14005c036:	mov    DWORD PTR [rbp+0x28],0xb
   14005c03d:	call   0x14002ff30
   14005c042:	lea    rdx,[rbp+0x30]
   14005c046:	lea    rcx,[rsi+0x30]
   14005c04a:	mov    rbx,rax
   14005c04d:	call   0x14002ffd0
   14005c052:	mov    QWORD PTR [rbx],rax
   14005c055:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c059:	lea    rbx,[rip+0x193e0]        # 0x140075440
   14005c060:	jne    0x14005c0b5
   14005c062:	lea    rdx,[rbp+0x28]
   14005c066:	lea    rcx,[rsi+0x30]
   14005c06a:	mov    DWORD PTR [rbp+0x28],0x489
   14005c071:	call   0x14002ffd0
   14005c076:	lea    rcx,[rsi+0x10]
   14005c07a:	lea    rdx,[rbp+0x28]
   14005c07e:	mov    DWORD PTR [rax],0xd
   14005c084:	mov    DWORD PTR [rax+0x4],0x489
   14005c08b:	mov    DWORD PTR [rbp+0x30],0x489
   14005c092:	mov    QWORD PTR [rax+0x8],rbx
   14005c096:	mov    DWORD PTR [rbp+0x28],0xd
   14005c09d:	call   0x14002ff30
   14005c0a2:	lea    rdx,[rbp+0x30]
   14005c0a6:	lea    rcx,[rsi+0x30]
   14005c0aa:	mov    rbx,rax
   14005c0ad:	call   0x14002ffd0
   14005c0b2:	mov    QWORD PTR [rbx],rax
   14005c0b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c0b9:	lea    rbx,[rip+0x19398]        # 0x140075458
   14005c0c0:	jne    0x14005c115
   14005c0c2:	lea    rdx,[rbp+0x28]
   14005c0c6:	lea    rcx,[rsi+0x30]
   14005c0ca:	mov    DWORD PTR [rbp+0x28],0x48a
   14005c0d1:	call   0x14002ffd0
   14005c0d6:	lea    rcx,[rsi+0x10]
   14005c0da:	lea    rdx,[rbp+0x28]
   14005c0de:	mov    DWORD PTR [rax],0xc
   14005c0e4:	mov    DWORD PTR [rax+0x4],0x48a
   14005c0eb:	mov    DWORD PTR [rbp+0x30],0x48a
   14005c0f2:	mov    QWORD PTR [rax+0x8],rbx
   14005c0f6:	mov    DWORD PTR [rbp+0x28],0xc
   14005c0fd:	call   0x14002ff30
   14005c102:	lea    rdx,[rbp+0x30]
   14005c106:	lea    rcx,[rsi+0x30]
   14005c10a:	mov    rbx,rax
   14005c10d:	call   0x14002ffd0
   14005c112:	mov    QWORD PTR [rbx],rax
   14005c115:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c119:	lea    rbx,[rip+0x19350]        # 0x140075470
   14005c120:	jne    0x14005c175
   14005c122:	lea    rdx,[rbp+0x28]
   14005c126:	lea    rcx,[rsi+0x30]
   14005c12a:	mov    DWORD PTR [rbp+0x28],0x48b
   14005c131:	call   0x14002ffd0
   14005c136:	lea    rcx,[rsi+0x10]
   14005c13a:	lea    rdx,[rbp+0x28]
   14005c13e:	mov    DWORD PTR [rax],0xe
   14005c144:	mov    DWORD PTR [rax+0x4],0x48b
   14005c14b:	mov    DWORD PTR [rbp+0x30],0x48b
   14005c152:	mov    QWORD PTR [rax+0x8],rbx
   14005c156:	mov    DWORD PTR [rbp+0x28],0xe
   14005c15d:	call   0x14002ff30
   14005c162:	lea    rdx,[rbp+0x30]
   14005c166:	lea    rcx,[rsi+0x30]
   14005c16a:	mov    rbx,rax
   14005c16d:	call   0x14002ffd0
   14005c172:	mov    QWORD PTR [rbx],rax
   14005c175:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c179:	lea    rbx,[rip+0x19300]        # 0x140075480
   14005c180:	jne    0x14005c1d5
   14005c182:	lea    rdx,[rbp+0x28]
   14005c186:	lea    rcx,[rsi+0x30]
   14005c18a:	mov    DWORD PTR [rbp+0x28],0x48c
   14005c191:	call   0x14002ffd0
   14005c196:	lea    rcx,[rsi+0x10]
   14005c19a:	lea    rdx,[rbp+0x28]
   14005c19e:	mov    DWORD PTR [rax],0xa
   14005c1a4:	mov    DWORD PTR [rax+0x4],0x48c
   14005c1ab:	mov    DWORD PTR [rbp+0x30],0x48c
   14005c1b2:	mov    QWORD PTR [rax+0x8],rbx
   14005c1b6:	mov    DWORD PTR [rbp+0x28],0xa
   14005c1bd:	call   0x14002ff30
   14005c1c2:	lea    rdx,[rbp+0x30]
   14005c1c6:	lea    rcx,[rsi+0x30]
   14005c1ca:	mov    rbx,rax
   14005c1cd:	call   0x14002ffd0
   14005c1d2:	mov    QWORD PTR [rbx],rax
   14005c1d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c1d9:	lea    rbx,[rip+0x192b8]        # 0x140075498
   14005c1e0:	jne    0x14005c235
   14005c1e2:	lea    rdx,[rbp+0x28]
   14005c1e6:	lea    rcx,[rsi+0x30]
   14005c1ea:	mov    DWORD PTR [rbp+0x28],0x492
   14005c1f1:	call   0x14002ffd0
   14005c1f6:	lea    rcx,[rsi+0x10]
   14005c1fa:	lea    rdx,[rbp+0x28]
   14005c1fe:	mov    DWORD PTR [rax],0x10
   14005c204:	mov    DWORD PTR [rax+0x4],0x492
   14005c20b:	mov    DWORD PTR [rbp+0x30],0x492
   14005c212:	mov    QWORD PTR [rax+0x8],rbx
   14005c216:	mov    DWORD PTR [rbp+0x28],0x10
   14005c21d:	call   0x14002ff30
   14005c222:	lea    rdx,[rbp+0x30]
   14005c226:	lea    rcx,[rsi+0x30]
   14005c22a:	mov    rbx,rax
   14005c22d:	call   0x14002ffd0
   14005c232:	mov    QWORD PTR [rbx],rax
   14005c235:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c239:	lea    rbx,[rip+0x19270]        # 0x1400754b0
   14005c240:	jne    0x14005c295
   14005c242:	lea    rdx,[rbp+0x28]
   14005c246:	lea    rcx,[rsi+0x30]
   14005c24a:	mov    DWORD PTR [rbp+0x28],0x493
   14005c251:	call   0x14002ffd0
   14005c256:	lea    rcx,[rsi+0x10]
   14005c25a:	lea    rdx,[rbp+0x28]
   14005c25e:	mov    DWORD PTR [rax],0x12
   14005c264:	mov    DWORD PTR [rax+0x4],0x493
   14005c26b:	mov    DWORD PTR [rbp+0x30],0x493
   14005c272:	mov    QWORD PTR [rax+0x8],rbx
   14005c276:	mov    DWORD PTR [rbp+0x28],0x12
   14005c27d:	call   0x14002ff30
   14005c282:	lea    rdx,[rbp+0x30]
   14005c286:	lea    rcx,[rsi+0x30]
   14005c28a:	mov    rbx,rax
   14005c28d:	call   0x14002ffd0
   14005c292:	mov    QWORD PTR [rbx],rax
   14005c295:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c299:	lea    rbx,[rip+0x19228]        # 0x1400754c8
   14005c2a0:	jne    0x14005c2f5
   14005c2a2:	lea    rdx,[rbp+0x28]
   14005c2a6:	lea    rcx,[rsi+0x30]
   14005c2aa:	mov    DWORD PTR [rbp+0x28],0x494
   14005c2b1:	call   0x14002ffd0
   14005c2b6:	lea    rcx,[rsi+0x10]
   14005c2ba:	lea    rdx,[rbp+0x28]
   14005c2be:	mov    DWORD PTR [rax],0x11
   14005c2c4:	mov    DWORD PTR [rax+0x4],0x494
   14005c2cb:	mov    DWORD PTR [rbp+0x30],0x494
   14005c2d2:	mov    QWORD PTR [rax+0x8],rbx
   14005c2d6:	mov    DWORD PTR [rbp+0x28],0x11
   14005c2dd:	call   0x14002ff30
   14005c2e2:	lea    rdx,[rbp+0x30]
   14005c2e6:	lea    rcx,[rsi+0x30]
   14005c2ea:	mov    rbx,rax
   14005c2ed:	call   0x14002ffd0
   14005c2f2:	mov    QWORD PTR [rbx],rax
   14005c2f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c2f9:	lea    rbx,[rip+0x191e0]        # 0x1400754e0
   14005c300:	jne    0x14005c355
   14005c302:	lea    rdx,[rbp+0x28]
   14005c306:	lea    rcx,[rsi+0x30]
   14005c30a:	mov    DWORD PTR [rbp+0x28],0x495
   14005c311:	call   0x14002ffd0
   14005c316:	lea    rcx,[rsi+0x10]
   14005c31a:	lea    rdx,[rbp+0x28]
   14005c31e:	mov    DWORD PTR [rax],0x13
   14005c324:	mov    DWORD PTR [rax+0x4],0x495
   14005c32b:	mov    DWORD PTR [rbp+0x30],0x495
   14005c332:	mov    QWORD PTR [rax+0x8],rbx
   14005c336:	mov    DWORD PTR [rbp+0x28],0x13
   14005c33d:	call   0x14002ff30
   14005c342:	lea    rdx,[rbp+0x30]
   14005c346:	lea    rcx,[rsi+0x30]
   14005c34a:	mov    rbx,rax
   14005c34d:	call   0x14002ffd0
   14005c352:	mov    QWORD PTR [rbx],rax
   14005c355:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c359:	lea    rbx,[rip+0x19190]        # 0x1400754f0
   14005c360:	jne    0x14005c3b5
   14005c362:	lea    rdx,[rbp+0x28]
   14005c366:	lea    rcx,[rsi+0x30]
   14005c36a:	mov    DWORD PTR [rbp+0x28],0x496
   14005c371:	call   0x14002ffd0
   14005c376:	lea    rcx,[rsi+0x10]
   14005c37a:	lea    rdx,[rbp+0x28]
   14005c37e:	mov    DWORD PTR [rax],0xf
   14005c384:	mov    DWORD PTR [rax+0x4],0x496
   14005c38b:	mov    DWORD PTR [rbp+0x30],0x496
   14005c392:	mov    QWORD PTR [rax+0x8],rbx
   14005c396:	mov    DWORD PTR [rbp+0x28],0xf
   14005c39d:	call   0x14002ff30
   14005c3a2:	lea    rdx,[rbp+0x30]
   14005c3a6:	lea    rcx,[rsi+0x30]
   14005c3aa:	mov    rbx,rax
   14005c3ad:	call   0x14002ffd0
   14005c3b2:	mov    QWORD PTR [rbx],rax
   14005c3b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c3b9:	lea    rbx,[rip+0x19148]        # 0x140075508
   14005c3c0:	jne    0x14005c415
   14005c3c2:	lea    rdx,[rbp+0x28]
   14005c3c6:	lea    rcx,[rsi+0x30]
   14005c3ca:	mov    DWORD PTR [rbp+0x28],0x49c
   14005c3d1:	call   0x14002ffd0
   14005c3d6:	lea    rcx,[rsi+0x10]
   14005c3da:	lea    rdx,[rbp+0x28]
   14005c3de:	mov    DWORD PTR [rax],0x15
   14005c3e4:	mov    DWORD PTR [rax+0x4],0x49c
   14005c3eb:	mov    DWORD PTR [rbp+0x30],0x49c
   14005c3f2:	mov    QWORD PTR [rax+0x8],rbx
   14005c3f6:	mov    DWORD PTR [rbp+0x28],0x15
   14005c3fd:	call   0x14002ff30
   14005c402:	lea    rdx,[rbp+0x30]
   14005c406:	lea    rcx,[rsi+0x30]
   14005c40a:	mov    rbx,rax
   14005c40d:	call   0x14002ffd0
   14005c412:	mov    QWORD PTR [rbx],rax
   14005c415:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c419:	lea    rbx,[rip+0x19100]        # 0x140075520
   14005c420:	jne    0x14005c475
   14005c422:	lea    rdx,[rbp+0x28]
   14005c426:	lea    rcx,[rsi+0x30]
   14005c42a:	mov    DWORD PTR [rbp+0x28],0x49d
   14005c431:	call   0x14002ffd0
   14005c436:	lea    rcx,[rsi+0x10]
   14005c43a:	lea    rdx,[rbp+0x28]
   14005c43e:	mov    DWORD PTR [rax],0x17
   14005c444:	mov    DWORD PTR [rax+0x4],0x49d
   14005c44b:	mov    DWORD PTR [rbp+0x30],0x49d
   14005c452:	mov    QWORD PTR [rax+0x8],rbx
   14005c456:	mov    DWORD PTR [rbp+0x28],0x17
   14005c45d:	call   0x14002ff30
   14005c462:	lea    rdx,[rbp+0x30]
   14005c466:	lea    rcx,[rsi+0x30]
   14005c46a:	mov    rbx,rax
   14005c46d:	call   0x14002ffd0
   14005c472:	mov    QWORD PTR [rbx],rax
   14005c475:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c479:	lea    rbx,[rip+0x190b8]        # 0x140075538
   14005c480:	jne    0x14005c4d5
   14005c482:	lea    rdx,[rbp+0x28]
   14005c486:	lea    rcx,[rsi+0x30]
   14005c48a:	mov    DWORD PTR [rbp+0x28],0x49e
   14005c491:	call   0x14002ffd0
   14005c496:	lea    rcx,[rsi+0x10]
   14005c49a:	lea    rdx,[rbp+0x28]
   14005c49e:	mov    DWORD PTR [rax],0x16
   14005c4a4:	mov    DWORD PTR [rax+0x4],0x49e
   14005c4ab:	mov    DWORD PTR [rbp+0x30],0x49e
   14005c4b2:	mov    QWORD PTR [rax+0x8],rbx
   14005c4b6:	mov    DWORD PTR [rbp+0x28],0x16
   14005c4bd:	call   0x14002ff30
   14005c4c2:	lea    rdx,[rbp+0x30]
   14005c4c6:	lea    rcx,[rsi+0x30]
   14005c4ca:	mov    rbx,rax
   14005c4cd:	call   0x14002ffd0
   14005c4d2:	mov    QWORD PTR [rbx],rax
   14005c4d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c4d9:	lea    rbx,[rip+0x19070]        # 0x140075550
   14005c4e0:	jne    0x14005c535
   14005c4e2:	lea    rdx,[rbp+0x28]
   14005c4e6:	lea    rcx,[rsi+0x30]
   14005c4ea:	mov    DWORD PTR [rbp+0x28],0x49f
   14005c4f1:	call   0x14002ffd0
   14005c4f6:	lea    rcx,[rsi+0x10]
   14005c4fa:	lea    rdx,[rbp+0x28]
   14005c4fe:	mov    DWORD PTR [rax],0x18
   14005c504:	mov    DWORD PTR [rax+0x4],0x49f
   14005c50b:	mov    DWORD PTR [rbp+0x30],0x49f
   14005c512:	mov    QWORD PTR [rax+0x8],rbx
   14005c516:	mov    DWORD PTR [rbp+0x28],0x18
   14005c51d:	call   0x14002ff30
   14005c522:	lea    rdx,[rbp+0x30]
   14005c526:	lea    rcx,[rsi+0x30]
   14005c52a:	mov    rbx,rax
   14005c52d:	call   0x14002ffd0
   14005c532:	mov    QWORD PTR [rbx],rax
   14005c535:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c539:	lea    rbx,[rip+0x19020]        # 0x140075560
   14005c540:	jne    0x14005c595
   14005c542:	lea    rdx,[rbp+0x28]
   14005c546:	lea    rcx,[rsi+0x30]
   14005c54a:	mov    DWORD PTR [rbp+0x28],0x4a0
   14005c551:	call   0x14002ffd0
   14005c556:	lea    rcx,[rsi+0x10]
   14005c55a:	lea    rdx,[rbp+0x28]
   14005c55e:	mov    DWORD PTR [rax],0x14
   14005c564:	mov    DWORD PTR [rax+0x4],0x4a0
   14005c56b:	mov    DWORD PTR [rbp+0x30],0x4a0
   14005c572:	mov    QWORD PTR [rax+0x8],rbx
   14005c576:	mov    DWORD PTR [rbp+0x28],0x14
   14005c57d:	call   0x14002ff30
   14005c582:	lea    rdx,[rbp+0x30]
   14005c586:	lea    rcx,[rsi+0x30]
   14005c58a:	mov    rbx,rax
   14005c58d:	call   0x14002ffd0
   14005c592:	mov    QWORD PTR [rbx],rax
   14005c595:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c599:	lea    rbx,[rip+0x18fd8]        # 0x140075578
   14005c5a0:	jne    0x14005c5f5
   14005c5a2:	lea    rdx,[rbp+0x28]
   14005c5a6:	lea    rcx,[rsi+0x30]
   14005c5aa:	mov    DWORD PTR [rbp+0x28],0x4a6
   14005c5b1:	call   0x14002ffd0
   14005c5b6:	lea    rcx,[rsi+0x10]
   14005c5ba:	lea    rdx,[rbp+0x28]
   14005c5be:	mov    DWORD PTR [rax],0x1a
   14005c5c4:	mov    DWORD PTR [rax+0x4],0x4a6
   14005c5cb:	mov    DWORD PTR [rbp+0x30],0x4a6
   14005c5d2:	mov    QWORD PTR [rax+0x8],rbx
   14005c5d6:	mov    DWORD PTR [rbp+0x28],0x1a
   14005c5dd:	call   0x14002ff30
   14005c5e2:	lea    rdx,[rbp+0x30]
   14005c5e6:	lea    rcx,[rsi+0x30]
   14005c5ea:	mov    rbx,rax
   14005c5ed:	call   0x14002ffd0
   14005c5f2:	mov    QWORD PTR [rbx],rax
   14005c5f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c5f9:	lea    rbx,[rip+0x18f90]        # 0x140075590
   14005c600:	jne    0x14005c655
   14005c602:	lea    rdx,[rbp+0x28]
   14005c606:	lea    rcx,[rsi+0x30]
   14005c60a:	mov    DWORD PTR [rbp+0x28],0x4a7
   14005c611:	call   0x14002ffd0
   14005c616:	lea    rcx,[rsi+0x10]
   14005c61a:	lea    rdx,[rbp+0x28]
   14005c61e:	mov    DWORD PTR [rax],0x1c
   14005c624:	mov    DWORD PTR [rax+0x4],0x4a7
   14005c62b:	mov    DWORD PTR [rbp+0x30],0x4a7
   14005c632:	mov    QWORD PTR [rax+0x8],rbx
   14005c636:	mov    DWORD PTR [rbp+0x28],0x1c
   14005c63d:	call   0x14002ff30
   14005c642:	lea    rdx,[rbp+0x30]
   14005c646:	lea    rcx,[rsi+0x30]
   14005c64a:	mov    rbx,rax
   14005c64d:	call   0x14002ffd0
   14005c652:	mov    QWORD PTR [rbx],rax
   14005c655:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c659:	lea    rbx,[rip+0x18f48]        # 0x1400755a8
   14005c660:	jne    0x14005c6b5
   14005c662:	lea    rdx,[rbp+0x28]
   14005c666:	lea    rcx,[rsi+0x30]
   14005c66a:	mov    DWORD PTR [rbp+0x28],0x4a8
   14005c671:	call   0x14002ffd0
   14005c676:	lea    rcx,[rsi+0x10]
   14005c67a:	lea    rdx,[rbp+0x28]
   14005c67e:	mov    DWORD PTR [rax],0x1b
   14005c684:	mov    DWORD PTR [rax+0x4],0x4a8
   14005c68b:	mov    DWORD PTR [rbp+0x30],0x4a8
   14005c692:	mov    QWORD PTR [rax+0x8],rbx
   14005c696:	mov    DWORD PTR [rbp+0x28],0x1b
   14005c69d:	call   0x14002ff30
   14005c6a2:	lea    rdx,[rbp+0x30]
   14005c6a6:	lea    rcx,[rsi+0x30]
   14005c6aa:	mov    rbx,rax
   14005c6ad:	call   0x14002ffd0
   14005c6b2:	mov    QWORD PTR [rbx],rax
   14005c6b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c6b9:	lea    rbx,[rip+0x18f00]        # 0x1400755c0
   14005c6c0:	jne    0x14005c715
   14005c6c2:	lea    rdx,[rbp+0x28]
   14005c6c6:	lea    rcx,[rsi+0x30]
   14005c6ca:	mov    DWORD PTR [rbp+0x28],0x4a9
   14005c6d1:	call   0x14002ffd0
   14005c6d6:	lea    rcx,[rsi+0x10]
   14005c6da:	lea    rdx,[rbp+0x28]
   14005c6de:	mov    DWORD PTR [rax],0x1d
   14005c6e4:	mov    DWORD PTR [rax+0x4],0x4a9
   14005c6eb:	mov    DWORD PTR [rbp+0x30],0x4a9
   14005c6f2:	mov    QWORD PTR [rax+0x8],rbx
   14005c6f6:	mov    DWORD PTR [rbp+0x28],0x1d
   14005c6fd:	call   0x14002ff30
   14005c702:	lea    rdx,[rbp+0x30]
   14005c706:	lea    rcx,[rsi+0x30]
   14005c70a:	mov    rbx,rax
   14005c70d:	call   0x14002ffd0
   14005c712:	mov    QWORD PTR [rbx],rax
   14005c715:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c719:	lea    rbx,[rip+0x18eb0]        # 0x1400755d0
   14005c720:	jne    0x14005c775
   14005c722:	lea    rdx,[rbp+0x28]
   14005c726:	lea    rcx,[rsi+0x30]
   14005c72a:	mov    DWORD PTR [rbp+0x28],0x4aa
   14005c731:	call   0x14002ffd0
   14005c736:	lea    rcx,[rsi+0x10]
   14005c73a:	lea    rdx,[rbp+0x28]
   14005c73e:	mov    DWORD PTR [rax],0x19
   14005c744:	mov    DWORD PTR [rax+0x4],0x4aa
   14005c74b:	mov    DWORD PTR [rbp+0x30],0x4aa
   14005c752:	mov    QWORD PTR [rax+0x8],rbx
   14005c756:	mov    DWORD PTR [rbp+0x28],0x19
   14005c75d:	call   0x14002ff30
   14005c762:	lea    rdx,[rbp+0x30]
   14005c766:	lea    rcx,[rsi+0x30]
   14005c76a:	mov    rbx,rax
   14005c76d:	call   0x14002ffd0
   14005c772:	mov    QWORD PTR [rbx],rax
   14005c775:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c779:	lea    rbx,[rip+0x18e68]        # 0x1400755e8
   14005c780:	jne    0x14005c7d5
   14005c782:	lea    rdx,[rbp+0x28]
   14005c786:	lea    rcx,[rsi+0x30]
   14005c78a:	mov    DWORD PTR [rbp+0x28],0x4b0
   14005c791:	call   0x14002ffd0
   14005c796:	lea    rcx,[rsi+0x10]
   14005c79a:	lea    rdx,[rbp+0x28]
   14005c79e:	mov    DWORD PTR [rax],0x1f
   14005c7a4:	mov    DWORD PTR [rax+0x4],0x4b0
   14005c7ab:	mov    DWORD PTR [rbp+0x30],0x4b0
   14005c7b2:	mov    QWORD PTR [rax+0x8],rbx
   14005c7b6:	mov    DWORD PTR [rbp+0x28],0x1f
   14005c7bd:	call   0x14002ff30
   14005c7c2:	lea    rdx,[rbp+0x30]
   14005c7c6:	lea    rcx,[rsi+0x30]
   14005c7ca:	mov    rbx,rax
   14005c7cd:	call   0x14002ffd0
   14005c7d2:	mov    QWORD PTR [rbx],rax
   14005c7d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c7d9:	lea    rbx,[rip+0x18e20]        # 0x140075600
   14005c7e0:	jne    0x14005c835
   14005c7e2:	lea    rdx,[rbp+0x28]
   14005c7e6:	lea    rcx,[rsi+0x30]
   14005c7ea:	mov    DWORD PTR [rbp+0x28],0x4b1
   14005c7f1:	call   0x14002ffd0
   14005c7f6:	lea    rcx,[rsi+0x10]
   14005c7fa:	lea    rdx,[rbp+0x28]
   14005c7fe:	mov    DWORD PTR [rax],0x21
   14005c804:	mov    DWORD PTR [rax+0x4],0x4b1
   14005c80b:	mov    DWORD PTR [rbp+0x30],0x4b1
   14005c812:	mov    QWORD PTR [rax+0x8],rbx
   14005c816:	mov    DWORD PTR [rbp+0x28],0x21
   14005c81d:	call   0x14002ff30
   14005c822:	lea    rdx,[rbp+0x30]
   14005c826:	lea    rcx,[rsi+0x30]
   14005c82a:	mov    rbx,rax
   14005c82d:	call   0x14002ffd0
   14005c832:	mov    QWORD PTR [rbx],rax
   14005c835:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c839:	lea    rbx,[rip+0x18dd8]        # 0x140075618
   14005c840:	jne    0x14005c895
   14005c842:	lea    rdx,[rbp+0x28]
   14005c846:	lea    rcx,[rsi+0x30]
   14005c84a:	mov    DWORD PTR [rbp+0x28],0x4b2
   14005c851:	call   0x14002ffd0
   14005c856:	lea    rcx,[rsi+0x10]
   14005c85a:	lea    rdx,[rbp+0x28]
   14005c85e:	mov    DWORD PTR [rax],0x20
   14005c864:	mov    DWORD PTR [rax+0x4],0x4b2
   14005c86b:	mov    DWORD PTR [rbp+0x30],0x4b2
   14005c872:	mov    QWORD PTR [rax+0x8],rbx
   14005c876:	mov    DWORD PTR [rbp+0x28],0x20
   14005c87d:	call   0x14002ff30
   14005c882:	lea    rdx,[rbp+0x30]
   14005c886:	lea    rcx,[rsi+0x30]
   14005c88a:	mov    rbx,rax
   14005c88d:	call   0x14002ffd0
   14005c892:	mov    QWORD PTR [rbx],rax
   14005c895:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c899:	lea    rbx,[rip+0x18d90]        # 0x140075630
   14005c8a0:	jne    0x14005c8f5
   14005c8a2:	lea    rdx,[rbp+0x28]
   14005c8a6:	lea    rcx,[rsi+0x30]
   14005c8aa:	mov    DWORD PTR [rbp+0x28],0x4b3
   14005c8b1:	call   0x14002ffd0
   14005c8b6:	lea    rcx,[rsi+0x10]
   14005c8ba:	lea    rdx,[rbp+0x28]
   14005c8be:	mov    DWORD PTR [rax],0x22
   14005c8c4:	mov    DWORD PTR [rax+0x4],0x4b3
   14005c8cb:	mov    DWORD PTR [rbp+0x30],0x4b3
   14005c8d2:	mov    QWORD PTR [rax+0x8],rbx
   14005c8d6:	mov    DWORD PTR [rbp+0x28],0x22
   14005c8dd:	call   0x14002ff30
   14005c8e2:	lea    rdx,[rbp+0x30]
   14005c8e6:	lea    rcx,[rsi+0x30]
   14005c8ea:	mov    rbx,rax
   14005c8ed:	call   0x14002ffd0
   14005c8f2:	mov    QWORD PTR [rbx],rax
   14005c8f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c8f9:	lea    rbx,[rip+0x18d40]        # 0x140075640
   14005c900:	jne    0x14005c955
   14005c902:	lea    rdx,[rbp+0x28]
   14005c906:	lea    rcx,[rsi+0x30]
   14005c90a:	mov    DWORD PTR [rbp+0x28],0x4b4
   14005c911:	call   0x14002ffd0
   14005c916:	lea    rcx,[rsi+0x10]
   14005c91a:	lea    rdx,[rbp+0x28]
   14005c91e:	mov    DWORD PTR [rax],0x1e
   14005c924:	mov    DWORD PTR [rax+0x4],0x4b4
   14005c92b:	mov    DWORD PTR [rbp+0x30],0x4b4
   14005c932:	mov    QWORD PTR [rax+0x8],rbx
   14005c936:	mov    DWORD PTR [rbp+0x28],0x1e
   14005c93d:	call   0x14002ff30
   14005c942:	lea    rdx,[rbp+0x30]
   14005c946:	lea    rcx,[rsi+0x30]
   14005c94a:	mov    rbx,rax
   14005c94d:	call   0x14002ffd0
   14005c952:	mov    QWORD PTR [rbx],rax
   14005c955:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c959:	lea    rbx,[rip+0x18cf8]        # 0x140075658
   14005c960:	jne    0x14005c9b5
   14005c962:	lea    rdx,[rbp+0x28]
   14005c966:	lea    rcx,[rsi+0x30]
   14005c96a:	mov    DWORD PTR [rbp+0x28],0x4ba
   14005c971:	call   0x14002ffd0
   14005c976:	lea    rcx,[rsi+0x10]
   14005c97a:	lea    rdx,[rbp+0x28]
   14005c97e:	mov    DWORD PTR [rax],0x24
   14005c984:	mov    DWORD PTR [rax+0x4],0x4ba
   14005c98b:	mov    DWORD PTR [rbp+0x30],0x4ba
   14005c992:	mov    QWORD PTR [rax+0x8],rbx
   14005c996:	mov    DWORD PTR [rbp+0x28],0x24
   14005c99d:	call   0x14002ff30
   14005c9a2:	lea    rdx,[rbp+0x30]
   14005c9a6:	lea    rcx,[rsi+0x30]
   14005c9aa:	mov    rbx,rax
   14005c9ad:	call   0x14002ffd0
   14005c9b2:	mov    QWORD PTR [rbx],rax
   14005c9b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005c9b9:	lea    rbx,[rip+0x18cb0]        # 0x140075670
   14005c9c0:	jne    0x14005ca15
   14005c9c2:	lea    rdx,[rbp+0x28]
   14005c9c6:	lea    rcx,[rsi+0x30]
   14005c9ca:	mov    DWORD PTR [rbp+0x28],0x4bb
   14005c9d1:	call   0x14002ffd0
   14005c9d6:	lea    rcx,[rsi+0x10]
   14005c9da:	lea    rdx,[rbp+0x28]
   14005c9de:	mov    DWORD PTR [rax],0x26
   14005c9e4:	mov    DWORD PTR [rax+0x4],0x4bb
   14005c9eb:	mov    DWORD PTR [rbp+0x30],0x4bb
   14005c9f2:	mov    QWORD PTR [rax+0x8],rbx
   14005c9f6:	mov    DWORD PTR [rbp+0x28],0x26
   14005c9fd:	call   0x14002ff30
   14005ca02:	lea    rdx,[rbp+0x30]
   14005ca06:	lea    rcx,[rsi+0x30]
   14005ca0a:	mov    rbx,rax
   14005ca0d:	call   0x14002ffd0
   14005ca12:	mov    QWORD PTR [rbx],rax
   14005ca15:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ca19:	lea    rbx,[rip+0x18c68]        # 0x140075688
   14005ca20:	jne    0x14005ca75
   14005ca22:	lea    rdx,[rbp+0x28]
   14005ca26:	lea    rcx,[rsi+0x30]
   14005ca2a:	mov    DWORD PTR [rbp+0x28],0x4bc
   14005ca31:	call   0x14002ffd0
   14005ca36:	lea    rcx,[rsi+0x10]
   14005ca3a:	lea    rdx,[rbp+0x28]
   14005ca3e:	mov    DWORD PTR [rax],0x25
   14005ca44:	mov    DWORD PTR [rax+0x4],0x4bc
   14005ca4b:	mov    DWORD PTR [rbp+0x30],0x4bc
   14005ca52:	mov    QWORD PTR [rax+0x8],rbx
   14005ca56:	mov    DWORD PTR [rbp+0x28],0x25
   14005ca5d:	call   0x14002ff30
   14005ca62:	lea    rdx,[rbp+0x30]
   14005ca66:	lea    rcx,[rsi+0x30]
   14005ca6a:	mov    rbx,rax
   14005ca6d:	call   0x14002ffd0
   14005ca72:	mov    QWORD PTR [rbx],rax
   14005ca75:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ca79:	lea    rbx,[rip+0x18c20]        # 0x1400756a0
   14005ca80:	jne    0x14005cad5
   14005ca82:	lea    rdx,[rbp+0x28]
   14005ca86:	lea    rcx,[rsi+0x30]
   14005ca8a:	mov    DWORD PTR [rbp+0x28],0x4bd
   14005ca91:	call   0x14002ffd0
   14005ca96:	lea    rcx,[rsi+0x10]
   14005ca9a:	lea    rdx,[rbp+0x28]
   14005ca9e:	mov    DWORD PTR [rax],0x27
   14005caa4:	mov    DWORD PTR [rax+0x4],0x4bd
   14005caab:	mov    DWORD PTR [rbp+0x30],0x4bd
   14005cab2:	mov    QWORD PTR [rax+0x8],rbx
   14005cab6:	mov    DWORD PTR [rbp+0x28],0x27
   14005cabd:	call   0x14002ff30
   14005cac2:	lea    rdx,[rbp+0x30]
   14005cac6:	lea    rcx,[rsi+0x30]
   14005caca:	mov    rbx,rax
   14005cacd:	call   0x14002ffd0
   14005cad2:	mov    QWORD PTR [rbx],rax
   14005cad5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cad9:	lea    rbx,[rip+0x18bd0]        # 0x1400756b0
   14005cae0:	jne    0x14005cb35
   14005cae2:	lea    rdx,[rbp+0x28]
   14005cae6:	lea    rcx,[rsi+0x30]
   14005caea:	mov    DWORD PTR [rbp+0x28],0x4be
   14005caf1:	call   0x14002ffd0
   14005caf6:	lea    rcx,[rsi+0x10]
   14005cafa:	lea    rdx,[rbp+0x28]
   14005cafe:	mov    DWORD PTR [rax],0x23
   14005cb04:	mov    DWORD PTR [rax+0x4],0x4be
   14005cb0b:	mov    DWORD PTR [rbp+0x30],0x4be
   14005cb12:	mov    QWORD PTR [rax+0x8],rbx
   14005cb16:	mov    DWORD PTR [rbp+0x28],0x23
   14005cb1d:	call   0x14002ff30
   14005cb22:	lea    rdx,[rbp+0x30]
   14005cb26:	lea    rcx,[rsi+0x30]
   14005cb2a:	mov    rbx,rax
   14005cb2d:	call   0x14002ffd0
   14005cb32:	mov    QWORD PTR [rbx],rax
   14005cb35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cb39:	lea    rbx,[rip+0x18b88]        # 0x1400756c8
   14005cb40:	jne    0x14005cb95
   14005cb42:	lea    rdx,[rbp+0x28]
   14005cb46:	lea    rcx,[rsi+0x30]
   14005cb4a:	mov    DWORD PTR [rbp+0x28],0x4c4
   14005cb51:	call   0x14002ffd0
   14005cb56:	lea    rcx,[rsi+0x10]
   14005cb5a:	lea    rdx,[rbp+0x28]
   14005cb5e:	mov    DWORD PTR [rax],0x29
   14005cb64:	mov    DWORD PTR [rax+0x4],0x4c4
   14005cb6b:	mov    DWORD PTR [rbp+0x30],0x4c4
   14005cb72:	mov    QWORD PTR [rax+0x8],rbx
   14005cb76:	mov    DWORD PTR [rbp+0x28],0x29
   14005cb7d:	call   0x14002ff30
   14005cb82:	lea    rdx,[rbp+0x30]
   14005cb86:	lea    rcx,[rsi+0x30]
   14005cb8a:	mov    rbx,rax
   14005cb8d:	call   0x14002ffd0
   14005cb92:	mov    QWORD PTR [rbx],rax
   14005cb95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cb99:	lea    rbx,[rip+0x18b40]        # 0x1400756e0
   14005cba0:	jne    0x14005cbf5
   14005cba2:	lea    rdx,[rbp+0x28]
   14005cba6:	lea    rcx,[rsi+0x30]
   14005cbaa:	mov    DWORD PTR [rbp+0x28],0x4c5
   14005cbb1:	call   0x14002ffd0
   14005cbb6:	lea    rcx,[rsi+0x10]
   14005cbba:	lea    rdx,[rbp+0x28]
   14005cbbe:	mov    DWORD PTR [rax],0x2b
   14005cbc4:	mov    DWORD PTR [rax+0x4],0x4c5
   14005cbcb:	mov    DWORD PTR [rbp+0x30],0x4c5
   14005cbd2:	mov    QWORD PTR [rax+0x8],rbx
   14005cbd6:	mov    DWORD PTR [rbp+0x28],0x2b
   14005cbdd:	call   0x14002ff30
   14005cbe2:	lea    rdx,[rbp+0x30]
   14005cbe6:	lea    rcx,[rsi+0x30]
   14005cbea:	mov    rbx,rax
   14005cbed:	call   0x14002ffd0
   14005cbf2:	mov    QWORD PTR [rbx],rax
   14005cbf5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cbf9:	lea    rbx,[rip+0x18af8]        # 0x1400756f8
   14005cc00:	jne    0x14005cc55
   14005cc02:	lea    rdx,[rbp+0x28]
   14005cc06:	lea    rcx,[rsi+0x30]
   14005cc0a:	mov    DWORD PTR [rbp+0x28],0x4c6
   14005cc11:	call   0x14002ffd0
   14005cc16:	lea    rcx,[rsi+0x10]
   14005cc1a:	lea    rdx,[rbp+0x28]
   14005cc1e:	mov    DWORD PTR [rax],0x2a
   14005cc24:	mov    DWORD PTR [rax+0x4],0x4c6
   14005cc2b:	mov    DWORD PTR [rbp+0x30],0x4c6
   14005cc32:	mov    QWORD PTR [rax+0x8],rbx
   14005cc36:	mov    DWORD PTR [rbp+0x28],0x2a
   14005cc3d:	call   0x14002ff30
   14005cc42:	lea    rdx,[rbp+0x30]
   14005cc46:	lea    rcx,[rsi+0x30]
   14005cc4a:	mov    rbx,rax
   14005cc4d:	call   0x14002ffd0
   14005cc52:	mov    QWORD PTR [rbx],rax
   14005cc55:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cc59:	lea    rbx,[rip+0x18ab0]        # 0x140075710
   14005cc60:	jne    0x14005ccb5
   14005cc62:	lea    rdx,[rbp+0x28]
   14005cc66:	lea    rcx,[rsi+0x30]
   14005cc6a:	mov    DWORD PTR [rbp+0x28],0x4c7
   14005cc71:	call   0x14002ffd0
   14005cc76:	lea    rcx,[rsi+0x10]
   14005cc7a:	lea    rdx,[rbp+0x28]
   14005cc7e:	mov    DWORD PTR [rax],0x2c
   14005cc84:	mov    DWORD PTR [rax+0x4],0x4c7
   14005cc8b:	mov    DWORD PTR [rbp+0x30],0x4c7
   14005cc92:	mov    QWORD PTR [rax+0x8],rbx
   14005cc96:	mov    DWORD PTR [rbp+0x28],0x2c
   14005cc9d:	call   0x14002ff30
   14005cca2:	lea    rdx,[rbp+0x30]
   14005cca6:	lea    rcx,[rsi+0x30]
   14005ccaa:	mov    rbx,rax
   14005ccad:	call   0x14002ffd0
   14005ccb2:	mov    QWORD PTR [rbx],rax
   14005ccb5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ccb9:	lea    rbx,[rip+0x18a60]        # 0x140075720
   14005ccc0:	jne    0x14005cd15
   14005ccc2:	lea    rdx,[rbp+0x28]
   14005ccc6:	lea    rcx,[rsi+0x30]
   14005ccca:	mov    DWORD PTR [rbp+0x28],0x4c8
   14005ccd1:	call   0x14002ffd0
   14005ccd6:	lea    rcx,[rsi+0x10]
   14005ccda:	lea    rdx,[rbp+0x28]
   14005ccde:	mov    DWORD PTR [rax],0x28
   14005cce4:	mov    DWORD PTR [rax+0x4],0x4c8
   14005cceb:	mov    DWORD PTR [rbp+0x30],0x4c8
   14005ccf2:	mov    QWORD PTR [rax+0x8],rbx
   14005ccf6:	mov    DWORD PTR [rbp+0x28],0x28
   14005ccfd:	call   0x14002ff30
   14005cd02:	lea    rdx,[rbp+0x30]
   14005cd06:	lea    rcx,[rsi+0x30]
   14005cd0a:	mov    rbx,rax
   14005cd0d:	call   0x14002ffd0
   14005cd12:	mov    QWORD PTR [rbx],rax
   14005cd15:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cd19:	lea    rbx,[rip+0x18a18]        # 0x140075738
   14005cd20:	jne    0x14005cd75
   14005cd22:	lea    rdx,[rbp+0x28]
   14005cd26:	lea    rcx,[rsi+0x30]
   14005cd2a:	mov    DWORD PTR [rbp+0x28],0x4ce
   14005cd31:	call   0x14002ffd0
   14005cd36:	lea    rcx,[rsi+0x10]
   14005cd3a:	lea    rdx,[rbp+0x28]
   14005cd3e:	mov    DWORD PTR [rax],0x2e
   14005cd44:	mov    DWORD PTR [rax+0x4],0x4ce
   14005cd4b:	mov    DWORD PTR [rbp+0x30],0x4ce
   14005cd52:	mov    QWORD PTR [rax+0x8],rbx
   14005cd56:	mov    DWORD PTR [rbp+0x28],0x2e
   14005cd5d:	call   0x14002ff30
   14005cd62:	lea    rdx,[rbp+0x30]
   14005cd66:	lea    rcx,[rsi+0x30]
   14005cd6a:	mov    rbx,rax
   14005cd6d:	call   0x14002ffd0
   14005cd72:	mov    QWORD PTR [rbx],rax
   14005cd75:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cd79:	lea    rbx,[rip+0x189d0]        # 0x140075750
   14005cd80:	jne    0x14005cdd5
   14005cd82:	lea    rdx,[rbp+0x28]
   14005cd86:	lea    rcx,[rsi+0x30]
   14005cd8a:	mov    DWORD PTR [rbp+0x28],0x4cf
   14005cd91:	call   0x14002ffd0
   14005cd96:	lea    rcx,[rsi+0x10]
   14005cd9a:	lea    rdx,[rbp+0x28]
   14005cd9e:	mov    DWORD PTR [rax],0x30
   14005cda4:	mov    DWORD PTR [rax+0x4],0x4cf
   14005cdab:	mov    DWORD PTR [rbp+0x30],0x4cf
   14005cdb2:	mov    QWORD PTR [rax+0x8],rbx
   14005cdb6:	mov    DWORD PTR [rbp+0x28],0x30
   14005cdbd:	call   0x14002ff30
   14005cdc2:	lea    rdx,[rbp+0x30]
   14005cdc6:	lea    rcx,[rsi+0x30]
   14005cdca:	mov    rbx,rax
   14005cdcd:	call   0x14002ffd0
   14005cdd2:	mov    QWORD PTR [rbx],rax
   14005cdd5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cdd9:	lea    rbx,[rip+0x18988]        # 0x140075768
   14005cde0:	jne    0x14005ce35
   14005cde2:	lea    rdx,[rbp+0x28]
   14005cde6:	lea    rcx,[rsi+0x30]
   14005cdea:	mov    DWORD PTR [rbp+0x28],0x4d0
   14005cdf1:	call   0x14002ffd0
   14005cdf6:	lea    rcx,[rsi+0x10]
   14005cdfa:	lea    rdx,[rbp+0x28]
   14005cdfe:	mov    DWORD PTR [rax],0x2f
   14005ce04:	mov    DWORD PTR [rax+0x4],0x4d0
   14005ce0b:	mov    DWORD PTR [rbp+0x30],0x4d0
   14005ce12:	mov    QWORD PTR [rax+0x8],rbx
   14005ce16:	mov    DWORD PTR [rbp+0x28],0x2f
   14005ce1d:	call   0x14002ff30
   14005ce22:	lea    rdx,[rbp+0x30]
   14005ce26:	lea    rcx,[rsi+0x30]
   14005ce2a:	mov    rbx,rax
   14005ce2d:	call   0x14002ffd0
   14005ce32:	mov    QWORD PTR [rbx],rax
   14005ce35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ce39:	lea    rbx,[rip+0x18940]        # 0x140075780
   14005ce40:	jne    0x14005ce95
   14005ce42:	lea    rdx,[rbp+0x28]
   14005ce46:	lea    rcx,[rsi+0x30]
   14005ce4a:	mov    DWORD PTR [rbp+0x28],0x4d1
   14005ce51:	call   0x14002ffd0
   14005ce56:	lea    rcx,[rsi+0x10]
   14005ce5a:	lea    rdx,[rbp+0x28]
   14005ce5e:	mov    DWORD PTR [rax],0x31
   14005ce64:	mov    DWORD PTR [rax+0x4],0x4d1
   14005ce6b:	mov    DWORD PTR [rbp+0x30],0x4d1
   14005ce72:	mov    QWORD PTR [rax+0x8],rbx
   14005ce76:	mov    DWORD PTR [rbp+0x28],0x31
   14005ce7d:	call   0x14002ff30
   14005ce82:	lea    rdx,[rbp+0x30]
   14005ce86:	lea    rcx,[rsi+0x30]
   14005ce8a:	mov    rbx,rax
   14005ce8d:	call   0x14002ffd0
   14005ce92:	mov    QWORD PTR [rbx],rax
   14005ce95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ce99:	lea    rbx,[rip+0x188f0]        # 0x140075790
   14005cea0:	jne    0x14005cef5
   14005cea2:	lea    rdx,[rbp+0x28]
   14005cea6:	lea    rcx,[rsi+0x30]
   14005ceaa:	mov    DWORD PTR [rbp+0x28],0x4d2
   14005ceb1:	call   0x14002ffd0
   14005ceb6:	lea    rcx,[rsi+0x10]
   14005ceba:	lea    rdx,[rbp+0x28]
   14005cebe:	mov    DWORD PTR [rax],0x2d
   14005cec4:	mov    DWORD PTR [rax+0x4],0x4d2
   14005cecb:	mov    DWORD PTR [rbp+0x30],0x4d2
   14005ced2:	mov    QWORD PTR [rax+0x8],rbx
   14005ced6:	mov    DWORD PTR [rbp+0x28],0x2d
   14005cedd:	call   0x14002ff30
   14005cee2:	lea    rdx,[rbp+0x30]
   14005cee6:	lea    rcx,[rsi+0x30]
   14005ceea:	mov    rbx,rax
   14005ceed:	call   0x14002ffd0
   14005cef2:	mov    QWORD PTR [rbx],rax
   14005cef5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cef9:	lea    rbx,[rip+0x188a8]        # 0x1400757a8
   14005cf00:	jne    0x14005cf55
   14005cf02:	lea    rdx,[rbp+0x28]
   14005cf06:	lea    rcx,[rsi+0x30]
   14005cf0a:	mov    DWORD PTR [rbp+0x28],0x4d8
   14005cf11:	call   0x14002ffd0
   14005cf16:	lea    rcx,[rsi+0x10]
   14005cf1a:	lea    rdx,[rbp+0x28]
   14005cf1e:	mov    DWORD PTR [rax],0x33
   14005cf24:	mov    DWORD PTR [rax+0x4],0x4d8
   14005cf2b:	mov    DWORD PTR [rbp+0x30],0x4d8
   14005cf32:	mov    QWORD PTR [rax+0x8],rbx
   14005cf36:	mov    DWORD PTR [rbp+0x28],0x33
   14005cf3d:	call   0x14002ff30
   14005cf42:	lea    rdx,[rbp+0x30]
   14005cf46:	lea    rcx,[rsi+0x30]
   14005cf4a:	mov    rbx,rax
   14005cf4d:	call   0x14002ffd0
   14005cf52:	mov    QWORD PTR [rbx],rax
   14005cf55:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cf59:	lea    rbx,[rip+0x18860]        # 0x1400757c0
   14005cf60:	jne    0x14005cfb5
   14005cf62:	lea    rdx,[rbp+0x28]
   14005cf66:	lea    rcx,[rsi+0x30]
   14005cf6a:	mov    DWORD PTR [rbp+0x28],0x4d9
   14005cf71:	call   0x14002ffd0
   14005cf76:	lea    rcx,[rsi+0x10]
   14005cf7a:	lea    rdx,[rbp+0x28]
   14005cf7e:	mov    DWORD PTR [rax],0x35
   14005cf84:	mov    DWORD PTR [rax+0x4],0x4d9
   14005cf8b:	mov    DWORD PTR [rbp+0x30],0x4d9
   14005cf92:	mov    QWORD PTR [rax+0x8],rbx
   14005cf96:	mov    DWORD PTR [rbp+0x28],0x35
   14005cf9d:	call   0x14002ff30
   14005cfa2:	lea    rdx,[rbp+0x30]
   14005cfa6:	lea    rcx,[rsi+0x30]
   14005cfaa:	mov    rbx,rax
   14005cfad:	call   0x14002ffd0
   14005cfb2:	mov    QWORD PTR [rbx],rax
   14005cfb5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005cfb9:	lea    rbx,[rip+0x18818]        # 0x1400757d8
   14005cfc0:	jne    0x14005d015
   14005cfc2:	lea    rdx,[rbp+0x28]
   14005cfc6:	lea    rcx,[rsi+0x30]
   14005cfca:	mov    DWORD PTR [rbp+0x28],0x4da
   14005cfd1:	call   0x14002ffd0
   14005cfd6:	lea    rcx,[rsi+0x10]
   14005cfda:	lea    rdx,[rbp+0x28]
   14005cfde:	mov    DWORD PTR [rax],0x34
   14005cfe4:	mov    DWORD PTR [rax+0x4],0x4da
   14005cfeb:	mov    DWORD PTR [rbp+0x30],0x4da
   14005cff2:	mov    QWORD PTR [rax+0x8],rbx
   14005cff6:	mov    DWORD PTR [rbp+0x28],0x34
   14005cffd:	call   0x14002ff30
   14005d002:	lea    rdx,[rbp+0x30]
   14005d006:	lea    rcx,[rsi+0x30]
   14005d00a:	mov    rbx,rax
   14005d00d:	call   0x14002ffd0
   14005d012:	mov    QWORD PTR [rbx],rax
   14005d015:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d019:	lea    rbx,[rip+0x187d0]        # 0x1400757f0
   14005d020:	jne    0x14005d075
   14005d022:	lea    rdx,[rbp+0x28]
   14005d026:	lea    rcx,[rsi+0x30]
   14005d02a:	mov    DWORD PTR [rbp+0x28],0x4db
   14005d031:	call   0x14002ffd0
   14005d036:	lea    rcx,[rsi+0x10]
   14005d03a:	lea    rdx,[rbp+0x28]
   14005d03e:	mov    DWORD PTR [rax],0x36
   14005d044:	mov    DWORD PTR [rax+0x4],0x4db
   14005d04b:	mov    DWORD PTR [rbp+0x30],0x4db
   14005d052:	mov    QWORD PTR [rax+0x8],rbx
   14005d056:	mov    DWORD PTR [rbp+0x28],0x36
   14005d05d:	call   0x14002ff30
   14005d062:	lea    rdx,[rbp+0x30]
   14005d066:	lea    rcx,[rsi+0x30]
   14005d06a:	mov    rbx,rax
   14005d06d:	call   0x14002ffd0
   14005d072:	mov    QWORD PTR [rbx],rax
   14005d075:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d079:	lea    rbx,[rip+0x18780]        # 0x140075800
   14005d080:	jne    0x14005d0d5
   14005d082:	lea    rdx,[rbp+0x28]
   14005d086:	lea    rcx,[rsi+0x30]
   14005d08a:	mov    DWORD PTR [rbp+0x28],0x4dc
   14005d091:	call   0x14002ffd0
   14005d096:	lea    rcx,[rsi+0x10]
   14005d09a:	lea    rdx,[rbp+0x28]
   14005d09e:	mov    DWORD PTR [rax],0x32
   14005d0a4:	mov    DWORD PTR [rax+0x4],0x4dc
   14005d0ab:	mov    DWORD PTR [rbp+0x30],0x4dc
   14005d0b2:	mov    QWORD PTR [rax+0x8],rbx
   14005d0b6:	mov    DWORD PTR [rbp+0x28],0x32
   14005d0bd:	call   0x14002ff30
   14005d0c2:	lea    rdx,[rbp+0x30]
   14005d0c6:	lea    rcx,[rsi+0x30]
   14005d0ca:	mov    rbx,rax
   14005d0cd:	call   0x14002ffd0
   14005d0d2:	mov    QWORD PTR [rbx],rax
   14005d0d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d0d9:	lea    rbx,[rip+0x18738]        # 0x140075818
   14005d0e0:	jne    0x14005d135
   14005d0e2:	lea    rdx,[rbp+0x28]
   14005d0e6:	lea    rcx,[rsi+0x30]
   14005d0ea:	mov    DWORD PTR [rbp+0x28],0x4e2
   14005d0f1:	call   0x14002ffd0
   14005d0f6:	lea    rcx,[rsi+0x10]
   14005d0fa:	lea    rdx,[rbp+0x28]
   14005d0fe:	mov    DWORD PTR [rax],0x38
   14005d104:	mov    DWORD PTR [rax+0x4],0x4e2
   14005d10b:	mov    DWORD PTR [rbp+0x30],0x4e2
   14005d112:	mov    QWORD PTR [rax+0x8],rbx
   14005d116:	mov    DWORD PTR [rbp+0x28],0x38
   14005d11d:	call   0x14002ff30
   14005d122:	lea    rdx,[rbp+0x30]
   14005d126:	lea    rcx,[rsi+0x30]
   14005d12a:	mov    rbx,rax
   14005d12d:	call   0x14002ffd0
   14005d132:	mov    QWORD PTR [rbx],rax
   14005d135:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d139:	lea    rbx,[rip+0x186f0]        # 0x140075830
   14005d140:	jne    0x14005d195
   14005d142:	lea    rdx,[rbp+0x28]
   14005d146:	lea    rcx,[rsi+0x30]
   14005d14a:	mov    DWORD PTR [rbp+0x28],0x4e3
   14005d151:	call   0x14002ffd0
   14005d156:	lea    rcx,[rsi+0x10]
   14005d15a:	lea    rdx,[rbp+0x28]
   14005d15e:	mov    DWORD PTR [rax],0x3a
   14005d164:	mov    DWORD PTR [rax+0x4],0x4e3
   14005d16b:	mov    DWORD PTR [rbp+0x30],0x4e3
   14005d172:	mov    QWORD PTR [rax+0x8],rbx
   14005d176:	mov    DWORD PTR [rbp+0x28],0x3a
   14005d17d:	call   0x14002ff30
   14005d182:	lea    rdx,[rbp+0x30]
   14005d186:	lea    rcx,[rsi+0x30]
   14005d18a:	mov    rbx,rax
   14005d18d:	call   0x14002ffd0
   14005d192:	mov    QWORD PTR [rbx],rax
   14005d195:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d199:	lea    rbx,[rip+0x186a8]        # 0x140075848
   14005d1a0:	jne    0x14005d1f5
   14005d1a2:	lea    rdx,[rbp+0x28]
   14005d1a6:	lea    rcx,[rsi+0x30]
   14005d1aa:	mov    DWORD PTR [rbp+0x28],0x4e4
   14005d1b1:	call   0x14002ffd0
   14005d1b6:	lea    rcx,[rsi+0x10]
   14005d1ba:	lea    rdx,[rbp+0x28]
   14005d1be:	mov    DWORD PTR [rax],0x39
   14005d1c4:	mov    DWORD PTR [rax+0x4],0x4e4
   14005d1cb:	mov    DWORD PTR [rbp+0x30],0x4e4
   14005d1d2:	mov    QWORD PTR [rax+0x8],rbx
   14005d1d6:	mov    DWORD PTR [rbp+0x28],0x39
   14005d1dd:	call   0x14002ff30
   14005d1e2:	lea    rdx,[rbp+0x30]
   14005d1e6:	lea    rcx,[rsi+0x30]
   14005d1ea:	mov    rbx,rax
   14005d1ed:	call   0x14002ffd0
   14005d1f2:	mov    QWORD PTR [rbx],rax
   14005d1f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d1f9:	lea    rbx,[rip+0x18660]        # 0x140075860
   14005d200:	jne    0x14005d255
   14005d202:	lea    rdx,[rbp+0x28]
   14005d206:	lea    rcx,[rsi+0x30]
   14005d20a:	mov    DWORD PTR [rbp+0x28],0x4e5
   14005d211:	call   0x14002ffd0
   14005d216:	lea    rcx,[rsi+0x10]
   14005d21a:	lea    rdx,[rbp+0x28]
   14005d21e:	mov    DWORD PTR [rax],0x3b
   14005d224:	mov    DWORD PTR [rax+0x4],0x4e5
   14005d22b:	mov    DWORD PTR [rbp+0x30],0x4e5
   14005d232:	mov    QWORD PTR [rax+0x8],rbx
   14005d236:	mov    DWORD PTR [rbp+0x28],0x3b
   14005d23d:	call   0x14002ff30
   14005d242:	lea    rdx,[rbp+0x30]
   14005d246:	lea    rcx,[rsi+0x30]
   14005d24a:	mov    rbx,rax
   14005d24d:	call   0x14002ffd0
   14005d252:	mov    QWORD PTR [rbx],rax
   14005d255:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d259:	lea    rbx,[rip+0x18618]        # 0x140075878
   14005d260:	jne    0x14005d2b5
   14005d262:	lea    rdx,[rbp+0x28]
   14005d266:	lea    rcx,[rsi+0x30]
   14005d26a:	mov    DWORD PTR [rbp+0x28],0x4e6
   14005d271:	call   0x14002ffd0
   14005d276:	lea    rcx,[rsi+0x10]
   14005d27a:	lea    rdx,[rbp+0x28]
   14005d27e:	mov    DWORD PTR [rax],0x37
   14005d284:	mov    DWORD PTR [rax+0x4],0x4e6
   14005d28b:	mov    DWORD PTR [rbp+0x30],0x4e6
   14005d292:	mov    QWORD PTR [rax+0x8],rbx
   14005d296:	mov    DWORD PTR [rbp+0x28],0x37
   14005d29d:	call   0x14002ff30
   14005d2a2:	lea    rdx,[rbp+0x30]
   14005d2a6:	lea    rcx,[rsi+0x30]
   14005d2aa:	mov    rbx,rax
   14005d2ad:	call   0x14002ffd0
   14005d2b2:	mov    QWORD PTR [rbx],rax
   14005d2b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d2b9:	lea    rbx,[rip+0x185d0]        # 0x140075890
   14005d2c0:	jne    0x14005d315
   14005d2c2:	lea    rdx,[rbp+0x28]
   14005d2c6:	lea    rcx,[rsi+0x30]
   14005d2ca:	mov    DWORD PTR [rbp+0x28],0x3ea
   14005d2d1:	call   0x14002ffd0
   14005d2d6:	lea    rcx,[rsi+0x10]
   14005d2da:	lea    rdx,[rbp+0x28]
   14005d2de:	mov    DWORD PTR [rax],0x3e
   14005d2e4:	mov    DWORD PTR [rax+0x4],0x3ea
   14005d2eb:	mov    DWORD PTR [rbp+0x30],0x3ea
   14005d2f2:	mov    QWORD PTR [rax+0x8],rbx
   14005d2f6:	mov    DWORD PTR [rbp+0x28],0x3e
   14005d2fd:	call   0x14002ff30
   14005d302:	lea    rdx,[rbp+0x30]
   14005d306:	lea    rcx,[rsi+0x30]
   14005d30a:	mov    rbx,rax
   14005d30d:	call   0x14002ffd0
   14005d312:	mov    QWORD PTR [rbx],rax
   14005d315:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d319:	lea    rbx,[rip+0x18580]        # 0x1400758a0
   14005d320:	jne    0x14005d375
   14005d322:	lea    rdx,[rbp+0x28]
   14005d326:	lea    rcx,[rsi+0x30]
   14005d32a:	mov    DWORD PTR [rbp+0x28],0x3fd
   14005d331:	call   0x14002ffd0
   14005d336:	lea    rcx,[rsi+0x10]
   14005d33a:	lea    rdx,[rbp+0x28]
   14005d33e:	mov    DWORD PTR [rax],0x3f
   14005d344:	mov    DWORD PTR [rax+0x4],0x3fd
   14005d34b:	mov    DWORD PTR [rbp+0x30],0x3fd
   14005d352:	mov    QWORD PTR [rax+0x8],rbx
   14005d356:	mov    DWORD PTR [rbp+0x28],0x3f
   14005d35d:	call   0x14002ff30
   14005d362:	lea    rdx,[rbp+0x30]
   14005d366:	lea    rcx,[rsi+0x30]
   14005d36a:	mov    rbx,rax
   14005d36d:	call   0x14002ffd0
   14005d372:	mov    QWORD PTR [rbx],rax
   14005d375:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d379:	lea    rbx,[rip+0x18538]        # 0x1400758b8
   14005d380:	jne    0x14005d3d5
   14005d382:	lea    rdx,[rbp+0x28]
   14005d386:	lea    rcx,[rsi+0x30]
   14005d38a:	mov    DWORD PTR [rbp+0x28],0x3fe
   14005d391:	call   0x14002ffd0
   14005d396:	lea    rcx,[rsi+0x10]
   14005d39a:	lea    rdx,[rbp+0x28]
   14005d39e:	mov    DWORD PTR [rax],0x40
   14005d3a4:	mov    DWORD PTR [rax+0x4],0x3fe
   14005d3ab:	mov    DWORD PTR [rbp+0x30],0x3fe
   14005d3b2:	mov    QWORD PTR [rax+0x8],rbx
   14005d3b6:	mov    DWORD PTR [rbp+0x28],0x40
   14005d3bd:	call   0x14002ff30
   14005d3c2:	lea    rdx,[rbp+0x30]
   14005d3c6:	lea    rcx,[rsi+0x30]
   14005d3ca:	mov    rbx,rax
   14005d3cd:	call   0x14002ffd0
   14005d3d2:	mov    QWORD PTR [rbx],rax
   14005d3d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d3d9:	lea    rbx,[rip+0x184f8]        # 0x1400758d8
   14005d3e0:	jne    0x14005d435
   14005d3e2:	lea    rdx,[rbp+0x28]
   14005d3e6:	lea    rcx,[rsi+0x30]
   14005d3ea:	mov    DWORD PTR [rbp+0x28],0x3ff
   14005d3f1:	call   0x14002ffd0
   14005d3f6:	lea    rcx,[rsi+0x10]
   14005d3fa:	lea    rdx,[rbp+0x28]
   14005d3fe:	mov    DWORD PTR [rax],0x41
   14005d404:	mov    DWORD PTR [rax+0x4],0x3ff
   14005d40b:	mov    DWORD PTR [rbp+0x30],0x3ff
   14005d412:	mov    QWORD PTR [rax+0x8],rbx
   14005d416:	mov    DWORD PTR [rbp+0x28],0x41
   14005d41d:	call   0x14002ff30
   14005d422:	lea    rdx,[rbp+0x30]
   14005d426:	lea    rcx,[rsi+0x30]
   14005d42a:	mov    rbx,rax
   14005d42d:	call   0x14002ffd0
   14005d432:	mov    QWORD PTR [rbx],rax
   14005d435:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d439:	lea    rbx,[rip+0x184b0]        # 0x1400758f0
   14005d440:	jne    0x14005d495
   14005d442:	lea    rdx,[rbp+0x28]
   14005d446:	lea    rcx,[rsi+0x30]
   14005d44a:	mov    DWORD PTR [rbp+0x28],0x400
   14005d451:	call   0x14002ffd0
   14005d456:	lea    rcx,[rsi+0x10]
   14005d45a:	lea    rdx,[rbp+0x28]
   14005d45e:	mov    DWORD PTR [rax],0x42
   14005d464:	mov    DWORD PTR [rax+0x4],0x400
   14005d46b:	mov    DWORD PTR [rbp+0x30],0x400
   14005d472:	mov    QWORD PTR [rax+0x8],rbx
   14005d476:	mov    DWORD PTR [rbp+0x28],0x42
   14005d47d:	call   0x14002ff30
   14005d482:	lea    rdx,[rbp+0x30]
   14005d486:	lea    rcx,[rsi+0x30]
   14005d48a:	mov    rbx,rax
   14005d48d:	call   0x14002ffd0
   14005d492:	mov    QWORD PTR [rbx],rax
   14005d495:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d499:	lea    rbx,[rip+0x18468]        # 0x140075908
   14005d4a0:	jne    0x14005d4f5
   14005d4a2:	lea    rdx,[rbp+0x28]
   14005d4a6:	lea    rcx,[rsi+0x30]
   14005d4aa:	mov    DWORD PTR [rbp+0x28],0x401
   14005d4b1:	call   0x14002ffd0
   14005d4b6:	lea    rcx,[rsi+0x10]
   14005d4ba:	lea    rdx,[rbp+0x28]
   14005d4be:	mov    DWORD PTR [rax],0x43
   14005d4c4:	mov    DWORD PTR [rax+0x4],0x401
   14005d4cb:	mov    DWORD PTR [rbp+0x30],0x401
   14005d4d2:	mov    QWORD PTR [rax+0x8],rbx
   14005d4d6:	mov    DWORD PTR [rbp+0x28],0x43
   14005d4dd:	call   0x14002ff30
   14005d4e2:	lea    rdx,[rbp+0x30]
   14005d4e6:	lea    rcx,[rsi+0x30]
   14005d4ea:	mov    rbx,rax
   14005d4ed:	call   0x14002ffd0
   14005d4f2:	mov    QWORD PTR [rbx],rax
   14005d4f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d4f9:	lea    rbx,[rip+0x18420]        # 0x140075920
   14005d500:	jne    0x14005d555
   14005d502:	lea    rdx,[rbp+0x28]
   14005d506:	lea    rcx,[rsi+0x30]
   14005d50a:	mov    DWORD PTR [rbp+0x28],0x402
   14005d511:	call   0x14002ffd0
   14005d516:	lea    rcx,[rsi+0x10]
   14005d51a:	lea    rdx,[rbp+0x28]
   14005d51e:	mov    DWORD PTR [rax],0x44
   14005d524:	mov    DWORD PTR [rax+0x4],0x402
   14005d52b:	mov    DWORD PTR [rbp+0x30],0x402
   14005d532:	mov    QWORD PTR [rax+0x8],rbx
   14005d536:	mov    DWORD PTR [rbp+0x28],0x44
   14005d53d:	call   0x14002ff30
   14005d542:	lea    rdx,[rbp+0x30]
   14005d546:	lea    rcx,[rsi+0x30]
   14005d54a:	mov    rbx,rax
   14005d54d:	call   0x14002ffd0
   14005d552:	mov    QWORD PTR [rbx],rax
   14005d555:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d559:	lea    rbx,[rip+0x183d0]        # 0x140075930
   14005d560:	jne    0x14005d5b5
   14005d562:	lea    rdx,[rbp+0x28]
   14005d566:	lea    rcx,[rsi+0x30]
   14005d56a:	mov    DWORD PTR [rbp+0x28],0x403
   14005d571:	call   0x14002ffd0
   14005d576:	lea    rcx,[rsi+0x10]
   14005d57a:	lea    rdx,[rbp+0x28]
   14005d57e:	mov    DWORD PTR [rax],0x45
   14005d584:	mov    DWORD PTR [rax+0x4],0x403
   14005d58b:	mov    DWORD PTR [rbp+0x30],0x403
   14005d592:	mov    QWORD PTR [rax+0x8],rbx
   14005d596:	mov    DWORD PTR [rbp+0x28],0x45
   14005d59d:	call   0x14002ff30
   14005d5a2:	lea    rdx,[rbp+0x30]
   14005d5a6:	lea    rcx,[rsi+0x30]
   14005d5aa:	mov    rbx,rax
   14005d5ad:	call   0x14002ffd0
   14005d5b2:	mov    QWORD PTR [rbx],rax
   14005d5b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d5b9:	lea    rbx,[rip+0x18380]        # 0x140075940
   14005d5c0:	jne    0x14005d615
   14005d5c2:	lea    rdx,[rbp+0x28]
   14005d5c6:	lea    rcx,[rsi+0x30]
   14005d5ca:	mov    DWORD PTR [rbp+0x28],0x404
   14005d5d1:	call   0x14002ffd0
   14005d5d6:	lea    rcx,[rsi+0x10]
   14005d5da:	lea    rdx,[rbp+0x28]
   14005d5de:	mov    DWORD PTR [rax],0x4c
   14005d5e4:	mov    DWORD PTR [rax+0x4],0x404
   14005d5eb:	mov    DWORD PTR [rbp+0x30],0x404
   14005d5f2:	mov    QWORD PTR [rax+0x8],rbx
   14005d5f6:	mov    DWORD PTR [rbp+0x28],0x4c
   14005d5fd:	call   0x14002ff30
   14005d602:	lea    rdx,[rbp+0x30]
   14005d606:	lea    rcx,[rsi+0x30]
   14005d60a:	mov    rbx,rax
   14005d60d:	call   0x14002ffd0
   14005d612:	mov    QWORD PTR [rbx],rax
   14005d615:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d619:	lea    rbx,[rip+0x18338]        # 0x140075958
   14005d620:	jne    0x14005d675
   14005d622:	lea    rdx,[rbp+0x28]
   14005d626:	lea    rcx,[rsi+0x30]
   14005d62a:	mov    DWORD PTR [rbp+0x28],0x405
   14005d631:	call   0x14002ffd0
   14005d636:	lea    rcx,[rsi+0x10]
   14005d63a:	lea    rdx,[rbp+0x28]
   14005d63e:	mov    DWORD PTR [rax],0x4d
   14005d644:	mov    DWORD PTR [rax+0x4],0x405
   14005d64b:	mov    DWORD PTR [rbp+0x30],0x405
   14005d652:	mov    QWORD PTR [rax+0x8],rbx
   14005d656:	mov    DWORD PTR [rbp+0x28],0x4d
   14005d65d:	call   0x14002ff30
   14005d662:	lea    rdx,[rbp+0x30]
   14005d666:	lea    rcx,[rsi+0x30]
   14005d66a:	mov    rbx,rax
   14005d66d:	call   0x14002ffd0
   14005d672:	mov    QWORD PTR [rbx],rax
   14005d675:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d679:	lea    rbx,[rip+0x182f0]        # 0x140075970
   14005d680:	jne    0x14005d6d5
   14005d682:	lea    rdx,[rbp+0x28]
   14005d686:	lea    rcx,[rsi+0x30]
   14005d68a:	mov    DWORD PTR [rbp+0x28],0x406
   14005d691:	call   0x14002ffd0
   14005d696:	lea    rcx,[rsi+0x10]
   14005d69a:	lea    rdx,[rbp+0x28]
   14005d69e:	mov    DWORD PTR [rax],0x4e
   14005d6a4:	mov    DWORD PTR [rax+0x4],0x406
   14005d6ab:	mov    DWORD PTR [rbp+0x30],0x406
   14005d6b2:	mov    QWORD PTR [rax+0x8],rbx
   14005d6b6:	mov    DWORD PTR [rbp+0x28],0x4e
   14005d6bd:	call   0x14002ff30
   14005d6c2:	lea    rdx,[rbp+0x30]
   14005d6c6:	lea    rcx,[rsi+0x30]
   14005d6ca:	mov    rbx,rax
   14005d6cd:	call   0x14002ffd0
   14005d6d2:	mov    QWORD PTR [rbx],rax
   14005d6d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d6d9:	lea    rbx,[rip+0x182b0]        # 0x140075990
   14005d6e0:	jne    0x14005d735
   14005d6e2:	lea    rdx,[rbp+0x28]
   14005d6e6:	lea    rcx,[rsi+0x30]
   14005d6ea:	mov    DWORD PTR [rbp+0x28],0x40b
   14005d6f1:	call   0x14002ffd0
   14005d6f6:	lea    rcx,[rsi+0x10]
   14005d6fa:	lea    rdx,[rbp+0x28]
   14005d6fe:	mov    DWORD PTR [rax],0x4f
   14005d704:	mov    DWORD PTR [rax+0x4],0x40b
   14005d70b:	mov    DWORD PTR [rbp+0x30],0x40b
   14005d712:	mov    QWORD PTR [rax+0x8],rbx
   14005d716:	mov    DWORD PTR [rbp+0x28],0x4f
   14005d71d:	call   0x14002ff30
   14005d722:	lea    rdx,[rbp+0x30]
   14005d726:	lea    rcx,[rsi+0x30]
   14005d72a:	mov    rbx,rax
   14005d72d:	call   0x14002ffd0
   14005d732:	mov    QWORD PTR [rbx],rax
   14005d735:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d739:	lea    rbx,[rip+0x18270]        # 0x1400759b0
   14005d740:	jne    0x14005d795
   14005d742:	lea    rdx,[rbp+0x28]
   14005d746:	lea    rcx,[rsi+0x30]
   14005d74a:	mov    DWORD PTR [rbp+0x28],0x407
   14005d751:	call   0x14002ffd0
   14005d756:	lea    rcx,[rsi+0x10]
   14005d75a:	lea    rdx,[rbp+0x28]
   14005d75e:	mov    DWORD PTR [rax],0x50
   14005d764:	mov    DWORD PTR [rax+0x4],0x407
   14005d76b:	mov    DWORD PTR [rbp+0x30],0x407
   14005d772:	mov    QWORD PTR [rax+0x8],rbx
   14005d776:	mov    DWORD PTR [rbp+0x28],0x50
   14005d77d:	call   0x14002ff30
   14005d782:	lea    rdx,[rbp+0x30]
   14005d786:	lea    rcx,[rsi+0x30]
   14005d78a:	mov    rbx,rax
   14005d78d:	call   0x14002ffd0
   14005d792:	mov    QWORD PTR [rbx],rax
   14005d795:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d799:	lea    rbx,[rip+0x18230]        # 0x1400759d0
   14005d7a0:	jne    0x14005d7f5
   14005d7a2:	lea    rdx,[rbp+0x28]
   14005d7a6:	lea    rcx,[rsi+0x30]
   14005d7aa:	mov    DWORD PTR [rbp+0x28],0x408
   14005d7b1:	call   0x14002ffd0
   14005d7b6:	lea    rcx,[rsi+0x10]
   14005d7ba:	lea    rdx,[rbp+0x28]
   14005d7be:	mov    DWORD PTR [rax],0x64
   14005d7c4:	mov    DWORD PTR [rax+0x4],0x408
   14005d7cb:	mov    DWORD PTR [rbp+0x30],0x408
   14005d7d2:	mov    QWORD PTR [rax+0x8],rbx
   14005d7d6:	mov    DWORD PTR [rbp+0x28],0x64
   14005d7dd:	call   0x14002ff30
   14005d7e2:	lea    rdx,[rbp+0x30]
   14005d7e6:	lea    rcx,[rsi+0x30]
   14005d7ea:	mov    rbx,rax
   14005d7ed:	call   0x14002ffd0
   14005d7f2:	mov    QWORD PTR [rbx],rax
   14005d7f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d7f9:	lea    rbx,[rip+0x181f0]        # 0x1400759f0
   14005d800:	jne    0x14005d855
   14005d802:	lea    rdx,[rbp+0x28]
   14005d806:	lea    rcx,[rsi+0x30]
   14005d80a:	mov    DWORD PTR [rbp+0x28],0x409
   14005d811:	call   0x14002ffd0
   14005d816:	lea    rcx,[rsi+0x10]
   14005d81a:	lea    rdx,[rbp+0x28]
   14005d81e:	mov    DWORD PTR [rax],0x65
   14005d824:	mov    DWORD PTR [rax+0x4],0x409
   14005d82b:	mov    DWORD PTR [rbp+0x30],0x409
   14005d832:	mov    QWORD PTR [rax+0x8],rbx
   14005d836:	mov    DWORD PTR [rbp+0x28],0x65
   14005d83d:	call   0x14002ff30
   14005d842:	lea    rdx,[rbp+0x30]
   14005d846:	lea    rcx,[rsi+0x30]
   14005d84a:	mov    rbx,rax
   14005d84d:	call   0x14002ffd0
   14005d852:	mov    QWORD PTR [rbx],rax
   14005d855:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d859:	lea    rbx,[rip+0x181b0]        # 0x140075a10
   14005d860:	jne    0x14005d8b5
   14005d862:	lea    rdx,[rbp+0x28]
   14005d866:	lea    rcx,[rsi+0x30]
   14005d86a:	mov    DWORD PTR [rbp+0x28],0x40a
   14005d871:	call   0x14002ffd0
   14005d876:	lea    rcx,[rsi+0x10]
   14005d87a:	lea    rdx,[rbp+0x28]
   14005d87e:	mov    DWORD PTR [rax],0x66
   14005d884:	mov    DWORD PTR [rax+0x4],0x40a
   14005d88b:	mov    DWORD PTR [rbp+0x30],0x40a
   14005d892:	mov    QWORD PTR [rax+0x8],rbx
   14005d896:	mov    DWORD PTR [rbp+0x28],0x66
   14005d89d:	call   0x14002ff30
   14005d8a2:	lea    rdx,[rbp+0x30]
   14005d8a6:	lea    rcx,[rsi+0x30]
   14005d8aa:	mov    rbx,rax
   14005d8ad:	call   0x14002ffd0
   14005d8b2:	mov    QWORD PTR [rbx],rax
   14005d8b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d8b9:	lea    rbx,[rip+0x18170]        # 0x140075a30
   14005d8c0:	jne    0x14005d915
   14005d8c2:	lea    rdx,[rbp+0x28]
   14005d8c6:	lea    rcx,[rsi+0x30]
   14005d8ca:	mov    DWORD PTR [rbp+0x28],0x439
   14005d8d1:	call   0x14002ffd0
   14005d8d6:	lea    rcx,[rsi+0x10]
   14005d8da:	lea    rdx,[rbp+0x28]
   14005d8de:	mov    DWORD PTR [rax],0x57
   14005d8e4:	mov    DWORD PTR [rax+0x4],0x439
   14005d8eb:	mov    DWORD PTR [rbp+0x30],0x439
   14005d8f2:	mov    QWORD PTR [rax+0x8],rbx
   14005d8f6:	mov    DWORD PTR [rbp+0x28],0x57
   14005d8fd:	call   0x14002ff30
   14005d902:	lea    rdx,[rbp+0x30]
   14005d906:	lea    rcx,[rsi+0x30]
   14005d90a:	mov    rbx,rax
   14005d90d:	call   0x14002ffd0
   14005d912:	mov    QWORD PTR [rbx],rax
   14005d915:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d919:	lea    rbx,[rip+0x18128]        # 0x140075a48
   14005d920:	jne    0x14005d975
   14005d922:	lea    rdx,[rbp+0x28]
   14005d926:	lea    rcx,[rsi+0x30]
   14005d92a:	mov    DWORD PTR [rbp+0x28],0x43a
   14005d931:	call   0x14002ffd0
   14005d936:	lea    rcx,[rsi+0x10]
   14005d93a:	lea    rdx,[rbp+0x28]
   14005d93e:	mov    DWORD PTR [rax],0x58
   14005d944:	mov    DWORD PTR [rax+0x4],0x43a
   14005d94b:	mov    DWORD PTR [rbp+0x30],0x43a
   14005d952:	mov    QWORD PTR [rax+0x8],rbx
   14005d956:	mov    DWORD PTR [rbp+0x28],0x58
   14005d95d:	call   0x14002ff30
   14005d962:	lea    rdx,[rbp+0x30]
   14005d966:	lea    rcx,[rsi+0x30]
   14005d96a:	mov    rbx,rax
   14005d96d:	call   0x14002ffd0
   14005d972:	mov    QWORD PTR [rbx],rax
   14005d975:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d979:	lea    rbx,[rip+0x180e0]        # 0x140075a60
   14005d980:	jne    0x14005d9d5
   14005d982:	lea    rdx,[rbp+0x28]
   14005d986:	lea    rcx,[rsi+0x30]
   14005d98a:	mov    DWORD PTR [rbp+0x28],0x43b
   14005d991:	call   0x14002ffd0
   14005d996:	lea    rcx,[rsi+0x10]
   14005d99a:	lea    rdx,[rbp+0x28]
   14005d99e:	mov    DWORD PTR [rax],0x59
   14005d9a4:	mov    DWORD PTR [rax+0x4],0x43b
   14005d9ab:	mov    DWORD PTR [rbp+0x30],0x43b
   14005d9b2:	mov    QWORD PTR [rax+0x8],rbx
   14005d9b6:	mov    DWORD PTR [rbp+0x28],0x59
   14005d9bd:	call   0x14002ff30
   14005d9c2:	lea    rdx,[rbp+0x30]
   14005d9c6:	lea    rcx,[rsi+0x30]
   14005d9ca:	mov    rbx,rax
   14005d9cd:	call   0x14002ffd0
   14005d9d2:	mov    QWORD PTR [rbx],rax
   14005d9d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005d9d9:	lea    rbx,[rip+0x18098]        # 0x140075a78
   14005d9e0:	jne    0x14005da35
   14005d9e2:	lea    rdx,[rbp+0x28]
   14005d9e6:	lea    rcx,[rsi+0x30]
   14005d9ea:	mov    DWORD PTR [rbp+0x28],0x43c
   14005d9f1:	call   0x14002ffd0
   14005d9f6:	lea    rcx,[rsi+0x10]
   14005d9fa:	lea    rdx,[rbp+0x28]
   14005d9fe:	mov    DWORD PTR [rax],0x5a
   14005da04:	mov    DWORD PTR [rax+0x4],0x43c
   14005da0b:	mov    DWORD PTR [rbp+0x30],0x43c
   14005da12:	mov    QWORD PTR [rax+0x8],rbx
   14005da16:	mov    DWORD PTR [rbp+0x28],0x5a
   14005da1d:	call   0x14002ff30
   14005da22:	lea    rdx,[rbp+0x30]
   14005da26:	lea    rcx,[rsi+0x30]
   14005da2a:	mov    rbx,rax
   14005da2d:	call   0x14002ffd0
   14005da32:	mov    QWORD PTR [rbx],rax
   14005da35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005da39:	lea    rbx,[rip+0x18050]        # 0x140075a90
   14005da40:	jne    0x14005da95
   14005da42:	lea    rdx,[rbp+0x28]
   14005da46:	lea    rcx,[rsi+0x30]
   14005da4a:	mov    DWORD PTR [rbp+0x28],0x43d
   14005da51:	call   0x14002ffd0
   14005da56:	lea    rcx,[rsi+0x10]
   14005da5a:	lea    rdx,[rbp+0x28]
   14005da5e:	mov    DWORD PTR [rax],0x5b
   14005da64:	mov    DWORD PTR [rax+0x4],0x43d
   14005da6b:	mov    DWORD PTR [rbp+0x30],0x43d
   14005da72:	mov    QWORD PTR [rax+0x8],rbx
   14005da76:	mov    DWORD PTR [rbp+0x28],0x5b
   14005da7d:	call   0x14002ff30
   14005da82:	lea    rdx,[rbp+0x30]
   14005da86:	lea    rcx,[rsi+0x30]
   14005da8a:	mov    rbx,rax
   14005da8d:	call   0x14002ffd0
   14005da92:	mov    QWORD PTR [rbx],rax
   14005da95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005da99:	lea    rbx,[rip+0x18008]        # 0x140075aa8
   14005daa0:	jne    0x14005daf5
   14005daa2:	lea    rdx,[rbp+0x28]
   14005daa6:	lea    rcx,[rsi+0x30]
   14005daaa:	mov    DWORD PTR [rbp+0x28],0x43e
   14005dab1:	call   0x14002ffd0
   14005dab6:	lea    rcx,[rsi+0x10]
   14005daba:	lea    rdx,[rbp+0x28]
   14005dabe:	mov    DWORD PTR [rax],0x5c
   14005dac4:	mov    DWORD PTR [rax+0x4],0x43e
   14005dacb:	mov    DWORD PTR [rbp+0x30],0x43e
   14005dad2:	mov    QWORD PTR [rax+0x8],rbx
   14005dad6:	mov    DWORD PTR [rbp+0x28],0x5c
   14005dadd:	call   0x14002ff30
   14005dae2:	lea    rdx,[rbp+0x30]
   14005dae6:	lea    rcx,[rsi+0x30]
   14005daea:	mov    rbx,rax
   14005daed:	call   0x14002ffd0
   14005daf2:	mov    QWORD PTR [rbx],rax
   14005daf5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005daf9:	lea    rbx,[rip+0x17fc0]        # 0x140075ac0
   14005db00:	jne    0x14005dc81
   14005db06:	lea    rdx,[rbp+0x28]
   14005db0a:	lea    rcx,[rsi+0x30]
   14005db0e:	mov    DWORD PTR [rbp+0x28],0x43f
   14005db15:	call   0x14002ffd0
   14005db1a:	lea    rcx,[rsi+0x10]
   14005db1e:	lea    rdx,[rbp+0x28]
   14005db22:	mov    DWORD PTR [rax],0x5d
   14005db28:	mov    DWORD PTR [rax+0x4],0x43f
   14005db2f:	mov    DWORD PTR [rbp+0x30],0x43f
   14005db36:	mov    QWORD PTR [rax+0x8],rbx
   14005db3a:	mov    DWORD PTR [rbp+0x28],0x5d
   14005db41:	call   0x14002ff30
   14005db46:	lea    rdx,[rbp+0x30]
   14005db4a:	lea    rcx,[rsi+0x30]
   14005db4e:	mov    rbx,rax
   14005db51:	call   0x14002ffd0
   14005db56:	mov    QWORD PTR [rbx],rax
   14005db59:	cmp    DWORD PTR [rsi+0x8],0x1
   14005db5d:	jne    0x14005dc81
   14005db63:	lea    rdx,[rbp+0x28]
   14005db67:	lea    rcx,[rsi+0x30]
   14005db6b:	mov    DWORD PTR [rbp+0x28],0x44a
   14005db72:	call   0x14002ffd0
   14005db77:	lea    rcx,[rip+0x17f62]        # 0x140075ae0
   14005db7e:	lea    rdx,[rbp+0x28]
   14005db82:	mov    DWORD PTR [rax],0x145
   14005db88:	mov    DWORD PTR [rax+0x4],0x44a
   14005db8f:	mov    QWORD PTR [rax+0x8],rcx
   14005db93:	lea    rcx,[rsi+0x10]
   14005db97:	mov    DWORD PTR [rbp+0x30],0x44a
   14005db9e:	mov    DWORD PTR [rbp+0x28],0x145
   14005dba5:	call   0x14002ff30
   14005dbaa:	lea    rdx,[rbp+0x30]
   14005dbae:	lea    rcx,[rsi+0x30]
   14005dbb2:	mov    rbx,rax
   14005dbb5:	call   0x14002ffd0
   14005dbba:	mov    QWORD PTR [rbx],rax
   14005dbbd:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dbc1:	jne    0x14005dc81
   14005dbc7:	lea    rdx,[rbp+0x28]
   14005dbcb:	lea    rcx,[rsi+0x30]
   14005dbcf:	mov    DWORD PTR [rbp+0x28],0x44c
   14005dbd6:	call   0x14002ffd0
   14005dbdb:	lea    rcx,[rip+0x17f1e]        # 0x140075b00
   14005dbe2:	lea    rdx,[rbp+0x28]
   14005dbe6:	mov    DWORD PTR [rax],0x146
   14005dbec:	mov    DWORD PTR [rax+0x4],0x44c
   14005dbf3:	mov    QWORD PTR [rax+0x8],rcx
   14005dbf7:	lea    rcx,[rsi+0x10]
   14005dbfb:	mov    DWORD PTR [rbp+0x30],0x44c
   14005dc02:	mov    DWORD PTR [rbp+0x28],0x146
   14005dc09:	call   0x14002ff30
   14005dc0e:	lea    rdx,[rbp+0x30]
   14005dc12:	lea    rcx,[rsi+0x30]
   14005dc16:	mov    rbx,rax
   14005dc19:	call   0x14002ffd0
   14005dc1e:	mov    QWORD PTR [rbx],rax
   14005dc21:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dc25:	jne    0x14005dc81
   14005dc27:	lea    rdx,[rbp+0x28]
   14005dc2b:	lea    rcx,[rsi+0x30]
   14005dc2f:	mov    DWORD PTR [rbp+0x28],0x44b
   14005dc36:	call   0x14002ffd0
   14005dc3b:	lea    rcx,[rip+0x17ede]        # 0x140075b20
   14005dc42:	lea    rdx,[rbp+0x28]
   14005dc46:	mov    DWORD PTR [rax],0x147
   14005dc4c:	mov    DWORD PTR [rax+0x4],0x44b
   14005dc53:	mov    QWORD PTR [rax+0x8],rcx
   14005dc57:	lea    rcx,[rsi+0x10]
   14005dc5b:	mov    DWORD PTR [rbp+0x30],0x44b
   14005dc62:	mov    DWORD PTR [rbp+0x28],0x147
   14005dc69:	call   0x14002ff30
   14005dc6e:	lea    rdx,[rbp+0x30]
   14005dc72:	lea    rcx,[rsi+0x30]
   14005dc76:	mov    rbx,rax
   14005dc79:	call   0x14002ffd0
   14005dc7e:	mov    QWORD PTR [rbx],rax
   14005dc81:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dc85:	lea    rbx,[rip+0x17eac]        # 0x140075b38
   14005dc8c:	jne    0x14005dce1
   14005dc8e:	lea    rdx,[rbp+0x28]
   14005dc92:	lea    rcx,[rsi+0x30]
   14005dc96:	mov    DWORD PTR [rbp+0x28],0x44e
   14005dc9d:	call   0x14002ffd0
   14005dca2:	lea    rcx,[rsi+0x10]
   14005dca6:	lea    rdx,[rbp+0x28]
   14005dcaa:	mov    DWORD PTR [rax],0xcb
   14005dcb0:	mov    DWORD PTR [rax+0x4],0x44e
   14005dcb7:	mov    DWORD PTR [rbp+0x30],0x44e
   14005dcbe:	mov    QWORD PTR [rax+0x8],rbx
   14005dcc2:	mov    DWORD PTR [rbp+0x28],0xcb
   14005dcc9:	call   0x14002ff30
   14005dcce:	lea    rdx,[rbp+0x30]
   14005dcd2:	lea    rcx,[rsi+0x30]
   14005dcd6:	mov    rbx,rax
   14005dcd9:	call   0x14002ffd0
   14005dcde:	mov    QWORD PTR [rbx],rax
   14005dce1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dce5:	lea    rbx,[rip+0x17e6c]        # 0x140075b58
   14005dcec:	jne    0x14005dd41
   14005dcee:	lea    rdx,[rbp+0x28]
   14005dcf2:	lea    rcx,[rsi+0x30]
   14005dcf6:	mov    DWORD PTR [rbp+0x28],0x44f
   14005dcfd:	call   0x14002ffd0
   14005dd02:	lea    rcx,[rsi+0x10]
   14005dd06:	lea    rdx,[rbp+0x28]
   14005dd0a:	mov    DWORD PTR [rax],0x48
   14005dd10:	mov    DWORD PTR [rax+0x4],0x44f
   14005dd17:	mov    DWORD PTR [rbp+0x30],0x44f
   14005dd1e:	mov    QWORD PTR [rax+0x8],rbx
   14005dd22:	mov    DWORD PTR [rbp+0x28],0x48
   14005dd29:	call   0x14002ff30
   14005dd2e:	lea    rdx,[rbp+0x30]
   14005dd32:	lea    rcx,[rsi+0x30]
   14005dd36:	mov    rbx,rax
   14005dd39:	call   0x14002ffd0
   14005dd3e:	mov    QWORD PTR [rbx],rax
   14005dd41:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dd45:	lea    rbx,[rip+0x17e1c]        # 0x140075b68
   14005dd4c:	jne    0x14005de69
   14005dd52:	lea    rdx,[rbp+0x28]
   14005dd56:	lea    rcx,[rsi+0x30]
   14005dd5a:	mov    DWORD PTR [rbp+0x28],0x458
   14005dd61:	call   0x14002ffd0
   14005dd66:	lea    rcx,[rsi+0x10]
   14005dd6a:	lea    rdx,[rbp+0x28]
   14005dd6e:	mov    DWORD PTR [rax],0xcc
   14005dd74:	mov    DWORD PTR [rax+0x4],0x458
   14005dd7b:	mov    DWORD PTR [rbp+0x30],0x458
   14005dd82:	mov    QWORD PTR [rax+0x8],rbx
   14005dd86:	mov    DWORD PTR [rbp+0x28],0xcc
   14005dd8d:	call   0x14002ff30
   14005dd92:	lea    rdx,[rbp+0x30]
   14005dd96:	lea    rcx,[rsi+0x30]
   14005dd9a:	mov    rbx,rax
   14005dd9d:	call   0x14002ffd0
   14005dda2:	mov    QWORD PTR [rbx],rax
   14005dda5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dda9:	jne    0x14005de69
   14005ddaf:	lea    rdx,[rbp+0x28]
   14005ddb3:	lea    rcx,[rsi+0x30]
   14005ddb7:	mov    DWORD PTR [rbp+0x28],0x45a
   14005ddbe:	call   0x14002ffd0
   14005ddc3:	lea    rcx,[rip+0x17db6]        # 0x140075b80
   14005ddca:	lea    rdx,[rbp+0x28]
   14005ddce:	mov    DWORD PTR [rax],0x11c
   14005ddd4:	mov    DWORD PTR [rax+0x4],0x45a
   14005dddb:	mov    QWORD PTR [rax+0x8],rcx
   14005dddf:	lea    rcx,[rsi+0x10]
   14005dde3:	mov    DWORD PTR [rbp+0x30],0x45a
   14005ddea:	mov    DWORD PTR [rbp+0x28],0x11c
   14005ddf1:	call   0x14002ff30
   14005ddf6:	lea    rdx,[rbp+0x30]
   14005ddfa:	lea    rcx,[rsi+0x30]
   14005ddfe:	mov    rbx,rax
   14005de01:	call   0x14002ffd0
   14005de06:	mov    QWORD PTR [rbx],rax
   14005de09:	cmp    DWORD PTR [rsi+0x8],0x1
   14005de0d:	jne    0x14005de69
   14005de0f:	lea    rdx,[rbp+0x28]
   14005de13:	lea    rcx,[rsi+0x30]
   14005de17:	mov    DWORD PTR [rbp+0x28],0x45b
   14005de1e:	call   0x14002ffd0
   14005de23:	lea    rcx,[rip+0x17d76]        # 0x140075ba0
   14005de2a:	lea    rdx,[rbp+0x28]
   14005de2e:	mov    DWORD PTR [rax],0x11d
   14005de34:	mov    DWORD PTR [rax+0x4],0x45b
   14005de3b:	mov    QWORD PTR [rax+0x8],rcx
   14005de3f:	lea    rcx,[rsi+0x10]
   14005de43:	mov    DWORD PTR [rbp+0x30],0x45b
   14005de4a:	mov    DWORD PTR [rbp+0x28],0x11d
   14005de51:	call   0x14002ff30
   14005de56:	lea    rdx,[rbp+0x30]
   14005de5a:	lea    rcx,[rsi+0x30]
   14005de5e:	mov    rbx,rax
   14005de61:	call   0x14002ffd0
   14005de66:	mov    QWORD PTR [rbx],rax
   14005de69:	cmp    DWORD PTR [rsi+0x8],0x1
   14005de6d:	lea    rbx,[rip+0x17d4c]        # 0x140075bc0
   14005de74:	jne    0x14005dec9
   14005de76:	lea    rdx,[rbp+0x28]
   14005de7a:	lea    rcx,[rsi+0x30]
   14005de7e:	mov    DWORD PTR [rbp+0x28],0x451
   14005de85:	call   0x14002ffd0
   14005de8a:	lea    rcx,[rsi+0x10]
   14005de8e:	lea    rdx,[rbp+0x28]
   14005de92:	mov    DWORD PTR [rax],0x4a
   14005de98:	mov    DWORD PTR [rax+0x4],0x451
   14005de9f:	mov    DWORD PTR [rbp+0x30],0x451
   14005dea6:	mov    QWORD PTR [rax+0x8],rbx
   14005deaa:	mov    DWORD PTR [rbp+0x28],0x4a
   14005deb1:	call   0x14002ff30
   14005deb6:	lea    rdx,[rbp+0x30]
   14005deba:	lea    rcx,[rsi+0x30]
   14005debe:	mov    rbx,rax
   14005dec1:	call   0x14002ffd0
   14005dec6:	mov    QWORD PTR [rbx],rax
   14005dec9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005decd:	lea    rbx,[rip+0x17d04]        # 0x140075bd8
   14005ded4:	jne    0x14005df29
   14005ded6:	lea    rdx,[rbp+0x28]
   14005deda:	lea    rcx,[rsi+0x30]
   14005dede:	mov    DWORD PTR [rbp+0x28],0x453
   14005dee5:	call   0x14002ffd0
   14005deea:	lea    rcx,[rsi+0x10]
   14005deee:	lea    rdx,[rbp+0x28]
   14005def2:	mov    DWORD PTR [rax],0xcd
   14005def8:	mov    DWORD PTR [rax+0x4],0x453
   14005deff:	mov    DWORD PTR [rbp+0x30],0x453
   14005df06:	mov    QWORD PTR [rax+0x8],rbx
   14005df0a:	mov    DWORD PTR [rbp+0x28],0xcd
   14005df11:	call   0x14002ff30
   14005df16:	lea    rdx,[rbp+0x30]
   14005df1a:	lea    rcx,[rsi+0x30]
   14005df1e:	mov    rbx,rax
   14005df21:	call   0x14002ffd0
   14005df26:	mov    QWORD PTR [rbx],rax
   14005df29:	cmp    DWORD PTR [rsi+0x8],0x1
   14005df2d:	lea    rbx,[rip+0x17cc4]        # 0x140075bf8
   14005df34:	jne    0x14005df89
   14005df36:	lea    rdx,[rbp+0x28]
   14005df3a:	lea    rcx,[rsi+0x30]
   14005df3e:	mov    DWORD PTR [rbp+0x28],0x452
   14005df45:	call   0x14002ffd0
   14005df4a:	lea    rcx,[rsi+0x10]
   14005df4e:	lea    rdx,[rbp+0x28]
   14005df52:	mov    DWORD PTR [rax],0x69
   14005df58:	mov    DWORD PTR [rax+0x4],0x452
   14005df5f:	mov    DWORD PTR [rbp+0x30],0x452
   14005df66:	mov    QWORD PTR [rax+0x8],rbx
   14005df6a:	mov    DWORD PTR [rbp+0x28],0x69
   14005df71:	call   0x14002ff30
   14005df76:	lea    rdx,[rbp+0x30]
   14005df7a:	lea    rcx,[rsi+0x30]
   14005df7e:	mov    rbx,rax
   14005df81:	call   0x14002ffd0
   14005df86:	mov    QWORD PTR [rbx],rax
   14005df89:	cmp    DWORD PTR [rsi+0x8],0x1
   14005df8d:	lea    rbx,[rip+0x17c74]        # 0x140075c08
   14005df94:	jne    0x14005dfe9
   14005df96:	lea    rdx,[rbp+0x28]
   14005df9a:	lea    rcx,[rsi+0x30]
   14005df9e:	mov    DWORD PTR [rbp+0x28],0x454
   14005dfa5:	call   0x14002ffd0
   14005dfaa:	lea    rcx,[rsi+0x10]
   14005dfae:	lea    rdx,[rbp+0x28]
   14005dfb2:	mov    DWORD PTR [rax],0x6c
   14005dfb8:	mov    DWORD PTR [rax+0x4],0x454
   14005dfbf:	mov    DWORD PTR [rbp+0x30],0x454
   14005dfc6:	mov    QWORD PTR [rax+0x8],rbx
   14005dfca:	mov    DWORD PTR [rbp+0x28],0x6c
   14005dfd1:	call   0x14002ff30
   14005dfd6:	lea    rdx,[rbp+0x30]
   14005dfda:	lea    rcx,[rsi+0x30]
   14005dfde:	mov    rbx,rax
   14005dfe1:	call   0x14002ffd0
   14005dfe6:	mov    QWORD PTR [rbx],rax
   14005dfe9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005dfed:	lea    rbx,[rip+0x17c2c]        # 0x140075c20
   14005dff4:	jne    0x14005e049
   14005dff6:	lea    rdx,[rbp+0x28]
   14005dffa:	lea    rcx,[rsi+0x30]
   14005dffe:	mov    DWORD PTR [rbp+0x28],0x456
   14005e005:	call   0x14002ffd0
   14005e00a:	lea    rcx,[rsi+0x10]
   14005e00e:	lea    rdx,[rbp+0x28]
   14005e012:	mov    DWORD PTR [rax],0x6b
   14005e018:	mov    DWORD PTR [rax+0x4],0x456
   14005e01f:	mov    DWORD PTR [rbp+0x30],0x456
   14005e026:	mov    QWORD PTR [rax+0x8],rbx
   14005e02a:	mov    DWORD PTR [rbp+0x28],0x6b
   14005e031:	call   0x14002ff30
   14005e036:	lea    rdx,[rbp+0x30]
   14005e03a:	lea    rcx,[rsi+0x30]
   14005e03e:	mov    rbx,rax
   14005e041:	call   0x14002ffd0
   14005e046:	mov    QWORD PTR [rbx],rax
   14005e049:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e04d:	lea    rbx,[rip+0x17be4]        # 0x140075c38
   14005e054:	jne    0x14005e171
   14005e05a:	lea    rdx,[rbp+0x28]
   14005e05e:	lea    rcx,[rsi+0x30]
   14005e062:	mov    DWORD PTR [rbp+0x28],0x44d
   14005e069:	call   0x14002ffd0
   14005e06e:	lea    rcx,[rsi+0x10]
   14005e072:	lea    rdx,[rbp+0x28]
   14005e076:	mov    DWORD PTR [rax],0x4b
   14005e07c:	mov    DWORD PTR [rax+0x4],0x44d
   14005e083:	mov    DWORD PTR [rbp+0x30],0x44d
   14005e08a:	mov    QWORD PTR [rax+0x8],rbx
   14005e08e:	mov    DWORD PTR [rbp+0x28],0x4b
   14005e095:	call   0x14002ff30
   14005e09a:	lea    rdx,[rbp+0x30]
   14005e09e:	lea    rcx,[rsi+0x30]
   14005e0a2:	mov    rbx,rax
   14005e0a5:	call   0x14002ffd0
   14005e0aa:	mov    QWORD PTR [rbx],rax
   14005e0ad:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e0b1:	jne    0x14005e171
   14005e0b7:	lea    rdx,[rbp+0x28]
   14005e0bb:	lea    rcx,[rsi+0x30]
   14005e0bf:	mov    DWORD PTR [rbp+0x28],0x459
   14005e0c6:	call   0x14002ffd0
   14005e0cb:	lea    rcx,[rip+0x17b7e]        # 0x140075c50
   14005e0d2:	lea    rdx,[rbp+0x28]
   14005e0d6:	mov    DWORD PTR [rax],0xca
   14005e0dc:	mov    DWORD PTR [rax+0x4],0x459
   14005e0e3:	mov    QWORD PTR [rax+0x8],rcx
   14005e0e7:	lea    rcx,[rsi+0x10]
   14005e0eb:	mov    DWORD PTR [rbp+0x30],0x459
   14005e0f2:	mov    DWORD PTR [rbp+0x28],0xca
   14005e0f9:	call   0x14002ff30
   14005e0fe:	lea    rdx,[rbp+0x30]
   14005e102:	lea    rcx,[rsi+0x30]
   14005e106:	mov    rbx,rax
   14005e109:	call   0x14002ffd0
   14005e10e:	mov    QWORD PTR [rbx],rax
   14005e111:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e115:	jne    0x14005e171
   14005e117:	lea    rdx,[rbp+0x28]
   14005e11b:	lea    rcx,[rsi+0x30]
   14005e11f:	mov    DWORD PTR [rbp+0x28],0x455
   14005e126:	call   0x14002ffd0
   14005e12b:	lea    rcx,[rip+0x17b3e]        # 0x140075c70
   14005e132:	lea    rdx,[rbp+0x28]
   14005e136:	mov    DWORD PTR [rax],0x148
   14005e13c:	mov    DWORD PTR [rax+0x4],0x455
   14005e143:	mov    QWORD PTR [rax+0x8],rcx
   14005e147:	lea    rcx,[rsi+0x10]
   14005e14b:	mov    DWORD PTR [rbp+0x30],0x455
   14005e152:	mov    DWORD PTR [rbp+0x28],0x148
   14005e159:	call   0x14002ff30
   14005e15e:	lea    rdx,[rbp+0x30]
   14005e162:	lea    rcx,[rsi+0x30]
   14005e166:	mov    rbx,rax
   14005e169:	call   0x14002ffd0
   14005e16e:	mov    QWORD PTR [rbx],rax
   14005e171:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e175:	lea    rbx,[rip+0x17b1c]        # 0x140075c98
   14005e17c:	jne    0x14005e1d1
   14005e17e:	lea    rdx,[rbp+0x28]
   14005e182:	lea    rcx,[rsi+0x30]
   14005e186:	mov    DWORD PTR [rbp+0x28],0x462
   14005e18d:	call   0x14002ffd0
   14005e192:	lea    rcx,[rsi+0x10]
   14005e196:	lea    rdx,[rbp+0x28]
   14005e19a:	mov    DWORD PTR [rax],0x53
   14005e1a0:	mov    DWORD PTR [rax+0x4],0x462
   14005e1a7:	mov    DWORD PTR [rbp+0x30],0x462
   14005e1ae:	mov    QWORD PTR [rax+0x8],rbx
   14005e1b2:	mov    DWORD PTR [rbp+0x28],0x53
   14005e1b9:	call   0x14002ff30
   14005e1be:	lea    rdx,[rbp+0x30]
   14005e1c2:	lea    rcx,[rsi+0x30]
   14005e1c6:	mov    rbx,rax
   14005e1c9:	call   0x14002ffd0
   14005e1ce:	mov    QWORD PTR [rbx],rax
   14005e1d1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e1d5:	lea    rbx,[rip+0x17ad4]        # 0x140075cb0
   14005e1dc:	jne    0x14005e231
   14005e1de:	lea    rdx,[rbp+0x28]
   14005e1e2:	lea    rcx,[rsi+0x30]
   14005e1e6:	mov    DWORD PTR [rbp+0x28],0x463
   14005e1ed:	call   0x14002ffd0
   14005e1f2:	lea    rcx,[rsi+0x10]
   14005e1f6:	lea    rdx,[rbp+0x28]
   14005e1fa:	mov    DWORD PTR [rax],0x54
   14005e200:	mov    DWORD PTR [rax+0x4],0x463
   14005e207:	mov    DWORD PTR [rbp+0x30],0x463
   14005e20e:	mov    QWORD PTR [rax+0x8],rbx
   14005e212:	mov    DWORD PTR [rbp+0x28],0x54
   14005e219:	call   0x14002ff30
   14005e21e:	lea    rdx,[rbp+0x30]
   14005e222:	lea    rcx,[rsi+0x30]
   14005e226:	mov    rbx,rax
   14005e229:	call   0x14002ffd0
   14005e22e:	mov    QWORD PTR [rbx],rax
   14005e231:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e235:	lea    rbx,[rip+0x17a8c]        # 0x140075cc8
   14005e23c:	jne    0x14005e291
   14005e23e:	lea    rdx,[rbp+0x28]
   14005e242:	lea    rcx,[rsi+0x30]
   14005e246:	mov    DWORD PTR [rbp+0x28],0x464
   14005e24d:	call   0x14002ffd0
   14005e252:	lea    rcx,[rsi+0x10]
   14005e256:	lea    rdx,[rbp+0x28]
   14005e25a:	mov    DWORD PTR [rax],0x55
   14005e260:	mov    DWORD PTR [rax+0x4],0x464
   14005e267:	mov    DWORD PTR [rbp+0x30],0x464
   14005e26e:	mov    QWORD PTR [rax+0x8],rbx
   14005e272:	mov    DWORD PTR [rbp+0x28],0x55
   14005e279:	call   0x14002ff30
   14005e27e:	lea    rdx,[rbp+0x30]
   14005e282:	lea    rcx,[rsi+0x30]
   14005e286:	mov    rbx,rax
   14005e289:	call   0x14002ffd0
   14005e28e:	mov    QWORD PTR [rbx],rax
   14005e291:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e295:	lea    rbx,[rip+0x17a44]        # 0x140075ce0
   14005e29c:	jne    0x14005e2f1
   14005e29e:	lea    rdx,[rbp+0x28]
   14005e2a2:	lea    rcx,[rsi+0x30]
   14005e2a6:	mov    DWORD PTR [rbp+0x28],0x465
   14005e2ad:	call   0x14002ffd0
   14005e2b2:	lea    rcx,[rsi+0x10]
   14005e2b6:	lea    rdx,[rbp+0x28]
   14005e2ba:	mov    DWORD PTR [rax],0x56
   14005e2c0:	mov    DWORD PTR [rax+0x4],0x465
   14005e2c7:	mov    DWORD PTR [rbp+0x30],0x465
   14005e2ce:	mov    QWORD PTR [rax+0x8],rbx
   14005e2d2:	mov    DWORD PTR [rbp+0x28],0x56
   14005e2d9:	call   0x14002ff30
   14005e2de:	lea    rdx,[rbp+0x30]
   14005e2e2:	lea    rcx,[rsi+0x30]
   14005e2e6:	mov    rbx,rax
   14005e2e9:	call   0x14002ffd0
   14005e2ee:	mov    QWORD PTR [rbx],rax
   14005e2f1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e2f5:	lea    rbx,[rip+0x179fc]        # 0x140075cf8
   14005e2fc:	jne    0x14005e351
   14005e2fe:	lea    rdx,[rbp+0x28]
   14005e302:	lea    rcx,[rsi+0x30]
   14005e306:	mov    DWORD PTR [rbp+0x28],0x461
   14005e30d:	call   0x14002ffd0
   14005e312:	lea    rcx,[rsi+0x10]
   14005e316:	lea    rdx,[rbp+0x28]
   14005e31a:	mov    DWORD PTR [rax],0x52
   14005e320:	mov    DWORD PTR [rax+0x4],0x461
   14005e327:	mov    DWORD PTR [rbp+0x30],0x461
   14005e32e:	mov    QWORD PTR [rax+0x8],rbx
   14005e332:	mov    DWORD PTR [rbp+0x28],0x52
   14005e339:	call   0x14002ff30
   14005e33e:	lea    rdx,[rbp+0x30]
   14005e342:	lea    rcx,[rsi+0x30]
   14005e346:	mov    rbx,rax
   14005e349:	call   0x14002ffd0
   14005e34e:	mov    QWORD PTR [rbx],rax
   14005e351:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e355:	lea    rbx,[rip+0x179b4]        # 0x140075d10
   14005e35c:	jne    0x14005e3b1
   14005e35e:	lea    rdx,[rbp+0x28]
   14005e362:	lea    rcx,[rsi+0x30]
   14005e366:	mov    DWORD PTR [rbp+0x28],0x466
   14005e36d:	call   0x14002ffd0
   14005e372:	lea    rcx,[rsi+0x10]
   14005e376:	lea    rdx,[rbp+0x28]
   14005e37a:	mov    DWORD PTR [rax],0x6e
   14005e380:	mov    DWORD PTR [rax+0x4],0x466
   14005e387:	mov    DWORD PTR [rbp+0x30],0x466
   14005e38e:	mov    QWORD PTR [rax+0x8],rbx
   14005e392:	mov    DWORD PTR [rbp+0x28],0x6e
   14005e399:	call   0x14002ff30
   14005e39e:	lea    rdx,[rbp+0x30]
   14005e3a2:	lea    rcx,[rsi+0x30]
   14005e3a6:	mov    rbx,rax
   14005e3a9:	call   0x14002ffd0
   14005e3ae:	mov    QWORD PTR [rbx],rax
   14005e3b1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e3b5:	lea    rbx,[rip+0x1796c]        # 0x140075d28
   14005e3bc:	jne    0x14005e411
   14005e3be:	lea    rdx,[rbp+0x28]
   14005e3c2:	lea    rcx,[rsi+0x30]
   14005e3c6:	mov    DWORD PTR [rbp+0x28],0x467
   14005e3cd:	call   0x14002ffd0
   14005e3d2:	lea    rcx,[rsi+0x10]
   14005e3d6:	lea    rdx,[rbp+0x28]
   14005e3da:	mov    DWORD PTR [rax],0x70
   14005e3e0:	mov    DWORD PTR [rax+0x4],0x467
   14005e3e7:	mov    DWORD PTR [rbp+0x30],0x467
   14005e3ee:	mov    QWORD PTR [rax+0x8],rbx
   14005e3f2:	mov    DWORD PTR [rbp+0x28],0x70
   14005e3f9:	call   0x14002ff30
   14005e3fe:	lea    rdx,[rbp+0x30]
   14005e402:	lea    rcx,[rsi+0x30]
   14005e406:	mov    rbx,rax
   14005e409:	call   0x14002ffd0
   14005e40e:	mov    QWORD PTR [rbx],rax
   14005e411:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e415:	lea    rbx,[rip+0x17934]        # 0x140075d50
   14005e41c:	jne    0x14005e471
   14005e41e:	lea    rdx,[rbp+0x28]
   14005e422:	lea    rcx,[rsi+0x30]
   14005e426:	mov    DWORD PTR [rbp+0x28],0x468
   14005e42d:	call   0x14002ffd0
   14005e432:	lea    rcx,[rsi+0x10]
   14005e436:	lea    rdx,[rbp+0x28]
   14005e43a:	mov    DWORD PTR [rax],0x6f
   14005e440:	mov    DWORD PTR [rax+0x4],0x468
   14005e447:	mov    DWORD PTR [rbp+0x30],0x468
   14005e44e:	mov    QWORD PTR [rax+0x8],rbx
   14005e452:	mov    DWORD PTR [rbp+0x28],0x6f
   14005e459:	call   0x14002ff30
   14005e45e:	lea    rdx,[rbp+0x30]
   14005e462:	lea    rcx,[rsi+0x30]
   14005e466:	mov    rbx,rax
   14005e469:	call   0x14002ffd0
   14005e46e:	mov    QWORD PTR [rbx],rax
   14005e471:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e475:	lea    rbx,[rip+0x178f4]        # 0x140075d70
   14005e47c:	jne    0x14005e855
   14005e482:	lea    rdx,[rbp+0x28]
   14005e486:	lea    rcx,[rsi+0x30]
   14005e48a:	mov    DWORD PTR [rbp+0x28],0x469
   14005e491:	call   0x14002ffd0
   14005e496:	lea    rcx,[rsi+0x10]
   14005e49a:	lea    rdx,[rbp+0x28]
   14005e49e:	mov    DWORD PTR [rax],0x71
   14005e4a4:	mov    DWORD PTR [rax+0x4],0x469
   14005e4ab:	mov    DWORD PTR [rbp+0x30],0x469
   14005e4b2:	mov    QWORD PTR [rax+0x8],rbx
   14005e4b6:	mov    DWORD PTR [rbp+0x28],0x71
   14005e4bd:	call   0x14002ff30
   14005e4c2:	lea    rdx,[rbp+0x30]
   14005e4c6:	lea    rcx,[rsi+0x30]
   14005e4ca:	mov    rbx,rax
   14005e4cd:	call   0x14002ffd0
   14005e4d2:	mov    QWORD PTR [rbx],rax
   14005e4d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e4d9:	jne    0x14005e855
   14005e4df:	lea    rdx,[rbp+0x28]
   14005e4e3:	lea    rcx,[rsi+0x30]
   14005e4e7:	mov    DWORD PTR [rbp+0x28],0x46a
   14005e4ee:	call   0x14002ffd0
   14005e4f3:	lea    rcx,[rip+0x17896]        # 0x140075d90
   14005e4fa:	lea    rdx,[rbp+0x28]
   14005e4fe:	mov    DWORD PTR [rax],0x14a
   14005e504:	mov    DWORD PTR [rax+0x4],0x46a
   14005e50b:	mov    QWORD PTR [rax+0x8],rcx
   14005e50f:	lea    rcx,[rsi+0x10]
   14005e513:	mov    DWORD PTR [rbp+0x30],0x46a
   14005e51a:	mov    DWORD PTR [rbp+0x28],0x14a
   14005e521:	call   0x14002ff30
   14005e526:	lea    rdx,[rbp+0x30]
   14005e52a:	lea    rcx,[rsi+0x30]
   14005e52e:	mov    rbx,rax
   14005e531:	call   0x14002ffd0
   14005e536:	mov    QWORD PTR [rbx],rax
   14005e539:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e53d:	jne    0x14005e855
   14005e543:	lea    rdx,[rbp+0x28]
   14005e547:	lea    rcx,[rsi+0x30]
   14005e54b:	mov    DWORD PTR [rbp+0x28],0x46b
   14005e552:	call   0x14002ffd0
   14005e557:	lea    rcx,[rip+0x17852]        # 0x140075db0
   14005e55e:	lea    rdx,[rbp+0x28]
   14005e562:	mov    DWORD PTR [rax],0x14c
   14005e568:	mov    DWORD PTR [rax+0x4],0x46b
   14005e56f:	mov    QWORD PTR [rax+0x8],rcx
   14005e573:	lea    rcx,[rsi+0x10]
   14005e577:	mov    DWORD PTR [rbp+0x30],0x46b
   14005e57e:	mov    DWORD PTR [rbp+0x28],0x14c
   14005e585:	call   0x14002ff30
   14005e58a:	lea    rdx,[rbp+0x30]
   14005e58e:	lea    rcx,[rsi+0x30]
   14005e592:	mov    rbx,rax
   14005e595:	call   0x14002ffd0
   14005e59a:	mov    QWORD PTR [rbx],rax
   14005e59d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e5a1:	jne    0x14005e855
   14005e5a7:	lea    rdx,[rbp+0x28]
   14005e5ab:	lea    rcx,[rsi+0x30]
   14005e5af:	mov    DWORD PTR [rbp+0x28],0x46c
   14005e5b6:	call   0x14002ffd0
   14005e5bb:	lea    rcx,[rip+0x1780e]        # 0x140075dd0
   14005e5c2:	lea    rdx,[rbp+0x28]
   14005e5c6:	mov    DWORD PTR [rax],0x14d
   14005e5cc:	mov    DWORD PTR [rax+0x4],0x46c
   14005e5d3:	mov    QWORD PTR [rax+0x8],rcx
   14005e5d7:	lea    rcx,[rsi+0x10]
   14005e5db:	mov    DWORD PTR [rbp+0x30],0x46c
   14005e5e2:	mov    DWORD PTR [rbp+0x28],0x14d
   14005e5e9:	call   0x14002ff30
   14005e5ee:	lea    rdx,[rbp+0x30]
   14005e5f2:	lea    rcx,[rsi+0x30]
   14005e5f6:	mov    rbx,rax
   14005e5f9:	call   0x14002ffd0
   14005e5fe:	mov    QWORD PTR [rbx],rax
   14005e601:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e605:	jne    0x14005e855
   14005e60b:	lea    rdx,[rbp+0x28]
   14005e60f:	lea    rcx,[rsi+0x30]
   14005e613:	mov    DWORD PTR [rbp+0x28],0x46d
   14005e61a:	call   0x14002ffd0
   14005e61f:	lea    rcx,[rip+0x177ca]        # 0x140075df0
   14005e626:	lea    rdx,[rbp+0x28]
   14005e62a:	mov    DWORD PTR [rax],0x14e
   14005e630:	mov    DWORD PTR [rax+0x4],0x46d
   14005e637:	mov    QWORD PTR [rax+0x8],rcx
   14005e63b:	lea    rcx,[rsi+0x10]
   14005e63f:	mov    DWORD PTR [rbp+0x30],0x46d
   14005e646:	mov    DWORD PTR [rbp+0x28],0x14e
   14005e64d:	call   0x14002ff30
   14005e652:	lea    rdx,[rbp+0x30]
   14005e656:	lea    rcx,[rsi+0x30]
   14005e65a:	mov    rbx,rax
   14005e65d:	call   0x14002ffd0
   14005e662:	mov    QWORD PTR [rbx],rax
   14005e665:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e669:	jne    0x14005e855
   14005e66f:	lea    rdx,[rbp+0x28]
   14005e673:	lea    rcx,[rsi+0x30]
   14005e677:	mov    DWORD PTR [rbp+0x28],0x472
   14005e67e:	call   0x14002ffd0
   14005e683:	lea    rcx,[rip+0x17786]        # 0x140075e10
   14005e68a:	lea    rdx,[rbp+0x28]
   14005e68e:	mov    DWORD PTR [rax],0x1ad
   14005e694:	mov    DWORD PTR [rax+0x4],0x472
   14005e69b:	mov    QWORD PTR [rax+0x8],rcx
   14005e69f:	lea    rcx,[rsi+0x10]
   14005e6a3:	mov    DWORD PTR [rbp+0x30],0x472
   14005e6aa:	mov    DWORD PTR [rbp+0x28],0x1ad
   14005e6b1:	call   0x14002ff30
   14005e6b6:	lea    rdx,[rbp+0x30]
   14005e6ba:	lea    rcx,[rsi+0x30]
   14005e6be:	mov    rbx,rax
   14005e6c1:	call   0x14002ffd0
   14005e6c6:	mov    QWORD PTR [rbx],rax
   14005e6c9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e6cd:	jne    0x14005e855
   14005e6d3:	lea    rdx,[rbp+0x28]
   14005e6d7:	lea    rcx,[rsi+0x30]
   14005e6db:	mov    DWORD PTR [rbp+0x28],0x46e
   14005e6e2:	call   0x14002ffd0
   14005e6e7:	lea    rcx,[rip+0x1773a]        # 0x140075e28
   14005e6ee:	lea    rdx,[rbp+0x28]
   14005e6f2:	mov    DWORD PTR [rax],0x1ae
   14005e6f8:	mov    DWORD PTR [rax+0x4],0x46e
   14005e6ff:	mov    QWORD PTR [rax+0x8],rcx
   14005e703:	lea    rcx,[rsi+0x10]
   14005e707:	mov    DWORD PTR [rbp+0x30],0x46e
   14005e70e:	mov    DWORD PTR [rbp+0x28],0x1ae
   14005e715:	call   0x14002ff30
   14005e71a:	lea    rdx,[rbp+0x30]
   14005e71e:	lea    rcx,[rsi+0x30]
   14005e722:	mov    rbx,rax
   14005e725:	call   0x14002ffd0
   14005e72a:	mov    QWORD PTR [rbx],rax
   14005e72d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e731:	jne    0x14005e855
   14005e737:	lea    rdx,[rbp+0x28]
   14005e73b:	lea    rcx,[rsi+0x30]
   14005e73f:	mov    DWORD PTR [rbp+0x28],0x46f
   14005e746:	call   0x14002ffd0
   14005e74b:	lea    rcx,[rip+0x176ee]        # 0x140075e40
   14005e752:	lea    rdx,[rbp+0x28]
   14005e756:	mov    DWORD PTR [rax],0x1af
   14005e75c:	mov    DWORD PTR [rax+0x4],0x46f
   14005e763:	mov    QWORD PTR [rax+0x8],rcx
   14005e767:	lea    rcx,[rsi+0x10]
   14005e76b:	mov    DWORD PTR [rbp+0x30],0x46f
   14005e772:	mov    DWORD PTR [rbp+0x28],0x1af
   14005e779:	call   0x14002ff30
   14005e77e:	lea    rdx,[rbp+0x30]
   14005e782:	lea    rcx,[rsi+0x30]
   14005e786:	mov    rbx,rax
   14005e789:	call   0x14002ffd0
   14005e78e:	mov    QWORD PTR [rbx],rax
   14005e791:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e795:	jne    0x14005e855
   14005e79b:	lea    rdx,[rbp+0x28]
   14005e79f:	lea    rcx,[rsi+0x30]
   14005e7a3:	mov    DWORD PTR [rbp+0x28],0x470
   14005e7aa:	call   0x14002ffd0
   14005e7af:	lea    rcx,[rip+0x1769a]        # 0x140075e50
   14005e7b6:	lea    rdx,[rbp+0x28]
   14005e7ba:	mov    DWORD PTR [rax],0x1b0
   14005e7c0:	mov    DWORD PTR [rax+0x4],0x470
   14005e7c7:	mov    QWORD PTR [rax+0x8],rcx
   14005e7cb:	lea    rcx,[rsi+0x10]
   14005e7cf:	mov    DWORD PTR [rbp+0x30],0x470
   14005e7d6:	mov    DWORD PTR [rbp+0x28],0x1b0
   14005e7dd:	call   0x14002ff30
   14005e7e2:	lea    rdx,[rbp+0x30]
   14005e7e6:	lea    rcx,[rsi+0x30]
   14005e7ea:	mov    rbx,rax
   14005e7ed:	call   0x14002ffd0
   14005e7f2:	mov    QWORD PTR [rbx],rax
   14005e7f5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e7f9:	jne    0x14005e855
   14005e7fb:	lea    rdx,[rbp+0x28]
   14005e7ff:	lea    rcx,[rsi+0x30]
   14005e803:	mov    DWORD PTR [rbp+0x28],0x471
   14005e80a:	call   0x14002ffd0
   14005e80f:	lea    rcx,[rip+0x17652]        # 0x140075e68
   14005e816:	lea    rdx,[rbp+0x28]
   14005e81a:	mov    DWORD PTR [rax],0x1b1
   14005e820:	mov    DWORD PTR [rax+0x4],0x471
   14005e827:	mov    QWORD PTR [rax+0x8],rcx
   14005e82b:	lea    rcx,[rsi+0x10]
   14005e82f:	mov    DWORD PTR [rbp+0x30],0x471
   14005e836:	mov    DWORD PTR [rbp+0x28],0x1b1
   14005e83d:	call   0x14002ff30
   14005e842:	lea    rdx,[rbp+0x30]
   14005e846:	lea    rcx,[rsi+0x30]
   14005e84a:	mov    rbx,rax
   14005e84d:	call   0x14002ffd0
   14005e852:	mov    QWORD PTR [rbx],rax
   14005e855:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e859:	lea    rbx,[rip+0x17620]        # 0x140075e80
   14005e860:	jne    0x14005e8b5
   14005e862:	lea    rdx,[rbp+0x28]
   14005e866:	lea    rcx,[rsi+0x30]
   14005e86a:	mov    DWORD PTR [rbp+0x28],0x476
   14005e871:	call   0x14002ffd0
   14005e876:	lea    rcx,[rsi+0x10]
   14005e87a:	lea    rdx,[rbp+0x28]
   14005e87e:	mov    DWORD PTR [rax],0x72
   14005e884:	mov    DWORD PTR [rax+0x4],0x476
   14005e88b:	mov    DWORD PTR [rbp+0x30],0x476
   14005e892:	mov    QWORD PTR [rax+0x8],rbx
   14005e896:	mov    DWORD PTR [rbp+0x28],0x72
   14005e89d:	call   0x14002ff30
   14005e8a2:	lea    rdx,[rbp+0x30]
   14005e8a6:	lea    rcx,[rsi+0x30]
   14005e8aa:	mov    rbx,rax
   14005e8ad:	call   0x14002ffd0
   14005e8b2:	mov    QWORD PTR [rbx],rax
   14005e8b5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e8b9:	lea    rbx,[rip+0x175e0]        # 0x140075ea0
   14005e8c0:	jne    0x14005e915
   14005e8c2:	lea    rdx,[rbp+0x28]
   14005e8c6:	lea    rcx,[rsi+0x30]
   14005e8ca:	mov    DWORD PTR [rbp+0x28],0x477
   14005e8d1:	call   0x14002ffd0
   14005e8d6:	lea    rcx,[rsi+0x10]
   14005e8da:	lea    rdx,[rbp+0x28]
   14005e8de:	mov    DWORD PTR [rax],0x73
   14005e8e4:	mov    DWORD PTR [rax+0x4],0x477
   14005e8eb:	mov    DWORD PTR [rbp+0x30],0x477
   14005e8f2:	mov    QWORD PTR [rax+0x8],rbx
   14005e8f6:	mov    DWORD PTR [rbp+0x28],0x73
   14005e8fd:	call   0x14002ff30
   14005e902:	lea    rdx,[rbp+0x30]
   14005e906:	lea    rcx,[rsi+0x30]
   14005e90a:	mov    rbx,rax
   14005e90d:	call   0x14002ffd0
   14005e912:	mov    QWORD PTR [rbx],rax
   14005e915:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e919:	lea    rbx,[rip+0x175a0]        # 0x140075ec0
   14005e920:	jne    0x14005e975
   14005e922:	lea    rdx,[rbp+0x28]
   14005e926:	lea    rcx,[rsi+0x30]
   14005e92a:	mov    DWORD PTR [rbp+0x28],0x474
   14005e931:	call   0x14002ffd0
   14005e936:	lea    rcx,[rsi+0x10]
   14005e93a:	lea    rdx,[rbp+0x28]
   14005e93e:	mov    DWORD PTR [rax],0x74
   14005e944:	mov    DWORD PTR [rax+0x4],0x474
   14005e94b:	mov    DWORD PTR [rbp+0x30],0x474
   14005e952:	mov    QWORD PTR [rax+0x8],rbx
   14005e956:	mov    DWORD PTR [rbp+0x28],0x74
   14005e95d:	call   0x14002ff30
   14005e962:	lea    rdx,[rbp+0x30]
   14005e966:	lea    rcx,[rsi+0x30]
   14005e96a:	mov    rbx,rax
   14005e96d:	call   0x14002ffd0
   14005e972:	mov    QWORD PTR [rbx],rax
   14005e975:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e979:	lea    rbx,[rip+0x17560]        # 0x140075ee0
   14005e980:	jne    0x14005e9d5
   14005e982:	lea    rdx,[rbp+0x28]
   14005e986:	lea    rcx,[rsi+0x30]
   14005e98a:	mov    DWORD PTR [rbp+0x28],0x475
   14005e991:	call   0x14002ffd0
   14005e996:	lea    rcx,[rsi+0x10]
   14005e99a:	lea    rdx,[rbp+0x28]
   14005e99e:	mov    DWORD PTR [rax],0x75
   14005e9a4:	mov    DWORD PTR [rax+0x4],0x475
   14005e9ab:	mov    DWORD PTR [rbp+0x30],0x475
   14005e9b2:	mov    QWORD PTR [rax+0x8],rbx
   14005e9b6:	mov    DWORD PTR [rbp+0x28],0x75
   14005e9bd:	call   0x14002ff30
   14005e9c2:	lea    rdx,[rbp+0x30]
   14005e9c6:	lea    rcx,[rsi+0x30]
   14005e9ca:	mov    rbx,rax
   14005e9cd:	call   0x14002ffd0
   14005e9d2:	mov    QWORD PTR [rbx],rax
   14005e9d5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005e9d9:	lea    rbx,[rip+0x17520]        # 0x140075f00
   14005e9e0:	jne    0x14005ea35
   14005e9e2:	lea    rdx,[rbp+0x28]
   14005e9e6:	lea    rcx,[rsi+0x30]
   14005e9ea:	mov    DWORD PTR [rbp+0x28],0x3f1
   14005e9f1:	call   0x14002ffd0
   14005e9f6:	lea    rcx,[rsi+0x10]
   14005e9fa:	lea    rdx,[rbp+0x28]
   14005e9fe:	mov    DWORD PTR [rax],0x78
   14005ea04:	mov    DWORD PTR [rax+0x4],0x3f1
   14005ea0b:	mov    DWORD PTR [rbp+0x30],0x3f1
   14005ea12:	mov    QWORD PTR [rax+0x8],rbx
   14005ea16:	mov    DWORD PTR [rbp+0x28],0x78
   14005ea1d:	call   0x14002ff30
   14005ea22:	lea    rdx,[rbp+0x30]
   14005ea26:	lea    rcx,[rsi+0x30]
   14005ea2a:	mov    rbx,rax
   14005ea2d:	call   0x14002ffd0
   14005ea32:	mov    QWORD PTR [rbx],rax
   14005ea35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ea39:	lea    rbx,[rip+0x174d8]        # 0x140075f18
   14005ea40:	jne    0x14005ea95
   14005ea42:	lea    rdx,[rbp+0x28]
   14005ea46:	lea    rcx,[rsi+0x30]
   14005ea4a:	mov    DWORD PTR [rbp+0x28],0x47e
   14005ea51:	call   0x14002ffd0
   14005ea56:	lea    rcx,[rsi+0x10]
   14005ea5a:	lea    rdx,[rbp+0x28]
   14005ea5e:	mov    DWORD PTR [rax],0x79
   14005ea64:	mov    DWORD PTR [rax+0x4],0x47e
   14005ea6b:	mov    DWORD PTR [rbp+0x30],0x47e
   14005ea72:	mov    QWORD PTR [rax+0x8],rbx
   14005ea76:	mov    DWORD PTR [rbp+0x28],0x79
   14005ea7d:	call   0x14002ff30
   14005ea82:	lea    rdx,[rbp+0x30]
   14005ea86:	lea    rcx,[rsi+0x30]
   14005ea8a:	mov    rbx,rax
   14005ea8d:	call   0x14002ffd0
   14005ea92:	mov    QWORD PTR [rbx],rax
   14005ea95:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ea99:	lea    rbx,[rip+0x17498]        # 0x140075f38
   14005eaa0:	jne    0x14005eaf5
   14005eaa2:	lea    rdx,[rbp+0x28]
   14005eaa6:	lea    rcx,[rsi+0x30]
   14005eaaa:	mov    DWORD PTR [rbp+0x28],0x47f
   14005eab1:	call   0x14002ffd0
   14005eab6:	lea    rcx,[rsi+0x10]
   14005eaba:	lea    rdx,[rbp+0x28]
   14005eabe:	mov    DWORD PTR [rax],0x7a
   14005eac4:	mov    DWORD PTR [rax+0x4],0x47f
   14005eacb:	mov    DWORD PTR [rbp+0x30],0x47f
   14005ead2:	mov    QWORD PTR [rax+0x8],rbx
   14005ead6:	mov    DWORD PTR [rbp+0x28],0x7a
   14005eadd:	call   0x14002ff30
   14005eae2:	lea    rdx,[rbp+0x30]
   14005eae6:	lea    rcx,[rsi+0x30]
   14005eaea:	mov    rbx,rax
   14005eaed:	call   0x14002ffd0
   14005eaf2:	mov    QWORD PTR [rbx],rax
   14005eaf5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005eaf9:	lea    r15,[rip+0x17458]        # 0x140075f58
   14005eb00:	jne    0x14005eb55
   14005eb02:	lea    rdx,[rbp+0x28]
   14005eb06:	lea    rcx,[rsi+0x30]
   14005eb0a:	mov    DWORD PTR [rbp+0x28],0x480
   14005eb11:	call   0x14002ffd0
   14005eb16:	lea    rcx,[rsi+0x10]
   14005eb1a:	lea    rdx,[rbp+0x28]
   14005eb1e:	mov    DWORD PTR [rax],0x7b
   14005eb24:	mov    DWORD PTR [rax+0x4],0x480
   14005eb2b:	mov    DWORD PTR [rbp+0x30],0x480
   14005eb32:	mov    QWORD PTR [rax+0x8],r15
   14005eb36:	mov    DWORD PTR [rbp+0x28],0x7b
   14005eb3d:	call   0x14002ff30
   14005eb42:	lea    rdx,[rbp+0x30]
   14005eb46:	lea    rcx,[rsi+0x30]
   14005eb4a:	mov    rbx,rax
   14005eb4d:	call   0x14002ffd0
   14005eb52:	mov    QWORD PTR [rbx],rax
   14005eb55:	cmp    DWORD PTR [rsi+0x8],0x1
   14005eb59:	lea    r14,[rip+0x17410]        # 0x140075f70
   14005eb60:	jne    0x14005ec19
   14005eb66:	lea    rdx,[rbp+0x28]
   14005eb6a:	lea    rcx,[rsi+0x30]
   14005eb6e:	mov    DWORD PTR [rbp+0x28],0x481
   14005eb75:	call   0x14002ffd0
   14005eb7a:	lea    rcx,[rsi+0x10]
   14005eb7e:	lea    rdx,[rbp+0x28]
   14005eb82:	mov    DWORD PTR [rax],0x7c
   14005eb88:	mov    DWORD PTR [rax+0x4],0x481
   14005eb8f:	mov    DWORD PTR [rbp+0x30],0x481
   14005eb96:	mov    QWORD PTR [rax+0x8],r14
   14005eb9a:	mov    DWORD PTR [rbp+0x28],0x7c
   14005eba1:	call   0x14002ff30
   14005eba6:	lea    rdx,[rbp+0x30]
   14005ebaa:	lea    rcx,[rsi+0x30]
   14005ebae:	mov    rbx,rax
   14005ebb1:	call   0x14002ffd0
   14005ebb6:	mov    QWORD PTR [rbx],rax
   14005ebb9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ebbd:	jne    0x14005ec19
   14005ebbf:	lea    rdx,[rbp+0x28]
   14005ebc3:	lea    rcx,[rsi+0x30]
   14005ebc7:	mov    DWORD PTR [rbp+0x28],0x483
   14005ebce:	call   0x14002ffd0
   14005ebd3:	lea    rcx,[rip+0x173ae]        # 0x140075f88
   14005ebda:	lea    rdx,[rbp+0x28]
   14005ebde:	mov    DWORD PTR [rax],0xb9
   14005ebe4:	mov    DWORD PTR [rax+0x4],0x483
   14005ebeb:	mov    QWORD PTR [rax+0x8],rcx
   14005ebef:	lea    rcx,[rsi+0x10]
   14005ebf3:	mov    DWORD PTR [rbp+0x30],0x483
   14005ebfa:	mov    DWORD PTR [rbp+0x28],0xb9
   14005ec01:	call   0x14002ff30
   14005ec06:	lea    rdx,[rbp+0x30]
   14005ec0a:	lea    rcx,[rsi+0x30]
   14005ec0e:	mov    rbx,rax
   14005ec11:	call   0x14002ffd0
   14005ec16:	mov    QWORD PTR [rbx],rax
   14005ec19:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ec1d:	lea    r13,[rip+0x17384]        # 0x140075fa8
   14005ec24:	jne    0x14005ec79
   14005ec26:	lea    rdx,[rbp+0x28]
   14005ec2a:	lea    rcx,[rsi+0x30]
   14005ec2e:	mov    DWORD PTR [rbp+0x28],0x3f2
   14005ec35:	call   0x14002ffd0
   14005ec3a:	lea    rcx,[rsi+0x10]
   14005ec3e:	lea    rdx,[rbp+0x28]
   14005ec42:	mov    DWORD PTR [rax],0x7d
   14005ec48:	mov    DWORD PTR [rax+0x4],0x3f2
   14005ec4f:	mov    DWORD PTR [rbp+0x30],0x3f2
   14005ec56:	mov    QWORD PTR [rax+0x8],r13
   14005ec5a:	mov    DWORD PTR [rbp+0x28],0x7d
   14005ec61:	call   0x14002ff30
   14005ec66:	lea    rdx,[rbp+0x30]
   14005ec6a:	lea    rcx,[rsi+0x30]
   14005ec6e:	mov    rbx,rax
   14005ec71:	call   0x14002ffd0
   14005ec76:	mov    QWORD PTR [rbx],rax
   14005ec79:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ec7d:	lea    r12,[rip+0x17334]        # 0x140075fb8
   14005ec84:	jne    0x14006306d
   14005ec8a:	lea    rdx,[rbp+0x28]
   14005ec8e:	lea    rcx,[rsi+0x30]
   14005ec92:	mov    DWORD PTR [rbp+0x28],0x482
   14005ec99:	call   0x14002ffd0
   14005ec9e:	lea    rcx,[rsi+0x10]
   14005eca2:	lea    rdx,[rbp+0x28]
   14005eca6:	mov    DWORD PTR [rax],0xbb
   14005ecac:	mov    DWORD PTR [rax+0x4],0x482
   14005ecb3:	mov    DWORD PTR [rbp+0x30],0x482
   14005ecba:	mov    QWORD PTR [rax+0x8],r12
   14005ecbe:	mov    DWORD PTR [rbp+0x28],0xbb
   14005ecc5:	call   0x14002ff30
   14005ecca:	lea    rdx,[rbp+0x30]
   14005ecce:	lea    rcx,[rsi+0x30]
   14005ecd2:	mov    rbx,rax
   14005ecd5:	call   0x14002ffd0
   14005ecda:	mov    QWORD PTR [rbx],rax
   14005ecdd:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ece1:	jne    0x14006306d
   14005ece7:	lea    rdx,[rbp+0x28]
   14005eceb:	lea    rcx,[rsi+0x30]
   14005ecef:	mov    DWORD PTR [rbp+0x28],0x65e
   14005ecf6:	call   0x14002ffd0
   14005ecfb:	lea    rcx,[rip+0x172d6]        # 0x140075fd8
   14005ed02:	lea    rdx,[rbp+0x28]
   14005ed06:	mov    DWORD PTR [rax],0x13b
   14005ed0c:	mov    DWORD PTR [rax+0x4],0x65e
   14005ed13:	mov    QWORD PTR [rax+0x8],rcx
   14005ed17:	lea    rcx,[rsi+0x10]
   14005ed1b:	mov    DWORD PTR [rbp+0x30],0x65e
   14005ed22:	mov    DWORD PTR [rbp+0x28],0x13b
   14005ed29:	call   0x14002ff30
   14005ed2e:	lea    rdx,[rbp+0x30]
   14005ed32:	lea    rcx,[rsi+0x30]
   14005ed36:	mov    rbx,rax
   14005ed39:	call   0x14002ffd0
   14005ed3e:	mov    QWORD PTR [rbx],rax
   14005ed41:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ed45:	jne    0x14006306d
   14005ed4b:	lea    rdx,[rbp+0x28]
   14005ed4f:	lea    rcx,[rsi+0x30]
   14005ed53:	mov    DWORD PTR [rbp+0x28],0x65f
   14005ed5a:	call   0x14002ffd0
   14005ed5f:	lea    rcx,[rip+0x1728a]        # 0x140075ff0
   14005ed66:	lea    rdx,[rbp+0x28]
   14005ed6a:	mov    DWORD PTR [rax],0x13c
   14005ed70:	mov    DWORD PTR [rax+0x4],0x65f
   14005ed77:	mov    QWORD PTR [rax+0x8],rcx
   14005ed7b:	lea    rcx,[rsi+0x10]
   14005ed7f:	mov    DWORD PTR [rbp+0x30],0x65f
   14005ed86:	mov    DWORD PTR [rbp+0x28],0x13c
   14005ed8d:	call   0x14002ff30
   14005ed92:	lea    rdx,[rbp+0x30]
   14005ed96:	lea    rcx,[rsi+0x30]
   14005ed9a:	mov    rbx,rax
   14005ed9d:	call   0x14002ffd0
   14005eda2:	mov    QWORD PTR [rbx],rax
   14005eda5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005eda9:	jne    0x14006306d
   14005edaf:	lea    rdx,[rbp+0x28]
   14005edb3:	lea    rcx,[rsi+0x30]
   14005edb7:	mov    DWORD PTR [rbp+0x28],0x660
   14005edbe:	call   0x14002ffd0
   14005edc3:	lea    rcx,[rip+0x1723e]        # 0x140076008
   14005edca:	lea    rdx,[rbp+0x28]
   14005edce:	mov    DWORD PTR [rax],0x13d
   14005edd4:	mov    DWORD PTR [rax+0x4],0x660
   14005eddb:	mov    QWORD PTR [rax+0x8],rcx
   14005eddf:	lea    rcx,[rsi+0x10]
   14005ede3:	mov    DWORD PTR [rbp+0x30],0x660
   14005edea:	mov    DWORD PTR [rbp+0x28],0x13d
   14005edf1:	call   0x14002ff30
   14005edf6:	lea    rdx,[rbp+0x30]
   14005edfa:	lea    rcx,[rsi+0x30]
   14005edfe:	mov    rbx,rax
   14005ee01:	call   0x14002ffd0
   14005ee06:	mov    QWORD PTR [rbx],rax
   14005ee09:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ee0d:	jne    0x14006306d
   14005ee13:	lea    rdx,[rbp+0x28]
   14005ee17:	lea    rcx,[rsi+0x30]
   14005ee1b:	mov    DWORD PTR [rbp+0x28],0x661
   14005ee22:	call   0x14002ffd0
   14005ee27:	lea    rcx,[rip+0x171fa]        # 0x140076028
   14005ee2e:	lea    rdx,[rbp+0x28]
   14005ee32:	mov    DWORD PTR [rax],0x13e
   14005ee38:	mov    DWORD PTR [rax+0x4],0x661
   14005ee3f:	mov    QWORD PTR [rax+0x8],rcx
   14005ee43:	lea    rcx,[rsi+0x10]
   14005ee47:	mov    DWORD PTR [rbp+0x30],0x661
   14005ee4e:	mov    DWORD PTR [rbp+0x28],0x13e
   14005ee55:	call   0x14002ff30
   14005ee5a:	lea    rdx,[rbp+0x30]
   14005ee5e:	lea    rcx,[rsi+0x30]
   14005ee62:	mov    rbx,rax
   14005ee65:	call   0x14002ffd0
   14005ee6a:	mov    QWORD PTR [rbx],rax
   14005ee6d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ee71:	jne    0x14006306d
   14005ee77:	lea    rdx,[rbp+0x28]
   14005ee7b:	lea    rcx,[rsi+0x30]
   14005ee7f:	mov    DWORD PTR [rbp+0x28],0x662
   14005ee86:	call   0x14002ffd0
   14005ee8b:	lea    rcx,[rip+0x171ae]        # 0x140076040
   14005ee92:	lea    rdx,[rbp+0x28]
   14005ee96:	mov    DWORD PTR [rax],0x13f
   14005ee9c:	mov    DWORD PTR [rax+0x4],0x662
   14005eea3:	mov    QWORD PTR [rax+0x8],rcx
   14005eea7:	lea    rcx,[rsi+0x10]
   14005eeab:	mov    DWORD PTR [rbp+0x30],0x662
   14005eeb2:	mov    DWORD PTR [rbp+0x28],0x13f
   14005eeb9:	call   0x14002ff30
   14005eebe:	lea    rdx,[rbp+0x30]
   14005eec2:	lea    rcx,[rsi+0x30]
   14005eec6:	mov    rbx,rax
   14005eec9:	call   0x14002ffd0
   14005eece:	mov    QWORD PTR [rbx],rax
   14005eed1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005eed5:	jne    0x14006306d
   14005eedb:	lea    rdx,[rbp+0x28]
   14005eedf:	lea    rcx,[rsi+0x30]
   14005eee3:	mov    DWORD PTR [rbp+0x28],0x663
   14005eeea:	call   0x14002ffd0
   14005eeef:	lea    rcx,[rip+0x17162]        # 0x140076058
   14005eef6:	lea    rdx,[rbp+0x28]
   14005eefa:	mov    DWORD PTR [rax],0xffffffff
   14005ef00:	mov    DWORD PTR [rax+0x4],0x663
   14005ef07:	mov    QWORD PTR [rax+0x8],rcx
   14005ef0b:	lea    rcx,[rsi+0x10]
   14005ef0f:	mov    DWORD PTR [rbp+0x30],0x663
   14005ef16:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14005ef1d:	call   0x14002ff30
   14005ef22:	lea    rdx,[rbp+0x30]
   14005ef26:	lea    rcx,[rsi+0x30]
   14005ef2a:	mov    rbx,rax
   14005ef2d:	call   0x14002ffd0
   14005ef32:	mov    QWORD PTR [rbx],rax
   14005ef35:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ef39:	jne    0x14006306d
   14005ef3f:	lea    rdx,[rbp+0x28]
   14005ef43:	lea    rcx,[rsi+0x30]
   14005ef47:	mov    DWORD PTR [rbp+0x28],0x42b
   14005ef4e:	call   0x14002ffd0
   14005ef53:	lea    rcx,[rip+0x1711e]        # 0x140076078
   14005ef5a:	lea    rdx,[rbp+0x28]
   14005ef5e:	mov    DWORD PTR [rax],0x7e
   14005ef64:	mov    DWORD PTR [rax+0x4],0x42b
   14005ef6b:	mov    QWORD PTR [rax+0x8],rcx
   14005ef6f:	lea    rcx,[rsi+0x10]
   14005ef73:	mov    DWORD PTR [rbp+0x30],0x42b
   14005ef7a:	mov    DWORD PTR [rbp+0x28],0x7e
   14005ef81:	call   0x14002ff30
   14005ef86:	lea    rdx,[rbp+0x30]
   14005ef8a:	lea    rcx,[rsi+0x30]
   14005ef8e:	mov    rbx,rax
   14005ef91:	call   0x14002ffd0
   14005ef96:	mov    QWORD PTR [rbx],rax
   14005ef99:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ef9d:	jne    0x14006306d
   14005efa3:	lea    rdx,[rbp+0x28]
   14005efa7:	lea    rcx,[rsi+0x30]
   14005efab:	mov    DWORD PTR [rbp+0x28],0x47a
   14005efb2:	call   0x14002ffd0
   14005efb7:	lea    rcx,[rip+0x170da]        # 0x140076098
   14005efbe:	lea    rdx,[rbp+0x28]
   14005efc2:	mov    DWORD PTR [rax],0x7f
   14005efc8:	mov    DWORD PTR [rax+0x4],0x47a
   14005efcf:	mov    QWORD PTR [rax+0x8],rcx
   14005efd3:	lea    rcx,[rsi+0x10]
   14005efd7:	mov    DWORD PTR [rbp+0x30],0x47a
   14005efde:	mov    DWORD PTR [rbp+0x28],0x7f
   14005efe5:	call   0x14002ff30
   14005efea:	lea    rdx,[rbp+0x30]
   14005efee:	lea    rcx,[rsi+0x30]
   14005eff2:	mov    rbx,rax
   14005eff5:	call   0x14002ffd0
   14005effa:	mov    QWORD PTR [rbx],rax
   14005effd:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f001:	jne    0x14006306d
   14005f007:	lea    rdx,[rbp+0x28]
   14005f00b:	lea    rcx,[rsi+0x30]
   14005f00f:	mov    DWORD PTR [rbp+0x28],0x47c
   14005f016:	call   0x14002ffd0
   14005f01b:	lea    rcx,[rip+0x1708e]        # 0x1400760b0
   14005f022:	lea    rdx,[rbp+0x28]
   14005f026:	mov    DWORD PTR [rax],0x80
   14005f02c:	mov    DWORD PTR [rax+0x4],0x47c
   14005f033:	mov    QWORD PTR [rax+0x8],rcx
   14005f037:	lea    rcx,[rsi+0x10]
   14005f03b:	mov    DWORD PTR [rbp+0x30],0x47c
   14005f042:	mov    DWORD PTR [rbp+0x28],0x80
   14005f049:	call   0x14002ff30
   14005f04e:	lea    rdx,[rbp+0x30]
   14005f052:	lea    rcx,[rsi+0x30]
   14005f056:	mov    rbx,rax
   14005f059:	call   0x14002ffd0
   14005f05e:	mov    QWORD PTR [rbx],rax
   14005f061:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f065:	jne    0x14006306d
   14005f06b:	lea    rdx,[rbp+0x28]
   14005f06f:	lea    rcx,[rsi+0x30]
   14005f073:	mov    DWORD PTR [rbp+0x28],0x47b
   14005f07a:	call   0x14002ffd0
   14005f07f:	lea    rcx,[rip+0x17042]        # 0x1400760c8
   14005f086:	lea    rdx,[rbp+0x28]
   14005f08a:	mov    DWORD PTR [rax],0x81
   14005f090:	mov    DWORD PTR [rax+0x4],0x47b
   14005f097:	mov    QWORD PTR [rax+0x8],rcx
   14005f09b:	lea    rcx,[rsi+0x10]
   14005f09f:	mov    DWORD PTR [rbp+0x30],0x47b
   14005f0a6:	mov    DWORD PTR [rbp+0x28],0x81
   14005f0ad:	call   0x14002ff30
   14005f0b2:	lea    rdx,[rbp+0x30]
   14005f0b6:	lea    rcx,[rsi+0x30]
   14005f0ba:	mov    rbx,rax
   14005f0bd:	call   0x14002ffd0
   14005f0c2:	mov    QWORD PTR [rbx],rax
   14005f0c5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f0c9:	jne    0x14006306d
   14005f0cf:	lea    rdx,[rbp+0x28]
   14005f0d3:	lea    rcx,[rsi+0x30]
   14005f0d7:	mov    DWORD PTR [rbp+0x28],0x47d
   14005f0de:	call   0x14002ffd0
   14005f0e3:	lea    rcx,[rip+0x16ff6]        # 0x1400760e0
   14005f0ea:	lea    rdx,[rbp+0x28]
   14005f0ee:	mov    DWORD PTR [rax],0x152
   14005f0f4:	mov    DWORD PTR [rax+0x4],0x47d
   14005f0fb:	mov    QWORD PTR [rax+0x8],rcx
   14005f0ff:	lea    rcx,[rsi+0x10]
   14005f103:	mov    DWORD PTR [rbp+0x30],0x47d
   14005f10a:	mov    DWORD PTR [rbp+0x28],0x152
   14005f111:	call   0x14002ff30
   14005f116:	lea    rdx,[rbp+0x30]
   14005f11a:	lea    rcx,[rsi+0x30]
   14005f11e:	mov    rbx,rax
   14005f121:	call   0x14002ffd0
   14005f126:	mov    QWORD PTR [rbx],rax
   14005f129:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f12d:	jne    0x14006306d
   14005f133:	lea    rdx,[rbp+0x28]
   14005f137:	lea    rcx,[rsi+0x30]
   14005f13b:	mov    DWORD PTR [rbp+0x28],0x42c
   14005f142:	call   0x14002ffd0
   14005f147:	lea    rcx,[rip+0x16fa2]        # 0x1400760f0
   14005f14e:	lea    rdx,[rbp+0x28]
   14005f152:	mov    DWORD PTR [rax],0xba
   14005f158:	mov    DWORD PTR [rax+0x4],0x42c
   14005f15f:	mov    QWORD PTR [rax+0x8],rcx
   14005f163:	lea    rcx,[rsi+0x10]
   14005f167:	mov    DWORD PTR [rbp+0x30],0x42c
   14005f16e:	mov    DWORD PTR [rbp+0x28],0xba
   14005f175:	call   0x14002ff30
   14005f17a:	lea    rdx,[rbp+0x30]
   14005f17e:	lea    rcx,[rsi+0x30]
   14005f182:	mov    rbx,rax
   14005f185:	call   0x14002ffd0
   14005f18a:	mov    QWORD PTR [rbx],rax
   14005f18d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f191:	jne    0x14006306d
   14005f197:	lea    rdx,[rbp+0x28]
   14005f19b:	lea    rcx,[rsi+0x30]
   14005f19f:	mov    DWORD PTR [rbp+0x28],0x42d
   14005f1a6:	call   0x14002ffd0
   14005f1ab:	lea    rcx,[rip+0x16f5e]        # 0x140076110
   14005f1b2:	lea    rdx,[rbp+0x28]
   14005f1b6:	mov    DWORD PTR [rax],0xbc
   14005f1bc:	mov    DWORD PTR [rax+0x4],0x42d
   14005f1c3:	mov    QWORD PTR [rax+0x8],rcx
   14005f1c7:	lea    rcx,[rsi+0x10]
   14005f1cb:	mov    DWORD PTR [rbp+0x30],0x42d
   14005f1d2:	mov    DWORD PTR [rbp+0x28],0xbc
   14005f1d9:	call   0x14002ff30
   14005f1de:	lea    rdx,[rbp+0x30]
   14005f1e2:	lea    rcx,[rsi+0x30]
   14005f1e6:	mov    rbx,rax
   14005f1e9:	call   0x14002ffd0
   14005f1ee:	mov    QWORD PTR [rbx],rax
   14005f1f1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f1f5:	jne    0x14006306d
   14005f1fb:	lea    rdx,[rbp+0x28]
   14005f1ff:	lea    rcx,[rsi+0x30]
   14005f203:	mov    DWORD PTR [rbp+0x28],0x42e
   14005f20a:	call   0x14002ffd0
   14005f20f:	lea    rcx,[rip+0x16f1a]        # 0x140076130
   14005f216:	lea    rdx,[rbp+0x28]
   14005f21a:	mov    DWORD PTR [rax],0xbd
   14005f220:	mov    DWORD PTR [rax+0x4],0x42e
   14005f227:	mov    QWORD PTR [rax+0x8],rcx
   14005f22b:	lea    rcx,[rsi+0x10]
   14005f22f:	mov    DWORD PTR [rbp+0x30],0x42e
   14005f236:	mov    DWORD PTR [rbp+0x28],0xbd
   14005f23d:	call   0x14002ff30
   14005f242:	lea    rdx,[rbp+0x30]
   14005f246:	lea    rcx,[rsi+0x30]
   14005f24a:	mov    rbx,rax
   14005f24d:	call   0x14002ffd0
   14005f252:	mov    QWORD PTR [rbx],rax
   14005f255:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f259:	jne    0x14006306d
   14005f25f:	lea    rdx,[rbp+0x28]
   14005f263:	lea    rcx,[rsi+0x30]
   14005f267:	mov    DWORD PTR [rbp+0x28],0x42f
   14005f26e:	call   0x14002ffd0
   14005f273:	lea    rcx,[rip+0x16ed6]        # 0x140076150
   14005f27a:	lea    rdx,[rbp+0x28]
   14005f27e:	mov    DWORD PTR [rax],0xbe
   14005f284:	mov    DWORD PTR [rax+0x4],0x42f
   14005f28b:	mov    QWORD PTR [rax+0x8],rcx
   14005f28f:	lea    rcx,[rsi+0x10]
   14005f293:	mov    DWORD PTR [rbp+0x30],0x42f
   14005f29a:	mov    DWORD PTR [rbp+0x28],0xbe
   14005f2a1:	call   0x14002ff30
   14005f2a6:	lea    rdx,[rbp+0x30]
   14005f2aa:	lea    rcx,[rsi+0x30]
   14005f2ae:	mov    rbx,rax
   14005f2b1:	call   0x14002ffd0
   14005f2b6:	mov    QWORD PTR [rbx],rax
   14005f2b9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f2bd:	jne    0x14006306d
   14005f2c3:	lea    rdx,[rbp+0x28]
   14005f2c7:	lea    rcx,[rsi+0x30]
   14005f2cb:	mov    DWORD PTR [rbp+0x28],0x430
   14005f2d2:	call   0x14002ffd0
   14005f2d7:	lea    rcx,[rip+0x16e9a]        # 0x140076178
   14005f2de:	lea    rdx,[rbp+0x28]
   14005f2e2:	mov    DWORD PTR [rax],0xbf
   14005f2e8:	mov    DWORD PTR [rax+0x4],0x430
   14005f2ef:	mov    QWORD PTR [rax+0x8],rcx
   14005f2f3:	lea    rcx,[rsi+0x10]
   14005f2f7:	mov    DWORD PTR [rbp+0x30],0x430
   14005f2fe:	mov    DWORD PTR [rbp+0x28],0xbf
   14005f305:	call   0x14002ff30
   14005f30a:	lea    rdx,[rbp+0x30]
   14005f30e:	lea    rcx,[rsi+0x30]
   14005f312:	mov    rbx,rax
   14005f315:	call   0x14002ffd0
   14005f31a:	mov    QWORD PTR [rbx],rax
   14005f31d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f321:	jne    0x14006306d
   14005f327:	lea    rdx,[rbp+0x28]
   14005f32b:	lea    rcx,[rsi+0x30]
   14005f32f:	mov    DWORD PTR [rbp+0x28],0x3f5
   14005f336:	call   0x14002ffd0
   14005f33b:	lea    rcx,[rip+0x16e5e]        # 0x1400761a0
   14005f342:	lea    rdx,[rbp+0x28]
   14005f346:	mov    DWORD PTR [rax],0xc3
   14005f34c:	mov    DWORD PTR [rax+0x4],0x3f5
   14005f353:	mov    QWORD PTR [rax+0x8],rcx
   14005f357:	lea    rcx,[rsi+0x10]
   14005f35b:	mov    DWORD PTR [rbp+0x30],0x3f5
   14005f362:	mov    DWORD PTR [rbp+0x28],0xc3
   14005f369:	call   0x14002ff30
   14005f36e:	lea    rdx,[rbp+0x30]
   14005f372:	lea    rcx,[rsi+0x30]
   14005f376:	mov    rbx,rax
   14005f379:	call   0x14002ffd0
   14005f37e:	mov    QWORD PTR [rbx],rax
   14005f381:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f385:	jne    0x14006306d
   14005f38b:	lea    rdx,[rbp+0x28]
   14005f38f:	lea    rcx,[rsi+0x30]
   14005f393:	mov    DWORD PTR [rbp+0x28],0x3f3
   14005f39a:	call   0x14002ffd0
   14005f39f:	lea    rcx,[rip+0x16e12]        # 0x1400761b8
   14005f3a6:	lea    rdx,[rbp+0x28]
   14005f3aa:	mov    DWORD PTR [rax],0x83
   14005f3b0:	mov    DWORD PTR [rax+0x4],0x3f3
   14005f3b7:	mov    QWORD PTR [rax+0x8],rcx
   14005f3bb:	lea    rcx,[rsi+0x10]
   14005f3bf:	mov    DWORD PTR [rbp+0x30],0x3f3
   14005f3c6:	mov    DWORD PTR [rbp+0x28],0x83
   14005f3cd:	call   0x14002ff30
   14005f3d2:	lea    rdx,[rbp+0x30]
   14005f3d6:	lea    rcx,[rsi+0x30]
   14005f3da:	mov    rbx,rax
   14005f3dd:	call   0x14002ffd0
   14005f3e2:	mov    QWORD PTR [rbx],rax
   14005f3e5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f3e9:	jne    0x14006306d
   14005f3ef:	lea    rdx,[rbp+0x28]
   14005f3f3:	lea    rcx,[rsi+0x30]
   14005f3f7:	mov    DWORD PTR [rbp+0x28],0x48d
   14005f3fe:	call   0x14002ffd0
   14005f403:	lea    rcx,[rip+0x16dc6]        # 0x1400761d0
   14005f40a:	lea    rdx,[rbp+0x28]
   14005f40e:	mov    DWORD PTR [rax],0x85
   14005f414:	mov    DWORD PTR [rax+0x4],0x48d
   14005f41b:	mov    QWORD PTR [rax+0x8],rcx
   14005f41f:	lea    rcx,[rsi+0x10]
   14005f423:	mov    DWORD PTR [rbp+0x30],0x48d
   14005f42a:	mov    DWORD PTR [rbp+0x28],0x85
   14005f431:	call   0x14002ff30
   14005f436:	lea    rdx,[rbp+0x30]
   14005f43a:	lea    rcx,[rsi+0x30]
   14005f43e:	mov    rbx,rax
   14005f441:	call   0x14002ffd0
   14005f446:	mov    QWORD PTR [rbx],rax
   14005f449:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f44d:	jne    0x14006306d
   14005f453:	lea    rdx,[rbp+0x28]
   14005f457:	lea    rcx,[rsi+0x30]
   14005f45b:	mov    DWORD PTR [rbp+0x28],0x48e
   14005f462:	call   0x14002ffd0
   14005f467:	lea    rcx,[rip+0x16d7a]        # 0x1400761e8
   14005f46e:	lea    rdx,[rbp+0x28]
   14005f472:	mov    DWORD PTR [rax],0x87
   14005f478:	mov    DWORD PTR [rax+0x4],0x48e
   14005f47f:	mov    QWORD PTR [rax+0x8],rcx
   14005f483:	lea    rcx,[rsi+0x10]
   14005f487:	mov    DWORD PTR [rbp+0x30],0x48e
   14005f48e:	mov    DWORD PTR [rbp+0x28],0x87
   14005f495:	call   0x14002ff30
   14005f49a:	lea    rdx,[rbp+0x30]
   14005f49e:	lea    rcx,[rsi+0x30]
   14005f4a2:	mov    rbx,rax
   14005f4a5:	call   0x14002ffd0
   14005f4aa:	mov    QWORD PTR [rbx],rax
   14005f4ad:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f4b1:	jne    0x14006306d
   14005f4b7:	lea    rdx,[rbp+0x28]
   14005f4bb:	lea    rcx,[rsi+0x30]
   14005f4bf:	mov    DWORD PTR [rbp+0x28],0x48f
   14005f4c6:	call   0x14002ffd0
   14005f4cb:	lea    rcx,[rip+0x16d2e]        # 0x140076200
   14005f4d2:	lea    rdx,[rbp+0x28]
   14005f4d6:	mov    DWORD PTR [rax],0x86
   14005f4dc:	mov    DWORD PTR [rax+0x4],0x48f
   14005f4e3:	mov    QWORD PTR [rax+0x8],rcx
   14005f4e7:	lea    rcx,[rsi+0x10]
   14005f4eb:	mov    DWORD PTR [rbp+0x30],0x48f
   14005f4f2:	mov    DWORD PTR [rbp+0x28],0x86
   14005f4f9:	call   0x14002ff30
   14005f4fe:	lea    rdx,[rbp+0x30]
   14005f502:	lea    rcx,[rsi+0x30]
   14005f506:	mov    rbx,rax
   14005f509:	call   0x14002ffd0
   14005f50e:	mov    QWORD PTR [rbx],rax
   14005f511:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f515:	jne    0x14006306d
   14005f51b:	lea    rdx,[rbp+0x28]
   14005f51f:	lea    rcx,[rsi+0x30]
   14005f523:	mov    DWORD PTR [rbp+0x28],0x490
   14005f52a:	call   0x14002ffd0
   14005f52f:	lea    rcx,[rip+0x16ce2]        # 0x140076218
   14005f536:	lea    rdx,[rbp+0x28]
   14005f53a:	mov    DWORD PTR [rax],0x88
   14005f540:	mov    DWORD PTR [rax+0x4],0x490
   14005f547:	mov    QWORD PTR [rax+0x8],rcx
   14005f54b:	lea    rcx,[rsi+0x10]
   14005f54f:	mov    DWORD PTR [rbp+0x30],0x490
   14005f556:	mov    DWORD PTR [rbp+0x28],0x88
   14005f55d:	call   0x14002ff30
   14005f562:	lea    rdx,[rbp+0x30]
   14005f566:	lea    rcx,[rsi+0x30]
   14005f56a:	mov    rbx,rax
   14005f56d:	call   0x14002ffd0
   14005f572:	mov    QWORD PTR [rbx],rax
   14005f575:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f579:	jne    0x14006306d
   14005f57f:	lea    rdx,[rbp+0x28]
   14005f583:	lea    rcx,[rsi+0x30]
   14005f587:	mov    DWORD PTR [rbp+0x28],0x491
   14005f58e:	call   0x14002ffd0
   14005f593:	lea    rcx,[rip+0x16c96]        # 0x140076230
   14005f59a:	lea    rdx,[rbp+0x28]
   14005f59e:	mov    DWORD PTR [rax],0x84
   14005f5a4:	mov    DWORD PTR [rax+0x4],0x491
   14005f5ab:	mov    QWORD PTR [rax+0x8],rcx
   14005f5af:	lea    rcx,[rsi+0x10]
   14005f5b3:	mov    DWORD PTR [rbp+0x30],0x491
   14005f5ba:	mov    DWORD PTR [rbp+0x28],0x84
   14005f5c1:	call   0x14002ff30
   14005f5c6:	lea    rdx,[rbp+0x30]
   14005f5ca:	lea    rcx,[rsi+0x30]
   14005f5ce:	mov    rbx,rax
   14005f5d1:	call   0x14002ffd0
   14005f5d6:	mov    QWORD PTR [rbx],rax
   14005f5d9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f5dd:	jne    0x14006306d
   14005f5e3:	lea    rdx,[rbp+0x28]
   14005f5e7:	lea    rcx,[rsi+0x30]
   14005f5eb:	mov    DWORD PTR [rbp+0x28],0x497
   14005f5f2:	call   0x14002ffd0
   14005f5f7:	lea    rcx,[rip+0x16c4a]        # 0x140076248
   14005f5fe:	lea    rdx,[rbp+0x28]
   14005f602:	mov    DWORD PTR [rax],0x8a
   14005f608:	mov    DWORD PTR [rax+0x4],0x497
   14005f60f:	mov    QWORD PTR [rax+0x8],rcx
   14005f613:	lea    rcx,[rsi+0x10]
   14005f617:	mov    DWORD PTR [rbp+0x30],0x497
   14005f61e:	mov    DWORD PTR [rbp+0x28],0x8a
   14005f625:	call   0x14002ff30
   14005f62a:	lea    rdx,[rbp+0x30]
   14005f62e:	lea    rcx,[rsi+0x30]
   14005f632:	mov    rbx,rax
   14005f635:	call   0x14002ffd0
   14005f63a:	mov    QWORD PTR [rbx],rax
   14005f63d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f641:	jne    0x14006306d
   14005f647:	lea    rdx,[rbp+0x28]
   14005f64b:	lea    rcx,[rsi+0x30]
   14005f64f:	mov    DWORD PTR [rbp+0x28],0x498
   14005f656:	call   0x14002ffd0
   14005f65b:	lea    rcx,[rip+0x16bfe]        # 0x140076260
   14005f662:	lea    rdx,[rbp+0x28]
   14005f666:	mov    DWORD PTR [rax],0x8c
   14005f66c:	mov    DWORD PTR [rax+0x4],0x498
   14005f673:	mov    QWORD PTR [rax+0x8],rcx
   14005f677:	lea    rcx,[rsi+0x10]
   14005f67b:	mov    DWORD PTR [rbp+0x30],0x498
   14005f682:	mov    DWORD PTR [rbp+0x28],0x8c
   14005f689:	call   0x14002ff30
   14005f68e:	lea    rdx,[rbp+0x30]
   14005f692:	lea    rcx,[rsi+0x30]
   14005f696:	mov    rbx,rax
   14005f699:	call   0x14002ffd0
   14005f69e:	mov    QWORD PTR [rbx],rax
   14005f6a1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f6a5:	jne    0x14006306d
   14005f6ab:	lea    rdx,[rbp+0x28]
   14005f6af:	lea    rcx,[rsi+0x30]
   14005f6b3:	mov    DWORD PTR [rbp+0x28],0x499
   14005f6ba:	call   0x14002ffd0
   14005f6bf:	lea    rcx,[rip+0x16bb2]        # 0x140076278
   14005f6c6:	lea    rdx,[rbp+0x28]
   14005f6ca:	mov    DWORD PTR [rax],0x8b
   14005f6d0:	mov    DWORD PTR [rax+0x4],0x499
   14005f6d7:	mov    QWORD PTR [rax+0x8],rcx
   14005f6db:	lea    rcx,[rsi+0x10]
   14005f6df:	mov    DWORD PTR [rbp+0x30],0x499
   14005f6e6:	mov    DWORD PTR [rbp+0x28],0x8b
   14005f6ed:	call   0x14002ff30
   14005f6f2:	lea    rdx,[rbp+0x30]
   14005f6f6:	lea    rcx,[rsi+0x30]
   14005f6fa:	mov    rbx,rax
   14005f6fd:	call   0x14002ffd0
   14005f702:	mov    QWORD PTR [rbx],rax
   14005f705:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f709:	jne    0x14006306d
   14005f70f:	lea    rdx,[rbp+0x28]
   14005f713:	lea    rcx,[rsi+0x30]
   14005f717:	mov    DWORD PTR [rbp+0x28],0x49a
   14005f71e:	call   0x14002ffd0
   14005f723:	lea    rcx,[rip+0x16b66]        # 0x140076290
   14005f72a:	lea    rdx,[rbp+0x28]
   14005f72e:	mov    DWORD PTR [rax],0x8d
   14005f734:	mov    DWORD PTR [rax+0x4],0x49a
   14005f73b:	mov    QWORD PTR [rax+0x8],rcx
   14005f73f:	lea    rcx,[rsi+0x10]
   14005f743:	mov    DWORD PTR [rbp+0x30],0x49a
   14005f74a:	mov    DWORD PTR [rbp+0x28],0x8d
   14005f751:	call   0x14002ff30
   14005f756:	lea    rdx,[rbp+0x30]
   14005f75a:	lea    rcx,[rsi+0x30]
   14005f75e:	mov    rbx,rax
   14005f761:	call   0x14002ffd0
   14005f766:	mov    QWORD PTR [rbx],rax
   14005f769:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f76d:	jne    0x14006306d
   14005f773:	lea    rdx,[rbp+0x28]
   14005f777:	lea    rcx,[rsi+0x30]
   14005f77b:	mov    DWORD PTR [rbp+0x28],0x49b
   14005f782:	call   0x14002ffd0
   14005f787:	lea    rcx,[rip+0x16b1a]        # 0x1400762a8
   14005f78e:	lea    rdx,[rbp+0x28]
   14005f792:	mov    DWORD PTR [rax],0x89
   14005f798:	mov    DWORD PTR [rax+0x4],0x49b
   14005f79f:	mov    QWORD PTR [rax+0x8],rcx
   14005f7a3:	lea    rcx,[rsi+0x10]
   14005f7a7:	mov    DWORD PTR [rbp+0x30],0x49b
   14005f7ae:	mov    DWORD PTR [rbp+0x28],0x89
   14005f7b5:	call   0x14002ff30
   14005f7ba:	lea    rdx,[rbp+0x30]
   14005f7be:	lea    rcx,[rsi+0x30]
   14005f7c2:	mov    rbx,rax
   14005f7c5:	call   0x14002ffd0
   14005f7ca:	mov    QWORD PTR [rbx],rax
   14005f7cd:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f7d1:	jne    0x14006306d
   14005f7d7:	lea    rdx,[rbp+0x28]
   14005f7db:	lea    rcx,[rsi+0x30]
   14005f7df:	mov    DWORD PTR [rbp+0x28],0x4a1
   14005f7e6:	call   0x14002ffd0
   14005f7eb:	lea    rcx,[rip+0x16ace]        # 0x1400762c0
   14005f7f2:	lea    rdx,[rbp+0x28]
   14005f7f6:	mov    DWORD PTR [rax],0x8f
   14005f7fc:	mov    DWORD PTR [rax+0x4],0x4a1
   14005f803:	mov    QWORD PTR [rax+0x8],rcx
   14005f807:	lea    rcx,[rsi+0x10]
   14005f80b:	mov    DWORD PTR [rbp+0x30],0x4a1
   14005f812:	mov    DWORD PTR [rbp+0x28],0x8f
   14005f819:	call   0x14002ff30
   14005f81e:	lea    rdx,[rbp+0x30]
   14005f822:	lea    rcx,[rsi+0x30]
   14005f826:	mov    rbx,rax
   14005f829:	call   0x14002ffd0
   14005f82e:	mov    QWORD PTR [rbx],rax
   14005f831:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f835:	jne    0x14006306d
   14005f83b:	lea    rdx,[rbp+0x28]
   14005f83f:	lea    rcx,[rsi+0x30]
   14005f843:	mov    DWORD PTR [rbp+0x28],0x4a2
   14005f84a:	call   0x14002ffd0
   14005f84f:	lea    rcx,[rip+0x16a82]        # 0x1400762d8
   14005f856:	lea    rdx,[rbp+0x28]
   14005f85a:	mov    DWORD PTR [rax],0x91
   14005f860:	mov    DWORD PTR [rax+0x4],0x4a2
   14005f867:	mov    QWORD PTR [rax+0x8],rcx
   14005f86b:	lea    rcx,[rsi+0x10]
   14005f86f:	mov    DWORD PTR [rbp+0x30],0x4a2
   14005f876:	mov    DWORD PTR [rbp+0x28],0x91
   14005f87d:	call   0x14002ff30
   14005f882:	lea    rdx,[rbp+0x30]
   14005f886:	lea    rcx,[rsi+0x30]
   14005f88a:	mov    rbx,rax
   14005f88d:	call   0x14002ffd0
   14005f892:	mov    QWORD PTR [rbx],rax
   14005f895:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f899:	jne    0x14006306d
   14005f89f:	lea    rdx,[rbp+0x28]
   14005f8a3:	lea    rcx,[rsi+0x30]
   14005f8a7:	mov    DWORD PTR [rbp+0x28],0x4a3
   14005f8ae:	call   0x14002ffd0
   14005f8b3:	lea    rcx,[rip+0x16a36]        # 0x1400762f0
   14005f8ba:	lea    rdx,[rbp+0x28]
   14005f8be:	mov    DWORD PTR [rax],0x90
   14005f8c4:	mov    DWORD PTR [rax+0x4],0x4a3
   14005f8cb:	mov    QWORD PTR [rax+0x8],rcx
   14005f8cf:	lea    rcx,[rsi+0x10]
   14005f8d3:	mov    DWORD PTR [rbp+0x30],0x4a3
   14005f8da:	mov    DWORD PTR [rbp+0x28],0x90
   14005f8e1:	call   0x14002ff30
   14005f8e6:	lea    rdx,[rbp+0x30]
   14005f8ea:	lea    rcx,[rsi+0x30]
   14005f8ee:	mov    rbx,rax
   14005f8f1:	call   0x14002ffd0
   14005f8f6:	mov    QWORD PTR [rbx],rax
   14005f8f9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f8fd:	jne    0x14006306d
   14005f903:	lea    rdx,[rbp+0x28]
   14005f907:	lea    rcx,[rsi+0x30]
   14005f90b:	mov    DWORD PTR [rbp+0x28],0x4a4
   14005f912:	call   0x14002ffd0
   14005f917:	lea    rcx,[rip+0x169ea]        # 0x140076308
   14005f91e:	lea    rdx,[rbp+0x28]
   14005f922:	mov    DWORD PTR [rax],0x92
   14005f928:	mov    DWORD PTR [rax+0x4],0x4a4
   14005f92f:	mov    QWORD PTR [rax+0x8],rcx
   14005f933:	lea    rcx,[rsi+0x10]
   14005f937:	mov    DWORD PTR [rbp+0x30],0x4a4
   14005f93e:	mov    DWORD PTR [rbp+0x28],0x92
   14005f945:	call   0x14002ff30
   14005f94a:	lea    rdx,[rbp+0x30]
   14005f94e:	lea    rcx,[rsi+0x30]
   14005f952:	mov    rbx,rax
   14005f955:	call   0x14002ffd0
   14005f95a:	mov    QWORD PTR [rbx],rax
   14005f95d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f961:	jne    0x14006306d
   14005f967:	lea    rdx,[rbp+0x28]
   14005f96b:	lea    rcx,[rsi+0x30]
   14005f96f:	mov    DWORD PTR [rbp+0x28],0x4a5
   14005f976:	call   0x14002ffd0
   14005f97b:	lea    rcx,[rip+0x1699e]        # 0x140076320
   14005f982:	lea    rdx,[rbp+0x28]
   14005f986:	mov    DWORD PTR [rax],0x8e
   14005f98c:	mov    DWORD PTR [rax+0x4],0x4a5
   14005f993:	mov    QWORD PTR [rax+0x8],rcx
   14005f997:	lea    rcx,[rsi+0x10]
   14005f99b:	mov    DWORD PTR [rbp+0x30],0x4a5
   14005f9a2:	mov    DWORD PTR [rbp+0x28],0x8e
   14005f9a9:	call   0x14002ff30
   14005f9ae:	lea    rdx,[rbp+0x30]
   14005f9b2:	lea    rcx,[rsi+0x30]
   14005f9b6:	mov    rbx,rax
   14005f9b9:	call   0x14002ffd0
   14005f9be:	mov    QWORD PTR [rbx],rax
   14005f9c1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005f9c5:	jne    0x14006306d
   14005f9cb:	lea    rdx,[rbp+0x28]
   14005f9cf:	lea    rcx,[rsi+0x30]
   14005f9d3:	mov    DWORD PTR [rbp+0x28],0x4ab
   14005f9da:	call   0x14002ffd0
   14005f9df:	lea    rcx,[rip+0x16952]        # 0x140076338
   14005f9e6:	lea    rdx,[rbp+0x28]
   14005f9ea:	mov    DWORD PTR [rax],0x94
   14005f9f0:	mov    DWORD PTR [rax+0x4],0x4ab
   14005f9f7:	mov    QWORD PTR [rax+0x8],rcx
   14005f9fb:	lea    rcx,[rsi+0x10]
   14005f9ff:	mov    DWORD PTR [rbp+0x30],0x4ab
   14005fa06:	mov    DWORD PTR [rbp+0x28],0x94
   14005fa0d:	call   0x14002ff30
   14005fa12:	lea    rdx,[rbp+0x30]
   14005fa16:	lea    rcx,[rsi+0x30]
   14005fa1a:	mov    rbx,rax
   14005fa1d:	call   0x14002ffd0
   14005fa22:	mov    QWORD PTR [rbx],rax
   14005fa25:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fa29:	jne    0x14006306d
   14005fa2f:	lea    rdx,[rbp+0x28]
   14005fa33:	lea    rcx,[rsi+0x30]
   14005fa37:	mov    DWORD PTR [rbp+0x28],0x4ac
   14005fa3e:	call   0x14002ffd0
   14005fa43:	lea    rcx,[rip+0x16906]        # 0x140076350
   14005fa4a:	lea    rdx,[rbp+0x28]
   14005fa4e:	mov    DWORD PTR [rax],0x96
   14005fa54:	mov    DWORD PTR [rax+0x4],0x4ac
   14005fa5b:	mov    QWORD PTR [rax+0x8],rcx
   14005fa5f:	lea    rcx,[rsi+0x10]
   14005fa63:	mov    DWORD PTR [rbp+0x30],0x4ac
   14005fa6a:	mov    DWORD PTR [rbp+0x28],0x96
   14005fa71:	call   0x14002ff30
   14005fa76:	lea    rdx,[rbp+0x30]
   14005fa7a:	lea    rcx,[rsi+0x30]
   14005fa7e:	mov    rbx,rax
   14005fa81:	call   0x14002ffd0
   14005fa86:	mov    QWORD PTR [rbx],rax
   14005fa89:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fa8d:	jne    0x14006306d
   14005fa93:	lea    rdx,[rbp+0x28]
   14005fa97:	lea    rcx,[rsi+0x30]
   14005fa9b:	mov    DWORD PTR [rbp+0x28],0x4ad
   14005faa2:	call   0x14002ffd0
   14005faa7:	lea    rcx,[rip+0x168ba]        # 0x140076368
   14005faae:	lea    rdx,[rbp+0x28]
   14005fab2:	mov    DWORD PTR [rax],0x95
   14005fab8:	mov    DWORD PTR [rax+0x4],0x4ad
   14005fabf:	mov    QWORD PTR [rax+0x8],rcx
   14005fac3:	lea    rcx,[rsi+0x10]
   14005fac7:	mov    DWORD PTR [rbp+0x30],0x4ad
   14005face:	mov    DWORD PTR [rbp+0x28],0x95
   14005fad5:	call   0x14002ff30
   14005fada:	lea    rdx,[rbp+0x30]
   14005fade:	lea    rcx,[rsi+0x30]
   14005fae2:	mov    rbx,rax
   14005fae5:	call   0x14002ffd0
   14005faea:	mov    QWORD PTR [rbx],rax
   14005faed:	cmp    DWORD PTR [rsi+0x8],0x1
   14005faf1:	jne    0x14006306d
   14005faf7:	lea    rdx,[rbp+0x28]
   14005fafb:	lea    rcx,[rsi+0x30]
   14005faff:	mov    DWORD PTR [rbp+0x28],0x4ae
   14005fb06:	call   0x14002ffd0
   14005fb0b:	lea    rcx,[rip+0x1686e]        # 0x140076380
   14005fb12:	lea    rdx,[rbp+0x28]
   14005fb16:	mov    DWORD PTR [rax],0x97
   14005fb1c:	mov    DWORD PTR [rax+0x4],0x4ae
   14005fb23:	mov    QWORD PTR [rax+0x8],rcx
   14005fb27:	lea    rcx,[rsi+0x10]
   14005fb2b:	mov    DWORD PTR [rbp+0x30],0x4ae
   14005fb32:	mov    DWORD PTR [rbp+0x28],0x97
   14005fb39:	call   0x14002ff30
   14005fb3e:	lea    rdx,[rbp+0x30]
   14005fb42:	lea    rcx,[rsi+0x30]
   14005fb46:	mov    rbx,rax
   14005fb49:	call   0x14002ffd0
   14005fb4e:	mov    QWORD PTR [rbx],rax
   14005fb51:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fb55:	jne    0x14006306d
   14005fb5b:	lea    rdx,[rbp+0x28]
   14005fb5f:	lea    rcx,[rsi+0x30]
   14005fb63:	mov    DWORD PTR [rbp+0x28],0x4af
   14005fb6a:	call   0x14002ffd0
   14005fb6f:	lea    rcx,[rip+0x16822]        # 0x140076398
   14005fb76:	lea    rdx,[rbp+0x28]
   14005fb7a:	mov    DWORD PTR [rax],0x93
   14005fb80:	mov    DWORD PTR [rax+0x4],0x4af
   14005fb87:	mov    QWORD PTR [rax+0x8],rcx
   14005fb8b:	lea    rcx,[rsi+0x10]
   14005fb8f:	mov    DWORD PTR [rbp+0x30],0x4af
   14005fb96:	mov    DWORD PTR [rbp+0x28],0x93
   14005fb9d:	call   0x14002ff30
   14005fba2:	lea    rdx,[rbp+0x30]
   14005fba6:	lea    rcx,[rsi+0x30]
   14005fbaa:	mov    rbx,rax
   14005fbad:	call   0x14002ffd0
   14005fbb2:	mov    QWORD PTR [rbx],rax
   14005fbb5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fbb9:	jne    0x14006306d
   14005fbbf:	lea    rdx,[rbp+0x28]
   14005fbc3:	lea    rcx,[rsi+0x30]
   14005fbc7:	mov    DWORD PTR [rbp+0x28],0x4b5
   14005fbce:	call   0x14002ffd0
   14005fbd3:	lea    rcx,[rip+0x167d6]        # 0x1400763b0
   14005fbda:	lea    rdx,[rbp+0x28]
   14005fbde:	mov    DWORD PTR [rax],0x99
   14005fbe4:	mov    DWORD PTR [rax+0x4],0x4b5
   14005fbeb:	mov    QWORD PTR [rax+0x8],rcx
   14005fbef:	lea    rcx,[rsi+0x10]
   14005fbf3:	mov    DWORD PTR [rbp+0x30],0x4b5
   14005fbfa:	mov    DWORD PTR [rbp+0x28],0x99
   14005fc01:	call   0x14002ff30
   14005fc06:	lea    rdx,[rbp+0x30]
   14005fc0a:	lea    rcx,[rsi+0x30]
   14005fc0e:	mov    rbx,rax
   14005fc11:	call   0x14002ffd0
   14005fc16:	mov    QWORD PTR [rbx],rax
   14005fc19:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fc1d:	jne    0x14006306d
   14005fc23:	lea    rdx,[rbp+0x28]
   14005fc27:	lea    rcx,[rsi+0x30]
   14005fc2b:	mov    DWORD PTR [rbp+0x28],0x4b6
   14005fc32:	call   0x14002ffd0
   14005fc37:	lea    rcx,[rip+0x1678a]        # 0x1400763c8
   14005fc3e:	lea    rdx,[rbp+0x28]
   14005fc42:	mov    DWORD PTR [rax],0x9b
   14005fc48:	mov    DWORD PTR [rax+0x4],0x4b6
   14005fc4f:	mov    QWORD PTR [rax+0x8],rcx
   14005fc53:	lea    rcx,[rsi+0x10]
   14005fc57:	mov    DWORD PTR [rbp+0x30],0x4b6
   14005fc5e:	mov    DWORD PTR [rbp+0x28],0x9b
   14005fc65:	call   0x14002ff30
   14005fc6a:	lea    rdx,[rbp+0x30]
   14005fc6e:	lea    rcx,[rsi+0x30]
   14005fc72:	mov    rbx,rax
   14005fc75:	call   0x14002ffd0
   14005fc7a:	mov    QWORD PTR [rbx],rax
   14005fc7d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fc81:	jne    0x14006306d
   14005fc87:	lea    rdx,[rbp+0x28]
   14005fc8b:	lea    rcx,[rsi+0x30]
   14005fc8f:	mov    DWORD PTR [rbp+0x28],0x4b7
   14005fc96:	call   0x14002ffd0
   14005fc9b:	lea    rcx,[rip+0x1673e]        # 0x1400763e0
   14005fca2:	lea    rdx,[rbp+0x28]
   14005fca6:	mov    DWORD PTR [rax],0x9a
   14005fcac:	mov    DWORD PTR [rax+0x4],0x4b7
   14005fcb3:	mov    QWORD PTR [rax+0x8],rcx
   14005fcb7:	lea    rcx,[rsi+0x10]
   14005fcbb:	mov    DWORD PTR [rbp+0x30],0x4b7
   14005fcc2:	mov    DWORD PTR [rbp+0x28],0x9a
   14005fcc9:	call   0x14002ff30
   14005fcce:	lea    rdx,[rbp+0x30]
   14005fcd2:	lea    rcx,[rsi+0x30]
   14005fcd6:	mov    rbx,rax
   14005fcd9:	call   0x14002ffd0
   14005fcde:	mov    QWORD PTR [rbx],rax
   14005fce1:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fce5:	jne    0x14006306d
   14005fceb:	lea    rdx,[rbp+0x28]
   14005fcef:	lea    rcx,[rsi+0x30]
   14005fcf3:	mov    DWORD PTR [rbp+0x28],0x4b8
   14005fcfa:	call   0x14002ffd0
   14005fcff:	lea    rcx,[rip+0x166f2]        # 0x1400763f8
   14005fd06:	lea    rdx,[rbp+0x28]
   14005fd0a:	mov    DWORD PTR [rax],0x9c
   14005fd10:	mov    DWORD PTR [rax+0x4],0x4b8
   14005fd17:	mov    QWORD PTR [rax+0x8],rcx
   14005fd1b:	lea    rcx,[rsi+0x10]
   14005fd1f:	mov    DWORD PTR [rbp+0x30],0x4b8
   14005fd26:	mov    DWORD PTR [rbp+0x28],0x9c
   14005fd2d:	call   0x14002ff30
   14005fd32:	lea    rdx,[rbp+0x30]
   14005fd36:	lea    rcx,[rsi+0x30]
   14005fd3a:	mov    rbx,rax
   14005fd3d:	call   0x14002ffd0
   14005fd42:	mov    QWORD PTR [rbx],rax
   14005fd45:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fd49:	jne    0x14006306d
   14005fd4f:	lea    rdx,[rbp+0x28]
   14005fd53:	lea    rcx,[rsi+0x30]
   14005fd57:	mov    DWORD PTR [rbp+0x28],0x4b9
   14005fd5e:	call   0x14002ffd0
   14005fd63:	lea    rcx,[rip+0x166a6]        # 0x140076410
   14005fd6a:	lea    rdx,[rbp+0x28]
   14005fd6e:	mov    DWORD PTR [rax],0x98
   14005fd74:	mov    DWORD PTR [rax+0x4],0x4b9
   14005fd7b:	mov    QWORD PTR [rax+0x8],rcx
   14005fd7f:	lea    rcx,[rsi+0x10]
   14005fd83:	mov    DWORD PTR [rbp+0x30],0x4b9
   14005fd8a:	mov    DWORD PTR [rbp+0x28],0x98
   14005fd91:	call   0x14002ff30
   14005fd96:	lea    rdx,[rbp+0x30]
   14005fd9a:	lea    rcx,[rsi+0x30]
   14005fd9e:	mov    rbx,rax
   14005fda1:	call   0x14002ffd0
   14005fda6:	mov    QWORD PTR [rbx],rax
   14005fda9:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fdad:	jne    0x14006306d
   14005fdb3:	lea    rdx,[rbp+0x28]
   14005fdb7:	lea    rcx,[rsi+0x30]
   14005fdbb:	mov    DWORD PTR [rbp+0x28],0x4bf
   14005fdc2:	call   0x14002ffd0
   14005fdc7:	lea    rcx,[rip+0x1665a]        # 0x140076428
   14005fdce:	lea    rdx,[rbp+0x28]
   14005fdd2:	mov    DWORD PTR [rax],0x9e
   14005fdd8:	mov    DWORD PTR [rax+0x4],0x4bf
   14005fddf:	mov    QWORD PTR [rax+0x8],rcx
   14005fde3:	lea    rcx,[rsi+0x10]
   14005fde7:	mov    DWORD PTR [rbp+0x30],0x4bf
   14005fdee:	mov    DWORD PTR [rbp+0x28],0x9e
   14005fdf5:	call   0x14002ff30
   14005fdfa:	lea    rdx,[rbp+0x30]
   14005fdfe:	lea    rcx,[rsi+0x30]
   14005fe02:	mov    rbx,rax
   14005fe05:	call   0x14002ffd0
   14005fe0a:	mov    QWORD PTR [rbx],rax
   14005fe0d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fe11:	jne    0x14006306d
   14005fe17:	lea    rdx,[rbp+0x28]
   14005fe1b:	lea    rcx,[rsi+0x30]
   14005fe1f:	mov    DWORD PTR [rbp+0x28],0x4c0
   14005fe26:	call   0x14002ffd0
   14005fe2b:	lea    rcx,[rip+0x1660e]        # 0x140076440
   14005fe32:	lea    rdx,[rbp+0x28]
   14005fe36:	mov    DWORD PTR [rax],0xa0
   14005fe3c:	mov    DWORD PTR [rax+0x4],0x4c0
   14005fe43:	mov    QWORD PTR [rax+0x8],rcx
   14005fe47:	lea    rcx,[rsi+0x10]
   14005fe4b:	mov    DWORD PTR [rbp+0x30],0x4c0
   14005fe52:	mov    DWORD PTR [rbp+0x28],0xa0
   14005fe59:	call   0x14002ff30
   14005fe5e:	lea    rdx,[rbp+0x30]
   14005fe62:	lea    rcx,[rsi+0x30]
   14005fe66:	mov    rbx,rax
   14005fe69:	call   0x14002ffd0
   14005fe6e:	mov    QWORD PTR [rbx],rax
   14005fe71:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fe75:	jne    0x14006306d
   14005fe7b:	lea    rdx,[rbp+0x28]
   14005fe7f:	lea    rcx,[rsi+0x30]
   14005fe83:	mov    DWORD PTR [rbp+0x28],0x4c1
   14005fe8a:	call   0x14002ffd0
   14005fe8f:	lea    rcx,[rip+0x165c2]        # 0x140076458
   14005fe96:	lea    rdx,[rbp+0x28]
   14005fe9a:	mov    DWORD PTR [rax],0x9f
   14005fea0:	mov    DWORD PTR [rax+0x4],0x4c1
   14005fea7:	mov    QWORD PTR [rax+0x8],rcx
   14005feab:	lea    rcx,[rsi+0x10]
   14005feaf:	mov    DWORD PTR [rbp+0x30],0x4c1
   14005feb6:	mov    DWORD PTR [rbp+0x28],0x9f
   14005febd:	call   0x14002ff30
   14005fec2:	lea    rdx,[rbp+0x30]
   14005fec6:	lea    rcx,[rsi+0x30]
   14005feca:	mov    rbx,rax
   14005fecd:	call   0x14002ffd0
   14005fed2:	mov    QWORD PTR [rbx],rax
   14005fed5:	cmp    DWORD PTR [rsi+0x8],0x1
   14005fed9:	jne    0x14006306d
   14005fedf:	lea    rdx,[rbp+0x28]
   14005fee3:	lea    rcx,[rsi+0x30]
   14005fee7:	mov    DWORD PTR [rbp+0x28],0x4c2
   14005feee:	call   0x14002ffd0
   14005fef3:	lea    rcx,[rip+0x16576]        # 0x140076470
   14005fefa:	lea    rdx,[rbp+0x28]
   14005fefe:	mov    DWORD PTR [rax],0xa1
   14005ff04:	mov    DWORD PTR [rax+0x4],0x4c2
   14005ff0b:	mov    QWORD PTR [rax+0x8],rcx
   14005ff0f:	lea    rcx,[rsi+0x10]
   14005ff13:	mov    DWORD PTR [rbp+0x30],0x4c2
   14005ff1a:	mov    DWORD PTR [rbp+0x28],0xa1
   14005ff21:	call   0x14002ff30
   14005ff26:	lea    rdx,[rbp+0x30]
   14005ff2a:	lea    rcx,[rsi+0x30]
   14005ff2e:	mov    rbx,rax
   14005ff31:	call   0x14002ffd0
   14005ff36:	mov    QWORD PTR [rbx],rax
   14005ff39:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ff3d:	jne    0x14006306d
   14005ff43:	lea    rdx,[rbp+0x28]
   14005ff47:	lea    rcx,[rsi+0x30]
   14005ff4b:	mov    DWORD PTR [rbp+0x28],0x4c3
   14005ff52:	call   0x14002ffd0
   14005ff57:	lea    rcx,[rip+0x1652a]        # 0x140076488
   14005ff5e:	lea    rdx,[rbp+0x28]
   14005ff62:	mov    DWORD PTR [rax],0x9d
   14005ff68:	mov    DWORD PTR [rax+0x4],0x4c3
   14005ff6f:	mov    QWORD PTR [rax+0x8],rcx
   14005ff73:	lea    rcx,[rsi+0x10]
   14005ff77:	mov    DWORD PTR [rbp+0x30],0x4c3
   14005ff7e:	mov    DWORD PTR [rbp+0x28],0x9d
   14005ff85:	call   0x14002ff30
   14005ff8a:	lea    rdx,[rbp+0x30]
   14005ff8e:	lea    rcx,[rsi+0x30]
   14005ff92:	mov    rbx,rax
   14005ff95:	call   0x14002ffd0
   14005ff9a:	mov    QWORD PTR [rbx],rax
   14005ff9d:	cmp    DWORD PTR [rsi+0x8],0x1
   14005ffa1:	jne    0x14006306d
   14005ffa7:	lea    rdx,[rbp+0x28]
   14005ffab:	lea    rcx,[rsi+0x30]
   14005ffaf:	mov    DWORD PTR [rbp+0x28],0x4c9
   14005ffb6:	call   0x14002ffd0
   14005ffbb:	lea    rcx,[rip+0x164de]        # 0x1400764a0
   14005ffc2:	lea    rdx,[rbp+0x28]
   14005ffc6:	mov    DWORD PTR [rax],0xa3
   14005ffcc:	mov    DWORD PTR [rax+0x4],0x4c9
   14005ffd3:	mov    QWORD PTR [rax+0x8],rcx
   14005ffd7:	lea    rcx,[rsi+0x10]
   14005ffdb:	mov    DWORD PTR [rbp+0x30],0x4c9
   14005ffe2:	mov    DWORD PTR [rbp+0x28],0xa3
   14005ffe9:	call   0x14002ff30
   14005ffee:	lea    rdx,[rbp+0x30]
   14005fff2:	lea    rcx,[rsi+0x30]
   14005fff6:	mov    rbx,rax
   14005fff9:	call   0x14002ffd0
   14005fffe:	mov    QWORD PTR [rbx],rax
   140060001:	cmp    DWORD PTR [rsi+0x8],0x1
   140060005:	jne    0x14006306d
   14006000b:	lea    rdx,[rbp+0x28]
   14006000f:	lea    rcx,[rsi+0x30]
   140060013:	mov    DWORD PTR [rbp+0x28],0x4ca
   14006001a:	call   0x14002ffd0
   14006001f:	lea    rcx,[rip+0x16492]        # 0x1400764b8
   140060026:	lea    rdx,[rbp+0x28]
   14006002a:	mov    DWORD PTR [rax],0xa5
   140060030:	mov    DWORD PTR [rax+0x4],0x4ca
   140060037:	mov    QWORD PTR [rax+0x8],rcx
   14006003b:	lea    rcx,[rsi+0x10]
   14006003f:	mov    DWORD PTR [rbp+0x30],0x4ca
   140060046:	mov    DWORD PTR [rbp+0x28],0xa5
   14006004d:	call   0x14002ff30
   140060052:	lea    rdx,[rbp+0x30]
   140060056:	lea    rcx,[rsi+0x30]
   14006005a:	mov    rbx,rax
   14006005d:	call   0x14002ffd0
   140060062:	mov    QWORD PTR [rbx],rax
   140060065:	cmp    DWORD PTR [rsi+0x8],0x1
   140060069:	jne    0x14006306d
   14006006f:	lea    rdx,[rbp+0x28]
   140060073:	lea    rcx,[rsi+0x30]
   140060077:	mov    DWORD PTR [rbp+0x28],0x4cb
   14006007e:	call   0x14002ffd0
   140060083:	lea    rcx,[rip+0x16446]        # 0x1400764d0
   14006008a:	lea    rdx,[rbp+0x28]
   14006008e:	mov    DWORD PTR [rax],0xa4
   140060094:	mov    DWORD PTR [rax+0x4],0x4cb
   14006009b:	mov    QWORD PTR [rax+0x8],rcx
   14006009f:	lea    rcx,[rsi+0x10]
   1400600a3:	mov    DWORD PTR [rbp+0x30],0x4cb
   1400600aa:	mov    DWORD PTR [rbp+0x28],0xa4
   1400600b1:	call   0x14002ff30
   1400600b6:	lea    rdx,[rbp+0x30]
   1400600ba:	lea    rcx,[rsi+0x30]
   1400600be:	mov    rbx,rax
   1400600c1:	call   0x14002ffd0
   1400600c6:	mov    QWORD PTR [rbx],rax
   1400600c9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400600cd:	jne    0x14006306d
   1400600d3:	lea    rdx,[rbp+0x28]
   1400600d7:	lea    rcx,[rsi+0x30]
   1400600db:	mov    DWORD PTR [rbp+0x28],0x4cc
   1400600e2:	call   0x14002ffd0
   1400600e7:	lea    rcx,[rip+0x163fa]        # 0x1400764e8
   1400600ee:	lea    rdx,[rbp+0x28]
   1400600f2:	mov    DWORD PTR [rax],0xa6
   1400600f8:	mov    DWORD PTR [rax+0x4],0x4cc
   1400600ff:	mov    QWORD PTR [rax+0x8],rcx
   140060103:	lea    rcx,[rsi+0x10]
   140060107:	mov    DWORD PTR [rbp+0x30],0x4cc
   14006010e:	mov    DWORD PTR [rbp+0x28],0xa6
   140060115:	call   0x14002ff30
   14006011a:	lea    rdx,[rbp+0x30]
   14006011e:	lea    rcx,[rsi+0x30]
   140060122:	mov    rbx,rax
   140060125:	call   0x14002ffd0
   14006012a:	mov    QWORD PTR [rbx],rax
   14006012d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060131:	jne    0x14006306d
   140060137:	lea    rdx,[rbp+0x28]
   14006013b:	lea    rcx,[rsi+0x30]
   14006013f:	mov    DWORD PTR [rbp+0x28],0x4cd
   140060146:	call   0x14002ffd0
   14006014b:	lea    rcx,[rip+0x163ae]        # 0x140076500
   140060152:	lea    rdx,[rbp+0x28]
   140060156:	mov    DWORD PTR [rax],0xa2
   14006015c:	mov    DWORD PTR [rax+0x4],0x4cd
   140060163:	mov    QWORD PTR [rax+0x8],rcx
   140060167:	lea    rcx,[rsi+0x10]
   14006016b:	mov    DWORD PTR [rbp+0x30],0x4cd
   140060172:	mov    DWORD PTR [rbp+0x28],0xa2
   140060179:	call   0x14002ff30
   14006017e:	lea    rdx,[rbp+0x30]
   140060182:	lea    rcx,[rsi+0x30]
   140060186:	mov    rbx,rax
   140060189:	call   0x14002ffd0
   14006018e:	mov    QWORD PTR [rbx],rax
   140060191:	cmp    DWORD PTR [rsi+0x8],0x1
   140060195:	jne    0x14006306d
   14006019b:	lea    rdx,[rbp+0x28]
   14006019f:	lea    rcx,[rsi+0x30]
   1400601a3:	mov    DWORD PTR [rbp+0x28],0x4d3
   1400601aa:	call   0x14002ffd0
   1400601af:	lea    rcx,[rip+0x16362]        # 0x140076518
   1400601b6:	lea    rdx,[rbp+0x28]
   1400601ba:	mov    DWORD PTR [rax],0xa8
   1400601c0:	mov    DWORD PTR [rax+0x4],0x4d3
   1400601c7:	mov    QWORD PTR [rax+0x8],rcx
   1400601cb:	lea    rcx,[rsi+0x10]
   1400601cf:	mov    DWORD PTR [rbp+0x30],0x4d3
   1400601d6:	mov    DWORD PTR [rbp+0x28],0xa8
   1400601dd:	call   0x14002ff30
   1400601e2:	lea    rdx,[rbp+0x30]
   1400601e6:	lea    rcx,[rsi+0x30]
   1400601ea:	mov    rbx,rax
   1400601ed:	call   0x14002ffd0
   1400601f2:	mov    QWORD PTR [rbx],rax
   1400601f5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400601f9:	jne    0x14006306d
   1400601ff:	lea    rdx,[rbp+0x28]
   140060203:	lea    rcx,[rsi+0x30]
   140060207:	mov    DWORD PTR [rbp+0x28],0x4d4
   14006020e:	call   0x14002ffd0
   140060213:	lea    rcx,[rip+0x16316]        # 0x140076530
   14006021a:	lea    rdx,[rbp+0x28]
   14006021e:	mov    DWORD PTR [rax],0xaa
   140060224:	mov    DWORD PTR [rax+0x4],0x4d4
   14006022b:	mov    QWORD PTR [rax+0x8],rcx
   14006022f:	lea    rcx,[rsi+0x10]
   140060233:	mov    DWORD PTR [rbp+0x30],0x4d4
   14006023a:	mov    DWORD PTR [rbp+0x28],0xaa
   140060241:	call   0x14002ff30
   140060246:	lea    rdx,[rbp+0x30]
   14006024a:	lea    rcx,[rsi+0x30]
   14006024e:	mov    rbx,rax
   140060251:	call   0x14002ffd0
   140060256:	mov    QWORD PTR [rbx],rax
   140060259:	cmp    DWORD PTR [rsi+0x8],0x1
   14006025d:	jne    0x14006306d
   140060263:	lea    rdx,[rbp+0x28]
   140060267:	lea    rcx,[rsi+0x30]
   14006026b:	mov    DWORD PTR [rbp+0x28],0x4d5
   140060272:	call   0x14002ffd0
   140060277:	lea    rcx,[rip+0x162ca]        # 0x140076548
   14006027e:	lea    rdx,[rbp+0x28]
   140060282:	mov    DWORD PTR [rax],0xa9
   140060288:	mov    DWORD PTR [rax+0x4],0x4d5
   14006028f:	mov    QWORD PTR [rax+0x8],rcx
   140060293:	lea    rcx,[rsi+0x10]
   140060297:	mov    DWORD PTR [rbp+0x30],0x4d5
   14006029e:	mov    DWORD PTR [rbp+0x28],0xa9
   1400602a5:	call   0x14002ff30
   1400602aa:	lea    rdx,[rbp+0x30]
   1400602ae:	lea    rcx,[rsi+0x30]
   1400602b2:	mov    rbx,rax
   1400602b5:	call   0x14002ffd0
   1400602ba:	mov    QWORD PTR [rbx],rax
   1400602bd:	cmp    DWORD PTR [rsi+0x8],0x1
   1400602c1:	jne    0x14006306d
   1400602c7:	lea    rdx,[rbp+0x28]
   1400602cb:	lea    rcx,[rsi+0x30]
   1400602cf:	mov    DWORD PTR [rbp+0x28],0x4d6
   1400602d6:	call   0x14002ffd0
   1400602db:	lea    rcx,[rip+0x1627e]        # 0x140076560
   1400602e2:	lea    rdx,[rbp+0x28]
   1400602e6:	mov    DWORD PTR [rax],0xab
   1400602ec:	mov    DWORD PTR [rax+0x4],0x4d6
   1400602f3:	mov    QWORD PTR [rax+0x8],rcx
   1400602f7:	lea    rcx,[rsi+0x10]
   1400602fb:	mov    DWORD PTR [rbp+0x30],0x4d6
   140060302:	mov    DWORD PTR [rbp+0x28],0xab
   140060309:	call   0x14002ff30
   14006030e:	lea    rdx,[rbp+0x30]
   140060312:	lea    rcx,[rsi+0x30]
   140060316:	mov    rbx,rax
   140060319:	call   0x14002ffd0
   14006031e:	mov    QWORD PTR [rbx],rax
   140060321:	cmp    DWORD PTR [rsi+0x8],0x1
   140060325:	jne    0x14006306d
   14006032b:	lea    rdx,[rbp+0x28]
   14006032f:	lea    rcx,[rsi+0x30]
   140060333:	mov    DWORD PTR [rbp+0x28],0x4d7
   14006033a:	call   0x14002ffd0
   14006033f:	lea    rcx,[rip+0x16232]        # 0x140076578
   140060346:	lea    rdx,[rbp+0x28]
   14006034a:	mov    DWORD PTR [rax],0xa7
   140060350:	mov    DWORD PTR [rax+0x4],0x4d7
   140060357:	mov    QWORD PTR [rax+0x8],rcx
   14006035b:	lea    rcx,[rsi+0x10]
   14006035f:	mov    DWORD PTR [rbp+0x30],0x4d7
   140060366:	mov    DWORD PTR [rbp+0x28],0xa7
   14006036d:	call   0x14002ff30
   140060372:	lea    rdx,[rbp+0x30]
   140060376:	lea    rcx,[rsi+0x30]
   14006037a:	mov    rbx,rax
   14006037d:	call   0x14002ffd0
   140060382:	mov    QWORD PTR [rbx],rax
   140060385:	cmp    DWORD PTR [rsi+0x8],0x1
   140060389:	jne    0x14006306d
   14006038f:	lea    rdx,[rbp+0x28]
   140060393:	lea    rcx,[rsi+0x30]
   140060397:	mov    DWORD PTR [rbp+0x28],0x4dd
   14006039e:	call   0x14002ffd0
   1400603a3:	lea    rcx,[rip+0x161e6]        # 0x140076590
   1400603aa:	lea    rdx,[rbp+0x28]
   1400603ae:	mov    DWORD PTR [rax],0xad
   1400603b4:	mov    DWORD PTR [rax+0x4],0x4dd
   1400603bb:	mov    QWORD PTR [rax+0x8],rcx
   1400603bf:	lea    rcx,[rsi+0x10]
   1400603c3:	mov    DWORD PTR [rbp+0x30],0x4dd
   1400603ca:	mov    DWORD PTR [rbp+0x28],0xad
   1400603d1:	call   0x14002ff30
   1400603d6:	lea    rdx,[rbp+0x30]
   1400603da:	lea    rcx,[rsi+0x30]
   1400603de:	mov    rbx,rax
   1400603e1:	call   0x14002ffd0
   1400603e6:	mov    QWORD PTR [rbx],rax
   1400603e9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400603ed:	jne    0x14006306d
   1400603f3:	lea    rdx,[rbp+0x28]
   1400603f7:	lea    rcx,[rsi+0x30]
   1400603fb:	mov    DWORD PTR [rbp+0x28],0x4de
   140060402:	call   0x14002ffd0
   140060407:	lea    rcx,[rip+0x1619a]        # 0x1400765a8
   14006040e:	lea    rdx,[rbp+0x28]
   140060412:	mov    DWORD PTR [rax],0xaf
   140060418:	mov    DWORD PTR [rax+0x4],0x4de
   14006041f:	mov    QWORD PTR [rax+0x8],rcx
   140060423:	lea    rcx,[rsi+0x10]
   140060427:	mov    DWORD PTR [rbp+0x30],0x4de
   14006042e:	mov    DWORD PTR [rbp+0x28],0xaf
   140060435:	call   0x14002ff30
   14006043a:	lea    rdx,[rbp+0x30]
   14006043e:	lea    rcx,[rsi+0x30]
   140060442:	mov    rbx,rax
   140060445:	call   0x14002ffd0
   14006044a:	mov    QWORD PTR [rbx],rax
   14006044d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060451:	jne    0x14006306d
   140060457:	lea    rdx,[rbp+0x28]
   14006045b:	lea    rcx,[rsi+0x30]
   14006045f:	mov    DWORD PTR [rbp+0x28],0x4df
   140060466:	call   0x14002ffd0
   14006046b:	lea    rcx,[rip+0x1614e]        # 0x1400765c0
   140060472:	lea    rdx,[rbp+0x28]
   140060476:	mov    DWORD PTR [rax],0xae
   14006047c:	mov    DWORD PTR [rax+0x4],0x4df
   140060483:	mov    QWORD PTR [rax+0x8],rcx
   140060487:	lea    rcx,[rsi+0x10]
   14006048b:	mov    DWORD PTR [rbp+0x30],0x4df
   140060492:	mov    DWORD PTR [rbp+0x28],0xae
   140060499:	call   0x14002ff30
   14006049e:	lea    rdx,[rbp+0x30]
   1400604a2:	lea    rcx,[rsi+0x30]
   1400604a6:	mov    rbx,rax
   1400604a9:	call   0x14002ffd0
   1400604ae:	mov    QWORD PTR [rbx],rax
   1400604b1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400604b5:	jne    0x14006306d
   1400604bb:	lea    rdx,[rbp+0x28]
   1400604bf:	lea    rcx,[rsi+0x30]
   1400604c3:	mov    DWORD PTR [rbp+0x28],0x4e0
   1400604ca:	call   0x14002ffd0
   1400604cf:	lea    rcx,[rip+0x16102]        # 0x1400765d8
   1400604d6:	lea    rdx,[rbp+0x28]
   1400604da:	mov    DWORD PTR [rax],0xb0
   1400604e0:	mov    DWORD PTR [rax+0x4],0x4e0
   1400604e7:	mov    QWORD PTR [rax+0x8],rcx
   1400604eb:	lea    rcx,[rsi+0x10]
   1400604ef:	mov    DWORD PTR [rbp+0x30],0x4e0
   1400604f6:	mov    DWORD PTR [rbp+0x28],0xb0
   1400604fd:	call   0x14002ff30
   140060502:	lea    rdx,[rbp+0x30]
   140060506:	lea    rcx,[rsi+0x30]
   14006050a:	mov    rbx,rax
   14006050d:	call   0x14002ffd0
   140060512:	mov    QWORD PTR [rbx],rax
   140060515:	cmp    DWORD PTR [rsi+0x8],0x1
   140060519:	jne    0x14006306d
   14006051f:	lea    rdx,[rbp+0x28]
   140060523:	lea    rcx,[rsi+0x30]
   140060527:	mov    DWORD PTR [rbp+0x28],0x4e1
   14006052e:	call   0x14002ffd0
   140060533:	lea    rcx,[rip+0x160b6]        # 0x1400765f0
   14006053a:	lea    rdx,[rbp+0x28]
   14006053e:	mov    DWORD PTR [rax],0xac
   140060544:	mov    DWORD PTR [rax+0x4],0x4e1
   14006054b:	mov    QWORD PTR [rax+0x8],rcx
   14006054f:	lea    rcx,[rsi+0x10]
   140060553:	mov    DWORD PTR [rbp+0x30],0x4e1
   14006055a:	mov    DWORD PTR [rbp+0x28],0xac
   140060561:	call   0x14002ff30
   140060566:	lea    rdx,[rbp+0x30]
   14006056a:	lea    rcx,[rsi+0x30]
   14006056e:	mov    rbx,rax
   140060571:	call   0x14002ffd0
   140060576:	mov    QWORD PTR [rbx],rax
   140060579:	cmp    DWORD PTR [rsi+0x8],0x1
   14006057d:	jne    0x14006306d
   140060583:	lea    rdx,[rbp+0x28]
   140060587:	lea    rcx,[rsi+0x30]
   14006058b:	mov    DWORD PTR [rbp+0x28],0x4e7
   140060592:	call   0x14002ffd0
   140060597:	lea    rcx,[rip+0x1606a]        # 0x140076608
   14006059e:	lea    rdx,[rbp+0x28]
   1400605a2:	mov    DWORD PTR [rax],0xb2
   1400605a8:	mov    DWORD PTR [rax+0x4],0x4e7
   1400605af:	mov    QWORD PTR [rax+0x8],rcx
   1400605b3:	lea    rcx,[rsi+0x10]
   1400605b7:	mov    DWORD PTR [rbp+0x30],0x4e7
   1400605be:	mov    DWORD PTR [rbp+0x28],0xb2
   1400605c5:	call   0x14002ff30
   1400605ca:	lea    rdx,[rbp+0x30]
   1400605ce:	lea    rcx,[rsi+0x30]
   1400605d2:	mov    rbx,rax
   1400605d5:	call   0x14002ffd0
   1400605da:	mov    QWORD PTR [rbx],rax
   1400605dd:	cmp    DWORD PTR [rsi+0x8],0x1
   1400605e1:	jne    0x14006306d
   1400605e7:	lea    rdx,[rbp+0x28]
   1400605eb:	lea    rcx,[rsi+0x30]
   1400605ef:	mov    DWORD PTR [rbp+0x28],0x4e8
   1400605f6:	call   0x14002ffd0
   1400605fb:	lea    rcx,[rip+0x1601e]        # 0x140076620
   140060602:	lea    rdx,[rbp+0x28]
   140060606:	mov    DWORD PTR [rax],0xb4
   14006060c:	mov    DWORD PTR [rax+0x4],0x4e8
   140060613:	mov    QWORD PTR [rax+0x8],rcx
   140060617:	lea    rcx,[rsi+0x10]
   14006061b:	mov    DWORD PTR [rbp+0x30],0x4e8
   140060622:	mov    DWORD PTR [rbp+0x28],0xb4
   140060629:	call   0x14002ff30
   14006062e:	lea    rdx,[rbp+0x30]
   140060632:	lea    rcx,[rsi+0x30]
   140060636:	mov    rbx,rax
   140060639:	call   0x14002ffd0
   14006063e:	mov    QWORD PTR [rbx],rax
   140060641:	cmp    DWORD PTR [rsi+0x8],0x1
   140060645:	jne    0x14006306d
   14006064b:	lea    rdx,[rbp+0x28]
   14006064f:	lea    rcx,[rsi+0x30]
   140060653:	mov    DWORD PTR [rbp+0x28],0x4e9
   14006065a:	call   0x14002ffd0
   14006065f:	lea    rcx,[rip+0x15fd2]        # 0x140076638
   140060666:	lea    rdx,[rbp+0x28]
   14006066a:	mov    DWORD PTR [rax],0xb3
   140060670:	mov    DWORD PTR [rax+0x4],0x4e9
   140060677:	mov    QWORD PTR [rax+0x8],rcx
   14006067b:	lea    rcx,[rsi+0x10]
   14006067f:	mov    DWORD PTR [rbp+0x30],0x4e9
   140060686:	mov    DWORD PTR [rbp+0x28],0xb3
   14006068d:	call   0x14002ff30
   140060692:	lea    rdx,[rbp+0x30]
   140060696:	lea    rcx,[rsi+0x30]
   14006069a:	mov    rbx,rax
   14006069d:	call   0x14002ffd0
   1400606a2:	mov    QWORD PTR [rbx],rax
   1400606a5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400606a9:	jne    0x14006306d
   1400606af:	lea    rdx,[rbp+0x28]
   1400606b3:	lea    rcx,[rsi+0x30]
   1400606b7:	mov    DWORD PTR [rbp+0x28],0x4ea
   1400606be:	call   0x14002ffd0
   1400606c3:	lea    rcx,[rip+0x15f86]        # 0x140076650
   1400606ca:	lea    rdx,[rbp+0x28]
   1400606ce:	mov    DWORD PTR [rax],0xb5
   1400606d4:	mov    DWORD PTR [rax+0x4],0x4ea
   1400606db:	mov    QWORD PTR [rax+0x8],rcx
   1400606df:	lea    rcx,[rsi+0x10]
   1400606e3:	mov    DWORD PTR [rbp+0x30],0x4ea
   1400606ea:	mov    DWORD PTR [rbp+0x28],0xb5
   1400606f1:	call   0x14002ff30
   1400606f6:	lea    rdx,[rbp+0x30]
   1400606fa:	lea    rcx,[rsi+0x30]
   1400606fe:	mov    rbx,rax
   140060701:	call   0x14002ffd0
   140060706:	mov    QWORD PTR [rbx],rax
   140060709:	cmp    DWORD PTR [rsi+0x8],0x1
   14006070d:	jne    0x14006306d
   140060713:	lea    rdx,[rbp+0x28]
   140060717:	lea    rcx,[rsi+0x30]
   14006071b:	mov    DWORD PTR [rbp+0x28],0x4eb
   140060722:	call   0x14002ffd0
   140060727:	lea    rcx,[rip+0x15f3a]        # 0x140076668
   14006072e:	lea    rdx,[rbp+0x28]
   140060732:	mov    DWORD PTR [rax],0xb1
   140060738:	mov    DWORD PTR [rax+0x4],0x4eb
   14006073f:	mov    QWORD PTR [rax+0x8],rcx
   140060743:	lea    rcx,[rsi+0x10]
   140060747:	mov    DWORD PTR [rbp+0x30],0x4eb
   14006074e:	mov    DWORD PTR [rbp+0x28],0xb1
   140060755:	call   0x14002ff30
   14006075a:	lea    rdx,[rbp+0x30]
   14006075e:	lea    rcx,[rsi+0x30]
   140060762:	mov    rbx,rax
   140060765:	call   0x14002ffd0
   14006076a:	mov    QWORD PTR [rbx],rax
   14006076d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060771:	jne    0x14006306d
   140060777:	lea    rdx,[rbp+0x28]
   14006077b:	lea    rcx,[rsi+0x30]
   14006077f:	mov    DWORD PTR [rbp+0x28],0x45c
   140060786:	call   0x14002ffd0
   14006078b:	lea    rcx,[rip+0x15eee]        # 0x140076680
   140060792:	lea    rdx,[rbp+0x28]
   140060796:	mov    DWORD PTR [rax],0xc4
   14006079c:	mov    DWORD PTR [rax+0x4],0x45c
   1400607a3:	mov    QWORD PTR [rax+0x8],rcx
   1400607a7:	lea    rcx,[rsi+0x10]
   1400607ab:	mov    DWORD PTR [rbp+0x30],0x45c
   1400607b2:	mov    DWORD PTR [rbp+0x28],0xc4
   1400607b9:	call   0x14002ff30
   1400607be:	lea    rdx,[rbp+0x30]
   1400607c2:	lea    rcx,[rsi+0x30]
   1400607c6:	mov    rbx,rax
   1400607c9:	call   0x14002ffd0
   1400607ce:	mov    QWORD PTR [rbx],rax
   1400607d1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400607d5:	jne    0x14006306d
   1400607db:	lea    rdx,[rbp+0x28]
   1400607df:	lea    rcx,[rsi+0x30]
   1400607e3:	mov    DWORD PTR [rbp+0x28],0x460
   1400607ea:	call   0x14002ffd0
   1400607ef:	lea    rcx,[rip+0x15ea2]        # 0x140076698
   1400607f6:	lea    rdx,[rbp+0x28]
   1400607fa:	mov    DWORD PTR [rax],0xc5
   140060800:	mov    DWORD PTR [rax+0x4],0x460
   140060807:	mov    QWORD PTR [rax+0x8],rcx
   14006080b:	lea    rcx,[rsi+0x10]
   14006080f:	mov    DWORD PTR [rbp+0x30],0x460
   140060816:	mov    DWORD PTR [rbp+0x28],0xc5
   14006081d:	call   0x14002ff30
   140060822:	lea    rdx,[rbp+0x30]
   140060826:	lea    rcx,[rsi+0x30]
   14006082a:	mov    rbx,rax
   14006082d:	call   0x14002ffd0
   140060832:	mov    QWORD PTR [rbx],rax
   140060835:	cmp    DWORD PTR [rsi+0x8],0x1
   140060839:	jne    0x14006306d
   14006083f:	lea    rdx,[rbp+0x28]
   140060843:	lea    rcx,[rsi+0x30]
   140060847:	mov    DWORD PTR [rbp+0x28],0x45f
   14006084e:	call   0x14002ffd0
   140060853:	lea    rcx,[rip+0x15e56]        # 0x1400766b0
   14006085a:	lea    rdx,[rbp+0x28]
   14006085e:	mov    DWORD PTR [rax],0xc8
   140060864:	mov    DWORD PTR [rax+0x4],0x45f
   14006086b:	mov    QWORD PTR [rax+0x8],rcx
   14006086f:	lea    rcx,[rsi+0x10]
   140060873:	mov    DWORD PTR [rbp+0x30],0x45f
   14006087a:	mov    DWORD PTR [rbp+0x28],0xc8
   140060881:	call   0x14002ff30
   140060886:	lea    rdx,[rbp+0x30]
   14006088a:	lea    rcx,[rsi+0x30]
   14006088e:	mov    rbx,rax
   140060891:	call   0x14002ffd0
   140060896:	mov    QWORD PTR [rbx],rax
   140060899:	cmp    DWORD PTR [rsi+0x8],0x1
   14006089d:	jne    0x14006306d
   1400608a3:	lea    rdx,[rbp+0x28]
   1400608a7:	lea    rcx,[rsi+0x30]
   1400608ab:	mov    DWORD PTR [rbp+0x28],0x45d
   1400608b2:	call   0x14002ffd0
   1400608b7:	lea    rcx,[rip+0x15e0a]        # 0x1400766c8
   1400608be:	lea    rdx,[rbp+0x28]
   1400608c2:	mov    DWORD PTR [rax],0xc6
   1400608c8:	mov    DWORD PTR [rax+0x4],0x45d
   1400608cf:	mov    QWORD PTR [rax+0x8],rcx
   1400608d3:	lea    rcx,[rsi+0x10]
   1400608d7:	mov    DWORD PTR [rbp+0x30],0x45d
   1400608de:	mov    DWORD PTR [rbp+0x28],0xc6
   1400608e5:	call   0x14002ff30
   1400608ea:	lea    rdx,[rbp+0x30]
   1400608ee:	lea    rcx,[rsi+0x30]
   1400608f2:	mov    rbx,rax
   1400608f5:	call   0x14002ffd0
   1400608fa:	mov    QWORD PTR [rbx],rax
   1400608fd:	cmp    DWORD PTR [rsi+0x8],0x1
   140060901:	jne    0x14006306d
   140060907:	lea    rdx,[rbp+0x28]
   14006090b:	lea    rcx,[rsi+0x30]
   14006090f:	mov    DWORD PTR [rbp+0x28],0x45e
   140060916:	call   0x14002ffd0
   14006091b:	lea    rcx,[rip+0x15dbe]        # 0x1400766e0
   140060922:	lea    rdx,[rbp+0x28]
   140060926:	mov    DWORD PTR [rax],0xc7
   14006092c:	mov    DWORD PTR [rax+0x4],0x45e
   140060933:	mov    QWORD PTR [rax+0x8],rcx
   140060937:	lea    rcx,[rsi+0x10]
   14006093b:	mov    DWORD PTR [rbp+0x30],0x45e
   140060942:	mov    DWORD PTR [rbp+0x28],0xc7
   140060949:	call   0x14002ff30
   14006094e:	lea    rdx,[rbp+0x30]
   140060952:	lea    rcx,[rsi+0x30]
   140060956:	mov    rbx,rax
   140060959:	call   0x14002ffd0
   14006095e:	mov    QWORD PTR [rbx],rax
   140060961:	cmp    DWORD PTR [rsi+0x8],0x1
   140060965:	jne    0x14006306d
   14006096b:	lea    rdx,[rbp+0x28]
   14006096f:	lea    rcx,[rsi+0x30]
   140060973:	mov    DWORD PTR [rbp+0x28],0x7d1
   14006097a:	call   0x14002ffd0
   14006097f:	lea    rcx,[rip+0x15d72]        # 0x1400766f8
   140060986:	lea    rdx,[rbp+0x28]
   14006098a:	mov    DWORD PTR [rax],0xb7
   140060990:	mov    DWORD PTR [rax+0x4],0x7d1
   140060997:	mov    QWORD PTR [rax+0x8],rcx
   14006099b:	lea    rcx,[rsi+0x10]
   14006099f:	mov    DWORD PTR [rbp+0x30],0x7d1
   1400609a6:	mov    DWORD PTR [rbp+0x28],0xb7
   1400609ad:	call   0x14002ff30
   1400609b2:	lea    rdx,[rbp+0x30]
   1400609b6:	lea    rcx,[rsi+0x30]
   1400609ba:	mov    rbx,rax
   1400609bd:	call   0x14002ffd0
   1400609c2:	mov    QWORD PTR [rbx],rax
   1400609c5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400609c9:	jne    0x14006306d
   1400609cf:	lea    rdx,[rbp+0x28]
   1400609d3:	lea    rcx,[rsi+0x30]
   1400609d7:	mov    DWORD PTR [rbp+0x28],0x7d2
   1400609de:	call   0x14002ffd0
   1400609e3:	lea    rcx,[rip+0x15d2e]        # 0x140076718
   1400609ea:	lea    rdx,[rbp+0x28]
   1400609ee:	mov    DWORD PTR [rax],0xb8
   1400609f4:	mov    DWORD PTR [rax+0x4],0x7d2
   1400609fb:	mov    QWORD PTR [rax+0x8],rcx
   1400609ff:	lea    rcx,[rsi+0x10]
   140060a03:	mov    DWORD PTR [rbp+0x30],0x7d2
   140060a0a:	mov    DWORD PTR [rbp+0x28],0xb8
   140060a11:	call   0x14002ff30
   140060a16:	lea    rdx,[rbp+0x30]
   140060a1a:	lea    rcx,[rsi+0x30]
   140060a1e:	mov    rbx,rax
   140060a21:	call   0x14002ffd0
   140060a26:	mov    QWORD PTR [rbx],rax
   140060a29:	cmp    DWORD PTR [rsi+0x8],0x1
   140060a2d:	jne    0x14006306d
   140060a33:	lea    rdx,[rbp+0x28]
   140060a37:	lea    rcx,[rsi+0x30]
   140060a3b:	mov    DWORD PTR [rbp+0x28],0x834
   140060a42:	call   0x14002ffd0
   140060a47:	lea    rcx,[rip+0x15cea]        # 0x140076738
   140060a4e:	lea    rdx,[rbp+0x28]
   140060a52:	mov    DWORD PTR [rax],0x151
   140060a58:	mov    DWORD PTR [rax+0x4],0x834
   140060a5f:	mov    QWORD PTR [rax+0x8],rcx
   140060a63:	lea    rcx,[rsi+0x10]
   140060a67:	mov    DWORD PTR [rbp+0x30],0x834
   140060a6e:	mov    DWORD PTR [rbp+0x28],0x151
   140060a75:	call   0x14002ff30
   140060a7a:	lea    rdx,[rbp+0x30]
   140060a7e:	lea    rcx,[rsi+0x30]
   140060a82:	mov    rbx,rax
   140060a85:	call   0x14002ffd0
   140060a8a:	mov    QWORD PTR [rbx],rax
   140060a8d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060a91:	jne    0x14006306d
   140060a97:	lea    rdx,[rbp+0x28]
   140060a9b:	lea    rcx,[rsi+0x30]
   140060a9f:	mov    DWORD PTR [rbp+0x28],0x440
   140060aa6:	call   0x14002ffd0
   140060aab:	lea    rcx,[rip+0x15c9e]        # 0x140076750
   140060ab2:	lea    rdx,[rbp+0x28]
   140060ab6:	mov    DWORD PTR [rax],0x126
   140060abc:	mov    DWORD PTR [rax+0x4],0x440
   140060ac3:	mov    QWORD PTR [rax+0x8],rcx
   140060ac7:	lea    rcx,[rsi+0x10]
   140060acb:	mov    DWORD PTR [rbp+0x30],0x440
   140060ad2:	mov    DWORD PTR [rbp+0x28],0x126
   140060ad9:	call   0x14002ff30
   140060ade:	lea    rdx,[rbp+0x30]
   140060ae2:	lea    rcx,[rsi+0x30]
   140060ae6:	mov    rbx,rax
   140060ae9:	call   0x14002ffd0
   140060aee:	mov    QWORD PTR [rbx],rax
   140060af1:	cmp    DWORD PTR [rsi+0x8],0x1
   140060af5:	jne    0x14006306d
   140060afb:	lea    rdx,[rbp+0x28]
   140060aff:	lea    rcx,[rsi+0x30]
   140060b03:	mov    DWORD PTR [rbp+0x28],0x441
   140060b0a:	call   0x14002ffd0
   140060b0f:	lea    rcx,[rip+0x15c5a]        # 0x140076770
   140060b16:	lea    rdx,[rbp+0x28]
   140060b1a:	mov    DWORD PTR [rax],0x125
   140060b20:	mov    DWORD PTR [rax+0x4],0x441
   140060b27:	mov    QWORD PTR [rax+0x8],rcx
   140060b2b:	lea    rcx,[rsi+0x10]
   140060b2f:	mov    DWORD PTR [rbp+0x30],0x441
   140060b36:	mov    DWORD PTR [rbp+0x28],0x125
   140060b3d:	call   0x14002ff30
   140060b42:	lea    rdx,[rbp+0x30]
   140060b46:	lea    rcx,[rsi+0x30]
   140060b4a:	mov    rbx,rax
   140060b4d:	call   0x14002ffd0
   140060b52:	mov    QWORD PTR [rbx],rax
   140060b55:	cmp    DWORD PTR [rsi+0x8],0x1
   140060b59:	jne    0x14006306d
   140060b5f:	lea    rdx,[rbp+0x28]
   140060b63:	lea    rcx,[rsi+0x30]
   140060b67:	mov    DWORD PTR [rbp+0x28],0x443
   140060b6e:	call   0x14002ffd0
   140060b73:	lea    rcx,[rip+0x15c16]        # 0x140076790
   140060b7a:	lea    rdx,[rbp+0x28]
   140060b7e:	mov    DWORD PTR [rax],0x129
   140060b84:	mov    DWORD PTR [rax+0x4],0x443
   140060b8b:	mov    QWORD PTR [rax+0x8],rcx
   140060b8f:	lea    rcx,[rsi+0x10]
   140060b93:	mov    DWORD PTR [rbp+0x30],0x443
   140060b9a:	mov    DWORD PTR [rbp+0x28],0x129
   140060ba1:	call   0x14002ff30
   140060ba6:	lea    rdx,[rbp+0x30]
   140060baa:	lea    rcx,[rsi+0x30]
   140060bae:	mov    rbx,rax
   140060bb1:	call   0x14002ffd0
   140060bb6:	mov    QWORD PTR [rbx],rax
   140060bb9:	cmp    DWORD PTR [rsi+0x8],0x1
   140060bbd:	jne    0x14006306d
   140060bc3:	lea    rdx,[rbp+0x28]
   140060bc7:	lea    rcx,[rsi+0x30]
   140060bcb:	mov    DWORD PTR [rbp+0x28],0x444
   140060bd2:	call   0x14002ffd0
   140060bd7:	lea    rcx,[rip+0x15bd2]        # 0x1400767b0
   140060bde:	lea    rdx,[rbp+0x28]
   140060be2:	mov    DWORD PTR [rax],0x12a
   140060be8:	mov    DWORD PTR [rax+0x4],0x444
   140060bef:	mov    QWORD PTR [rax+0x8],rcx
   140060bf3:	lea    rcx,[rsi+0x10]
   140060bf7:	mov    DWORD PTR [rbp+0x30],0x444
   140060bfe:	mov    DWORD PTR [rbp+0x28],0x12a
   140060c05:	call   0x14002ff30
   140060c0a:	lea    rdx,[rbp+0x30]
   140060c0e:	lea    rcx,[rsi+0x30]
   140060c12:	mov    rbx,rax
   140060c15:	call   0x14002ffd0
   140060c1a:	mov    QWORD PTR [rbx],rax
   140060c1d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060c21:	jne    0x14006306d
   140060c27:	lea    rdx,[rbp+0x28]
   140060c2b:	lea    rcx,[rsi+0x30]
   140060c2f:	mov    DWORD PTR [rbp+0x28],0x445
   140060c36:	call   0x14002ffd0
   140060c3b:	lea    rcx,[rip+0x15b8e]        # 0x1400767d0
   140060c42:	lea    rdx,[rbp+0x28]
   140060c46:	mov    DWORD PTR [rax],0x127
   140060c4c:	mov    DWORD PTR [rax+0x4],0x445
   140060c53:	mov    QWORD PTR [rax+0x8],rcx
   140060c57:	lea    rcx,[rsi+0x10]
   140060c5b:	mov    DWORD PTR [rbp+0x30],0x445
   140060c62:	mov    DWORD PTR [rbp+0x28],0x127
   140060c69:	call   0x14002ff30
   140060c6e:	lea    rdx,[rbp+0x30]
   140060c72:	lea    rcx,[rsi+0x30]
   140060c76:	mov    rbx,rax
   140060c79:	call   0x14002ffd0
   140060c7e:	mov    QWORD PTR [rbx],rax
   140060c81:	cmp    DWORD PTR [rsi+0x8],0x1
   140060c85:	jne    0x14006306d
   140060c8b:	lea    rdx,[rbp+0x28]
   140060c8f:	lea    rcx,[rsi+0x30]
   140060c93:	mov    DWORD PTR [rbp+0x28],0x446
   140060c9a:	call   0x14002ffd0
   140060c9f:	lea    rcx,[rip+0x15b4a]        # 0x1400767f0
   140060ca6:	lea    rdx,[rbp+0x28]
   140060caa:	mov    DWORD PTR [rax],0x128
   140060cb0:	mov    DWORD PTR [rax+0x4],0x446
   140060cb7:	mov    QWORD PTR [rax+0x8],rcx
   140060cbb:	lea    rcx,[rsi+0x10]
   140060cbf:	mov    DWORD PTR [rbp+0x30],0x446
   140060cc6:	mov    DWORD PTR [rbp+0x28],0x128
   140060ccd:	call   0x14002ff30
   140060cd2:	lea    rdx,[rbp+0x30]
   140060cd6:	lea    rcx,[rsi+0x30]
   140060cda:	mov    rbx,rax
   140060cdd:	call   0x14002ffd0
   140060ce2:	mov    QWORD PTR [rbx],rax
   140060ce5:	cmp    DWORD PTR [rsi+0x8],0x1
   140060ce9:	jne    0x14006306d
   140060cef:	lea    rdx,[rbp+0x28]
   140060cf3:	lea    rcx,[rsi+0x30]
   140060cf7:	mov    DWORD PTR [rbp+0x28],0x447
   140060cfe:	call   0x14002ffd0
   140060d03:	lea    rcx,[rip+0x15b06]        # 0x140076810
   140060d0a:	lea    rdx,[rbp+0x28]
   140060d0e:	mov    DWORD PTR [rax],0x124
   140060d14:	mov    DWORD PTR [rax+0x4],0x447
   140060d1b:	mov    QWORD PTR [rax+0x8],rcx
   140060d1f:	lea    rcx,[rsi+0x10]
   140060d23:	mov    DWORD PTR [rbp+0x30],0x447
   140060d2a:	mov    DWORD PTR [rbp+0x28],0x124
   140060d31:	call   0x14002ff30
   140060d36:	lea    rdx,[rbp+0x30]
   140060d3a:	lea    rcx,[rsi+0x30]
   140060d3e:	mov    rbx,rax
   140060d41:	call   0x14002ffd0
   140060d46:	mov    QWORD PTR [rbx],rax
   140060d49:	cmp    DWORD PTR [rsi+0x8],0x1
   140060d4d:	jne    0x14006306d
   140060d53:	lea    rdx,[rbp+0x28]
   140060d57:	lea    rcx,[rsi+0x30]
   140060d5b:	mov    DWORD PTR [rbp+0x28],0x448
   140060d62:	call   0x14002ffd0
   140060d67:	lea    rcx,[rip+0x15aba]        # 0x140076828
   140060d6e:	lea    rdx,[rbp+0x28]
   140060d72:	mov    DWORD PTR [rax],0x12b
   140060d78:	mov    DWORD PTR [rax+0x4],0x448
   140060d7f:	mov    QWORD PTR [rax+0x8],rcx
   140060d83:	lea    rcx,[rsi+0x10]
   140060d87:	mov    DWORD PTR [rbp+0x30],0x448
   140060d8e:	mov    DWORD PTR [rbp+0x28],0x12b
   140060d95:	call   0x14002ff30
   140060d9a:	lea    rdx,[rbp+0x30]
   140060d9e:	lea    rcx,[rsi+0x30]
   140060da2:	mov    rbx,rax
   140060da5:	call   0x14002ffd0
   140060daa:	mov    QWORD PTR [rbx],rax
   140060dad:	cmp    DWORD PTR [rsi+0x8],0x1
   140060db1:	jne    0x14006306d
   140060db7:	lea    rdx,[rbp+0x28]
   140060dbb:	lea    rcx,[rsi+0x30]
   140060dbf:	mov    DWORD PTR [rbp+0x28],0x449
   140060dc6:	call   0x14002ffd0
   140060dcb:	lea    rcx,[rip+0x15a76]        # 0x140076848
   140060dd2:	lea    rdx,[rbp+0x28]
   140060dd6:	mov    DWORD PTR [rax],0x12c
   140060ddc:	mov    DWORD PTR [rax+0x4],0x449
   140060de3:	mov    QWORD PTR [rax+0x8],rcx
   140060de7:	lea    rcx,[rsi+0x10]
   140060deb:	mov    DWORD PTR [rbp+0x30],0x449
   140060df2:	mov    DWORD PTR [rbp+0x28],0x12c
   140060df9:	call   0x14002ff30
   140060dfe:	lea    rdx,[rbp+0x30]
   140060e02:	lea    rcx,[rsi+0x30]
   140060e06:	mov    rbx,rax
   140060e09:	call   0x14002ffd0
   140060e0e:	mov    QWORD PTR [rbx],rax
   140060e11:	cmp    DWORD PTR [rsi+0x8],0x1
   140060e15:	jne    0x14006306d
   140060e1b:	lea    rdx,[rbp+0x28]
   140060e1f:	lea    rcx,[rsi+0x30]
   140060e23:	mov    DWORD PTR [rbp+0x28],0x484
   140060e2a:	call   0x14002ffd0
   140060e2f:	lea    rcx,[rip+0x15a32]        # 0x140076868
   140060e36:	lea    rdx,[rbp+0x28]
   140060e3a:	mov    DWORD PTR [rax],0xc2
   140060e40:	mov    DWORD PTR [rax+0x4],0x484
   140060e47:	mov    QWORD PTR [rax+0x8],rcx
   140060e4b:	lea    rcx,[rsi+0x10]
   140060e4f:	mov    DWORD PTR [rbp+0x30],0x484
   140060e56:	mov    DWORD PTR [rbp+0x28],0xc2
   140060e5d:	call   0x14002ff30
   140060e62:	lea    rdx,[rbp+0x30]
   140060e66:	lea    rcx,[rsi+0x30]
   140060e6a:	mov    rbx,rax
   140060e6d:	call   0x14002ffd0
   140060e72:	mov    QWORD PTR [rbx],rax
   140060e75:	cmp    DWORD PTR [rsi+0x8],0x1
   140060e79:	jne    0x14006306d
   140060e7f:	lea    rdx,[rbp+0x28]
   140060e83:	lea    rcx,[rsi+0x30]
   140060e87:	mov    DWORD PTR [rbp+0x28],0x485
   140060e8e:	call   0x14002ffd0
   140060e93:	lea    rcx,[rip+0x159f6]        # 0x140076890
   140060e9a:	lea    rdx,[rbp+0x28]
   140060e9e:	mov    DWORD PTR [rax],0x135
   140060ea4:	mov    DWORD PTR [rax+0x4],0x485
   140060eab:	mov    QWORD PTR [rax+0x8],rcx
   140060eaf:	lea    rcx,[rsi+0x10]
   140060eb3:	mov    DWORD PTR [rbp+0x30],0x485
   140060eba:	mov    DWORD PTR [rbp+0x28],0x135
   140060ec1:	call   0x14002ff30
   140060ec6:	lea    rdx,[rbp+0x30]
   140060eca:	lea    rcx,[rsi+0x30]
   140060ece:	mov    rbx,rax
   140060ed1:	call   0x14002ffd0
   140060ed6:	mov    QWORD PTR [rbx],rax
   140060ed9:	cmp    DWORD PTR [rsi+0x8],0x1
   140060edd:	jne    0x14006306d
   140060ee3:	lea    rdx,[rbp+0x28]
   140060ee7:	lea    rcx,[rsi+0x30]
   140060eeb:	mov    DWORD PTR [rbp+0x28],0x486
   140060ef2:	call   0x14002ffd0
   140060ef7:	lea    rcx,[rip+0x159aa]        # 0x1400768a8
   140060efe:	lea    rdx,[rbp+0x28]
   140060f02:	mov    DWORD PTR [rax],0x14b
   140060f08:	mov    DWORD PTR [rax+0x4],0x486
   140060f0f:	mov    QWORD PTR [rax+0x8],rcx
   140060f13:	lea    rcx,[rsi+0x10]
   140060f17:	mov    DWORD PTR [rbp+0x30],0x486
   140060f1e:	mov    DWORD PTR [rbp+0x28],0x14b
   140060f25:	call   0x14002ff30
   140060f2a:	lea    rdx,[rbp+0x30]
   140060f2e:	lea    rcx,[rsi+0x30]
   140060f32:	mov    rbx,rax
   140060f35:	call   0x14002ffd0
   140060f3a:	mov    QWORD PTR [rbx],rax
   140060f3d:	cmp    DWORD PTR [rsi+0x8],0x1
   140060f41:	jne    0x14006306d
   140060f47:	lea    rdx,[rbp+0x28]
   140060f4b:	lea    rcx,[rsi+0x30]
   140060f4f:	mov    DWORD PTR [rbp+0x28],0x640
   140060f56:	call   0x14002ffd0
   140060f5b:	lea    rcx,[rip+0x15966]        # 0x1400768c8
   140060f62:	lea    rdx,[rbp+0x28]
   140060f66:	mov    DWORD PTR [rax],0x134
   140060f6c:	mov    DWORD PTR [rax+0x4],0x640
   140060f73:	mov    QWORD PTR [rax+0x8],rcx
   140060f77:	lea    rcx,[rsi+0x10]
   140060f7b:	mov    DWORD PTR [rbp+0x30],0x640
   140060f82:	mov    DWORD PTR [rbp+0x28],0x134
   140060f89:	call   0x14002ff30
   140060f8e:	lea    rdx,[rbp+0x30]
   140060f92:	lea    rcx,[rsi+0x30]
   140060f96:	mov    rbx,rax
   140060f99:	call   0x14002ffd0
   140060f9e:	mov    QWORD PTR [rbx],rax
   140060fa1:	cmp    DWORD PTR [rsi+0x8],0x1
   140060fa5:	jne    0x14006306d
   140060fab:	lea    rdx,[rbp+0x28]
   140060faf:	lea    rcx,[rsi+0x30]
   140060fb3:	mov    DWORD PTR [rbp+0x28],0x64a
   140060fba:	call   0x14002ffd0
   140060fbf:	lea    rcx,[rip+0x1592a]        # 0x1400768f0
   140060fc6:	lea    rdx,[rbp+0x28]
   140060fca:	mov    DWORD PTR [rax],0x136
   140060fd0:	mov    DWORD PTR [rax+0x4],0x64a
   140060fd7:	mov    QWORD PTR [rax+0x8],rcx
   140060fdb:	lea    rcx,[rsi+0x10]
   140060fdf:	mov    DWORD PTR [rbp+0x30],0x64a
   140060fe6:	mov    DWORD PTR [rbp+0x28],0x136
   140060fed:	call   0x14002ff30
   140060ff2:	lea    rdx,[rbp+0x30]
   140060ff6:	lea    rcx,[rsi+0x30]
   140060ffa:	mov    rbx,rax
   140060ffd:	call   0x14002ffd0
   140061002:	mov    QWORD PTR [rbx],rax
   140061005:	cmp    DWORD PTR [rsi+0x8],0x1
   140061009:	jne    0x14006306d
   14006100f:	lea    rdx,[rbp+0x28]
   140061013:	lea    rcx,[rsi+0x30]
   140061017:	mov    DWORD PTR [rbp+0x28],0x64b
   14006101e:	call   0x14002ffd0
   140061023:	lea    rcx,[rip+0x158de]        # 0x140076908
   14006102a:	lea    rdx,[rbp+0x28]
   14006102e:	mov    DWORD PTR [rax],0x137
   140061034:	mov    DWORD PTR [rax+0x4],0x64b
   14006103b:	mov    QWORD PTR [rax+0x8],rcx
   14006103f:	lea    rcx,[rsi+0x10]
   140061043:	mov    DWORD PTR [rbp+0x30],0x64b
   14006104a:	mov    DWORD PTR [rbp+0x28],0x137
   140061051:	call   0x14002ff30
   140061056:	lea    rdx,[rbp+0x30]
   14006105a:	lea    rcx,[rsi+0x30]
   14006105e:	mov    rbx,rax
   140061061:	call   0x14002ffd0
   140061066:	mov    QWORD PTR [rbx],rax
   140061069:	cmp    DWORD PTR [rsi+0x8],0x1
   14006106d:	jne    0x14006306d
   140061073:	lea    rdx,[rbp+0x28]
   140061077:	lea    rcx,[rsi+0x30]
   14006107b:	mov    DWORD PTR [rbp+0x28],0x64c
   140061082:	call   0x14002ffd0
   140061087:	lea    rcx,[rip+0x1588a]        # 0x140076918
   14006108e:	lea    rdx,[rbp+0x28]
   140061092:	mov    DWORD PTR [rax],0x138
   140061098:	mov    DWORD PTR [rax+0x4],0x64c
   14006109f:	mov    QWORD PTR [rax+0x8],rcx
   1400610a3:	lea    rcx,[rsi+0x10]
   1400610a7:	mov    DWORD PTR [rbp+0x30],0x64c
   1400610ae:	mov    DWORD PTR [rbp+0x28],0x138
   1400610b5:	call   0x14002ff30
   1400610ba:	lea    rdx,[rbp+0x30]
   1400610be:	lea    rcx,[rsi+0x30]
   1400610c2:	mov    rbx,rax
   1400610c5:	call   0x14002ffd0
   1400610ca:	mov    QWORD PTR [rbx],rax
   1400610cd:	cmp    DWORD PTR [rsi+0x8],0x1
   1400610d1:	jne    0x14006306d
   1400610d7:	lea    rdx,[rbp+0x28]
   1400610db:	lea    rcx,[rsi+0x30]
   1400610df:	mov    DWORD PTR [rbp+0x28],0x64d
   1400610e6:	call   0x14002ffd0
   1400610eb:	lea    rcx,[rip+0x15846]        # 0x140076938
   1400610f2:	lea    rdx,[rbp+0x28]
   1400610f6:	mov    DWORD PTR [rax],0x139
   1400610fc:	mov    DWORD PTR [rax+0x4],0x64d
   140061103:	mov    QWORD PTR [rax+0x8],rcx
   140061107:	lea    rcx,[rsi+0x10]
   14006110b:	mov    DWORD PTR [rbp+0x30],0x64d
   140061112:	mov    DWORD PTR [rbp+0x28],0x139
   140061119:	call   0x14002ff30
   14006111e:	lea    rdx,[rbp+0x30]
   140061122:	lea    rcx,[rsi+0x30]
   140061126:	mov    rbx,rax
   140061129:	call   0x14002ffd0
   14006112e:	mov    QWORD PTR [rbx],rax
   140061131:	cmp    DWORD PTR [rsi+0x8],0x1
   140061135:	jne    0x14006306d
   14006113b:	lea    rdx,[rbp+0x28]
   14006113f:	lea    rcx,[rsi+0x30]
   140061143:	mov    DWORD PTR [rbp+0x28],0x64e
   14006114a:	call   0x14002ffd0
   14006114f:	lea    rcx,[rip+0x15802]        # 0x140076958
   140061156:	lea    rdx,[rbp+0x28]
   14006115a:	mov    DWORD PTR [rax],0x13a
   140061160:	mov    DWORD PTR [rax+0x4],0x64e
   140061167:	mov    QWORD PTR [rax+0x8],rcx
   14006116b:	lea    rcx,[rsi+0x10]
   14006116f:	mov    DWORD PTR [rbp+0x30],0x64e
   140061176:	mov    DWORD PTR [rbp+0x28],0x13a
   14006117d:	call   0x14002ff30
   140061182:	lea    rdx,[rbp+0x30]
   140061186:	lea    rcx,[rsi+0x30]
   14006118a:	mov    rbx,rax
   14006118d:	call   0x14002ffd0
   140061192:	mov    QWORD PTR [rbx],rax
   140061195:	cmp    DWORD PTR [rsi+0x8],0x1
   140061199:	jne    0x14006306d
   14006119f:	lea    rdx,[rbp+0x28]
   1400611a3:	lea    rcx,[rsi+0x30]
   1400611a7:	mov    DWORD PTR [rbp+0x28],0x708
   1400611ae:	call   0x14002ffd0
   1400611b3:	lea    rcx,[rip+0x157be]        # 0x140076978
   1400611ba:	lea    rdx,[rbp+0x28]
   1400611be:	mov    DWORD PTR [rax],0x194
   1400611c4:	mov    DWORD PTR [rax+0x4],0x708
   1400611cb:	mov    QWORD PTR [rax+0x8],rcx
   1400611cf:	lea    rcx,[rsi+0x10]
   1400611d3:	mov    DWORD PTR [rbp+0x30],0x708
   1400611da:	mov    DWORD PTR [rbp+0x28],0x194
   1400611e1:	call   0x14002ff30
   1400611e6:	lea    rdx,[rbp+0x30]
   1400611ea:	lea    rcx,[rsi+0x30]
   1400611ee:	mov    rbx,rax
   1400611f1:	call   0x14002ffd0
   1400611f6:	mov    QWORD PTR [rbx],rax
   1400611f9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400611fd:	jne    0x14006306d
   140061203:	lea    rdx,[rbp+0x28]
   140061207:	lea    rcx,[rsi+0x30]
   14006120b:	mov    DWORD PTR [rbp+0x28],0x709
   140061212:	call   0x14002ffd0
   140061217:	lea    rcx,[rip+0x1577a]        # 0x140076998
   14006121e:	lea    rdx,[rbp+0x28]
   140061222:	mov    DWORD PTR [rax],0x195
   140061228:	mov    DWORD PTR [rax+0x4],0x709
   14006122f:	mov    QWORD PTR [rax+0x8],rcx
   140061233:	lea    rcx,[rsi+0x10]
   140061237:	mov    DWORD PTR [rbp+0x30],0x709
   14006123e:	mov    DWORD PTR [rbp+0x28],0x195
   140061245:	call   0x14002ff30
   14006124a:	lea    rdx,[rbp+0x30]
   14006124e:	lea    rcx,[rsi+0x30]
   140061252:	mov    rbx,rax
   140061255:	call   0x14002ffd0
   14006125a:	mov    QWORD PTR [rbx],rax
   14006125d:	cmp    DWORD PTR [rsi+0x8],0x1
   140061261:	jne    0x14006306d
   140061267:	lea    rdx,[rbp+0x28]
   14006126b:	lea    rcx,[rsi+0x30]
   14006126f:	mov    DWORD PTR [rbp+0x28],0x70a
   140061276:	call   0x14002ffd0
   14006127b:	lea    rcx,[rip+0x1572e]        # 0x1400769b0
   140061282:	lea    rdx,[rbp+0x28]
   140061286:	mov    DWORD PTR [rax],0x193
   14006128c:	mov    DWORD PTR [rax+0x4],0x70a
   140061293:	mov    QWORD PTR [rax+0x8],rcx
   140061297:	lea    rcx,[rsi+0x10]
   14006129b:	mov    DWORD PTR [rbp+0x30],0x70a
   1400612a2:	mov    DWORD PTR [rbp+0x28],0x193
   1400612a9:	call   0x14002ff30
   1400612ae:	lea    rdx,[rbp+0x30]
   1400612b2:	lea    rcx,[rsi+0x30]
   1400612b6:	mov    rbx,rax
   1400612b9:	call   0x14002ffd0
   1400612be:	mov    QWORD PTR [rbx],rax
   1400612c1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400612c5:	jne    0x14006306d
   1400612cb:	lea    rdx,[rbp+0x28]
   1400612cf:	lea    rcx,[rsi+0x30]
   1400612d3:	mov    DWORD PTR [rbp+0x28],0x70b
   1400612da:	call   0x14002ffd0
   1400612df:	lea    rcx,[rip+0x156e2]        # 0x1400769c8
   1400612e6:	lea    rdx,[rbp+0x28]
   1400612ea:	mov    DWORD PTR [rax],0x196
   1400612f0:	mov    DWORD PTR [rax+0x4],0x70b
   1400612f7:	mov    QWORD PTR [rax+0x8],rcx
   1400612fb:	lea    rcx,[rsi+0x10]
   1400612ff:	mov    DWORD PTR [rbp+0x30],0x70b
   140061306:	mov    DWORD PTR [rbp+0x28],0x196
   14006130d:	call   0x14002ff30
   140061312:	lea    rdx,[rbp+0x30]
   140061316:	lea    rcx,[rsi+0x30]
   14006131a:	mov    rbx,rax
   14006131d:	call   0x14002ffd0
   140061322:	mov    QWORD PTR [rbx],rax
   140061325:	cmp    DWORD PTR [rsi+0x8],0x1
   140061329:	jne    0x14006306d
   14006132f:	lea    rdx,[rbp+0x28]
   140061333:	lea    rcx,[rsi+0x30]
   140061337:	mov    DWORD PTR [rbp+0x28],0x70c
   14006133e:	call   0x14002ffd0
   140061343:	lea    rcx,[rip+0x1569e]        # 0x1400769e8
   14006134a:	lea    rdx,[rbp+0x28]
   14006134e:	mov    DWORD PTR [rax],0x197
   140061354:	mov    DWORD PTR [rax+0x4],0x70c
   14006135b:	mov    QWORD PTR [rax+0x8],rcx
   14006135f:	lea    rcx,[rsi+0x10]
   140061363:	mov    DWORD PTR [rbp+0x30],0x70c
   14006136a:	mov    DWORD PTR [rbp+0x28],0x197
   140061371:	call   0x14002ff30
   140061376:	lea    rdx,[rbp+0x30]
   14006137a:	lea    rcx,[rsi+0x30]
   14006137e:	mov    rbx,rax
   140061381:	call   0x14002ffd0
   140061386:	mov    QWORD PTR [rbx],rax
   140061389:	cmp    DWORD PTR [rsi+0x8],0x1
   14006138d:	jne    0x14006306d
   140061393:	lea    rdx,[rbp+0x28]
   140061397:	lea    rcx,[rsi+0x30]
   14006139b:	mov    DWORD PTR [rbp+0x28],0x70d
   1400613a2:	call   0x14002ffd0
   1400613a7:	lea    rcx,[rip+0x1565a]        # 0x140076a08
   1400613ae:	lea    rdx,[rbp+0x28]
   1400613b2:	mov    DWORD PTR [rax],0x1a1
   1400613b8:	mov    DWORD PTR [rax+0x4],0x70d
   1400613bf:	mov    QWORD PTR [rax+0x8],rcx
   1400613c3:	lea    rcx,[rsi+0x10]
   1400613c7:	mov    DWORD PTR [rbp+0x30],0x70d
   1400613ce:	mov    DWORD PTR [rbp+0x28],0x1a1
   1400613d5:	call   0x14002ff30
   1400613da:	lea    rdx,[rbp+0x30]
   1400613de:	lea    rcx,[rsi+0x30]
   1400613e2:	mov    rbx,rax
   1400613e5:	call   0x14002ffd0
   1400613ea:	mov    QWORD PTR [rbx],rax
   1400613ed:	cmp    DWORD PTR [rsi+0x8],0x1
   1400613f1:	jne    0x14006306d
   1400613f7:	lea    rdx,[rbp+0x28]
   1400613fb:	lea    rcx,[rsi+0x30]
   1400613ff:	mov    DWORD PTR [rbp+0x28],0x70e
   140061406:	call   0x14002ffd0
   14006140b:	lea    rcx,[rip+0x15616]        # 0x140076a28
   140061412:	lea    rdx,[rbp+0x28]
   140061416:	mov    DWORD PTR [rax],0x198
   14006141c:	mov    DWORD PTR [rax+0x4],0x70e
   140061423:	mov    QWORD PTR [rax+0x8],rcx
   140061427:	lea    rcx,[rsi+0x10]
   14006142b:	mov    DWORD PTR [rbp+0x30],0x70e
   140061432:	mov    DWORD PTR [rbp+0x28],0x198
   140061439:	call   0x14002ff30
   14006143e:	lea    rdx,[rbp+0x30]
   140061442:	lea    rcx,[rsi+0x30]
   140061446:	mov    rbx,rax
   140061449:	call   0x14002ffd0
   14006144e:	mov    QWORD PTR [rbx],rax
   140061451:	cmp    DWORD PTR [rsi+0x8],0x1
   140061455:	jne    0x14006306d
   14006145b:	lea    rdx,[rbp+0x28]
   14006145f:	lea    rcx,[rsi+0x30]
   140061463:	mov    DWORD PTR [rbp+0x28],0x70f
   14006146a:	call   0x14002ffd0
   14006146f:	lea    rcx,[rip+0x155d2]        # 0x140076a48
   140061476:	lea    rdx,[rbp+0x28]
   14006147a:	mov    DWORD PTR [rax],0x199
   140061480:	mov    DWORD PTR [rax+0x4],0x70f
   140061487:	mov    QWORD PTR [rax+0x8],rcx
   14006148b:	lea    rcx,[rsi+0x10]
   14006148f:	mov    DWORD PTR [rbp+0x30],0x70f
   140061496:	mov    DWORD PTR [rbp+0x28],0x199
   14006149d:	call   0x14002ff30
   1400614a2:	lea    rdx,[rbp+0x30]
   1400614a6:	lea    rcx,[rsi+0x30]
   1400614aa:	mov    rbx,rax
   1400614ad:	call   0x14002ffd0
   1400614b2:	mov    QWORD PTR [rbx],rax
   1400614b5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400614b9:	jne    0x14006306d
   1400614bf:	lea    rdx,[rbp+0x28]
   1400614c3:	lea    rcx,[rsi+0x30]
   1400614c7:	mov    DWORD PTR [rbp+0x28],0x710
   1400614ce:	call   0x14002ffd0
   1400614d3:	lea    rcx,[rip+0x15586]        # 0x140076a60
   1400614da:	lea    rdx,[rbp+0x28]
   1400614de:	mov    DWORD PTR [rax],0x19a
   1400614e4:	mov    DWORD PTR [rax+0x4],0x710
   1400614eb:	mov    QWORD PTR [rax+0x8],rcx
   1400614ef:	lea    rcx,[rsi+0x10]
   1400614f3:	mov    DWORD PTR [rbp+0x30],0x710
   1400614fa:	mov    DWORD PTR [rbp+0x28],0x19a
   140061501:	call   0x14002ff30
   140061506:	lea    rdx,[rbp+0x30]
   14006150a:	lea    rcx,[rsi+0x30]
   14006150e:	mov    rbx,rax
   140061511:	call   0x14002ffd0
   140061516:	mov    QWORD PTR [rbx],rax
   140061519:	cmp    DWORD PTR [rsi+0x8],0x1
   14006151d:	jne    0x14006306d
   140061523:	lea    rdx,[rbp+0x28]
   140061527:	lea    rcx,[rsi+0x30]
   14006152b:	mov    DWORD PTR [rbp+0x28],0x711
   140061532:	call   0x14002ffd0
   140061537:	lea    rcx,[rip+0x15542]        # 0x140076a80
   14006153e:	lea    rdx,[rbp+0x28]
   140061542:	mov    DWORD PTR [rax],0x19b
   140061548:	mov    DWORD PTR [rax+0x4],0x711
   14006154f:	mov    QWORD PTR [rax+0x8],rcx
   140061553:	lea    rcx,[rsi+0x10]
   140061557:	mov    DWORD PTR [rbp+0x30],0x711
   14006155e:	mov    DWORD PTR [rbp+0x28],0x19b
   140061565:	call   0x14002ff30
   14006156a:	lea    rdx,[rbp+0x30]
   14006156e:	lea    rcx,[rsi+0x30]
   140061572:	mov    rbx,rax
   140061575:	call   0x14002ffd0
   14006157a:	mov    QWORD PTR [rbx],rax
   14006157d:	cmp    DWORD PTR [rsi+0x8],0x1
   140061581:	jne    0x14006306d
   140061587:	lea    rdx,[rbp+0x28]
   14006158b:	lea    rcx,[rsi+0x30]
   14006158f:	mov    DWORD PTR [rbp+0x28],0x712
   140061596:	call   0x14002ffd0
   14006159b:	lea    rcx,[rip+0x154fe]        # 0x140076aa0
   1400615a2:	lea    rdx,[rbp+0x28]
   1400615a6:	mov    DWORD PTR [rax],0x19c
   1400615ac:	mov    DWORD PTR [rax+0x4],0x712
   1400615b3:	mov    QWORD PTR [rax+0x8],rcx
   1400615b7:	lea    rcx,[rsi+0x10]
   1400615bb:	mov    DWORD PTR [rbp+0x30],0x712
   1400615c2:	mov    DWORD PTR [rbp+0x28],0x19c
   1400615c9:	call   0x14002ff30
   1400615ce:	lea    rdx,[rbp+0x30]
   1400615d2:	lea    rcx,[rsi+0x30]
   1400615d6:	mov    rbx,rax
   1400615d9:	call   0x14002ffd0
   1400615de:	mov    QWORD PTR [rbx],rax
   1400615e1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400615e5:	jne    0x14006306d
   1400615eb:	lea    rdx,[rbp+0x28]
   1400615ef:	lea    rcx,[rsi+0x30]
   1400615f3:	mov    DWORD PTR [rbp+0x28],0x713
   1400615fa:	call   0x14002ffd0
   1400615ff:	lea    rcx,[rip+0x154c2]        # 0x140076ac8
   140061606:	lea    rdx,[rbp+0x28]
   14006160a:	mov    DWORD PTR [rax],0x19d
   140061610:	mov    DWORD PTR [rax+0x4],0x713
   140061617:	mov    QWORD PTR [rax+0x8],rcx
   14006161b:	lea    rcx,[rsi+0x10]
   14006161f:	mov    DWORD PTR [rbp+0x30],0x713
   140061626:	mov    DWORD PTR [rbp+0x28],0x19d
   14006162d:	call   0x14002ff30
   140061632:	lea    rdx,[rbp+0x30]
   140061636:	lea    rcx,[rsi+0x30]
   14006163a:	mov    rbx,rax
   14006163d:	call   0x14002ffd0
   140061642:	mov    QWORD PTR [rbx],rax
   140061645:	cmp    DWORD PTR [rsi+0x8],0x1
   140061649:	jne    0x14006306d
   14006164f:	lea    rdx,[rbp+0x28]
   140061653:	lea    rcx,[rsi+0x30]
   140061657:	mov    DWORD PTR [rbp+0x28],0x71a
   14006165e:	call   0x14002ffd0
   140061663:	lea    rcx,[rip+0x15486]        # 0x140076af0
   14006166a:	lea    rdx,[rbp+0x28]
   14006166e:	mov    DWORD PTR [rax],0x19e
   140061674:	mov    DWORD PTR [rax+0x4],0x71a
   14006167b:	mov    QWORD PTR [rax+0x8],rcx
   14006167f:	lea    rcx,[rsi+0x10]
   140061683:	mov    DWORD PTR [rbp+0x30],0x71a
   14006168a:	mov    DWORD PTR [rbp+0x28],0x19e
   140061691:	call   0x14002ff30
   140061696:	lea    rdx,[rbp+0x30]
   14006169a:	lea    rcx,[rsi+0x30]
   14006169e:	mov    rbx,rax
   1400616a1:	call   0x14002ffd0
   1400616a6:	mov    QWORD PTR [rbx],rax
   1400616a9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400616ad:	jne    0x14006306d
   1400616b3:	lea    rdx,[rbp+0x28]
   1400616b7:	lea    rcx,[rsi+0x30]
   1400616bb:	mov    DWORD PTR [rbp+0x28],0x715
   1400616c2:	call   0x14002ffd0
   1400616c7:	lea    rcx,[rip+0x15442]        # 0x140076b10
   1400616ce:	lea    rdx,[rbp+0x28]
   1400616d2:	mov    DWORD PTR [rax],0x19f
   1400616d8:	mov    DWORD PTR [rax+0x4],0x715
   1400616df:	mov    QWORD PTR [rax+0x8],rcx
   1400616e3:	lea    rcx,[rsi+0x10]
   1400616e7:	mov    DWORD PTR [rbp+0x30],0x715
   1400616ee:	mov    DWORD PTR [rbp+0x28],0x19f
   1400616f5:	call   0x14002ff30
   1400616fa:	lea    rdx,[rbp+0x30]
   1400616fe:	lea    rcx,[rsi+0x30]
   140061702:	mov    rbx,rax
   140061705:	call   0x14002ffd0
   14006170a:	mov    QWORD PTR [rbx],rax
   14006170d:	cmp    DWORD PTR [rsi+0x8],0x1
   140061711:	jne    0x14006306d
   140061717:	lea    rdx,[rbp+0x28]
   14006171b:	lea    rcx,[rsi+0x30]
   14006171f:	mov    DWORD PTR [rbp+0x28],0x716
   140061726:	call   0x14002ffd0
   14006172b:	lea    rcx,[rip+0x153f6]        # 0x140076b28
   140061732:	lea    rdx,[rbp+0x28]
   140061736:	mov    DWORD PTR [rax],0x1a0
   14006173c:	mov    DWORD PTR [rax+0x4],0x716
   140061743:	mov    QWORD PTR [rax+0x8],rcx
   140061747:	lea    rcx,[rsi+0x10]
   14006174b:	mov    DWORD PTR [rbp+0x30],0x716
   140061752:	mov    DWORD PTR [rbp+0x28],0x1a0
   140061759:	call   0x14002ff30
   14006175e:	lea    rdx,[rbp+0x30]
   140061762:	lea    rcx,[rsi+0x30]
   140061766:	mov    rbx,rax
   140061769:	call   0x14002ffd0
   14006176e:	mov    QWORD PTR [rbx],rax
   140061771:	cmp    DWORD PTR [rsi+0x8],0x1
   140061775:	jne    0x14006306d
   14006177b:	lea    rdx,[rbp+0x28]
   14006177f:	lea    rcx,[rsi+0x30]
   140061783:	mov    DWORD PTR [rbp+0x28],0x726
   14006178a:	call   0x14002ffd0
   14006178f:	lea    rcx,[rip+0x153aa]        # 0x140076b40
   140061796:	lea    rdx,[rbp+0x28]
   14006179a:	mov    DWORD PTR [rax],0x1a9
   1400617a0:	mov    DWORD PTR [rax+0x4],0x726
   1400617a7:	mov    QWORD PTR [rax+0x8],rcx
   1400617ab:	lea    rcx,[rsi+0x10]
   1400617af:	mov    DWORD PTR [rbp+0x30],0x726
   1400617b6:	mov    DWORD PTR [rbp+0x28],0x1a9
   1400617bd:	call   0x14002ff30
   1400617c2:	lea    rdx,[rbp+0x30]
   1400617c6:	lea    rcx,[rsi+0x30]
   1400617ca:	mov    rbx,rax
   1400617cd:	call   0x14002ffd0
   1400617d2:	mov    QWORD PTR [rbx],rax
   1400617d5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400617d9:	jne    0x14006306d
   1400617df:	lea    rdx,[rbp+0x28]
   1400617e3:	lea    rcx,[rsi+0x30]
   1400617e7:	mov    DWORD PTR [rbp+0x28],0x866
   1400617ee:	call   0x14002ffd0
   1400617f3:	lea    rcx,[rip+0x1535e]        # 0x140076b58
   1400617fa:	lea    rdx,[rbp+0x28]
   1400617fe:	mov    DWORD PTR [rax],0x1a3
   140061804:	mov    DWORD PTR [rax+0x4],0x866
   14006180b:	mov    QWORD PTR [rax+0x8],rcx
   14006180f:	lea    rcx,[rsi+0x10]
   140061813:	mov    DWORD PTR [rbp+0x30],0x866
   14006181a:	mov    DWORD PTR [rbp+0x28],0x1a3
   140061821:	call   0x14002ff30
   140061826:	lea    rdx,[rbp+0x30]
   14006182a:	lea    rcx,[rsi+0x30]
   14006182e:	mov    rbx,rax
   140061831:	call   0x14002ffd0
   140061836:	mov    QWORD PTR [rbx],rax
   140061839:	cmp    DWORD PTR [rsi+0x8],0x1
   14006183d:	jne    0x14006306d
   140061843:	lea    rdx,[rbp+0x28]
   140061847:	lea    rcx,[rsi+0x30]
   14006184b:	mov    DWORD PTR [rbp+0x28],0x67c
   140061852:	call   0x14002ffd0
   140061857:	lea    rcx,[rip+0x1531a]        # 0x140076b78
   14006185e:	lea    rdx,[rbp+0x28]
   140061862:	mov    DWORD PTR [rax],0x157
   140061868:	mov    DWORD PTR [rax+0x4],0x67c
   14006186f:	mov    QWORD PTR [rax+0x8],rcx
   140061873:	lea    rcx,[rsi+0x10]
   140061877:	mov    DWORD PTR [rbp+0x30],0x67c
   14006187e:	mov    DWORD PTR [rbp+0x28],0x157
   140061885:	call   0x14002ff30
   14006188a:	lea    rdx,[rbp+0x30]
   14006188e:	lea    rcx,[rsi+0x30]
   140061892:	mov    rbx,rax
   140061895:	call   0x14002ffd0
   14006189a:	mov    QWORD PTR [rbx],rax
   14006189d:	cmp    DWORD PTR [rsi+0x8],0x1
   1400618a1:	jne    0x14006306d
   1400618a7:	lea    rdx,[rbp+0x28]
   1400618ab:	lea    rcx,[rsi+0x30]
   1400618af:	mov    DWORD PTR [rbp+0x28],0x67d
   1400618b6:	call   0x14002ffd0
   1400618bb:	lea    rcx,[rip+0x152ce]        # 0x140076b90
   1400618c2:	lea    rdx,[rbp+0x28]
   1400618c6:	mov    DWORD PTR [rax],0x159
   1400618cc:	mov    DWORD PTR [rax+0x4],0x67d
   1400618d3:	mov    QWORD PTR [rax+0x8],rcx
   1400618d7:	lea    rcx,[rsi+0x10]
   1400618db:	mov    DWORD PTR [rbp+0x30],0x67d
   1400618e2:	mov    DWORD PTR [rbp+0x28],0x159
   1400618e9:	call   0x14002ff30
   1400618ee:	lea    rdx,[rbp+0x30]
   1400618f2:	lea    rcx,[rsi+0x30]
   1400618f6:	mov    rbx,rax
   1400618f9:	call   0x14002ffd0
   1400618fe:	mov    QWORD PTR [rbx],rax
   140061901:	cmp    DWORD PTR [rsi+0x8],0x1
   140061905:	jne    0x14006306d
   14006190b:	lea    rdx,[rbp+0x28]
   14006190f:	lea    rcx,[rsi+0x30]
   140061913:	mov    DWORD PTR [rbp+0x28],0x67e
   14006191a:	call   0x14002ffd0
   14006191f:	lea    rcx,[rip+0x15282]        # 0x140076ba8
   140061926:	lea    rdx,[rbp+0x28]
   14006192a:	mov    DWORD PTR [rax],0x15a
   140061930:	mov    DWORD PTR [rax+0x4],0x67e
   140061937:	mov    QWORD PTR [rax+0x8],rcx
   14006193b:	lea    rcx,[rsi+0x10]
   14006193f:	mov    DWORD PTR [rbp+0x30],0x67e
   140061946:	mov    DWORD PTR [rbp+0x28],0x15a
   14006194d:	call   0x14002ff30
   140061952:	lea    rdx,[rbp+0x30]
   140061956:	lea    rcx,[rsi+0x30]
   14006195a:	mov    rbx,rax
   14006195d:	call   0x14002ffd0
   140061962:	mov    QWORD PTR [rbx],rax
   140061965:	cmp    DWORD PTR [rsi+0x8],0x1
   140061969:	jne    0x14006306d
   14006196f:	lea    rdx,[rbp+0x28]
   140061973:	lea    rcx,[rsi+0x30]
   140061977:	mov    DWORD PTR [rbp+0x28],0x67f
   14006197e:	call   0x14002ffd0
   140061983:	lea    rcx,[rip+0x15236]        # 0x140076bc0
   14006198a:	lea    rdx,[rbp+0x28]
   14006198e:	mov    DWORD PTR [rax],0x15b
   140061994:	mov    DWORD PTR [rax+0x4],0x67f
   14006199b:	mov    QWORD PTR [rax+0x8],rcx
   14006199f:	lea    rcx,[rsi+0x10]
   1400619a3:	mov    DWORD PTR [rbp+0x30],0x67f
   1400619aa:	mov    DWORD PTR [rbp+0x28],0x15b
   1400619b1:	call   0x14002ff30
   1400619b6:	lea    rdx,[rbp+0x30]
   1400619ba:	lea    rcx,[rsi+0x30]
   1400619be:	mov    rbx,rax
   1400619c1:	call   0x14002ffd0
   1400619c6:	mov    QWORD PTR [rbx],rax
   1400619c9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400619cd:	jne    0x14006306d
   1400619d3:	lea    rdx,[rbp+0x28]
   1400619d7:	lea    rcx,[rsi+0x30]
   1400619db:	mov    DWORD PTR [rbp+0x28],0x680
   1400619e2:	call   0x14002ffd0
   1400619e7:	lea    rcx,[rip+0x151ea]        # 0x140076bd8
   1400619ee:	lea    rdx,[rbp+0x28]
   1400619f2:	mov    DWORD PTR [rax],0x15c
   1400619f8:	mov    DWORD PTR [rax+0x4],0x680
   1400619ff:	mov    QWORD PTR [rax+0x8],rcx
   140061a03:	lea    rcx,[rsi+0x10]
   140061a07:	mov    DWORD PTR [rbp+0x30],0x680
   140061a0e:	mov    DWORD PTR [rbp+0x28],0x15c
   140061a15:	call   0x14002ff30
   140061a1a:	lea    rdx,[rbp+0x30]
   140061a1e:	lea    rcx,[rsi+0x30]
   140061a22:	mov    rbx,rax
   140061a25:	call   0x14002ffd0
   140061a2a:	mov    QWORD PTR [rbx],rax
   140061a2d:	cmp    DWORD PTR [rsi+0x8],0x1
   140061a31:	jne    0x14006306d
   140061a37:	lea    rdx,[rbp+0x28]
   140061a3b:	lea    rcx,[rsi+0x30]
   140061a3f:	mov    DWORD PTR [rbp+0x28],0x681
   140061a46:	call   0x14002ffd0
   140061a4b:	lea    rcx,[rip+0x1519e]        # 0x140076bf0
   140061a52:	lea    rdx,[rbp+0x28]
   140061a56:	mov    DWORD PTR [rax],0x15d
   140061a5c:	mov    DWORD PTR [rax+0x4],0x681
   140061a63:	mov    QWORD PTR [rax+0x8],rcx
   140061a67:	lea    rcx,[rsi+0x10]
   140061a6b:	mov    DWORD PTR [rbp+0x30],0x681
   140061a72:	mov    DWORD PTR [rbp+0x28],0x15d
   140061a79:	call   0x14002ff30
   140061a7e:	lea    rdx,[rbp+0x30]
   140061a82:	lea    rcx,[rsi+0x30]
   140061a86:	mov    rbx,rax
   140061a89:	call   0x14002ffd0
   140061a8e:	mov    QWORD PTR [rbx],rax
   140061a91:	cmp    DWORD PTR [rsi+0x8],0x1
   140061a95:	jne    0x14006306d
   140061a9b:	lea    rdx,[rbp+0x28]
   140061a9f:	lea    rcx,[rsi+0x30]
   140061aa3:	mov    DWORD PTR [rbp+0x28],0x682
   140061aaa:	call   0x14002ffd0
   140061aaf:	lea    rcx,[rip+0x1515a]        # 0x140076c10
   140061ab6:	lea    rdx,[rbp+0x28]
   140061aba:	mov    DWORD PTR [rax],0x15e
   140061ac0:	mov    DWORD PTR [rax+0x4],0x682
   140061ac7:	mov    QWORD PTR [rax+0x8],rcx
   140061acb:	lea    rcx,[rsi+0x10]
   140061acf:	mov    DWORD PTR [rbp+0x30],0x682
   140061ad6:	mov    DWORD PTR [rbp+0x28],0x15e
   140061add:	call   0x14002ff30
   140061ae2:	lea    rdx,[rbp+0x30]
   140061ae6:	lea    rcx,[rsi+0x30]
   140061aea:	mov    rbx,rax
   140061aed:	call   0x14002ffd0
   140061af2:	mov    QWORD PTR [rbx],rax
   140061af5:	cmp    DWORD PTR [rsi+0x8],0x1
   140061af9:	jne    0x14006306d
   140061aff:	lea    rdx,[rbp+0x28]
   140061b03:	lea    rcx,[rsi+0x30]
   140061b07:	mov    DWORD PTR [rbp+0x28],0x6b0
   140061b0e:	call   0x14002ffd0
   140061b13:	lea    rcx,[rip+0x15106]        # 0x140076c20
   140061b1a:	lea    rdx,[rbp+0x28]
   140061b1e:	mov    DWORD PTR [rax],0x1aa
   140061b24:	mov    DWORD PTR [rax+0x4],0x6b0
   140061b2b:	mov    QWORD PTR [rax+0x8],rcx
   140061b2f:	lea    rcx,[rsi+0x10]
   140061b33:	mov    DWORD PTR [rbp+0x30],0x6b0
   140061b3a:	mov    DWORD PTR [rbp+0x28],0x1aa
   140061b41:	call   0x14002ff30
   140061b46:	lea    rdx,[rbp+0x30]
   140061b4a:	lea    rcx,[rsi+0x30]
   140061b4e:	mov    rbx,rax
   140061b51:	call   0x14002ffd0
   140061b56:	mov    QWORD PTR [rbx],rax
   140061b59:	cmp    DWORD PTR [rsi+0x8],0x1
   140061b5d:	jne    0x14006306d
   140061b63:	lea    rdx,[rbp+0x28]
   140061b67:	lea    rcx,[rsi+0x30]
   140061b6b:	mov    DWORD PTR [rbp+0x28],0x683
   140061b72:	call   0x14002ffd0
   140061b77:	lea    rcx,[rip+0x150c2]        # 0x140076c40
   140061b7e:	lea    rdx,[rbp+0x28]
   140061b82:	mov    DWORD PTR [rax],0x15f
   140061b88:	mov    DWORD PTR [rax+0x4],0x683
   140061b8f:	mov    QWORD PTR [rax+0x8],rcx
   140061b93:	lea    rcx,[rsi+0x10]
   140061b97:	mov    DWORD PTR [rbp+0x30],0x683
   140061b9e:	mov    DWORD PTR [rbp+0x28],0x15f
   140061ba5:	call   0x14002ff30
   140061baa:	lea    rdx,[rbp+0x30]
   140061bae:	lea    rcx,[rsi+0x30]
   140061bb2:	mov    rbx,rax
   140061bb5:	call   0x14002ffd0
   140061bba:	mov    QWORD PTR [rbx],rax
   140061bbd:	cmp    DWORD PTR [rsi+0x8],0x1
   140061bc1:	jne    0x14006306d
   140061bc7:	lea    rdx,[rbp+0x28]
   140061bcb:	lea    rcx,[rsi+0x30]
   140061bcf:	mov    DWORD PTR [rbp+0x28],0x684
   140061bd6:	call   0x14002ffd0
   140061bdb:	lea    rcx,[rip+0x1507e]        # 0x140076c60
   140061be2:	lea    rdx,[rbp+0x28]
   140061be6:	mov    DWORD PTR [rax],0x160
   140061bec:	mov    DWORD PTR [rax+0x4],0x684
   140061bf3:	mov    QWORD PTR [rax+0x8],rcx
   140061bf7:	lea    rcx,[rsi+0x10]
   140061bfb:	mov    DWORD PTR [rbp+0x30],0x684
   140061c02:	mov    DWORD PTR [rbp+0x28],0x160
   140061c09:	call   0x14002ff30
   140061c0e:	lea    rdx,[rbp+0x30]
   140061c12:	lea    rcx,[rsi+0x30]
   140061c16:	mov    rbx,rax
   140061c19:	call   0x14002ffd0
   140061c1e:	mov    QWORD PTR [rbx],rax
   140061c21:	cmp    DWORD PTR [rsi+0x8],0x1
   140061c25:	jne    0x14006306d
   140061c2b:	lea    rdx,[rbp+0x28]
   140061c2f:	lea    rcx,[rsi+0x30]
   140061c33:	mov    DWORD PTR [rbp+0x28],0x685
   140061c3a:	call   0x14002ffd0
   140061c3f:	lea    rcx,[rip+0x1503a]        # 0x140076c80
   140061c46:	lea    rdx,[rbp+0x28]
   140061c4a:	mov    DWORD PTR [rax],0x163
   140061c50:	mov    DWORD PTR [rax+0x4],0x685
   140061c57:	mov    QWORD PTR [rax+0x8],rcx
   140061c5b:	lea    rcx,[rsi+0x10]
   140061c5f:	mov    DWORD PTR [rbp+0x30],0x685
   140061c66:	mov    DWORD PTR [rbp+0x28],0x163
   140061c6d:	call   0x14002ff30
   140061c72:	lea    rdx,[rbp+0x30]
   140061c76:	lea    rcx,[rsi+0x30]
   140061c7a:	mov    rbx,rax
   140061c7d:	call   0x14002ffd0
   140061c82:	mov    QWORD PTR [rbx],rax
   140061c85:	cmp    DWORD PTR [rsi+0x8],0x1
   140061c89:	jne    0x14006306d
   140061c8f:	lea    rdx,[rbp+0x28]
   140061c93:	lea    rcx,[rsi+0x30]
   140061c97:	mov    DWORD PTR [rbp+0x28],0x686
   140061c9e:	call   0x14002ffd0
   140061ca3:	lea    rcx,[rip+0x14ff6]        # 0x140076ca0
   140061caa:	lea    rdx,[rbp+0x28]
   140061cae:	mov    DWORD PTR [rax],0x164
   140061cb4:	mov    DWORD PTR [rax+0x4],0x686
   140061cbb:	mov    QWORD PTR [rax+0x8],rcx
   140061cbf:	lea    rcx,[rsi+0x10]
   140061cc3:	mov    DWORD PTR [rbp+0x30],0x686
   140061cca:	mov    DWORD PTR [rbp+0x28],0x164
   140061cd1:	call   0x14002ff30
   140061cd6:	lea    rdx,[rbp+0x30]
   140061cda:	lea    rcx,[rsi+0x30]
   140061cde:	mov    rbx,rax
   140061ce1:	call   0x14002ffd0
   140061ce6:	mov    QWORD PTR [rbx],rax
   140061ce9:	cmp    DWORD PTR [rsi+0x8],0x1
   140061ced:	jne    0x14006306d
   140061cf3:	lea    rdx,[rbp+0x28]
   140061cf7:	lea    rcx,[rsi+0x30]
   140061cfb:	mov    DWORD PTR [rbp+0x28],0x687
   140061d02:	call   0x14002ffd0
   140061d07:	lea    rcx,[rip+0x14fb2]        # 0x140076cc0
   140061d0e:	lea    rdx,[rbp+0x28]
   140061d12:	mov    DWORD PTR [rax],0x165
   140061d18:	mov    DWORD PTR [rax+0x4],0x687
   140061d1f:	mov    QWORD PTR [rax+0x8],rcx
   140061d23:	lea    rcx,[rsi+0x10]
   140061d27:	mov    DWORD PTR [rbp+0x30],0x687
   140061d2e:	mov    DWORD PTR [rbp+0x28],0x165
   140061d35:	call   0x14002ff30
   140061d3a:	lea    rdx,[rbp+0x30]
   140061d3e:	lea    rcx,[rsi+0x30]
   140061d42:	mov    rbx,rax
   140061d45:	call   0x14002ffd0
   140061d4a:	mov    QWORD PTR [rbx],rax
   140061d4d:	cmp    DWORD PTR [rsi+0x8],0x1
   140061d51:	jne    0x14006306d
   140061d57:	lea    rdx,[rbp+0x28]
   140061d5b:	lea    rcx,[rsi+0x30]
   140061d5f:	mov    DWORD PTR [rbp+0x28],0x688
   140061d66:	call   0x14002ffd0
   140061d6b:	lea    rcx,[rip+0x14f6e]        # 0x140076ce0
   140061d72:	lea    rdx,[rbp+0x28]
   140061d76:	mov    DWORD PTR [rax],0x166
   140061d7c:	mov    DWORD PTR [rax+0x4],0x688
   140061d83:	mov    QWORD PTR [rax+0x8],rcx
   140061d87:	lea    rcx,[rsi+0x10]
   140061d8b:	mov    DWORD PTR [rbp+0x30],0x688
   140061d92:	mov    DWORD PTR [rbp+0x28],0x166
   140061d99:	call   0x14002ff30
   140061d9e:	lea    rdx,[rbp+0x30]
   140061da2:	lea    rcx,[rsi+0x30]
   140061da6:	mov    rbx,rax
   140061da9:	call   0x14002ffd0
   140061dae:	mov    QWORD PTR [rbx],rax
   140061db1:	cmp    DWORD PTR [rsi+0x8],0x1
   140061db5:	jne    0x14006306d
   140061dbb:	lea    rdx,[rbp+0x28]
   140061dbf:	lea    rcx,[rsi+0x30]
   140061dc3:	mov    DWORD PTR [rbp+0x28],0x689
   140061dca:	call   0x14002ffd0
   140061dcf:	lea    rcx,[rip+0x14f2a]        # 0x140076d00
   140061dd6:	lea    rdx,[rbp+0x28]
   140061dda:	mov    DWORD PTR [rax],0x167
   140061de0:	mov    DWORD PTR [rax+0x4],0x689
   140061de7:	mov    QWORD PTR [rax+0x8],rcx
   140061deb:	lea    rcx,[rsi+0x10]
   140061def:	mov    DWORD PTR [rbp+0x30],0x689
   140061df6:	mov    DWORD PTR [rbp+0x28],0x167
   140061dfd:	call   0x14002ff30
   140061e02:	lea    rdx,[rbp+0x30]
   140061e06:	lea    rcx,[rsi+0x30]
   140061e0a:	mov    rbx,rax
   140061e0d:	call   0x14002ffd0
   140061e12:	mov    QWORD PTR [rbx],rax
   140061e15:	cmp    DWORD PTR [rsi+0x8],0x1
   140061e19:	jne    0x14006306d
   140061e1f:	lea    rdx,[rbp+0x28]
   140061e23:	lea    rcx,[rsi+0x30]
   140061e27:	mov    DWORD PTR [rbp+0x28],0x68a
   140061e2e:	call   0x14002ffd0
   140061e33:	lea    rcx,[rip+0x14ee6]        # 0x140076d20
   140061e3a:	lea    rdx,[rbp+0x28]
   140061e3e:	mov    DWORD PTR [rax],0x168
   140061e44:	mov    DWORD PTR [rax+0x4],0x68a
   140061e4b:	mov    QWORD PTR [rax+0x8],rcx
   140061e4f:	lea    rcx,[rsi+0x10]
   140061e53:	mov    DWORD PTR [rbp+0x30],0x68a
   140061e5a:	mov    DWORD PTR [rbp+0x28],0x168
   140061e61:	call   0x14002ff30
   140061e66:	lea    rdx,[rbp+0x30]
   140061e6a:	lea    rcx,[rsi+0x30]
   140061e6e:	mov    rbx,rax
   140061e71:	call   0x14002ffd0
   140061e76:	mov    QWORD PTR [rbx],rax
   140061e79:	cmp    DWORD PTR [rsi+0x8],0x1
   140061e7d:	jne    0x14006306d
   140061e83:	lea    rdx,[rbp+0x28]
   140061e87:	lea    rcx,[rsi+0x30]
   140061e8b:	mov    DWORD PTR [rbp+0x28],0x68b
   140061e92:	call   0x14002ffd0
   140061e97:	lea    rcx,[rip+0x14ea2]        # 0x140076d40
   140061e9e:	lea    rdx,[rbp+0x28]
   140061ea2:	mov    DWORD PTR [rax],0x169
   140061ea8:	mov    DWORD PTR [rax+0x4],0x68b
   140061eaf:	mov    QWORD PTR [rax+0x8],rcx
   140061eb3:	lea    rcx,[rsi+0x10]
   140061eb7:	mov    DWORD PTR [rbp+0x30],0x68b
   140061ebe:	mov    DWORD PTR [rbp+0x28],0x169
   140061ec5:	call   0x14002ff30
   140061eca:	lea    rdx,[rbp+0x30]
   140061ece:	lea    rcx,[rsi+0x30]
   140061ed2:	mov    rbx,rax
   140061ed5:	call   0x14002ffd0
   140061eda:	mov    QWORD PTR [rbx],rax
   140061edd:	cmp    DWORD PTR [rsi+0x8],0x1
   140061ee1:	jne    0x14006306d
   140061ee7:	lea    rdx,[rbp+0x28]
   140061eeb:	lea    rcx,[rsi+0x30]
   140061eef:	mov    DWORD PTR [rbp+0x28],0x68c
   140061ef6:	call   0x14002ffd0
   140061efb:	lea    rcx,[rip+0x14e5e]        # 0x140076d60
   140061f02:	lea    rdx,[rbp+0x28]
   140061f06:	mov    DWORD PTR [rax],0x16a
   140061f0c:	mov    DWORD PTR [rax+0x4],0x68c
   140061f13:	mov    QWORD PTR [rax+0x8],rcx
   140061f17:	lea    rcx,[rsi+0x10]
   140061f1b:	mov    DWORD PTR [rbp+0x30],0x68c
   140061f22:	mov    DWORD PTR [rbp+0x28],0x16a
   140061f29:	call   0x14002ff30
   140061f2e:	lea    rdx,[rbp+0x30]
   140061f32:	lea    rcx,[rsi+0x30]
   140061f36:	mov    rbx,rax
   140061f39:	call   0x14002ffd0
   140061f3e:	mov    QWORD PTR [rbx],rax
   140061f41:	cmp    DWORD PTR [rsi+0x8],0x1
   140061f45:	jne    0x14006306d
   140061f4b:	lea    rdx,[rbp+0x28]
   140061f4f:	lea    rcx,[rsi+0x30]
   140061f53:	mov    DWORD PTR [rbp+0x28],0x68d
   140061f5a:	call   0x14002ffd0
   140061f5f:	lea    rcx,[rip+0x14e1a]        # 0x140076d80
   140061f66:	lea    rdx,[rbp+0x28]
   140061f6a:	mov    DWORD PTR [rax],0x16b
   140061f70:	mov    DWORD PTR [rax+0x4],0x68d
   140061f77:	mov    QWORD PTR [rax+0x8],rcx
   140061f7b:	lea    rcx,[rsi+0x10]
   140061f7f:	mov    DWORD PTR [rbp+0x30],0x68d
   140061f86:	mov    DWORD PTR [rbp+0x28],0x16b
   140061f8d:	call   0x14002ff30
   140061f92:	lea    rdx,[rbp+0x30]
   140061f96:	lea    rcx,[rsi+0x30]
   140061f9a:	mov    rbx,rax
   140061f9d:	call   0x14002ffd0
   140061fa2:	mov    QWORD PTR [rbx],rax
   140061fa5:	cmp    DWORD PTR [rsi+0x8],0x1
   140061fa9:	jne    0x14006306d
   140061faf:	lea    rdx,[rbp+0x28]
   140061fb3:	lea    rcx,[rsi+0x30]
   140061fb7:	mov    DWORD PTR [rbp+0x28],0x68e
   140061fbe:	call   0x14002ffd0
   140061fc3:	lea    rcx,[rip+0x14dd6]        # 0x140076da0
   140061fca:	lea    rdx,[rbp+0x28]
   140061fce:	mov    DWORD PTR [rax],0x16c
   140061fd4:	mov    DWORD PTR [rax+0x4],0x68e
   140061fdb:	mov    QWORD PTR [rax+0x8],rcx
   140061fdf:	lea    rcx,[rsi+0x10]
   140061fe3:	mov    DWORD PTR [rbp+0x30],0x68e
   140061fea:	mov    DWORD PTR [rbp+0x28],0x16c
   140061ff1:	call   0x14002ff30
   140061ff6:	lea    rdx,[rbp+0x30]
   140061ffa:	lea    rcx,[rsi+0x30]
   140061ffe:	mov    rbx,rax
   140062001:	call   0x14002ffd0
   140062006:	mov    QWORD PTR [rbx],rax
   140062009:	cmp    DWORD PTR [rsi+0x8],0x1
   14006200d:	jne    0x14006306d
   140062013:	lea    rdx,[rbp+0x28]
   140062017:	lea    rcx,[rsi+0x30]
   14006201b:	mov    DWORD PTR [rbp+0x28],0x68f
   140062022:	call   0x14002ffd0
   140062027:	lea    rcx,[rip+0x14d92]        # 0x140076dc0
   14006202e:	lea    rdx,[rbp+0x28]
   140062032:	mov    DWORD PTR [rax],0x16d
   140062038:	mov    DWORD PTR [rax+0x4],0x68f
   14006203f:	mov    QWORD PTR [rax+0x8],rcx
   140062043:	lea    rcx,[rsi+0x10]
   140062047:	mov    DWORD PTR [rbp+0x30],0x68f
   14006204e:	mov    DWORD PTR [rbp+0x28],0x16d
   140062055:	call   0x14002ff30
   14006205a:	lea    rdx,[rbp+0x30]
   14006205e:	lea    rcx,[rsi+0x30]
   140062062:	mov    rbx,rax
   140062065:	call   0x14002ffd0
   14006206a:	mov    QWORD PTR [rbx],rax
   14006206d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062071:	jne    0x14006306d
   140062077:	lea    rdx,[rbp+0x28]
   14006207b:	lea    rcx,[rsi+0x30]
   14006207f:	mov    DWORD PTR [rbp+0x28],0x690
   140062086:	call   0x14002ffd0
   14006208b:	lea    rcx,[rip+0x14d4e]        # 0x140076de0
   140062092:	lea    rdx,[rbp+0x28]
   140062096:	mov    DWORD PTR [rax],0x16e
   14006209c:	mov    DWORD PTR [rax+0x4],0x690
   1400620a3:	mov    QWORD PTR [rax+0x8],rcx
   1400620a7:	lea    rcx,[rsi+0x10]
   1400620ab:	mov    DWORD PTR [rbp+0x30],0x690
   1400620b2:	mov    DWORD PTR [rbp+0x28],0x16e
   1400620b9:	call   0x14002ff30
   1400620be:	lea    rdx,[rbp+0x30]
   1400620c2:	lea    rcx,[rsi+0x30]
   1400620c6:	mov    rbx,rax
   1400620c9:	call   0x14002ffd0
   1400620ce:	mov    QWORD PTR [rbx],rax
   1400620d1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400620d5:	jne    0x14006306d
   1400620db:	lea    rdx,[rbp+0x28]
   1400620df:	lea    rcx,[rsi+0x30]
   1400620e3:	mov    DWORD PTR [rbp+0x28],0x691
   1400620ea:	call   0x14002ffd0
   1400620ef:	lea    rcx,[rip+0x14d0a]        # 0x140076e00
   1400620f6:	lea    rdx,[rbp+0x28]
   1400620fa:	mov    DWORD PTR [rax],0x16f
   140062100:	mov    DWORD PTR [rax+0x4],0x691
   140062107:	mov    QWORD PTR [rax+0x8],rcx
   14006210b:	lea    rcx,[rsi+0x10]
   14006210f:	mov    DWORD PTR [rbp+0x30],0x691
   140062116:	mov    DWORD PTR [rbp+0x28],0x16f
   14006211d:	call   0x14002ff30
   140062122:	lea    rdx,[rbp+0x30]
   140062126:	lea    rcx,[rsi+0x30]
   14006212a:	mov    rbx,rax
   14006212d:	call   0x14002ffd0
   140062132:	mov    QWORD PTR [rbx],rax
   140062135:	cmp    DWORD PTR [rsi+0x8],0x1
   140062139:	jne    0x14006306d
   14006213f:	lea    rdx,[rbp+0x28]
   140062143:	lea    rcx,[rsi+0x30]
   140062147:	mov    DWORD PTR [rbp+0x28],0x692
   14006214e:	call   0x14002ffd0
   140062153:	lea    rcx,[rip+0x14cc6]        # 0x140076e20
   14006215a:	lea    rdx,[rbp+0x28]
   14006215e:	mov    DWORD PTR [rax],0x170
   140062164:	mov    DWORD PTR [rax+0x4],0x692
   14006216b:	mov    QWORD PTR [rax+0x8],rcx
   14006216f:	lea    rcx,[rsi+0x10]
   140062173:	mov    DWORD PTR [rbp+0x30],0x692
   14006217a:	mov    DWORD PTR [rbp+0x28],0x170
   140062181:	call   0x14002ff30
   140062186:	lea    rdx,[rbp+0x30]
   14006218a:	lea    rcx,[rsi+0x30]
   14006218e:	mov    rbx,rax
   140062191:	call   0x14002ffd0
   140062196:	mov    QWORD PTR [rbx],rax
   140062199:	cmp    DWORD PTR [rsi+0x8],0x1
   14006219d:	jne    0x14006306d
   1400621a3:	lea    rdx,[rbp+0x28]
   1400621a7:	lea    rcx,[rsi+0x30]
   1400621ab:	mov    DWORD PTR [rbp+0x28],0x693
   1400621b2:	call   0x14002ffd0
   1400621b7:	lea    rcx,[rip+0x14c82]        # 0x140076e40
   1400621be:	lea    rdx,[rbp+0x28]
   1400621c2:	mov    DWORD PTR [rax],0x171
   1400621c8:	mov    DWORD PTR [rax+0x4],0x693
   1400621cf:	mov    QWORD PTR [rax+0x8],rcx
   1400621d3:	lea    rcx,[rsi+0x10]
   1400621d7:	mov    DWORD PTR [rbp+0x30],0x693
   1400621de:	mov    DWORD PTR [rbp+0x28],0x171
   1400621e5:	call   0x14002ff30
   1400621ea:	lea    rdx,[rbp+0x30]
   1400621ee:	lea    rcx,[rsi+0x30]
   1400621f2:	mov    rbx,rax
   1400621f5:	call   0x14002ffd0
   1400621fa:	mov    QWORD PTR [rbx],rax
   1400621fd:	cmp    DWORD PTR [rsi+0x8],0x1
   140062201:	jne    0x14006306d
   140062207:	lea    rdx,[rbp+0x28]
   14006220b:	lea    rcx,[rsi+0x30]
   14006220f:	mov    DWORD PTR [rbp+0x28],0x694
   140062216:	call   0x14002ffd0
   14006221b:	lea    rcx,[rip+0x14c3e]        # 0x140076e60
   140062222:	lea    rdx,[rbp+0x28]
   140062226:	mov    DWORD PTR [rax],0x172
   14006222c:	mov    DWORD PTR [rax+0x4],0x694
   140062233:	mov    QWORD PTR [rax+0x8],rcx
   140062237:	lea    rcx,[rsi+0x10]
   14006223b:	mov    DWORD PTR [rbp+0x30],0x694
   140062242:	mov    DWORD PTR [rbp+0x28],0x172
   140062249:	call   0x14002ff30
   14006224e:	lea    rdx,[rbp+0x30]
   140062252:	lea    rcx,[rsi+0x30]
   140062256:	mov    rbx,rax
   140062259:	call   0x14002ffd0
   14006225e:	mov    QWORD PTR [rbx],rax
   140062261:	cmp    DWORD PTR [rsi+0x8],0x1
   140062265:	jne    0x14006306d
   14006226b:	lea    rdx,[rbp+0x28]
   14006226f:	lea    rcx,[rsi+0x30]
   140062273:	mov    DWORD PTR [rbp+0x28],0x695
   14006227a:	call   0x14002ffd0
   14006227f:	lea    rcx,[rip+0x14bfa]        # 0x140076e80
   140062286:	lea    rdx,[rbp+0x28]
   14006228a:	mov    DWORD PTR [rax],0x173
   140062290:	mov    DWORD PTR [rax+0x4],0x695
   140062297:	mov    QWORD PTR [rax+0x8],rcx
   14006229b:	lea    rcx,[rsi+0x10]
   14006229f:	mov    DWORD PTR [rbp+0x30],0x695
   1400622a6:	mov    DWORD PTR [rbp+0x28],0x173
   1400622ad:	call   0x14002ff30
   1400622b2:	lea    rdx,[rbp+0x30]
   1400622b6:	lea    rcx,[rsi+0x30]
   1400622ba:	mov    rbx,rax
   1400622bd:	call   0x14002ffd0
   1400622c2:	mov    QWORD PTR [rbx],rax
   1400622c5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400622c9:	jne    0x14006306d
   1400622cf:	lea    rdx,[rbp+0x28]
   1400622d3:	lea    rcx,[rsi+0x30]
   1400622d7:	mov    DWORD PTR [rbp+0x28],0x696
   1400622de:	call   0x14002ffd0
   1400622e3:	lea    rcx,[rip+0x14bb6]        # 0x140076ea0
   1400622ea:	lea    rdx,[rbp+0x28]
   1400622ee:	mov    DWORD PTR [rax],0x174
   1400622f4:	mov    DWORD PTR [rax+0x4],0x696
   1400622fb:	mov    QWORD PTR [rax+0x8],rcx
   1400622ff:	lea    rcx,[rsi+0x10]
   140062303:	mov    DWORD PTR [rbp+0x30],0x696
   14006230a:	mov    DWORD PTR [rbp+0x28],0x174
   140062311:	call   0x14002ff30
   140062316:	lea    rdx,[rbp+0x30]
   14006231a:	lea    rcx,[rsi+0x30]
   14006231e:	mov    rbx,rax
   140062321:	call   0x14002ffd0
   140062326:	mov    QWORD PTR [rbx],rax
   140062329:	cmp    DWORD PTR [rsi+0x8],0x1
   14006232d:	jne    0x14006306d
   140062333:	lea    rdx,[rbp+0x28]
   140062337:	lea    rcx,[rsi+0x30]
   14006233b:	mov    DWORD PTR [rbp+0x28],0x697
   140062342:	call   0x14002ffd0
   140062347:	lea    rcx,[rip+0x14b72]        # 0x140076ec0
   14006234e:	lea    rdx,[rbp+0x28]
   140062352:	mov    DWORD PTR [rax],0x175
   140062358:	mov    DWORD PTR [rax+0x4],0x697
   14006235f:	mov    QWORD PTR [rax+0x8],rcx
   140062363:	lea    rcx,[rsi+0x10]
   140062367:	mov    DWORD PTR [rbp+0x30],0x697
   14006236e:	mov    DWORD PTR [rbp+0x28],0x175
   140062375:	call   0x14002ff30
   14006237a:	lea    rdx,[rbp+0x30]
   14006237e:	lea    rcx,[rsi+0x30]
   140062382:	mov    rbx,rax
   140062385:	call   0x14002ffd0
   14006238a:	mov    QWORD PTR [rbx],rax
   14006238d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062391:	jne    0x14006306d
   140062397:	lea    rdx,[rbp+0x28]
   14006239b:	lea    rcx,[rsi+0x30]
   14006239f:	mov    DWORD PTR [rbp+0x28],0x698
   1400623a6:	call   0x14002ffd0
   1400623ab:	lea    rcx,[rip+0x14b2e]        # 0x140076ee0
   1400623b2:	lea    rdx,[rbp+0x28]
   1400623b6:	mov    DWORD PTR [rax],0x176
   1400623bc:	mov    DWORD PTR [rax+0x4],0x698
   1400623c3:	mov    QWORD PTR [rax+0x8],rcx
   1400623c7:	lea    rcx,[rsi+0x10]
   1400623cb:	mov    DWORD PTR [rbp+0x30],0x698
   1400623d2:	mov    DWORD PTR [rbp+0x28],0x176
   1400623d9:	call   0x14002ff30
   1400623de:	lea    rdx,[rbp+0x30]
   1400623e2:	lea    rcx,[rsi+0x30]
   1400623e6:	mov    rbx,rax
   1400623e9:	call   0x14002ffd0
   1400623ee:	mov    QWORD PTR [rbx],rax
   1400623f1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400623f5:	jne    0x14006306d
   1400623fb:	lea    rdx,[rbp+0x28]
   1400623ff:	lea    rcx,[rsi+0x30]
   140062403:	mov    DWORD PTR [rbp+0x28],0x699
   14006240a:	call   0x14002ffd0
   14006240f:	lea    rcx,[rip+0x14aea]        # 0x140076f00
   140062416:	lea    rdx,[rbp+0x28]
   14006241a:	mov    DWORD PTR [rax],0x177
   140062420:	mov    DWORD PTR [rax+0x4],0x699
   140062427:	mov    QWORD PTR [rax+0x8],rcx
   14006242b:	lea    rcx,[rsi+0x10]
   14006242f:	mov    DWORD PTR [rbp+0x30],0x699
   140062436:	mov    DWORD PTR [rbp+0x28],0x177
   14006243d:	call   0x14002ff30
   140062442:	lea    rdx,[rbp+0x30]
   140062446:	lea    rcx,[rsi+0x30]
   14006244a:	mov    rbx,rax
   14006244d:	call   0x14002ffd0
   140062452:	mov    QWORD PTR [rbx],rax
   140062455:	cmp    DWORD PTR [rsi+0x8],0x1
   140062459:	jne    0x14006306d
   14006245f:	lea    rdx,[rbp+0x28]
   140062463:	lea    rcx,[rsi+0x30]
   140062467:	mov    DWORD PTR [rbp+0x28],0x69a
   14006246e:	call   0x14002ffd0
   140062473:	lea    rcx,[rip+0x14aa6]        # 0x140076f20
   14006247a:	lea    rdx,[rbp+0x28]
   14006247e:	mov    DWORD PTR [rax],0x178
   140062484:	mov    DWORD PTR [rax+0x4],0x69a
   14006248b:	mov    QWORD PTR [rax+0x8],rcx
   14006248f:	lea    rcx,[rsi+0x10]
   140062493:	mov    DWORD PTR [rbp+0x30],0x69a
   14006249a:	mov    DWORD PTR [rbp+0x28],0x178
   1400624a1:	call   0x14002ff30
   1400624a6:	lea    rdx,[rbp+0x30]
   1400624aa:	lea    rcx,[rsi+0x30]
   1400624ae:	mov    rbx,rax
   1400624b1:	call   0x14002ffd0
   1400624b6:	mov    QWORD PTR [rbx],rax
   1400624b9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400624bd:	jne    0x14006306d
   1400624c3:	lea    rdx,[rbp+0x28]
   1400624c7:	lea    rcx,[rsi+0x30]
   1400624cb:	mov    DWORD PTR [rbp+0x28],0x69b
   1400624d2:	call   0x14002ffd0
   1400624d7:	lea    rcx,[rip+0x14a62]        # 0x140076f40
   1400624de:	lea    rdx,[rbp+0x28]
   1400624e2:	mov    DWORD PTR [rax],0x179
   1400624e8:	mov    DWORD PTR [rax+0x4],0x69b
   1400624ef:	mov    QWORD PTR [rax+0x8],rcx
   1400624f3:	lea    rcx,[rsi+0x10]
   1400624f7:	mov    DWORD PTR [rbp+0x30],0x69b
   1400624fe:	mov    DWORD PTR [rbp+0x28],0x179
   140062505:	call   0x14002ff30
   14006250a:	lea    rdx,[rbp+0x30]
   14006250e:	lea    rcx,[rsi+0x30]
   140062512:	mov    rbx,rax
   140062515:	call   0x14002ffd0
   14006251a:	mov    QWORD PTR [rbx],rax
   14006251d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062521:	jne    0x14006306d
   140062527:	lea    rdx,[rbp+0x28]
   14006252b:	lea    rcx,[rsi+0x30]
   14006252f:	mov    DWORD PTR [rbp+0x28],0x69c
   140062536:	call   0x14002ffd0
   14006253b:	lea    rcx,[rip+0x14a26]        # 0x140076f68
   140062542:	lea    rdx,[rbp+0x28]
   140062546:	mov    DWORD PTR [rax],0x17a
   14006254c:	mov    DWORD PTR [rax+0x4],0x69c
   140062553:	mov    QWORD PTR [rax+0x8],rcx
   140062557:	lea    rcx,[rsi+0x10]
   14006255b:	mov    DWORD PTR [rbp+0x30],0x69c
   140062562:	mov    DWORD PTR [rbp+0x28],0x17a
   140062569:	call   0x14002ff30
   14006256e:	lea    rdx,[rbp+0x30]
   140062572:	lea    rcx,[rsi+0x30]
   140062576:	mov    rbx,rax
   140062579:	call   0x14002ffd0
   14006257e:	mov    QWORD PTR [rbx],rax
   140062581:	cmp    DWORD PTR [rsi+0x8],0x1
   140062585:	jne    0x14006306d
   14006258b:	lea    rdx,[rbp+0x28]
   14006258f:	lea    rcx,[rsi+0x30]
   140062593:	mov    DWORD PTR [rbp+0x28],0x69d
   14006259a:	call   0x14002ffd0
   14006259f:	lea    rcx,[rip+0x149ea]        # 0x140076f90
   1400625a6:	lea    rdx,[rbp+0x28]
   1400625aa:	mov    DWORD PTR [rax],0x17b
   1400625b0:	mov    DWORD PTR [rax+0x4],0x69d
   1400625b7:	mov    QWORD PTR [rax+0x8],rcx
   1400625bb:	lea    rcx,[rsi+0x10]
   1400625bf:	mov    DWORD PTR [rbp+0x30],0x69d
   1400625c6:	mov    DWORD PTR [rbp+0x28],0x17b
   1400625cd:	call   0x14002ff30
   1400625d2:	lea    rdx,[rbp+0x30]
   1400625d6:	lea    rcx,[rsi+0x30]
   1400625da:	mov    rbx,rax
   1400625dd:	call   0x14002ffd0
   1400625e2:	mov    QWORD PTR [rbx],rax
   1400625e5:	cmp    DWORD PTR [rsi+0x8],0x1
   1400625e9:	jne    0x14006306d
   1400625ef:	lea    rdx,[rbp+0x28]
   1400625f3:	lea    rcx,[rsi+0x30]
   1400625f7:	mov    DWORD PTR [rbp+0x28],0x69e
   1400625fe:	call   0x14002ffd0
   140062603:	lea    rcx,[rip+0x149ae]        # 0x140076fb8
   14006260a:	lea    rdx,[rbp+0x28]
   14006260e:	mov    DWORD PTR [rax],0x17c
   140062614:	mov    DWORD PTR [rax+0x4],0x69e
   14006261b:	mov    QWORD PTR [rax+0x8],rcx
   14006261f:	lea    rcx,[rsi+0x10]
   140062623:	mov    DWORD PTR [rbp+0x30],0x69e
   14006262a:	mov    DWORD PTR [rbp+0x28],0x17c
   140062631:	call   0x14002ff30
   140062636:	lea    rdx,[rbp+0x30]
   14006263a:	lea    rcx,[rsi+0x30]
   14006263e:	mov    rbx,rax
   140062641:	call   0x14002ffd0
   140062646:	mov    QWORD PTR [rbx],rax
   140062649:	cmp    DWORD PTR [rsi+0x8],0x1
   14006264d:	jne    0x14006306d
   140062653:	lea    rdx,[rbp+0x28]
   140062657:	lea    rcx,[rsi+0x30]
   14006265b:	mov    DWORD PTR [rbp+0x28],0x69f
   140062662:	call   0x14002ffd0
   140062667:	lea    rcx,[rip+0x14972]        # 0x140076fe0
   14006266e:	lea    rdx,[rbp+0x28]
   140062672:	mov    DWORD PTR [rax],0x17d
   140062678:	mov    DWORD PTR [rax+0x4],0x69f
   14006267f:	mov    QWORD PTR [rax+0x8],rcx
   140062683:	lea    rcx,[rsi+0x10]
   140062687:	mov    DWORD PTR [rbp+0x30],0x69f
   14006268e:	mov    DWORD PTR [rbp+0x28],0x17d
   140062695:	call   0x14002ff30
   14006269a:	lea    rdx,[rbp+0x30]
   14006269e:	lea    rcx,[rsi+0x30]
   1400626a2:	mov    rbx,rax
   1400626a5:	call   0x14002ffd0
   1400626aa:	mov    QWORD PTR [rbx],rax
   1400626ad:	cmp    DWORD PTR [rsi+0x8],0x1
   1400626b1:	jne    0x14006306d
   1400626b7:	lea    rdx,[rbp+0x28]
   1400626bb:	lea    rcx,[rsi+0x30]
   1400626bf:	mov    DWORD PTR [rbp+0x28],0x6a0
   1400626c6:	call   0x14002ffd0
   1400626cb:	lea    rcx,[rip+0x14936]        # 0x140077008
   1400626d2:	lea    rdx,[rbp+0x28]
   1400626d6:	mov    DWORD PTR [rax],0x17e
   1400626dc:	mov    DWORD PTR [rax+0x4],0x6a0
   1400626e3:	mov    QWORD PTR [rax+0x8],rcx
   1400626e7:	lea    rcx,[rsi+0x10]
   1400626eb:	mov    DWORD PTR [rbp+0x30],0x6a0
   1400626f2:	mov    DWORD PTR [rbp+0x28],0x17e
   1400626f9:	call   0x14002ff30
   1400626fe:	lea    rdx,[rbp+0x30]
   140062702:	lea    rcx,[rsi+0x30]
   140062706:	mov    rbx,rax
   140062709:	call   0x14002ffd0
   14006270e:	mov    QWORD PTR [rbx],rax
   140062711:	cmp    DWORD PTR [rsi+0x8],0x1
   140062715:	jne    0x14006306d
   14006271b:	lea    rdx,[rbp+0x28]
   14006271f:	lea    rcx,[rsi+0x30]
   140062723:	mov    DWORD PTR [rbp+0x28],0x6a1
   14006272a:	call   0x14002ffd0
   14006272f:	lea    rcx,[rip+0x148fa]        # 0x140077030
   140062736:	lea    rdx,[rbp+0x28]
   14006273a:	mov    DWORD PTR [rax],0x17f
   140062740:	mov    DWORD PTR [rax+0x4],0x6a1
   140062747:	mov    QWORD PTR [rax+0x8],rcx
   14006274b:	lea    rcx,[rsi+0x10]
   14006274f:	mov    DWORD PTR [rbp+0x30],0x6a1
   140062756:	mov    DWORD PTR [rbp+0x28],0x17f
   14006275d:	call   0x14002ff30
   140062762:	lea    rdx,[rbp+0x30]
   140062766:	lea    rcx,[rsi+0x30]
   14006276a:	mov    rbx,rax
   14006276d:	call   0x14002ffd0
   140062772:	mov    QWORD PTR [rbx],rax
   140062775:	cmp    DWORD PTR [rsi+0x8],0x1
   140062779:	jne    0x14006306d
   14006277f:	lea    rdx,[rbp+0x28]
   140062783:	lea    rcx,[rsi+0x30]
   140062787:	mov    DWORD PTR [rbp+0x28],0x6a2
   14006278e:	call   0x14002ffd0
   140062793:	lea    rcx,[rip+0x148be]        # 0x140077058
   14006279a:	lea    rdx,[rbp+0x28]
   14006279e:	mov    DWORD PTR [rax],0x180
   1400627a4:	mov    DWORD PTR [rax+0x4],0x6a2
   1400627ab:	mov    QWORD PTR [rax+0x8],rcx
   1400627af:	lea    rcx,[rsi+0x10]
   1400627b3:	mov    DWORD PTR [rbp+0x30],0x6a2
   1400627ba:	mov    DWORD PTR [rbp+0x28],0x180
   1400627c1:	call   0x14002ff30
   1400627c6:	lea    rdx,[rbp+0x30]
   1400627ca:	lea    rcx,[rsi+0x30]
   1400627ce:	mov    rbx,rax
   1400627d1:	call   0x14002ffd0
   1400627d6:	mov    QWORD PTR [rbx],rax
   1400627d9:	cmp    DWORD PTR [rsi+0x8],0x1
   1400627dd:	jne    0x14006306d
   1400627e3:	lea    rdx,[rbp+0x28]
   1400627e7:	lea    rcx,[rsi+0x30]
   1400627eb:	mov    DWORD PTR [rbp+0x28],0x6a3
   1400627f2:	call   0x14002ffd0
   1400627f7:	lea    rcx,[rip+0x14882]        # 0x140077080
   1400627fe:	lea    rdx,[rbp+0x28]
   140062802:	mov    DWORD PTR [rax],0x181
   140062808:	mov    DWORD PTR [rax+0x4],0x6a3
   14006280f:	mov    QWORD PTR [rax+0x8],rcx
   140062813:	lea    rcx,[rsi+0x10]
   140062817:	mov    DWORD PTR [rbp+0x30],0x6a3
   14006281e:	mov    DWORD PTR [rbp+0x28],0x181
   140062825:	call   0x14002ff30
   14006282a:	lea    rdx,[rbp+0x30]
   14006282e:	lea    rcx,[rsi+0x30]
   140062832:	mov    rbx,rax
   140062835:	call   0x14002ffd0
   14006283a:	mov    QWORD PTR [rbx],rax
   14006283d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062841:	jne    0x14006306d
   140062847:	lea    rdx,[rbp+0x28]
   14006284b:	lea    rcx,[rsi+0x30]
   14006284f:	mov    DWORD PTR [rbp+0x28],0x6a4
   140062856:	call   0x14002ffd0
   14006285b:	lea    rcx,[rip+0x14846]        # 0x1400770a8
   140062862:	lea    rdx,[rbp+0x28]
   140062866:	mov    DWORD PTR [rax],0x182
   14006286c:	mov    DWORD PTR [rax+0x4],0x6a4
   140062873:	mov    QWORD PTR [rax+0x8],rcx
   140062877:	lea    rcx,[rsi+0x10]
   14006287b:	mov    DWORD PTR [rbp+0x30],0x6a4
   140062882:	mov    DWORD PTR [rbp+0x28],0x182
   140062889:	call   0x14002ff30
   14006288e:	lea    rdx,[rbp+0x30]
   140062892:	lea    rcx,[rsi+0x30]
   140062896:	mov    rbx,rax
   140062899:	call   0x14002ffd0
   14006289e:	mov    QWORD PTR [rbx],rax
   1400628a1:	cmp    DWORD PTR [rsi+0x8],0x1
   1400628a5:	jne    0x14006306d
   1400628ab:	lea    rdx,[rbp+0x28]
   1400628af:	lea    rcx,[rsi+0x30]
   1400628b3:	mov    DWORD PTR [rbp+0x28],0x6a5
   1400628ba:	call   0x14002ffd0
   1400628bf:	lea    rcx,[rip+0x1480a]        # 0x1400770d0
   1400628c6:	lea    rdx,[rbp+0x28]
   1400628ca:	mov    DWORD PTR [rax],0x183
   1400628d0:	mov    DWORD PTR [rax+0x4],0x6a5
   1400628d7:	mov    QWORD PTR [rax+0x8],rcx
   1400628db:	lea    rcx,[rsi+0x10]
   1400628df:	mov    DWORD PTR [rbp+0x30],0x6a5
   1400628e6:	mov    DWORD PTR [rbp+0x28],0x183
   1400628ed:	call   0x14002ff30
   1400628f2:	lea    rdx,[rbp+0x30]
   1400628f6:	lea    rcx,[rsi+0x30]
   1400628fa:	mov    rbx,rax
   1400628fd:	call   0x14002ffd0
   140062902:	mov    QWORD PTR [rbx],rax
   140062905:	cmp    DWORD PTR [rsi+0x8],0x1
   140062909:	jne    0x14006306d
   14006290f:	lea    rdx,[rbp+0x28]
   140062913:	lea    rcx,[rsi+0x30]
   140062917:	mov    DWORD PTR [rbp+0x28],0x6a6
   14006291e:	call   0x14002ffd0
   140062923:	lea    rcx,[rip+0x147ce]        # 0x1400770f8
   14006292a:	lea    rdx,[rbp+0x28]
   14006292e:	mov    DWORD PTR [rax],0x184
   140062934:	mov    DWORD PTR [rax+0x4],0x6a6
   14006293b:	mov    QWORD PTR [rax+0x8],rcx
   14006293f:	lea    rcx,[rsi+0x10]
   140062943:	mov    DWORD PTR [rbp+0x30],0x6a6
   14006294a:	mov    DWORD PTR [rbp+0x28],0x184
   140062951:	call   0x14002ff30
   140062956:	lea    rdx,[rbp+0x30]
   14006295a:	lea    rcx,[rsi+0x30]
   14006295e:	mov    rbx,rax
   140062961:	call   0x14002ffd0
   140062966:	mov    QWORD PTR [rbx],rax
   140062969:	cmp    DWORD PTR [rsi+0x8],0x1
   14006296d:	jne    0x14006306d
   140062973:	lea    rdx,[rbp+0x28]
   140062977:	lea    rcx,[rsi+0x30]
   14006297b:	mov    DWORD PTR [rbp+0x28],0x6a7
   140062982:	call   0x14002ffd0
   140062987:	lea    rcx,[rip+0x14792]        # 0x140077120
   14006298e:	lea    rdx,[rbp+0x28]
   140062992:	mov    DWORD PTR [rax],0x185
   140062998:	mov    DWORD PTR [rax+0x4],0x6a7
   14006299f:	mov    QWORD PTR [rax+0x8],rcx
   1400629a3:	lea    rcx,[rsi+0x10]
   1400629a7:	mov    DWORD PTR [rbp+0x30],0x6a7
   1400629ae:	mov    DWORD PTR [rbp+0x28],0x185
   1400629b5:	call   0x14002ff30
   1400629ba:	lea    rdx,[rbp+0x30]
   1400629be:	lea    rcx,[rsi+0x30]
   1400629c2:	mov    rbx,rax
   1400629c5:	call   0x14002ffd0
   1400629ca:	mov    QWORD PTR [rbx],rax
   1400629cd:	cmp    DWORD PTR [rsi+0x8],0x1
   1400629d1:	jne    0x14006306d
   1400629d7:	lea    rdx,[rbp+0x28]
   1400629db:	lea    rcx,[rsi+0x30]
   1400629df:	mov    DWORD PTR [rbp+0x28],0x6a8
   1400629e6:	call   0x14002ffd0
   1400629eb:	lea    rcx,[rip+0x14756]        # 0x140077148
   1400629f2:	lea    rdx,[rbp+0x28]
   1400629f6:	mov    DWORD PTR [rax],0x186
   1400629fc:	mov    DWORD PTR [rax+0x4],0x6a8
   140062a03:	mov    QWORD PTR [rax+0x8],rcx
   140062a07:	lea    rcx,[rsi+0x10]
   140062a0b:	mov    DWORD PTR [rbp+0x30],0x6a8
   140062a12:	mov    DWORD PTR [rbp+0x28],0x186
   140062a19:	call   0x14002ff30
   140062a1e:	lea    rdx,[rbp+0x30]
   140062a22:	lea    rcx,[rsi+0x30]
   140062a26:	mov    rbx,rax
   140062a29:	call   0x14002ffd0
   140062a2e:	mov    QWORD PTR [rbx],rax
   140062a31:	cmp    DWORD PTR [rsi+0x8],0x1
   140062a35:	jne    0x14006306d
   140062a3b:	lea    rdx,[rbp+0x28]
   140062a3f:	lea    rcx,[rsi+0x30]
   140062a43:	mov    DWORD PTR [rbp+0x28],0x6a9
   140062a4a:	call   0x14002ffd0
   140062a4f:	lea    rcx,[rip+0x1471a]        # 0x140077170
   140062a56:	lea    rdx,[rbp+0x28]
   140062a5a:	mov    DWORD PTR [rax],0x187
   140062a60:	mov    DWORD PTR [rax+0x4],0x6a9
   140062a67:	mov    QWORD PTR [rax+0x8],rcx
   140062a6b:	lea    rcx,[rsi+0x10]
   140062a6f:	mov    DWORD PTR [rbp+0x30],0x6a9
   140062a76:	mov    DWORD PTR [rbp+0x28],0x187
   140062a7d:	call   0x14002ff30
   140062a82:	lea    rdx,[rbp+0x30]
   140062a86:	lea    rcx,[rsi+0x30]
   140062a8a:	mov    rbx,rax
   140062a8d:	call   0x14002ffd0
   140062a92:	mov    QWORD PTR [rbx],rax
   140062a95:	cmp    DWORD PTR [rsi+0x8],0x1
   140062a99:	jne    0x14006306d
   140062a9f:	lea    rdx,[rbp+0x28]
   140062aa3:	lea    rcx,[rsi+0x30]
   140062aa7:	mov    DWORD PTR [rbp+0x28],0x6aa
   140062aae:	call   0x14002ffd0
   140062ab3:	lea    rcx,[rip+0x146de]        # 0x140077198
   140062aba:	lea    rdx,[rbp+0x28]
   140062abe:	mov    DWORD PTR [rax],0x188
   140062ac4:	mov    DWORD PTR [rax+0x4],0x6aa
   140062acb:	mov    QWORD PTR [rax+0x8],rcx
   140062acf:	lea    rcx,[rsi+0x10]
   140062ad3:	mov    DWORD PTR [rbp+0x30],0x6aa
   140062ada:	mov    DWORD PTR [rbp+0x28],0x188
   140062ae1:	call   0x14002ff30
   140062ae6:	lea    rdx,[rbp+0x30]
   140062aea:	lea    rcx,[rsi+0x30]
   140062aee:	mov    rbx,rax
   140062af1:	call   0x14002ffd0
   140062af6:	mov    QWORD PTR [rbx],rax
   140062af9:	cmp    DWORD PTR [rsi+0x8],0x1
   140062afd:	jne    0x14006306d
   140062b03:	lea    rdx,[rbp+0x28]
   140062b07:	lea    rcx,[rsi+0x30]
   140062b0b:	mov    DWORD PTR [rbp+0x28],0x6ab
   140062b12:	call   0x14002ffd0
   140062b17:	lea    rcx,[rip+0x146a2]        # 0x1400771c0
   140062b1e:	lea    rdx,[rbp+0x28]
   140062b22:	mov    DWORD PTR [rax],0x189
   140062b28:	mov    DWORD PTR [rax+0x4],0x6ab
   140062b2f:	mov    QWORD PTR [rax+0x8],rcx
   140062b33:	lea    rcx,[rsi+0x10]
   140062b37:	mov    DWORD PTR [rbp+0x30],0x6ab
   140062b3e:	mov    DWORD PTR [rbp+0x28],0x189
   140062b45:	call   0x14002ff30
   140062b4a:	lea    rdx,[rbp+0x30]
   140062b4e:	lea    rcx,[rsi+0x30]
   140062b52:	mov    rbx,rax
   140062b55:	call   0x14002ffd0
   140062b5a:	mov    QWORD PTR [rbx],rax
   140062b5d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062b61:	jne    0x14006306d
   140062b67:	lea    rdx,[rbp+0x28]
   140062b6b:	lea    rcx,[rsi+0x30]
   140062b6f:	mov    DWORD PTR [rbp+0x28],0x6ac
   140062b76:	call   0x14002ffd0
   140062b7b:	lea    rcx,[rip+0x14666]        # 0x1400771e8
   140062b82:	lea    rdx,[rbp+0x28]
   140062b86:	mov    DWORD PTR [rax],0x18a
   140062b8c:	mov    DWORD PTR [rax+0x4],0x6ac
   140062b93:	mov    QWORD PTR [rax+0x8],rcx
   140062b97:	lea    rcx,[rsi+0x10]
   140062b9b:	mov    DWORD PTR [rbp+0x30],0x6ac
   140062ba2:	mov    DWORD PTR [rbp+0x28],0x18a
   140062ba9:	call   0x14002ff30
   140062bae:	lea    rdx,[rbp+0x30]
   140062bb2:	lea    rcx,[rsi+0x30]
   140062bb6:	mov    rbx,rax
   140062bb9:	call   0x14002ffd0
   140062bbe:	mov    QWORD PTR [rbx],rax
   140062bc1:	cmp    DWORD PTR [rsi+0x8],0x1
   140062bc5:	jne    0x14006306d
   140062bcb:	lea    rdx,[rbp+0x28]
   140062bcf:	lea    rcx,[rsi+0x30]
   140062bd3:	mov    DWORD PTR [rbp+0x28],0x6ad
   140062bda:	call   0x14002ffd0
   140062bdf:	lea    rcx,[rip+0x1462a]        # 0x140077210
   140062be6:	lea    rdx,[rbp+0x28]
   140062bea:	mov    DWORD PTR [rax],0x18b
   140062bf0:	mov    DWORD PTR [rax+0x4],0x6ad
   140062bf7:	mov    QWORD PTR [rax+0x8],rcx
   140062bfb:	lea    rcx,[rsi+0x10]
   140062bff:	mov    DWORD PTR [rbp+0x30],0x6ad
   140062c06:	mov    DWORD PTR [rbp+0x28],0x18b
   140062c0d:	call   0x14002ff30
   140062c12:	lea    rdx,[rbp+0x30]
   140062c16:	lea    rcx,[rsi+0x30]
   140062c1a:	mov    rbx,rax
   140062c1d:	call   0x14002ffd0
   140062c22:	mov    QWORD PTR [rbx],rax
   140062c25:	cmp    DWORD PTR [rsi+0x8],0x1
   140062c29:	jne    0x14006306d
   140062c2f:	lea    rdx,[rbp+0x28]
   140062c33:	lea    rcx,[rsi+0x30]
   140062c37:	mov    DWORD PTR [rbp+0x28],0x6ae
   140062c3e:	call   0x14002ffd0
   140062c43:	lea    rcx,[rip+0x145ee]        # 0x140077238
   140062c4a:	lea    rdx,[rbp+0x28]
   140062c4e:	mov    DWORD PTR [rax],0x18c
   140062c54:	mov    DWORD PTR [rax+0x4],0x6ae
   140062c5b:	mov    QWORD PTR [rax+0x8],rcx
   140062c5f:	lea    rcx,[rsi+0x10]
   140062c63:	mov    DWORD PTR [rbp+0x30],0x6ae
   140062c6a:	mov    DWORD PTR [rbp+0x28],0x18c
   140062c71:	call   0x14002ff30
   140062c76:	lea    rdx,[rbp+0x30]
   140062c7a:	lea    rcx,[rsi+0x30]
   140062c7e:	mov    rbx,rax
   140062c81:	call   0x14002ffd0
   140062c86:	mov    QWORD PTR [rbx],rax
   140062c89:	cmp    DWORD PTR [rsi+0x8],0x1
   140062c8d:	jne    0x14006306d
   140062c93:	lea    rdx,[rbp+0x28]
   140062c97:	lea    rcx,[rsi+0x30]
   140062c9b:	mov    DWORD PTR [rbp+0x28],0x6af
   140062ca2:	call   0x14002ffd0
   140062ca7:	lea    rcx,[rip+0x145b2]        # 0x140077260
   140062cae:	lea    rdx,[rbp+0x28]
   140062cb2:	mov    DWORD PTR [rax],0x18d
   140062cb8:	mov    DWORD PTR [rax+0x4],0x6af
   140062cbf:	mov    QWORD PTR [rax+0x8],rcx
   140062cc3:	lea    rcx,[rsi+0x10]
   140062cc7:	mov    DWORD PTR [rbp+0x30],0x6af
   140062cce:	mov    DWORD PTR [rbp+0x28],0x18d
   140062cd5:	call   0x14002ff30
   140062cda:	lea    rdx,[rbp+0x30]
   140062cde:	lea    rcx,[rsi+0x30]
   140062ce2:	mov    rbx,rax
   140062ce5:	call   0x14002ffd0
   140062cea:	mov    QWORD PTR [rbx],rax
   140062ced:	cmp    DWORD PTR [rsi+0x8],0x1
   140062cf1:	jne    0x14006306d
   140062cf7:	lea    rdx,[rbp+0x28]
   140062cfb:	lea    rcx,[rsi+0x30]
   140062cff:	mov    DWORD PTR [rbp+0x28],0x6b1
   140062d06:	call   0x14002ffd0
   140062d0b:	lea    rcx,[rip+0x14576]        # 0x140077288
   140062d12:	lea    rdx,[rbp+0x28]
   140062d16:	mov    DWORD PTR [rax],0x1ab
   140062d1c:	mov    DWORD PTR [rax+0x4],0x6b1
   140062d23:	mov    QWORD PTR [rax+0x8],rcx
   140062d27:	lea    rcx,[rsi+0x10]
   140062d2b:	mov    DWORD PTR [rbp+0x30],0x6b1
   140062d32:	mov    DWORD PTR [rbp+0x28],0x1ab
   140062d39:	call   0x14002ff30
   140062d3e:	lea    rdx,[rbp+0x30]
   140062d42:	lea    rcx,[rsi+0x30]
   140062d46:	mov    rbx,rax
   140062d49:	call   0x14002ffd0
   140062d4e:	mov    QWORD PTR [rbx],rax
   140062d51:	cmp    DWORD PTR [rsi+0x8],0x1
   140062d55:	jne    0x14006306d
   140062d5b:	lea    rdx,[rbp+0x28]
   140062d5f:	lea    rcx,[rsi+0x30]
   140062d63:	mov    DWORD PTR [rbp+0x28],0x6b2
   140062d6a:	call   0x14002ffd0
   140062d6f:	lea    rcx,[rip+0x1452a]        # 0x1400772a0
   140062d76:	lea    rdx,[rbp+0x28]
   140062d7a:	mov    DWORD PTR [rax],0x1ac
   140062d80:	mov    DWORD PTR [rax+0x4],0x6b2
   140062d87:	mov    QWORD PTR [rax+0x8],rcx
   140062d8b:	lea    rcx,[rsi+0x10]
   140062d8f:	mov    DWORD PTR [rbp+0x30],0x6b2
   140062d96:	mov    DWORD PTR [rbp+0x28],0x1ac
   140062d9d:	call   0x14002ff30
   140062da2:	lea    rdx,[rbp+0x30]
   140062da6:	lea    rcx,[rsi+0x30]
   140062daa:	mov    rbx,rax
   140062dad:	call   0x14002ffd0
   140062db2:	mov    QWORD PTR [rbx],rax
   140062db5:	cmp    DWORD PTR [rsi+0x8],0x1
   140062db9:	jne    0x14006306d
   140062dbf:	lea    rdx,[rbp+0x28]
   140062dc3:	lea    rcx,[rsi+0x30]
   140062dc7:	mov    DWORD PTR [rbp+0x28],0x6d6
   140062dce:	call   0x14002ffd0
   140062dd3:	lea    rcx,[rip+0x144e6]        # 0x1400772c0
   140062dda:	lea    rdx,[rbp+0x28]
   140062dde:	mov    DWORD PTR [rax],0x1b4
   140062de4:	mov    DWORD PTR [rax+0x4],0x6d6
   140062deb:	mov    QWORD PTR [rax+0x8],rcx
   140062def:	lea    rcx,[rsi+0x10]
   140062df3:	mov    DWORD PTR [rbp+0x30],0x6d6
   140062dfa:	mov    DWORD PTR [rbp+0x28],0x1b4
   140062e01:	call   0x14002ff30
   140062e06:	lea    rdx,[rbp+0x30]
   140062e0a:	lea    rcx,[rsi+0x30]
   140062e0e:	mov    rbx,rax
   140062e11:	call   0x14002ffd0
   140062e16:	mov    QWORD PTR [rbx],rax
   140062e19:	cmp    DWORD PTR [rsi+0x8],0x1
   140062e1d:	jne    0x14006306d
   140062e23:	lea    rdx,[rbp+0x28]
   140062e27:	lea    rcx,[rsi+0x30]
   140062e2b:	mov    DWORD PTR [rbp+0x28],0x6d7
   140062e32:	call   0x14002ffd0
   140062e37:	lea    rcx,[rip+0x14492]        # 0x1400772d0
   140062e3e:	lea    rdx,[rbp+0x28]
   140062e42:	mov    DWORD PTR [rax],0x1b5
   140062e48:	mov    DWORD PTR [rax+0x4],0x6d7
   140062e4f:	mov    QWORD PTR [rax+0x8],rcx
   140062e53:	lea    rcx,[rsi+0x10]
   140062e57:	mov    DWORD PTR [rbp+0x30],0x6d7
   140062e5e:	mov    DWORD PTR [rbp+0x28],0x1b5
   140062e65:	call   0x14002ff30
   140062e6a:	lea    rdx,[rbp+0x30]
   140062e6e:	lea    rcx,[rsi+0x30]
   140062e72:	mov    rbx,rax
   140062e75:	call   0x14002ffd0
   140062e7a:	mov    QWORD PTR [rbx],rax
   140062e7d:	cmp    DWORD PTR [rsi+0x8],0x1
   140062e81:	jne    0x14006306d
   140062e87:	lea    rdx,[rbp+0x28]
   140062e8b:	lea    rcx,[rsi+0x30]
   140062e8f:	mov    DWORD PTR [rbp+0x28],0x6d8
   140062e96:	call   0x14002ffd0
   140062e9b:	lea    rcx,[rip+0x14446]        # 0x1400772e8
   140062ea2:	lea    rdx,[rbp+0x28]
   140062ea6:	mov    DWORD PTR [rax],0x1b6
   140062eac:	mov    DWORD PTR [rax+0x4],0x6d8
   140062eb3:	mov    QWORD PTR [rax+0x8],rcx
   140062eb7:	lea    rcx,[rsi+0x10]
   140062ebb:	mov    DWORD PTR [rbp+0x30],0x6d8
   140062ec2:	mov    DWORD PTR [rbp+0x28],0x1b6
   140062ec9:	call   0x14002ff30
   140062ece:	lea    rdx,[rbp+0x30]
   140062ed2:	lea    rcx,[rsi+0x30]
   140062ed6:	mov    rbx,rax
   140062ed9:	call   0x14002ffd0
   140062ede:	mov    QWORD PTR [rbx],rax
   140062ee1:	cmp    DWORD PTR [rsi+0x8],0x1
   140062ee5:	jne    0x14006306d
   140062eeb:	lea    rdx,[rbp+0x28]
   140062eef:	lea    rcx,[rsi+0x30]
   140062ef3:	mov    DWORD PTR [rbp+0x28],0x6d9
   140062efa:	call   0x14002ffd0
   140062eff:	lea    rcx,[rip+0x143f2]        # 0x1400772f8
   140062f06:	lea    rdx,[rbp+0x28]
   140062f0a:	mov    DWORD PTR [rax],0x1b7
   140062f10:	mov    DWORD PTR [rax+0x4],0x6d9
   140062f17:	mov    QWORD PTR [rax+0x8],rcx
   140062f1b:	lea    rcx,[rsi+0x10]
   140062f1f:	mov    DWORD PTR [rbp+0x30],0x6d9
   140062f26:	mov    DWORD PTR [rbp+0x28],0x1b7
   140062f2d:	call   0x14002ff30
   140062f32:	lea    rdx,[rbp+0x30]
   140062f36:	lea    rcx,[rsi+0x30]
   140062f3a:	mov    rbx,rax
   140062f3d:	call   0x14002ffd0
   140062f42:	mov    QWORD PTR [rbx],rax
   140062f45:	cmp    DWORD PTR [rsi+0x8],0x1
   140062f49:	jne    0x14006306d
   140062f4f:	lea    rdx,[rbp+0x28]
   140062f53:	lea    rcx,[rsi+0x30]
   140062f57:	mov    DWORD PTR [rbp+0x28],0x6da
   140062f5e:	call   0x14002ffd0
   140062f63:	lea    rcx,[rip+0x1439e]        # 0x140077308
   140062f6a:	lea    rdx,[rbp+0x28]
   140062f6e:	mov    DWORD PTR [rax],0x1b8
   140062f74:	mov    DWORD PTR [rax+0x4],0x6da
   140062f7b:	mov    QWORD PTR [rax+0x8],rcx
   140062f7f:	lea    rcx,[rsi+0x10]
   140062f83:	mov    DWORD PTR [rbp+0x30],0x6da
   140062f8a:	mov    DWORD PTR [rbp+0x28],0x1b8
   140062f91:	call   0x14002ff30
   140062f96:	lea    rdx,[rbp+0x30]
   140062f9a:	lea    rcx,[rsi+0x30]
   140062f9e:	mov    rbx,rax
   140062fa1:	call   0x14002ffd0
   140062fa6:	mov    QWORD PTR [rbx],rax
   140062fa9:	cmp    DWORD PTR [rsi+0x8],0x1
   140062fad:	jne    0x14006306d
   140062fb3:	lea    rdx,[rbp+0x28]
   140062fb7:	lea    rcx,[rsi+0x30]
   140062fbb:	mov    DWORD PTR [rbp+0x28],0x6ea
   140062fc2:	call   0x14002ffd0
   140062fc7:	lea    rcx,[rip+0x1434a]        # 0x140077318
   140062fce:	lea    rdx,[rbp+0x28]
   140062fd2:	mov    DWORD PTR [rax],0x1c0
   140062fd8:	mov    DWORD PTR [rax+0x4],0x6ea
   140062fdf:	mov    QWORD PTR [rax+0x8],rcx
   140062fe3:	lea    rcx,[rsi+0x10]
   140062fe7:	mov    DWORD PTR [rbp+0x30],0x6ea
   140062fee:	mov    DWORD PTR [rbp+0x28],0x1c0
   140062ff5:	call   0x14002ff30
   140062ffa:	lea    rdx,[rbp+0x30]
   140062ffe:	lea    rcx,[rsi+0x30]
   140063002:	mov    rbx,rax
   140063005:	call   0x14002ffd0
   14006300a:	mov    QWORD PTR [rbx],rax
   14006300d:	cmp    DWORD PTR [rsi+0x8],0x1
   140063011:	jne    0x14006306d
   140063013:	lea    rdx,[rbp+0x28]
   140063017:	lea    rcx,[rsi+0x30]
   14006301b:	mov    DWORD PTR [rbp+0x28],0x6eb
   140063022:	call   0x14002ffd0
   140063027:	lea    rcx,[rip+0x14312]        # 0x140077340
   14006302e:	lea    rdx,[rbp+0x28]
   140063032:	mov    DWORD PTR [rax],0x1c1
   140063038:	mov    DWORD PTR [rax+0x4],0x6eb
   14006303f:	mov    QWORD PTR [rax+0x8],rcx
   140063043:	lea    rcx,[rsi+0x10]
   140063047:	mov    DWORD PTR [rbp+0x30],0x6eb
   14006304e:	mov    DWORD PTR [rbp+0x28],0x1c1
   140063055:	call   0x14002ff30
   14006305a:	lea    rdx,[rbp+0x30]
   14006305e:	lea    rcx,[rsi+0x30]
   140063062:	mov    rbx,rax
   140063065:	call   0x14002ffd0
   14006306a:	mov    QWORD PTR [rbx],rax
   14006306d:	cmp    DWORD PTR [rsi+0x8],0x2
   140063071:	jne    0x140066004
   140063077:	lea    rdx,[rbp+0x28]
   14006307b:	lea    rcx,[rsi+0x30]
   14006307f:	mov    DWORD PTR [rbp+0x28],0x3e8
   140063086:	call   0x14002ffd0
   14006308b:	xor    edx,edx
   14006308d:	lea    rcx,[rip+0x12034]        # 0x1400750c8
   140063094:	mov    DWORD PTR [rax],edx
   140063096:	mov    DWORD PTR [rax+0x4],0x3e8
   14006309d:	mov    DWORD PTR [rbp+0x28],edx
   1400630a0:	mov    QWORD PTR [rax+0x8],rcx
   1400630a4:	lea    rdx,[rbp+0x28]
   1400630a8:	lea    rcx,[rsi+0x10]
   1400630ac:	mov    DWORD PTR [rbp+0x30],0x3e8
   1400630b3:	call   0x14002ff30
   1400630b8:	lea    rdx,[rbp+0x30]
   1400630bc:	lea    rcx,[rsi+0x30]
   1400630c0:	mov    rbx,rax
   1400630c3:	call   0x14002ffd0
   1400630c8:	mov    QWORD PTR [rbx],rax
   1400630cb:	cmp    DWORD PTR [rsi+0x8],0x2
   1400630cf:	jne    0x140066004
   1400630d5:	lea    rdx,[rbp+0x28]
   1400630d9:	lea    rcx,[rsi+0x30]
   1400630dd:	mov    DWORD PTR [rbp+0x28],0x3e9
   1400630e4:	call   0x14002ffd0
   1400630e9:	lea    rcx,[rip+0x11ff0]        # 0x1400750e0
   1400630f0:	lea    rdx,[rbp+0x28]
   1400630f4:	mov    DWORD PTR [rax],0x51
   1400630fa:	mov    DWORD PTR [rax+0x4],0x3e9
   140063101:	mov    QWORD PTR [rax+0x8],rcx
   140063105:	lea    rcx,[rsi+0x10]
   140063109:	mov    DWORD PTR [rbp+0x30],0x3e9
   140063110:	mov    DWORD PTR [rbp+0x28],0x51
   140063117:	call   0x14002ff30
   14006311c:	lea    rdx,[rbp+0x30]
   140063120:	lea    rcx,[rsi+0x30]
   140063124:	mov    rbx,rax
   140063127:	call   0x14002ffd0
   14006312c:	mov    QWORD PTR [rbx],rax
   14006312f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063133:	jne    0x140066004
   140063139:	lea    rdx,[rbp+0x28]
   14006313d:	lea    rcx,[rsi+0x30]
   140063141:	mov    DWORD PTR [rbp+0x28],0x3eb
   140063148:	call   0x14002ffd0
   14006314d:	lea    rcx,[rip+0x11fa4]        # 0x1400750f8
   140063154:	lea    rdx,[rbp+0x28]
   140063158:	mov    DWORD PTR [rax],0x46
   14006315e:	mov    DWORD PTR [rax+0x4],0x3eb
   140063165:	mov    QWORD PTR [rax+0x8],rcx
   140063169:	lea    rcx,[rsi+0x10]
   14006316d:	mov    DWORD PTR [rbp+0x30],0x3eb
   140063174:	mov    DWORD PTR [rbp+0x28],0x46
   14006317b:	call   0x14002ff30
   140063180:	lea    rdx,[rbp+0x30]
   140063184:	lea    rcx,[rsi+0x30]
   140063188:	mov    rbx,rax
   14006318b:	call   0x14002ffd0
   140063190:	mov    QWORD PTR [rbx],rax
   140063193:	cmp    DWORD PTR [rsi+0x8],0x2
   140063197:	jne    0x140066004
   14006319d:	lea    rdx,[rbp+0x28]
   1400631a1:	lea    rcx,[rsi+0x30]
   1400631a5:	mov    DWORD PTR [rbp+0x28],0x3ec
   1400631ac:	call   0x14002ffd0
   1400631b1:	lea    rcx,[rip+0x11f50]        # 0x140075108
   1400631b8:	lea    rdx,[rbp+0x28]
   1400631bc:	mov    DWORD PTR [rax],0x3c
   1400631c2:	mov    DWORD PTR [rax+0x4],0x3ec
   1400631c9:	mov    QWORD PTR [rax+0x8],rcx
   1400631cd:	lea    rcx,[rsi+0x10]
   1400631d1:	mov    DWORD PTR [rbp+0x30],0x3ec
   1400631d8:	mov    DWORD PTR [rbp+0x28],0x3c
   1400631df:	call   0x14002ff30
   1400631e4:	lea    rdx,[rbp+0x30]
   1400631e8:	lea    rcx,[rsi+0x30]
   1400631ec:	mov    rbx,rax
   1400631ef:	call   0x14002ffd0
   1400631f4:	mov    QWORD PTR [rbx],rax
   1400631f7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400631fb:	jne    0x140066004
   140063201:	lea    rdx,[rbp+0x28]
   140063205:	lea    rcx,[rsi+0x30]
   140063209:	mov    DWORD PTR [rbp+0x28],0x3ed
   140063210:	call   0x14002ffd0
   140063215:	lea    rcx,[rip+0x11efc]        # 0x140075118
   14006321c:	lea    rdx,[rbp+0x28]
   140063220:	mov    DWORD PTR [rax],0x3d
   140063226:	mov    DWORD PTR [rax+0x4],0x3ed
   14006322d:	mov    QWORD PTR [rax+0x8],rcx
   140063231:	lea    rcx,[rsi+0x10]
   140063235:	mov    DWORD PTR [rbp+0x30],0x3ed
   14006323c:	mov    DWORD PTR [rbp+0x28],0x3d
   140063243:	call   0x14002ff30
   140063248:	lea    rdx,[rbp+0x30]
   14006324c:	lea    rcx,[rsi+0x30]
   140063250:	mov    rbx,rax
   140063253:	call   0x14002ffd0
   140063258:	mov    QWORD PTR [rbx],rax
   14006325b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006325f:	jne    0x140066004
   140063265:	lea    rdx,[rbp+0x28]
   140063269:	lea    rcx,[rsi+0x30]
   14006326d:	mov    DWORD PTR [rbp+0x28],0x3ee
   140063274:	call   0x14002ffd0
   140063279:	lea    rcx,[rip+0x11eb0]        # 0x140075130
   140063280:	lea    rdx,[rbp+0x28]
   140063284:	mov    DWORD PTR [rax],0x63
   14006328a:	mov    DWORD PTR [rax+0x4],0x3ee
   140063291:	mov    QWORD PTR [rax+0x8],rcx
   140063295:	lea    rcx,[rsi+0x10]
   140063299:	mov    DWORD PTR [rbp+0x30],0x3ee
   1400632a0:	mov    DWORD PTR [rbp+0x28],0x63
   1400632a7:	call   0x14002ff30
   1400632ac:	lea    rdx,[rbp+0x30]
   1400632b0:	lea    rcx,[rsi+0x30]
   1400632b4:	mov    rbx,rax
   1400632b7:	call   0x14002ffd0
   1400632bc:	mov    QWORD PTR [rbx],rax
   1400632bf:	cmp    DWORD PTR [rsi+0x8],0x2
   1400632c3:	jne    0x140066004
   1400632c9:	lea    rdx,[rbp+0x28]
   1400632cd:	lea    rcx,[rsi+0x30]
   1400632d1:	mov    DWORD PTR [rbp+0x28],0x3ef
   1400632d8:	call   0x14002ffd0
   1400632dd:	lea    rcx,[rip+0x11e64]        # 0x140075148
   1400632e4:	lea    rdx,[rbp+0x28]
   1400632e8:	mov    DWORD PTR [rax],0x68
   1400632ee:	mov    DWORD PTR [rax+0x4],0x3ef
   1400632f5:	mov    QWORD PTR [rax+0x8],rcx
   1400632f9:	lea    rcx,[rsi+0x10]
   1400632fd:	mov    DWORD PTR [rbp+0x30],0x3ef
   140063304:	mov    DWORD PTR [rbp+0x28],0x68
   14006330b:	call   0x14002ff30
   140063310:	lea    rdx,[rbp+0x30]
   140063314:	lea    rcx,[rsi+0x30]
   140063318:	mov    rbx,rax
   14006331b:	call   0x14002ffd0
   140063320:	mov    QWORD PTR [rbx],rax
   140063323:	cmp    DWORD PTR [rsi+0x8],0x2
   140063327:	jne    0x140066004
   14006332d:	lea    rdx,[rbp+0x28]
   140063331:	lea    rcx,[rsi+0x30]
   140063335:	mov    DWORD PTR [rbp+0x28],0x3f0
   14006333c:	call   0x14002ffd0
   140063341:	lea    rcx,[rip+0x11e18]        # 0x140075160
   140063348:	lea    rdx,[rbp+0x28]
   14006334c:	mov    DWORD PTR [rax],0x6d
   140063352:	mov    DWORD PTR [rax+0x4],0x3f0
   140063359:	mov    QWORD PTR [rax+0x8],rcx
   14006335d:	lea    rcx,[rsi+0x10]
   140063361:	mov    DWORD PTR [rbp+0x30],0x3f0
   140063368:	mov    DWORD PTR [rbp+0x28],0x6d
   14006336f:	call   0x14002ff30
   140063374:	lea    rdx,[rbp+0x30]
   140063378:	lea    rcx,[rsi+0x30]
   14006337c:	mov    rbx,rax
   14006337f:	call   0x14002ffd0
   140063384:	mov    QWORD PTR [rbx],rax
   140063387:	cmp    DWORD PTR [rsi+0x8],0x2
   14006338b:	jne    0x140066004
   140063391:	lea    rdx,[rbp+0x28]
   140063395:	lea    rcx,[rsi+0x30]
   140063399:	mov    DWORD PTR [rbp+0x28],0x41b
   1400633a0:	call   0x14002ffd0
   1400633a5:	lea    rcx,[rip+0x11ea4]        # 0x140075250
   1400633ac:	lea    rdx,[rbp+0x28]
   1400633b0:	mov    DWORD PTR [rax],0x1
   1400633b6:	mov    DWORD PTR [rax+0x4],0x41b
   1400633bd:	mov    QWORD PTR [rax+0x8],rcx
   1400633c1:	lea    rcx,[rsi+0x10]
   1400633c5:	mov    DWORD PTR [rbp+0x30],0x41b
   1400633cc:	mov    DWORD PTR [rbp+0x28],0x1
   1400633d3:	call   0x14002ff30
   1400633d8:	lea    rdx,[rbp+0x30]
   1400633dc:	lea    rcx,[rsi+0x30]
   1400633e0:	mov    rbx,rax
   1400633e3:	call   0x14002ffd0
   1400633e8:	mov    QWORD PTR [rbx],rax
   1400633eb:	cmp    DWORD PTR [rsi+0x8],0x2
   1400633ef:	jne    0x140066004
   1400633f5:	lea    rdx,[rbp+0x28]
   1400633f9:	lea    rcx,[rsi+0x30]
   1400633fd:	mov    DWORD PTR [rbp+0x28],0x41c
   140063404:	call   0x14002ffd0
   140063409:	lea    rcx,[rip+0x11e58]        # 0x140075268
   140063410:	lea    rdx,[rbp+0x28]
   140063414:	mov    DWORD PTR [rax],0x2
   14006341a:	mov    DWORD PTR [rax+0x4],0x41c
   140063421:	mov    QWORD PTR [rax+0x8],rcx
   140063425:	lea    rcx,[rsi+0x10]
   140063429:	mov    DWORD PTR [rbp+0x30],0x41c
   140063430:	mov    DWORD PTR [rbp+0x28],0x2
   140063437:	call   0x14002ff30
   14006343c:	lea    rdx,[rbp+0x30]
   140063440:	lea    rcx,[rsi+0x30]
   140063444:	mov    rbx,rax
   140063447:	call   0x14002ffd0
   14006344c:	mov    QWORD PTR [rbx],rax
   14006344f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063453:	jne    0x140066004
   140063459:	lea    rdx,[rbp+0x28]
   14006345d:	lea    rcx,[rsi+0x30]
   140063461:	mov    DWORD PTR [rbp+0x28],0x41d
   140063468:	call   0x14002ffd0
   14006346d:	lea    rcx,[rip+0x11e14]        # 0x140075288
   140063474:	lea    rdx,[rbp+0x28]
   140063478:	mov    DWORD PTR [rax],0x3
   14006347e:	mov    DWORD PTR [rax+0x4],0x41d
   140063485:	mov    QWORD PTR [rax+0x8],rcx
   140063489:	lea    rcx,[rsi+0x10]
   14006348d:	mov    DWORD PTR [rbp+0x30],0x41d
   140063494:	mov    DWORD PTR [rbp+0x28],0x3
   14006349b:	call   0x14002ff30
   1400634a0:	lea    rdx,[rbp+0x30]
   1400634a4:	lea    rcx,[rsi+0x30]
   1400634a8:	mov    rbx,rax
   1400634ab:	call   0x14002ffd0
   1400634b0:	mov    QWORD PTR [rbx],rax
   1400634b3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400634b7:	jne    0x140066004
   1400634bd:	lea    rdx,[rbp+0x28]
   1400634c1:	lea    rcx,[rsi+0x30]
   1400634c5:	mov    DWORD PTR [rbp+0x28],0x41e
   1400634cc:	call   0x14002ffd0
   1400634d1:	lea    rcx,[rip+0x11dd0]        # 0x1400752a8
   1400634d8:	lea    rdx,[rbp+0x28]
   1400634dc:	mov    DWORD PTR [rax],0x4
   1400634e2:	mov    DWORD PTR [rax+0x4],0x41e
   1400634e9:	mov    QWORD PTR [rax+0x8],rcx
   1400634ed:	lea    rcx,[rsi+0x10]
   1400634f1:	mov    DWORD PTR [rbp+0x30],0x41e
   1400634f8:	mov    DWORD PTR [rbp+0x28],0x4
   1400634ff:	call   0x14002ff30
   140063504:	lea    rdx,[rbp+0x30]
   140063508:	lea    rcx,[rsi+0x30]
   14006350c:	mov    rbx,rax
   14006350f:	call   0x14002ffd0
   140063514:	mov    QWORD PTR [rbx],rax
   140063517:	cmp    DWORD PTR [rsi+0x8],0x2
   14006351b:	jne    0x140066004
   140063521:	lea    rdx,[rbp+0x28]
   140063525:	lea    rcx,[rsi+0x30]
   140063529:	mov    DWORD PTR [rbp+0x28],0x41f
   140063530:	call   0x14002ffd0
   140063535:	lea    rcx,[rip+0x11d8c]        # 0x1400752c8
   14006353c:	lea    rdx,[rbp+0x28]
   140063540:	mov    DWORD PTR [rax],0x5
   140063546:	mov    DWORD PTR [rax+0x4],0x41f
   14006354d:	mov    QWORD PTR [rax+0x8],rcx
   140063551:	lea    rcx,[rsi+0x10]
   140063555:	mov    DWORD PTR [rbp+0x30],0x41f
   14006355c:	mov    DWORD PTR [rbp+0x28],0x5
   140063563:	call   0x14002ff30
   140063568:	lea    rdx,[rbp+0x30]
   14006356c:	lea    rcx,[rsi+0x30]
   140063570:	mov    rbx,rax
   140063573:	call   0x14002ffd0
   140063578:	mov    QWORD PTR [rbx],rax
   14006357b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006357f:	jne    0x140066004
   140063585:	lea    rdx,[rbp+0x28]
   140063589:	lea    rcx,[rsi+0x30]
   14006358d:	mov    DWORD PTR [rbp+0x28],0x420
   140063594:	call   0x14002ffd0
   140063599:	lea    rcx,[rip+0x11d48]        # 0x1400752e8
   1400635a0:	lea    rdx,[rbp+0x28]
   1400635a4:	mov    DWORD PTR [rax],0x6
   1400635aa:	mov    DWORD PTR [rax+0x4],0x420
   1400635b1:	mov    QWORD PTR [rax+0x8],rcx
   1400635b5:	lea    rcx,[rsi+0x10]
   1400635b9:	mov    DWORD PTR [rbp+0x30],0x420
   1400635c0:	mov    DWORD PTR [rbp+0x28],0x6
   1400635c7:	call   0x14002ff30
   1400635cc:	lea    rdx,[rbp+0x30]
   1400635d0:	lea    rcx,[rsi+0x30]
   1400635d4:	mov    rbx,rax
   1400635d7:	call   0x14002ffd0
   1400635dc:	mov    QWORD PTR [rbx],rax
   1400635df:	cmp    DWORD PTR [rsi+0x8],0x2
   1400635e3:	jne    0x140066004
   1400635e9:	lea    rdx,[rbp+0x28]
   1400635ed:	lea    rcx,[rsi+0x30]
   1400635f1:	mov    DWORD PTR [rbp+0x28],0x421
   1400635f8:	call   0x14002ffd0
   1400635fd:	lea    rcx,[rip+0x11d04]        # 0x140075308
   140063604:	lea    rdx,[rbp+0x28]
   140063608:	mov    DWORD PTR [rax],0x7
   14006360e:	mov    DWORD PTR [rax+0x4],0x421
   140063615:	mov    QWORD PTR [rax+0x8],rcx
   140063619:	lea    rcx,[rsi+0x10]
   14006361d:	mov    DWORD PTR [rbp+0x30],0x421
   140063624:	mov    DWORD PTR [rbp+0x28],0x7
   14006362b:	call   0x14002ff30
   140063630:	lea    rdx,[rbp+0x30]
   140063634:	lea    rcx,[rsi+0x30]
   140063638:	mov    rbx,rax
   14006363b:	call   0x14002ffd0
   140063640:	mov    QWORD PTR [rbx],rax
   140063643:	cmp    DWORD PTR [rsi+0x8],0x2
   140063647:	jne    0x140066004
   14006364d:	lea    rdx,[rbp+0x28]
   140063651:	lea    rcx,[rsi+0x30]
   140063655:	mov    DWORD PTR [rbp+0x28],0x422
   14006365c:	call   0x14002ffd0
   140063661:	lea    rcx,[rip+0x11cc0]        # 0x140075328
   140063668:	lea    rdx,[rbp+0x28]
   14006366c:	mov    DWORD PTR [rax],0x8
   140063672:	mov    DWORD PTR [rax+0x4],0x422
   140063679:	mov    QWORD PTR [rax+0x8],rcx
   14006367d:	lea    rcx,[rsi+0x10]
   140063681:	mov    DWORD PTR [rbp+0x30],0x422
   140063688:	mov    DWORD PTR [rbp+0x28],0x8
   14006368f:	call   0x14002ff30
   140063694:	lea    rdx,[rbp+0x30]
   140063698:	lea    rcx,[rsi+0x30]
   14006369c:	mov    rbx,rax
   14006369f:	call   0x14002ffd0
   1400636a4:	mov    QWORD PTR [rbx],rax
   1400636a7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400636ab:	jne    0x140066004
   1400636b1:	lea    rdx,[rbp+0x28]
   1400636b5:	lea    rcx,[rsi+0x30]
   1400636b9:	mov    DWORD PTR [rbp+0x28],0x423
   1400636c0:	call   0x14002ffd0
   1400636c5:	lea    rcx,[rip+0x11c74]        # 0x140075340
   1400636cc:	lea    rdx,[rbp+0x28]
   1400636d0:	mov    DWORD PTR [rax],0x9
   1400636d6:	mov    DWORD PTR [rax+0x4],0x423
   1400636dd:	mov    QWORD PTR [rax+0x8],rcx
   1400636e1:	lea    rcx,[rsi+0x10]
   1400636e5:	mov    DWORD PTR [rbp+0x30],0x423
   1400636ec:	mov    DWORD PTR [rbp+0x28],0x9
   1400636f3:	call   0x14002ff30
   1400636f8:	lea    rdx,[rbp+0x30]
   1400636fc:	lea    rcx,[rsi+0x30]
   140063700:	mov    rbx,rax
   140063703:	call   0x14002ffd0
   140063708:	mov    QWORD PTR [rbx],rax
   14006370b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006370f:	jne    0x140066004
   140063715:	lea    rdx,[rbp+0x28]
   140063719:	lea    rcx,[rsi+0x30]
   14006371d:	mov    DWORD PTR [rbp+0x28],0x424
   140063724:	call   0x14002ffd0
   140063729:	lea    rcx,[rip+0x11c30]        # 0x140075360
   140063730:	lea    rdx,[rbp+0x28]
   140063734:	mov    DWORD PTR [rax],0x5e
   14006373a:	mov    DWORD PTR [rax+0x4],0x424
   140063741:	mov    QWORD PTR [rax+0x8],rcx
   140063745:	lea    rcx,[rsi+0x10]
   140063749:	mov    DWORD PTR [rbp+0x30],0x424
   140063750:	mov    DWORD PTR [rbp+0x28],0x5e
   140063757:	call   0x14002ff30
   14006375c:	lea    rdx,[rbp+0x30]
   140063760:	lea    rcx,[rsi+0x30]
   140063764:	mov    rbx,rax
   140063767:	call   0x14002ffd0
   14006376c:	mov    QWORD PTR [rbx],rax
   14006376f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063773:	jne    0x140066004
   140063779:	lea    rdx,[rbp+0x28]
   14006377d:	lea    rcx,[rsi+0x30]
   140063781:	mov    DWORD PTR [rbp+0x28],0x425
   140063788:	call   0x14002ffd0
   14006378d:	lea    rcx,[rip+0x11be4]        # 0x140075378
   140063794:	lea    rdx,[rbp+0x28]
   140063798:	mov    DWORD PTR [rax],0x60
   14006379e:	mov    DWORD PTR [rax+0x4],0x425
   1400637a5:	mov    QWORD PTR [rax+0x8],rcx
   1400637a9:	lea    rcx,[rsi+0x10]
   1400637ad:	mov    DWORD PTR [rbp+0x30],0x425
   1400637b4:	mov    DWORD PTR [rbp+0x28],0x60
   1400637bb:	call   0x14002ff30
   1400637c0:	lea    rdx,[rbp+0x30]
   1400637c4:	lea    rcx,[rsi+0x30]
   1400637c8:	mov    rbx,rax
   1400637cb:	call   0x14002ffd0
   1400637d0:	mov    QWORD PTR [rbx],rax
   1400637d3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400637d7:	jne    0x140066004
   1400637dd:	lea    rdx,[rbp+0x28]
   1400637e1:	lea    rcx,[rsi+0x30]
   1400637e5:	mov    DWORD PTR [rbp+0x28],0x426
   1400637ec:	call   0x14002ffd0
   1400637f1:	lea    rcx,[rip+0x11ba0]        # 0x140075398
   1400637f8:	lea    rdx,[rbp+0x28]
   1400637fc:	mov    DWORD PTR [rax],0x61
   140063802:	mov    DWORD PTR [rax+0x4],0x426
   140063809:	mov    QWORD PTR [rax+0x8],rcx
   14006380d:	lea    rcx,[rsi+0x10]
   140063811:	mov    DWORD PTR [rbp+0x30],0x426
   140063818:	mov    DWORD PTR [rbp+0x28],0x61
   14006381f:	call   0x14002ff30
   140063824:	lea    rdx,[rbp+0x30]
   140063828:	lea    rcx,[rsi+0x30]
   14006382c:	mov    rbx,rax
   14006382f:	call   0x14002ffd0
   140063834:	mov    QWORD PTR [rbx],rax
   140063837:	cmp    DWORD PTR [rsi+0x8],0x2
   14006383b:	jne    0x140066004
   140063841:	lea    rdx,[rbp+0x28]
   140063845:	lea    rcx,[rsi+0x30]
   140063849:	mov    DWORD PTR [rbp+0x28],0x428
   140063850:	call   0x14002ffd0
   140063855:	lea    rcx,[rip+0x11b74]        # 0x1400753d0
   14006385c:	lea    rdx,[rbp+0x28]
   140063860:	mov    DWORD PTR [rax],0x5f
   140063866:	mov    DWORD PTR [rax+0x4],0x428
   14006386d:	mov    QWORD PTR [rax+0x8],rcx
   140063871:	lea    rcx,[rsi+0x10]
   140063875:	mov    DWORD PTR [rbp+0x30],0x428
   14006387c:	mov    DWORD PTR [rbp+0x28],0x5f
   140063883:	call   0x14002ff30
   140063888:	lea    rdx,[rbp+0x30]
   14006388c:	lea    rcx,[rsi+0x30]
   140063890:	mov    rbx,rax
   140063893:	call   0x14002ffd0
   140063898:	mov    QWORD PTR [rbx],rax
   14006389b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006389f:	jne    0x140066004
   1400638a5:	lea    rdx,[rbp+0x28]
   1400638a9:	lea    rcx,[rsi+0x30]
   1400638ad:	mov    DWORD PTR [rbp+0x28],0x429
   1400638b4:	call   0x14002ffd0
   1400638b9:	lea    rcx,[rip+0x11b30]        # 0x1400753f0
   1400638c0:	lea    rdx,[rbp+0x28]
   1400638c4:	mov    DWORD PTR [rax],0x76
   1400638ca:	mov    DWORD PTR [rax+0x4],0x429
   1400638d1:	mov    QWORD PTR [rax+0x8],rcx
   1400638d5:	lea    rcx,[rsi+0x10]
   1400638d9:	mov    DWORD PTR [rbp+0x30],0x429
   1400638e0:	mov    DWORD PTR [rbp+0x28],0x76
   1400638e7:	call   0x14002ff30
   1400638ec:	lea    rdx,[rbp+0x30]
   1400638f0:	lea    rcx,[rsi+0x30]
   1400638f4:	mov    rbx,rax
   1400638f7:	call   0x14002ffd0
   1400638fc:	mov    QWORD PTR [rbx],rax
   1400638ff:	cmp    DWORD PTR [rsi+0x8],0x2
   140063903:	jne    0x140066004
   140063909:	lea    rdx,[rbp+0x28]
   14006390d:	lea    rcx,[rsi+0x30]
   140063911:	mov    DWORD PTR [rbp+0x28],0x42a
   140063918:	call   0x14002ffd0
   14006391d:	lea    rcx,[rip+0x11ae4]        # 0x140075408
   140063924:	lea    rdx,[rbp+0x28]
   140063928:	mov    DWORD PTR [rax],0x77
   14006392e:	mov    DWORD PTR [rax+0x4],0x42a
   140063935:	mov    QWORD PTR [rax+0x8],rcx
   140063939:	lea    rcx,[rsi+0x10]
   14006393d:	mov    DWORD PTR [rbp+0x30],0x42a
   140063944:	mov    DWORD PTR [rbp+0x28],0x77
   14006394b:	call   0x14002ff30
   140063950:	lea    rdx,[rbp+0x30]
   140063954:	lea    rcx,[rsi+0x30]
   140063958:	mov    rbx,rax
   14006395b:	call   0x14002ffd0
   140063960:	mov    QWORD PTR [rbx],rax
   140063963:	cmp    DWORD PTR [rsi+0x8],0x2
   140063967:	jne    0x140066004
   14006396d:	lea    rdx,[rbp+0x28]
   140063971:	lea    rcx,[rsi+0x30]
   140063975:	mov    DWORD PTR [rbp+0x28],0x488
   14006397c:	call   0x14002ffd0
   140063981:	lea    rcx,[rip+0x11aa0]        # 0x140075428
   140063988:	lea    rdx,[rbp+0x28]
   14006398c:	mov    DWORD PTR [rax],0xb
   140063992:	mov    DWORD PTR [rax+0x4],0x488
   140063999:	mov    QWORD PTR [rax+0x8],rcx
   14006399d:	lea    rcx,[rsi+0x10]
   1400639a1:	mov    DWORD PTR [rbp+0x30],0x488
   1400639a8:	mov    DWORD PTR [rbp+0x28],0xb
   1400639af:	call   0x14002ff30
   1400639b4:	lea    rdx,[rbp+0x30]
   1400639b8:	lea    rcx,[rsi+0x30]
   1400639bc:	mov    rbx,rax
   1400639bf:	call   0x14002ffd0
   1400639c4:	mov    QWORD PTR [rbx],rax
   1400639c7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400639cb:	jne    0x140066004
   1400639d1:	lea    rdx,[rbp+0x28]
   1400639d5:	lea    rcx,[rsi+0x30]
   1400639d9:	mov    DWORD PTR [rbp+0x28],0x489
   1400639e0:	call   0x14002ffd0
   1400639e5:	lea    rcx,[rip+0x11a54]        # 0x140075440
   1400639ec:	lea    rdx,[rbp+0x28]
   1400639f0:	mov    DWORD PTR [rax],0xd
   1400639f6:	mov    DWORD PTR [rax+0x4],0x489
   1400639fd:	mov    QWORD PTR [rax+0x8],rcx
   140063a01:	lea    rcx,[rsi+0x10]
   140063a05:	mov    DWORD PTR [rbp+0x30],0x489
   140063a0c:	mov    DWORD PTR [rbp+0x28],0xd
   140063a13:	call   0x14002ff30
   140063a18:	lea    rdx,[rbp+0x30]
   140063a1c:	lea    rcx,[rsi+0x30]
   140063a20:	mov    rbx,rax
   140063a23:	call   0x14002ffd0
   140063a28:	mov    QWORD PTR [rbx],rax
   140063a2b:	cmp    DWORD PTR [rsi+0x8],0x2
   140063a2f:	jne    0x140066004
   140063a35:	lea    rdx,[rbp+0x28]
   140063a39:	lea    rcx,[rsi+0x30]
   140063a3d:	mov    DWORD PTR [rbp+0x28],0x48a
   140063a44:	call   0x14002ffd0
   140063a49:	lea    rcx,[rip+0x11a08]        # 0x140075458
   140063a50:	lea    rdx,[rbp+0x28]
   140063a54:	mov    DWORD PTR [rax],0xc
   140063a5a:	mov    DWORD PTR [rax+0x4],0x48a
   140063a61:	mov    QWORD PTR [rax+0x8],rcx
   140063a65:	lea    rcx,[rsi+0x10]
   140063a69:	mov    DWORD PTR [rbp+0x30],0x48a
   140063a70:	mov    DWORD PTR [rbp+0x28],0xc
   140063a77:	call   0x14002ff30
   140063a7c:	lea    rdx,[rbp+0x30]
   140063a80:	lea    rcx,[rsi+0x30]
   140063a84:	mov    rbx,rax
   140063a87:	call   0x14002ffd0
   140063a8c:	mov    QWORD PTR [rbx],rax
   140063a8f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063a93:	jne    0x140066004
   140063a99:	lea    rdx,[rbp+0x28]
   140063a9d:	lea    rcx,[rsi+0x30]
   140063aa1:	mov    DWORD PTR [rbp+0x28],0x48b
   140063aa8:	call   0x14002ffd0
   140063aad:	lea    rcx,[rip+0x119bc]        # 0x140075470
   140063ab4:	lea    rdx,[rbp+0x28]
   140063ab8:	mov    DWORD PTR [rax],0xe
   140063abe:	mov    DWORD PTR [rax+0x4],0x48b
   140063ac5:	mov    QWORD PTR [rax+0x8],rcx
   140063ac9:	lea    rcx,[rsi+0x10]
   140063acd:	mov    DWORD PTR [rbp+0x30],0x48b
   140063ad4:	mov    DWORD PTR [rbp+0x28],0xe
   140063adb:	call   0x14002ff30
   140063ae0:	lea    rdx,[rbp+0x30]
   140063ae4:	lea    rcx,[rsi+0x30]
   140063ae8:	mov    rbx,rax
   140063aeb:	call   0x14002ffd0
   140063af0:	mov    QWORD PTR [rbx],rax
   140063af3:	cmp    DWORD PTR [rsi+0x8],0x2
   140063af7:	jne    0x140066004
   140063afd:	lea    rdx,[rbp+0x28]
   140063b01:	lea    rcx,[rsi+0x30]
   140063b05:	mov    DWORD PTR [rbp+0x28],0x48c
   140063b0c:	call   0x14002ffd0
   140063b11:	lea    rcx,[rip+0x11968]        # 0x140075480
   140063b18:	lea    rdx,[rbp+0x28]
   140063b1c:	mov    DWORD PTR [rax],0xa
   140063b22:	mov    DWORD PTR [rax+0x4],0x48c
   140063b29:	mov    QWORD PTR [rax+0x8],rcx
   140063b2d:	lea    rcx,[rsi+0x10]
   140063b31:	mov    DWORD PTR [rbp+0x30],0x48c
   140063b38:	mov    DWORD PTR [rbp+0x28],0xa
   140063b3f:	call   0x14002ff30
   140063b44:	lea    rdx,[rbp+0x30]
   140063b48:	lea    rcx,[rsi+0x30]
   140063b4c:	mov    rbx,rax
   140063b4f:	call   0x14002ffd0
   140063b54:	mov    QWORD PTR [rbx],rax
   140063b57:	cmp    DWORD PTR [rsi+0x8],0x2
   140063b5b:	jne    0x140066004
   140063b61:	lea    rdx,[rbp+0x28]
   140063b65:	lea    rcx,[rsi+0x30]
   140063b69:	mov    DWORD PTR [rbp+0x28],0x492
   140063b70:	call   0x14002ffd0
   140063b75:	lea    rcx,[rip+0x1191c]        # 0x140075498
   140063b7c:	lea    rdx,[rbp+0x28]
   140063b80:	mov    DWORD PTR [rax],0x10
   140063b86:	mov    DWORD PTR [rax+0x4],0x492
   140063b8d:	mov    QWORD PTR [rax+0x8],rcx
   140063b91:	lea    rcx,[rsi+0x10]
   140063b95:	mov    DWORD PTR [rbp+0x30],0x492
   140063b9c:	mov    DWORD PTR [rbp+0x28],0x10
   140063ba3:	call   0x14002ff30
   140063ba8:	lea    rdx,[rbp+0x30]
   140063bac:	lea    rcx,[rsi+0x30]
   140063bb0:	mov    rbx,rax
   140063bb3:	call   0x14002ffd0
   140063bb8:	mov    QWORD PTR [rbx],rax
   140063bbb:	cmp    DWORD PTR [rsi+0x8],0x2
   140063bbf:	jne    0x140066004
   140063bc5:	lea    rdx,[rbp+0x28]
   140063bc9:	lea    rcx,[rsi+0x30]
   140063bcd:	mov    DWORD PTR [rbp+0x28],0x493
   140063bd4:	call   0x14002ffd0
   140063bd9:	lea    rcx,[rip+0x118d0]        # 0x1400754b0
   140063be0:	lea    rdx,[rbp+0x28]
   140063be4:	mov    DWORD PTR [rax],0x12
   140063bea:	mov    DWORD PTR [rax+0x4],0x493
   140063bf1:	mov    QWORD PTR [rax+0x8],rcx
   140063bf5:	lea    rcx,[rsi+0x10]
   140063bf9:	mov    DWORD PTR [rbp+0x30],0x493
   140063c00:	mov    DWORD PTR [rbp+0x28],0x12
   140063c07:	call   0x14002ff30
   140063c0c:	lea    rdx,[rbp+0x30]
   140063c10:	lea    rcx,[rsi+0x30]
   140063c14:	mov    rbx,rax
   140063c17:	call   0x14002ffd0
   140063c1c:	mov    QWORD PTR [rbx],rax
   140063c1f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063c23:	jne    0x140066004
   140063c29:	lea    rdx,[rbp+0x28]
   140063c2d:	lea    rcx,[rsi+0x30]
   140063c31:	mov    DWORD PTR [rbp+0x28],0x494
   140063c38:	call   0x14002ffd0
   140063c3d:	lea    rcx,[rip+0x11884]        # 0x1400754c8
   140063c44:	lea    rdx,[rbp+0x28]
   140063c48:	mov    DWORD PTR [rax],0x11
   140063c4e:	mov    DWORD PTR [rax+0x4],0x494
   140063c55:	mov    QWORD PTR [rax+0x8],rcx
   140063c59:	lea    rcx,[rsi+0x10]
   140063c5d:	mov    DWORD PTR [rbp+0x30],0x494
   140063c64:	mov    DWORD PTR [rbp+0x28],0x11
   140063c6b:	call   0x14002ff30
   140063c70:	lea    rdx,[rbp+0x30]
   140063c74:	lea    rcx,[rsi+0x30]
   140063c78:	mov    rbx,rax
   140063c7b:	call   0x14002ffd0
   140063c80:	mov    QWORD PTR [rbx],rax
   140063c83:	cmp    DWORD PTR [rsi+0x8],0x2
   140063c87:	jne    0x140066004
   140063c8d:	lea    rdx,[rbp+0x28]
   140063c91:	lea    rcx,[rsi+0x30]
   140063c95:	mov    DWORD PTR [rbp+0x28],0x495
   140063c9c:	call   0x14002ffd0
   140063ca1:	lea    rcx,[rip+0x11838]        # 0x1400754e0
   140063ca8:	lea    rdx,[rbp+0x28]
   140063cac:	mov    DWORD PTR [rax],0x13
   140063cb2:	mov    DWORD PTR [rax+0x4],0x495
   140063cb9:	mov    QWORD PTR [rax+0x8],rcx
   140063cbd:	lea    rcx,[rsi+0x10]
   140063cc1:	mov    DWORD PTR [rbp+0x30],0x495
   140063cc8:	mov    DWORD PTR [rbp+0x28],0x13
   140063ccf:	call   0x14002ff30
   140063cd4:	lea    rdx,[rbp+0x30]
   140063cd8:	lea    rcx,[rsi+0x30]
   140063cdc:	mov    rbx,rax
   140063cdf:	call   0x14002ffd0
   140063ce4:	mov    QWORD PTR [rbx],rax
   140063ce7:	cmp    DWORD PTR [rsi+0x8],0x2
   140063ceb:	jne    0x140066004
   140063cf1:	lea    rdx,[rbp+0x28]
   140063cf5:	lea    rcx,[rsi+0x30]
   140063cf9:	mov    DWORD PTR [rbp+0x28],0x496
   140063d00:	call   0x14002ffd0
   140063d05:	lea    rcx,[rip+0x117e4]        # 0x1400754f0
   140063d0c:	lea    rdx,[rbp+0x28]
   140063d10:	mov    DWORD PTR [rax],0xf
   140063d16:	mov    DWORD PTR [rax+0x4],0x496
   140063d1d:	mov    QWORD PTR [rax+0x8],rcx
   140063d21:	lea    rcx,[rsi+0x10]
   140063d25:	mov    DWORD PTR [rbp+0x30],0x496
   140063d2c:	mov    DWORD PTR [rbp+0x28],0xf
   140063d33:	call   0x14002ff30
   140063d38:	lea    rdx,[rbp+0x30]
   140063d3c:	lea    rcx,[rsi+0x30]
   140063d40:	mov    rbx,rax
   140063d43:	call   0x14002ffd0
   140063d48:	mov    QWORD PTR [rbx],rax
   140063d4b:	cmp    DWORD PTR [rsi+0x8],0x2
   140063d4f:	jne    0x140066004
   140063d55:	lea    rdx,[rbp+0x28]
   140063d59:	lea    rcx,[rsi+0x30]
   140063d5d:	mov    DWORD PTR [rbp+0x28],0x49c
   140063d64:	call   0x14002ffd0
   140063d69:	lea    rcx,[rip+0x11798]        # 0x140075508
   140063d70:	lea    rdx,[rbp+0x28]
   140063d74:	mov    DWORD PTR [rax],0x15
   140063d7a:	mov    DWORD PTR [rax+0x4],0x49c
   140063d81:	mov    QWORD PTR [rax+0x8],rcx
   140063d85:	lea    rcx,[rsi+0x10]
   140063d89:	mov    DWORD PTR [rbp+0x30],0x49c
   140063d90:	mov    DWORD PTR [rbp+0x28],0x15
   140063d97:	call   0x14002ff30
   140063d9c:	lea    rdx,[rbp+0x30]
   140063da0:	lea    rcx,[rsi+0x30]
   140063da4:	mov    rbx,rax
   140063da7:	call   0x14002ffd0
   140063dac:	mov    QWORD PTR [rbx],rax
   140063daf:	cmp    DWORD PTR [rsi+0x8],0x2
   140063db3:	jne    0x140066004
   140063db9:	lea    rdx,[rbp+0x28]
   140063dbd:	lea    rcx,[rsi+0x30]
   140063dc1:	mov    DWORD PTR [rbp+0x28],0x49d
   140063dc8:	call   0x14002ffd0
   140063dcd:	lea    rcx,[rip+0x1174c]        # 0x140075520
   140063dd4:	lea    rdx,[rbp+0x28]
   140063dd8:	mov    DWORD PTR [rax],0x17
   140063dde:	mov    DWORD PTR [rax+0x4],0x49d
   140063de5:	mov    QWORD PTR [rax+0x8],rcx
   140063de9:	lea    rcx,[rsi+0x10]
   140063ded:	mov    DWORD PTR [rbp+0x30],0x49d
   140063df4:	mov    DWORD PTR [rbp+0x28],0x17
   140063dfb:	call   0x14002ff30
   140063e00:	lea    rdx,[rbp+0x30]
   140063e04:	lea    rcx,[rsi+0x30]
   140063e08:	mov    rbx,rax
   140063e0b:	call   0x14002ffd0
   140063e10:	mov    QWORD PTR [rbx],rax
   140063e13:	cmp    DWORD PTR [rsi+0x8],0x2
   140063e17:	jne    0x140066004
   140063e1d:	lea    rdx,[rbp+0x28]
   140063e21:	lea    rcx,[rsi+0x30]
   140063e25:	mov    DWORD PTR [rbp+0x28],0x49e
   140063e2c:	call   0x14002ffd0
   140063e31:	lea    rcx,[rip+0x11700]        # 0x140075538
   140063e38:	lea    rdx,[rbp+0x28]
   140063e3c:	mov    DWORD PTR [rax],0x16
   140063e42:	mov    DWORD PTR [rax+0x4],0x49e
   140063e49:	mov    QWORD PTR [rax+0x8],rcx
   140063e4d:	lea    rcx,[rsi+0x10]
   140063e51:	mov    DWORD PTR [rbp+0x30],0x49e
   140063e58:	mov    DWORD PTR [rbp+0x28],0x16
   140063e5f:	call   0x14002ff30
   140063e64:	lea    rdx,[rbp+0x30]
   140063e68:	lea    rcx,[rsi+0x30]
   140063e6c:	mov    rbx,rax
   140063e6f:	call   0x14002ffd0
   140063e74:	mov    QWORD PTR [rbx],rax
   140063e77:	cmp    DWORD PTR [rsi+0x8],0x2
   140063e7b:	jne    0x140066004
   140063e81:	lea    rdx,[rbp+0x28]
   140063e85:	lea    rcx,[rsi+0x30]
   140063e89:	mov    DWORD PTR [rbp+0x28],0x49f
   140063e90:	call   0x14002ffd0
   140063e95:	lea    rcx,[rip+0x116b4]        # 0x140075550
   140063e9c:	lea    rdx,[rbp+0x28]
   140063ea0:	mov    DWORD PTR [rax],0x18
   140063ea6:	mov    DWORD PTR [rax+0x4],0x49f
   140063ead:	mov    QWORD PTR [rax+0x8],rcx
   140063eb1:	lea    rcx,[rsi+0x10]
   140063eb5:	mov    DWORD PTR [rbp+0x30],0x49f
   140063ebc:	mov    DWORD PTR [rbp+0x28],0x18
   140063ec3:	call   0x14002ff30
   140063ec8:	lea    rdx,[rbp+0x30]
   140063ecc:	lea    rcx,[rsi+0x30]
   140063ed0:	mov    rbx,rax
   140063ed3:	call   0x14002ffd0
   140063ed8:	mov    QWORD PTR [rbx],rax
   140063edb:	cmp    DWORD PTR [rsi+0x8],0x2
   140063edf:	jne    0x140066004
   140063ee5:	lea    rdx,[rbp+0x28]
   140063ee9:	lea    rcx,[rsi+0x30]
   140063eed:	mov    DWORD PTR [rbp+0x28],0x4a0
   140063ef4:	call   0x14002ffd0
   140063ef9:	lea    rcx,[rip+0x11660]        # 0x140075560
   140063f00:	lea    rdx,[rbp+0x28]
   140063f04:	mov    DWORD PTR [rax],0x14
   140063f0a:	mov    DWORD PTR [rax+0x4],0x4a0
   140063f11:	mov    QWORD PTR [rax+0x8],rcx
   140063f15:	lea    rcx,[rsi+0x10]
   140063f19:	mov    DWORD PTR [rbp+0x30],0x4a0
   140063f20:	mov    DWORD PTR [rbp+0x28],0x14
   140063f27:	call   0x14002ff30
   140063f2c:	lea    rdx,[rbp+0x30]
   140063f30:	lea    rcx,[rsi+0x30]
   140063f34:	mov    rbx,rax
   140063f37:	call   0x14002ffd0
   140063f3c:	mov    QWORD PTR [rbx],rax
   140063f3f:	cmp    DWORD PTR [rsi+0x8],0x2
   140063f43:	jne    0x140066004
   140063f49:	lea    rdx,[rbp+0x28]
   140063f4d:	lea    rcx,[rsi+0x30]
   140063f51:	mov    DWORD PTR [rbp+0x28],0x4a6
   140063f58:	call   0x14002ffd0
   140063f5d:	lea    rcx,[rip+0x11614]        # 0x140075578
   140063f64:	lea    rdx,[rbp+0x28]
   140063f68:	mov    DWORD PTR [rax],0x1a
   140063f6e:	mov    DWORD PTR [rax+0x4],0x4a6
   140063f75:	mov    QWORD PTR [rax+0x8],rcx
   140063f79:	lea    rcx,[rsi+0x10]
   140063f7d:	mov    DWORD PTR [rbp+0x30],0x4a6
   140063f84:	mov    DWORD PTR [rbp+0x28],0x1a
   140063f8b:	call   0x14002ff30
   140063f90:	lea    rdx,[rbp+0x30]
   140063f94:	lea    rcx,[rsi+0x30]
   140063f98:	mov    rbx,rax
   140063f9b:	call   0x14002ffd0
   140063fa0:	mov    QWORD PTR [rbx],rax
   140063fa3:	cmp    DWORD PTR [rsi+0x8],0x2
   140063fa7:	jne    0x140066004
   140063fad:	lea    rdx,[rbp+0x28]
   140063fb1:	lea    rcx,[rsi+0x30]
   140063fb5:	mov    DWORD PTR [rbp+0x28],0x4a7
   140063fbc:	call   0x14002ffd0
   140063fc1:	lea    rcx,[rip+0x115c8]        # 0x140075590
   140063fc8:	lea    rdx,[rbp+0x28]
   140063fcc:	mov    DWORD PTR [rax],0x1c
   140063fd2:	mov    DWORD PTR [rax+0x4],0x4a7
   140063fd9:	mov    QWORD PTR [rax+0x8],rcx
   140063fdd:	lea    rcx,[rsi+0x10]
   140063fe1:	mov    DWORD PTR [rbp+0x30],0x4a7
   140063fe8:	mov    DWORD PTR [rbp+0x28],0x1c
   140063fef:	call   0x14002ff30
   140063ff4:	lea    rdx,[rbp+0x30]
   140063ff8:	lea    rcx,[rsi+0x30]
   140063ffc:	mov    rbx,rax
   140063fff:	call   0x14002ffd0
   140064004:	mov    QWORD PTR [rbx],rax
   140064007:	cmp    DWORD PTR [rsi+0x8],0x2
   14006400b:	jne    0x140066004
   140064011:	lea    rdx,[rbp+0x28]
   140064015:	lea    rcx,[rsi+0x30]
   140064019:	mov    DWORD PTR [rbp+0x28],0x4a8
   140064020:	call   0x14002ffd0
   140064025:	lea    rcx,[rip+0x1157c]        # 0x1400755a8
   14006402c:	lea    rdx,[rbp+0x28]
   140064030:	mov    DWORD PTR [rax],0x1b
   140064036:	mov    DWORD PTR [rax+0x4],0x4a8
   14006403d:	mov    QWORD PTR [rax+0x8],rcx
   140064041:	lea    rcx,[rsi+0x10]
   140064045:	mov    DWORD PTR [rbp+0x30],0x4a8
   14006404c:	mov    DWORD PTR [rbp+0x28],0x1b
   140064053:	call   0x14002ff30
   140064058:	lea    rdx,[rbp+0x30]
   14006405c:	lea    rcx,[rsi+0x30]
   140064060:	mov    rbx,rax
   140064063:	call   0x14002ffd0
   140064068:	mov    QWORD PTR [rbx],rax
   14006406b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006406f:	jne    0x140066004
   140064075:	lea    rdx,[rbp+0x28]
   140064079:	lea    rcx,[rsi+0x30]
   14006407d:	mov    DWORD PTR [rbp+0x28],0x4a9
   140064084:	call   0x14002ffd0
   140064089:	lea    rcx,[rip+0x11530]        # 0x1400755c0
   140064090:	lea    rdx,[rbp+0x28]
   140064094:	mov    DWORD PTR [rax],0x1d
   14006409a:	mov    DWORD PTR [rax+0x4],0x4a9
   1400640a1:	mov    QWORD PTR [rax+0x8],rcx
   1400640a5:	lea    rcx,[rsi+0x10]
   1400640a9:	mov    DWORD PTR [rbp+0x30],0x4a9
   1400640b0:	mov    DWORD PTR [rbp+0x28],0x1d
   1400640b7:	call   0x14002ff30
   1400640bc:	lea    rdx,[rbp+0x30]
   1400640c0:	lea    rcx,[rsi+0x30]
   1400640c4:	mov    rbx,rax
   1400640c7:	call   0x14002ffd0
   1400640cc:	mov    QWORD PTR [rbx],rax
   1400640cf:	cmp    DWORD PTR [rsi+0x8],0x2
   1400640d3:	jne    0x140066004
   1400640d9:	lea    rdx,[rbp+0x28]
   1400640dd:	lea    rcx,[rsi+0x30]
   1400640e1:	mov    DWORD PTR [rbp+0x28],0x4aa
   1400640e8:	call   0x14002ffd0
   1400640ed:	lea    rcx,[rip+0x114dc]        # 0x1400755d0
   1400640f4:	lea    rdx,[rbp+0x28]
   1400640f8:	mov    DWORD PTR [rax],0x19
   1400640fe:	mov    DWORD PTR [rax+0x4],0x4aa
   140064105:	mov    QWORD PTR [rax+0x8],rcx
   140064109:	lea    rcx,[rsi+0x10]
   14006410d:	mov    DWORD PTR [rbp+0x30],0x4aa
   140064114:	mov    DWORD PTR [rbp+0x28],0x19
   14006411b:	call   0x14002ff30
   140064120:	lea    rdx,[rbp+0x30]
   140064124:	lea    rcx,[rsi+0x30]
   140064128:	mov    rbx,rax
   14006412b:	call   0x14002ffd0
   140064130:	mov    QWORD PTR [rbx],rax
   140064133:	cmp    DWORD PTR [rsi+0x8],0x2
   140064137:	jne    0x140066004
   14006413d:	lea    rdx,[rbp+0x28]
   140064141:	lea    rcx,[rsi+0x30]
   140064145:	mov    DWORD PTR [rbp+0x28],0x4b0
   14006414c:	call   0x14002ffd0
   140064151:	lea    rcx,[rip+0x11490]        # 0x1400755e8
   140064158:	lea    rdx,[rbp+0x28]
   14006415c:	mov    DWORD PTR [rax],0x1f
   140064162:	mov    DWORD PTR [rax+0x4],0x4b0
   140064169:	mov    QWORD PTR [rax+0x8],rcx
   14006416d:	lea    rcx,[rsi+0x10]
   140064171:	mov    DWORD PTR [rbp+0x30],0x4b0
   140064178:	mov    DWORD PTR [rbp+0x28],0x1f
   14006417f:	call   0x14002ff30
   140064184:	lea    rdx,[rbp+0x30]
   140064188:	lea    rcx,[rsi+0x30]
   14006418c:	mov    rbx,rax
   14006418f:	call   0x14002ffd0
   140064194:	mov    QWORD PTR [rbx],rax
   140064197:	cmp    DWORD PTR [rsi+0x8],0x2
   14006419b:	jne    0x140066004
   1400641a1:	lea    rdx,[rbp+0x28]
   1400641a5:	lea    rcx,[rsi+0x30]
   1400641a9:	mov    DWORD PTR [rbp+0x28],0x4b1
   1400641b0:	call   0x14002ffd0
   1400641b5:	lea    rcx,[rip+0x11444]        # 0x140075600
   1400641bc:	lea    rdx,[rbp+0x28]
   1400641c0:	mov    DWORD PTR [rax],0x21
   1400641c6:	mov    DWORD PTR [rax+0x4],0x4b1
   1400641cd:	mov    QWORD PTR [rax+0x8],rcx
   1400641d1:	lea    rcx,[rsi+0x10]
   1400641d5:	mov    DWORD PTR [rbp+0x30],0x4b1
   1400641dc:	mov    DWORD PTR [rbp+0x28],0x21
   1400641e3:	call   0x14002ff30
   1400641e8:	lea    rdx,[rbp+0x30]
   1400641ec:	lea    rcx,[rsi+0x30]
   1400641f0:	mov    rbx,rax
   1400641f3:	call   0x14002ffd0
   1400641f8:	mov    QWORD PTR [rbx],rax
   1400641fb:	cmp    DWORD PTR [rsi+0x8],0x2
   1400641ff:	jne    0x140066004
   140064205:	lea    rdx,[rbp+0x28]
   140064209:	lea    rcx,[rsi+0x30]
   14006420d:	mov    DWORD PTR [rbp+0x28],0x4b2
   140064214:	call   0x14002ffd0
   140064219:	lea    rcx,[rip+0x113f8]        # 0x140075618
   140064220:	lea    rdx,[rbp+0x28]
   140064224:	mov    DWORD PTR [rax],0x20
   14006422a:	mov    DWORD PTR [rax+0x4],0x4b2
   140064231:	mov    QWORD PTR [rax+0x8],rcx
   140064235:	lea    rcx,[rsi+0x10]
   140064239:	mov    DWORD PTR [rbp+0x30],0x4b2
   140064240:	mov    DWORD PTR [rbp+0x28],0x20
   140064247:	call   0x14002ff30
   14006424c:	lea    rdx,[rbp+0x30]
   140064250:	lea    rcx,[rsi+0x30]
   140064254:	mov    rbx,rax
   140064257:	call   0x14002ffd0
   14006425c:	mov    QWORD PTR [rbx],rax
   14006425f:	cmp    DWORD PTR [rsi+0x8],0x2
   140064263:	jne    0x140066004
   140064269:	lea    rdx,[rbp+0x28]
   14006426d:	lea    rcx,[rsi+0x30]
   140064271:	mov    DWORD PTR [rbp+0x28],0x4b3
   140064278:	call   0x14002ffd0
   14006427d:	lea    rcx,[rip+0x113ac]        # 0x140075630
   140064284:	lea    rdx,[rbp+0x28]
   140064288:	mov    DWORD PTR [rax],0x22
   14006428e:	mov    DWORD PTR [rax+0x4],0x4b3
   140064295:	mov    QWORD PTR [rax+0x8],rcx
   140064299:	lea    rcx,[rsi+0x10]
   14006429d:	mov    DWORD PTR [rbp+0x30],0x4b3
   1400642a4:	mov    DWORD PTR [rbp+0x28],0x22
   1400642ab:	call   0x14002ff30
   1400642b0:	lea    rdx,[rbp+0x30]
   1400642b4:	lea    rcx,[rsi+0x30]
   1400642b8:	mov    rbx,rax
   1400642bb:	call   0x14002ffd0
   1400642c0:	mov    QWORD PTR [rbx],rax
   1400642c3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400642c7:	jne    0x140066004
   1400642cd:	lea    rdx,[rbp+0x28]
   1400642d1:	lea    rcx,[rsi+0x30]
   1400642d5:	mov    DWORD PTR [rbp+0x28],0x4b4
   1400642dc:	call   0x14002ffd0
   1400642e1:	lea    rcx,[rip+0x11358]        # 0x140075640
   1400642e8:	lea    rdx,[rbp+0x28]
   1400642ec:	mov    DWORD PTR [rax],0x1e
   1400642f2:	mov    DWORD PTR [rax+0x4],0x4b4
   1400642f9:	mov    QWORD PTR [rax+0x8],rcx
   1400642fd:	lea    rcx,[rsi+0x10]
   140064301:	mov    DWORD PTR [rbp+0x30],0x4b4
   140064308:	mov    DWORD PTR [rbp+0x28],0x1e
   14006430f:	call   0x14002ff30
   140064314:	lea    rdx,[rbp+0x30]
   140064318:	lea    rcx,[rsi+0x30]
   14006431c:	mov    rbx,rax
   14006431f:	call   0x14002ffd0
   140064324:	mov    QWORD PTR [rbx],rax
   140064327:	cmp    DWORD PTR [rsi+0x8],0x2
   14006432b:	jne    0x140066004
   140064331:	lea    rdx,[rbp+0x28]
   140064335:	lea    rcx,[rsi+0x30]
   140064339:	mov    DWORD PTR [rbp+0x28],0x4ba
   140064340:	call   0x14002ffd0
   140064345:	lea    rcx,[rip+0x1130c]        # 0x140075658
   14006434c:	lea    rdx,[rbp+0x28]
   140064350:	mov    DWORD PTR [rax],0x24
   140064356:	mov    DWORD PTR [rax+0x4],0x4ba
   14006435d:	mov    QWORD PTR [rax+0x8],rcx
   140064361:	lea    rcx,[rsi+0x10]
   140064365:	mov    DWORD PTR [rbp+0x30],0x4ba
   14006436c:	mov    DWORD PTR [rbp+0x28],0x24
   140064373:	call   0x14002ff30
   140064378:	lea    rdx,[rbp+0x30]
   14006437c:	lea    rcx,[rsi+0x30]
   140064380:	mov    rbx,rax
   140064383:	call   0x14002ffd0
   140064388:	mov    QWORD PTR [rbx],rax
   14006438b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006438f:	jne    0x140066004
   140064395:	lea    rdx,[rbp+0x28]
   140064399:	lea    rcx,[rsi+0x30]
   14006439d:	mov    DWORD PTR [rbp+0x28],0x4bb
   1400643a4:	call   0x14002ffd0
   1400643a9:	lea    rcx,[rip+0x112c0]        # 0x140075670
   1400643b0:	lea    rdx,[rbp+0x28]
   1400643b4:	mov    DWORD PTR [rax],0x26
   1400643ba:	mov    DWORD PTR [rax+0x4],0x4bb
   1400643c1:	mov    QWORD PTR [rax+0x8],rcx
   1400643c5:	lea    rcx,[rsi+0x10]
   1400643c9:	mov    DWORD PTR [rbp+0x30],0x4bb
   1400643d0:	mov    DWORD PTR [rbp+0x28],0x26
   1400643d7:	call   0x14002ff30
   1400643dc:	lea    rdx,[rbp+0x30]
   1400643e0:	lea    rcx,[rsi+0x30]
   1400643e4:	mov    rbx,rax
   1400643e7:	call   0x14002ffd0
   1400643ec:	mov    QWORD PTR [rbx],rax
   1400643ef:	cmp    DWORD PTR [rsi+0x8],0x2
   1400643f3:	jne    0x140066004
   1400643f9:	lea    rdx,[rbp+0x28]
   1400643fd:	lea    rcx,[rsi+0x30]
   140064401:	mov    DWORD PTR [rbp+0x28],0x4bc
   140064408:	call   0x14002ffd0
   14006440d:	lea    rcx,[rip+0x11274]        # 0x140075688
   140064414:	lea    rdx,[rbp+0x28]
   140064418:	mov    DWORD PTR [rax],0x25
   14006441e:	mov    DWORD PTR [rax+0x4],0x4bc
   140064425:	mov    QWORD PTR [rax+0x8],rcx
   140064429:	lea    rcx,[rsi+0x10]
   14006442d:	mov    DWORD PTR [rbp+0x30],0x4bc
   140064434:	mov    DWORD PTR [rbp+0x28],0x25
   14006443b:	call   0x14002ff30
   140064440:	lea    rdx,[rbp+0x30]
   140064444:	lea    rcx,[rsi+0x30]
   140064448:	mov    rbx,rax
   14006444b:	call   0x14002ffd0
   140064450:	mov    QWORD PTR [rbx],rax
   140064453:	cmp    DWORD PTR [rsi+0x8],0x2
   140064457:	jne    0x140066004
   14006445d:	lea    rdx,[rbp+0x28]
   140064461:	lea    rcx,[rsi+0x30]
   140064465:	mov    DWORD PTR [rbp+0x28],0x4bd
   14006446c:	call   0x14002ffd0
   140064471:	lea    rcx,[rip+0x11228]        # 0x1400756a0
   140064478:	lea    rdx,[rbp+0x28]
   14006447c:	mov    DWORD PTR [rax],0x27
   140064482:	mov    DWORD PTR [rax+0x4],0x4bd
   140064489:	mov    QWORD PTR [rax+0x8],rcx
   14006448d:	lea    rcx,[rsi+0x10]
   140064491:	mov    DWORD PTR [rbp+0x30],0x4bd
   140064498:	mov    DWORD PTR [rbp+0x28],0x27
   14006449f:	call   0x14002ff30
   1400644a4:	lea    rdx,[rbp+0x30]
   1400644a8:	lea    rcx,[rsi+0x30]
   1400644ac:	mov    rbx,rax
   1400644af:	call   0x14002ffd0
   1400644b4:	mov    QWORD PTR [rbx],rax
   1400644b7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400644bb:	jne    0x140066004
   1400644c1:	lea    rdx,[rbp+0x28]
   1400644c5:	lea    rcx,[rsi+0x30]
   1400644c9:	mov    DWORD PTR [rbp+0x28],0x4be
   1400644d0:	call   0x14002ffd0
   1400644d5:	lea    rcx,[rip+0x111d4]        # 0x1400756b0
   1400644dc:	lea    rdx,[rbp+0x28]
   1400644e0:	mov    DWORD PTR [rax],0x23
   1400644e6:	mov    DWORD PTR [rax+0x4],0x4be
   1400644ed:	mov    QWORD PTR [rax+0x8],rcx
   1400644f1:	lea    rcx,[rsi+0x10]
   1400644f5:	mov    DWORD PTR [rbp+0x30],0x4be
   1400644fc:	mov    DWORD PTR [rbp+0x28],0x23
   140064503:	call   0x14002ff30
   140064508:	lea    rdx,[rbp+0x30]
   14006450c:	lea    rcx,[rsi+0x30]
   140064510:	mov    rbx,rax
   140064513:	call   0x14002ffd0
   140064518:	mov    QWORD PTR [rbx],rax
   14006451b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006451f:	jne    0x140066004
   140064525:	lea    rdx,[rbp+0x28]
   140064529:	lea    rcx,[rsi+0x30]
   14006452d:	mov    DWORD PTR [rbp+0x28],0x4c4
   140064534:	call   0x14002ffd0
   140064539:	lea    rcx,[rip+0x11188]        # 0x1400756c8
   140064540:	lea    rdx,[rbp+0x28]
   140064544:	mov    DWORD PTR [rax],0x29
   14006454a:	mov    DWORD PTR [rax+0x4],0x4c4
   140064551:	mov    QWORD PTR [rax+0x8],rcx
   140064555:	lea    rcx,[rsi+0x10]
   140064559:	mov    DWORD PTR [rbp+0x30],0x4c4
   140064560:	mov    DWORD PTR [rbp+0x28],0x29
   140064567:	call   0x14002ff30
   14006456c:	lea    rdx,[rbp+0x30]
   140064570:	lea    rcx,[rsi+0x30]
   140064574:	mov    rbx,rax
   140064577:	call   0x14002ffd0
   14006457c:	mov    QWORD PTR [rbx],rax
   14006457f:	cmp    DWORD PTR [rsi+0x8],0x2
   140064583:	jne    0x140066004
   140064589:	lea    rdx,[rbp+0x28]
   14006458d:	lea    rcx,[rsi+0x30]
   140064591:	mov    DWORD PTR [rbp+0x28],0x4c5
   140064598:	call   0x14002ffd0
   14006459d:	lea    rcx,[rip+0x1113c]        # 0x1400756e0
   1400645a4:	lea    rdx,[rbp+0x28]
   1400645a8:	mov    DWORD PTR [rax],0x2b
   1400645ae:	mov    DWORD PTR [rax+0x4],0x4c5
   1400645b5:	mov    QWORD PTR [rax+0x8],rcx
   1400645b9:	lea    rcx,[rsi+0x10]
   1400645bd:	mov    DWORD PTR [rbp+0x30],0x4c5
   1400645c4:	mov    DWORD PTR [rbp+0x28],0x2b
   1400645cb:	call   0x14002ff30
   1400645d0:	lea    rdx,[rbp+0x30]
   1400645d4:	lea    rcx,[rsi+0x30]
   1400645d8:	mov    rbx,rax
   1400645db:	call   0x14002ffd0
   1400645e0:	mov    QWORD PTR [rbx],rax
   1400645e3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400645e7:	jne    0x140066004
   1400645ed:	lea    rdx,[rbp+0x28]
   1400645f1:	lea    rcx,[rsi+0x30]
   1400645f5:	mov    DWORD PTR [rbp+0x28],0x4c6
   1400645fc:	call   0x14002ffd0
   140064601:	lea    rcx,[rip+0x110f0]        # 0x1400756f8
   140064608:	lea    rdx,[rbp+0x28]
   14006460c:	mov    DWORD PTR [rax],0x2a
   140064612:	mov    DWORD PTR [rax+0x4],0x4c6
   140064619:	mov    QWORD PTR [rax+0x8],rcx
   14006461d:	lea    rcx,[rsi+0x10]
   140064621:	mov    DWORD PTR [rbp+0x30],0x4c6
   140064628:	mov    DWORD PTR [rbp+0x28],0x2a
   14006462f:	call   0x14002ff30
   140064634:	lea    rdx,[rbp+0x30]
   140064638:	lea    rcx,[rsi+0x30]
   14006463c:	mov    rbx,rax
   14006463f:	call   0x14002ffd0
   140064644:	mov    QWORD PTR [rbx],rax
   140064647:	cmp    DWORD PTR [rsi+0x8],0x2
   14006464b:	jne    0x140066004
   140064651:	lea    rdx,[rbp+0x28]
   140064655:	lea    rcx,[rsi+0x30]
   140064659:	mov    DWORD PTR [rbp+0x28],0x4c7
   140064660:	call   0x14002ffd0
   140064665:	lea    rcx,[rip+0x110a4]        # 0x140075710
   14006466c:	lea    rdx,[rbp+0x28]
   140064670:	mov    DWORD PTR [rax],0x2c
   140064676:	mov    DWORD PTR [rax+0x4],0x4c7
   14006467d:	mov    QWORD PTR [rax+0x8],rcx
   140064681:	lea    rcx,[rsi+0x10]
   140064685:	mov    DWORD PTR [rbp+0x30],0x4c7
   14006468c:	mov    DWORD PTR [rbp+0x28],0x2c
   140064693:	call   0x14002ff30
   140064698:	lea    rdx,[rbp+0x30]
   14006469c:	lea    rcx,[rsi+0x30]
   1400646a0:	mov    rbx,rax
   1400646a3:	call   0x14002ffd0
   1400646a8:	mov    QWORD PTR [rbx],rax
   1400646ab:	cmp    DWORD PTR [rsi+0x8],0x2
   1400646af:	jne    0x140066004
   1400646b5:	lea    rdx,[rbp+0x28]
   1400646b9:	lea    rcx,[rsi+0x30]
   1400646bd:	mov    DWORD PTR [rbp+0x28],0x4c8
   1400646c4:	call   0x14002ffd0
   1400646c9:	lea    rcx,[rip+0x11050]        # 0x140075720
   1400646d0:	lea    rdx,[rbp+0x28]
   1400646d4:	mov    DWORD PTR [rax],0x28
   1400646da:	mov    DWORD PTR [rax+0x4],0x4c8
   1400646e1:	mov    QWORD PTR [rax+0x8],rcx
   1400646e5:	lea    rcx,[rsi+0x10]
   1400646e9:	mov    DWORD PTR [rbp+0x30],0x4c8
   1400646f0:	mov    DWORD PTR [rbp+0x28],0x28
   1400646f7:	call   0x14002ff30
   1400646fc:	lea    rdx,[rbp+0x30]
   140064700:	lea    rcx,[rsi+0x30]
   140064704:	mov    rbx,rax
   140064707:	call   0x14002ffd0
   14006470c:	mov    QWORD PTR [rbx],rax
   14006470f:	cmp    DWORD PTR [rsi+0x8],0x2
   140064713:	jne    0x140066004
   140064719:	lea    rdx,[rbp+0x28]
   14006471d:	lea    rcx,[rsi+0x30]
   140064721:	mov    DWORD PTR [rbp+0x28],0x4ce
   140064728:	call   0x14002ffd0
   14006472d:	lea    rcx,[rip+0x11004]        # 0x140075738
   140064734:	lea    rdx,[rbp+0x28]
   140064738:	mov    DWORD PTR [rax],0x2e
   14006473e:	mov    DWORD PTR [rax+0x4],0x4ce
   140064745:	mov    QWORD PTR [rax+0x8],rcx
   140064749:	lea    rcx,[rsi+0x10]
   14006474d:	mov    DWORD PTR [rbp+0x30],0x4ce
   140064754:	mov    DWORD PTR [rbp+0x28],0x2e
   14006475b:	call   0x14002ff30
   140064760:	lea    rdx,[rbp+0x30]
   140064764:	lea    rcx,[rsi+0x30]
   140064768:	mov    rbx,rax
   14006476b:	call   0x14002ffd0
   140064770:	mov    QWORD PTR [rbx],rax
   140064773:	cmp    DWORD PTR [rsi+0x8],0x2
   140064777:	jne    0x140066004
   14006477d:	lea    rdx,[rbp+0x28]
   140064781:	lea    rcx,[rsi+0x30]
   140064785:	mov    DWORD PTR [rbp+0x28],0x4cf
   14006478c:	call   0x14002ffd0
   140064791:	lea    rcx,[rip+0x10fb8]        # 0x140075750
   140064798:	lea    rdx,[rbp+0x28]
   14006479c:	mov    DWORD PTR [rax],0x30
   1400647a2:	mov    DWORD PTR [rax+0x4],0x4cf
   1400647a9:	mov    QWORD PTR [rax+0x8],rcx
   1400647ad:	lea    rcx,[rsi+0x10]
   1400647b1:	mov    DWORD PTR [rbp+0x30],0x4cf
   1400647b8:	mov    DWORD PTR [rbp+0x28],0x30
   1400647bf:	call   0x14002ff30
   1400647c4:	lea    rdx,[rbp+0x30]
   1400647c8:	lea    rcx,[rsi+0x30]
   1400647cc:	mov    rbx,rax
   1400647cf:	call   0x14002ffd0
   1400647d4:	mov    QWORD PTR [rbx],rax
   1400647d7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400647db:	jne    0x140066004
   1400647e1:	lea    rdx,[rbp+0x28]
   1400647e5:	lea    rcx,[rsi+0x30]
   1400647e9:	mov    DWORD PTR [rbp+0x28],0x4d0
   1400647f0:	call   0x14002ffd0
   1400647f5:	lea    rcx,[rip+0x10f6c]        # 0x140075768
   1400647fc:	lea    rdx,[rbp+0x28]
   140064800:	mov    DWORD PTR [rax],0x2f
   140064806:	mov    DWORD PTR [rax+0x4],0x4d0
   14006480d:	mov    QWORD PTR [rax+0x8],rcx
   140064811:	lea    rcx,[rsi+0x10]
   140064815:	mov    DWORD PTR [rbp+0x30],0x4d0
   14006481c:	mov    DWORD PTR [rbp+0x28],0x2f
   140064823:	call   0x14002ff30
   140064828:	lea    rdx,[rbp+0x30]
   14006482c:	lea    rcx,[rsi+0x30]
   140064830:	mov    rbx,rax
   140064833:	call   0x14002ffd0
   140064838:	mov    QWORD PTR [rbx],rax
   14006483b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006483f:	jne    0x140066004
   140064845:	lea    rdx,[rbp+0x28]
   140064849:	lea    rcx,[rsi+0x30]
   14006484d:	mov    DWORD PTR [rbp+0x28],0x4d1
   140064854:	call   0x14002ffd0
   140064859:	lea    rcx,[rip+0x10f20]        # 0x140075780
   140064860:	lea    rdx,[rbp+0x28]
   140064864:	mov    DWORD PTR [rax],0x31
   14006486a:	mov    DWORD PTR [rax+0x4],0x4d1
   140064871:	mov    QWORD PTR [rax+0x8],rcx
   140064875:	lea    rcx,[rsi+0x10]
   140064879:	mov    DWORD PTR [rbp+0x30],0x4d1
   140064880:	mov    DWORD PTR [rbp+0x28],0x31
   140064887:	call   0x14002ff30
   14006488c:	lea    rdx,[rbp+0x30]
   140064890:	lea    rcx,[rsi+0x30]
   140064894:	mov    rbx,rax
   140064897:	call   0x14002ffd0
   14006489c:	mov    QWORD PTR [rbx],rax
   14006489f:	cmp    DWORD PTR [rsi+0x8],0x2
   1400648a3:	jne    0x140066004
   1400648a9:	lea    rdx,[rbp+0x28]
   1400648ad:	lea    rcx,[rsi+0x30]
   1400648b1:	mov    DWORD PTR [rbp+0x28],0x4d2
   1400648b8:	call   0x14002ffd0
   1400648bd:	lea    rcx,[rip+0x10ecc]        # 0x140075790
   1400648c4:	lea    rdx,[rbp+0x28]
   1400648c8:	mov    DWORD PTR [rax],0x2d
   1400648ce:	mov    DWORD PTR [rax+0x4],0x4d2
   1400648d5:	mov    QWORD PTR [rax+0x8],rcx
   1400648d9:	lea    rcx,[rsi+0x10]
   1400648dd:	mov    DWORD PTR [rbp+0x30],0x4d2
   1400648e4:	mov    DWORD PTR [rbp+0x28],0x2d
   1400648eb:	call   0x14002ff30
   1400648f0:	lea    rdx,[rbp+0x30]
   1400648f4:	lea    rcx,[rsi+0x30]
   1400648f8:	mov    rbx,rax
   1400648fb:	call   0x14002ffd0
   140064900:	mov    QWORD PTR [rbx],rax
   140064903:	cmp    DWORD PTR [rsi+0x8],0x2
   140064907:	jne    0x140066004
   14006490d:	lea    rdx,[rbp+0x28]
   140064911:	lea    rcx,[rsi+0x30]
   140064915:	mov    DWORD PTR [rbp+0x28],0x4d8
   14006491c:	call   0x14002ffd0
   140064921:	lea    rcx,[rip+0x10e80]        # 0x1400757a8
   140064928:	lea    rdx,[rbp+0x28]
   14006492c:	mov    DWORD PTR [rax],0x33
   140064932:	mov    DWORD PTR [rax+0x4],0x4d8
   140064939:	mov    QWORD PTR [rax+0x8],rcx
   14006493d:	lea    rcx,[rsi+0x10]
   140064941:	mov    DWORD PTR [rbp+0x30],0x4d8
   140064948:	mov    DWORD PTR [rbp+0x28],0x33
   14006494f:	call   0x14002ff30
   140064954:	lea    rdx,[rbp+0x30]
   140064958:	lea    rcx,[rsi+0x30]
   14006495c:	mov    rbx,rax
   14006495f:	call   0x14002ffd0
   140064964:	mov    QWORD PTR [rbx],rax
   140064967:	cmp    DWORD PTR [rsi+0x8],0x2
   14006496b:	jne    0x140066004
   140064971:	lea    rdx,[rbp+0x28]
   140064975:	lea    rcx,[rsi+0x30]
   140064979:	mov    DWORD PTR [rbp+0x28],0x4d9
   140064980:	call   0x14002ffd0
   140064985:	lea    rcx,[rip+0x10e34]        # 0x1400757c0
   14006498c:	lea    rdx,[rbp+0x28]
   140064990:	mov    DWORD PTR [rax],0x35
   140064996:	mov    DWORD PTR [rax+0x4],0x4d9
   14006499d:	mov    QWORD PTR [rax+0x8],rcx
   1400649a1:	lea    rcx,[rsi+0x10]
   1400649a5:	mov    DWORD PTR [rbp+0x30],0x4d9
   1400649ac:	mov    DWORD PTR [rbp+0x28],0x35
   1400649b3:	call   0x14002ff30
   1400649b8:	lea    rdx,[rbp+0x30]
   1400649bc:	lea    rcx,[rsi+0x30]
   1400649c0:	mov    rbx,rax
   1400649c3:	call   0x14002ffd0
   1400649c8:	mov    QWORD PTR [rbx],rax
   1400649cb:	cmp    DWORD PTR [rsi+0x8],0x2
   1400649cf:	jne    0x140066004
   1400649d5:	lea    rdx,[rbp+0x28]
   1400649d9:	lea    rcx,[rsi+0x30]
   1400649dd:	mov    DWORD PTR [rbp+0x28],0x4da
   1400649e4:	call   0x14002ffd0
   1400649e9:	lea    rcx,[rip+0x10de8]        # 0x1400757d8
   1400649f0:	lea    rdx,[rbp+0x28]
   1400649f4:	mov    DWORD PTR [rax],0x34
   1400649fa:	mov    DWORD PTR [rax+0x4],0x4da
   140064a01:	mov    QWORD PTR [rax+0x8],rcx
   140064a05:	lea    rcx,[rsi+0x10]
   140064a09:	mov    DWORD PTR [rbp+0x30],0x4da
   140064a10:	mov    DWORD PTR [rbp+0x28],0x34
   140064a17:	call   0x14002ff30
   140064a1c:	lea    rdx,[rbp+0x30]
   140064a20:	lea    rcx,[rsi+0x30]
   140064a24:	mov    rbx,rax
   140064a27:	call   0x14002ffd0
   140064a2c:	mov    QWORD PTR [rbx],rax
   140064a2f:	cmp    DWORD PTR [rsi+0x8],0x2
   140064a33:	jne    0x140066004
   140064a39:	lea    rdx,[rbp+0x28]
   140064a3d:	lea    rcx,[rsi+0x30]
   140064a41:	mov    DWORD PTR [rbp+0x28],0x4db
   140064a48:	call   0x14002ffd0
   140064a4d:	lea    rcx,[rip+0x10d9c]        # 0x1400757f0
   140064a54:	lea    rdx,[rbp+0x28]
   140064a58:	mov    DWORD PTR [rax],0x36
   140064a5e:	mov    DWORD PTR [rax+0x4],0x4db
   140064a65:	mov    QWORD PTR [rax+0x8],rcx
   140064a69:	lea    rcx,[rsi+0x10]
   140064a6d:	mov    DWORD PTR [rbp+0x30],0x4db
   140064a74:	mov    DWORD PTR [rbp+0x28],0x36
   140064a7b:	call   0x14002ff30
   140064a80:	lea    rdx,[rbp+0x30]
   140064a84:	lea    rcx,[rsi+0x30]
   140064a88:	mov    rbx,rax
   140064a8b:	call   0x14002ffd0
   140064a90:	mov    QWORD PTR [rbx],rax
   140064a93:	cmp    DWORD PTR [rsi+0x8],0x2
   140064a97:	jne    0x140066004
   140064a9d:	lea    rdx,[rbp+0x28]
   140064aa1:	lea    rcx,[rsi+0x30]
   140064aa5:	mov    DWORD PTR [rbp+0x28],0x4dc
   140064aac:	call   0x14002ffd0
   140064ab1:	lea    rcx,[rip+0x10d48]        # 0x140075800
   140064ab8:	lea    rdx,[rbp+0x28]
   140064abc:	mov    DWORD PTR [rax],0x32
   140064ac2:	mov    DWORD PTR [rax+0x4],0x4dc
   140064ac9:	mov    QWORD PTR [rax+0x8],rcx
   140064acd:	lea    rcx,[rsi+0x10]
   140064ad1:	mov    DWORD PTR [rbp+0x30],0x4dc
   140064ad8:	mov    DWORD PTR [rbp+0x28],0x32
   140064adf:	call   0x14002ff30
   140064ae4:	lea    rdx,[rbp+0x30]
   140064ae8:	lea    rcx,[rsi+0x30]
   140064aec:	mov    rbx,rax
   140064aef:	call   0x14002ffd0
   140064af4:	mov    QWORD PTR [rbx],rax
   140064af7:	cmp    DWORD PTR [rsi+0x8],0x2
   140064afb:	jne    0x140066004
   140064b01:	lea    rdx,[rbp+0x28]
   140064b05:	lea    rcx,[rsi+0x30]
   140064b09:	mov    DWORD PTR [rbp+0x28],0x4e2
   140064b10:	call   0x14002ffd0
   140064b15:	lea    rcx,[rip+0x10cfc]        # 0x140075818
   140064b1c:	lea    rdx,[rbp+0x28]
   140064b20:	mov    DWORD PTR [rax],0x38
   140064b26:	mov    DWORD PTR [rax+0x4],0x4e2
   140064b2d:	mov    QWORD PTR [rax+0x8],rcx
   140064b31:	lea    rcx,[rsi+0x10]
   140064b35:	mov    DWORD PTR [rbp+0x30],0x4e2
   140064b3c:	mov    DWORD PTR [rbp+0x28],0x38
   140064b43:	call   0x14002ff30
   140064b48:	lea    rdx,[rbp+0x30]
   140064b4c:	lea    rcx,[rsi+0x30]
   140064b50:	mov    rbx,rax
   140064b53:	call   0x14002ffd0
   140064b58:	mov    QWORD PTR [rbx],rax
   140064b5b:	cmp    DWORD PTR [rsi+0x8],0x2
   140064b5f:	jne    0x140066004
   140064b65:	lea    rdx,[rbp+0x28]
   140064b69:	lea    rcx,[rsi+0x30]
   140064b6d:	mov    DWORD PTR [rbp+0x28],0x4e3
   140064b74:	call   0x14002ffd0
   140064b79:	lea    rcx,[rip+0x10cb0]        # 0x140075830
   140064b80:	lea    rdx,[rbp+0x28]
   140064b84:	mov    DWORD PTR [rax],0x3a
   140064b8a:	mov    DWORD PTR [rax+0x4],0x4e3
   140064b91:	mov    QWORD PTR [rax+0x8],rcx
   140064b95:	lea    rcx,[rsi+0x10]
   140064b99:	mov    DWORD PTR [rbp+0x30],0x4e3
   140064ba0:	mov    DWORD PTR [rbp+0x28],0x3a
   140064ba7:	call   0x14002ff30
   140064bac:	lea    rdx,[rbp+0x30]
   140064bb0:	lea    rcx,[rsi+0x30]
   140064bb4:	mov    rbx,rax
   140064bb7:	call   0x14002ffd0
   140064bbc:	mov    QWORD PTR [rbx],rax
   140064bbf:	cmp    DWORD PTR [rsi+0x8],0x2
   140064bc3:	jne    0x140066004
   140064bc9:	lea    rdx,[rbp+0x28]
   140064bcd:	lea    rcx,[rsi+0x30]
   140064bd1:	mov    DWORD PTR [rbp+0x28],0x4e4
   140064bd8:	call   0x14002ffd0
   140064bdd:	lea    rcx,[rip+0x10c64]        # 0x140075848
   140064be4:	lea    rdx,[rbp+0x28]
   140064be8:	mov    DWORD PTR [rax],0x39
   140064bee:	mov    DWORD PTR [rax+0x4],0x4e4
   140064bf5:	mov    QWORD PTR [rax+0x8],rcx
   140064bf9:	lea    rcx,[rsi+0x10]
   140064bfd:	mov    DWORD PTR [rbp+0x30],0x4e4
   140064c04:	mov    DWORD PTR [rbp+0x28],0x39
   140064c0b:	call   0x14002ff30
   140064c10:	lea    rdx,[rbp+0x30]
   140064c14:	lea    rcx,[rsi+0x30]
   140064c18:	mov    rbx,rax
   140064c1b:	call   0x14002ffd0
   140064c20:	mov    QWORD PTR [rbx],rax
   140064c23:	cmp    DWORD PTR [rsi+0x8],0x2
   140064c27:	jne    0x140066004
   140064c2d:	lea    rdx,[rbp+0x28]
   140064c31:	lea    rcx,[rsi+0x30]
   140064c35:	mov    DWORD PTR [rbp+0x28],0x4e5
   140064c3c:	call   0x14002ffd0
   140064c41:	lea    rcx,[rip+0x10c18]        # 0x140075860
   140064c48:	lea    rdx,[rbp+0x28]
   140064c4c:	mov    DWORD PTR [rax],0x3b
   140064c52:	mov    DWORD PTR [rax+0x4],0x4e5
   140064c59:	mov    QWORD PTR [rax+0x8],rcx
   140064c5d:	lea    rcx,[rsi+0x10]
   140064c61:	mov    DWORD PTR [rbp+0x30],0x4e5
   140064c68:	mov    DWORD PTR [rbp+0x28],0x3b
   140064c6f:	call   0x14002ff30
   140064c74:	lea    rdx,[rbp+0x30]
   140064c78:	lea    rcx,[rsi+0x30]
   140064c7c:	mov    rbx,rax
   140064c7f:	call   0x14002ffd0
   140064c84:	mov    QWORD PTR [rbx],rax
   140064c87:	cmp    DWORD PTR [rsi+0x8],0x2
   140064c8b:	jne    0x140066004
   140064c91:	lea    rdx,[rbp+0x28]
   140064c95:	lea    rcx,[rsi+0x30]
   140064c99:	mov    DWORD PTR [rbp+0x28],0x4e6
   140064ca0:	call   0x14002ffd0
   140064ca5:	lea    rcx,[rip+0x10bcc]        # 0x140075878
   140064cac:	lea    rdx,[rbp+0x28]
   140064cb0:	mov    DWORD PTR [rax],0x37
   140064cb6:	mov    DWORD PTR [rax+0x4],0x4e6
   140064cbd:	mov    QWORD PTR [rax+0x8],rcx
   140064cc1:	lea    rcx,[rsi+0x10]
   140064cc5:	mov    DWORD PTR [rbp+0x30],0x4e6
   140064ccc:	mov    DWORD PTR [rbp+0x28],0x37
   140064cd3:	call   0x14002ff30
   140064cd8:	lea    rdx,[rbp+0x30]
   140064cdc:	lea    rcx,[rsi+0x30]
   140064ce0:	mov    rbx,rax
   140064ce3:	call   0x14002ffd0
   140064ce8:	mov    QWORD PTR [rbx],rax
   140064ceb:	cmp    DWORD PTR [rsi+0x8],0x2
   140064cef:	jne    0x140066004
   140064cf5:	lea    rdx,[rbp+0x28]
   140064cf9:	lea    rcx,[rsi+0x30]
   140064cfd:	mov    DWORD PTR [rbp+0x28],0x3ea
   140064d04:	call   0x14002ffd0
   140064d09:	lea    rcx,[rip+0x10b80]        # 0x140075890
   140064d10:	lea    rdx,[rbp+0x28]
   140064d14:	mov    DWORD PTR [rax],0x3e
   140064d1a:	mov    DWORD PTR [rax+0x4],0x3ea
   140064d21:	mov    QWORD PTR [rax+0x8],rcx
   140064d25:	lea    rcx,[rsi+0x10]
   140064d29:	mov    DWORD PTR [rbp+0x30],0x3ea
   140064d30:	mov    DWORD PTR [rbp+0x28],0x3e
   140064d37:	call   0x14002ff30
   140064d3c:	lea    rdx,[rbp+0x30]
   140064d40:	lea    rcx,[rsi+0x30]
   140064d44:	mov    rbx,rax
   140064d47:	call   0x14002ffd0
   140064d4c:	mov    QWORD PTR [rbx],rax
   140064d4f:	cmp    DWORD PTR [rsi+0x8],0x2
   140064d53:	jne    0x140066004
   140064d59:	lea    rdx,[rbp+0x28]
   140064d5d:	lea    rcx,[rsi+0x30]
   140064d61:	mov    DWORD PTR [rbp+0x28],0x3fd
   140064d68:	call   0x14002ffd0
   140064d6d:	lea    rcx,[rip+0x10b2c]        # 0x1400758a0
   140064d74:	lea    rdx,[rbp+0x28]
   140064d78:	mov    DWORD PTR [rax],0x3f
   140064d7e:	mov    DWORD PTR [rax+0x4],0x3fd
   140064d85:	mov    QWORD PTR [rax+0x8],rcx
   140064d89:	lea    rcx,[rsi+0x10]
   140064d8d:	mov    DWORD PTR [rbp+0x30],0x3fd
   140064d94:	mov    DWORD PTR [rbp+0x28],0x3f
   140064d9b:	call   0x14002ff30
   140064da0:	lea    rdx,[rbp+0x30]
   140064da4:	lea    rcx,[rsi+0x30]
   140064da8:	mov    rbx,rax
   140064dab:	call   0x14002ffd0
   140064db0:	mov    QWORD PTR [rbx],rax
   140064db3:	cmp    DWORD PTR [rsi+0x8],0x2
   140064db7:	jne    0x140066004
   140064dbd:	lea    rdx,[rbp+0x28]
   140064dc1:	lea    rcx,[rsi+0x30]
   140064dc5:	mov    DWORD PTR [rbp+0x28],0x3fe
   140064dcc:	call   0x14002ffd0
   140064dd1:	lea    rcx,[rip+0x10ae0]        # 0x1400758b8
   140064dd8:	lea    rdx,[rbp+0x28]
   140064ddc:	mov    DWORD PTR [rax],0x40
   140064de2:	mov    DWORD PTR [rax+0x4],0x3fe
   140064de9:	mov    QWORD PTR [rax+0x8],rcx
   140064ded:	lea    rcx,[rsi+0x10]
   140064df1:	mov    DWORD PTR [rbp+0x30],0x3fe
   140064df8:	mov    DWORD PTR [rbp+0x28],0x40
   140064dff:	call   0x14002ff30
   140064e04:	lea    rdx,[rbp+0x30]
   140064e08:	lea    rcx,[rsi+0x30]
   140064e0c:	mov    rbx,rax
   140064e0f:	call   0x14002ffd0
   140064e14:	mov    QWORD PTR [rbx],rax
   140064e17:	cmp    DWORD PTR [rsi+0x8],0x2
   140064e1b:	jne    0x140066004
   140064e21:	lea    rdx,[rbp+0x28]
   140064e25:	lea    rcx,[rsi+0x30]
   140064e29:	mov    DWORD PTR [rbp+0x28],0x3ff
   140064e30:	call   0x14002ffd0
   140064e35:	lea    rcx,[rip+0x10a9c]        # 0x1400758d8
   140064e3c:	lea    rdx,[rbp+0x28]
   140064e40:	mov    DWORD PTR [rax],0x41
   140064e46:	mov    DWORD PTR [rax+0x4],0x3ff
   140064e4d:	mov    QWORD PTR [rax+0x8],rcx
   140064e51:	lea    rcx,[rsi+0x10]
   140064e55:	mov    DWORD PTR [rbp+0x30],0x3ff
   140064e5c:	mov    DWORD PTR [rbp+0x28],0x41
   140064e63:	call   0x14002ff30
   140064e68:	lea    rdx,[rbp+0x30]
   140064e6c:	lea    rcx,[rsi+0x30]
   140064e70:	mov    rbx,rax
   140064e73:	call   0x14002ffd0
   140064e78:	mov    QWORD PTR [rbx],rax
   140064e7b:	cmp    DWORD PTR [rsi+0x8],0x2
   140064e7f:	jne    0x140066004
   140064e85:	lea    rdx,[rbp+0x28]
   140064e89:	lea    rcx,[rsi+0x30]
   140064e8d:	mov    DWORD PTR [rbp+0x28],0x400
   140064e94:	call   0x14002ffd0
   140064e99:	lea    rcx,[rip+0x10a50]        # 0x1400758f0
   140064ea0:	lea    rdx,[rbp+0x28]
   140064ea4:	mov    DWORD PTR [rax],0x42
   140064eaa:	mov    DWORD PTR [rax+0x4],0x400
   140064eb1:	mov    QWORD PTR [rax+0x8],rcx
   140064eb5:	lea    rcx,[rsi+0x10]
   140064eb9:	mov    DWORD PTR [rbp+0x30],0x400
   140064ec0:	mov    DWORD PTR [rbp+0x28],0x42
   140064ec7:	call   0x14002ff30
   140064ecc:	lea    rdx,[rbp+0x30]
   140064ed0:	lea    rcx,[rsi+0x30]
   140064ed4:	mov    rbx,rax
   140064ed7:	call   0x14002ffd0
   140064edc:	mov    QWORD PTR [rbx],rax
   140064edf:	cmp    DWORD PTR [rsi+0x8],0x2
   140064ee3:	jne    0x140066004
   140064ee9:	lea    rdx,[rbp+0x28]
   140064eed:	lea    rcx,[rsi+0x30]
   140064ef1:	mov    DWORD PTR [rbp+0x28],0x401
   140064ef8:	call   0x14002ffd0
   140064efd:	lea    rcx,[rip+0x10a04]        # 0x140075908
   140064f04:	lea    rdx,[rbp+0x28]
   140064f08:	mov    DWORD PTR [rax],0x43
   140064f0e:	mov    DWORD PTR [rax+0x4],0x401
   140064f15:	mov    QWORD PTR [rax+0x8],rcx
   140064f19:	lea    rcx,[rsi+0x10]
   140064f1d:	mov    DWORD PTR [rbp+0x30],0x401
   140064f24:	mov    DWORD PTR [rbp+0x28],0x43
   140064f2b:	call   0x14002ff30
   140064f30:	lea    rdx,[rbp+0x30]
   140064f34:	lea    rcx,[rsi+0x30]
   140064f38:	mov    rbx,rax
   140064f3b:	call   0x14002ffd0
   140064f40:	mov    QWORD PTR [rbx],rax
   140064f43:	cmp    DWORD PTR [rsi+0x8],0x2
   140064f47:	jne    0x140066004
   140064f4d:	lea    rdx,[rbp+0x28]
   140064f51:	lea    rcx,[rsi+0x30]
   140064f55:	mov    DWORD PTR [rbp+0x28],0x402
   140064f5c:	call   0x14002ffd0
   140064f61:	lea    rcx,[rip+0x109b8]        # 0x140075920
   140064f68:	lea    rdx,[rbp+0x28]
   140064f6c:	mov    DWORD PTR [rax],0x44
   140064f72:	mov    DWORD PTR [rax+0x4],0x402
   140064f79:	mov    QWORD PTR [rax+0x8],rcx
   140064f7d:	lea    rcx,[rsi+0x10]
   140064f81:	mov    DWORD PTR [rbp+0x30],0x402
   140064f88:	mov    DWORD PTR [rbp+0x28],0x44
   140064f8f:	call   0x14002ff30
   140064f94:	lea    rdx,[rbp+0x30]
   140064f98:	lea    rcx,[rsi+0x30]
   140064f9c:	mov    rbx,rax
   140064f9f:	call   0x14002ffd0
   140064fa4:	mov    QWORD PTR [rbx],rax
   140064fa7:	cmp    DWORD PTR [rsi+0x8],0x2
   140064fab:	jne    0x140066004
   140064fb1:	lea    rdx,[rbp+0x28]
   140064fb5:	lea    rcx,[rsi+0x30]
   140064fb9:	mov    DWORD PTR [rbp+0x28],0x403
   140064fc0:	call   0x14002ffd0
   140064fc5:	lea    rcx,[rip+0x10964]        # 0x140075930
   140064fcc:	lea    rdx,[rbp+0x28]
   140064fd0:	mov    DWORD PTR [rax],0x45
   140064fd6:	mov    DWORD PTR [rax+0x4],0x403
   140064fdd:	mov    QWORD PTR [rax+0x8],rcx
   140064fe1:	lea    rcx,[rsi+0x10]
   140064fe5:	mov    DWORD PTR [rbp+0x30],0x403
   140064fec:	mov    DWORD PTR [rbp+0x28],0x45
   140064ff3:	call   0x14002ff30
   140064ff8:	lea    rdx,[rbp+0x30]
   140064ffc:	lea    rcx,[rsi+0x30]
   140065000:	mov    rbx,rax
   140065003:	call   0x14002ffd0
   140065008:	mov    QWORD PTR [rbx],rax
   14006500b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006500f:	jne    0x140066004
   140065015:	lea    rdx,[rbp+0x28]
   140065019:	lea    rcx,[rsi+0x30]
   14006501d:	mov    DWORD PTR [rbp+0x28],0x404
   140065024:	call   0x14002ffd0
   140065029:	lea    rcx,[rip+0x10910]        # 0x140075940
   140065030:	lea    rdx,[rbp+0x28]
   140065034:	mov    DWORD PTR [rax],0x4c
   14006503a:	mov    DWORD PTR [rax+0x4],0x404
   140065041:	mov    QWORD PTR [rax+0x8],rcx
   140065045:	lea    rcx,[rsi+0x10]
   140065049:	mov    DWORD PTR [rbp+0x30],0x404
   140065050:	mov    DWORD PTR [rbp+0x28],0x4c
   140065057:	call   0x14002ff30
   14006505c:	lea    rdx,[rbp+0x30]
   140065060:	lea    rcx,[rsi+0x30]
   140065064:	mov    rbx,rax
   140065067:	call   0x14002ffd0
   14006506c:	mov    QWORD PTR [rbx],rax
   14006506f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065073:	jne    0x140066004
   140065079:	lea    rdx,[rbp+0x28]
   14006507d:	lea    rcx,[rsi+0x30]
   140065081:	mov    DWORD PTR [rbp+0x28],0x405
   140065088:	call   0x14002ffd0
   14006508d:	lea    rcx,[rip+0x108c4]        # 0x140075958
   140065094:	lea    rdx,[rbp+0x28]
   140065098:	mov    DWORD PTR [rax],0x4d
   14006509e:	mov    DWORD PTR [rax+0x4],0x405
   1400650a5:	mov    QWORD PTR [rax+0x8],rcx
   1400650a9:	lea    rcx,[rsi+0x10]
   1400650ad:	mov    DWORD PTR [rbp+0x30],0x405
   1400650b4:	mov    DWORD PTR [rbp+0x28],0x4d
   1400650bb:	call   0x14002ff30
   1400650c0:	lea    rdx,[rbp+0x30]
   1400650c4:	lea    rcx,[rsi+0x30]
   1400650c8:	mov    rbx,rax
   1400650cb:	call   0x14002ffd0
   1400650d0:	mov    QWORD PTR [rbx],rax
   1400650d3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400650d7:	jne    0x140066004
   1400650dd:	lea    rdx,[rbp+0x28]
   1400650e1:	lea    rcx,[rsi+0x30]
   1400650e5:	mov    DWORD PTR [rbp+0x28],0x406
   1400650ec:	call   0x14002ffd0
   1400650f1:	lea    rcx,[rip+0x10878]        # 0x140075970
   1400650f8:	lea    rdx,[rbp+0x28]
   1400650fc:	mov    DWORD PTR [rax],0x4e
   140065102:	mov    DWORD PTR [rax+0x4],0x406
   140065109:	mov    QWORD PTR [rax+0x8],rcx
   14006510d:	lea    rcx,[rsi+0x10]
   140065111:	mov    DWORD PTR [rbp+0x30],0x406
   140065118:	mov    DWORD PTR [rbp+0x28],0x4e
   14006511f:	call   0x14002ff30
   140065124:	lea    rdx,[rbp+0x30]
   140065128:	lea    rcx,[rsi+0x30]
   14006512c:	mov    rbx,rax
   14006512f:	call   0x14002ffd0
   140065134:	mov    QWORD PTR [rbx],rax
   140065137:	cmp    DWORD PTR [rsi+0x8],0x2
   14006513b:	jne    0x140066004
   140065141:	lea    rdx,[rbp+0x28]
   140065145:	lea    rcx,[rsi+0x30]
   140065149:	mov    DWORD PTR [rbp+0x28],0x40b
   140065150:	call   0x14002ffd0
   140065155:	lea    rcx,[rip+0x10834]        # 0x140075990
   14006515c:	lea    rdx,[rbp+0x28]
   140065160:	mov    DWORD PTR [rax],0x4f
   140065166:	mov    DWORD PTR [rax+0x4],0x40b
   14006516d:	mov    QWORD PTR [rax+0x8],rcx
   140065171:	lea    rcx,[rsi+0x10]
   140065175:	mov    DWORD PTR [rbp+0x30],0x40b
   14006517c:	mov    DWORD PTR [rbp+0x28],0x4f
   140065183:	call   0x14002ff30
   140065188:	lea    rdx,[rbp+0x30]
   14006518c:	lea    rcx,[rsi+0x30]
   140065190:	mov    rbx,rax
   140065193:	call   0x14002ffd0
   140065198:	mov    QWORD PTR [rbx],rax
   14006519b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006519f:	jne    0x140066004
   1400651a5:	lea    rdx,[rbp+0x28]
   1400651a9:	lea    rcx,[rsi+0x30]
   1400651ad:	mov    DWORD PTR [rbp+0x28],0x407
   1400651b4:	call   0x14002ffd0
   1400651b9:	lea    rcx,[rip+0x107f0]        # 0x1400759b0
   1400651c0:	lea    rdx,[rbp+0x28]
   1400651c4:	mov    DWORD PTR [rax],0x50
   1400651ca:	mov    DWORD PTR [rax+0x4],0x407
   1400651d1:	mov    QWORD PTR [rax+0x8],rcx
   1400651d5:	lea    rcx,[rsi+0x10]
   1400651d9:	mov    DWORD PTR [rbp+0x30],0x407
   1400651e0:	mov    DWORD PTR [rbp+0x28],0x50
   1400651e7:	call   0x14002ff30
   1400651ec:	lea    rdx,[rbp+0x30]
   1400651f0:	lea    rcx,[rsi+0x30]
   1400651f4:	mov    rbx,rax
   1400651f7:	call   0x14002ffd0
   1400651fc:	mov    QWORD PTR [rbx],rax
   1400651ff:	cmp    DWORD PTR [rsi+0x8],0x2
   140065203:	jne    0x140066004
   140065209:	lea    rdx,[rbp+0x28]
   14006520d:	lea    rcx,[rsi+0x30]
   140065211:	mov    DWORD PTR [rbp+0x28],0x408
   140065218:	call   0x14002ffd0
   14006521d:	lea    rcx,[rip+0x107ac]        # 0x1400759d0
   140065224:	lea    rdx,[rbp+0x28]
   140065228:	mov    DWORD PTR [rax],0x64
   14006522e:	mov    DWORD PTR [rax+0x4],0x408
   140065235:	mov    QWORD PTR [rax+0x8],rcx
   140065239:	lea    rcx,[rsi+0x10]
   14006523d:	mov    DWORD PTR [rbp+0x30],0x408
   140065244:	mov    DWORD PTR [rbp+0x28],0x64
   14006524b:	call   0x14002ff30
   140065250:	lea    rdx,[rbp+0x30]
   140065254:	lea    rcx,[rsi+0x30]
   140065258:	mov    rbx,rax
   14006525b:	call   0x14002ffd0
   140065260:	mov    QWORD PTR [rbx],rax
   140065263:	cmp    DWORD PTR [rsi+0x8],0x2
   140065267:	jne    0x140066004
   14006526d:	lea    rdx,[rbp+0x28]
   140065271:	lea    rcx,[rsi+0x30]
   140065275:	mov    DWORD PTR [rbp+0x28],0x409
   14006527c:	call   0x14002ffd0
   140065281:	lea    rcx,[rip+0x10768]        # 0x1400759f0
   140065288:	lea    rdx,[rbp+0x28]
   14006528c:	mov    DWORD PTR [rax],0x65
   140065292:	mov    DWORD PTR [rax+0x4],0x409
   140065299:	mov    QWORD PTR [rax+0x8],rcx
   14006529d:	lea    rcx,[rsi+0x10]
   1400652a1:	mov    DWORD PTR [rbp+0x30],0x409
   1400652a8:	mov    DWORD PTR [rbp+0x28],0x65
   1400652af:	call   0x14002ff30
   1400652b4:	lea    rdx,[rbp+0x30]
   1400652b8:	lea    rcx,[rsi+0x30]
   1400652bc:	mov    rbx,rax
   1400652bf:	call   0x14002ffd0
   1400652c4:	mov    QWORD PTR [rbx],rax
   1400652c7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400652cb:	jne    0x140066004
   1400652d1:	lea    rdx,[rbp+0x28]
   1400652d5:	lea    rcx,[rsi+0x30]
   1400652d9:	mov    DWORD PTR [rbp+0x28],0x40a
   1400652e0:	call   0x14002ffd0
   1400652e5:	lea    rcx,[rip+0x10724]        # 0x140075a10
   1400652ec:	lea    rdx,[rbp+0x28]
   1400652f0:	mov    DWORD PTR [rax],0x66
   1400652f6:	mov    DWORD PTR [rax+0x4],0x40a
   1400652fd:	mov    QWORD PTR [rax+0x8],rcx
   140065301:	lea    rcx,[rsi+0x10]
   140065305:	mov    DWORD PTR [rbp+0x30],0x40a
   14006530c:	mov    DWORD PTR [rbp+0x28],0x66
   140065313:	call   0x14002ff30
   140065318:	lea    rdx,[rbp+0x30]
   14006531c:	lea    rcx,[rsi+0x30]
   140065320:	mov    rbx,rax
   140065323:	call   0x14002ffd0
   140065328:	mov    QWORD PTR [rbx],rax
   14006532b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006532f:	jne    0x140066004
   140065335:	lea    rdx,[rbp+0x28]
   140065339:	lea    rcx,[rsi+0x30]
   14006533d:	mov    DWORD PTR [rbp+0x28],0x439
   140065344:	call   0x14002ffd0
   140065349:	lea    rcx,[rip+0x106e0]        # 0x140075a30
   140065350:	lea    rdx,[rbp+0x28]
   140065354:	mov    DWORD PTR [rax],0x57
   14006535a:	mov    DWORD PTR [rax+0x4],0x439
   140065361:	mov    QWORD PTR [rax+0x8],rcx
   140065365:	lea    rcx,[rsi+0x10]
   140065369:	mov    DWORD PTR [rbp+0x30],0x439
   140065370:	mov    DWORD PTR [rbp+0x28],0x57
   140065377:	call   0x14002ff30
   14006537c:	lea    rdx,[rbp+0x30]
   140065380:	lea    rcx,[rsi+0x30]
   140065384:	mov    rbx,rax
   140065387:	call   0x14002ffd0
   14006538c:	mov    QWORD PTR [rbx],rax
   14006538f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065393:	jne    0x140066004
   140065399:	lea    rdx,[rbp+0x28]
   14006539d:	lea    rcx,[rsi+0x30]
   1400653a1:	mov    DWORD PTR [rbp+0x28],0x43a
   1400653a8:	call   0x14002ffd0
   1400653ad:	lea    rcx,[rip+0x10694]        # 0x140075a48
   1400653b4:	lea    rdx,[rbp+0x28]
   1400653b8:	mov    DWORD PTR [rax],0x58
   1400653be:	mov    DWORD PTR [rax+0x4],0x43a
   1400653c5:	mov    QWORD PTR [rax+0x8],rcx
   1400653c9:	lea    rcx,[rsi+0x10]
   1400653cd:	mov    DWORD PTR [rbp+0x30],0x43a
   1400653d4:	mov    DWORD PTR [rbp+0x28],0x58
   1400653db:	call   0x14002ff30
   1400653e0:	lea    rdx,[rbp+0x30]
   1400653e4:	lea    rcx,[rsi+0x30]
   1400653e8:	mov    rbx,rax
   1400653eb:	call   0x14002ffd0
   1400653f0:	mov    QWORD PTR [rbx],rax
   1400653f3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400653f7:	jne    0x140066004
   1400653fd:	lea    rdx,[rbp+0x28]
   140065401:	lea    rcx,[rsi+0x30]
   140065405:	mov    DWORD PTR [rbp+0x28],0x43b
   14006540c:	call   0x14002ffd0
   140065411:	lea    rcx,[rip+0x10648]        # 0x140075a60
   140065418:	lea    rdx,[rbp+0x28]
   14006541c:	mov    DWORD PTR [rax],0x59
   140065422:	mov    DWORD PTR [rax+0x4],0x43b
   140065429:	mov    QWORD PTR [rax+0x8],rcx
   14006542d:	lea    rcx,[rsi+0x10]
   140065431:	mov    DWORD PTR [rbp+0x30],0x43b
   140065438:	mov    DWORD PTR [rbp+0x28],0x59
   14006543f:	call   0x14002ff30
   140065444:	lea    rdx,[rbp+0x30]
   140065448:	lea    rcx,[rsi+0x30]
   14006544c:	mov    rbx,rax
   14006544f:	call   0x14002ffd0
   140065454:	mov    QWORD PTR [rbx],rax
   140065457:	cmp    DWORD PTR [rsi+0x8],0x2
   14006545b:	jne    0x140066004
   140065461:	lea    rdx,[rbp+0x28]
   140065465:	lea    rcx,[rsi+0x30]
   140065469:	mov    DWORD PTR [rbp+0x28],0x43c
   140065470:	call   0x14002ffd0
   140065475:	lea    rcx,[rip+0x105fc]        # 0x140075a78
   14006547c:	lea    rdx,[rbp+0x28]
   140065480:	mov    DWORD PTR [rax],0x5a
   140065486:	mov    DWORD PTR [rax+0x4],0x43c
   14006548d:	mov    QWORD PTR [rax+0x8],rcx
   140065491:	lea    rcx,[rsi+0x10]
   140065495:	mov    DWORD PTR [rbp+0x30],0x43c
   14006549c:	mov    DWORD PTR [rbp+0x28],0x5a
   1400654a3:	call   0x14002ff30
   1400654a8:	lea    rdx,[rbp+0x30]
   1400654ac:	lea    rcx,[rsi+0x30]
   1400654b0:	mov    rbx,rax
   1400654b3:	call   0x14002ffd0
   1400654b8:	mov    QWORD PTR [rbx],rax
   1400654bb:	cmp    DWORD PTR [rsi+0x8],0x2
   1400654bf:	jne    0x140066004
   1400654c5:	lea    rdx,[rbp+0x28]
   1400654c9:	lea    rcx,[rsi+0x30]
   1400654cd:	mov    DWORD PTR [rbp+0x28],0x43d
   1400654d4:	call   0x14002ffd0
   1400654d9:	lea    rcx,[rip+0x105b0]        # 0x140075a90
   1400654e0:	lea    rdx,[rbp+0x28]
   1400654e4:	mov    DWORD PTR [rax],0x5b
   1400654ea:	mov    DWORD PTR [rax+0x4],0x43d
   1400654f1:	mov    QWORD PTR [rax+0x8],rcx
   1400654f5:	lea    rcx,[rsi+0x10]
   1400654f9:	mov    DWORD PTR [rbp+0x30],0x43d
   140065500:	mov    DWORD PTR [rbp+0x28],0x5b
   140065507:	call   0x14002ff30
   14006550c:	lea    rdx,[rbp+0x30]
   140065510:	lea    rcx,[rsi+0x30]
   140065514:	mov    rbx,rax
   140065517:	call   0x14002ffd0
   14006551c:	mov    QWORD PTR [rbx],rax
   14006551f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065523:	jne    0x140066004
   140065529:	lea    rdx,[rbp+0x28]
   14006552d:	lea    rcx,[rsi+0x30]
   140065531:	mov    DWORD PTR [rbp+0x28],0x43e
   140065538:	call   0x14002ffd0
   14006553d:	lea    rcx,[rip+0x10564]        # 0x140075aa8
   140065544:	lea    rdx,[rbp+0x28]
   140065548:	mov    DWORD PTR [rax],0x5c
   14006554e:	mov    DWORD PTR [rax+0x4],0x43e
   140065555:	mov    QWORD PTR [rax+0x8],rcx
   140065559:	lea    rcx,[rsi+0x10]
   14006555d:	mov    DWORD PTR [rbp+0x30],0x43e
   140065564:	mov    DWORD PTR [rbp+0x28],0x5c
   14006556b:	call   0x14002ff30
   140065570:	lea    rdx,[rbp+0x30]
   140065574:	lea    rcx,[rsi+0x30]
   140065578:	mov    rbx,rax
   14006557b:	call   0x14002ffd0
   140065580:	mov    QWORD PTR [rbx],rax
   140065583:	cmp    DWORD PTR [rsi+0x8],0x2
   140065587:	jne    0x140066004
   14006558d:	lea    rdx,[rbp+0x28]
   140065591:	lea    rcx,[rsi+0x30]
   140065595:	mov    DWORD PTR [rbp+0x28],0x43f
   14006559c:	call   0x14002ffd0
   1400655a1:	lea    rcx,[rip+0x10518]        # 0x140075ac0
   1400655a8:	lea    rdx,[rbp+0x28]
   1400655ac:	mov    DWORD PTR [rax],0x5d
   1400655b2:	mov    DWORD PTR [rax+0x4],0x43f
   1400655b9:	mov    QWORD PTR [rax+0x8],rcx
   1400655bd:	lea    rcx,[rsi+0x10]
   1400655c1:	mov    DWORD PTR [rbp+0x30],0x43f
   1400655c8:	mov    DWORD PTR [rbp+0x28],0x5d
   1400655cf:	call   0x14002ff30
   1400655d4:	lea    rdx,[rbp+0x30]
   1400655d8:	lea    rcx,[rsi+0x30]
   1400655dc:	mov    rbx,rax
   1400655df:	call   0x14002ffd0
   1400655e4:	mov    QWORD PTR [rbx],rax
   1400655e7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400655eb:	jne    0x140066004
   1400655f1:	lea    rdx,[rbp+0x28]
   1400655f5:	lea    rcx,[rsi+0x30]
   1400655f9:	mov    DWORD PTR [rbp+0x28],0x44e
   140065600:	call   0x14002ffd0
   140065605:	lea    rcx,[rip+0x1052c]        # 0x140075b38
   14006560c:	lea    rdx,[rbp+0x28]
   140065610:	mov    DWORD PTR [rax],0x47
   140065616:	mov    DWORD PTR [rax+0x4],0x44e
   14006561d:	mov    QWORD PTR [rax+0x8],rcx
   140065621:	lea    rcx,[rsi+0x10]
   140065625:	mov    DWORD PTR [rbp+0x30],0x44e
   14006562c:	mov    DWORD PTR [rbp+0x28],0x47
   140065633:	call   0x14002ff30
   140065638:	lea    rdx,[rbp+0x30]
   14006563c:	lea    rcx,[rsi+0x30]
   140065640:	mov    rbx,rax
   140065643:	call   0x14002ffd0
   140065648:	mov    QWORD PTR [rbx],rax
   14006564b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006564f:	jne    0x140066004
   140065655:	lea    rdx,[rbp+0x28]
   140065659:	lea    rcx,[rsi+0x30]
   14006565d:	mov    DWORD PTR [rbp+0x28],0x44f
   140065664:	call   0x14002ffd0
   140065669:	lea    rcx,[rip+0x104e8]        # 0x140075b58
   140065670:	lea    rdx,[rbp+0x28]
   140065674:	mov    DWORD PTR [rax],0x48
   14006567a:	mov    DWORD PTR [rax+0x4],0x44f
   140065681:	mov    QWORD PTR [rax+0x8],rcx
   140065685:	lea    rcx,[rsi+0x10]
   140065689:	mov    DWORD PTR [rbp+0x30],0x44f
   140065690:	mov    DWORD PTR [rbp+0x28],0x48
   140065697:	call   0x14002ff30
   14006569c:	lea    rdx,[rbp+0x30]
   1400656a0:	lea    rcx,[rsi+0x30]
   1400656a4:	mov    rbx,rax
   1400656a7:	call   0x14002ffd0
   1400656ac:	mov    QWORD PTR [rbx],rax
   1400656af:	cmp    DWORD PTR [rsi+0x8],0x2
   1400656b3:	jne    0x140066004
   1400656b9:	lea    rdx,[rbp+0x28]
   1400656bd:	lea    rcx,[rsi+0x30]
   1400656c1:	mov    DWORD PTR [rbp+0x28],0x458
   1400656c8:	call   0x14002ffd0
   1400656cd:	lea    rcx,[rip+0x10494]        # 0x140075b68
   1400656d4:	lea    rdx,[rbp+0x28]
   1400656d8:	mov    DWORD PTR [rax],0x49
   1400656de:	mov    DWORD PTR [rax+0x4],0x458
   1400656e5:	mov    QWORD PTR [rax+0x8],rcx
   1400656e9:	lea    rcx,[rsi+0x10]
   1400656ed:	mov    DWORD PTR [rbp+0x30],0x458
   1400656f4:	mov    DWORD PTR [rbp+0x28],0x49
   1400656fb:	call   0x14002ff30
   140065700:	lea    rdx,[rbp+0x30]
   140065704:	lea    rcx,[rsi+0x30]
   140065708:	mov    rbx,rax
   14006570b:	call   0x14002ffd0
   140065710:	mov    QWORD PTR [rbx],rax
   140065713:	cmp    DWORD PTR [rsi+0x8],0x2
   140065717:	jne    0x140066004
   14006571d:	lea    rdx,[rbp+0x28]
   140065721:	lea    rcx,[rsi+0x30]
   140065725:	mov    DWORD PTR [rbp+0x28],0x451
   14006572c:	call   0x14002ffd0
   140065731:	lea    rcx,[rip+0x10488]        # 0x140075bc0
   140065738:	lea    rdx,[rbp+0x28]
   14006573c:	mov    DWORD PTR [rax],0x4a
   140065742:	mov    DWORD PTR [rax+0x4],0x451
   140065749:	mov    QWORD PTR [rax+0x8],rcx
   14006574d:	lea    rcx,[rsi+0x10]
   140065751:	mov    DWORD PTR [rbp+0x30],0x451
   140065758:	mov    DWORD PTR [rbp+0x28],0x4a
   14006575f:	call   0x14002ff30
   140065764:	lea    rdx,[rbp+0x30]
   140065768:	lea    rcx,[rsi+0x30]
   14006576c:	mov    rbx,rax
   14006576f:	call   0x14002ffd0
   140065774:	mov    QWORD PTR [rbx],rax
   140065777:	cmp    DWORD PTR [rsi+0x8],0x2
   14006577b:	jne    0x140066004
   140065781:	lea    rdx,[rbp+0x28]
   140065785:	lea    rcx,[rsi+0x30]
   140065789:	mov    DWORD PTR [rbp+0x28],0x453
   140065790:	call   0x14002ffd0
   140065795:	lea    rcx,[rip+0x1043c]        # 0x140075bd8
   14006579c:	lea    rdx,[rbp+0x28]
   1400657a0:	mov    DWORD PTR [rax],0x6a
   1400657a6:	mov    DWORD PTR [rax+0x4],0x453
   1400657ad:	mov    QWORD PTR [rax+0x8],rcx
   1400657b1:	lea    rcx,[rsi+0x10]
   1400657b5:	mov    DWORD PTR [rbp+0x30],0x453
   1400657bc:	mov    DWORD PTR [rbp+0x28],0x6a
   1400657c3:	call   0x14002ff30
   1400657c8:	lea    rdx,[rbp+0x30]
   1400657cc:	lea    rcx,[rsi+0x30]
   1400657d0:	mov    rbx,rax
   1400657d3:	call   0x14002ffd0
   1400657d8:	mov    QWORD PTR [rbx],rax
   1400657db:	cmp    DWORD PTR [rsi+0x8],0x2
   1400657df:	jne    0x140066004
   1400657e5:	lea    rdx,[rbp+0x28]
   1400657e9:	lea    rcx,[rsi+0x30]
   1400657ed:	mov    DWORD PTR [rbp+0x28],0x452
   1400657f4:	call   0x14002ffd0
   1400657f9:	lea    rcx,[rip+0x103f8]        # 0x140075bf8
   140065800:	lea    rdx,[rbp+0x28]
   140065804:	mov    DWORD PTR [rax],0x69
   14006580a:	mov    DWORD PTR [rax+0x4],0x452
   140065811:	mov    QWORD PTR [rax+0x8],rcx
   140065815:	lea    rcx,[rsi+0x10]
   140065819:	mov    DWORD PTR [rbp+0x30],0x452
   140065820:	mov    DWORD PTR [rbp+0x28],0x69
   140065827:	call   0x14002ff30
   14006582c:	lea    rdx,[rbp+0x30]
   140065830:	lea    rcx,[rsi+0x30]
   140065834:	mov    rbx,rax
   140065837:	call   0x14002ffd0
   14006583c:	mov    QWORD PTR [rbx],rax
   14006583f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065843:	jne    0x140066004
   140065849:	lea    rdx,[rbp+0x28]
   14006584d:	lea    rcx,[rsi+0x30]
   140065851:	mov    DWORD PTR [rbp+0x28],0x454
   140065858:	call   0x14002ffd0
   14006585d:	lea    rcx,[rip+0x103a4]        # 0x140075c08
   140065864:	lea    rdx,[rbp+0x28]
   140065868:	mov    DWORD PTR [rax],0x6c
   14006586e:	mov    DWORD PTR [rax+0x4],0x454
   140065875:	mov    QWORD PTR [rax+0x8],rcx
   140065879:	lea    rcx,[rsi+0x10]
   14006587d:	mov    DWORD PTR [rbp+0x30],0x454
   140065884:	mov    DWORD PTR [rbp+0x28],0x6c
   14006588b:	call   0x14002ff30
   140065890:	lea    rdx,[rbp+0x30]
   140065894:	lea    rcx,[rsi+0x30]
   140065898:	mov    rbx,rax
   14006589b:	call   0x14002ffd0
   1400658a0:	mov    QWORD PTR [rbx],rax
   1400658a3:	cmp    DWORD PTR [rsi+0x8],0x2
   1400658a7:	jne    0x140066004
   1400658ad:	lea    rdx,[rbp+0x28]
   1400658b1:	lea    rcx,[rsi+0x30]
   1400658b5:	mov    DWORD PTR [rbp+0x28],0x456
   1400658bc:	call   0x14002ffd0
   1400658c1:	lea    rcx,[rip+0x10358]        # 0x140075c20
   1400658c8:	lea    rdx,[rbp+0x28]
   1400658cc:	mov    DWORD PTR [rax],0x6b
   1400658d2:	mov    DWORD PTR [rax+0x4],0x456
   1400658d9:	mov    QWORD PTR [rax+0x8],rcx
   1400658dd:	lea    rcx,[rsi+0x10]
   1400658e1:	mov    DWORD PTR [rbp+0x30],0x456
   1400658e8:	mov    DWORD PTR [rbp+0x28],0x6b
   1400658ef:	call   0x14002ff30
   1400658f4:	lea    rdx,[rbp+0x30]
   1400658f8:	lea    rcx,[rsi+0x30]
   1400658fc:	mov    rbx,rax
   1400658ff:	call   0x14002ffd0
   140065904:	mov    QWORD PTR [rbx],rax
   140065907:	cmp    DWORD PTR [rsi+0x8],0x2
   14006590b:	jne    0x140066004
   140065911:	lea    rdx,[rbp+0x28]
   140065915:	lea    rcx,[rsi+0x30]
   140065919:	mov    DWORD PTR [rbp+0x28],0x44d
   140065920:	call   0x14002ffd0
   140065925:	lea    rcx,[rip+0x1030c]        # 0x140075c38
   14006592c:	lea    rdx,[rbp+0x28]
   140065930:	mov    DWORD PTR [rax],0x4b
   140065936:	mov    DWORD PTR [rax+0x4],0x44d
   14006593d:	mov    QWORD PTR [rax+0x8],rcx
   140065941:	lea    rcx,[rsi+0x10]
   140065945:	mov    DWORD PTR [rbp+0x30],0x44d
   14006594c:	mov    DWORD PTR [rbp+0x28],0x4b
   140065953:	call   0x14002ff30
   140065958:	lea    rdx,[rbp+0x30]
   14006595c:	lea    rcx,[rsi+0x30]
   140065960:	mov    rbx,rax
   140065963:	call   0x14002ffd0
   140065968:	mov    QWORD PTR [rbx],rax
   14006596b:	cmp    DWORD PTR [rsi+0x8],0x2
   14006596f:	jne    0x140066004
   140065975:	lea    rdx,[rbp+0x28]
   140065979:	lea    rcx,[rsi+0x30]
   14006597d:	mov    DWORD PTR [rbp+0x28],0x462
   140065984:	call   0x14002ffd0
   140065989:	lea    rcx,[rip+0x10308]        # 0x140075c98
   140065990:	lea    rdx,[rbp+0x28]
   140065994:	mov    DWORD PTR [rax],0x53
   14006599a:	mov    DWORD PTR [rax+0x4],0x462
   1400659a1:	mov    QWORD PTR [rax+0x8],rcx
   1400659a5:	lea    rcx,[rsi+0x10]
   1400659a9:	mov    DWORD PTR [rbp+0x30],0x462
   1400659b0:	mov    DWORD PTR [rbp+0x28],0x53
   1400659b7:	call   0x14002ff30
   1400659bc:	lea    rdx,[rbp+0x30]
   1400659c0:	lea    rcx,[rsi+0x30]
   1400659c4:	mov    rbx,rax
   1400659c7:	call   0x14002ffd0
   1400659cc:	mov    QWORD PTR [rbx],rax
   1400659cf:	cmp    DWORD PTR [rsi+0x8],0x2
   1400659d3:	jne    0x140066004
   1400659d9:	lea    rdx,[rbp+0x28]
   1400659dd:	lea    rcx,[rsi+0x30]
   1400659e1:	mov    DWORD PTR [rbp+0x28],0x463
   1400659e8:	call   0x14002ffd0
   1400659ed:	lea    rcx,[rip+0x102bc]        # 0x140075cb0
   1400659f4:	lea    rdx,[rbp+0x28]
   1400659f8:	mov    DWORD PTR [rax],0x54
   1400659fe:	mov    DWORD PTR [rax+0x4],0x463
   140065a05:	mov    QWORD PTR [rax+0x8],rcx
   140065a09:	lea    rcx,[rsi+0x10]
   140065a0d:	mov    DWORD PTR [rbp+0x30],0x463
   140065a14:	mov    DWORD PTR [rbp+0x28],0x54
   140065a1b:	call   0x14002ff30
   140065a20:	lea    rdx,[rbp+0x30]
   140065a24:	lea    rcx,[rsi+0x30]
   140065a28:	mov    rbx,rax
   140065a2b:	call   0x14002ffd0
   140065a30:	mov    QWORD PTR [rbx],rax
   140065a33:	cmp    DWORD PTR [rsi+0x8],0x2
   140065a37:	jne    0x140066004
   140065a3d:	lea    rdx,[rbp+0x28]
   140065a41:	lea    rcx,[rsi+0x30]
   140065a45:	mov    DWORD PTR [rbp+0x28],0x464
   140065a4c:	call   0x14002ffd0
   140065a51:	lea    rcx,[rip+0x10270]        # 0x140075cc8
   140065a58:	lea    rdx,[rbp+0x28]
   140065a5c:	mov    DWORD PTR [rax],0x55
   140065a62:	mov    DWORD PTR [rax+0x4],0x464
   140065a69:	mov    QWORD PTR [rax+0x8],rcx
   140065a6d:	lea    rcx,[rsi+0x10]
   140065a71:	mov    DWORD PTR [rbp+0x30],0x464
   140065a78:	mov    DWORD PTR [rbp+0x28],0x55
   140065a7f:	call   0x14002ff30
   140065a84:	lea    rdx,[rbp+0x30]
   140065a88:	lea    rcx,[rsi+0x30]
   140065a8c:	mov    rbx,rax
   140065a8f:	call   0x14002ffd0
   140065a94:	mov    QWORD PTR [rbx],rax
   140065a97:	cmp    DWORD PTR [rsi+0x8],0x2
   140065a9b:	jne    0x140066004
   140065aa1:	lea    rdx,[rbp+0x28]
   140065aa5:	lea    rcx,[rsi+0x30]
   140065aa9:	mov    DWORD PTR [rbp+0x28],0x465
   140065ab0:	call   0x14002ffd0
   140065ab5:	lea    rcx,[rip+0x10224]        # 0x140075ce0
   140065abc:	lea    rdx,[rbp+0x28]
   140065ac0:	mov    DWORD PTR [rax],0x56
   140065ac6:	mov    DWORD PTR [rax+0x4],0x465
   140065acd:	mov    QWORD PTR [rax+0x8],rcx
   140065ad1:	lea    rcx,[rsi+0x10]
   140065ad5:	mov    DWORD PTR [rbp+0x30],0x465
   140065adc:	mov    DWORD PTR [rbp+0x28],0x56
   140065ae3:	call   0x14002ff30
   140065ae8:	lea    rdx,[rbp+0x30]
   140065aec:	lea    rcx,[rsi+0x30]
   140065af0:	mov    rbx,rax
   140065af3:	call   0x14002ffd0
   140065af8:	mov    QWORD PTR [rbx],rax
   140065afb:	cmp    DWORD PTR [rsi+0x8],0x2
   140065aff:	jne    0x140066004
   140065b05:	lea    rdx,[rbp+0x28]
   140065b09:	lea    rcx,[rsi+0x30]
   140065b0d:	mov    DWORD PTR [rbp+0x28],0x461
   140065b14:	call   0x14002ffd0
   140065b19:	lea    rcx,[rip+0x101d8]        # 0x140075cf8
   140065b20:	lea    rdx,[rbp+0x28]
   140065b24:	mov    DWORD PTR [rax],0x52
   140065b2a:	mov    DWORD PTR [rax+0x4],0x461
   140065b31:	mov    QWORD PTR [rax+0x8],rcx
   140065b35:	lea    rcx,[rsi+0x10]
   140065b39:	mov    DWORD PTR [rbp+0x30],0x461
   140065b40:	mov    DWORD PTR [rbp+0x28],0x52
   140065b47:	call   0x14002ff30
   140065b4c:	lea    rdx,[rbp+0x30]
   140065b50:	lea    rcx,[rsi+0x30]
   140065b54:	mov    rbx,rax
   140065b57:	call   0x14002ffd0
   140065b5c:	mov    QWORD PTR [rbx],rax
   140065b5f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065b63:	jne    0x140066004
   140065b69:	lea    rdx,[rbp+0x28]
   140065b6d:	lea    rcx,[rsi+0x30]
   140065b71:	mov    DWORD PTR [rbp+0x28],0x466
   140065b78:	call   0x14002ffd0
   140065b7d:	lea    rcx,[rip+0x1018c]        # 0x140075d10
   140065b84:	lea    rdx,[rbp+0x28]
   140065b88:	mov    DWORD PTR [rax],0x6e
   140065b8e:	mov    DWORD PTR [rax+0x4],0x466
   140065b95:	mov    QWORD PTR [rax+0x8],rcx
   140065b99:	lea    rcx,[rsi+0x10]
   140065b9d:	mov    DWORD PTR [rbp+0x30],0x466
   140065ba4:	mov    DWORD PTR [rbp+0x28],0x6e
   140065bab:	call   0x14002ff30
   140065bb0:	lea    rdx,[rbp+0x30]
   140065bb4:	lea    rcx,[rsi+0x30]
   140065bb8:	mov    rbx,rax
   140065bbb:	call   0x14002ffd0
   140065bc0:	mov    QWORD PTR [rbx],rax
   140065bc3:	cmp    DWORD PTR [rsi+0x8],0x2
   140065bc7:	jne    0x140066004
   140065bcd:	lea    rdx,[rbp+0x28]
   140065bd1:	lea    rcx,[rsi+0x30]
   140065bd5:	mov    DWORD PTR [rbp+0x28],0x467
   140065bdc:	call   0x14002ffd0
   140065be1:	lea    rcx,[rip+0x10140]        # 0x140075d28
   140065be8:	lea    rdx,[rbp+0x28]
   140065bec:	mov    DWORD PTR [rax],0x70
   140065bf2:	mov    DWORD PTR [rax+0x4],0x467
   140065bf9:	mov    QWORD PTR [rax+0x8],rcx
   140065bfd:	lea    rcx,[rsi+0x10]
   140065c01:	mov    DWORD PTR [rbp+0x30],0x467
   140065c08:	mov    DWORD PTR [rbp+0x28],0x70
   140065c0f:	call   0x14002ff30
   140065c14:	lea    rdx,[rbp+0x30]
   140065c18:	lea    rcx,[rsi+0x30]
   140065c1c:	mov    rbx,rax
   140065c1f:	call   0x14002ffd0
   140065c24:	mov    QWORD PTR [rbx],rax
   140065c27:	cmp    DWORD PTR [rsi+0x8],0x2
   140065c2b:	jne    0x140066004
   140065c31:	lea    rdx,[rbp+0x28]
   140065c35:	lea    rcx,[rsi+0x30]
   140065c39:	mov    DWORD PTR [rbp+0x28],0x468
   140065c40:	call   0x14002ffd0
   140065c45:	lea    rcx,[rip+0x10104]        # 0x140075d50
   140065c4c:	lea    rdx,[rbp+0x28]
   140065c50:	mov    DWORD PTR [rax],0x6f
   140065c56:	mov    DWORD PTR [rax+0x4],0x468
   140065c5d:	mov    QWORD PTR [rax+0x8],rcx
   140065c61:	lea    rcx,[rsi+0x10]
   140065c65:	mov    DWORD PTR [rbp+0x30],0x468
   140065c6c:	mov    DWORD PTR [rbp+0x28],0x6f
   140065c73:	call   0x14002ff30
   140065c78:	lea    rdx,[rbp+0x30]
   140065c7c:	lea    rcx,[rsi+0x30]
   140065c80:	mov    rbx,rax
   140065c83:	call   0x14002ffd0
   140065c88:	mov    QWORD PTR [rbx],rax
   140065c8b:	cmp    DWORD PTR [rsi+0x8],0x2
   140065c8f:	jne    0x140066004
   140065c95:	lea    rdx,[rbp+0x28]
   140065c99:	lea    rcx,[rsi+0x30]
   140065c9d:	mov    DWORD PTR [rbp+0x28],0x469
   140065ca4:	call   0x14002ffd0
   140065ca9:	lea    rcx,[rip+0x100c0]        # 0x140075d70
   140065cb0:	lea    rdx,[rbp+0x28]
   140065cb4:	mov    DWORD PTR [rax],0x71
   140065cba:	mov    DWORD PTR [rax+0x4],0x469
   140065cc1:	mov    QWORD PTR [rax+0x8],rcx
   140065cc5:	lea    rcx,[rsi+0x10]
   140065cc9:	mov    DWORD PTR [rbp+0x30],0x469
   140065cd0:	mov    DWORD PTR [rbp+0x28],0x71
   140065cd7:	call   0x14002ff30
   140065cdc:	lea    rdx,[rbp+0x30]
   140065ce0:	lea    rcx,[rsi+0x30]
   140065ce4:	mov    rbx,rax
   140065ce7:	call   0x14002ffd0
   140065cec:	mov    QWORD PTR [rbx],rax
   140065cef:	cmp    DWORD PTR [rsi+0x8],0x2
   140065cf3:	jne    0x140066004
   140065cf9:	lea    rdx,[rbp+0x28]
   140065cfd:	lea    rcx,[rsi+0x30]
   140065d01:	mov    DWORD PTR [rbp+0x28],0x476
   140065d08:	call   0x14002ffd0
   140065d0d:	lea    rcx,[rip+0x1016c]        # 0x140075e80
   140065d14:	lea    rdx,[rbp+0x28]
   140065d18:	mov    DWORD PTR [rax],0x72
   140065d1e:	mov    DWORD PTR [rax+0x4],0x476
   140065d25:	mov    QWORD PTR [rax+0x8],rcx
   140065d29:	lea    rcx,[rsi+0x10]
   140065d2d:	mov    DWORD PTR [rbp+0x30],0x476
   140065d34:	mov    DWORD PTR [rbp+0x28],0x72
   140065d3b:	call   0x14002ff30
   140065d40:	lea    rdx,[rbp+0x30]
   140065d44:	lea    rcx,[rsi+0x30]
   140065d48:	mov    rbx,rax
   140065d4b:	call   0x14002ffd0
   140065d50:	mov    QWORD PTR [rbx],rax
   140065d53:	cmp    DWORD PTR [rsi+0x8],0x2
   140065d57:	jne    0x140066004
   140065d5d:	lea    rdx,[rbp+0x28]
   140065d61:	lea    rcx,[rsi+0x30]
   140065d65:	mov    DWORD PTR [rbp+0x28],0x477
   140065d6c:	call   0x14002ffd0
   140065d71:	lea    rcx,[rip+0x10128]        # 0x140075ea0
   140065d78:	lea    rdx,[rbp+0x28]
   140065d7c:	mov    DWORD PTR [rax],0x73
   140065d82:	mov    DWORD PTR [rax+0x4],0x477
   140065d89:	mov    QWORD PTR [rax+0x8],rcx
   140065d8d:	lea    rcx,[rsi+0x10]
   140065d91:	mov    DWORD PTR [rbp+0x30],0x477
   140065d98:	mov    DWORD PTR [rbp+0x28],0x73
   140065d9f:	call   0x14002ff30
   140065da4:	lea    rdx,[rbp+0x30]
   140065da8:	lea    rcx,[rsi+0x30]
   140065dac:	mov    rbx,rax
   140065daf:	call   0x14002ffd0
   140065db4:	mov    QWORD PTR [rbx],rax
   140065db7:	cmp    DWORD PTR [rsi+0x8],0x2
   140065dbb:	jne    0x140066004
   140065dc1:	lea    rdx,[rbp+0x28]
   140065dc5:	lea    rcx,[rsi+0x30]
   140065dc9:	mov    DWORD PTR [rbp+0x28],0x474
   140065dd0:	call   0x14002ffd0
   140065dd5:	lea    rcx,[rip+0x100e4]        # 0x140075ec0
   140065ddc:	lea    rdx,[rbp+0x28]
   140065de0:	mov    DWORD PTR [rax],0x74
   140065de6:	mov    DWORD PTR [rax+0x4],0x474
   140065ded:	mov    QWORD PTR [rax+0x8],rcx
   140065df1:	lea    rcx,[rsi+0x10]
   140065df5:	mov    DWORD PTR [rbp+0x30],0x474
   140065dfc:	mov    DWORD PTR [rbp+0x28],0x74
   140065e03:	call   0x14002ff30
   140065e08:	lea    rdx,[rbp+0x30]
   140065e0c:	lea    rcx,[rsi+0x30]
   140065e10:	mov    rbx,rax
   140065e13:	call   0x14002ffd0
   140065e18:	mov    QWORD PTR [rbx],rax
   140065e1b:	cmp    DWORD PTR [rsi+0x8],0x2
   140065e1f:	jne    0x140066004
   140065e25:	lea    rdx,[rbp+0x28]
   140065e29:	lea    rcx,[rsi+0x30]
   140065e2d:	mov    DWORD PTR [rbp+0x28],0x475
   140065e34:	call   0x14002ffd0
   140065e39:	lea    rcx,[rip+0x100a0]        # 0x140075ee0
   140065e40:	lea    rdx,[rbp+0x28]
   140065e44:	mov    DWORD PTR [rax],0x75
   140065e4a:	mov    DWORD PTR [rax+0x4],0x475
   140065e51:	mov    QWORD PTR [rax+0x8],rcx
   140065e55:	lea    rcx,[rsi+0x10]
   140065e59:	mov    DWORD PTR [rbp+0x30],0x475
   140065e60:	mov    DWORD PTR [rbp+0x28],0x75
   140065e67:	call   0x14002ff30
   140065e6c:	lea    rdx,[rbp+0x30]
   140065e70:	lea    rcx,[rsi+0x30]
   140065e74:	mov    rbx,rax
   140065e77:	call   0x14002ffd0
   140065e7c:	mov    QWORD PTR [rbx],rax
   140065e7f:	cmp    DWORD PTR [rsi+0x8],0x2
   140065e83:	jne    0x140066004
   140065e89:	lea    rdx,[rbp+0x28]
   140065e8d:	lea    rcx,[rsi+0x30]
   140065e91:	mov    DWORD PTR [rbp+0x28],0x3f1
   140065e98:	call   0x14002ffd0
   140065e9d:	lea    rcx,[rip+0x1005c]        # 0x140075f00
   140065ea4:	lea    rdx,[rbp+0x28]
   140065ea8:	mov    DWORD PTR [rax],0x79
   140065eae:	mov    DWORD PTR [rax+0x4],0x3f1
   140065eb5:	mov    QWORD PTR [rax+0x8],rcx
   140065eb9:	lea    rcx,[rsi+0x10]
   140065ebd:	mov    DWORD PTR [rbp+0x30],0x3f1
   140065ec4:	mov    DWORD PTR [rbp+0x28],0x79
   140065ecb:	call   0x14002ff30
   140065ed0:	lea    rdx,[rbp+0x30]
   140065ed4:	lea    rcx,[rsi+0x30]
   140065ed8:	mov    rbx,rax
   140065edb:	call   0x14002ffd0
   140065ee0:	mov    QWORD PTR [rbx],rax
   140065ee3:	cmp    DWORD PTR [rsi+0x8],0x2
   140065ee7:	jne    0x140066004
   140065eed:	lea    rdx,[rbp+0x28]
   140065ef1:	lea    rcx,[rsi+0x30]
   140065ef5:	mov    DWORD PTR [rbp+0x28],0x47e
   140065efc:	call   0x14002ffd0
   140065f01:	lea    rcx,[rip+0x10010]        # 0x140075f18
   140065f08:	lea    rdx,[rbp+0x28]
   140065f0c:	mov    DWORD PTR [rax],0x7a
   140065f12:	mov    DWORD PTR [rax+0x4],0x47e
   140065f19:	mov    QWORD PTR [rax+0x8],rcx
   140065f1d:	lea    rcx,[rsi+0x10]
   140065f21:	mov    DWORD PTR [rbp+0x30],0x47e
   140065f28:	mov    DWORD PTR [rbp+0x28],0x7a
   140065f2f:	call   0x14002ff30
   140065f34:	lea    rdx,[rbp+0x30]
   140065f38:	lea    rcx,[rsi+0x30]
   140065f3c:	mov    rbx,rax
   140065f3f:	call   0x14002ffd0
   140065f44:	mov    QWORD PTR [rbx],rax
   140065f47:	cmp    DWORD PTR [rsi+0x8],0x2
   140065f4b:	jne    0x140066004
   140065f51:	lea    rdx,[rbp+0x28]
   140065f55:	lea    rcx,[rsi+0x30]
   140065f59:	mov    DWORD PTR [rbp+0x28],0x47f
   140065f60:	call   0x14002ffd0
   140065f65:	lea    rcx,[rip+0xffcc]        # 0x140075f38
   140065f6c:	lea    rdx,[rbp+0x28]
   140065f70:	mov    DWORD PTR [rax],0x7b
   140065f76:	mov    DWORD PTR [rax+0x4],0x47f
   140065f7d:	mov    QWORD PTR [rax+0x8],rcx
   140065f81:	lea    rcx,[rsi+0x10]
   140065f85:	mov    DWORD PTR [rbp+0x30],0x47f
   140065f8c:	mov    DWORD PTR [rbp+0x28],0x7b
   140065f93:	call   0x14002ff30
   140065f98:	lea    rdx,[rbp+0x30]
   140065f9c:	lea    rcx,[rsi+0x30]
   140065fa0:	mov    rbx,rax
   140065fa3:	call   0x14002ffd0
   140065fa8:	mov    QWORD PTR [rbx],rax
   140065fab:	cmp    DWORD PTR [rsi+0x8],0x2
   140065faf:	jne    0x140066004
   140065fb1:	lea    rdx,[rbp+0x28]
   140065fb5:	lea    rcx,[rsi+0x30]
   140065fb9:	mov    DWORD PTR [rbp+0x28],0x480
   140065fc0:	call   0x14002ffd0
   140065fc5:	lea    rcx,[rsi+0x10]
   140065fc9:	lea    rdx,[rbp+0x28]
   140065fcd:	mov    DWORD PTR [rax],0x7c
   140065fd3:	mov    DWORD PTR [rax+0x4],0x480
   140065fda:	mov    DWORD PTR [rbp+0x30],0x480
   140065fe1:	mov    QWORD PTR [rax+0x8],r15
   140065fe5:	mov    DWORD PTR [rbp+0x28],0x7c
   140065fec:	call   0x14002ff30
   140065ff1:	lea    rdx,[rbp+0x30]
   140065ff5:	lea    rcx,[rsi+0x30]
   140065ff9:	mov    rbx,rax
   140065ffc:	call   0x14002ffd0
   140066001:	mov    QWORD PTR [rbx],rax
   140066004:	cmp    DWORD PTR [rsi+0x8],0x2
   140066008:	mov    r15,QWORD PTR [rsp+0x20]
   14006600d:	jne    0x140066062
   14006600f:	lea    rdx,[rbp+0x28]
   140066013:	lea    rcx,[rsi+0x30]
   140066017:	mov    DWORD PTR [rbp+0x28],0x481
   14006601e:	call   0x14002ffd0
   140066023:	lea    rcx,[rsi+0x10]
   140066027:	lea    rdx,[rbp+0x28]
   14006602b:	mov    DWORD PTR [rax],0x7d
   140066031:	mov    DWORD PTR [rax+0x4],0x481
   140066038:	mov    DWORD PTR [rbp+0x30],0x481
   14006603f:	mov    QWORD PTR [rax+0x8],r14
   140066043:	mov    DWORD PTR [rbp+0x28],0x7d
   14006604a:	call   0x14002ff30
   14006604f:	lea    rdx,[rbp+0x30]
   140066053:	lea    rcx,[rsi+0x30]
   140066057:	mov    rbx,rax
   14006605a:	call   0x14002ffd0
   14006605f:	mov    QWORD PTR [rbx],rax
   140066062:	cmp    DWORD PTR [rsi+0x8],0x2
   140066066:	mov    r14,QWORD PTR [rsp+0x28]
   14006606b:	jne    0x1400660c0
   14006606d:	lea    rdx,[rbp+0x28]
   140066071:	lea    rcx,[rsi+0x30]
   140066075:	mov    DWORD PTR [rbp+0x28],0x482
   14006607c:	call   0x14002ffd0
   140066081:	lea    rcx,[rsi+0x10]
   140066085:	lea    rdx,[rbp+0x28]
   140066089:	mov    DWORD PTR [rax],0x7f
   14006608f:	mov    DWORD PTR [rax+0x4],0x482
   140066096:	mov    DWORD PTR [rbp+0x30],0x482
   14006609d:	mov    QWORD PTR [rax+0x8],r12
   1400660a1:	mov    DWORD PTR [rbp+0x28],0x7f
   1400660a8:	call   0x14002ff30
   1400660ad:	lea    rdx,[rbp+0x30]
   1400660b1:	lea    rcx,[rsi+0x30]
   1400660b5:	mov    rbx,rax
   1400660b8:	call   0x14002ffd0
   1400660bd:	mov    QWORD PTR [rbx],rax
   1400660c0:	cmp    DWORD PTR [rsi+0x8],0x2
   1400660c4:	mov    r12,QWORD PTR [rsp+0x70]
   1400660c9:	jne    0x14006611e
   1400660cb:	lea    rdx,[rbp+0x28]
   1400660cf:	lea    rcx,[rsi+0x30]
   1400660d3:	mov    DWORD PTR [rbp+0x28],0x3f2
   1400660da:	call   0x14002ffd0
   1400660df:	lea    rcx,[rsi+0x10]
   1400660e3:	lea    rdx,[rbp+0x28]
   1400660e7:	mov    DWORD PTR [rax],0x7e
   1400660ed:	mov    DWORD PTR [rax+0x4],0x3f2
   1400660f4:	mov    DWORD PTR [rbp+0x30],0x3f2
   1400660fb:	mov    QWORD PTR [rax+0x8],r13
   1400660ff:	mov    DWORD PTR [rbp+0x28],0x7e
   140066106:	call   0x14002ff30
   14006610b:	lea    rdx,[rbp+0x30]
   14006610f:	lea    rcx,[rsi+0x30]
   140066113:	mov    rbx,rax
   140066116:	call   0x14002ffd0
   14006611b:	mov    QWORD PTR [rbx],rax
   14006611e:	cmp    DWORD PTR [rsi+0x8],0x0
   140066122:	mov    r13,QWORD PTR [rsp+0x30]
   140066127:	jne    0x1400661e7
   14006612d:	lea    rdx,[rbp+0x28]
   140066131:	lea    rcx,[rsi+0x30]
   140066135:	mov    DWORD PTR [rbp+0x28],0x135
   14006613c:	call   0x14002ffd0
   140066141:	lea    rcx,[rip+0x11220]        # 0x140077368
   140066148:	lea    rdx,[rbp+0x28]
   14006614c:	mov    DWORD PTR [rax],0x40f
   140066152:	mov    DWORD PTR [rax+0x4],0x135
   140066159:	mov    QWORD PTR [rax+0x8],rcx
   14006615d:	lea    rcx,[rsi+0x10]
   140066161:	mov    DWORD PTR [rbp+0x30],0x135
   140066168:	mov    DWORD PTR [rbp+0x28],0x40f
   14006616f:	call   0x14002ff30
   140066174:	lea    rdx,[rbp+0x30]
   140066178:	lea    rcx,[rsi+0x30]
   14006617c:	mov    rbx,rax
   14006617f:	call   0x14002ffd0
   140066184:	mov    QWORD PTR [rbx],rax
   140066187:	cmp    DWORD PTR [rsi+0x8],0x0
   14006618b:	jne    0x1400661e7
   14006618d:	lea    rdx,[rbp+0x28]
   140066191:	lea    rcx,[rsi+0x30]
   140066195:	mov    DWORD PTR [rbp+0x28],0x150
   14006619c:	call   0x14002ffd0
   1400661a1:	lea    rcx,[rip+0x111e0]        # 0x140077388
   1400661a8:	lea    rdx,[rbp+0x28]
   1400661ac:	mov    DWORD PTR [rax],0x40e
   1400661b2:	mov    DWORD PTR [rax+0x4],0x150
   1400661b9:	mov    QWORD PTR [rax+0x8],rcx
   1400661bd:	lea    rcx,[rsi+0x10]
   1400661c1:	mov    DWORD PTR [rbp+0x30],0x150
   1400661c8:	mov    DWORD PTR [rbp+0x28],0x40e
   1400661cf:	call   0x14002ff30
   1400661d4:	lea    rdx,[rbp+0x30]
   1400661d8:	lea    rcx,[rsi+0x30]
   1400661dc:	mov    rbx,rax
   1400661df:	call   0x14002ffd0
   1400661e4:	mov    QWORD PTR [rbx],rax
   1400661e7:	cmp    DWORD PTR [rsi+0x8],0x2
   1400661eb:	jne    0x140066247
   1400661ed:	lea    rdx,[rbp+0x28]
   1400661f1:	lea    rcx,[rsi+0x30]
   1400661f5:	mov    DWORD PTR [rbp+0x28],0x3f4
   1400661fc:	call   0x14002ffd0
   140066201:	lea    rcx,[rip+0xef68]        # 0x140075170
   140066208:	lea    rdx,[rbp+0x28]
   14006620c:	mov    DWORD PTR [rax],0xffffffff
   140066212:	mov    DWORD PTR [rax+0x4],0x3f4
   140066219:	mov    QWORD PTR [rax+0x8],rcx
   14006621d:	lea    rcx,[rsi+0x10]
   140066221:	mov    DWORD PTR [rbp+0x30],0x3f4
   140066228:	mov    DWORD PTR [rbp+0x28],0xffffffff
   14006622f:	call   0x14002ff30
   140066234:	lea    rdx,[rbp+0x30]
   140066238:	lea    rcx,[rsi+0x30]
   14006623c:	mov    rbx,rax
   14006623f:	call   0x14002ffd0
   140066244:	mov    QWORD PTR [rbx],rax
   140066247:	add    rsp,0x38
   14006624b:	pop    rdi
   14006624c:	pop    rsi
   14006624d:	pop    rbx
   14006624e:	pop    rbp
   14006624f:	ret    
   140066250:	mov    QWORD PTR [rsp+0x20],rbx
   140066255:	push   rbp
   140066256:	push   rsi
   140066257:	push   rdi
   140066258:	sub    rsp,0x140
   14006625f:	mov    rax,QWORD PTR [rip+0x1ee42]        # 0x1400850a8
   140066266:	xor    rax,rsp
   140066269:	mov    QWORD PTR [rsp+0x130],rax
   140066271:	mov    rbx,rcx
   140066274:	mov    rbp,r8
   140066277:	mov    rsi,rdx
   14006627a:	lea    rcx,[rsp+0x21]
   14006627f:	xor    edx,edx
   140066281:	mov    r8d,0x103
   140066287:	mov    edi,r9d
   14006628a:	mov    BYTE PTR [rsp+0x20],0x0
   14006628f:	call   0x140036dc0
   140066294:	test   rbx,rbx
   140066297:	je     0x1400662f2
   140066299:	lea    rax,[rip+0x74a0]        # 0x14006d740
   1400662a0:	lea    r8,[rip+0x74a1]        # 0x14006d748
   1400662a7:	test   edi,edi
   1400662a9:	lea    rcx,[rsp+0x20]
   1400662ae:	mov    edx,0x104
   1400662b3:	cmove  r8,rax
   1400662b7:	call   0x1400336a8
   1400662bc:	lea    rcx,[rsp+0x20]
   1400662c1:	mov    r8,rsi
   1400662c4:	mov    edx,0x104
   1400662c9:	call   0x1400330c8
   1400662ce:	lea    rcx,[rsp+0x20]
   1400662d3:	mov    r8,rbp
   1400662d6:	mov    edx,0x104
   1400662db:	call   0x1400330c8
   1400662e0:	lea    r8,[rsp+0x20]
   1400662e5:	mov    edx,0x104
   1400662ea:	mov    rcx,rbx
   1400662ed:	call   0x1400336a8
   1400662f2:	mov    rcx,QWORD PTR [rsp+0x130]
   1400662fa:	xor    rcx,rsp
   1400662fd:	call   0x140032f00
   140066302:	mov    rbx,QWORD PTR [rsp+0x178]
   14006630a:	add    rsp,0x140
   140066311:	pop    rdi
   140066312:	pop    rsi
   140066313:	pop    rbp
   140066314:	ret    
   140066315:	int3   
   140066316:	int3   
   140066317:	int3   
   140066318:	int3   
   140066319:	int3   
   14006631a:	int3   
   14006631b:	int3   
   14006631c:	int3   
   14006631d:	int3   
   14006631e:	int3   
   14006631f:	int3   
   140066320:	rex push rbx
   140066322:	sub    rsp,0x40
   140066326:	mov    rax,QWORD PTR [rcx+0x20]
   14006632a:	mov    rbx,rcx
   14006632d:	mov    QWORD PTR [rsp+0x30],rax
   140066332:	mov    rax,QWORD PTR [rcx+0x8]
   140066336:	mov    QWORD PTR [rsp+0x38],rax
   14006633b:	nop    DWORD PTR [rax+rax*1+0x0]
   140066340:	xor    r8d,r8d
   140066343:	lea    rdx,[rsp+0x30]
   140066348:	or     r9d,0xffffffff
   14006634c:	lea    ecx,[r8+0x2]
   140066350:	mov    DWORD PTR [rsp+0x20],0x1
   140066358:	call   QWORD PTR [rip+0x20d2]        # 0x140068430
   14006635e:	test   eax,eax
   140066360:	je     0x140066385
   140066362:	dec    eax
   140066364:	jne    0x140066340
   140066366:	mov    rax,QWORD PTR [rbx]
   140066369:	mov    rcx,rbx
   14006636c:	call   QWORD PTR [rax+0x20]
   14006636f:	mov    rcx,QWORD PTR [rbx+0x8]
   140066373:	call   QWORD PTR [rip+0x1e07]        # 0x140068180
   140066379:	mov    rcx,QWORD PTR [rbx+0x10]
   14006637d:	call   QWORD PTR [rip+0x2075]        # 0x1400683f8
   140066383:	jmp    0x140066340
   140066385:	xor    ecx,ecx
   140066387:	call   0x140036194
   14006638c:	xor    eax,eax
   14006638e:	add    rsp,0x40
   140066392:	pop    rbx
   140066393:	ret    
   140066394:	int3   
   140066395:	int3   
   140066396:	int3   
   140066397:	int3   
   140066398:	int3   
   140066399:	int3   
   14006639a:	int3   
   14006639b:	int3   
   14006639c:	int3   
   14006639d:	int3   
   14006639e:	int3   
   14006639f:	int3   
   1400663a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400663a5:	push   rdi
   1400663a6:	sub    rsp,0x30
   1400663aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400663b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400663b8:	mov    QWORD PTR [rsp+0x50],rsi
   1400663bd:	mov    rdi,rcx
   1400663c0:	lea    rax,[rip+0x110a9]        # 0x140077470
   1400663c7:	mov    QWORD PTR [rcx],rax
   1400663ca:	add    rcx,0x8c8
   1400663d1:	call   0x140032280
   1400663d6:	nop
   1400663d7:	lea    rcx,[rdi+0x8e8]
   1400663de:	call   0x140032280
   1400663e3:	xor    esi,esi
   1400663e5:	mov    QWORD PTR [rdi+0x28],rsi
   1400663e9:	mov    QWORD PTR [rdi+0x908],rsi
   1400663f0:	mov    QWORD PTR [rdi+0x8],rsi
   1400663f4:	mov    QWORD PTR [rdi+0x10],rsi
   1400663f8:	mov    QWORD PTR [rdi+0x18],rsi
   1400663fc:	mov    QWORD PTR [rdi+0x20],rsi
   140066400:	mov    QWORD PTR [rdi+0x38],rsi
   140066404:	mov    QWORD PTR [rdi+0x30],rsi
   140066408:	mov    QWORD PTR [rdi+0x40],rsi
   14006640c:	mov    DWORD PTR [rdi+0x48],esi
   14006640f:	mov    BYTE PTR [rdi+0x4c],sil
   140066413:	mov    BYTE PTR [rdi+0x150],sil
   14006641a:	mov    BYTE PTR [rdi+0x254],sil
   140066421:	mov    BYTE PTR [rdi+0x358],sil
   140066428:	mov    BYTE PTR [rdi+0x45c],sil
   14006642f:	mov    BYTE PTR [rdi+0x560],sil
   140066436:	mov    BYTE PTR [rdi+0x664],sil
   14006643d:	mov    BYTE PTR [rdi+0x768],sil
   140066444:	lea    rbx,[rdi+0x870]
   14006644b:	xor    eax,eax
   14006644d:	mov    QWORD PTR [rbx],rax
   140066450:	mov    QWORD PTR [rbx+0x8],rax
   140066454:	mov    QWORD PTR [rbx+0x10],rax
   140066458:	mov    QWORD PTR [rbx+0x18],rax
   14006645c:	mov    QWORD PTR [rbx+0x20],rax
   140066460:	mov    QWORD PTR [rdi+0x898],rax
   140066467:	mov    QWORD PTR [rdi+0x8a0],rax
   14006646e:	mov    QWORD PTR [rdi+0x8a8],rax
   140066475:	lea    edx,[rsi+0x1]
   140066478:	mov    rcx,rbx
   14006647b:	call   QWORD PTR [rip+0x1ba7]        # 0x140068028
   140066481:	xor    r9d,r9d
   140066484:	xor    r8d,r8d
   140066487:	lea    edx,[rsi+0x1]
   14006648a:	mov    rcx,rbx
   14006648d:	call   QWORD PTR [rip+0x1b8d]        # 0x140068020
   140066493:	mov    DWORD PTR [rdi+0x898],0x18
   14006649d:	mov    QWORD PTR [rdi+0x8a0],rbx
   1400664a4:	mov    QWORD PTR [rdi+0x8b0],rsi
   1400664ab:	mov    QWORD PTR [rdi+0x8b8],rsi
   1400664b2:	mov    DWORD PTR [rdi+0x8c0],esi
   1400664b8:	mov    rax,rdi
   1400664bb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400664c0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400664c5:	add    rsp,0x30
   1400664c9:	pop    rdi
   1400664ca:	ret    
   1400664cb:	int3   
   1400664cc:	int3   
   1400664cd:	int3   
   1400664ce:	int3   
   1400664cf:	int3   
   1400664d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400664d5:	push   rdi
   1400664d6:	sub    rsp,0x30
   1400664da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400664e3:	mov    QWORD PTR [rsp+0x58],rbx
   1400664e8:	mov    rdi,rcx
   1400664eb:	lea    rax,[rip+0x10f7e]        # 0x140077470
   1400664f2:	mov    QWORD PTR [rcx],rax
   1400664f5:	call   0x140066560
   1400664fa:	nop
   1400664fb:	lea    rbx,[rdi+0x8e8]
   140066502:	mov    QWORD PTR [rsp+0x48],rbx
   140066507:	mov    r8,QWORD PTR [rbx+0x8]
   14006650b:	mov    r9,r8
   14006650e:	mov    r8,QWORD PTR [r8]
   140066511:	lea    rdx,[rsp+0x50]
   140066516:	mov    rcx,rbx
   140066519:	call   0x1400323e0
   14006651e:	nop
   14006651f:	mov    rcx,QWORD PTR [rbx+0x8]
   140066523:	call   0x1400330c0
   140066528:	nop
   140066529:	lea    rbx,[rdi+0x8c8]
   140066530:	mov    QWORD PTR [rsp+0x40],rbx
   140066535:	mov    r8,QWORD PTR [rbx+0x8]
   140066539:	mov    r9,r8
   14006653c:	mov    r8,QWORD PTR [r8]
   14006653f:	lea    rdx,[rsp+0x48]
   140066544:	mov    rcx,rbx
   140066547:	call   0x1400323e0
   14006654c:	nop
   14006654d:	mov    rcx,QWORD PTR [rbx+0x8]
   140066551:	mov    rbx,QWORD PTR [rsp+0x58]
   140066556:	add    rsp,0x30
   14006655a:	pop    rdi
   14006655b:	jmp    0x1400330c0
   140066560:	mov    QWORD PTR [rsp+0x8],rbx
   140066565:	mov    QWORD PTR [rsp+0x10],rbp
   14006656a:	mov    QWORD PTR [rsp+0x18],rsi
   14006656f:	mov    QWORD PTR [rsp+0x20],rdi
   140066574:	push   r12
   140066576:	sub    rsp,0x20
   14006657a:	xor    r12d,r12d
   14006657d:	mov    rdi,rcx
   140066580:	cmp    QWORD PTR [rcx+0x18],r12
   140066584:	je     0x1400665b2
   140066586:	mov    rcx,QWORD PTR [rcx+0x20]
   14006658a:	call   QWORD PTR [rip+0x1e68]        # 0x1400683f8
   140066590:	mov    rcx,QWORD PTR [rdi+0x18]
   140066594:	mov    edx,0x1388
   140066599:	call   QWORD PTR [rip+0x1c49]        # 0x1400681e8
   14006659f:	mov    rcx,QWORD PTR [rdi+0x18]
   1400665a3:	test   rcx,rcx
   1400665a6:	je     0x1400665b2
   1400665a8:	call   QWORD PTR [rip+0x1dea]        # 0x140068398
   1400665ae:	mov    QWORD PTR [rdi+0x18],r12
   1400665b2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400665b6:	test   rcx,rcx
   1400665b9:	je     0x1400665c5
   1400665bb:	call   QWORD PTR [rip+0x1dd7]        # 0x140068398
   1400665c1:	mov    QWORD PTR [rdi+0x20],r12
   1400665c5:	mov    rcx,QWORD PTR [rdi+0x30]
   1400665c9:	test   rcx,rcx
   1400665cc:	je     0x1400665d8
   1400665ce:	call   QWORD PTR [rip+0x1dc4]        # 0x140068398
   1400665d4:	mov    QWORD PTR [rdi+0x30],r12
   1400665d8:	mov    rcx,QWORD PTR [rdi+0x908]
   1400665df:	test   rcx,rcx
   1400665e2:	je     0x1400665f1
   1400665e4:	call   QWORD PTR [rip+0x1af6]        # 0x1400680e0
   1400665ea:	mov    QWORD PTR [rdi+0x908],r12
   1400665f1:	mov    rcx,QWORD PTR [rdi+0x28]
   1400665f5:	test   rcx,rcx
   1400665f8:	je     0x140066604
   1400665fa:	call   QWORD PTR [rip+0x1d98]        # 0x140068398
   140066600:	mov    QWORD PTR [rdi+0x28],r12
   140066604:	mov    rcx,QWORD PTR [rdi+0x8]
   140066608:	test   rcx,rcx
   14006660b:	je     0x140066617
   14006660d:	call   QWORD PTR [rip+0x1d85]        # 0x140068398
   140066613:	mov    QWORD PTR [rdi+0x8],r12
   140066617:	mov    rax,QWORD PTR [rdi+0x8f0]
   14006661e:	mov    rbx,QWORD PTR [rax]
   140066621:	cmp    rbx,rax
   140066624:	je     0x14006668f
   140066626:	mov    rcx,QWORD PTR [rbx+0x20]
   14006662a:	test   rcx,rcx
   14006662d:	je     0x140066635
   14006662f:	call   QWORD PTR [rip+0x1d63]        # 0x140068398
   140066635:	cmp    BYTE PTR [rbx+0x29],r12b
   140066639:	jne    0x140066686
   14006663b:	mov    rax,QWORD PTR [rbx+0x10]
   14006663f:	cmp    BYTE PTR [rax+0x29],r12b
   140066643:	jne    0x14006665f
   140066645:	mov    rbx,rax
   140066648:	mov    rax,QWORD PTR [rax]
   14006664b:	cmp    BYTE PTR [rax+0x29],r12b
   14006664f:	jne    0x140066686
   140066651:	mov    rbx,rax
   140066654:	mov    rax,QWORD PTR [rax]
   140066657:	cmp    BYTE PTR [rax+0x29],r12b
   14006665b:	je     0x140066651
   14006665d:	jmp    0x140066686
   14006665f:	mov    rax,QWORD PTR [rbx+0x8]
   140066663:	cmp    BYTE PTR [rax+0x29],r12b
   140066667:	jne    0x140066683
   140066669:	nop    DWORD PTR [rax+0x0]
   140066670:	cmp    rbx,QWORD PTR [rax+0x10]
   140066674:	jne    0x140066683
   140066676:	mov    rbx,rax
   140066679:	mov    rax,QWORD PTR [rax+0x8]
   14006667d:	cmp    BYTE PTR [rax+0x29],r12b
   140066681:	je     0x140066670
   140066683:	mov    rbx,rax
   140066686:	cmp    rbx,QWORD PTR [rdi+0x8f0]
   14006668d:	jne    0x140066626
   14006668f:	mov    rax,QWORD PTR [rdi+0x8f0]
   140066696:	mov    rbx,QWORD PTR [rax+0x8]
   14006669a:	mov    rsi,rbx
   14006669d:	cmp    BYTE PTR [rbx+0x29],r12b
   1400666a1:	jne    0x1400666f3
   1400666a3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400666b0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400666b4:	lea    rcx,[rdi+0x8e8]
   1400666bb:	call   0x140032310
   1400666c0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400666c4:	mov    rsi,QWORD PTR [rsi]
   1400666c7:	sub    rdx,0x18
   1400666cb:	or     eax,0xffffffff
   1400666ce:	lock xadd DWORD PTR [rdx+0x10],eax
   1400666d3:	dec    eax
   1400666d5:	test   eax,eax
   1400666d7:	jg     0x1400666e2
   1400666d9:	mov    rcx,QWORD PTR [rdx]
   1400666dc:	mov    rax,QWORD PTR [rcx]
   1400666df:	call   QWORD PTR [rax+0x8]
   1400666e2:	mov    rcx,rbx
   1400666e5:	call   0x1400330c0
   1400666ea:	mov    rbx,rsi
   1400666ed:	cmp    BYTE PTR [rsi+0x29],r12b
   1400666f1:	je     0x1400666b0
   1400666f3:	mov    rax,QWORD PTR [rdi+0x8f0]
   1400666fa:	mov    QWORD PTR [rax+0x8],rax
   1400666fe:	mov    rax,QWORD PTR [rdi+0x8f0]
   140066705:	mov    QWORD PTR [rax],rax
   140066708:	mov    rax,QWORD PTR [rdi+0x8f0]
   14006670f:	mov    QWORD PTR [rax+0x10],rax
   140066713:	mov    QWORD PTR [rdi+0x8f8],r12
   14006671a:	mov    rcx,QWORD PTR [rdi+0x10]
   14006671e:	test   rcx,rcx
   140066721:	je     0x14006672d
   140066723:	call   QWORD PTR [rip+0x1c6f]        # 0x140068398
   140066729:	mov    QWORD PTR [rdi+0x10],r12
   14006672d:	mov    rax,QWORD PTR [rdi+0x8d0]
   140066734:	mov    rbx,QWORD PTR [rax]
   140066737:	cmp    rbx,rax
   14006673a:	je     0x1400667a7
   14006673c:	nop    DWORD PTR [rax+0x0]
   140066740:	mov    rcx,QWORD PTR [rbx+0x20]
   140066744:	test   rcx,rcx
   140066747:	je     0x14006674f
   140066749:	call   QWORD PTR [rip+0x1c49]        # 0x140068398
   14006674f:	cmp    BYTE PTR [rbx+0x29],r12b
   140066753:	jne    0x14006679e
   140066755:	mov    rax,QWORD PTR [rbx+0x10]
   140066759:	cmp    BYTE PTR [rax+0x29],r12b
   14006675d:	jne    0x14006677e
   14006675f:	mov    rbx,rax
   140066762:	mov    rax,QWORD PTR [rax]
   140066765:	cmp    BYTE PTR [rax+0x29],r12b
   140066769:	jne    0x14006679e
   14006676b:	nop    DWORD PTR [rax+rax*1+0x0]
   140066770:	mov    rbx,rax
   140066773:	mov    rax,QWORD PTR [rax]
   140066776:	cmp    BYTE PTR [rax+0x29],r12b
   14006677a:	je     0x140066770
   14006677c:	jmp    0x14006679e
   14006677e:	mov    rax,QWORD PTR [rbx+0x8]
   140066782:	cmp    BYTE PTR [rax+0x29],r12b
   140066786:	jne    0x14006679b
   140066788:	cmp    rbx,QWORD PTR [rax+0x10]
   14006678c:	jne    0x14006679b
   14006678e:	mov    rbx,rax
   140066791:	mov    rax,QWORD PTR [rax+0x8]
   140066795:	cmp    BYTE PTR [rax+0x29],r12b
   140066799:	je     0x140066788
   14006679b:	mov    rbx,rax
   14006679e:	cmp    rbx,QWORD PTR [rdi+0x8d0]
   1400667a5:	jne    0x140066740
   1400667a7:	mov    rax,QWORD PTR [rdi+0x8d0]
   1400667ae:	mov    rbx,QWORD PTR [rax+0x8]
   1400667b2:	mov    rsi,rbx
   1400667b5:	cmp    BYTE PTR [rbx+0x29],r12b
   1400667b9:	jne    0x140066803
   1400667bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400667c0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400667c4:	lea    rcx,[rdi+0x8c8]
   1400667cb:	call   0x140032310
   1400667d0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400667d4:	mov    rsi,QWORD PTR [rsi]
   1400667d7:	sub    rdx,0x18
   1400667db:	or     eax,0xffffffff
   1400667de:	lock xadd DWORD PTR [rdx+0x10],eax
   1400667e3:	dec    eax
   1400667e5:	test   eax,eax
   1400667e7:	jg     0x1400667f2
   1400667e9:	mov    rcx,QWORD PTR [rdx]
   1400667ec:	mov    rax,QWORD PTR [rcx]
   1400667ef:	call   QWORD PTR [rax+0x8]
   1400667f2:	mov    rcx,rbx
   1400667f5:	call   0x1400330c0
   1400667fa:	mov    rbx,rsi
   1400667fd:	cmp    BYTE PTR [rsi+0x29],r12b
   140066801:	je     0x1400667c0
   140066803:	mov    rax,QWORD PTR [rdi+0x8d0]
   14006680a:	mov    QWORD PTR [rax+0x8],rax
   14006680e:	mov    rax,QWORD PTR [rdi+0x8d0]
   140066815:	mov    QWORD PTR [rax],rax
   140066818:	mov    rax,QWORD PTR [rdi+0x8d0]
   14006681f:	mov    QWORD PTR [rax+0x10],rax
   140066823:	mov    QWORD PTR [rdi+0x8d8],r12
   14006682a:	mov    rcx,QWORD PTR [rdi+0x38]
   14006682e:	test   rcx,rcx
   140066831:	je     0x14006683d
   140066833:	call   QWORD PTR [rip+0x1b5f]        # 0x140068398
   140066839:	mov    QWORD PTR [rdi+0x38],r12
   14006683d:	mov    rcx,QWORD PTR [rdi+0x40]
   140066841:	test   rcx,rcx
   140066844:	je     0x140066850
   140066846:	call   QWORD PTR [rip+0x1b4c]        # 0x140068398
   14006684c:	mov    QWORD PTR [rdi+0x40],r12
   140066850:	mov    rbx,QWORD PTR [rsp+0x30]
   140066855:	mov    rbp,QWORD PTR [rsp+0x38]
   14006685a:	mov    rsi,QWORD PTR [rsp+0x40]
   14006685f:	mov    DWORD PTR [rdi+0x8b0],r12d
   140066866:	mov    rdi,QWORD PTR [rsp+0x48]
   14006686b:	add    rsp,0x20
   14006686f:	pop    r12
   140066871:	ret    
   140066872:	int3   
   140066873:	int3   
   140066874:	int3   
   140066875:	int3   
   140066876:	int3   
   140066877:	int3   
   140066878:	int3   
   140066879:	int3   
   14006687a:	int3   
   14006687b:	int3   
   14006687c:	int3   
   14006687d:	int3   
   14006687e:	int3   
   14006687f:	int3   
   140066880:	mov    QWORD PTR [rsp+0x20],rbx
   140066885:	push   rbp
   140066886:	push   rsi
   140066887:	push   rdi
   140066888:	push   r12
   14006688a:	push   r13
   14006688c:	push   r14
   14006688e:	push   r15
   140066890:	sub    rsp,0x160
   140066897:	mov    rax,QWORD PTR [rip+0x1e80a]        # 0x1400850a8
   14006689e:	xor    rax,rsp
   1400668a1:	mov    QWORD PTR [rsp+0x150],rax
   1400668a9:	mov    esi,DWORD PTR [rsp+0x1c8]
   1400668b0:	mov    edi,r8d
   1400668b3:	mov    DWORD PTR [rsp+0x34],r8d
   1400668b8:	mov    r8,rdx
   1400668bb:	mov    r15,rdx
   1400668be:	mov    rbx,rcx
   1400668c1:	mov    edx,0x104
   1400668c6:	add    rcx,0x4c
   1400668ca:	mov    DWORD PTR [rsp+0x38],r9d
   1400668cf:	call   0x1400336a8
   1400668d4:	mov    eax,DWORD PTR [rsp+0x1c0]
   1400668db:	mov    r14d,DWORD PTR [rsp+0x1d0]
   1400668e3:	mov    edx,DWORD PTR [rsp+0x1d8]
   1400668ea:	mov    DWORD PTR [rbx+0x8b8],edi
   1400668f0:	mov    DWORD PTR [rbx+0x8c0],eax
   1400668f6:	xor    edi,edi
   1400668f8:	lea    rax,[rip+0x21781]        # 0x140088080
   1400668ff:	mov    DWORD PTR [rbx+0x8bc],esi
   140066905:	mov    DWORD PTR [rbx+0x8b4],r14d
   14006690c:	xor    ecx,ecx
   14006690e:	xchg   ax,ax
   140066910:	cmp    ecx,0x7
   140066913:	jae    0x14006692a
   140066915:	cmp    edx,DWORD PTR [rax-0x10]
   140066918:	jne    0x14006691d
   14006691a:	mov    rdi,QWORD PTR [rax]
   14006691d:	inc    ecx
   14006691f:	add    rax,0x28
   140066923:	test   rdi,rdi
   140066926:	je     0x140066910
   140066928:	jmp    0x14006692f
   14006692a:	test   rdi,rdi
   14006692d:	je     0x140066969
   14006692f:	lea    rdx,[rip+0x5782]        # 0x14006c0b8
   140066936:	mov    rcx,rdi
   140066939:	call   0x1400338c4
   14006693e:	test   eax,eax
   140066940:	je     0x140066969
   140066942:	lea    rdx,[rip+0x5ebf]        # 0x14006c808
   140066949:	mov    rcx,rdi
   14006694c:	call   0x1400338c4
   140066951:	test   eax,eax
   140066953:	je     0x140066969
   140066955:	lea    rcx,[rbx+0x768]
   14006695c:	mov    r8,rdi
   14006695f:	mov    edx,0x104
   140066964:	call   0x1400336a8
   140066969:	cmp    BYTE PTR [rbx+0x150],0x0
   140066970:	jne    0x14006698b
   140066972:	lea    r8,[rip+0x10a97]        # 0x140077410
   140066979:	lea    rcx,[rbx+0x150]
   140066980:	mov    r9d,r14d
   140066983:	mov    rdx,r15
   140066986:	call   0x140066250
   14006698b:	lea    r12,[rbx+0x254]
   140066992:	cmp    BYTE PTR [r12],0x0
   140066997:	jne    0x1400669ae
   140066999:	lea    r8,[rip+0x10a78]        # 0x140077418
   1400669a0:	mov    r9d,r14d
   1400669a3:	mov    rdx,r15
   1400669a6:	mov    rcx,r12
   1400669a9:	call   0x140066250
   1400669ae:	cmp    BYTE PTR [rbx+0x358],0x0
   1400669b5:	jne    0x140066a27
   1400669b7:	lea    r8,[rip+0x10a62]        # 0x140077420
   1400669be:	lea    rcx,[rbx+0x358]
   1400669c5:	mov    r9d,r14d
   1400669c8:	mov    rdx,r15
   1400669cb:	call   0x140066250
   1400669d0:	test   rdi,rdi
   1400669d3:	je     0x140066a27
   1400669d5:	lea    rdx,[rip+0x56dc]        # 0x14006c0b8
   1400669dc:	mov    rcx,rdi
   1400669df:	call   0x1400338c4
   1400669e4:	test   eax,eax
   1400669e6:	je     0x140066a27
   1400669e8:	lea    rdx,[rip+0x5e19]        # 0x14006c808
   1400669ef:	mov    rcx,rdi
   1400669f2:	call   0x1400338c4
   1400669f7:	test   eax,eax
   1400669f9:	je     0x140066a27
   1400669fb:	lea    r8,[rip+0x70e2]        # 0x14006dae4
   140066a02:	lea    rcx,[rbx+0x358]
   140066a09:	mov    edx,0x104
   140066a0e:	call   0x1400330c8
   140066a13:	lea    rcx,[rbx+0x358]
   140066a1a:	mov    r8,rdi
   140066a1d:	mov    edx,0x104
   140066a22:	call   0x1400330c8
   140066a27:	cmp    BYTE PTR [rbx+0x45c],0x0
   140066a2e:	jne    0x140066aa0
   140066a30:	lea    r8,[rip+0x109f1]        # 0x140077428
   140066a37:	lea    rcx,[rbx+0x45c]
   140066a3e:	mov    r9d,r14d
   140066a41:	mov    rdx,r15
   140066a44:	call   0x140066250
   140066a49:	test   rdi,rdi
   140066a4c:	je     0x140066aa0
   140066a4e:	lea    rdx,[rip+0x5663]        # 0x14006c0b8
   140066a55:	mov    rcx,rdi
   140066a58:	call   0x1400338c4
   140066a5d:	test   eax,eax
   140066a5f:	je     0x140066aa0
   140066a61:	lea    rdx,[rip+0x5da0]        # 0x14006c808
   140066a68:	mov    rcx,rdi
   140066a6b:	call   0x1400338c4
   140066a70:	test   eax,eax
   140066a72:	je     0x140066aa0
   140066a74:	lea    r8,[rip+0x7069]        # 0x14006dae4
   140066a7b:	lea    rcx,[rbx+0x45c]
   140066a82:	mov    edx,0x104
   140066a87:	call   0x1400330c8
   140066a8c:	lea    rcx,[rbx+0x45c]
   140066a93:	mov    r8,rdi
   140066a96:	mov    edx,0x104
   140066a9b:	call   0x1400330c8
   140066aa0:	cmp    BYTE PTR [rbx+0x560],0x0
   140066aa7:	jne    0x140066ac2
   140066aa9:	lea    r8,[rip+0x10980]        # 0x140077430
   140066ab0:	lea    rcx,[rbx+0x560]
   140066ab7:	mov    r9d,r14d
   140066aba:	mov    rdx,r15
   140066abd:	call   0x140066250
   140066ac2:	cmp    BYTE PTR [rbx+0x664],0x0
   140066ac9:	jne    0x140066ae4
   140066acb:	lea    r8,[rip+0x1096e]        # 0x140077440
   140066ad2:	lea    rcx,[rbx+0x664]
   140066ad9:	mov    r9d,r14d
   140066adc:	mov    rdx,r15
   140066adf:	call   0x140066250
   140066ae4:	cmp    QWORD PTR [rbx+0x38],0x0
   140066ae9:	jne    0x140066b05
   140066aeb:	lea    rcx,[rbx+0x898]
   140066af2:	lea    r8,[rbx+0x150]
   140066af9:	xor    edx,edx
   140066afb:	call   QWORD PTR [rip+0x191f]        # 0x140068420
   140066b01:	mov    QWORD PTR [rbx+0x38],rax
   140066b05:	mov    eax,DWORD PTR [rsp+0x34]
   140066b09:	mov    r15d,DWORD PTR [rsp+0x38]
   140066b0e:	test   esi,esi
   140066b10:	mov    DWORD PTR [rbx+0x48],r15d
   140066b14:	cmove  esi,eax
   140066b17:	cmp    QWORD PTR [rbx+0x28],0x0
   140066b1c:	mov    DWORD PTR [rsp+0x30],esi
   140066b20:	jne    0x140066b49
   140066b22:	xor    r9d,r9d
   140066b25:	inc    eax
   140066b27:	lea    rdx,[rbx+0x898]
   140066b2e:	lea    r8d,[r9+0x4]
   140066b32:	or     rcx,0xffffffffffffffff
   140066b36:	mov    QWORD PTR [rsp+0x28],r12
   140066b3b:	mov    DWORD PTR [rsp+0x20],eax
   140066b3f:	call   QWORD PTR [rip+0x15a3]        # 0x1400680e8
   140066b45:	mov    QWORD PTR [rbx+0x28],rax
   140066b49:	mov    r10,QWORD PTR [rbx+0x28]
   140066b4d:	test   r10,r10
   140066b50:	je     0x140066b7f
   140066b52:	cmp    QWORD PTR [rbx+0x908],0x0
   140066b5a:	jne    0x140066b8d
   140066b5c:	lea    ecx,[rsi+0x1]
   140066b5f:	xor    r9d,r9d
   140066b62:	xor    r8d,r8d
   140066b65:	mov    QWORD PTR [rsp+0x20],rcx
   140066b6a:	mov    rcx,r10
   140066b6d:	mov    edx,0xf001f
   140066b72:	call   QWORD PTR [rip+0x1560]        # 0x1400680d8
   140066b78:	mov    QWORD PTR [rbx+0x908],rax
   140066b7f:	cmp    QWORD PTR [rbx+0x908],0x0
   140066b87:	je     0x140066d1e
   140066b8d:	cmp    BYTE PTR [rbx+0x560],0x0
   140066b94:	mov    esi,DWORD PTR [rbx+0x48]
   140066b97:	je     0x140066c22
   140066b9d:	lea    r8,[rbx+0x560]
   140066ba4:	lea    rcx,[rsp+0x40]
   140066ba9:	mov    edx,0x104
   140066bae:	call   0x1400336a8
   140066bb3:	mov    edx,0x104
   140066bb8:	lea    rcx,[rsp+0x40]
   140066bbd:	test   esi,esi
   140066bbf:	je     0x140066c16
   140066bc1:	lea    r8,[rip+0x10890]        # 0x140077458
   140066bc8:	call   0x1400330c8
   140066bcd:	test   rdi,rdi
   140066bd0:	je     0x140066c22
   140066bd2:	lea    rdx,[rip+0x54df]        # 0x14006c0b8
   140066bd9:	mov    rcx,rdi
   140066bdc:	call   0x1400338c4
   140066be1:	test   eax,eax
   140066be3:	je     0x140066c22
   140066be5:	mov    rcx,rdi
   140066be8:	call   0x14000c8b0
   140066bed:	test   al,al
   140066bef:	jne    0x140066c22
   140066bf1:	lea    r8,[rip+0x6eec]        # 0x14006dae4
   140066bf8:	lea    rcx,[rsp+0x40]
   140066bfd:	mov    edx,0x104
   140066c02:	call   0x1400330c8
   140066c07:	mov    r8,rdi
   140066c0a:	mov    edx,0x104
   140066c0f:	lea    rcx,[rsp+0x40]
   140066c14:	jmp    0x140066c1d
   140066c16:	lea    r8,[rip+0x10843]        # 0x140077460
   140066c1d:	call   0x1400330c8
   140066c22:	cmp    QWORD PTR [rbx+0x10],0x0
   140066c27:	jne    0x140066c48
   140066c29:	xor    r8d,r8d
   140066c2c:	lea    rcx,[rbx+0x898]
   140066c33:	lea    r9,[rbx+0x45c]
   140066c3a:	lea    edx,[r8+0x1]
   140066c3e:	call   QWORD PTR [rip+0x173c]        # 0x140068380
   140066c44:	mov    QWORD PTR [rbx+0x10],rax
   140066c48:	cmp    QWORD PTR [rbx+0x8],0x0
   140066c4d:	jne    0x140066c6e
   140066c4f:	xor    r8d,r8d
   140066c52:	lea    rcx,[rbx+0x898]
   140066c59:	lea    r9,[rbx+0x358]
   140066c60:	lea    edx,[r8+0x1]
   140066c64:	call   QWORD PTR [rip+0x1716]        # 0x140068380
   140066c6a:	mov    QWORD PTR [rbx+0x8],rax
   140066c6e:	cmp    QWORD PTR [rbx+0x30],0x0
   140066c73:	jne    0x140066c92
   140066c75:	xor    r8d,r8d
   140066c78:	lea    rcx,[rbx+0x898]
   140066c7f:	lea    r9,[rsp+0x40]
   140066c84:	lea    edx,[r8+0x1]
   140066c88:	call   QWORD PTR [rip+0x16f2]        # 0x140068380
   140066c8e:	mov    QWORD PTR [rbx+0x30],rax
   140066c92:	cmp    QWORD PTR [rbx+0x40],0x0
   140066c97:	jne    0x140066cc3
   140066c99:	cmp    DWORD PTR [rsp+0x1c0],0x0
   140066ca1:	je     0x140066cc3
   140066ca3:	mov    edx,0x1
   140066ca8:	lea    rcx,[rbx+0x898]
   140066caf:	lea    r9,[rbx+0x664]
   140066cb6:	mov    r8d,edx
   140066cb9:	call   QWORD PTR [rip+0x16c1]        # 0x140068380
   140066cbf:	mov    QWORD PTR [rbx+0x40],rax
   140066cc3:	test   r15d,r15d
   140066cc6:	je     0x140066d1a
   140066cc8:	cmp    QWORD PTR [rbx+0x20],0x0
   140066ccd:	jne    0x140066cea
   140066ccf:	xor    r9d,r9d
   140066cd2:	xor    r8d,r8d
   140066cd5:	xor    ecx,ecx
   140066cd7:	lea    edx,[r9+0x1]
   140066cdb:	call   QWORD PTR [rip+0x169f]        # 0x140068380
   140066ce1:	mov    QWORD PTR [rbx+0x20],rax
   140066ce5:	test   rax,rax
   140066ce8:	je     0x140066d1a
   140066cea:	cmp    QWORD PTR [rbx+0x18],0x0
   140066cef:	jne    0x140066d1a
   140066cf1:	xor    ecx,ecx
   140066cf3:	lea    rax,[rsp+0x34]
   140066cf8:	lea    r8,[rip+0xfffffffffffff621]        # 0x140066320
   140066cff:	mov    QWORD PTR [rsp+0x28],rax
   140066d04:	mov    r9,rbx
   140066d07:	xor    edx,edx
   140066d09:	mov    DWORD PTR [rsp+0x20],ecx
   140066d0d:	mov    DWORD PTR [rsp+0x34],ecx
   140066d11:	call   0x140036264
   140066d16:	mov    QWORD PTR [rbx+0x18],rax
   140066d1a:	mov    esi,DWORD PTR [rsp+0x30]
   140066d1e:	cmp    QWORD PTR [rbx+0x28],0x0
   140066d23:	je     0x140066d4a
   140066d25:	cmp    QWORD PTR [rbx+0x908],0x0
   140066d2d:	je     0x140066d4a
   140066d2f:	cmp    QWORD PTR [rbx+0x10],0x0
   140066d34:	je     0x140066d4a
   140066d36:	cmp    QWORD PTR [rbx+0x8],0x0
   140066d3b:	je     0x140066d4a
   140066d3d:	mov    DWORD PTR [rbx+0x8b0],esi
   140066d43:	mov    eax,0x1
   140066d48:	jmp    0x140066d54
   140066d4a:	mov    rcx,rbx
   140066d4d:	call   0x140066560
   140066d52:	xor    eax,eax
   140066d54:	mov    rcx,QWORD PTR [rsp+0x150]
   140066d5c:	xor    rcx,rsp
   140066d5f:	call   0x140032f00
   140066d64:	mov    rbx,QWORD PTR [rsp+0x1b8]
   140066d6c:	add    rsp,0x160
   140066d73:	pop    r15
   140066d75:	pop    r14
   140066d77:	pop    r13
   140066d79:	pop    r12
   140066d7b:	pop    rdi
   140066d7c:	pop    rsi
   140066d7d:	pop    rbp
   140066d7e:	ret    
   140066d7f:	int3   
   140066d80:	mov    rax,rsp
   140066d83:	mov    DWORD PTR [rax+0x10],edx
   140066d86:	push   rdi
   140066d87:	push   r12
   140066d89:	push   r13
   140066d8b:	push   r14
   140066d8d:	push   r15
   140066d8f:	sub    rsp,0x70
   140066d93:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140066d9c:	mov    QWORD PTR [rax+0x8],rbx
   140066da0:	mov    QWORD PTR [rax+0x18],rbp
   140066da4:	mov    QWORD PTR [rax+0x20],rsi
   140066da8:	mov    esi,r9d
   140066dab:	mov    rdi,r8
   140066dae:	mov    r14d,edx
   140066db1:	mov    r13,rcx
   140066db4:	call   0x140066f40
   140066db9:	test   eax,eax
   140066dbb:	je     0x140066f16
   140066dc1:	xor    ebx,ebx
   140066dc3:	mov    r15d,ebx
   140066dc6:	test   rdi,rdi
   140066dc9:	je     0x140066de9
   140066dcb:	test   esi,esi
   140066dcd:	je     0x140066de9
   140066dcf:	mov    rcx,QWORD PTR [r13+0x908]
   140066dd6:	inc    rcx
   140066dd9:	cmp    rdi,rcx
   140066ddc:	je     0x140066de9
   140066dde:	mov    r8,rsi
   140066de1:	mov    rdx,rdi
   140066de4:	call   0x140033260
   140066de9:	mov    rcx,r13
   140066dec:	call   0x140067240
   140066df1:	mov    QWORD PTR [rsp+0x28],rbx
   140066df6:	mov    QWORD PTR [rsp+0x30],rbx
   140066dfb:	mov    QWORD PTR [rsp+0x38],rbx
   140066e00:	lea    rdx,[rsp+0x28]
   140066e05:	mov    rcx,r13
   140066e08:	call   0x140067470
   140066e0d:	mov    r12,QWORD PTR [rsp+0x28]
   140066e12:	test   eax,eax
   140066e14:	je     0x140066e69
   140066e16:	mov    esi,ebx
   140066e18:	mov    r14,QWORD PTR [rsp+0x30]
   140066e1d:	mov    rbp,r14
   140066e20:	sub    rbp,r12
   140066e23:	sar    rbp,0x3
   140066e27:	test   ebp,ebp
   140066e29:	je     0x140066e49
   140066e2b:	mov    rdi,r12
   140066e2e:	xchg   ax,ax
   140066e30:	cmp    QWORD PTR [rdi],0x0
   140066e34:	je     0x140066e3f
   140066e36:	mov    rcx,QWORD PTR [rdi]
   140066e39:	call   QWORD PTR [rip+0x15b9]        # 0x1400683f8
   140066e3f:	inc    esi
   140066e41:	add    rdi,0x8
   140066e45:	cmp    esi,ebp
   140066e47:	jb     0x140066e30
   140066e49:	cmp    r12,r14
   140066e4c:	je     0x140066e61
   140066e4e:	xor    r8d,r8d
   140066e51:	mov    rdx,r14
   140066e54:	mov    rcx,r12
   140066e57:	call   0x140033260
   140066e5c:	mov    QWORD PTR [rsp+0x30],r12
   140066e61:	mov    r14d,DWORD PTR [rsp+0xa8]
   140066e69:	mov    QWORD PTR [rsp+0x48],rbx
   140066e6e:	mov    QWORD PTR [rsp+0x50],rbx
   140066e73:	mov    QWORD PTR [rsp+0x58],rbx
   140066e78:	lea    rdx,[rsp+0x48]
   140066e7d:	mov    rcx,r13
   140066e80:	call   0x1400675a0
   140066e85:	mov    rdi,QWORD PTR [rsp+0x48]
   140066e8a:	test   eax,eax
   140066e8c:	je     0x140066ef8
   140066e8e:	mov    rbp,QWORD PTR [rsp+0x50]
   140066e93:	mov    rsi,rbp
   140066e96:	sub    rsi,rdi
   140066e99:	sar    rsi,0x3
   140066e9d:	mov    r9d,esi
   140066ea0:	imul   r9d,r14d
   140066ea4:	mov    r8d,0x1
   140066eaa:	mov    rdx,rdi
   140066ead:	mov    ecx,esi
   140066eaf:	call   QWORD PTR [rip+0x12d3]        # 0x140068188
   140066eb5:	cmp    eax,0x102
   140066eba:	je     0x140066ec4
   140066ebc:	mov    r15d,0x1
   140066ec2:	jmp    0x140066ed1
   140066ec4:	lea    rcx,[rip+0x10585]        # 0x140077450
   140066ecb:	call   QWORD PTR [rip+0x14cf]        # 0x1400683a0
   140066ed1:	test   esi,esi
   140066ed3:	je     0x140066ee4
   140066ed5:	mov    rcx,QWORD PTR [rdi]
   140066ed8:	call   QWORD PTR [rip+0x12a2]        # 0x140068180
   140066ede:	inc    ebx
   140066ee0:	cmp    ebx,esi
   140066ee2:	jb     0x140066ed5
   140066ee4:	cmp    rdi,rbp
   140066ee7:	je     0x140066ef8
   140066ee9:	xor    r8d,r8d
   140066eec:	mov    rdx,rbp
   140066eef:	mov    rcx,rdi
   140066ef2:	call   0x140033260
   140066ef7:	nop
   140066ef8:	test   rdi,rdi
   140066efb:	je     0x140066f06
   140066efd:	mov    rcx,rdi
   140066f00:	call   0x1400330c0
   140066f05:	nop
   140066f06:	test   r12,r12
   140066f09:	je     0x140066f13
   140066f0b:	mov    rcx,r12
   140066f0e:	call   0x1400330c0
   140066f13:	mov    eax,r15d
   140066f16:	lea    r11,[rsp+0x70]
   140066f1b:	mov    rbx,QWORD PTR [r11+0x30]
   140066f1f:	mov    rbp,QWORD PTR [r11+0x40]
   140066f23:	mov    rsi,QWORD PTR [r11+0x48]
   140066f27:	mov    rsp,r11
   140066f2a:	pop    r15
   140066f2c:	pop    r14
   140066f2e:	pop    r13
   140066f30:	pop    r12
   140066f32:	pop    rdi
   140066f33:	ret    
   140066f34:	int3   
   140066f35:	int3   
   140066f36:	int3   
   140066f37:	int3   
   140066f38:	int3   
   140066f39:	int3   
   140066f3a:	int3   
   140066f3b:	int3   
   140066f3c:	int3   
   140066f3d:	int3   
   140066f3e:	int3   
   140066f3f:	int3   
   140066f40:	mov    QWORD PTR [rsp+0x10],rbx
   140066f45:	mov    QWORD PTR [rsp+0x18],rbp
   140066f4a:	push   rsi
   140066f4b:	push   rdi
   140066f4c:	push   r12
   140066f4e:	sub    rsp,0x160
   140066f55:	mov    rax,QWORD PTR [rip+0x1e14c]        # 0x1400850a8
   140066f5c:	xor    rax,rsp
   140066f5f:	mov    QWORD PTR [rsp+0x150],rax
   140066f67:	xor    ebx,ebx
   140066f69:	mov    rdi,rcx
   140066f6c:	cmp    DWORD PTR [rcx+0x48],ebx
   140066f6f:	jne    0x140067128
   140066f75:	lea    rsi,[rcx+0x768]
   140066f7c:	cmp    BYTE PTR [rsi],bl
   140066f7e:	je     0x14006701d
   140066f84:	lea    rcx,[rsp+0x41]
   140066f89:	xor    edx,edx
   140066f8b:	mov    r8d,0x103
   140066f91:	mov    BYTE PTR [rsp+0x40],bl
   140066f95:	call   0x140036dc0
   140066f9a:	lea    r8,[rdi+0x560]
   140066fa1:	cmp    BYTE PTR [r8],bl
   140066fa4:	je     0x140067208
   140066faa:	lea    rcx,[rsp+0x40]
   140066faf:	mov    edx,0x104
   140066fb4:	call   0x1400336a8
   140066fb9:	lea    r8,[rip+0x10498]        # 0x140077458
   140066fc0:	lea    rcx,[rsp+0x40]
   140066fc5:	mov    edx,0x104
   140066fca:	call   0x1400330c8
   140066fcf:	test   rsi,rsi
   140066fd2:	je     0x140067173
   140066fd8:	lea    rdx,[rip+0x50d9]        # 0x14006c0b8
   140066fdf:	mov    rcx,rsi
   140066fe2:	call   0x1400338c4
   140066fe7:	test   eax,eax
   140066fe9:	je     0x140067173
   140066fef:	mov    rcx,rsi
   140066ff2:	call   0x14000c8b0
   140066ff7:	test   al,al
   140066ff9:	jne    0x140067173
   140066fff:	lea    r8,[rip+0x6ade]        # 0x14006dae4
   140067006:	lea    rcx,[rsp+0x40]
   14006700b:	mov    edx,0x104
   140067010:	call   0x1400330c8
   140067015:	mov    r8,rsi
   140067018:	jmp    0x140067164
   14006701d:	xor    ebp,ebp
   14006701f:	lea    r12,[rip+0x2105a]        # 0x140088080
   140067026:	cmp    ebp,0x7
   140067029:	jae    0x1400671b5
   14006702f:	lea    rcx,[rsp+0x41]
   140067034:	xor    edx,edx
   140067036:	mov    r8d,0x103
   14006703c:	mov    BYTE PTR [rsp+0x40],0x0
   140067041:	call   0x140036dc0
   140067046:	xor    esi,esi
   140067048:	test   ebp,ebp
   14006704a:	js     0x140067050
   14006704c:	mov    rsi,QWORD PTR [r12]
   140067050:	lea    r8,[rdi+0x560]
   140067057:	cmp    BYTE PTR [r8],0x0
   14006705b:	je     0x140067115
   140067061:	lea    rcx,[rsp+0x40]
   140067066:	mov    edx,0x104
   14006706b:	call   0x1400336a8
   140067070:	lea    r8,[rip+0x103e1]        # 0x140077458
   140067077:	lea    rcx,[rsp+0x40]
   14006707c:	mov    edx,0x104
   140067081:	call   0x1400330c8
   140067086:	test   rsi,rsi
   140067089:	je     0x1400670d2
   14006708b:	lea    rdx,[rip+0x5026]        # 0x14006c0b8
   140067092:	mov    rcx,rsi
   140067095:	call   0x1400338c4
   14006709a:	test   eax,eax
   14006709c:	je     0x1400670d2
   14006709e:	mov    rcx,rsi
   1400670a1:	call   0x14000c8b0
   1400670a6:	test   al,al
   1400670a8:	jne    0x1400670d2
   1400670aa:	lea    r8,[rip+0x6a33]        # 0x14006dae4
   1400670b1:	lea    rcx,[rsp+0x40]
   1400670b6:	mov    edx,0x104
   1400670bb:	call   0x1400330c8
   1400670c0:	lea    rcx,[rsp+0x40]
   1400670c5:	mov    r8,rsi
   1400670c8:	mov    edx,0x104
   1400670cd:	call   0x1400330c8
   1400670d2:	lea    rax,[rsp+0x40]
   1400670d7:	xor    ebx,ebx
   1400670d9:	test   rax,rax
   1400670dc:	je     0x140067115
   1400670de:	lea    rcx,[rdi+0x898]
   1400670e5:	lea    r9,[rsp+0x40]
   1400670ea:	lea    edx,[rbx+0x1]
   1400670ed:	xor    r8d,r8d
   1400670f0:	call   QWORD PTR [rip+0x128a]        # 0x140068380
   1400670f6:	mov    rsi,rax
   1400670f9:	test   rax,rax
   1400670fc:	je     0x140067115
   1400670fe:	call   QWORD PTR [rip+0x12bc]        # 0x1400683c0
   140067104:	mov    rcx,rsi
   140067107:	cmp    eax,0xb7
   14006710c:	sete   bl
   14006710f:	call   QWORD PTR [rip+0x1283]        # 0x140068398
   140067115:	inc    ebp
   140067117:	add    r12,0x28
   14006711b:	test   ebx,ebx
   14006711d:	je     0x140067026
   140067123:	jmp    0x1400671b9
   140067128:	lea    rcx,[rsp+0x41]
   14006712d:	xor    edx,edx
   14006712f:	mov    r8d,0x103
   140067135:	mov    BYTE PTR [rsp+0x40],bl
   140067139:	call   0x140036dc0
   14006713e:	lea    r8,[rdi+0x560]
   140067145:	cmp    BYTE PTR [r8],bl
   140067148:	je     0x140067208
   14006714e:	lea    rcx,[rsp+0x40]
   140067153:	mov    edx,0x104
   140067158:	call   0x1400336a8
   14006715d:	lea    r8,[rip+0x102fc]        # 0x140077460
   140067164:	lea    rcx,[rsp+0x40]
   140067169:	mov    edx,0x104
   14006716e:	call   0x1400330c8
   140067173:	lea    rax,[rsp+0x40]
   140067178:	test   rax,rax
   14006717b:	je     0x1400671b5
   14006717d:	xor    r8d,r8d
   140067180:	lea    r9,[rsp+0x40]
   140067185:	lea    rcx,[rdi+0x898]
   14006718c:	lea    edx,[r8+0x1]
   140067190:	call   QWORD PTR [rip+0x11ea]        # 0x140068380
   140067196:	mov    rsi,rax
   140067199:	test   rax,rax
   14006719c:	je     0x1400671b5
   14006719e:	call   QWORD PTR [rip+0x121c]        # 0x1400683c0
   1400671a4:	mov    rcx,rsi
   1400671a7:	cmp    eax,0xb7
   1400671ac:	sete   bl
   1400671af:	call   QWORD PTR [rip+0x11e3]        # 0x140068398
   1400671b5:	test   ebx,ebx
   1400671b7:	je     0x140067208
   1400671b9:	cmp    DWORD PTR [rdi+0x48],0x0
   1400671bd:	jne    0x140067208
   1400671bf:	cmp    BYTE PTR [rdi+0x4c],0x0
   1400671c3:	lea    rdx,[rdi+0x4c]
   1400671c7:	je     0x140067208
   1400671c9:	cmp    QWORD PTR [rdi+0x28],0x0
   1400671ce:	jne    0x140067208
   1400671d0:	mov    eax,DWORD PTR [rdi+0x8b4]
   1400671d6:	mov    r8d,DWORD PTR [rdi+0x8b8]
   1400671dd:	mov    DWORD PTR [rsp+0x38],0xffffffff
   1400671e5:	mov    DWORD PTR [rsp+0x30],eax
   1400671e9:	mov    eax,DWORD PTR [rdi+0x8bc]
   1400671ef:	xor    r9d,r9d
   1400671f2:	mov    DWORD PTR [rsp+0x28],eax
   1400671f6:	mov    eax,DWORD PTR [rdi+0x8c0]
   1400671fc:	mov    rcx,rdi
   1400671ff:	mov    DWORD PTR [rsp+0x20],eax
   140067203:	call   0x140066880
   140067208:	mov    eax,ebx
   14006720a:	mov    rcx,QWORD PTR [rsp+0x150]
   140067212:	xor    rcx,rsp
   140067215:	call   0x140032f00
   14006721a:	lea    r11,[rsp+0x160]
   140067222:	mov    rbx,QWORD PTR [r11+0x28]
   140067226:	mov    rbp,QWORD PTR [r11+0x30]
   14006722a:	mov    rsp,r11
   14006722d:	pop    r12
   14006722f:	pop    rdi
   140067230:	pop    rsi
   140067231:	ret    
   140067232:	int3   
   140067233:	int3   
   140067234:	int3   
   140067235:	int3   
   140067236:	int3   
   140067237:	int3   
   140067238:	int3   
   140067239:	int3   
   14006723a:	int3   
   14006723b:	int3   
   14006723c:	int3   
   14006723d:	int3   
   14006723e:	int3   
   14006723f:	int3   
   140067240:	rex push rbx
   140067242:	push   rbp
   140067243:	sub    rsp,0x148
   14006724a:	mov    rax,QWORD PTR [rip+0x1de57]        # 0x1400850a8
   140067251:	xor    rax,rsp
   140067254:	mov    QWORD PTR [rsp+0x130],rax
   14006725c:	cmp    DWORD PTR [rcx+0x48],0x0
   140067260:	mov    rbp,rcx
   140067263:	jne    0x140067335
   140067269:	lea    rbx,[rcx+0x768]
   140067270:	cmp    BYTE PTR [rbx],0x0
   140067273:	je     0x140067335
   140067279:	lea    rcx,[rsp+0x21]
   14006727e:	xor    edx,edx
   140067280:	mov    r8d,0x103
   140067286:	mov    BYTE PTR [rsp+0x20],0x0
   14006728b:	call   0x140036dc0
   140067290:	lea    r8,[rbp+0x560]
   140067297:	cmp    BYTE PTR [r8],0x0
   14006729b:	je     0x140067448
   1400672a1:	lea    rcx,[rsp+0x20]
   1400672a6:	mov    edx,0x104
   1400672ab:	call   0x1400336a8
   1400672b0:	lea    r8,[rip+0x101a1]        # 0x140077458
   1400672b7:	lea    rcx,[rsp+0x20]
   1400672bc:	mov    edx,0x104
   1400672c1:	call   0x1400330c8
   1400672c6:	test   rbx,rbx
   1400672c9:	je     0x140067312
   1400672cb:	lea    rdx,[rip+0x4de6]        # 0x14006c0b8
   1400672d2:	mov    rcx,rbx
   1400672d5:	call   0x1400338c4
   1400672da:	test   eax,eax
   1400672dc:	je     0x140067312
   1400672de:	mov    rcx,rbx
   1400672e1:	call   0x14000c8b0
   1400672e6:	test   al,al
   1400672e8:	jne    0x140067312
   1400672ea:	lea    r8,[rip+0x67f3]        # 0x14006dae4
   1400672f1:	lea    rcx,[rsp+0x20]
   1400672f6:	mov    edx,0x104
   1400672fb:	call   0x1400330c8
   140067300:	lea    rcx,[rsp+0x20]
   140067305:	mov    r8,rbx
   140067308:	mov    edx,0x104
   14006730d:	call   0x1400330c8
   140067312:	lea    rax,[rsp+0x20]
   140067317:	test   rax,rax
   14006731a:	je     0x140067448
   140067320:	lea    rdx,[rsp+0x20]
   140067325:	xor    r8d,r8d
   140067328:	mov    rcx,rbp
   14006732b:	call   0x1400676d0
   140067330:	jmp    0x140067448
   140067335:	mov    QWORD PTR [rsp+0x168],rsi
   14006733d:	mov    QWORD PTR [rsp+0x170],rdi
   140067345:	xor    ebx,ebx
   140067347:	mov    QWORD PTR [rsp+0x140],r12
   14006734f:	lea    rsi,[rip+0x20d2a]        # 0x140088080
   140067356:	xor    edi,edi
   140067358:	test   ebx,ebx
   14006735a:	js     0x140067364
   14006735c:	cmp    ebx,0x7
   14006735f:	jae    0x140067364
   140067361:	mov    rdi,QWORD PTR [rsi]
   140067364:	lea    rcx,[rsp+0x21]
   140067369:	xor    edx,edx
   14006736b:	mov    r8d,0x103
   140067371:	mov    BYTE PTR [rsp+0x20],0x0
   140067376:	call   0x140036dc0
   14006737b:	cmp    BYTE PTR [rbp+0x560],0x0
   140067382:	je     0x140067421
   140067388:	lea    r8,[rbp+0x560]
   14006738f:	lea    rcx,[rsp+0x20]
   140067394:	mov    edx,0x104
   140067399:	call   0x1400336a8
   14006739e:	lea    r8,[rip+0x100b3]        # 0x140077458
   1400673a5:	lea    rcx,[rsp+0x20]
   1400673aa:	mov    edx,0x104
   1400673af:	call   0x1400330c8
   1400673b4:	test   rdi,rdi
   1400673b7:	je     0x140067407
   1400673b9:	lea    rdx,[rip+0x4cf8]        # 0x14006c0b8
   1400673c0:	mov    rcx,rdi
   1400673c3:	call   0x1400338c4
   1400673c8:	test   eax,eax
   1400673ca:	je     0x140067407
   1400673cc:	lea    rdx,[rip+0x5435]        # 0x14006c808
   1400673d3:	mov    rcx,rdi
   1400673d6:	call   0x1400338c4
   1400673db:	test   eax,eax
   1400673dd:	je     0x140067407
   1400673df:	lea    r8,[rip+0x66fe]        # 0x14006dae4
   1400673e6:	lea    rcx,[rsp+0x20]
   1400673eb:	mov    edx,0x104
   1400673f0:	call   0x1400330c8
   1400673f5:	lea    rcx,[rsp+0x20]
   1400673fa:	mov    r8,rdi
   1400673fd:	mov    edx,0x104
   140067402:	call   0x1400330c8
   140067407:	lea    rax,[rsp+0x20]
   14006740c:	test   rax,rax
   14006740f:	je     0x140067421
   140067411:	lea    rdx,[rsp+0x20]
   140067416:	mov    r8,rdi
   140067419:	mov    rcx,rbp
   14006741c:	call   0x1400676d0
   140067421:	inc    ebx
   140067423:	add    rsi,0x28
   140067427:	cmp    ebx,0x7
   14006742a:	jb     0x140067356
   140067430:	mov    r12,QWORD PTR [rsp+0x140]
   140067438:	mov    rdi,QWORD PTR [rsp+0x170]
   140067440:	mov    rsi,QWORD PTR [rsp+0x168]
   140067448:	mov    rcx,QWORD PTR [rsp+0x130]
   140067450:	xor    rcx,rsp
   140067453:	call   0x140032f00
   140067458:	add    rsp,0x148
   14006745f:	pop    rbp
   140067460:	pop    rbx
   140067461:	ret    
   140067462:	int3   
   140067463:	int3   
   140067464:	int3   
   140067465:	int3   
   140067466:	int3   
   140067467:	int3   
   140067468:	int3   
   140067469:	int3   
   14006746a:	int3   
   14006746b:	int3   
   14006746c:	int3   
   14006746d:	int3   
   14006746e:	int3   
   14006746f:	int3   
   140067470:	mov    QWORD PTR [rsp+0x18],rbx
   140067475:	mov    QWORD PTR [rsp+0x20],rbp
   14006747a:	push   rdi
   14006747b:	sub    rsp,0x20
   14006747f:	mov    rax,QWORD PTR [rcx+0x8f0]
   140067486:	mov    rdi,rdx
   140067489:	mov    rbp,rcx
   14006748c:	mov    rbx,QWORD PTR [rax]
   14006748f:	cmp    rbx,rax
   140067492:	je     0x140067578
   140067498:	mov    QWORD PTR [rsp+0x38],rsi
   14006749d:	nop    DWORD PTR [rax]
   1400674a0:	mov    rsi,QWORD PTR [rbx+0x20]
   1400674a4:	mov    QWORD PTR [rsp+0x30],rsi
   1400674a9:	test   rsi,rsi
   1400674ac:	je     0x140067517
   1400674ae:	mov    rax,QWORD PTR [rdi+0x8]
   1400674b2:	lea    rcx,[rsp+0x30]
   1400674b7:	cmp    rcx,rax
   1400674ba:	jae    0x1400674f8
   1400674bc:	mov    rcx,QWORD PTR [rdi]
   1400674bf:	lea    rdx,[rsp+0x30]
   1400674c4:	cmp    rcx,rdx
   1400674c7:	ja     0x1400674f8
   1400674c9:	lea    rsi,[rsp+0x30]
   1400674ce:	sub    rsi,rcx
   1400674d1:	sar    rsi,0x3
   1400674d5:	cmp    rax,QWORD PTR [rdi+0x10]
   1400674d9:	jne    0x1400674e3
   1400674db:	mov    rcx,rdi
   1400674de:	call   0x14002edc0
   1400674e3:	mov    rdx,QWORD PTR [rdi+0x8]
   1400674e7:	test   rdx,rdx
   1400674ea:	je     0x140067512
   1400674ec:	mov    rax,QWORD PTR [rdi]
   1400674ef:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400674f3:	mov    QWORD PTR [rdx],rcx
   1400674f6:	jmp    0x140067512
   1400674f8:	cmp    rax,QWORD PTR [rdi+0x10]
   1400674fc:	jne    0x140067506
   1400674fe:	mov    rcx,rdi
   140067501:	call   0x14002edc0
   140067506:	mov    rax,QWORD PTR [rdi+0x8]
   14006750a:	test   rax,rax
   14006750d:	je     0x140067512
   14006750f:	mov    QWORD PTR [rax],rsi
   140067512:	add    QWORD PTR [rdi+0x8],0x8
   140067517:	cmp    BYTE PTR [rbx+0x29],0x0
   14006751b:	jne    0x140067566
   14006751d:	mov    rax,QWORD PTR [rbx+0x10]
   140067521:	cmp    BYTE PTR [rax+0x29],0x0
   140067525:	jne    0x140067541
   140067527:	mov    rbx,rax
   14006752a:	mov    rax,QWORD PTR [rax]
   14006752d:	cmp    BYTE PTR [rax+0x29],0x0
   140067531:	jne    0x140067566
   140067533:	mov    rbx,rax
   140067536:	mov    rax,QWORD PTR [rax]
   140067539:	cmp    BYTE PTR [rax+0x29],0x0
   14006753d:	je     0x140067533
   14006753f:	jmp    0x140067566
   140067541:	mov    rax,QWORD PTR [rbx+0x8]
   140067545:	cmp    BYTE PTR [rax+0x29],0x0
   140067549:	jne    0x140067563
   14006754b:	nop    DWORD PTR [rax+rax*1+0x0]
   140067550:	cmp    rbx,QWORD PTR [rax+0x10]
   140067554:	jne    0x140067563
   140067556:	mov    rbx,rax
   140067559:	mov    rax,QWORD PTR [rax+0x8]
   14006755d:	cmp    BYTE PTR [rax+0x29],0x0
   140067561:	je     0x140067550
   140067563:	mov    rbx,rax
   140067566:	cmp    rbx,QWORD PTR [rbp+0x8f0]
   14006756d:	jne    0x1400674a0
   140067573:	mov    rsi,QWORD PTR [rsp+0x38]
   140067578:	mov    rcx,QWORD PTR [rdi+0x8]
   14006757c:	mov    rbx,QWORD PTR [rsp+0x40]
   140067581:	mov    rbp,QWORD PTR [rsp+0x48]
   140067586:	sub    rcx,QWORD PTR [rdi]
   140067589:	xor    eax,eax
   14006758b:	sar    rcx,0x3
   14006758f:	test   rcx,rcx
   140067592:	setne  al
   140067595:	add    rsp,0x20
   140067599:	pop    rdi
   14006759a:	ret    
   14006759b:	int3   
   14006759c:	int3   
   14006759d:	int3   
   14006759e:	int3   
   14006759f:	int3   
   1400675a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400675a5:	mov    QWORD PTR [rsp+0x20],rbp
   1400675aa:	push   rdi
   1400675ab:	sub    rsp,0x20
   1400675af:	mov    rax,QWORD PTR [rcx+0x8d0]
   1400675b6:	mov    rdi,rdx
   1400675b9:	mov    rbp,rcx
   1400675bc:	mov    rbx,QWORD PTR [rax]
   1400675bf:	cmp    rbx,rax
   1400675c2:	je     0x1400676a8
   1400675c8:	mov    QWORD PTR [rsp+0x38],rsi
   1400675cd:	nop    DWORD PTR [rax]
   1400675d0:	mov    rsi,QWORD PTR [rbx+0x20]
   1400675d4:	mov    QWORD PTR [rsp+0x30],rsi
   1400675d9:	test   rsi,rsi
   1400675dc:	je     0x140067647
   1400675de:	mov    rax,QWORD PTR [rdi+0x8]
   1400675e2:	lea    rcx,[rsp+0x30]
   1400675e7:	cmp    rcx,rax
   1400675ea:	jae    0x140067628
   1400675ec:	mov    rcx,QWORD PTR [rdi]
   1400675ef:	lea    rdx,[rsp+0x30]
   1400675f4:	cmp    rcx,rdx
   1400675f7:	ja     0x140067628
   1400675f9:	lea    rsi,[rsp+0x30]
   1400675fe:	sub    rsi,rcx
   140067601:	sar    rsi,0x3
   140067605:	cmp    rax,QWORD PTR [rdi+0x10]
   140067609:	jne    0x140067613
   14006760b:	mov    rcx,rdi
   14006760e:	call   0x14002edc0
   140067613:	mov    rdx,QWORD PTR [rdi+0x8]
   140067617:	test   rdx,rdx
   14006761a:	je     0x140067642
   14006761c:	mov    rax,QWORD PTR [rdi]
   14006761f:	mov    rcx,QWORD PTR [rax+rsi*8]
   140067623:	mov    QWORD PTR [rdx],rcx
   140067626:	jmp    0x140067642
   140067628:	cmp    rax,QWORD PTR [rdi+0x10]
   14006762c:	jne    0x140067636
   14006762e:	mov    rcx,rdi
   140067631:	call   0x14002edc0
   140067636:	mov    rax,QWORD PTR [rdi+0x8]
   14006763a:	test   rax,rax
   14006763d:	je     0x140067642
   14006763f:	mov    QWORD PTR [rax],rsi
   140067642:	add    QWORD PTR [rdi+0x8],0x8
   140067647:	cmp    BYTE PTR [rbx+0x29],0x0
   14006764b:	jne    0x140067696
   14006764d:	mov    rax,QWORD PTR [rbx+0x10]
   140067651:	cmp    BYTE PTR [rax+0x29],0x0
   140067655:	jne    0x140067671
   140067657:	mov    rbx,rax
   14006765a:	mov    rax,QWORD PTR [rax]
   14006765d:	cmp    BYTE PTR [rax+0x29],0x0
   140067661:	jne    0x140067696
   140067663:	mov    rbx,rax
   140067666:	mov    rax,QWORD PTR [rax]
   140067669:	cmp    BYTE PTR [rax+0x29],0x0
   14006766d:	je     0x140067663
   14006766f:	jmp    0x140067696
   140067671:	mov    rax,QWORD PTR [rbx+0x8]
   140067675:	cmp    BYTE PTR [rax+0x29],0x0
   140067679:	jne    0x140067693
   14006767b:	nop    DWORD PTR [rax+rax*1+0x0]
   140067680:	cmp    rbx,QWORD PTR [rax+0x10]
   140067684:	jne    0x140067693
   140067686:	mov    rbx,rax
   140067689:	mov    rax,QWORD PTR [rax+0x8]
   14006768d:	cmp    BYTE PTR [rax+0x29],0x0
   140067691:	je     0x140067680
   140067693:	mov    rbx,rax
   140067696:	cmp    rbx,QWORD PTR [rbp+0x8d0]
   14006769d:	jne    0x1400675d0
   1400676a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400676a8:	mov    rcx,QWORD PTR [rdi+0x8]
   1400676ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400676b1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400676b6:	sub    rcx,QWORD PTR [rdi]
   1400676b9:	xor    eax,eax
   1400676bb:	sar    rcx,0x3
   1400676bf:	test   rcx,rcx
   1400676c2:	setne  al
   1400676c5:	add    rsp,0x20
   1400676c9:	pop    rdi
   1400676ca:	ret    
   1400676cb:	int3   
   1400676cc:	int3   
   1400676cd:	int3   
   1400676ce:	int3   
   1400676cf:	int3   
   1400676d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400676d5:	push   rbp
   1400676d6:	push   rsi
   1400676d7:	push   rdi
   1400676d8:	push   r12
   1400676da:	push   r13
   1400676dc:	push   r14
   1400676de:	push   r15
   1400676e0:	mov    rbp,rsp
   1400676e3:	sub    rsp,0x70
   1400676e7:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   1400676ef:	mov    QWORD PTR [rsp+0xb0],rbx
   1400676f7:	mov    rdi,r8
   1400676fa:	mov    QWORD PTR [rbp-0x50],r8
   1400676fe:	mov    rsi,rdx
   140067701:	mov    r14,rcx
   140067704:	test   r8,r8
   140067707:	je     0x140067737
   140067709:	lea    rdx,[rip+0x49a8]        # 0x14006c0b8
   140067710:	mov    rcx,r8
   140067713:	call   0x1400338c4
   140067718:	test   eax,eax
   14006771a:	je     0x14006772f
   14006771c:	lea    rdx,[rip+0x50e5]        # 0x14006c808
   140067723:	mov    rcx,rdi
   140067726:	call   0x1400338c4
   14006772b:	test   eax,eax
   14006772d:	jne    0x140067737
   14006772f:	mov    QWORD PTR [rbp-0x50],0x0
   140067737:	lea    rcx,[rip+0x1f01a]        # 0x140086758
   14006773e:	mov    rax,QWORD PTR [rip+0x1f013]        # 0x140086758
   140067745:	call   QWORD PTR [rax+0x18]
   140067748:	lea    rbx,[rax+0x18]
   14006774c:	mov    QWORD PTR [rbp+0x50],rbx
   140067750:	mov    r12,rsi
   140067753:	shr    r12,0x10
   140067757:	mov    QWORD PTR [rbp+0x58],r12
   14006775b:	or     r15,0xffffffffffffffff
   14006775f:	test   r12,r12
   140067762:	jne    0x140067784
   140067764:	movzx  edi,si
   140067767:	mov    ecx,edi
   140067769:	call   0x14000c810
   14006776e:	test   rax,rax
   140067771:	je     0x1400677a5
   140067773:	mov    r8d,edi
   140067776:	mov    rdx,rax
   140067779:	lea    rcx,[rbp+0x50]
   14006777d:	call   0x14000c9d0
   140067782:	jmp    0x1400677a1
   140067784:	xor    eax,eax
   140067786:	mov    rcx,r15
   140067789:	mov    rdi,rsi
   14006778c:	repnz scas al,BYTE PTR es:[rdi]
   14006778e:	not    rcx
   140067791:	lea    r8d,[rcx-0x1]
   140067795:	mov    rdx,rsi
   140067798:	lea    rcx,[rbp+0x50]
   14006779c:	call   0x140008d10
   1400677a1:	mov    rbx,QWORD PTR [rbp+0x50]
   1400677a5:	mov    rsi,QWORD PTR [r14+0x8d0]
   1400677ac:	mov    rdi,QWORD PTR [rsi+0x8]
   1400677b0:	cmp    BYTE PTR [rdi+0x29],0x0
   1400677b4:	jne    0x1400677fd
   1400677b6:	xor    r12d,r12d
   1400677b9:	test   rbx,rbx
   1400677bc:	setne  r12b
   1400677c0:	test   r12d,r12d
   1400677c3:	je     0x1400677f2
   1400677c5:	mov    rdx,rbx
   1400677c8:	mov    rcx,QWORD PTR [rdi+0x18]
   1400677cc:	call   0x140034a94
   1400677d1:	test   eax,eax
   1400677d3:	sets   al
   1400677d6:	test   al,al
   1400677d8:	je     0x1400677e0
   1400677da:	mov    rdi,QWORD PTR [rdi+0x10]
   1400677de:	jmp    0x1400677e6
   1400677e0:	mov    rsi,rdi
   1400677e3:	mov    rdi,QWORD PTR [rdi]
   1400677e6:	cmp    BYTE PTR [rdi+0x29],0x0
   1400677ea:	je     0x1400677c0
   1400677ec:	mov    r12,QWORD PTR [rbp+0x58]
   1400677f0:	jmp    0x1400677fd
   1400677f2:	mov    ecx,0x80004005
   1400677f7:	call   0x1400025f0
   1400677fc:	int3   
   1400677fd:	mov    QWORD PTR [rbp-0x20],rsi
   140067801:	cmp    rsi,QWORD PTR [r14+0x8d0]
   140067808:	je     0x14006783c
   14006780a:	mov    rdx,QWORD PTR [rsi+0x18]
   14006780e:	xor    eax,eax
   140067810:	test   rdx,rdx
   140067813:	setne  al
   140067816:	test   eax,eax
   140067818:	jne    0x140067825
   14006781a:	mov    ecx,0x80004005
   14006781f:	call   0x1400025f0
   140067824:	int3   
   140067825:	mov    rcx,rbx
   140067828:	call   0x140034a94
   14006782d:	test   eax,eax
   14006782f:	sets   al
   140067832:	test   al,al
   140067834:	jne    0x14006783c
   140067836:	lea    rdi,[rbp-0x20]
   14006783a:	jmp    0x14006784b
   14006783c:	mov    rax,QWORD PTR [r14+0x8d0]
   140067843:	mov    QWORD PTR [rbp-0x38],rax
   140067847:	lea    rdi,[rbp-0x38]
   14006784b:	mov    rdi,QWORD PTR [rdi]
   14006784e:	lea    rdx,[rbx-0x18]
   140067852:	mov    eax,r15d
   140067855:	lock xadd DWORD PTR [rdx+0x10],eax
   14006785a:	dec    eax
   14006785c:	test   eax,eax
   14006785e:	jg     0x140067869
   140067860:	mov    rcx,QWORD PTR [rdx]
   140067863:	mov    rax,QWORD PTR [rcx]
   140067866:	call   QWORD PTR [rax+0x8]
   140067869:	xor    r15d,r15d
   14006786c:	lea    rcx,[r14+0x898]
   140067873:	mov    rsi,QWORD PTR [rbp+0x48]
   140067877:	mov    r9,rsi
   14006787a:	xor    r8d,r8d
   14006787d:	lea    edx,[r15+0x1]
   140067881:	call   QWORD PTR [rip+0xaf9]        # 0x140068380
   140067887:	mov    rbx,rax
   14006788a:	test   rax,rax
   14006788d:	je     0x140067919
   140067893:	call   QWORD PTR [rip+0xb27]        # 0x1400683c0
   140067899:	cmp    eax,0xb7
   14006789e:	sete   r15b
   1400678a2:	mov    rcx,rbx
   1400678a5:	call   QWORD PTR [rip+0xaed]        # 0x140068398
   1400678ab:	test   r15d,r15d
   1400678ae:	je     0x140067919
   1400678b0:	cmp    rdi,QWORD PTR [r14+0x8d0]
   1400678b7:	jne    0x14006794c
   1400678bd:	lea    rdx,[r14+0x45c]
   1400678c4:	mov    r8,QWORD PTR [rbp-0x50]
   1400678c8:	mov    rcx,r14
   1400678cb:	call   0x140067b30
   1400678d0:	mov    rdi,rax
   1400678d3:	test   rax,rax
   1400678d6:	je     0x14006794c
   1400678d8:	mov    rdx,rsi
   1400678db:	lea    rcx,[rbp-0x48]
   1400678df:	call   0x14000c920
   1400678e4:	nop
   1400678e5:	lea    rdx,[rbp-0x48]
   1400678e9:	lea    rcx,[r14+0x8c8]
   1400678f0:	call   0x140031db0
   1400678f5:	mov    QWORD PTR [rax],rdi
   1400678f8:	mov    rdx,QWORD PTR [rbp-0x48]
   1400678fc:	add    rdx,0xffffffffffffffe8
   140067900:	or     eax,0xffffffff
   140067903:	lock xadd DWORD PTR [rdx+0x10],eax
   140067908:	dec    eax
   14006790a:	test   eax,eax
   14006790c:	jg     0x14006794c
   14006790e:	mov    rcx,QWORD PTR [rdx]
   140067911:	mov    rax,QWORD PTR [rcx]
   140067914:	call   QWORD PTR [rax+0x8]
   140067917:	jmp    0x14006794c
   140067919:	cmp    rdi,QWORD PTR [r14+0x8d0]
   140067920:	je     0x14006794c
   140067922:	mov    rcx,QWORD PTR [rdi+0x20]
   140067926:	test   rcx,rcx
   140067929:	je     0x140067939
   14006792b:	call   QWORD PTR [rip+0xa67]        # 0x140068398
   140067931:	mov    QWORD PTR [rdi+0x20],0x0
   140067939:	mov    r8,rdi
   14006793c:	lea    rdx,[rbp-0x10]
   140067940:	lea    rcx,[r14+0x8c8]
   140067947:	call   0x140031ed0
   14006794c:	lea    rcx,[rip+0x1ee05]        # 0x140086758
   140067953:	mov    rax,QWORD PTR [rip+0x1edfe]        # 0x140086758
   14006795a:	call   QWORD PTR [rax+0x18]
   14006795d:	lea    rbx,[rax+0x18]
   140067961:	mov    QWORD PTR [rbp+0x58],rbx
   140067965:	test   r12,r12
   140067968:	jne    0x14006798a
   14006796a:	movzx  edi,si
   14006796d:	mov    ecx,edi
   14006796f:	call   0x14000c810
   140067974:	test   rax,rax
   140067977:	je     0x1400679ac
   140067979:	mov    r8d,edi
   14006797c:	mov    rdx,rax
   14006797f:	lea    rcx,[rbp+0x58]
   140067983:	call   0x14000c9d0
   140067988:	jmp    0x1400679a8
   14006798a:	xor    eax,eax
   14006798c:	or     rcx,0xffffffffffffffff
   140067990:	mov    rdi,rsi
   140067993:	repnz scas al,BYTE PTR es:[rdi]
   140067995:	not    rcx
   140067998:	lea    r8d,[rcx-0x1]
   14006799c:	mov    rdx,rsi
   14006799f:	lea    rcx,[rbp+0x58]
   1400679a3:	call   0x140008d10
   1400679a8:	mov    rbx,QWORD PTR [rbp+0x58]
   1400679ac:	mov    rsi,QWORD PTR [r14+0x8f0]
   1400679b3:	mov    rdi,QWORD PTR [rsi+0x8]
   1400679b7:	cmp    BYTE PTR [rdi+0x29],0x0
   1400679bb:	jne    0x140067a00
   1400679bd:	xor    r12d,r12d
   1400679c0:	test   rbx,rbx
   1400679c3:	setne  r12b
   1400679c7:	test   r12d,r12d
   1400679ca:	je     0x1400679f5
   1400679cc:	mov    rdx,rbx
   1400679cf:	mov    rcx,QWORD PTR [rdi+0x18]
   1400679d3:	call   0x140034a94
   1400679d8:	test   eax,eax
   1400679da:	sets   al
   1400679dd:	test   al,al
   1400679df:	je     0x1400679e7
   1400679e1:	mov    rdi,QWORD PTR [rdi+0x10]
   1400679e5:	jmp    0x1400679ed
   1400679e7:	mov    rsi,rdi
   1400679ea:	mov    rdi,QWORD PTR [rdi]
   1400679ed:	cmp    BYTE PTR [rdi+0x29],0x0
   1400679f1:	je     0x1400679c7
   1400679f3:	jmp    0x140067a00
   1400679f5:	mov    ecx,0x80004005
   1400679fa:	call   0x1400025f0
   1400679ff:	int3   
   140067a00:	mov    QWORD PTR [rbp-0x28],rsi
   140067a04:	cmp    rsi,QWORD PTR [r14+0x8f0]
   140067a0b:	je     0x140067a3f
   140067a0d:	mov    rdx,QWORD PTR [rsi+0x18]
   140067a11:	xor    eax,eax
   140067a13:	test   rdx,rdx
   140067a16:	setne  al
   140067a19:	test   eax,eax
   140067a1b:	jne    0x140067a28
   140067a1d:	mov    ecx,0x80004005
   140067a22:	call   0x1400025f0
   140067a27:	int3   
   140067a28:	mov    rcx,rbx
   140067a2b:	call   0x140034a94
   140067a30:	test   eax,eax
   140067a32:	sets   al
   140067a35:	test   al,al
   140067a37:	jne    0x140067a3f
   140067a39:	lea    rdi,[rbp-0x28]
   140067a3d:	jmp    0x140067a4e
   140067a3f:	mov    rax,QWORD PTR [r14+0x8f0]
   140067a46:	mov    QWORD PTR [rbp-0x30],rax
   140067a4a:	lea    rdi,[rbp-0x30]
   140067a4e:	mov    rdi,QWORD PTR [rdi]
   140067a51:	lea    rdx,[rbx-0x18]
   140067a55:	or     rbx,0xffffffffffffffff
   140067a59:	mov    eax,ebx
   140067a5b:	lock xadd DWORD PTR [rdx+0x10],eax
   140067a60:	dec    eax
   140067a62:	test   eax,eax
   140067a64:	jg     0x140067a6f
   140067a66:	mov    rcx,QWORD PTR [rdx]
   140067a69:	mov    rax,QWORD PTR [rcx]
   140067a6c:	call   QWORD PTR [rax+0x8]
   140067a6f:	test   r15d,r15d
   140067a72:	je     0x140067adb
   140067a74:	cmp    rdi,QWORD PTR [r14+0x8f0]
   140067a7b:	jne    0x140067b0e
   140067a81:	lea    rdx,[r14+0x358]
   140067a88:	mov    r8,QWORD PTR [rbp-0x50]
   140067a8c:	mov    rcx,r14
   140067a8f:	call   0x140067b30
   140067a94:	mov    rdi,rax
   140067a97:	test   rax,rax
   140067a9a:	je     0x140067b0e
   140067a9c:	mov    rdx,QWORD PTR [rbp+0x48]
   140067aa0:	lea    rcx,[rbp-0x40]
   140067aa4:	call   0x14000c920
   140067aa9:	nop
   140067aaa:	lea    rdx,[rbp-0x40]
   140067aae:	lea    rcx,[r14+0x8e8]
   140067ab5:	call   0x140031db0
   140067aba:	mov    QWORD PTR [rax],rdi
   140067abd:	mov    rdx,QWORD PTR [rbp-0x40]
   140067ac1:	add    rdx,0xffffffffffffffe8
   140067ac5:	lock xadd DWORD PTR [rdx+0x10],ebx
   140067aca:	dec    ebx
   140067acc:	test   ebx,ebx
   140067ace:	jg     0x140067b0e
   140067ad0:	mov    rcx,QWORD PTR [rdx]
   140067ad3:	mov    rax,QWORD PTR [rcx]
   140067ad6:	call   QWORD PTR [rax+0x8]
   140067ad9:	jmp    0x140067b0e
   140067adb:	cmp    rdi,QWORD PTR [r14+0x8f0]
   140067ae2:	je     0x140067b0e
   140067ae4:	mov    rcx,QWORD PTR [rdi+0x20]
   140067ae8:	test   rcx,rcx
   140067aeb:	je     0x140067afb
   140067aed:	call   QWORD PTR [rip+0x8a5]        # 0x140068398
   140067af3:	mov    QWORD PTR [rdi+0x20],0x0
   140067afb:	mov    r8,rdi
   140067afe:	lea    rdx,[rbp-0x8]
   140067b02:	lea    rcx,[r14+0x8e8]
   140067b09:	call   0x140031ed0
   140067b0e:	mov    rbx,QWORD PTR [rsp+0xb0]
   140067b16:	add    rsp,0x70
   140067b1a:	pop    r15
   140067b1c:	pop    r14
   140067b1e:	pop    r13
   140067b20:	pop    r12
   140067b22:	pop    rdi
   140067b23:	pop    rsi
   140067b24:	pop    rbp
   140067b25:	ret    
   140067b26:	int3   
   140067b27:	int3   
   140067b28:	int3   
   140067b29:	int3   
   140067b2a:	int3   
   140067b2b:	int3   
   140067b2c:	int3   
   140067b2d:	int3   
   140067b2e:	int3   
   140067b2f:	int3   
   140067b30:	rex push rbx
   140067b32:	push   rsi
   140067b33:	push   rdi
   140067b34:	sub    rsp,0x140
   140067b3b:	mov    rax,QWORD PTR [rip+0x1d566]        # 0x1400850a8
   140067b42:	xor    rax,rsp
   140067b45:	mov    QWORD PTR [rsp+0x130],rax
   140067b4d:	mov    rbx,r8
   140067b50:	mov    rdi,rdx
   140067b53:	mov    rsi,rcx
   140067b56:	test   rdx,rdx
   140067b59:	je     0x140067bcc
   140067b5b:	lea    rcx,[rsp+0x21]
   140067b60:	xor    edx,edx
   140067b62:	mov    r8d,0x103
   140067b68:	mov    BYTE PTR [rsp+0x20],0x0
   140067b6d:	call   0x140036dc0
   140067b72:	lea    rcx,[rsp+0x20]
   140067b77:	mov    r8,rdi
   140067b7a:	mov    edx,0x104
   140067b7f:	call   0x1400336a8
   140067b84:	test   rbx,rbx
   140067b87:	je     0x140067bb1
   140067b89:	lea    r8,[rip+0x5f54]        # 0x14006dae4
   140067b90:	lea    rcx,[rsp+0x20]
   140067b95:	mov    edx,0x104
   140067b9a:	call   0x1400330c8
   140067b9f:	lea    rcx,[rsp+0x20]
   140067ba4:	mov    r8,rbx
   140067ba7:	mov    edx,0x104
   140067bac:	call   0x1400330c8
   140067bb1:	xor    r8d,r8d
   140067bb4:	lea    rcx,[rsi+0x898]
   140067bbb:	lea    r9,[rsp+0x20]
   140067bc0:	lea    edx,[r8+0x1]
   140067bc4:	call   QWORD PTR [rip+0x7b6]        # 0x140068380
   140067bca:	jmp    0x140067bce
   140067bcc:	xor    eax,eax
   140067bce:	mov    rcx,QWORD PTR [rsp+0x130]
   140067bd6:	xor    rcx,rsp
   140067bd9:	call   0x140032f00
   140067bde:	add    rsp,0x140
   140067be5:	pop    rdi
   140067be6:	pop    rsi
   140067be7:	pop    rbx
   140067be8:	ret    
   140067be9:	int3   
   140067bea:	int3   
   140067beb:	int3   
   140067bec:	int3   
   140067bed:	int3   
   140067bee:	int3   
   140067bef:	int3   
   140067bf0:	mov    rcx,QWORD PTR [rdx+0x50]
   140067bf7:	add    rcx,0x10
   140067bfb:	jmp    0x14002a530
   140067c00:	mov    rcx,QWORD PTR [rdx+0x50]
   140067c07:	add    rcx,0x30
   140067c0b:	jmp    0x14002fef0
   140067c10:	mov    rcx,QWORD PTR [rdx+0x58]
   140067c17:	jmp    0x1400279f0
   140067c1c:	int3   
   140067c1d:	int3   
   140067c1e:	int3   
   140067c1f:	int3   
   140067c20:	mov    rcx,QWORD PTR [rdx+0x50]
   140067c27:	jmp    0x1400279f0
   140067c2c:	int3   
   140067c2d:	int3   
   140067c2e:	int3   
   140067c2f:	int3   
   140067c30:	mov    rcx,QWORD PTR [rdx+0x40]
   140067c37:	add    rcx,0x8c8
   140067c3e:	jmp    0x140031d70
   140067c43:	int3   
   140067c44:	int3   
   140067c45:	int3   
   140067c46:	int3   
   140067c47:	int3   
   140067c48:	int3   
   140067c49:	int3   
   140067c4a:	int3   
   140067c4b:	int3   
   140067c4c:	int3   
   140067c4d:	int3   
   140067c4e:	int3   
   140067c4f:	int3   
   140067c50:	mov    rcx,QWORD PTR [rdx+0x40]
   140067c57:	add    rcx,0x8c8
   140067c5e:	jmp    0x140031d70
   140067c63:	int3   
   140067c64:	int3   
   140067c65:	int3   
   140067c66:	int3   
   140067c67:	int3   
   140067c68:	int3   
   140067c69:	int3   
   140067c6a:	int3   
   140067c6b:	int3   
   140067c6c:	int3   
   140067c6d:	int3   
   140067c6e:	int3   
   140067c6f:	int3   
   140067c70:	mov    rcx,QWORD PTR [rdx+0x40]
   140067c77:	add    rcx,0x8e8
   140067c7e:	jmp    0x140031d70
   140067c83:	int3   
   140067c84:	int3   
   140067c85:	int3   
   140067c86:	int3   
   140067c87:	int3   
   140067c88:	int3   
   140067c89:	int3   
   140067c8a:	int3   
   140067c8b:	int3   
   140067c8c:	int3   
   140067c8d:	int3   
   140067c8e:	int3   
   140067c8f:	int3   
   140067c90:	mov    rcx,QWORD PTR [rdx+0x48]
   140067c97:	jmp    0x1400279f0
   140067c9c:	int3   
   140067c9d:	int3   
   140067c9e:	int3   
   140067c9f:	int3   
   140067ca0:	mov    rcx,QWORD PTR [rdx+0x40]
   140067ca7:	jmp    0x1400279f0
   140067cac:	int3   
   140067cad:	int3   
   140067cae:	int3   
   140067caf:	int3   
   140067cb0:	lea    rcx,[rdx+0xc0]
   140067cb7:	jmp    0x140032250
   140067cbc:	int3   
   140067cbd:	int3   
   140067cbe:	int3   
   140067cbf:	int3   
   140067cc0:	lea    rcx,[rdx+0x28]
   140067cc7:	jmp    0x140032250
   140067ccc:	int3   
   140067ccd:	int3   
   140067cce:	int3   
   140067ccf:	int3   
   140067cd0:	lea    rcx,[rdx+0xc8]
   140067cd7:	jmp    0x140032250
   140067cdc:	int3   
   140067cdd:	int3   
   140067cde:	int3   
   140067cdf:	int3   
   140067ce0:	lea    rcx,[rdx+0x30]
   140067ce7:	jmp    0x140032250
   140067cec:	int3   
   140067ced:	int3   
   140067cee:	int3   
   140067cef:	int3   
   140067cf0:	lea    rcx,[rdx+0x28]
   140067cf7:	jmp    0x1400272d0
   140067cfc:	int3   
   140067cfd:	int3   
   140067cfe:	int3   
   140067cff:	int3   
   140067d00:	lea    rcx,[rdx+0x48]
   140067d07:	jmp    0x1400272d0
   140067d0c:	int3   
   140067d0d:	int3   
   140067d0e:	int3   
   140067d0f:	int3   
   140067d10:	lea    rcx,[rdx+0x28]
   140067d17:	jmp    0x140032250
   140067d1c:	int3   
   140067d1d:	int3   
   140067d1e:	int3   
   140067d1f:	int3   
   140067d20:	lea    rcx,[rdx+0x20]
   140067d27:	jmp    0x140032250
   140067d2c:	int3   
   140067d2d:	int3   
   140067d2e:	int3   
   140067d2f:	int3   
   140067d30:	lea    rcx,[rdx+0x20]
   140067d37:	jmp    0x140032250
   140067d3c:	int3   
   140067d3d:	int3   
   140067d3e:	int3   
   140067d3f:	int3   
   140067d40:	lea    rcx,[rdx+0x68]
   140067d47:	jmp    0x140032250
   140067d4c:	int3   
   140067d4d:	int3   
   140067d4e:	int3   
   140067d4f:	int3   
   140067d50:	lea    rcx,[rdx+0x60]
   140067d57:	jmp    0x140032250
   140067d5c:	int3   
   140067d5d:	int3   
   140067d5e:	int3   
   140067d5f:	int3   
   140067d60:	lea    rcx,[rdx+0x30]
   140067d67:	jmp    0x14000ee50
   140067d6c:	int3   
   140067d6d:	int3   
   140067d6e:	int3   
   140067d6f:	int3   
   140067d70:	lea    rcx,[rdx+0x30]
   140067d77:	jmp    0x14000ee90
   140067d7c:	int3   
   140067d7d:	int3   
   140067d7e:	int3   
   140067d7f:	int3   
   140067d80:	lea    rcx,[rdx+0x30]
   140067d87:	jmp    0x14000ee50
   140067d8c:	int3   
   140067d8d:	int3   
   140067d8e:	int3   
   140067d8f:	int3   
   140067d90:	lea    rcx,[rdx+0x30]
   140067d97:	jmp    0x1400279f0
   140067d9c:	int3   
   140067d9d:	int3   
   140067d9e:	int3   
   140067d9f:	int3   
   140067da0:	lea    rcx,[rdx+0x58]
   140067da7:	jmp    0x140032250

Disassembly of section text:

0000000140090000 <text>:
   140090000:	sub    rsp,0x118
   140090007:	movdqa XMMWORD PTR [rsp+0xb0],xmm6
   140090010:	movdqa XMMWORD PTR [rsp+0xc0],xmm7
   140090019:	movss  DWORD PTR [rsp+0x40],xmm0
   14009001f:	movss  DWORD PTR [rsp+0x50],xmm1
   140090025:	mov    edx,DWORD PTR [rsp+0x40]
   140090029:	mov    r8d,DWORD PTR [rsp+0x50]
   14009002e:	mov    r10d,DWORD PTR [rip+0x101f]        # 0x140091054
   140090035:	and    r10d,r8d
   140090038:	je     0x140090410
   14009003e:	cmp    r8d,DWORD PTR [rip+0x1007]        # 0x14009104c
   140090045:	je     0x140090450
   14009004b:	mov    r9d,DWORD PTR [rip+0xfe6]        # 0x140091038
   140090052:	and    r9d,edx
   140090055:	cmp    r9d,DWORD PTR [rip+0xfdc]        # 0x140091038
   14009005c:	mov    eax,DWORD PTR [rip+0xfee]        # 0x140091050
   140090062:	mov    DWORD PTR [rsp+0x70],eax
   140090066:	je     0x1400902f0
   14009006c:	cmp    edx,DWORD PTR [rip+0xfda]        # 0x14009104c
   140090072:	je     0x1400903b0
   140090078:	cmp    edx,DWORD PTR [rip+0xfd2]        # 0x140091050
   14009007e:	je     0x140090580
   140090084:	mov    r9d,DWORD PTR [rip+0xfb5]        # 0x140091040
   14009008b:	and    r9d,edx
   14009008e:	cmp    r9d,DWORD PTR [rip+0xfab]        # 0x140091040
   140090095:	je     0x140090620
   14009009b:	mov    r10d,DWORD PTR [rip+0xf9e]        # 0x140091040
   1400900a2:	and    r10d,r8d
   1400900a5:	cmp    r10d,DWORD PTR [rip+0xf84]        # 0x140091030
   1400900ac:	jg     0x140090530
   1400900b2:	mov    r10d,DWORD PTR [rip+0xf87]        # 0x140091040
   1400900b9:	and    r10d,r8d
   1400900bc:	cmp    r10d,DWORD PTR [rip+0xf71]        # 0x140091034
   1400900c3:	jl     0x140090690
   1400900c9:	movss  xmm7,DWORD PTR [rsp+0x50]
   1400900cf:	cvtss2sd xmm0,xmm0
   1400900d3:	cvtss2sd xmm7,xmm7
   1400900d7:	movsd  QWORD PTR [rsp+0x50],xmm7
   1400900dd:	xor    r8,r8
   1400900e0:	movdqa xmm3,xmm0
   1400900e4:	psrlq  xmm3,0x34
   1400900e9:	movq   r8,xmm0
   1400900ee:	psubq  xmm3,XMMWORD PTR [rip+0xffa]        # 0x1400910f0
   1400900f6:	movdqa xmm2,xmm0
   1400900fa:	cvtdq2pd xmm6,xmm3
   1400900fe:	pand   xmm2,XMMWORD PTR [rip+0xfda]        # 0x1400910e0
   140090106:	mov    r9,r8
   140090109:	and    r8,QWORD PTR [rip+0xf90]        # 0x1400910a0
   140090110:	and    r9,QWORD PTR [rip+0xf91]        # 0x1400910a8
   140090117:	shl    r9,1
   14009011a:	add    r8,r9
   14009011d:	mov    QWORD PTR [rsp+0xa0],r8
   140090125:	movsd  xmm1,QWORD PTR [rsp+0xa0]
   14009012e:	shr    r8,0x2d
   140090132:	por    xmm2,XMMWORD PTR [rip+0xff6]        # 0x140091130
   14009013a:	por    xmm1,XMMWORD PTR [rip+0xfee]        # 0x140091130
   140090142:	lea    r9,[rip+0x1447]        # 0x140091590
   140090149:	subsd  xmm1,xmm2
   14009014d:	mulsd  xmm1,QWORD PTR [r9+r8*8]
   140090153:	movsd  xmm2,xmm1
   140090157:	lea    r9,[rip+0x1022]        # 0x140091180
   14009015e:	movsd  xmm5,QWORD PTR [rip+0xf9a]        # 0x140091100
   140090166:	movsd  xmm0,QWORD PTR [r9+r8*8]
   14009016c:	mulsd  xmm1,xmm2
   140090170:	movsd  xmm4,QWORD PTR [rip+0xff8]        # 0x140091170
   140090178:	movsd  xmm3,QWORD PTR [rip+0xfd0]        # 0x140091150
   140090180:	mulsd  xmm4,xmm2
   140090184:	mulsd  xmm3,xmm2
   140090188:	mulsd  xmm1,xmm2
   14009018c:	addsd  xmm4,QWORD PTR [rip+0xfcc]        # 0x140091160
   140090194:	addsd  xmm3,QWORD PTR [rip+0xfa4]        # 0x140091140
   14009019c:	mulsd  xmm4,xmm1
   1400901a0:	mulsd  xmm3,xmm2
   1400901a4:	addsd  xmm3,xmm4
   1400901a8:	mulsd  xmm5,xmm6
   1400901ac:	subsd  xmm0,xmm3
   1400901b0:	addsd  xmm0,xmm5
   1400901b4:	movsd  xmm7,QWORD PTR [rsp+0x50]
   1400901ba:	mulsd  xmm0,xmm7
   1400901be:	movsd  xmm7,QWORD PTR [rip+0x180a]        # 0x1400919d0
   1400901c6:	movsd  QWORD PTR [rsp+0x60],xmm0
   1400901cc:	mulsd  xmm7,xmm0
   1400901d0:	mov    rdx,QWORD PTR [rsp+0x60]
   1400901d5:	comisd xmm7,QWORD PTR [rip+0x17d3]        # 0x1400919b0
   1400901dd:	jae    0x1400902d0
   1400901e3:	comisd xmm7,QWORD PTR [rip+0x17d5]        # 0x1400919c0
   1400901eb:	jb     0x1400902b0
   1400901f1:	cvtpd2dq xmm4,xmm7
   1400901f5:	lea    r10,[rip+0x1834]        # 0x140091a30
   1400901fc:	cvtdq2pd xmm1,xmm4
   140090200:	movsd  xmm2,QWORD PTR [rip+0x17d8]        # 0x1400919e0
   140090208:	mulsd  xmm2,xmm1
   14009020c:	movd   ecx,xmm4
   140090210:	mov    rax,0x1f
   140090217:	and    eax,ecx
   140090219:	subsd  xmm0,xmm2
   14009021d:	movsd  xmm1,xmm0
   140090221:	sub    ecx,eax
   140090223:	sar    ecx,0x5
   140090226:	mulsd  xmm1,xmm0
   14009022a:	movsd  xmm4,QWORD PTR [rip+0x17be]        # 0x1400919f0
   140090232:	movsd  xmm3,QWORD PTR [rip+0x17d6]        # 0x140091a10
   14009023a:	mulsd  xmm4,xmm0
   14009023e:	mulsd  xmm3,xmm0
   140090242:	mulsd  xmm1,xmm0
   140090246:	addsd  xmm4,QWORD PTR [rip+0x17b2]        # 0x140091a00
   14009024e:	addsd  xmm3,QWORD PTR [rip+0x17ca]        # 0x140091a20
   140090256:	mulsd  xmm4,xmm1
   14009025a:	mulsd  xmm3,xmm0
   14009025e:	addsd  xmm3,xmm4
   140090262:	movsd  xmm0,xmm3
   140090266:	add    rcx,0x3ff
   14009026d:	shl    rcx,0x34
   140090271:	movsd  xmm1,QWORD PTR [r10+rax*8]
   140090277:	mulsd  xmm0,xmm1
   14009027b:	addsd  xmm0,xmm1
   14009027f:	mov    QWORD PTR [rsp+0x60],rcx
   140090284:	mulsd  xmm0,QWORD PTR [rsp+0x60]
   14009028a:	cvtsd2ss xmm0,xmm0
   14009028e:	orps   xmm0,XMMWORD PTR [rsp+0x70]
   140090293:	movdqa xmm7,XMMWORD PTR [rsp+0xc0]
   14009029c:	movdqa xmm6,XMMWORD PTR [rsp+0xb0]
   1400902a5:	add    rsp,0x118
   1400902ac:	ret    
   1400902ad:	nop    DWORD PTR [rax]
   1400902b0:	mov    r11d,DWORD PTR [rip+0xdc1]        # 0x140091078
   1400902b7:	or     r11d,DWORD PTR [rsp+0x70]
   1400902bc:	jmp    0x140090730
   1400902c1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400902d0:	mov    r11d,DWORD PTR [rip+0xda5]        # 0x14009107c
   1400902d7:	or     r11d,DWORD PTR [rsp+0x70]
   1400902dc:	jmp    0x140090730
   1400902e1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400902f0:	mov    r10d,DWORD PTR [rip+0xd49]        # 0x140091040
   1400902f7:	and    r10d,r8d
   1400902fa:	cmp    r10d,DWORD PTR [rip+0xd2f]        # 0x140091030
   140090301:	jg     0x140090530
   140090307:	mov    r10d,DWORD PTR [rip+0xd46]        # 0x140091054
   14009030e:	and    r10d,r8d
   140090311:	mov    r11d,r10d
   140090314:	mov    ecx,DWORD PTR [rip+0xd6a]        # 0x140091084
   14009031a:	shr    r10d,cl
   14009031d:	sub    r10d,DWORD PTR [rip+0xd64]        # 0x140091088
   140090324:	js     0x1400904e0
   14009032a:	mov    eax,DWORD PTR [rip+0xd24]        # 0x140091054
   140090330:	and    eax,edx
   140090332:	mov    DWORD PTR [rsp+0x80],eax
   140090339:	cmp    r10d,DWORD PTR [rip+0xd40]        # 0x140091080
   140090340:	mov    ecx,r10d
   140090343:	jg     0x140090371
   140090345:	mov    r9d,DWORD PTR [rip+0xd40]        # 0x14009108c
   14009034c:	shr    r9d,cl
   14009034f:	and    r9d,r11d
   140090352:	jne    0x1400904e0
   140090358:	mov    r9d,DWORD PTR [rip+0xd31]        # 0x140091090
   14009035f:	shr    r9d,cl
   140090362:	and    r9d,r11d
   140090365:	je     0x140090371
   140090367:	mov    eax,DWORD PTR [rip+0xccb]        # 0x140091038
   14009036d:	mov    DWORD PTR [rsp+0x70],eax
   140090371:	cmp    edx,DWORD PTR [rip+0xcf9]        # 0x140091070
   140090377:	je     0x140090580
   14009037d:	cmp    edx,DWORD PTR [rip+0xce9]        # 0x14009106c
   140090383:	je     0x140090490
   140090389:	mov    r9d,DWORD PTR [rip+0xcb0]        # 0x140091040
   140090390:	and    r9d,edx
   140090393:	cmp    r9d,DWORD PTR [rip+0xca6]        # 0x140091040
   14009039a:	je     0x140090620
   1400903a0:	movss  xmm0,DWORD PTR [rsp+0x80]
   1400903a9:	jmp    0x1400900c9
   1400903ae:	xchg   ax,ax
   1400903b0:	xor    eax,eax
   1400903b2:	mov    r10d,DWORD PTR [rip+0xc87]        # 0x140091040
   1400903b9:	and    r10d,r8d
   1400903bc:	cmp    r10d,DWORD PTR [rip+0xc7d]        # 0x140091040
   1400903c3:	cmove  eax,r8d
   1400903c7:	mov    r10d,DWORD PTR [rip+0xc8a]        # 0x140091058
   1400903ce:	and    r10d,eax
   1400903d1:	je     0x140090293
   1400903d7:	mov    r10d,DWORD PTR [rip+0xc8a]        # 0x140091068
   1400903de:	and    r10d,r8d
   1400903e1:	jne    0x140090293
   1400903e7:	movss  xmm0,DWORD PTR [rsp+0x40]
   1400903ed:	movss  xmm1,DWORD PTR [rsp+0x50]
   1400903f3:	movss  xmm2,DWORD PTR [rip+0xc51]        # 0x14009104c
   1400903fb:	mov    r9d,DWORD PTR [rip+0xbfe]        # 0x140091000
   140090402:	call   0x140045138
   140090407:	jmp    0x140090293
   14009040c:	nop    DWORD PTR [rax+0x0]
   140090410:	xor    eax,eax
   140090412:	mov    r11d,edx
   140090415:	mov    r9d,DWORD PTR [rip+0xc24]        # 0x140091040
   14009041c:	and    r9d,edx
   14009041f:	cmp    r9d,DWORD PTR [rip+0xc1a]        # 0x140091040
   140090426:	cmove  eax,edx
   140090429:	mov    r9d,DWORD PTR [rip+0xc28]        # 0x140091058
   140090430:	and    r9d,eax
   140090433:	jne    0x140090780
   140090439:	movss  xmm0,DWORD PTR [rip+0xc0b]        # 0x14009104c
   140090441:	jmp    0x140090293
   140090446:	data16 nop WORD PTR [rax+rax*1+0x0]
   140090450:	xor    eax,eax
   140090452:	mov    r11d,edx
   140090455:	mov    r9d,DWORD PTR [rip+0xbe4]        # 0x140091040
   14009045c:	and    r9d,edx
   14009045f:	cmp    r9d,DWORD PTR [rip+0xbda]        # 0x140091040
   140090466:	cmove  eax,edx
   140090469:	mov    r9d,DWORD PTR [rip+0xbe8]        # 0x140091058
   140090470:	and    r9d,eax
   140090473:	jne    0x140090780
   140090479:	movd   xmm0,edx
   14009047d:	jmp    0x140090293
   140090482:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140090490:	mov    edx,DWORD PTR [rip+0xbb6]        # 0x14009104c
   140090496:	cmp    r8d,DWORD PTR [rip+0xba7]        # 0x140091044
   14009049d:	cmove  edx,DWORD PTR [rip+0xbc8]        # 0x14009106c
   1400904a4:	or     edx,DWORD PTR [rsp+0x70]
   1400904a8:	xor    eax,eax
   1400904aa:	mov    r11d,r8d
   1400904ad:	mov    r10d,DWORD PTR [rip+0xb8c]        # 0x140091040
   1400904b4:	and    r10d,r8d
   1400904b7:	cmp    r10d,DWORD PTR [rip+0xb82]        # 0x140091040
   1400904be:	cmove  eax,r8d
   1400904c2:	mov    r10d,DWORD PTR [rip+0xb8f]        # 0x140091058
   1400904c9:	and    r10d,eax
   1400904cc:	jne    0x1400907d0
   1400904d2:	movd   xmm0,edx
   1400904d6:	jmp    0x140090293
   1400904db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400904e0:	mov    r9d,DWORD PTR [rip+0xb59]        # 0x140091040
   1400904e7:	and    r9d,edx
   1400904ea:	cmp    r9d,DWORD PTR [rip+0xb4f]        # 0x140091040
   1400904f1:	je     0x140090620
   1400904f7:	cmp    edx,DWORD PTR [rip+0xb73]        # 0x140091070
   1400904fd:	je     0x140090580
   140090503:	movss  xmm0,DWORD PTR [rsp+0x40]
   140090509:	movss  xmm1,DWORD PTR [rsp+0x50]
   14009050f:	movss  xmm2,DWORD PTR [rip+0xb49]        # 0x140091060
   140090517:	mov    r9d,DWORD PTR [rip+0xaf6]        # 0x140091014
   14009051e:	call   0x140045138
   140090523:	jmp    0x140090293
   140090528:	nop    DWORD PTR [rax+rax*1+0x0]
   140090530:	mov    r9d,DWORD PTR [rip+0xb09]        # 0x140091040
   140090537:	and    r9d,edx
   14009053a:	cmp    r9d,DWORD PTR [rip+0xaff]        # 0x140091040
   140090541:	je     0x140090620
   140090547:	mov    r9d,DWORD PTR [rip+0xb06]        # 0x140091054
   14009054e:	and    r9d,edx
   140090551:	je     0x140090580
   140090553:	cmp    edx,DWORD PTR [rip+0xb13]        # 0x14009106c
   140090559:	je     0x140090490
   14009055f:	mov    r9d,edx
   140090562:	and    r9d,DWORD PTR [rip+0xaeb]        # 0x140091054
   140090569:	cmp    r9d,DWORD PTR [rip+0xadc]        # 0x14009104c
   140090570:	jl     0x1400906b0
   140090576:	jmp    0x1400906d0
   14009057b:	nop    DWORD PTR [rax+rax*1+0x0]
   140090580:	mov    r10d,DWORD PTR [rip+0xab9]        # 0x140091040
   140090587:	xor    eax,eax
   140090589:	and    r10d,r8d
   14009058c:	cmp    r10d,DWORD PTR [rip+0xaad]        # 0x140091040
   140090593:	je     0x1400905f0
   140090595:	mov    r10d,DWORD PTR [rip+0xa9c]        # 0x140091038
   14009059c:	and    r10d,r8d
   14009059f:	cmovne eax,DWORD PTR [rip+0xaa2]        # 0x140091048
   1400905a6:	jne    0x1400905c0
   1400905a8:	movd   xmm0,eax
   1400905ac:	orps   xmm0,XMMWORD PTR [rsp+0x70]
   1400905b1:	jmp    0x140090293
   1400905b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400905c0:	movss  xmm0,DWORD PTR [rsp+0x40]
   1400905c6:	movss  xmm1,DWORD PTR [rsp+0x50]
   1400905cc:	movd   xmm2,eax
   1400905d0:	orps   xmm2,XMMWORD PTR [rsp+0x70]
   1400905d5:	mov    r9d,DWORD PTR [rip+0xa28]        # 0x140091004
   1400905dc:	call   0x140045138
   1400905e1:	jmp    0x140090293
   1400905e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400905f0:	mov    r11d,r8d
   1400905f3:	cmp    r8d,DWORD PTR [rip+0xa4a]        # 0x140091044
   1400905fa:	cmove  eax,DWORD PTR [rip+0xa47]        # 0x140091048
   140090601:	je     0x1400905c0
   140090603:	mov    r10d,DWORD PTR [rip+0xa4e]        # 0x140091058
   14009060a:	and    r10d,r8d
   14009060d:	jne    0x1400907d0
   140090613:	movd   xmm0,eax
   140090617:	jmp    0x140090293
   14009061c:	nop    DWORD PTR [rax+0x0]
   140090620:	xor    r11d,r11d
   140090623:	mov    r10d,DWORD PTR [rip+0xa0e]        # 0x140091038
   14009062a:	and    r10d,r8d
   14009062d:	cmove  r11d,DWORD PTR [rip+0xa13]        # 0x140091048
   140090635:	mov    eax,edx
   140090637:	mov    r9d,DWORD PTR [rip+0xa1a]        # 0x140091058
   14009063e:	and    r9d,edx
   140090641:	cmovne r11d,eax
   140090645:	jne    0x140090780
   14009064b:	xor    eax,eax
   14009064d:	mov    r9d,r8d
   140090650:	mov    r10d,DWORD PTR [rip+0x9e9]        # 0x140091040
   140090657:	and    r10d,r8d
   14009065a:	cmp    r10d,DWORD PTR [rip+0x9df]        # 0x140091040
   140090661:	cmove  eax,r8d
   140090665:	mov    r10d,DWORD PTR [rip+0x9ec]        # 0x140091058
   14009066c:	and    r10d,eax
   14009066f:	cmovne r11d,r9d
   140090673:	jne    0x1400907d0
   140090679:	movd   xmm0,r11d
   14009067e:	orps   xmm0,XMMWORD PTR [rsp+0x70]
   140090683:	jmp    0x140090293
   140090688:	nop    DWORD PTR [rax+rax*1+0x0]
   140090690:	movss  xmm0,DWORD PTR [rip+0x9b4]        # 0x14009104c
   140090698:	addss  xmm0,xmm1
   14009069c:	jmp    0x140090293
   1400906a1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400906b0:	xor    r11d,r11d
   1400906b3:	mov    r10d,DWORD PTR [rip+0x97e]        # 0x140091038
   1400906ba:	and    r10d,r8d
   1400906bd:	cmovne r11d,DWORD PTR [rip+0x983]        # 0x140091048
   1400906c5:	jmp    0x1400906f0
   1400906c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400906d0:	xor    r11d,r11d
   1400906d3:	mov    r10d,DWORD PTR [rip+0x95e]        # 0x140091038
   1400906da:	and    r10d,r8d
   1400906dd:	cmove  r11d,DWORD PTR [rip+0x963]        # 0x140091048
   1400906e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400906f0:	xor    eax,eax
   1400906f2:	mov    r9d,r8d
   1400906f5:	mov    r10d,DWORD PTR [rip+0x944]        # 0x140091040
   1400906fc:	and    r10d,r8d
   1400906ff:	cmp    r10d,DWORD PTR [rip+0x93a]        # 0x140091040
   140090706:	cmove  eax,r8d
   14009070a:	mov    r10d,DWORD PTR [rip+0x947]        # 0x140091058
   140090711:	and    r10d,eax
   140090714:	cmovne r11d,r9d
   140090718:	jne    0x1400907d0
   14009071e:	test   eax,eax
   140090720:	jne    0x140090770
   140090722:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140090730:	mov    r9d,DWORD PTR [rip+0x8e1]        # 0x140091018
   140090737:	test   DWORD PTR [rip+0x916],r11d        # 0x140091054
   14009073e:	cmovne r9d,DWORD PTR [rip+0x8da]        # 0x140091020
   140090746:	movss  xmm0,DWORD PTR [rsp+0x40]
   14009074c:	movss  xmm1,DWORD PTR [rsp+0x50]
   140090752:	movd   xmm2,r11d
   140090757:	call   0x140045138
   14009075c:	jmp    0x140090293
   140090761:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140090770:	movd   xmm0,r11d
   140090775:	jmp    0x140090293
   14009077a:	nop    WORD PTR [rax+rax*1+0x0]
   140090780:	xor    eax,eax
   140090782:	mov    r10d,DWORD PTR [rip+0x8b7]        # 0x140091040
   140090789:	and    r10d,r8d
   14009078c:	cmp    r10d,DWORD PTR [rip+0x8ad]        # 0x140091040
   140090793:	cmove  eax,r8d
   140090797:	mov    r10d,DWORD PTR [rip+0x8ba]        # 0x140091058
   14009079e:	and    r10d,eax
   1400907a1:	jne    0x140090800
   1400907a3:	movss  xmm0,DWORD PTR [rsp+0x40]
   1400907a9:	movss  xmm1,DWORD PTR [rsp+0x50]
   1400907af:	movd   xmm2,r11d
   1400907b4:	mov    r9d,DWORD PTR [rip+0x84d]        # 0x140091008
   1400907bb:	call   0x140045138
   1400907c0:	jmp    0x140090293
   1400907c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400907d0:	movss  xmm0,DWORD PTR [rsp+0x40]
   1400907d6:	movss  xmm1,DWORD PTR [rsp+0x50]
   1400907dc:	movd   xmm2,r11d
   1400907e1:	mov    r9d,DWORD PTR [rip+0x824]        # 0x14009100c
   1400907e8:	call   0x140045138
   1400907ed:	jmp    0x140090293
   1400907f2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140090800:	cmp    r11d,DWORD PTR [rip+0x855]        # 0x14009105c
   140090807:	cmove  r11d,r8d
   14009080b:	movss  xmm0,DWORD PTR [rsp+0x40]
   140090811:	movss  xmm1,DWORD PTR [rsp+0x50]
   140090817:	movd   xmm2,r11d
   14009081c:	mov    r9d,DWORD PTR [rip+0x7ed]        # 0x140091010
   140090823:	call   0x140045138
   140090828:	jmp    0x140090293
   14009082d:	add    BYTE PTR [rax],al
   14009082f:	add    BYTE PTR [rax-0x7d],cl
   140090832:	in     al,dx
   140090833:	js     0x140090868
   140090835:	shl    BYTE PTR [rsi+0xf],0x6f
   140090839:	fdiv   st,st(3)
   14009083b:	movups xmm4,xmm0
   14009083e:	psrld  xmm3,0x17
   140090843:	movd   eax,xmm0
   140090847:	psubd  xmm3,XMMWORD PTR [rip+0x13a1]        # 0x140091bf0
   14009084f:	movdqa xmm2,xmm0
   140090853:	cvtdq2ps xmm5,xmm3
   140090856:	movdqa xmm1,xmm0
   14009085a:	andps  xmm1,XMMWORD PTR [rip+0x130f]        # 0x140091b70
   140090861:	comiss xmm1,DWORD PTR [rip+0x1308]        # 0x140091b70
   140090868:	je     0x140090a80
   14009086e:	pand   xmm2,XMMWORD PTR [rip+0x136a]        # 0x140091be0
   140090876:	subss  xmm4,DWORD PTR [rip+0x12c2]        # 0x140091b40
   14009087e:	comiss xmm5,DWORD PTR [rip+0x144b]        # 0x140091cd0
   140090885:	je     0x1400909fd
   14009088b:	mov    r9d,eax
   14009088e:	and    eax,DWORD PTR [rip+0x136c]        # 0x140091c00
   140090894:	and    r9d,DWORD PTR [rip+0x1375]        # 0x140091c10
   14009089b:	shl    r9d,1
   14009089e:	add    eax,r9d
   1400908a1:	mov    DWORD PTR [rsp+0x30],eax
   1400908a5:	andps  xmm4,XMMWORD PTR [rip+0x1314]        # 0x140091bc0
   1400908ac:	comiss xmm4,DWORD PTR [rip+0x143d]        # 0x140091cf0
   1400908b3:	jb     0x140090960
   1400908b9:	movss  xmm1,DWORD PTR [rsp+0x30]
   1400908bf:	shr    eax,0x10
   1400908c2:	por    xmm2,XMMWORD PTR [rip+0x1396]        # 0x140091c60
   1400908ca:	por    xmm1,XMMWORD PTR [rip+0x138e]        # 0x140091c60
   1400908d2:	lea    r9,[rip+0x1897]        # 0x140092170
   1400908d9:	xorps  xmm4,xmm4
   1400908dc:	comiss xmm0,xmm4
   1400908df:	jbe    0x140090a40
   1400908e5:	subss  xmm1,xmm2
   1400908e9:	mulss  xmm1,DWORD PTR [r9+rax*4]
   1400908ef:	movss  xmm2,xmm1
   1400908f3:	movss  xmm0,xmm1
   1400908f7:	mulss  xmm2,DWORD PTR [rip+0x1431]        # 0x140091d30
   1400908ff:	mulss  xmm0,xmm1
   140090903:	addss  xmm2,DWORD PTR [rip+0x1435]        # 0x140091d40
   14009090b:	movss  xmm3,DWORD PTR [rip+0x138d]        # 0x140091ca0
   140090913:	lea    r9,[rip+0x1646]        # 0x140091f60
   14009091a:	lea    r10,[rip+0x142f]        # 0x140091d50
   140090921:	mulss  xmm2,xmm0
   140090925:	mulss  xmm3,xmm5
   140090929:	addss  xmm1,xmm2
   14009092d:	mulss  xmm1,DWORD PTR [rip+0x137b]        # 0x140091cb0
   140090935:	movss  xmm0,DWORD PTR [rip+0x1353]        # 0x140091c90
   14009093d:	subss  xmm3,xmm1
   140090941:	mulss  xmm0,xmm5
   140090945:	addss  xmm3,DWORD PTR [r9+rax*4]
   14009094b:	addss  xmm0,DWORD PTR [r10+rax*4]
   140090951:	addss  xmm0,xmm3
   140090955:	add    rsp,0x78
   140090959:	ret    
   14009095a:	nop    WORD PTR [rax+rax*1+0x0]
   140090960:	movss  xmm2,DWORD PTR [rip+0x11e8]        # 0x140091b50
   140090968:	subss  xmm0,DWORD PTR [rip+0x11d0]        # 0x140091b40
   140090970:	addss  xmm2,xmm0
   140090974:	movss  xmm1,xmm0
   140090978:	divss  xmm1,xmm2
   14009097c:	movss  xmm4,xmm0
   140090980:	mulss  xmm4,xmm1
   140090984:	addss  xmm1,xmm1
   140090988:	movss  xmm2,xmm1
   14009098c:	mulss  xmm2,xmm2
   140090990:	movss  xmm3,xmm1
   140090994:	mulss  xmm3,xmm2
   140090998:	mulss  xmm2,DWORD PTR [rip+0x1290]        # 0x140091c30
   1400909a0:	addss  xmm2,DWORD PTR [rip+0x1278]        # 0x140091c20
   1400909a8:	mulss  xmm2,xmm3
   1400909ac:	subss  xmm2,xmm4
   1400909b0:	movdqa xmm5,xmm0
   1400909b4:	pand   xmm5,XMMWORD PTR [rip+0x1304]        # 0x140091cc0
   1400909bc:	subss  xmm0,xmm5
   1400909c0:	addss  xmm2,xmm0
   1400909c4:	movss  xmm0,xmm5
   1400909c8:	movss  xmm1,xmm2
   1400909cc:	mulss  xmm2,DWORD PTR [rip+0x12ac]        # 0x140091c80
   1400909d4:	mulss  xmm0,DWORD PTR [rip+0x12a4]        # 0x140091c80
   1400909dc:	mulss  xmm1,DWORD PTR [rip+0x128c]        # 0x140091c70
   1400909e4:	mulss  xmm5,DWORD PTR [rip+0x1284]        # 0x140091c70
   1400909ec:	addss  xmm0,xmm2
   1400909f0:	addss  xmm0,xmm1
   1400909f4:	addss  xmm0,xmm5
   1400909f8:	add    rsp,0x78
   1400909fc:	ret    
   1400909fd:	por    xmm2,XMMWORD PTR [rip+0x113b]        # 0x140091b40
   140090a05:	subss  xmm2,DWORD PTR [rip+0x1133]        # 0x140091b40
   140090a0d:	movdqa xmm5,xmm2
   140090a11:	pand   xmm2,XMMWORD PTR [rip+0x11c7]        # 0x140091be0
   140090a19:	movd   eax,xmm2
   140090a1d:	psrld  xmm5,0x17
   140090a22:	psubd  xmm5,XMMWORD PTR [rip+0x12b6]        # 0x140091ce0
   140090a2a:	cvtdq2ps xmm5,xmm5
   140090a2d:	jmp    0x14009088b
   140090a32:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140090a40:	jne    0x140090a60
   140090a42:	movss  xmm1,DWORD PTR [rip+0x1116]        # 0x140091b60
   140090a4a:	mov    r8d,DWORD PTR [rip+0x10df]        # 0x140091b30
   140090a51:	call   0x140045370
   140090a56:	jmp    0x140090ab0
   140090a58:	nop    DWORD PTR [rax+rax*1+0x0]
   140090a60:	movss  xmm1,DWORD PTR [rip+0x1138]        # 0x140091ba0
   140090a68:	mov    r8d,DWORD PTR [rip+0x10c5]        # 0x140091b34
   140090a6f:	call   0x140045370
   140090a74:	jmp    0x140090ab0
   140090a76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140090a80:	cmp    eax,DWORD PTR [rip+0x10ea]        # 0x140091b70
   140090a86:	je     0x140090ab0
   140090a88:	cmp    eax,DWORD PTR [rip+0x10d2]        # 0x140091b60
   140090a8e:	je     0x140090a60
   140090a90:	or     eax,DWORD PTR [rip+0x113a]        # 0x140091bd0
   140090a96:	movd   xmm1,eax
   140090a9a:	mov    r8d,DWORD PTR [rip+0x1097]        # 0x140091b38
   140090aa1:	call   0x140045370
   140090aa6:	jmp    0x140090ab0
   140090aa8:	nop    DWORD PTR [rax+rax*1+0x0]
   140090ab0:	add    rsp,0x78
   140090ab4:	ret    
