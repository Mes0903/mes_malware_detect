
55fa4e98f25ec101acbb40a2d2732041c1abb6b6e5b3d6d9ba7aceaceacb1d25.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	ret    0x0
   140001003:	int3   
   140001004:	int3   
   140001005:	int3   
   140001006:	int3   
   140001007:	int3   
   140001008:	int3   
   140001009:	int3   
   14000100a:	int3   
   14000100b:	int3   
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	rex push rbx
   140001012:	sub    rsp,0x20
   140001016:	lea    rax,[rip+0xb41b]        # 0x14000c438
   14000101d:	mov    rbx,rcx
   140001020:	mov    QWORD PTR [rcx],rax
   140001023:	test   dl,0x1
   140001026:	je     0x14000102d
   140001028:	call   0x14000b416
   14000102d:	mov    rax,rbx
   140001030:	add    rsp,0x20
   140001034:	pop    rbx
   140001035:	ret    
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    QWORD PTR [rsp+0x10],rbx
   140001045:	mov    QWORD PTR [rsp+0x18],rbp
   14000104a:	push   rsi
   14000104b:	push   rdi
   14000104c:	push   r12
   14000104e:	sub    rsp,0x40
   140001052:	mov    r12,rcx
   140001055:	lea    rcx,[rsp+0x60]
   14000105a:	mov    rbx,r8
   14000105d:	mov    rsi,rdx
   140001060:	mov    ebp,0x67
   140001065:	call   QWORD PTR [rip+0xb315]        # 0x14000c380
   14000106b:	or     rcx,0xffffffffffffffff
   14000106f:	lea    rdx,[rip+0xb3e2]        # 0x14000c458
   140001076:	xor    eax,eax
   140001078:	mov    rdi,rdx
   14000107b:	mov    QWORD PTR [rsp+0x28],rdx
   140001080:	lea    rdx,[rsp+0x20]
   140001085:	repnz scas al,BYTE PTR es:[rdi]
   140001087:	not    rcx
   14000108a:	dec    rcx
   14000108d:	mov    DWORD PTR [rsp+0x20],ecx
   140001091:	lea    rcx,[rsp+0x60]
   140001096:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000109b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400010a1:	call   QWORD PTR [rip+0xb2e1]        # 0x14000c388
   1400010a7:	lea    rdx,[rsp+0x78]
   1400010ac:	mov    rcx,rax
   1400010af:	call   QWORD PTR [rip+0xb2e3]        # 0x14000c398
   1400010b5:	lea    rdx,[rsp+0x30]
   1400010ba:	mov    rcx,rax
   1400010bd:	call   QWORD PTR [rip+0xb2cd]        # 0x14000c390
   1400010c3:	lea    rcx,[rsp+0x78]
   1400010c8:	movzx  edi,al
   1400010cb:	call   QWORD PTR [rip+0xb2e7]        # 0x14000c3b8
   1400010d1:	lea    rcx,[rsp+0x20]
   1400010d6:	call   QWORD PTR [rip+0xb2dc]        # 0x14000c3b8
   1400010dc:	mov    eax,0x62
   1400010e1:	test   dil,dil
   1400010e4:	cmovne ebp,eax
   1400010e7:	lea    rcx,[r12+0x8]
   1400010ec:	lea    r8d,[rax-0x61]
   1400010f0:	cmp    ebp,eax
   1400010f2:	mov    rdx,rbx
   1400010f5:	sete   r9b
   1400010f9:	call   0x140007120
   1400010fe:	lea    rcx,[r12+0xf0]
   140001106:	mov    rdx,rsi
   140001109:	call   QWORD PTR [rip+0xb291]        # 0x14000c3a0
   14000110f:	lea    rcx,[r12+0xf8]
   140001117:	call   QWORD PTR [rip+0xb28b]        # 0x14000c3a8
   14000111d:	mov    rax,QWORD PTR [r12]
   140001121:	mov    edx,ebp
   140001123:	mov    rcx,r12
   140001126:	call   QWORD PTR [rax+0x20]
   140001129:	lea    rcx,[rsp+0x60]
   14000112e:	movzx  edi,al
   140001131:	call   QWORD PTR [rip+0xb279]        # 0x14000c3b0
   140001137:	mov    rbx,QWORD PTR [rsp+0x68]
   14000113c:	mov    rbp,QWORD PTR [rsp+0x70]
   140001141:	mov    al,dil
   140001144:	add    rsp,0x40
   140001148:	pop    r12
   14000114a:	pop    rdi
   14000114b:	pop    rsi
   14000114c:	ret    
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x18],rbx
   140001155:	mov    QWORD PTR [rsp+0x20],rsi
   14000115a:	push   rdi
   14000115b:	sub    rsp,0x20
   14000115f:	mov    edi,edx
   140001161:	xor    edx,edx
   140001163:	mov    rsi,rcx
   140001166:	cmp    edi,0x58
   140001169:	mov    rbx,r8
   14000116c:	setne  dl
   14000116f:	add    rcx,0x8
   140001173:	call   0x140007a20
   140001178:	test   al,al
   14000117a:	jne    0x14000118c
   14000117c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001181:	mov    rsi,QWORD PTR [rsp+0x48]
   140001186:	add    rsp,0x20
   14000118a:	pop    rdi
   14000118b:	ret    
   14000118c:	lea    rdx,[rsi+0x18]
   140001190:	lea    rcx,[rsp+0x30]
   140001195:	call   QWORD PTR [rip+0xb225]        # 0x14000c3c0
   14000119b:	lea    rdx,[rsp+0x30]
   1400011a0:	mov    rcx,rbx
   1400011a3:	call   QWORD PTR [rip+0xb1f7]        # 0x14000c3a0
   1400011a9:	lea    rcx,[rsp+0x30]
   1400011ae:	call   QWORD PTR [rip+0xb204]        # 0x14000c3b8
   1400011b4:	cmp    edi,0x59
   1400011b7:	jne    0x1400011e6
   1400011b9:	lea    r8d,[rdi-0x58]
   1400011bd:	lea    rdx,[rsp+0x30]
   1400011c2:	or     r9d,0xffffffff
   1400011c6:	mov    rcx,rbx
   1400011c9:	call   QWORD PTR [rip+0xb191]        # 0x14000c360
   1400011cf:	mov    rcx,rbx
   1400011d2:	mov    rdx,rax
   1400011d5:	call   QWORD PTR [rip+0xb1c5]        # 0x14000c3a0
   1400011db:	lea    rcx,[rsp+0x30]
   1400011e0:	call   QWORD PTR [rip+0xb1d2]        # 0x14000c3b8
   1400011e6:	lea    rcx,[rsp+0x38]
   1400011eb:	mov    dl,0x2f
   1400011ed:	call   QWORD PTR [rip+0xb185]        # 0x14000c378
   1400011f3:	mov    rcx,rbx
   1400011f6:	movzx  edx,WORD PTR [rax]
   1400011f9:	call   QWORD PTR [rip+0xb169]        # 0x14000c368
   1400011ff:	mov    edi,DWORD PTR [rsi+0x84]
   140001205:	test   dil,0x1
   140001209:	je     0x140001224
   14000120b:	lea    rcx,[rsp+0x38]
   140001210:	mov    dl,0x67
   140001212:	call   QWORD PTR [rip+0xb160]        # 0x14000c378
   140001218:	mov    rcx,rbx
   14000121b:	movzx  edx,WORD PTR [rax]
   14000121e:	call   QWORD PTR [rip+0xb144]        # 0x14000c368
   140001224:	test   dil,0x2
   140001228:	je     0x140001243
   14000122a:	lea    rcx,[rsp+0x38]
   14000122f:	mov    dl,0x69
   140001231:	call   QWORD PTR [rip+0xb141]        # 0x14000c378
   140001237:	mov    rcx,rbx
   14000123a:	movzx  edx,WORD PTR [rax]
   14000123d:	call   QWORD PTR [rip+0xb125]        # 0x14000c368
   140001243:	test   dil,0x4
   140001247:	je     0x140001262
   140001249:	lea    rcx,[rsp+0x38]
   14000124e:	mov    dl,0x6d
   140001250:	call   QWORD PTR [rip+0xb122]        # 0x14000c378
   140001256:	mov    rcx,rbx
   140001259:	movzx  edx,WORD PTR [rax]
   14000125c:	call   QWORD PTR [rip+0xb106]        # 0x14000c368
   140001262:	cmp    DWORD PTR [rsi+0x84],0x0
   140001269:	jne    0x140001284
   14000126b:	lea    rcx,[rsp+0x38]
   140001270:	mov    dl,0x20
   140001272:	call   QWORD PTR [rip+0xb100]        # 0x14000c378
   140001278:	mov    rcx,rbx
   14000127b:	movzx  edx,WORD PTR [rax]
   14000127e:	call   QWORD PTR [rip+0xb0e4]        # 0x14000c368
   140001284:	mov    rbx,QWORD PTR [rsp+0x40]
   140001289:	mov    rsi,QWORD PTR [rsp+0x48]
   14000128e:	mov    al,0x1
   140001290:	add    rsp,0x20
   140001294:	pop    rdi
   140001295:	ret    
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400012a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400012aa:	push   rdi
   1400012ab:	sub    rsp,0x30
   1400012af:	or     rcx,0xffffffffffffffff
   1400012b3:	mov    rbx,rdx
   1400012b6:	lea    rdx,[rip+0xb1a7]        # 0x14000c464
   1400012bd:	mov    QWORD PTR [rsp+0x28],rdx
   1400012c2:	mov    rdi,rdx
   1400012c5:	xor    eax,eax
   1400012c7:	repnz scas al,BYTE PTR es:[rdi]
   1400012c9:	lea    rdx,[rsp+0x20]
   1400012ce:	mov    rsi,r8
   1400012d1:	not    rcx
   1400012d4:	dec    rcx
   1400012d7:	mov    DWORD PTR [rsp+0x20],ecx
   1400012db:	mov    rcx,r8
   1400012de:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400012e3:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400012e9:	call   QWORD PTR [rip+0xb051]        # 0x14000c340
   1400012ef:	movzx  edx,WORD PTR [rbx]
   1400012f2:	lea    rcx,[rsp+0x58]
   1400012f7:	mov    r8d,0x10
   1400012fd:	call   QWORD PTR [rip+0xb045]        # 0x14000c348
   140001303:	mov    rdx,QWORD PTR [rsp+0x58]
   140001308:	mov    ecx,DWORD PTR [rdx+0x4]
   14000130b:	sub    ecx,0x1
   14000130e:	je     0x14000133e
   140001310:	sub    ecx,0x1
   140001313:	je     0x140001335
   140001315:	cmp    ecx,0x1
   140001318:	jne    0x140001378
   14000131a:	lea    rcx,[rsp+0x48]
   14000131f:	mov    dl,0x30
   140001321:	call   QWORD PTR [rip+0xb051]        # 0x14000c378
   140001327:	mov    rcx,rsi
   14000132a:	movzx  edx,WORD PTR [rax]
   14000132d:	call   QWORD PTR [rip+0xb01d]        # 0x14000c350
   140001333:	jmp    0x140001378
   140001335:	lea    rdx,[rip+0xb124]        # 0x14000c460
   14000133c:	jmp    0x140001345
   14000133e:	lea    rdx,[rip+0xb117]        # 0x14000c45c
   140001345:	or     rcx,0xffffffffffffffff
   140001349:	mov    QWORD PTR [rsp+0x28],rdx
   14000134e:	mov    rdi,rdx
   140001351:	xor    eax,eax
   140001353:	lea    rdx,[rsp+0x20]
   140001358:	repnz scas al,BYTE PTR es:[rdi]
   14000135a:	not    rcx
   14000135d:	dec    rcx
   140001360:	mov    DWORD PTR [rsp+0x20],ecx
   140001364:	mov    rcx,rsi
   140001367:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000136c:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001372:	call   QWORD PTR [rip+0xafc8]        # 0x14000c340
   140001378:	lea    rdx,[rsp+0x58]
   14000137d:	mov    rcx,rsi
   140001380:	call   QWORD PTR [rip+0xafd2]        # 0x14000c358
   140001386:	lea    rcx,[rsp+0x58]
   14000138b:	call   QWORD PTR [rip+0xb027]        # 0x14000c3b8
   140001391:	mov    rbx,QWORD PTR [rsp+0x40]
   140001396:	mov    rsi,QWORD PTR [rsp+0x50]
   14000139b:	add    rsp,0x30
   14000139f:	pop    rdi
   1400013a0:	ret    
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	rex push rdi
   1400013b2:	sub    rsp,0x30
   1400013b6:	mov    rdx,rcx
   1400013b9:	or     rcx,0xffffffffffffffff
   1400013bd:	lea    r8,[rip+0xb0d4]        # 0x14000c498
   1400013c4:	mov    QWORD PTR [rsp+0x28],r8
   1400013c9:	mov    rdi,r8
   1400013cc:	xor    eax,eax
   1400013ce:	repnz scas al,BYTE PTR es:[rdi]
   1400013d0:	not    rcx
   1400013d3:	dec    rcx
   1400013d6:	mov    DWORD PTR [rsp+0x20],ecx
   1400013da:	lea    rcx,[rdx+0xf8]
   1400013e1:	lea    rdx,[rsp+0x20]
   1400013e6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400013eb:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400013f1:	call   QWORD PTR [rip+0xaf49]        # 0x14000c340
   1400013f7:	add    rsp,0x30
   1400013fb:	pop    rdi
   1400013fc:	ret    
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x10],rbx
   140001405:	mov    QWORD PTR [rsp+0x18],rbp
   14000140a:	push   rsi
   14000140b:	push   rdi
   14000140c:	push   r12
   14000140e:	sub    rsp,0x30
   140001412:	mov    rbp,rcx
   140001415:	or     rcx,0xffffffffffffffff
   140001419:	mov    rbx,rdx
   14000141c:	lea    rdx,[rip+0xb095]        # 0x14000c4b8
   140001423:	xor    eax,eax
   140001425:	add    rbp,0xf8
   14000142c:	mov    QWORD PTR [rsp+0x28],rdx
   140001431:	mov    rdi,rdx
   140001434:	lea    rdx,[rsp+0x20]
   140001439:	repnz scas al,BYTE PTR es:[rdi]
   14000143b:	mov    r12,r9
   14000143e:	mov    rsi,r8
   140001441:	not    rcx
   140001444:	dec    rcx
   140001447:	mov    DWORD PTR [rsp+0x20],ecx
   14000144b:	mov    rcx,rbp
   14000144e:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140001453:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001459:	call   QWORD PTR [rip+0xaee1]        # 0x14000c340
   14000145f:	mov    rdx,rbx
   140001462:	mov    rcx,rbp
   140001465:	call   QWORD PTR [rip+0xaeed]        # 0x14000c358
   14000146b:	lea    rcx,[rsp+0x50]
   140001470:	mov    dl,0x20
   140001472:	call   QWORD PTR [rip+0xaf00]        # 0x14000c378
   140001478:	mov    rcx,rbp
   14000147b:	movzx  edx,WORD PTR [rax]
   14000147e:	call   QWORD PTR [rip+0xaee4]        # 0x14000c368
   140001484:	mov    rdx,rsi
   140001487:	mov    rcx,rbp
   14000148a:	call   QWORD PTR [rip+0xaec8]        # 0x14000c358
   140001490:	or     rcx,0xffffffffffffffff
   140001494:	lea    rdx,[rip+0xb011]        # 0x14000c4ac
   14000149b:	mov    QWORD PTR [rsp+0x28],rdx
   1400014a0:	mov    rdi,rdx
   1400014a3:	xor    eax,eax
   1400014a5:	repnz scas al,BYTE PTR es:[rdi]
   1400014a7:	lea    rdx,[rsp+0x20]
   1400014ac:	not    rcx
   1400014af:	dec    rcx
   1400014b2:	mov    DWORD PTR [rsp+0x20],ecx
   1400014b6:	mov    rcx,rbp
   1400014b9:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400014be:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400014c4:	call   QWORD PTR [rip+0xae76]        # 0x14000c340
   1400014ca:	mov    rdx,r12
   1400014cd:	mov    rcx,rbp
   1400014d0:	call   QWORD PTR [rip+0xae82]        # 0x14000c358
   1400014d6:	lea    rcx,[rsp+0x50]
   1400014db:	mov    dl,0xa
   1400014dd:	call   QWORD PTR [rip+0xae95]        # 0x14000c378
   1400014e3:	mov    rcx,rbp
   1400014e6:	movzx  edx,WORD PTR [rax]
   1400014e9:	call   QWORD PTR [rip+0xae79]        # 0x14000c368
   1400014ef:	mov    rbx,QWORD PTR [rsp+0x58]
   1400014f4:	mov    rbp,QWORD PTR [rsp+0x60]
   1400014f9:	add    rsp,0x30
   1400014fd:	pop    r12
   1400014ff:	pop    rdi
   140001500:	pop    rsi
   140001501:	ret    
   140001502:	int3   
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	rex push rbx
   140001512:	sub    rsp,0x20
   140001516:	lea    rax,[rip+0xaf53]        # 0x14000c470
   14000151d:	mov    rbx,rcx
   140001520:	add    rcx,0xf8
   140001527:	mov    QWORD PTR [rcx-0xf8],rax
   14000152e:	call   QWORD PTR [rip+0xae84]        # 0x14000c3b8
   140001534:	lea    rcx,[rbx+0xf0]
   14000153b:	call   QWORD PTR [rip+0xae77]        # 0x14000c3b8
   140001541:	lea    rcx,[rbx+0xa0]
   140001548:	call   0x14000b2d0
   14000154d:	lea    r11,[rip+0xaee4]        # 0x14000c438
   140001554:	lea    rcx,[rbx+0x20]
   140001558:	mov    QWORD PTR [rbx],r11
   14000155b:	call   QWORD PTR [rip+0xae57]        # 0x14000c3b8
   140001561:	lea    rcx,[rbx+0x18]
   140001565:	call   QWORD PTR [rip+0xae4d]        # 0x14000c3b8
   14000156b:	lea    rcx,[rbx+0x10]
   14000156f:	add    rsp,0x20
   140001573:	pop    rbx
   140001574:	rex.W jmp QWORD PTR [rip+0xae3d]        # 0x14000c3b8
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    QWORD PTR [rsp+0x8],rbx
   140001585:	push   rdi
   140001586:	sub    rsp,0x20
   14000158a:	mov    ebx,edx
   14000158c:	mov    rdi,rcx
   14000158f:	call   0x140001510
   140001594:	test   bl,0x1
   140001597:	je     0x1400015a1
   140001599:	mov    rcx,rdi
   14000159c:	call   0x14000b416
   1400015a1:	mov    rax,rdi
   1400015a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015a9:	add    rsp,0x20
   1400015ad:	pop    rdi
   1400015ae:	ret    
   1400015af:	int3   
   1400015b0:	mov    rax,rsp
   1400015b3:	mov    QWORD PTR [rax+0x8],rcx
   1400015b7:	push   r12
   1400015b9:	push   r13
   1400015bb:	push   r14
   1400015bd:	sub    rsp,0x50
   1400015c1:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400015ca:	mov    QWORD PTR [rax+0x10],rbx
   1400015ce:	mov    QWORD PTR [rax+0x18],rsi
   1400015d2:	mov    QWORD PTR [rax+0x20],rdi
   1400015d6:	mov    r14,rdx
   1400015d9:	mov    rsi,rcx
   1400015dc:	xor    ebx,ebx
   1400015de:	mov    DWORD PTR [rax-0x48],ebx
   1400015e1:	xor    eax,eax
   1400015e3:	or     rcx,0xffffffffffffffff
   1400015e7:	mov    rdi,rdx
   1400015ea:	repnz scas al,BYTE PTR es:[rdi]
   1400015ec:	not    rcx
   1400015ef:	lea    r13,[rcx-0x1]
   1400015f3:	mov    rax,QWORD PTR [rsi]
   1400015f6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015fa:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400015ff:	test   rdi,rdi
   140001602:	jle    0x14000160e
   140001604:	cmp    rdi,r13
   140001607:	jle    0x14000160e
   140001609:	sub    rdi,r13
   14000160c:	jmp    0x140001610
   14000160e:	xor    edi,edi
   140001610:	mov    r12,rsi
   140001613:	mov    QWORD PTR [rsp+0x38],rsi
   140001618:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000161d:	test   rcx,rcx
   140001620:	je     0x14000162c
   140001622:	add    rcx,0x8
   140001626:	call   QWORD PTR [rip+0xaa14]        # 0x14000c040
   14000162c:	mov    rax,QWORD PTR [rsi]
   14000162f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001633:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001637:	jne    0x140001649
   140001639:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000163e:	test   rcx,rcx
   140001641:	je     0x140001649
   140001643:	call   QWORD PTR [rip+0xa9ff]        # 0x14000c048
   140001649:	mov    rax,QWORD PTR [rsi]
   14000164c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001650:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001654:	sete   al
   140001657:	test   al,al
   140001659:	jne    0x140001665
   14000165b:	mov    ebx,0x4
   140001660:	jmp    0x140001734
   140001665:	mov    rax,QWORD PTR [rsi]
   140001668:	movsxd rcx,DWORD PTR [rax+0x4]
   14000166c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001670:	and    eax,0x1c0
   140001675:	cmp    eax,0x40
   140001678:	je     0x1400016b8
   14000167a:	nop    WORD PTR [rax+rax*1+0x0]
   140001680:	test   rdi,rdi
   140001683:	jle    0x1400016b4
   140001685:	mov    rax,QWORD PTR [rsi]
   140001688:	movsxd rcx,DWORD PTR [rax+0x4]
   14000168c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001691:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001696:	call   QWORD PTR [rip+0xa9d4]        # 0x14000c070
   14000169c:	cmp    eax,0xffffffff
   14000169f:	jne    0x1400016aa
   1400016a1:	or     ebx,0x4
   1400016a4:	mov    DWORD PTR [rsp+0x20],ebx
   1400016a8:	jmp    0x1400016b4
   1400016aa:	dec    rdi
   1400016ad:	mov    QWORD PTR [rsp+0x28],rdi
   1400016b2:	jmp    0x140001680
   1400016b4:	test   ebx,ebx
   1400016b6:	jne    0x140001714
   1400016b8:	mov    rax,QWORD PTR [rsi]
   1400016bb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016bf:	mov    r8,r13
   1400016c2:	mov    rdx,r14
   1400016c5:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400016ca:	call   QWORD PTR [rip+0xa998]        # 0x14000c068
   1400016d0:	cmp    rax,r13
   1400016d3:	je     0x1400016e0
   1400016d5:	mov    ebx,0x4
   1400016da:	mov    DWORD PTR [rsp+0x20],ebx
   1400016de:	jmp    0x140001714
   1400016e0:	test   rdi,rdi
   1400016e3:	jle    0x140001714
   1400016e5:	mov    rax,QWORD PTR [rsi]
   1400016e8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400016ec:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400016f1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400016f6:	call   QWORD PTR [rip+0xa974]        # 0x14000c070
   1400016fc:	cmp    eax,0xffffffff
   1400016ff:	jne    0x14000170a
   140001701:	or     ebx,0x4
   140001704:	mov    DWORD PTR [rsp+0x20],ebx
   140001708:	jmp    0x140001714
   14000170a:	dec    rdi
   14000170d:	mov    QWORD PTR [rsp+0x28],rdi
   140001712:	jmp    0x1400016e0
   140001714:	mov    rax,QWORD PTR [rsi]
   140001717:	movsxd rcx,DWORD PTR [rax+0x4]
   14000171b:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001724:	jmp    0x140001734
   140001726:	mov    rsi,QWORD PTR [rsp+0x70]
   14000172b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000172f:	mov    r12,QWORD PTR [rsp+0x38]
   140001734:	mov    rax,QWORD PTR [rsi]
   140001737:	movsxd rcx,DWORD PTR [rax+0x4]
   14000173b:	add    rcx,rsi
   14000173e:	xor    r8d,r8d
   140001741:	mov    edx,ebx
   140001743:	call   QWORD PTR [rip+0xa917]        # 0x14000c060
   140001749:	call   QWORD PTR [rip+0xa909]        # 0x14000c058
   14000174f:	test   al,al
   140001751:	jne    0x14000175c
   140001753:	mov    rcx,r12
   140001756:	call   QWORD PTR [rip+0xa8f4]        # 0x14000c050
   14000175c:	mov    rax,QWORD PTR [r12]
   140001760:	movsxd rcx,DWORD PTR [rax+0x4]
   140001764:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001769:	test   rcx,rcx
   14000176c:	je     0x14000177d
   14000176e:	add    rcx,0x8
   140001772:	call   QWORD PTR [rip+0xa928]        # 0x14000c0a0
   140001778:	mov    rax,rsi
   14000177b:	jmp    0x140001780
   14000177d:	mov    rax,rsi
   140001780:	lea    r11,[rsp+0x50]
   140001785:	mov    rbx,QWORD PTR [r11+0x28]
   140001789:	mov    rsi,QWORD PTR [r11+0x30]
   14000178d:	mov    rdi,QWORD PTR [r11+0x38]
   140001791:	mov    rsp,r11
   140001794:	pop    r14
   140001796:	pop    r13
   140001798:	pop    r12
   14000179a:	ret    
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    rax,rsp
   1400017a3:	mov    QWORD PTR [rax+0x8],rcx
   1400017a7:	push   r12
   1400017a9:	push   r13
   1400017ab:	push   r14
   1400017ad:	sub    rsp,0x50
   1400017b1:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400017ba:	mov    QWORD PTR [rax+0x10],rbx
   1400017be:	mov    QWORD PTR [rax+0x18],rsi
   1400017c2:	mov    QWORD PTR [rax+0x20],rdi
   1400017c6:	movzx  r14d,dl
   1400017ca:	mov    rdi,rcx
   1400017cd:	xor    esi,esi
   1400017cf:	mov    DWORD PTR [rax-0x48],esi
   1400017d2:	mov    r13,rcx
   1400017d5:	mov    QWORD PTR [rsp+0x38],rcx
   1400017da:	mov    rax,QWORD PTR [rcx]
   1400017dd:	movsxd r8,DWORD PTR [rax+0x4]
   1400017e1:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   1400017e6:	test   rcx,rcx
   1400017e9:	je     0x1400017f5
   1400017eb:	add    rcx,0x8
   1400017ef:	call   QWORD PTR [rip+0xa84b]        # 0x14000c040
   1400017f5:	mov    rax,QWORD PTR [rdi]
   1400017f8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400017fc:	cmp    DWORD PTR [rcx+rdi*1+0x10],esi
   140001800:	jne    0x140001812
   140001802:	mov    rcx,QWORD PTR [rcx+rdi*1+0x50]
   140001807:	test   rcx,rcx
   14000180a:	je     0x140001812
   14000180c:	call   QWORD PTR [rip+0xa836]        # 0x14000c048
   140001812:	mov    rax,QWORD PTR [rdi]
   140001815:	movsxd rbx,DWORD PTR [rax+0x4]
   140001819:	cmp    DWORD PTR [rbx+rdi*1+0x10],esi
   14000181d:	sete   al
   140001820:	test   al,al
   140001822:	je     0x1400018fa
   140001828:	mov    rbx,QWORD PTR [rbx+rdi*1+0x28]
   14000182d:	cmp    rbx,0x1
   140001831:	jg     0x140001837
   140001833:	xor    ebx,ebx
   140001835:	jmp    0x14000183a
   140001837:	dec    rbx
   14000183a:	mov    rax,QWORD PTR [rdi]
   14000183d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001841:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140001845:	and    eax,0x1c0
   14000184a:	cmp    eax,0x40
   14000184d:	je     0x14000188e
   14000184f:	mov    r12d,0x4
   140001855:	test   esi,esi
   140001857:	jne    0x1400018ea
   14000185d:	test   rbx,rbx
   140001860:	jle    0x140001894
   140001862:	mov    rax,QWORD PTR [rdi]
   140001865:	movsxd rcx,DWORD PTR [rax+0x4]
   140001869:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   14000186e:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140001873:	call   QWORD PTR [rip+0xa7f7]        # 0x14000c070
   140001879:	cmp    eax,0xffffffff
   14000187c:	cmove  esi,r12d
   140001880:	mov    DWORD PTR [rsp+0x20],esi
   140001884:	dec    rbx
   140001887:	mov    QWORD PTR [rsp+0x28],rbx
   14000188c:	jmp    0x140001855
   14000188e:	mov    r12d,0x4
   140001894:	mov    rax,QWORD PTR [rdi]
   140001897:	movsxd rcx,DWORD PTR [rax+0x4]
   14000189b:	movzx  edx,r14b
   14000189f:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400018a4:	call   QWORD PTR [rip+0xa7c6]        # 0x14000c070
   1400018aa:	cmp    eax,0xffffffff
   1400018ad:	cmove  esi,r12d
   1400018b1:	mov    DWORD PTR [rsp+0x20],esi
   1400018b5:	test   esi,esi
   1400018b7:	jne    0x1400018ea
   1400018b9:	test   rbx,rbx
   1400018bc:	jle    0x1400018ea
   1400018be:	mov    rax,QWORD PTR [rdi]
   1400018c1:	movsxd rcx,DWORD PTR [rax+0x4]
   1400018c5:	movzx  edx,BYTE PTR [rcx+rdi*1+0x58]
   1400018ca:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400018cf:	call   QWORD PTR [rip+0xa79b]        # 0x14000c070
   1400018d5:	cmp    eax,0xffffffff
   1400018d8:	cmove  esi,r12d
   1400018dc:	mov    DWORD PTR [rsp+0x20],esi
   1400018e0:	dec    rbx
   1400018e3:	mov    QWORD PTR [rsp+0x28],rbx
   1400018e8:	jmp    0x1400018b5
   1400018ea:	jmp    0x1400018fa
   1400018ec:	mov    rdi,QWORD PTR [rsp+0x70]
   1400018f1:	mov    esi,DWORD PTR [rsp+0x20]
   1400018f5:	mov    r13,QWORD PTR [rsp+0x38]
   1400018fa:	mov    rax,QWORD PTR [rdi]
   1400018fd:	movsxd rcx,DWORD PTR [rax+0x4]
   140001901:	mov    QWORD PTR [rcx+rdi*1+0x28],0x0
   14000190a:	mov    rax,QWORD PTR [rdi]
   14000190d:	movsxd rcx,DWORD PTR [rax+0x4]
   140001911:	add    rcx,rdi
   140001914:	xor    r8d,r8d
   140001917:	mov    edx,esi
   140001919:	call   QWORD PTR [rip+0xa741]        # 0x14000c060
   14000191f:	call   QWORD PTR [rip+0xa733]        # 0x14000c058
   140001925:	test   al,al
   140001927:	jne    0x140001932
   140001929:	mov    rcx,r13
   14000192c:	call   QWORD PTR [rip+0xa71e]        # 0x14000c050
   140001932:	mov    rax,QWORD PTR [r13+0x0]
   140001936:	movsxd rcx,DWORD PTR [rax+0x4]
   14000193a:	mov    rcx,QWORD PTR [rcx+r13*1+0x48]
   14000193f:	test   rcx,rcx
   140001942:	je     0x140001953
   140001944:	add    rcx,0x8
   140001948:	call   QWORD PTR [rip+0xa752]        # 0x14000c0a0
   14000194e:	mov    rax,rdi
   140001951:	jmp    0x140001956
   140001953:	mov    rax,rdi
   140001956:	lea    r11,[rsp+0x50]
   14000195b:	mov    rbx,QWORD PTR [r11+0x28]
   14000195f:	mov    rsi,QWORD PTR [r11+0x30]
   140001963:	mov    rdi,QWORD PTR [r11+0x38]
   140001967:	mov    rsp,r11
   14000196a:	pop    r14
   14000196c:	pop    r13
   14000196e:	pop    r12
   140001970:	ret    
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    QWORD PTR [rsp+0x10],rbx
   140001985:	push   rbp
   140001986:	push   rsi
   140001987:	push   rdi
   140001988:	push   r12
   14000198a:	push   r13
   14000198c:	push   r14
   14000198e:	push   r15
   140001990:	sub    rsp,0x190
   140001997:	mov    rdi,rdx
   14000199a:	mov    rsi,rcx
   14000199d:	call   QWORD PTR [rip+0xaa25]        # 0x14000c3c8
   1400019a3:	lea    rcx,[rsp+0x30]
   1400019a8:	mov    rdx,rdi
   1400019ab:	call   QWORD PTR [rip+0xaa0f]        # 0x14000c3c0
   1400019b1:	lea    rcx,[rsp+0x30]
   1400019b6:	mov    DWORD PTR [rsp+0x38],0x0
   1400019be:	call   QWORD PTR [rip+0xa964]        # 0x14000c328
   1400019c4:	lea    rcx,[rsp+0x30]
   1400019c9:	mov    QWORD PTR [rsp+0x40],rax
   1400019ce:	call   QWORD PTR [rip+0xa95c]        # 0x14000c330
   1400019d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400019d9:	mov    ecx,DWORD PTR [rsp+0x38]
   1400019dd:	mov    rdx,rax
   1400019e0:	mov    QWORD PTR [rsp+0x48],rax
   1400019e5:	lea    rbp,[rip+0xab4c]        # 0x14000c538
   1400019ec:	lea    r12,[rip+0xab41]        # 0x14000c534
   1400019f3:	lea    r13,[rip+0xab36]        # 0x14000c530
   1400019fa:	lea    r14,[rip+0xab2b]        # 0x14000c52c
   140001a01:	lea    r15,[rip+0xab20]        # 0x14000c528
   140001a08:	lea    rdi,[rip+0xab15]        # 0x14000c524
   140001a0f:	nop
   140001a10:	mov    eax,ecx
   140001a12:	inc    ecx
   140001a14:	mov    DWORD PTR [rsp+0x38],ecx
   140001a18:	test   eax,eax
   140001a1a:	jne    0x140001dda
   140001a20:	cmp    rbx,rdx
   140001a23:	je     0x140001dda
   140001a29:	nop    DWORD PTR [rax+0x0]
   140001a30:	test   ecx,ecx
   140001a32:	je     0x140001dc2
   140001a38:	lea    rcx,[rsp+0x1d0]
   140001a40:	mov    dl,0x22
   140001a42:	call   QWORD PTR [rip+0xa930]        # 0x14000c378
   140001a48:	movzx  eax,WORD PTR [rax]
   140001a4b:	cmp    WORD PTR [rbx],ax
   140001a4e:	jne    0x140001a85
   140001a50:	or     rcx,0xffffffffffffffff
   140001a54:	xor    eax,eax
   140001a56:	mov    rdi,rbp
   140001a59:	repnz scas al,BYTE PTR es:[rdi]
   140001a5b:	mov    QWORD PTR [rsp+0x68],rbp
   140001a60:	lea    rdx,[rsp+0x180]
   140001a68:	not    rcx
   140001a6b:	dec    rcx
   140001a6e:	mov    DWORD PTR [rsp+0x60],ecx
   140001a72:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140001a77:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   140001a80:	jmp    0x140001d88
   140001a85:	lea    rcx,[rsp+0x1e0]
   140001a8d:	mov    dl,0x5c
   140001a8f:	call   QWORD PTR [rip+0xa8e3]        # 0x14000c378
   140001a95:	movzx  eax,WORD PTR [rax]
   140001a98:	cmp    WORD PTR [rbx],ax
   140001a9b:	jne    0x140001ad2
   140001a9d:	or     rcx,0xffffffffffffffff
   140001aa1:	xor    eax,eax
   140001aa3:	mov    rdi,r12
   140001aa6:	repnz scas al,BYTE PTR es:[rdi]
   140001aa8:	mov    QWORD PTR [rsp+0x78],r12
   140001aad:	lea    rdx,[rsp+0xf0]
   140001ab5:	not    rcx
   140001ab8:	dec    rcx
   140001abb:	mov    DWORD PTR [rsp+0x70],ecx
   140001abf:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140001ac4:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140001acd:	jmp    0x140001d88
   140001ad2:	lea    rcx,[rsp+0x1e8]
   140001ada:	mov    dl,0x22
   140001adc:	call   QWORD PTR [rip+0xa896]        # 0x14000c378
   140001ae2:	movzx  eax,WORD PTR [rax]
   140001ae5:	cmp    WORD PTR [rbx],ax
   140001ae8:	jne    0x140001b28
   140001aea:	or     rcx,0xffffffffffffffff
   140001aee:	xor    eax,eax
   140001af0:	mov    rdi,rbp
   140001af3:	repnz scas al,BYTE PTR es:[rdi]
   140001af5:	mov    QWORD PTR [rsp+0xe8],rbp
   140001afd:	lea    rdx,[rsp+0x110]
   140001b05:	not    rcx
   140001b08:	dec    rcx
   140001b0b:	mov    DWORD PTR [rsp+0xe0],ecx
   140001b12:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   140001b1a:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   140001b23:	jmp    0x140001d88
   140001b28:	lea    rcx,[rsp+0x2a]
   140001b2d:	mov    dl,0x8
   140001b2f:	call   QWORD PTR [rip+0xa843]        # 0x14000c378
   140001b35:	movzx  eax,WORD PTR [rax]
   140001b38:	cmp    WORD PTR [rbx],ax
   140001b3b:	jne    0x140001b7b
   140001b3d:	or     rcx,0xffffffffffffffff
   140001b41:	xor    eax,eax
   140001b43:	mov    rdi,r13
   140001b46:	repnz scas al,BYTE PTR es:[rdi]
   140001b48:	mov    QWORD PTR [rsp+0xb8],r13
   140001b50:	lea    rdx,[rsp+0x150]
   140001b58:	not    rcx
   140001b5b:	dec    rcx
   140001b5e:	mov    DWORD PTR [rsp+0xb0],ecx
   140001b65:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   140001b6d:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   140001b76:	jmp    0x140001d88
   140001b7b:	lea    rcx,[rsp+0x24]
   140001b80:	mov    dl,0xc
   140001b82:	call   QWORD PTR [rip+0xa7f0]        # 0x14000c378
   140001b88:	movzx  eax,WORD PTR [rax]
   140001b8b:	cmp    WORD PTR [rbx],ax
   140001b8e:	jne    0x140001bce
   140001b90:	or     rcx,0xffffffffffffffff
   140001b94:	xor    eax,eax
   140001b96:	mov    rdi,r14
   140001b99:	repnz scas al,BYTE PTR es:[rdi]
   140001b9b:	mov    QWORD PTR [rsp+0x98],r14
   140001ba3:	lea    rdx,[rsp+0x130]
   140001bab:	not    rcx
   140001bae:	dec    rcx
   140001bb1:	mov    DWORD PTR [rsp+0x90],ecx
   140001bb8:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   140001bc0:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   140001bc9:	jmp    0x140001d88
   140001bce:	lea    rcx,[rsp+0x28]
   140001bd3:	mov    dl,0xa
   140001bd5:	call   QWORD PTR [rip+0xa79d]        # 0x14000c378
   140001bdb:	movzx  eax,WORD PTR [rax]
   140001bde:	cmp    WORD PTR [rbx],ax
   140001be1:	jne    0x140001c21
   140001be3:	or     rcx,0xffffffffffffffff
   140001be7:	xor    eax,eax
   140001be9:	mov    rdi,r15
   140001bec:	repnz scas al,BYTE PTR es:[rdi]
   140001bee:	mov    QWORD PTR [rsp+0xd8],r15
   140001bf6:	lea    rdx,[rsp+0x170]
   140001bfe:	not    rcx
   140001c01:	dec    rcx
   140001c04:	mov    DWORD PTR [rsp+0xd0],ecx
   140001c0b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140001c13:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   140001c1c:	jmp    0x140001d88
   140001c21:	lea    rcx,[rsp+0x20]
   140001c26:	mov    dl,0xd
   140001c28:	call   QWORD PTR [rip+0xa74a]        # 0x14000c378
   140001c2e:	movzx  eax,WORD PTR [rax]
   140001c31:	cmp    WORD PTR [rbx],ax
   140001c34:	jne    0x140001c82
   140001c36:	or     rcx,0xffffffffffffffff
   140001c3a:	xor    eax,eax
   140001c3c:	lea    rdx,[rsp+0x100]
   140001c44:	repnz scas al,BYTE PTR es:[rdi]
   140001c46:	lea    rdi,[rip+0xa8d7]        # 0x14000c524
   140001c4d:	not    rcx
   140001c50:	mov    QWORD PTR [rsp+0x58],rdi
   140001c55:	dec    rcx
   140001c58:	mov    DWORD PTR [rsp+0x50],ecx
   140001c5c:	mov    rcx,rsi
   140001c5f:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140001c64:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140001c6d:	call   QWORD PTR [rip+0xa6cd]        # 0x14000c340
   140001c73:	mov    ecx,DWORD PTR [rsp+0x38]
   140001c77:	dec    ecx
   140001c79:	mov    DWORD PTR [rsp+0x38],ecx
   140001c7d:	jmp    0x140001a30
   140001c82:	lea    rcx,[rsp+0x22]
   140001c87:	mov    dl,0x9
   140001c89:	call   QWORD PTR [rip+0xa6e9]        # 0x14000c378
   140001c8f:	movzx  eax,WORD PTR [rax]
   140001c92:	cmp    WORD PTR [rbx],ax
   140001c95:	jne    0x140001cdc
   140001c97:	lea    rdx,[rip+0xa882]        # 0x14000c520
   140001c9e:	or     rcx,0xffffffffffffffff
   140001ca2:	xor    eax,eax
   140001ca4:	mov    rdi,rdx
   140001ca7:	mov    QWORD PTR [rsp+0x88],rdx
   140001caf:	lea    rdx,[rsp+0x120]
   140001cb7:	repnz scas al,BYTE PTR es:[rdi]
   140001cb9:	not    rcx
   140001cbc:	dec    rcx
   140001cbf:	mov    DWORD PTR [rsp+0x80],ecx
   140001cc6:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140001cce:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140001cd7:	jmp    0x140001d88
   140001cdc:	lea    rcx,[rsp+0x26]
   140001ce1:	mov    dl,0xb
   140001ce3:	call   QWORD PTR [rip+0xa68f]        # 0x14000c378
   140001ce9:	movzx  eax,WORD PTR [rax]
   140001cec:	cmp    WORD PTR [rbx],ax
   140001cef:	jne    0x140001d33
   140001cf1:	lea    rdx,[rip+0xa824]        # 0x14000c51c
   140001cf8:	or     rcx,0xffffffffffffffff
   140001cfc:	xor    eax,eax
   140001cfe:	mov    rdi,rdx
   140001d01:	mov    QWORD PTR [rsp+0xa8],rdx
   140001d09:	lea    rdx,[rsp+0x140]
   140001d11:	repnz scas al,BYTE PTR es:[rdi]
   140001d13:	not    rcx
   140001d16:	dec    rcx
   140001d19:	mov    DWORD PTR [rsp+0xa0],ecx
   140001d20:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   140001d28:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   140001d31:	jmp    0x140001d88
   140001d33:	lea    rcx,[rsp+0x2c]
   140001d38:	xor    edx,edx
   140001d3a:	call   QWORD PTR [rip+0xa638]        # 0x14000c378
   140001d40:	movzx  eax,WORD PTR [rax]
   140001d43:	cmp    WORD PTR [rbx],ax
   140001d46:	jne    0x140001da7
   140001d48:	lea    rdx,[rip+0xa7c9]        # 0x14000c518
   140001d4f:	or     rcx,0xffffffffffffffff
   140001d53:	xor    eax,eax
   140001d55:	mov    rdi,rdx
   140001d58:	mov    QWORD PTR [rsp+0xc8],rdx
   140001d60:	lea    rdx,[rsp+0x160]
   140001d68:	repnz scas al,BYTE PTR es:[rdi]
   140001d6a:	not    rcx
   140001d6d:	dec    rcx
   140001d70:	mov    DWORD PTR [rsp+0xc0],ecx
   140001d77:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140001d7f:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   140001d88:	mov    rcx,rsi
   140001d8b:	call   QWORD PTR [rip+0xa5af]        # 0x14000c340
   140001d91:	mov    ecx,DWORD PTR [rsp+0x38]
   140001d95:	lea    rdi,[rip+0xa788]        # 0x14000c524
   140001d9c:	dec    ecx
   140001d9e:	mov    DWORD PTR [rsp+0x38],ecx
   140001da2:	jmp    0x140001a30
   140001da7:	movzx  edx,WORD PTR [rbx]
   140001daa:	mov    rcx,rsi
   140001dad:	call   QWORD PTR [rip+0xa5b5]        # 0x14000c368
   140001db3:	mov    ecx,DWORD PTR [rsp+0x38]
   140001db7:	dec    ecx
   140001db9:	mov    DWORD PTR [rsp+0x38],ecx
   140001dbd:	jmp    0x140001a30
   140001dc2:	mov    rbx,QWORD PTR [rsp+0x40]
   140001dc7:	mov    rdx,QWORD PTR [rsp+0x48]
   140001dcc:	add    rbx,0x2
   140001dd0:	mov    QWORD PTR [rsp+0x40],rbx
   140001dd5:	jmp    0x140001a10
   140001dda:	lea    rcx,[rsp+0x30]
   140001ddf:	call   QWORD PTR [rip+0xa5d3]        # 0x14000c3b8
   140001de5:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140001ded:	mov    rax,rsi
   140001df0:	add    rsp,0x190
   140001df7:	pop    r15
   140001df9:	pop    r14
   140001dfb:	pop    r13
   140001dfd:	pop    r12
   140001dff:	pop    rdi
   140001e00:	pop    rsi
   140001e01:	pop    rbp
   140001e02:	ret    
   140001e03:	int3   
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	rex push rbx
   140001e12:	sub    rsp,0x20
   140001e16:	movzx  ebx,cl
   140001e19:	mov    rcx,QWORD PTR [rip+0xa268]        # 0x14000c088
   140001e20:	lea    rdx,[rip+0xa851]        # 0x14000c678
   140001e27:	call   0x1400015b0
   140001e2c:	mov    rdx,QWORD PTR [rip+0xa24d]        # 0x14000c080
   140001e33:	mov    rcx,rax
   140001e36:	call   QWORD PTR [rip+0xa23c]        # 0x14000c078
   140001e3c:	test   bl,bl
   140001e3e:	je     0x140001f02
   140001e44:	mov    rcx,QWORD PTR [rip+0xa23d]        # 0x14000c088
   140001e4b:	lea    rdx,[rip+0xa7fe]        # 0x14000c650
   140001e52:	call   0x1400015b0
   140001e57:	mov    rdx,QWORD PTR [rip+0xa222]        # 0x14000c080
   140001e5e:	mov    rcx,rax
   140001e61:	call   QWORD PTR [rip+0xa211]        # 0x14000c078
   140001e67:	lea    rdx,[rip+0xa7ca]        # 0x14000c638
   140001e6e:	mov    rcx,rax
   140001e71:	call   0x1400015b0
   140001e76:	mov    rdx,QWORD PTR [rip+0xa203]        # 0x14000c080
   140001e7d:	mov    rcx,rax
   140001e80:	call   QWORD PTR [rip+0xa1f2]        # 0x14000c078
   140001e86:	lea    rdx,[rip+0xa763]        # 0x14000c5f0
   140001e8d:	mov    rcx,rax
   140001e90:	call   0x1400015b0
   140001e95:	mov    rdx,QWORD PTR [rip+0xa1e4]        # 0x14000c080
   140001e9c:	mov    rcx,rax
   140001e9f:	call   QWORD PTR [rip+0xa1d3]        # 0x14000c078
   140001ea5:	lea    rdx,[rip+0xa704]        # 0x14000c5b0
   140001eac:	mov    rcx,rax
   140001eaf:	call   0x1400015b0
   140001eb4:	mov    rdx,QWORD PTR [rip+0xa1c5]        # 0x14000c080
   140001ebb:	mov    rcx,rax
   140001ebe:	call   QWORD PTR [rip+0xa1b4]        # 0x14000c078
   140001ec4:	lea    rdx,[rip+0xa6a5]        # 0x14000c570
   140001ecb:	mov    rcx,rax
   140001ece:	call   0x1400015b0
   140001ed3:	mov    rdx,QWORD PTR [rip+0xa1a6]        # 0x14000c080
   140001eda:	mov    rcx,rax
   140001edd:	call   QWORD PTR [rip+0xa195]        # 0x14000c078
   140001ee3:	lea    rdx,[rip+0xa656]        # 0x14000c540
   140001eea:	mov    rcx,rax
   140001eed:	call   0x1400015b0
   140001ef2:	mov    rdx,QWORD PTR [rip+0xa187]        # 0x14000c080
   140001ef9:	mov    rcx,rax
   140001efc:	call   QWORD PTR [rip+0xa176]        # 0x14000c078
   140001f02:	add    rsp,0x20
   140001f06:	pop    rbx
   140001f07:	ret    
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    QWORD PTR [rsp+0x10],rbx
   140001f15:	mov    QWORD PTR [rsp+0x18],rbp
   140001f1a:	mov    QWORD PTR [rsp+0x20],rsi
   140001f1f:	push   rdi
   140001f20:	sub    rsp,0x30
   140001f24:	mov    rsi,rcx
   140001f27:	or     rcx,0xffffffffffffffff
   140001f2b:	mov    rbx,rdx
   140001f2e:	lea    rdx,[rip+0xa76b]        # 0x14000c6a0
   140001f35:	xor    eax,eax
   140001f37:	add    rsi,0xf8
   140001f3e:	mov    QWORD PTR [rsp+0x28],rdx
   140001f43:	mov    rdi,rdx
   140001f46:	lea    rdx,[rsp+0x20]
   140001f4b:	repnz scas al,BYTE PTR es:[rdi]
   140001f4d:	mov    rbp,r8
   140001f50:	not    rcx
   140001f53:	dec    rcx
   140001f56:	mov    DWORD PTR [rsp+0x20],ecx
   140001f5a:	mov    rcx,rsi
   140001f5d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140001f62:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001f68:	call   QWORD PTR [rip+0xa3d2]        # 0x14000c340
   140001f6e:	lea    rcx,[rsp+0x40]
   140001f73:	mov    dl,0x22
   140001f75:	call   QWORD PTR [rip+0xa3fd]        # 0x14000c378
   140001f7b:	mov    rcx,rsi
   140001f7e:	movzx  edx,WORD PTR [rax]
   140001f81:	call   QWORD PTR [rip+0xa3e1]        # 0x14000c368
   140001f87:	lea    rcx,[rsp+0x40]
   140001f8c:	mov    rdx,rbx
   140001f8f:	call   0x140001980
   140001f94:	mov    rcx,rsi
   140001f97:	mov    rdx,rax
   140001f9a:	call   QWORD PTR [rip+0xa3b8]        # 0x14000c358
   140001fa0:	lea    rcx,[rsp+0x40]
   140001fa5:	call   QWORD PTR [rip+0xa40d]        # 0x14000c3b8
   140001fab:	lea    rcx,[rsp+0x40]
   140001fb0:	mov    dl,0x22
   140001fb2:	call   QWORD PTR [rip+0xa3c0]        # 0x14000c378
   140001fb8:	mov    rcx,rsi
   140001fbb:	movzx  edx,WORD PTR [rax]
   140001fbe:	call   QWORD PTR [rip+0xa3a4]        # 0x14000c368
   140001fc4:	or     rcx,0xffffffffffffffff
   140001fc8:	lea    rdx,[rip+0xa6c9]        # 0x14000c698
   140001fcf:	mov    QWORD PTR [rsp+0x28],rdx
   140001fd4:	mov    rdi,rdx
   140001fd7:	xor    eax,eax
   140001fd9:	repnz scas al,BYTE PTR es:[rdi]
   140001fdb:	lea    rdx,[rsp+0x20]
   140001fe0:	not    rcx
   140001fe3:	dec    rcx
   140001fe6:	mov    DWORD PTR [rsp+0x20],ecx
   140001fea:	mov    rcx,rsi
   140001fed:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140001ff2:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001ff8:	call   QWORD PTR [rip+0xa342]        # 0x14000c340
   140001ffe:	mov    rdx,rbp
   140002001:	mov    rcx,rsi
   140002004:	call   QWORD PTR [rip+0xa34e]        # 0x14000c358
   14000200a:	lea    rcx,[rsp+0x40]
   14000200f:	mov    dl,0xa
   140002011:	call   QWORD PTR [rip+0xa361]        # 0x14000c378
   140002017:	mov    rcx,rsi
   14000201a:	movzx  edx,WORD PTR [rax]
   14000201d:	call   QWORD PTR [rip+0xa345]        # 0x14000c368
   140002023:	mov    rbx,QWORD PTR [rsp+0x48]
   140002028:	mov    rbp,QWORD PTR [rsp+0x50]
   14000202d:	mov    rsi,QWORD PTR [rsp+0x58]
   140002032:	add    rsp,0x30
   140002036:	pop    rdi
   140002037:	ret    
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    QWORD PTR [rsp+0x18],rbx
   140002045:	push   rsi
   140002046:	sub    rsp,0x20
   14000204a:	mov    rax,QWORD PTR [rdx]
   14000204d:	mov    rsi,rcx
   140002050:	mov    rbx,rdx
   140002053:	mov    QWORD PTR [rcx],rax
   140002056:	mov    ecx,DWORD PTR [rax]
   140002058:	test   ecx,ecx
   14000205a:	je     0x140002073
   14000205c:	cmp    ecx,0xffffffff
   14000205f:	je     0x1400020d8
   140002061:	lock add DWORD PTR [rax],0x1
   140002065:	mov    rax,rsi
   140002068:	mov    rbx,QWORD PTR [rsp+0x40]
   14000206d:	add    rsp,0x20
   140002071:	pop    rsi
   140002072:	ret    
   140002073:	mov    edx,DWORD PTR [rax+0x4]
   140002076:	mov    rcx,rsi
   140002079:	mov    QWORD PTR [rsp+0x30],rbp
   14000207e:	mov    QWORD PTR [rsp+0x38],rdi
   140002083:	call   QWORD PTR [rip+0xa277]        # 0x14000c300
   140002089:	mov    r11,QWORD PTR [rsi]
   14000208c:	mov    rcx,QWORD PTR [rbx]
   14000208f:	movsxd rax,DWORD PTR [r11+0xc]
   140002093:	lea    rbp,[r11+rax*8+0x10]
   140002098:	movsxd rax,DWORD PTR [rcx+0x8]
   14000209c:	lea    rdi,[rcx+rax*8+0x10]
   1400020a1:	movsxd rax,DWORD PTR [r11+0x8]
   1400020a5:	lea    rbx,[r11+rax*8+0x10]
   1400020aa:	cmp    rbx,rbp
   1400020ad:	je     0x1400020ce
   1400020af:	nop
   1400020b0:	test   rbx,rbx
   1400020b3:	je     0x1400020c1
   1400020b5:	mov    rdx,rdi
   1400020b8:	mov    rcx,rbx
   1400020bb:	call   QWORD PTR [rip+0xa2ff]        # 0x14000c3c0
   1400020c1:	add    rbx,0x8
   1400020c5:	add    rdi,0x8
   1400020c9:	cmp    rbx,rbp
   1400020cc:	jne    0x1400020b0
   1400020ce:	mov    rbp,QWORD PTR [rsp+0x30]
   1400020d3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400020d8:	mov    rax,rsi
   1400020db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400020e0:	add    rsp,0x20
   1400020e4:	pop    rsi
   1400020e5:	ret    
   1400020e6:	int3   
   1400020e7:	int3   
   1400020e8:	int3   
   1400020e9:	int3   
   1400020ea:	int3   
   1400020eb:	int3   
   1400020ec:	int3   
   1400020ed:	int3   
   1400020ee:	int3   
   1400020ef:	int3   
   1400020f0:	sub    rsp,0x28
   1400020f4:	mov    rdx,QWORD PTR [rcx]
   1400020f7:	mov    eax,DWORD PTR [rdx]
   1400020f9:	test   eax,eax
   1400020fb:	je     0x14000210d
   1400020fd:	cmp    eax,0xffffffff
   140002100:	je     0x14000216a
   140002102:	lock add DWORD PTR [rdx],0xffffffff
   140002106:	setne  al
   140002109:	test   al,al
   14000210b:	jne    0x14000216a
   14000210d:	mov    QWORD PTR [rsp+0x30],rbx
   140002112:	mov    QWORD PTR [rsp+0x38],rsi
   140002117:	mov    rsi,QWORD PTR [rcx]
   14000211a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000211e:	mov    QWORD PTR [rsp+0x20],rdi
   140002123:	lea    rbx,[rsi+rax*8+0x10]
   140002128:	movsxd rax,DWORD PTR [rsi+0x8]
   14000212c:	lea    rdi,[rsi+rax*8+0x10]
   140002131:	cmp    rdi,rbx
   140002134:	je     0x140002152
   140002136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002140:	sub    rbx,0x8
   140002144:	mov    rcx,rbx
   140002147:	call   QWORD PTR [rip+0xa26b]        # 0x14000c3b8
   14000214d:	cmp    rbx,rdi
   140002150:	jne    0x140002140
   140002152:	mov    rcx,rsi
   140002155:	call   QWORD PTR [rip+0xa1ad]        # 0x14000c308
   14000215b:	mov    rdi,QWORD PTR [rsp+0x20]
   140002160:	mov    rsi,QWORD PTR [rsp+0x38]
   140002165:	mov    rbx,QWORD PTR [rsp+0x30]
   14000216a:	add    rsp,0x28
   14000216e:	ret    
   14000216f:	int3   
   140002170:	rex push rsi
   140002172:	sub    rsp,0x20
   140002176:	mov    rax,QWORD PTR [rdx]
   140002179:	mov    rsi,rcx
   14000217c:	cmp    QWORD PTR [rcx],rax
   14000217f:	je     0x140002232
   140002185:	lea    rcx,[rsp+0x30]
   14000218a:	mov    QWORD PTR [rsp+0x48],rdi
   14000218f:	call   0x140002040
   140002194:	lea    r11,[rsp+0x30]
   140002199:	cmp    r11,rsi
   14000219c:	je     0x1400021b0
   14000219e:	mov    rax,QWORD PTR [rsp+0x30]
   1400021a3:	mov    rdi,QWORD PTR [rsi]
   1400021a6:	mov    QWORD PTR [rsp+0x30],rdi
   1400021ab:	mov    QWORD PTR [rsi],rax
   1400021ae:	jmp    0x1400021b5
   1400021b0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400021b5:	mov    eax,DWORD PTR [rdi]
   1400021b7:	test   eax,eax
   1400021b9:	je     0x1400021d0
   1400021bb:	cmp    eax,0xffffffff
   1400021be:	je     0x140002224
   1400021c0:	lock add DWORD PTR [rdi],0xffffffff
   1400021c4:	setne  al
   1400021c7:	test   al,al
   1400021c9:	jne    0x140002224
   1400021cb:	mov    rdi,QWORD PTR [rsp+0x30]
   1400021d0:	movsxd rax,DWORD PTR [rdi+0xc]
   1400021d4:	mov    QWORD PTR [rsp+0x38],rbx
   1400021d9:	mov    QWORD PTR [rsp+0x40],rbp
   1400021de:	lea    rbx,[rdi+rax*8+0x10]
   1400021e3:	movsxd rax,DWORD PTR [rdi+0x8]
   1400021e7:	lea    rbp,[rdi+rax*8+0x10]
   1400021ec:	cmp    rbp,rbx
   1400021ef:	je     0x140002203
   1400021f1:	sub    rbx,0x8
   1400021f5:	mov    rcx,rbx
   1400021f8:	call   QWORD PTR [rip+0xa1ba]        # 0x14000c3b8
   1400021fe:	cmp    rbx,rbp
   140002201:	jne    0x1400021f1
   140002203:	mov    rcx,rdi
   140002206:	call   QWORD PTR [rip+0xa0fc]        # 0x14000c308
   14000220c:	mov    rbp,QWORD PTR [rsp+0x40]
   140002211:	mov    rbx,QWORD PTR [rsp+0x38]
   140002216:	mov    rdi,QWORD PTR [rsp+0x48]
   14000221b:	mov    rax,rsi
   14000221e:	add    rsp,0x20
   140002222:	pop    rsi
   140002223:	ret    
   140002224:	mov    rax,rsi
   140002227:	mov    rdi,QWORD PTR [rsp+0x48]
   14000222c:	add    rsp,0x20
   140002230:	pop    rsi
   140002231:	ret    
   140002232:	mov    rax,rcx
   140002235:	add    rsp,0x20
   140002239:	pop    rsi
   14000223a:	ret    
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	rex push rbx
   140002242:	sub    rsp,0x20
   140002246:	mov    rbx,QWORD PTR [rip+0xa0eb]        # 0x14000c338
   14000224d:	lea    rdx,[rsp+0x38]
   140002252:	mov    QWORD PTR [rsp+0x38],rbx
   140002257:	call   0x140002170
   14000225c:	mov    r11d,DWORD PTR [rbx]
   14000225f:	test   r11d,r11d
   140002262:	je     0x14000227a
   140002264:	cmp    r11d,0xffffffff
   140002268:	je     0x1400022c5
   14000226a:	lock add DWORD PTR [rbx],0xffffffff
   14000226e:	setne  al
   140002271:	test   al,al
   140002273:	jne    0x1400022c5
   140002275:	mov    rbx,QWORD PTR [rsp+0x38]
   14000227a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000227e:	mov    QWORD PTR [rsp+0x30],rsi
   140002283:	mov    QWORD PTR [rsp+0x40],rdi
   140002288:	lea    rdi,[rbx+rax*8+0x10]
   14000228d:	movsxd rax,DWORD PTR [rbx+0x8]
   140002291:	lea    rsi,[rbx+rax*8+0x10]
   140002296:	cmp    rsi,rdi
   140002299:	je     0x1400022b2
   14000229b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400022a0:	sub    rdi,0x8
   1400022a4:	mov    rcx,rdi
   1400022a7:	call   QWORD PTR [rip+0xa10b]        # 0x14000c3b8
   1400022ad:	cmp    rdi,rsi
   1400022b0:	jne    0x1400022a0
   1400022b2:	mov    rcx,rbx
   1400022b5:	call   QWORD PTR [rip+0xa04d]        # 0x14000c308
   1400022bb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400022c0:	mov    rsi,QWORD PTR [rsp+0x30]
   1400022c5:	add    rsp,0x20
   1400022c9:	pop    rbx
   1400022ca:	ret    
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400022da:	mov    DWORD PTR [rsp+0x10],edx
   1400022de:	push   rsi
   1400022df:	push   rdi
   1400022e0:	push   r12
   1400022e2:	push   r13
   1400022e4:	push   r14
   1400022e6:	sub    rsp,0x20
   1400022ea:	mov    rdx,QWORD PTR [rcx]
   1400022ed:	movsxd r13,r8d
   1400022f0:	mov    r12,rcx
   1400022f3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400022f7:	mov    r8d,r13d
   1400022fa:	lea    r14,[rdx+rax*8+0x10]
   1400022ff:	lea    rdx,[rsp+0x58]
   140002304:	call   QWORD PTR [rip+0x9fee]        # 0x14000c2f8
   14000230a:	mov    r10,QWORD PTR [r12]
   14000230e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002313:	movsxd r9,DWORD PTR [r10+0x8]
   140002317:	mov    rsi,rax
   14000231a:	mov    rdi,r14
   14000231d:	add    rdx,r9
   140002320:	lea    rbx,[r10+r9*8+0x10]
   140002325:	lea    rbp,[r10+rdx*8+0x10]
   14000232a:	cmp    rbx,rbp
   14000232d:	je     0x14000234e
   14000232f:	nop
   140002330:	test   rbx,rbx
   140002333:	je     0x140002341
   140002335:	mov    rdx,rdi
   140002338:	mov    rcx,rbx
   14000233b:	call   QWORD PTR [rip+0xa07f]        # 0x14000c3c0
   140002341:	add    rbx,0x8
   140002345:	add    rdi,0x8
   140002349:	cmp    rbx,rbp
   14000234c:	jne    0x140002330
   14000234e:	mov    r8,QWORD PTR [r12]
   140002352:	movsxd rdx,DWORD PTR [rsp+0x58]
   140002357:	movsxd rcx,DWORD PTR [r8+0x8]
   14000235b:	movsxd rax,DWORD PTR [r8+0xc]
   14000235f:	lea    rdi,[r14+rdx*8]
   140002363:	add    rcx,rdx
   140002366:	lea    rbp,[r8+rax*8+0x10]
   14000236b:	add    rcx,r13
   14000236e:	lea    rbx,[r8+rcx*8+0x10]
   140002373:	cmp    rbx,rbp
   140002376:	je     0x140002396
   140002378:	test   rbx,rbx
   14000237b:	je     0x140002389
   14000237d:	mov    rdx,rdi
   140002380:	mov    rcx,rbx
   140002383:	call   QWORD PTR [rip+0xa037]        # 0x14000c3c0
   140002389:	add    rbx,0x8
   14000238d:	add    rdi,0x8
   140002391:	cmp    rbx,rbp
   140002394:	jne    0x140002378
   140002396:	mov    eax,DWORD PTR [rsi]
   140002398:	test   eax,eax
   14000239a:	je     0x1400023ac
   14000239c:	cmp    eax,0xffffffff
   14000239f:	je     0x1400023de
   1400023a1:	lock add DWORD PTR [rsi],0xffffffff
   1400023a5:	setne  al
   1400023a8:	test   al,al
   1400023aa:	jne    0x1400023de
   1400023ac:	movsxd rax,DWORD PTR [rsi+0xc]
   1400023b0:	lea    rbx,[rsi+rax*8+0x10]
   1400023b5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400023b9:	lea    rdi,[rsi+rax*8+0x10]
   1400023be:	cmp    rdi,rbx
   1400023c1:	je     0x1400023d5
   1400023c3:	sub    rbx,0x8
   1400023c7:	mov    rcx,rbx
   1400023ca:	call   QWORD PTR [rip+0x9fe8]        # 0x14000c3b8
   1400023d0:	cmp    rbx,rdi
   1400023d3:	jne    0x1400023c3
   1400023d5:	mov    rcx,rsi
   1400023d8:	call   QWORD PTR [rip+0x9f2a]        # 0x14000c308
   1400023de:	mov    rdx,QWORD PTR [r12]
   1400023e2:	movsxd rax,DWORD PTR [rsp+0x58]
   1400023e7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400023ec:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400023f0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400023f5:	add    rcx,rax
   1400023f8:	lea    rax,[rdx+rcx*8+0x10]
   1400023fd:	add    rsp,0x20
   140002401:	pop    r14
   140002403:	pop    r13
   140002405:	pop    r12
   140002407:	pop    rdi
   140002408:	pop    rsi
   140002409:	ret    
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x8],rbx
   140002415:	mov    QWORD PTR [rsp+0x10],rbp
   14000241a:	mov    QWORD PTR [rsp+0x18],rsi
   14000241f:	push   rdi
   140002420:	sub    rsp,0x20
   140002424:	mov    r8,QWORD PTR [rcx]
   140002427:	mov    rbx,rcx
   14000242a:	movsxd rax,DWORD PTR [r8+0x8]
   14000242e:	lea    rdi,[r8+rax*8+0x10]
   140002433:	call   QWORD PTR [rip+0x9ec7]        # 0x14000c300
   140002439:	mov    rdx,QWORD PTR [rbx]
   14000243c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140002440:	mov    rsi,rax
   140002443:	lea    rbp,[rdx+rcx*8+0x10]
   140002448:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000244c:	lea    rbx,[rdx+rcx*8+0x10]
   140002451:	cmp    rbx,rbp
   140002454:	je     0x140002474
   140002456:	test   rbx,rbx
   140002459:	je     0x140002467
   14000245b:	mov    rdx,rdi
   14000245e:	mov    rcx,rbx
   140002461:	call   QWORD PTR [rip+0x9f59]        # 0x14000c3c0
   140002467:	add    rbx,0x8
   14000246b:	add    rdi,0x8
   14000246f:	cmp    rbx,rbp
   140002472:	jne    0x140002456
   140002474:	mov    eax,DWORD PTR [rsi]
   140002476:	test   eax,eax
   140002478:	je     0x14000248a
   14000247a:	cmp    eax,0xffffffff
   14000247d:	je     0x1400024bc
   14000247f:	lock add DWORD PTR [rsi],0xffffffff
   140002483:	setne  al
   140002486:	test   al,al
   140002488:	jne    0x1400024bc
   14000248a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000248e:	lea    rbx,[rsi+rax*8+0x10]
   140002493:	movsxd rax,DWORD PTR [rsi+0x8]
   140002497:	lea    rdi,[rsi+rax*8+0x10]
   14000249c:	cmp    rdi,rbx
   14000249f:	je     0x1400024b3
   1400024a1:	sub    rbx,0x8
   1400024a5:	mov    rcx,rbx
   1400024a8:	call   QWORD PTR [rip+0x9f0a]        # 0x14000c3b8
   1400024ae:	cmp    rbx,rdi
   1400024b1:	jne    0x1400024a1
   1400024b3:	mov    rcx,rsi
   1400024b6:	call   QWORD PTR [rip+0x9e4c]        # 0x14000c308
   1400024bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024c1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400024c6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024cb:	add    rsp,0x20
   1400024cf:	pop    rdi
   1400024d0:	ret    
   1400024d1:	int3   
   1400024d2:	int3   
   1400024d3:	int3   
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	rex push rbx
   1400024e2:	push   rbp
   1400024e3:	push   rdi
   1400024e4:	sub    rsp,0x20
   1400024e8:	mov    rbx,QWORD PTR [rcx]
   1400024eb:	mov    QWORD PTR [rsp+0x40],rsi
   1400024f0:	movsxd rbp,r8d
   1400024f3:	mov    eax,DWORD PTR [rbx]
   1400024f5:	movsxd rsi,edx
   1400024f8:	mov    rdi,rcx
   1400024fb:	cmp    eax,0x1
   1400024fe:	je     0x140002508
   140002500:	test   eax,eax
   140002502:	je     0x140002508
   140002504:	mov    cl,0x1
   140002506:	jmp    0x14000250a
   140002508:	xor    cl,cl
   14000250a:	test   r8d,r8d
   14000250d:	je     0x14000260e
   140002513:	mov    eax,DWORD PTR [rbx+0x8]
   140002516:	btr    eax,0x1f
   14000251a:	cmp    ebp,eax
   14000251c:	jne    0x140002559
   14000251e:	test   cl,cl
   140002520:	jne    0x140002559
   140002522:	cmp    esi,DWORD PTR [rbx+0x4]
   140002525:	jle    0x140002551
   140002527:	mov    rdx,QWORD PTR [rbx+0x10]
   14000252b:	movsxd rax,DWORD PTR [rbx+0x4]
   14000252f:	mov    r8,rsi
   140002532:	shl    r8,0x2
   140002536:	lea    rcx,[rdx+rax*4]
   14000253a:	add    rcx,rbx
   14000253d:	sub    r8,rcx
   140002540:	add    r8,rdx
   140002543:	xor    edx,edx
   140002545:	add    r8,rbx
   140002548:	and    r8,0xfffffffffffffffc
   14000254c:	call   0x14000b41c
   140002551:	mov    DWORD PTR [rbx+0x4],esi
   140002554:	jmp    0x140002615
   140002559:	mov    edx,0x8
   14000255e:	mov    r8,rbp
   140002561:	mov    QWORD PTR [rsp+0x48],r12
   140002566:	lea    ecx,[rdx-0x4]
   140002569:	mov    QWORD PTR [rsp+0x50],r13
   14000256e:	call   QWORD PTR [rip+0x9dac]        # 0x14000c320
   140002574:	mov    rbx,rax
   140002577:	mov    DWORD PTR [rax+0x4],esi
   14000257a:	mov    r9,QWORD PTR [rdi]
   14000257d:	cmp    esi,DWORD PTR [r9+0x4]
   140002581:	mov    rcx,QWORD PTR [r9+0x10]
   140002585:	lea    r10,[r9+rcx*1]
   140002589:	jle    0x140002598
   14000258b:	movsxd rdx,DWORD PTR [r9+0x4]
   14000258f:	lea    r8,[rcx+rdx*4]
   140002593:	add    r8,r9
   140002596:	jmp    0x14000259f
   140002598:	lea    r8,[rcx+rsi*4]
   14000259c:	add    r8,r9
   14000259f:	mov    rax,QWORD PTR [rax+0x10]
   1400025a3:	sub    r8,r10
   1400025a6:	mov    rdx,r10
   1400025a9:	sar    r8,0x2
   1400025ad:	lea    r12,[rbx+rax*1]
   1400025b1:	lea    r13,[r8*4+0x0]
   1400025b9:	mov    rcx,r12
   1400025bc:	mov    r8,r13
   1400025bf:	call   0x14000b422
   1400025c4:	mov    r11,QWORD PTR [rdi]
   1400025c7:	cmp    esi,DWORD PTR [r11+0x4]
   1400025cb:	jle    0x1400025ef
   1400025cd:	movsxd r8,DWORD PTR [rbx+0x4]
   1400025d1:	lea    rcx,[r13+r12*1+0x0]
   1400025d6:	xor    edx,edx
   1400025d8:	shl    r8,0x2
   1400025dc:	sub    r8,rcx
   1400025df:	add    r8,QWORD PTR [rbx+0x10]
   1400025e3:	add    r8,rbx
   1400025e6:	and    r8,0xfffffffffffffffc
   1400025ea:	call   0x14000b41c
   1400025ef:	mov    rax,QWORD PTR [rdi]
   1400025f2:	mov    r13,QWORD PTR [rsp+0x50]
   1400025f7:	mov    r12,QWORD PTR [rsp+0x48]
   1400025fc:	mov    ecx,DWORD PTR [rax+0x8]
   1400025ff:	xor    ecx,DWORD PTR [rbx+0x8]
   140002602:	btr    ecx,0x1f
   140002606:	xor    ecx,DWORD PTR [rax+0x8]
   140002609:	mov    DWORD PTR [rbx+0x8],ecx
   14000260c:	jmp    0x140002615
   14000260e:	mov    rbx,QWORD PTR [rip+0x9cfb]        # 0x14000c310
   140002615:	mov    rcx,QWORD PTR [rdi]
   140002618:	mov    rsi,QWORD PTR [rsp+0x40]
   14000261d:	cmp    rcx,rbx
   140002620:	je     0x14000264e
   140002622:	mov    eax,DWORD PTR [rcx]
   140002624:	test   eax,eax
   140002626:	je     0x140002638
   140002628:	cmp    eax,0xffffffff
   14000262b:	je     0x14000264b
   14000262d:	lock add DWORD PTR [rcx],0xffffffff
   140002631:	setne  al
   140002634:	test   al,al
   140002636:	jne    0x14000264b
   140002638:	mov    rcx,QWORD PTR [rdi]
   14000263b:	mov    r8d,0x8
   140002641:	lea    edx,[r8-0x4]
   140002645:	call   QWORD PTR [rip+0x9ccd]        # 0x14000c318
   14000264b:	mov    QWORD PTR [rdi],rbx
   14000264e:	add    rsp,0x20
   140002652:	pop    rdi
   140002653:	pop    rbp
   140002654:	pop    rbx
   140002655:	ret    
   140002656:	int3   
   140002657:	int3   
   140002658:	int3   
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	mov    QWORD PTR [rsp+0x8],rbx
   140002665:	mov    QWORD PTR [rsp+0x18],rbp
   14000266a:	mov    QWORD PTR [rsp+0x20],rsi
   14000266f:	mov    DWORD PTR [rsp+0x10],edx
   140002673:	push   rdi
   140002674:	sub    rsp,0x20
   140002678:	mov    rdx,QWORD PTR [rcx]
   14000267b:	movsxd rbp,r8d
   14000267e:	mov    rdi,rcx
   140002681:	movsxd rax,DWORD PTR [rdx+0x8]
   140002685:	mov    r8d,ebp
   140002688:	lea    rsi,[rdx+rax*8+0x10]
   14000268d:	lea    rdx,[rsp+0x38]
   140002692:	call   QWORD PTR [rip+0x9c60]        # 0x14000c2f8
   140002698:	mov    r10,QWORD PTR [rdi]
   14000269b:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400026a0:	movsxd r9,DWORD PTR [r10+0x8]
   1400026a4:	mov    rbx,rax
   1400026a7:	add    rdx,r9
   1400026aa:	lea    rcx,[r10+r9*8+0x10]
   1400026af:	lea    r8,[r10+rdx*8+0x10]
   1400026b4:	cmp    rsi,rcx
   1400026b7:	je     0x1400026d1
   1400026b9:	sub    r8,rcx
   1400026bc:	sar    r8,0x3
   1400026c0:	test   r8,r8
   1400026c3:	jle    0x1400026d1
   1400026c5:	shl    r8,0x3
   1400026c9:	mov    rdx,rsi
   1400026cc:	call   0x14000b422
   1400026d1:	mov    r8,QWORD PTR [rdi]
   1400026d4:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400026d9:	movsxd rcx,DWORD PTR [r8+0x8]
   1400026dd:	movsxd rax,DWORD PTR [r8+0xc]
   1400026e1:	lea    r10,[rsi+rdx*8]
   1400026e5:	add    rcx,rdx
   1400026e8:	lea    r9,[r8+rax*8+0x10]
   1400026ed:	add    rcx,rbp
   1400026f0:	lea    rcx,[r8+rcx*8+0x10]
   1400026f5:	cmp    r10,rcx
   1400026f8:	je     0x140002716
   1400026fa:	sub    r9,rcx
   1400026fd:	sar    r9,0x3
   140002701:	test   r9,r9
   140002704:	jle    0x140002716
   140002706:	lea    r8,[r9*8+0x0]
   14000270e:	mov    rdx,r10
   140002711:	call   0x14000b422
   140002716:	mov    eax,DWORD PTR [rbx]
   140002718:	test   eax,eax
   14000271a:	je     0x14000272c
   14000271c:	cmp    eax,0xffffffff
   14000271f:	je     0x140002735
   140002721:	lock add DWORD PTR [rbx],0xffffffff
   140002725:	setne  al
   140002728:	test   al,al
   14000272a:	jne    0x140002735
   14000272c:	mov    rcx,rbx
   14000272f:	call   QWORD PTR [rip+0x9bd3]        # 0x14000c308
   140002735:	mov    rdx,QWORD PTR [rdi]
   140002738:	movsxd rax,DWORD PTR [rsp+0x38]
   14000273d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002742:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002746:	mov    rbp,QWORD PTR [rsp+0x40]
   14000274b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002750:	add    rcx,rax
   140002753:	lea    rax,[rdx+rcx*8+0x10]
   140002758:	add    rsp,0x20
   14000275c:	pop    rdi
   14000275d:	ret    
   14000275e:	int3   
   14000275f:	int3   
   140002760:	mov    QWORD PTR [rsp+0x8],rbx
   140002765:	mov    QWORD PTR [rsp+0x10],rsi
   14000276a:	push   rdi
   14000276b:	sub    rsp,0x20
   14000276f:	mov    rsi,rcx
   140002772:	mov    edi,edx
   140002774:	add    rcx,0x8
   140002778:	lea    rdx,[rsi+0xa0]
   14000277f:	call   0x140007030
   140002784:	lea    r11,[rip+0x9ce5]        # 0x14000c470
   14000278b:	lea    rcx,[rsi+0xa0]
   140002792:	mov    QWORD PTR [rsi],r11
   140002795:	call   0x14000b260
   14000279a:	lea    rcx,[rsi+0xf0]
   1400027a1:	call   QWORD PTR [rip+0x9c21]        # 0x14000c3c8
   1400027a7:	lea    rcx,[rsi+0xf8]
   1400027ae:	call   QWORD PTR [rip+0x9c14]        # 0x14000c3c8
   1400027b4:	xor    r9d,r9d
   1400027b7:	lea    r11,[rip+0x9ef2]        # 0x14000c6b0
   1400027be:	lea    edx,[r9+0x8]
   1400027c2:	mov    QWORD PTR [rsi],r11
   1400027c5:	lea    ecx,[rdx-0x4]
   1400027c8:	lea    r8d,[rdx+0x78]
   1400027cc:	call   QWORD PTR [rip+0x9b4e]        # 0x14000c320
   1400027d2:	mov    QWORD PTR [rsi+0x100],rax
   1400027d9:	mov    DWORD PTR [rax+0x4],0x80
   1400027e0:	mov    r9,QWORD PTR [rsi+0x100]
   1400027e7:	mov    rax,QWORD PTR [r9+0x10]
   1400027eb:	movsxd rdx,DWORD PTR [r9+0x4]
   1400027ef:	lea    r8,[rax+rdx*4]
   1400027f3:	lea    rcx,[r9+rax*1]
   1400027f7:	xor    edx,edx
   1400027f9:	sub    r8,rcx
   1400027fc:	add    r8,r9
   1400027ff:	and    r8,0xfffffffffffffffc
   140002803:	call   0x14000b41c
   140002808:	mov    r11,QWORD PTR [rip+0x9b29]        # 0x14000c338
   14000280f:	lea    rcx,[rsi+0x118]
   140002816:	mov    QWORD PTR [rsi+0x108],r11
   14000281d:	mov    rax,QWORD PTR [rip+0x9b14]        # 0x14000c338
   140002824:	mov    QWORD PTR [rsi+0x110],rax
   14000282b:	call   QWORD PTR [rip+0x9b97]        # 0x14000c3c8
   140002831:	mov    rbx,QWORD PTR [rsp+0x30]
   140002836:	mov    DWORD PTR [rsi+0x120],edi
   14000283c:	mov    DWORD PTR [rsi+0x124],0x0
   140002846:	mov    rax,rsi
   140002849:	mov    rsi,QWORD PTR [rsp+0x38]
   14000284e:	add    rsp,0x20
   140002852:	pop    rdi
   140002853:	ret    
   140002854:	int3   
   140002855:	int3   
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x8],rbx
   140002865:	push   rdi
   140002866:	sub    rsp,0x20
   14000286a:	mov    rbx,rcx
   14000286d:	add    rcx,0x118
   140002874:	call   QWORD PTR [rip+0x9b3e]        # 0x14000c3b8
   14000287a:	lea    rcx,[rbx+0x110]
   140002881:	call   0x1400020f0
   140002886:	mov    rcx,QWORD PTR [rbx+0x108]
   14000288d:	mov    eax,DWORD PTR [rcx]
   14000288f:	test   eax,eax
   140002891:	je     0x1400028a3
   140002893:	cmp    eax,0xffffffff
   140002896:	je     0x1400028b0
   140002898:	lock add DWORD PTR [rcx],0xffffffff
   14000289c:	setne  al
   14000289f:	test   al,al
   1400028a1:	jne    0x1400028b0
   1400028a3:	mov    rcx,QWORD PTR [rbx+0x108]
   1400028aa:	call   QWORD PTR [rip+0x9a58]        # 0x14000c308
   1400028b0:	mov    rax,QWORD PTR [rbx+0x100]
   1400028b7:	mov    ecx,DWORD PTR [rax]
   1400028b9:	test   ecx,ecx
   1400028bb:	je     0x1400028cd
   1400028bd:	cmp    ecx,0xffffffff
   1400028c0:	je     0x1400028e3
   1400028c2:	lock add DWORD PTR [rax],0xffffffff
   1400028c6:	setne  al
   1400028c9:	test   al,al
   1400028cb:	jne    0x1400028e3
   1400028cd:	mov    rcx,QWORD PTR [rbx+0x100]
   1400028d4:	mov    edx,0x4
   1400028d9:	lea    r8d,[rdx+0x4]
   1400028dd:	call   QWORD PTR [rip+0x9a35]        # 0x14000c318
   1400028e3:	mov    rcx,rbx
   1400028e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028eb:	add    rsp,0x20
   1400028ef:	pop    rdi
   1400028f0:	jmp    0x140001510
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	mov    QWORD PTR [rsp+0x8],rbx
   140002905:	push   rdi
   140002906:	sub    rsp,0x20
   14000290a:	mov    rdi,rcx
   14000290d:	add    rcx,0x8
   140002911:	lea    rdx,[rdi+0xa0]
   140002918:	call   0x140007030
   14000291d:	lea    r11,[rip+0x9b4c]        # 0x14000c470
   140002924:	lea    rcx,[rdi+0xa0]
   14000292b:	mov    QWORD PTR [rdi],r11
   14000292e:	call   0x14000b260
   140002933:	lea    rcx,[rdi+0xf0]
   14000293a:	call   QWORD PTR [rip+0x9a88]        # 0x14000c3c8
   140002940:	lea    rcx,[rdi+0xf8]
   140002947:	call   QWORD PTR [rip+0x9a7b]        # 0x14000c3c8
   14000294d:	xor    r9d,r9d
   140002950:	lea    r11,[rip+0x9d89]        # 0x14000c6e0
   140002957:	lea    edx,[r9+0x8]
   14000295b:	mov    QWORD PTR [rdi],r11
   14000295e:	lea    ecx,[rdx-0x4]
   140002961:	lea    r8d,[rdx+0x78]
   140002965:	call   QWORD PTR [rip+0x99b5]        # 0x14000c320
   14000296b:	mov    QWORD PTR [rdi+0x100],rax
   140002972:	mov    DWORD PTR [rax+0x4],0x80
   140002979:	mov    r9,QWORD PTR [rdi+0x100]
   140002980:	mov    rax,QWORD PTR [r9+0x10]
   140002984:	movsxd rdx,DWORD PTR [r9+0x4]
   140002988:	lea    r8,[rax+rdx*4]
   14000298c:	lea    rcx,[r9+rax*1]
   140002990:	xor    edx,edx
   140002992:	sub    r8,rcx
   140002995:	add    r8,r9
   140002998:	and    r8,0xfffffffffffffffc
   14000299c:	call   0x14000b41c
   1400029a1:	mov    r11,QWORD PTR [rip+0x9990]        # 0x14000c338
   1400029a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029ad:	mov    QWORD PTR [rdi+0x108],r11
   1400029b4:	mov    rax,QWORD PTR [rip+0x997d]        # 0x14000c338
   1400029bb:	mov    QWORD PTR [rdi+0x110],rax
   1400029c2:	mov    rax,QWORD PTR [rip+0x996f]        # 0x14000c338
   1400029c9:	mov    QWORD PTR [rdi+0x118],rax
   1400029d0:	mov    rax,rdi
   1400029d3:	add    rsp,0x20
   1400029d7:	pop    rdi
   1400029d8:	ret    
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029e5:	push   rdi
   1400029e6:	sub    rsp,0x20
   1400029ea:	mov    rbx,rcx
   1400029ed:	add    rcx,0x118
   1400029f4:	call   0x1400020f0
   1400029f9:	lea    rcx,[rbx+0x110]
   140002a00:	call   0x1400020f0
   140002a05:	mov    rcx,QWORD PTR [rbx+0x108]
   140002a0c:	mov    eax,DWORD PTR [rcx]
   140002a0e:	test   eax,eax
   140002a10:	je     0x140002a22
   140002a12:	cmp    eax,0xffffffff
   140002a15:	je     0x140002a2f
   140002a17:	lock add DWORD PTR [rcx],0xffffffff
   140002a1b:	setne  al
   140002a1e:	test   al,al
   140002a20:	jne    0x140002a2f
   140002a22:	mov    rcx,QWORD PTR [rbx+0x108]
   140002a29:	call   QWORD PTR [rip+0x98d9]        # 0x14000c308
   140002a2f:	mov    rax,QWORD PTR [rbx+0x100]
   140002a36:	mov    ecx,DWORD PTR [rax]
   140002a38:	test   ecx,ecx
   140002a3a:	je     0x140002a4c
   140002a3c:	cmp    ecx,0xffffffff
   140002a3f:	je     0x140002a62
   140002a41:	lock add DWORD PTR [rax],0xffffffff
   140002a45:	setne  al
   140002a48:	test   al,al
   140002a4a:	jne    0x140002a62
   140002a4c:	mov    rcx,QWORD PTR [rbx+0x100]
   140002a53:	mov    edx,0x4
   140002a58:	lea    r8d,[rdx+0x4]
   140002a5c:	call   QWORD PTR [rip+0x98b6]        # 0x14000c318
   140002a62:	mov    rcx,rbx
   140002a65:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a6a:	add    rsp,0x20
   140002a6e:	pop    rdi
   140002a6f:	jmp    0x140001510
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    QWORD PTR [rsp+0x10],rbx
   140002a85:	mov    DWORD PTR [rsp+0x8],ecx
   140002a89:	push   rbp
   140002a8a:	push   rsi
   140002a8b:	push   rdi
   140002a8c:	push   r12
   140002a8e:	push   r13
   140002a90:	push   r14
   140002a92:	push   r15
   140002a94:	sub    rsp,0x6c0
   140002a9b:	mov    r8,rdx
   140002a9e:	lea    rcx,[rsp+0x58]
   140002aa3:	lea    rdx,[rsp+0x700]
   140002aab:	xor    esi,esi
   140002aad:	mov    r9d,0x50602
   140002ab3:	mov    DWORD PTR [rsp+0x710],esi
   140002aba:	call   QWORD PTR [rip+0x97b0]        # 0x14000c270
   140002ac0:	lea    rcx,[rsp+0x20]
   140002ac5:	call   QWORD PTR [rip+0x97ad]        # 0x14000c278
   140002acb:	lea    rcx,[rsp+0x28]
   140002ad0:	call   QWORD PTR [rip+0x98f2]        # 0x14000c3c8
   140002ad6:	lea    rcx,[rsp+0x38]
   140002adb:	call   QWORD PTR [rip+0x98e7]        # 0x14000c3c8
   140002ae1:	mov    rax,QWORD PTR [rsp+0x20]
   140002ae6:	lea    ebp,[rsi+0x1]
   140002ae9:	mov    ecx,DWORD PTR [rax+0xc]
   140002aec:	xor    r14b,r14b
   140002aef:	or     rbx,0xffffffffffffffff
   140002af3:	sub    ecx,DWORD PTR [rax+0x8]
   140002af6:	mov    r12d,0xffff
   140002afc:	cmp    ecx,ebp
   140002afe:	jle    0x1400030e3
   140002b04:	lea    r13,[rip+0x9d61]        # 0x14000c86c
   140002b0b:	lea    r15,[rip+0x9d56]        # 0x14000c868
   140002b12:	movsxd rdx,DWORD PTR [rax+0x8]
   140002b16:	movsxd rcx,ebp
   140002b19:	lea    rdi,[rip+0x9d44]        # 0x14000c864
   140002b20:	add    rdx,rcx
   140002b23:	lea    rcx,[rsp+0x30]
   140002b28:	lea    rdx,[rax+rdx*8+0x10]
   140002b2d:	call   QWORD PTR [rip+0x988d]        # 0x14000c3c0
   140002b33:	mov    rax,QWORD PTR [rsp+0x20]
   140002b38:	inc    ebp
   140002b3a:	movsxd rdx,DWORD PTR [rax+0x8]
   140002b3e:	mov    ecx,DWORD PTR [rax+0xc]
   140002b41:	sub    ecx,edx
   140002b43:	cmp    ebp,ecx
   140002b45:	jge    0x140002b54
   140002b47:	movsxd rcx,ebp
   140002b4a:	add    rdx,rcx
   140002b4d:	lea    rax,[rax+rdx*8+0x10]
   140002b52:	jmp    0x140002b65
   140002b54:	lea    rcx,[rsp+0x160]
   140002b5c:	or     esi,0x1
   140002b5f:	call   QWORD PTR [rip+0x9863]        # 0x14000c3c8
   140002b65:	lea    rcx,[rsp+0x40]
   140002b6a:	mov    rdx,rax
   140002b6d:	call   QWORD PTR [rip+0x984d]        # 0x14000c3c0
   140002b73:	test   sil,0x1
   140002b77:	je     0x140002b8a
   140002b79:	lea    rcx,[rsp+0x160]
   140002b81:	and    esi,0xfffffffe
   140002b84:	call   QWORD PTR [rip+0x982e]        # 0x14000c3b8
   140002b8a:	xor    eax,eax
   140002b8c:	mov    rcx,rbx
   140002b8f:	lea    rdx,[rsp+0x1a0]
   140002b97:	repnz scas al,BYTE PTR es:[rdi]
   140002b99:	lea    rax,[rip+0x9cc4]        # 0x14000c864
   140002ba0:	not    rcx
   140002ba3:	mov    QWORD PTR [rsp+0x88],rax
   140002bab:	dec    rcx
   140002bae:	mov    DWORD PTR [rsp+0x80],ecx
   140002bb5:	lea    rcx,[rsp+0x30]
   140002bba:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140002bc2:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   140002bcb:	call   QWORD PTR [rip+0x97bf]        # 0x14000c390
   140002bd1:	test   al,al
   140002bd3:	jne    0x1400034e7
   140002bd9:	lea    rdx,[rip+0x9c7c]        # 0x14000c85c
   140002be0:	xor    eax,eax
   140002be2:	mov    rcx,rbx
   140002be5:	mov    rdi,rdx
   140002be8:	mov    QWORD PTR [rsp+0xf8],rdx
   140002bf0:	lea    rdx,[rsp+0x1c0]
   140002bf8:	repnz scas al,BYTE PTR es:[rdi]
   140002bfa:	not    rcx
   140002bfd:	dec    rcx
   140002c00:	mov    DWORD PTR [rsp+0xf0],ecx
   140002c07:	lea    rcx,[rsp+0x30]
   140002c0c:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140002c14:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   140002c1d:	call   QWORD PTR [rip+0x976d]        # 0x14000c390
   140002c23:	test   al,al
   140002c25:	jne    0x1400034e7
   140002c2b:	lea    rdx,[rip+0x9c26]        # 0x14000c858
   140002c32:	xor    eax,eax
   140002c34:	mov    rcx,rbx
   140002c37:	mov    rdi,rdx
   140002c3a:	mov    QWORD PTR [rsp+0xe8],rdx
   140002c42:	lea    rdx,[rsp+0x1f0]
   140002c4a:	repnz scas al,BYTE PTR es:[rdi]
   140002c4c:	not    rcx
   140002c4f:	dec    rcx
   140002c52:	mov    DWORD PTR [rsp+0xe0],ecx
   140002c59:	lea    rcx,[rsp+0x30]
   140002c5e:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   140002c66:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   140002c6f:	call   QWORD PTR [rip+0x971b]        # 0x14000c390
   140002c75:	test   al,al
   140002c77:	jne    0x1400030b7
   140002c7d:	lea    rdx,[rip+0x9bc4]        # 0x14000c848
   140002c84:	xor    eax,eax
   140002c86:	mov    rcx,rbx
   140002c89:	mov    rdi,rdx
   140002c8c:	mov    QWORD PTR [rsp+0x108],rdx
   140002c94:	lea    rdx,[rsp+0x1e0]
   140002c9c:	repnz scas al,BYTE PTR es:[rdi]
   140002c9e:	not    rcx
   140002ca1:	dec    rcx
   140002ca4:	mov    DWORD PTR [rsp+0x100],ecx
   140002cab:	lea    rcx,[rsp+0x30]
   140002cb0:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   140002cb8:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   140002cc1:	call   QWORD PTR [rip+0x96c9]        # 0x14000c390
   140002cc7:	test   al,al
   140002cc9:	jne    0x1400030b7
   140002ccf:	xor    eax,eax
   140002cd1:	mov    rcx,rbx
   140002cd4:	mov    rdi,r13
   140002cd7:	repnz scas al,BYTE PTR es:[rdi]
   140002cd9:	mov    QWORD PTR [rsp+0x128],r13
   140002ce1:	lea    rdx,[rsp+0x200]
   140002ce9:	not    rcx
   140002cec:	dec    rcx
   140002cef:	mov    DWORD PTR [rsp+0x120],ecx
   140002cf6:	lea    rcx,[rsp+0x30]
   140002cfb:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   140002d03:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   140002d0c:	call   QWORD PTR [rip+0x967e]        # 0x14000c390
   140002d12:	test   al,al
   140002d14:	je     0x140002d3c
   140002d16:	mov    rax,QWORD PTR [rsp+0x40]
   140002d1b:	cmp    DWORD PTR [rax+0x4],0x0
   140002d1f:	je     0x140003188
   140002d25:	lea    rdx,[rsp+0x40]
   140002d2a:	lea    rcx,[rsp+0x38]
   140002d2f:	call   QWORD PTR [rip+0x966b]        # 0x14000c3a0
   140002d35:	inc    ebp
   140002d37:	jmp    0x1400030ba
   140002d3c:	xor    eax,eax
   140002d3e:	mov    rcx,rbx
   140002d41:	mov    rdi,r13
   140002d44:	repnz scas al,BYTE PTR es:[rdi]
   140002d46:	mov    QWORD PTR [rsp+0xd8],r13
   140002d4e:	lea    rdx,[rsp+0x210]
   140002d56:	not    rcx
   140002d59:	lea    r8d,[rax+0x1]
   140002d5d:	dec    rcx
   140002d60:	mov    DWORD PTR [rsp+0xd0],ecx
   140002d67:	lea    rcx,[rsp+0x30]
   140002d6c:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140002d74:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   140002d7d:	call   QWORD PTR [rip+0x94fd]        # 0x14000c280
   140002d83:	test   al,al
   140002d85:	je     0x140002e87
   140002d8b:	lea    rdx,[rsp+0x180]
   140002d93:	lea    rcx,[rsp+0x30]
   140002d98:	mov    r9d,ebx
   140002d9b:	mov    r8d,0x2
   140002da1:	call   QWORD PTR [rip+0x95b9]        # 0x14000c360
   140002da7:	lea    rcx,[rsp+0x38]
   140002dac:	mov    rdx,rax
   140002daf:	call   QWORD PTR [rip+0x95eb]        # 0x14000c3a0
   140002db5:	lea    rcx,[rsp+0x180]
   140002dbd:	call   QWORD PTR [rip+0x95f5]        # 0x14000c3b8
   140002dc3:	mov    rdx,QWORD PTR [rsp+0x38]
   140002dc8:	cmp    DWORD PTR [rdx+0x4],0x0
   140002dcc:	jne    0x1400030ba
   140002dd2:	mov    rcx,QWORD PTR [rip+0x92af]        # 0x14000c088
   140002dd9:	lea    rdx,[rip+0x9a40]        # 0x14000c820
   140002de0:	call   0x1400015b0
   140002de5:	mov    rdx,QWORD PTR [rip+0x9294]        # 0x14000c080
   140002dec:	mov    rcx,rax
   140002def:	call   QWORD PTR [rip+0x9283]        # 0x14000c078
   140002df5:	lea    rcx,[rsp+0x40]
   140002dfa:	call   QWORD PTR [rip+0x95b8]        # 0x14000c3b8
   140002e00:	lea    rcx,[rsp+0x30]
   140002e05:	call   QWORD PTR [rip+0x95ad]        # 0x14000c3b8
   140002e0b:	lea    rcx,[rsp+0x38]
   140002e10:	call   QWORD PTR [rip+0x95a2]        # 0x14000c3b8
   140002e16:	lea    rcx,[rsp+0x28]
   140002e1b:	call   QWORD PTR [rip+0x9597]        # 0x14000c3b8
   140002e21:	mov    rsi,QWORD PTR [rsp+0x20]
   140002e26:	mov    eax,DWORD PTR [rsi]
   140002e28:	test   eax,eax
   140002e2a:	je     0x140002e4c
   140002e2c:	cmp    eax,0xffffffff
   140002e2f:	je     0x14000322c
   140002e35:	lock xadd DWORD PTR [rsi],ebx
   140002e39:	add    ebx,0xffffffff
   140002e3c:	setne  al
   140002e3f:	test   al,al
   140002e41:	jne    0x14000322c
   140002e47:	mov    rsi,QWORD PTR [rsp+0x20]
   140002e4c:	movsxd rax,DWORD PTR [rsi+0xc]
   140002e50:	lea    rdi,[rsi+rax*8+0x10]
   140002e55:	movsxd rax,DWORD PTR [rsi+0x8]
   140002e59:	lea    rbx,[rsi+rax*8+0x10]
   140002e5e:	cmp    rbx,rdi
   140002e61:	je     0x140003223
   140002e67:	nop    WORD PTR [rax+rax*1+0x0]
   140002e70:	sub    rdi,0x8
   140002e74:	mov    rcx,rdi
   140002e77:	call   QWORD PTR [rip+0x953b]        # 0x14000c3b8
   140002e7d:	cmp    rdi,rbx
   140002e80:	jne    0x140002e70
   140002e82:	jmp    0x140003223
   140002e87:	xor    eax,eax
   140002e89:	mov    rcx,rbx
   140002e8c:	mov    rdi,r15
   140002e8f:	repnz scas al,BYTE PTR es:[rdi]
   140002e91:	mov    QWORD PTR [rsp+0x118],r15
   140002e99:	lea    rdx,[rsp+0x1b0]
   140002ea1:	not    rcx
   140002ea4:	dec    rcx
   140002ea7:	mov    DWORD PTR [rsp+0x110],ecx
   140002eae:	lea    rcx,[rsp+0x30]
   140002eb3:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140002ebb:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   140002ec4:	call   QWORD PTR [rip+0x94c6]        # 0x14000c390
   140002eca:	test   al,al
   140002ecc:	je     0x140002f0e
   140002ece:	mov    rax,QWORD PTR [rsp+0x40]
   140002ed3:	cmp    DWORD PTR [rax+0x4],0x0
   140002ed7:	je     0x1400032e9
   140002edd:	lea    rdx,[rsp+0x710]
   140002ee5:	lea    rcx,[rsp+0x40]
   140002eea:	mov    r8d,0xa
   140002ef0:	call   QWORD PTR [rip+0x9392]        # 0x14000c288
   140002ef6:	cmp    BYTE PTR [rsp+0x710],0x0
   140002efe:	mov    r12d,eax
   140002f01:	je     0x140003241
   140002f07:	inc    ebp
   140002f09:	jmp    0x1400030ba
   140002f0e:	xor    eax,eax
   140002f10:	mov    rcx,rbx
   140002f13:	mov    rdi,r15
   140002f16:	repnz scas al,BYTE PTR es:[rdi]
   140002f18:	mov    QWORD PTR [rsp+0x138],r15
   140002f20:	lea    rdx,[rsp+0x1d0]
   140002f28:	not    rcx
   140002f2b:	lea    r8d,[rax+0x1]
   140002f2f:	dec    rcx
   140002f32:	mov    DWORD PTR [rsp+0x130],ecx
   140002f39:	lea    rcx,[rsp+0x30]
   140002f3e:	movaps xmm0,XMMWORD PTR [rsp+0x130]
   140002f46:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   140002f4f:	call   QWORD PTR [rip+0x932b]        # 0x14000c280
   140002f55:	test   al,al
   140002f57:	je     0x140003067
   140002f5d:	lea    rdx,[rsp+0x170]
   140002f65:	lea    rcx,[rsp+0x30]
   140002f6a:	mov    r9d,ebx
   140002f6d:	mov    r8d,0x2
   140002f73:	call   QWORD PTR [rip+0x93e7]        # 0x14000c360
   140002f79:	lea    rdx,[rsp+0x718]
   140002f81:	mov    r8d,0xa
   140002f87:	mov    rcx,rax
   140002f8a:	call   QWORD PTR [rip+0x92f8]        # 0x14000c288
   140002f90:	lea    rcx,[rsp+0x170]
   140002f98:	mov    r12d,eax
   140002f9b:	call   QWORD PTR [rip+0x9417]        # 0x14000c3b8
   140002fa1:	cmp    BYTE PTR [rsp+0x718],0x0
   140002fa9:	jne    0x1400030ba
   140002faf:	mov    rcx,QWORD PTR [rip+0x90d2]        # 0x14000c088
   140002fb6:	lea    rdx,[rip+0x983b]        # 0x14000c7f8
   140002fbd:	call   0x1400015b0
   140002fc2:	mov    rdx,QWORD PTR [rip+0x90b7]        # 0x14000c080
   140002fc9:	mov    rcx,rax
   140002fcc:	call   QWORD PTR [rip+0x90a6]        # 0x14000c078
   140002fd2:	lea    rcx,[rsp+0x40]
   140002fd7:	call   QWORD PTR [rip+0x93db]        # 0x14000c3b8
   140002fdd:	lea    rcx,[rsp+0x30]
   140002fe2:	call   QWORD PTR [rip+0x93d0]        # 0x14000c3b8
   140002fe8:	lea    rcx,[rsp+0x38]
   140002fed:	call   QWORD PTR [rip+0x93c5]        # 0x14000c3b8
   140002ff3:	lea    rcx,[rsp+0x28]
   140002ff8:	call   QWORD PTR [rip+0x93ba]        # 0x14000c3b8
   140002ffe:	mov    rsi,QWORD PTR [rsp+0x20]
   140003003:	mov    eax,DWORD PTR [rsi]
   140003005:	test   eax,eax
   140003007:	je     0x140003029
   140003009:	cmp    eax,0xffffffff
   14000300c:	je     0x14000322c
   140003012:	lock xadd DWORD PTR [rsi],ebx
   140003016:	add    ebx,0xffffffff
   140003019:	setne  al
   14000301c:	test   al,al
   14000301e:	jne    0x14000322c
   140003024:	mov    rsi,QWORD PTR [rsp+0x20]
   140003029:	movsxd rax,DWORD PTR [rsi+0xc]
   14000302d:	lea    rdi,[rsi+rax*8+0x10]
   140003032:	movsxd rax,DWORD PTR [rsi+0x8]
   140003036:	lea    rbx,[rsi+rax*8+0x10]
   14000303b:	cmp    rbx,rdi
   14000303e:	je     0x140003223
   140003044:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003050:	sub    rdi,0x8
   140003054:	mov    rcx,rdi
   140003057:	call   QWORD PTR [rip+0x935b]        # 0x14000c3b8
   14000305d:	cmp    rdi,rbx
   140003060:	jne    0x140003050
   140003062:	jmp    0x140003223
   140003067:	lea    rcx,[rsp+0x90]
   14000306f:	mov    dl,0x2d
   140003071:	call   QWORD PTR [rip+0x9301]        # 0x14000c378
   140003077:	lea    rcx,[rsp+0x30]
   14000307c:	mov    r8d,0x1
   140003082:	movzx  edx,WORD PTR [rax]
   140003085:	call   QWORD PTR [rip+0x9205]        # 0x14000c290
   14000308b:	movzx  edi,al
   14000308e:	test   al,al
   140003090:	jne    0x140003397
   140003096:	mov    rcx,QWORD PTR [rsp+0x28]
   14000309b:	cmp    DWORD PTR [rcx+0x4],0x0
   14000309f:	jne    0x140003397
   1400030a5:	lea    rdx,[rsp+0x30]
   1400030aa:	lea    rcx,[rsp+0x28]
   1400030af:	call   QWORD PTR [rip+0x92eb]        # 0x14000c3a0
   1400030b5:	jmp    0x1400030ba
   1400030b7:	mov    r14b,0x1
   1400030ba:	lea    rcx,[rsp+0x40]
   1400030bf:	call   QWORD PTR [rip+0x92f3]        # 0x14000c3b8
   1400030c5:	lea    rcx,[rsp+0x30]
   1400030ca:	call   QWORD PTR [rip+0x92e8]        # 0x14000c3b8
   1400030d0:	mov    rax,QWORD PTR [rsp+0x20]
   1400030d5:	mov    ecx,DWORD PTR [rax+0xc]
   1400030d8:	sub    ecx,DWORD PTR [rax+0x8]
   1400030db:	cmp    ebp,ecx
   1400030dd:	jl     0x140002b12
   1400030e3:	mov    rax,QWORD PTR [rsp+0x28]
   1400030e8:	cmp    DWORD PTR [rax+0x4],0x0
   1400030ec:	jne    0x140003577
   1400030f2:	mov    rcx,QWORD PTR [rip+0x8f8f]        # 0x14000c088
   1400030f9:	lea    rdx,[rip+0x9578]        # 0x14000c678
   140003100:	call   0x1400015b0
   140003105:	mov    rdx,QWORD PTR [rip+0x8f74]        # 0x14000c080
   14000310c:	mov    rcx,rax
   14000310f:	call   QWORD PTR [rip+0x8f63]        # 0x14000c078
   140003115:	lea    rcx,[rsp+0x38]
   14000311a:	call   QWORD PTR [rip+0x9298]        # 0x14000c3b8
   140003120:	lea    rcx,[rsp+0x28]
   140003125:	call   QWORD PTR [rip+0x928d]        # 0x14000c3b8
   14000312b:	mov    rsi,QWORD PTR [rsp+0x20]
   140003130:	mov    eax,DWORD PTR [rsi]
   140003132:	test   eax,eax
   140003134:	je     0x140003156
   140003136:	cmp    eax,0xffffffff
   140003139:	je     0x14000411b
   14000313f:	lock xadd DWORD PTR [rsi],ebx
   140003143:	add    ebx,0xffffffff
   140003146:	setne  al
   140003149:	test   al,al
   14000314b:	jne    0x14000411b
   140003151:	mov    rsi,QWORD PTR [rsp+0x20]
   140003156:	movsxd rax,DWORD PTR [rsi+0xc]
   14000315a:	lea    rdi,[rsi+rax*8+0x10]
   14000315f:	movsxd rax,DWORD PTR [rsi+0x8]
   140003163:	lea    rbx,[rsi+rax*8+0x10]
   140003168:	cmp    rbx,rdi
   14000316b:	je     0x140004112
   140003171:	sub    rdi,0x8
   140003175:	mov    rcx,rdi
   140003178:	call   QWORD PTR [rip+0x923a]        # 0x14000c3b8
   14000317e:	cmp    rdi,rbx
   140003181:	jne    0x140003171
   140003183:	jmp    0x140004112
   140003188:	mov    rcx,QWORD PTR [rip+0x8ef9]        # 0x14000c088
   14000318f:	lea    rdx,[rip+0x968a]        # 0x14000c820
   140003196:	call   0x1400015b0
   14000319b:	mov    rdx,QWORD PTR [rip+0x8ede]        # 0x14000c080
   1400031a2:	mov    rcx,rax
   1400031a5:	call   QWORD PTR [rip+0x8ecd]        # 0x14000c078
   1400031ab:	lea    rcx,[rsp+0x40]
   1400031b0:	call   QWORD PTR [rip+0x9202]        # 0x14000c3b8
   1400031b6:	lea    rcx,[rsp+0x30]
   1400031bb:	call   QWORD PTR [rip+0x91f7]        # 0x14000c3b8
   1400031c1:	lea    rcx,[rsp+0x38]
   1400031c6:	call   QWORD PTR [rip+0x91ec]        # 0x14000c3b8
   1400031cc:	lea    rcx,[rsp+0x28]
   1400031d1:	call   QWORD PTR [rip+0x91e1]        # 0x14000c3b8
   1400031d7:	mov    rsi,QWORD PTR [rsp+0x20]
   1400031dc:	mov    eax,DWORD PTR [rsi]
   1400031de:	test   eax,eax
   1400031e0:	je     0x1400031fa
   1400031e2:	cmp    eax,0xffffffff
   1400031e5:	je     0x14000322c
   1400031e7:	lock xadd DWORD PTR [rsi],ebx
   1400031eb:	add    ebx,0xffffffff
   1400031ee:	setne  al
   1400031f1:	test   al,al
   1400031f3:	jne    0x14000322c
   1400031f5:	mov    rsi,QWORD PTR [rsp+0x20]
   1400031fa:	movsxd rax,DWORD PTR [rsi+0xc]
   1400031fe:	lea    rdi,[rsi+rax*8+0x10]
   140003203:	movsxd rax,DWORD PTR [rsi+0x8]
   140003207:	lea    rbx,[rsi+rax*8+0x10]
   14000320c:	cmp    rbx,rdi
   14000320f:	je     0x140003223
   140003211:	sub    rdi,0x8
   140003215:	mov    rcx,rdi
   140003218:	call   QWORD PTR [rip+0x919a]        # 0x14000c3b8
   14000321e:	cmp    rdi,rbx
   140003221:	jne    0x140003211
   140003223:	mov    rcx,rsi
   140003226:	call   QWORD PTR [rip+0x90dc]        # 0x14000c308
   14000322c:	lea    rcx,[rsp+0x58]
   140003231:	call   QWORD PTR [rip+0x9061]        # 0x14000c298
   140003237:	mov    eax,0x1
   14000323c:	jmp    0x140004128
   140003241:	mov    rcx,QWORD PTR [rip+0x8e40]        # 0x14000c088
   140003248:	lea    rdx,[rip+0x95a9]        # 0x14000c7f8
   14000324f:	call   0x1400015b0
   140003254:	mov    rdx,QWORD PTR [rip+0x8e25]        # 0x14000c080
   14000325b:	mov    rcx,rax
   14000325e:	call   QWORD PTR [rip+0x8e14]        # 0x14000c078
   140003264:	lea    rcx,[rsp+0x40]
   140003269:	call   QWORD PTR [rip+0x9149]        # 0x14000c3b8
   14000326f:	lea    rcx,[rsp+0x30]
   140003274:	call   QWORD PTR [rip+0x913e]        # 0x14000c3b8
   14000327a:	lea    rcx,[rsp+0x38]
   14000327f:	call   QWORD PTR [rip+0x9133]        # 0x14000c3b8
   140003285:	lea    rcx,[rsp+0x28]
   14000328a:	call   QWORD PTR [rip+0x9128]        # 0x14000c3b8
   140003290:	mov    rsi,QWORD PTR [rsp+0x20]
   140003295:	mov    eax,DWORD PTR [rsi]
   140003297:	test   eax,eax
   140003299:	je     0x1400032b7
   14000329b:	cmp    eax,0xffffffff
   14000329e:	je     0x14000322c
   1400032a0:	lock xadd DWORD PTR [rsi],ebx
   1400032a4:	add    ebx,0xffffffff
   1400032a7:	setne  al
   1400032aa:	test   al,al
   1400032ac:	jne    0x14000322c
   1400032b2:	mov    rsi,QWORD PTR [rsp+0x20]
   1400032b7:	movsxd rax,DWORD PTR [rsi+0xc]
   1400032bb:	lea    rdi,[rsi+rax*8+0x10]
   1400032c0:	movsxd rax,DWORD PTR [rsi+0x8]
   1400032c4:	lea    rbx,[rsi+rax*8+0x10]
   1400032c9:	cmp    rbx,rdi
   1400032cc:	je     0x140003223
   1400032d2:	sub    rdi,0x8
   1400032d6:	mov    rcx,rdi
   1400032d9:	call   QWORD PTR [rip+0x90d9]        # 0x14000c3b8
   1400032df:	cmp    rdi,rbx
   1400032e2:	jne    0x1400032d2
   1400032e4:	jmp    0x140003223
   1400032e9:	mov    rcx,QWORD PTR [rip+0x8d98]        # 0x14000c088
   1400032f0:	lea    rdx,[rip+0x94d9]        # 0x14000c7d0
   1400032f7:	call   0x1400015b0
   1400032fc:	mov    rdx,QWORD PTR [rip+0x8d7d]        # 0x14000c080
   140003303:	mov    rcx,rax
   140003306:	call   QWORD PTR [rip+0x8d6c]        # 0x14000c078
   14000330c:	lea    rcx,[rsp+0x40]
   140003311:	call   QWORD PTR [rip+0x90a1]        # 0x14000c3b8
   140003317:	lea    rcx,[rsp+0x30]
   14000331c:	call   QWORD PTR [rip+0x9096]        # 0x14000c3b8
   140003322:	lea    rcx,[rsp+0x38]
   140003327:	call   QWORD PTR [rip+0x908b]        # 0x14000c3b8
   14000332d:	lea    rcx,[rsp+0x28]
   140003332:	call   QWORD PTR [rip+0x9080]        # 0x14000c3b8
   140003338:	mov    rsi,QWORD PTR [rsp+0x20]
   14000333d:	mov    eax,DWORD PTR [rsi]
   14000333f:	test   eax,eax
   140003341:	je     0x140003363
   140003343:	cmp    eax,0xffffffff
   140003346:	je     0x14000322c
   14000334c:	lock xadd DWORD PTR [rsi],ebx
   140003350:	add    ebx,0xffffffff
   140003353:	setne  al
   140003356:	test   al,al
   140003358:	jne    0x14000322c
   14000335e:	mov    rsi,QWORD PTR [rsp+0x20]
   140003363:	movsxd rax,DWORD PTR [rsi+0xc]
   140003367:	lea    rdi,[rsi+rax*8+0x10]
   14000336c:	movsxd rax,DWORD PTR [rsi+0x8]
   140003370:	lea    rbx,[rsi+rax*8+0x10]
   140003375:	cmp    rbx,rdi
   140003378:	je     0x140003223
   14000337e:	xchg   ax,ax
   140003380:	sub    rdi,0x8
   140003384:	mov    rcx,rdi
   140003387:	call   QWORD PTR [rip+0x902b]        # 0x14000c3b8
   14000338d:	cmp    rdi,rbx
   140003390:	jne    0x140003380
   140003392:	jmp    0x140003223
   140003397:	movzx  ecx,dil
   14000339b:	call   0x140001e10
   1400033a0:	test   dil,dil
   1400033a3:	je     0x14000342f
   1400033a9:	lea    rdx,[rsp+0x30]
   1400033ae:	lea    rcx,[rsp+0x158]
   1400033b6:	call   QWORD PTR [rip+0x9004]        # 0x14000c3c0
   1400033bc:	lea    rdx,[rsp+0x148]
   1400033c4:	mov    rcx,rax
   1400033c7:	call   QWORD PTR [rip+0x8ed3]        # 0x14000c2a0
   1400033cd:	mov    rcx,rax
   1400033d0:	call   QWORD PTR [rip+0x8ed2]        # 0x14000c2a8
   1400033d6:	mov    rcx,QWORD PTR [rip+0x8cab]        # 0x14000c088
   1400033dd:	lea    rdx,[rip+0x93cc]        # 0x14000c7b0
   1400033e4:	mov    rdi,rax
   1400033e7:	call   0x1400015b0
   1400033ec:	mov    rdx,rdi
   1400033ef:	mov    rcx,rax
   1400033f2:	call   0x1400015b0
   1400033f7:	mov    dl,0x27
   1400033f9:	mov    rcx,rax
   1400033fc:	call   0x1400017a0
   140003401:	mov    rdx,QWORD PTR [rip+0x8c78]        # 0x14000c080
   140003408:	mov    rcx,rax
   14000340b:	call   QWORD PTR [rip+0x8c67]        # 0x14000c078
   140003411:	lea    rcx,[rsp+0x148]
   140003419:	call   QWORD PTR [rip+0x8e91]        # 0x14000c2b0
   14000341f:	lea    rcx,[rsp+0x158]
   140003427:	call   QWORD PTR [rip+0x8f8b]        # 0x14000c3b8
   14000342d:	jmp    0x140003452
   14000342f:	mov    rcx,QWORD PTR [rip+0x8c52]        # 0x14000c088
   140003436:	lea    rdx,[rip+0x934b]        # 0x14000c788
   14000343d:	call   0x1400015b0
   140003442:	mov    rdx,QWORD PTR [rip+0x8c37]        # 0x14000c080
   140003449:	mov    rcx,rax
   14000344c:	call   QWORD PTR [rip+0x8c26]        # 0x14000c078
   140003452:	lea    rcx,[rsp+0x40]
   140003457:	call   QWORD PTR [rip+0x8f5b]        # 0x14000c3b8
   14000345d:	lea    rcx,[rsp+0x30]
   140003462:	call   QWORD PTR [rip+0x8f50]        # 0x14000c3b8
   140003468:	lea    rcx,[rsp+0x38]
   14000346d:	call   QWORD PTR [rip+0x8f45]        # 0x14000c3b8
   140003473:	lea    rcx,[rsp+0x28]
   140003478:	call   QWORD PTR [rip+0x8f3a]        # 0x14000c3b8
   14000347e:	mov    rsi,QWORD PTR [rsp+0x20]
   140003483:	mov    eax,DWORD PTR [rsi]
   140003485:	test   eax,eax
   140003487:	je     0x1400034a9
   140003489:	cmp    eax,0xffffffff
   14000348c:	je     0x14000322c
   140003492:	lock xadd DWORD PTR [rsi],ebx
   140003496:	add    ebx,0xffffffff
   140003499:	setne  al
   14000349c:	test   al,al
   14000349e:	jne    0x14000322c
   1400034a4:	mov    rsi,QWORD PTR [rsp+0x20]
   1400034a9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400034ad:	lea    rdi,[rsi+rax*8+0x10]
   1400034b2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400034b6:	lea    rbx,[rsi+rax*8+0x10]
   1400034bb:	cmp    rbx,rdi
   1400034be:	je     0x140003223
   1400034c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400034d0:	sub    rdi,0x8
   1400034d4:	mov    rcx,rdi
   1400034d7:	call   QWORD PTR [rip+0x8edb]        # 0x14000c3b8
   1400034dd:	cmp    rdi,rbx
   1400034e0:	jne    0x1400034d0
   1400034e2:	jmp    0x140003223
   1400034e7:	mov    cl,0x1
   1400034e9:	call   0x140001e10
   1400034ee:	lea    rcx,[rsp+0x40]
   1400034f3:	call   QWORD PTR [rip+0x8ebf]        # 0x14000c3b8
   1400034f9:	lea    rcx,[rsp+0x30]
   1400034fe:	call   QWORD PTR [rip+0x8eb4]        # 0x14000c3b8
   140003504:	lea    rcx,[rsp+0x38]
   140003509:	call   QWORD PTR [rip+0x8ea9]        # 0x14000c3b8
   14000350f:	lea    rcx,[rsp+0x28]
   140003514:	call   QWORD PTR [rip+0x8e9e]        # 0x14000c3b8
   14000351a:	mov    rsi,QWORD PTR [rsp+0x20]
   14000351f:	mov    eax,DWORD PTR [rsi]
   140003521:	test   eax,eax
   140003523:	je     0x140003545
   140003525:	cmp    eax,0xffffffff
   140003528:	je     0x14000411b
   14000352e:	lock xadd DWORD PTR [rsi],ebx
   140003532:	add    ebx,0xffffffff
   140003535:	setne  al
   140003538:	test   al,al
   14000353a:	jne    0x14000411b
   140003540:	mov    rsi,QWORD PTR [rsp+0x20]
   140003545:	movsxd rax,DWORD PTR [rsi+0xc]
   140003549:	lea    rdi,[rsi+rax*8+0x10]
   14000354e:	movsxd rax,DWORD PTR [rsi+0x8]
   140003552:	lea    rbx,[rsi+rax*8+0x10]
   140003557:	cmp    rbx,rdi
   14000355a:	je     0x140004112
   140003560:	sub    rdi,0x8
   140003564:	mov    rcx,rdi
   140003567:	call   QWORD PTR [rip+0x8e4b]        # 0x14000c3b8
   14000356d:	cmp    rdi,rbx
   140003570:	jne    0x140003560
   140003572:	jmp    0x140004112
   140003577:	lea    rdx,[rsp+0x28]
   14000357c:	lea    rcx,[rsp+0x70]
   140003581:	call   QWORD PTR [rip+0x8d31]        # 0x14000c2b8
   140003587:	lea    rcx,[rsp+0x70]
   14000358c:	mov    edx,0x1
   140003591:	mov    DWORD PTR [rsp+0x190],0x1
   14000359c:	call   QWORD PTR [rip+0x8d1e]        # 0x14000c2c0
   1400035a2:	test   al,al
   1400035a4:	jne    0x1400036b7
   1400035aa:	lea    rdx,[rsp+0x28]
   1400035af:	lea    rcx,[rsp+0x140]
   1400035b7:	call   QWORD PTR [rip+0x8e03]        # 0x14000c3c0
   1400035bd:	lea    rdx,[rsp+0x168]
   1400035c5:	mov    rcx,rax
   1400035c8:	call   QWORD PTR [rip+0x8cd2]        # 0x14000c2a0
   1400035ce:	mov    rcx,rax
   1400035d1:	call   QWORD PTR [rip+0x8cd1]        # 0x14000c2a8
   1400035d7:	mov    rcx,QWORD PTR [rip+0x8aaa]        # 0x14000c088
   1400035de:	lea    rdx,[rip+0x9193]        # 0x14000c778
   1400035e5:	mov    rdi,rax
   1400035e8:	call   0x1400015b0
   1400035ed:	mov    rdx,rdi
   1400035f0:	mov    rcx,rax
   1400035f3:	call   0x1400015b0
   1400035f8:	lea    rdx,[rip+0x9159]        # 0x14000c758
   1400035ff:	mov    rcx,rax
   140003602:	call   0x1400015b0
   140003607:	mov    rdx,QWORD PTR [rip+0x8a72]        # 0x14000c080
   14000360e:	mov    rcx,rax
   140003611:	call   QWORD PTR [rip+0x8a61]        # 0x14000c078
   140003617:	lea    rcx,[rsp+0x168]
   14000361f:	call   QWORD PTR [rip+0x8c8b]        # 0x14000c2b0
   140003625:	lea    rcx,[rsp+0x140]
   14000362d:	call   QWORD PTR [rip+0x8d85]        # 0x14000c3b8
   140003633:	lea    rcx,[rsp+0x70]
   140003638:	call   QWORD PTR [rip+0x8c8a]        # 0x14000c2c8
   14000363e:	lea    rcx,[rsp+0x38]
   140003643:	call   QWORD PTR [rip+0x8d6f]        # 0x14000c3b8
   140003649:	lea    rcx,[rsp+0x28]
   14000364e:	call   QWORD PTR [rip+0x8d64]        # 0x14000c3b8
   140003654:	mov    rsi,QWORD PTR [rsp+0x20]
   140003659:	mov    eax,DWORD PTR [rsi]
   14000365b:	test   eax,eax
   14000365d:	je     0x14000367f
   14000365f:	cmp    eax,0xffffffff
   140003662:	je     0x14000322c
   140003668:	lock xadd DWORD PTR [rsi],ebx
   14000366c:	add    ebx,0xffffffff
   14000366f:	setne  al
   140003672:	test   al,al
   140003674:	jne    0x14000322c
   14000367a:	mov    rsi,QWORD PTR [rsp+0x20]
   14000367f:	movsxd rax,DWORD PTR [rsi+0xc]
   140003683:	lea    rdi,[rsi+rax*8+0x10]
   140003688:	movsxd rax,DWORD PTR [rsi+0x8]
   14000368c:	lea    rbx,[rsi+rax*8+0x10]
   140003691:	cmp    rbx,rdi
   140003694:	je     0x140003223
   14000369a:	nop    WORD PTR [rax+rax*1+0x0]
   1400036a0:	sub    rdi,0x8
   1400036a4:	mov    rcx,rdi
   1400036a7:	call   QWORD PTR [rip+0x8d0b]        # 0x14000c3b8
   1400036ad:	cmp    rdi,rbx
   1400036b0:	jne    0x1400036a0
   1400036b2:	jmp    0x140003223
   1400036b7:	lea    rdx,[rsp+0x188]
   1400036bf:	lea    rcx,[rsp+0x70]
   1400036c4:	call   QWORD PTR [rip+0x8c06]        # 0x14000c2d0
   1400036ca:	lea    rcx,[rsp+0x50]
   1400036cf:	mov    rdx,rax
   1400036d2:	call   QWORD PTR [rip+0x8c00]        # 0x14000c2d8
   1400036d8:	lea    rcx,[rsp+0x188]
   1400036e0:	call   QWORD PTR [rip+0x8bca]        # 0x14000c2b0
   1400036e6:	lea    rcx,[rsp+0x70]
   1400036eb:	call   QWORD PTR [rip+0x8bef]        # 0x14000c2e0
   1400036f1:	lea    rcx,[rsp+0x220]
   1400036f9:	mov    edx,r12d
   1400036fc:	call   0x140002760
   140003701:	lea    r8,[rsp+0x50]
   140003706:	lea    rdx,[rsp+0x28]
   14000370b:	lea    rcx,[rsp+0x220]
   140003713:	call   0x140001040
   140003718:	test   al,al
   14000371a:	jne    0x140003847
   140003720:	lea    rdx,[rsp+0x28]
   140003725:	lea    rcx,[rsp+0x150]
   14000372d:	call   QWORD PTR [rip+0x8c8d]        # 0x14000c3c0
   140003733:	lea    rdx,[rsp+0x198]
   14000373b:	mov    rcx,rax
   14000373e:	call   QWORD PTR [rip+0x8b5c]        # 0x14000c2a0
   140003744:	mov    rcx,rax
   140003747:	call   QWORD PTR [rip+0x8b5b]        # 0x14000c2a8
   14000374d:	mov    rcx,QWORD PTR [rip+0x8934]        # 0x14000c088
   140003754:	lea    rdx,[rip+0x8fe5]        # 0x14000c740
   14000375b:	mov    rdi,rax
   14000375e:	call   0x1400015b0
   140003763:	mov    rdx,rdi
   140003766:	mov    rcx,rax
   140003769:	call   0x1400015b0
   14000376e:	lea    rdx,[rip+0x8fab]        # 0x14000c720
   140003775:	mov    rcx,rax
   140003778:	call   0x1400015b0
   14000377d:	mov    rdx,QWORD PTR [rip+0x88fc]        # 0x14000c080
   140003784:	mov    rcx,rax
   140003787:	call   QWORD PTR [rip+0x88eb]        # 0x14000c078
   14000378d:	lea    rcx,[rsp+0x198]
   140003795:	call   QWORD PTR [rip+0x8b15]        # 0x14000c2b0
   14000379b:	lea    rcx,[rsp+0x150]
   1400037a3:	call   QWORD PTR [rip+0x8c0f]        # 0x14000c3b8
   1400037a9:	lea    rcx,[rsp+0x220]
   1400037b1:	call   0x140002860
   1400037b6:	lea    rcx,[rsp+0x50]
   1400037bb:	call   QWORD PTR [rip+0x8bf7]        # 0x14000c3b8
   1400037c1:	lea    rcx,[rsp+0x70]
   1400037c6:	call   QWORD PTR [rip+0x8afc]        # 0x14000c2c8
   1400037cc:	lea    rcx,[rsp+0x38]
   1400037d1:	call   QWORD PTR [rip+0x8be1]        # 0x14000c3b8
   1400037d7:	lea    rcx,[rsp+0x28]
   1400037dc:	call   QWORD PTR [rip+0x8bd6]        # 0x14000c3b8
   1400037e2:	mov    rsi,QWORD PTR [rsp+0x20]
   1400037e7:	mov    eax,DWORD PTR [rsi]
   1400037e9:	test   eax,eax
   1400037eb:	je     0x14000380d
   1400037ed:	cmp    eax,0xffffffff
   1400037f0:	je     0x14000322c
   1400037f6:	lock xadd DWORD PTR [rsi],ebx
   1400037fa:	add    ebx,0xffffffff
   1400037fd:	setne  al
   140003800:	test   al,al
   140003802:	jne    0x14000322c
   140003808:	mov    rsi,QWORD PTR [rsp+0x20]
   14000380d:	movsxd rax,DWORD PTR [rsi+0xc]
   140003811:	lea    rdi,[rsi+rax*8+0x10]
   140003816:	movsxd rax,DWORD PTR [rsi+0x8]
   14000381a:	lea    rbx,[rsi+rax*8+0x10]
   14000381f:	cmp    rbx,rdi
   140003822:	je     0x140003223
   140003828:	nop    DWORD PTR [rax+rax*1+0x0]
   140003830:	sub    rdi,0x8
   140003834:	mov    rcx,rdi
   140003837:	call   QWORD PTR [rip+0x8b7b]        # 0x14000c3b8
   14000383d:	cmp    rdi,rbx
   140003840:	jne    0x140003830
   140003842:	jmp    0x140003223
   140003847:	lea    rcx,[rsp+0x590]
   14000384f:	mov    edx,r12d
   140003852:	call   0x140002760
   140003857:	lea    rdx,[rsp+0x338]
   14000385f:	lea    rcx,[rsp+0xc8]
   140003867:	or     esi,0x2
   14000386a:	call   QWORD PTR [rip+0x8b50]        # 0x14000c3c0
   140003870:	lea    r8,[rsp+0xc8]
   140003878:	lea    rdx,[rsp+0x28]
   14000387d:	lea    rcx,[rsp+0x590]
   140003885:	call   0x140001040
   14000388a:	test   al,al
   14000388c:	je     0x1400038dc
   14000388e:	lea    rdx,[rsp+0x338]
   140003896:	lea    rcx,[rsp+0xa8]
   14000389e:	or     esi,0xc
   1400038a1:	call   QWORD PTR [rip+0x8b19]        # 0x14000c3c0
   1400038a7:	lea    rdx,[rsp+0x6a8]
   1400038af:	lea    rcx,[rsp+0xc0]
   1400038b7:	call   QWORD PTR [rip+0x8b03]        # 0x14000c3c0
   1400038bd:	lea    rdx,[rsp+0xa8]
   1400038c5:	lea    rcx,[rsp+0xc0]
   1400038cd:	call   QWORD PTR [rip+0x8b05]        # 0x14000c3d8
   1400038d3:	test   al,al
   1400038d5:	je     0x1400038dc
   1400038d7:	xor    dil,dil
   1400038da:	jmp    0x1400038df
   1400038dc:	mov    dil,0x1
   1400038df:	test   sil,0x8
   1400038e3:	je     0x1400038f6
   1400038e5:	lea    rcx,[rsp+0xc0]
   1400038ed:	and    esi,0xfffffff7
   1400038f0:	call   QWORD PTR [rip+0x8ac2]        # 0x14000c3b8
   1400038f6:	test   sil,0x4
   1400038fa:	je     0x14000390d
   1400038fc:	lea    rcx,[rsp+0xa8]
   140003904:	and    esi,0xfffffffb
   140003907:	call   QWORD PTR [rip+0x8aab]        # 0x14000c3b8
   14000390d:	test   sil,0x2
   140003911:	je     0x140003921
   140003913:	lea    rcx,[rsp+0xc8]
   14000391b:	call   QWORD PTR [rip+0x8a97]        # 0x14000c3b8
   140003921:	test   dil,dil
   140003924:	je     0x140003a57
   14000392a:	lea    rdx,[rsp+0x28]
   14000392f:	lea    rcx,[rsp+0x110]
   140003937:	call   QWORD PTR [rip+0x8a83]        # 0x14000c3c0
   14000393d:	lea    rdx,[rsp+0x130]
   140003945:	mov    rcx,rax
   140003948:	call   QWORD PTR [rip+0x8952]        # 0x14000c2a0
   14000394e:	mov    rcx,rax
   140003951:	call   QWORD PTR [rip+0x8951]        # 0x14000c2a8
   140003957:	mov    rcx,QWORD PTR [rip+0x872a]        # 0x14000c088
   14000395e:	lea    rdx,[rip+0x8ddb]        # 0x14000c740
   140003965:	mov    rdi,rax
   140003968:	call   0x1400015b0
   14000396d:	mov    rdx,rdi
   140003970:	mov    rcx,rax
   140003973:	call   0x1400015b0
   140003978:	mov    dl,0x27
   14000397a:	mov    rcx,rax
   14000397d:	call   0x1400017a0
   140003982:	mov    rdx,QWORD PTR [rip+0x86f7]        # 0x14000c080
   140003989:	mov    rcx,rax
   14000398c:	call   QWORD PTR [rip+0x86e6]        # 0x14000c078
   140003992:	lea    rcx,[rsp+0x130]
   14000399a:	call   QWORD PTR [rip+0x8910]        # 0x14000c2b0
   1400039a0:	lea    rcx,[rsp+0x110]
   1400039a8:	call   QWORD PTR [rip+0x8a0a]        # 0x14000c3b8
   1400039ae:	lea    rcx,[rsp+0x590]
   1400039b6:	call   0x140002860
   1400039bb:	lea    rcx,[rsp+0x220]
   1400039c3:	call   0x140002860
   1400039c8:	lea    rcx,[rsp+0x50]
   1400039cd:	call   QWORD PTR [rip+0x89e5]        # 0x14000c3b8
   1400039d3:	lea    rcx,[rsp+0x70]
   1400039d8:	call   QWORD PTR [rip+0x88ea]        # 0x14000c2c8
   1400039de:	lea    rcx,[rsp+0x38]
   1400039e3:	call   QWORD PTR [rip+0x89cf]        # 0x14000c3b8
   1400039e9:	lea    rcx,[rsp+0x28]
   1400039ee:	call   QWORD PTR [rip+0x89c4]        # 0x14000c3b8
   1400039f4:	mov    rsi,QWORD PTR [rsp+0x20]
   1400039f9:	mov    eax,DWORD PTR [rsi]
   1400039fb:	test   eax,eax
   1400039fd:	je     0x140003a1f
   1400039ff:	cmp    eax,0xffffffff
   140003a02:	je     0x14000322c
   140003a08:	lock xadd DWORD PTR [rsi],ebx
   140003a0c:	add    ebx,0xffffffff
   140003a0f:	setne  al
   140003a12:	test   al,al
   140003a14:	jne    0x14000322c
   140003a1a:	mov    rsi,QWORD PTR [rsp+0x20]
   140003a1f:	movsxd rax,DWORD PTR [rsi+0xc]
   140003a23:	lea    rdi,[rsi+rax*8+0x10]
   140003a28:	movsxd rax,DWORD PTR [rsi+0x8]
   140003a2c:	lea    rbx,[rsi+rax*8+0x10]
   140003a31:	cmp    rbx,rdi
   140003a34:	je     0x140003223
   140003a3a:	nop    WORD PTR [rax+rax*1+0x0]
   140003a40:	sub    rdi,0x8
   140003a44:	mov    rcx,rdi
   140003a47:	call   QWORD PTR [rip+0x896b]        # 0x14000c3b8
   140003a4d:	cmp    rdi,rbx
   140003a50:	jne    0x140003a40
   140003a52:	jmp    0x140003223
   140003a57:	lea    rcx,[rsp+0x470]
   140003a5f:	call   0x140002900
   140003a64:	lea    rcx,[rsp+0x350]
   140003a6c:	call   0x140002900
   140003a71:	lea    r8,[rsp+0x50]
   140003a76:	lea    rdx,[rsp+0x28]
   140003a7b:	lea    rcx,[rsp+0x470]
   140003a83:	call   0x140001040
   140003a88:	lea    rdx,[rsp+0x338]
   140003a90:	lea    rcx,[rsp+0x98]
   140003a98:	call   QWORD PTR [rip+0x8922]        # 0x14000c3c0
   140003a9e:	lea    r8,[rsp+0x98]
   140003aa6:	lea    rdx,[rsp+0x28]
   140003aab:	lea    rcx,[rsp+0x350]
   140003ab3:	call   0x140001040
   140003ab8:	lea    rcx,[rsp+0x98]
   140003ac0:	call   QWORD PTR [rip+0x88f2]        # 0x14000c3b8
   140003ac6:	mov    rdi,QWORD PTR [rsp+0x588]
   140003ace:	mov    QWORD PTR [rsp+0x48],rdi
   140003ad3:	mov    eax,DWORD PTR [rdi]
   140003ad5:	test   eax,eax
   140003ad7:	je     0x140003ae4
   140003ad9:	cmp    eax,0xffffffff
   140003adc:	je     0x140003b43
   140003ade:	lock add DWORD PTR [rdi],0x1
   140003ae2:	jmp    0x140003b3e
   140003ae4:	mov    edx,DWORD PTR [rdi+0x4]
   140003ae7:	lea    rcx,[rsp+0x48]
   140003aec:	call   QWORD PTR [rip+0x880e]        # 0x14000c300
   140003af2:	mov    rdi,QWORD PTR [rsp+0x48]
   140003af7:	mov    rcx,QWORD PTR [rsp+0x588]
   140003aff:	movsxd rax,DWORD PTR [rdi+0xc]
   140003b03:	lea    r12,[rdi+rax*8+0x10]
   140003b08:	movsxd rax,DWORD PTR [rcx+0x8]
   140003b0c:	lea    rbp,[rcx+rax*8+0x10]
   140003b11:	movsxd rax,DWORD PTR [rdi+0x8]
   140003b15:	lea    rsi,[rdi+rax*8+0x10]
   140003b1a:	cmp    rsi,r12
   140003b1d:	je     0x140003b43
   140003b1f:	nop
   140003b20:	test   rsi,rsi
   140003b23:	je     0x140003b31
   140003b25:	mov    rdx,rbp
   140003b28:	mov    rcx,rsi
   140003b2b:	call   QWORD PTR [rip+0x888f]        # 0x14000c3c0
   140003b31:	add    rsi,0x8
   140003b35:	add    rbp,0x8
   140003b39:	cmp    rsi,r12
   140003b3c:	jne    0x140003b20
   140003b3e:	mov    rdi,QWORD PTR [rsp+0x48]
   140003b43:	mov    r13d,DWORD PTR [rdi+0xc]
   140003b47:	mov    rsi,QWORD PTR [rsp+0x468]
   140003b4f:	sub    r13d,DWORD PTR [rdi+0x8]
   140003b53:	mov    QWORD PTR [rsp+0x68],rsi
   140003b58:	mov    eax,DWORD PTR [rsi]
   140003b5a:	test   eax,eax
   140003b5c:	je     0x140003b69
   140003b5e:	cmp    eax,0xffffffff
   140003b61:	je     0x140003bcc
   140003b63:	lock add DWORD PTR [rsi],0x1
   140003b67:	jmp    0x140003bc2
   140003b69:	mov    edx,DWORD PTR [rsi+0x4]
   140003b6c:	lea    rcx,[rsp+0x68]
   140003b71:	call   QWORD PTR [rip+0x8789]        # 0x14000c300
   140003b77:	mov    rsi,QWORD PTR [rsp+0x68]
   140003b7c:	mov    rcx,QWORD PTR [rsp+0x468]
   140003b84:	movsxd rax,DWORD PTR [rsi+0xc]
   140003b88:	lea    r12,[rsi+rax*8+0x10]
   140003b8d:	movsxd rax,DWORD PTR [rcx+0x8]
   140003b91:	lea    rbp,[rcx+rax*8+0x10]
   140003b96:	movsxd rax,DWORD PTR [rsi+0x8]
   140003b9a:	lea    rdi,[rsi+rax*8+0x10]
   140003b9f:	cmp    rdi,r12
   140003ba2:	je     0x140003bc7
   140003ba4:	test   rdi,rdi
   140003ba7:	je     0x140003bb5
   140003ba9:	mov    rdx,rbp
   140003bac:	mov    rcx,rdi
   140003baf:	call   QWORD PTR [rip+0x880b]        # 0x14000c3c0
   140003bb5:	add    rdi,0x8
   140003bb9:	add    rbp,0x8
   140003bbd:	cmp    rdi,r12
   140003bc0:	jne    0x140003ba4
   140003bc2:	mov    rsi,QWORD PTR [rsp+0x68]
   140003bc7:	mov    rdi,QWORD PTR [rsp+0x48]
   140003bcc:	mov    eax,DWORD PTR [rsi+0xc]
   140003bcf:	sub    eax,DWORD PTR [rsi+0x8]
   140003bd2:	cmp    r13d,eax
   140003bd5:	mov    eax,DWORD PTR [rsi]
   140003bd7:	setne  r12b
   140003bdb:	test   eax,eax
   140003bdd:	je     0x140003bf9
   140003bdf:	cmp    eax,0xffffffff
   140003be2:	je     0x140003c30
   140003be4:	mov    eax,ebx
   140003be6:	lock xadd DWORD PTR [rsi],eax
   140003bea:	add    eax,0xffffffff
   140003bed:	setne  al
   140003bf0:	test   al,al
   140003bf2:	jne    0x140003c2b
   140003bf4:	mov    rsi,QWORD PTR [rsp+0x68]
   140003bf9:	movsxd rax,DWORD PTR [rsi+0xc]
   140003bfd:	lea    rdi,[rsi+rax*8+0x10]
   140003c02:	movsxd rax,DWORD PTR [rsi+0x8]
   140003c06:	lea    rbp,[rsi+rax*8+0x10]
   140003c0b:	cmp    rbp,rdi
   140003c0e:	je     0x140003c22
   140003c10:	sub    rdi,0x8
   140003c14:	mov    rcx,rdi
   140003c17:	call   QWORD PTR [rip+0x879b]        # 0x14000c3b8
   140003c1d:	cmp    rdi,rbp
   140003c20:	jne    0x140003c10
   140003c22:	mov    rcx,rsi
   140003c25:	call   QWORD PTR [rip+0x86dd]        # 0x14000c308
   140003c2b:	mov    rdi,QWORD PTR [rsp+0x48]
   140003c30:	mov    eax,DWORD PTR [rdi]
   140003c32:	test   eax,eax
   140003c34:	je     0x140003c50
   140003c36:	cmp    eax,0xffffffff
   140003c39:	je     0x140003c8b
   140003c3b:	mov    eax,ebx
   140003c3d:	lock xadd DWORD PTR [rdi],eax
   140003c41:	add    eax,0xffffffff
   140003c44:	setne  al
   140003c47:	test   al,al
   140003c49:	jne    0x140003c8b
   140003c4b:	mov    rdi,QWORD PTR [rsp+0x48]
   140003c50:	movsxd rax,DWORD PTR [rdi+0xc]
   140003c54:	lea    rsi,[rdi+rax*8+0x10]
   140003c59:	movsxd rax,DWORD PTR [rdi+0x8]
   140003c5d:	lea    rbp,[rdi+rax*8+0x10]
   140003c62:	cmp    rbp,rsi
   140003c65:	je     0x140003c82
   140003c67:	nop    WORD PTR [rax+rax*1+0x0]
   140003c70:	sub    rsi,0x8
   140003c74:	mov    rcx,rsi
   140003c77:	call   QWORD PTR [rip+0x873b]        # 0x14000c3b8
   140003c7d:	cmp    rsi,rbp
   140003c80:	jne    0x140003c70
   140003c82:	mov    rcx,rdi
   140003c85:	call   QWORD PTR [rip+0x867d]        # 0x14000c308
   140003c8b:	test   r12b,r12b
   140003c8e:	je     0x140003dd7
   140003c94:	lea    rdx,[rsp+0x28]
   140003c99:	lea    rcx,[rsp+0x120]
   140003ca1:	call   QWORD PTR [rip+0x8719]        # 0x14000c3c0
   140003ca7:	lea    rdx,[rsp+0xd0]
   140003caf:	mov    rcx,rax
   140003cb2:	call   QWORD PTR [rip+0x85e8]        # 0x14000c2a0
   140003cb8:	mov    rcx,rax
   140003cbb:	call   QWORD PTR [rip+0x85e7]        # 0x14000c2a8
   140003cc1:	mov    rcx,QWORD PTR [rip+0x83c0]        # 0x14000c088
   140003cc8:	lea    rdx,[rip+0x8a71]        # 0x14000c740
   140003ccf:	mov    rdi,rax
   140003cd2:	call   0x1400015b0
   140003cd7:	mov    rdx,rdi
   140003cda:	mov    rcx,rax
   140003cdd:	call   0x1400015b0
   140003ce2:	mov    dl,0x27
   140003ce4:	mov    rcx,rax
   140003ce7:	call   0x1400017a0
   140003cec:	mov    rdx,QWORD PTR [rip+0x838d]        # 0x14000c080
   140003cf3:	mov    rcx,rax
   140003cf6:	call   QWORD PTR [rip+0x837c]        # 0x14000c078
   140003cfc:	lea    rcx,[rsp+0xd0]
   140003d04:	call   QWORD PTR [rip+0x85a6]        # 0x14000c2b0
   140003d0a:	lea    rcx,[rsp+0x120]
   140003d12:	call   QWORD PTR [rip+0x86a0]        # 0x14000c3b8
   140003d18:	lea    rcx,[rsp+0x350]
   140003d20:	call   0x1400029e0
   140003d25:	lea    rcx,[rsp+0x470]
   140003d2d:	call   0x1400029e0
   140003d32:	lea    rcx,[rsp+0x590]
   140003d3a:	call   0x140002860
   140003d3f:	lea    rcx,[rsp+0x220]
   140003d47:	call   0x140002860
   140003d4c:	lea    rcx,[rsp+0x50]
   140003d51:	call   QWORD PTR [rip+0x8661]        # 0x14000c3b8
   140003d57:	lea    rcx,[rsp+0x70]
   140003d5c:	call   QWORD PTR [rip+0x8566]        # 0x14000c2c8
   140003d62:	lea    rcx,[rsp+0x38]
   140003d67:	call   QWORD PTR [rip+0x864b]        # 0x14000c3b8
   140003d6d:	lea    rcx,[rsp+0x28]
   140003d72:	call   QWORD PTR [rip+0x8640]        # 0x14000c3b8
   140003d78:	mov    rsi,QWORD PTR [rsp+0x20]
   140003d7d:	mov    eax,DWORD PTR [rsi]
   140003d7f:	test   eax,eax
   140003d81:	je     0x140003da3
   140003d83:	cmp    eax,0xffffffff
   140003d86:	je     0x14000322c
   140003d8c:	lock xadd DWORD PTR [rsi],ebx
   140003d90:	add    ebx,0xffffffff
   140003d93:	setne  al
   140003d96:	test   al,al
   140003d98:	jne    0x14000322c
   140003d9e:	mov    rsi,QWORD PTR [rsp+0x20]
   140003da3:	movsxd rax,DWORD PTR [rsi+0xc]
   140003da7:	lea    rdi,[rsi+rax*8+0x10]
   140003dac:	movsxd rax,DWORD PTR [rsi+0x8]
   140003db0:	lea    rbx,[rsi+rax*8+0x10]
   140003db5:	cmp    rbx,rdi
   140003db8:	je     0x140003223
   140003dbe:	xchg   ax,ax
   140003dc0:	sub    rdi,0x8
   140003dc4:	mov    rcx,rdi
   140003dc7:	call   QWORD PTR [rip+0x85eb]        # 0x14000c3b8
   140003dcd:	cmp    rdi,rbx
   140003dd0:	jne    0x140003dc0
   140003dd2:	jmp    0x140003223
   140003dd7:	test   r14b,r14b
   140003dda:	jne    0x14000405c
   140003de0:	mov    rax,QWORD PTR [rsp+0x38]
   140003de5:	cmp    DWORD PTR [rax+0x4],0x0
   140003de9:	jne    0x140003e55
   140003deb:	lea    rdx,[rsp+0x338]
   140003df3:	lea    rcx,[rsp+0xb8]
   140003dfb:	call   QWORD PTR [rip+0x85bf]        # 0x14000c3c0
   140003e01:	lea    rdx,[rsp+0xb0]
   140003e09:	lea    rcx,[rsp+0xb8]
   140003e11:	call   QWORD PTR [rip+0x84d1]        # 0x14000c2e8
   140003e17:	lea    rcx,[rsp+0xb8]
   140003e1f:	call   QWORD PTR [rip+0x8593]        # 0x14000c3b8
   140003e25:	lea    rcx,[rsp+0xb0]
   140003e2d:	call   QWORD PTR [rip+0x8475]        # 0x14000c2a8
   140003e33:	mov    rcx,QWORD PTR [rip+0x8256]        # 0x14000c090
   140003e3a:	mov    rdx,rax
   140003e3d:	call   0x1400015b0
   140003e42:	lea    rcx,[rsp+0xb0]
   140003e4a:	call   QWORD PTR [rip+0x8460]        # 0x14000c2b0
   140003e50:	jmp    0x14000405c
   140003e55:	lea    rdx,[rsp+0x38]
   140003e5a:	lea    rcx,[rsp+0x80]
   140003e62:	call   QWORD PTR [rip+0x8450]        # 0x14000c2b8
   140003e68:	lea    rcx,[rsp+0x80]
   140003e70:	mov    edx,0x2
   140003e75:	mov    DWORD PTR [rsp+0x178],0x2
   140003e80:	call   QWORD PTR [rip+0x843a]        # 0x14000c2c0
   140003e86:	test   al,al
   140003e88:	jne    0x140003fe7
   140003e8e:	lea    rdx,[rsp+0x28]
   140003e93:	lea    rcx,[rsp+0xe0]
   140003e9b:	call   QWORD PTR [rip+0x851f]        # 0x14000c3c0
   140003ea1:	lea    rdx,[rsp+0x100]
   140003ea9:	mov    rcx,rax
   140003eac:	call   QWORD PTR [rip+0x83ee]        # 0x14000c2a0
   140003eb2:	mov    rcx,rax
   140003eb5:	call   QWORD PTR [rip+0x83ed]        # 0x14000c2a8
   140003ebb:	mov    rcx,QWORD PTR [rip+0x81c6]        # 0x14000c088
   140003ec2:	lea    rdx,[rip+0x8877]        # 0x14000c740
   140003ec9:	mov    rdi,rax
   140003ecc:	call   0x1400015b0
   140003ed1:	mov    rdx,rdi
   140003ed4:	mov    rcx,rax
   140003ed7:	call   0x1400015b0
   140003edc:	lea    rdx,[rip+0x8825]        # 0x14000c708
   140003ee3:	mov    rcx,rax
   140003ee6:	call   0x1400015b0
   140003eeb:	mov    rdx,QWORD PTR [rip+0x818e]        # 0x14000c080
   140003ef2:	mov    rcx,rax
   140003ef5:	call   QWORD PTR [rip+0x817d]        # 0x14000c078
   140003efb:	lea    rcx,[rsp+0x100]
   140003f03:	call   QWORD PTR [rip+0x83a7]        # 0x14000c2b0
   140003f09:	lea    rcx,[rsp+0xe0]
   140003f11:	call   QWORD PTR [rip+0x84a1]        # 0x14000c3b8
   140003f17:	lea    rcx,[rsp+0x80]
   140003f1f:	call   QWORD PTR [rip+0x83a3]        # 0x14000c2c8
   140003f25:	lea    rcx,[rsp+0x350]
   140003f2d:	call   0x1400029e0
   140003f32:	lea    rcx,[rsp+0x470]
   140003f3a:	call   0x1400029e0
   140003f3f:	lea    rcx,[rsp+0x590]
   140003f47:	call   0x140002860
   140003f4c:	lea    rcx,[rsp+0x220]
   140003f54:	call   0x140002860
   140003f59:	lea    rcx,[rsp+0x50]
   140003f5e:	call   QWORD PTR [rip+0x8454]        # 0x14000c3b8
   140003f64:	lea    rcx,[rsp+0x70]
   140003f69:	call   QWORD PTR [rip+0x8359]        # 0x14000c2c8
   140003f6f:	lea    rcx,[rsp+0x38]
   140003f74:	call   QWORD PTR [rip+0x843e]        # 0x14000c3b8
   140003f7a:	lea    rcx,[rsp+0x28]
   140003f7f:	call   QWORD PTR [rip+0x8433]        # 0x14000c3b8
   140003f85:	mov    rsi,QWORD PTR [rsp+0x20]
   140003f8a:	mov    eax,DWORD PTR [rsi]
   140003f8c:	test   eax,eax
   140003f8e:	je     0x140003fb0
   140003f90:	cmp    eax,0xffffffff
   140003f93:	je     0x14000322c
   140003f99:	lock xadd DWORD PTR [rsi],ebx
   140003f9d:	add    ebx,0xffffffff
   140003fa0:	setne  al
   140003fa3:	test   al,al
   140003fa5:	jne    0x14000322c
   140003fab:	mov    rsi,QWORD PTR [rsp+0x20]
   140003fb0:	movsxd rax,DWORD PTR [rsi+0xc]
   140003fb4:	lea    rdi,[rsi+rax*8+0x10]
   140003fb9:	movsxd rax,DWORD PTR [rsi+0x8]
   140003fbd:	lea    rbx,[rsi+rax*8+0x10]
   140003fc2:	cmp    rbx,rdi
   140003fc5:	je     0x140003223
   140003fcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003fd0:	sub    rdi,0x8
   140003fd4:	mov    rcx,rdi
   140003fd7:	call   QWORD PTR [rip+0x83db]        # 0x14000c3b8
   140003fdd:	cmp    rdi,rbx
   140003fe0:	jne    0x140003fd0
   140003fe2:	jmp    0x140003223
   140003fe7:	lea    rdx,[rsp+0x338]
   140003fef:	lea    rcx,[rsp+0xa0]
   140003ff7:	call   QWORD PTR [rip+0x83c3]        # 0x14000c3c0
   140003ffd:	lea    rdx,[rsp+0xf0]
   140004005:	lea    rcx,[rsp+0xa0]
   14000400d:	call   QWORD PTR [rip+0x82d5]        # 0x14000c2e8
   140004013:	lea    rcx,[rsp+0x80]
   14000401b:	mov    rdx,rax
   14000401e:	call   QWORD PTR [rip+0x82cc]        # 0x14000c2f0
   140004024:	lea    rcx,[rsp+0xf0]
   14000402c:	call   QWORD PTR [rip+0x827e]        # 0x14000c2b0
   140004032:	lea    rcx,[rsp+0xa0]
   14000403a:	call   QWORD PTR [rip+0x8378]        # 0x14000c3b8
   140004040:	lea    rcx,[rsp+0x80]
   140004048:	call   QWORD PTR [rip+0x8292]        # 0x14000c2e0
   14000404e:	lea    rcx,[rsp+0x80]
   140004056:	call   QWORD PTR [rip+0x826c]        # 0x14000c2c8
   14000405c:	lea    rcx,[rsp+0x350]
   140004064:	call   0x1400029e0
   140004069:	lea    rcx,[rsp+0x470]
   140004071:	call   0x1400029e0
   140004076:	lea    rcx,[rsp+0x590]
   14000407e:	call   0x140002860
   140004083:	lea    rcx,[rsp+0x220]
   14000408b:	call   0x140002860
   140004090:	lea    rcx,[rsp+0x50]
   140004095:	call   QWORD PTR [rip+0x831d]        # 0x14000c3b8
   14000409b:	lea    rcx,[rsp+0x70]
   1400040a0:	call   QWORD PTR [rip+0x8222]        # 0x14000c2c8
   1400040a6:	lea    rcx,[rsp+0x38]
   1400040ab:	call   QWORD PTR [rip+0x8307]        # 0x14000c3b8
   1400040b1:	lea    rcx,[rsp+0x28]
   1400040b6:	call   QWORD PTR [rip+0x82fc]        # 0x14000c3b8
   1400040bc:	mov    rsi,QWORD PTR [rsp+0x20]
   1400040c1:	mov    eax,DWORD PTR [rsi]
   1400040c3:	test   eax,eax
   1400040c5:	je     0x1400040df
   1400040c7:	cmp    eax,0xffffffff
   1400040ca:	je     0x14000411b
   1400040cc:	lock xadd DWORD PTR [rsi],ebx
   1400040d0:	add    ebx,0xffffffff
   1400040d3:	setne  al
   1400040d6:	test   al,al
   1400040d8:	jne    0x14000411b
   1400040da:	mov    rsi,QWORD PTR [rsp+0x20]
   1400040df:	movsxd rax,DWORD PTR [rsi+0xc]
   1400040e3:	lea    rdi,[rsi+rax*8+0x10]
   1400040e8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400040ec:	lea    rbx,[rsi+rax*8+0x10]
   1400040f1:	cmp    rbx,rdi
   1400040f4:	je     0x140004112
   1400040f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004100:	sub    rdi,0x8
   140004104:	mov    rcx,rdi
   140004107:	call   QWORD PTR [rip+0x82ab]        # 0x14000c3b8
   14000410d:	cmp    rdi,rbx
   140004110:	jne    0x140004100
   140004112:	mov    rcx,rsi
   140004115:	call   QWORD PTR [rip+0x81ed]        # 0x14000c308
   14000411b:	lea    rcx,[rsp+0x58]
   140004120:	call   QWORD PTR [rip+0x8172]        # 0x14000c298
   140004126:	xor    eax,eax
   140004128:	mov    rbx,QWORD PTR [rsp+0x708]
   140004130:	add    rsp,0x6c0
   140004137:	pop    r15
   140004139:	pop    r14
   14000413b:	pop    r13
   14000413d:	pop    r12
   14000413f:	pop    rdi
   140004140:	pop    rsi
   140004141:	pop    rbp
   140004142:	ret    
   140004143:	int3   
   140004144:	int3   
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	jmp    0x140002a80
   140004155:	int3   
   140004156:	int3   
   140004157:	int3   
   140004158:	int3   
   140004159:	int3   
   14000415a:	int3   
   14000415b:	int3   
   14000415c:	int3   
   14000415d:	int3   
   14000415e:	int3   
   14000415f:	int3   
   140004160:	mov    QWORD PTR [rsp+0x10],rbx
   140004165:	push   rdi
   140004166:	sub    rsp,0x20
   14000416a:	mov    rax,QWORD PTR [rcx]
   14000416d:	mov    rdi,rdx
   140004170:	mov    rbx,rcx
   140004173:	mov    r8d,DWORD PTR [rax]
   140004176:	cmp    r8d,0x1
   14000417a:	je     0x1400041ad
   14000417c:	test   r8d,r8d
   14000417f:	je     0x1400041ad
   140004181:	mov    edx,0x7fffffff
   140004186:	mov    r8d,0x1
   14000418c:	call   0x1400022d0
   140004191:	test   rax,rax
   140004194:	je     0x1400041c9
   140004196:	mov    rdx,rdi
   140004199:	mov    rcx,rax
   14000419c:	mov    rbx,QWORD PTR [rsp+0x38]
   1400041a1:	add    rsp,0x20
   1400041a5:	pop    rdi
   1400041a6:	rex.W jmp QWORD PTR [rip+0x8213]        # 0x14000c3c0
   1400041ad:	lea    rcx,[rsp+0x30]
   1400041b2:	call   QWORD PTR [rip+0x8208]        # 0x14000c3c0
   1400041b8:	mov    rcx,rbx
   1400041bb:	call   QWORD PTR [rip+0x80a7]        # 0x14000c268
   1400041c1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041c6:	mov    QWORD PTR [rax],rcx
   1400041c9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400041ce:	add    rsp,0x20
   1400041d2:	pop    rdi
   1400041d3:	ret    
   1400041d4:	int3   
   1400041d5:	int3   
   1400041d6:	int3   
   1400041d7:	int3   
   1400041d8:	int3   
   1400041d9:	int3   
   1400041da:	int3   
   1400041db:	int3   
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041e5:	push   rdi
   1400041e6:	sub    rsp,0x20
   1400041ea:	mov    ebx,edx
   1400041ec:	mov    rdi,rcx
   1400041ef:	call   0x140002860
   1400041f4:	test   bl,0x1
   1400041f7:	je     0x140004201
   1400041f9:	mov    rcx,rdi
   1400041fc:	call   0x14000b416
   140004201:	mov    rax,rdi
   140004204:	mov    rbx,QWORD PTR [rsp+0x30]
   140004209:	add    rsp,0x20
   14000420d:	pop    rdi
   14000420e:	ret    
   14000420f:	int3   
   140004210:	mov    QWORD PTR [rsp+0x8],rbx
   140004215:	push   rdi
   140004216:	sub    rsp,0x20
   14000421a:	mov    ebx,edx
   14000421c:	mov    rdi,rcx
   14000421f:	call   0x1400029e0
   140004224:	test   bl,0x1
   140004227:	je     0x140004231
   140004229:	mov    rcx,rdi
   14000422c:	call   0x14000b416
   140004231:	mov    rax,rdi
   140004234:	mov    rbx,QWORD PTR [rsp+0x30]
   140004239:	add    rsp,0x20
   14000423d:	pop    rdi
   14000423e:	ret    
   14000423f:	int3   
   140004240:	mov    QWORD PTR [rsp+0x8],rbx
   140004245:	push   rdi
   140004246:	sub    rsp,0x20
   14000424a:	mov    rdi,rcx
   14000424d:	mov    rcx,QWORD PTR [rcx]
   140004250:	mov    eax,DWORD PTR [rcx]
   140004252:	cmp    eax,0x1
   140004255:	je     0x140004266
   140004257:	test   eax,eax
   140004259:	je     0x140004266
   14000425b:	mov    edx,DWORD PTR [rcx+0x4]
   14000425e:	mov    rcx,rdi
   140004261:	call   0x140002410
   140004266:	mov    rcx,QWORD PTR [rdi]
   140004269:	movsxd rax,DWORD PTR [rcx+0x8]
   14000426d:	lea    rdx,[rax*8+0x10]
   140004275:	mov    eax,DWORD PTR [rcx]
   140004277:	lea    rbx,[rdx+rcx*1]
   14000427b:	cmp    eax,0x1
   14000427e:	je     0x1400042b5
   140004280:	test   eax,eax
   140004282:	je     0x1400042b5
   140004284:	sub    rbx,rdx
   140004287:	sub    rbx,rcx
   14000428a:	sar    rbx,0x3
   14000428e:	cmp    eax,0x1
   140004291:	je     0x1400042a2
   140004293:	test   eax,eax
   140004295:	je     0x1400042a2
   140004297:	mov    edx,DWORD PTR [rcx+0x4]
   14000429a:	mov    rcx,rdi
   14000429d:	call   0x140002410
   1400042a2:	mov    rcx,QWORD PTR [rdi]
   1400042a5:	movsxd rax,DWORD PTR [rcx+0x8]
   1400042a9:	lea    rax,[rcx+rax*8+0x10]
   1400042ae:	movsxd rcx,ebx
   1400042b1:	lea    rbx,[rax+rcx*8]
   1400042b5:	mov    rcx,rbx
   1400042b8:	call   QWORD PTR [rip+0x80fa]        # 0x14000c3b8
   1400042be:	mov    rdx,rbx
   1400042c1:	mov    rcx,rdi
   1400042c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042c9:	add    rsp,0x20
   1400042cd:	pop    rdi
   1400042ce:	rex.W jmp QWORD PTR [rip+0x7f83]        # 0x14000c258
   1400042d5:	int3   
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	rex push rbx
   1400042e2:	push   rsi
   1400042e3:	push   rdi
   1400042e4:	push   r12
   1400042e6:	push   r13
   1400042e8:	push   r14
   1400042ea:	push   r15
   1400042ec:	sub    rsp,0x180
   1400042f3:	mov    r15,rcx
   1400042f6:	lea    rcx,[rsp+0x28]
   1400042fb:	xor    ebx,ebx
   1400042fd:	or     esi,0xffffffff
   140004300:	mov    edi,edx
   140004302:	mov    r13d,ebx
   140004305:	mov    DWORD PTR [rsp+0x30],esi
   140004309:	call   QWORD PTR [rip+0x80b9]        # 0x14000c3c8
   14000430f:	lea    rcx,[rsp+0x20]
   140004314:	call   QWORD PTR [rip+0x80ae]        # 0x14000c3c8
   14000431a:	lea    rcx,[r15+0x118]
   140004321:	call   QWORD PTR [rip+0x8081]        # 0x14000c3a8
   140004327:	mov    rax,QWORD PTR [r15+0x108]
   14000432e:	mov    ecx,DWORD PTR [rax]
   140004330:	cmp    ecx,0x1
   140004333:	je     0x140004352
   140004335:	test   ecx,ecx
   140004337:	je     0x140004352
   140004339:	lea    r8d,[rbx+0x1]
   14000433d:	lea    rcx,[r15+0x108]
   140004344:	mov    edx,0x7fffffff
   140004349:	call   0x140002660
   14000434e:	mov    DWORD PTR [rax],edi
   140004350:	jmp    0x140004371
   140004352:	lea    rcx,[r15+0x108]
   140004359:	mov    DWORD PTR [rsp+0x110],edi
   140004360:	call   QWORD PTR [rip+0x7f02]        # 0x14000c268
   140004366:	mov    rcx,QWORD PTR [rsp+0x110]
   14000436e:	mov    QWORD PTR [rax],rcx
   140004371:	lea    rcx,[rsp+0xe0]
   140004379:	mov    QWORD PTR [rsp+0x178],rbp
   140004381:	lea    r12,[r15+0x110]
   140004388:	call   QWORD PTR [rip+0x803a]        # 0x14000c3c8
   14000438e:	mov    rcx,r12
   140004391:	mov    rdx,rax
   140004394:	call   0x140004160
   140004399:	lea    rcx,[rsp+0xe0]
   1400043a1:	call   QWORD PTR [rip+0x8011]        # 0x14000c3b8
   1400043a7:	cmp    edi,0x67
   1400043aa:	jne    0x140004511
   1400043b0:	lea    rcx,[rsp+0xb8]
   1400043b8:	mov    DWORD PTR [rsp+0xa0],0x1
   1400043c3:	mov    DWORD PTR [rsp+0xa4],ebx
   1400043ca:	mov    DWORD PTR [rsp+0xa8],ebx
   1400043d1:	mov    DWORD PTR [rsp+0xac],ebx
   1400043d8:	mov    DWORD PTR [rsp+0xb0],ebx
   1400043df:	call   QWORD PTR [rip+0x7fe3]        # 0x14000c3c8
   1400043e5:	lea    r8,[rsp+0xa0]
   1400043ed:	lea    rcx,[r15+0x8]
   1400043f1:	mov    rdx,r15
   1400043f4:	call   0x14000a1c0
   1400043f9:	test   al,al
   1400043fb:	je     0x14000459f
   140004401:	lea    rdx,[r15+0xf8]
   140004408:	lea    rcx,[rsp+0x78]
   14000440d:	call   QWORD PTR [rip+0x7fad]        # 0x14000c3c0
   140004413:	mov    rdx,QWORD PTR [rsp+0x78]
   140004418:	mov    edi,DWORD PTR [rdx+0x4]
   14000441b:	test   edi,edi
   14000441d:	je     0x14000447b
   14000441f:	mov    ecx,DWORD PTR [r15+0x120]
   140004426:	test   ecx,ecx
   140004428:	je     0x140004469
   14000442a:	mov    eax,DWORD PTR [r15+0x124]
   140004431:	test   eax,eax
   140004433:	je     0x140004462
   140004435:	add    eax,edi
   140004437:	cmp    eax,ecx
   140004439:	jle    0x140004462
   14000443b:	lea    rcx,[rsp+0x1d8]
   140004443:	mov    dl,0xa
   140004445:	call   QWORD PTR [rip+0x7f2d]        # 0x14000c378
   14000444b:	lea    rcx,[r15+0x118]
   140004452:	movzx  edx,WORD PTR [rax]
   140004455:	call   QWORD PTR [rip+0x7ef5]        # 0x14000c350
   14000445b:	mov    DWORD PTR [r15+0x124],ebx
   140004462:	add    DWORD PTR [r15+0x124],edi
   140004469:	lea    rdx,[rsp+0x78]
   14000446e:	lea    rcx,[r15+0x118]
   140004475:	call   QWORD PTR [rip+0x7edd]        # 0x14000c358
   14000447b:	lea    rcx,[rsp+0x78]
   140004480:	call   QWORD PTR [rip+0x7f32]        # 0x14000c3b8
   140004486:	mov    rax,QWORD PTR [r15+0x108]
   14000448d:	mov    edi,DWORD PTR [r15+0x88]
   140004494:	mov    ecx,DWORD PTR [rax]
   140004496:	cmp    ecx,0x1
   140004499:	je     0x1400044ba
   14000449b:	test   ecx,ecx
   14000449d:	je     0x1400044ba
   14000449f:	lea    rcx,[r15+0x108]
   1400044a6:	mov    edx,0x7fffffff
   1400044ab:	mov    r8d,0x1
   1400044b1:	call   0x140002660
   1400044b6:	mov    DWORD PTR [rax],edi
   1400044b8:	jmp    0x1400044d9
   1400044ba:	lea    rcx,[r15+0x108]
   1400044c1:	mov    DWORD PTR [rsp+0x140],edi
   1400044c8:	call   QWORD PTR [rip+0x7d9a]        # 0x14000c268
   1400044ce:	mov    rdx,QWORD PTR [rsp+0x140]
   1400044d6:	mov    QWORD PTR [rax],rdx
   1400044d9:	lea    rdx,[rsp+0xf0]
   1400044e1:	lea    rcx,[r15+0x8]
   1400044e5:	call   0x140007540
   1400044ea:	mov    rcx,r12
   1400044ed:	mov    rdx,rax
   1400044f0:	call   0x140004160
   1400044f5:	lea    rcx,[rsp+0xf0]
   1400044fd:	call   QWORD PTR [rip+0x7eb5]        # 0x14000c3b8
   140004503:	lea    rcx,[rsp+0xb8]
   14000450b:	call   QWORD PTR [rip+0x7ea7]        # 0x14000c3b8
   140004511:	lea    rbp,[r15+0x100]
   140004518:	nop    DWORD PTR [rax+rax*1+0x0]
   140004520:	mov    edi,DWORD PTR [rsp+0x30]
   140004524:	mov    rax,QWORD PTR [rbp+0x0]
   140004528:	mov    edx,DWORD PTR [rax+0x4]
   14000452b:	inc    edi
   14000452d:	mov    DWORD PTR [rsp+0x30],edi
   140004531:	cmp    edi,edx
   140004533:	jne    0x140004559
   140004535:	mov    r8d,DWORD PTR [rax+0x8]
   140004539:	add    edx,edx
   14000453b:	mov    r9d,ebx
   14000453e:	btr    r8d,0x1f
   140004543:	cmp    edx,r8d
   140004546:	jle    0x140004551
   140004548:	mov    r8d,edx
   14000454b:	mov    r9d,0x8
   140004551:	mov    rcx,rbp
   140004554:	call   0x1400024e0
   140004559:	mov    rax,QWORD PTR [rbp+0x0]
   14000455d:	mov    ecx,DWORD PTR [rax]
   14000455f:	cmp    ecx,0x1
   140004562:	je     0x14000467c
   140004568:	test   ecx,ecx
   14000456a:	je     0x14000467c
   140004570:	mov    r8d,DWORD PTR [rax+0x8]
   140004574:	btr    r8d,0x1f
   140004579:	test   r8d,r8d
   14000457c:	jne    0x140004667
   140004582:	lea    r9d,[r8+0x2]
   140004586:	xor    r8d,r8d
   140004589:	lea    edx,[r9+0x6]
   14000458d:	lea    ecx,[rdx-0x4]
   140004590:	call   QWORD PTR [rip+0x7d8a]        # 0x14000c320
   140004596:	mov    QWORD PTR [rbp+0x0],rax
   14000459a:	jmp    0x14000467c
   14000459f:	mov    rbx,QWORD PTR [r15+0x58]
   1400045a3:	mov    edi,DWORD PTR [r15+0x90]
   1400045aa:	lea    rdx,[r15+0xf0]
   1400045b1:	sub    rbx,QWORD PTR [r15+0x50]
   1400045b5:	lea    rcx,[rsp+0x88]
   1400045bd:	sar    rbx,1
   1400045c0:	call   QWORD PTR [rip+0x7dfa]        # 0x14000c3c0
   1400045c6:	lea    rdx,[rsp+0x120]
   1400045ce:	lea    rcx,[rsp+0x88]
   1400045d6:	call   QWORD PTR [rip+0x7cc4]        # 0x14000c2a0
   1400045dc:	mov    rcx,rax
   1400045df:	call   QWORD PTR [rip+0x7cc3]        # 0x14000c2a8
   1400045e5:	mov    rcx,QWORD PTR [rip+0x7a9c]        # 0x14000c088
   1400045ec:	mov    rdx,rax
   1400045ef:	call   0x1400015b0
   1400045f4:	mov    dl,0x3a
   1400045f6:	mov    rcx,rax
   1400045f9:	call   0x1400017a0
   1400045fe:	mov    edx,edi
   140004600:	mov    rcx,rax
   140004603:	call   QWORD PTR [rip+0x7a8f]        # 0x14000c098
   140004609:	mov    dl,0x3a
   14000460b:	mov    rcx,rax
   14000460e:	call   0x1400017a0
   140004613:	lea    edx,[rbx+0x1]
   140004616:	mov    rcx,rax
   140004619:	call   QWORD PTR [rip+0x7a79]        # 0x14000c098
   14000461f:	lea    rdx,[rip+0x824a]        # 0x14000c870
   140004626:	mov    rcx,rax
   140004629:	call   0x1400015b0
   14000462e:	mov    rdx,QWORD PTR [rip+0x7a4b]        # 0x14000c080
   140004635:	mov    rcx,rax
   140004638:	call   QWORD PTR [rip+0x7a3a]        # 0x14000c078
   14000463e:	lea    rcx,[rsp+0x120]
   140004646:	call   QWORD PTR [rip+0x7c64]        # 0x14000c2b0
   14000464c:	lea    rcx,[rsp+0x88]
   140004654:	call   QWORD PTR [rip+0x7d5e]        # 0x14000c3b8
   14000465a:	lea    rcx,[rsp+0xb8]
   140004662:	jmp    0x140005394
   140004667:	mov    edx,DWORD PTR [rax+0x4]
   14000466a:	mov    r9d,ebx
   14000466d:	mov    rcx,rbp
   140004670:	mov    DWORD PTR [rsp+0xc0],ebx
   140004677:	call   0x1400024e0
   14000467c:	mov    rdx,QWORD PTR [rbp+0x0]
   140004680:	movsxd rcx,edi
   140004683:	lea    rbp,[rip+0xffffffffffffb976]        # 0x140000000
   14000468a:	mov    rax,QWORD PTR [rdx+0x10]
   14000468e:	lea    rcx,[rax+rcx*4]
   140004692:	mov    DWORD PTR [rcx+rdx*1],r13d
   140004696:	cmp    esi,0xffffffff
   140004699:	jne    0x140004a08
   14000469f:	movsxd rax,r13d
   1400046a2:	cmp    WORD PTR [rbp+rax*2+0xda10],0xff96
   1400046ab:	je     0x140004a08
   1400046b1:	mov    rcx,QWORD PTR [r15+0x108]
   1400046b8:	mov    eax,DWORD PTR [rcx+0x8]
   1400046bb:	cmp    DWORD PTR [rcx+0xc],eax
   1400046be:	jne    0x140004795
   1400046c4:	lea    rcx,[r15+0x8]
   1400046c8:	call   0x14000a050
   1400046cd:	mov    rcx,QWORD PTR [r15+0x108]
   1400046d4:	mov    edx,DWORD PTR [rcx]
   1400046d6:	mov    edi,eax
   1400046d8:	cmp    edx,0x1
   1400046db:	je     0x1400046fa
   1400046dd:	test   edx,edx
   1400046df:	je     0x1400046fa
   1400046e1:	lea    r8d,[rsi+0x2]
   1400046e5:	lea    rcx,[r15+0x108]
   1400046ec:	mov    edx,0x7fffffff
   1400046f1:	call   0x140002660
   1400046f6:	mov    DWORD PTR [rax],edi
   1400046f8:	jmp    0x140004719
   1400046fa:	lea    rcx,[r15+0x108]
   140004701:	mov    DWORD PTR [rsp+0x100],eax
   140004708:	call   QWORD PTR [rip+0x7b5a]        # 0x14000c268
   14000470e:	mov    rdx,QWORD PTR [rsp+0x100]
   140004716:	mov    QWORD PTR [rax],rdx
   140004719:	lea    rdx,[rsp+0xc8]
   140004721:	lea    rcx,[r15+0x8]
   140004725:	call   0x140007540
   14000472a:	mov    rcx,QWORD PTR [r12]
   14000472e:	mov    edx,DWORD PTR [rcx]
   140004730:	mov    rdi,rax
   140004733:	cmp    edx,0x1
   140004736:	je     0x140004762
   140004738:	test   edx,edx
   14000473a:	je     0x140004762
   14000473c:	mov    edx,0x7fffffff
   140004741:	mov    r8d,0x1
   140004747:	mov    rcx,r12
   14000474a:	call   0x1400022d0
   14000474f:	test   rax,rax
   140004752:	je     0x140004787
   140004754:	mov    rdx,rdi
   140004757:	mov    rcx,rax
   14000475a:	call   QWORD PTR [rip+0x7c60]        # 0x14000c3c0
   140004760:	jmp    0x140004787
   140004762:	lea    rcx,[rsp+0x150]
   14000476a:	mov    rdx,rax
   14000476d:	call   QWORD PTR [rip+0x7c4d]        # 0x14000c3c0
   140004773:	mov    rcx,r12
   140004776:	call   QWORD PTR [rip+0x7aec]        # 0x14000c268
   14000477c:	mov    rcx,QWORD PTR [rsp+0x150]
   140004784:	mov    QWORD PTR [rax],rcx
   140004787:	lea    rcx,[rsp+0xc8]
   14000478f:	call   QWORD PTR [rip+0x7c23]        # 0x14000c3b8
   140004795:	mov    rcx,QWORD PTR [r15+0x108]
   14000479c:	mov    eax,DWORD PTR [rcx]
   14000479e:	cmp    eax,0x1
   1400047a1:	je     0x140004818
   1400047a3:	test   eax,eax
   1400047a5:	je     0x140004818
   1400047a7:	movsxd rax,DWORD PTR [rcx+0x8]
   1400047ab:	mov    edx,DWORD PTR [rcx+0x4]
   1400047ae:	lea    rsi,[rcx+rax*8+0x10]
   1400047b3:	lea    rcx,[r15+0x108]
   1400047ba:	call   QWORD PTR [rip+0x7b40]        # 0x14000c300
   1400047c0:	mov    rdi,rax
   1400047c3:	mov    rax,QWORD PTR [r15+0x108]
   1400047ca:	movsxd rcx,DWORD PTR [rax+0xc]
   1400047ce:	lea    r8,[rax+rcx*8+0x10]
   1400047d3:	movsxd rcx,DWORD PTR [rax+0x8]
   1400047d7:	lea    rcx,[rax+rcx*8+0x10]
   1400047dc:	cmp    rsi,rcx
   1400047df:	je     0x1400047f9
   1400047e1:	sub    r8,rcx
   1400047e4:	sar    r8,0x3
   1400047e8:	test   r8,r8
   1400047eb:	jle    0x1400047f9
   1400047ed:	shl    r8,0x3
   1400047f1:	mov    rdx,rsi
   1400047f4:	call   0x14000b422
   1400047f9:	mov    eax,DWORD PTR [rdi]
   1400047fb:	test   eax,eax
   1400047fd:	je     0x14000480f
   1400047ff:	cmp    eax,0xffffffff
   140004802:	je     0x140004818
   140004804:	lock add DWORD PTR [rdi],0xffffffff
   140004808:	setne  al
   14000480b:	test   al,al
   14000480d:	jne    0x140004818
   14000480f:	mov    rcx,rdi
   140004812:	call   QWORD PTR [rip+0x7af0]        # 0x14000c308
   140004818:	mov    rcx,QWORD PTR [r15+0x108]
   14000481f:	movsxd rax,DWORD PTR [rcx+0x8]
   140004823:	mov    esi,DWORD PTR [rcx+rax*8+0x10]
   140004827:	lea    rbp,[rcx+rax*8+0x10]
   14000482c:	mov    eax,DWORD PTR [rcx]
   14000482e:	cmp    eax,0x1
   140004831:	je     0x14000489f
   140004833:	test   eax,eax
   140004835:	je     0x14000489f
   140004837:	mov    edx,DWORD PTR [rcx+0x4]
   14000483a:	lea    rcx,[r15+0x108]
   140004841:	call   QWORD PTR [rip+0x7ab9]        # 0x14000c300
   140004847:	mov    rdi,rax
   14000484a:	mov    rax,QWORD PTR [r15+0x108]
   140004851:	movsxd rcx,DWORD PTR [rax+0xc]
   140004855:	lea    r8,[rax+rcx*8+0x10]
   14000485a:	movsxd rcx,DWORD PTR [rax+0x8]
   14000485e:	lea    rcx,[rax+rcx*8+0x10]
   140004863:	cmp    rbp,rcx
   140004866:	je     0x140004880
   140004868:	sub    r8,rcx
   14000486b:	sar    r8,0x3
   14000486f:	test   r8,r8
   140004872:	jle    0x140004880
   140004874:	shl    r8,0x3
   140004878:	mov    rdx,rbp
   14000487b:	call   0x14000b422
   140004880:	mov    eax,DWORD PTR [rdi]
   140004882:	test   eax,eax
   140004884:	je     0x140004896
   140004886:	cmp    eax,0xffffffff
   140004889:	je     0x14000489f
   14000488b:	lock add DWORD PTR [rdi],0xffffffff
   14000488f:	setne  al
   140004892:	test   al,al
   140004894:	jne    0x14000489f
   140004896:	mov    rcx,rdi
   140004899:	call   QWORD PTR [rip+0x7a69]        # 0x14000c308
   14000489f:	mov    rcx,QWORD PTR [r15+0x108]
   1400048a6:	movsxd rax,DWORD PTR [rcx+0x8]
   1400048aa:	lea    rdx,[rax*8+0x10]
   1400048b2:	mov    eax,DWORD PTR [rcx]
   1400048b4:	lea    rdi,[rdx+rcx*1]
   1400048b8:	mov    QWORD PTR [rsp+0xd8],rdi
   1400048c0:	cmp    eax,0x1
   1400048c3:	je     0x140004993
   1400048c9:	test   eax,eax
   1400048cb:	je     0x140004993
   1400048d1:	mov    rbp,rdi
   1400048d4:	sub    rbp,rdx
   1400048d7:	sub    rbp,rcx
   1400048da:	sar    rbp,0x3
   1400048de:	cmp    eax,0x1
   1400048e1:	je     0x140004974
   1400048e7:	test   eax,eax
   1400048e9:	je     0x140004974
   1400048ef:	mov    edx,DWORD PTR [rcx+0x4]
   1400048f2:	lea    rcx,[r15+0x108]
   1400048f9:	call   QWORD PTR [rip+0x7a01]        # 0x14000c300
   1400048ff:	mov    r12,rax
   140004902:	mov    rax,QWORD PTR [r15+0x108]
   140004909:	movsxd rcx,DWORD PTR [rax+0xc]
   14000490d:	lea    r8,[rax+rcx*8+0x10]
   140004912:	movsxd rcx,DWORD PTR [rax+0x8]
   140004916:	lea    rcx,[rax+rcx*8+0x10]
   14000491b:	cmp    rdi,rcx
   14000491e:	je     0x140004938
   140004920:	sub    r8,rcx
   140004923:	sar    r8,0x3
   140004927:	test   r8,r8
   14000492a:	jle    0x140004938
   14000492c:	shl    r8,0x3
   140004930:	mov    rdx,rdi
   140004933:	call   0x14000b422
   140004938:	mov    eax,DWORD PTR [r12]
   14000493c:	test   eax,eax
   14000493e:	je     0x140004952
   140004940:	cmp    eax,0xffffffff
   140004943:	je     0x140004964
   140004945:	lock add DWORD PTR [r12],0xffffffff
   14000494b:	setne  al
   14000494e:	test   al,al
   140004950:	jne    0x14000496d
   140004952:	mov    rcx,r12
   140004955:	call   QWORD PTR [rip+0x79ad]        # 0x14000c308
   14000495b:	lea    r12,[r15+0x110]
   140004962:	jmp    0x140004974
   140004964:	lea    r12,[r15+0x110]
   14000496b:	jmp    0x140004974
   14000496d:	lea    r12,[r15+0x110]
   140004974:	mov    rcx,QWORD PTR [r15+0x108]
   14000497b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000497f:	lea    rax,[rcx+rax*8+0x10]
   140004984:	movsxd rcx,ebp
   140004987:	lea    rdi,[rax+rcx*8]
   14000498b:	mov    QWORD PTR [rsp+0xd8],rdi
   140004993:	lea    rcx,[r15+0x108]
   14000499a:	mov    rdx,rdi
   14000499d:	call   QWORD PTR [rip+0x78b5]        # 0x14000c258
   1400049a3:	mov    rcx,QWORD PTR [r12]
   1400049a7:	mov    eax,DWORD PTR [rcx]
   1400049a9:	cmp    eax,0x1
   1400049ac:	je     0x1400049bd
   1400049ae:	test   eax,eax
   1400049b0:	je     0x1400049bd
   1400049b2:	mov    edx,DWORD PTR [rcx+0x4]
   1400049b5:	mov    rcx,r12
   1400049b8:	call   0x140002410
   1400049bd:	mov    rcx,QWORD PTR [r12]
   1400049c1:	movsxd rax,DWORD PTR [rcx+0x8]
   1400049c5:	lea    rdx,[rcx+rax*8+0x10]
   1400049ca:	lea    rcx,[rsp+0x90]
   1400049d2:	call   QWORD PTR [rip+0x79e8]        # 0x14000c3c0
   1400049d8:	mov    rcx,r12
   1400049db:	call   0x140004240
   1400049e0:	lea    rdx,[rsp+0x90]
   1400049e8:	lea    rcx,[rsp+0x28]
   1400049ed:	call   QWORD PTR [rip+0x79ad]        # 0x14000c3a0
   1400049f3:	lea    rcx,[rsp+0x90]
   1400049fb:	call   QWORD PTR [rip+0x79b7]        # 0x14000c3b8
   140004a01:	lea    rbp,[rip+0xffffffffffffb5f8]        # 0x140000000
   140004a08:	movsxd rdx,r13d
   140004a0b:	movsx  eax,WORD PTR [rbp+rdx*2+0xda10]
   140004a13:	add    eax,esi
   140004a15:	js     0x140004a31
   140004a17:	movsxd rcx,eax
   140004a1a:	movsx  eax,WORD PTR [rbp+rcx*2+0x100c0]
   140004a22:	cmp    eax,esi
   140004a24:	jne    0x140004a31
   140004a26:	movsx  r13d,WORD PTR [rbp+rcx*2+0xe480]
   140004a2f:	jmp    0x140004a3d
   140004a31:	movsx  r13d,WORD PTR [rbp+rdx*2+0xd3f0]
   140004a3a:	neg    r13d
   140004a3d:	test   r13d,r13d
   140004a40:	jle    0x140004f5a
   140004a46:	cmp    r13d,0x299
   140004a4d:	je     0x14000525a
   140004a53:	mov    rax,QWORD PTR [rsp+0x20]
   140004a58:	mov    r8d,DWORD PTR [rax+0x4]
   140004a5c:	test   r8d,r8d
   140004a5f:	jne    0x140004a9a
   140004a61:	lea    rbp,[r15+0x118]
   140004a68:	mov    rax,QWORD PTR [rbp+0x0]
   140004a6c:	mov    r8d,DWORD PTR [rax+0x4]
   140004a70:	test   r8d,r8d
   140004a73:	jne    0x140004a87
   140004a75:	mov    WORD PTR [rsp+0x1c0],bx
   140004a7d:	lea    rax,[rsp+0x1c0]
   140004a85:	jmp    0x140004ab4
   140004a87:	lea    rdx,[rsp+0x60]
   140004a8c:	dec    r8d
   140004a8f:	mov    rcx,rbp
   140004a92:	call   QWORD PTR [rip+0x77a0]        # 0x14000c238
   140004a98:	jmp    0x140004ab4
   140004a9a:	lea    rdx,[rsp+0x5c]
   140004a9f:	lea    rcx,[rsp+0x20]
   140004aa4:	dec    r8d
   140004aa7:	call   QWORD PTR [rip+0x778b]        # 0x14000c238
   140004aad:	lea    rbp,[r15+0x118]
   140004ab4:	movzx  edi,WORD PTR [rax]
   140004ab7:	cmp    esi,0x3d
   140004aba:	jne    0x140004b4b
   140004ac0:	lea    rcx,[rsp+0x64]
   140004ac5:	mov    dl,0x3b
   140004ac7:	call   QWORD PTR [rip+0x78ab]        # 0x14000c378
   140004acd:	lea    rcx,[rsp+0x20]
   140004ad2:	movzx  edx,WORD PTR [rax]
   140004ad5:	call   QWORD PTR [rip+0x788d]        # 0x14000c368
   140004adb:	mov    rdx,QWORD PTR [rsp+0x20]
   140004ae0:	mov    edi,DWORD PTR [rdx+0x4]
   140004ae3:	test   edi,edi
   140004ae5:	je     0x140004b38
   140004ae7:	mov    ecx,DWORD PTR [r15+0x120]
   140004aee:	test   ecx,ecx
   140004af0:	je     0x140004b2a
   140004af2:	mov    eax,DWORD PTR [r15+0x124]
   140004af9:	test   eax,eax
   140004afb:	je     0x140004b23
   140004afd:	add    eax,edi
   140004aff:	cmp    eax,ecx
   140004b01:	jle    0x140004b23
   140004b03:	lea    rcx,[rsp+0x68]
   140004b08:	mov    dl,0xa
   140004b0a:	call   QWORD PTR [rip+0x7868]        # 0x14000c378
   140004b10:	mov    rcx,rbp
   140004b13:	movzx  edx,WORD PTR [rax]
   140004b16:	call   QWORD PTR [rip+0x7834]        # 0x14000c350
   140004b1c:	mov    DWORD PTR [r15+0x124],ebx
   140004b23:	add    DWORD PTR [r15+0x124],edi
   140004b2a:	lea    rdx,[rsp+0x20]
   140004b2f:	mov    rcx,rbp
   140004b32:	call   QWORD PTR [rip+0x7820]        # 0x14000c358
   140004b38:	lea    rcx,[rsp+0x20]
   140004b3d:	call   QWORD PTR [rip+0x7865]        # 0x14000c3a8
   140004b43:	or     esi,0xffffffff
   140004b46:	jmp    0x140005092
   140004b4b:	cmp    esi,0x33
   140004b4e:	je     0x140004eb8
   140004b54:	cmp    esi,0x28
   140004b57:	je     0x140004eb8
   140004b5d:	cmp    esi,0x35
   140004b60:	je     0x140004eb8
   140004b66:	cmp    esi,0x2a
   140004b69:	je     0x140004eb8
   140004b6f:	cmp    esi,0x2f
   140004b72:	jne    0x140004c5e
   140004b78:	movzx  ecx,di
   140004b7b:	call   QWORD PTR [rip+0x77ef]        # 0x14000c370
   140004b81:	test   al,al
   140004b83:	jne    0x140004ba9
   140004b85:	lea    rcx,[rsp+0x6c]
   140004b8a:	mov    dl,0x5f
   140004b8c:	call   QWORD PTR [rip+0x77e6]        # 0x14000c378
   140004b92:	cmp    di,WORD PTR [rax]
   140004b95:	je     0x140004ba9
   140004b97:	lea    rcx,[rsp+0x70]
   140004b9c:	mov    dl,0x24
   140004b9e:	call   QWORD PTR [rip+0x77d4]        # 0x14000c378
   140004ba4:	cmp    di,WORD PTR [rax]
   140004ba7:	jne    0x140004bc4
   140004ba9:	lea    rcx,[rsp+0x66]
   140004bae:	mov    dl,0x20
   140004bb0:	call   QWORD PTR [rip+0x77c2]        # 0x14000c378
   140004bb6:	lea    rcx,[rsp+0x20]
   140004bbb:	movzx  edx,WORD PTR [rax]
   140004bbe:	call   QWORD PTR [rip+0x77a4]        # 0x14000c368
   140004bc4:	mov    eax,0x2e
   140004bc9:	lea    rcx,[rsp+0x28]
   140004bce:	lea    r8d,[rax-0x2d]
   140004bd2:	movzx  edx,ax
   140004bd5:	mov    WORD PTR [rsp+0x4e],ax
   140004bda:	call   QWORD PTR [rip+0x76b0]        # 0x14000c290
   140004be0:	test   al,al
   140004be2:	je     0x140004c02
   140004be4:	lea    rcx,[rsp+0x82]
   140004bec:	mov    dl,0x30
   140004bee:	call   QWORD PTR [rip+0x7784]        # 0x14000c378
   140004bf4:	lea    rcx,[rsp+0x20]
   140004bf9:	movzx  edx,WORD PTR [rax]
   140004bfc:	call   QWORD PTR [rip+0x7766]        # 0x14000c368
   140004c02:	lea    rdx,[rsp+0x28]
   140004c07:	lea    rcx,[rsp+0x20]
   140004c0c:	call   QWORD PTR [rip+0x7746]        # 0x14000c358
   140004c12:	lea    rcx,[rsp+0x52]
   140004c17:	mov    dl,0x2e
   140004c19:	call   QWORD PTR [rip+0x7759]        # 0x14000c378
   140004c1f:	lea    rcx,[rsp+0x20]
   140004c24:	mov    r8d,0x1
   140004c2a:	movzx  edx,WORD PTR [rax]
   140004c2d:	call   QWORD PTR [rip+0x760d]        # 0x14000c240
   140004c33:	test   al,al
   140004c35:	je     0x140004f52
   140004c3b:	lea    rcx,[rsp+0x6a]
   140004c40:	mov    dl,0x30
   140004c42:	call   QWORD PTR [rip+0x7730]        # 0x14000c378
   140004c48:	lea    rcx,[rsp+0x20]
   140004c4d:	movzx  edx,WORD PTR [rax]
   140004c50:	call   QWORD PTR [rip+0x7712]        # 0x14000c368
   140004c56:	or     esi,0xffffffff
   140004c59:	jmp    0x140005092
   140004c5e:	cmp    esi,0x1d
   140004c61:	jne    0x140004d6c
   140004c67:	lea    rdx,[rsp+0x28]
   140004c6c:	lea    rcx,[rsp+0x38]
   140004c71:	call   QWORD PTR [rip+0x7749]        # 0x14000c3c0
   140004c77:	mov    r11,QWORD PTR [rsp+0x38]
   140004c7c:	lea    rcx,[r15+0x8]
   140004c80:	mov    ebp,DWORD PTR [r11+0x4]
   140004c84:	call   0x140007110
   140004c89:	lea    rcx,[rsp+0x38]
   140004c8e:	movzx  esi,al
   140004c91:	call   QWORD PTR [rip+0x75b1]        # 0x14000c248
   140004c97:	lea    rcx,[r15+0x8]
   140004c9b:	movzx  r9d,sil
   140004c9f:	mov    r8d,ebp
   140004ca2:	mov    rdx,rax
   140004ca5:	call   0x140006dc0
   140004caa:	cmp    eax,0x1d
   140004cad:	je     0x140004cf3
   140004caf:	mov    rax,QWORD PTR [rsp+0x38]
   140004cb4:	lea    rdx,[rsp+0x1d0]
   140004cbc:	lea    rcx,[rsp+0x38]
   140004cc1:	mov    r8d,DWORD PTR [rax+0x4]
   140004cc5:	dec    r8d
   140004cc8:	call   QWORD PTR [rip+0x756a]        # 0x14000c238
   140004cce:	lea    rcx,[rsp+0x38]
   140004cd3:	mov    edx,0x1
   140004cd8:	call   QWORD PTR [rip+0x7572]        # 0x14000c250
   140004cde:	lea    r8,[rsp+0x38]
   140004ce3:	lea    rdx,[rsp+0x1d0]
   140004ceb:	mov    rcx,r15
   140004cee:	call   0x1400012a0
   140004cf3:	movzx  ecx,di
   140004cf6:	call   QWORD PTR [rip+0x7674]        # 0x14000c370
   140004cfc:	test   al,al
   140004cfe:	jne    0x140004d27
   140004d00:	lea    rcx,[rsp+0x56]
   140004d05:	mov    dl,0x5f
   140004d07:	call   QWORD PTR [rip+0x766b]        # 0x14000c378
   140004d0d:	cmp    di,WORD PTR [rax]
   140004d10:	je     0x140004d27
   140004d12:	lea    rcx,[rsp+0x80]
   140004d1a:	mov    dl,0x24
   140004d1c:	call   QWORD PTR [rip+0x7656]        # 0x14000c378
   140004d22:	cmp    di,WORD PTR [rax]
   140004d25:	jne    0x140004d42
   140004d27:	lea    rcx,[rsp+0x5a]
   140004d2c:	mov    dl,0x20
   140004d2e:	call   QWORD PTR [rip+0x7644]        # 0x14000c378
   140004d34:	lea    rcx,[rsp+0x20]
   140004d39:	movzx  edx,WORD PTR [rax]
   140004d3c:	call   QWORD PTR [rip+0x7626]        # 0x14000c368
   140004d42:	lea    rdx,[rsp+0x38]
   140004d47:	lea    rcx,[rsp+0x20]
   140004d4c:	call   QWORD PTR [rip+0x7606]        # 0x14000c358
   140004d52:	lea    rcx,[rsp+0x38]
   140004d57:	call   QWORD PTR [rip+0x765b]        # 0x14000c3b8
   140004d5d:	lea    r12,[r15+0x110]
   140004d64:	or     esi,0xffffffff
   140004d67:	jmp    0x140005092
   140004d6c:	cmp    esi,0x41
   140004d6f:	je     0x140004e4c
   140004d75:	cmp    esi,0x57
   140004d78:	je     0x140004e4c
   140004d7e:	movzx  ecx,di
   140004d81:	call   QWORD PTR [rip+0x75e9]        # 0x14000c370
   140004d87:	test   al,al
   140004d89:	jne    0x140004db3
   140004d8b:	lea    rcx,[rsp+0x6e]
   140004d90:	mov    dl,0x5f
   140004d92:	call   QWORD PTR [rip+0x75e0]        # 0x14000c378
   140004d98:	cmp    di,WORD PTR [rax]
   140004d9b:	je     0x140004db3
   140004d9d:	lea    rcx,[rsp+0x5e]
   140004da2:	mov    dl,0x24
   140004da4:	call   QWORD PTR [rip+0x75ce]        # 0x14000c378
   140004daa:	cmp    di,WORD PTR [rax]
   140004dad:	jne    0x140004e34
   140004db3:	mov    rax,QWORD PTR [rsp+0x28]
   140004db8:	cmp    DWORD PTR [rax+0x4],ebx
   140004dbb:	je     0x140004e34
   140004dbd:	lea    rdx,[rsp+0x1c8]
   140004dc5:	lea    rcx,[rsp+0x28]
   140004dca:	xor    r8d,r8d
   140004dcd:	call   QWORD PTR [rip+0x7465]        # 0x14000c238
   140004dd3:	movzx  ecx,WORD PTR [rsp+0x1c8]
   140004ddb:	call   QWORD PTR [rip+0x758f]        # 0x14000c370
   140004de1:	test   al,al
   140004de3:	jne    0x140004e19
   140004de5:	lea    rcx,[rsp+0x48]
   140004dea:	mov    dl,0x5f
   140004dec:	call   QWORD PTR [rip+0x7586]        # 0x14000c378
   140004df2:	movzx  eax,WORD PTR [rax]
   140004df5:	cmp    WORD PTR [rsp+0x1c8],ax
   140004dfd:	je     0x140004e19
   140004dff:	lea    rcx,[rsp+0x62]
   140004e04:	mov    dl,0x24
   140004e06:	call   QWORD PTR [rip+0x756c]        # 0x14000c378
   140004e0c:	movzx  eax,WORD PTR [rax]
   140004e0f:	cmp    WORD PTR [rsp+0x1c8],ax
   140004e17:	jne    0x140004e34
   140004e19:	lea    rcx,[rsp+0x72]
   140004e1e:	mov    dl,0x20
   140004e20:	call   QWORD PTR [rip+0x7552]        # 0x14000c378
   140004e26:	lea    rcx,[rsp+0x20]
   140004e2b:	movzx  edx,WORD PTR [rax]
   140004e2e:	call   QWORD PTR [rip+0x7534]        # 0x14000c368
   140004e34:	lea    rdx,[rsp+0x28]
   140004e39:	lea    rcx,[rsp+0x20]
   140004e3e:	call   QWORD PTR [rip+0x7514]        # 0x14000c358
   140004e44:	or     esi,0xffffffff
   140004e47:	jmp    0x140005092
   140004e4c:	lea    rcx,[rsp+0x4a]
   140004e51:	mov    dl,0x22
   140004e53:	call   QWORD PTR [rip+0x751f]        # 0x14000c378
   140004e59:	lea    rcx,[rsp+0x20]
   140004e5e:	movzx  edx,WORD PTR [rax]
   140004e61:	call   QWORD PTR [rip+0x7501]        # 0x14000c368
   140004e67:	lea    rdx,[rsp+0x28]
   140004e6c:	lea    rcx,[rsp+0xe8]
   140004e74:	call   0x140001980
   140004e79:	lea    rcx,[rsp+0x20]
   140004e7e:	mov    rdx,rax
   140004e81:	call   QWORD PTR [rip+0x74d1]        # 0x14000c358
   140004e87:	lea    rcx,[rsp+0xe8]
   140004e8f:	call   QWORD PTR [rip+0x7523]        # 0x14000c3b8
   140004e95:	lea    rcx,[rsp+0x4c]
   140004e9a:	mov    dl,0x22
   140004e9c:	call   QWORD PTR [rip+0x74d6]        # 0x14000c378
   140004ea2:	lea    rcx,[rsp+0x20]
   140004ea7:	movzx  edx,WORD PTR [rax]
   140004eaa:	call   QWORD PTR [rip+0x74b8]        # 0x14000c368
   140004eb0:	or     esi,0xffffffff
   140004eb3:	jmp    0x140005092
   140004eb8:	lea    rbp,[rip+0xffffffffffffb141]        # 0x140000000
   140004ebf:	movsxd rsi,esi
   140004ec2:	lea    rcx,[rsp+0x50]
   140004ec7:	mov    rax,QWORD PTR [rbp+rsi*8+0xcb00]
   140004ecf:	movzx  edx,BYTE PTR [rax]
   140004ed2:	call   QWORD PTR [rip+0x74a0]        # 0x14000c378
   140004ed8:	cmp    di,WORD PTR [rax]
   140004edb:	jne    0x140004ef8
   140004edd:	lea    rcx,[rsp+0x54]
   140004ee2:	mov    dl,0x20
   140004ee4:	call   QWORD PTR [rip+0x748e]        # 0x14000c378
   140004eea:	lea    rcx,[rsp+0x20]
   140004eef:	movzx  edx,WORD PTR [rax]
   140004ef2:	call   QWORD PTR [rip+0x7470]        # 0x14000c368
   140004ef8:	mov    rdx,QWORD PTR [rbp+rsi*8+0xcb00]
   140004f00:	test   rdx,rdx
   140004f03:	je     0x140004f1f
   140004f05:	or     rcx,0xffffffffffffffff
   140004f09:	xor    eax,eax
   140004f0b:	mov    rdi,rdx
   140004f0e:	repnz scas al,BYTE PTR es:[rdi]
   140004f10:	not    rcx
   140004f13:	dec    rcx
   140004f16:	mov    DWORD PTR [rsp+0x130],ecx
   140004f1d:	jmp    0x140004f26
   140004f1f:	mov    DWORD PTR [rsp+0x130],ebx
   140004f26:	mov    QWORD PTR [rsp+0x138],rdx
   140004f2e:	movaps xmm0,XMMWORD PTR [rsp+0x130]
   140004f36:	lea    rcx,[rsp+0x20]
   140004f3b:	lea    rdx,[rsp+0x160]
   140004f43:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   140004f4c:	call   QWORD PTR [rip+0x73ee]        # 0x14000c340
   140004f52:	or     esi,0xffffffff
   140004f55:	jmp    0x140005092
   140004f5a:	test   r13d,r13d
   140004f5d:	jns    0x140005092
   140004f63:	or     edi,0xffffffff
   140004f66:	lea    rax,[rip+0xffffffffffffb093]        # 0x140000000
   140004f6d:	sub    edi,r13d
   140004f70:	mov    r13d,DWORD PTR [rsp+0x30]
   140004f75:	movsxd rbp,edi
   140004f78:	movsx  eax,WORD PTR [rax+rbp*2+0xd120]
   140004f80:	sub    r13d,eax
   140004f83:	mov    DWORD PTR [rsp+0x30],r13d
   140004f88:	cmp    edi,0x58
   140004f8b:	je     0x140004f92
   140004f8d:	cmp    edi,0x59
   140004f90:	jne    0x140004fdb
   140004f92:	lea    rcx,[rsp+0x40]
   140004f97:	call   QWORD PTR [rip+0x742b]        # 0x14000c3c8
   140004f9d:	lea    r8,[rsp+0x40]
   140004fa2:	mov    edx,edi
   140004fa4:	mov    rcx,r15
   140004fa7:	call   0x140001150
   140004fac:	test   al,al
   140004fae:	jne    0x140004fc0
   140004fb0:	lea    rcx,[rsp+0x40]
   140004fb5:	call   QWORD PTR [rip+0x73fd]        # 0x14000c3b8
   140004fbb:	jmp    0x1400050a0
   140004fc0:	lea    rdx,[rsp+0x40]
   140004fc5:	lea    rcx,[rsp+0x20]
   140004fca:	call   QWORD PTR [rip+0x7388]        # 0x14000c358
   140004fd0:	lea    rcx,[rsp+0x40]
   140004fd5:	call   QWORD PTR [rip+0x73dd]        # 0x14000c3b8
   140004fdb:	mov    rax,QWORD PTR [r15+0x100]
   140004fe2:	mov    ecx,DWORD PTR [rax]
   140004fe4:	cmp    ecx,0x1
   140004fe7:	je     0x140005031
   140004fe9:	test   ecx,ecx
   140004feb:	je     0x140005031
   140004fed:	mov    r8d,DWORD PTR [rax+0x8]
   140004ff1:	btr    r8d,0x1f
   140004ff6:	test   r8d,r8d
   140004ff9:	jne    0x140005018
   140004ffb:	lea    r9d,[r8+0x2]
   140004fff:	xor    r8d,r8d
   140005002:	lea    edx,[r9+0x6]
   140005006:	lea    ecx,[rdx-0x4]
   140005009:	call   QWORD PTR [rip+0x7311]        # 0x14000c320
   14000500f:	mov    QWORD PTR [r15+0x100],rax
   140005016:	jmp    0x140005031
   140005018:	mov    edx,DWORD PTR [rax+0x4]
   14000501b:	lea    rcx,[r15+0x100]
   140005022:	mov    r9d,ebx
   140005025:	mov    DWORD PTR [rsp+0x148],ebx
   14000502c:	call   0x1400024e0
   140005031:	mov    rdx,QWORD PTR [r15+0x100]
   140005038:	lea    rax,[rip+0xffffffffffffafc1]        # 0x140000000
   14000503f:	movsxd rcx,r13d
   140005042:	movsx  edi,WORD PTR [rax+rbp*2+0xce50]
   14000504a:	mov    rax,QWORD PTR [rdx+0x10]
   14000504e:	lea    rbp,[rip+0xffffffffffffafab]        # 0x140000000
   140005055:	lea    rcx,[rax+rcx*4]
   140005059:	sub    edi,0x6a
   14000505c:	movsxd rax,DWORD PTR [rcx+rdx*1]
   140005060:	movsx  ecx,WORD PTR [rbp+rax*2+0xdf44]
   140005068:	add    ecx,edi
   14000506a:	js     0x140005086
   14000506c:	movsxd rcx,ecx
   14000506f:	movsx  eax,WORD PTR [rbp+rcx*2+0x11854]
   140005077:	cmp    eax,edi
   140005079:	jne    0x140005086
   14000507b:	movsx  r13d,WORD PTR [rbp+rcx*2+0xfc14]
   140005084:	jmp    0x140005092
   140005086:	movsxd rax,edi
   140005089:	movsx  r13d,WORD PTR [rbp+rax*2+0xd930]
   140005092:	test   r13d,r13d
   140005095:	jne    0x14000524e
   14000509b:	mov    r13d,DWORD PTR [rsp+0x30]
   1400050a0:	mov    rax,QWORD PTR [r15+0x100]
   1400050a7:	mov    ecx,DWORD PTR [rax]
   1400050a9:	cmp    ecx,0x1
   1400050ac:	je     0x1400050f6
   1400050ae:	test   ecx,ecx
   1400050b0:	je     0x1400050f6
   1400050b2:	mov    r8d,DWORD PTR [rax+0x8]
   1400050b6:	btr    r8d,0x1f
   1400050bb:	test   r8d,r8d
   1400050be:	jne    0x1400050dd
   1400050c0:	lea    r9d,[r8+0x2]
   1400050c4:	xor    r8d,r8d
   1400050c7:	lea    edx,[r9+0x6]
   1400050cb:	lea    ecx,[rdx-0x4]
   1400050ce:	call   QWORD PTR [rip+0x724c]        # 0x14000c320
   1400050d4:	mov    QWORD PTR [r15+0x100],rax
   1400050db:	jmp    0x1400050f6
   1400050dd:	mov    edx,DWORD PTR [rax+0x4]
   1400050e0:	lea    rcx,[r15+0x100]
   1400050e7:	mov    r9d,ebx
   1400050ea:	mov    DWORD PTR [rsp+0xd0],ebx
   1400050f1:	call   0x1400024e0
   1400050f6:	mov    rdx,QWORD PTR [r15+0x100]
   1400050fd:	movsxd rcx,r13d
   140005100:	mov    rax,QWORD PTR [rdx+0x10]
   140005104:	lea    rcx,[rax+rcx*4]
   140005108:	movsxd r13,DWORD PTR [rcx+rdx*1]
   14000510c:	cmp    esi,0xffffffff
   14000510f:	je     0x1400052df
   140005115:	lea    rbp,[rip+0xffffffffffffaee4]        # 0x140000000
   14000511c:	mov    rdi,r13
   14000511f:	movsx  eax,WORD PTR [rbp+r13*2+0xda10]
   140005128:	add    eax,0x3e
   14000512b:	js     0x140005145
   14000512d:	movsxd rcx,eax
   140005130:	cmp    WORD PTR [rbp+rcx*2+0x100c0],0x3e
   140005139:	jne    0x140005145
   14000513b:	movsx  eax,WORD PTR [rbp+rcx*2+0xe480]
   140005143:	jmp    0x140005150
   140005145:	movsx  eax,WORD PTR [rbp+r13*2+0xd3f0]
   14000514e:	neg    eax
   140005150:	test   eax,eax
   140005152:	je     0x140005163
   140005154:	lea    rcx,[r15+0x8]
   140005158:	mov    edx,esi
   14000515a:	call   0x1400075a0
   14000515f:	test   al,al
   140005161:	jne    0x14000519c
   140005163:	movsx  eax,WORD PTR [rbp+r13*2+0xda10]
   14000516c:	add    eax,0x59
   14000516f:	js     0x140005189
   140005171:	movsxd rcx,eax
   140005174:	cmp    WORD PTR [rbp+rcx*2+0x100c0],0x59
   14000517d:	jne    0x140005189
   14000517f:	movsx  eax,WORD PTR [rbp+rcx*2+0xe480]
   140005187:	jmp    0x140005194
   140005189:	movsx  eax,WORD PTR [rbp+r13*2+0xd3f0]
   140005192:	neg    eax
   140005194:	test   eax,eax
   140005196:	je     0x1400052df
   14000519c:	mov    rax,QWORD PTR [r15+0x108]
   1400051a3:	mov    ecx,DWORD PTR [rax]
   1400051a5:	cmp    ecx,0x1
   1400051a8:	je     0x1400051c4
   1400051aa:	test   ecx,ecx
   1400051ac:	je     0x1400051c4
   1400051ae:	xor    edx,edx
   1400051b0:	lea    rcx,[r15+0x108]
   1400051b7:	lea    r8d,[rdx+0x1]
   1400051bb:	call   0x140002660
   1400051c0:	mov    DWORD PTR [rax],esi
   1400051c2:	jmp    0x1400051e3
   1400051c4:	lea    rcx,[r15+0x108]
   1400051cb:	mov    DWORD PTR [rsp+0xf8],esi
   1400051d2:	call   QWORD PTR [rip+0x7088]        # 0x14000c260
   1400051d8:	mov    rcx,QWORD PTR [rsp+0xf8]
   1400051e0:	mov    QWORD PTR [rax],rcx
   1400051e3:	mov    rax,QWORD PTR [r12]
   1400051e7:	mov    ecx,DWORD PTR [rax]
   1400051e9:	cmp    ecx,0x1
   1400051ec:	je     0x14000521d
   1400051ee:	test   ecx,ecx
   1400051f0:	je     0x14000521d
   1400051f2:	xor    edx,edx
   1400051f4:	mov    rcx,r12
   1400051f7:	lea    r8d,[rdx+0x1]
   1400051fb:	call   0x1400022d0
   140005200:	test   rax,rax
   140005203:	je     0x140005244
   140005205:	lea    rdx,[rsp+0x28]
   14000520a:	mov    rcx,rax
   14000520d:	call   QWORD PTR [rip+0x71ad]        # 0x14000c3c0
   140005213:	mov    esi,0x3d
   140005218:	jmp    0x140004696
   14000521d:	lea    rdx,[rsp+0x28]
   140005222:	lea    rcx,[rsp+0x108]
   14000522a:	call   QWORD PTR [rip+0x7190]        # 0x14000c3c0
   140005230:	mov    rcx,r12
   140005233:	call   QWORD PTR [rip+0x7027]        # 0x14000c260
   140005239:	mov    rcx,QWORD PTR [rsp+0x108]
   140005241:	mov    QWORD PTR [rax],rcx
   140005244:	mov    esi,0x3d
   140005249:	jmp    0x140004696
   14000524e:	lea    rbp,[r15+0x100]
   140005255:	jmp    0x140004520
   14000525a:	mov    rax,QWORD PTR [rsp+0x20]
   14000525f:	mov    edi,DWORD PTR [rax+0x4]
   140005262:	test   edi,edi
   140005264:	je     0x1400052c2
   140005266:	mov    ecx,DWORD PTR [r15+0x120]
   14000526d:	test   ecx,ecx
   14000526f:	je     0x1400052ad
   140005271:	mov    eax,DWORD PTR [r15+0x124]
   140005278:	test   eax,eax
   14000527a:	je     0x1400052a6
   14000527c:	add    eax,edi
   14000527e:	cmp    eax,ecx
   140005280:	jle    0x1400052a6
   140005282:	lea    rcx,[rsp+0x58]
   140005287:	mov    dl,0xa
   140005289:	call   QWORD PTR [rip+0x70e9]        # 0x14000c378
   14000528f:	lea    rcx,[r15+0x118]
   140005296:	movzx  edx,WORD PTR [rax]
   140005299:	call   QWORD PTR [rip+0x70b1]        # 0x14000c350
   14000529f:	mov    DWORD PTR [r15+0x124],ebx
   1400052a6:	add    DWORD PTR [r15+0x124],edi
   1400052ad:	lea    rax,[r15+0x118]
   1400052b4:	lea    rdx,[rsp+0x20]
   1400052b9:	mov    rcx,rax
   1400052bc:	call   QWORD PTR [rip+0x7096]        # 0x14000c358
   1400052c2:	lea    rcx,[rsp+0x20]
   1400052c7:	call   QWORD PTR [rip+0x70eb]        # 0x14000c3b8
   1400052cd:	lea    rcx,[rsp+0x28]
   1400052d2:	call   QWORD PTR [rip+0x70e0]        # 0x14000c3b8
   1400052d8:	mov    al,0x1
   1400052da:	jmp    0x1400053b2
   1400052df:	mov    rbx,QWORD PTR [r15+0x58]
   1400052e3:	mov    edi,DWORD PTR [r15+0x90]
   1400052ea:	lea    rdx,[r15+0xf0]
   1400052f1:	sub    rbx,QWORD PTR [r15+0x50]
   1400052f5:	lea    rcx,[rsp+0x98]
   1400052fd:	sar    rbx,1
   140005300:	call   QWORD PTR [rip+0x70ba]        # 0x14000c3c0
   140005306:	lea    rdx,[rsp+0x118]
   14000530e:	lea    rcx,[rsp+0x98]
   140005316:	call   QWORD PTR [rip+0x6f84]        # 0x14000c2a0
   14000531c:	mov    rcx,rax
   14000531f:	call   QWORD PTR [rip+0x6f83]        # 0x14000c2a8
   140005325:	mov    rcx,QWORD PTR [rip+0x6d5c]        # 0x14000c088
   14000532c:	mov    rdx,rax
   14000532f:	call   0x1400015b0
   140005334:	mov    dl,0x3a
   140005336:	mov    rcx,rax
   140005339:	call   0x1400017a0
   14000533e:	mov    edx,edi
   140005340:	mov    rcx,rax
   140005343:	call   QWORD PTR [rip+0x6d4f]        # 0x14000c098
   140005349:	mov    dl,0x3a
   14000534b:	mov    rcx,rax
   14000534e:	call   0x1400017a0
   140005353:	lea    edx,[rbx+0x1]
   140005356:	mov    rcx,rax
   140005359:	call   QWORD PTR [rip+0x6d39]        # 0x14000c098
   14000535f:	lea    rdx,[rip+0x750a]        # 0x14000c870
   140005366:	mov    rcx,rax
   140005369:	call   0x1400015b0
   14000536e:	mov    rdx,QWORD PTR [rip+0x6d0b]        # 0x14000c080
   140005375:	mov    rcx,rax
   140005378:	call   QWORD PTR [rip+0x6cfa]        # 0x14000c078
   14000537e:	lea    rcx,[rsp+0x118]
   140005386:	call   QWORD PTR [rip+0x6f24]        # 0x14000c2b0
   14000538c:	lea    rcx,[rsp+0x98]
   140005394:	call   QWORD PTR [rip+0x701e]        # 0x14000c3b8
   14000539a:	lea    rcx,[rsp+0x20]
   14000539f:	call   QWORD PTR [rip+0x7013]        # 0x14000c3b8
   1400053a5:	lea    rcx,[rsp+0x28]
   1400053aa:	call   QWORD PTR [rip+0x7008]        # 0x14000c3b8
   1400053b0:	xor    al,al
   1400053b2:	mov    rbp,QWORD PTR [rsp+0x178]
   1400053ba:	add    rsp,0x180
   1400053c1:	pop    r15
   1400053c3:	pop    r14
   1400053c5:	pop    r13
   1400053c7:	pop    r12
   1400053c9:	pop    rdi
   1400053ca:	pop    rsi
   1400053cb:	pop    rbx
   1400053cc:	ret    
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400053d5:	push   rbx
   1400053d6:	push   rbp
   1400053d7:	push   rsi
   1400053d8:	push   rdi
   1400053d9:	push   r12
   1400053db:	push   r13
   1400053dd:	push   r14
   1400053df:	push   r15
   1400053e1:	sub    rsp,0x138
   1400053e8:	mov    rsi,rcx
   1400053eb:	lea    rcx,[rsp+0x20]
   1400053f0:	xor    ebx,ebx
   1400053f2:	or     r13d,0xffffffff
   1400053f6:	mov    edi,edx
   1400053f8:	mov    r12d,ebx
   1400053fb:	mov    DWORD PTR [rsp+0x188],r13d
   140005403:	call   QWORD PTR [rip+0x6fbf]        # 0x14000c3c8
   140005409:	lea    rbp,[rsi+0x118]
   140005410:	mov    rcx,rbp
   140005413:	mov    QWORD PTR [rsp+0x30],rbp
   140005418:	call   0x140002240
   14000541d:	lea    r14,[rsi+0x108]
   140005424:	mov    rax,QWORD PTR [r14]
   140005427:	mov    ecx,DWORD PTR [rax]
   140005429:	cmp    ecx,0x1
   14000542c:	je     0x140005447
   14000542e:	test   ecx,ecx
   140005430:	je     0x140005447
   140005432:	lea    r8d,[rbx+0x1]
   140005436:	mov    edx,0x7fffffff
   14000543b:	mov    rcx,r14
   14000543e:	call   0x140002660
   140005443:	mov    DWORD PTR [rax],edi
   140005445:	jmp    0x140005462
   140005447:	mov    rcx,r14
   14000544a:	mov    DWORD PTR [rsp+0xf8],edi
   140005451:	call   QWORD PTR [rip+0x6e11]        # 0x14000c268
   140005457:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000545f:	mov    QWORD PTR [rax],rcx
   140005462:	lea    rcx,[rsp+0x98]
   14000546a:	lea    r15,[rsi+0x110]
   140005471:	call   QWORD PTR [rip+0x6f51]        # 0x14000c3c8
   140005477:	mov    rcx,r15
   14000547a:	mov    rdx,rax
   14000547d:	call   0x140004160
   140005482:	lea    rcx,[rsp+0x98]
   14000548a:	call   QWORD PTR [rip+0x6f28]        # 0x14000c3b8
   140005490:	cmp    edi,0x67
   140005493:	jne    0x1400055e1
   140005499:	lea    rcx,[rsp+0x80]
   1400054a1:	mov    DWORD PTR [rsp+0x68],0x1
   1400054a9:	mov    DWORD PTR [rsp+0x6c],ebx
   1400054ad:	mov    DWORD PTR [rsp+0x70],ebx
   1400054b1:	mov    DWORD PTR [rsp+0x74],ebx
   1400054b5:	mov    DWORD PTR [rsp+0x78],ebx
   1400054b9:	call   QWORD PTR [rip+0x6f09]        # 0x14000c3c8
   1400054bf:	mov    rdi,QWORD PTR [rsp+0x180]
   1400054c7:	lea    r8,[rsp+0x68]
   1400054cc:	lea    rcx,[rsi+0x8]
   1400054d0:	mov    rdx,rdi
   1400054d3:	call   0x14000a1c0
   1400054d8:	test   al,al
   1400054da:	je     0x140005672
   1400054e0:	lea    rdx,[rdi+0xf8]
   1400054e7:	lea    rcx,[rsp+0x40]
   1400054ec:	call   QWORD PTR [rip+0x6ece]        # 0x14000c3c0
   1400054f2:	mov    rax,QWORD PTR [rbp+0x0]
   1400054f6:	mov    ecx,DWORD PTR [rax]
   1400054f8:	cmp    ecx,0x1
   1400054fb:	je     0x140005529
   1400054fd:	test   ecx,ecx
   1400054ff:	je     0x140005529
   140005501:	mov    edx,0x7fffffff
   140005506:	mov    r8d,0x1
   14000550c:	mov    rcx,rbp
   14000550f:	call   0x1400022d0
   140005514:	test   rax,rax
   140005517:	je     0x140005550
   140005519:	lea    rdx,[rsp+0x40]
   14000551e:	mov    rcx,rax
   140005521:	call   QWORD PTR [rip+0x6e99]        # 0x14000c3c0
   140005527:	jmp    0x140005550
   140005529:	lea    rdx,[rsp+0x40]
   14000552e:	lea    rcx,[rsp+0xd8]
   140005536:	call   QWORD PTR [rip+0x6e84]        # 0x14000c3c0
   14000553c:	mov    rcx,rbp
   14000553f:	call   QWORD PTR [rip+0x6d23]        # 0x14000c268
   140005545:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000554d:	mov    QWORD PTR [rax],rcx
   140005550:	lea    rcx,[rsp+0x40]
   140005555:	call   QWORD PTR [rip+0x6e5d]        # 0x14000c3b8
   14000555b:	mov    rax,QWORD PTR [r14]
   14000555e:	mov    edi,DWORD PTR [rdi+0x88]
   140005564:	mov    ecx,DWORD PTR [rax]
   140005566:	cmp    ecx,0x1
   140005569:	je     0x140005586
   14000556b:	test   ecx,ecx
   14000556d:	je     0x140005586
   14000556f:	mov    edx,0x7fffffff
   140005574:	mov    r8d,0x1
   14000557a:	mov    rcx,r14
   14000557d:	call   0x140002660
   140005582:	mov    DWORD PTR [rax],edi
   140005584:	jmp    0x1400055a1
   140005586:	mov    rcx,r14
   140005589:	mov    DWORD PTR [rsp+0x88],edi
   140005590:	call   QWORD PTR [rip+0x6cd2]        # 0x14000c268
   140005596:	mov    rdx,QWORD PTR [rsp+0x88]
   14000559e:	mov    QWORD PTR [rax],rdx
   1400055a1:	lea    rdx,[rsp+0x100]
   1400055a9:	lea    rcx,[rsi+0x8]
   1400055ad:	call   0x140007540
   1400055b2:	mov    rcx,r15
   1400055b5:	mov    rdx,rax
   1400055b8:	call   0x140004160
   1400055bd:	lea    rcx,[rsp+0x100]
   1400055c5:	call   QWORD PTR [rip+0x6ded]        # 0x14000c3b8
   1400055cb:	lea    rcx,[rsp+0x80]
   1400055d3:	call   QWORD PTR [rip+0x6ddf]        # 0x14000c3b8
   1400055d9:	mov    rsi,QWORD PTR [rsp+0x180]
   1400055e1:	add    rsi,0x100
   1400055e8:	mov    QWORD PTR [rsp+0x38],rsi
   1400055ed:	nop    DWORD PTR [rax]
   1400055f0:	mov    edi,DWORD PTR [rsp+0x188]
   1400055f7:	mov    rax,QWORD PTR [rsi]
   1400055fa:	mov    edx,DWORD PTR [rax+0x4]
   1400055fd:	inc    edi
   1400055ff:	mov    DWORD PTR [rsp+0x188],edi
   140005606:	cmp    edi,edx
   140005608:	jne    0x14000562e
   14000560a:	mov    r8d,DWORD PTR [rax+0x8]
   14000560e:	add    edx,edx
   140005610:	mov    r9d,ebx
   140005613:	btr    r8d,0x1f
   140005618:	cmp    edx,r8d
   14000561b:	jle    0x140005626
   14000561d:	mov    r8d,edx
   140005620:	mov    r9d,0x8
   140005626:	mov    rcx,rsi
   140005629:	call   0x1400024e0
   14000562e:	mov    rax,QWORD PTR [rsi]
   140005631:	mov    ecx,DWORD PTR [rax]
   140005633:	cmp    ecx,0x1
   140005636:	je     0x14000574d
   14000563c:	test   ecx,ecx
   14000563e:	je     0x14000574d
   140005644:	mov    r8d,DWORD PTR [rax+0x8]
   140005648:	btr    r8d,0x1f
   14000564d:	test   r8d,r8d
   140005650:	jne    0x140005738
   140005656:	lea    r9d,[r8+0x2]
   14000565a:	xor    r8d,r8d
   14000565d:	lea    edx,[r9+0x6]
   140005661:	lea    ecx,[rdx-0x4]
   140005664:	call   QWORD PTR [rip+0x6cb6]        # 0x14000c320
   14000566a:	mov    QWORD PTR [rsi],rax
   14000566d:	jmp    0x14000574d
   140005672:	mov    rbx,QWORD PTR [rsi+0x58]
   140005676:	mov    rdx,QWORD PTR [rsp+0x180]
   14000567e:	mov    edi,DWORD PTR [rdi+0x90]
   140005684:	sub    rbx,QWORD PTR [rsi+0x50]
   140005688:	lea    rcx,[rsp+0x50]
   14000568d:	add    rdx,0xf0
   140005694:	sar    rbx,1
   140005697:	call   QWORD PTR [rip+0x6d23]        # 0x14000c3c0
   14000569d:	lea    rdx,[rsp+0xb8]
   1400056a5:	lea    rcx,[rsp+0x50]
   1400056aa:	call   QWORD PTR [rip+0x6bf0]        # 0x14000c2a0
   1400056b0:	mov    rcx,rax
   1400056b3:	call   QWORD PTR [rip+0x6bef]        # 0x14000c2a8
   1400056b9:	mov    rcx,QWORD PTR [rip+0x69c8]        # 0x14000c088
   1400056c0:	mov    rdx,rax
   1400056c3:	call   0x1400015b0
   1400056c8:	mov    dl,0x3a
   1400056ca:	mov    rcx,rax
   1400056cd:	call   0x1400017a0
   1400056d2:	mov    edx,edi
   1400056d4:	mov    rcx,rax
   1400056d7:	call   QWORD PTR [rip+0x69bb]        # 0x14000c098
   1400056dd:	mov    dl,0x3a
   1400056df:	mov    rcx,rax
   1400056e2:	call   0x1400017a0
   1400056e7:	lea    edx,[rbx+0x1]
   1400056ea:	mov    rcx,rax
   1400056ed:	call   QWORD PTR [rip+0x69a5]        # 0x14000c098
   1400056f3:	lea    rdx,[rip+0x7176]        # 0x14000c870
   1400056fa:	mov    rcx,rax
   1400056fd:	call   0x1400015b0
   140005702:	mov    rdx,QWORD PTR [rip+0x6977]        # 0x14000c080
   140005709:	mov    rcx,rax
   14000570c:	call   QWORD PTR [rip+0x6966]        # 0x14000c078
   140005712:	lea    rcx,[rsp+0xb8]
   14000571a:	call   QWORD PTR [rip+0x6b90]        # 0x14000c2b0
   140005720:	lea    rcx,[rsp+0x50]
   140005725:	call   QWORD PTR [rip+0x6c8d]        # 0x14000c3b8
   14000572b:	lea    rcx,[rsp+0x80]
   140005733:	jmp    0x140005fe6
   140005738:	mov    edx,DWORD PTR [rax+0x4]
   14000573b:	mov    r9d,ebx
   14000573e:	mov    rcx,rsi
   140005741:	mov    DWORD PTR [rsp+0x190],ebx
   140005748:	call   0x1400024e0
   14000574d:	mov    rdx,QWORD PTR [rsi]
   140005750:	movsxd rcx,edi
   140005753:	lea    rsi,[rip+0xffffffffffffa8a6]        # 0x140000000
   14000575a:	mov    rax,QWORD PTR [rdx+0x10]
   14000575e:	lea    rcx,[rax+rcx*4]
   140005762:	mov    DWORD PTR [rcx+rdx*1],r12d
   140005766:	cmp    r13d,0xffffffff
   14000576a:	jne    0x140005a7c
   140005770:	movsxd rax,r12d
   140005773:	cmp    WORD PTR [rsi+rax*2+0xda10],0xff96
   14000577c:	je     0x140005a7c
   140005782:	mov    rcx,QWORD PTR [r14]
   140005785:	mov    eax,DWORD PTR [rcx+0x8]
   140005788:	cmp    DWORD PTR [rcx+0xc],eax
   14000578b:	jne    0x14000585d
   140005791:	mov    rsi,QWORD PTR [rsp+0x180]
   140005799:	lea    rcx,[rsi+0x8]
   14000579d:	call   0x14000a050
   1400057a2:	mov    rcx,QWORD PTR [r14]
   1400057a5:	mov    edx,DWORD PTR [rcx]
   1400057a7:	mov    edi,eax
   1400057a9:	cmp    edx,0x1
   1400057ac:	je     0x1400057c7
   1400057ae:	test   edx,edx
   1400057b0:	je     0x1400057c7
   1400057b2:	lea    r8d,[r13+0x2]
   1400057b6:	mov    edx,0x7fffffff
   1400057bb:	mov    rcx,r14
   1400057be:	call   0x140002660
   1400057c3:	mov    DWORD PTR [rax],edi
   1400057c5:	jmp    0x1400057e2
   1400057c7:	mov    rcx,r14
   1400057ca:	mov    DWORD PTR [rsp+0xe8],eax
   1400057d1:	call   QWORD PTR [rip+0x6a91]        # 0x14000c268
   1400057d7:	mov    rdx,QWORD PTR [rsp+0xe8]
   1400057df:	mov    QWORD PTR [rax],rdx
   1400057e2:	lea    rdx,[rsp+0xf0]
   1400057ea:	lea    rcx,[rsi+0x8]
   1400057ee:	call   0x140007540
   1400057f3:	mov    rcx,QWORD PTR [r15]
   1400057f6:	mov    edx,DWORD PTR [rcx]
   1400057f8:	mov    rdi,rax
   1400057fb:	cmp    edx,0x1
   1400057fe:	je     0x14000582a
   140005800:	test   edx,edx
   140005802:	je     0x14000582a
   140005804:	mov    edx,0x7fffffff
   140005809:	mov    r8d,0x1
   14000580f:	mov    rcx,r15
   140005812:	call   0x1400022d0
   140005817:	test   rax,rax
   14000581a:	je     0x14000584f
   14000581c:	mov    rdx,rdi
   14000581f:	mov    rcx,rax
   140005822:	call   QWORD PTR [rip+0x6b98]        # 0x14000c3c0
   140005828:	jmp    0x14000584f
   14000582a:	lea    rcx,[rsp+0xc8]
   140005832:	mov    rdx,rax
   140005835:	call   QWORD PTR [rip+0x6b85]        # 0x14000c3c0
   14000583b:	mov    rcx,r15
   14000583e:	call   QWORD PTR [rip+0x6a24]        # 0x14000c268
   140005844:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000584c:	mov    QWORD PTR [rax],rcx
   14000584f:	lea    rcx,[rsp+0xf0]
   140005857:	call   QWORD PTR [rip+0x6b5b]        # 0x14000c3b8
   14000585d:	mov    rcx,QWORD PTR [r14]
   140005860:	mov    eax,DWORD PTR [rcx]
   140005862:	cmp    eax,0x1
   140005865:	je     0x1400058d4
   140005867:	test   eax,eax
   140005869:	je     0x1400058d4
   14000586b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000586f:	mov    edx,DWORD PTR [rcx+0x4]
   140005872:	lea    rsi,[rcx+rax*8+0x10]
   140005877:	mov    rcx,r14
   14000587a:	call   QWORD PTR [rip+0x6a80]        # 0x14000c300
   140005880:	mov    rdi,rax
   140005883:	mov    rax,QWORD PTR [r14]
   140005886:	movsxd rcx,DWORD PTR [rax+0xc]
   14000588a:	lea    r8,[rax+rcx*8+0x10]
   14000588f:	movsxd rcx,DWORD PTR [rax+0x8]
   140005893:	lea    rcx,[rax+rcx*8+0x10]
   140005898:	cmp    rsi,rcx
   14000589b:	je     0x1400058b5
   14000589d:	sub    r8,rcx
   1400058a0:	sar    r8,0x3
   1400058a4:	test   r8,r8
   1400058a7:	jle    0x1400058b5
   1400058a9:	shl    r8,0x3
   1400058ad:	mov    rdx,rsi
   1400058b0:	call   0x14000b422
   1400058b5:	mov    eax,DWORD PTR [rdi]
   1400058b7:	test   eax,eax
   1400058b9:	je     0x1400058cb
   1400058bb:	cmp    eax,0xffffffff
   1400058be:	je     0x1400058d4
   1400058c0:	lock add DWORD PTR [rdi],0xffffffff
   1400058c4:	setne  al
   1400058c7:	test   al,al
   1400058c9:	jne    0x1400058d4
   1400058cb:	mov    rcx,rdi
   1400058ce:	call   QWORD PTR [rip+0x6a34]        # 0x14000c308
   1400058d4:	mov    rcx,QWORD PTR [r14]
   1400058d7:	movsxd rax,DWORD PTR [rcx+0x8]
   1400058db:	mov    r13d,DWORD PTR [rcx+rax*8+0x10]
   1400058e0:	lea    rsi,[rcx+rax*8+0x10]
   1400058e5:	mov    eax,DWORD PTR [rcx]
   1400058e7:	cmp    eax,0x1
   1400058ea:	je     0x140005950
   1400058ec:	test   eax,eax
   1400058ee:	je     0x140005950
   1400058f0:	mov    edx,DWORD PTR [rcx+0x4]
   1400058f3:	mov    rcx,r14
   1400058f6:	call   QWORD PTR [rip+0x6a04]        # 0x14000c300
   1400058fc:	mov    rdi,rax
   1400058ff:	mov    rax,QWORD PTR [r14]
   140005902:	movsxd rcx,DWORD PTR [rax+0xc]
   140005906:	lea    r8,[rax+rcx*8+0x10]
   14000590b:	movsxd rcx,DWORD PTR [rax+0x8]
   14000590f:	lea    rcx,[rax+rcx*8+0x10]
   140005914:	cmp    rsi,rcx
   140005917:	je     0x140005931
   140005919:	sub    r8,rcx
   14000591c:	sar    r8,0x3
   140005920:	test   r8,r8
   140005923:	jle    0x140005931
   140005925:	shl    r8,0x3
   140005929:	mov    rdx,rsi
   14000592c:	call   0x14000b422
   140005931:	mov    eax,DWORD PTR [rdi]
   140005933:	test   eax,eax
   140005935:	je     0x140005947
   140005937:	cmp    eax,0xffffffff
   14000593a:	je     0x140005950
   14000593c:	lock add DWORD PTR [rdi],0xffffffff
   140005940:	setne  al
   140005943:	test   al,al
   140005945:	jne    0x140005950
   140005947:	mov    rcx,rdi
   14000594a:	call   QWORD PTR [rip+0x69b8]        # 0x14000c308
   140005950:	mov    rcx,QWORD PTR [r14]
   140005953:	movsxd rax,DWORD PTR [rcx+0x8]
   140005957:	lea    rdx,[rax*8+0x10]
   14000595f:	mov    eax,DWORD PTR [rcx]
   140005961:	lea    rdi,[rdx+rcx*1]
   140005965:	mov    QWORD PTR [rsp+0x90],rdi
   14000596d:	cmp    eax,0x1
   140005970:	je     0x140005a16
   140005976:	test   eax,eax
   140005978:	je     0x140005a16
   14000597e:	mov    rsi,rdi
   140005981:	sub    rsi,rdx
   140005984:	sub    rsi,rcx
   140005987:	sar    rsi,0x3
   14000598b:	cmp    eax,0x1
   14000598e:	je     0x1400059fb
   140005990:	test   eax,eax
   140005992:	je     0x1400059fb
   140005994:	mov    edx,DWORD PTR [rcx+0x4]
   140005997:	mov    rcx,r14
   14000599a:	call   QWORD PTR [rip+0x6960]        # 0x14000c300
   1400059a0:	mov    rbp,rax
   1400059a3:	mov    rax,QWORD PTR [r14]
   1400059a6:	movsxd rcx,DWORD PTR [rax+0xc]
   1400059aa:	lea    r8,[rax+rcx*8+0x10]
   1400059af:	movsxd rcx,DWORD PTR [rax+0x8]
   1400059b3:	lea    rcx,[rax+rcx*8+0x10]
   1400059b8:	cmp    rdi,rcx
   1400059bb:	je     0x1400059d5
   1400059bd:	sub    r8,rcx
   1400059c0:	sar    r8,0x3
   1400059c4:	test   r8,r8
   1400059c7:	jle    0x1400059d5
   1400059c9:	shl    r8,0x3
   1400059cd:	mov    rdx,rdi
   1400059d0:	call   0x14000b422
   1400059d5:	mov    eax,DWORD PTR [rbp+0x0]
   1400059d8:	test   eax,eax
   1400059da:	je     0x1400059ed
   1400059dc:	cmp    eax,0xffffffff
   1400059df:	je     0x1400059f6
   1400059e1:	lock add DWORD PTR [rbp+0x0],0xffffffff
   1400059e6:	setne  al
   1400059e9:	test   al,al
   1400059eb:	jne    0x1400059f6
   1400059ed:	mov    rcx,rbp
   1400059f0:	call   QWORD PTR [rip+0x6912]        # 0x14000c308
   1400059f6:	mov    rbp,QWORD PTR [rsp+0x30]
   1400059fb:	mov    rcx,QWORD PTR [r14]
   1400059fe:	movsxd rax,DWORD PTR [rcx+0x8]
   140005a02:	lea    rax,[rcx+rax*8+0x10]
   140005a07:	movsxd rcx,esi
   140005a0a:	lea    rdi,[rax+rcx*8]
   140005a0e:	mov    QWORD PTR [rsp+0x90],rdi
   140005a16:	mov    rdx,rdi
   140005a19:	mov    rcx,r14
   140005a1c:	call   QWORD PTR [rip+0x6836]        # 0x14000c258
   140005a22:	mov    rcx,QWORD PTR [r15]
   140005a25:	mov    eax,DWORD PTR [rcx]
   140005a27:	cmp    eax,0x1
   140005a2a:	je     0x140005a3b
   140005a2c:	test   eax,eax
   140005a2e:	je     0x140005a3b
   140005a30:	mov    edx,DWORD PTR [rcx+0x4]
   140005a33:	mov    rcx,r15
   140005a36:	call   0x140002410
   140005a3b:	mov    rcx,QWORD PTR [r15]
   140005a3e:	movsxd rax,DWORD PTR [rcx+0x8]
   140005a42:	lea    rdx,[rcx+rax*8+0x10]
   140005a47:	lea    rcx,[rsp+0x58]
   140005a4c:	call   QWORD PTR [rip+0x696e]        # 0x14000c3c0
   140005a52:	mov    rcx,r15
   140005a55:	call   0x140004240
   140005a5a:	lea    rdx,[rsp+0x58]
   140005a5f:	lea    rcx,[rsp+0x20]
   140005a64:	call   QWORD PTR [rip+0x6936]        # 0x14000c3a0
   140005a6a:	lea    rcx,[rsp+0x58]
   140005a6f:	call   QWORD PTR [rip+0x6943]        # 0x14000c3b8
   140005a75:	lea    rsi,[rip+0xffffffffffffa584]        # 0x140000000
   140005a7c:	movsxd rdx,r12d
   140005a7f:	movsx  eax,WORD PTR [rsi+rdx*2+0xda10]
   140005a87:	add    eax,r13d
   140005a8a:	js     0x140005aa7
   140005a8c:	movsxd rcx,eax
   140005a8f:	movsx  eax,WORD PTR [rsi+rcx*2+0x100c0]
   140005a97:	cmp    eax,r13d
   140005a9a:	jne    0x140005aa7
   140005a9c:	movsx  r12d,WORD PTR [rsi+rcx*2+0xe480]
   140005aa5:	jmp    0x140005ab3
   140005aa7:	movsx  r12d,WORD PTR [rsi+rdx*2+0xd3f0]
   140005ab0:	neg    r12d
   140005ab3:	test   r12d,r12d
   140005ab6:	jle    0x140005c0e
   140005abc:	cmp    r12d,0x299
   140005ac3:	je     0x140005f21
   140005ac9:	cmp    r13d,0x3d
   140005acd:	jne    0x140005ba0
   140005ad3:	or     rcx,0xffffffffffffffff
   140005ad7:	lea    rdx,[rip+0x6da2]        # 0x14000c880
   140005ade:	xor    eax,eax
   140005ae0:	mov    rdi,rdx
   140005ae3:	mov    QWORD PTR [rsp+0x118],rdx
   140005aeb:	lea    rdx,[rsp+0x120]
   140005af3:	repnz scas al,BYTE PTR es:[rdi]
   140005af5:	not    rcx
   140005af8:	dec    rcx
   140005afb:	mov    DWORD PTR [rsp+0x110],ecx
   140005b02:	lea    rcx,[rsp+0x48]
   140005b07:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140005b0f:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140005b18:	call   QWORD PTR [rip+0x6712]        # 0x14000c230
   140005b1e:	mov    rax,QWORD PTR [rbp+0x0]
   140005b22:	mov    ecx,DWORD PTR [rax]
   140005b24:	cmp    ecx,0x1
   140005b27:	je     0x140005b65
   140005b29:	test   ecx,ecx
   140005b2b:	je     0x140005b65
   140005b2d:	lea    r8d,[r13-0x3c]
   140005b31:	mov    edx,0x7fffffff
   140005b36:	mov    rcx,rbp
   140005b39:	call   0x1400022d0
   140005b3e:	test   rax,rax
   140005b41:	je     0x140005b8c
   140005b43:	lea    rdx,[rsp+0x48]
   140005b48:	mov    rcx,rax
   140005b4b:	call   QWORD PTR [rip+0x686f]        # 0x14000c3c0
   140005b51:	lea    rcx,[rsp+0x48]
   140005b56:	call   QWORD PTR [rip+0x685c]        # 0x14000c3b8
   140005b5c:	or     r13d,0xffffffff
   140005b60:	jmp    0x140005d65
   140005b65:	lea    rdx,[rsp+0x48]
   140005b6a:	lea    rcx,[rsp+0xa0]
   140005b72:	call   QWORD PTR [rip+0x6848]        # 0x14000c3c0
   140005b78:	mov    rcx,rbp
   140005b7b:	call   QWORD PTR [rip+0x66e7]        # 0x14000c268
   140005b81:	mov    rcx,QWORD PTR [rsp+0xa0]
   140005b89:	mov    QWORD PTR [rax],rcx
   140005b8c:	lea    rcx,[rsp+0x48]
   140005b91:	call   QWORD PTR [rip+0x6821]        # 0x14000c3b8
   140005b97:	or     r13d,0xffffffff
   140005b9b:	jmp    0x140005d65
   140005ba0:	mov    rax,QWORD PTR [rbp+0x0]
   140005ba4:	mov    ecx,DWORD PTR [rax]
   140005ba6:	cmp    ecx,0x1
   140005ba9:	je     0x140005bde
   140005bab:	test   ecx,ecx
   140005bad:	je     0x140005bde
   140005baf:	mov    edx,0x7fffffff
   140005bb4:	mov    r8d,0x1
   140005bba:	mov    rcx,rbp
   140005bbd:	call   0x1400022d0
   140005bc2:	test   rax,rax
   140005bc5:	je     0x140005c05
   140005bc7:	lea    rdx,[rsp+0x20]
   140005bcc:	mov    rcx,rax
   140005bcf:	call   QWORD PTR [rip+0x67eb]        # 0x14000c3c0
   140005bd5:	or     r13d,0xffffffff
   140005bd9:	jmp    0x140005d65
   140005bde:	lea    rdx,[rsp+0x20]
   140005be3:	lea    rcx,[rsp+0xb0]
   140005beb:	call   QWORD PTR [rip+0x67cf]        # 0x14000c3c0
   140005bf1:	mov    rcx,rbp
   140005bf4:	call   QWORD PTR [rip+0x666e]        # 0x14000c268
   140005bfa:	mov    rcx,QWORD PTR [rsp+0xb0]
   140005c02:	mov    QWORD PTR [rax],rcx
   140005c05:	or     r13d,0xffffffff
   140005c09:	jmp    0x140005d65
   140005c0e:	jns    0x140005d65
   140005c14:	or     edi,0xffffffff
   140005c17:	lea    rax,[rip+0xffffffffffffa3e2]        # 0x140000000
   140005c1e:	sub    edi,r12d
   140005c21:	mov    r12d,DWORD PTR [rsp+0x188]
   140005c29:	movsxd rsi,edi
   140005c2c:	movsx  eax,WORD PTR [rax+rsi*2+0xd120]
   140005c34:	sub    r12d,eax
   140005c37:	mov    DWORD PTR [rsp+0x188],r12d
   140005c3f:	cmp    edi,0x58
   140005c42:	je     0x140005c49
   140005c44:	cmp    edi,0x59
   140005c47:	jne    0x140005cb9
   140005c49:	lea    rcx,[rsp+0x28]
   140005c4e:	call   QWORD PTR [rip+0x6774]        # 0x14000c3c8
   140005c54:	mov    rcx,QWORD PTR [rsp+0x180]
   140005c5c:	lea    r8,[rsp+0x28]
   140005c61:	mov    edx,edi
   140005c63:	call   0x140001150
   140005c68:	test   al,al
   140005c6a:	jne    0x140005c7c
   140005c6c:	lea    rcx,[rsp+0x28]
   140005c71:	call   QWORD PTR [rip+0x6741]        # 0x14000c3b8
   140005c77:	jmp    0x140005d76
   140005c7c:	mov    rcx,QWORD PTR [rbp+0x0]
   140005c80:	mov    eax,DWORD PTR [rcx]
   140005c82:	cmp    eax,0x1
   140005c85:	je     0x140005c96
   140005c87:	test   eax,eax
   140005c89:	je     0x140005c96
   140005c8b:	mov    edx,DWORD PTR [rcx+0x4]
   140005c8e:	mov    rcx,rbp
   140005c91:	call   0x140002410
   140005c96:	mov    rcx,QWORD PTR [rbp+0x0]
   140005c9a:	lea    rdx,[rsp+0x28]
   140005c9f:	movsxd rax,DWORD PTR [rcx+0xc]
   140005ca3:	lea    rcx,[rcx+rax*8+0x8]
   140005ca8:	call   QWORD PTR [rip+0x66aa]        # 0x14000c358
   140005cae:	lea    rcx,[rsp+0x28]
   140005cb3:	call   QWORD PTR [rip+0x66ff]        # 0x14000c3b8
   140005cb9:	mov    rdi,QWORD PTR [rsp+0x38]
   140005cbe:	mov    rax,QWORD PTR [rdi]
   140005cc1:	mov    ecx,DWORD PTR [rax]
   140005cc3:	cmp    ecx,0x1
   140005cc6:	je     0x140005d08
   140005cc8:	test   ecx,ecx
   140005cca:	je     0x140005d08
   140005ccc:	mov    r8d,DWORD PTR [rax+0x8]
   140005cd0:	btr    r8d,0x1f
   140005cd5:	test   r8d,r8d
   140005cd8:	jne    0x140005cf3
   140005cda:	lea    r9d,[r8+0x2]
   140005cde:	xor    r8d,r8d
   140005ce1:	lea    edx,[r9+0x6]
   140005ce5:	lea    ecx,[rdx-0x4]
   140005ce8:	call   QWORD PTR [rip+0x6632]        # 0x14000c320
   140005cee:	mov    QWORD PTR [rdi],rax
   140005cf1:	jmp    0x140005d08
   140005cf3:	mov    edx,DWORD PTR [rax+0x4]
   140005cf6:	mov    r9d,ebx
   140005cf9:	mov    rcx,rdi
   140005cfc:	mov    DWORD PTR [rsp+0x198],ebx
   140005d03:	call   0x1400024e0
   140005d08:	mov    rdx,QWORD PTR [rdi]
   140005d0b:	lea    rax,[rip+0xffffffffffffa2ee]        # 0x140000000
   140005d12:	movsxd rcx,r12d
   140005d15:	movsx  edi,WORD PTR [rax+rsi*2+0xce50]
   140005d1d:	mov    rax,QWORD PTR [rdx+0x10]
   140005d21:	lea    rsi,[rip+0xffffffffffffa2d8]        # 0x140000000
   140005d28:	lea    rcx,[rax+rcx*4]
   140005d2c:	sub    edi,0x6a
   140005d2f:	movsxd rax,DWORD PTR [rcx+rdx*1]
   140005d33:	movsx  ecx,WORD PTR [rsi+rax*2+0xdf44]
   140005d3b:	add    ecx,edi
   140005d3d:	js     0x140005d59
   140005d3f:	movsxd rcx,ecx
   140005d42:	movsx  eax,WORD PTR [rsi+rcx*2+0x11854]
   140005d4a:	cmp    eax,edi
   140005d4c:	jne    0x140005d59
   140005d4e:	movsx  r12d,WORD PTR [rsi+rcx*2+0xfc14]
   140005d57:	jmp    0x140005d65
   140005d59:	movsxd rax,edi
   140005d5c:	movsx  r12d,WORD PTR [rsi+rax*2+0xd930]
   140005d65:	test   r12d,r12d
   140005d68:	jne    0x140005f17
   140005d6e:	mov    r12d,DWORD PTR [rsp+0x188]
   140005d76:	mov    rsi,QWORD PTR [rsp+0x38]
   140005d7b:	mov    rax,QWORD PTR [rsi]
   140005d7e:	mov    ecx,DWORD PTR [rax]
   140005d80:	cmp    ecx,0x1
   140005d83:	je     0x140005dc5
   140005d85:	test   ecx,ecx
   140005d87:	je     0x140005dc5
   140005d89:	mov    r8d,DWORD PTR [rax+0x8]
   140005d8d:	btr    r8d,0x1f
   140005d92:	test   r8d,r8d
   140005d95:	jne    0x140005db0
   140005d97:	lea    r9d,[r8+0x2]
   140005d9b:	xor    r8d,r8d
   140005d9e:	lea    edx,[r9+0x6]
   140005da2:	lea    ecx,[rdx-0x4]
   140005da5:	call   QWORD PTR [rip+0x6575]        # 0x14000c320
   140005dab:	mov    QWORD PTR [rsi],rax
   140005dae:	jmp    0x140005dc5
   140005db0:	mov    edx,DWORD PTR [rax+0x4]
   140005db3:	mov    r9d,ebx
   140005db6:	mov    rcx,rsi
   140005db9:	mov    DWORD PTR [rsp+0xa8],ebx
   140005dc0:	call   0x1400024e0
   140005dc5:	mov    rdx,QWORD PTR [rsi]
   140005dc8:	movsxd rcx,r12d
   140005dcb:	mov    rax,QWORD PTR [rdx+0x10]
   140005dcf:	lea    rcx,[rax+rcx*4]
   140005dd3:	movsxd r12,DWORD PTR [rcx+rdx*1]
   140005dd7:	cmp    r13d,0xffffffff
   140005ddb:	je     0x140005f33
   140005de1:	lea    rsi,[rip+0xffffffffffffa218]        # 0x140000000
   140005de8:	movsx  eax,WORD PTR [rsi+r12*2+0xda10]
   140005df1:	add    eax,0x3e
   140005df4:	js     0x140005e0e
   140005df6:	movsxd rcx,eax
   140005df9:	cmp    WORD PTR [rsi+rcx*2+0x100c0],0x3e
   140005e02:	jne    0x140005e0e
   140005e04:	movsx  eax,WORD PTR [rsi+rcx*2+0xe480]
   140005e0c:	jmp    0x140005e19
   140005e0e:	movsx  eax,WORD PTR [rsi+r12*2+0xd3f0]
   140005e17:	neg    eax
   140005e19:	test   eax,eax
   140005e1b:	je     0x140005e35
   140005e1d:	mov    rcx,QWORD PTR [rsp+0x180]
   140005e25:	mov    edx,r13d
   140005e28:	add    rcx,0x8
   140005e2c:	call   0x1400075a0
   140005e31:	test   al,al
   140005e33:	jne    0x140005e6e
   140005e35:	movsx  eax,WORD PTR [rsi+r12*2+0xda10]
   140005e3e:	add    eax,0x59
   140005e41:	js     0x140005e5b
   140005e43:	movsxd rcx,eax
   140005e46:	cmp    WORD PTR [rsi+rcx*2+0x100c0],0x59
   140005e4f:	jne    0x140005e5b
   140005e51:	movsx  eax,WORD PTR [rsi+rcx*2+0xe480]
   140005e59:	jmp    0x140005e66
   140005e5b:	movsx  eax,WORD PTR [rsi+r12*2+0xd3f0]
   140005e64:	neg    eax
   140005e66:	test   eax,eax
   140005e68:	je     0x140005f33
   140005e6e:	mov    rax,QWORD PTR [r14]
   140005e71:	mov    ecx,DWORD PTR [rax]
   140005e73:	cmp    ecx,0x1
   140005e76:	je     0x140005e8f
   140005e78:	test   ecx,ecx
   140005e7a:	je     0x140005e8f
   140005e7c:	xor    edx,edx
   140005e7e:	mov    rcx,r14
   140005e81:	lea    r8d,[rdx+0x1]
   140005e85:	call   0x140002660
   140005e8a:	mov    DWORD PTR [rax],r13d
   140005e8d:	jmp    0x140005eab
   140005e8f:	mov    rcx,r14
   140005e92:	mov    DWORD PTR [rsp+0xc0],r13d
   140005e9a:	call   QWORD PTR [rip+0x63c0]        # 0x14000c260
   140005ea0:	mov    rcx,QWORD PTR [rsp+0xc0]
   140005ea8:	mov    QWORD PTR [rax],rcx
   140005eab:	mov    rax,QWORD PTR [r15]
   140005eae:	mov    ecx,DWORD PTR [rax]
   140005eb0:	cmp    ecx,0x1
   140005eb3:	je     0x140005ee5
   140005eb5:	test   ecx,ecx
   140005eb7:	je     0x140005ee5
   140005eb9:	xor    edx,edx
   140005ebb:	mov    rcx,r15
   140005ebe:	lea    r8d,[rdx+0x1]
   140005ec2:	call   0x1400022d0
   140005ec7:	test   rax,rax
   140005eca:	je     0x140005f0c
   140005ecc:	lea    rdx,[rsp+0x20]
   140005ed1:	mov    rcx,rax
   140005ed4:	call   QWORD PTR [rip+0x64e6]        # 0x14000c3c0
   140005eda:	mov    r13d,0x3d
   140005ee0:	jmp    0x140005766
   140005ee5:	lea    rdx,[rsp+0x20]
   140005eea:	lea    rcx,[rsp+0xd0]
   140005ef2:	call   QWORD PTR [rip+0x64c8]        # 0x14000c3c0
   140005ef8:	mov    rcx,r15
   140005efb:	call   QWORD PTR [rip+0x635f]        # 0x14000c260
   140005f01:	mov    rcx,QWORD PTR [rsp+0xd0]
   140005f09:	mov    QWORD PTR [rax],rcx
   140005f0c:	mov    r13d,0x3d
   140005f12:	jmp    0x140005766
   140005f17:	mov    rsi,QWORD PTR [rsp+0x38]
   140005f1c:	jmp    0x1400055f0
   140005f21:	lea    rcx,[rsp+0x20]
   140005f26:	call   QWORD PTR [rip+0x648c]        # 0x14000c3b8
   140005f2c:	mov    al,0x1
   140005f2e:	jmp    0x140005ff9
   140005f33:	mov    rax,QWORD PTR [rsp+0x180]
   140005f3b:	lea    rcx,[rsp+0x60]
   140005f40:	mov    rbx,QWORD PTR [rax+0x58]
   140005f44:	mov    edi,DWORD PTR [rax+0x90]
   140005f4a:	lea    rdx,[rax+0xf0]
   140005f51:	sub    rbx,QWORD PTR [rax+0x50]
   140005f55:	sar    rbx,1
   140005f58:	call   QWORD PTR [rip+0x6462]        # 0x14000c3c0
   140005f5e:	lea    rdx,[rsp+0xe0]
   140005f66:	lea    rcx,[rsp+0x60]
   140005f6b:	call   QWORD PTR [rip+0x632f]        # 0x14000c2a0
   140005f71:	mov    rcx,rax
   140005f74:	call   QWORD PTR [rip+0x632e]        # 0x14000c2a8
   140005f7a:	mov    rcx,QWORD PTR [rip+0x6107]        # 0x14000c088
   140005f81:	mov    rdx,rax
   140005f84:	call   0x1400015b0
   140005f89:	mov    dl,0x3a
   140005f8b:	mov    rcx,rax
   140005f8e:	call   0x1400017a0
   140005f93:	mov    edx,edi
   140005f95:	mov    rcx,rax
   140005f98:	call   QWORD PTR [rip+0x60fa]        # 0x14000c098
   140005f9e:	mov    dl,0x3a
   140005fa0:	mov    rcx,rax
   140005fa3:	call   0x1400017a0
   140005fa8:	lea    edx,[rbx+0x1]
   140005fab:	mov    rcx,rax
   140005fae:	call   QWORD PTR [rip+0x60e4]        # 0x14000c098
   140005fb4:	lea    rdx,[rip+0x68b5]        # 0x14000c870
   140005fbb:	mov    rcx,rax
   140005fbe:	call   0x1400015b0
   140005fc3:	mov    rdx,QWORD PTR [rip+0x60b6]        # 0x14000c080
   140005fca:	mov    rcx,rax
   140005fcd:	call   QWORD PTR [rip+0x60a5]        # 0x14000c078
   140005fd3:	lea    rcx,[rsp+0xe0]
   140005fdb:	call   QWORD PTR [rip+0x62cf]        # 0x14000c2b0
   140005fe1:	lea    rcx,[rsp+0x60]
   140005fe6:	call   QWORD PTR [rip+0x63cc]        # 0x14000c3b8
   140005fec:	lea    rcx,[rsp+0x20]
   140005ff1:	call   QWORD PTR [rip+0x63c1]        # 0x14000c3b8
   140005ff7:	xor    al,al
   140005ff9:	add    rsp,0x138
   140006000:	pop    r15
   140006002:	pop    r14
   140006004:	pop    r13
   140006006:	pop    r12
   140006008:	pop    rdi
   140006009:	pop    rsi
   14000600a:	pop    rbp
   14000600b:	pop    rbx
   14000600c:	ret    
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	movzx  eax,WORD PTR [rcx]
   140006013:	cmp    ax,0x66
   140006017:	jne    0x140006035
   140006019:	cmp    WORD PTR [rcx+0x2],0x6f
   14000601e:	jne    0x1400060e2
   140006024:	cmp    WORD PTR [rcx+0x4],0x72
   140006029:	jne    0x1400060e2
   14000602f:	mov    eax,0x15
   140006034:	ret    
   140006035:	cmp    ax,0x67
   140006039:	jne    0x140006057
   14000603b:	cmp    WORD PTR [rcx+0x2],0x65
   140006040:	jne    0x1400060e2
   140006046:	cmp    WORD PTR [rcx+0x4],0x74
   14000604b:	jne    0x1400060e2
   140006051:	mov    eax,0x5f
   140006056:	ret    
   140006057:	cmp    ax,0x69
   14000605b:	jne    0x14000607b
   14000605d:	cmp    WORD PTR [rcx+0x2],0x6e
   140006062:	jne    0x1400060e2
   140006064:	cmp    WORD PTR [rcx+0x4],0x74
   140006069:	jne    0x1400060e2
   14000606b:	mov    eax,0x1d
   140006070:	mov    ecx,0x56
   140006075:	test   dl,dl
   140006077:	cmovne eax,ecx
   14000607a:	ret    
   14000607b:	cmp    ax,0x6e
   14000607f:	jne    0x140006095
   140006081:	cmp    WORD PTR [rcx+0x2],0x65
   140006086:	jne    0x1400060e2
   140006088:	cmp    WORD PTR [rcx+0x4],0x77
   14000608d:	jne    0x1400060e2
   14000608f:	mov    eax,0x2b
   140006094:	ret    
   140006095:	cmp    ax,0x73
   140006099:	jne    0x1400060af
   14000609b:	cmp    WORD PTR [rcx+0x2],0x65
   1400060a0:	jne    0x1400060e2
   1400060a2:	cmp    WORD PTR [rcx+0x4],0x74
   1400060a7:	jne    0x1400060e2
   1400060a9:	mov    eax,0x60
   1400060ae:	ret    
   1400060af:	cmp    ax,0x74
   1400060b3:	jne    0x1400060c9
   1400060b5:	cmp    WORD PTR [rcx+0x2],0x72
   1400060ba:	jne    0x1400060e2
   1400060bc:	cmp    WORD PTR [rcx+0x4],0x79
   1400060c1:	jne    0x1400060e2
   1400060c3:	mov    eax,0x49
   1400060c8:	ret    
   1400060c9:	cmp    ax,0x76
   1400060cd:	jne    0x1400060e2
   1400060cf:	cmp    WORD PTR [rcx+0x2],0x61
   1400060d4:	jne    0x1400060e2
   1400060d6:	cmp    WORD PTR [rcx+0x4],0x72
   1400060db:	mov    eax,0x4b
   1400060e0:	je     0x1400060e7
   1400060e2:	mov    eax,0x1d
   1400060e7:	repz ret 
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	movzx  eax,WORD PTR [rcx]
   1400060f3:	cmp    ax,0x62
   1400060f7:	jne    0x14000612a
   1400060f9:	cmp    WORD PTR [rcx+0x2],0x79
   1400060fe:	jne    0x1400062bc
   140006104:	cmp    WORD PTR [rcx+0x4],0x74
   140006109:	jne    0x1400062bc
   14000610f:	cmp    WORD PTR [rcx+0x6],0x65
   140006114:	jne    0x1400062bc
   14000611a:	mov    eax,0x1d
   14000611f:	mov    ecx,0x56
   140006124:	test   dl,dl
   140006126:	cmovne eax,ecx
   140006129:	ret    
   14000612a:	cmp    ax,0x63
   14000612e:	jne    0x140006172
   140006130:	movzx  eax,WORD PTR [rcx+0x2]
   140006134:	cmp    ax,0x61
   140006138:	jne    0x140006156
   14000613a:	cmp    WORD PTR [rcx+0x4],0x73
   14000613f:	jne    0x1400062bc
   140006145:	cmp    WORD PTR [rcx+0x6],0x65
   14000614a:	jne    0x1400062bc
   140006150:	mov    eax,0x5
   140006155:	ret    
   140006156:	cmp    ax,0x68
   14000615a:	jne    0x1400062bc
   140006160:	cmp    WORD PTR [rcx+0x4],0x61
   140006165:	jne    0x1400062bc
   14000616b:	cmp    WORD PTR [rcx+0x6],0x72
   140006170:	jmp    0x140006114
   140006172:	cmp    ax,0x65
   140006176:	jne    0x1400061c4
   140006178:	movzx  eax,WORD PTR [rcx+0x2]
   14000617c:	cmp    ax,0x6c
   140006180:	jne    0x14000619e
   140006182:	cmp    WORD PTR [rcx+0x4],0x73
   140006187:	jne    0x1400062bc
   14000618d:	cmp    WORD PTR [rcx+0x6],0x65
   140006192:	jne    0x1400062bc
   140006198:	mov    eax,0x10
   14000619d:	ret    
   14000619e:	cmp    ax,0x6e
   1400061a2:	jne    0x1400062bc
   1400061a8:	cmp    WORD PTR [rcx+0x4],0x75
   1400061ad:	jne    0x1400062bc
   1400061b3:	cmp    WORD PTR [rcx+0x6],0x6d
   1400061b8:	jne    0x1400062bc
   1400061be:	mov    eax,0x56
   1400061c3:	ret    
   1400061c4:	cmp    ax,0x67
   1400061c8:	jne    0x1400061ea
   1400061ca:	cmp    WORD PTR [rcx+0x2],0x6f
   1400061cf:	jne    0x1400062bc
   1400061d5:	cmp    WORD PTR [rcx+0x4],0x74
   1400061da:	jne    0x1400062bc
   1400061e0:	cmp    WORD PTR [rcx+0x6],0x6f
   1400061e5:	jmp    0x140006114
   1400061ea:	cmp    ax,0x6c
   1400061ee:	jne    0x140006210
   1400061f0:	cmp    WORD PTR [rcx+0x2],0x6f
   1400061f5:	jne    0x1400062bc
   1400061fb:	cmp    WORD PTR [rcx+0x4],0x6e
   140006200:	jne    0x1400062bc
   140006206:	cmp    WORD PTR [rcx+0x6],0x67
   14000620b:	jmp    0x140006114
   140006210:	cmp    ax,0x6e
   140006214:	jne    0x14000623d
   140006216:	cmp    WORD PTR [rcx+0x2],0x75
   14000621b:	jne    0x1400062bc
   140006221:	cmp    WORD PTR [rcx+0x4],0x6c
   140006226:	jne    0x1400062bc
   14000622c:	cmp    WORD PTR [rcx+0x6],0x6c
   140006231:	jne    0x1400062bc
   140006237:	mov    eax,0x51
   14000623c:	ret    
   14000623d:	cmp    ax,0x74
   140006241:	jne    0x14000627b
   140006243:	movzx  eax,WORD PTR [rcx+0x2]
   140006247:	cmp    ax,0x68
   14000624b:	jne    0x140006261
   14000624d:	cmp    WORD PTR [rcx+0x4],0x69
   140006252:	jne    0x1400062bc
   140006254:	cmp    WORD PTR [rcx+0x6],0x73
   140006259:	jne    0x1400062bc
   14000625b:	mov    eax,0x46
   140006260:	ret    
   140006261:	cmp    ax,0x72
   140006265:	jne    0x1400062bc
   140006267:	cmp    WORD PTR [rcx+0x4],0x75
   14000626c:	jne    0x1400062bc
   14000626e:	cmp    WORD PTR [rcx+0x6],0x65
   140006273:	jne    0x1400062bc
   140006275:	mov    eax,0x52
   14000627a:	ret    
   14000627b:	cmp    ax,0x76
   14000627f:	jne    0x14000629c
   140006281:	cmp    WORD PTR [rcx+0x2],0x6f
   140006286:	jne    0x1400062bc
   140006288:	cmp    WORD PTR [rcx+0x4],0x69
   14000628d:	jne    0x1400062bc
   14000628f:	cmp    WORD PTR [rcx+0x6],0x64
   140006294:	jne    0x1400062bc
   140006296:	mov    eax,0x4c
   14000629b:	ret    
   14000629c:	cmp    ax,0x77
   1400062a0:	jne    0x1400062bc
   1400062a2:	cmp    WORD PTR [rcx+0x2],0x69
   1400062a7:	jne    0x1400062bc
   1400062a9:	cmp    WORD PTR [rcx+0x4],0x74
   1400062ae:	jne    0x1400062bc
   1400062b0:	cmp    WORD PTR [rcx+0x6],0x68
   1400062b5:	mov    eax,0x4e
   1400062ba:	je     0x1400062c1
   1400062bc:	mov    eax,0x1d
   1400062c1:	repz ret 
   1400062c3:	int3   
   1400062c4:	int3   
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	movzx  eax,WORD PTR [rcx]
   1400062d3:	cmp    ax,0x62
   1400062d7:	jne    0x14000630b
   1400062d9:	cmp    WORD PTR [rcx+0x2],0x72
   1400062de:	jne    0x1400064de
   1400062e4:	cmp    WORD PTR [rcx+0x4],0x65
   1400062e9:	jne    0x1400064de
   1400062ef:	cmp    WORD PTR [rcx+0x6],0x61
   1400062f4:	jne    0x1400064de
   1400062fa:	cmp    WORD PTR [rcx+0x8],0x6b
   1400062ff:	jne    0x1400064de
   140006305:	mov    eax,0x4
   14000630a:	ret    
   14000630b:	cmp    ax,0x63
   14000630f:	jne    0x1400063ae
   140006315:	movzx  eax,WORD PTR [rcx+0x2]
   140006319:	cmp    ax,0x61
   14000631d:	jne    0x140006346
   14000631f:	cmp    WORD PTR [rcx+0x4],0x74
   140006324:	jne    0x1400064de
   14000632a:	cmp    WORD PTR [rcx+0x6],0x63
   14000632f:	jne    0x1400064de
   140006335:	cmp    WORD PTR [rcx+0x8],0x68
   14000633a:	jne    0x1400064de
   140006340:	mov    eax,0x6
   140006345:	ret    
   140006346:	cmp    ax,0x6c
   14000634a:	jne    0x140006373
   14000634c:	cmp    WORD PTR [rcx+0x4],0x61
   140006351:	jne    0x1400064de
   140006357:	cmp    WORD PTR [rcx+0x6],0x73
   14000635c:	jne    0x1400064de
   140006362:	cmp    WORD PTR [rcx+0x8],0x73
   140006367:	jne    0x1400064de
   14000636d:	mov    eax,0x56
   140006372:	ret    
   140006373:	cmp    ax,0x6f
   140006377:	jne    0x1400064de
   14000637d:	cmp    WORD PTR [rcx+0x4],0x6e
   140006382:	jne    0x1400064de
   140006388:	cmp    WORD PTR [rcx+0x6],0x73
   14000638d:	jne    0x1400064de
   140006393:	cmp    WORD PTR [rcx+0x8],0x74
   140006398:	jne    0x1400064de
   14000639e:	mov    eax,0x56
   1400063a3:	mov    ecx,0x54
   1400063a8:	test   dl,dl
   1400063aa:	cmovne eax,ecx
   1400063ad:	ret    
   1400063ae:	cmp    ax,0x66
   1400063b2:	jne    0x140006449
   1400063b8:	movzx  eax,WORD PTR [rcx+0x2]
   1400063bc:	cmp    ax,0x61
   1400063c0:	jne    0x1400063e9
   1400063c2:	cmp    WORD PTR [rcx+0x4],0x6c
   1400063c7:	jne    0x1400064de
   1400063cd:	cmp    WORD PTR [rcx+0x6],0x73
   1400063d2:	jne    0x1400064de
   1400063d8:	cmp    WORD PTR [rcx+0x8],0x65
   1400063dd:	jne    0x1400064de
   1400063e3:	mov    eax,0x53
   1400063e8:	ret    
   1400063e9:	cmp    ax,0x69
   1400063ed:	jne    0x140006422
   1400063ef:	cmp    WORD PTR [rcx+0x4],0x6e
   1400063f4:	jne    0x1400064de
   1400063fa:	cmp    WORD PTR [rcx+0x6],0x61
   1400063ff:	jne    0x1400064de
   140006405:	cmp    WORD PTR [rcx+0x8],0x6c
   14000640a:	jne    0x1400064de
   140006410:	mov    eax,0x56
   140006415:	mov    ecx,0x1d
   14000641a:	test   dl,dl
   14000641c:	cmovne ecx,eax
   14000641f:	mov    eax,ecx
   140006421:	ret    
   140006422:	cmp    ax,0x6c
   140006426:	jne    0x1400064de
   14000642c:	cmp    WORD PTR [rcx+0x4],0x6f
   140006431:	jne    0x1400064de
   140006437:	cmp    WORD PTR [rcx+0x6],0x61
   14000643c:	jne    0x1400064de
   140006442:	cmp    WORD PTR [rcx+0x8],0x74
   140006447:	jmp    0x14000640a
   140006449:	cmp    ax,0x73
   14000644d:	jne    0x14000648f
   14000644f:	movzx  eax,WORD PTR [rcx+0x2]
   140006453:	cmp    ax,0x68
   140006457:	jne    0x14000646e
   140006459:	cmp    WORD PTR [rcx+0x4],0x6f
   14000645e:	jne    0x1400064de
   140006460:	cmp    WORD PTR [rcx+0x6],0x72
   140006465:	jne    0x1400064de
   140006467:	cmp    WORD PTR [rcx+0x8],0x74
   14000646c:	jmp    0x14000640a
   14000646e:	cmp    ax,0x75
   140006472:	jne    0x1400064de
   140006474:	cmp    WORD PTR [rcx+0x4],0x70
   140006479:	jne    0x1400064de
   14000647b:	cmp    WORD PTR [rcx+0x6],0x65
   140006480:	jne    0x1400064de
   140006482:	cmp    WORD PTR [rcx+0x8],0x72
   140006487:	jne    0x1400064de
   140006489:	mov    eax,0x56
   14000648e:	ret    
   14000648f:	cmp    ax,0x74
   140006493:	jne    0x1400064b7
   140006495:	cmp    WORD PTR [rcx+0x2],0x68
   14000649a:	jne    0x1400064de
   14000649c:	cmp    WORD PTR [rcx+0x4],0x72
   1400064a1:	jne    0x1400064de
   1400064a3:	cmp    WORD PTR [rcx+0x6],0x6f
   1400064a8:	jne    0x1400064de
   1400064aa:	cmp    WORD PTR [rcx+0x8],0x77
   1400064af:	jne    0x1400064de
   1400064b1:	mov    eax,0x47
   1400064b6:	ret    
   1400064b7:	cmp    ax,0x77
   1400064bb:	jne    0x1400064de
   1400064bd:	cmp    WORD PTR [rcx+0x2],0x68
   1400064c2:	jne    0x1400064de
   1400064c4:	cmp    WORD PTR [rcx+0x4],0x69
   1400064c9:	jne    0x1400064de
   1400064cb:	cmp    WORD PTR [rcx+0x6],0x6c
   1400064d0:	jne    0x1400064de
   1400064d2:	cmp    WORD PTR [rcx+0x8],0x65
   1400064d7:	mov    eax,0x4d
   1400064dc:	je     0x1400064e3
   1400064de:	mov    eax,0x1d
   1400064e3:	repz ret 
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	movzx  eax,WORD PTR [rcx]
   1400064f3:	cmp    ax,0x64
   1400064f7:	jne    0x14000657d
   1400064fd:	movzx  eax,WORD PTR [rcx+0x2]
   140006501:	cmp    ax,0x65
   140006505:	jne    0x140006537
   140006507:	cmp    WORD PTR [rcx+0x4],0x6c
   14000650c:	jne    0x140006811
   140006512:	cmp    WORD PTR [rcx+0x6],ax
   140006516:	jne    0x140006811
   14000651c:	cmp    WORD PTR [rcx+0x8],0x74
   140006521:	jne    0x140006811
   140006527:	cmp    WORD PTR [rcx+0xa],ax
   14000652b:	jne    0x140006811
   140006531:	mov    eax,0xb
   140006536:	ret    
   140006537:	cmp    ax,0x6f
   14000653b:	jne    0x140006811
   140006541:	cmp    WORD PTR [rcx+0x4],0x75
   140006546:	jne    0x140006811
   14000654c:	cmp    WORD PTR [rcx+0x6],0x62
   140006551:	jne    0x140006811
   140006557:	cmp    WORD PTR [rcx+0x8],0x6c
   14000655c:	jne    0x140006811
   140006562:	cmp    WORD PTR [rcx+0xa],0x65
   140006567:	jne    0x140006811
   14000656d:	mov    ecx,0x56
   140006572:	mov    eax,0x1d
   140006577:	test   dl,dl
   140006579:	cmovne eax,ecx
   14000657c:	ret    
   14000657d:	cmp    ax,0x65
   140006581:	jne    0x1400065c0
   140006583:	cmp    WORD PTR [rcx+0x2],0x78
   140006588:	jne    0x140006811
   14000658e:	cmp    WORD PTR [rcx+0x4],0x70
   140006593:	jne    0x140006811
   140006599:	cmp    WORD PTR [rcx+0x6],0x6f
   14000659e:	jne    0x140006811
   1400065a4:	cmp    WORD PTR [rcx+0x8],0x72
   1400065a9:	jne    0x140006811
   1400065af:	cmp    WORD PTR [rcx+0xa],0x74
   1400065b4:	jne    0x140006811
   1400065ba:	mov    eax,0x56
   1400065bf:	ret    
   1400065c0:	cmp    ax,0x69
   1400065c4:	jne    0x14000660f
   1400065c6:	cmp    WORD PTR [rcx+0x2],0x6d
   1400065cb:	jne    0x140006811
   1400065d1:	cmp    WORD PTR [rcx+0x4],0x70
   1400065d6:	jne    0x140006811
   1400065dc:	cmp    WORD PTR [rcx+0x6],0x6f
   1400065e1:	jne    0x140006811
   1400065e7:	cmp    WORD PTR [rcx+0x8],0x72
   1400065ec:	jne    0x140006811
   1400065f2:	cmp    WORD PTR [rcx+0xa],0x74
   1400065f7:	jne    0x140006811
   1400065fd:	mov    eax,0x5b
   140006602:	mov    ecx,0x56
   140006607:	test   dl,dl
   140006609:	cmovne ecx,eax
   14000660c:	mov    eax,ecx
   14000660e:	ret    
   14000660f:	cmp    ax,0x6e
   140006613:	jne    0x140006640
   140006615:	cmp    WORD PTR [rcx+0x2],0x61
   14000661a:	jne    0x140006811
   140006620:	cmp    WORD PTR [rcx+0x4],0x74
   140006625:	jne    0x140006811
   14000662b:	cmp    WORD PTR [rcx+0x6],0x69
   140006630:	jne    0x140006811
   140006636:	cmp    WORD PTR [rcx+0x8],0x76
   14000663b:	jmp    0x14000655c
   140006640:	cmp    ax,0x70
   140006644:	jne    0x1400066d6
   14000664a:	movzx  eax,WORD PTR [rcx+0x2]
   14000664e:	cmp    ax,0x75
   140006652:	jne    0x140006690
   140006654:	cmp    WORD PTR [rcx+0x4],0x62
   140006659:	jne    0x140006811
   14000665f:	cmp    WORD PTR [rcx+0x6],0x6c
   140006664:	jne    0x140006811
   14000666a:	cmp    WORD PTR [rcx+0x8],0x69
   14000666f:	jne    0x140006811
   140006675:	cmp    WORD PTR [rcx+0xa],0x63
   14000667a:	jne    0x140006811
   140006680:	mov    ecx,0x5a
   140006685:	mov    eax,0x1d
   14000668a:	test   dl,dl
   14000668c:	cmovne eax,ecx
   14000668f:	ret    
   140006690:	cmp    ax,0x72
   140006694:	jne    0x140006811
   14000669a:	cmp    WORD PTR [rcx+0x4],0x61
   14000669f:	jne    0x140006811
   1400066a5:	cmp    WORD PTR [rcx+0x6],0x67
   1400066aa:	jne    0x140006811
   1400066b0:	cmp    WORD PTR [rcx+0x8],0x6d
   1400066b5:	jne    0x140006811
   1400066bb:	cmp    WORD PTR [rcx+0xa],0x61
   1400066c0:	jne    0x140006811
   1400066c6:	mov    ecx,0x5c
   1400066cb:	mov    eax,0x1d
   1400066d0:	test   dl,dl
   1400066d2:	cmovne eax,ecx
   1400066d5:	ret    
   1400066d6:	cmp    ax,0x72
   1400066da:	jne    0x140006718
   1400066dc:	cmp    WORD PTR [rcx+0x2],0x65
   1400066e1:	jne    0x140006811
   1400066e7:	cmp    WORD PTR [rcx+0x4],0x74
   1400066ec:	jne    0x140006811
   1400066f2:	cmp    WORD PTR [rcx+0x6],0x75
   1400066f7:	jne    0x140006811
   1400066fd:	cmp    WORD PTR [rcx+0x8],ax
   140006701:	jne    0x140006811
   140006707:	cmp    WORD PTR [rcx+0xa],0x6e
   14000670c:	jne    0x140006811
   140006712:	mov    eax,0x3b
   140006717:	ret    
   140006718:	cmp    ax,0x73
   14000671c:	jne    0x1400067bb
   140006722:	test   dl,dl
   140006724:	je     0x14000675f
   140006726:	cmp    WORD PTR [rcx+0x2],0x69
   14000672b:	jne    0x14000675f
   14000672d:	cmp    WORD PTR [rcx+0x4],0x67
   140006732:	jne    0x140006811
   140006738:	cmp    WORD PTR [rcx+0x6],0x6e
   14000673d:	jne    0x140006811
   140006743:	cmp    WORD PTR [rcx+0x8],0x61
   140006748:	jne    0x140006811
   14000674e:	cmp    WORD PTR [rcx+0xa],0x6c
   140006753:	jne    0x140006811
   140006759:	mov    eax,0x43
   14000675e:	ret    
   14000675f:	movzx  eax,WORD PTR [rcx+0x2]
   140006763:	cmp    ax,0x74
   140006767:	jne    0x140006793
   140006769:	cmp    WORD PTR [rcx+0x4],0x61
   14000676e:	jne    0x140006811
   140006774:	cmp    WORD PTR [rcx+0x6],ax
   140006778:	jne    0x140006811
   14000677e:	cmp    WORD PTR [rcx+0x8],0x69
   140006783:	jne    0x140006811
   140006789:	cmp    WORD PTR [rcx+0xa],0x63
   14000678e:	jmp    0x140006567
   140006793:	cmp    ax,0x77
   140006797:	jne    0x140006811
   140006799:	cmp    WORD PTR [rcx+0x4],0x69
   14000679e:	jne    0x140006811
   1400067a0:	cmp    WORD PTR [rcx+0x6],0x74
   1400067a5:	jne    0x140006811
   1400067a7:	cmp    WORD PTR [rcx+0x8],0x63
   1400067ac:	jne    0x140006811
   1400067ae:	cmp    WORD PTR [rcx+0xa],0x68
   1400067b3:	jne    0x140006811
   1400067b5:	mov    eax,0x45
   1400067ba:	ret    
   1400067bb:	cmp    ax,0x74
   1400067bf:	jne    0x140006811
   1400067c1:	movzx  eax,WORD PTR [rcx+0x2]
   1400067c5:	cmp    ax,0x68
   1400067c9:	jne    0x1400067ea
   1400067cb:	cmp    WORD PTR [rcx+0x4],0x72
   1400067d0:	jne    0x140006811
   1400067d2:	cmp    WORD PTR [rcx+0x6],0x6f
   1400067d7:	jne    0x140006811
   1400067d9:	cmp    WORD PTR [rcx+0x8],0x77
   1400067de:	jne    0x140006811
   1400067e0:	cmp    WORD PTR [rcx+0xa],0x73
   1400067e5:	jmp    0x140006567
   1400067ea:	cmp    ax,0x79
   1400067ee:	jne    0x140006811
   1400067f0:	cmp    WORD PTR [rcx+0x4],0x70
   1400067f5:	jne    0x140006811
   1400067f7:	cmp    WORD PTR [rcx+0x6],0x65
   1400067fc:	jne    0x140006811
   1400067fe:	cmp    WORD PTR [rcx+0x8],0x6f
   140006803:	jne    0x140006811
   140006805:	cmp    WORD PTR [rcx+0xa],0x66
   14000680a:	mov    eax,0x4a
   14000680f:	je     0x140006816
   140006811:	mov    eax,0x1d
   140006816:	repz ret 
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	movzx  eax,WORD PTR [rcx]
   140006823:	cmp    ax,0x62
   140006827:	jne    0x14000687b
   140006829:	cmp    WORD PTR [rcx+0x2],0x6f
   14000682e:	jne    0x1400069b5
   140006834:	cmp    WORD PTR [rcx+0x4],0x6f
   140006839:	jne    0x1400069b5
   14000683f:	cmp    WORD PTR [rcx+0x6],0x6c
   140006844:	jne    0x1400069b5
   14000684a:	cmp    WORD PTR [rcx+0x8],0x65
   14000684f:	jne    0x1400069b5
   140006855:	cmp    WORD PTR [rcx+0xa],0x61
   14000685a:	jne    0x1400069b5
   140006860:	cmp    WORD PTR [rcx+0xc],0x6e
   140006865:	jne    0x1400069b5
   14000686b:	mov    eax,0x1d
   140006870:	mov    ecx,0x56
   140006875:	test   dl,dl
   140006877:	cmovne eax,ecx
   14000687a:	ret    
   14000687b:	cmp    ax,0x64
   14000687f:	jne    0x1400068c9
   140006881:	cmp    WORD PTR [rcx+0x2],0x65
   140006886:	jne    0x1400069b5
   14000688c:	cmp    WORD PTR [rcx+0x4],0x66
   140006891:	jne    0x1400069b5
   140006897:	cmp    WORD PTR [rcx+0x6],0x61
   14000689c:	jne    0x1400069b5
   1400068a2:	cmp    WORD PTR [rcx+0x8],0x75
   1400068a7:	jne    0x1400069b5
   1400068ad:	cmp    WORD PTR [rcx+0xa],0x6c
   1400068b2:	jne    0x1400069b5
   1400068b8:	cmp    WORD PTR [rcx+0xc],0x74
   1400068bd:	jne    0x1400069b5
   1400068c3:	mov    eax,0xa
   1400068c8:	ret    
   1400068c9:	cmp    ax,0x65
   1400068cd:	jne    0x140006916
   1400068cf:	cmp    WORD PTR [rcx+0x2],0x78
   1400068d4:	jne    0x1400069b5
   1400068da:	cmp    WORD PTR [rcx+0x4],0x74
   1400068df:	jne    0x1400069b5
   1400068e5:	cmp    WORD PTR [rcx+0x6],ax
   1400068e9:	jne    0x1400069b5
   1400068ef:	cmp    WORD PTR [rcx+0x8],0x6e
   1400068f4:	jne    0x1400069b5
   1400068fa:	cmp    WORD PTR [rcx+0xa],0x64
   1400068ff:	jne    0x1400069b5
   140006905:	cmp    WORD PTR [rcx+0xc],0x73
   14000690a:	jne    0x1400069b5
   140006910:	mov    eax,0x56
   140006915:	ret    
   140006916:	cmp    ax,0x66
   14000691a:	jne    0x140006954
   14000691c:	cmp    WORD PTR [rcx+0x2],0x69
   140006921:	jne    0x1400069b5
   140006927:	cmp    WORD PTR [rcx+0x4],0x6e
   14000692c:	jne    0x1400069b5
   140006932:	cmp    WORD PTR [rcx+0x6],0x61
   140006937:	jne    0x1400069b5
   140006939:	cmp    WORD PTR [rcx+0x8],0x6c
   14000693e:	jne    0x1400069b5
   140006940:	cmp    WORD PTR [rcx+0xa],0x6c
   140006945:	jne    0x1400069b5
   140006947:	cmp    WORD PTR [rcx+0xc],0x79
   14000694c:	jne    0x1400069b5
   14000694e:	mov    eax,0x14
   140006953:	ret    
   140006954:	cmp    ax,0x70
   140006958:	jne    0x1400069b5
   14000695a:	movzx  eax,WORD PTR [rcx+0x2]
   14000695e:	cmp    ax,0x61
   140006962:	jne    0x140006989
   140006964:	cmp    WORD PTR [rcx+0x4],0x63
   140006969:	jne    0x1400069b5
   14000696b:	cmp    WORD PTR [rcx+0x6],0x6b
   140006970:	jne    0x1400069b5
   140006972:	cmp    WORD PTR [rcx+0x8],ax
   140006976:	jne    0x1400069b5
   140006978:	cmp    WORD PTR [rcx+0xa],0x67
   14000697d:	jne    0x1400069b5
   14000697f:	cmp    WORD PTR [rcx+0xc],0x65
   140006984:	jmp    0x140006865
   140006989:	cmp    ax,0x72
   14000698d:	jne    0x1400069b5
   14000698f:	cmp    WORD PTR [rcx+0x4],0x69
   140006994:	jne    0x1400069b5
   140006996:	cmp    WORD PTR [rcx+0x6],0x76
   14000699b:	jne    0x1400069b5
   14000699d:	cmp    WORD PTR [rcx+0x8],0x61
   1400069a2:	jne    0x1400069b5
   1400069a4:	cmp    WORD PTR [rcx+0xa],0x74
   1400069a9:	jne    0x1400069b5
   1400069ab:	cmp    WORD PTR [rcx+0xc],0x65
   1400069b0:	jmp    0x140006865
   1400069b5:	mov    eax,0x1d
   1400069ba:	ret    
   1400069bb:	int3   
   1400069bc:	int3   
   1400069bd:	int3   
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	movzx  eax,WORD PTR [rcx]
   1400069c3:	cmp    ax,0x61
   1400069c7:	jne    0x140006a25
   1400069c9:	cmp    WORD PTR [rcx+0x2],0x62
   1400069ce:	jne    0x140006c03
   1400069d4:	cmp    WORD PTR [rcx+0x4],0x73
   1400069d9:	jne    0x140006c03
   1400069df:	cmp    WORD PTR [rcx+0x6],0x74
   1400069e4:	jne    0x140006c03
   1400069ea:	cmp    WORD PTR [rcx+0x8],0x72
   1400069ef:	jne    0x140006c03
   1400069f5:	cmp    WORD PTR [rcx+0xa],ax
   1400069f9:	jne    0x140006c03
   1400069ff:	cmp    WORD PTR [rcx+0xc],0x63
   140006a04:	jne    0x140006c03
   140006a0a:	cmp    WORD PTR [rcx+0xe],0x74
   140006a0f:	jne    0x140006c03
   140006a15:	mov    eax,0x1d
   140006a1a:	mov    ecx,0x56
   140006a1f:	test   dl,dl
   140006a21:	cmovne eax,ecx
   140006a24:	ret    
   140006a25:	cmp    ax,0x63
   140006a29:	jne    0x140006a7e
   140006a2b:	cmp    WORD PTR [rcx+0x2],0x6f
   140006a30:	jne    0x140006c03
   140006a36:	cmp    WORD PTR [rcx+0x4],0x6e
   140006a3b:	jne    0x140006c03
   140006a41:	cmp    WORD PTR [rcx+0x6],0x74
   140006a46:	jne    0x140006c03
   140006a4c:	cmp    WORD PTR [rcx+0x8],0x69
   140006a51:	jne    0x140006c03
   140006a57:	cmp    WORD PTR [rcx+0xa],0x6e
   140006a5c:	jne    0x140006c03
   140006a62:	cmp    WORD PTR [rcx+0xc],0x75
   140006a67:	jne    0x140006c03
   140006a6d:	cmp    WORD PTR [rcx+0xe],0x65
   140006a72:	jne    0x140006c03
   140006a78:	mov    eax,0x9
   140006a7d:	ret    
   140006a7e:	cmp    ax,0x64
   140006a82:	jne    0x140006ad7
   140006a84:	cmp    WORD PTR [rcx+0x2],0x65
   140006a89:	jne    0x140006c03
   140006a8f:	cmp    WORD PTR [rcx+0x4],0x62
   140006a94:	jne    0x140006c03
   140006a9a:	cmp    WORD PTR [rcx+0x6],0x75
   140006a9f:	jne    0x140006c03
   140006aa5:	cmp    WORD PTR [rcx+0x8],0x67
   140006aaa:	jne    0x140006c03
   140006ab0:	cmp    WORD PTR [rcx+0xa],0x67
   140006ab5:	jne    0x140006c03
   140006abb:	cmp    WORD PTR [rcx+0xc],0x65
   140006ac0:	jne    0x140006c03
   140006ac6:	cmp    WORD PTR [rcx+0xe],0x72
   140006acb:	jne    0x140006c03
   140006ad1:	mov    eax,0x55
   140006ad6:	ret    
   140006ad7:	cmp    ax,0x66
   140006adb:	jne    0x140006b30
   140006add:	cmp    WORD PTR [rcx+0x2],0x75
   140006ae2:	jne    0x140006c03
   140006ae8:	cmp    WORD PTR [rcx+0x4],0x6e
   140006aed:	jne    0x140006c03
   140006af3:	cmp    WORD PTR [rcx+0x6],0x63
   140006af8:	jne    0x140006c03
   140006afe:	cmp    WORD PTR [rcx+0x8],0x74
   140006b03:	jne    0x140006c03
   140006b09:	cmp    WORD PTR [rcx+0xa],0x69
   140006b0e:	jne    0x140006c03
   140006b14:	cmp    WORD PTR [rcx+0xc],0x6f
   140006b19:	jne    0x140006c03
   140006b1f:	cmp    WORD PTR [rcx+0xe],0x6e
   140006b24:	jne    0x140006c03
   140006b2a:	mov    eax,0x16
   140006b2f:	ret    
   140006b30:	test   dl,dl
   140006b32:	je     0x140006bc9
   140006b38:	cmp    ax,0x70
   140006b3c:	jne    0x140006b8c
   140006b3e:	cmp    WORD PTR [rcx+0x2],0x72
   140006b43:	jne    0x140006c03
   140006b49:	cmp    WORD PTR [rcx+0x4],0x6f
   140006b4e:	jne    0x140006c03
   140006b54:	cmp    WORD PTR [rcx+0x6],ax
   140006b58:	jne    0x140006c03
   140006b5e:	cmp    WORD PTR [rcx+0x8],0x65
   140006b63:	jne    0x140006c03
   140006b69:	cmp    WORD PTR [rcx+0xa],0x72
   140006b6e:	jne    0x140006c03
   140006b74:	cmp    WORD PTR [rcx+0xc],0x74
   140006b79:	jne    0x140006c03
   140006b7f:	cmp    WORD PTR [rcx+0xe],0x79
   140006b84:	jne    0x140006c03
   140006b86:	mov    eax,0x42
   140006b8b:	ret    
   140006b8c:	cmp    ax,0x72
   140006b90:	jne    0x140006bc9
   140006b92:	cmp    WORD PTR [rcx+0x2],0x65
   140006b97:	jne    0x140006c03
   140006b99:	cmp    WORD PTR [rcx+0x4],0x61
   140006b9e:	jne    0x140006c03
   140006ba0:	cmp    WORD PTR [rcx+0x6],0x64
   140006ba5:	jne    0x140006c03
   140006ba7:	cmp    WORD PTR [rcx+0x8],0x6f
   140006bac:	jne    0x140006c03
   140006bae:	cmp    WORD PTR [rcx+0xa],0x6e
   140006bb3:	jne    0x140006c03
   140006bb5:	cmp    WORD PTR [rcx+0xc],0x6c
   140006bba:	jne    0x140006c03
   140006bbc:	cmp    WORD PTR [rcx+0xe],0x79
   140006bc1:	jne    0x140006c03
   140006bc3:	mov    eax,0x44
   140006bc8:	ret    
   140006bc9:	cmp    ax,0x76
   140006bcd:	jne    0x140006c03
   140006bcf:	cmp    WORD PTR [rcx+0x2],0x6f
   140006bd4:	jne    0x140006c03
   140006bd6:	cmp    WORD PTR [rcx+0x4],0x6c
   140006bdb:	jne    0x140006c03
   140006bdd:	cmp    WORD PTR [rcx+0x6],0x61
   140006be2:	jne    0x140006c03
   140006be4:	cmp    WORD PTR [rcx+0x8],0x74
   140006be9:	jne    0x140006c03
   140006beb:	cmp    WORD PTR [rcx+0xa],0x69
   140006bf0:	jne    0x140006c03
   140006bf2:	cmp    WORD PTR [rcx+0xc],0x6c
   140006bf7:	jne    0x140006c03
   140006bf9:	cmp    WORD PTR [rcx+0xe],0x65
   140006bfe:	jmp    0x140006a0f
   140006c03:	mov    eax,0x1d
   140006c08:	ret    
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	movzx  eax,WORD PTR [rcx]
   140006c13:	cmp    ax,0x69
   140006c17:	jne    0x140006c81
   140006c19:	cmp    WORD PTR [rcx+0x2],0x6e
   140006c1e:	jne    0x140006cff
   140006c24:	cmp    WORD PTR [rcx+0x4],0x74
   140006c29:	jne    0x140006cff
   140006c2f:	cmp    WORD PTR [rcx+0x6],0x65
   140006c34:	jne    0x140006cff
   140006c3a:	cmp    WORD PTR [rcx+0x8],0x72
   140006c3f:	jne    0x140006cff
   140006c45:	cmp    WORD PTR [rcx+0xa],0x66
   140006c4a:	jne    0x140006cff
   140006c50:	cmp    WORD PTR [rcx+0xc],0x61
   140006c55:	jne    0x140006cff
   140006c5b:	cmp    WORD PTR [rcx+0xe],0x63
   140006c60:	jne    0x140006cff
   140006c66:	cmp    WORD PTR [rcx+0x10],0x65
   140006c6b:	jne    0x140006cff
   140006c71:	mov    eax,0x1d
   140006c76:	mov    ecx,0x56
   140006c7b:	test   dl,dl
   140006c7d:	cmovne eax,ecx
   140006c80:	ret    
   140006c81:	cmp    ax,0x70
   140006c85:	jne    0x140006cbf
   140006c87:	cmp    WORD PTR [rcx+0x2],0x72
   140006c8c:	jne    0x140006cff
   140006c8e:	cmp    WORD PTR [rcx+0x4],0x6f
   140006c93:	jne    0x140006cff
   140006c95:	cmp    WORD PTR [rcx+0x6],0x74
   140006c9a:	jne    0x140006cff
   140006c9c:	cmp    WORD PTR [rcx+0x8],0x65
   140006ca1:	jne    0x140006cff
   140006ca3:	cmp    WORD PTR [rcx+0xa],0x63
   140006ca8:	jne    0x140006cff
   140006caa:	cmp    WORD PTR [rcx+0xc],0x74
   140006caf:	jne    0x140006cff
   140006cb1:	cmp    WORD PTR [rcx+0xe],0x65
   140006cb6:	jne    0x140006cff
   140006cb8:	cmp    WORD PTR [rcx+0x10],0x64
   140006cbd:	jmp    0x140006c6b
   140006cbf:	cmp    ax,0x74
   140006cc3:	jne    0x140006cff
   140006cc5:	cmp    WORD PTR [rcx+0x2],0x72
   140006cca:	jne    0x140006cff
   140006ccc:	cmp    WORD PTR [rcx+0x4],0x61
   140006cd1:	jne    0x140006cff
   140006cd3:	cmp    WORD PTR [rcx+0x6],0x6e
   140006cd8:	jne    0x140006cff
   140006cda:	cmp    WORD PTR [rcx+0x8],0x73
   140006cdf:	jne    0x140006cff
   140006ce1:	cmp    WORD PTR [rcx+0xa],0x69
   140006ce6:	jne    0x140006cff
   140006ce8:	cmp    WORD PTR [rcx+0xc],0x65
   140006ced:	jne    0x140006cff
   140006cef:	cmp    WORD PTR [rcx+0xe],0x6e
   140006cf4:	jne    0x140006cff
   140006cf6:	cmp    WORD PTR [rcx+0x10],ax
   140006cfa:	jmp    0x140006c6b
   140006cff:	mov    eax,0x1d
   140006d04:	ret    
   140006d05:	int3   
   140006d06:	int3   
   140006d07:	int3   
   140006d08:	int3   
   140006d09:	int3   
   140006d0a:	int3   
   140006d0b:	int3   
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	cmp    WORD PTR [rcx],0x69
   140006d14:	jne    0x140006db1
   140006d1a:	movzx  eax,WORD PTR [rcx+0x2]
   140006d1e:	cmp    ax,0x6d
   140006d22:	jne    0x140006d6f
   140006d24:	cmp    WORD PTR [rcx+0x4],0x70
   140006d29:	jne    0x140006db1
   140006d2f:	cmp    WORD PTR [rcx+0x6],0x6c
   140006d34:	jne    0x140006db1
   140006d36:	cmp    WORD PTR [rcx+0x8],0x65
   140006d3b:	jne    0x140006db1
   140006d3d:	cmp    WORD PTR [rcx+0xa],ax
   140006d41:	jne    0x140006db1
   140006d43:	cmp    WORD PTR [rcx+0xc],0x65
   140006d48:	jne    0x140006db1
   140006d4a:	cmp    WORD PTR [rcx+0xe],0x6e
   140006d4f:	jne    0x140006db1
   140006d51:	cmp    WORD PTR [rcx+0x10],0x74
   140006d56:	jne    0x140006db1
   140006d58:	cmp    WORD PTR [rcx+0x12],0x73
   140006d5d:	jne    0x140006db1
   140006d5f:	mov    eax,0x1d
   140006d64:	mov    ecx,0x56
   140006d69:	test   dl,dl
   140006d6b:	cmovne eax,ecx
   140006d6e:	ret    
   140006d6f:	cmp    ax,0x6e
   140006d73:	jne    0x140006db1
   140006d75:	cmp    WORD PTR [rcx+0x4],0x73
   140006d7a:	jne    0x140006db1
   140006d7c:	cmp    WORD PTR [rcx+0x6],0x74
   140006d81:	jne    0x140006db1
   140006d83:	cmp    WORD PTR [rcx+0x8],0x61
   140006d88:	jne    0x140006db1
   140006d8a:	cmp    WORD PTR [rcx+0xa],ax
   140006d8e:	jne    0x140006db1
   140006d90:	cmp    WORD PTR [rcx+0xc],0x63
   140006d95:	jne    0x140006db1
   140006d97:	cmp    WORD PTR [rcx+0xe],0x65
   140006d9c:	jne    0x140006db1
   140006d9e:	cmp    WORD PTR [rcx+0x10],0x6f
   140006da3:	jne    0x140006db1
   140006da5:	cmp    WORD PTR [rcx+0x12],0x66
   140006daa:	mov    eax,0x20
   140006daf:	je     0x140006db6
   140006db1:	mov    eax,0x1d
   140006db6:	repz ret 
   140006db8:	int3   
   140006db9:	int3   
   140006dba:	int3   
   140006dbb:	int3   
   140006dbc:	int3   
   140006dbd:	int3   
   140006dbe:	int3   
   140006dbf:	int3   
   140006dc0:	add    r8d,0xfffffffe
   140006dc4:	mov    r10,rdx
   140006dc7:	cmp    r8d,0xa
   140006dcb:	ja     0x140006e59
   140006dd1:	lea    rdx,[rip+0xffffffffffff9228]        # 0x140000000
   140006dd8:	movsxd rax,r8d
   140006ddb:	mov    ecx,DWORD PTR [rdx+rax*4+0x6f54]
   140006de2:	add    rcx,rdx
   140006de5:	jmp    rcx
   140006de7:	movzx  eax,WORD PTR [r10]
   140006deb:	cmp    ax,0x61
   140006def:	jne    0x140006e0a
   140006df1:	cmp    WORD PTR [r10+0x2],0x73
   140006df7:	jne    0x140006e59
   140006df9:	mov    eax,0x1d
   140006dfe:	mov    ecx,0x5d
   140006e03:	test   r9b,r9b
   140006e06:	cmovne eax,ecx
   140006e09:	ret    
   140006e0a:	cmp    ax,0x64
   140006e0e:	jne    0x140006e1e
   140006e10:	cmp    WORD PTR [r10+0x2],0x6f
   140006e16:	jne    0x140006e59
   140006e18:	mov    eax,0xe
   140006e1d:	ret    
   140006e1e:	cmp    ax,0x69
   140006e22:	jne    0x140006e41
   140006e24:	movzx  eax,WORD PTR [r10+0x2]
   140006e29:	cmp    ax,0x66
   140006e2d:	jne    0x140006e35
   140006e2f:	mov    eax,0x1e
   140006e34:	ret    
   140006e35:	cmp    ax,0x6e
   140006e39:	jne    0x140006e59
   140006e3b:	mov    eax,0x1f
   140006e40:	ret    
   140006e41:	test   r9b,r9b
   140006e44:	je     0x140006e59
   140006e46:	cmp    ax,0x6f
   140006e4a:	jne    0x140006e59
   140006e4c:	cmp    WORD PTR [r10+0x2],0x6e
   140006e52:	mov    eax,0x5e
   140006e57:	je     0x140006e5e
   140006e59:	mov    eax,0x1d
   140006e5e:	ret    
   140006e5f:	movzx  edx,r9b
   140006e63:	mov    rcx,r10
   140006e66:	jmp    0x140006010
   140006e6b:	movzx  edx,r9b
   140006e6f:	mov    rcx,r10
   140006e72:	jmp    0x1400060f0
   140006e77:	movzx  edx,r9b
   140006e7b:	mov    rcx,r10
   140006e7e:	jmp    0x1400062d0
   140006e83:	movzx  edx,r9b
   140006e87:	mov    rcx,r10
   140006e8a:	jmp    0x1400064f0
   140006e8f:	movzx  edx,r9b
   140006e93:	mov    rcx,r10
   140006e96:	jmp    0x140006820
   140006e9b:	movzx  edx,r9b
   140006e9f:	mov    rcx,r10
   140006ea2:	jmp    0x1400069c0
   140006ea7:	movzx  edx,r9b
   140006eab:	mov    rcx,r10
   140006eae:	jmp    0x140006c10
   140006eb3:	movzx  edx,r9b
   140006eb7:	mov    rcx,r10
   140006eba:	jmp    0x140006d10
   140006ebf:	cmp    WORD PTR [r10],0x73
   140006ec4:	jne    0x140006e59
   140006ec6:	cmp    WORD PTR [r10+0x2],0x79
   140006ecc:	jne    0x140006e59
   140006ece:	cmp    WORD PTR [r10+0x4],0x6e
   140006ed4:	jne    0x140006e59
   140006ed6:	cmp    WORD PTR [r10+0x6],0x63
   140006edc:	jne    0x140006e59
   140006ee2:	cmp    WORD PTR [r10+0x8],0x68
   140006ee8:	jne    0x140006e59
   140006eee:	cmp    WORD PTR [r10+0xa],0x72
   140006ef4:	jne    0x140006e59
   140006efa:	cmp    WORD PTR [r10+0xc],0x6f
   140006f00:	jne    0x140006e59
   140006f06:	cmp    WORD PTR [r10+0xe],0x6e
   140006f0c:	jne    0x140006e59
   140006f12:	cmp    WORD PTR [r10+0x10],0x69
   140006f18:	jne    0x140006e59
   140006f1e:	cmp    WORD PTR [r10+0x12],0x7a
   140006f24:	jne    0x140006e59
   140006f2a:	cmp    WORD PTR [r10+0x14],0x65
   140006f30:	jne    0x140006e59
   140006f36:	cmp    WORD PTR [r10+0x16],0x64
   140006f3c:	jne    0x140006e59
   140006f42:	mov    eax,0x1d
   140006f47:	mov    ecx,0x56
   140006f4c:	test   r9b,r9b
   140006f4f:	cmovne eax,ecx
   140006f52:	ret    
   140006f53:	nop
   140006f54:	out    0x6d,eax
   140006f56:	add    BYTE PTR [rax],al
   140006f58:	pop    rdi
   140006f59:	outs   dx,BYTE PTR ds:[rsi]
   140006f5a:	add    BYTE PTR [rax],al
   140006f5c:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   140006f60:	ja     0x140006fd0
   140006f62:	add    BYTE PTR [rax],al
   140006f64:	sub    DWORD PTR [rsi+0x0],0x0
   140006f68:	(bad)  
   140006f69:	outs   dx,BYTE PTR ds:[rsi]
   140006f6a:	add    BYTE PTR [rax],al
   140006f6c:	fwait
   140006f6d:	outs   dx,BYTE PTR ds:[rsi]
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006f71:	outs   dx,BYTE PTR ds:[rsi]
   140006f72:	add    BYTE PTR [rax],al
   140006f74:	mov    bl,0x6e
   140006f76:	add    BYTE PTR [rax],al
   140006f78:	pop    rcx
   140006f79:	outs   dx,BYTE PTR ds:[rsi]
   140006f7a:	add    BYTE PTR [rax],al
   140006f7c:	mov    edi,0x8d00006e
   140006f81:	ror    BYTE PTR [rbx+r9*4-0x2f],1
   140006f86:	cmp    ax,0x9
   140006f8a:	ja     0x140006f91
   140006f8c:	sub    dl,0x30
   140006f8f:	jmp    0x140006fa2
   140006f91:	lea    eax,[rdx-0x61]
   140006f94:	cmp    ax,0x5
   140006f98:	ja     0x140006f9f
   140006f9a:	sub    dl,0x57
   140006f9d:	jmp    0x140006fa2
   140006f9f:	sub    dl,0x37
   140006fa2:	lea    eax,[r8-0x30]
   140006fa6:	cmp    ax,0x9
   140006faa:	ja     0x140006fb2
   140006fac:	sub    r8b,0x30
   140006fb0:	jmp    0x140006fc6
   140006fb2:	lea    eax,[r8-0x61]
   140006fb6:	cmp    ax,0x5
   140006fba:	ja     0x140006fc2
   140006fbc:	sub    r8b,0x57
   140006fc0:	jmp    0x140006fc6
   140006fc2:	sub    r8b,0x37
   140006fc6:	lea    eax,[r9-0x30]
   140006fca:	cmp    ax,0x9
   140006fce:	ja     0x140006fd6
   140006fd0:	sub    r9b,0x30
   140006fd4:	jmp    0x140006fea
   140006fd6:	lea    eax,[r9-0x61]
   140006fda:	cmp    ax,0x5
   140006fde:	ja     0x140006fe6
   140006fe0:	sub    r9b,0x57
   140006fe4:	jmp    0x140006fea
   140006fe6:	sub    r9b,0x37
   140006fea:	movzx  eax,WORD PTR [rsp+0x28]
   140006fef:	lea    ecx,[rax-0x30]
   140006ff2:	cmp    cx,0x9
   140006ff6:	ja     0x140006ffc
   140006ff8:	sub    al,0x30
   140006ffa:	jmp    0x14000700b
   140006ffc:	lea    ecx,[rax-0x61]
   140006fff:	cmp    cx,0x5
   140007003:	ja     0x140007009
   140007005:	sub    al,0x57
   140007007:	jmp    0x14000700b
   140007009:	sub    al,0x37
   14000700b:	shl    dl,0x4
   14000700e:	shl    r9b,0x4
   140007012:	add    r9b,al
   140007015:	add    dl,r8b
   140007018:	movzx  eax,r9b
   14000701c:	movzx  ecx,dl
   14000701f:	shl    cx,0x8
   140007023:	or     cx,ax
   140007026:	mov    rax,r10
   140007029:	mov    WORD PTR [r10],cx
   14000702d:	ret    
   14000702e:	int3   
   14000702f:	int3   
   140007030:	mov    QWORD PTR [rsp+0x8],rbx
   140007035:	mov    QWORD PTR [rsp+0x10],rsi
   14000703a:	push   rdi
   14000703b:	sub    rsp,0x20
   14000703f:	mov    rbx,rcx
   140007042:	mov    QWORD PTR [rcx],rdx
   140007045:	add    rcx,0x8
   140007049:	mov    rdi,rdx
   14000704c:	call   QWORD PTR [rip+0x5376]        # 0x14000c3c8
   140007052:	lea    rcx,[rbx+0x10]
   140007056:	call   QWORD PTR [rip+0x536c]        # 0x14000c3c8
   14000705c:	lea    rcx,[rbx+0x18]
   140007060:	call   QWORD PTR [rip+0x5362]        # 0x14000c3c8
   140007066:	xor    esi,esi
   140007068:	lea    rcx,[rbx+0x58]
   14000706c:	mov    QWORD PTR [rbx+0x20],rsi
   140007070:	mov    DWORD PTR [rbx+0x28],esi
   140007073:	mov    DWORD PTR [rbx+0x2c],esi
   140007076:	mov    dl,0xa
   140007078:	mov    QWORD PTR [rbx+0x30],rsi
   14000707c:	mov    QWORD PTR [rbx+0x40],rsi
   140007080:	mov    QWORD PTR [rbx+0x48],rsi
   140007084:	mov    QWORD PTR [rbx+0x50],rsi
   140007088:	call   QWORD PTR [rip+0x52ea]        # 0x14000c378
   14000708e:	mov    DWORD PTR [rbx+0x5c],esi
   140007091:	mov    DWORD PTR [rbx+0x60],esi
   140007094:	mov    QWORD PTR [rbx+0x68],rsi
   140007098:	mov    DWORD PTR [rbx+0x70],esi
   14000709b:	mov    DWORD PTR [rbx+0x74],esi
   14000709e:	mov    DWORD PTR [rbx+0x78],0xffffffff
   1400070a5:	mov    DWORD PTR [rbx+0x7c],esi
   1400070a8:	mov    DWORD PTR [rbx+0x80],esi
   1400070ae:	mov    DWORD PTR [rbx+0x84],esi
   1400070b4:	mov    DWORD PTR [rbx+0x88],esi
   1400070ba:	mov    BYTE PTR [rbx+0x8c],sil
   1400070c1:	mov    BYTE PTR [rbx+0x8d],sil
   1400070c8:	mov    BYTE PTR [rbx+0x8e],sil
   1400070cf:	mov    BYTE PTR [rbx+0x8f],sil
   1400070d6:	mov    BYTE PTR [rbx+0x90],sil
   1400070dd:	mov    BYTE PTR [rbx+0x91],0x1
   1400070e4:	mov    BYTE PTR [rbx+0x92],0x1
   1400070eb:	test   rdi,rdi
   1400070ee:	je     0x1400070fb
   1400070f0:	mov    rdx,rbx
   1400070f3:	mov    rcx,rdi
   1400070f6:	call   0x14000aff0
   1400070fb:	mov    rsi,QWORD PTR [rsp+0x38]
   140007100:	mov    rax,rbx
   140007103:	mov    rbx,QWORD PTR [rsp+0x30]
   140007108:	add    rsp,0x20
   14000710c:	pop    rdi
   14000710d:	ret    
   14000710e:	int3   
   14000710f:	int3   
   140007110:	mov    al,BYTE PTR [rcx+0x92]
   140007116:	ret    
   140007117:	int3   
   140007118:	int3   
   140007119:	int3   
   14000711a:	int3   
   14000711b:	int3   
   14000711c:	int3   
   14000711d:	int3   
   14000711e:	int3   
   14000711f:	int3   
   140007120:	mov    QWORD PTR [rsp+0x8],rbx
   140007125:	mov    QWORD PTR [rsp+0x10],rbp
   14000712a:	mov    QWORD PTR [rsp+0x18],rsi
   14000712f:	push   rdi
   140007130:	sub    rsp,0x20
   140007134:	mov    rdi,rcx
   140007137:	mov    rcx,QWORD PTR [rcx]
   14000713a:	movzx  ebx,r9b
   14000713e:	mov    ebp,r8d
   140007141:	mov    rsi,rdx
   140007144:	test   rcx,rcx
   140007147:	je     0x14000714e
   140007149:	call   0x14000afe0
   14000714e:	lea    rcx,[rdi+0x8]
   140007152:	mov    rdx,rsi
   140007155:	mov    BYTE PTR [rdi+0x92],bl
   14000715b:	call   QWORD PTR [rip+0x523f]        # 0x14000c3a0
   140007161:	lea    rcx,[rdi+0x10]
   140007165:	call   QWORD PTR [rip+0x523d]        # 0x14000c3a8
   14000716b:	lea    rcx,[rdi+0x10]
   14000716f:	mov    edx,0x400
   140007174:	call   QWORD PTR [rip+0x503e]        # 0x14000c1b8
   14000717a:	lea    rcx,[rdi+0x18]
   14000717e:	call   QWORD PTR [rip+0x5224]        # 0x14000c3a8
   140007184:	xor    ebx,ebx
   140007186:	mov    rcx,rsi
   140007189:	mov    QWORD PTR [rdi+0x20],rbx
   14000718d:	mov    DWORD PTR [rdi+0x28],ebx
   140007190:	mov    DWORD PTR [rdi+0x2c],ebx
   140007193:	call   QWORD PTR [rip+0x508f]        # 0x14000c228
   140007199:	mov    QWORD PTR [rdi+0x30],rax
   14000719d:	mov    rcx,QWORD PTR [rsi]
   1400071a0:	movsxd rdx,DWORD PTR [rcx+0x4]
   1400071a4:	mov    QWORD PTR [rdi+0x40],rax
   1400071a8:	mov    QWORD PTR [rdi+0x48],rax
   1400071ac:	lea    rcx,[rax+rdx*2]
   1400071b0:	mov    dl,0xa
   1400071b2:	mov    QWORD PTR [rdi+0x50],rax
   1400071b6:	mov    QWORD PTR [rdi+0x38],rcx
   1400071ba:	lea    rcx,[rsp+0x48]
   1400071bf:	call   QWORD PTR [rip+0x51b3]        # 0x14000c378
   1400071c5:	movzx  r11d,WORD PTR [rsp+0x48]
   1400071cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400071d0:	mov    DWORD PTR [rdi+0x5c],ebx
   1400071d3:	mov    DWORD PTR [rdi+0x60],ebp
   1400071d6:	mov    QWORD PTR [rdi+0x68],rbx
   1400071da:	mov    DWORD PTR [rdi+0x70],ebx
   1400071dd:	mov    DWORD PTR [rdi+0x74],ebx
   1400071e0:	mov    DWORD PTR [rdi+0x7c],ebx
   1400071e3:	mov    DWORD PTR [rdi+0x84],ebx
   1400071e9:	mov    DWORD PTR [rdi+0x88],ebp
   1400071ef:	mov    rbp,QWORD PTR [rsp+0x38]
   1400071f4:	mov    BYTE PTR [rdi+0x8c],bl
   1400071fa:	mov    BYTE PTR [rdi+0x8d],bl
   140007200:	mov    BYTE PTR [rdi+0x8e],bl
   140007206:	mov    BYTE PTR [rdi+0x8f],bl
   14000720c:	mov    BYTE PTR [rdi+0x90],bl
   140007212:	mov    rbx,QWORD PTR [rsp+0x30]
   140007217:	mov    WORD PTR [rdi+0x58],r11w
   14000721c:	mov    DWORD PTR [rdi+0x78],0xffffffff
   140007223:	mov    BYTE PTR [rdi+0x91],0x1
   14000722a:	add    rsp,0x20
   14000722e:	pop    rdi
   14000722f:	ret    
   140007230:	dec    ecx
   140007232:	cmp    ecx,0x4f
   140007235:	ja     0x140007258
   140007237:	lea    rdx,[rip+0xffffffffffff8dc2]        # 0x140000000
   14000723e:	movsxd rax,ecx
   140007241:	movzx  eax,BYTE PTR [rdx+rax*1+0x7264]
   140007249:	mov    ecx,DWORD PTR [rdx+rax*4+0x725c]
   140007250:	add    rcx,rdx
   140007253:	jmp    rcx
   140007255:	mov    al,0x1
   140007257:	ret    
   140007258:	xor    al,al
   14000725a:	ret    
   14000725b:	nop
   14000725c:	push   rbp
   14000725d:	jb     0x14000725f
   14000725f:	add    BYTE PTR [rax+0x72],bl
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rcx],al
   140007268:	add    DWORD PTR [rcx],eax
   14000726a:	add    DWORD PTR [rcx],eax
   14000726c:	add    DWORD PTR [rcx],eax
   14000726e:	add    DWORD PTR [rax],eax
   140007270:	add    BYTE PTR [rcx],al
   140007272:	add    DWORD PTR [rcx],eax
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rcx],al
   140007278:	add    DWORD PTR [rcx],eax
   14000727a:	add    BYTE PTR [rax],al
   14000727c:	add    BYTE PTR [rax],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	add    DWORD PTR [rcx],eax
   140007282:	add    DWORD PTR [rcx],eax
   140007284:	add    DWORD PTR [rcx],eax
   140007286:	add    BYTE PTR [rcx],al
   140007288:	add    BYTE PTR [rax],al
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rcx],al
   14000728e:	add    DWORD PTR [rcx],eax
   140007290:	add    BYTE PTR [rax],al
   140007292:	add    DWORD PTR [rax],eax
   140007294:	add    BYTE PTR [rax],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	add    DWORD PTR [rcx],eax
   14000729a:	add    DWORD PTR [rcx],eax
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rcx],al
   1400072a0:	add    DWORD PTR [rcx],eax
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	add    DWORD PTR [rcx],eax
   1400072a6:	add    DWORD PTR [rcx],eax
   1400072a8:	add    DWORD PTR [rcx],eax
   1400072aa:	add    DWORD PTR [rcx],eax
   1400072ac:	add    DWORD PTR [rcx],eax
   1400072ae:	add    DWORD PTR [rcx],eax
   1400072b0:	add    DWORD PTR [rcx],eax
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	int3   
   1400072b5:	int3   
   1400072b6:	int3   
   1400072b7:	int3   
   1400072b8:	int3   
   1400072b9:	int3   
   1400072ba:	int3   
   1400072bb:	int3   
   1400072bc:	int3   
   1400072bd:	int3   
   1400072be:	int3   
   1400072bf:	int3   
   1400072c0:	sub    rsp,0x28
   1400072c4:	cmp    cx,0x61
   1400072c8:	jb     0x1400072d0
   1400072ca:	cmp    cx,0x7a
   1400072ce:	jbe    0x14000733a
   1400072d0:	cmp    cx,0x41
   1400072d4:	jb     0x1400072dc
   1400072d6:	cmp    cx,0x5a
   1400072da:	jbe    0x14000733a
   1400072dc:	cmp    cx,0x30
   1400072e0:	jb     0x1400072e8
   1400072e2:	cmp    cx,0x39
   1400072e6:	jbe    0x14000733a
   1400072e8:	cmp    cx,0x24
   1400072ec:	je     0x14000733a
   1400072ee:	cmp    cx,0x5f
   1400072f2:	je     0x14000733a
   1400072f4:	mov    eax,0x200c
   1400072f9:	cmp    cx,ax
   1400072fc:	je     0x14000733a
   1400072fe:	mov    eax,0x200d
   140007303:	cmp    cx,ax
   140007306:	je     0x14000733a
   140007308:	movzx  ecx,cx
   14000730b:	call   QWORD PTR [rip+0x4eaf]        # 0x14000c1c0
   140007311:	cmp    eax,0x13
   140007314:	ja     0x140007333
   140007316:	lea    rdx,[rip+0xffffffffffff8ce3]        # 0x140000000
   14000731d:	cdqe   
   14000731f:	movzx  eax,BYTE PTR [rdx+rax*1+0x734c]
   140007327:	mov    ecx,DWORD PTR [rdx+rax*4+0x7344]
   14000732e:	add    rcx,rdx
   140007331:	jmp    rcx
   140007333:	xor    al,al
   140007335:	add    rsp,0x28
   140007339:	ret    
   14000733a:	mov    al,0x1
   14000733c:	add    rsp,0x28
   140007340:	ret    
   140007341:	nop    DWORD PTR [rax]
   140007344:	cmp    dh,BYTE PTR [rbx+0x0]
   140007347:	add    BYTE PTR [rbx],dh
   140007349:	jae    0x14000734b
   14000734b:	add    BYTE PTR [rax],al
   14000734d:	add    BYTE PTR [rcx],al
   14000734f:	add    BYTE PTR [rax],al
   140007351:	add    DWORD PTR [rcx],eax
   140007353:	add    DWORD PTR [rcx],eax
   140007355:	add    DWORD PTR [rcx],eax
   140007357:	add    DWORD PTR [rcx],eax
   140007359:	add    DWORD PTR [rax],eax
   14000735b:	add    BYTE PTR [rax],al
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rdi],cl
   140007361:	mov    bh,0x41
   140007363:	pop    rax
   140007364:	cmp    ax,0xa
   140007368:	je     0x140007387
   14000736a:	cmp    ax,0xd
   14000736e:	je     0x140007387
   140007370:	mov    ecx,0x2028
   140007375:	cmp    ax,cx
   140007378:	je     0x140007387
   14000737a:	mov    ecx,0x2029
   14000737f:	cmp    ax,cx
   140007382:	je     0x140007387
   140007384:	xor    al,al
   140007386:	ret    
   140007387:	mov    al,0x1
   140007389:	ret    
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	int3   
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	movzx  eax,WORD PTR [rcx+0x58]
   140007394:	cmp    eax,0xa
   140007397:	je     0x1400073bf
   140007399:	cmp    eax,0xd
   14000739c:	je     0x1400073af
   14000739e:	cmp    eax,0x2027
   1400073a3:	jle    0x1400073ac
   1400073a5:	cmp    eax,0x2029
   1400073aa:	jle    0x1400073bf
   1400073ac:	xor    eax,eax
   1400073ae:	ret    
   1400073af:	mov    rcx,QWORD PTR [rcx+0x30]
   1400073b3:	xor    eax,eax
   1400073b5:	cmp    WORD PTR [rcx],0xa
   1400073b9:	sete   al
   1400073bc:	inc    eax
   1400073be:	ret    
   1400073bf:	mov    eax,0x1
   1400073c4:	ret    
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	mov    WORD PTR [rsp+0x8],cx
   1400073d5:	sub    rsp,0x28
   1400073d9:	lea    rcx,[rsp+0x38]
   1400073de:	mov    dl,0x61
   1400073e0:	call   QWORD PTR [rip+0x4f92]        # 0x14000c378
   1400073e6:	movzx  eax,WORD PTR [rax]
   1400073e9:	cmp    WORD PTR [rsp+0x30],ax
   1400073ee:	jb     0x140007407
   1400073f0:	lea    rcx,[rsp+0x38]
   1400073f5:	mov    dl,0x7a
   1400073f7:	call   QWORD PTR [rip+0x4f7b]        # 0x14000c378
   1400073fd:	movzx  eax,WORD PTR [rax]
   140007400:	cmp    ax,WORD PTR [rsp+0x30]
   140007405:	jae    0x140007486
   140007407:	lea    rcx,[rsp+0x38]
   14000740c:	mov    dl,0x41
   14000740e:	call   QWORD PTR [rip+0x4f64]        # 0x14000c378
   140007414:	movzx  eax,WORD PTR [rax]
   140007417:	cmp    WORD PTR [rsp+0x30],ax
   14000741c:	jb     0x140007435
   14000741e:	lea    rcx,[rsp+0x38]
   140007423:	mov    dl,0x5a
   140007425:	call   QWORD PTR [rip+0x4f4d]        # 0x14000c378
   14000742b:	movzx  eax,WORD PTR [rax]
   14000742e:	cmp    ax,WORD PTR [rsp+0x30]
   140007433:	jae    0x140007486
   140007435:	lea    rcx,[rsp+0x38]
   14000743a:	mov    dl,0x24
   14000743c:	call   QWORD PTR [rip+0x4f36]        # 0x14000c378
   140007442:	movzx  eax,WORD PTR [rax]
   140007445:	cmp    WORD PTR [rsp+0x30],ax
   14000744a:	je     0x140007486
   14000744c:	lea    rcx,[rsp+0x38]
   140007451:	mov    dl,0x5f
   140007453:	call   QWORD PTR [rip+0x4f1f]        # 0x14000c378
   140007459:	mov    r11,rax
   14000745c:	movzx  eax,WORD PTR [rsp+0x30]
   140007461:	cmp    ax,WORD PTR [r11]
   140007465:	je     0x140007486
   140007467:	mov    ecx,0x80
   14000746c:	cmp    ax,cx
   14000746f:	jae    0x140007478
   140007471:	xor    al,al
   140007473:	add    rsp,0x28
   140007477:	ret    
   140007478:	movzx  ecx,ax
   14000747b:	call   QWORD PTR [rip+0x4eef]        # 0x14000c370
   140007481:	add    rsp,0x28
   140007485:	ret    
   140007486:	mov    al,0x1
   140007488:	add    rsp,0x28
   14000748c:	ret    
   14000748d:	int3   
   14000748e:	int3   
   14000748f:	int3   
   140007490:	mov    WORD PTR [rsp+0x8],cx
   140007495:	sub    rsp,0x38
   140007499:	lea    rcx,[rsp+0x48]
   14000749e:	mov    dl,0x30
   1400074a0:	call   QWORD PTR [rip+0x4ed2]        # 0x14000c378
   1400074a6:	movzx  eax,WORD PTR [rax]
   1400074a9:	cmp    WORD PTR [rsp+0x40],ax
   1400074ae:	jb     0x1400074c7
   1400074b0:	lea    rcx,[rsp+0x50]
   1400074b5:	mov    dl,0x39
   1400074b7:	call   QWORD PTR [rip+0x4ebb]        # 0x14000c378
   1400074bd:	movzx  eax,WORD PTR [rax]
   1400074c0:	cmp    ax,WORD PTR [rsp+0x40]
   1400074c5:	jae    0x140007523
   1400074c7:	lea    rcx,[rsp+0x58]
   1400074cc:	mov    dl,0x61
   1400074ce:	call   QWORD PTR [rip+0x4ea4]        # 0x14000c378
   1400074d4:	movzx  eax,WORD PTR [rax]
   1400074d7:	cmp    WORD PTR [rsp+0x40],ax
   1400074dc:	jb     0x1400074f5
   1400074de:	lea    rcx,[rsp+0x20]
   1400074e3:	mov    dl,0x66
   1400074e5:	call   QWORD PTR [rip+0x4e8d]        # 0x14000c378
   1400074eb:	movzx  eax,WORD PTR [rax]
   1400074ee:	cmp    ax,WORD PTR [rsp+0x40]
   1400074f3:	jae    0x140007523
   1400074f5:	lea    rcx,[rsp+0x22]
   1400074fa:	mov    dl,0x41
   1400074fc:	call   QWORD PTR [rip+0x4e76]        # 0x14000c378
   140007502:	movzx  eax,WORD PTR [rax]
   140007505:	cmp    WORD PTR [rsp+0x40],ax
   14000750a:	jb     0x14000752a
   14000750c:	lea    rcx,[rsp+0x24]
   140007511:	mov    dl,0x46
   140007513:	call   QWORD PTR [rip+0x4e5f]        # 0x14000c378
   140007519:	movzx  eax,WORD PTR [rax]
   14000751c:	cmp    ax,WORD PTR [rsp+0x40]
   140007521:	jb     0x14000752a
   140007523:	mov    al,0x1
   140007525:	add    rsp,0x38
   140007529:	ret    
   14000752a:	xor    al,al
   14000752c:	add    rsp,0x38
   140007530:	ret    
   140007531:	int3   
   140007532:	int3   
   140007533:	int3   
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	int3   
   14000753d:	int3   
   14000753e:	int3   
   14000753f:	int3   
   140007540:	rex push rbx
   140007542:	sub    rsp,0x20
   140007546:	cmp    BYTE PTR [rcx+0x8c],0x0
   14000754d:	mov    rbx,rdx
   140007550:	je     0x140007568
   140007552:	lea    rdx,[rcx+0x10]
   140007556:	mov    rcx,rbx
   140007559:	call   QWORD PTR [rip+0x4e61]        # 0x14000c3c0
   14000755f:	mov    rax,rbx
   140007562:	add    rsp,0x20
   140007566:	pop    rbx
   140007567:	ret    
   140007568:	mov    r8d,DWORD PTR [rcx+0x84]
   14000756f:	mov    rdx,QWORD PTR [rcx+0x50]
   140007573:	cmp    DWORD PTR [rcx+0x80],0x41
   14000757a:	mov    rcx,rbx
   14000757d:	jne    0x140007587
   14000757f:	sub    r8d,0x2
   140007583:	add    rdx,0x2
   140007587:	call   QWORD PTR [rip+0x4c3b]        # 0x14000c1c8
   14000758d:	mov    rax,rbx
   140007590:	add    rsp,0x20
   140007594:	pop    rbx
   140007595:	ret    
   140007596:	int3   
   140007597:	int3   
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	cmp    edx,0x37
   1400075a3:	je     0x1400075be
   1400075a5:	test   edx,edx
   1400075a7:	je     0x1400075be
   1400075a9:	cmp    BYTE PTR [rcx+0x8f],0x0
   1400075b0:	jne    0x1400075be
   1400075b2:	cmp    BYTE PTR [rcx+0x90],0x0
   1400075b9:	jne    0x1400075be
   1400075bb:	xor    al,al
   1400075bd:	ret    
   1400075be:	mov    al,0x1
   1400075c0:	ret    
   1400075c1:	int3   
   1400075c2:	int3   
   1400075c3:	int3   
   1400075c4:	int3   
   1400075c5:	int3   
   1400075c6:	int3   
   1400075c7:	int3   
   1400075c8:	int3   
   1400075c9:	int3   
   1400075ca:	int3   
   1400075cb:	int3   
   1400075cc:	int3   
   1400075cd:	int3   
   1400075ce:	int3   
   1400075cf:	int3   
   1400075d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400075d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400075da:	mov    DWORD PTR [rsp+0x10],edx
   1400075de:	push   rsi
   1400075df:	push   rdi
   1400075e0:	push   r12
   1400075e2:	sub    rsp,0x20
   1400075e6:	mov    eax,DWORD PTR [rcx+0x4]
   1400075e9:	mov    rsi,QWORD PTR [rcx+0x8]
   1400075ed:	mov    rbx,rcx
   1400075f0:	cmp    edx,eax
   1400075f2:	lea    r9,[rsp+0x48]
   1400075f7:	lea    rcx,[rsp+0x50]
   1400075fc:	cmovge r9,rcx
   140007600:	movsxd rbp,r8d
   140007603:	mov    DWORD PTR [rsp+0x50],eax
   140007607:	movsxd r12,DWORD PTR [r9]
   14000760a:	mov    edi,edx
   14000760c:	cmp    ebp,DWORD PTR [rbx]
   14000760e:	je     0x140007645
   140007610:	cmp    ebp,0x20
   140007613:	jle    0x140007622
   140007615:	mov    rcx,rbp
   140007618:	call   QWORD PTR [rip+0x4aea]        # 0x14000c108
   14000761e:	mov    DWORD PTR [rbx],ebp
   140007620:	jmp    0x14000762c
   140007622:	lea    rax,[rbx+0x10]
   140007626:	mov    DWORD PTR [rbx],0x20
   14000762c:	mov    r8,r12
   14000762f:	mov    rdx,rsi
   140007632:	mov    rcx,rax
   140007635:	mov    QWORD PTR [rbx+0x8],rax
   140007639:	mov    DWORD PTR [rbx+0x4],0x0
   140007640:	call   0x14000b422
   140007645:	lea    rax,[rbx+0x10]
   140007649:	mov    DWORD PTR [rbx+0x4],r12d
   14000764d:	cmp    rsi,rax
   140007650:	je     0x140007661
   140007652:	cmp    rsi,QWORD PTR [rbx+0x8]
   140007656:	je     0x140007661
   140007658:	mov    rcx,rsi
   14000765b:	call   QWORD PTR [rip+0x4aaf]        # 0x14000c110
   140007661:	mov    rbp,QWORD PTR [rsp+0x58]
   140007666:	mov    DWORD PTR [rbx+0x4],edi
   140007669:	mov    rbx,QWORD PTR [rsp+0x40]
   14000766e:	add    rsp,0x20
   140007672:	pop    r12
   140007674:	pop    rdi
   140007675:	pop    rsi
   140007676:	ret    
   140007677:	int3   
   140007678:	int3   
   140007679:	int3   
   14000767a:	int3   
   14000767b:	int3   
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	mov    QWORD PTR [rsp+0x8],rbx
   140007685:	mov    QWORD PTR [rsp+0x20],rbp
   14000768a:	mov    DWORD PTR [rsp+0x10],edx
   14000768e:	push   rsi
   14000768f:	push   rdi
   140007690:	push   r12
   140007692:	sub    rsp,0x20
   140007696:	mov    eax,DWORD PTR [rcx+0x4]
   140007699:	mov    rsi,QWORD PTR [rcx+0x8]
   14000769d:	mov    rbx,rcx
   1400076a0:	cmp    edx,eax
   1400076a2:	lea    r9,[rsp+0x48]
   1400076a7:	lea    rcx,[rsp+0x50]
   1400076ac:	cmovge r9,rcx
   1400076b0:	movsxd rbp,r8d
   1400076b3:	mov    DWORD PTR [rsp+0x50],eax
   1400076b7:	movsxd r12,DWORD PTR [r9]
   1400076ba:	mov    edi,edx
   1400076bc:	cmp    ebp,DWORD PTR [rbx]
   1400076be:	je     0x1400076f5
   1400076c0:	cmp    ebp,0x40
   1400076c3:	jle    0x1400076d2
   1400076c5:	mov    rcx,rbp
   1400076c8:	call   QWORD PTR [rip+0x4a3a]        # 0x14000c108
   1400076ce:	mov    DWORD PTR [rbx],ebp
   1400076d0:	jmp    0x1400076dc
   1400076d2:	lea    rax,[rbx+0x10]
   1400076d6:	mov    DWORD PTR [rbx],0x40
   1400076dc:	mov    r8,r12
   1400076df:	mov    rdx,rsi
   1400076e2:	mov    rcx,rax
   1400076e5:	mov    QWORD PTR [rbx+0x8],rax
   1400076e9:	mov    DWORD PTR [rbx+0x4],0x0
   1400076f0:	call   0x14000b422
   1400076f5:	lea    rax,[rbx+0x10]
   1400076f9:	mov    DWORD PTR [rbx+0x4],r12d
   1400076fd:	cmp    rsi,rax
   140007700:	je     0x140007711
   140007702:	cmp    rsi,QWORD PTR [rbx+0x8]
   140007706:	je     0x140007711
   140007708:	mov    rcx,rsi
   14000770b:	call   QWORD PTR [rip+0x49ff]        # 0x14000c110
   140007711:	mov    rbp,QWORD PTR [rsp+0x58]
   140007716:	mov    DWORD PTR [rbx+0x4],edi
   140007719:	mov    rbx,QWORD PTR [rsp+0x40]
   14000771e:	add    rsp,0x20
   140007722:	pop    r12
   140007724:	pop    rdi
   140007725:	pop    rsi
   140007726:	ret    
   140007727:	int3   
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	int3   
   14000772d:	int3   
   14000772e:	int3   
   14000772f:	int3   
   140007730:	movzx  eax,WORD PTR [rcx+0x58]
   140007734:	xor    r8d,r8d
   140007737:	mov    rdx,rcx
   14000773a:	cmp    eax,0xa
   14000773d:	je     0x14000776b
   14000773f:	cmp    eax,0xd
   140007742:	je     0x140007757
   140007744:	cmp    eax,0x2027
   140007749:	jle    0x140007752
   14000774b:	cmp    eax,0x2029
   140007750:	jle    0x14000776b
   140007752:	mov    r9d,r8d
   140007755:	jmp    0x140007771
   140007757:	mov    rax,QWORD PTR [rcx+0x30]
   14000775b:	mov    r9d,r8d
   14000775e:	cmp    WORD PTR [rax],0xa
   140007762:	sete   r9b
   140007766:	inc    r9d
   140007769:	jmp    0x140007771
   14000776b:	mov    r9d,0x1
   140007771:	mov    rcx,QWORD PTR [rcx+0x30]
   140007775:	add    rcx,0x2
   140007779:	movzx  eax,WORD PTR [rcx-0x2]
   14000777d:	mov    QWORD PTR [rdx+0x30],rcx
   140007781:	mov    WORD PTR [rdx+0x58],ax
   140007785:	cmp    r9d,0x2
   140007789:	jne    0x14000779a
   14000778b:	movzx  eax,WORD PTR [rcx]
   14000778e:	mov    WORD PTR [rdx+0x58],ax
   140007792:	lea    rax,[rcx+0x2]
   140007796:	mov    QWORD PTR [rdx+0x30],rax
   14000779a:	movzx  eax,WORD PTR [rdx+0x58]
   14000779e:	cmp    eax,0xa
   1400077a1:	je     0x1400077b6
   1400077a3:	cmp    eax,0xd
   1400077a6:	je     0x1400077d1
   1400077a8:	cmp    eax,0x2027
   1400077ad:	jle    0x1400077cf
   1400077af:	cmp    eax,0x2029
   1400077b4:	jg     0x1400077cf
   1400077b6:	mov    rax,QWORD PTR [rdx+0x30]
   1400077ba:	inc    DWORD PTR [rdx+0x60]
   1400077bd:	mov    r8d,0x1
   1400077c3:	mov    ecx,r8d
   1400077c6:	lea    rcx,[rax+rcx*2-0x2]
   1400077cb:	mov    QWORD PTR [rdx+0x40],rcx
   1400077cf:	repz ret 
   1400077d1:	mov    rax,QWORD PTR [rdx+0x30]
   1400077d5:	cmp    WORD PTR [rax],0xa
   1400077d9:	sete   r8b
   1400077dd:	inc    DWORD PTR [rdx+0x60]
   1400077e0:	inc    r8d
   1400077e3:	mov    ecx,r8d
   1400077e6:	lea    rcx,[rax+rcx*2-0x2]
   1400077eb:	mov    QWORD PTR [rdx+0x40],rcx
   1400077ef:	ret    
   1400077f0:	rex push rbx
   1400077f2:	push   r12
   1400077f4:	push   r13
   1400077f6:	push   r14
   1400077f8:	sub    rsp,0x38
   1400077fc:	mov    r14,rcx
   1400077ff:	mov    r12,rdx
   140007802:	lea    rcx,[rsp+0x60]
   140007807:	mov    dl,0x75
   140007809:	mov    r13,r8
   14000780c:	call   QWORD PTR [rip+0x4b66]        # 0x14000c378
   140007812:	movzx  eax,WORD PTR [rax]
   140007815:	cmp    WORD PTR [r14+0x58],ax
   14000781a:	jne    0x1400078f2
   140007820:	mov    rbx,QWORD PTR [r14+0x30]
   140007824:	movzx  ecx,WORD PTR [rbx]
   140007827:	call   0x140007490
   14000782c:	test   al,al
   14000782e:	je     0x1400078f2
   140007834:	movzx  ecx,WORD PTR [rbx+0x2]
   140007838:	call   0x140007490
   14000783d:	test   al,al
   14000783f:	je     0x1400078f2
   140007845:	movzx  ecx,WORD PTR [rbx+0x4]
   140007849:	call   0x140007490
   14000784e:	test   al,al
   140007850:	je     0x1400078f2
   140007856:	movzx  ecx,WORD PTR [rbx+0x6]
   14000785a:	call   0x140007490
   14000785f:	test   al,al
   140007861:	je     0x1400078f2
   140007867:	mov    QWORD PTR [rsp+0x68],rbp
   14000786c:	mov    rcx,r14
   14000786f:	mov    QWORD PTR [rsp+0x70],rsi
   140007874:	mov    QWORD PTR [rsp+0x30],rdi
   140007879:	call   0x140007730
   14000787e:	movzx  ebx,WORD PTR [r14+0x58]
   140007883:	mov    rcx,r14
   140007886:	call   0x140007730
   14000788b:	movzx  edi,WORD PTR [r14+0x58]
   140007890:	mov    rcx,r14
   140007893:	call   0x140007730
   140007898:	movzx  esi,WORD PTR [r14+0x58]
   14000789d:	mov    rcx,r14
   1400078a0:	call   0x140007730
   1400078a5:	movzx  ebp,WORD PTR [r14+0x58]
   1400078aa:	mov    rcx,r14
   1400078ad:	call   0x140007730
   1400078b2:	test   r13,r13
   1400078b5:	je     0x1400078bc
   1400078b7:	mov    BYTE PTR [r13+0x0],0x1
   1400078bc:	movzx  r9d,si
   1400078c0:	movzx  r8d,di
   1400078c4:	movzx  edx,bx
   1400078c7:	mov    rcx,r12
   1400078ca:	mov    WORD PTR [rsp+0x20],bp
   1400078cf:	call   0x140006f80
   1400078d4:	mov    rdi,QWORD PTR [rsp+0x30]
   1400078d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400078de:	mov    rbp,QWORD PTR [rsp+0x68]
   1400078e3:	mov    rax,r12
   1400078e6:	add    rsp,0x38
   1400078ea:	pop    r14
   1400078ec:	pop    r13
   1400078ee:	pop    r12
   1400078f0:	pop    rbx
   1400078f1:	ret    
   1400078f2:	xor    eax,eax
   1400078f4:	mov    BYTE PTR [r13+0x0],0x0
   1400078f9:	mov    WORD PTR [r12],ax
   1400078fe:	mov    rax,r12
   140007901:	add    rsp,0x38
   140007905:	pop    r14
   140007907:	pop    r13
   140007909:	pop    r12
   14000790b:	pop    rbx
   14000790c:	ret    
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	mov    QWORD PTR [rsp+0x18],rbp
   140007915:	mov    QWORD PTR [rsp+0x20],rsi
   14000791a:	push   r12
   14000791c:	sub    rsp,0x20
   140007920:	mov    rax,QWORD PTR [rcx+0x30]
   140007924:	mov    rbp,rcx
   140007927:	mov    r12,r8
   14000792a:	movzx  ecx,WORD PTR [rax]
   14000792d:	mov    rsi,rdx
   140007930:	call   0x140007490
   140007935:	test   al,al
   140007937:	je     0x140007a02
   14000793d:	mov    rax,QWORD PTR [rbp+0x30]
   140007941:	movzx  ecx,WORD PTR [rax+0x2]
   140007945:	call   0x140007490
   14000794a:	test   al,al
   14000794c:	je     0x140007a02
   140007952:	mov    rcx,rbp
   140007955:	mov    QWORD PTR [rsp+0x30],rbx
   14000795a:	mov    QWORD PTR [rsp+0x38],rdi
   14000795f:	call   0x140007730
   140007964:	movzx  ebx,WORD PTR [rbp+0x58]
   140007968:	mov    rcx,rbp
   14000796b:	call   0x140007730
   140007970:	movzx  edi,WORD PTR [rbp+0x58]
   140007974:	mov    rcx,rbp
   140007977:	call   0x140007730
   14000797c:	test   r12,r12
   14000797f:	je     0x140007986
   140007981:	mov    BYTE PTR [r12],0x1
   140007986:	cmp    bx,0x30
   14000798a:	jb     0x140007997
   14000798c:	cmp    bx,0x39
   140007990:	ja     0x140007997
   140007992:	sub    bl,0x30
   140007995:	jmp    0x1400079ab
   140007997:	cmp    bx,0x61
   14000799b:	jb     0x1400079a8
   14000799d:	cmp    bx,0x66
   1400079a1:	ja     0x1400079a8
   1400079a3:	sub    bl,0x57
   1400079a6:	jmp    0x1400079ab
   1400079a8:	sub    bl,0x37
   1400079ab:	cmp    di,0x30
   1400079af:	jb     0x1400079bd
   1400079b1:	cmp    di,0x39
   1400079b5:	ja     0x1400079bd
   1400079b7:	sub    dil,0x30
   1400079bb:	jmp    0x1400079d3
   1400079bd:	cmp    di,0x61
   1400079c1:	jb     0x1400079cf
   1400079c3:	cmp    di,0x66
   1400079c7:	ja     0x1400079cf
   1400079c9:	sub    dil,0x57
   1400079cd:	jmp    0x1400079d3
   1400079cf:	sub    dil,0x37
   1400079d3:	movzx  eax,dil
   1400079d7:	mov    rdi,QWORD PTR [rsp+0x38]
   1400079dc:	movzx  ecx,bl
   1400079df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079e4:	shl    cx,0x4
   1400079e8:	add    cx,ax
   1400079eb:	mov    rax,rsi
   1400079ee:	mov    WORD PTR [rsi],cx
   1400079f1:	mov    rbp,QWORD PTR [rsp+0x40]
   1400079f6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400079fb:	add    rsp,0x20
   1400079ff:	pop    r12
   140007a01:	ret    
   140007a02:	mov    rbp,QWORD PTR [rsp+0x40]
   140007a07:	xor    eax,eax
   140007a09:	mov    BYTE PTR [r12],0x0
   140007a0e:	mov    WORD PTR [rsi],ax
   140007a11:	mov    rax,rsi
   140007a14:	mov    rsi,QWORD PTR [rsp+0x48]
   140007a19:	add    rsp,0x20
   140007a1d:	pop    r12
   140007a1f:	ret    
   140007a20:	rex push rbx
   140007a22:	push   rsi
   140007a23:	push   rdi
   140007a24:	sub    rsp,0x60
   140007a28:	mov    ebx,edx
   140007a2a:	mov    rsi,rcx
   140007a2d:	xor    edx,edx
   140007a2f:	add    rcx,0x10
   140007a33:	call   QWORD PTR [rip+0x47a7]        # 0x14000c1e0
   140007a39:	mov    BYTE PTR [rsi+0x8c],0x1
   140007a40:	mov    DWORD PTR [rsi+0x7c],0x0
   140007a47:	cmp    ebx,0x1
   140007a4a:	jne    0x140007a70
   140007a4c:	lea    rcx,[rsp+0x88]
   140007a54:	mov    dl,0x3d
   140007a56:	call   QWORD PTR [rip+0x491c]        # 0x14000c378
   140007a5c:	lea    rcx,[rsi+0x10]
   140007a60:	movzx  edx,WORD PTR [rax]
   140007a63:	call   QWORD PTR [rip+0x48ff]        # 0x14000c368
   140007a69:	nop    DWORD PTR [rax+0x0]
   140007a70:	movzx  ecx,WORD PTR [rsi+0x58]
   140007a74:	sub    ecx,0x2f
   140007a77:	je     0x140007cd6
   140007a7d:	sub    ecx,0x2c
   140007a80:	je     0x140007b61
   140007a86:	cmp    ecx,0x1
   140007a89:	je     0x140007aeb
   140007a8b:	mov    rax,QWORD PTR [rsi+0x38]
   140007a8f:	cmp    QWORD PTR [rsi+0x30],rax
   140007a93:	ja     0x140007aa5
   140007a95:	mov    rcx,rsi
   140007a98:	call   0x140007360
   140007a9d:	test   al,al
   140007a9f:	je     0x140007c2f
   140007aa5:	lea    r8,[rip+0xa384]        # 0x140011e30
   140007aac:	lea    rdx,[rip+0xa36d]        # 0x140011e20
   140007ab3:	lea    rcx,[rsp+0x30]
   140007ab8:	xor    r9d,r9d
   140007abb:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007ac3:	call   QWORD PTR [rip+0x470f]        # 0x14000c1d8
   140007ac9:	lea    rcx,[rsi+0x18]
   140007acd:	mov    rdx,rax
   140007ad0:	call   QWORD PTR [rip+0x48ca]        # 0x14000c3a0
   140007ad6:	lea    rcx,[rsp+0x30]
   140007adb:	call   QWORD PTR [rip+0x48d7]        # 0x14000c3b8
   140007ae1:	xor    al,al
   140007ae3:	add    rsp,0x60
   140007ae7:	pop    rdi
   140007ae8:	pop    rsi
   140007ae9:	pop    rbx
   140007aea:	ret    
   140007aeb:	movzx  edx,WORD PTR [rsi+0x58]
   140007aef:	lea    rcx,[rsi+0x10]
   140007af3:	call   QWORD PTR [rip+0x486f]        # 0x14000c368
   140007af9:	mov    rcx,rsi
   140007afc:	call   0x140007730
   140007b01:	mov    r11,QWORD PTR [rsi+0x38]
   140007b05:	cmp    QWORD PTR [rsi+0x30],r11
   140007b09:	ja     0x140007b1b
   140007b0b:	mov    rcx,rsi
   140007b0e:	call   0x140007360
   140007b13:	test   al,al
   140007b15:	je     0x140007c2f
   140007b1b:	lea    r8,[rip+0xa2c6]        # 0x140011de8
   140007b22:	lea    rdx,[rip+0xa2f7]        # 0x140011e20
   140007b29:	lea    rcx,[rsp+0x38]
   140007b2e:	xor    r9d,r9d
   140007b31:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007b39:	call   QWORD PTR [rip+0x4699]        # 0x14000c1d8
   140007b3f:	lea    rcx,[rsi+0x18]
   140007b43:	mov    rdx,rax
   140007b46:	call   QWORD PTR [rip+0x4854]        # 0x14000c3a0
   140007b4c:	lea    rcx,[rsp+0x38]
   140007b51:	call   QWORD PTR [rip+0x4861]        # 0x14000c3b8
   140007b57:	xor    al,al
   140007b59:	add    rsp,0x60
   140007b5d:	pop    rdi
   140007b5e:	pop    rsi
   140007b5f:	pop    rbx
   140007b60:	ret    
   140007b61:	movzx  edx,WORD PTR [rsi+0x58]
   140007b65:	lea    rcx,[rsi+0x10]
   140007b69:	call   QWORD PTR [rip+0x47f9]        # 0x14000c368
   140007b6f:	mov    rcx,rsi
   140007b72:	call   0x140007730
   140007b77:	mov    rax,QWORD PTR [rsi+0x38]
   140007b7b:	cmp    QWORD PTR [rsi+0x30],rax
   140007b7f:	ja     0x140007c16
   140007b85:	mov    rcx,rsi
   140007b88:	call   0x140007360
   140007b8d:	test   al,al
   140007b8f:	jne    0x140007c16
   140007b95:	lea    rcx,[rsp+0x88]
   140007b9d:	mov    dl,0x5d
   140007b9f:	call   QWORD PTR [rip+0x47d3]        # 0x14000c378
   140007ba5:	movzx  eax,WORD PTR [rax]
   140007ba8:	cmp    WORD PTR [rsi+0x58],ax
   140007bac:	je     0x140007c16
   140007bae:	lea    rcx,[rsp+0x80]
   140007bb6:	mov    dl,0x5c
   140007bb8:	call   QWORD PTR [rip+0x47ba]        # 0x14000c378
   140007bbe:	movzx  edx,WORD PTR [rsi+0x58]
   140007bc2:	lea    rcx,[rsi+0x10]
   140007bc6:	movzx  eax,WORD PTR [rax]
   140007bc9:	cmp    dx,ax
   140007bcc:	jne    0x140007bfa
   140007bce:	call   QWORD PTR [rip+0x4794]        # 0x14000c368
   140007bd4:	mov    rcx,rsi
   140007bd7:	call   0x140007730
   140007bdc:	mov    r11,QWORD PTR [rsi+0x38]
   140007be0:	cmp    QWORD PTR [rsi+0x30],r11
   140007be4:	ja     0x140007c4a
   140007be6:	mov    rcx,rsi
   140007be9:	call   0x140007360
   140007bee:	test   al,al
   140007bf0:	jne    0x140007c4a
   140007bf2:	movzx  edx,WORD PTR [rsi+0x58]
   140007bf6:	lea    rcx,[rsi+0x10]
   140007bfa:	call   QWORD PTR [rip+0x4768]        # 0x14000c368
   140007c00:	mov    rcx,rsi
   140007c03:	call   0x140007730
   140007c08:	mov    rax,QWORD PTR [rsi+0x38]
   140007c0c:	cmp    QWORD PTR [rsi+0x30],rax
   140007c10:	jbe    0x140007b85
   140007c16:	lea    rcx,[rsp+0x90]
   140007c1e:	mov    dl,0x5d
   140007c20:	call   QWORD PTR [rip+0x4752]        # 0x14000c378
   140007c26:	movzx  eax,WORD PTR [rax]
   140007c29:	cmp    WORD PTR [rsi+0x58],ax
   140007c2d:	jne    0x140007c90
   140007c2f:	movzx  edx,WORD PTR [rsi+0x58]
   140007c33:	lea    rcx,[rsi+0x10]
   140007c37:	call   QWORD PTR [rip+0x472b]        # 0x14000c368
   140007c3d:	mov    rcx,rsi
   140007c40:	call   0x140007730
   140007c45:	jmp    0x140007a70
   140007c4a:	lea    r8,[rip+0xa197]        # 0x140011de8
   140007c51:	lea    rdx,[rip+0xa1c8]        # 0x140011e20
   140007c58:	lea    rcx,[rsp+0x40]
   140007c5d:	xor    r9d,r9d
   140007c60:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007c68:	call   QWORD PTR [rip+0x456a]        # 0x14000c1d8
   140007c6e:	lea    rcx,[rsi+0x18]
   140007c72:	mov    rdx,rax
   140007c75:	call   QWORD PTR [rip+0x4725]        # 0x14000c3a0
   140007c7b:	lea    rcx,[rsp+0x40]
   140007c80:	call   QWORD PTR [rip+0x4732]        # 0x14000c3b8
   140007c86:	xor    al,al
   140007c88:	add    rsp,0x60
   140007c8c:	pop    rdi
   140007c8d:	pop    rsi
   140007c8e:	pop    rbx
   140007c8f:	ret    
   140007c90:	lea    r8,[rip+0xa129]        # 0x140011dc0
   140007c97:	lea    rdx,[rip+0xa182]        # 0x140011e20
   140007c9e:	lea    rcx,[rsp+0x48]
   140007ca3:	xor    r9d,r9d
   140007ca6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007cae:	call   QWORD PTR [rip+0x4524]        # 0x14000c1d8
   140007cb4:	lea    rcx,[rsi+0x18]
   140007cb8:	mov    rdx,rax
   140007cbb:	call   QWORD PTR [rip+0x46df]        # 0x14000c3a0
   140007cc1:	lea    rcx,[rsp+0x48]
   140007cc6:	call   QWORD PTR [rip+0x46ec]        # 0x14000c3b8
   140007ccc:	xor    al,al
   140007cce:	add    rsp,0x60
   140007cd2:	pop    rdi
   140007cd3:	pop    rsi
   140007cd4:	pop    rbx
   140007cd5:	ret    
   140007cd6:	mov    rcx,rsi
   140007cd9:	call   0x140007730
   140007cde:	movzx  ecx,WORD PTR [rsi+0x58]
   140007ce2:	mov    DWORD PTR [rsi+0x7c],0x0
   140007ce9:	call   0x1400073d0
   140007cee:	test   al,al
   140007cf0:	je     0x140007d39
   140007cf2:	movzx  eax,WORD PTR [rsi+0x58]
   140007cf6:	cmp    eax,0x67
   140007cf9:	je     0x140007d13
   140007cfb:	cmp    eax,0x69
   140007cfe:	je     0x140007d0c
   140007d00:	cmp    eax,0x6d
   140007d03:	jne    0x140007d56
   140007d05:	mov    eax,0x4
   140007d0a:	jmp    0x140007d18
   140007d0c:	mov    eax,0x2
   140007d11:	jmp    0x140007d18
   140007d13:	mov    eax,0x1
   140007d18:	mov    ecx,DWORD PTR [rsi+0x7c]
   140007d1b:	test   eax,ecx
   140007d1d:	jne    0x140007d56
   140007d1f:	or     ecx,eax
   140007d21:	mov    DWORD PTR [rsi+0x7c],ecx
   140007d24:	mov    rcx,rsi
   140007d27:	call   0x140007730
   140007d2c:	movzx  ecx,WORD PTR [rsi+0x58]
   140007d30:	call   0x1400073d0
   140007d35:	test   al,al
   140007d37:	jne    0x140007cf2
   140007d39:	mov    rax,QWORD PTR [rsi+0x30]
   140007d3d:	sub    rax,QWORD PTR [rsi+0x50]
   140007d41:	sar    rax,1
   140007d44:	dec    eax
   140007d46:	mov    DWORD PTR [rsi+0x84],eax
   140007d4c:	mov    al,0x1
   140007d4e:	add    rsp,0x60
   140007d52:	pop    rdi
   140007d53:	pop    rsi
   140007d54:	pop    rbx
   140007d55:	ret    
   140007d56:	movzx  ebx,WORD PTR [rsi+0x58]
   140007d5a:	lea    rcx,[rsp+0x98]
   140007d62:	mov    dl,0x20
   140007d64:	call   QWORD PTR [rip+0x460e]        # 0x14000c378
   140007d6a:	lea    r8,[rip+0xa027]        # 0x140011d98
   140007d71:	lea    rdx,[rip+0xa0a8]        # 0x140011e20
   140007d78:	lea    rcx,[rsp+0x58]
   140007d7d:	xor    r9d,r9d
   140007d80:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007d88:	mov    rdi,rax
   140007d8b:	call   QWORD PTR [rip+0x4447]        # 0x14000c1d8
   140007d91:	lea    rdx,[rsp+0x50]
   140007d96:	mov    rcx,rax
   140007d99:	movzx  eax,WORD PTR [rdi]
   140007d9c:	xor    r9d,r9d
   140007d9f:	movzx  r8d,bx
   140007da3:	mov    WORD PTR [rsp+0x20],ax
   140007da8:	call   QWORD PTR [rip+0x4422]        # 0x14000c1d0
   140007dae:	lea    rcx,[rsi+0x18]
   140007db2:	mov    rdx,rax
   140007db5:	call   QWORD PTR [rip+0x45e5]        # 0x14000c3a0
   140007dbb:	lea    rcx,[rsp+0x50]
   140007dc0:	call   QWORD PTR [rip+0x45f2]        # 0x14000c3b8
   140007dc6:	lea    rcx,[rsp+0x58]
   140007dcb:	call   QWORD PTR [rip+0x45e7]        # 0x14000c3b8
   140007dd1:	xor    al,al
   140007dd3:	add    rsp,0x60
   140007dd7:	pop    rdi
   140007dd8:	pop    rsi
   140007dd9:	pop    rbx
   140007dda:	ret    
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	mov    WORD PTR [rsp+0x10],dx
   140007de5:	push   rbx
   140007de6:	push   rbp
   140007de7:	push   rsi
   140007de8:	push   rdi
   140007de9:	push   r12
   140007deb:	push   r13
   140007ded:	push   r15
   140007def:	sub    rsp,0xd0
   140007df6:	mov    rdi,rcx
   140007df9:	lea    rcx,[rsp+0x128]
   140007e01:	mov    dl,0x30
   140007e03:	call   QWORD PTR [rip+0x456f]        # 0x14000c378
   140007e09:	xor    r15d,r15d
   140007e0c:	mov    r11,rax
   140007e0f:	movzx  eax,WORD PTR [rsp+0x118]
   140007e17:	cmp    ax,WORD PTR [r11]
   140007e1b:	je     0x140008011
   140007e21:	movzx  ebx,WORD PTR [rdi+0x58]
   140007e25:	mov    r13,QWORD PTR [rdi+0x30]
   140007e29:	lea    rcx,[rsp+0x70]
   140007e2e:	mov    QWORD PTR [rsp+0x68],rcx
   140007e33:	mov    QWORD PTR [rsp+0x110],r14
   140007e3b:	mov    r14d,0xff
   140007e41:	movzx  ecx,al
   140007e44:	cmp    ax,r14w
   140007e48:	mov    edx,0x40
   140007e4d:	cmova  ecx,r15d
   140007e51:	mov    esi,0x1
   140007e56:	mov    DWORD PTR [rsp+0x60],edx
   140007e5a:	mov    BYTE PTR [rsp+0x70],cl
   140007e5e:	mov    DWORD PTR [rsp+0x64],esi
   140007e62:	movzx  ecx,bx
   140007e65:	cmp    ecx,0x39
   140007e68:	ja     0x140007e6f
   140007e6a:	cmp    ecx,0x30
   140007e6d:	jae    0x140007e8f
   140007e6f:	cmp    ecx,0x7f
   140007e72:	jbe    0x140007f2f
   140007e78:	call   QWORD PTR [rip+0x4342]        # 0x14000c1c0
   140007e7e:	cmp    eax,0x3
   140007e81:	jne    0x140007f2f
   140007e87:	mov    esi,DWORD PTR [rsp+0x64]
   140007e8b:	mov    edx,DWORD PTR [rsp+0x60]
   140007e8f:	cmp    bx,r14w
   140007e93:	movzx  r12d,bl
   140007e97:	cmova  r12d,r15d
   140007e9b:	cmp    esi,edx
   140007e9d:	jne    0x140007f07
   140007e9f:	mov    rbx,QWORD PTR [rsp+0x68]
   140007ea4:	lea    ebp,[rsi+rsi*1]
   140007ea7:	cmp    ebp,edx
   140007ea9:	je     0x140007ee9
   140007eab:	cmp    ebp,0x40
   140007eae:	jle    0x140007ec4
   140007eb0:	movsxd rcx,ebp
   140007eb3:	call   QWORD PTR [rip+0x424f]        # 0x14000c108
   140007eb9:	mov    DWORD PTR [rsp+0x60],ebp
   140007ebd:	mov    QWORD PTR [rsp+0x68],rax
   140007ec2:	jmp    0x140007ed6
   140007ec4:	lea    rax,[rsp+0x70]
   140007ec9:	mov    DWORD PTR [rsp+0x60],0x40
   140007ed1:	mov    QWORD PTR [rsp+0x68],rax
   140007ed6:	movsxd r8,esi
   140007ed9:	mov    rdx,rbx
   140007edc:	mov    rcx,rax
   140007edf:	mov    DWORD PTR [rsp+0x64],r15d
   140007ee4:	call   0x14000b422
   140007ee9:	lea    rax,[rsp+0x70]
   140007eee:	mov    DWORD PTR [rsp+0x64],esi
   140007ef2:	cmp    rbx,rax
   140007ef5:	je     0x140007f07
   140007ef7:	cmp    rbx,QWORD PTR [rsp+0x68]
   140007efc:	je     0x140007f07
   140007efe:	mov    rcx,rbx
   140007f01:	call   QWORD PTR [rip+0x4209]        # 0x14000c110
   140007f07:	mov    rax,QWORD PTR [rsp+0x68]
   140007f0c:	movsxd rcx,esi
   140007f0f:	inc    esi
   140007f11:	mov    DWORD PTR [rsp+0x64],esi
   140007f15:	mov    BYTE PTR [rcx+rax*1],r12b
   140007f19:	mov    bx,WORD PTR [r13+0x0]
   140007f1e:	mov    esi,DWORD PTR [rsp+0x64]
   140007f22:	mov    edx,DWORD PTR [rsp+0x60]
   140007f26:	add    r13,0x2
   140007f2a:	jmp    0x140007e62
   140007f2f:	lea    rcx,[rsp+0x128]
   140007f37:	mov    dl,0x2e
   140007f39:	call   QWORD PTR [rip+0x4439]        # 0x14000c378
   140007f3f:	mov    r14,QWORD PTR [rsp+0x110]
   140007f47:	cmp    bx,WORD PTR [rax]
   140007f4a:	je     0x140007feb
   140007f50:	lea    rcx,[rsp+0x128]
   140007f58:	mov    dl,0x65
   140007f5a:	call   QWORD PTR [rip+0x4418]        # 0x14000c378
   140007f60:	cmp    bx,WORD PTR [rax]
   140007f63:	je     0x140007feb
   140007f69:	lea    rcx,[rsp+0x128]
   140007f71:	mov    dl,0x45
   140007f73:	call   QWORD PTR [rip+0x43ff]        # 0x14000c378
   140007f79:	cmp    bx,WORD PTR [rax]
   140007f7c:	je     0x140007feb
   140007f7e:	cmp    r13,QWORD PTR [rdi+0x30]
   140007f82:	je     0x140007f94
   140007f84:	lea    rax,[r13-0x2]
   140007f88:	mov    rcx,rdi
   140007f8b:	mov    QWORD PTR [rdi+0x30],rax
   140007f8f:	call   0x140007730
   140007f94:	mov    ecx,DWORD PTR [rsp+0x64]
   140007f98:	cmp    ecx,DWORD PTR [rsp+0x60]
   140007f9c:	jne    0x140007fb2
   140007f9e:	lea    r8d,[rcx+rcx*1]
   140007fa2:	mov    edx,ecx
   140007fa4:	lea    rcx,[rsp+0x60]
   140007fa9:	call   0x140007680
   140007fae:	mov    ecx,DWORD PTR [rsp+0x64]
   140007fb2:	movsxd rax,ecx
   140007fb5:	inc    ecx
   140007fb7:	xor    edx,edx
   140007fb9:	mov    DWORD PTR [rsp+0x64],ecx
   140007fbd:	mov    rcx,rax
   140007fc0:	mov    rax,QWORD PTR [rsp+0x68]
   140007fc5:	mov    BYTE PTR [rcx+rax*1],r15b
   140007fc9:	mov    rcx,QWORD PTR [rsp+0x68]
   140007fce:	call   QWORD PTR [rip+0x412c]        # 0x14000c100
   140007fd4:	mov    rcx,QWORD PTR [rsp+0x68]
   140007fd9:	lea    rax,[rsp+0x70]
   140007fde:	cmp    rcx,rax
   140007fe1:	movsd  QWORD PTR [rdi+0x68],xmm0
   140007fe6:	jmp    0x140008951
   140007feb:	mov    rcx,QWORD PTR [rsp+0x68]
   140007ff0:	lea    rax,[rsp+0x70]
   140007ff5:	cmp    rcx,rax
   140007ff8:	je     0x140008093
   140007ffe:	call   QWORD PTR [rip+0x410c]        # 0x14000c110
   140008004:	mov    ax,WORD PTR [rsp+0x118]
   14000800c:	jmp    0x14000809b
   140008011:	movzx  ecx,WORD PTR [rdi+0x58]
   140008015:	cmp    ecx,0x39
   140008018:	ja     0x14000801f
   14000801a:	cmp    ecx,0x30
   14000801d:	jae    0x140008037
   14000801f:	cmp    ecx,0x7f
   140008022:	jbe    0x14000809b
   140008024:	call   QWORD PTR [rip+0x4196]        # 0x14000c1c0
   14000802a:	cmp    eax,0x3
   14000802d:	jne    0x140008093
   14000802f:	mov    ax,WORD PTR [rsp+0x118]
   140008037:	cmp    BYTE PTR [rdi+0x92],r15b
   14000803e:	jne    0x14000809b
   140008040:	lea    r8,[rip+0x9e71]        # 0x140011eb8
   140008047:	lea    rdx,[rip+0x9dd2]        # 0x140011e20
   14000804e:	lea    rcx,[rsp+0x128]
   140008056:	xor    r9d,r9d
   140008059:	mov    DWORD PTR [rdi+0x5c],0x1
   140008060:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008068:	call   QWORD PTR [rip+0x416a]        # 0x14000c1d8
   14000806e:	lea    rcx,[rdi+0x18]
   140008072:	mov    rdx,rax
   140008075:	call   QWORD PTR [rip+0x4325]        # 0x14000c3a0
   14000807b:	lea    rcx,[rsp+0x128]
   140008083:	call   QWORD PTR [rip+0x432f]        # 0x14000c3b8
   140008089:	mov    eax,0x61
   14000808e:	jmp    0x14000895e
   140008093:	mov    ax,WORD PTR [rsp+0x118]
   14000809b:	lea    rcx,[rsp+0x40]
   1400080a0:	mov    dl,0x30
   1400080a2:	mov    DWORD PTR [rsp+0x30],0x20
   1400080aa:	mov    QWORD PTR [rsp+0x38],rcx
   1400080af:	lea    rcx,[rsp+0x128]
   1400080b7:	mov    DWORD PTR [rsp+0x34],0x1
   1400080bf:	mov    BYTE PTR [rsp+0x40],al
   1400080c3:	call   QWORD PTR [rip+0x42af]        # 0x14000c378
   1400080c9:	movzx  eax,WORD PTR [rax]
   1400080cc:	cmp    WORD PTR [rsp+0x118],ax
   1400080d4:	jne    0x1400082f7
   1400080da:	lea    rcx,[rsp+0x128]
   1400080e2:	mov    dl,0x78
   1400080e4:	call   QWORD PTR [rip+0x428e]        # 0x14000c378
   1400080ea:	movzx  ecx,WORD PTR [rdi+0x58]
   1400080ee:	cmp    cx,WORD PTR [rax]
   1400080f1:	je     0x140008110
   1400080f3:	lea    rcx,[rsp+0x128]
   1400080fb:	mov    dl,0x58
   1400080fd:	call   QWORD PTR [rip+0x4275]        # 0x14000c378
   140008103:	mov    cx,WORD PTR [rdi+0x58]
   140008107:	cmp    cx,WORD PTR [rax]
   14000810a:	jne    0x1400082f7
   140008110:	movzx  ebx,BYTE PTR [rdi+0x58]
   140008114:	mov    WORD PTR [rsp+0x118],cx
   14000811c:	mov    ecx,DWORD PTR [rsp+0x34]
   140008120:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008124:	jne    0x14000813a
   140008126:	lea    r8d,[rcx+rcx*1]
   14000812a:	mov    edx,ecx
   14000812c:	lea    rcx,[rsp+0x30]
   140008131:	call   0x1400075d0
   140008136:	mov    ecx,DWORD PTR [rsp+0x34]
   14000813a:	movsxd rax,ecx
   14000813d:	inc    ecx
   14000813f:	mov    DWORD PTR [rsp+0x34],ecx
   140008143:	mov    rcx,rax
   140008146:	mov    rax,QWORD PTR [rsp+0x38]
   14000814b:	mov    BYTE PTR [rcx+rax*1],bl
   14000814e:	mov    rcx,rdi
   140008151:	call   0x140007730
   140008156:	movzx  ecx,WORD PTR [rdi+0x58]
   14000815a:	call   0x140007490
   14000815f:	test   al,al
   140008161:	je     0x140008215
   140008167:	nop    WORD PTR [rax+rax*1+0x0]
   140008170:	movsxd rbx,DWORD PTR [rsp+0x34]
   140008175:	mov    eax,DWORD PTR [rsp+0x30]
   140008179:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000817e:	cmp    ebx,eax
   140008180:	jne    0x1400081ea
   140008182:	mov    rsi,QWORD PTR [rsp+0x38]
   140008187:	lea    ebp,[rbx+rbx*1]
   14000818a:	cmp    ebp,eax
   14000818c:	je     0x1400081cc
   14000818e:	cmp    ebp,0x20
   140008191:	jle    0x1400081a7
   140008193:	movsxd rcx,ebp
   140008196:	call   QWORD PTR [rip+0x3f6c]        # 0x14000c108
   14000819c:	mov    DWORD PTR [rsp+0x30],ebp
   1400081a0:	mov    QWORD PTR [rsp+0x38],rax
   1400081a5:	jmp    0x1400081b9
   1400081a7:	lea    rax,[rsp+0x40]
   1400081ac:	mov    DWORD PTR [rsp+0x30],0x20
   1400081b4:	mov    QWORD PTR [rsp+0x38],rax
   1400081b9:	mov    r8,rbx
   1400081bc:	mov    rdx,rsi
   1400081bf:	mov    rcx,rax
   1400081c2:	mov    DWORD PTR [rsp+0x34],r15d
   1400081c7:	call   0x14000b422
   1400081cc:	lea    rax,[rsp+0x40]
   1400081d1:	mov    DWORD PTR [rsp+0x34],ebx
   1400081d5:	cmp    rsi,rax
   1400081d8:	je     0x1400081ea
   1400081da:	cmp    rsi,QWORD PTR [rsp+0x38]
   1400081df:	je     0x1400081ea
   1400081e1:	mov    rcx,rsi
   1400081e4:	call   QWORD PTR [rip+0x3f26]        # 0x14000c110
   1400081ea:	mov    rax,QWORD PTR [rsp+0x38]
   1400081ef:	mov    rcx,rbx
   1400081f2:	inc    ebx
   1400081f4:	mov    DWORD PTR [rsp+0x34],ebx
   1400081f8:	mov    BYTE PTR [rcx+rax*1],r12b
   1400081fc:	mov    rcx,rdi
   1400081ff:	call   0x140007730
   140008204:	movzx  ecx,WORD PTR [rdi+0x58]
   140008208:	call   0x140007490
   14000820d:	test   al,al
   14000820f:	jne    0x140008170
   140008215:	mov    edx,DWORD PTR [rsp+0x34]
   140008219:	cmp    edx,0x3
   14000821c:	jge    0x1400082d0
   140008222:	lea    rcx,[rsp+0x128]
   14000822a:	mov    dl,0x20
   14000822c:	mov    DWORD PTR [rdi+0x5c],0x2
   140008233:	call   QWORD PTR [rip+0x413f]        # 0x14000c378
   140008239:	lea    r8,[rip+0x9c40]        # 0x140011e80
   140008240:	lea    rdx,[rip+0x9bd9]        # 0x140011e20
   140008247:	lea    rcx,[rsp+0xb8]
   14000824f:	xor    r9d,r9d
   140008252:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000825a:	mov    rbx,rax
   14000825d:	call   QWORD PTR [rip+0x3f75]        # 0x14000c1d8
   140008263:	movzx  r8d,WORD PTR [rsp+0x118]
   14000826c:	mov    rcx,rax
   14000826f:	movzx  eax,WORD PTR [rbx]
   140008272:	lea    rdx,[rsp+0xc0]
   14000827a:	xor    r9d,r9d
   14000827d:	mov    WORD PTR [rsp+0x20],ax
   140008282:	call   QWORD PTR [rip+0x3f48]        # 0x14000c1d0
   140008288:	lea    rcx,[rdi+0x18]
   14000828c:	mov    rdx,rax
   14000828f:	call   QWORD PTR [rip+0x410b]        # 0x14000c3a0
   140008295:	lea    rcx,[rsp+0xc0]
   14000829d:	call   QWORD PTR [rip+0x4115]        # 0x14000c3b8
   1400082a3:	lea    rcx,[rsp+0xb8]
   1400082ab:	call   QWORD PTR [rip+0x4107]        # 0x14000c3b8
   1400082b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400082b6:	lea    r11,[rsp+0x40]
   1400082bb:	cmp    rcx,r11
   1400082be:	je     0x1400082c6
   1400082c0:	call   QWORD PTR [rip+0x3e4a]        # 0x14000c110
   1400082c6:	mov    eax,0x61
   1400082cb:	jmp    0x14000895e
   1400082d0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400082d5:	mov    r8d,0x10
   1400082db:	call   0x14000acb0
   1400082e0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400082e5:	lea    rax,[rsp+0x40]
   1400082ea:	cmp    rcx,rax
   1400082ed:	movsd  QWORD PTR [rdi+0x68],xmm0
   1400082f2:	jmp    0x140008951
   1400082f7:	movzx  ecx,WORD PTR [rdi+0x58]
   1400082fb:	cmp    ecx,0x39
   1400082fe:	ja     0x140008305
   140008300:	cmp    ecx,0x30
   140008303:	jae    0x14000831d
   140008305:	cmp    ecx,0x7f
   140008308:	jbe    0x1400083b6
   14000830e:	call   QWORD PTR [rip+0x3eac]        # 0x14000c1c0
   140008314:	cmp    eax,0x3
   140008317:	jne    0x1400083b6
   14000831d:	movsxd rbx,DWORD PTR [rsp+0x34]
   140008322:	mov    eax,DWORD PTR [rsp+0x30]
   140008326:	movzx  r12d,BYTE PTR [rdi+0x58]
   14000832b:	cmp    ebx,eax
   14000832d:	jne    0x140008397
   14000832f:	mov    rsi,QWORD PTR [rsp+0x38]
   140008334:	lea    ebp,[rbx+rbx*1]
   140008337:	cmp    ebp,eax
   140008339:	je     0x140008379
   14000833b:	cmp    ebp,0x20
   14000833e:	jle    0x140008354
   140008340:	movsxd rcx,ebp
   140008343:	call   QWORD PTR [rip+0x3dbf]        # 0x14000c108
   140008349:	mov    DWORD PTR [rsp+0x30],ebp
   14000834d:	mov    QWORD PTR [rsp+0x38],rax
   140008352:	jmp    0x140008366
   140008354:	lea    rax,[rsp+0x40]
   140008359:	mov    DWORD PTR [rsp+0x30],0x20
   140008361:	mov    QWORD PTR [rsp+0x38],rax
   140008366:	mov    r8,rbx
   140008369:	mov    rdx,rsi
   14000836c:	mov    rcx,rax
   14000836f:	mov    DWORD PTR [rsp+0x34],r15d
   140008374:	call   0x14000b422
   140008379:	lea    rax,[rsp+0x40]
   14000837e:	mov    DWORD PTR [rsp+0x34],ebx
   140008382:	cmp    rsi,rax
   140008385:	je     0x140008397
   140008387:	cmp    rsi,QWORD PTR [rsp+0x38]
   14000838c:	je     0x140008397
   14000838e:	mov    rcx,rsi
   140008391:	call   QWORD PTR [rip+0x3d79]        # 0x14000c110
   140008397:	mov    rax,QWORD PTR [rsp+0x38]
   14000839c:	mov    rcx,rbx
   14000839f:	inc    ebx
   1400083a1:	mov    DWORD PTR [rsp+0x34],ebx
   1400083a5:	mov    BYTE PTR [rcx+rax*1],r12b
   1400083a9:	mov    rcx,rdi
   1400083ac:	call   0x140007730
   1400083b1:	jmp    0x1400082f7
   1400083b6:	lea    rcx,[rsp+0x128]
   1400083be:	mov    dl,0x2e
   1400083c0:	call   QWORD PTR [rip+0x3fb2]        # 0x14000c378
   1400083c6:	movzx  eax,WORD PTR [rax]
   1400083c9:	cmp    WORD PTR [rdi+0x58],ax
   1400083cd:	jne    0x14000869d
   1400083d3:	mov    ecx,DWORD PTR [rsp+0x34]
   1400083d7:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400083db:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400083df:	jne    0x1400083f5
   1400083e1:	lea    r8d,[rcx+rcx*1]
   1400083e5:	mov    edx,ecx
   1400083e7:	lea    rcx,[rsp+0x30]
   1400083ec:	call   0x1400075d0
   1400083f1:	mov    ecx,DWORD PTR [rsp+0x34]
   1400083f5:	movsxd rax,ecx
   1400083f8:	inc    ecx
   1400083fa:	mov    DWORD PTR [rsp+0x34],ecx
   1400083fe:	mov    rcx,rax
   140008401:	mov    rax,QWORD PTR [rsp+0x38]
   140008406:	mov    BYTE PTR [rcx+rax*1],bl
   140008409:	mov    rcx,rdi
   14000840c:	call   0x140007730
   140008411:	movzx  ecx,WORD PTR [rdi+0x58]
   140008415:	cmp    ecx,0x39
   140008418:	ja     0x14000841f
   14000841a:	cmp    ecx,0x30
   14000841d:	jae    0x140008437
   14000841f:	cmp    ecx,0x7f
   140008422:	jbe    0x1400084d0
   140008428:	call   QWORD PTR [rip+0x3d92]        # 0x14000c1c0
   14000842e:	cmp    eax,0x3
   140008431:	jne    0x1400084d0
   140008437:	movsxd rbx,DWORD PTR [rsp+0x34]
   14000843c:	mov    eax,DWORD PTR [rsp+0x30]
   140008440:	movzx  r12d,BYTE PTR [rdi+0x58]
   140008445:	cmp    ebx,eax
   140008447:	jne    0x1400084b1
   140008449:	mov    rsi,QWORD PTR [rsp+0x38]
   14000844e:	lea    ebp,[rbx+rbx*1]
   140008451:	cmp    ebp,eax
   140008453:	je     0x140008493
   140008455:	cmp    ebp,0x20
   140008458:	jle    0x14000846e
   14000845a:	movsxd rcx,ebp
   14000845d:	call   QWORD PTR [rip+0x3ca5]        # 0x14000c108
   140008463:	mov    DWORD PTR [rsp+0x30],ebp
   140008467:	mov    QWORD PTR [rsp+0x38],rax
   14000846c:	jmp    0x140008480
   14000846e:	lea    rax,[rsp+0x40]
   140008473:	mov    DWORD PTR [rsp+0x30],0x20
   14000847b:	mov    QWORD PTR [rsp+0x38],rax
   140008480:	mov    r8,rbx
   140008483:	mov    rdx,rsi
   140008486:	mov    rcx,rax
   140008489:	mov    DWORD PTR [rsp+0x34],r15d
   14000848e:	call   0x14000b422
   140008493:	lea    rax,[rsp+0x40]
   140008498:	mov    DWORD PTR [rsp+0x34],ebx
   14000849c:	cmp    rsi,rax
   14000849f:	je     0x1400084b1
   1400084a1:	cmp    rsi,QWORD PTR [rsp+0x38]
   1400084a6:	je     0x1400084b1
   1400084a8:	mov    rcx,rsi
   1400084ab:	call   QWORD PTR [rip+0x3c5f]        # 0x14000c110
   1400084b1:	mov    rax,QWORD PTR [rsp+0x38]
   1400084b6:	mov    rcx,rbx
   1400084b9:	inc    ebx
   1400084bb:	mov    DWORD PTR [rsp+0x34],ebx
   1400084bf:	mov    BYTE PTR [rcx+rax*1],r12b
   1400084c3:	mov    rcx,rdi
   1400084c6:	call   0x140007730
   1400084cb:	jmp    0x140008411
   1400084d0:	lea    rcx,[rsp+0x128]
   1400084d8:	mov    dl,0x65
   1400084da:	call   QWORD PTR [rip+0x3e98]        # 0x14000c378
   1400084e0:	movzx  eax,WORD PTR [rax]
   1400084e3:	cmp    WORD PTR [rdi+0x58],ax
   1400084e7:	je     0x140008506
   1400084e9:	lea    rcx,[rsp+0x128]
   1400084f1:	mov    dl,0x45
   1400084f3:	call   QWORD PTR [rip+0x3e7f]        # 0x14000c378
   1400084f9:	movzx  eax,WORD PTR [rax]
   1400084fc:	cmp    WORD PTR [rdi+0x58],ax
   140008500:	jne    0x140008862
   140008506:	mov    rax,QWORD PTR [rdi+0x30]
   14000850a:	movzx  ecx,WORD PTR [rax]
   14000850d:	cmp    ecx,0x39
   140008510:	ja     0x140008517
   140008512:	cmp    ecx,0x30
   140008515:	jae    0x140008589
   140008517:	cmp    ecx,0x7f
   14000851a:	jbe    0x140008527
   14000851c:	call   QWORD PTR [rip+0x3c9e]        # 0x14000c1c0
   140008522:	cmp    eax,0x3
   140008525:	je     0x140008589
   140008527:	lea    rcx,[rsp+0x128]
   14000852f:	mov    dl,0x2b
   140008531:	call   QWORD PTR [rip+0x3e41]        # 0x14000c378
   140008537:	mov    rcx,QWORD PTR [rdi+0x30]
   14000853b:	movzx  eax,WORD PTR [rax]
   14000853e:	cmp    WORD PTR [rcx],ax
   140008541:	je     0x140008563
   140008543:	lea    rcx,[rsp+0x128]
   14000854b:	mov    dl,0x2d
   14000854d:	call   QWORD PTR [rip+0x3e25]        # 0x14000c378
   140008553:	mov    rcx,QWORD PTR [rdi+0x30]
   140008557:	movzx  eax,WORD PTR [rax]
   14000855a:	cmp    WORD PTR [rcx],ax
   14000855d:	jne    0x140008862
   140008563:	movzx  ecx,WORD PTR [rcx+0x2]
   140008567:	cmp    ecx,0x39
   14000856a:	ja     0x140008571
   14000856c:	cmp    ecx,0x30
   14000856f:	jae    0x140008589
   140008571:	cmp    ecx,0x7f
   140008574:	jbe    0x140008862
   14000857a:	call   QWORD PTR [rip+0x3c40]        # 0x14000c1c0
   140008580:	cmp    eax,0x3
   140008583:	jne    0x140008862
   140008589:	mov    ecx,DWORD PTR [rsp+0x34]
   14000858d:	movzx  ebx,BYTE PTR [rdi+0x58]
   140008591:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008595:	jne    0x1400085ab
   140008597:	lea    r8d,[rcx+rcx*1]
   14000859b:	mov    edx,ecx
   14000859d:	lea    rcx,[rsp+0x30]
   1400085a2:	call   0x1400075d0
   1400085a7:	mov    ecx,DWORD PTR [rsp+0x34]
   1400085ab:	movsxd rax,ecx
   1400085ae:	inc    ecx
   1400085b0:	mov    DWORD PTR [rsp+0x34],ecx
   1400085b4:	mov    rcx,rax
   1400085b7:	mov    rax,QWORD PTR [rsp+0x38]
   1400085bc:	mov    BYTE PTR [rcx+rax*1],bl
   1400085bf:	mov    rcx,rdi
   1400085c2:	call   0x140007730
   1400085c7:	lea    rcx,[rsp+0x128]
   1400085cf:	mov    dl,0x2b
   1400085d1:	call   QWORD PTR [rip+0x3da1]        # 0x14000c378
   1400085d7:	movzx  eax,WORD PTR [rax]
   1400085da:	cmp    WORD PTR [rdi+0x58],ax
   1400085de:	je     0x1400085f9
   1400085e0:	lea    rcx,[rsp+0x128]
   1400085e8:	mov    dl,0x2d
   1400085ea:	call   QWORD PTR [rip+0x3d88]        # 0x14000c378
   1400085f0:	movzx  eax,WORD PTR [rax]
   1400085f3:	cmp    WORD PTR [rdi+0x58],ax
   1400085f7:	jne    0x140008637
   1400085f9:	mov    ecx,DWORD PTR [rsp+0x34]
   1400085fd:	movzx  ebx,BYTE PTR [rdi+0x58]
   140008601:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008605:	jne    0x14000861b
   140008607:	lea    r8d,[rcx+rcx*1]
   14000860b:	mov    edx,ecx
   14000860d:	lea    rcx,[rsp+0x30]
   140008612:	call   0x1400075d0
   140008617:	mov    ecx,DWORD PTR [rsp+0x34]
   14000861b:	movsxd rax,ecx
   14000861e:	inc    ecx
   140008620:	mov    DWORD PTR [rsp+0x34],ecx
   140008624:	mov    rcx,rax
   140008627:	mov    rax,QWORD PTR [rsp+0x38]
   14000862c:	mov    BYTE PTR [rcx+rax*1],bl
   14000862f:	mov    rcx,rdi
   140008632:	call   0x140007730
   140008637:	movzx  ecx,WORD PTR [rdi+0x58]
   14000863b:	cmp    ecx,0x39
   14000863e:	ja     0x140008645
   140008640:	cmp    ecx,0x30
   140008643:	jae    0x14000865d
   140008645:	cmp    ecx,0x7f
   140008648:	jbe    0x140008862
   14000864e:	call   QWORD PTR [rip+0x3b6c]        # 0x14000c1c0
   140008654:	cmp    eax,0x3
   140008657:	jne    0x140008862
   14000865d:	mov    ecx,DWORD PTR [rsp+0x34]
   140008661:	movzx  ebx,BYTE PTR [rdi+0x58]
   140008665:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008669:	jne    0x14000867f
   14000866b:	lea    r8d,[rcx+rcx*1]
   14000866f:	mov    edx,ecx
   140008671:	lea    rcx,[rsp+0x30]
   140008676:	call   0x1400075d0
   14000867b:	mov    ecx,DWORD PTR [rsp+0x34]
   14000867f:	movsxd rax,ecx
   140008682:	inc    ecx
   140008684:	mov    DWORD PTR [rsp+0x34],ecx
   140008688:	mov    rcx,rax
   14000868b:	mov    rax,QWORD PTR [rsp+0x38]
   140008690:	mov    BYTE PTR [rcx+rax*1],bl
   140008693:	mov    rcx,rdi
   140008696:	call   0x140007730
   14000869b:	jmp    0x140008637
   14000869d:	lea    rcx,[rsp+0x128]
   1400086a5:	mov    dl,0x65
   1400086a7:	call   QWORD PTR [rip+0x3ccb]        # 0x14000c378
   1400086ad:	movzx  eax,WORD PTR [rax]
   1400086b0:	cmp    WORD PTR [rdi+0x58],ax
   1400086b4:	je     0x1400086d3
   1400086b6:	lea    rcx,[rsp+0x128]
   1400086be:	mov    dl,0x45
   1400086c0:	call   QWORD PTR [rip+0x3cb2]        # 0x14000c378
   1400086c6:	movzx  eax,WORD PTR [rax]
   1400086c9:	cmp    WORD PTR [rdi+0x58],ax
   1400086cd:	jne    0x140008862
   1400086d3:	mov    rax,QWORD PTR [rdi+0x30]
   1400086d7:	movzx  ecx,WORD PTR [rax]
   1400086da:	cmp    ecx,0x39
   1400086dd:	ja     0x1400086e4
   1400086df:	cmp    ecx,0x30
   1400086e2:	jae    0x140008756
   1400086e4:	cmp    ecx,0x7f
   1400086e7:	jbe    0x1400086f4
   1400086e9:	call   QWORD PTR [rip+0x3ad1]        # 0x14000c1c0
   1400086ef:	cmp    eax,0x3
   1400086f2:	je     0x140008756
   1400086f4:	lea    rcx,[rsp+0x128]
   1400086fc:	mov    dl,0x2b
   1400086fe:	call   QWORD PTR [rip+0x3c74]        # 0x14000c378
   140008704:	mov    rcx,QWORD PTR [rdi+0x30]
   140008708:	movzx  eax,WORD PTR [rax]
   14000870b:	cmp    WORD PTR [rcx],ax
   14000870e:	je     0x140008730
   140008710:	lea    rcx,[rsp+0x128]
   140008718:	mov    dl,0x2d
   14000871a:	call   QWORD PTR [rip+0x3c58]        # 0x14000c378
   140008720:	mov    rcx,QWORD PTR [rdi+0x30]
   140008724:	movzx  eax,WORD PTR [rax]
   140008727:	cmp    WORD PTR [rcx],ax
   14000872a:	jne    0x140008862
   140008730:	movzx  ecx,WORD PTR [rcx+0x2]
   140008734:	cmp    ecx,0x39
   140008737:	ja     0x14000873e
   140008739:	cmp    ecx,0x30
   14000873c:	jae    0x140008756
   14000873e:	cmp    ecx,0x7f
   140008741:	jbe    0x140008862
   140008747:	call   QWORD PTR [rip+0x3a73]        # 0x14000c1c0
   14000874d:	cmp    eax,0x3
   140008750:	jne    0x140008862
   140008756:	mov    ecx,DWORD PTR [rsp+0x34]
   14000875a:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000875e:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008762:	jne    0x140008778
   140008764:	lea    r8d,[rcx+rcx*1]
   140008768:	mov    edx,ecx
   14000876a:	lea    rcx,[rsp+0x30]
   14000876f:	call   0x1400075d0
   140008774:	mov    ecx,DWORD PTR [rsp+0x34]
   140008778:	movsxd rax,ecx
   14000877b:	inc    ecx
   14000877d:	mov    DWORD PTR [rsp+0x34],ecx
   140008781:	mov    rcx,rax
   140008784:	mov    rax,QWORD PTR [rsp+0x38]
   140008789:	mov    BYTE PTR [rcx+rax*1],bl
   14000878c:	mov    rcx,rdi
   14000878f:	call   0x140007730
   140008794:	lea    rcx,[rsp+0x128]
   14000879c:	mov    dl,0x2b
   14000879e:	call   QWORD PTR [rip+0x3bd4]        # 0x14000c378
   1400087a4:	movzx  eax,WORD PTR [rax]
   1400087a7:	cmp    WORD PTR [rdi+0x58],ax
   1400087ab:	je     0x1400087c6
   1400087ad:	lea    rcx,[rsp+0x128]
   1400087b5:	mov    dl,0x2d
   1400087b7:	call   QWORD PTR [rip+0x3bbb]        # 0x14000c378
   1400087bd:	movzx  eax,WORD PTR [rax]
   1400087c0:	cmp    WORD PTR [rdi+0x58],ax
   1400087c4:	jne    0x140008804
   1400087c6:	mov    ecx,DWORD PTR [rsp+0x34]
   1400087ca:	movzx  ebx,BYTE PTR [rdi+0x58]
   1400087ce:	cmp    ecx,DWORD PTR [rsp+0x30]
   1400087d2:	jne    0x1400087e8
   1400087d4:	lea    r8d,[rcx+rcx*1]
   1400087d8:	mov    edx,ecx
   1400087da:	lea    rcx,[rsp+0x30]
   1400087df:	call   0x1400075d0
   1400087e4:	mov    ecx,DWORD PTR [rsp+0x34]
   1400087e8:	movsxd rax,ecx
   1400087eb:	inc    ecx
   1400087ed:	mov    DWORD PTR [rsp+0x34],ecx
   1400087f1:	mov    rcx,rax
   1400087f4:	mov    rax,QWORD PTR [rsp+0x38]
   1400087f9:	mov    BYTE PTR [rcx+rax*1],bl
   1400087fc:	mov    rcx,rdi
   1400087ff:	call   0x140007730
   140008804:	movzx  ecx,WORD PTR [rdi+0x58]
   140008808:	cmp    ecx,0x39
   14000880b:	ja     0x140008812
   14000880d:	cmp    ecx,0x30
   140008810:	jae    0x140008822
   140008812:	cmp    ecx,0x7f
   140008815:	jbe    0x140008862
   140008817:	call   QWORD PTR [rip+0x39a3]        # 0x14000c1c0
   14000881d:	cmp    eax,0x3
   140008820:	jne    0x140008862
   140008822:	mov    ecx,DWORD PTR [rsp+0x34]
   140008826:	movzx  ebx,BYTE PTR [rdi+0x58]
   14000882a:	cmp    ecx,DWORD PTR [rsp+0x30]
   14000882e:	jne    0x140008844
   140008830:	lea    r8d,[rcx+rcx*1]
   140008834:	mov    edx,ecx
   140008836:	lea    rcx,[rsp+0x30]
   14000883b:	call   0x1400075d0
   140008840:	mov    ecx,DWORD PTR [rsp+0x34]
   140008844:	movsxd rax,ecx
   140008847:	inc    ecx
   140008849:	mov    DWORD PTR [rsp+0x34],ecx
   14000884d:	mov    rcx,rax
   140008850:	mov    rax,QWORD PTR [rsp+0x38]
   140008855:	mov    BYTE PTR [rcx+rax*1],bl
   140008858:	mov    rcx,rdi
   14000885b:	call   0x140007730
   140008860:	jmp    0x140008804
   140008862:	mov    ecx,DWORD PTR [rsp+0x34]
   140008866:	cmp    ecx,0x1
   140008869:	jne    0x140008881
   14000886b:	mov    rcx,QWORD PTR [rsp+0x38]
   140008870:	lea    rax,[rsp+0x40]
   140008875:	mov    QWORD PTR [rdi+0x68],r15
   140008879:	cmp    rcx,rax
   14000887c:	jmp    0x140008951
   140008881:	cmp    ecx,DWORD PTR [rsp+0x30]
   140008885:	jne    0x14000889b
   140008887:	lea    r8d,[rcx+rcx*1]
   14000888b:	mov    edx,ecx
   14000888d:	lea    rcx,[rsp+0x30]
   140008892:	call   0x1400075d0
   140008897:	mov    ecx,DWORD PTR [rsp+0x34]
   14000889b:	movsxd rax,ecx
   14000889e:	inc    ecx
   1400088a0:	lea    r8,[rsp+0x120]
   1400088a8:	mov    DWORD PTR [rsp+0x34],ecx
   1400088ac:	mov    rcx,rax
   1400088af:	mov    rax,QWORD PTR [rsp+0x38]
   1400088b4:	mov    BYTE PTR [rcx+rax*1],r15b
   1400088b8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400088bd:	lea    rdx,[rsp+0xb0]
   1400088c5:	mov    rcx,rbx
   1400088c8:	mov    QWORD PTR [rsp+0xb0],r15
   1400088d0:	mov    BYTE PTR [rsp+0x120],r15b
   1400088d8:	call   QWORD PTR [rip+0x390a]        # 0x14000c1e8
   1400088de:	mov    eax,DWORD PTR [rsp+0x34]
   1400088e2:	dec    eax
   1400088e4:	movsxd rcx,eax
   1400088e7:	mov    rax,QWORD PTR [rsp+0xb0]
   1400088ef:	movsd  QWORD PTR [rdi+0x68],xmm0
   1400088f4:	sub    rax,rbx
   1400088f7:	cmp    rax,rcx
   1400088fa:	je     0x140008944
   1400088fc:	lea    r8,[rip+0x9555]        # 0x140011e58
   140008903:	lea    rdx,[rip+0x9516]        # 0x140011e20
   14000890a:	lea    rcx,[rsp+0x128]
   140008912:	xor    r9d,r9d
   140008915:	mov    DWORD PTR [rdi+0x5c],0x7
   14000891c:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008924:	call   QWORD PTR [rip+0x38ae]        # 0x14000c1d8
   14000892a:	lea    rcx,[rdi+0x18]
   14000892e:	mov    rdx,rax
   140008931:	call   QWORD PTR [rip+0x3a69]        # 0x14000c3a0
   140008937:	lea    rcx,[rsp+0x128]
   14000893f:	jmp    0x1400082ab
   140008944:	mov    rcx,QWORD PTR [rsp+0x38]
   140008949:	lea    rax,[rsp+0x40]
   14000894e:	cmp    rcx,rax
   140008951:	je     0x140008959
   140008953:	call   QWORD PTR [rip+0x37b7]        # 0x14000c110
   140008959:	mov    eax,0x2f
   14000895e:	add    rsp,0xd0
   140008965:	pop    r15
   140008967:	pop    r13
   140008969:	pop    r12
   14000896b:	pop    rdi
   14000896c:	pop    rsi
   14000896d:	pop    rbp
   14000896e:	pop    rbx
   14000896f:	ret    
   140008970:	rex push rbp
   140008972:	sub    rsp,0x180
   140008979:	mov    eax,DWORD PTR [rcx+0x78]
   14000897c:	mov    rbp,rcx
   14000897f:	cmp    eax,0xffffffff
   140008982:	je     0x140008994
   140008984:	mov    DWORD PTR [rcx+0x78],0xffffffff
   14000898b:	add    rsp,0x180
   140008992:	pop    rbp
   140008993:	ret    
   140008994:	mov    QWORD PTR [rsp+0x160],r12
   14000899c:	mov    QWORD PTR [rsp+0x158],r13
   1400089a4:	mov    QWORD PTR [rsp+0x178],rbx
   1400089ac:	mov    QWORD PTR [rsp+0x170],rsi
   1400089b4:	mov    BYTE PTR [rcx+0x8f],0x0
   1400089bb:	xor    r12d,r12d
   1400089be:	mov    QWORD PTR [rsp+0x168],rdi
   1400089c6:	lea    r13,[rip+0xffffffffffff7633]        # 0x140000000
   1400089cd:	nop    DWORD PTR [rax]
   1400089d0:	mov    rax,QWORD PTR [rbp+0x40]
   1400089d4:	movzx  ecx,WORD PTR [rbp+0x58]
   1400089d8:	mov    BYTE PTR [rbp+0x8c],r12b
   1400089df:	mov    QWORD PTR [rbp+0x48],rax
   1400089e3:	call   QWORD PTR [rip+0x39e7]        # 0x14000c3d0
   1400089e9:	test   al,al
   1400089eb:	je     0x140008a4f
   1400089ed:	nop    DWORD PTR [rax]
   1400089f0:	mov    rcx,rbp
   1400089f3:	call   0x140007390
   1400089f8:	test   eax,eax
   1400089fa:	je     0x140008a39
   1400089fc:	mov    ecx,eax
   1400089fe:	mov    rax,QWORD PTR [rbp+0x30]
   140008a02:	lea    rcx,[rax+rcx*2-0x2]
   140008a07:	mov    QWORD PTR [rbp+0x48],rcx
   140008a0b:	cmp    BYTE PTR [rbp+0x8e],r12b
   140008a12:	jne    0x140008c29
   140008a18:	cmp    DWORD PTR [rbp+0x70],0x2
   140008a1c:	mov    BYTE PTR [rbp+0x8f],0x1
   140008a23:	jne    0x140008a32
   140008a25:	mov    BYTE PTR [rbp+0x8d],0x1
   140008a2c:	mov    DWORD PTR [rbp+0x70],r12d
   140008a30:	jmp    0x140008a39
   140008a32:	mov    BYTE PTR [rbp+0x8d],r12b
   140008a39:	mov    rcx,rbp
   140008a3c:	call   0x140007730
   140008a41:	movzx  ecx,WORD PTR [rbp+0x58]
   140008a45:	call   QWORD PTR [rip+0x3985]        # 0x14000c3d0
   140008a4b:	test   al,al
   140008a4d:	jne    0x1400089f0
   140008a4f:	mov    rcx,QWORD PTR [rbp+0x30]
   140008a53:	lea    rax,[rcx-0x2]
   140008a57:	mov    QWORD PTR [rbp+0x50],rax
   140008a5b:	mov    eax,DWORD PTR [rbp+0x60]
   140008a5e:	mov    DWORD PTR [rbp+0x88],eax
   140008a64:	cmp    rcx,QWORD PTR [rbp+0x38]
   140008a68:	ja     0x140009e97
   140008a6e:	movzx  ebx,WORD PTR [rbp+0x58]
   140008a72:	mov    rcx,rbp
   140008a75:	call   0x140007730
   140008a7a:	lea    r11d,[rbx-0x21]
   140008a7e:	cmp    r11d,0x5d
   140008a82:	ja     0x140009b5d
   140008a88:	movsxd rax,r11d
   140008a8b:	movzx  eax,BYTE PTR [r13+rax*1+0x9f38]
   140008a94:	mov    ecx,DWORD PTR [r13+rax*4+0x9ecc]
   140008a9c:	add    rcx,r13
   140008a9f:	jmp    rcx
   140008aa1:	lea    rcx,[rsp+0xa2]
   140008aa9:	mov    dl,0x2a
   140008aab:	call   QWORD PTR [rip+0x38c7]        # 0x14000c378
   140008ab1:	movzx  eax,WORD PTR [rax]
   140008ab4:	cmp    WORD PTR [rbp+0x58],ax
   140008ab8:	jne    0x140008b8c
   140008abe:	mov    rcx,rbp
   140008ac1:	call   0x140007730
   140008ac6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008ad0:	mov    rax,QWORD PTR [rbp+0x38]
   140008ad4:	cmp    QWORD PTR [rbp+0x30],rax
   140008ad8:	ja     0x140008c48
   140008ade:	lea    rcx,[rsp+0xc0]
   140008ae6:	mov    dl,0x2a
   140008ae8:	call   QWORD PTR [rip+0x388a]        # 0x14000c378
   140008aee:	movzx  eax,WORD PTR [rax]
   140008af1:	cmp    WORD PTR [rbp+0x58],ax
   140008af5:	jne    0x140008b7f
   140008afb:	mov    rcx,rbp
   140008afe:	call   0x140007730
   140008b03:	lea    rcx,[rsp+0xaa]
   140008b0b:	mov    dl,0x2f
   140008b0d:	call   QWORD PTR [rip+0x3865]        # 0x14000c378
   140008b13:	movzx  eax,WORD PTR [rax]
   140008b16:	cmp    WORD PTR [rbp+0x58],ax
   140008b1a:	jne    0x140008ad0
   140008b1c:	mov    rcx,rbp
   140008b1f:	call   0x140007730
   140008b24:	cmp    QWORD PTR [rbp+0x0],r12
   140008b28:	je     0x1400089d0
   140008b2e:	mov    rdi,QWORD PTR [rbp+0x50]
   140008b32:	mov    esi,DWORD PTR [rbp+0x88]
   140008b38:	mov    rbx,QWORD PTR [rbp+0x50]
   140008b3c:	sub    rdi,QWORD PTR [rbp+0x48]
   140008b40:	lea    rcx,[rbp+0x8]
   140008b44:	sar    rdi,1
   140008b47:	call   QWORD PTR [rip+0x36db]        # 0x14000c228
   140008b4d:	mov    r8,QWORD PTR [rbp+0x30]
   140008b51:	mov    rcx,QWORD PTR [rbp+0x0]
   140008b55:	sub    r8,rbx
   140008b58:	mov    rdx,rbx
   140008b5b:	sub    rdx,rax
   140008b5e:	sar    r8,1
   140008b61:	lea    eax,[rdi+0x3]
   140008b64:	sar    rdx,1
   140008b67:	add    r8d,0xfffffffb
   140008b6b:	mov    r9d,esi
   140008b6e:	add    edx,0x2
   140008b71:	mov    DWORD PTR [rsp+0x20],eax
   140008b75:	call   0x14000b310
   140008b7a:	jmp    0x1400089d0
   140008b7f:	mov    rcx,rbp
   140008b82:	call   0x140007730
   140008b87:	jmp    0x140008ad0
   140008b8c:	lea    rcx,[rsp+0x76]
   140008b91:	mov    dl,0x2f
   140008b93:	call   QWORD PTR [rip+0x37df]        # 0x14000c378
   140008b99:	movzx  eax,WORD PTR [rax]
   140008b9c:	cmp    WORD PTR [rbp+0x58],ax
   140008ba0:	jne    0x140008c48
   140008ba6:	mov    rax,QWORD PTR [rbp+0x38]
   140008baa:	cmp    QWORD PTR [rbp+0x30],rax
   140008bae:	ja     0x140008bce
   140008bb0:	mov    rcx,rbp
   140008bb3:	call   0x140007360
   140008bb8:	test   al,al
   140008bba:	jne    0x140008bce
   140008bbc:	mov    rcx,rbp
   140008bbf:	call   0x140007730
   140008bc4:	mov    r11,QWORD PTR [rbp+0x38]
   140008bc8:	cmp    QWORD PTR [rbp+0x30],r11
   140008bcc:	jbe    0x140008bb0
   140008bce:	cmp    QWORD PTR [rbp+0x0],r12
   140008bd2:	je     0x1400089d0
   140008bd8:	mov    rdi,QWORD PTR [rbp+0x50]
   140008bdc:	mov    esi,DWORD PTR [rbp+0x88]
   140008be2:	mov    rbx,QWORD PTR [rbp+0x50]
   140008be6:	sub    rdi,QWORD PTR [rbp+0x48]
   140008bea:	lea    rcx,[rbp+0x8]
   140008bee:	sar    rdi,1
   140008bf1:	call   QWORD PTR [rip+0x3631]        # 0x14000c228
   140008bf7:	mov    r8,QWORD PTR [rbp+0x30]
   140008bfb:	mov    rcx,QWORD PTR [rbp+0x0]
   140008bff:	sub    r8,rbx
   140008c02:	mov    rdx,rbx
   140008c05:	sub    rdx,rax
   140008c08:	sar    r8,1
   140008c0b:	lea    eax,[rdi+0x3]
   140008c0e:	sar    rdx,1
   140008c11:	add    r8d,0xfffffffd
   140008c15:	mov    r9d,esi
   140008c18:	add    edx,0x2
   140008c1b:	mov    DWORD PTR [rsp+0x20],eax
   140008c1f:	call   0x14000b310
   140008c24:	jmp    0x1400089d0
   140008c29:	mov    eax,DWORD PTR [rbp+0x60]
   140008c2c:	mov    DWORD PTR [rbp+0x88],eax
   140008c32:	mov    rax,QWORD PTR [rbp+0x30]
   140008c36:	sub    rax,0x2
   140008c3a:	mov    QWORD PTR [rbp+0x50],rax
   140008c3e:	mov    eax,0x3d
   140008c43:	jmp    0x140009e99
   140008c48:	lea    rcx,[rsp+0xc2]
   140008c50:	mov    dl,0x3d
   140008c52:	call   QWORD PTR [rip+0x3720]        # 0x14000c378
   140008c58:	movzx  eax,WORD PTR [rax]
   140008c5b:	cmp    WORD PTR [rbp+0x58],ax
   140008c5f:	jne    0x140008c73
   140008c61:	mov    rcx,rbp
   140008c64:	call   0x140007730
   140008c69:	mov    eax,0xd
   140008c6e:	jmp    0x140009e99
   140008c73:	mov    eax,0xc
   140008c78:	jmp    0x140009e99
   140008c7d:	mov    eax,0x48
   140008c82:	jmp    0x140009e99
   140008c87:	mov    eax,0x37
   140008c8c:	jmp    0x140009e99
   140008c91:	lea    rcx,[rsp+0x7a]
   140008c96:	mov    dl,0x7c
   140008c98:	call   QWORD PTR [rip+0x36da]        # 0x14000c378
   140008c9e:	movzx  eax,WORD PTR [rax]
   140008ca1:	cmp    WORD PTR [rbp+0x58],ax
   140008ca5:	jne    0x140008cb9
   140008ca7:	mov    rcx,rbp
   140008caa:	call   0x140007730
   140008caf:	mov    eax,0x32
   140008cb4:	jmp    0x140009e99
   140008cb9:	lea    rcx,[rsp+0xc6]
   140008cc1:	mov    dl,0x3d
   140008cc3:	call   QWORD PTR [rip+0x36af]        # 0x14000c378
   140008cc9:	movzx  eax,WORD PTR [rax]
   140008ccc:	cmp    WORD PTR [rbp+0x58],ax
   140008cd0:	jne    0x140008ce4
   140008cd2:	mov    rcx,rbp
   140008cd5:	call   0x140007730
   140008cda:	mov    eax,0x31
   140008cdf:	jmp    0x140009e99
   140008ce4:	mov    eax,0x30
   140008ce9:	jmp    0x140009e99
   140008cee:	mov    eax,0x21
   140008cf3:	jmp    0x140009e99
   140008cf8:	lea    rcx,[rsp+0x7e]
   140008cfd:	mov    dl,0x3d
   140008cff:	call   QWORD PTR [rip+0x3673]        # 0x14000c378
   140008d05:	movzx  eax,WORD PTR [rax]
   140008d08:	cmp    WORD PTR [rbp+0x58],ax
   140008d0c:	jne    0x140008d20
   140008d0e:	mov    rcx,rbp
   140008d11:	call   0x140007730
   140008d16:	mov    eax,0x50
   140008d1b:	jmp    0x140009e99
   140008d20:	mov    eax,0x4f
   140008d25:	jmp    0x140009e99
   140008d2a:	mov    eax,0x38
   140008d2f:	jmp    0x140009e99
   140008d34:	mov    eax,0x22
   140008d39:	jmp    0x140009e99
   140008d3e:	mov    eax,0x36
   140008d43:	jmp    0x140009e99
   140008d48:	lea    rcx,[rsp+0xb0]
   140008d50:	mov    dl,0x3e
   140008d52:	call   QWORD PTR [rip+0x3620]        # 0x14000c378
   140008d58:	movzx  eax,WORD PTR [rax]
   140008d5b:	cmp    WORD PTR [rbp+0x58],ax
   140008d5f:	jne    0x140008df8
   140008d65:	mov    rcx,rbp
   140008d68:	call   0x140007730
   140008d6d:	lea    rcx,[rsp+0x82]
   140008d75:	mov    dl,0x3e
   140008d77:	call   QWORD PTR [rip+0x35fb]        # 0x14000c378
   140008d7d:	movzx  eax,WORD PTR [rax]
   140008d80:	cmp    WORD PTR [rbp+0x58],ax
   140008d84:	jne    0x140008dc3
   140008d86:	mov    rcx,rbp
   140008d89:	call   0x140007730
   140008d8e:	lea    rcx,[rsp+0xbc]
   140008d96:	mov    dl,0x3d
   140008d98:	call   QWORD PTR [rip+0x35da]        # 0x14000c378
   140008d9e:	movzx  eax,WORD PTR [rax]
   140008da1:	cmp    WORD PTR [rbp+0x58],ax
   140008da5:	jne    0x140008db9
   140008da7:	mov    rcx,rbp
   140008daa:	call   0x140007730
   140008daf:	mov    eax,0x1c
   140008db4:	jmp    0x140009e99
   140008db9:	mov    eax,0x1b
   140008dbe:	jmp    0x140009e99
   140008dc3:	lea    rcx,[rsp+0x86]
   140008dcb:	mov    dl,0x3d
   140008dcd:	call   QWORD PTR [rip+0x35a5]        # 0x14000c378
   140008dd3:	movzx  eax,WORD PTR [rax]
   140008dd6:	cmp    WORD PTR [rbp+0x58],ax
   140008dda:	jne    0x140008dee
   140008ddc:	mov    rcx,rbp
   140008ddf:	call   0x140007730
   140008de4:	mov    eax,0x1a
   140008de9:	jmp    0x140009e99
   140008dee:	mov    eax,0x19
   140008df3:	jmp    0x140009e99
   140008df8:	lea    rcx,[rsp+0xb4]
   140008e00:	mov    dl,0x3d
   140008e02:	call   QWORD PTR [rip+0x3570]        # 0x14000c378
   140008e08:	movzx  eax,WORD PTR [rax]
   140008e0b:	cmp    WORD PTR [rbp+0x58],ax
   140008e0f:	jne    0x140008e23
   140008e11:	mov    rcx,rbp
   140008e14:	call   0x140007730
   140008e19:	mov    eax,0x17
   140008e1e:	jmp    0x140009e99
   140008e23:	mov    eax,0x18
   140008e28:	jmp    0x140009e99
   140008e2d:	lea    rcx,[rsp+0x8a]
   140008e35:	mov    dl,0x3d
   140008e37:	call   QWORD PTR [rip+0x353b]        # 0x14000c378
   140008e3d:	movzx  eax,WORD PTR [rax]
   140008e40:	cmp    WORD PTR [rbp+0x58],ax
   140008e44:	jne    0x140008e83
   140008e46:	mov    rcx,rbp
   140008e49:	call   0x140007730
   140008e4e:	lea    rcx,[rsp+0xc4]
   140008e56:	mov    dl,0x3d
   140008e58:	call   QWORD PTR [rip+0x351a]        # 0x14000c378
   140008e5e:	movzx  eax,WORD PTR [rax]
   140008e61:	cmp    WORD PTR [rbp+0x58],ax
   140008e65:	jne    0x140008e79
   140008e67:	mov    rcx,rbp
   140008e6a:	call   0x140007730
   140008e6f:	mov    eax,0x13
   140008e74:	jmp    0x140009e99
   140008e79:	mov    eax,0x12
   140008e7e:	jmp    0x140009e99
   140008e83:	mov    eax,0x11
   140008e88:	jmp    0x140009e99
   140008e8d:	lea    rcx,[rsp+0x8e]
   140008e95:	mov    dl,0x3d
   140008e97:	call   QWORD PTR [rip+0x34db]        # 0x14000c378
   140008e9d:	movzx  eax,WORD PTR [rax]
   140008ea0:	cmp    WORD PTR [rbp+0x58],ax
   140008ea4:	jne    0x140008eb8
   140008ea6:	mov    rcx,rbp
   140008ea9:	call   0x140007730
   140008eae:	mov    eax,0x23
   140008eb3:	jmp    0x140009e99
   140008eb8:	lea    rcx,[rsp+0xb8]
   140008ec0:	mov    dl,0x3c
   140008ec2:	call   QWORD PTR [rip+0x34b0]        # 0x14000c378
   140008ec8:	movzx  eax,WORD PTR [rax]
   140008ecb:	cmp    WORD PTR [rbp+0x58],ax
   140008ecf:	jne    0x140008f0e
   140008ed1:	mov    rcx,rbp
   140008ed4:	call   0x140007730
   140008ed9:	lea    rcx,[rsp+0x92]
   140008ee1:	mov    dl,0x3d
   140008ee3:	call   QWORD PTR [rip+0x348f]        # 0x14000c378
   140008ee9:	movzx  eax,WORD PTR [rax]
   140008eec:	cmp    WORD PTR [rbp+0x58],ax
   140008ef0:	jne    0x140008f04
   140008ef2:	mov    rcx,rbp
   140008ef5:	call   0x140007730
   140008efa:	mov    eax,0x27
   140008eff:	jmp    0x140009e99
   140008f04:	mov    eax,0x26
   140008f09:	jmp    0x140009e99
   140008f0e:	mov    eax,0x25
   140008f13:	jmp    0x140009e99
   140008f18:	mov    eax,0x7
   140008f1d:	jmp    0x140009e99
   140008f22:	movzx  ecx,WORD PTR [rbp+0x58]
   140008f26:	cmp    ecx,0x39
   140008f29:	ja     0x140008f30
   140008f2b:	cmp    ecx,0x30
   140008f2e:	jae    0x140008f48
   140008f30:	cmp    ecx,0x7f
   140008f33:	jbe    0x140009294
   140008f39:	call   QWORD PTR [rip+0x3281]        # 0x14000c1c0
   140008f3f:	cmp    eax,0x3
   140008f42:	jne    0x140009294
   140008f48:	lea    rax,[rsp+0x50]
   140008f4d:	mov    edx,0x1
   140008f52:	mov    DWORD PTR [rsp+0x40],0x20
   140008f5a:	mov    QWORD PTR [rsp+0x48],rax
   140008f5f:	mov    DWORD PTR [rsp+0x44],edx
   140008f63:	mov    BYTE PTR [rsp+0x50],bl
   140008f67:	movzx  ecx,WORD PTR [rbp+0x58]
   140008f6b:	cmp    ecx,0x39
   140008f6e:	ja     0x140008f75
   140008f70:	cmp    ecx,0x30
   140008f73:	jae    0x140008f89
   140008f75:	cmp    ecx,0x7f
   140008f78:	jbe    0x140008fc4
   140008f7a:	call   QWORD PTR [rip+0x3240]        # 0x14000c1c0
   140008f80:	cmp    eax,0x3
   140008f83:	jne    0x140008fc4
   140008f85:	mov    edx,DWORD PTR [rsp+0x44]
   140008f89:	movzx  ebx,BYTE PTR [rbp+0x58]
   140008f8d:	cmp    edx,DWORD PTR [rsp+0x40]
   140008f91:	jne    0x140008fa5
   140008f93:	lea    r8d,[rdx+rdx*1]
   140008f97:	lea    rcx,[rsp+0x40]
   140008f9c:	call   0x1400075d0
   140008fa1:	mov    edx,DWORD PTR [rsp+0x44]
   140008fa5:	mov    rax,QWORD PTR [rsp+0x48]
   140008faa:	movsxd rcx,edx
   140008fad:	inc    edx
   140008faf:	mov    DWORD PTR [rsp+0x44],edx
   140008fb3:	mov    BYTE PTR [rcx+rax*1],bl
   140008fb6:	mov    rcx,rbp
   140008fb9:	call   0x140007730
   140008fbe:	mov    edx,DWORD PTR [rsp+0x44]
   140008fc2:	jmp    0x140008f67
   140008fc4:	lea    rcx,[rsp+0xac]
   140008fcc:	mov    dl,0x65
   140008fce:	call   QWORD PTR [rip+0x33a4]        # 0x14000c378
   140008fd4:	movzx  eax,WORD PTR [rax]
   140008fd7:	cmp    WORD PTR [rbp+0x58],ax
   140008fdb:	je     0x140008ffa
   140008fdd:	lea    rcx,[rsp+0x96]
   140008fe5:	mov    dl,0x45
   140008fe7:	call   QWORD PTR [rip+0x338b]        # 0x14000c378
   140008fed:	movzx  eax,WORD PTR [rax]
   140008ff0:	cmp    WORD PTR [rbp+0x58],ax
   140008ff4:	jne    0x14000918e
   140008ffa:	mov    rax,QWORD PTR [rbp+0x30]
   140008ffe:	movzx  ecx,WORD PTR [rax]
   140009001:	cmp    ecx,0x39
   140009004:	ja     0x14000900b
   140009006:	cmp    ecx,0x30
   140009009:	jae    0x14000907d
   14000900b:	cmp    ecx,0x7f
   14000900e:	jbe    0x14000901b
   140009010:	call   QWORD PTR [rip+0x31aa]        # 0x14000c1c0
   140009016:	cmp    eax,0x3
   140009019:	je     0x14000907d
   14000901b:	lea    rcx,[rsp+0xae]
   140009023:	mov    dl,0x2b
   140009025:	call   QWORD PTR [rip+0x334d]        # 0x14000c378
   14000902b:	mov    rcx,QWORD PTR [rbp+0x30]
   14000902f:	movzx  eax,WORD PTR [rax]
   140009032:	cmp    WORD PTR [rcx],ax
   140009035:	je     0x140009057
   140009037:	lea    rcx,[rsp+0x9a]
   14000903f:	mov    dl,0x2d
   140009041:	call   QWORD PTR [rip+0x3331]        # 0x14000c378
   140009047:	mov    rcx,QWORD PTR [rbp+0x30]
   14000904b:	movzx  eax,WORD PTR [rax]
   14000904e:	cmp    WORD PTR [rcx],ax
   140009051:	jne    0x14000918e
   140009057:	movzx  ecx,WORD PTR [rcx+0x2]
   14000905b:	cmp    ecx,0x39
   14000905e:	ja     0x140009065
   140009060:	cmp    ecx,0x30
   140009063:	jae    0x14000907d
   140009065:	cmp    ecx,0x7f
   140009068:	jbe    0x14000918e
   14000906e:	call   QWORD PTR [rip+0x314c]        # 0x14000c1c0
   140009074:	cmp    eax,0x3
   140009077:	jne    0x14000918e
   14000907d:	mov    ecx,DWORD PTR [rsp+0x44]
   140009081:	movzx  ebx,BYTE PTR [rbp+0x58]
   140009085:	cmp    ecx,DWORD PTR [rsp+0x40]
   140009089:	jne    0x14000909f
   14000908b:	lea    r8d,[rcx+rcx*1]
   14000908f:	mov    edx,ecx
   140009091:	lea    rcx,[rsp+0x40]
   140009096:	call   0x1400075d0
   14000909b:	mov    ecx,DWORD PTR [rsp+0x44]
   14000909f:	movsxd rax,ecx
   1400090a2:	inc    ecx
   1400090a4:	mov    DWORD PTR [rsp+0x44],ecx
   1400090a8:	mov    rcx,rax
   1400090ab:	mov    rax,QWORD PTR [rsp+0x48]
   1400090b0:	mov    BYTE PTR [rcx+rax*1],bl
   1400090b3:	mov    rcx,rbp
   1400090b6:	call   0x140007730
   1400090bb:	lea    rcx,[rsp+0xb2]
   1400090c3:	mov    dl,0x2b
   1400090c5:	call   QWORD PTR [rip+0x32ad]        # 0x14000c378
   1400090cb:	movzx  eax,WORD PTR [rax]
   1400090ce:	cmp    WORD PTR [rbp+0x58],ax
   1400090d2:	je     0x1400090ed
   1400090d4:	lea    rcx,[rsp+0x9e]
   1400090dc:	mov    dl,0x2d
   1400090de:	call   QWORD PTR [rip+0x3294]        # 0x14000c378
   1400090e4:	movzx  eax,WORD PTR [rax]
   1400090e7:	cmp    WORD PTR [rbp+0x58],ax
   1400090eb:	jne    0x140009130
   1400090ed:	mov    ecx,DWORD PTR [rsp+0x44]
   1400090f1:	movzx  ebx,BYTE PTR [rbp+0x58]
   1400090f5:	cmp    ecx,DWORD PTR [rsp+0x40]
   1400090f9:	jne    0x14000910f
   1400090fb:	lea    r8d,[rcx+rcx*1]
   1400090ff:	mov    edx,ecx
   140009101:	lea    rcx,[rsp+0x40]
   140009106:	call   0x1400075d0
   14000910b:	mov    ecx,DWORD PTR [rsp+0x44]
   14000910f:	movsxd rax,ecx
   140009112:	inc    ecx
   140009114:	mov    DWORD PTR [rsp+0x44],ecx
   140009118:	mov    rcx,rax
   14000911b:	mov    rax,QWORD PTR [rsp+0x48]
   140009120:	mov    BYTE PTR [rcx+rax*1],bl
   140009123:	mov    rcx,rbp
   140009126:	call   0x140007730
   14000912b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009130:	movzx  ecx,WORD PTR [rbp+0x58]
   140009134:	cmp    ecx,0x39
   140009137:	ja     0x14000913e
   140009139:	cmp    ecx,0x30
   14000913c:	jae    0x14000914e
   14000913e:	cmp    ecx,0x7f
   140009141:	jbe    0x14000918e
   140009143:	call   QWORD PTR [rip+0x3077]        # 0x14000c1c0
   140009149:	cmp    eax,0x3
   14000914c:	jne    0x14000918e
   14000914e:	mov    ecx,DWORD PTR [rsp+0x44]
   140009152:	movzx  ebx,BYTE PTR [rbp+0x58]
   140009156:	cmp    ecx,DWORD PTR [rsp+0x40]
   14000915a:	jne    0x140009170
   14000915c:	lea    r8d,[rcx+rcx*1]
   140009160:	mov    edx,ecx
   140009162:	lea    rcx,[rsp+0x40]
   140009167:	call   0x1400075d0
   14000916c:	mov    ecx,DWORD PTR [rsp+0x44]
   140009170:	movsxd rax,ecx
   140009173:	inc    ecx
   140009175:	mov    DWORD PTR [rsp+0x44],ecx
   140009179:	mov    rcx,rax
   14000917c:	mov    rax,QWORD PTR [rsp+0x48]
   140009181:	mov    BYTE PTR [rcx+rax*1],bl
   140009184:	mov    rcx,rbp
   140009187:	call   0x140007730
   14000918c:	jmp    0x140009130
   14000918e:	mov    ecx,DWORD PTR [rsp+0x44]
   140009192:	cmp    ecx,DWORD PTR [rsp+0x40]
   140009196:	jne    0x1400091ac
   140009198:	lea    r8d,[rcx+rcx*1]
   14000919c:	mov    edx,ecx
   14000919e:	lea    rcx,[rsp+0x40]
   1400091a3:	call   0x1400075d0
   1400091a8:	mov    ecx,DWORD PTR [rsp+0x44]
   1400091ac:	movsxd rax,ecx
   1400091af:	inc    ecx
   1400091b1:	lea    r8,[rsp+0x190]
   1400091b9:	mov    DWORD PTR [rsp+0x44],ecx
   1400091bd:	mov    rcx,rax
   1400091c0:	mov    rax,QWORD PTR [rsp+0x48]
   1400091c5:	mov    BYTE PTR [rcx+rax*1],r12b
   1400091c9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400091ce:	lea    rdx,[rsp+0xc8]
   1400091d6:	mov    rcx,rbx
   1400091d9:	mov    QWORD PTR [rsp+0xc8],r12
   1400091e1:	mov    BYTE PTR [rsp+0x190],r12b
   1400091e9:	call   QWORD PTR [rip+0x2ff9]        # 0x14000c1e8
   1400091ef:	mov    eax,DWORD PTR [rsp+0x44]
   1400091f3:	dec    eax
   1400091f5:	movsxd rcx,eax
   1400091f8:	mov    rax,QWORD PTR [rsp+0xc8]
   140009200:	movsd  QWORD PTR [rbp+0x68],xmm0
   140009205:	sub    rax,rbx
   140009208:	cmp    rax,rcx
   14000920b:	je     0x140009275
   14000920d:	lea    r8,[rip+0x8c44]        # 0x140011e58
   140009214:	lea    rdx,[rip+0x8c05]        # 0x140011e20
   14000921b:	lea    rcx,[rsp+0x120]
   140009223:	xor    r9d,r9d
   140009226:	mov    DWORD PTR [rbp+0x5c],0x7
   14000922d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009235:	call   QWORD PTR [rip+0x2f9d]        # 0x14000c1d8
   14000923b:	lea    rcx,[rbp+0x18]
   14000923f:	mov    rdx,rax
   140009242:	call   QWORD PTR [rip+0x3158]        # 0x14000c3a0
   140009248:	lea    rcx,[rsp+0x120]
   140009250:	call   QWORD PTR [rip+0x3162]        # 0x14000c3b8
   140009256:	mov    rcx,QWORD PTR [rsp+0x48]
   14000925b:	lea    r11,[rsp+0x50]
   140009260:	cmp    rcx,r11
   140009263:	je     0x14000926b
   140009265:	call   QWORD PTR [rip+0x2ea5]        # 0x14000c110
   14000926b:	mov    eax,0x61
   140009270:	jmp    0x140009e99
   140009275:	mov    rcx,QWORD PTR [rsp+0x48]
   14000927a:	lea    rax,[rsp+0x50]
   14000927f:	cmp    rcx,rax
   140009282:	je     0x14000928a
   140009284:	call   QWORD PTR [rip+0x2e86]        # 0x14000c110
   14000928a:	mov    eax,0x2f
   14000928f:	jmp    0x140009e99
   140009294:	mov    eax,0xf
   140009299:	jmp    0x140009e99
   14000929e:	lea    rcx,[rsp+0xb6]
   1400092a6:	mov    dl,0x3d
   1400092a8:	call   QWORD PTR [rip+0x30ca]        # 0x14000c378
   1400092ae:	movzx  eax,WORD PTR [rax]
   1400092b1:	cmp    WORD PTR [rbp+0x58],ax
   1400092b5:	jne    0x1400092c9
   1400092b7:	mov    rcx,rbp
   1400092ba:	call   0x140007730
   1400092bf:	mov    eax,0x29
   1400092c4:	jmp    0x140009e99
   1400092c9:	lea    rcx,[rsp+0x70]
   1400092ce:	mov    dl,0x2d
   1400092d0:	call   QWORD PTR [rip+0x30a2]        # 0x14000c378
   1400092d6:	movzx  eax,WORD PTR [rax]
   1400092d9:	cmp    WORD PTR [rbp+0x58],ax
   1400092dd:	jne    0x14000931d
   1400092df:	mov    rcx,rbp
   1400092e2:	call   0x140007730
   1400092e7:	cmp    BYTE PTR [rbp+0x8f],r12b
   1400092ee:	je     0x140009313
   1400092f0:	cmp    BYTE PTR [rbp+0x91],r12b
   1400092f7:	jne    0x140009313
   1400092f9:	cmp    BYTE PTR [rbp+0x8d],r12b
   140009300:	jne    0x140009313
   140009302:	mov    DWORD PTR [rbp+0x78],0x2a
   140009309:	mov    eax,0x3d
   14000930e:	jmp    0x140009e99
   140009313:	mov    eax,0x2a
   140009318:	jmp    0x140009e99
   14000931d:	mov    eax,0x28
   140009322:	jmp    0x140009e99
   140009327:	mov    eax,0x8
   14000932c:	jmp    0x140009e99
   140009331:	lea    rcx,[rsp+0xba]
   140009339:	mov    dl,0x3d
   14000933b:	call   QWORD PTR [rip+0x3037]        # 0x14000c378
   140009341:	movzx  eax,WORD PTR [rax]
   140009344:	cmp    WORD PTR [rbp+0x58],ax
   140009348:	jne    0x14000935c
   14000934a:	mov    rcx,rbp
   14000934d:	call   0x140007730
   140009352:	mov    eax,0x34
   140009357:	jmp    0x140009e99
   14000935c:	lea    rcx,[rsp+0xa6]
   140009364:	mov    dl,0x2b
   140009366:	call   QWORD PTR [rip+0x300c]        # 0x14000c378
   14000936c:	movzx  eax,WORD PTR [rax]
   14000936f:	cmp    WORD PTR [rbp+0x58],ax
   140009373:	jne    0x1400093b3
   140009375:	mov    rcx,rbp
   140009378:	call   0x140007730
   14000937d:	cmp    BYTE PTR [rbp+0x8f],r12b
   140009384:	je     0x1400093a9
   140009386:	cmp    BYTE PTR [rbp+0x91],r12b
   14000938d:	jne    0x1400093a9
   14000938f:	cmp    BYTE PTR [rbp+0x8d],r12b
   140009396:	jne    0x1400093a9
   140009398:	mov    DWORD PTR [rbp+0x78],0x35
   14000939f:	mov    eax,0x3d
   1400093a4:	jmp    0x140009e99
   1400093a9:	mov    eax,0x35
   1400093ae:	jmp    0x140009e99
   1400093b3:	mov    eax,0x33
   1400093b8:	jmp    0x140009e99
   1400093bd:	lea    rcx,[rsp+0xbe]
   1400093c5:	mov    dl,0x3d
   1400093c7:	call   QWORD PTR [rip+0x2fab]        # 0x14000c378
   1400093cd:	movzx  eax,WORD PTR [rax]
   1400093d0:	cmp    WORD PTR [rbp+0x58],ax
   1400093d4:	jne    0x1400093e8
   1400093d6:	mov    rcx,rbp
   1400093d9:	call   0x140007730
   1400093de:	mov    eax,0x40
   1400093e3:	jmp    0x140009e99
   1400093e8:	mov    eax,0x3f
   1400093ed:	jmp    0x140009e99
   1400093f2:	mov    eax,0x3c
   1400093f7:	jmp    0x140009e99
   1400093fc:	mov    eax,0x24
   140009401:	jmp    0x140009e99
   140009406:	lea    rcx,[rsp+0x72]
   14000940b:	mov    dl,0x3d
   14000940d:	call   QWORD PTR [rip+0x2f65]        # 0x14000c378
   140009413:	movzx  eax,WORD PTR [rax]
   140009416:	cmp    WORD PTR [rbp+0x58],ax
   14000941a:	jne    0x14000942e
   14000941c:	mov    rcx,rbp
   14000941f:	call   0x140007730
   140009424:	mov    eax,0x3
   140009429:	jmp    0x140009e99
   14000942e:	lea    rcx,[rsp+0x74]
   140009433:	mov    dl,0x26
   140009435:	call   QWORD PTR [rip+0x2f3d]        # 0x14000c378
   14000943b:	movzx  eax,WORD PTR [rax]
   14000943e:	cmp    WORD PTR [rbp+0x58],ax
   140009442:	jne    0x140009456
   140009444:	mov    rcx,rbp
   140009447:	call   0x140007730
   14000944c:	mov    eax,0x2
   140009451:	jmp    0x140009e99
   140009456:	mov    eax,0x1
   14000945b:	jmp    0x140009e99
   140009460:	lea    rcx,[rsp+0x78]
   140009465:	mov    dl,0x3d
   140009467:	call   QWORD PTR [rip+0x2f0b]        # 0x14000c378
   14000946d:	movzx  eax,WORD PTR [rax]
   140009470:	cmp    WORD PTR [rbp+0x58],ax
   140009474:	jne    0x140009488
   140009476:	mov    rcx,rbp
   140009479:	call   0x140007730
   14000947e:	mov    eax,0x3a
   140009483:	jmp    0x140009e99
   140009488:	mov    eax,0x39
   14000948d:	jmp    0x140009e99
   140009492:	lea    rcx,[rsp+0x7c]
   140009497:	mov    dl,0x3d
   140009499:	call   QWORD PTR [rip+0x2ed9]        # 0x14000c378
   14000949f:	movzx  eax,WORD PTR [rax]
   1400094a2:	cmp    WORD PTR [rbp+0x58],ax
   1400094a6:	jne    0x1400094e5
   1400094a8:	mov    rcx,rbp
   1400094ab:	call   0x140007730
   1400094b0:	lea    rcx,[rsp+0x80]
   1400094b8:	mov    dl,0x3d
   1400094ba:	call   QWORD PTR [rip+0x2eb8]        # 0x14000c378
   1400094c0:	movzx  eax,WORD PTR [rax]
   1400094c3:	cmp    WORD PTR [rbp+0x58],ax
   1400094c7:	jne    0x1400094db
   1400094c9:	mov    rcx,rbp
   1400094cc:	call   0x140007730
   1400094d1:	mov    eax,0x2e
   1400094d6:	jmp    0x140009e99
   1400094db:	mov    eax,0x2d
   1400094e0:	jmp    0x140009e99
   1400094e5:	mov    eax,0x2c
   1400094ea:	jmp    0x140009e99
   1400094ef:	cmp    QWORD PTR [rbp+0x0],0x0
   1400094f4:	mov    rdi,QWORD PTR [rbp+0x30]
   1400094f8:	je     0x140009544
   1400094fa:	cmp    rdi,QWORD PTR [rbp+0x38]
   1400094fe:	ja     0x140009544
   140009500:	mov    rcx,rbp
   140009503:	call   0x140007360
   140009508:	test   al,al
   14000950a:	jne    0x14000964f
   140009510:	lea    rcx,[rsp+0x84]
   140009518:	mov    dl,0x5c
   14000951a:	call   QWORD PTR [rip+0x2e58]        # 0x14000c378
   140009520:	mov    cx,WORD PTR [rbp+0x58]
   140009524:	cmp    cx,WORD PTR [rax]
   140009527:	je     0x140009544
   140009529:	cmp    cx,bx
   14000952c:	je     0x1400095e6
   140009532:	mov    rcx,rbp
   140009535:	call   0x140007730
   14000953a:	mov    r11,QWORD PTR [rbp+0x38]
   14000953e:	cmp    QWORD PTR [rbp+0x30],r11
   140009542:	jbe    0x140009500
   140009544:	lea    rcx,[rbp+0x10]
   140009548:	xor    edx,edx
   14000954a:	mov    BYTE PTR [rbp+0x8c],0x1
   140009551:	call   QWORD PTR [rip+0x2c89]        # 0x14000c1e0
   140009557:	mov    rax,QWORD PTR [rbp+0x30]
   14000955b:	sub    rdi,0x2
   14000955f:	sub    rax,0x2
   140009563:	cmp    rdi,rax
   140009566:	je     0x14000958e
   140009568:	nop    DWORD PTR [rax+rax*1+0x0]
   140009570:	movzx  edx,WORD PTR [rdi]
   140009573:	lea    rcx,[rbp+0x10]
   140009577:	call   QWORD PTR [rip+0x2deb]        # 0x14000c368
   14000957d:	mov    rax,QWORD PTR [rbp+0x30]
   140009581:	add    rdi,0x2
   140009585:	sub    rax,0x2
   140009589:	cmp    rdi,rax
   14000958c:	jne    0x140009570
   14000958e:	mov    rax,QWORD PTR [rbp+0x38]
   140009592:	cmp    QWORD PTR [rbp+0x30],rax
   140009596:	ja     0x140009a5d
   14000959c:	nop    DWORD PTR [rax+0x0]
   1400095a0:	mov    rcx,rbp
   1400095a3:	call   0x140007390
   1400095a8:	mov    edi,eax
   1400095aa:	test   eax,eax
   1400095ac:	je     0x1400096b0
   1400095b2:	movzx  edx,WORD PTR [rbp+0x58]
   1400095b6:	lea    rcx,[rbp+0x10]
   1400095ba:	mov    r12b,0x1
   1400095bd:	call   QWORD PTR [rip+0x2da5]        # 0x14000c368
   1400095c3:	cmp    edi,0x2
   1400095c6:	jne    0x1400095d9
   1400095c8:	mov    rax,QWORD PTR [rbp+0x30]
   1400095cc:	lea    rcx,[rbp+0x10]
   1400095d0:	movzx  edx,WORD PTR [rax]
   1400095d3:	call   QWORD PTR [rip+0x2d8f]        # 0x14000c368
   1400095d9:	mov    rcx,rbp
   1400095dc:	call   0x140007730
   1400095e1:	jmp    0x140009a4f
   1400095e6:	mov    rbx,QWORD PTR [rbp+0x30]
   1400095ea:	lea    rcx,[rbp+0x8]
   1400095ee:	sub    rbx,rdi
   1400095f1:	sar    rbx,1
   1400095f4:	call   QWORD PTR [rip+0x2c2e]        # 0x14000c228
   1400095fa:	mov    rcx,QWORD PTR [rbp+0x0]
   1400095fe:	sub    rdi,rax
   140009601:	lea    rdx,[rsp+0xe8]
   140009609:	mov    r9d,ebx
   14000960c:	sar    rdi,1
   14000960f:	add    rcx,0x48
   140009613:	lea    r8d,[rdi-0x1]
   140009617:	call   QWORD PTR [rip+0x2bdb]        # 0x14000c1f8
   14000961d:	mov    rax,QWORD PTR [rsp+0xe8]
   140009625:	mov    rcx,rbp
   140009628:	mov    QWORD PTR [rbp+0x20],rax
   14000962c:	mov    eax,DWORD PTR [rsp+0xf0]
   140009633:	mov    DWORD PTR [rbp+0x28],eax
   140009636:	mov    eax,DWORD PTR [rsp+0xf4]
   14000963d:	mov    DWORD PTR [rbp+0x2c],eax
   140009640:	call   0x140007730
   140009645:	mov    eax,0x41
   14000964a:	jmp    0x140009e99
   14000964f:	cmp    BYTE PTR [rbp+0x92],0x0
   140009656:	jne    0x140009544
   14000965c:	mov    edx,0x1
   140009661:	lea    r8,[rip+0x8908]        # 0x140011f70
   140009668:	lea    rcx,[rsp+0x110]
   140009670:	mov    DWORD PTR [rbp+0x5c],edx
   140009673:	lea    rdx,[rip+0x87a6]        # 0x140011e20
   14000967a:	xor    r9d,r9d
   14000967d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009685:	call   QWORD PTR [rip+0x2b4d]        # 0x14000c1d8
   14000968b:	lea    rcx,[rbp+0x18]
   14000968f:	mov    rdx,rax
   140009692:	call   QWORD PTR [rip+0x2d08]        # 0x14000c3a0
   140009698:	lea    rcx,[rsp+0x110]
   1400096a0:	call   QWORD PTR [rip+0x2d12]        # 0x14000c3b8
   1400096a6:	mov    eax,0x61
   1400096ab:	jmp    0x140009e99
   1400096b0:	cmp    WORD PTR [rbp+0x58],bx
   1400096b4:	je     0x140009b03
   1400096ba:	lea    rcx,[rsp+0x88]
   1400096c2:	mov    dl,0x5c
   1400096c4:	call   QWORD PTR [rip+0x2cae]        # 0x14000c378
   1400096ca:	movzx  eax,WORD PTR [rax]
   1400096cd:	cmp    WORD PTR [rbp+0x58],ax
   1400096d1:	jne    0x140009a39
   1400096d7:	mov    rcx,rbp
   1400096da:	call   0x140007730
   1400096df:	movzx  edi,WORD PTR [rbp+0x58]
   1400096e3:	cmp    edi,0x2029
   1400096e9:	mov    eax,edi
   1400096eb:	jg     0x140009a22
   1400096f1:	cmp    eax,0x2028
   1400096f6:	jge    0x140009a18
   1400096fc:	sub    eax,0xa
   1400096ff:	cmp    eax,0x6e
   140009702:	ja     0x140009a22
   140009708:	cdqe   
   14000970a:	movzx  eax,BYTE PTR [r13+rax*1+0x9fd4]
   140009713:	mov    ecx,DWORD PTR [r13+rax*4+0x9f98]
   14000971b:	add    rcx,r13
   14000971e:	jmp    rcx
   140009720:	lea    r8,[rsp+0x190]
   140009728:	lea    rdx,[rsp+0x8c]
   140009730:	mov    rcx,rbp
   140009733:	mov    BYTE PTR [rsp+0x190],0x0
   14000973b:	call   0x1400077f0
   140009740:	cmp    BYTE PTR [rsp+0x190],0x0
   140009748:	mov    di,WORD PTR [rax]
   14000974b:	jne    0x140009a2a
   140009751:	lea    r8,[rip+0x87f8]        # 0x140011f50
   140009758:	lea    rdx,[rip+0x86c1]        # 0x140011e20
   14000975f:	lea    rcx,[rsp+0xe0]
   140009767:	xor    r9d,r9d
   14000976a:	mov    DWORD PTR [rbp+0x5c],0x5
   140009771:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009779:	call   QWORD PTR [rip+0x2a59]        # 0x14000c1d8
   14000977f:	lea    rcx,[rbp+0x18]
   140009783:	mov    rdx,rax
   140009786:	call   QWORD PTR [rip+0x2c14]        # 0x14000c3a0
   14000978c:	lea    rcx,[rsp+0xe0]
   140009794:	call   QWORD PTR [rip+0x2c1e]        # 0x14000c3b8
   14000979a:	mov    eax,0x61
   14000979f:	jmp    0x140009e99
   1400097a4:	lea    r8,[rsp+0x190]
   1400097ac:	lea    rdx,[rsp+0x90]
   1400097b4:	mov    rcx,rbp
   1400097b7:	mov    BYTE PTR [rsp+0x190],0x0
   1400097bf:	call   0x140007910
   1400097c4:	cmp    BYTE PTR [rsp+0x190],0x0
   1400097cc:	mov    di,WORD PTR [rax]
   1400097cf:	jne    0x140009a2a
   1400097d5:	lea    r8,[rip+0x874c]        # 0x140011f28
   1400097dc:	lea    rdx,[rip+0x863d]        # 0x140011e20
   1400097e3:	lea    rcx,[rsp+0x118]
   1400097eb:	xor    r9d,r9d
   1400097ee:	mov    DWORD PTR [rbp+0x5c],0x9
   1400097f5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400097fd:	call   QWORD PTR [rip+0x29d5]        # 0x14000c1d8
   140009803:	lea    rcx,[rbp+0x18]
   140009807:	mov    rdx,rax
   14000980a:	call   QWORD PTR [rip+0x2b90]        # 0x14000c3a0
   140009810:	lea    rcx,[rsp+0x118]
   140009818:	call   QWORD PTR [rip+0x2b9a]        # 0x14000c3b8
   14000981e:	mov    eax,0x61
   140009823:	jmp    0x140009e99
   140009828:	lea    rcx,[rsp+0x198]
   140009830:	mov    dl,0x5c
   140009832:	call   QWORD PTR [rip+0x2b40]        # 0x14000c378
   140009838:	mov    di,WORD PTR [rsp+0x198]
   140009840:	mov    rcx,rbp
   140009843:	call   0x140007730
   140009848:	lea    rcx,[rbp+0x10]
   14000984c:	movzx  edx,di
   14000984f:	call   QWORD PTR [rip+0x2b13]        # 0x14000c368
   140009855:	jmp    0x140009a4f
   14000985a:	lea    rcx,[rsp+0x1a0]
   140009862:	mov    dl,0x27
   140009864:	call   QWORD PTR [rip+0x2b0e]        # 0x14000c378
   14000986a:	mov    di,WORD PTR [rsp+0x1a0]
   140009872:	mov    rcx,rbp
   140009875:	call   0x140007730
   14000987a:	lea    rcx,[rbp+0x10]
   14000987e:	mov    dx,di
   140009881:	call   QWORD PTR [rip+0x2ae1]        # 0x14000c368
   140009887:	jmp    0x140009a4f
   14000988c:	lea    rcx,[rsp+0x1a8]
   140009894:	mov    dl,0x22
   140009896:	call   QWORD PTR [rip+0x2adc]        # 0x14000c378
   14000989c:	mov    di,WORD PTR [rsp+0x1a8]
   1400098a4:	mov    rcx,rbp
   1400098a7:	call   0x140007730
   1400098ac:	lea    rcx,[rbp+0x10]
   1400098b0:	mov    dx,di
   1400098b3:	call   QWORD PTR [rip+0x2aaf]        # 0x14000c368
   1400098b9:	jmp    0x140009a4f
   1400098be:	lea    rcx,[rsp+0x3a]
   1400098c3:	mov    dl,0x8
   1400098c5:	call   QWORD PTR [rip+0x2aad]        # 0x14000c378
   1400098cb:	mov    di,WORD PTR [rsp+0x3a]
   1400098d0:	mov    rcx,rbp
   1400098d3:	call   0x140007730
   1400098d8:	lea    rcx,[rbp+0x10]
   1400098dc:	mov    dx,di
   1400098df:	call   QWORD PTR [rip+0x2a83]        # 0x14000c368
   1400098e5:	jmp    0x140009a4f
   1400098ea:	lea    rcx,[rsp+0x34]
   1400098ef:	mov    dl,0xc
   1400098f1:	call   QWORD PTR [rip+0x2a81]        # 0x14000c378
   1400098f7:	mov    di,WORD PTR [rsp+0x34]
   1400098fc:	mov    rcx,rbp
   1400098ff:	call   0x140007730
   140009904:	lea    rcx,[rbp+0x10]
   140009908:	mov    dx,di
   14000990b:	call   QWORD PTR [rip+0x2a57]        # 0x14000c368
   140009911:	jmp    0x140009a4f
   140009916:	lea    rcx,[rsp+0x38]
   14000991b:	mov    dl,0xa
   14000991d:	call   QWORD PTR [rip+0x2a55]        # 0x14000c378
   140009923:	mov    di,WORD PTR [rsp+0x38]
   140009928:	mov    rcx,rbp
   14000992b:	call   0x140007730
   140009930:	lea    rcx,[rbp+0x10]
   140009934:	mov    dx,di
   140009937:	call   QWORD PTR [rip+0x2a2b]        # 0x14000c368
   14000993d:	jmp    0x140009a4f
   140009942:	lea    rcx,[rsp+0x30]
   140009947:	mov    dl,0xd
   140009949:	call   QWORD PTR [rip+0x2a29]        # 0x14000c378
   14000994f:	mov    di,WORD PTR [rsp+0x30]
   140009954:	mov    rcx,rbp
   140009957:	call   0x140007730
   14000995c:	lea    rcx,[rbp+0x10]
   140009960:	mov    dx,di
   140009963:	call   QWORD PTR [rip+0x29ff]        # 0x14000c368
   140009969:	jmp    0x140009a4f
   14000996e:	lea    rcx,[rsp+0x32]
   140009973:	mov    dl,0x9
   140009975:	call   QWORD PTR [rip+0x29fd]        # 0x14000c378
   14000997b:	mov    di,WORD PTR [rsp+0x32]
   140009980:	mov    rcx,rbp
   140009983:	call   0x140007730
   140009988:	lea    rcx,[rbp+0x10]
   14000998c:	mov    dx,di
   14000998f:	call   QWORD PTR [rip+0x29d3]        # 0x14000c368
   140009995:	jmp    0x140009a4f
   14000999a:	lea    rcx,[rsp+0x36]
   14000999f:	mov    dl,0xb
   1400099a1:	call   QWORD PTR [rip+0x29d1]        # 0x14000c378
   1400099a7:	mov    di,WORD PTR [rsp+0x36]
   1400099ac:	mov    rcx,rbp
   1400099af:	call   0x140007730
   1400099b4:	lea    rcx,[rbp+0x10]
   1400099b8:	mov    dx,di
   1400099bb:	call   QWORD PTR [rip+0x29a7]        # 0x14000c368
   1400099c1:	jmp    0x140009a4f
   1400099c6:	mov    rax,QWORD PTR [rbp+0x30]
   1400099ca:	movzx  ecx,WORD PTR [rax]
   1400099cd:	cmp    ecx,0x39
   1400099d0:	ja     0x1400099db
   1400099d2:	cmp    ecx,0x30
   1400099d5:	jae    0x140009ab0
   1400099db:	cmp    ecx,0x7f
   1400099de:	jbe    0x1400099ef
   1400099e0:	call   QWORD PTR [rip+0x27da]        # 0x14000c1c0
   1400099e6:	cmp    eax,0x3
   1400099e9:	je     0x140009ab0
   1400099ef:	mov    rcx,rbp
   1400099f2:	call   0x140007730
   1400099f7:	lea    rcx,[rsp+0x3c]
   1400099fc:	xor    edx,edx
   1400099fe:	call   QWORD PTR [rip+0x2974]        # 0x14000c378
   140009a04:	mov    di,WORD PTR [rsp+0x3c]
   140009a09:	lea    rcx,[rbp+0x10]
   140009a0d:	mov    dx,di
   140009a10:	call   QWORD PTR [rip+0x2952]        # 0x14000c368
   140009a16:	jmp    0x140009a4f
   140009a18:	mov    rcx,rbp
   140009a1b:	call   0x140007730
   140009a20:	jmp    0x140009a4f
   140009a22:	mov    rcx,rbp
   140009a25:	call   0x140007730
   140009a2a:	lea    rcx,[rbp+0x10]
   140009a2e:	mov    dx,di
   140009a31:	call   QWORD PTR [rip+0x2931]        # 0x14000c368
   140009a37:	jmp    0x140009a4f
   140009a39:	movzx  edx,WORD PTR [rbp+0x58]
   140009a3d:	lea    rcx,[rbp+0x10]
   140009a41:	call   QWORD PTR [rip+0x2921]        # 0x14000c368
   140009a47:	mov    rcx,rbp
   140009a4a:	call   0x140007730
   140009a4f:	mov    rax,QWORD PTR [rbp+0x38]
   140009a53:	cmp    QWORD PTR [rbp+0x30],rax
   140009a57:	jbe    0x1400095a0
   140009a5d:	lea    r8,[rip+0x84a4]        # 0x140011f08
   140009a64:	lea    rdx,[rip+0x83b5]        # 0x140011e20
   140009a6b:	lea    rcx,[rsp+0x128]
   140009a73:	xor    r9d,r9d
   140009a76:	mov    DWORD PTR [rbp+0x5c],0x3
   140009a7d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009a85:	call   QWORD PTR [rip+0x274d]        # 0x14000c1d8
   140009a8b:	lea    rcx,[rbp+0x18]
   140009a8f:	mov    rdx,rax
   140009a92:	call   QWORD PTR [rip+0x2908]        # 0x14000c3a0
   140009a98:	lea    rcx,[rsp+0x128]
   140009aa0:	call   QWORD PTR [rip+0x2912]        # 0x14000c3b8
   140009aa6:	mov    eax,0x61
   140009aab:	jmp    0x140009e99
   140009ab0:	lea    r8,[rip+0x8429]        # 0x140011ee0
   140009ab7:	lea    rdx,[rip+0x8362]        # 0x140011e20
   140009abe:	lea    rcx,[rsp+0xf8]
   140009ac6:	xor    r9d,r9d
   140009ac9:	mov    DWORD PTR [rbp+0x5c],0x4
   140009ad0:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009ad8:	call   QWORD PTR [rip+0x26fa]        # 0x14000c1d8
   140009ade:	lea    rcx,[rbp+0x18]
   140009ae2:	mov    rdx,rax
   140009ae5:	call   QWORD PTR [rip+0x28b5]        # 0x14000c3a0
   140009aeb:	lea    rcx,[rsp+0xf8]
   140009af3:	call   QWORD PTR [rip+0x28bf]        # 0x14000c3b8
   140009af9:	mov    eax,0x61
   140009afe:	jmp    0x140009e99
   140009b03:	mov    rcx,rbp
   140009b06:	call   0x140007730
   140009b0b:	mov    rcx,QWORD PTR [rbp+0x0]
   140009b0f:	test   rcx,rcx
   140009b12:	je     0x140009b38
   140009b14:	lea    r8,[rbp+0x10]
   140009b18:	lea    rdx,[rsp+0x130]
   140009b20:	call   0x14000b000
   140009b25:	mov    rcx,QWORD PTR [rax]
   140009b28:	mov    QWORD PTR [rbp+0x20],rcx
   140009b2c:	mov    ecx,DWORD PTR [rax+0x8]
   140009b2f:	mov    DWORD PTR [rbp+0x28],ecx
   140009b32:	mov    eax,DWORD PTR [rax+0xc]
   140009b35:	mov    DWORD PTR [rbp+0x2c],eax
   140009b38:	mov    eax,0x41
   140009b3d:	mov    ecx,0x57
   140009b42:	test   r12b,r12b
   140009b45:	cmovne eax,ecx
   140009b48:	jmp    0x140009e99
   140009b4d:	movzx  edx,bx
   140009b50:	mov    rcx,rbp
   140009b53:	call   0x140007de0
   140009b58:	jmp    0x140009e99
   140009b5d:	lea    rcx,[rsp+0x94]
   140009b65:	mov    dl,0x5c
   140009b67:	xor    sil,sil
   140009b6a:	call   QWORD PTR [rip+0x2808]        # 0x14000c378
   140009b70:	cmp    bx,WORD PTR [rax]
   140009b73:	jne    0x140009c19
   140009b79:	lea    rcx,[rsp+0x98]
   140009b81:	mov    dl,0x75
   140009b83:	call   QWORD PTR [rip+0x27ef]        # 0x14000c378
   140009b89:	movzx  eax,WORD PTR [rax]
   140009b8c:	cmp    WORD PTR [rbp+0x58],ax
   140009b90:	jne    0x140009c19
   140009b96:	lea    r8,[rsp+0x190]
   140009b9e:	lea    rdx,[rsp+0x9c]
   140009ba6:	mov    rcx,rbp
   140009ba9:	mov    sil,0x1
   140009bac:	mov    BYTE PTR [rsp+0x190],r12b
   140009bb4:	call   0x1400077f0
   140009bb9:	movzx  ebx,WORD PTR [rax]
   140009bbc:	cmp    BYTE PTR [rsp+0x190],r12b
   140009bc4:	jne    0x140009c19
   140009bc6:	lea    r8,[rip+0x8383]        # 0x140011f50
   140009bcd:	lea    rdx,[rip+0x824c]        # 0x140011e20
   140009bd4:	lea    rcx,[rsp+0xd0]
   140009bdc:	xor    r9d,r9d
   140009bdf:	mov    DWORD PTR [rbp+0x5c],0x5
   140009be6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009bee:	call   QWORD PTR [rip+0x25e4]        # 0x14000c1d8
   140009bf4:	lea    rcx,[rbp+0x18]
   140009bf8:	mov    rdx,rax
   140009bfb:	call   QWORD PTR [rip+0x279f]        # 0x14000c3a0
   140009c01:	lea    rcx,[rsp+0xd0]
   140009c09:	call   QWORD PTR [rip+0x27a9]        # 0x14000c3b8
   140009c0f:	mov    eax,0x61
   140009c14:	jmp    0x140009e99
   140009c19:	cmp    bx,0x61
   140009c1d:	jb     0x140009c25
   140009c1f:	cmp    bx,0x7a
   140009c23:	jbe    0x140009c5d
   140009c25:	cmp    bx,0x41
   140009c29:	jb     0x140009c31
   140009c2b:	cmp    bx,0x5a
   140009c2f:	jbe    0x140009c5d
   140009c31:	cmp    bx,0x24
   140009c35:	je     0x140009c5d
   140009c37:	cmp    bx,0x5f
   140009c3b:	je     0x140009c5d
   140009c3d:	movzx  ecx,bx
   140009c40:	call   QWORD PTR [rip+0x257a]        # 0x14000c1c0
   140009c46:	cmp    eax,0x4
   140009c49:	je     0x140009c5d
   140009c4b:	cmp    eax,0xd
   140009c4e:	jle    0x140009dc8
   140009c54:	cmp    eax,0x12
   140009c57:	jg     0x140009dc8
   140009c5d:	test   sil,sil
   140009c60:	je     0x140009c82
   140009c62:	lea    rcx,[rbp+0x10]
   140009c66:	xor    edx,edx
   140009c68:	call   QWORD PTR [rip+0x2572]        # 0x14000c1e0
   140009c6e:	lea    rcx,[rbp+0x10]
   140009c72:	movzx  edx,bx
   140009c75:	call   QWORD PTR [rip+0x26ed]        # 0x14000c368
   140009c7b:	mov    BYTE PTR [rbp+0x8c],0x1
   140009c82:	movzx  ebx,WORD PTR [rbp+0x58]
   140009c86:	lea    rcx,[rsp+0xa0]
   140009c8e:	mov    dl,0x5c
   140009c90:	call   QWORD PTR [rip+0x26e2]        # 0x14000c378
   140009c96:	movzx  eax,WORD PTR [rax]
   140009c99:	cmp    WORD PTR [rbp+0x58],ax
   140009c9d:	jne    0x140009d54
   140009ca3:	lea    rcx,[rsp+0xa4]
   140009cab:	mov    dl,0x75
   140009cad:	call   QWORD PTR [rip+0x26c5]        # 0x14000c378
   140009cb3:	mov    rcx,QWORD PTR [rbp+0x30]
   140009cb7:	movzx  eax,WORD PTR [rax]
   140009cba:	cmp    WORD PTR [rcx],ax
   140009cbd:	jne    0x140009d54
   140009cc3:	test   sil,sil
   140009cc6:	jne    0x140009cfd
   140009cc8:	lea    rbx,[rbp+0x10]
   140009ccc:	xor    edx,edx
   140009cce:	mov    sil,0x1
   140009cd1:	mov    rcx,rbx
   140009cd4:	call   QWORD PTR [rip+0x2506]        # 0x14000c1e0
   140009cda:	mov    r8,QWORD PTR [rbp+0x50]
   140009cde:	mov    r9,QWORD PTR [rbp+0x30]
   140009ce2:	sub    r9,r8
   140009ce5:	xor    edx,edx
   140009ce7:	mov    rcx,rbx
   140009cea:	sar    r9,1
   140009ced:	dec    r9d
   140009cf0:	call   QWORD PTR [rip+0x24fa]        # 0x14000c1f0
   140009cf6:	mov    BYTE PTR [rbp+0x8c],sil
   140009cfd:	mov    rcx,rbp
   140009d00:	call   0x140007730
   140009d05:	lea    r8,[rsp+0x190]
   140009d0d:	lea    rdx,[rsp+0xa8]
   140009d15:	mov    rcx,rbp
   140009d18:	mov    BYTE PTR [rsp+0x190],r12b
   140009d20:	call   0x1400077f0
   140009d25:	movzx  ebx,WORD PTR [rax]
   140009d28:	cmp    BYTE PTR [rsp+0x190],r12b
   140009d30:	je     0x140009d7f
   140009d32:	movzx  ecx,bx
   140009d35:	call   0x1400072c0
   140009d3a:	test   al,al
   140009d3c:	je     0x140009c82
   140009d42:	lea    rcx,[rbp+0x10]
   140009d46:	movzx  edx,bx
   140009d49:	call   QWORD PTR [rip+0x2619]        # 0x14000c368
   140009d4f:	jmp    0x140009c82
   140009d54:	movzx  ecx,bx
   140009d57:	call   0x1400072c0
   140009d5c:	test   al,al
   140009d5e:	je     0x140009dd2
   140009d60:	test   sil,sil
   140009d63:	je     0x140009d72
   140009d65:	lea    rcx,[rbp+0x10]
   140009d69:	movzx  edx,bx
   140009d6c:	call   QWORD PTR [rip+0x25f6]        # 0x14000c368
   140009d72:	mov    rcx,rbp
   140009d75:	call   0x140007730
   140009d7a:	jmp    0x140009c82
   140009d7f:	lea    r8,[rip+0x81ca]        # 0x140011f50
   140009d86:	lea    rdx,[rip+0x8093]        # 0x140011e20
   140009d8d:	lea    rcx,[rsp+0xd8]
   140009d95:	xor    r9d,r9d
   140009d98:	mov    DWORD PTR [rbp+0x5c],0x5
   140009d9f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009da7:	call   QWORD PTR [rip+0x242b]        # 0x14000c1d8
   140009dad:	lea    rcx,[rbp+0x18]
   140009db1:	mov    rdx,rax
   140009db4:	call   QWORD PTR [rip+0x25e6]        # 0x14000c3a0
   140009dba:	lea    rcx,[rsp+0xd8]
   140009dc2:	call   QWORD PTR [rip+0x25f0]        # 0x14000c3b8
   140009dc8:	mov    eax,0x61
   140009dcd:	jmp    0x140009e99
   140009dd2:	mov    rdx,QWORD PTR [rbp+0x50]
   140009dd6:	mov    rdi,QWORD PTR [rbp+0x30]
   140009dda:	mov    ebx,0x1d
   140009ddf:	sub    rdi,rdx
   140009de2:	sar    rdi,1
   140009de5:	dec    edi
   140009de7:	mov    DWORD PTR [rbp+0x84],edi
   140009ded:	test   sil,sil
   140009df0:	jne    0x140009e07
   140009df2:	movzx  r9d,BYTE PTR [rbp+0x92]
   140009dfa:	mov    r8d,edi
   140009dfd:	mov    rcx,rbp
   140009e00:	call   0x140006dc0
   140009e05:	mov    ebx,eax
   140009e07:	mov    rcx,QWORD PTR [rbp+0x0]
   140009e0b:	test   rcx,rcx
   140009e0e:	je     0x140009e93
   140009e14:	cmp    ebx,0x1d
   140009e17:	jne    0x140009e46
   140009e19:	test   sil,sil
   140009e1c:	je     0x140009e46
   140009e1e:	lea    r8,[rbp+0x10]
   140009e22:	lea    rdx,[rsp+0x140]
   140009e2a:	call   0x14000b000
   140009e2f:	mov    rcx,QWORD PTR [rax]
   140009e32:	mov    QWORD PTR [rbp+0x20],rcx
   140009e36:	mov    ecx,DWORD PTR [rax+0x8]
   140009e39:	mov    DWORD PTR [rbp+0x28],ecx
   140009e3c:	mov    eax,DWORD PTR [rax+0xc]
   140009e3f:	mov    DWORD PTR [rbp+0x2c],eax
   140009e42:	mov    eax,ebx
   140009e44:	jmp    0x140009e99
   140009e46:	lea    rcx,[rbp+0x8]
   140009e4a:	call   QWORD PTR [rip+0x23d8]        # 0x14000c228
   140009e50:	mov    r8,QWORD PTR [rbp+0x50]
   140009e54:	mov    rcx,QWORD PTR [rbp+0x0]
   140009e58:	sub    r8,rax
   140009e5b:	lea    rdx,[rsp+0x100]
   140009e63:	add    rcx,0x48
   140009e67:	sar    r8,1
   140009e6a:	mov    r9d,edi
   140009e6d:	call   QWORD PTR [rip+0x2385]        # 0x14000c1f8
   140009e73:	mov    rax,QWORD PTR [rsp+0x100]
   140009e7b:	mov    QWORD PTR [rbp+0x20],rax
   140009e7f:	mov    eax,DWORD PTR [rsp+0x108]
   140009e86:	mov    DWORD PTR [rbp+0x28],eax
   140009e89:	mov    eax,DWORD PTR [rsp+0x10c]
   140009e90:	mov    DWORD PTR [rbp+0x2c],eax
   140009e93:	mov    eax,ebx
   140009e95:	jmp    0x140009e99
   140009e97:	xor    eax,eax
   140009e99:	mov    rsi,QWORD PTR [rsp+0x170]
   140009ea1:	mov    rdi,QWORD PTR [rsp+0x168]
   140009ea9:	mov    rbx,QWORD PTR [rsp+0x178]
   140009eb1:	mov    r12,QWORD PTR [rsp+0x160]
   140009eb9:	mov    r13,QWORD PTR [rsp+0x158]
   140009ec1:	add    rsp,0x180
   140009ec8:	pop    rbp
   140009ec9:	ret    
   140009eca:	xchg   ax,ax
   140009ecc:	xchg   edx,eax
   140009ecd:	xchg   esp,eax
   140009ece:	add    BYTE PTR [rax],al
   140009ed0:	out    dx,eax
   140009ed1:	xchg   esp,eax
   140009ed2:	add    BYTE PTR [rax],al
   140009ed4:	(bad)  
   140009ed5:	xchg   esp,eax
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	(bad)  
   140009ed9:	xchg   esp,eax
   140009eda:	add    BYTE PTR [rax],al
   140009edc:	cld    
   140009edd:	xchg   ebx,eax
   140009ede:	add    BYTE PTR [rax],al
   140009ee0:	repnz xchg ebx,eax
   140009ee2:	add    BYTE PTR [rax],al
   140009ee4:	mov    ebp,0x31000093
   140009ee9:	xchg   ebx,eax
   140009eea:	add    BYTE PTR [rax],al
   140009eec:	(bad)  
   140009eed:	xchg   ebx,eax
   140009eee:	add    BYTE PTR [rax],al
   140009ef0:	sahf   
   140009ef1:	xchg   edx,eax
   140009ef2:	add    BYTE PTR [rax],al
   140009ef4:	and    cl,BYTE PTR [rdi-0x755f0000]
   140009efa:	add    BYTE PTR [rax],al
   140009efc:	rex.WRB
   140009efd:	fwait
   140009efe:	add    BYTE PTR [rax],al
   140009f00:	sbb    BYTE PTR [rdi-0x6c610000],cl
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	lea    ecx,[rsi-0x71d30000]
   140009f0e:	add    BYTE PTR [rax],al
   140009f10:	lea    rax,[rax]
   140009f13:	add    BYTE PTR [rsi],bh
   140009f15:	lea    eax,[rax]
   140009f17:	add    BYTE PTR [rcx*4-0x72d60000],dh
   140009f1e:	add    BYTE PTR [rax],al
   140009f20:	clc    
   140009f21:	mov    WORD PTR [rax],es
   140009f23:	add    dh,ch
   140009f25:	mov    WORD PTR [rax],es
   140009f27:	add    BYTE PTR [rcx-0x78ffff74],dl
   140009f2d:	mov    WORD PTR [rax],es
   140009f2f:	add    BYTE PTR [rbp-0x74],bh
   140009f32:	add    BYTE PTR [rax],al
   140009f34:	pop    rbp
   140009f35:	fwait
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	add    BYTE PTR [rcx],al
   140009f3a:	sbb    bl,BYTE PTR [rdx]
   140009f3c:	add    al,BYTE PTR [rbx]
   140009f3e:	add    DWORD PTR [rax*1+0x9080706],eax
   140009f45:	or     cl,BYTE PTR [rbx]
   140009f47:	or     al,0xc
   140009f49:	or     al,0xc
   140009f4b:	or     al,0xc
   140009f4d:	or     al,0xc
   140009f4f:	or     al,0xc
   140009f51:	or     eax,0x11100f0e
   140009f56:	adc    bl,BYTE PTR [rdx]
   140009f58:	sbb    bl,BYTE PTR [rdx]
   140009f5a:	sbb    bl,BYTE PTR [rdx]
   140009f5c:	sbb    bl,BYTE PTR [rdx]
   140009f5e:	sbb    bl,BYTE PTR [rdx]
   140009f60:	sbb    bl,BYTE PTR [rdx]
   140009f62:	sbb    bl,BYTE PTR [rdx]
   140009f64:	sbb    bl,BYTE PTR [rdx]
   140009f66:	sbb    bl,BYTE PTR [rdx]
   140009f68:	sbb    bl,BYTE PTR [rdx]
   140009f6a:	sbb    bl,BYTE PTR [rdx]
   140009f6c:	sbb    bl,BYTE PTR [rdx]
   140009f6e:	sbb    bl,BYTE PTR [rdx]
   140009f70:	sbb    bl,BYTE PTR [rdx]
   140009f72:	adc    ebx,DWORD PTR [rdx]
   140009f74:	adc    al,0x15
   140009f76:	sbb    bl,BYTE PTR [rdx]
   140009f78:	sbb    bl,BYTE PTR [rdx]
   140009f7a:	sbb    bl,BYTE PTR [rdx]
   140009f7c:	sbb    bl,BYTE PTR [rdx]
   140009f7e:	sbb    bl,BYTE PTR [rdx]
   140009f80:	sbb    bl,BYTE PTR [rdx]
   140009f82:	sbb    bl,BYTE PTR [rdx]
   140009f84:	sbb    bl,BYTE PTR [rdx]
   140009f86:	sbb    bl,BYTE PTR [rdx]
   140009f88:	sbb    bl,BYTE PTR [rdx]
   140009f8a:	sbb    bl,BYTE PTR [rdx]
   140009f8c:	sbb    bl,BYTE PTR [rdx]
   140009f8e:	sbb    bl,BYTE PTR [rdx]
   140009f90:	sbb    bl,BYTE PTR [rdx]
   140009f92:	(bad)  
   140009f93:	(bad)  
   140009f94:	sbb    BYTE PTR [rcx],bl
   140009f96:	xchg   ax,ax
   140009f98:	sbb    BYTE PTR [rdx-0x67740000],bl
   140009f9e:	add    BYTE PTR [rax],al
   140009fa0:	pop    rdx
   140009fa1:	cwde   
   140009fa2:	add    BYTE PTR [rax],al
   140009fa4:	(bad)  
   140009fa5:	cdq    
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	mov    al,0x9a
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	sub    BYTE PTR [rax-0x67420000],bl
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	(bad)  
   140009fb5:	cwde   
   140009fb6:	add    BYTE PTR [rax],al
   140009fb8:	(bad)  
   140009fb9:	cdq    
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	rex.X cdq 
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	outs   dx,BYTE PTR ds:[rsi]
   140009fc1:	cdq    
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	and    BYTE PTR [rdi-0x66660000],dl
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009fcd:	xchg   edi,eax
   140009fce:	add    BYTE PTR [rax],al
   140009fd0:	and    bl,BYTE PTR [rdx+0xe000000]
   140009fd6:	(bad)  
   140009fd7:	add    BYTE PTR [rsi],cl
   140009fd9:	(bad)  
   140009fda:	(bad)  
   140009fdb:	(bad)  
   140009fdc:	(bad)  
   140009fdd:	(bad)  
   140009fde:	(bad)  
   140009fdf:	(bad)  
   140009fe0:	(bad)  
   140009fe1:	(bad)  
   140009fe2:	(bad)  
   140009fe3:	(bad)  
   140009fe4:	(bad)  
   140009fe5:	(bad)  
   140009fe6:	(bad)  
   140009fe7:	(bad)  
   140009fe8:	(bad)  
   140009fe9:	(bad)  
   140009fea:	(bad)  
   140009feb:	(bad)  
   140009fec:	add    DWORD PTR [rsi],ecx
   140009fee:	(bad)  
   140009fef:	(bad)  
   140009ff0:	(bad)  
   140009ff1:	add    cl,BYTE PTR [rsi]
   140009ff3:	(bad)  
   140009ff4:	(bad)  
   140009ff5:	(bad)  
   140009ff6:	(bad)  
   140009ff7:	(bad)  
   140009ff8:	(bad)  
   140009ff9:	(bad)  
   140009ffa:	add    eax,DWORD PTR [rsp+rax*1]
   140009ffd:	add    al,0x4
   140009fff:	add    al,0x4
   14000a001:	add    al,0x4
   14000a003:	add    al,0xe
   14000a005:	(bad)  
   14000a006:	(bad)  
   14000a007:	(bad)  
   14000a008:	(bad)  
   14000a009:	(bad)  
   14000a00a:	(bad)  
   14000a00b:	(bad)  
   14000a00c:	(bad)  
   14000a00d:	(bad)  
   14000a00e:	(bad)  
   14000a00f:	(bad)  
   14000a010:	(bad)  
   14000a011:	(bad)  
   14000a012:	(bad)  
   14000a013:	(bad)  
   14000a014:	(bad)  
   14000a015:	(bad)  
   14000a016:	(bad)  
   14000a017:	(bad)  
   14000a018:	(bad)  
   14000a019:	(bad)  
   14000a01a:	(bad)  
   14000a01b:	(bad)  
   14000a01c:	(bad)  
   14000a01d:	(bad)  
   14000a01e:	(bad)  
   14000a01f:	(bad)  
   14000a020:	(bad)  
   14000a021:	(bad)  
   14000a022:	(bad)  
   14000a023:	(bad)  
   14000a024:	(bad)  
   14000a025:	(bad)  
   14000a026:	add    eax,0xe0e0e0e
   14000a02b:	(bad)  
   14000a02c:	(bad)  
   14000a02d:	(bad)  
   14000a02e:	(bad)  
   14000a02f:	(bad)  
   14000a030:	(bad)  
   14000a031:	(bad)  
   14000a032:	(bad)  
   14000a033:	(bad)  
   14000a034:	(bad)  
   14000a035:	(bad)  
   14000a036:	(bad)  
   14000a037:	(bad)  
   14000a038:	or     BYTE PTR [rsi],cl
   14000a03a:	(bad)  
   14000a03b:	(bad)  
   14000a03c:	or     DWORD PTR [rsi],ecx
   14000a03e:	or     cl,BYTE PTR [rbx]
   14000a040:	or     al,0xe
   14000a042:	or     eax,0xcccccccc
   14000a047:	int3   
   14000a048:	int3   
   14000a049:	int3   
   14000a04a:	int3   
   14000a04b:	int3   
   14000a04c:	int3   
   14000a04d:	int3   
   14000a04e:	int3   
   14000a04f:	int3   
   14000a050:	mov    QWORD PTR [rsp+0x8],rbx
   14000a055:	mov    QWORD PTR [rsp+0x10],rbp
   14000a05a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a05f:	push   rdi
   14000a060:	sub    rsp,0x20
   14000a064:	mov    ebx,DWORD PTR [rcx+0x80]
   14000a06a:	xor    ebp,ebp
   14000a06c:	mov    rdi,rcx
   14000a06f:	mov    QWORD PTR [rcx+0x20],rbp
   14000a073:	mov    DWORD PTR [rcx+0x28],ebp
   14000a076:	mov    DWORD PTR [rcx+0x2c],ebp
   14000a079:	call   0x140008970
   14000a07e:	mov    rdx,QWORD PTR [rdi+0x30]
   14000a082:	mov    BYTE PTR [rdi+0x91],bpl
   14000a089:	sub    rdx,QWORD PTR [rdi+0x50]
   14000a08d:	mov    esi,eax
   14000a08f:	mov    DWORD PTR [rdi+0x80],eax
   14000a095:	sar    rdx,1
   14000a098:	mov    BYTE PTR [rdi+0x8e],bpl
   14000a09f:	dec    edx
   14000a0a1:	cmp    ebx,0x37
   14000a0a4:	sete   al
   14000a0a7:	mov    DWORD PTR [rdi+0x84],edx
   14000a0ad:	mov    BYTE PTR [rdi+0x90],al
   14000a0b3:	lea    eax,[rsi-0x4]
   14000a0b6:	cmp    eax,0x4a
   14000a0b9:	ja     0x14000a0f6
   14000a0bb:	lea    rdx,[rip+0xffffffffffff5f3e]        # 0x140000000
   14000a0c2:	cdqe   
   14000a0c4:	movzx  eax,BYTE PTR [rdx+rax*1+0xa170]
   14000a0cc:	mov    ecx,DWORD PTR [rdx+rax*4+0xa15c]
   14000a0d3:	add    rcx,rdx
   14000a0d6:	jmp    rcx
   14000a0d8:	mov    DWORD PTR [rdi+0x70],0x1
   14000a0df:	mov    DWORD PTR [rdi+0x74],ebp
   14000a0e2:	jmp    0x14000a108
   14000a0e4:	mov    DWORD PTR [rdi+0x70],0x2
   14000a0eb:	jmp    0x14000a108
   14000a0ed:	mov    BYTE PTR [rdi+0x8e],0x1
   14000a0f4:	jmp    0x14000a108
   14000a0f6:	mov    ecx,esi
   14000a0f8:	call   0x140007230
   14000a0fd:	test   al,al
   14000a0ff:	je     0x14000a108
   14000a101:	mov    BYTE PTR [rdi+0x91],0x1
   14000a108:	mov    ecx,DWORD PTR [rdi+0x70]
   14000a10b:	sub    ecx,0x1
   14000a10e:	je     0x14000a126
   14000a110:	cmp    ecx,0x1
   14000a113:	jne    0x14000a144
   14000a115:	cmp    esi,0xe
   14000a118:	je     0x14000a144
   14000a11a:	mov    eax,esi
   14000a11c:	cmp    esi,0x10
   14000a11f:	je     0x14000a146
   14000a121:	mov    DWORD PTR [rdi+0x70],ebp
   14000a124:	jmp    0x14000a146
   14000a126:	cmp    esi,0x3c
   14000a129:	jne    0x14000a13c
   14000a12b:	add    DWORD PTR [rdi+0x74],0xffffffff
   14000a12f:	mov    eax,esi
   14000a131:	jne    0x14000a146
   14000a133:	mov    DWORD PTR [rdi+0x70],0x2
   14000a13a:	jmp    0x14000a146
   14000a13c:	cmp    esi,0x24
   14000a13f:	jne    0x14000a144
   14000a141:	inc    DWORD PTR [rdi+0x74]
   14000a144:	mov    eax,esi
   14000a146:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a14b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a150:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a155:	add    rsp,0x20
   14000a159:	pop    rdi
   14000a15a:	ret    
   14000a15b:	nop
   14000a15c:	in     eax,dx
   14000a15d:	movabs al,ds:0xa0e40000a1010000
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	fsub   DWORD PTR [rax-0x5f0a0000]
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	add    BYTE PTR [rsp+rax*1],al
   14000a173:	add    DWORD PTR [rax+rax*1],eax
   14000a176:	add    al,0x4
   14000a178:	add    al,0x4
   14000a17a:	add    al,BYTE PTR [rdx+rax*1]
   14000a17d:	add    al,0x4
   14000a17f:	add    al,0x4
   14000a181:	add    eax,DWORD PTR [rsp+rax*1]
   14000a184:	add    al,0x4
   14000a186:	add    al,0x4
   14000a188:	add    al,0x4
   14000a18a:	add    eax,DWORD PTR [rsp+rax*1]
   14000a18d:	add    DWORD PTR [rsp+rax*1],eax
   14000a190:	add    al,0x4
   14000a192:	add    al,0x4
   14000a194:	add    al,0x4
   14000a196:	add    al,0x4
   14000a198:	add    al,0x4
   14000a19a:	add    al,0x4
   14000a19c:	add    al,0x4
   14000a19e:	add    al,0x4
   14000a1a0:	add    al,0x4
   14000a1a2:	add    DWORD PTR [rsp+rax*1],eax
   14000a1a5:	add    al,0x4
   14000a1a7:	add    BYTE PTR [rcx+rax*1],al
   14000a1aa:	add    al,0x4
   14000a1ac:	add    al,0x4
   14000a1ae:	add    al,0x4
   14000a1b0:	add    al,0x4
   14000a1b2:	add    al,0x0
   14000a1b4:	add    DWORD PTR [rsp+rax*1],eax
   14000a1b7:	add    al,0x4
   14000a1b9:	add    eax,DWORD PTR [rbx]
   14000a1bb:	int3   
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	rex push rbx
   14000a1c2:	push   rbp
   14000a1c3:	push   r13
   14000a1c5:	push   r15
   14000a1c7:	sub    rsp,0x158
   14000a1ce:	xor    r13d,r13d
   14000a1d1:	mov    rbp,r8
   14000a1d4:	mov    r15,rdx
   14000a1d7:	mov    DWORD PTR [rsp+0x180],r13d
   14000a1df:	mov    rbx,rcx
   14000a1e2:	call   0x14000a050
   14000a1e7:	cmp    DWORD PTR [rbx+0x80],0xf
   14000a1ee:	je     0x14000a200
   14000a1f0:	mov    al,0x1
   14000a1f2:	add    rsp,0x158
   14000a1f9:	pop    r15
   14000a1fb:	pop    r13
   14000a1fd:	pop    rbp
   14000a1fe:	pop    rbx
   14000a1ff:	ret    
   14000a200:	mov    QWORD PTR [rsp+0x188],rsi
   14000a208:	mov    QWORD PTR [rsp+0x148],r12
   14000a210:	mov    QWORD PTR [rsp+0x140],r14
   14000a218:	lea    r14,[rip+0x2675]        # 0x14000c894
   14000a21f:	mov    QWORD PTR [rsp+0x150],rdi
   14000a227:	nop    WORD PTR [rax+rax*1+0x0]
   14000a230:	mov    r12,QWORD PTR [rbx+0x50]
   14000a234:	mov    esi,DWORD PTR [rbx+0x88]
   14000a23a:	mov    rcx,rbx
   14000a23d:	sub    r12,QWORD PTR [rbx+0x48]
   14000a241:	sar    r12,1
   14000a244:	inc    r12d
   14000a247:	call   0x14000a050
   14000a24c:	mov    edx,DWORD PTR [rbx+0x80]
   14000a252:	cmp    edx,0x1d
   14000a255:	je     0x14000a260
   14000a257:	cmp    edx,0x56
   14000a25a:	jne    0x14000a97d
   14000a260:	cmp    BYTE PTR [rbx+0x8c],0x0
   14000a267:	je     0x14000a27a
   14000a269:	lea    rdx,[rbx+0x10]
   14000a26d:	lea    rcx,[rsp+0x30]
   14000a272:	call   QWORD PTR [rip+0x2148]        # 0x14000c3c0
   14000a278:	jmp    0x14000a2b5
   14000a27a:	cmp    edx,0x41
   14000a27d:	jne    0x14000a29f
   14000a27f:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a286:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a28a:	lea    rcx,[rsp+0x30]
   14000a28f:	sub    r8d,0x2
   14000a293:	add    rdx,0x2
   14000a297:	call   QWORD PTR [rip+0x1f2b]        # 0x14000c1c8
   14000a29d:	jmp    0x14000a2b5
   14000a29f:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a2a6:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a2aa:	lea    rcx,[rsp+0x30]
   14000a2af:	call   QWORD PTR [rip+0x1f13]        # 0x14000c1c8
   14000a2b5:	or     rcx,0xffffffffffffffff
   14000a2b9:	xor    eax,eax
   14000a2bb:	mov    rdi,r14
   14000a2be:	repnz scas al,BYTE PTR es:[rdi]
   14000a2c0:	mov    QWORD PTR [rsp+0xa8],r14
   14000a2c8:	lea    rdx,[rsp+0xe0]
   14000a2d0:	not    rcx
   14000a2d3:	dec    rcx
   14000a2d6:	mov    DWORD PTR [rsp+0xa0],ecx
   14000a2dd:	lea    rcx,[rsp+0x30]
   14000a2e2:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000a2ea:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   14000a2f3:	call   QWORD PTR [rip+0x2097]        # 0x14000c390
   14000a2f9:	test   al,al
   14000a2fb:	jne    0x14000a350
   14000a2fd:	or     rcx,0xffffffffffffffff
   14000a301:	lea    rdx,[rip+0x2594]        # 0x14000c89c
   14000a308:	xor    eax,eax
   14000a30a:	mov    rdi,rdx
   14000a30d:	mov    QWORD PTR [rsp+0x88],rdx
   14000a315:	lea    rdx,[rsp+0x100]
   14000a31d:	repnz scas al,BYTE PTR es:[rdi]
   14000a31f:	not    rcx
   14000a322:	dec    rcx
   14000a325:	mov    DWORD PTR [rsp+0x80],ecx
   14000a32c:	lea    rcx,[rsp+0x30]
   14000a331:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000a339:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000a342:	call   QWORD PTR [rip+0x2048]        # 0x14000c390
   14000a348:	test   al,al
   14000a34a:	je     0x14000a9d4
   14000a350:	or     rcx,0xffffffffffffffff
   14000a354:	xor    eax,eax
   14000a356:	mov    rdi,r14
   14000a359:	repnz scas al,BYTE PTR es:[rdi]
   14000a35b:	mov    QWORD PTR [rsp+0xc8],r14
   14000a363:	lea    rdx,[rsp+0x120]
   14000a36b:	not    rcx
   14000a36e:	dec    rcx
   14000a371:	mov    DWORD PTR [rsp+0xc0],ecx
   14000a378:	lea    rcx,[rsp+0x30]
   14000a37d:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000a385:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000a38e:	call   QWORD PTR [rip+0x1ffc]        # 0x14000c390
   14000a394:	test   al,al
   14000a396:	je     0x14000a48c
   14000a39c:	mov    rcx,rbx
   14000a39f:	call   0x14000a050
   14000a3a4:	cmp    eax,0x1d
   14000a3a7:	jne    0x14000a45d
   14000a3ad:	or     rcx,0xffffffffffffffff
   14000a3b1:	lea    rdx,[rip+0x7cc0]        # 0x140012078
   14000a3b8:	xor    eax,eax
   14000a3ba:	mov    rdi,rdx
   14000a3bd:	mov    QWORD PTR [rsp+0x98],rdx
   14000a3c5:	or     r13d,0x1
   14000a3c9:	repnz scas al,BYTE PTR es:[rdi]
   14000a3cb:	not    rcx
   14000a3ce:	dec    rcx
   14000a3d1:	mov    DWORD PTR [rsp+0x90],ecx
   14000a3d8:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000a3e0:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000a3e9:	cmp    BYTE PTR [rbx+0x8c],al
   14000a3ef:	je     0x14000a402
   14000a3f1:	lea    rdx,[rbx+0x10]
   14000a3f5:	lea    rcx,[rsp+0x50]
   14000a3fa:	call   QWORD PTR [rip+0x1fc0]        # 0x14000c3c0
   14000a400:	jmp    0x14000a441
   14000a402:	cmp    DWORD PTR [rbx+0x80],0x41
   14000a409:	jne    0x14000a42b
   14000a40b:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a412:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a416:	lea    rcx,[rsp+0x50]
   14000a41b:	sub    r8d,0x2
   14000a41f:	add    rdx,0x2
   14000a423:	call   QWORD PTR [rip+0x1d9f]        # 0x14000c1c8
   14000a429:	jmp    0x14000a441
   14000a42b:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a432:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a436:	lea    rcx,[rsp+0x50]
   14000a43b:	call   QWORD PTR [rip+0x1d87]        # 0x14000c1c8
   14000a441:	lea    rdx,[rsp+0xf0]
   14000a449:	lea    rcx,[rsp+0x50]
   14000a44e:	call   QWORD PTR [rip+0x1f3c]        # 0x14000c390
   14000a454:	test   al,al
   14000a456:	je     0x14000a45d
   14000a458:	xor    dil,dil
   14000a45b:	jmp    0x14000a460
   14000a45d:	mov    dil,0x1
   14000a460:	test   r13b,0x1
   14000a464:	je     0x14000a475
   14000a466:	lea    rcx,[rsp+0x50]
   14000a46b:	and    r13d,0xfffffffe
   14000a46f:	call   QWORD PTR [rip+0x1f43]        # 0x14000c3b8
   14000a475:	test   dil,dil
   14000a478:	jne    0x14000a9d4
   14000a47e:	mov    rax,QWORD PTR [r15]
   14000a481:	mov    rcx,r15
   14000a484:	call   QWORD PTR [rax+0x8]
   14000a487:	jmp    0x14000a955
   14000a48c:	mov    rcx,rbx
   14000a48f:	call   0x14000a050
   14000a494:	lea    rcx,[rsp+0x38]
   14000a499:	call   QWORD PTR [rip+0x1f29]        # 0x14000c3c8
   14000a49f:	lea    rcx,[rsp+0x40]
   14000a4a4:	call   QWORD PTR [rip+0x1f1e]        # 0x14000c3c8
   14000a4aa:	mov    eax,DWORD PTR [rbx+0x80]
   14000a4b0:	xor    r14b,r14b
   14000a4b3:	cmp    eax,0x41
   14000a4b6:	jne    0x14000a5b9
   14000a4bc:	cmp    BYTE PTR [rbx+0x8c],0x0
   14000a4c3:	mov    r14b,0x1
   14000a4c6:	je     0x14000a4d9
   14000a4c8:	lea    rdx,[rbx+0x10]
   14000a4cc:	lea    rcx,[rsp+0x68]
   14000a4d1:	call   QWORD PTR [rip+0x1ee9]        # 0x14000c3c0
   14000a4d7:	jmp    0x14000a4f7
   14000a4d9:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a4e0:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a4e4:	lea    rcx,[rsp+0x68]
   14000a4e9:	sub    r8d,0x2
   14000a4ed:	add    rdx,0x2
   14000a4f1:	call   QWORD PTR [rip+0x1cd1]        # 0x14000c1c8
   14000a4f7:	lea    rdx,[rsp+0x68]
   14000a4fc:	lea    rcx,[rsp+0x38]
   14000a501:	call   QWORD PTR [rip+0x1e99]        # 0x14000c3a0
   14000a507:	lea    rcx,[rsp+0x68]
   14000a50c:	call   QWORD PTR [rip+0x1ea6]        # 0x14000c3b8
   14000a512:	or     rcx,0xffffffffffffffff
   14000a516:	lea    rdx,[rip+0x7b53]        # 0x140012070
   14000a51d:	mov    rdi,rdx
   14000a520:	xor    eax,eax
   14000a522:	mov    QWORD PTR [rsp+0xb8],rdx
   14000a52a:	repnz scas al,BYTE PTR es:[rdi]
   14000a52c:	lea    r8d,[rax+0x1]
   14000a530:	lea    rdx,[rsp+0x110]
   14000a538:	not    rcx
   14000a53b:	dec    rcx
   14000a53e:	mov    DWORD PTR [rsp+0xb0],ecx
   14000a545:	lea    rcx,[rsp+0x38]
   14000a54a:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000a552:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000a55b:	call   QWORD PTR [rip+0x1c9f]        # 0x14000c200
   14000a561:	test   al,al
   14000a563:	jne    0x14000a74f
   14000a569:	lea    r8,[rip+0x7ae0]        # 0x140012050
   14000a570:	lea    rdx,[rip+0x78a9]        # 0x140011e20
   14000a577:	lea    rcx,[rsp+0x180]
   14000a57f:	xor    r9d,r9d
   14000a582:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a58a:	call   QWORD PTR [rip+0x1c48]        # 0x14000c1d8
   14000a590:	lea    rcx,[rbp+0x18]
   14000a594:	mov    rdx,rax
   14000a597:	call   QWORD PTR [rip+0x1e03]        # 0x14000c3a0
   14000a59d:	lea    rcx,[rsp+0x180]
   14000a5a5:	call   QWORD PTR [rip+0x1e0d]        # 0x14000c3b8
   14000a5ab:	mov    edx,DWORD PTR [rbx+0x88]
   14000a5b1:	mov    DWORD PTR [rbp+0xc],edx
   14000a5b4:	jmp    0x14000ab33
   14000a5b9:	cmp    eax,0x1d
   14000a5bc:	jne    0x14000a74f
   14000a5c2:	mov    edx,DWORD PTR [rbx+0x80]
   14000a5c8:	lea    rcx,[rip+0x7731]        # 0x140011d00
   14000a5cf:	mov    eax,0x1d
   14000a5d4:	cmp    eax,edx
   14000a5d6:	je     0x14000a633
   14000a5d8:	mov    eax,DWORD PTR [rcx+0x4]
   14000a5db:	add    rcx,0x4
   14000a5df:	test   eax,eax
   14000a5e1:	jne    0x14000a5d4
   14000a5e3:	lea    r8,[rip+0x7a4e]        # 0x140012038
   14000a5ea:	lea    rdx,[rip+0x782f]        # 0x140011e20
   14000a5f1:	lea    rcx,[rsp+0x180]
   14000a5f9:	xor    r9d,r9d
   14000a5fc:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a604:	call   QWORD PTR [rip+0x1bce]        # 0x14000c1d8
   14000a60a:	lea    rcx,[rbp+0x18]
   14000a60e:	mov    rdx,rax
   14000a611:	call   QWORD PTR [rip+0x1d89]        # 0x14000c3a0
   14000a617:	lea    rcx,[rsp+0x180]
   14000a61f:	call   QWORD PTR [rip+0x1d93]        # 0x14000c3b8
   14000a625:	mov    edx,DWORD PTR [rbx+0x88]
   14000a62b:	mov    DWORD PTR [rbp+0xc],edx
   14000a62e:	jmp    0x14000ab33
   14000a633:	cmp    BYTE PTR [rbx+0x8c],0x0
   14000a63a:	je     0x14000a64d
   14000a63c:	lea    rdx,[rbx+0x10]
   14000a640:	lea    rcx,[rsp+0x60]
   14000a645:	call   QWORD PTR [rip+0x1d75]        # 0x14000c3c0
   14000a64b:	jmp    0x14000a688
   14000a64d:	cmp    edx,0x41
   14000a650:	jne    0x14000a672
   14000a652:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a659:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a65d:	lea    rcx,[rsp+0x60]
   14000a662:	sub    r8d,0x2
   14000a666:	add    rdx,0x2
   14000a66a:	call   QWORD PTR [rip+0x1b58]        # 0x14000c1c8
   14000a670:	jmp    0x14000a688
   14000a672:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a679:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a67d:	lea    rcx,[rsp+0x60]
   14000a682:	call   QWORD PTR [rip+0x1b40]        # 0x14000c1c8
   14000a688:	lea    rdx,[rsp+0x60]
   14000a68d:	lea    rcx,[rsp+0x38]
   14000a692:	call   QWORD PTR [rip+0x1cc0]        # 0x14000c358
   14000a698:	lea    rcx,[rsp+0x60]
   14000a69d:	call   QWORD PTR [rip+0x1d15]        # 0x14000c3b8
   14000a6a3:	mov    rcx,rbx
   14000a6a6:	call   0x14000a050
   14000a6ab:	cmp    DWORD PTR [rbx+0x88],esi
   14000a6b1:	jne    0x14000a5e3
   14000a6b7:	cmp    DWORD PTR [rbx+0x80],0xf
   14000a6be:	jne    0x14000a6f7
   14000a6c0:	lea    rcx,[rsp+0x180]
   14000a6c8:	mov    dl,0x2e
   14000a6ca:	call   QWORD PTR [rip+0x1ca8]        # 0x14000c378
   14000a6d0:	lea    rcx,[rsp+0x38]
   14000a6d5:	movzx  edx,WORD PTR [rax]
   14000a6d8:	call   QWORD PTR [rip+0x1c72]        # 0x14000c350
   14000a6de:	mov    rcx,rbx
   14000a6e1:	call   0x14000a050
   14000a6e6:	cmp    DWORD PTR [rbx+0x88],esi
   14000a6ec:	je     0x14000a5c2
   14000a6f2:	jmp    0x14000a5e3
   14000a6f7:	cmp    DWORD PTR [rbx+0x80],0x2f
   14000a6fe:	jne    0x14000a984
   14000a704:	cmp    BYTE PTR [rbx+0x8c],0x0
   14000a70b:	je     0x14000a71e
   14000a70d:	lea    rdx,[rbx+0x10]
   14000a711:	lea    rcx,[rsp+0x70]
   14000a716:	call   QWORD PTR [rip+0x1ca4]        # 0x14000c3c0
   14000a71c:	jmp    0x14000a734
   14000a71e:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a725:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a729:	lea    rcx,[rsp+0x70]
   14000a72e:	call   QWORD PTR [rip+0x1a94]        # 0x14000c1c8
   14000a734:	lea    rdx,[rsp+0x70]
   14000a739:	lea    rcx,[rsp+0x40]
   14000a73e:	call   QWORD PTR [rip+0x1c5c]        # 0x14000c3a0
   14000a744:	lea    rcx,[rsp+0x70]
   14000a749:	call   QWORD PTR [rip+0x1c69]        # 0x14000c3b8
   14000a74f:	mov    rcx,rbx
   14000a752:	call   0x14000a050
   14000a757:	cmp    eax,0x1d
   14000a75a:	jne    0x14000a818
   14000a760:	or     rcx,0xffffffffffffffff
   14000a764:	lea    rdx,[rip+0x2125]        # 0x14000c890
   14000a76b:	xor    eax,eax
   14000a76d:	mov    rdi,rdx
   14000a770:	mov    QWORD PTR [rsp+0xd8],rdx
   14000a778:	or     r13d,0x2
   14000a77c:	repnz scas al,BYTE PTR es:[rdi]
   14000a77e:	not    rcx
   14000a781:	dec    rcx
   14000a784:	mov    DWORD PTR [rsp+0xd0],ecx
   14000a78b:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000a793:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000a79c:	cmp    BYTE PTR [rbx+0x8c],al
   14000a7a2:	je     0x14000a7b5
   14000a7a4:	lea    rdx,[rbx+0x10]
   14000a7a8:	lea    rcx,[rsp+0x58]
   14000a7ad:	call   QWORD PTR [rip+0x1c0d]        # 0x14000c3c0
   14000a7b3:	jmp    0x14000a7f4
   14000a7b5:	cmp    DWORD PTR [rbx+0x80],0x41
   14000a7bc:	jne    0x14000a7de
   14000a7be:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a7c5:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a7c9:	lea    rcx,[rsp+0x58]
   14000a7ce:	sub    r8d,0x2
   14000a7d2:	add    rdx,0x2
   14000a7d6:	call   QWORD PTR [rip+0x19ec]        # 0x14000c1c8
   14000a7dc:	jmp    0x14000a7f4
   14000a7de:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a7e5:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a7e9:	lea    rcx,[rsp+0x58]
   14000a7ee:	call   QWORD PTR [rip+0x19d4]        # 0x14000c1c8
   14000a7f4:	lea    rdx,[rsp+0x130]
   14000a7fc:	lea    rcx,[rsp+0x58]
   14000a801:	call   QWORD PTR [rip+0x1b89]        # 0x14000c390
   14000a807:	test   al,al
   14000a809:	je     0x14000a818
   14000a80b:	cmp    DWORD PTR [rbx+0x88],esi
   14000a811:	jne    0x14000a818
   14000a813:	xor    dil,dil
   14000a816:	jmp    0x14000a81b
   14000a818:	mov    dil,0x1
   14000a81b:	test   r13b,0x2
   14000a81f:	je     0x14000a830
   14000a821:	lea    rcx,[rsp+0x58]
   14000a826:	and    r13d,0xfffffffd
   14000a82a:	call   QWORD PTR [rip+0x1b88]        # 0x14000c3b8
   14000a830:	test   dil,dil
   14000a833:	jne    0x14000ab94
   14000a839:	mov    rcx,rbx
   14000a83c:	call   0x14000a050
   14000a841:	cmp    eax,0x1d
   14000a844:	jne    0x14000aa9f
   14000a84a:	cmp    DWORD PTR [rbx+0x88],esi
   14000a850:	jne    0x14000aa9f
   14000a856:	cmp    BYTE PTR [rbx+0x8c],dil
   14000a85d:	je     0x14000a870
   14000a85f:	lea    rdx,[rbx+0x10]
   14000a863:	lea    rcx,[rsp+0x48]
   14000a868:	call   QWORD PTR [rip+0x1b52]        # 0x14000c3c0
   14000a86e:	jmp    0x14000a8af
   14000a870:	cmp    DWORD PTR [rbx+0x80],0x41
   14000a877:	jne    0x14000a899
   14000a879:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a880:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a884:	lea    rcx,[rsp+0x48]
   14000a889:	sub    r8d,0x2
   14000a88d:	add    rdx,0x2
   14000a891:	call   QWORD PTR [rip+0x1931]        # 0x14000c1c8
   14000a897:	jmp    0x14000a8af
   14000a899:	mov    r8d,DWORD PTR [rbx+0x84]
   14000a8a0:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a8a4:	lea    rcx,[rsp+0x48]
   14000a8a9:	call   QWORD PTR [rip+0x1919]        # 0x14000c1c8
   14000a8af:	lea    rdx,[rsp+0x198]
   14000a8b7:	lea    rcx,[rsp+0x48]
   14000a8bc:	xor    r8d,r8d
   14000a8bf:	call   QWORD PTR [rip+0x1973]        # 0x14000c238
   14000a8c5:	movzx  ecx,WORD PTR [rax]
   14000a8c8:	cmp    ecx,0x5a
   14000a8cb:	ja     0x14000a8d2
   14000a8cd:	cmp    ecx,0x41
   14000a8d0:	jae    0x14000a8ea
   14000a8d2:	cmp    ecx,0x7f
   14000a8d5:	jbe    0x14000aa34
   14000a8db:	call   QWORD PTR [rip+0x18df]        # 0x14000c1c0
   14000a8e1:	cmp    eax,0xe
   14000a8e4:	jne    0x14000aa34
   14000a8ea:	test   r14b,r14b
   14000a8ed:	je     0x14000a90c
   14000a8ef:	mov    rax,QWORD PTR [r15]
   14000a8f2:	lea    r8,[rsp+0x48]
   14000a8f7:	lea    rdx,[rsp+0x38]
   14000a8fc:	mov    r9d,esi
   14000a8ff:	mov    rcx,r15
   14000a902:	mov    DWORD PTR [rsp+0x20],r12d
   14000a907:	call   QWORD PTR [rax+0x10]
   14000a90a:	jmp    0x14000a92d
   14000a90c:	mov    rax,QWORD PTR [r15]
   14000a90f:	lea    r9,[rsp+0x48]
   14000a914:	lea    r8,[rsp+0x40]
   14000a919:	lea    rdx,[rsp+0x38]
   14000a91e:	mov    rcx,r15
   14000a921:	mov    DWORD PTR [rsp+0x28],r12d
   14000a926:	mov    DWORD PTR [rsp+0x20],esi
   14000a92a:	call   QWORD PTR [rax+0x18]
   14000a92d:	lea    rcx,[rsp+0x48]
   14000a932:	call   QWORD PTR [rip+0x1a80]        # 0x14000c3b8
   14000a938:	lea    rcx,[rsp+0x40]
   14000a93d:	call   QWORD PTR [rip+0x1a75]        # 0x14000c3b8
   14000a943:	lea    rcx,[rsp+0x38]
   14000a948:	call   QWORD PTR [rip+0x1a6a]        # 0x14000c3b8
   14000a94e:	lea    r14,[rip+0x1f3f]        # 0x14000c894
   14000a955:	cmp    DWORD PTR [rbx+0x88],esi
   14000a95b:	jne    0x14000a9d4
   14000a95d:	mov    rcx,rbx
   14000a960:	call   0x14000a050
   14000a965:	lea    rcx,[rsp+0x30]
   14000a96a:	call   QWORD PTR [rip+0x1a48]        # 0x14000c3b8
   14000a970:	cmp    DWORD PTR [rbx+0x80],0xf
   14000a977:	je     0x14000a230
   14000a97d:	mov    al,0x1
   14000a97f:	jmp    0x14000ab66
   14000a984:	lea    r8,[rip+0x7685]        # 0x140012010
   14000a98b:	lea    rdx,[rip+0x748e]        # 0x140011e20
   14000a992:	lea    rcx,[rsp+0x180]
   14000a99a:	xor    r9d,r9d
   14000a99d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a9a5:	call   QWORD PTR [rip+0x182d]        # 0x14000c1d8
   14000a9ab:	lea    rcx,[rbp+0x18]
   14000a9af:	mov    rdx,rax
   14000a9b2:	call   QWORD PTR [rip+0x19e8]        # 0x14000c3a0
   14000a9b8:	lea    rcx,[rsp+0x180]
   14000a9c0:	call   QWORD PTR [rip+0x19f2]        # 0x14000c3b8
   14000a9c6:	mov    edx,DWORD PTR [rbx+0x88]
   14000a9cc:	mov    DWORD PTR [rbp+0xc],edx
   14000a9cf:	jmp    0x14000ab33
   14000a9d4:	lea    r8,[rip+0x7625]        # 0x140012000
   14000a9db:	lea    rdx,[rip+0x743e]        # 0x140011e20
   14000a9e2:	lea    rcx,[rsp+0x180]
   14000a9ea:	xor    r9d,r9d
   14000a9ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a9f5:	call   QWORD PTR [rip+0x17dd]        # 0x14000c1d8
   14000a9fb:	lea    rcx,[rbp+0x18]
   14000a9ff:	mov    rdx,rax
   14000aa02:	call   QWORD PTR [rip+0x1998]        # 0x14000c3a0
   14000aa08:	lea    rcx,[rsp+0x180]
   14000aa10:	call   QWORD PTR [rip+0x19a2]        # 0x14000c3b8
   14000aa16:	mov    edx,DWORD PTR [rbx+0x88]
   14000aa1c:	mov    DWORD PTR [rbp+0xc],edx
   14000aa1f:	mov    rax,QWORD PTR [rbx+0x50]
   14000aa23:	sub    rax,QWORD PTR [rbx+0x48]
   14000aa27:	sar    rax,1
   14000aa2a:	inc    eax
   14000aa2c:	mov    DWORD PTR [rbp+0x10],eax
   14000aa2f:	jmp    0x14000ab59
   14000aa34:	lea    r8,[rip+0x75a5]        # 0x140011fe0
   14000aa3b:	lea    rdx,[rip+0x73de]        # 0x140011e20
   14000aa42:	lea    rcx,[rsp+0x180]
   14000aa4a:	xor    r9d,r9d
   14000aa4d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000aa55:	call   QWORD PTR [rip+0x177d]        # 0x14000c1d8
   14000aa5b:	lea    rcx,[rbp+0x18]
   14000aa5f:	mov    rdx,rax
   14000aa62:	call   QWORD PTR [rip+0x1938]        # 0x14000c3a0
   14000aa68:	lea    rcx,[rsp+0x180]
   14000aa70:	call   QWORD PTR [rip+0x1942]        # 0x14000c3b8
   14000aa76:	mov    edx,DWORD PTR [rbx+0x88]
   14000aa7c:	lea    rcx,[rsp+0x48]
   14000aa81:	mov    DWORD PTR [rbp+0xc],edx
   14000aa84:	mov    rax,QWORD PTR [rbx+0x50]
   14000aa88:	sub    rax,QWORD PTR [rbx+0x48]
   14000aa8c:	sar    rax,1
   14000aa8f:	inc    eax
   14000aa91:	mov    DWORD PTR [rbp+0x10],eax
   14000aa94:	call   QWORD PTR [rip+0x191e]        # 0x14000c3b8
   14000aa9a:	jmp    0x14000ab43
   14000aa9f:	test   r14b,r14b
   14000aaa2:	je     0x14000aae8
   14000aaa4:	lea    r8,[rip+0x750d]        # 0x140011fb8
   14000aaab:	lea    rdx,[rip+0x736e]        # 0x140011e20
   14000aab2:	lea    rcx,[rsp+0x180]
   14000aaba:	xor    r9d,r9d
   14000aabd:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000aac5:	call   QWORD PTR [rip+0x170d]        # 0x14000c1d8
   14000aacb:	lea    rcx,[rbp+0x18]
   14000aacf:	mov    rdx,rax
   14000aad2:	call   QWORD PTR [rip+0x18c8]        # 0x14000c3a0
   14000aad8:	lea    rcx,[rsp+0x180]
   14000aae0:	call   QWORD PTR [rip+0x18d2]        # 0x14000c3b8
   14000aae6:	jmp    0x14000ab2a
   14000aae8:	lea    r8,[rip+0x74a1]        # 0x140011f90
   14000aaef:	lea    rdx,[rip+0x732a]        # 0x140011e20
   14000aaf6:	lea    rcx,[rsp+0x180]
   14000aafe:	xor    r9d,r9d
   14000ab01:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ab09:	call   QWORD PTR [rip+0x16c9]        # 0x14000c1d8
   14000ab0f:	lea    rcx,[rbp+0x18]
   14000ab13:	mov    rdx,rax
   14000ab16:	call   QWORD PTR [rip+0x1884]        # 0x14000c3a0
   14000ab1c:	lea    rcx,[rsp+0x180]
   14000ab24:	call   QWORD PTR [rip+0x188e]        # 0x14000c3b8
   14000ab2a:	mov    eax,DWORD PTR [rbx+0x88]
   14000ab30:	mov    DWORD PTR [rbp+0xc],eax
   14000ab33:	mov    rax,QWORD PTR [rbx+0x50]
   14000ab37:	sub    rax,QWORD PTR [rbx+0x48]
   14000ab3b:	sar    rax,1
   14000ab3e:	inc    eax
   14000ab40:	mov    DWORD PTR [rbp+0x10],eax
   14000ab43:	lea    rcx,[rsp+0x40]
   14000ab48:	call   QWORD PTR [rip+0x186a]        # 0x14000c3b8
   14000ab4e:	lea    rcx,[rsp+0x38]
   14000ab53:	call   QWORD PTR [rip+0x185f]        # 0x14000c3b8
   14000ab59:	lea    rcx,[rsp+0x30]
   14000ab5e:	call   QWORD PTR [rip+0x1854]        # 0x14000c3b8
   14000ab64:	xor    al,al
   14000ab66:	mov    rdi,QWORD PTR [rsp+0x150]
   14000ab6e:	mov    r12,QWORD PTR [rsp+0x148]
   14000ab76:	mov    rsi,QWORD PTR [rsp+0x188]
   14000ab7e:	mov    r14,QWORD PTR [rsp+0x140]
   14000ab86:	add    rsp,0x158
   14000ab8d:	pop    r15
   14000ab8f:	pop    r13
   14000ab91:	pop    rbp
   14000ab92:	pop    rbx
   14000ab93:	ret    
   14000ab94:	test   r14b,r14b
   14000ab97:	je     0x14000abdd
   14000ab99:	lea    r8,[rip+0x7418]        # 0x140011fb8
   14000aba0:	lea    rdx,[rip+0x7279]        # 0x140011e20
   14000aba7:	lea    rcx,[rsp+0x180]
   14000abaf:	xor    r9d,r9d
   14000abb2:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000abba:	call   QWORD PTR [rip+0x1618]        # 0x14000c1d8
   14000abc0:	lea    rcx,[rbp+0x18]
   14000abc4:	mov    rdx,rax
   14000abc7:	call   QWORD PTR [rip+0x17d3]        # 0x14000c3a0
   14000abcd:	lea    rcx,[rsp+0x180]
   14000abd5:	call   QWORD PTR [rip+0x17dd]        # 0x14000c3b8
   14000abdb:	jmp    0x14000ac1f
   14000abdd:	lea    r8,[rip+0x73ac]        # 0x140011f90
   14000abe4:	lea    rdx,[rip+0x7235]        # 0x140011e20
   14000abeb:	lea    rcx,[rsp+0x180]
   14000abf3:	xor    r9d,r9d
   14000abf6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000abfe:	call   QWORD PTR [rip+0x15d4]        # 0x14000c1d8
   14000ac04:	lea    rcx,[rbp+0x18]
   14000ac08:	mov    rdx,rax
   14000ac0b:	call   QWORD PTR [rip+0x178f]        # 0x14000c3a0
   14000ac11:	lea    rcx,[rsp+0x180]
   14000ac19:	call   QWORD PTR [rip+0x1799]        # 0x14000c3b8
   14000ac1f:	mov    eax,DWORD PTR [rbx+0x88]
   14000ac25:	cmp    eax,esi
   14000ac27:	je     0x14000ab30
   14000ac2d:	mov    DWORD PTR [rbp+0xc],esi
   14000ac30:	mov    DWORD PTR [rbp+0x10],r12d
   14000ac34:	jmp    0x14000ab43
   14000ac39:	int3   
   14000ac3a:	int3   
   14000ac3b:	int3   
   14000ac3c:	int3   
   14000ac3d:	int3   
   14000ac3e:	int3   
   14000ac3f:	int3   
   14000ac40:	rex push rdi
   14000ac42:	sub    rsp,0x20
   14000ac46:	cmp    QWORD PTR [rcx+0x8],0x0
   14000ac4b:	mov    rdi,rcx
   14000ac4e:	je     0x14000aca2
   14000ac50:	mov    QWORD PTR [rsp+0x30],rbx
   14000ac55:	xor    ebx,ebx
   14000ac57:	cmp    DWORD PTR [rcx+0x10],ebx
   14000ac5a:	jle    0x14000ac93
   14000ac5c:	mov    QWORD PTR [rsp+0x38],rsi
   14000ac61:	mov    rsi,rbx
   14000ac64:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ac70:	mov    rax,QWORD PTR [rdi+0x8]
   14000ac74:	mov    rcx,QWORD PTR [rsi+rax*1]
   14000ac78:	test   rcx,rcx
   14000ac7b:	je     0x14000ac83
   14000ac7d:	call   QWORD PTR [rip+0x148d]        # 0x14000c110
   14000ac83:	inc    ebx
   14000ac85:	add    rsi,0x8
   14000ac89:	cmp    ebx,DWORD PTR [rdi+0x10]
   14000ac8c:	jl     0x14000ac70
   14000ac8e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ac93:	mov    rcx,QWORD PTR [rdi+0x8]
   14000ac97:	call   QWORD PTR [rip+0x1473]        # 0x14000c110
   14000ac9d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aca2:	add    rsp,0x20
   14000aca6:	pop    rdi
   14000aca7:	ret    
   14000aca8:	int3   
   14000aca9:	int3   
   14000acaa:	int3   
   14000acab:	int3   
   14000acac:	int3   
   14000acad:	int3   
   14000acae:	int3   
   14000acaf:	int3   
   14000acb0:	rex push rbx
   14000acb2:	sub    rsp,0x30
   14000acb6:	mov    r11d,r8d
   14000acb9:	mov    rbx,rcx
   14000acbc:	test   edx,edx
   14000acbe:	jne    0x14000accc
   14000acc0:	add    rsp,0x30
   14000acc4:	pop    rbx
   14000acc5:	rex.W jmp QWORD PTR [rip+0x1554]        # 0x14000c220
   14000accc:	movzx  eax,BYTE PTR [rbx]
   14000accf:	movsd  xmm3,QWORD PTR [rip+0x73c1]        # 0x140012098
   14000acd7:	xor    ecx,ecx
   14000acd9:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000acde:	movapd xmm6,xmm3
   14000ace2:	cmp    al,0x2b
   14000ace4:	jne    0x14000aced
   14000ace6:	mov    ecx,0x1
   14000aceb:	jmp    0x14000acfe
   14000aced:	cmp    al,0x2d
   14000acef:	jne    0x14000acfe
   14000acf1:	movsd  xmm6,QWORD PTR [rip+0x7397]        # 0x140012090
   14000acf9:	mov    ecx,0x1
   14000acfe:	mov    eax,edx
   14000ad00:	sub    eax,ecx
   14000ad02:	cmp    eax,0x2
   14000ad05:	jl     0x14000ad55
   14000ad07:	movsxd rax,ecx
   14000ad0a:	cmp    BYTE PTR [rax+rbx*1],0x30
   14000ad0e:	jne    0x14000ad55
   14000ad10:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
   14000ad15:	cmp    al,0x78
   14000ad17:	je     0x14000ad1d
   14000ad19:	cmp    al,0x58
   14000ad1b:	jne    0x14000ad48
   14000ad1d:	cmp    r8d,0x22
   14000ad21:	jge    0x14000ad48
   14000ad23:	test   r8d,r8d
   14000ad26:	je     0x14000ad3d
   14000ad28:	cmp    r8d,0x10
   14000ad2c:	je     0x14000ad3d
   14000ad2e:	xorpd  xmm0,xmm0
   14000ad32:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000ad37:	add    rsp,0x30
   14000ad3b:	pop    rbx
   14000ad3c:	ret    
   14000ad3d:	mov    r11d,0x10
   14000ad43:	add    ecx,0x2
   14000ad46:	jmp    0x14000ad61
   14000ad48:	test   r8d,r8d
   14000ad4b:	jne    0x14000ad61
   14000ad4d:	lea    r11d,[r8+0x8]
   14000ad51:	inc    ecx
   14000ad53:	jmp    0x14000ad61
   14000ad55:	mov    eax,0xa
   14000ad5a:	test   r8d,r8d
   14000ad5d:	cmove  r11d,eax
   14000ad61:	mov    QWORD PTR [rsp+0x40],rdi
   14000ad66:	movsxd rdi,ecx
   14000ad69:	movsxd r9,edx
   14000ad6c:	cmp    rdi,r9
   14000ad6f:	mov    r10d,ecx
   14000ad72:	mov    r8,rdi
   14000ad75:	jge    0x14000af94
   14000ad7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ad80:	movzx  edx,BYTE PTR [r8+rbx*1]
   14000ad85:	lea    eax,[rdx-0x30]
   14000ad88:	cmp    al,0x9
   14000ad8a:	ja     0x14000ad94
   14000ad8c:	movsx  eax,dl
   14000ad8f:	sub    eax,0x30
   14000ad92:	jmp    0x14000adb0
   14000ad94:	lea    eax,[rdx-0x61]
   14000ad97:	cmp    al,0x19
   14000ad99:	ja     0x14000ada3
   14000ad9b:	movsx  eax,dl
   14000ad9e:	sub    eax,0x57
   14000ada1:	jmp    0x14000adb0
   14000ada3:	lea    eax,[rdx-0x41]
   14000ada6:	cmp    al,0x19
   14000ada8:	ja     0x14000adc4
   14000adaa:	movsx  eax,dl
   14000adad:	sub    eax,0x37
   14000adb0:	cmp    eax,0xffffffff
   14000adb3:	je     0x14000adc4
   14000adb5:	cmp    eax,r11d
   14000adb8:	jge    0x14000adc4
   14000adba:	inc    r8
   14000adbd:	inc    ecx
   14000adbf:	cmp    r8,r9
   14000adc2:	jl     0x14000ad80
   14000adc4:	cmp    r10d,ecx
   14000adc7:	je     0x14000af94
   14000adcd:	xorpd  xmm2,xmm2
   14000add1:	lea    eax,[rcx-0x1]
   14000add4:	movsxd rdx,eax
   14000add7:	cmp    rdx,rdi
   14000adda:	jl     0x14000afba
   14000ade0:	mov    rax,rdx
   14000ade3:	sub    rax,rdi
   14000ade6:	inc    rax
   14000ade9:	cmp    rax,0x4
   14000aded:	jl     0x14000af30
   14000adf3:	movd   xmm1,r11d
   14000adf8:	lea    r8,[rdi+0x3]
   14000adfc:	cvtdq2pd xmm1,xmm1
   14000ae00:	movzx  ecx,BYTE PTR [rbx+rdx*1]
   14000ae04:	lea    eax,[rcx-0x30]
   14000ae07:	cmp    al,0x9
   14000ae09:	ja     0x14000ae13
   14000ae0b:	movsx  eax,cl
   14000ae0e:	sub    eax,0x30
   14000ae11:	jmp    0x14000ae34
   14000ae13:	lea    eax,[rcx-0x61]
   14000ae16:	cmp    al,0x19
   14000ae18:	ja     0x14000ae22
   14000ae1a:	movsx  eax,cl
   14000ae1d:	sub    eax,0x57
   14000ae20:	jmp    0x14000ae34
   14000ae22:	lea    eax,[rcx-0x41]
   14000ae25:	cmp    al,0x19
   14000ae27:	ja     0x14000ae31
   14000ae29:	movsx  eax,cl
   14000ae2c:	sub    eax,0x37
   14000ae2f:	jmp    0x14000ae34
   14000ae31:	or     eax,0xffffffff
   14000ae34:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x1]
   14000ae39:	movd   xmm0,eax
   14000ae3d:	lea    eax,[rcx-0x30]
   14000ae40:	cvtdq2pd xmm0,xmm0
   14000ae44:	mulsd  xmm0,xmm3
   14000ae48:	mulsd  xmm3,xmm1
   14000ae4c:	addsd  xmm2,xmm0
   14000ae50:	cmp    al,0x9
   14000ae52:	ja     0x14000ae5c
   14000ae54:	movsx  eax,cl
   14000ae57:	sub    eax,0x30
   14000ae5a:	jmp    0x14000ae7d
   14000ae5c:	lea    eax,[rcx-0x61]
   14000ae5f:	cmp    al,0x19
   14000ae61:	ja     0x14000ae6b
   14000ae63:	movsx  eax,cl
   14000ae66:	sub    eax,0x57
   14000ae69:	jmp    0x14000ae7d
   14000ae6b:	lea    eax,[rcx-0x41]
   14000ae6e:	cmp    al,0x19
   14000ae70:	ja     0x14000ae7a
   14000ae72:	movsx  eax,cl
   14000ae75:	sub    eax,0x37
   14000ae78:	jmp    0x14000ae7d
   14000ae7a:	or     eax,0xffffffff
   14000ae7d:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x2]
   14000ae82:	movd   xmm0,eax
   14000ae86:	lea    eax,[rcx-0x30]
   14000ae89:	cvtdq2pd xmm0,xmm0
   14000ae8d:	mulsd  xmm0,xmm3
   14000ae91:	mulsd  xmm3,xmm1
   14000ae95:	addsd  xmm2,xmm0
   14000ae99:	cmp    al,0x9
   14000ae9b:	ja     0x14000aea5
   14000ae9d:	movsx  eax,cl
   14000aea0:	sub    eax,0x30
   14000aea3:	jmp    0x14000aec6
   14000aea5:	lea    eax,[rcx-0x61]
   14000aea8:	cmp    al,0x19
   14000aeaa:	ja     0x14000aeb4
   14000aeac:	movsx  eax,cl
   14000aeaf:	sub    eax,0x57
   14000aeb2:	jmp    0x14000aec6
   14000aeb4:	lea    eax,[rcx-0x41]
   14000aeb7:	cmp    al,0x19
   14000aeb9:	ja     0x14000aec3
   14000aebb:	movsx  eax,cl
   14000aebe:	sub    eax,0x37
   14000aec1:	jmp    0x14000aec6
   14000aec3:	or     eax,0xffffffff
   14000aec6:	movzx  ecx,BYTE PTR [rbx+rdx*1-0x3]
   14000aecb:	movd   xmm0,eax
   14000aecf:	lea    eax,[rcx-0x30]
   14000aed2:	cvtdq2pd xmm0,xmm0
   14000aed6:	mulsd  xmm0,xmm3
   14000aeda:	mulsd  xmm3,xmm1
   14000aede:	addsd  xmm2,xmm0
   14000aee2:	cmp    al,0x9
   14000aee4:	ja     0x14000aeee
   14000aee6:	movsx  eax,cl
   14000aee9:	sub    eax,0x30
   14000aeec:	jmp    0x14000af0f
   14000aeee:	lea    eax,[rcx-0x61]
   14000aef1:	cmp    al,0x19
   14000aef3:	ja     0x14000aefd
   14000aef5:	movsx  eax,cl
   14000aef8:	sub    eax,0x57
   14000aefb:	jmp    0x14000af0f
   14000aefd:	lea    eax,[rcx-0x41]
   14000af00:	cmp    al,0x19
   14000af02:	ja     0x14000af0c
   14000af04:	movsx  eax,cl
   14000af07:	sub    eax,0x37
   14000af0a:	jmp    0x14000af0f
   14000af0c:	or     eax,0xffffffff
   14000af0f:	movd   xmm0,eax
   14000af13:	sub    rdx,0x4
   14000af17:	cmp    rdx,r8
   14000af1a:	cvtdq2pd xmm0,xmm0
   14000af1e:	mulsd  xmm0,xmm3
   14000af22:	mulsd  xmm3,xmm1
   14000af26:	addsd  xmm2,xmm0
   14000af2a:	jge    0x14000ae00
   14000af30:	cmp    rdx,rdi
   14000af33:	jl     0x14000afba
   14000af39:	movd   xmm1,r11d
   14000af3e:	cvtdq2pd xmm1,xmm1
   14000af42:	movzx  ecx,BYTE PTR [rdx+rbx*1]
   14000af46:	lea    eax,[rcx-0x30]
   14000af49:	cmp    al,0x9
   14000af4b:	ja     0x14000af55
   14000af4d:	movsx  eax,cl
   14000af50:	sub    eax,0x30
   14000af53:	jmp    0x14000af76
   14000af55:	lea    eax,[rcx-0x61]
   14000af58:	cmp    al,0x19
   14000af5a:	ja     0x14000af64
   14000af5c:	movsx  eax,cl
   14000af5f:	sub    eax,0x57
   14000af62:	jmp    0x14000af76
   14000af64:	lea    eax,[rcx-0x41]
   14000af67:	cmp    al,0x19
   14000af69:	ja     0x14000af73
   14000af6b:	movsx  eax,cl
   14000af6e:	sub    eax,0x37
   14000af71:	jmp    0x14000af76
   14000af73:	or     eax,0xffffffff
   14000af76:	movd   xmm0,eax
   14000af7a:	dec    rdx
   14000af7d:	cmp    rdx,rdi
   14000af80:	cvtdq2pd xmm0,xmm0
   14000af84:	mulsd  xmm0,xmm3
   14000af88:	mulsd  xmm3,xmm1
   14000af8c:	addsd  xmm2,xmm0
   14000af90:	jge    0x14000af42
   14000af92:	jmp    0x14000afba
   14000af94:	lea    rdx,[rip+0x70e5]        # 0x140012080
   14000af9b:	mov    rcx,rbx
   14000af9e:	call   QWORD PTR [rip+0x1274]        # 0x14000c218
   14000afa4:	test   eax,eax
   14000afa6:	jne    0x14000afb0
   14000afa8:	call   QWORD PTR [rip+0x1262]        # 0x14000c210
   14000afae:	jmp    0x14000afb6
   14000afb0:	call   QWORD PTR [rip+0x126a]        # 0x14000c220
   14000afb6:	movapd xmm2,xmm0
   14000afba:	mov    rdi,QWORD PTR [rsp+0x40]
   14000afbf:	mulsd  xmm2,xmm6
   14000afc3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000afc8:	movapd xmm0,xmm2
   14000afcc:	add    rsp,0x30
   14000afd0:	pop    rbx
   14000afd1:	ret    
   14000afd2:	int3   
   14000afd3:	int3   
   14000afd4:	int3   
   14000afd5:	int3   
   14000afd6:	int3   
   14000afd7:	int3   
   14000afd8:	int3   
   14000afd9:	int3   
   14000afda:	int3   
   14000afdb:	int3   
   14000afdc:	int3   
   14000afdd:	int3   
   14000afde:	int3   
   14000afdf:	int3   
   14000afe0:	add    rcx,0x48
   14000afe4:	rex.W jmp QWORD PTR [rip+0x13b5]        # 0x14000c3a0
   14000afeb:	int3   
   14000afec:	int3   
   14000afed:	int3   
   14000afee:	int3   
   14000afef:	int3   
   14000aff0:	mov    QWORD PTR [rcx],rdx
   14000aff3:	ret    
   14000aff4:	int3   
   14000aff5:	int3   
   14000aff6:	int3   
   14000aff7:	int3   
   14000aff8:	int3   
   14000aff9:	int3   
   14000affa:	int3   
   14000affb:	int3   
   14000affc:	int3   
   14000affd:	int3   
   14000affe:	int3   
   14000afff:	int3   
   14000b000:	mov    QWORD PTR [rsp+0x8],rbx
   14000b005:	mov    QWORD PTR [rsp+0x10],rbp
   14000b00a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b00f:	push   rdi
   14000b010:	sub    rsp,0x20
   14000b014:	mov    rax,QWORD PTR [rcx+0x40]
   14000b018:	lea    rsi,[rcx+0x40]
   14000b01c:	mov    rbp,rdx
   14000b01f:	mov    ebx,DWORD PTR [rax+0x4]
   14000b022:	mov    rdx,r8
   14000b025:	mov    rcx,rsi
   14000b028:	mov    rdi,r8
   14000b02b:	call   QWORD PTR [rip+0x1327]        # 0x14000c358
   14000b031:	mov    r11,QWORD PTR [rdi]
   14000b034:	mov    r9d,DWORD PTR [r11+0x4]
   14000b038:	mov    r8d,ebx
   14000b03b:	mov    rdx,rbp
   14000b03e:	mov    rcx,rsi
   14000b041:	call   QWORD PTR [rip+0x11b1]        # 0x14000c1f8
   14000b047:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b04c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b051:	mov    rax,rbp
   14000b054:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b059:	add    rsp,0x20
   14000b05d:	pop    rdi
   14000b05e:	ret    
   14000b05f:	int3   
   14000b060:	cmp    rdx,r8
   14000b063:	je     0x14000b0cb
   14000b065:	mov    QWORD PTR [rsp+0x8],rbx
   14000b06a:	mov    QWORD PTR [rsp+0x10],rsi
   14000b06f:	push   rdi
   14000b070:	sub    rsp,0x20
   14000b074:	mov    rdi,r9
   14000b077:	mov    rsi,r8
   14000b07a:	mov    rbx,rdx
   14000b07d:	nop    DWORD PTR [rax]
   14000b080:	mov    ecx,0x10
   14000b085:	call   0x14000b716
   14000b08a:	test   rax,rax
   14000b08d:	je     0x14000b0aa
   14000b08f:	mov    rdx,QWORD PTR [rdi]
   14000b092:	mov    ecx,DWORD PTR [rdx]
   14000b094:	mov    DWORD PTR [rax],ecx
   14000b096:	mov    ecx,DWORD PTR [rdx+0x4]
   14000b099:	mov    DWORD PTR [rax+0x4],ecx
   14000b09c:	mov    ecx,DWORD PTR [rdx+0x8]
   14000b09f:	mov    DWORD PTR [rax+0x8],ecx
   14000b0a2:	mov    ecx,DWORD PTR [rdx+0xc]
   14000b0a5:	mov    DWORD PTR [rax+0xc],ecx
   14000b0a8:	jmp    0x14000b0ac
   14000b0aa:	xor    eax,eax
   14000b0ac:	mov    QWORD PTR [rbx],rax
   14000b0af:	add    rbx,0x8
   14000b0b3:	add    rdi,0x8
   14000b0b7:	cmp    rbx,rsi
   14000b0ba:	jne    0x14000b080
   14000b0bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0c1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b0c6:	add    rsp,0x20
   14000b0ca:	pop    rdi
   14000b0cb:	repz ret 
   14000b0cd:	int3   
   14000b0ce:	int3   
   14000b0cf:	int3   
   14000b0d0:	sub    rsp,0x28
   14000b0d4:	mov    rdx,QWORD PTR [rcx]
   14000b0d7:	mov    eax,DWORD PTR [rdx]
   14000b0d9:	test   eax,eax
   14000b0db:	je     0x14000b0ed
   14000b0dd:	cmp    eax,0xffffffff
   14000b0e0:	je     0x14000b14a
   14000b0e2:	lock add DWORD PTR [rdx],0xffffffff
   14000b0e6:	setne  al
   14000b0e9:	test   al,al
   14000b0eb:	jne    0x14000b14a
   14000b0ed:	mov    QWORD PTR [rsp+0x30],rbx
   14000b0f2:	mov    QWORD PTR [rsp+0x38],rsi
   14000b0f7:	mov    rsi,QWORD PTR [rcx]
   14000b0fa:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b0fe:	mov    QWORD PTR [rsp+0x20],rdi
   14000b103:	lea    rbx,[rsi+rax*8+0x10]
   14000b108:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b10c:	lea    rdi,[rsi+rax*8+0x10]
   14000b111:	cmp    rdi,rbx
   14000b114:	je     0x14000b132
   14000b116:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b120:	mov    rcx,QWORD PTR [rbx-0x8]
   14000b124:	sub    rbx,0x8
   14000b128:	call   0x14000b416
   14000b12d:	cmp    rbx,rdi
   14000b130:	jne    0x14000b120
   14000b132:	mov    rcx,rsi
   14000b135:	call   QWORD PTR [rip+0x11cd]        # 0x14000c308
   14000b13b:	mov    rdi,QWORD PTR [rsp+0x20]
   14000b140:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b145:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b14a:	add    rsp,0x28
   14000b14e:	ret    
   14000b14f:	int3   
   14000b150:	mov    QWORD PTR [rsp+0x8],rbx
   14000b155:	mov    QWORD PTR [rsp+0x18],rbp
   14000b15a:	mov    QWORD PTR [rsp+0x20],rsi
   14000b15f:	mov    DWORD PTR [rsp+0x10],edx
   14000b163:	push   rdi
   14000b164:	sub    rsp,0x20
   14000b168:	mov    rdx,QWORD PTR [rcx]
   14000b16b:	movsxd rdi,r8d
   14000b16e:	mov    rbp,rcx
   14000b171:	movsxd rax,DWORD PTR [rdx+0x8]
   14000b175:	mov    r8d,edi
   14000b178:	lea    rbx,[rdx+rax*8+0x10]
   14000b17d:	lea    rdx,[rsp+0x38]
   14000b182:	call   QWORD PTR [rip+0x1170]        # 0x14000c2f8
   14000b188:	mov    r10,QWORD PTR [rbp+0x0]
   14000b18c:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000b191:	movsxd r9,DWORD PTR [r10+0x8]
   14000b195:	mov    rcx,rbp
   14000b198:	mov    rsi,rax
   14000b19b:	add    rdx,r9
   14000b19e:	lea    r8,[r10+rdx*8+0x10]
   14000b1a3:	lea    rdx,[r10+r9*8+0x10]
   14000b1a8:	mov    r9,rbx
   14000b1ab:	call   0x14000b060
   14000b1b0:	mov    rdx,QWORD PTR [rbp+0x0]
   14000b1b4:	movsxd r11,DWORD PTR [rsp+0x38]
   14000b1b9:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000b1bd:	lea    r9,[rbx+r11*8]
   14000b1c1:	lea    r8,[rdx+rcx*8+0x10]
   14000b1c6:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000b1ca:	add    rcx,r11
   14000b1cd:	add    rcx,rdi
   14000b1d0:	lea    rdx,[rdx+rcx*8+0x10]
   14000b1d5:	mov    rcx,rbp
   14000b1d8:	call   0x14000b060
   14000b1dd:	mov    r11d,DWORD PTR [rsi]
   14000b1e0:	test   r11d,r11d
   14000b1e3:	je     0x14000b1f6
   14000b1e5:	cmp    r11d,0xffffffff
   14000b1e9:	je     0x14000b22b
   14000b1eb:	lock add DWORD PTR [rsi],0xffffffff
   14000b1ef:	setne  al
   14000b1f2:	test   al,al
   14000b1f4:	jne    0x14000b22b
   14000b1f6:	movsxd rax,DWORD PTR [rsi+0xc]
   14000b1fa:	lea    rbx,[rsi+rax*8+0x10]
   14000b1ff:	movsxd rax,DWORD PTR [rsi+0x8]
   14000b203:	lea    rdi,[rsi+rax*8+0x10]
   14000b208:	cmp    rdi,rbx
   14000b20b:	je     0x14000b222
   14000b20d:	nop    DWORD PTR [rax]
   14000b210:	mov    rcx,QWORD PTR [rbx-0x8]
   14000b214:	sub    rbx,0x8
   14000b218:	call   0x14000b416
   14000b21d:	cmp    rbx,rdi
   14000b220:	jne    0x14000b210
   14000b222:	mov    rcx,rsi
   14000b225:	call   QWORD PTR [rip+0x10dd]        # 0x14000c308
   14000b22b:	mov    rdx,QWORD PTR [rbp+0x0]
   14000b22f:	movsxd rax,DWORD PTR [rsp+0x38]
   14000b234:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b239:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000b23d:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b242:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b247:	add    rcx,rax
   14000b24a:	lea    rax,[rdx+rcx*8+0x10]
   14000b24f:	add    rsp,0x20
   14000b253:	pop    rdi
   14000b254:	ret    
   14000b255:	int3   
   14000b256:	int3   
   14000b257:	int3   
   14000b258:	int3   
   14000b259:	int3   
   14000b25a:	int3   
   14000b25b:	int3   
   14000b25c:	int3   
   14000b25d:	int3   
   14000b25e:	int3   
   14000b25f:	int3   
   14000b260:	mov    QWORD PTR [rsp+0x8],rbx
   14000b265:	mov    QWORD PTR [rsp+0x10],rsi
   14000b26a:	push   rdi
   14000b26b:	sub    rsp,0x20
   14000b26f:	xor    esi,esi
   14000b271:	mov    rdi,rcx
   14000b274:	add    rcx,0x10
   14000b278:	mov    QWORD PTR [rcx-0x10],rsi
   14000b27c:	mov    QWORD PTR [rcx-0x8],rsi
   14000b280:	call   QWORD PTR [rip+0xf82]        # 0x14000c208
   14000b286:	mov    QWORD PTR [rdi+0x18],rsi
   14000b28a:	mov    DWORD PTR [rdi+0x20],esi
   14000b28d:	mov    DWORD PTR [rdi+0x24],0xffffffff
   14000b294:	mov    QWORD PTR [rdi+0x28],rsi
   14000b298:	mov    QWORD PTR [rdi+0x30],rsi
   14000b29c:	mov    rax,QWORD PTR [rip+0x1095]        # 0x14000c338
   14000b2a3:	lea    rcx,[rdi+0x40]
   14000b2a7:	mov    QWORD PTR [rdi+0x38],rax
   14000b2ab:	call   QWORD PTR [rip+0x1117]        # 0x14000c3c8
   14000b2b1:	lea    rcx,[rdi+0x48]
   14000b2b5:	call   QWORD PTR [rip+0x110d]        # 0x14000c3c8
   14000b2bb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2c0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b2c5:	mov    rax,rdi
   14000b2c8:	add    rsp,0x20
   14000b2cc:	pop    rdi
   14000b2cd:	ret    
   14000b2ce:	int3   
   14000b2cf:	int3   
   14000b2d0:	rex push rbx
   14000b2d2:	sub    rsp,0x20
   14000b2d6:	mov    rbx,rcx
   14000b2d9:	add    rcx,0x48
   14000b2dd:	call   QWORD PTR [rip+0x10d5]        # 0x14000c3b8
   14000b2e3:	lea    rcx,[rbx+0x40]
   14000b2e7:	call   QWORD PTR [rip+0x10cb]        # 0x14000c3b8
   14000b2ed:	lea    rcx,[rbx+0x38]
   14000b2f1:	call   0x14000b0d0
   14000b2f6:	lea    rcx,[rbx+0x10]
   14000b2fa:	add    rsp,0x20
   14000b2fe:	pop    rbx
   14000b2ff:	jmp    0x14000ac40
   14000b304:	int3   
   14000b305:	int3   
   14000b306:	int3   
   14000b307:	int3   
   14000b308:	int3   
   14000b309:	int3   
   14000b30a:	int3   
   14000b30b:	int3   
   14000b30c:	int3   
   14000b30d:	int3   
   14000b30e:	int3   
   14000b30f:	int3   
   14000b310:	sub    rsp,0x38
   14000b314:	test   r8d,r8d
   14000b317:	jle    0x14000b3a6
   14000b31d:	mov    eax,DWORD PTR [rsp+0x60]
   14000b321:	add    rcx,0x38
   14000b325:	mov    DWORD PTR [rsp+0x20],edx
   14000b329:	mov    DWORD PTR [rsp+0x2c],eax
   14000b32d:	mov    rax,QWORD PTR [rcx]
   14000b330:	mov    QWORD PTR [rsp+0x30],rbx
   14000b335:	mov    edx,DWORD PTR [rax]
   14000b337:	mov    DWORD PTR [rsp+0x24],r8d
   14000b33c:	mov    DWORD PTR [rsp+0x28],r9d
   14000b341:	cmp    edx,0x1
   14000b344:	je     0x14000b35c
   14000b346:	test   edx,edx
   14000b348:	je     0x14000b35c
   14000b34a:	mov    edx,0x7fffffff
   14000b34f:	mov    r8d,0x1
   14000b355:	call   0x14000b150
   14000b35a:	jmp    0x14000b362
   14000b35c:	call   QWORD PTR [rip+0xf06]        # 0x14000c268
   14000b362:	mov    ecx,0x10
   14000b367:	mov    rbx,rax
   14000b36a:	call   0x14000b716
   14000b36f:	test   rax,rax
   14000b372:	je     0x14000b39c
   14000b374:	lea    rdx,[rsp+0x20]
   14000b379:	mov    ecx,DWORD PTR [rdx]
   14000b37b:	mov    DWORD PTR [rax],ecx
   14000b37d:	mov    ecx,DWORD PTR [rdx+0x4]
   14000b380:	mov    DWORD PTR [rax+0x4],ecx
   14000b383:	mov    ecx,DWORD PTR [rdx+0x8]
   14000b386:	mov    DWORD PTR [rax+0x8],ecx
   14000b389:	mov    ecx,DWORD PTR [rdx+0xc]
   14000b38c:	mov    DWORD PTR [rax+0xc],ecx
   14000b38f:	mov    QWORD PTR [rbx],rax
   14000b392:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b397:	add    rsp,0x38
   14000b39b:	ret    
   14000b39c:	xor    eax,eax
   14000b39e:	mov    QWORD PTR [rbx],rax
   14000b3a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3a6:	add    rsp,0x38
   14000b3aa:	ret    
   14000b3ab:	int3   
   14000b3ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000b3b1:	mov    QWORD PTR [rsp+0x10],rsi
   14000b3b6:	push   rdi
   14000b3b7:	sub    rsp,0x20
   14000b3bb:	mov    esi,edx
   14000b3bd:	mov    rbx,rcx
   14000b3c0:	test   dl,0x2
   14000b3c3:	je     0x14000b3ef
   14000b3c5:	mov    r8d,DWORD PTR [rcx-0x8]
   14000b3c9:	lea    r9,[rip+0x72e]        # 0x14000bafe
   14000b3d0:	mov    edx,0x18
   14000b3d5:	call   0x14000b768
   14000b3da:	test   sil,0x1
   14000b3de:	je     0x14000b3e9
   14000b3e0:	lea    rcx,[rbx-0x8]
   14000b3e4:	call   0x14000b416
   14000b3e9:	lea    rax,[rbx-0x8]
   14000b3ed:	jmp    0x14000b405
   14000b3ef:	call   0x14000bafe
   14000b3f4:	test   sil,0x1
   14000b3f8:	je     0x14000b402
   14000b3fa:	mov    rcx,rbx
   14000b3fd:	call   0x14000b416
   14000b402:	mov    rax,rbx
   14000b405:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b40a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b40f:	add    rsp,0x20
   14000b413:	pop    rdi
   14000b414:	ret    
   14000b415:	int3   
   14000b416:	jmp    QWORD PTR [rip+0xd1c]        # 0x14000c138
   14000b41c:	jmp    QWORD PTR [rip+0xd0e]        # 0x14000c130
   14000b422:	jmp    QWORD PTR [rip+0xd00]        # 0x14000c128
   14000b428:	jmp    QWORD PTR [rip+0xcf2]        # 0x14000c120
   14000b42e:	jmp    QWORD PTR [rip+0xce4]        # 0x14000c118
   14000b434:	sub    rsp,0x38
   14000b438:	lea    rcx,[rip+0x4ed]        # 0x14000b92c
   14000b43f:	call   0x14000b8dc
   14000b444:	mov    r11d,DWORD PTR [rip+0x8d45]        # 0x140014190
   14000b44b:	mov    r9d,DWORD PTR [rip+0x8d3a]        # 0x14001418c
   14000b452:	lea    rax,[rip+0x8d23]        # 0x14001417c
   14000b459:	lea    r8,[rip+0x8d08]        # 0x140014168
   14000b460:	lea    rdx,[rip+0x8d09]        # 0x140014170
   14000b467:	lea    rcx,[rip+0x8cf2]        # 0x140014160
   14000b46e:	mov    DWORD PTR [rip+0x8d07],r11d        # 0x14001417c
   14000b475:	mov    QWORD PTR [rsp+0x20],rax
   14000b47a:	call   QWORD PTR [rip+0xc68]        # 0x14000c0e8
   14000b480:	mov    DWORD PTR [rip+0x8cf2],eax        # 0x140014178
   14000b486:	test   eax,eax
   14000b488:	jns    0x14000b494
   14000b48a:	mov    ecx,0x8
   14000b48f:	call   0x14000b824
   14000b494:	add    rsp,0x38
   14000b498:	ret    
   14000b499:	int3   
   14000b49a:	int3   
   14000b49b:	int3   
   14000b49c:	mov    QWORD PTR [rsp+0x8],rsi
   14000b4a1:	push   rdi
   14000b4a2:	sub    rsp,0x20
   14000b4a6:	mov    rax,QWORD PTR gs:0x30
   14000b4af:	mov    rdi,QWORD PTR [rax+0x8]
   14000b4b3:	xor    esi,esi
   14000b4b5:	xor    eax,eax
   14000b4b7:	lock cmpxchg QWORD PTR [rip+0x8ce0],rdi        # 0x1400141a0
   14000b4c0:	je     0x14000b4dd
   14000b4c2:	cmp    rax,rdi
   14000b4c5:	jne    0x14000b4d0
   14000b4c7:	mov    edi,0x1
   14000b4cc:	mov    esi,edi
   14000b4ce:	jmp    0x14000b4e2
   14000b4d0:	mov    ecx,0x3e8
   14000b4d5:	call   QWORD PTR [rip+0xb4d]        # 0x14000c028
   14000b4db:	jmp    0x14000b4b5
   14000b4dd:	mov    edi,0x1
   14000b4e2:	mov    eax,DWORD PTR [rip+0x8cb4]        # 0x14001419c
   14000b4e8:	cmp    eax,edi
   14000b4ea:	jne    0x14000b4f8
   14000b4ec:	mov    ecx,0x1f
   14000b4f1:	call   0x14000b824
   14000b4f6:	jmp    0x14000b52f
   14000b4f8:	mov    eax,DWORD PTR [rip+0x8c9e]        # 0x14001419c
   14000b4fe:	test   eax,eax
   14000b500:	jne    0x14000b529
   14000b502:	mov    DWORD PTR [rip+0x8c94],edi        # 0x14001419c
   14000b508:	lea    rdx,[rip+0xf09]        # 0x14000c418
   14000b50f:	lea    rcx,[rip+0xeea]        # 0x14000c400
   14000b516:	call   0x14000ba38
   14000b51b:	test   eax,eax
   14000b51d:	je     0x14000b52f
   14000b51f:	mov    eax,0xff
   14000b524:	jmp    0x14000b611
   14000b529:	mov    DWORD PTR [rip+0x8c55],edi        # 0x140014184
   14000b52f:	mov    eax,DWORD PTR [rip+0x8c67]        # 0x14001419c
   14000b535:	cmp    eax,edi
   14000b537:	jne    0x14000b556
   14000b539:	lea    rdx,[rip+0xeb8]        # 0x14000c3f8
   14000b540:	lea    rcx,[rip+0xea1]        # 0x14000c3e8
   14000b547:	call   0x14000ba32
   14000b54c:	mov    DWORD PTR [rip+0x8c46],0x2        # 0x14001419c
   14000b556:	test   esi,esi
   14000b558:	jne    0x14000b563
   14000b55a:	xor    eax,eax
   14000b55c:	xchg   QWORD PTR [rip+0x8c3d],rax        # 0x1400141a0
   14000b563:	cmp    QWORD PTR [rip+0x8c4d],0x0        # 0x1400141b8
   14000b56b:	je     0x14000b58c
   14000b56d:	lea    rcx,[rip+0x8c44]        # 0x1400141b8
   14000b574:	call   0x14000b9f0
   14000b579:	test   eax,eax
   14000b57b:	je     0x14000b58c
   14000b57d:	xor    r8d,r8d
   14000b580:	lea    edx,[r8+0x2]
   14000b584:	xor    ecx,ecx
   14000b586:	call   QWORD PTR [rip+0x8c2c]        # 0x1400141b8
   14000b58c:	mov    rcx,QWORD PTR [rip+0xb25]        # 0x14000c0b8
   14000b593:	mov    rax,QWORD PTR [rip+0x8bce]        # 0x140014168
   14000b59a:	mov    QWORD PTR [rcx],rax
   14000b59d:	mov    r8,QWORD PTR [rip+0x8bc4]        # 0x140014168
   14000b5a4:	mov    rdx,QWORD PTR [rip+0x8bc5]        # 0x140014170
   14000b5ab:	mov    ecx,DWORD PTR [rip+0x8baf]        # 0x140014160
   14000b5b1:	call   0x140004150
   14000b5b6:	mov    DWORD PTR [rip+0x8bc4],eax        # 0x140014180
   14000b5bc:	cmp    DWORD PTR [rip+0x8ba1],0x0        # 0x140014164
   14000b5c3:	jne    0x14000b5cd
   14000b5c5:	mov    ecx,eax
   14000b5c7:	call   QWORD PTR [rip+0xaf3]        # 0x14000c0c0
   14000b5cd:	cmp    DWORD PTR [rip+0x8bb0],0x0        # 0x140014184
   14000b5d4:	jne    0x14000b5e2
   14000b5d6:	call   QWORD PTR [rip+0xaec]        # 0x14000c0c8
   14000b5dc:	mov    eax,DWORD PTR [rip+0x8b9e]        # 0x140014180
   14000b5e2:	jmp    0x14000b611
   14000b5e4:	mov    DWORD PTR [rip+0x8b96],eax        # 0x140014180
   14000b5ea:	cmp    DWORD PTR [rip+0x8b73],0x0        # 0x140014164
   14000b5f1:	jne    0x14000b5fc
   14000b5f3:	mov    ecx,eax
   14000b5f5:	call   QWORD PTR [rip+0xad5]        # 0x14000c0d0
   14000b5fb:	int3   
   14000b5fc:	cmp    DWORD PTR [rip+0x8b81],0x0        # 0x140014184
   14000b603:	jne    0x14000b611
   14000b605:	call   QWORD PTR [rip+0xabd]        # 0x14000c0c8
   14000b60b:	mov    eax,DWORD PTR [rip+0x8b6f]        # 0x140014180
   14000b611:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b616:	add    rsp,0x20
   14000b61a:	pop    rdi
   14000b61b:	ret    
   14000b61c:	sub    rsp,0x28
   14000b620:	mov    eax,0x5a4d
   14000b625:	cmp    WORD PTR [rip+0xffffffffffff49d4],ax        # 0x140000000
   14000b62c:	je     0x14000b632
   14000b62e:	xor    eax,eax
   14000b630:	jmp    0x14000b681
   14000b632:	movsxd rcx,DWORD PTR [rip+0xffffffffffff4a03]        # 0x14000003c
   14000b639:	lea    rax,[rip+0xffffffffffff49c0]        # 0x140000000
   14000b640:	add    rcx,rax
   14000b643:	cmp    DWORD PTR [rcx],0x4550
   14000b649:	jne    0x14000b62e
   14000b64b:	movzx  eax,WORD PTR [rcx+0x18]
   14000b64f:	cmp    eax,0x10b
   14000b654:	je     0x14000b670
   14000b656:	cmp    eax,0x20b
   14000b65b:	jne    0x14000b62e
   14000b65d:	xor    eax,eax
   14000b65f:	cmp    DWORD PTR [rcx+0x84],0xe
   14000b666:	jbe    0x14000b681
   14000b668:	cmp    DWORD PTR [rcx+0xf8],eax
   14000b66e:	jmp    0x14000b67e
   14000b670:	xor    eax,eax
   14000b672:	cmp    DWORD PTR [rcx+0x74],0xe
   14000b676:	jbe    0x14000b681
   14000b678:	cmp    DWORD PTR [rcx+0xe8],eax
   14000b67e:	setne  al
   14000b681:	mov    ecx,0x1
   14000b686:	mov    DWORD PTR [rip+0x8ad8],eax        # 0x140014164
   14000b68c:	call   QWORD PTR [rip+0xad6]        # 0x14000c168
   14000b692:	or     rcx,0xffffffffffffffff
   14000b696:	call   QWORD PTR [rip+0xac4]        # 0x14000c160
   14000b69c:	mov    rcx,QWORD PTR [rip+0xab5]        # 0x14000c158
   14000b6a3:	mov    QWORD PTR [rip+0x8afe],rax        # 0x1400141a8
   14000b6aa:	mov    QWORD PTR [rip+0x8aff],rax        # 0x1400141b0
   14000b6b1:	mov    eax,DWORD PTR [rip+0x8ae1]        # 0x140014198
   14000b6b7:	mov    DWORD PTR [rcx],eax
   14000b6b9:	mov    rdx,QWORD PTR [rip+0xa90]        # 0x14000c150
   14000b6c0:	mov    eax,DWORD PTR [rip+0x8ace]        # 0x140014194
   14000b6c6:	mov    DWORD PTR [rdx],eax
   14000b6c8:	call   0x14000b8f4
   14000b6cd:	call   0x14000ba40
   14000b6d2:	cmp    DWORD PTR [rip+0x8a6f],0x0        # 0x140014148
   14000b6d9:	jne    0x14000b6e8
   14000b6db:	lea    rcx,[rip+0x35e]        # 0x14000ba40
   14000b6e2:	call   QWORD PTR [rip+0xa60]        # 0x14000c148
   14000b6e8:	cmp    DWORD PTR [rip+0x8a55],0xffffffff        # 0x140014144
   14000b6ef:	jne    0x14000b6fa
   14000b6f1:	or     ecx,0xffffffff
   14000b6f4:	call   QWORD PTR [rip+0xa46]        # 0x14000c140
   14000b6fa:	xor    eax,eax
   14000b6fc:	add    rsp,0x28
   14000b700:	ret    
   14000b701:	int3   
   14000b702:	int3   
   14000b703:	int3   
   14000b704:	sub    rsp,0x28
   14000b708:	call   0x14000ba44
   14000b70d:	add    rsp,0x28
   14000b711:	jmp    0x14000b49c
   14000b716:	jmp    QWORD PTR [rip+0x9dc]        # 0x14000c0f8
   14000b71c:	mov    QWORD PTR [rsp+0x10],rbx
   14000b721:	mov    DWORD PTR [rsp+0x18],r8d
   14000b726:	mov    QWORD PTR [rsp+0x8],rcx
   14000b72b:	push   rsi
   14000b72c:	push   rdi
   14000b72d:	push   r12
   14000b72f:	sub    rsp,0x40
   14000b733:	mov    rsi,r9
   14000b736:	mov    edi,r8d
   14000b739:	mov    r12,rdx
   14000b73c:	mov    rbx,rcx
   14000b73f:	sub    edi,0x1
   14000b742:	mov    DWORD PTR [rsp+0x70],edi
   14000b746:	js     0x14000b757
   14000b748:	sub    rbx,r12
   14000b74b:	mov    QWORD PTR [rsp+0x60],rbx
   14000b750:	mov    rcx,rbx
   14000b753:	call   rsi
   14000b755:	jmp    0x14000b73f
   14000b757:	jmp    0x14000b759
   14000b759:	mov    rbx,QWORD PTR [rsp+0x68]
   14000b75e:	add    rsp,0x40
   14000b762:	pop    r12
   14000b764:	pop    rdi
   14000b765:	pop    rsi
   14000b766:	ret    
   14000b767:	int3   
   14000b768:	mov    rax,rsp
   14000b76b:	mov    QWORD PTR [rax+0x20],r9
   14000b76f:	mov    DWORD PTR [rax+0x18],r8d
   14000b773:	mov    QWORD PTR [rax+0x10],rdx
   14000b777:	push   rbx
   14000b778:	push   rsi
   14000b779:	push   rdi
   14000b77a:	push   r12
   14000b77c:	sub    rsp,0x38
   14000b780:	mov    r12,r9
   14000b783:	movsxd rdi,r8d
   14000b786:	mov    rsi,rdx
   14000b789:	and    DWORD PTR [rax-0x38],0x0
   14000b78d:	mov    rbx,rdi
   14000b790:	imul   rbx,rdx
   14000b794:	add    rbx,rcx
   14000b797:	mov    QWORD PTR [rax+0x8],rbx
   14000b79b:	sub    edi,0x1
   14000b79e:	mov    DWORD PTR [rsp+0x70],edi
   14000b7a2:	js     0x14000b7b4
   14000b7a4:	sub    rbx,rsi
   14000b7a7:	mov    QWORD PTR [rsp+0x60],rbx
   14000b7ac:	mov    rcx,rbx
   14000b7af:	call   r12
   14000b7b2:	jmp    0x14000b79b
   14000b7b4:	mov    DWORD PTR [rsp+0x20],0x1
   14000b7bc:	add    rsp,0x38
   14000b7c0:	pop    r12
   14000b7c2:	pop    rdi
   14000b7c3:	pop    rsi
   14000b7c4:	pop    rbx
   14000b7c5:	ret    
   14000b7c6:	int3   
   14000b7c7:	int3   
   14000b7c8:	sub    rsp,0x28
   14000b7cc:	mov    rax,QWORD PTR [rcx]
   14000b7cf:	cmp    DWORD PTR [rax],0xe06d7363
   14000b7d5:	jne    0x14000b802
   14000b7d7:	cmp    DWORD PTR [rax+0x18],0x4
   14000b7db:	jne    0x14000b802
   14000b7dd:	mov    eax,DWORD PTR [rax+0x20]
   14000b7e0:	cmp    eax,0x19930520
   14000b7e5:	je     0x14000b7fc
   14000b7e7:	cmp    eax,0x19930521
   14000b7ec:	je     0x14000b7fc
   14000b7ee:	cmp    eax,0x19930522
   14000b7f3:	je     0x14000b7fc
   14000b7f5:	cmp    eax,0x1994000
   14000b7fa:	jne    0x14000b802
   14000b7fc:	call   0x14000baf8
   14000b801:	int3   
   14000b802:	xor    eax,eax
   14000b804:	add    rsp,0x28
   14000b808:	ret    
   14000b809:	int3   
   14000b80a:	int3   
   14000b80b:	int3   
   14000b80c:	sub    rsp,0x28
   14000b810:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000b7c8
   14000b817:	call   QWORD PTR [rip+0x803]        # 0x14000c020
   14000b81d:	xor    eax,eax
   14000b81f:	add    rsp,0x28
   14000b823:	ret    
   14000b824:	jmp    QWORD PTR [rip+0x96e]        # 0x14000c198
   14000b82a:	int3   
   14000b82b:	int3   
   14000b82c:	rex push rbx
   14000b82e:	sub    rsp,0x20
   14000b832:	mov    rbx,rcx
   14000b835:	mov    rcx,QWORD PTR [rip+0x8974]        # 0x1400141b0
   14000b83c:	call   QWORD PTR [rip+0x95e]        # 0x14000c1a0
   14000b842:	mov    QWORD PTR [rsp+0x38],rax
   14000b847:	cmp    rax,0xffffffffffffffff
   14000b84b:	jne    0x14000b858
   14000b84d:	mov    rcx,rbx
   14000b850:	call   QWORD PTR [rip+0x952]        # 0x14000c1a8
   14000b856:	jmp    0x14000b8d6
   14000b858:	mov    ecx,0x8
   14000b85d:	call   0x14000bb10
   14000b862:	nop
   14000b863:	mov    rcx,QWORD PTR [rip+0x8946]        # 0x1400141b0
   14000b86a:	call   QWORD PTR [rip+0x930]        # 0x14000c1a0
   14000b870:	mov    QWORD PTR [rsp+0x38],rax
   14000b875:	mov    rcx,QWORD PTR [rip+0x892c]        # 0x1400141a8
   14000b87c:	call   QWORD PTR [rip+0x91e]        # 0x14000c1a0
   14000b882:	mov    QWORD PTR [rsp+0x40],rax
   14000b887:	mov    rcx,rbx
   14000b88a:	call   QWORD PTR [rip+0x8d0]        # 0x14000c160
   14000b890:	mov    rcx,rax
   14000b893:	lea    r8,[rsp+0x40]
   14000b898:	lea    rdx,[rsp+0x38]
   14000b89d:	call   0x14000bb0a
   14000b8a2:	mov    rbx,rax
   14000b8a5:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b8aa:	call   QWORD PTR [rip+0x8b0]        # 0x14000c160
   14000b8b0:	mov    QWORD PTR [rip+0x88f9],rax        # 0x1400141b0
   14000b8b7:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b8bc:	call   QWORD PTR [rip+0x89e]        # 0x14000c160
   14000b8c2:	mov    QWORD PTR [rip+0x88df],rax        # 0x1400141a8
   14000b8c9:	mov    ecx,0x8
   14000b8ce:	call   0x14000bb04
   14000b8d3:	mov    rax,rbx
   14000b8d6:	add    rsp,0x20
   14000b8da:	pop    rbx
   14000b8db:	ret    
   14000b8dc:	sub    rsp,0x28
   14000b8e0:	call   0x14000b82c
   14000b8e5:	neg    rax
   14000b8e8:	sbb    eax,eax
   14000b8ea:	neg    eax
   14000b8ec:	dec    eax
   14000b8ee:	add    rsp,0x28
   14000b8f2:	ret    
   14000b8f3:	int3   
   14000b8f4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b8f9:	push   rdi
   14000b8fa:	sub    rsp,0x20
   14000b8fe:	lea    rbx,[rip+0x6b5b]        # 0x140012460
   14000b905:	lea    rdi,[rip+0x6b54]        # 0x140012460
   14000b90c:	jmp    0x14000b91c
   14000b90e:	mov    rax,QWORD PTR [rbx]
   14000b911:	test   rax,rax
   14000b914:	je     0x14000b918
   14000b916:	call   rax
   14000b918:	add    rbx,0x8
   14000b91c:	cmp    rbx,rdi
   14000b91f:	jb     0x14000b90e
   14000b921:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b926:	add    rsp,0x20
   14000b92a:	pop    rdi
   14000b92b:	ret    
   14000b92c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b931:	push   rdi
   14000b932:	sub    rsp,0x20
   14000b936:	lea    rbx,[rip+0x6b33]        # 0x140012470
   14000b93d:	lea    rdi,[rip+0x6b2c]        # 0x140012470
   14000b944:	jmp    0x14000b954
   14000b946:	mov    rax,QWORD PTR [rbx]
   14000b949:	test   rax,rax
   14000b94c:	je     0x14000b950
   14000b94e:	call   rax
   14000b950:	add    rbx,0x8
   14000b954:	cmp    rbx,rdi
   14000b957:	jb     0x14000b946
   14000b959:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b95e:	add    rsp,0x20
   14000b962:	pop    rdi
   14000b963:	ret    
   14000b964:	jmp    QWORD PTR [rip+0x776]        # 0x14000c0e0
   14000b96a:	jmp    QWORD PTR [rip+0x768]        # 0x14000c0d8
   14000b970:	mov    rax,rcx
   14000b973:	mov    ecx,0x5a4d
   14000b978:	cmp    WORD PTR [rax],cx
   14000b97b:	je     0x14000b980
   14000b97d:	xor    eax,eax
   14000b97f:	ret    
   14000b980:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000b984:	add    rcx,rax
   14000b987:	xor    eax,eax
   14000b989:	cmp    DWORD PTR [rcx],0x4550
   14000b98f:	jne    0x14000b99d
   14000b991:	mov    edx,0x20b
   14000b996:	cmp    WORD PTR [rcx+0x18],dx
   14000b99a:	sete   al
   14000b99d:	repz ret 
   14000b99f:	int3   
   14000b9a0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000b9a4:	xor    r9d,r9d
   14000b9a7:	mov    r10,rdx
   14000b9aa:	add    r8,rcx
   14000b9ad:	movzx  eax,WORD PTR [r8+0x14]
   14000b9b2:	movzx  r11d,WORD PTR [r8+0x6]
   14000b9b7:	lea    rcx,[rax+r8*1+0x18]
   14000b9bc:	test   r11d,r11d
   14000b9bf:	je     0x14000b9df
   14000b9c1:	mov    edx,DWORD PTR [rcx+0xc]
   14000b9c4:	cmp    r10,rdx
   14000b9c7:	jb     0x14000b9d3
   14000b9c9:	mov    eax,DWORD PTR [rcx+0x8]
   14000b9cc:	add    eax,edx
   14000b9ce:	cmp    r10,rax
   14000b9d1:	jb     0x14000b9e2
   14000b9d3:	inc    r9d
   14000b9d6:	add    rcx,0x28
   14000b9da:	cmp    r9d,r11d
   14000b9dd:	jb     0x14000b9c1
   14000b9df:	xor    eax,eax
   14000b9e1:	ret    
   14000b9e2:	mov    rax,rcx
   14000b9e5:	ret    
   14000b9e6:	int3   
   14000b9e7:	int3   
   14000b9e8:	int3   
   14000b9e9:	int3   
   14000b9ea:	int3   
   14000b9eb:	int3   
   14000b9ec:	int3   
   14000b9ed:	int3   
   14000b9ee:	int3   
   14000b9ef:	int3   
   14000b9f0:	sub    rsp,0x28
   14000b9f4:	mov    r8,rcx
   14000b9f7:	lea    r9,[rip+0xffffffffffff4602]        # 0x140000000
   14000b9fe:	mov    rcx,r9
   14000ba01:	call   0x14000b970
   14000ba06:	test   eax,eax
   14000ba08:	je     0x14000ba2c
   14000ba0a:	sub    r8,r9
   14000ba0d:	mov    rdx,r8
   14000ba10:	mov    rcx,r9
   14000ba13:	call   0x14000b9a0
   14000ba18:	test   rax,rax
   14000ba1b:	je     0x14000ba2c
   14000ba1d:	mov    eax,DWORD PTR [rax+0x24]
   14000ba20:	shr    eax,0x1f
   14000ba23:	not    eax
   14000ba25:	and    eax,0x1
   14000ba28:	jmp    0x14000ba2c
   14000ba2a:	xor    eax,eax
   14000ba2c:	add    rsp,0x28
   14000ba30:	ret    
   14000ba31:	int3   
   14000ba32:	jmp    QWORD PTR [rip+0x678]        # 0x14000c0b0
   14000ba38:	jmp    QWORD PTR [rip+0x6b2]        # 0x14000c0f0
   14000ba3e:	int3   
   14000ba3f:	int3   
   14000ba40:	xor    eax,eax
   14000ba42:	ret    
   14000ba43:	int3   
   14000ba44:	mov    QWORD PTR [rsp+0x18],rbx
   14000ba49:	push   rdi
   14000ba4a:	sub    rsp,0x20
   14000ba4e:	mov    rax,QWORD PTR [rip+0x86fb]        # 0x140014150
   14000ba55:	and    QWORD PTR [rsp+0x30],0x0
   14000ba5b:	movabs rdi,0x2b992ddfa232
   14000ba65:	cmp    rax,rdi
   14000ba68:	je     0x14000ba76
   14000ba6a:	not    rax
   14000ba6d:	mov    QWORD PTR [rip+0x86e4],rax        # 0x140014158
   14000ba74:	jmp    0x14000baec
   14000ba76:	lea    rcx,[rsp+0x30]
   14000ba7b:	call   QWORD PTR [rip+0x5af]        # 0x14000c030
   14000ba81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ba86:	call   QWORD PTR [rip+0x574]        # 0x14000c000
   14000ba8c:	mov    r11d,eax
   14000ba8f:	xor    rbx,r11
   14000ba92:	call   QWORD PTR [rip+0x570]        # 0x14000c008
   14000ba98:	mov    r11d,eax
   14000ba9b:	xor    rbx,r11
   14000ba9e:	call   QWORD PTR [rip+0x56c]        # 0x14000c010
   14000baa4:	lea    rcx,[rsp+0x38]
   14000baa9:	mov    r11d,eax
   14000baac:	xor    rbx,r11
   14000baaf:	call   QWORD PTR [rip+0x563]        # 0x14000c018
   14000bab5:	mov    r11,QWORD PTR [rsp+0x38]
   14000baba:	xor    r11,rbx
   14000babd:	movabs rax,0xffffffffffff
   14000bac7:	and    r11,rax
   14000baca:	movabs rax,0x2b992ddfa233
   14000bad4:	cmp    r11,rdi
   14000bad7:	cmove  r11,rax
   14000badb:	mov    QWORD PTR [rip+0x866e],r11        # 0x140014150
   14000bae2:	not    r11
   14000bae5:	mov    QWORD PTR [rip+0x866c],r11        # 0x140014158
   14000baec:	mov    rbx,QWORD PTR [rsp+0x40]
   14000baf1:	add    rsp,0x20
   14000baf5:	pop    rdi
   14000baf6:	ret    
   14000baf7:	int3   
   14000baf8:	jmp    QWORD PTR [rip+0x672]        # 0x14000c170
   14000bafe:	jmp    QWORD PTR [rip+0x674]        # 0x14000c178
   14000bb04:	jmp    QWORD PTR [rip+0x676]        # 0x14000c180
   14000bb0a:	jmp    QWORD PTR [rip+0x678]        # 0x14000c188
   14000bb10:	jmp    QWORD PTR [rip+0x67a]        # 0x14000c190
   14000bb16:	int3   
   14000bb17:	int3   
   14000bb18:	int3   
   14000bb19:	int3   
   14000bb1a:	int3   
   14000bb1b:	int3   
   14000bb1c:	int3   
   14000bb1d:	int3   
   14000bb1e:	int3   
   14000bb1f:	int3   
   14000bb20:	mov    QWORD PTR [rsp+0x10],rdx
   14000bb25:	push   rbx
   14000bb26:	push   rbp
   14000bb27:	sub    rsp,0x28
   14000bb2b:	mov    rbp,rdx
   14000bb2e:	mov    rdx,QWORD PTR [rbp+0x70]
   14000bb32:	mov    rax,QWORD PTR [rdx]
   14000bb35:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bb39:	add    rcx,rdx
   14000bb3c:	mov    r8b,0x1
   14000bb3f:	mov    edx,0x4
   14000bb44:	call   QWORD PTR [rip+0x516]        # 0x14000c060
   14000bb4a:	nop
   14000bb4b:	lea    rax,[rip+0xffffffffffff5bd4]        # 0x140001726
   14000bb52:	jmp    0x14000bb54
   14000bb54:	add    rsp,0x28
   14000bb58:	pop    rbp
   14000bb59:	pop    rbx
   14000bb5a:	ret    
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    QWORD PTR [rsp+0x10],rdx
   14000bb65:	push   rbp
   14000bb66:	push   r12
   14000bb68:	sub    rsp,0x28
   14000bb6c:	mov    rbp,rdx
   14000bb6f:	mov    rdx,QWORD PTR [rbp+0x70]
   14000bb73:	mov    rax,QWORD PTR [rdx]
   14000bb76:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bb7a:	add    rcx,rdx
   14000bb7d:	mov    r8b,0x1
   14000bb80:	mov    edx,0x4
   14000bb85:	call   QWORD PTR [rip+0x4d5]        # 0x14000c060
   14000bb8b:	nop
   14000bb8c:	lea    rax,[rip+0xffffffffffff5d59]        # 0x1400018ec
   14000bb93:	jmp    0x14000bb95
   14000bb95:	add    rsp,0x28
   14000bb99:	pop    r12
   14000bb9b:	pop    rbp
   14000bb9c:	ret    
   14000bb9d:	int3   
   14000bb9e:	rex push rbp
   14000bba0:	sub    rsp,0x20
   14000bba4:	mov    rbp,rdx
   14000bba7:	mov    rax,QWORD PTR [rcx]
   14000bbaa:	mov    rdx,rcx
   14000bbad:	mov    ecx,DWORD PTR [rax]
   14000bbaf:	call   0x14000b96a
   14000bbb4:	add    rsp,0x20
   14000bbb8:	pop    rbp
   14000bbb9:	ret    
   14000bbba:	rex push rbp
   14000bbbc:	sub    rsp,0x20
   14000bbc0:	mov    rbp,rdx
   14000bbc3:	mov    QWORD PTR [rbp+0x38],rcx
   14000bbc7:	mov    QWORD PTR [rbp+0x28],rcx
   14000bbcb:	mov    rax,QWORD PTR [rbp+0x28]
   14000bbcf:	mov    rcx,QWORD PTR [rax]
   14000bbd2:	mov    QWORD PTR [rbp+0x30],rcx
   14000bbd6:	mov    rax,QWORD PTR [rbp+0x30]
   14000bbda:	cmp    DWORD PTR [rax],0xe06d7363
   14000bbe0:	je     0x14000bbee
   14000bbe2:	mov    DWORD PTR [rbp+0x20],0x0
   14000bbe9:	mov    eax,DWORD PTR [rbp+0x20]
   14000bbec:	jmp    0x14000bbf3
   14000bbee:	call   0x14000baf8
   14000bbf3:	add    rsp,0x20
   14000bbf7:	pop    rbp
   14000bbf8:	ret    
   14000bbf9:	rex push rbp
   14000bbfb:	sub    rsp,0x20
   14000bbff:	mov    rbp,rdx
   14000bc02:	cmp    DWORD PTR [rbp+0x20],0x0
   14000bc06:	jne    0x14000bc1d
   14000bc08:	mov    r9,QWORD PTR [rbp+0x78]
   14000bc0c:	mov    r8d,DWORD PTR [rbp+0x70]
   14000bc10:	mov    rdx,QWORD PTR [rbp+0x68]
   14000bc14:	mov    rcx,QWORD PTR [rbp+0x60]
   14000bc18:	call   0x14000b71c
   14000bc1d:	add    rsp,0x20
   14000bc21:	pop    rbp
   14000bc22:	ret    
   14000bc23:	rex push rbp
   14000bc25:	sub    rsp,0x20
   14000bc29:	mov    rbp,rdx
   14000bc2c:	mov    ecx,0x8
   14000bc31:	call   0x14000bb04
   14000bc36:	add    rsp,0x20
   14000bc3a:	pop    rbp
   14000bc3b:	ret    
   14000bc3c:	int3   
   14000bc3d:	int3   
   14000bc3e:	int3   
   14000bc3f:	int3   
   14000bc40:	rex push rbp
   14000bc42:	sub    rsp,0x20
   14000bc46:	mov    rbp,rdx
   14000bc49:	mov    rax,QWORD PTR [rcx]
   14000bc4c:	xor    ecx,ecx
   14000bc4e:	cmp    DWORD PTR [rax],0xc0000005
   14000bc54:	sete   cl
   14000bc57:	mov    eax,ecx
   14000bc59:	mov    eax,ecx
   14000bc5b:	add    rsp,0x20
   14000bc5f:	pop    rbp
   14000bc60:	ret    

Disassembly of section .rdata:

000000014000c000 <.rdata>:
   14000c000:	pop    rdx
   14000c001:	(bad)  
   14000c002:	add    DWORD PTR [rax],eax
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	rex.R (bad) 
   14000c00a:	add    DWORD PTR [rax],eax
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	xor    al,0x3f
   14000c012:	add    DWORD PTR [rax],eax
   14000c014:	add    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	sbb    bh,BYTE PTR [rdi]
   14000c01a:	add    DWORD PTR [rax],eax
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	cld    
   14000c021:	add    DWORD PTR ds:[rax],eax
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	hlt    
   14000c029:	add    DWORD PTR ds:[rax],eax
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	jo     0x14000c071
   14000c032:	add    DWORD PTR [rax],eax
	...
   14000c040:	clc    
   14000c041:	cmp    DWORD PTR [rcx],eax
   14000c043:	add    BYTE PTR [rax],al
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rsi],dh
   14000c049:	cmp    al,BYTE PTR [rcx]
   14000c04b:	add    BYTE PTR [rax],al
   14000c04d:	add    BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rdx+0x3a],bh
   14000c052:	add    DWORD PTR [rax],eax
   14000c054:	add    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	mov    eax,0x13a
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    dl,bl
   14000c061:	cmp    al,BYTE PTR [rcx]
   14000c063:	add    BYTE PTR [rax],al
   14000c065:	add    BYTE PTR [rax],al
   14000c067:	add    BYTE PTR [rdx],bl
   14000c069:	cmp    eax,DWORD PTR [rcx]
   14000c06b:	add    BYTE PTR [rax],al
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rdx+0x3b],ah
   14000c072:	add    DWORD PTR [rax],eax
   14000c074:	add    BYTE PTR [rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c079:	cmp    eax,DWORD PTR [rcx]
   14000c07b:	add    BYTE PTR [rax],al
   14000c07d:	add    BYTE PTR [rax],al
   14000c07f:	add    al,bh
   14000c081:	cmp    eax,DWORD PTR [rcx]
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax+0x3c],al
   14000c08a:	add    DWORD PTR [rax],eax
   14000c08c:	add    BYTE PTR [rax],al
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	jl     0x14000c0ce
   14000c092:	add    DWORD PTR [rax],eax
   14000c094:	add    BYTE PTR [rax],al
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	mov    eax,0x13c
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi],dl
   14000c0a1:	cmp    al,BYTE PTR [rcx]
	...
   14000c0af:	add    al,dh
   14000c0b1:	cmp    eax,0x1
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	in     al,0x3d
   14000c0ba:	add    DWORD PTR [rax],eax
   14000c0bc:	add    BYTE PTR [rax],al
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	fdivr  QWORD PTR [rip+0x1]        # 0x14000c0c7
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	sar    BYTE PTR [rip+0x1],cl        # 0x14000c0cf
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	retf   0x13d
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rbp+rdi*1+0x1],bh
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c0e1:	cmp    eax,0x1
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	xchg   esp,eax
   14000c0e9:	cmp    eax,0x1
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	cld    
   14000c0f1:	cmp    eax,0x1
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	push   0x13d
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rsi+0x3d],bl
   14000c102:	add    DWORD PTR [rax],eax
   14000c104:	add    BYTE PTR [rax],al
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	push   rsp
   14000c109:	cmp    eax,0x1
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	rex.WR cmp rax,0x1
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	ss cmp eax,0x1
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	sub    bh,BYTE PTR [rip+0x1]        # 0x14000c127
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	and    BYTE PTR [rip+0x1],bh        # 0x14000c12f
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	(bad)  
   14000c131:	cmp    eax,0x1
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	(bad)  
   14000c139:	cmp    eax,0x1
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	or     bh,BYTE PTR [rsi]
   14000c142:	add    DWORD PTR [rax],eax
   14000c144:	add    BYTE PTR [rax],al
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	and    BYTE PTR [rsi],bh
   14000c14a:	add    DWORD PTR [rax],eax
   14000c14c:	add    BYTE PTR [rax],al
   14000c14e:	add    BYTE PTR [rax],al
   14000c150:	xor    al,0x3e
   14000c152:	add    DWORD PTR [rax],eax
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	rex
   14000c159:	add    DWORD PTR ds:[rax],eax
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	rex.WX
   14000c161:	add    DWORD PTR ds:[rax],eax
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	pop    rsp
   14000c169:	add    DWORD PTR ds:[rax],eax
   14000c16c:	add    BYTE PTR [rax],al
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	outs   dx,BYTE PTR ds:[rsi]
   14000c171:	add    DWORD PTR ds:[rax],eax
   14000c174:	add    BYTE PTR [rax],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	(bad)  
   14000c179:	add    DWORD PTR ds:[rax],eax
   14000c17c:	add    BYTE PTR [rax],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	mov    eax,0x13e
   14000c185:	add    BYTE PTR [rax],al
   14000c187:	add    dl,al
   14000c189:	add    DWORD PTR ds:[rax],eax
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	sar    BYTE PTR [rsi],1
   14000c192:	add    DWORD PTR [rax],eax
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	xchg   BYTE PTR [rip+0x1],bh        # 0x14000c19f
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	loop   0x14000c1e0
   14000c1a2:	add    DWORD PTR [rax],eax
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	fdivr  DWORD PTR [rsi]
   14000c1aa:	add    DWORD PTR [rax],eax
	...
   14000c1b8:	or     bh,BYTE PTR [rax]
   14000c1ba:	add    DWORD PTR [rax],eax
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	sub    BYTE PTR [rax],bh
   14000c1c2:	add    DWORD PTR [rax],eax
   14000c1c4:	add    BYTE PTR [rax],al
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	push   rax
   14000c1c9:	cmp    BYTE PTR [rcx],al
   14000c1cb:	add    BYTE PTR [rax],al
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rdx+0x38],dh
   14000c1d2:	add    DWORD PTR [rax],eax
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	cwde   
   14000c1d9:	cmp    BYTE PTR [rcx],al
   14000c1db:	add    BYTE PTR [rax],al
   14000c1dd:	add    BYTE PTR [rax],al
   14000c1df:	add    al,dl
   14000c1e1:	cmp    BYTE PTR [rcx],al
   14000c1e3:	add    BYTE PTR [rax],al
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    ah,ch
   14000c1e9:	cmp    BYTE PTR [rcx],al
   14000c1eb:	add    BYTE PTR [rax],al
   14000c1ed:	add    BYTE PTR [rax],al
   14000c1ef:	add    BYTE PTR [rsi],cl
   14000c1f1:	cmp    DWORD PTR [rcx],eax
   14000c1f3:	add    BYTE PTR [rax],al
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    dh,bl
   14000c1f9:	(bad)  
   14000c1fa:	add    DWORD PTR [rax],eax
   14000c1fc:	add    BYTE PTR [rax],al
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	push   rsi
   14000c201:	cmp    DWORD PTR [rcx],eax
   14000c203:	add    BYTE PTR [rax],al
   14000c205:	add    BYTE PTR [rax],al
   14000c207:	add    BYTE PTR [rdx+0x139],bl
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rcx+rdi*1+0x1],dh
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	(bad)  
   14000c219:	cmp    DWORD PTR [rcx],eax
   14000c21b:	add    BYTE PTR [rax],al
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    ah,bl
   14000c221:	cmp    DWORD PTR [rcx],eax
   14000c223:	add    BYTE PTR [rax],al
   14000c225:	add    BYTE PTR [rax],al
   14000c227:	add    BYTE PTR [rax+0x137],bh
   14000c22d:	add    BYTE PTR [rax],al
   14000c22f:	add    BYTE PTR [rdx+0x137],dl
   14000c235:	add    BYTE PTR [rax],al
   14000c237:	add    BYTE PTR [rax+0x37],dh
   14000c23a:	add    DWORD PTR [rax],eax
   14000c23c:	add    BYTE PTR [rax],al
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	xor    al,0x37
   14000c242:	add    DWORD PTR [rax],eax
   14000c244:	add    BYTE PTR [rax],al
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	or     al,0x37
   14000c24a:	add    DWORD PTR [rax],eax
   14000c24c:	add    BYTE PTR [rax],al
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	repnz add DWORD PTR ss:[rax],eax
   14000c254:	add    BYTE PTR [rax],al
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	enter  0x136,0x0
   14000c25c:	add    BYTE PTR [rax],al
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c261:	add    DWORD PTR ss:[rax],eax
   14000c264:	add    BYTE PTR [rax],al
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	xor    BYTE PTR [rsi],0x1
   14000c26b:	add    BYTE PTR [rax],al
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    BYTE PTR [rsi+rsi*1+0x1],dl
   14000c273:	add    BYTE PTR [rax],al
   14000c275:	add    BYTE PTR [rax],al
   14000c277:	add    BYTE PTR [rax],ah
   14000c279:	add    DWORD PTR ss:[rax],eax
   14000c27c:	add    BYTE PTR [rax],al
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	fidiv  DWORD PTR [rip+0x1]        # 0x14000c287
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	mov    edx,0x135
   14000c28d:	add    BYTE PTR [rax],al
   14000c28f:	add    BYTE PTR [rbp+rsi*1+0x1],bh
   14000c293:	add    BYTE PTR [rax],al
   14000c295:	add    BYTE PTR [rax],al
   14000c297:	add    BYTE PTR [rbp+rsi*1+0x1],bl
   14000c29b:	add    BYTE PTR [rax],al
   14000c29d:	add    BYTE PTR [rax],al
   14000c29f:	add    BYTE PTR [rsi],ch
   14000c2a1:	xor    eax,0x1
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	or     dh,BYTE PTR [rip+0x1]        # 0x14000c2af
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	lock xor al,0x1
   14000c2b3:	add    BYTE PTR [rax],al
   14000c2b5:	add    BYTE PTR [rax],al
   14000c2b7:	add    dh,cl
   14000c2b9:	xor    al,0x1
   14000c2bb:	add    BYTE PTR [rax],al
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rax+0x134],dl
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    BYTE PTR [rsp+rsi*1+0x1],bh
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax+0x34],dl
   14000c2d2:	add    DWORD PTR [rax],eax
   14000c2d4:	add    BYTE PTR [rax],al
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	and    BYTE PTR [rcx+rax*1],dh
   14000c2db:	add    BYTE PTR [rax],al
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rdx],al
   14000c2e1:	xor    al,0x1
   14000c2e3:	add    BYTE PTR [rax],al
   14000c2e5:	add    BYTE PTR [rax],al
   14000c2e7:	add    al,bl
   14000c2e9:	xor    eax,DWORD PTR [rcx]
   14000c2eb:	add    BYTE PTR [rax],al
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    BYTE PTR [rdx+0x133],ch
   14000c2f5:	add    BYTE PTR [rax],al
   14000c2f7:	add    BYTE PTR [rax+0x33],bh
   14000c2fa:	add    DWORD PTR [rax],eax
   14000c2fc:	add    BYTE PTR [rax],al
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	push   rax
   14000c301:	xor    eax,DWORD PTR [rcx]
   14000c303:	add    BYTE PTR [rax],al
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rax],ch
   14000c309:	xor    eax,DWORD PTR [rcx]
   14000c30b:	add    BYTE PTR [rax],al
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rbx+rsi*1],al
   14000c312:	add    DWORD PTR [rax],eax
   14000c314:	add    BYTE PTR [rax],al
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	fidiv  DWORD PTR [rdx]
   14000c31a:	add    DWORD PTR [rax],eax
   14000c31c:	add    BYTE PTR [rax],al
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	mov    BYTE PTR [rdx],dh
   14000c322:	add    DWORD PTR [rax],eax
   14000c324:	add    BYTE PTR [rax],al
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	xor    al,BYTE PTR fs:[rcx]
   14000c32b:	add    BYTE PTR [rax],al
   14000c32d:	add    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rdx+0x32],al
   14000c332:	add    DWORD PTR [rax],eax
   14000c334:	add    BYTE PTR [rax],al
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	sbb    al,0x32
   14000c33a:	add    DWORD PTR [rax],eax
   14000c33c:	add    BYTE PTR [rax],al
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	in     al,dx
   14000c341:	xor    DWORD PTR [rcx],eax
   14000c343:	add    BYTE PTR [rax],al
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    ah,cl
   14000c349:	xor    DWORD PTR [rcx],eax
   14000c34b:	add    BYTE PTR [rax],al
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rcx+rsi*1+0x1],ah
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	jle    0x14000c38b
   14000c35a:	add    DWORD PTR [rax],eax
   14000c35c:	add    BYTE PTR [rax],al
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	(bad)  
   14000c361:	xor    DWORD PTR [rcx],eax
   14000c363:	add    BYTE PTR [rax],al
   14000c365:	add    BYTE PTR [rax],al
   14000c367:	add    BYTE PTR [rcx+rsi*1],bh
   14000c36a:	add    DWORD PTR [rax],eax
   14000c36c:	add    BYTE PTR [rax],al
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	sbb    BYTE PTR [rcx],dh
   14000c372:	add    DWORD PTR [rax],eax
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	div    BYTE PTR [rax]
   14000c37a:	add    DWORD PTR [rax],eax
   14000c37c:	add    BYTE PTR [rax],al
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	shl    BYTE PTR [rax],1
   14000c382:	add    DWORD PTR [rax],eax
   14000c384:	add    BYTE PTR [rax],al
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	test   al,0x30
   14000c38a:	add    DWORD PTR [rax],eax
   14000c38c:	add    BYTE PTR [rax],al
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	(bad)  
   14000c391:	xor    BYTE PTR [rcx],al
   14000c393:	add    BYTE PTR [rax],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    BYTE PTR [rax+0x130],cl
   14000c39d:	add    BYTE PTR [rax],al
   14000c39f:	add    BYTE PTR [rsi],bh
   14000c3a1:	xor    BYTE PTR [rcx],al
   14000c3a3:	add    BYTE PTR [rax],al
   14000c3a5:	add    BYTE PTR [rax],al
   14000c3a7:	add    BYTE PTR [rax+rsi*1],ah
   14000c3aa:	add    DWORD PTR [rax],eax
   14000c3ac:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	or     al,0x30
   14000c3b2:	add    DWORD PTR [rax],eax
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	imul   BYTE PTR [rdi]
   14000c3ba:	add    DWORD PTR [rax],eax
   14000c3bc:	add    BYTE PTR [rax],al
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	fisubr DWORD PTR [rdi]
   14000c3c2:	add    DWORD PTR [rax],eax
   14000c3c4:	add    BYTE PTR [rax],al
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	(bad)  
   14000c3c9:	(bad)  
   14000c3ca:	add    DWORD PTR [rax],eax
   14000c3cc:	add    BYTE PTR [rax],al
   14000c3ce:	add    BYTE PTR [rax],al
   14000c3d0:	cmp    al,0x39
   14000c3d2:	add    DWORD PTR [rax],eax
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	test   al,0x2f
   14000c3da:	add    DWORD PTR [rax],eax
	...
   14000c3f0:	xor    al,0xb4
   14000c3f2:	add    BYTE PTR [rax+0x1],al
	...
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rsi+rsi*4],bl
   14000c40a:	add    BYTE PTR [rax+0x1],al
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rax+rdi*4],cl
   14000c412:	add    BYTE PTR [rax+0x1],al
	...
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    BYTE PTR [rdx+0x61],ah
   14000c422:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000c426:	ins    BYTE PTR es:[rdi],dx
   14000c427:	outs   dx,DWORD PTR ds:[rsi]
   14000c428:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c42b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20b00000
   14000c432:	add    DWORD PTR [rax+0x1],eax
   14000c435:	add    BYTE PTR [rax],al
   14000c437:	add    BYTE PTR [rax],dl
   14000c439:	adc    BYTE PTR [rax],al
   14000c43b:	rex add DWORD PTR [rax],eax
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	add    BYTE PTR [rax],dl
   14000c442:	add    BYTE PTR [rax+0x1],al
   14000c445:	add    BYTE PTR [rax],al
   14000c447:	add    BYTE PTR [rax],al
   14000c449:	adc    BYTE PTR [rax],al
   14000c44b:	rex add DWORD PTR [rax],eax
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	add    BYTE PTR [rax],dl
   14000c452:	add    BYTE PTR [rax+0x1],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rcx+0x6d],dh
   14000c45a:	ins    BYTE PTR es:[rdi],dx
   14000c45b:	add    BYTE PTR [rax],dh
   14000c45d:	xor    BYTE PTR [rax],dh
   14000c45f:	add    BYTE PTR [rax],dh
   14000c461:	xor    BYTE PTR [rax],al
   14000c463:	add    BYTE PTR [rbp+rsi*2+0x0],bl
   14000c467:	add    BYTE PTR [rax],ch
   14000c469:	and    DWORD PTR [rcx],eax
   14000c46b:	rex add DWORD PTR [rax],eax
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	adc    BYTE PTR [rip+0x14000],0x0        # 0x140020477
   14000c477:	add    BYTE PTR [rax+0x1400013],dh
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    BYTE PTR [rax],dl
   14000c481:	(bad)  
   14000c482:	add    BYTE PTR [rax+0x1],al
   14000c485:	add    BYTE PTR [rax],al
   14000c487:	add    BYTE PTR [rax],al
   14000c489:	adc    al,0x0
   14000c48b:	rex add DWORD PTR [rax],eax
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	sub    BYTE PTR [rax+rax*1+0x140],dh
   14000c497:	add    BYTE PTR [rsi],ch
   14000c499:	jo     0x14000c50d
   14000c49b:	(bad)  
   14000c49c:	ins    DWORD PTR es:[edi],dx
   14000c49e:	(bad)  
   14000c49f:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   14000c4a3:	jb     0x14000c506
   14000c4a5:	jb     0x14000c520
   14000c4a7:	or     al,BYTE PTR [rax]
   14000c4a9:	add    BYTE PTR [rax],al
   14000c4ab:	add    BYTE PTR [rax],ah
   14000c4ad:	(bad)  
   14000c4ae:	jae    0x14000c4d0
	...
   14000c4b8:	imul   ebp,DWORD PTR cs:[rbp+0x70],0x2074726f
	...
   14000c4c8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002de61
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	mov    al,0x25
   14000c4d2:	add    DWORD PTR [rax],eax
   14000c4d4:	add    DWORD PTR [rax],eax
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	cld    
   14000c4d9:	and    al,0x1
   14000c4db:	add    BYTE PTR [rsi],al
   14000c4dd:	add    BYTE PTR [rax],al
   14000c4df:	add    BYTE PTR ds:0x300001,ah
	...
   14000c4ee:	add    BYTE PTR [rax],al
   14000c4f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002de89
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	mov    al,0x25
   14000c4fa:	add    DWORD PTR [rax],eax
   14000c4fc:	add    DWORD PTR [rax],eax
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	mov    BYTE PTR [rip+0x60001],ah        # 0x14006c507
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	shl    BYTE PTR [rip+0x300001],0x0        # 0x14030c510
	...
   14000c517:	add    BYTE PTR [rax+rsi*1+0x0],bl
   14000c51b:	add    BYTE PTR [rsi+rsi*2+0x0],bl
   14000c51f:	add    BYTE PTR [rsp+rsi*2+0x0],bl
   14000c523:	add    BYTE PTR [rdx+rsi*2+0x0],bl
   14000c527:	add    BYTE PTR [rsi+rbp*2+0x0],bl
   14000c52b:	add    BYTE PTR [rsi+riz*2+0x0],bl
   14000c52f:	add    BYTE PTR [rdx+riz*2+0x0],bl
   14000c533:	add    BYTE PTR [rsp+rbx*2+0x0],bl
   14000c537:	add    BYTE PTR [rdx+riz*1+0x0],bl
   14000c53b:	add    BYTE PTR [rax],al
   14000c53d:	add    BYTE PTR [rax],al
   14000c53f:	add    BYTE PTR [rax],ah
   14000c541:	and    BYTE PTR [rip+0x20202068],ch        # 0x16020e5af
   14000c547:	and    BYTE PTR [rax],ah
   14000c549:	and    BYTE PTR [rax],ah
   14000c54b:	and    BYTE PTR [rax],ah
   14000c54d:	and    BYTE PTR [rax],ah
   14000c54f:	and    BYTE PTR [rax],ah
   14000c551:	and    BYTE PTR [rax],ah
   14000c553:	and    BYTE PTR [rax],ah
   14000c555:	and    BYTE PTR [rax],ah
   14000c557:	and    BYTE PTR [rax],ah
   14000c559:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14000c55d:	jo     0x14000c5cb
   14000c55f:	(bad)  
   14000c560:	jns    0x14000c582
   14000c562:	je     0x14000c5cc
   14000c564:	imul   esi,DWORD PTR [rbx+0x20],0x7074756f
   14000c56b:	jne    0x14000c5e1
   14000c56d:	add    BYTE PTR [rax],al
   14000c56f:	add    BYTE PTR [rax],ah
   14000c571:	and    BYTE PTR [rip+0x69773c77],ch        # 0x1a97801ee
   14000c577:	fs je  0x14000c5e2
   14000c57a:	and    BYTE PTR ds:[rax],ah
   14000c57d:	and    BYTE PTR [rax],ah
   14000c57f:	and    BYTE PTR [rax],ah
   14000c581:	and    BYTE PTR [rax],ah
   14000c583:	and    BYTE PTR [rax],ah
   14000c585:	and    BYTE PTR [rax],ah
   14000c587:	and    BYTE PTR [rax],ah
   14000c589:	and    BYTE PTR [rdx+0x65],dh
   14000c58c:	jae    0x14000c602
   14000c58e:	jb     0x14000c5f9
   14000c590:	movsxd esi,DWORD PTR [rax+riz*1+0x6c]
   14000c594:	imul   ebp,DWORD PTR [rsi+0x65],0x61686320
   14000c59b:	jb     0x14000c5fe
   14000c59d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14000c5a1:	jae    0x14000c5c3
   14000c5a3:	je     0x14000c614
   14000c5a5:	and    BYTE PTR [rdi+0x69],dh
   14000c5a8:	fs je  0x14000c613
   14000c5ab:	add    BYTE PTR [rax],al
   14000c5ad:	add    BYTE PTR [rax],al
   14000c5af:	add    BYTE PTR [rax],ah
   14000c5b1:	and    BYTE PTR [rip+0x2d2d2076],ch        # 0x16d2de62d
   14000c5b7:	jbe    0x14000c61e
   14000c5b9:	jb     0x14000c624
   14000c5bb:	data16 jns 0x14000c5eb
   14000c5be:	outs   dx,DWORD PTR ds:[rsi]
   14000c5bf:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c0:	ins    BYTE PTR es:[rdi],dx
   14000c5c1:	jns    0x14000c5e3
   14000c5c3:	and    BYTE PTR [rax],ah
   14000c5c5:	and    BYTE PTR [rax],ah
   14000c5c7:	and    BYTE PTR [rax],ah
   14000c5c9:	and    BYTE PTR [rdx+0x75],ch
   14000c5cc:	jae    0x14000c642
   14000c5ce:	and    BYTE PTR [rdx+0x75],dh
   14000c5d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d2:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000c5d6:	and    BYTE PTR [rsi+0x65],dh
   14000c5d9:	jb     0x14000c644
   14000c5db:	imul   sp,WORD PTR [rbp+0x72],0x202c
   14000c5e1:	outs   dx,BYTE PTR ds:[rsi]
   14000c5e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e3:	and    BYTE PTR [rdi+0x75],ch
   14000c5e6:	je     0x14000c658
   14000c5e8:	jne    0x14000c65e
   14000c5ea:	add    BYTE PTR [rax],al
   14000c5ec:	add    BYTE PTR [rax],al
   14000c5ee:	add    BYTE PTR [rax],al
   14000c5f0:	and    BYTE PTR [rax],ah
   14000c5f2:	sub    eax,0x69663c6f
   14000c5f7:	ins    BYTE PTR es:[rdi],dx
   14000c5f8:	gs and BYTE PTR ds:[rax],ah
   14000c5fc:	and    BYTE PTR [rax],ah
   14000c5fe:	and    BYTE PTR [rax],ah
   14000c600:	and    BYTE PTR [rax],ah
   14000c602:	and    BYTE PTR [rax],ah
   14000c604:	and    BYTE PTR [rax],ah
   14000c606:	and    BYTE PTR [rax],ah
   14000c608:	and    BYTE PTR [rax],ah
   14000c60a:	ja     0x14000c67e
   14000c60c:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x7074756f
   14000c614:	jne    0x14000c68a
   14000c616:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000c61a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6172
   14000c621:	je     0x14000c68b
   14000c623:	gs jb  0x14000c646
   14000c626:	je     0x14000c690
   14000c628:	(bad)  
   14000c629:	outs   dx,BYTE PTR ds:[rsi]
   14000c62a:	and    BYTE PTR [rbx+0x74],dh
   14000c62d:	outs   dx,DWORD PTR fs:[rsi]
   14000c62f:	jne    0x14000c6a5
   14000c631:	add    BYTE PTR [rax],al
   14000c633:	add    BYTE PTR [rax],al
   14000c635:	add    BYTE PTR [rax],al
   14000c637:	add    BYTE PTR [rax],ah
   14000c639:	push   rsp
   14000c63a:	push   0x706f2065
   14000c63f:	je     0x14000c6aa
   14000c641:	outs   dx,DWORD PTR ds:[rsi]
   14000c642:	outs   dx,BYTE PTR ds:[rsi]
   14000c643:	jae    0x14000c665
   14000c645:	(bad)  
   14000c646:	jb     0x14000c6ad
   14000c648:	cmp    al,BYTE PTR [rax]
   14000c64a:	add    BYTE PTR [rax],al
   14000c64c:	add    BYTE PTR [rax],al
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	and    BYTE PTR [rdx+0x65],dl
   14000c653:	ins    DWORD PTR es:[rdi],dx
   14000c654:	outs   dx,DWORD PTR ds:[rsi]
   14000c655:	jbe    0x14000c6bc
   14000c657:	jae    0x14000c679
   14000c659:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c65c:	ins    DWORD PTR es:[rdi],dx
   14000c65d:	outs   dx,BYTE PTR gs:[rsi]
   14000c65f:	je     0x14000c6d4
   14000c661:	and    BYTE PTR [rcx+0x6e],ah
   14000c664:	and    BYTE PTR fs:[rcx+riz*2+0x79],ch
   14000c669:	outs   dx,DWORD PTR ds:[rsi]
   14000c66a:	jne    0x14000c6e0
   14000c66c:	and    BYTE PTR [rbx+0x68],ah
   14000c66f:	(bad)  
   14000c670:	jb     0x14000c6d3
   14000c672:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14000c676:	jae    0x14000c678
   14000c678:	push   rbp
   14000c679:	jae    0x14000c6dc
   14000c67b:	cmp    ah,BYTE PTR gs:[eax]
   14000c67f:	jno    0x14000c6ee
   14000c681:	ins    BYTE PTR es:[rdi],dx
   14000c682:	ins    DWORD PTR es:[rdi],dx
   14000c683:	imul   ebp,DWORD PTR [rsi+0x20],0x74706f5b
   14000c68a:	imul   ebp,DWORD PTR [rdi+0x6e],0x66205d73
   14000c691:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x61000000
   14000c699:	jae    0x14000c6bb
   14000c69b:	add    BYTE PTR [rax],al
   14000c69d:	add    BYTE PTR [rax],al
   14000c69f:	add    BYTE PTR [rsi],ch
   14000c6a1:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
   14000c6a8:	mov    al,0x22
   14000c6aa:	add    DWORD PTR [rax+0x1],eax
   14000c6ad:	add    BYTE PTR [rax],al
   14000c6af:	add    al,ah
   14000c6b1:	add    BYTE PTR [r8+0x1],al
   14000c6b5:	add    BYTE PTR [rax],al
   14000c6b7:	add    BYTE PTR [rax+0x1400013],dh
   14000c6bd:	add    BYTE PTR [rax],al
   14000c6bf:	add    BYTE PTR [rax],dl
   14000c6c1:	(bad)  
   14000c6c2:	add    BYTE PTR [rax+0x1],al
   14000c6c5:	add    BYTE PTR [rax],al
   14000c6c7:	add    BYTE PTR [rax],al
   14000c6c9:	adc    al,0x0
   14000c6cb:	rex add DWORD PTR [rax],eax
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	loopne 0x14000c714
   14000c6d2:	add    BYTE PTR [rax+0x1],al
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rax+0x23],cl
   14000c6da:	add    DWORD PTR [rax+0x1],eax
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rax],dl
   14000c6e1:	rex.X add BYTE PTR [rax+0x1],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rax+0x1400013],dh
   14000c6ed:	add    BYTE PTR [rax],al
   14000c6ef:	add    BYTE PTR [rax],dl
   14000c6f1:	(bad)  
   14000c6f2:	add    BYTE PTR [rax+0x1],al
   14000c6f5:	add    BYTE PTR [rax],al
   14000c6f7:	add    BYTE PTR [rax],al
   14000c6f9:	adc    al,0x0
   14000c6fb:	rex add DWORD PTR [rax],eax
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	rcl    BYTE PTR [rbx+0x0],1
   14000c703:	rex add DWORD PTR [rax],eax
   14000c706:	add    BYTE PTR [rax],al
   14000c708:	(bad)  
   14000c709:	and    BYTE PTR [rax],ch
   14000c70b:	jo     0x14000c772
   14000c70d:	jb     0x14000c77c
   14000c70f:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14000c716:	fs outs dx,BYTE PTR gs:[rsi]
   14000c719:	imul   esp,DWORD PTR [rbp+0x64],0x29
   14000c720:	(bad)  
   14000c721:	and    BYTE PTR [rax],ch
   14000c723:	outs   dx,BYTE PTR ds:[rsi]
   14000c724:	outs   dx,DWORD PTR ds:[rsi]
   14000c725:	je     0x14000c747
   14000c727:	(bad)  
   14000c728:	and    BYTE PTR [rsi+0x61],dh
   14000c72b:	ins    BYTE PTR es:[rdi],dx
   14000c72c:	imul   esp,DWORD PTR [rax+riz*1+0x51],0x4a2f4c4d
   14000c734:	push   rbx
   14000c735:	and    BYTE PTR [rsi+0x69],ah
   14000c738:	ins    BYTE PTR es:[rdi],dx
   14000c739:	sub    DWORD PTR gs:[rax],eax
   14000c73c:	add    BYTE PTR [rax],al
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	jno    0x14000c7af
   14000c742:	ins    BYTE PTR es:[rdi],dx
   14000c743:	ins    DWORD PTR es:[rdi],dx
   14000c744:	imul   ebp,DWORD PTR [rsi+0x3a],0x6e616320
   14000c74b:	outs   dx,BYTE PTR ds:[rsi]
   14000c74c:	outs   dx,DWORD PTR ds:[rsi]
   14000c74d:	je     0x14000c76f
   14000c74f:	ins    DWORD PTR es:[rdi],dx
   14000c750:	imul   ebp,DWORD PTR [rsi+0x69],0x27207966
   14000c757:	add    BYTE PTR [rdi],ah
   14000c759:	and    BYTE PTR [rsi+0x6f],ch
   14000c75c:	and    BYTE PTR [rbx+0x75],dh
   14000c75f:	movsxd ebp,DWORD PTR [rax+0x20]
   14000c762:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14000c769:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14000c76d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000c772:	jns    0x14000c774
   14000c774:	add    BYTE PTR [rax],al
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	jno    0x14000c7e7
   14000c77a:	ins    BYTE PTR es:[rdi],dx
   14000c77b:	ins    DWORD PTR es:[rdi],dx
   14000c77c:	imul   ebp,DWORD PTR [rsi+0x3a],0x2720
   14000c783:	add    BYTE PTR [rax],al
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rcx+0x6d],dh
   14000c78a:	ins    BYTE PTR es:[rdi],dx
   14000c78b:	ins    DWORD PTR es:[rdi],dx
   14000c78c:	imul   ebp,DWORD PTR [rsi+0x3a],0x6f6f7420
   14000c793:	and    BYTE PTR [rbp+0x61],ch
   14000c796:	outs   dx,BYTE PTR ds:[rsi]
   14000c797:	jns    0x14000c7b9
   14000c799:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
   14000c7a0:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x65707320
   14000c7a8:	movsxd ebp,DWORD PTR [rcx+0x66]
   14000c7ab:	imul   esp,DWORD PTR [rbp+0x64],0x6d710000
   14000c7b2:	ins    BYTE PTR es:[rdi],dx
   14000c7b3:	ins    DWORD PTR es:[rdi],dx
   14000c7b4:	imul   ebp,DWORD PTR [rsi+0x3a],0x766e6920
   14000c7bb:	(bad)  
   14000c7bc:	ins    BYTE PTR es:[rdi],dx
   14000c7bd:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
   14000c7c5:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c6:	and    BYTE PTR [rdi],ah
	...
   14000c7d0:	jno    0x14000c83f
   14000c7d2:	ins    BYTE PTR es:[rdi],dx
   14000c7d3:	ins    DWORD PTR es:[rdi],dx
   14000c7d4:	imul   ebp,DWORD PTR [rsi+0x3a],0x67726120
   14000c7db:	jne    0x14000c84a
   14000c7dd:	outs   dx,BYTE PTR gs:[rsi]
   14000c7df:	je     0x14000c801
   14000c7e1:	je     0x14000c852
   14000c7e3:	and    BYTE PTR [rdi],ah
   14000c7e5:	sub    eax,0x69202777
   14000c7ea:	jae    0x14000c80c
   14000c7ec:	ins    DWORD PTR es:[rdi],dx
   14000c7ed:	imul   esi,DWORD PTR [rbx+0x73],0x676e69
   14000c7f4:	add    BYTE PTR [rax],al
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	jno    0x14000c867
   14000c7fa:	ins    BYTE PTR es:[rdi],dx
   14000c7fb:	ins    DWORD PTR es:[rdi],dx
   14000c7fc:	imul   ebp,DWORD PTR [rsi+0x3a],0x67726120
   14000c803:	jne    0x14000c872
   14000c805:	outs   dx,BYTE PTR gs:[rsi]
   14000c807:	je     0x14000c829
   14000c809:	je     0x14000c87a
   14000c80b:	and    BYTE PTR [rdi],ah
   14000c80d:	sub    eax,0x69202777
   14000c812:	jae    0x14000c834
   14000c814:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000c81b:	add    BYTE PTR [rax],al
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    BYTE PTR [rcx+0x6d],dh
   14000c822:	ins    BYTE PTR es:[rdi],dx
   14000c823:	ins    DWORD PTR es:[rdi],dx
   14000c824:	imul   ebp,DWORD PTR [rsi+0x3a],0x67726120
   14000c82b:	jne    0x14000c89a
   14000c82d:	outs   dx,BYTE PTR gs:[rsi]
   14000c82f:	je     0x14000c851
   14000c831:	je     0x14000c8a2
   14000c833:	and    BYTE PTR [rdi],ah
   14000c835:	sub    eax,0x6920276f
   14000c83a:	jae    0x14000c85c
   14000c83c:	ins    DWORD PTR es:[rdi],dx
   14000c83d:	imul   esi,DWORD PTR [rbx+0x73],0x676e69
   14000c844:	add    BYTE PTR [rax],al
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	sub    eax,0x7265762d
   14000c84d:	imul   esp,DWORD PTR [rsi+0x79],0x6c6e6f2d
   14000c854:	jns    0x14000c856
   14000c856:	add    BYTE PTR [rax],al
   14000c858:	sub    eax,0x2d000076
   14000c85d:	sub    eax,0x706c6568
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	sub    eax,0x2d000068
   14000c869:	ja     0x14000c86b
   14000c86b:	add    BYTE PTR [rip+0x3a00006f],ch        # 0x17a00c8e0
   14000c871:	and    BYTE PTR [rbx+0x79],dh
   14000c874:	outs   dx,BYTE PTR ds:[rsi]
   14000c875:	je     0x14000c8d8
   14000c877:	js     0x14000c899
   14000c879:	gs jb  0x14000c8ee
   14000c87c:	outs   dx,DWORD PTR ds:[rsi]
   14000c87d:	jb     0x14000c87f
   14000c87f:	add    BYTE PTR [rbx],bh
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    BYTE PTR [rbx+0x65],dh
   14000c886:	je     0x14000c888
   14000c888:	addr32 gs je 0x14000c88c
   14000c88c:	outs   dx,DWORD PTR ds:[rsi]
   14000c88d:	outs   dx,BYTE PTR ds:[rsi]
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	(bad)  
   14000c891:	jae    0x14000c893
   14000c893:	add    BYTE PTR [rax+0x72],dh
   14000c896:	(bad)  
   14000c897:	ins    DWORD PTR es:[edi],dx
   14000c899:	(bad)  
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
   14000c8a3:	add    BYTE PTR [rax+0x75],dh
   14000c8a6:	(bad)  
   14000c8a7:	ins    BYTE PTR es:[rdi],dx
   14000c8a8:	imul   esp,DWORD PTR [rbx+0x0],0x0
   14000c8af:	add    BYTE PTR [rbx+0x6f],ah
   14000c8b2:	ins    DWORD PTR es:[rdi],dx
   14000c8b3:	ins    DWORD PTR es:[rdi],dx
   14000c8b4:	outs   dx,BYTE PTR gs:[rsi]
   14000c8b6:	je     0x14000c8b8
   14000c8b8:	ins    DWORD PTR es:[rdi],dx
   14000c8b9:	jne    0x14000c927
   14000c8bb:	je     0x14000c926
   14000c8bd:	ins    BYTE PTR es:[rdi],dx
   14000c8be:	imul   ebp,DWORD PTR [rsi+0x65],0x72747320
   14000c8c5:	imul   ebp,DWORD PTR [rsi+0x67],0x74696c20
   14000c8cc:	gs jb  0x14000c930
   14000c8cf:	ins    BYTE PTR es:[rdi],dx
	...
   14000c8d8:	jb     0x14000c93f
   14000c8da:	jae    0x14000c941
   14000c8dc:	jb     0x14000c954
   14000c8de:	gs and BYTE PTR fs:[rdi+0x6f],dh
   14000c8e3:	jb     0x14000c949
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e7:	add    BYTE PTR [rbp+riz*2+0x62],ah
   14000c8eb:	jne    0x14000c954
   14000c8ed:	addr32 gs jb 0x14000c8f1
   14000c8f1:	add    BYTE PTR [rax],al
   14000c8f3:	add    BYTE PTR [rbx+0x6f],ah
   14000c8f6:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f7:	jae    0x14000c96d
   14000c8f9:	add    BYTE PTR [rax],al
   14000c8fb:	add    BYTE PTR [rsi+0x61],ah
   14000c8fe:	ins    BYTE PTR es:[rdi],dx
   14000c8ff:	jae    0x14000c966
   14000c901:	add    BYTE PTR [rax],al
   14000c903:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   14000c907:	add    BYTE PTR gs:[rax],al
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	outs   dx,BYTE PTR ds:[rsi]
   14000c90d:	jne    0x14000c97b
   14000c90f:	ins    BYTE PTR es:[rdi],dx
   14000c910:	add    BYTE PTR [rax],al
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	pop    rsi
   14000c915:	cmp    eax,0x5e0000
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	ja     0x14000c987
   14000c91e:	je     0x14000c988
   14000c920:	add    BYTE PTR [rax],al
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	ja     0x14000c98e
   14000c926:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6f760000
   14000c92e:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x61760000
   14000c936:	jb     0x14000c938
   14000c938:	je     0x14000c9b3
   14000c93a:	jo     0x14000c9a1
   14000c93c:	outs   dx,DWORD PTR ds:[rsi]
   14000c93d:	data16 add BYTE PTR [rax],al
   14000c940:	je     0x14000c9b4
   14000c942:	jns    0x14000c944
   14000c944:	jle    0x14000c946
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	je     0x14000c9b2
   14000c94a:	jb     0x14000c9bb
   14000c94c:	ja     0x14000c94e
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	je     0x14000c9ba
   14000c952:	imul   esi,DWORD PTR [rbx+0x0],0x73000000
   14000c959:	ja     0x14000c9c4
   14000c95b:	je     0x14000c9c0
   14000c95d:	push   0x65720000
   14000c962:	(bad)  
   14000c963:	outs   dx,DWORD PTR fs:[rsi]
   14000c965:	outs   dx,BYTE PTR ds:[rsi]
   14000c966:	ins    BYTE PTR es:[rdi],dx
   14000c967:	jns    0x14000c969
   14000c969:	add    BYTE PTR [rax],al
   14000c96b:	add    BYTE PTR [rbx+0x69],dh
   14000c96e:	outs   dx,BYTE PTR ds:[esi]
   14000c970:	(bad)  
   14000c971:	ins    BYTE PTR es:[rdi],dx
   14000c972:	add    BYTE PTR [rax],al
   14000c974:	add    BYTE PTR [rax],al
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	jo     0x14000c9ec
   14000c97a:	outs   dx,DWORD PTR ds:[rsi]
   14000c97b:	jo     0x14000c9e2
   14000c97d:	jb     0x14000c9f3
   14000c97f:	jns    0x14000c981
   14000c981:	add    BYTE PTR [rax],al
   14000c983:	add    BYTE PTR [rax],al
   14000c985:	add    BYTE PTR [rax],al
   14000c987:	add    BYTE PTR [rbx+0x74],dh
   14000c98a:	jb     0x14000c9f5
   14000c98c:	outs   dx,BYTE PTR ds:[rsi]
   14000c98d:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   14000c992:	gs jb  0x14000c9f6
   14000c995:	ins    BYTE PTR es:[rdi],dx
   14000c996:	add    BYTE PTR [rax],al
   14000c998:	sub    bh,BYTE PTR [rip+0x2a0000]        # 0x1402ac99e
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	sub    DWORD PTR [rax],eax
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	jb     0x14000ca0b
   14000c9a6:	je     0x14000ca1d
   14000c9a8:	jb     0x14000ca18
   14000c9aa:	add    BYTE PTR [rax],al
   14000c9ac:	and    eax,0x2500003d
   14000c9b1:	add    BYTE PTR [rax],al
   14000c9b3:	add    BYTE PTR [rbp+0x0],bl
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	jge    0x14000c9ba
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	(bad)  
   14000c9bd:	add    BYTE PTR [rax],al
   14000c9bf:	add    BYTE PTR [rbx],ch
   14000c9c1:	sub    eax,DWORD PTR [rax]
   14000c9c3:	add    BYTE PTR [rbx],ch
   14000c9c5:	cmp    eax,0x2b0000
   14000c9ca:	add    BYTE PTR [rax],al
   14000c9cc:	jl     0x14000ca4a
   14000c9ce:	add    BYTE PTR [rax],al
   14000c9d0:	jl     0x14000ca0f
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	jl     0x14000c9d6
   14000c9d6:	add    BYTE PTR [rax],al
   14000c9d8:	outs   dx,BYTE PTR ds:[rsi]
   14000c9d9:	jne    0x14000ca48
   14000c9db:	gs jb  0x14000ca47
   14000c9de:	movsxd esp,DWORD PTR [rax]
   14000c9e0:	ins    BYTE PTR es:[rdi],dx
   14000c9e1:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x21006c61
   14000c9e9:	cmp    eax,0x3d21003d
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	and    DWORD PTR [rax],eax
   14000c9f2:	add    BYTE PTR [rax],al
   14000c9f4:	outs   dx,BYTE PTR ds:[rsi]
   14000c9f5:	gs ja  0x14000c9f8
   14000c9f8:	sub    eax,0x2d00002d
   14000c9fd:	cmp    eax,0x2d0000
   14000ca02:	add    BYTE PTR [rax],al
   14000ca04:	cmp    al,0x3c
   14000ca06:	cmp    eax,0x3c3c00
   14000ca0b:	add    BYTE PTR [rax+rax*1],bh
   14000ca0e:	add    BYTE PTR [rax],al
   14000ca10:	sub    BYTE PTR [rax],al
   14000ca12:	add    BYTE PTR [rax],al
   14000ca14:	cmp    al,0x3d
   14000ca16:	add    BYTE PTR [rax],al
   14000ca18:	pop    rbx
   14000ca19:	add    BYTE PTR [rax],al
   14000ca1b:	add    BYTE PTR [rbx+0x0],bh
   14000ca1e:	add    BYTE PTR [rax],al
   14000ca20:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
   14000ca27:	outs   dx,DWORD PTR gs:[rsi]
   14000ca29:	data16 add BYTE PTR [rax],al
   14000ca2c:	imul   ebp,DWORD PTR [rsi+0x0],0x666900
   14000ca33:	add    BYTE PTR [rax],al
   14000ca35:	add    BYTE PTR [rax],al
   14000ca37:	add    BYTE PTR [rcx+0x64],ch
   14000ca3a:	outs   dx,BYTE PTR gs:[rsi]
   14000ca3c:	je     0x14000caa7
   14000ca3e:	imul   sp,WORD PTR [rbp+0x72],0x0
   14000ca44:	ds ds ds cmp eax,0x0
   14000ca4c:	ds ds add BYTE PTR ds:[rsi],bh
   14000ca51:	ds cmp eax,0x3e3e00
   14000ca57:	add    BYTE PTR [rsi],bh
   14000ca59:	add    BYTE PTR [rax],al
   14000ca5b:	add    BYTE PTR [rsi],bh
   14000ca5d:	cmp    eax,0x75660000
   14000ca62:	outs   dx,BYTE PTR ds:[rsi]
   14000ca63:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000ca67:	outs   dx,BYTE PTR ds:[rsi]
   14000ca68:	add    BYTE PTR [rax],al
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	outs   dx,WORD PTR ds:[rsi]
   14000ca6e:	jb     0x14000ca70
   14000ca70:	imul   bp,WORD PTR [rsi+0x61],0x6c6c
   14000ca76:	jns    0x14000ca78
   14000ca78:	cmp    eax,0x3d003d3d
   14000ca7d:	cmp    eax,0x3d0000
   14000ca82:	add    BYTE PTR [rax],al
   14000ca84:	gs ins BYTE PTR es:[rdi],dx
   14000ca86:	jae    0x14000caed
   14000ca88:	add    BYTE PTR [rax],al
   14000ca8a:	add    BYTE PTR [rax],al
   14000ca8c:	add    BYTE PTR cs:[rax],al
   14000ca8f:	add    BYTE PTR [rdi+rbp*2+0x0],ah
   14000ca93:	add    BYTE PTR [rdi],ch
   14000ca95:	cmp    eax,0x2f0000
   14000ca9a:	add    BYTE PTR [rax],al
   14000ca9c:	fs gs ins BYTE PTR es:[rdi],dx
   14000ca9f:	gs je  0x14000cb07
   14000caa2:	add    BYTE PTR [rax],al
   14000caa4:	add    BYTE PTR [rax],al
   14000caa6:	add    BYTE PTR [rax],al
   14000caa8:	fs gs data16 (bad) 
   14000caac:	jne    0x14000cb1a
   14000caae:	je     0x14000cab0
   14000cab0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000cab3:	je     0x14000cb1e
   14000cab5:	outs   dx,BYTE PTR ds:[rsi]
   14000cab6:	jne    0x14000cb1d
   14000cab8:	add    BYTE PTR [rax],al
   14000caba:	add    BYTE PTR [rax],al
   14000cabc:	sub    al,0x0
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	cmp    al,BYTE PTR [rax]
   14000cac2:	add    BYTE PTR [rax],al
   14000cac4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000cac7:	movsxd ebp,DWORD PTR [rax+0x0]
   14000caca:	add    BYTE PTR [rax],al
   14000cacc:	movsxd esp,DWORD PTR [rcx+0x73]
   14000cacf:	add    BYTE PTR gs:[rax],al
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	(bad)
   14000cad9:	add    BYTE PTR [rax],al
   14000cadb:	add    BYTE PTR [rsi],ah
   14000cadd:	cmp    eax,0x26260000
   14000cae2:	add    BYTE PTR [rax],al
   14000cae4:	add    BYTE PTR es:[rax],al
   14000cae7:	add    BYTE PTR [rbp+0x6e],ah
   14000caea:	and    BYTE PTR fs:[rdi+0x66],ch
   14000caee:	and    BYTE PTR [rsi+0x69],ah
   14000caf1:	ins    BYTE PTR es:[rdi],dx
   14000caf2:	add    BYTE PTR gs:[rax],al
	...
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    al,ch
   14000cb01:	retf   0x4000
   14000cb04:	add    DWORD PTR [rax],eax
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	in     al,0xca
   14000cb0a:	add    BYTE PTR [rax+0x1],al
   14000cb0d:	add    BYTE PTR [rax],al
   14000cb0f:	add    al,ah
   14000cb11:	retf   0x4000
   14000cb14:	add    DWORD PTR [rax],eax
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	fmul   st(2),st
   14000cb1a:	add    BYTE PTR [rax+0x1],al
   14000cb1d:	add    BYTE PTR [rax],al
   14000cb1f:	add    ah,dl
   14000cb21:	retf   0x4000
   14000cb24:	add    DWORD PTR [rax],eax
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	int3   
   14000cb29:	retf   0x4000
   14000cb2c:	add    DWORD PTR [rax],eax
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	(bad)  
   14000cb31:	retf   0x4000
   14000cb34:	add    DWORD PTR [rax],eax
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	ror    dl,0x0
   14000cb3b:	rex add DWORD PTR [rax],eax
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	mov    esp,0x14000ca
   14000cb45:	add    BYTE PTR [rax],al
   14000cb47:	add    BYTE PTR [rax+0x14000ca],dh
   14000cb4d:	add    BYTE PTR [rax],al
   14000cb4f:	add    BYTE PTR [rax+0x14000ca],ch
   14000cb55:	add    BYTE PTR [rax],al
   14000cb57:	add    BYTE PTR [rdx+rcx*8+0x14000],bl
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	cwde   
   14000cb61:	retf   0x4000
   14000cb64:	add    DWORD PTR [rax],eax
   14000cb66:	add    BYTE PTR [rax],al
   14000cb68:	xchg   esp,eax
   14000cb69:	retf   0x4000
   14000cb6c:	add    DWORD PTR [rax],eax
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	nop
   14000cb71:	retf   0x4000
   14000cb74:	add    DWORD PTR [rax],eax
   14000cb76:	add    BYTE PTR [rax],al
   14000cb78:	mov    edx,cs
   14000cb7a:	add    BYTE PTR [rax+0x1],al
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	add    BYTE PTR [rdx+rcx*8+0x14000],al
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	or     dl,0x0
   14000cb8b:	rex add DWORD PTR [rax],eax
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	jl     0x14000cb5c
   14000cb92:	add    BYTE PTR [rax+0x1],al
   14000cb95:	add    BYTE PTR [rax],al
   14000cb97:	add    BYTE PTR [rax-0x36],bh
   14000cb9a:	add    BYTE PTR [rax+0x1],al
   14000cb9d:	add    BYTE PTR [rax],al
   14000cb9f:	add    BYTE PTR [rax-0x36],dh
   14000cba2:	add    BYTE PTR [rax+0x1],al
   14000cba5:	add    BYTE PTR [rax],al
   14000cba7:	add    BYTE PTR [rdx+rcx*8+0x0],ch
   14000cbab:	rex add DWORD PTR [rax],eax
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	(bad)  
   14000cbb1:	retf   0x4000
   14000cbb4:	add    DWORD PTR [rax],eax
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	pop    rsp
   14000cbb9:	retf   0x4000
   14000cbbc:	add    DWORD PTR [rax],eax
   14000cbbe:	add    BYTE PTR [rax],al
   14000cbc0:	pop    rax
   14000cbc1:	retf   0x4000
   14000cbc4:	add    DWORD PTR [rax],eax
   14000cbc6:	add    BYTE PTR [rax],al
   14000cbc8:	push   rsp
   14000cbc9:	retf   0x4000
   14000cbcc:	add    DWORD PTR [rax],eax
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	push   rax
   14000cbd1:	retf   0x4000
   14000cbd4:	add    DWORD PTR [rax],eax
   14000cbd6:	add    BYTE PTR [rax],al
   14000cbd8:	rex.WR retf 0x4000
   14000cbdc:	add    DWORD PTR [rax],eax
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	rex.R retf 0x4000
   14000cbe4:	add    DWORD PTR [rax],eax
   14000cbe6:	add    BYTE PTR [rax],al
   14000cbe8:	cmp    dl,cl
   14000cbea:	add    BYTE PTR [rax+0x1],al
   14000cbed:	add    BYTE PTR [rax],al
   14000cbef:	add    BYTE PTR [rax],dh
   14000cbf1:	retf   0x4000
   14000cbf4:	add    DWORD PTR [rax],eax
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	sub    al,0xca
   14000cbfa:	add    BYTE PTR [rax+0x1],al
   14000cbfd:	add    BYTE PTR [rax],al
   14000cbff:	add    BYTE PTR [rax],ah
   14000cc01:	retf   0x4000
   14000cc04:	add    DWORD PTR [rax],eax
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	sbb    al,0xca
   14000cc0a:	add    BYTE PTR [rax+0x1],al
   14000cc0d:	add    BYTE PTR [rax],al
   14000cc0f:	add    BYTE PTR [rax],bl
   14000cc11:	retf   0x4000
   14000cc14:	add    DWORD PTR [rax],eax
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	adc    al,0xca
   14000cc1a:	add    BYTE PTR [rax+0x1],al
   14000cc1d:	add    BYTE PTR [rax],al
   14000cc1f:	add    BYTE PTR [rax],dl
   14000cc21:	retf   0x4000
   14000cc24:	add    DWORD PTR [rax],eax
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	or     al,0xca
   14000cc2a:	add    BYTE PTR [rax+0x1],al
   14000cc2d:	add    BYTE PTR [rax],al
   14000cc2f:	add    BYTE PTR [rax],cl
   14000cc31:	retf   0x4000
   14000cc34:	add    DWORD PTR [rax],eax
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	add    al,0xca
   14000cc3a:	add    BYTE PTR [rax+0x1],al
   14000cc3d:	add    BYTE PTR [rax],al
   14000cc3f:	add    BYTE PTR [rax],al
   14000cc41:	retf   0x4000
   14000cc44:	add    DWORD PTR [rax],eax
   14000cc46:	add    BYTE PTR [rax],al
   14000cc48:	cld    
   14000cc49:	leave  
   14000cc4a:	add    BYTE PTR [rax+0x1],al
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc4f:	add    al,bh
   14000cc51:	leave  
   14000cc52:	add    BYTE PTR [rax+0x1],al
   14000cc55:	add    BYTE PTR [rax],al
   14000cc57:	add    ah,dh
   14000cc59:	leave  
   14000cc5a:	add    BYTE PTR [rax+0x1],al
   14000cc5d:	add    BYTE PTR [rax],al
   14000cc5f:	add    al,dh
   14000cc61:	leave  
   14000cc62:	add    BYTE PTR [rax+0x1],al
   14000cc65:	add    BYTE PTR [rax],al
   14000cc67:	add    ah,ch
   14000cc69:	leave  
   14000cc6a:	add    BYTE PTR [rax+0x1],al
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    al,ch
   14000cc71:	leave  
   14000cc72:	add    BYTE PTR [rax+0x1],al
   14000cc75:	add    BYTE PTR [rax],al
   14000cc77:	add    al,bl
   14000cc79:	leave  
   14000cc7a:	add    BYTE PTR [rax+0x1],al
   14000cc7d:	add    BYTE PTR [rax],al
   14000cc7f:	add    ah,dl
   14000cc81:	leave  
   14000cc82:	add    BYTE PTR [rax+0x1],al
   14000cc85:	add    BYTE PTR [rax],al
   14000cc87:	add    al,dl
   14000cc89:	leave  
   14000cc8a:	add    BYTE PTR [rax+0x1],al
   14000cc8d:	add    BYTE PTR [rax],al
   14000cc8f:	add    ah,cl
   14000cc91:	leave  
   14000cc92:	add    BYTE PTR [rax+0x1],al
   14000cc95:	add    BYTE PTR [rax],al
   14000cc97:	add    al,cl
   14000cc99:	leave  
   14000cc9a:	add    BYTE PTR [rax+0x1],al
   14000cc9d:	add    BYTE PTR [rax],al
   14000cc9f:	add    ah,al
   14000cca1:	leave  
   14000cca2:	add    BYTE PTR [rax+0x1],al
   14000cca5:	add    BYTE PTR [rax],al
   14000cca7:	add    al,al
   14000cca9:	leave  
   14000ccaa:	add    BYTE PTR [rax+0x1],al
   14000ccad:	add    BYTE PTR [rax],al
   14000ccaf:	add    BYTE PTR [rcx+rcx*8+0x14000],bh
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	mov    eax,0x14000c9
   14000ccbd:	add    BYTE PTR [rax],al
   14000ccbf:	add    BYTE PTR [rcx+rcx*8+0x14000],dh
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	mov    al,0xc9
   14000ccca:	add    BYTE PTR [rax+0x1],al
   14000cccd:	add    BYTE PTR [rax],al
   14000cccf:	add    BYTE PTR [rcx+rcx*8+0x14000],ch
   14000ccd6:	add    BYTE PTR [rax],al
   14000ccd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ccd9:	leave  
   14000ccda:	add    BYTE PTR [rax+0x1],al
   14000ccdd:	add    BYTE PTR [rax],al
   14000ccdf:	add    BYTE PTR [rax+0x14000c9],ah
   14000cce5:	add    BYTE PTR [rax],al
   14000cce7:	add    BYTE PTR [rax+0x14000c8],al
	...
   14000ccf5:	add    BYTE PTR [rax],al
   14000ccf7:	add    BYTE PTR [rcx+rcx*8+0x14000],bl
   14000ccfe:	add    BYTE PTR [rax],al
   14000cd00:	cwde   
   14000cd01:	leave  
   14000cd02:	add    BYTE PTR [rax+0x1],al
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	add    BYTE PTR [rax+0x14000c9],cl
   14000cd0d:	add    BYTE PTR [rax],al
   14000cd0f:	add    BYTE PTR [rax-0x37],bh
   14000cd12:	add    BYTE PTR [rax+0x1],al
   14000cd15:	add    BYTE PTR [rax],al
   14000cd17:	add    BYTE PTR [rcx+rcx*8+0x0],ch
   14000cd1b:	rex add DWORD PTR [rax],eax
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	(bad)  
   14000cd21:	leave  
   14000cd22:	add    BYTE PTR [rax+0x1],al
   14000cd25:	add    BYTE PTR [rax],al
   14000cd27:	add    BYTE PTR [rax-0x37],bl
   14000cd2a:	add    BYTE PTR [rax+0x1],al
   14000cd2d:	add    BYTE PTR [rax],al
   14000cd2f:	add    BYTE PTR [rax-0x37],dl
   14000cd32:	add    BYTE PTR [rax+0x1],al
   14000cd35:	add    BYTE PTR [rax],al
   14000cd37:	add    BYTE PTR [rax-0x37],cl
   14000cd3a:	add    BYTE PTR [rax+0x1],al
   14000cd3d:	add    BYTE PTR [rax],al
   14000cd3f:	add    BYTE PTR [rcx+rcx*8+0x0],al
   14000cd43:	rex add DWORD PTR [rax],eax
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	rex leave 
   14000cd4a:	add    BYTE PTR [rax+0x1],al
   14000cd4d:	add    BYTE PTR [rax],al
   14000cd4f:	add    BYTE PTR [rax],bh
   14000cd51:	leave  
   14000cd52:	add    BYTE PTR [rax+0x1],al
   14000cd55:	add    BYTE PTR [rax],al
   14000cd57:	add    BYTE PTR [rcx+rcx*8],dh
   14000cd5a:	add    BYTE PTR [rax+0x1],al
   14000cd5d:	add    BYTE PTR [rax],al
   14000cd5f:	add    BYTE PTR [rcx+rcx*8],ch
   14000cd62:	add    BYTE PTR [rax+0x1],al
   14000cd65:	add    BYTE PTR [rax],al
   14000cd67:	add    BYTE PTR [rcx+rcx*8],ah
   14000cd6a:	add    BYTE PTR [rax+0x1],al
   14000cd6d:	add    BYTE PTR [rax],al
   14000cd6f:	add    BYTE PTR [rcx+rcx*8],bl
   14000cd72:	add    BYTE PTR [rax+0x1],al
   14000cd75:	add    BYTE PTR [rax],al
   14000cd77:	add    BYTE PTR [rax],bl
   14000cd79:	leave  
   14000cd7a:	add    BYTE PTR [rax+0x1],al
   14000cd7d:	add    BYTE PTR [rax],al
   14000cd7f:	add    BYTE PTR [rcx+rcx*8],dl
   14000cd82:	add    BYTE PTR [rax+0x1],al
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rcx+rcx*8],cl
   14000cd8a:	add    BYTE PTR [rax+0x1],al
   14000cd8d:	add    BYTE PTR [rax],al
   14000cd8f:	add    BYTE PTR [rcx+rcx*8],al
   14000cd92:	add    BYTE PTR [rax+0x1],al
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    ah,bh
   14000cd99:	enter  0x4000,0x1
   14000cd9d:	add    BYTE PTR [rax],al
   14000cd9f:	add    ah,dh
   14000cda1:	enter  0x4000,0x1
   14000cda5:	add    BYTE PTR [rax],al
   14000cda7:	add    al,ch
   14000cda9:	enter  0x4000,0x1
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    al,bl
   14000cdb1:	enter  0x4000,0x1
   14000cdb5:	add    BYTE PTR [rax],al
   14000cdb7:	add    BYTE PTR [rax+0x14000c8],bh
   14000cdbd:	add    BYTE PTR [rax],al
   14000cdbf:	add    BYTE PTR [rax+0x14000c8],dh
	...
   14000cdcd:	add    BYTE PTR [rax],al
   14000cdcf:	add    BYTE PTR [rax+rcx*8+0x14000],ah
   14000cdd6:	add    BYTE PTR [rax],al
   14000cdd8:	pushf  
   14000cdd9:	enter  0x4000,0x1
   14000cddd:	add    BYTE PTR [rax],al
   14000cddf:	add    BYTE PTR [rax+rcx*8+0x14000],dl
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	nop
   14000cde9:	enter  0x4000,0x1
   14000cded:	add    BYTE PTR [rax],al
   14000cdef:	add    BYTE PTR [rax+rcx*8+0x14000],cl
   14000cdf6:	add    BYTE PTR [rax],al
   14000cdf8:	mov    al,cl
   14000cdfa:	add    BYTE PTR [rax+0x1],al
   14000cdfd:	add    BYTE PTR [rax],al
   14000cdff:	add    BYTE PTR [rax+rcx*8+0x14000],al
	...
   14000ce4e:	add    BYTE PTR [rax],al
   14000ce50:	push   0x0
   14000ce52:	push   0x0
   14000ce54:	push   0x0
   14000ce56:	push   0x0
   14000ce58:	push   0x0
   14000ce5a:	push   0x0
   14000ce5c:	imul   eax,DWORD PTR [rax],0x71
   14000ce5f:	add    BYTE PTR [rcx+0x0],dh
   14000ce62:	je     0x14000ce64
   14000ce64:	je     0x14000ce66
   14000ce66:	je     0x14000ce68
   14000ce68:	je     0x14000ce6a
   14000ce6a:	ja     0x14000ce6c
   14000ce6c:	jns    0x14000ce6e
   14000ce6e:	jne    0x14000ce70
   14000ce70:	jne    0x14000ce72
   14000ce72:	jbe    0x14000ce74
   14000ce74:	jbe    0x14000ce76
   14000ce76:	jbe    0x14000ce78
   14000ce78:	jbe    0x14000ce7a
   14000ce7a:	jbe    0x14000ce7c
   14000ce7c:	jbe    0x14000ce7e
   14000ce7e:	jbe    0x14000ce80
   14000ce80:	jbe    0x14000ce82
   14000ce82:	jp     0x14000ce84
   14000ce84:	jnp    0x14000ce86
   14000ce86:	jae    0x14000ce88
   14000ce88:	jb     0x14000ce8a
   14000ce8a:	jle    0x14000ce8c
   14000ce8c:	jle    0x14000ce8e
   14000ce8e:	jg     0x14000ce90
   14000ce90:	jg     0x14000ce92
   14000ce92:	add    BYTE PTR [rax],0x80
   14000ce95:	add    BYTE PTR [rbp+0x0],bh
   14000ce98:	outs   dx,DWORD PTR ds:[rsi]
   14000ce99:	add    BYTE PTR [rdi+0x0],ch
   14000ce9c:	outs   dx,DWORD PTR ds:[rsi]
   14000ce9d:	add    BYTE PTR [rdi+0x0],ch
   14000cea0:	(bad)  
   14000cea1:	add    BYTE PTR [rdx-0x7dff7e00],al
   14000cea7:	add    BYTE PTR [rdx-0x7dff7e00],al
   14000cead:	add    BYTE PTR [rdi+0x0],ch
   14000ceb0:	mov    al,BYTE PTR [rax]
   14000ceb2:	mov    al,BYTE PTR [rax]
   14000ceb4:	mov    al,BYTE PTR [rax]
   14000ceb6:	mov    eax,DWORD PTR [rax]
   14000ceb8:	mov    eax,DWORD PTR [rax]
   14000ceba:	mov    WORD PTR [rax],es
   14000cebc:	mov    WORD PTR [rax],es
   14000cebe:	outs   dx,DWORD PTR ds:[rsi]
   14000cebf:	add    BYTE PTR [rdi+0x0],ch
   14000cec2:	outs   dx,DWORD PTR ds:[rsi]
   14000cec3:	add    BYTE PTR [rdi+0x0],ch
   14000cec6:	outs   dx,DWORD PTR ds:[rsi]
   14000cec7:	add    BYTE PTR [rdi+0x0],ch
   14000ceca:	outs   dx,DWORD PTR ds:[rsi]
   14000cecb:	add    BYTE PTR [rdi+0x0],ch
   14000cece:	outs   dx,DWORD PTR ds:[rsi]
   14000cecf:	add    BYTE PTR [rdi+0x0],ch
   14000ced2:	outs   dx,DWORD PTR ds:[rsi]
   14000ced3:	add    BYTE PTR [rdi+0x0],ch
   14000ced6:	outs   dx,DWORD PTR ds:[rsi]
   14000ced7:	add    BYTE PTR [rdi+0x0],ch
   14000ceda:	outs   dx,DWORD PTR ds:[rsi]
   14000cedb:	add    BYTE PTR [rdi+0x0],ch
   14000cede:	outs   dx,DWORD PTR ds:[rsi]
   14000cedf:	add    BYTE PTR [rdi+0x0],ch
   14000cee2:	jl     0x14000cee4
   14000cee4:	jl     0x14000cee6
   14000cee6:	jl     0x14000cee8
   14000cee8:	jl     0x14000ceea
   14000ceea:	jl     0x14000ceec
   14000ceec:	jl     0x14000ceee
   14000ceee:	jl     0x14000cef0
   14000cef0:	pop    QWORD PTR [rax]
   14000cef2:	pop    QWORD PTR [rax]
   14000cef4:	pop    QWORD PTR [rax]
   14000cef6:	pop    QWORD PTR [rax]
   14000cef8:	pop    QWORD PTR [rax]
   14000cefa:	pop    QWORD PTR [rax]
   14000cefc:	pop    QWORD PTR [rax]
   14000cefe:	pop    QWORD PTR [rax]
   14000cf00:	pop    QWORD PTR [rax]
   14000cf02:	pop    QWORD PTR [rax]
   14000cf04:	pop    QWORD PTR [rax]
   14000cf06:	pop    QWORD PTR [rax]
   14000cf08:	pop    QWORD PTR [rax]
   14000cf0a:	pop    QWORD PTR [rax]
   14000cf0c:	pop    QWORD PTR [rax]
   14000cf0e:	pop    QWORD PTR [rax]
   14000cf10:	pop    QWORD PTR [rax]
   14000cf12:	pop    QWORD PTR [rax]
   14000cf14:	add    DWORD PTR [rax],0x910091
   14000cf1a:	xchg   ecx,eax
   14000cf1b:	add    BYTE PTR [rcx-0x6fff7000],dl
   14000cf21:	add    BYTE PTR [rbp-0x6aff6b00],dl
   14000cf27:	add    BYTE PTR [rbx-0x69ff6d00],dl
   14000cf2d:	add    BYTE PTR [rsi-0x69ff6a00],dl
   14000cf33:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf39:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf3f:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf45:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf4b:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf51:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf57:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf5d:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf63:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf69:	add    BYTE PTR [rcx-0x66ff6700],bl
   14000cf6f:	add    BYTE PTR [rcx-0x65ff6600],bl
   14000cf75:	add    BYTE PTR [rax+0x0],bh
   14000cf78:	js     0x14000cf7a
   14000cf7a:	js     0x14000cf7c
   14000cf7c:	js     0x14000cf7e
   14000cf7e:	js     0x14000cf80
   14000cf80:	popf   
   14000cf81:	add    BYTE PTR [rbp-0x61ff6200],bl
   14000cf87:	add    BYTE PTR [rsi-0x63ff6200],bl
   14000cf8d:	add    BYTE PTR [rax+rax*1+0x9f009f],bl
   14000cf94:	movabs al,ds:0xa100a100a100a000
   14000cf9d:	add    BYTE PTR [rdx-0x5dff5e00],ah
   14000cfa3:	add    BYTE PTR [rdx-0x5dff5e00],ah
   14000cfa9:	add    BYTE PTR [rdx-0x5dff5e00],ah
   14000cfaf:	add    BYTE PTR [rdx-0x5cff5d00],ah
   14000cfb5:	add    BYTE PTR [rbx-0x5bff5d00],ah
   14000cfbb:	add    BYTE PTR [rax+rax*1+0xa500a4],ah
   14000cfc2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cfc3:	add    BYTE PTR [rbp-0x59ff5b00],ah
   14000cfc9:	add    BYTE PTR [rsi-0x59ff5a00],ah
   14000cfcf:	add    BYTE PTR [rsi-0x59ff5a00],ah
   14000cfd5:	add    BYTE PTR [rdi-0x58ff5900],ah
   14000cfdb:	add    BYTE PTR [rdi-0x58ff5900],ah
   14000cfe1:	add    BYTE PTR [rax-0x57ff5800],ch
   14000cfe7:	add    BYTE PTR [rax-0x56ff5800],ch
   14000cfed:	add    BYTE PTR [rcx-0x56ff5700],ch
   14000cff3:	add    BYTE PTR [rcx-0x55ff5600],ch
   14000cff9:	add    BYTE PTR [rbx-0x53ff5500],ch
   14000cfff:	add    BYTE PTR [rax+rax*1+0xad00ad],ch
   14000d006:	scas   al,BYTE PTR es:[rdi]
   14000d007:	add    BYTE PTR [rsi-0x50ff5100],ch
   14000d00d:	add    BYTE PTR [rax-0x4eff5000],dh
   14000d013:	add    BYTE PTR [rcx-0x4dff4e00],dh
   14000d019:	add    BYTE PTR [rbx-0x4bff4d00],dh
   14000d01f:	add    BYTE PTR [rax+rax*1+0xb500b5],dh
   14000d026:	xchg   esp,eax
   14000d027:	add    BYTE PTR [rax+rax*1+0xb600b6],dl
   14000d02e:	mov    bh,0x0
   14000d030:	mov    bh,0x0
   14000d032:	mov    bh,0x0
   14000d034:	mov    bh,0x0
   14000d036:	mov    bh,0x0
   14000d038:	mov    bh,0x0
   14000d03a:	mov    bh,0x0
   14000d03c:	mov    bh,0x0
   14000d03e:	mov    bh,0x0
   14000d040:	mov    bh,0x0
   14000d042:	mov    bh,0x0
   14000d044:	mov    bh,0x0
   14000d046:	ins    DWORD PTR es:[rdi],dx
   14000d047:	add    BYTE PTR [rbp+0x0],ch
   14000d04a:	mov    eax,0xb900b800
   14000d04f:	add    BYTE PTR [rcx-0x45ff4600],bh
   14000d055:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d059:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d05d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d061:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d065:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d069:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d06d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000d071:	add    BYTE PTR [rax+rax*1-0x7d],ch
   14000d075:	add    bl,al
   14000d077:	add    bl,al
   14000d079:	add    dl,al
   14000d07b:	add    dl,al
   14000d07d:	add    BYTE PTR [rsi-0x3bff7200],cl
   14000d083:	add    ah,al
   14000d085:	add    ch,al
   14000d087:	add    ch,al
   14000d089:	add    bh,al
   14000d08b:	add    bh,al
   14000d08d:	add    dh,al
   14000d08f:	add    al,cl
   14000d091:	add    bl,cl
   14000d093:	add    cl,cl
   14000d095:	add    cl,cl
   14000d097:	add    ah,cl
   14000d099:	add    dl,cl
   14000d09b:	add    dl,cl
   14000d09d:	add    BYTE PTR [rax+rax*1+0x850085],al
   14000d0a4:	xchg   BYTE PTR [rax],al
   14000d0a6:	xchg   BYTE PTR [rax],al
   14000d0a8:	mov    ebx,0xbb00bb00
   14000d0ad:	add    BYTE PTR [rbx-0x44ff4500],bh
   14000d0b3:	add    BYTE PTR [rbx-0x43ff4500],bh
   14000d0b9:	add    BYTE PTR [rax+rax*1+0xbc00bc],bh
   14000d0c0:	mov    ebp,0xbd00bd00
   14000d0c5:	add    BYTE PTR [rbp-0x41ff4200],bh
   14000d0cb:	add    BYTE PTR [rdi-0x32ff7800],al
   14000d0d1:	add    ch,cl
   14000d0d3:	add    al,dl
   14000d0d5:	add    al,dl
   14000d0d7:	add    dh,cl
   14000d0d9:	add    dh,cl
   14000d0db:	add    cl,dl
   14000d0dd:	add    bh,cl
   14000d0df:	add    BYTE PTR [rdi-0x3fff4000],bh
   14000d0e5:	add    BYTE PTR [rcx-0x76ff7700],cl
   14000d0eb:	add    dl,dl
   14000d0ed:	add    bl,dl
   14000d0ef:	add    cl,al
   14000d0f1:	add    cl,al
   14000d0f3:	add    ah,dl
   14000d0f5:	add    BYTE PTR [rbp-0x64ff6500],cl
   14000d0fb:	add    ch,dl
   14000d0fd:	add    ch,dl
   14000d0ff:	add    BYTE PTR [rax-0x68ff6800],bl
   14000d105:	add    BYTE PTR [rdi+0x7000d600],dl
   14000d10b:	add    BYTE PTR [rax+0x0],dh
   14000d10e:	xlat   BYTE PTR ds:[rbx]
   14000d10f:	add    bh,dl
   14000d111:	add    BYTE PTR [rsi+0x0],ch
   14000d114:	outs   dx,BYTE PTR ds:[rsi]
   14000d115:	add    BYTE PTR [rdx-0x27ff6e00],dl
   14000d11b:	add    BYTE PTR [rax],al
   14000d11d:	add    BYTE PTR [rax],al
   14000d11f:	add    BYTE PTR [rdx],al
   14000d121:	add    BYTE PTR [rdx],al
   14000d123:	add    BYTE PTR [rdx],al
   14000d125:	add    BYTE PTR [rdx],al
   14000d127:	add    BYTE PTR [rdx],al
   14000d129:	add    BYTE PTR [rdx],al
   14000d12b:	add    BYTE PTR [rdx],al
   14000d12d:	add    BYTE PTR [rcx],al
   14000d12f:	add    BYTE PTR [rcx],al
   14000d131:	add    BYTE PTR [rcx],al
   14000d133:	add    BYTE PTR [rcx],al
   14000d135:	add    BYTE PTR [rdx],al
   14000d137:	add    BYTE PTR [rdx],al
   14000d139:	add    BYTE PTR [rcx],al
   14000d13b:	add    BYTE PTR [rcx],al
   14000d13d:	add    BYTE PTR [rdx],al
   14000d13f:	add    BYTE PTR [rdx],al
   14000d141:	add    BYTE PTR [rdx],al
   14000d143:	add    BYTE PTR [rdx],al
   14000d145:	add    BYTE PTR [rbx],al
   14000d147:	add    BYTE PTR [rbx],al
   14000d149:	add    BYTE PTR [rip+0x4000500],al        # 0x14400d64f
   14000d14f:	add    BYTE PTR [rax+rax*1],al
   14000d152:	add    al,BYTE PTR [rax]
   14000d154:	add    al,BYTE PTR [rax]
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	add    DWORD PTR [rax],eax
   14000d15a:	add    DWORD PTR [rax],eax
   14000d15c:	add    al,BYTE PTR [rax]
   14000d15e:	add    DWORD PTR [rax],eax
   14000d160:	add    eax,DWORD PTR [rax]
   14000d162:	add    al,BYTE PTR [rax]
   14000d164:	add    eax,DWORD PTR [rax]
   14000d166:	add    al,BYTE PTR [rax]
   14000d168:	add    DWORD PTR [rax],eax
   14000d16a:	add    eax,0x4000400
   14000d16f:	add    BYTE PTR [rcx],al
   14000d171:	add    BYTE PTR [rcx],al
   14000d173:	add    BYTE PTR [rcx],al
   14000d175:	add    BYTE PTR [rcx],al
   14000d177:	add    BYTE PTR [rcx],al
   14000d179:	add    BYTE PTR [rcx],al
   14000d17b:	add    BYTE PTR [rcx],al
   14000d17d:	add    BYTE PTR [rbx],al
   14000d17f:	add    BYTE PTR [rcx],al
   14000d181:	add    BYTE PTR [rcx],al
   14000d183:	add    BYTE PTR [rcx],al
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	add    BYTE PTR [rcx],al
   14000d189:	add    BYTE PTR [rdx],al
   14000d18b:	add    BYTE PTR [rax+rax*1],al
   14000d18e:	(bad)  
   14000d18f:	add    BYTE PTR [rsi],al
   14000d191:	add    BYTE PTR [rbx],al
   14000d193:	add    BYTE PTR [rbx],al
   14000d195:	add    BYTE PTR [rdi],al
   14000d197:	add    BYTE PTR [rdi],al
   14000d199:	add    BYTE PTR [rax+rax*1],al
   14000d19c:	add    al,0x0
   14000d19e:	add    eax,0x5000500
   14000d1a3:	add    BYTE PTR [rsi],al
   14000d1a5:	add    BYTE PTR [rsi],al
   14000d1a7:	add    BYTE PTR [rdx],cl
   14000d1a9:	add    BYTE PTR [rsi],al
   14000d1ab:	add    BYTE PTR [rdi],al
   14000d1ad:	add    BYTE PTR [rcx],al
   14000d1af:	add    BYTE PTR [rcx],al
   14000d1b1:	add    BYTE PTR [rcx],al
   14000d1b3:	add    BYTE PTR [rcx],al
   14000d1b5:	add    BYTE PTR [rcx],al
   14000d1b7:	add    BYTE PTR [rcx],al
   14000d1b9:	add    BYTE PTR [rcx],al
   14000d1bb:	add    BYTE PTR [rcx],al
   14000d1bd:	add    BYTE PTR [rcx],al
   14000d1bf:	add    BYTE PTR [rcx],al
   14000d1c1:	add    BYTE PTR [rcx],al
   14000d1c3:	add    BYTE PTR [rcx],al
   14000d1c5:	add    BYTE PTR [rcx],al
   14000d1c7:	add    BYTE PTR [rcx],al
   14000d1c9:	add    BYTE PTR [rcx],al
   14000d1cb:	add    BYTE PTR [rcx],al
   14000d1cd:	add    BYTE PTR [rcx],al
   14000d1cf:	add    BYTE PTR [rcx],al
   14000d1d1:	add    BYTE PTR [rcx],al
   14000d1d3:	add    BYTE PTR [rdx],al
   14000d1d5:	add    BYTE PTR [rbx],al
   14000d1d7:	add    BYTE PTR [rbx],al
   14000d1d9:	add    BYTE PTR [rax+rax*1],al
   14000d1dc:	add    eax,0x4000300
   14000d1e1:	add    BYTE PTR [rbx],al
   14000d1e3:	add    BYTE PTR [rcx],al
   14000d1e5:	add    BYTE PTR [rcx],al
   14000d1e7:	add    BYTE PTR [rdx],al
   14000d1e9:	add    BYTE PTR [rbx],al
   14000d1eb:	add    BYTE PTR [rax+rax*1],al
   14000d1ee:	add    DWORD PTR [rax],eax
   14000d1f0:	add    al,BYTE PTR [rax]
   14000d1f2:	add    eax,DWORD PTR [rax]
   14000d1f4:	(bad)  
   14000d1f5:	add    BYTE PTR [rax],cl
   14000d1f7:	add    BYTE PTR [rcx],al
   14000d1f9:	add    BYTE PTR [rbx],al
   14000d1fb:	add    BYTE PTR [rcx],al
   14000d1fd:	add    BYTE PTR [rcx],al
   14000d1ff:	add    BYTE PTR [rcx],al
   14000d201:	add    BYTE PTR [rcx],al
   14000d203:	add    BYTE PTR [rcx],al
   14000d205:	add    BYTE PTR [rcx],al
   14000d207:	add    BYTE PTR [rcx],al
   14000d209:	add    BYTE PTR [rcx],al
   14000d20b:	add    BYTE PTR [rcx],al
   14000d20d:	add    BYTE PTR [rcx],al
   14000d20f:	add    BYTE PTR [rcx],al
   14000d211:	add    BYTE PTR [rcx],al
   14000d213:	add    BYTE PTR [rcx],al
   14000d215:	add    BYTE PTR [rcx],al
   14000d217:	add    BYTE PTR [rcx],al
   14000d219:	add    BYTE PTR [rcx],al
   14000d21b:	add    BYTE PTR [rcx],al
   14000d21d:	add    BYTE PTR [rcx],al
   14000d21f:	add    BYTE PTR [rcx],al
   14000d221:	add    BYTE PTR [rcx],al
   14000d223:	add    BYTE PTR [rcx],al
   14000d225:	add    BYTE PTR [rcx],al
   14000d227:	add    BYTE PTR [rcx],al
   14000d229:	add    BYTE PTR [rcx],al
   14000d22b:	add    BYTE PTR [rcx],al
   14000d22d:	add    BYTE PTR [rcx],al
   14000d22f:	add    BYTE PTR [rcx],al
   14000d231:	add    BYTE PTR [rcx],al
   14000d233:	add    BYTE PTR [rcx],al
   14000d235:	add    BYTE PTR [rcx],al
   14000d237:	add    BYTE PTR [rcx],al
   14000d239:	add    BYTE PTR [rcx],al
   14000d23b:	add    BYTE PTR [rcx],al
   14000d23d:	add    BYTE PTR [rcx],al
   14000d23f:	add    BYTE PTR [rcx],al
   14000d241:	add    BYTE PTR [rcx],al
   14000d243:	add    BYTE PTR [rcx],al
   14000d245:	add    BYTE PTR [rcx],al
   14000d247:	add    BYTE PTR [rcx],al
   14000d249:	add    BYTE PTR [rax+rax*1],al
   14000d24c:	add    eax,DWORD PTR [rax]
   14000d24e:	add    eax,0x2000100
   14000d253:	add    BYTE PTR [rax+rax*1],al
   14000d256:	add    al,0x0
   14000d258:	add    al,0x0
   14000d25a:	add    eax,DWORD PTR [rax]
   14000d25c:	add    BYTE PTR [rax],al
   14000d25e:	add    DWORD PTR [rax],eax
   14000d260:	add    DWORD PTR [rax],eax
   14000d262:	add    eax,DWORD PTR [rax]
   14000d264:	add    DWORD PTR [rax],eax
   14000d266:	add    DWORD PTR [rax],eax
   14000d268:	add    DWORD PTR [rax],eax
   14000d26a:	add    al,BYTE PTR [rax]
   14000d26c:	add    al,BYTE PTR [rax]
   14000d26e:	add    DWORD PTR [rax],eax
   14000d270:	add    al,BYTE PTR [rax]
   14000d272:	add    al,BYTE PTR [rax]
   14000d274:	add    al,BYTE PTR [rax]
   14000d276:	add    al,BYTE PTR [rax]
   14000d278:	add    al,BYTE PTR [rax]
   14000d27a:	add    al,BYTE PTR [rax]
   14000d27c:	add    al,BYTE PTR [rax]
   14000d27e:	add    al,BYTE PTR [rax]
   14000d280:	add    al,BYTE PTR [rax]
   14000d282:	add    DWORD PTR [rax],eax
   14000d284:	add    eax,DWORD PTR [rax]
   14000d286:	add    eax,DWORD PTR [rax]
   14000d288:	add    eax,DWORD PTR [rax]
   14000d28a:	add    DWORD PTR [rax],eax
   14000d28c:	add    eax,DWORD PTR [rax]
   14000d28e:	add    eax,DWORD PTR [rax]
   14000d290:	add    DWORD PTR [rax],eax
   14000d292:	add    eax,DWORD PTR [rax]
   14000d294:	add    eax,DWORD PTR [rax]
   14000d296:	add    eax,DWORD PTR [rax]
   14000d298:	add    DWORD PTR [rax],eax
   14000d29a:	add    eax,DWORD PTR [rax]
   14000d29c:	add    eax,DWORD PTR [rax]
   14000d29e:	add    eax,DWORD PTR [rax]
   14000d2a0:	add    eax,DWORD PTR [rax]
   14000d2a2:	add    eax,DWORD PTR [rax]
   14000d2a4:	add    eax,DWORD PTR [rax]
   14000d2a6:	add    DWORD PTR [rax],eax
   14000d2a8:	add    eax,DWORD PTR [rax]
   14000d2aa:	add    eax,DWORD PTR [rax]
   14000d2ac:	add    eax,DWORD PTR [rax]
   14000d2ae:	add    eax,DWORD PTR [rax]
   14000d2b0:	add    eax,DWORD PTR [rax]
   14000d2b2:	add    DWORD PTR [rax],eax
   14000d2b4:	add    eax,DWORD PTR [rax]
   14000d2b6:	add    eax,DWORD PTR [rax]
   14000d2b8:	add    eax,DWORD PTR [rax]
   14000d2ba:	add    eax,DWORD PTR [rax]
   14000d2bc:	add    DWORD PTR [rax],eax
   14000d2be:	add    eax,DWORD PTR [rax]
   14000d2c0:	add    eax,DWORD PTR [rax]
   14000d2c2:	add    eax,DWORD PTR [rax]
   14000d2c4:	add    eax,DWORD PTR [rax]
   14000d2c6:	add    DWORD PTR [rax],eax
   14000d2c8:	add    eax,DWORD PTR [rax]
   14000d2ca:	add    DWORD PTR [rax],eax
   14000d2cc:	add    eax,DWORD PTR [rax]
   14000d2ce:	add    DWORD PTR [rax],eax
   14000d2d0:	add    eax,DWORD PTR [rax]
   14000d2d2:	add    DWORD PTR [rax],eax
   14000d2d4:	add    eax,DWORD PTR [rax]
   14000d2d6:	add    DWORD PTR [rax],eax
   14000d2d8:	add    eax,DWORD PTR [rax]
   14000d2da:	add    DWORD PTR [rax],eax
   14000d2dc:	add    eax,DWORD PTR [rax]
   14000d2de:	add    DWORD PTR [rax],eax
   14000d2e0:	add    eax,DWORD PTR [rax]
   14000d2e2:	add    DWORD PTR [rax],eax
   14000d2e4:	add    eax,DWORD PTR [rax]
   14000d2e6:	add    DWORD PTR [rax],eax
   14000d2e8:	add    eax,DWORD PTR [rax]
   14000d2ea:	add    DWORD PTR [rax],eax
   14000d2ec:	add    eax,DWORD PTR [rax]
   14000d2ee:	add    DWORD PTR [rax],eax
   14000d2f0:	add    eax,0x5000100
   14000d2f5:	add    BYTE PTR [rcx],al
   14000d2f7:	add    BYTE PTR [rbx],al
   14000d2f9:	add    BYTE PTR [rcx],al
   14000d2fb:	add    BYTE PTR [rbx],al
   14000d2fd:	add    BYTE PTR [rcx],al
   14000d2ff:	add    BYTE PTR [rcx],al
   14000d301:	add    BYTE PTR [rcx],al
   14000d303:	add    BYTE PTR [rcx],al
   14000d305:	add    BYTE PTR [rcx],al
   14000d307:	add    BYTE PTR [rcx],al
   14000d309:	add    BYTE PTR [rcx],al
   14000d30b:	add    BYTE PTR [rcx],al
   14000d30d:	add    BYTE PTR [rcx],al
   14000d30f:	add    BYTE PTR [rcx],al
   14000d311:	add    BYTE PTR [rcx],al
   14000d313:	add    BYTE PTR [rcx],al
   14000d315:	add    BYTE PTR [rcx],al
   14000d317:	add    BYTE PTR [rbx],al
   14000d319:	add    BYTE PTR [rax],al
   14000d31b:	add    BYTE PTR [rcx],al
   14000d31d:	add    BYTE PTR [rcx],al
   14000d31f:	add    BYTE PTR [rbx],al
   14000d321:	add    BYTE PTR [rax],al
   14000d323:	add    BYTE PTR [rcx],al
   14000d325:	add    BYTE PTR [rcx],al
   14000d327:	add    BYTE PTR [rcx],al
   14000d329:	add    BYTE PTR [rcx],al
   14000d32b:	add    BYTE PTR [rcx],al
   14000d32d:	add    BYTE PTR [rcx],al
   14000d32f:	add    BYTE PTR [rcx],al
   14000d331:	add    BYTE PTR [rcx],al
   14000d333:	add    BYTE PTR [rcx],al
   14000d335:	add    BYTE PTR [rcx],al
   14000d337:	add    BYTE PTR [rcx],al
   14000d339:	add    BYTE PTR [rcx],al
   14000d33b:	add    BYTE PTR [rcx],al
   14000d33d:	add    BYTE PTR [rcx],al
   14000d33f:	add    BYTE PTR [rcx],al
   14000d341:	add    BYTE PTR [rcx],al
   14000d343:	add    BYTE PTR [rbx],al
   14000d345:	add    BYTE PTR [rcx],al
   14000d347:	add    BYTE PTR [rdx],al
   14000d349:	add    BYTE PTR [rax],al
   14000d34b:	add    BYTE PTR [rcx],al
   14000d34d:	add    BYTE PTR [rbx],al
   14000d34f:	add    BYTE PTR [rbx],al
   14000d351:	add    BYTE PTR [rcx],al
   14000d353:	add    BYTE PTR [rcx],al
   14000d355:	add    BYTE PTR [rcx],al
   14000d357:	add    BYTE PTR [rbx],al
   14000d359:	add    BYTE PTR [rcx],al
   14000d35b:	add    BYTE PTR [rbx],al
   14000d35d:	add    BYTE PTR [rdx],al
   14000d35f:	add    BYTE PTR [rdx],al
   14000d361:	add    BYTE PTR [rdx],al
   14000d363:	add    BYTE PTR [rax],al
   14000d365:	add    BYTE PTR [rcx],al
   14000d367:	add    BYTE PTR [rdx],al
   14000d369:	add    BYTE PTR [rax],al
   14000d36b:	add    BYTE PTR [rcx],al
   14000d36d:	add    BYTE PTR [rcx],al
   14000d36f:	add    BYTE PTR [rdx],al
   14000d371:	add    BYTE PTR [rdx],al
   14000d373:	add    BYTE PTR [rdi],al
   14000d375:	add    BYTE PTR [rip+0x7000700],al        # 0x14700da7b
   14000d37b:	add    BYTE PTR [rdi],al
   14000d37d:	add    BYTE PTR [rip+0xa000900],al        # 0x14a00dc83
   14000d383:	add    BYTE PTR [rdi],al
   14000d385:	add    BYTE PTR [rax],cl
   14000d387:	add    BYTE PTR [rdx],al
   14000d389:	add    BYTE PTR [rdx],al
   14000d38b:	add    BYTE PTR [rbx],al
   14000d38d:	add    BYTE PTR [rbx],al
   14000d38f:	add    BYTE PTR [rdx],al
   14000d391:	add    BYTE PTR [rdx],al
   14000d393:	add    BYTE PTR [rbx],al
   14000d395:	add    BYTE PTR [rbx],al
   14000d397:	add    BYTE PTR [rbx],al
   14000d399:	add    BYTE PTR [rbx],al
   14000d39b:	add    BYTE PTR [rip+0x3000500],al        # 0x14300d8a1
   14000d3a1:	add    BYTE PTR [rip+0x2000100],al        # 0x14200d4a7
   14000d3a7:	add    BYTE PTR [rax],al
   14000d3a9:	add    BYTE PTR [rcx],al
   14000d3ab:	add    BYTE PTR [rax+rax*1],al
   14000d3ae:	add    eax,DWORD PTR [rax]
   14000d3b0:	add    eax,DWORD PTR [rax]
   14000d3b2:	add    eax,DWORD PTR [rax]
   14000d3b4:	add    eax,DWORD PTR [rax]
   14000d3b6:	add    eax,DWORD PTR [rax]
   14000d3b8:	add    eax,DWORD PTR [rax]
   14000d3ba:	add    al,0x0
   14000d3bc:	add    eax,0x2000200
   14000d3c1:	add    BYTE PTR [rdx],al
   14000d3c3:	add    BYTE PTR [rcx],al
   14000d3c5:	add    BYTE PTR [rax],cl
   14000d3c7:	add    BYTE PTR [rax],cl
   14000d3c9:	add    BYTE PTR [rdi],al
   14000d3cb:	add    BYTE PTR [rcx],al
   14000d3cd:	add    BYTE PTR [rbx],al
   14000d3cf:	add    BYTE PTR [rax],al
   14000d3d1:	add    BYTE PTR [rcx],al
   14000d3d3:	add    BYTE PTR [rax],al
   14000d3d5:	add    BYTE PTR [rcx],al
   14000d3d7:	add    BYTE PTR [rcx],al
   14000d3d9:	add    BYTE PTR [rcx],al
   14000d3db:	add    BYTE PTR [rcx],al
   14000d3dd:	add    BYTE PTR [rcx],al
   14000d3df:	add    BYTE PTR [rdx],al
   14000d3e1:	add    BYTE PTR [rcx],al
   14000d3e3:	add    BYTE PTR [rcx],al
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    BYTE PTR [rcx],al
   14000d3e9:	add    BYTE PTR [rdx],al
	...
   14000d3f3:	add    BYTE PTR [rax+rax*1],bl
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	add    BYTE PTR [rax],al
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	sbb    al,0x0
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	mov    ecx,0xd800fc00
   14000d405:	add    al,ah
   14000d407:	add    ah,bl
   14000d409:	add    BYTE PTR [rax+rax*1+0xd400ec],ah
   14000d410:	add    eax,DWORD PTR [rax]
   14000d412:	xchg   ebp,eax
   14000d413:	add    BYTE PTR [rdx+0x0],dl
   14000d416:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d417:	add    ah,ah
   14000d419:	add    al,ch
   14000d41b:	add    BYTE PTR [rcx-0x5cff4a00],bl
   14000d421:	add    BYTE PTR [rax-0x35ff6c00],ch
   14000d427:	add    BYTE PTR [rbp+0x59000000],bh
   14000d42d:	add    BYTE PTR [rdx+0x0],bl
   14000d430:	push   rbp
   14000d431:	add    BYTE PTR [rax],al
   14000d433:	add    BYTE PTR [rdi+0x0],cl
   14000d436:	rex.WX add BYTE PTR [rcx+r8*1+0x0],spl
   14000d43b:	add    BYTE PTR [rax],al
   14000d43d:	add    BYTE PTR [rax],al
   14000d43f:	add    BYTE PTR [rax],al
   14000d441:	add    BYTE PTR [rdi+0x0],dl
   14000d444:	add    BYTE PTR [rax],al
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	push   rbx
   14000d449:	add    BYTE PTR [rsi+0x0],dl
   14000d44c:	rex.WRX add BYTE PTR [rax],r8b
   14000d44f:	add    BYTE PTR [rax],al
   14000d451:	add    BYTE PTR [rbx+0x0],cl
   14000d454:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000d458:	rex.WR add BYTE PTR [rax+0x0],r11b
   14000d45c:	push   rcx
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rax+rax*1+0x0],dl
   14000d463:	add    BYTE PTR [rax],al
   14000d465:	add    BYTE PTR [rdx+0x0],dh
   14000d46b:	add    BYTE PTR [rbp-0x58ff4800],ah
   14000d471:	add    BYTE PTR [rsi+0x0],ah
   14000d477:	add    BYTE PTR [rax],al
   14000d479:	add    BYTE PTR [rax+rax*1+0xb300b5],dh
   14000d480:	mov    bh,0x0
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	(bad)  
	...
   14000d48d:	add    bl,cl
	...
   14000d49b:	add    cl,al
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rax],al
   14000d4a1:	add    BYTE PTR [rax],al
   14000d4a3:	add    BYTE PTR [rbx-0x45ff4400],bh
   14000d4a9:	add    BYTE PTR [rdi-0x3dff3d00],bh
   14000d4af:	add    al,al
   14000d4b1:	add    BYTE PTR [rsi-0x33ff3300],bh
   14000d4b7:	add    dh,cl
   14000d4b9:	add    BYTE PTR [rax],al
   14000d4bb:	add    ch,bl
   14000d4bd:	add    BYTE PTR [rax],al
   14000d4bf:	add    cl,bl
   14000d4c1:	add    BYTE PTR [rax],al
   14000d4c3:	add    BYTE PTR [rax],al
   14000d4c5:	add    BYTE PTR [rdi-0x61ff6e00],bl
   14000d4cb:	add    BYTE PTR [rbx+0x74007300],dl
   14000d4d1:	add    BYTE PTR [rbp+0x0],dh
   14000d4d4:	mov    es,WORD PTR [rax]
   14000d4d6:	jbe    0x14000d4d8
   14000d4d8:	pop    QWORD PTR [rax]
   14000d4da:	ja     0x14000d4dc
   14000d4dc:	js     0x14000d4de
   14000d4de:	jns    0x14000d4e0
   14000d4e0:	jp     0x14000d4e2
   14000d4e2:	jnp    0x14000d4e4
   14000d4e4:	jl     0x14000d4e6
   14000d4e6:	jge    0x14000d4e8
   14000d4e8:	jle    0x14000d4ea
   14000d4ea:	jg     0x14000d4ec
   14000d4ec:	add    BYTE PTR [rax],0x81
   14000d4ef:	add    BYTE PTR [rdx-0x6fff7d00],al
   14000d4f5:	add    BYTE PTR [rax+rax*1+0x860085],al
   14000d4fc:	xchg   DWORD PTR [rax],eax
   14000d4fe:	mov    BYTE PTR [rax],al
   14000d500:	mov    DWORD PTR [rax],eax
   14000d502:	mov    al,BYTE PTR [rax]
   14000d504:	mov    eax,DWORD PTR [rax]
   14000d506:	mov    WORD PTR [rax],es
   14000d508:	lea    eax,[rax]
   14000d50a:	xchg   ecx,eax
   14000d50b:	add    BYTE PTR [rax],al
   14000d50d:	add    BYTE PTR [rax],al
   14000d50f:	add    BYTE PTR [rbp-0x5fff0300],bl
   14000d515:	add    BYTE PTR [rax],al
   14000d517:	add    BYTE PTR [rcx-0x5e000000],ah
   14000d51d:	add    BYTE PTR [rax+rax*1+0xf90000],bl
   14000d524:	repnz add al,dh
   14000d527:	add    bh,dh
   14000d529:	add    al,bh
   14000d52b:	add    dh,dh
   14000d52d:	add    ch,dh
   14000d52f:	add    bl,bh
   14000d531:	add    ah,dh
   14000d533:	add    bl,dh
   14000d535:	add    cl,dh
   14000d537:	add    dl,bh
   14000d539:	add    ch,ch
   14000d53b:	add    BYTE PTR [rax],al
   14000d53d:	add    cl,ah
   14000d53f:	add    BYTE PTR [rax],al
   14000d541:	add    BYTE PTR [rax],al
   14000d543:	add    ch,ah
   14000d545:	add    BYTE PTR [rax],al
   14000d547:	add    BYTE PTR [rax],al
   14000d549:	add    cl,ch
   14000d54b:	add    BYTE PTR [rax],al
   14000d54d:	add    BYTE PTR [rax],al
   14000d54f:	add    BYTE PTR [rdi+0x9700],bl
   14000d555:	add    BYTE PTR [rsi-0x65000000],dl
   14000d55b:	add    BYTE PTR [rcx+0x59000000],ch
   14000d561:	add    DWORD PTR [rcx+0x1],ebx
   14000d564:	pop    rdx
   14000d565:	add    DWORD PTR [rax],eax
   14000d567:	add    BYTE PTR [rdi+0x1],dl
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	pop    rax
   14000d56d:	add    DWORD PTR [rax],eax
   14000d56f:	add    BYTE PTR [rbx+0x1],bl
   14000d572:	add    al,0x1
   14000d574:	or     eax,DWORD PTR [rcx]
   14000d576:	or     al,BYTE PTR [rcx]
   14000d578:	adc    al,BYTE PTR [rcx]
   14000d57a:	(bad)  
   14000d57b:	add    DWORD PTR [rax],eax
   14000d57d:	add    BYTE PTR [rdi],al
   14000d57f:	add    DWORD PTR [rax],eax
   14000d581:	add    BYTE PTR [rcx+rax*1+0x0],bl
   14000d585:	add    BYTE PTR [rbx+0x1],ah
   14000d588:	or     BYTE PTR [rcx],al
   14000d58a:	or     DWORD PTR [rcx],eax
   14000d58c:	push   rdx
   14000d58d:	add    BYTE PTR [rsi],cl
   14000d58f:	add    DWORD PTR [rcx+rax*1],ecx
   14000d592:	(bad)  
   14000d593:	add    DWORD PTR [rbp+0x1],ebx
   14000d596:	(bad)
   14000d59b:	add    BYTE PTR [rdx],bl
   14000d59d:	add    DWORD PTR [rax],eax
   14000d59f:	add    BYTE PTR [rax],al
   14000d5a1:	add    BYTE PTR [rax],al
   14000d5a3:	add    BYTE PTR [rax],al
   14000d5a5:	add    BYTE PTR [rbx+0x1],dl
   14000d5a8:	add    BYTE PTR [rax],al
   14000d5aa:	fs add esi,edi
   14000d5ad:	add    BYTE PTR [rax],ch
   14000d5af:	add    DWORD PTR [rax],eax
   14000d5b1:	add    BYTE PTR [rax],al
   14000d5b3:	add    BYTE PTR [rax],al
   14000d5b5:	add    BYTE PTR [rbx],bl
   14000d5b7:	add    DWORD PTR [rax],eax
   14000d5b9:	add    BYTE PTR [rax],al
   14000d5bb:	add    BYTE PTR [rax],dl
   14000d5bd:	add    DWORD PTR [rcx],edx
   14000d5bf:	add    DWORD PTR [rax],eax
   14000d5c1:	add    BYTE PTR [rip+0x29010d01],al        # 0x16901e2c8
   14000d5c7:	add    DWORD PTR [rdx],ebp
   14000d5c9:	add    DWORD PTR [rax],eax
   14000d5cb:	add    BYTE PTR [rcx+0x1],bl
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	add    BYTE PTR [rax],al
   14000d5d2:	pop    rbx
   14000d5d3:	add    DWORD PTR [rax],eax
   14000d5d5:	add    BYTE PTR [rcx+rax*1+0x55],dl
   14000d5d9:	add    DWORD PTR [rax],eax
   14000d5db:	add    BYTE PTR [rcx+0x1],cl
   14000d5de:	(bad)  
   14000d5df:	add    DWORD PTR [rax],eax
   14000d5e1:	add    BYTE PTR [rcx],bh
   14000d5e3:	add    DWORD PTR [rdx],edi
   14000d5e5:	add    DWORD PTR [rbx],edi
   14000d5e7:	add    DWORD PTR [rcx+rax*1],edi
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	xor    eax,0x37013601
   14000d5f1:	add    DWORD PTR [rax],edi
   14000d5f3:	add    DWORD PTR [rcx+0x1],edx
   14000d5f6:	push   rdx
   14000d5f7:	add    DWORD PTR [rax],eax
	...
   14000d601:	add    BYTE PTR [rip+0x2f012e01],ch        # 0x16f020408
   14000d607:	add    DWORD PTR [rdx],eax
   14000d609:	add    DWORD PTR [rax],eax
   14000d60b:	add    edx,ebx
   14000d60d:	add    dl,ah
   14000d60f:	add    dh,bl
   14000d611:	add    dh,ch
   14000d613:	add    dh,dl
   14000d615:	add    BYTE PTR [rbx],al
   14000d617:	add    DWORD PTR [rax],eax
   14000d619:	add    BYTE PTR [rbp-0x15ff1a00],ah
   14000d61f:	add    bh,cl
   14000d621:	add    ah,al
   14000d623:	add    BYTE PTR [rax],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    bh,dl
	...
   14000d631:	add    al,dl
	...
   14000d63b:	add    BYTE PTR [rax],al
   14000d63d:	add    al,cl
   14000d63f:	add    dh,al
   14000d641:	add    cl,cl
   14000d643:	add    bh,al
   14000d645:	add    ch,al
   14000d647:	add    dl,dl
   14000d649:	add    cl,dl
   14000d64b:	add    bl,dl
   14000d64d:	add    BYTE PTR [rax],al
   14000d64f:	add    bh,bl
   14000d651:	add    BYTE PTR [rax],al
   14000d653:	add    bl,bl
   14000d655:	add    BYTE PTR [rax],al
   14000d657:	add    BYTE PTR [rcx],al
   14000d659:	add    DWORD PTR [rbp-0x11000000],esp
   14000d65f:	add    dh,bh
   14000d661:	add    bh,bh
   14000d663:	add    BYTE PTR [rax],al
   14000d665:	add    dh,bh
   14000d667:	add    BYTE PTR [rax],al
   14000d669:	add    BYTE PTR [rax],al
   14000d66b:	add    BYTE PTR [rcx],dh
   14000d66d:	add    DWORD PTR [rax],eax
   14000d66f:	add    BYTE PTR [rax],al
   14000d671:	add    BYTE PTR [rax],al
   14000d673:	add    BYTE PTR [rbx],dh
   14000d675:	add    DWORD PTR [rax],eax
   14000d677:	add    bl,ah
   14000d679:	add    BYTE PTR [rax],al
   14000d67b:	add    BYTE PTR [rax],al
   14000d67d:	add    bh,ah
   14000d67f:	add    BYTE PTR [rax],al
   14000d681:	add    BYTE PTR [rax],al
   14000d683:	add    bl,ch
   14000d685:	add    BYTE PTR [rsi],ah
   14000d687:	add    DWORD PTR [rax],eax
   14000d689:	add    BYTE PTR [rsi],bl
   14000d68b:	add    DWORD PTR [rdi],esp
   14000d68d:	add    DWORD PTR [rcx],esp
   14000d68f:	add    DWORD PTR [rax],eax
   14000d691:	add    BYTE PTR [rip+0xfffffffffe000001],ah        # 0x13e00d698
   14000d697:	add    BYTE PTR [rdi],bl
   14000d699:	add    DWORD PTR [rax],eax
   14000d69b:	add    dh,bh
   14000d69d:	add    BYTE PTR [rax],al
   14000d69f:	add    BYTE PTR [rax],al
   14000d6a1:	add    BYTE PTR [rdx],dh
   14000d6a3:	add    DWORD PTR [rax],eax
   14000d6a5:	add    BYTE PTR [rax],al
   14000d6a7:	add    BYTE PTR [rax],al
   14000d6a9:	add    BYTE PTR [rcx+rax*1],dh
   14000d6ac:	add    BYTE PTR [rax],al
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	add    BYTE PTR [rax],al
   14000d6b2:	sub    al,0x1
   14000d6b4:	add    BYTE PTR [rax],al
   14000d6b6:	sub    eax,DWORD PTR [rcx]
   14000d6b8:	push   rdx
   14000d6b9:	add    BYTE PTR [rbp+0x0],ch
   14000d6bc:	add    DWORD PTR gs:[rax],eax
   14000d6bf:	add    BYTE PTR [rax],al
   14000d6c1:	add    BYTE PTR [rdx+0x0],dh
   14000d6c4:	adc    al,0x1
   14000d6c6:	(bad)  
   14000d6c7:	add    DWORD PTR [rax],eax
   14000d6c9:	add    BYTE PTR [rbx+0x0],dh
   14000d6cc:	sbb    al,BYTE PTR [rcx]
   14000d6ce:	jbe    0x14000d6d0
   14000d6d0:	pop    QWORD PTR [rax]
   14000d6d2:	js     0x14000d6d4
   14000d6d4:	jns    0x14000d6d6
   14000d6d6:	push   rbp
   14000d6d7:	add    BYTE PTR [rbp+0x0],bh
   14000d6da:	jle    0x14000d6dc
   14000d6dc:	rex.WRXB add BYTE PTR [r15+0x0],r15b
   14000d6e0:	(bad)  
   14000d6e1:	add    BYTE PTR [rbx+0x0],dl
   14000d6e4:	push   rsi
   14000d6e5:	add    dh,bh
   14000d6e7:	add    BYTE PTR [rax+0x0],dl
   14000d6ea:	pop    rax
   14000d6eb:	add    BYTE PTR [rbp-0x78ffaf00],al
   14000d6f1:	add    BYTE PTR [rax+rax*1-0x77],dl
   14000d6f5:	add    BYTE PTR [rdx-0x73fee500],cl
   14000d6fb:	add    BYTE PTR [rbp+0x9100],cl
   14000d701:	add    BYTE PTR [rdi+0x0],ch
   14000d704:	outs   dx,BYTE PTR ds:[rsi]
   14000d705:	add    BYTE PTR [rcx+0x0],dh
   14000d708:	(bad)  
   14000d709:	add    BYTE PTR [rax+0x0],dh
   14000d70c:	(bad)  
   14000d70d:	add    BYTE PTR [rax],al
   14000d70f:	add    BYTE PTR [rdx+0x0],ch
   14000d712:	adc    eax,0x11301
   14000d717:	add    BYTE PTR [rax],al
   14000d719:	add    BYTE PTR [rax],al
   14000d71b:	add    BYTE PTR [rbx+0x1],bl
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	imul   eax,DWORD PTR [rax],0xffffff99
   14000d723:	add    BYTE PTR [rdx+0x9f00],bl
   14000d729:	add    BYTE PTR [rax+0x3d000000],bl
   14000d72f:	add    DWORD PTR [rsi],edi
   14000d731:	add    DWORD PTR [rax],eax
   14000d733:	add    BYTE PTR [rcx+0x1],bl
   14000d736:	add    BYTE PTR [rax],al
   14000d738:	add    BYTE PTR [rax],al
   14000d73a:	pop    rbx
   14000d73b:	add    DWORD PTR [rax],eax
   14000d73d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d741:	add    BYTE PTR [rax],al
   14000d743:	add    BYTE PTR [rax],al
   14000d745:	add    BYTE PTR [rax+0x1],al
   14000d748:	add    DWORD PTR [r11+0x1],r8d
   14000d74c:	rex.RX add DWORD PTR [rax],r8d
   14000d74f:	add    BYTE PTR [rax],al
   14000d751:	add    BYTE PTR [rcx+rax*1+0x45],al
   14000d755:	add    DWORD PTR [rax],eax
   14000d757:	add    BYTE PTR [rcx+0x1],al
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	rex.X add DWORD PTR [rsi],edx
   14000d75f:	add    DWORD PTR [rax+0x1],ecx
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	(bad)  
   14000d765:	add    DWORD PTR [rdi+0x1],eax
   14000d768:	add    BYTE PTR [rax],al
   14000d76a:	rex.WX add QWORD PTR [rbx+0x1],rcx
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	(bad)  
   14000d771:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   14000d775:	add    DWORD PTR [rax],eax
   14000d777:	add    BYTE PTR [rax],al
   14000d779:	add    BYTE PTR [rsi+0x1],cl
   14000d77c:	add    BYTE PTR [rax],al
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	add    BYTE PTR [rax],al
   14000d782:	rex.WRXB add QWORD PTR [r8+0x1],r10
   14000d786:	stos   DWORD PTR es:[rdi],eax
   14000d787:	add    BYTE PTR [rdx+0x0],ch
   14000d78d:	add    BYTE PTR [rax],al
   14000d78f:	add    BYTE PTR [rax],dh
   14000d791:	add    DWORD PTR [rax],eax
   14000d793:	add    BYTE PTR [rax],al
   14000d795:	add    BYTE PTR [rax],al
   14000d797:	add    BYTE PTR [rdi],bh
   14000d799:	add    DWORD PTR [rbx],esp
   14000d79b:	add    DWORD PTR [rcx+rax*1],ebx
   14000d79e:	add    BYTE PTR [rax],al
   14000d7a0:	and    al,0x1
   14000d7a2:	and    BYTE PTR [rcx],al
   14000d7a4:	add    BYTE PTR [rax],al
   14000d7a6:	and    al,BYTE PTR [rcx]
   14000d7a8:	sbb    BYTE PTR [rcx],al
   14000d7aa:	add    BYTE PTR [rax],al
   14000d7ac:	sbb    DWORD PTR [rcx],eax
   14000d7ae:	sbb    eax,0x1
   14000d7b3:	add    BYTE PTR [rbx+0x1],bl
   14000d7b6:	add    BYTE PTR [rax],al
   14000d7b8:	push   rsi
   14000d7b9:	add    DWORD PTR [rax+rax*1+0x0],esp
   14000d7bd:	add    BYTE PTR [rax],al
   14000d7bf:	add    BYTE PTR [rax+0x0],ch
   14000d7c2:	pop    rbx
   14000d7c3:	add    BYTE PTR [rax],al
   14000d7c5:	add    BYTE PTR [rbp+0x0],bl
   14000d7c8:	data16 add BYTE PTR [rax],al
   14000d7cb:	add    BYTE PTR [rsi+0x0],bl
   14000d7ce:	add    BYTE PTR [ecx+0x0],ch
   14000d7d2:	pop    rdi
   14000d7d3:	add    BYTE PTR [rbp+0x0],ah
   14000d7d6:	pop    rsp
   14000d7d7:	add    BYTE PTR [rax],al
   14000d7d9:	add    BYTE PTR [rdx+0x0],ah
   14000d7dc:	scas   eax,DWORD PTR es:[rdi]
   14000d7dd:	add    BYTE PTR [rbp-0x51ff4f00],ch
   14000d7e3:	add    BYTE PTR [rax+rax*1+0x15e00b0],ch
   14000d7ea:	(bad)  
   14000d7eb:	add    BYTE PTR [rdi+0x1],bl
   14000d7ee:	add    al,0x0
   14000d7f0:	add    al,BYTE PTR [rax]
   14000d7f2:	rex.W add BYTE PTR [rbx+0x0],spl
   14000d7f6:	add    BYTE PTR [rax],al
   14000d7f8:	add    BYTE PTR [rax],al
   14000d7fa:	rex.WXB add BYTE PTR [r13+0x0],cl
   14000d7fe:	rex.WR add BYTE PTR [rip+0x500],r12b        # 0x14000dd05
   14000d805:	add    BYTE PTR [rcx+0x0],cl
   14000d808:	add    BYTE PTR [rax],al
   14000d80a:	xor    eax,DWORD PTR [rax]
   14000d80c:	xor    al,BYTE PTR [rax]
   14000d80e:	xor    DWORD PTR [rax],eax
   14000d810:	add    BYTE PTR [rax],al
   14000d812:	add    BYTE PTR [rax],al
   14000d814:	add    BYTE PTR [rax],al
   14000d817:	add    BYTE PTR [rcx+0x0],al
   14000d81a:	sub    DWORD PTR [rax],eax
   14000d81c:	sub    al,BYTE PTR [rax]
   14000d81e:	sub    eax,DWORD PTR [rax]
   14000d820:	sub    al,0x0
   14000d822:	add    BYTE PTR cs:[rdi],ch
   14000d825:	add    BYTE PTR [rax+rax*1+0x2d],al
   14000d829:	add    BYTE PTR [rax],al
   14000d82b:	add    BYTE PTR [rbx],dh
	...
   14000d835:	add    BYTE PTR [rax],al
   14000d837:	add    BYTE PTR [rax+rax*1],bh
   14000d83a:	add    BYTE PTR [rax],al
   14000d83c:	cmp    eax,0x0
   14000d841:	add    BYTE PTR [rax],ah
   14000d843:	add    BYTE PTR [rax],al
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    BYTE PTR [rbp+0x0],al
   14000d84a:	and    DWORD PTR [rax],eax
   14000d84c:	add    BYTE PTR [rax],al
   14000d84e:	and    al,0x0
   14000d850:	and    al,BYTE PTR [rax]
   14000d852:	(bad)  
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rbx],ah
   14000d857:	add    BYTE PTR [rdi],bl
   14000d859:	add    BYTE PTR [rax],al
   14000d85b:	add    BYTE PTR [rsi],bh
   14000d85d:	add    BYTE PTR [rax],al
   14000d85f:	add    BYTE PTR [rdi],bh
   14000d861:	add    BYTE PTR [rcx+0x42000000],bl
   14000d867:	add    BYTE PTR [rsi+0x0],al
	...
   14000d872:	cdq    
   14000d873:	add    BYTE PTR [rsi],dl
   14000d875:	add    DWORD PTR [rax],eax
   14000d877:	add    BYTE PTR [rbx+0x0],al
   14000d87a:	push   rdx
   14000d87b:	add    BYTE PTR [rbx+0x0],dh
   14000d87e:	sbb    al,BYTE PTR [rcx]
   14000d880:	jbe    0x14000d882
   14000d882:	pop    QWORD PTR [rax]
   14000d884:	js     0x14000d886
   14000d886:	jns    0x14000d888
   14000d888:	push   rbp
   14000d889:	add    BYTE PTR [rbp+0x0],bh
   14000d88c:	jle    0x14000d88e
   14000d88e:	jg     0x14000d890
   14000d890:	(bad)  
   14000d891:	add    BYTE PTR [rbx+0x0],dl
   14000d894:	push   rsi
   14000d895:	add    dh,bh
   14000d897:	add    BYTE PTR [rax+0x0],bl
   14000d89a:	test   DWORD PTR [rax],eax
   14000d89c:	push   rcx
   14000d89d:	add    BYTE PTR [rdi-0x76ffac00],al
   14000d8a3:	add    BYTE PTR [rdx-0x73fee500],cl
   14000d8a9:	add    BYTE PTR [rbp+0x47009100],cl
   14000d8af:	add    BYTE PTR [rax],al
   14000d8b1:	add    BYTE PTR [rdx],bh
   14000d8b3:	add    BYTE PTR [rax+rax*1],dh
   14000d8b6:	cmp    eax,DWORD PTR [rax]
   14000d8b8:	xor    eax,0x0
   14000d8bd:	add    BYTE PTR [rax],al
   14000d8bf:	add    BYTE PTR [rax],al
   14000d8c1:	add    BYTE PTR [rdi],dh
   14000d8c3:	add    BYTE PTR [rax],al
   14000d8c5:	add    BYTE PTR [rax],bh
   14000d8c7:	add    BYTE PTR [rcx],bh
   14000d8c9:	add    BYTE PTR [rsi],dh
	...
   14000d8d3:	add    BYTE PTR [rax],dh
   14000d8d5:	add    BYTE PTR [rax],al
   14000d8d7:	add    BYTE PTR [rsi],ah
   14000d8d9:	add    BYTE PTR [rdi],ah
   14000d8db:	add    BYTE PTR [rax],al
   14000d8dd:	add    BYTE PTR [rax],ch
   14000d8df:	add    BYTE PTR [rax],cl
   14000d8e1:	add    BYTE PTR [rax],al
   14000d8e3:	add    BYTE PTR [rax],al
   14000d8e5:	add    BYTE PTR [rcx],cl
   14000d8e7:	add    BYTE PTR [rax],al
   14000d8e9:	add    BYTE PTR [rbx],cl
   14000d8eb:	add    BYTE PTR [rax],al
   14000d8ed:	add    BYTE PTR [rdx],cl
   14000d8ef:	add    BYTE PTR [rax],al
   14000d8f1:	add    BYTE PTR [rcx],al
   14000d8f3:	add    BYTE PTR [rbx],bl
   14000d8f5:	add    BYTE PTR [rdi],cl
   14000d8f7:	add    BYTE PTR [rsi],cl
   14000d8f9:	add    BYTE PTR [rdx],bl
   14000d8fb:	add    BYTE PTR [rip+0x1d000c00],cl        # 0x15d00e501
   14000d901:	add    BYTE PTR [rdi],al
   14000d903:	add    BYTE PTR [rax],al
   14000d905:	add    BYTE PTR [rdx],dl
   14000d907:	add    BYTE PTR [rax],al
   14000d909:	add    BYTE PTR [rbx],dl
   14000d90b:	add    BYTE PTR [rax],al
   14000d90d:	add    BYTE PTR [rax],bl
   14000d90f:	add    BYTE PTR [rcx],bl
   14000d911:	add    BYTE PTR [rax],al
   14000d913:	add    BYTE PTR [rax+rax*1],dl
   14000d916:	adc    eax,0x16000000
   14000d91b:	add    BYTE PTR [rdi],dl
   14000d91d:	add    BYTE PTR [rax],dl
   14000d91f:	add    BYTE PTR [rcx],dl
   14000d921:	add    BYTE PTR [rsi+0x1],ah
	...
   14000d930:	(bad)  
   14000d931:	add    BYTE PTR [rcx-0x39ff2cfe],al
   14000d937:	add    cl,dl
   14000d939:	add    BYTE PTR [rcx],cl
   14000d93b:	add    bh,ch
   14000d93d:	add    DWORD PTR [rdx+rax*1-0x77],edi
   14000d941:	add    bh,ah
   14000d943:	add    DWORD PTR [rbx+0x2],edi
   14000d946:	jg     0x14000d94a
   14000d948:	jge    0x14000d94c
   14000d94a:	test   DWORD PTR [rdx],eax
   14000d94c:	(bad)  
   14000d94d:	add    BYTE PTR [rdx+0x7e028002],al
   14000d953:	add    dl,BYTE PTR [rdx]
   14000d955:	add    BYTE PTR [rax],cl
   14000d957:	add    dh,BYTE PTR [rdx]
   14000d959:	add    ch,BYTE PTR [rax]
   14000d95b:	add    ch,BYTE PTR [rdi]
   14000d95d:	add    ch,BYTE PTR [rdx]
   14000d95f:	add    bl,BYTE PTR [rbx]
   14000d961:	add    al,cl
   14000d963:	add    ch,al
   14000d965:	add    bh,al
   14000d967:	add    ah,cl
   14000d969:	add    dl,ch
   14000d96b:	add    ah,dl
   14000d96d:	add    bh,ah
   14000d96f:	add    BYTE PTR [rdi],bl
   14000d971:	add    ah,BYTE PTR [rbp+0x2]
   14000d974:	fs add cl,bl
   14000d977:	add    cl,ch
   14000d979:	add    BYTE PTR [rdx],bl
   14000d97b:	add    bh,ah
   14000d97d:	add    esi,esp
   14000d97f:	add    DWORD PTR [rdi+0x1],esp
   14000d982:	add    WORD PTR [rcx],cx
   14000d985:	add    BYTE PTR [rbp+0x1],ah
   14000d988:	push   0xffffffffe000ca01
   14000d98d:	add    DWORD PTR [rcx+0x1],ebp
   14000d990:	ins    DWORD PTR es:[rdi],dx
   14000d991:	add    BYTE PTR [rcx],dl
   14000d993:	add    BYTE PTR [rbx+0xd001800],dl
   14000d999:	add    BYTE PTR [rdx+0x19001300],dl
   14000d99f:	add    BYTE PTR [rbx],bh
   14000d9a1:	add    BYTE PTR [rdi],dl
   14000d9a3:	add    BYTE PTR [rax],cl
   14000d9a5:	add    BYTE PTR [rax+rax*1],bl
   14000d9a8:	sbb    eax,DWORD PTR [rax]
   14000d9aa:	sbb    BYTE PTR [rcx],al
   14000d9ac:	lldt   WORD PTR [rdx]
   14000d9af:	add    DWORD PTR [rdx],ecx
   14000d9b1:	add    BYTE PTR [rsi],cl
   14000d9b3:	add    DWORD PTR [rax+rax*1],ecx
   14000d9b6:	adc    BYTE PTR [rcx],al
   14000d9b8:	or     eax,DWORD PTR [rax]
   14000d9ba:	lgdt   [rax+rax*1]
   14000d9be:	(bad)  
   14000d9bf:	add    DWORD PTR [rip+0xe011700],edx        # 0x14e01f0c5
   14000d9c5:	add    BYTE PTR [rcx],dl
   14000d9c7:	add    DWORD PTR [rip+0xffffffff9e013601],ecx        # 0xde020fce
   14000d9cd:	add    DWORD PTR [rbx],edx
   14000d9cf:	add    DWORD PTR [rcx+rax*1],edx
   14000d9d2:	int    0x0
   14000d9d4:	ret    
   14000d9d5:	add    dl,al
   14000d9d7:	add    al,dl
   14000d9d9:	add    bh,cl
   14000d9db:	add    dh,ah
   14000d9dd:	add    ah,al
   14000d9df:	add    BYTE PTR [rcx+rax*1+0x6b],ch
   14000d9e3:	add    eax,ebp
   14000d9e5:	add    bh,dl
   14000d9e7:	add    esi,edx
   14000d9e9:	add    DWORD PTR [rcx+rax*1+0x4d],ecx
   14000d9ed:	add    ecx,ebx
   14000d9ef:	add    DWORD PTR [rdi+0x1],ecx
   14000d9f2:	fadd   DWORD PTR [rcx]
   14000d9f4:	rex.WRX add QWORD PTR [rbx-0x4dfe50ff],r13
   14000d9fb:	add    DWORD PTR [rsi-0x3efe52ff],ebp
   14000da01:	add    edx,eax
   14000da03:	add    eax,ecx
   14000da05:	add    BYTE PTR [rdx-0x2dff3700],bh
   14000da0b:	add    BYTE PTR [rax],al
   14000da0d:	add    BYTE PTR [rax],al
   14000da0f:	add    BYTE PTR [rax],cl
   14000da11:	add    ecx,ecx
   14000da13:	add    al,0x94
   14000da15:	or     dl,BYTE PTR [rdx+rcx*1+0x3aa0a2e]
   14000da1c:	pop    rsi
   14000da1d:	add    BYTE PTR [rax+0x0],ch
   14000da20:	ja     0x14000da22
   14000da22:	xchg   esi,eax
   14000da23:	call   FWORD PTR [rax+rax*1+0x4f]
   14000da27:	add    BYTE PTR [rcx+0x0],dl
   14000da2a:	(bad)  
   14000da2b:	add    DWORD PTR [rsi+0x4e0107ff],edx
   14000da31:	add    BYTE PTR [rsi-0x71006901],dl
   14000da37:	add    bl,BYTE PTR [rcx+0x0]
   14000da3a:	jge    0x14000da3c
   14000da3c:	add    eax,DWORD PTR [rcx]
   14000da3e:	in     eax,0x0
   14000da40:	xchg   esi,eax
   14000da41:	call   QWORD PTR [rsi+0x42ff96ff]
   14000da47:	add    DWORD PTR [rdx],edi
   14000da49:	add    ecx,ecx
   14000da4b:	add    al,0x96
   14000da4d:	call   QWORD PTR [rsi-0x63006901]
   14000da53:	add    DWORD PTR [rsi-0x3006901],edx
   14000da59:	or     BYTE PTR [rcx-0x36fb36fa],dh
   14000da5f:	add    al,0xc9
   14000da61:	add    al,0x96
   14000da63:	dec    DWORD PTR [rdx+0x3]
   14000da66:	leave  
   14000da67:	add    al,0x96
   14000da69:	call   QWORD PTR [rsi-0x36006901]
   14000da6f:	add    al,0xc9
   14000da71:	add    al,0x96
   14000da73:	call   QWORD PTR [rsi-0x69006901]
   14000da79:	call   QWORD PTR [rsi-0x36006901]
   14000da7f:	add    al,0x96
   14000da81:	dec    ecx
   14000da83:	add    al,0xc9
   14000da85:	add    al,0x96
   14000da87:	dec    ecx
   14000da89:	add    al,0xc9
   14000da8b:	add    al,0x8d
   14000da8d:	add    al,bl
   14000da8f:	add    BYTE PTR [rsi-0x36006901],dl
   14000da95:	add    al,0xc9
   14000da97:	add    al,0xc9
   14000da99:	add    al,0x96
   14000da9b:	call   QWORD PTR [rsi-0x2e006901]
   14000daa1:	add    cl,cl
   14000daa3:	add    al,0x19
   14000daa5:	add    ecx,ecx
   14000daa7:	add    al,0xc9
   14000daa9:	add    al,0xc9
   14000daab:	add    al,0xc9
   14000daad:	add    al,0x6f
   14000daaf:	add    ecx,ecx
   14000dab1:	add    al,0xc9
   14000dab3:	add    al,0xc9
   14000dab5:	add    al,0xc9
   14000dab7:	add    al,0xc9
   14000dab9:	add    al,0xc9
   14000dabb:	add    al,0xdb
   14000dabd:	add    cl,cl
   14000dabf:	add    al,0xc9
   14000dac1:	add    al,0xc9
   14000dac3:	add    al,0x65
   14000dac5:	add    BYTE PTR [rsi+0x0],ah
   14000dac8:	jae    0x14000daca
   14000daca:	cmp    al,BYTE PTR [rcx]
   14000dacc:	cmp    al,BYTE PTR [rcx]
   14000dace:	cmp    al,BYTE PTR [rcx]
   14000dad0:	cmp    al,BYTE PTR [rcx]
   14000dad2:	cmp    al,BYTE PTR [rcx]
   14000dad4:	add    DWORD PTR gs:[rbx+0x1],ebx
   14000dad8:	push   rcx
   14000dad9:	add    ecx,ecx
   14000dadb:	add    al,0x47
   14000dadd:	add    cl,cl
   14000dadf:	add    al,0x46
   14000dae1:	add    BYTE PTR [rsi-0x36fb36f8],dl
   14000dae7:	add    al,0x96
   14000dae9:	call   QWORD PTR [rsi-0x69006901]
   14000daef:	call   QWORD PTR [rsi-0x69006901]
   14000daf5:	call   QWORD PTR [rsi-0x69006901]
   14000dafb:	call   QWORD PTR [rsi-0x69006901]
   14000db01:	call   QWORD PTR [rsi-0x69006901]
   14000db07:	call   QWORD PTR [rsi-0x69006901]
   14000db0d:	call   QWORD PTR [rsi-0x69006901]
   14000db13:	call   QWORD PTR [rsi-0x69006901]
   14000db19:	call   QWORD PTR [rsi-0x69006901]
   14000db1f:	call   QWORD PTR [rsi-0x69006901]
   14000db25:	call   QWORD PTR [rsi-0x69006901]
   14000db2b:	jmp    QWORD PTR [rdx+0x0]
   14000db2e:	leave  
   14000db2f:	add    al,0x96
   14000db31:	call   QWORD PTR [rsi+0x410042ff]
   14000db37:	add    BYTE PTR [rsi-0x69fb3601],dl
   14000db3d:	call   QWORD PTR [rsi-0x69fb3601]
   14000db43:	call   QWORD PTR [rsi-0x69006901]
   14000db49:	call   QWORD PTR [rsi-0x69006901]
   14000db4f:	call   QWORD PTR [rsi-0x69006901]
   14000db55:	call   QWORD PTR [rsi-0x69006901]
   14000db5b:	dec    ecx
   14000db5d:	add    al,0x2c
   14000db5f:	add    cl,cl
   14000db61:	add    al,0xc9
   14000db63:	add    al,0x40
   14000db65:	add    BYTE PTR [rcx],bh
   14000db67:	add    cl,cl
   14000db69:	add    al,0x96
   14000db6b:	call   QWORD PTR [rsi-0x36fb36f8]
   14000db71:	add    al,0x96
   14000db73:	dec    DWORD PTR [rcx+0x31ff9600]
   14000db79:	add    BYTE PTR [rsi+0x5dff96ff],dl
   14000db7f:	add    BYTE PTR [rax+0x1],bl
   14000db82:	fiadd  DWORD PTR [rcx]
   14000db84:	pop    rdi
   14000db85:	add    BYTE PTR [rsi+0x0],dl
   14000db88:	xchg   esi,eax
   14000db89:	inc    DWORD PTR [rsi+0x55ff9601]
   14000db8f:	add    BYTE PTR [rdx+rcx*1-0x69006a],dl
   14000db96:	xchg   esi,eax
   14000db97:	call   QWORD PTR [rsi-0x42006901]
   14000db9d:	add    BYTE PTR [rsi-0x69fe2501],dl
   14000dba3:	call   QWORD PTR [rax+0x0]
   14000dba6:	xchg   esi,eax
   14000dba7:	call   QWORD PTR [rsi+0x53ff96ff]
   14000dbad:	add    BYTE PTR [rsi-0x69006901],dl
   14000dbb3:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   14000dbba:	(bad)  
   14000dbbb:	add    DWORD PTR [rsi-0x7dfdd801],edx
   14000dbc1:	add    BYTE PTR [rsi],ch
   14000dbc3:	or     ch,BYTE PTR [rsi]
   14000dbc5:	add    BYTE PTR [rbx],dh
   14000dbc7:	add    BYTE PTR [rax+rax*1],dh
   14000dbca:	(bad)  
   14000dbcb:	or     ecx,ecx
   14000dbcd:	add    al,0x96
   14000dbcf:	(bad)  
   14000dbd0:	(bad)  
   14000dbd1:	add    cl,cl
   14000dbd3:	add    al,0x38
   14000dbd5:	add    BYTE PTR [rsi+0x3c003aff],dl
   14000dbdb:	add    BYTE PTR [rsi-0x25006901],dl
   14000dbe1:	add    DWORD PTR [rsi-0x69006901],edx
   14000dbe7:	call   QWORD PTR [rsi-0x25ffc201]
   14000dbed:	add    DWORD PTR [rsi],edi
   14000dbef:	add    BYTE PTR [rbx+0x0],al
   14000dbf2:	xchg   esp,eax
   14000dbf3:	or     al,BYTE PTR [rax+rax*1-0x6a]
   14000dbf7:	call   QWORD PTR [rsi-0x69f5d101]
   14000dbfd:	call   QWORD PTR [rsi-0x69ffa801]
   14000dc03:	call   QWORD PTR [rsi-0x69006901]
   14000dc09:	jmp    FWORD PTR [rsi+0x0]
   14000dc0c:	xchg   esi,eax
   14000dc0d:	call   QWORD PTR [rsi-0x69006901]
   14000dc13:	call   QWORD PTR [rsi-0x17006901]
   14000dc19:	inc    DWORD PTR [rbp+0x0]
   14000dc1c:	leave  
   14000dc1d:	add    al,0x7a
   14000dc1f:	add    BYTE PTR [rdi-0x69006a00],cl
   14000dc25:	call   QWORD PTR [rsi-0x69fa7401]
   14000dc2b:	dec    DWORD PTR [rdx+0x0]
   14000dc2e:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14000dc32:	xchg   esi,eax
   14000dc33:	dec    DWORD PTR [rip+0x48004901]        # 0x18801253a
   14000dc39:	add    BYTE PTR [rbx+0x2],ah
   14000dc3c:	rex.WXB add BYTE PTR [r10+0x0],sil
   14000dc40:	lea    eax,[rcx]
   14000dc42:	cmp    al,BYTE PTR [rcx]
   14000dc44:	fiadd  DWORD PTR [rcx]
   14000dc46:	leave  
   14000dc47:	add    al,0x1f
   14000dc49:	add    ecx,ecx
   14000dc4b:	add    al,0xc9
   14000dc4d:	add    al,0xc9
   14000dc4f:	add    al,0xc9
   14000dc51:	add    al,0x8d
   14000dc53:	add    ecx,ecx
   14000dc55:	add    al,0xc9
   14000dc57:	add    al,0xc9
   14000dc59:	add    al,0xc9
   14000dc5b:	add    al,0xc9
   14000dc5d:	add    al,0xda
   14000dc5f:	add    bh,dl
   14000dc61:	add    dh,al
   14000dc63:	add    al,al
   14000dc65:	add    BYTE PTR [rsi-0x72fe7300],dh
   14000dc6b:	add    DWORD PTR [rax],edi
   14000dc6d:	add    ecx,ecx
   14000dc6f:	add    al,0x37
   14000dc71:	add    cl,cl
   14000dc73:	add    al,0x3b
   14000dc75:	add    cl,cl
   14000dc77:	add    al,0x96
   14000dc79:	dec    DWORD PTR [rsi-0x69fb36fe]
   14000dc7f:	dec    ecx
   14000dc81:	add    al,0x36
   14000dc83:	add    BYTE PTR [rip+0x3204c900],dh        # 0x17205a589
   14000dc89:	add    BYTE PTR [rsi],ch
   14000dc8b:	or     dl,BYTE PTR [rsi+0x7c04c9ff]
   14000dc91:	add    BYTE PTR [rsi],ch
   14000dc93:	or     dl,BYTE PTR [rsi+0x5a04c9ff]
   14000dc99:	add    cl,cl
   14000dc9b:	add    al,0xc9
   14000dc9d:	add    al,0x69
   14000dc9f:	add    BYTE PTR [rax+0x0],bl
   14000dca2:	leave  
   14000dca3:	add    al,0x96
   14000dca5:	call   QWORD PTR [rax+rax*1-0x63]
   14000dca9:	add    ch,ah
   14000dcab:	call   QWORD PTR [rsi-0x36006901]
   14000dcb1:	add    al,0x96
   14000dcb3:	(bad)  
   14000dcb4:	fiadd  DWORD PTR [rcx]
   14000dcb6:	leave  
   14000dcb7:	add    al,0x96
   14000dcb9:	call   QWORD PTR [rdx+0x0]
   14000dcbc:	leave  
   14000dcbd:	add    al,0x5b
   14000dcbf:	add    BYTE PTR [rsi],ch
   14000dcc1:	or     dl,BYTE PTR [rsi+0x7804c9ff]
   14000dcc7:	add    BYTE PTR [rsi],ch
   14000dcc9:	or     dl,BYTE PTR [rsi+0x6704c9ff]
   14000dccf:	add    BYTE PTR [rsi],ch
   14000dcd1:	or     dh,bh
   14000dcd3:	jmp    FWORD PTR [rsi]
   14000dcd5:	or     dl,BYTE PTR [rsi-0x69000101]
   14000dcdb:	dec    DWORD PTR [rbx]
   14000dcdd:	add    dl,ah
   14000dcdf:	call   QWORD PTR [rcx]
   14000dce1:	add    BYTE PTR [rsi+0x2eff96ff],dl
   14000dce7:	or     bl,bl
   14000dce9:	call   rbp
   14000dceb:	add    DWORD PTR [rdi],ecx
   14000dced:	add    BYTE PTR [rdi],ah
   14000dcef:	add    cl,BYTE PTR [rdx+0x2e04c900]
   14000dcf5:	or     cl,BYTE PTR [rsi]
   14000dcf7:	add    al,dh
   14000dcf9:	push   QWORD PTR [rcx-0x13f69dff]
   14000dcff:	dec    DWORD PTR [rdx+0x3]
   14000dd02:	(bad)  
   14000dd03:	add    BYTE PTR [rip+0x62052c00],al        # 0x1a2060909
   14000dd09:	or     DWORD PTR [rax+rax*1],eax
   14000dd0c:	fdiv   st(7),st
   14000dd0e:	add    al,BYTE PTR [rax]
   14000dd10:	leave  
   14000dd11:	add    al,0x7
   14000dd13:	add    dh,ch
   14000dd15:	dec    ecx
   14000dd17:	add    al,0xa
   14000dd19:	add    cl,cl
   14000dd1b:	add    al,0xe6
   14000dd1d:	push   rbx
   14000dd1f:	dec    eax
   14000dd21:	or     DWORD PTR [rsi-0x69006901],edx
   14000dd27:	call   QWORD PTR [rsi-0x69006901]
   14000dd2d:	dec    ecx
   14000dd2f:	add    al,0x96
   14000dd31:	call   QWORD PTR [rsi-0x20006901]
   14000dd37:	inc    ebp
   14000dd39:	jmp    rdi
   14000dd3b:	call   QWORD PTR [rdx+rcx*1-0x69ffe9]
   14000dd42:	(bad)
   14000dd45:	dec    ecx
   14000dd47:	add    al,0xf4
   14000dd49:	call   QWORD PTR [rsi-0x69ff7301]
   14000dd4f:	call   QWORD PTR [rsi-0x25ffe901]
   14000dd55:	add    esp,edi
   14000dd57:	call   FWORD PTR [rdx]
   14000dd59:	add    BYTE PTR [rdx+rcx*1-0x69fff4],dl
   14000dd60:	leave  
   14000dd61:	add    al,0x71
   14000dd63:	add    BYTE PTR [rsi],bl
   14000dd65:	add    BYTE PTR [rsi-0x69ff7101],dl
   14000dd6b:	dec    DWORD PTR [rsi-0x36ff8700]
   14000dd71:	add    al,0x96
   14000dd73:	(bad)  
   14000dd74:	std    
   14000dd75:	jmp    FWORD PTR [rip+0xfffffffffbff9600]        # 0x13c00737b
   14000dd7b:	call   QWORD PTR [rsi-0x69f5d101]
   14000dd81:	jmp    FWORD PTR [rax+rax*1+0x2e]
   14000dd85:	or     dl,BYTE PTR [rsi-0x69ff3001]
   14000dd8b:	call   QWORD PTR [rsi+0x2e006aff]
   14000dd91:	or     ah,BYTE PTR [rip+0x19ff9600]        # 0x15a007397
   14000dd97:	add    BYTE PTR [rax+rax*1],ah
   14000dd9a:	xchg   esi,eax
   14000dd9b:	(bad)  
   14000dd9c:	fiadd  DWORD PTR [rcx]
   14000dd9e:	add    BYTE PTR es:[rax],ch
   14000dda1:	add    BYTE PTR [rsi-0x69006901],dl
   14000dda7:	call   QWORD PTR [rsi-0x77fb3601]
   14000ddad:	add    BYTE PTR [rsi],ch
   14000ddaf:	or     dl,BYTE PTR [rsi-0x59fb3601]
   14000ddb5:	add    BYTE PTR [rsi],ch
   14000ddb7:	or     dl,BYTE PTR [rsi-0x69fff201]
   14000ddbd:	dec    eax
   14000ddbf:	add    BYTE PTR [rsi-0x36006901],dl
   14000ddc5:	add    al,0x96
   14000ddc7:	call   QWORD PTR [rsi-0x69fe2501]
   14000ddcd:	call   QWORD PTR [rsi+0x10ffefff]
   14000ddd3:	add    BYTE PTR [rdx+rcx*1-0x69000b],dl
   14000ddda:	xchg   esi,eax
   14000dddb:	inc    DWORD PTR [rbx-0x69f8ed00]
   14000dde1:	call   QWORD PTR [rsi-0x69f9b001]
   14000dde7:	call   QWORD PTR [rsi-0x69fa1201]
   14000dded:	call   QWORD PTR [rsi-0x69006901]
   14000ddf3:	call   QWORD PTR [rsi+0x6dff96ff]
   14000ddf9:	add    BYTE PTR [rsi-0x69006901],dl
   14000ddff:	call   QWORD PTR [rsi-0x69006901]
   14000de05:	call   QWORD PTR [rsi-0x69006901]
   14000de0b:	call   QWORD PTR [rdx+rcx*1-0x69006a]
   14000de12:	xchg   esi,eax
   14000de13:	(bad)  
   14000de14:	jmp    0x12d00cb19
   14000de19:	add    bl,BYTE PTR [rax+0x29ffc400]
   14000de1f:	add    BYTE PTR [rsi-0x40006901],dl
   14000de25:	add    BYTE PTR [rsi-0x69ff4e01],dl
   14000de2b:	call   QWORD PTR [rsi-0x7c006901]
   14000de31:	add    ebx,ecx
   14000de33:	add    BYTE PTR [rsi-0x69f88d01],dl
   14000de39:	call   QWORD PTR [rsi-0x69006901]
   14000de3f:	call   QWORD PTR [rsi-0x69006901]
   14000de45:	call   QWORD PTR [rsi-0x4b006901]
   14000de4b:	add    BYTE PTR [rbx],ch
   14000de4d:	add    BYTE PTR [rax+0x1],bh
   14000de50:	scas   al,BYTE PTR es:[rdi]
   14000de51:	add    BYTE PTR [rax],dh
   14000de53:	add    dl,bl
   14000de55:	add    eax,esi
   14000de57:	add    BYTE PTR [rsi-0x69fff701],dl
   14000de5d:	(bad)  
   14000de5e:	in     al,dx
   14000de5f:	add    ch,BYTE PTR [rdi+0x0]
   14000de62:	xchg   esi,eax
   14000de63:	(bad)  
   14000de64:	(bad)  
   14000de65:	(bad)  
   14000de66:	in     al,dx
   14000de67:	add    dl,BYTE PTR [rsi+0x6aff96ff]
   14000de6d:	add    al,0x96
   14000de6f:	call   QWORD PTR [rsi+0xaff96ff]
   14000de75:	add    al,0x96
   14000de77:	call   QWORD PTR [rsi-0x69ff1b01]
   14000de7d:	push   QWORD PTR [rdx+0x7]
   14000de80:	xchg   esi,eax
   14000de81:	jmp    QWORD PTR [rdi]
   14000de83:	add    DWORD PTR [rip+0xffffffff96ff9600],edx        # 0xd7007489
   14000de89:	(bad)  
   14000de8a:	mov    eax,0x27017b00
   14000de8f:	add    cl,dl
   14000de91:	(bad)  
   14000de92:	and    BYTE PTR [rcx],al
   14000de94:	cli    
   14000de95:	or     dl,BYTE PTR [rdx]
   14000de97:	add    BYTE PTR [rsi-0x1dffdd01],dl
   14000de9d:	add    DWORD PTR [rcx],esp
   14000de9f:	add    BYTE PTR [rdi],ah
   14000dea1:	add    cl,BYTE PTR [rdx+0x2e04c900]
   14000dea7:	or     bl,BYTE PTR [rdi]
   14000dea9:	add    BYTE PTR [rcx],cl
   14000deab:	add    BYTE PTR [rdi-0x7cfffcff],cl
   14000deb1:	add    dl,BYTE PTR [rbx]
   14000deb3:	add    BYTE PTR [rip+0x1c052c00],bl        # 0x15c060ab9
   14000deb9:	add    BYTE PTR [rcx],al
   14000debb:	add    BYTE PTR [rbx],bl
   14000debd:	add    cl,cl
   14000debf:	add    al,0x18
   14000dec1:	add    BYTE PTR [rax],al
   14000dec3:	add    cl,cl
   14000dec5:	add    al,0x14
   14000dec7:	add    cl,cl
   14000dec9:	add    al,0xf9
   14000decb:	(bad)  
   14000decc:	clc    
   14000decd:	call   QWORD PTR [rsi-0x69ff3e01]
   14000ded3:	dec    ebp
   14000ded5:	add    BYTE PTR [rsi+0x2a002fff],dl
   14000dedb:	add    BYTE PTR [rcx+0x1],cl
   14000dede:	rol    BYTE PTR [rax],1
   14000dee0:	(bad)  
   14000dee1:	add    DWORD PTR [rsi-0x69ff7f01],edx
   14000dee7:	call   QWORD PTR [rsi+0x30ff96ff]
   14000deed:	or     ah,ch
   14000deef:	add    dh,BYTE PTR [rcx-0x69ffdcfa]
   14000def5:	inc    DWORD PTR [rax+rax*1-0x69006a]
   14000defc:	and    BYTE PTR [rax],al
   14000defe:	xchg   esi,eax
   14000deff:	call   QWORD PTR [rsi-0x13fd1301]
   14000df05:	add    bl,BYTE PTR [rsi+0x0]
   14000df08:	in     al,dx
   14000df09:	add    dl,BYTE PTR [rsi-0x69ff0501]
   14000df0f:	push   QWORD PTR [rax+rax*1-0x6a]
   14000df13:	call   QWORD PTR [rsi-0x16ff1601]
   14000df19:	add    BYTE PTR [rsi-0x69006901],dl
   14000df1f:	call   QWORD PTR [rsi-0x76006901]
   14000df25:	add    DWORD PTR [rsi-0x69ff2901],edx
   14000df2b:	jmp    QWORD PTR [rax+rax*1-0x6a]
   14000df2f:	call   QWORD PTR [rsi-0x69fe2501]
   14000df35:	call   QWORD PTR [rsi-0x69ff9f01]
   14000df3b:	call   QWORD PTR [rsi-0x69006901]
   14000df41:	call   QWORD PTR [rsi+0xfff91ff]
   14000df47:	add    BYTE PTR [rdi+0x0],al
   14000df4a:	push   rdi
   14000df4b:	add    BYTE PTR [rax+0x0],dl
   14000df4e:	xor    DWORD PTR [rcx],eax
   14000df50:	cli    
   14000df51:	call   QWORD PTR [rcx-0x6e006e01]
   14000df57:	call   QWORD PTR [rcx-0x6e006e01]
   14000df5d:	call   QWORD PTR [rcx-0x6e006e01]
   14000df63:	call   QWORD PTR [rcx-0x6e006e01]
   14000df69:	call   rsi
   14000df6b:	call   QWORD PTR [rcx-0x6e006e01]
   14000df71:	call   QWORD PTR [rcx-0x6e006e01]
   14000df77:	call   QWORD PTR [rcx-0x6e006e01]
   14000df7d:	call   FWORD PTR [rdi+0x0]
   14000df80:	xchg   ecx,eax
   14000df81:	call   QWORD PTR [rcx+0x3ff91ff]
   14000df87:	add    BYTE PTR [rcx-0x4006e01],dl
   14000df8d:	push   rbp
   14000df8f:	dec    DWORD PTR [rcx]
   14000df91:	add    BYTE PTR [rbp+0x0],ch
   14000df94:	pop    rbx
   14000df95:	add    BYTE PTR [rcx+0x2d003eff],dl
   14000df9b:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000dfa1:	push   QWORD PTR [rdx]
   14000dfa3:	add    BYTE PTR [rdi],bh
   14000dfa5:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000dfab:	call   QWORD PTR [rcx-0x6e006e01]
   14000dfb1:	jmp    QWORD PTR [rax]
   14000dfb3:	add    BYTE PTR [rcx-0x3aff3401],dl
   14000dfb9:	add    BYTE PTR [rcx-0x4dff4201],dl
   14000dfbf:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000dfc5:	call   QWORD PTR [rcx-0x46ff4901]
   14000dfcb:	add    BYTE PTR [rax+rax*1-0x6e006f],bh
   14000dfd2:	xchg   ecx,eax
   14000dfd3:	call   QWORD PTR [rcx-0x6eff3e01]
   14000dfd9:	inc    esi
   14000dfdb:	add    BYTE PTR [rax+0x72007100],ch
   14000dfe1:	add    BYTE PTR [rcx+0x740085ff],dl
   14000dfe7:	add    BYTE PTR [rbx+0x0],bh
   14000dfea:	add    DWORD PTR [rax],0x840082
   14000dff0:	xchg   ecx,eax
   14000dff1:	dec    DWORD PTR [rax-0x71ff7500]
   14000dff7:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000dffd:	call   QWORD PTR [rcx-0x6e006e01]
   14000e003:	call   QWORD PTR [rcx-0x6e006e01]
   14000e009:	call   QWORD PTR [rcx-0x6b006e01]
   14000e00f:	add    BYTE PTR [rcx-0x6eff6801],dl
   14000e015:	(bad)  
   14000e016:	mov    edx,0xdb000600
   14000e01b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e021:	call   QWORD PTR [rcx-0x6e006e01]
   14000e027:	call   QWORD PTR [rcx-0x6e006e01]
   14000e02d:	call   QWORD PTR [rcx-0x6e006e01]
   14000e033:	call   QWORD PTR [rcx-0x6e006e01]
   14000e039:	call   QWORD PTR [rcx-0x6e006e01]
   14000e03f:	call   QWORD PTR [rcx-0x6e006e01]
   14000e045:	call   QWORD PTR [rcx-0x6e006e01]
   14000e04b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e051:	call   QWORD PTR [rcx-0x6e006e01]
   14000e057:	call   QWORD PTR [rcx-0x6e006e01]
   14000e05d:	call   QWORD PTR [rcx+0x2aff91ff]
   14000e063:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e069:	call   QWORD PTR [rcx+0x16ff91ff]
   14000e06f:	add    BYTE PTR [rcx+0x2ff91ff],dl
   14000e075:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e07b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e081:	call   QWORD PTR [rcx-0x6e006e01]
   14000e087:	call   QWORD PTR [rcx-0x6e006e01]
   14000e08d:	call   QWORD PTR [rcx-0x6eff9f01]
   14000e093:	inc    DWORD PTR [rdx+0x0]
   14000e096:	adc    eax,0x91ff9100
   14000e09b:	inc    DWORD PTR [rax]
   14000e09d:	add    BYTE PTR [rcx+0x230112ff],dl
   14000e0a3:	add    BYTE PTR [rax+0x0],bl
   14000e0a6:	xchg   ecx,eax
   14000e0a7:	call   QWORD PTR [rcx-0x6e006e01]
   14000e0ad:	call   QWORD PTR [rcx-0x6e006e01]
   14000e0b3:	jmp    FWORD PTR [rcx]
   14000e0b5:	add    BYTE PTR [rbx+0x0],cl
   14000e0b8:	xchg   ecx,eax
   14000e0b9:	call   QWORD PTR [rcx+0x31ff91ff]
   14000e0bf:	add    BYTE PTR [rcx+0x30ff91ff],dl
   14000e0c5:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e0cb:	call   QWORD PTR [rcx-0x6e006e01]
   14000e0d1:	call   QWORD PTR [rcx-0x6effc601]
   14000e0d7:	call   QWORD PTR [rcx-0x6e006e01]
   14000e0dd:	call   QWORD PTR [rcx-0x6e006e01]
   14000e0e3:	call   QWORD PTR [rcx+0x4dff91ff]
   14000e0e9:	add    BYTE PTR [rcx+0x36ff91ff],dl
   14000e0ef:	add    BYTE PTR [rcx-0x6effe401],dl
   14000e0f5:	push   rbx
   14000e0f7:	add    BYTE PTR [rcx-0x6effe601],dl
   14000e0fd:	jmp    QWORD PTR [rax-0x6effdc00]
   14000e103:	call   QWORD PTR [rcx+0x2800a9ff]
   14000e109:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e10f:	call   QWORD PTR [rcx+0x38ff91ff]
   14000e115:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e11b:	call   QWORD PTR [rcx-0x4b006e01]
   14000e121:	add    BYTE PTR [rcx-0x5c006e01],dl
   14000e127:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e12d:	push   rsi
   14000e12f:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e135:	call   QWORD PTR [rcx-0x6e006e01]
   14000e13b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e141:	call   QWORD PTR [rcx-0x6e006e01]
   14000e147:	call   QWORD PTR [rcx-0x6e006e01]
   14000e14d:	call   QWORD PTR [rcx-0x6efff701]
   14000e153:	call   QWORD PTR [rcx-0x6e006e01]
   14000e159:	call   QWORD PTR [rcx-0x6effba01]
   14000e15f:	call   QWORD PTR [rcx-0x6e006e01]
   14000e165:	call   QWORD PTR [rcx-0x6e006e01]
   14000e16b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e171:	call   QWORD PTR [rcx-0x6e006e01]
   14000e177:	(bad)  
   14000e178:	cmp    eax,0x9100d300
   14000e17d:	call   QWORD PTR [rax]
   14000e17f:	add    DWORD PTR [rcx],eax
   14000e181:	add    DWORD PTR [rax],eax
   14000e183:	add    esp,ebp
   14000e185:	add    BYTE PTR [rcx+0x530051ff],dl
   14000e18b:	add    BYTE PTR [rbp+0x0],dl
   14000e18e:	add    BYTE PTR [rsi+0x0],r11b
   14000e192:	xchg   ecx,eax
   14000e193:	call   QWORD PTR [rcx-0x6e006e01]
   14000e199:	call   QWORD PTR [rcx-0x6e006e01]
   14000e19f:	call   QWORD PTR [rcx-0x6eff1401]
   14000e1a5:	(bad)  
   14000e1a6:	fiadd  DWORD PTR [rax]
   14000e1a8:	xchg   ecx,eax
   14000e1a9:	call   rcx
   14000e1ab:	add    BYTE PTR [rcx-0xb006e01],dl
   14000e1b1:	add    BYTE PTR [rcx-0x6eff1c01],dl
   14000e1b7:	call   QWORD PTR [rcx-0x6eff1b01]
   14000e1bd:	(bad)  
   14000e1be:	out    dx,al
   14000e1bf:	add    BYTE PTR [rcx-0x6effde01],dl
   14000e1c5:	jmp    QWORD PTR [rdi-0xa006f00]
   14000e1cb:	add    BYTE PTR [rcx-0x1ff0201],dl
   14000e1d1:	add    BYTE PTR [rcx-0x1e006e01],dl
   14000e1d7:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e1dd:	call   QWORD PTR [rcx-0x6e006e01]
   14000e1e3:	(bad)  
   14000e1e4:	fld    DWORD PTR [rax]
   14000e1e6:	xchg   ecx,eax
   14000e1e7:	inc    edx
   14000e1e9:	add    ch,dl
   14000e1eb:	add    BYTE PTR [rcx-0x2f006e01],dl
   14000e1f1:	add    BYTE PTR [rcx-0x6eff3001],dl
   14000e1f7:	push   QWORD PTR [rax+rax*1]
   14000e1fa:	xchg   ecx,eax
   14000e1fb:	dec    ebp
   14000e1fd:	add    BYTE PTR [rcx-0x6effc801],dl
   14000e203:	dec    ecx
   14000e205:	add    BYTE PTR [rcx-0x6eff3801],dl
   14000e20b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e211:	call   QWORD PTR [rcx-0x6e006e01]
   14000e217:	call   QWORD PTR [rcx-0x6efee901]
   14000e21d:	jmp    QWORD PTR [rdi]
   14000e21f:	add    BYTE PTR [rcx-0x6effdd01],dl
   14000e225:	jmp    FWORD PTR [rbp-0x6eff2500]
   14000e22b:	call   QWORD PTR [rcx-0x18ffca01]
   14000e231:	add    BYTE PTR [rcx-0x6effb601],dl
   14000e237:	call   QWORD PTR [rcx+0x3b002cff]
   14000e23d:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e243:	jmp    FWORD PTR [rdi]
   14000e245:	add    BYTE PTR [rcx+0x660018ff],dl
   14000e24b:	add    BYTE PTR [rcx-0x6eff9a01],dl
   14000e251:	call   QWORD PTR [rcx-0x6eff9001]
   14000e257:	call   QWORD PTR [rcx-0x6e006e01]
   14000e25d:	call   QWORD PTR [rcx+0x1aff91ff]
   14000e263:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e269:	call   QWORD PTR [rcx-0x6e006e01]
   14000e26f:	inc    DWORD PTR [rcx+0x0]
   14000e272:	xchg   ecx,eax
   14000e273:	call   QWORD PTR [rcx-0x6e006e01]
   14000e279:	dec    DWORD PTR [rax+rax*1-0x6f]
   14000e27d:	call   QWORD PTR [rcx-0x6e006e01]
   14000e283:	call   QWORD PTR [rcx+0x4fff91ff]
   14000e289:	add    BYTE PTR [rcx+0x59ff91ff],dl
   14000e28f:	add    BYTE PTR [rcx+0x33ff91ff],dl
   14000e295:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e29b:	call   QWORD PTR [rcx-0x3d006e01]
   14000e2a1:	call   QWORD PTR [rcx-0x6effda01]
   14000e2a7:	inc    ecx
   14000e2a9:	call   QWORD PTR [rcx-0x6e006e01]
   14000e2af:	call   QWORD PTR [rcx-0x6efe7c01]
   14000e2b5:	call   QWORD PTR [rcx-0x6efef701]
   14000e2bb:	call   QWORD PTR [rcx-0x6e006e01]
   14000e2c1:	call   QWORD PTR [rcx-0x35ff6101]
   14000e2c7:	call   QWORD PTR [rcx+0x1cff91ff]
   14000e2cd:	add    BYTE PTR [rcx-0x6effd901],dl
   14000e2d3:	call   QWORD PTR [rdi]
   14000e2d5:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e2db:	call   QWORD PTR [rcx-0x6effd401]
   14000e2e1:	dec    DWORD PTR [rsi+0x0]
   14000e2e4:	xchg   ecx,eax
   14000e2e5:	(bad)  
   14000e2e6:	cmp    al,BYTE PTR [rax]
   14000e2e8:	xchg   ecx,eax
   14000e2e9:	inc    DWORD PTR [rbx+0x0]
   14000e2ec:	xchg   ecx,eax
   14000e2ed:	call   QWORD PTR [rcx-0x6e006e01]
   14000e2f3:	call   QWORD PTR [rcx+0x12ff91ff]
   14000e2f9:	add    BYTE PTR [rcx-0x3c006e01],dl
   14000e2ff:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e305:	call   QWORD PTR [rcx-0x6eff5e01]
   14000e30b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e311:	call   QWORD PTR [rax+rax*1]
   14000e314:	xchg   ecx,eax
   14000e315:	call   QWORD PTR [rcx-0x6eff6201]
   14000e31b:	call   QWORD PTR [rcx-0x6effe001]
   14000e321:	call   QWORD PTR [rcx-0x6e006e01]
   14000e327:	call   QWORD PTR [rcx-0x6e006e01]
   14000e32d:	call   QWORD PTR [rcx-0x6e006e01]
   14000e333:	call   QWORD PTR [rcx-0x6e006e01]
   14000e339:	call   QWORD PTR [rcx-0x6e006e01]
   14000e33f:	dec    esi
   14000e341:	add    BYTE PTR [rcx-0x6e006e01],dl
   14000e347:	call   QWORD PTR [rcx-0x6006e01]
   14000e34d:	call   QWORD PTR [rcx-0x6e006e01]
   14000e353:	call   QWORD PTR [rcx-0x6e006e01]
   14000e359:	call   QWORD PTR [rcx-0x6e001701]
   14000e35f:	call   QWORD PTR [rcx-0xb006e01]
   14000e365:	call   QWORD PTR [rcx+0x56ff91ff]
   14000e36b:	add    DWORD PTR [rcx-0x6e006e01],edx
   14000e371:	call   QWORD PTR [rcx-0x6e006e01]
   14000e377:	call   QWORD PTR [rcx-0x6e006e01]
   14000e37d:	call   QWORD PTR [rcx-0xf006e01]
   14000e383:	jmp    rax
   14000e385:	call   QWORD PTR [rcx-0x6efffa01]
   14000e38b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e391:	call   FWORD PTR [rax-0x6e006f00]
   14000e397:	call   QWORD PTR [rcx-0x6eff0701]
   14000e39d:	call   QWORD PTR [rcx-0x6efeb501]
   14000e3a3:	call   QWORD PTR [rcx+0x44ff91ff]
   14000e3a9:	add    DWORD PTR [rcx-0x6e006e01],edx
   14000e3af:	call   QWORD PTR [rcx-0x6efe7e01]
   14000e3b5:	call   QWORD PTR [rcx-0x6e001401]
   14000e3bb:	call   QWORD PTR [rcx+0xe0001ff]
   14000e3c1:	add    BYTE PTR [rcx-0x6efe9001],dl
   14000e3c7:	(bad)  
   14000e3c8:	call   0xd100efcd
   14000e3cd:	call   QWORD PTR [rcx-0x6efff401]
   14000e3d3:	dec    DWORD PTR [rdx]
   14000e3d5:	add    BYTE PTR [rcx-0x72ff5b01],dl
   14000e3db:	add    BYTE PTR [rcx+0x7ff91ff],dl
   14000e3e1:	add    BYTE PTR [rcx-0x6effbf01],dl
   14000e3e7:	call   QWORD PTR [rcx-0x6effec01]
   14000e3ed:	call   QWORD PTR [rcx+0x11ff91ff]
   14000e3f3:	add    BYTE PTR [rcx+0x3cffffff],dl
   14000e3f9:	add    BYTE PTR [rcx-0x6effd101],dl
   14000e3ff:	call   QWORD PTR [rcx-0x6e006e01]
   14000e405:	call   QWORD PTR [rcx-0x6e000e01]
   14000e40b:	call   QWORD PTR [rcx-0x1006e01]
   14000e411:	(bad)  
   14000e412:	out    dx,eax
   14000e413:	(bad)  
   14000e414:	cld    
   14000e415:	call   QWORD PTR [rcx-0x6e006e01]
   14000e41b:	call   QWORD PTR [rcx-0x1b006e01]
   14000e421:	add    DWORD PTR [rdx-0x2fec700],ecx
   14000e427:	call   QWORD PTR [rcx-0x6e006e01]
   14000e42d:	call   QWORD PTR [rcx-0x6efffb01]
   14000e433:	call   QWORD PTR [rcx+0x10000dff]
   14000e439:	add    BYTE PTR [rcx+0x0],ah
   14000e43c:	jg     0x14000e43e
   14000e43e:	xchg   ecx,eax
   14000e43f:	call   QWORD PTR [rcx-0x6e006e01]
   14000e445:	call   QWORD PTR [rcx-0x6e006e01]
   14000e44b:	call   QWORD PTR [rcx-0x6e006e01]
   14000e451:	call   QWORD PTR [rcx-0x6e006e01]
   14000e457:	push   rdx
   14000e459:	call   QWORD PTR [rcx-0x6e006e01]
   14000e45f:	call   QWORD PTR [rcx-0x6e006e01]
   14000e465:	(bad)  
   14000e466:	clc    
   14000e467:	call   QWORD PTR [rcx-0x6e006e01]
   14000e46d:	call   QWORD PTR [rcx-0x6e006e01]
   14000e473:	call   QWORD PTR [rcx+0xff91ff]
   14000e479:	add    BYTE PTR [rax],al
   14000e47b:	add    BYTE PTR [rax],al
   14000e47d:	add    BYTE PTR [rax],al
   14000e47f:	add    BYTE PTR [rax-0x4ffe6aff],ch
   14000e485:	add    DWORD PTR [rcx+rax*1+0xf5015a],edx
   14000e48c:	cmp    eax,0x96016202
   14000e491:	add    DWORD PTR [rdx-0x1],edi
   14000e494:	int    0x1
   14000e496:	nop
   14000e497:	dec    DWORD PTR [rdi+0x78ff7dff]
   14000e49d:	inc    eax
   14000e49f:	add    DWORD PTR [rsi+0x1],ebx
   14000e4a2:	jne    0x14000e4a3
   14000e4a4:	xchg   edx,eax
   14000e4a5:	add    DWORD PTR [rax-0x7afef3ff],ecx
   14000e4ab:	push   QWORD PTR [rdx-0x1]
   14000e4ae:	rol    DWORD PTR [rcx],1
   14000e4b0:	pop    QWORD PTR [rcx]
   14000e4b2:	mov    es,WORD PTR [rcx]
   14000e4b4:	jge    0x14000e4b5
   14000e4b6:	jne    0x14000e4b7
   14000e4b8:	rol    DWORD PTR [rcx],1
   14000e4ba:	int    0x1
   14000e4bc:	fiadd  DWORD PTR [rcx]
   14000e4be:	js     0x14000e4bf
   14000e4c0:	cs add al,al
   14000e4c3:	add    DWORD PTR [rdx-0x1],edi
   14000e4c6:	nop
   14000e4c7:	dec    DWORD PTR [rdi-0x7afe5701]
   14000e4cd:	call   FWORD PTR [rsi+0x1]
   14000e4d0:	jb     0x14000e4d1
   14000e4d2:	cmc    
   14000e4d3:	add    BYTE PTR [rdi],ah
   14000e4d5:	add    ah,cl
   14000e4d7:	add    esp,esp
   14000e4d9:	add    DWORD PTR [rcx+rax*1],ecx
   14000e4dc:	add    cl,BYTE PTR [rdx+rax*1]
   14000e4e0:	popf   
   14000e4e1:	add    edx,esp
   14000e4e3:	add    DWORD PTR [rsi-0x48fdd1ff],esi
   14000e4e9:	add    DWORD PTR [rip+0x67022e01],eax        # 0x1a70312f0
   14000e4ef:	add    ah,BYTE PTR [rcx+rax*1+0x1a201c4]
   14000e4f6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e4f7:	add    DWORD PTR [rbx],ebx
   14000e4f9:	add    esi,eax
   14000e4fb:	add    DWORD PTR [rdi-0x53fe5400],ecx
   14000e501:	add    BYTE PTR [rsi],ch
   14000e503:	add    ah,BYTE PTR [rsi+0x2e01a700]
   14000e509:	add    al,al
   14000e50b:	add    DWORD PTR [rax+0x2],esp
   14000e50e:	rex.WB add BYTE PTR [r10],spl
   14000e511:	add    al,al
   14000e513:	add    DWORD PTR [rbp+0x11b00],edx
   14000e519:	add    BYTE PTR [rbx+0x1],al
   14000e51c:	cwde   
   14000e51d:	add    DWORD PTR [rax],eax
   14000e51f:	add    BYTE PTR [rax],ah
   14000e521:	add    dh,BYTE PTR [rbx]
   14000e523:	add    DWORD PTR [rcx+rax*1],ecx
   14000e526:	add    BYTE PTR [rax],al
   14000e528:	add    BYTE PTR [rax],al
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	pop    QWORD PTR [rax]
   14000e52e:	mov    eax,0xc0015e00
   14000e533:	add    ebp,esi
   14000e535:	add    BYTE PTR [rsi+0x49006500],ah
   14000e53b:	add    ch,cl
   14000e53d:	add    DWORD PTR [rcx+0x1],ecx
   14000e540:	rol    DWORD PTR [rcx],1
   14000e542:	out    dx,al
   14000e543:	add    al,cl
   14000e545:	add    DWORD PTR [rax+0x5000f101],ebp
   14000e54b:	add    DWORD PTR [rdx+0x2],ebp
   14000e54e:	mov    ebp,0x6029900
   14000e553:	add    DWORD PTR [rdi+0x14300],ecx
   14000e559:	add    BYTE PTR [rbp-0x70fec300],dh
   14000e55f:	add    bl,al
   14000e561:	add    DWORD PTR [rax],eax
   14000e563:	add    BYTE PTR [rbx],bh
   14000e565:	add    DWORD PTR [rdx-0x70ff70ff],edi
   14000e56b:	add    al,al
   14000e56d:	add    BYTE PTR [rbx],ch
   14000e56f:	add    al,BYTE PTR [rax]
   14000e571:	add    BYTE PTR [rdi-0xcff1000],cl
   14000e577:	add    BYTE PTR [rdi],ch
   14000e579:	add    DWORD PTR [rdi+0x6501c400],edx
   14000e57f:	add    BYTE PTR [rdi-0x70ff4700],cl
   14000e585:	add    BYTE PTR [rbx+0x38008f01],dh
   14000e58b:	add    DWORD PTR [rcx],esi
   14000e58d:	add    esp,esi
   14000e58f:	add    BYTE PTR [rax],al
   14000e591:	add    BYTE PTR [rax],al
   14000e593:	add    BYTE PTR [rdi],ch
   14000e595:	add    edx,ebp
   14000e597:	add    DWORD PTR [rbx],ebp
   14000e599:	add    bh,BYTE PTR [rax+rax*1]
   14000e59c:	cmp    al,0x0
   14000e59e:	push   rsi
   14000e59f:	add    DWORD PTR [rdi-0x40ff7100],ecx
   14000e5a5:	add    BYTE PTR [rax-0x4ff03ff],dh
   14000e5ab:	add    BYTE PTR [rdi+0x0],ah
   14000e5ae:	pop    rax
   14000e5af:	add    DWORD PTR [rip+0xffffffff90003d00],edi        # 0xd00122b5
   14000e5b5:	add    BYTE PTR [rax+rax*1],bh
   14000e5b8:	xor    DWORD PTR [rcx],eax
   14000e5ba:	xchg   esi,eax
   14000e5bb:	add    dl,BYTE PTR [rbp+0x67003c02]
   14000e5c1:	add    BYTE PTR [rax+0x60028f02],dl
   14000e5c7:	add    DWORD PTR [rbp+0x1],eax
   14000e5ca:	push   rdx
   14000e5cb:	add    DWORD PTR [rip+0x46022c00],edi        # 0x1860311d1
   14000e5d1:	add    ebp,esi
   14000e5d3:	add    DWORD PTR [rip+0x10100],edi        # 0x14001e6d9
   14000e5d9:	add    DWORD PTR [rdx-0x57ff70ff],ebp
   14000e5df:	add    BYTE PTR [rcx+rax*1+0x2970298],dh
   14000e5e6:	test   eax,0x1e015c00
   14000e5eb:	add    cl,BYTE PTR [rax]
   14000e5ed:	add    DWORD PTR [rax+0x0],eax
   14000e5f0:	add    DWORD PTR [r9+0x2],edi
   14000e5f4:	jp     0x14000e5f8
   14000e5f6:	jmp    0x14000e5f9
   14000e5f8:	je     0x14000e5fc
   14000e5fa:	ins    BYTE PTR es:[rdi],dx
   14000e5fb:	add    ch,BYTE PTR [rbx+0x2]
   14000e5fe:	add    eax,DWORD PTR [rcx]
   14000e600:	add    al,BYTE PTR [rcx]
   14000e602:	mov    bl,0x0
   14000e604:	add    BYTE PTR [r14-0x70fe3100],bpl
   14000e60b:	add    BYTE PTR [rsi+0x2],ch
   14000e60e:	add    eax,DWORD PTR [rcx]
   14000e610:	add    al,BYTE PTR [rcx]
   14000e612:	movabs al,ds:0x9010b020d019f01
   14000e61b:	add    DWORD PTR [rip+0xffffffffdd005702],ecx        # 0x11d013d23
   14000e621:	add    DWORD PTR [rax+0x0],ebx
   14000e624:	adc    eax,DWORD PTR [rdx]
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	scas   al,BYTE PTR es:[rdi]
   14000e629:	add    BYTE PTR [rip+0xffffffff8f00af02],cl        # 0xcf019531
   14000e62f:	add    BYTE PTR [rbx+0x53005701],bl
   14000e635:	add    DWORD PTR [rax+0x0],ebx
   14000e638:	pop    rcx
   14000e639:	add    BYTE PTR [rdx+0x0],al
   14000e63c:	add    BYTE PTR [rax],al
   14000e63e:	push   rdi
   14000e63f:	add    BYTE PTR [rsi],ch
   14000e641:	add    bl,BYTE PTR [rax+0x0]
   14000e644:	rol    DWORD PTR [rcx],cl
   14000e646:	lar    eax,WORD PTR [rdx+0x0]
   14000e64a:	(bad)  
   14000e64c:	pop    rcx
   14000e64d:	add    BYTE PTR [rdi-0x64fef600],ch
   14000e653:	add    DWORD PTR [rip+0x59023702],ecx        # 0x199031d5b
   14000e659:	add    BYTE PTR [rip+0x20e02],cl        # 0x14002f461
   14000e65f:	add    BYTE PTR [rdi+0x0],dl
   14000e662:	rex.X add BYTE PTR [rax+0x0],bl
   14000e666:	push   rdi
   14000e667:	add    BYTE PTR [rdi+0x0],dl
   14000e66a:	pop    rax
   14000e66b:	add    BYTE PTR [rax+0x0],bl
   14000e66e:	and    eax,0xf00ae02
   14000e673:	add    ch,ah
   14000e675:	add    bl,ch
   14000e677:	add    BYTE PTR [rdi],cl
   14000e679:	add    bl,BYTE PTR [rcx+0x0]
   14000e67c:	movsxd eax,DWORD PTR [rdx]
   14000e67e:	(bad)  
   14000e67f:	add    bl,BYTE PTR [rcx+0x0]
   14000e682:	pop    rcx
   14000e683:	add    BYTE PTR [rax],al
   14000e685:	add    BYTE PTR [rdi],cl
   14000e687:	add    cl,BYTE PTR [rsi]
   14000e689:	add    bl,dh
   14000e68b:	add    esp,ebx
   14000e68d:	add    DWORD PTR [rsi],ecx
   14000e68f:	add    dl,BYTE PTR [rdx+rax*1]
   14000e692:	adc    al,BYTE PTR [rdx]
   14000e694:	rex.XB add BYTE PTR [r15-0x42fe4200],bpl
   14000e69b:	add    DWORD PTR [rsi],ecx
   14000e69d:	add    al,BYTE PTR [rax]
   14000e69f:	add    BYTE PTR [rax+rax*1+0x43],al
   14000e6a3:	add    BYTE PTR [rsi-0x6dfd6d00],ch
   14000e6a9:	add    ch,BYTE PTR [rcx+0x0]
   14000e6ac:	add    BYTE PTR [rax],al
   14000e6ae:	add    BYTE PTR [rdi],r9b
   14000e6b1:	add    cl,BYTE PTR [rbx+0x0]
   14000e6b4:	rex.WR add BYTE PTR [rdi],r9b
   14000e6b7:	add    al,BYTE PTR [rax]
   14000e6b9:	add    BYTE PTR [rdi+0x2],ch
   14000e6bc:	rex.XB add BYTE PTR [rip+0x38011e01],bl        # 0x1780204c4
   14000e6c3:	add    dh,BYTE PTR [rsi]
   14000e6c5:	add    cl,BYTE PTR [rsi]
   14000e6c7:	add    al,BYTE PTR [rax+rax*1-0x51]
   14000e6cb:	add    BYTE PTR [rsi],cl
   14000e6cd:	add    dh,BYTE PTR [rax-0x73ff9600]
   14000e6d3:	add    ch,BYTE PTR [rbx+0x0]
   14000e6d6:	rex.WXB add BYTE PTR [r8+r8*1+0x26],cl
   14000e6db:	add    ah,BYTE PTR [rdx+rax*1]
   14000e6de:	scas   al,BYTE PTR es:[rdi]
   14000e6df:	add    BYTE PTR [rax],al
   14000e6e1:	add    BYTE PTR [rip+0xffffffff91011e01],bl        # 0xd10204e8
   14000e6e7:	add    cl,BYTE PTR [rbp+0x0]
   14000e6ea:	rex.WRX add BYTE PTR [rsi-0x74fd7300],r13b
   14000e6f1:	add    al,BYTE PTR [rax]
   14000e6f3:	add    BYTE PTR [rdi],bl
   14000e6f5:	add    DWORD PTR [rax],esp
   14000e6f7:	add    DWORD PTR [rax],eax
	...
   14000e701:	add    BYTE PTR [rbp+0xafff],bl
   14000e707:	add    BYTE PTR [rax+0x4d000000],dh
   14000e70d:	add    BYTE PTR [rsi+0x0],cl
   14000e710:	popf   
   14000e711:	jmp    FWORD PTR [rdi-0x50000000]
   14000e717:	add    BYTE PTR [rdi],bl
   14000e719:	add    DWORD PTR [rax],esp
   14000e71b:	add    DWORD PTR [rax],eax
   14000e71d:	add    BYTE PTR [rdx],ah
   14000e71f:	add    DWORD PTR [rbx],esp
   14000e721:	add    DWORD PTR [rax],eax
   14000e723:	add    BYTE PTR [rax],al
   14000e725:	add    BYTE PTR [rdi+0x0],dl
   14000e728:	add    BYTE PTR [rax],al
   14000e72a:	pop    rax
   14000e72b:	add    BYTE PTR [rax],al
   14000e72d:	add    BYTE PTR [rdx+0x50012402],cl
   14000e733:	add    BYTE PTR [rcx+0x0],dl
   14000e736:	and    eax,0x26002301
   14000e73b:	add    DWORD PTR [rax],eax
   14000e73d:	add    BYTE PTR [rax],al
   14000e73f:	add    BYTE PTR [rcx+0x0],bl
   14000e742:	push   rdx
   14000e743:	add    BYTE PTR [rbx+0x0],dl
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	add    BYTE PTR [rax],al
   14000e74a:	push   rsp
   14000e74b:	add    BYTE PTR [rbx],ah
   14000e74d:	add    BYTE PTR [rbp+0x0],dl
   14000e750:	push   rax
   14000e751:	add    BYTE PTR [rcx+0x0],dl
   14000e754:	(bad)  
   14000e755:	add    BYTE PTR [rip+0x1000400],al        # 0x14100eb5b
   14000e75b:	add    BYTE PTR [rbx],al
   14000e75d:	add    BYTE PTR [rdx],al
   14000e75f:	add    BYTE PTR [rdx+0x0],dl
   14000e762:	push   rbx
   14000e763:	add    BYTE PTR [rax+0x0],dl
   14000e766:	push   rcx
   14000e767:	add    BYTE PTR [rax+rax*1+0x23],dl
   14000e76b:	add    BYTE PTR [rbp+0x0],dl
   14000e76e:	add    BYTE PTR [rax],al
   14000e770:	add    BYTE PTR [rax],al
   14000e772:	add    BYTE PTR [rax],al
   14000e774:	push   rdx
   14000e775:	add    BYTE PTR [rbx+0x0],dl
   14000e778:	push   rax
   14000e779:	add    BYTE PTR [rcx+0x0],dl
   14000e77c:	push   rsp
   14000e77d:	add    BYTE PTR [rax],al
   14000e77f:	add    BYTE PTR [rbp+0x0],dl
   14000e782:	xor    DWORD PTR [rax],eax
   14000e784:	xor    al,0x0
   14000e786:	xor    al,BYTE PTR [rax]
   14000e788:	push   rdx
   14000e789:	add    BYTE PTR [rbx+0x0],dl
   14000e78c:	push   rax
   14000e78d:	add    BYTE PTR [rcx+0x0],dl
   14000e790:	push   rsp
   14000e791:	add    BYTE PTR [rax],al
   14000e793:	add    BYTE PTR [rbp+0x0],dl
   14000e796:	xor    DWORD PTR [rax],eax
   14000e798:	xor    al,0x0
   14000e79a:	xor    al,BYTE PTR [rax]
   14000e79c:	push   rdx
   14000e79d:	add    BYTE PTR [rbx+0x0],dl
   14000e7a0:	add    BYTE PTR [rax],al
   14000e7a2:	add    BYTE PTR [rax],al
   14000e7a4:	push   rsp
   14000e7a5:	add    BYTE PTR [rax],al
   14000e7a7:	add    BYTE PTR [rbp+0x0],dl
   14000e7aa:	and    eax,DWORD PTR [rax]
   14000e7ac:	add    BYTE PTR [rax],al
   14000e7ae:	add    BYTE PTR [rax],al
   14000e7b0:	and    eax,DWORD PTR [rax]
   14000e7b2:	add    BYTE PTR [rax],al
   14000e7b4:	xor    DWORD PTR [rax],eax
   14000e7b6:	xor    al,0x0
   14000e7b8:	xor    al,BYTE PTR [rax]
   14000e7ba:	add    BYTE PTR cs:[rdx],ah
   14000e7bd:	add    BYTE PTR [rbx],dh
   14000e7bf:	add    BYTE PTR [rbx],ah
   14000e7c1:	add    BYTE PTR [rax],al
   14000e7c3:	add    BYTE PTR [rax],al
   14000e7c5:	add    BYTE PTR [rbx],ah
   14000e7c7:	add    BYTE PTR [rdx],ah
   14000e7c9:	add    DWORD PTR [rbx],esp
   14000e7cb:	add    DWORD PTR [rbx],esp
   14000e7cd:	add    BYTE PTR [rsi],ch
   14000e7cf:	add    BYTE PTR [rdx],ah
   14000e7d1:	add    BYTE PTR [rbx],dh
   14000e7d3:	add    BYTE PTR [rax],al
   14000e7d5:	add    BYTE PTR [rax],al
   14000e7d7:	add    BYTE PTR [rbx],ah
   14000e7d9:	add    BYTE PTR [rcx+rax*1],ah
   14000e7dc:	add    BYTE PTR [rax],al
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	and    eax,0x26000001
   14000e7e5:	add    DWORD PTR [rax+0x0],edi
   14000e7eb:	add    BYTE PTR [rsi],ch
   14000e7ed:	add    BYTE PTR [rdx],ah
   14000e7ef:	add    BYTE PTR [rbx],dh
   14000e7f1:	add    BYTE PTR [rbx],ah
   14000e7f3:	add    BYTE PTR [rcx],dh
   14000e7f5:	add    BYTE PTR [rax+rax*1],dh
   14000e7f8:	xor    al,BYTE PTR [rax]
   14000e7fa:	xor    DWORD PTR [rax],eax
   14000e7fc:	xor    al,0x0
   14000e7fe:	xor    al,BYTE PTR [rax]
   14000e800:	mov    eax,0x0
   14000e805:	add    BYTE PTR [rax],al
   14000e807:	add    BYTE PTR [rax],al
   14000e809:	add    BYTE PTR [rcx],dh
   14000e80b:	add    BYTE PTR [rax+rax*1],dh
   14000e80e:	xor    al,BYTE PTR [rax]
   14000e810:	xor    DWORD PTR [rax],eax
   14000e812:	xor    al,0x0
   14000e814:	xor    al,BYTE PTR [rax]
   14000e816:	xor    DWORD PTR [rax],eax
   14000e818:	xor    al,0x0
   14000e81a:	xor    al,BYTE PTR [rax]
   14000e81c:	and    eax,DWORD PTR [rax]
   14000e81e:	add    BYTE PTR [rax],al
   14000e820:	add    BYTE PTR [rax],al
   14000e822:	xor    DWORD PTR [rax],eax
   14000e824:	xor    al,0x0
   14000e826:	xor    al,BYTE PTR [rax]
   14000e828:	add    BYTE PTR [rax],al
   14000e82a:	mov    eax,0x22002e00
   14000e82f:	add    BYTE PTR [rbx],dh
   14000e831:	add    BYTE PTR [rsi],ch
   14000e833:	add    BYTE PTR [rdx],ah
   14000e835:	add    BYTE PTR [rbx],dh
   14000e837:	add    BYTE PTR [rax],al
   14000e839:	add    BYTE PTR [rax],al
   14000e83b:	add    BYTE PTR [rcx],dh
   14000e83d:	add    BYTE PTR [rax+rax*1],dh
   14000e840:	xor    al,BYTE PTR [rax]
   14000e842:	add    BYTE PTR cs:[rdx],ah
   14000e845:	add    BYTE PTR [rbx],dh
   14000e847:	add    BYTE PTR [rsi],ch
   14000e849:	add    BYTE PTR [rdx],ah
   14000e84b:	add    BYTE PTR [rbx],dh
   14000e84d:	add    BYTE PTR [rsi],ch
   14000e84f:	add    BYTE PTR [rdx],ah
   14000e851:	add    BYTE PTR [rbx],dh
   14000e853:	add    BYTE PTR [rax],al
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    BYTE PTR [rax],al
   14000e859:	add    BYTE PTR [rsi],ch
   14000e85b:	add    BYTE PTR [rdx],ah
   14000e85d:	add    BYTE PTR [rbx],dh
   14000e85f:	add    BYTE PTR [rax],al
   14000e861:	add    BYTE PTR [rax],al
   14000e863:	add    BYTE PTR [rbx],ah
   14000e865:	add    BYTE PTR [rcx],dh
   14000e867:	add    BYTE PTR [rax+rax*1],dh
   14000e86a:	xor    al,BYTE PTR [rax]
   14000e86c:	add    BYTE PTR [rax],al
   14000e86e:	and    eax,DWORD PTR [rax]
   14000e870:	add    BYTE PTR [rax],al
   14000e872:	add    BYTE PTR [rax],al
   14000e874:	add    BYTE PTR cs:[rdx],ah
   14000e877:	add    BYTE PTR [rbx],dh
   14000e879:	add    BYTE PTR [rax],al
   14000e87b:	add    BYTE PTR [rax],al
   14000e87d:	add    BYTE PTR [rbx],ah
	...
   14000e88b:	add    BYTE PTR [rax],al
   14000e88d:	add    BYTE PTR [rbx],ah
	...
   14000e89b:	add    BYTE PTR [rax],al
   14000e89d:	add    BYTE PTR [rsi],ch
   14000e89f:	add    BYTE PTR [rdx],ah
   14000e8a1:	add    BYTE PTR [rbx],dh
   14000e8a3:	add    dl,bh
   14000e8a5:	add    cl,bh
   14000e8a7:	add    BYTE PTR [rax],al
   14000e8a9:	add    BYTE PTR [rax],al
   14000e8ab:	add    BYTE PTR [rax],al
   14000e8ad:	add    BYTE PTR [rcx],dh
   14000e8af:	add    BYTE PTR [rax+rax*1],dh
   14000e8b2:	xor    al,BYTE PTR [rax]
   14000e8b4:	add    BYTE PTR [rax],al
   14000e8b6:	add    BYTE PTR [rax],al
   14000e8b8:	xor    DWORD PTR [rax],eax
   14000e8ba:	xor    al,0x0
   14000e8bc:	xor    al,BYTE PTR [rax]
   14000e8be:	cli    
   14000e8bf:	add    cl,bh
   14000e8c1:	add    BYTE PTR [rax],al
   14000e8c3:	add    BYTE PTR [rax],al
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	add    BYTE PTR [rcx],dh
   14000e8c9:	add    BYTE PTR [rax+rax*1],dh
   14000e8cc:	xor    al,BYTE PTR [rax]
   14000e8ce:	cli    
   14000e8cf:	add    cl,bh
   14000e8d1:	add    BYTE PTR [rax],al
   14000e8d3:	add    BYTE PTR [rax],al
   14000e8d5:	add    BYTE PTR [rax],al
   14000e8d7:	add    BYTE PTR [rcx],dh
   14000e8d9:	add    BYTE PTR [rax+rax*1],dh
   14000e8dc:	xor    al,BYTE PTR [rax]
	...
   14000e8e6:	add    BYTE PTR cs:[rdx],ah
   14000e8e9:	add    BYTE PTR [rbx],dh
   14000e8eb:	add    BYTE PTR [rax],al
   14000e8ed:	add    BYTE PTR [rax],al
   14000e8ef:	add    BYTE PTR [rsi],ch
   14000e8f1:	add    BYTE PTR [rdx],ah
   14000e8f3:	add    BYTE PTR [rbx],dh
	...
   14000e8fd:	add    BYTE PTR [rax],al
   14000e8ff:	add    BYTE PTR [rsi],ch
   14000e901:	add    BYTE PTR [rdx],ah
   14000e903:	add    BYTE PTR [rbx],dh
   14000e905:	add    BYTE PTR [rax],al
   14000e907:	add    BYTE PTR [rbx],ah
   14000e909:	add    BYTE PTR [rax],al
   14000e90b:	add    BYTE PTR [rax],al
   14000e90d:	add    BYTE PTR [rax],al
   14000e90f:	add    BYTE PTR [rsi],ch
   14000e911:	add    BYTE PTR [rdx],ah
   14000e913:	add    BYTE PTR [rbx],dh
	...
   14000e945:	add    BYTE PTR [rax],al
   14000e947:	add    bh,bh
   14000e949:	add    dh,bh
   14000e94b:	add    BYTE PTR [rcx+0x0],bl
   14000e951:	add    BYTE PTR [rcx],dh
   14000e953:	add    BYTE PTR [rax+rax*1],dh
   14000e956:	xor    al,BYTE PTR [rax]
	...
   14000e960:	(bad)  
   14000e961:	add    BYTE PTR [rax],al
   14000e963:	add    BYTE PTR [rax],al
   14000e965:	add    BYTE PTR [rax],al
   14000e967:	add    BYTE PTR [rbx+0x0],bl
	...
   14000e979:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   14000e980:	add    BYTE PTR [rax],al
   14000e982:	add    BYTE PTR [rax],al
   14000e984:	(bad)  
   14000e985:	add    DWORD PTR [rax],eax
   14000e987:	add    BYTE PTR [rax],al
   14000e989:	add    BYTE PTR [rsi],ch
   14000e98b:	add    BYTE PTR [rdx],ah
   14000e98d:	add    BYTE PTR [rbx],dh
   14000e98f:	add    BYTE PTR [rax],al
   14000e991:	add    BYTE PTR [rax],al
   14000e993:	add    BYTE PTR [rsi-0x61000000],bl
   14000e999:	add    BYTE PTR [rax+0x0],al
   14000e99c:	add    BYTE PTR [rax],al
   14000e99e:	(bad)  
   14000e99f:	add    BYTE PTR [rdi],bl
   14000e9a1:	add    BYTE PTR [rcx+0x0],bl
   14000e9a7:	add    BYTE PTR [rax+0x0],ah
   14000e9ad:	add    BYTE PTR [rcx+0x21004100],ah
   14000e9b3:	add    BYTE PTR [rax],al
   14000e9b5:	add    BYTE PTR [rdx-0x5e000000],bl
   14000e9bb:	add    BYTE PTR [rax],al
   14000e9bd:	add    BYTE PTR [rbx+0x2300],bl
   14000e9c3:	add    BYTE PTR [rax],al
   14000e9c5:	add    BYTE PTR [rbx+0x25002400],ah
   14000e9cb:	add    BYTE PTR [rax],al
   14000e9cd:	add    BYTE PTR [rsi],ah
   14000e9cf:	add    BYTE PTR [rax+rax*1+0x9d0000],bl
   14000e9d6:	add    BYTE PTR [rax],al
   14000e9d8:	add    BYTE PTR [rax],al
   14000e9da:	add    BYTE PTR [rax],al
   14000e9dc:	sub    al,BYTE PTR [rax]
   14000e9de:	add    BYTE PTR [rax],al
   14000e9e0:	add    BYTE PTR [rax],al
   14000e9e2:	add    BYTE PTR [rax],al
   14000e9e4:	sub    eax,0xa400
   14000e9e9:	add    BYTE PTR [rsi-0x61000000],bl
   14000e9ef:	add    BYTE PTR [rax+0x0],al
	...
   14000e9fe:	movabs al,ds:0x4100a10000000000
   14000ea07:	add    BYTE PTR [rip+0x34003100],dh        # 0x174011b0d
   14000ea0d:	add    BYTE PTR [rdx],dh
   14000ea0f:	add    BYTE PTR [rdx+0x3600],ah
   14000ea15:	add    BYTE PTR [rax],al
   14000ea17:	add    BYTE PTR [rax],al
   14000ea19:	add    BYTE PTR [rax],al
   14000ea1b:	add    BYTE PTR [rbx+0x0],ah
   14000ea21:	add    BYTE PTR [rax],al
   14000ea23:	add    BYTE PTR [rax],al
   14000ea25:	add    BYTE PTR [rax],al
   14000ea27:	add    BYTE PTR [rax+rax*1],ch
   14000ea2a:	cmp    BYTE PTR [rax],al
   14000ea2c:	and    BYTE PTR [rax],al
   14000ea2e:	add    BYTE PTR [rax],al
   14000ea30:	add    BYTE PTR [rax],al
   14000ea32:	add    BYTE PTR [rax],al
   14000ea34:	sub    DWORD PTR [rax],eax
   14000ea36:	add    BYTE PTR [rax],al
   14000ea38:	add    BYTE PTR [rax],al
   14000ea3a:	add    BYTE PTR [rax],al
   14000ea3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ea3d:	add    BYTE PTR [rax],al
   14000ea3f:	add    BYTE PTR [rax],al
   14000ea41:	add    BYTE PTR [rsi],ch
   14000ea43:	add    BYTE PTR [rdx],ah
   14000ea45:	add    BYTE PTR [rbx],dh
	...
   14000ea6f:	add    BYTE PTR [rsi],bl
   14000ea71:	add    BYTE PTR [rdi],bl
	...
   14000ea83:	add    BYTE PTR [rcx],ah
	...
   14000ea91:	add    BYTE PTR [rbx],ah
   14000ea93:	add    BYTE PTR [rax],al
   14000ea95:	add    BYTE PTR [rax],al
   14000ea97:	add    BYTE PTR [rax],al
   14000ea99:	add    BYTE PTR [rax+rax*1],ah
   14000ea9c:	and    eax,0x26000000
	...
   14000eaad:	add    BYTE PTR [rdx+rax*1],al
   14000eab0:	add    BYTE PTR [rax],al
   14000eab2:	add    BYTE PTR [rax],al
   14000eab4:	add    BYTE PTR [rax],al
   14000eab6:	sub    eax,0x0
	...
   14000ead7:	add    BYTE PTR [rax],al
   14000ead9:	add    BYTE PTR [rip+0x34003100],dh        # 0x174011bdf
   14000eadf:	add    BYTE PTR [rdx],dh
   14000eae1:	add    BYTE PTR [rax],al
   14000eae3:	add    BYTE PTR [rsi],dh
	...
   14000eaf9:	add    BYTE PTR [rax+rax*1],ch
   14000eafc:	cmp    BYTE PTR [rax],al
   14000eafe:	and    BYTE PTR [rax],al
   14000eb00:	add    BYTE PTR [rax],al
   14000eb02:	add    BYTE PTR [rax],al
   14000eb04:	add    BYTE PTR [rax],al
   14000eb06:	sub    DWORD PTR [rax],eax
	...
   14000eb14:	add    BYTE PTR cs:[rdx],ah
   14000eb17:	add    BYTE PTR [rbx],dh
	...
   14000eb29:	add    BYTE PTR [rax],al
   14000eb2b:	add    BYTE PTR [rsi],bl
   14000eb2d:	add    BYTE PTR [rdi],bl
	...
   14000eb3f:	add    BYTE PTR [rcx],ah
	...
   14000eb4d:	add    BYTE PTR [rbx],ah
   14000eb4f:	add    BYTE PTR [rax],al
   14000eb51:	add    BYTE PTR [rax],al
   14000eb53:	add    BYTE PTR [rax],al
   14000eb55:	add    BYTE PTR [rax+rax*1],ah
   14000eb58:	and    eax,0x26000000
	...
   14000eb69:	add    BYTE PTR [rdx],ch
   14000eb6b:	add    BYTE PTR [rax],al
   14000eb6d:	add    BYTE PTR [rax],al
   14000eb6f:	add    BYTE PTR [rax],al
   14000eb71:	add    BYTE PTR [rip+0x0],ch        # 0x14000eb77
	...
   14000eb93:	add    BYTE PTR [rax],al
   14000eb95:	add    BYTE PTR [rip+0x34003100],dh        # 0x174011c9b
   14000eb9b:	add    BYTE PTR [rdx],dh
   14000eb9d:	add    BYTE PTR [rax],al
   14000eb9f:	add    BYTE PTR [rsi],dh
	...
   14000ebb5:	add    BYTE PTR [rax+rax*1],ch
   14000ebb8:	cmp    BYTE PTR [rax],al
   14000ebba:	and    BYTE PTR [rax],al
   14000ebbc:	add    BYTE PTR [rax],al
   14000ebbe:	add    BYTE PTR [rax],al
   14000ebc0:	add    BYTE PTR [rax],al
   14000ebc2:	sub    DWORD PTR [rax],eax
	...
   14000ebd0:	add    BYTE PTR cs:[rdx],ah
   14000ebd3:	add    BYTE PTR [rbx],dh
	...
   14000ebe5:	add    BYTE PTR [rax],al
   14000ebe7:	add    BYTE PTR [rbx],al
   14000ebe9:	add    al,BYTE PTR [rax]
   14000ebeb:	add    BYTE PTR [rsi],bl
   14000ebed:	add    BYTE PTR [rdi],bl
	...
   14000ebff:	add    bl,bl
	...
   14000ec0d:	add    BYTE PTR [rbx],ah
   14000ec0f:	add    BYTE PTR [rax],al
   14000ec11:	add    BYTE PTR [rax],al
   14000ec13:	add    BYTE PTR [rax],al
   14000ec15:	add    BYTE PTR [rax+rax*1],ah
   14000ec18:	and    eax,0x26000000
	...
   14000ec29:	add    BYTE PTR [rdx+rax*1],al
   14000ec2c:	add    BYTE PTR [rax],al
   14000ec2e:	add    BYTE PTR [rax],al
   14000ec30:	add    BYTE PTR [rax],al
   14000ec32:	sub    eax,0x0
	...
   14000ec53:	add    BYTE PTR [rax],al
   14000ec55:	add    BYTE PTR [rip+0x7020500],dh        # 0x14702f15b
   14000ec5b:	add    al,BYTE PTR [rsi]
   14000ec5d:	add    al,BYTE PTR [rax]
   14000ec5f:	add    BYTE PTR [rsi],dh
	...
   14000ec69:	add    bl,ah
	...
   14000ec73:	add    BYTE PTR [rax],al
   14000ec75:	add    BYTE PTR [rax+rax*1],ch
   14000ec78:	cmp    BYTE PTR [rax],al
   14000ec7a:	and    BYTE PTR [rax],al
   14000ec7c:	(bad)  
   14000ec7d:	add    BYTE PTR [rax],al
   14000ec7f:	add    BYTE PTR [rax],al
   14000ec81:	add    BYTE PTR [rcx],ch
	...
   14000ec8f:	add    BYTE PTR [rsi],ch
   14000ec91:	add    BYTE PTR [rdx],ah
   14000ec93:	add    BYTE PTR [rbx],dh
	...
   14000eca5:	add    BYTE PTR [rax],al
   14000eca7:	add    BYTE PTR [rbx],al
   14000eca9:	add    al,BYTE PTR [rax]
   14000ecab:	add    BYTE PTR [rsi],bl
   14000ecad:	add    BYTE PTR [rdi],bl
	...
   14000ecbf:	add    bl,bl
	...
   14000eccd:	add    BYTE PTR [rbx],ah
   14000eccf:	add    BYTE PTR [rax],al
   14000ecd1:	add    BYTE PTR [rax],al
   14000ecd3:	add    BYTE PTR [rax],al
   14000ecd5:	add    BYTE PTR [rax+rax*1],ah
   14000ecd8:	and    eax,0x26000000
	...
   14000ece9:	add    BYTE PTR [rdx+rax*1],al
   14000ecec:	add    BYTE PTR [rax],al
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	add    BYTE PTR [rax],al
   14000ecf2:	sub    eax,0x0
	...
   14000ecff:	add    BYTE PTR [rax],al
   14000ed01:	add    BYTE PTR [rbx],dh
   14000ed03:	add    al,BYTE PTR [rax]
	...
   14000ed15:	add    BYTE PTR [rip+0x7020500],dh        # 0x14702f21b
   14000ed1b:	add    al,BYTE PTR [rsi]
   14000ed1d:	add    al,BYTE PTR [rax]
   14000ed1f:	add    BYTE PTR [rsi],dh
	...
   14000ed29:	add    bl,ah
	...
   14000ed33:	add    BYTE PTR [rax],al
   14000ed35:	add    BYTE PTR [rax+rax*1],ch
   14000ed38:	cmp    BYTE PTR [rax],al
   14000ed3a:	and    BYTE PTR [rax],al
   14000ed3c:	(bad)  
   14000ed3d:	add    BYTE PTR [rax],al
   14000ed3f:	add    BYTE PTR [rax],al
   14000ed41:	add    BYTE PTR [rcx],ch
	...
   14000ed4f:	add    BYTE PTR [rsi],ch
   14000ed51:	add    BYTE PTR [rdx],ah
   14000ed53:	add    BYTE PTR [rbx],dh
	...
   14000ed65:	add    BYTE PTR [rax],al
   14000ed67:	add    BYTE PTR [rbx],al
   14000ed69:	add    al,BYTE PTR [rax]
   14000ed6b:	add    BYTE PTR [rsi],bl
   14000ed6d:	add    BYTE PTR [rdi],bl
	...
   14000ed7f:	add    bl,bl
	...
   14000ed8d:	add    BYTE PTR [rbx],ah
   14000ed8f:	add    BYTE PTR [rax],al
   14000ed91:	add    BYTE PTR [rax],al
   14000ed93:	add    BYTE PTR [rax],al
   14000ed95:	add    BYTE PTR [rax+rax*1],ah
   14000ed98:	and    eax,0x26000000
	...
   14000eda9:	add    BYTE PTR [rdx+rax*1],al
   14000edac:	add    BYTE PTR [rax],al
   14000edae:	add    BYTE PTR [rax],al
   14000edb0:	add    BYTE PTR [rax],al
   14000edb2:	sub    eax,0x0
	...
   14000edbf:	add    BYTE PTR [rax],al
   14000edc1:	add    BYTE PTR [rax],dh
   14000edc3:	add    al,BYTE PTR [rax]
	...
   14000edd5:	add    BYTE PTR [rip+0x7020500],dh        # 0x14702f2db
   14000eddb:	add    al,BYTE PTR [rsi]
   14000eddd:	add    al,BYTE PTR [rax]
   14000eddf:	add    BYTE PTR [rsi],dh
	...
   14000ede9:	add    bl,ah
	...
   14000edf3:	add    BYTE PTR [rax],al
   14000edf5:	add    BYTE PTR [rax+rax*1],ch
   14000edf8:	cmp    BYTE PTR [rax],al
   14000edfa:	and    BYTE PTR [rax],al
   14000edfc:	(bad)  
   14000edfd:	add    BYTE PTR [rax],al
   14000edff:	add    BYTE PTR [rax],al
   14000ee01:	add    BYTE PTR [rcx],ch
	...
   14000ee0f:	add    BYTE PTR [rsi],ch
   14000ee11:	add    BYTE PTR [rdx],ah
   14000ee13:	add    BYTE PTR [rbx],dh
	...
   14000ee25:	add    BYTE PTR [rax],al
   14000ee27:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010c2d
	...
   14000ee3d:	add    BYTE PTR [rcx],ah
	...
   14000ee4b:	add    BYTE PTR [rbx],ah
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    BYTE PTR [rax],al
   14000ee51:	add    BYTE PTR [rax],al
   14000ee53:	add    BYTE PTR [rax+rax*1],ah
   14000ee56:	and    eax,0x26000000
   14000ee5b:	add    BYTE PTR [rax],al
   14000ee5d:	add    BYTE PTR [rax],al
   14000ee5f:	add    BYTE PTR [rax],al
   14000ee61:	add    BYTE PTR [rdi],ah
   14000ee63:	add    BYTE PTR [rax],al
   14000ee65:	add    BYTE PTR [rax],ch
   14000ee67:	add    BYTE PTR [rdx],ch
   14000ee69:	add    BYTE PTR [rbx],ch
   14000ee6b:	add    BYTE PTR [rax],al
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rip+0x0],ch        # 0x14000ee75
   14000ee75:	add    BYTE PTR [rax],al
   14000ee77:	add    BYTE PTR [rdi],ch
   14000ee79:	add    BYTE PTR [rax],al
   14000ee7b:	add    BYTE PTR [rax],dh
	...
   14000ee91:	add    BYTE PTR [rax],al
   14000ee93:	add    BYTE PTR [rip+0x34003100],dh        # 0x174011f99
   14000ee99:	add    BYTE PTR [rdx],dh
   14000ee9b:	add    BYTE PTR [rax],al
   14000ee9d:	add    BYTE PTR [rsi],dh
   14000ee9f:	add    BYTE PTR [rax],al
   14000eea1:	add    BYTE PTR [rdi],dh
   14000eea3:	add    BYTE PTR [rax],al
   14000eea5:	add    BYTE PTR [rcx],bh
   14000eea7:	add    BYTE PTR [rax],al
   14000eea9:	add    BYTE PTR [rdx],bh
	...
   14000eeb3:	add    BYTE PTR [rax+rax*1],ch
   14000eeb6:	cmp    BYTE PTR [rax],al
   14000eeb8:	and    BYTE PTR [rax],al
   14000eeba:	add    BYTE PTR [rax],al
   14000eebc:	add    BYTE PTR [rax],al
   14000eebe:	add    BYTE PTR [rax],al
   14000eec0:	sub    DWORD PTR [rax],eax
	...
   14000eece:	add    BYTE PTR cs:[rdx],ah
   14000eed1:	add    BYTE PTR [rbx],dh
	...
   14000eee3:	add    BYTE PTR [rax],al
   14000eee5:	add    BYTE PTR [rdi+rdi*8+0x0],bh
   14000eee9:	add    BYTE PTR [rax],al
   14000eeeb:	add    BYTE PTR [rax],al
   14000eeed:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010cf3
	...
   14000ef03:	add    BYTE PTR [rcx],ah
	...
   14000ef11:	add    BYTE PTR [rbx],ah
   14000ef13:	add    BYTE PTR [rax],al
   14000ef15:	add    BYTE PTR [rax],al
   14000ef17:	add    BYTE PTR [rax],al
   14000ef19:	add    BYTE PTR [rax+rax*1],ah
   14000ef1c:	and    eax,0x26000000
   14000ef21:	add    BYTE PTR [rax],al
   14000ef23:	add    BYTE PTR [rax],al
   14000ef25:	add    BYTE PTR [rax],al
   14000ef27:	add    BYTE PTR [rdi],ah
   14000ef29:	add    BYTE PTR [rax],al
   14000ef2b:	add    BYTE PTR [rax],ch
   14000ef2d:	add    BYTE PTR [rdx],ch
   14000ef2f:	add    BYTE PTR [rbx],ch
   14000ef31:	add    BYTE PTR [rax],al
   14000ef33:	add    BYTE PTR [rax],al
   14000ef35:	add    BYTE PTR [rip+0x0],ch        # 0x14000ef3b
   14000ef3b:	add    BYTE PTR [rax],al
   14000ef3d:	add    BYTE PTR [rdi],ch
   14000ef3f:	add    BYTE PTR [rax],al
   14000ef41:	add    BYTE PTR [rax],dh
	...
   14000ef57:	add    BYTE PTR [rax],al
   14000ef59:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401205f
   14000ef5f:	add    BYTE PTR [rdx],dh
   14000ef61:	add    BYTE PTR [rax],al
   14000ef63:	add    BYTE PTR [rsi],dh
   14000ef65:	add    BYTE PTR [rax],al
   14000ef67:	add    BYTE PTR [rdi],dh
   14000ef69:	add    BYTE PTR [rax],al
   14000ef6b:	add    BYTE PTR [rcx],bh
   14000ef6d:	add    BYTE PTR [rax],al
   14000ef6f:	add    BYTE PTR [rdx],bh
	...
   14000ef79:	add    BYTE PTR [rax+rax*1],ch
   14000ef7c:	cmp    BYTE PTR [rax],al
   14000ef7e:	and    BYTE PTR [rax],al
   14000ef80:	add    BYTE PTR [rax],al
   14000ef82:	add    BYTE PTR [rax],al
   14000ef84:	add    BYTE PTR [rax],al
   14000ef86:	sub    DWORD PTR [rax],eax
	...
   14000ef94:	add    BYTE PTR cs:[rdx],ah
   14000ef97:	add    BYTE PTR [rbx],dh
	...
   14000efa9:	add    BYTE PTR [rax],al
   14000efab:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010db1
	...
   14000efc1:	add    BYTE PTR [rcx],ah
	...
   14000efcf:	add    BYTE PTR [rbx],ah
   14000efd1:	add    BYTE PTR [rax],al
   14000efd3:	add    BYTE PTR [rax],al
   14000efd5:	add    BYTE PTR [rax],al
   14000efd7:	add    BYTE PTR [rax+rax*1],ah
   14000efda:	and    eax,0x26000000
   14000efdf:	add    BYTE PTR [rax],al
   14000efe1:	add    BYTE PTR [rax],al
   14000efe3:	add    BYTE PTR [rax],al
   14000efe5:	add    BYTE PTR [rdi],ah
   14000efe7:	add    BYTE PTR [rax],al
   14000efe9:	add    BYTE PTR [rax],ch
   14000efeb:	add    BYTE PTR [rdx],ch
   14000efed:	add    BYTE PTR [rbx],ch
   14000efef:	add    BYTE PTR [rax],al
   14000eff1:	add    BYTE PTR [rax],al
   14000eff3:	add    BYTE PTR [rip+0x0],ch        # 0x14000eff9
   14000eff9:	add    BYTE PTR [rax],al
   14000effb:	add    BYTE PTR [rdi],ch
   14000effd:	add    BYTE PTR [rax],al
   14000efff:	add    BYTE PTR [rax],dh
	...
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401211d
   14000f01d:	add    BYTE PTR [rdx],dh
   14000f01f:	add    BYTE PTR [rax],al
   14000f021:	add    BYTE PTR [rsi],dh
   14000f023:	add    BYTE PTR [rax],al
   14000f025:	add    BYTE PTR [rdi],dh
   14000f027:	add    BYTE PTR [rax],al
   14000f029:	add    BYTE PTR [rcx],bh
   14000f02b:	add    BYTE PTR [rdx],bl
   14000f02d:	add    DWORD PTR [rdx],edi
	...
   14000f037:	add    BYTE PTR [rax+rax*1],ch
   14000f03a:	cmp    BYTE PTR [rax],al
   14000f03c:	and    BYTE PTR [rax],al
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	add    BYTE PTR [rax],al
   14000f042:	add    BYTE PTR [rax],al
   14000f044:	sub    DWORD PTR [rax],eax
	...
   14000f052:	add    BYTE PTR cs:[rdx],ah
   14000f055:	add    BYTE PTR [rbx],dh
	...
   14000f067:	add    BYTE PTR [rax],al
   14000f069:	add    al,dh
   14000f06b:	add    DWORD PTR [rax],eax
   14000f06d:	add    BYTE PTR [rax],al
   14000f06f:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010e75
	...
   14000f085:	add    BYTE PTR [rcx],ah
	...
   14000f093:	add    BYTE PTR [rbx],ah
   14000f095:	add    BYTE PTR [rax],al
   14000f097:	add    BYTE PTR [rax],al
   14000f099:	add    BYTE PTR [rax],al
   14000f09b:	add    BYTE PTR [rax+rax*1],ah
   14000f09e:	and    eax,0x26000000
   14000f0a3:	add    BYTE PTR [rax],al
   14000f0a5:	add    BYTE PTR [rax],al
   14000f0a7:	add    BYTE PTR [rax],al
   14000f0a9:	add    BYTE PTR [rdi],ah
   14000f0ab:	add    BYTE PTR [rax],al
   14000f0ad:	add    BYTE PTR [rax],ch
   14000f0af:	add    BYTE PTR [rdx],ch
   14000f0b1:	add    BYTE PTR [rbx],ch
   14000f0b3:	add    BYTE PTR [rax],al
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rip+0x0],ch        # 0x14000f0bd
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    BYTE PTR [rdi],ch
   14000f0c1:	add    BYTE PTR [rax],al
   14000f0c3:	add    BYTE PTR [rax],dh
   14000f0c5:	add    BYTE PTR [rax],al
   14000f0c7:	add    BYTE PTR [rax],al
   14000f0c9:	add    cl,dh
   14000f0cb:	add    DWORD PTR [rax],eax
	...
   14000f0d9:	add    BYTE PTR [rax],al
   14000f0db:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740121e1
   14000f0e1:	add    BYTE PTR [rdx],dh
   14000f0e3:	add    BYTE PTR [rax],al
   14000f0e5:	add    BYTE PTR [rsi],dh
   14000f0e7:	add    BYTE PTR [rax],al
   14000f0e9:	add    BYTE PTR [rdi],dh
   14000f0eb:	add    BYTE PTR [rax],al
   14000f0ed:	add    BYTE PTR [rcx],bh
   14000f0ef:	add    BYTE PTR [rax],al
   14000f0f1:	add    BYTE PTR [rdx],bh
	...
   14000f0fb:	add    BYTE PTR [rax+rax*1],ch
   14000f0fe:	cmp    BYTE PTR [rax],al
   14000f100:	and    BYTE PTR [rax],al
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	add    BYTE PTR [rax],al
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	sub    DWORD PTR [rax],eax
	...
   14000f116:	add    BYTE PTR cs:[rdx],ah
   14000f119:	add    BYTE PTR [rbx],dh
	...
   14000f12b:	add    BYTE PTR [rax],al
   14000f12d:	add    al,ch
   14000f12f:	add    DWORD PTR [rax],eax
   14000f131:	add    BYTE PTR [rax],al
   14000f133:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010f39
	...
   14000f149:	add    BYTE PTR [rcx],ah
	...
   14000f157:	add    BYTE PTR [rbx],ah
   14000f159:	add    BYTE PTR [rax],al
   14000f15b:	add    BYTE PTR [rax],al
   14000f15d:	add    BYTE PTR [rax],al
   14000f15f:	add    BYTE PTR [rax+rax*1],ah
   14000f162:	and    eax,0x26000000
   14000f167:	add    BYTE PTR [rax],al
   14000f169:	add    BYTE PTR [rax],al
   14000f16b:	add    BYTE PTR [rax],al
   14000f16d:	add    BYTE PTR [rdi],ah
   14000f16f:	add    BYTE PTR [rax],al
   14000f171:	add    BYTE PTR [rax],ch
   14000f173:	add    BYTE PTR [rdx],ch
   14000f175:	add    BYTE PTR [rbx],ch
   14000f177:	add    BYTE PTR [rax],al
   14000f179:	add    BYTE PTR [rax],al
   14000f17b:	add    BYTE PTR [rip+0x0],ch        # 0x14000f181
   14000f181:	add    BYTE PTR [rax],al
   14000f183:	add    BYTE PTR [rdi],ch
   14000f185:	add    BYTE PTR [rax],al
   14000f187:	add    BYTE PTR [rax],dh
   14000f189:	add    BYTE PTR [rax],al
   14000f18b:	add    BYTE PTR [rax],al
   14000f18d:	add    dh,ch
   14000f18f:	add    DWORD PTR [rax],eax
	...
   14000f19d:	add    BYTE PTR [rax],al
   14000f19f:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740122a5
   14000f1a5:	add    BYTE PTR [rdx],dh
   14000f1a7:	add    BYTE PTR [rax],al
   14000f1a9:	add    BYTE PTR [rsi],dh
   14000f1ab:	add    BYTE PTR [rax],al
   14000f1ad:	add    BYTE PTR [rdi],dh
   14000f1af:	add    BYTE PTR [rax],al
   14000f1b1:	add    BYTE PTR [rcx],bh
   14000f1b3:	add    BYTE PTR [rax],al
   14000f1b5:	add    BYTE PTR [rdx],bh
	...
   14000f1bf:	add    BYTE PTR [rax+rax*1],ch
   14000f1c2:	cmp    BYTE PTR [rax],al
   14000f1c4:	and    BYTE PTR [rax],al
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	add    BYTE PTR [rax],al
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	sub    DWORD PTR [rax],eax
	...
   14000f1da:	add    BYTE PTR cs:[rdx],ah
   14000f1dd:	add    BYTE PTR [rbx],dh
	...
   14000f1ef:	add    BYTE PTR [rax],al
   14000f1f1:	add    al,ch
   14000f1f3:	add    DWORD PTR [rax],eax
   14000f1f5:	add    BYTE PTR [rax],al
   14000f1f7:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f010ffd
	...
   14000f20d:	add    BYTE PTR [rcx],ah
	...
   14000f21b:	add    BYTE PTR [rbx],ah
   14000f21d:	add    BYTE PTR [rax],al
   14000f21f:	add    BYTE PTR [rax],al
   14000f221:	add    BYTE PTR [rax],al
   14000f223:	add    BYTE PTR [rax+rax*1],ah
   14000f226:	and    eax,0x26000000
   14000f22b:	add    BYTE PTR [rax],al
   14000f22d:	add    BYTE PTR [rax],al
   14000f22f:	add    BYTE PTR [rax],al
   14000f231:	add    BYTE PTR [rdi],ah
   14000f233:	add    BYTE PTR [rax],al
   14000f235:	add    BYTE PTR [rax],ch
   14000f237:	add    BYTE PTR [rdx],ch
   14000f239:	add    BYTE PTR [rbx],ch
   14000f23b:	add    BYTE PTR [rax],al
   14000f23d:	add    BYTE PTR [rax],al
   14000f23f:	add    BYTE PTR [rip+0x0],ch        # 0x14000f245
   14000f245:	add    BYTE PTR [rax],al
   14000f247:	add    BYTE PTR [rdi],ch
   14000f249:	add    BYTE PTR [rax],al
   14000f24b:	add    BYTE PTR [rax],dh
   14000f24d:	add    BYTE PTR [rax],al
   14000f24f:	add    BYTE PTR [rax],al
   14000f251:	add    cl,ch
   14000f253:	add    DWORD PTR [rax],eax
	...
   14000f261:	add    BYTE PTR [rax],al
   14000f263:	add    BYTE PTR [rip+0x34003100],dh        # 0x174012369
   14000f269:	add    BYTE PTR [rdx],dh
   14000f26b:	add    BYTE PTR [rax],al
   14000f26d:	add    BYTE PTR [rsi],dh
   14000f26f:	add    BYTE PTR [rax],al
   14000f271:	add    BYTE PTR [rdi],dh
   14000f273:	add    BYTE PTR [rax],al
   14000f275:	add    BYTE PTR [rcx],bh
   14000f277:	add    BYTE PTR [rax],al
   14000f279:	add    BYTE PTR [rdx],bh
	...
   14000f283:	add    BYTE PTR [rax+rax*1],ch
   14000f286:	cmp    BYTE PTR [rax],al
   14000f288:	and    BYTE PTR [rax],al
   14000f28a:	add    BYTE PTR [rax],al
   14000f28c:	add    BYTE PTR [rax],al
   14000f28e:	add    BYTE PTR [rax],al
   14000f290:	sub    DWORD PTR [rax],eax
	...
   14000f29e:	add    BYTE PTR cs:[rdx],ah
   14000f2a1:	add    BYTE PTR [rbx],dh
	...
   14000f2b3:	add    BYTE PTR [rax],al
   14000f2b5:	add    al,dh
   14000f2b7:	add    DWORD PTR [rax],eax
   14000f2b9:	add    BYTE PTR [rax],al
   14000f2bb:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0110c1
	...
   14000f2d1:	add    BYTE PTR [rcx],ah
	...
   14000f2df:	add    BYTE PTR [rbx],ah
   14000f2e1:	add    BYTE PTR [rax],al
   14000f2e3:	add    BYTE PTR [rax],al
   14000f2e5:	add    BYTE PTR [rax],al
   14000f2e7:	add    BYTE PTR [rax+rax*1],ah
   14000f2ea:	and    eax,0x26000000
   14000f2ef:	add    BYTE PTR [rax],al
   14000f2f1:	add    BYTE PTR [rax],al
   14000f2f3:	add    BYTE PTR [rax],al
   14000f2f5:	add    BYTE PTR [rdi],ah
   14000f2f7:	add    BYTE PTR [rax],al
   14000f2f9:	add    BYTE PTR [rax],ch
   14000f2fb:	add    BYTE PTR [rdx],ch
   14000f2fd:	add    BYTE PTR [rbx],ch
   14000f2ff:	add    BYTE PTR [rax],al
   14000f301:	add    BYTE PTR [rax],al
   14000f303:	add    BYTE PTR [rip+0x0],ch        # 0x14000f309
   14000f309:	add    BYTE PTR [rax],al
   14000f30b:	add    BYTE PTR [rdi],ch
   14000f30d:	add    BYTE PTR [rax],al
   14000f30f:	add    BYTE PTR [rax],dh
   14000f311:	add    BYTE PTR [rax],al
   14000f313:	add    BYTE PTR [rax],al
   14000f315:	add    bl,dh
   14000f317:	add    DWORD PTR [rax],eax
	...
   14000f325:	add    BYTE PTR [rax],al
   14000f327:	add    BYTE PTR [rip+0x34003100],dh        # 0x17401242d
   14000f32d:	add    BYTE PTR [rdx],dh
   14000f32f:	add    BYTE PTR [rax],al
   14000f331:	add    BYTE PTR [rsi],dh
   14000f333:	add    BYTE PTR [rax],al
   14000f335:	add    BYTE PTR [rdi],dh
   14000f337:	add    BYTE PTR [rax],al
   14000f339:	add    BYTE PTR [rcx],bh
   14000f33b:	add    BYTE PTR [rax],al
   14000f33d:	add    BYTE PTR [rdx],bh
	...
   14000f347:	add    BYTE PTR [rax+rax*1],ch
   14000f34a:	cmp    BYTE PTR [rax],al
   14000f34c:	and    BYTE PTR [rax],al
   14000f34e:	add    BYTE PTR [rax],al
   14000f350:	add    BYTE PTR [rax],al
   14000f352:	add    BYTE PTR [rax],al
   14000f354:	sub    DWORD PTR [rax],eax
	...
   14000f362:	add    BYTE PTR cs:[rdx],ah
   14000f365:	add    BYTE PTR [rbx],dh
	...
   14000f377:	add    BYTE PTR [rax],al
   14000f379:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01117f
	...
   14000f38f:	add    BYTE PTR [rcx],ah
	...
   14000f39d:	add    BYTE PTR [rbx],ah
   14000f39f:	add    ah,bl
   14000f3a1:	add    BYTE PTR [rax],al
   14000f3a3:	add    BYTE PTR [rax],al
   14000f3a5:	add    ch,bl
   14000f3a7:	add    BYTE PTR [rip+0x26000000],ah        # 0x16600f3ad
   14000f3ad:	add    BYTE PTR [rax],al
   14000f3af:	add    BYTE PTR [rax],al
   14000f3b1:	add    BYTE PTR [rax],al
   14000f3b3:	add    BYTE PTR [rdi],ah
   14000f3b5:	add    BYTE PTR [rax],al
   14000f3b7:	add    BYTE PTR [rax],ch
   14000f3b9:	add    BYTE PTR [rdx],ch
   14000f3bb:	add    BYTE PTR [rbx],ch
   14000f3bd:	add    BYTE PTR [rax],al
   14000f3bf:	add    BYTE PTR [rax],al
   14000f3c1:	add    BYTE PTR [rip+0x0],ch        # 0x14000f3c7
   14000f3c7:	add    BYTE PTR [rax],al
   14000f3c9:	add    BYTE PTR [rdi],ch
   14000f3cb:	add    BYTE PTR [rax],al
   14000f3cd:	add    BYTE PTR [rax],dh
	...
   14000f3db:	add    BYTE PTR [rax],al
   14000f3dd:	add    bh,bl
   14000f3df:	add    BYTE PTR [rax],al
   14000f3e1:	add    BYTE PTR [rax],al
   14000f3e3:	add    BYTE PTR [rax],al
   14000f3e5:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740124eb
   14000f3eb:	add    BYTE PTR [rdx],dh
   14000f3ed:	add    al,ah
   14000f3ef:	add    BYTE PTR [rsi],dh
   14000f3f1:	add    BYTE PTR [rax],al
   14000f3f3:	add    BYTE PTR [rdi],dh
   14000f3f5:	add    dl,ah
   14000f3f7:	add    BYTE PTR [rcx],bh
   14000f3f9:	add    BYTE PTR [rax],al
   14000f3fb:	add    BYTE PTR [rdx],bh
   14000f3fd:	add    BYTE PTR [rax],al
   14000f3ff:	add    ch,ah
   14000f401:	add    BYTE PTR [rax],al
   14000f403:	add    BYTE PTR [rax],al
   14000f405:	add    BYTE PTR [rax+rax*1],ch
   14000f408:	cmp    BYTE PTR [rax],al
   14000f40a:	and    BYTE PTR [rax],al
   14000f40c:	add    BYTE PTR [rax],al
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	add    BYTE PTR [rax],al
   14000f412:	sub    DWORD PTR [rax],eax
	...
   14000f420:	add    BYTE PTR cs:[rdx],ah
   14000f423:	add    BYTE PTR [rbx],dh
	...
   14000f435:	add    BYTE PTR [rax],al
   14000f437:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f01123d
	...
   14000f44d:	add    BYTE PTR [rcx],ah
	...
   14000f45b:	add    BYTE PTR [rbx],ah
   14000f45d:	add    ah,bl
   14000f45f:	add    BYTE PTR [rax],al
   14000f461:	add    BYTE PTR [rax],al
   14000f463:	add    BYTE PTR [rdx+0x2],al
   14000f466:	and    eax,0x26000000
   14000f46b:	add    BYTE PTR [rax],al
   14000f46d:	add    BYTE PTR [rax],al
   14000f46f:	add    BYTE PTR [rax],al
   14000f471:	add    BYTE PTR [rdi],ah
   14000f473:	add    BYTE PTR [rax],al
   14000f475:	add    BYTE PTR [rax],ch
   14000f477:	add    BYTE PTR [rdx],ch
   14000f479:	add    BYTE PTR [rbx],ch
   14000f47b:	add    BYTE PTR [rax],al
   14000f47d:	add    BYTE PTR [rax],al
   14000f47f:	add    BYTE PTR [rip+0x0],ch        # 0x14000f485
   14000f485:	add    BYTE PTR [rax],al
   14000f487:	add    BYTE PTR [rdi],ch
   14000f489:	add    BYTE PTR [rax],al
   14000f48b:	add    BYTE PTR [rax],dh
	...
   14000f499:	add    BYTE PTR [rax],al
   14000f49b:	add    bh,bl
   14000f49d:	add    BYTE PTR [rax],al
   14000f49f:	add    BYTE PTR [rax],al
   14000f4a1:	add    BYTE PTR [rax],al
   14000f4a3:	add    BYTE PTR [rip+0x34003100],dh        # 0x1740125a9
   14000f4a9:	add    BYTE PTR [rdx],dh
   14000f4ab:	add    al,ah
   14000f4ad:	add    BYTE PTR [rsi],dh
   14000f4af:	add    BYTE PTR [rax],al
   14000f4b1:	add    BYTE PTR [rdi],dh
   14000f4b3:	add    dl,ah
   14000f4b5:	add    BYTE PTR [rcx],bh
   14000f4b7:	add    BYTE PTR [rax],al
   14000f4b9:	add    BYTE PTR [rdx],bh
   14000f4bb:	add    BYTE PTR [rax],al
   14000f4bd:	add    ch,ah
   14000f4bf:	add    BYTE PTR [rax],al
   14000f4c1:	add    BYTE PTR [rax],al
   14000f4c3:	add    BYTE PTR [rax+rax*1],ch
   14000f4c6:	cmp    BYTE PTR [rax],al
   14000f4c8:	and    BYTE PTR [rax],al
   14000f4ca:	add    BYTE PTR [rax],al
   14000f4cc:	add    BYTE PTR [rax],al
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	sub    DWORD PTR [rax],eax
	...
   14000f4de:	add    BYTE PTR cs:[rdx],ah
   14000f4e1:	add    BYTE PTR [rbx],dh
	...
   14000f4f3:	add    BYTE PTR [rax],al
   14000f4f5:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0112fb
	...
   14000f50b:	add    BYTE PTR [rcx],ah
	...
   14000f519:	add    BYTE PTR [rbx],ah
   14000f51b:	add    ah,bl
   14000f51d:	add    BYTE PTR [rax],al
   14000f51f:	add    BYTE PTR [rax],al
   14000f521:	add    BYTE PTR [rdx+0x2],al
   14000f524:	jo     0x14000f528
   14000f526:	add    BYTE PTR [rax],al
   14000f528:	add    BYTE PTR es:[rax],al
   14000f52b:	add    BYTE PTR [rax],al
   14000f52d:	add    BYTE PTR [rax],al
   14000f52f:	add    BYTE PTR [rdi],ah
   14000f531:	add    BYTE PTR [rax],al
   14000f533:	add    BYTE PTR [rax],ch
   14000f535:	add    BYTE PTR [rdx],ch
   14000f537:	add    BYTE PTR [rbx],ch
   14000f539:	add    BYTE PTR [rax],al
   14000f53b:	add    BYTE PTR [rax],al
   14000f53d:	add    BYTE PTR [rip+0x0],ch        # 0x14000f543
   14000f543:	add    BYTE PTR [rax],al
   14000f545:	add    BYTE PTR [rdi],ch
   14000f547:	add    BYTE PTR [rax],al
   14000f549:	add    BYTE PTR [rax],dh
	...
   14000f557:	add    BYTE PTR [rax],al
   14000f559:	add    bh,bl
   14000f55b:	add    BYTE PTR [rax],al
   14000f55d:	add    BYTE PTR [rax],al
   14000f55f:	add    BYTE PTR [rax],al
   14000f561:	add    BYTE PTR [rip+0x34003100],dh        # 0x174012667
   14000f567:	add    BYTE PTR [rdx],dh
   14000f569:	add    al,ah
   14000f56b:	add    BYTE PTR [rsi],dh
   14000f56d:	add    BYTE PTR [rax],al
   14000f56f:	add    BYTE PTR [rdi],dh
   14000f571:	add    dl,ah
   14000f573:	add    BYTE PTR [rcx],bh
   14000f575:	add    BYTE PTR [rax],al
   14000f577:	add    BYTE PTR [rdx],bh
   14000f579:	add    BYTE PTR [rax],al
   14000f57b:	add    ch,ah
   14000f57d:	add    BYTE PTR [rax],al
   14000f57f:	add    BYTE PTR [rax],al
   14000f581:	add    BYTE PTR [rax+rax*1],ch
   14000f584:	cmp    BYTE PTR [rax],al
   14000f586:	and    BYTE PTR [rax],al
   14000f588:	add    BYTE PTR [rax],al
   14000f58a:	add    BYTE PTR [rax],al
   14000f58c:	add    BYTE PTR [rax],al
   14000f58e:	sub    DWORD PTR [rax],eax
	...
   14000f59c:	add    BYTE PTR cs:[rdx],ah
   14000f59f:	add    BYTE PTR [rbx],dh
	...
   14000f5b1:	add    BYTE PTR [rax],al
   14000f5b3:	add    BYTE PTR [rdi+0x0],ch
   14000f5b6:	jo     0x14000f5b8
   14000f5b8:	jno    0x14000f5ba
   14000f5ba:	add    BYTE PTR [rax],al
   14000f5bc:	add    BYTE PTR [rax],al
   14000f5be:	jae    0x14000f5c0
   14000f5c0:	jne    0x14000f5c2
   14000f5c2:	jbe    0x14000f5c4
   14000f5c4:	add    BYTE PTR [rax],al
   14000f5c6:	add    BYTE PTR [rax],al
   14000f5c8:	ja     0x14000f5ca
   14000f5ca:	add    BYTE PTR [rax],al
   14000f5cc:	js     0x14000f5ce
   14000f5ce:	add    BYTE PTR [rax],al
   14000f5d0:	add    BYTE PTR [rax],al
   14000f5d2:	add    BYTE PTR [rax],al
   14000f5d4:	jp     0x14000f5d6
   14000f5d6:	jnp    0x14000f5d8
   14000f5d8:	jl     0x14000f5da
	...
   14000f5e6:	and    eax,DWORD PTR [rax]
   14000f5e8:	jge    0x14000f5ea
   14000f5ea:	jle    0x14000f5ec
   14000f5ec:	jg     0x14000f5ee
	...
   14000f602:	add    BYTE PTR [rax],0x0
	...
   14000f621:	add    BYTE PTR [rbx+0x0],al
	...
   14000f62f:	add    BYTE PTR [rcx],dh
   14000f631:	add    BYTE PTR [rax+rax*1],dh
   14000f634:	xor    al,BYTE PTR [rax]
   14000f636:	test   BYTE PTR [rax],al
   14000f638:	test   DWORD PTR [rax],eax
   14000f63a:	xchg   BYTE PTR [rax],al
   14000f63c:	add    BYTE PTR [rax],al
   14000f63e:	mov    BYTE PTR [rax],al
   14000f640:	mov    DWORD PTR [rax],eax
   14000f642:	mov    al,BYTE PTR [rax]
   14000f644:	mov    eax,DWORD PTR [rax]
   14000f646:	mov    WORD PTR [rax],es
   14000f648:	lea    eax,[rax]
   14000f64a:	add    BYTE PTR [rax],al
   14000f64c:	add    BYTE PTR [rax],al
   14000f64e:	add    DWORD PTR [rax],0x790087
   14000f654:	jb     0x14000f656
   14000f656:	je     0x14000f658
   14000f658:	(bad)  
	...
   14000f665:	add    BYTE PTR [rax],al
   14000f667:	add    BYTE PTR [rsi],ch
   14000f669:	add    BYTE PTR [rdx],ah
   14000f66b:	add    BYTE PTR [rbx],dh
	...
   14000f67d:	add    BYTE PTR [rax],al
   14000f67f:	add    BYTE PTR [rdi+0x0],ch
   14000f682:	jo     0x14000f684
   14000f684:	jno    0x14000f686
   14000f686:	add    BYTE PTR [rax],al
   14000f688:	add    BYTE PTR [rax],al
   14000f68a:	jae    0x14000f68c
   14000f68c:	jne    0x14000f68e
   14000f68e:	jbe    0x14000f690
   14000f690:	add    BYTE PTR [rax],al
   14000f692:	add    BYTE PTR [rax],al
   14000f694:	ja     0x14000f696
   14000f696:	add    BYTE PTR [rax],al
   14000f698:	js     0x14000f69a
   14000f69a:	add    BYTE PTR [rax],al
   14000f69c:	add    BYTE PTR [rax],al
   14000f69e:	add    BYTE PTR [rax],al
   14000f6a0:	jp     0x14000f6a2
   14000f6a2:	jnp    0x14000f6a4
   14000f6a4:	jl     0x14000f6a6
	...
   14000f6b2:	and    eax,DWORD PTR [rax]
   14000f6b4:	jge    0x14000f6b6
   14000f6b6:	jle    0x14000f6b8
   14000f6b8:	jg     0x14000f6ba
	...
   14000f6ce:	add    BYTE PTR [rax],0x0
   14000f6d1:	add    BYTE PTR [rax],al
   14000f6d3:	add    BYTE PTR [rax],al
   14000f6d5:	add    BYTE PTR [rbx+0x1],cl
	...
   14000f6eb:	add    BYTE PTR [rax],al
   14000f6ed:	add    BYTE PTR [rbx+0x0],al
   14000f6f3:	add    BYTE PTR [rax],al
   14000f6f5:	add    BYTE PTR [rax],al
   14000f6f7:	add    BYTE PTR [rax],al
   14000f6f9:	add    BYTE PTR [rbp+0x34003101],cl
   14000f6ff:	add    BYTE PTR [rdx],dh
   14000f701:	add    BYTE PTR [rax+rax*1+0x860085],al
   14000f708:	add    BYTE PTR [rax],al
   14000f70a:	mov    BYTE PTR [rax],al
   14000f70c:	mov    DWORD PTR [rax],eax
   14000f70e:	mov    al,BYTE PTR [rax]
   14000f710:	mov    eax,DWORD PTR [rax]
   14000f712:	mov    WORD PTR [rax],es
   14000f714:	lea    eax,[rax]
   14000f716:	add    BYTE PTR [rax],al
   14000f718:	add    BYTE PTR [rax],al
   14000f71a:	add    DWORD PTR [rax],0x790087
   14000f720:	jb     0x14000f722
   14000f722:	je     0x14000f724
   14000f724:	(bad)  
	...
   14000f731:	add    BYTE PTR [rax],al
   14000f733:	add    BYTE PTR [rsi],ch
   14000f735:	add    BYTE PTR [rsi+0x1],dh
   14000f738:	jl     0x14000f73b
	...
   14000f74a:	add    BYTE PTR [rax],al
   14000f74c:	outs   dx,DWORD PTR ds:[rsi]
   14000f74d:	add    BYTE PTR [rax+0x0],dh
   14000f750:	jno    0x14000f752
   14000f752:	add    BYTE PTR [rax],al
   14000f754:	add    BYTE PTR [rax],al
   14000f756:	jae    0x14000f758
   14000f758:	jne    0x14000f75a
   14000f75a:	jbe    0x14000f75c
   14000f75c:	add    BYTE PTR [rax],al
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	ja     0x14000f762
   14000f762:	add    BYTE PTR [rax],al
   14000f764:	js     0x14000f766
   14000f766:	add    BYTE PTR [rax],al
   14000f768:	add    BYTE PTR [rax],al
   14000f76a:	add    BYTE PTR [rax],al
   14000f76c:	jp     0x14000f76e
   14000f76e:	jnp    0x14000f770
   14000f770:	jl     0x14000f772
	...
   14000f77e:	and    eax,DWORD PTR [rax]
   14000f780:	jge    0x14000f782
   14000f782:	jle    0x14000f784
   14000f784:	jg     0x14000f786
	...
   14000f79a:	add    BYTE PTR [rax],0x0
   14000f79d:	add    BYTE PTR [rax],al
   14000f79f:	add    BYTE PTR [rax],al
   14000f7a1:	add    BYTE PTR [rbx+0x1],cl
	...
   14000f7b7:	add    BYTE PTR [rax],al
   14000f7b9:	add    BYTE PTR [rbx+0x0],al
   14000f7bf:	add    BYTE PTR [rax],al
   14000f7c1:	add    BYTE PTR [rax],al
   14000f7c3:	add    BYTE PTR [rax],al
   14000f7c5:	add    BYTE PTR [rbp+0x34003101],cl
   14000f7cb:	add    BYTE PTR [rdx],dh
   14000f7cd:	add    BYTE PTR [rax+rax*1+0x860085],al
   14000f7d4:	add    BYTE PTR [rax],al
   14000f7d6:	mov    BYTE PTR [rax],al
   14000f7d8:	mov    DWORD PTR [rax],eax
   14000f7da:	mov    al,BYTE PTR [rax]
   14000f7dc:	mov    eax,DWORD PTR [rax]
   14000f7de:	mov    WORD PTR [rax],es
   14000f7e0:	lea    eax,[rax]
   14000f7e2:	add    BYTE PTR [rax],al
   14000f7e4:	add    BYTE PTR [rax],al
   14000f7e6:	add    DWORD PTR [rax],0x790087
   14000f7ec:	jb     0x14000f7ee
   14000f7ee:	je     0x14000f7f0
   14000f7f0:	(bad)  
	...
   14000f7fd:	add    BYTE PTR [rax],al
   14000f7ff:	add    BYTE PTR [rsi],ch
   14000f801:	add    BYTE PTR [rdx],ah
   14000f803:	add    BYTE PTR [rbx],dh
	...
   14000f815:	add    BYTE PTR [rax],al
   14000f817:	add    BYTE PTR [rdi+0x0],ch
   14000f81a:	jo     0x14000f81c
   14000f81c:	jno    0x14000f81e
   14000f81e:	add    BYTE PTR [rax],al
   14000f820:	add    BYTE PTR [rax],al
   14000f822:	jae    0x14000f824
   14000f824:	jne    0x14000f826
   14000f826:	jbe    0x14000f828
   14000f828:	add    BYTE PTR [rax],al
   14000f82a:	add    BYTE PTR [rax],al
   14000f82c:	ja     0x14000f82e
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	js     0x14000f832
   14000f832:	add    BYTE PTR [rax],al
   14000f834:	add    BYTE PTR [rax],al
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	jp     0x14000f83a
   14000f83a:	jnp    0x14000f83c
   14000f83c:	jl     0x14000f83e
	...
   14000f84a:	and    eax,DWORD PTR [rax]
   14000f84c:	jge    0x14000f84e
   14000f84e:	jle    0x14000f850
   14000f850:	jg     0x14000f852
	...
   14000f866:	add    BYTE PTR [rax],0x0
   14000f869:	add    BYTE PTR [rax],al
   14000f86b:	add    BYTE PTR [rax],al
   14000f86d:	add    BYTE PTR [rbx+0x1],cl
	...
   14000f87b:	add    BYTE PTR [rax],al
   14000f87d:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14000f884:	add    BYTE PTR [rax],al
   14000f886:	add    DWORD PTR [rax],0x0
	...
   14000f891:	add    BYTE PTR [rbp+0x34003101],cl
   14000f897:	add    BYTE PTR [rdx],dh
   14000f899:	add    BYTE PTR [rax+rax*1+0x860085],al
   14000f8a0:	add    BYTE PTR [rax],al
   14000f8a2:	mov    BYTE PTR [rax],al
   14000f8a4:	mov    DWORD PTR [rax],eax
   14000f8a6:	mov    al,BYTE PTR [rax]
   14000f8a8:	mov    eax,DWORD PTR [rax]
   14000f8aa:	mov    WORD PTR [rax],es
   14000f8ac:	lea    eax,[rax]
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	add    BYTE PTR [rax],al
   14000f8b2:	add    DWORD PTR [rax],0x790087
   14000f8b8:	jb     0x14000f8ba
   14000f8ba:	je     0x14000f8bc
   14000f8bc:	(bad)  
	...
   14000f8c9:	add    BYTE PTR [rax],al
   14000f8cb:	add    BYTE PTR [rsi],ch
   14000f8cd:	add    BYTE PTR [rsi+0x1],dh
   14000f8d0:	jl     0x14000f8d3
	...
   14000f8e2:	add    BYTE PTR [rax],al
   14000f8e4:	(bad)  
	...
   14000f8ed:	add    bh,dl
   14000f8ef:	add    BYTE PTR [rax],al
   14000f8f1:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0116f7
   14000f8f7:	add    cl,bl
	...
   14000f905:	add    dl,bl
   14000f907:	add    BYTE PTR [rcx],ah
	...
   14000f915:	add    BYTE PTR [rbx],ah
   14000f917:	add    ah,bl
   14000f919:	add    BYTE PTR [rax],al
   14000f91b:	add    BYTE PTR [rax],al
   14000f91d:	add    ch,bl
   14000f91f:	add    BYTE PTR [rip+0x26000000],ah        # 0x16600f925
   14000f925:	add    BYTE PTR [rax],al
   14000f927:	add    BYTE PTR [rax],al
   14000f929:	add    BYTE PTR [rax],al
   14000f92b:	add    BYTE PTR [rdi],ah
   14000f92d:	add    BYTE PTR [rax],al
   14000f92f:	add    BYTE PTR [rax],ch
   14000f931:	add    BYTE PTR [rdx],ch
   14000f933:	add    BYTE PTR [rbx],ch
   14000f935:	add    BYTE PTR [rax],al
   14000f937:	add    BYTE PTR [rax],al
   14000f939:	add    BYTE PTR [rip+0x0],ch        # 0x14000f93f
   14000f93f:	add    BYTE PTR [rax],al
   14000f941:	add    BYTE PTR [rdi],ch
   14000f943:	add    BYTE PTR [rax],al
   14000f945:	add    BYTE PTR [rax],dh
	...
   14000f94f:	add    BYTE PTR [rax],al
   14000f951:	add    dh,bl
   14000f953:	add    BYTE PTR [rax],al
   14000f955:	add    bh,bl
   14000f957:	add    BYTE PTR [rax],al
   14000f959:	add    BYTE PTR [rax],al
   14000f95b:	add    BYTE PTR [rax],al
   14000f95d:	add    BYTE PTR [rip+0x34003100],dh        # 0x174012a63
   14000f963:	add    BYTE PTR [rdx],dh
   14000f965:	add    al,ah
   14000f967:	add    BYTE PTR [rsi],dh
   14000f969:	add    cl,ah
   14000f96b:	add    BYTE PTR [rdi],dh
   14000f96d:	add    dl,ah
   14000f96f:	add    BYTE PTR [rcx],bh
   14000f971:	add    bl,ah
   14000f973:	add    BYTE PTR [rdx],bh
   14000f975:	add    ah,ah
   14000f977:	add    ch,ah
   14000f979:	add    BYTE PTR [rax],al
   14000f97b:	add    BYTE PTR [rax],al
   14000f97d:	add    BYTE PTR [rax+rax*1],ch
   14000f980:	cmp    BYTE PTR [rax],al
   14000f982:	and    BYTE PTR [rax],al
   14000f984:	(bad)  
   14000f985:	add    al,bl
   14000f987:	add    BYTE PTR [rax],al
   14000f989:	add    BYTE PTR [rcx],ch
	...
   14000f997:	add    BYTE PTR [rsi],ch
   14000f999:	add    BYTE PTR [rdx],ah
   14000f99b:	add    BYTE PTR [rbx],dh
	...
   14000f9ad:	add    BYTE PTR [rax],al
   14000f9af:	add    ch,dl
	...
   14000f9b9:	add    bh,dl
   14000f9bb:	add    BYTE PTR [rax],al
   14000f9bd:	add    BYTE PTR [rip+0x1f001e00],bl        # 0x15f0117c3
   14000f9c3:	add    cl,bl
	...
   14000f9d1:	add    dl,bl
   14000f9d3:	add    bl,bl
	...
   14000f9e1:	add    BYTE PTR [rbx],ah
   14000f9e3:	add    ah,bl
   14000f9e5:	add    BYTE PTR [rax],al
   14000f9e7:	add    BYTE PTR [rax],al
   14000f9e9:	add    ch,bl
   14000f9eb:	add    BYTE PTR [rip+0x26000000],ah        # 0x16600f9f1
   14000f9f1:	add    BYTE PTR [rax],al
   14000f9f3:	add    BYTE PTR [rax],al
   14000f9f5:	add    BYTE PTR [rax],al
   14000f9f7:	add    BYTE PTR [rdi],ah
   14000f9f9:	add    BYTE PTR [rax],al
   14000f9fb:	add    BYTE PTR [rax],ch
   14000f9fd:	add    BYTE PTR [rdx],ch
   14000f9ff:	add    BYTE PTR [rbx],ch
   14000fa01:	add    BYTE PTR [rax],al
   14000fa03:	add    BYTE PTR [rax],al
   14000fa05:	add    BYTE PTR [rip+0x0],ch        # 0x14000fa0b
   14000fa0b:	add    BYTE PTR [rax],al
   14000fa0d:	add    BYTE PTR [rdi],ch
   14000fa0f:	add    BYTE PTR [rax],al
   14000fa11:	add    BYTE PTR [rax],dh
	...
   14000fa1b:	add    BYTE PTR [rax],al
   14000fa1d:	add    dh,bl
   14000fa1f:	add    BYTE PTR [rax],al
   14000fa21:	add    bh,bl
   14000fa23:	add    BYTE PTR [rax],al
   14000fa25:	add    BYTE PTR [rax],al
   14000fa27:	add    BYTE PTR [rax],al
   14000fa29:	add    BYTE PTR [rip+0x34003100],dh        # 0x174012b2f
   14000fa2f:	add    BYTE PTR [rdx],dh
   14000fa31:	add    al,ah
   14000fa33:	add    BYTE PTR [rsi],dh
   14000fa35:	add    cl,ah
   14000fa37:	add    BYTE PTR [rdi],dh
   14000fa39:	add    dl,ah
   14000fa3b:	add    BYTE PTR [rcx],bh
   14000fa3d:	add    bl,ah
   14000fa3f:	add    BYTE PTR [rdx],bh
   14000fa41:	add    ah,ah
   14000fa43:	add    ch,ah
   14000fa45:	add    BYTE PTR [rax],al
   14000fa47:	add    BYTE PTR [rax],al
   14000fa49:	add    BYTE PTR [rax+rax*1],ch
   14000fa4c:	cmp    BYTE PTR [rax],al
   14000fa4e:	and    BYTE PTR [rax],al
   14000fa50:	(bad)  
   14000fa51:	add    al,bl
   14000fa53:	add    BYTE PTR [rax],al
   14000fa55:	add    BYTE PTR [rcx],ch
	...
   14000fa63:	add    BYTE PTR [rsi],ch
   14000fa65:	add    BYTE PTR [rdx],ah
   14000fa67:	add    BYTE PTR [rbx],dh
	...
   14000fa79:	add    BYTE PTR [rax],al
   14000fa7b:	add    BYTE PTR [rsi+0x2],al
   14000fa7e:	jo     0x14000fa80
   14000fa80:	jno    0x14000fa82
   14000fa82:	add    BYTE PTR [rax],al
   14000fa84:	add    BYTE PTR [rax],al
   14000fa86:	rex.W add sil,BYTE PTR [rbp+0x0]
   14000fa8a:	rex.WX add bl,BYTE PTR [rsi]
   14000fa8d:	add    BYTE PTR [rdi],bl
   14000fa8f:	add    BYTE PTR [rbx+0x2],cl
   14000fa92:	add    BYTE PTR [rax],al
   14000fa94:	js     0x14000fa96
   14000fa96:	add    BYTE PTR [rax],al
   14000fa98:	add    BYTE PTR [rax],al
   14000fa9a:	add    BYTE PTR [rax],al
   14000fa9c:	jp     0x14000fa9e
   14000fa9e:	rex.WRB add r9b,BYTE PTR [r14+0x2]
	...
   14000faae:	and    eax,DWORD PTR [rax]
   14000fab0:	rex.WRXB add r15b,BYTE PTR [r14+0x0]
   14000fab4:	jg     0x14000fab6
   14000fab6:	fld    QWORD PTR [rax]
   14000fab8:	and    eax,0x26000000
   14000fabd:	add    BYTE PTR [rax],al
   14000fabf:	add    BYTE PTR [rax],al
   14000fac1:	add    BYTE PTR [rax],al
   14000fac3:	add    BYTE PTR [rdi],ah
   14000fac5:	add    BYTE PTR [rax],al
   14000fac7:	add    BYTE PTR [rax],ch
   14000fac9:	add    BYTE PTR [rax+0x2],dl
   14000facc:	sub    eax,DWORD PTR [rax]
   14000face:	add    BYTE PTR [rax],al
   14000fad0:	add    BYTE PTR [rax],al
   14000fad2:	push   rdx
   14000fad3:	add    al,BYTE PTR [rax]
   14000fad5:	add    BYTE PTR [rax],al
   14000fad7:	add    BYTE PTR [rax],al
   14000fad9:	add    BYTE PTR [rdi],ch
   14000fadb:	add    BYTE PTR [rax],al
   14000fadd:	add    BYTE PTR [rax],dh
	...
   14000fae7:	add    BYTE PTR [rax],al
   14000fae9:	add    BYTE PTR [rbx+0x2],dl
   14000faec:	add    BYTE PTR [rax],al
   14000faee:	fild   WORD PTR [rax]
   14000faf0:	add    BYTE PTR [rax],al
   14000faf2:	add    BYTE PTR [rax],al
   14000faf4:	add    BYTE PTR [rax],al
   14000faf6:	push   rsp
   14000faf7:	add    dh,BYTE PTR [rcx]
   14000faf9:	add    BYTE PTR [rax+rax*1],dh
   14000fafc:	xor    al,BYTE PTR [rax]
   14000fafe:	push   rbp
   14000faff:	add    dl,BYTE PTR [rsi+0x2]
   14000fb02:	push   rdi
   14000fb03:	add    dh,BYTE PTR [rdi]
   14000fb05:	add    BYTE PTR [rcx+0x2],bl
   14000fb08:	pop    rdx
   14000fb09:	add    bl,BYTE PTR [rbx+0x2]
   14000fb0c:	pop    rsp
   14000fb0d:	add    bl,BYTE PTR [rbp+0x2]
   14000fb10:	pop    rsi
   14000fb11:	add    al,BYTE PTR [rax]
   14000fb13:	add    BYTE PTR [rax],al
   14000fb15:	add    BYTE PTR [rcx+0x2],dl
   14000fb18:	pop    rax
   14000fb19:	add    cl,BYTE PTR [rdx+rax*1+0x47]
   14000fb1d:	add    cl,BYTE PTR [rcx+0x2]
   14000fb20:	(bad)  
   14000fb21:	add    BYTE PTR [rcx],ch
	...
   14000fb2f:	add    BYTE PTR [rsi],ch
   14000fb31:	add    BYTE PTR [rsi+0x1],dh
   14000fb34:	jl     0x14000fb37
	...
   14000fb46:	add    BYTE PTR [rax],al
   14000fb48:	ins    DWORD PTR es:[rdi],dx
   14000fb49:	add    DWORD PTR [rax+0x0],esi
   14000fb4c:	jno    0x14000fb4e
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	add    BYTE PTR [rax],al
   14000fb52:	outs   dx,DWORD PTR ds:[rsi]
   14000fb53:	add    DWORD PTR [rbp+0x0],esi
   14000fb56:	jno    0x14000fb59
   14000fb58:	(bad)  
   14000fb59:	add    BYTE PTR [rdi],bl
   14000fb5b:	add    BYTE PTR [rdx+0x1],dh
   14000fb5e:	add    BYTE PTR [rax],al
   14000fb60:	js     0x14000fb62
   14000fb62:	add    BYTE PTR [rax],al
   14000fb64:	add    BYTE PTR [rax],al
   14000fb66:	add    BYTE PTR [rax],al
   14000fb68:	jp     0x14000fb6a
   14000fb6a:	je     0x14000fb6d
   14000fb6c:	jne    0x14000fb6f
	...
   14000fb7a:	and    eax,DWORD PTR [rax]
   14000fb7c:	ja     0x14000fb7f
   14000fb7e:	jle    0x14000fb80
   14000fb80:	jg     0x14000fb82
   14000fb82:	fld    QWORD PTR [rax]
   14000fb84:	and    eax,0x26000000
   14000fb89:	add    BYTE PTR [rax],al
   14000fb8b:	add    BYTE PTR [rax],al
   14000fb8d:	add    BYTE PTR [rax],al
   14000fb8f:	add    BYTE PTR [rdi],ah
   14000fb91:	add    BYTE PTR [rax],al
   14000fb93:	add    BYTE PTR [rax],ch
   14000fb95:	add    BYTE PTR [rax+0x1],bh
   14000fb98:	sub    eax,DWORD PTR [rax]
   14000fb9a:	add    BYTE PTR [rax],al
   14000fb9c:	add    BYTE PTR [rax],al
   14000fb9e:	jp     0x14000fba1
   14000fba0:	add    BYTE PTR [rax],al
   14000fba2:	add    BYTE PTR [rax],al
   14000fba4:	add    BYTE PTR [rax],al
   14000fba6:	(bad)  
   14000fba7:	add    BYTE PTR [rax],al
   14000fba9:	add    BYTE PTR [rax],dh
   14000fbab:	add    BYTE PTR [rax],al
   14000fbad:	add    dl,ch
   14000fbaf:	inc    BYTE PTR [rax]
   14000fbb1:	add    BYTE PTR [rax],al
   14000fbb3:	add    BYTE PTR [rax],al
   14000fbb5:	add    BYTE PTR [rbx+0x1],bh
   14000fbb8:	add    BYTE PTR [rax],al
   14000fbba:	fild   WORD PTR [rax]
   14000fbbc:	add    BYTE PTR [rax],al
   14000fbbe:	add    BYTE PTR [rax],al
   14000fbc0:	add    BYTE PTR [rax],al
   14000fbc2:	jge    0x14000fbc5
   14000fbc4:	xor    DWORD PTR [rax],eax
   14000fbc6:	xor    al,0x0
   14000fbc8:	xor    al,BYTE PTR [rax]
   14000fbca:	jle    0x14000fbcd
   14000fbcc:	jg     0x14000fbcf
   14000fbce:	add    BYTE PTR [rcx],0x37
   14000fbd1:	add    BYTE PTR [rdx-0x7bfe7cff],al
   14000fbd7:	add    DWORD PTR [rbp-0x78fe79ff],eax
   14000fbdd:	add    DWORD PTR [rax],eax
   14000fbdf:	add    BYTE PTR [rax],al
   14000fbe1:	add    BYTE PTR [rcx+0x1],bh
   14000fbe4:	add    DWORD PTR [rcx],0x16e0173
   14000fbea:	jo     0x14000fbed
   14000fbec:	(bad)  
   14000fbed:	add    BYTE PTR [rcx],ch
	...
   14000fbfb:	add    BYTE PTR [rsi],ch
   14000fbfd:	add    BYTE PTR [rsi+0x1],dh
   14000fc00:	jl     0x14000fc03
	...
   14000fc12:	add    BYTE PTR [rax],al
   14000fc14:	and    DWORD PTR [rdx],eax
   14000fc16:	cmp    al,0x2
   14000fc18:	xor    eax,0x8e027802
   14000fc1d:	add    dl,BYTE PTR [rax+rax*1+0x21d0211]
   14000fc24:	adc    BYTE PTR [rdx],al
   14000fc26:	mov    es,WORD PTR [rax]
   14000fc28:	xchg   esp,eax
   14000fc29:	add    al,BYTE PTR [rdi]
   14000fc2b:	add    esp,esi
   14000fc2d:	add    DWORD PTR [rcx+0x68026901],ecx
   14000fc33:	add    ch,BYTE PTR [rbp+0x2]
   14000fc36:	data16 add dl,BYTE PTR [rax]
   14000fc39:	add    BYTE PTR [rbp+0x2],dh
   14000fc3c:	mov    esp,0x3900b701
   14000fc41:	add    DWORD PTR [rbx],esp
   14000fc43:	add    bh,BYTE PTR [rdi+0x7700b701]
   14000fc49:	add    al,BYTE PTR [rbx-0x7ff02fe]
   14000fc4f:	add    BYTE PTR [rdx+rax*1+0x23f01e5],al
   14000fc56:	add    bl,BYTE PTR ds:[rdi+0x2]
   14000fc5a:	cwde   
   14000fc5b:	add    BYTE PTR [rax+0x1],al
   14000fc5e:	mov    ch,0x1
   14000fc60:	mov    dl,0x0
   14000fc62:	cmp    DWORD PTR [rcx],eax
   14000fc64:	mov    ecx,0xad01b101
   14000fc69:	add    BYTE PTR [rdi-0x2ff5b00],dh
   14000fc6f:	add    dh,cl
   14000fc71:	add    DWORD PTR [rcx],edi
   14000fc73:	add    ecx,ecx
   14000fc75:	add    DWORD PTR [rdi-0x3afe43ff],edi
   14000fc7b:	add    ebp,edi
   14000fc7d:	add    dl,cl
   14000fc7f:	add    DWORD PTR [rcx-0x38fea4ff],ebp
   14000fc85:	add    eax,edi
   14000fc87:	add    BYTE PTR [rdi+0x1],bl
   14000fc8a:	mov    esp,0xd201db00
   14000fc8f:	add    edx,esi
   14000fc91:	add    DWORD PTR [rbx-0x40ff6a00],ebp
   14000fc97:	add    esi,ecx
   14000fc99:	add    BYTE PTR [rsi-0x2bfe7000],bh
   14000fc9f:	add    DWORD PTR [rax],eax
   14000fca1:	add    BYTE PTR [rdi-0x10ff0800],dh
   14000fca7:	add    ebp,edx
   14000fca9:	add    ebp,ebp
   14000fcab:	add    BYTE PTR [rcx-0x66fe76ff],bl
   14000fcb1:	add    DWORD PTR [rbx+0x1],ecx
   14000fcb4:	rol    BYTE PTR [rcx],1
   14000fcb6:	test   DWORD PTR [rax],0xce0200
   14000fcbc:	xchg   ecx,eax
   14000fcbd:	add    dh,cl
   14000fcbf:	add    BYTE PTR [rsi],bh
   14000fcc1:	add    BYTE PTR [rcx-0x31fe04ff],bl
   14000fcc7:	add    BYTE PTR [rax],al
   14000fcc9:	add    bh,bh
   14000fccb:	add    DWORD PTR [rax],eax
   14000fccd:	add    BYTE PTR [rax+rax*1+0xce0000],bh
   14000fcd4:	(bad)  
   14000fcd5:	add    BYTE PTR [rax+rax*1+0x3e00ce],bh
   14000fcdc:	ds add al,bh
   14000fcdf:	add    esp,ecx
   14000fce1:	add    DWORD PTR [rcx-0x31ffc1ff],esp
   14000fce7:	add    cl,bh
   14000fce9:	add    esi,ecx
   14000fceb:	add    BYTE PTR [rdi-0x68fd79fe],al
   14000fcf1:	add    DWORD PTR [rax],eax
   14000fcf3:	add    BYTE PTR [rax],al
   14000fcf5:	add    BYTE PTR [rdx-0x65ffc1ff],bl
   14000fcfb:	add    ebx,ecx
   14000fcfd:	add    DWORD PTR [rsi],edi
   14000fcff:	add    BYTE PTR [rax+rax*1+0x3e01fa],dl
   14000fd06:	mov    ebx,0x15003e00
   14000fd0b:	add    DWORD PTR [rdx-0x63fe5cff],ebx
   14000fd11:	add    DWORD PTR [rdx],ebp
   14000fd13:	add    DWORD PTR [rcx],ebx
   14000fd15:	add    DWORD PTR [rcx+0x9401],ecx
   14000fd1b:	add    BYTE PTR [rax],al
   14000fd1d:	add    BYTE PTR [rax],al
   14000fd1f:	add    BYTE PTR [rsi-0x55ffc1ff],ah
   14000fd25:	add    BYTE PTR [rsi],bh
   14000fd27:	add    BYTE PTR [rax+rax*1+0x127003e],dh
   14000fd2e:	add    al,BYTE PTR [rdx]
   14000fd30:	sub    BYTE PTR [rcx],al
   14000fd32:	add    al,0x1
   14000fd34:	sub    DWORD PTR [rcx],eax
   14000fd36:	add    BYTE PTR ds:[rax+0x3e01f702],cl
   14000fd3d:	add    BYTE PTR [rsi],bh
   14000fd3f:	add    BYTE PTR [rsi],bh
   14000fd41:	add    BYTE PTR [rsi+0x2b020200],dh
   14000fd47:	add    DWORD PTR [rdx+0x3e003e01],ecx
   14000fd4d:	add    ah,cl
   14000fd4f:	add    ebx,ecx
   14000fd51:	add    esi,ecx
   14000fd53:	add    BYTE PTR [rdx+0x1],ch
   14000fd56:	jbe    0x14000fd5a
   14000fd58:	push   0x1
   14000fd5a:	add    BYTE PTR ds:[rdi+0x201f600],ah
   14000fd61:	add    bh,BYTE PTR [rsi]
   14000fd63:	add    BYTE PTR [rsi],bh
   14000fd65:	add    BYTE PTR [rdx+0x1],al
   14000fd68:	add    BYTE PTR ds:[rcx],ch
   14000fd6b:	add    bh,BYTE PTR [rcx+rax*1+0x640063]
   14000fd72:	pop    rbp
   14000fd73:	add    dh,cl
   14000fd75:	add    BYTE PTR [rsi],bh
   14000fd77:	add    BYTE PTR [rcx+rax*1-0x32],ah
   14000fd7b:	add    dh,bh
   14000fd7d:	add    esi,ecx
   14000fd7f:	add    BYTE PTR [rsi+0x0],bl
   14000fd82:	add    BYTE PTR ds:[rsi],bh
   14000fd85:	add    dh,cl
   14000fd87:	add    BYTE PTR [rsi],bh
   14000fd89:	add    BYTE PTR [rsi],bh
   14000fd8b:	add    BYTE PTR [rdi+0x0],bl
   14000fd8e:	(bad)  
   14000fd8f:	add    BYTE PTR [rsi],bh
   14000fd91:	add    BYTE PTR [rcx+0x0],ah
   14000fd94:	push   rsi
   14000fd95:	add    BYTE PTR [rsi],bh
   14000fd97:	add    BYTE PTR [rdx+0x0],bl
   14000fd9a:	in     eax,dx
   14000fd9b:	add    DWORD PTR [rsi],edi
   14000fd9d:	add    BYTE PTR [rbx+0x0],bl
   14000fda0:	mov    esp,0x5c01ec00
   14000fda5:	add    BYTE PTR [rbx+0x1],ah
   14000fda8:	add    BYTE PTR ds:[rcx+0x1],ah
   14000fdac:	ins    BYTE PTR es:[rdi],dx
   14000fdad:	add    BYTE PTR [rsi],bh
   14000fdaf:	add    bl,ah
   14000fdb1:	add    DWORD PTR [rbp+0x1],ebx
   14000fdb4:	repnz add BYTE PTR [rcx+0x1],bl
   14000fdb8:	test   DWORD PTR [rax],0x14b0139
   14000fdbe:	(bad)  
   14000fdbf:	add    DWORD PTR [rsi+0x0],esp
   14000fdc2:	push   0xffffffffce013900
   14000fdc7:	add    BYTE PTR [rsi],bh
   14000fdc9:	add    dh,cl
   14000fdcb:	add    BYTE PTR [rsi+0x3e010400],dh
   14000fdd1:	add    dh,cl
   14000fdd3:	add    dh,cl
   14000fdd5:	add    dh,cl
   14000fdd7:	add    bh,ch
   14000fdd9:	add    BYTE PTR [rsi],bh
   14000fddb:	add    BYTE PTR [rdx+0x0],ah
   14000fdde:	mov    dh,0x0
   14000fde0:	cmp    DWORD PTR [rcx],eax
   14000fde2:	cmp    DWORD PTR [rcx],eax
   14000fde4:	add    BYTE PTR ds:[rsi+0x0],ch
   14000fde8:	push   0x1
   14000fdea:	rex.W add BYTE PTR [rsi],dil
   14000fded:	add    dh,cl
   14000fdef:	add    BYTE PTR [rbp+0x0],al
   14000fdf2:	add    BYTE PTR ds:[rsi],bh
   14000fdf5:	add    DWORD PTR [rsi+0x0],eax
   14000fdf8:	add    BYTE PTR ds:[rsi],bh
   14000fdfb:	add    BYTE PTR [rdi+0x0],al
   14000fdfe:	add    al,0x1
   14000fe00:	(bad)  
   14000fe01:	add    BYTE PTR [rsi],bh
   14000fe03:	add    dh,dh
   14000fe05:	add    BYTE PTR [rcx+0x3e024501],cl
   14000fe0b:	add    BYTE PTR [rsi],bh
   14000fe0d:	add    ah,cl
   14000fe0f:	add    DWORD PTR [rax],eax
   14000fe11:	add    BYTE PTR [rdx+0x0],cl
   14000fe14:	(bad)  
   14000fe15:	add    BYTE PTR [rsi],bh
   14000fe17:	add    BYTE PTR [rdi+0x0],cl
   14000fe1a:	retf   
   14000fe1b:	add    DWORD PTR [rax],eax
   14000fe1d:	add    dh,cl
   14000fe1f:	add    BYTE PTR [rdx],al
   14000fe21:	add    dh,BYTE PTR [rip+0x3e00ce01]        # 0x17e01cc28
   14000fe27:	add    BYTE PTR [rdx+0x1],ch
   14000fe2a:	sub    eax,0x11902
   14000fe2f:	add    BYTE PTR [rcx],bl
   14000fe31:	add    DWORD PTR [rip+0x3e01],esi        # 0x140013c38
   14000fe37:	add    BYTE PTR [rcx+rax*1],bl
   14000fe3a:	xchg   ebx,eax
   14000fe3b:	add    DWORD PTR [rcx],ebx
   14000fe3d:	add    DWORD PTR [rcx],ebx
   14000fe3f:	add    DWORD PTR [rax],eax
   14000fe41:	add    BYTE PTR [rip+0x19101],dh        # 0x140028f48
   14000fe47:	add    dh,cl
   14000fe49:	add    BYTE PTR [rdx],dh
   14000fe4b:	add    DWORD PTR [rcx],ebx
   14000fe4d:	add    DWORD PTR [rcx+rax*1],esi
   14000fe50:	push   rdi
   14000fe51:	add    edi,ebx
   14000fe53:	add    DWORD PTR [rcx+rax*1+0x3e],edx
   14000fe57:	add    BYTE PTR [rsi],bh
   14000fe59:	add    BYTE PTR [rbp+0x1],dl
   14000fe5c:	ins    BYTE PTR es:[rdi],dx
   14000fe5d:	add    BYTE PTR [rcx+0x1],dl
   14000fe60:	sbb    DWORD PTR [rcx],eax
   14000fe62:	sbb    DWORD PTR [rcx],eax
   14000fe64:	(bad)  
   14000fe65:	add    BYTE PTR [rsi],ch
   14000fe67:	add    DWORD PTR [rip+0x3e01],esi        # 0x140013c6e
   14000fe6d:	add    BYTE PTR [rdx+0x1],cl
   14000fe70:	xor    BYTE PTR [rcx],al
   14000fe72:	sbb    DWORD PTR [rcx],eax
   14000fe74:	sbb    DWORD PTR [rcx],eax
   14000fe76:	cmp    al,BYTE PTR [rcx]
   14000fe78:	cmp    al,0x1
   14000fe7a:	add    BYTE PTR ds:[rip+0x3e000001],dh        # 0x17e00fe82
   14000fe81:	add    BYTE PTR [rsi],bh
   14000fe83:	add    BYTE PTR [rcx],bl
   14000fe85:	add    DWORD PTR [rcx],ebx
   14000fe87:	add    DWORD PTR [rcx+rax*1+0x19],eax
   14000fe8b:	add    DWORD PTR [rcx],ebx
   14000fe8d:	add    DWORD PTR [rip+0x2012c01],ebp        # 0x142022a94
   14000fe93:	add    dh,BYTE PTR [rdi]
   14000fe95:	add    DWORD PTR [rsi+0x0],ebp
   14000fe98:	mov    cl,0x0
   14000fe9a:	add    BYTE PTR [rax],al
   14000fe9c:	rex.RXB add DWORD PTR [r8],r8d
   14000fe9f:	add    BYTE PTR [rsi],bh
   14000fea1:	add    BYTE PTR [rcx],bh
   14000fea3:	add    cl,BYTE PTR [rdx]
   14000fea5:	add    dh,BYTE PTR [rdx+rax*1]
   14000fea8:	add    QWORD PTR [rcx],rbx
   14000feab:	add    DWORD PTR [rcx],ebp
   14000fead:	add    ah,BYTE PTR [rcx]
   14000feaf:	add    DWORD PTR [rbx+0x2],esi
   14000feb2:	xor    DWORD PTR [rdx],eax
   14000feb4:	add    BYTE PTR [rax],al
   14000feb6:	add    BYTE PTR [rax],al
   14000feb8:	add    al,BYTE PTR [rdx]
   14000feba:	add    BYTE PTR [rax],al
   14000febc:	add    DWORD PTR [rdx],eax
   14000febe:	or     eax,DWORD PTR [rdx]
   14000fec0:	add    BYTE PTR [rax],al
   14000fec2:	add    BYTE PTR [rax],al
   14000fec4:	add    al,BYTE PTR [rdx]
   14000fec6:	add    BYTE PTR [rax],al
   14000fec8:	add    BYTE PTR [rax],al
   14000feca:	or     al,BYTE PTR [rdx]
	...
   14000fed4:	mov    ebx,0x20a01
   14000fed9:	add    ch,ah
   14000fedb:	add    DWORD PTR [rax],eax
   14000fedd:	add    BYTE PTR [rax],al
   14000fedf:	add    BYTE PTR [rax],al
   14000fee1:	add    BYTE PTR [rcx],al
   14000fee3:	add    cl,BYTE PTR [rbx]
   14000fee5:	add    al,BYTE PTR [rax]
   14000fee7:	add    BYTE PTR [rax],al
   14000fee9:	add    BYTE PTR [rax],al
   14000feeb:	add    BYTE PTR [rax],al
   14000feed:	add    BYTE PTR [rcx],al
   14000feef:	add    cl,BYTE PTR [rbx]
   14000fef1:	add    dl,BYTE PTR [rip+0x17021602]        # 0x1570314f9
   14000fef7:	add    bl,BYTE PTR [rax]
   14000fef9:	add    bl,BYTE PTR [rdx+rax*1]
   14000fefc:	sbb    DWORD PTR [rdx],eax
   14000fefe:	sbb    al,BYTE PTR [rdx]
	...
   14000ff0c:	add    BYTE PTR [rax],al
   14000ff0e:	add    al,BYTE PTR [r8]
	...
   14000ff1d:	add    BYTE PTR [rdx+0x1],ch
   14000ff20:	add    al,BYTE PTR [r10+r8*1+0x15]
   14000ff25:	add    dl,BYTE PTR [rsi]
   14000ff27:	add    dl,BYTE PTR [rdi]
   14000ff29:	add    bl,BYTE PTR [rax]
   14000ff2b:	add    bl,BYTE PTR [rdx+rax*1]
   14000ff2e:	sbb    DWORD PTR [rdx],eax
   14000ff30:	sbb    al,BYTE PTR [rdx]
   14000ff32:	cmp    DWORD PTR [rdx],eax
	...
   14000ff3c:	add    BYTE PTR [rax],al
   14000ff3e:	(bad)  
   14000ff3f:	add    BYTE PTR [rax],al
   14000ff41:	add    BYTE PTR [rax],al
   14000ff43:	add    BYTE PTR [rdx],bh
   14000ff45:	add    bh,BYTE PTR [rbx]
   14000ff47:	add    dl,BYTE PTR [rip+0x17021602]        # 0x15703154f
   14000ff4d:	add    bl,BYTE PTR [rax]
   14000ff4f:	add    bl,BYTE PTR [rdx+rax*1]
   14000ff52:	sbb    DWORD PTR [rdx],eax
   14000ff54:	sbb    al,BYTE PTR [rdx]
	...
   14000ffca:	mov    eax,0x1
	...
   14000fff7:	add    BYTE PTR [rcx+0x2],al
	...
   14001000a:	jno    0x14001000e
   14001000c:	jb     0x140010010
   14001000e:	adc    eax,0x17021602
   140010013:	add    bl,BYTE PTR [rax]
   140010015:	add    bl,BYTE PTR [rdx+rax*1]
   140010018:	sbb    DWORD PTR [rdx],eax
   14001001a:	sbb    al,BYTE PTR [rdx]
	...
   1400100c0:	and    al,0x0
   1400100c2:	cmp    al,0x0
   1400100c4:	add    eax,0x1f002400
   1400100c9:	add    BYTE PTR [rdi],al
   1400100cb:	add    BYTE PTR [rdx+0x0],al
   1400100ce:	adc    BYTE PTR [rax],al
   1400100d0:	and    DWORD PTR [rax],eax
   1400100d2:	(bad)  
   1400100d3:	add    BYTE PTR [rax+rax*1],ah
   1400100d6:	(bad)  
   1400100d7:	add    BYTE PTR [rdi],al
   1400100d9:	add    BYTE PTR [rdi],al
   1400100db:	add    BYTE PTR [rdi],al
   1400100dd:	add    BYTE PTR [rcx],ah
   1400100df:	add    BYTE PTR [rax+rax*1],ah
   1400100e2:	(bad)  
   1400100e3:	add    BYTE PTR [rdi],dh
   1400100e5:	add    BYTE PTR [rax],cl
   1400100e7:	add    BYTE PTR [rax+rax*1],ah
   1400100ea:	(bad)  
   1400100eb:	add    BYTE PTR [rdi],al
   1400100ed:	add    BYTE PTR [rax+rax*1],ah
   1400100f0:	(bad)  
   1400100f1:	add    BYTE PTR [rdi],dh
   1400100f3:	add    BYTE PTR [rdi],al
   1400100f5:	add    BYTE PTR [rdi],al
   1400100f7:	add    BYTE PTR [rax+rax*1],ah
   1400100fa:	and    al,0x0
   1400100fc:	adc    DWORD PTR [rax],eax
   1400100fe:	(bad)  
   1400100ff:	add    BYTE PTR [rcx],ah
   140010101:	add    BYTE PTR [rcx],ah
   140010103:	add    BYTE PTR [rdi],al
   140010105:	add    BYTE PTR [rdi],al
   140010107:	add    BYTE PTR [rdi],al
   140010109:	add    BYTE PTR [rax+rax*1],ah
   14001010c:	(bad)  
   14001010d:	add    BYTE PTR [rax+rax*1],ah
   140010110:	(bad)  
   140010111:	add    BYTE PTR [rdi],al
   140010113:	add    BYTE PTR [rdx],ah
   140010115:	add    BYTE PTR [rax+rax*1],bh
   140010118:	(bad)  
   140010119:	add    BYTE PTR [rax+rax*1],ah
   14001011c:	(bad)  
   14001011d:	add    BYTE PTR [rdx+0x0],al
   140010120:	cmp    al,0x0
   140010122:	and    DWORD PTR [rax],eax
   140010124:	(bad)  
   140010125:	add    BYTE PTR [rcx],ah
   140010127:	add    BYTE PTR [rdi],al
   140010129:	add    BYTE PTR [rbp+0x0],cl
   14001012c:	and    DWORD PTR [rax],eax
   14001012e:	or     BYTE PTR [rax],al
   140010130:	cmp    al,0x0
   140010132:	adc    al,0x0
   140010134:	and    al,0x0
   140010136:	and    DWORD PTR [rax],eax
   140010138:	add    DWORD PTR [rax],eax
   14001013a:	and    al,0x0
   14001013c:	or     BYTE PTR [rax],al
   14001013e:	and    DWORD PTR [rax],eax
   140010140:	(bad)  
   140010141:	add    BYTE PTR [rcx],ah
   140010143:	add    BYTE PTR [rdx],al
   140010145:	add    BYTE PTR [rdi],dh
   140010147:	add    BYTE PTR [rcx],ah
   140010149:	add    BYTE PTR [rcx],ah
   14001014b:	add    BYTE PTR [rip+0x18000100],bl        # 0x158010251
   140010151:	add    BYTE PTR [rcx],ah
   140010153:	add    BYTE PTR [rax],cl
   140010155:	add    BYTE PTR [rcx],al
   140010157:	add    bh,bh
   140010159:	inc    DWORD PTR [rdx]
   14001015b:	add    BYTE PTR [rdi],dh
   14001015d:	add    bh,bh
   14001015f:	jmp    QWORD PTR [rip+0x24000800]        # 0x164010965
   140010165:	add    bh,bh
   140010167:	(bad)  
   140010168:	(bad)  
   140010169:	(bad)  
   14001016a:	(bad)  
   14001016b:	dec    DWORD PTR [rax]
   14001016d:	add    BYTE PTR [rax+rax*1],ah
   140010170:	and    al,0x0
   140010172:	and    DWORD PTR [rax],eax
   140010174:	(bad)  
   140010175:	add    BYTE PTR [rdx],al
   140010177:	add    BYTE PTR [rax],dh
   140010179:	add    BYTE PTR [rcx],al
   14001017b:	add    BYTE PTR [rax+rax*1],ah
   14001017e:	(bad)  
   14001017f:	add    BYTE PTR [rax+rax*1],ah
   140010182:	and    al,0x0
   140010184:	cmp    al,0x0
   140010186:	and    al,0x0
   140010188:	and    DWORD PTR [rax],eax
   14001018a:	adc    DWORD PTR [rax],eax
   14001018c:	cmp    al,0x0
   14001018e:	or     BYTE PTR [rax],al
   140010190:	add    BYTE PTR [rax],al
   140010192:	and    al,0x0
   140010194:	or     BYTE PTR [rax],al
   140010196:	add    al,BYTE PTR [rax]
   140010198:	(bad)  
   140010199:	(bad)  
   14001019a:	cmp    al,0x0
   14001019c:	cmp    al,0x0
   14001019e:	or     BYTE PTR [rax],al
   1400101a0:	(bad)  
   1400101a1:	add    bh,bh
   1400101a3:	(bad)  
   1400101a4:	cmp    eax,0x8000700
   1400101a9:	add    BYTE PTR [rax],cl
   1400101ab:	add    BYTE PTR [rcx],ah
   1400101ad:	add    BYTE PTR [rax],cl
   1400101af:	add    bh,bh
   1400101b1:	dec    DWORD PTR [rax]
   1400101b3:	add    BYTE PTR [rax+rax*1],bh
   1400101b6:	(bad)  
   1400101b7:	add    BYTE PTR [rax],dh
   1400101b9:	add    BYTE PTR [rax+rax*1],bh
   1400101bc:	adc    al,0x0
   1400101be:	xor    BYTE PTR [rax],al
   1400101c0:	or     BYTE PTR [rax],al
   1400101c2:	and    al,0x0
   1400101c4:	or     BYTE PTR [rax],al
   1400101c6:	or     al,BYTE PTR [rax]
   1400101c8:	or     BYTE PTR [rax],al
   1400101ca:	cmp    eax,0x37004f00
   1400101cf:	add    bh,bh
   1400101d1:	(bad)  
   1400101d2:	(bad)  
   1400101d3:	push   QWORD PTR [rax]
   1400101d5:	add    BYTE PTR [rax],cl
   1400101d7:	add    BYTE PTR [rax],cl
   1400101d9:	add    BYTE PTR [rax],ch
   1400101db:	add    BYTE PTR [rax],ch
   1400101dd:	add    BYTE PTR [rip+0x8000800],bh        # 0x1480109e3
   1400101e3:	add    BYTE PTR [rax+rax*1],bh
   1400101e6:	add    eax,0x3e003d00
   1400101eb:	add    BYTE PTR [rdi+0x0],cl
   1400101ee:	cmp    al,0x0
   1400101f0:	xor    eax,DWORD PTR [rax]
   1400101f2:	xor    eax,DWORD PTR [rax]
   1400101f4:	cmp    BYTE PTR [rax],al
   1400101f6:	sub    BYTE PTR [rax],al
   1400101f8:	rex.WRXB add BYTE PTR [rip+0x28003e00],r15b        # 0x168013fff
   1400101ff:	add    BYTE PTR [rdi+0x0],cl
   140010202:	cmp    eax,0x3c003e00
   140010207:	add    BYTE PTR [rdx],dh
   140010209:	add    BYTE PTR [rax],cl
   14001020b:	add    BYTE PTR [rbx],dh
   14001020d:	add    BYTE PTR [rax],bh
   14001020f:	add    BYTE PTR [rsi],dh
   140010211:	add    BYTE PTR [rax+rax*1],bh
   140010214:	xor    eax,DWORD PTR [rax]
   140010216:	cmp    eax,0x3c003e00
   14001021b:	add    BYTE PTR [rax],cl
   14001021d:	add    BYTE PTR [rdx],dh
   14001021f:	add    BYTE PTR [rdi],dh
   140010221:	add    BYTE PTR [rip+0x36003e00],bh        # 0x176014027
   140010227:	add    BYTE PTR [rax+rax*1],bh
   14001022a:	sbb    eax,0x2a003c00
   14001022f:	add    BYTE PTR [rax+rax*1],bh
   140010232:	pop    rbx
   140010233:	add    BYTE PTR [rax+rax*1+0x38],bl
   140010237:	add    BYTE PTR [rax],bh
   140010239:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d01403f
   14001023f:	add    BYTE PTR [rsi],bh
   140010241:	add    BYTE PTR [rax],bh
   140010243:	add    BYTE PTR [rip+0x3c000f00],dh        # 0x17c011149
   140010249:	add    BYTE PTR [rax],cl
   14001024b:	add    BYTE PTR [rdi],al
   14001024d:	add    BYTE PTR [rip+0x3d003e00],bh        # 0x17d014053
   140010253:	add    BYTE PTR [rsi],bh
   140010255:	add    BYTE PTR [rip+0x3e003d00],bl        # 0x17e013f5b
   14001025b:	add    BYTE PTR [rip+0x8001900],bl        # 0x148011b61
   140010261:	add    BYTE PTR [rbx],bl
   140010263:	add    BYTE PTR [rdi],al
   140010265:	add    bh,bh
   140010267:	dec    DWORD PTR [rdi]
   140010269:	add    BYTE PTR [rip+0x8002200],bl        # 0x14801246f
   14001026f:	add    BYTE PTR [rax+rax*1],ah
   140010272:	sbb    DWORD PTR [rax],eax
   140010274:	cmp    eax,0x26001b00
   140010279:	add    BYTE PTR [rax+rax*1],cl
   14001027c:	(bad)  
   14001027d:	call   FWORD PTR [rcx]
   14001027f:	add    BYTE PTR [rcx],ah
   140010281:	add    BYTE PTR [rbx],bl
   140010283:	add    BYTE PTR [rax+rax*1],bh
   140010286:	rex.WXB add BYTE PTR [r8+r8*1],cl
   14001028a:	and    al,0x0
   14001028c:	add    BYTE PTR es:[rdx],ah
   14001028f:	add    BYTE PTR [rcx+0x0],bl
   140010292:	and    al,0x0
   140010294:	sbb    eax,0x26000700
   140010299:	add    BYTE PTR [rip+0xffffffffff005600],bl        # 0x13f01589f
   14001029f:	call   FWORD PTR [rcx]
   1400102a1:	add    BYTE PTR [rax+rax*1],cl
   1400102a4:	sbb    eax,DWORD PTR [rax]
   1400102a6:	sbb    DWORD PTR [rax],eax
   1400102a8:	sbb    DWORD PTR [rax],eax
   1400102aa:	sbb    eax,DWORD PTR [rax]
   1400102ac:	sbb    eax,DWORD PTR [rax]
   1400102ae:	(bad)  
   1400102af:	add    BYTE PTR [rdi],cl
   1400102b1:	add    BYTE PTR [rbx+0x0],cl
   1400102b4:	cmp    eax,0x4b003e00
   1400102b9:	add    BYTE PTR [rsi],ah
   1400102bb:	add    BYTE PTR [rip+0x26003e00],bh        # 0x1660140c1
   1400102c1:	add    BYTE PTR [rsi],ah
   1400102c3:	add    bh,bh
   1400102c5:	dec    DWORD PTR [rbx+0x0]
   1400102c8:	push   rsi
   1400102c9:	add    BYTE PTR [rip+0x56003e00],bh        # 0x1960140cf
   1400102cf:	add    BYTE PTR [rip+0x39003e00],bh        # 0x1790140d5
   1400102d5:	add    BYTE PTR [rdx],ah
   1400102d7:	add    BYTE PTR [rip+0x56003e00],bh        # 0x1960140dd
   1400102dd:	add    bh,bh
   1400102df:	(bad)  
   1400102e0:	(bad)  
   1400102e1:	add    BYTE PTR [rcx],bh
   1400102e3:	add    BYTE PTR [rdi],cl
   1400102e5:	add    BYTE PTR [rip+0xf003e00],bh        # 0x14f0140eb
   1400102eb:	add    bh,bh
   1400102ed:	(bad)  
   1400102ee:	(bad)  
   1400102ef:	add    BYTE PTR [rbx+0x0],cl
   1400102f2:	adc    al,BYTE PTR [rax]
   1400102f4:	adc    eax,DWORD PTR [rax]
   1400102f6:	rex.WXB add r15b,dil
   1400102f9:	call   FWORD PTR [rsi+0x0]
   1400102fc:	cmp    DWORD PTR [rax],eax
   1400102fe:	adc    al,BYTE PTR [rax]
   140010300:	adc    eax,DWORD PTR [rax]
   140010302:	cmp    eax,0x56003e00
   140010307:	add    BYTE PTR [rdi],bh
   140010309:	add    BYTE PTR [rdx],ah
   14001030b:	add    BYTE PTR [rsi+0x0],dl
   14001030e:	and    al,0x0
   140010310:	and    al,BYTE PTR [rax]
   140010312:	(bad)  
   140010313:	add    BYTE PTR [rax+rax*1],ah
   140010316:	adc    al,BYTE PTR [rax]
   140010318:	adc    eax,DWORD PTR [rax]
   14001031a:	cmp    eax,0xf003e00
   14001031f:	add    bh,bh
   140010321:	call   QWORD PTR [rdx]
   140010323:	add    BYTE PTR [rbx],dl
   140010325:	add    BYTE PTR [rbp+0x0],bl
   140010328:	sub    eax,0xf002e00
   14001032d:	add    BYTE PTR [rip+0xffffffffff003e00],bh        # 0x13f014133
   140010333:	jmp    FWORD PTR [rip+0xffffffffff002e00]        # 0x13f013139
   140010339:	(bad)  
   14001033a:	(bad)  
   14001033b:	(bad)  
   14001033c:	(bad)  
   14001033d:	(bad)  
   14001033e:	(bad)  
   14001033f:	(bad)  
   140010340:	(bad)  
   140010341:	jmp    QWORD PTR [rcx]
   140010343:	add    BYTE PTR [rdx],ah
   140010345:	add    bh,bh
   140010347:	jmp    QWORD PTR [rax+rax*1]
   14001034a:	(bad)  
   14001034b:	jmp    FWORD PTR [rip+0x21002e00]        # 0x161013151
   140010351:	add    BYTE PTR [rdx],ah
   140010353:	add    bh,bh
   140010355:	jmp    QWORD PTR [rax+rax*1]
   140010358:	sub    eax,0xff002e00
   14001035d:	call   QWORD PTR [rdi]
   14001035f:	add    BYTE PTR [rax],bl
   140010361:	add    bh,bh
   140010363:	(bad)  
   140010364:	(bad)  
   140010365:	call   FWORD PTR [rcx]
   140010367:	add    bh,bh
   140010369:	call   FWORD PTR [rbx]
   14001036b:	add    bh,bh
   14001036d:	call   FWORD PTR [rbp+0x0]
   140010370:	and    BYTE PTR [rax],al
   140010372:	(bad)  
   140010373:	add    BYTE PTR [rax],bl
   140010375:	add    BYTE PTR [rbx],ah
   140010377:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f01287d
   14001037d:	(bad)  
   14001037e:	(bad)  
   14001037f:	jmp    QWORD PTR [rsi]
   140010381:	add    BYTE PTR [rdi],bl
   140010383:	add    BYTE PTR [rax],ah
   140010385:	add    bh,bh
   140010387:	(bad)  
   140010388:	(bad)  
   140010389:	jmp    QWORD PTR [rbx]
   14001038b:	add    BYTE PTR [rip+0x17002500],bl        # 0x157012891
   140010391:	add    BYTE PTR [rax],bl
   140010393:	add    BYTE PTR [rdx+0x0],ah
   140010396:	movsxd eax,DWORD PTR [rax]
   140010398:	add    BYTE PTR fs:[rbp+0x0],ah
   14001039c:	data16 add BYTE PTR [rdi+0x0],ah
   1400103a0:	(bad)  
   1400103a1:	add    BYTE PTR [rax],ah
   1400103a3:	add    BYTE PTR [rdi],dl
   1400103a5:	add    BYTE PTR [rax],bl
   1400103a7:	add    BYTE PTR [rbx],ah
   1400103a9:	add    BYTE PTR [rip+0xffffffffff002500],bl        # 0x13f0128af
   1400103af:	(bad)  
   1400103b0:	(bad)  
   1400103b1:	(bad)  
   1400103b2:	(bad)  
   1400103b3:	call   FWORD PTR [rdi]
   1400103b5:	add    BYTE PTR [rax],ah
   1400103b7:	add    BYTE PTR [rdi],dl
   1400103b9:	add    BYTE PTR [rax],bl
   1400103bb:	add    BYTE PTR [rbx],ah
   1400103bd:	add    bh,bh
   1400103bf:	jmp    QWORD PTR [rip+0x43004200]        # 0x1830145c5
   1400103c5:	add    BYTE PTR [rax+rax*1+0x1f],al
   1400103c9:	add    BYTE PTR [rax],ah
   1400103cb:	add    BYTE PTR [rdi],dl
   1400103cd:	add    BYTE PTR [rax],bl
   1400103cf:	add    BYTE PTR [rbx],ah
   1400103d1:	add    bh,bh
   1400103d3:	jmp    QWORD PTR [rip+0x43004200]        # 0x1830145d9
   1400103d9:	add    BYTE PTR [rax+rax*1+0x1f],al
   1400103dd:	add    BYTE PTR [rax],ah
   1400103df:	add    bh,bh
   1400103e1:	(bad)  
   1400103e2:	(bad)  
   1400103e3:	jmp    QWORD PTR [rbx]
   1400103e5:	add    bh,bh
   1400103e7:	jmp    QWORD PTR [rip+0xffffffffff001d00]        # 0x13f0120ed
   1400103ed:	(bad)  
   1400103ee:	(bad)  
   1400103ef:	call   FWORD PTR [rip+0x42ffff00]        # 0x1830102f5
   1400103f5:	add    BYTE PTR [rbx+0x0],al
   1400103f8:	add    BYTE PTR [rsi+0x0],r11b
   1400103fc:	pop    rdi
   1400103fd:	add    BYTE PTR [rax+0x0],ah
   140010400:	sbb    eax,0xffffff00
   140010405:	call   FWORD PTR [rip+0x18001700]        # 0x158011b0b
   14001040b:	add    BYTE PTR [rip+0x5f005e00],bl        # 0x19f016211
   140010411:	add    BYTE PTR [rax+0x0],ah
   140010414:	(bad)  
   140010415:	(bad)  
   140010416:	(bad)  
   140010417:	call   FWORD PTR [rip+0xffffffffff002000]        # 0x13f01241d
   14001041d:	(bad)  
   14001041e:	(bad)  
   14001041f:	jmp    QWORD PTR [rbx]
   140010421:	add    bh,bh
   140010423:	jmp    QWORD PTR [rip+0xffffffffff002400]        # 0x13f012829
   140010429:	(bad)  
   14001042a:	(bad)  
   14001042b:	call   FWORD PTR [rsi+0x0]
   14001042e:	pop    rdi
   14001042f:	add    BYTE PTR [rax+0x0],ah
   140010432:	sbb    eax,0x43004200
   140010437:	add    BYTE PTR [rax+rax*1+0x42],al
   14001043b:	add    BYTE PTR [rbx+0x0],al
   14001043e:	add    BYTE PTR [rax+rax*1],r12b
   140010442:	(bad)  
   140010443:	(bad)  
   140010444:	(bad)  
   140010445:	(bad)  
   140010446:	(bad)  
   140010447:	(bad)  
   140010448:	(bad)  
   140010449:	inc    DWORD PTR [rdx+0x0]
   14001044c:	add    BYTE PTR [r8+r8*1+0x42],al
   140010451:	add    BYTE PTR [rbx+0x0],al
   140010454:	add    BYTE PTR [rdx+0x0],r8b
   140010458:	add    BYTE PTR [r8+r8*1+0x1d],al
   14001045d:	add    bh,bh
   14001045f:	(bad)  
   140010460:	(bad)  
   140010461:	inc    DWORD PTR [rdx+0x0]
   140010464:	add    BYTE PTR [r8+r8*1-0x1],al
   140010469:	jmp    QWORD PTR [rax+rax*1]
   14001046c:	pop    rsi
   14001046d:	add    BYTE PTR [rdi+0x0],bl
   140010470:	(bad)  
   140010471:	add    BYTE PTR [rsi+0x0],bl
   140010474:	pop    rdi
   140010475:	add    BYTE PTR [rax+0x0],ah
   140010478:	(bad)  
   140010479:	(bad)  
   14001047a:	(bad)  
   14001047b:	inc    DWORD PTR [rdx+0x0]
   14001047e:	add    BYTE PTR [r8+r8*1+0x5e],al
   140010483:	add    BYTE PTR [rdi+0x0],bl
   140010486:	(bad)  
   140010487:	add    BYTE PTR [rsi+0x0],bl
   14001048a:	pop    rdi
   14001048b:	add    BYTE PTR [rax+0x0],ah
   14001048e:	pop    rsi
   14001048f:	add    BYTE PTR [rdi+0x0],bl
   140010492:	(bad)  
   140010493:	add    bh,bh
   140010495:	(bad)  
   140010496:	(bad)  
   140010497:	(bad)  
   140010498:	(bad)  
   140010499:	call   FWORD PTR [rsi+0x0]
   14001049c:	pop    rdi
   14001049d:	add    BYTE PTR [rax+0x0],ah
   1400104a0:	(bad)  
   1400104a1:	(bad)  
   1400104a2:	(bad)  
   1400104a3:	call   FWORD PTR [rip+0x43004200]        # 0x1830146a9
   1400104a9:	add    BYTE PTR [rax+rax*1-0x1],al
   1400104ad:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400103b3
   1400104b3:	call   FWORD PTR [rsi+0x0]
   1400104b6:	pop    rdi
   1400104b7:	add    BYTE PTR [rax+0x0],ah
   1400104ba:	(bad)  
   1400104bb:	(bad)  
   1400104bc:	(bad)  
   1400104bd:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400103c3
   1400104c3:	(bad)  
   1400104c4:	(bad)  
   1400104c5:	(bad)  
   1400104c6:	(bad)  
   1400104c7:	(bad)  
   1400104c8:	(bad)  
   1400104c9:	(bad)  
   1400104ca:	(bad)  
   1400104cb:	(bad)  
   1400104cc:	(bad)  
   1400104cd:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400103d3
   1400104d3:	(bad)  
   1400104d4:	(bad)  
   1400104d5:	(bad)  
   1400104d6:	(bad)  
   1400104d7:	(bad)  
   1400104d8:	(bad)  
   1400104d9:	(bad)  
   1400104da:	(bad)  
   1400104db:	(bad)  
   1400104dc:	(bad)  
   1400104dd:	call   FWORD PTR [rsi+0x0]
   1400104e0:	pop    rdi
   1400104e1:	add    BYTE PTR [rax+0x0],ah
   1400104e4:	cmp    eax,0xff003e00
   1400104e9:	(bad)  
   1400104ea:	(bad)  
   1400104eb:	(bad)  
   1400104ec:	(bad)  
   1400104ed:	inc    DWORD PTR [rdx+0x0]
   1400104f0:	add    BYTE PTR [r8+r8*1-0x1],al
   1400104f5:	(bad)  
   1400104f6:	(bad)  
   1400104f7:	inc    DWORD PTR [rdx+0x0]
   1400104fa:	add    BYTE PTR [r8+r8*1+0x3d],al
   1400104ff:	add    BYTE PTR [rsi],bh
   140010501:	add    bh,bh
   140010503:	(bad)  
   140010504:	(bad)  
   140010505:	(bad)  
   140010506:	(bad)  
   140010507:	inc    DWORD PTR [rdx+0x0]
   14001050a:	add    BYTE PTR [r8+r8*1+0x3d],al
   14001050f:	add    BYTE PTR [rsi],bh
   140010511:	add    bh,bh
   140010513:	(bad)  
   140010514:	(bad)  
   140010515:	(bad)  
   140010516:	(bad)  
   140010517:	inc    DWORD PTR [rdx+0x0]
   14001051a:	add    BYTE PTR [r8+r8*1-0x1],al
   14001051f:	(bad)  
   140010520:	(bad)  
   140010521:	(bad)  
   140010522:	(bad)  
   140010523:	(bad)  
   140010524:	(bad)  
   140010525:	call   FWORD PTR [rsi+0x0]
   140010528:	pop    rdi
   140010529:	add    BYTE PTR [rax+0x0],ah
   14001052c:	(bad)  
   14001052d:	(bad)  
   14001052e:	(bad)  
   14001052f:	call   FWORD PTR [rsi+0x0]
   140010532:	pop    rdi
   140010533:	add    BYTE PTR [rax+0x0],ah
   140010536:	(bad)  
   140010537:	(bad)  
   140010538:	(bad)  
   140010539:	(bad)  
   14001053a:	(bad)  
   14001053b:	(bad)  
   14001053c:	(bad)  
   14001053d:	(bad)  
   14001053e:	(bad)  
   14001053f:	call   FWORD PTR [rsi+0x0]
   140010542:	pop    rdi
   140010543:	add    BYTE PTR [rax+0x0],ah
   140010546:	(bad)  
   140010547:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x14001044d
   14001054d:	(bad)  
   14001054e:	(bad)  
   14001054f:	call   FWORD PTR [rsi+0x0]
   140010552:	pop    rdi
   140010553:	add    BYTE PTR [rax+0x0],ah
   140010556:	(bad)  
   140010557:	(bad)  
   140010558:	(bad)  
   140010559:	(bad)  
   14001055a:	(bad)  
   14001055b:	(bad)  
   14001055c:	(bad)  
   14001055d:	(bad)  
   14001055e:	(bad)  
   14001055f:	(bad)  
   140010560:	(bad)  
   140010561:	(bad)  
   140010562:	(bad)  
   140010563:	(bad)  
   140010564:	(bad)  
   140010565:	(bad)  
   140010566:	(bad)  
   140010567:	(bad)  
   140010568:	(bad)  
   140010569:	(bad)  
   14001056a:	(bad)  
   14001056b:	(bad)  
   14001056c:	(bad)  
   14001056d:	(bad)  
   14001056e:	(bad)  
   14001056f:	(bad)  
   140010570:	(bad)  
   140010571:	(bad)  
   140010572:	(bad)  
   140010573:	(bad)  
   140010574:	(bad)  
   140010575:	(bad)  
   140010576:	(bad)  
   140010577:	(bad)  
   140010578:	(bad)  
   140010579:	(bad)  
   14001057a:	(bad)  
   14001057b:	(bad)  
   14001057c:	(bad)  
   14001057d:	(bad)  
   14001057e:	(bad)  
   14001057f:	(bad)  
   140010580:	(bad)  
   140010581:	(bad)  
   140010582:	(bad)  
   140010583:	(bad)  
   140010584:	(bad)  
   140010585:	(bad)  
   140010586:	(bad)  
   140010587:	(bad)  
   140010588:	cmp    eax,0x3003e00
   14001058d:	add    bh,bh
   14001058f:	(bad)  
   140010590:	(bad)  
   140010591:	inc    DWORD PTR [rdx+0x0]
   140010594:	add    BYTE PTR [r8+r8*1-0x1],al
   140010599:	(bad)  
   14001059a:	(bad)  
   14001059b:	(bad)  
   14001059c:	(bad)  
   14001059d:	(bad)  
   14001059e:	(bad)  
   14001059f:	dec    DWORD PTR [rip+0xffffffffffffff00]        # 0x1400104a5
   1400105a5:	(bad)  
   1400105a6:	(bad)  
   1400105a7:	call   QWORD PTR [rcx]
   1400105a9:	add    bh,bh
   1400105ab:	(bad)  
   1400105ac:	(bad)  
   1400105ad:	(bad)  
   1400105ae:	(bad)  
   1400105af:	(bad)  
   1400105b0:	(bad)  
   1400105b1:	(bad)  
   1400105b2:	(bad)  
   1400105b3:	(bad)  
   1400105b4:	(bad)  
   1400105b5:	(bad)  
   1400105b6:	(bad)  
   1400105b7:	(bad)  
   1400105b8:	(bad)  
   1400105b9:	call   FWORD PTR [rdx]
   1400105bb:	add    bh,bh
   1400105bd:	call   FWORD PTR [rax+rax*1]
   1400105c0:	(bad)  
   1400105c1:	(bad)  
   1400105c2:	(bad)  
   1400105c3:	call   FWORD PTR [rdi]
   1400105c5:	add    bh,bh
   1400105c7:	(bad)  
   1400105c8:	(bad)  
   1400105c9:	call   FWORD PTR [rsi+0x0]
   1400105cc:	pop    rdi
   1400105cd:	add    BYTE PTR [rax+0x0],ah
   1400105d0:	(bad)  
   1400105d1:	(bad)  
   1400105d2:	(bad)  
   1400105d3:	jmp    QWORD PTR [rdi]
   1400105d5:	add    bh,bh
   1400105d7:	jmp    FWORD PTR [rcx]
   1400105d9:	add    BYTE PTR [rdx],ch
   1400105db:	add    bh,bh
   1400105dd:	dec    DWORD PTR [rax+rax*1]
   1400105e0:	or     eax,0xff000300
   1400105e5:	(bad)  
   1400105e6:	(bad)  
   1400105e7:	push   QWORD PTR [rcx]
   1400105e9:	add    bh,bh
   1400105eb:	(bad)  
   1400105ec:	(bad)  
   1400105ed:	push   QWORD PTR [rax+rax*1]
   1400105f0:	xor    eax,0xff001600
   1400105f5:	dec    DWORD PTR [rip+0x3affff00]        # 0x17b0104fb
   1400105fb:	add    bh,bh
   1400105fd:	call   QWORD PTR [rcx]
   1400105ff:	add    BYTE PTR [rip+0xffffffffffffff00],bl        # 0x140010505
   140010605:	inc    DWORD PTR [rax+0x0]
   140010608:	and    DWORD PTR [rax],eax
   14001060a:	and    al,BYTE PTR [rax]
   14001060c:	(bad)  
   14001060d:	jmp    QWORD PTR [rax+rax*1]
   140010610:	sbb    al,BYTE PTR [rax]
   140010612:	(bad)  
   140010613:	call   FWORD PTR [rax+rax*1]
   140010616:	(bad)  
   140010617:	(bad)  
   140010618:	(bad)  
   140010619:	(bad)  
   14001061a:	(bad)  
   14001061b:	jmp    FWORD PTR [rbx]
   14001061d:	add    bh,bh
   14001061f:	(bad)  
   140010620:	(bad)  
   140010621:	(bad)  
   140010622:	(bad)  
   140010623:	jmp    FWORD PTR [rdi]
   140010625:	add    BYTE PTR [rax+0x0],dl
   140010628:	(bad)  
   140010629:	jmp    QWORD PTR [rdi]
   14001062b:	add    bh,bh
   14001062d:	jmp    FWORD PTR [rcx]
   14001062f:	add    BYTE PTR [rdx],ch
   140010631:	add    bh,bh
   140010633:	(bad)  
   140010634:	(bad)  
   140010635:	(bad)  
   140010636:	(bad)  
   140010637:	(bad)  
   140010638:	(bad)  
   140010639:	(bad)  
   14001063a:	(bad)  
   14001063b:	(bad)  
   14001063c:	(bad)  
   14001063d:	push   QWORD PTR [rcx]
   14001063f:	add    bh,bh
   140010641:	(bad)  
   140010642:	(bad)  
   140010643:	push   QWORD PTR [rax+rax*1]
   140010646:	xor    eax,0x42004100
   14001064b:	add    BYTE PTR [rbx+0x0],al
   14001064e:	add    BYTE PTR [rdx],r15b
   140010651:	add    BYTE PTR [rsi+0x0],al
   140010654:	(bad)  
   140010655:	(bad)  
   140010656:	(bad)  
   140010657:	(bad)  
   140010658:	(bad)  
   140010659:	(bad)  
   14001065a:	(bad)  
   14001065b:	inc    DWORD PTR [rax+0x0]
   14001065e:	(bad)  
   14001065f:	(bad)  
   140010660:	(bad)  
   140010661:	(bad)  
   140010662:	(bad)  
   140010663:	(bad)  
   140010664:	(bad)  
   140010665:	(bad)  
   140010666:	(bad)  
   140010667:	call   QWORD PTR [rcx+0x0]
   14001066a:	push   rdx
   14001066b:	add    BYTE PTR [rbx+0x0],dl
   14001066e:	(bad)  
   14001066f:	(bad)  
   140010670:	(bad)  
   140010671:	(bad)  
   140010672:	(bad)  
   140010673:	call   QWORD PTR [rdi+0x0]
   140010676:	(bad)  
   140010677:	(bad)  
   140010678:	(bad)  
   140010679:	(bad)  
   14001067a:	(bad)  
   14001067b:	call   QWORD PTR [rax+0x0]
   14001067e:	(bad)  
   14001067f:	(bad)  
   140010680:	(bad)  
   140010681:	call   FWORD PTR [rsi+0x0]
   140010684:	pop    rdi
   140010685:	add    BYTE PTR [rax+0x0],ah
   140010688:	(bad)  
   140010689:	(bad)  
   14001068a:	(bad)  
   14001068b:	(bad)  
   14001068c:	(bad)  
   14001068d:	(bad)  
   14001068e:	(bad)  
   14001068f:	(bad)  
   140010690:	(bad)  
   140010691:	(bad)  
   140010692:	(bad)  
   140010693:	(bad)  
   140010694:	(bad)  
   140010695:	(bad)  
   140010696:	(bad)  
   140010697:	(bad)  
   140010698:	(bad)  
   140010699:	(bad)  
   14001069a:	(bad)  
   14001069b:	(bad)  
   14001069c:	(bad)  
   14001069d:	(bad)  
   14001069e:	(bad)  
   14001069f:	(bad)  
   1400106a0:	(bad)  
   1400106a1:	(bad)  
   1400106a2:	(bad)  
   1400106a3:	(bad)  
   1400106a4:	(bad)  
   1400106a5:	(bad)  
   1400106a6:	(bad)  
   1400106a7:	(bad)  
   1400106a8:	(bad)  
   1400106a9:	(bad)  
   1400106aa:	(bad)  
   1400106ab:	(bad)  
   1400106ac:	(bad)  
   1400106ad:	(bad)  
   1400106ae:	(bad)  
   1400106af:	dec    DWORD PTR [rax+rax*1]
   1400106b2:	or     eax,0xffffff00
   1400106b7:	(bad)  
   1400106b8:	(bad)  
   1400106b9:	(bad)  
   1400106ba:	(bad)  
   1400106bb:	(bad)  
   1400106bc:	(bad)  
   1400106bd:	(bad)  
   1400106be:	(bad)  
   1400106bf:	(bad)  
   1400106c0:	(bad)  
   1400106c1:	(bad)  
   1400106c2:	(bad)  
   1400106c3:	call   QWORD PTR [rsi]
   1400106c5:	add    bh,bh
   1400106c7:	(bad)  
   1400106c8:	(bad)  
   1400106c9:	(bad)  
   1400106ca:	(bad)  
   1400106cb:	(bad)  
   1400106cc:	(bad)  
   1400106cd:	(bad)  
   1400106ce:	(bad)  
   1400106cf:	(bad)  
   1400106d0:	(bad)  
   1400106d1:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400105d7
   1400106d7:	(bad)  
   1400106d8:	(bad)  
   1400106d9:	jmp    QWORD PTR [rcx]
   1400106db:	add    BYTE PTR [rdx],ah
   1400106dd:	add    bh,bh
   1400106df:	jmp    QWORD PTR [rax+rax*1]
   1400106e2:	(bad)  
   1400106e3:	(bad)  
   1400106e4:	(bad)  
   1400106e5:	(bad)  
   1400106e6:	(bad)  
   1400106e7:	(bad)  
   1400106e8:	(bad)  
   1400106e9:	(bad)  
   1400106ea:	(bad)  
   1400106eb:	(bad)  
   1400106ec:	(bad)  
   1400106ed:	jmp    FWORD PTR [rbx]
   1400106ef:	add    bh,bh
   1400106f1:	(bad)  
   1400106f2:	(bad)  
   1400106f3:	(bad)  
   1400106f4:	(bad)  
   1400106f5:	jmp    FWORD PTR [rdi]
   1400106f7:	add    bh,bh
   1400106f9:	(bad)  
   1400106fa:	(bad)  
   1400106fb:	(bad)  
   1400106fc:	(bad)  
   1400106fd:	(bad)  
   1400106fe:	(bad)  
   1400106ff:	(bad)  
   140010700:	(bad)  
   140010701:	(bad)  
   140010702:	(bad)  
   140010703:	(bad)  
   140010704:	(bad)  
   140010705:	(bad)  
   140010706:	(bad)  
   140010707:	(bad)  
   140010708:	(bad)  
   140010709:	(bad)  
   14001070a:	(bad)  
   14001070b:	(bad)  
   14001070c:	(bad)  
   14001070d:	(bad)  
   14001070e:	(bad)  
   14001070f:	(bad)  
   140010710:	(bad)  
   140010711:	(bad)  
   140010712:	(bad)  
   140010713:	(bad)  
   140010714:	(bad)  
   140010715:	(bad)  
   140010716:	(bad)  
   140010717:	(bad)  
   140010718:	(bad)  
   140010719:	inc    DWORD PTR [rcx+0x0]
   14001071c:	rex.X add BYTE PTR [rbx+0x0],al
   140010720:	add    dil,r15b
   140010723:	inc    DWORD PTR [rsi+0x0]
   140010726:	(bad)  
   140010727:	(bad)  
   140010728:	(bad)  
   140010729:	(bad)  
   14001072a:	(bad)  
   14001072b:	(bad)  
   14001072c:	(bad)  
   14001072d:	(bad)  
   14001072e:	(bad)  
   14001072f:	(bad)  
   140010730:	(bad)  
   140010731:	(bad)  
   140010732:	(bad)  
   140010733:	(bad)  
   140010734:	(bad)  
   140010735:	(bad)  
   140010736:	(bad)  
   140010737:	(bad)  
   140010738:	(bad)  
   140010739:	call   QWORD PTR [rcx+0x0]
   14001073c:	push   rdx
   14001073d:	add    BYTE PTR [rbx+0x0],dl
   140010740:	(bad)  
   140010741:	(bad)  
   140010742:	(bad)  
   140010743:	(bad)  
   140010744:	(bad)  
   140010745:	call   QWORD PTR [rdi+0x0]
   140010748:	(bad)  
   140010749:	(bad)  
   14001074a:	(bad)  
   14001074b:	(bad)  
   14001074c:	(bad)  
   14001074d:	(bad)  
   14001074e:	(bad)  
   14001074f:	(bad)  
   140010750:	(bad)  
   140010751:	(bad)  
   140010752:	(bad)  
   140010753:	call   FWORD PTR [rsi+0x0]
   140010756:	pop    rdi
   140010757:	add    BYTE PTR [rax+0x0],ah
   14001075a:	(bad)  
   14001075b:	(bad)  
   14001075c:	(bad)  
   14001075d:	(bad)  
   14001075e:	(bad)  
   14001075f:	(bad)  
   140010760:	(bad)  
   140010761:	(bad)  
   140010762:	(bad)  
   140010763:	(bad)  
   140010764:	(bad)  
   140010765:	(bad)  
   140010766:	(bad)  
   140010767:	(bad)  
   140010768:	(bad)  
   140010769:	(bad)  
   14001076a:	(bad)  
   14001076b:	dec    DWORD PTR [rax+rax*1]
   14001076e:	or     eax,0xffffff00
   140010773:	(bad)  
   140010774:	(bad)  
   140010775:	(bad)  
   140010776:	(bad)  
   140010777:	(bad)  
   140010778:	(bad)  
   140010779:	(bad)  
   14001077a:	(bad)  
   14001077b:	(bad)  
   14001077c:	(bad)  
   14001077d:	(bad)  
   14001077e:	(bad)  
   14001077f:	call   QWORD PTR [rsi]
   140010781:	add    bh,bh
   140010783:	(bad)  
   140010784:	(bad)  
   140010785:	(bad)  
   140010786:	(bad)  
   140010787:	(bad)  
   140010788:	(bad)  
   140010789:	(bad)  
   14001078a:	(bad)  
   14001078b:	(bad)  
   14001078c:	(bad)  
   14001078d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010693
   140010793:	(bad)  
   140010794:	(bad)  
   140010795:	jmp    QWORD PTR [rcx]
   140010797:	add    BYTE PTR [rdx],ah
   140010799:	add    bh,bh
   14001079b:	jmp    QWORD PTR [rax+rax*1]
   14001079e:	(bad)  
   14001079f:	(bad)  
   1400107a0:	(bad)  
   1400107a1:	(bad)  
   1400107a2:	(bad)  
   1400107a3:	(bad)  
   1400107a4:	(bad)  
   1400107a5:	(bad)  
   1400107a6:	(bad)  
   1400107a7:	(bad)  
   1400107a8:	(bad)  
   1400107a9:	jmp    FWORD PTR [rbx]
   1400107ab:	add    bh,bh
   1400107ad:	(bad)  
   1400107ae:	(bad)  
   1400107af:	(bad)  
   1400107b0:	(bad)  
   1400107b1:	jmp    FWORD PTR [rdi]
   1400107b3:	add    bh,bh
   1400107b5:	(bad)  
   1400107b6:	(bad)  
   1400107b7:	(bad)  
   1400107b8:	(bad)  
   1400107b9:	(bad)  
   1400107ba:	(bad)  
   1400107bb:	(bad)  
   1400107bc:	(bad)  
   1400107bd:	(bad)  
   1400107be:	(bad)  
   1400107bf:	(bad)  
   1400107c0:	(bad)  
   1400107c1:	(bad)  
   1400107c2:	(bad)  
   1400107c3:	(bad)  
   1400107c4:	(bad)  
   1400107c5:	(bad)  
   1400107c6:	(bad)  
   1400107c7:	(bad)  
   1400107c8:	(bad)  
   1400107c9:	(bad)  
   1400107ca:	(bad)  
   1400107cb:	(bad)  
   1400107cc:	(bad)  
   1400107cd:	(bad)  
   1400107ce:	(bad)  
   1400107cf:	(bad)  
   1400107d0:	(bad)  
   1400107d1:	(bad)  
   1400107d2:	(bad)  
   1400107d3:	(bad)  
   1400107d4:	(bad)  
   1400107d5:	inc    DWORD PTR [rcx+0x0]
   1400107d8:	rex.X add BYTE PTR [rbx+0x0],al
   1400107dc:	add    dil,r15b
   1400107df:	inc    DWORD PTR [rsi+0x0]
   1400107e2:	(bad)  
   1400107e3:	(bad)  
   1400107e4:	(bad)  
   1400107e5:	(bad)  
   1400107e6:	(bad)  
   1400107e7:	(bad)  
   1400107e8:	(bad)  
   1400107e9:	(bad)  
   1400107ea:	(bad)  
   1400107eb:	(bad)  
   1400107ec:	(bad)  
   1400107ed:	(bad)  
   1400107ee:	(bad)  
   1400107ef:	(bad)  
   1400107f0:	(bad)  
   1400107f1:	(bad)  
   1400107f2:	(bad)  
   1400107f3:	(bad)  
   1400107f4:	(bad)  
   1400107f5:	call   QWORD PTR [rcx+0x0]
   1400107f8:	push   rdx
   1400107f9:	add    BYTE PTR [rbx+0x0],dl
   1400107fc:	(bad)  
   1400107fd:	(bad)  
   1400107fe:	(bad)  
   1400107ff:	(bad)  
   140010800:	(bad)  
   140010801:	call   QWORD PTR [rdi+0x0]
   140010804:	(bad)  
   140010805:	(bad)  
   140010806:	(bad)  
   140010807:	(bad)  
   140010808:	(bad)  
   140010809:	(bad)  
   14001080a:	(bad)  
   14001080b:	(bad)  
   14001080c:	(bad)  
   14001080d:	(bad)  
   14001080e:	(bad)  
   14001080f:	call   FWORD PTR [rsi+0x0]
   140010812:	pop    rdi
   140010813:	add    BYTE PTR [rax+0x0],ah
   140010816:	(bad)  
   140010817:	(bad)  
   140010818:	(bad)  
   140010819:	(bad)  
   14001081a:	(bad)  
   14001081b:	(bad)  
   14001081c:	(bad)  
   14001081d:	(bad)  
   14001081e:	(bad)  
   14001081f:	(bad)  
   140010820:	(bad)  
   140010821:	(bad)  
   140010822:	(bad)  
   140010823:	(bad)  
   140010824:	(bad)  
   140010825:	(bad)  
   140010826:	(bad)  
   140010827:	dec    DWORD PTR [rdx]
   140010829:	add    bh,bh
   14001082b:	dec    DWORD PTR [rax+rax*1]
   14001082e:	or     eax,0xffffff00
   140010833:	(bad)  
   140010834:	(bad)  
   140010835:	(bad)  
   140010836:	(bad)  
   140010837:	(bad)  
   140010838:	(bad)  
   140010839:	(bad)  
   14001083a:	(bad)  
   14001083b:	(bad)  
   14001083c:	(bad)  
   14001083d:	(bad)  
   14001083e:	(bad)  
   14001083f:	call   QWORD PTR [rsi]
   140010841:	add    bh,bh
   140010843:	(bad)  
   140010844:	(bad)  
   140010845:	(bad)  
   140010846:	(bad)  
   140010847:	(bad)  
   140010848:	(bad)  
   140010849:	(bad)  
   14001084a:	(bad)  
   14001084b:	(bad)  
   14001084c:	(bad)  
   14001084d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010753
   140010853:	(bad)  
   140010854:	(bad)  
   140010855:	jmp    QWORD PTR [rcx]
   140010857:	add    BYTE PTR [rdx],ah
   140010859:	add    bh,bh
   14001085b:	jmp    QWORD PTR [rax+rax*1]
   14001085e:	(bad)  
   14001085f:	(bad)  
   140010860:	(bad)  
   140010861:	(bad)  
   140010862:	(bad)  
   140010863:	(bad)  
   140010864:	(bad)  
   140010865:	(bad)  
   140010866:	(bad)  
   140010867:	(bad)  
   140010868:	(bad)  
   140010869:	jmp    FWORD PTR [rbx]
   14001086b:	add    bh,bh
   14001086d:	(bad)  
   14001086e:	(bad)  
   14001086f:	(bad)  
   140010870:	(bad)  
   140010871:	jmp    FWORD PTR [rdi]
   140010873:	add    bh,bh
   140010875:	(bad)  
   140010876:	(bad)  
   140010877:	(bad)  
   140010878:	(bad)  
   140010879:	(bad)  
   14001087a:	(bad)  
   14001087b:	(bad)  
   14001087c:	(bad)  
   14001087d:	(bad)  
   14001087e:	(bad)  
   14001087f:	(bad)  
   140010880:	(bad)  
   140010881:	(bad)  
   140010882:	(bad)  
   140010883:	(bad)  
   140010884:	(bad)  
   140010885:	(bad)  
   140010886:	(bad)  
   140010887:	(bad)  
   140010888:	(bad)  
   140010889:	(bad)  
   14001088a:	(bad)  
   14001088b:	(bad)  
   14001088c:	(bad)  
   14001088d:	(bad)  
   14001088e:	(bad)  
   14001088f:	(bad)  
   140010890:	(bad)  
   140010891:	(bad)  
   140010892:	(bad)  
   140010893:	(bad)  
   140010894:	(bad)  
   140010895:	inc    DWORD PTR [rcx+0x0]
   140010898:	rex.X add BYTE PTR [rbx+0x0],al
   14001089c:	add    dil,r15b
   14001089f:	inc    DWORD PTR [rsi+0x0]
   1400108a2:	(bad)  
   1400108a3:	(bad)  
   1400108a4:	(bad)  
   1400108a5:	(bad)  
   1400108a6:	(bad)  
   1400108a7:	(bad)  
   1400108a8:	(bad)  
   1400108a9:	dec    DWORD PTR [rbx+0x0]
   1400108ac:	(bad)  
   1400108ad:	(bad)  
   1400108ae:	(bad)  
   1400108af:	(bad)  
   1400108b0:	(bad)  
   1400108b1:	(bad)  
   1400108b2:	(bad)  
   1400108b3:	(bad)  
   1400108b4:	(bad)  
   1400108b5:	call   QWORD PTR [rcx+0x0]
   1400108b8:	push   rdx
   1400108b9:	add    BYTE PTR [rbx+0x0],dl
   1400108bc:	push   rsp
   1400108bd:	add    bh,bh
   1400108bf:	(bad)  
   1400108c0:	(bad)  
   1400108c1:	call   QWORD PTR [rdi+0x0]
   1400108c4:	(bad)  
   1400108c5:	(bad)  
   1400108c6:	(bad)  
   1400108c7:	(bad)  
   1400108c8:	(bad)  
   1400108c9:	(bad)  
   1400108ca:	(bad)  
   1400108cb:	(bad)  
   1400108cc:	(bad)  
   1400108cd:	(bad)  
   1400108ce:	(bad)  
   1400108cf:	call   FWORD PTR [rsi+0x0]
   1400108d2:	pop    rdi
   1400108d3:	add    BYTE PTR [rax+0x0],ah
   1400108d6:	(bad)  
   1400108d7:	(bad)  
   1400108d8:	(bad)  
   1400108d9:	(bad)  
   1400108da:	(bad)  
   1400108db:	(bad)  
   1400108dc:	(bad)  
   1400108dd:	(bad)  
   1400108de:	(bad)  
   1400108df:	(bad)  
   1400108e0:	(bad)  
   1400108e1:	(bad)  
   1400108e2:	(bad)  
   1400108e3:	(bad)  
   1400108e4:	(bad)  
   1400108e5:	(bad)  
   1400108e6:	(bad)  
   1400108e7:	dec    DWORD PTR [rdx]
   1400108e9:	add    bh,bh
   1400108eb:	dec    DWORD PTR [rax+rax*1]
   1400108ee:	or     eax,0xffffff00
   1400108f3:	(bad)  
   1400108f4:	(bad)  
   1400108f5:	(bad)  
   1400108f6:	(bad)  
   1400108f7:	(bad)  
   1400108f8:	(bad)  
   1400108f9:	(bad)  
   1400108fa:	(bad)  
   1400108fb:	(bad)  
   1400108fc:	(bad)  
   1400108fd:	(bad)  
   1400108fe:	(bad)  
   1400108ff:	call   QWORD PTR [rsi]
   140010901:	add    bh,bh
   140010903:	(bad)  
   140010904:	(bad)  
   140010905:	(bad)  
   140010906:	(bad)  
   140010907:	(bad)  
   140010908:	(bad)  
   140010909:	(bad)  
   14001090a:	(bad)  
   14001090b:	(bad)  
   14001090c:	(bad)  
   14001090d:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010813
   140010913:	(bad)  
   140010914:	(bad)  
   140010915:	jmp    QWORD PTR [rcx]
   140010917:	add    BYTE PTR [rdx],ah
   140010919:	add    bh,bh
   14001091b:	jmp    QWORD PTR [rax+rax*1]
   14001091e:	(bad)  
   14001091f:	(bad)  
   140010920:	(bad)  
   140010921:	(bad)  
   140010922:	(bad)  
   140010923:	(bad)  
   140010924:	(bad)  
   140010925:	(bad)  
   140010926:	(bad)  
   140010927:	(bad)  
   140010928:	(bad)  
   140010929:	jmp    FWORD PTR [rbx]
   14001092b:	add    bh,bh
   14001092d:	(bad)  
   14001092e:	(bad)  
   14001092f:	(bad)  
   140010930:	(bad)  
   140010931:	jmp    FWORD PTR [rdi]
   140010933:	add    bh,bh
   140010935:	(bad)  
   140010936:	(bad)  
   140010937:	(bad)  
   140010938:	(bad)  
   140010939:	(bad)  
   14001093a:	(bad)  
   14001093b:	(bad)  
   14001093c:	(bad)  
   14001093d:	(bad)  
   14001093e:	(bad)  
   14001093f:	(bad)  
   140010940:	(bad)  
   140010941:	push   QWORD PTR [rdi]
   140010943:	add    bh,bh
   140010945:	(bad)  
   140010946:	(bad)  
   140010947:	(bad)  
   140010948:	(bad)  
   140010949:	(bad)  
   14001094a:	(bad)  
   14001094b:	(bad)  
   14001094c:	(bad)  
   14001094d:	(bad)  
   14001094e:	(bad)  
   14001094f:	(bad)  
   140010950:	(bad)  
   140010951:	(bad)  
   140010952:	(bad)  
   140010953:	(bad)  
   140010954:	(bad)  
   140010955:	inc    DWORD PTR [rcx+0x0]
   140010958:	rex.X add BYTE PTR [rbx+0x0],al
   14001095c:	add    dil,r15b
   14001095f:	inc    DWORD PTR [rsi+0x0]
   140010962:	(bad)  
   140010963:	(bad)  
   140010964:	(bad)  
   140010965:	(bad)  
   140010966:	(bad)  
   140010967:	(bad)  
   140010968:	(bad)  
   140010969:	dec    DWORD PTR [rbx+0x0]
   14001096c:	(bad)  
   14001096d:	(bad)  
   14001096e:	(bad)  
   14001096f:	(bad)  
   140010970:	(bad)  
   140010971:	(bad)  
   140010972:	(bad)  
   140010973:	(bad)  
   140010974:	(bad)  
   140010975:	call   QWORD PTR [rcx+0x0]
   140010978:	push   rdx
   140010979:	add    BYTE PTR [rbx+0x0],dl
   14001097c:	push   rsp
   14001097d:	add    bh,bh
   14001097f:	(bad)  
   140010980:	(bad)  
   140010981:	call   QWORD PTR [rdi+0x0]
   140010984:	(bad)  
   140010985:	(bad)  
   140010986:	(bad)  
   140010987:	(bad)  
   140010988:	(bad)  
   140010989:	(bad)  
   14001098a:	(bad)  
   14001098b:	(bad)  
   14001098c:	(bad)  
   14001098d:	(bad)  
   14001098e:	(bad)  
   14001098f:	call   FWORD PTR [rsi+0x0]
   140010992:	pop    rdi
   140010993:	add    BYTE PTR [rax+0x0],ah
   140010996:	(bad)  
   140010997:	(bad)  
   140010998:	(bad)  
   140010999:	(bad)  
   14001099a:	(bad)  
   14001099b:	(bad)  
   14001099c:	(bad)  
   14001099d:	(bad)  
   14001099e:	(bad)  
   14001099f:	(bad)  
   1400109a0:	(bad)  
   1400109a1:	(bad)  
   1400109a2:	(bad)  
   1400109a3:	(bad)  
   1400109a4:	(bad)  
   1400109a5:	(bad)  
   1400109a6:	(bad)  
   1400109a7:	dec    DWORD PTR [rdx]
   1400109a9:	add    bh,bh
   1400109ab:	dec    DWORD PTR [rax+rax*1]
   1400109ae:	or     eax,0xffffff00
   1400109b3:	(bad)  
   1400109b4:	(bad)  
   1400109b5:	(bad)  
   1400109b6:	(bad)  
   1400109b7:	(bad)  
   1400109b8:	(bad)  
   1400109b9:	(bad)  
   1400109ba:	(bad)  
   1400109bb:	(bad)  
   1400109bc:	(bad)  
   1400109bd:	(bad)  
   1400109be:	(bad)  
   1400109bf:	call   QWORD PTR [rsi]
   1400109c1:	add    bh,bh
   1400109c3:	(bad)  
   1400109c4:	(bad)  
   1400109c5:	(bad)  
   1400109c6:	(bad)  
   1400109c7:	(bad)  
   1400109c8:	(bad)  
   1400109c9:	(bad)  
   1400109ca:	(bad)  
   1400109cb:	(bad)  
   1400109cc:	(bad)  
   1400109cd:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x1400108d3
   1400109d3:	(bad)  
   1400109d4:	(bad)  
   1400109d5:	jmp    QWORD PTR [rcx]
   1400109d7:	add    BYTE PTR [rdx],ah
   1400109d9:	add    bh,bh
   1400109db:	jmp    QWORD PTR [rax+rax*1]
   1400109de:	(bad)  
   1400109df:	(bad)  
   1400109e0:	(bad)  
   1400109e1:	(bad)  
   1400109e2:	(bad)  
   1400109e3:	(bad)  
   1400109e4:	(bad)  
   1400109e5:	(bad)  
   1400109e6:	(bad)  
   1400109e7:	(bad)  
   1400109e8:	(bad)  
   1400109e9:	jmp    FWORD PTR [rbx]
   1400109eb:	add    bh,bh
   1400109ed:	(bad)  
   1400109ee:	(bad)  
   1400109ef:	(bad)  
   1400109f0:	(bad)  
   1400109f1:	jmp    FWORD PTR [rdi]
   1400109f3:	add    bh,bh
   1400109f5:	(bad)  
   1400109f6:	(bad)  
   1400109f7:	(bad)  
   1400109f8:	(bad)  
   1400109f9:	(bad)  
   1400109fa:	(bad)  
   1400109fb:	(bad)  
   1400109fc:	(bad)  
   1400109fd:	(bad)  
   1400109fe:	(bad)  
   1400109ff:	(bad)  
   140010a00:	(bad)  
   140010a01:	push   QWORD PTR [rdi]
   140010a03:	add    bh,bh
   140010a05:	(bad)  
   140010a06:	(bad)  
   140010a07:	(bad)  
   140010a08:	(bad)  
   140010a09:	(bad)  
   140010a0a:	(bad)  
   140010a0b:	(bad)  
   140010a0c:	(bad)  
   140010a0d:	(bad)  
   140010a0e:	(bad)  
   140010a0f:	(bad)  
   140010a10:	(bad)  
   140010a11:	(bad)  
   140010a12:	(bad)  
   140010a13:	(bad)  
   140010a14:	(bad)  
   140010a15:	inc    DWORD PTR [rcx+0x0]
   140010a18:	rex.X add BYTE PTR [rbx+0x0],al
   140010a1c:	add    dil,r15b
   140010a1f:	inc    DWORD PTR [rsi+0x0]
   140010a22:	(bad)  
   140010a23:	(bad)  
   140010a24:	(bad)  
   140010a25:	(bad)  
   140010a26:	(bad)  
   140010a27:	(bad)  
   140010a28:	(bad)  
   140010a29:	dec    DWORD PTR [rbx+0x0]
   140010a2c:	(bad)  
   140010a2d:	(bad)  
   140010a2e:	(bad)  
   140010a2f:	(bad)  
   140010a30:	(bad)  
   140010a31:	(bad)  
   140010a32:	(bad)  
   140010a33:	(bad)  
   140010a34:	(bad)  
   140010a35:	call   QWORD PTR [rcx+0x0]
   140010a38:	push   rdx
   140010a39:	add    BYTE PTR [rbx+0x0],dl
   140010a3c:	push   rsp
   140010a3d:	add    bh,bh
   140010a3f:	(bad)  
   140010a40:	(bad)  
   140010a41:	call   QWORD PTR [rdi+0x0]
   140010a44:	(bad)  
   140010a45:	(bad)  
   140010a46:	(bad)  
   140010a47:	(bad)  
   140010a48:	(bad)  
   140010a49:	(bad)  
   140010a4a:	(bad)  
   140010a4b:	(bad)  
   140010a4c:	(bad)  
   140010a4d:	(bad)  
   140010a4e:	(bad)  
   140010a4f:	call   FWORD PTR [rsi+0x0]
   140010a52:	pop    rdi
   140010a53:	add    BYTE PTR [rax+0x0],ah
   140010a56:	(bad)  
   140010a57:	(bad)  
   140010a58:	(bad)  
   140010a59:	(bad)  
   140010a5a:	(bad)  
   140010a5b:	(bad)  
   140010a5c:	(bad)  
   140010a5d:	(bad)  
   140010a5e:	(bad)  
   140010a5f:	(bad)  
   140010a60:	(bad)  
   140010a61:	(bad)  
   140010a62:	(bad)  
   140010a63:	(bad)  
   140010a64:	(bad)  
   140010a65:	(bad)  
   140010a66:	(bad)  
   140010a67:	dec    DWORD PTR [rbx]
   140010a69:	add    BYTE PTR [rax+rax*1],cl
   140010a6c:	or     eax,0xffffff00
   140010a71:	(bad)  
   140010a72:	(bad)  
   140010a73:	(bad)  
   140010a74:	(bad)  
   140010a75:	(bad)  
   140010a76:	(bad)  
   140010a77:	(bad)  
   140010a78:	(bad)  
   140010a79:	(bad)  
   140010a7a:	(bad)  
   140010a7b:	(bad)  
   140010a7c:	(bad)  
   140010a7d:	call   QWORD PTR [rsi]
   140010a7f:	add    bh,bh
   140010a81:	(bad)  
   140010a82:	(bad)  
   140010a83:	(bad)  
   140010a84:	(bad)  
   140010a85:	(bad)  
   140010a86:	(bad)  
   140010a87:	(bad)  
   140010a88:	(bad)  
   140010a89:	(bad)  
   140010a8a:	(bad)  
   140010a8b:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010991
   140010a91:	(bad)  
   140010a92:	(bad)  
   140010a93:	jmp    QWORD PTR [rcx]
   140010a95:	add    BYTE PTR [rdx],ah
   140010a97:	add    bh,bh
   140010a99:	jmp    QWORD PTR [rax+rax*1]
   140010a9c:	(bad)  
   140010a9d:	(bad)  
   140010a9e:	(bad)  
   140010a9f:	(bad)  
   140010aa0:	(bad)  
   140010aa1:	jmp    FWORD PTR [rax]
   140010aa3:	add    bh,bh
   140010aa5:	jmp    FWORD PTR [rdx]
   140010aa7:	add    BYTE PTR [rbx],ch
   140010aa9:	add    BYTE PTR [rax+rax*1],ch
   140010aac:	(bad)  
   140010aad:	(bad)  
   140010aae:	(bad)  
   140010aaf:	jmp    FWORD PTR [rdi]
   140010ab1:	add    bh,bh
   140010ab3:	(bad)  
   140010ab4:	(bad)  
   140010ab5:	(bad)  
   140010ab6:	(bad)  
   140010ab7:	push   QWORD PTR [rbx]
   140010ab9:	add    bh,bh
   140010abb:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x1400109c1
   140010ac1:	(bad)  
   140010ac2:	(bad)  
   140010ac3:	(bad)  
   140010ac4:	(bad)  
   140010ac5:	(bad)  
   140010ac6:	(bad)  
   140010ac7:	(bad)  
   140010ac8:	(bad)  
   140010ac9:	(bad)  
   140010aca:	(bad)  
   140010acb:	(bad)  
   140010acc:	(bad)  
   140010acd:	(bad)  
   140010ace:	(bad)  
   140010acf:	(bad)  
   140010ad0:	(bad)  
   140010ad1:	(bad)  
   140010ad2:	(bad)  
   140010ad3:	inc    DWORD PTR [rcx+0x0]
   140010ad6:	rex.X add BYTE PTR [rbx+0x0],al
   140010ada:	add    dil,r15b
   140010add:	inc    DWORD PTR [rsi+0x0]
   140010ae0:	(bad)  
   140010ae1:	dec    DWORD PTR [rax+0x0]
   140010ae4:	(bad)  
   140010ae5:	dec    DWORD PTR [rdx+0x0]
   140010ae8:	(bad)  
   140010ae9:	dec    DWORD PTR [rax+rax*1-0x1]
   140010aed:	(bad)  
   140010aee:	(bad)  
   140010aef:	(bad)  
   140010af0:	(bad)  
   140010af1:	(bad)  
   140010af2:	(bad)  
   140010af3:	call   QWORD PTR [rcx+0x0]
   140010af6:	push   rdx
   140010af7:	add    BYTE PTR [rbx+0x0],dl
   140010afa:	(bad)  
   140010afb:	(bad)  
   140010afc:	(bad)  
   140010afd:	(bad)  
   140010afe:	(bad)  
   140010aff:	call   QWORD PTR [rdi+0x0]
   140010b02:	(bad)  
   140010b03:	(bad)  
   140010b04:	(bad)  
   140010b05:	(bad)  
   140010b06:	(bad)  
   140010b07:	(bad)  
   140010b08:	(bad)  
   140010b09:	(bad)  
   140010b0a:	(bad)  
   140010b0b:	(bad)  
   140010b0c:	(bad)  
   140010b0d:	call   FWORD PTR [rsi+0x0]
   140010b10:	pop    rdi
   140010b11:	add    BYTE PTR [rax+0x0],ah
   140010b14:	(bad)  
   140010b15:	(bad)  
   140010b16:	(bad)  
   140010b17:	(bad)  
   140010b18:	(bad)  
   140010b19:	(bad)  
   140010b1a:	(bad)  
   140010b1b:	(bad)  
   140010b1c:	(bad)  
   140010b1d:	(bad)  
   140010b1e:	(bad)  
   140010b1f:	(bad)  
   140010b20:	(bad)  
   140010b21:	(bad)  
   140010b22:	(bad)  
   140010b23:	(bad)  
   140010b24:	(bad)  
   140010b25:	inc    DWORD PTR [rdi]
   140010b27:	add    bh,bh
   140010b29:	(bad)  
   140010b2a:	(bad)  
   140010b2b:	(bad)  
   140010b2c:	(bad)  
   140010b2d:	dec    DWORD PTR [rbx]
   140010b2f:	add    BYTE PTR [rax+rax*1],cl
   140010b32:	or     eax,0xffffff00
   140010b37:	(bad)  
   140010b38:	(bad)  
   140010b39:	(bad)  
   140010b3a:	(bad)  
   140010b3b:	(bad)  
   140010b3c:	(bad)  
   140010b3d:	(bad)  
   140010b3e:	(bad)  
   140010b3f:	(bad)  
   140010b40:	(bad)  
   140010b41:	(bad)  
   140010b42:	(bad)  
   140010b43:	call   QWORD PTR [rsi]
   140010b45:	add    bh,bh
   140010b47:	(bad)  
   140010b48:	(bad)  
   140010b49:	(bad)  
   140010b4a:	(bad)  
   140010b4b:	(bad)  
   140010b4c:	(bad)  
   140010b4d:	(bad)  
   140010b4e:	(bad)  
   140010b4f:	(bad)  
   140010b50:	(bad)  
   140010b51:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010a57
   140010b57:	(bad)  
   140010b58:	(bad)  
   140010b59:	jmp    QWORD PTR [rcx]
   140010b5b:	add    BYTE PTR [rdx],ah
   140010b5d:	add    bh,bh
   140010b5f:	jmp    QWORD PTR [rax+rax*1]
   140010b62:	(bad)  
   140010b63:	(bad)  
   140010b64:	(bad)  
   140010b65:	(bad)  
   140010b66:	(bad)  
   140010b67:	jmp    FWORD PTR [rax]
   140010b69:	add    bh,bh
   140010b6b:	jmp    FWORD PTR [rdx]
   140010b6d:	add    BYTE PTR [rbx],ch
   140010b6f:	add    BYTE PTR [rax+rax*1],ch
   140010b72:	(bad)  
   140010b73:	(bad)  
   140010b74:	(bad)  
   140010b75:	jmp    FWORD PTR [rdi]
   140010b77:	add    bh,bh
   140010b79:	(bad)  
   140010b7a:	(bad)  
   140010b7b:	(bad)  
   140010b7c:	(bad)  
   140010b7d:	push   QWORD PTR [rbx]
   140010b7f:	add    bh,bh
   140010b81:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010a87
   140010b87:	(bad)  
   140010b88:	(bad)  
   140010b89:	(bad)  
   140010b8a:	(bad)  
   140010b8b:	(bad)  
   140010b8c:	(bad)  
   140010b8d:	(bad)  
   140010b8e:	(bad)  
   140010b8f:	(bad)  
   140010b90:	(bad)  
   140010b91:	(bad)  
   140010b92:	(bad)  
   140010b93:	(bad)  
   140010b94:	(bad)  
   140010b95:	(bad)  
   140010b96:	(bad)  
   140010b97:	(bad)  
   140010b98:	(bad)  
   140010b99:	inc    DWORD PTR [rcx+0x0]
   140010b9c:	rex.X add BYTE PTR [rbx+0x0],al
   140010ba0:	add    dil,r15b
   140010ba3:	inc    DWORD PTR [rsi+0x0]
   140010ba6:	(bad)  
   140010ba7:	dec    DWORD PTR [rax+0x0]
   140010baa:	(bad)  
   140010bab:	dec    DWORD PTR [rdx+0x0]
   140010bae:	(bad)  
   140010baf:	dec    DWORD PTR [rax+rax*1-0x1]
   140010bb3:	(bad)  
   140010bb4:	(bad)  
   140010bb5:	(bad)  
   140010bb6:	(bad)  
   140010bb7:	(bad)  
   140010bb8:	(bad)  
   140010bb9:	call   QWORD PTR [rcx+0x0]
   140010bbc:	push   rdx
   140010bbd:	add    BYTE PTR [rbx+0x0],dl
   140010bc0:	(bad)  
   140010bc1:	(bad)  
   140010bc2:	(bad)  
   140010bc3:	(bad)  
   140010bc4:	(bad)  
   140010bc5:	call   QWORD PTR [rdi+0x0]
   140010bc8:	(bad)  
   140010bc9:	(bad)  
   140010bca:	(bad)  
   140010bcb:	(bad)  
   140010bcc:	(bad)  
   140010bcd:	(bad)  
   140010bce:	(bad)  
   140010bcf:	(bad)  
   140010bd0:	(bad)  
   140010bd1:	(bad)  
   140010bd2:	(bad)  
   140010bd3:	call   FWORD PTR [rsi+0x0]
   140010bd6:	pop    rdi
   140010bd7:	add    BYTE PTR [rax+0x0],ah
   140010bda:	(bad)  
   140010bdb:	(bad)  
   140010bdc:	(bad)  
   140010bdd:	(bad)  
   140010bde:	(bad)  
   140010bdf:	(bad)  
   140010be0:	(bad)  
   140010be1:	(bad)  
   140010be2:	(bad)  
   140010be3:	(bad)  
   140010be4:	(bad)  
   140010be5:	(bad)  
   140010be6:	(bad)  
   140010be7:	(bad)  
   140010be8:	(bad)  
   140010be9:	(bad)  
   140010bea:	(bad)  
   140010beb:	dec    DWORD PTR [rbx]
   140010bed:	add    BYTE PTR [rax+rax*1],cl
   140010bf0:	or     eax,0xffffff00
   140010bf5:	(bad)  
   140010bf6:	(bad)  
   140010bf7:	(bad)  
   140010bf8:	(bad)  
   140010bf9:	(bad)  
   140010bfa:	(bad)  
   140010bfb:	(bad)  
   140010bfc:	(bad)  
   140010bfd:	(bad)  
   140010bfe:	(bad)  
   140010bff:	(bad)  
   140010c00:	(bad)  
   140010c01:	call   QWORD PTR [rsi]
   140010c03:	add    bh,bh
   140010c05:	(bad)  
   140010c06:	(bad)  
   140010c07:	(bad)  
   140010c08:	(bad)  
   140010c09:	(bad)  
   140010c0a:	(bad)  
   140010c0b:	(bad)  
   140010c0c:	(bad)  
   140010c0d:	(bad)  
   140010c0e:	(bad)  
   140010c0f:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010b15
   140010c15:	(bad)  
   140010c16:	(bad)  
   140010c17:	jmp    QWORD PTR [rcx]
   140010c19:	add    BYTE PTR [rdx],ah
   140010c1b:	add    bh,bh
   140010c1d:	jmp    QWORD PTR [rax+rax*1]
   140010c20:	(bad)  
   140010c21:	(bad)  
   140010c22:	(bad)  
   140010c23:	(bad)  
   140010c24:	(bad)  
   140010c25:	jmp    FWORD PTR [rax]
   140010c27:	add    bh,bh
   140010c29:	jmp    FWORD PTR [rdx]
   140010c2b:	add    BYTE PTR [rbx],ch
   140010c2d:	add    BYTE PTR [rax+rax*1],ch
   140010c30:	(bad)  
   140010c31:	(bad)  
   140010c32:	(bad)  
   140010c33:	jmp    FWORD PTR [rdi]
   140010c35:	add    bh,bh
   140010c37:	(bad)  
   140010c38:	(bad)  
   140010c39:	(bad)  
   140010c3a:	(bad)  
   140010c3b:	push   QWORD PTR [rbx]
   140010c3d:	add    bh,bh
   140010c3f:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010b45
   140010c45:	(bad)  
   140010c46:	(bad)  
   140010c47:	(bad)  
   140010c48:	(bad)  
   140010c49:	(bad)  
   140010c4a:	(bad)  
   140010c4b:	(bad)  
   140010c4c:	(bad)  
   140010c4d:	(bad)  
   140010c4e:	(bad)  
   140010c4f:	(bad)  
   140010c50:	(bad)  
   140010c51:	(bad)  
   140010c52:	(bad)  
   140010c53:	(bad)  
   140010c54:	(bad)  
   140010c55:	(bad)  
   140010c56:	(bad)  
   140010c57:	inc    DWORD PTR [rcx+0x0]
   140010c5a:	rex.X add BYTE PTR [rbx+0x0],al
   140010c5e:	add    dil,r15b
   140010c61:	inc    DWORD PTR [rsi+0x0]
   140010c64:	(bad)  
   140010c65:	dec    DWORD PTR [rax+0x0]
   140010c68:	(bad)  
   140010c69:	dec    DWORD PTR [rdx+0x0]
   140010c6c:	rex.WXB add BYTE PTR [r8+r8*1-0x1],cl
   140010c71:	(bad)  
   140010c72:	(bad)  
   140010c73:	(bad)  
   140010c74:	(bad)  
   140010c75:	(bad)  
   140010c76:	(bad)  
   140010c77:	call   QWORD PTR [rcx+0x0]
   140010c7a:	push   rdx
   140010c7b:	add    BYTE PTR [rbx+0x0],dl
   140010c7e:	(bad)  
   140010c7f:	(bad)  
   140010c80:	(bad)  
   140010c81:	(bad)  
   140010c82:	(bad)  
   140010c83:	call   QWORD PTR [rdi+0x0]
   140010c86:	(bad)  
   140010c87:	(bad)  
   140010c88:	(bad)  
   140010c89:	(bad)  
   140010c8a:	(bad)  
   140010c8b:	(bad)  
   140010c8c:	(bad)  
   140010c8d:	(bad)  
   140010c8e:	(bad)  
   140010c8f:	(bad)  
   140010c90:	(bad)  
   140010c91:	call   FWORD PTR [rsi+0x0]
   140010c94:	pop    rdi
   140010c95:	add    BYTE PTR [rax+0x0],ah
   140010c98:	(bad)  
   140010c99:	(bad)  
   140010c9a:	(bad)  
   140010c9b:	(bad)  
   140010c9c:	(bad)  
   140010c9d:	(bad)  
   140010c9e:	(bad)  
   140010c9f:	(bad)  
   140010ca0:	(bad)  
   140010ca1:	(bad)  
   140010ca2:	(bad)  
   140010ca3:	(bad)  
   140010ca4:	(bad)  
   140010ca5:	(bad)  
   140010ca6:	(bad)  
   140010ca7:	(bad)  
   140010ca8:	(bad)  
   140010ca9:	dec    DWORD PTR [rax]
   140010cab:	add    bh,bh
   140010cad:	(bad)  
   140010cae:	(bad)  
   140010caf:	dec    DWORD PTR [rbx]
   140010cb1:	add    BYTE PTR [rax+rax*1],cl
   140010cb4:	or     eax,0xffffff00
   140010cb9:	(bad)  
   140010cba:	(bad)  
   140010cbb:	(bad)  
   140010cbc:	(bad)  
   140010cbd:	(bad)  
   140010cbe:	(bad)  
   140010cbf:	(bad)  
   140010cc0:	(bad)  
   140010cc1:	(bad)  
   140010cc2:	(bad)  
   140010cc3:	(bad)  
   140010cc4:	(bad)  
   140010cc5:	call   QWORD PTR [rsi]
   140010cc7:	add    bh,bh
   140010cc9:	(bad)  
   140010cca:	(bad)  
   140010ccb:	(bad)  
   140010ccc:	(bad)  
   140010ccd:	(bad)  
   140010cce:	(bad)  
   140010ccf:	(bad)  
   140010cd0:	(bad)  
   140010cd1:	(bad)  
   140010cd2:	(bad)  
   140010cd3:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010bd9
   140010cd9:	(bad)  
   140010cda:	(bad)  
   140010cdb:	jmp    QWORD PTR [rcx]
   140010cdd:	add    BYTE PTR [rdx],ah
   140010cdf:	add    bh,bh
   140010ce1:	jmp    QWORD PTR [rax+rax*1]
   140010ce4:	(bad)  
   140010ce5:	(bad)  
   140010ce6:	(bad)  
   140010ce7:	(bad)  
   140010ce8:	(bad)  
   140010ce9:	jmp    FWORD PTR [rax]
   140010ceb:	add    bh,bh
   140010ced:	jmp    FWORD PTR [rdx]
   140010cef:	add    BYTE PTR [rbx],ch
   140010cf1:	add    BYTE PTR [rax+rax*1],ch
   140010cf4:	(bad)  
   140010cf5:	(bad)  
   140010cf6:	(bad)  
   140010cf7:	jmp    FWORD PTR [rdi]
   140010cf9:	add    bh,bh
   140010cfb:	(bad)  
   140010cfc:	(bad)  
   140010cfd:	(bad)  
   140010cfe:	(bad)  
   140010cff:	push   QWORD PTR [rbx]
   140010d01:	add    bh,bh
   140010d03:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010c09
   140010d09:	(bad)  
   140010d0a:	cmp    BYTE PTR [rax],al
   140010d0c:	(bad)  
   140010d0d:	(bad)  
   140010d0e:	(bad)  
   140010d0f:	(bad)  
   140010d10:	(bad)  
   140010d11:	(bad)  
   140010d12:	(bad)  
   140010d13:	(bad)  
   140010d14:	(bad)  
   140010d15:	(bad)  
   140010d16:	(bad)  
   140010d17:	(bad)  
   140010d18:	(bad)  
   140010d19:	(bad)  
   140010d1a:	(bad)  
   140010d1b:	inc    DWORD PTR [rcx+0x0]
   140010d1e:	rex.X add BYTE PTR [rbx+0x0],al
   140010d22:	add    dil,r15b
   140010d25:	inc    DWORD PTR [rsi+0x0]
   140010d28:	(bad)  
   140010d29:	dec    DWORD PTR [rax+0x0]
   140010d2c:	(bad)  
   140010d2d:	dec    DWORD PTR [rdx+0x0]
   140010d30:	(bad)  
   140010d31:	dec    DWORD PTR [rax+rax*1-0x1]
   140010d35:	(bad)  
   140010d36:	(bad)  
   140010d37:	(bad)  
   140010d38:	(bad)  
   140010d39:	(bad)  
   140010d3a:	(bad)  
   140010d3b:	call   QWORD PTR [rcx+0x0]
   140010d3e:	push   rdx
   140010d3f:	add    BYTE PTR [rbx+0x0],dl
   140010d42:	(bad)  
   140010d43:	(bad)  
   140010d44:	(bad)  
   140010d45:	(bad)  
   140010d46:	(bad)  
   140010d47:	call   QWORD PTR [rdi+0x0]
   140010d4a:	(bad)  
   140010d4b:	(bad)  
   140010d4c:	(bad)  
   140010d4d:	(bad)  
   140010d4e:	(bad)  
   140010d4f:	(bad)  
   140010d50:	(bad)  
   140010d51:	(bad)  
   140010d52:	(bad)  
   140010d53:	(bad)  
   140010d54:	(bad)  
   140010d55:	call   FWORD PTR [rsi+0x0]
   140010d58:	pop    rdi
   140010d59:	add    BYTE PTR [rax+0x0],ah
   140010d5c:	(bad)  
   140010d5d:	(bad)  
   140010d5e:	(bad)  
   140010d5f:	(bad)  
   140010d60:	(bad)  
   140010d61:	(bad)  
   140010d62:	(bad)  
   140010d63:	(bad)  
   140010d64:	(bad)  
   140010d65:	(bad)  
   140010d66:	(bad)  
   140010d67:	(bad)  
   140010d68:	(bad)  
   140010d69:	(bad)  
   140010d6a:	(bad)  
   140010d6b:	(bad)  
   140010d6c:	(bad)  
   140010d6d:	dec    DWORD PTR [rax]
   140010d6f:	add    bh,bh
   140010d71:	(bad)  
   140010d72:	(bad)  
   140010d73:	dec    DWORD PTR [rbx]
   140010d75:	add    BYTE PTR [rax+rax*1],cl
   140010d78:	or     eax,0xffffff00
   140010d7d:	(bad)  
   140010d7e:	(bad)  
   140010d7f:	(bad)  
   140010d80:	(bad)  
   140010d81:	(bad)  
   140010d82:	(bad)  
   140010d83:	(bad)  
   140010d84:	(bad)  
   140010d85:	(bad)  
   140010d86:	(bad)  
   140010d87:	(bad)  
   140010d88:	(bad)  
   140010d89:	call   QWORD PTR [rsi]
   140010d8b:	add    bh,bh
   140010d8d:	(bad)  
   140010d8e:	(bad)  
   140010d8f:	(bad)  
   140010d90:	(bad)  
   140010d91:	(bad)  
   140010d92:	(bad)  
   140010d93:	(bad)  
   140010d94:	(bad)  
   140010d95:	(bad)  
   140010d96:	(bad)  
   140010d97:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010c9d
   140010d9d:	(bad)  
   140010d9e:	(bad)  
   140010d9f:	jmp    QWORD PTR [rcx]
   140010da1:	add    BYTE PTR [rdx],ah
   140010da3:	add    bh,bh
   140010da5:	jmp    QWORD PTR [rax+rax*1]
   140010da8:	(bad)  
   140010da9:	(bad)  
   140010daa:	(bad)  
   140010dab:	(bad)  
   140010dac:	(bad)  
   140010dad:	jmp    FWORD PTR [rax]
   140010daf:	add    bh,bh
   140010db1:	jmp    FWORD PTR [rdx]
   140010db3:	add    BYTE PTR [rbx],ch
   140010db5:	add    BYTE PTR [rax+rax*1],ch
   140010db8:	(bad)  
   140010db9:	(bad)  
   140010dba:	(bad)  
   140010dbb:	jmp    FWORD PTR [rdi]
   140010dbd:	add    bh,bh
   140010dbf:	(bad)  
   140010dc0:	(bad)  
   140010dc1:	(bad)  
   140010dc2:	(bad)  
   140010dc3:	push   QWORD PTR [rbx]
   140010dc5:	add    bh,bh
   140010dc7:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010ccd
   140010dcd:	(bad)  
   140010dce:	cmp    BYTE PTR [rax],al
   140010dd0:	(bad)  
   140010dd1:	(bad)  
   140010dd2:	(bad)  
   140010dd3:	(bad)  
   140010dd4:	(bad)  
   140010dd5:	(bad)  
   140010dd6:	(bad)  
   140010dd7:	(bad)  
   140010dd8:	(bad)  
   140010dd9:	(bad)  
   140010dda:	(bad)  
   140010ddb:	(bad)  
   140010ddc:	(bad)  
   140010ddd:	(bad)  
   140010dde:	(bad)  
   140010ddf:	inc    DWORD PTR [rcx+0x0]
   140010de2:	rex.X add BYTE PTR [rbx+0x0],al
   140010de6:	add    dil,r15b
   140010de9:	inc    DWORD PTR [rsi+0x0]
   140010dec:	(bad)  
   140010ded:	dec    DWORD PTR [rax+0x0]
   140010df0:	(bad)  
   140010df1:	dec    DWORD PTR [rdx+0x0]
   140010df4:	(bad)  
   140010df5:	dec    DWORD PTR [rax+rax*1-0x1]
   140010df9:	(bad)  
   140010dfa:	(bad)  
   140010dfb:	(bad)  
   140010dfc:	(bad)  
   140010dfd:	(bad)  
   140010dfe:	(bad)  
   140010dff:	call   QWORD PTR [rcx+0x0]
   140010e02:	push   rdx
   140010e03:	add    BYTE PTR [rbx+0x0],dl
   140010e06:	(bad)  
   140010e07:	(bad)  
   140010e08:	(bad)  
   140010e09:	(bad)  
   140010e0a:	(bad)  
   140010e0b:	call   QWORD PTR [rdi+0x0]
   140010e0e:	(bad)  
   140010e0f:	(bad)  
   140010e10:	(bad)  
   140010e11:	(bad)  
   140010e12:	(bad)  
   140010e13:	(bad)  
   140010e14:	(bad)  
   140010e15:	(bad)  
   140010e16:	(bad)  
   140010e17:	(bad)  
   140010e18:	(bad)  
   140010e19:	call   FWORD PTR [rsi+0x0]
   140010e1c:	pop    rdi
   140010e1d:	add    BYTE PTR [rax+0x0],ah
   140010e20:	(bad)  
   140010e21:	(bad)  
   140010e22:	(bad)  
   140010e23:	(bad)  
   140010e24:	(bad)  
   140010e25:	(bad)  
   140010e26:	(bad)  
   140010e27:	(bad)  
   140010e28:	(bad)  
   140010e29:	(bad)  
   140010e2a:	(bad)  
   140010e2b:	(bad)  
   140010e2c:	(bad)  
   140010e2d:	(bad)  
   140010e2e:	(bad)  
   140010e2f:	(bad)  
   140010e30:	(bad)  
   140010e31:	dec    DWORD PTR [rax]
   140010e33:	add    bh,bh
   140010e35:	(bad)  
   140010e36:	(bad)  
   140010e37:	dec    DWORD PTR [rbx]
   140010e39:	add    BYTE PTR [rax+rax*1],cl
   140010e3c:	or     eax,0xffffff00
   140010e41:	(bad)  
   140010e42:	(bad)  
   140010e43:	(bad)  
   140010e44:	(bad)  
   140010e45:	(bad)  
   140010e46:	(bad)  
   140010e47:	(bad)  
   140010e48:	(bad)  
   140010e49:	(bad)  
   140010e4a:	(bad)  
   140010e4b:	(bad)  
   140010e4c:	(bad)  
   140010e4d:	call   QWORD PTR [rsi]
   140010e4f:	add    bh,bh
   140010e51:	(bad)  
   140010e52:	(bad)  
   140010e53:	(bad)  
   140010e54:	(bad)  
   140010e55:	(bad)  
   140010e56:	(bad)  
   140010e57:	(bad)  
   140010e58:	(bad)  
   140010e59:	(bad)  
   140010e5a:	(bad)  
   140010e5b:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010d61
   140010e61:	(bad)  
   140010e62:	(bad)  
   140010e63:	jmp    QWORD PTR [rcx]
   140010e65:	add    BYTE PTR [rdx],ah
   140010e67:	add    bh,bh
   140010e69:	jmp    QWORD PTR [rax+rax*1]
   140010e6c:	(bad)  
   140010e6d:	(bad)  
   140010e6e:	(bad)  
   140010e6f:	(bad)  
   140010e70:	(bad)  
   140010e71:	jmp    FWORD PTR [rax]
   140010e73:	add    bh,bh
   140010e75:	jmp    FWORD PTR [rdx]
   140010e77:	add    BYTE PTR [rbx],ch
   140010e79:	add    BYTE PTR [rax+rax*1],ch
   140010e7c:	(bad)  
   140010e7d:	(bad)  
   140010e7e:	(bad)  
   140010e7f:	jmp    FWORD PTR [rdi]
   140010e81:	add    bh,bh
   140010e83:	(bad)  
   140010e84:	(bad)  
   140010e85:	(bad)  
   140010e86:	(bad)  
   140010e87:	push   QWORD PTR [rbx]
   140010e89:	add    bh,bh
   140010e8b:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010d91
   140010e91:	(bad)  
   140010e92:	cmp    BYTE PTR [rax],al
   140010e94:	(bad)  
   140010e95:	(bad)  
   140010e96:	(bad)  
   140010e97:	(bad)  
   140010e98:	(bad)  
   140010e99:	(bad)  
   140010e9a:	(bad)  
   140010e9b:	(bad)  
   140010e9c:	(bad)  
   140010e9d:	(bad)  
   140010e9e:	(bad)  
   140010e9f:	(bad)  
   140010ea0:	(bad)  
   140010ea1:	(bad)  
   140010ea2:	(bad)  
   140010ea3:	inc    DWORD PTR [rcx+0x0]
   140010ea6:	rex.X add BYTE PTR [rbx+0x0],al
   140010eaa:	add    dil,r15b
   140010ead:	inc    DWORD PTR [rsi+0x0]
   140010eb0:	(bad)  
   140010eb1:	dec    DWORD PTR [rax+0x0]
   140010eb4:	(bad)  
   140010eb5:	dec    DWORD PTR [rdx+0x0]
   140010eb8:	(bad)  
   140010eb9:	dec    DWORD PTR [rax+rax*1-0x1]
   140010ebd:	(bad)  
   140010ebe:	(bad)  
   140010ebf:	(bad)  
   140010ec0:	(bad)  
   140010ec1:	(bad)  
   140010ec2:	(bad)  
   140010ec3:	call   QWORD PTR [rcx+0x0]
   140010ec6:	push   rdx
   140010ec7:	add    BYTE PTR [rbx+0x0],dl
   140010eca:	(bad)  
   140010ecb:	(bad)  
   140010ecc:	(bad)  
   140010ecd:	(bad)  
   140010ece:	(bad)  
   140010ecf:	call   QWORD PTR [rdi+0x0]
   140010ed2:	(bad)  
   140010ed3:	(bad)  
   140010ed4:	(bad)  
   140010ed5:	(bad)  
   140010ed6:	(bad)  
   140010ed7:	(bad)  
   140010ed8:	(bad)  
   140010ed9:	(bad)  
   140010eda:	(bad)  
   140010edb:	(bad)  
   140010edc:	(bad)  
   140010edd:	call   FWORD PTR [rsi+0x0]
   140010ee0:	pop    rdi
   140010ee1:	add    BYTE PTR [rax+0x0],ah
   140010ee4:	(bad)  
   140010ee5:	(bad)  
   140010ee6:	(bad)  
   140010ee7:	(bad)  
   140010ee8:	(bad)  
   140010ee9:	(bad)  
   140010eea:	(bad)  
   140010eeb:	(bad)  
   140010eec:	(bad)  
   140010eed:	(bad)  
   140010eee:	(bad)  
   140010eef:	(bad)  
   140010ef0:	(bad)  
   140010ef1:	(bad)  
   140010ef2:	(bad)  
   140010ef3:	(bad)  
   140010ef4:	(bad)  
   140010ef5:	dec    DWORD PTR [rax]
   140010ef7:	add    bh,bh
   140010ef9:	(bad)  
   140010efa:	(bad)  
   140010efb:	dec    DWORD PTR [rbx]
   140010efd:	add    BYTE PTR [rax+rax*1],cl
   140010f00:	or     eax,0xffffff00
   140010f05:	(bad)  
   140010f06:	(bad)  
   140010f07:	(bad)  
   140010f08:	(bad)  
   140010f09:	(bad)  
   140010f0a:	(bad)  
   140010f0b:	(bad)  
   140010f0c:	(bad)  
   140010f0d:	(bad)  
   140010f0e:	(bad)  
   140010f0f:	(bad)  
   140010f10:	(bad)  
   140010f11:	call   QWORD PTR [rsi]
   140010f13:	add    bh,bh
   140010f15:	(bad)  
   140010f16:	(bad)  
   140010f17:	(bad)  
   140010f18:	(bad)  
   140010f19:	(bad)  
   140010f1a:	(bad)  
   140010f1b:	(bad)  
   140010f1c:	(bad)  
   140010f1d:	(bad)  
   140010f1e:	(bad)  
   140010f1f:	call   FWORD PTR [rip+0xffffffffffffff00]        # 0x140010e25
   140010f25:	(bad)  
   140010f26:	(bad)  
   140010f27:	jmp    QWORD PTR [rcx]
   140010f29:	add    BYTE PTR [rdx],ah
   140010f2b:	add    bh,bh
   140010f2d:	jmp    QWORD PTR [rax+rax*1]
   140010f30:	(bad)  
   140010f31:	(bad)  
   140010f32:	(bad)  
   140010f33:	(bad)  
   140010f34:	(bad)  
   140010f35:	jmp    FWORD PTR [rax]
   140010f37:	add    bh,bh
   140010f39:	jmp    FWORD PTR [rdx]
   140010f3b:	add    BYTE PTR [rbx],ch
   140010f3d:	add    BYTE PTR [rax+rax*1],ch
   140010f40:	(bad)  
   140010f41:	(bad)  
   140010f42:	(bad)  
   140010f43:	jmp    FWORD PTR [rdi]
   140010f45:	add    bh,bh
   140010f47:	(bad)  
   140010f48:	(bad)  
   140010f49:	(bad)  
   140010f4a:	(bad)  
   140010f4b:	push   QWORD PTR [rbx]
   140010f4d:	add    bh,bh
   140010f4f:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010e55
   140010f55:	(bad)  
   140010f56:	cmp    BYTE PTR [rax],al
   140010f58:	(bad)  
   140010f59:	(bad)  
   140010f5a:	(bad)  
   140010f5b:	(bad)  
   140010f5c:	(bad)  
   140010f5d:	(bad)  
   140010f5e:	(bad)  
   140010f5f:	(bad)  
   140010f60:	(bad)  
   140010f61:	(bad)  
   140010f62:	(bad)  
   140010f63:	(bad)  
   140010f64:	(bad)  
   140010f65:	(bad)  
   140010f66:	(bad)  
   140010f67:	inc    DWORD PTR [rcx+0x0]
   140010f6a:	rex.X add BYTE PTR [rbx+0x0],al
   140010f6e:	add    dil,r15b
   140010f71:	inc    DWORD PTR [rsi+0x0]
   140010f74:	(bad)  
   140010f75:	dec    DWORD PTR [rax+0x0]
   140010f78:	(bad)  
   140010f79:	dec    DWORD PTR [rdx+0x0]
   140010f7c:	(bad)  
   140010f7d:	dec    DWORD PTR [rax+rax*1-0x1]
   140010f81:	(bad)  
   140010f82:	(bad)  
   140010f83:	(bad)  
   140010f84:	(bad)  
   140010f85:	(bad)  
   140010f86:	(bad)  
   140010f87:	call   QWORD PTR [rcx+0x0]
   140010f8a:	push   rdx
   140010f8b:	add    BYTE PTR [rbx+0x0],dl
   140010f8e:	(bad)  
   140010f8f:	(bad)  
   140010f90:	(bad)  
   140010f91:	(bad)  
   140010f92:	(bad)  
   140010f93:	call   QWORD PTR [rdi+0x0]
   140010f96:	(bad)  
   140010f97:	(bad)  
   140010f98:	(bad)  
   140010f99:	(bad)  
   140010f9a:	(bad)  
   140010f9b:	(bad)  
   140010f9c:	(bad)  
   140010f9d:	(bad)  
   140010f9e:	(bad)  
   140010f9f:	(bad)  
   140010fa0:	(bad)  
   140010fa1:	call   FWORD PTR [rsi+0x0]
   140010fa4:	pop    rdi
   140010fa5:	add    BYTE PTR [rax+0x0],ah
   140010fa8:	(bad)  
   140010fa9:	(bad)  
   140010faa:	(bad)  
   140010fab:	(bad)  
   140010fac:	(bad)  
   140010fad:	(bad)  
   140010fae:	(bad)  
   140010faf:	(bad)  
   140010fb0:	(bad)  
   140010fb1:	(bad)  
   140010fb2:	(bad)  
   140010fb3:	(bad)  
   140010fb4:	(bad)  
   140010fb5:	(bad)  
   140010fb6:	(bad)  
   140010fb7:	(bad)  
   140010fb8:	(bad)  
   140010fb9:	dec    DWORD PTR [rbx]
   140010fbb:	add    BYTE PTR [rax+rax*1],cl
   140010fbe:	or     eax,0xffffff00
   140010fc3:	(bad)  
   140010fc4:	(bad)  
   140010fc5:	(bad)  
   140010fc6:	(bad)  
   140010fc7:	(bad)  
   140010fc8:	(bad)  
   140010fc9:	(bad)  
   140010fca:	(bad)  
   140010fcb:	(bad)  
   140010fcc:	(bad)  
   140010fcd:	(bad)  
   140010fce:	(bad)  
   140010fcf:	call   QWORD PTR [rsi]
   140010fd1:	add    bh,bh
   140010fd3:	(bad)  
   140010fd4:	(bad)  
   140010fd5:	(bad)  
   140010fd6:	(bad)  
   140010fd7:	(bad)  
   140010fd8:	(bad)  
   140010fd9:	(bad)  
   140010fda:	(bad)  
   140010fdb:	(bad)  
   140010fdc:	(bad)  
   140010fdd:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f012de3
   140010fe3:	(bad)  
   140010fe4:	(bad)  
   140010fe5:	jmp    QWORD PTR [rcx]
   140010fe7:	add    BYTE PTR [rdx],ah
   140010fe9:	add    bh,bh
   140010feb:	jmp    QWORD PTR [rax+rax*1]
   140010fee:	(bad)  
   140010fef:	(bad)  
   140010ff0:	(bad)  
   140010ff1:	(bad)  
   140010ff2:	(bad)  
   140010ff3:	jmp    FWORD PTR [rax]
   140010ff5:	add    bh,bh
   140010ff7:	jmp    FWORD PTR [rdx]
   140010ff9:	add    BYTE PTR [rbx],ch
   140010ffb:	add    BYTE PTR [rax+rax*1],ch
   140010ffe:	(bad)  
   140010fff:	(bad)  
   140011000:	(bad)  
   140011001:	jmp    FWORD PTR [rdi]
   140011003:	add    bh,bh
   140011005:	(bad)  
   140011006:	(bad)  
   140011007:	(bad)  
   140011008:	(bad)  
   140011009:	push   QWORD PTR [rbx]
   14001100b:	add    bh,bh
   14001100d:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010f13
   140011013:	(bad)  
   140011014:	(bad)  
   140011015:	(bad)  
   140011016:	(bad)  
   140011017:	(bad)  
   140011018:	(bad)  
   140011019:	(bad)  
   14001101a:	(bad)  
   14001101b:	(bad)  
   14001101c:	(bad)  
   14001101d:	(bad)  
   14001101e:	cmp    eax,0xffffff00
   140011023:	(bad)  
   140011024:	(bad)  
   140011025:	inc    DWORD PTR [rcx+0x0]
   140011028:	rex.X add BYTE PTR [rbx+0x0],al
   14001102c:	add    BYTE PTR [rbp+0x0],r8b
   140011030:	rex.RX add dil,r15b
   140011033:	dec    DWORD PTR [rax+0x0]
   140011036:	rex.WB add BYTE PTR [r10+0x0],cl
   14001103a:	(bad)  
   14001103b:	dec    DWORD PTR [rax+rax*1-0x1]
   14001103f:	dec    DWORD PTR [rsi+0x0]
   140011042:	(bad)  
   140011043:	(bad)  
   140011044:	(bad)  
   140011045:	call   QWORD PTR [rcx+0x0]
   140011048:	push   rdx
   140011049:	add    BYTE PTR [rbx+0x0],dl
   14001104c:	(bad)  
   14001104d:	(bad)  
   14001104e:	(bad)  
   14001104f:	(bad)  
   140011050:	(bad)  
   140011051:	call   QWORD PTR [rdi+0x0]
   140011054:	(bad)  
   140011055:	(bad)  
   140011056:	(bad)  
   140011057:	(bad)  
   140011058:	(bad)  
   140011059:	(bad)  
   14001105a:	(bad)  
   14001105b:	(bad)  
   14001105c:	(bad)  
   14001105d:	(bad)  
   14001105e:	(bad)  
   14001105f:	call   FWORD PTR [rsi+0x0]
   140011062:	pop    rdi
   140011063:	add    BYTE PTR [rax+0x0],ah
   140011066:	(bad)  
   140011067:	(bad)  
   140011068:	(bad)  
   140011069:	(bad)  
   14001106a:	(bad)  
   14001106b:	(bad)  
   14001106c:	(bad)  
   14001106d:	(bad)  
   14001106e:	(bad)  
   14001106f:	(bad)  
   140011070:	(bad)  
   140011071:	(bad)  
   140011072:	(bad)  
   140011073:	(bad)  
   140011074:	(bad)  
   140011075:	(bad)  
   140011076:	(bad)  
   140011077:	dec    DWORD PTR [rbx]
   140011079:	add    BYTE PTR [rax+rax*1],cl
   14001107c:	or     eax,0xffffff00
   140011081:	(bad)  
   140011082:	(bad)  
   140011083:	(bad)  
   140011084:	(bad)  
   140011085:	(bad)  
   140011086:	(bad)  
   140011087:	(bad)  
   140011088:	(bad)  
   140011089:	(bad)  
   14001108a:	(bad)  
   14001108b:	(bad)  
   14001108c:	(bad)  
   14001108d:	call   QWORD PTR [rsi]
   14001108f:	add    bh,bh
   140011091:	(bad)  
   140011092:	(bad)  
   140011093:	(bad)  
   140011094:	(bad)  
   140011095:	(bad)  
   140011096:	(bad)  
   140011097:	(bad)  
   140011098:	(bad)  
   140011099:	(bad)  
   14001109a:	(bad)  
   14001109b:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f012ea1
   1400110a1:	(bad)  
   1400110a2:	(bad)  
   1400110a3:	jmp    QWORD PTR [rcx]
   1400110a5:	add    BYTE PTR [rdx],ah
   1400110a7:	add    bh,bh
   1400110a9:	jmp    QWORD PTR [rax+rax*1]
   1400110ac:	(bad)  
   1400110ad:	(bad)  
   1400110ae:	(bad)  
   1400110af:	(bad)  
   1400110b0:	(bad)  
   1400110b1:	jmp    FWORD PTR [rax]
   1400110b3:	add    bh,bh
   1400110b5:	jmp    FWORD PTR [rdx]
   1400110b7:	add    BYTE PTR [rbx],ch
   1400110b9:	add    BYTE PTR [rax+rax*1],ch
   1400110bc:	(bad)  
   1400110bd:	(bad)  
   1400110be:	(bad)  
   1400110bf:	jmp    FWORD PTR [rdi]
   1400110c1:	add    bh,bh
   1400110c3:	(bad)  
   1400110c4:	(bad)  
   1400110c5:	(bad)  
   1400110c6:	(bad)  
   1400110c7:	push   QWORD PTR [rbx]
   1400110c9:	add    bh,bh
   1400110cb:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140010fd1
   1400110d1:	(bad)  
   1400110d2:	(bad)  
   1400110d3:	(bad)  
   1400110d4:	(bad)  
   1400110d5:	(bad)  
   1400110d6:	(bad)  
   1400110d7:	(bad)  
   1400110d8:	(bad)  
   1400110d9:	(bad)  
   1400110da:	(bad)  
   1400110db:	(bad)  
   1400110dc:	cmp    eax,0xffffff00
   1400110e1:	(bad)  
   1400110e2:	(bad)  
   1400110e3:	inc    DWORD PTR [rcx+0x0]
   1400110e6:	rex.X add BYTE PTR [rbx+0x0],al
   1400110ea:	add    BYTE PTR [rbp+0x0],r8b
   1400110ee:	rex.RX add dil,r15b
   1400110f1:	dec    DWORD PTR [rax+0x0]
   1400110f4:	rex.WB add BYTE PTR [r10+0x0],cl
   1400110f8:	(bad)  
   1400110f9:	dec    DWORD PTR [rax+rax*1-0x1]
   1400110fd:	dec    DWORD PTR [rsi+0x0]
   140011100:	(bad)  
   140011101:	(bad)  
   140011102:	(bad)  
   140011103:	call   QWORD PTR [rcx+0x0]
   140011106:	push   rdx
   140011107:	add    BYTE PTR [rbx+0x0],dl
   14001110a:	(bad)  
   14001110b:	(bad)  
   14001110c:	(bad)  
   14001110d:	(bad)  
   14001110e:	(bad)  
   14001110f:	call   QWORD PTR [rdi+0x0]
   140011112:	(bad)  
   140011113:	(bad)  
   140011114:	(bad)  
   140011115:	(bad)  
   140011116:	(bad)  
   140011117:	(bad)  
   140011118:	(bad)  
   140011119:	(bad)  
   14001111a:	(bad)  
   14001111b:	(bad)  
   14001111c:	(bad)  
   14001111d:	call   FWORD PTR [rsi+0x0]
   140011120:	pop    rdi
   140011121:	add    BYTE PTR [rax+0x0],ah
   140011124:	(bad)  
   140011125:	(bad)  
   140011126:	(bad)  
   140011127:	(bad)  
   140011128:	(bad)  
   140011129:	(bad)  
   14001112a:	(bad)  
   14001112b:	(bad)  
   14001112c:	(bad)  
   14001112d:	(bad)  
   14001112e:	(bad)  
   14001112f:	(bad)  
   140011130:	(bad)  
   140011131:	(bad)  
   140011132:	(bad)  
   140011133:	(bad)  
   140011134:	(bad)  
   140011135:	dec    DWORD PTR [rbx]
   140011137:	add    BYTE PTR [rax+rax*1],cl
   14001113a:	or     eax,0xffffff00
   14001113f:	(bad)  
   140011140:	(bad)  
   140011141:	(bad)  
   140011142:	(bad)  
   140011143:	(bad)  
   140011144:	(bad)  
   140011145:	(bad)  
   140011146:	(bad)  
   140011147:	(bad)  
   140011148:	(bad)  
   140011149:	(bad)  
   14001114a:	(bad)  
   14001114b:	call   QWORD PTR [rsi]
   14001114d:	add    bh,bh
   14001114f:	(bad)  
   140011150:	(bad)  
   140011151:	(bad)  
   140011152:	(bad)  
   140011153:	(bad)  
   140011154:	(bad)  
   140011155:	(bad)  
   140011156:	(bad)  
   140011157:	(bad)  
   140011158:	(bad)  
   140011159:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f012f5f
   14001115f:	(bad)  
   140011160:	(bad)  
   140011161:	jmp    QWORD PTR [rcx]
   140011163:	add    BYTE PTR [rdx],ah
   140011165:	add    bh,bh
   140011167:	jmp    QWORD PTR [rax+rax*1]
   14001116a:	(bad)  
   14001116b:	(bad)  
   14001116c:	(bad)  
   14001116d:	(bad)  
   14001116e:	(bad)  
   14001116f:	jmp    FWORD PTR [rax]
   140011171:	add    bh,bh
   140011173:	jmp    FWORD PTR [rdx]
   140011175:	add    BYTE PTR [rbx],ch
   140011177:	add    BYTE PTR [rax+rax*1],ch
   14001117a:	(bad)  
   14001117b:	(bad)  
   14001117c:	(bad)  
   14001117d:	jmp    FWORD PTR [rdi]
   14001117f:	add    bh,bh
   140011181:	(bad)  
   140011182:	(bad)  
   140011183:	(bad)  
   140011184:	(bad)  
   140011185:	push   QWORD PTR [rbx]
   140011187:	add    bh,bh
   140011189:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001108f
   14001118f:	(bad)  
   140011190:	(bad)  
   140011191:	(bad)  
   140011192:	(bad)  
   140011193:	(bad)  
   140011194:	(bad)  
   140011195:	(bad)  
   140011196:	(bad)  
   140011197:	(bad)  
   140011198:	(bad)  
   140011199:	(bad)  
   14001119a:	cmp    eax,0xffffff00
   14001119f:	(bad)  
   1400111a0:	(bad)  
   1400111a1:	inc    DWORD PTR [rcx+0x0]
   1400111a4:	rex.X add BYTE PTR [rbx+0x0],al
   1400111a8:	add    BYTE PTR [rbp+0x0],r8b
   1400111ac:	rex.RX add dil,r15b
   1400111af:	dec    DWORD PTR [rax+0x0]
   1400111b2:	rex.WB add BYTE PTR [r10+0x0],cl
   1400111b6:	(bad)  
   1400111b7:	dec    DWORD PTR [rax+rax*1-0x1]
   1400111bb:	dec    DWORD PTR [rsi+0x0]
   1400111be:	(bad)  
   1400111bf:	(bad)  
   1400111c0:	(bad)  
   1400111c1:	call   QWORD PTR [rcx+0x0]
   1400111c4:	push   rdx
   1400111c5:	add    BYTE PTR [rbx+0x0],dl
   1400111c8:	(bad)  
   1400111c9:	(bad)  
   1400111ca:	(bad)  
   1400111cb:	(bad)  
   1400111cc:	(bad)  
   1400111cd:	call   QWORD PTR [rdi+0x0]
   1400111d0:	(bad)  
   1400111d1:	(bad)  
   1400111d2:	(bad)  
   1400111d3:	(bad)  
   1400111d4:	(bad)  
   1400111d5:	(bad)  
   1400111d6:	(bad)  
   1400111d7:	(bad)  
   1400111d8:	(bad)  
   1400111d9:	(bad)  
   1400111da:	(bad)  
   1400111db:	call   FWORD PTR [rsi+0x0]
   1400111de:	pop    rdi
   1400111df:	add    BYTE PTR [rax+0x0],ah
   1400111e2:	(bad)  
   1400111e3:	(bad)  
   1400111e4:	(bad)  
   1400111e5:	(bad)  
   1400111e6:	(bad)  
   1400111e7:	(bad)  
   1400111e8:	(bad)  
   1400111e9:	(bad)  
   1400111ea:	(bad)  
   1400111eb:	(bad)  
   1400111ec:	(bad)  
   1400111ed:	(bad)  
   1400111ee:	(bad)  
   1400111ef:	(bad)  
   1400111f0:	(bad)  
   1400111f1:	(bad)  
   1400111f2:	(bad)  
   1400111f3:	inc    DWORD PTR [rax+rax*1]
   1400111f6:	add    eax,0xff000600
   1400111fb:	(bad)  
   1400111fc:	(bad)  
   1400111fd:	dec    DWORD PTR [rcx]
   1400111ff:	add    BYTE PTR [rdx],cl
   140011201:	add    BYTE PTR [rbx],cl
   140011203:	add    bh,bh
   140011205:	(bad)  
   140011206:	(bad)  
   140011207:	dec    DWORD PTR [rsi]
   140011209:	add    bh,bh
   14001120b:	call   QWORD PTR [rax]
   14001120d:	add    bh,bh
   14001120f:	(bad)  
   140011210:	(bad)  
   140011211:	(bad)  
   140011212:	(bad)  
   140011213:	call   QWORD PTR [rax+rax*1]
   140011216:	adc    eax,0xff001600
   14001121b:	(bad)  
   14001121c:	(bad)  
   14001121d:	(bad)  
   14001121e:	(bad)  
   14001121f:	(bad)  
   140011220:	(bad)  
   140011221:	(bad)  
   140011222:	(bad)  
   140011223:	(bad)  
   140011224:	(bad)  
   140011225:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01302b
   14001122b:	add    BYTE PTR [rax],ah
   14001122d:	add    bh,bh
   14001122f:	(bad)  
   140011230:	(bad)  
   140011231:	(bad)  
   140011232:	(bad)  
   140011233:	(bad)  
   140011234:	(bad)  
   140011235:	(bad)  
   140011236:	(bad)  
   140011237:	(bad)  
   140011238:	(bad)  
   140011239:	(bad)  
   14001123a:	(bad)  
   14001123b:	(bad)  
   14001123c:	(bad)  
   14001123d:	(bad)  
   14001123e:	(bad)  
   14001123f:	(bad)  
   140011240:	(bad)  
   140011241:	jmp    FWORD PTR [rbx]
   140011243:	add    bh,bh
   140011245:	(bad)  
   140011246:	(bad)  
   140011247:	(bad)  
   140011248:	(bad)  
   140011249:	(bad)  
   14001124a:	(bad)  
   14001124b:	(bad)  
   14001124c:	(bad)  
   14001124d:	(bad)  
   14001124e:	(bad)  
   14001124f:	(bad)  
   140011250:	(bad)  
   140011251:	(bad)  
   140011252:	(bad)  
   140011253:	(bad)  
   140011254:	(bad)  
   140011255:	(bad)  
   140011256:	(bad)  
   140011257:	(bad)  
   140011258:	(bad)  
   140011259:	(bad)  
   14001125a:	(bad)  
   14001125b:	(bad)  
   14001125c:	(bad)  
   14001125d:	(bad)  
   14001125e:	(bad)  
   14001125f:	(bad)  
   140011260:	(bad)  
   140011261:	(bad)  
   140011262:	cmp    eax,DWORD PTR [rax]
   140011264:	(bad)  
   140011265:	(bad)  
   140011266:	(bad)  
   140011267:	(bad)  
   140011268:	(bad)  
   140011269:	(bad)  
   14001126a:	(bad)  
   14001126b:	(bad)  
   14001126c:	(bad)  
   14001126d:	(bad)  
   14001126e:	(bad)  
   14001126f:	inc    DWORD PTR [rdx+0x0]
   140011272:	add    BYTE PTR [r8+r8*1+0x45],al
   140011277:	add    BYTE PTR [rsi+0x0],al
   14001127a:	rex.RXB add r15b,r15b
   14001127d:	dec    DWORD PTR [rcx+0x0]
   140011280:	rex.WX add BYTE PTR [rbx+0x0],cl
   140011284:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140011288:	rex.WRX add dil,r15b
   14001128b:	(bad)  
   14001128c:	(bad)  
   14001128d:	call   QWORD PTR [rcx+0x0]
   140011290:	push   rdx
   140011291:	add    BYTE PTR [rbx+0x0],dl
   140011294:	push   rsp
   140011295:	add    BYTE PTR [rbp+0x0],dl
   140011298:	push   rsi
   140011299:	add    bh,bh
   14001129b:	(bad)  
   14001129c:	(bad)  
   14001129d:	(bad)  
   14001129e:	(bad)  
   14001129f:	(bad)  
   1400112a0:	(bad)  
   1400112a1:	(bad)  
   1400112a2:	(bad)  
   1400112a3:	(bad)  
   1400112a4:	(bad)  
   1400112a5:	(bad)  
   1400112a6:	(bad)  
   1400112a7:	call   FWORD PTR [rsi+0x0]
   1400112aa:	pop    rdi
   1400112ab:	add    BYTE PTR [rax+0x0],ah
   1400112ae:	(bad)  
   1400112af:	(bad)  
   1400112b0:	(bad)  
   1400112b1:	(bad)  
   1400112b2:	(bad)  
   1400112b3:	(bad)  
   1400112b4:	(bad)  
   1400112b5:	(bad)  
   1400112b6:	(bad)  
   1400112b7:	(bad)  
   1400112b8:	(bad)  
   1400112b9:	(bad)  
   1400112ba:	(bad)  
   1400112bb:	(bad)  
   1400112bc:	(bad)  
   1400112bd:	(bad)  
   1400112be:	(bad)  
   1400112bf:	inc    DWORD PTR [rax+rax*1]
   1400112c2:	add    eax,0xff000600
   1400112c7:	(bad)  
   1400112c8:	(bad)  
   1400112c9:	dec    DWORD PTR [rcx]
   1400112cb:	add    BYTE PTR [rdx],cl
   1400112cd:	add    BYTE PTR [rbx],cl
   1400112cf:	add    bh,bh
   1400112d1:	(bad)  
   1400112d2:	(bad)  
   1400112d3:	dec    DWORD PTR [rsi]
   1400112d5:	add    bh,bh
   1400112d7:	call   QWORD PTR [rax]
   1400112d9:	add    bh,bh
   1400112db:	(bad)  
   1400112dc:	(bad)  
   1400112dd:	(bad)  
   1400112de:	(bad)  
   1400112df:	call   QWORD PTR [rax+rax*1]
   1400112e2:	adc    eax,0xff001600
   1400112e7:	(bad)  
   1400112e8:	(bad)  
   1400112e9:	(bad)  
   1400112ea:	(bad)  
   1400112eb:	(bad)  
   1400112ec:	(bad)  
   1400112ed:	(bad)  
   1400112ee:	(bad)  
   1400112ef:	(bad)  
   1400112f0:	(bad)  
   1400112f1:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f0130f7
   1400112f7:	add    BYTE PTR [rax],ah
   1400112f9:	add    bh,bh
   1400112fb:	(bad)  
   1400112fc:	(bad)  
   1400112fd:	(bad)  
   1400112fe:	(bad)  
   1400112ff:	(bad)  
   140011300:	(bad)  
   140011301:	(bad)  
   140011302:	(bad)  
   140011303:	(bad)  
   140011304:	(bad)  
   140011305:	(bad)  
   140011306:	(bad)  
   140011307:	(bad)  
   140011308:	(bad)  
   140011309:	(bad)  
   14001130a:	(bad)  
   14001130b:	(bad)  
   14001130c:	(bad)  
   14001130d:	jmp    FWORD PTR [rbx]
   14001130f:	add    bh,bh
   140011311:	(bad)  
   140011312:	(bad)  
   140011313:	(bad)  
   140011314:	(bad)  
   140011315:	jmp    FWORD PTR [rdi]
   140011317:	add    bh,bh
   140011319:	(bad)  
   14001131a:	(bad)  
   14001131b:	(bad)  
   14001131c:	(bad)  
   14001131d:	(bad)  
   14001131e:	(bad)  
   14001131f:	(bad)  
   140011320:	(bad)  
   140011321:	(bad)  
   140011322:	(bad)  
   140011323:	(bad)  
   140011324:	(bad)  
   140011325:	(bad)  
   140011326:	(bad)  
   140011327:	(bad)  
   140011328:	(bad)  
   140011329:	(bad)  
   14001132a:	(bad)  
   14001132b:	(bad)  
   14001132c:	(bad)  
   14001132d:	(bad)  
   14001132e:	cmp    eax,DWORD PTR [rax]
   140011330:	(bad)  
   140011331:	(bad)  
   140011332:	(bad)  
   140011333:	(bad)  
   140011334:	(bad)  
   140011335:	(bad)  
   140011336:	(bad)  
   140011337:	(bad)  
   140011338:	(bad)  
   140011339:	inc    DWORD PTR [rcx+0x0]
   14001133c:	rex.X add BYTE PTR [rbx+0x0],al
   140011340:	add    BYTE PTR [rbp+0x0],r8b
   140011344:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140011348:	(bad)  
   140011349:	dec    DWORD PTR [rcx+0x0]
   14001134c:	rex.WX add BYTE PTR [rbx+0x0],cl
   140011350:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140011354:	rex.WRX add dil,r15b
   140011357:	(bad)  
   140011358:	(bad)  
   140011359:	call   QWORD PTR [rcx+0x0]
   14001135c:	push   rdx
   14001135d:	add    BYTE PTR [rbx+0x0],dl
   140011360:	push   rsp
   140011361:	add    BYTE PTR [rbp+0x0],dl
   140011364:	push   rsi
   140011365:	add    bh,bh
   140011367:	(bad)  
   140011368:	(bad)  
   140011369:	(bad)  
   14001136a:	(bad)  
   14001136b:	(bad)  
   14001136c:	(bad)  
   14001136d:	(bad)  
   14001136e:	(bad)  
   14001136f:	(bad)  
   140011370:	(bad)  
   140011371:	(bad)  
   140011372:	(bad)  
   140011373:	call   FWORD PTR [rsi+0x0]
   140011376:	pop    rdi
   140011377:	add    BYTE PTR [rax+0x0],ah
   14001137a:	(bad)  
   14001137b:	(bad)  
   14001137c:	(bad)  
   14001137d:	(bad)  
   14001137e:	(bad)  
   14001137f:	(bad)  
   140011380:	(bad)  
   140011381:	(bad)  
   140011382:	(bad)  
   140011383:	(bad)  
   140011384:	(bad)  
   140011385:	(bad)  
   140011386:	(bad)  
   140011387:	(bad)  
   140011388:	(bad)  
   140011389:	(bad)  
   14001138a:	(bad)  
   14001138b:	inc    DWORD PTR [rax+rax*1]
   14001138e:	add    eax,0xff000600
   140011393:	(bad)  
   140011394:	(bad)  
   140011395:	dec    DWORD PTR [rcx]
   140011397:	add    BYTE PTR [rdx],cl
   140011399:	add    BYTE PTR [rbx],cl
   14001139b:	add    bh,bh
   14001139d:	(bad)  
   14001139e:	(bad)  
   14001139f:	dec    DWORD PTR [rsi]
   1400113a1:	add    bh,bh
   1400113a3:	call   QWORD PTR [rax]
   1400113a5:	add    bh,bh
   1400113a7:	(bad)  
   1400113a8:	(bad)  
   1400113a9:	(bad)  
   1400113aa:	(bad)  
   1400113ab:	call   QWORD PTR [rax+rax*1]
   1400113ae:	adc    eax,0xff001600
   1400113b3:	(bad)  
   1400113b4:	(bad)  
   1400113b5:	(bad)  
   1400113b6:	(bad)  
   1400113b7:	(bad)  
   1400113b8:	(bad)  
   1400113b9:	(bad)  
   1400113ba:	(bad)  
   1400113bb:	(bad)  
   1400113bc:	(bad)  
   1400113bd:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f0131c3
   1400113c3:	add    BYTE PTR [rax],ah
   1400113c5:	add    bh,bh
   1400113c7:	(bad)  
   1400113c8:	(bad)  
   1400113c9:	(bad)  
   1400113ca:	(bad)  
   1400113cb:	(bad)  
   1400113cc:	(bad)  
   1400113cd:	(bad)  
   1400113ce:	(bad)  
   1400113cf:	(bad)  
   1400113d0:	(bad)  
   1400113d1:	(bad)  
   1400113d2:	(bad)  
   1400113d3:	(bad)  
   1400113d4:	(bad)  
   1400113d5:	(bad)  
   1400113d6:	(bad)  
   1400113d7:	(bad)  
   1400113d8:	(bad)  
   1400113d9:	jmp    FWORD PTR [rbx]
   1400113db:	add    bh,bh
   1400113dd:	(bad)  
   1400113de:	(bad)  
   1400113df:	(bad)  
   1400113e0:	(bad)  
   1400113e1:	jmp    FWORD PTR [rdi]
   1400113e3:	add    bh,bh
   1400113e5:	(bad)  
   1400113e6:	(bad)  
   1400113e7:	(bad)  
   1400113e8:	(bad)  
   1400113e9:	(bad)  
   1400113ea:	(bad)  
   1400113eb:	(bad)  
   1400113ec:	(bad)  
   1400113ed:	(bad)  
   1400113ee:	(bad)  
   1400113ef:	(bad)  
   1400113f0:	(bad)  
   1400113f1:	(bad)  
   1400113f2:	(bad)  
   1400113f3:	(bad)  
   1400113f4:	(bad)  
   1400113f5:	(bad)  
   1400113f6:	(bad)  
   1400113f7:	(bad)  
   1400113f8:	(bad)  
   1400113f9:	(bad)  
   1400113fa:	cmp    eax,DWORD PTR [rax]
   1400113fc:	(bad)  
   1400113fd:	(bad)  
   1400113fe:	(bad)  
   1400113ff:	(bad)  
   140011400:	(bad)  
   140011401:	(bad)  
   140011402:	(bad)  
   140011403:	(bad)  
   140011404:	(bad)  
   140011405:	inc    DWORD PTR [rcx+0x0]
   140011408:	rex.X add BYTE PTR [rbx+0x0],al
   14001140c:	add    BYTE PTR [rbp+0x0],r8b
   140011410:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140011414:	(bad)  
   140011415:	dec    DWORD PTR [rcx+0x0]
   140011418:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001141c:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140011420:	rex.WRX add dil,r15b
   140011423:	(bad)  
   140011424:	(bad)  
   140011425:	call   QWORD PTR [rcx+0x0]
   140011428:	push   rdx
   140011429:	add    BYTE PTR [rbx+0x0],dl
   14001142c:	push   rsp
   14001142d:	add    BYTE PTR [rbp+0x0],dl
   140011430:	push   rsi
   140011431:	add    bh,bh
   140011433:	(bad)  
   140011434:	(bad)  
   140011435:	(bad)  
   140011436:	(bad)  
   140011437:	(bad)  
   140011438:	(bad)  
   140011439:	(bad)  
   14001143a:	(bad)  
   14001143b:	(bad)  
   14001143c:	(bad)  
   14001143d:	(bad)  
   14001143e:	(bad)  
   14001143f:	call   FWORD PTR [rsi+0x0]
   140011442:	pop    rdi
   140011443:	add    BYTE PTR [rax+0x0],ah
   140011446:	(bad)  
   140011447:	(bad)  
   140011448:	(bad)  
   140011449:	(bad)  
   14001144a:	(bad)  
   14001144b:	(bad)  
   14001144c:	(bad)  
   14001144d:	(bad)  
   14001144e:	(bad)  
   14001144f:	(bad)  
   140011450:	(bad)  
   140011451:	(bad)  
   140011452:	(bad)  
   140011453:	(bad)  
   140011454:	(bad)  
   140011455:	(bad)  
   140011456:	(bad)  
   140011457:	inc    DWORD PTR [rax+rax*1]
   14001145a:	add    eax,0xff000600
   14001145f:	(bad)  
   140011460:	(bad)  
   140011461:	dec    DWORD PTR [rcx]
   140011463:	add    BYTE PTR [rdx],cl
   140011465:	add    BYTE PTR [rbx],cl
   140011467:	add    bh,bh
   140011469:	(bad)  
   14001146a:	(bad)  
   14001146b:	dec    DWORD PTR [rsi]
   14001146d:	add    bh,bh
   14001146f:	call   QWORD PTR [rax]
   140011471:	add    bh,bh
   140011473:	(bad)  
   140011474:	(bad)  
   140011475:	(bad)  
   140011476:	(bad)  
   140011477:	call   QWORD PTR [rax+rax*1]
   14001147a:	adc    eax,0xff001600
   14001147f:	(bad)  
   140011480:	(bad)  
   140011481:	(bad)  
   140011482:	(bad)  
   140011483:	(bad)  
   140011484:	(bad)  
   140011485:	(bad)  
   140011486:	(bad)  
   140011487:	(bad)  
   140011488:	(bad)  
   140011489:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f01328f
   14001148f:	add    BYTE PTR [rax],ah
   140011491:	add    bh,bh
   140011493:	(bad)  
   140011494:	(bad)  
   140011495:	(bad)  
   140011496:	(bad)  
   140011497:	(bad)  
   140011498:	(bad)  
   140011499:	(bad)  
   14001149a:	(bad)  
   14001149b:	(bad)  
   14001149c:	(bad)  
   14001149d:	(bad)  
   14001149e:	(bad)  
   14001149f:	(bad)  
   1400114a0:	(bad)  
   1400114a1:	(bad)  
   1400114a2:	(bad)  
   1400114a3:	(bad)  
   1400114a4:	(bad)  
   1400114a5:	jmp    FWORD PTR [rbx]
   1400114a7:	add    bh,bh
   1400114a9:	(bad)  
   1400114aa:	(bad)  
   1400114ab:	(bad)  
   1400114ac:	(bad)  
   1400114ad:	jmp    FWORD PTR [rdi]
   1400114af:	add    bh,bh
   1400114b1:	(bad)  
   1400114b2:	(bad)  
   1400114b3:	(bad)  
   1400114b4:	(bad)  
   1400114b5:	(bad)  
   1400114b6:	(bad)  
   1400114b7:	(bad)  
   1400114b8:	(bad)  
   1400114b9:	(bad)  
   1400114ba:	(bad)  
   1400114bb:	(bad)  
   1400114bc:	(bad)  
   1400114bd:	push   QWORD PTR [rdi]
   1400114bf:	add    bh,bh
   1400114c1:	(bad)  
   1400114c2:	(bad)  
   1400114c3:	(bad)  
   1400114c4:	(bad)  
   1400114c5:	(bad)  
   1400114c6:	cmp    eax,DWORD PTR [rax]
   1400114c8:	(bad)  
   1400114c9:	(bad)  
   1400114ca:	(bad)  
   1400114cb:	(bad)  
   1400114cc:	(bad)  
   1400114cd:	(bad)  
   1400114ce:	(bad)  
   1400114cf:	(bad)  
   1400114d0:	(bad)  
   1400114d1:	inc    DWORD PTR [rcx+0x0]
   1400114d4:	rex.X add BYTE PTR [rbx+0x0],al
   1400114d8:	add    BYTE PTR [rbp+0x0],r8b
   1400114dc:	rex.RX add BYTE PTR [rdi+0x0],r8b
   1400114e0:	(bad)  
   1400114e1:	dec    DWORD PTR [rcx+0x0]
   1400114e4:	rex.WX add BYTE PTR [rbx+0x0],cl
   1400114e8:	rex.WR add BYTE PTR [rbp+0x0],r9b
   1400114ec:	rex.WRX add dil,r15b
   1400114ef:	(bad)  
   1400114f0:	(bad)  
   1400114f1:	call   QWORD PTR [rcx+0x0]
   1400114f4:	push   rdx
   1400114f5:	add    BYTE PTR [rbx+0x0],dl
   1400114f8:	push   rsp
   1400114f9:	add    BYTE PTR [rbp+0x0],dl
   1400114fc:	push   rsi
   1400114fd:	add    bh,bh
   1400114ff:	(bad)  
   140011500:	(bad)  
   140011501:	(bad)  
   140011502:	(bad)  
   140011503:	(bad)  
   140011504:	(bad)  
   140011505:	(bad)  
   140011506:	(bad)  
   140011507:	(bad)  
   140011508:	(bad)  
   140011509:	(bad)  
   14001150a:	(bad)  
   14001150b:	call   FWORD PTR [rsi+0x0]
   14001150e:	pop    rdi
   14001150f:	add    BYTE PTR [rax+0x0],ah
   140011512:	(bad)  
   140011513:	(bad)  
   140011514:	(bad)  
   140011515:	(bad)  
   140011516:	(bad)  
   140011517:	(bad)  
   140011518:	(bad)  
   140011519:	(bad)  
   14001151a:	(bad)  
   14001151b:	(bad)  
   14001151c:	(bad)  
   14001151d:	(bad)  
   14001151e:	(bad)  
   14001151f:	(bad)  
   140011520:	(bad)  
   140011521:	(bad)  
   140011522:	(bad)  
   140011523:	inc    DWORD PTR [rax+rax*1]
   140011526:	(bad)  
   140011527:	(bad)  
   140011528:	(bad)  
   140011529:	(bad)  
   14001152a:	(bad)  
   14001152b:	(bad)  
   14001152c:	(bad)  
   14001152d:	dec    DWORD PTR [rcx]
   14001152f:	add    bh,bh
   140011531:	dec    DWORD PTR [rbx]
   140011533:	add    BYTE PTR [rax+rax*1],cl
   140011536:	or     eax,0xff000e00
   14001153b:	(bad)  
   14001153c:	(bad)  
   14001153d:	(bad)  
   14001153e:	(bad)  
   14001153f:	(bad)  
   140011540:	(bad)  
   140011541:	(bad)  
   140011542:	(bad)  
   140011543:	(bad)  
   140011544:	(bad)  
   140011545:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f012b4b
   14001154b:	(bad)  
   14001154c:	(bad)  
   14001154d:	(bad)  
   14001154e:	(bad)  
   14001154f:	(bad)  
   140011550:	(bad)  
   140011551:	(bad)  
   140011552:	(bad)  
   140011553:	(bad)  
   140011554:	(bad)  
   140011555:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f01335b
   14001155b:	(bad)  
   14001155c:	(bad)  
   14001155d:	jmp    QWORD PTR [rcx]
   14001155f:	add    BYTE PTR [rdx],ah
   140011561:	add    bh,bh
   140011563:	jmp    QWORD PTR [rax+rax*1]
   140011566:	(bad)  
   140011567:	(bad)  
   140011568:	(bad)  
   140011569:	(bad)  
   14001156a:	(bad)  
   14001156b:	jmp    FWORD PTR [rax]
   14001156d:	add    bh,bh
   14001156f:	jmp    FWORD PTR [rdx]
   140011571:	add    BYTE PTR [rbx],ch
   140011573:	add    BYTE PTR [rax+rax*1],ch
   140011576:	(bad)  
   140011577:	(bad)  
   140011578:	(bad)  
   140011579:	jmp    FWORD PTR [rdi]
   14001157b:	add    bh,bh
   14001157d:	(bad)  
   14001157e:	(bad)  
   14001157f:	(bad)  
   140011580:	(bad)  
   140011581:	push   QWORD PTR [rbx]
   140011583:	add    bh,bh
   140011585:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x14001148b
   14001158b:	(bad)  
   14001158c:	(bad)  
   14001158d:	(bad)  
   14001158e:	(bad)  
   14001158f:	(bad)  
   140011590:	(bad)  
   140011591:	(bad)  
   140011592:	cmp    eax,DWORD PTR [rax]
   140011594:	(bad)  
   140011595:	(bad)  
   140011596:	cmp    eax,0xffffff00
   14001159b:	(bad)  
   14001159c:	(bad)  
   14001159d:	inc    DWORD PTR [rcx+0x0]
   1400115a0:	rex.X add BYTE PTR [rbx+0x0],al
   1400115a4:	add    BYTE PTR [rbp+0x0],r8b
   1400115a8:	rex.RX add BYTE PTR [rdi+0x0],r8b
   1400115ac:	rex.W add BYTE PTR [rcx+0x0],cl
   1400115b0:	rex.WX add BYTE PTR [rbx+0x0],cl
   1400115b4:	rex.WR add BYTE PTR [rbp+0x0],r9b
   1400115b8:	rex.WRX add dil,r15b
   1400115bb:	(bad)  
   1400115bc:	(bad)  
   1400115bd:	call   QWORD PTR [rcx+0x0]
   1400115c0:	push   rdx
   1400115c1:	add    BYTE PTR [rbx+0x0],dl
   1400115c4:	push   rsp
   1400115c5:	add    BYTE PTR [rbp+0x0],dl
   1400115c8:	(bad)  
   1400115c9:	call   QWORD PTR [rdi+0x0]
   1400115cc:	(bad)  
   1400115cd:	(bad)  
   1400115ce:	(bad)  
   1400115cf:	(bad)  
   1400115d0:	(bad)  
   1400115d1:	(bad)  
   1400115d2:	(bad)  
   1400115d3:	(bad)  
   1400115d4:	(bad)  
   1400115d5:	(bad)  
   1400115d6:	(bad)  
   1400115d7:	call   FWORD PTR [rsi+0x0]
   1400115da:	pop    rdi
   1400115db:	add    BYTE PTR [rax+0x0],ah
   1400115de:	(bad)  
   1400115df:	(bad)  
   1400115e0:	(bad)  
   1400115e1:	(bad)  
   1400115e2:	(bad)  
   1400115e3:	(bad)  
   1400115e4:	(bad)  
   1400115e5:	(bad)  
   1400115e6:	(bad)  
   1400115e7:	(bad)  
   1400115e8:	(bad)  
   1400115e9:	(bad)  
   1400115ea:	(bad)  
   1400115eb:	(bad)  
   1400115ec:	(bad)  
   1400115ed:	(bad)  
   1400115ee:	(bad)  
   1400115ef:	inc    DWORD PTR [rax+rax*1]
   1400115f2:	(bad)  
   1400115f3:	(bad)  
   1400115f4:	(bad)  
   1400115f5:	(bad)  
   1400115f6:	(bad)  
   1400115f7:	(bad)  
   1400115f8:	(bad)  
   1400115f9:	dec    DWORD PTR [rcx]
   1400115fb:	add    bh,bh
   1400115fd:	dec    DWORD PTR [rbx]
   1400115ff:	add    BYTE PTR [rax+rax*1],cl
   140011602:	or     eax,0xff000e00
   140011607:	(bad)  
   140011608:	(bad)  
   140011609:	(bad)  
   14001160a:	(bad)  
   14001160b:	(bad)  
   14001160c:	(bad)  
   14001160d:	(bad)  
   14001160e:	(bad)  
   14001160f:	(bad)  
   140011610:	(bad)  
   140011611:	call   QWORD PTR [rip+0xffffffffff001600]        # 0x13f012c17
   140011617:	(bad)  
   140011618:	(bad)  
   140011619:	(bad)  
   14001161a:	(bad)  
   14001161b:	(bad)  
   14001161c:	(bad)  
   14001161d:	(bad)  
   14001161e:	(bad)  
   14001161f:	(bad)  
   140011620:	(bad)  
   140011621:	call   FWORD PTR [rip+0xffffffffff001e00]        # 0x13f013427
   140011627:	(bad)  
   140011628:	(bad)  
   140011629:	jmp    QWORD PTR [rcx]
   14001162b:	add    BYTE PTR [rdx],ah
   14001162d:	add    bh,bh
   14001162f:	jmp    QWORD PTR [rax+rax*1]
   140011632:	(bad)  
   140011633:	(bad)  
   140011634:	(bad)  
   140011635:	(bad)  
   140011636:	(bad)  
   140011637:	jmp    FWORD PTR [rax]
   140011639:	add    bh,bh
   14001163b:	jmp    FWORD PTR [rdx]
   14001163d:	add    BYTE PTR [rbx],ch
   14001163f:	add    BYTE PTR [rax+rax*1],ch
   140011642:	(bad)  
   140011643:	(bad)  
   140011644:	(bad)  
   140011645:	jmp    FWORD PTR [rdi]
   140011647:	add    bh,bh
   140011649:	(bad)  
   14001164a:	(bad)  
   14001164b:	(bad)  
   14001164c:	(bad)  
   14001164d:	push   QWORD PTR [rbx]
   14001164f:	add    bh,bh
   140011651:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140011557
   140011657:	(bad)  
   140011658:	(bad)  
   140011659:	(bad)  
   14001165a:	(bad)  
   14001165b:	(bad)  
   14001165c:	(bad)  
   14001165d:	(bad)  
   14001165e:	cmp    eax,DWORD PTR [rax]
   140011660:	(bad)  
   140011661:	(bad)  
   140011662:	cmp    eax,0xffffff00
   140011667:	(bad)  
   140011668:	(bad)  
   140011669:	inc    DWORD PTR [rcx+0x0]
   14001166c:	rex.X add BYTE PTR [rbx+0x0],al
   140011670:	add    BYTE PTR [rbp+0x0],r8b
   140011674:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140011678:	rex.W add BYTE PTR [rcx+0x0],cl
   14001167c:	rex.WX add BYTE PTR [rbx+0x0],cl
   140011680:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140011684:	rex.WRX add dil,r15b
   140011687:	(bad)  
   140011688:	(bad)  
   140011689:	call   QWORD PTR [rcx+0x0]
   14001168c:	push   rdx
   14001168d:	add    BYTE PTR [rbx+0x0],dl
   140011690:	push   rsp
   140011691:	add    BYTE PTR [rbp+0x0],dl
   140011694:	(bad)  
   140011695:	call   QWORD PTR [rdi+0x0]
   140011698:	(bad)  
   140011699:	(bad)  
   14001169a:	(bad)  
   14001169b:	(bad)  
   14001169c:	(bad)  
   14001169d:	(bad)  
   14001169e:	(bad)  
   14001169f:	(bad)  
   1400116a0:	(bad)  
   1400116a1:	(bad)  
   1400116a2:	(bad)  
   1400116a3:	call   FWORD PTR [rsi+0x0]
   1400116a6:	pop    rdi
   1400116a7:	add    BYTE PTR [rax+0x0],ah
   1400116aa:	(bad)  
   1400116ab:	(bad)  
   1400116ac:	(bad)  
   1400116ad:	(bad)  
   1400116ae:	(bad)  
   1400116af:	(bad)  
   1400116b0:	(bad)  
   1400116b1:	(bad)  
   1400116b2:	(bad)  
   1400116b3:	(bad)  
   1400116b4:	(bad)  
   1400116b5:	(bad)  
   1400116b6:	(bad)  
   1400116b7:	(bad)  
   1400116b8:	(bad)  
   1400116b9:	(bad)  
   1400116ba:	(bad)  
   1400116bb:	inc    DWORD PTR [rax+rax*1]
   1400116be:	add    eax,0xff000600
   1400116c3:	(bad)  
   1400116c4:	(bad)  
   1400116c5:	dec    DWORD PTR [rcx]
   1400116c7:	add    BYTE PTR [rdx],cl
   1400116c9:	add    BYTE PTR [rbx],cl
   1400116cb:	add    BYTE PTR [rax+rax*1],cl
   1400116ce:	or     eax,0xff000e00
   1400116d3:	call   QWORD PTR [rax]
   1400116d5:	add    bh,bh
   1400116d7:	(bad)  
   1400116d8:	(bad)  
   1400116d9:	(bad)  
   1400116da:	(bad)  
   1400116db:	call   QWORD PTR [rax+rax*1]
   1400116de:	adc    eax,0xff001600
   1400116e3:	(bad)  
   1400116e4:	(bad)  
   1400116e5:	(bad)  
   1400116e6:	(bad)  
   1400116e7:	(bad)  
   1400116e8:	(bad)  
   1400116e9:	(bad)  
   1400116ea:	(bad)  
   1400116eb:	(bad)  
   1400116ec:	(bad)  
   1400116ed:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f0134f3
   1400116f3:	add    BYTE PTR [rax],ah
   1400116f5:	add    BYTE PTR [rcx],ah
   1400116f7:	add    BYTE PTR [rdx],ah
   1400116f9:	add    bh,bh
   1400116fb:	jmp    QWORD PTR [rax+rax*1]
   1400116fe:	(bad)  
   1400116ff:	(bad)  
   140011700:	(bad)  
   140011701:	(bad)  
   140011702:	(bad)  
   140011703:	jmp    FWORD PTR [rax]
   140011705:	add    bh,bh
   140011707:	jmp    FWORD PTR [rdx]
   140011709:	add    BYTE PTR [rbx],ch
   14001170b:	add    BYTE PTR [rax+rax*1],ch
   14001170e:	(bad)  
   14001170f:	(bad)  
   140011710:	(bad)  
   140011711:	jmp    FWORD PTR [rdi]
   140011713:	add    bh,bh
   140011715:	(bad)  
   140011716:	(bad)  
   140011717:	(bad)  
   140011718:	(bad)  
   140011719:	push   QWORD PTR [rbx]
   14001171b:	add    bh,bh
   14001171d:	push   QWORD PTR [rip+0xffffffffffffff00]        # 0x140011623
   140011723:	(bad)  
   140011724:	(bad)  
   140011725:	(bad)  
   140011726:	(bad)  
   140011727:	(bad)  
   140011728:	(bad)  
   140011729:	(bad)  
   14001172a:	cmp    eax,DWORD PTR [rax]
   14001172c:	(bad)  
   14001172d:	(bad)  
   14001172e:	cmp    eax,0xffffff00
   140011733:	(bad)  
   140011734:	(bad)  
   140011735:	inc    DWORD PTR [rcx+0x0]
   140011738:	rex.X add BYTE PTR [rbx+0x0],al
   14001173c:	add    BYTE PTR [rbp+0x0],r8b
   140011740:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140011744:	rex.W add BYTE PTR [rcx+0x0],cl
   140011748:	rex.WX add BYTE PTR [rbx+0x0],cl
   14001174c:	rex.WR add BYTE PTR [rbp+0x0],r9b
   140011750:	rex.WRX add dil,r15b
   140011753:	(bad)  
   140011754:	(bad)  
   140011755:	call   QWORD PTR [rcx+0x0]
   140011758:	push   rdx
   140011759:	add    BYTE PTR [rbx+0x0],dl
   14001175c:	push   rsp
   14001175d:	add    BYTE PTR [rbp+0x0],dl
   140011760:	push   rsi
   140011761:	add    BYTE PTR [rdi+0x0],dl
   140011764:	(bad)  
   140011765:	(bad)  
   140011766:	(bad)  
   140011767:	(bad)  
   140011768:	(bad)  
   140011769:	(bad)  
   14001176a:	(bad)  
   14001176b:	(bad)  
   14001176c:	(bad)  
   14001176d:	(bad)  
   14001176e:	(bad)  
   14001176f:	call   FWORD PTR [rsi+0x0]
   140011772:	pop    rdi
   140011773:	add    BYTE PTR [rax+0x0],ah
   140011776:	(bad)  
   140011777:	(bad)  
   140011778:	(bad)  
   140011779:	(bad)  
   14001177a:	(bad)  
   14001177b:	(bad)  
   14001177c:	(bad)  
   14001177d:	(bad)  
   14001177e:	(bad)  
   14001177f:	(bad)  
   140011780:	(bad)  
   140011781:	(bad)  
   140011782:	(bad)  
   140011783:	(bad)  
   140011784:	(bad)  
   140011785:	(bad)  
   140011786:	(bad)  
   140011787:	inc    DWORD PTR [rax+rax*1]
   14001178a:	add    eax,0xff000600
   14001178f:	(bad)  
   140011790:	(bad)  
   140011791:	dec    DWORD PTR [rcx]
   140011793:	add    BYTE PTR [rdx],cl
   140011795:	add    BYTE PTR [rbx],cl
   140011797:	add    BYTE PTR [rax+rax*1],cl
   14001179a:	or     eax,0xff000e00
   14001179f:	call   QWORD PTR [rax]
   1400117a1:	add    bh,bh
   1400117a3:	(bad)  
   1400117a4:	(bad)  
   1400117a5:	(bad)  
   1400117a6:	(bad)  
   1400117a7:	call   QWORD PTR [rax+rax*1]
   1400117aa:	adc    eax,0xff001600
   1400117af:	(bad)  
   1400117b0:	(bad)  
   1400117b1:	(bad)  
   1400117b2:	(bad)  
   1400117b3:	(bad)  
   1400117b4:	(bad)  
   1400117b5:	(bad)  
   1400117b6:	(bad)  
   1400117b7:	(bad)  
   1400117b8:	(bad)  
   1400117b9:	call   FWORD PTR [rip+0x1f001e00]        # 0x15f0135bf
   1400117bf:	add    BYTE PTR [rax],ah
   1400117c1:	add    BYTE PTR [rcx],ah
   1400117c3:	add    BYTE PTR [rdx],ah
   1400117c5:	add    bh,bh
   1400117c7:	jmp    QWORD PTR [rax+rax*1]
   1400117ca:	(bad)  
   1400117cb:	(bad)  
   1400117cc:	(bad)  
   1400117cd:	(bad)  
   1400117ce:	(bad)  
   1400117cf:	jmp    FWORD PTR [rax]
   1400117d1:	add    bh,bh
   1400117d3:	jmp    FWORD PTR [rdx]
   1400117d5:	add    BYTE PTR [rbx],ch
   1400117d7:	add    BYTE PTR [rax+rax*1],ch
   1400117da:	(bad)  
   1400117db:	(bad)  
   1400117dc:	(bad)  
   1400117dd:	jmp    FWORD PTR [rdi]
   1400117df:	add    bh,bh
   1400117e1:	(bad)  
   1400117e2:	(bad)  
   1400117e3:	(bad)  
   1400117e4:	(bad)  
   1400117e5:	push   QWORD PTR [rbx]
   1400117e7:	add    bh,bh
   1400117e9:	push   QWORD PTR [rip+0x37ffff00]        # 0x1780116ef
   1400117ef:	add    bh,bh
   1400117f1:	(bad)  
   1400117f2:	(bad)  
   1400117f3:	(bad)  
   1400117f4:	(bad)  
   1400117f5:	(bad)  
   1400117f6:	cmp    eax,DWORD PTR [rax]
   1400117f8:	(bad)  
   1400117f9:	(bad)  
   1400117fa:	cmp    eax,0xffffff00
   1400117ff:	(bad)  
   140011800:	(bad)  
   140011801:	inc    DWORD PTR [rcx+0x0]
   140011804:	rex.X add BYTE PTR [rbx+0x0],al
   140011808:	add    BYTE PTR [rbp+0x0],r8b
   14001180c:	rex.RX add BYTE PTR [rdi+0x0],r8b
   140011810:	rex.W add BYTE PTR [rcx+0x0],cl
   140011814:	rex.WX add BYTE PTR [rbx+0x0],cl
   140011818:	rex.WR add BYTE PTR [rbp+0x0],r9b
   14001181c:	rex.WRX add dil,r15b
   14001181f:	(bad)  
   140011820:	(bad)  
   140011821:	call   QWORD PTR [rcx+0x0]
   140011824:	push   rdx
   140011825:	add    BYTE PTR [rbx+0x0],dl
   140011828:	push   rsp
   140011829:	add    BYTE PTR [rbp+0x0],dl
   14001182c:	push   rsi
   14001182d:	add    BYTE PTR [rdi+0x0],dl
   140011830:	(bad)  
   140011831:	(bad)  
   140011832:	(bad)  
   140011833:	(bad)  
   140011834:	(bad)  
   140011835:	(bad)  
   140011836:	(bad)  
   140011837:	(bad)  
   140011838:	(bad)  
   140011839:	(bad)  
   14001183a:	(bad)  
   14001183b:	call   FWORD PTR [rsi+0x0]
   14001183e:	pop    rdi
   14001183f:	add    BYTE PTR [rax+0x0],ah
   140011842:	(bad)  
   140011843:	(bad)  
   140011844:	(bad)  
   140011845:	(bad)  
   140011846:	(bad)  
   140011847:	(bad)  
   140011848:	(bad)  
   140011849:	(bad)  
   14001184a:	(bad)  
   14001184b:	(bad)  
   14001184c:	(bad)  
   14001184d:	(bad)  
   14001184e:	(bad)  
   14001184f:	(bad)  
   140011850:	(bad)  
   140011851:	(bad)  
   140011852:	(bad)  
   140011853:	jmp    QWORD PTR [rax]
   140011855:	add    BYTE PTR [rsi],dl
   140011857:	add    BYTE PTR [rdx],dl
   140011859:	add    BYTE PTR [rcx],cl
   14001185b:	add    BYTE PTR [rdx],dl
   14001185d:	add    BYTE PTR [rdx],ch
   14001185f:	add    BYTE PTR [rdx],dl
   140011861:	add    BYTE PTR [rsi],cl
   140011863:	add    BYTE PTR [rax],ah
   140011865:	add    BYTE PTR [rbx],al
   140011867:	add    BYTE PTR [rdx],dl
   140011869:	add    BYTE PTR [rbx],al
   14001186b:	add    BYTE PTR [rbx],al
   14001186d:	add    BYTE PTR [rdx],dl
   14001186f:	add    BYTE PTR [rdx],dl
   140011871:	add    BYTE PTR [rax],ah
   140011873:	add    BYTE PTR [rdx],dl
   140011875:	add    BYTE PTR [rax],ah
   140011877:	add    BYTE PTR [rbx],al
   140011879:	add    BYTE PTR [rsi],dl
   14001187b:	add    BYTE PTR [rbx],al
   14001187d:	add    BYTE PTR [rdx],dl
   14001187f:	add    BYTE PTR [rbx],al
   140011881:	add    BYTE PTR [rdx],dl
   140011883:	add    BYTE PTR [rcx],bl
   140011885:	add    BYTE PTR [rdx],dl
   140011887:	add    BYTE PTR [rsi],dl
   140011889:	add    BYTE PTR [rsi],cl
   14001188b:	add    BYTE PTR [rdx],dl
   14001188d:	add    BYTE PTR [rdx],dl
   14001188f:	add    BYTE PTR [rsi],cl
   140011891:	add    BYTE PTR [rdx],ch
   140011893:	add    BYTE PTR [rdx],dl
   140011895:	add    BYTE PTR [rax],ah
   140011897:	add    BYTE PTR [rsi],dl
   140011899:	add    BYTE PTR [rbp+0x0],cl
   14001189c:	add    eax,DWORD PTR [rax]
   14001189e:	add    BYTE PTR fs:[rbx],al
   1400118a1:	add    BYTE PTR [rbx],al
   1400118a3:	add    BYTE PTR [rbx],al
   1400118a5:	add    BYTE PTR [rdi+0x0],ah
   1400118a8:	sub    al,BYTE PTR [rax]
   1400118aa:	adc    al,BYTE PTR [rax]
   1400118ac:	sub    al,BYTE PTR [rax]
   1400118ae:	adc    al,BYTE PTR [rax]
   1400118b0:	add    eax,DWORD PTR [rax]
   1400118b2:	add    eax,DWORD PTR [rax]
   1400118b4:	sbb    DWORD PTR [rax],eax
   1400118b6:	sbb    DWORD PTR [rax],eax
   1400118b8:	add    eax,DWORD PTR [rax]
   1400118ba:	imul   eax,DWORD PTR [rax],0x190012
   1400118c0:	add    eax,DWORD PTR [rax]
   1400118c2:	add    eax,DWORD PTR [rax]
   1400118c4:	adc    al,BYTE PTR [rax]
   1400118c6:	adc    al,BYTE PTR [rax]
   1400118c8:	add    eax,DWORD PTR [rax]
   1400118ca:	adc    al,BYTE PTR [rax]
   1400118cc:	sub    al,BYTE PTR [rax]
   1400118ce:	add    eax,DWORD PTR [rax]
   1400118d0:	sub    al,BYTE PTR [rax]
   1400118d2:	sub    al,BYTE PTR [rax]
   1400118d4:	sub    al,BYTE PTR [rax]
   1400118d6:	sbb    DWORD PTR [rax],eax
   1400118d8:	adc    al,BYTE PTR [rax]
   1400118da:	adc    al,BYTE PTR [rax]
   1400118dc:	sub    al,BYTE PTR [rax]
   1400118de:	add    al,BYTE PTR [rax]
   1400118e0:	(bad)  
   1400118e1:	call   QWORD PTR [rdx]
   1400118e3:	add    BYTE PTR [rdx],dl
   1400118e5:	add    BYTE PTR [rdx],ch
   1400118e7:	add    BYTE PTR [rdx],dl
   1400118e9:	add    BYTE PTR [rdx],dl
   1400118eb:	add    BYTE PTR [rsi],cl
   1400118ed:	add    BYTE PTR [rdx],dl
   1400118ef:	add    BYTE PTR [rsi],cl
   1400118f1:	add    BYTE PTR [rdx],dl
   1400118f3:	add    BYTE PTR [rdx],al
   1400118f5:	add    BYTE PTR [rax+rax*1],al
   1400118f8:	add    al,BYTE PTR [rax]
   1400118fa:	adc    al,BYTE PTR [rax]
   1400118fc:	sub    al,BYTE PTR [rax]
   1400118fe:	adc    al,BYTE PTR [rax]
   140011900:	add    BYTE PTR ss:[rsi],cl
   140011903:	add    BYTE PTR [rax],bh
   140011905:	add    BYTE PTR [rdx],dl
   140011907:	add    bh,bh
   140011909:	inc    DWORD PTR [rax+rax*1]
   14001190c:	(bad)  
   14001190d:	call   QWORD PTR [rdx]
   14001190f:	add    bh,bh
   140011911:	call   QWORD PTR [rdx]
   140011913:	add    BYTE PTR [rdx],dl
   140011915:	add    BYTE PTR [rdx],dl
   140011917:	add    BYTE PTR [rdx],dl
   140011919:	add    BYTE PTR [rsi],dh
   14001191b:	add    BYTE PTR [rsi],dh
   14001191d:	add    BYTE PTR [rax],bh
   14001191f:	add    BYTE PTR [rax],bh
   140011921:	add    BYTE PTR [rax+rax*1],ch
   140011924:	add    BYTE PTR ss:[rdx],dl
   140011927:	add    BYTE PTR [rax],bh
   140011929:	add    BYTE PTR [rdx],dl
   14001192b:	add    BYTE PTR [rbx],cl
   14001192d:	add    BYTE PTR [rax+rax*1],cl
   140011930:	sub    eax,0xffffff00
   140011935:	push   QWORD PTR [rbx]
   140011937:	add    BYTE PTR [rsi],dh
   140011939:	add    BYTE PTR [rbx],dh
   14001193b:	add    BYTE PTR [rax],bh
   14001193d:	add    BYTE PTR [rsi],dh
   14001193f:	add    BYTE PTR [rdx],ch
   140011941:	add    BYTE PTR [rax],bh
   140011943:	add    BYTE PTR [rsi],dh
   140011945:	add    BYTE PTR [rsi],ch
   140011947:	add    BYTE PTR [rsi],dh
   140011949:	add    BYTE PTR [rsi],dh
   14001194b:	add    BYTE PTR [rbx],dh
   14001194d:	add    BYTE PTR [rsi],ch
   14001194f:	add    BYTE PTR [rdx],dh
   140011951:	add    BYTE PTR [rbx],bh
   140011953:	add    BYTE PTR [rbx],bh
   140011955:	add    BYTE PTR [rdx],dl
   140011957:	add    BYTE PTR [rdx],ch
   140011959:	add    bh,bh
   14001195b:	(bad)  
   14001195c:	(bad)  
   14001195d:	(bad)  
   14001195e:	(bad)  
   14001195f:	jmp    FWORD PTR [rip+0x46003600]        # 0x186014f65
   140011965:	add    BYTE PTR [rsi],dh
   140011967:	add    BYTE PTR [rdx],dh
   140011969:	add    BYTE PTR [rsi],dh
   14001196b:	add    BYTE PTR [rbx],bh
   14001196d:	add    BYTE PTR [rsi],cl
   14001196f:	add    BYTE PTR [rbx],bh
   140011971:	add    BYTE PTR [rdx],al
   140011973:	add    BYTE PTR [rbx],bh
   140011975:	add    BYTE PTR [rsi],dh
   140011977:	add    BYTE PTR [rbx],dl
   140011979:	add    BYTE PTR [rax],bh
   14001197b:	add    BYTE PTR [rsi],dh
   14001197d:	add    BYTE PTR [rsi],dh
   14001197f:	add    BYTE PTR [rsi],dh
   140011981:	add    BYTE PTR [rax],bh
   140011983:	add    BYTE PTR [rsi],cl
   140011985:	add    BYTE PTR [rbx],bh
   140011987:	add    BYTE PTR [rbx],ch
   140011989:	add    BYTE PTR [rsi],dh
   14001198b:	add    BYTE PTR [rsi],dh
   14001198d:	add    BYTE PTR [rax],bh
   14001198f:	add    BYTE PTR [rax],bh
   140011991:	add    BYTE PTR [rdx],dl
   140011993:	add    BYTE PTR [rdx],al
   140011995:	add    BYTE PTR [rdi],dl
   140011997:	add    BYTE PTR [rdx],al
   140011999:	add    BYTE PTR [rsi],dh
   14001199b:	add    BYTE PTR [rax+rax*1+0x38],al
   14001199f:	add    BYTE PTR [rsi],cl
   1400119a1:	add    BYTE PTR [rsi],dh
   1400119a3:	add    BYTE PTR [rsi],dh
   1400119a5:	add    BYTE PTR [rdx],al
   1400119a7:	add    BYTE PTR [rsi],dh
   1400119a9:	add    BYTE PTR [rbx],dl
   1400119ab:	add    BYTE PTR [rbx],al
   1400119ad:	add    BYTE PTR [rax+rax*1],bh
   1400119b0:	cmp    al,0x0
   1400119b2:	cmp    eax,DWORD PTR [rax]
   1400119b4:	adc    al,BYTE PTR [rax]
   1400119b6:	add    BYTE PTR ss:[rdx],dl
   1400119b9:	add    BYTE PTR [rdx],dl
   1400119bb:	add    BYTE PTR [rbp+0x0],ch
   1400119be:	adc    al,BYTE PTR [rax]
   1400119c0:	cmp    eax,DWORD PTR [rax]
   1400119c2:	add    BYTE PTR ss:[rsi],dh
   1400119c5:	add    BYTE PTR [rdx],dl
   1400119c7:	add    BYTE PTR [rsi],dh
   1400119c9:	add    BYTE PTR [rsi],dh
   1400119cb:	add    BYTE PTR [rbx],bh
   1400119cd:	add    BYTE PTR [rbx],bh
   1400119cf:	add    BYTE PTR [rsi],dh
   1400119d1:	add    BYTE PTR [rbx],bh
   1400119d3:	add    BYTE PTR [rbx],bh
   1400119d5:	add    BYTE PTR [rsi],dh
   1400119d7:	add    BYTE PTR [rdx],bh
   1400119d9:	add    BYTE PTR [rsi],ah
   1400119db:	add    BYTE PTR [rsi],dh
   1400119dd:	add    BYTE PTR [rdx],bh
   1400119df:	add    BYTE PTR [rdx],dl
   1400119e1:	add    BYTE PTR [rdx],ch
   1400119e3:	add    BYTE PTR [rdx],bh
   1400119e5:	add    BYTE PTR [rdx],al
   1400119e7:	add    BYTE PTR [rsi],dh
   1400119e9:	add    BYTE PTR [rdx],al
   1400119eb:	add    BYTE PTR [rdx],dl
   1400119ed:	add    BYTE PTR [rsi],dh
   1400119ef:	add    BYTE PTR [rip+0x2d000200],ch        # 0x16d011bf5
   1400119f5:	add    BYTE PTR [rdx],al
   1400119f7:	add    BYTE PTR [rax+rax*1],al
   1400119fa:	add    eax,DWORD PTR [rax]
   1400119fc:	adc    al,BYTE PTR [rax]
   1400119fe:	adc    al,BYTE PTR [rax]
   140011a00:	rex.X add BYTE PTR [rax+0x0],al
   140011a04:	add    eax,DWORD PTR [rax]
   140011a06:	adc    al,BYTE PTR [rax]
   140011a08:	add    BYTE PTR ss:[rdx],dl
   140011a0b:	add    BYTE PTR [rax],bh
   140011a0d:	add    BYTE PTR [rdx],al
   140011a0f:	add    BYTE PTR [rsi],dh
   140011a11:	add    BYTE PTR [rdx],dl
   140011a13:	add    BYTE PTR [rdx],dl
   140011a15:	add    BYTE PTR [rdx],dl
   140011a17:	add    BYTE PTR [rsi],ch
   140011a19:	add    BYTE PTR [rsi],dh
   140011a1b:	add    BYTE PTR [rax+rax*1],bh
   140011a1e:	cmp    BYTE PTR [rax],al
   140011a20:	add    eax,DWORD PTR [rax]
   140011a22:	add    eax,DWORD PTR [rax]
   140011a24:	add    BYTE PTR ss:[rdi],ch
   140011a27:	add    BYTE PTR [rdx],al
   140011a29:	add    BYTE PTR [rcx],bh
   140011a2b:	add    BYTE PTR [rsi],dh
   140011a2d:	add    BYTE PTR [rdx],dl
   140011a2f:	add    BYTE PTR [rax],bh
   140011a31:	add    BYTE PTR [rsi],dh
   140011a33:	add    BYTE PTR [rdx],al
   140011a35:	add    BYTE PTR [rax],bh
   140011a37:	add    BYTE PTR [rsi],dh
   140011a39:	add    BYTE PTR [rsi],dh
   140011a3b:	add    BYTE PTR [rax],bh
   140011a3d:	add    BYTE PTR [rdx],al
   140011a3f:	add    BYTE PTR [rcx],bh
   140011a41:	add    BYTE PTR [rsi],dh
   140011a43:	add    BYTE PTR [rdx],al
   140011a45:	add    BYTE PTR [rdx],dl
   140011a47:	add    BYTE PTR [rdx],dl
   140011a49:	add    BYTE PTR [rsi],dh
   140011a4b:	add    BYTE PTR [rsi],dh
   140011a4d:	add    BYTE PTR [rax],bh
   140011a4f:	add    bh,bh
   140011a51:	(bad)  
   140011a52:	add    BYTE PTR ds:[rdx],dl
   140011a55:	add    BYTE PTR [rsi],dh
   140011a57:	add    BYTE PTR [rax+rax*1],bh
   140011a5a:	cmp    BYTE PTR [rax],al
   140011a5c:	(bad)  
   140011a5d:	call   QWORD PTR [rdx]
   140011a5f:	add    BYTE PTR [rsi],cl
   140011a61:	add    BYTE PTR [rsi],dh
   140011a63:	add    BYTE PTR [rdx],dl
   140011a65:	add    BYTE PTR [rsi],dh
   140011a67:	add    BYTE PTR [rdx],al
   140011a69:	add    BYTE PTR [rbx],dl
   140011a6b:	add    BYTE PTR [rbx],bh
   140011a6d:	add    bh,bh
   140011a6f:	(bad)  
   140011a70:	cmp    eax,DWORD PTR [rax]
   140011a72:	add    BYTE PTR ss:[rsi],dh
   140011a75:	add    bh,bh
   140011a77:	(bad)  
   140011a78:	(bad)  
   140011a79:	add    BYTE PTR [rax+rax*1],ch
   140011a7c:	cmp    eax,DWORD PTR [rax]
   140011a7e:	cmp    eax,DWORD PTR [rax]
   140011a80:	(bad)  
   140011a81:	push   QWORD PTR [rsi]
   140011a83:	add    BYTE PTR [rdx],al
   140011a85:	add    bh,bh
   140011a87:	call   QWORD PTR [rdx]
   140011a89:	add    BYTE PTR [rcx+0x0],al
   140011a8c:	cmp    eax,DWORD PTR [rax]
   140011a8e:	rex.WR add BYTE PTR [rsi+0x0],r9b
   140011a92:	pop    rsp
   140011a93:	add    BYTE PTR [rsi+0x0],bl
   140011a96:	add    BYTE PTR ss:[rsi],dh
   140011a99:	add    BYTE PTR [rsi+0x0],cl
   140011a9c:	adc    al,BYTE PTR [rax]
   140011a9e:	rex.WR add BYTE PTR [rbx],r15b
   140011aa1:	add    BYTE PTR [rbx],bh
   140011aa3:	add    BYTE PTR [rdx],dl
   140011aa5:	add    BYTE PTR [rip+0x36003600],bh        # 0x1760150ab
   140011aab:	add    bh,bh
   140011aad:	dec    DWORD PTR [rax+rax*1+0x43]
   140011ab1:	add    BYTE PTR [rbx],bh
   140011ab3:	add    BYTE PTR [rbx],bh
   140011ab5:	add    BYTE PTR [rsi+0x0],cl
   140011ab8:	rex.WRX add BYTE PTR [rsi],r14b
   140011abb:	add    BYTE PTR [rsi],dh
   140011abd:	add    bh,bh
   140011abf:	push   QWORD PTR [rsi]
   140011ac1:	add    BYTE PTR [rsi],dh
   140011ac3:	add    BYTE PTR [rbx],bh
   140011ac5:	add    BYTE PTR [rbx],bh
   140011ac7:	add    BYTE PTR [rbp+0x0],al
   140011aca:	cmp    eax,DWORD PTR [rax]
   140011acc:	cmp    eax,DWORD PTR [rax]
   140011ace:	cmp    eax,0xe003d00
   140011ad3:	add    BYTE PTR [rax+rax*1+0x2f],cl
   140011ad7:	add    BYTE PTR [rax],dh
   140011ad9:	add    bh,bh
   140011adb:	inc    DWORD PTR [rdi+0x0]
   140011ade:	(bad)  
   140011adf:	push   QWORD PTR [rsi]
   140011ae1:	add    BYTE PTR [rsi],cl
   140011ae3:	add    BYTE PTR [rdi],dl
   140011ae5:	add    BYTE PTR [rip+0x3b004c00],al        # 0x17b0166eb
   140011aeb:	add    BYTE PTR [rbx],dl
   140011aed:	add    BYTE PTR [rip+0x5001500],bh        # 0x145012ff3
   140011af3:	add    bh,bh
   140011af5:	(bad)  
   140011af6:	(bad)  
   140011af7:	dec    DWORD PTR [rsi]
   140011af9:	add    bh,bh
   140011afb:	jmp    QWORD PTR [rbx]
   140011afd:	add    BYTE PTR [rax+rax*1],ah
   140011b00:	(bad)  
   140011b01:	(bad)  
   140011b02:	(bad)  
   140011b03:	dec    DWORD PTR [rsi]
   140011b05:	add    bh,bh
   140011b07:	(bad)  
   140011b08:	(bad)  
   140011b09:	call   QWORD PTR [rdi]
   140011b0b:	add    bh,bh
   140011b0d:	(bad)  
   140011b0e:	(bad)  
   140011b0f:	(bad)  
   140011b10:	(bad)  
   140011b11:	(bad)  
   140011b12:	(bad)  
   140011b13:	call   FWORD PTR [rax+0x0]
   140011b16:	(bad)  
   140011b17:	add    bh,bh
   140011b19:	jmp    FWORD PTR [rdx]
   140011b1b:	add    bh,bh
   140011b1d:	(bad)  
   140011b1e:	(bad)  
   140011b1f:	(bad)  
   140011b20:	(bad)  
   140011b21:	jmp    QWORD PTR [rbx]
   140011b23:	add    BYTE PTR [rax+rax*1],ah
   140011b26:	(bad)  
   140011b27:	(bad)  
   140011b28:	(bad)  
   140011b29:	(bad)  
   140011b2a:	(bad)  
   140011b2b:	(bad)  
   140011b2c:	(bad)  
   140011b2d:	jmp    QWORD PTR [rbx]
   140011b2f:	add    BYTE PTR [rax+rax*1],ah
   140011b32:	sbb    DWORD PTR [rax],eax
   140011b34:	sbb    al,BYTE PTR [rax]
   140011b36:	sbb    eax,DWORD PTR [rax]
   140011b38:	sbb    al,0x0
   140011b3a:	sbb    eax,0x1f001e00
   140011b3f:	add    bh,bh
   140011b41:	(bad)  
   140011b42:	(bad)  
   140011b43:	(bad)  
   140011b44:	(bad)  
   140011b45:	(bad)  
   140011b46:	(bad)  
   140011b47:	(bad)  
   140011b48:	(bad)  
   140011b49:	(bad)  
   140011b4a:	(bad)  
   140011b4b:	(bad)  
   140011b4c:	(bad)  
   140011b4d:	dec    DWORD PTR [rsi]
   140011b4f:	add    bh,bh
   140011b51:	(bad)  
   140011b52:	(bad)  
   140011b53:	(bad)  
   140011b54:	(bad)  
   140011b55:	(bad)  
   140011b56:	(bad)  
   140011b57:	(bad)  
   140011b58:	(bad)  
   140011b59:	(bad)  
   140011b5a:	(bad)  
   140011b5b:	(bad)  
   140011b5c:	(bad)  
   140011b5d:	inc    DWORD PTR [rdx]
   140011b5f:	add    BYTE PTR [rdi],dl
   140011b61:	add    BYTE PTR [rax],bl
   140011b63:	add    BYTE PTR [rcx],bl
   140011b65:	add    BYTE PTR [rdx],bl
   140011b67:	add    BYTE PTR [rbx],bl
   140011b69:	add    BYTE PTR [rax+rax*1],bl
   140011b6c:	sbb    eax,0x1f001e00
   140011b71:	add    BYTE PTR [rsi],cl
   140011b73:	add    bh,bh
   140011b75:	(bad)  
   140011b76:	(bad)  
   140011b77:	(bad)  
   140011b78:	(bad)  
   140011b79:	(bad)  
   140011b7a:	(bad)  
   140011b7b:	(bad)  
   140011b7c:	(bad)  
   140011b7d:	call   QWORD PTR [rdx]
   140011b7f:	add    bh,bh
   140011b81:	(bad)  
   140011b82:	(bad)  
   140011b83:	call   QWORD PTR [rdi]
   140011b85:	add    BYTE PTR [rax],bl
   140011b87:	add    BYTE PTR [rcx],bl
   140011b89:	add    BYTE PTR [rdx],bl
   140011b8b:	add    BYTE PTR [rbx],bl
   140011b8d:	add    BYTE PTR [rax+rax*1],bl
   140011b90:	sbb    eax,0x1f001e00
   140011b95:	add    bh,bh
   140011b97:	(bad)  
   140011b98:	(bad)  
   140011b99:	(bad)  
   140011b9a:	(bad)  
   140011b9b:	(bad)  
   140011b9c:	(bad)  
   140011b9d:	(bad)  
   140011b9e:	(bad)  
   140011b9f:	(bad)  
   140011ba0:	(bad)  
   140011ba1:	(bad)  
   140011ba2:	(bad)  
   140011ba3:	(bad)  
   140011ba4:	(bad)  
   140011ba5:	(bad)  
   140011ba6:	(bad)  
   140011ba7:	(bad)  
   140011ba8:	(bad)  
   140011ba9:	(bad)  
   140011baa:	(bad)  
   140011bab:	(bad)  
   140011bac:	(bad)  
   140011bad:	(bad)  
   140011bae:	(bad)  
   140011baf:	(bad)  
   140011bb0:	(bad)  
   140011bb1:	(bad)  
   140011bb2:	(bad)  
   140011bb3:	(bad)  
   140011bb4:	(bad)  
   140011bb5:	(bad)  
   140011bb6:	(bad)  
   140011bb7:	(bad)  
   140011bb8:	(bad)  
   140011bb9:	(bad)  
   140011bba:	(bad)  
   140011bbb:	(bad)  
   140011bbc:	(bad)  
   140011bbd:	(bad)  
   140011bbe:	(bad)  
   140011bbf:	(bad)  
   140011bc0:	(bad)  
   140011bc1:	(bad)  
   140011bc2:	(bad)  
   140011bc3:	(bad)  
   140011bc4:	(bad)  
   140011bc5:	(bad)  
   140011bc6:	(bad)  
   140011bc7:	(bad)  
   140011bc8:	(bad)  
   140011bc9:	(bad)  
   140011bca:	(bad)  
   140011bcb:	(bad)  
   140011bcc:	(bad)  
   140011bcd:	(bad)  
   140011bce:	(bad)  
   140011bcf:	(bad)  
   140011bd0:	(bad)  
   140011bd1:	(bad)  
   140011bd2:	(bad)  
   140011bd3:	(bad)  
   140011bd4:	(bad)  
   140011bd5:	(bad)  
   140011bd6:	(bad)  
   140011bd7:	(bad)  
   140011bd8:	(bad)  
   140011bd9:	(bad)  
   140011bda:	(bad)  
   140011bdb:	(bad)  
   140011bdc:	(bad)  
   140011bdd:	(bad)  
   140011bde:	(bad)  
   140011bdf:	(bad)  
   140011be0:	(bad)  
   140011be1:	(bad)  
   140011be2:	(bad)  
   140011be3:	(bad)  
   140011be4:	(bad)  
   140011be5:	(bad)  
   140011be6:	(bad)  
   140011be7:	(bad)  
   140011be8:	(bad)  
   140011be9:	(bad)  
   140011bea:	(bad)  
   140011beb:	(bad)  
   140011bec:	(bad)  
   140011bed:	(bad)  
   140011bee:	(bad)  
   140011bef:	(bad)  
   140011bf0:	(bad)  
   140011bf1:	(bad)  
   140011bf2:	(bad)  
   140011bf3:	(bad)  
   140011bf4:	(bad)  
   140011bf5:	(bad)  
   140011bf6:	(bad)  
   140011bf7:	(bad)  
   140011bf8:	(bad)  
   140011bf9:	(bad)  
   140011bfa:	(bad)  
   140011bfb:	(bad)  
   140011bfc:	(bad)  
   140011bfd:	(bad)  
   140011bfe:	(bad)  
   140011bff:	(bad)  
   140011c00:	(bad)  
   140011c01:	(bad)  
   140011c02:	(bad)  
   140011c03:	(bad)  
   140011c04:	(bad)  
   140011c05:	(bad)  
   140011c06:	(bad)  
   140011c07:	(bad)  
   140011c08:	(bad)  
   140011c09:	call   FWORD PTR [rax+0x0]
   140011c0c:	(bad)  
   140011c0d:	(bad)  
   140011c0e:	(bad)  
   140011c0f:	(bad)  
   140011c10:	(bad)  
   140011c11:	(bad)  
   140011c12:	(bad)  
   140011c13:	(bad)  
   140011c14:	(bad)  
   140011c15:	(bad)  
   140011c16:	(bad)  
   140011c17:	(bad)  
   140011c18:	(bad)  
   140011c19:	(bad)  
   140011c1a:	(bad)  
   140011c1b:	(bad)  
   140011c1c:	(bad)  
   140011c1d:	(bad)  
   140011c1e:	(bad)  
   140011c1f:	(bad)  
   140011c20:	(bad)  
   140011c21:	(bad)  
   140011c22:	(bad)  
   140011c23:	(bad)  
   140011c24:	(bad)  
   140011c25:	(bad)  
   140011c26:	(bad)  
   140011c27:	(bad)  
   140011c28:	(bad)  
   140011c29:	(bad)  
   140011c2a:	(bad)  
   140011c2b:	(bad)  
   140011c2c:	(bad)  
   140011c2d:	(bad)  
   140011c2e:	(bad)  
   140011c2f:	(bad)  
   140011c30:	(bad)  
   140011c31:	(bad)  
   140011c32:	(bad)  
   140011c33:	(bad)  
   140011c34:	(bad)  
   140011c35:	(bad)  
   140011c36:	(bad)  
   140011c37:	dec    DWORD PTR [rsi]
   140011c39:	add    bh,bh
   140011c3b:	(bad)  
   140011c3c:	(bad)  
   140011c3d:	(bad)  
   140011c3e:	(bad)  
   140011c3f:	(bad)  
   140011c40:	(bad)  
   140011c41:	(bad)  
   140011c42:	(bad)  
   140011c43:	(bad)  
   140011c44:	(bad)  
   140011c45:	(bad)  
   140011c46:	(bad)  
   140011c47:	(bad)  
   140011c48:	(bad)  
   140011c49:	call   QWORD PTR [rdi]
   140011c4b:	add    BYTE PTR [rax],bl
   140011c4d:	add    BYTE PTR [rcx],bl
   140011c4f:	add    BYTE PTR [rdx],bl
   140011c51:	add    BYTE PTR [rbx],bl
   140011c53:	add    BYTE PTR [rax+rax*1],bl
   140011c56:	sbb    eax,0x1f001e00
   140011c5b:	add    bh,bh
   140011c5d:	(bad)  
   140011c5e:	(bad)  
   140011c5f:	(bad)  
   140011c60:	(bad)  
   140011c61:	(bad)  
   140011c62:	(bad)  
   140011c63:	(bad)  
   140011c64:	(bad)  
   140011c65:	(bad)  
   140011c66:	(bad)  
   140011c67:	(bad)  
   140011c68:	(bad)  
   140011c69:	(bad)  
   140011c6a:	(bad)  
   140011c6b:	(bad)  
   140011c6c:	(bad)  
   140011c6d:	(bad)  
   140011c6e:	(bad)  
   140011c6f:	(bad)  
   140011c70:	(bad)  
   140011c71:	(bad)  
   140011c72:	(bad)  
   140011c73:	(bad)  
   140011c74:	(bad)  
   140011c75:	(bad)  
   140011c76:	(bad)  
   140011c77:	(bad)  
   140011c78:	(bad)  
   140011c79:	(bad)  
   140011c7a:	(bad)  
   140011c7b:	(bad)  
   140011c7c:	(bad)  
   140011c7d:	(bad)  
   140011c7e:	(bad)  
   140011c7f:	(bad)  
   140011c80:	(bad)  
   140011c81:	(bad)  
   140011c82:	(bad)  
   140011c83:	(bad)  
   140011c84:	(bad)  
   140011c85:	(bad)  
   140011c86:	(bad)  
   140011c87:	(bad)  
   140011c88:	(bad)  
   140011c89:	(bad)  
   140011c8a:	(bad)  
   140011c8b:	(bad)  
   140011c8c:	(bad)  
   140011c8d:	(bad)  
   140011c8e:	(bad)  
   140011c8f:	(bad)  
   140011c90:	(bad)  
   140011c91:	(bad)  
   140011c92:	(bad)  
   140011c93:	(bad)  
   140011c94:	(bad)  
   140011c95:	(bad)  
   140011c96:	(bad)  
   140011c97:	(bad)  
   140011c98:	(bad)  
   140011c99:	(bad)  
   140011c9a:	(bad)  
   140011c9b:	(bad)  
   140011c9c:	(bad)  
   140011c9d:	(bad)  
   140011c9e:	(bad)  
   140011c9f:	(bad)  
   140011ca0:	(bad)  
   140011ca1:	(bad)  
   140011ca2:	(bad)  
   140011ca3:	(bad)  
   140011ca4:	(bad)  
   140011ca5:	(bad)  
   140011ca6:	(bad)  
   140011ca7:	(bad)  
   140011ca8:	(bad)  
   140011ca9:	(bad)  
   140011caa:	(bad)  
   140011cab:	(bad)  
   140011cac:	(bad)  
   140011cad:	(bad)  
   140011cae:	(bad)  
   140011caf:	(bad)  
   140011cb0:	(bad)  
   140011cb1:	(bad)  
   140011cb2:	(bad)  
   140011cb3:	(bad)  
   140011cb4:	(bad)  
   140011cb5:	(bad)  
   140011cb6:	(bad)  
   140011cb7:	(bad)  
   140011cb8:	(bad)  
   140011cb9:	(bad)  
   140011cba:	(bad)  
   140011cbb:	(bad)  
   140011cbc:	(bad)  
   140011cbd:	(bad)  
   140011cbe:	(bad)  
   140011cbf:	(bad)  
   140011cc0:	(bad)  
   140011cc1:	(bad)  
   140011cc2:	(bad)  
   140011cc3:	(bad)  
   140011cc4:	(bad)  
   140011cc5:	(bad)  
   140011cc6:	(bad)  
   140011cc7:	(bad)  
   140011cc8:	(bad)  
   140011cc9:	(bad)  
   140011cca:	(bad)  
   140011ccb:	(bad)  
   140011ccc:	(bad)  
   140011ccd:	(bad)  
   140011cce:	(bad)  
   140011ccf:	(bad)  
   140011cd0:	(bad)  
   140011cd1:	(bad)  
   140011cd2:	(bad)  
   140011cd3:	(bad)  
   140011cd4:	(bad)  
   140011cd5:	(bad)  
   140011cd6:	(bad)  
   140011cd7:	(bad)  
   140011cd8:	(bad)  
   140011cd9:	(bad)  
   140011cda:	(bad)  
   140011cdb:	(bad)  
   140011cdc:	(bad)  
   140011cdd:	(bad)  
   140011cde:	(bad)  
   140011cdf:	(bad)  
   140011ce0:	(bad)  
   140011ce1:	(bad)  
   140011ce2:	(bad)  
   140011ce3:	(bad)  
   140011ce4:	(bad)  
   140011ce5:	(bad)  
   140011ce6:	(bad)  
   140011ce7:	(bad)  
   140011ce8:	(bad)  
   140011ce9:	(bad)  
   140011cea:	(bad)  
   140011ceb:	(bad)  
   140011cec:	(bad)  
   140011ced:	(bad)  
   140011cee:	(bad)  
   140011cef:	(bad)  
   140011cf0:	(bad)  
   140011cf1:	(bad)  
   140011cf2:	(bad)  
   140011cf3:	(bad)  
   140011cf4:	(bad)  
   140011cf5:	(bad)  
   140011cf6:	(bad)  
   140011cf7:	(bad)  
   140011cf8:	(bad)  
   140011cf9:	inc    DWORD PTR [rax]
   140011cfb:	add    BYTE PTR [rax],al
   140011cfd:	add    BYTE PTR [rax],al
   140011cff:	add    BYTE PTR [rip+0x42000000],bl        # 0x182011d05
   140011d05:	add    BYTE PTR [rax],al
   140011d07:	add    BYTE PTR [rbx+0x0],al
   140011d0a:	add    BYTE PTR [rax],al
   140011d0c:	add    BYTE PTR [rax],r8b
   140011d0f:	add    BYTE PTR [rsi+0x0],bl
   140011d12:	add    BYTE PTR [rax],al
   140011d14:	add    al,0x0
   140011d16:	add    BYTE PTR [rax],al
   140011d18:	add    eax,0x6000000
   140011d1d:	add    BYTE PTR [rax],al
   140011d1f:	add    BYTE PTR [rcx],cl
   140011d21:	add    BYTE PTR [rax],al
   140011d23:	add    BYTE PTR [rdx],cl
   140011d25:	add    BYTE PTR [rax],al
   140011d27:	add    BYTE PTR [rbx],cl
   140011d29:	add    BYTE PTR [rax],al
   140011d2b:	add    BYTE PTR [rsi],cl
   140011d2d:	add    BYTE PTR [rax],al
   140011d2f:	add    BYTE PTR [rax],dl
   140011d31:	add    BYTE PTR [rax],al
   140011d33:	add    BYTE PTR [rbx+0x0],dl
   140011d36:	add    BYTE PTR [rax],al
   140011d38:	adc    al,0x0
   140011d3a:	add    BYTE PTR [rax],al
   140011d3c:	adc    eax,0x16000000
   140011d41:	add    BYTE PTR [rax],al
   140011d43:	add    BYTE PTR [rsi],bl
   140011d45:	add    BYTE PTR [rax],al
   140011d47:	add    BYTE PTR [rdi],bl
   140011d49:	add    BYTE PTR [rax],al
   140011d4b:	add    BYTE PTR [rax],ah
   140011d4d:	add    BYTE PTR [rax],al
   140011d4f:	add    BYTE PTR [rbx],ch
   140011d51:	add    BYTE PTR [rax],al
   140011d53:	add    BYTE PTR [rcx+0x0],dl
   140011d56:	add    BYTE PTR [rax],al
   140011d58:	cmp    eax,DWORD PTR [rax]
   140011d5a:	add    BYTE PTR [rax],al
   140011d5c:	add    BYTE PTR [r8],r8b
   140011d5f:	add    BYTE PTR [rsi+0x0],al
   140011d62:	add    BYTE PTR [rax],al
   140011d64:	rex.RXB add BYTE PTR [r8],r8b
   140011d67:	add    BYTE PTR [rdx+0x0],dl
   140011d6a:	add    BYTE PTR [rax],al
   140011d6c:	rex.WB add BYTE PTR [r8],al
   140011d6f:	add    BYTE PTR [rdx+0x0],cl
   140011d72:	add    BYTE PTR [rax],al
   140011d74:	rex.WXB add BYTE PTR [r8],al
   140011d77:	add    BYTE PTR [rax+rax*1+0x0],cl
   140011d7b:	add    BYTE PTR [rbp+0x0],cl
   140011d7e:	add    BYTE PTR [rax],al
   140011d80:	push   rsp
   140011d81:	add    BYTE PTR [rax],al
   140011d83:	add    BYTE PTR [rbp+0x0],dl
   140011d86:	add    BYTE PTR [rax],al
   140011d88:	push   rsi
   140011d89:	add    BYTE PTR [rax],al
   140011d8b:	add    BYTE PTR [rsi+0x0],cl
	...
   140011d96:	add    BYTE PTR [rax],al
   140011d98:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011d9a:	jbe    0x140011dfd
   140011d9c:	ins    BYTE PTR es:[rdi],dx
   140011d9d:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
   140011da5:	(bad)  
   140011da6:	jb     0x140011dc8
   140011da8:	gs js  0x140011e1b
   140011dab:	jb     0x140011e12
   140011dad:	jae    0x140011e22
   140011daf:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6620
   140011db6:	and    BYTE PTR [edi],ah
   140011db9:	and    eax,0x2730
   140011dbe:	add    BYTE PTR [rax],al
   140011dc0:	push   rbp
   140011dc1:	outs   dx,BYTE PTR ds:[rsi]
   140011dc2:	je     0x140011e29
   140011dc4:	jb     0x140011e33
   140011dc6:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140011dcd:	jb     0x140011e34
   140011dcf:	addr32 jne 0x140011e3e
   140011dd2:	(bad)  
   140011dd3:	jb     0x140011df5
   140011dd5:	gs js  0x140011e48
   140011dd8:	jb     0x140011e3f
   140011dda:	jae    0x140011e4f
   140011ddc:	imul   ebp,DWORD PTR [rdi+0x6e],0x616c6320
   140011de3:	jae    0x140011e58
   140011de5:	add    BYTE PTR [rax],al
   140011de7:	add    BYTE PTR [rbp+0x6e],dl
   140011dea:	je     0x140011e51
   140011dec:	jb     0x140011e5b
   140011dee:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140011df5:	jb     0x140011e5c
   140011df7:	addr32 jne 0x140011e66
   140011dfa:	(bad)  
   140011dfb:	jb     0x140011e1d
   140011dfd:	gs js  0x140011e70
   140011e00:	jb     0x140011e67
   140011e02:	jae    0x140011e77
   140011e04:	imul   ebp,DWORD PTR [rdi+0x6e],0x63616220
   140011e0b:	imul   esi,DWORD PTR [rbx+0x6c],0x61
   140011e0f:	jae    0x140011e79
   140011e11:	and    BYTE PTR [rbx+0x65],dh
   140011e14:	jno    0x140011e8b
   140011e16:	outs   dx,BYTE PTR gs:[rsi]
   140011e18:	movsxd esp,DWORD PTR [rbp+0x0]
   140011e1b:	add    BYTE PTR [rax],al
   140011e1d:	add    BYTE PTR [rax],al
   140011e1f:	add    BYTE PTR [rcx+0x51],dl
   140011e22:	ins    DWORD PTR es:[rdi],dx
   140011e23:	ins    BYTE PTR es:[rdi],dx
   140011e24:	push   rax
   140011e25:	(bad)  
   140011e26:	jb     0x140011e9b
   140011e28:	gs jb  0x140011e2b
   140011e2b:	add    BYTE PTR [rax],al
   140011e2d:	add    BYTE PTR [rax],al
   140011e2f:	add    BYTE PTR [rbp+0x6e],dl
   140011e32:	je     0x140011e99
   140011e34:	jb     0x140011ea3
   140011e36:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   140011e3d:	jb     0x140011ea4
   140011e3f:	addr32 jne 0x140011eae
   140011e42:	(bad)  
   140011e43:	jb     0x140011e65
   140011e45:	gs js  0x140011eb8
   140011e48:	jb     0x140011eaf
   140011e4a:	jae    0x140011ebf
   140011e4c:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696c20
   140011e53:	gs jb  0x140011eb7
   140011e56:	ins    BYTE PTR es:[rdi],dx
   140011e57:	add    BYTE PTR [rcx+0x6c],cl
   140011e5a:	ins    BYTE PTR es:[rdi],dx
   140011e5b:	gs addr32 (bad) 
   140011e5e:	ins    BYTE PTR es:[rdi],dx
   140011e5f:	and    BYTE PTR [rbx+0x79],dh
   140011e62:	outs   dx,BYTE PTR ds:[rsi]
   140011e63:	je     0x140011ec6
   140011e65:	js     0x140011e87
   140011e67:	outs   dx,WORD PTR ds:[rsi]
   140011e69:	jb     0x140011e8b
   140011e6b:	gs js  0x140011ede
   140011e6e:	outs   dx,DWORD PTR ds:[rsi]
   140011e6f:	outs   dx,BYTE PTR ds:[rsi]
   140011e70:	outs   dx,BYTE PTR gs:[rsi]
   140011e72:	je     0x140011edd
   140011e74:	(bad)  
   140011e75:	ins    BYTE PTR es:[rdi],dx
   140011e76:	and    BYTE PTR [rsi+0x75],ch
   140011e79:	ins    DWORD PTR es:[rdi],dx
   140011e7a:	(bad)  
   140011e7b:	gs jb  0x140011e7e
   140011e7e:	add    BYTE PTR [rax],al
   140011e80:	rex.B je 0x140011ea3
   140011e83:	ins    BYTE PTR es:[rdi],dx
   140011e84:	gs (bad) 
   140011e86:	jae    0x140011efc
   140011e88:	and    BYTE PTR [rdi+0x6e],ch
   140011e8b:	and    BYTE PTR gs:[rax+0x65],ch
   140011e8f:	js     0x140011ef2
   140011e91:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140011e96:	(bad)  
   140011e97:	ins    BYTE PTR es:[rdi],dx
   140011e98:	and    BYTE PTR [rcx+rbp*2+0x67],ah
   140011e9c:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x65722073
   140011ea4:	jno    0x140011f1b
   140011ea6:	imul   esi,DWORD PTR [rdx+0x65],0x66612064
   140011ead:	je     0x140011f14
   140011eaf:	jb     0x140011ed1
   140011eb1:	(bad)  
   140011eb2:	xor    BYTE PTR [rip+0x2731],ah        # 0x1400145e9
   140011eb8:	rex.R
   140011eb9:	movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140011ebd:	(bad)  
   140011ebe:	ins    BYTE PTR es:[rdi],dx
   140011ebf:	and    BYTE PTR [rsi+0x75],ch
   140011ec2:	ins    DWORD PTR es:[rdi],dx
   140011ec3:	(bad)  
   140011ec4:	gs jb  0x140011f3a
   140011ec7:	and    BYTE PTR [rbx+0x61],ah
   140011eca:	outs   dx,BYTE PTR ds:[rsi]
   140011ecb:	(bad)  
   140011ecc:	je     0x140011eee
   140011ece:	jae    0x140011f44
   140011ed0:	(bad)  
   140011ed1:	jb     0x140011f47
   140011ed3:	and    BYTE PTR [rdi+0x69],dh
   140011ed6:	je     0x140011f40
   140011ed8:	and    BYTE PTR [rdi],ah
   140011eda:	xor    BYTE PTR [rdi],ah
   140011edc:	add    BYTE PTR [rax],al
   140011ede:	add    BYTE PTR [rax],al
   140011ee0:	movsxd r14,DWORD PTR [r9+r12*2+0x6c]
   140011ee5:	and    BYTE PTR [rbp+0x73],ah
   140011ee8:	movsxd esp,DWORD PTR [rcx+0x70]
   140011eeb:	and    BYTE PTR gs:[rbx+0x65],dh
   140011eef:	jno    0x140011f66
   140011ef1:	outs   dx,BYTE PTR gs:[rsi]
   140011ef3:	movsxd esp,DWORD PTR [rbp+0x73]
   140011ef6:	and    BYTE PTR [rcx+0x72],ah
   140011ef9:	and    BYTE PTR gs:[rsi+0x6f],ch
   140011efd:	je     0x140011f1f
   140011eff:	(bad)  
   140011f00:	ins    BYTE PTR es:[rdi],dx
   140011f01:	ins    BYTE PTR es:[rdi],dx
   140011f02:	outs   dx,DWORD PTR ds:[rsi]
   140011f03:	ja     0x140011f6a
   140011f05:	add    BYTE PTR fs:[rax],al
   140011f08:	push   rbp
   140011f09:	outs   dx,BYTE PTR ds:[rsi]
   140011f0a:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140011f0e:	gs and BYTE PTR fs:[rbx+0x74],dh
   140011f13:	jb     0x140011f7e
   140011f15:	outs   dx,BYTE PTR ds:[rsi]
   140011f16:	and    BYTE PTR [ecx+0x74],ah
   140011f1a:	and    BYTE PTR [rbp+0x6e],ah
   140011f1d:	and    BYTE PTR fs:[rdi+0x66],ch
   140011f21:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140011f25:	add    BYTE PTR gs:[rax],al
   140011f28:	rex.WB ins BYTE PTR es:[rdi],dx
   140011f2a:	ins    BYTE PTR es:[rdi],dx
   140011f2b:	gs addr32 (bad) 
   140011f2e:	ins    BYTE PTR es:[rdi],dx
   140011f2f:	and    BYTE PTR [rax+0x65],ch
   140011f32:	js     0x140011f95
   140011f34:	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
   140011f39:	(bad)  
   140011f3a:	ins    BYTE PTR es:[rdi],dx
   140011f3b:	and    BYTE PTR [rbp+0x73],ah
   140011f3e:	movsxd esp,DWORD PTR [rcx+0x70]
   140011f41:	and    BYTE PTR gs:[rbx+0x65],dh
   140011f45:	jno    0x140011fbc
   140011f47:	outs   dx,BYTE PTR gs:[rsi]
   140011f49:	movsxd esp,DWORD PTR [rbp+0x0]
   140011f4c:	add    BYTE PTR [rax],al
   140011f4e:	add    BYTE PTR [rax],al
   140011f50:	rex.WB ins BYTE PTR es:[rdi],dx
   140011f52:	ins    BYTE PTR es:[rdi],dx
   140011f53:	gs addr32 (bad) 
   140011f56:	ins    BYTE PTR es:[rdi],dx
   140011f57:	and    BYTE PTR [rbp+0x6e],dh
   140011f5a:	imul   esp,DWORD PTR [rbx+0x6f],0x65206564
   140011f61:	jae    0x140011fc6
   140011f63:	(bad)  
   140011f64:	jo     0x140011fcb
   140011f66:	and    BYTE PTR [rbx+0x65],dh
   140011f69:	jno    0x140011fe0
   140011f6b:	outs   dx,BYTE PTR gs:[rsi]
   140011f6d:	movsxd esp,DWORD PTR [rbp+0x0]
   140011f70:	push   rbx
   140011f71:	je     0x140011fe5
   140011f73:	(bad)  
   140011f74:	jns    0x140011f96
   140011f76:	outs   dx,BYTE PTR ds:[rsi]
   140011f77:	gs ja  0x140011fe6
   140011f7a:	imul   ebp,DWORD PTR [rsi+0x65],0x206e6920
   140011f81:	jae    0x140011ff7
   140011f83:	jb     0x140011fee
   140011f85:	outs   dx,BYTE PTR ds:[rsi]
   140011f86:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   140011f8b:	gs jb  0x140011fef
   140011f8e:	ins    BYTE PTR es:[rdi],dx
   140011f8f:	add    BYTE PTR [rbp+0x6f],cl
   140011f92:	fs jne 0x140012001
   140011f95:	and    BYTE PTR gs:[rcx+0x6d],ch
   140011f99:	jo     0x14001200a
   140011f9b:	jb     0x140012011
   140011f9d:	and    BYTE PTR [rdx+0x65],dh
   140011fa0:	jno    0x140012017
   140011fa2:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140011fa9:	jno    0x140012020
   140011fab:	(bad)  
   140011fac:	ins    BYTE PTR es:[rdi],dx
   140011fad:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140011fb4:	add    BYTE PTR [rax],al
   140011fb6:	add    BYTE PTR [rax],al
   140011fb8:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x6f706d69
   140011fc1:	jb     0x140012037
   140011fc3:	and    BYTE PTR [rdx+0x65],dh
   140011fc6:	jno    0x14001203d
   140011fc8:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140011fcf:	jno    0x140012046
   140011fd1:	(bad)  
   140011fd2:	ins    BYTE PTR es:[rdi],dx
   140011fd3:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140011fda:	add    BYTE PTR [rax],al
   140011fdc:	add    BYTE PTR [rax],al
   140011fde:	add    BYTE PTR [rax],al
   140011fe0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011fe2:	jbe    0x140012045
   140011fe4:	ins    BYTE PTR es:[rdi],dx
   140011fe5:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x726f706d
   140011fed:	je     0x14001200f
   140011fef:	jno    0x140012066
   140011ff1:	(bad)  
   140011ff2:	ins    BYTE PTR es:[rdi],dx
   140011ff3:	imul   esp,DWORD PTR [rsi+0x69],0x7265
   140011ffa:	add    BYTE PTR [rax],al
   140011ffc:	add    BYTE PTR [rax],al
   140011ffe:	add    BYTE PTR [rax],al
   140012000:	push   rbx
   140012001:	jns    0x140012071
   140012003:	je     0x140012066
   140012005:	js     0x140012027
   140012007:	gs jb  0x14001207c
   14001200a:	outs   dx,DWORD PTR ds:[rsi]
   14001200b:	jb     0x14001200d
   14001200d:	add    BYTE PTR [rax],al
   14001200f:	add    BYTE PTR [rbp+0x6f],cl
   140012012:	fs jne 0x140012081
   140012015:	and    BYTE PTR gs:[rcx+0x6d],ch
   140012019:	jo     0x14001208a
   14001201b:	jb     0x140012091
   14001201d:	and    BYTE PTR [rdx+0x65],dh
   140012020:	jno    0x140012097
   140012022:	imul   esi,DWORD PTR [rdx+0x65],0x20612073
   140012029:	jbe    0x140012090
   14001202b:	jb     0x1400120a0
   14001202d:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140012034:	add    BYTE PTR [rax],al
   140012036:	add    BYTE PTR [rax],al
   140012038:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001203a:	jbe    0x14001209d
   14001203c:	ins    BYTE PTR es:[rdi],dx
   14001203d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x6c75646f
   140012045:	and    BYTE PTR gs:[rbp+0x52],dl
   140012049:	rex.WB add BYTE PTR [r8],al
   14001204c:	add    BYTE PTR [rax],al
   14001204e:	add    BYTE PTR [rax],al
   140012050:	rex.WB ins DWORD PTR es:[rdi],dx
   140012052:	jo     0x1400120c3
   140012054:	jb     0x1400120ca
   140012056:	gs and BYTE PTR fs:[rsi+0x69],ah
   14001205b:	ins    BYTE PTR es:[rdi],dx
   14001205c:	and    BYTE PTR gs:[rbp+0x75],ch
   140012060:	jae    0x1400120d6
   140012062:	and    BYTE PTR [rdx+0x65],ah
   140012065:	and    BYTE PTR [rcx+0x20],ah
   140012068:	jae    0x1400120cd
   14001206a:	jb     0x1400120d5
   14001206c:	jo     0x1400120e2
   14001206e:	add    BYTE PTR [rax],al
   140012070:	push   0x73
   140012072:	add    BYTE PTR [rax],al
   140012074:	add    BYTE PTR [rax],al
   140012076:	add    BYTE PTR [rax],al
   140012078:	ins    BYTE PTR es:[rdi],dx
   140012079:	imul   esp,DWORD PTR [rdx+0x72],0x797261
   140012080:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140012082:	imul   bp,WORD PTR [rsi+0x69],0x7974
	...
   140012094:	add    BYTE PTR [rax],al
   140012096:	lock mov edi,0x0
   14001209c:	add    BYTE PTR [rax],al
   14001209e:	lock (bad) 
   1400120a0:	loopne 0x1400120c5
   1400120a2:	add    DWORD PTR [rax+0x1],eax
   1400120a5:	add    BYTE PTR [rax],al
   1400120a7:	add    BYTE PTR [rbx+rsi*4+0x14000],ch
   1400120ae:	add    BYTE PTR [rax],al
   1400120b0:	add    DWORD PTR [rax],eax
	...
   1400120ba:	add    BYTE PTR [rax],al
   1400120bc:	or     BYTE PTR [rax+0x1],al
   1400120bf:	add    al,bl
   1400120c1:	and    BYTE PTR [rcx],al
   1400120c3:	add    BYTE PTR [rax+0x120],dh
	...
   1400120dd:	add    BYTE PTR [rax],al
   1400120df:	add    BYTE PTR [rcx],al
   1400120e1:	add    BYTE PTR [rax],al
   1400120e3:	add    al,dh
   1400120e5:	and    BYTE PTR [rcx],al
	...
   1400120ef:	add    BYTE PTR [rax],al
   1400120f1:	and    DWORD PTR [rcx],eax
	...
   1400120ff:	add    BYTE PTR [rax],cl
   140012101:	rex add DWORD PTR [rax],eax
	...
   14001210c:	(bad)  
   14001210d:	(bad)  
   14001210e:	(bad)  
   14001210f:	inc    DWORD PTR [rax]
   140012111:	add    BYTE PTR [rax],al
   140012113:	add    BYTE PTR [rax+0x0],al
   140012116:	add    BYTE PTR [rax],al
   140012118:	fsub   DWORD PTR [rax]
   14001211a:	add    DWORD PTR [rax],eax
	...
   140012128:	add    DWORD PTR [rax],eax
	...
   140012132:	add    BYTE PTR [rax],al
   140012134:	xor    BYTE PTR [rax+0x1],al
   140012137:	add    BYTE PTR [rax+0x21],dl
   14001213a:	add    DWORD PTR [rax],eax
   14001213c:	sub    BYTE PTR [rcx],ah
   14001213e:	add    DWORD PTR [rax],eax
	...
   140012154:	add    DWORD PTR [rax],eax
   140012156:	add    BYTE PTR [rax],al
   140012158:	add    al,0x0
   14001215a:	add    BYTE PTR [rax],al
   14001215c:	push   0x121
   140012161:	add    BYTE PTR [rax],al
   140012163:	add    BYTE PTR [rax],al
   140012165:	add    BYTE PTR [rax],al
   140012167:	add    BYTE PTR [rax-0x47fffedf],dl
   14001216d:	and    DWORD PTR [rcx],eax
   14001216f:	add    BYTE PTR [rax+0x122],cl
   140012175:	and    DWORD PTR [rcx],eax
	...
   14001218f:	add    BYTE PTR [rax],dh
   140012191:	rex add DWORD PTR [rax],eax
   140012194:	add    eax,DWORD PTR [rax]
   140012196:	add    BYTE PTR [rax],al
   140012198:	add    BYTE PTR [rax],al
   14001219a:	add    BYTE PTR [rax],al
   14001219c:	(bad)  
   14001219d:	(bad)  
   14001219e:	(bad)  
   14001219f:	inc    DWORD PTR [rax]
   1400121a1:	add    BYTE PTR [rax],al
   1400121a3:	add    BYTE PTR [rax+0x0],al
   1400121a6:	add    BYTE PTR [rax],al
   1400121a8:	push   rax
   1400121a9:	and    DWORD PTR [rcx],eax
	...
   1400121b7:	add    BYTE PTR [rax+0x40],ah
   1400121ba:	add    DWORD PTR [rax],eax
   1400121bc:	add    DWORD PTR [rax],eax
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	or     BYTE PTR [rax],al
   1400121c2:	add    BYTE PTR [rax],al
   1400121c4:	(bad)  
   1400121c5:	(bad)  
   1400121c6:	(bad)  
   1400121c7:	inc    DWORD PTR [rax]
   1400121c9:	add    BYTE PTR [rax],al
   1400121cb:	add    BYTE PTR [rbp+0x0],cl
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	loopne 0x1400121f3
   1400121d2:	add    DWORD PTR [rax],eax
	...
   1400121e8:	add    al,BYTE PTR [rax]
   1400121ea:	add    BYTE PTR [rax],al
   1400121ec:	clc    
   1400121ed:	and    DWORD PTR [rcx],eax
	...
   1400121f7:	add    BYTE PTR [rax],dl
   1400121f9:	and    al,BYTE PTR [rcx]
   1400121fb:	add    BYTE PTR [rax],bh
   1400121fd:	and    al,BYTE PTR [rcx]
	...
   14001220f:	add    BYTE PTR [rax+0x40],ah
   140012212:	add    DWORD PTR [rax],eax
   140012214:	add    DWORD PTR [rax],eax
   140012216:	add    BYTE PTR [rax],al
   140012218:	add    BYTE PTR [rax],al
   14001221a:	add    BYTE PTR [rax],al
   14001221c:	(bad)  
   14001221d:	(bad)  
   14001221e:	(bad)  
   14001221f:	inc    DWORD PTR [rax]
   140012221:	add    BYTE PTR [rax],al
   140012223:	add    BYTE PTR [rax+0x0],al
   140012226:	add    BYTE PTR [rax],al
   140012228:	loopne 0x14001224b
   14001222a:	add    DWORD PTR [rax],eax
	...
   140012238:	mov    BYTE PTR [rax+0x1],al
	...
   140012243:	add    bh,bh
   140012245:	(bad)  
   140012246:	(bad)  
   140012247:	inc    DWORD PTR [rax]
   140012249:	add    BYTE PTR [rax],al
   14001224b:	add    BYTE PTR [rax+0x0],al
   14001224e:	add    BYTE PTR [rax],al
   140012250:	(bad)  
   140012251:	and    al,BYTE PTR [rcx]
	...
   140012267:	add    BYTE PTR [rcx],al
   140012269:	add    BYTE PTR [rax],al
   14001226b:	add    BYTE PTR [rax+0x22],bh
   14001226e:	add    DWORD PTR [rax],eax
	...
   140012278:	cmp    BYTE PTR [rdx],ah
   14001227a:	add    DWORD PTR [rax],eax
	...
   140012288:	mov    BYTE PTR [rax+0x1],al
   14001228b:	add    BYTE PTR [rax],al
   14001228d:	add    BYTE PTR [rax],al
   14001228f:	add    BYTE PTR [rax],cl
   140012291:	add    BYTE PTR [rax],al
   140012293:	add    bh,bh
   140012295:	(bad)  
   140012296:	(bad)  
   140012297:	inc    DWORD PTR [rax]
   140012299:	add    BYTE PTR [rax],al
   14001229b:	add    BYTE PTR [rcx+0x0],cl
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	(bad)  
   1400122a1:	and    al,BYTE PTR [rcx]
	...
   1400122af:	add    BYTE PTR [rcx],al
	...
   1400122b9:	add    BYTE PTR [rax],al
   1400122bb:	add    BYTE PTR [rax-0x27fffec0],dh
   1400122c1:	and    al,BYTE PTR [rcx]
   1400122c3:	add    BYTE PTR [rax+0x122],dh
	...
   1400122d9:	add    BYTE PTR [rax],al
   1400122db:	add    BYTE PTR [rcx],al
   1400122dd:	add    BYTE PTR [rax],al
   1400122df:	add    BYTE PTR [rip+0xfffffffff0000000],al        # 0x1300122e5
   1400122e5:	and    al,BYTE PTR [rcx]
	...
   1400122ef:	add    BYTE PTR [rax],ah
   1400122f1:	and    eax,DWORD PTR [rcx]
   1400122f3:	add    BYTE PTR [rax-0x47fffedf],dl
   1400122f9:	and    DWORD PTR [rcx],eax
   1400122fb:	add    BYTE PTR [rax+0x122],cl
   140012301:	and    DWORD PTR [rcx],eax
	...
   14001231f:	add    BYTE PTR [rax+0x4000140],dh
   140012325:	add    BYTE PTR [rax],al
   140012327:	add    BYTE PTR [rax],al
   140012329:	add    BYTE PTR [rax],al
   14001232b:	add    bh,bh
   14001232d:	(bad)  
   14001232e:	(bad)  
   14001232f:	inc    DWORD PTR [rax]
   140012331:	add    BYTE PTR [rax],al
   140012333:	add    BYTE PTR [rax+0x0],al
   140012336:	add    BYTE PTR [rax],al
   140012338:	fsub   DWORD PTR [rdx]
   14001233a:	add    DWORD PTR [rax],eax
	...
   140012348:	add    DWORD PTR [rax],eax
	...
   140012352:	add    BYTE PTR [rax],al
   140012354:	fadd   DWORD PTR [rax+0x1]
   140012357:	add    BYTE PTR [rax+0x23],dh
   14001235a:	add    DWORD PTR [rax],eax
   14001235c:	and    rax,QWORD PTR [rcx]
	...
   140012373:	add    BYTE PTR [rcx],al
   140012375:	add    BYTE PTR [rax],al
   140012377:	add    BYTE PTR [rip+0xffffffff88000000],al        # 0xc801237d
   14001237d:	and    eax,DWORD PTR [rcx]
	...
   140012387:	add    BYTE PTR [rax-0x6ffffedd],bh
   14001238d:	and    DWORD PTR [rcx],eax
   14001238f:	add    BYTE PTR [rax-0x77fffedf],bh
   140012395:	and    al,BYTE PTR [rcx]
   140012397:	add    BYTE PTR [rax],al
   140012399:	and    DWORD PTR [rcx],eax
	...
   1400123b7:	add    al,bl
   1400123b9:	rex add DWORD PTR [rax],eax
   1400123bc:	add    al,0x0
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	add    BYTE PTR [rax],al
   1400123c2:	add    BYTE PTR [rax],al
   1400123c4:	(bad)  
   1400123c5:	(bad)  
   1400123c6:	(bad)  
   1400123c7:	inc    DWORD PTR [rax]
   1400123c9:	add    BYTE PTR [rax],al
   1400123cb:	add    BYTE PTR [rax+0x0],al
   1400123ce:	add    BYTE PTR [rax],al
   1400123d0:	jo     0x1400123f5
   1400123d2:	add    DWORD PTR [rax],eax
	...
   1400123e0:	add    DWORD PTR [rax],eax
	...
   1400123ea:	add    BYTE PTR [rax],al
   1400123ec:	sbb    BYTE PTR [rcx+0x1],al
   1400123ef:	add    BYTE PTR [rax],cl
   1400123f1:	and    al,0x1
   1400123f3:	add    al,ah
   1400123f5:	and    eax,DWORD PTR [rcx]
	...
   14001240f:	add    BYTE PTR [rcx],al
   140012411:	add    BYTE PTR [rax],al
   140012413:	add    BYTE PTR [rax],ah
   140012415:	and    al,0x1
	...
   14001241f:	add    BYTE PTR [rax],dh
   140012421:	and    al,0x1
	...
   14001242f:	add    BYTE PTR [rax],bl
   140012431:	add    DWORD PTR [r8],eax
	...
   14001243c:	(bad)  
   14001243d:	(bad)  
   14001243e:	(bad)  
   14001243f:	inc    DWORD PTR [rax]
   140012441:	add    BYTE PTR [rax],al
   140012443:	add    BYTE PTR [rax+0x0],al
   140012446:	add    BYTE PTR [rax],al
   140012448:	or     BYTE PTR [rcx+rax*1],ah
	...
   140012477:	add    BYTE PTR [rcx],al
   140012479:	adc    cl,BYTE PTR [rax]
   14001247b:	add    BYTE PTR [rdx],dl
   14001247d:	push   rsp
   14001247e:	(bad)  
   14001247f:	add    BYTE PTR [rdx],dl
   140012481:	xor    al,0xd
   140012483:	add    BYTE PTR [rdx],dl
   140012485:	jb     0x140012495
   140012487:	ror    BYTE PTR [rax+rsi*2],0xb
   14001248b:	(bad)  
   14001248c:	add    DWORD PTR [rdi],ecx
   14001248e:	(bad)  
   14001248f:	add    BYTE PTR [rdi],cl
   140012491:	or     DWORD PTR fs:[rax],eax
   140012494:	sysenter 
   140012496:	or     BYTE PTR [rax],al
   140012498:	rdmsr  
   14001249a:	or     esi,DWORD PTR [rax+0x1]
   14001249d:	clts   
   14001249f:	add    BYTE PTR [rdi],cl
   1400124a1:	or     al,BYTE PTR fs:[rax]
   1400124a4:	sysenter 
   1400124a6:	or     BYTE PTR [rax],al
   1400124a8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400124ab:	jo     0x1400124ae
   1400124ad:	(bad)  
   1400124ae:	add    al,BYTE PTR [rax]
   1400124b0:	(bad)  
   1400124b1:	push   rdx
   1400124b2:	add    dh,BYTE PTR [rax+0x1]
   1400124b5:	adc    cl,BYTE PTR [rax]
   1400124b7:	add    BYTE PTR [rdx],dl
   1400124b9:	push   rsp
   1400124ba:	or     al,0x0
   1400124bc:	adc    dh,BYTE PTR [rbx+rcx*1]
   1400124bf:	add    BYTE PTR [rdx],dl
   1400124c1:	push   rdx
   1400124c2:	(bad)  
   1400124c3:	ror    BYTE PTR [rax+rsi*2],0xb
   1400124c7:	(bad)  
   1400124c8:	sbb    DWORD PTR [rbx],ecx
   1400124ca:	add    eax,DWORD PTR [rax]
   1400124cc:	or     eax,DWORD PTR [rdx+0x7]
   1400124cf:	push   rax
   1400124d0:	(bad)  
   1400124d1:	xor    BYTE PTR [rax],al
   1400124d3:	add    BYTE PTR [rsi],ch
   1400124d5:	mov    ah,0x0
   1400124d7:	add    al,cl
   1400124d9:	(bad)  
   1400124da:	add    BYTE PTR [rax],al
   1400124dc:	sbb    DWORD PTR [rsi],esp
   1400124de:	or     al,BYTE PTR [rax]
   1400124e0:	es je  0x1400124f4
   1400124e3:	add    BYTE PTR [rdx],ah
   1400124e5:	adc    BYTE PTR fs:[rax],al
   1400124e8:	(bad)  
   1400124e9:	xor    al,0xf
   1400124eb:	add    BYTE PTR [rcx],dl
   1400124ed:	xchg   edx,eax
   1400124ee:	or     eax,0x9d00be0
   1400124f3:	shr    BYTE PTR [rsi],0xb4
   1400124f6:	add    BYTE PTR [rax],al
   1400124f8:	enter  0xc4,0x0
	...
   140012504:	add    DWORD PTR [rax],eax
   140012506:	add    BYTE PTR [rax],al
   140012508:	add    DWORD PTR [rax],eax
   14001250a:	add    BYTE PTR [rax],al
   14001250c:	adc    BYTE PTR [rip+0x1],ah        # 0x140012513
	...
   14001251a:	add    BYTE PTR [rax],al
   14001251c:	and    BYTE PTR [rbx+0x480000],bh
   140012522:	add    BYTE PTR [rax],al
   140012524:	mov    al,0x15
   140012526:	add    BYTE PTR [rax],al
   140012528:	(bad)  
   140012529:	(bad)  
   14001252a:	(bad)  
   14001252b:	jmp    QWORD PTR [rbp+0x16]
   14001252e:	add    BYTE PTR [rax],al
   140012530:	add    BYTE PTR [rax],al
   140012532:	add    BYTE PTR [rax],al
   140012534:	and    al,0x17
   140012536:	add    BYTE PTR [rax],al
   140012538:	(bad)  
   140012539:	(bad)  
   14001253a:	(bad)  
   14001253b:	jmp    QWORD PTR [rax]
   14001253d:	mov    ebx,0x0
   140012542:	add    BYTE PTR [rax],al
   140012544:	cs mov ebx,0x10000
   14001254a:	add    BYTE PTR [rax],al
   14001254c:	rex.WXB movabs r11,0xc19000000000000
   140012556:	add    eax,DWORD PTR [rax]
   140012558:	or     al,0x42
   14001255a:	or     al,al
   14001255c:	(bad)  
   14001255d:	push   rax
   14001255e:	add    BYTE PTR [rax],al
   140012560:	cs mov ah,0x0
   140012563:	add    al,dh
   140012565:	(bad)  
   140012566:	add    BYTE PTR [rax],al
   140012568:	sbb    DWORD PTR [rsi],esp
   14001256a:	or     al,BYTE PTR [rax]
   14001256c:	es je  0x140012580
   14001256f:	add    BYTE PTR [rdx],ah
   140012571:	adc    BYTE PTR fs:[rax],al
   140012574:	(bad)  
   140012575:	xor    al,0xf
   140012577:	add    BYTE PTR [rcx],dl
   140012579:	xchg   edx,eax
   14001257a:	or     eax,0x9d00be0
   14001257f:	shr    BYTE PTR [rsi],0xb4
   140012582:	add    BYTE PTR [rax],al
   140012584:	lock (bad) 
	...
   14001258e:	add    BYTE PTR [rax],al
   140012590:	add    DWORD PTR [rax],eax
   140012592:	add    BYTE PTR [rax],al
   140012594:	add    DWORD PTR [rax],eax
   140012596:	add    BYTE PTR [rax],al
   140012598:	pushf  
   140012599:	and    eax,0x1
	...
   1400125a6:	add    BYTE PTR [rax],al
   1400125a8:	(bad)  
   1400125a9:	mov    ebx,0x480000
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	(bad)  
   1400125b1:	(bad)  
   1400125b2:	(bad)  
   1400125b3:	inc    DWORD PTR [rax]
   1400125b5:	add    BYTE PTR [rax],al
   1400125b7:	add    bh,bh
   1400125b9:	(bad)  
   1400125ba:	(bad)  
   1400125bb:	inc    DWORD PTR [rax]
   1400125bd:	add    BYTE PTR [rax],al
   1400125bf:	add    BYTE PTR [rax-0xffffe9],ah
   1400125c5:	(bad)  
   1400125c6:	(bad)  
   1400125c7:	(bad)  
   1400125c8:	cmp    bl,BYTE PTR [rax]
   1400125ca:	add    BYTE PTR [rax],al
   1400125cc:	add    BYTE PTR [rax],al
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	(bad)  
   1400125d1:	sbb    BYTE PTR [rax],al
   1400125d3:	add    bh,bh
   1400125d5:	(bad)  
   1400125d6:	(bad)  
   1400125d7:	jmp    QWORD PTR [rax-0x45]
   1400125da:	add    BYTE PTR [rax],al
   1400125dc:	add    BYTE PTR [rax],al
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	outs   dx,DWORD PTR ds:[rsi]
   1400125e1:	mov    ebx,0x10000
   1400125e6:	add    BYTE PTR [rax],al
   1400125e8:	mov    WORD PTR [rbx+0x0],?
   1400125ee:	add    BYTE PTR [rax],al
   1400125f0:	add    DWORD PTR [rdi],edx
   1400125f2:	or     eax,DWORD PTR [rax]
   1400125f4:	(bad)  
   1400125f5:	xor    al,0x3b
   1400125f7:	add    BYTE PTR [rdi],dl
   1400125f9:	add    DWORD PTR [rdx],esi
   1400125fb:	add    BYTE PTR [rax],dl
   1400125fd:	lock (bad) 
   1400125ff:	loopne 0x14001260d
   140012601:	ror    BYTE PTR [rdx],1
   140012603:	ror    BYTE PTR [rax],0x70
   140012606:	(bad)  
   140012607:	(bad)  
   140012608:	(bad)  
   140012609:	push   rax
   14001260a:	add    BYTE PTR [rax],al
   14001260c:	add    DWORD PTR [rax+rcx*1],edx
   14001260f:	add    BYTE PTR [rsp+riz*2],dl
   140012612:	or     eax,DWORD PTR [rax]
   140012614:	adc    al,0x54
   140012616:	or     al,BYTE PTR [rax]
   140012618:	adc    al,0x34
   14001261a:	or     DWORD PTR [rax],eax
   14001261c:	adc    al,0x52
   14001261e:	adc    BYTE PTR [rax+0x21],dh
   140012621:	add    BYTE PTR [rax],al
   140012623:	add    BYTE PTR [rax+0x20],al
   140012626:	add    BYTE PTR [rax],al
   140012628:	jns    0x14001264a
   14001262a:	add    BYTE PTR [rax],al
   14001262c:	rex.W
   14001262d:	add    DWORD PTR es:[rax],eax
   140012630:	and    DWORD PTR [rdx],ecx
   140012632:	add    al,0x0
   140012634:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140012638:	add    eax,0x40000654
   14001263d:	and    BYTE PTR [rax],al
   14001263f:	add    BYTE PTR [rcx+0x20],bh
   140012642:	add    BYTE PTR [rax],al
   140012644:	rex.W
   140012645:	add    DWORD PTR es:[rax],eax
   140012648:	add    DWORD PTR [rdx],ecx
   14001264a:	add    al,0x0
   14001264c:	or     dh,BYTE PTR [rax+rcx*1]
   14001264f:	add    BYTE PTR [rdx],cl
   140012651:	xor    al,BYTE PTR [rsi]
   140012653:	(bad)  
   140012654:	and    DWORD PTR [rax],eax
   140012656:	add    BYTE PTR [rax],al
   140012658:	lock and BYTE PTR [rax],al
   14001265b:	add    BYTE PTR [rip+0x8000021],cl        # 0x148012682
   140012661:	sub    eax,DWORD PTR [rcx]
   140012663:	add    BYTE PTR [rcx],ah
   140012665:	(bad)  
   140012666:	(bad)  
   140012667:	add    BYTE PTR [rsi],dl
   140012669:	je     0x14001266f
   14001266b:	add    BYTE PTR [rdx],cl
   14001266d:	fs (bad) 
   14001266f:	add    BYTE PTR [rip+0xfffffffff0000634],al        # 0x130012ca9
   140012675:	and    BYTE PTR [rax],al
   140012677:	add    BYTE PTR [rip+0x8000021],cl        # 0x14801269e
   14001267d:	sub    eax,DWORD PTR [rcx]
   14001267f:	add    BYTE PTR [rcx],ah
   140012681:	add    BYTE PTR [rax],al
   140012683:	add    BYTE PTR [rax+0x21],dh
   140012686:	add    BYTE PTR [rax],al
   140012688:	mov    ah,BYTE PTR [rcx]
   14001268a:	add    BYTE PTR [rax],al
   14001268c:	shl    BYTE PTR [rsi],0x1
   14001268f:	add    BYTE PTR [rcx],ah
   140012691:	add    BYTE PTR [rdx],al
   140012693:	add    BYTE PTR [rax],al
   140012695:	je     0x1400126a0
   140012697:	add    BYTE PTR [rax+0x21],dh
   14001269a:	add    BYTE PTR [rax],al
   14001269c:	mov    ah,BYTE PTR [rcx]
   14001269e:	add    BYTE PTR [rax],al
   1400126a0:	shl    BYTE PTR [rsi],0x1
   1400126a3:	add    BYTE PTR [rcx],ah
   1400126a5:	push   rsp
   1400126a6:	(bad)  
   1400126a7:	add    BYTE PTR [rsp+rdx*2+0x8],dl
   1400126ab:	add    BYTE PTR [rdi+0x34],cl
   1400126ae:	(bad)  
   1400126af:	add    BYTE PTR [rip+0x70000974],al        # 0x1b0013029
   1400126b5:	and    DWORD PTR [rax],eax
   1400126b7:	add    BYTE PTR [rdx-0x3fffffdf],cl
   1400126bd:	add    DWORD PTR es:[rax],eax
   1400126c0:	add    DWORD PTR [rsi],eax
   1400126c2:	add    al,BYTE PTR [rax]
   1400126c4:	(bad)  
   1400126c5:	xor    al,BYTE PTR [rdx]
   1400126c7:	(bad)  
   1400126c8:	and    DWORD PTR [rax],eax
   1400126ca:	add    BYTE PTR [rax],al
   1400126cc:	and    al,BYTE PTR [rax]
   1400126cf:	add    BYTE PTR [rsi+0x22],bh
   1400126d2:	add    BYTE PTR [rax],al
   1400126d4:	sub    r8b,BYTE PTR [rcx]
   1400126d7:	add    BYTE PTR [rcx],ah
   1400126d9:	or     al,BYTE PTR [rax+rax*1]
   1400126dc:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   1400126e0:	add    eax,0x40000664
   1400126e5:	and    al,BYTE PTR [rax]
   1400126e7:	add    BYTE PTR [rsi+0x22],bh
   1400126ea:	add    BYTE PTR [rax],al
   1400126ec:	sub    r8b,BYTE PTR [rcx]
   1400126ef:	add    BYTE PTR [rcx],al
   1400126f1:	sbb    cl,BYTE PTR [rdx]
   1400126f3:	add    BYTE PTR [rdx],bl
   1400126f5:	push   rsp
   1400126f6:	or     al,0x0
   1400126f8:	sbb    dh,BYTE PTR [rdx+rcx*1]
   1400126fb:	add    BYTE PTR [rdx],bl
   1400126fd:	xor    dl,BYTE PTR [rsi]
   1400126ff:	loopne 0x140012715
   140012701:	rcl    BYTE PTR [rdx],1
   140012703:	rcl    BYTE PTR [rax],0x70
   140012706:	punpcklbw mm4,DWORD PTR [rcx]
   140012709:	add    BYTE PTR [rax],al
   14001270b:	add    al,ah
   14001270d:	and    al,0x0
   14001270f:	add    bl,ch
   140012711:	and    al,0x0
   140012713:	add    BYTE PTR [rdi+riz*1+0x1],dl
   140012717:	add    BYTE PTR [rcx],ah
   140012719:	add    BYTE PTR [rax],al
   14001271b:	add    bl,ch
   14001271d:	and    al,0x0
   14001271f:	add    BYTE PTR [rcx+0x25],ah
   140012722:	add    BYTE PTR [rax],al
   140012724:	rex (bad) 
   140012726:	add    DWORD PTR [rax],eax
   140012728:	and    DWORD PTR [rip+0xffffffffd40d0004],ecx        # 0x1140e2732
   14001272e:	or     al,BYTE PTR [rax]
   140012730:	add    eax,0xeb0009c4
   140012735:	and    al,0x0
   140012737:	add    BYTE PTR [rcx+0x25],ah
   14001273a:	add    BYTE PTR [rax],al
   14001273c:	rex (bad) 
   14001273e:	add    DWORD PTR [rax],eax
   140012740:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4062748
   140012746:	or     BYTE PTR [rax],al
   140012748:	loopne 0x14001276e
   14001274a:	add    BYTE PTR [rax],al
   14001274c:	jmp    0x140012772
   14001274e:	add    BYTE PTR [rax],al
   140012750:	push   rsp
   140012751:	(bad)  
   140012752:	add    DWORD PTR [rax],eax
   140012754:	add    DWORD PTR [rax],ecx
   140012756:	add    al,0x0
   140012758:	or     BYTE PTR [rdx],dh
   14001275a:	add    al,0x70
   14001275c:	add    edx,DWORD PTR [rax+0x2]
   14001275f:	xor    BYTE PTR [rcx],al
   140012761:	clts   
   140012763:	add    BYTE PTR [rdi],cl
   140012765:	fs (bad) 
   140012767:	add    BYTE PTR [rdi],cl
   140012769:	xor    al,0x6
   14001276b:	add    BYTE PTR [rdi],cl
   14001276d:	xor    cl,BYTE PTR [rbx]
   14001276f:	jo     0x140012772
   140012771:	or     al,BYTE PTR [rax+rax*1]
   140012774:	or     dh,BYTE PTR [rsi+rax*1]
   140012777:	add    BYTE PTR [rdx],cl
   140012779:	xor    al,BYTE PTR [rsi]
   14001277b:	jo     0x14001277e
   14001277d:	sbb    ecx,DWORD PTR [rbx]
   14001277f:	add    BYTE PTR [rbx],bl
   140012781:	xor    al,0xe1
   140012783:	add    BYTE PTR [rbx],bl
   140012785:	add    eax,ebx
   140012787:	add    BYTE PTR [rax+rsi*8],dl
   14001278a:	adc    ah,al
   14001278c:	adc    al,dl
   14001278e:	(bad)  
   14001278f:	ror    BYTE PTR [rax+rsi*2],0xb
   140012793:	(bad)  
   140012794:	or     dl,BYTE PTR [rax+0x0]
   140012797:	add    BYTE PTR [rcx],al
   140012799:	or     al,BYTE PTR [rax+rax*1]
   14001279c:	or     dh,BYTE PTR [rdi+rax*1]
   14001279f:	add    BYTE PTR [rdx],cl
   1400127a1:	xor    al,BYTE PTR [rsi]
   1400127a3:	jo     0x1400127a6
   1400127a5:	movabs eax,ds:0x113002f54a1000b
   1400127ae:	xor    BYTE PTR [rax],al
   1400127b0:	or     al,0xf0
   1400127b2:	or     ah,al
   1400127b4:	or     al,dl
   1400127b6:	(bad)  
   1400127b7:	rol    BYTE PTR [rax+rsi*2],0x3
   1400127bb:	(bad)  
   1400127bc:	add    dh,BYTE PTR [rax]
   1400127be:	add    BYTE PTR [rax],al
   1400127c0:	add    DWORD PTR [rax],ebx
   1400127c2:	or     al,BYTE PTR [rax]
   1400127c4:	sbb    BYTE PTR [rcx],al
   1400127c6:	(bad)  
   1400127c7:	add    BYTE PTR [rcx],dl
   1400127c9:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c133a1
   1400127d1:	jo     0x1400127db
   1400127d3:	(bad)  
   1400127d4:	(bad)  
   1400127d5:	push   rax
   1400127d6:	(bad)  
   1400127d7:	xor    BYTE PTR [rcx],al
   1400127d9:	adc    al,0x8
   1400127db:	add    BYTE PTR [rsp+riz*2],dl
   1400127de:	or     BYTE PTR [rax],al
   1400127e0:	adc    al,0x54
   1400127e2:	(bad)  
   1400127e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400127e6:	(bad)  
   1400127e7:	add    BYTE PTR [rdx+rsi*1],dl
   1400127ea:	adc    BYTE PTR [rax+0x1],dh
   1400127ed:	or     DWORD PTR [rcx],eax
   1400127ef:	add    BYTE PTR [rcx],cl
   1400127f1:	rex.X add BYTE PTR [rax],al
   1400127f4:	add    DWORD PTR [rcx],ecx
   1400127f6:	add    DWORD PTR [rax],eax
   1400127f8:	or     DWORD PTR [rdx+0x0],esp
   1400127fb:	add    BYTE PTR [rcx],al
   1400127fd:	(bad)  
   1400127fe:	or     BYTE PTR [rax],al
   140012800:	(bad)  
   140012801:	push   rsp
   140012802:	or     eax,DWORD PTR [rax]
   140012804:	(bad)  
   140012805:	xor    al,0x8
   140012807:	add    BYTE PTR [rsi],dl
   140012809:	xor    dl,BYTE PTR [rdx]
   14001280b:	rcl    BYTE PTR [rax],0x70
   14001280e:	punpcklbw mm4,DWORD PTR [rcx]
   140012811:	add    BYTE PTR [rax],al
   140012813:	add    al,dh
   140012815:	ja     0x140012817
   140012817:	add    BYTE PTR [rdi+0x78],ah
   14001281a:	add    BYTE PTR [rax],al
   14001281c:	cmp    al,0x28
   14001281e:	add    DWORD PTR [rax],eax
   140012820:	and    DWORD PTR [rdx],edx
   140012822:	(bad)  
   140012823:	add    BYTE PTR [rdx],dl
   140012825:	je     0x14001282d
   140012827:	add    BYTE PTR [rip+0x5000e64],cl        # 0x145013691
   14001282d:	push   rsp
   14001282e:	or     eax,0x77f000
   140012833:	add    BYTE PTR [rdi+0x78],ah
   140012836:	add    BYTE PTR [rax],al
   140012838:	cmp    al,0x28
   14001283a:	add    DWORD PTR [rax],eax
   14001283c:	add    DWORD PTR [rax*1+0x8620c00],ecx
   140012843:	loopne 0x14001284b
   140012845:	rol    BYTE PTR [rax+rax*8],1
   140012848:	add    dh,BYTE PTR [rax]
   14001284a:	add    BYTE PTR [rax],al
   14001284c:	and    DWORD PTR [rax],eax
   14001284e:	add    BYTE PTR [rax],al
   140012850:	adc    BYTE PTR [rcx+0x0],bh
   140012853:	add    BYTE PTR [rbp+0x79],dl
   140012856:	add    BYTE PTR [rax],al
   140012858:	je     0x140012882
   14001285a:	add    DWORD PTR [rax],eax
   14001285c:	and    DWORD PTR [rdx],ecx
   14001285e:	add    al,0x0
   140012860:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140012864:	add    eax,0x10000634
   140012869:	jns    0x14001286b
   14001286b:	add    BYTE PTR [rbp+0x79],dl
   14001286e:	add    BYTE PTR [rax],al
   140012870:	je     0x14001289a
   140012872:	add    DWORD PTR [rax],eax
   140012874:	add    DWORD PTR [rax],edx
   140012876:	(bad)  
   140012877:	add    BYTE PTR [rax],dl
   140012879:	or     DWORD PTR fs:[rax],eax
   14001287c:	adc    BYTE PTR [rax+rcx*1+0x0],dl
   140012880:	adc    BYTE PTR [rdx],dh
   140012882:	or     al,0xc0
   140012884:	add    DWORD PTR [rax],ecx
   140012886:	add    al,0x0
   140012888:	or     BYTE PTR [rdx+0x60037004],dh
   14001288e:	add    dh,BYTE PTR [rax]
   140012890:	and    DWORD PTR [rax],eax
   140012892:	add    BYTE PTR [rax],al
   140012894:	loopne 0x140012913
   140012896:	add    BYTE PTR [rax],al
   140012898:	xor    edi,DWORD PTR [rsi+0x0]
   14001289b:	add    BYTE PTR [rax+rbp*1+0x8210001],dh
   1400128a2:	add    al,BYTE PTR [rax]
   1400128a4:	or     ah,ah
   1400128a6:	and    al,BYTE PTR [rax]
   1400128a8:	loopne 0x140012927
   1400128aa:	add    BYTE PTR [rax],al
   1400128ac:	xor    edi,DWORD PTR [rsi+0x0]
   1400128af:	add    BYTE PTR [rax+rbp*1+0x16010001],dh
   1400128b6:	or     DWORD PTR [rax],eax
   1400128b8:	(bad)  
   1400128b9:	add    DWORD PTR [rdx],ebx
   1400128bb:	add    BYTE PTR [rdi],cl
   1400128bd:	lock or eax,0x9c00bd0
   1400128c3:	jo     0x1400128cd
   1400128c5:	(bad)  
   1400128c6:	(bad)  
   1400128c7:	push   rax
   1400128c8:	(bad)  
   1400128c9:	xor    BYTE PTR [rax],al
   1400128cb:	add    BYTE PTR [rcx],ah
   1400128cd:	add    BYTE PTR [rdx],cl
   1400128cf:	add    BYTE PTR [rax],al
   1400128d1:	(bad)  
   1400128d2:	sub    eax,DWORD PTR [rax]
   1400128d4:	add    ah,al
   1400128d6:	sub    al,0x0
   1400128d8:	add    BYTE PTR [rbp+rbp*1+0x0],dh
   1400128dc:	add    BYTE PTR [rsi+rbp*1+0x0],ah
   1400128e0:	add    BYTE PTR [rdi+rbp*1],dh
   1400128e3:	add    BYTE PTR [rax-0x77],dh
   1400128e6:	add    BYTE PTR [rax],al
   1400128e8:	xchg   esp,eax
   1400128e9:	mov    DWORD PTR [rax],eax
   1400128eb:	add    BYTE PTR [rcx+rbp*1],dl
   1400128ee:	add    DWORD PTR [rax],eax
   1400128f0:	and    DWORD PTR [rdx],esi
   1400128f2:	or     al,BYTE PTR [rax]
   1400128f4:	xor    dh,BYTE PTR [rbp+rbp*1+0x0]
   1400128f8:	and    BYTE PTR [rsi+rbp*1+0x0],ah
   1400128fc:	sbb    BYTE PTR [rdi+rbp*1],dh
   1400128ff:	add    BYTE PTR [rax],dl
   140012901:	(bad)  
   140012902:	sub    eax,DWORD PTR [rax]
   140012904:	or     ah,al
   140012906:	sub    al,0x0
   140012908:	jo     0x140012893
   14001290a:	add    BYTE PTR [rax],al
   14001290c:	xchg   esp,eax
   14001290d:	mov    DWORD PTR [rax],eax
   14001290f:	add    BYTE PTR [rcx+rbp*1],dl
   140012912:	add    DWORD PTR [rax],eax
   140012914:	add    DWORD PTR [rcx],ecx
   140012916:	add    eax,DWORD PTR [rax]
   140012918:	or     DWORD PTR [rcx],eax
   14001291a:	xor    BYTE PTR [rax],al
   14001291c:	add    dl,BYTE PTR [rax+0x0]
   14001291f:	add    BYTE PTR [rcx],ah
   140012921:	add    BYTE PTR [rax],cl
   140012923:	add    BYTE PTR [rax],al
   140012925:	in     al,0x28
   140012927:	add    BYTE PTR [rax],al
   140012929:	(bad)  
   14001292a:	sub    DWORD PTR [rax],eax
   14001292c:	add    BYTE PTR [rdx+rbp*1+0x0],dh
   140012930:	add    BYTE PTR [rcx+rsi*1+0x0],ah
   140012934:	shl    BYTE PTR [rcx-0x5e000000],0x0
   14001293b:	add    BYTE PTR [rax+0x29],ah
   14001293e:	add    DWORD PTR [rax],eax
   140012940:	and    DWORD PTR [rdi],esp
   140012942:	or     BYTE PTR [rax],al
   140012944:	(bad)  
   140012945:	je     0x140012971
   140012947:	add    BYTE PTR [rax],bl
   140012949:	in     al,0x28
   14001294b:	add    BYTE PTR [rax],dl
   14001294d:	(bad)  
   14001294e:	sub    DWORD PTR [rax],eax
   140012950:	or     BYTE PTR [rcx+rsi*1+0x0],ah
   140012954:	shl    BYTE PTR [rcx-0x5e000000],0x0
   14001295b:	add    BYTE PTR [rax+0x29],ah
   14001295e:	add    DWORD PTR [rax],eax
   140012960:	add    DWORD PTR [rsi],ecx
   140012962:	(bad)  
   140012963:	add    BYTE PTR [rsi],cl
   140012965:	add    DWORD PTR [rbx],ebp
   140012967:	add    BYTE PTR [rdi],al
   140012969:	lock add eax,0x25003d0
   14001296f:	xor    BYTE PTR [rcx],ah
   140012971:	add    BYTE PTR [rax],al
   140012973:	add    BYTE PTR [rax-0x54],al
   140012976:	add    BYTE PTR [rax],al
   140012978:	push   rax
   140012979:	lods   al,BYTE PTR ds:[rsi]
   14001297a:	add    BYTE PTR [rax],al
   14001297c:	mov    eax,0x21000129
   140012981:	add    BYTE PTR [rax],al
   140012983:	add    BYTE PTR [rax-0x54],dl
   140012986:	add    BYTE PTR [rax],al
   140012988:	pop    rsp
   140012989:	lods   al,BYTE PTR ds:[rsi]
   14001298a:	add    BYTE PTR [rax],al
   14001298c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001298d:	sub    DWORD PTR [rcx],eax
   14001298f:	add    BYTE PTR [rcx],ah
   140012991:	add    eax,0x64050002
   140012996:	(bad)  
   140012997:	add    BYTE PTR [rax-0x54],dl
   14001299a:	add    BYTE PTR [rax],al
   14001299c:	pop    rsp
   14001299d:	lods   al,BYTE PTR ds:[rsi]
   14001299e:	add    BYTE PTR [rax],al
   1400129a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400129a1:	sub    DWORD PTR [rcx],eax
   1400129a3:	add    BYTE PTR [rcx],ah
   1400129a5:	add    eax,0x34050002
   1400129aa:	(bad)  
   1400129ab:	add    BYTE PTR [rax-0x54],al
   1400129ae:	add    BYTE PTR [rax],al
   1400129b0:	push   rax
   1400129b1:	lods   al,BYTE PTR ds:[rsi]
   1400129b2:	add    BYTE PTR [rax],al
   1400129b4:	mov    eax,0x1000129
   1400129b9:	(bad)  
   1400129ba:	add    al,BYTE PTR [rax]
   1400129bc:	(bad)  
   1400129bd:	xor    al,BYTE PTR [rdx]
   1400129bf:	jo     0x1400129e2
   1400129c1:	sub    DWORD PTR [rax+rax*1],eax
   1400129c4:	sub    DWORD PTR [rax+rcx*1+0x0],esi
   1400129c8:	add    BYTE PTR [rax+0x2],ch
   1400129cb:	add    BYTE PTR [rax-0x26ffff54],dh
   1400129d1:	lods   al,BYTE PTR ds:[rsi]
   1400129d2:	add    BYTE PTR [rax],al
   1400129d4:	in     al,dx
   1400129d5:	sub    DWORD PTR [rcx],eax
   1400129d7:	add    BYTE PTR [rcx],ah
   1400129d9:	add    eax,0x68050002
   1400129de:	add    al,BYTE PTR [rax]
   1400129e0:	mov    al,0xac
   1400129e2:	add    BYTE PTR [rax],al
   1400129e4:	fldcw  WORD PTR [rax+rax*1+0x129ec00]
   1400129eb:	add    BYTE PTR [rcx],al
   1400129ed:	(bad)  
   1400129ee:	add    al,BYTE PTR [rax]
   1400129f0:	(bad)  
   1400129f1:	push   rdx
   1400129f2:	add    dh,BYTE PTR [rax]
   1400129f4:	add    DWORD PTR [rsi+rax*1],edx
   1400129f7:	add    BYTE PTR [rsp+riz*2],dl
   1400129fa:	(bad)  
   1400129fb:	add    BYTE PTR [rsp+rsi*1],dl
   1400129fe:	(bad)  
   1400129ff:	add    BYTE PTR [rdx+rsi*1],dl
   140012a02:	adc    BYTE PTR [rax+0x21],dh
   140012a05:	add    BYTE PTR [rax],al
   140012a07:	add    al,dl
   140012a09:	mov    al,0x0
   140012a0b:	add    ch,ch
   140012a0d:	mov    al,0x0
   140012a0f:	add    BYTE PTR [rax],cl
   140012a11:	sub    eax,DWORD PTR [rcx]
   140012a13:	add    BYTE PTR [rcx],ah
   140012a15:	(bad)  
   140012a16:	(bad)  
   140012a17:	add    BYTE PTR [rsi],dl
   140012a19:	je     0x140012a1f
   140012a1b:	add    BYTE PTR [rdx],cl
   140012a1d:	fs (bad) 
   140012a1f:	add    BYTE PTR [rip+0xffffffffd0000634],al        # 0x110013059
   140012a25:	mov    al,0x0
   140012a27:	add    ch,ch
   140012a29:	mov    al,0x0
   140012a2b:	add    BYTE PTR [rax],cl
   140012a2d:	sub    eax,DWORD PTR [rcx]
   140012a2f:	add    BYTE PTR [rcx],al
   140012a31:	sbb    BYTE PTR [rax],cl
   140012a33:	add    BYTE PTR [rax],bl
   140012a35:	or     DWORD PTR fs:[rax],eax
   140012a38:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   140012a3c:	sbb    BYTE PTR [rsi+rax*1],dh
   140012a3f:	add    BYTE PTR [rax],bl
   140012a41:	xor    dl,BYTE PTR [rax+rsi*2]
   140012a44:	add    DWORD PTR [rsi],eax
   140012a46:	add    al,BYTE PTR [rax]
   140012a48:	(bad)  
   140012a49:	xor    al,BYTE PTR [rdx]
   140012a4b:	xor    BYTE PTR [rcx],ah
   140012a4d:	add    BYTE PTR [rax],al
   140012a4f:	add    BYTE PTR [rax],dl
   140012a51:	mov    bl,0x0
   140012a53:	add    BYTE PTR [rax],dh
   140012a55:	mov    bl,0x0
   140012a57:	add    BYTE PTR [rdx+rbp*1+0x210001],al
   140012a5e:	add    al,BYTE PTR [rax]
   140012a60:	add    BYTE PTR [rsi+rax*1],dh
   140012a63:	add    BYTE PTR [rax],dl
   140012a65:	mov    bl,0x0
   140012a67:	add    BYTE PTR [rax],dh
   140012a69:	mov    bl,0x0
   140012a6b:	add    BYTE PTR [rdx+rbp*1+0x5210001],al
   140012a72:	add    al,BYTE PTR [rax]
   140012a74:	add    eax,0x10000634
   140012a79:	mov    bl,0x0
   140012a7b:	add    BYTE PTR [rax],dh
   140012a7d:	mov    bl,0x0
   140012a7f:	add    BYTE PTR [rdx+rbp*1+0x4010001],al
   140012a86:	add    DWORD PTR [rax],eax
   140012a88:	add    al,0x62
   140012a8a:	add    BYTE PTR [rax],al
   140012a8c:	or     DWORD PTR [rdx],ecx
   140012a8e:	add    al,0x0
   140012a90:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   140012a94:	or     dh,BYTE PTR [rdx]
   140012a96:	(bad)  
   140012a97:	jo     0x140012afd
   140012a99:	mov    ecx,0x10000
   140012a9e:	add    BYTE PTR [rax],al
   140012aa0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012aa1:	mov    ah,0x0
   140012aa3:	add    ah,ah
   140012aa5:	mov    ch,0x0
   140012aa7:	add    BYTE PTR [rsi-0x1bffff45],bl
   140012aad:	mov    ch,0x0
   140012aaf:	add    BYTE PTR [rcx],al
   140012ab1:	(bad)  
   140012ab2:	add    al,BYTE PTR [rax]
   140012ab4:	(bad)  
   140012ab5:	xor    al,BYTE PTR [rdx]
   140012ab7:	push   rax
   140012ab8:	or     DWORD PTR [rdi],edx
   140012aba:	(bad)  
   140012abb:	add    BYTE PTR [rdi],dl
   140012abd:	xor    al,0xd
   140012abf:	add    BYTE PTR [rdi],dl
   140012ac1:	jb     0x140012ad6
   140012ac3:	rcl    BYTE PTR [rcx],0x70
   140012ac6:	adc    BYTE PTR [rax+0x64],ah
   140012ac9:	mov    ecx,0x10000
   140012ace:	add    BYTE PTR [rax],al
   140012ad0:	(bad)  
   140012ad1:	mov    bh,0x0
   140012ad3:	add    BYTE PTR [rcx-0x49],bl
   140012ad6:	add    BYTE PTR [rax],al
   140012ad8:	mov    edx,0x590000bb
   140012add:	mov    bh,0x0
   140012adf:	add    BYTE PTR [rcx],dl
   140012ae1:	sbb    BYTE PTR [rip+0x14621800],al        # 0x1546342e7
   140012ae7:	rcl    BYTE PTR [rdx],0x70
   140012aea:	adc    DWORD PTR [rax+0x10],esp
   140012aed:	xor    BYTE PTR [rax],al
   140012aef:	add    BYTE PTR [rcx+rdi*4+0x0],ah
   140012af3:	add    BYTE PTR [rcx],al
   140012af5:	add    BYTE PTR [rax],al
   140012af7:	add    BYTE PTR [rbx-0x43ffff49],bl
   140012afd:	mov    bh,0x0
   140012aff:	add    cl,bh
   140012b01:	mov    ebx,0x0
   140012b06:	add    BYTE PTR [rax],al
   140012b08:	add    DWORD PTR [rcx+rax*1],eax
   140012b0b:	add    BYTE PTR [rdx+rax*2],al
   140012b0e:	add    BYTE PTR [rax],al
   140012b10:	adc    DWORD PTR [rsi],eax
   140012b12:	add    al,BYTE PTR [rax]
   140012b14:	(bad)  
   140012b15:	xor    al,BYTE PTR [rdx]
   140012b17:	xor    BYTE PTR [rcx+rdi*4+0x0],ah
   140012b1b:	add    BYTE PTR [rcx],al
   140012b1d:	add    BYTE PTR [rax],al
   140012b1f:	add    BYTE PTR [rbx-0x48],ah
   140012b22:	add    BYTE PTR [rax],al
   140012b24:	leave  
   140012b25:	mov    eax,0xbc230000
   140012b2a:	add    BYTE PTR [rax],al
   140012b2c:	add    BYTE PTR [rax],al
   140012b2e:	add    BYTE PTR [rax],al
   140012b30:	or     DWORD PTR [rcx+rax*1],eax
   140012b33:	add    BYTE PTR [rdx+rax*2],al
   140012b36:	add    BYTE PTR [rax],al
   140012b38:	fs mov ecx,0x10000
   140012b3e:	add    BYTE PTR [rax],al
   140012b40:	idiv   DWORD PTR [rcx-0x45d60000]
   140012b46:	add    BYTE PTR [rax],al
   140012b48:	rex mov esp,0xba2a0000
   140012b4e:	add    BYTE PTR [rax],al
   140012b50:	add    DWORD PTR [rdx],ecx
   140012b52:	add    al,0x0
   140012b54:	or     dh,BYTE PTR [rax+rcx*1]
   140012b57:	add    BYTE PTR [rdx],cl
   140012b59:	xor    al,BYTE PTR [rsi]
   140012b5b:	jo     0x140012bd5
   140012b5d:	sub    eax,0x1
   140012b62:	add    BYTE PTR [rax],al
   140012b64:	add    BYTE PTR [rax],al
   140012b66:	add    BYTE PTR [rax],al
   140012b68:	in     al,dx
   140012b69:	cmp    DWORD PTR [rcx],eax
   140012b6b:	add    BYTE PTR [rax+0xc1],bh
   140012b71:	sub    al,0x1
	...
   140012b7b:	add    dl,bh
   140012b7d:	cmp    al,0x1
   140012b7f:	add    BYTE PTR [rax-0x40],al
   140012b82:	add    BYTE PTR [rax],al
   140012b84:	jo     0x140012bb2
   140012b86:	add    DWORD PTR [rax],eax
	...
   140012b90:	jp     0x140012bcf
   140012b92:	add    DWORD PTR [rax],eax
   140012b94:	mov    al,0xc0
   140012b96:	add    BYTE PTR [rax],al
   140012b98:	shr    BYTE PTR [rbx],0x1
	...
   140012ba3:	add    BYTE PTR [rdx+0x13f],cl
   140012ba9:	rol    BYTE PTR [rax],0x0
	...
   140012bc0:	pop    rdx
   140012bc1:	(bad)  
   140012bc2:	add    DWORD PTR [rax],eax
   140012bc4:	add    BYTE PTR [rax],al
   140012bc6:	add    BYTE PTR [rax],al
   140012bc8:	rex.R (bad) 
   140012bca:	add    DWORD PTR [rax],eax
   140012bcc:	add    BYTE PTR [rax],al
   140012bce:	add    BYTE PTR [rax],al
   140012bd0:	xor    al,0x3f
   140012bd2:	add    DWORD PTR [rax],eax
   140012bd4:	add    BYTE PTR [rax],al
   140012bd6:	add    BYTE PTR [rax],al
   140012bd8:	sbb    bh,BYTE PTR [rdi]
   140012bda:	add    DWORD PTR [rax],eax
   140012bdc:	add    BYTE PTR [rax],al
   140012bde:	add    BYTE PTR [rax],al
   140012be0:	cld    
   140012be1:	add    DWORD PTR ds:[rax],eax
   140012be4:	add    BYTE PTR [rax],al
   140012be6:	add    BYTE PTR [rax],al
   140012be8:	hlt    
   140012be9:	add    DWORD PTR ds:[rax],eax
   140012bec:	add    BYTE PTR [rax],al
   140012bee:	add    BYTE PTR [rax],al
   140012bf0:	jo     0x140012c31
   140012bf2:	add    DWORD PTR [rax],eax
	...
   140012c00:	clc    
   140012c01:	cmp    DWORD PTR [rcx],eax
   140012c03:	add    BYTE PTR [rax],al
   140012c05:	add    BYTE PTR [rax],al
   140012c07:	add    BYTE PTR [rsi],dh
   140012c09:	cmp    al,BYTE PTR [rcx]
   140012c0b:	add    BYTE PTR [rax],al
   140012c0d:	add    BYTE PTR [rax],al
   140012c0f:	add    BYTE PTR [rdx+0x3a],bh
   140012c12:	add    DWORD PTR [rax],eax
   140012c14:	add    BYTE PTR [rax],al
   140012c16:	add    BYTE PTR [rax],al
   140012c18:	mov    eax,0x13a
   140012c1d:	add    BYTE PTR [rax],al
   140012c1f:	add    dl,bl
   140012c21:	cmp    al,BYTE PTR [rcx]
   140012c23:	add    BYTE PTR [rax],al
   140012c25:	add    BYTE PTR [rax],al
   140012c27:	add    BYTE PTR [rdx],bl
   140012c29:	cmp    eax,DWORD PTR [rcx]
   140012c2b:	add    BYTE PTR [rax],al
   140012c2d:	add    BYTE PTR [rax],al
   140012c2f:	add    BYTE PTR [rdx+0x3b],ah
   140012c32:	add    DWORD PTR [rax],eax
   140012c34:	add    BYTE PTR [rax],al
   140012c36:	add    BYTE PTR [rax],al
   140012c38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012c39:	cmp    eax,DWORD PTR [rcx]
   140012c3b:	add    BYTE PTR [rax],al
   140012c3d:	add    BYTE PTR [rax],al
   140012c3f:	add    al,bh
   140012c41:	cmp    eax,DWORD PTR [rcx]
   140012c43:	add    BYTE PTR [rax],al
   140012c45:	add    BYTE PTR [rax],al
   140012c47:	add    BYTE PTR [rax+0x3c],al
   140012c4a:	add    DWORD PTR [rax],eax
   140012c4c:	add    BYTE PTR [rax],al
   140012c4e:	add    BYTE PTR [rax],al
   140012c50:	jl     0x140012c8e
   140012c52:	add    DWORD PTR [rax],eax
   140012c54:	add    BYTE PTR [rax],al
   140012c56:	add    BYTE PTR [rax],al
   140012c58:	mov    eax,0x13c
   140012c5d:	add    BYTE PTR [rax],al
   140012c5f:	add    BYTE PTR [rsi],dl
   140012c61:	cmp    al,BYTE PTR [rcx]
	...
   140012c6f:	add    al,dh
   140012c71:	cmp    eax,0x1
   140012c76:	add    BYTE PTR [rax],al
   140012c78:	in     al,0x3d
   140012c7a:	add    DWORD PTR [rax],eax
   140012c7c:	add    BYTE PTR [rax],al
   140012c7e:	add    BYTE PTR [rax],al
   140012c80:	fdivr  QWORD PTR [rip+0x1]        # 0x140012c87
   140012c86:	add    BYTE PTR [rax],al
   140012c88:	sar    BYTE PTR [rip+0x1],cl        # 0x140012c8f
   140012c8e:	add    BYTE PTR [rax],al
   140012c90:	retf   0x13d
   140012c93:	add    BYTE PTR [rax],al
   140012c95:	add    BYTE PTR [rax],al
   140012c97:	add    BYTE PTR [rbp+rdi*1+0x1],bh
   140012c9e:	add    BYTE PTR [rax],al
   140012ca0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012ca1:	cmp    eax,0x1
   140012ca6:	add    BYTE PTR [rax],al
   140012ca8:	xchg   esp,eax
   140012ca9:	cmp    eax,0x1
   140012cae:	add    BYTE PTR [rax],al
   140012cb0:	cld    
   140012cb1:	cmp    eax,0x1
   140012cb6:	add    BYTE PTR [rax],al
   140012cb8:	push   0x13d
   140012cbd:	add    BYTE PTR [rax],al
   140012cbf:	add    BYTE PTR [rsi+0x3d],bl
   140012cc2:	add    DWORD PTR [rax],eax
   140012cc4:	add    BYTE PTR [rax],al
   140012cc6:	add    BYTE PTR [rax],al
   140012cc8:	push   rsp
   140012cc9:	cmp    eax,0x1
   140012cce:	add    BYTE PTR [rax],al
   140012cd0:	rex.WR cmp rax,0x1
   140012cd6:	add    BYTE PTR [rax],al
   140012cd8:	ss cmp eax,0x1
   140012cde:	add    BYTE PTR [rax],al
   140012ce0:	sub    bh,BYTE PTR [rip+0x1]        # 0x140012ce7
   140012ce6:	add    BYTE PTR [rax],al
   140012ce8:	and    BYTE PTR [rip+0x1],bh        # 0x140012cef
   140012cee:	add    BYTE PTR [rax],al
   140012cf0:	(bad)  
   140012cf1:	cmp    eax,0x1
   140012cf6:	add    BYTE PTR [rax],al
   140012cf8:	(bad)  
   140012cf9:	cmp    eax,0x1
   140012cfe:	add    BYTE PTR [rax],al
   140012d00:	or     bh,BYTE PTR [rsi]
   140012d02:	add    DWORD PTR [rax],eax
   140012d04:	add    BYTE PTR [rax],al
   140012d06:	add    BYTE PTR [rax],al
   140012d08:	and    BYTE PTR [rsi],bh
   140012d0a:	add    DWORD PTR [rax],eax
   140012d0c:	add    BYTE PTR [rax],al
   140012d0e:	add    BYTE PTR [rax],al
   140012d10:	xor    al,0x3e
   140012d12:	add    DWORD PTR [rax],eax
   140012d14:	add    BYTE PTR [rax],al
   140012d16:	add    BYTE PTR [rax],al
   140012d18:	rex
   140012d19:	add    DWORD PTR ds:[rax],eax
   140012d1c:	add    BYTE PTR [rax],al
   140012d1e:	add    BYTE PTR [rax],al
   140012d20:	rex.WX
   140012d21:	add    DWORD PTR ds:[rax],eax
   140012d24:	add    BYTE PTR [rax],al
   140012d26:	add    BYTE PTR [rax],al
   140012d28:	pop    rsp
   140012d29:	add    DWORD PTR ds:[rax],eax
   140012d2c:	add    BYTE PTR [rax],al
   140012d2e:	add    BYTE PTR [rax],al
   140012d30:	outs   dx,BYTE PTR ds:[rsi]
   140012d31:	add    DWORD PTR ds:[rax],eax
   140012d34:	add    BYTE PTR [rax],al
   140012d36:	add    BYTE PTR [rax],al
   140012d38:	(bad)  
   140012d39:	add    DWORD PTR ds:[rax],eax
   140012d3c:	add    BYTE PTR [rax],al
   140012d3e:	add    BYTE PTR [rax],al
   140012d40:	mov    eax,0x13e
   140012d45:	add    BYTE PTR [rax],al
   140012d47:	add    dl,al
   140012d49:	add    DWORD PTR ds:[rax],eax
   140012d4c:	add    BYTE PTR [rax],al
   140012d4e:	add    BYTE PTR [rax],al
   140012d50:	sar    BYTE PTR [rsi],1
   140012d52:	add    DWORD PTR [rax],eax
   140012d54:	add    BYTE PTR [rax],al
   140012d56:	add    BYTE PTR [rax],al
   140012d58:	xchg   BYTE PTR [rip+0x1],bh        # 0x140012d5f
   140012d5e:	add    BYTE PTR [rax],al
   140012d60:	loop   0x140012da0
   140012d62:	add    DWORD PTR [rax],eax
   140012d64:	add    BYTE PTR [rax],al
   140012d66:	add    BYTE PTR [rax],al
   140012d68:	fdivr  DWORD PTR [rsi]
   140012d6a:	add    DWORD PTR [rax],eax
	...
   140012d78:	or     bh,BYTE PTR [rax]
   140012d7a:	add    DWORD PTR [rax],eax
   140012d7c:	add    BYTE PTR [rax],al
   140012d7e:	add    BYTE PTR [rax],al
   140012d80:	sub    BYTE PTR [rax],bh
   140012d82:	add    DWORD PTR [rax],eax
   140012d84:	add    BYTE PTR [rax],al
   140012d86:	add    BYTE PTR [rax],al
   140012d88:	push   rax
   140012d89:	cmp    BYTE PTR [rcx],al
   140012d8b:	add    BYTE PTR [rax],al
   140012d8d:	add    BYTE PTR [rax],al
   140012d8f:	add    BYTE PTR [rdx+0x38],dh
   140012d92:	add    DWORD PTR [rax],eax
   140012d94:	add    BYTE PTR [rax],al
   140012d96:	add    BYTE PTR [rax],al
   140012d98:	cwde   
   140012d99:	cmp    BYTE PTR [rcx],al
   140012d9b:	add    BYTE PTR [rax],al
   140012d9d:	add    BYTE PTR [rax],al
   140012d9f:	add    al,dl
   140012da1:	cmp    BYTE PTR [rcx],al
   140012da3:	add    BYTE PTR [rax],al
   140012da5:	add    BYTE PTR [rax],al
   140012da7:	add    ah,ch
   140012da9:	cmp    BYTE PTR [rcx],al
   140012dab:	add    BYTE PTR [rax],al
   140012dad:	add    BYTE PTR [rax],al
   140012daf:	add    BYTE PTR [rsi],cl
   140012db1:	cmp    DWORD PTR [rcx],eax
   140012db3:	add    BYTE PTR [rax],al
   140012db5:	add    BYTE PTR [rax],al
   140012db7:	add    dh,bl
   140012db9:	(bad)  
   140012dba:	add    DWORD PTR [rax],eax
   140012dbc:	add    BYTE PTR [rax],al
   140012dbe:	add    BYTE PTR [rax],al
   140012dc0:	push   rsi
   140012dc1:	cmp    DWORD PTR [rcx],eax
   140012dc3:	add    BYTE PTR [rax],al
   140012dc5:	add    BYTE PTR [rax],al
   140012dc7:	add    BYTE PTR [rdx+0x139],bl
   140012dcd:	add    BYTE PTR [rax],al
   140012dcf:	add    BYTE PTR [rcx+rdi*1+0x1],dh
   140012dd6:	add    BYTE PTR [rax],al
   140012dd8:	(bad)  
   140012dd9:	cmp    DWORD PTR [rcx],eax
   140012ddb:	add    BYTE PTR [rax],al
   140012ddd:	add    BYTE PTR [rax],al
   140012ddf:	add    ah,bl
   140012de1:	cmp    DWORD PTR [rcx],eax
   140012de3:	add    BYTE PTR [rax],al
   140012de5:	add    BYTE PTR [rax],al
   140012de7:	add    BYTE PTR [rax+0x137],bh
   140012ded:	add    BYTE PTR [rax],al
   140012def:	add    BYTE PTR [rdx+0x137],dl
   140012df5:	add    BYTE PTR [rax],al
   140012df7:	add    BYTE PTR [rax+0x37],dh
   140012dfa:	add    DWORD PTR [rax],eax
   140012dfc:	add    BYTE PTR [rax],al
   140012dfe:	add    BYTE PTR [rax],al
   140012e00:	xor    al,0x37
   140012e02:	add    DWORD PTR [rax],eax
   140012e04:	add    BYTE PTR [rax],al
   140012e06:	add    BYTE PTR [rax],al
   140012e08:	or     al,0x37
   140012e0a:	add    DWORD PTR [rax],eax
   140012e0c:	add    BYTE PTR [rax],al
   140012e0e:	add    BYTE PTR [rax],al
   140012e10:	repnz add DWORD PTR ss:[rax],eax
   140012e14:	add    BYTE PTR [rax],al
   140012e16:	add    BYTE PTR [rax],al
   140012e18:	enter  0x136,0x0
   140012e1c:	add    BYTE PTR [rax],al
   140012e1e:	add    BYTE PTR [rax],al
   140012e20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012e21:	add    DWORD PTR ss:[rax],eax
   140012e24:	add    BYTE PTR [rax],al
   140012e26:	add    BYTE PTR [rax],al
   140012e28:	xor    BYTE PTR [rsi],0x1
   140012e2b:	add    BYTE PTR [rax],al
   140012e2d:	add    BYTE PTR [rax],al
   140012e2f:	add    BYTE PTR [rsi+rsi*1+0x1],dl
   140012e33:	add    BYTE PTR [rax],al
   140012e35:	add    BYTE PTR [rax],al
   140012e37:	add    BYTE PTR [rax],ah
   140012e39:	add    DWORD PTR ss:[rax],eax
   140012e3c:	add    BYTE PTR [rax],al
   140012e3e:	add    BYTE PTR [rax],al
   140012e40:	fidiv  DWORD PTR [rip+0x1]        # 0x140012e47
   140012e46:	add    BYTE PTR [rax],al
   140012e48:	mov    edx,0x135
   140012e4d:	add    BYTE PTR [rax],al
   140012e4f:	add    BYTE PTR [rbp+rsi*1+0x1],bh
   140012e53:	add    BYTE PTR [rax],al
   140012e55:	add    BYTE PTR [rax],al
   140012e57:	add    BYTE PTR [rbp+rsi*1+0x1],bl
   140012e5b:	add    BYTE PTR [rax],al
   140012e5d:	add    BYTE PTR [rax],al
   140012e5f:	add    BYTE PTR [rsi],ch
   140012e61:	xor    eax,0x1
   140012e66:	add    BYTE PTR [rax],al
   140012e68:	or     dh,BYTE PTR [rip+0x1]        # 0x140012e6f
   140012e6e:	add    BYTE PTR [rax],al
   140012e70:	lock xor al,0x1
   140012e73:	add    BYTE PTR [rax],al
   140012e75:	add    BYTE PTR [rax],al
   140012e77:	add    dh,cl
   140012e79:	xor    al,0x1
   140012e7b:	add    BYTE PTR [rax],al
   140012e7d:	add    BYTE PTR [rax],al
   140012e7f:	add    BYTE PTR [rax+0x134],dl
   140012e85:	add    BYTE PTR [rax],al
   140012e87:	add    BYTE PTR [rsp+rsi*1+0x1],bh
   140012e8b:	add    BYTE PTR [rax],al
   140012e8d:	add    BYTE PTR [rax],al
   140012e8f:	add    BYTE PTR [rax+0x34],dl
   140012e92:	add    DWORD PTR [rax],eax
   140012e94:	add    BYTE PTR [rax],al
   140012e96:	add    BYTE PTR [rax],al
   140012e98:	and    BYTE PTR [rcx+rax*1],dh
   140012e9b:	add    BYTE PTR [rax],al
   140012e9d:	add    BYTE PTR [rax],al
   140012e9f:	add    BYTE PTR [rdx],al
   140012ea1:	xor    al,0x1
   140012ea3:	add    BYTE PTR [rax],al
   140012ea5:	add    BYTE PTR [rax],al
   140012ea7:	add    al,bl
   140012ea9:	xor    eax,DWORD PTR [rcx]
   140012eab:	add    BYTE PTR [rax],al
   140012ead:	add    BYTE PTR [rax],al
   140012eaf:	add    BYTE PTR [rdx+0x133],ch
   140012eb5:	add    BYTE PTR [rax],al
   140012eb7:	add    BYTE PTR [rax+0x33],bh
   140012eba:	add    DWORD PTR [rax],eax
   140012ebc:	add    BYTE PTR [rax],al
   140012ebe:	add    BYTE PTR [rax],al
   140012ec0:	push   rax
   140012ec1:	xor    eax,DWORD PTR [rcx]
   140012ec3:	add    BYTE PTR [rax],al
   140012ec5:	add    BYTE PTR [rax],al
   140012ec7:	add    BYTE PTR [rax],ch
   140012ec9:	xor    eax,DWORD PTR [rcx]
   140012ecb:	add    BYTE PTR [rax],al
   140012ecd:	add    BYTE PTR [rax],al
   140012ecf:	add    BYTE PTR [rbx+rsi*1],al
   140012ed2:	add    DWORD PTR [rax],eax
   140012ed4:	add    BYTE PTR [rax],al
   140012ed6:	add    BYTE PTR [rax],al
   140012ed8:	fidiv  DWORD PTR [rdx]
   140012eda:	add    DWORD PTR [rax],eax
   140012edc:	add    BYTE PTR [rax],al
   140012ede:	add    BYTE PTR [rax],al
   140012ee0:	mov    BYTE PTR [rdx],dh
   140012ee2:	add    DWORD PTR [rax],eax
   140012ee4:	add    BYTE PTR [rax],al
   140012ee6:	add    BYTE PTR [rax],al
   140012ee8:	xor    al,BYTE PTR fs:[rcx]
   140012eeb:	add    BYTE PTR [rax],al
   140012eed:	add    BYTE PTR [rax],al
   140012eef:	add    BYTE PTR [rdx+0x32],al
   140012ef2:	add    DWORD PTR [rax],eax
   140012ef4:	add    BYTE PTR [rax],al
   140012ef6:	add    BYTE PTR [rax],al
   140012ef8:	sbb    al,0x32
   140012efa:	add    DWORD PTR [rax],eax
   140012efc:	add    BYTE PTR [rax],al
   140012efe:	add    BYTE PTR [rax],al
   140012f00:	in     al,dx
   140012f01:	xor    DWORD PTR [rcx],eax
   140012f03:	add    BYTE PTR [rax],al
   140012f05:	add    BYTE PTR [rax],al
   140012f07:	add    ah,cl
   140012f09:	xor    DWORD PTR [rcx],eax
   140012f0b:	add    BYTE PTR [rax],al
   140012f0d:	add    BYTE PTR [rax],al
   140012f0f:	add    BYTE PTR [rcx+rsi*1+0x1],ah
   140012f16:	add    BYTE PTR [rax],al
   140012f18:	jle    0x140012f4b
   140012f1a:	add    DWORD PTR [rax],eax
   140012f1c:	add    BYTE PTR [rax],al
   140012f1e:	add    BYTE PTR [rax],al
   140012f20:	(bad)  
   140012f21:	xor    DWORD PTR [rcx],eax
   140012f23:	add    BYTE PTR [rax],al
   140012f25:	add    BYTE PTR [rax],al
   140012f27:	add    BYTE PTR [rcx+rsi*1],bh
   140012f2a:	add    DWORD PTR [rax],eax
   140012f2c:	add    BYTE PTR [rax],al
   140012f2e:	add    BYTE PTR [rax],al
   140012f30:	sbb    BYTE PTR [rcx],dh
   140012f32:	add    DWORD PTR [rax],eax
   140012f34:	add    BYTE PTR [rax],al
   140012f36:	add    BYTE PTR [rax],al
   140012f38:	div    BYTE PTR [rax]
   140012f3a:	add    DWORD PTR [rax],eax
   140012f3c:	add    BYTE PTR [rax],al
   140012f3e:	add    BYTE PTR [rax],al
   140012f40:	shl    BYTE PTR [rax],1
   140012f42:	add    DWORD PTR [rax],eax
   140012f44:	add    BYTE PTR [rax],al
   140012f46:	add    BYTE PTR [rax],al
   140012f48:	test   al,0x30
   140012f4a:	add    DWORD PTR [rax],eax
   140012f4c:	add    BYTE PTR [rax],al
   140012f4e:	add    BYTE PTR [rax],al
   140012f50:	(bad)  
   140012f51:	xor    BYTE PTR [rcx],al
   140012f53:	add    BYTE PTR [rax],al
   140012f55:	add    BYTE PTR [rax],al
   140012f57:	add    BYTE PTR [rax+0x130],cl
   140012f5d:	add    BYTE PTR [rax],al
   140012f5f:	add    BYTE PTR [rsi],bh
   140012f61:	xor    BYTE PTR [rcx],al
   140012f63:	add    BYTE PTR [rax],al
   140012f65:	add    BYTE PTR [rax],al
   140012f67:	add    BYTE PTR [rax+rsi*1],ah
   140012f6a:	add    DWORD PTR [rax],eax
   140012f6c:	add    BYTE PTR [rax],al
   140012f6e:	add    BYTE PTR [rax],al
   140012f70:	or     al,0x30
   140012f72:	add    DWORD PTR [rax],eax
   140012f74:	add    BYTE PTR [rax],al
   140012f76:	add    BYTE PTR [rax],al
   140012f78:	imul   BYTE PTR [rdi]
   140012f7a:	add    DWORD PTR [rax],eax
   140012f7c:	add    BYTE PTR [rax],al
   140012f7e:	add    BYTE PTR [rax],al
   140012f80:	fisubr DWORD PTR [rdi]
   140012f82:	add    DWORD PTR [rax],eax
   140012f84:	add    BYTE PTR [rax],al
   140012f86:	add    BYTE PTR [rax],al
   140012f88:	(bad)  
   140012f89:	(bad)  
   140012f8a:	add    DWORD PTR [rax],eax
   140012f8c:	add    BYTE PTR [rax],al
   140012f8e:	add    BYTE PTR [rax],al
   140012f90:	cmp    al,0x39
   140012f92:	add    DWORD PTR [rax],eax
   140012f94:	add    BYTE PTR [rax],al
   140012f96:	add    BYTE PTR [rax],al
   140012f98:	test   al,0x2f
   140012f9a:	add    DWORD PTR [rax],eax
	...
   140012fa8:	(bad)  
   140012fa9:	add    al,0x3f
   140012fab:	(bad)  
   140012fac:	cmp    BYTE PTR [rax+0x59],al
   140012faf:	pop    r15
   140012fb1:	rex.WRX
   140012fb2:	rex.B
   140012fb3:	rex.RB
   140012fb4:	rex.X push rsi
   140012fb6:	push   rcx
   140012fb7:	push   rbx
   140012fb8:	je     0x14001302c
   140012fba:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140012fc1:	pop    rdx
   140012fc2:	add    BYTE PTR [rax],al
   140012fc4:	xchg   edi,eax
   140012fc5:	add    DWORD PTR [rdi],edi
   140012fc7:	(bad)  
   140012fc8:	xor    BYTE PTR [rcx+0x53],dl
   140012fcb:	je     0x14001303f
   140012fcd:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140012fd4:	rex.B
   140012fd5:	rex.B
   140012fd6:	rex pop rax
   140012fd8:	pop    rdx
   140012fd9:	add    BYTE PTR [rsi+0x303f3f01],cl
   140012fdf:	push   rcx
   140012fe0:	push   rbx
   140012fe1:	je     0x140013055
   140012fe3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140012fea:	rex.B
   140012feb:	rex.B
   140012fec:	rex
   140012fed:	rex.B
   140012fee:	rex.RB
   140012fef:	rex.X push rsi
   140012ff1:	xor    BYTE PTR [rax+0x40],al
   140012ff4:	pop    rdx
   140012ff5:	add    al,dl
   140012ff7:	add    bh,BYTE PTR [rdi]
   140012ff9:	(bad)  
   140012ffa:	xor    DWORD PTR [rcx+0x53],edx
   140012ffd:	je     0x140013071
   140012fff:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013006:	rex.B
   140013007:	rex.B
   140013008:	rex pop rax
   14001300a:	pop    rdx
   14001300b:	add    BYTE PTR [rbx+0x313f3f02],cl
   140013011:	push   rcx
   140013012:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14001301b:	rex push rcx
   14001301d:	rex.RB
   14001301e:	rex.B
   14001301f:	rex.B
   140013020:	rex pop rax
   140013022:	pop    rdx
   140013023:	add    BYTE PTR [rip+0x6c633f08],cl        # 0x1ac646f31
   140013029:	gs (bad) 
   14001302b:	jb     0x14001306d
   14001302d:	push   rcx
   14001302e:	push   rbx
   14001302f:	je     0x1400130a3
   140013031:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013038:	rex.B
   140013039:	pop    r8
   14001303b:	pop    rax
   14001303c:	pop    rdx
   14001303d:	add    BYTE PTR [rsi+0x3],bh
   140013040:	(bad)  
   140013041:	(bad)  
   140013042:	xor    al,0x51
   140013044:	push   rbx
   140013045:	je     0x1400130b9
   140013047:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001304e:	rex.B
   14001304f:	rex.B
   140013050:	rex.B
   140013051:	rex.RB
   140013052:	push   r14
   140013054:	xor    BYTE PTR [rax+0x41],al
   140013057:	rex.RB
   140013058:	rex.X push rsi
   14001305a:	xor    BYTE PTR [rax+0x40],al
   14001305d:	pop    rdx
   14001305e:	add    BYTE PTR [rax],al
   140013060:	(bad)  
   140013061:	add    al,0x3f
   140013063:	(bad)  
   140013064:	cmp    BYTE PTR [rcx+0x53],dl
   140013067:	je     0x1400130db
   140013069:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013070:	rex.X
   140013071:	pop    r15
   140013073:	rex.WRX push rsi
   140013075:	push   rcx
   140013076:	rex.WR (bad) 
   140013078:	je     0x1400130e3
   14001307a:	outs   dx,BYTE PTR ds:[rsi]
   14001307b:	xor    DWORD PTR [rbx+0x74],edx
   14001307e:	jb     0x1400130e9
   140013080:	outs   dx,BYTE PTR ds:[rsi]
   140013081:	addr32 rex
   140013083:	rex
   140013084:	rex pop rdx
   140013086:	add    BYTE PTR [rax],al
   140013088:	(bad)  
   140013089:	sbb    BYTE PTR [rdi],bh
   14001308b:	je     0x1400130fc
   14001308d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001308f:	ja     0x1400130f6
   140013091:	jb     0x1400130d3
   140013093:	push   rcx
   140013094:	push   rbx
   140013095:	je     0x140013109
   140013097:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001309e:	rex.X
   14001309f:	rex.B (bad) 
   1400130a1:	push   r14
   1400130a3:	xor    DWORD PTR [rax+0x58],eax
   1400130a6:	pop    rdx
   1400130a7:	add    al,ah
   1400130a9:	(bad)  
   1400130aa:	(bad)  
   1400130ab:	jae    0x140013122
   1400130ad:	data16 imul di,WORD PTR [rax+0x40],0x4651
   1400130b4:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   1400130bc:	rex push rcx
   1400130be:	rex.RB
   1400130bf:	rex.X
   1400130c0:	rex.B (bad) 
   1400130c2:	push   r14
   1400130c4:	push   rcx
   1400130c5:	push   rbx
   1400130c6:	je     0x14001313a
   1400130c8:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400130cf:	add    BYTE PTR [rdi+0x303f3f00],dh
   1400130d5:	push   rcx
   1400130d6:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   1400130df:	rex push rcx
   1400130e1:	rex.RB
   1400130e2:	rex.B
   1400130e3:	rex.B
   1400130e4:	rex
   1400130e5:	rex.B
   1400130e6:	rex.RB
   1400130e7:	rex.X push rsi
   1400130e9:	push   rcx
   1400130ea:	push   rbx
   1400130eb:	je     0x14001315f
   1400130ed:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400130f4:	add    BYTE PTR [rax],al
   1400130f6:	push   rdi
   1400130f7:	add    BYTE PTR [rdi],bh
   1400130f9:	(bad)  
   1400130fa:	xor    BYTE PTR [rcx+0x43],dl
   1400130fd:	push   0x40407261
   140013102:	push   rcx
   140013103:	rex.RB
   140013104:	rex.B
   140013105:	rex.B
   140013106:	rex push rbp
   140013108:	push   rcx
   140013109:	rex.WR (bad) 
   14001310b:	je     0x140013176
   14001310d:	outs   dx,BYTE PTR ds:[rsi]
   14001310e:	xor    DWORD PTR [rbx+0x68],eax
   140013111:	(bad)  
   140013112:	jb     0x140013154
   140013114:	rex
   140013115:	rex pop rdx
   140013117:	add    BYTE PTR [rsi+rcx*1],bl
   14001311a:	(bad)  
   14001311b:	imul   esi,DWORD PTR [rbx+0x4c],0x65747465
   140013122:	jb     0x140013173
   140013124:	jb     0x140013174
   140013126:	jne    0x140013195
   140013128:	(bad)  
   140013129:	gs jb  0x14001316c
   14001312c:	push   rcx
   14001312d:	rex.XB push 0x40407261
   140013133:	push   rbx
   140013134:	pop    r15
   140013136:	rex.WRX
   140013137:	rex.WB
   140013138:	rex pop rdx
   14001313a:	add    BYTE PTR [rax],al
   14001313c:	push   rbp
   14001313d:	add    eax,0x51593f3f
   140013142:	push   rbx
   140013143:	je     0x1400131b7
   140013145:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001314c:	rex.B
   14001314d:	rex.B
   14001314e:	rex.B
   14001314f:	rex.RB
   140013150:	push   r14
   140013152:	xor    BYTE PTR [rax+0x56],al
   140013155:	push   rcx
   140013156:	rex.XB push 0x40407261
   14001315c:	rex pop rdx
   14001315e:	add    BYTE PTR [rax],al
   140013160:	sbb    edx,DWORD PTR [rax]
   140013162:	(bad)  
   140013163:	ins    DWORD PTR es:[rdi],dx
   140013164:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   14001316c:	outs   dx,BYTE PTR ds:[rsi]
   14001316d:	addr32 rex
   14001316f:	rex push rcx
   140013171:	rex.RB
   140013172:	rex.X
   140013173:	rex.B (bad) 
   140013175:	push   r14
   140013177:	xor    DWORD PTR [rax+0x48],eax
   14001317a:	rex.W
   14001317b:	rex pop rdx
   14001317d:	add    al,cl
   14001317f:	(bad)  
   140013180:	(bad)  
   140013181:	(bad)  
   140013182:	jo     0x1400131f4
   140013184:	outs   dx,BYTE PTR gs:[rsi]
   140013186:	fs rex push rcx
   140013189:	push   rbx
   14001318a:	je     0x1400131fe
   14001318c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013193:	rex.B
   140013194:	rex.B
   140013195:	rex.B
   140013196:	rex.RB
   140013197:	push   r14
   140013199:	xor    DWORD PTR [rax+0x41],eax
   14001319c:	rex.RB
   14001319d:	rex.X push rsi
   14001319f:	xor    DWORD PTR [rax+0x40],eax
   1400131a2:	pop    rdx
   1400131a3:	add    ch,cl
   1400131a5:	(bad)  
   1400131a6:	(bad)  
   1400131a7:	(bad)  
   1400131a8:	jo     0x14001321a
   1400131aa:	outs   dx,BYTE PTR gs:[rsi]
   1400131ac:	fs rex push rcx
   1400131af:	push   rbx
   1400131b0:	je     0x140013224
   1400131b2:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400131b9:	rex.B
   1400131ba:	rex.B
   1400131bb:	rex.B
   1400131bc:	rex.RB
   1400131bd:	push   r14
   1400131bf:	xor    DWORD PTR [rax+0x56],eax
   1400131c2:	push   rcx
   1400131c3:	rex.XB push 0x40407261
   1400131c9:	rex pop rdx
   1400131cb:	add    al,al
   1400131cd:	adc    BYTE PTR [rdi],bh
   1400131cf:	outs   dx,BYTE PTR ds:[rsi]
   1400131d0:	jne    0x14001323f
   1400131d2:	(bad)  
   1400131d3:	gs jb  0x140013216
   1400131d6:	push   rcx
   1400131d7:	push   rbx
   1400131d8:	je     0x14001324c
   1400131da:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   1400131e1:	(bad)  
   1400131e2:	push   r14
   1400131e4:	xor    DWORD PTR [rax+0x48],eax
   1400131e7:	rex.W
   1400131e8:	rex pop rdx
   1400131ea:	add    BYTE PTR [rax],al
   1400131ec:	(bad)  
   1400131ed:	(bad)  
   1400131ee:	(bad)  
   1400131ef:	(bad)  
   1400131f0:	jo     0x140013262
   1400131f2:	outs   dx,BYTE PTR gs:[rsi]
   1400131f4:	fs rex push rcx
   1400131f7:	push   rbx
   1400131f8:	je     0x14001326c
   1400131fa:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013201:	rex.B
   140013202:	rex.B
   140013203:	rex.B
   140013204:	rex.RB
   140013205:	push   r14
   140013207:	xor    DWORD PTR [rax+0x56],eax
   14001320a:	push   rcx
   14001320b:	rex.WR (bad) 
   14001320d:	je     0x140013278
   14001320f:	outs   dx,BYTE PTR ds:[rsi]
   140013210:	xor    DWORD PTR [rbx+0x74],edx
   140013213:	jb     0x14001327e
   140013215:	outs   dx,BYTE PTR ds:[rsi]
   140013216:	addr32 rex
   140013218:	rex
   140013219:	rex pop rdx
   14001321b:	add    cl,dl
   14001321d:	(bad)  
   14001321e:	(bad)  
   14001321f:	jae    0x140013289
   140013221:	(bad)  
   140013222:	jb     0x140013289
   140013224:	fs pop rdi
   140013226:	outs   dx,BYTE PTR ds:[rsi]
   140013227:	jne    0x140013295
   140013229:	ins    BYTE PTR es:[rdi],dx
   14001322a:	rex push rcx
   14001322c:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140013234:	rex
   140013235:	xor    dl,BYTE PTR [rbp+0x44]
   140013239:	(bad)  
   14001323a:	je     0x14001329d
   14001323c:	rex xor DWORD PTR [rax+0x42],eax
   140013240:	add    BYTE PTR [rax],al
   140013242:	out    0xa,al
   140013244:	(bad)  
   140013245:	outs   dx,BYTE PTR gs:[rsi]
   140013247:	fs rex push rcx
   14001324a:	push   rbx
   14001324b:	je     0x1400132bf
   14001324d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013254:	rex.X
   140013255:	push   r8
   140013257:	rex.RB
   140013258:	rex.X push rsi
   14001325a:	push   rcx
   14001325b:	rex.XB push 0x40407261
   140013261:	pop    rax
   140013262:	pop    rdx
   140013263:	add    BYTE PTR [rbp+0x7],al
   140013266:	(bad)  
   140013267:	(bad)  
   140013268:	imul   ebp,DWORD PTR gs:[esi+0x40],0x72745351
   140013271:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013278:	rex.X
   140013279:	push   r8
   14001327b:	rex.RB
   14001327c:	rex.X push rsi
   14001327e:	push   rcx
   14001327f:	rex.XB push 0x40407261
   140013285:	pop    rax
   140013286:	pop    rdx
   140013287:	add    BYTE PTR [rdi+0x6c613f06],ah
   14001328d:	ins    BYTE PTR es:[rdi],dx
   14001328e:	outs   dx,DWORD PTR ds:[rsi]
   14001328f:	movsxd esp,DWORD PTR [rcx+0x74]
   140013292:	gs rex push rcx
   140013295:	rex.B jb 0x14001330a
   140013298:	(bad)  
   140013299:	jns    0x1400132df
   14001329b:	(bad)  
   14001329c:	je     0x1400132ff
   14001329e:	rex
   14001329f:	rex push rbx
   1400132a1:	push   r8
   1400132a3:	rex.RB
   1400132a4:	push   r13
   1400132a6:	xor    DWORD PTR [rax+0x5f],eax
   1400132a9:	rex.WXB xor BYTE PTR [r8],sil
   1400132ac:	push   rsi
   1400132ad:	(bad)  
   1400132ae:	and    al,0x51
   1400132b0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400132b2:	(bad)  
   1400132b3:	addr32 jae 0x1400132f6
   1400132b6:	push   rdi
   1400132b7:	xor    al,0x41
   1400132b9:	ins    BYTE PTR es:[rdi],dx
   1400132ba:	ins    BYTE PTR es:[rdi],dx
   1400132bb:	outs   dx,DWORD PTR ds:[rsi]
   1400132bc:	movsxd esp,DWORD PTR [rcx+0x74]
   1400132bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   1400132c6:	outs   dx,DWORD PTR ds:[rsi]
   1400132c7:	outs   dx,BYTE PTR ds:[rsi]
   1400132c8:	rex push rcx
   1400132ca:	rex.B jb 0x14001333f
   1400132cd:	(bad)  
   1400132ce:	jns    0x140013314
   1400132d0:	(bad)  
   1400132d1:	je     0x140013334
   1400132d3:	rex
   1400132d4:	rex
   1400132d5:	rex
   1400132d6:	rex
   1400132d7:	rex pop rdx
   1400132d9:	add    BYTE PTR [rax],dl
   1400132db:	or     bh,BYTE PTR [rdi]
   1400132dd:	fs gs (bad) 
   1400132e0:	ins    BYTE PTR es:[rdi],dx
   1400132e1:	ins    BYTE PTR es:[rdi],dx
   1400132e2:	outs   dx,DWORD PTR ds:[rsi]
   1400132e3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400132e6:	gs rex push rcx
   1400132e9:	rex.B jb 0x14001335e
   1400132ec:	(bad)  
   1400132ed:	jns    0x140013333
   1400132ef:	(bad)  
   1400132f0:	je     0x140013353
   1400132f2:	rex
   1400132f3:	rex push rbx
   1400132f5:	pop    r8
   1400132f7:	push   rax
   1400132f8:	rex.RB
   1400132f9:	push   r13
   1400132fb:	xor    DWORD PTR [rax+0x5f],eax
   1400132fe:	rex.WXB xor QWORD PTR [r8+0x5a],rax
   140013302:	add    BYTE PTR [rax],al
   140013304:	(bad)  
   140013305:	(bad)  
   140013306:	(bad)  
   140013307:	jae    0x140013371
   140013309:	(bad)  
   14001330a:	jb     0x140013371
   14001330c:	fs pop rdi
   14001330e:	outs   dx,BYTE PTR ds:[rsi]
   14001330f:	jne    0x14001337d
   140013311:	ins    BYTE PTR es:[rdi],dx
   140013312:	rex push rcx
   140013314:	rex.B jb 0x140013389
   140013317:	(bad)  
   140013318:	jns    0x14001335e
   14001331a:	(bad)  
   14001331b:	je     0x14001337e
   14001331d:	rex
   14001331e:	xor    dl,BYTE PTR [rcx+0x42]
   140013322:	push   rbp
   140013323:	xor    DWORD PTR [rax+0x42],eax
   140013326:	add    BYTE PTR [rax],al
   140013328:	mov    DWORD PTR [rdx],ecx
   14001332a:	(bad)  
   14001332b:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   140013333:	push   rcx
   140013334:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14001333c:	rex
   14001333d:	rex push rbx
   14001333f:	pop    r8
   140013341:	push   rax
   140013342:	rex.RB
   140013343:	push   r13
   140013345:	rex.R (bad) 
   140013347:	je     0x1400133aa
   140013349:	rex xor DWORD PTR [rax+0x40],eax
   14001334d:	pop    rdx
   14001334e:	add    BYTE PTR [rax],al
   140013350:	push   rbx
   140013351:	or     bh,BYTE PTR [rdi]
   140013353:	fs gs je 0x1400133b8
   140013357:	movsxd ebp,DWORD PTR [rax+0x40]
   14001335a:	push   rcx
   14001335b:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140013363:	rex
   140013364:	rex push rcx
   140013366:	rex.RB
   140013367:	rex.B
   140013368:	push   r8
   14001336a:	rex.RB
   14001336b:	push   r13
   14001336d:	rex.R (bad) 
   14001336f:	je     0x1400133d2
   140013371:	rex xor DWORD PTR [rax+0x48],eax
   140013375:	rex pop rdx
   140013377:	add    BYTE PTR [rbx+0xa],bl
   14001337a:	(bad)  
   14001337b:	fs gs je 0x1400133e0
   14001337f:	movsxd ebp,DWORD PTR [rax+0x5f]
   140013382:	addr32 jb 0x1400133f4
   140013385:	ja     0x1400133c7
   140013387:	push   rcx
   140013388:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140013390:	rex
   140013391:	rex push rcx
   140013393:	rex.RB
   140013394:	rex.B
   140013395:	push   r8
   140013397:	rex.RB
   140013398:	push   r13
   14001339a:	rex.R (bad) 
   14001339c:	je     0x1400133ff
   14001339e:	rex xor DWORD PTR [rax+0x50],eax
   1400133a2:	rex.RB
   1400133a3:	rex.B
   1400133a4:	rex.W
   1400133a5:	rex.W
   1400133a6:	rex pop rdx
   1400133a8:	add    BYTE PTR [rax],al
   1400133aa:	out    dx,eax
   1400133ab:	sbb    bh,BYTE PTR [rdi]
   1400133ad:	ja     0x140013421
   1400133af:	imul   esi,DWORD PTR [rbp+riz*2+0x40],0x444f4951
   1400133b7:	gs jbe 0x140013423
   1400133ba:	movsxd esp,DWORD PTR [rbp+0x40]
   1400133bd:	rex push rcx
   1400133bf:	rex.RB
   1400133c0:	rex.B
   1400133c1:	pop    r15
   1400133c3:	rex.WX
   1400133c4:	rex.B
   1400133c5:	rex.RB
   1400133c6:	rex.X push rsi
   1400133c8:	push   rcx
   1400133c9:	rex.X jns 0x140013440
   1400133cc:	gs rex.B jb 0x140013442
   1400133d0:	(bad)  
   1400133d1:	jns    0x140013413
   1400133d3:	rex
   1400133d4:	rex pop rdx
   1400133d6:	add    BYTE PTR [rax],al
   1400133d8:	rex.WRXB sbb QWORD PTR [r15],r15
   1400133db:	je     0x14001344c
   1400133dd:	push   rbp
   1400133de:	je     0x140013446
   1400133e0:	cmp    BYTE PTR [rax+0x51],al
   1400133e3:	push   rbx
   1400133e4:	je     0x140013458
   1400133e6:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400133ed:	rex.X
   1400133ee:	rex.B (bad) 
   1400133f0:	push   r14
   1400133f2:	push   rcx
   1400133f3:	rex.X jns 0x14001346a
   1400133f6:	gs rex.B jb 0x14001346c
   1400133fa:	(bad)  
   1400133fb:	jns    0x14001343d
   1400133fd:	rex pop rax
   1400133ff:	pop    rdx
   140013400:	add    BYTE PTR [rax],al
   140013402:	and    eax,0x6c633f08
   140013407:	outs   dx,DWORD PTR ds:[rsi]
   140013408:	jae    0x14001346f
   14001340a:	rex push rcx
   14001340c:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   140013415:	gs rex
   140013417:	rex push rbp
   140013419:	rex.RB
   14001341a:	rex.B
   14001341b:	pop    r8
   14001341d:	pop    rax
   14001341e:	pop    rdx
   14001341f:	add    BYTE PTR [rdi+0xc],dl
   140013422:	(bad)  
   140013423:	data16 jb 0x140013495
   140013426:	ins    DWORD PTR es:[rdi],dx
   140013427:	push   rbp
   140013428:	je     0x140013490
   14001342a:	cmp    BYTE PTR [rax+0x51],al
   14001342d:	push   rbx
   14001342e:	je     0x1400134a2
   140013430:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140013437:	(bad)  
   140013438:	push   r14
   14001343a:	xor    DWORD PTR [rax+0x41],eax
   14001343d:	rex.RB
   14001343e:	rex.X push rsi
   140013440:	push   rcx
   140013441:	rex.X jns 0x1400134b8
   140013444:	gs rex.B jb 0x1400134ba
   140013448:	(bad)  
   140013449:	jns    0x14001348b
   14001344b:	rex
   14001344c:	rex pop rdx
   14001344e:	add    BYTE PTR [rax],al
   140013450:	adc    r15,QWORD PTR [rdi]
   140013453:	jb     0x1400134ba
   140013455:	(bad)  
   140013456:	fs rex.B ins BYTE PTR es:[rdi],dx
   140013459:	ins    BYTE PTR es:[rdi],dx
   14001345a:	rex push rcx
   14001345c:	rex.WB
   14001345d:	rex.WRXB
   14001345e:	rex.R
   14001345f:	gs jbe 0x1400134cb
   140013462:	movsxd esp,DWORD PTR [rbp+0x40]
   140013465:	rex push rcx
   140013467:	rex.RB
   140013468:	rex.B
   140013469:	rex.B (bad) 
   14001346b:	push   r14
   14001346d:	push   rcx
   14001346e:	rex.X jns 0x1400134e5
   140013471:	gs rex.B jb 0x1400134e7
   140013475:	(bad)  
   140013476:	jns    0x1400134b8
   140013478:	rex pop rax
   14001347a:	pop    rdx
   14001347b:	add    BYTE PTR [rcx+0x313f3f02],cl
   140013481:	push   rcx
   140013482:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14001348b:	rex.B
   14001348c:	rex pop rax
   14001348e:	pop    rdx
   14001348f:	add    dl,ch
   140013491:	adc    BYTE PTR [rdi],bh
   140013493:	outs   dx,DWORD PTR ds:[rsi]
   140013494:	jo     0x1400134fb
   140013496:	outs   dx,BYTE PTR ds:[rsi]
   140013497:	rex push rcx
   140013499:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   1400134a2:	pop    r15
   1400134a4:	rex.WRX push rsi
   1400134a6:	(bad)  
   1400134a7:	and    al,0x51
   1400134a9:	rex.RX ins BYTE PTR es:[rdi],dx
   1400134ab:	(bad)  
   1400134ac:	addr32 jae 0x1400134ef
   1400134af:	push   rdi
   1400134b0:	xor    al,0x4f
   1400134b2:	jo     0x140013519
   1400134b4:	outs   dx,BYTE PTR ds:[rsi]
   1400134b5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400134b7:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   1400134bb:	(bad)  
   1400134bc:	addr32 rex push rcx
   1400134bf:	rex.WB
   1400134c0:	rex.WRXB
   1400134c1:	rex.R
   1400134c2:	gs jbe 0x14001352e
   1400134c5:	movsxd esp,DWORD PTR [rbp+0x40]
   1400134c8:	rex
   1400134c9:	rex
   1400134ca:	rex
   1400134cb:	rex pop rdx
   1400134cd:	add    BYTE PTR [rbp+0x303f3f00],ch
   1400134d3:	push   rcx
   1400134d4:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   1400134dd:	rex.B
   1400134de:	rex
   1400134df:	rex.B
   1400134e0:	rex.RB
   1400134e1:	rex.X push rsi
   1400134e3:	push   rcx
   1400134e4:	push   rbx
   1400134e5:	je     0x140013559
   1400134e7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400134ee:	add    BYTE PTR [rax],al
   1400134f0:	data16 add bh,BYTE PTR [rdi]
   1400134f3:	(bad)  
   1400134f4:	xor    DWORD PTR [rcx+0x42],edx
   1400134f7:	jns    0x14001356d
   1400134f9:	gs rex.B jb 0x14001356f
   1400134fd:	(bad)  
   1400134fe:	jns    0x140013540
   140013500:	rex push rcx
   140013502:	rex.RB
   140013503:	rex.B
   140013504:	rex.B
   140013505:	rex pop rax
   140013507:	pop    rdx
   140013508:	add    BYTE PTR [rax],al
   14001350a:	xchg   esi,eax
   14001350b:	or     BYTE PTR [rdi],bh
   14001350d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140013510:	jae    0x140013586
   140013512:	rex.R (bad) 
   140013514:	je     0x140013577
   140013516:	rex push rcx
   140013518:	rex.X jns 0x14001358f
   14001351b:	gs rex.B jb 0x140013591
   14001351f:	(bad)  
   140013520:	jns    0x140013562
   140013522:	rex push rcx
   140013524:	rex.RB
   140013525:	rex.X
   140013526:	push   r8
   140013528:	rex.RB
   140013529:	rex.X
   14001352a:	rex.R pop rax
   14001352c:	pop    rdx
   14001352d:	add    BYTE PTR [rbx+0x6f743f18],dh
   140013533:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140013535:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013538:	cmp    BYTE PTR [rdx+0x69],al
   14001353b:	je     0x14001357d
   14001353d:	push   rcx
   14001353e:	push   rbx
   14001353f:	je     0x1400135b3
   140013541:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013548:	rex.X
   140013549:	rex.B (bad) 
   14001354b:	push   r14
   14001354d:	push   rcx
   14001354e:	rex.X jns 0x1400135c5
   140013551:	gs rex.B jb 0x1400135c7
   140013555:	(bad)  
   140013556:	jns    0x140013598
   140013558:	rex pop rax
   14001355a:	pop    rdx
   14001355b:	add    BYTE PTR [rdi+0x2],ch
   14001355e:	(bad)  
   14001355f:	(bad)  
   140013560:	xor    DWORD PTR [rcx+0x43],edx
   140013563:	outs   dx,DWORD PTR ds:[rsi]
   140013564:	jb     0x1400135cb
   140013566:	rex.B jo 0x1400135d9
   140013569:	ins    BYTE PTR es:[rdi],dx
   14001356a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140013571:	rex
   140013572:	rex push rbp
   140013574:	rex.RB
   140013575:	rex.B
   140013576:	rex.B
   140013577:	rex pop rax
   140013579:	pop    rdx
   14001357a:	add    BYTE PTR [rax],al
   14001357c:	jno    0x140013595
   14001357e:	(bad)  
   14001357f:	jae    0x1400135f5
   140013581:	(bad)  
   140013582:	jb     0x1400135f8
   140013584:	jae    0x1400135dd
   140013586:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14001358e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013595:	rex.X
   140013596:	pop    r15
   140013598:	rex.WRX push rsi
   14001359a:	push   rcx
   14001359b:	rex.XB push 0x40407261
   1400135a1:	push   rdi
   1400135a2:	xor    al,0x43
   1400135a4:	(bad)  
   1400135a5:	jae    0x14001360c
   1400135a7:	push   rbx
   1400135a8:	outs   dx,BYTE PTR gs:[rsi]
   1400135aa:	jae    0x140013615
   1400135ac:	je     0x140013617
   1400135ae:	jbe    0x140013619
   1400135b0:	je     0x14001362b
   1400135b2:	rex push rcx
   1400135b4:	je     0x1400135f6
   1400135b6:	rex
   1400135b7:	rex pop rdx
   1400135b9:	add    BYTE PTR [rax+0x6f743f18],bl
   1400135bf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400135c1:	je     0x140013603
   1400135c3:	push   rcx
   1400135c4:	push   rbx
   1400135c5:	je     0x140013639
   1400135c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400135ce:	rex.X
   1400135cf:	rex.B
   1400135d0:	rex.W push rax
   1400135d2:	rex.RB
   1400135d3:	pop    r15
   1400135d5:	rex.WRX
   1400135d6:	rex.W
   1400135d7:	rex pop rdx
   1400135d9:	add    BYTE PTR [rdx+0x17],dh
   1400135dc:	(bad)  
   1400135dd:	jae    0x140013653
   1400135df:	(bad)  
   1400135e0:	jb     0x140013656
   1400135e2:	jae    0x14001363b
   1400135e4:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   1400135ec:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400135f3:	rex.X
   1400135f4:	pop    r15
   1400135f6:	rex.WRX push rsi
   1400135f8:	push   rcx
   1400135f9:	rex.WR (bad) 
   1400135fb:	je     0x140013666
   1400135fd:	outs   dx,BYTE PTR ds:[rsi]
   1400135fe:	xor    DWORD PTR [rbx+0x74],edx
   140013601:	jb     0x14001366c
   140013603:	outs   dx,BYTE PTR ds:[rsi]
   140013604:	addr32 rex
   140013606:	rex push rdi
   140013608:	xor    al,0x43
   14001360a:	(bad)  
   14001360b:	jae    0x140013672
   14001360d:	push   rbx
   14001360e:	outs   dx,BYTE PTR gs:[rsi]
   140013610:	jae    0x14001367b
   140013612:	je     0x14001367d
   140013614:	jbe    0x14001367f
   140013616:	je     0x140013691
   140013618:	rex push rcx
   14001361a:	je     0x14001365c
   14001361c:	rex
   14001361d:	rex pop rdx
   14001361f:	add    dl,dh
   140013621:	(bad)  
   140013622:	(bad)  
   140013623:	(bad)  
   140013624:	jb     0x14001368d
   140013626:	jne    0x140013695
   140013628:	outs   dx,BYTE PTR gs:[rsi]
   14001362a:	je     0x14001369f
   14001362c:	rex push rcx
   14001362e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140013630:	jb     0x140013697
   140013632:	rex.B jo 0x1400136a5
   140013635:	ins    BYTE PTR es:[rdi],dx
   140013636:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001363d:	rex
   14001363e:	rex push rbx
   140013640:	rex.B (bad) 
   140013642:	push   r14
   140013644:	push   rcx
   140013645:	push   rbx
   140013646:	je     0x1400136ba
   140013648:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14001364f:	rex
   140013650:	rex pop rax
   140013652:	pop    rdx
   140013653:	add    BYTE PTR [rdx+0x0],ch
   140013656:	(bad)  
   140013657:	(bad)  
   140013658:	xor    BYTE PTR [rcx+0x43],dl
   14001365b:	outs   dx,DWORD PTR ds:[rsi]
   14001365c:	jb     0x1400136c3
   14001365e:	rex.B jo 0x1400136d1
   140013661:	ins    BYTE PTR es:[rdi],dx
   140013662:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140013669:	rex
   14001366a:	rex push rcx
   14001366c:	rex.RB
   14001366d:	rex.B
   14001366e:	rex.B
   14001366f:	rex
   140013670:	rex.B
   140013671:	rex.RB
   140013672:	rex.B
   140013673:	rex.W push rax
   140013675:	rex.RB
   140013676:	push   r8
   140013678:	rex.RB
   140013679:	rex.B
   14001367a:	rex.R
   14001367b:	rex.W
   14001367c:	rex pop rdx
   14001367e:	add    BYTE PTR [rax],al
   140013680:	mov    BYTE PTR [rsi],0x3f
   140013683:	(bad)  
   140013684:	jo     0x1400136f6
   140013686:	outs   dx,BYTE PTR gs:[rsi]
   140013688:	fs rex push rcx
   14001368b:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140013693:	rex
   140013694:	rex push rcx
   140013696:	rex.RB
   140013697:	rex.B
   140013698:	push   r8
   14001369a:	rex.RB
   14001369b:	push   r8
   14001369d:	rex.RB
   14001369e:	pop    r8
   1400136a0:	pop    rax
   1400136a1:	pop    rdx
   1400136a2:	add    BYTE PTR [rax],al
   1400136a4:	je     0x1400136b7
   1400136a6:	(bad)  
   1400136a7:	jo     0x14001371b
   1400136a9:	gs jo  0x140013711
   1400136ac:	outs   dx,BYTE PTR ds:[rsi]
   1400136ad:	fs rex push rcx
   1400136b0:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400136b8:	rex
   1400136b9:	rex push rcx
   1400136bb:	rex.RB
   1400136bc:	rex.B
   1400136bd:	push   r8
   1400136bf:	rex.RB
   1400136c0:	push   r8
   1400136c2:	rex.RB
   1400136c3:	pop    r8
   1400136c5:	pop    rax
   1400136c6:	pop    rdx
   1400136c7:	add    BYTE PTR [rsi],ch
   1400136c9:	or     edi,DWORD PTR [rdi]
   1400136cb:	gs jb  0x14001372f
   1400136ce:	jae    0x140013735
   1400136d0:	rex push rcx
   1400136d2:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400136da:	rex
   1400136db:	rex push rcx
   1400136dd:	rex.RB
   1400136de:	rex.B
   1400136df:	push   r8
   1400136e1:	rex.RB
   1400136e2:	push   r8
   1400136e4:	rex.RB
   1400136e5:	pop    r8
   1400136e7:	push   rax
   1400136e8:	rex.RB
   1400136e9:	push   r8
   1400136eb:	rex.RB
   1400136ec:	pop    r8
   1400136ee:	rex pop rdx
   1400136f0:	add    BYTE PTR [rax],al
   1400136f2:	icebp  
   1400136f3:	(bad)  
   1400136f4:	(bad)  
   1400136f5:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400136f8:	jo     0x14001373a
   1400136fa:	push   rcx
   1400136fb:	push   rbx
   1400136fc:	je     0x140013770
   1400136fe:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013705:	rex.B
   140013706:	pop    r8
   140013708:	rex.W
   140013709:	rex pop rdx
   14001370b:	add    BYTE PTR [rax+0x6f633f08],bl
   140013711:	outs   dx,BYTE PTR ds:[rsi]
   140013712:	jae    0x140013788
   140013714:	rex.R (bad) 
   140013716:	je     0x140013779
   140013718:	rex push rcx
   14001371a:	push   rbx
   14001371b:	je     0x14001378f
   14001371d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013724:	rex.X
   140013725:	push   r8
   140013727:	rex.RB
   140013728:	rex.X push rsi
   14001372a:	push   rcx
   14001372b:	rex.XB push 0x40407261
   140013731:	pop    rax
   140013732:	pop    rdx
   140013733:	add    BYTE PTR [rip+0x6e653f0b],al        # 0x1ae667644
   140013739:	fs jae 0x140013793
   14001373c:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140013744:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001374b:	rex.X
   14001374c:	pop    r15
   14001374e:	rex.WRX push rsi
   140013750:	push   rcx
   140013751:	rex.XB push 0x40407261
   140013757:	push   rdi
   140013758:	xor    al,0x43
   14001375a:	(bad)  
   14001375b:	jae    0x1400137c2
   14001375d:	push   rbx
   14001375e:	outs   dx,BYTE PTR gs:[rsi]
   140013760:	jae    0x1400137cb
   140013762:	je     0x1400137cd
   140013764:	jbe    0x1400137cf
   140013766:	je     0x1400137e1
   140013768:	rex push rcx
   14001376a:	je     0x1400137ac
   14001376c:	rex
   14001376d:	rex pop rdx
   14001376f:	add    BYTE PTR [rcx],al
   140013771:	(bad)  
   140013772:	(bad)  
   140013773:	(bad)  
   140013774:	je     0x1400137b6
   140013776:	push   rcx
   140013777:	push   rbx
   140013778:	je     0x1400137ec
   14001377a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013781:	rex.X
   140013782:	rex.B (bad) 
   140013784:	rex.X push rsi
   140013786:	push   rcx
   140013787:	rex.XB push 0x40407261
   14001378d:	rex.W
   14001378e:	rex pop rdx
   140013790:	add    BYTE PTR [rax],al
   140013792:	xchg   esi,eax
   140013793:	add    DWORD PTR [rdi],edi
   140013795:	(bad)  
   140013796:	xor    BYTE PTR [rcx+0x53],dl
   140013799:	je     0x14001380d
   14001379b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400137a2:	rex.B
   1400137a3:	rex.B
   1400137a4:	rex push rsi
   1400137a6:	push   rcx
   1400137a7:	rex.WR (bad) 
   1400137a9:	je     0x140013814
   1400137ab:	outs   dx,BYTE PTR ds:[rsi]
   1400137ac:	xor    DWORD PTR [rbx+0x74],edx
   1400137af:	jb     0x14001381a
   1400137b1:	outs   dx,BYTE PTR ds:[rsi]
   1400137b2:	addr32 rex
   1400137b4:	rex
   1400137b5:	rex pop rdx
   1400137b7:	add    BYTE PTR [rax],bh
   1400137b9:	sbb    bh,BYTE PTR [rdi]
   1400137bb:	jne    0x14001382b
   1400137bd:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   1400137c4:	push   rbx
   1400137c5:	je     0x140013839
   1400137c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400137ce:	rex.X
   1400137cf:	push   r8
   1400137d1:	rex.RB
   1400137d2:	rex.X push rsi
   1400137d4:	push   rcx
   1400137d5:	rex.XB push 0x40407261
   1400137db:	pop    rax
   1400137dc:	pop    rdx
   1400137dd:	add    BYTE PTR [rip+0x696d3f10],bl        # 0x1a96e76f3
   1400137e3:	fs push rdx
   1400137e5:	gs rex push cx
   1400137e9:	push   rbx
   1400137ea:	je     0x14001385e
   1400137ec:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400137f3:	rex.X
   1400137f4:	rex.B (bad) 
   1400137f6:	push   r14
   1400137f8:	push   rcx
   1400137f9:	push   rbx
   1400137fa:	je     0x14001386e
   1400137fc:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140013803:	rex
   140013804:	rex.W
   140013805:	rex.W
   140013806:	rex pop rdx
   140013808:	add    BYTE PTR [rax],al
   14001380a:	pop    rsi
   14001380b:	adc    al,0x3f
   14001380d:	jb     0x140013874
   14001380f:	jae    0x140013876
   140013811:	jb     0x140013889
   140013813:	gs rex push rcx
   140013816:	push   rbx
   140013817:	je     0x14001388b
   140013819:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013820:	rex.B
   140013821:	pop    r8
   140013823:	rex.W
   140013824:	rex pop rdx
   140013826:	add    BYTE PTR [rax],al
   140013828:	mov    edi,0x61633f07
   14001382d:	je     0x140013894
   14001382f:	outs   dx,DWORD PTR ds:[esi]
   140013831:	jb     0x1400138ac
   140013833:	rex push rcx
   140013835:	rex.XB push 0x40407261
   14001383b:	push   rbx
   14001383c:	rex.B (bad) 
   14001383e:	push   r15
   140013840:	xor    al,0x43
   140013842:	(bad)  
   140013843:	je     0x1400138aa
   140013845:	outs   dx,DWORD PTR ds:[esi]
   140013847:	jb     0x1400138c2
   140013849:	rex xor DWORD PTR [rax+0x49],eax
   14001384d:	rex pop rdx
   14001384f:	add    BYTE PTR [rbx+0x303f3f01],dl
   140013855:	push   rcx
   140013856:	push   rbx
   140013857:	je     0x1400138cb
   140013859:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013860:	rex.B
   140013861:	rex.B
   140013862:	rex push rax
   140013864:	rex.RB
   140013865:	rex.X push rsi
   140013867:	push   rcx
   140013868:	rex.XB push 0x40407261
   14001386e:	rex.W
   14001386f:	rex pop rdx
   140013871:	add    dh,ch
   140013873:	(bad)  
   140013874:	(bad)  
   140013875:	(bad)  
   140013876:	jb     0x1400138df
   140013878:	rex push rcx
   14001387a:	push   rbx
   14001387b:	je     0x1400138ef
   14001387d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013884:	rex.X
   140013885:	rex.B (bad) 
   140013887:	push   r14
   140013889:	xor    DWORD PTR [rax+0x56],eax
   14001388c:	push   rcx
   14001388d:	rex.XB push 0x40407261
   140013893:	rex.W xor BYTE PTR [rax+0x5a],al
   140013897:	add    al,dh
   140013899:	sbb    DWORD PTR [rdi],edi
   14001389b:	je     0x14001390f
   14001389d:	(bad)  
   14001389e:	outs   dx,BYTE PTR ds:[rsi]
   14001389f:	jae    0x14001390d
   1400138a1:	(bad)  
   1400138a2:	je     0x140013909
   1400138a4:	rex push rcx
   1400138a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400138a8:	jb     0x14001390f
   1400138aa:	rex.B jo 0x14001391d
   1400138ad:	ins    BYTE PTR es:[rdi],dx
   1400138ae:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400138b5:	rex
   1400138b6:	rex push rbx
   1400138b8:	rex.B (bad) 
   1400138ba:	push   r14
   1400138bc:	push   rcx
   1400138bd:	push   rbx
   1400138be:	je     0x140013932
   1400138c0:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   1400138c7:	rex.X
   1400138c8:	xor    BYTE PTR [rax],r14b
   1400138cb:	rex.W
   1400138cc:	rex pop rdx
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	jns    0x1400138e6
   1400138d2:	(bad)  
   1400138d3:	jb     0x14001393a
   1400138d5:	jae    0x140013940
   1400138d7:	jp     0x14001393e
   1400138d9:	rex push rcx
   1400138db:	push   rbx
   1400138dc:	je     0x140013950
   1400138de:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400138e5:	rex.B
   1400138e6:	pop    r8
   1400138e8:	rex.W
   1400138e9:	rex pop rdx
   1400138eb:	add    BYTE PTR [rcx+0x12],cl
   1400138ee:	(bad)  
   1400138ef:	jno    0x140013964
   1400138f1:	je     0x140013965
   1400138f3:	je     0x140013964
   1400138f5:	fs rex
   1400138f7:	rex pop rcx
   1400138f9:	rex.B
   1400138fa:	rex.WRX push rax
   1400138fc:	rex.RB
   1400138fd:	rex.X
   1400138fe:	rex.R push rax
   140013900:	rex.RB
   140013901:	push   r8
   140013903:	rex.RB
   140013904:	rex.X
   140013905:	rex.R push rax
   140013907:	rex.RB
   140013908:	pop    r15
   14001390a:	rex.WRX
   14001390b:	rex pop rdx
   14001390d:	add    BYTE PTR [rdx+0xd],bl
   140013910:	(bad)  
   140013911:	imul   ebp,DWORD PTR [rsi+0x73],0x40747265
   140013918:	push   rcx
   140013919:	push   rbx
   14001391a:	je     0x14001398e
   14001391c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013923:	rex.B
   140013924:	rex.B
   140013925:	rex.B
   140013926:	rex.RB
   140013927:	push   r14
   140013929:	xor    DWORD PTR [rax+0x48],eax
   14001392c:	push   rax
   14001392d:	rex.RB
   14001392e:	rex.X push rsi
   140013930:	push   rcx
   140013931:	rex.XB push 0x40407261
   140013937:	rex.W
   140013938:	rex pop rdx
   14001393a:	add    BYTE PTR [rax],al
   14001393c:	popf   
   14001393d:	(bad)  
   14001393e:	(bad)  
   14001393f:	imul   esi,DWORD PTR [rbx+0x53],0x65636170
   140013946:	rex push rcx
   140013948:	rex.XB push 0x40407261
   14001394e:	push   rbx
   14001394f:	pop    r15
   140013951:	rex.WRX
   140013952:	rex.WB
   140013953:	rex pop rdx
   140013955:	add    BYTE PTR [rsi],al
   140013957:	or     edi,DWORD PTR [rdi]
   140013959:	outs   dx,BYTE PTR gs:[rsi]
   14001395b:	fs jae 0x1400139b5
   14001395e:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140013966:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14001396d:	rex.X
   14001396e:	pop    r15
   140013970:	rex.WRX push rsi
   140013972:	push   rcx
   140013973:	rex.WR (bad) 
   140013975:	je     0x1400139e0
   140013977:	outs   dx,BYTE PTR ds:[rsi]
   140013978:	xor    DWORD PTR [rbx+0x74],edx
   14001397b:	jb     0x1400139e6
   14001397d:	outs   dx,BYTE PTR ds:[rsi]
   14001397e:	addr32 rex
   140013980:	rex push rdi
   140013982:	xor    al,0x43
   140013984:	(bad)  
   140013985:	jae    0x1400139ec
   140013987:	push   rbx
   140013988:	outs   dx,BYTE PTR gs:[rsi]
   14001398a:	jae    0x1400139f5
   14001398c:	je     0x1400139f7
   14001398e:	jbe    0x1400139f9
   140013990:	je     0x140013a0b
   140013992:	rex push rcx
   140013994:	je     0x1400139d6
   140013996:	rex
   140013997:	rex pop rdx
   140013999:	add    BYTE PTR [rbx+0x1],dh
   14001399c:	(bad)  
   14001399d:	(bad)  
   14001399e:	xor    BYTE PTR [rcx+0x53],dl
   1400139a1:	push   0x64657261
   1400139a6:	rex.R (bad) 
   1400139a8:	je     0x140013a0b
   1400139aa:	rex
   1400139ab:	rex push rcx
   1400139ad:	rex.RB
   1400139ae:	rex.B
   1400139af:	rex.B
   1400139b0:	rex pop rax
   1400139b2:	pop    rdx
   1400139b3:	add    bh,dh
   1400139b5:	adc    DWORD PTR [rdi],edi
   1400139b7:	jno    0x140013a02
   1400139b9:	outs   dx,BYTE PTR ds:[rsi]
   1400139ba:	data16 rex
   1400139bc:	rex pop rcx
   1400139be:	rex.B
   1400139bf:	rex.WRX pop rax
   1400139c1:	pop    rdx
   1400139c2:	add    BYTE PTR [rax],al
   1400139c4:	rex.XB adc dil,BYTE PTR [r15]
   1400139c7:	jno    0x140013a3c
   1400139c9:	je     0x140013a3d
   1400139cb:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400139ce:	rex
   1400139cf:	rex pop rcx
   1400139d1:	rex.B
   1400139d2:	rex.W push rax
   1400139d4:	rex.RB
   1400139d5:	rex.X
   1400139d6:	xor    BYTE PTR [rax+0x5a],r8b
   1400139da:	add    BYTE PTR [rax],al
   1400139dc:	(bad)  
   1400139dd:	adc    bh,BYTE PTR [rdi]
   1400139df:	jno    0x140013a34
   1400139e1:	rex.WRX (bad) 
   1400139e3:	rex.WRX
   1400139e4:	rex
   1400139e5:	rex pop rcx
   1400139e7:	rex.B
   1400139e8:	rex.WRX pop rax
   1400139ea:	pop    rdx
   1400139eb:	add    BYTE PTR [rcx+0x74],dl
   1400139ee:	xor    eax,0x65726f43
   1400139f3:	cs fs ins BYTE PTR es:[rdi],dx
   1400139f6:	ins    BYTE PTR es:[rdi],dx
   1400139f7:	add    BYTE PTR [rbp+0x5],bl
   1400139fa:	(bad)  
   1400139fb:	pop    rdi
   1400139fc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400139fe:	movsxd ebp,DWORD PTR [rbx+0x40]
   140013a01:	pop    rdi
   140013a02:	rex.WRB jne 0x140013a79
   140013a05:	gs js  0x140013a48
   140013a08:	jae    0x140013a7e
   140013a0a:	fs rex
   140013a0c:	rex push rcx
   140013a0e:	rex.RB
   140013a0f:	rex.B
   140013a10:	pop    r8
   140013a12:	pop    rax
   140013a13:	pop    rdx
   140013a14:	add    BYTE PTR [rax],al
   140013a16:	loopne 0x140013a1d
   140013a18:	(bad)  
   140013a19:	pop    rdi
   140013a1a:	push   rbp
   140013a1b:	outs   dx,BYTE PTR ds:[rsi]
   140013a1c:	ins    BYTE PTR es:[rdi],dx
   140013a1d:	outs   dx,DWORD PTR ds:[rsi]
   140013a1e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140013a21:	pop    rdi
   140013a22:	rex.WRB jne 0x140013a99
   140013a25:	gs js  0x140013a68
   140013a28:	jae    0x140013a9e
   140013a2a:	fs rex
   140013a2c:	rex push rcx
   140013a2e:	rex.RB
   140013a2f:	rex.B
   140013a30:	pop    r8
   140013a32:	pop    rax
   140013a33:	pop    rdx
   140013a34:	add    BYTE PTR [rax],al
   140013a36:	(bad)  
   140013a37:	or     BYTE PTR [rdi],bh
   140013a39:	data16 ins BYTE PTR es:[rdi],dx
   140013a3b:	jne    0x140013ab0
   140013a3d:	push   0x62243f40
   140013a42:	(bad)  
   140013a43:	jae    0x140013aae
   140013a45:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013a48:	jae    0x140013abe
   140013a4a:	jb     0x140013ab1
   140013a4c:	(bad)  
   140013a4d:	ins    DWORD PTR es:[rdi],dx
   140013a4e:	rex
   140013a4f:	rex.R push rbp
   140013a51:	(bad)  
   140013a52:	and    al,0x63
   140013a54:	push   0x745f7261
   140013a59:	jb     0x140013abc
   140013a5b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013a63:	fs rex
   140013a65:	rex
   140013a66:	rex jae 0x140013add
   140013a69:	fs rex
   140013a6b:	rex push rcx
   140013a6d:	rex.RB
   140013a6e:	rex.B
   140013a6f:	rex.B
   140013a70:	rex.B
   140013a71:	rex.RB
   140013a72:	push   r14
   140013a74:	xor    DWORD PTR [rdx],esi
   140013a76:	rex pop rax
   140013a78:	pop    rdx
   140013a79:	add    BYTE PTR [rsi+0x4f5f3f05],al
   140013a7f:	jae    0x140013ae7
   140013a81:	js     0x140013ac3
   140013a83:	(bad)  
   140013a84:	and    al,0x62
   140013a86:	(bad)  
   140013a87:	jae    0x140013af2
   140013a89:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013a8c:	jae    0x140013b02
   140013a8e:	jb     0x140013af5
   140013a90:	(bad)  
   140013a91:	ins    DWORD PTR es:[rdi],dx
   140013a92:	rex
   140013a93:	rex.R push rbp
   140013a95:	(bad)  
   140013a96:	and    al,0x63
   140013a98:	push   0x745f7261
   140013a9d:	jb     0x140013b00
   140013a9f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013aa7:	fs rex
   140013aa9:	rex
   140013aaa:	rex jae 0x140013b21
   140013aad:	fs rex
   140013aaf:	rex push rcx
   140013ab1:	rex.RB
   140013ab2:	rex.B
   140013ab3:	pop    r8
   140013ab5:	pop    rax
   140013ab6:	pop    rdx
   140013ab7:	add    dl,bh
   140013ab9:	or     edi,DWORD PTR [rdi]
   140013abb:	jne    0x140013b2b
   140013abd:	movsxd esp,DWORD PTR [rcx+0x75]
   140013ac0:	addr32 push 0x78655f74
   140013ac6:	movsxd esp,DWORD PTR [rbp+0x70]
   140013ac9:	je     0x140013b34
   140013acb:	outs   dx,DWORD PTR ds:[rsi]
   140013acc:	outs   dx,BYTE PTR ds:[rsi]
   140013acd:	rex jae 0x140013b44
   140013ad0:	fs rex
   140013ad2:	rex pop rcx
   140013ad4:	pop    r15
   140013ad6:	rex.WRX pop rax
   140013ad8:	pop    rdx
   140013ad9:	add    BYTE PTR [rdx+0xb],bl
   140013adc:	(bad)  
   140013add:	jae    0x140013b44
   140013adf:	je     0x140013b54
   140013ae1:	je     0x140013b44
   140013ae3:	je     0x140013b4a
   140013ae5:	rex (bad) 
   140013ae7:	and    al,0x62
   140013ae9:	(bad)  
   140013aea:	jae    0x140013b55
   140013aec:	movsxd ebx,DWORD PTR [rdi+0x69]
   140013aef:	outs   dx,DWORD PTR ds:[rsi]
   140013af0:	jae    0x140013b32
   140013af2:	rex.R push rbp
   140013af4:	(bad)  
   140013af5:	and    al,0x63
   140013af7:	push   0x745f7261
   140013afc:	jb     0x140013b5f
   140013afe:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013b06:	fs rex
   140013b08:	rex
   140013b09:	rex jae 0x140013b80
   140013b0c:	fs rex
   140013b0e:	rex push rcx
   140013b10:	rex.RB
   140013b11:	rex.B
   140013b12:	pop    r8
   140013b14:	rex.W pop rdi
   140013b16:	rex.WRX
   140013b17:	rex pop rdx
   140013b19:	add    BYTE PTR [rbx+rcx*1+0x7570733f],cl
   140013b20:	je     0x140013b90
   140013b22:	rex (bad) 
   140013b24:	and    al,0x62
   140013b26:	(bad)  
   140013b27:	jae    0x140013b92
   140013b29:	movsxd ebx,DWORD PTR [rdi+0x73]
   140013b2c:	je     0x140013ba0
   140013b2e:	gs (bad) 
   140013b30:	ins    DWORD PTR es:[rdi],dx
   140013b31:	(bad)  
   140013b32:	jne    0x140013b9a
   140013b34:	rex
   140013b35:	rex.R push rbp
   140013b37:	(bad)  
   140013b38:	and    al,0x63
   140013b3a:	push   0x745f7261
   140013b3f:	jb     0x140013ba2
   140013b41:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013b49:	fs rex
   140013b4b:	rex
   140013b4c:	rex jae 0x140013bc3
   140013b4f:	fs rex
   140013b51:	rex push rcx
   140013b53:	rex.RB
   140013b54:	rex.B
   140013b55:	pop    r15
   140013b57:	rex.WX push rax
   140013b59:	rex.RB
   140013b5a:	rex.X
   140013b5b:	rex.R pop rdi
   140013b5d:	rex.WX
   140013b5e:	rex pop rdx
   140013b60:	add    BYTE PTR [rax],al
   140013b62:	mov    DWORD PTR [rbx],ecx
   140013b64:	(bad)  
   140013b65:	jae    0x140013bd7
   140013b67:	jne    0x140013bdd
   140013b69:	movsxd eax,DWORD PTR [rax+0x3f]
   140013b6c:	and    al,0x62
   140013b6e:	(bad)  
   140013b6f:	jae    0x140013bda
   140013b71:	movsxd ebx,DWORD PTR [rdi+0x73]
   140013b74:	je     0x140013be8
   140013b76:	gs (bad) 
   140013b78:	ins    DWORD PTR es:[rdi],dx
   140013b79:	(bad)  
   140013b7a:	jne    0x140013be2
   140013b7c:	rex
   140013b7d:	rex.R push rbp
   140013b7f:	(bad)  
   140013b80:	and    al,0x63
   140013b82:	push   0x745f7261
   140013b87:	jb     0x140013bea
   140013b89:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013b91:	fs rex
   140013b93:	rex
   140013b94:	rex jae 0x140013c0b
   140013b97:	fs rex
   140013b99:	rex push rcx
   140013b9b:	rex.RB
   140013b9c:	rex.B
   140013b9d:	rex.B
   140013b9e:	rex.W
   140013b9f:	rex.R
   140013ba0:	rex pop rdx
   140013ba2:	add    BYTE PTR [rax],al
   140013ba4:	sbb    eax,0x363f3f03
   140013ba9:	(bad)  
   140013baa:	and    al,0x62
   140013bac:	(bad)  
   140013bad:	jae    0x140013c18
   140013baf:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013bb2:	jae    0x140013c28
   140013bb4:	jb     0x140013c1b
   140013bb6:	(bad)  
   140013bb7:	ins    DWORD PTR es:[rdi],dx
   140013bb8:	rex
   140013bb9:	rex.R push rbp
   140013bbb:	(bad)  
   140013bbc:	and    al,0x63
   140013bbe:	push   0x745f7261
   140013bc3:	jb     0x140013c26
   140013bc5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013bcd:	fs rex
   140013bcf:	rex
   140013bd0:	rex jae 0x140013c47
   140013bd3:	fs rex
   140013bd5:	rex push rcx
   140013bd7:	rex.RB
   140013bd8:	rex.B
   140013bd9:	rex.B
   140013bda:	rex.B
   140013bdb:	rex.RB
   140013bdc:	push   r14
   140013bde:	xor    BYTE PTR [rcx],dh
   140013be0:	rex push rax
   140013be2:	ss rex.B
   140013be4:	rex.B
   140013be5:	rex.RB
   140013be6:	push   r14
   140013be8:	xor    BYTE PTR [rcx],dh
   140013bea:	rex
   140013beb:	rex.B
   140013bec:	rex.RB
   140013bed:	push   r14
   140013bef:	xor    BYTE PTR [rcx],dh
   140013bf1:	rex
   140013bf2:	rex pop rdx
   140013bf4:	rex pop rdx
   140013bf6:	add    BYTE PTR [rax],al
   140013bf8:	mov    edx,0x6e653f07
   140013bfd:	fs ins BYTE PTR es:[rdi],dx
   140013bff:	rex jae 0x140013c76
   140013c02:	fs rex
   140013c04:	rex pop rcx
   140013c06:	rex.B
   140013c07:	rex.B
   140013c08:	rex.RB
   140013c09:	push   r14
   140013c0b:	(bad)  
   140013c0c:	and    al,0x62
   140013c0e:	(bad)  
   140013c0f:	jae    0x140013c7a
   140013c11:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013c14:	jae    0x140013c8a
   140013c16:	jb     0x140013c7d
   140013c18:	(bad)  
   140013c19:	ins    DWORD PTR es:[rdi],dx
   140013c1a:	rex
   140013c1b:	rex.R push rbp
   140013c1d:	(bad)  
   140013c1e:	and    al,0x63
   140013c20:	push   0x745f7261
   140013c25:	jb     0x140013c88
   140013c27:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013c2f:	fs rex
   140013c31:	rex
   140013c32:	rex xor DWORD PTR [rax+0x41],eax
   140013c36:	rex.RB
   140013c37:	push   r14
   140013c39:	xor    dh,BYTE PTR [rcx]
   140013c3b:	rex
   140013c3c:	rex pop rdx
   140013c3e:	add    BYTE PTR [rax],al
   140013c40:	push   rax
   140013c41:	(bad)  
   140013c42:	(bad)  
   140013c43:	movsxd esp,DWORD PTR [rbp+0x72]
   140013c46:	jb     0x140013c88
   140013c48:	jae    0x140013cbe
   140013c4a:	fs rex
   140013c4c:	rex xor edx,DWORD PTR [rsi+0x3f]
   140013c50:	and    al,0x62
   140013c52:	(bad)  
   140013c53:	jae    0x140013cbe
   140013c55:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013c58:	jae    0x140013cce
   140013c5a:	jb     0x140013cc1
   140013c5c:	(bad)  
   140013c5d:	ins    DWORD PTR es:[rdi],dx
   140013c5e:	rex
   140013c5f:	rex.R push rbp
   140013c61:	(bad)  
   140013c62:	and    al,0x63
   140013c64:	push   0x745f7261
   140013c69:	jb     0x140013ccc
   140013c6b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013c73:	fs rex
   140013c75:	rex
   140013c76:	rex xor DWORD PTR [rax+0x41],eax
   140013c7a:	add    BYTE PTR [rax],al
   140013c7c:	cwde   
   140013c7d:	(bad)  
   140013c7e:	(bad)  
   140013c7f:	movsxd ebp,DWORD PTR [rdi+0x75]
   140013c82:	je     0x140013cc4
   140013c84:	jae    0x140013cfa
   140013c86:	fs rex
   140013c88:	rex xor edx,DWORD PTR [rsi+0x3f]
   140013c8c:	and    al,0x62
   140013c8e:	(bad)  
   140013c8f:	jae    0x140013cfa
   140013c91:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013c94:	jae    0x140013d0a
   140013c96:	jb     0x140013cfd
   140013c98:	(bad)  
   140013c99:	ins    DWORD PTR es:[rdi],dx
   140013c9a:	rex
   140013c9b:	rex.R push rbp
   140013c9d:	(bad)  
   140013c9e:	and    al,0x63
   140013ca0:	push   0x745f7261
   140013ca5:	jb     0x140013d08
   140013ca7:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013caf:	fs rex
   140013cb1:	rex
   140013cb2:	rex xor DWORD PTR [rax+0x41],eax
   140013cb6:	add    BYTE PTR [rax],al
   140013cb8:	(bad)  
   140013cb9:	add    edi,DWORD PTR [rdi]
   140013cbb:	(bad)  
   140013cbc:	ss (bad) 
   140013cbe:	and    al,0x62
   140013cc0:	(bad)  
   140013cc1:	jae    0x140013d2c
   140013cc3:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140013cc6:	jae    0x140013d3c
   140013cc8:	jb     0x140013d2f
   140013cca:	(bad)  
   140013ccb:	ins    DWORD PTR es:[rdi],dx
   140013ccc:	rex
   140013ccd:	rex.R push rbp
   140013ccf:	(bad)  
   140013cd0:	and    al,0x63
   140013cd2:	push   0x745f7261
   140013cd7:	jb     0x140013d3a
   140013cd9:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140013ce1:	fs rex
   140013ce3:	rex
   140013ce4:	rex jae 0x140013d5b
   140013ce7:	fs rex
   140013ce9:	rex push rcx
   140013ceb:	rex.RB
   140013cec:	rex.B
   140013ced:	rex.B
   140013cee:	rex.B
   140013cef:	rex.RB
   140013cf0:	push   r14
   140013cf2:	xor    BYTE PTR [rcx],dh
   140013cf4:	rex
   140013cf5:	rex.W
   140013cf6:	rex pop rdx
   140013cf8:	add    BYTE PTR [rax],al
   140013cfa:	rex.WRB push r11
   140013cfc:	push   rsi
   140013cfd:	rex.XB push r8
   140013cff:	cmp    DWORD PTR [rax],esi
   140013d01:	cs fs ins BYTE PTR es:[rdi],dx
   140013d04:	ins    BYTE PTR es:[rdi],dx
   140013d05:	add    BYTE PTR [rbx],dl
   140013d07:	add    BYTE PTR [rdi],bh
   140013d09:	(bad)  
   140013d0a:	xor    eax,DWORD PTR [rax+0x59]
   140013d0d:	pop    r8
   140013d0f:	push   rax
   140013d10:	rex.RB
   140013d11:	pop    r8
   140013d13:	rex pop rdx
   140013d15:	add    ah,dh
   140013d17:	add    al,0x6d
   140013d19:	gs ins DWORD PTR es:[rdi],dx
   140013d1b:	jae    0x140013d82
   140013d1d:	je     0x140013d1f
   140013d1f:	add    al,dh
   140013d21:	add    al,0x6d
   140013d23:	gs ins DWORD PTR es:[rdi],dx
   140013d25:	movsxd esi,DWORD PTR [rax+0x79]
   140013d28:	add    BYTE PTR [rax],al
   140013d2a:	lock add bl,BYTE PTR [rdi+0x70]
   140013d2e:	jne    0x140013da2
   140013d30:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140013d34:	ins    BYTE PTR es:[rdi],dx
   140013d35:	add    BYTE PTR [rbx+0x0],ah
   140013d38:	pop    rdi
   140013d39:	pop    rdi
   140013d3a:	rex.XB js 0x140013db5
   140013d3d:	rex.RX jb 0x140013da1
   140013d40:	ins    DWORD PTR es:[rdi],dx
   140013d41:	gs rex.W (bad) 
   140013d44:	outs   dx,BYTE PTR ds:[rsi]
   140013d45:	fs ins BYTE PTR es:[rdi],dx
   140013d47:	gs jb  0x140013d7d
   140013d4a:	add    BYTE PTR [rax],al
   140013d4c:	lods   al,BYTE PTR ds:[rsi]
   140013d4d:	add    al,0x66
   140013d4f:	jb     0x140013db6
   140013d51:	add    BYTE PTR gs:[rax],al
   140013d54:	in     eax,0x4
   140013d56:	ins    DWORD PTR es:[rdi],dx
   140013d57:	(bad)  
   140013d58:	ins    BYTE PTR es:[rdi],dx
   140013d59:	ins    BYTE PTR es:[rdi],dx
   140013d5a:	outs   dx,DWORD PTR ds:[rsi]
   140013d5b:	movsxd eax,DWORD PTR [rax]
   140013d5d:	add    BYTE PTR [rdx],dh
   140013d5f:	add    eax,0x74727473
   140013d64:	outs   dx,DWORD PTR ds:[rsi]
   140013d65:	add    BYTE PTR fs:[rax],al
   140013d68:	adc    DWORD PTR [rax],eax
   140013d6a:	(bad)  
   140013d6b:	(bad)  
   140013d6c:	xor    al,BYTE PTR [rax+0x59]
   140013d6f:	push   r8
   140013d71:	rex.RB
   140013d72:	pop    r8
   140013d74:	pop    rdi
   140013d75:	rex.WXB
   140013d76:	rex pop rdx
   140013d78:	add    BYTE PTR [rax],al
   140013d7a:	rex.WRB push r11
   140013d7c:	push   rsi
   140013d7d:	rex.XB push r10
   140013d7f:	cmp    DWORD PTR [rax],esi
   140013d81:	cs fs ins BYTE PTR es:[rdi],dx
   140013d84:	ins    BYTE PTR es:[rdi],dx
   140013d85:	add    dl,ah
   140013d87:	add    BYTE PTR [rdi+0x61],bl
   140013d8a:	ins    DWORD PTR es:[rdi],dx
   140013d8b:	jae    0x140013df4
   140013d8d:	pop    rdi
   140013d8e:	gs js  0x140013dfa
   140013d91:	je     0x140013d93
   140013d93:	add    BYTE PTR [rax+0x675f5f00],dl
   140013d99:	gs je  0x140013e09
   140013d9c:	(bad)  
   140013d9d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140013da4:	pop    rcx
   140013da5:	add    BYTE PTR [rdi+0x5f],bl
   140013da8:	rex.XB pop r15
   140013daa:	jae    0x140013e1c
   140013dac:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140013db0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140013db7:	ins    BYTE PTR es:[rdi],dx
   140013db8:	gs jb  0x140013dbb
   140013dbb:	add    BYTE PTR [rbp+0x0],dl
   140013dbe:	pop    rdi
   140013dbf:	pop    rax
   140013dc0:	movsxd esi,DWORD PTR [rax+0x74]
   140013dc3:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   140013dcc:	pop    rdi
   140013dcd:	gs js  0x140013e39
   140013dd0:	je     0x140013dd2
   140013dd2:	stc    
   140013dd3:	add    BYTE PTR [rdi+0x63],bl
   140013dd6:	gs js  0x140013e42
   140013dd9:	je     0x140013ddb
   140013ddb:	add    BYTE PTR [rcx+0x69786504],dl
   140013de1:	je     0x140013de3
   140013de3:	add    BYTE PTR [rcx+0x695f5f00],dl
   140013de9:	outs   dx,BYTE PTR ds:[rsi]
   140013dea:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   140013df2:	pop    rdi
   140013df3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140013dfa:	ins    DWORD PTR es:[rdi],dx
   140013dfb:	add    bh,cl
   140013dfd:	add    DWORD PTR [rdi+0x69],ebx
   140013e00:	outs   dx,BYTE PTR ds:[rsi]
   140013e01:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140013e09:	add    BYTE PTR [rcx],cl
   140013e0b:	add    DWORD PTR [rdi+0x63],ebx
   140013e0e:	outs   dx,DWORD PTR ds:[rsi]
   140013e0f:	outs   dx,BYTE PTR ds:[rsi]
   140013e10:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140013e16:	gs (bad) 
   140013e18:	fs ins BYTE PTR es:[rdi],dx
   140013e1a:	outs   dx,DWORD PTR ds:[rsi]
   140013e1b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013e1e:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   140013e25:	gs je  0x140013e9d
   140013e28:	jae    0x140013e8f
   140013e2a:	jb     0x140013e99
   140013e2c:	(bad)  
   140013e2d:	je     0x140013e97
   140013e2f:	gs jb  0x140013ea4
   140013e32:	add    BYTE PTR [rax],al
   140013e34:	or     BYTE PTR [rcx],al
   140013e36:	pop    rdi
   140013e37:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013e3a:	ins    DWORD PTR es:[rdi],dx
   140013e3b:	outs   dx,DWORD PTR ds:[rsi]
   140013e3c:	fs add BYTE PTR gs:[rax],al
   140013e40:	(bad)
   140013e45:	outs   dx,DWORD PTR ds:[rsi]
   140013e46:	fs add BYTE PTR gs:[rax],al
   140013e4a:	(bad)  
   140013e4b:	add    DWORD PTR [rdi+0x65],ebx
   140013e4e:	outs   dx,BYTE PTR ds:[rsi]
   140013e4f:	movsxd ebp,DWORD PTR [rdi+0x64]
   140013e52:	gs pop rdi
   140013e54:	jo     0x140013ec5
   140013e56:	imul   ebp,DWORD PTR [rsi+0x74],0xbc007265
   140013e5d:	add    BYTE PTR [rdi+0x5f],bl
   140013e60:	jae    0x140013ec7
   140013e62:	je     0x140013ec3
   140013e64:	(bad)  
   140013e65:	jo     0x140013ed7
   140013e67:	pop    rdi
   140013e68:	je     0x140013ee3
   140013e6a:	jo     0x140013ed1
   140013e6c:	add    BYTE PTR [rax],al
   140013e6e:	rex.XB add BYTE PTR [r15],dil
   140013e71:	je     0x140013ed8
   140013e73:	jb     0x140013ee2
   140013e75:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140013e7c:	pop    rcx
   140013e7d:	pop    r8
   140013e7f:	pop    rax
   140013e80:	pop    rdx
   140013e81:	add    BYTE PTR [rax],bh
   140013e83:	add    BYTE PTR [rdi],bh
   140013e85:	pop    rdi
   140013e86:	je     0x140013f01
   140013e88:	jo     0x140013eef
   140013e8a:	pop    rdi
   140013e8b:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140013e92:	outs   dx,DWORD PTR ds:[rsi]
   140013e93:	jb     0x140013ef4
   140013e95:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140013e9c:	ins    BYTE PTR es:[rdi],dx
   140013e9d:	pop    rdi
   140013e9e:	ins    DWORD PTR es:[rdi],dx
   140013e9f:	gs je  0x140013f0a
   140013ea2:	outs   dx,DWORD PTR ds:[rsi]
   140013ea3:	fs rex je 0x140013f20
   140013ea7:	jo     0x140013f0e
   140013ea9:	pop    rdi
   140013eaa:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140013eb1:	rex.RB
   140013eb2:	rex.B
   140013eb3:	pop    r8
   140013eb5:	pop    rax
   140013eb6:	pop    rdx
   140013eb7:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   140013ebe:	outs   dx,DWORD PTR ds:[rsi]
   140013ebf:	movsxd ebp,DWORD PTR [rbx+0x0]
   140013ec2:	test   DWORD PTR [rax],eax
   140013ec4:	pop    rdi
   140013ec5:	pop    rdi
   140013ec6:	fs ins BYTE PTR es:[rdi],dx
   140013ec8:	ins    BYTE PTR es:[rdi],dx
   140013ec9:	outs   dx,DWORD PTR ds:[rsi]
   140013eca:	outs   dx,BYTE PTR ds:[rsi]
   140013ecb:	gs js  0x140013f37
   140013ece:	je     0x140013ed0
   140013ed0:	cmp    eax,0x6f6c5f02
   140013ed5:	movsxd ebp,DWORD PTR [rbx+0x0]
   140013ed8:	in     al,0x2
   140013eda:	pop    rdi
   140013edb:	outs   dx,DWORD PTR ds:[rsi]
   140013edc:	outs   dx,BYTE PTR ds:[rsi]
   140013edd:	gs js  0x140013f49
   140013ee0:	je     0x140013ee2
   140013ee2:	sub    eax,0x65645f01
   140013ee7:	movsxd ebp,DWORD PTR [rdi+0x64]
   140013eea:	gs pop rdi
   140013eec:	jo     0x140013f5d
   140013eee:	imul   ebp,DWORD PTR [rsi+0x74],0xc0007265
   140013ef5:	add    al,0x53
   140013ef7:	ins    BYTE PTR es:[rdi],dx
   140013ef8:	gs gs jo 0x140013efc
   140013efc:	mov    bl,0x4
   140013efe:	push   rbx
   140013eff:	gs je  0x140013f57
   140013f02:	outs   dx,BYTE PTR ds:[rsi]
   140013f03:	push   0x6c646e61
   140013f08:	gs fs rex.RB js 0x140013f70
   140013f0d:	gs jo  0x140013f84
   140013f10:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140013f17:	gs jb  0x140013f1a
   140013f1a:	test   eax,0x65755103
   140013f1f:	jb     0x140013f9a
   140013f21:	push   rax
   140013f22:	gs jb  0x140013f8b
   140013f25:	outs   dx,DWORD PTR ds:[rsi]
   140013f26:	jb     0x140013f95
   140013f28:	(bad)  
   140013f29:	outs   dx,BYTE PTR ds:[rsi]
   140013f2a:	movsxd esp,DWORD PTR [rbp+0x43]
   140013f2d:	outs   dx,DWORD PTR ds:[rsi]
   140013f2e:	jne    0x140013f9e
   140013f30:	je     0x140013f97
   140013f32:	jb     0x140013f34
   140013f34:	(bad)  
   140013f35:	add    al,BYTE PTR [rdi+0x65]
   140013f38:	je     0x140013f8e
   140013f3a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140013f41:	je     0x140013f43
   140013f43:	add    bl,cl
   140013f45:	add    DWORD PTR [rdi+0x65],eax
   140013f48:	je     0x140013f8d
   140013f4a:	jne    0x140013fbe
   140013f4c:	jb     0x140013fb3
   140013f4e:	outs   dx,BYTE PTR ds:[rsi]
   140013f4f:	je     0x140013fa5
   140013f51:	push   0x64616572
   140013f56:	rex.WB
   140013f57:	add    BYTE PTR fs:[rax],al
   140013f5a:	mov    DWORD PTR [rcx],0x43746547
   140013f60:	jne    0x140013fd4
   140013f62:	jb     0x140013fc9
   140013f64:	outs   dx,BYTE PTR ds:[rsi]
   140013f65:	je     0x140013fb7
   140013f67:	jb     0x140013fd8
   140013f69:	movsxd esp,DWORD PTR [rbp+0x73]
   140013f6c:	jae    0x140013fb7
   140013f6e:	add    BYTE PTR fs:[rax+0x74654702],al
   140013f75:	push   rbx
   140013f76:	jns    0x140013feb
   140013f78:	je     0x140013fdf
   140013f7a:	ins    DWORD PTR es:[rdi],dx
   140013f7b:	push   rsp
   140013f7c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140013f83:	ins    BYTE PTR es:[rdi],dx
   140013f84:	gs push rsp
   140013f86:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   140013f8d:	rex.WRX
   140013f8e:	rex.RB
   140013f8f:	xor    r14,QWORD PTR [rdx]
   140013f92:	cs fs ins BYTE PTR es:[rdi],dx
   140013f95:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140014000 <.data>:
   140014000:	and    ah,al
   140014002:	add    BYTE PTR [rax+0x1],al
   140014005:	add    BYTE PTR [rax],al
   140014007:	add    BYTE PTR [rax+0x1400120],ch
	...
   140014015:	add    BYTE PTR [rax],al
   140014017:	add    BYTE PTR [rsi],ch
   140014019:	(bad)  
   14001401a:	push   r14
   14001401c:	imul   r14d,DWORD PTR [rdx+0x65],0x76697463
   140014024:	gs jae 0x140014067
   140014027:	push   rcx
   140014028:	push   rcx
   140014029:	ins    DWORD PTR es:[rdi],dx
   14001402a:	ins    BYTE PTR es:[rdi],dx
   14001402b:	rex.WX push rbx
   14001402d:	rex
   14001402e:	add    BYTE PTR [rax+0x1400120],bpl
	...
   14001403d:	add    BYTE PTR [rax],al
   14001403f:	add    BYTE PTR [rsi],ch
   140014041:	(bad)  
   140014042:	push   r14
   140014044:	push   rcx
   140014045:	ins    DWORD PTR es:[rdi],dx
   140014046:	ins    BYTE PTR es:[rdi],dx
   140014047:	ins    DWORD PTR es:[rdi],dx
   140014048:	imul   ebp,DWORD PTR [rsi+0x4c],0x72657865
   14001404f:	rex push rcx
   140014051:	push   rcx
   140014052:	ins    DWORD PTR es:[rdi],dx
   140014053:	ins    BYTE PTR es:[rdi],dx
   140014054:	rex.WX push rbx
   140014056:	rex
   140014057:	add    BYTE PTR [rax],al
   14001405a:	add    BYTE PTR [rax],al
   14001405c:	add    BYTE PTR [rax],al
   14001405e:	add    BYTE PTR [rax],al
   140014060:	test   al,0x20
   140014062:	add    DWORD PTR [rax+0x1],eax
	...
   14001406d:	add    BYTE PTR [rax],al
   14001406f:	add    BYTE PTR [rsi],ch
   140014071:	(bad)  
   140014072:	push   r14
   140014074:	rex.WR
   140014075:	gs js  0x1400140dd
   140014078:	jb     0x1400140ba
   14001407a:	push   rcx
   14001407b:	push   rcx
   14001407c:	ins    DWORD PTR es:[rdi],dx
   14001407d:	ins    BYTE PTR es:[rdi],dx
   14001407e:	rex.WX push rbx
   140014080:	rex
   140014081:	add    BYTE PTR [rax],al
   140014084:	add    BYTE PTR [rax],al
   140014086:	add    BYTE PTR [rax],al
   140014088:	test   al,0x20
   14001408a:	add    DWORD PTR [rax+0x1],eax
	...
   140014095:	add    BYTE PTR [rax],al
   140014097:	add    BYTE PTR [rsi],ch
   140014099:	(bad)  
   14001409a:	push   r14
   14001409c:	push   rcx
   14001409d:	push   rcx
   14001409e:	ins    DWORD PTR es:[rdi],dx
   14001409f:	ins    BYTE PTR es:[rdi],dx
   1400140a0:	rex.WX push rbx
   1400140a2:	rex.RXB jb 0x140014106
   1400140a5:	ins    DWORD PTR es:[rdi],dx
   1400140a6:	ins    DWORD PTR es:[rdi],dx
   1400140a7:	(bad)  
   1400140a8:	jb     0x1400140ea
   1400140aa:	add    BYTE PTR [rax],al
   1400140ad:	add    BYTE PTR [rax],al
   1400140af:	add    BYTE PTR [rax+0x1400120],ch
	...
   1400140bd:	add    BYTE PTR [rax],al
   1400140bf:	add    BYTE PTR [rsi],ch
   1400140c1:	(bad)  
   1400140c2:	push   r14
   1400140c4:	imul   r13,QWORD PTR [r14+0x69],0x51407966
   1400140cc:	push   rcx
   1400140cd:	ins    DWORD PTR es:[rdi],dx
   1400140ce:	ins    BYTE PTR es:[rdi],dx
   1400140cf:	rex.WX push rbx
   1400140d1:	rex
   1400140d2:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rax],al
   1400140d7:	add    BYTE PTR [rax+0x1400120],ch
	...
   1400140e5:	add    BYTE PTR [rax],al
   1400140e7:	add    BYTE PTR [rsi],ch
   1400140e9:	(bad)  
   1400140ea:	push   r14
   1400140ec:	push   rsp
   1400140ed:	outs   dx,DWORD PTR ds:[rsi]
   1400140ee:	imul   esp,DWORD PTR [rbp+0x6e],0x69
   1400140f2:	jp     0x140014159
   1400140f4:	rex push rcx
   1400140f6:	push   rcx
   1400140f7:	ins    DWORD PTR es:[rdi],dx
   1400140f8:	ins    BYTE PTR es:[rdi],dx
   1400140f9:	rex.WX push rbx
   1400140fb:	rex
   1400140fc:	add    BYTE PTR [rax],al
   1400140ff:	add    BYTE PTR [rax],ah
   140014101:	(bad)  
   140014102:	add    BYTE PTR [rax+0x1],al
   140014105:	add    BYTE PTR [rax],al
   140014107:	add    BYTE PTR [rax],ah
   140014109:	(bad)  
   14001410a:	add    BYTE PTR [rax+0x1],al
   14001410d:	add    BYTE PTR [rax],al
   14001410f:	add    BYTE PTR [rax],ah
   140014111:	(bad)  
   140014112:	add    BYTE PTR [rax+0x1],al
   140014115:	add    BYTE PTR [rax],al
   140014117:	add    BYTE PTR [rax+0x1400120],ch
	...
   140014125:	add    BYTE PTR [rax],al
   140014127:	add    BYTE PTR [rsi],ch
   140014129:	(bad)  
   14001412a:	push   r14
   14001412c:	je     0x1400141a7
   14001412e:	jo     0x140014195
   140014130:	pop    rdi
   140014131:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140014138:	jne    0x1400140d2
   14001413a:	add    BYTE PTR [rax],al
   14001413c:	(bad)  
   14001413d:	(bad)  
   14001413e:	(bad)  
   14001413f:	(bad)  
   140014140:	(bad)  
   140014141:	(bad)  
   140014142:	(bad)  
   140014143:	(bad)  
   140014144:	(bad)  
   140014145:	(bad)  
   140014146:	(bad)  
   140014147:	inc    DWORD PTR [rcx]
   140014149:	add    BYTE PTR [rax],al
   14001414b:	add    BYTE PTR [rax],al
   14001414d:	add    BYTE PTR [rax],al
   14001414f:	add    BYTE PTR [rdx],dh
   140014151:	movabs ds:0x5dcd00002b992ddf,al
   14001415a:	and    dl,dl
   14001415c:	data16 (bad) 
   14001415e:	(bad)  
   14001415f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140015000 <.pdata>:
   140015000:	adc    BYTE PTR [rax],dl
   140015002:	add    BYTE PTR [rax],al
   140015004:	adc    BYTE PTR ss:[rax],al
   140015007:	add    BYTE PTR [rdx+rbp*1+0x1],al
   14001500b:	add    BYTE PTR [rax+0x10],al
   14001500e:	add    BYTE PTR [rax],al
   140015010:	adc    QWORD PTR [r8],r8
   140015013:	add    BYTE PTR [rax+0x24],bh
   140015016:	add    DWORD PTR [rax],eax
   140015018:	push   rax
   140015019:	adc    DWORD PTR [rax],eax
   14001501b:	add    BYTE PTR [rsi-0x73ffffee],dl
   140015021:	and    al,0x1
   140015023:	add    BYTE PTR [rax-0x5effffee],ah
   140015029:	adc    eax,DWORD PTR [rax]
   14001502b:	add    BYTE PTR [rsp+0x13b00001],bl
   140015032:	add    BYTE PTR [rax],al
   140015034:	std    
   140015035:	adc    eax,DWORD PTR [rax]
   140015037:	add    BYTE PTR [rsp+0x14000001],ch
   14001503e:	add    BYTE PTR [rax],al
   140015040:	add    dl,BYTE PTR [rip+0x24b40000]        # 0x164b55046
   140015046:	add    DWORD PTR [rax],eax
   140015048:	adc    BYTE PTR [rip+0x157b0000],dl        # 0x1557c504e
   14001504e:	add    BYTE PTR [rax],al
   140015050:	sub    r8b,BYTE PTR [rcx]
   140015053:	add    BYTE PTR [rax-0x50ffffeb],al
   140015059:	adc    eax,0x27700000
   14001505e:	add    DWORD PTR [rax],eax
   140015060:	mov    al,0x15
   140015062:	add    BYTE PTR [rax],al
   140015064:	fwait
   140015065:	(bad)  
   140015066:	add    BYTE PTR [rax],al
   140015068:	fsub   QWORD PTR [rcx+rax*1]
   14001506b:	add    BYTE PTR [rax+0x71000017],ah
   140015071:	sbb    DWORD PTR [rax],eax
   140015073:	add    BYTE PTR [rax+0x25],ch
   140015076:	add    DWORD PTR [rax],eax
   140015078:	sbb    BYTE PTR [rcx],0x0
   14001507b:	add    BYTE PTR [rbx],al
   14001507d:	(bad)  
   14001507e:	add    BYTE PTR [rax],al
   140015080:	lock and eax,0x1e100001
   140015086:	add    BYTE PTR [rax],al
   140015088:	or     BYTE PTR [rdi],bl
   14001508a:	add    BYTE PTR [rax],al
   14001508c:	sub    r8b,BYTE PTR [rcx]
   14001508f:	add    BYTE PTR [rax],dl
   140015091:	(bad)  
   140015092:	add    BYTE PTR [rax],al
   140015094:	cmp    BYTE PTR [rax],ah
   140015096:	add    BYTE PTR [rax],al
   140015098:	or     al,0x26
   14001509a:	add    DWORD PTR [rax],eax
   14001509c:	and    BYTE PTR [rax],al
   14001509f:	add    BYTE PTR [rcx+0x20],bh
   1400150a2:	add    BYTE PTR [rax],al
   1400150a4:	rex.W
   1400150a5:	add    DWORD PTR es:[rax],eax
   1400150a8:	jns    0x1400150ca
   1400150aa:	add    BYTE PTR [rax],al
   1400150ac:	fsub   DWORD PTR [rax]
   1400150ae:	add    BYTE PTR [rax],al
   1400150b0:	xor    BYTE PTR [rsi],ah
   1400150b2:	add    DWORD PTR [rax],eax
   1400150b4:	fsub   DWORD PTR [rax]
   1400150b6:	add    BYTE PTR [rax],al
   1400150b8:	out    0x20,al
   1400150ba:	add    BYTE PTR [rax],al
   1400150bc:	and    BYTE PTR [rsi],ah
   1400150be:	add    DWORD PTR [rax],eax
   1400150c0:	lock and BYTE PTR [rax],al
   1400150c3:	add    BYTE PTR [rip+0x8000021],cl        # 0x1480150ea
   1400150c9:	sub    eax,DWORD PTR [rcx]
   1400150cb:	add    BYTE PTR [rip+0x6a000021],cl        # 0x1aa0150f2
   1400150d1:	and    DWORD PTR [rax],eax
   1400150d3:	add    BYTE PTR [rsi+riz*1+0x1],ah
   1400150d7:	add    BYTE PTR [rdx+0x21],ch
   1400150da:	add    BYTE PTR [rax],al
   1400150dc:	outs   dx,DWORD PTR ds:[rsi]
   1400150dd:	and    DWORD PTR [rax],eax
   1400150df:	add    BYTE PTR [rsi+riz*1+0x1],dl
   1400150e3:	add    BYTE PTR [rax+0x21],dh
   1400150e6:	add    BYTE PTR [rax],al
   1400150e8:	mov    ah,BYTE PTR [rcx]
   1400150ea:	add    BYTE PTR [rax],al
   1400150ec:	shl    BYTE PTR [rsi],0x1
   1400150ef:	add    BYTE PTR [rdx+0x24000021],cl
   1400150f5:	and    al,BYTE PTR [rax]
   1400150f7:	add    BYTE PTR [rsi+riz*1+0x22240001],ah
   1400150fe:	add    BYTE PTR [rax],al
   140015100:	xor    ah,BYTE PTR [rdx]
   140015102:	add    BYTE PTR [rax],al
   140015104:	nop
   140015105:	add    DWORD PTR es:[rax],eax
   140015108:	xor    ah,BYTE PTR [rdx]
   14001510a:	add    BYTE PTR [rax],al
   14001510c:	cmp    esp,DWORD PTR [rdx]
   14001510e:	add    BYTE PTR [rax],al
   140015110:	and    BYTE PTR [rsi],0x1
   140015113:	add    BYTE PTR [rax+0x22],al
   140015116:	add    BYTE PTR [rax],al
   140015118:	jle    0x14001513c
   14001511a:	add    BYTE PTR [rax],al
   14001511c:	sub    r8b,BYTE PTR [rcx]
   14001511f:	add    BYTE PTR [rsi+0x22],bh
   140015122:	add    BYTE PTR [rax],al
   140015124:	(bad)
   140015127:	add    al,bl
   140015129:	add    DWORD PTR es:[rax],eax
   14001512c:	(bad)
   14001512f:	add    bl,cl
   140015131:	and    al,BYTE PTR [rax]
   140015133:	add    al,cl
   140015135:	add    DWORD PTR es:[rax],eax
   140015138:	shl    BYTE PTR [rdx],1
   14001513a:	add    BYTE PTR [rax],al
   14001513c:	or     ah,BYTE PTR [rax+rax*1]
   14001513f:	add    al,dh
   140015141:	add    DWORD PTR es:[rax],eax
   140015144:	adc    BYTE PTR [rax+rax*1],ah
   140015147:	add    cl,dl
   140015149:	and    al,0x0
   14001514b:	add    al,bl
   14001514d:	(bad)  
   14001514e:	add    DWORD PTR [rax],eax
   140015150:	loopne 0x140015176
   140015152:	add    BYTE PTR [rax],al
   140015154:	jmp    0x14001517a
   140015156:	add    BYTE PTR [rax],al
   140015158:	push   rsp
   140015159:	(bad)  
   14001515a:	add    DWORD PTR [rax],eax
   14001515c:	jmp    0x140015182
   14001515e:	add    BYTE PTR [rax],al
   140015160:	(bad)  
   140015161:	and    eax,0x27400000
   140015166:	add    DWORD PTR [rax],eax
   140015168:	(bad)  
   140015169:	and    eax,0x260e0000
   14001516e:	add    BYTE PTR [rax],al
   140015170:	sub    BYTE PTR [rdi],ah
   140015172:	add    DWORD PTR [rax],eax
   140015174:	(bad)  
   140015175:	add    BYTE PTR es:[rax],al
   140015178:	and    ah,BYTE PTR [rsi]
   14001517a:	add    BYTE PTR [rax],al
   14001517c:	sbb    BYTE PTR [rdi],ah
   14001517e:	add    DWORD PTR [rax],eax
   140015180:	and    ah,BYTE PTR [rsi]
   140015182:	add    BYTE PTR [rax],al
   140015184:	push   rsi
   140015185:	add    BYTE PTR es:[rax],al
   140015188:	or     BYTE PTR [rdi],ah
   14001518a:	add    DWORD PTR [rax],eax
   14001518c:	(bad)  
   14001518d:	add    BYTE PTR es:[rax],al
   140015190:	pop    rsi
   140015191:	(bad)  
   140015192:	add    BYTE PTR [rax],al
   140015194:	xor    BYTE PTR [rdx],ch
   140015196:	add    DWORD PTR [rax],eax
   140015198:	(bad)  
   140015199:	(bad)  
   14001519a:	add    BYTE PTR [rax],al
   14001519c:	push   rsp
   14001519d:	sub    BYTE PTR [rax],al
   14001519f:	add    BYTE PTR [rax+0x27],ah
   1400151a2:	add    DWORD PTR [rax],eax
   1400151a4:	(bad)  
   1400151a5:	sub    BYTE PTR [rax],al
   1400151a7:	add    ch,dh
   1400151a9:	sub    BYTE PTR [rax],al
   1400151ab:	add    BYTE PTR [rax+0x27],dh
   1400151ae:	add    DWORD PTR [rax],eax
   1400151b0:	add    BYTE PTR [rcx],ch
   1400151b2:	add    BYTE PTR [rax],al
   1400151b4:	fldcw  WORD PTR [rcx]
   1400151b6:	add    BYTE PTR [rax],al
   1400151b8:	jo     0x1400151e1
   1400151ba:	add    DWORD PTR [rax],eax
   1400151bc:	loopne 0x1400151e7
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	je     0x1400151ec
   1400151c2:	add    BYTE PTR [rax],al
   1400151c4:	jo     0x1400151ed
   1400151c6:	add    DWORD PTR [rax],eax
   1400151c8:	sub    BYTE PTR [rdx],0x0
   1400151cb:	add    BYTE PTR [rbx+0x41],al
   1400151ce:	add    BYTE PTR [rax],al
   1400151d0:	jl     0x1400151f9
   1400151d2:	add    DWORD PTR [rax],eax
   1400151d4:	(bad)  
   1400151d5:	add    BYTE PTR [r8],al
   1400151d8:	(bad)  
   1400151d9:	add    BYTE PTR [r8],al
   1400151dc:	cwde   
   1400151dd:	(bad)  
   1400151de:	add    DWORD PTR [rax],eax
   1400151e0:	loopne 0x140015223
   1400151e2:	add    BYTE PTR [rax],al
   1400151e4:	cmovb  eax,DWORD PTR [rax]
   1400151e7:	add    BYTE PTR [rax+0x27],dh
   1400151ea:	add    DWORD PTR [rax],eax
   1400151ec:	adc    BYTE PTR [rdx+0x0],al
   1400151ef:	add    BYTE PTR [rdi],bh
   1400151f1:	rex.X add BYTE PTR [rax],al
   1400151f4:	jo     0x14001521d
   1400151f6:	add    DWORD PTR [rax],eax
   1400151f8:	rex
   1400151f9:	rex.X add BYTE PTR [rax],al
   1400151fc:	(bad)  
   1400151fd:	rex.X add BYTE PTR [rax],al
   140015200:	jo     0x140015229
   140015202:	add    DWORD PTR [rax],eax
   140015204:	loopne 0x140015248
   140015206:	add    BYTE PTR [rax],al
   140015208:	int    0x53
   14001520a:	add    BYTE PTR [rax],al
   14001520c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001520d:	(bad)  
   14001520e:	add    DWORD PTR [rax],eax
   140015210:	rcl    BYTE PTR [rbx+0x0],1
   140015213:	add    BYTE PTR [rip+0xffffffffc0000060],cl        # 0x100015279
   140015219:	(bad)  
   14001521a:	add    DWORD PTR [rax],eax
   14001521c:	xor    BYTE PTR [rax+0x0],dh
   14001521f:	add    BYTE PTR [rsi],cl
   140015221:	jno    0x140015223
   140015223:	add    BYTE PTR [rax+0x27],ah
   140015226:	add    DWORD PTR [rax],eax
   140015228:	and    BYTE PTR [rcx+0x0],dh
   14001522b:	add    BYTE PTR [rax],dh
   14001522d:	jb     0x14001522f
   14001522f:	add    al,bl
   140015231:	(bad)  
   140015232:	add    DWORD PTR [rax],eax
   140015234:	shl    BYTE PTR [rdx+0x0],0x0
   140015238:	(bad)  
   140015239:	jae    0x14001523b
   14001523b:	add    BYTE PTR [rax],cl
   14001523d:	sub    eax,DWORD PTR [rcx]
   14001523f:	add    al,dl
   140015241:	jae    0x140015243
   140015243:	add    BYTE PTR [rbp-0x13ffff8c],cl
   140015249:	(bad)  
   14001524a:	add    DWORD PTR [rax],eax
   14001524c:	nop
   14001524d:	je     0x14001524f
   14001524f:	add    BYTE PTR [rcx],dh
   140015251:	jne    0x140015253
   140015253:	add    ah,dh
   140015255:	(bad)  
   140015256:	add    DWORD PTR [rax],eax
   140015258:	rex jne 0x14001525b
   14001525b:	add    BYTE PTR [rsi+0x44000075],dl
   140015261:	sub    al,BYTE PTR [rcx]
   140015263:	add    al,dl
   140015265:	jne    0x140015267
   140015267:	add    BYTE PTR [rdi+0x76],dh
   14001526a:	add    BYTE PTR [rax],al
   14001526c:	cld    
   14001526d:	(bad)  
   14001526e:	add    DWORD PTR [rax],eax
   140015270:	xor    BYTE PTR [rsi+0x0],0x0
   140015274:	(bad)  
   140015275:	ja     0x140015277
   140015277:	add    ah,bh
   140015279:	(bad)  
   14001527a:	add    DWORD PTR [rax],eax
   14001527c:	lock ja 0x14001527f
   14001527f:	add    BYTE PTR [rdi+0x78],ah
   140015282:	add    BYTE PTR [rax],al
   140015284:	cmp    al,0x28
   140015286:	add    DWORD PTR [rax],eax
   140015288:	addr32 js 0x14001528b
   14001528b:	add    dl,dh
   14001528d:	js     0x14001528f
   14001528f:	add    BYTE PTR [rax],ah
   140015291:	sub    BYTE PTR [rcx],al
   140015293:	add    dl,dh
   140015295:	js     0x140015297
   140015297:	add    BYTE PTR [rip+0x10000079],cl        # 0x150015316
   14001529d:	sub    BYTE PTR [rcx],al
   14001529f:	add    BYTE PTR [rax],dl
   1400152a1:	jns    0x1400152a3
   1400152a3:	add    BYTE PTR [rbp+0x79],dl
   1400152a6:	add    BYTE PTR [rax],al
   1400152a8:	je     0x1400152d2
   1400152aa:	add    DWORD PTR [rax],eax
   1400152ac:	push   rbp
   1400152ad:	jns    0x1400152af
   1400152af:	add    BYTE PTR [rdx],al
   1400152b1:	jp     0x1400152b3
   1400152b3:	add    BYTE PTR [rax+rbp*1+0x1],bl
   1400152b7:	add    BYTE PTR [rdx],al
   1400152b9:	jp     0x1400152bb
   1400152bb:	add    BYTE PTR [rax],ah
   1400152bd:	jp     0x1400152bf
   1400152bf:	add    BYTE PTR [rax+rbp*1+0x1],cl
   1400152c3:	add    BYTE PTR [rax],ah
   1400152c5:	jp     0x1400152c7
   1400152c7:	add    bl,bl
   1400152c9:	jge    0x1400152cb
   1400152cb:	add    BYTE PTR [rax+rbp*1+0x7de00001],al
   1400152d2:	add    BYTE PTR [rax],al
   1400152d4:	xor    edi,DWORD PTR [rsi+0x0]
   1400152d7:	add    BYTE PTR [rax+rbp*1+0x7e330001],dh
   1400152de:	add    BYTE PTR [rax],al
   1400152e0:	push   rax
   1400152e1:	jg     0x1400152e3
   1400152e3:	add    BYTE PTR [rax+0x50000128],ah
   1400152e9:	jg     0x1400152eb
   1400152eb:	add    BYTE PTR [rax-0x77],dh
   1400152ee:	add    BYTE PTR [rax],al
   1400152f0:	nop
   1400152f1:	sub    BYTE PTR [rcx],al
   1400152f3:	add    BYTE PTR [rax-0x77],dh
   1400152f6:	add    BYTE PTR [rax],al
   1400152f8:	xchg   esp,eax
   1400152f9:	mov    DWORD PTR [rax],eax
   1400152fb:	add    BYTE PTR [rcx+rbp*1],dl
   1400152fe:	add    DWORD PTR [rax],eax
   140015300:	xchg   esp,eax
   140015301:	mov    DWORD PTR [rax],eax
   140015303:	add    ah,cl
   140015305:	sahf   
   140015306:	add    BYTE PTR [rax],al
   140015308:	lock sub BYTE PTR [rcx],al
   14001530b:	add    ah,cl
   14001530d:	sahf   
   14001530e:	add    BYTE PTR [rax],al
   140015310:	rex.XB movabs al,ds:0xa050000128cc0000
   14001531a:	add    BYTE PTR [rax],al
   14001531c:	mov    ebx,0xd80000a1
   140015321:	(bad)  
   140015322:	add    DWORD PTR [rax],eax
   140015324:	shl    BYTE PTR [rcx-0x5e000000],0x0
   14001532b:	add    BYTE PTR [rax+0x29],ah
   14001532e:	add    DWORD PTR [rax],eax
   140015330:	add    BYTE PTR [rdx-0x546c0000],ah
   140015336:	add    BYTE PTR [rax],al
   140015338:	rex sub DWORD PTR [rcx],eax
   14001533b:	add    BYTE PTR [rbx+rbp*4-0x53c70000],dl
   140015342:	add    BYTE PTR [rax],al
   140015344:	and    BYTE PTR [rcx],ch
   140015346:	add    DWORD PTR [rax],eax
   140015348:	lods   al,BYTE PTR ds:[rsi]
   14001534a:	add    BYTE PTR [rax],al
   14001534c:	push   rax
   14001534d:	lods   al,BYTE PTR ds:[rsi]
   14001534e:	add    BYTE PTR [rax],al
   140015350:	mov    eax,0x50000129
   140015355:	lods   al,BYTE PTR ds:[rsi]
   140015356:	add    BYTE PTR [rax],al
   140015358:	pop    rsp
   140015359:	lods   al,BYTE PTR ds:[rsi]
   14001535a:	add    BYTE PTR [rax],al
   14001535c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001535d:	sub    DWORD PTR [rcx],eax
   14001535f:	add    BYTE PTR [rsp+rbp*4+0x0],bl
   140015363:	add    BYTE PTR [rbx-0x6fffff54],dl
   140015369:	sub    DWORD PTR [rcx],eax
   14001536b:	add    BYTE PTR [rbx-0x5dffff54],dl
   140015371:	lods   al,BYTE PTR ds:[rsi]
   140015372:	add    BYTE PTR [rax],al
   140015374:	sub    BYTE PTR [rcx],0x1
   140015377:	add    BYTE PTR [rdx-0x57ffff54],ah
   14001537d:	lods   al,BYTE PTR ds:[rsi]
   14001537e:	add    BYTE PTR [rax],al
   140015380:	jo     0x1400153ab
   140015382:	add    DWORD PTR [rax],eax
   140015384:	mov    al,0xac
   140015386:	add    BYTE PTR [rax],al
   140015388:	fldcw  WORD PTR [rax+rax*1+0x129ec00]
   14001538f:	add    cl,bl
   140015391:	lods   al,BYTE PTR ds:[rsi]
   140015392:	add    BYTE PTR [rax],al
   140015394:	cmp    eax,0xd80000ad
   140015399:	sub    DWORD PTR [rcx],eax
   14001539b:	add    BYTE PTR [rip+0xffffffffd20000ad],bh        # 0x11201544e
   1400153a1:	scas   eax,DWORD PTR es:[rdi]
   1400153a2:	add    BYTE PTR [rax],al
   1400153a4:	shr    BYTE PTR [rcx],0x1
   1400153a7:	add    BYTE PTR [rax],al
   1400153a9:	mov    al,0x0
   1400153ab:	add    BYTE PTR [rdi-0x50],bl
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	fsub   DWORD PTR [rdi]
   1400153b2:	add    DWORD PTR [rax],eax
   1400153b4:	(bad)  
   1400153b5:	mov    al,0x0
   1400153b7:	add    ch,cl
   1400153b9:	mov    al,0x0
   1400153bb:	add    ah,dh
   1400153bd:	sub    DWORD PTR [rcx],eax
   1400153bf:	add    al,dl
   1400153c1:	mov    al,0x0
   1400153c3:	add    ch,ch
   1400153c5:	mov    al,0x0
   1400153c7:	add    BYTE PTR [rax],cl
   1400153c9:	sub    eax,DWORD PTR [rcx]
   1400153cb:	add    ch,ch
   1400153cd:	mov    al,0x0
   1400153cf:	add    BYTE PTR [rdx-0x4f],cl
   1400153d2:	add    BYTE PTR [rax],al
   1400153d4:	adc    al,0x2a
   1400153d6:	add    DWORD PTR [rax],eax
   1400153d8:	rex.WX mov cl,0x0
   1400153db:	add    BYTE PTR [rdi-0x4f],cl
   1400153de:	add    BYTE PTR [rax],al
   1400153e0:	add    al,0x2a
   1400153e2:	add    DWORD PTR [rax],eax
   1400153e4:	push   rax
   1400153e5:	mov    cl,0x0
   1400153e7:	add    BYTE PTR [rbp-0x4e],dl
   1400153ea:	add    BYTE PTR [rax],al
   1400153ec:	xor    BYTE PTR [rdx],ch
   1400153ee:	add    DWORD PTR [rax],eax
   1400153f0:	(bad)  
   1400153f1:	mov    dl,0x0
   1400153f3:	add    dh,cl
   1400153f5:	mov    dl,0x0
   1400153f7:	add    BYTE PTR [rax+0x27],ah
   1400153fa:	add    DWORD PTR [rax],eax
   1400153fc:	shl    BYTE PTR [rdx-0x4cfc0000],1
   140015402:	add    BYTE PTR [rax],al
   140015404:	sub    r8b,BYTE PTR [rcx]
   140015407:	add    BYTE PTR [rax],dl
   140015409:	mov    bl,0x0
   14001540b:	add    BYTE PTR [rax],dh
   14001540d:	mov    bl,0x0
   14001540f:	add    BYTE PTR [rdx+rbp*1-0x4ccfffff],al
   140015416:	add    BYTE PTR [rax],al
   140015418:	pushf  
   140015419:	mov    bl,0x0
   14001541b:	add    BYTE PTR [rax+0x2a],dh
   14001541e:	add    DWORD PTR [rax],eax
   140015420:	pushf  
   140015421:	mov    bl,0x0
   140015423:	add    BYTE PTR [rsi+0x5c0000b3],ah
   140015429:	sub    al,BYTE PTR [rcx]
   14001542b:	add    BYTE PTR [rsi-0x54ffff4d],ah
   140015431:	mov    bl,0x0
   140015433:	add    BYTE PTR [rdx+rbp*1+0x1],cl
   140015437:	add    BYTE PTR [rbx+rsi*4-0x4beb0000],ch
   14001543e:	add    BYTE PTR [rax],al
   140015440:	(bad)  
   140015441:	(bad)  
   140015442:	add    DWORD PTR [rax],eax
   140015444:	xor    al,0xb4
   140015446:	add    BYTE PTR [rax],al
   140015448:	cdq    
   140015449:	mov    ah,0x0
   14001544b:	add    BYTE PTR [rdx+rbp*1-0x4b63ffff],al
   140015452:	add    BYTE PTR [rax],al
   140015454:	sbb    al,0xb6
   140015456:	add    BYTE PTR [rax],al
   140015458:	mov    WORD PTR [rdx],gs
   14001545a:	add    DWORD PTR [rax],eax
   14001545c:	sbb    al,0xb6
   14001545e:	add    BYTE PTR [rax],al
   140015460:	add    DWORD PTR [rdi+0x2b080000],esi
   140015466:	add    DWORD PTR [rax],eax
   140015468:	add    al,0xb7
   14001546a:	add    BYTE PTR [rax],al
   14001546c:	(bad)  
   14001546d:	mov    bh,0x0
   14001546f:	add    BYTE PTR [rax],cl
   140015471:	sub    eax,DWORD PTR [rcx]
   140015473:	add    BYTE PTR [rdi+rsi*4],bl
   140015476:	add    BYTE PTR [rax],al
   140015478:	addr32 mov bh,0x0
   14001547b:	add    BYTE PTR [rax+0x6800012a],bh
   140015481:	mov    bh,0x0
   140015483:	add    dh,al
   140015485:	mov    bh,0x0
   140015487:	add    al,ah
   140015489:	sub    al,BYTE PTR [rcx]
   14001548b:	add    al,cl
   14001548d:	mov    bh,0x0
   14001548f:	add    BYTE PTR [rcx],cl
   140015491:	mov    eax,0x2b080000
   140015496:	add    DWORD PTR [rax],eax
   140015498:	or     al,0xb8
   14001549a:	add    BYTE PTR [rax],al
   14001549c:	and    al,0xb8
   14001549e:	add    BYTE PTR [rax],al
   1400154a0:	or     BYTE PTR [rbx],ch
   1400154a2:	add    DWORD PTR [rax],eax
   1400154a4:	sub    al,0xb8
   1400154a6:	add    BYTE PTR [rax],al
   1400154a8:	fdivr  QWORD PTR [rax+0x2b100000]
   1400154ae:	add    DWORD PTR [rax],eax
   1400154b0:	fdivr  QWORD PTR [rax-0x470d0000]
   1400154b6:	add    BYTE PTR [rax],al
   1400154b8:	or     BYTE PTR [rbx],ch
   1400154ba:	add    DWORD PTR [rax],eax
   1400154bc:	hlt    
   1400154bd:	mov    eax,0xb92c0000
   1400154c2:	add    BYTE PTR [rax],al
   1400154c4:	jo     0x1400154ed
   1400154c6:	add    DWORD PTR [rax],eax
   1400154c8:	sub    al,0xb9
   1400154ca:	add    BYTE PTR [rax],al
   1400154cc:	fs mov ecx,0x27700000
   1400154d2:	add    DWORD PTR [rax],eax
   1400154d4:	lock mov ecx,0xba310000
   1400154da:	add    BYTE PTR [rax],al
   1400154dc:	xor    BYTE PTR [rbx],ch
   1400154de:	add    DWORD PTR [rax],eax
   1400154e0:	rex.R mov edx,0xbaf70000
   1400154e6:	add    BYTE PTR [rax],al
   1400154e8:	push   rax
   1400154e9:	sub    eax,DWORD PTR [rcx]
   1400154eb:	add    BYTE PTR [rax],ah
   1400154ed:	mov    ebx,0xbb5c0000
   1400154f2:	add    BYTE PTR [rax],al
   1400154f4:	enter  0x124,0x0
   1400154f8:	(bad)  
   1400154f9:	mov    ebx,0xbb9e0000
   1400154fe:	add    BYTE PTR [rax],al
   140015500:	push   rsp
   140015501:	and    eax,0xbb9e0001
   140015506:	add    BYTE PTR [rax],al
   140015508:	mov    edx,0xb00000bb
   14001550d:	sub    al,BYTE PTR [rcx]
   14001550f:	add    BYTE PTR [rdx-0x6ffff45],bh
   140015515:	mov    ebx,0x2ab00000
   14001551a:	add    DWORD PTR [rax],eax
   14001551c:	stc    
   14001551d:	mov    ebx,0xbc230000
   140015522:	add    BYTE PTR [rax],al
   140015524:	mov    al,0x2a
   140015526:	add    DWORD PTR [rax],eax
   140015528:	and    edi,DWORD PTR [rax+rax*1+0xbc3c00]
   14001552f:	add    BYTE PTR [rax+0x4000012a],dh
   140015535:	mov    esp,0xbc610000
   14001553a:	add    BYTE PTR [rax],al
   14001553c:	mov    al,0x2a
   14001553e:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

0000000140016000 <.rsrc>:
	...
   140016008:	add    al,0x0
   14001600a:	add    BYTE PTR [rax],al
   14001600c:	add    BYTE PTR [rax],al
   14001600e:	add    DWORD PTR [rax],eax
   140016010:	sbb    BYTE PTR [rax],al
   140016012:	add    BYTE PTR [rax],al
   140016014:	sbb    BYTE PTR [rax],al
   140016016:	add    BYTE PTR [rax+0x0],al
   14001601c:	add    BYTE PTR [rax],al
   14001601e:	add    BYTE PTR [rax],al
   140016020:	add    al,0x0
   140016022:	add    BYTE PTR [rax],al
   140016024:	add    BYTE PTR [rax],al
   140016026:	add    DWORD PTR [rax],eax
   140016028:	add    DWORD PTR [rax],eax
   14001602a:	add    BYTE PTR [rax],al
   14001602c:	xor    BYTE PTR [rax],al
   14001602e:	add    BYTE PTR [rax+0x0],al
   140016034:	add    BYTE PTR [rax],al
   140016036:	add    BYTE PTR [rax],al
   140016038:	add    al,0x0
   14001603a:	add    BYTE PTR [rax],al
   14001603c:	add    BYTE PTR [rax],al
   14001603e:	add    DWORD PTR [rax],eax
   140016040:	or     DWORD PTR [rax+rax*1],eax
   140016043:	add    BYTE PTR [rax+0x0],cl
   140016046:	add    BYTE PTR [rax],al
   140016048:	pop    rax
   140016049:	(bad)  
   14001604a:	add    DWORD PTR [rax],eax
   14001604c:	push   0x3
   14001604e:	add    BYTE PTR [rax],al
   140016050:	in     al,0x4
   140016052:	add    BYTE PTR [rax],al
   140016054:	add    BYTE PTR [rax],al
   140016056:	add    BYTE PTR [rax],al
   140016058:	cmp    al,0x61
   14001605a:	jae    0x1400160cf
   14001605c:	gs ins DWORD PTR es:[rdi],dx
   14001605e:	(bad)  
   14001605f:	ins    BYTE PTR es:[rdi],dx
   140016060:	jns    0x140016082
   140016062:	js     0x1400160d1
   140016064:	ins    BYTE PTR es:[rdi],dx
   140016065:	outs   dx,BYTE PTR ds:[rsi]
   140016066:	jae    0x1400160a5
   140016068:	and    dh,BYTE PTR [rbp+0x72]
   14001606b:	outs   dx,BYTE PTR ds:[rsi]
   14001606c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001606f:	push   0x73616d65
   140016074:	sub    eax,0x7263696d
   140016079:	outs   dx,DWORD PTR ds:[rsi]
   14001607a:	jae    0x1400160eb
   14001607c:	data16 je 0x1400160ac
   14001607f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140016082:	cmp    ah,BYTE PTR [rcx+0x73]
   140016085:	ins    DWORD PTR es:[rdi],dx
   140016086:	cs jbe 0x1400160ba
   140016089:	and    ah,BYTE PTR [rax]
   14001608b:	ins    DWORD PTR es:[rdi],dx
   14001608c:	(bad)  
   14001608d:	outs   dx,BYTE PTR ds:[rsi]
   14001608e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140016095:	jb     0x14001610a
   140016097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001609e:	xor    BYTE PTR [rdx],ah
   1400160a0:	ds or  eax,0x3c20200a
   1400160a6:	je     0x14001611a
   1400160a8:	jne    0x14001611d
   1400160aa:	je     0x1400160f5
   1400160ac:	outs   dx,BYTE PTR ds:[rsi]
   1400160ad:	outs   dx,WORD PTR ds:[rsi]
   1400160af:	and    BYTE PTR [rax+0x6d],bh
   1400160b2:	ins    BYTE PTR es:[rdi],dx
   1400160b3:	outs   dx,BYTE PTR ds:[rsi]
   1400160b4:	jae    0x1400160f3
   1400160b6:	and    dh,BYTE PTR [rbp+0x72]
   1400160b9:	outs   dx,BYTE PTR ds:[rsi]
   1400160ba:	cmp    dh,BYTE PTR [rbx+0x63]
   1400160bd:	push   0x73616d65
   1400160c2:	sub    eax,0x7263696d
   1400160c7:	outs   dx,DWORD PTR ds:[rsi]
   1400160c8:	jae    0x140016139
   1400160ca:	data16 je 0x1400160fa
   1400160cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400160d0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400160d3:	ins    DWORD PTR es:[rdi],dx
   1400160d4:	cs jbe 0x14001610a
   1400160d7:	and    bh,BYTE PTR [rsi]
   1400160d9:	or     eax,0x2020200a
   1400160de:	and    BYTE PTR [rbx+rsi*2],bh
   1400160e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400160e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400160ed:	and    BYTE PTR [rax],ah
   1400160ef:	and    BYTE PTR [rax],ah
   1400160f1:	cmp    al,0x72
   1400160f3:	gs jno 0x14001616b
   1400160f6:	gs jae 0x14001616d
   1400160f9:	gs fs push rax
   1400160fc:	jb     0x140016167
   1400160fe:	jbe    0x140016169
   140016100:	ins    BYTE PTR es:[rdi],dx
   140016101:	gs addr32 gs jae 0x140016144
   140016106:	or     eax,0x2020200a
   14001610b:	and    BYTE PTR [rax],ah
   14001610d:	and    BYTE PTR [rax],ah
   14001610f:	and    BYTE PTR [rdx+rsi*2],bh
   140016112:	gs jno 0x14001618a
   140016115:	gs jae 0x14001618c
   140016118:	gs fs rex.RB js 0x140016182
   14001611d:	movsxd esi,DWORD PTR [rbp+0x74]
   140016120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140016127:	ins    BYTE PTR es:[rdi],dx
   140016128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001612c:	gs ins BYTE PTR es:[rdi],dx
   14001612e:	cmp    eax,0x49736122
   140016133:	outs   dx,BYTE PTR ds:[rsi]
   140016134:	jbe    0x1400161a5
   140016136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001613a:	and    BYTE PTR [rbp+0x69],dh
   14001613d:	movsxd esp,DWORD PTR [r11+0x65]
   140016141:	jae    0x1400161b6
   140016143:	cmp    eax,0x6c616622
   140016148:	jae    0x1400161af
   14001614a:	and    bh,BYTE PTR [rsi]
   14001614c:	cmp    al,0x2f
   14001614e:	jb     0x1400161b5
   140016150:	jno    0x1400161c7
   140016152:	gs jae 0x1400161c9
   140016155:	gs fs rex.RB js 0x1400161bf
   14001615a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001615d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140016164:	ins    BYTE PTR es:[rdi],dx
   140016165:	ds or  eax,0x2020200a
   14001616b:	and    BYTE PTR [rax],ah
   14001616d:	and    BYTE PTR [rdi+rbp*1],bh
   140016170:	jb     0x1400161d7
   140016172:	jno    0x1400161e9
   140016174:	gs jae 0x1400161eb
   140016177:	gs fs push rax
   14001617a:	jb     0x1400161e5
   14001617c:	jbe    0x1400161e7
   14001617e:	ins    BYTE PTR es:[rdi],dx
   14001617f:	gs addr32 gs jae 0x1400161c2
   140016184:	or     eax,0x2020200a
   140016189:	and    BYTE PTR [rdi+rbp*1],bh
   14001618c:	jae    0x1400161f3
   14001618e:	movsxd esi,DWORD PTR [rbp+0x72]
   140016191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140016199:	cmp    al,0x2f
   14001619b:	je     0x14001620f
   14001619d:	jne    0x140016212
   14001619f:	je     0x1400161ea
   1400161a1:	outs   dx,BYTE PTR ds:[rsi]
   1400161a2:	outs   dx,WORD PTR ds:[rsi]
   1400161a4:	ds or  eax,0x3c20200a
   1400161aa:	fs gs jo 0x140016213
   1400161ae:	outs   dx,BYTE PTR ds:[rsi]
   1400161af:	fs outs dx,BYTE PTR gs:[rsi]
   1400161b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400161b5:	or     eax,0x2020200a
   1400161ba:	and    BYTE PTR [rsp+riz*2],bh
   1400161bd:	gs jo  0x140016225
   1400161c0:	outs   dx,BYTE PTR ds:[rsi]
   1400161c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400161c4:	je     0x140016207
   1400161c6:	jae    0x14001623b
   1400161c8:	gs ins DWORD PTR es:[rdi],dx
   1400161ca:	(bad)  
   1400161cb:	ins    BYTE PTR es:[rdi],dx
   1400161cc:	jns    0x14001620c
   1400161ce:	or     eax,0x2020200a
   1400161d3:	and    BYTE PTR [rax],ah
   1400161d5:	and    BYTE PTR [rcx+riz*2],bh
   1400161d8:	jae    0x14001624d
   1400161da:	gs ins DWORD PTR es:[rdi],dx
   1400161dc:	(bad)  
   1400161dd:	ins    BYTE PTR es:[rdi],dx
   1400161de:	jns    0x140016229
   1400161e0:	fs outs dx,BYTE PTR gs:[rsi]
   1400161e3:	je     0x14001624e
   1400161e5:	je     0x140016260
   1400161e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400161eb:	gs cmp eax,0x6e697722
   1400161f1:	xor    esi,DWORD PTR [rdx]
   1400161f3:	and    ah,BYTE PTR [rax]
   1400161f5:	outs   dx,BYTE PTR ds:[rsi]
   1400161f6:	(bad)  
   1400161f7:	ins    DWORD PTR es:[rdi],dx
   1400161f8:	gs cmp eax,0x63694d22
   1400161fe:	jb     0x14001626f
   140016200:	jae    0x140016271
   140016202:	data16 je 0x140016233
   140016205:	push   rdi
   140016206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001620d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001620f:	ins    DWORD PTR es:[rdi],dx
   140016210:	ins    DWORD PTR es:[rdi],dx
   140016211:	outs   dx,DWORD PTR ds:[rsi]
   140016212:	outs   dx,BYTE PTR ds:[rsi]
   140016213:	sub    eax,0x746e6f43
   140016218:	jb     0x140016289
   14001621a:	ins    BYTE PTR es:[rdi],dx
   14001621b:	jae    0x14001623f
   14001621d:	and    BYTE PTR [rsi+0x65],dh
   140016220:	jb     0x140016295
   140016222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140016229:	xor    BYTE PTR [rsi],ch
   14001622b:	xor    BYTE PTR [rsi],ch
   14001622d:	xor    BYTE PTR [rdx],ah
   14001622f:	and    BYTE PTR [rax+0x75],dh
   140016232:	(bad)  
   140016233:	ins    BYTE PTR es:[rdi],dx
   140016234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001623b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14001623f:	and    dh,BYTE PTR [rsi]
   140016241:	xor    eax,0x36623539
   140016246:	xor    al,0x31
   140016248:	xor    al,0x34
   14001624a:	movsxd esp,DWORD PTR [rbx+0x66]
   14001624d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140016251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140016255:	addr32 jne 0x1400162b9
   140016258:	addr32 gs cmp eax,0x20222a22
   14001625f:	jo     0x1400162d3
   140016261:	outs   dx,DWORD PTR ds:[rsi]
   140016262:	movsxd esp,DWORD PTR [rbp+0x73]
   140016265:	jae    0x1400162d6
   140016267:	jb     0x1400162aa
   140016269:	jb     0x1400162ce
   14001626b:	push   0x63657469
   140016270:	je     0x1400162e7
   140016272:	jb     0x1400162d9
   140016274:	cmp    eax,0x3e222a22
   140016279:	cmp    al,0x2f
   14001627b:	(bad)  
   14001627c:	jae    0x1400162f1
   14001627e:	gs ins DWORD PTR es:[rdi],dx
   140016280:	(bad)  
   140016281:	ins    BYTE PTR es:[rdi],dx
   140016282:	jns    0x1400162cd
   140016284:	fs outs dx,BYTE PTR gs:[rsi]
   140016287:	je     0x1400162f2
   140016289:	je     0x140016304
   14001628b:	ds or  eax,0x2020200a
   140016291:	and    BYTE PTR [rdi+rbp*1],bh
   140016294:	fs gs jo 0x1400162fd
   140016298:	outs   dx,BYTE PTR ds:[rsi]
   140016299:	fs outs dx,BYTE PTR gs:[rsi]
   14001629c:	je     0x1400162df
   14001629e:	jae    0x140016313
   1400162a0:	gs ins DWORD PTR es:[rdi],dx
   1400162a2:	(bad)  
   1400162a3:	ins    BYTE PTR es:[rdi],dx
   1400162a4:	jns    0x1400162e4
   1400162a6:	or     eax,0x3c20200a
   1400162ab:	(bad)  
   1400162ac:	fs gs jo 0x140016315
   1400162b0:	outs   dx,BYTE PTR ds:[rsi]
   1400162b1:	fs outs dx,BYTE PTR gs:[rsi]
   1400162b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400162b7:	or     eax,0x3c20200a
   1400162bc:	fs gs jo 0x140016325
   1400162c0:	outs   dx,BYTE PTR ds:[rsi]
   1400162c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400162c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400162c7:	or     eax,0x2020200a
   1400162cc:	and    BYTE PTR [rsp+riz*2],bh
   1400162cf:	gs jo  0x140016337
   1400162d2:	outs   dx,BYTE PTR ds:[rsi]
   1400162d3:	fs outs dx,BYTE PTR gs:[rsi]
   1400162d6:	je     0x140016319
   1400162d8:	jae    0x14001634d
   1400162da:	gs ins DWORD PTR es:[rdi],dx
   1400162dc:	(bad)  
   1400162dd:	ins    BYTE PTR es:[rdi],dx
   1400162de:	jns    0x14001631e
   1400162e0:	or     eax,0x2020200a
   1400162e5:	and    BYTE PTR [rax],ah
   1400162e7:	and    BYTE PTR [rcx+riz*2],bh
   1400162ea:	jae    0x14001635f
   1400162ec:	gs ins DWORD PTR es:[rdi],dx
   1400162ee:	(bad)  
   1400162ef:	ins    BYTE PTR es:[rdi],dx
   1400162f0:	jns    0x14001633b
   1400162f2:	fs outs dx,BYTE PTR gs:[rsi]
   1400162f5:	je     0x140016360
   1400162f7:	je     0x140016372
   1400162f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400162fd:	gs cmp eax,0x6e697722
   140016303:	xor    esi,DWORD PTR [rdx]
   140016305:	and    ah,BYTE PTR [rax]
   140016307:	outs   dx,BYTE PTR ds:[rsi]
   140016308:	(bad)  
   140016309:	ins    DWORD PTR es:[rdi],dx
   14001630a:	gs cmp eax,0x63694d22
   140016310:	jb     0x140016381
   140016312:	jae    0x140016383
   140016314:	data16 je 0x140016345
   140016317:	push   rsi
   140016318:	rex.XB cmp DWORD PTR [r8],esi
   14001631b:	cs rex.XB push r10
   14001631e:	push   rsp
   14001631f:	and    ah,BYTE PTR [rax]
   140016321:	jbe    0x140016388
   140016323:	jb     0x140016398
   140016325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14001632c:	xor    BYTE PTR [rsi],ch
   14001632e:	xor    dh,BYTE PTR [rcx]
   140016330:	xor    BYTE PTR [rdx],dh
   140016332:	xor    ch,BYTE PTR [rsi]
   140016334:	cmp    BYTE PTR [rdx],ah
   140016336:	and    BYTE PTR [rax+0x72],dh
   140016339:	outs   dx,DWORD PTR ds:[rsi]
   14001633a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001633d:	jae    0x1400163ae
   14001633f:	jb     0x140016382
   140016341:	jb     0x1400163a6
   140016343:	push   0x63657469
   140016348:	je     0x1400163bf
   14001634a:	jb     0x1400163b1
   14001634c:	cmp    eax,0x646d6122
   140016351:	ss xor al,0x22
   140016354:	and    BYTE PTR [rax+0x75],dh
   140016357:	(bad)  
   140016358:	ins    BYTE PTR es:[rdi],dx
   140016359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140016360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140016364:	and    dh,BYTE PTR [rcx]
   140016366:	movsxd di,DWORD PTR [rax]
   140016369:	(bad)  
   14001636b:	(bad)  
   14001636c:	cmp    DWORD PTR [rcx+0x31],esp
   14001636f:	xor    DWORD PTR gs:[rax],edi
   140016372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   140016376:	ds cmp al,0x2f
   140016379:	(bad)  
   14001637a:	jae    0x1400163ef
   14001637c:	gs ins DWORD PTR es:[rdi],dx
   14001637e:	(bad)  
   14001637f:	ins    BYTE PTR es:[rdi],dx
   140016380:	jns    0x1400163cb
   140016382:	fs outs dx,BYTE PTR gs:[rsi]
   140016385:	je     0x1400163f0
   140016387:	je     0x140016402
   140016389:	ds or  eax,0x2020200a
   14001638f:	and    BYTE PTR [rdi+rbp*1],bh
   140016392:	fs gs jo 0x1400163fb
   140016396:	outs   dx,BYTE PTR ds:[rsi]
   140016397:	fs outs dx,BYTE PTR gs:[rsi]
   14001639a:	je     0x1400163dd
   14001639c:	jae    0x140016411
   14001639e:	gs ins DWORD PTR es:[rdi],dx
   1400163a0:	(bad)  
   1400163a1:	ins    BYTE PTR es:[rdi],dx
   1400163a2:	jns    0x1400163e2
   1400163a4:	or     eax,0x3c20200a
   1400163a9:	(bad)  
   1400163aa:	fs gs jo 0x140016413
   1400163ae:	outs   dx,BYTE PTR ds:[rsi]
   1400163af:	fs outs dx,BYTE PTR gs:[rsi]
   1400163b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400163b5:	or     eax,0x612f3c0a
   1400163ba:	jae    0x14001642f
   1400163bc:	gs ins DWORD PTR es:[rdi],dx
   1400163be:	(bad)  
   1400163bf:	ins    BYTE PTR es:[rdi],dx
   1400163c0:	jns    0x140016400
   1400163c2:	push   rax
   1400163c3:	rex.B

Disassembly of section .reloc:

0000000140017000 <.reloc>:
   140017000:	add    al,al
   140017002:	add    BYTE PTR [rax],al
   140017004:	cld    
   140017005:	add    BYTE PTR [rax],al
   140017007:	add    al,dh
   140017009:	movabs ds:0xa438a430a410a408,eax
   140017012:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017014:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017016:	push   rax
   140017017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017018:	push   0x78a470a4
   14001701d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001701e:	and    BYTE PTR [rax+rcx*4-0x575b6f5c],0xa6
   140017026:	mov    al,0xa6
   140017028:	mov    eax,0xc8a6c0a6
   14001702d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001702e:	shl    BYTE PTR [rsi-0x591f5928],1
   140017034:	call   0x138a860df
   140017039:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001703a:	add    BYTE PTR [rdi-0x54f75500],ah
   140017040:	adc    BYTE PTR [rbx-0x54df54e8],ch
   140017046:	sub    BYTE PTR [rbx-0x54c754d0],ch
   14001704c:	rex stos DWORD PTR es:[rdi],eax
   14001704e:	stos   QWORD PTR es:[rdi],rax
   140017050:	push   rax
   140017051:	stos   DWORD PTR es:[rdi],eax
   140017052:	pop    rax
   140017053:	stos   DWORD PTR es:[rdi],eax
   140017054:	(bad)  
   140017055:	stos   DWORD PTR es:[rdi],eax
   140017056:	push   0x78ab70ab
   14001705b:	stos   DWORD PTR es:[rdi],eax
   14001705c:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140017063:	stos   DWORD PTR es:[rdi],eax
   140017064:	movabs al,ds:0xc0abb8abb0aba8ab
   14001706d:	stos   DWORD PTR es:[rdi],eax
   14001706e:	enter  0xd0ab,0xab
   140017072:	fsubr  DWORD PTR [rbx-0x54175420]
   140017078:	lock stos DWORD PTR es:[rdi],eax
   14001707a:	clc    
   14001707b:	stos   DWORD PTR es:[rdi],eax
   14001707c:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140017083:	lods   al,BYTE PTR ds:[rsi]
   140017084:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14001708b:	lods   al,BYTE PTR ds:[rsi]
   14001708c:	lods   al,BYTE PTR ds:[rsi]
   14001708e:	rex.W lods al,BYTE PTR ds:[rsi]
   140017090:	push   rax
   140017091:	lods   al,BYTE PTR ds:[rsi]
   140017092:	pop    rax
   140017093:	lods   al,BYTE PTR ds:[rsi]
   140017094:	(bad)  
   140017095:	lods   al,BYTE PTR ds:[rsi]
   140017096:	push   0x78ac70ac
   14001709b:	lods   al,BYTE PTR ds:[rsi]
   14001709c:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400170a4:	movabs al,ds:0xc0acb8acb0aca8ac
   1400170ad:	lods   al,BYTE PTR ds:[rsi]
   1400170ae:	enter  0xd0ac,0xac
   1400170b2:	fsubr  DWORD PTR [rax+riz*8-0x7531754]
   1400170b9:	lods   al,BYTE PTR ds:[rsi]
   1400170ba:	add    BYTE PTR [rbp-0x52ef52f8],ch
   1400170c0:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400170c6:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400170cc:	lods   rax,QWORD PTR ds:[rsi]
   1400170ce:	push   rax
   1400170cf:	lods   eax,DWORD PTR ds:[rsi]
   1400170d0:	pop    rax
   1400170d1:	lods   eax,DWORD PTR ds:[rsi]
   1400170d2:	(bad)  
   1400170d3:	lods   eax,DWORD PTR ds:[rsi]
   1400170d4:	push   0x78ad70ad
   1400170d9:	lods   eax,DWORD PTR ds:[rsi]
   1400170da:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400170e1:	lods   eax,DWORD PTR ds:[rsi]
   1400170e2:	movabs al,ds:0xc0adb8adb0ada8ad
   1400170eb:	lods   eax,DWORD PTR ds:[rsi]
   1400170ec:	shr    BYTE PTR [rbp-0x521f5228],1
   1400170f2:	call   0x138af61a4
   1400170f7:	lods   eax,DWORD PTR ds:[rsi]
   1400170f8:	add    BYTE PTR [rsi+0x20000000],ch
   1400170fe:	add    DWORD PTR [rax],eax
   140017100:	or     al,0x0
   140017102:	add    BYTE PTR [rax],al
   140017104:	movabs al,ds:0x2000014000a0a8a0
   14001710d:	add    BYTE PTR [rax],al
   14001710f:	add    BYTE PTR [rax],al
   140017111:	movabs al,ds:0xa088a060a030a008
   14001711a:	mov    al,0xa0
   14001711c:	fsub   DWORD PTR [rax-0x5ef75f00]
   140017122:	adc    BYTE PTR [rcx+0xa118],ah
	...
