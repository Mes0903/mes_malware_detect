
046041aba6ba77534c36bb0c2496408d23c6a09f930c46b392f1edc70dfd66de.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	jl     0x1001022
 1001002:	add    DWORD PTR [eax],eax
 1001004:	mov    ah,BYTE PTR [eax]
 1001006:	add    DWORD PTR [eax],eax
 1001008:	pushf  
 1001009:	and    BYTE PTR [ecx],al
 100100b:	add    BYTE PTR [esi-0x3ffffee0],ch
 1001011:	and    BYTE PTR [ecx],al
 1001013:	add    al,dl
 1001015:	and    BYTE PTR [ecx],al
 1001017:	add    al,ch
 1001019:	and    BYTE PTR [ecx],al
 100101b:	add    BYTE PTR [eax],al
 100101d:	and    DWORD PTR [ecx],eax
 100101f:	add    BYTE PTR [eax],al
 1001021:	add    BYTE PTR [eax],al
 1001023:	add    BYTE PTR [ebp+eiz*1+0x1],dh
 1001027:	add    BYTE PTR [edx+0x25],ah
 100102a:	add    DWORD PTR [eax],eax
 100102c:	adc    DWORD PTR [eax],eax
 100102e:	add    BYTE PTR [eax+0x0],al
 1001034:	inc    eax
 1001035:	and    eax,DWORD PTR [ecx]
 1001037:	add    BYTE PTR [eax+0x23],dh
 100103a:	add    DWORD PTR [eax],eax
 100103c:	bound  esp,QWORD PTR [ebx]
 100103e:	add    DWORD PTR [eax],eax
 1001040:	push   esi
 1001041:	and    eax,DWORD PTR [ecx]
 1001043:	add    BYTE PTR [eax],dh
 1001045:	and    eax,DWORD PTR [ecx]
 1001047:	add    BYTE PTR [edx],bl
 1001049:	and    eax,DWORD PTR [ecx]
 100104b:	add    BYTE PTR [edx],cl
 100104d:	and    eax,DWORD PTR [ecx]
 100104f:	add    dl,bh
 1001051:	and    al,BYTE PTR [ecx]
 1001053:	add    BYTE PTR [eax],al
 1001055:	add    BYTE PTR [eax],al
 1001057:	add    BYTE PTR [esi],al
 1001059:	and    al,BYTE PTR [ecx]
 100105b:	add    BYTE PTR [edx],dl
 100105d:	and    al,BYTE PTR [ecx]
 100105f:	add    BYTE PTR [edx+eiz*1],ah
 1001062:	add    DWORD PTR [eax],eax
 1001064:	xor    BYTE PTR [edx],ah
 1001066:	add    DWORD PTR [eax],eax
 1001068:	cmp    al,0x22
 100106a:	add    DWORD PTR [eax],eax
 100106c:	dec    edx
 100106d:	and    al,BYTE PTR [ecx]
 100106f:	add    BYTE PTR [eax+0x22],bl
 1001072:	add    DWORD PTR [eax],eax
 1001074:	repnz and DWORD PTR [ecx],eax
 1001077:	add    BYTE PTR [edx+eiz*1+0x1],bh
 100107b:	add    BYTE PTR [edx-0x5dfffede],dl
 1001081:	and    al,BYTE PTR [ecx]
 1001083:	add    BYTE PTR [edx-0x39fffede],dh
 1001089:	and    al,BYTE PTR [ecx]
 100108b:	add    dh,dl
 100108d:	and    al,BYTE PTR [ecx]
 100108f:	add    ah,ah
 1001091:	and    DWORD PTR [ecx],eax
 1001093:	add    ah,dl
 1001095:	and    DWORD PTR [ecx],eax
 1001097:	add    ah,al
 1001099:	and    DWORD PTR [ecx],eax
 100109b:	add    BYTE PTR [edx+0x5c000121],dh
 10010a1:	and    DWORD PTR [ecx],eax
 10010a3:	add    BYTE PTR [ecx+eiz*1+0x21920001],ah
 10010aa:	add    DWORD PTR [eax],eax
 10010ac:	and    BYTE PTR [ecx],0x1
 10010af:	add    BYTE PTR [eax+0x22],dh
 10010b2:	add    DWORD PTR [eax],eax
 10010b4:	lock sub DWORD PTR [ecx],eax
 10010b7:	add    al,ah
 10010b9:	sub    DWORD PTR [ecx],eax
 10010bb:	add    al,dl
 10010bd:	sub    DWORD PTR [ecx],eax
 10010bf:	add    dl,al
 10010c1:	sub    DWORD PTR [ecx],eax
 10010c3:	add    BYTE PTR [eax-0x5bfffed7],dh
 10010c9:	sub    DWORD PTR [ecx],eax
 10010cb:	add    BYTE PTR [eax-0x7ffffed7],dl
 10010d1:	sub    DWORD PTR [ecx],eax
 10010d3:	add    BYTE PTR [esi+0x29],ch
 10010d6:	add    DWORD PTR [eax],eax
 10010d8:	pop    esi
 10010d9:	sub    DWORD PTR [ecx],eax
 10010db:	add    BYTE PTR [ecx+ebp*1+0x1],cl
 10010df:	add    BYTE PTR [ecx+ebp*1+0x1],al
 10010e3:	add    BYTE PTR [ecx+ebp*1],dh
 10010e6:	add    DWORD PTR [eax],eax
 10010e8:	push   ds
 10010e9:	sub    DWORD PTR [ecx],eax
 10010eb:	add    BYTE PTR [esi],cl
 10010ed:	sub    DWORD PTR [ecx],eax
 10010ef:	add    ah,bh
 10010f1:	sub    BYTE PTR [ecx],al
 10010f3:	add    al,dh
 10010f5:	sub    BYTE PTR [ecx],al
 10010f7:	add    dh,ah
 10010f9:	sub    BYTE PTR [ecx],al
 10010fb:	add    dl,bl
 10010fd:	sub    BYTE PTR [ecx],al
 10010ff:	add    BYTE PTR [esi-0x53fffed8],bh
 1001105:	sub    BYTE PTR [ecx],al
 1001107:	add    BYTE PTR [eax-0x6bfffed8],ah
 100110d:	sub    BYTE PTR [ecx],al
 100110f:	add    BYTE PTR [edx],al
 1001111:	sub    al,BYTE PTR [ecx]
 1001113:	add    BYTE PTR [eax+ebp*1+0x1],bh
 1001117:	add    BYTE PTR [eax+ebp*1+0x1],ah
 100111b:	add    BYTE PTR [esi+0x21],al
 100111e:	add    DWORD PTR [eax],eax
 1001120:	xor    ah,BYTE PTR [ecx]
 1001122:	add    DWORD PTR [eax],eax
 1001124:	and    ah,BYTE PTR [ecx]
 1001126:	add    DWORD PTR [eax],eax
 1001128:	je     0x100114b
 100112a:	add    DWORD PTR [eax],eax
 100112c:	sahf   
 100112d:	and    eax,0x25b00001
 1001132:	add    DWORD PTR [eax],eax
 1001134:	(bad)  
 1001135:	and    eax,0x25d80001
 100113a:	add    DWORD PTR [eax],eax
 100113c:	call   0x7001266
 1001141:	add    DWORD PTR es:[eax],eax
 1001144:	sbb    ah,BYTE PTR [esi]
 1001146:	add    DWORD PTR [eax],eax
 1001148:	sub    BYTE PTR [esi],ah
 100114a:	add    DWORD PTR [eax],eax
 100114c:	cmp    BYTE PTR [esi],ah
 100114e:	add    DWORD PTR [eax],eax
 1001150:	inc    esp
 1001151:	add    DWORD PTR es:[eax],eax
 1001154:	push   esp
 1001155:	add    DWORD PTR es:[eax],eax
 1001158:	push   0x26
 100115a:	add    DWORD PTR [eax],eax
 100115c:	test   BYTE PTR [esi],ah
 100115e:	add    DWORD PTR [eax],eax
 1001160:	call   0x126:0xb4000126
 1001167:	add    dh,al
 1001169:	add    DWORD PTR es:[eax],eax
 100116c:	out    dx,al
 100116d:	add    DWORD PTR es:[eax],eax
 1001170:	cld    
 1001171:	add    DWORD PTR es:[eax],eax
 1001174:	adc    al,0x27
 1001176:	add    DWORD PTR [eax],eax
 1001178:	and    al,0x27
 100117a:	add    DWORD PTR [eax],eax
 100117c:	xor    BYTE PTR [edi],ah
 100117e:	add    DWORD PTR [eax],eax
 1001180:	ds daa 
 1001182:	add    DWORD PTR [eax],eax
 1001184:	dec    esp
 1001185:	daa    
 1001186:	add    DWORD PTR [eax],eax
 1001188:	push   esi
 1001189:	daa    
 100118a:	add    DWORD PTR [eax],eax
 100118c:	outs   dx,BYTE PTR ds:[esi]
 100118d:	daa    
 100118e:	add    DWORD PTR [eax],eax
 1001190:	jle    0x10011b9
 1001192:	add    DWORD PTR [eax],eax
 1001194:	xchg   esp,eax
 1001195:	daa    
 1001196:	add    DWORD PTR [eax],eax
 1001198:	lods   al,BYTE PTR ds:[esi]
 1001199:	daa    
 100119a:	add    DWORD PTR [eax],eax
 100119c:	mov    edx,0xd4000127
 10011a1:	daa    
 10011a2:	add    DWORD PTR [eax],eax
 10011a4:	in     al,0x27
 10011a6:	add    DWORD PTR [eax],eax
 10011a8:	cli    
 10011a9:	daa    
 10011aa:	add    DWORD PTR [eax],eax
 10011ac:	adc    al,0x28
 10011ae:	add    DWORD PTR [eax],eax
 10011b0:	xor    BYTE PTR [eax],ch
 10011b2:	add    DWORD PTR [eax],eax
 10011b4:	inc    esp
 10011b5:	sub    BYTE PTR [ecx],al
 10011b7:	add    BYTE PTR [eax+0x28],bl
 10011ba:	add    DWORD PTR [eax],eax
 10011bc:	add    BYTE PTR [eax],al
 10011be:	add    BYTE PTR [eax],al
 10011c0:	mov    BYTE PTR [ebx],ah
 10011c2:	add    DWORD PTR [eax],eax
 10011c4:	xchg   esp,eax
 10011c5:	and    eax,DWORD PTR [ecx]
 10011c7:	add    dl,bh
 10011c9:	and    al,0x1
 10011cb:	add    dl,ah
 10011cd:	and    al,0x1
 10011cf:	add    ah,cl
 10011d1:	and    al,0x1
 10011d3:	add    BYTE PTR [edx-0x57fffedc],bh
 10011d9:	and    al,0x1
 10011db:	add    BYTE PTR [esi-0x79fffedc],dl
 10011e1:	and    al,0x1
 10011e3:	add    BYTE PTR [edx+0x24],bh
 10011e6:	add    DWORD PTR [eax],eax
 10011e8:	push   0x5a000124
 10011ed:	and    al,0x1
 10011ef:	add    BYTE PTR [edx+0x24],cl
 10011f2:	add    DWORD PTR [eax],eax
 10011f4:	cmp    al,0x24
 10011f6:	add    DWORD PTR [eax],eax
 10011f8:	sub    BYTE PTR [ecx+eax*1],ah
 10011fb:	add    BYTE PTR [eax],bl
 10011fd:	and    al,0x1
 10011ff:	add    BYTE PTR [edx],cl
 1001201:	and    al,0x1
 1001203:	add    ah,bh
 1001205:	and    eax,DWORD PTR [ecx]
 1001207:	add    dh,ch
 1001209:	and    eax,DWORD PTR [ecx]
 100120b:	add    al,ah
 100120d:	and    eax,DWORD PTR [ecx]
 100120f:	add    dh,cl
 1001211:	and    eax,DWORD PTR [ecx]
 1001213:	add    BYTE PTR [esi-0x57fffedd],bh
 1001219:	and    eax,DWORD PTR [ecx]
 100121b:	add    BYTE PTR [ebx+eiz*1+0x1],bl
 1001222:	add    BYTE PTR [eax],al
 1001224:	inc    esp
 1001225:	and    eax,0x25140001
 100122a:	add    DWORD PTR [eax],eax
 100122c:	sub    ah,BYTE PTR ds:0x1
	...
 100123e:	add    BYTE PTR [eax],al
 1001240:	cmp    eax,0x440100b3
 1001245:	rol    BYTE PTR [eax],0x1
 1001248:	rol    edx,0x0
 100124b:	add    DWORD PTR [edi+0x720100c9],edi
 1001251:	mov    al,BYTE PTR [eax]
 1001253:	add    DWORD PTR [eax],eax
 1001255:	add    BYTE PTR [eax],al
 1001257:	add    BYTE PTR [eax],al
 1001259:	add    BYTE PTR [eax],al
 100125b:	add    BYTE PTR [edi],ah
 100125d:	sbb    BYTE PTR [ecx],al
 100125f:	add    ebx,esi
 1001261:	mov    bl,0x0
 1001263:	add    DWORD PTR [eax],eax
	...
 1001271:	add    BYTE PTR [eax],al
 1001273:	add    al,ah
 1001275:	inc    ecx
 1001276:	push   es
 1001277:	dec    esp
 1001278:	add    BYTE PTR [eax],al
 100127a:	add    BYTE PTR [eax],al
 100127c:	add    al,BYTE PTR [eax]
 100127e:	add    BYTE PTR [eax],al
 1001280:	and    al,0x0
 1001282:	add    BYTE PTR [eax],al
 1001284:	pop    eax
 1001285:	inc    edx
 1001286:	add    BYTE PTR [eax],al
 1001288:	pop    eax
 1001289:	add    BYTE PTR ss:[eax],al
 100128c:	and    eax,0x73252073
 1001291:	cmp    ah,BYTE PTR [eax]
 1001293:	and    eax,0x28203a73
 1001298:	outs   dx,BYTE PTR ds:[esi]
 1001299:	jne    0x1001307
 100129b:	ins    BYTE PTR es:[edi],dx
 100129c:	sub    DWORD PTR [edx],ecx
 100129e:	add    BYTE PTR [eax],al
 10012a0:	and    eax,0x73252073
 10012a5:	cmp    ah,BYTE PTR [eax]
 10012a7:	and    eax,0x25203a73
 10012ac:	jae    0x10012b8
 10012ae:	add    BYTE PTR [eax],al
 10012b0:	inc    esp
 10012b1:	pop    eax
 10012b2:	push   ebx
 10012b3:	gs je  0x100132b
 10012b6:	jo     0x10012b8
 10012b8:	inc    esp
 10012b9:	pop    eax
 10012ba:	push   ebx
 10012bb:	inc    ebp
 10012bc:	push   esp
 10012bd:	push   ebp
 10012be:	push   eax
 10012bf:	pop    edi
 10012c0:	inc    esp
 10012c1:	push   eax
 10012c2:	inc    esi
 10012c3:	sub    BYTE PTR [ecx],ch
 10012c5:	cmp    ah,BYTE PTR [eax]
 10012c7:	push   ebp
 10012c8:	outs   dx,BYTE PTR ds:[esi]
 10012c9:	popa   
 10012ca:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 10012ce:	je     0x100133f
 10012d0:	and    BYTE PTR [edi+0x70],ch
 10012d3:	outs   dx,BYTE PTR gs:[esi]
 10012d5:	and    BYTE PTR [edi+ebp*2+0x67],ch
 10012d9:	and    BYTE PTR [esi+0x69],ah
 10012dc:	ins    BYTE PTR es:[edi],dx
 10012dd:	gs or  al,BYTE PTR cs:[eax]
 10012e1:	add    BYTE PTR [eax],al
 10012e3:	add    BYTE PTR [ecx+0x2b],ah
 10012e6:	add    BYTE PTR [eax],al
 10012e8:	and    eax,0x25732573
 10012ed:	jae    0x10012ef
 10012ef:	add    BYTE PTR [eax+eax*1+0x0],bl
 10012f3:	add    BYTE PTR [edi+ebp*2+0x67],cl
 10012f7:	jae    0x1001355
 10012f9:	inc    esp
 10012fa:	imul   esi,DWORD PTR [edx+0x65],0x2e587463
 1001301:	ins    BYTE PTR es:[edi],dx
 1001302:	outs   dx,DWORD PTR ds:[esi]
 1001303:	add    BYTE PTR [bx+si],al
 1001306:	add    BYTE PTR [eax],al
 1001308:	inc    esp
 1001309:	pop    eax
 100130a:	push   ebx
 100130b:	inc    ebp
 100130c:	push   esp
 100130d:	push   ebp
 100130e:	push   eax
 100130f:	pop    edi
 1001310:	inc    esp
 1001311:	push   eax
 1001312:	inc    esi
 1001313:	sub    BYTE PTR [ecx],ch
 1001315:	cmp    ah,BYTE PTR [eax]
 1001317:	popaw  
 1001319:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
 1001321:	arpl   WORD PTR [edx+0x65],si
 1001324:	popa   
 1001325:	je     0x100138c
 1001327:	and    BYTE PTR [edi+ebp*2+0x67],ch
 100132b:	and    BYTE PTR [ecx+ebp*2+0x72],ah
 100132f:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
 1001334:	jns    0x1001364
 1001336:	or     al,BYTE PTR [eax]
 1001338:	inc    esp
 1001339:	pop    eax
 100133a:	push   ebx
 100133b:	inc    ebp
 100133c:	push   esp
 100133d:	push   ebp
 100133e:	push   eax
 100133f:	pop    edi
 1001340:	inc    esp
 1001341:	push   eax
 1001342:	inc    esi
 1001343:	sub    BYTE PTR [ecx],ch
 1001345:	cmp    ah,BYTE PTR [eax]
 1001347:	jo     0x10013aa
 1001349:	je     0x10013b3
 100134b:	and    BYTE PTR [esi+0x61],ch
 100134e:	ins    DWORD PTR es:[edi],dx
 100134f:	and    BYTE PTR gs:[edi+ebp*2+0x6f],dh
 1001354:	and    BYTE PTR [edi+ebp*2+0x6e],ch
 1001358:	or     al,BYTE PTR cs:[bx+si]
 100135c:	and    eax,0x732573
 1001361:	add    BYTE PTR [eax],al
 1001363:	add    BYTE PTR [esp+ecx*2+0x6f],bl
 1001367:	addr16 jae 0x100136a
 100136a:	add    BYTE PTR [eax],al
 100136c:	inc    esp
 100136d:	pop    eax
 100136e:	push   ebx
 100136f:	inc    ebp
 1001370:	push   esp
 1001371:	push   ebp
 1001372:	push   eax
 1001373:	pop    edi
 1001374:	inc    esp
 1001375:	push   eax
 1001376:	inc    esi
 1001377:	sub    BYTE PTR [ecx],ch
 1001379:	cmp    ah,BYTE PTR [eax]
 100137b:	inc    edi
 100137c:	gs je  0x10013d6
 100137f:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
 1001386:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 100138d:	jns    0x10013b7
 100138f:	sub    DWORD PTR [eax],esp
 1001391:	popaw  
 1001393:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0xa2e
 100139b:	add    BYTE PTR [edi+ebp*2+0x67],cl
 100139f:	jae    0x10013fd
 10013a1:	inc    esp
 10013a2:	pop    eax
 10013a3:	inc    ebp
 10013a4:	jb     0x1001418
 10013a6:	outs   dx,DWORD PTR ds:[esi]
 10013a7:	jb     0x10013d7
 10013a9:	ins    BYTE PTR es:[edi],dx
 10013aa:	outs   dx,DWORD PTR ds:[esi]
 10013ab:	add    BYTE PTR [bx+si],al
 10013ae:	add    BYTE PTR [eax],al
 10013b0:	and    eax,0x3a292873
 10013b5:	and    BYTE PTR ds:0x73,ah
 10013bb:	add    BYTE PTR [eax],ah
 10013bd:	and    BYTE PTR [eax],ah
 10013bf:	and    BYTE PTR [eax],al
 10013c1:	add    BYTE PTR [eax],al
 10013c3:	add    BYTE PTR [eax],ah
 10013c5:	and    BYTE PTR [eax],ah
 10013c7:	and    BYTE PTR [esi+0x69],al
 10013ca:	ins    BYTE PTR es:[edi],dx
 10013cb:	and    BYTE PTR gs:[ecx+0x6e],ch
 10013cf:	and    BYTE PTR [eax+0x72],dh
 10013d2:	outs   dx,DWORD PTR ds:[esi]
 10013d3:	arpl   WORD PTR [ebp+0x73],sp
 10013d6:	jae    0x1001412
 10013d8:	or     DWORD PTR [eax],eax
 10013da:	add    BYTE PTR [eax],al
 10013dc:	or     al,BYTE PTR [eax]
 10013de:	add    BYTE PTR [eax],al
 10013e0:	or     cl,BYTE PTR [edx]
 10013e2:	add    BYTE PTR [eax],al
 10013e4:	inc    esp
 10013e5:	pop    eax
 10013e6:	push   ebx
 10013e7:	inc    ebp
 10013e8:	jb     0x100145c
 10013ea:	outs   dx,DWORD PTR ds:[esi]
 10013eb:	jb     0x1001415
 10013ed:	sub    DWORD PTR [edx],edi
 10013ef:	and    BYTE PTR [esi+0x6f],al
 10013f2:	jb     0x1001461
 10013f4:	popa   
 10013f5:	je     0x1001444
 10013f7:	gs jae 0x100146d
 10013fa:	popa   
 10013fb:	sub    BYTE PTR gs:[bx+di],ch
 10013ff:	and    BYTE PTR [esi+0x61],ah
 1001402:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7265202c
 100140a:	jb     0x100147b
 100140c:	jb     0x100142e
 100140e:	cmp    eax,0x2e642520
 1001413:	add    BYTE PTR [eax],al
 1001415:	add    BYTE PTR [eax],al
 1001417:	add    BYTE PTR [eax+ebx*2+0x53],al
 100141b:	inc    ebp
 100141c:	jb     0x1001490
 100141e:	outs   dx,DWORD PTR ds:[esi]
 100141f:	jb     0x1001449
 1001421:	sub    DWORD PTR [edx],edi
 1001423:	and    BYTE PTR [esi+0x6f],al
 1001426:	jb     0x1001495
 1001428:	popa   
 1001429:	je     0x1001478
 100142b:	gs jae 0x10014a1
 100142e:	popa   
 100142f:	sub    BYTE PTR gs:[bx+di],ch
 1001433:	and    BYTE PTR [esi+0x61],ah
 1001436:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7973202c
 100143e:	jae    0x10014b4
 1001440:	gs ins DWORD PTR es:[edi],dx
 1001442:	and    BYTE PTR [ebx+0x61],ah
 1001445:	outs   dx,BYTE PTR ds:[esi]
 1001446:	outs   dx,BYTE PTR ds:[esi]
 1001447:	outs   dx,DWORD PTR ds:[esi]
 1001448:	je     0x100146a
 100144a:	imul   bp,WORD PTR [esi+0x64],0x6d20
 1001450:	gs jae 0x10014c6
 1001453:	popa   
 1001454:	and    BYTE PTR gs:[si+0x65],dh
 1001459:	js     0x10014cf
 100145b:	and    BYTE PTR [esi+0x6f],ah
 100145e:	jb     0x1001480
 1001460:	gs jb  0x10014d5
 1001463:	outs   dx,DWORD PTR ds:[esi]
 1001464:	jb     0x1001494
 1001466:	add    BYTE PTR [eax],al
 1001468:	and    BYTE PTR ds:0x25280020,ch
 100146e:	sub    DWORD PTR fs:[eax],eax
 1001471:	add    BYTE PTR [eax],al
 1001473:	add    BYTE PTR [eax],ch
 1001475:	xor    BYTE PTR [eax+0x25],bh
 1001478:	js     0x10014a3
 100147a:	add    BYTE PTR [eax],al
 100147c:	and    BYTE PTR [eax],ah
 100147e:	and    BYTE PTR [eax],ah
 1001480:	inc    ebp
 1001481:	jb     0x10014f5
 1001483:	outs   dx,DWORD PTR ds:[esi]
 1001484:	jb     0x10014c0
 1001486:	or     DWORD PTR [ecx],ecx
 1001488:	add    BYTE PTR [eax],al
 100148a:	add    BYTE PTR [eax],al
 100148c:	and    eax,0x3a292873
 1001491:	and    BYTE PTR ds:0x61662073,ah
 1001497:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x2e
 100149f:	add    BYTE PTR ds:0x3a292873,ah
 10014a5:	and    BYTE PTR ds:0x61662073,ah
 10014ab:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7265202c
 10014b3:	jb     0x1001524
 10014b5:	jb     0x10014d7
 10014b7:	cmp    eax,0x2e642520
 10014bc:	add    BYTE PTR [eax],al
 10014be:	add    BYTE PTR [eax],al
 10014c0:	and    eax,0x3a292873
 10014c5:	and    BYTE PTR ds:0x61662073,ah
 10014cb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7265202c
 10014d3:	jb     0x1001544
 10014d5:	jb     0x10014f7
 10014d7:	cmp    eax,0x25783020
 10014dc:	js     0x100150c
 10014de:	add    BYTE PTR [eax],al
 10014e0:	and    BYTE PTR [eax],ah
 10014e2:	and    BYTE PTR [eax],ah
 10014e4:	inc    esi
 10014e5:	popa   
 10014e6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x49504120
 10014ee:	cmp    cl,BYTE PTR [ecx]
 10014f0:	or     DWORD PTR ds:0xa73,esp
 10014f6:	add    BYTE PTR [eax],al
 10014f8:	and    BYTE PTR [ebp+0x6f],ch
 10014fb:	fs jne 0x100156a
 10014fe:	cmp    ah,BYTE PTR gs:[eax]
 1001501:	and    eax,0x73252873
 1001506:	sub    DWORD PTR [eax+eiz*1],ebp
 1001509:	imul   bp,WORD PTR [ebp+eiz*2+0x3a],0x2520
 1001510:	jae    0x100153e
 1001512:	and    BYTE PTR [ecx+ebp*2+0x6e],ch
 1001516:	cmp    ah,BYTE PTR gs:[eax]
 1001519:	and    eax,0x66202c64
 100151e:	jne    0x100158e
 1001520:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001524:	outs   dx,BYTE PTR ds:[esi]
 1001525:	cmp    ah,BYTE PTR [eax]
 1001527:	and    eax,0xa0a73
 100152c:	dec    edx
 100152d:	jne    0x100159d
 100152f:	and    BYTE PTR [eax],ah
 1001531:	xor    ah,BYTE PTR [eax]
 1001533:	xor    dh,BYTE PTR [eax]
 1001535:	xor    DWORD PTR [eax],esi
 1001537:	add    BYTE PTR [ebx+0x25],bl
 100153a:	jae    0x100155c
 100153c:	and    eax,0x2d005d73
 1001541:	sub    eax,0x2d2d2d2d
 1001546:	sub    eax,0x2d2d2d2d
 100154b:	sub    eax,0x2d2d2d2d
 1001550:	sub    eax,0xa2d2d2d
 1001555:	add    BYTE PTR [eax],al
 1001557:	add    BYTE PTR [edi],ch
 1001559:	jae    0x10015c4
 100155b:	ins    BYTE PTR es:[edi],dx
 100155c:	outs   dx,BYTE PTR gs:[esi]
 100155e:	je     0x1001560
 1001560:	das    
 1001561:	jo     0x10015c4
 1001563:	arpl   WORD PTR [ebx+0x61],bp
 1001566:	imul   ebp,DWORD PTR gs:[bp+0x73],0x6c6c6174
 100156f:	add    BYTE PTR [edi],ch
 1001571:	outs   dx,DWORD PTR ds:[esi]
 1001572:	jo     0x10015df
 1001574:	add    BYTE PTR [eax],al
 1001576:	add    BYTE PTR [eax],al
 1001578:	das    
 1001579:	ja     0x10015e4
 100157b:	outs   dx,BYTE PTR ds:[esi]
 100157c:	outs   dx,DWORD PTR fs:[esi]
 100157e:	ja     0x10015f3
 1001580:	jne    0x10015f2
 1001582:	fs popa 
 1001584:	je     0x10015eb
 1001586:	add    BYTE PTR [eax],al
 1001588:	dec    esp
 1001589:	outs   dx,DWORD PTR ds:[esi]
 100158a:	popa   
 100158b:	fs dec esp
 100158d:	imul   esp,DWORD PTR [edx+0x72],0x28797261
 1001594:	sub    DWORD PTR [eax],eax
 1001596:	add    BYTE PTR [eax],al
 1001598:	push   ebp
 1001599:	outs   dx,BYTE PTR ds:[esi]
 100159a:	popa   
 100159b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 100159f:	je     0x1001610
 10015a1:	and    BYTE PTR [edi+ebp*2+0x61],ch
 10015a5:	and    BYTE PTR fs:0x2e73,ah
 10015ac:	cmp    bl,BYTE PTR gs:[edx+eiz*2+0x74]
 10015b1:	pop    esp
 10015b2:	xor    DWORD PTR [ecx],edi
 10015b4:	xor    esi,DWORD PTR [esi+esi*1]
 10015b7:	xor    bl,BYTE PTR [ebx+esi*2+0x65]
 10015bb:	je     0x1001632
 10015bd:	jo     0x100161b
 10015bf:	fs gs ins BYTE PTR es:[edi],dx
 10015c2:	imul   esi,DWORD PTR [esi+0x65],0x6c626172
 10015c9:	gs jae 0x1001628
 10015cc:	fs jae 0x1001634
 10015cf:	je     0x1001646
 10015d1:	jo     0x100162f
 10015d3:	imul   ebp,DWORD PTR [esi+0x63],0x6973645c
 10015da:	outs   dx,BYTE PTR ds:[esi]
 10015db:	ins    BYTE PTR es:[edi],dx
 10015dc:	imul   ebp,DWORD PTR [esi+0x65],0x682e
 10015e3:	add    BYTE PTR [ecx+0x73],cl
 10015e6:	inc    ecx
 10015e7:	fs ins DWORD PTR es:[edi],dx
 10015e9:	imul   ebp,DWORD PTR [esi+0x0],0x50746547
 10015f0:	jb     0x1001661
 10015f2:	arpl   WORD PTR [ecx+0x64],ax
 10015f5:	fs jb  0x100165d
 10015f8:	jae    0x100166d
 10015fa:	sub    BYTE PTR [ecx],ch
 10015fc:	add    BYTE PTR [eax],al
 10015fe:	add    BYTE PTR [eax],al
 1001600:	dec    ebp
 1001601:	outs   dx,DWORD PTR ds:[esi]
 1001602:	fs jne 0x1001671
 1001605:	cmp    ah,BYTE PTR gs:[eax]
 1001608:	and    eax,0x46202c73
 100160d:	jne    0x100167d
 100160f:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001613:	outs   dx,BYTE PTR ds:[esi]
 1001614:	cmp    ah,BYTE PTR [eax]
 1001616:	and    eax,0x73
 100161b:	add    BYTE PTR [ecx+0x73],cl
 100161e:	dec    esi
 100161f:	push   esp
 1001620:	inc    ecx
 1001621:	fs ins DWORD PTR es:[edi],dx
 1001623:	imul   ebp,DWORD PTR [esi+0x0],0x64610000
 100162a:	jbe    0x100169c
 100162c:	popa   
 100162d:	arpl   WORD PTR [ebx+0x2e],bp
 1001630:	fs ins BYTE PTR es:[edi],dx
 1001632:	ins    BYTE PTR es:[edi],dx
 1001633:	add    BYTE PTR [esp+ebp*2+0x73],ah
 1001637:	add    BYTE PTR [ebx+0x68],ah
 100163a:	ins    DWORD PTR es:[edi],dx
 100163b:	add    BYTE PTR [eax+0x6c],ch
 100163e:	jo     0x1001640
 1001640:	outs   dx,WORD PTR ds:[esi]
 1001642:	outs   dx,BYTE PTR ds:[esi]
 1001643:	add    BYTE PTR [eax+0x6e],dh
 1001646:	add    BYTE PTR [si+0x78],dh
 100164a:	je     0x100164c
 100164c:	imul   ebp,DWORD PTR [esi+0x69],0x666e6900
 1001653:	add    BYTE PTR [edi+0x65],al
 1001656:	je     0x100169e
 1001658:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1001660:	outs   dx,DWORD PTR ds:[esi]
 1001661:	outs   dx,BYTE PTR ds:[esi]
 1001662:	dec    ecx
 1001663:	outs   dx,BYTE PTR ds:[esi]
 1001664:	outs   dx,WORD PTR ds:[esi]
 1001666:	sub    BYTE PTR [ecx],ch
 1001668:	add    BYTE PTR [eax],al
 100166a:	add    BYTE PTR [eax],al
 100166c:	inc    edi
 100166d:	gs je  0x10016b6
 1001670:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1001678:	outs   dx,DWORD PTR ds:[esi]
 1001679:	outs   dx,BYTE PTR ds:[esi]
 100167a:	dec    ecx
 100167b:	outs   dx,BYTE PTR ds:[esi]
 100167c:	outs   dx,WORD PTR ds:[esi]
 100167e:	inc    edx
 100167f:	ins    BYTE PTR es:[edi],dx
 1001680:	outs   dx,DWORD PTR ds:[esi]
 1001681:	arpl   WORD PTR [ebx+0x0],bp
 1001684:	push   ebp
 1001685:	outs   dx,BYTE PTR ds:[esi]
 1001686:	popa   
 1001687:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 100168b:	je     0x10016fc
 100168d:	and    BYTE PTR [ecx+0x6c],ah
 1001690:	ins    BYTE PTR es:[edi],dx
 1001691:	outs   dx,DWORD PTR ds:[esi]
 1001692:	arpl   WORD PTR [ecx+0x74],sp
 1001695:	and    BYTE PTR gs:[ebp+0x65],ch
 1001699:	ins    DWORD PTR es:[edi],dx
 100169a:	outs   dx,DWORD PTR ds:[esi]
 100169b:	jb     0x1001716
 100169d:	add    BYTE PTR cs:[eax],al
 10016a0:	inc    edi
 10016a1:	gs je  0x10016ea
 10016a4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 10016ac:	outs   dx,DWORD PTR ds:[esi]
 10016ad:	outs   dx,BYTE PTR ds:[esi]
 10016ae:	dec    ecx
 10016af:	outs   dx,BYTE PTR ds:[esi]
 10016b0:	outs   dx,WORD PTR ds:[esi]
 10016b2:	inc    edx
 10016b3:	ins    BYTE PTR es:[edi],dx
 10016b4:	outs   dx,DWORD PTR ds:[esi]
 10016b5:	arpl   WORD PTR [ebx+0x28],bp
 10016b8:	sub    DWORD PTR [edx],edi
 10016ba:	and    BYTE PTR ds:0x6f642073,ah
 10016c0:	gs jae 0x10016e3
 10016c3:	outs   dx,BYTE PTR ds:[esi]
 10016c4:	outs   dx,DWORD PTR ds:[esi]
 10016c5:	je     0x10016e7
 10016c7:	push   0x20657661
 10016cc:	jbe    0x1001733
 10016ce:	jb     0x1001743
 10016d0:	imul   ebp,DWORD PTR [edi+0x6e],0x666e6920
 10016d7:	outs   dx,DWORD PTR ds:[esi]
 10016d8:	jb     0x1001747
 10016da:	popa   
 10016db:	je     0x1001746
 10016dd:	outs   dx,DWORD PTR ds:[esi]
 10016de:	outs   dx,BYTE PTR ds:[esi]
 10016df:	add    BYTE PTR cs:[eax],al
 10016e2:	add    BYTE PTR [eax],al
 10016e4:	add    BYTE PTR [eax],al
 10016e6:	add    BYTE PTR [eax],al
 10016e8:	inc    edi
 10016e9:	gs je  0x1001732
 10016ec:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 10016f4:	outs   dx,DWORD PTR ds:[esi]
 10016f5:	outs   dx,BYTE PTR ds:[esi]
 10016f6:	dec    ecx
 10016f7:	outs   dx,BYTE PTR ds:[esi]
 10016f8:	outs   dx,WORD PTR ds:[esi]
 10016fa:	inc    edx
 10016fb:	ins    BYTE PTR es:[edi],dx
 10016fc:	outs   dx,DWORD PTR ds:[esi]
 10016fd:	arpl   WORD PTR [ebx+0x28],bp
 1001700:	sub    DWORD PTR [edx],edi
 1001702:	and    BYTE PTR [ebp+0x6e],dl
 1001705:	popa   
 1001706:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 100170a:	je     0x100177b
 100170c:	and    BYTE PTR [edi+0x65],ah
 100170f:	je     0x1001731
 1001711:	inc    esi
 1001712:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 100171a:	outs   dx,DWORD PTR ds:[esi]
 100171b:	outs   dx,BYTE PTR ds:[esi]
 100171c:	dec    ecx
 100171d:	outs   dx,BYTE PTR ds:[esi]
 100171e:	outs   dx,WORD PTR ds:[esi]
 1001720:	push   ebx
 1001721:	imul   edi,DWORD PTR [edx+0x65],0x6966202c
 1001728:	ins    BYTE PTR es:[edi],dx
 1001729:	cmp    ah,BYTE PTR gs:[eax]
 100172c:	and    eax,0x72202c73
 1001731:	gs popa 
 1001733:	jae    0x10017a4
 1001735:	outs   dx,BYTE PTR ds:[esi]
 1001736:	cmp    ah,BYTE PTR [eax]
 1001738:	and    eax,0x44002e64
 100173d:	popa   
 100173e:	je     0x10017a1
 1001740:	and    BYTE PTR [ebx+0x69],dh
 1001743:	jp     0x10017aa
 1001745:	and    BYTE PTR [ebp+0x69],ch
 1001748:	jae    0x10017b7
 100174a:	popa   
 100174b:	je     0x10017b0
 100174d:	push   0x5844002e
 1001752:	inc    edi
 1001753:	gs je  0x100179c
 1001756:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 100175e:	outs   dx,DWORD PTR ds:[esi]
 100175f:	outs   dx,BYTE PTR ds:[esi]
 1001760:	add    BYTE PTR [eax],al
 1001762:	add    BYTE PTR [eax],al
 1001764:	push   esi
 1001765:	gs jb  0x10017b9
 1001768:	jne    0x10017cf
 100176a:	jb     0x10017e5
 100176c:	push   esi
 100176d:	popa   
 100176e:	ins    BYTE PTR es:[edi],dx
 100176f:	jne    0x10017d6
 1001771:	sub    BYTE PTR [ecx],ch
 1001773:	add    BYTE PTR [edx+0x65],dl
 1001776:	addr16 inc ebx
 1001778:	ins    BYTE PTR es:[edi],dx
 1001779:	outs   dx,DWORD PTR ds:[esi]
 100177a:	jae    0x10017e1
 100177c:	dec    ebx
 100177d:	gs jns 0x10017a8
 1001780:	sub    DWORD PTR [eax],eax
 1001782:	add    BYTE PTR [eax],al
 1001784:	push   edx
 1001785:	gs addr16 inc esp
 1001788:	gs ins BYTE PTR es:[edi],dx
 100178a:	gs je  0x10017f2
 100178d:	push   esi
 100178e:	popa   
 100178f:	ins    BYTE PTR es:[edi],dx
 1001790:	jne    0x10017f7
 1001792:	sub    BYTE PTR [ecx],ch
 1001794:	add    BYTE PTR [eax],al
 1001796:	add    BYTE PTR [eax],al
 1001798:	inc    ebx
 1001799:	outs   dx,DWORD PTR ds:[esi]
 100179a:	ins    DWORD PTR es:[edi],dx
 100179b:	ins    DWORD PTR es:[edi],dx
 100179c:	popa   
 100179d:	outs   dx,BYTE PTR ds:[esi]
 100179e:	add    BYTE PTR fs:[edx+0x65],dl
 10017a2:	addr16 push ebx
 10017a4:	gs je  0x10017fd
 10017a7:	popa   
 10017a8:	ins    BYTE PTR es:[edi],dx
 10017a9:	jne    0x1001810
 10017ab:	inc    ebp
 10017ac:	js     0x10017d6
 10017ae:	sub    DWORD PTR [eax],eax
 10017b0:	arpl   WORD PTR [edi+0x6d],bp
 10017b3:	ins    DWORD PTR es:[edi],dx
 10017b4:	popa   
 10017b5:	outs   dx,BYTE PTR ds:[esi]
 10017b6:	add    BYTE PTR fs:[ebp+0x3a],ah
 10017ba:	pop    esp
 10017bb:	bound  esi,QWORD PTR [esp+ebx*2+0x31]
 10017bf:	cmp    DWORD PTR [ebx],esi
 10017c1:	xor    al,0x36
 10017c3:	xor    bl,BYTE PTR [ebx+esi*2+0x65]
 10017c7:	je     0x100183e
 10017c9:	jo     0x1001827
 10017cb:	fs gs ins BYTE PTR es:[edi],dx
 10017ce:	imul   esi,DWORD PTR [esi+0x65],0x6c626172
 10017d5:	gs jae 0x1001834
 10017d8:	fs js  0x100184e
 10017db:	gs je  0x1001853
 10017de:	jo     0x100183c
 10017e0:	fs js  0x1001856
 10017e3:	gs je  0x100185b
 10017e6:	jo     0x1001816
 10017e8:	arpl   WORD PTR [eax+0x70],si
 10017eb:	add    BYTE PTR [ebx+0x65],dl
 10017ee:	je     0x1001834
 10017f0:	pop    eax
 10017f1:	push   ebx
 10017f2:	gs je  0x100186a
 10017f5:	jo     0x1001849
 10017f7:	gs addr16 push esi
 10017fa:	popa   
 10017fb:	ins    BYTE PTR es:[edi],dx
 10017fc:	jne    0x1001863
 10017fe:	add    BYTE PTR [eax],al
 1001800:	push   edx
 1001801:	gs addr16 inc ebx
 1001804:	jb     0x100186b
 1001806:	popa   
 1001807:	je     0x100186e
 1001809:	dec    ebx
 100180a:	gs jns 0x1001852
 100180d:	js     0x1001837
 100180f:	sub    DWORD PTR [eax],eax
 1001811:	add    BYTE PTR [eax],al
 1001813:	add    BYTE PTR [ebx+0x6f],dl
 1001816:	data16 je 0x1001890
 1001819:	popa   
 100181a:	jb     0x1001881
 100181c:	pop    esp
 100181d:	dec    ebp
 100181e:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
 1001825:	je     0x1001883
 1001827:	inc    esp
 1001828:	imul   esi,DWORD PTR [edx+0x65],0x587463
 100182f:	add    BYTE PTR [edx+0x65],dl
 1001832:	addr16 dec edi
 1001834:	jo     0x100189b
 1001836:	outs   dx,BYTE PTR ds:[esi]
 1001837:	dec    ebx
 1001838:	gs jns 0x1001880
 100183b:	js     0x1001865
 100183d:	sub    DWORD PTR [eax],eax
 100183f:	add    BYTE PTR [edx+0x65],dl
 1001842:	addr16 inc ebx
 1001844:	ins    BYTE PTR es:[edi],dx
 1001845:	outs   dx,DWORD PTR ds:[esi]
 1001846:	jae    0x10018ad
 1001848:	dec    ebx
 1001849:	gs jns 0x1001874
 100184c:	sub    DWORD PTR [esi],ebp
 100184e:	add    BYTE PTR [eax],al
 1001850:	inc    esp
 1001851:	gs ins BYTE PTR es:[edi],dx
 1001853:	inc    esp
 1001854:	pop    eax
 1001855:	push   ebx
 1001856:	gs je  0x10018ce
 1001859:	jo     0x10018ad
 100185b:	gs addr16 push esi
 100185e:	popa   
 100185f:	ins    BYTE PTR es:[edi],dx
 1001860:	jne    0x10018c7
 1001862:	add    BYTE PTR [eax],al
 1001864:	inc    ebp
 1001865:	outs   dx,BYTE PTR ds:[esi]
 1001866:	popa   
 1001867:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
 100186b:	bound  ebp,QWORD PTR gs:[edi+0x6f]
 100186f:	je     0x1001871
 1001871:	add    BYTE PTR [eax],al
 1001873:	add    BYTE PTR [esi+0x72],al
 1001876:	gs gs dec esp
 1001879:	imul   esp,DWORD PTR [edx+0x72],0x28797261
 1001880:	sub    DWORD PTR [eax],eax
 1001882:	add    BYTE PTR [eax],al
 1001884:	push   ebx
 1001885:	gs push ebx
 1001887:	push   0x6f647475
 100188c:	ja     0x10018fc
 100188e:	push   eax
 100188f:	jb     0x10018fa
 1001891:	jbe    0x10018fc
 1001893:	ins    BYTE PTR es:[edi],dx
 1001894:	gs add BYTE PTR gs:[di+0x73],dl
 100189a:	gs jb  0x10018bd
 100189d:	imul   esp,DWORD PTR fs:[eax+eiz*1+0x6e],0x7220746f
 10018a6:	bound  ebp,QWORD PTR gs:[edi+0x6f]
 10018aa:	je     0x10018ac
 10018ac:	push   ebp
 10018ad:	jae    0x1001914
 10018af:	jb     0x10018d1
 10018b1:	jb     0x1001918
 10018b3:	bound  ebp,QWORD PTR [edi+0x6f]
 10018b6:	je     0x100191d
 10018b8:	add    BYTE PTR fs:[eax],al
 10018bb:	add    BYTE PTR [eax+ebx*2+0x47],al
 10018bf:	gs je  0x1001908
 10018c2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 10018ca:	outs   dx,DWORD PTR ds:[esi]
 10018cb:	outs   dx,BYTE PTR ds:[esi]
 10018cc:	sub    BYTE PTR [ecx],ch
 10018ce:	and    BYTE PTR [esi+0x61],ah
 10018d1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x3300002e
 10018d9:	xor    dh,BYTE PTR [edi]
 10018db:	aaa    
 10018dc:	xor    BYTE PTR [eax],al
 10018de:	add    BYTE PTR [eax],al
 10018e0:	inc    edi
 10018e1:	gs je  0x1001927
 10018e4:	ins    BYTE PTR es:[edi],dx
 10018e5:	popa   
 10018e6:	jae    0x100195b
 10018e8:	dec    esi
 10018e9:	popa   
 10018ea:	ins    DWORD PTR es:[edi],dx
 10018eb:	sub    BYTE PTR gs:[ecx],ch
 10018ee:	add    BYTE PTR [eax],al
 10018f0:	inc    esi
 10018f1:	imul   ebp,DWORD PTR [esi+0x64],0x65535844
 10018f8:	je     0x100196f
 10018fa:	jo     0x1001953
 10018fc:	imul   ebp,DWORD PTR [esi+0x64],0x776f
 1001903:	add    BYTE PTR [edi+0x65],al
 1001906:	je     0x100195f
 1001908:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
 100190f:	js     0x1001985
 1001911:	sub    BYTE PTR [ecx],ch
 1001913:	add    BYTE PTR [eax+ebx*2+0x42],al
 1001917:	jne    0x1001982
 1001919:	ins    BYTE PTR es:[edi],dx
 100191a:	fs push eax
 100191c:	popa   
 100191d:	je     0x1001987
 100191f:	add    BYTE PTR [ebx+0x74],dl
 1001922:	jb     0x100198d
 1001924:	outs   dx,BYTE PTR ds:[esi]
 1001925:	addr16 inc ebx
 1001927:	arpl   WORD PTR [eax+0x50],bp
 100192a:	jb     0x1001995
 100192c:	outs   dx,BYTE PTR ds:[esi]
 100192d:	je     0x1001995
 100192f:	sub    BYTE PTR [ecx],ch
 1001931:	add    BYTE PTR [eax],al
 1001933:	add    BYTE PTR [ebx+0x74],dl
 1001936:	jb     0x10019a1
 1001938:	outs   dx,BYTE PTR ds:[esi]
 1001939:	addr16 inc ebx
 100193b:	arpl   WORD PTR [eax+0x43],bp
 100193e:	outs   dx,DWORD PTR ds:[esi]
 100193f:	jo     0x10019ba
 1001941:	sub    BYTE PTR [ecx],ch
 1001943:	add    BYTE PTR [ecx+0x73],cl
 1001946:	inc    esi
 1001947:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x6c696176
 100194f:	popa   
 1001950:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 1001954:	push   ebp
 1001955:	outs   dx,BYTE PTR ds:[esi]
 1001956:	popa   
 1001957:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 100195b:	je     0x10019cc
 100195d:	and    BYTE PTR [ebx+0x72],ah
 1001960:	gs popa 
 1001962:	je     0x10019c9
 1001964:	and    BYTE PTR [eax+0x61],dh
 1001967:	je     0x10019d1
 1001969:	and    BYTE PTR [ebx+0x74],dh
 100196c:	jb     0x10019d7
 100196e:	outs   dx,BYTE PTR ds:[esi]
 100196f:	addr16 sub al,0x20
 1001972:	and    eax,0x2e732573
 1001977:	add    BYTE PTR [ecx+ebp*2+0x72],al
 100197b:	arpl   WORD PTR gs:[eax+ebx*2+0x20],si
 1001980:	push   ebx
 1001981:	gs je  0x10019f9
 1001984:	jo     0x1001986
 1001986:	add    BYTE PTR [eax],al
 1001988:	inc    esp
 1001989:	push   ebx
 100198a:	gs je  0x1001a02
 100198d:	jo     0x10019d2
 100198f:	popa   
 1001990:	ins    BYTE PTR es:[edi],dx
 1001991:	ins    BYTE PTR es:[edi],dx
 1001992:	bound  esp,QWORD PTR [ecx+0x63]
 1001995:	imul   eax,DWORD PTR [eax],0x0
 1001998:	dec    esp
 1001999:	outs   dx,DWORD PTR ds:[esi]
 100199a:	popa   
 100199b:	fs push ebx
 100199d:	je     0x1001a11
 100199f:	imul   ebp,DWORD PTR [esi+0x67],0x2928
 10019a6:	add    BYTE PTR [eax],al
 10019a8:	outs   dx,BYTE PTR ds:[esi]
 10019a9:	gs gs fs gs and BYTE PTR fs:0x20,bh
 10019b4:	dec    esi
 10019b5:	outs   dx,DWORD PTR ds:[esi]
 10019b6:	je     0x10019d8
 10019b8:	outs   dx,BYTE PTR gs:[esi]
 10019ba:	outs   dx,DWORD PTR ds:[esi]
 10019bb:	jne    0x1001a24
 10019bd:	push   0x73696420
 10019c2:	imul   esp,DWORD PTR [eax],0x73
 10019c5:	jo     0x1001a28
 10019c7:	arpl   WORD PTR [ebp+0x0],sp
 10019ca:	add    BYTE PTR [eax],al
 10019cc:	inc    esp
 10019cd:	pop    eax
 10019ce:	push   ebx
 10019cf:	gs je  0x1001a47
 10019d2:	jo     0x1001a0e
 10019d4:	and    BYTE PTR [edi+0x65],al
 10019d7:	je     0x1001a2b
 10019d9:	gs jno 0x1001a51
 10019dc:	imul   esi,DWORD PTR [edx+0x65],0x73694464
 10019e3:	imul   edx,DWORD PTR [ebx+0x70],0x61
 10019e7:	arpl   WORD PTR [ebp+0x46],sp
 10019ea:	jb     0x1001a5b
 10019ec:	ins    DWORD PTR es:[edi],dx
 10019ed:	dec    esp
 10019ee:	outs   dx,DWORD PTR ds:[esi]
 10019ef:	sub    BYTE PTR [bx+di],ch
 10019f2:	cmp    ah,BYTE PTR [eax]
 10019f4:	jo     0x1001a57
 10019f6:	je     0x1001a60
 10019f8:	and    BYTE PTR [esi+0x61],ch
 10019fb:	ins    DWORD PTR es:[edi],dx
 10019fc:	and    BYTE PTR gs:[edi+ebp*2+0x6f],dh
 1001a01:	and    BYTE PTR [edi+ebp*2+0x6e],ch
 1001a05:	or     al,BYTE PTR cs:[bx+si]
 1001a09:	add    BYTE PTR [eax],al
 1001a0b:	add    BYTE PTR [eax],al
 1001a0d:	add    BYTE PTR [eax],al
 1001a0f:	add    BYTE PTR [eax+ebx*2+0x53],al
 1001a13:	gs je  0x1001a8b
 1001a16:	jo     0x1001a52
 1001a18:	and    BYTE PTR [edi+0x65],al
 1001a1b:	je     0x1001a6f
 1001a1d:	gs jno 0x1001a95
 1001a20:	imul   esi,DWORD PTR [edx+0x65],0x73694464
 1001a27:	imul   edx,DWORD PTR [ebx+0x70],0x61
 1001a2b:	arpl   WORD PTR [ebp+0x46],sp
 1001a2e:	jb     0x1001a9f
 1001a30:	ins    DWORD PTR es:[edi],dx
 1001a31:	dec    esp
 1001a32:	outs   dx,DWORD PTR ds:[esi]
 1001a33:	sub    BYTE PTR [bx+di],ch
 1001a36:	cmp    ah,BYTE PTR [eax]
 1001a38:	inc    edi
 1001a39:	gs je  0x1001a93
 1001a3c:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
 1001a43:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001a4a:	jns    0x1001a74
 1001a4c:	sub    DWORD PTR [eax],esp
 1001a4e:	popaw  
 1001a50:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0xa2e
 1001a58:	push   ebx
 1001a59:	je     0x1001acd
 1001a5b:	imul   ebp,DWORD PTR [esi+0x67],0x3a444920
 1001a62:	and    BYTE PTR ds:0x64,ah
 1001a68:	dec    ebp
 1001a69:	jae    0x1001ad2
 1001a6b:	inc    edx
 1001a6c:	outs   dx,DWORD PTR ds:[esi]
 1001a6d:	js     0x1001a6f
 1001a6f:	add    BYTE PTR [edi+0x65],al
 1001a72:	je     0x1001ab7
 1001a74:	jne    0x1001ae8
 1001a76:	jb     0x1001add
 1001a78:	outs   dx,BYTE PTR ds:[esi]
 1001a79:	je     0x1001abf
 1001a7b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001a82:	jns    0x1001aac
 1001a84:	sub    DWORD PTR [eax],eax
 1001a86:	add    BYTE PTR [eax],al
 1001a88:	push   ebp
 1001a89:	outs   dx,BYTE PTR ds:[esi]
 1001a8a:	popa   
 1001a8b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001a8f:	je     0x1001b00
 1001a91:	and    BYTE PTR [esi+0x69],ah
 1001a94:	outs   dx,BYTE PTR ds:[esi]
 1001a95:	and    BYTE PTR fs:0x73,ah
 1001a9c:	dec    esp
 1001a9d:	outs   dx,DWORD PTR ds:[esi]
 1001a9e:	addr16 dec esi
 1001aa0:	outs   dx,DWORD PTR ds:[esi]
 1001aa1:	inc    esp
 1001aa2:	jae    0x1001b09
 1001aa4:	je     0x1001b1b
 1001aa6:	jo     0x1001aa8
 1001aa8:	push   ebp
 1001aa9:	outs   dx,BYTE PTR ds:[esi]
 1001aaa:	popa   
 1001aab:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001aaf:	je     0x1001b20
 1001ab1:	and    BYTE PTR [esi+0x69],ah
 1001ab4:	outs   dx,BYTE PTR ds:[esi]
 1001ab5:	and    BYTE PTR fs:0x2e73,ah
 1001abc:	fs jae 0x1001b24
 1001abf:	je     0x1001b36
 1001ac1:	jo     0x1001af1
 1001ac3:	fs ins BYTE PTR es:[edi],dx
 1001ac5:	ins    BYTE PTR es:[edi],dx
 1001ac6:	add    BYTE PTR [eax],al
 1001ac8:	fs jae 0x1001b30
 1001acb:	je     0x1001b42
 1001acd:	jo     0x1001b02
 1001acf:	xor    ch,BYTE PTR [esi]
 1001ad1:	fs ins BYTE PTR es:[edi],dx
 1001ad3:	ins    BYTE PTR es:[edi],dx
 1001ad4:	add    BYTE PTR [eax],al
 1001ad6:	add    BYTE PTR [eax],al
 1001ad8:	pop    esp
 1001ad9:	fs jae 0x1001b41
 1001adc:	je     0x1001b53
 1001ade:	jo     0x1001b13
 1001ae0:	xor    ch,BYTE PTR [esi]
 1001ae2:	fs ins BYTE PTR es:[edi],dx
 1001ae4:	ins    BYTE PTR es:[edi],dx
 1001ae5:	add    BYTE PTR [eax],al
 1001ae7:	add    BYTE PTR [esp+eiz*2+0x73],bl
 1001aeb:	gs je  0x1001b63
 1001aee:	jo     0x1001b1e
 1001af0:	fs ins BYTE PTR es:[edi],dx
 1001af2:	ins    BYTE PTR es:[edi],dx
 1001af3:	add    BYTE PTR [esi+0x6f],cl
 1001af6:	and    BYTE PTR [ebx+0x6f],ah
 1001af9:	ins    DWORD PTR es:[edi],dx
 1001afa:	ins    DWORD PTR es:[edi],dx
 1001afb:	popa   
 1001afc:	outs   dx,BYTE PTR ds:[esi]
 1001afd:	and    BYTE PTR fs:[ecx+ebp*2+0x6e],ch
 1001b02:	and    BYTE PTR gs:[ebx+0x77],dh
 1001b06:	imul   esi,DWORD PTR [ebx+eiz*2+0x68],0x74530000
 1001b0e:	jb     0x1001b79
 1001b10:	outs   dx,BYTE PTR ds:[esi]
 1001b11:	addr16 inc ebx
 1001b13:	arpl   WORD PTR [eax+0x43],bp
 1001b16:	outs   dx,DWORD PTR ds:[esi]
 1001b17:	jo     0x1001b92
 1001b19:	inc    ecx
 1001b1a:	sub    BYTE PTR [ecx],ch
 1001b1c:	add    BYTE PTR [eax],al
 1001b1e:	add    BYTE PTR [eax],al
 1001b20:	push   ebp
 1001b21:	outs   dx,BYTE PTR ds:[esi]
 1001b22:	popa   
 1001b23:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001b27:	je     0x1001b98
 1001b29:	and    BYTE PTR [ebx+0x6f],ah
 1001b2c:	jo     0x1001ba7
 1001b2e:	and    BYTE PTR [ebx+0x74],dh
 1001b31:	jb     0x1001b9c
 1001b33:	outs   dx,BYTE PTR ds:[esi]
 1001b34:	and    BYTE PTR [di],ah
 1001b37:	jae    0x1001b67
 1001b39:	add    BYTE PTR [eax],al
 1001b3b:	add    BYTE PTR [eax+0x61],dl
 1001b3e:	jb     0x1001bb3
 1001b40:	gs inc ebx
 1001b42:	outs   dx,DWORD PTR ds:[esi]
 1001b43:	ins    DWORD PTR es:[edi],dx
 1001b44:	ins    DWORD PTR es:[edi],dx
 1001b45:	popa   
 1001b46:	outs   dx,BYTE PTR ds:[esi]
 1001b47:	fs dec esp
 1001b49:	imul   ebp,DWORD PTR [esi+0x65],0x0
 1001b50:	push   ebp
 1001b51:	outs   dx,BYTE PTR ds:[esi]
 1001b52:	popa   
 1001b53:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001b57:	je     0x1001bc8
 1001b59:	and    BYTE PTR [ecx+0x6c],ah
 1001b5c:	ins    BYTE PTR es:[edi],dx
 1001b5d:	outs   dx,DWORD PTR ds:[esi]
 1001b5e:	arpl   WORD PTR [ecx+0x74],sp
 1001b61:	and    BYTE PTR gs:[ebp+0x65],ch
 1001b65:	ins    DWORD PTR es:[edi],dx
 1001b66:	outs   dx,DWORD PTR ds:[esi]
 1001b67:	jb     0x1001be2
 1001b69:	and    BYTE PTR [edx+0x6c],ah
 1001b6c:	outs   dx,DWORD PTR ds:[esi]
 1001b6d:	arpl   WORD PTR [ebx+0x2e],bp
 1001b70:	add    BYTE PTR [eax],al
 1001b72:	add    BYTE PTR [eax],al
 1001b74:	inc    ebx
 1001b75:	outs   dx,DWORD PTR ds:[esi]
 1001b76:	ins    DWORD PTR es:[edi],dx
 1001b77:	ins    DWORD PTR es:[edi],dx
 1001b78:	popa   
 1001b79:	outs   dx,BYTE PTR ds:[esi]
 1001b7a:	fs dec esp
 1001b7c:	imul   ebp,DWORD PTR [esi+0x65],0x7325203a
 1001b83:	add    BYTE PTR [eax],ah
 1001b85:	or     DWORD PTR [eax],eax
 1001b87:	add    BYTE PTR [edi+0x65],al
 1001b8a:	je     0x1001bd2
 1001b8c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1001b94:	outs   dx,DWORD PTR ds:[esi]
 1001b95:	outs   dx,BYTE PTR ds:[esi]
 1001b96:	sub    BYTE PTR [ecx],ch
 1001b98:	and    BYTE PTR [esi+0x61],ah
 1001b9b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x2e
 1001ba3:	add    BYTE PTR [edi+0x65],al
 1001ba6:	je     0x1001bf5
 1001ba8:	outs   dx,DWORD PTR ds:[esi]
 1001ba9:	fs jne 0x1001c18
 1001bac:	gs inc esi
 1001bae:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x28656d61
 1001bb6:	sub    DWORD PTR [eax],eax
 1001bb8:	dec    ecx
 1001bb9:	jae    0x1001c01
 1001bbb:	ins    BYTE PTR es:[edi],dx
 1001bbc:	popa   
 1001bbd:	je     0x1001c08
 1001bbf:	ins    DWORD PTR es:[edi],dx
 1001bc0:	popa   
 1001bc1:	sub    BYTE PTR gs:[bx+di],ch
 1001bc5:	cmp    ah,BYTE PTR [eax]
 1001bc7:	jo     0x1001c2a
 1001bc9:	je     0x1001c33
 1001bcb:	and    BYTE PTR [edi+ebp*2+0x65],ah
 1001bcf:	jae    0x1001bf1
 1001bd1:	outs   dx,BYTE PTR ds:[esi]
 1001bd2:	outs   dx,DWORD PTR ds:[esi]
 1001bd3:	je     0x1001bf5
 1001bd5:	push   0x20657661
 1001bda:	bound  esp,QWORD PTR [ecx+0x63]
 1001bdd:	imul   esp,DWORD PTR [eax],0x73
 1001be0:	ins    BYTE PTR es:[edi],dx
 1001be1:	popa   
 1001be2:	jae    0x1001c4c
 1001be4:	add    BYTE PTR cs:[eax],al
 1001be7:	add    BYTE PTR [ecx+0x73],cl
 1001bea:	inc    esi
 1001beb:	ins    BYTE PTR es:[edi],dx
 1001bec:	popa   
 1001bed:	je     0x1001c38
 1001bef:	ins    DWORD PTR es:[edi],dx
 1001bf0:	popa   
 1001bf1:	sub    BYTE PTR gs:[bx+di],ch
 1001bf5:	cmp    ah,BYTE PTR [eax]
 1001bf7:	push   esp
 1001bf8:	push   edx
 1001bf9:	push   ebp
 1001bfa:	inc    ebp
 1001bfb:	add    BYTE PTR cs:[eax],al
 1001bfe:	add    BYTE PTR [eax],al
 1001c00:	fs js  0x1001c71
 1001c03:	je     0x1001c7a
 1001c05:	outs   dx,BYTE PTR ds:[esi]
 1001c06:	jo     0x1001c36
 1001c08:	imul   ebp,DWORD PTR [esi+0x66],0x72696400
 1001c0f:	arpl   WORD PTR gs:[eax+edi*2+0x2e],si
 1001c14:	imul   ebp,DWORD PTR [esi+0x66],0x6e786400
 1001c1b:	je     0x1001c4b
 1001c1d:	arpl   WORD PTR [ecx+0x62],sp
 1001c20:	add    BYTE PTR [eax],al
 1001c22:	add    BYTE PTR [eax],al
 1001c24:	imul   esi,DWORD PTR fs:[edx+0x65],0x2e787463
 1001c2c:	arpl   WORD PTR [ecx+0x62],sp
 1001c2f:	add    BYTE PTR [ecx+0x73],cl
 1001c32:	inc    esi
 1001c33:	ins    BYTE PTR es:[edi],dx
 1001c34:	popa   
 1001c35:	je     0x1001c80
 1001c37:	ins    DWORD PTR es:[edi],dx
 1001c38:	popa   
 1001c39:	add    BYTE PTR gs:[di+0x6f],cl
 1001c3e:	fs jne 0x1001cad
 1001c41:	cmp    ah,BYTE PTR gs:[eax]
 1001c44:	fs jae 0x1001cac
 1001c47:	je     0x1001cbe
 1001c49:	jo     0x1001c79
 1001c4b:	fs ins BYTE PTR es:[edi],dx
 1001c4d:	ins    BYTE PTR es:[edi],dx
 1001c4e:	add    BYTE PTR [eax],al
 1001c50:	push   ebp
 1001c51:	outs   dx,BYTE PTR ds:[esi]
 1001c52:	imul   ebp,DWORD PTR [esi+0x6f],0x77
 1001c56:	outs   dx,BYTE PTR ds:[esi]
 1001c57:	and    BYTE PTR [ecx+0x6e],ch
 1001c5a:	jae    0x1001cd0
 1001c5c:	popa   
 1001c5d:	ins    BYTE PTR es:[edi],dx
 1001c5e:	ins    BYTE PTR es:[edi],dx
 1001c5f:	and    BYTE PTR [ebx+0x6f],ah
 1001c62:	ins    DWORD PTR es:[edi],dx
 1001c63:	ins    DWORD PTR es:[edi],dx
 1001c64:	popa   
 1001c65:	outs   dx,BYTE PTR ds:[esi]
 1001c66:	fs add BYTE PTR cs:[eax],al
 1001c6a:	add    BYTE PTR [eax],al
 1001c6c:	inc    esp
 1001c6d:	imul   esi,DWORD PTR [edx+0x65],0x53587463
 1001c74:	gs je  0x1001cec
 1001c77:	jo     0x1001ccc
 1001c79:	push   0x5545776f
 1001c7e:	dec    esp
 1001c7f:	inc    ecx
 1001c80:	add    BYTE PTR [eax],al
 1001c82:	add    BYTE PTR [eax],al
 1001c84:	inc    esp
 1001c85:	imul   esi,DWORD PTR [edx+0x65],0x53587463
 1001c8c:	gs je  0x1001d04
 1001c8f:	jo     0x1001ce4
 1001c91:	gs je  0x1001cd7
 1001c94:	popa   
 1001c95:	ins    BYTE PTR es:[edi],dx
 1001c96:	ins    BYTE PTR es:[edi],dx
 1001c97:	bound  esp,QWORD PTR [ecx+0x63]
 1001c9a:	imul   eax,DWORD PTR [eax],0x44
 1001c9d:	imul   esi,DWORD PTR [edx+0x65],0x53587463
 1001ca4:	gs je  0x1001d1c
 1001ca7:	jo     0x1001cea
 1001ca9:	add    BYTE PTR [eax],al
 1001cab:	add    BYTE PTR [ebx+0x65],dl
 1001cae:	je     0x1001cf4
 1001cb0:	pop    eax
 1001cb1:	push   ebx
 1001cb2:	gs je  0x1001d2a
 1001cb5:	jo     0x1001d09
 1001cb7:	gs addr16 push esi
 1001cba:	popa   
 1001cbb:	ins    BYTE PTR es:[edi],dx
 1001cbc:	jne    0x1001d23
 1001cbe:	sub    BYTE PTR [ecx],ch
 1001cc0:	and    BYTE PTR [esi+0x61],ah
 1001cc3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x2e
 1001ccb:	add    BYTE PTR [ebx+0x75],al
 1001cce:	jb     0x1001d42
 1001cd0:	outs   dx,BYTE PTR gs:[esi]
 1001cd2:	je     0x1001cf4
 1001cd4:	ins    BYTE PTR es:[edi],dx
 1001cd5:	outs   dx,DWORD PTR ds:[esi]
 1001cd6:	outs   dx,DWORD PTR ds:[si]
 1001cd8:	outs   dx,BYTE PTR ds:[esi]
 1001cd9:	and    BYTE PTR [ebp+0x73],dh
 1001cdc:	gs jb  0x1001cff
 1001cdf:	outs   dx,DWORD PTR fs:[esi]
 1001ce1:	gs jae 0x1001d52
 1001ce4:	daa    
 1001ce5:	je     0x1001d07
 1001ce7:	push   0x20657661
 1001cec:	je     0x1001d56
 1001cee:	and    BYTE PTR gs:[ecx+0x64],al
 1001cf2:	ins    DWORD PTR es:[edi],dx
 1001cf3:	imul   ebp,DWORD PTR [esi+0x69],0x61727473
 1001cfa:	je     0x1001d6b
 1001cfc:	jb     0x1001d1e
 1001cfe:	jo     0x1001d72
 1001d00:	imul   esi,DWORD PTR [esi+0x69],0x6567656c
 1001d07:	add    BYTE PTR cs:[eax],al
 1001d0a:	add    BYTE PTR [eax],al
 1001d0c:	push   esp
 1001d0d:	push   0x76207369
 1001d12:	gs jb  0x1001d88
 1001d15:	imul   ebp,DWORD PTR [edi+0x6e],0x20666f20
 1001d1c:	inc    esp
 1001d1d:	imul   esi,DWORD PTR [edx+0x65],0x20587463
 1001d24:	imul   esi,DWORD PTR [ebx+0x20],0x20746f6e
 1001d2b:	arpl   WORD PTR [edi+0x6d],bp
 1001d2e:	jo     0x1001d91
 1001d30:	je     0x1001d9b
 1001d32:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001d36:	ja     0x1001da1
 1001d38:	je     0x1001da2
 1001d3a:	and    BYTE PTR [edi+0x69],dl
 1001d3d:	outs   dx,BYTE PTR ds:[esi]
 1001d3e:	outs   dx,DWORD PTR fs:[esi]
 1001d40:	ja     0x1001db5
 1001d42:	dec    esi
 1001d43:	push   esp
 1001d44:	and    BYTE PTR [esi+ebp*1],dh
 1001d47:	xor    BYTE PTR [esi],ch
 1001d49:	add    BYTE PTR [eax],al
 1001d4b:	add    BYTE PTR [eax],al
 1001d4d:	add    BYTE PTR [eax],al
 1001d4f:	add    BYTE PTR [ecx+0x6e],cl
 1001d52:	jbe    0x1001db5
 1001d54:	ins    BYTE PTR es:[edi],dx
 1001d55:	imul   esp,DWORD PTR [eax+eiz*1+0x63],0x616d6d6f
 1001d5d:	outs   dx,BYTE PTR ds:[esi]
 1001d5e:	and    BYTE PTR fs:[ecx+ebp*2+0x6e],ch
 1001d63:	and    BYTE PTR gs:[ebx+0x77],dh
 1001d67:	imul   esi,DWORD PTR [ebx+eiz*2+0x68],0x7375202c
 1001d6f:	imul   ebp,DWORD PTR [esi+0x67],0x6d6f6320
 1001d76:	ins    DWORD PTR es:[edi],dx
 1001d77:	popa   
 1001d78:	outs   dx,BYTE PTR ds:[esi]
 1001d79:	and    BYTE PTR fs:[ecx+0x44],cl
 1001d7d:	and    BYTE PTR ds:0x69772064,ah
 1001d83:	je     0x1001ded
 1001d85:	outs   dx,DWORD PTR ds:[esi]
 1001d86:	jne    0x1001dfc
 1001d88:	and    BYTE PTR [esi+0x6c],ah
 1001d8b:	popa   
 1001d8c:	je     0x1001dae
 1001d8e:	imul   ebp,DWORD PTR [ebp+0x61],0x2e6567
 1001d95:	add    BYTE PTR [eax],al
 1001d97:	add    BYTE PTR [edi+0x69],dl
 1001d9a:	outs   dx,BYTE PTR ds:[esi]
 1001d9b:	dec    ebp
 1001d9c:	popa   
 1001d9d:	imul   ebp,DWORD PTR [esi+0x0],0x61766e49
 1001da4:	ins    BYTE PTR es:[edi],dx
 1001da5:	imul   esp,DWORD PTR [eax+eiz*1+0x63],0x616d6d6f
 1001dad:	outs   dx,BYTE PTR ds:[esi]
 1001dae:	and    BYTE PTR fs:[ecx+ebp*2+0x6e],ch
 1001db3:	and    BYTE PTR gs:[ebx+0x77],dh
 1001db7:	imul   esi,DWORD PTR [ebx+eiz*2+0x68],0x2e
 1001dbf:	add    BYTE PTR [ecx+ebp*2+0x72],al
 1001dc3:	arpl   WORD PTR gs:[eax+ebx*2+0x53],si
 1001dc8:	gs je  0x1001e40
 1001dcb:	jo     0x1001e0e
 1001dcd:	add    BYTE PTR [eax],al
 1001dcf:	add    BYTE PTR [ecx+ebp*2+0x72],al
 1001dd3:	arpl   WORD PTR gs:[eax+ebx*2+0x53],si
 1001dd8:	gs je  0x1001e50
 1001ddb:	jo     0x1001e24
 1001ddd:	gs je  0x1001e25
 1001de0:	push   ebp
 1001de1:	dec    esp
 1001de2:	inc    ecx
 1001de3:	inc    ecx
 1001de4:	add    BYTE PTR [eax],al
 1001de6:	add    BYTE PTR [eax],al
 1001de8:	inc    esp
 1001de9:	imul   esi,DWORD PTR [edx+0x65],0x53587463
 1001df0:	gs je  0x1001e68
 1001df3:	jo     0x1001e48
 1001df5:	gs je  0x1001e3b
 1001df8:	popa   
 1001df9:	ins    BYTE PTR es:[edi],dx
 1001dfa:	ins    BYTE PTR es:[edi],dx
 1001dfb:	bound  esp,QWORD PTR [ecx+0x63]
 1001dfe:	imul   eax,DWORD PTR [eax],0x43
 1001e01:	inc    esp
 1001e02:	ins    BYTE PTR es:[edi],dx
 1001e03:	ins    BYTE PTR es:[edi],dx
 1001e04:	dec    esp
 1001e05:	outs   dx,DWORD PTR ds:[esi]
 1001e06:	popa   
 1001e07:	fs gs jb 0x1001e45
 1001e0b:	cmp    al,BYTE PTR [esi+0x72]
 1001e0e:	gs gs dec esp
 1001e11:	imul   esp,DWORD PTR [edx+0x72],0x797261
 1001e18:	dec    ecx
 1001e19:	outs   dx,BYTE PTR ds:[esi]
 1001e1a:	jbe    0x1001e7d
 1001e1c:	ins    BYTE PTR es:[edi],dx
 1001e1d:	imul   esp,DWORD PTR [eax+eiz*1+0x6d],0x65626d65
 1001e25:	jb     0x1001e47
 1001e27:	sub    eax,0x685f6d20
 1001e2c:	dec    ebp
 1001e2d:	outs   dx,DWORD PTR ds:[esi]
 1001e2e:	fs jne 0x1001e9d
 1001e31:	and    BYTE PTR gs:[ecx+0x73],ch
 1001e35:	and    BYTE PTR [esi+0x55],cl
 1001e38:	dec    esp
 1001e39:	dec    esp
 1001e3a:	add    BYTE PTR cs:[ebx+0x44],al
 1001e3e:	ins    BYTE PTR es:[edi],dx
 1001e3f:	ins    BYTE PTR es:[edi],dx
 1001e40:	dec    esp
 1001e41:	outs   dx,DWORD PTR ds:[esi]
 1001e42:	popa   
 1001e43:	fs gs jb 0x1001e81
 1001e47:	cmp    al,BYTE PTR [edi+0x65]
 1001e4a:	je     0x1001e9c
 1001e4c:	jb     0x1001ebd
 1001e4e:	arpl   WORD PTR [ecx+0x64],ax
 1001e51:	fs jb  0x1001eb9
 1001e54:	jae    0x1001ec9
 1001e56:	add    BYTE PTR [eax],al
 1001e58:	inc    ebx
 1001e59:	inc    esp
 1001e5a:	pop    eax
 1001e5b:	push   edi
 1001e5c:	push   ebx
 1001e5d:	gs je  0x1001ed5
 1001e60:	jo     0x1001e8a
 1001e62:	sub    DWORD PTR [eax],eax
 1001e64:	add    BYTE PTR [eax],al
 1001e66:	add    BYTE PTR [eax],al
 1001e68:	inc    esp
 1001e69:	push   ebx
 1001e6a:	gs je  0x1001ee2
 1001e6d:	jo     0x1001eb2
 1001e6f:	popa   
 1001e70:	ins    BYTE PTR es:[edi],dx
 1001e71:	ins    BYTE PTR es:[edi],dx
 1001e72:	bound  esp,QWORD PTR [ecx+0x63]
 1001e75:	imul   ebp,DWORD PTR [eax],0x29
 1001e78:	cmp    ah,BYTE PTR [eax]
 1001e7a:	push   eax
 1001e7b:	push   0x20657361
 1001e80:	cmp    eax,0x2c642520
 1001e85:	and    BYTE PTR [ebx+0x74],dl
 1001e88:	gs jo  0x1001efe
 1001e8b:	and    BYTE PTR ds:0x642520,bh
 1001e91:	add    BYTE PTR [eax],al
 1001e93:	add    BYTE PTR [ebp+0x3a],ah
 1001e96:	pop    esp
 1001e97:	bound  esi,QWORD PTR [esp+ebx*2+0x31]
 1001e9b:	cmp    DWORD PTR [ebx],esi
 1001e9d:	xor    al,0x36
 1001e9f:	xor    bl,BYTE PTR [ebx+esi*2+0x65]
 1001ea3:	je     0x1001f1a
 1001ea5:	jo     0x1001f03
 1001ea7:	fs gs ins BYTE PTR es:[edi],dx
 1001eaa:	imul   esi,DWORD PTR [esi+0x65],0x6c626172
 1001eb1:	gs jae 0x1001f10
 1001eb4:	fs js  0x1001f2a
 1001eb7:	gs je  0x1001f2f
 1001eba:	jo     0x1001f18
 1001ebc:	jo     0x1001f31
 1001ebe:	push   0x73746565
 1001ec3:	arpl   WORD PTR cs:[eax+0x70],si
 1001ec7:	add    BYTE PTR [ebx+0x44],al
 1001eca:	pop    eax
 1001ecb:	push   edi
 1001ecc:	push   ebx
 1001ecd:	gs je  0x1001f45
 1001ed0:	jo     0x1001f0c
 1001ed2:	cmp    cl,BYTE PTR [ecx+0x6e]
 1001ed5:	jae    0x1001f4b
 1001ed7:	popa   
 1001ed8:	ins    BYTE PTR es:[edi],dx
 1001ed9:	ins    BYTE PTR es:[edi],dx
 1001eda:	add    BYTE PTR [eax],al
 1001edc:	inc    ebx
 1001edd:	jb     0x1001f44
 1001edf:	popa   
 1001ee0:	je     0x1001f47
 1001ee2:	push   esp
 1001ee3:	push   0x64616572
 1001ee8:	sub    BYTE PTR [ecx],ch
 1001eea:	add    BYTE PTR [eax],al
 1001eec:	push   eax
 1001eed:	jb     0x1001f54
 1001eef:	imul   ebp,DWORD PTR [esi+0x73],0x676c4474
 1001ef6:	push   eax
 1001ef7:	jb     0x1001f68
 1001ef9:	arpl   WORD PTR [eax],ax
 1001efb:	add    BYTE PTR [ebp+0x6e],dl
 1001efe:	popa   
 1001eff:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001f03:	je     0x1001f74
 1001f05:	and    BYTE PTR [ecx+0x6e],ch
 1001f08:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 1001f10:	and    BYTE PTR [ebx+0x44],al
 1001f13:	pop    eax
 1001f14:	push   edi
 1001f15:	push   ebx
 1001f16:	gs je  0x1001f8e
 1001f19:	jo     0x1001f49
 1001f1b:	add    BYTE PTR [eax+0x72],dl
 1001f1e:	outs   dx,DWORD PTR ds:[esi]
 1001f1f:	jo     0x1001f74
 1001f21:	push   0x5f746565
 1001f26:	push   edx
 1001f27:	bound  ebp,QWORD PTR gs:[edi+0x6f]
 1001f2b:	je     0x1001f80
 1001f2d:	jns    0x1001fa2
 1001f2f:	je     0x1001f96
 1001f31:	ins    DWORD PTR es:[edi],dx
 1001f32:	sub    BYTE PTR [ecx],ch
 1001f34:	add    BYTE PTR [eax],al
 1001f36:	add    BYTE PTR [eax],al
 1001f38:	inc    ebx
 1001f39:	inc    esp
 1001f3a:	ins    BYTE PTR es:[edi],dx
 1001f3b:	ins    BYTE PTR es:[edi],dx
 1001f3c:	dec    esp
 1001f3d:	outs   dx,DWORD PTR ds:[esi]
 1001f3e:	popa   
 1001f3f:	fs gs jb 0x1001f7d
 1001f43:	cmp    cl,BYTE PTR [edi+ebp*2+0x61]
 1001f47:	fs dec esp
 1001f49:	imul   esp,DWORD PTR [edx+0x72],0x41797261
 1001f50:	add    BYTE PTR [eax],al
 1001f52:	add    BYTE PTR [eax],al
 1001f54:	cmp    bl,BYTE PTR gs:[edx+eiz*2+0x74]
 1001f59:	pop    esp
 1001f5a:	xor    DWORD PTR [ecx],edi
 1001f5c:	xor    esi,DWORD PTR [esi+esi*1]
 1001f5f:	xor    bl,BYTE PTR [ebx+esi*2+0x65]
 1001f63:	je     0x1001fda
 1001f65:	jo     0x1001fc3
 1001f67:	fs gs ins BYTE PTR es:[edi],dx
 1001f6a:	imul   esi,DWORD PTR [esi+0x65],0x6c626172
 1001f71:	gs jae 0x1001fd0
 1001f74:	fs js  0x1001fea
 1001f77:	gs je  0x1001fef
 1001f7a:	jo     0x1001fd8
 1001f7c:	jo     0x1001ff1
 1001f7e:	push   0x73746565
 1001f83:	cs push 0x47000000
 1001f89:	gs je  0x1001fdf
 1001f8c:	jns    0x1002001
 1001f8e:	je     0x1001ff5
 1001f90:	ins    DWORD PTR es:[edi],dx
 1001f91:	inc    esp
 1001f92:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001f99:	jns    0x1001fc3
 1001f9b:	sub    DWORD PTR [eax],eax
 1001f9d:	add    BYTE PTR [eax],al
 1001f9f:	add    BYTE PTR [esi+0x52],al
 1001fa2:	jne    0x1002012
 1001fa4:	outs   dx,BYTE PTR ds:[esi]
 1001fa5:	imul   ebp,DWORD PTR [esi+0x67],0x69576e4f
 1001fac:	outs   dx,BYTE PTR ds:[esi]
 1001fad:	pop    eax
 1001fae:	push   eax
 1001faf:	add    BYTE PTR [esi+ebp*2+0x74],bl
 1001fb3:	imul   esi,DWORD PTR [edx+0x6e],0x6c
 1001fb7:	jo     0x100201a
 1001fb9:	cs gs js 0x1002022
 1001fbd:	add    BYTE PTR [eax],al
 1001fbf:	add    BYTE PTR [esi+0x52],al
 1001fc2:	jne    0x1002032
 1001fc4:	outs   dx,BYTE PTR ds:[esi]
 1001fc5:	imul   ebp,DWORD PTR [esi+0x67],0x454e6e4f
 1001fcc:	push   esp
 1001fcd:	push   ebx
 1001fce:	gs jb  0x1002047
 1001fd1:	gs jb  0x1001fd4
 1001fd4:	push   ebp
 1001fd5:	outs   dx,BYTE PTR ds:[esi]
 1001fd6:	popa   
 1001fd7:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1001fdb:	je     0x100204c
 1001fdd:	and    BYTE PTR [ecx+0x6e],ch
 1001fe0:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 1001fe8:	and    BYTE PTR [ebx+0x44],al
 1001feb:	push   ebx
 1001fec:	gs je  0x1002064
 1001fef:	jo     0x100201f
 1001ff1:	add    BYTE PTR [eax],al
 1001ff3:	add    BYTE PTR [ecx+ebp*2+0x72],al
 1001ff7:	arpl   WORD PTR gs:[eax+ebx*2+0x53],si
 1001ffc:	gs je  0x1002074
 1001fff:	jo     0x1002048
 1002001:	gs je  0x1002049
 1002004:	push   ebp
 1002005:	dec    esp
 1002006:	inc    ecx
 1002007:	sub    BYTE PTR [ecx],ch
 1002009:	and    BYTE PTR [edx+0x65],dh
 100200c:	je     0x1002083
 100200e:	jb     0x100207e
 1002010:	gs and BYTE PTR fs:[eax],dh
 1002014:	add    BYTE PTR cs:[eax],al
 1002017:	add    BYTE PTR [ecx+0x6e],cl
 100201a:	je     0x100208e
 100201c:	outs   dx,DWORD PTR ds:[esi]
 100201d:	inc    esp
 100201e:	ins    BYTE PTR es:[edi],dx
 100201f:	addr16 push eax
 1002021:	jb     0x1002092
 1002023:	arpl   WORD PTR [eax],ax
 1002025:	add    BYTE PTR [eax],al
 1002027:	add    BYTE PTR [ecx+ebp*2+0x72],al
 100202b:	arpl   WORD PTR gs:[eax+ebx*2+0x53],si
 1002030:	inc    ebp
 1002031:	je     0x10020a8
 1002033:	jo     0x100207c
 1002035:	gs je  0x100207d
 1002038:	push   ebp
 1002039:	dec    esp
 100203a:	inc    ecx
 100203b:	sub    BYTE PTR [ecx],ch
 100203d:	and    BYTE PTR [edx+0x65],dh
 1002040:	je     0x10020b7
 1002042:	jb     0x10020b2
 1002044:	gs and BYTE PTR fs:[eax],dh
 1002048:	add    BYTE PTR cs:[eax],al
 100204b:	add    BYTE PTR [ebx+0x44],al
 100204e:	pop    eax
 100204f:	push   edi
 1002050:	push   ebx
 1002051:	gs je  0x10020c9
 1002054:	jo     0x1002090
 1002056:	cmp    bh,BYTE PTR [esi+0x43]
 1002059:	inc    esp
 100205a:	pop    eax
 100205b:	push   edi
 100205c:	push   ebx
 100205d:	gs je  0x10020d5
 1002060:	jo     0x1002062
 1002062:	add    BYTE PTR [eax],al
 1002064:	inc    ebx
 1002065:	ins    BYTE PTR es:[edi],dx
 1002066:	outs   dx,DWORD PTR ds:[esi]
 1002067:	jae    0x10020ce
 1002069:	dec    eax
 100206a:	popa   
 100206b:	outs   dx,BYTE PTR ds:[esi]
 100206c:	fs ins BYTE PTR es:[edi],dx
 100206e:	sub    BYTE PTR gs:[ecx],ch
 1002071:	add    BYTE PTR [eax],al
 1002073:	add    BYTE PTR [esi+0x43],bh
 1002076:	inc    esp
 1002077:	pop    eax
 1002078:	push   edi
 1002079:	push   ebx
 100207a:	gs je  0x10020f2
 100207d:	jo     0x10020a7
 100207f:	sub    DWORD PTR [eax],eax
 1002081:	add    BYTE PTR [eax],al
 1002083:	add    BYTE PTR [ecx+0x6e],cl
 1002086:	jbe    0x10020e9
 1002088:	ins    BYTE PTR es:[edi],dx
 1002089:	imul   esp,DWORD PTR [eax+eiz*1+0x70],0x6d617261
 1002091:	gs je  0x10020f9
 1002094:	jb     0x10020b6
 1002096:	sub    eax,0x58444320
 100209b:	push   edi
 100209c:	push   ebx
 100209d:	gs je  0x1002115
 10020a0:	jo     0x10020c2
 10020a2:	imul   esi,DWORD PTR [ebx+0x20],0x4c4c554e
 10020a9:	add    BYTE PTR cs:[eax],al
 10020ac:	inc    ebx
 10020ad:	inc    esp
 10020ae:	pop    eax
 10020af:	push   edi
 10020b0:	push   ebx
 10020b1:	gs je  0x1002129
 10020b4:	jo     0x10020f0
 10020b6:	cmp    cl,BYTE PTR [ecx+0x6e]
 10020b9:	imul   esi,DWORD PTR [ecx+ecx*2+0x6e],0x6c617473
 10020c1:	ins    BYTE PTR es:[edi],dx
 10020c2:	sub    BYTE PTR [ecx],ch
 10020c4:	and    BYTE PTR [esi+0x61],ah
 10020c7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x2e
 10020cf:	add    BYTE PTR [ebx+0x44],al
 10020d2:	pop    eax
 10020d3:	push   edi
 10020d4:	push   ebx
 10020d5:	gs je  0x100214d
 10020d8:	jo     0x1002114
 10020da:	cmp    cl,BYTE PTR [ecx+0x6e]
 10020dd:	jae    0x1002153
 10020df:	popa   
 10020e0:	ins    BYTE PTR es:[edi],dx
 10020e1:	ins    BYTE PTR es:[edi],dx
 10020e2:	sub    BYTE PTR [ecx],ch
 10020e4:	and    BYTE PTR [esi+0x61],ah
 10020e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x2e
 10020ef:	add    BYTE PTR [ebx+0x74],dh
 10020f2:	popa   
 10020f3:	jb     0x1002169
 10020f5:	and    BYTE PTR [ecx+0x6e],ch
 10020f8:	jae    0x100216e
 10020fa:	popa   
 10020fb:	ins    BYTE PTR es:[edi],dx
 10020fc:	ins    BYTE PTR es:[edi],dx
 10020fd:	popa   
 10020fe:	je     0x1002169
 1002100:	outs   dx,DWORD PTR ds:[esi]
 1002101:	outs   dx,BYTE PTR ds:[esi]
 1002102:	add    BYTE PTR [eax],al
 1002104:	push   eax
 1002105:	jb     0x1002176
 1002107:	addr16 jb 0x100216f
 100210a:	jae    0x100217f
 100210c:	inc    esp
 100210d:	ins    BYTE PTR es:[edi],dx
 100210e:	addr16 push eax
 1002110:	jb     0x1002181
 1002112:	arpl   WORD PTR [eax],ax
 1002114:	push   edi
 1002115:	dec    ebp
 1002116:	pop    edi
 1002117:	inc    ecx
 1002118:	push   eax
 1002119:	push   eax
 100211a:	pop    edi
 100211b:	inc    ebp
 100211c:	dec    esi
 100211d:	inc    esp
 100211e:	dec    ecx
 100211f:	dec    esi
 1002120:	push   ebx
 1002121:	push   esp
 1002122:	inc    ecx
 1002123:	dec    esp
 1002124:	dec    esp
 1002125:	add    BYTE PTR [eax],al
 1002127:	add    BYTE PTR [ebx+0x72],al
 100212a:	gs popa 
 100212c:	je     0x1002193
 100212e:	push   eax
 100212f:	jb     0x10021a0
 1002131:	jo     0x1002198
 1002133:	jb     0x10021a9
 1002135:	jns    0x100218a
 1002137:	push   0x746565
 100213c:	push   eax
 100213d:	jb     0x10021ae
 100213f:	jo     0x10021a6
 1002141:	jb     0x10021b7
 1002143:	jns    0x1002198
 1002145:	push   0x28746565
 100214a:	sub    DWORD PTR [eax],eax
 100214c:	jb     0x10021b3
 100214e:	bound  ebp,QWORD PTR [edi+0x6f]
 1002151:	je     0x1002173
 1002153:	jae    0x10021ce
 1002155:	jae    0x10021cb
 1002157:	gs ins DWORD PTR es:[edi],dx
 1002159:	add    BYTE PTR [eax],al
 100215b:	add    BYTE PTR [ebx+0x6f],ah
 100215e:	ins    DWORD PTR es:[edi],dx
 100215f:	arpl   WORD PTR [esp+ebp*2+0x33],si
 1002163:	xor    ch,BYTE PTR [esi]
 1002165:	fs ins BYTE PTR es:[edi],dx
 1002167:	ins    BYTE PTR es:[edi],dx
 1002168:	and    BYTE PTR [esi+0x65],dh
 100216b:	jb     0x10021e0
 100216d:	imul   ebp,DWORD PTR [edi+0x6e],0x6425203a
 1002174:	cs and eax,0x2e643230
 100217a:	and    eax,0x2e643230
 100217f:	and    eax,0x643430
 1002184:	pop    esp
 1002185:	arpl   WORD PTR [edi+0x6d],bp
 1002188:	arpl   WORD PTR [esp+ebp*2+0x33],si
 100218c:	xor    ch,BYTE PTR [esi]
 100218e:	fs ins BYTE PTR es:[edi],dx
 1002190:	ins    BYTE PTR es:[edi],dx
 1002191:	add    BYTE PTR [eax],al
 1002193:	add    BYTE PTR [ebx+0x74],dl
 1002196:	popa   
 1002197:	jb     0x100220d
 1002199:	push   edi
 100219a:	imul   edi,DWORD PTR [edx+0x61],0x57006472
 10021a1:	imul   ebp,DWORD PTR [esi+0x39],0x3a292835
 10021a8:	and    BYTE PTR [eax+ebp*2+0x69],dl
 10021ac:	jae    0x10021ce
 10021ae:	jo     0x100221c
 10021b0:	popa   
 10021b1:	je     0x1002219
 10021b3:	outs   dx,DWORD PTR ds:[esi]
 10021b4:	jb     0x1002223
 10021b6:	and    BYTE PTR [ecx+0x73],ch
 10021b9:	and    BYTE PTR [esi+0x6f],ch
 10021bc:	je     0x10021de
 10021be:	jae    0x1002235
 10021c0:	jo     0x1002232
 10021c2:	outs   dx,DWORD PTR ds:[esi]
 10021c3:	jb     0x1002239
 10021c5:	gs fs add BYTE PTR cs:[eax],al
 10021ca:	add    BYTE PTR [eax],al
 10021cc:	push   ebx
 10021cd:	je     0x1002230
 10021cf:	jb     0x1002245
 10021d1:	push   edi
 10021d2:	imul   edi,DWORD PTR [edx+0x61],0x29286472
 10021d9:	add    BYTE PTR [eax],al
 10021db:	add    BYTE PTR [ebp+0x3a],ah
 10021de:	pop    esp
 10021df:	bound  esi,QWORD PTR [esp+ebx*2+0x31]
 10021e3:	cmp    DWORD PTR [ebx],esi
 10021e5:	xor    al,0x36
 10021e7:	xor    bl,BYTE PTR [ebx+esi*2+0x65]
 10021eb:	je     0x1002262
 10021ed:	jo     0x100224b
 10021ef:	fs gs ins BYTE PTR es:[edi],dx
 10021f2:	imul   esi,DWORD PTR [esi+0x65],0x6c626172
 10021f9:	gs jae 0x1002258
 10021fc:	fs js  0x1002272
 10021ff:	gs je  0x1002277
 1002202:	jo     0x1002260
 1002204:	jne    0x100227a
 1002206:	imul   ebp,DWORD PTR [ebx+esi*2+0x2e],0x707063
 100220e:	add    BYTE PTR [eax],al
 1002210:	push   ebx
 1002211:	push   0x654d776f
 1002216:	jae    0x100228b
 1002218:	popa   
 1002219:	add    BYTE PTR gs:[si+0x42],bh
 100221e:	add    BYTE PTR [ecx],al
 1002220:	sub    eax,DWORD PTR [ebp-0x41cbff00]
 1002226:	add    BYTE PTR [ecx],al
 1002228:	bound  esp,QWORD PTR [ecx+0x64]
 100222b:	and    BYTE PTR [ecx+0x6c],ah
 100222e:	ins    BYTE PTR es:[edi],dx
 100222f:	outs   dx,DWORD PTR ds:[esi]
 1002230:	arpl   WORD PTR [ecx+0x74],sp
 1002233:	imul   ebp,DWORD PTR [edi+0x6e],0x6f430000
 100223a:	jb     0x1002281
 100223c:	js     0x10022a7
 100223e:	je     0x1002290
 1002240:	jb     0x10022b1
 1002242:	arpl   WORD PTR [ebp+0x73],sp
 1002245:	jae    0x1002247
 1002247:	add    BYTE PTR [ebp+0x0],ch
 100224a:	jae    0x100224c
 100224c:	arpl   WORD PTR [eax],ax
 100224e:	outs   dx,DWORD PTR ds:[esi]
 100224f:	add    BYTE PTR [edx+0x0],dh
 1002252:	add    BYTE PTR gs:[ebp+0x0],ah
 1002256:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 100225b:	add    BYTE PTR [eax+eax*1+0x0],ch
 100225f:	add    BYTE PTR [edx+0x0],dh
 1002262:	jne    0x1002264
 1002264:	outs   dx,BYTE PTR ds:[esi]
 1002265:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002269:	add    BYTE PTR [ebp+0x0],ch
 100226c:	add    BYTE PTR gs:[eax],ah
 100226f:	add    BYTE PTR [ebp+0x0],ah
 1002272:	jb     0x1002274
 1002274:	jb     0x1002276
 1002276:	outs   dx,DWORD PTR ds:[esi]
 1002277:	add    BYTE PTR [edx+0x0],dh
 100227a:	and    BYTE PTR [eax],al
 100227c:	add    BYTE PTR [eax],al
 100227e:	add    BYTE PTR [eax],al
 1002280:	or     eax,0xa00
 1002285:	add    BYTE PTR [eax],al
 1002287:	add    BYTE PTR [eax+eax*1+0x4c],dl
 100228b:	add    BYTE PTR [edi+0x0],cl
 100228e:	push   ebx
 100228f:	add    BYTE PTR [ebx+0x0],dl
 1002292:	and    BYTE PTR [eax],al
 1002294:	add    BYTE PTR gs:[edx+0x0],dh
 1002298:	jb     0x100229a
 100229a:	outs   dx,DWORD PTR ds:[esi]
 100229b:	add    BYTE PTR [edx+0x0],dh
 100229e:	or     eax,0xa00
 10022a3:	add    BYTE PTR [ebx+0x0],dl
 10022a6:	dec    ecx
 10022a7:	add    BYTE PTR [esi+0x0],cl
 10022aa:	inc    edi
 10022ab:	add    BYTE PTR [eax],ah
 10022ad:	add    BYTE PTR [ebp+0x0],ah
 10022b0:	jb     0x10022b2
 10022b2:	jb     0x10022b4
 10022b4:	outs   dx,DWORD PTR ds:[esi]
 10022b5:	add    BYTE PTR [edx+0x0],dh
 10022b8:	or     eax,0xa00
 10022bd:	add    BYTE PTR [eax],al
 10022bf:	add    BYTE PTR [eax+eax*1+0x4f],al
 10022c3:	add    BYTE PTR [ebp+0x0],cl
 10022c6:	inc    ecx
 10022c7:	add    BYTE PTR [ecx+0x0],cl
 10022ca:	dec    esi
 10022cb:	add    BYTE PTR [eax],ah
 10022cd:	add    BYTE PTR [ebp+0x0],ah
 10022d0:	jb     0x10022d2
 10022d2:	jb     0x10022d4
 10022d4:	outs   dx,DWORD PTR ds:[esi]
 10022d5:	add    BYTE PTR [edx+0x0],dh
 10022d8:	or     eax,0xa00
 10022dd:	add    BYTE PTR [eax],al
 10022df:	add    BYTE PTR [edx+0x0],dl
 10022e2:	add    BYTE PTR ss:[eax],dh
 10022e5:	add    BYTE PTR [ebx],dh
 10022e7:	add    BYTE PTR [ebx],dh
 10022e9:	add    BYTE PTR ds:0x2d000a00,cl
 10022ef:	add    BYTE PTR [eax],ah
 10022f1:	add    BYTE PTR [ecx+0x0],al
 10022f4:	je     0x10022f6
 10022f6:	je     0x10022f8
 10022f8:	add    BYTE PTR gs:[ebp+0x0],ch
 10022fc:	jo     0x10022fe
 10022fe:	je     0x1002300
 1002300:	and    BYTE PTR [eax],al
 1002302:	je     0x1002304
 1002304:	outs   dx,DWORD PTR ds:[esi]
 1002305:	add    BYTE PTR [eax],ah
 1002307:	add    BYTE PTR [ebp+0x0],dh
 100230a:	jae    0x100230c
 100230c:	add    BYTE PTR gs:[eax],ah
 100230f:	add    BYTE PTR [ebp+0x0],cl
 1002312:	push   ebx
 1002313:	add    BYTE PTR [ecx+0x0],cl
 1002316:	dec    esp
 1002317:	add    BYTE PTR [eax],ah
 1002319:	add    BYTE PTR [ebx+0x0],ah
 100231c:	outs   dx,DWORD PTR ds:[esi]
 100231d:	add    BYTE PTR [eax+eax*1+0x65],ah
 1002321:	add    BYTE PTR [eax],ah
 1002323:	add    BYTE PTR [esi+0x0],ah
 1002326:	jb     0x1002328
 1002328:	outs   dx,DWORD PTR ds:[esi]
 1002329:	add    BYTE PTR [ebp+0x0],ch
 100232c:	and    BYTE PTR [eax],al
 100232e:	je     0x1002330
 1002330:	push   0x73006900
 1002335:	add    BYTE PTR [eax],ah
 1002337:	add    BYTE PTR [ecx+0x0],ah
 100233a:	jae    0x100233c
 100233c:	jae    0x100233e
 100233e:	add    BYTE PTR gs:[ebp+0x0],ch
 1002342:	bound  eax,QWORD PTR [eax]
 1002344:	ins    BYTE PTR es:[edi],dx
 1002345:	add    BYTE PTR [ecx+0x0],bh
 1002348:	and    BYTE PTR [eax],al
 100234a:	add    BYTE PTR fs:[ebp+0x0],dh
 100234e:	jb     0x1002350
 1002350:	imul   eax,DWORD PTR [eax],0x67006e
 1002356:	and    BYTE PTR [eax],al
 1002358:	outs   dx,BYTE PTR ds:[esi]
 1002359:	add    BYTE PTR [ecx+0x0],ah
 100235c:	je     0x100235e
 100235e:	imul   eax,DWORD PTR [eax],0x650076
 1002364:	and    BYTE PTR [eax],al
 1002366:	arpl   WORD PTR [eax],ax
 1002368:	outs   dx,DWORD PTR ds:[esi]
 1002369:	add    BYTE PTR [eax+eax*1+0x65],ah
 100236d:	add    BYTE PTR [eax],ah
 100236f:	add    BYTE PTR [ecx+0x0],ch
 1002372:	outs   dx,BYTE PTR ds:[esi]
 1002373:	add    BYTE PTR [ecx+0x0],ch
 1002376:	je     0x1002378
 1002378:	imul   eax,DWORD PTR [eax],0x6c0061
 100237e:	imul   eax,DWORD PTR [eax],0x61007a
 1002384:	je     0x1002386
 1002386:	imul   eax,DWORD PTR [eax],0x6e006f
 100238c:	or     al,BYTE PTR [eax]
 100238e:	push   esp
 100238f:	add    BYTE PTR [eax+0x0],ch
 1002392:	imul   eax,DWORD PTR [eax],0x200073
 1002398:	imul   eax,DWORD PTR [eax],0x64006e
 100239e:	imul   eax,DWORD PTR [eax],0x610063
 10023a4:	je     0x10023a6
 10023a6:	add    BYTE PTR gs:[ebx+0x0],dh
 10023aa:	and    BYTE PTR [eax],al
 10023ac:	popa   
 10023ad:	add    BYTE PTR [eax],ah
 10023af:	add    BYTE PTR [edx+0x0],ah
 10023b2:	jne    0x10023b4
 10023b4:	add    BYTE PTR [bx+si],ah
 10023b7:	add    BYTE PTR [ecx+0x0],ch
 10023ba:	outs   dx,BYTE PTR ds:[esi]
 10023bb:	add    BYTE PTR [eax],ah
 10023bd:	add    BYTE PTR [ecx+0x0],bh
 10023c0:	outs   dx,DWORD PTR ds:[esi]
 10023c1:	add    BYTE PTR [ebp+0x0],dh
 10023c4:	jb     0x10023c6
 10023c6:	and    BYTE PTR [eax],al
 10023c8:	popa   
 10023c9:	add    BYTE PTR [eax+0x0],dh
 10023cc:	jo     0x10023ce
 10023ce:	ins    BYTE PTR es:[edi],dx
 10023cf:	add    BYTE PTR [ecx+0x0],ch
 10023d2:	arpl   WORD PTR [eax],ax
 10023d4:	popa   
 10023d5:	add    BYTE PTR [eax+eax*1+0x69],dh
 10023d9:	add    BYTE PTR [edi+0x0],ch
 10023dc:	outs   dx,BYTE PTR ds:[esi]
 10023dd:	add    BYTE PTR [esi],ch
 10023df:	add    BYTE PTR [eax],ah
 10023e1:	add    BYTE PTR [ecx+0x0],cl
 10023e4:	je     0x10023e6
 10023e6:	and    BYTE PTR [eax],al
 10023e8:	imul   eax,DWORD PTR [eax],0x200073
 10023ee:	ins    DWORD PTR es:[edi],dx
 10023ef:	add    BYTE PTR [edi+0x0],ch
 10023f2:	jae    0x10023f4
 10023f4:	je     0x10023f6
 10023f6:	and    BYTE PTR [eax],al
 10023f8:	ins    BYTE PTR es:[edi],dx
 10023f9:	add    BYTE PTR [ecx+0x0],ch
 10023fc:	imul   eax,DWORD PTR [eax],0x65
 10023ff:	add    BYTE PTR [eax+eax*1+0x79],ch
 1002403:	add    BYTE PTR [eax],ah
 1002405:	add    BYTE PTR [eax+eax*1+0x68],dh
 1002409:	add    BYTE PTR [ebp+0x0],ah
 100240c:	and    BYTE PTR [eax],al
 100240e:	jb     0x1002410
 1002410:	add    BYTE PTR gs:[ebx+0x0],dh
 1002414:	jne    0x1002416
 1002416:	ins    BYTE PTR es:[edi],dx
 1002417:	add    BYTE PTR [eax+eax*1+0x20],dh
 100241b:	add    BYTE PTR [edi+0x0],ch
 100241e:	data16 add BYTE PTR [eax],ah
 1002421:	add    BYTE PTR [ebx+0x0],ah
 1002424:	popa   
 1002425:	add    BYTE PTR [eax+eax*1+0x6c],ch
 1002429:	add    BYTE PTR [ecx+0x0],ch
 100242c:	outs   dx,BYTE PTR ds:[esi]
 100242d:	add    BYTE PTR [edi+0x0],ah
 1002430:	and    BYTE PTR [eax],al
 1002432:	popa   
 1002433:	add    BYTE PTR [esi+0x0],ch
 1002436:	and    BYTE PTR [eax],al
 1002438:	dec    ebp
 1002439:	add    BYTE PTR [ebx+0x0],dl
 100243c:	dec    ecx
 100243d:	add    BYTE PTR [eax+eax*1+0x2d],cl
 1002441:	add    BYTE PTR [ebx+0x0],ah
 1002444:	outs   dx,DWORD PTR ds:[esi]
 1002445:	add    BYTE PTR [ebp+0x0],ch
 1002448:	jo     0x100244a
 100244a:	imul   eax,DWORD PTR [eax],0x65006c
 1002450:	add    BYTE PTR fs:[eax],ah
 1002453:	add    BYTE PTR [eax],ch
 1002455:	add    BYTE PTR [edi],ch
 1002457:	add    BYTE PTR [ebx+0x0],ah
 100245a:	ins    BYTE PTR es:[edi],dx
 100245b:	add    BYTE PTR [edx+0x0],dh
 100245e:	sub    DWORD PTR [eax],eax
 1002460:	and    BYTE PTR [eax],al
 1002462:	data16 add BYTE PTR [ebp+0x0],dh
 1002466:	outs   dx,BYTE PTR ds:[esi]
 1002467:	add    BYTE PTR [ebx+0x0],ah
 100246a:	je     0x100246c
 100246c:	imul   eax,DWORD PTR [eax],0x6e006f
 1002472:	and    BYTE PTR [eax],al
 1002474:	data16 add BYTE PTR [edx+0x0],dh
 1002478:	outs   dx,DWORD PTR ds:[esi]
 1002479:	add    BYTE PTR [ebp+0x0],ch
 100247c:	and    BYTE PTR [eax],al
 100247e:	popa   
 100247f:	add    BYTE PTR [eax],ah
 1002481:	add    BYTE PTR [esi+0x0],ch
 1002484:	popa   
 1002485:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002489:	add    BYTE PTR [esi+0x0],dh
 100248c:	add    BYTE PTR gs:[eax],ah
 100248f:	add    BYTE PTR [ebx+0x0],ah
 1002492:	outs   dx,DWORD PTR ds:[esi]
 1002493:	add    BYTE PTR [esi+0x0],ch
 1002496:	jae    0x1002498
 1002498:	je     0x100249a
 100249a:	jb     0x100249c
 100249c:	jne    0x100249e
 100249e:	arpl   WORD PTR [eax],ax
 10024a0:	je     0x10024a2
 10024a2:	outs   dx,DWORD PTR ds:[esi]
 10024a3:	add    BYTE PTR [edx+0x0],dh
 10024a6:	and    BYTE PTR [eax],al
 10024a8:	outs   dx,DWORD PTR ds:[esi]
 10024a9:	add    BYTE PTR [edx+0x0],dh
 10024ac:	and    BYTE PTR [eax],al
 10024ae:	data16 add BYTE PTR [edx+0x0],dh
 10024b2:	outs   dx,DWORD PTR ds:[esi]
 10024b3:	add    BYTE PTR [ebp+0x0],ch
 10024b6:	and    BYTE PTR [eax],al
 10024b8:	inc    esp
 10024b9:	add    BYTE PTR [eax+eax*1+0x6c],ch
 10024bd:	add    BYTE PTR [ebp+0x0],cl
 10024c0:	popa   
 10024c1:	add    BYTE PTR [ecx+0x0],ch
 10024c4:	outs   dx,BYTE PTR ds:[esi]
 10024c5:	add    BYTE PTR [esi],ch
 10024c7:	add    BYTE PTR ds:0xa00,cl
 10024cd:	add    BYTE PTR [eax],al
 10024cf:	add    BYTE PTR [edx+0x0],dl
 10024d2:	add    BYTE PTR ss:[eax],dh
 10024d5:	add    BYTE PTR [ebx],dh
 10024d7:	add    BYTE PTR [edx],dh
 10024d9:	add    BYTE PTR ds:0x2d000a00,cl
 10024df:	add    BYTE PTR [eax],ah
 10024e1:	add    BYTE PTR [esi+0x0],ch
 10024e4:	outs   dx,DWORD PTR ds:[esi]
 10024e5:	add    BYTE PTR [eax+eax*1+0x20],dh
 10024e9:	add    BYTE PTR [ebp+0x0],ah
 10024ec:	outs   dx,BYTE PTR ds:[esi]
 10024ed:	add    BYTE PTR [edi+0x0],ch
 10024f0:	jne    0x10024f2
 10024f2:	add    BYTE PTR [bx+si+0x0],ch
 10024f6:	and    BYTE PTR [eax],al
 10024f8:	jae    0x10024fa
 10024fa:	jo     0x10024fc
 10024fc:	popa   
 10024fd:	add    BYTE PTR [ebx+0x0],ah
 1002500:	add    BYTE PTR gs:[eax],ah
 1002503:	add    BYTE PTR [esi+0x0],ah
 1002506:	outs   dx,DWORD PTR ds:[esi]
 1002507:	add    BYTE PTR [edx+0x0],dh
 100250a:	and    BYTE PTR [eax],al
 100250c:	ins    BYTE PTR es:[edi],dx
 100250d:	add    BYTE PTR [edi+0x0],ch
 1002510:	arpl   WORD PTR [eax],ax
 1002512:	popa   
 1002513:	add    BYTE PTR [eax+eax*1+0x65],ch
 1002517:	add    BYTE PTR [eax],ah
 1002519:	add    BYTE PTR [ecx+0x0],ch
 100251c:	outs   dx,BYTE PTR ds:[esi]
 100251d:	add    BYTE PTR [esi+0x0],ah
 1002520:	outs   dx,DWORD PTR ds:[esi]
 1002521:	add    BYTE PTR [edx+0x0],dh
 1002524:	ins    DWORD PTR es:[edi],dx
 1002525:	add    BYTE PTR [ecx+0x0],ah
 1002528:	je     0x100252a
 100252a:	imul   eax,DWORD PTR [eax],0x6e006f
 1002530:	or     eax,0xa00
 1002535:	add    BYTE PTR [eax],al
 1002537:	add    BYTE PTR [edx+0x0],dl
 100253a:	add    BYTE PTR ss:[eax],dh
 100253d:	add    BYTE PTR [ebx],dh
 100253f:	add    BYTE PTR [ecx],dh
 1002541:	add    BYTE PTR ds:0x2d000a00,cl
 1002547:	add    BYTE PTR [eax],ah
 1002549:	add    BYTE PTR [ecx+0x0],al
 100254c:	je     0x100254e
 100254e:	je     0x1002550
 1002550:	add    BYTE PTR gs:[ebp+0x0],ch
 1002554:	jo     0x1002556
 1002556:	je     0x1002558
 1002558:	and    BYTE PTR [eax],al
 100255a:	je     0x100255c
 100255c:	outs   dx,DWORD PTR ds:[esi]
 100255d:	add    BYTE PTR [eax],ah
 100255f:	add    BYTE PTR [ecx+0x0],ch
 1002562:	outs   dx,BYTE PTR ds:[esi]
 1002563:	add    BYTE PTR [ecx+0x0],ch
 1002566:	je     0x1002568
 1002568:	imul   eax,DWORD PTR [eax],0x6c0061
 100256e:	imul   eax,DWORD PTR [eax],0x65007a
 1002574:	and    BYTE PTR [eax],al
 1002576:	je     0x1002578
 1002578:	push   0x20006500
 100257d:	add    BYTE PTR [ebx+0x0],al
 1002580:	push   edx
 1002581:	add    BYTE PTR [eax+eax*1+0x20],dl
 1002585:	add    BYTE PTR [ebp+0x0],ch
 1002588:	outs   dx,DWORD PTR ds:[esi]
 1002589:	add    BYTE PTR [edx+0x0],dh
 100258c:	add    BYTE PTR gs:[eax],ah
 100258f:	add    BYTE PTR [eax+eax*1+0x68],dh
 1002593:	add    BYTE PTR [ecx+0x0],ah
 1002596:	outs   dx,BYTE PTR ds:[esi]
 1002597:	add    BYTE PTR [eax],ah
 1002599:	add    BYTE PTR [edi+0x0],ch
 100259c:	outs   dx,BYTE PTR ds:[esi]
 100259d:	add    BYTE PTR [ebx+0x0],ah
 10025a0:	add    BYTE PTR gs:[esi],ch
 10025a3:	add    BYTE PTR [edx],cl
 10025a5:	add    BYTE PTR [eax+eax*1+0x68],dl
 10025a9:	add    BYTE PTR [ecx+0x0],ch
 10025ac:	jae    0x10025ae
 10025ae:	and    BYTE PTR [eax],al
 10025b0:	imul   eax,DWORD PTR [eax],0x64006e
 10025b6:	imul   eax,DWORD PTR [eax],0x610063
 10025bc:	je     0x10025be
 10025be:	add    BYTE PTR gs:[ebx+0x0],dh
 10025c2:	and    BYTE PTR [eax],al
 10025c4:	popa   
 10025c5:	add    BYTE PTR [eax],ah
 10025c7:	add    BYTE PTR [edx+0x0],ah
 10025ca:	jne    0x10025cc
 10025cc:	add    BYTE PTR [bx+si],ah
 10025cf:	add    BYTE PTR [ecx+0x0],ch
 10025d2:	outs   dx,BYTE PTR ds:[esi]
 10025d3:	add    BYTE PTR [eax],ah
 10025d5:	add    BYTE PTR [ecx+0x0],bh
 10025d8:	outs   dx,DWORD PTR ds:[esi]
 10025d9:	add    BYTE PTR [ebp+0x0],dh
 10025dc:	jb     0x10025de
 10025de:	and    BYTE PTR [eax],al
 10025e0:	popa   
 10025e1:	add    BYTE PTR [eax+0x0],dh
 10025e4:	jo     0x10025e6
 10025e6:	ins    BYTE PTR es:[edi],dx
 10025e7:	add    BYTE PTR [ecx+0x0],ch
 10025ea:	arpl   WORD PTR [eax],ax
 10025ec:	popa   
 10025ed:	add    BYTE PTR [eax+eax*1+0x69],dh
 10025f1:	add    BYTE PTR [edi+0x0],ch
 10025f4:	outs   dx,BYTE PTR ds:[esi]
 10025f5:	add    BYTE PTR [esi],ch
 10025f7:	add    BYTE PTR ds:0xa00,cl
 10025fd:	add    BYTE PTR [eax],al
 10025ff:	add    BYTE PTR [edx+0x0],dl
 1002602:	add    BYTE PTR ss:[eax],dh
 1002605:	add    BYTE PTR [ebx],dh
 1002607:	add    BYTE PTR [eax],dh
 1002609:	add    BYTE PTR ds:0x2d000a00,cl
 100260f:	add    BYTE PTR [eax],ah
 1002611:	add    BYTE PTR [ebx+0x0],al
 1002614:	push   edx
 1002615:	add    BYTE PTR [eax+eax*1+0x20],dl
 1002619:	add    BYTE PTR [esi+0x0],ch
 100261c:	outs   dx,DWORD PTR ds:[esi]
 100261d:	add    BYTE PTR [eax+eax*1+0x20],dh
 1002621:	add    BYTE PTR [ecx+0x0],ch
 1002624:	outs   dx,BYTE PTR ds:[esi]
 1002625:	add    BYTE PTR [ecx+0x0],ch
 1002628:	je     0x100262a
 100262a:	imul   eax,DWORD PTR [eax],0x6c0061
 1002630:	imul   eax,DWORD PTR [eax],0x65007a
 1002636:	add    BYTE PTR fs:0xa00,cl
 100263d:	add    BYTE PTR [eax],al
 100263f:	add    BYTE PTR [edx+0x0],dl
 1002642:	add    BYTE PTR ss:[eax],dh
 1002645:	add    BYTE PTR [edx],dh
 1002647:	add    BYTE PTR [eax],bh
 1002649:	add    BYTE PTR ds:0x2d000a00,cl
 100264f:	add    BYTE PTR [eax],ah
 1002651:	add    BYTE PTR [ebp+0x0],dh
 1002654:	outs   dx,BYTE PTR ds:[esi]
 1002655:	add    BYTE PTR [ecx+0x0],ah
 1002658:	bound  eax,QWORD PTR [eax]
 100265a:	ins    BYTE PTR es:[edi],dx
 100265b:	add    BYTE PTR [ebp+0x0],ah
 100265e:	and    BYTE PTR [eax],al
 1002660:	je     0x1002662
 1002662:	outs   dx,DWORD PTR ds:[esi]
 1002663:	add    BYTE PTR [eax],ah
 1002665:	add    BYTE PTR [ecx+0x0],ch
 1002668:	outs   dx,BYTE PTR ds:[esi]
 1002669:	add    BYTE PTR [ecx+0x0],ch
 100266c:	je     0x100266e
 100266e:	imul   eax,DWORD PTR [eax],0x6c0061
 1002674:	imul   eax,DWORD PTR [eax],0x65007a
 100267a:	and    BYTE PTR [eax],al
 100267c:	push   0x61006500
 1002681:	add    BYTE PTR [eax+0x0],dh
 1002684:	or     eax,0xa00
 1002689:	add    BYTE PTR [eax],al
 100268b:	add    BYTE PTR [eax],al
 100268d:	add    BYTE PTR [eax],al
 100268f:	add    BYTE PTR [edx+0x0],dl
 1002692:	add    BYTE PTR ss:[eax],dh
 1002695:	add    BYTE PTR [edx],dh
 1002697:	add    BYTE PTR [edi],dh
 1002699:	add    BYTE PTR ds:0x2d000a00,cl
 100269f:	add    BYTE PTR [eax],ah
 10026a1:	add    BYTE PTR [esi+0x0],ch
 10026a4:	outs   dx,DWORD PTR ds:[esi]
 10026a5:	add    BYTE PTR [eax+eax*1+0x20],dh
 10026a9:	add    BYTE PTR [ebp+0x0],ah
 10026ac:	outs   dx,BYTE PTR ds:[esi]
 10026ad:	add    BYTE PTR [edi+0x0],ch
 10026b0:	jne    0x10026b2
 10026b2:	add    BYTE PTR [bx+si+0x0],ch
 10026b6:	and    BYTE PTR [eax],al
 10026b8:	jae    0x10026ba
 10026ba:	jo     0x10026bc
 10026bc:	popa   
 10026bd:	add    BYTE PTR [ebx+0x0],ah
 10026c0:	add    BYTE PTR gs:[eax],ah
 10026c3:	add    BYTE PTR [esi+0x0],ah
 10026c6:	outs   dx,DWORD PTR ds:[esi]
 10026c7:	add    BYTE PTR [edx+0x0],dh
 10026ca:	and    BYTE PTR [eax],al
 10026cc:	ins    BYTE PTR es:[edi],dx
 10026cd:	add    BYTE PTR [edi+0x0],ch
 10026d0:	ja     0x10026d2
 10026d2:	imul   eax,DWORD PTR [eax],0x20006f
 10026d8:	imul   eax,DWORD PTR [eax],0x69006e
 10026de:	je     0x10026e0
 10026e0:	imul   eax,DWORD PTR [eax],0x6c0061
 10026e6:	imul   eax,DWORD PTR [eax],0x61007a
 10026ec:	je     0x10026ee
 10026ee:	imul   eax,DWORD PTR [eax],0x6e006f
 10026f4:	or     eax,0xa00
 10026f9:	add    BYTE PTR [eax],al
 10026fb:	add    BYTE PTR [eax],al
 10026fd:	add    BYTE PTR [eax],al
 10026ff:	add    BYTE PTR [edx+0x0],dl
 1002702:	add    BYTE PTR ss:[eax],dh
 1002705:	add    BYTE PTR [edx],dh
 1002707:	add    BYTE PTR [esi],dh
 1002709:	add    BYTE PTR ds:0x2d000a00,cl
 100270f:	add    BYTE PTR [eax],ah
 1002711:	add    BYTE PTR [esi+0x0],ch
 1002714:	outs   dx,DWORD PTR ds:[esi]
 1002715:	add    BYTE PTR [eax+eax*1+0x20],dh
 1002719:	add    BYTE PTR [ebp+0x0],ah
 100271c:	outs   dx,BYTE PTR ds:[esi]
 100271d:	add    BYTE PTR [edi+0x0],ch
 1002720:	jne    0x1002722
 1002722:	add    BYTE PTR [bx+si+0x0],ch
 1002726:	and    BYTE PTR [eax],al
 1002728:	jae    0x100272a
 100272a:	jo     0x100272c
 100272c:	popa   
 100272d:	add    BYTE PTR [ebx+0x0],ah
 1002730:	add    BYTE PTR gs:[eax],ah
 1002733:	add    BYTE PTR [esi+0x0],ah
 1002736:	outs   dx,DWORD PTR ds:[esi]
 1002737:	add    BYTE PTR [edx+0x0],dh
 100273a:	and    BYTE PTR [eax],al
 100273c:	jae    0x100273e
 100273e:	je     0x1002740
 1002740:	add    BYTE PTR fs:[ecx+0x0],ch
 1002744:	outs   dx,DWORD PTR ds:[esi]
 1002745:	add    BYTE PTR [eax],ah
 1002747:	add    BYTE PTR [ecx+0x0],ch
 100274a:	outs   dx,BYTE PTR ds:[esi]
 100274b:	add    BYTE PTR [ecx+0x0],ch
 100274e:	je     0x1002750
 1002750:	imul   eax,DWORD PTR [eax],0x6c0061
 1002756:	imul   eax,DWORD PTR [eax],0x61007a
 100275c:	je     0x100275e
 100275e:	imul   eax,DWORD PTR [eax],0x6e006f
 1002764:	or     eax,0xa00
 1002769:	add    BYTE PTR [eax],al
 100276b:	add    BYTE PTR [eax],al
 100276d:	add    BYTE PTR [eax],al
 100276f:	add    BYTE PTR [edx+0x0],dl
 1002772:	add    BYTE PTR ss:[eax],dh
 1002775:	add    BYTE PTR [edx],dh
 1002777:	add    BYTE PTR ds:0xa000d00,dh
 100277d:	add    BYTE PTR ds:0x70002000,ch
 1002783:	add    BYTE PTR [ebp+0x0],dh
 1002786:	jb     0x1002788
 1002788:	add    BYTE PTR gs:[eax],ah
 100278b:	add    BYTE PTR [esi+0x0],dh
 100278e:	imul   eax,DWORD PTR [eax],0x740072
 1002794:	jne    0x1002796
 1002796:	popa   
 1002797:	add    BYTE PTR [eax+eax*1+0x20],ch
 100279b:	add    BYTE PTR [esi+0x0],ah
 100279e:	jne    0x10027a0
 10027a0:	outs   dx,BYTE PTR ds:[esi]
 10027a1:	add    BYTE PTR [ebx+0x0],ah
 10027a4:	je     0x10027a6
 10027a6:	imul   eax,DWORD PTR [eax],0x6e006f
 10027ac:	and    BYTE PTR [eax],al
 10027ae:	arpl   WORD PTR [eax],ax
 10027b0:	popa   
 10027b1:	add    BYTE PTR [eax+eax*1+0x6c],ch
 10027b5:	add    BYTE PTR ds:0xa00,cl
 10027bb:	add    BYTE PTR [eax],al
 10027bd:	add    BYTE PTR [eax],al
 10027bf:	add    BYTE PTR [edx+0x0],dl
 10027c2:	add    BYTE PTR ss:[eax],dh
 10027c5:	add    BYTE PTR [edx],dh
 10027c7:	add    BYTE PTR [eax+eax*1],dh
 10027ca:	or     eax,0x2d000a00
 10027cf:	add    BYTE PTR [eax],ah
 10027d1:	add    BYTE PTR [esi+0x0],ch
 10027d4:	outs   dx,DWORD PTR ds:[esi]
 10027d5:	add    BYTE PTR [eax+eax*1+0x20],dh
 10027d9:	add    BYTE PTR [ebp+0x0],ah
 10027dc:	outs   dx,BYTE PTR ds:[esi]
 10027dd:	add    BYTE PTR [edi+0x0],ch
 10027e0:	jne    0x10027e2
 10027e2:	add    BYTE PTR [bx+si+0x0],ch
 10027e6:	and    BYTE PTR [eax],al
 10027e8:	jae    0x10027ea
 10027ea:	jo     0x10027ec
 10027ec:	popa   
 10027ed:	add    BYTE PTR [ebx+0x0],ah
 10027f0:	add    BYTE PTR gs:[eax],ah
 10027f3:	add    BYTE PTR [esi+0x0],ah
 10027f6:	outs   dx,DWORD PTR ds:[esi]
 10027f7:	add    BYTE PTR [edx+0x0],dh
 10027fa:	and    BYTE PTR [eax],al
 10027fc:	pop    edi
 10027fd:	add    BYTE PTR [edi+0x0],ch
 1002800:	outs   dx,BYTE PTR ds:[esi]
 1002801:	add    BYTE PTR [ebp+0x0],ah
 1002804:	js     0x1002806
 1002806:	imul   eax,DWORD PTR [eax],0x2f0074
 100280c:	popa   
 100280d:	add    BYTE PTR [eax+eax*1+0x65],dh
 1002811:	add    BYTE PTR [eax+0x0],bh
 1002814:	imul   eax,DWORD PTR [eax],0x200074
 100281a:	je     0x100281c
 100281c:	popa   
 100281d:	add    BYTE PTR [edx+0x0],ah
 1002820:	ins    BYTE PTR es:[edi],dx
 1002821:	add    BYTE PTR [ebp+0x0],ah
 1002824:	or     eax,0xa00
 1002829:	add    BYTE PTR [eax],al
 100282b:	add    BYTE PTR [eax],al
 100282d:	add    BYTE PTR [eax],al
 100282f:	add    BYTE PTR [edx+0x0],dl
 1002832:	add    BYTE PTR ss:[eax],dh
 1002835:	add    BYTE PTR [ecx],dh
 1002837:	add    BYTE PTR [ecx],bh
 1002839:	add    BYTE PTR ds:0x2d000a00,cl
 100283f:	add    BYTE PTR [eax],ah
 1002841:	add    BYTE PTR [ebp+0x0],dh
 1002844:	outs   dx,BYTE PTR ds:[esi]
 1002845:	add    BYTE PTR [ecx+0x0],ah
 1002848:	bound  eax,QWORD PTR [eax]
 100284a:	ins    BYTE PTR es:[edi],dx
 100284b:	add    BYTE PTR [ebp+0x0],ah
 100284e:	and    BYTE PTR [eax],al
 1002850:	je     0x1002852
 1002852:	outs   dx,DWORD PTR ds:[esi]
 1002853:	add    BYTE PTR [eax],ah
 1002855:	add    BYTE PTR [edi+0x0],ch
 1002858:	jo     0x100285a
 100285a:	add    BYTE PTR gs:[esi+0x0],ch
 100285e:	and    BYTE PTR [eax],al
 1002860:	arpl   WORD PTR [eax],ax
 1002862:	outs   dx,DWORD PTR ds:[esi]
 1002863:	add    BYTE PTR [esi+0x0],ch
 1002866:	jae    0x1002868
 1002868:	outs   dx,DWORD PTR ds:[esi]
 1002869:	add    BYTE PTR [eax+eax*1+0x65],ch
 100286d:	add    BYTE PTR [eax],ah
 100286f:	add    BYTE PTR [eax+eax*1+0x65],ah
 1002873:	add    BYTE PTR [esi+0x0],dh
 1002876:	imul   eax,DWORD PTR [eax],0x650063
 100287c:	or     eax,0xa00
 1002881:	add    BYTE PTR [eax],al
 1002883:	add    BYTE PTR [eax],al
 1002885:	add    BYTE PTR [eax],al
 1002887:	add    BYTE PTR [edx+0x0],dl
 100288a:	add    BYTE PTR ss:[eax],dh
 100288d:	add    BYTE PTR [ecx],dh
 100288f:	add    BYTE PTR [eax],bh
 1002891:	add    BYTE PTR ds:0x2d000a00,cl
 1002897:	add    BYTE PTR [eax],ah
 1002899:	add    BYTE PTR [ebp+0x0],dh
 100289c:	outs   dx,BYTE PTR ds:[esi]
 100289d:	add    BYTE PTR [ebp+0x0],ah
 10028a0:	js     0x10028a2
 10028a2:	jo     0x10028a4
 10028a4:	add    BYTE PTR gs:[ebx+0x0],ah
 10028a8:	je     0x10028aa
 10028aa:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 10028af:	add    BYTE PTR [eax+0x0],ch
 10028b2:	add    BYTE PTR gs:[ecx+0x0],ah
 10028b6:	jo     0x10028b8
 10028b8:	and    BYTE PTR [eax],al
 10028ba:	add    BYTE PTR gs:[edx+0x0],dh
 10028be:	jb     0x10028c0
 10028c0:	outs   dx,DWORD PTR ds:[esi]
 10028c1:	add    BYTE PTR [edx+0x0],dh
 10028c4:	or     eax,0xa00
 10028c9:	add    BYTE PTR [eax],al
 10028cb:	add    BYTE PTR [eax],al
 10028cd:	add    BYTE PTR [eax],al
 10028cf:	add    BYTE PTR [edx+0x0],dl
 10028d2:	add    BYTE PTR ss:[eax],dh
 10028d5:	add    BYTE PTR [ecx],dh
 10028d7:	add    BYTE PTR [edi],dh
 10028d9:	add    BYTE PTR ds:0x2d000a00,cl
 10028df:	add    BYTE PTR [eax],ah
 10028e1:	add    BYTE PTR [ebp+0x0],dh
 10028e4:	outs   dx,BYTE PTR ds:[esi]
 10028e5:	add    BYTE PTR [ebp+0x0],ah
 10028e8:	js     0x10028ea
 10028ea:	jo     0x10028ec
 10028ec:	add    BYTE PTR gs:[ebx+0x0],ah
 10028f0:	je     0x10028f2
 10028f2:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 10028f7:	add    BYTE PTR [ebp+0x0],ch
 10028fa:	jne    0x10028fc
 10028fc:	ins    BYTE PTR es:[edi],dx
 10028fd:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002901:	add    BYTE PTR [eax+eax*1+0x68],dh
 1002905:	add    BYTE PTR [edx+0x0],dh
 1002908:	add    BYTE PTR gs:[ecx+0x0],ah
 100290c:	add    BYTE PTR fs:[eax],ah
 100290f:	add    BYTE PTR [eax+eax*1+0x6f],ch
 1002913:	add    BYTE PTR [ebx+0x0],ah
 1002916:	imul   eax,DWORD PTR [eax],0x20
 1002919:	add    BYTE PTR [ebp+0x0],ah
 100291c:	jb     0x100291e
 100291e:	jb     0x1002920
 1002920:	outs   dx,DWORD PTR ds:[esi]
 1002921:	add    BYTE PTR [edx+0x0],dh
 1002924:	or     eax,0xa00
 1002929:	add    BYTE PTR [eax],al
 100292b:	add    BYTE PTR [eax],al
 100292d:	add    BYTE PTR [eax],al
 100292f:	add    BYTE PTR [edx+0x0],dl
 1002932:	add    BYTE PTR ss:[eax],dh
 1002935:	add    BYTE PTR [ecx],dh
 1002937:	add    BYTE PTR [esi],dh
 1002939:	add    BYTE PTR ds:0x2d000a00,cl
 100293f:	add    BYTE PTR [eax],ah
 1002941:	add    BYTE PTR [esi+0x0],ch
 1002944:	outs   dx,DWORD PTR ds:[esi]
 1002945:	add    BYTE PTR [eax+eax*1+0x20],dh
 1002949:	add    BYTE PTR [ebp+0x0],ah
 100294c:	outs   dx,BYTE PTR ds:[esi]
 100294d:	add    BYTE PTR [edi+0x0],ch
 1002950:	jne    0x1002952
 1002952:	add    BYTE PTR [bx+si+0x0],ch
 1002956:	and    BYTE PTR [eax],al
 1002958:	jae    0x100295a
 100295a:	jo     0x100295c
 100295c:	popa   
 100295d:	add    BYTE PTR [ebx+0x0],ah
 1002960:	add    BYTE PTR gs:[eax],ah
 1002963:	add    BYTE PTR [esi+0x0],ah
 1002966:	outs   dx,DWORD PTR ds:[esi]
 1002967:	add    BYTE PTR [edx+0x0],dh
 100296a:	and    BYTE PTR [eax],al
 100296c:	je     0x100296e
 100296e:	push   0x65007200
 1002973:	add    BYTE PTR [ecx+0x0],ah
 1002976:	add    BYTE PTR fs:[eax],ah
 1002979:	add    BYTE PTR [eax+eax*1+0x61],ah
 100297d:	add    BYTE PTR [eax+eax*1+0x61],dh
 1002981:	add    BYTE PTR ds:0xa00,cl
 1002987:	add    BYTE PTR [edx+0x0],dl
 100298a:	add    BYTE PTR ss:[eax],dh
 100298d:	add    BYTE PTR [ecx],dh
 100298f:	add    BYTE PTR [eax],dh
 1002991:	add    BYTE PTR ds:0x2d000a00,cl
 1002997:	add    BYTE PTR [eax],ah
 1002999:	add    BYTE PTR [ecx+0x0],ah
 100299c:	bound  eax,QWORD PTR [eax]
 100299e:	outs   dx,DWORD PTR ds:[esi]
 100299f:	add    BYTE PTR [edx+0x0],dh
 10029a2:	je     0x10029a4
 10029a4:	sub    BYTE PTR [eax],al
 10029a6:	sub    DWORD PTR [eax],eax
 10029a8:	and    BYTE PTR [eax],al
 10029aa:	push   0x73006100
 10029af:	add    BYTE PTR [eax],ah
 10029b1:	add    BYTE PTR [edx+0x0],ah
 10029b4:	add    BYTE PTR gs:[ebp+0x0],ah
 10029b8:	outs   dx,BYTE PTR ds:[esi]
 10029b9:	add    BYTE PTR [eax],ah
 10029bb:	add    BYTE PTR [ebx+0x0],ah
 10029be:	popa   
 10029bf:	add    BYTE PTR [eax+eax*1+0x6c],ch
 10029c3:	add    BYTE PTR [ebp+0x0],ah
 10029c6:	add    BYTE PTR fs:0xa00,cl
 10029cd:	add    BYTE PTR [eax],al
 10029cf:	add    BYTE PTR [edx+0x0],dl
 10029d2:	add    BYTE PTR ss:[eax],dh
 10029d5:	add    BYTE PTR [eax],dh
 10029d7:	add    BYTE PTR [ecx],bh
 10029d9:	add    BYTE PTR ds:0x2d000a00,cl
 10029df:	add    BYTE PTR [eax],ah
 10029e1:	add    BYTE PTR [esi+0x0],ch
 10029e4:	outs   dx,DWORD PTR ds:[esi]
 10029e5:	add    BYTE PTR [eax+eax*1+0x20],dh
 10029e9:	add    BYTE PTR [ebp+0x0],ah
 10029ec:	outs   dx,BYTE PTR ds:[esi]
 10029ed:	add    BYTE PTR [edi+0x0],ch
 10029f0:	jne    0x10029f2
 10029f2:	add    BYTE PTR [bx+si+0x0],ch
 10029f6:	and    BYTE PTR [eax],al
 10029f8:	jae    0x10029fa
 10029fa:	jo     0x10029fc
 10029fc:	popa   
 10029fd:	add    BYTE PTR [ebx+0x0],ah
 1002a00:	add    BYTE PTR gs:[eax],ah
 1002a03:	add    BYTE PTR [esi+0x0],ah
 1002a06:	outs   dx,DWORD PTR ds:[esi]
 1002a07:	add    BYTE PTR [edx+0x0],dh
 1002a0a:	and    BYTE PTR [eax],al
 1002a0c:	add    BYTE PTR gs:[esi+0x0],ch
 1002a10:	jbe    0x1002a12
 1002a12:	imul   eax,DWORD PTR [eax],0x6f0072
 1002a18:	outs   dx,BYTE PTR ds:[esi]
 1002a19:	add    BYTE PTR [ebp+0x0],ch
 1002a1c:	add    BYTE PTR gs:[esi+0x0],ch
 1002a20:	je     0x1002a22
 1002a22:	or     eax,0xa00
 1002a27:	add    BYTE PTR [edx+0x0],dl
 1002a2a:	add    BYTE PTR ss:[eax],dh
 1002a2d:	add    BYTE PTR [eax],dh
 1002a2f:	add    BYTE PTR [eax],bh
 1002a31:	add    BYTE PTR ds:0x2d000a00,cl
 1002a37:	add    BYTE PTR [eax],ah
 1002a39:	add    BYTE PTR [esi+0x0],ch
 1002a3c:	outs   dx,DWORD PTR ds:[esi]
 1002a3d:	add    BYTE PTR [eax+eax*1+0x20],dh
 1002a41:	add    BYTE PTR [ebp+0x0],ah
 1002a44:	outs   dx,BYTE PTR ds:[esi]
 1002a45:	add    BYTE PTR [edi+0x0],ch
 1002a48:	jne    0x1002a4a
 1002a4a:	add    BYTE PTR [bx+si+0x0],ch
 1002a4e:	and    BYTE PTR [eax],al
 1002a50:	jae    0x1002a52
 1002a52:	jo     0x1002a54
 1002a54:	popa   
 1002a55:	add    BYTE PTR [ebx+0x0],ah
 1002a58:	add    BYTE PTR gs:[eax],ah
 1002a5b:	add    BYTE PTR [esi+0x0],ah
 1002a5e:	outs   dx,DWORD PTR ds:[esi]
 1002a5f:	add    BYTE PTR [edx+0x0],dh
 1002a62:	and    BYTE PTR [eax],al
 1002a64:	popa   
 1002a65:	add    BYTE PTR [edx+0x0],dh
 1002a68:	add    BYTE PTR [di+0x0],dh
 1002a6c:	ins    DWORD PTR es:[edi],dx
 1002a6d:	add    BYTE PTR [ebp+0x0],ah
 1002a70:	outs   dx,BYTE PTR ds:[esi]
 1002a71:	add    BYTE PTR [eax+eax*1+0x73],dh
 1002a75:	add    BYTE PTR ds:0xa00,cl
 1002a7b:	add    BYTE PTR [eax],al
 1002a7d:	add    BYTE PTR [eax],al
 1002a7f:	add    BYTE PTR [edx+0x0],dl
 1002a82:	add    BYTE PTR ss:[eax],dh
 1002a85:	add    BYTE PTR [eax],dh
 1002a87:	add    BYTE PTR [edx],dh
 1002a89:	add    BYTE PTR ds:0x2d000a00,cl
 1002a8f:	add    BYTE PTR [eax],ah
 1002a91:	add    BYTE PTR [esi+0x0],ah
 1002a94:	ins    BYTE PTR es:[edi],dx
 1002a95:	add    BYTE PTR [edi+0x0],ch
 1002a98:	popa   
 1002a99:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002a9d:	add    BYTE PTR [esi+0x0],ch
 1002aa0:	add    BYTE PTR [bx+si],ah
 1002aa3:	add    BYTE PTR [eax+0x0],dh
 1002aa6:	outs   dx,DWORD PTR ds:[esi]
 1002aa7:	add    BYTE PTR [ecx+0x0],ch
 1002aaa:	outs   dx,BYTE PTR ds:[esi]
 1002aab:	add    BYTE PTR [eax+eax*1+0x20],dh
 1002aaf:	add    BYTE PTR [ebx+0x0],dh
 1002ab2:	jne    0x1002ab4
 1002ab4:	jo     0x1002ab6
 1002ab6:	jo     0x1002ab8
 1002ab8:	outs   dx,DWORD PTR ds:[esi]
 1002ab9:	add    BYTE PTR [edx+0x0],dh
 1002abc:	je     0x1002abe
 1002abe:	and    BYTE PTR [eax],al
 1002ac0:	outs   dx,BYTE PTR ds:[esi]
 1002ac1:	add    BYTE PTR [edi+0x0],ch
 1002ac4:	je     0x1002ac6
 1002ac6:	and    BYTE PTR [eax],al
 1002ac8:	ins    BYTE PTR es:[edi],dx
 1002ac9:	add    BYTE PTR [edi+0x0],ch
 1002acc:	popa   
 1002acd:	add    BYTE PTR [eax+eax*1+0x65],ah
 1002ad1:	add    BYTE PTR [eax+eax*1+0xd],ah
 1002ad5:	add    BYTE PTR [edx],cl
	...
 1002adf:	add    BYTE PTR [edx],al
 1002ae1:	add    BYTE PTR [eax],al
 1002ae3:	add    BYTE PTR [eax+0x801002a],al
 1002ae9:	add    BYTE PTR [eax],al
 1002aeb:	add    BYTE PTR [eax],ch
 1002aed:	sub    al,BYTE PTR [eax]
 1002aef:	add    DWORD PTR [ecx],ecx
 1002af1:	add    BYTE PTR [eax],al
 1002af3:	add    al,dl
 1002af5:	sub    DWORD PTR [eax],eax
 1002af7:	add    DWORD PTR [edx],ecx
 1002af9:	add    BYTE PTR [eax],al
 1002afb:	add    BYTE PTR [eax+0x10010029],cl
 1002b01:	add    BYTE PTR [eax],al
 1002b03:	add    BYTE PTR [eax],dh
 1002b05:	sub    DWORD PTR [eax],eax
 1002b07:	add    DWORD PTR [ecx],edx
 1002b09:	add    BYTE PTR [eax],al
 1002b0b:	add    al,dl
 1002b0d:	sub    BYTE PTR [eax],al
 1002b0f:	add    DWORD PTR [edx],edx
 1002b11:	add    BYTE PTR [eax],al
 1002b13:	add    BYTE PTR [eax+0x13010028],cl
 1002b19:	add    BYTE PTR [eax],al
 1002b1b:	add    BYTE PTR [eax],dh
 1002b1d:	sub    BYTE PTR [eax],al
 1002b1f:	add    DWORD PTR [eax],ebx
 1002b21:	add    BYTE PTR [eax],al
 1002b23:	add    al,al
 1002b25:	daa    
 1002b26:	add    BYTE PTR [ecx],al
 1002b28:	sbb    DWORD PTR [eax],eax
 1002b2a:	add    BYTE PTR [eax],al
 1002b2c:	jo     0x1002b55
 1002b2e:	add    BYTE PTR [ecx],al
 1002b30:	sbb    al,BYTE PTR [eax]
 1002b32:	add    BYTE PTR [eax],al
 1002b34:	add    BYTE PTR [edi],ah
 1002b36:	add    BYTE PTR [ecx],al
 1002b38:	sbb    eax,DWORD PTR [eax]
 1002b3a:	add    BYTE PTR [eax],al
 1002b3c:	nop
 1002b3d:	add    BYTE PTR es:[ecx],al
 1002b40:	sbb    al,0x0
 1002b42:	add    BYTE PTR [eax],al
 1002b44:	inc    eax
 1002b45:	add    BYTE PTR es:[ecx],al
 1002b48:	push   ds
 1002b49:	add    BYTE PTR [eax],al
 1002b4b:	add    BYTE PTR [eax],al
 1002b4d:	add    BYTE PTR es:[ecx],al
 1002b50:	pop    ds
 1002b51:	add    BYTE PTR [eax],al
 1002b53:	add    BYTE PTR [eax],bh
 1002b55:	and    eax,0x200100
 1002b5a:	add    BYTE PTR [eax],al
 1002b5c:	shl    BYTE PTR [eax+eax*1],1
 1002b5f:	add    DWORD PTR [ecx],esp
 1002b61:	add    BYTE PTR [eax],al
 1002b63:	add    al,ah
 1002b65:	and    al,BYTE PTR [eax]
 1002b67:	add    DWORD PTR [eax+0x0],edi
 1002b6a:	add    BYTE PTR [eax],al
 1002b6c:	shl    BYTE PTR [edx],0x0
 1002b6f:	add    DWORD PTR [ecx+0x0],edi
 1002b72:	add    BYTE PTR [eax],al
 1002b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1002b75:	and    al,BYTE PTR [eax]
 1002b77:	add    DWORD PTR [edx+0x0],edi
 1002b7a:	add    BYTE PTR [eax],al
 1002b7c:	mov    BYTE PTR [edx],ah
 1002b7e:	add    BYTE PTR [ecx],al
 1002b80:	cld    
 1002b81:	add    BYTE PTR [eax],al
 1002b83:	add    BYTE PTR [eax-0xfeffde],al
 1002b89:	add    BYTE PTR [eax],al
 1002b8b:	add    BYTE PTR [eax+0x22],ah
 1002b8e:	add    BYTE PTR [ecx],al
 1002b90:	dec    ebp
 1002b91:	add    BYTE PTR [ecx+0x0],ch
 1002b94:	arpl   WORD PTR [eax],ax
 1002b96:	jb     0x1002b98
 1002b98:	outs   dx,DWORD PTR ds:[esi]
 1002b99:	add    BYTE PTR [ebx+0x0],dh
 1002b9c:	outs   dx,DWORD PTR ds:[esi]
 1002b9d:	add    BYTE PTR [esi+0x0],ah
 1002ba0:	je     0x1002ba2
 1002ba2:	and    BYTE PTR [eax],al
 1002ba4:	push   esi
 1002ba5:	add    BYTE PTR [ecx+0x0],ch
 1002ba8:	jae    0x1002baa
 1002baa:	jne    0x1002bac
 1002bac:	popa   
 1002bad:	add    BYTE PTR [eax+eax*1+0x20],ch
 1002bb1:	add    BYTE PTR [ebx+0x0],al
 1002bb4:	sub    eax,DWORD PTR [eax]
 1002bb6:	sub    eax,DWORD PTR [eax]
 1002bb8:	and    BYTE PTR [eax],al
 1002bba:	push   edx
 1002bbb:	add    BYTE PTR [ebp+0x0],dh
 1002bbe:	outs   dx,BYTE PTR ds:[esi]
 1002bbf:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002bc3:	add    BYTE PTR [ebp+0x0],ch
 1002bc6:	add    BYTE PTR gs:[eax],ah
 1002bc9:	add    BYTE PTR [eax+eax*1+0x69],cl
 1002bcd:	add    BYTE PTR [edx+0x0],ah
 1002bd0:	jb     0x1002bd2
 1002bd2:	popa   
 1002bd3:	add    BYTE PTR [edx+0x0],dh
 1002bd6:	jns    0x1002bd8
 1002bd8:	add    BYTE PTR [eax],al
 1002bda:	add    BYTE PTR [eax],al
 1002bdc:	or     al,BYTE PTR [eax]
 1002bde:	or     al,BYTE PTR [eax]
 1002be0:	add    BYTE PTR [eax],al
 1002be2:	add    BYTE PTR [eax],al
 1002be4:	add    BYTE PTR cs:[esi],ch
 1002be7:	add    BYTE PTR [esi],ch
 1002be9:	add    BYTE PTR [eax],al
 1002beb:	add    BYTE PTR [eax+eax*1],bh
 1002bee:	jo     0x1002bf0
 1002bf0:	jb     0x1002bf2
 1002bf2:	outs   dx,DWORD PTR ds:[esi]
 1002bf3:	add    BYTE PTR [edi+0x0],ah
 1002bf6:	jb     0x1002bf8
 1002bf8:	popa   
 1002bf9:	add    BYTE PTR [ebp+0x0],ch
 1002bfc:	and    BYTE PTR [eax],al
 1002bfe:	outs   dx,BYTE PTR ds:[esi]
 1002bff:	add    BYTE PTR [ecx+0x0],ah
 1002c02:	ins    DWORD PTR es:[edi],dx
 1002c03:	add    BYTE PTR [ebp+0x0],ah
 1002c06:	and    BYTE PTR [eax],al
 1002c08:	jne    0x1002c0a
 1002c0a:	outs   dx,BYTE PTR ds:[esi]
 1002c0b:	add    BYTE PTR [ebx+0x0],ch
 1002c0e:	outs   dx,BYTE PTR ds:[esi]
 1002c0f:	add    BYTE PTR [edi+0x0],ch
 1002c12:	ja     0x1002c14
 1002c14:	outs   dx,BYTE PTR ds:[esi]
 1002c15:	add    BYTE PTR [esi],bh
 1002c17:	add    BYTE PTR [eax],al
 1002c19:	add    BYTE PTR [eax],al
 1002c1b:	add    BYTE PTR [edx+0x0],dl
 1002c1e:	jne    0x1002c20
 1002c20:	outs   dx,BYTE PTR ds:[esi]
 1002c21:	add    BYTE PTR [eax+eax*1+0x69],dh
 1002c25:	add    BYTE PTR [ebp+0x0],ch
 1002c28:	add    BYTE PTR gs:[eax],ah
 1002c2b:	add    BYTE PTR [ebp+0x0],al
 1002c2e:	jb     0x1002c30
 1002c30:	jb     0x1002c32
 1002c32:	outs   dx,DWORD PTR ds:[esi]
 1002c33:	add    BYTE PTR [edx+0x0],dh
 1002c36:	and    DWORD PTR [eax],eax
 1002c38:	or     al,BYTE PTR [eax]
 1002c3a:	or     al,BYTE PTR [eax]
 1002c3c:	push   eax
 1002c3d:	add    BYTE PTR [edx+0x0],dh
 1002c40:	outs   dx,DWORD PTR ds:[esi]
 1002c41:	add    BYTE PTR [edi+0x0],ah
 1002c44:	jb     0x1002c46
 1002c46:	popa   
 1002c47:	add    BYTE PTR [ebp+0x0],ch
 1002c4a:	cmp    al,BYTE PTR [eax]
 1002c4c:	and    BYTE PTR [eax],al
 1002c4e:	add    BYTE PTR [eax],al
 1002c50:	add    eax,0xbc00000
 1002c55:	add    BYTE PTR [eax],al
 1002c57:	add    BYTE PTR [eax],al
 1002c59:	add    BYTE PTR [eax],al
 1002c5b:	add    BYTE PTR ds:0x4c00000,bl
 1002c61:	add    BYTE PTR [eax],al
 1002c63:	add    BYTE PTR [eax],al
 1002c65:	add    BYTE PTR [eax],al
 1002c67:	add    BYTE PTR [esi+0x4c00000],dl
 1002c6d:	add    BYTE PTR [eax],al
 1002c6f:	add    BYTE PTR [eax],al
 1002c71:	add    BYTE PTR [eax],al
 1002c73:	add    BYTE PTR [ebp+0x8c00000],cl
 1002c79:	add    BYTE PTR [eax],al
 1002c7b:	add    BYTE PTR [eax],al
 1002c7d:	add    BYTE PTR [eax],al
 1002c7f:	add    BYTE PTR [esi+0x8c00000],cl
 1002c85:	add    BYTE PTR [eax],al
 1002c87:	add    BYTE PTR [eax],al
 1002c89:	add    BYTE PTR [eax],al
 1002c8b:	add    BYTE PTR [edi+0x8c00000],cl
 1002c91:	add    BYTE PTR [eax],al
 1002c93:	add    BYTE PTR [eax],al
 1002c95:	add    BYTE PTR [eax],al
 1002c97:	add    BYTE PTR [eax+0x8c00000],dl
 1002c9d:	add    BYTE PTR [eax],al
 1002c9f:	add    BYTE PTR [eax],al
 1002ca1:	add    BYTE PTR [eax],al
 1002ca3:	add    BYTE PTR [ecx+0x8c00000],dl
 1002ca9:	add    BYTE PTR [eax],al
 1002cab:	add    BYTE PTR [eax],al
 1002cad:	add    BYTE PTR [eax],al
 1002caf:	add    BYTE PTR [edx+0x8c00000],dl
 1002cb5:	add    BYTE PTR [eax],al
 1002cb7:	add    BYTE PTR [eax],al
 1002cb9:	add    BYTE PTR [eax],al
 1002cbb:	add    BYTE PTR [ebx+0x8c00000],dl
 1002cc1:	add    BYTE PTR [eax],al
 1002cc3:	add    BYTE PTR [eax],al
 1002cc5:	add    BYTE PTR [eax],al
 1002cc7:	add    BYTE PTR [edx+eax*1+0x8c000],dh
 1002cce:	add    BYTE PTR [eax],al
 1002cd0:	add    BYTE PTR [eax],al
 1002cd2:	add    BYTE PTR [eax],al
 1002cd4:	mov    ch,0x2
 1002cd6:	add    al,al
 1002cd8:	or     BYTE PTR [eax],al
 1002cda:	add    BYTE PTR [eax],al
 1002cdc:	add    BYTE PTR [eax],al
 1002cde:	add    BYTE PTR [eax],al
 1002ce0:	add    eax,DWORD PTR [eax]
 1002ce2:	add    BYTE PTR [eax],al
 1002ce4:	or     DWORD PTR [eax],eax
 1002ce6:	add    BYTE PTR [eax],al
 1002ce8:	nop
 1002ce9:	add    BYTE PTR [eax],al
 1002ceb:	add    BYTE PTR [eax+eax*1],cl
 1002cee:	add    BYTE PTR [eax],al
 1002cf0:	dec    ebx
 1002cf1:	add    BYTE PTR [ebp+0x0],al
 1002cf4:	push   edx
 1002cf5:	add    BYTE PTR [esi+0x0],cl
 1002cf8:	inc    ebp
 1002cf9:	add    BYTE PTR [eax+eax*1+0x33],cl
 1002cfd:	add    BYTE PTR [edx],dh
 1002cff:	add    BYTE PTR [esi],ch
 1002d01:	add    BYTE PTR [eax+eax*1+0x4c],al
 1002d05:	add    BYTE PTR [eax+eax*1+0x0],cl
 1002d09:	add    BYTE PTR [eax],al
 1002d0b:	add    BYTE PTR [esi+0x6c],al
 1002d0e:	jae    0x1002d56
 1002d10:	jb     0x1002d77
 1002d12:	add    BYTE PTR gs:[esi+0x6c],al
 1002d16:	jae    0x1002d6b
 1002d18:	gs je  0x1002d71
 1002d1b:	popa   
 1002d1c:	ins    BYTE PTR es:[edi],dx
 1002d1d:	jne    0x1002d84
 1002d1f:	add    BYTE PTR [esi+0x6c],al
 1002d22:	jae    0x1002d6b
 1002d24:	gs je  0x1002d7d
 1002d27:	popa   
 1002d28:	ins    BYTE PTR es:[edi],dx
 1002d29:	jne    0x1002d90
 1002d2b:	add    BYTE PTR [esi+0x6c],al
 1002d2e:	jae    0x1002d71
 1002d30:	ins    BYTE PTR es:[edi],dx
 1002d31:	ins    BYTE PTR es:[edi],dx
 1002d32:	outs   dx,DWORD PTR ds:[esi]
 1002d33:	arpl   WORD PTR [eax],ax
 1002d35:	add    BYTE PTR [eax],al
 1002d37:	add    BYTE PTR [eax],ch
 1002d39:	add    BYTE PTR [esi+0x0],ch
 1002d3c:	jne    0x1002d3e
 1002d3e:	ins    BYTE PTR es:[edi],dx
 1002d3f:	add    BYTE PTR [eax+eax*1+0x29],ch
 1002d43:	add    BYTE PTR [eax],al
 1002d45:	add    BYTE PTR [eax],al
 1002d47:	add    BYTE PTR [eax],ch
 1002d49:	outs   dx,BYTE PTR ds:[esi]
 1002d4a:	jne    0x1002db8
 1002d4c:	ins    BYTE PTR es:[edi],dx
 1002d4d:	sub    DWORD PTR [eax],eax
 1002d4f:	add    BYTE PTR [esi],al
 1002d51:	add    BYTE PTR [eax],al
 1002d53:	push   es
 1002d54:	add    BYTE PTR [ecx],al
 1002d56:	add    BYTE PTR [eax],al
 1002d58:	adc    BYTE PTR [eax],al
 1002d5a:	add    eax,DWORD PTR [esi]
 1002d5c:	add    BYTE PTR [esi],al
 1002d5e:	add    dl,BYTE PTR [eax]
 1002d60:	add    al,0x45
 1002d62:	inc    ebp
 1002d63:	inc    ebp
 1002d64:	add    eax,0x5050505
 1002d69:	xor    eax,0x500030
 1002d6e:	add    BYTE PTR [eax],al
 1002d70:	add    BYTE PTR [eax],ch
 1002d72:	and    BYTE PTR [eax],bh
 1002d74:	push   eax
 1002d75:	pop    eax
 1002d76:	pop    es
 1002d77:	or     BYTE PTR [eax],al
 1002d79:	aaa    
 1002d7a:	xor    BYTE PTR [eax],dh
 1002d7c:	push   edi
 1002d7d:	push   eax
 1002d7e:	pop    es
 1002d7f:	add    BYTE PTR [eax],al
 1002d81:	and    BYTE PTR [eax],ah
 1002d83:	or     BYTE PTR [eax],al
 1002d85:	add    BYTE PTR [eax],al
 1002d87:	add    BYTE PTR [eax],cl
 1002d89:	pusha  
 1002d8a:	push   0x60606060
 1002d8f:	add    BYTE PTR [eax],al
 1002d91:	js     0x1002e03
 1002d93:	js     0x1002e0d
 1002d95:	js     0x1002e0f
 1002d97:	or     BYTE PTR [edi],al
 1002d99:	or     BYTE PTR [eax],al
 1002d9b:	add    BYTE PTR [edi],al
 1002d9d:	add    BYTE PTR [eax],cl
 1002d9f:	or     BYTE PTR [eax],cl
 1002da1:	add    BYTE PTR [eax],al
 1002da3:	or     BYTE PTR [eax],al
 1002da5:	or     BYTE PTR [eax],al
 1002da7:	pop    es
 1002da8:	or     BYTE PTR [eax],al
 1002daa:	add    BYTE PTR [eax],al
 1002dac:	arpl   WORD PTR [ebx+0x73],sp
 1002daf:	add    BYTE PTR [ebp+0x54],dl
 1002db2:	inc    esi
 1002db3:	sub    eax,0x38
 1002db8:	push   ebp
 1002db9:	push   esp
 1002dba:	inc    esi
 1002dbb:	sub    eax,0x454c3631
 1002dc0:	add    BYTE PTR [eax],al
 1002dc2:	add    BYTE PTR [eax],al
 1002dc4:	push   ebp
 1002dc5:	dec    esi
 1002dc6:	dec    ecx
 1002dc7:	inc    ebx
 1002dc8:	dec    edi
 1002dc9:	inc    esp
 1002dca:	inc    ebp
 1002dcb:	add    BYTE PTR [eax-0x27fefeb6],al
 1002dd1:	dec    edx
 1002dd2:	add    DWORD PTR [ecx],eax
 1002dd4:	cld    
 1002dd5:	inc    edx
 1002dd6:	add    BYTE PTR [ecx],al
 1002dd8:	clc    
 1002dd9:	mov    esi,0xbe340100
 1002dde:	add    BYTE PTR [ecx],al
 1002de0:	push   ebp
 1002de1:	outs   dx,BYTE PTR ds:[esi]
 1002de2:	imul   ebp,DWORD PTR [esi+0x6f],0x77
 1002de6:	outs   dx,BYTE PTR ds:[esi]
 1002de7:	and    BYTE PTR [ebp+0x78],ah
 1002dea:	arpl   WORD PTR [ebp+0x70],sp
 1002ded:	je     0x1002e58
 1002def:	outs   dx,DWORD PTR ds:[esi]
 1002df0:	outs   dx,BYTE PTR ds:[esi]
 1002df1:	add    BYTE PTR [eax],al
 1002df3:	add    BYTE PTR [eax],dl
 1002df5:	inc    ebx
 1002df6:	add    BYTE PTR [ecx],al
 1002df8:	arpl   WORD PTR [edi+0x73630100],di
 1002dfe:	ins    DWORD PTR es:[edi],dx
 1002dff:	loopne 0x1002e02
	...
 1002e09:	add    BYTE PTR [eax],al
 1002e0b:	add    BYTE PTR [ebx],al
 1002e0d:	add    BYTE PTR [eax],al
 1002e0f:	add    BYTE PTR [eax],ah
 1002e11:	add    eax,0x1993
 1002e16:	add    BYTE PTR [eax],al
 1002e18:	add    BYTE PTR [eax],al
 1002e1a:	add    BYTE PTR [eax],al
 1002e1c:	dec    eax
 1002e1d:	add    BYTE PTR [eax+0x0],cl
 1002e20:	cmp    al,BYTE PTR [eax]
 1002e22:	ins    DWORD PTR es:[edi],dx
 1002e23:	add    BYTE PTR [ebp+0x0],ch
 1002e26:	cmp    al,BYTE PTR [eax]
 1002e28:	jae    0x1002e2a
 1002e2a:	jae    0x1002e2c
 1002e2c:	add    BYTE PTR [eax],al
 1002e2e:	add    BYTE PTR [eax],al
 1002e30:	add    BYTE PTR fs:[eax+eax*1+0x64],ah
 1002e35:	add    BYTE PTR [eax+eax*1+0x2c],ah
 1002e39:	add    BYTE PTR [eax],ah
 1002e3b:	add    BYTE PTR [ebp+0x0],cl
 1002e3e:	dec    ebp
 1002e3f:	add    BYTE PTR [ebp+0x0],cl
 1002e42:	dec    ebp
 1002e43:	add    BYTE PTR [eax],ah
 1002e45:	add    BYTE PTR [eax+eax*1+0x64],ah
 1002e49:	add    BYTE PTR [eax+eax*1],ch
 1002e4c:	and    BYTE PTR [eax],al
 1002e4e:	jns    0x1002e50
 1002e50:	jns    0x1002e52
 1002e52:	jns    0x1002e54
 1002e54:	jns    0x1002e56
 1002e56:	add    BYTE PTR [eax],al
 1002e58:	dec    ebp
 1002e59:	add    BYTE PTR [ebp+0x0],cl
 1002e5c:	das    
 1002e5d:	add    BYTE PTR [eax+eax*1+0x64],ah
 1002e61:	add    BYTE PTR [edi],ch
 1002e63:	add    BYTE PTR [ecx+0x0],bh
 1002e66:	jns    0x1002e68
 1002e68:	add    BYTE PTR [eax],al
 1002e6a:	add    BYTE PTR [eax],al
 1002e6c:	push   eax
 1002e6d:	add    BYTE PTR [ebp+0x0],cl
 1002e70:	add    BYTE PTR [eax],al
 1002e72:	add    BYTE PTR [eax],al
 1002e74:	inc    ecx
 1002e75:	add    BYTE PTR [ebp+0x0],cl
 1002e78:	add    BYTE PTR [eax],al
 1002e7a:	add    BYTE PTR [eax],al
 1002e7c:	inc    esp
 1002e7d:	add    BYTE PTR [ebp+0x0],ah
 1002e80:	arpl   WORD PTR [eax],ax
 1002e82:	add    BYTE PTR gs:[ebp+0x0],ch
 1002e86:	bound  eax,QWORD PTR [eax]
 1002e88:	add    BYTE PTR gs:[edx+0x0],dh
 1002e8c:	add    BYTE PTR [eax],al
 1002e8e:	add    BYTE PTR [eax],al
 1002e90:	dec    esi
 1002e91:	add    BYTE PTR [edi+0x0],ch
 1002e94:	jbe    0x1002e96
 1002e96:	add    BYTE PTR gs:[ebp+0x0],ch
 1002e9a:	bound  eax,QWORD PTR [eax]
 1002e9c:	add    BYTE PTR gs:[edx+0x0],dh
 1002ea0:	add    BYTE PTR [eax],al
 1002ea2:	add    BYTE PTR [eax],al
 1002ea4:	dec    edi
 1002ea5:	add    BYTE PTR [ebx+0x0],ah
 1002ea8:	je     0x1002eaa
 1002eaa:	outs   dx,DWORD PTR ds:[esi]
 1002eab:	add    BYTE PTR [edx+0x0],ah
 1002eae:	add    BYTE PTR gs:[edx+0x0],dh
 1002eb2:	add    BYTE PTR [eax],al
 1002eb4:	push   ebx
 1002eb5:	add    BYTE PTR [ebp+0x0],ah
 1002eb8:	jo     0x1002eba
 1002eba:	je     0x1002ebc
 1002ebc:	add    BYTE PTR gs:[ebp+0x0],ch
 1002ec0:	bound  eax,QWORD PTR [eax]
 1002ec2:	add    BYTE PTR gs:[edx+0x0],dh
 1002ec6:	add    BYTE PTR [eax],al
 1002ec8:	inc    ecx
 1002ec9:	add    BYTE PTR [ebp+0x0],dh
 1002ecc:	add    BYTE PTR [di+0x0],dh
 1002ed0:	jae    0x1002ed2
 1002ed2:	je     0x1002ed4
 1002ed4:	add    BYTE PTR [eax],al
 1002ed6:	add    BYTE PTR [eax],al
 1002ed8:	dec    edx
 1002ed9:	add    BYTE PTR [ebp+0x0],dh
 1002edc:	ins    BYTE PTR es:[edi],dx
 1002edd:	add    BYTE PTR [ecx+0x0],bh
 1002ee0:	add    BYTE PTR [eax],al
 1002ee2:	add    BYTE PTR [eax],al
 1002ee4:	dec    edx
 1002ee5:	add    BYTE PTR [ebp+0x0],dh
 1002ee8:	outs   dx,BYTE PTR ds:[esi]
 1002ee9:	add    BYTE PTR [ebp+0x0],ah
 1002eec:	add    BYTE PTR [eax],al
 1002eee:	add    BYTE PTR [eax],al
 1002ef0:	inc    ecx
 1002ef1:	add    BYTE PTR [eax+0x0],dh
 1002ef4:	jb     0x1002ef6
 1002ef6:	imul   eax,DWORD PTR [eax],0x6c
 1002efc:	dec    ebp
 1002efd:	add    BYTE PTR [ecx+0x0],ah
 1002f00:	jb     0x1002f02
 1002f02:	arpl   WORD PTR [eax],ax
 1002f04:	push   0x46000000
 1002f09:	add    BYTE PTR [ebp+0x0],ah
 1002f0c:	bound  eax,QWORD PTR [eax]
 1002f0e:	jb     0x1002f10
 1002f10:	jne    0x1002f12
 1002f12:	popa   
 1002f13:	add    BYTE PTR [edx+0x0],dh
 1002f16:	jns    0x1002f18
 1002f18:	add    BYTE PTR [eax],al
 1002f1a:	add    BYTE PTR [eax],al
 1002f1c:	dec    edx
 1002f1d:	add    BYTE PTR [ecx+0x0],ah
 1002f20:	outs   dx,BYTE PTR ds:[esi]
 1002f21:	add    BYTE PTR [ebp+0x0],dh
 1002f24:	popa   
 1002f25:	add    BYTE PTR [edx+0x0],dh
 1002f28:	jns    0x1002f2a
 1002f2a:	add    BYTE PTR [eax],al
 1002f2c:	inc    esp
 1002f2d:	add    BYTE PTR [ebp+0x0],ah
 1002f30:	arpl   WORD PTR [eax],ax
 1002f32:	add    BYTE PTR [eax],al
 1002f34:	dec    esi
 1002f35:	add    BYTE PTR [edi+0x0],ch
 1002f38:	jbe    0x1002f3a
 1002f3a:	add    BYTE PTR [eax],al
 1002f3c:	dec    edi
 1002f3d:	add    BYTE PTR [ebx+0x0],ah
 1002f40:	je     0x1002f42
 1002f42:	add    BYTE PTR [eax],al
 1002f44:	push   ebx
 1002f45:	add    BYTE PTR [ebp+0x0],ah
 1002f48:	jo     0x1002f4a
 1002f4a:	add    BYTE PTR [eax],al
 1002f4c:	inc    ecx
 1002f4d:	add    BYTE PTR [ebp+0x0],dh
 1002f50:	add    BYTE PTR [bx+si],al
 1002f53:	add    BYTE PTR [edx+0x0],cl
 1002f56:	jne    0x1002f58
 1002f58:	ins    BYTE PTR es:[edi],dx
 1002f59:	add    BYTE PTR [eax],al
 1002f5b:	add    BYTE PTR [edx+0x0],cl
 1002f5e:	jne    0x1002f60
 1002f60:	outs   dx,BYTE PTR ds:[esi]
 1002f61:	add    BYTE PTR [eax],al
 1002f63:	add    BYTE PTR [ebp+0x0],cl
 1002f66:	popa   
 1002f67:	add    BYTE PTR [ecx+0x0],bh
 1002f6a:	add    BYTE PTR [eax],al
 1002f6c:	inc    ecx
 1002f6d:	add    BYTE PTR [eax+0x0],dh
 1002f70:	jb     0x1002f72
 1002f72:	add    BYTE PTR [eax],al
 1002f74:	dec    ebp
 1002f75:	add    BYTE PTR [ecx+0x0],ah
 1002f78:	jb     0x1002f7a
 1002f7a:	add    BYTE PTR [eax],al
 1002f7c:	inc    esi
 1002f7d:	add    BYTE PTR [ebp+0x0],ah
 1002f80:	bound  eax,QWORD PTR [eax]
 1002f82:	add    BYTE PTR [eax],al
 1002f84:	dec    edx
 1002f85:	add    BYTE PTR [ecx+0x0],ah
 1002f88:	outs   dx,BYTE PTR ds:[esi]
 1002f89:	add    BYTE PTR [eax],al
 1002f8b:	add    BYTE PTR [ebx+0x0],dl
 1002f8e:	popa   
 1002f8f:	add    BYTE PTR [eax+eax*1+0x75],dh
 1002f93:	add    BYTE PTR [edx+0x0],dh
 1002f96:	add    BYTE PTR fs:[ecx+0x0],ah
 1002f9a:	jns    0x1002f9c
 1002f9c:	add    BYTE PTR [eax],al
 1002f9e:	add    BYTE PTR [eax],al
 1002fa0:	inc    esi
 1002fa1:	add    BYTE PTR [edx+0x0],dh
 1002fa4:	imul   eax,DWORD PTR [eax],0x610064
 1002faa:	jns    0x1002fac
 1002fac:	add    BYTE PTR [eax],al
 1002fae:	add    BYTE PTR [eax],al
 1002fb0:	push   esp
 1002fb1:	add    BYTE PTR [eax+0x0],ch
 1002fb4:	jne    0x1002fb6
 1002fb6:	jb     0x1002fb8
 1002fb8:	jae    0x1002fba
 1002fba:	add    BYTE PTR fs:[ecx+0x0],ah
 1002fbe:	jns    0x1002fc0
 1002fc0:	add    BYTE PTR [eax],al
 1002fc2:	add    BYTE PTR [eax],al
 1002fc4:	push   edi
 1002fc5:	add    BYTE PTR [ebp+0x0],ah
 1002fc8:	add    BYTE PTR fs:[esi+0x0],ch
 1002fcc:	add    BYTE PTR gs:[ebx+0x0],dh
 1002fd0:	add    BYTE PTR fs:[ecx+0x0],ah
 1002fd4:	jns    0x1002fd6
 1002fd6:	add    BYTE PTR [eax],al
 1002fd8:	push   esp
 1002fd9:	add    BYTE PTR [ebp+0x0],dh
 1002fdc:	add    BYTE PTR gs:[ebx+0x0],dh
 1002fe0:	add    BYTE PTR fs:[ecx+0x0],ah
 1002fe4:	jns    0x1002fe6
 1002fe6:	add    BYTE PTR [eax],al
 1002fe8:	dec    ebp
 1002fe9:	add    BYTE PTR [edi+0x0],ch
 1002fec:	outs   dx,BYTE PTR ds:[esi]
 1002fed:	add    BYTE PTR [eax+eax*1+0x61],ah
 1002ff1:	add    BYTE PTR [ecx+0x0],bh
 1002ff4:	add    BYTE PTR [eax],al
 1002ff6:	add    BYTE PTR [eax],al
 1002ff8:	push   ebx
 1002ff9:	add    BYTE PTR [ebp+0x0],dh
 1002ffc:	outs   dx,BYTE PTR ds:[esi]
 1002ffd:	add    BYTE PTR [eax+eax*1+0x61],ah
 1003001:	add    BYTE PTR [ecx+0x0],bh
 1003004:	add    BYTE PTR [eax],al
 1003006:	add    BYTE PTR [eax],al
 1003008:	push   ebx
 1003009:	add    BYTE PTR [ecx+0x0],ah
 100300c:	je     0x100300e
 100300e:	add    BYTE PTR [eax],al
 1003010:	inc    esi
 1003011:	add    BYTE PTR [edx+0x0],dh
 1003014:	imul   eax,DWORD PTR [eax],0x540000
 100301a:	push   0x7500
 100301f:	add    BYTE PTR [edi+0x0],dl
 1003022:	add    BYTE PTR gs:[eax+eax*1+0x0],ah
 1003027:	add    BYTE PTR [eax+eax*1+0x75],dl
 100302b:	add    BYTE PTR [ebp+0x0],ah
 100302e:	add    BYTE PTR [eax],al
 1003030:	dec    ebp
 1003031:	add    BYTE PTR [edi+0x0],ch
 1003034:	outs   dx,BYTE PTR ds:[esi]
 1003035:	add    BYTE PTR [eax],al
 1003037:	add    BYTE PTR [ebx+0x0],dl
 100303a:	jne    0x100303c
 100303c:	outs   dx,BYTE PTR ds:[esi]
 100303d:	add    BYTE PTR [eax],al
 100303f:	add    BYTE PTR [eax+0x48],cl
 1003042:	cmp    ch,BYTE PTR [ebp+0x6d]
 1003045:	cmp    dh,BYTE PTR [ebx+0x73]
 1003048:	add    BYTE PTR [eax],al
 100304a:	add    BYTE PTR [eax],al
 100304c:	fs fs fs fs sub al,0x20
 1003052:	dec    ebp
 1003053:	dec    ebp
 1003054:	dec    ebp
 1003055:	dec    ebp
 1003056:	and    BYTE PTR [esp+eiz*2+0x2c],ah
 100305a:	and    BYTE PTR [ecx+0x79],bh
 100305d:	jns    0x10030d8
 100305f:	add    BYTE PTR [ebp+0x4d],cl
 1003062:	das    
 1003063:	fs fs das 
 1003066:	jns    0x10030e1
 1003068:	add    BYTE PTR [eax],al
 100306a:	add    BYTE PTR [eax],al
 100306c:	push   eax
 100306d:	dec    ebp
 100306e:	add    BYTE PTR [eax],al
 1003070:	inc    ecx
 1003071:	dec    ebp
 1003072:	add    BYTE PTR [eax],al
 1003074:	inc    esp
 1003075:	arpl   WORD PTR gs:[ebp+0x6d],sp
 1003079:	bound  esp,QWORD PTR [ebp+0x72]
 100307c:	add    BYTE PTR [eax],al
 100307e:	add    BYTE PTR [eax],al
 1003080:	dec    esi
 1003081:	outs   dx,DWORD PTR ds:[esi]
 1003082:	jbe    0x10030e9
 1003084:	ins    DWORD PTR es:[edi],dx
 1003085:	bound  esp,QWORD PTR [ebp+0x72]
 1003088:	add    BYTE PTR [eax],al
 100308a:	add    BYTE PTR [eax],al
 100308c:	dec    edi
 100308d:	arpl   WORD PTR [edi+ebp*2+0x62],si
 1003091:	gs jb  0x1003094
 1003094:	push   ebx
 1003095:	gs jo  0x100310c
 1003098:	gs ins DWORD PTR es:[edi],dx
 100309a:	bound  esp,QWORD PTR [ebp+0x72]
 100309d:	add    BYTE PTR [eax],al
 100309f:	add    BYTE PTR [ecx+0x75],al
 10030a2:	addr16 jne 0x1003118
 10030a5:	je     0x10030a7
 10030a7:	add    BYTE PTR [edx+0x75],cl
 10030aa:	ins    BYTE PTR es:[edi],dx
 10030ab:	jns    0x10030ad
 10030ad:	add    BYTE PTR [eax],al
 10030af:	add    BYTE PTR [edx+0x75],cl
 10030b2:	outs   dx,BYTE PTR ds:[esi]
 10030b3:	add    BYTE PTR gs:[eax],al
 10030b6:	add    BYTE PTR [eax],al
 10030b8:	inc    ecx
 10030b9:	jo     0x100312d
 10030bb:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x72614d00
 10030c3:	arpl   WORD PTR [eax+0x0],bp
 10030c6:	add    BYTE PTR [eax],al
 10030c8:	inc    esi
 10030c9:	bound  esi,QWORD PTR gs:[edx+0x75]
 10030cd:	popa   
 10030ce:	jb     0x1003149
 10030d0:	add    BYTE PTR [eax],al
 10030d2:	add    BYTE PTR [eax],al
 10030d4:	dec    edx
 10030d5:	popa   
 10030d6:	outs   dx,BYTE PTR ds:[esi]
 10030d7:	jne    0x100313a
 10030d9:	jb     0x1003154
 10030db:	add    BYTE PTR [ebp+eiz*2+0x63],al
 10030df:	add    BYTE PTR [esi+0x6f],cl
 10030e2:	jbe    0x10030e4
 10030e4:	dec    edi
 10030e5:	arpl   WORD PTR [eax+eax*1+0x53],si
 10030e9:	gs jo  0x10030ec
 10030ec:	inc    ecx
 10030ed:	jne    0x1003156
 10030ef:	add    BYTE PTR [edx+0x75],cl
 10030f2:	ins    BYTE PTR es:[edi],dx
 10030f3:	add    BYTE PTR [edx+0x75],cl
 10030f6:	outs   dx,BYTE PTR ds:[esi]
 10030f7:	add    BYTE PTR [ebp+0x61],cl
 10030fa:	jns    0x10030fc
 10030fc:	inc    ecx
 10030fd:	jo     0x1003171
 10030ff:	add    BYTE PTR [ebp+0x61],cl
 1003102:	jb     0x1003104
 1003104:	inc    esi
 1003105:	bound  eax,QWORD PTR gs:[eax]
 1003108:	dec    edx
 1003109:	popa   
 100310a:	outs   dx,BYTE PTR ds:[esi]
 100310b:	add    BYTE PTR [ebx+0x61],dl
 100310e:	je     0x1003185
 1003110:	jb     0x1003176
 1003112:	popa   
 1003113:	jns    0x1003115
 1003115:	add    BYTE PTR [eax],al
 1003117:	add    BYTE PTR [esi+0x72],al
 100311a:	imul   esp,DWORD PTR [ecx+eiz*2+0x79],0x68540000
 1003122:	jne    0x1003196
 1003124:	jae    0x100318a
 1003126:	popa   
 1003127:	jns    0x1003129
 1003129:	add    BYTE PTR [eax],al
 100312b:	add    BYTE PTR [edi+0x65],dl
 100312e:	outs   dx,BYTE PTR fs:[esi]
 1003130:	gs jae 0x1003197
 1003133:	popa   
 1003134:	jns    0x1003136
 1003136:	add    BYTE PTR [eax],al
 1003138:	push   esp
 1003139:	jne    0x10031a0
 100313b:	jae    0x10031a1
 100313d:	popa   
 100313e:	jns    0x1003140
 1003140:	dec    ebp
 1003141:	outs   dx,DWORD PTR ds:[esi]
 1003142:	outs   dx,BYTE PTR ds:[esi]
 1003143:	fs popa 
 1003145:	jns    0x1003147
 1003147:	add    BYTE PTR [ebx+0x75],dl
 100314a:	outs   dx,BYTE PTR ds:[esi]
 100314b:	fs popa 
 100314d:	jns    0x100314f
 100314f:	add    BYTE PTR [ebx+0x61],dl
 1003152:	je     0x1003154
 1003154:	inc    esi
 1003155:	jb     0x10031c0
 1003157:	add    BYTE PTR [eax+ebp*2+0x75],dl
 100315b:	add    BYTE PTR [edi+0x65],dl
 100315e:	add    BYTE PTR fs:[ebp+esi*2+0x65],dl
 1003163:	add    BYTE PTR [ebp+0x6f],cl
 1003166:	outs   dx,BYTE PTR ds:[esi]
 1003167:	add    BYTE PTR [ebx+0x75],dl
 100316a:	outs   dx,BYTE PTR ds:[esi]
 100316b:	add    BYTE PTR [eax],al
 100316d:	add    BYTE PTR [eax],al
 100316f:	add    BYTE PTR [ecx],al
 1003171:	add    al,BYTE PTR [ebx]
 1003173:	add    al,0x5
 1003175:	push   es
 1003176:	pop    es
 1003177:	or     BYTE PTR [ecx],cl
 1003179:	or     cl,BYTE PTR [ebx]
 100317b:	or     al,0xd
 100317d:	push   cs
 100317e:	movups xmm2,XMMWORD PTR [ecx]
 1003181:	adc    dl,BYTE PTR [ebx]
 1003183:	adc    al,0x15
 1003185:	push   ss
 1003186:	pop    ss
 1003187:	sbb    BYTE PTR [ecx],bl
 1003189:	sbb    bl,BYTE PTR [ebx]
 100318b:	sbb    al,0x1d
 100318d:	push   ds
 100318e:	pop    ds
 100318f:	and    BYTE PTR [ecx],ah
 1003191:	and    ah,BYTE PTR [ebx]
 1003193:	and    al,0x25
 1003195:	es daa 
 1003197:	sub    BYTE PTR [ecx],ch
 1003199:	sub    ch,BYTE PTR [ebx]
 100319b:	sub    al,0x2d
 100319d:	cs das 
 100319f:	xor    BYTE PTR [ecx],dh
 10031a1:	xor    dh,BYTE PTR [ebx]
 10031a3:	xor    al,0x35
 10031a5:	ss aaa 
 10031a7:	cmp    BYTE PTR [ecx],bh
 10031a9:	cmp    bh,BYTE PTR [ebx]
 10031ab:	cmp    al,0x3d
 10031ad:	ds aas 
 10031af:	inc    eax
 10031b0:	inc    ecx
 10031b1:	inc    edx
 10031b2:	inc    ebx
 10031b3:	inc    esp
 10031b4:	inc    ebp
 10031b5:	inc    esi
 10031b6:	inc    edi
 10031b7:	dec    eax
 10031b8:	dec    ecx
 10031b9:	dec    edx
 10031ba:	dec    ebx
 10031bb:	dec    esp
 10031bc:	dec    ebp
 10031bd:	dec    esi
 10031be:	dec    edi
 10031bf:	push   eax
 10031c0:	push   ecx
 10031c1:	push   edx
 10031c2:	push   ebx
 10031c3:	push   esp
 10031c4:	push   ebp
 10031c5:	push   esi
 10031c6:	push   edi
 10031c7:	pop    eax
 10031c8:	pop    ecx
 10031c9:	pop    edx
 10031ca:	pop    ebx
 10031cb:	pop    esp
 10031cc:	pop    ebp
 10031cd:	pop    esi
 10031ce:	pop    edi
 10031cf:	pusha  
 10031d0:	popa   
 10031d1:	bound  esp,QWORD PTR [ebx+0x64]
 10031d4:	gs addr16 pushw 0x6a69
 10031da:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
 10031df:	jo     0x1003252
 10031e1:	jb     0x1003256
 10031e3:	je     0x100325a
 10031e5:	jbe    0x100325e
 10031e7:	js     0x1003262
 10031e9:	jp     0x1003266
 10031eb:	jl     0x100326a
 10031ed:	jle    0x100326e
 10031ef:	add    BYTE PTR ds:0x47000000,bh
 10031f5:	gs je  0x1003248
 10031f8:	jb     0x1003269
 10031fa:	arpl   WORD PTR [ebp+0x73],sp
 10031fd:	jae    0x1003256
 10031ff:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 1003206:	popa   
 1003207:	je     0x1003272
 1003209:	outs   dx,DWORD PTR ds:[esi]
 100320a:	outs   dx,BYTE PTR ds:[esi]
 100320b:	add    BYTE PTR [edi+0x65],al
 100320e:	je     0x1003265
 1003210:	jae    0x1003277
 1003212:	jb     0x1003263
 1003214:	bound  ebp,QWORD PTR [edx+0x65]
 1003217:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
 100321b:	outs   dx,WORD PTR ds:[esi]
 100321d:	jb     0x100328c
 100321f:	popa   
 1003220:	je     0x100328b
 1003222:	outs   dx,DWORD PTR ds:[esi]
 1003223:	outs   dx,BYTE PTR ds:[esi]
 1003224:	push   edi
 1003225:	add    BYTE PTR [eax],al
 1003227:	add    BYTE PTR [edi+0x65],al
 100322a:	je     0x1003278
 100322c:	popa   
 100322d:	jae    0x10032a3
 100322f:	inc    ecx
 1003230:	arpl   WORD PTR [ecx+ebp*2+0x76],si
 1003234:	gs push eax
 1003236:	outs   dx,DWORD PTR ds:[esi]
 1003237:	jo     0x10032ae
 1003239:	jo     0x100323b
 100323b:	add    BYTE PTR [edi+0x65],al
 100323e:	je     0x1003281
 1003240:	arpl   WORD PTR [ecx+ebp*2+0x76],si
 1003244:	gs push edi
 1003246:	imul   ebp,DWORD PTR [esi+0x64],0x4d00776f
 100324d:	gs jae 0x10032c3
 1003250:	popa   
 1003251:	addr16 gs inc edx
 1003254:	outs   dx,DWORD PTR ds:[esi]
 1003255:	js     0x10032ae
 1003257:	add    BYTE PTR [ebp+0x0],dl
 100325a:	push   ebx
 100325b:	add    BYTE PTR [ebp+0x0],al
 100325e:	push   edx
 100325f:	add    BYTE PTR [ebx],dh
 1003261:	add    BYTE PTR [edx],dh
 1003263:	add    BYTE PTR [esi],ch
 1003265:	add    BYTE PTR [eax+eax*1+0x4c],al
 1003269:	add    BYTE PTR [eax+eax*1+0x0],cl
	...
 100336d:	add    BYTE PTR [eax],al
 100336f:	add    BYTE PTR [eax],ah
 1003371:	add    BYTE PTR [eax],ah
 1003373:	add    BYTE PTR [eax],ah
 1003375:	add    BYTE PTR [eax],ah
 1003377:	add    BYTE PTR [eax],ah
 1003379:	add    BYTE PTR [eax],ah
 100337b:	add    BYTE PTR [eax],ah
 100337d:	add    BYTE PTR [eax],ah
 100337f:	add    BYTE PTR [eax],ah
 1003381:	add    BYTE PTR [eax],ch
 1003383:	add    BYTE PTR [eax],ch
 1003385:	add    BYTE PTR [eax],ch
 1003387:	add    BYTE PTR [eax],ch
 1003389:	add    BYTE PTR [eax],ch
 100338b:	add    BYTE PTR [eax],ah
 100338d:	add    BYTE PTR [eax],ah
 100338f:	add    BYTE PTR [eax],ah
 1003391:	add    BYTE PTR [eax],ah
 1003393:	add    BYTE PTR [eax],ah
 1003395:	add    BYTE PTR [eax],ah
 1003397:	add    BYTE PTR [eax],ah
 1003399:	add    BYTE PTR [eax],ah
 100339b:	add    BYTE PTR [eax],ah
 100339d:	add    BYTE PTR [eax],ah
 100339f:	add    BYTE PTR [eax],ah
 10033a1:	add    BYTE PTR [eax],ah
 10033a3:	add    BYTE PTR [eax],ah
 10033a5:	add    BYTE PTR [eax],ah
 10033a7:	add    BYTE PTR [eax],ah
 10033a9:	add    BYTE PTR [eax],ah
 10033ab:	add    BYTE PTR [eax],ah
 10033ad:	add    BYTE PTR [eax],ah
 10033af:	add    BYTE PTR [eax+0x0],cl
 10033b2:	adc    BYTE PTR [eax],al
 10033b4:	adc    BYTE PTR [eax],al
 10033b6:	adc    BYTE PTR [eax],al
 10033b8:	adc    BYTE PTR [eax],al
 10033ba:	adc    BYTE PTR [eax],al
 10033bc:	adc    BYTE PTR [eax],al
 10033be:	adc    BYTE PTR [eax],al
 10033c0:	adc    BYTE PTR [eax],al
 10033c2:	adc    BYTE PTR [eax],al
 10033c4:	adc    BYTE PTR [eax],al
 10033c6:	adc    BYTE PTR [eax],al
 10033c8:	adc    BYTE PTR [eax],al
 10033ca:	adc    BYTE PTR [eax],al
 10033cc:	adc    BYTE PTR [eax],al
 10033ce:	adc    BYTE PTR [eax],al
 10033d0:	test   BYTE PTR [eax],al
 10033d2:	test   BYTE PTR [eax],al
 10033d4:	test   BYTE PTR [eax],al
 10033d6:	test   BYTE PTR [eax],al
 10033d8:	test   BYTE PTR [eax],al
 10033da:	test   BYTE PTR [eax],al
 10033dc:	test   BYTE PTR [eax],al
 10033de:	test   BYTE PTR [eax],al
 10033e0:	test   BYTE PTR [eax],al
 10033e2:	test   BYTE PTR [eax],al
 10033e4:	adc    BYTE PTR [eax],al
 10033e6:	adc    BYTE PTR [eax],al
 10033e8:	adc    BYTE PTR [eax],al
 10033ea:	adc    BYTE PTR [eax],al
 10033ec:	adc    BYTE PTR [eax],al
 10033ee:	adc    BYTE PTR [eax],al
 10033f0:	adc    BYTE PTR [eax],al
 10033f2:	add    DWORD PTR [eax],0x810081
 10033f8:	add    DWORD PTR [eax],0x810081
 10033fe:	add    DWORD PTR [eax],eax
 1003400:	add    DWORD PTR [eax],eax
 1003402:	add    DWORD PTR [eax],eax
 1003404:	add    DWORD PTR [eax],eax
 1003406:	add    DWORD PTR [eax],eax
 1003408:	add    DWORD PTR [eax],eax
 100340a:	add    DWORD PTR [eax],eax
 100340c:	add    DWORD PTR [eax],eax
 100340e:	add    DWORD PTR [eax],eax
 1003410:	add    DWORD PTR [eax],eax
 1003412:	add    DWORD PTR [eax],eax
 1003414:	add    DWORD PTR [eax],eax
 1003416:	add    DWORD PTR [eax],eax
 1003418:	add    DWORD PTR [eax],eax
 100341a:	add    DWORD PTR [eax],eax
 100341c:	add    DWORD PTR [eax],eax
 100341e:	add    DWORD PTR [eax],eax
 1003420:	add    DWORD PTR [eax],eax
 1003422:	add    DWORD PTR [eax],eax
 1003424:	add    DWORD PTR [eax],eax
 1003426:	adc    BYTE PTR [eax],al
 1003428:	adc    BYTE PTR [eax],al
 100342a:	adc    BYTE PTR [eax],al
 100342c:	adc    BYTE PTR [eax],al
 100342e:	adc    BYTE PTR [eax],al
 1003430:	adc    BYTE PTR [eax],al
 1003432:	add    BYTE PTR [eax],0x82
 1003435:	add    BYTE PTR [edx-0x7dff7e00],al
 100343b:	add    BYTE PTR [edx+0x2000200],al
 1003441:	add    BYTE PTR [edx],al
 1003443:	add    BYTE PTR [edx],al
 1003445:	add    BYTE PTR [edx],al
 1003447:	add    BYTE PTR [edx],al
 1003449:	add    BYTE PTR [edx],al
 100344b:	add    BYTE PTR [edx],al
 100344d:	add    BYTE PTR [edx],al
 100344f:	add    BYTE PTR [edx],al
 1003451:	add    BYTE PTR [edx],al
 1003453:	add    BYTE PTR [edx],al
 1003455:	add    BYTE PTR [edx],al
 1003457:	add    BYTE PTR [edx],al
 1003459:	add    BYTE PTR [edx],al
 100345b:	add    BYTE PTR [edx],al
 100345d:	add    BYTE PTR [edx],al
 100345f:	add    BYTE PTR [edx],al
 1003461:	add    BYTE PTR [edx],al
 1003463:	add    BYTE PTR [edx],al
 1003465:	add    BYTE PTR [eax],dl
 1003467:	add    BYTE PTR [eax],dl
 1003469:	add    BYTE PTR [eax],dl
 100346b:	add    BYTE PTR [eax],dl
 100346d:	add    BYTE PTR [eax],ah
	...
 100356f:	add    BYTE PTR [eax],al
 1003571:	add    BYTE PTR [eax],ah
 1003573:	add    BYTE PTR [eax],ah
 1003575:	add    BYTE PTR [eax],ah
 1003577:	add    BYTE PTR [eax],ah
 1003579:	add    BYTE PTR [eax],ah
 100357b:	add    BYTE PTR [eax],ah
 100357d:	add    BYTE PTR [eax],ah
 100357f:	add    BYTE PTR [eax],ah
 1003581:	add    BYTE PTR [eax],ah
 1003583:	add    BYTE PTR [eax+0x0],ch
 1003586:	sub    BYTE PTR [eax],al
 1003588:	sub    BYTE PTR [eax],al
 100358a:	sub    BYTE PTR [eax],al
 100358c:	sub    BYTE PTR [eax],al
 100358e:	and    BYTE PTR [eax],al
 1003590:	and    BYTE PTR [eax],al
 1003592:	and    BYTE PTR [eax],al
 1003594:	and    BYTE PTR [eax],al
 1003596:	and    BYTE PTR [eax],al
 1003598:	and    BYTE PTR [eax],al
 100359a:	and    BYTE PTR [eax],al
 100359c:	and    BYTE PTR [eax],al
 100359e:	and    BYTE PTR [eax],al
 10035a0:	and    BYTE PTR [eax],al
 10035a2:	and    BYTE PTR [eax],al
 10035a4:	and    BYTE PTR [eax],al
 10035a6:	and    BYTE PTR [eax],al
 10035a8:	and    BYTE PTR [eax],al
 10035aa:	and    BYTE PTR [eax],al
 10035ac:	and    BYTE PTR [eax],al
 10035ae:	and    BYTE PTR [eax],al
 10035b0:	and    BYTE PTR [eax],al
 10035b2:	dec    eax
 10035b3:	add    BYTE PTR [eax],dl
 10035b5:	add    BYTE PTR [eax],dl
 10035b7:	add    BYTE PTR [eax],dl
 10035b9:	add    BYTE PTR [eax],dl
 10035bb:	add    BYTE PTR [eax],dl
 10035bd:	add    BYTE PTR [eax],dl
 10035bf:	add    BYTE PTR [eax],dl
 10035c1:	add    BYTE PTR [eax],dl
 10035c3:	add    BYTE PTR [eax],dl
 10035c5:	add    BYTE PTR [eax],dl
 10035c7:	add    BYTE PTR [eax],dl
 10035c9:	add    BYTE PTR [eax],dl
 10035cb:	add    BYTE PTR [eax],dl
 10035cd:	add    BYTE PTR [eax],dl
 10035cf:	add    BYTE PTR [eax],dl
 10035d1:	add    BYTE PTR [eax+eax*1+0x840084],al
 10035d8:	test   BYTE PTR [eax],al
 10035da:	test   BYTE PTR [eax],al
 10035dc:	test   BYTE PTR [eax],al
 10035de:	test   BYTE PTR [eax],al
 10035e0:	test   BYTE PTR [eax],al
 10035e2:	test   BYTE PTR [eax],al
 10035e4:	test   BYTE PTR [eax],al
 10035e6:	adc    BYTE PTR [eax],al
 10035e8:	adc    BYTE PTR [eax],al
 10035ea:	adc    BYTE PTR [eax],al
 10035ec:	adc    BYTE PTR [eax],al
 10035ee:	adc    BYTE PTR [eax],al
 10035f0:	adc    BYTE PTR [eax],al
 10035f2:	adc    BYTE PTR [eax],al
 10035f4:	add    DWORD PTR [ecx],0x1810181
 10035fa:	add    DWORD PTR [ecx],0x1810181
 1003600:	add    DWORD PTR [ecx],eax
 1003602:	add    DWORD PTR [ecx],eax
 1003604:	add    DWORD PTR [ecx],eax
 1003606:	add    DWORD PTR [ecx],eax
 1003608:	add    DWORD PTR [ecx],eax
 100360a:	add    DWORD PTR [ecx],eax
 100360c:	add    DWORD PTR [ecx],eax
 100360e:	add    DWORD PTR [ecx],eax
 1003610:	add    DWORD PTR [ecx],eax
 1003612:	add    DWORD PTR [ecx],eax
 1003614:	add    DWORD PTR [ecx],eax
 1003616:	add    DWORD PTR [ecx],eax
 1003618:	add    DWORD PTR [ecx],eax
 100361a:	add    DWORD PTR [ecx],eax
 100361c:	add    DWORD PTR [ecx],eax
 100361e:	add    DWORD PTR [ecx],eax
 1003620:	add    DWORD PTR [ecx],eax
 1003622:	add    DWORD PTR [ecx],eax
 1003624:	add    DWORD PTR [ecx],eax
 1003626:	add    DWORD PTR [ecx],eax
 1003628:	adc    BYTE PTR [eax],al
 100362a:	adc    BYTE PTR [eax],al
 100362c:	adc    BYTE PTR [eax],al
 100362e:	adc    BYTE PTR [eax],al
 1003630:	adc    BYTE PTR [eax],al
 1003632:	adc    BYTE PTR [eax],al
 1003634:	add    BYTE PTR [ecx],0x82
 1003637:	add    DWORD PTR [edx-0x7dfe7dff],eax
 100363d:	add    DWORD PTR [edx+0x2010201],eax
 1003643:	add    DWORD PTR [edx],eax
 1003645:	add    DWORD PTR [edx],eax
 1003647:	add    DWORD PTR [edx],eax
 1003649:	add    DWORD PTR [edx],eax
 100364b:	add    DWORD PTR [edx],eax
 100364d:	add    DWORD PTR [edx],eax
 100364f:	add    DWORD PTR [edx],eax
 1003651:	add    DWORD PTR [edx],eax
 1003653:	add    DWORD PTR [edx],eax
 1003655:	add    DWORD PTR [edx],eax
 1003657:	add    DWORD PTR [edx],eax
 1003659:	add    DWORD PTR [edx],eax
 100365b:	add    DWORD PTR [edx],eax
 100365d:	add    DWORD PTR [edx],eax
 100365f:	add    DWORD PTR [edx],eax
 1003661:	add    DWORD PTR [edx],eax
 1003663:	add    DWORD PTR [edx],eax
 1003665:	add    DWORD PTR [edx],eax
 1003667:	add    DWORD PTR [eax],edx
 1003669:	add    BYTE PTR [eax],dl
 100366b:	add    BYTE PTR [eax],dl
 100366d:	add    BYTE PTR [eax],dl
 100366f:	add    BYTE PTR [eax],ah
 1003671:	add    BYTE PTR [eax],ah
 1003673:	add    BYTE PTR [eax],ah
 1003675:	add    BYTE PTR [eax],ah
 1003677:	add    BYTE PTR [eax],ah
 1003679:	add    BYTE PTR [eax],ah
 100367b:	add    BYTE PTR [eax],ah
 100367d:	add    BYTE PTR [eax],ah
 100367f:	add    BYTE PTR [eax],ah
 1003681:	add    BYTE PTR [eax],ah
 1003683:	add    BYTE PTR [eax],ah
 1003685:	add    BYTE PTR [eax],ah
 1003687:	add    BYTE PTR [eax],ah
 1003689:	add    BYTE PTR [eax],ah
 100368b:	add    BYTE PTR [eax],ah
 100368d:	add    BYTE PTR [eax],ah
 100368f:	add    BYTE PTR [eax],ah
 1003691:	add    BYTE PTR [eax],ah
 1003693:	add    BYTE PTR [eax],ah
 1003695:	add    BYTE PTR [eax],ah
 1003697:	add    BYTE PTR [eax],ah
 1003699:	add    BYTE PTR [eax],ah
 100369b:	add    BYTE PTR [eax],ah
 100369d:	add    BYTE PTR [eax],ah
 100369f:	add    BYTE PTR [eax],ah
 10036a1:	add    BYTE PTR [eax],ah
 10036a3:	add    BYTE PTR [eax],ah
 10036a5:	add    BYTE PTR [eax],ah
 10036a7:	add    BYTE PTR [eax],ah
 10036a9:	add    BYTE PTR [eax],ah
 10036ab:	add    BYTE PTR [eax],ah
 10036ad:	add    BYTE PTR [eax],ah
 10036af:	add    BYTE PTR [eax],ah
 10036b1:	add    BYTE PTR [eax+0x0],cl
 10036b4:	adc    BYTE PTR [eax],al
 10036b6:	adc    BYTE PTR [eax],al
 10036b8:	adc    BYTE PTR [eax],al
 10036ba:	adc    BYTE PTR [eax],al
 10036bc:	adc    BYTE PTR [eax],al
 10036be:	adc    BYTE PTR [eax],al
 10036c0:	adc    BYTE PTR [eax],al
 10036c2:	adc    BYTE PTR [eax],al
 10036c4:	adc    BYTE PTR [eax],al
 10036c6:	adc    BYTE PTR [eax],al
 10036c8:	adc    BYTE PTR [eax],al
 10036ca:	adc    BYTE PTR [eax],al
 10036cc:	adc    BYTE PTR [eax],al
 10036ce:	adc    BYTE PTR [eax],al
 10036d0:	adc    BYTE PTR [eax],al
 10036d2:	adc    BYTE PTR [eax],al
 10036d4:	adc    BYTE PTR [eax],al
 10036d6:	adc    al,0x0
 10036d8:	adc    al,0x0
 10036da:	adc    BYTE PTR [eax],al
 10036dc:	adc    BYTE PTR [eax],al
 10036de:	adc    BYTE PTR [eax],al
 10036e0:	adc    BYTE PTR [eax],al
 10036e2:	adc    BYTE PTR [eax],al
 10036e4:	adc    al,0x0
 10036e6:	adc    BYTE PTR [eax],al
 10036e8:	adc    BYTE PTR [eax],al
 10036ea:	adc    BYTE PTR [eax],al
 10036ec:	adc    BYTE PTR [eax],al
 10036ee:	adc    BYTE PTR [eax],al
 10036f0:	adc    BYTE PTR [eax],al
 10036f2:	add    DWORD PTR [ecx],eax
 10036f4:	add    DWORD PTR [ecx],eax
 10036f6:	add    DWORD PTR [ecx],eax
 10036f8:	add    DWORD PTR [ecx],eax
 10036fa:	add    DWORD PTR [ecx],eax
 10036fc:	add    DWORD PTR [ecx],eax
 10036fe:	add    DWORD PTR [ecx],eax
 1003700:	add    DWORD PTR [ecx],eax
 1003702:	add    DWORD PTR [ecx],eax
 1003704:	add    DWORD PTR [ecx],eax
 1003706:	add    DWORD PTR [ecx],eax
 1003708:	add    DWORD PTR [ecx],eax
 100370a:	add    DWORD PTR [ecx],eax
 100370c:	add    DWORD PTR [ecx],eax
 100370e:	add    DWORD PTR [ecx],eax
 1003710:	add    DWORD PTR [ecx],eax
 1003712:	add    DWORD PTR [ecx],eax
 1003714:	add    DWORD PTR [ecx],eax
 1003716:	add    DWORD PTR [ecx],eax
 1003718:	add    DWORD PTR [ecx],eax
 100371a:	add    DWORD PTR [ecx],eax
 100371c:	add    DWORD PTR [ecx],eax
 100371e:	add    DWORD PTR [ecx],eax
 1003720:	adc    BYTE PTR [eax],al
 1003722:	add    DWORD PTR [ecx],eax
 1003724:	add    DWORD PTR [ecx],eax
 1003726:	add    DWORD PTR [ecx],eax
 1003728:	add    DWORD PTR [ecx],eax
 100372a:	add    DWORD PTR [ecx],eax
 100372c:	add    DWORD PTR [ecx],eax
 100372e:	add    DWORD PTR [ecx],eax
 1003730:	add    al,BYTE PTR [ecx]
 1003732:	add    al,BYTE PTR [ecx]
 1003734:	add    al,BYTE PTR [ecx]
 1003736:	add    al,BYTE PTR [ecx]
 1003738:	add    al,BYTE PTR [ecx]
 100373a:	add    al,BYTE PTR [ecx]
 100373c:	add    al,BYTE PTR [ecx]
 100373e:	add    al,BYTE PTR [ecx]
 1003740:	add    al,BYTE PTR [ecx]
 1003742:	add    al,BYTE PTR [ecx]
 1003744:	add    al,BYTE PTR [ecx]
 1003746:	add    al,BYTE PTR [ecx]
 1003748:	add    al,BYTE PTR [ecx]
 100374a:	add    al,BYTE PTR [ecx]
 100374c:	add    al,BYTE PTR [ecx]
 100374e:	add    al,BYTE PTR [ecx]
 1003750:	add    al,BYTE PTR [ecx]
 1003752:	add    al,BYTE PTR [ecx]
 1003754:	add    al,BYTE PTR [ecx]
 1003756:	add    al,BYTE PTR [ecx]
 1003758:	add    al,BYTE PTR [ecx]
 100375a:	add    al,BYTE PTR [ecx]
 100375c:	add    al,BYTE PTR [ecx]
 100375e:	add    al,BYTE PTR [ecx]
 1003760:	adc    BYTE PTR [eax],al
 1003762:	add    al,BYTE PTR [ecx]
 1003764:	add    al,BYTE PTR [ecx]
 1003766:	add    al,BYTE PTR [ecx]
 1003768:	add    al,BYTE PTR [ecx]
 100376a:	add    al,BYTE PTR [ecx]
 100376c:	add    al,BYTE PTR [ecx]
 100376e:	add    al,BYTE PTR [ecx]
 1003770:	add    al,BYTE PTR [ecx]
 1003772:	add    DWORD PTR [ecx],eax
 1003774:	add    BYTE PTR [eax],al
 1003776:	add    BYTE PTR [eax],al
 1003778:	add    BYTE PTR [ecx-0x7a7b7c7e],0x86
 100377f:	xchg   DWORD PTR [eax-0x73747577],ecx
 1003785:	lea    ecx,[esi-0x6d6e6f71]
 100378b:	xchg   ebx,eax
 100378c:	xchg   esp,eax
 100378d:	xchg   ebp,eax
 100378e:	xchg   esi,eax
 100378f:	xchg   edi,eax
 1003790:	cwde   
 1003791:	cdq    
 1003792:	call   0xa09f:0x9e9d9c9b
 1003799:	mov    eax,ds:0xa5a4a3a2
 100379e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100379f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10037a0:	test   al,0xa9
 10037a2:	stos   BYTE PTR es:[edi],al
 10037a3:	stos   DWORD PTR es:[edi],eax
 10037a4:	lods   al,BYTE PTR ds:[esi]
 10037a5:	lods   eax,DWORD PTR ds:[esi]
 10037a6:	scas   al,BYTE PTR es:[edi]
 10037a7:	scas   eax,DWORD PTR es:[edi]
 10037a8:	mov    al,0xb1
 10037aa:	mov    dl,0xb3
 10037ac:	mov    ah,0xb5
 10037ae:	mov    dh,0xb7
 10037b0:	mov    eax,0xbcbbbab9
 10037b5:	mov    ebp,0xc1c0bfbe
 10037ba:	ret    0xc4c3
 10037bd:	(bad)
 10037c0:	enter  0xcac9,0xcb
 10037c4:	int3   
 10037c5:	int    0xce
 10037c7:	iret   
 10037c8:	rcl    cl,1
 10037ca:	rcl    bl,cl
 10037cc:	aam    0xd5
 10037ce:	(bad)  
 10037cf:	xlat   BYTE PTR ds:[ebx]
 10037d0:	fcomp  st(1)
 10037d2:	fcmovu st,st(3)
 10037d4:	(bad)  
 10037d6:	(bad)  
 10037d8:	loopne 0x10037bb
 10037da:	loop   0x10037bf
 10037dc:	in     al,0xe5
 10037de:	out    0xe7,al
 10037e0:	call   0xedec22ce
 10037e5:	in     eax,dx
 10037e6:	out    dx,al
 10037e7:	out    dx,eax
 10037e8:	lock icebp 
 10037ea:	repnz repz hlt 
 10037ed:	cmc    
 10037ee:	div    bh
 10037f0:	clc    
 10037f1:	stc    
 10037f2:	cli    
 10037f3:	sti    
 10037f4:	cld    
 10037f5:	std    
 10037f6:	(bad)  
 10037f7:	inc    DWORD PTR [eax]
 10037f9:	add    DWORD PTR [edx],eax
 10037fb:	add    eax,DWORD PTR [eax*1+0x9080706]
 1003802:	or     cl,BYTE PTR [ebx]
 1003804:	or     al,0xd
 1003806:	push   cs
 1003807:	movups xmm2,XMMWORD PTR [ecx]
 100380a:	adc    dl,BYTE PTR [ebx]
 100380c:	adc    al,0x15
 100380e:	push   ss
 100380f:	pop    ss
 1003810:	sbb    BYTE PTR [ecx],bl
 1003812:	sbb    bl,BYTE PTR [ebx]
 1003814:	sbb    al,0x1d
 1003816:	push   ds
 1003817:	pop    ds
 1003818:	and    BYTE PTR [ecx],ah
 100381a:	and    ah,BYTE PTR [ebx]
 100381c:	and    al,0x25
 100381e:	es daa 
 1003820:	sub    BYTE PTR [ecx],ch
 1003822:	sub    ch,BYTE PTR [ebx]
 1003824:	sub    al,0x2d
 1003826:	cs das 
 1003828:	xor    BYTE PTR [ecx],dh
 100382a:	xor    dh,BYTE PTR [ebx]
 100382c:	xor    al,0x35
 100382e:	ss aaa 
 1003830:	cmp    BYTE PTR [ecx],bh
 1003832:	cmp    bh,BYTE PTR [ebx]
 1003834:	cmp    al,0x3d
 1003836:	ds aas 
 1003838:	inc    eax
 1003839:	popa   
 100383a:	bound  esp,QWORD PTR [ebx+0x64]
 100383d:	gs addr16 pushw 0x6a69
 1003843:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
 1003848:	jo     0x10038bb
 100384a:	jb     0x10038bf
 100384c:	je     0x10038c3
 100384e:	jbe    0x10038c7
 1003850:	js     0x10038cb
 1003852:	jp     0x10038af
 1003854:	pop    esp
 1003855:	pop    ebp
 1003856:	pop    esi
 1003857:	pop    edi
 1003858:	pusha  
 1003859:	popa   
 100385a:	bound  esp,QWORD PTR [ebx+0x64]
 100385d:	gs addr16 pushw 0x6a69
 1003863:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
 1003868:	jo     0x10038db
 100386a:	jb     0x10038df
 100386c:	je     0x10038e3
 100386e:	jbe    0x10038e7
 1003870:	js     0x10038eb
 1003872:	jp     0x10038ef
 1003874:	jl     0x10038f3
 1003876:	jle    0x10038f7
 1003878:	add    BYTE PTR [ecx-0x7a7b7c7e],0x86
 100387f:	xchg   DWORD PTR [eax-0x73747577],ecx
 1003885:	lea    ecx,[esi-0x6d6e6f71]
 100388b:	xchg   ebx,eax
 100388c:	xchg   esp,eax
 100388d:	xchg   ebp,eax
 100388e:	xchg   esi,eax
 100388f:	xchg   edi,eax
 1003890:	cwde   
 1003891:	cdq    
 1003892:	call   0xa09f:0x9e9d9c9b
 1003899:	mov    eax,ds:0xa5a4a3a2
 100389e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100389f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10038a0:	test   al,0xa9
 10038a2:	stos   BYTE PTR es:[edi],al
 10038a3:	stos   DWORD PTR es:[edi],eax
 10038a4:	lods   al,BYTE PTR ds:[esi]
 10038a5:	lods   eax,DWORD PTR ds:[esi]
 10038a6:	scas   al,BYTE PTR es:[edi]
 10038a7:	scas   eax,DWORD PTR es:[edi]
 10038a8:	mov    al,0xb1
 10038aa:	mov    dl,0xb3
 10038ac:	mov    ah,0xb5
 10038ae:	mov    dh,0xb7
 10038b0:	mov    eax,0xbcbbbab9
 10038b5:	mov    ebp,0xc1c0bfbe
 10038ba:	ret    0xc4c3
 10038bd:	(bad)
 10038c0:	enter  0xcac9,0xcb
 10038c4:	int3   
 10038c5:	int    0xce
 10038c7:	iret   
 10038c8:	rcl    cl,1
 10038ca:	rcl    bl,cl
 10038cc:	aam    0xd5
 10038ce:	(bad)  
 10038cf:	xlat   BYTE PTR ds:[ebx]
 10038d0:	fcomp  st(1)
 10038d2:	fcmovu st,st(3)
 10038d4:	(bad)  
 10038d6:	(bad)  
 10038d8:	loopne 0x10038bb
 10038da:	loop   0x10038bf
 10038dc:	in     al,0xe5
 10038de:	out    0xe7,al
 10038e0:	call   0xedec23ce
 10038e5:	in     eax,dx
 10038e6:	out    dx,al
 10038e7:	out    dx,eax
 10038e8:	lock icebp 
 10038ea:	repnz repz hlt 
 10038ed:	cmc    
 10038ee:	div    bh
 10038f0:	clc    
 10038f1:	stc    
 10038f2:	cli    
 10038f3:	sti    
 10038f4:	cld    
 10038f5:	std    
 10038f6:	(bad)  
 10038f7:	inc    DWORD PTR [eax-0x7b7c7d7f]
 10038fd:	test   DWORD PTR [esi-0x75767779],eax
 1003903:	mov    ecx,DWORD PTR [ebp+ecx*4-0x6e6f7072]
 100390a:	xchg   edx,eax
 100390b:	xchg   ebx,eax
 100390c:	xchg   esp,eax
 100390d:	xchg   ebp,eax
 100390e:	xchg   esi,eax
 100390f:	xchg   edi,eax
 1003910:	cwde   
 1003911:	cdq    
 1003912:	call   0xa09f:0x9e9d9c9b
 1003919:	mov    eax,ds:0xa5a4a3a2
 100391e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100391f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1003920:	test   al,0xa9
 1003922:	stos   BYTE PTR es:[edi],al
 1003923:	stos   DWORD PTR es:[edi],eax
 1003924:	lods   al,BYTE PTR ds:[esi]
 1003925:	lods   eax,DWORD PTR ds:[esi]
 1003926:	scas   al,BYTE PTR es:[edi]
 1003927:	scas   eax,DWORD PTR es:[edi]
 1003928:	mov    al,0xb1
 100392a:	mov    dl,0xb3
 100392c:	mov    ah,0xb5
 100392e:	mov    dh,0xb7
 1003930:	mov    eax,0xbcbbbab9
 1003935:	mov    ebp,0xc1c0bfbe
 100393a:	ret    0xc4c3
 100393d:	(bad)
 1003940:	enter  0xcac9,0xcb
 1003944:	int3   
 1003945:	int    0xce
 1003947:	iret   
 1003948:	rcl    cl,1
 100394a:	rcl    bl,cl
 100394c:	aam    0xd5
 100394e:	(bad)  
 100394f:	xlat   BYTE PTR ds:[ebx]
 1003950:	fcomp  st(1)
 1003952:	fcmovu st,st(3)
 1003954:	(bad)  
 1003956:	(bad)  
 1003958:	loopne 0x100393b
 100395a:	loop   0x100393f
 100395c:	in     al,0xe5
 100395e:	out    0xe7,al
 1003960:	call   0xedec244e
 1003965:	in     eax,dx
 1003966:	out    dx,al
 1003967:	out    dx,eax
 1003968:	lock icebp 
 100396a:	repnz repz hlt 
 100396d:	cmc    
 100396e:	div    bh
 1003970:	clc    
 1003971:	stc    
 1003972:	cli    
 1003973:	sti    
 1003974:	cld    
 1003975:	std    
 1003976:	(bad)  
 1003977:	inc    DWORD PTR [eax]
 1003979:	add    DWORD PTR [edx],eax
 100397b:	add    eax,DWORD PTR [eax*1+0x9080706]
 1003982:	or     cl,BYTE PTR [ebx]
 1003984:	or     al,0xd
 1003986:	push   cs
 1003987:	movups xmm2,XMMWORD PTR [ecx]
 100398a:	adc    dl,BYTE PTR [ebx]
 100398c:	adc    al,0x15
 100398e:	push   ss
 100398f:	pop    ss
 1003990:	sbb    BYTE PTR [ecx],bl
 1003992:	sbb    bl,BYTE PTR [ebx]
 1003994:	sbb    al,0x1d
 1003996:	push   ds
 1003997:	pop    ds
 1003998:	and    BYTE PTR [ecx],ah
 100399a:	and    ah,BYTE PTR [ebx]
 100399c:	and    al,0x25
 100399e:	es daa 
 10039a0:	sub    BYTE PTR [ecx],ch
 10039a2:	sub    ch,BYTE PTR [ebx]
 10039a4:	sub    al,0x2d
 10039a6:	cs das 
 10039a8:	xor    BYTE PTR [ecx],dh
 10039aa:	xor    dh,BYTE PTR [ebx]
 10039ac:	xor    al,0x35
 10039ae:	ss aaa 
 10039b0:	cmp    BYTE PTR [ecx],bh
 10039b2:	cmp    bh,BYTE PTR [ebx]
 10039b4:	cmp    al,0x3d
 10039b6:	ds aas 
 10039b8:	inc    eax
 10039b9:	inc    ecx
 10039ba:	inc    edx
 10039bb:	inc    ebx
 10039bc:	inc    esp
 10039bd:	inc    ebp
 10039be:	inc    esi
 10039bf:	inc    edi
 10039c0:	dec    eax
 10039c1:	dec    ecx
 10039c2:	dec    edx
 10039c3:	dec    ebx
 10039c4:	dec    esp
 10039c5:	dec    ebp
 10039c6:	dec    esi
 10039c7:	dec    edi
 10039c8:	push   eax
 10039c9:	push   ecx
 10039ca:	push   edx
 10039cb:	push   ebx
 10039cc:	push   esp
 10039cd:	push   ebp
 10039ce:	push   esi
 10039cf:	push   edi
 10039d0:	pop    eax
 10039d1:	pop    ecx
 10039d2:	pop    edx
 10039d3:	pop    ebx
 10039d4:	pop    esp
 10039d5:	pop    ebp
 10039d6:	pop    esi
 10039d7:	pop    edi
 10039d8:	pusha  
 10039d9:	inc    ecx
 10039da:	inc    edx
 10039db:	inc    ebx
 10039dc:	inc    esp
 10039dd:	inc    ebp
 10039de:	inc    esi
 10039df:	inc    edi
 10039e0:	dec    eax
 10039e1:	dec    ecx
 10039e2:	dec    edx
 10039e3:	dec    ebx
 10039e4:	dec    esp
 10039e5:	dec    ebp
 10039e6:	dec    esi
 10039e7:	dec    edi
 10039e8:	push   eax
 10039e9:	push   ecx
 10039ea:	push   edx
 10039eb:	push   ebx
 10039ec:	push   esp
 10039ed:	push   ebp
 10039ee:	push   esi
 10039ef:	push   edi
 10039f0:	pop    eax
 10039f1:	pop    ecx
 10039f2:	pop    edx
 10039f3:	jnp    0x1003a71
 10039f5:	jge    0x1003a75
 10039f7:	jg     0x1003979
 10039f9:	add    DWORD PTR [edx-0x797a7b7d],0x8a898887
 1003a03:	mov    ecx,DWORD PTR [ebp+ecx*4-0x6e6f7072]
 1003a0a:	xchg   edx,eax
 1003a0b:	xchg   ebx,eax
 1003a0c:	xchg   esp,eax
 1003a0d:	xchg   ebp,eax
 1003a0e:	xchg   esi,eax
 1003a0f:	xchg   edi,eax
 1003a10:	cwde   
 1003a11:	cdq    
 1003a12:	call   0xa09f:0x9e9d9c9b
 1003a19:	mov    eax,ds:0xa5a4a3a2
 1003a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1003a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1003a20:	test   al,0xa9
 1003a22:	stos   BYTE PTR es:[edi],al
 1003a23:	stos   DWORD PTR es:[edi],eax
 1003a24:	lods   al,BYTE PTR ds:[esi]
 1003a25:	lods   eax,DWORD PTR ds:[esi]
 1003a26:	scas   al,BYTE PTR es:[edi]
 1003a27:	scas   eax,DWORD PTR es:[edi]
 1003a28:	mov    al,0xb1
 1003a2a:	mov    dl,0xb3
 1003a2c:	mov    ah,0xb5
 1003a2e:	mov    dh,0xb7
 1003a30:	mov    eax,0xbcbbbab9
 1003a35:	mov    ebp,0xc1c0bfbe
 1003a3a:	ret    0xc4c3
 1003a3d:	(bad)
 1003a40:	enter  0xcac9,0xcb
 1003a44:	int3   
 1003a45:	int    0xce
 1003a47:	iret   
 1003a48:	rcl    cl,1
 1003a4a:	rcl    bl,cl
 1003a4c:	aam    0xd5
 1003a4e:	(bad)  
 1003a4f:	xlat   BYTE PTR ds:[ebx]
 1003a50:	fcomp  st(1)
 1003a52:	fcmovu st,st(3)
 1003a54:	(bad)  
 1003a56:	(bad)  
 1003a58:	loopne 0x1003a3b
 1003a5a:	loop   0x1003a3f
 1003a5c:	in     al,0xe5
 1003a5e:	out    0xe7,al
 1003a60:	call   0xedec254e
 1003a65:	in     eax,dx
 1003a66:	out    dx,al
 1003a67:	out    dx,eax
 1003a68:	lock icebp 
 1003a6a:	repnz repz hlt 
 1003a6d:	cmc    
 1003a6e:	div    bh
 1003a70:	clc    
 1003a71:	stc    
 1003a72:	cli    
 1003a73:	sti    
 1003a74:	cld    
 1003a75:	std    
 1003a76:	(bad)  
 1003a77:	jmp    DWORD PTR [eax]
 1003a79:	inc    ebx
 1003a7a:	outs   dx,DWORD PTR ds:[esi]
 1003a7b:	ins    DWORD PTR es:[edi],dx
 1003a7c:	jo     0x1003aea
 1003a7e:	gs je  0x1003ae6
 1003a81:	and    BYTE PTR [edi+0x62],cl
 1003a84:	push   0x65
 1003a86:	arpl   WORD PTR [eax+eiz*1+0x4c],si
 1003a8a:	outs   dx,DWORD PTR ds:[esi]
 1003a8b:	arpl   WORD PTR [ecx+0x74],sp
 1003a8e:	outs   dx,DWORD PTR ds:[esi]
 1003a8f:	jb     0x1003ab8
 1003a91:	add    BYTE PTR [eax],al
 1003a93:	add    BYTE PTR [eax],ah
 1003a95:	inc    ebx
 1003a96:	ins    BYTE PTR es:[edi],dx
 1003a97:	popa   
 1003a98:	jae    0x1003b0d
 1003a9a:	and    BYTE PTR [eax+0x69],cl
 1003a9d:	gs jb  0x1003b01
 1003aa0:	jb     0x1003b05
 1003aa2:	push   0x65442079
 1003aa7:	jae    0x1003b0c
 1003aa9:	jb     0x1003b14
 1003aab:	jo     0x1003b21
 1003aad:	outs   dx,DWORD PTR ds:[esi]
 1003aae:	jb     0x1003ad7
 1003ab0:	add    BYTE PTR [eax],al
 1003ab2:	add    BYTE PTR [eax],al
 1003ab4:	and    BYTE PTR [edx+0x61],al
 1003ab7:	jae    0x1003b1e
 1003ab9:	and    BYTE PTR [ebx+0x6c],al
 1003abc:	popa   
 1003abd:	jae    0x1003b32
 1003abf:	and    BYTE PTR [ecx+0x72],al
 1003ac2:	jb     0x1003b25
 1003ac4:	jns    0x1003aed
 1003ac6:	add    BYTE PTR [eax],al
 1003ac8:	and    BYTE PTR [edx+0x61],al
 1003acb:	jae    0x1003b32
 1003acd:	and    BYTE PTR [ebx+0x6c],al
 1003ad0:	popa   
 1003ad1:	jae    0x1003b46
 1003ad3:	and    BYTE PTR [ebp+eiz*2+0x73],al
 1003ad7:	arpl   WORD PTR [edx+0x69],si
 1003ada:	jo     0x1003b50
 1003adc:	outs   dx,DWORD PTR ds:[esi]
 1003add:	jb     0x1003aff
 1003adf:	popa   
 1003ae0:	je     0x1003b02
 1003ae2:	sub    BYTE PTR [eax],al
 1003ae4:	and    BYTE PTR [ecx+edi*2+0x70],dl
 1003ae8:	and    BYTE PTR gs:[ebp+eiz*2+0x73],al
 1003aed:	arpl   WORD PTR [edx+0x69],si
 1003af0:	jo     0x1003b66
 1003af2:	outs   dx,DWORD PTR ds:[esi]
 1003af3:	jb     0x1003b1c
 1003af5:	add    BYTE PTR [eax],al
 1003af7:	add    BYTE PTR [eax+0x6c],ah
 1003afa:	outs   dx,DWORD PTR ds:[esi]
 1003afb:	arpl   WORD PTR [ecx+0x6c],sp
 1003afe:	and    BYTE PTR [ebx+0x74],dh
 1003b01:	popa   
 1003b02:	je     0x1003b6d
 1003b04:	arpl   WORD PTR [eax],sp
 1003b06:	je     0x1003b70
 1003b08:	jb     0x1003b6f
 1003b0a:	popa   
 1003b0b:	and    BYTE PTR fs:[edi+0x75],ah
 1003b0f:	popa   
 1003b10:	jb     0x1003b76
 1003b12:	daa    
 1003b13:	add    BYTE PTR [eax+0x6d],ah
 1003b16:	popa   
 1003b17:	outs   dx,BYTE PTR ds:[esi]
 1003b18:	popa   
 1003b19:	gs and BYTE PTR fs:[bp+0x65],dh
 1003b1f:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b23:	and    BYTE PTR [ebx+0x6f],ah
 1003b26:	jo     0x1003ba1
 1003b28:	and    BYTE PTR [ebx+0x6f],ah
 1003b2b:	outs   dx,BYTE PTR ds:[esi]
 1003b2c:	jae    0x1003ba2
 1003b2e:	jb     0x1003ba5
 1003b30:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b34:	and    BYTE PTR [ecx+0x74],ch
 1003b37:	gs jb  0x1003b9b
 1003b3a:	je     0x1003bab
 1003b3c:	jb     0x1003b65
 1003b3e:	add    BYTE PTR [eax],al
 1003b40:	pusha  
 1003b41:	jbe    0x1003ba8
 1003b43:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b47:	and    BYTE PTR [esi+0x62],dh
 1003b4a:	popa   
 1003b4b:	jae    0x1003bb2
 1003b4d:	and    BYTE PTR [ebx+0x6f],ah
 1003b50:	jo     0x1003bcb
 1003b52:	and    BYTE PTR [ebx+0x6f],ah
 1003b55:	outs   dx,BYTE PTR ds:[esi]
 1003b56:	jae    0x1003bcc
 1003b58:	jb     0x1003bcf
 1003b5a:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b5e:	and    BYTE PTR [ecx+0x74],ch
 1003b61:	gs jb  0x1003bc5
 1003b64:	je     0x1003bd5
 1003b66:	jb     0x1003b8f
 1003b68:	add    BYTE PTR [eax],al
 1003b6a:	add    BYTE PTR [eax],al
 1003b6c:	pusha  
 1003b6d:	jbe    0x1003bd4
 1003b6f:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b73:	and    BYTE PTR [ebx+0x6f],ah
 1003b76:	jo     0x1003bf1
 1003b78:	and    BYTE PTR [ebx+0x6f],ah
 1003b7b:	outs   dx,BYTE PTR ds:[esi]
 1003b7c:	jae    0x1003bf2
 1003b7e:	jb     0x1003bf5
 1003b80:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003b84:	and    BYTE PTR [ecx+0x74],ch
 1003b87:	gs jb  0x1003beb
 1003b8a:	je     0x1003bfb
 1003b8c:	jb     0x1003bb5
 1003b8e:	add    BYTE PTR [eax],al
 1003b90:	pusha  
 1003b91:	fs jns 0x1003c02
 1003b94:	popa   
 1003b95:	ins    DWORD PTR es:[edi],dx
 1003b96:	imul   esp,DWORD PTR [ebx+0x20],0x78657461
 1003b9d:	imul   esi,DWORD PTR [eax+eiz*1+0x64],0x72747365
 1003ba5:	jne    0x1003c0a
 1003ba7:	je     0x1003c18
 1003ba9:	jb     0x1003bcb
 1003bab:	outs   dx,WORD PTR ds:[esi]
 1003bad:	jb     0x1003bcf
 1003baf:	daa    
 1003bb0:	add    BYTE PTR [eax],al
 1003bb2:	add    BYTE PTR [eax],al
 1003bb4:	pusha  
 1003bb5:	fs jns 0x1003c26
 1003bb8:	popa   
 1003bb9:	ins    DWORD PTR es:[edi],dx
 1003bba:	imul   esp,DWORD PTR [ebx+0x20],0x74696e69
 1003bc1:	imul   esp,DWORD PTR [ecx+0x6c],0x72657a69
 1003bc8:	and    BYTE PTR [esi+0x6f],ah
 1003bcb:	jb     0x1003bed
 1003bcd:	daa    
 1003bce:	add    BYTE PTR [eax],al
 1003bd0:	pusha  
 1003bd1:	gs push 0x63657620
 1003bd7:	je     0x1003c48
 1003bd9:	jb     0x1003bfb
 1003bdb:	jbe    0x1003c3f
 1003bdd:	popa   
 1003bde:	jae    0x1003c45
 1003be0:	and    BYTE PTR [ebx+0x6f],ah
 1003be3:	jo     0x1003c5e
 1003be5:	and    BYTE PTR [ebx+0x6f],ah
 1003be8:	outs   dx,BYTE PTR ds:[esi]
 1003be9:	jae    0x1003c5f
 1003beb:	jb     0x1003c62
 1003bed:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003bf1:	and    BYTE PTR [ecx+0x74],ch
 1003bf4:	gs jb  0x1003c58
 1003bf7:	je     0x1003c68
 1003bf9:	jb     0x1003c22
 1003bfb:	add    BYTE PTR [eax+0x65],ah
 1003bfe:	push   0x63657620
 1003c03:	je     0x1003c74
 1003c05:	jb     0x1003c27
 1003c07:	arpl   WORD PTR [edi+0x70],bp
 1003c0a:	jns    0x1003c2c
 1003c0c:	arpl   WORD PTR [edi+0x6e],bp
 1003c0f:	jae    0x1003c85
 1003c11:	jb     0x1003c88
 1003c13:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003c17:	and    BYTE PTR [ecx+0x74],ch
 1003c1a:	gs jb  0x1003c7e
 1003c1d:	je     0x1003c8e
 1003c1f:	jb     0x1003c48
 1003c21:	add    BYTE PTR [eax],al
 1003c23:	add    BYTE PTR [eax+0x6d],ah
 1003c26:	popa   
 1003c27:	outs   dx,BYTE PTR ds:[esi]
 1003c28:	popa   
 1003c29:	gs and BYTE PTR fs:[bp+0x65],dh
 1003c2f:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003c33:	and    BYTE PTR [ebp+eiz*2+0x73],ah
 1003c37:	je     0x1003cab
 1003c39:	jne    0x1003c9e
 1003c3b:	je     0x1003cac
 1003c3d:	jb     0x1003c5f
 1003c3f:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
 1003c47:	daa    
 1003c48:	add    BYTE PTR [eax],al
 1003c4a:	add    BYTE PTR [eax],al
 1003c4c:	pusha  
 1003c4d:	ins    DWORD PTR es:[edi],dx
 1003c4e:	popa   
 1003c4f:	outs   dx,BYTE PTR ds:[esi]
 1003c50:	popa   
 1003c51:	gs and BYTE PTR fs:[bp+0x65],dh
 1003c57:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003c5b:	and    BYTE PTR [ebx+0x6f],ah
 1003c5e:	outs   dx,BYTE PTR ds:[esi]
 1003c5f:	jae    0x1003cd5
 1003c61:	jb     0x1003cd8
 1003c63:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003c67:	and    BYTE PTR [ecx+0x74],ch
 1003c6a:	gs jb  0x1003cce
 1003c6d:	je     0x1003cde
 1003c6f:	jb     0x1003c98
 1003c71:	add    BYTE PTR [eax],al
 1003c73:	add    BYTE PTR [eax+0x70],ah
 1003c76:	ins    BYTE PTR es:[edi],dx
 1003c77:	popa   
 1003c78:	arpl   WORD PTR [ebp+0x6d],sp
 1003c7b:	outs   dx,BYTE PTR gs:[esi]
 1003c7d:	je     0x1003c9f
 1003c7f:	fs gs ins BYTE PTR es:[edi],dx
 1003c82:	gs je  0x1003cea
 1003c85:	pop    ebx
 1003c86:	pop    ebp
 1003c87:	and    BYTE PTR [ebx+0x6c],ah
 1003c8a:	outs   dx,DWORD PTR ds:[esi]
 1003c8b:	jae    0x1003d02
 1003c8d:	jb     0x1003cf4
 1003c8f:	daa    
 1003c90:	add    BYTE PTR [eax],al
 1003c92:	add    BYTE PTR [eax],al
 1003c94:	pusha  
 1003c95:	jo     0x1003d03
 1003c97:	popa   
 1003c98:	arpl   WORD PTR [ebp+0x6d],sp
 1003c9b:	outs   dx,BYTE PTR gs:[esi]
 1003c9d:	je     0x1003cbf
 1003c9f:	fs gs ins BYTE PTR es:[edi],dx
 1003ca2:	gs je  0x1003d0a
 1003ca5:	and    BYTE PTR [ebx+0x6c],ah
 1003ca8:	outs   dx,DWORD PTR ds:[esi]
 1003ca9:	jae    0x1003d20
 1003cab:	jb     0x1003d12
 1003cad:	daa    
 1003cae:	add    BYTE PTR [eax],al
 1003cb0:	pusha  
 1003cb1:	outs   dx,DWORD PTR ds:[esi]
 1003cb2:	ins    DWORD PTR es:[edi],dx
 1003cb3:	outs   dx,BYTE PTR ds:[esi]
 1003cb4:	imul   esp,DWORD PTR [eax],0x6c6c6163
 1003cba:	jae    0x1003d25
 1003cbc:	addr16 daa 
 1003cbe:	add    BYTE PTR [eax],al
 1003cc0:	and    BYTE PTR [ebp+eiz*2+0x6c],ah
 1003cc4:	gs je  0x1003d2c
 1003cc7:	pop    ebx
 1003cc8:	pop    ebp
 1003cc9:	add    BYTE PTR [eax],al
 1003ccb:	add    BYTE PTR [eax],ah
 1003ccd:	outs   dx,BYTE PTR ds:[esi]
 1003cce:	gs ja  0x1003d2c
 1003cd1:	pop    ebp
 1003cd2:	add    BYTE PTR [eax],al
 1003cd4:	pusha  
 1003cd5:	ins    BYTE PTR es:[edi],dx
 1003cd6:	outs   dx,DWORD PTR ds:[esi]
 1003cd7:	arpl   WORD PTR [ecx+0x6c],sp
 1003cda:	and    BYTE PTR [esi+0x66],dh
 1003cdd:	je     0x1003d40
 1003cdf:	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
 1003ce3:	arpl   WORD PTR [edi+0x6e],bp
 1003ce6:	jae    0x1003d5c
 1003ce8:	jb     0x1003d5f
 1003cea:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003cee:	and    BYTE PTR [ebx+0x6c],ah
 1003cf1:	outs   dx,DWORD PTR ds:[esi]
 1003cf2:	jae    0x1003d69
 1003cf4:	jb     0x1003d5b
 1003cf6:	daa    
 1003cf7:	add    BYTE PTR [eax+0x6c],ah
 1003cfa:	outs   dx,DWORD PTR ds:[esi]
 1003cfb:	arpl   WORD PTR [ecx+0x6c],sp
 1003cfe:	and    BYTE PTR [esi+0x66],dh
 1003d01:	je     0x1003d64
 1003d03:	bound  ebp,QWORD PTR [ebp+eiz*2+0x27]
 1003d07:	add    BYTE PTR [eax+0x52],ah
 1003d0a:	push   esp
 1003d0b:	push   esp
 1003d0c:	dec    ecx
 1003d0d:	add    BYTE PTR [eax],al
 1003d0f:	add    BYTE PTR [eax+0x45],ah
 1003d12:	dec    eax
 1003d13:	add    BYTE PTR [eax+0x75],ah
 1003d16:	fs je  0x1003d39
 1003d19:	jb     0x1003d80
 1003d1b:	je     0x1003d92
 1003d1d:	jb     0x1003d8d
 1003d1f:	imul   ebp,DWORD PTR [esi+0x67],0x63600027
 1003d26:	outs   dx,DWORD PTR ds:[esi]
 1003d27:	jo     0x1003da2
 1003d29:	and    BYTE PTR [ebx+0x6f],ah
 1003d2c:	outs   dx,BYTE PTR ds:[esi]
 1003d2d:	jae    0x1003da3
 1003d2f:	jb     0x1003da6
 1003d31:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003d35:	and    BYTE PTR [ebx+0x6c],ah
 1003d38:	outs   dx,DWORD PTR ds:[esi]
 1003d39:	jae    0x1003db0
 1003d3b:	jb     0x1003da2
 1003d3d:	daa    
 1003d3e:	add    BYTE PTR [eax],al
 1003d40:	pusha  
 1003d41:	gs push 0x63657620
 1003d47:	je     0x1003db8
 1003d49:	jb     0x1003d6b
 1003d4b:	jbe    0x1003daf
 1003d4d:	popa   
 1003d4e:	jae    0x1003db5
 1003d50:	and    BYTE PTR [ebx+0x6f],ah
 1003d53:	outs   dx,BYTE PTR ds:[esi]
 1003d54:	jae    0x1003dca
 1003d56:	jb     0x1003dcd
 1003d58:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003d5c:	and    BYTE PTR [ecx+0x74],ch
 1003d5f:	gs jb  0x1003dc3
 1003d62:	je     0x1003dd3
 1003d64:	jb     0x1003d8d
 1003d66:	add    BYTE PTR [eax],al
 1003d68:	pusha  
 1003d69:	gs push 0x63657620
 1003d6f:	je     0x1003de0
 1003d71:	jb     0x1003d93
 1003d73:	fs gs jae 0x1003deb
 1003d77:	jb     0x1003dee
 1003d79:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003d7d:	and    BYTE PTR [ecx+0x74],ch
 1003d80:	gs jb  0x1003de4
 1003d83:	je     0x1003df4
 1003d85:	jb     0x1003dae
 1003d87:	add    BYTE PTR [eax+0x65],ah
 1003d8a:	push   0x63657620
 1003d8f:	je     0x1003e00
 1003d91:	jb     0x1003db3
 1003d93:	arpl   WORD PTR [edi+0x6e],bp
 1003d96:	jae    0x1003e0c
 1003d98:	jb     0x1003e0f
 1003d9a:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003d9e:	and    BYTE PTR [ecx+0x74],ch
 1003da1:	gs jb  0x1003e05
 1003da4:	je     0x1003e15
 1003da6:	jb     0x1003dcf
 1003da8:	add    BYTE PTR [eax],al
 1003daa:	add    BYTE PTR [eax],al
 1003dac:	pusha  
 1003dad:	jbe    0x1003e18
 1003daf:	jb     0x1003e25
 1003db1:	jne    0x1003e14
 1003db3:	ins    BYTE PTR es:[edi],dx
 1003db4:	and    BYTE PTR [ecx+ebp*2+0x73],ah
 1003db8:	jo     0x1003e26
 1003dba:	popa   
 1003dbb:	arpl   WORD PTR [ebp+0x6d],sp
 1003dbe:	outs   dx,BYTE PTR gs:[esi]
 1003dc0:	je     0x1003de2
 1003dc2:	ins    DWORD PTR es:[edi],dx
 1003dc3:	popa   
 1003dc4:	jo     0x1003ded
 1003dc6:	add    BYTE PTR [eax],al
 1003dc8:	pusha  
 1003dc9:	jbe    0x1003e30
 1003dcb:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003dcf:	and    BYTE PTR [esi+0x62],dh
 1003dd2:	popa   
 1003dd3:	jae    0x1003e3a
 1003dd5:	and    BYTE PTR [ebx+0x6f],ah
 1003dd8:	outs   dx,BYTE PTR ds:[esi]
 1003dd9:	jae    0x1003e4f
 1003ddb:	jb     0x1003e52
 1003ddd:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003de1:	and    BYTE PTR [ecx+0x74],ch
 1003de4:	gs jb  0x1003e48
 1003de7:	je     0x1003e58
 1003de9:	jb     0x1003e12
 1003deb:	add    BYTE PTR [eax+0x76],ah
 1003dee:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
 1003df3:	and    BYTE PTR [ebp+eiz*2+0x73],ah
 1003df7:	je     0x1003e6b
 1003df9:	jne    0x1003e5e
 1003dfb:	je     0x1003e6c
 1003dfd:	jb     0x1003e1f
 1003dff:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
 1003e07:	daa    
 1003e08:	add    BYTE PTR [eax],al
 1003e0a:	add    BYTE PTR [eax],al
 1003e0c:	pusha  
 1003e0d:	jbe    0x1003e74
 1003e0f:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003e13:	and    BYTE PTR [ebx+0x6f],ah
 1003e16:	outs   dx,BYTE PTR ds:[esi]
 1003e17:	jae    0x1003e8d
 1003e19:	jb     0x1003e90
 1003e1b:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003e1f:	and    BYTE PTR [ecx+0x74],ch
 1003e22:	gs jb  0x1003e86
 1003e25:	je     0x1003e96
 1003e27:	jb     0x1003e50
 1003e29:	add    BYTE PTR [eax],al
 1003e2b:	add    BYTE PTR [eax+0x73],ah
 1003e2e:	arpl   WORD PTR [ecx+0x6c],sp
 1003e31:	popa   
 1003e32:	jb     0x1003e54
 1003e34:	fs gs ins BYTE PTR es:[edi],dx
 1003e37:	gs je  0x1003ea3
 1003e3a:	outs   dx,BYTE PTR ds:[esi]
 1003e3b:	and    BYTE PTR [si+0x65],ah
 1003e3f:	jae    0x1003eb5
 1003e41:	jb     0x1003eb8
 1003e43:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003e47:	daa    
 1003e48:	add    BYTE PTR [eax],al
 1003e4a:	add    BYTE PTR [eax],al
 1003e4c:	pusha  
 1003e4d:	fs gs popaw 
 1003e51:	jne    0x1003ebf
 1003e53:	je     0x1003e75
 1003e55:	arpl   WORD PTR [edi+0x6e],bp
 1003e58:	jae    0x1003ece
 1003e5a:	jb     0x1003ed1
 1003e5c:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003e60:	and    BYTE PTR [ebx+0x6c],ah
 1003e63:	outs   dx,DWORD PTR ds:[esi]
 1003e64:	jae    0x1003edb
 1003e66:	jb     0x1003ecd
 1003e68:	daa    
 1003e69:	add    BYTE PTR [eax],al
 1003e6b:	add    BYTE PTR [eax+0x76],ah
 1003e6e:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
 1003e73:	and    BYTE PTR [ebp+eiz*2+0x6c],ah
 1003e77:	gs je  0x1003ee3
 1003e7a:	outs   dx,BYTE PTR ds:[esi]
 1003e7b:	and    BYTE PTR [si+0x65],ah
 1003e7f:	jae    0x1003ef5
 1003e81:	jb     0x1003ef8
 1003e83:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1003e87:	daa    
 1003e88:	add    BYTE PTR [eax],al
 1003e8a:	add    BYTE PTR [eax],al
 1003e8c:	pusha  
 1003e8d:	jbe    0x1003ef1
 1003e8f:	popa   
 1003e90:	jae    0x1003ef7
 1003e92:	and    BYTE PTR [ebp+eiz*2+0x73],ah
 1003e96:	je     0x1003f0a
 1003e98:	jne    0x1003efd
 1003e9a:	je     0x1003f0b
 1003e9c:	jb     0x1003ec5
 1003e9e:	add    BYTE PTR [eax],al
 1003ea0:	pusha  
 1003ea1:	jae    0x1003f17
 1003ea3:	jb     0x1003f0e
 1003ea5:	outs   dx,BYTE PTR ds:[esi]
 1003ea6:	addr16 daa 
 1003ea8:	add    BYTE PTR [eax],al
 1003eaa:	add    BYTE PTR [eax],al
 1003eac:	pusha  
 1003ead:	ins    BYTE PTR es:[edi],dx
 1003eae:	outs   dx,DWORD PTR ds:[esi]
 1003eaf:	arpl   WORD PTR [ecx+0x6c],sp
 1003eb2:	and    BYTE PTR [ebx+0x74],dh
 1003eb5:	popa   
 1003eb6:	je     0x1003f21
 1003eb8:	arpl   WORD PTR [eax],sp
 1003eba:	addr16 jne 0x1003f1e
 1003ebd:	jb     0x1003f23
 1003ebf:	daa    
 1003ec0:	add    BYTE PTR [eax],al
 1003ec2:	add    BYTE PTR [eax],al
 1003ec4:	pusha  
 1003ec5:	je     0x1003f40
 1003ec7:	jo     0x1003f2e
 1003ec9:	outs   dx,DWORD PTR ds:[esi]
 1003eca:	data16 daa 
 1003ecc:	add    BYTE PTR [eax],al
 1003ece:	add    BYTE PTR [eax],al
 1003ed0:	pusha  
 1003ed1:	jbe    0x1003f36
 1003ed3:	popa   
 1003ed4:	ins    BYTE PTR es:[edi],dx
 1003ed5:	ins    BYTE PTR es:[edi],dx
 1003ed6:	daa    
 1003ed7:	add    BYTE PTR [eax+0x76],ah
 1003eda:	bound  esi,QWORD PTR [ecx+eiz*2+0x62]
 1003ede:	ins    BYTE PTR es:[edi],dx
 1003edf:	gs daa 
 1003ee1:	add    BYTE PTR [eax],al
 1003ee3:	add    BYTE PTR [eax+0x76],ah
 1003ee6:	data16 je 0x1003f4a
 1003ee9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x27]
 1003eed:	add    BYTE PTR [eax],al
 1003eef:	add    BYTE PTR [esi+0x3d],bl
 1003ef2:	add    BYTE PTR [eax],al
 1003ef4:	jl     0x1003f33
 1003ef6:	add    BYTE PTR [eax],al
 1003ef8:	es cmp eax,0x3c3c0000
 1003efe:	cmp    eax,0x3d3e3e00
 1003f03:	add    BYTE PTR ds:0x2f00003d,ah
 1003f09:	cmp    eax,0x3d2d0000
 1003f0e:	add    BYTE PTR [eax],al
 1003f10:	sub    edi,DWORD PTR ds:0x3d2a0000
 1003f16:	add    BYTE PTR [eax],al
 1003f18:	jl     0x1003f96
 1003f1a:	add    BYTE PTR [eax],al
 1003f1c:	es add BYTE PTR es:[eax],al
 1003f20:	jl     0x1003f22
 1003f22:	add    BYTE PTR [eax],al
 1003f24:	pop    esi
 1003f25:	add    BYTE PTR [eax],al
 1003f27:	add    BYTE PTR [esi+0x0],bh
 1003f2a:	add    BYTE PTR [eax],al
 1003f2c:	sub    BYTE PTR [ecx],ch
 1003f2e:	add    BYTE PTR [eax],al
 1003f30:	sub    al,0x0
 1003f32:	add    BYTE PTR [eax],al
 1003f34:	ds cmp eax,0x3e0000
 1003f3a:	add    BYTE PTR [eax],al
 1003f3c:	cmp    al,0x3d
 1003f3e:	add    BYTE PTR [eax],al
 1003f40:	cmp    al,0x0
 1003f42:	add    BYTE PTR [eax],al
 1003f44:	and    eax,0x2f000000
 1003f49:	add    BYTE PTR [eax],al
 1003f4b:	add    BYTE PTR ds:0x26002a3e,ch
 1003f51:	add    BYTE PTR [eax],al
 1003f53:	add    BYTE PTR [ebx],ch
 1003f55:	add    BYTE PTR [eax],al
 1003f57:	add    BYTE PTR ds:0x2d000000,ch
 1003f5d:	sub    eax,0x2b2b0000
 1003f62:	add    BYTE PTR [eax],al
 1003f64:	sub    al,BYTE PTR [eax]
 1003f66:	add    BYTE PTR [eax],al
 1003f68:	sub    eax,0x6f00003e
 1003f6d:	jo     0x1003fd4
 1003f6f:	jb     0x1003fd2
 1003f71:	je     0x1003fe2
 1003f73:	jb     0x1003f75
 1003f75:	add    BYTE PTR [eax],al
 1003f77:	add    BYTE PTR [ebx+0x5d],bl
 1003f7a:	add    BYTE PTR [eax],al
 1003f7c:	and    DWORD PTR ds:0x3d3d0000,edi
 1003f82:	add    BYTE PTR [eax],al
 1003f84:	and    DWORD PTR [eax],eax
 1003f86:	add    BYTE PTR [eax],al
 1003f88:	cmp    al,0x3c
 1003f8a:	add    BYTE PTR [eax],al
 1003f8c:	ds add BYTE PTR ds:[eax],al
 1003f90:	and    BYTE PTR [ebp+eiz*2+0x6c],ah
 1003f94:	gs je  0x1003ffc
 1003f97:	add    BYTE PTR [eax],ah
 1003f99:	outs   dx,BYTE PTR ds:[esi]
 1003f9a:	gs ja  0x1003f9d
 1003f9d:	add    BYTE PTR [eax],al
 1003f9f:	add    BYTE PTR [edi+0x5f],bl
 1003fa2:	jne    0x1004012
 1003fa4:	popa   
 1003fa5:	ins    BYTE PTR es:[edi],dx
 1003fa6:	imul   esp,DWORD PTR [edi+0x6e],0x5f006465
 1003fad:	pop    edi
 1003fae:	jb     0x1004015
 1003fb0:	jae    0x1004026
 1003fb2:	jb     0x100401d
 1003fb4:	arpl   WORD PTR [eax+eax*1+0x0],si
 1003fb8:	pop    edi
 1003fb9:	pop    edi
 1003fba:	jo     0x1004030
 1003fbc:	jb     0x1003ff4
 1003fbe:	xor    al,0x0
 1003fc0:	pop    edi
 1003fc1:	pop    edi
 1003fc2:	gs popa 
 1003fc4:	bound  ebp,QWORD PTR [ecx+0x0]
 1003fc7:	add    BYTE PTR [edi+0x5f],bl
 1003fca:	arpl   WORD PTR [edx+esi*2+0x63],bp
 1003fce:	popa   
 1003fcf:	ins    BYTE PTR es:[edi],dx
 1003fd0:	ins    BYTE PTR es:[edi],dx
 1003fd1:	add    BYTE PTR [eax],al
 1003fd3:	add    BYTE PTR [edi+0x5f],bl
 1003fd6:	popaw  
 1003fd8:	jae    0x100404e
 1003fda:	arpl   WORD PTR [ecx+0x6c],sp
 1003fdd:	ins    BYTE PTR es:[edi],dx
 1003fde:	add    BYTE PTR [eax],al
 1003fe0:	pop    edi
 1003fe1:	pop    edi
 1003fe2:	je     0x100404c
 1003fe4:	imul   esi,DWORD PTR [ebx+0x63],0x6c6c61
 1003feb:	add    BYTE PTR [edi+0x5f],bl
 1003fee:	jae    0x1004064
 1003ff0:	arpl   WORD PTR fs:[ecx+0x6c],sp
 1003ff4:	ins    BYTE PTR es:[edi],dx
 1003ff5:	add    BYTE PTR [eax],al
 1003ff7:	add    BYTE PTR [edi+0x5f],bl
 1003ffa:	jo     0x100405d
 1003ffc:	jae    0x1004061
 1003ffe:	popa   
 1003fff:	ins    BYTE PTR es:[edi],dx
 1004000:	add    BYTE PTR [eax],al
 1004002:	add    BYTE PTR [eax],al
 1004004:	pop    edi
 1004005:	pop    edi
 1004006:	arpl   WORD PTR [ebp+eiz*2+0x63],sp
 100400a:	ins    BYTE PTR es:[edi],dx
 100400b:	add    BYTE PTR [edi+0x5f],bl
 100400e:	bound  esp,QWORD PTR [ecx+0x73]
 1004011:	gs sub BYTE PTR fs:[eax],al
 1004015:	add    BYTE PTR [eax],al
 1004017:	add    BYTE PTR [eax+eax*2],cl
 100401a:	add    BYTE PTR [ecx],al
 100401c:	add    al,0x40
 100401e:	add    BYTE PTR [ecx],al
 1004020:	clc    
 1004021:	aas    
 1004022:	add    BYTE PTR [ecx],al
 1004024:	in     al,dx
 1004025:	aas    
 1004026:	add    BYTE PTR [ecx],al
 1004028:	loopne 0x1004069
 100402a:	add    BYTE PTR [ecx],al
 100402c:	aam    0x3f
 100402e:	add    BYTE PTR [ecx],al
 1004030:	enter  0x3f,0x1
 1004034:	sar    BYTE PTR [edi],0x0
 1004037:	add    DWORD PTR [eax-0x53feffc1],edi
 100403d:	aas    
 100403e:	add    BYTE PTR [ecx],al
 1004040:	mov    al,ds:0x6401003f
 1004045:	push   ds
 1004046:	add    BYTE PTR [ecx],al
 1004048:	cwde   
 1004049:	aas    
 100404a:	add    BYTE PTR [ecx],al
 100404c:	nop
 100404d:	aas    
 100404e:	add    BYTE PTR [ecx],al
 1004050:	lock xor DWORD PTR [eax],eax
 1004053:	add    DWORD PTR [edi+edi*1+0x3f880100],ecx
 100405a:	add    BYTE PTR [ecx],al
 100405c:	test   BYTE PTR [edi],bh
 100405e:	add    BYTE PTR [ecx],al
 1004060:	cmp    BYTE PTR [edi],0x0
 1004063:	add    DWORD PTR [edi+edi*1+0x0],edi
 1004067:	add    DWORD PTR [eax+0x3f],edi
 100406a:	add    BYTE PTR [ecx],al
 100406c:	ins    BYTE PTR es:[edi],dx
 100406d:	aas    
 100406e:	add    BYTE PTR [ecx],al
 1004070:	push   0x6401003f
 1004075:	aas    
 1004076:	add    BYTE PTR [ecx],al
 1004078:	pusha  
 1004079:	aas    
 100407a:	add    BYTE PTR [ecx],al
 100407c:	pop    esp
 100407d:	aas    
 100407e:	add    BYTE PTR [ecx],al
 1004080:	pop    eax
 1004081:	aas    
 1004082:	add    BYTE PTR [ecx],al
 1004084:	push   esp
 1004085:	aas    
 1004086:	add    BYTE PTR [ecx],al
 1004088:	push   eax
 1004089:	aas    
 100408a:	add    BYTE PTR [ecx],al
 100408c:	dec    esp
 100408d:	aas    
 100408e:	add    BYTE PTR [ecx],al
 1004090:	dec    eax
 1004091:	aas    
 1004092:	add    BYTE PTR [ecx],al
 1004094:	inc    esp
 1004095:	aas    
 1004096:	add    BYTE PTR [ecx],al
 1004098:	inc    eax
 1004099:	aas    
 100409a:	add    BYTE PTR [ecx],al
 100409c:	cmp    al,0x3f
 100409e:	add    BYTE PTR [ecx],al
 10040a0:	cmp    BYTE PTR [edi],bh
 10040a2:	add    BYTE PTR [ecx],al
 10040a4:	xor    al,0x3f
 10040a6:	add    BYTE PTR [ecx],al
 10040a8:	xor    BYTE PTR [edi],bh
 10040aa:	add    BYTE PTR [ecx],al
 10040ac:	sub    al,0x3f
 10040ae:	add    BYTE PTR [ecx],al
 10040b0:	sub    BYTE PTR [edi],bh
 10040b2:	add    BYTE PTR [ecx],al
 10040b4:	and    al,0x3f
 10040b6:	add    BYTE PTR [ecx],al
 10040b8:	and    BYTE PTR [edi],bh
 10040ba:	add    BYTE PTR [ecx],al
 10040bc:	sbb    al,0x3f
 10040be:	add    BYTE PTR [ecx],al
 10040c0:	sbb    BYTE PTR [edi],bh
 10040c2:	add    BYTE PTR [ecx],al
 10040c4:	adc    al,0x3f
 10040c6:	add    BYTE PTR [ecx],al
 10040c8:	adc    BYTE PTR [edi],bh
 10040ca:	add    BYTE PTR [ecx],al
 10040cc:	or     al,0x3f
 10040ce:	add    BYTE PTR [ecx],al
 10040d0:	or     BYTE PTR [edi],bh
 10040d2:	add    BYTE PTR [ecx],al
 10040d4:	add    al,0x3f
 10040d6:	add    BYTE PTR [ecx],al
 10040d8:	add    BYTE PTR [edi],bh
 10040da:	add    BYTE PTR [ecx],al
 10040dc:	cld    
 10040dd:	add    BYTE PTR ds:[ecx],al
 10040e0:	clc    
 10040e1:	add    BYTE PTR ds:[ecx],al
 10040e4:	hlt    
 10040e5:	add    BYTE PTR ds:[ecx],al
 10040e8:	lock add BYTE PTR ds:[ecx],al
 10040ec:	in     al,0x3e
 10040ee:	add    BYTE PTR [ecx],al
 10040f0:	fdivr  DWORD PTR [esi]
 10040f2:	add    BYTE PTR [ecx],al
 10040f4:	sar    BYTE PTR [esi],1
 10040f6:	add    BYTE PTR [ecx],al
 10040f8:	les    edi,FWORD PTR [esi]
 10040fa:	add    BYTE PTR [ecx],al
 10040fc:	lods   al,BYTE PTR ds:[esi]
 10040fd:	add    BYTE PTR ds:[ecx],al
 1004100:	mov    al,ds:0x8c01003e
 1004105:	add    BYTE PTR ds:[ecx],al
 1004108:	ins    BYTE PTR es:[edi],dx
 1004109:	add    BYTE PTR ds:[ecx],al
 100410c:	dec    esp
 100410d:	add    BYTE PTR ds:[ecx],al
 1004110:	sub    al,0x3e
 1004112:	add    BYTE PTR [ecx],al
 1004114:	or     al,0x3e
 1004116:	add    BYTE PTR [ecx],al
 1004118:	in     al,dx
 1004119:	cmp    eax,0x3dc80100
 100411e:	add    BYTE PTR [ecx],al
 1004120:	lods   al,BYTE PTR ds:[esi]
 1004121:	cmp    eax,0x3d880100
 1004126:	add    BYTE PTR [ecx],al
 1004128:	push   0x4001003d
 100412d:	cmp    eax,0x3d240100
 1004132:	add    BYTE PTR [ecx],al
 1004134:	adc    al,0x3d
 1004136:	add    BYTE PTR [ecx],al
 1004138:	adc    BYTE PTR ds:0x3d080100,bh
 100413e:	add    BYTE PTR [ecx],al
 1004140:	clc    
 1004141:	cmp    al,0x0
 1004143:	add    esp,edx
 1004145:	cmp    al,0x0
 1004147:	add    esp,ecx
 1004149:	cmp    al,0x0
 100414b:	add    eax,eax
 100414d:	cmp    al,0x0
 100414f:	add    DWORD PTR [eax-0x6bfeffc4],esi
 1004155:	cmp    al,0x0
 1004157:	add    DWORD PTR [esp+edi*1+0x0],esi
 100415b:	add    DWORD PTR [esp+edi*1+0x0],ecx
 100415f:	add    DWORD PTR [esp+edi*1],esp
 1004162:	add    BYTE PTR [ecx],al
 1004164:	cld    
 1004165:	cmp    eax,DWORD PTR [eax]
 1004167:	add    eax,edx
 1004169:	cmp    eax,DWORD PTR [eax]
 100416b:	add    DWORD PTR [ebx+edi*1+0x3b900100],esi
 1004172:	add    BYTE PTR [ecx],al
 1004174:	ins    BYTE PTR es:[edi],dx
 1004175:	cmp    eax,DWORD PTR [eax]
 1004177:	add    DWORD PTR [eax+0x3b],eax
 100417a:	add    BYTE PTR [ecx],al
 100417c:	adc    al,0x3b
 100417e:	add    BYTE PTR [ecx],al
 1004180:	clc    
 1004181:	cmp    al,BYTE PTR [eax]
 1004183:	add    DWORD PTR [esi+ebx*1+0x0],esp
 1004187:	add    esp,esp
 1004189:	cmp    al,BYTE PTR [eax]
 100418b:	add    eax,ecx
 100418d:	cmp    al,BYTE PTR [eax]
 100418f:	add    DWORD PTR [edx+edi*1+0x3a940100],esi
 1004196:	add    BYTE PTR [ecx],al
 1004198:	js     0x10041d4
 100419a:	add    BYTE PTR [ecx],al
 100419c:	inc    ebx
 100419d:	add    BYTE PTR [edi+0x0],cl
 10041a0:	dec    esi
 10041a1:	add    BYTE PTR [edi+0x0],cl
 10041a4:	push   ebp
 10041a5:	add    BYTE PTR [eax+eax*1+0x24],dl
 10041a9:	add    BYTE PTR [eax],al
 10041ab:	add    BYTE PTR [eax],al
 10041ad:	add    BYTE PTR [eax],al
 10041af:	add    BYTE PTR [esi],al
 10041b1:	add    BYTE PTR [eax-0x7f7e7f7a],0x0
 10041b8:	add    BYTE PTR [eax],dl
 10041ba:	add    eax,DWORD PTR [esi-0x7f7d7980]
 10041c0:	adc    al,0x5
 10041c2:	add    eax,0x85454545
 10041c7:	test   DWORD PTR [ebp+0x30000005],eax
 10041cd:	xor    BYTE PTR [eax+0x888050],al
 10041d3:	or     BYTE PTR [eax],al
 10041d5:	sub    BYTE PTR [edi],ah
 10041d7:	cmp    BYTE PTR [eax+0x57],dl
 10041da:	add    BYTE PTR [eax],0x7
 10041dd:	add    BYTE PTR [edi],dh
 10041df:	xor    BYTE PTR [eax],dh
 10041e1:	push   eax
 10041e2:	push   eax
 10041e3:	mov    BYTE PTR [eax],al
 10041e5:	add    BYTE PTR [eax],al
 10041e7:	and    BYTE PTR [eax],ch
 10041e9:	or     BYTE PTR [eax+0x8080],0x0
 10041f0:	pusha  
 10041f1:	push   0x68686860
 10041f6:	or     BYTE PTR [eax],cl
 10041f8:	pop    es
 10041f9:	js     0x100426b
 10041fb:	jo     0x1004274
 10041fd:	jo     0x100426f
 10041ff:	or     BYTE PTR [eax],cl
 1004201:	add    BYTE PTR [eax],al
 1004203:	or     BYTE PTR [eax],al
 1004205:	or     BYTE PTR [eax],al
 1004207:	pop    es
 1004208:	or     BYTE PTR [eax],al
 100420a:	add    BYTE PTR [eax],al
 100420c:	add    BYTE PTR [eax],al
 100420e:	add    BYTE PTR [eax],al
 1004210:	dec    eax
	...
 1004249:	add    BYTE PTR [eax],al
 100424b:	add    BYTE PTR [eax+esi*1+0x1],dl
 100424f:	add    DWORD PTR [eax+0x43],esp
 1004252:	add    BYTE PTR [ecx],al
 1004254:	add    eax,DWORD PTR [eax]
 1004256:	add    BYTE PTR [eax],al
 1004258:	push   edx
 1004259:	push   ebx
 100425a:	inc    esp
 100425b:	push   ebx
 100425c:	sbb    eax,0x4039f5cf
 1004261:	sti    
 1004262:	xor    BYTE PTR [esi+ebx*4+0x47],cl
 1004266:	mov    dl,0xb
 1004268:	inc    eax
 1004269:	pushf  
 100426a:	pushf  
 100426b:	lods   eax,DWORD PTR ds:[esi]
 100426c:	add    DWORD PTR [eax],eax
 100426e:	add    BYTE PTR [eax],al
 1004270:	inc    esp
 1004271:	pop    eax
 1004272:	push   ebx
 1004273:	inc    ebp
 1004274:	push   esp
 1004275:	push   ebp
 1004276:	push   eax
 1004277:	cs jo  0x10042de
 100427a:	bound  eax,QWORD PTR [eax]
	...
 1004288:	pusha  
 1004289:	xor    BYTE PTR [ecx],al
 100428b:	add    DWORD PTR [eax+0x10042],edx
 1004291:	add    BYTE PTR [eax],al
 1004293:	add    BYTE PTR [eax],al
 1004295:	add    BYTE PTR [eax],al
 1004297:	add    BYTE PTR [edx],al
 1004299:	add    BYTE PTR [eax],al
 100429b:	add    BYTE PTR [eax-0x53feffbe],ah
 10042a1:	inc    edx
 10042a2:	add    BYTE PTR [ecx],al
 10042a4:	enter  0x42,0x1
 10042a8:	add    BYTE PTR [eax],al
 10042aa:	add    BYTE PTR [eax],al
 10042ac:	pusha  
 10042ad:	xor    BYTE PTR [ecx],al
 10042af:	add    DWORD PTR [ecx],eax
 10042b1:	add    BYTE PTR [eax],al
 10042b3:	add    BYTE PTR [eax],al
 10042b5:	add    BYTE PTR [eax],al
 10042b7:	add    bh,bh
 10042b9:	(bad)  
 10042ba:	(bad)  
 10042bb:	inc    DWORD PTR [eax]
 10042bd:	add    BYTE PTR [eax],al
 10042bf:	add    BYTE PTR [eax+0x0],al
 10042c2:	add    BYTE PTR [eax],al
 10042c4:	nop
 10042c5:	inc    edx
 10042c6:	add    BYTE PTR [ecx],al
 10042c8:	jl     0x10042fa
 10042ca:	add    DWORD PTR [ecx],eax
	...
 10042d4:	(bad)  
 10042d5:	(bad)  
 10042d6:	(bad)  
 10042d7:	inc    DWORD PTR [eax]
 10042d9:	add    BYTE PTR [eax],al
 10042db:	add    BYTE PTR [eax+0x0],al
 10042de:	add    BYTE PTR [eax],al
 10042e0:	in     al,0x42
 10042e2:	add    BYTE PTR [ecx],al
	...
 10042ec:	add    DWORD PTR [eax],eax
 10042ee:	add    BYTE PTR [eax],al
 10042f0:	hlt    
 10042f1:	inc    edx
 10042f2:	add    BYTE PTR [ecx],al
 10042f4:	enter  0x42,0x1
	...
 1004308:	jl     0x100433a
 100430a:	add    DWORD PTR [ecx],eax
 100430c:	in     al,0x42
 100430e:	add    BYTE PTR [ecx],al
	...
 100431c:	lock xor al,0x1
 100431f:	add    DWORD PTR [ebx+eax*2],esp
 1004322:	add    BYTE PTR [ecx],al
	...
 100432c:	add    DWORD PTR [eax],eax
 100432e:	add    BYTE PTR [eax],al
 1004330:	xor    al,0x43
 1004332:	add    BYTE PTR [ecx],al
 1004334:	cmp    al,0x43
 1004336:	add    BYTE PTR [ecx],al
 1004338:	add    BYTE PTR [eax],al
 100433a:	add    BYTE PTR [eax],al
 100433c:	lock xor al,0x1
 100433f:	add    DWORD PTR [eax],eax
 1004341:	add    BYTE PTR [eax],al
 1004343:	add    BYTE PTR [eax],al
 1004345:	add    BYTE PTR [eax],al
 1004347:	add    bh,bh
 1004349:	(bad)  
 100434a:	(bad)  
 100434b:	inc    DWORD PTR [eax]
 100434d:	add    BYTE PTR [eax],al
 100434f:	add    BYTE PTR [eax+0x0],al
 1004352:	add    BYTE PTR [eax],al
 1004354:	and    al,0x43
 1004356:	add    BYTE PTR [ecx],al
	...
 1004360:	xor    BYTE PTR [ebp-0x43c00000],bl
 1004366:	add    BYTE PTR [eax],al
 1004368:	sar    dh,0x0
	...
 1004383:	add    BYTE PTR [eax],al
 1004385:	mov    edi,edi
 1004387:	push   ebp
 1004388:	mov    ebp,esp
 100438a:	push   ebx
 100438b:	push   esi
 100438c:	push   DWORD PTR [ebp+0x10]
 100438f:	lea    esi,[eax-0x1]
 1004392:	push   DWORD PTR [ebp+0xc]
 1004395:	xor    ebx,ebx
 1004397:	push   esi
 1004398:	push   edi
 1004399:	call   0x1007eae
 100439e:	add    esp,0x10
 10043a1:	test   eax,eax
 10043a3:	js     0x10043b0
 10043a5:	cmp    eax,esi
 10043a7:	ja     0x10043b0
 10043a9:	jne    0x10043ba
 10043ab:	mov    BYTE PTR [esi+edi*1],bl
 10043ae:	jmp    0x10043b8
 10043b0:	mov    BYTE PTR [esi+edi*1],bl
 10043b3:	mov    ebx,0x8007007a
 10043b8:	mov    eax,esi
 10043ba:	mov    ecx,DWORD PTR [ebp+0x8]
 10043bd:	test   ecx,ecx
 10043bf:	je     0x10043c3
 10043c1:	mov    DWORD PTR [ecx],eax
 10043c3:	pop    esi
 10043c4:	mov    eax,ebx
 10043c6:	pop    ebx
 10043c7:	pop    ebp
 10043c8:	ret    0xc
 10043cb:	int3   
 10043cc:	int3   
 10043cd:	int3   
 10043ce:	int3   
 10043cf:	int3   
 10043d0:	mov    edi,edi
 10043d2:	push   ebp
 10043d3:	mov    ebp,esp
 10043d5:	xor    eax,eax
 10043d7:	cmp    DWORD PTR [ebp+0xc],eax
 10043da:	je     0x10043e5
 10043dc:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
 10043e3:	jbe    0x10043ea
 10043e5:	mov    eax,0x80070057
 10043ea:	test   eax,eax
 10043ec:	js     0x1004403
 10043ee:	mov    eax,DWORD PTR [ebp+0xc]
 10043f1:	push   edi
 10043f2:	push   DWORD PTR [ebp+0x14]
 10043f5:	mov    edi,DWORD PTR [ebp+0x8]
 10043f8:	push   DWORD PTR [ebp+0x10]
 10043fb:	push   0x0
 10043fd:	call   0x1004385
 1004402:	pop    edi
 1004403:	pop    ebp
 1004404:	ret    0x10
 1004407:	int3   
 1004408:	int3   
 1004409:	int3   
 100440a:	int3   
 100440b:	int3   
 100440c:	mov    edi,edi
 100440e:	push   ebp
 100440f:	mov    ebp,esp
 1004411:	xor    eax,eax
 1004413:	cmp    DWORD PTR [ebp+0xc],eax
 1004416:	je     0x1004421
 1004418:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
 100441f:	jbe    0x1004426
 1004421:	mov    eax,0x80070057
 1004426:	test   eax,eax
 1004428:	js     0x1004440
 100442a:	push   edi
 100442b:	mov    edi,DWORD PTR [ebp+0x8]
 100442e:	lea    eax,[ebp+0x14]
 1004431:	push   eax
 1004432:	push   DWORD PTR [ebp+0x10]
 1004435:	mov    eax,DWORD PTR [ebp+0xc]
 1004438:	push   0x0
 100443a:	call   0x1004385
 100443f:	pop    edi
 1004440:	pop    ebp
 1004441:	ret    
 1004442:	int3   
 1004443:	int3   
 1004444:	int3   
 1004445:	int3   
 1004446:	int3   
 1004447:	mov    edi,edi
 1004449:	push   ebp
 100444a:	mov    ebp,esp
 100444c:	sub    esp,0x47c
 1004452:	mov    eax,ds:0x1013054
 1004457:	xor    eax,ebp
 1004459:	mov    DWORD PTR [ebp-0x4],eax
 100445c:	cmp    BYTE PTR ds:0x1013f80,0x0
 1004463:	push   esi
 1004464:	push   edi
 1004465:	mov    esi,0x1013f80
 100446a:	jne    0x100450e
 1004470:	mov    edi,0x104
 1004475:	push   edi
 1004476:	lea    eax,[ebp-0x120]
 100447c:	push   eax
 100447d:	call   DWORD PTR ds:0x10010a0
 1004483:	test   eax,eax
 1004485:	jne    0x1004497
 1004487:	push   0x100136c
 100448c:	call   DWORD PTR ds:0x100111c
 1004492:	jmp    0x10045a5
 1004497:	push   0x1001364
 100449c:	lea    eax,[ebp-0x120]
 10044a2:	push   eax
 10044a3:	push   0x100135c
 10044a8:	lea    eax,[ebp-0x224]
 10044ae:	push   edi
 10044af:	push   eax
 10044b0:	call   0x100440c
 10044b5:	add    esp,0x14
 10044b8:	test   eax,eax
 10044ba:	jns    0x10044c3
 10044bc:	push   0x1001338
 10044c1:	jmp    0x100448c
 10044c3:	push   0x0
 10044c5:	lea    eax,[ebp-0x224]
 10044cb:	push   eax
 10044cc:	call   DWORD PTR ds:0x1001120
 10044d2:	test   eax,eax
 10044d4:	jne    0x10044ea
 10044d6:	call   DWORD PTR ds:0x1001124
 10044dc:	cmp    eax,0xb7
 10044e1:	je     0x10044ea
 10044e3:	push   0x1001308
 10044e8:	jmp    0x100448c
 10044ea:	push   0x10012f4
 10044ef:	push   0x10012f0
 10044f4:	lea    eax,[ebp-0x120]
 10044fa:	push   eax
 10044fb:	push   0x10012e8
 1004500:	push   edi
 1004501:	push   esi
 1004502:	call   0x100440c
 1004507:	add    esp,0x18
 100450a:	test   eax,eax
 100450c:	js     0x10044bc
 100450e:	push   0x10012e4
 1004513:	push   esi
 1004514:	call   0x1008339
 1004519:	mov    esi,eax
 100451b:	pop    ecx
 100451c:	pop    ecx
 100451d:	test   esi,esi
 100451f:	jne    0x100452b
 1004521:	push   0x10012b8
 1004526:	jmp    0x100448c
 100452b:	lea    eax,[ebp-0x1c]
 100452e:	push   eax
 100452f:	call   0x1008257
 1004534:	lea    eax,[ebp-0x10]
 1004537:	push   eax
 1004538:	call   0x1008179
 100453d:	pop    ecx
 100453e:	pop    ecx
 100453f:	lea    eax,[ebp-0x10]
 1004542:	test   ebx,ebx
 1004544:	je     0x100456c
 1004546:	push   ebx
 1004547:	push   0x10012b0
 100454c:	push   eax
 100454d:	lea    eax,[ebp-0x1c]
 1004550:	push   eax
 1004551:	push   0x10012a0
 1004556:	lea    eax,[ebp-0x47c]
 100455c:	push   0x258
 1004561:	push   eax
 1004562:	call   0x100440c
 1004567:	add    esp,0x1c
 100456a:	jmp    0x100458f
 100456c:	push   0x10012b0
 1004571:	push   eax
 1004572:	lea    eax,[ebp-0x1c]
 1004575:	push   eax
 1004576:	push   0x100128c
 100457b:	lea    eax,[ebp-0x47c]
 1004581:	push   0x258
 1004586:	push   eax
 1004587:	call   0x100440c
 100458c:	add    esp,0x18
 100458f:	lea    eax,[ebp-0x47c]
 1004595:	push   esi
 1004596:	push   eax
 1004597:	call   0x1007fbb
 100459c:	push   esi
 100459d:	call   0x1007f42
 10045a2:	add    esp,0xc
 10045a5:	mov    ecx,DWORD PTR [ebp-0x4]
 10045a8:	pop    edi
 10045a9:	xor    ecx,ebp
 10045ab:	pop    esi
 10045ac:	call   0x1008355
 10045b1:	leave  
 10045b2:	ret    
 10045b3:	int3   
 10045b4:	int3   
 10045b5:	int3   
 10045b6:	int3   
 10045b7:	int3   
 10045b8:	mov    edi,edi
 10045ba:	push   ebp
 10045bb:	mov    ebp,esp
 10045bd:	sub    esp,0x25c
 10045c3:	mov    eax,ds:0x1013054
 10045c8:	xor    eax,ebp
 10045ca:	mov    DWORD PTR [ebp-0x4],eax
 10045cd:	push   ebx
 10045ce:	lea    eax,[ebp+0xc]
 10045d1:	push   eax
 10045d2:	push   DWORD PTR [ebp+0x8]
 10045d5:	lea    eax,[ebp-0x25c]
 10045db:	push   0x258
 10045e0:	push   eax
 10045e1:	call   0x10043d0
 10045e6:	lea    ebx,[ebp-0x25c]
 10045ec:	call   0x1004447
 10045f1:	mov    ecx,DWORD PTR [ebp-0x4]
 10045f4:	xor    ecx,ebp
 10045f6:	pop    ebx
 10045f7:	call   0x1008355
 10045fc:	leave  
 10045fd:	ret    
 10045fe:	int3   
 10045ff:	int3   
 1004600:	int3   
 1004601:	int3   
 1004602:	int3   
 1004603:	mov    edi,edi
 1004605:	push   ebp
 1004606:	mov    ebp,esp
 1004608:	sub    esp,0x20c
 100460e:	mov    eax,ds:0x1013054
 1004613:	xor    eax,ebp
 1004615:	mov    DWORD PTR [ebp-0x4],eax
 1004618:	cmp    BYTE PTR ds:0x1014088,0x0
 100461f:	push   esi
 1004620:	push   edi
 1004621:	mov    esi,0x1014088
 1004626:	jne    0x10046ca
 100462c:	mov    edi,0x104
 1004631:	push   edi
 1004632:	lea    eax,[ebp-0x108]
 1004638:	push   eax
 1004639:	call   DWORD PTR ds:0x10010a0
 100463f:	test   eax,eax
 1004641:	jne    0x1004653
 1004643:	push   0x100136c
 1004648:	call   DWORD PTR ds:0x100111c
 100464e:	jmp    0x10046f7
 1004653:	push   0x1001364
 1004658:	lea    eax,[ebp-0x108]
 100465e:	push   eax
 100465f:	push   0x100135c
 1004664:	lea    eax,[ebp-0x20c]
 100466a:	push   edi
 100466b:	push   eax
 100466c:	call   0x100440c
 1004671:	add    esp,0x14
 1004674:	test   eax,eax
 1004676:	jns    0x100467f
 1004678:	push   0x1001338
 100467d:	jmp    0x1004648
 100467f:	push   0x0
 1004681:	lea    eax,[ebp-0x20c]
 1004687:	push   eax
 1004688:	call   DWORD PTR ds:0x1001120
 100468e:	test   eax,eax
 1004690:	jne    0x10046a6
 1004692:	call   DWORD PTR ds:0x1001124
 1004698:	cmp    eax,0xb7
 100469d:	je     0x10046a6
 100469f:	push   0x1001308
 10046a4:	jmp    0x1004648
 10046a6:	push   0x100139c
 10046ab:	push   0x10012f0
 10046b0:	lea    eax,[ebp-0x108]
 10046b6:	push   eax
 10046b7:	push   0x10012e8
 10046bc:	push   edi
 10046bd:	push   esi
 10046be:	call   0x100440c
 10046c3:	add    esp,0x18
 10046c6:	test   eax,eax
 10046c8:	js     0x1004678
 10046ca:	push   0x10012e4
 10046cf:	push   esi
 10046d0:	call   0x1008339
 10046d5:	mov    esi,eax
 10046d7:	pop    ecx
 10046d8:	pop    ecx
 10046d9:	test   esi,esi
 10046db:	jne    0x10046e7
 10046dd:	push   0x10012b8
 10046e2:	jmp    0x1004648
 10046e7:	push   esi
 10046e8:	push   ebx
 10046e9:	call   0x1007fbb
 10046ee:	push   esi
 10046ef:	call   0x1007f42
 10046f4:	add    esp,0xc
 10046f7:	mov    ecx,DWORD PTR [ebp-0x4]
 10046fa:	pop    edi
 10046fb:	xor    ecx,ebp
 10046fd:	pop    esi
 10046fe:	call   0x1008355
 1004703:	leave  
 1004704:	ret    
 1004705:	int3   
 1004706:	int3   
 1004707:	int3   
 1004708:	int3   
 1004709:	int3   
 100470a:	mov    edi,edi
 100470c:	push   ebp
 100470d:	mov    ebp,esp
 100470f:	sub    esp,0x380
 1004715:	mov    eax,ds:0x1013054
 100471a:	xor    eax,ebp
 100471c:	mov    DWORD PTR [ebp-0x4],eax
 100471f:	mov    eax,DWORD PTR [ebp+0x8]
 1004722:	push   ebx
 1004723:	mov    DWORD PTR [ebp-0x37c],eax
 1004729:	mov    eax,DWORD PTR [ebp+0x10]
 100472c:	push   esi
 100472d:	mov    DWORD PTR [ebp-0x380],eax
 1004733:	push   edi
 1004734:	mov    edi,DWORD PTR [ebp+0x14]
 1004737:	lea    eax,[ebp-0x1c]
 100473a:	push   eax
 100473b:	call   0x1008257
 1004740:	lea    eax,[ebp-0x10]
 1004743:	push   eax
 1004744:	call   0x1008179
 1004749:	pop    ecx
 100474a:	pop    ecx
 100474b:	mov    ebx,0x1001540
 1004750:	call   0x1004603
 1004755:	lea    eax,[ebp-0x10]
 1004758:	push   eax
 1004759:	lea    eax,[ebp-0x1c]
 100475c:	push   eax
 100475d:	push   0x1001538
 1004762:	mov    esi,0x258
 1004767:	lea    eax,[ebp-0x274]
 100476d:	push   esi
 100476e:	push   eax
 100476f:	call   0x100440c
 1004774:	add    esp,0x14
 1004777:	lea    ebx,[ebp-0x274]
 100477d:	call   0x1004603
 1004782:	push   0x5c
 1004784:	push   DWORD PTR [ebp-0x37c]
 100478a:	call   0x1008370
 100478f:	pop    ecx
 1004790:	pop    ecx
 1004791:	test   eax,eax
 1004793:	je     0x100479b
 1004795:	inc    eax
 1004796:	cmp    BYTE PTR [eax],0x0
 1004799:	jne    0x10047a1
 100479b:	mov    eax,DWORD PTR [ebp-0x37c]
 10047a1:	push   DWORD PTR [ebp-0x380]
 10047a7:	push   DWORD PTR [ebp+0xc]
 10047aa:	push   eax
 10047ab:	push   0x100152c
 10047b0:	push   0x10012b0
 10047b5:	push   0x10014f8
 10047ba:	lea    eax,[ebp-0x274]
 10047c0:	push   esi
 10047c1:	push   eax
 10047c2:	call   0x100440c
 10047c7:	add    esp,0x20
 10047ca:	lea    ebx,[ebp-0x274]
 10047d0:	call   0x1004603
 10047d5:	test   edi,edi
 10047d7:	je     0x1004842
 10047d9:	push   edi
 10047da:	push   0x10014e0
 10047df:	mov    eax,ebx
 10047e1:	push   esi
 10047e2:	push   eax
 10047e3:	call   0x100440c
 10047e8:	add    esp,0x10
 10047eb:	call   0x1004603
 10047f0:	mov    eax,DWORD PTR [ebp+0x18]
 10047f3:	test   eax,eax
 10047f5:	je     0x100481b
 10047f7:	push   eax
 10047f8:	push   edi
 10047f9:	push   DWORD PTR [ebp-0x380]
 10047ff:	mov    eax,ebx
 1004801:	jns    0x100480a
 1004803:	push   0x10014c0
 1004808:	jmp    0x100480f
 100480a:	push   0x10014a0
 100480f:	push   esi
 1004810:	push   eax
 1004811:	call   0x100440c
 1004816:	add    esp,0x18
 1004819:	jmp    0x1004837
 100481b:	push   edi
 100481c:	push   DWORD PTR [ebp-0x380]
 1004822:	lea    eax,[ebp-0x274]
 1004828:	push   0x100148c
 100482d:	push   esi
 100482e:	push   eax
 100482f:	call   0x100440c
 1004834:	add    esp,0x14
 1004837:	lea    ebx,[ebp-0x274]
 100483d:	call   0x1004447
 1004842:	cmp    DWORD PTR [ebp+0x18],0x0
 1004846:	je     0x10048f4
 100484c:	mov    ebx,0x100147c
 1004851:	call   0x1004603
 1004856:	cmp    DWORD PTR [ebp+0x18],0x0
 100485a:	mov    eax,0x1001474
 100485f:	jl     0x1004866
 1004861:	mov    eax,0x100146c
 1004866:	push   DWORD PTR [ebp+0x18]
 1004869:	push   eax
 100486a:	lea    eax,[ebp-0x274]
 1004870:	push   esi
 1004871:	push   eax
 1004872:	call   0x100440c
 1004877:	add    esp,0x10
 100487a:	lea    ebx,[ebp-0x274]
 1004880:	call   0x1004603
 1004885:	xor    eax,eax
 1004887:	push   eax
 1004888:	push   eax
 1004889:	lea    ecx,[ebp-0x37c]
 100488f:	push   ecx
 1004890:	push   eax
 1004891:	push   DWORD PTR [ebp+0x18]
 1004894:	push   eax
 1004895:	push   0x1300
 100489a:	call   DWORD PTR ds:0x10010ac
 10048a0:	test   eax,eax
 10048a2:	je     0x10048c7
 10048a4:	mov    ebx,0x1001468
 10048a9:	call   0x1004603
 10048ae:	mov    ebx,DWORD PTR [ebp-0x37c]
 10048b4:	call   0x1004603
 10048b9:	push   DWORD PTR [ebp-0x37c]
 10048bf:	call   DWORD PTR ds:0x1001128
 10048c5:	jmp    0x10048ed
 10048c7:	call   DWORD PTR ds:0x1001124
 10048cd:	cmp    eax,0x13d
 10048d2:	jne    0x10048e0
 10048d4:	push   0x1001418
 10048d9:	call   0x10045b8
 10048de:	jmp    0x10048ec
 10048e0:	push   eax
 10048e1:	push   0x10013e4
 10048e6:	call   0x10045b8
 10048eb:	pop    ecx
 10048ec:	pop    ecx
 10048ed:	mov    ebx,0x10013e0
 10048f2:	jmp    0x10048fd
 10048f4:	test   edi,edi
 10048f6:	je     0x1004902
 10048f8:	mov    ebx,0x10013dc
 10048fd:	call   0x1004603
 1004902:	cmp    BYTE PTR ds:0x1014190,0x0
 1004909:	je     0x1004929
 100490b:	mov    ebx,0x10013c4
 1004910:	call   0x1004603
 1004915:	mov    ebx,0x1014190
 100491a:	call   0x1004603
 100491f:	mov    ebx,0x10013dc
 1004924:	call   0x1004603
 1004929:	cmp    DWORD PTR [ebp+0x1c],0x0
 100492d:	je     0x10049a5
 100492f:	lea    eax,[ebp+0x20]
 1004932:	push   eax
 1004933:	push   DWORD PTR [ebp+0x1c]
 1004936:	lea    eax,[ebp-0x274]
 100493c:	push   esi
 100493d:	push   eax
 100493e:	call   0x10043d0
 1004943:	mov    ebx,0x10013bc
 1004948:	call   0x1004603
 100494d:	lea    ebx,[ebp-0x274]
 1004953:	call   0x1004603
 1004958:	mov    ebx,0x10013e0
 100495d:	call   0x1004603
 1004962:	push   DWORD PTR [ebp+0x1c]
 1004965:	lea    eax,[ebp-0x378]
 100496b:	push   DWORD PTR [ebp-0x380]
 1004971:	push   0x10013b0
 1004976:	push   0x104
 100497b:	push   eax
 100497c:	call   0x100440c
 1004981:	add    esp,0x14
 1004984:	lea    eax,[ebp+0x20]
 1004987:	push   eax
 1004988:	lea    eax,[ebp-0x378]
 100498e:	push   eax
 100498f:	push   0x0
 1004991:	mov    eax,esi
 1004993:	lea    edi,[ebp-0x274]
 1004999:	call   0x1004385
 100499e:	mov    ebx,edi
 10049a0:	call   0x1004447
 10049a5:	mov    ecx,DWORD PTR [ebp-0x4]
 10049a8:	pop    edi
 10049a9:	pop    esi
 10049aa:	xor    ecx,ebp
 10049ac:	pop    ebx
 10049ad:	call   0x1008355
 10049b2:	leave  
 10049b3:	ret    
 10049b4:	int3   
 10049b5:	int3   
 10049b6:	int3   
 10049b7:	int3   
 10049b8:	int3   
 10049b9:	mov    edi,edi
 10049bb:	push   ebp
 10049bc:	mov    ebp,esp
 10049be:	push   0xffffffff
 10049c0:	push   DWORD PTR [ebp+0xc]
 10049c3:	push   0xffffffff
 10049c5:	push   DWORD PTR [ebp+0x8]
 10049c8:	push   0x1
 10049ca:	push   0x409
 10049cf:	call   DWORD PTR ds:0x10010a8
 10049d5:	xor    ecx,ecx
 10049d7:	cmp    eax,0x2
 10049da:	setne  cl
 10049dd:	mov    eax,ecx
 10049df:	pop    ebp
 10049e0:	ret    0x8
 10049e3:	int3   
 10049e4:	int3   
 10049e5:	int3   
 10049e6:	int3   
 10049e7:	int3   
 10049e8:	mov    edi,edi
 10049ea:	push   ebp
 10049eb:	mov    ebp,esp
 10049ed:	sub    esp,0x9c
 10049f3:	mov    eax,ds:0x1013054
 10049f8:	xor    eax,ebp
 10049fa:	mov    DWORD PTR [ebp-0x4],eax
 10049fd:	and    DWORD PTR [ebp-0x9c],0x0
 1004a04:	lea    eax,[ebp-0x98]
 1004a0a:	push   eax
 1004a0b:	mov    DWORD PTR [ebp-0x98],0x94
 1004a15:	call   DWORD PTR ds:0x1001094
 1004a1b:	xor    eax,eax
 1004a1d:	inc    eax
 1004a1e:	cmp    DWORD PTR [ebp-0x88],eax
 1004a24:	je     0x1004ae8
 1004a2a:	cmp    DWORD PTR [ebp-0x88],0x2
 1004a31:	jne    0x1004a49
 1004a33:	cmp    DWORD PTR [ebp-0x94],0x4
 1004a3a:	jne    0x1004a49
 1004a3c:	cmp    DWORD PTR [ebp-0x90],0x0
 1004a43:	je     0x1004ae8
 1004a49:	push   ebx
 1004a4a:	push   edi
 1004a4b:	mov    edi,0x1001628
 1004a50:	push   edi
 1004a51:	call   DWORD PTR ds:0x1001098
 1004a57:	mov    ebx,eax
 1004a59:	test   ebx,ebx
 1004a5b:	je     0x1004aba
 1004a5d:	push   esi
 1004a5e:	mov    esi,0x100161c
 1004a63:	push   esi
 1004a64:	push   ebx
 1004a65:	call   DWORD PTR ds:0x100109c
 1004a6b:	test   eax,eax
 1004a6d:	je     0x1004a89
 1004a6f:	and    DWORD PTR [ebp-0x9c],0x0
 1004a76:	lea    ecx,[ebp-0x9c]
 1004a7c:	push   ecx
 1004a7d:	push   0x0
 1004a7f:	call   eax
 1004a81:	mov    DWORD PTR [ebp-0x9c],eax
 1004a87:	jmp    0x1004ab0
 1004a89:	push   esi
 1004a8a:	push   edi
 1004a8b:	push   0x1001600
 1004a90:	call   DWORD PTR ds:0x1001124
 1004a96:	push   eax
 1004a97:	push   0x10015ec
 1004a9c:	push   0x10015e4
 1004aa1:	push   0x78
 1004aa3:	push   0x10015ac
 1004aa8:	call   0x100470a
 1004aad:	add    esp,0x20
 1004ab0:	push   ebx
 1004ab1:	call   DWORD PTR ds:0x10010a4
 1004ab7:	pop    esi
 1004ab8:	jmp    0x1004ae0
 1004aba:	push   edi
 1004abb:	push   0x1001598
 1004ac0:	call   DWORD PTR ds:0x1001124
 1004ac6:	push   eax
 1004ac7:	push   0x1001588
 1004acc:	push   0x10015e4
 1004ad1:	push   0x7b
 1004ad3:	push   0x10015ac
 1004ad8:	call   0x100470a
 1004add:	add    esp,0x1c
 1004ae0:	mov    eax,DWORD PTR [ebp-0x9c]
 1004ae6:	pop    edi
 1004ae7:	pop    ebx
 1004ae8:	mov    ecx,DWORD PTR [ebp-0x4]
 1004aeb:	xor    ecx,ebp
 1004aed:	call   0x1008355
 1004af2:	leave  
 1004af3:	ret    
 1004af4:	int3   
 1004af5:	int3   
 1004af6:	int3   
 1004af7:	int3   
 1004af8:	int3   
 1004af9:	mov    edi,edi
 1004afb:	push   ebp
 1004afc:	mov    ebp,esp
 1004afe:	push   esi
 1004aff:	push   0x2e
 1004b01:	push   DWORD PTR [ebp+0x8]
 1004b04:	call   0x1008370
 1004b09:	pop    ecx
 1004b0a:	pop    ecx
 1004b0b:	test   eax,eax
 1004b0d:	je     0x1004b93
 1004b13:	lea    esi,[eax+0x1]
 1004b16:	push   0x1001650
 1004b1b:	push   esi
 1004b1c:	call   0x10049b9
 1004b21:	test   eax,eax
 1004b23:	je     0x1004b8e
 1004b25:	push   0x100164c
 1004b2a:	push   esi
 1004b2b:	call   0x10049b9
 1004b30:	test   eax,eax
 1004b32:	je     0x1004b8e
 1004b34:	push   0x1001648
 1004b39:	push   esi
 1004b3a:	call   0x10049b9
 1004b3f:	test   eax,eax
 1004b41:	je     0x1004b8e
 1004b43:	push   0x1001644
 1004b48:	push   esi
 1004b49:	call   0x10049b9
 1004b4e:	test   eax,eax
 1004b50:	je     0x1004b8e
 1004b52:	push   0x1001640
 1004b57:	push   esi
 1004b58:	call   0x10049b9
 1004b5d:	test   eax,eax
 1004b5f:	je     0x1004b8e
 1004b61:	push   0x100163c
 1004b66:	push   esi
 1004b67:	call   0x10049b9
 1004b6c:	test   eax,eax
 1004b6e:	je     0x1004b8e
 1004b70:	push   0x1001638
 1004b75:	push   esi
 1004b76:	call   0x10049b9
 1004b7b:	test   eax,eax
 1004b7d:	je     0x1004b8e
 1004b7f:	push   0x1001634
 1004b84:	push   esi
 1004b85:	call   0x10049b9
 1004b8a:	test   eax,eax
 1004b8c:	jne    0x1004b93
 1004b8e:	xor    eax,eax
 1004b90:	inc    eax
 1004b91:	jmp    0x1004b95
 1004b93:	xor    eax,eax
 1004b95:	pop    esi
 1004b96:	pop    ebp
 1004b97:	ret    0x4
 1004b9a:	int3   
 1004b9b:	int3   
 1004b9c:	int3   
 1004b9d:	int3   
 1004b9e:	int3   
 1004b9f:	mov    edi,edi
 1004ba1:	push   ebp
 1004ba2:	mov    ebp,esp
 1004ba4:	push   ecx
 1004ba5:	push   ebx
 1004ba6:	push   esi
 1004ba7:	mov    esi,DWORD PTR [ebp+0x8]
 1004baa:	push   edi
 1004bab:	lea    eax,[ebp-0x4]
 1004bae:	push   eax
 1004baf:	push   esi
 1004bb0:	call   0x10119d2
 1004bb5:	mov    edi,eax
 1004bb7:	xor    ebx,ebx
 1004bb9:	cmp    edi,ebx
 1004bbb:	jne    0x1004bef
 1004bbd:	push   esi
 1004bbe:	call   0x1004af9
 1004bc3:	test   eax,eax
 1004bc5:	jne    0x1004bde
 1004bc7:	call   DWORD PTR ds:0x1001124
 1004bcd:	push   eax
 1004bce:	push   esi
 1004bcf:	push   0x10016e8
 1004bd4:	call   0x10045b8
 1004bd9:	add    esp,0xc
 1004bdc:	jmp    0x1004beb
 1004bde:	push   esi
 1004bdf:	push   0x10016a0
 1004be4:	call   0x10045b8
 1004be9:	pop    ecx
 1004bea:	pop    ecx
 1004beb:	xor    eax,eax
 1004bed:	jmp    0x1004c64
 1004bef:	push   edi
 1004bf0:	call   0x1008579
 1004bf5:	mov    esi,eax
 1004bf7:	pop    ecx
 1004bf8:	cmp    esi,ebx
 1004bfa:	jne    0x1004c1c
 1004bfc:	push   0x1001684
 1004c01:	push   ebx
 1004c02:	push   ebx
 1004c03:	push   0x100166c
 1004c08:	push   0x158
 1004c0d:	push   0x10015ac
 1004c12:	call   0x100470a
 1004c17:	add    esp,0x18
 1004c1a:	jmp    0x1004beb
 1004c1c:	push   edi
 1004c1d:	push   ebx
 1004c1e:	push   esi
 1004c1f:	call   0x1008600
 1004c24:	add    esp,0xc
 1004c27:	push   esi
 1004c28:	push   edi
 1004c29:	push   ebx
 1004c2a:	push   DWORD PTR [ebp+0x8]
 1004c2d:	call   0x10119c6
 1004c32:	test   eax,eax
 1004c34:	jne    0x1004c62
 1004c36:	push   ebx
 1004c37:	call   DWORD PTR ds:0x1001124
 1004c3d:	push   eax
 1004c3e:	push   0x1001654
 1004c43:	push   0x100166c
 1004c48:	push   0x161
 1004c4d:	push   0x10015ac
 1004c52:	call   0x100470a
 1004c57:	push   esi
 1004c58:	call   0x100850b
 1004c5d:	add    esp,0x1c
 1004c60:	jmp    0x1004beb
 1004c62:	mov    eax,esi
 1004c64:	pop    edi
 1004c65:	pop    esi
 1004c66:	pop    ebx
 1004c67:	leave  
 1004c68:	ret    0x4
 1004c6b:	int3   
 1004c6c:	int3   
 1004c6d:	int3   
 1004c6e:	int3   
 1004c6f:	int3   
 1004c70:	mov    edi,edi
 1004c72:	push   ebp
 1004c73:	mov    ebp,esp
 1004c75:	push   ecx
 1004c76:	push   ebx
 1004c77:	push   esi
 1004c78:	push   0x34
 1004c7a:	xor    esi,esi
 1004c7c:	push   esi
 1004c7d:	push   DWORD PTR [ebp+0xc]
 1004c80:	call   0x1008600
 1004c85:	add    esp,0xc
 1004c88:	push   DWORD PTR [ebp+0x8]
 1004c8b:	call   0x1004b9f
 1004c90:	mov    ebx,eax
 1004c92:	cmp    ebx,esi
 1004c94:	jne    0x1004c9a
 1004c96:	xor    eax,eax
 1004c98:	jmp    0x1004d09
 1004c9a:	lea    eax,[ebp+0x8]
 1004c9d:	push   eax
 1004c9e:	lea    eax,[ebp-0x4]
 1004ca1:	push   eax
 1004ca2:	push   0x10012f0
 1004ca7:	push   ebx
 1004ca8:	call   0x10119de
 1004cad:	test   eax,eax
 1004caf:	jne    0x1004cca
 1004cb1:	push   esi
 1004cb2:	call   DWORD PTR ds:0x1001124
 1004cb8:	push   eax
 1004cb9:	push   0x1001764
 1004cbe:	push   0x1001750
 1004cc3:	push   0x1b4
 1004cc8:	jmp    0x1004ce1
 1004cca:	cmp    DWORD PTR [ebp+0x8],0x34
 1004cce:	je     0x1004cf0
 1004cd0:	push   0x100173c
 1004cd5:	push   esi
 1004cd6:	push   esi
 1004cd7:	push   0x1001750
 1004cdc:	push   0x1ba
 1004ce1:	push   0x10015ac
 1004ce6:	call   0x100470a
 1004ceb:	add    esp,0x18
 1004cee:	jmp    0x1004d00
 1004cf0:	mov    esi,DWORD PTR [ebp-0x4]
 1004cf3:	push   edi
 1004cf4:	mov    edi,DWORD PTR [ebp+0xc]
 1004cf7:	push   0xd
 1004cf9:	pop    ecx
 1004cfa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1004cfc:	xor    esi,esi
 1004cfe:	inc    esi
 1004cff:	pop    edi
 1004d00:	push   ebx
 1004d01:	call   0x100850b
 1004d06:	pop    ecx
 1004d07:	mov    eax,esi
 1004d09:	pop    esi
 1004d0a:	pop    ebx
 1004d0b:	leave  
 1004d0c:	ret    0x8
 1004d0f:	int3   
 1004d10:	int3   
 1004d11:	int3   
 1004d12:	int3   
 1004d13:	int3   
 1004d14:	mov    edi,edi
 1004d16:	push   ebp
 1004d17:	mov    ebp,esp
 1004d19:	push   ecx
 1004d1a:	push   ecx
 1004d1b:	push   ebx
 1004d1c:	xor    ebx,ebx
 1004d1e:	push   ebx
 1004d1f:	lea    eax,[ebp-0x4]
 1004d22:	push   eax
 1004d23:	push   ebx
 1004d24:	push   0x2
 1004d26:	push   ebx
 1004d27:	push   ebx
 1004d28:	push   ebx
 1004d29:	push   0x1001814
 1004d2e:	push   0x80000002
 1004d33:	mov    DWORD PTR [ebp-0x8],0x1
 1004d3a:	call   DWORD PTR ds:0x100100c
 1004d40:	cmp    eax,ebx
 1004d42:	je     0x1004d69
 1004d44:	push   ebx
 1004d45:	push   eax
 1004d46:	push   0x1001800
 1004d4b:	push   0x10017ec
 1004d50:	push   0x194
 1004d55:	push   0x10017b8
 1004d5a:	call   0x100470a
 1004d5f:	add    esp,0x18
 1004d62:	xor    eax,eax
 1004d64:	jmp    0x1004e28
 1004d69:	push   esi
 1004d6a:	push   edi
 1004d6b:	push   0x4
 1004d6d:	lea    eax,[ebp+0x8]
 1004d70:	push   eax
 1004d71:	push   0x4
 1004d73:	push   ebx
 1004d74:	push   0x10017b0
 1004d79:	push   DWORD PTR [ebp-0x4]
 1004d7c:	call   DWORD PTR ds:0x1001008
 1004d82:	mov    edi,0x10017ec
 1004d87:	mov    esi,0x10017b8
 1004d8c:	cmp    eax,ebx
 1004d8e:	jne    0x1004de7
 1004d90:	push   0x4
 1004d92:	lea    eax,[ebp+0x8]
 1004d95:	push   eax
 1004d96:	push   0x4
 1004d98:	push   ebx
 1004d99:	push   0x10012b0
 1004d9e:	push   DWORD PTR [ebp-0x4]
 1004da1:	call   DWORD PTR ds:0x1001008
 1004da7:	cmp    eax,ebx
 1004da9:	je     0x1004e00
 1004dab:	push   ebx
 1004dac:	push   eax
 1004dad:	push   0x10017a0
 1004db2:	push   edi
 1004db3:	push   0x19d
 1004db8:	push   esi
 1004db9:	call   0x100470a
 1004dbe:	add    esp,0x18
 1004dc1:	push   0x1001798
 1004dc6:	push   DWORD PTR [ebp-0x4]
 1004dc9:	call   DWORD PTR ds:0x1001004
 1004dcf:	cmp    eax,ebx
 1004dd1:	je     0x1004dfd
 1004dd3:	cmp    eax,0x2
 1004dd6:	je     0x1004dfd
 1004dd8:	push   ebx
 1004dd9:	push   eax
 1004dda:	push   0x1001784
 1004ddf:	push   edi
 1004de0:	push   0x1a1
 1004de5:	jmp    0x1004df4
 1004de7:	push   ebx
 1004de8:	push   eax
 1004de9:	push   0x10017a0
 1004dee:	push   edi
 1004def:	push   0x1a7
 1004df4:	push   esi
 1004df5:	call   0x100470a
 1004dfa:	add    esp,0x18
 1004dfd:	mov    DWORD PTR [ebp-0x8],ebx
 1004e00:	push   DWORD PTR [ebp-0x4]
 1004e03:	call   DWORD PTR ds:0x1001000
 1004e09:	cmp    eax,ebx
 1004e0b:	je     0x1004e23
 1004e0d:	push   ebx
 1004e0e:	push   eax
 1004e0f:	push   0x1001774
 1004e14:	push   edi
 1004e15:	push   0x1ac
 1004e1a:	push   esi
 1004e1b:	call   0x100470a
 1004e20:	add    esp,0x18
 1004e23:	mov    eax,DWORD PTR [ebp-0x8]
 1004e26:	pop    edi
 1004e27:	pop    esi
 1004e28:	pop    ebx
 1004e29:	leave  
 1004e2a:	ret    0x4
 1004e2d:	int3   
 1004e2e:	int3   
 1004e2f:	int3   
 1004e30:	int3   
 1004e31:	int3   
 1004e32:	mov    edi,edi
 1004e34:	push   ebp
 1004e35:	mov    ebp,esp
 1004e37:	push   ecx
 1004e38:	push   esi
 1004e39:	push   edi
 1004e3a:	lea    eax,[ebp-0x4]
 1004e3d:	push   eax
 1004e3e:	push   0x2
 1004e40:	push   0x0
 1004e42:	push   0x1001814
 1004e47:	push   0x80000002
 1004e4c:	call   DWORD PTR ds:0x1001010
 1004e52:	test   eax,eax
 1004e54:	jne    0x1004edd
 1004e5a:	push   ebx
 1004e5b:	push   0x10012b0
 1004e60:	push   DWORD PTR [ebp-0x4]
 1004e63:	call   DWORD PTR ds:0x1001004
 1004e69:	mov    ebx,0x1001784
 1004e6e:	mov    edi,0x1001850
 1004e73:	mov    esi,0x10017b8
 1004e78:	test   eax,eax
 1004e7a:	je     0x1004e94
 1004e7c:	cmp    eax,0x2
 1004e7f:	je     0x1004e94
 1004e81:	push   0x0
 1004e83:	push   eax
 1004e84:	push   ebx
 1004e85:	push   edi
 1004e86:	push   0x1cd
 1004e8b:	push   esi
 1004e8c:	call   0x100470a
 1004e91:	add    esp,0x18
 1004e94:	push   0x1001798
 1004e99:	push   DWORD PTR [ebp-0x4]
 1004e9c:	call   DWORD PTR ds:0x1001004
 1004ea2:	test   eax,eax
 1004ea4:	je     0x1004ebe
 1004ea6:	cmp    eax,0x2
 1004ea9:	je     0x1004ebe
 1004eab:	push   0x0
 1004ead:	push   eax
 1004eae:	push   ebx
 1004eaf:	push   edi
 1004eb0:	push   0x1d2
 1004eb5:	push   esi
 1004eb6:	call   0x100470a
 1004ebb:	add    esp,0x18
 1004ebe:	push   DWORD PTR [ebp-0x4]
 1004ec1:	call   DWORD PTR ds:0x1001000
 1004ec7:	pop    ebx
 1004ec8:	test   eax,eax
 1004eca:	je     0x1004efc
 1004ecc:	push   0x0
 1004ece:	push   eax
 1004ecf:	push   0x1001840
 1004ed4:	push   edi
 1004ed5:	push   0x1d6
 1004eda:	push   esi
 1004edb:	jmp    0x1004ef4
 1004edd:	push   0x0
 1004edf:	push   eax
 1004ee0:	push   0x1001830
 1004ee5:	push   0x1001850
 1004eea:	push   0x1d8
 1004eef:	push   0x10017b8
 1004ef4:	call   0x100470a
 1004ef9:	add    esp,0x18
 1004efc:	pop    edi
 1004efd:	pop    esi
 1004efe:	leave  
 1004eff:	ret    
 1004f00:	int3   
 1004f01:	int3   
 1004f02:	int3   
 1004f03:	int3   
 1004f04:	int3   
 1004f05:	mov    edi,edi
 1004f07:	push   ebp
 1004f08:	mov    ebp,esp
 1004f0a:	sub    esp,0x20
 1004f0d:	mov    eax,ds:0x1013054
 1004f12:	xor    eax,ebp
 1004f14:	mov    DWORD PTR [ebp-0x4],eax
 1004f17:	push   esi
 1004f18:	call   DWORD PTR ds:0x1001074
 1004f1e:	lea    ecx,[ebp-0x18]
 1004f21:	push   ecx
 1004f22:	push   0xf01ff
 1004f27:	push   eax
 1004f28:	call   DWORD PTR ds:0x100101c
 1004f2e:	xor    esi,esi
 1004f30:	test   eax,eax
 1004f32:	je     0x1004f7c
 1004f34:	lea    eax,[ebp-0x20]
 1004f37:	push   eax
 1004f38:	push   0x1001884
 1004f3d:	push   esi
 1004f3e:	call   DWORD PTR ds:0x1001018
 1004f44:	test   eax,eax
 1004f46:	je     0x1004f73
 1004f48:	mov    eax,DWORD PTR [ebp-0x20]
 1004f4b:	push   esi
 1004f4c:	mov    DWORD PTR [ebp-0x10],eax
 1004f4f:	mov    eax,DWORD PTR [ebp-0x1c]
 1004f52:	push   esi
 1004f53:	push   esi
 1004f54:	mov    DWORD PTR [ebp-0xc],eax
 1004f57:	lea    eax,[ebp-0x14]
 1004f5a:	push   eax
 1004f5b:	push   esi
 1004f5c:	push   DWORD PTR [ebp-0x18]
 1004f5f:	mov    DWORD PTR [ebp-0x14],0x1
 1004f66:	mov    DWORD PTR [ebp-0x8],0x2
 1004f6d:	call   DWORD PTR ds:0x1001014
 1004f73:	push   DWORD PTR [ebp-0x18]
 1004f76:	call   DWORD PTR ds:0x1001090
 1004f7c:	mov    eax,ds:0x10142a4
 1004f81:	cmp    eax,esi
 1004f83:	je     0x1004fbe
 1004f85:	push   eax
 1004f86:	call   DWORD PTR ds:0x10010a4
 1004f8c:	test   eax,eax
 1004f8e:	jne    0x1004fb8
 1004f90:	call   DWORD PTR ds:0x1001124
 1004f96:	cmp    eax,esi
 1004f98:	je     0x1004fb8
 1004f9a:	push   esi
 1004f9b:	push   eax
 1004f9c:	push   0x1001874
 1004fa1:	push   0x1001864
 1004fa6:	push   0x205
 1004fab:	push   0x10017b8
 1004fb0:	call   0x100470a
 1004fb5:	add    esp,0x18
 1004fb8:	mov    DWORD PTR ds:0x10142a4,esi
 1004fbe:	mov    ecx,DWORD PTR [ebp-0x4]
 1004fc1:	xor    ecx,ebp
 1004fc3:	pop    esi
 1004fc4:	call   0x1008355
 1004fc9:	leave  
 1004fca:	ret    
 1004fcb:	int3   
 1004fcc:	int3   
 1004fcd:	int3   
 1004fce:	int3   
 1004fcf:	int3   
 1004fd0:	mov    edi,edi
 1004fd2:	push   ebp
 1004fd3:	mov    ebp,esp
 1004fd5:	sub    esp,0x98
 1004fdb:	mov    eax,ds:0x1013054
 1004fe0:	xor    eax,ebp
 1004fe2:	mov    DWORD PTR [ebp-0x4],eax
 1004fe5:	lea    eax,[ebp-0x98]
 1004feb:	push   eax
 1004fec:	mov    DWORD PTR [ebp-0x98],0x94
 1004ff6:	call   DWORD PTR ds:0x1001094
 1004ffc:	xor    eax,eax
 1004ffe:	cmp    DWORD PTR [ebp-0x88],0x2
 1005005:	jne    0x1005019
 1005007:	cmp    DWORD PTR [ebp-0x94],0x4
 100500e:	jne    0x1005019
 1005010:	cmp    DWORD PTR [ebp-0x90],eax
 1005016:	jne    0x1005019
 1005018:	inc    eax
 1005019:	mov    ecx,DWORD PTR [ebp-0x4]
 100501c:	xor    ecx,ebp
 100501e:	call   0x1008355
 1005023:	leave  
 1005024:	ret    
 1005025:	int3   
 1005026:	int3   
 1005027:	int3   
 1005028:	int3   
 1005029:	int3   
 100502a:	mov    edi,edi
 100502c:	push   ebp
 100502d:	mov    ebp,esp
 100502f:	sub    esp,0x414
 1005035:	mov    eax,ds:0x1013054
 100503a:	xor    eax,ebp
 100503c:	mov    DWORD PTR [ebp-0x4],eax
 100503f:	push   esi
 1005040:	push   edi
 1005041:	mov    edi,DWORD PTR [ebp+0x8]
 1005044:	mov    esi,0x208
 1005049:	push   esi
 100504a:	lea    eax,[ebp-0x20c]
 1005050:	push   eax
 1005051:	push   edi
 1005052:	call   DWORD PTR ds:0x1001210
 1005058:	test   eax,eax
 100505a:	jne    0x1005084
 100505c:	push   eax
 100505d:	call   DWORD PTR ds:0x1001124
 1005063:	push   eax
 1005064:	push   0x1001904
 1005069:	push   0x10018f0
 100506e:	push   0x3a6
 1005073:	push   0x10017b8
 1005078:	call   0x100470a
 100507d:	add    esp,0x18
 1005080:	xor    eax,eax
 1005082:	jmp    0x10050fb
 1005084:	push   esi
 1005085:	lea    eax,[ebp-0x414]
 100508b:	push   eax
 100508c:	push   edi
 100508d:	call   DWORD PTR ds:0x1001214
 1005093:	test   eax,eax
 1005095:	jne    0x10050b0
 1005097:	push   eax
 1005098:	call   DWORD PTR ds:0x1001124
 100509e:	push   eax
 100509f:	push   0x10018e0
 10050a4:	push   0x10018f0
 10050a9:	push   0x3ab
 10050ae:	jmp    0x1005073
 10050b0:	lea    eax,[ebp-0x20c]
 10050b6:	push   eax
 10050b7:	call   0x10088ec
 10050bc:	lea    eax,[ebp-0x414]
 10050c2:	mov    DWORD PTR [esp],0x10018d8
 10050c9:	push   eax
 10050ca:	call   0x1008480
 10050cf:	pop    ecx
 10050d0:	pop    ecx
 10050d1:	test   eax,eax
 10050d3:	je     0x10050f8
 10050d5:	lea    eax,[ebp-0x20c]
 10050db:	push   eax
 10050dc:	push   eax
 10050dd:	call   0x1008480
 10050e2:	pop    ecx
 10050e3:	pop    ecx
 10050e4:	test   eax,eax
 10050e6:	je     0x10050f8
 10050e8:	push   edi
 10050e9:	call   DWORD PTR ds:0x1001218
 10050ef:	push   edi
 10050f0:	call   DWORD PTR ds:0x100121c
 10050f6:	jmp    0x1005080
 10050f8:	xor    eax,eax
 10050fa:	inc    eax
 10050fb:	mov    ecx,DWORD PTR [ebp-0x4]
 10050fe:	pop    edi
 10050ff:	xor    ecx,ebp
 1005101:	pop    esi
 1005102:	call   0x1008355
 1005107:	leave  
 1005108:	ret    0x8
 100510b:	int3   
 100510c:	int3   
 100510d:	int3   
 100510e:	int3   
 100510f:	int3   
 1005110:	mov    edi,edi
 1005112:	push   ebp
 1005113:	mov    ebp,esp
 1005115:	xor    eax,eax
 1005117:	cmp    DWORD PTR [ebp+0xc],eax
 100511a:	je     0x1005125
 100511c:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
 1005123:	jbe    0x100512a
 1005125:	mov    eax,0x80070057
 100512a:	test   eax,eax
 100512c:	js     0x1005143
 100512e:	push   DWORD PTR [ebp+0x10]
 1005131:	mov    eax,DWORD PTR [ebp+0xc]
 1005134:	mov    ecx,DWORD PTR [ebp+0x8]
 1005137:	push   0x0
 1005139:	mov    edx,0x7ffffffe
 100513e:	call   0x1005f46
 1005143:	pop    ebp
 1005144:	ret    0xc
 1005147:	int3   
 1005148:	int3   
 1005149:	int3   
 100514a:	int3   
 100514b:	int3   
 100514c:	mov    edi,edi
 100514e:	push   ebp
 100514f:	mov    ebp,esp
 1005151:	mov    ecx,DWORD PTR [ebp+0xc]
 1005154:	xor    eax,eax
 1005156:	test   ecx,ecx
 1005158:	je     0x1005162
 100515a:	cmp    ecx,0x7fffffff
 1005160:	jbe    0x1005167
 1005162:	mov    eax,0x80070057
 1005167:	test   eax,eax
 1005169:	js     0x10051a3
 100516b:	push   ebx
 100516c:	push   esi
 100516d:	push   edi
 100516e:	mov    edi,DWORD PTR [ebp+0x8]
 1005171:	lea    eax,[ebp+0x14]
 1005174:	push   eax
 1005175:	push   DWORD PTR [ebp+0x10]
 1005178:	lea    esi,[ecx-0x1]
 100517b:	push   esi
 100517c:	push   edi
 100517d:	xor    ebx,ebx
 100517f:	call   0x1007eae
 1005184:	add    esp,0x10
 1005187:	test   eax,eax
 1005189:	js     0x1005196
 100518b:	cmp    eax,esi
 100518d:	ja     0x1005196
 100518f:	jne    0x100519e
 1005191:	mov    BYTE PTR [esi+edi*1],bl
 1005194:	jmp    0x100519e
 1005196:	mov    BYTE PTR [esi+edi*1],bl
 1005199:	mov    ebx,0x8007007a
 100519e:	pop    edi
 100519f:	pop    esi
 10051a0:	mov    eax,ebx
 10051a2:	pop    ebx
 10051a3:	pop    ebp
 10051a4:	ret    
 10051a5:	int3   
 10051a6:	int3   
 10051a7:	int3   
 10051a8:	int3   
 10051a9:	int3   
 10051aa:	mov    edi,edi
 10051ac:	push   ebp
 10051ad:	mov    ebp,esp
 10051af:	push   DWORD PTR [ebp+0x10]
 10051b2:	push   DWORD PTR [ebp+0xc]
 10051b5:	push   0x100135c
 10051ba:	push   0x104
 10051bf:	push   DWORD PTR [ebp+0x8]
 10051c2:	call   0x100514c
 10051c7:	add    esp,0x14
 10051ca:	test   eax,eax
 10051cc:	jns    0x10051f1
 10051ce:	push   0x0
 10051d0:	push   eax
 10051d1:	push   0x1001920
 10051d6:	push   0x1001914
 10051db:	push   0x1df
 10051e0:	push   0x10015ac
 10051e5:	call   0x100470a
 10051ea:	add    esp,0x18
 10051ed:	xor    eax,eax
 10051ef:	jmp    0x10051f4
 10051f1:	xor    eax,eax
 10051f3:	inc    eax
 10051f4:	pop    ebp
 10051f5:	ret    0xc
 10051f8:	int3   
 10051f9:	int3   
 10051fa:	int3   
 10051fb:	int3   
 10051fc:	int3   
 10051fd:	mov    edi,edi
 10051ff:	push   ebp
 1005200:	mov    ebp,esp
 1005202:	push   DWORD PTR [ebp+0x14]
 1005205:	push   DWORD PTR [ebp+0x10]
 1005208:	push   DWORD PTR [ebp+0xc]
 100520b:	push   0x10012e8
 1005210:	push   0x104
 1005215:	push   DWORD PTR [ebp+0x8]
 1005218:	call   0x100514c
 100521d:	add    esp,0x18
 1005220:	test   eax,eax
 1005222:	jns    0x1005247
 1005224:	push   0x0
 1005226:	push   eax
 1005227:	push   0x1001920
 100522c:	push   0x1001914
 1005231:	push   0x1ec
 1005236:	push   0x10015ac
 100523b:	call   0x100470a
 1005240:	add    esp,0x18
 1005243:	xor    eax,eax
 1005245:	jmp    0x100524a
 1005247:	xor    eax,eax
 1005249:	inc    eax
 100524a:	pop    ebp
 100524b:	ret    0x10
 100524e:	int3   
 100524f:	int3   
 1005250:	int3   
 1005251:	int3   
 1005252:	int3   
 1005253:	mov    edi,edi
 1005255:	push   ebp
 1005256:	mov    ebp,esp
 1005258:	sub    esp,0x248
 100525e:	mov    eax,ds:0x1013054
 1005263:	xor    eax,ebp
 1005265:	mov    DWORD PTR [ebp-0x4],eax
 1005268:	push   esi
 1005269:	mov    esi,DWORD PTR [ebp+0x8]
 100526c:	push   edi
 100526d:	mov    edi,DWORD PTR [ebp+0xc]
 1005270:	push   esi
 1005271:	lea    eax,[ebp-0x108]
 1005277:	test   edi,edi
 1005279:	je     0x10052b8
 100527b:	push   edi
 100527c:	push   eax
 100527d:	call   0x10051aa
 1005282:	test   eax,eax
 1005284:	jne    0x10052e8
 1005286:	push   esi
 1005287:	push   edi
 1005288:	push   0x1001954
 100528d:	push   eax
 100528e:	push   eax
 100528f:	push   0x1001944
 1005294:	push   0x210
 1005299:	push   0x10015ac
 100529e:	call   0x100470a
 10052a3:	add    esp,0x20
 10052a6:	xor    eax,eax
 10052a8:	mov    ecx,DWORD PTR [ebp-0x4]
 10052ab:	pop    edi
 10052ac:	xor    ecx,ebp
 10052ae:	pop    esi
 10052af:	call   0x1008355
 10052b4:	leave  
 10052b5:	ret    0x8
 10052b8:	push   0x104
 10052bd:	push   eax
 10052be:	call   0x1005110
 10052c3:	test   eax,eax
 10052c5:	jns    0x10052e8
 10052c7:	push   0x0
 10052c9:	push   eax
 10052ca:	push   0x1001934
 10052cf:	push   0x1001944
 10052d4:	push   0x216
 10052d9:	push   0x10015ac
 10052de:	call   0x100470a
 10052e3:	add    esp,0x18
 10052e6:	jmp    0x10052a6
 10052e8:	lea    eax,[ebp-0x248]
 10052ee:	push   eax
 10052ef:	lea    eax,[ebp-0x108]
 10052f5:	push   eax
 10052f6:	call   DWORD PTR ds:0x100105c
 10052fc:	cmp    eax,0xffffffff
 10052ff:	je     0x10052a6
 1005301:	push   eax
 1005302:	call   DWORD PTR ds:0x1001058
 1005308:	xor    eax,eax
 100530a:	inc    eax
 100530b:	jmp    0x10052a8
 100530d:	int3   
 100530e:	int3   
 100530f:	int3   
 1005310:	int3   
 1005311:	int3   
 1005312:	mov    edi,edi
 1005314:	push   ebp
 1005315:	mov    ebp,esp
 1005317:	sub    esp,0x108
 100531d:	mov    eax,ds:0x1013054
 1005322:	xor    eax,ebp
 1005324:	mov    DWORD PTR [ebp-0x4],eax
 1005327:	push   ebx
 1005328:	mov    ebx,DWORD PTR [ebp+0x10]
 100532b:	push   edi
 100532c:	xor    edi,edi
 100532e:	cmp    DWORD PTR ds:0x10142ac,edi
 1005334:	je     0x100533b
 1005336:	xor    eax,eax
 1005338:	inc    eax
 1005339:	jmp    0x10053b6
 100533b:	cmp    DWORD PTR [ebp+0x8],edi
 100533e:	je     0x10053b4
 1005340:	cmp    ebx,edi
 1005342:	je     0x10053b4
 1005344:	cmp    DWORD PTR [ebp+0xc],edi
 1005347:	je     0x10053b4
 1005349:	push   esi
 100534a:	mov    esi,0x104
 100534f:	push   esi
 1005350:	lea    eax,[ebp-0x108]
 1005356:	push   eax
 1005357:	push   0x64
 1005359:	push   DWORD PTR ds:0x1014294
 100535f:	call   DWORD PTR ds:0x1001208
 1005365:	test   eax,eax
 1005367:	jne    0x100539f
 1005369:	push   edi
 100536a:	call   DWORD PTR ds:0x1001124
 1005370:	push   eax
 1005371:	push   0x1001998
 1005376:	push   0x1001988
 100537b:	push   0x84
 1005380:	push   0x10017b8
 1005385:	call   0x100470a
 100538a:	add    esp,0x18
 100538d:	push   0x1001978
 1005392:	push   esi
 1005393:	lea    eax,[ebp-0x108]
 1005399:	push   eax
 100539a:	call   0x1005110
 100539f:	push   DWORD PTR [ebp+0xc]
 10053a2:	lea    eax,[ebp-0x108]
 10053a8:	push   eax
 10053a9:	push   ebx
 10053aa:	push   edi
 10053ab:	call   DWORD PTR ds:0x100120c
 10053b1:	pop    esi
 10053b2:	jmp    0x10053b6
 10053b4:	xor    eax,eax
 10053b6:	mov    ecx,DWORD PTR [ebp-0x4]
 10053b9:	pop    edi
 10053ba:	xor    ecx,ebp
 10053bc:	pop    ebx
 10053bd:	call   0x1008355
 10053c2:	leave  
 10053c3:	ret    0x14
 10053c6:	int3   
 10053c7:	int3   
 10053c8:	int3   
 10053c9:	int3   
 10053ca:	int3   
 10053cb:	mov    edi,edi
 10053cd:	push   ebp
 10053ce:	mov    ebp,esp
 10053d0:	sub    esp,0x21c
 10053d6:	mov    eax,ds:0x1013054
 10053db:	xor    eax,ebp
 10053dd:	mov    DWORD PTR [ebp-0x4],eax
 10053e0:	push   ebx
 10053e1:	push   esi
 10053e2:	push   0x41
 10053e4:	pop    esi
 10053e5:	push   0x104
 10053ea:	lea    eax,[ebp-0x20c]
 10053f0:	xor    ebx,ebx
 10053f2:	push   eax
 10053f3:	mov    DWORD PTR [ebp-0x214],esi
 10053f9:	mov    DWORD PTR [ebp-0x210],ebx
 10053ff:	call   DWORD PTR ds:0x10010a0
 1005405:	test   eax,eax
 1005407:	jne    0x100541b
 1005409:	push   0x1001a10
 100540e:	call   DWORD PTR ds:0x100111c
 1005414:	mov    eax,esi
 1005416:	jmp    0x100553e
 100541b:	push   0x10012f4
 1005420:	push   0x10012f0
 1005425:	lea    eax,[ebp-0x20c]
 100542b:	push   eax
 100542c:	lea    eax,[ebp-0x108]
 1005432:	push   eax
 1005433:	call   0x10051fd
 1005438:	test   eax,eax
 100543a:	jne    0x1005443
 100543c:	push   0x10019cc
 1005441:	jmp    0x100540e
 1005443:	push   edi
 1005444:	push   ebx
 1005445:	push   ebx
 1005446:	push   0x3
 1005448:	push   ebx
 1005449:	push   ebx
 100544a:	push   0x80000000
 100544f:	lea    eax,[ebp-0x108]
 1005455:	push   eax
 1005456:	call   DWORD PTR ds:0x100106c
 100545c:	mov    edi,eax
 100545e:	mov    DWORD PTR [ebp-0x218],edi
 1005464:	cmp    edi,0xffffffff
 1005467:	je     0x1005537
 100546d:	push   ebx
 100546e:	push   edi
 100546f:	call   DWORD PTR ds:0x1001068
 1005475:	mov    esi,eax
 1005477:	cmp    esi,0xffffffff
 100547a:	je     0x100550c
 1005480:	push   esi
 1005481:	call   0x1008579
 1005486:	pop    ecx
 1005487:	mov    DWORD PTR [ebp-0x210],eax
 100548d:	cmp    eax,ebx
 100548f:	je     0x100550c
 1005491:	push   ebx
 1005492:	lea    eax,[ebp-0x21c]
 1005498:	push   eax
 1005499:	push   esi
 100549a:	push   DWORD PTR [ebp-0x210]
 10054a0:	push   edi
 10054a1:	call   DWORD PTR ds:0x1001064
 10054a7:	test   eax,eax
 10054a9:	je     0x100550c
 10054ab:	push   0x10019b4
 10054b0:	push   DWORD PTR [ebp-0x210]
 10054b6:	call   0x1008480
 10054bb:	pop    ecx
 10054bc:	pop    ecx
 10054bd:	cmp    eax,ebx
 10054bf:	je     0x100550c
 10054c1:	mov    esi,0x10019a8
 10054c6:	push   esi
 10054c7:	push   eax
 10054c8:	call   0x1008480
 10054cd:	mov    edi,eax
 10054cf:	pop    ecx
 10054d0:	pop    ecx
 10054d1:	cmp    edi,ebx
 10054d3:	je     0x100550c
 10054d5:	push   esi
 10054d6:	call   DWORD PTR ds:0x1001060
 10054dc:	add    edi,eax
 10054de:	push   0x20
 10054e0:	push   edi
 10054e1:	call   0x10083b0
 10054e6:	pop    ecx
 10054e7:	pop    ecx
 10054e8:	cmp    eax,ebx
 10054ea:	je     0x10054ee
 10054ec:	mov    BYTE PTR [eax],bl
 10054ee:	push   edi
 10054ef:	call   0x100894e
 10054f4:	pop    ecx
 10054f5:	mov    ecx,eax
 10054f7:	mov    eax,0x3ff
 10054fc:	add    ecx,eax
 10054fe:	shr    ecx,0xa
 1005501:	add    ecx,eax
 1005503:	shr    ecx,0xa
 1005506:	mov    DWORD PTR [ebp-0x214],ecx
 100550c:	push   DWORD PTR [ebp-0x218]
 1005512:	call   DWORD PTR ds:0x1001090
 1005518:	cmp    DWORD PTR [ebp-0x210],ebx
 100551e:	je     0x100552c
 1005520:	push   DWORD PTR [ebp-0x210]
 1005526:	call   0x100850b
 100552b:	pop    ecx
 100552c:	push   0x41
 100552e:	pop    eax
 100552f:	cmp    DWORD PTR [ebp-0x214],eax
 1005535:	jb     0x100553d
 1005537:	mov    eax,DWORD PTR [ebp-0x214]
 100553d:	pop    edi
 100553e:	mov    ecx,DWORD PTR [ebp-0x4]
 1005541:	pop    esi
 1005542:	xor    ecx,ebp
 1005544:	pop    ebx
 1005545:	call   0x1008355
 100554a:	leave  
 100554b:	ret    
 100554c:	int3   
 100554d:	int3   
 100554e:	int3   
 100554f:	int3   
 1005550:	int3   
 1005551:	mov    edi,edi
 1005553:	push   ebp
 1005554:	mov    ebp,esp
 1005556:	sub    esp,0x314
 100555c:	mov    eax,ds:0x1013054
 1005561:	xor    eax,ebp
 1005563:	mov    DWORD PTR [ebp-0x4],eax
 1005566:	mov    eax,DWORD PTR [ebp+0x8]
 1005569:	push   ebx
 100556a:	push   esi
 100556b:	push   edi
 100556c:	push   0x14
 100556e:	add    eax,0xffffff96
 1005571:	pop    ecx
 1005572:	cmp    ecx,eax
 1005574:	sbb    eax,eax
 1005576:	and    eax,0x30
 1005579:	add    eax,0x10
 100557c:	mov    DWORD PTR [ebp-0x314],eax
 1005582:	mov    esi,0x104
 1005587:	push   esi
 1005588:	lea    eax,[ebp-0x310]
 100558e:	push   eax
 100558f:	push   0x64
 1005591:	push   DWORD PTR ds:0x1014294
 1005597:	call   DWORD PTR ds:0x1001208
 100559d:	mov    edi,DWORD PTR ds:0x1001124
 10055a3:	mov    ebx,0x10017b8
 10055a8:	test   eax,eax
 10055aa:	jne    0x10055db
 10055ac:	push   0x0
 10055ae:	call   edi
 10055b0:	push   eax
 10055b1:	push   0x1001998
 10055b6:	push   0x1001a68
 10055bb:	push   0x14f
 10055c0:	push   ebx
 10055c1:	call   0x100470a
 10055c6:	add    esp,0x18
 10055c9:	push   0x1001978
 10055ce:	push   esi
 10055cf:	lea    eax,[ebp-0x310]
 10055d5:	push   eax
 10055d6:	call   0x1005110
 10055db:	mov    eax,0x82
 10055e0:	push   esi
 10055e1:	cmp    DWORD PTR [ebp+0x8],eax
 10055e4:	je     0x1005675
 10055ea:	lea    eax,[ebp-0x20c]
 10055f0:	push   eax
 10055f1:	push   DWORD PTR [ebp+0x8]
 10055f4:	push   DWORD PTR ds:0x1014294
 10055fa:	call   DWORD PTR ds:0x1001208
 1005600:	test   eax,eax
 1005602:	jne    0x100562e
 1005604:	push   DWORD PTR [ebp+0x8]
 1005607:	push   0x1001a58
 100560c:	call   edi
 100560e:	push   eax
 100560f:	push   0x1001998
 1005614:	push   0x1001a68
 1005619:	push   0x155
 100561e:	push   ebx
 100561f:	call   0x100470a
 1005624:	add    esp,0x1c
 1005627:	xor    eax,eax
 1005629:	jmp    0x10056e8
 100562e:	cmp    DWORD PTR [ebp+0x8],0x6f
 1005632:	jne    0x10056c8
 1005638:	push   esi
 1005639:	lea    eax,[ebp-0x108]
 100563f:	push   eax
 1005640:	push   0x6f
 1005642:	push   DWORD PTR ds:0x1014294
 1005648:	call   DWORD PTR ds:0x1001208
 100564e:	test   eax,eax
 1005650:	jne    0x100566d
 1005652:	push   0x6f
 1005654:	push   0x1001a58
 1005659:	call   edi
 100565b:	push   eax
 100565c:	push   0x1001998
 1005661:	push   0x1001a68
 1005666:	push   0x15e
 100566b:	jmp    0x100561e
 100566d:	call   0x10053cb
 1005672:	push   eax
 1005673:	jmp    0x10056b1
 1005675:	lea    ecx,[ebp-0x108]
 100567b:	push   ecx
 100567c:	push   eax
 100567d:	push   DWORD PTR ds:0x1014294
 1005683:	call   DWORD PTR ds:0x1001208
 1005689:	test   eax,eax
 100568b:	jne    0x10056ae
 100568d:	push   0x82
 1005692:	push   0x1001a58
 1005697:	call   edi
 1005699:	push   eax
 100569a:	push   0x1001998
 100569f:	push   0x1001a68
 10056a4:	push   0x165
 10056a9:	jmp    0x100561e
 10056ae:	push   DWORD PTR [ebp+0xc]
 10056b1:	lea    eax,[ebp-0x108]
 10056b7:	push   eax
 10056b8:	lea    eax,[ebp-0x20c]
 10056be:	push   esi
 10056bf:	push   eax
 10056c0:	call   0x100514c
 10056c5:	add    esp,0x10
 10056c8:	push   DWORD PTR [ebp-0x314]
 10056ce:	lea    eax,[ebp-0x310]
 10056d4:	push   eax
 10056d5:	lea    eax,[ebp-0x20c]
 10056db:	push   eax
 10056dc:	push   DWORD PTR ds:0x10142a8
 10056e2:	call   DWORD PTR ds:0x100120c
 10056e8:	mov    ecx,DWORD PTR [ebp-0x4]
 10056eb:	pop    edi
 10056ec:	pop    esi
 10056ed:	xor    ecx,ebp
 10056ef:	pop    ebx
 10056f0:	call   0x1008355
 10056f5:	leave  
 10056f6:	ret    
 10056f7:	int3   
 10056f8:	int3   
 10056f9:	int3   
 10056fa:	int3   
 10056fb:	int3   
 10056fc:	mov    edi,edi
 10056fe:	push   ebp
 10056ff:	mov    ebp,esp
 1005701:	sub    esp,0x21c
 1005707:	mov    eax,ds:0x1013054
 100570c:	xor    eax,ebp
 100570e:	mov    DWORD PTR [ebp-0x4],eax
 1005711:	push   esi
 1005712:	push   edi
 1005713:	push   0x103
 1005718:	xor    edi,edi
 100571a:	lea    eax,[ebp-0x117]
 1005720:	push   edi
 1005721:	push   eax
 1005722:	mov    BYTE PTR [ebp-0x118],0x0
 1005729:	call   0x1008600
 100572e:	add    esp,0xc
 1005731:	lea    eax,[ebp-0x118]
 1005737:	push   eax
 1005738:	mov    esi,0x104
 100573d:	push   esi
 100573e:	call   DWORD PTR ds:0x1001070
 1005744:	test   eax,eax
 1005746:	je     0x1005883
 100574c:	lea    eax,[ebp-0x118]
 1005752:	push   eax
 1005753:	push   0x1001ae8
 1005758:	call   0x1005253
 100575d:	test   eax,eax
 100575f:	je     0x1005781
 1005761:	lea    eax,[ebp-0x118]
 1005767:	push   eax
 1005768:	push   0x1001ad8
 100576d:	call   0x1005253
 1005772:	test   eax,eax
 1005774:	jne    0x10058a7
 100577a:	push   0x1001ac8
 100577f:	jmp    0x1005786
 1005781:	push   0x1001abc
 1005786:	push   0xd
 1005788:	lea    eax,[ebp-0x14]
 100578b:	push   eax
 100578c:	call   0x1005110
 1005791:	push   ebx
 1005792:	lea    eax,[ebp-0x14]
 1005795:	push   eax
 1005796:	push   0x1001aa8
 100579b:	push   edi
 100579c:	push   edi
 100579d:	mov    ebx,0x1001a9c
 10057a2:	push   ebx
 10057a3:	push   0x289
 10057a8:	mov    edi,0x10017b8
 10057ad:	push   edi
 10057ae:	call   0x100470a
 10057b3:	add    esp,0x1c
 10057b6:	push   esi
 10057b7:	lea    eax,[ebp-0x21c]
 10057bd:	push   eax
 10057be:	push   0xd9
 10057c3:	push   DWORD PTR ds:0x1014294
 10057c9:	call   DWORD PTR ds:0x1001208
 10057cf:	test   eax,eax
 10057d1:	jne    0x1005801
 10057d3:	push   eax
 10057d4:	call   DWORD PTR ds:0x1001124
 10057da:	push   eax
 10057db:	push   0x1001998
 10057e0:	push   ebx
 10057e1:	push   0x28c
 10057e6:	push   edi
 10057e7:	call   0x100470a
 10057ec:	add    esp,0x18
 10057ef:	push   0x1001a88
 10057f4:	push   esi
 10057f5:	lea    eax,[ebp-0x21c]
 10057fb:	push   eax
 10057fc:	call   0x1005110
 1005801:	lea    eax,[ebp-0x14]
 1005804:	push   eax
 1005805:	lea    eax,[ebp-0x21c]
 100580b:	push   eax
 100580c:	lea    eax,[ebp-0x118]
 1005812:	push   esi
 1005813:	push   eax
 1005814:	call   0x100514c
 1005819:	add    esp,0x10
 100581c:	push   esi
 100581d:	lea    eax,[ebp-0x21c]
 1005823:	push   eax
 1005824:	push   0x64
 1005826:	push   DWORD PTR ds:0x1014294
 100582c:	call   DWORD PTR ds:0x1001208
 1005832:	test   eax,eax
 1005834:	jne    0x1005864
 1005836:	push   eax
 1005837:	call   DWORD PTR ds:0x1001124
 100583d:	push   eax
 100583e:	push   0x1001998
 1005843:	push   ebx
 1005844:	push   0x292
 1005849:	push   edi
 100584a:	call   0x100470a
 100584f:	add    esp,0x18
 1005852:	push   0x1001978
 1005857:	push   esi
 1005858:	lea    eax,[ebp-0x21c]
 100585e:	push   eax
 100585f:	call   0x1005110
 1005864:	push   0x10
 1005866:	lea    eax,[ebp-0x21c]
 100586c:	push   eax
 100586d:	lea    eax,[ebp-0x118]
 1005873:	push   eax
 1005874:	push   DWORD PTR ds:0x10142a8
 100587a:	call   DWORD PTR ds:0x100120c
 1005880:	pop    ebx
 1005881:	jmp    0x10058a7
 1005883:	push   edi
 1005884:	call   DWORD PTR ds:0x1001124
 100588a:	push   eax
 100588b:	push   0x1001a70
 1005890:	push   0x1001a9c
 1005895:	push   0x285
 100589a:	push   0x10017b8
 100589f:	call   0x100470a
 10058a4:	add    esp,0x18
 10058a7:	mov    ecx,DWORD PTR [ebp-0x4]
 10058aa:	pop    edi
 10058ab:	xor    ecx,ebp
 10058ad:	pop    esi
 10058ae:	call   0x1008355
 10058b3:	leave  
 10058b4:	ret    
 10058b5:	int3   
 10058b6:	int3   
 10058b7:	int3   
 10058b8:	int3   
 10058b9:	int3   
 10058ba:	mov    edi,edi
 10058bc:	push   ebp
 10058bd:	mov    ebp,esp
 10058bf:	push   ecx
 10058c0:	push   ecx
 10058c1:	push   ebx
 10058c2:	push   esi
 10058c3:	push   edi
 10058c4:	mov    esi,0x1001b84
 10058c9:	lea    edi,[ebp-0x4]
 10058cc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
 10058ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10058cf:	mov    edi,DWORD PTR [ebp+0x8]
 10058d2:	xor    ebx,ebx
 10058d4:	mov    DWORD PTR [ebp-0x8],0x4
 10058db:	cmp    edi,ebx
 10058dd:	je     0x10059e6
 10058e3:	cmp    BYTE PTR [edi],bl
 10058e5:	je     0x10059e6
 10058eb:	push   edi
 10058ec:	push   0x1001b74
 10058f1:	call   0x10045b8
 10058f6:	mov    esi,0x104
 10058fb:	push   esi
 10058fc:	call   0x1008579
 1005901:	add    esp,0xc
 1005904:	mov    DWORD PTR [ebp+0x8],eax
 1005907:	cmp    eax,ebx
 1005909:	jne    0x1005931
 100590b:	push   0x1001b50
 1005910:	push   ebx
 1005911:	push   ebx
 1005912:	push   0x1001b3c
 1005917:	push   0x2a9
 100591c:	push   0x10017b8
 1005921:	call   0x100470a
 1005926:	add    esp,0x18
 1005929:	push   0x4
 100592b:	pop    eax
 100592c:	jmp    0x10059f3
 1005931:	push   edi
 1005932:	push   esi
 1005933:	push   eax
 1005934:	call   0x1005110
 1005939:	cmp    eax,ebx
 100593b:	jge    0x1005962
 100593d:	push   edi
 100593e:	push   0x1001b20
 1005943:	push   eax
 1005944:	push   0x1001b0c
 1005949:	push   0x1001b3c
 100594e:	push   0x2af
 1005953:	push   0x10017b8
 1005958:	call   0x100470a
 100595d:	add    esp,0x1c
 1005960:	jmp    0x1005929
 1005962:	push   DWORD PTR [ebp+0x8]
 1005965:	call   DWORD PTR ds:0x1001204
 100596b:	lea    eax,[ebp-0x4]
 100596e:	push   eax
 100596f:	push   DWORD PTR [ebp+0x8]
 1005972:	jmp    0x10059c3
 1005974:	mov    esi,0x1013000
 1005979:	cmp    DWORD PTR ds:0x1013000,ebx
 100597f:	je     0x10059d2
 1005981:	push   DWORD PTR [esi]
 1005983:	push   edi
 1005984:	call   DWORD PTR ds:0x10010b0
 100598a:	test   eax,eax
 100598c:	je     0x1005997
 100598e:	add    esi,0xc
 1005991:	cmp    DWORD PTR [esi],ebx
 1005993:	jne    0x1005981
 1005995:	jmp    0x10059ba
 1005997:	mov    eax,DWORD PTR [esi+0x4]
 100599a:	cmp    eax,0x4
 100599d:	je     0x10059ad
 100599f:	cmp    DWORD PTR [ebp-0x8],0x4
 10059a3:	je     0x10059aa
 10059a5:	cmp    DWORD PTR [ebp-0x8],ebx
 10059a8:	jne    0x10059ad
 10059aa:	mov    DWORD PTR [ebp-0x8],eax
 10059ad:	mov    eax,DWORD PTR [esi+0x8]
 10059b0:	cmp    eax,ebx
 10059b2:	je     0x10059ba
 10059b4:	mov    DWORD PTR [eax],0x1
 10059ba:	cmp    DWORD PTR [esi],ebx
 10059bc:	je     0x10059d2
 10059be:	lea    eax,[ebp-0x4]
 10059c1:	push   eax
 10059c2:	push   ebx
 10059c3:	call   0x1008969
 10059c8:	mov    edi,eax
 10059ca:	pop    ecx
 10059cb:	pop    ecx
 10059cc:	cmp    edi,ebx
 10059ce:	jne    0x1005974
 10059d0:	jmp    0x10059d9
 10059d2:	mov    DWORD PTR [ebp-0x8],0x4
 10059d9:	push   DWORD PTR [ebp+0x8]
 10059dc:	call   0x100850b
 10059e1:	mov    eax,DWORD PTR [ebp-0x8]
 10059e4:	jmp    0x10059f2
 10059e6:	push   0x1001af4
 10059eb:	call   0x10045b8
 10059f0:	xor    eax,eax
 10059f2:	pop    ecx
 10059f3:	pop    edi
 10059f4:	pop    esi
 10059f5:	pop    ebx
 10059f6:	leave  
 10059f7:	ret    0x4
 10059fa:	int3   
 10059fb:	int3   
 10059fc:	int3   
 10059fd:	int3   
 10059fe:	int3   
 10059ff:	mov    edi,edi
 1005a01:	push   ebp
 1005a02:	mov    ebp,esp
 1005a04:	sub    esp,0x108
 1005a0a:	mov    eax,ds:0x1013054
 1005a0f:	xor    eax,ebp
 1005a11:	mov    DWORD PTR [ebp-0x4],eax
 1005a14:	push   0x104
 1005a19:	lea    eax,[ebp-0x108]
 1005a1f:	push   eax
 1005a20:	push   DWORD PTR ds:0x1014294
 1005a26:	call   DWORD PTR ds:0x1001078
 1005a2c:	test   eax,eax
 1005a2e:	jne    0x1005a5c
 1005a30:	push   eax
 1005a31:	call   DWORD PTR ds:0x1001124
 1005a37:	push   eax
 1005a38:	push   0x1001ba4
 1005a3d:	push   0x1001c30
 1005a42:	push   0x3d2
 1005a47:	push   0x10017b8
 1005a4c:	call   0x100470a
 1005a51:	add    esp,0x18
 1005a54:	or     eax,0xffffffff
 1005a57:	jmp    0x1005ae5
 1005a5c:	lea    eax,[ebp-0x108]
 1005a62:	push   0x5c
 1005a64:	push   eax
 1005a65:	call   0x1008370
 1005a6a:	pop    ecx
 1005a6b:	pop    ecx
 1005a6c:	test   eax,eax
 1005a6e:	je     0x1005ad8
 1005a70:	mov    BYTE PTR [eax+0x1],0x0
 1005a74:	lea    eax,[ebp-0x108]
 1005a7a:	push   eax
 1005a7b:	push   0x1001c24
 1005a80:	call   0x1005253
 1005a85:	test   eax,eax
 1005a87:	jne    0x1005ae3
 1005a89:	lea    eax,[ebp-0x108]
 1005a8f:	push   eax
 1005a90:	push   0x1001c18
 1005a95:	call   0x1005253
 1005a9a:	test   eax,eax
 1005a9c:	jne    0x1005ae3
 1005a9e:	lea    eax,[ebp-0x108]
 1005aa4:	push   eax
 1005aa5:	push   0x1001c0c
 1005aaa:	call   0x1005253
 1005aaf:	test   eax,eax
 1005ab1:	jne    0x1005ac8
 1005ab3:	lea    eax,[ebp-0x108]
 1005ab9:	push   eax
 1005aba:	push   0x1001c00
 1005abf:	call   0x1005253
 1005ac4:	test   eax,eax
 1005ac6:	je     0x1005ae3
 1005ac8:	push   0x1001be8
 1005acd:	call   0x10045b8
 1005ad2:	xor    eax,eax
 1005ad4:	pop    ecx
 1005ad5:	inc    eax
 1005ad6:	jmp    0x1005ae5
 1005ad8:	push   0x1001bb8
 1005add:	call   0x10045b8
 1005ae2:	pop    ecx
 1005ae3:	xor    eax,eax
 1005ae5:	mov    ecx,DWORD PTR [ebp-0x4]
 1005ae8:	xor    ecx,ebp
 1005aea:	call   0x1008355
 1005aef:	leave  
 1005af0:	ret    
 1005af1:	int3   
 1005af2:	int3   
 1005af3:	int3   
 1005af4:	int3   
 1005af5:	int3   
 1005af6:	mov    edi,edi
 1005af8:	push   ebp
 1005af9:	mov    ebp,esp
 1005afb:	push   ecx
 1005afc:	push   ecx
 1005afd:	push   edi
 1005afe:	push   0x1001978
 1005b03:	xor    edi,edi
 1005b05:	push   edi
 1005b06:	push   edi
 1005b07:	call   DWORD PTR ds:0x1001080
 1005b0d:	mov    DWORD PTR [ebp-0x4],eax
 1005b10:	cmp    eax,edi
 1005b12:	je     0x1005ef8
 1005b18:	call   DWORD PTR ds:0x1001124
 1005b1e:	cmp    eax,0xb7
 1005b23:	je     0x1005eef
 1005b29:	mov    eax,DWORD PTR [ebp+0x8]
 1005b2c:	push   esi
 1005b2d:	push   DWORD PTR [ebp+0x10]
 1005b30:	mov    ds:0x1014294,eax
 1005b35:	call   0x10058ba
 1005b3a:	mov    esi,eax
 1005b3c:	mov    DWORD PTR [ebp-0x8],esi
 1005b3f:	cmp    esi,0x4
 1005b42:	jne    0x1005b6e
 1005b44:	push   0x1001da0
 1005b49:	push   edi
 1005b4a:	push   edi
 1005b4b:	push   0x1001d98
 1005b50:	push   0x413
 1005b55:	push   0x10017b8
 1005b5a:	call   0x100470a
 1005b5f:	push   0x83
 1005b64:	call   0x1005551
 1005b69:	add    esp,0x1c
 1005b6c:	jmp    0x1005bb0
 1005b6e:	call   0x10059ff
 1005b73:	mov    DWORD PTR [ebp+0x10],eax
 1005b76:	cmp    eax,0xffffffff
 1005b79:	je     0x1005c4f
 1005b7f:	cmp    eax,edi
 1005b81:	jne    0x1005bbc
 1005b83:	cmp    esi,edi
 1005b85:	je     0x1005bbc
 1005b87:	push   esi
 1005b88:	push   0x1001d50
 1005b8d:	push   edi
 1005b8e:	push   edi
 1005b8f:	push   0x1001d98
 1005b94:	push   0x421
 1005b99:	push   0x10017b8
 1005b9e:	call   0x100470a
 1005ba3:	push   0x83
 1005ba8:	call   0x1005551
 1005bad:	add    esp,0x20
 1005bb0:	mov    DWORD PTR [ebp+0x10],0xfffffff7
 1005bb7:	jmp    0x1005ee0
 1005bbc:	call   0x1004fd0
 1005bc1:	test   eax,eax
 1005bc3:	je     0x1005bfc
 1005bc5:	push   0x1001d0c
 1005bca:	push   edi
 1005bcb:	push   edi
 1005bcc:	push   0x1001d98
 1005bd1:	push   0x429
 1005bd6:	push   0x10017b8
 1005bdb:	call   0x100470a
 1005be0:	add    esp,0x18
 1005be3:	cmp    DWORD PTR ds:0x10142ac,edi
 1005be9:	jne    0x1005bf3
 1005beb:	push   0x67
 1005bed:	call   0x1005551
 1005bf2:	pop    ecx
 1005bf3:	or     DWORD PTR [ebp+0x10],0xffffffff
 1005bf7:	jmp    0x1005ee0
 1005bfc:	call   0x10049e8
 1005c01:	test   eax,eax
 1005c03:	jne    0x1005c27
 1005c05:	push   0x1001ccc
 1005c0a:	push   edi
 1005c0b:	push   edi
 1005c0c:	push   0x1001d98
 1005c11:	push   0x431
 1005c16:	push   0x10017b8
 1005c1b:	call   0x100470a
 1005c20:	add    esp,0x18
 1005c23:	push   0xfffffff1
 1005c25:	jmp    0x1005c51
 1005c27:	push   esi
 1005c28:	call   0x1004d14
 1005c2d:	test   eax,eax
 1005c2f:	jne    0x1005c73
 1005c31:	push   0x1001cac
 1005c36:	push   edi
 1005c37:	push   edi
 1005c38:	push   0x1001d98
 1005c3d:	push   0x45d
 1005c42:	push   0x10017b8
 1005c47:	call   0x100470a
 1005c4c:	add    esp,0x18
 1005c4f:	push   0xfffffff7
 1005c51:	pop    esi
 1005c52:	cmp    DWORD PTR ds:0x10142ac,edi
 1005c58:	jne    0x1005c6b
 1005c5a:	mov    eax,esi
 1005c5c:	cdq    
 1005c5d:	xor    eax,edx
 1005c5f:	sub    eax,edx
 1005c61:	add    eax,0x69
 1005c64:	push   eax
 1005c65:	call   0x1005551
 1005c6a:	pop    ecx
 1005c6b:	mov    DWORD PTR [ebp+0x10],esi
 1005c6e:	jmp    0x1005ee0
 1005c73:	mov    esi,DWORD PTR ds:0x100107c
 1005c79:	push   ebx
 1005c7a:	push   0x8001
 1005c7f:	call   esi
 1005c81:	push   0x1001abc
 1005c86:	mov    ebx,eax
 1005c88:	call   DWORD PTR ds:0x1001098
 1005c8e:	push   ebx
 1005c8f:	mov    ds:0x10142a4,eax
 1005c94:	call   esi
 1005c96:	mov    eax,ds:0x10142a4
 1005c9b:	cmp    eax,edi
 1005c9d:	je     0x1005eaf
 1005ca3:	mov    esi,DWORD PTR ds:0x100109c
 1005ca9:	push   0x1001c9c
 1005cae:	push   eax
 1005caf:	call   esi
 1005cb1:	push   0x1001c84
 1005cb6:	push   DWORD PTR ds:0x10142a4
 1005cbc:	mov    ds:0x1014298,eax
 1005cc1:	call   esi
 1005cc3:	push   0x1001c6c
 1005cc8:	push   DWORD PTR ds:0x10142a4
 1005cce:	mov    ds:0x101429c,eax
 1005cd3:	call   esi
 1005cd5:	mov    ds:0x10142a0,eax
 1005cda:	cmp    DWORD PTR ds:0x1014298,edi
 1005ce0:	je     0x1005e53
 1005ce6:	mov    ecx,DWORD PTR ds:0x101429c
 1005cec:	cmp    ecx,edi
 1005cee:	je     0x1005e53
 1005cf4:	cmp    eax,edi
 1005cf6:	je     0x1005e53
 1005cfc:	mov    esi,0x1005312
 1005d01:	push   esi
 1005d02:	call   ecx
 1005d04:	mov    eax,ds:0x101429c
 1005d09:	cmp    eax,edi
 1005d0b:	je     0x1005d18
 1005d0d:	cmp    DWORD PTR ds:0x10142ac,edi
 1005d13:	je     0x1005d18
 1005d15:	push   esi
 1005d16:	call   eax
 1005d18:	mov    eax,DWORD PTR [ebp-0x8]
 1005d1b:	cmp    eax,0x3
 1005d1e:	jne    0x1005da4
 1005d24:	push   0x2010098
 1005d29:	push   edi
 1005d2a:	push   edi
 1005d2b:	call   DWORD PTR ds:0x1014298
 1005d31:	mov    esi,eax
 1005d33:	mov    DWORD PTR [ebp+0x10],esi
 1005d36:	call   0x1004e32
 1005d3b:	cmp    esi,0x1
 1005d3e:	jne    0x1005d7f
 1005d40:	push   0x68
 1005d42:	call   0x1005551
 1005d47:	pop    ecx
 1005d48:	push   0x10
 1005d4a:	call   DWORD PTR ds:0x10011f8
 1005d50:	test   ax,ax
 1005d53:	jns    0x1005d61
 1005d55:	push   0x1001898
 1005d5a:	call   0x10045b8
 1005d5f:	jmp    0x1005d9e
 1005d61:	push   0x10018ac
 1005d66:	call   0x10045b8
 1005d6b:	pop    ecx
 1005d6c:	call   0x1004f05
 1005d71:	push   edi
 1005d72:	push   0x2
 1005d74:	call   DWORD PTR ds:0x10011fc
 1005d7a:	jmp    0x1005edf
 1005d7f:	cmp    esi,0xfffffff7
 1005d82:	jne    0x1005d8e
 1005d84:	call   0x10056fc
 1005d89:	jmp    0x1005edf
 1005d8e:	mov    eax,esi
 1005d90:	cdq    
 1005d91:	xor    eax,edx
 1005d93:	sub    eax,edx
 1005d95:	add    eax,0x69
 1005d98:	push   eax
 1005d99:	call   0x1005551
 1005d9e:	pop    ecx
 1005d9f:	jmp    0x1005edf
 1005da4:	cmp    eax,0x1
 1005da7:	je     0x1005e39
 1005dad:	cmp    eax,0x2
 1005db0:	je     0x1005e39
 1005db6:	cmp    DWORD PTR ds:0x10142ac,edi
 1005dbc:	jne    0x1005e39
 1005dbe:	cmp    eax,edi
 1005dc0:	jne    0x1005e16
 1005dc2:	call   DWORD PTR ds:0x100102c
 1005dc8:	mov    eax,ds:0x10142a4
 1005dcd:	cmp    eax,edi
 1005dcf:	je     0x1005e0c
 1005dd1:	push   eax
 1005dd2:	call   DWORD PTR ds:0x10010a4
 1005dd8:	test   eax,eax
 1005dda:	jne    0x1005e06
 1005ddc:	call   DWORD PTR ds:0x1001124
 1005de2:	cmp    eax,edi
 1005de4:	je     0x1005e06
 1005de6:	push   edi
 1005de7:	push   eax
 1005de8:	push   0x1001874
 1005ded:	push   0x1001d98
 1005df2:	push   0x4d3
 1005df7:	push   0x10017b8
 1005dfc:	call   0x100470a
 1005e01:	add    esp,0x18
 1005e04:	jmp    0x1005e0c
 1005e06:	mov    DWORD PTR ds:0x10142a4,edi
 1005e0c:	push   DWORD PTR [ebp+0x8]
 1005e0f:	call   0x1007764
 1005e14:	jmp    0x1005e49
 1005e16:	push   0x1001c50
 1005e1b:	push   edi
 1005e1c:	push   edi
 1005e1d:	push   0x1001d98
 1005e22:	push   0x4de
 1005e27:	push   0x10017b8
 1005e2c:	call   0x100470a
 1005e31:	add    esp,0x18
 1005e34:	jmp    0x1005edf
 1005e39:	push   0x2010098
 1005e3e:	push   edi
 1005e3f:	push   edi
 1005e40:	call   DWORD PTR ds:0x1014298
 1005e46:	mov    DWORD PTR [ebp+0x10],eax
 1005e49:	call   0x1004e32
 1005e4e:	jmp    0x1005edf
 1005e53:	push   0x1001c3c
 1005e58:	call   DWORD PTR ds:0x1001124
 1005e5e:	push   eax
 1005e5f:	push   0x10015ec
 1005e64:	mov    ebx,0x1001d98
 1005e69:	push   ebx
 1005e6a:	push   0x47a
 1005e6f:	mov    esi,0x10017b8
 1005e74:	push   esi
 1005e75:	call   0x100470a
 1005e7a:	add    esp,0x18
 1005e7d:	push   DWORD PTR ds:0x10142a4
 1005e83:	call   DWORD PTR ds:0x10010a4
 1005e89:	test   eax,eax
 1005e8b:	jne    0x1005ed8
 1005e8d:	call   DWORD PTR ds:0x1001124
 1005e93:	cmp    eax,edi
 1005e95:	je     0x1005ed8
 1005e97:	push   edi
 1005e98:	push   eax
 1005e99:	push   0x1001874
 1005e9e:	push   ebx
 1005e9f:	push   0x47d
 1005ea4:	push   esi
 1005ea5:	call   0x100470a
 1005eaa:	add    esp,0x18
 1005ead:	jmp    0x1005ed8
 1005eaf:	push   edi
 1005eb0:	call   DWORD PTR ds:0x1001124
 1005eb6:	push   eax
 1005eb7:	push   0x1001588
 1005ebc:	push   0x1001d98
 1005ec1:	push   0x486
 1005ec6:	push   0x10017b8
 1005ecb:	call   0x100470a
 1005ed0:	add    esp,0x18
 1005ed3:	call   0x10056fc
 1005ed8:	mov    DWORD PTR [ebp+0x10],0xfffffff7
 1005edf:	pop    ebx
 1005ee0:	push   DWORD PTR [ebp-0x4]
 1005ee3:	call   DWORD PTR ds:0x1001090
 1005ee9:	mov    eax,DWORD PTR [ebp+0x10]
 1005eec:	pop    esi
 1005eed:	jmp    0x1005f07
 1005eef:	push   DWORD PTR [ebp-0x4]
 1005ef2:	call   DWORD PTR ds:0x1001090
 1005ef8:	push   edi
 1005ef9:	push   0x100502a
 1005efe:	call   DWORD PTR ds:0x1001200
 1005f04:	push   0xfffffff7
 1005f06:	pop    eax
 1005f07:	pop    edi
 1005f08:	leave  
 1005f09:	ret    0x10
 1005f0c:	int3   
 1005f0d:	int3   
 1005f0e:	int3   
 1005f0f:	int3   
 1005f10:	int3   
 1005f11:	mov    edi,edi
 1005f13:	push   esi
 1005f14:	mov    esi,eax
 1005f16:	xor    eax,eax
 1005f18:	mov    ecx,edx
 1005f1a:	test   edx,edx
 1005f1c:	je     0x1005f2a
 1005f1e:	cmp    BYTE PTR [esi],al
 1005f20:	je     0x1005f26
 1005f22:	inc    esi
 1005f23:	dec    edx
 1005f24:	jne    0x1005f1e
 1005f26:	test   edx,edx
 1005f28:	jne    0x1005f2f
 1005f2a:	mov    eax,0x80070057
 1005f2f:	pop    esi
 1005f30:	test   edi,edi
 1005f32:	je     0x1005f40
 1005f34:	test   eax,eax
 1005f36:	js     0x1005f3d
 1005f38:	sub    ecx,edx
 1005f3a:	mov    DWORD PTR [edi],ecx
 1005f3c:	ret    
 1005f3d:	and    DWORD PTR [edi],0x0
 1005f40:	ret    
 1005f41:	int3   
 1005f42:	int3   
 1005f43:	int3   
 1005f44:	int3   
 1005f45:	int3   
 1005f46:	mov    edi,edi
 1005f48:	push   ebp
 1005f49:	mov    ebp,esp
 1005f4b:	push   ecx
 1005f4c:	and    DWORD PTR [ebp-0x4],0x0
 1005f50:	push   edi
 1005f51:	mov    edi,eax
 1005f53:	xor    eax,eax
 1005f55:	test   edi,edi
 1005f57:	je     0x1005f7b
 1005f59:	push   ebx
 1005f5a:	push   esi
 1005f5b:	mov    esi,DWORD PTR [ebp+0xc]
 1005f5e:	mov    ebx,edx
 1005f60:	sub    esi,ecx
 1005f62:	test   ebx,ebx
 1005f64:	je     0x1005f75
 1005f66:	mov    dl,BYTE PTR [esi+ecx*1]
 1005f69:	test   dl,dl
 1005f6b:	je     0x1005f75
 1005f6d:	mov    BYTE PTR [ecx],dl
 1005f6f:	inc    ecx
 1005f70:	dec    ebx
 1005f71:	inc    eax
 1005f72:	dec    edi
 1005f73:	jne    0x1005f62
 1005f75:	pop    esi
 1005f76:	pop    ebx
 1005f77:	test   edi,edi
 1005f79:	jne    0x1005f84
 1005f7b:	dec    ecx
 1005f7c:	dec    eax
 1005f7d:	mov    DWORD PTR [ebp-0x4],0x8007007a
 1005f84:	mov    BYTE PTR [ecx],0x0
 1005f87:	mov    ecx,DWORD PTR [ebp+0x8]
 1005f8a:	pop    edi
 1005f8b:	test   ecx,ecx
 1005f8d:	je     0x1005f91
 1005f8f:	mov    DWORD PTR [ecx],eax
 1005f91:	mov    eax,DWORD PTR [ebp-0x4]
 1005f94:	leave  
 1005f95:	ret    0x8
 1005f98:	int3   
 1005f99:	int3   
 1005f9a:	int3   
 1005f9b:	int3   
 1005f9c:	int3   
 1005f9d:	mov    edi,edi
 1005f9f:	push   esi
 1005fa0:	mov    esi,ecx
 1005fa2:	mov    eax,DWORD PTR [esi]
 1005fa4:	test   eax,eax
 1005fa6:	je     0x1005fe3
 1005fa8:	push   eax
 1005fa9:	call   DWORD PTR ds:0x10010a4
 1005faf:	test   eax,eax
 1005fb1:	jne    0x1005fe0
 1005fb3:	call   DWORD PTR ds:0x1001124
 1005fb9:	test   eax,eax
 1005fbb:	je     0x1005fe0
 1005fbd:	push   0x0
 1005fbf:	push   eax
 1005fc0:	push   0x1001874
 1005fc5:	push   0x1001e00
 1005fca:	push   0x314
 1005fcf:	push   0x10015ac
 1005fd4:	call   0x100470a
 1005fd9:	add    esp,0x18
 1005fdc:	xor    eax,eax
 1005fde:	pop    esi
 1005fdf:	ret    
 1005fe0:	and    DWORD PTR [esi],0x0
 1005fe3:	xor    eax,eax
 1005fe5:	inc    eax
 1005fe6:	pop    esi
 1005fe7:	ret    
 1005fe8:	int3   
 1005fe9:	int3   
 1005fea:	int3   
 1005feb:	int3   
 1005fec:	int3   
 1005fed:	mov    edi,edi
 1005fef:	push   ebp
 1005ff0:	mov    ebp,esp
 1005ff2:	push   ecx
 1005ff3:	push   esi
 1005ff4:	mov    esi,ecx
 1005ff6:	mov    eax,DWORD PTR [esi]
 1005ff8:	push   edi
 1005ff9:	xor    edi,edi
 1005ffb:	mov    DWORD PTR [ebp-0x4],edi
 1005ffe:	cmp    eax,edi
 1006000:	je     0x100607c
 1006002:	push   DWORD PTR [ebp+0x8]
 1006005:	push   eax
 1006006:	call   DWORD PTR ds:0x100109c
 100600c:	mov    DWORD PTR [ebp-0x4],eax
 100600f:	cmp    eax,edi
 1006011:	jne    0x100609a
 1006017:	push   ebx
 1006018:	push   DWORD PTR [ebp+0x8]
 100601b:	lea    eax,[esi+0x4]
 100601e:	push   eax
 100601f:	push   0x1001600
 1006024:	call   DWORD PTR ds:0x1001124
 100602a:	push   eax
 100602b:	push   0x10015ec
 1006030:	mov    ebx,0x1001e3c
 1006035:	push   ebx
 1006036:	push   0x322
 100603b:	mov    edi,0x10015ac
 1006040:	push   edi
 1006041:	call   0x100470a
 1006046:	add    esp,0x20
 1006049:	push   DWORD PTR [esi]
 100604b:	call   DWORD PTR ds:0x10010a4
 1006051:	test   eax,eax
 1006053:	jne    0x1006076
 1006055:	call   DWORD PTR ds:0x1001124
 100605b:	test   eax,eax
 100605d:	je     0x1006076
 100605f:	push   0x0
 1006061:	push   eax
 1006062:	push   0x1001874
 1006067:	push   ebx
 1006068:	push   0x326
 100606d:	push   edi
 100606e:	call   0x100470a
 1006073:	add    esp,0x18
 1006076:	and    DWORD PTR [esi],0x0
 1006079:	pop    ebx
 100607a:	jmp    0x100609a
 100607c:	push   0x1001e18
 1006081:	push   edi
 1006082:	push   edi
 1006083:	push   0x1001e3c
 1006088:	push   0x32b
 100608d:	push   0x10015ac
 1006092:	call   0x100470a
 1006097:	add    esp,0x18
 100609a:	mov    eax,DWORD PTR [ebp-0x4]
 100609d:	pop    edi
 100609e:	pop    esi
 100609f:	leave  
 10060a0:	ret    0x4
 10060a3:	int3   
 10060a4:	int3   
 10060a5:	int3   
 10060a6:	int3   
 10060a7:	int3   
 10060a8:	mov    edi,edi
 10060aa:	push   esi
 10060ab:	push   0x1001e58
 10060b0:	mov    esi,ecx
 10060b2:	call   0x10045b8
 10060b7:	xor    eax,eax
 10060b9:	mov    DWORD PTR [esi],eax
 10060bb:	mov    DWORD PTR [esi+0x4],eax
 10060be:	mov    DWORD PTR [esi+0x8],eax
 10060c1:	mov    DWORD PTR [esi+0x14],eax
 10060c4:	mov    DWORD PTR [esi+0xc],eax
 10060c7:	mov    DWORD PTR [esi+0x10],eax
 10060ca:	pop    ecx
 10060cb:	mov    eax,esi
 10060cd:	pop    esi
 10060ce:	ret    
 10060cf:	int3   
 10060d0:	int3   
 10060d1:	int3   
 10060d2:	int3   
 10060d3:	int3   
 10060d4:	mov    edi,edi
 10060d6:	push   ebp
 10060d7:	mov    ebp,esp
 10060d9:	push   esi
 10060da:	push   edi
 10060db:	push   0xbb9
 10060e0:	push   DWORD PTR [ecx]
 10060e2:	call   DWORD PTR ds:0x10011ec
 10060e8:	mov    esi,DWORD PTR ds:0x10011f0
 10060ee:	mov    edi,eax
 10060f0:	movzx  eax,WORD PTR [ebp+0x8]
 10060f4:	shl    eax,0x10
 10060f7:	push   eax
 10060f8:	push   0x0
 10060fa:	push   0x401
 10060ff:	push   edi
 1006100:	call   esi
 1006102:	push   0x0
 1006104:	push   0x0
 1006106:	push   0x402
 100610b:	push   edi
 100610c:	call   esi
 100610e:	push   0x0
 1006110:	push   0x1
 1006112:	push   0x404
 1006117:	push   edi
 1006118:	call   esi
 100611a:	push   0x1
 100611c:	push   edi
 100611d:	call   DWORD PTR ds:0x10011f4
 1006123:	pop    edi
 1006124:	pop    esi
 1006125:	pop    ebp
 1006126:	ret    0x4
 1006129:	int3   
 100612a:	int3   
 100612b:	int3   
 100612c:	int3   
 100612d:	int3   
 100612e:	mov    edi,edi
 1006130:	push   ebp
 1006131:	mov    ebp,esp
 1006133:	push   esi
 1006134:	mov    esi,ecx
 1006136:	cmp    DWORD PTR [esi+0x4],0x0
 100613a:	jne    0x1006179
 100613c:	mov    eax,DWORD PTR [esi]
 100613e:	test   eax,eax
 1006140:	je     0x1006179
 1006142:	push   0x0
 1006144:	push   DWORD PTR [ebp+0x8]
 1006147:	push   0x402
 100614c:	push   0xbb9
 1006151:	push   eax
 1006152:	call   DWORD PTR ds:0x10011ec
 1006158:	push   eax
 1006159:	call   DWORD PTR ds:0x10011f0
 100615f:	mov    eax,DWORD PTR [ebp+0xc]
 1006162:	test   eax,eax
 1006164:	jne    0x100616b
 1006166:	mov    eax,0x1001e64
 100616b:	push   eax
 100616c:	push   0xbbc
 1006171:	push   DWORD PTR [esi]
 1006173:	call   DWORD PTR ds:0x10011e8
 1006179:	pop    esi
 100617a:	pop    ebp
 100617b:	ret    0x8
 100617e:	int3   
 100617f:	int3   
 1006180:	int3   
 1006181:	int3   
 1006182:	int3   
 1006183:	mov    edi,edi
 1006185:	push   ebp
 1006186:	mov    ebp,esp
 1006188:	push   edi
 1006189:	mov    edi,ecx
 100618b:	mov    eax,DWORD PTR [edi]
 100618d:	test   eax,eax
 100618f:	je     0x10061ba
 1006191:	push   esi
 1006192:	push   DWORD PTR [ebp+0x8]
 1006195:	mov    esi,DWORD PTR ds:0x10011e8
 100619b:	push   0xbba
 10061a0:	push   eax
 10061a1:	call   esi
 10061a3:	mov    eax,DWORD PTR [ebp+0xc]
 10061a6:	test   eax,eax
 10061a8:	jne    0x10061af
 10061aa:	mov    eax,0x1001e64
 10061af:	push   eax
 10061b0:	push   0xbbb
 10061b5:	push   DWORD PTR [edi]
 10061b7:	call   esi
 10061b9:	pop    esi
 10061ba:	pop    edi
 10061bb:	pop    ebp
 10061bc:	ret    0x8
 10061bf:	int3   
 10061c0:	int3   
 10061c1:	int3   
 10061c2:	int3   
 10061c3:	int3   
 10061c4:	mov    edi,edi
 10061c6:	push   ebp
 10061c7:	mov    ebp,esp
 10061c9:	sub    esp,0x53c
 10061cf:	mov    eax,ds:0x1013054
 10061d4:	xor    eax,ebp
 10061d6:	mov    DWORD PTR [ebp-0x4],eax
 10061d9:	cmp    DWORD PTR [ebp+0x8],0x12
 10061dd:	mov    eax,DWORD PTR [ebp+0x14]
 10061e0:	push   esi
 10061e1:	mov    esi,DWORD PTR [ebp+0x18]
 10061e4:	push   edi
 10061e5:	mov    edi,DWORD PTR [ebp+0x10]
 10061e8:	mov    DWORD PTR [ebp-0x53c],eax
 10061ee:	jne    0x10062d1
 10061f4:	cmp    DWORD PTR [esi+0x8],0x0
 10061f8:	mov    edi,DWORD PTR [esi]
 10061fa:	mov    DWORD PTR [ebp-0x538],edi
 1006200:	jne    0x1006288
 1006206:	push   DWORD PTR [esi+0x4]
 1006209:	push   edi
 100620a:	push   0x1001e68
 100620f:	call   0x10045b8
 1006214:	add    esp,0xc
 1006217:	cmp    edi,0x3
 100621a:	je     0x100622a
 100621c:	push   DWORD PTR [esi+0x4]
 100621f:	mov    ecx,DWORD PTR ds:0x10142b0
 1006225:	call   0x10060d4
 100622a:	mov    edi,DWORD PTR ds:0x1001084
 1006230:	push   ebx
 1006231:	push   0x258
 1006236:	lea    eax,[ebp-0x2dc]
 100623c:	push   eax
 100623d:	push   0x1f49
 1006242:	push   0x0
 1006244:	call   edi
 1006246:	mov    ebx,DWORD PTR ds:0x1001208
 100624c:	push   eax
 100624d:	call   ebx
 100624f:	push   0x258
 1006254:	lea    eax,[ebp-0x534]
 100625a:	push   eax
 100625b:	mov    eax,DWORD PTR [ebp-0x538]
 1006261:	add    eax,0x1f4c
 1006266:	push   eax
 1006267:	push   0x0
 1006269:	call   edi
 100626b:	push   eax
 100626c:	call   ebx
 100626e:	mov    ecx,DWORD PTR ds:0x10142b0
 1006274:	lea    eax,[ebp-0x534]
 100627a:	push   eax
 100627b:	lea    eax,[ebp-0x2dc]
 1006281:	push   eax
 1006282:	call   0x1006183
 1006287:	pop    ebx
 1006288:	cmp    DWORD PTR [ebp-0x538],0x3
 100628f:	je     0x10062b8
 1006291:	push   DWORD PTR [ebp-0x53c]
 1006297:	mov    ecx,DWORD PTR ds:0x10142b0
 100629d:	push   DWORD PTR [esi+0x8]
 10062a0:	call   0x100612e
 10062a5:	xor    eax,eax
 10062a7:	inc    eax
 10062a8:	mov    ecx,DWORD PTR [ebp-0x4]
 10062ab:	pop    edi
 10062ac:	xor    ecx,ebp
 10062ae:	pop    esi
 10062af:	call   0x1008355
 10062b4:	leave  
 10062b5:	ret    0x14
 10062b8:	mov    eax,ds:0x10142b0
 10062bd:	push   0x1001e64
 10062c2:	push   0xbbc
 10062c7:	push   DWORD PTR [eax]
 10062c9:	call   DWORD PTR ds:0x10011e8
 10062cf:	jmp    0x10062a5
 10062d1:	xor    eax,eax
 10062d3:	cmp    DWORD PTR [ebp+0x8],eax
 10062d6:	je     0x10062a5
 10062d8:	cmp    edi,eax
 10062da:	je     0x10062a5
 10062dc:	cmp    DWORD PTR [ebp+0xc],eax
 10062df:	je     0x10062a5
 10062e1:	push   0x80
 10062e6:	lea    ecx,[ebp-0x84]
 10062ec:	push   ecx
 10062ed:	push   0x1f40
 10062f2:	push   eax
 10062f3:	call   DWORD PTR ds:0x1001084
 10062f9:	push   eax
 10062fa:	call   DWORD PTR ds:0x1001208
 1006300:	push   DWORD PTR [ebp+0xc]
 1006303:	lea    eax,[ebp-0x84]
 1006309:	push   eax
 100630a:	mov    eax,ds:0x10142b0
 100630f:	push   edi
 1006310:	push   DWORD PTR [eax]
 1006312:	call   DWORD PTR ds:0x10011e4
 1006318:	push   eax
 1006319:	call   DWORD PTR ds:0x100120c
 100631f:	jmp    0x10062a8
 1006321:	int3   
 1006322:	int3   
 1006323:	int3   
 1006324:	int3   
 1006325:	int3   
 1006326:	mov    DWORD PTR ds:0x10142b0,ecx
 100632c:	mov    eax,DWORD PTR [ecx+0x10]
 100632f:	push   0x10061c4
 1006334:	call   DWORD PTR [eax+0x10c]
 100633a:	xor    eax,eax
 100633c:	inc    eax
 100633d:	ret    
 100633e:	int3   
 100633f:	int3   
 1006340:	int3   
 1006341:	int3   
 1006342:	int3   
 1006343:	mov    edi,edi
 1006345:	push   ebp
 1006346:	mov    ebp,esp
 1006348:	push   esi
 1006349:	mov    esi,DWORD PTR [ebp+0x8]
 100634c:	push   DWORD PTR [esi]
 100634e:	call   DWORD PTR ds:0x10011e4
 1006354:	mov    ecx,DWORD PTR [esi+0x10]
 1006357:	push   0x2010098
 100635c:	push   0x0
 100635e:	push   eax
 100635f:	call   DWORD PTR [ecx+0x108]
 1006365:	mov    DWORD PTR [esi+0x14],eax
 1006368:	test   eax,eax
 100636a:	jns    0x1006385
 100636c:	push   DWORD PTR [esi]
 100636e:	cdq    
 100636f:	xor    eax,edx
 1006371:	sub    eax,edx
 1006373:	push   0x0
 1006375:	add    eax,0x69
 1006378:	push   eax
 1006379:	call   0x1007b30
 100637e:	mov    DWORD PTR [esi+0x8],0x3
 1006385:	mov    esi,DWORD PTR [esi]
 1006387:	test   esi,esi
 1006389:	je     0x100639b
 100638b:	push   0x0
 100638d:	push   0x0
 100638f:	push   0x8002
 1006394:	push   esi
 1006395:	call   DWORD PTR ds:0x10011e0
 100639b:	xor    eax,eax
 100639d:	inc    eax
 100639e:	pop    esi
 100639f:	pop    ebp
 10063a0:	ret    0x4
 10063a3:	int3   
 10063a4:	int3   
 10063a5:	int3   
 10063a6:	int3   
 10063a7:	int3   
 10063a8:	mov    edi,edi
 10063aa:	push   ebp
 10063ab:	mov    ebp,esp
 10063ad:	push   ecx
 10063ae:	push   esi
 10063af:	mov    esi,ecx
 10063b1:	mov    eax,DWORD PTR [esi]
 10063b3:	push   edi
 10063b4:	xor    edi,edi
 10063b6:	cmp    eax,edi
 10063b8:	je     0x10063cf
 10063ba:	push   edi
 10063bb:	push   edi
 10063bc:	push   0x46b
 10063c1:	push   eax
 10063c2:	call   DWORD PTR ds:0x10011e4
 10063c8:	push   eax
 10063c9:	call   DWORD PTR ds:0x10011e0
 10063cf:	lea    eax,[ebp-0x4]
 10063d2:	push   eax
 10063d3:	push   edi
 10063d4:	push   esi
 10063d5:	push   0x1006343
 10063da:	push   edi
 10063db:	push   edi
 10063dc:	call   DWORD PTR ds:0x1001088
 10063e2:	mov    DWORD PTR [esi+0xc],eax
 10063e5:	cmp    eax,edi
 10063e7:	jne    0x1006411
 10063e9:	push   edi
 10063ea:	call   DWORD PTR ds:0x1001124
 10063f0:	push   eax
 10063f1:	push   0x1001edc
 10063f6:	push   0x1001ec8
 10063fb:	push   0xce
 1006400:	push   0x1001e94
 1006405:	call   0x100470a
 100640a:	add    esp,0x18
 100640d:	xor    eax,eax
 100640f:	jmp    0x1006414
 1006411:	xor    eax,eax
 1006413:	inc    eax
 1006414:	pop    edi
 1006415:	pop    esi
 1006416:	leave  
 1006417:	ret    
 1006418:	int3   
 1006419:	int3   
 100641a:	int3   
 100641b:	int3   
 100641c:	int3   
 100641d:	mov    edi,edi
 100641f:	push   ebp
 1006420:	mov    ebp,esp
 1006422:	push   ebx
 1006423:	mov    ebx,DWORD PTR [ebp+0x8]
 1006426:	push   esi
 1006427:	push   edi
 1006428:	push   0xffffffeb
 100642a:	push   ebx
 100642b:	call   DWORD PTR ds:0x10011d8
 1006431:	cmp    DWORD PTR [ebp+0xc],0x4e
 1006435:	mov    esi,eax
 1006437:	je     0x10064e0
 100643d:	cmp    DWORD PTR [ebp+0xc],0x110
 1006444:	jne    0x100650b
 100644a:	mov    eax,DWORD PTR [ebp+0x14]
 100644d:	mov    esi,DWORD PTR [eax+0x1c]
 1006450:	push   esi
 1006451:	push   0xffffffeb
 1006453:	push   ebx
 1006454:	call   DWORD PTR ds:0x10011dc
 100645a:	mov    edi,DWORD PTR ds:0x10011ec
 1006460:	push   0x1389
 1006465:	push   ebx
 1006466:	call   edi
 1006468:	mov    ebx,DWORD PTR ds:0x10011f0
 100646e:	push   0x1
 1006470:	push   DWORD PTR [esi]
 1006472:	push   0x30
 1006474:	push   eax
 1006475:	call   ebx
 1006477:	push   0x1
 1006479:	push   DWORD PTR [esi+0x4]
 100647c:	push   0x30
 100647e:	push   0xfa1
 1006483:	push   DWORD PTR [ebp+0x8]
 1006486:	call   edi
 1006488:	push   eax
 1006489:	call   ebx
 100648b:	push   0x18
 100648d:	call   0x1008579
 1006492:	xor    edi,edi
 1006494:	pop    ecx
 1006495:	cmp    eax,edi
 1006497:	je     0x10064a2
 1006499:	mov    ecx,eax
 100649b:	call   0x10060a8
 10064a0:	jmp    0x10064a4
 10064a2:	xor    eax,eax
 10064a4:	mov    DWORD PTR [esi+0x1c],eax
 10064a7:	cmp    eax,edi
 10064a9:	jne    0x100650b
 10064ab:	push   edi
 10064ac:	push   0x30
 10064ae:	push   0x72
 10064b0:	call   0x1007b30
 10064b5:	push   0x1001efc
 10064ba:	push   edi
 10064bb:	push   edi
 10064bc:	push   0x1001eec
 10064c1:	push   0x1e1
 10064c6:	push   0x1001e94
 10064cb:	call   0x100470a
 10064d0:	add    esp,0x18
 10064d3:	push   edi
 10064d4:	push   0x5
 10064d6:	push   0x471
 10064db:	push   DWORD PTR [ebp+0x8]
 10064de:	jmp    0x10064fe
 10064e0:	mov    eax,DWORD PTR [ebp+0x14]
 10064e3:	mov    eax,DWORD PTR [eax+0x8]
 10064e6:	cmp    eax,0xffffff2f
 10064eb:	je     0x1006514
 10064ed:	cmp    eax,0xffffff38
 10064f2:	jne    0x100650b
 10064f4:	push   0x3
 10064f6:	push   0x0
 10064f8:	push   0x470
 10064fd:	push   ebx
 10064fe:	call   DWORD PTR ds:0x10011e4
 1006504:	push   eax
 1006505:	call   DWORD PTR ds:0x10011e0
 100650b:	xor    eax,eax
 100650d:	pop    edi
 100650e:	pop    esi
 100650f:	pop    ebx
 1006510:	pop    ebp
 1006511:	ret    0x10
 1006514:	xor    edi,edi
 1006516:	cmp    DWORD PTR [esi+0x1c],edi
 1006519:	je     0x100650b
 100651b:	push   ebx
 100651c:	push   0x134
 1006521:	push   0x1f41
 1006526:	call   0x1007b30
 100652b:	cmp    eax,0x6
 100652e:	jne    0x1006562
 1006530:	mov    eax,DWORD PTR [esi+0x1c]
 1006533:	mov    esi,DWORD PTR ds:0x10011e4
 1006539:	push   edi
 100653a:	push   edi
 100653b:	push   0x46b
 1006540:	push   ebx
 1006541:	mov    DWORD PTR [eax+0x8],0x1
 1006548:	call   esi
 100654a:	mov    edi,DWORD PTR ds:0x10011e0
 1006550:	push   eax
 1006551:	call   edi
 1006553:	push   0x0
 1006555:	push   0x1
 1006557:	push   0x471
 100655c:	push   ebx
 100655d:	call   esi
 100655f:	push   eax
 1006560:	call   edi
 1006562:	push   0x1
 1006564:	push   0x0
 1006566:	push   ebx
 1006567:	call   DWORD PTR ds:0x10011dc
 100656d:	xor    eax,eax
 100656f:	inc    eax
 1006570:	jmp    0x100650d
 1006572:	int3   
 1006573:	int3   
 1006574:	int3   
 1006575:	int3   
 1006576:	int3   
 1006577:	mov    edi,edi
 1006579:	push   ebp
 100657a:	mov    ebp,esp
 100657c:	sub    esp,0x208
 1006582:	mov    eax,ds:0x1013054
 1006587:	xor    eax,ebp
 1006589:	mov    DWORD PTR [ebp-0x4],eax
 100658c:	push   ebx
 100658d:	mov    ebx,DWORD PTR [ebp+0x8]
 1006590:	push   esi
 1006591:	mov    esi,DWORD PTR [ebp+0x14]
 1006594:	push   edi
 1006595:	push   0xffffffeb
 1006597:	push   ebx
 1006598:	call   DWORD PTR ds:0x10011d8
 100659e:	cmp    DWORD PTR [ebp+0xc],0x4e
 10065a2:	mov    DWORD PTR [ebp-0x208],eax
 10065a8:	je     0x1006607
 10065aa:	cmp    DWORD PTR [ebp+0xc],0x110
 10065b1:	jne    0x10067e8
 10065b7:	mov    esi,DWORD PTR [esi+0x1c]
 10065ba:	push   esi
 10065bb:	push   0xffffffeb
 10065bd:	push   ebx
 10065be:	call   DWORD PTR ds:0x10011dc
 10065c4:	mov    edi,DWORD PTR ds:0x10011ec
 10065ca:	push   0x1389
 10065cf:	push   ebx
 10065d0:	call   edi
 10065d2:	push   0x1
 10065d4:	push   DWORD PTR [esi]
 10065d6:	push   0x30
 10065d8:	push   eax
 10065d9:	call   DWORD PTR ds:0x10011f0
 10065df:	push   0x1
 10065e1:	push   DWORD PTR [esi]
 10065e3:	push   0x30
 10065e5:	push   0x138a
 10065ea:	push   ebx
 10065eb:	call   edi
 10065ed:	push   eax
 10065ee:	call   DWORD PTR ds:0x10011f0
 10065f4:	push   0x1
 10065f6:	push   DWORD PTR [esi]
 10065f8:	push   0x30
 10065fa:	push   0x138b
 10065ff:	push   ebx
 1006600:	call   edi
 1006602:	jmp    0x10067e1
 1006607:	mov    esi,DWORD PTR [esi+0x8]
 100660a:	cmp    esi,0xffffff30
 1006610:	je     0x10067bc
 1006616:	cmp    esi,0xffffff38
 100661c:	jne    0x10067e8
 1006622:	mov    esi,DWORD PTR ds:0x10011e4
 1006628:	push   0x4
 100662a:	push   0x0
 100662c:	push   0x470
 1006631:	push   ebx
 1006632:	call   esi
 1006634:	mov    edi,DWORD PTR ds:0x10011e0
 100663a:	push   eax
 100663b:	call   edi
 100663d:	push   0x0
 100663f:	push   0x0
 1006641:	push   0x46b
 1006646:	push   ebx
 1006647:	call   esi
 1006649:	push   eax
 100664a:	call   edi
 100664c:	mov    eax,DWORD PTR [ebp-0x208]
 1006652:	mov    esi,DWORD PTR ds:0x10011ec
 1006658:	xor    ecx,ecx
 100665a:	cmp    DWORD PTR [eax+0x18],ecx
 100665d:	jne    0x1006718
 1006663:	cmp    DWORD PTR [eax+0x14],ecx
 1006666:	je     0x10066b2
 1006668:	push   ecx
 1006669:	push   0x1389
 100666e:	push   ebx
 100666f:	call   esi
 1006671:	mov    edi,DWORD PTR ds:0x10011f4
 1006677:	push   eax
 1006678:	call   edi
 100667a:	push   0x5
 100667c:	push   0x138a
 1006681:	push   ebx
 1006682:	call   esi
 1006684:	push   eax
 1006685:	call   edi
 1006687:	push   0x0
 1006689:	push   0x138b
 100668e:	push   ebx
 100668f:	call   esi
 1006691:	push   eax
 1006692:	call   edi
 1006694:	push   0x0
 1006696:	push   0x138c
 100669b:	push   ebx
 100669c:	call   esi
 100669e:	push   eax
 100669f:	call   edi
 10066a1:	push   0x5
 10066a3:	push   0x138d
 10066a8:	push   ebx
 10066a9:	call   esi
 10066ab:	push   eax
 10066ac:	call   edi
 10066ae:	push   0x5
 10066b0:	jmp    0x10066fb
 10066b2:	push   0x5
 10066b4:	push   0x1389
 10066b9:	push   ebx
 10066ba:	call   esi
 10066bc:	mov    edi,DWORD PTR ds:0x10011f4
 10066c2:	push   eax
 10066c3:	call   edi
 10066c5:	push   0x0
 10066c7:	push   0x138a
 10066cc:	push   ebx
 10066cd:	call   esi
 10066cf:	push   eax
 10066d0:	call   edi
 10066d2:	push   0x0
 10066d4:	push   0x138b
 10066d9:	push   ebx
 10066da:	call   esi
 10066dc:	push   eax
 10066dd:	call   edi
 10066df:	push   0x5
 10066e1:	push   0x138c
 10066e6:	push   ebx
 10066e7:	call   esi
 10066e9:	push   eax
 10066ea:	call   edi
 10066ec:	push   0x0
 10066ee:	push   0x138d
 10066f3:	push   ebx
 10066f4:	call   esi
 10066f6:	push   eax
 10066f7:	call   edi
 10066f9:	push   0x0
 10066fb:	push   0x1397
 1006700:	push   ebx
 1006701:	call   esi
 1006703:	push   eax
 1006704:	call   edi
 1006706:	push   0x0
 1006708:	push   0x138e
 100670d:	push   ebx
 100670e:	call   esi
 1006710:	push   eax
 1006711:	call   edi
 1006713:	jmp    0x10067e8
 1006718:	push   ecx
 1006719:	push   0x138a
 100671e:	push   ebx
 100671f:	call   esi
 1006721:	mov    edi,DWORD PTR ds:0x10011f4
 1006727:	push   eax
 1006728:	call   edi
 100672a:	push   0x0
 100672c:	push   0x1389
 1006731:	push   ebx
 1006732:	call   esi
 1006734:	push   eax
 1006735:	call   edi
 1006737:	push   0x0
 1006739:	push   0x138d
 100673e:	push   ebx
 100673f:	call   esi
 1006741:	push   eax
 1006742:	call   edi
 1006744:	push   0x0
 1006746:	push   0x138c
 100674b:	push   ebx
 100674c:	call   esi
 100674e:	push   eax
 100674f:	call   edi
 1006751:	push   0x5
 1006753:	push   0x138b
 1006758:	push   ebx
 1006759:	call   esi
 100675b:	push   eax
 100675c:	call   edi
 100675e:	push   0x5
 1006760:	push   0x138e
 1006765:	push   ebx
 1006766:	call   esi
 1006768:	push   eax
 1006769:	call   edi
 100676b:	push   0x0
 100676d:	push   0x1397
 1006772:	push   ebx
 1006773:	call   esi
 1006775:	push   eax
 1006776:	call   edi
 1006778:	mov    eax,DWORD PTR [ebp-0x208]
 100677e:	cmp    DWORD PTR [eax+0x18],0x1
 1006782:	jne    0x10067e8
 1006784:	push   0x200
 1006789:	lea    eax,[ebp-0x204]
 100678f:	push   eax
 1006790:	push   0x1f43
 1006795:	push   0x0
 1006797:	call   DWORD PTR ds:0x1001084
 100679d:	push   eax
 100679e:	call   DWORD PTR ds:0x1001208
 10067a4:	lea    eax,[ebp-0x204]
 10067aa:	push   eax
 10067ab:	push   0x138e
 10067b0:	push   ebx
 10067b1:	call   esi
 10067b3:	push   eax
 10067b4:	call   DWORD PTR ds:0x10011d4
 10067ba:	jmp    0x10067e8
 10067bc:	xor    esi,esi
 10067be:	cmp    DWORD PTR [eax+0x18],esi
 10067c1:	jne    0x10067e8
 10067c3:	cmp    DWORD PTR [eax+0x14],esi
 10067c6:	je     0x10067e8
 10067c8:	push   0x1001f1c
 10067cd:	call   0x10045b8
 10067d2:	pop    ecx
 10067d3:	push   esi
 10067d4:	push   esi
 10067d5:	push   0x46a
 10067da:	push   ebx
 10067db:	call   DWORD PTR ds:0x10011e4
 10067e1:	push   eax
 10067e2:	call   DWORD PTR ds:0x10011f0
 10067e8:	mov    ecx,DWORD PTR [ebp-0x4]
 10067eb:	pop    edi
 10067ec:	pop    esi
 10067ed:	xor    ecx,ebp
 10067ef:	xor    eax,eax
 10067f1:	pop    ebx
 10067f2:	call   0x1008355
 10067f7:	leave  
 10067f8:	ret    0x10
 10067fb:	int3   
 10067fc:	int3   
 10067fd:	int3   
 10067fe:	int3   
 10067ff:	int3   
 1006800:	mov    edi,edi
 1006802:	push   ebp
 1006803:	mov    ebp,esp
 1006805:	mov    eax,DWORD PTR [ebp+0xc]
 1006808:	dec    eax
 1006809:	dec    eax
 100680a:	jne    0x1006829
 100680c:	mov    eax,DWORD PTR [ebp+0x10]
 100680f:	mov    ecx,0xffff
 1006814:	cmp    WORD PTR [eax+0x2],cx
 1006818:	jne    0x1006823
 100681a:	and    DWORD PTR [eax+0xc],0xfff7ffff
 1006821:	jmp    0x1006829
 1006823:	and    DWORD PTR [eax],0xfff7ffff
 1006829:	xor    eax,eax
 100682b:	inc    eax
 100682c:	pop    ebp
 100682d:	ret    0xc
 1006830:	int3   
 1006831:	int3   
 1006832:	int3   
 1006833:	int3   
 1006834:	int3   
 1006835:	mov    edi,edi
 1006837:	push   ebp
 1006838:	mov    ebp,esp
 100683a:	mov    edx,DWORD PTR [ebp+0xc]
 100683d:	xor    eax,eax
 100683f:	test   edx,edx
 1006841:	je     0x100684b
 1006843:	cmp    edx,0x7fffffff
 1006849:	jbe    0x1006850
 100684b:	mov    eax,0x80070057
 1006850:	push   esi
 1006851:	mov    esi,DWORD PTR [ebp+0x8]
 1006854:	test   eax,eax
 1006856:	js     0x1006869
 1006858:	push   edi
 1006859:	lea    edi,[ebp+0x8]
 100685c:	mov    eax,esi
 100685e:	call   0x1005f11
 1006863:	mov    ecx,DWORD PTR [ebp+0x8]
 1006866:	pop    edi
 1006867:	jmp    0x100686b
 1006869:	xor    ecx,ecx
 100686b:	test   eax,eax
 100686d:	js     0x1006885
 100686f:	push   DWORD PTR [ebp+0x10]
 1006872:	mov    eax,DWORD PTR [ebp+0xc]
 1006875:	sub    eax,ecx
 1006877:	push   0x0
 1006879:	add    ecx,esi
 100687b:	mov    edx,0x7fffffff
 1006880:	call   0x1005f46
 1006885:	pop    esi
 1006886:	pop    ebp
 1006887:	ret    0xc
 100688a:	int3   
 100688b:	int3   
 100688c:	int3   
 100688d:	int3   
 100688e:	int3   
 100688f:	mov    edi,edi
 1006891:	push   ebp
 1006892:	mov    ebp,esp
 1006894:	push   esi
 1006895:	push   DWORD PTR [ebp+0x8]
 1006898:	mov    esi,ecx
 100689a:	push   0x104
 100689f:	lea    eax,[esi+0x4]
 10068a2:	push   eax
 10068a3:	call   0x1005110
 10068a8:	push   DWORD PTR [ebp+0x8]
 10068ab:	call   DWORD PTR ds:0x1001098
 10068b1:	mov    DWORD PTR [esi],eax
 10068b3:	pop    esi
 10068b4:	test   eax,eax
 10068b6:	jne    0x10068e7
 10068b8:	push   DWORD PTR [ebp+0x8]
 10068bb:	push   0x1001598
 10068c0:	call   DWORD PTR ds:0x1001124
 10068c6:	push   eax
 10068c7:	push   0x1001588
 10068cc:	push   0x1001f38
 10068d1:	push   0x309
 10068d6:	push   0x10015ac
 10068db:	call   0x100470a
 10068e0:	add    esp,0x1c
 10068e3:	xor    eax,eax
 10068e5:	jmp    0x10068ea
 10068e7:	xor    eax,eax
 10068e9:	inc    eax
 10068ea:	pop    ebp
 10068eb:	ret    0x4
 10068ee:	int3   
 10068ef:	int3   
 10068f0:	int3   
 10068f1:	int3   
 10068f2:	int3   
 10068f3:	mov    edi,edi
 10068f5:	push   ebp
 10068f6:	mov    ebp,esp
 10068f8:	sub    esp,0x13c
 10068fe:	mov    eax,ds:0x1013054
 1006903:	xor    eax,ebp
 1006905:	mov    DWORD PTR [ebp-0x4],eax
 1006908:	mov    eax,ds:0x101303c
 100690d:	cmp    eax,0xffffffff
 1006910:	je     0x1006920
 1006912:	xor    ecx,ecx
 1006914:	test   eax,eax
 1006916:	setne  cl
 1006919:	mov    eax,ecx
 100691b:	jmp    0x10069df
 1006920:	push   esi
 1006921:	mov    esi,0x104
 1006926:	push   esi
 1006927:	lea    eax,[ebp-0x108]
 100692d:	push   eax
 100692e:	call   DWORD PTR ds:0x100108c
 1006934:	test   eax,eax
 1006936:	je     0x10069b0
 1006938:	push   0x1001fb0
 100693d:	push   esi
 100693e:	lea    eax,[ebp-0x108]
 1006944:	push   eax
 1006945:	call   0x1006835
 100694a:	xor    esi,esi
 100694c:	push   esi
 100694d:	lea    eax,[ebp-0x108]
 1006953:	push   eax
 1006954:	call   0x1005253
 1006959:	test   eax,eax
 100695b:	je     0x10069d6
 100695d:	lea    eax,[ebp-0x13c]
 1006963:	push   eax
 1006964:	lea    eax,[ebp-0x108]
 100696a:	push   eax
 100696b:	call   0x1004c70
 1006970:	test   eax,eax
 1006972:	je     0x100699d
 1006974:	cmp    DWORD PTR [ebp-0x134],0x50001
 100697e:	jne    0x10069d6
 1006980:	mov    eax,DWORD PTR [ebp-0x130]
 1006986:	shr    eax,0x10
 1006989:	mov    ecx,0xa28
 100698e:	cmp    ax,cx
 1006991:	jne    0x10069d6
 1006993:	xor    eax,eax
 1006995:	inc    eax
 1006996:	mov    ds:0x101303c,eax
 100699b:	jmp    0x10069de
 100699d:	push   0x10018bc
 10069a2:	push   esi
 10069a3:	push   esi
 10069a4:	push   0x1001fa0
 10069a9:	push   0x9e
 10069ae:	jmp    0x10069c9
 10069b0:	xor    esi,esi
 10069b2:	push   esi
 10069b3:	call   DWORD PTR ds:0x1001124
 10069b9:	push   eax
 10069ba:	push   0x1001f88
 10069bf:	push   0x1001fa0
 10069c4:	push   0xa1
 10069c9:	push   0x1001f54
 10069ce:	call   0x100470a
 10069d3:	add    esp,0x18
 10069d6:	mov    DWORD PTR ds:0x101303c,esi
 10069dc:	xor    eax,eax
 10069de:	pop    esi
 10069df:	mov    ecx,DWORD PTR [ebp-0x4]
 10069e2:	xor    ecx,ebp
 10069e4:	call   0x1008355
 10069e9:	leave  
 10069ea:	ret    
 10069eb:	int3   
 10069ec:	int3   
 10069ed:	int3   
 10069ee:	int3   
 10069ef:	int3   
 10069f0:	mov    edi,edi
 10069f2:	push   ebp
 10069f3:	mov    ebp,esp
 10069f5:	sub    esp,0x13c
 10069fb:	mov    eax,ds:0x1013054
 1006a00:	xor    eax,ebp
 1006a02:	mov    DWORD PTR [ebp-0x4],eax
 1006a05:	mov    eax,ds:0x1013040
 1006a0a:	cmp    eax,0xffffffff
 1006a0d:	je     0x1006a1d
 1006a0f:	xor    ecx,ecx
 1006a11:	test   eax,eax
 1006a13:	setne  cl
 1006a16:	mov    eax,ecx
 1006a18:	jmp    0x1006ac9
 1006a1d:	push   esi
 1006a1e:	mov    esi,0x104
 1006a23:	push   esi
 1006a24:	lea    eax,[ebp-0x108]
 1006a2a:	push   eax
 1006a2b:	call   DWORD PTR ds:0x100108c
 1006a31:	test   eax,eax
 1006a33:	je     0x1006a9a
 1006a35:	push   0x1001fb0
 1006a3a:	push   esi
 1006a3b:	lea    eax,[ebp-0x108]
 1006a41:	push   eax
 1006a42:	call   0x1006835
 1006a47:	xor    esi,esi
 1006a49:	push   esi
 1006a4a:	lea    eax,[ebp-0x108]
 1006a50:	push   eax
 1006a51:	call   0x1005253
 1006a56:	test   eax,eax
 1006a58:	je     0x1006ac0
 1006a5a:	lea    eax,[ebp-0x13c]
 1006a60:	push   eax
 1006a61:	lea    eax,[ebp-0x108]
 1006a67:	push   eax
 1006a68:	call   0x1004c70
 1006a6d:	test   eax,eax
 1006a6f:	je     0x1006a87
 1006a71:	cmp    DWORD PTR [ebp-0x134],0x50002
 1006a7b:	jne    0x1006ac0
 1006a7d:	xor    eax,eax
 1006a7f:	inc    eax
 1006a80:	mov    ds:0x1013040,eax
 1006a85:	jmp    0x1006ac8
 1006a87:	push   0x10018bc
 1006a8c:	push   esi
 1006a8d:	push   esi
 1006a8e:	push   0x1001fc0
 1006a93:	push   0xb9
 1006a98:	jmp    0x1006ab3
 1006a9a:	xor    esi,esi
 1006a9c:	push   esi
 1006a9d:	call   DWORD PTR ds:0x1001124
 1006aa3:	push   eax
 1006aa4:	push   0x1001f88
 1006aa9:	push   0x1001fc0
 1006aae:	push   0xbc
 1006ab3:	push   0x1001f54
 1006ab8:	call   0x100470a
 1006abd:	add    esp,0x18
 1006ac0:	mov    DWORD PTR ds:0x1013040,esi
 1006ac6:	xor    eax,eax
 1006ac8:	pop    esi
 1006ac9:	mov    ecx,DWORD PTR [ebp-0x4]
 1006acc:	xor    ecx,ebp
 1006ace:	call   0x1008355
 1006ad3:	leave  
 1006ad4:	ret    
 1006ad5:	int3   
 1006ad6:	int3   
 1006ad7:	int3   
 1006ad8:	int3   
 1006ad9:	int3   
 1006ada:	call   0x10068f3
 1006adf:	test   eax,eax
 1006ae1:	jne    0x1006aed
 1006ae3:	call   0x10069f0
 1006ae8:	test   eax,eax
 1006aea:	jne    0x1006aed
 1006aec:	ret    
 1006aed:	xor    eax,eax
 1006aef:	inc    eax
 1006af0:	ret    
 1006af1:	int3   
 1006af2:	int3   
 1006af3:	int3   
 1006af4:	int3   
 1006af5:	int3   
 1006af6:	mov    edi,edi
 1006af8:	push   ebp
 1006af9:	mov    ebp,esp
 1006afb:	sub    esp,0x98
 1006b01:	mov    eax,ds:0x1013054
 1006b06:	xor    eax,ebp
 1006b08:	mov    DWORD PTR [ebp-0x4],eax
 1006b0b:	mov    eax,ds:0x1013044
 1006b10:	cmp    eax,0xffffffff
 1006b13:	je     0x1006b20
 1006b15:	xor    ecx,ecx
 1006b17:	test   eax,eax
 1006b19:	setne  cl
 1006b1c:	mov    eax,ecx
 1006b1e:	jmp    0x1006b65
 1006b20:	lea    eax,[ebp-0x98]
 1006b26:	push   eax
 1006b27:	mov    DWORD PTR [ebp-0x98],0x94
 1006b31:	call   DWORD PTR ds:0x1001094
 1006b37:	cmp    DWORD PTR [ebp-0x88],0x1
 1006b3e:	jne    0x1006b5e
 1006b40:	cmp    DWORD PTR [ebp-0x94],0x4
 1006b47:	jne    0x1006b5e
 1006b49:	cmp    DWORD PTR [ebp-0x90],0x0
 1006b50:	jne    0x1006b5e
 1006b52:	call   0x1006ada
 1006b57:	test   eax,eax
 1006b59:	jne    0x1006b5e
 1006b5b:	inc    eax
 1006b5c:	jmp    0x1006b60
 1006b5e:	xor    eax,eax
 1006b60:	mov    ds:0x1013044,eax
 1006b65:	mov    ecx,DWORD PTR [ebp-0x4]
 1006b68:	xor    ecx,ebp
 1006b6a:	call   0x1008355
 1006b6f:	leave  
 1006b70:	ret    
 1006b71:	int3   
 1006b72:	int3   
 1006b73:	int3   
 1006b74:	int3   
 1006b75:	int3   
 1006b76:	mov    edi,edi
 1006b78:	push   ebp
 1006b79:	mov    ebp,esp
 1006b7b:	sub    esp,0x98
 1006b81:	mov    eax,ds:0x1013054
 1006b86:	xor    eax,ebp
 1006b88:	mov    DWORD PTR [ebp-0x4],eax
 1006b8b:	mov    eax,ds:0x1013048
 1006b90:	cmp    eax,0xffffffff
 1006b93:	je     0x1006ba0
 1006b95:	xor    ecx,ecx
 1006b97:	test   eax,eax
 1006b99:	setne  cl
 1006b9c:	mov    eax,ecx
 1006b9e:	jmp    0x1006bf8
 1006ba0:	lea    eax,[ebp-0x98]
 1006ba6:	push   eax
 1006ba7:	mov    DWORD PTR [ebp-0x98],0x94
 1006bb1:	call   DWORD PTR ds:0x1001094
 1006bb7:	cmp    DWORD PTR [ebp-0x88],0x1
 1006bbe:	jne    0x1006bf1
 1006bc0:	cmp    DWORD PTR [ebp-0x94],0x4
 1006bc7:	jne    0x1006bf1
 1006bc9:	cmp    DWORD PTR [ebp-0x90],0xa
 1006bd0:	jne    0x1006bf1
 1006bd2:	mov    eax,DWORD PTR [ebp-0x8c]
 1006bd8:	shr    eax,0x10
 1006bdb:	mov    ecx,0x45a
 1006be0:	cmp    ax,cx
 1006be3:	je     0x1006bf1
 1006be5:	call   0x1006ada
 1006bea:	test   eax,eax
 1006bec:	jne    0x1006bf1
 1006bee:	inc    eax
 1006bef:	jmp    0x1006bf3
 1006bf1:	xor    eax,eax
 1006bf3:	mov    ds:0x1013048,eax
 1006bf8:	mov    ecx,DWORD PTR [ebp-0x4]
 1006bfb:	xor    ecx,ebp
 1006bfd:	call   0x1008355
 1006c02:	leave  
 1006c03:	ret    
 1006c04:	int3   
 1006c05:	int3   
 1006c06:	int3   
 1006c07:	int3   
 1006c08:	int3   
 1006c09:	mov    edi,edi
 1006c0b:	push   ebp
 1006c0c:	mov    ebp,esp
 1006c0e:	sub    esp,0x98
 1006c14:	mov    eax,ds:0x1013054
 1006c19:	xor    eax,ebp
 1006c1b:	mov    DWORD PTR [ebp-0x4],eax
 1006c1e:	mov    eax,ds:0x101304c
 1006c23:	cmp    eax,0xffffffff
 1006c26:	je     0x1006c33
 1006c28:	xor    ecx,ecx
 1006c2a:	test   eax,eax
 1006c2c:	setne  cl
 1006c2f:	mov    eax,ecx
 1006c31:	jmp    0x1006c99
 1006c33:	lea    eax,[ebp-0x98]
 1006c39:	push   eax
 1006c3a:	mov    DWORD PTR [ebp-0x98],0x94
 1006c44:	call   DWORD PTR ds:0x1001094
 1006c4a:	cmp    DWORD PTR [ebp-0x88],0x1
 1006c51:	jne    0x1006c92
 1006c53:	cmp    DWORD PTR [ebp-0x94],0x4
 1006c5a:	jne    0x1006c92
 1006c5c:	cmp    DWORD PTR [ebp-0x90],0xa
 1006c63:	jne    0x1006c92
 1006c65:	mov    eax,DWORD PTR [ebp-0x8c]
 1006c6b:	shr    eax,0x10
 1006c6e:	mov    ecx,0x45a
 1006c73:	cmp    ax,cx
 1006c76:	je     0x1006c92
 1006c78:	mov    eax,0x8ae
 1006c7d:	cmp    WORD PTR [ebp-0x8c],ax
 1006c84:	jb     0x1006c92
 1006c86:	call   0x1006ada
 1006c8b:	test   eax,eax
 1006c8d:	jne    0x1006c92
 1006c8f:	inc    eax
 1006c90:	jmp    0x1006c94
 1006c92:	xor    eax,eax
 1006c94:	mov    ds:0x101304c,eax
 1006c99:	mov    ecx,DWORD PTR [ebp-0x4]
 1006c9c:	xor    ecx,ebp
 1006c9e:	call   0x1008355
 1006ca3:	leave  
 1006ca4:	ret    
 1006ca5:	int3   
 1006ca6:	int3   
 1006ca7:	int3   
 1006ca8:	int3   
 1006ca9:	int3   
 1006caa:	mov    edi,edi
 1006cac:	push   esi
 1006cad:	mov    esi,ecx
 1006caf:	and    DWORD PTR [esi],0x0
 1006cb2:	push   0x1001abc
 1006cb7:	mov    BYTE PTR [esi+0x4],0x0
 1006cbb:	call   0x100688f
 1006cc0:	test   eax,eax
 1006cc2:	je     0x1006d02
 1006cc4:	push   0x1001dc0
 1006cc9:	mov    ecx,esi
 1006ccb:	call   0x1005fed
 1006cd0:	mov    DWORD PTR [esi+0x108],eax
 1006cd6:	test   eax,eax
 1006cd8:	je     0x1006d02
 1006cda:	push   0x1001de8
 1006cdf:	mov    ecx,esi
 1006ce1:	call   0x1005fed
 1006ce6:	mov    DWORD PTR [esi+0x10c],eax
 1006cec:	test   eax,eax
 1006cee:	je     0x1006d02
 1006cf0:	push   0x1001dd0
 1006cf5:	mov    ecx,esi
 1006cf7:	call   0x1005fed
 1006cfc:	mov    DWORD PTR [esi+0x110],eax
 1006d02:	mov    eax,esi
 1006d04:	pop    esi
 1006d05:	ret    
 1006d06:	int3   
 1006d07:	int3   
 1006d08:	int3   
 1006d09:	int3   
 1006d0a:	int3   
 1006d0b:	mov    edi,edi
 1006d0d:	push   ebp
 1006d0e:	mov    ebp,esp
 1006d10:	push   ebx
 1006d11:	push   esi
 1006d12:	push   edi
 1006d13:	mov    edi,DWORD PTR [ebp+0x8]
 1006d16:	push   0xffffffeb
 1006d18:	push   edi
 1006d19:	call   DWORD PTR ds:0x10011d8
 1006d1f:	mov    ebx,eax
 1006d21:	mov    eax,DWORD PTR [ebp+0xc]
 1006d24:	sub    eax,0xf
 1006d27:	je     0x1007024
 1006d2d:	sub    eax,0x3f
 1006d30:	je     0x1006fa5
 1006d36:	sub    eax,0xc2
 1006d3b:	je     0x1006de6
 1006d41:	dec    eax
 1006d42:	jne    0x100704c
 1006d48:	movzx  ecx,WORD PTR [ebp+0x10]
 1006d4c:	mov    eax,0x1391
 1006d51:	sub    ecx,eax
 1006d53:	push   0x0
 1006d55:	pop    esi
 1006d56:	je     0x1006d8b
 1006d58:	dec    ecx
 1006d59:	jne    0x1006dbb
 1006d5b:	push   esi
 1006d5c:	push   esi
 1006d5d:	mov    edi,0xf1
 1006d62:	push   edi
 1006d63:	push   eax
 1006d64:	push   DWORD PTR [ebp+0x8]
 1006d67:	call   DWORD PTR ds:0x10011d0
 1006d6d:	push   esi
 1006d6e:	push   0x1
 1006d70:	push   edi
 1006d71:	push   0x1392
 1006d76:	push   DWORD PTR [ebp+0x8]
 1006d79:	call   DWORD PTR ds:0x10011d0
 1006d7f:	mov    DWORD PTR [ebx+0x10],0x1
 1006d86:	mov    DWORD PTR [ebx+0xc],esi
 1006d89:	jmp    0x1006db8
 1006d8b:	push   esi
 1006d8c:	push   0x1
 1006d8e:	mov    edi,0xf1
 1006d93:	push   edi
 1006d94:	push   eax
 1006d95:	push   DWORD PTR [ebp+0x8]
 1006d98:	call   DWORD PTR ds:0x10011d0
 1006d9e:	push   esi
 1006d9f:	push   esi
 1006da0:	push   edi
 1006da1:	push   0x1392
 1006da6:	push   DWORD PTR [ebp+0x8]
 1006da9:	call   DWORD PTR ds:0x10011d0
 1006daf:	xor    eax,eax
 1006db1:	inc    eax
 1006db2:	mov    DWORD PTR [ebx+0x10],eax
 1006db5:	mov    DWORD PTR [ebx+0xc],eax
 1006db8:	mov    edi,DWORD PTR [ebp+0x8]
 1006dbb:	xor    eax,eax
 1006dbd:	cmp    DWORD PTR [ebx+0xc],esi
 1006dc0:	je     0x1006dd0
 1006dc2:	cmp    DWORD PTR ds:0x10142b8,esi
 1006dc8:	sete   al
 1006dcb:	or     eax,0x2
 1006dce:	jmp    0x1006dd9
 1006dd0:	cmp    DWORD PTR ds:0x10142b8,esi
 1006dd6:	sete   al
 1006dd9:	push   eax
 1006dda:	push   esi
 1006ddb:	push   0x470
 1006de0:	push   edi
 1006de1:	jmp    0x1006f0d
 1006de6:	mov    eax,DWORD PTR [ebp+0x14]
 1006de9:	mov    esi,DWORD PTR [eax+0x1c]
 1006dec:	push   esi
 1006ded:	push   0xffffffeb
 1006def:	push   edi
 1006df0:	call   DWORD PTR ds:0x10011dc
 1006df6:	push   0x1389
 1006dfb:	push   edi
 1006dfc:	call   DWORD PTR ds:0x10011ec
 1006e02:	push   0x1
 1006e04:	push   DWORD PTR [esi]
 1006e06:	push   0x30
 1006e08:	push   eax
 1006e09:	call   DWORD PTR ds:0x10011f0
 1006e0f:	push   0x114
 1006e14:	call   0x1008579
 1006e19:	xor    esi,esi
 1006e1b:	pop    ecx
 1006e1c:	cmp    eax,esi
 1006e1e:	je     0x1006e2b
 1006e20:	mov    ecx,eax
 1006e22:	call   0x1006caa
 1006e27:	mov    ebx,eax
 1006e29:	jmp    0x1006e2d
 1006e2b:	xor    ebx,ebx
 1006e2d:	cmp    ebx,esi
 1006e2f:	je     0x1006f4c
 1006e35:	cmp    DWORD PTR [ebx],esi
 1006e37:	je     0x1006f4c
 1006e3d:	push   esi
 1006e3e:	push   esi
 1006e3f:	push   esi
 1006e40:	call   DWORD PTR [ebx+0x110]
 1006e46:	mov    DWORD PTR [ebp+0x14],eax
 1006e49:	cmp    eax,esi
 1006e4b:	jne    0x1006e86
 1006e4d:	push   0x1002028
 1006e52:	push   esi
 1006e53:	push   esi
 1006e54:	push   0x1002018
 1006e59:	push   0x24b
 1006e5e:	push   0x1001e94
 1006e63:	call   0x100470a
 1006e68:	add    esp,0x18
 1006e6b:	push   esi
 1006e6c:	push   0x5
 1006e6e:	push   0x471
 1006e73:	push   edi
 1006e74:	call   DWORD PTR ds:0x10011e4
 1006e7a:	push   eax
 1006e7b:	call   DWORD PTR ds:0x10011e0
 1006e81:	jmp    0x1006f92
 1006e86:	push   eax
 1006e87:	call   0x1008579
 1006e8c:	mov    edi,eax
 1006e8e:	pop    ecx
 1006e8f:	mov    DWORD PTR [ebp+0xc],edi
 1006e92:	cmp    edi,esi
 1006e94:	jne    0x1006ec1
 1006e96:	push   0x1001b50
 1006e9b:	push   esi
 1006e9c:	push   esi
 1006e9d:	push   0x1002018
 1006ea2:	push   0x252
 1006ea7:	push   0x1001e94
 1006eac:	call   0x100470a
 1006eb1:	add    esp,0x18
 1006eb4:	push   esi
 1006eb5:	push   0x5
 1006eb7:	push   0x471
 1006ebc:	push   DWORD PTR [ebp+0x8]
 1006ebf:	jmp    0x1006e74
 1006ec1:	push   esi
 1006ec2:	push   DWORD PTR [ebp+0x14]
 1006ec5:	push   edi
 1006ec6:	call   DWORD PTR [ebx+0x110]
 1006ecc:	test   eax,eax
 1006ece:	jne    0x1006f1f
 1006ed0:	push   0x1001ff4
 1006ed5:	push   esi
 1006ed6:	push   esi
 1006ed7:	push   0x1002018
 1006edc:	push   0x259
 1006ee1:	push   0x1001e94
 1006ee6:	call   0x100470a
 1006eeb:	push   edi
 1006eec:	call   0x100850b
 1006ef1:	add    esp,0x1c
 1006ef4:	mov    ecx,ebx
 1006ef6:	call   0x1005f9d
 1006efb:	push   ebx
 1006efc:	call   0x100850b
 1006f01:	pop    ecx
 1006f02:	push   esi
 1006f03:	push   0x5
 1006f05:	push   0x471
 1006f0a:	push   DWORD PTR [ebp+0x8]
 1006f0d:	call   DWORD PTR ds:0x10011e4
 1006f13:	push   eax
 1006f14:	call   DWORD PTR ds:0x10011e0
 1006f1a:	jmp    0x100704c
 1006f1f:	push   edi
 1006f20:	mov    edi,0x1390
 1006f25:	push   edi
 1006f26:	push   DWORD PTR [ebp+0x8]
 1006f29:	call   DWORD PTR ds:0x10011e8
 1006f2f:	push   esi
 1006f30:	push   0xffffffff
 1006f32:	push   0xb1
 1006f37:	push   edi
 1006f38:	push   DWORD PTR [ebp+0x8]
 1006f3b:	call   DWORD PTR ds:0x10011d0
 1006f41:	push   DWORD PTR [ebp+0xc]
 1006f44:	call   0x100850b
 1006f49:	pop    ecx
 1006f4a:	jmp    0x1006f92
 1006f4c:	push   0x1001fd4
 1006f51:	push   esi
 1006f52:	push   esi
 1006f53:	push   0x1002018
 1006f58:	push   0x23b
 1006f5d:	push   0x1001e94
 1006f62:	call   0x100470a
 1006f67:	add    esp,0x18
 1006f6a:	push   esi
 1006f6b:	push   0x30
 1006f6d:	push   0x72
 1006f6f:	call   0x1007b30
 1006f74:	push   esi
 1006f75:	push   0x5
 1006f77:	push   0x471
 1006f7c:	push   edi
 1006f7d:	call   DWORD PTR ds:0x10011e4
 1006f83:	push   eax
 1006f84:	call   DWORD PTR ds:0x10011e0
 1006f8a:	cmp    ebx,esi
 1006f8c:	je     0x100704c
 1006f92:	mov    ecx,ebx
 1006f94:	call   0x1005f9d
 1006f99:	push   ebx
 1006f9a:	call   0x100850b
 1006f9f:	pop    ecx
 1006fa0:	jmp    0x100704c
 1006fa5:	mov    eax,DWORD PTR [ebp+0x14]
 1006fa8:	mov    eax,DWORD PTR [eax+0x8]
 1006fab:	cmp    eax,0xffffff31
 1006fb0:	je     0x1006ff0
 1006fb2:	cmp    eax,0xffffff37
 1006fb7:	je     0x1006fe7
 1006fb9:	cmp    eax,0xffffff38
 1006fbe:	jne    0x100704c
 1006fc4:	xor    esi,esi
 1006fc6:	push   esi
 1006fc7:	push   esi
 1006fc8:	push   0x470
 1006fcd:	push   edi
 1006fce:	call   DWORD PTR ds:0x10011e4
 1006fd4:	push   eax
 1006fd5:	call   DWORD PTR ds:0x10011e0
 1006fdb:	mov    DWORD PTR ds:0x10142b8,0x1
 1006fe5:	jmp    0x100704c
 1006fe7:	and    DWORD PTR ds:0x10142b8,0x0
 1006fee:	jmp    0x100704c
 1006ff0:	xor    esi,esi
 1006ff2:	cmp    DWORD PTR [ebx+0xc],esi
 1006ff5:	jne    0x100701c
 1006ff7:	push   esi
 1006ff8:	push   0x5
 1006ffa:	push   0x471
 1006fff:	push   edi
 1007000:	call   DWORD PTR ds:0x10011e4
 1007006:	push   eax
 1007007:	call   DWORD PTR ds:0x10011e0
 100700d:	push   0xffffffff
 100700f:	push   esi
 1007010:	push   edi
 1007011:	call   DWORD PTR ds:0x10011dc
 1007017:	xor    eax,eax
 1007019:	inc    eax
 100701a:	jmp    0x100704e
 100701c:	mov    DWORD PTR ds:0x10142b4,esi
 1007022:	jmp    0x100704c
 1007024:	xor    esi,esi
 1007026:	cmp    DWORD PTR ds:0x10142b4,esi
 100702c:	jne    0x100704c
 100702e:	push   esi
 100702f:	push   0xffffffff
 1007031:	push   0xb1
 1007036:	push   0x1390
 100703b:	push   edi
 100703c:	call   DWORD PTR ds:0x10011d0
 1007042:	mov    DWORD PTR ds:0x10142b4,0x1
 100704c:	xor    eax,eax
 100704e:	pop    edi
 100704f:	pop    esi
 1007050:	pop    ebx
 1007051:	pop    ebp
 1007052:	ret    0x10
 1007055:	int3   
 1007056:	int3   
 1007057:	int3   
 1007058:	int3   
 1007059:	int3   
 100705a:	mov    edi,edi
 100705c:	push   esi
 100705d:	push   0x1002074
 1007062:	mov    esi,ecx
 1007064:	call   0x10045b8
 1007069:	mov    eax,DWORD PTR [esi+0xc]
 100706c:	pop    ecx
 100706d:	test   eax,eax
 100706f:	je     0x100709d
 1007071:	push   eax
 1007072:	call   DWORD PTR ds:0x1001090
 1007078:	test   eax,eax
 100707a:	jne    0x100709d
 100707c:	push   eax
 100707d:	call   DWORD PTR ds:0x1001124
 1007083:	push   eax
 1007084:	push   0x1002064
 1007089:	push   0x100204c
 100708e:	push   0x44
 1007090:	push   0x1001e94
 1007095:	call   0x100470a
 100709a:	add    esp,0x18
 100709d:	mov    esi,DWORD PTR [esi+0x10]
 10070a0:	test   esi,esi
 10070a2:	je     0x10070b2
 10070a4:	mov    ecx,esi
 10070a6:	call   0x1005f9d
 10070ab:	push   esi
 10070ac:	call   0x100850b
 10070b1:	pop    ecx
 10070b2:	pop    esi
 10070b3:	ret    
 10070b4:	int3   
 10070b5:	int3   
 10070b6:	int3   
 10070b7:	int3   
 10070b8:	int3   
 10070b9:	mov    edi,edi
 10070bb:	push   ebp
 10070bc:	mov    ebp,esp
 10070be:	sub    esp,0x264
 10070c4:	mov    eax,ds:0x1013054
 10070c9:	xor    eax,ebp
 10070cb:	mov    DWORD PTR [ebp-0x4],eax
 10070ce:	mov    eax,DWORD PTR [ebp+0x8]
 10070d1:	push   ebx
 10070d2:	push   esi
 10070d3:	mov    esi,DWORD PTR [ebp+0x14]
 10070d6:	push   edi
 10070d7:	push   0xffffffeb
 10070d9:	push   eax
 10070da:	mov    DWORD PTR [ebp-0x260],eax
 10070e0:	xor    ebx,ebx
 10070e2:	xor    edi,edi
 10070e4:	call   DWORD PTR ds:0x10011d8
 10070ea:	mov    DWORD PTR [ebp-0x264],eax
 10070f0:	cmp    eax,ebx
 10070f2:	je     0x10070f7
 10070f4:	mov    edi,DWORD PTR [eax+0x1c]
 10070f7:	mov    eax,DWORD PTR [ebp+0xc]
 10070fa:	cmp    eax,0x2b
 10070fd:	je     0x10073a9
 1007103:	cmp    eax,0x4e
 1007106:	je     0x1007366
 100710c:	cmp    eax,0x110
 1007111:	je     0x10071a9
 1007117:	cmp    eax,0x8002
 100711c:	jne    0x10073b2
 1007122:	push   0x1002114
 1007127:	call   0x10045b8
 100712c:	pop    ecx
 100712d:	cmp    edi,ebx
 100712f:	je     0x1007186
 1007131:	cmp    DWORD PTR [edi+0x8],0x3
 1007135:	jne    0x1007146
 1007137:	cmp    DWORD PTR [edi+0x14],ebx
 100713a:	jl     0x1007146
 100713c:	push   ebx
 100713d:	push   0x30
 100713f:	push   0x72
 1007141:	call   0x1007b30
 1007146:	cmp    DWORD PTR [edi+0x14],0xfffffff2
 100714a:	jne    0x100715b
 100714c:	mov    esi,DWORD PTR [ebp-0x264]
 1007152:	mov    DWORD PTR [esi+0x18],0x1
 1007159:	jmp    0x1007169
 100715b:	mov    ecx,DWORD PTR [ebp-0x264]
 1007161:	mov    eax,DWORD PTR [edi+0x8]
 1007164:	mov    DWORD PTR [ecx+0x18],eax
 1007167:	mov    esi,ecx
 1007169:	xor    eax,eax
 100716b:	cmp    DWORD PTR [edi+0x14],0x1
 100716f:	mov    ecx,edi
 1007171:	sete   al
 1007174:	mov    DWORD PTR [esi+0x14],eax
 1007177:	call   0x100705a
 100717c:	push   edi
 100717d:	call   0x100850b
 1007182:	pop    ecx
 1007183:	mov    DWORD PTR [esi+0x1c],ebx
 1007186:	push   ebx
 1007187:	push   0x1
 1007189:	push   0x471
 100718e:	push   DWORD PTR [ebp-0x260]
 1007194:	call   DWORD PTR ds:0x10011e4
 100719a:	push   eax
 100719b:	call   DWORD PTR ds:0x10011e0
 10071a1:	xor    eax,eax
 10071a3:	inc    eax
 10071a4:	jmp    0x10073b4
 10071a9:	mov    esi,DWORD PTR [esi+0x1c]
 10071ac:	mov    edi,DWORD PTR [esi+0x1c]
 10071af:	push   esi
 10071b0:	push   0xffffffeb
 10071b2:	push   DWORD PTR [ebp-0x260]
 10071b8:	call   DWORD PTR ds:0x10011dc
 10071be:	push   0x1
 10071c0:	push   DWORD PTR [esi]
 10071c2:	push   0x30
 10071c4:	push   0x1389
 10071c9:	push   DWORD PTR [ebp-0x260]
 10071cf:	call   DWORD PTR ds:0x10011ec
 10071d5:	push   eax
 10071d6:	call   DWORD PTR ds:0x10011f0
 10071dc:	cmp    edi,ebx
 10071de:	je     0x1007339
 10071e4:	cmp    DWORD PTR [edi+0x8],ebx
 10071e7:	jne    0x1007324
 10071ed:	push   0x258
 10071f2:	lea    eax,[ebp-0x25c]
 10071f8:	push   eax
 10071f9:	push   0x1f48
 10071fe:	push   ebx
 10071ff:	call   DWORD PTR ds:0x1001084
 1007205:	push   eax
 1007206:	call   DWORD PTR ds:0x1001208
 100720c:	lea    eax,[ebp-0x25c]
 1007212:	push   eax
 1007213:	push   0x1393
 1007218:	push   DWORD PTR [ebp-0x260]
 100721e:	call   DWORD PTR ds:0x10011e8
 1007224:	push   0x1
 1007226:	push   DWORD PTR [esi+0x4]
 1007229:	push   0x30
 100722b:	push   0x1393
 1007230:	push   DWORD PTR [ebp-0x260]
 1007236:	call   DWORD PTR ds:0x10011ec
 100723c:	push   eax
 100723d:	call   DWORD PTR ds:0x10011f0
 1007243:	mov    eax,DWORD PTR [ebp-0x260]
 1007249:	mov    DWORD PTR [edi],eax
 100724b:	cmp    DWORD PTR [edi+0x10],ebx
 100724e:	jne    0x10072c2
 1007250:	push   0x114
 1007255:	call   0x1008579
 100725a:	pop    ecx
 100725b:	cmp    eax,ebx
 100725d:	je     0x1007268
 100725f:	mov    ecx,eax
 1007261:	call   0x1006caa
 1007266:	jmp    0x100726a
 1007268:	xor    eax,eax
 100726a:	mov    DWORD PTR [edi+0x10],eax
 100726d:	cmp    eax,ebx
 100726f:	je     0x1007275
 1007271:	cmp    DWORD PTR [eax],ebx
 1007273:	jne    0x10072c2
 1007275:	push   0x1001fd4
 100727a:	push   ebx
 100727b:	push   ebx
 100727c:	push   0x1002104
 1007281:	push   0x15a
 1007286:	push   0x1001e94
 100728b:	call   0x100470a
 1007290:	add    esp,0x18
 1007293:	push   ebx
 1007294:	push   0x30
 1007296:	push   0x72
 1007298:	call   0x1007b30
 100729d:	mov    ecx,edi
 100729f:	call   0x100705a
 10072a4:	push   edi
 10072a5:	call   0x100850b
 10072aa:	pop    ecx
 10072ab:	mov    DWORD PTR [esi+0x1c],ebx
 10072ae:	push   ebx
 10072af:	push   0x1
 10072b1:	mov    DWORD PTR [esi+0x18],0x3
 10072b8:	push   0x471
 10072bd:	jmp    0x1007380
 10072c2:	push   0x10020f0
 10072c7:	call   0x10045b8
 10072cc:	pop    ecx
 10072cd:	mov    ecx,edi
 10072cf:	call   0x1006326
 10072d4:	test   eax,eax
 10072d6:	je     0x10072f6
 10072d8:	mov    ecx,edi
 10072da:	call   0x10063a8
 10072df:	test   eax,eax
 10072e1:	jne    0x100731b
 10072e3:	push   0x10020d0
 10072e8:	push   ebx
 10072e9:	push   ebx
 10072ea:	push   0x1002104
 10072ef:	push   0x16b
 10072f4:	jmp    0x1007307
 10072f6:	push   0x10020ac
 10072fb:	push   ebx
 10072fc:	push   ebx
 10072fd:	push   0x1002104
 1007302:	push   0x16f
 1007307:	push   0x1001e94
 100730c:	call   0x100470a
 1007311:	mov    DWORD PTR [edi+0x8],0x3
 1007318:	add    esp,0x18
 100731b:	cmp    DWORD PTR [edi+0x8],ebx
 100731e:	je     0x10073b2
 1007324:	push   ebx
 1007325:	push   ebx
 1007326:	push   0x8002
 100732b:	push   DWORD PTR [ebp-0x260]
 1007331:	call   DWORD PTR ds:0x10011f0
 1007337:	jmp    0x10073b2
 1007339:	push   0x1002084
 100733e:	push   ebx
 100733f:	push   ebx
 1007340:	push   0x1002104
 1007345:	push   0x177
 100734a:	push   0x1001e94
 100734f:	call   0x100470a
 1007354:	add    esp,0x18
 1007357:	push   ebx
 1007358:	push   0x30
 100735a:	push   0x72
 100735c:	call   0x1007b30
 1007361:	jmp    0x10072ae
 1007366:	mov    esi,DWORD PTR [esi+0x8]
 1007369:	cmp    esi,0xffffff2f
 100736f:	je     0x1007395
 1007371:	cmp    esi,0xffffff38
 1007377:	jne    0x10073b2
 1007379:	push   ebx
 100737a:	push   ebx
 100737b:	push   0x470
 1007380:	push   DWORD PTR [ebp-0x260]
 1007386:	call   DWORD PTR ds:0x10011e4
 100738c:	push   eax
 100738d:	call   DWORD PTR ds:0x10011e0
 1007393:	jmp    0x10073b2
 1007395:	push   0x1
 1007397:	push   ebx
 1007398:	push   DWORD PTR [ebp-0x260]
 100739e:	call   DWORD PTR ds:0x10011dc
 10073a4:	jmp    0x10071a1
 10073a9:	push   esi
 10073aa:	push   DWORD PTR [ebp+0x10]
 10073ad:	call   0x1007adb
 10073b2:	xor    eax,eax
 10073b4:	mov    ecx,DWORD PTR [ebp-0x4]
 10073b7:	pop    edi
 10073b8:	pop    esi
 10073b9:	xor    ecx,ebp
 10073bb:	pop    ebx
 10073bc:	call   0x1008355
 10073c1:	leave  
 10073c2:	ret    0x10
 10073c5:	int3   
 10073c6:	int3   
 10073c7:	int3   
 10073c8:	int3   
 10073c9:	int3   
 10073ca:	mov    edi,edi
 10073cc:	push   ebp
 10073cd:	mov    ebp,esp
 10073cf:	sub    esp,0x234
 10073d5:	mov    eax,ds:0x1013054
 10073da:	xor    eax,ebp
 10073dc:	mov    DWORD PTR [ebp-0x4],eax
 10073df:	mov    eax,DWORD PTR [ebp+0x8]
 10073e2:	push   ebx
 10073e3:	push   esi
 10073e4:	mov    esi,DWORD PTR [ebp+0xc]
 10073e7:	push   edi
 10073e8:	push   0x30
 10073ea:	mov    DWORD PTR [ebp-0x19c],eax
 10073f0:	xor    ebx,ebx
 10073f2:	lea    eax,[ebp-0x1cc]
 10073f8:	push   ebx
 10073f9:	push   eax
 10073fa:	call   0x1008600
 10073ff:	xor    eax,eax
 1007401:	mov    DWORD PTR [ebp-0x1e0],ebx
 1007407:	lea    edi,[ebp-0x1dc]
 100740d:	stos   DWORD PTR es:[edi],eax
 100740e:	stos   DWORD PTR es:[edi],eax
 100740f:	push   0x30
 1007411:	stos   DWORD PTR es:[edi],eax
 1007412:	lea    eax,[ebp-0x230]
 1007418:	push   ebx
 1007419:	push   eax
 100741a:	mov    DWORD PTR [ebp-0x234],ebx
 1007420:	call   0x1008600
 1007425:	xor    eax,eax
 1007427:	add    esp,0x18
 100742a:	push   0x7
 100742c:	pop    ecx
 100742d:	mov    DWORD PTR [ebp-0x200],ebx
 1007433:	lea    edi,[ebp-0x1fc]
 1007439:	rep stos DWORD PTR es:[edi],eax
 100743b:	mov    eax,DWORD PTR [ebp-0x19c]
 1007441:	mov    edi,DWORD PTR ds:0x1001024
 1007447:	mov    DWORD PTR [ebp-0x1c8],eax
 100744d:	lea    eax,[ebp-0x200]
 1007453:	mov    DWORD PTR [ebp-0x1b4],eax
 1007459:	mov    eax,esi
 100745b:	neg    eax
 100745d:	sbb    eax,eax
 100745f:	and    eax,0x64
 1007462:	mov    DWORD PTR [ebp-0x198],eax
 1007468:	add    eax,0x1388
 100746d:	movzx  eax,ax
 1007470:	mov    DWORD PTR [ebp-0x1c4],eax
 1007476:	lea    eax,[ebp-0x1d0]
 100747c:	push   eax
 100747d:	mov    DWORD PTR [ebp-0x1d0],0x34
 1007487:	mov    DWORD PTR [ebp-0x1cc],0x800
 1007491:	mov    DWORD PTR [ebp-0x1b8],0x1006d0b
 100749b:	call   edi
 100749d:	mov    DWORD PTR [ebp-0x1e0],eax
 10074a3:	mov    eax,DWORD PTR [ebp-0x198]
 10074a9:	add    eax,0xfa0
 10074ae:	movzx  eax,ax
 10074b1:	mov    DWORD PTR [ebp-0x1c4],eax
 10074b7:	lea    eax,[ebp-0x1d0]
 10074bd:	push   eax
 10074be:	mov    DWORD PTR [ebp-0x1cc],0x3000
 10074c8:	mov    DWORD PTR [ebp-0x1a8],0x1f44
 10074d2:	mov    DWORD PTR [ebp-0x1a4],0x1f45
 10074dc:	mov    DWORD PTR [ebp-0x1b8],0x100641d
 10074e6:	call   edi
 10074e8:	mov    DWORD PTR [ebp-0x1dc],eax
 10074ee:	mov    eax,DWORD PTR [ebp-0x198]
 10074f4:	add    eax,0xbb8
 10074f9:	movzx  eax,ax
 10074fc:	mov    DWORD PTR [ebp-0x1c4],eax
 1007502:	lea    eax,[ebp-0x1d0]
 1007508:	push   eax
 1007509:	mov    DWORD PTR [ebp-0x1cc],0x3000
 1007513:	mov    DWORD PTR [ebp-0x1a8],0x1f46
 100751d:	mov    DWORD PTR [ebp-0x1a4],0x1f47
 1007527:	mov    DWORD PTR [ebp-0x1b8],0x10070b9
 1007531:	call   edi
 1007533:	mov    DWORD PTR [ebp-0x1d8],eax
 1007539:	mov    eax,DWORD PTR [ebp-0x198]
 100753f:	add    eax,0x1770
 1007544:	movzx  eax,ax
 1007547:	mov    DWORD PTR [ebp-0x1cc],0x800
 1007551:	mov    DWORD PTR [ebp-0x1c4],eax
 1007557:	mov    DWORD PTR [ebp-0x1b8],0x1006577
 1007561:	lea    eax,[ebp-0x1d0]
 1007567:	push   eax
 1007568:	call   edi
 100756a:	mov    DWORD PTR [ebp-0x1d4],eax
 1007570:	mov    eax,DWORD PTR [ebp-0x19c]
 1007576:	neg    esi
 1007578:	sbb    esi,esi
 100757a:	mov    DWORD PTR [ebp-0x228],eax
 1007580:	lea    eax,[ebp-0x1e0]
 1007586:	and    esi,0xff000020
 100758c:	push   0x150
 1007591:	mov    DWORD PTR [ebp-0x214],eax
 1007597:	add    esi,0x1000000
 100759d:	lea    eax,[ebp-0x190]
 10075a3:	push   ebx
 10075a4:	or     esi,0x88100
 10075aa:	push   eax
 10075ab:	mov    DWORD PTR [ebp-0x234],0x34
 10075b5:	mov    DWORD PTR [ebp-0x22c],ebx
 10075bb:	mov    DWORD PTR [ebp-0x230],esi
 10075c1:	mov    DWORD PTR [ebp-0x210],0x1006800
 10075cb:	mov    DWORD PTR [ebp-0x20c],0x1b5a
 10075d5:	mov    DWORD PTR [ebp-0x204],0x1b59
 10075df:	mov    DWORD PTR [ebp-0x218],ebx
 10075e5:	mov    DWORD PTR [ebp-0x21c],0x4
 10075ef:	call   0x1008600
 10075f4:	add    esp,0xc
 10075f7:	push   ebx
 10075f8:	lea    eax,[ebp-0x194]
 10075fe:	push   eax
 10075ff:	push   ebx
 1007600:	push   0x29
 1007602:	mov    DWORD PTR [ebp-0x194],0x154
 100760c:	call   DWORD PTR ds:0x10011cc
 1007612:	push   0xf
 1007614:	pop    ecx
 1007615:	lea    esi,[ebp-0x7c]
 1007618:	lea    edi,[ebp-0x40]
 100761b:	push   ebx
 100761c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100761e:	call   DWORD PTR ds:0x10011c4
 1007624:	mov    edi,DWORD PTR ds:0x1001084
 100762a:	push   0x20
 100762c:	mov    DWORD PTR [ebp-0x198],eax
 1007632:	lea    eax,[ebp-0x24]
 1007635:	push   eax
 1007636:	push   0x1f4b
 100763b:	push   ebx
 100763c:	call   edi
 100763e:	push   eax
 100763f:	call   DWORD PTR ds:0x1001208
 1007645:	mov    esi,DWORD PTR ds:0x1001048
 100764b:	lea    eax,[ebp-0x40]
 100764e:	push   eax
 100764f:	call   esi
 1007651:	mov    DWORD PTR [ebp-0x1f8],eax
 1007657:	lea    eax,[ebp-0x40]
 100765a:	push   eax
 100765b:	mov    DWORD PTR [ebp-0x30],0x2bc
 1007662:	call   esi
 1007664:	push   0x5a
 1007666:	push   DWORD PTR [ebp-0x198]
 100766c:	mov    DWORD PTR [ebp-0x1fc],eax
 1007672:	call   DWORD PTR ds:0x1001050
 1007678:	imul   eax,eax,0xfffffff4
 100767b:	push   0x48
 100767d:	pop    ecx
 100767e:	cdq    
 100767f:	idiv   ecx
 1007681:	push   0x20
 1007683:	mov    DWORD PTR [ebp-0x40],eax
 1007686:	lea    eax,[ebp-0x24]
 1007689:	push   eax
 100768a:	push   0x1f4a
 100768f:	push   ebx
 1007690:	call   edi
 1007692:	push   eax
 1007693:	call   DWORD PTR ds:0x1001208
 1007699:	lea    eax,[ebp-0x40]
 100769c:	push   eax
 100769d:	call   esi
 100769f:	push   DWORD PTR [ebp-0x198]
 10076a5:	mov    DWORD PTR [ebp-0x200],eax
 10076ab:	push   ebx
 10076ac:	call   DWORD PTR ds:0x10011c0
 10076b2:	push   DWORD PTR [ebp-0x19c]
 10076b8:	mov    DWORD PTR [ebp-0x1ec],ebx
 10076be:	mov    DWORD PTR [ebp-0x1e8],ebx
 10076c4:	mov    DWORD PTR [ebp-0x1e4],ebx
 10076ca:	call   0x10079dc
 10076cf:	lea    eax,[ebp-0x234]
 10076d5:	push   eax
 10076d6:	call   DWORD PTR ds:0x1001028
 10076dc:	mov    esi,eax
 10076de:	call   0x1007a57
 10076e3:	cmp    esi,0xffffffff
 10076e6:	jne    0x1007716
 10076e8:	push   ebx
 10076e9:	push   0x30
 10076eb:	push   0x72
 10076ed:	call   0x1007b30
 10076f2:	push   ebx
 10076f3:	call   DWORD PTR ds:0x1001124
 10076f9:	push   eax
 10076fa:	push   0x100213c
 10076ff:	push   0x1002128
 1007704:	push   0x39d
 1007709:	push   0x1001e94
 100770e:	call   0x100470a
 1007713:	add    esp,0x18
 1007716:	mov    ecx,DWORD PTR [ebp-0x1e4]
 100771c:	cmp    ecx,ebx
 100771e:	je     0x100772e
 1007720:	mov    edi,ecx
 1007722:	call   0x100705a
 1007727:	push   edi
 1007728:	call   0x100850b
 100772d:	pop    ecx
 100772e:	push   DWORD PTR [ebp-0x200]
 1007734:	mov    edi,DWORD PTR ds:0x100104c
 100773a:	call   edi
 100773c:	push   DWORD PTR [ebp-0x1f8]
 1007742:	call   edi
 1007744:	push   DWORD PTR [ebp-0x1fc]
 100774a:	call   edi
 100774c:	mov    ecx,DWORD PTR [ebp-0x4]
 100774f:	pop    edi
 1007750:	mov    eax,esi
 1007752:	pop    esi
 1007753:	xor    ecx,ebp
 1007755:	pop    ebx
 1007756:	call   0x1008355
 100775b:	leave  
 100775c:	ret    0x8
 100775f:	int3   
 1007760:	int3   
 1007761:	int3   
 1007762:	int3   
 1007763:	int3   
 1007764:	mov    edi,edi
 1007766:	push   ebp
 1007767:	mov    ebp,esp
 1007769:	sub    esp,0x240
 100776f:	mov    eax,ds:0x1013054
 1007774:	xor    eax,ebp
 1007776:	mov    DWORD PTR [ebp-0x4],eax
 1007779:	push   ebx
 100777a:	mov    ebx,DWORD PTR [ebp+0x8]
 100777d:	push   esi
 100777e:	push   edi
 100777f:	push   0x10021cc
 1007784:	call   0x10045b8
 1007789:	pop    ecx
 100778a:	xor    edi,edi
 100778c:	xor    esi,esi
 100778e:	call   0x1006af6
 1007793:	test   eax,eax
 1007795:	je     0x10077c7
 1007797:	push   0x10021a0
 100779c:	push   edi
 100779d:	push   edi
 100779e:	push   0x1002194
 10077a3:	push   0xfd
 10077a8:	push   0x1001e94
 10077ad:	call   0x100470a
 10077b2:	add    esp,0x18
 10077b5:	push   edi
 10077b6:	push   0x30
 10077b8:	push   0x1f42
 10077bd:	call   0x1007b30
 10077c2:	jmp    0x1007919
 10077c7:	push   0x104
 10077cc:	lea    eax,[ebp-0x108]
 10077d2:	push   eax
 10077d3:	call   DWORD PTR ds:0x100108c
 10077d9:	test   eax,eax
 10077db:	jne    0x1007808
 10077dd:	push   edi
 10077de:	call   DWORD PTR ds:0x1001124
 10077e4:	push   eax
 10077e5:	push   0x1001f88
 10077ea:	push   0x1002194
 10077ef:	push   0x103
 10077f4:	push   0x1001e94
 10077f9:	call   0x100470a
 10077fe:	add    esp,0x18
 1007801:	push   edi
 1007802:	push   0x30
 1007804:	push   0x72
 1007806:	jmp    0x10077bd
 1007808:	call   0x1006b76
 100780d:	test   eax,eax
 100780f:	je     0x10078e2
 1007815:	call   0x1006c09
 100781a:	test   eax,eax
 100781c:	jne    0x10078e2
 1007822:	mov    esi,0x1002184
 1007827:	push   esi
 1007828:	lea    eax,[ebp-0x108]
 100782e:	push   eax
 100782f:	lea    eax,[ebp-0x20c]
 1007835:	push   eax
 1007836:	call   0x10051aa
 100783b:	test   eax,eax
 100783d:	jne    0x100786a
 100783f:	push   esi
 1007840:	lea    eax,[ebp-0x108]
 1007846:	push   eax
 1007847:	push   0x1001954
 100784c:	push   edi
 100784d:	push   edi
 100784e:	push   0x1002194
 1007853:	push   0x10d
 1007858:	push   0x1001e94
 100785d:	call   0x100470a
 1007862:	add    esp,0x20
 1007865:	jmp    0x1007919
 100786a:	lea    eax,[ebp-0x240]
 1007870:	push   eax
 1007871:	lea    eax,[ebp-0x20c]
 1007877:	push   eax
 1007878:	call   0x1007931
 100787d:	test   al,al
 100787f:	jne    0x1007897
 1007881:	push   0x1001b88
 1007886:	push   edi
 1007887:	push   edi
 1007888:	push   0x1002194
 100788d:	push   0x112
 1007892:	jmp    0x10077f4
 1007897:	mov    eax,DWORD PTR [ebp-0x234]
 100789d:	movzx  ecx,ax
 10078a0:	push   ecx
 10078a1:	shr    eax,0x10
 10078a4:	push   eax
 10078a5:	mov    eax,DWORD PTR [ebp-0x238]
 10078ab:	movzx  ecx,ax
 10078ae:	push   ecx
 10078af:	shr    eax,0x10
 10078b2:	push   eax
 10078b3:	push   0x100215c
 10078b8:	call   0x10045b8
 10078bd:	mov    eax,DWORD PTR [ebp-0x238]
 10078c3:	shr    eax,0x10
 10078c6:	add    esp,0x14
 10078c9:	cmp    ax,0x5
 10078cd:	jb     0x10078df
 10078cf:	jne    0x10078db
 10078d1:	cmp    WORD PTR [ebp-0x238],0x50
 10078d9:	jb     0x10078df
 10078db:	xor    esi,esi
 10078dd:	jmp    0x10078e2
 10078df:	xor    esi,esi
 10078e1:	inc    esi
 10078e2:	call   DWORD PTR ds:0x100102c
 10078e8:	push   esi
 10078e9:	push   ebx
 10078ea:	call   0x10073ca
 10078ef:	lea    esi,[eax-0x3]
 10078f2:	neg    esi
 10078f4:	sbb    esi,esi
 10078f6:	inc    esi
 10078f7:	call   0x1004e32
 10078fc:	cmp    esi,edi
 10078fe:	je     0x1007919
 1007900:	push   0x100214c
 1007905:	call   0x10045b8
 100790a:	pop    ecx
 100790b:	call   0x1004f05
 1007910:	push   edi
 1007911:	push   0x2
 1007913:	call   DWORD PTR ds:0x10011fc
 1007919:	mov    ecx,DWORD PTR [ebp-0x4]
 100791c:	pop    edi
 100791d:	pop    esi
 100791e:	xor    ecx,ebp
 1007920:	xor    eax,eax
 1007922:	pop    ebx
 1007923:	call   0x1008355
 1007928:	leave  
 1007929:	ret    0x4
 100792c:	int3   
 100792d:	int3   
 100792e:	int3   
 100792f:	int3   
 1007930:	int3   
 1007931:	mov    edi,edi
 1007933:	push   ebp
 1007934:	mov    ebp,esp
 1007936:	sub    esp,0xc
 1007939:	push   esi
 100793a:	push   edi
 100793b:	push   0x34
 100793d:	xor    edi,edi
 100793f:	push   edi
 1007940:	push   DWORD PTR [ebp+0xc]
 1007943:	call   0x1008600
 1007948:	add    esp,0xc
 100794b:	lea    eax,[ebp-0xc]
 100794e:	push   eax
 100794f:	push   DWORD PTR [ebp+0x8]
 1007952:	call   0x10119d2
 1007957:	mov    esi,eax
 1007959:	cmp    esi,edi
 100795b:	jne    0x1007961
 100795d:	xor    al,al
 100795f:	jmp    0x10079aa
 1007961:	push   ebx
 1007962:	push   esi
 1007963:	call   0x1008579
 1007968:	mov    ebx,eax
 100796a:	pop    ecx
 100796b:	cmp    ebx,edi
 100796d:	je     0x10079a7
 100796f:	push   esi
 1007970:	push   edi
 1007971:	push   ebx
 1007972:	call   0x1008600
 1007977:	add    esp,0xc
 100797a:	push   ebx
 100797b:	push   esi
 100797c:	push   edi
 100797d:	push   DWORD PTR [ebp+0x8]
 1007980:	call   0x10119c6
 1007985:	test   eax,eax
 1007987:	je     0x10079a0
 1007989:	lea    eax,[ebp-0x4]
 100798c:	push   eax
 100798d:	lea    eax,[ebp-0x8]
 1007990:	push   eax
 1007991:	push   0x10012f0
 1007996:	push   ebx
 1007997:	call   0x10119de
 100799c:	test   eax,eax
 100799e:	jne    0x10079b0
 10079a0:	push   ebx
 10079a1:	call   0x100850b
 10079a6:	pop    ecx
 10079a7:	xor    al,al
 10079a9:	pop    ebx
 10079aa:	pop    edi
 10079ab:	pop    esi
 10079ac:	leave  
 10079ad:	ret    0x8
 10079b0:	cmp    DWORD PTR [ebp-0x4],0x34
 10079b4:	je     0x10079c6
 10079b6:	mov    BYTE PTR [ebp+0xb],0x0
 10079ba:	push   ebx
 10079bb:	call   0x100850b
 10079c0:	mov    al,BYTE PTR [ebp+0xb]
 10079c3:	pop    ecx
 10079c4:	jmp    0x10079a9
 10079c6:	mov    esi,DWORD PTR [ebp-0x8]
 10079c9:	mov    edi,DWORD PTR [ebp+0xc]
 10079cc:	push   0xd
 10079ce:	pop    ecx
 10079cf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10079d1:	mov    BYTE PTR [ebp+0xb],0x1
 10079d5:	jmp    0x10079ba
 10079d7:	int3   
 10079d8:	int3   
 10079d9:	int3   
 10079da:	int3   
 10079db:	int3   
 10079dc:	mov    edi,edi
 10079de:	push   ebp
 10079df:	mov    ebp,esp
 10079e1:	push   ebx
 10079e2:	push   esi
 10079e3:	mov    esi,DWORD PTR ds:0x10011c8
 10079e9:	push   edi
 10079ea:	push   0x2000
 10079ef:	xor    edi,edi
 10079f1:	push   edi
 10079f2:	push   edi
 10079f3:	push   edi
 10079f4:	push   0x1b5b
 10079f9:	push   DWORD PTR [ebp+0x8]
 10079fc:	call   esi
 10079fe:	push   edi
 10079ff:	mov    edi,DWORD PTR ds:0x1001034
 1007a05:	mov    ds:0x10142bc,eax
 1007a0a:	call   edi
 1007a0c:	push   DWORD PTR ds:0x10142bc
 1007a12:	mov    ebx,DWORD PTR ds:0x1001044
 1007a18:	push   eax
 1007a19:	mov    ds:0x10142c8,eax
 1007a1e:	call   ebx
 1007a20:	push   0x2000
 1007a25:	xor    eax,eax
 1007a27:	push   eax
 1007a28:	push   eax
 1007a29:	push   eax
 1007a2a:	push   0x1b5c
 1007a2f:	push   DWORD PTR [ebp+0x8]
 1007a32:	call   esi
 1007a34:	push   0x0
 1007a36:	mov    ds:0x10142c0,eax
 1007a3b:	call   edi
 1007a3d:	push   DWORD PTR ds:0x10142c0
 1007a43:	mov    ds:0x10142cc,eax
 1007a48:	push   eax
 1007a49:	call   ebx
 1007a4b:	pop    edi
 1007a4c:	pop    esi
 1007a4d:	pop    ebx
 1007a4e:	pop    ebp
 1007a4f:	ret    0x4
 1007a52:	int3   
 1007a53:	int3   
 1007a54:	int3   
 1007a55:	int3   
 1007a56:	int3   
 1007a57:	mov    eax,ds:0x10142bc
 1007a5c:	push   esi
 1007a5d:	mov    esi,DWORD PTR ds:0x100104c
 1007a63:	push   edi
 1007a64:	xor    edi,edi
 1007a66:	cmp    eax,edi
 1007a68:	je     0x1007a73
 1007a6a:	push   eax
 1007a6b:	call   esi
 1007a6d:	mov    DWORD PTR ds:0x10142bc,edi
 1007a73:	mov    eax,ds:0x10142c0
 1007a78:	cmp    eax,edi
 1007a7a:	je     0x1007a85
 1007a7c:	push   eax
 1007a7d:	call   esi
 1007a7f:	mov    DWORD PTR ds:0x10142c0,edi
 1007a85:	mov    eax,ds:0x10142c4
 1007a8a:	cmp    eax,edi
 1007a8c:	je     0x1007a97
 1007a8e:	push   eax
 1007a8f:	call   esi
 1007a91:	mov    DWORD PTR ds:0x10142c4,edi
 1007a97:	mov    eax,ds:0x10142c8
 1007a9c:	mov    esi,DWORD PTR ds:0x1001040
 1007aa2:	cmp    eax,edi
 1007aa4:	je     0x1007aaf
 1007aa6:	push   eax
 1007aa7:	call   esi
 1007aa9:	mov    DWORD PTR ds:0x10142c8,edi
 1007aaf:	mov    eax,ds:0x10142cc
 1007ab4:	cmp    eax,edi
 1007ab6:	je     0x1007ac1
 1007ab8:	push   eax
 1007ab9:	call   esi
 1007abb:	mov    DWORD PTR ds:0x10142cc,edi
 1007ac1:	mov    eax,ds:0x10142d0
 1007ac6:	cmp    eax,edi
 1007ac8:	je     0x1007ad3
 1007aca:	push   eax
 1007acb:	call   esi
 1007acd:	mov    DWORD PTR ds:0x10142d0,edi
 1007ad3:	pop    edi
 1007ad4:	pop    esi
 1007ad5:	ret    
 1007ad6:	int3   
 1007ad7:	int3   
 1007ad8:	int3   
 1007ad9:	int3   
 1007ada:	int3   
 1007adb:	mov    edi,edi
 1007add:	push   ebp
 1007ade:	mov    ebp,esp
 1007ae0:	sub    esp,0x18
 1007ae3:	cmp    DWORD PTR [ebp+0x8],0x1395
 1007aea:	jne    0x1007b27
 1007aec:	lea    eax,[ebp-0x18]
 1007aef:	push   eax
 1007af0:	push   0x18
 1007af2:	push   DWORD PTR ds:0x10142bc
 1007af8:	call   DWORD PTR ds:0x1001038
 1007afe:	push   0x8800c6
 1007b03:	push   DWORD PTR [ebp-0x10]
 1007b06:	xor    eax,eax
 1007b08:	push   DWORD PTR [ebp-0x14]
 1007b0b:	push   eax
 1007b0c:	push   eax
 1007b0d:	push   DWORD PTR ds:0x10142c8
 1007b13:	push   DWORD PTR [ebp-0x10]
 1007b16:	push   DWORD PTR [ebp-0x14]
 1007b19:	push   eax
 1007b1a:	push   eax
 1007b1b:	mov    eax,DWORD PTR [ebp+0xc]
 1007b1e:	push   DWORD PTR [eax+0x18]
 1007b21:	call   DWORD PTR ds:0x100103c
 1007b27:	leave  
 1007b28:	ret    0x8
 1007b2b:	int3   
 1007b2c:	int3   
 1007b2d:	int3   
 1007b2e:	int3   
 1007b2f:	int3   
 1007b30:	mov    edi,edi
 1007b32:	push   ebp
 1007b33:	mov    ebp,esp
 1007b35:	sub    esp,0x604
 1007b3b:	mov    eax,ds:0x1013054
 1007b40:	xor    eax,ebp
 1007b42:	mov    DWORD PTR [ebp-0x4],eax
 1007b45:	mov    eax,DWORD PTR [ebp+0x8]
 1007b48:	push   ebx
 1007b49:	mov    ebx,DWORD PTR [ebp+0x10]
 1007b4c:	lea    ecx,[eax-0x6a]
 1007b4f:	push   esi
 1007b50:	cmp    ecx,0x14
 1007b53:	ja     0x1007b5c
 1007b55:	mov    DWORD PTR [ebp+0xc],0x10
 1007b5c:	mov    esi,0x200
 1007b61:	push   esi
 1007b62:	cmp    eax,0x6f
 1007b65:	jne    0x1007bf4
 1007b6b:	lea    eax,[ebp-0x404]
 1007b71:	push   eax
 1007b72:	push   0x6f
 1007b74:	push   0x0
 1007b76:	call   DWORD PTR ds:0x1001208
 1007b7c:	test   eax,eax
 1007b7e:	jne    0x1007ba8
 1007b80:	push   eax
 1007b81:	call   DWORD PTR ds:0x1001124
 1007b87:	push   eax
 1007b88:	push   0x1001998
 1007b8d:	push   0x1002210
 1007b92:	push   0x6a
 1007b94:	push   0x10021dc
 1007b99:	call   0x100470a
 1007b9e:	add    esp,0x18
 1007ba1:	xor    eax,eax
 1007ba3:	jmp    0x1007c39
 1007ba8:	call   0x10053cb
 1007bad:	push   eax
 1007bae:	lea    eax,[ebp-0x404]
 1007bb4:	push   eax
 1007bb5:	lea    eax,[ebp-0x204]
 1007bbb:	push   esi
 1007bbc:	push   eax
 1007bbd:	call   0x100514c
 1007bc2:	add    esp,0x10
 1007bc5:	push   esi
 1007bc6:	lea    eax,[ebp-0x604]
 1007bcc:	push   eax
 1007bcd:	push   0x1f40
 1007bd2:	push   0x0
 1007bd4:	call   DWORD PTR ds:0x1001208
 1007bda:	test   eax,eax
 1007bdc:	jne    0x1007c21
 1007bde:	push   eax
 1007bdf:	call   DWORD PTR ds:0x1001124
 1007be5:	push   eax
 1007be6:	push   0x1001998
 1007beb:	push   0x1002210
 1007bf0:	push   0x75
 1007bf2:	jmp    0x1007b94
 1007bf4:	lea    ecx,[ebp-0x204]
 1007bfa:	push   ecx
 1007bfb:	push   eax
 1007bfc:	push   0x0
 1007bfe:	call   DWORD PTR ds:0x1001208
 1007c04:	test   eax,eax
 1007c06:	jne    0x1007bc5
 1007c08:	push   eax
 1007c09:	call   DWORD PTR ds:0x1001124
 1007c0f:	push   eax
 1007c10:	push   0x1001998
 1007c15:	push   0x1002210
 1007c1a:	push   0x70
 1007c1c:	jmp    0x1007b94
 1007c21:	push   DWORD PTR [ebp+0xc]
 1007c24:	lea    eax,[ebp-0x604]
 1007c2a:	push   eax
 1007c2b:	lea    eax,[ebp-0x204]
 1007c31:	push   eax
 1007c32:	push   ebx
 1007c33:	call   DWORD PTR ds:0x100120c
 1007c39:	mov    ecx,DWORD PTR [ebp-0x4]
 1007c3c:	pop    esi
 1007c3d:	xor    ecx,ebp
 1007c3f:	pop    ebx
 1007c40:	call   0x1008355
 1007c45:	leave  
 1007c46:	ret    0xc
 1007c49:	int3   
 1007c4a:	int3   
 1007c4b:	int3   
 1007c4c:	int3   
 1007c4d:	int3   
 1007c4e:	mov    edi,edi
 1007c50:	push   ebp
 1007c51:	mov    ebp,esp
 1007c53:	cmp    DWORD PTR ds:0x10142dc,0x1
 1007c5a:	jne    0x1007c61
 1007c5c:	call   0x1008f90
 1007c61:	push   DWORD PTR [ebp+0x8]
 1007c64:	call   0x1008ddc
 1007c69:	push   0xff
 1007c6e:	call   0x1008ab5
 1007c73:	pop    ecx
 1007c74:	pop    ecx
 1007c75:	pop    ebp
 1007c76:	ret    
 1007c77:	int3   
 1007c78:	int3   
 1007c79:	int3   
 1007c7a:	int3   
 1007c7b:	int3   
 1007c7c:	push   0x58
 1007c7e:	push   0x1011a10
 1007c83:	call   0x1009cd0
 1007c88:	lea    eax,[ebp-0x68]
 1007c8b:	push   eax
 1007c8c:	call   DWORD PTR ds:0x1001134
 1007c92:	xor    esi,esi
 1007c94:	cmp    DWORD PTR ds:0x10160fc,esi
 1007c9a:	jne    0x1007ca7
 1007c9c:	push   esi
 1007c9d:	push   esi
 1007c9e:	push   0x1
 1007ca0:	push   esi
 1007ca1:	call   DWORD PTR ds:0x1001130
 1007ca7:	mov    eax,0x5a4d
 1007cac:	cmp    WORD PTR ds:0x1000000,ax
 1007cb3:	je     0x1007cba
 1007cb5:	mov    DWORD PTR [ebp-0x1c],esi
 1007cb8:	jmp    0x1007cf0
 1007cba:	mov    eax,ds:0x100003c
 1007cbf:	cmp    DWORD PTR [eax+0x1000000],0x4550
 1007cc9:	jne    0x1007cb5
 1007ccb:	mov    ecx,0x10b
 1007cd0:	cmp    WORD PTR [eax+0x1000018],cx
 1007cd7:	jne    0x1007cb5
 1007cd9:	cmp    DWORD PTR [eax+0x1000074],0xe
 1007ce0:	jbe    0x1007cb5
 1007ce2:	xor    ecx,ecx
 1007ce4:	cmp    DWORD PTR [eax+0x10000e8],esi
 1007cea:	setne  cl
 1007ced:	mov    DWORD PTR [ebp-0x1c],ecx
 1007cf0:	call   0x1009c9e
 1007cf5:	test   eax,eax
 1007cf7:	jne    0x1007d01
 1007cf9:	push   0x1c
 1007cfb:	call   0x1007c4e
 1007d00:	pop    ecx
 1007d01:	call   0x1009b1e
 1007d06:	test   eax,eax
 1007d08:	jne    0x1007d12
 1007d0a:	push   0x10
 1007d0c:	call   0x1007c4e
 1007d11:	pop    ecx
 1007d12:	call   0x10097a7
 1007d17:	mov    DWORD PTR [ebp-0x4],esi
 1007d1a:	call   0x100955d
 1007d1f:	test   eax,eax
 1007d21:	jns    0x1007d2b
 1007d23:	push   0x1b
 1007d25:	call   0x1008d8e
 1007d2a:	pop    ecx
 1007d2b:	call   DWORD PTR ds:0x100112c
 1007d31:	mov    ds:0x10160f8,eax
 1007d36:	call   0x10094c1
 1007d3b:	mov    ds:0x10142d4,eax
 1007d40:	call   0x1009401
 1007d45:	test   eax,eax
 1007d47:	jns    0x1007d51
 1007d49:	push   0x8
 1007d4b:	call   0x1008d8e
 1007d50:	pop    ecx
 1007d51:	call   0x1009181
 1007d56:	test   eax,eax
 1007d58:	jns    0x1007d62
 1007d5a:	push   0x9
 1007d5c:	call   0x1008d8e
 1007d61:	pop    ecx
 1007d62:	push   0x1
 1007d64:	call   0x1008b4f
 1007d69:	pop    ecx
 1007d6a:	cmp    eax,esi
 1007d6c:	je     0x1007d75
 1007d6e:	push   eax
 1007d6f:	call   0x1008d8e
 1007d74:	pop    ecx
 1007d75:	call   0x100911d
 1007d7a:	test   BYTE PTR [ebp-0x3c],0x1
 1007d7e:	je     0x1007d86
 1007d80:	movzx  ecx,WORD PTR [ebp-0x38]
 1007d84:	jmp    0x1007d89
 1007d86:	push   0xa
 1007d88:	pop    ecx
 1007d89:	push   ecx
 1007d8a:	push   eax
 1007d8b:	push   esi
 1007d8c:	push   0x1000000
 1007d91:	call   0x1005af6
 1007d96:	mov    DWORD PTR [ebp-0x20],eax
 1007d99:	cmp    DWORD PTR [ebp-0x1c],esi
 1007d9c:	jne    0x1007da4
 1007d9e:	push   eax
 1007d9f:	call   0x1008d30
 1007da4:	call   0x1008d66
 1007da9:	jmp    0x1007dd9
 1007dab:	mov    eax,DWORD PTR [ebp-0x14]
 1007dae:	mov    ecx,DWORD PTR [eax]
 1007db0:	mov    ecx,DWORD PTR [ecx]
 1007db2:	mov    DWORD PTR [ebp-0x24],ecx
 1007db5:	push   eax
 1007db6:	push   ecx
 1007db7:	call   0x1008fce
 1007dbc:	pop    ecx
 1007dbd:	pop    ecx
 1007dbe:	ret    
 1007dbf:	mov    esp,DWORD PTR [ebp-0x18]
 1007dc2:	mov    eax,DWORD PTR [ebp-0x24]
 1007dc5:	mov    DWORD PTR [ebp-0x20],eax
 1007dc8:	cmp    DWORD PTR [ebp-0x1c],0x0
 1007dcc:	jne    0x1007dd4
 1007dce:	push   eax
 1007dcf:	call   0x1008d4b
 1007dd4:	call   0x1008d7a
 1007dd9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007de0:	mov    eax,DWORD PTR [ebp-0x20]
 1007de3:	call   0x1009d15
 1007de8:	ret    
 1007de9:	int3   
 1007dea:	int3   
 1007deb:	int3   
 1007dec:	int3   
 1007ded:	int3   
 1007dee:	call   0x1009ec4
 1007df3:	jmp    0x1007c7c
 1007df8:	int3   
 1007df9:	int3   
 1007dfa:	int3   
 1007dfb:	int3   
 1007dfc:	int3   
 1007dfd:	mov    edi,edi
 1007dff:	push   ebp
 1007e00:	mov    ebp,esp
 1007e02:	sub    esp,0x20
 1007e05:	and    DWORD PTR [ebp-0x20],0x0
 1007e09:	push   edi
 1007e0a:	push   0x7
 1007e0c:	xor    eax,eax
 1007e0e:	pop    ecx
 1007e0f:	lea    edi,[ebp-0x1c]
 1007e12:	rep stos DWORD PTR es:[edi],eax
 1007e14:	cmp    DWORD PTR [ebp+0x10],eax
 1007e17:	jne    0x1007e2e
 1007e19:	call   0x100af29
 1007e1e:	mov    DWORD PTR [eax],0x16
 1007e24:	call   0x100aecd
 1007e29:	or     eax,0xffffffff
 1007e2c:	jmp    0x1007ea6
 1007e2e:	mov    ecx,DWORD PTR [ebp+0xc]
 1007e31:	push   esi
 1007e32:	mov    esi,DWORD PTR [ebp+0x8]
 1007e35:	test   ecx,ecx
 1007e37:	je     0x1007e52
 1007e39:	test   esi,esi
 1007e3b:	jne    0x1007e52
 1007e3d:	call   0x100af29
 1007e42:	mov    DWORD PTR [eax],0x16
 1007e48:	call   0x100aecd
 1007e4d:	or     eax,0xffffffff
 1007e50:	jmp    0x1007ea5
 1007e52:	mov    eax,0x7fffffff
 1007e57:	mov    DWORD PTR [ebp-0x1c],eax
 1007e5a:	cmp    ecx,eax
 1007e5c:	ja     0x1007e61
 1007e5e:	mov    DWORD PTR [ebp-0x1c],ecx
 1007e61:	push   DWORD PTR [ebp+0x18]
 1007e64:	lea    eax,[ebp-0x20]
 1007e67:	push   DWORD PTR [ebp+0x14]
 1007e6a:	mov    DWORD PTR [ebp-0x14],0x42
 1007e71:	push   DWORD PTR [ebp+0x10]
 1007e74:	mov    DWORD PTR [ebp-0x18],esi
 1007e77:	push   eax
 1007e78:	mov    DWORD PTR [ebp-0x20],esi
 1007e7b:	call   0x100a17e
 1007e80:	add    esp,0x10
 1007e83:	mov    edi,eax
 1007e85:	test   esi,esi
 1007e87:	je     0x1007ea5
 1007e89:	dec    DWORD PTR [ebp-0x1c]
 1007e8c:	js     0x1007e96
 1007e8e:	mov    eax,DWORD PTR [ebp-0x20]
 1007e91:	mov    BYTE PTR [eax],0x0
 1007e94:	jmp    0x1007ea3
 1007e96:	lea    eax,[ebp-0x20]
 1007e99:	push   eax
 1007e9a:	push   0x0
 1007e9c:	call   0x1009f64
 1007ea1:	pop    ecx
 1007ea2:	pop    ecx
 1007ea3:	mov    eax,edi
 1007ea5:	pop    esi
 1007ea6:	pop    edi
 1007ea7:	leave  
 1007ea8:	ret    
 1007ea9:	int3   
 1007eaa:	int3   
 1007eab:	int3   
 1007eac:	int3   
 1007ead:	int3   
 1007eae:	mov    edi,edi
 1007eb0:	push   ebp
 1007eb1:	mov    ebp,esp
 1007eb3:	push   DWORD PTR [ebp+0x14]
 1007eb6:	push   0x0
 1007eb8:	push   DWORD PTR [ebp+0x10]
 1007ebb:	push   DWORD PTR [ebp+0xc]
 1007ebe:	push   DWORD PTR [ebp+0x8]
 1007ec1:	call   0x1007dfd
 1007ec6:	add    esp,0x14
 1007ec9:	pop    ebp
 1007eca:	ret    
 1007ecb:	int3   
 1007ecc:	int3   
 1007ecd:	int3   
 1007ece:	int3   
 1007ecf:	int3   
 1007ed0:	mov    edi,edi
 1007ed2:	push   ebp
 1007ed3:	mov    ebp,esp
 1007ed5:	push   esi
 1007ed6:	mov    esi,DWORD PTR [ebp+0x8]
 1007ed9:	push   edi
 1007eda:	or     edi,0xffffffff
 1007edd:	test   esi,esi
 1007edf:	jne    0x1007ef5
 1007ee1:	call   0x100af29
 1007ee6:	mov    DWORD PTR [eax],0x16
 1007eec:	call   0x100aecd
 1007ef1:	or     eax,edi
 1007ef3:	jmp    0x1007f39
 1007ef5:	test   BYTE PTR [esi+0xc],0x83
 1007ef9:	je     0x1007f33
 1007efb:	push   esi
 1007efc:	call   0x100b18b
 1007f01:	push   esi
 1007f02:	mov    edi,eax
 1007f04:	call   0x100b155
 1007f09:	push   esi
 1007f0a:	call   0x100b12a
 1007f0f:	push   eax
 1007f10:	call   0x100b061
 1007f15:	add    esp,0x10
 1007f18:	test   eax,eax
 1007f1a:	jns    0x1007f21
 1007f1c:	or     edi,0xffffffff
 1007f1f:	jmp    0x1007f33
 1007f21:	mov    eax,DWORD PTR [esi+0x1c]
 1007f24:	test   eax,eax
 1007f26:	je     0x1007f33
 1007f28:	push   eax
 1007f29:	call   0x100af81
 1007f2e:	and    DWORD PTR [esi+0x1c],0x0
 1007f32:	pop    ecx
 1007f33:	and    DWORD PTR [esi+0xc],0x0
 1007f37:	mov    eax,edi
 1007f39:	pop    edi
 1007f3a:	pop    esi
 1007f3b:	pop    ebp
 1007f3c:	ret    
 1007f3d:	int3   
 1007f3e:	int3   
 1007f3f:	int3   
 1007f40:	int3   
 1007f41:	int3   
 1007f42:	push   0xc
 1007f44:	push   0x1011a30
 1007f49:	call   0x1009cd0
 1007f4e:	or     DWORD PTR [ebp-0x1c],0xffffffff
 1007f52:	xor    eax,eax
 1007f54:	mov    esi,DWORD PTR [ebp+0x8]
 1007f57:	test   esi,esi
 1007f59:	setne  al
 1007f5c:	test   eax,eax
 1007f5e:	jne    0x1007f75
 1007f60:	call   0x100af29
 1007f65:	mov    DWORD PTR [eax],0x16
 1007f6b:	call   0x100aecd
 1007f70:	or     eax,0xffffffff
 1007f73:	jmp    0x1007f82
 1007f75:	test   BYTE PTR [esi+0xc],0x40
 1007f79:	je     0x1007f88
 1007f7b:	and    DWORD PTR [esi+0xc],0x0
 1007f7f:	mov    eax,DWORD PTR [ebp-0x1c]
 1007f82:	call   0x1009d15
 1007f87:	ret    
 1007f88:	push   esi
 1007f89:	call   0x100b418
 1007f8e:	pop    ecx
 1007f8f:	and    DWORD PTR [ebp-0x4],0x0
 1007f93:	push   esi
 1007f94:	call   0x1007ed0
 1007f99:	pop    ecx
 1007f9a:	mov    DWORD PTR [ebp-0x1c],eax
 1007f9d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007fa4:	call   0x1007fae
 1007fa9:	jmp    0x1007f7f
 1007fab:	mov    esi,DWORD PTR [ebp+0x8]
 1007fae:	push   esi
 1007faf:	call   0x100b495
 1007fb4:	pop    ecx
 1007fb5:	ret    
 1007fb6:	int3   
 1007fb7:	int3   
 1007fb8:	int3   
 1007fb9:	int3   
 1007fba:	int3   
 1007fbb:	push   0x10
 1007fbd:	push   0x1011a50
 1007fc2:	call   0x1009cd0
 1007fc7:	xor    eax,eax
 1007fc9:	cmp    DWORD PTR [ebp+0x8],eax
 1007fcc:	setne  al
 1007fcf:	test   eax,eax
 1007fd1:	jne    0x1007feb
 1007fd3:	call   0x100af29
 1007fd8:	mov    DWORD PTR [eax],0x16
 1007fde:	call   0x100aecd
 1007fe3:	or     eax,0xffffffff
 1007fe6:	jmp    0x10080b0
 1007feb:	xor    eax,eax
 1007fed:	mov    edi,DWORD PTR [ebp+0xc]
 1007ff0:	test   edi,edi
 1007ff2:	setne  al
 1007ff5:	test   eax,eax
 1007ff7:	je     0x1007fd3
 1007ff9:	test   BYTE PTR [edi+0xc],0x40
 1007ffd:	jne    0x100805e
 1007fff:	push   edi
 1008000:	call   0x100b12a
 1008005:	pop    ecx
 1008006:	cmp    eax,0xffffffff
 1008009:	je     0x1008026
 100800b:	cmp    eax,0xfffffffe
 100800e:	je     0x1008026
 1008010:	mov    edx,eax
 1008012:	sar    edx,0x5
 1008015:	mov    ecx,eax
 1008017:	and    ecx,0x1f
 100801a:	shl    ecx,0x6
 100801d:	add    ecx,DWORD PTR [edx*4+0x1015fe0]
 1008024:	jmp    0x100802b
 1008026:	mov    ecx,0x10130a0
 100802b:	test   BYTE PTR [ecx+0x24],0x7f
 100802f:	jne    0x1007fd3
 1008031:	cmp    eax,0xffffffff
 1008034:	je     0x100804f
 1008036:	cmp    eax,0xfffffffe
 1008039:	je     0x100804f
 100803b:	mov    ecx,eax
 100803d:	sar    ecx,0x5
 1008040:	and    eax,0x1f
 1008043:	shl    eax,0x6
 1008046:	add    eax,DWORD PTR [ecx*4+0x1015fe0]
 100804d:	jmp    0x1008054
 100804f:	mov    eax,0x10130a0
 1008054:	test   BYTE PTR [eax+0x24],0x80
 1008058:	jne    0x1007fd3
 100805e:	push   DWORD PTR [ebp+0x8]
 1008061:	call   0x100b740
 1008066:	mov    DWORD PTR [ebp-0x1c],eax
 1008069:	push   edi
 100806a:	call   0x100b418
 100806f:	pop    ecx
 1008070:	pop    ecx
 1008071:	and    DWORD PTR [ebp-0x4],0x0
 1008075:	push   edi
 1008076:	call   0x100b50a
 100807b:	mov    esi,eax
 100807d:	push   edi
 100807e:	push   DWORD PTR [ebp-0x1c]
 1008081:	push   0x1
 1008083:	push   DWORD PTR [ebp+0x8]
 1008086:	call   0x100b5e4
 100808b:	mov    DWORD PTR [ebp-0x20],eax
 100808e:	push   edi
 100808f:	push   esi
 1008090:	call   0x100b5ab
 1008095:	add    esp,0x1c
 1008098:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100809f:	call   0x10080b9
 10080a4:	xor    eax,eax
 10080a6:	mov    ecx,DWORD PTR [ebp-0x1c]
 10080a9:	cmp    DWORD PTR [ebp-0x20],ecx
 10080ac:	sete   al
 10080af:	dec    eax
 10080b0:	call   0x1009d15
 10080b5:	ret    
 10080b6:	mov    edi,DWORD PTR [ebp+0xc]
 10080b9:	push   edi
 10080ba:	call   0x100b495
 10080bf:	pop    ecx
 10080c0:	ret    
 10080c1:	int3   
 10080c2:	int3   
 10080c3:	int3   
 10080c4:	int3   
 10080c5:	int3   
 10080c6:	mov    edi,edi
 10080c8:	push   ebp
 10080c9:	mov    ebp,esp
 10080cb:	sub    esp,0x14
 10080ce:	mov    eax,ds:0x1013054
 10080d3:	xor    eax,ebp
 10080d5:	mov    DWORD PTR [ebp-0x4],eax
 10080d8:	push   esi
 10080d9:	mov    esi,DWORD PTR [ebp+0x8]
 10080dc:	test   esi,esi
 10080de:	je     0x10080e6
 10080e0:	cmp    DWORD PTR [ebp+0xc],0x0
 10080e4:	ja     0x10080fb
 10080e6:	call   0x100af29
 10080eb:	push   0x16
 10080ed:	pop    ecx
 10080ee:	mov    esi,ecx
 10080f0:	mov    DWORD PTR [eax],ecx
 10080f2:	call   0x100aecd
 10080f7:	mov    eax,esi
 10080f9:	jmp    0x1008167
 10080fb:	cmp    DWORD PTR [ebp+0xc],0x9
 10080ff:	mov    BYTE PTR [esi],0x0
 1008102:	jae    0x100810d
 1008104:	call   0x100af29
 1008109:	push   0x22
 100810b:	jmp    0x10080ed
 100810d:	push   ebx
 100810e:	push   edi
 100810f:	lea    eax,[ebp-0x14]
 1008112:	push   eax
 1008113:	call   DWORD PTR ds:0x1001138
 1008119:	movzx  eax,WORD PTR [ebp-0xc]
 100811d:	cdq    
 100811e:	push   0xa
 1008120:	pop    ecx
 1008121:	idiv   ecx
 1008123:	movzx  edi,WORD PTR [ebp-0xa]
 1008127:	mov    cl,0x30
 1008129:	push   0xa
 100812b:	movzx  ebx,WORD PTR [ebp-0x8]
 100812f:	mov    BYTE PTR [esi+0x5],0x3a
 1008133:	mov    BYTE PTR [esi+0x2],0x3a
 1008137:	mov    BYTE PTR [esi+0x8],0x0
 100813b:	add    al,cl
 100813d:	mov    BYTE PTR [esi],al
 100813f:	add    dl,cl
 1008141:	mov    BYTE PTR [esi+0x1],dl
 1008144:	mov    eax,edi
 1008146:	cdq    
 1008147:	pop    edi
 1008148:	idiv   edi
 100814a:	add    al,cl
 100814c:	mov    BYTE PTR [esi+0x3],al
 100814f:	add    dl,cl
 1008151:	mov    BYTE PTR [esi+0x4],dl
 1008154:	mov    eax,ebx
 1008156:	cdq    
 1008157:	idiv   edi
 1008159:	pop    edi
 100815a:	pop    ebx
 100815b:	add    al,cl
 100815d:	add    dl,cl
 100815f:	mov    BYTE PTR [esi+0x6],al
 1008162:	mov    BYTE PTR [esi+0x7],dl
 1008165:	xor    eax,eax
 1008167:	mov    ecx,DWORD PTR [ebp-0x4]
 100816a:	xor    ecx,ebp
 100816c:	pop    esi
 100816d:	call   0x1008355
 1008172:	leave  
 1008173:	ret    
 1008174:	int3   
 1008175:	int3   
 1008176:	int3   
 1008177:	int3   
 1008178:	int3   
 1008179:	mov    edi,edi
 100817b:	push   ebp
 100817c:	mov    ebp,esp
 100817e:	push   0x9
 1008180:	push   DWORD PTR [ebp+0x8]
 1008183:	call   0x10080c6
 1008188:	neg    eax
 100818a:	sbb    eax,eax
 100818c:	pop    ecx
 100818d:	not    eax
 100818f:	and    eax,DWORD PTR [ebp+0x8]
 1008192:	pop    ecx
 1008193:	pop    ebp
 1008194:	ret    
 1008195:	int3   
 1008196:	int3   
 1008197:	int3   
 1008198:	int3   
 1008199:	int3   
 100819a:	mov    edi,edi
 100819c:	push   ebp
 100819d:	mov    ebp,esp
 100819f:	sub    esp,0x14
 10081a2:	mov    eax,ds:0x1013054
 10081a7:	xor    eax,ebp
 10081a9:	mov    DWORD PTR [ebp-0x4],eax
 10081ac:	push   esi
 10081ad:	mov    esi,DWORD PTR [ebp+0x8]
 10081b0:	test   esi,esi
 10081b2:	je     0x10081ba
 10081b4:	cmp    DWORD PTR [ebp+0xc],0x0
 10081b8:	ja     0x10081cf
 10081ba:	call   0x100af29
 10081bf:	push   0x16
 10081c1:	pop    ecx
 10081c2:	mov    esi,ecx
 10081c4:	mov    DWORD PTR [eax],ecx
 10081c6:	call   0x100aecd
 10081cb:	mov    eax,esi
 10081cd:	jmp    0x1008245
 10081cf:	cmp    DWORD PTR [ebp+0xc],0x9
 10081d3:	mov    BYTE PTR [esi],0x0
 10081d6:	jae    0x10081e1
 10081d8:	call   0x100af29
 10081dd:	push   0x22
 10081df:	jmp    0x10081c1
 10081e1:	push   ebx
 10081e2:	push   edi
 10081e3:	lea    eax,[ebp-0x14]
 10081e6:	push   eax
 10081e7:	call   DWORD PTR ds:0x1001138
 10081ed:	movzx  eax,WORD PTR [ebp-0x14]
 10081f1:	cdq    
 10081f2:	push   0x64
 10081f4:	pop    ebx
 10081f5:	idiv   ebx
 10081f7:	movzx  ecx,WORD PTR [ebp-0x12]
 10081fb:	push   0xa
 10081fd:	mov    eax,ecx
 10081ff:	pop    ecx
 1008200:	movzx  edi,WORD PTR [ebp-0xe]
 1008204:	push   0xa
 1008206:	mov    BYTE PTR [esi+0x5],0x2f
 100820a:	mov    BYTE PTR [esi+0x2],0x2f
 100820e:	mov    BYTE PTR [esi+0x8],0x0
 1008212:	mov    ebx,edx
 1008214:	cdq    
 1008215:	idiv   ecx
 1008217:	mov    cl,0x30
 1008219:	add    al,cl
 100821b:	mov    BYTE PTR [esi],al
 100821d:	add    dl,cl
 100821f:	mov    BYTE PTR [esi+0x1],dl
 1008222:	mov    eax,edi
 1008224:	cdq    
 1008225:	pop    edi
 1008226:	idiv   edi
 1008228:	add    al,cl
 100822a:	mov    BYTE PTR [esi+0x3],al
 100822d:	add    dl,cl
 100822f:	mov    BYTE PTR [esi+0x4],dl
 1008232:	mov    eax,ebx
 1008234:	cdq    
 1008235:	idiv   edi
 1008237:	pop    edi
 1008238:	pop    ebx
 1008239:	add    al,cl
 100823b:	add    dl,cl
 100823d:	mov    BYTE PTR [esi+0x6],al
 1008240:	mov    BYTE PTR [esi+0x7],dl
 1008243:	xor    eax,eax
 1008245:	mov    ecx,DWORD PTR [ebp-0x4]
 1008248:	xor    ecx,ebp
 100824a:	pop    esi
 100824b:	call   0x1008355
 1008250:	leave  
 1008251:	ret    
 1008252:	int3   
 1008253:	int3   
 1008254:	int3   
 1008255:	int3   
 1008256:	int3   
 1008257:	mov    edi,edi
 1008259:	push   ebp
 100825a:	mov    ebp,esp
 100825c:	push   0x9
 100825e:	push   DWORD PTR [ebp+0x8]
 1008261:	call   0x100819a
 1008266:	neg    eax
 1008268:	sbb    eax,eax
 100826a:	pop    ecx
 100826b:	not    eax
 100826d:	and    eax,DWORD PTR [ebp+0x8]
 1008270:	pop    ecx
 1008271:	pop    ebp
 1008272:	ret    
 1008273:	int3   
 1008274:	int3   
 1008275:	int3   
 1008276:	int3   
 1008277:	int3   
 1008278:	push   0xc
 100827a:	push   0x1011a70
 100827f:	call   0x1009cd0
 1008284:	xor    ebx,ebx
 1008286:	mov    DWORD PTR [ebp-0x1c],ebx
 1008289:	xor    eax,eax
 100828b:	mov    edi,DWORD PTR [ebp+0x8]
 100828e:	cmp    edi,ebx
 1008290:	setne  al
 1008293:	cmp    eax,ebx
 1008295:	jne    0x10082ab
 1008297:	call   0x100af29
 100829c:	mov    DWORD PTR [eax],0x16
 10082a2:	call   0x100aecd
 10082a7:	xor    eax,eax
 10082a9:	jmp    0x1008324
 10082ab:	xor    eax,eax
 10082ad:	mov    esi,DWORD PTR [ebp+0xc]
 10082b0:	cmp    esi,ebx
 10082b2:	setne  al
 10082b5:	cmp    eax,ebx
 10082b7:	je     0x1008297
 10082b9:	xor    eax,eax
 10082bb:	cmp    BYTE PTR [esi],bl
 10082bd:	setne  al
 10082c0:	cmp    eax,ebx
 10082c2:	je     0x1008297
 10082c4:	call   0x100ba6c
 10082c9:	mov    DWORD PTR [ebp+0x8],eax
 10082cc:	cmp    eax,ebx
 10082ce:	jne    0x10082dd
 10082d0:	call   0x100af29
 10082d5:	mov    DWORD PTR [eax],0x18
 10082db:	jmp    0x10082a7
 10082dd:	mov    DWORD PTR [ebp-0x4],ebx
 10082e0:	cmp    BYTE PTR [edi],bl
 10082e2:	jne    0x1008304
 10082e4:	call   0x100af29
 10082e9:	mov    DWORD PTR [eax],0x16
 10082ef:	push   0xfffffffe
 10082f1:	lea    eax,[ebp-0x10]
 10082f4:	push   eax
 10082f5:	push   0x1013054
 10082fa:	call   0x100bbb0
 10082ff:	add    esp,0xc
 1008302:	jmp    0x10082a7
 1008304:	push   eax
 1008305:	push   DWORD PTR [ebp+0x10]
 1008308:	push   esi
 1008309:	push   edi
 100830a:	call   0x100b7d0
 100830f:	add    esp,0x10
 1008312:	mov    DWORD PTR [ebp-0x1c],eax
 1008315:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100831c:	call   0x100832a
 1008321:	mov    eax,DWORD PTR [ebp-0x1c]
 1008324:	call   0x1009d15
 1008329:	ret    
 100832a:	push   DWORD PTR [ebp+0x8]
 100832d:	call   0x100b495
 1008332:	pop    ecx
 1008333:	ret    
 1008334:	int3   
 1008335:	int3   
 1008336:	int3   
 1008337:	int3   
 1008338:	int3   
 1008339:	mov    edi,edi
 100833b:	push   ebp
 100833c:	mov    ebp,esp
 100833e:	push   0x40
 1008340:	push   DWORD PTR [ebp+0xc]
 1008343:	push   DWORD PTR [ebp+0x8]
 1008346:	call   0x1008278
 100834b:	add    esp,0xc
 100834e:	pop    ebp
 100834f:	ret    
 1008350:	int3   
 1008351:	int3   
 1008352:	int3   
 1008353:	int3   
 1008354:	int3   
 1008355:	cmp    ecx,DWORD PTR ds:0x1013054
 100835b:	jne    0x100835f
 100835d:	repz ret 
 100835f:	jmp    0x100bd07
 1008364:	int3   
 1008365:	int3   
 1008366:	int3   
 1008367:	int3   
 1008368:	int3   
 1008369:	int3   
 100836a:	int3   
 100836b:	int3   
 100836c:	int3   
 100836d:	int3   
 100836e:	int3   
 100836f:	int3   
 1008370:	push   ebp
 1008371:	mov    ebp,esp
 1008373:	push   edi
 1008374:	mov    edi,DWORD PTR [ebp+0x8]
 1008377:	xor    eax,eax
 1008379:	or     ecx,0xffffffff
 100837c:	repnz scas al,BYTE PTR es:[edi]
 100837e:	add    ecx,0x1
 1008381:	neg    ecx
 1008383:	sub    edi,0x1
 1008386:	mov    al,BYTE PTR [ebp+0xc]
 1008389:	std    
 100838a:	repnz scas al,BYTE PTR es:[edi]
 100838c:	add    edi,0x1
 100838f:	cmp    BYTE PTR [edi],al
 1008391:	je     0x1008397
 1008393:	xor    eax,eax
 1008395:	jmp    0x1008399
 1008397:	mov    eax,edi
 1008399:	cld    
 100839a:	pop    edi
 100839b:	leave  
 100839c:	ret    
 100839d:	int3   
 100839e:	int3   
 100839f:	int3   
 10083a0:	lea    eax,[edx-0x1]
 10083a3:	pop    ebx
 10083a4:	ret    
 10083a5:	lea    esp,[esp+0x0]
 10083ac:	lea    esp,[esp+0x0]
 10083b0:	xor    eax,eax
 10083b2:	mov    al,BYTE PTR [esp+0x8]
 10083b6:	push   ebx
 10083b7:	mov    ebx,eax
 10083b9:	shl    eax,0x8
 10083bc:	mov    edx,DWORD PTR [esp+0x8]
 10083c0:	test   edx,0x3
 10083c6:	je     0x10083dd
 10083c8:	mov    cl,BYTE PTR [edx]
 10083ca:	add    edx,0x1
 10083cd:	cmp    cl,bl
 10083cf:	je     0x10083a0
 10083d1:	test   cl,cl
 10083d3:	je     0x1008426
 10083d5:	test   edx,0x3
 10083db:	jne    0x10083c8
 10083dd:	or     ebx,eax
 10083df:	push   edi
 10083e0:	mov    eax,ebx
 10083e2:	shl    ebx,0x10
 10083e5:	push   esi
 10083e6:	or     ebx,eax
 10083e8:	mov    ecx,DWORD PTR [edx]
 10083ea:	mov    edi,0x7efefeff
 10083ef:	mov    eax,ecx
 10083f1:	mov    esi,edi
 10083f3:	xor    ecx,ebx
 10083f5:	add    esi,eax
 10083f7:	add    edi,ecx
 10083f9:	xor    ecx,0xffffffff
 10083fc:	xor    eax,0xffffffff
 10083ff:	xor    ecx,edi
 1008401:	xor    eax,esi
 1008403:	add    edx,0x4
 1008406:	and    ecx,0x81010100
 100840c:	jne    0x100842a
 100840e:	and    eax,0x81010100
 1008413:	je     0x10083e8
 1008415:	and    eax,0x1010100
 100841a:	jne    0x1008424
 100841c:	and    esi,0x80000000
 1008422:	jne    0x10083e8
 1008424:	pop    esi
 1008425:	pop    edi
 1008426:	pop    ebx
 1008427:	xor    eax,eax
 1008429:	ret    
 100842a:	mov    eax,DWORD PTR [edx-0x4]
 100842d:	cmp    al,bl
 100842f:	je     0x1008467
 1008431:	test   al,al
 1008433:	je     0x1008424
 1008435:	cmp    ah,bl
 1008437:	je     0x1008460
 1008439:	test   ah,ah
 100843b:	je     0x1008424
 100843d:	shr    eax,0x10
 1008440:	cmp    al,bl
 1008442:	je     0x1008459
 1008444:	test   al,al
 1008446:	je     0x1008424
 1008448:	cmp    ah,bl
 100844a:	je     0x1008452
 100844c:	test   ah,ah
 100844e:	je     0x1008424
 1008450:	jmp    0x10083e8
 1008452:	pop    esi
 1008453:	pop    edi
 1008454:	lea    eax,[edx-0x1]
 1008457:	pop    ebx
 1008458:	ret    
 1008459:	lea    eax,[edx-0x2]
 100845c:	pop    esi
 100845d:	pop    edi
 100845e:	pop    ebx
 100845f:	ret    
 1008460:	lea    eax,[edx-0x3]
 1008463:	pop    esi
 1008464:	pop    edi
 1008465:	pop    ebx
 1008466:	ret    
 1008467:	lea    eax,[edx-0x4]
 100846a:	pop    esi
 100846b:	pop    edi
 100846c:	pop    ebx
 100846d:	ret    
 100846e:	int3   
 100846f:	int3   
 1008470:	int3   
 1008471:	int3   
 1008472:	int3   
 1008473:	int3   
 1008474:	int3   
 1008475:	int3   
 1008476:	int3   
 1008477:	int3   
 1008478:	int3   
 1008479:	int3   
 100847a:	int3   
 100847b:	int3   
 100847c:	int3   
 100847d:	int3   
 100847e:	int3   
 100847f:	int3   
 1008480:	mov    ecx,DWORD PTR [esp+0x8]
 1008484:	push   edi
 1008485:	push   ebx
 1008486:	push   esi
 1008487:	mov    dl,BYTE PTR [ecx]
 1008489:	mov    edi,DWORD PTR [esp+0x10]
 100848d:	test   dl,dl
 100848f:	je     0x1008500
 1008491:	mov    dh,BYTE PTR [ecx+0x1]
 1008494:	test   dh,dh
 1008496:	je     0x10084ed
 1008498:	mov    esi,edi
 100849a:	mov    ecx,DWORD PTR [esp+0x14]
 100849e:	mov    al,BYTE PTR [edi]
 10084a0:	add    esi,0x1
 10084a3:	cmp    al,dl
 10084a5:	je     0x10084be
 10084a7:	test   al,al
 10084a9:	je     0x10084b8
 10084ab:	mov    al,BYTE PTR [esi]
 10084ad:	add    esi,0x1
 10084b0:	cmp    al,dl
 10084b2:	je     0x10084be
 10084b4:	test   al,al
 10084b6:	jne    0x10084ab
 10084b8:	pop    esi
 10084b9:	pop    ebx
 10084ba:	pop    edi
 10084bb:	xor    eax,eax
 10084bd:	ret    
 10084be:	mov    al,BYTE PTR [esi]
 10084c0:	add    esi,0x1
 10084c3:	cmp    al,dh
 10084c5:	jne    0x10084b0
 10084c7:	lea    edi,[esi-0x1]
 10084ca:	mov    ah,BYTE PTR [ecx+0x2]
 10084cd:	test   ah,ah
 10084cf:	je     0x10084f9
 10084d1:	mov    al,BYTE PTR [esi]
 10084d3:	add    esi,0x2
 10084d6:	cmp    al,ah
 10084d8:	jne    0x1008498
 10084da:	mov    al,BYTE PTR [ecx+0x3]
 10084dd:	test   al,al
 10084df:	je     0x10084f9
 10084e1:	mov    ah,BYTE PTR [esi-0x1]
 10084e4:	add    ecx,0x2
 10084e7:	cmp    al,ah
 10084e9:	je     0x10084ca
 10084eb:	jmp    0x1008498
 10084ed:	xor    eax,eax
 10084ef:	pop    esi
 10084f0:	pop    ebx
 10084f1:	pop    edi
 10084f2:	mov    al,dl
 10084f4:	jmp    0x10083b6
 10084f9:	lea    eax,[edi-0x1]
 10084fc:	pop    esi
 10084fd:	pop    ebx
 10084fe:	pop    edi
 10084ff:	ret    
 1008500:	mov    eax,edi
 1008502:	pop    esi
 1008503:	pop    ebx
 1008504:	pop    edi
 1008505:	ret    
 1008506:	int3   
 1008507:	int3   
 1008508:	int3   
 1008509:	int3   
 100850a:	int3   
 100850b:	mov    edi,edi
 100850d:	push   ebp
 100850e:	mov    ebp,esp
 1008510:	pop    ebp
 1008511:	jmp    0x100af81
 1008516:	int3   
 1008517:	int3   
 1008518:	int3   
 1008519:	int3   
 100851a:	int3   
 100851b:	mov    DWORD PTR [ecx],0x1002220
 1008521:	jmp    0x100bee8
 1008526:	int3   
 1008527:	int3   
 1008528:	int3   
 1008529:	int3   
 100852a:	int3   
 100852b:	mov    edi,edi
 100852d:	push   ebp
 100852e:	mov    ebp,esp
 1008530:	push   esi
 1008531:	mov    esi,ecx
 1008533:	mov    DWORD PTR [esi],0x1002220
 1008539:	call   0x100bee8
 100853e:	test   BYTE PTR [ebp+0x8],0x1
 1008542:	je     0x100854b
 1008544:	push   esi
 1008545:	call   0x100850b
 100854a:	pop    ecx
 100854b:	mov    eax,esi
 100854d:	pop    esi
 100854e:	pop    ebp
 100854f:	ret    0x4
 1008552:	int3   
 1008553:	int3   
 1008554:	int3   
 1008555:	int3   
 1008556:	int3   
 1008557:	mov    edi,edi
 1008559:	push   ebp
 100855a:	mov    ebp,esp
 100855c:	push   esi
 100855d:	push   DWORD PTR [ebp+0x8]
 1008560:	mov    esi,ecx
 1008562:	call   0x100bf24
 1008567:	mov    DWORD PTR [esi],0x1002220
 100856d:	mov    eax,esi
 100856f:	pop    esi
 1008570:	pop    ebp
 1008571:	ret    0x4
 1008574:	int3   
 1008575:	int3   
 1008576:	int3   
 1008577:	int3   
 1008578:	int3   
 1008579:	mov    edi,edi
 100857b:	push   ebp
 100857c:	mov    ebp,esp
 100857e:	sub    esp,0x10
 1008581:	jmp    0x1008590
 1008583:	push   DWORD PTR [ebp+0x8]
 1008586:	call   0x100c184
 100858b:	pop    ecx
 100858c:	test   eax,eax
 100858e:	je     0x100859f
 1008590:	push   DWORD PTR [ebp+0x8]
 1008593:	call   0x100c0d7
 1008598:	pop    ecx
 1008599:	test   eax,eax
 100859b:	je     0x1008583
 100859d:	leave  
 100859e:	ret    
 100859f:	test   BYTE PTR ds:0x10142ec,0x1
 10085a6:	mov    edi,0x10142e0
 10085ab:	mov    esi,0x1002220
 10085b0:	jne    0x10085de
 10085b2:	or     DWORD PTR ds:0x10142ec,0x1
 10085b9:	push   0x1
 10085bb:	lea    eax,[ebp-0x4]
 10085be:	push   eax
 10085bf:	mov    ecx,edi
 10085c1:	mov    DWORD PTR [ebp-0x4],0x1002228
 10085c8:	call   0x100be12
 10085cd:	push   0x10119f5
 10085d2:	mov    DWORD PTR ds:0x10142e0,esi
 10085d8:	call   0x100c0bb
 10085dd:	pop    ecx
 10085de:	push   edi
 10085df:	lea    ecx,[ebp-0x10]
 10085e2:	call   0x100bf24
 10085e7:	push   0x1011a8c
 10085ec:	lea    eax,[ebp-0x10]
 10085ef:	push   eax
 10085f0:	mov    DWORD PTR [ebp-0x10],esi
 10085f3:	call   0x100c1b1
 10085f8:	int3   
 10085f9:	int3   
 10085fa:	int3   
 10085fb:	int3   
 10085fc:	int3   
 10085fd:	int3   
 10085fe:	int3   
 10085ff:	int3   
 1008600:	mov    edx,DWORD PTR [esp+0xc]
 1008604:	mov    ecx,DWORD PTR [esp+0x4]
 1008608:	test   edx,edx
 100860a:	je     0x1008675
 100860c:	xor    eax,eax
 100860e:	mov    al,BYTE PTR [esp+0x8]
 1008612:	test   al,al
 1008614:	jne    0x100862c
 1008616:	cmp    edx,0x80
 100861c:	jb     0x100862c
 100861e:	cmp    DWORD PTR ds:0x1014fb4,0x0
 1008625:	je     0x100862c
 1008627:	jmp    0x100c202
 100862c:	push   edi
 100862d:	mov    edi,ecx
 100862f:	cmp    edx,0x4
 1008632:	jb     0x1008665
 1008634:	neg    ecx
 1008636:	and    ecx,0x3
 1008639:	je     0x1008647
 100863b:	sub    edx,ecx
 100863d:	mov    BYTE PTR [edi],al
 100863f:	add    edi,0x1
 1008642:	sub    ecx,0x1
 1008645:	jne    0x100863d
 1008647:	mov    ecx,eax
 1008649:	shl    eax,0x8
 100864c:	add    eax,ecx
 100864e:	mov    ecx,eax
 1008650:	shl    eax,0x10
 1008653:	add    eax,ecx
 1008655:	mov    ecx,edx
 1008657:	and    edx,0x3
 100865a:	shr    ecx,0x2
 100865d:	je     0x1008665
 100865f:	rep stos DWORD PTR es:[edi],eax
 1008661:	test   edx,edx
 1008663:	je     0x100866f
 1008665:	mov    BYTE PTR [edi],al
 1008667:	add    edi,0x1
 100866a:	sub    edx,0x1
 100866d:	jne    0x1008665
 100866f:	mov    eax,DWORD PTR [esp+0x8]
 1008673:	pop    edi
 1008674:	ret    
 1008675:	mov    eax,DWORD PTR [esp+0x4]
 1008679:	ret    
 100867a:	int3   
 100867b:	int3   
 100867c:	int3   
 100867d:	int3   
 100867e:	int3   
 100867f:	mov    edi,edi
 1008681:	push   ebp
 1008682:	mov    ebp,esp
 1008684:	mov    eax,DWORD PTR [ebp+0x8]
 1008687:	test   eax,eax
 1008689:	je     0x100869d
 100868b:	sub    eax,0x8
 100868e:	cmp    DWORD PTR [eax],0xdddd
 1008694:	jne    0x100869d
 1008696:	push   eax
 1008697:	call   0x100af81
 100869c:	pop    ecx
 100869d:	pop    ebp
 100869e:	ret    
 100869f:	int3   
 10086a0:	int3   
 10086a1:	int3   
 10086a2:	int3   
 10086a3:	int3   
 10086a4:	mov    edi,edi
 10086a6:	push   ebp
 10086a7:	mov    ebp,esp
 10086a9:	mov    eax,DWORD PTR [ebp+0x8]
 10086ac:	push   esi
 10086ad:	mov    esi,ecx
 10086af:	mov    BYTE PTR [esi+0xc],0x0
 10086b3:	test   eax,eax
 10086b5:	jne    0x100871a
 10086b7:	call   0x10099cb
 10086bc:	mov    DWORD PTR [esi+0x8],eax
 10086bf:	mov    ecx,DWORD PTR [eax+0x6c]
 10086c2:	mov    DWORD PTR [esi],ecx
 10086c4:	mov    ecx,DWORD PTR [eax+0x68]
 10086c7:	mov    DWORD PTR [esi+0x4],ecx
 10086ca:	mov    ecx,DWORD PTR [esi]
 10086cc:	cmp    ecx,DWORD PTR ds:0x1013c70
 10086d2:	je     0x10086e6
 10086d4:	mov    ecx,DWORD PTR ds:0x1013a28
 10086da:	test   DWORD PTR [eax+0x70],ecx
 10086dd:	jne    0x10086e6
 10086df:	call   0x100ccb6
 10086e4:	mov    DWORD PTR [esi],eax
 10086e6:	mov    eax,DWORD PTR [esi+0x4]
 10086e9:	cmp    eax,DWORD PTR ds:0x1013930
 10086ef:	je     0x1008707
 10086f1:	mov    eax,DWORD PTR [esi+0x8]
 10086f4:	mov    ecx,DWORD PTR ds:0x1013a28
 10086fa:	test   DWORD PTR [eax+0x70],ecx
 10086fd:	jne    0x1008707
 10086ff:	call   0x100c508
 1008704:	mov    DWORD PTR [esi+0x4],eax
 1008707:	mov    eax,DWORD PTR [esi+0x8]
 100870a:	test   BYTE PTR [eax+0x70],0x2
 100870e:	jne    0x1008724
 1008710:	or     DWORD PTR [eax+0x70],0x2
 1008714:	mov    BYTE PTR [esi+0xc],0x1
 1008718:	jmp    0x1008724
 100871a:	mov    ecx,DWORD PTR [eax]
 100871c:	mov    DWORD PTR [esi],ecx
 100871e:	mov    eax,DWORD PTR [eax+0x4]
 1008721:	mov    DWORD PTR [esi+0x4],eax
 1008724:	mov    eax,esi
 1008726:	pop    esi
 1008727:	pop    ebp
 1008728:	ret    0x4
 100872b:	int3   
 100872c:	int3   
 100872d:	int3   
 100872e:	int3   
 100872f:	int3   
 1008730:	mov    edi,edi
 1008732:	push   ebp
 1008733:	mov    ebp,esp
 1008735:	sub    esp,0xc
 1008738:	mov    eax,ds:0x1013054
 100873d:	xor    eax,ebp
 100873f:	mov    DWORD PTR [ebp-0x4],eax
 1008742:	push   ebx
 1008743:	push   esi
 1008744:	push   edi
 1008745:	mov    edi,DWORD PTR [ebp+0x8]
 1008748:	test   edi,edi
 100874a:	jne    0x1008760
 100874c:	call   0x100af29
 1008751:	push   0x16
 1008753:	pop    esi
 1008754:	mov    DWORD PTR [eax],esi
 1008756:	call   0x100aecd
 100875b:	jmp    0x100889a
 1008760:	push   DWORD PTR [ebp+0xc]
 1008763:	push   edi
 1008764:	call   0x100cfcf
 1008769:	pop    ecx
 100876a:	pop    ecx
 100876b:	cmp    eax,DWORD PTR [ebp+0xc]
 100876e:	jb     0x1008775
 1008770:	mov    BYTE PTR [edi],0x0
 1008773:	jmp    0x100874c
 1008775:	mov    ebx,DWORD PTR [ebp+0x10]
 1008778:	mov    eax,DWORD PTR [ebx]
 100877a:	mov    ecx,DWORD PTR [eax+0x14]
 100877d:	test   ecx,ecx
 100877f:	jne    0x10087a3
 1008781:	cmp    BYTE PTR [edi],0x0
 1008784:	mov    ecx,edi
 1008786:	je     0x100879c
 1008788:	mov    al,BYTE PTR [ecx]
 100878a:	cmp    al,0x41
 100878c:	jl     0x1008796
 100878e:	cmp    al,0x5a
 1008790:	jg     0x1008796
 1008792:	add    al,0x20
 1008794:	mov    BYTE PTR [ecx],al
 1008796:	inc    ecx
 1008797:	cmp    BYTE PTR [ecx],0x0
 100879a:	jne    0x1008788
 100879c:	xor    eax,eax
 100879e:	jmp    0x100889c
 10087a3:	push   0x1
 10087a5:	push   DWORD PTR [eax+0x4]
 10087a8:	mov    esi,0x100
 10087ad:	push   0x0
 10087af:	push   0x0
 10087b1:	push   0xffffffff
 10087b3:	push   edi
 10087b4:	push   esi
 10087b5:	push   ecx
 10087b6:	push   ebx
 10087b7:	call   0x100cf84
 10087bc:	mov    ecx,eax
 10087be:	add    esp,0x24
 10087c1:	mov    DWORD PTR [ebp-0xc],ecx
 10087c4:	test   ecx,ecx
 10087c6:	jne    0x10087df
 10087c8:	call   0x100af29
 10087cd:	mov    DWORD PTR [eax],0x2a
 10087d3:	call   0x100af29
 10087d8:	mov    eax,DWORD PTR [eax]
 10087da:	jmp    0x100889c
 10087df:	cmp    DWORD PTR [ebp+0xc],ecx
 10087e2:	jae    0x10087f3
 10087e4:	mov    BYTE PTR [edi],0x0
 10087e7:	call   0x100af29
 10087ec:	push   0x22
 10087ee:	jmp    0x1008753
 10087f3:	test   ecx,ecx
 10087f5:	jle    0x100883c
 10087f7:	push   0xffffffe0
 10087f9:	xor    edx,edx
 10087fb:	pop    eax
 10087fc:	div    ecx
 10087fe:	cmp    eax,0x1
 1008801:	jb     0x100883c
 1008803:	lea    eax,[ecx+0x8]
 1008806:	cmp    eax,0x400
 100880b:	ja     0x1008820
 100880d:	call   0x100d000
 1008812:	mov    eax,esp
 1008814:	test   eax,eax
 1008816:	je     0x1008834
 1008818:	mov    DWORD PTR [eax],0xcccc
 100881e:	jmp    0x1008831
 1008820:	push   eax
 1008821:	call   0x100c0d7
 1008826:	pop    ecx
 1008827:	test   eax,eax
 1008829:	je     0x1008834
 100882b:	mov    DWORD PTR [eax],0xdddd
 1008831:	add    eax,0x8
 1008834:	mov    ecx,DWORD PTR [ebp-0xc]
 1008837:	mov    DWORD PTR [ebp-0x8],eax
 100883a:	jmp    0x1008840
 100883c:	and    DWORD PTR [ebp-0x8],0x0
 1008840:	cmp    DWORD PTR [ebp-0x8],0x0
 1008844:	jne    0x1008853
 1008846:	call   0x100af29
 100884b:	mov    DWORD PTR [eax],0xc
 1008851:	jmp    0x10087d3
 1008853:	mov    eax,DWORD PTR [ebx]
 1008855:	push   0x1
 1008857:	push   DWORD PTR [eax+0x4]
 100885a:	push   ecx
 100885b:	push   DWORD PTR [ebp-0x8]
 100885e:	push   0xffffffff
 1008860:	push   edi
 1008861:	push   esi
 1008862:	push   DWORD PTR [eax+0x14]
 1008865:	push   ebx
 1008866:	call   0x100cf84
 100886b:	add    esp,0x24
 100886e:	test   eax,eax
 1008870:	je     0x1008885
 1008872:	push   DWORD PTR [ebp-0x8]
 1008875:	push   DWORD PTR [ebp+0xc]
 1008878:	push   edi
 1008879:	call   0x100cd34
 100887e:	add    esp,0xc
 1008881:	mov    esi,eax
 1008883:	jmp    0x1008891
 1008885:	call   0x100af29
 100888a:	push   0x2a
 100888c:	pop    ecx
 100888d:	mov    DWORD PTR [eax],ecx
 100888f:	mov    esi,ecx
 1008891:	push   DWORD PTR [ebp-0x8]
 1008894:	call   0x100867f
 1008899:	pop    ecx
 100889a:	mov    eax,esi
 100889c:	lea    esp,[ebp-0x18]
 100889f:	pop    edi
 10088a0:	pop    esi
 10088a1:	pop    ebx
 10088a2:	mov    ecx,DWORD PTR [ebp-0x4]
 10088a5:	xor    ecx,ebp
 10088a7:	call   0x1008355
 10088ac:	leave  
 10088ad:	ret    
 10088ae:	int3   
 10088af:	int3   
 10088b0:	int3   
 10088b1:	int3   
 10088b2:	int3   
 10088b3:	mov    edi,edi
 10088b5:	push   ebp
 10088b6:	mov    ebp,esp
 10088b8:	sub    esp,0x10
 10088bb:	push   DWORD PTR [ebp+0x10]
 10088be:	lea    ecx,[ebp-0x10]
 10088c1:	call   0x10086a4
 10088c6:	lea    eax,[ebp-0x10]
 10088c9:	push   eax
 10088ca:	push   DWORD PTR [ebp+0xc]
 10088cd:	push   DWORD PTR [ebp+0x8]
 10088d0:	call   0x1008730
 10088d5:	add    esp,0xc
 10088d8:	cmp    BYTE PTR [ebp-0x4],0x0
 10088dc:	je     0x10088e5
 10088de:	mov    ecx,DWORD PTR [ebp-0x8]
 10088e1:	and    DWORD PTR [ecx+0x70],0xfffffffd
 10088e5:	leave  
 10088e6:	ret    
 10088e7:	int3   
 10088e8:	int3   
 10088e9:	int3   
 10088ea:	int3   
 10088eb:	int3   
 10088ec:	mov    edi,edi
 10088ee:	push   ebp
 10088ef:	mov    ebp,esp
 10088f1:	cmp    DWORD PTR ds:0x1014dc4,0x0
 10088f8:	jne    0x1008935
 10088fa:	mov    eax,DWORD PTR [ebp+0x8]
 10088fd:	test   eax,eax
 10088ff:	jne    0x1008915
 1008901:	call   0x100af29
 1008906:	mov    DWORD PTR [eax],0x16
 100890c:	call   0x100aecd
 1008911:	xor    eax,eax
 1008913:	pop    ebp
 1008914:	ret    
 1008915:	cmp    BYTE PTR [eax],0x0
 1008918:	mov    edx,eax
 100891a:	je     0x1008947
 100891c:	mov    cl,BYTE PTR [edx]
 100891e:	cmp    cl,0x41
 1008921:	jl     0x100892d
 1008923:	cmp    cl,0x5a
 1008926:	jg     0x100892d
 1008928:	add    cl,0x20
 100892b:	mov    BYTE PTR [edx],cl
 100892d:	inc    edx
 100892e:	cmp    BYTE PTR [edx],0x0
 1008931:	jne    0x100891c
 1008933:	pop    ebp
 1008934:	ret    
 1008935:	push   0x0
 1008937:	push   0xffffffff
 1008939:	push   DWORD PTR [ebp+0x8]
 100893c:	call   0x10088b3
 1008941:	mov    eax,DWORD PTR [ebp+0x8]
 1008944:	add    esp,0xc
 1008947:	pop    ebp
 1008948:	ret    
 1008949:	int3   
 100894a:	int3   
 100894b:	int3   
 100894c:	int3   
 100894d:	int3   
 100894e:	mov    edi,edi
 1008950:	push   ebp
 1008951:	mov    ebp,esp
 1008953:	push   0xa
 1008955:	push   0x0
 1008957:	push   DWORD PTR [ebp+0x8]
 100895a:	call   0x100d261
 100895f:	add    esp,0xc
 1008962:	pop    ebp
 1008963:	ret    
 1008964:	int3   
 1008965:	int3   
 1008966:	int3   
 1008967:	int3   
 1008968:	int3   
 1008969:	mov    edi,edi
 100896b:	push   ebp
 100896c:	mov    ebp,esp
 100896e:	sub    esp,0x2c
 1008971:	mov    eax,ds:0x1013054
 1008976:	xor    eax,ebp
 1008978:	mov    DWORD PTR [ebp-0x4],eax
 100897b:	mov    eax,DWORD PTR [ebp+0x8]
 100897e:	push   ebx
 100897f:	push   esi
 1008980:	mov    esi,DWORD PTR [ebp+0xc]
 1008983:	push   edi
 1008984:	mov    DWORD PTR [ebp-0x2c],eax
 1008987:	call   0x10099cb
 100898c:	push   0x8
 100898e:	pop    ecx
 100898f:	mov    DWORD PTR [ebp-0x28],eax
 1008992:	xor    eax,eax
 1008994:	lea    edi,[ebp-0x24]
 1008997:	push   0x7
 1008999:	rep stos DWORD PTR es:[edi],eax
 100899b:	pop    edi
 100899c:	mov    dl,BYTE PTR [esi]
 100899e:	movzx  ecx,dl
 10089a1:	mov    eax,ecx
 10089a3:	and    ecx,edi
 10089a5:	mov    bl,0x1
 10089a7:	shl    bl,cl
 10089a9:	shr    eax,0x3
 10089ac:	lea    eax,[ebp+eax*1-0x24]
 10089b0:	or     BYTE PTR [eax],bl
 10089b2:	inc    esi
 10089b3:	test   dl,dl
 10089b5:	jne    0x100899c
 10089b7:	mov    edx,DWORD PTR [ebp-0x2c]
 10089ba:	test   edx,edx
 10089bc:	jne    0x10089cb
 10089be:	mov    eax,DWORD PTR [ebp-0x28]
 10089c1:	mov    edx,DWORD PTR [eax+0x18]
 10089c4:	jmp    0x10089cb
 10089c6:	test   al,al
 10089c8:	je     0x10089e2
 10089ca:	inc    edx
 10089cb:	mov    al,BYTE PTR [edx]
 10089cd:	movzx  esi,al
 10089d0:	xor    ebx,ebx
 10089d2:	mov    ecx,esi
 10089d4:	and    ecx,edi
 10089d6:	inc    ebx
 10089d7:	shl    ebx,cl
 10089d9:	shr    esi,0x3
 10089dc:	test   BYTE PTR [ebp+esi*1-0x24],bl
 10089e0:	jne    0x10089c6
 10089e2:	mov    ebx,edx
 10089e4:	jmp    0x10089fc
 10089e6:	movzx  esi,BYTE PTR [edx]
 10089e9:	xor    eax,eax
 10089eb:	mov    ecx,esi
 10089ed:	and    ecx,edi
 10089ef:	inc    eax
 10089f0:	shl    eax,cl
 10089f2:	shr    esi,0x3
 10089f5:	test   BYTE PTR [ebp+esi*1-0x24],al
 10089f9:	jne    0x1008a03
 10089fb:	inc    edx
 10089fc:	cmp    BYTE PTR [edx],0x0
 10089ff:	jne    0x10089e6
 1008a01:	jmp    0x1008a07
 1008a03:	mov    BYTE PTR [edx],0x0
 1008a06:	inc    edx
 1008a07:	mov    eax,DWORD PTR [ebp-0x28]
 1008a0a:	mov    ecx,DWORD PTR [ebp-0x4]
 1008a0d:	mov    DWORD PTR [eax+0x18],edx
 1008a10:	mov    eax,ebx
 1008a12:	sub    eax,edx
 1008a14:	neg    eax
 1008a16:	sbb    eax,eax
 1008a18:	pop    edi
 1008a19:	and    eax,ebx
 1008a1b:	pop    esi
 1008a1c:	xor    ecx,ebp
 1008a1e:	pop    ebx
 1008a1f:	call   0x1008355
 1008a24:	leave  
 1008a25:	ret    
 1008a26:	int3   
 1008a27:	int3   
 1008a28:	int3   
 1008a29:	int3   
 1008a2a:	int3   
 1008a2b:	mov    edi,edi
 1008a2d:	push   ebp
 1008a2e:	mov    ebp,esp
 1008a30:	mov    eax,DWORD PTR [ebp+0x8]
 1008a33:	mov    eax,DWORD PTR [eax]
 1008a35:	cmp    DWORD PTR [eax],0xe06d7363
 1008a3b:	jne    0x1008a67
 1008a3d:	cmp    DWORD PTR [eax+0x10],0x3
 1008a41:	jne    0x1008a67
 1008a43:	mov    eax,DWORD PTR [eax+0x14]
 1008a46:	cmp    eax,0x19930520
 1008a4b:	je     0x1008a62
 1008a4d:	cmp    eax,0x19930521
 1008a52:	je     0x1008a62
 1008a54:	cmp    eax,0x19930522
 1008a59:	je     0x1008a62
 1008a5b:	cmp    eax,0x1994000
 1008a60:	jne    0x1008a67
 1008a62:	call   0x100d291
 1008a67:	xor    eax,eax
 1008a69:	pop    ebp
 1008a6a:	ret    0x4
 1008a6d:	int3   
 1008a6e:	int3   
 1008a6f:	int3   
 1008a70:	int3   
 1008a71:	int3   
 1008a72:	push   0x1008a2b
 1008a77:	call   DWORD PTR ds:0x100113c
 1008a7d:	xor    eax,eax
 1008a7f:	ret    
 1008a80:	int3   
 1008a81:	int3   
 1008a82:	int3   
 1008a83:	int3   
 1008a84:	int3   
 1008a85:	mov    edi,edi
 1008a87:	push   ebp
 1008a88:	mov    ebp,esp
 1008a8a:	push   0x1002248
 1008a8f:	call   DWORD PTR ds:0x1001140
 1008a95:	test   eax,eax
 1008a97:	je     0x1008aae
 1008a99:	push   0x1002238
 1008a9e:	push   eax
 1008a9f:	call   DWORD PTR ds:0x100109c
 1008aa5:	test   eax,eax
 1008aa7:	je     0x1008aae
 1008aa9:	push   DWORD PTR [ebp+0x8]
 1008aac:	call   eax
 1008aae:	pop    ebp
 1008aaf:	ret    
 1008ab0:	int3   
 1008ab1:	int3   
 1008ab2:	int3   
 1008ab3:	int3   
 1008ab4:	int3   
 1008ab5:	mov    edi,edi
 1008ab7:	push   ebp
 1008ab8:	mov    ebp,esp
 1008aba:	push   DWORD PTR [ebp+0x8]
 1008abd:	call   0x1008a85
 1008ac2:	pop    ecx
 1008ac3:	push   DWORD PTR [ebp+0x8]
 1008ac6:	call   DWORD PTR ds:0x1001144
 1008acc:	int3   
 1008acd:	int3   
 1008ace:	int3   
 1008acf:	int3   
 1008ad0:	int3   
 1008ad1:	int3   
 1008ad2:	push   0x8
 1008ad4:	call   0x100d473
 1008ad9:	pop    ecx
 1008ada:	ret    
 1008adb:	int3   
 1008adc:	int3   
 1008add:	int3   
 1008ade:	int3   
 1008adf:	int3   
 1008ae0:	push   0x8
 1008ae2:	call   0x100d390
 1008ae7:	pop    ecx
 1008ae8:	ret    
 1008ae9:	int3   
 1008aea:	int3   
 1008aeb:	int3   
 1008aec:	int3   
 1008aed:	int3   
 1008aee:	mov    edi,edi
 1008af0:	push   esi
 1008af1:	call   0x10097fd
 1008af6:	mov    esi,eax
 1008af8:	push   esi
 1008af9:	call   0x100c170
 1008afe:	push   esi
 1008aff:	call   0x100ad2f
 1008b04:	push   esi
 1008b05:	call   0x100d6d8
 1008b0a:	push   esi
 1008b0b:	call   0x100d6c4
 1008b10:	push   esi
 1008b11:	call   0x100d4ab
 1008b16:	push   esi
 1008b17:	call   0x100d2cf
 1008b1c:	add    esp,0x18
 1008b1f:	pop    esi
 1008b20:	ret    
 1008b21:	int3   
 1008b22:	int3   
 1008b23:	int3   
 1008b24:	int3   
 1008b25:	int3   
 1008b26:	mov    edi,edi
 1008b28:	push   ebp
 1008b29:	mov    ebp,esp
 1008b2b:	push   esi
 1008b2c:	mov    esi,DWORD PTR [ebp+0x8]
 1008b2f:	xor    eax,eax
 1008b31:	jmp    0x1008b42
 1008b33:	test   eax,eax
 1008b35:	jne    0x1008b47
 1008b37:	mov    ecx,DWORD PTR [esi]
 1008b39:	test   ecx,ecx
 1008b3b:	je     0x1008b3f
 1008b3d:	call   ecx
 1008b3f:	add    esi,0x4
 1008b42:	cmp    esi,DWORD PTR [ebp+0xc]
 1008b45:	jb     0x1008b33
 1008b47:	pop    esi
 1008b48:	pop    ebp
 1008b49:	ret    
 1008b4a:	int3   
 1008b4b:	int3   
 1008b4c:	int3   
 1008b4d:	int3   
 1008b4e:	int3   
 1008b4f:	mov    edi,edi
 1008b51:	push   ebp
 1008b52:	mov    ebp,esp
 1008b54:	cmp    DWORD PTR ds:0x10160f0,0x0
 1008b5b:	je     0x1008b76
 1008b5d:	push   0x10160f0
 1008b62:	call   0x100d7b0
 1008b67:	pop    ecx
 1008b68:	test   eax,eax
 1008b6a:	je     0x1008b76
 1008b6c:	push   DWORD PTR [ebp+0x8]
 1008b6f:	call   DWORD PTR ds:0x10160f0
 1008b75:	pop    ecx
 1008b76:	call   0x100d6ec
 1008b7b:	push   0x1001254
 1008b80:	push   0x100123c
 1008b85:	call   0x1008b26
 1008b8a:	pop    ecx
 1008b8b:	pop    ecx
 1008b8c:	test   eax,eax
 1008b8e:	jne    0x1008be4
 1008b90:	push   esi
 1008b91:	push   edi
 1008b92:	push   0x10097d2
 1008b97:	call   0x100c0bb
 1008b9c:	mov    eax,0x1001234
 1008ba1:	mov    esi,0x1001238
 1008ba6:	pop    ecx
 1008ba7:	mov    edi,eax
 1008ba9:	cmp    eax,esi
 1008bab:	jae    0x1008bbc
 1008bad:	mov    eax,DWORD PTR [edi]
 1008baf:	test   eax,eax
 1008bb1:	je     0x1008bb5
 1008bb3:	call   eax
 1008bb5:	add    edi,0x4
 1008bb8:	cmp    edi,esi
 1008bba:	jb     0x1008bad
 1008bbc:	cmp    DWORD PTR ds:0x10160f4,0x0
 1008bc3:	pop    edi
 1008bc4:	pop    esi
 1008bc5:	je     0x1008be2
 1008bc7:	push   0x10160f4
 1008bcc:	call   0x100d7b0
 1008bd1:	pop    ecx
 1008bd2:	test   eax,eax
 1008bd4:	je     0x1008be2
 1008bd6:	push   0x0
 1008bd8:	push   0x2
 1008bda:	push   0x0
 1008bdc:	call   DWORD PTR ds:0x10160f4
 1008be2:	xor    eax,eax
 1008be4:	pop    ebp
 1008be5:	ret    
 1008be6:	int3   
 1008be7:	int3   
 1008be8:	int3   
 1008be9:	int3   
 1008bea:	int3   
 1008beb:	push   0x20
 1008bed:	push   0x1011ae0
 1008bf2:	call   0x1009cd0
 1008bf7:	push   0x8
 1008bf9:	call   0x100d473
 1008bfe:	pop    ecx
 1008bff:	and    DWORD PTR [ebp-0x4],0x0
 1008c03:	xor    eax,eax
 1008c05:	inc    eax
 1008c06:	cmp    DWORD PTR ds:0x1014320,eax
 1008c0c:	je     0x1008cea
 1008c12:	mov    ds:0x101431c,eax
 1008c17:	mov    al,BYTE PTR [ebp+0x10]
 1008c1a:	mov    ds:0x1014318,al
 1008c1f:	cmp    DWORD PTR [ebp+0xc],0x0
 1008c23:	jne    0x1008cc9
 1008c29:	push   DWORD PTR ds:0x10160e8
 1008c2f:	mov    esi,DWORD PTR ds:0x1001148
 1008c35:	call   esi
 1008c37:	mov    ebx,eax
 1008c39:	mov    DWORD PTR [ebp-0x30],ebx
 1008c3c:	test   ebx,ebx
 1008c3e:	je     0x1008ca8
 1008c40:	push   DWORD PTR ds:0x10160e4
 1008c46:	call   esi
 1008c48:	mov    edi,eax
 1008c4a:	mov    DWORD PTR [ebp-0x2c],edi
 1008c4d:	mov    DWORD PTR [ebp-0x24],ebx
 1008c50:	mov    DWORD PTR [ebp-0x28],edi
 1008c53:	sub    edi,0x4
 1008c56:	mov    DWORD PTR [ebp-0x2c],edi
 1008c59:	cmp    edi,ebx
 1008c5b:	jb     0x1008ca8
 1008c5d:	call   0x10097fd
 1008c62:	cmp    DWORD PTR [edi],eax
 1008c64:	je     0x1008c53
 1008c66:	cmp    edi,ebx
 1008c68:	jb     0x1008ca8
 1008c6a:	push   DWORD PTR [edi]
 1008c6c:	call   esi
 1008c6e:	mov    ebx,eax
 1008c70:	call   0x10097fd
 1008c75:	mov    DWORD PTR [edi],eax
 1008c77:	call   ebx
 1008c79:	push   DWORD PTR ds:0x10160e8
 1008c7f:	call   esi
 1008c81:	mov    ebx,eax
 1008c83:	push   DWORD PTR ds:0x10160e4
 1008c89:	call   esi
 1008c8b:	cmp    DWORD PTR [ebp-0x24],ebx
 1008c8e:	jne    0x1008c95
 1008c90:	cmp    DWORD PTR [ebp-0x28],eax
 1008c93:	je     0x1008ca3
 1008c95:	mov    DWORD PTR [ebp-0x24],ebx
 1008c98:	mov    DWORD PTR [ebp-0x30],ebx
 1008c9b:	mov    DWORD PTR [ebp-0x28],eax
 1008c9e:	mov    edi,eax
 1008ca0:	mov    DWORD PTR [ebp-0x2c],edi
 1008ca3:	mov    ebx,DWORD PTR [ebp-0x30]
 1008ca6:	jmp    0x1008c53
 1008ca8:	mov    DWORD PTR [ebp-0x1c],0x1001258
 1008caf:	cmp    DWORD PTR [ebp-0x1c],0x1001264
 1008cb6:	jae    0x1008cc9
 1008cb8:	mov    eax,DWORD PTR [ebp-0x1c]
 1008cbb:	mov    eax,DWORD PTR [eax]
 1008cbd:	test   eax,eax
 1008cbf:	je     0x1008cc3
 1008cc1:	call   eax
 1008cc3:	add    DWORD PTR [ebp-0x1c],0x4
 1008cc7:	jmp    0x1008caf
 1008cc9:	mov    DWORD PTR [ebp-0x20],0x1001268
 1008cd0:	cmp    DWORD PTR [ebp-0x20],0x100126c
 1008cd7:	jae    0x1008cea
 1008cd9:	mov    eax,DWORD PTR [ebp-0x20]
 1008cdc:	mov    eax,DWORD PTR [eax]
 1008cde:	test   eax,eax
 1008ce0:	je     0x1008ce4
 1008ce2:	call   eax
 1008ce4:	add    DWORD PTR [ebp-0x20],0x4
 1008ce8:	jmp    0x1008cd0
 1008cea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008cf1:	call   0x1008d16
 1008cf6:	cmp    DWORD PTR [ebp+0x10],0x0
 1008cfa:	jne    0x1008d25
 1008cfc:	mov    DWORD PTR ds:0x1014320,0x1
 1008d06:	push   0x8
 1008d08:	call   0x100d390
 1008d0d:	pop    ecx
 1008d0e:	push   DWORD PTR [ebp+0x8]
 1008d11:	call   0x1008ab5
 1008d16:	cmp    DWORD PTR [ebp+0x10],0x0
 1008d1a:	je     0x1008d24
 1008d1c:	push   0x8
 1008d1e:	call   0x100d390
 1008d23:	pop    ecx
 1008d24:	ret    
 1008d25:	call   0x1009d15
 1008d2a:	ret    
 1008d2b:	int3   
 1008d2c:	int3   
 1008d2d:	int3   
 1008d2e:	int3   
 1008d2f:	int3   
 1008d30:	mov    edi,edi
 1008d32:	push   ebp
 1008d33:	mov    ebp,esp
 1008d35:	push   0x0
 1008d37:	push   0x0
 1008d39:	push   DWORD PTR [ebp+0x8]
 1008d3c:	call   0x1008beb
 1008d41:	add    esp,0xc
 1008d44:	pop    ebp
 1008d45:	ret    
 1008d46:	int3   
 1008d47:	int3   
 1008d48:	int3   
 1008d49:	int3   
 1008d4a:	int3   
 1008d4b:	mov    edi,edi
 1008d4d:	push   ebp
 1008d4e:	mov    ebp,esp
 1008d50:	push   0x0
 1008d52:	push   0x1
 1008d54:	push   DWORD PTR [ebp+0x8]
 1008d57:	call   0x1008beb
 1008d5c:	add    esp,0xc
 1008d5f:	pop    ebp
 1008d60:	ret    
 1008d61:	int3   
 1008d62:	int3   
 1008d63:	int3   
 1008d64:	int3   
 1008d65:	int3   
 1008d66:	push   0x1
 1008d68:	push   0x0
 1008d6a:	push   0x0
 1008d6c:	call   0x1008beb
 1008d71:	add    esp,0xc
 1008d74:	ret    
 1008d75:	int3   
 1008d76:	int3   
 1008d77:	int3   
 1008d78:	int3   
 1008d79:	int3   
 1008d7a:	push   0x1
 1008d7c:	push   0x1
 1008d7e:	push   0x0
 1008d80:	call   0x1008beb
 1008d85:	add    esp,0xc
 1008d88:	ret    
 1008d89:	int3   
 1008d8a:	int3   
 1008d8b:	int3   
 1008d8c:	int3   
 1008d8d:	int3   
 1008d8e:	mov    edi,edi
 1008d90:	push   ebp
 1008d91:	mov    ebp,esp
 1008d93:	call   0x1008f90
 1008d98:	push   DWORD PTR [ebp+0x8]
 1008d9b:	call   0x1008ddc
 1008da0:	pop    ecx
 1008da1:	push   0xff
 1008da6:	call   0x1008d4b
 1008dab:	int3   
 1008dac:	int3   
 1008dad:	int3   
 1008dae:	int3   
 1008daf:	int3   
 1008db0:	int3   
 1008db1:	mov    edi,edi
 1008db3:	push   ebp
 1008db4:	mov    ebp,esp
 1008db6:	xor    eax,eax
 1008db8:	mov    ecx,DWORD PTR [ebp+0x8]
 1008dbb:	cmp    ecx,DWORD PTR [eax*8+0x1002ae0]
 1008dc2:	je     0x1008dce
 1008dc4:	inc    eax
 1008dc5:	cmp    eax,0x16
 1008dc8:	jb     0x1008db8
 1008dca:	xor    eax,eax
 1008dcc:	pop    ebp
 1008dcd:	ret    
 1008dce:	mov    eax,DWORD PTR [eax*8+0x1002ae4]
 1008dd5:	pop    ebp
 1008dd6:	ret    
 1008dd7:	int3   
 1008dd8:	int3   
 1008dd9:	int3   
 1008dda:	int3   
 1008ddb:	int3   
 1008ddc:	mov    edi,edi
 1008dde:	push   ebp
 1008ddf:	mov    ebp,esp
 1008de1:	sub    esp,0x1fc
 1008de7:	mov    eax,ds:0x1013054
 1008dec:	xor    eax,ebp
 1008dee:	mov    DWORD PTR [ebp-0x4],eax
 1008df1:	push   ebx
 1008df2:	push   esi
 1008df3:	mov    esi,DWORD PTR [ebp+0x8]
 1008df6:	push   edi
 1008df7:	push   esi
 1008df8:	call   0x1008db1
 1008dfd:	mov    edi,eax
 1008dff:	xor    ebx,ebx
 1008e01:	pop    ecx
 1008e02:	mov    DWORD PTR [ebp-0x1fc],edi
 1008e08:	cmp    edi,ebx
 1008e0a:	je     0x1008f7c
 1008e10:	push   0x3
 1008e12:	call   0x100dbb6
 1008e17:	pop    ecx
 1008e18:	cmp    eax,0x1
 1008e1b:	je     0x1008f28
 1008e21:	push   0x3
 1008e23:	call   0x100dbb6
 1008e28:	pop    ecx
 1008e29:	test   eax,eax
 1008e2b:	jne    0x1008e3a
 1008e2d:	cmp    DWORD PTR ds:0x1013050,0x1
 1008e34:	je     0x1008f28
 1008e3a:	cmp    esi,0xfc
 1008e40:	je     0x1008f7c
 1008e46:	push   0x1002c1c
 1008e4b:	push   0x314
 1008e50:	mov    edi,0x1014328
 1008e55:	push   edi
 1008e56:	call   0x100db4e
 1008e5b:	add    esp,0xc
 1008e5e:	test   eax,eax
 1008e60:	jne    0x1008f1e
 1008e66:	push   0x104
 1008e6b:	mov    esi,0x101435a
 1008e70:	push   esi
 1008e71:	push   ebx
 1008e72:	mov    ds:0x1014562,ax
 1008e78:	call   DWORD PTR ds:0x1001154
 1008e7e:	mov    ebx,0x2fb
 1008e83:	test   eax,eax
 1008e85:	jne    0x1008ea6
 1008e87:	push   0x1002bec
 1008e8c:	push   ebx
 1008e8d:	push   esi
 1008e8e:	call   0x100db4e
 1008e93:	add    esp,0xc
 1008e96:	test   eax,eax
 1008e98:	je     0x1008ea6
 1008e9a:	xor    eax,eax
 1008e9c:	push   eax
 1008e9d:	push   eax
 1008e9e:	push   eax
 1008e9f:	push   eax
 1008ea0:	push   eax
 1008ea1:	call   0x100ae71
 1008ea6:	push   esi
 1008ea7:	call   0x100db2e
 1008eac:	inc    eax
 1008ead:	pop    ecx
 1008eae:	cmp    eax,0x3c
 1008eb1:	jbe    0x1008edd
 1008eb3:	push   esi
 1008eb4:	call   0x100db2e
 1008eb9:	lea    eax,[eax*2+0x10142e4]
 1008ec0:	mov    ecx,eax
 1008ec2:	sub    ecx,esi
 1008ec4:	push   0x3
 1008ec6:	sar    ecx,1
 1008ec8:	push   0x1002be4
 1008ecd:	sub    ebx,ecx
 1008ecf:	push   ebx
 1008ed0:	push   eax
 1008ed1:	call   0x100da5c
 1008ed6:	add    esp,0x14
 1008ed9:	test   eax,eax
 1008edb:	jne    0x1008e9a
 1008edd:	push   0x1002bdc
 1008ee2:	mov    esi,0x314
 1008ee7:	push   esi
 1008ee8:	push   edi
 1008ee9:	call   0x100d9e2
 1008eee:	add    esp,0xc
 1008ef1:	test   eax,eax
 1008ef3:	jne    0x1008e9a
 1008ef5:	push   DWORD PTR [ebp-0x1fc]
 1008efb:	push   esi
 1008efc:	push   edi
 1008efd:	call   0x100d9e2
 1008f02:	add    esp,0xc
 1008f05:	test   eax,eax
 1008f07:	jne    0x1008e9a
 1008f09:	push   0x12010
 1008f0e:	push   0x1002b90
 1008f13:	push   edi
 1008f14:	call   0x100d871
 1008f19:	add    esp,0xc
 1008f1c:	jmp    0x1008f7c
 1008f1e:	push   ebx
 1008f1f:	push   ebx
 1008f20:	push   ebx
 1008f21:	push   ebx
 1008f22:	push   ebx
 1008f23:	jmp    0x1008ea1
 1008f28:	push   0xfffffff4
 1008f2a:	call   DWORD PTR ds:0x1001150
 1008f30:	mov    esi,eax
 1008f32:	cmp    esi,ebx
 1008f34:	je     0x1008f7c
 1008f36:	cmp    esi,0xffffffff
 1008f39:	je     0x1008f7c
 1008f3b:	xor    eax,eax
 1008f3d:	mov    cl,BYTE PTR [edi+eax*2]
 1008f40:	mov    BYTE PTR [ebp+eax*1-0x1f8],cl
 1008f47:	cmp    WORD PTR [edi+eax*2],bx
 1008f4b:	je     0x1008f55
 1008f4d:	inc    eax
 1008f4e:	cmp    eax,0x1f4
 1008f53:	jb     0x1008f3d
 1008f55:	push   ebx
 1008f56:	lea    eax,[ebp-0x1fc]
 1008f5c:	push   eax
 1008f5d:	lea    eax,[ebp-0x1f8]
 1008f63:	push   eax
 1008f64:	mov    BYTE PTR [ebp-0x5],bl
 1008f67:	call   0x100b740
 1008f6c:	pop    ecx
 1008f6d:	push   eax
 1008f6e:	lea    eax,[ebp-0x1f8]
 1008f74:	push   eax
 1008f75:	push   esi
 1008f76:	call   DWORD PTR ds:0x100114c
 1008f7c:	mov    ecx,DWORD PTR [ebp-0x4]
 1008f7f:	pop    edi
 1008f80:	pop    esi
 1008f81:	xor    ecx,ebp
 1008f83:	pop    ebx
 1008f84:	call   0x1008355
 1008f89:	leave  
 1008f8a:	ret    
 1008f8b:	int3   
 1008f8c:	int3   
 1008f8d:	int3   
 1008f8e:	int3   
 1008f8f:	int3   
 1008f90:	push   0x3
 1008f92:	call   0x100dbb6
 1008f97:	pop    ecx
 1008f98:	cmp    eax,0x1
 1008f9b:	je     0x1008fb2
 1008f9d:	push   0x3
 1008f9f:	call   0x100dbb6
 1008fa4:	pop    ecx
 1008fa5:	test   eax,eax
 1008fa7:	jne    0x1008fc8
 1008fa9:	cmp    DWORD PTR ds:0x1013050,0x1
 1008fb0:	jne    0x1008fc8
 1008fb2:	push   0xfc
 1008fb7:	call   0x1008ddc
 1008fbc:	push   0xff
 1008fc1:	call   0x1008ddc
 1008fc6:	pop    ecx
 1008fc7:	pop    ecx
 1008fc8:	ret    
 1008fc9:	int3   
 1008fca:	int3   
 1008fcb:	int3   
 1008fcc:	int3   
 1008fcd:	int3   
 1008fce:	mov    edi,edi
 1008fd0:	push   ebp
 1008fd1:	mov    ebp,esp
 1008fd3:	push   esi
 1008fd4:	call   0x100994d
 1008fd9:	mov    esi,eax
 1008fdb:	test   esi,esi
 1008fdd:	je     0x1009115
 1008fe3:	mov    ecx,DWORD PTR [esi+0x5c]
 1008fe6:	mov    edx,DWORD PTR [ebp+0x8]
 1008fe9:	mov    eax,ecx
 1008feb:	push   edi
 1008fec:	cmp    DWORD PTR [eax],edx
 1008fee:	je     0x1008ffd
 1008ff0:	add    eax,0xc
 1008ff3:	lea    edi,[ecx+0x90]
 1008ff9:	cmp    eax,edi
 1008ffb:	jb     0x1008fec
 1008ffd:	add    ecx,0x90
 1009003:	cmp    eax,ecx
 1009005:	jae    0x100900b
 1009007:	cmp    DWORD PTR [eax],edx
 1009009:	je     0x100900d
 100900b:	xor    eax,eax
 100900d:	test   eax,eax
 100900f:	je     0x1009018
 1009011:	mov    edx,DWORD PTR [eax+0x8]
 1009014:	test   edx,edx
 1009016:	jne    0x100901f
 1009018:	xor    eax,eax
 100901a:	jmp    0x1009114
 100901f:	cmp    edx,0x5
 1009022:	jne    0x1009030
 1009024:	and    DWORD PTR [eax+0x8],0x0
 1009028:	xor    eax,eax
 100902a:	inc    eax
 100902b:	jmp    0x1009114
 1009030:	cmp    edx,0x1
 1009033:	je     0x1009111
 1009039:	mov    ecx,DWORD PTR [ebp+0xc]
 100903c:	push   ebx
 100903d:	mov    ebx,DWORD PTR [esi+0x60]
 1009040:	mov    DWORD PTR [esi+0x60],ecx
 1009043:	mov    ecx,DWORD PTR [eax+0x4]
 1009046:	cmp    ecx,0x8
 1009049:	jne    0x1009105
 100904f:	push   0x24
 1009051:	pop    ecx
 1009052:	mov    edi,DWORD PTR [esi+0x5c]
 1009055:	and    DWORD PTR [ecx+edi*1+0x8],0x0
 100905a:	add    ecx,0xc
 100905d:	cmp    ecx,0x90
 1009063:	jl     0x1009052
 1009065:	mov    eax,DWORD PTR [eax]
 1009067:	mov    edi,DWORD PTR [esi+0x64]
 100906a:	cmp    eax,0xc000008e
 100906f:	jne    0x100907a
 1009071:	mov    DWORD PTR [esi+0x64],0x83
 1009078:	jmp    0x10090f8
 100907a:	cmp    eax,0xc0000090
 100907f:	jne    0x100908a
 1009081:	mov    DWORD PTR [esi+0x64],0x81
 1009088:	jmp    0x10090f8
 100908a:	cmp    eax,0xc0000091
 100908f:	jne    0x100909a
 1009091:	mov    DWORD PTR [esi+0x64],0x84
 1009098:	jmp    0x10090f8
 100909a:	cmp    eax,0xc0000093
 100909f:	jne    0x10090aa
 10090a1:	mov    DWORD PTR [esi+0x64],0x85
 10090a8:	jmp    0x10090f8
 10090aa:	cmp    eax,0xc000008d
 10090af:	jne    0x10090ba
 10090b1:	mov    DWORD PTR [esi+0x64],0x82
 10090b8:	jmp    0x10090f8
 10090ba:	cmp    eax,0xc000008f
 10090bf:	jne    0x10090ca
 10090c1:	mov    DWORD PTR [esi+0x64],0x86
 10090c8:	jmp    0x10090f8
 10090ca:	cmp    eax,0xc0000092
 10090cf:	jne    0x10090da
 10090d1:	mov    DWORD PTR [esi+0x64],0x8a
 10090d8:	jmp    0x10090f8
 10090da:	cmp    eax,0xc00002b5
 10090df:	jne    0x10090ea
 10090e1:	mov    DWORD PTR [esi+0x64],0x8d
 10090e8:	jmp    0x10090f8
 10090ea:	cmp    eax,0xc00002b4
 10090ef:	jne    0x10090f8
 10090f1:	mov    DWORD PTR [esi+0x64],0x8e
 10090f8:	push   DWORD PTR [esi+0x64]
 10090fb:	push   0x8
 10090fd:	call   edx
 10090ff:	pop    ecx
 1009100:	mov    DWORD PTR [esi+0x64],edi
 1009103:	jmp    0x100910c
 1009105:	and    DWORD PTR [eax+0x8],0x0
 1009109:	push   ecx
 100910a:	call   edx
 100910c:	pop    ecx
 100910d:	mov    DWORD PTR [esi+0x60],ebx
 1009110:	pop    ebx
 1009111:	or     eax,0xffffffff
 1009114:	pop    edi
 1009115:	pop    esi
 1009116:	pop    ebp
 1009117:	ret    
 1009118:	int3   
 1009119:	int3   
 100911a:	int3   
 100911b:	int3   
 100911c:	int3   
 100911d:	mov    edi,edi
 100911f:	push   esi
 1009120:	push   edi
 1009121:	xor    edi,edi
 1009123:	cmp    DWORD PTR ds:0x10160ec,edi
 1009129:	jne    0x1009130
 100912b:	call   0x100c9bf
 1009130:	mov    esi,DWORD PTR ds:0x10160f8
 1009136:	test   esi,esi
 1009138:	jne    0x100913f
 100913a:	mov    esi,0x1001e64
 100913f:	mov    al,BYTE PTR [esi]
 1009141:	cmp    al,0x20
 1009143:	ja     0x100914d
 1009145:	test   al,al
 1009147:	je     0x1009177
 1009149:	test   edi,edi
 100914b:	je     0x1009171
 100914d:	cmp    al,0x22
 100914f:	jne    0x100915a
 1009151:	xor    ecx,ecx
 1009153:	test   edi,edi
 1009155:	sete   cl
 1009158:	mov    edi,ecx
 100915a:	movzx  eax,al
 100915d:	push   eax
 100915e:	call   0x100dc52
 1009163:	pop    ecx
 1009164:	test   eax,eax
 1009166:	je     0x1009169
 1009168:	inc    esi
 1009169:	inc    esi
 100916a:	jmp    0x100913f
 100916c:	cmp    al,0x20
 100916e:	ja     0x1009177
 1009170:	inc    esi
 1009171:	mov    al,BYTE PTR [esi]
 1009173:	test   al,al
 1009175:	jne    0x100916c
 1009177:	pop    edi
 1009178:	mov    eax,esi
 100917a:	pop    esi
 100917b:	ret    
 100917c:	int3   
 100917d:	int3   
 100917e:	int3   
 100917f:	int3   
 1009180:	int3   
 1009181:	cmp    DWORD PTR ds:0x10160ec,0x0
 1009188:	jne    0x100918f
 100918a:	call   0x100c9bf
 100918f:	push   esi
 1009190:	mov    esi,DWORD PTR ds:0x10142d4
 1009196:	push   edi
 1009197:	xor    edi,edi
 1009199:	test   esi,esi
 100919b:	jne    0x10091b5
 100919d:	or     eax,0xffffffff
 10091a0:	jmp    0x1009236
 10091a5:	cmp    al,0x3d
 10091a7:	je     0x10091aa
 10091a9:	inc    edi
 10091aa:	push   esi
 10091ab:	call   0x100b740
 10091b0:	pop    ecx
 10091b1:	lea    esi,[esi+eax*1+0x1]
 10091b5:	mov    al,BYTE PTR [esi]
 10091b7:	test   al,al
 10091b9:	jne    0x10091a5
 10091bb:	push   0x4
 10091bd:	inc    edi
 10091be:	push   edi
 10091bf:	call   0x100dcb9
 10091c4:	mov    edi,eax
 10091c6:	pop    ecx
 10091c7:	pop    ecx
 10091c8:	mov    DWORD PTR ds:0x1014300,edi
 10091ce:	test   edi,edi
 10091d0:	je     0x100919d
 10091d2:	mov    esi,DWORD PTR ds:0x10142d4
 10091d8:	push   ebx
 10091d9:	jmp    0x100920e
 10091db:	push   esi
 10091dc:	call   0x100b740
 10091e1:	cmp    BYTE PTR [esi],0x3d
 10091e4:	pop    ecx
 10091e5:	lea    ebx,[eax+0x1]
 10091e8:	je     0x100920c
 10091ea:	push   0x1
 10091ec:	push   ebx
 10091ed:	call   0x100dcb9
 10091f2:	pop    ecx
 10091f3:	pop    ecx
 10091f4:	mov    DWORD PTR [edi],eax
 10091f6:	test   eax,eax
 10091f8:	je     0x1009239
 10091fa:	push   esi
 10091fb:	push   ebx
 10091fc:	push   eax
 10091fd:	call   0x100cd34
 1009202:	add    esp,0xc
 1009205:	test   eax,eax
 1009207:	jne    0x1009250
 1009209:	add    edi,0x4
 100920c:	add    esi,ebx
 100920e:	cmp    BYTE PTR [esi],0x0
 1009211:	jne    0x10091db
 1009213:	push   DWORD PTR ds:0x10142d4
 1009219:	call   0x100af81
 100921e:	and    DWORD PTR ds:0x10142d4,0x0
 1009225:	and    DWORD PTR [edi],0x0
 1009228:	mov    DWORD PTR ds:0x10160e0,0x1
 1009232:	xor    eax,eax
 1009234:	pop    ecx
 1009235:	pop    ebx
 1009236:	pop    edi
 1009237:	pop    esi
 1009238:	ret    
 1009239:	push   DWORD PTR ds:0x1014300
 100923f:	call   0x100af81
 1009244:	and    DWORD PTR ds:0x1014300,0x0
 100924b:	or     eax,0xffffffff
 100924e:	jmp    0x1009234
 1009250:	xor    eax,eax
 1009252:	push   eax
 1009253:	push   eax
 1009254:	push   eax
 1009255:	push   eax
 1009256:	push   eax
 1009257:	call   0x100ae71
 100925c:	int3   
 100925d:	int3   
 100925e:	int3   
 100925f:	int3   
 1009260:	int3   
 1009261:	int3   
 1009262:	mov    edi,edi
 1009264:	push   ebp
 1009265:	mov    ebp,esp
 1009267:	push   ecx
 1009268:	mov    ecx,DWORD PTR [ebp+0x10]
 100926b:	push   ebx
 100926c:	xor    eax,eax
 100926e:	push   esi
 100926f:	mov    DWORD PTR [edi],eax
 1009271:	mov    esi,edx
 1009273:	mov    edx,DWORD PTR [ebp+0xc]
 1009276:	mov    DWORD PTR [ecx],0x1
 100927c:	cmp    DWORD PTR [ebp+0x8],eax
 100927f:	je     0x100928a
 1009281:	mov    ebx,DWORD PTR [ebp+0x8]
 1009284:	add    DWORD PTR [ebp+0x8],0x4
 1009288:	mov    DWORD PTR [ebx],edx
 100928a:	mov    DWORD PTR [ebp-0x4],eax
 100928d:	cmp    BYTE PTR [esi],0x22
 1009290:	jne    0x10092a2
 1009292:	xor    eax,eax
 1009294:	cmp    DWORD PTR [ebp-0x4],eax
 1009297:	mov    bl,0x22
 1009299:	sete   al
 100929c:	inc    esi
 100929d:	mov    DWORD PTR [ebp-0x4],eax
 10092a0:	jmp    0x10092de
 10092a2:	inc    DWORD PTR [edi]
 10092a4:	test   edx,edx
 10092a6:	je     0x10092b0
 10092a8:	mov    al,BYTE PTR [esi]
 10092aa:	mov    BYTE PTR [edx],al
 10092ac:	inc    edx
 10092ad:	mov    DWORD PTR [ebp+0xc],edx
 10092b0:	mov    bl,BYTE PTR [esi]
 10092b2:	movzx  eax,bl
 10092b5:	push   eax
 10092b6:	inc    esi
 10092b7:	call   0x100dc52
 10092bc:	pop    ecx
 10092bd:	test   eax,eax
 10092bf:	je     0x10092d4
 10092c1:	inc    DWORD PTR [edi]
 10092c3:	cmp    DWORD PTR [ebp+0xc],0x0
 10092c7:	je     0x10092d3
 10092c9:	mov    ecx,DWORD PTR [ebp+0xc]
 10092cc:	mov    al,BYTE PTR [esi]
 10092ce:	inc    DWORD PTR [ebp+0xc]
 10092d1:	mov    BYTE PTR [ecx],al
 10092d3:	inc    esi
 10092d4:	mov    edx,DWORD PTR [ebp+0xc]
 10092d7:	mov    ecx,DWORD PTR [ebp+0x10]
 10092da:	test   bl,bl
 10092dc:	je     0x1009310
 10092de:	cmp    DWORD PTR [ebp-0x4],0x0
 10092e2:	jne    0x100928d
 10092e4:	cmp    bl,0x20
 10092e7:	je     0x10092ee
 10092e9:	cmp    bl,0x9
 10092ec:	jne    0x100928d
 10092ee:	test   edx,edx
 10092f0:	je     0x10092f6
 10092f2:	mov    BYTE PTR [edx-0x1],0x0
 10092f6:	and    DWORD PTR [ebp-0x4],0x0
 10092fa:	cmp    BYTE PTR [esi],0x0
 10092fd:	je     0x10093ec
 1009303:	mov    al,BYTE PTR [esi]
 1009305:	cmp    al,0x20
 1009307:	je     0x100930d
 1009309:	cmp    al,0x9
 100930b:	jne    0x1009313
 100930d:	inc    esi
 100930e:	jmp    0x1009303
 1009310:	dec    esi
 1009311:	jmp    0x10092f6
 1009313:	cmp    BYTE PTR [esi],0x0
 1009316:	je     0x10093ec
 100931c:	cmp    DWORD PTR [ebp+0x8],0x0
 1009320:	je     0x100932b
 1009322:	mov    eax,DWORD PTR [ebp+0x8]
 1009325:	add    DWORD PTR [ebp+0x8],0x4
 1009329:	mov    DWORD PTR [eax],edx
 100932b:	inc    DWORD PTR [ecx]
 100932d:	xor    ebx,ebx
 100932f:	inc    ebx
 1009330:	xor    ecx,ecx
 1009332:	jmp    0x1009336
 1009334:	inc    esi
 1009335:	inc    ecx
 1009336:	cmp    BYTE PTR [esi],0x5c
 1009339:	je     0x1009334
 100933b:	cmp    BYTE PTR [esi],0x22
 100933e:	jne    0x1009366
 1009340:	test   cl,0x1
 1009343:	jne    0x1009364
 1009345:	cmp    DWORD PTR [ebp-0x4],0x0
 1009349:	je     0x1009357
 100934b:	lea    eax,[esi+0x1]
 100934e:	cmp    BYTE PTR [eax],0x22
 1009351:	jne    0x1009357
 1009353:	mov    esi,eax
 1009355:	jmp    0x1009364
 1009357:	xor    eax,eax
 1009359:	xor    ebx,ebx
 100935b:	cmp    DWORD PTR [ebp-0x4],eax
 100935e:	sete   al
 1009361:	mov    DWORD PTR [ebp-0x4],eax
 1009364:	shr    ecx,1
 1009366:	test   ecx,ecx
 1009368:	je     0x100937c
 100936a:	dec    ecx
 100936b:	test   edx,edx
 100936d:	je     0x1009373
 100936f:	mov    BYTE PTR [edx],0x5c
 1009372:	inc    edx
 1009373:	inc    DWORD PTR [edi]
 1009375:	test   ecx,ecx
 1009377:	jne    0x100936a
 1009379:	mov    DWORD PTR [ebp+0xc],edx
 100937c:	mov    al,BYTE PTR [esi]
 100937e:	test   al,al
 1009380:	je     0x10093d7
 1009382:	cmp    DWORD PTR [ebp-0x4],0x0
 1009386:	jne    0x1009390
 1009388:	cmp    al,0x20
 100938a:	je     0x10093d7
 100938c:	cmp    al,0x9
 100938e:	je     0x10093d7
 1009390:	test   ebx,ebx
 1009392:	je     0x10093d1
 1009394:	movsx  eax,al
 1009397:	push   eax
 1009398:	test   edx,edx
 100939a:	je     0x10093bf
 100939c:	call   0x100dc52
 10093a1:	pop    ecx
 10093a2:	test   eax,eax
 10093a4:	je     0x10093b3
 10093a6:	mov    al,BYTE PTR [esi]
 10093a8:	mov    ecx,DWORD PTR [ebp+0xc]
 10093ab:	inc    DWORD PTR [ebp+0xc]
 10093ae:	mov    BYTE PTR [ecx],al
 10093b0:	inc    esi
 10093b1:	inc    DWORD PTR [edi]
 10093b3:	mov    ecx,DWORD PTR [ebp+0xc]
 10093b6:	mov    al,BYTE PTR [esi]
 10093b8:	inc    DWORD PTR [ebp+0xc]
 10093bb:	mov    BYTE PTR [ecx],al
 10093bd:	jmp    0x10093cc
 10093bf:	call   0x100dc52
 10093c4:	pop    ecx
 10093c5:	test   eax,eax
 10093c7:	je     0x10093cc
 10093c9:	inc    esi
 10093ca:	inc    DWORD PTR [edi]
 10093cc:	inc    DWORD PTR [edi]
 10093ce:	mov    edx,DWORD PTR [ebp+0xc]
 10093d1:	inc    esi
 10093d2:	jmp    0x100932d
 10093d7:	test   edx,edx
 10093d9:	je     0x10093e2
 10093db:	mov    BYTE PTR [edx],0x0
 10093de:	inc    edx
 10093df:	mov    DWORD PTR [ebp+0xc],edx
 10093e2:	inc    DWORD PTR [edi]
 10093e4:	mov    ecx,DWORD PTR [ebp+0x10]
 10093e7:	jmp    0x10092fa
 10093ec:	mov    eax,DWORD PTR [ebp+0x8]
 10093ef:	pop    esi
 10093f0:	pop    ebx
 10093f1:	test   eax,eax
 10093f3:	je     0x10093f8
 10093f5:	and    DWORD PTR [eax],0x0
 10093f8:	inc    DWORD PTR [ecx]
 10093fa:	leave  
 10093fb:	ret    
 10093fc:	int3   
 10093fd:	int3   
 10093fe:	int3   
 10093ff:	int3   
 1009400:	int3   
 1009401:	mov    edi,edi
 1009403:	push   ebp
 1009404:	mov    ebp,esp
 1009406:	sub    esp,0xc
 1009409:	push   ebx
 100940a:	xor    ebx,ebx
 100940c:	push   esi
 100940d:	push   edi
 100940e:	cmp    DWORD PTR ds:0x10160ec,ebx
 1009414:	jne    0x100941b
 1009416:	call   0x100c9bf
 100941b:	push   0x104
 1009420:	mov    esi,0x1014950
 1009425:	push   esi
 1009426:	push   ebx
 1009427:	mov    BYTE PTR ds:0x1014a54,bl
 100942d:	call   DWORD PTR ds:0x1001078
 1009433:	mov    eax,ds:0x10160f8
 1009438:	mov    DWORD PTR ds:0x1014310,esi
 100943e:	cmp    eax,ebx
 1009440:	je     0x1009449
 1009442:	mov    DWORD PTR [ebp-0x4],eax
 1009445:	cmp    BYTE PTR [eax],bl
 1009447:	jne    0x100944c
 1009449:	mov    DWORD PTR [ebp-0x4],esi
 100944c:	mov    edx,DWORD PTR [ebp-0x4]
 100944f:	lea    eax,[ebp-0x8]
 1009452:	push   eax
 1009453:	push   ebx
 1009454:	push   ebx
 1009455:	lea    edi,[ebp-0xc]
 1009458:	call   0x1009262
 100945d:	mov    eax,DWORD PTR [ebp-0x8]
 1009460:	add    esp,0xc
 1009463:	cmp    eax,0x3fffffff
 1009468:	jae    0x10094b4
 100946a:	mov    ecx,DWORD PTR [ebp-0xc]
 100946d:	cmp    ecx,0xffffffff
 1009470:	jae    0x10094b4
 1009472:	mov    edi,eax
 1009474:	shl    edi,0x2
 1009477:	lea    eax,[edi+ecx*1]
 100947a:	cmp    eax,ecx
 100947c:	jb     0x10094b4
 100947e:	push   eax
 100947f:	call   0x100dc6f
 1009484:	mov    esi,eax
 1009486:	pop    ecx
 1009487:	cmp    esi,ebx
 1009489:	je     0x10094b4
 100948b:	mov    edx,DWORD PTR [ebp-0x4]
 100948e:	lea    eax,[ebp-0x8]
 1009491:	push   eax
 1009492:	add    edi,esi
 1009494:	push   edi
 1009495:	push   esi
 1009496:	lea    edi,[ebp-0xc]
 1009499:	call   0x1009262
 100949e:	mov    eax,DWORD PTR [ebp-0x8]
 10094a1:	add    esp,0xc
 10094a4:	dec    eax
 10094a5:	mov    ds:0x10142f4,eax
 10094aa:	mov    DWORD PTR ds:0x10142f8,esi
 10094b0:	xor    eax,eax
 10094b2:	jmp    0x10094b7
 10094b4:	or     eax,0xffffffff
 10094b7:	pop    edi
 10094b8:	pop    esi
 10094b9:	pop    ebx
 10094ba:	leave  
 10094bb:	ret    
 10094bc:	int3   
 10094bd:	int3   
 10094be:	int3   
 10094bf:	int3   
 10094c0:	int3   
 10094c1:	mov    edi,edi
 10094c3:	push   ebp
 10094c4:	mov    ebp,esp
 10094c6:	sub    esp,0xc
 10094c9:	push   ebx
 10094ca:	push   esi
 10094cb:	call   DWORD PTR ds:0x1001160
 10094d1:	mov    ebx,eax
 10094d3:	xor    esi,esi
 10094d5:	cmp    ebx,esi
 10094d7:	jne    0x10094dd
 10094d9:	xor    eax,eax
 10094db:	jmp    0x1009554
 10094dd:	cmp    WORD PTR [ebx],si
 10094e0:	je     0x10094f2
 10094e2:	add    eax,0x2
 10094e5:	cmp    WORD PTR [eax],si
 10094e8:	jne    0x10094e2
 10094ea:	add    eax,0x2
 10094ed:	cmp    WORD PTR [eax],si
 10094f0:	jne    0x10094e2
 10094f2:	push   edi
 10094f3:	mov    edi,DWORD PTR ds:0x100115c
 10094f9:	push   esi
 10094fa:	push   esi
 10094fb:	push   esi
 10094fc:	sub    eax,ebx
 10094fe:	push   esi
 10094ff:	sar    eax,1
 1009501:	inc    eax
 1009502:	push   eax
 1009503:	push   ebx
 1009504:	push   esi
 1009505:	push   esi
 1009506:	mov    DWORD PTR [ebp-0xc],eax
 1009509:	call   edi
 100950b:	mov    DWORD PTR [ebp-0x8],eax
 100950e:	cmp    eax,esi
 1009510:	je     0x100954a
 1009512:	push   eax
 1009513:	call   0x100dc6f
 1009518:	pop    ecx
 1009519:	mov    DWORD PTR [ebp-0x4],eax
 100951c:	cmp    eax,esi
 100951e:	je     0x100954a
 1009520:	push   esi
 1009521:	push   esi
 1009522:	push   DWORD PTR [ebp-0x8]
 1009525:	push   eax
 1009526:	push   DWORD PTR [ebp-0xc]
 1009529:	push   ebx
 100952a:	push   esi
 100952b:	push   esi
 100952c:	call   edi
 100952e:	test   eax,eax
 1009530:	jne    0x100953e
 1009532:	push   DWORD PTR [ebp-0x4]
 1009535:	call   0x100af81
 100953a:	pop    ecx
 100953b:	mov    DWORD PTR [ebp-0x4],esi
 100953e:	push   ebx
 100953f:	call   DWORD PTR ds:0x1001158
 1009545:	mov    eax,DWORD PTR [ebp-0x4]
 1009548:	jmp    0x1009553
 100954a:	push   ebx
 100954b:	call   DWORD PTR ds:0x1001158
 1009551:	xor    eax,eax
 1009553:	pop    edi
 1009554:	pop    esi
 1009555:	pop    ebx
 1009556:	leave  
 1009557:	ret    
 1009558:	int3   
 1009559:	int3   
 100955a:	int3   
 100955b:	int3   
 100955c:	int3   
 100955d:	mov    edi,edi
 100955f:	push   ebp
 1009560:	mov    ebp,esp
 1009562:	sub    esp,0x4c
 1009565:	push   esi
 1009566:	lea    eax,[ebp-0x4c]
 1009569:	push   eax
 100956a:	call   DWORD PTR ds:0x1001134
 1009570:	push   0x40
 1009572:	push   0x20
 1009574:	pop    esi
 1009575:	push   esi
 1009576:	call   0x100dcb9
 100957b:	pop    ecx
 100957c:	pop    ecx
 100957d:	xor    ecx,ecx
 100957f:	cmp    eax,ecx
 1009581:	jne    0x100958b
 1009583:	or     eax,0xffffffff
 1009586:	jmp    0x100979a
 100958b:	lea    edx,[eax+0x800]
 1009591:	mov    ds:0x1015fe0,eax
 1009596:	mov    DWORD PTR ds:0x1015fc8,esi
 100959c:	cmp    eax,edx
 100959e:	jae    0x10095d6
 10095a0:	add    eax,0x5
 10095a3:	or     DWORD PTR [eax-0x5],0xffffffff
 10095a7:	mov    WORD PTR [eax-0x1],0xa00
 10095ad:	mov    DWORD PTR [eax+0x3],ecx
 10095b0:	mov    WORD PTR [eax+0x1f],0xa00
 10095b6:	mov    BYTE PTR [eax+0x21],0xa
 10095ba:	mov    DWORD PTR [eax+0x33],ecx
 10095bd:	mov    BYTE PTR [eax+0x2f],cl
 10095c0:	mov    esi,DWORD PTR ds:0x1015fe0
 10095c6:	add    eax,0x40
 10095c9:	lea    edx,[eax-0x5]
 10095cc:	add    esi,0x800
 10095d2:	cmp    edx,esi
 10095d4:	jb     0x10095a3
 10095d6:	push   ebx
 10095d7:	push   edi
 10095d8:	cmp    WORD PTR [ebp-0x1a],cx
 10095dc:	je     0x10096f0
 10095e2:	mov    eax,DWORD PTR [ebp-0x18]
 10095e5:	cmp    eax,ecx
 10095e7:	je     0x10096f0
 10095ed:	mov    ebx,DWORD PTR [eax]
 10095ef:	add    eax,0x4
 10095f2:	mov    DWORD PTR [ebp-0x4],eax
 10095f5:	add    eax,ebx
 10095f7:	mov    esi,0x800
 10095fc:	mov    DWORD PTR [ebp-0x8],eax
 10095ff:	cmp    ebx,esi
 1009601:	jl     0x1009605
 1009603:	mov    ebx,esi
 1009605:	cmp    DWORD PTR ds:0x1015fc8,ebx
 100960b:	jge    0x1009678
 100960d:	mov    edi,0x1015fe4
 1009612:	push   0x40
 1009614:	push   0x20
 1009616:	call   0x100dcb9
 100961b:	pop    ecx
 100961c:	pop    ecx
 100961d:	test   eax,eax
 100961f:	je     0x1009672
 1009621:	add    DWORD PTR ds:0x1015fc8,0x20
 1009628:	lea    ecx,[eax+0x800]
 100962e:	mov    DWORD PTR [edi],eax
 1009630:	cmp    eax,ecx
 1009632:	jae    0x1009665
 1009634:	add    eax,0x5
 1009637:	or     DWORD PTR [eax-0x5],0xffffffff
 100963b:	and    DWORD PTR [eax+0x3],0x0
 100963f:	and    BYTE PTR [eax+0x1f],0x80
 1009643:	and    DWORD PTR [eax+0x33],0x0
 1009647:	mov    WORD PTR [eax-0x1],0xa00
 100964d:	mov    WORD PTR [eax+0x20],0xa0a
 1009653:	mov    BYTE PTR [eax+0x2f],0x0
 1009657:	mov    ecx,DWORD PTR [edi]
 1009659:	add    eax,0x40
 100965c:	add    ecx,esi
 100965e:	lea    edx,[eax-0x5]
 1009661:	cmp    edx,ecx
 1009663:	jb     0x1009637
 1009665:	add    edi,0x4
 1009668:	cmp    DWORD PTR ds:0x1015fc8,ebx
 100966e:	jl     0x1009612
 1009670:	jmp    0x1009678
 1009672:	mov    ebx,DWORD PTR ds:0x1015fc8
 1009678:	xor    edi,edi
 100967a:	test   ebx,ebx
 100967c:	jle    0x10096f0
 100967e:	mov    eax,DWORD PTR [ebp-0x8]
 1009681:	mov    eax,DWORD PTR [eax]
 1009683:	cmp    eax,0xffffffff
 1009686:	je     0x10096e4
 1009688:	cmp    eax,0xfffffffe
 100968b:	je     0x10096e4
 100968d:	mov    ecx,DWORD PTR [ebp-0x4]
 1009690:	mov    cl,BYTE PTR [ecx]
 1009692:	test   cl,0x1
 1009695:	je     0x10096e4
 1009697:	test   cl,0x8
 100969a:	jne    0x10096a7
 100969c:	push   eax
 100969d:	call   DWORD PTR ds:0x100116c
 10096a3:	test   eax,eax
 10096a5:	je     0x10096e4
 10096a7:	mov    esi,edi
 10096a9:	and    esi,0x1f
 10096ac:	mov    eax,edi
 10096ae:	sar    eax,0x5
 10096b1:	shl    esi,0x6
 10096b4:	add    esi,DWORD PTR [eax*4+0x1015fe0]
 10096bb:	mov    eax,DWORD PTR [ebp-0x8]
 10096be:	mov    eax,DWORD PTR [eax]
 10096c0:	mov    DWORD PTR [esi],eax
 10096c2:	mov    eax,DWORD PTR [ebp-0x4]
 10096c5:	mov    al,BYTE PTR [eax]
 10096c7:	mov    BYTE PTR [esi+0x4],al
 10096ca:	push   0xfa0
 10096cf:	lea    eax,[esi+0xc]
 10096d2:	push   eax
 10096d3:	call   DWORD PTR ds:0x1001168
 10096d9:	test   eax,eax
 10096db:	je     0x100979d
 10096e1:	inc    DWORD PTR [esi+0x8]
 10096e4:	add    DWORD PTR [ebp-0x8],0x4
 10096e8:	inc    edi
 10096e9:	inc    DWORD PTR [ebp-0x4]
 10096ec:	cmp    edi,ebx
 10096ee:	jl     0x100967e
 10096f0:	xor    ebx,ebx
 10096f2:	mov    esi,ebx
 10096f4:	shl    esi,0x6
 10096f7:	add    esi,DWORD PTR ds:0x1015fe0
 10096fd:	mov    eax,DWORD PTR [esi]
 10096ff:	cmp    eax,0xffffffff
 1009702:	je     0x100970f
 1009704:	cmp    eax,0xfffffffe
 1009707:	je     0x100970f
 1009709:	or     BYTE PTR [esi+0x4],0x80
 100970d:	jmp    0x1009780
 100970f:	mov    BYTE PTR [esi+0x4],0x81
 1009713:	test   ebx,ebx
 1009715:	jne    0x100971c
 1009717:	push   0xfffffff6
 1009719:	pop    eax
 100971a:	jmp    0x1009726
 100971c:	lea    eax,[ebx-0x1]
 100971f:	neg    eax
 1009721:	sbb    eax,eax
 1009723:	add    eax,0xfffffff5
 1009726:	push   eax
 1009727:	call   DWORD PTR ds:0x1001150
 100972d:	mov    edi,eax
 100972f:	cmp    edi,0xffffffff
 1009732:	je     0x1009776
 1009734:	test   edi,edi
 1009736:	je     0x1009776
 1009738:	push   edi
 1009739:	call   DWORD PTR ds:0x100116c
 100973f:	test   eax,eax
 1009741:	je     0x1009776
 1009743:	and    eax,0xff
 1009748:	mov    DWORD PTR [esi],edi
 100974a:	cmp    eax,0x2
 100974d:	jne    0x1009755
 100974f:	or     BYTE PTR [esi+0x4],0x40
 1009753:	jmp    0x100975e
 1009755:	cmp    eax,0x3
 1009758:	jne    0x100975e
 100975a:	or     BYTE PTR [esi+0x4],0x8
 100975e:	push   0xfa0
 1009763:	lea    eax,[esi+0xc]
 1009766:	push   eax
 1009767:	call   DWORD PTR ds:0x1001168
 100976d:	test   eax,eax
 100976f:	je     0x100979d
 1009771:	inc    DWORD PTR [esi+0x8]
 1009774:	jmp    0x1009780
 1009776:	or     BYTE PTR [esi+0x4],0x40
 100977a:	mov    DWORD PTR [esi],0xfffffffe
 1009780:	inc    ebx
 1009781:	cmp    ebx,0x3
 1009784:	jl     0x10096f2
 100978a:	push   DWORD PTR ds:0x1015fc8
 1009790:	call   DWORD PTR ds:0x1001164
 1009796:	xor    eax,eax
 1009798:	pop    edi
 1009799:	pop    ebx
 100979a:	pop    esi
 100979b:	leave  
 100979c:	ret    
 100979d:	or     eax,0xffffffff
 10097a0:	jmp    0x1009798
 10097a2:	int3   
 10097a3:	int3   
 10097a4:	int3   
 10097a5:	int3   
 10097a6:	int3   
 10097a7:	mov    edi,edi
 10097a9:	push   esi
 10097aa:	mov    eax,0x1004370
 10097af:	mov    esi,0x1004370
 10097b4:	push   edi
 10097b5:	mov    edi,eax
 10097b7:	cmp    eax,esi
 10097b9:	jae    0x10097ca
 10097bb:	mov    eax,DWORD PTR [edi]
 10097bd:	test   eax,eax
 10097bf:	je     0x10097c3
 10097c1:	call   eax
 10097c3:	add    edi,0x4
 10097c6:	cmp    edi,esi
 10097c8:	jb     0x10097bb
 10097ca:	pop    edi
 10097cb:	pop    esi
 10097cc:	ret    
 10097cd:	int3   
 10097ce:	int3   
 10097cf:	int3   
 10097d0:	int3   
 10097d1:	int3   
 10097d2:	mov    edi,edi
 10097d4:	push   esi
 10097d5:	mov    eax,0x1004378
 10097da:	mov    esi,0x1004378
 10097df:	push   edi
 10097e0:	mov    edi,eax
 10097e2:	cmp    eax,esi
 10097e4:	jae    0x10097f5
 10097e6:	mov    eax,DWORD PTR [edi]
 10097e8:	test   eax,eax
 10097ea:	je     0x10097ee
 10097ec:	call   eax
 10097ee:	add    edi,0x4
 10097f1:	cmp    edi,esi
 10097f3:	jb     0x10097e6
 10097f5:	pop    edi
 10097f6:	pop    esi
 10097f7:	ret    
 10097f8:	int3   
 10097f9:	int3   
 10097fa:	int3   
 10097fb:	int3   
 10097fc:	int3   
 10097fd:	push   0x0
 10097ff:	call   DWORD PTR ds:0x1001174
 1009805:	ret    
 1009806:	int3   
 1009807:	int3   
 1009808:	int3   
 1009809:	int3   
 100980a:	int3   
 100980b:	call   DWORD PTR ds:0x1001178
 1009811:	ret    0x4
 1009814:	int3   
 1009815:	int3   
 1009816:	int3   
 1009817:	int3   
 1009818:	int3   
 1009819:	mov    edi,edi
 100981b:	push   esi
 100981c:	push   DWORD PTR ds:0x10130e4
 1009822:	call   DWORD PTR ds:0x100117c
 1009828:	mov    esi,eax
 100982a:	test   esi,esi
 100982c:	jne    0x1009849
 100982e:	push   DWORD PTR ds:0x1014a5c
 1009834:	call   DWORD PTR ds:0x1001148
 100983a:	mov    esi,eax
 100983c:	push   esi
 100983d:	push   DWORD PTR ds:0x10130e4
 1009843:	call   DWORD PTR ds:0x1001180
 1009849:	mov    eax,esi
 100984b:	pop    esi
 100984c:	ret    
 100984d:	int3   
 100984e:	int3   
 100984f:	int3   
 1009850:	int3   
 1009851:	int3   
 1009852:	mov    eax,ds:0x10130e0
 1009857:	cmp    eax,0xffffffff
 100985a:	je     0x1009872
 100985c:	push   eax
 100985d:	push   DWORD PTR ds:0x1014a64
 1009863:	call   DWORD PTR ds:0x1001148
 1009869:	call   eax
 100986b:	or     DWORD PTR ds:0x10130e0,0xffffffff
 1009872:	mov    eax,ds:0x10130e4
 1009877:	cmp    eax,0xffffffff
 100987a:	je     0x100988a
 100987c:	push   eax
 100987d:	call   DWORD PTR ds:0x1001184
 1009883:	or     DWORD PTR ds:0x10130e4,0xffffffff
 100988a:	jmp    0x100d334
 100988f:	int3   
 1009890:	int3   
 1009891:	int3   
 1009892:	int3   
 1009893:	int3   
 1009894:	push   0x8
 1009896:	push   0x1011b00
 100989b:	call   0x1009cd0
 10098a0:	push   0x1002cf0
 10098a5:	call   DWORD PTR ds:0x1001140
 10098ab:	mov    esi,DWORD PTR [ebp+0x8]
 10098ae:	mov    DWORD PTR [esi+0x5c],0x1002c50
 10098b5:	and    DWORD PTR [esi+0x8],0x0
 10098b9:	xor    edi,edi
 10098bb:	inc    edi
 10098bc:	mov    DWORD PTR [esi+0x14],edi
 10098bf:	mov    DWORD PTR [esi+0x70],edi
 10098c2:	mov    BYTE PTR [esi+0xc8],0x43
 10098c9:	mov    BYTE PTR [esi+0x14b],0x43
 10098d0:	mov    DWORD PTR [esi+0x68],0x1013508
 10098d7:	push   0xd
 10098d9:	call   0x100d473
 10098de:	pop    ecx
 10098df:	and    DWORD PTR [ebp-0x4],0x0
 10098e3:	push   DWORD PTR [esi+0x68]
 10098e6:	call   DWORD PTR ds:0x1001188
 10098ec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10098f3:	call   0x1009936
 10098f8:	push   0xc
 10098fa:	call   0x100d473
 10098ff:	pop    ecx
 1009900:	mov    DWORD PTR [ebp-0x4],edi
 1009903:	mov    eax,DWORD PTR [ebp+0xc]
 1009906:	mov    DWORD PTR [esi+0x6c],eax
 1009909:	test   eax,eax
 100990b:	jne    0x1009915
 100990d:	mov    eax,ds:0x1013c70
 1009912:	mov    DWORD PTR [esi+0x6c],eax
 1009915:	push   DWORD PTR [esi+0x6c]
 1009918:	call   0x100c9e2
 100991d:	pop    ecx
 100991e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009925:	call   0x100993f
 100992a:	call   0x1009d15
 100992f:	ret    
 1009930:	xor    edi,edi
 1009932:	inc    edi
 1009933:	mov    esi,DWORD PTR [ebp+0x8]
 1009936:	push   0xd
 1009938:	call   0x100d390
 100993d:	pop    ecx
 100993e:	ret    
 100993f:	push   0xc
 1009941:	call   0x100d390
 1009946:	pop    ecx
 1009947:	ret    
 1009948:	int3   
 1009949:	int3   
 100994a:	int3   
 100994b:	int3   
 100994c:	int3   
 100994d:	mov    edi,edi
 100994f:	push   esi
 1009950:	push   edi
 1009951:	call   DWORD PTR ds:0x1001124
 1009957:	push   DWORD PTR ds:0x10130e0
 100995d:	mov    edi,eax
 100995f:	call   0x1009819
 1009964:	call   eax
 1009966:	mov    esi,eax
 1009968:	test   esi,esi
 100996a:	jne    0x10099ba
 100996c:	push   0x214
 1009971:	push   0x1
 1009973:	call   0x100dcb9
 1009978:	mov    esi,eax
 100997a:	pop    ecx
 100997b:	pop    ecx
 100997c:	test   esi,esi
 100997e:	je     0x10099ba
 1009980:	push   esi
 1009981:	push   DWORD PTR ds:0x10130e0
 1009987:	push   DWORD PTR ds:0x1014a60
 100998d:	call   DWORD PTR ds:0x1001148
 1009993:	call   eax
 1009995:	test   eax,eax
 1009997:	je     0x10099b1
 1009999:	push   0x0
 100999b:	push   esi
 100999c:	call   0x1009894
 10099a1:	pop    ecx
 10099a2:	pop    ecx
 10099a3:	call   DWORD PTR ds:0x1001190
 10099a9:	or     DWORD PTR [esi+0x4],0xffffffff
 10099ad:	mov    DWORD PTR [esi],eax
 10099af:	jmp    0x10099ba
 10099b1:	push   esi
 10099b2:	call   0x100af81
 10099b7:	pop    ecx
 10099b8:	xor    esi,esi
 10099ba:	push   edi
 10099bb:	call   DWORD PTR ds:0x100118c
 10099c1:	pop    edi
 10099c2:	mov    eax,esi
 10099c4:	pop    esi
 10099c5:	ret    
 10099c6:	int3   
 10099c7:	int3   
 10099c8:	int3   
 10099c9:	int3   
 10099ca:	int3   
 10099cb:	mov    edi,edi
 10099cd:	push   esi
 10099ce:	call   0x100994d
 10099d3:	mov    esi,eax
 10099d5:	test   esi,esi
 10099d7:	jne    0x10099e1
 10099d9:	push   0x10
 10099db:	call   0x1008d8e
 10099e0:	pop    ecx
 10099e1:	mov    eax,esi
 10099e3:	pop    esi
 10099e4:	ret    
 10099e5:	int3   
 10099e6:	int3   
 10099e7:	int3   
 10099e8:	int3   
 10099e9:	int3   
 10099ea:	push   0x8
 10099ec:	push   0x1011b28
 10099f1:	call   0x1009cd0
 10099f6:	mov    esi,DWORD PTR [ebp+0x8]
 10099f9:	test   esi,esi
 10099fb:	je     0x1009af9
 1009a01:	mov    eax,DWORD PTR [esi+0x24]
 1009a04:	test   eax,eax
 1009a06:	je     0x1009a0f
 1009a08:	push   eax
 1009a09:	call   0x100af81
 1009a0e:	pop    ecx
 1009a0f:	mov    eax,DWORD PTR [esi+0x2c]
 1009a12:	test   eax,eax
 1009a14:	je     0x1009a1d
 1009a16:	push   eax
 1009a17:	call   0x100af81
 1009a1c:	pop    ecx
 1009a1d:	mov    eax,DWORD PTR [esi+0x34]
 1009a20:	test   eax,eax
 1009a22:	je     0x1009a2b
 1009a24:	push   eax
 1009a25:	call   0x100af81
 1009a2a:	pop    ecx
 1009a2b:	mov    eax,DWORD PTR [esi+0x3c]
 1009a2e:	test   eax,eax
 1009a30:	je     0x1009a39
 1009a32:	push   eax
 1009a33:	call   0x100af81
 1009a38:	pop    ecx
 1009a39:	mov    eax,DWORD PTR [esi+0x40]
 1009a3c:	test   eax,eax
 1009a3e:	je     0x1009a47
 1009a40:	push   eax
 1009a41:	call   0x100af81
 1009a46:	pop    ecx
 1009a47:	mov    eax,DWORD PTR [esi+0x44]
 1009a4a:	test   eax,eax
 1009a4c:	je     0x1009a55
 1009a4e:	push   eax
 1009a4f:	call   0x100af81
 1009a54:	pop    ecx
 1009a55:	mov    eax,DWORD PTR [esi+0x48]
 1009a58:	test   eax,eax
 1009a5a:	je     0x1009a63
 1009a5c:	push   eax
 1009a5d:	call   0x100af81
 1009a62:	pop    ecx
 1009a63:	mov    eax,DWORD PTR [esi+0x5c]
 1009a66:	cmp    eax,0x1002c50
 1009a6b:	je     0x1009a74
 1009a6d:	push   eax
 1009a6e:	call   0x100af81
 1009a73:	pop    ecx
 1009a74:	push   0xd
 1009a76:	call   0x100d473
 1009a7b:	pop    ecx
 1009a7c:	and    DWORD PTR [ebp-0x4],0x0
 1009a80:	mov    edi,DWORD PTR [esi+0x68]
 1009a83:	test   edi,edi
 1009a85:	je     0x1009aa1
 1009a87:	push   edi
 1009a88:	call   DWORD PTR ds:0x1001194
 1009a8e:	test   eax,eax
 1009a90:	jne    0x1009aa1
 1009a92:	cmp    edi,0x1013508
 1009a98:	je     0x1009aa1
 1009a9a:	push   edi
 1009a9b:	call   0x100af81
 1009aa0:	pop    ecx
 1009aa1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009aa8:	call   0x1009b04
 1009aad:	push   0xc
 1009aaf:	call   0x100d473
 1009ab4:	pop    ecx
 1009ab5:	mov    DWORD PTR [ebp-0x4],0x1
 1009abc:	mov    edi,DWORD PTR [esi+0x6c]
 1009abf:	test   edi,edi
 1009ac1:	je     0x1009ae6
 1009ac3:	push   edi
 1009ac4:	call   0x100ca76
 1009ac9:	pop    ecx
 1009aca:	cmp    edi,DWORD PTR ds:0x1013c70
 1009ad0:	je     0x1009ae6
 1009ad2:	cmp    edi,0x1013b98
 1009ad8:	je     0x1009ae6
 1009ada:	cmp    DWORD PTR [edi],0x0
 1009add:	jne    0x1009ae6
 1009adf:	push   edi
 1009ae0:	call   0x100cb14
 1009ae5:	pop    ecx
 1009ae6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009aed:	call   0x1009b10
 1009af2:	push   esi
 1009af3:	call   0x100af81
 1009af8:	pop    ecx
 1009af9:	call   0x1009d15
 1009afe:	ret    0x4
 1009b01:	mov    esi,DWORD PTR [ebp+0x8]
 1009b04:	push   0xd
 1009b06:	call   0x100d390
 1009b0b:	pop    ecx
 1009b0c:	ret    
 1009b0d:	mov    esi,DWORD PTR [ebp+0x8]
 1009b10:	push   0xc
 1009b12:	call   0x100d390
 1009b17:	pop    ecx
 1009b18:	ret    
 1009b19:	int3   
 1009b1a:	int3   
 1009b1b:	int3   
 1009b1c:	int3   
 1009b1d:	int3   
 1009b1e:	mov    edi,edi
 1009b20:	push   edi
 1009b21:	push   0x1002cf0
 1009b26:	call   DWORD PTR ds:0x1001140
 1009b2c:	mov    edi,eax
 1009b2e:	test   edi,edi
 1009b30:	jne    0x1009b3b
 1009b32:	call   0x1009852
 1009b37:	xor    eax,eax
 1009b39:	pop    edi
 1009b3a:	ret    
 1009b3b:	push   esi
 1009b3c:	mov    esi,DWORD PTR ds:0x100109c
 1009b42:	push   0x1002d2c
 1009b47:	push   edi
 1009b48:	call   esi
 1009b4a:	push   0x1002d20
 1009b4f:	push   edi
 1009b50:	mov    ds:0x1014a58,eax
 1009b55:	call   esi
 1009b57:	push   0x1002d14
 1009b5c:	push   edi
 1009b5d:	mov    ds:0x1014a5c,eax
 1009b62:	call   esi
 1009b64:	push   0x1002d0c
 1009b69:	push   edi
 1009b6a:	mov    ds:0x1014a60,eax
 1009b6f:	call   esi
 1009b71:	cmp    DWORD PTR ds:0x1014a58,0x0
 1009b78:	mov    esi,DWORD PTR ds:0x1001180
 1009b7e:	mov    ds:0x1014a64,eax
 1009b83:	je     0x1009b9b
 1009b85:	cmp    DWORD PTR ds:0x1014a5c,0x0
 1009b8c:	je     0x1009b9b
 1009b8e:	cmp    DWORD PTR ds:0x1014a60,0x0
 1009b95:	je     0x1009b9b
 1009b97:	test   eax,eax
 1009b99:	jne    0x1009bbf
 1009b9b:	mov    eax,ds:0x100117c
 1009ba0:	mov    ds:0x1014a5c,eax
 1009ba5:	mov    eax,ds:0x1001184
 1009baa:	mov    DWORD PTR ds:0x1014a58,0x100980b
 1009bb4:	mov    DWORD PTR ds:0x1014a60,esi
 1009bba:	mov    ds:0x1014a64,eax
 1009bbf:	call   DWORD PTR ds:0x1001178
 1009bc5:	mov    ds:0x10130e4,eax
 1009bca:	cmp    eax,0xffffffff
 1009bcd:	je     0x1009c94
 1009bd3:	push   DWORD PTR ds:0x1014a5c
 1009bd9:	push   eax
 1009bda:	call   esi
 1009bdc:	test   eax,eax
 1009bde:	je     0x1009c94
 1009be4:	call   0x1008aee
 1009be9:	push   DWORD PTR ds:0x1014a58
 1009bef:	mov    esi,DWORD PTR ds:0x1001174
 1009bf5:	call   esi
 1009bf7:	push   DWORD PTR ds:0x1014a5c
 1009bfd:	mov    ds:0x1014a58,eax
 1009c02:	call   esi
 1009c04:	push   DWORD PTR ds:0x1014a60
 1009c0a:	mov    ds:0x1014a5c,eax
 1009c0f:	call   esi
 1009c11:	push   DWORD PTR ds:0x1014a64
 1009c17:	mov    ds:0x1014a60,eax
 1009c1c:	call   esi
 1009c1e:	mov    ds:0x1014a64,eax
 1009c23:	call   0x100d2e5
 1009c28:	test   eax,eax
 1009c2a:	je     0x1009c8f
 1009c2c:	mov    edi,DWORD PTR ds:0x1001148
 1009c32:	push   0x10099ea
 1009c37:	push   DWORD PTR ds:0x1014a58
 1009c3d:	call   edi
 1009c3f:	call   eax
 1009c41:	mov    ds:0x10130e0,eax
 1009c46:	cmp    eax,0xffffffff
 1009c49:	je     0x1009c8f
 1009c4b:	push   0x214
 1009c50:	push   0x1
 1009c52:	call   0x100dcb9
 1009c57:	mov    esi,eax
 1009c59:	pop    ecx
 1009c5a:	pop    ecx
 1009c5b:	test   esi,esi
 1009c5d:	je     0x1009c8f
 1009c5f:	push   esi
 1009c60:	push   DWORD PTR ds:0x10130e0
 1009c66:	push   DWORD PTR ds:0x1014a60
 1009c6c:	call   edi
 1009c6e:	call   eax
 1009c70:	test   eax,eax
 1009c72:	je     0x1009c8f
 1009c74:	push   0x0
 1009c76:	push   esi
 1009c77:	call   0x1009894
 1009c7c:	pop    ecx
 1009c7d:	pop    ecx
 1009c7e:	call   DWORD PTR ds:0x1001190
 1009c84:	or     DWORD PTR [esi+0x4],0xffffffff
 1009c88:	mov    DWORD PTR [esi],eax
 1009c8a:	xor    eax,eax
 1009c8c:	inc    eax
 1009c8d:	jmp    0x1009c96
 1009c8f:	call   0x1009852
 1009c94:	xor    eax,eax
 1009c96:	pop    esi
 1009c97:	pop    edi
 1009c98:	ret    
 1009c99:	int3   
 1009c9a:	int3   
 1009c9b:	int3   
 1009c9c:	int3   
 1009c9d:	int3   
 1009c9e:	push   0x0
 1009ca0:	push   0x1000
 1009ca5:	push   0x0
 1009ca7:	call   DWORD PTR ds:0x1001198
 1009cad:	xor    ecx,ecx
 1009caf:	test   eax,eax
 1009cb1:	setne  cl
 1009cb4:	mov    ds:0x1014a68,eax
 1009cb9:	mov    eax,ecx
 1009cbb:	ret    
 1009cbc:	int3   
 1009cbd:	int3   
 1009cbe:	int3   
 1009cbf:	int3   
 1009cc0:	int3   
 1009cc1:	int3   
 1009cc2:	int3   
 1009cc3:	int3   
 1009cc4:	int3   
 1009cc5:	int3   
 1009cc6:	int3   
 1009cc7:	int3   
 1009cc8:	int3   
 1009cc9:	int3   
 1009cca:	int3   
 1009ccb:	int3   
 1009ccc:	int3   
 1009ccd:	int3   
 1009cce:	int3   
 1009ccf:	int3   
 1009cd0:	push   0x1009d30
 1009cd5:	push   DWORD PTR fs:0x0
 1009cdc:	mov    eax,DWORD PTR [esp+0x10]
 1009ce0:	mov    DWORD PTR [esp+0x10],ebp
 1009ce4:	lea    ebp,[esp+0x10]
 1009ce8:	sub    esp,eax
 1009cea:	push   ebx
 1009ceb:	push   esi
 1009cec:	push   edi
 1009ced:	mov    eax,ds:0x1013054
 1009cf2:	xor    DWORD PTR [ebp-0x4],eax
 1009cf5:	xor    eax,ebp
 1009cf7:	push   eax
 1009cf8:	mov    DWORD PTR [ebp-0x18],esp
 1009cfb:	push   DWORD PTR [ebp-0x8]
 1009cfe:	mov    eax,DWORD PTR [ebp-0x4]
 1009d01:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009d08:	mov    DWORD PTR [ebp-0x8],eax
 1009d0b:	lea    eax,[ebp-0x10]
 1009d0e:	mov    fs:0x0,eax
 1009d14:	ret    
 1009d15:	mov    ecx,DWORD PTR [ebp-0x10]
 1009d18:	mov    DWORD PTR fs:0x0,ecx
 1009d1f:	pop    ecx
 1009d20:	pop    edi
 1009d21:	pop    edi
 1009d22:	pop    esi
 1009d23:	pop    ebx
 1009d24:	mov    esp,ebp
 1009d26:	pop    ebp
 1009d27:	push   ecx
 1009d28:	ret    
 1009d29:	int3   
 1009d2a:	int3   
 1009d2b:	int3   
 1009d2c:	int3   
 1009d2d:	int3   
 1009d2e:	int3   
 1009d2f:	int3   
 1009d30:	mov    edi,edi
 1009d32:	push   ebp
 1009d33:	mov    ebp,esp
 1009d35:	sub    esp,0x18
 1009d38:	push   ebx
 1009d39:	mov    ebx,DWORD PTR [ebp+0xc]
 1009d3c:	push   esi
 1009d3d:	mov    esi,DWORD PTR [ebx+0x8]
 1009d40:	xor    esi,DWORD PTR ds:0x1013054
 1009d46:	push   edi
 1009d47:	mov    eax,DWORD PTR [esi]
 1009d49:	mov    BYTE PTR [ebp-0x1],0x0
 1009d4d:	mov    DWORD PTR [ebp-0xc],0x1
 1009d54:	lea    edi,[ebx+0x10]
 1009d57:	cmp    eax,0xfffffffe
 1009d5a:	je     0x1009d69
 1009d5c:	mov    ecx,DWORD PTR [esi+0x4]
 1009d5f:	add    ecx,edi
 1009d61:	xor    ecx,DWORD PTR [eax+edi*1]
 1009d64:	call   0x1008355
 1009d69:	mov    ecx,DWORD PTR [esi+0xc]
 1009d6c:	mov    eax,DWORD PTR [esi+0x8]
 1009d6f:	add    ecx,edi
 1009d71:	xor    ecx,DWORD PTR [eax+edi*1]
 1009d74:	call   0x1008355
 1009d79:	mov    eax,DWORD PTR [ebp+0x8]
 1009d7c:	test   BYTE PTR [eax+0x4],0x66
 1009d80:	jne    0x1009e9f
 1009d86:	mov    ecx,DWORD PTR [ebp+0x10]
 1009d89:	lea    edx,[ebp-0x18]
 1009d8c:	mov    DWORD PTR [ebx-0x4],edx
 1009d8f:	mov    ebx,DWORD PTR [ebx+0xc]
 1009d92:	mov    DWORD PTR [ebp-0x18],eax
 1009d95:	mov    DWORD PTR [ebp-0x14],ecx
 1009d98:	cmp    ebx,0xfffffffe
 1009d9b:	je     0x1009dfc
 1009d9d:	lea    ecx,[ecx+0x0]
 1009da0:	lea    eax,[ebx+ebx*2]
 1009da3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
 1009da7:	lea    eax,[esi+eax*4+0x10]
 1009dab:	mov    DWORD PTR [ebp-0x10],eax
 1009dae:	mov    eax,DWORD PTR [eax]
 1009db0:	mov    DWORD PTR [ebp-0x8],eax
 1009db3:	test   ecx,ecx
 1009db5:	je     0x1009dcb
 1009db7:	mov    edx,edi
 1009db9:	call   0x100bca2
 1009dbe:	mov    BYTE PTR [ebp-0x1],0x1
 1009dc2:	test   eax,eax
 1009dc4:	js     0x1009e06
 1009dc6:	jg     0x1009e0f
 1009dc8:	mov    eax,DWORD PTR [ebp-0x8]
 1009dcb:	mov    ebx,eax
 1009dcd:	cmp    eax,0xfffffffe
 1009dd0:	jne    0x1009da0
 1009dd2:	cmp    BYTE PTR [ebp-0x1],0x0
 1009dd6:	je     0x1009dfc
 1009dd8:	mov    eax,DWORD PTR [esi]
 1009dda:	cmp    eax,0xfffffffe
 1009ddd:	je     0x1009dec
 1009ddf:	mov    ecx,DWORD PTR [esi+0x4]
 1009de2:	add    ecx,edi
 1009de4:	xor    ecx,DWORD PTR [eax+edi*1]
 1009de7:	call   0x1008355
 1009dec:	mov    ecx,DWORD PTR [esi+0xc]
 1009def:	mov    edx,DWORD PTR [esi+0x8]
 1009df2:	add    ecx,edi
 1009df4:	xor    ecx,DWORD PTR [edx+edi*1]
 1009df7:	call   0x1008355
 1009dfc:	mov    eax,DWORD PTR [ebp-0xc]
 1009dff:	pop    edi
 1009e00:	pop    esi
 1009e01:	pop    ebx
 1009e02:	mov    esp,ebp
 1009e04:	pop    ebp
 1009e05:	ret    
 1009e06:	mov    DWORD PTR [ebp-0xc],0x0
 1009e0d:	jmp    0x1009dd8
 1009e0f:	mov    ecx,DWORD PTR [ebp+0x8]
 1009e12:	cmp    DWORD PTR [ecx],0xe06d7363
 1009e18:	jne    0x1009e43
 1009e1a:	cmp    DWORD PTR ds:0x1015fc4,0x0
 1009e21:	je     0x1009e43
 1009e23:	push   0x1015fc4
 1009e28:	call   0x100d7b0
 1009e2d:	add    esp,0x4
 1009e30:	test   eax,eax
 1009e32:	je     0x1009e43
 1009e34:	mov    edx,DWORD PTR [ebp+0x8]
 1009e37:	push   0x1
 1009e39:	push   edx
 1009e3a:	call   DWORD PTR ds:0x1015fc4
 1009e40:	add    esp,0x8
 1009e43:	mov    ecx,DWORD PTR [ebp+0xc]
 1009e46:	mov    edx,DWORD PTR [ebp+0x8]
 1009e49:	call   0x100bcd2
 1009e4e:	mov    eax,DWORD PTR [ebp+0xc]
 1009e51:	cmp    DWORD PTR [eax+0xc],ebx
 1009e54:	je     0x1009e68
 1009e56:	push   0x1013054
 1009e5b:	push   edi
 1009e5c:	mov    edx,ebx
 1009e5e:	mov    ecx,eax
 1009e60:	call   0x100bceb
 1009e65:	mov    eax,DWORD PTR [ebp+0xc]
 1009e68:	mov    ecx,DWORD PTR [ebp-0x8]
 1009e6b:	mov    DWORD PTR [eax+0xc],ecx
 1009e6e:	mov    eax,DWORD PTR [esi]
 1009e70:	cmp    eax,0xfffffffe
 1009e73:	je     0x1009e82
 1009e75:	mov    ecx,DWORD PTR [esi+0x4]
 1009e78:	add    ecx,edi
 1009e7a:	xor    ecx,DWORD PTR [eax+edi*1]
 1009e7d:	call   0x1008355
 1009e82:	mov    ecx,DWORD PTR [esi+0xc]
 1009e85:	mov    edx,DWORD PTR [esi+0x8]
 1009e88:	add    ecx,edi
 1009e8a:	xor    ecx,DWORD PTR [edx+edi*1]
 1009e8d:	call   0x1008355
 1009e92:	mov    eax,DWORD PTR [ebp-0x10]
 1009e95:	mov    ecx,DWORD PTR [eax+0x8]
 1009e98:	mov    edx,edi
 1009e9a:	call   0x100bcb9
 1009e9f:	mov    edx,0xfffffffe
 1009ea4:	cmp    DWORD PTR [ebx+0xc],edx
 1009ea7:	je     0x1009dfc
 1009ead:	push   0x1013054
 1009eb2:	push   edi
 1009eb3:	mov    ecx,ebx
 1009eb5:	call   0x100bceb
 1009eba:	jmp    0x1009dd8
 1009ebf:	int3   
 1009ec0:	int3   
 1009ec1:	int3   
 1009ec2:	int3   
 1009ec3:	int3   
 1009ec4:	mov    edi,edi
 1009ec6:	push   ebp
 1009ec7:	mov    ebp,esp
 1009ec9:	sub    esp,0x10
 1009ecc:	mov    eax,ds:0x1013054
 1009ed1:	and    DWORD PTR [ebp-0x8],0x0
 1009ed5:	and    DWORD PTR [ebp-0x4],0x0
 1009ed9:	push   ebx
 1009eda:	push   edi
 1009edb:	mov    edi,0xbb40e64e
 1009ee0:	mov    ebx,0xffff0000
 1009ee5:	cmp    eax,edi
 1009ee7:	je     0x1009ef6
 1009ee9:	test   ebx,eax
 1009eeb:	je     0x1009ef6
 1009eed:	not    eax
 1009eef:	mov    ds:0x1013058,eax
 1009ef4:	jmp    0x1009f5b
 1009ef6:	push   esi
 1009ef7:	lea    eax,[ebp-0x8]
 1009efa:	push   eax
 1009efb:	call   DWORD PTR ds:0x10011a8
 1009f01:	mov    esi,DWORD PTR [ebp-0x4]
 1009f04:	xor    esi,DWORD PTR [ebp-0x8]
 1009f07:	call   DWORD PTR ds:0x10011a4
 1009f0d:	xor    esi,eax
 1009f0f:	call   DWORD PTR ds:0x1001190
 1009f15:	xor    esi,eax
 1009f17:	call   DWORD PTR ds:0x10011a0
 1009f1d:	xor    esi,eax
 1009f1f:	lea    eax,[ebp-0x10]
 1009f22:	push   eax
 1009f23:	call   DWORD PTR ds:0x100119c
 1009f29:	mov    eax,DWORD PTR [ebp-0xc]
 1009f2c:	xor    eax,DWORD PTR [ebp-0x10]
 1009f2f:	xor    esi,eax
 1009f31:	cmp    esi,edi
 1009f33:	jne    0x1009f3c
 1009f35:	mov    esi,0xbb40e64f
 1009f3a:	jmp    0x1009f4c
 1009f3c:	test   ebx,esi
 1009f3e:	jne    0x1009f4c
 1009f40:	mov    eax,esi
 1009f42:	or     eax,0x4711
 1009f47:	shl    eax,0x10
 1009f4a:	or     esi,eax
 1009f4c:	mov    DWORD PTR ds:0x1013054,esi
 1009f52:	not    esi
 1009f54:	mov    DWORD PTR ds:0x1013058,esi
 1009f5a:	pop    esi
 1009f5b:	pop    edi
 1009f5c:	pop    ebx
 1009f5d:	leave  
 1009f5e:	ret    
 1009f5f:	int3   
 1009f60:	int3   
 1009f61:	int3   
 1009f62:	int3   
 1009f63:	int3   
 1009f64:	mov    edi,edi
 1009f66:	push   ebp
 1009f67:	mov    ebp,esp
 1009f69:	push   ecx
 1009f6a:	push   esi
 1009f6b:	mov    esi,DWORD PTR [ebp+0xc]
 1009f6e:	push   esi
 1009f6f:	call   0x100b12a
 1009f74:	mov    DWORD PTR [ebp+0xc],eax
 1009f77:	mov    eax,DWORD PTR [esi+0xc]
 1009f7a:	pop    ecx
 1009f7b:	test   al,0x82
 1009f7d:	jne    0x1009f96
 1009f7f:	call   0x100af29
 1009f84:	mov    DWORD PTR [eax],0x9
 1009f8a:	or     DWORD PTR [esi+0xc],0x20
 1009f8e:	or     eax,0xffffffff
 1009f91:	jmp    0x100a0c5
 1009f96:	test   al,0x40
 1009f98:	je     0x1009fa7
 1009f9a:	call   0x100af29
 1009f9f:	mov    DWORD PTR [eax],0x22
 1009fa5:	jmp    0x1009f8a
 1009fa7:	push   ebx
 1009fa8:	xor    ebx,ebx
 1009faa:	test   al,0x1
 1009fac:	je     0x1009fc4
 1009fae:	mov    DWORD PTR [esi+0x4],ebx
 1009fb1:	test   al,0x10
 1009fb3:	je     0x100a040
 1009fb9:	mov    ecx,DWORD PTR [esi+0x8]
 1009fbc:	and    eax,0xfffffffe
 1009fbf:	mov    DWORD PTR [esi],ecx
 1009fc1:	mov    DWORD PTR [esi+0xc],eax
 1009fc4:	mov    eax,DWORD PTR [esi+0xc]
 1009fc7:	and    eax,0xffffffef
 1009fca:	or     eax,0x2
 1009fcd:	mov    DWORD PTR [esi+0xc],eax
 1009fd0:	mov    DWORD PTR [esi+0x4],ebx
 1009fd3:	mov    DWORD PTR [ebp-0x4],ebx
 1009fd6:	test   eax,0x10c
 1009fdb:	jne    0x100a009
 1009fdd:	call   0x100b332
 1009fe2:	add    eax,0x20
 1009fe5:	cmp    esi,eax
 1009fe7:	je     0x1009ff5
 1009fe9:	call   0x100b332
 1009fee:	add    eax,0x40
 1009ff1:	cmp    esi,eax
 1009ff3:	jne    0x100a002
 1009ff5:	push   DWORD PTR [ebp+0xc]
 1009ff8:	call   0x100e6ff
 1009ffd:	pop    ecx
 1009ffe:	test   eax,eax
 100a000:	jne    0x100a009
 100a002:	push   esi
 100a003:	call   0x100e6b1
 100a008:	pop    ecx
 100a009:	test   DWORD PTR [esi+0xc],0x108
 100a010:	push   edi
 100a011:	je     0x100a097
 100a017:	mov    eax,DWORD PTR [esi+0x8]
 100a01a:	mov    edi,DWORD PTR [esi]
 100a01c:	lea    ecx,[eax+0x1]
 100a01f:	mov    DWORD PTR [esi],ecx
 100a021:	mov    ecx,DWORD PTR [esi+0x18]
 100a024:	sub    edi,eax
 100a026:	dec    ecx
 100a027:	mov    DWORD PTR [esi+0x4],ecx
 100a02a:	cmp    edi,ebx
 100a02c:	jle    0x100a04b
 100a02e:	push   edi
 100a02f:	push   eax
 100a030:	push   DWORD PTR [ebp+0xc]
 100a033:	call   0x100e5d8
 100a038:	add    esp,0xc
 100a03b:	mov    DWORD PTR [ebp-0x4],eax
 100a03e:	jmp    0x100a08d
 100a040:	or     eax,0x20
 100a043:	mov    DWORD PTR [esi+0xc],eax
 100a046:	or     eax,0xffffffff
 100a049:	jmp    0x100a0c4
 100a04b:	mov    ecx,DWORD PTR [ebp+0xc]
 100a04e:	cmp    ecx,0xffffffff
 100a051:	je     0x100a06e
 100a053:	cmp    ecx,0xfffffffe
 100a056:	je     0x100a06e
 100a058:	mov    eax,ecx
 100a05a:	and    eax,0x1f
 100a05d:	mov    edx,ecx
 100a05f:	sar    edx,0x5
 100a062:	shl    eax,0x6
 100a065:	add    eax,DWORD PTR [edx*4+0x1015fe0]
 100a06c:	jmp    0x100a073
 100a06e:	mov    eax,0x10130a0
 100a073:	test   BYTE PTR [eax+0x4],0x20
 100a077:	je     0x100a08d
 100a079:	push   0x2
 100a07b:	push   ebx
 100a07c:	push   ebx
 100a07d:	push   ecx
 100a07e:	call   0x100dde7
 100a083:	and    eax,edx
 100a085:	add    esp,0x10
 100a088:	cmp    eax,0xffffffff
 100a08b:	je     0x100a0b2
 100a08d:	mov    eax,DWORD PTR [esi+0x8]
 100a090:	mov    cl,BYTE PTR [ebp+0x8]
 100a093:	mov    BYTE PTR [eax],cl
 100a095:	jmp    0x100a0ad
 100a097:	xor    edi,edi
 100a099:	inc    edi
 100a09a:	push   edi
 100a09b:	lea    eax,[ebp+0x8]
 100a09e:	push   eax
 100a09f:	push   DWORD PTR [ebp+0xc]
 100a0a2:	call   0x100e5d8
 100a0a7:	add    esp,0xc
 100a0aa:	mov    DWORD PTR [ebp-0x4],eax
 100a0ad:	cmp    DWORD PTR [ebp-0x4],edi
 100a0b0:	je     0x100a0bb
 100a0b2:	or     DWORD PTR [esi+0xc],0x20
 100a0b6:	or     eax,0xffffffff
 100a0b9:	jmp    0x100a0c3
 100a0bb:	mov    eax,DWORD PTR [ebp+0x8]
 100a0be:	and    eax,0xff
 100a0c3:	pop    edi
 100a0c4:	pop    ebx
 100a0c5:	pop    esi
 100a0c6:	leave  
 100a0c7:	ret    
 100a0c8:	int3   
 100a0c9:	int3   
 100a0ca:	int3   
 100a0cb:	int3   
 100a0cc:	int3   
 100a0cd:	test   BYTE PTR [ecx+0xc],0x40
 100a0d1:	je     0x100a0d9
 100a0d3:	cmp    DWORD PTR [ecx+0x8],0x0
 100a0d7:	je     0x100a0fd
 100a0d9:	dec    DWORD PTR [ecx+0x4]
 100a0dc:	js     0x100a0e9
 100a0de:	mov    edx,DWORD PTR [ecx]
 100a0e0:	mov    BYTE PTR [edx],al
 100a0e2:	inc    DWORD PTR [ecx]
 100a0e4:	movzx  eax,al
 100a0e7:	jmp    0x100a0f5
 100a0e9:	movsx  eax,al
 100a0ec:	push   ecx
 100a0ed:	push   eax
 100a0ee:	call   0x1009f64
 100a0f3:	pop    ecx
 100a0f4:	pop    ecx
 100a0f5:	cmp    eax,0xffffffff
 100a0f8:	jne    0x100a0fd
 100a0fa:	or     DWORD PTR [esi],eax
 100a0fc:	ret    
 100a0fd:	inc    DWORD PTR [esi]
 100a0ff:	ret    
 100a100:	int3   
 100a101:	int3   
 100a102:	int3   
 100a103:	int3   
 100a104:	int3   
 100a105:	mov    edi,edi
 100a107:	push   ebp
 100a108:	mov    ebp,esp
 100a10a:	push   ecx
 100a10b:	push   ebx
 100a10c:	push   esi
 100a10d:	mov    esi,eax
 100a10f:	mov    ebx,ecx
 100a111:	call   0x100af29
 100a116:	test   BYTE PTR [edi+0xc],0x40
 100a11a:	mov    eax,DWORD PTR [eax]
 100a11c:	mov    DWORD PTR [ebp-0x4],eax
 100a11f:	je     0x100a12b
 100a121:	cmp    DWORD PTR [edi+0x8],0x0
 100a125:	jne    0x100a12b
 100a127:	add    DWORD PTR [esi],ebx
 100a129:	jmp    0x100a175
 100a12b:	call   0x100af29
 100a130:	and    DWORD PTR [eax],0x0
 100a133:	jmp    0x100a15d
 100a135:	mov    eax,DWORD PTR [ebp+0x8]
 100a138:	mov    al,BYTE PTR [eax]
 100a13a:	mov    ecx,edi
 100a13c:	dec    ebx
 100a13d:	call   0x100a0cd
 100a142:	inc    DWORD PTR [ebp+0x8]
 100a145:	cmp    DWORD PTR [esi],0xffffffff
 100a148:	jne    0x100a15d
 100a14a:	call   0x100af29
 100a14f:	cmp    DWORD PTR [eax],0x2a
 100a152:	jne    0x100a161
 100a154:	mov    ecx,edi
 100a156:	mov    al,0x3f
 100a158:	call   0x100a0cd
 100a15d:	test   ebx,ebx
 100a15f:	jg     0x100a135
 100a161:	call   0x100af29
 100a166:	cmp    DWORD PTR [eax],0x0
 100a169:	jne    0x100a175
 100a16b:	call   0x100af29
 100a170:	mov    ecx,DWORD PTR [ebp-0x4]
 100a173:	mov    DWORD PTR [eax],ecx
 100a175:	pop    esi
 100a176:	pop    ebx
 100a177:	leave  
 100a178:	ret    
 100a179:	int3   
 100a17a:	int3   
 100a17b:	int3   
 100a17c:	int3   
 100a17d:	int3   
 100a17e:	mov    edi,edi
 100a180:	push   ebp
 100a181:	mov    ebp,esp
 100a183:	sub    esp,0x278
 100a189:	mov    eax,ds:0x1013054
 100a18e:	xor    eax,ebp
 100a190:	mov    DWORD PTR [ebp-0x4],eax
 100a193:	push   ebx
 100a194:	mov    ebx,DWORD PTR [ebp+0x14]
 100a197:	push   esi
 100a198:	mov    esi,DWORD PTR [ebp+0x8]
 100a19b:	xor    eax,eax
 100a19d:	push   edi
 100a19e:	push   DWORD PTR [ebp+0x10]
 100a1a1:	mov    edi,DWORD PTR [ebp+0xc]
 100a1a4:	lea    ecx,[ebp-0x25c]
 100a1aa:	mov    DWORD PTR [ebp-0x240],esi
 100a1b0:	mov    DWORD PTR [ebp-0x228],ebx
 100a1b6:	mov    DWORD PTR [ebp-0x248],eax
 100a1bc:	mov    DWORD PTR [ebp-0x210],eax
 100a1c2:	mov    DWORD PTR [ebp-0x234],eax
 100a1c8:	mov    DWORD PTR [ebp-0x218],eax
 100a1ce:	mov    DWORD PTR [ebp-0x230],eax
 100a1d4:	mov    DWORD PTR [ebp-0x244],eax
 100a1da:	mov    DWORD PTR [ebp-0x238],eax
 100a1e0:	call   0x10086a4
 100a1e5:	test   esi,esi
 100a1e7:	jne    0x100a214
 100a1e9:	call   0x100af29
 100a1ee:	mov    DWORD PTR [eax],0x16
 100a1f4:	call   0x100aecd
 100a1f9:	cmp    BYTE PTR [ebp-0x250],0x0
 100a200:	je     0x100a20c
 100a202:	mov    eax,DWORD PTR [ebp-0x254]
 100a208:	and    DWORD PTR [eax+0x70],0xfffffffd
 100a20c:	or     eax,0xffffffff
 100a20f:	jmp    0x100acf8
 100a214:	test   BYTE PTR [esi+0xc],0x40
 100a218:	jne    0x100a278
 100a21a:	push   esi
 100a21b:	call   0x100b12a
 100a220:	pop    ecx
 100a221:	mov    edx,0x10130a0
 100a226:	cmp    eax,0xffffffff
 100a229:	je     0x100a246
 100a22b:	cmp    eax,0xfffffffe
 100a22e:	je     0x100a246
 100a230:	mov    ecx,eax
 100a232:	and    ecx,0x1f
 100a235:	mov    esi,eax
 100a237:	sar    esi,0x5
 100a23a:	shl    ecx,0x6
 100a23d:	add    ecx,DWORD PTR [esi*4+0x1015fe0]
 100a244:	jmp    0x100a248
 100a246:	mov    ecx,edx
 100a248:	test   BYTE PTR [ecx+0x24],0x7f
 100a24c:	jne    0x100a1e9
 100a24e:	cmp    eax,0xffffffff
 100a251:	je     0x100a26c
 100a253:	cmp    eax,0xfffffffe
 100a256:	je     0x100a26c
 100a258:	mov    ecx,eax
 100a25a:	and    eax,0x1f
 100a25d:	sar    ecx,0x5
 100a260:	shl    eax,0x6
 100a263:	add    eax,DWORD PTR [ecx*4+0x1015fe0]
 100a26a:	jmp    0x100a26e
 100a26c:	mov    eax,edx
 100a26e:	test   BYTE PTR [eax+0x24],0x80
 100a272:	jne    0x100a1e9
 100a278:	xor    esi,esi
 100a27a:	cmp    edi,esi
 100a27c:	je     0x100a1e9
 100a282:	mov    dl,BYTE PTR [edi]
 100a284:	xor    ecx,ecx
 100a286:	mov    DWORD PTR [ebp-0x224],esi
 100a28c:	mov    DWORD PTR [ebp-0x220],esi
 100a292:	mov    DWORD PTR [ebp-0x24c],esi
 100a298:	mov    BYTE PTR [ebp-0x211],dl
 100a29e:	test   dl,dl
 100a2a0:	je     0x100acdf
 100a2a6:	inc    edi
 100a2a7:	mov    DWORD PTR [ebp-0x23c],edi
 100a2ad:	cmp    DWORD PTR [ebp-0x224],esi
 100a2b3:	jl     0x100acdf
 100a2b9:	lea    eax,[edx-0x20]
 100a2bc:	cmp    al,0x58
 100a2be:	ja     0x100a2cf
 100a2c0:	movsx  eax,dl
 100a2c3:	movsx  eax,BYTE PTR [eax+0x1002d30]
 100a2ca:	and    eax,0xf
 100a2cd:	jmp    0x100a2d1
 100a2cf:	xor    eax,eax
 100a2d1:	movsx  eax,BYTE PTR [ecx+eax*8+0x1002d50]
 100a2d9:	push   0x7
 100a2db:	sar    eax,0x4
 100a2de:	pop    ecx
 100a2df:	mov    DWORD PTR [ebp-0x260],eax
 100a2e5:	cmp    eax,ecx
 100a2e7:	ja     0x100acb8
 100a2ed:	jmp    DWORD PTR [eax*4+0x100ad0a]
 100a2f4:	or     DWORD PTR [ebp-0x218],0xffffffff
 100a2fb:	mov    DWORD PTR [ebp-0x26c],esi
 100a301:	mov    DWORD PTR [ebp-0x244],esi
 100a307:	mov    DWORD PTR [ebp-0x234],esi
 100a30d:	mov    DWORD PTR [ebp-0x230],esi
 100a313:	mov    DWORD PTR [ebp-0x210],esi
 100a319:	mov    DWORD PTR [ebp-0x238],esi
 100a31f:	jmp    0x100acb8
 100a324:	movsx  eax,dl
 100a327:	sub    eax,0x20
 100a32a:	je     0x100a376
 100a32c:	sub    eax,0x3
 100a32f:	je     0x100a367
 100a331:	sub    eax,0x8
 100a334:	je     0x100a35b
 100a336:	dec    eax
 100a337:	dec    eax
 100a338:	je     0x100a34f
 100a33a:	sub    eax,0x3
 100a33d:	jne    0x100acb8
 100a343:	or     DWORD PTR [ebp-0x210],0x8
 100a34a:	jmp    0x100acb8
 100a34f:	or     DWORD PTR [ebp-0x210],0x4
 100a356:	jmp    0x100acb8
 100a35b:	or     DWORD PTR [ebp-0x210],0x1
 100a362:	jmp    0x100acb8
 100a367:	or     DWORD PTR [ebp-0x210],0x80
 100a371:	jmp    0x100acb8
 100a376:	or     DWORD PTR [ebp-0x210],0x2
 100a37d:	jmp    0x100acb8
 100a382:	cmp    dl,0x2a
 100a385:	jne    0x100a3b3
 100a387:	add    ebx,0x4
 100a38a:	mov    DWORD PTR [ebp-0x228],ebx
 100a390:	mov    ebx,DWORD PTR [ebx-0x4]
 100a393:	mov    DWORD PTR [ebp-0x234],ebx
 100a399:	cmp    ebx,esi
 100a39b:	jge    0x100acb8
 100a3a1:	or     DWORD PTR [ebp-0x210],0x4
 100a3a8:	neg    DWORD PTR [ebp-0x234]
 100a3ae:	jmp    0x100acb8
 100a3b3:	mov    eax,DWORD PTR [ebp-0x234]
 100a3b9:	imul   eax,eax,0xa
 100a3bc:	movsx  ecx,dl
 100a3bf:	lea    eax,[eax+ecx*1-0x30]
 100a3c3:	mov    DWORD PTR [ebp-0x234],eax
 100a3c9:	jmp    0x100acb8
 100a3ce:	mov    DWORD PTR [ebp-0x218],esi
 100a3d4:	jmp    0x100acb8
 100a3d9:	cmp    dl,0x2a
 100a3dc:	jne    0x100a404
 100a3de:	add    ebx,0x4
 100a3e1:	mov    DWORD PTR [ebp-0x228],ebx
 100a3e7:	mov    ebx,DWORD PTR [ebx-0x4]
 100a3ea:	mov    DWORD PTR [ebp-0x218],ebx
 100a3f0:	cmp    ebx,esi
 100a3f2:	jge    0x100acb8
 100a3f8:	or     DWORD PTR [ebp-0x218],0xffffffff
 100a3ff:	jmp    0x100acb8
 100a404:	mov    eax,DWORD PTR [ebp-0x218]
 100a40a:	imul   eax,eax,0xa
 100a40d:	movsx  ecx,dl
 100a410:	lea    eax,[eax+ecx*1-0x30]
 100a414:	mov    DWORD PTR [ebp-0x218],eax
 100a41a:	jmp    0x100acb8
 100a41f:	cmp    dl,0x49
 100a422:	je     0x100a479
 100a424:	cmp    dl,0x68
 100a427:	je     0x100a46d
 100a429:	cmp    dl,0x6c
 100a42c:	je     0x100a446
 100a42e:	cmp    dl,0x77
 100a431:	jne    0x100acb8
 100a437:	or     DWORD PTR [ebp-0x210],0x800
 100a441:	jmp    0x100acb8
 100a446:	cmp    BYTE PTR [edi],0x6c
 100a449:	jne    0x100a461
 100a44b:	inc    edi
 100a44c:	or     DWORD PTR [ebp-0x210],0x1000
 100a456:	mov    DWORD PTR [ebp-0x23c],edi
 100a45c:	jmp    0x100acb8
 100a461:	or     DWORD PTR [ebp-0x210],0x10
 100a468:	jmp    0x100acb8
 100a46d:	or     DWORD PTR [ebp-0x210],0x20
 100a474:	jmp    0x100acb8
 100a479:	mov    al,BYTE PTR [edi]
 100a47b:	cmp    al,0x36
 100a47d:	jne    0x100a49d
 100a47f:	cmp    BYTE PTR [edi+0x1],0x34
 100a483:	jne    0x100a49d
 100a485:	add    edi,0x2
 100a488:	or     DWORD PTR [ebp-0x210],0x8000
 100a492:	mov    DWORD PTR [ebp-0x23c],edi
 100a498:	jmp    0x100acb8
 100a49d:	cmp    al,0x33
 100a49f:	jne    0x100a4bf
 100a4a1:	cmp    BYTE PTR [edi+0x1],0x32
 100a4a5:	jne    0x100a4bf
 100a4a7:	add    edi,0x2
 100a4aa:	and    DWORD PTR [ebp-0x210],0xffff7fff
 100a4b4:	mov    DWORD PTR [ebp-0x23c],edi
 100a4ba:	jmp    0x100acb8
 100a4bf:	cmp    al,0x64
 100a4c1:	je     0x100acb8
 100a4c7:	cmp    al,0x69
 100a4c9:	je     0x100acb8
 100a4cf:	cmp    al,0x6f
 100a4d1:	je     0x100acb8
 100a4d7:	cmp    al,0x75
 100a4d9:	je     0x100acb8
 100a4df:	cmp    al,0x78
 100a4e1:	je     0x100acb8
 100a4e7:	cmp    al,0x58
 100a4e9:	je     0x100acb8
 100a4ef:	mov    DWORD PTR [ebp-0x260],esi
 100a4f5:	and    DWORD PTR [ebp-0x238],0x0
 100a4fc:	lea    eax,[ebp-0x25c]
 100a502:	push   eax
 100a503:	movzx  eax,dl
 100a506:	push   eax
 100a507:	call   0x100e8f1
 100a50c:	pop    ecx
 100a50d:	test   eax,eax
 100a50f:	mov    al,BYTE PTR [ebp-0x211]
 100a515:	pop    ecx
 100a516:	je     0x100a53a
 100a518:	mov    ecx,DWORD PTR [ebp-0x240]
 100a51e:	lea    esi,[ebp-0x224]
 100a524:	call   0x100a0cd
 100a529:	mov    al,BYTE PTR [edi]
 100a52b:	inc    edi
 100a52c:	mov    DWORD PTR [ebp-0x23c],edi
 100a532:	test   al,al
 100a534:	je     0x100a1e9
 100a53a:	mov    ecx,DWORD PTR [ebp-0x240]
 100a540:	lea    esi,[ebp-0x224]
 100a546:	call   0x100a0cd
 100a54b:	jmp    0x100acb8
 100a550:	movsx  eax,dl
 100a553:	cmp    eax,0x64
 100a556:	jg     0x100a744
 100a55c:	je     0x100a7db
 100a562:	cmp    eax,0x53
 100a565:	jg     0x100a65d
 100a56b:	je     0x100a5f1
 100a571:	sub    eax,0x41
 100a574:	je     0x100a586
 100a576:	dec    eax
 100a577:	dec    eax
 100a578:	je     0x100a5d2
 100a57a:	dec    eax
 100a57b:	dec    eax
 100a57c:	je     0x100a586
 100a57e:	dec    eax
 100a57f:	dec    eax
 100a580:	jne    0x100ab12
 100a586:	add    dl,0x20
 100a589:	mov    DWORD PTR [ebp-0x26c],0x1
 100a593:	mov    BYTE PTR [ebp-0x211],dl
 100a599:	or     DWORD PTR [ebp-0x210],0x40
 100a5a0:	lea    edi,[ebp-0x20c]
 100a5a6:	mov    eax,0x200
 100a5ab:	mov    DWORD PTR [ebp-0x21c],edi
 100a5b1:	mov    DWORD PTR [ebp-0x264],eax
 100a5b7:	cmp    DWORD PTR [ebp-0x218],esi
 100a5bd:	jge    0x100a80b
 100a5c3:	mov    DWORD PTR [ebp-0x218],0x6
 100a5cd:	jmp    0x100a875
 100a5d2:	test   DWORD PTR [ebp-0x210],0x830
 100a5dc:	jne    0x100a67a
 100a5e2:	or     DWORD PTR [ebp-0x210],0x800
 100a5ec:	jmp    0x100a67a
 100a5f1:	test   DWORD PTR [ebp-0x210],0x830
 100a5fb:	jne    0x100a607
 100a5fd:	or     DWORD PTR [ebp-0x210],0x800
 100a607:	mov    ecx,DWORD PTR [ebp-0x218]
 100a60d:	cmp    ecx,0xffffffff
 100a610:	jne    0x100a617
 100a612:	mov    ecx,0x7fffffff
 100a617:	add    ebx,0x4
 100a61a:	test   DWORD PTR [ebp-0x210],0x810
 100a624:	mov    DWORD PTR [ebp-0x228],ebx
 100a62a:	mov    ebx,DWORD PTR [ebx-0x4]
 100a62d:	mov    DWORD PTR [ebp-0x21c],ebx
 100a633:	je     0x100aae4
 100a639:	cmp    ebx,esi
 100a63b:	jne    0x100a648
 100a63d:	mov    eax,ds:0x10130f4
 100a642:	mov    DWORD PTR [ebp-0x21c],eax
 100a648:	mov    eax,DWORD PTR [ebp-0x21c]
 100a64e:	mov    DWORD PTR [ebp-0x238],0x1
 100a658:	jmp    0x100aad6
 100a65d:	sub    eax,0x58
 100a660:	je     0x100a939
 100a666:	dec    eax
 100a667:	dec    eax
 100a668:	je     0x100a6e3
 100a66a:	sub    eax,ecx
 100a66c:	je     0x100a599
 100a672:	dec    eax
 100a673:	dec    eax
 100a674:	jne    0x100ab12
 100a67a:	add    ebx,0x4
 100a67d:	test   DWORD PTR [ebp-0x210],0x810
 100a687:	mov    DWORD PTR [ebp-0x228],ebx
 100a68d:	je     0x100a6bf
 100a68f:	movzx  eax,WORD PTR [ebx-0x4]
 100a693:	push   eax
 100a694:	push   0x200
 100a699:	lea    eax,[ebp-0x20c]
 100a69f:	push   eax
 100a6a0:	lea    eax,[ebp-0x220]
 100a6a6:	push   eax
 100a6a7:	call   0x100e8cf
 100a6ac:	add    esp,0x10
 100a6af:	test   eax,eax
 100a6b1:	je     0x100a6d2
 100a6b3:	mov    DWORD PTR [ebp-0x244],0x1
 100a6bd:	jmp    0x100a6d2
 100a6bf:	mov    al,BYTE PTR [ebx-0x4]
 100a6c2:	mov    BYTE PTR [ebp-0x20c],al
 100a6c8:	mov    DWORD PTR [ebp-0x220],0x1
 100a6d2:	lea    eax,[ebp-0x20c]
 100a6d8:	mov    DWORD PTR [ebp-0x21c],eax
 100a6de:	jmp    0x100ab12
 100a6e3:	mov    eax,DWORD PTR [ebx]
 100a6e5:	add    ebx,0x4
 100a6e8:	mov    DWORD PTR [ebp-0x228],ebx
 100a6ee:	cmp    eax,esi
 100a6f0:	je     0x100a72d
 100a6f2:	mov    ecx,DWORD PTR [eax+0x4]
 100a6f5:	cmp    ecx,esi
 100a6f7:	je     0x100a72d
 100a6f9:	test   DWORD PTR [ebp-0x210],0x800
 100a703:	movsx  eax,WORD PTR [eax]
 100a706:	mov    DWORD PTR [ebp-0x21c],ecx
 100a70c:	je     0x100a722
 100a70e:	cdq    
 100a70f:	sub    eax,edx
 100a711:	sar    eax,1
 100a713:	mov    DWORD PTR [ebp-0x238],0x1
 100a71d:	jmp    0x100ab0c
 100a722:	mov    DWORD PTR [ebp-0x238],esi
 100a728:	jmp    0x100ab0c
 100a72d:	mov    eax,ds:0x10130f0
 100a732:	mov    DWORD PTR [ebp-0x21c],eax
 100a738:	push   eax
 100a739:	call   0x100b740
 100a73e:	pop    ecx
 100a73f:	jmp    0x100ab0c
 100a744:	cmp    eax,0x70
 100a747:	jg     0x100a941
 100a74d:	je     0x100a92f
 100a753:	cmp    eax,0x65
 100a756:	jl     0x100ab12
 100a75c:	cmp    eax,0x67
 100a75f:	jle    0x100a599
 100a765:	cmp    eax,0x69
 100a768:	je     0x100a7db
 100a76a:	cmp    eax,0x6e
 100a76d:	je     0x100a797
 100a76f:	cmp    eax,0x6f
 100a772:	jne    0x100ab12
 100a778:	test   BYTE PTR [ebp-0x210],0x80
 100a77f:	mov    DWORD PTR [ebp-0x220],0x8
 100a789:	je     0x100a7ec
 100a78b:	or     DWORD PTR [ebp-0x210],0x200
 100a795:	jmp    0x100a7ec
 100a797:	mov    esi,DWORD PTR [ebx]
 100a799:	add    ebx,0x4
 100a79c:	mov    DWORD PTR [ebp-0x228],ebx
 100a7a2:	call   0x100e75a
 100a7a7:	test   eax,eax
 100a7a9:	je     0x100a1e9
 100a7af:	test   BYTE PTR [ebp-0x210],0x20
 100a7b6:	je     0x100a7c4
 100a7b8:	mov    ax,WORD PTR [ebp-0x224]
 100a7bf:	mov    WORD PTR [esi],ax
 100a7c2:	jmp    0x100a7cc
 100a7c4:	mov    eax,DWORD PTR [ebp-0x224]
 100a7ca:	mov    DWORD PTR [esi],eax
 100a7cc:	mov    DWORD PTR [ebp-0x244],0x1
 100a7d6:	jmp    0x100ac9c
 100a7db:	or     DWORD PTR [ebp-0x210],0x40
 100a7e2:	mov    DWORD PTR [ebp-0x220],0xa
 100a7ec:	mov    ecx,DWORD PTR [ebp-0x210]
 100a7f2:	test   ecx,0x8000
 100a7f8:	je     0x100a9a0
 100a7fe:	mov    eax,DWORD PTR [ebx]
 100a800:	mov    edx,DWORD PTR [ebx+0x4]
 100a803:	add    ebx,0x8
 100a806:	jmp    0x100a9d9
 100a80b:	jne    0x100a81e
 100a80d:	cmp    dl,0x67
 100a810:	jne    0x100a875
 100a812:	mov    DWORD PTR [ebp-0x218],0x1
 100a81c:	jmp    0x100a875
 100a81e:	cmp    DWORD PTR [ebp-0x218],eax
 100a824:	jle    0x100a82c
 100a826:	mov    DWORD PTR [ebp-0x218],eax
 100a82c:	cmp    DWORD PTR [ebp-0x218],0xa3
 100a836:	jle    0x100a875
 100a838:	mov    esi,DWORD PTR [ebp-0x218]
 100a83e:	add    esi,0x15d
 100a844:	push   esi
 100a845:	call   0x100dc6f
 100a84a:	mov    dl,BYTE PTR [ebp-0x211]
 100a850:	pop    ecx
 100a851:	mov    DWORD PTR [ebp-0x24c],eax
 100a857:	test   eax,eax
 100a859:	je     0x100a86b
 100a85b:	mov    DWORD PTR [ebp-0x21c],eax
 100a861:	mov    DWORD PTR [ebp-0x264],esi
 100a867:	mov    edi,eax
 100a869:	jmp    0x100a875
 100a86b:	mov    DWORD PTR [ebp-0x218],0xa3
 100a875:	mov    eax,DWORD PTR [ebx]
 100a877:	mov    esi,DWORD PTR ds:0x1001148
 100a87d:	add    ebx,0x8
 100a880:	mov    DWORD PTR [ebp-0x278],eax
 100a886:	mov    eax,DWORD PTR [ebx-0x4]
 100a889:	mov    DWORD PTR [ebp-0x274],eax
 100a88f:	lea    eax,[ebp-0x25c]
 100a895:	push   eax
 100a896:	push   DWORD PTR [ebp-0x26c]
 100a89c:	movsx  eax,dl
 100a89f:	push   DWORD PTR [ebp-0x218]
 100a8a5:	mov    DWORD PTR [ebp-0x228],ebx
 100a8ab:	push   eax
 100a8ac:	push   DWORD PTR [ebp-0x264]
 100a8b2:	lea    eax,[ebp-0x278]
 100a8b8:	push   edi
 100a8b9:	push   eax
 100a8ba:	push   DWORD PTR ds:0x1013dc0
 100a8c0:	call   esi
 100a8c2:	call   eax
 100a8c4:	mov    ebx,DWORD PTR [ebp-0x210]
 100a8ca:	add    esp,0x1c
 100a8cd:	and    ebx,0x80
 100a8d3:	je     0x100a8f2
 100a8d5:	cmp    DWORD PTR [ebp-0x218],0x0
 100a8dc:	jne    0x100a8f2
 100a8de:	lea    eax,[ebp-0x25c]
 100a8e4:	push   eax
 100a8e5:	push   edi
 100a8e6:	push   DWORD PTR ds:0x1013dcc
 100a8ec:	call   esi
 100a8ee:	call   eax
 100a8f0:	pop    ecx
 100a8f1:	pop    ecx
 100a8f2:	cmp    BYTE PTR [ebp-0x211],0x67
 100a8f9:	jne    0x100a913
 100a8fb:	test   ebx,ebx
 100a8fd:	jne    0x100a913
 100a8ff:	lea    eax,[ebp-0x25c]
 100a905:	push   eax
 100a906:	push   edi
 100a907:	push   DWORD PTR ds:0x1013dc8
 100a90d:	call   esi
 100a90f:	call   eax
 100a911:	pop    ecx
 100a912:	pop    ecx
 100a913:	cmp    BYTE PTR [edi],0x2d
 100a916:	jne    0x100a929
 100a918:	or     DWORD PTR [ebp-0x210],0x100
 100a922:	inc    edi
 100a923:	mov    DWORD PTR [ebp-0x21c],edi
 100a929:	push   edi
 100a92a:	jmp    0x100a739
 100a92f:	mov    DWORD PTR [ebp-0x218],0x8
 100a939:	mov    DWORD PTR [ebp-0x248],ecx
 100a93f:	jmp    0x100a965
 100a941:	sub    eax,0x73
 100a944:	je     0x100a607
 100a94a:	dec    eax
 100a94b:	dec    eax
 100a94c:	je     0x100a7e2
 100a952:	sub    eax,0x3
 100a955:	jne    0x100ab12
 100a95b:	mov    DWORD PTR [ebp-0x248],0x27
 100a965:	test   BYTE PTR [ebp-0x210],0x80
 100a96c:	mov    DWORD PTR [ebp-0x220],0x10
 100a976:	je     0x100a7ec
 100a97c:	mov    al,BYTE PTR [ebp-0x248]
 100a982:	add    al,0x51
 100a984:	mov    BYTE PTR [ebp-0x22c],0x30
 100a98b:	mov    BYTE PTR [ebp-0x22b],al
 100a991:	mov    DWORD PTR [ebp-0x230],0x2
 100a99b:	jmp    0x100a7ec
 100a9a0:	test   ecx,0x1000
 100a9a6:	jne    0x100a7fe
 100a9ac:	add    ebx,0x4
 100a9af:	test   cl,0x20
 100a9b2:	je     0x100a9cc
 100a9b4:	mov    DWORD PTR [ebp-0x228],ebx
 100a9ba:	test   cl,0x40
 100a9bd:	je     0x100a9c5
 100a9bf:	movsx  eax,WORD PTR [ebx-0x4]
 100a9c3:	jmp    0x100a9c9
 100a9c5:	movzx  eax,WORD PTR [ebx-0x4]
 100a9c9:	cdq    
 100a9ca:	jmp    0x100a9df
 100a9cc:	mov    eax,DWORD PTR [ebx-0x4]
 100a9cf:	test   cl,0x40
 100a9d2:	je     0x100a9d7
 100a9d4:	cdq    
 100a9d5:	jmp    0x100a9d9
 100a9d7:	xor    edx,edx
 100a9d9:	mov    DWORD PTR [ebp-0x228],ebx
 100a9df:	test   cl,0x40
 100a9e2:	je     0x100a9ff
 100a9e4:	test   edx,edx
 100a9e6:	jg     0x100a9ff
 100a9e8:	jl     0x100a9ee
 100a9ea:	test   eax,eax
 100a9ec:	jae    0x100a9ff
 100a9ee:	neg    eax
 100a9f0:	adc    edx,0x0
 100a9f3:	neg    edx
 100a9f5:	or     DWORD PTR [ebp-0x210],0x100
 100a9ff:	test   DWORD PTR [ebp-0x210],0x9000
 100aa09:	mov    ebx,edx
 100aa0b:	mov    edi,eax
 100aa0d:	jne    0x100aa11
 100aa0f:	xor    ebx,ebx
 100aa11:	cmp    DWORD PTR [ebp-0x218],0x0
 100aa18:	jge    0x100aa26
 100aa1a:	mov    DWORD PTR [ebp-0x218],0x1
 100aa24:	jmp    0x100aa40
 100aa26:	and    DWORD PTR [ebp-0x210],0xfffffff7
 100aa2d:	mov    eax,0x200
 100aa32:	cmp    DWORD PTR [ebp-0x218],eax
 100aa38:	jle    0x100aa40
 100aa3a:	mov    DWORD PTR [ebp-0x218],eax
 100aa40:	mov    eax,edi
 100aa42:	or     eax,ebx
 100aa44:	jne    0x100aa4c
 100aa46:	and    DWORD PTR [ebp-0x230],eax
 100aa4c:	lea    esi,[ebp-0xd]
 100aa4f:	mov    eax,DWORD PTR [ebp-0x218]
 100aa55:	dec    DWORD PTR [ebp-0x218]
 100aa5b:	test   eax,eax
 100aa5d:	jg     0x100aa65
 100aa5f:	mov    eax,edi
 100aa61:	or     eax,ebx
 100aa63:	je     0x100aa92
 100aa65:	mov    eax,DWORD PTR [ebp-0x220]
 100aa6b:	cdq    
 100aa6c:	push   edx
 100aa6d:	push   eax
 100aa6e:	push   ebx
 100aa6f:	push   edi
 100aa70:	call   0x100e950
 100aa75:	add    ecx,0x30
 100aa78:	mov    DWORD PTR [ebp-0x264],ebx
 100aa7e:	mov    edi,eax
 100aa80:	mov    ebx,edx
 100aa82:	cmp    ecx,0x39
 100aa85:	jle    0x100aa8d
 100aa87:	add    ecx,DWORD PTR [ebp-0x248]
 100aa8d:	mov    BYTE PTR [esi],cl
 100aa8f:	dec    esi
 100aa90:	jmp    0x100aa4f
 100aa92:	lea    eax,[ebp-0xd]
 100aa95:	sub    eax,esi
 100aa97:	inc    esi
 100aa98:	test   DWORD PTR [ebp-0x210],0x200
 100aaa2:	mov    DWORD PTR [ebp-0x220],eax
 100aaa8:	mov    DWORD PTR [ebp-0x21c],esi
 100aaae:	je     0x100ab12
 100aab0:	test   eax,eax
 100aab2:	je     0x100aabb
 100aab4:	mov    ecx,esi
 100aab6:	cmp    BYTE PTR [ecx],0x30
 100aab9:	je     0x100ab12
 100aabb:	dec    DWORD PTR [ebp-0x21c]
 100aac1:	mov    ecx,DWORD PTR [ebp-0x21c]
 100aac7:	mov    BYTE PTR [ecx],0x30
 100aaca:	inc    eax
 100aacb:	jmp    0x100ab0c
 100aacd:	dec    ecx
 100aace:	cmp    WORD PTR [eax],si
 100aad1:	je     0x100aada
 100aad3:	add    eax,0x2
 100aad6:	cmp    ecx,esi
 100aad8:	jne    0x100aacd
 100aada:	sub    eax,DWORD PTR [ebp-0x21c]
 100aae0:	sar    eax,1
 100aae2:	jmp    0x100ab0c
 100aae4:	cmp    ebx,esi
 100aae6:	jne    0x100aaf3
 100aae8:	mov    eax,ds:0x10130f0
 100aaed:	mov    DWORD PTR [ebp-0x21c],eax
 100aaf3:	mov    eax,DWORD PTR [ebp-0x21c]
 100aaf9:	jmp    0x100ab02
 100aafb:	dec    ecx
 100aafc:	cmp    BYTE PTR [eax],0x0
 100aaff:	je     0x100ab06
 100ab01:	inc    eax
 100ab02:	cmp    ecx,esi
 100ab04:	jne    0x100aafb
 100ab06:	sub    eax,DWORD PTR [ebp-0x21c]
 100ab0c:	mov    DWORD PTR [ebp-0x220],eax
 100ab12:	cmp    DWORD PTR [ebp-0x244],0x0
 100ab19:	jne    0x100ac9c
 100ab1f:	mov    eax,DWORD PTR [ebp-0x210]
 100ab25:	test   al,0x40
 100ab27:	je     0x100ab5b
 100ab29:	test   eax,0x100
 100ab2e:	je     0x100ab39
 100ab30:	mov    BYTE PTR [ebp-0x22c],0x2d
 100ab37:	jmp    0x100ab51
 100ab39:	test   al,0x1
 100ab3b:	je     0x100ab46
 100ab3d:	mov    BYTE PTR [ebp-0x22c],0x2b
 100ab44:	jmp    0x100ab51
 100ab46:	test   al,0x2
 100ab48:	je     0x100ab5b
 100ab4a:	mov    BYTE PTR [ebp-0x22c],0x20
 100ab51:	mov    DWORD PTR [ebp-0x230],0x1
 100ab5b:	mov    ebx,DWORD PTR [ebp-0x234]
 100ab61:	sub    ebx,DWORD PTR [ebp-0x220]
 100ab67:	sub    ebx,DWORD PTR [ebp-0x230]
 100ab6d:	mov    DWORD PTR [ebp-0x264],ebx
 100ab73:	test   al,0xc
 100ab75:	jne    0x100ab9e
 100ab77:	mov    edi,ebx
 100ab79:	test   ebx,ebx
 100ab7b:	jle    0x100ab9e
 100ab7d:	mov    ecx,DWORD PTR [ebp-0x240]
 100ab83:	lea    esi,[ebp-0x224]
 100ab89:	mov    al,0x20
 100ab8b:	dec    edi
 100ab8c:	call   0x100a0cd
 100ab91:	cmp    DWORD PTR [ebp-0x224],0xffffffff
 100ab98:	je     0x100ab9e
 100ab9a:	test   edi,edi
 100ab9c:	jg     0x100ab7d
 100ab9e:	mov    edi,DWORD PTR [ebp-0x240]
 100aba4:	mov    ecx,DWORD PTR [ebp-0x230]
 100abaa:	lea    eax,[ebp-0x22c]
 100abb0:	push   eax
 100abb1:	lea    eax,[ebp-0x224]
 100abb7:	call   0x100a105
 100abbc:	test   BYTE PTR [ebp-0x210],0x8
 100abc3:	pop    ecx
 100abc4:	je     0x100abee
 100abc6:	test   BYTE PTR [ebp-0x210],0x4
 100abcd:	jne    0x100abee
 100abcf:	jmp    0x100abea
 100abd1:	lea    esi,[ebp-0x224]
 100abd7:	mov    ecx,edi
 100abd9:	mov    al,0x30
 100abdb:	dec    ebx
 100abdc:	call   0x100a0cd
 100abe1:	cmp    DWORD PTR [ebp-0x224],0xffffffff
 100abe8:	je     0x100abee
 100abea:	test   ebx,ebx
 100abec:	jg     0x100abd1
 100abee:	cmp    DWORD PTR [ebp-0x238],0x0
 100abf5:	mov    ebx,DWORD PTR [ebp-0x220]
 100abfb:	je     0x100ac51
 100abfd:	test   ebx,ebx
 100abff:	jle    0x100ac51
 100ac01:	mov    esi,DWORD PTR [ebp-0x21c]
 100ac07:	movzx  eax,WORD PTR [esi]
 100ac0a:	push   eax
 100ac0b:	push   0x6
 100ac0d:	lea    eax,[ebp-0xc]
 100ac10:	push   eax
 100ac11:	lea    eax,[ebp-0x270]
 100ac17:	push   eax
 100ac18:	dec    ebx
 100ac19:	add    esi,0x2
 100ac1c:	call   0x100e8cf
 100ac21:	add    esp,0x10
 100ac24:	test   eax,eax
 100ac26:	jne    0x100ac48
 100ac28:	mov    ecx,DWORD PTR [ebp-0x270]
 100ac2e:	test   ecx,ecx
 100ac30:	je     0x100ac48
 100ac32:	lea    eax,[ebp-0xc]
 100ac35:	push   eax
 100ac36:	lea    eax,[ebp-0x224]
 100ac3c:	call   0x100a105
 100ac41:	pop    ecx
 100ac42:	test   ebx,ebx
 100ac44:	jne    0x100ac07
 100ac46:	jmp    0x100ac65
 100ac48:	or     DWORD PTR [ebp-0x224],0xffffffff
 100ac4f:	jmp    0x100ac65
 100ac51:	push   DWORD PTR [ebp-0x21c]
 100ac57:	lea    eax,[ebp-0x224]
 100ac5d:	mov    ecx,ebx
 100ac5f:	call   0x100a105
 100ac64:	pop    ecx
 100ac65:	cmp    DWORD PTR [ebp-0x224],0x0
 100ac6c:	jl     0x100ac9c
 100ac6e:	test   BYTE PTR [ebp-0x210],0x4
 100ac75:	je     0x100ac9c
 100ac77:	mov    ebx,DWORD PTR [ebp-0x264]
 100ac7d:	jmp    0x100ac98
 100ac7f:	lea    esi,[ebp-0x224]
 100ac85:	mov    ecx,edi
 100ac87:	mov    al,0x20
 100ac89:	dec    ebx
 100ac8a:	call   0x100a0cd
 100ac8f:	cmp    DWORD PTR [ebp-0x224],0xffffffff
 100ac96:	je     0x100ac9c
 100ac98:	test   ebx,ebx
 100ac9a:	jg     0x100ac7f
 100ac9c:	cmp    DWORD PTR [ebp-0x24c],0x0
 100aca3:	je     0x100acb8
 100aca5:	push   DWORD PTR [ebp-0x24c]
 100acab:	call   0x100af81
 100acb0:	and    DWORD PTR [ebp-0x24c],0x0
 100acb7:	pop    ecx
 100acb8:	mov    edi,DWORD PTR [ebp-0x23c]
 100acbe:	mov    al,BYTE PTR [edi]
 100acc0:	mov    BYTE PTR [ebp-0x211],al
 100acc6:	test   al,al
 100acc8:	je     0x100acdf
 100acca:	mov    ecx,DWORD PTR [ebp-0x260]
 100acd0:	mov    ebx,DWORD PTR [ebp-0x228]
 100acd6:	xor    esi,esi
 100acd8:	mov    dl,al
 100acda:	jmp    0x100a2a6
 100acdf:	cmp    BYTE PTR [ebp-0x250],0x0
 100ace6:	je     0x100acf2
 100ace8:	mov    eax,DWORD PTR [ebp-0x254]
 100acee:	and    DWORD PTR [eax+0x70],0xfffffffd
 100acf2:	mov    eax,DWORD PTR [ebp-0x224]
 100acf8:	mov    ecx,DWORD PTR [ebp-0x4]
 100acfb:	pop    edi
 100acfc:	pop    esi
 100acfd:	xor    ecx,ebp
 100acff:	pop    ebx
 100ad00:	call   0x1008355
 100ad05:	leave  
 100ad06:	ret    
 100ad07:	lea    ecx,[ecx+0x0]
 100ad0a:	cmc    
 100ad0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100ad0c:	add    BYTE PTR [ecx],al
 100ad0e:	hlt    
 100ad0f:	mov    ds:0xa3240100,al
 100ad14:	add    BYTE PTR [ecx],al
 100ad16:	and    BYTE PTR [ebx-0x5c31ff00],0x0
 100ad1d:	add    ecx,ebx
 100ad1f:	mov    ds:0xa41f0100,eax
 100ad24:	add    BYTE PTR [ecx],al
 100ad26:	push   eax
 100ad27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100ad28:	add    BYTE PTR [ecx],al
 100ad2a:	int3   
 100ad2b:	int3   
 100ad2c:	int3   
 100ad2d:	int3   
 100ad2e:	int3   
 100ad2f:	mov    edi,edi
 100ad31:	push   ebp
 100ad32:	mov    ebp,esp
 100ad34:	mov    eax,DWORD PTR [ebp+0x8]
 100ad37:	mov    ds:0x1014a6c,eax
 100ad3c:	pop    ebp
 100ad3d:	ret    
 100ad3e:	int3   
 100ad3f:	int3   
 100ad40:	int3   
 100ad41:	int3   
 100ad42:	int3   
 100ad43:	mov    edi,edi
 100ad45:	push   ebp
 100ad46:	mov    ebp,esp
 100ad48:	sub    esp,0x328
 100ad4e:	mov    eax,ds:0x1013054
 100ad53:	xor    eax,ebp
 100ad55:	mov    DWORD PTR [ebp-0x4],eax
 100ad58:	push   ebx
 100ad59:	mov    ebx,DWORD PTR [ebp+0x8]
 100ad5c:	push   edi
 100ad5d:	cmp    ebx,0xffffffff
 100ad60:	je     0x100ad69
 100ad62:	push   ebx
 100ad63:	call   0x100e9ea
 100ad68:	pop    ecx
 100ad69:	and    DWORD PTR [ebp-0x320],0x0
 100ad70:	push   0x4c
 100ad72:	lea    eax,[ebp-0x31c]
 100ad78:	push   0x0
 100ad7a:	push   eax
 100ad7b:	call   0x1008600
 100ad80:	lea    eax,[ebp-0x320]
 100ad86:	mov    DWORD PTR [ebp-0x328],eax
 100ad8c:	lea    eax,[ebp-0x2d0]
 100ad92:	add    esp,0xc
 100ad95:	mov    DWORD PTR [ebp-0x324],eax
 100ad9b:	mov    DWORD PTR [ebp-0x220],eax
 100ada1:	mov    DWORD PTR [ebp-0x224],ecx
 100ada7:	mov    DWORD PTR [ebp-0x228],edx
 100adad:	mov    DWORD PTR [ebp-0x22c],ebx
 100adb3:	mov    DWORD PTR [ebp-0x230],esi
 100adb9:	mov    DWORD PTR [ebp-0x234],edi
 100adbf:	data16 mov WORD PTR [ebp-0x208],ss
 100adc6:	data16 mov WORD PTR [ebp-0x214],cs
 100adcd:	data16 mov WORD PTR [ebp-0x238],ds
 100add4:	data16 mov WORD PTR [ebp-0x23c],es
 100addb:	data16 mov WORD PTR [ebp-0x240],fs
 100ade2:	data16 mov WORD PTR [ebp-0x244],gs
 100ade9:	pushf  
 100adea:	pop    DWORD PTR [ebp-0x210]
 100adf0:	mov    eax,DWORD PTR [ebp+0x4]
 100adf3:	lea    ecx,[ebp+0x4]
 100adf6:	mov    DWORD PTR [ebp-0x20c],ecx
 100adfc:	mov    DWORD PTR [ebp-0x2d0],0x10001
 100ae06:	mov    DWORD PTR [ebp-0x218],eax
 100ae0c:	mov    ecx,DWORD PTR [ecx-0x4]
 100ae0f:	mov    DWORD PTR [ebp-0x21c],ecx
 100ae15:	mov    ecx,DWORD PTR [ebp+0xc]
 100ae18:	mov    DWORD PTR [ebp-0x320],ecx
 100ae1e:	mov    ecx,DWORD PTR [ebp+0x10]
 100ae21:	mov    DWORD PTR [ebp-0x31c],ecx
 100ae27:	mov    DWORD PTR [ebp-0x314],eax
 100ae2d:	call   DWORD PTR ds:0x10011b0
 100ae33:	push   0x0
 100ae35:	mov    edi,eax
 100ae37:	call   DWORD PTR ds:0x100113c
 100ae3d:	lea    eax,[ebp-0x328]
 100ae43:	push   eax
 100ae44:	call   DWORD PTR ds:0x10011ac
 100ae4a:	test   eax,eax
 100ae4c:	jne    0x100ae5e
 100ae4e:	test   edi,edi
 100ae50:	jne    0x100ae5e
 100ae52:	cmp    ebx,0xffffffff
 100ae55:	je     0x100ae5e
 100ae57:	push   ebx
 100ae58:	call   0x100e9ea
 100ae5d:	pop    ecx
 100ae5e:	mov    ecx,DWORD PTR [ebp-0x4]
 100ae61:	pop    edi
 100ae62:	xor    ecx,ebp
 100ae64:	pop    ebx
 100ae65:	call   0x1008355
 100ae6a:	leave  
 100ae6b:	ret    
 100ae6c:	int3   
 100ae6d:	int3   
 100ae6e:	int3   
 100ae6f:	int3   
 100ae70:	int3   
 100ae71:	mov    edi,edi
 100ae73:	push   esi
 100ae74:	push   0x1
 100ae76:	mov    esi,0xc0000417
 100ae7b:	push   esi
 100ae7c:	push   0x2
 100ae7e:	call   0x100ad43
 100ae83:	add    esp,0xc
 100ae86:	push   esi
 100ae87:	call   DWORD PTR ds:0x1001074
 100ae8d:	push   eax
 100ae8e:	call   DWORD PTR ds:0x10011b4
 100ae94:	pop    esi
 100ae95:	ret    
 100ae96:	int3   
 100ae97:	int3   
 100ae98:	int3   
 100ae99:	int3   
 100ae9a:	int3   
 100ae9b:	mov    edi,edi
 100ae9d:	push   ebp
 100ae9e:	mov    ebp,esp
 100aea0:	push   DWORD PTR ds:0x1014a6c
 100aea6:	call   DWORD PTR ds:0x1001148
 100aeac:	test   eax,eax
 100aeae:	je     0x100aeb3
 100aeb0:	pop    ebp
 100aeb1:	jmp    eax
 100aeb3:	push   DWORD PTR [ebp+0x18]
 100aeb6:	push   DWORD PTR [ebp+0x14]
 100aeb9:	push   DWORD PTR [ebp+0x10]
 100aebc:	push   DWORD PTR [ebp+0xc]
 100aebf:	push   DWORD PTR [ebp+0x8]
 100aec2:	call   0x100ae71
 100aec7:	int3   
 100aec8:	int3   
 100aec9:	int3   
 100aeca:	int3   
 100aecb:	int3   
 100aecc:	int3   
 100aecd:	xor    eax,eax
 100aecf:	push   eax
 100aed0:	push   eax
 100aed1:	push   eax
 100aed2:	push   eax
 100aed3:	push   eax
 100aed4:	call   0x100ae9b
 100aed9:	add    esp,0x14
 100aedc:	ret    
 100aedd:	int3   
 100aede:	int3   
 100aedf:	int3   
 100aee0:	int3   
 100aee1:	int3   
 100aee2:	mov    edi,edi
 100aee4:	push   ebp
 100aee5:	mov    ebp,esp
 100aee7:	mov    eax,DWORD PTR [ebp+0x8]
 100aeea:	xor    ecx,ecx
 100aeec:	cmp    eax,DWORD PTR [ecx*8+0x10130f8]
 100aef3:	je     0x100af08
 100aef5:	inc    ecx
 100aef6:	cmp    ecx,0x2d
 100aef9:	jb     0x100aeec
 100aefb:	lea    ecx,[eax-0x13]
 100aefe:	cmp    ecx,0x11
 100af01:	ja     0x100af11
 100af03:	push   0xd
 100af05:	pop    eax
 100af06:	pop    ebp
 100af07:	ret    
 100af08:	mov    eax,DWORD PTR [ecx*8+0x10130fc]
 100af0f:	pop    ebp
 100af10:	ret    
 100af11:	add    eax,0xffffff44
 100af16:	push   0xe
 100af18:	pop    ecx
 100af19:	cmp    ecx,eax
 100af1b:	sbb    eax,eax
 100af1d:	and    eax,ecx
 100af1f:	add    eax,0x8
 100af22:	pop    ebp
 100af23:	ret    
 100af24:	int3   
 100af25:	int3   
 100af26:	int3   
 100af27:	int3   
 100af28:	int3   
 100af29:	call   0x100994d
 100af2e:	test   eax,eax
 100af30:	jne    0x100af38
 100af32:	mov    eax,0x1013260
 100af37:	ret    
 100af38:	add    eax,0x8
 100af3b:	ret    
 100af3c:	int3   
 100af3d:	int3   
 100af3e:	int3   
 100af3f:	int3   
 100af40:	int3   
 100af41:	call   0x100994d
 100af46:	test   eax,eax
 100af48:	jne    0x100af50
 100af4a:	mov    eax,0x1013264
 100af4f:	ret    
 100af50:	add    eax,0xc
 100af53:	ret    
 100af54:	int3   
 100af55:	int3   
 100af56:	int3   
 100af57:	int3   
 100af58:	int3   
 100af59:	mov    edi,edi
 100af5b:	push   ebp
 100af5c:	mov    ebp,esp
 100af5e:	push   esi
 100af5f:	call   0x100af41
 100af64:	mov    ecx,DWORD PTR [ebp+0x8]
 100af67:	push   ecx
 100af68:	mov    DWORD PTR [eax],ecx
 100af6a:	call   0x100aee2
 100af6f:	pop    ecx
 100af70:	mov    esi,eax
 100af72:	call   0x100af29
 100af77:	mov    DWORD PTR [eax],esi
 100af79:	pop    esi
 100af7a:	pop    ebp
 100af7b:	ret    
 100af7c:	int3   
 100af7d:	int3   
 100af7e:	int3   
 100af7f:	int3   
 100af80:	int3   
 100af81:	mov    edi,edi
 100af83:	push   ebp
 100af84:	mov    ebp,esp
 100af86:	cmp    DWORD PTR [ebp+0x8],0x0
 100af8a:	je     0x100afb9
 100af8c:	push   DWORD PTR [ebp+0x8]
 100af8f:	push   0x0
 100af91:	push   DWORD PTR ds:0x1014a68
 100af97:	call   DWORD PTR ds:0x10011b8
 100af9d:	test   eax,eax
 100af9f:	jne    0x100afb9
 100afa1:	push   esi
 100afa2:	call   0x100af29
 100afa7:	mov    esi,eax
 100afa9:	call   DWORD PTR ds:0x1001124
 100afaf:	push   eax
 100afb0:	call   0x100aee2
 100afb5:	pop    ecx
 100afb6:	mov    DWORD PTR [esi],eax
 100afb8:	pop    esi
 100afb9:	pop    ebp
 100afba:	ret    
 100afbb:	int3   
 100afbc:	int3   
 100afbd:	int3   
 100afbe:	int3   
 100afbf:	int3   
 100afc0:	mov    edi,edi
 100afc2:	push   ebp
 100afc3:	mov    ebp,esp
 100afc5:	push   esi
 100afc6:	mov    esi,DWORD PTR [ebp+0x8]
 100afc9:	push   edi
 100afca:	push   esi
 100afcb:	call   0x100eb08
 100afd0:	pop    ecx
 100afd1:	cmp    eax,0xffffffff
 100afd4:	je     0x100b026
 100afd6:	mov    eax,ds:0x1015fe0
 100afdb:	cmp    esi,0x1
 100afde:	jne    0x100afe9
 100afe0:	test   BYTE PTR [eax+0x84],0x1
 100afe7:	jne    0x100aff4
 100afe9:	cmp    esi,0x2
 100afec:	jne    0x100b00a
 100afee:	test   BYTE PTR [eax+0x44],0x1
 100aff2:	je     0x100b00a
 100aff4:	push   0x2
 100aff6:	call   0x100eb08
 100affb:	push   0x1
 100affd:	mov    edi,eax
 100afff:	call   0x100eb08
 100b004:	pop    ecx
 100b005:	pop    ecx
 100b006:	cmp    eax,edi
 100b008:	je     0x100b026
 100b00a:	push   esi
 100b00b:	call   0x100eb08
 100b010:	pop    ecx
 100b011:	push   eax
 100b012:	call   DWORD PTR ds:0x1001090
 100b018:	test   eax,eax
 100b01a:	jne    0x100b026
 100b01c:	call   DWORD PTR ds:0x1001124
 100b022:	mov    edi,eax
 100b024:	jmp    0x100b028
 100b026:	xor    edi,edi
 100b028:	push   esi
 100b029:	call   0x100ea7d
 100b02e:	mov    eax,esi
 100b030:	sar    eax,0x5
 100b033:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100b03a:	and    esi,0x1f
 100b03d:	shl    esi,0x6
 100b040:	pop    ecx
 100b041:	mov    BYTE PTR [eax+esi*1+0x4],0x0
 100b046:	test   edi,edi
 100b048:	je     0x100b056
 100b04a:	push   edi
 100b04b:	call   0x100af59
 100b050:	pop    ecx
 100b051:	or     eax,0xffffffff
 100b054:	jmp    0x100b058
 100b056:	xor    eax,eax
 100b058:	pop    edi
 100b059:	pop    esi
 100b05a:	pop    ebp
 100b05b:	ret    
 100b05c:	int3   
 100b05d:	int3   
 100b05e:	int3   
 100b05f:	int3   
 100b060:	int3   
 100b061:	push   0x10
 100b063:	push   0x1011b50
 100b068:	call   0x1009cd0
 100b06d:	mov    ebx,DWORD PTR [ebp+0x8]
 100b070:	cmp    ebx,0xfffffffe
 100b073:	jne    0x100b090
 100b075:	call   0x100af41
 100b07a:	and    DWORD PTR [eax],0x0
 100b07d:	call   0x100af29
 100b082:	mov    DWORD PTR [eax],0x9
 100b088:	or     eax,0xffffffff
 100b08b:	jmp    0x100b114
 100b090:	test   ebx,ebx
 100b092:	js     0x100b09c
 100b094:	cmp    ebx,DWORD PTR ds:0x1015fc8
 100b09a:	jb     0x100b0b6
 100b09c:	call   0x100af41
 100b0a1:	and    DWORD PTR [eax],0x0
 100b0a4:	call   0x100af29
 100b0a9:	mov    DWORD PTR [eax],0x9
 100b0af:	call   0x100aecd
 100b0b4:	jmp    0x100b088
 100b0b6:	mov    eax,ebx
 100b0b8:	sar    eax,0x5
 100b0bb:	lea    edi,[eax*4+0x1015fe0]
 100b0c2:	mov    esi,ebx
 100b0c4:	and    esi,0x1f
 100b0c7:	shl    esi,0x6
 100b0ca:	mov    eax,DWORD PTR [edi]
 100b0cc:	movsx  eax,BYTE PTR [eax+esi*1+0x4]
 100b0d1:	and    eax,0x1
 100b0d4:	je     0x100b09c
 100b0d6:	push   ebx
 100b0d7:	call   0x100eb76
 100b0dc:	pop    ecx
 100b0dd:	and    DWORD PTR [ebp-0x4],0x0
 100b0e1:	mov    eax,DWORD PTR [edi]
 100b0e3:	test   BYTE PTR [eax+esi*1+0x4],0x1
 100b0e8:	je     0x100b0f6
 100b0ea:	push   ebx
 100b0eb:	call   0x100afc0
 100b0f0:	pop    ecx
 100b0f1:	mov    DWORD PTR [ebp-0x1c],eax
 100b0f4:	jmp    0x100b105
 100b0f6:	call   0x100af29
 100b0fb:	mov    DWORD PTR [eax],0x9
 100b101:	or     DWORD PTR [ebp-0x1c],0xffffffff
 100b105:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100b10c:	call   0x100b11d
 100b111:	mov    eax,DWORD PTR [ebp-0x1c]
 100b114:	call   0x1009d15
 100b119:	ret    
 100b11a:	mov    ebx,DWORD PTR [ebp+0x8]
 100b11d:	push   ebx
 100b11e:	call   0x100ec1a
 100b123:	pop    ecx
 100b124:	ret    
 100b125:	int3   
 100b126:	int3   
 100b127:	int3   
 100b128:	int3   
 100b129:	int3   
 100b12a:	mov    edi,edi
 100b12c:	push   ebp
 100b12d:	mov    ebp,esp
 100b12f:	mov    eax,DWORD PTR [ebp+0x8]
 100b132:	test   eax,eax
 100b134:	jne    0x100b14b
 100b136:	call   0x100af29
 100b13b:	mov    DWORD PTR [eax],0x16
 100b141:	call   0x100aecd
 100b146:	or     eax,0xffffffff
 100b149:	pop    ebp
 100b14a:	ret    
 100b14b:	mov    eax,DWORD PTR [eax+0x10]
 100b14e:	pop    ebp
 100b14f:	ret    
 100b150:	int3   
 100b151:	int3   
 100b152:	int3   
 100b153:	int3   
 100b154:	int3   
 100b155:	mov    edi,edi
 100b157:	push   ebp
 100b158:	mov    ebp,esp
 100b15a:	push   esi
 100b15b:	mov    esi,DWORD PTR [ebp+0x8]
 100b15e:	mov    eax,DWORD PTR [esi+0xc]
 100b161:	test   al,0x83
 100b163:	je     0x100b183
 100b165:	test   al,0x8
 100b167:	je     0x100b183
 100b169:	push   DWORD PTR [esi+0x8]
 100b16c:	call   0x100af81
 100b171:	and    DWORD PTR [esi+0xc],0xfffffbf7
 100b178:	xor    eax,eax
 100b17a:	pop    ecx
 100b17b:	mov    DWORD PTR [esi],eax
 100b17d:	mov    DWORD PTR [esi+0x8],eax
 100b180:	mov    DWORD PTR [esi+0x4],eax
 100b183:	pop    esi
 100b184:	pop    ebp
 100b185:	ret    
 100b186:	int3   
 100b187:	int3   
 100b188:	int3   
 100b189:	int3   
 100b18a:	int3   
 100b18b:	mov    edi,edi
 100b18d:	push   ebp
 100b18e:	mov    ebp,esp
 100b190:	push   ebx
 100b191:	push   esi
 100b192:	mov    esi,DWORD PTR [ebp+0x8]
 100b195:	mov    eax,DWORD PTR [esi+0xc]
 100b198:	mov    ecx,eax
 100b19a:	and    cl,0x3
 100b19d:	xor    ebx,ebx
 100b19f:	cmp    cl,0x2
 100b1a2:	jne    0x100b1e4
 100b1a4:	test   eax,0x108
 100b1a9:	je     0x100b1e4
 100b1ab:	mov    eax,DWORD PTR [esi+0x8]
 100b1ae:	push   edi
 100b1af:	mov    edi,DWORD PTR [esi]
 100b1b1:	sub    edi,eax
 100b1b3:	test   edi,edi
 100b1b5:	jle    0x100b1e3
 100b1b7:	push   edi
 100b1b8:	push   eax
 100b1b9:	push   esi
 100b1ba:	call   0x100b12a
 100b1bf:	pop    ecx
 100b1c0:	push   eax
 100b1c1:	call   0x100e5d8
 100b1c6:	add    esp,0xc
 100b1c9:	cmp    eax,edi
 100b1cb:	jne    0x100b1dc
 100b1cd:	mov    eax,DWORD PTR [esi+0xc]
 100b1d0:	test   al,al
 100b1d2:	jns    0x100b1e3
 100b1d4:	and    eax,0xfffffffd
 100b1d7:	mov    DWORD PTR [esi+0xc],eax
 100b1da:	jmp    0x100b1e3
 100b1dc:	or     DWORD PTR [esi+0xc],0x20
 100b1e0:	or     ebx,0xffffffff
 100b1e3:	pop    edi
 100b1e4:	mov    eax,DWORD PTR [esi+0x8]
 100b1e7:	and    DWORD PTR [esi+0x4],0x0
 100b1eb:	mov    DWORD PTR [esi],eax
 100b1ed:	pop    esi
 100b1ee:	mov    eax,ebx
 100b1f0:	pop    ebx
 100b1f1:	pop    ebp
 100b1f2:	ret    
 100b1f3:	int3   
 100b1f4:	int3   
 100b1f5:	int3   
 100b1f6:	int3   
 100b1f7:	int3   
 100b1f8:	mov    edi,edi
 100b1fa:	push   ebp
 100b1fb:	mov    ebp,esp
 100b1fd:	push   esi
 100b1fe:	mov    esi,DWORD PTR [ebp+0x8]
 100b201:	test   esi,esi
 100b203:	jne    0x100b20e
 100b205:	push   esi
 100b206:	call   0x100b245
 100b20b:	pop    ecx
 100b20c:	jmp    0x100b23d
 100b20e:	push   esi
 100b20f:	call   0x100b18b
 100b214:	pop    ecx
 100b215:	test   eax,eax
 100b217:	je     0x100b21e
 100b219:	or     eax,0xffffffff
 100b21c:	jmp    0x100b23d
 100b21e:	test   DWORD PTR [esi+0xc],0x4000
 100b225:	je     0x100b23b
 100b227:	push   esi
 100b228:	call   0x100b12a
 100b22d:	push   eax
 100b22e:	call   0x100ede4
 100b233:	pop    ecx
 100b234:	neg    eax
 100b236:	pop    ecx
 100b237:	sbb    eax,eax
 100b239:	jmp    0x100b23d
 100b23b:	xor    eax,eax
 100b23d:	pop    esi
 100b23e:	pop    ebp
 100b23f:	ret    
 100b240:	int3   
 100b241:	int3   
 100b242:	int3   
 100b243:	int3   
 100b244:	int3   
 100b245:	push   0x14
 100b247:	push   0x1011b70
 100b24c:	call   0x1009cd0
 100b251:	xor    edi,edi
 100b253:	mov    DWORD PTR [ebp-0x1c],edi
 100b256:	mov    DWORD PTR [ebp-0x24],edi
 100b259:	push   0x1
 100b25b:	call   0x100d473
 100b260:	pop    ecx
 100b261:	mov    DWORD PTR [ebp-0x4],edi
 100b264:	xor    esi,esi
 100b266:	mov    DWORD PTR [ebp-0x20],esi
 100b269:	cmp    esi,DWORD PTR ds:0x1015fc0
 100b26f:	jge    0x100b2f8
 100b275:	mov    eax,ds:0x1014fb8
 100b27a:	lea    eax,[eax+esi*4]
 100b27d:	cmp    DWORD PTR [eax],edi
 100b27f:	je     0x100b2df
 100b281:	mov    eax,DWORD PTR [eax]
 100b283:	test   BYTE PTR [eax+0xc],0x83
 100b287:	je     0x100b2df
 100b289:	push   eax
 100b28a:	push   esi
 100b28b:	call   0x100b45e
 100b290:	pop    ecx
 100b291:	pop    ecx
 100b292:	xor    edx,edx
 100b294:	inc    edx
 100b295:	mov    DWORD PTR [ebp-0x4],edx
 100b298:	mov    eax,ds:0x1014fb8
 100b29d:	mov    eax,DWORD PTR [eax+esi*4]
 100b2a0:	mov    ecx,DWORD PTR [eax+0xc]
 100b2a3:	test   cl,0x83
 100b2a6:	je     0x100b2d7
 100b2a8:	cmp    DWORD PTR [ebp+0x8],edx
 100b2ab:	jne    0x100b2be
 100b2ad:	push   eax
 100b2ae:	call   0x100b1f8
 100b2b3:	pop    ecx
 100b2b4:	cmp    eax,0xffffffff
 100b2b7:	je     0x100b2d7
 100b2b9:	inc    DWORD PTR [ebp-0x1c]
 100b2bc:	jmp    0x100b2d7
 100b2be:	cmp    DWORD PTR [ebp+0x8],edi
 100b2c1:	jne    0x100b2d7
 100b2c3:	test   cl,0x2
 100b2c6:	je     0x100b2d7
 100b2c8:	push   eax
 100b2c9:	call   0x100b1f8
 100b2ce:	pop    ecx
 100b2cf:	cmp    eax,0xffffffff
 100b2d2:	jne    0x100b2d7
 100b2d4:	or     DWORD PTR [ebp-0x24],eax
 100b2d7:	mov    DWORD PTR [ebp-0x4],edi
 100b2da:	call   0x100b2e7
 100b2df:	inc    esi
 100b2e0:	jmp    0x100b266
 100b2e2:	xor    edi,edi
 100b2e4:	mov    esi,DWORD PTR [ebp-0x20]
 100b2e7:	mov    eax,ds:0x1014fb8
 100b2ec:	push   DWORD PTR [eax+esi*4]
 100b2ef:	push   esi
 100b2f0:	call   0x100b4d6
 100b2f5:	pop    ecx
 100b2f6:	pop    ecx
 100b2f7:	ret    
 100b2f8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100b2ff:	call   0x100b316
 100b304:	cmp    DWORD PTR [ebp+0x8],0x1
 100b308:	mov    eax,DWORD PTR [ebp-0x1c]
 100b30b:	je     0x100b310
 100b30d:	mov    eax,DWORD PTR [ebp-0x24]
 100b310:	call   0x1009d15
 100b315:	ret    
 100b316:	push   0x1
 100b318:	call   0x100d390
 100b31d:	pop    ecx
 100b31e:	ret    
 100b31f:	int3   
 100b320:	int3   
 100b321:	int3   
 100b322:	int3   
 100b323:	int3   
 100b324:	push   0x1
 100b326:	call   0x100b245
 100b32b:	pop    ecx
 100b32c:	ret    
 100b32d:	int3   
 100b32e:	int3   
 100b32f:	int3   
 100b330:	int3   
 100b331:	int3   
 100b332:	mov    eax,0x1013268
 100b337:	ret    
 100b338:	int3   
 100b339:	int3   
 100b33a:	int3   
 100b33b:	int3   
 100b33c:	int3   
 100b33d:	mov    eax,ds:0x1015fc0
 100b342:	push   esi
 100b343:	push   0x14
 100b345:	pop    esi
 100b346:	test   eax,eax
 100b348:	jne    0x100b351
 100b34a:	mov    eax,0x200
 100b34f:	jmp    0x100b357
 100b351:	cmp    eax,esi
 100b353:	jge    0x100b35c
 100b355:	mov    eax,esi
 100b357:	mov    ds:0x1015fc0,eax
 100b35c:	push   0x4
 100b35e:	push   eax
 100b35f:	call   0x100dcb9
 100b364:	pop    ecx
 100b365:	pop    ecx
 100b366:	mov    ds:0x1014fb8,eax
 100b36b:	test   eax,eax
 100b36d:	jne    0x100b38d
 100b36f:	push   0x4
 100b371:	push   esi
 100b372:	mov    DWORD PTR ds:0x1015fc0,esi
 100b378:	call   0x100dcb9
 100b37d:	pop    ecx
 100b37e:	pop    ecx
 100b37f:	mov    ds:0x1014fb8,eax
 100b384:	test   eax,eax
 100b386:	jne    0x100b38d
 100b388:	push   0x1a
 100b38a:	pop    eax
 100b38b:	pop    esi
 100b38c:	ret    
 100b38d:	xor    edx,edx
 100b38f:	mov    ecx,0x1013268
 100b394:	jmp    0x100b39b
 100b396:	mov    eax,ds:0x1014fb8
 100b39b:	mov    DWORD PTR [edx+eax*1],ecx
 100b39e:	add    ecx,0x20
 100b3a1:	add    edx,0x4
 100b3a4:	cmp    ecx,0x10134e8
 100b3aa:	jl     0x100b396
 100b3ac:	push   0xfffffffe
 100b3ae:	pop    esi
 100b3af:	xor    edx,edx
 100b3b1:	mov    ecx,0x1013278
 100b3b6:	push   edi
 100b3b7:	mov    eax,edx
 100b3b9:	sar    eax,0x5
 100b3bc:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100b3c3:	mov    edi,edx
 100b3c5:	and    edi,0x1f
 100b3c8:	shl    edi,0x6
 100b3cb:	mov    eax,DWORD PTR [edi+eax*1]
 100b3ce:	cmp    eax,0xffffffff
 100b3d1:	je     0x100b3db
 100b3d3:	cmp    eax,esi
 100b3d5:	je     0x100b3db
 100b3d7:	test   eax,eax
 100b3d9:	jne    0x100b3dd
 100b3db:	mov    DWORD PTR [ecx],esi
 100b3dd:	add    ecx,0x20
 100b3e0:	inc    edx
 100b3e1:	cmp    ecx,0x10132d8
 100b3e7:	jl     0x100b3b7
 100b3e9:	pop    edi
 100b3ea:	xor    eax,eax
 100b3ec:	pop    esi
 100b3ed:	ret    
 100b3ee:	int3   
 100b3ef:	int3   
 100b3f0:	int3   
 100b3f1:	int3   
 100b3f2:	int3   
 100b3f3:	call   0x100b324
 100b3f8:	cmp    BYTE PTR ds:0x1014318,0x0
 100b3ff:	je     0x100b406
 100b401:	call   0x100eec2
 100b406:	push   DWORD PTR ds:0x1014fb8
 100b40c:	call   0x100af81
 100b411:	pop    ecx
 100b412:	ret    
 100b413:	int3   
 100b414:	int3   
 100b415:	int3   
 100b416:	int3   
 100b417:	int3   
 100b418:	mov    edi,edi
 100b41a:	push   ebp
 100b41b:	mov    ebp,esp
 100b41d:	push   esi
 100b41e:	mov    esi,DWORD PTR [ebp+0x8]
 100b421:	mov    eax,0x1013268
 100b426:	cmp    esi,eax
 100b428:	jb     0x100b44c
 100b42a:	cmp    esi,0x10134c8
 100b430:	ja     0x100b44c
 100b432:	mov    ecx,esi
 100b434:	sub    ecx,eax
 100b436:	sar    ecx,0x5
 100b439:	add    ecx,0x10
 100b43c:	push   ecx
 100b43d:	call   0x100d473
 100b442:	or     DWORD PTR [esi+0xc],0x8000
 100b449:	pop    ecx
 100b44a:	jmp    0x100b456
 100b44c:	add    esi,0x20
 100b44f:	push   esi
 100b450:	call   DWORD PTR ds:0x1001118
 100b456:	pop    esi
 100b457:	pop    ebp
 100b458:	ret    
 100b459:	int3   
 100b45a:	int3   
 100b45b:	int3   
 100b45c:	int3   
 100b45d:	int3   
 100b45e:	mov    edi,edi
 100b460:	push   ebp
 100b461:	mov    ebp,esp
 100b463:	mov    eax,DWORD PTR [ebp+0x8]
 100b466:	cmp    eax,0x14
 100b469:	jge    0x100b481
 100b46b:	add    eax,0x10
 100b46e:	push   eax
 100b46f:	call   0x100d473
 100b474:	mov    eax,DWORD PTR [ebp+0xc]
 100b477:	or     DWORD PTR [eax+0xc],0x8000
 100b47e:	pop    ecx
 100b47f:	pop    ebp
 100b480:	ret    
 100b481:	mov    eax,DWORD PTR [ebp+0xc]
 100b484:	add    eax,0x20
 100b487:	push   eax
 100b488:	call   DWORD PTR ds:0x1001118
 100b48e:	pop    ebp
 100b48f:	ret    
 100b490:	int3   
 100b491:	int3   
 100b492:	int3   
 100b493:	int3   
 100b494:	int3   
 100b495:	mov    edi,edi
 100b497:	push   ebp
 100b498:	mov    ebp,esp
 100b49a:	mov    eax,DWORD PTR [ebp+0x8]
 100b49d:	mov    ecx,0x1013268
 100b4a2:	cmp    eax,ecx
 100b4a4:	jb     0x100b4c5
 100b4a6:	cmp    eax,0x10134c8
 100b4ab:	ja     0x100b4c5
 100b4ad:	and    DWORD PTR [eax+0xc],0xffff7fff
 100b4b4:	sub    eax,ecx
 100b4b6:	sar    eax,0x5
 100b4b9:	add    eax,0x10
 100b4bc:	push   eax
 100b4bd:	call   0x100d390
 100b4c2:	pop    ecx
 100b4c3:	pop    ebp
 100b4c4:	ret    
 100b4c5:	add    eax,0x20
 100b4c8:	push   eax
 100b4c9:	call   DWORD PTR ds:0x1001114
 100b4cf:	pop    ebp
 100b4d0:	ret    
 100b4d1:	int3   
 100b4d2:	int3   
 100b4d3:	int3   
 100b4d4:	int3   
 100b4d5:	int3   
 100b4d6:	mov    edi,edi
 100b4d8:	push   ebp
 100b4d9:	mov    ebp,esp
 100b4db:	mov    ecx,DWORD PTR [ebp+0x8]
 100b4de:	mov    eax,DWORD PTR [ebp+0xc]
 100b4e1:	cmp    ecx,0x14
 100b4e4:	jge    0x100b4f9
 100b4e6:	and    DWORD PTR [eax+0xc],0xffff7fff
 100b4ed:	add    ecx,0x10
 100b4f0:	push   ecx
 100b4f1:	call   0x100d390
 100b4f6:	pop    ecx
 100b4f7:	pop    ebp
 100b4f8:	ret    
 100b4f9:	add    eax,0x20
 100b4fc:	push   eax
 100b4fd:	call   DWORD PTR ds:0x1001114
 100b503:	pop    ebp
 100b504:	ret    
 100b505:	int3   
 100b506:	int3   
 100b507:	int3   
 100b508:	int3   
 100b509:	int3   
 100b50a:	mov    edi,edi
 100b50c:	push   ebp
 100b50d:	mov    ebp,esp
 100b50f:	push   esi
 100b510:	mov    esi,DWORD PTR [ebp+0x8]
 100b513:	push   esi
 100b514:	call   0x100b12a
 100b519:	push   eax
 100b51a:	call   0x100e6ff
 100b51f:	pop    ecx
 100b520:	pop    ecx
 100b521:	test   eax,eax
 100b523:	je     0x100b5a1
 100b525:	call   0x100b332
 100b52a:	add    eax,0x20
 100b52d:	cmp    esi,eax
 100b52f:	jne    0x100b535
 100b531:	xor    eax,eax
 100b533:	jmp    0x100b544
 100b535:	call   0x100b332
 100b53a:	add    eax,0x40
 100b53d:	cmp    esi,eax
 100b53f:	jne    0x100b5a1
 100b541:	xor    eax,eax
 100b543:	inc    eax
 100b544:	inc    DWORD PTR ds:0x1014a70
 100b54a:	test   DWORD PTR [esi+0xc],0x10c
 100b551:	jne    0x100b5a1
 100b553:	push   ebx
 100b554:	push   edi
 100b555:	lea    edi,[eax*4+0x1014a74]
 100b55c:	cmp    DWORD PTR [edi],0x0
 100b55f:	mov    ebx,0x1000
 100b564:	jne    0x100b586
 100b566:	push   ebx
 100b567:	call   0x100dc6f
 100b56c:	pop    ecx
 100b56d:	mov    DWORD PTR [edi],eax
 100b56f:	test   eax,eax
 100b571:	jne    0x100b586
 100b573:	lea    eax,[esi+0x14]
 100b576:	push   0x2
 100b578:	mov    DWORD PTR [esi+0x8],eax
 100b57b:	mov    DWORD PTR [esi],eax
 100b57d:	pop    eax
 100b57e:	mov    DWORD PTR [esi+0x18],eax
 100b581:	mov    DWORD PTR [esi+0x4],eax
 100b584:	jmp    0x100b593
 100b586:	mov    edi,DWORD PTR [edi]
 100b588:	mov    DWORD PTR [esi+0x8],edi
 100b58b:	mov    DWORD PTR [esi],edi
 100b58d:	mov    DWORD PTR [esi+0x18],ebx
 100b590:	mov    DWORD PTR [esi+0x4],ebx
 100b593:	or     DWORD PTR [esi+0xc],0x1102
 100b59a:	xor    eax,eax
 100b59c:	pop    edi
 100b59d:	inc    eax
 100b59e:	pop    ebx
 100b59f:	jmp    0x100b5a3
 100b5a1:	xor    eax,eax
 100b5a3:	pop    esi
 100b5a4:	pop    ebp
 100b5a5:	ret    
 100b5a6:	int3   
 100b5a7:	int3   
 100b5a8:	int3   
 100b5a9:	int3   
 100b5aa:	int3   
 100b5ab:	mov    edi,edi
 100b5ad:	push   ebp
 100b5ae:	mov    ebp,esp
 100b5b0:	cmp    DWORD PTR [ebp+0x8],0x0
 100b5b4:	je     0x100b5dd
 100b5b6:	push   esi
 100b5b7:	mov    esi,DWORD PTR [ebp+0xc]
 100b5ba:	test   DWORD PTR [esi+0xc],0x1000
 100b5c1:	je     0x100b5dc
 100b5c3:	push   esi
 100b5c4:	call   0x100b18b
 100b5c9:	and    DWORD PTR [esi+0xc],0xffffeeff
 100b5d0:	and    DWORD PTR [esi+0x18],0x0
 100b5d4:	and    DWORD PTR [esi],0x0
 100b5d7:	and    DWORD PTR [esi+0x8],0x0
 100b5db:	pop    ecx
 100b5dc:	pop    esi
 100b5dd:	pop    ebp
 100b5de:	ret    
 100b5df:	int3   
 100b5e0:	int3   
 100b5e1:	int3   
 100b5e2:	int3   
 100b5e3:	int3   
 100b5e4:	mov    edi,edi
 100b5e6:	push   ebp
 100b5e7:	mov    ebp,esp
 100b5e9:	sub    esp,0xc
 100b5ec:	push   ebx
 100b5ed:	push   esi
 100b5ee:	push   edi
 100b5ef:	mov    edi,DWORD PTR [ebp+0xc]
 100b5f2:	test   edi,edi
 100b5f4:	je     0x100b613
 100b5f6:	cmp    DWORD PTR [ebp+0x10],0x0
 100b5fa:	je     0x100b613
 100b5fc:	mov    esi,DWORD PTR [ebp+0x14]
 100b5ff:	test   esi,esi
 100b601:	jne    0x100b61a
 100b603:	call   0x100af29
 100b608:	mov    DWORD PTR [eax],0x16
 100b60e:	call   0x100aecd
 100b613:	xor    eax,eax
 100b615:	pop    edi
 100b616:	pop    esi
 100b617:	pop    ebx
 100b618:	leave  
 100b619:	ret    
 100b61a:	mov    ecx,DWORD PTR [ebp+0x8]
 100b61d:	test   ecx,ecx
 100b61f:	je     0x100b603
 100b621:	or     eax,0xffffffff
 100b624:	xor    edx,edx
 100b626:	div    edi
 100b628:	cmp    DWORD PTR [ebp+0x10],eax
 100b62b:	ja     0x100b603
 100b62d:	imul   edi,DWORD PTR [ebp+0x10]
 100b631:	test   DWORD PTR [esi+0xc],0x10c
 100b638:	mov    DWORD PTR [ebp-0x4],ecx
 100b63b:	mov    DWORD PTR [ebp-0xc],edi
 100b63e:	mov    ebx,edi
 100b640:	je     0x100b64a
 100b642:	mov    eax,DWORD PTR [esi+0x18]
 100b645:	mov    DWORD PTR [ebp-0x8],eax
 100b648:	jmp    0x100b651
 100b64a:	mov    DWORD PTR [ebp-0x8],0x1000
 100b651:	test   edi,edi
 100b653:	je     0x100b718
 100b659:	mov    ecx,DWORD PTR [esi+0xc]
 100b65c:	and    ecx,0x108
 100b662:	je     0x100b693
 100b664:	mov    eax,DWORD PTR [esi+0x4]
 100b667:	test   eax,eax
 100b669:	je     0x100b693
 100b66b:	js     0x100b720
 100b671:	mov    edi,ebx
 100b673:	cmp    ebx,eax
 100b675:	jb     0x100b679
 100b677:	mov    edi,eax
 100b679:	push   edi
 100b67a:	push   DWORD PTR [ebp-0x4]
 100b67d:	push   DWORD PTR [esi]
 100b67f:	call   0x100ef70
 100b684:	sub    DWORD PTR [esi+0x4],edi
 100b687:	add    DWORD PTR [esi],edi
 100b689:	add    esp,0xc
 100b68c:	sub    ebx,edi
 100b68e:	add    DWORD PTR [ebp-0x4],edi
 100b691:	jmp    0x100b6e2
 100b693:	cmp    ebx,DWORD PTR [ebp-0x8]
 100b696:	jb     0x100b6e7
 100b698:	test   ecx,ecx
 100b69a:	je     0x100b6a7
 100b69c:	push   esi
 100b69d:	call   0x100b18b
 100b6a2:	pop    ecx
 100b6a3:	test   eax,eax
 100b6a5:	jne    0x100b724
 100b6a7:	cmp    DWORD PTR [ebp-0x8],0x0
 100b6ab:	mov    edi,ebx
 100b6ad:	je     0x100b6b8
 100b6af:	xor    edx,edx
 100b6b1:	mov    eax,ebx
 100b6b3:	div    DWORD PTR [ebp-0x8]
 100b6b6:	sub    edi,edx
 100b6b8:	push   edi
 100b6b9:	push   DWORD PTR [ebp-0x4]
 100b6bc:	push   esi
 100b6bd:	call   0x100b12a
 100b6c2:	pop    ecx
 100b6c3:	push   eax
 100b6c4:	call   0x100e5d8
 100b6c9:	add    esp,0xc
 100b6cc:	cmp    eax,0xffffffff
 100b6cf:	je     0x100b732
 100b6d1:	mov    ecx,edi
 100b6d3:	cmp    eax,edi
 100b6d5:	ja     0x100b6d9
 100b6d7:	mov    ecx,eax
 100b6d9:	add    DWORD PTR [ebp-0x4],ecx
 100b6dc:	sub    ebx,ecx
 100b6de:	cmp    eax,edi
 100b6e0:	jb     0x100b732
 100b6e2:	mov    edi,DWORD PTR [ebp-0xc]
 100b6e5:	jmp    0x100b710
 100b6e7:	mov    eax,DWORD PTR [ebp-0x4]
 100b6ea:	movsx  eax,BYTE PTR [eax]
 100b6ed:	push   esi
 100b6ee:	push   eax
 100b6ef:	call   0x1009f64
 100b6f4:	pop    ecx
 100b6f5:	pop    ecx
 100b6f6:	cmp    eax,0xffffffff
 100b6f9:	je     0x100b724
 100b6fb:	inc    DWORD PTR [ebp-0x4]
 100b6fe:	mov    eax,DWORD PTR [esi+0x18]
 100b701:	dec    ebx
 100b702:	mov    DWORD PTR [ebp-0x8],eax
 100b705:	test   eax,eax
 100b707:	jg     0x100b710
 100b709:	mov    DWORD PTR [ebp-0x8],0x1
 100b710:	test   ebx,ebx
 100b712:	jne    0x100b659
 100b718:	mov    eax,DWORD PTR [ebp+0x10]
 100b71b:	jmp    0x100b615
 100b720:	or     DWORD PTR [esi+0xc],0x20
 100b724:	mov    eax,edi
 100b726:	sub    eax,ebx
 100b728:	xor    edx,edx
 100b72a:	div    DWORD PTR [ebp+0xc]
 100b72d:	jmp    0x100b615
 100b732:	or     DWORD PTR [esi+0xc],0x20
 100b736:	mov    eax,DWORD PTR [ebp-0xc]
 100b739:	jmp    0x100b726
 100b73b:	int3   
 100b73c:	int3   
 100b73d:	int3   
 100b73e:	int3   
 100b73f:	int3   
 100b740:	mov    ecx,DWORD PTR [esp+0x4]
 100b744:	test   ecx,0x3
 100b74a:	je     0x100b770
 100b74c:	mov    al,BYTE PTR [ecx]
 100b74e:	add    ecx,0x1
 100b751:	test   al,al
 100b753:	je     0x100b7a3
 100b755:	test   ecx,0x3
 100b75b:	jne    0x100b74c
 100b75d:	add    eax,0x0
 100b762:	lea    esp,[esp+0x0]
 100b769:	lea    esp,[esp+0x0]
 100b770:	mov    eax,DWORD PTR [ecx]
 100b772:	mov    edx,0x7efefeff
 100b777:	add    edx,eax
 100b779:	xor    eax,0xffffffff
 100b77c:	xor    eax,edx
 100b77e:	add    ecx,0x4
 100b781:	test   eax,0x81010100
 100b786:	je     0x100b770
 100b788:	mov    eax,DWORD PTR [ecx-0x4]
 100b78b:	test   al,al
 100b78d:	je     0x100b7c1
 100b78f:	test   ah,ah
 100b791:	je     0x100b7b7
 100b793:	test   eax,0xff0000
 100b798:	je     0x100b7ad
 100b79a:	test   eax,0xff000000
 100b79f:	je     0x100b7a3
 100b7a1:	jmp    0x100b770
 100b7a3:	lea    eax,[ecx-0x1]
 100b7a6:	mov    ecx,DWORD PTR [esp+0x4]
 100b7aa:	sub    eax,ecx
 100b7ac:	ret    
 100b7ad:	lea    eax,[ecx-0x2]
 100b7b0:	mov    ecx,DWORD PTR [esp+0x4]
 100b7b4:	sub    eax,ecx
 100b7b6:	ret    
 100b7b7:	lea    eax,[ecx-0x3]
 100b7ba:	mov    ecx,DWORD PTR [esp+0x4]
 100b7be:	sub    eax,ecx
 100b7c0:	ret    
 100b7c1:	lea    eax,[ecx-0x4]
 100b7c4:	mov    ecx,DWORD PTR [esp+0x4]
 100b7c8:	sub    eax,ecx
 100b7ca:	ret    
 100b7cb:	int3   
 100b7cc:	int3   
 100b7cd:	int3   
 100b7ce:	int3   
 100b7cf:	int3   
 100b7d0:	mov    edi,edi
 100b7d2:	push   ebp
 100b7d3:	mov    ebp,esp
 100b7d5:	sub    esp,0x10
 100b7d8:	mov    eax,ds:0x1014f58
 100b7dd:	push   ebx
 100b7de:	xor    ebx,ebx
 100b7e0:	push   esi
 100b7e1:	mov    esi,DWORD PTR [ebp+0xc]
 100b7e4:	mov    DWORD PTR [ebp-0x4],eax
 100b7e7:	mov    DWORD PTR [ebp-0xc],ebx
 100b7ea:	mov    DWORD PTR [ebp-0x8],ebx
 100b7ed:	mov    DWORD PTR [ebp-0x10],ebx
 100b7f0:	jmp    0x100b7f3
 100b7f2:	inc    esi
 100b7f3:	cmp    BYTE PTR [esi],0x20
 100b7f6:	je     0x100b7f2
 100b7f8:	mov    al,BYTE PTR [esi]
 100b7fa:	cmp    al,0x61
 100b7fc:	je     0x100b82a
 100b7fe:	cmp    al,0x72
 100b800:	je     0x100b824
 100b802:	cmp    al,0x77
 100b804:	je     0x100b81d
 100b806:	call   0x100af29
 100b80b:	mov    DWORD PTR [eax],0x16
 100b811:	call   0x100aecd
 100b816:	xor    eax,eax
 100b818:	jmp    0x100ba63
 100b81d:	mov    ebx,0x301
 100b822:	jmp    0x100b82f
 100b824:	or     DWORD PTR [ebp-0x4],0x1
 100b828:	jmp    0x100b833
 100b82a:	mov    ebx,0x109
 100b82f:	or     DWORD PTR [ebp-0x4],0x2
 100b833:	xor    ecx,ecx
 100b835:	inc    ecx
 100b836:	inc    esi
 100b837:	mov    al,BYTE PTR [esi]
 100b839:	push   edi
 100b83a:	test   al,al
 100b83c:	je     0x100ba04
 100b842:	lea    edi,[ecx+0x7f]
 100b845:	mov    edx,0x4000
 100b84a:	test   ecx,ecx
 100b84c:	je     0x100b96a
 100b852:	movsx  eax,al
 100b855:	cmp    eax,0x53
 100b858:	jg     0x100b8f1
 100b85e:	je     0x100b8df
 100b860:	sub    eax,0x20
 100b863:	je     0x100b95f
 100b869:	sub    eax,0xb
 100b86c:	je     0x100b8c0
 100b86e:	dec    eax
 100b86f:	je     0x100b8b4
 100b871:	sub    eax,0x18
 100b874:	je     0x100b8a3
 100b876:	sub    eax,0xa
 100b879:	je     0x100b89c
 100b87b:	sub    eax,0x4
 100b87e:	jne    0x100ba0e
 100b884:	cmp    DWORD PTR [ebp-0x8],eax
 100b887:	jne    0x100b959
 100b88d:	mov    DWORD PTR [ebp-0x8],0x1
 100b894:	or     ebx,0x10
 100b897:	jmp    0x100b95f
 100b89c:	or     ebx,edi
 100b89e:	jmp    0x100b95f
 100b8a3:	test   bl,0x40
 100b8a6:	jne    0x100b959
 100b8ac:	or     ebx,0x40
 100b8af:	jmp    0x100b95f
 100b8b4:	mov    DWORD PTR [ebp-0x10],0x1
 100b8bb:	jmp    0x100b959
 100b8c0:	test   bl,0x2
 100b8c3:	jne    0x100b959
 100b8c9:	mov    eax,DWORD PTR [ebp-0x4]
 100b8cc:	and    ebx,0xfffffffe
 100b8cf:	and    eax,0xfffffffc
 100b8d2:	or     ebx,0x2
 100b8d5:	or     eax,edi
 100b8d7:	mov    DWORD PTR [ebp-0x4],eax
 100b8da:	jmp    0x100b95f
 100b8df:	cmp    DWORD PTR [ebp-0x8],0x0
 100b8e3:	jne    0x100b959
 100b8e5:	mov    DWORD PTR [ebp-0x8],0x1
 100b8ec:	or     ebx,0x20
 100b8ef:	jmp    0x100b95f
 100b8f1:	sub    eax,0x54
 100b8f4:	je     0x100b950
 100b8f6:	sub    eax,0xe
 100b8f9:	je     0x100b940
 100b8fb:	dec    eax
 100b8fc:	je     0x100b92e
 100b8fe:	sub    eax,0xb
 100b901:	je     0x100b918
 100b903:	sub    eax,0x6
 100b906:	jne    0x100ba0e
 100b90c:	test   ebx,0xc000
 100b912:	jne    0x100b959
 100b914:	or     ebx,edx
 100b916:	jmp    0x100b95f
 100b918:	cmp    DWORD PTR [ebp-0xc],0x0
 100b91c:	jne    0x100b959
 100b91e:	and    DWORD PTR [ebp-0x4],0xffffbfff
 100b925:	mov    DWORD PTR [ebp-0xc],0x1
 100b92c:	jmp    0x100b95f
 100b92e:	cmp    DWORD PTR [ebp-0xc],0x0
 100b932:	jne    0x100b959
 100b934:	or     DWORD PTR [ebp-0x4],edx
 100b937:	mov    DWORD PTR [ebp-0xc],0x1
 100b93e:	jmp    0x100b95f
 100b940:	test   ebx,0xc000
 100b946:	jne    0x100b959
 100b948:	or     ebx,0x8000
 100b94e:	jmp    0x100b95f
 100b950:	mov    eax,0x1000
 100b955:	test   eax,ebx
 100b957:	je     0x100b95d
 100b959:	xor    ecx,ecx
 100b95b:	jmp    0x100b95f
 100b95d:	or     ebx,eax
 100b95f:	inc    esi
 100b960:	mov    al,BYTE PTR [esi]
 100b962:	test   al,al
 100b964:	jne    0x100b84a
 100b96a:	cmp    DWORD PTR [ebp-0x10],0x0
 100b96e:	je     0x100ba04
 100b974:	jmp    0x100b977
 100b976:	inc    esi
 100b977:	cmp    BYTE PTR [esi],0x20
 100b97a:	je     0x100b976
 100b97c:	push   0x3
 100b97e:	push   esi
 100b97f:	push   0x1002dac
 100b984:	call   0x100fe76
 100b989:	add    esp,0xc
 100b98c:	test   eax,eax
 100b98e:	jne    0x100ba0e
 100b990:	add    esi,0x3
 100b993:	jmp    0x100b996
 100b995:	inc    esi
 100b996:	cmp    BYTE PTR [esi],0x20
 100b999:	je     0x100b995
 100b99b:	cmp    BYTE PTR [esi],0x3d
 100b99e:	jne    0x100ba0e
 100b9a0:	inc    esi
 100b9a1:	cmp    BYTE PTR [esi],0x20
 100b9a4:	je     0x100b9a0
 100b9a6:	push   0x5
 100b9a8:	push   0x1002db0
 100b9ad:	push   esi
 100b9ae:	call   0x100fd06
 100b9b3:	add    esp,0xc
 100b9b6:	test   eax,eax
 100b9b8:	jne    0x100b9c5
 100b9ba:	add    esi,0x5
 100b9bd:	or     ebx,0x40000
 100b9c3:	jmp    0x100ba04
 100b9c5:	push   0x8
 100b9c7:	push   0x1002db8
 100b9cc:	push   esi
 100b9cd:	call   0x100fd06
 100b9d2:	add    esp,0xc
 100b9d5:	test   eax,eax
 100b9d7:	jne    0x100b9e4
 100b9d9:	add    esi,0x8
 100b9dc:	or     ebx,0x20000
 100b9e2:	jmp    0x100ba04
 100b9e4:	push   0x7
 100b9e6:	push   0x1002dc4
 100b9eb:	push   esi
 100b9ec:	call   0x100fd06
 100b9f1:	add    esp,0xc
 100b9f4:	test   eax,eax
 100b9f6:	jne    0x100ba0e
 100b9f8:	add    esi,0x7
 100b9fb:	or     ebx,0x10000
 100ba01:	jmp    0x100ba04
 100ba03:	inc    esi
 100ba04:	cmp    BYTE PTR [esi],0x20
 100ba07:	je     0x100ba03
 100ba09:	cmp    BYTE PTR [esi],0x0
 100ba0c:	je     0x100ba20
 100ba0e:	call   0x100af29
 100ba13:	mov    DWORD PTR [eax],0x16
 100ba19:	call   0x100aecd
 100ba1e:	jmp    0x100ba3c
 100ba20:	push   0x180
 100ba25:	push   DWORD PTR [ebp+0x10]
 100ba28:	lea    eax,[ebp+0xc]
 100ba2b:	push   ebx
 100ba2c:	push   DWORD PTR [ebp+0x8]
 100ba2f:	push   eax
 100ba30:	call   0x100fad8
 100ba35:	add    esp,0x14
 100ba38:	test   eax,eax
 100ba3a:	je     0x100ba40
 100ba3c:	xor    eax,eax
 100ba3e:	jmp    0x100ba62
 100ba40:	inc    DWORD PTR ds:0x1014a70
 100ba46:	mov    eax,DWORD PTR [ebp+0x14]
 100ba49:	mov    ecx,DWORD PTR [ebp-0x4]
 100ba4c:	mov    DWORD PTR [eax+0xc],ecx
 100ba4f:	xor    ecx,ecx
 100ba51:	mov    DWORD PTR [eax+0x4],ecx
 100ba54:	mov    DWORD PTR [eax],ecx
 100ba56:	mov    DWORD PTR [eax+0x8],ecx
 100ba59:	mov    DWORD PTR [eax+0x1c],ecx
 100ba5c:	mov    ecx,DWORD PTR [ebp+0xc]
 100ba5f:	mov    DWORD PTR [eax+0x10],ecx
 100ba62:	pop    edi
 100ba63:	pop    esi
 100ba64:	pop    ebx
 100ba65:	leave  
 100ba66:	ret    
 100ba67:	int3   
 100ba68:	int3   
 100ba69:	int3   
 100ba6a:	int3   
 100ba6b:	int3   
 100ba6c:	push   0x10
 100ba6e:	push   0x1011b98
 100ba73:	call   0x1009cd0
 100ba78:	xor    ebx,ebx
 100ba7a:	xor    edi,edi
 100ba7c:	mov    DWORD PTR [ebp-0x1c],edi
 100ba7f:	push   0x1
 100ba81:	call   0x100d473
 100ba86:	pop    ecx
 100ba87:	mov    DWORD PTR [ebp-0x4],ebx
 100ba8a:	xor    esi,esi
 100ba8c:	mov    DWORD PTR [ebp-0x20],esi
 100ba8f:	cmp    esi,DWORD PTR ds:0x1015fc0
 100ba95:	jge    0x100bb65
 100ba9b:	mov    eax,ds:0x1014fb8
 100baa0:	lea    eax,[eax+esi*4]
 100baa3:	cmp    DWORD PTR [eax],ebx
 100baa5:	je     0x100bb02
 100baa7:	mov    eax,DWORD PTR [eax]
 100baa9:	mov    eax,DWORD PTR [eax+0xc]
 100baac:	test   al,0x83
 100baae:	jne    0x100baf8
 100bab0:	test   eax,0x8000
 100bab5:	jne    0x100baf8
 100bab7:	lea    eax,[esi-0x3]
 100baba:	cmp    eax,0x10
 100babd:	ja     0x100bad1
 100babf:	lea    eax,[esi+0x10]
 100bac2:	push   eax
 100bac3:	call   0x100d3ac
 100bac8:	pop    ecx
 100bac9:	test   eax,eax
 100bacb:	je     0x100bb65
 100bad1:	mov    eax,ds:0x1014fb8
 100bad6:	push   DWORD PTR [eax+esi*4]
 100bad9:	push   esi
 100bada:	call   0x100b45e
 100badf:	pop    ecx
 100bae0:	pop    ecx
 100bae1:	mov    eax,ds:0x1014fb8
 100bae6:	mov    eax,DWORD PTR [eax+esi*4]
 100bae9:	test   BYTE PTR [eax+0xc],0x83
 100baed:	je     0x100bafb
 100baef:	push   eax
 100baf0:	push   esi
 100baf1:	call   0x100b4d6
 100baf6:	pop    ecx
 100baf7:	pop    ecx
 100baf8:	inc    esi
 100baf9:	jmp    0x100ba8c
 100bafb:	mov    edi,eax
 100bafd:	mov    DWORD PTR [ebp-0x1c],edi
 100bb00:	jmp    0x100bb65
 100bb02:	push   0x38
 100bb04:	call   0x100dc6f
 100bb09:	pop    ecx
 100bb0a:	mov    ecx,DWORD PTR ds:0x1014fb8
 100bb10:	mov    DWORD PTR [ecx+esi*4],eax
 100bb13:	cmp    eax,ebx
 100bb15:	je     0x100bb65
 100bb17:	push   0xfa0
 100bb1c:	mov    eax,ds:0x1014fb8
 100bb21:	mov    eax,DWORD PTR [eax+esi*4]
 100bb24:	add    eax,0x20
 100bb27:	push   eax
 100bb28:	call   DWORD PTR ds:0x1001168
 100bb2e:	test   eax,eax
 100bb30:	mov    eax,ds:0x1014fb8
 100bb35:	jne    0x100bb4a
 100bb37:	push   DWORD PTR [eax+esi*4]
 100bb3a:	call   0x100af81
 100bb3f:	pop    ecx
 100bb40:	mov    eax,ds:0x1014fb8
 100bb45:	mov    DWORD PTR [eax+esi*4],ebx
 100bb48:	jmp    0x100bb65
 100bb4a:	mov    eax,DWORD PTR [eax+esi*4]
 100bb4d:	add    eax,0x20
 100bb50:	push   eax
 100bb51:	call   DWORD PTR ds:0x1001118
 100bb57:	mov    eax,ds:0x1014fb8
 100bb5c:	mov    edi,DWORD PTR [eax+esi*4]
 100bb5f:	mov    DWORD PTR [ebp-0x1c],edi
 100bb62:	mov    DWORD PTR [edi+0xc],ebx
 100bb65:	cmp    edi,ebx
 100bb67:	je     0x100bb7f
 100bb69:	and    DWORD PTR [edi+0xc],0x8000
 100bb70:	mov    DWORD PTR [edi+0x4],ebx
 100bb73:	mov    DWORD PTR [edi+0x8],ebx
 100bb76:	mov    DWORD PTR [edi],ebx
 100bb78:	mov    DWORD PTR [edi+0x1c],ebx
 100bb7b:	or     DWORD PTR [edi+0x10],0xffffffff
 100bb7f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100bb86:	call   0x100bb96
 100bb8b:	mov    eax,edi
 100bb8d:	call   0x1009d15
 100bb92:	ret    
 100bb93:	mov    edi,DWORD PTR [ebp-0x1c]
 100bb96:	push   0x1
 100bb98:	call   0x100d390
 100bb9d:	pop    ecx
 100bb9e:	ret    
 100bb9f:	int3   
 100bba0:	int3   
 100bba1:	int3   
 100bba2:	int3   
 100bba3:	int3   
 100bba4:	int3   
 100bba5:	int3   
 100bba6:	int3   
 100bba7:	int3   
 100bba8:	int3   
 100bba9:	int3   
 100bbaa:	int3   
 100bbab:	int3   
 100bbac:	int3   
 100bbad:	int3   
 100bbae:	int3   
 100bbaf:	int3   
 100bbb0:	push   ebx
 100bbb1:	push   esi
 100bbb2:	push   edi
 100bbb3:	mov    edx,DWORD PTR [esp+0x10]
 100bbb7:	mov    eax,DWORD PTR [esp+0x14]
 100bbbb:	mov    ecx,DWORD PTR [esp+0x18]
 100bbbf:	push   ebp
 100bbc0:	push   edx
 100bbc1:	push   eax
 100bbc2:	push   ecx
 100bbc3:	push   ecx
 100bbc4:	push   0x100bc40
 100bbc9:	push   DWORD PTR fs:0x0
 100bbd0:	mov    eax,ds:0x1013054
 100bbd5:	xor    eax,esp
 100bbd7:	mov    DWORD PTR [esp+0x8],eax
 100bbdb:	mov    DWORD PTR fs:0x0,esp
 100bbe2:	mov    eax,DWORD PTR [esp+0x30]
 100bbe6:	mov    ebx,DWORD PTR [eax+0x8]
 100bbe9:	mov    ecx,DWORD PTR [esp+0x2c]
 100bbed:	xor    ebx,DWORD PTR [ecx]
 100bbef:	mov    esi,DWORD PTR [eax+0xc]
 100bbf2:	cmp    esi,0xfffffffe
 100bbf5:	je     0x100bc32
 100bbf7:	mov    edx,DWORD PTR [esp+0x34]
 100bbfb:	cmp    edx,0xfffffffe
 100bbfe:	je     0x100bc04
 100bc00:	cmp    esi,edx
 100bc02:	jbe    0x100bc32
 100bc04:	lea    esi,[esi+esi*2]
 100bc07:	lea    ebx,[ebx+esi*4+0x10]
 100bc0b:	mov    ecx,DWORD PTR [ebx]
 100bc0d:	mov    DWORD PTR [eax+0xc],ecx
 100bc10:	cmp    DWORD PTR [ebx+0x4],0x0
 100bc14:	jne    0x100bbe2
 100bc16:	push   0x101
 100bc1b:	mov    eax,DWORD PTR [ebx+0x8]
 100bc1e:	call   0x100ffb5
 100bc23:	mov    ecx,0x1
 100bc28:	mov    eax,DWORD PTR [ebx+0x8]
 100bc2b:	call   0x100ffd4
 100bc30:	jmp    0x100bbe2
 100bc32:	pop    DWORD PTR fs:0x0
 100bc39:	add    esp,0x18
 100bc3c:	pop    edi
 100bc3d:	pop    esi
 100bc3e:	pop    ebx
 100bc3f:	ret    
 100bc40:	mov    ecx,DWORD PTR [esp+0x4]
 100bc44:	test   DWORD PTR [ecx+0x4],0x6
 100bc4b:	mov    eax,0x1
 100bc50:	je     0x100bc85
 100bc52:	mov    eax,DWORD PTR [esp+0x8]
 100bc56:	mov    ecx,DWORD PTR [eax+0x8]
 100bc59:	xor    ecx,eax
 100bc5b:	call   0x1008355
 100bc60:	push   ebp
 100bc61:	mov    ebp,DWORD PTR [eax+0x18]
 100bc64:	push   DWORD PTR [eax+0xc]
 100bc67:	push   DWORD PTR [eax+0x10]
 100bc6a:	push   DWORD PTR [eax+0x14]
 100bc6d:	call   0x100bbb0
 100bc72:	add    esp,0xc
 100bc75:	pop    ebp
 100bc76:	mov    eax,DWORD PTR [esp+0x8]
 100bc7a:	mov    edx,DWORD PTR [esp+0x10]
 100bc7e:	mov    DWORD PTR [edx],eax
 100bc80:	mov    eax,0x3
 100bc85:	ret    
 100bc86:	push   ebp
 100bc87:	mov    ecx,DWORD PTR [esp+0x8]
 100bc8b:	mov    ebp,DWORD PTR [ecx]
 100bc8d:	push   DWORD PTR [ecx+0x1c]
 100bc90:	push   DWORD PTR [ecx+0x18]
 100bc93:	push   DWORD PTR [ecx+0x28]
 100bc96:	call   0x100bbb0
 100bc9b:	add    esp,0xc
 100bc9e:	pop    ebp
 100bc9f:	ret    0x4
 100bca2:	push   ebp
 100bca3:	push   esi
 100bca4:	push   edi
 100bca5:	push   ebx
 100bca6:	mov    ebp,edx
 100bca8:	xor    eax,eax
 100bcaa:	xor    ebx,ebx
 100bcac:	xor    edx,edx
 100bcae:	xor    esi,esi
 100bcb0:	xor    edi,edi
 100bcb2:	call   ecx
 100bcb4:	pop    ebx
 100bcb5:	pop    edi
 100bcb6:	pop    esi
 100bcb7:	pop    ebp
 100bcb8:	ret    
 100bcb9:	mov    ebp,edx
 100bcbb:	mov    esi,ecx
 100bcbd:	mov    eax,ecx
 100bcbf:	push   0x1
 100bcc1:	call   0x100ffb5
 100bcc6:	xor    eax,eax
 100bcc8:	xor    ebx,ebx
 100bcca:	xor    ecx,ecx
 100bccc:	xor    edx,edx
 100bcce:	xor    edi,edi
 100bcd0:	jmp    esi
 100bcd2:	push   ebp
 100bcd3:	mov    ebp,esp
 100bcd5:	push   ebx
 100bcd6:	push   esi
 100bcd7:	push   edi
 100bcd8:	push   0x0
 100bcda:	push   edx
 100bcdb:	push   0x100bce6
 100bce0:	push   ecx
 100bce1:	call   0x10119ea
 100bce6:	pop    edi
 100bce7:	pop    esi
 100bce8:	pop    ebx
 100bce9:	pop    ebp
 100bcea:	ret    
 100bceb:	push   ebp
 100bcec:	mov    ebp,DWORD PTR [esp+0x8]
 100bcf0:	push   edx
 100bcf1:	push   ecx
 100bcf2:	push   DWORD PTR [esp+0x14]
 100bcf6:	call   0x100bbb0
 100bcfb:	add    esp,0xc
 100bcfe:	pop    ebp
 100bcff:	ret    0x8
 100bd02:	int3   
 100bd03:	int3   
 100bd04:	int3   
 100bd05:	int3   
 100bd06:	int3   
 100bd07:	mov    edi,edi
 100bd09:	push   ebp
 100bd0a:	mov    ebp,esp
 100bd0c:	sub    esp,0x328
 100bd12:	mov    ds:0x1014b88,eax
 100bd17:	mov    DWORD PTR ds:0x1014b84,ecx
 100bd1d:	mov    DWORD PTR ds:0x1014b80,edx
 100bd23:	mov    DWORD PTR ds:0x1014b7c,ebx
 100bd29:	mov    DWORD PTR ds:0x1014b78,esi
 100bd2f:	mov    DWORD PTR ds:0x1014b74,edi
 100bd35:	data16 mov WORD PTR ds:0x1014ba0,ss
 100bd3c:	data16 mov WORD PTR ds:0x1014b94,cs
 100bd43:	data16 mov WORD PTR ds:0x1014b70,ds
 100bd4a:	data16 mov WORD PTR ds:0x1014b6c,es
 100bd51:	data16 mov WORD PTR ds:0x1014b68,fs
 100bd58:	data16 mov WORD PTR ds:0x1014b64,gs
 100bd5f:	pushf  
 100bd60:	pop    DWORD PTR ds:0x1014b98
 100bd66:	mov    eax,DWORD PTR [ebp+0x0]
 100bd69:	mov    ds:0x1014b8c,eax
 100bd6e:	mov    eax,DWORD PTR [ebp+0x4]
 100bd71:	mov    ds:0x1014b90,eax
 100bd76:	lea    eax,[ebp+0x8]
 100bd79:	mov    ds:0x1014b9c,eax
 100bd7e:	mov    eax,DWORD PTR [ebp-0x320]
 100bd84:	mov    DWORD PTR ds:0x1014ad8,0x10001
 100bd8e:	mov    eax,ds:0x1014b90
 100bd93:	mov    ds:0x1014a8c,eax
 100bd98:	mov    DWORD PTR ds:0x1014a80,0xc0000409
 100bda2:	mov    DWORD PTR ds:0x1014a84,0x1
 100bdac:	mov    eax,ds:0x1013054
 100bdb1:	mov    DWORD PTR [ebp-0x328],eax
 100bdb7:	mov    eax,ds:0x1013058
 100bdbc:	mov    DWORD PTR [ebp-0x324],eax
 100bdc2:	call   DWORD PTR ds:0x10011b0
 100bdc8:	mov    ds:0x1014ad0,eax
 100bdcd:	push   0x1
 100bdcf:	call   0x100e9ea
 100bdd4:	pop    ecx
 100bdd5:	push   0x0
 100bdd7:	call   DWORD PTR ds:0x100113c
 100bddd:	push   0x1002dcc
 100bde2:	call   DWORD PTR ds:0x10011ac
 100bde8:	cmp    DWORD PTR ds:0x1014ad0,0x0
 100bdef:	jne    0x100bdf9
 100bdf1:	push   0x1
 100bdf3:	call   0x100e9ea
 100bdf8:	pop    ecx
 100bdf9:	push   0xc0000409
 100bdfe:	call   DWORD PTR ds:0x1001074
 100be04:	push   eax
 100be05:	call   DWORD PTR ds:0x10011b4
 100be0b:	leave  
 100be0c:	ret    
 100be0d:	int3   
 100be0e:	int3   
 100be0f:	int3   
 100be10:	int3   
 100be11:	int3   
 100be12:	mov    edi,edi
 100be14:	push   ebp
 100be15:	mov    ebp,esp
 100be17:	mov    eax,ecx
 100be19:	mov    ecx,DWORD PTR [ebp+0x8]
 100be1c:	mov    DWORD PTR [eax],0x1002dd8
 100be22:	mov    ecx,DWORD PTR [ecx]
 100be24:	mov    DWORD PTR [eax+0x4],ecx
 100be27:	mov    BYTE PTR [eax+0x8],0x0
 100be2b:	pop    ebp
 100be2c:	ret    0x8
 100be2f:	int3   
 100be30:	int3   
 100be31:	int3   
 100be32:	int3   
 100be33:	int3   
 100be34:	mov    eax,DWORD PTR [ecx+0x4]
 100be37:	test   eax,eax
 100be39:	jne    0x100be40
 100be3b:	mov    eax,0x1002de0
 100be40:	ret    
 100be41:	int3   
 100be42:	int3   
 100be43:	int3   
 100be44:	int3   
 100be45:	int3   
 100be46:	mov    edi,edi
 100be48:	push   ebp
 100be49:	mov    ebp,esp
 100be4b:	cmp    DWORD PTR [ebp+0x8],0x0
 100be4f:	push   edi
 100be50:	mov    edi,ecx
 100be52:	je     0x100be81
 100be54:	push   esi
 100be55:	push   DWORD PTR [ebp+0x8]
 100be58:	call   0x100b740
 100be5d:	lea    esi,[eax+0x1]
 100be60:	push   esi
 100be61:	call   0x100c0d7
 100be66:	pop    ecx
 100be67:	pop    ecx
 100be68:	mov    DWORD PTR [edi+0x4],eax
 100be6b:	test   eax,eax
 100be6d:	je     0x100be80
 100be6f:	push   DWORD PTR [ebp+0x8]
 100be72:	push   esi
 100be73:	push   eax
 100be74:	call   0x100cd34
 100be79:	add    esp,0xc
 100be7c:	mov    BYTE PTR [edi+0x8],0x1
 100be80:	pop    esi
 100be81:	pop    edi
 100be82:	pop    ebp
 100be83:	ret    0x4
 100be86:	int3   
 100be87:	int3   
 100be88:	int3   
 100be89:	int3   
 100be8a:	int3   
 100be8b:	mov    edi,edi
 100be8d:	push   esi
 100be8e:	mov    esi,ecx
 100be90:	cmp    BYTE PTR [esi+0x8],0x0
 100be94:	je     0x100be9f
 100be96:	push   DWORD PTR [esi+0x4]
 100be99:	call   0x100af81
 100be9e:	pop    ecx
 100be9f:	and    DWORD PTR [esi+0x4],0x0
 100bea3:	mov    BYTE PTR [esi+0x8],0x0
 100bea7:	pop    esi
 100bea8:	ret    
 100bea9:	int3   
 100beaa:	int3   
 100beab:	int3   
 100beac:	int3   
 100bead:	int3   
 100beae:	mov    edi,edi
 100beb0:	push   ebp
 100beb1:	mov    ebp,esp
 100beb3:	push   esi
 100beb4:	mov    esi,DWORD PTR [ebp+0x8]
 100beb7:	push   edi
 100beb8:	mov    edi,ecx
 100beba:	cmp    edi,esi
 100bebc:	je     0x100bedb
 100bebe:	call   0x100be8b
 100bec3:	cmp    BYTE PTR [esi+0x8],0x0
 100bec7:	je     0x100bed5
 100bec9:	push   DWORD PTR [esi+0x4]
 100becc:	mov    ecx,edi
 100bece:	call   0x100be46
 100bed3:	jmp    0x100bedb
 100bed5:	mov    eax,DWORD PTR [esi+0x4]
 100bed8:	mov    DWORD PTR [edi+0x4],eax
 100bedb:	mov    eax,edi
 100bedd:	pop    edi
 100bede:	pop    esi
 100bedf:	pop    ebp
 100bee0:	ret    0x4
 100bee3:	int3   
 100bee4:	int3   
 100bee5:	int3   
 100bee6:	int3   
 100bee7:	int3   
 100bee8:	mov    DWORD PTR [ecx],0x1002dd8
 100beee:	jmp    0x100be8b
 100bef3:	int3   
 100bef4:	int3   
 100bef5:	int3   
 100bef6:	int3   
 100bef7:	int3   
 100bef8:	mov    edi,edi
 100befa:	push   ebp
 100befb:	mov    ebp,esp
 100befd:	push   esi
 100befe:	mov    esi,ecx
 100bf00:	mov    DWORD PTR [esi],0x1002dd8
 100bf06:	call   0x100be8b
 100bf0b:	test   BYTE PTR [ebp+0x8],0x1
 100bf0f:	je     0x100bf18
 100bf11:	push   esi
 100bf12:	call   0x100850b
 100bf17:	pop    ecx
 100bf18:	mov    eax,esi
 100bf1a:	pop    esi
 100bf1b:	pop    ebp
 100bf1c:	ret    0x4
 100bf1f:	int3   
 100bf20:	int3   
 100bf21:	int3   
 100bf22:	int3   
 100bf23:	int3   
 100bf24:	mov    edi,edi
 100bf26:	push   ebp
 100bf27:	mov    ebp,esp
 100bf29:	push   esi
 100bf2a:	push   DWORD PTR [ebp+0x8]
 100bf2d:	mov    esi,ecx
 100bf2f:	and    DWORD PTR [esi+0x4],0x0
 100bf33:	mov    DWORD PTR [esi],0x1002dd8
 100bf39:	mov    BYTE PTR [esi+0x8],0x0
 100bf3d:	call   0x100beae
 100bf42:	mov    eax,esi
 100bf44:	pop    esi
 100bf45:	pop    ebp
 100bf46:	ret    0x4
 100bf49:	int3   
 100bf4a:	int3   
 100bf4b:	int3   
 100bf4c:	int3   
 100bf4d:	int3   
 100bf4e:	mov    edi,edi
 100bf50:	push   ecx
 100bf51:	mov    DWORD PTR [ecx],0x1002df8
 100bf57:	call   0x100ffdd
 100bf5c:	pop    ecx
 100bf5d:	ret    
 100bf5e:	int3   
 100bf5f:	int3   
 100bf60:	int3   
 100bf61:	int3   
 100bf62:	int3   
 100bf63:	mov    edi,edi
 100bf65:	push   ebp
 100bf66:	mov    ebp,esp
 100bf68:	push   esi
 100bf69:	mov    esi,ecx
 100bf6b:	call   0x100bf4e
 100bf70:	test   BYTE PTR [ebp+0x8],0x1
 100bf74:	je     0x100bf7d
 100bf76:	push   esi
 100bf77:	call   0x100850b
 100bf7c:	pop    ecx
 100bf7d:	mov    eax,esi
 100bf7f:	pop    esi
 100bf80:	pop    ebp
 100bf81:	ret    0x4
 100bf84:	int3   
 100bf85:	int3   
 100bf86:	int3   
 100bf87:	int3   
 100bf88:	int3   
 100bf89:	mov    edi,edi
 100bf8b:	push   ebp
 100bf8c:	mov    ebp,esp
 100bf8e:	push   ecx
 100bf8f:	push   ebx
 100bf90:	push   esi
 100bf91:	mov    esi,DWORD PTR ds:0x1001148
 100bf97:	push   edi
 100bf98:	push   DWORD PTR ds:0x10160e8
 100bf9e:	call   esi
 100bfa0:	push   DWORD PTR ds:0x10160e4
 100bfa6:	mov    ebx,eax
 100bfa8:	mov    DWORD PTR [ebp-0x4],ebx
 100bfab:	call   esi
 100bfad:	mov    esi,eax
 100bfaf:	cmp    esi,ebx
 100bfb1:	jb     0x100c038
 100bfb7:	mov    edi,esi
 100bfb9:	sub    edi,ebx
 100bfbb:	lea    eax,[edi+0x4]
 100bfbe:	cmp    eax,0x4
 100bfc1:	jb     0x100c038
 100bfc3:	push   ebx
 100bfc4:	call   0x10100ed
 100bfc9:	mov    ebx,eax
 100bfcb:	lea    eax,[edi+0x4]
 100bfce:	pop    ecx
 100bfcf:	cmp    ebx,eax
 100bfd1:	jae    0x100c01b
 100bfd3:	mov    eax,0x800
 100bfd8:	cmp    ebx,eax
 100bfda:	jae    0x100bfde
 100bfdc:	mov    eax,ebx
 100bfde:	add    eax,ebx
 100bfe0:	cmp    eax,ebx
 100bfe2:	jb     0x100bff3
 100bfe4:	push   eax
 100bfe5:	push   DWORD PTR [ebp-0x4]
 100bfe8:	call   0x100dd0a
 100bfed:	pop    ecx
 100bfee:	pop    ecx
 100bfef:	test   eax,eax
 100bff1:	jne    0x100c009
 100bff3:	lea    eax,[ebx+0x10]
 100bff6:	cmp    eax,ebx
 100bff8:	jb     0x100c038
 100bffa:	push   eax
 100bffb:	push   DWORD PTR [ebp-0x4]
 100bffe:	call   0x100dd0a
 100c003:	pop    ecx
 100c004:	pop    ecx
 100c005:	test   eax,eax
 100c007:	je     0x100c038
 100c009:	sar    edi,0x2
 100c00c:	push   eax
 100c00d:	lea    esi,[eax+edi*4]
 100c010:	call   DWORD PTR ds:0x1001174
 100c016:	mov    ds:0x10160e8,eax
 100c01b:	push   DWORD PTR [ebp+0x8]
 100c01e:	mov    edi,DWORD PTR ds:0x1001174
 100c024:	call   edi
 100c026:	mov    DWORD PTR [esi],eax
 100c028:	add    esi,0x4
 100c02b:	push   esi
 100c02c:	call   edi
 100c02e:	mov    ds:0x10160e4,eax
 100c033:	mov    eax,DWORD PTR [ebp+0x8]
 100c036:	jmp    0x100c03a
 100c038:	xor    eax,eax
 100c03a:	pop    edi
 100c03b:	pop    esi
 100c03c:	pop    ebx
 100c03d:	leave  
 100c03e:	ret    
 100c03f:	int3   
 100c040:	int3   
 100c041:	int3   
 100c042:	int3   
 100c043:	int3   
 100c044:	mov    edi,edi
 100c046:	push   esi
 100c047:	push   0x4
 100c049:	push   0x20
 100c04b:	call   0x100dcb9
 100c050:	pop    ecx
 100c051:	pop    ecx
 100c052:	mov    esi,eax
 100c054:	push   esi
 100c055:	call   DWORD PTR ds:0x1001174
 100c05b:	mov    ds:0x10160e8,eax
 100c060:	mov    ds:0x10160e4,eax
 100c065:	test   esi,esi
 100c067:	jne    0x100c06e
 100c069:	push   0x18
 100c06b:	pop    eax
 100c06c:	pop    esi
 100c06d:	ret    
 100c06e:	and    DWORD PTR [esi],0x0
 100c071:	xor    eax,eax
 100c073:	pop    esi
 100c074:	ret    
 100c075:	int3   
 100c076:	int3   
 100c077:	int3   
 100c078:	int3   
 100c079:	int3   
 100c07a:	push   0xc
 100c07c:	push   0x1011bb8
 100c081:	call   0x1009cd0
 100c086:	call   0x1008ad2
 100c08b:	and    DWORD PTR [ebp-0x4],0x0
 100c08f:	push   DWORD PTR [ebp+0x8]
 100c092:	call   0x100bf89
 100c097:	pop    ecx
 100c098:	mov    DWORD PTR [ebp-0x1c],eax
 100c09b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100c0a2:	call   0x100c0b0
 100c0a7:	mov    eax,DWORD PTR [ebp-0x1c]
 100c0aa:	call   0x1009d15
 100c0af:	ret    
 100c0b0:	call   0x1008ae0
 100c0b5:	ret    
 100c0b6:	int3   
 100c0b7:	int3   
 100c0b8:	int3   
 100c0b9:	int3   
 100c0ba:	int3   
 100c0bb:	mov    edi,edi
 100c0bd:	push   ebp
 100c0be:	mov    ebp,esp
 100c0c0:	push   DWORD PTR [ebp+0x8]
 100c0c3:	call   0x100c07a
 100c0c8:	neg    eax
 100c0ca:	sbb    eax,eax
 100c0cc:	neg    eax
 100c0ce:	pop    ecx
 100c0cf:	dec    eax
 100c0d0:	pop    ebp
 100c0d1:	ret    
 100c0d2:	int3   
 100c0d3:	int3   
 100c0d4:	int3   
 100c0d5:	int3   
 100c0d6:	int3   
 100c0d7:	mov    edi,edi
 100c0d9:	push   ebp
 100c0da:	mov    ebp,esp
 100c0dc:	push   ebx
 100c0dd:	mov    ebx,DWORD PTR [ebp+0x8]
 100c0e0:	cmp    ebx,0xffffffe0
 100c0e3:	ja     0x100c154
 100c0e5:	push   esi
 100c0e6:	push   edi
 100c0e7:	cmp    DWORD PTR ds:0x1014a68,0x0
 100c0ee:	jne    0x100c108
 100c0f0:	call   0x1008f90
 100c0f5:	push   0x1e
 100c0f7:	call   0x1008ddc
 100c0fc:	push   0xff
 100c101:	call   0x1008ab5
 100c106:	pop    ecx
 100c107:	pop    ecx
 100c108:	test   ebx,ebx
 100c10a:	je     0x100c110
 100c10c:	mov    eax,ebx
 100c10e:	jmp    0x100c113
 100c110:	xor    eax,eax
 100c112:	inc    eax
 100c113:	push   eax
 100c114:	push   0x0
 100c116:	push   DWORD PTR ds:0x1014a68
 100c11c:	call   DWORD PTR ds:0x1001108
 100c122:	mov    edi,eax
 100c124:	test   edi,edi
 100c126:	jne    0x100c14e
 100c128:	push   0xc
 100c12a:	pop    esi
 100c12b:	cmp    DWORD PTR ds:0x1014f64,eax
 100c131:	je     0x100c140
 100c133:	push   ebx
 100c134:	call   0x100c184
 100c139:	pop    ecx
 100c13a:	test   eax,eax
 100c13c:	jne    0x100c0e7
 100c13e:	jmp    0x100c147
 100c140:	call   0x100af29
 100c145:	mov    DWORD PTR [eax],esi
 100c147:	call   0x100af29
 100c14c:	mov    DWORD PTR [eax],esi
 100c14e:	mov    eax,edi
 100c150:	pop    edi
 100c151:	pop    esi
 100c152:	jmp    0x100c168
 100c154:	push   ebx
 100c155:	call   0x100c184
 100c15a:	pop    ecx
 100c15b:	call   0x100af29
 100c160:	mov    DWORD PTR [eax],0xc
 100c166:	xor    eax,eax
 100c168:	pop    ebx
 100c169:	pop    ebp
 100c16a:	ret    
 100c16b:	int3   
 100c16c:	int3   
 100c16d:	int3   
 100c16e:	int3   
 100c16f:	int3   
 100c170:	mov    edi,edi
 100c172:	push   ebp
 100c173:	mov    ebp,esp
 100c175:	mov    eax,DWORD PTR [ebp+0x8]
 100c178:	mov    ds:0x1014da4,eax
 100c17d:	pop    ebp
 100c17e:	ret    
 100c17f:	int3   
 100c180:	int3   
 100c181:	int3   
 100c182:	int3   
 100c183:	int3   
 100c184:	mov    edi,edi
 100c186:	push   ebp
 100c187:	mov    ebp,esp
 100c189:	push   DWORD PTR ds:0x1014da4
 100c18f:	call   DWORD PTR ds:0x1001148
 100c195:	test   eax,eax
 100c197:	je     0x100c1a8
 100c199:	push   DWORD PTR [ebp+0x8]
 100c19c:	call   eax
 100c19e:	pop    ecx
 100c19f:	test   eax,eax
 100c1a1:	je     0x100c1a8
 100c1a3:	xor    eax,eax
 100c1a5:	inc    eax
 100c1a6:	pop    ebp
 100c1a7:	ret    
 100c1a8:	xor    eax,eax
 100c1aa:	pop    ebp
 100c1ab:	ret    
 100c1ac:	int3   
 100c1ad:	int3   
 100c1ae:	int3   
 100c1af:	int3   
 100c1b0:	int3   
 100c1b1:	mov    edi,edi
 100c1b3:	push   ebp
 100c1b4:	mov    ebp,esp
 100c1b6:	sub    esp,0x20
 100c1b9:	mov    eax,DWORD PTR [ebp+0x8]
 100c1bc:	push   esi
 100c1bd:	push   edi
 100c1be:	push   0x8
 100c1c0:	pop    ecx
 100c1c1:	mov    esi,0x1002dfc
 100c1c6:	lea    edi,[ebp-0x20]
 100c1c9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100c1cb:	mov    DWORD PTR [ebp-0x8],eax
 100c1ce:	mov    eax,DWORD PTR [ebp+0xc]
 100c1d1:	pop    edi
 100c1d2:	mov    DWORD PTR [ebp-0x4],eax
 100c1d5:	pop    esi
 100c1d6:	test   eax,eax
 100c1d8:	je     0x100c1e6
 100c1da:	test   BYTE PTR [eax],0x8
 100c1dd:	je     0x100c1e6
 100c1df:	mov    DWORD PTR [ebp-0xc],0x1994000
 100c1e6:	lea    eax,[ebp-0xc]
 100c1e9:	push   eax
 100c1ea:	push   DWORD PTR [ebp-0x10]
 100c1ed:	push   DWORD PTR [ebp-0x1c]
 100c1f0:	push   DWORD PTR [ebp-0x20]
 100c1f3:	call   DWORD PTR ds:0x1001104
 100c1f9:	leave  
 100c1fa:	ret    0x8
 100c1fd:	int3   
 100c1fe:	int3   
 100c1ff:	int3   
 100c200:	int3   
 100c201:	int3   
 100c202:	pxor   xmm0,xmm0
 100c206:	push   ecx
 100c207:	push   ebx
 100c208:	mov    eax,ecx
 100c20a:	and    eax,0xf
 100c20d:	test   eax,eax
 100c20f:	jne    0x100c290
 100c211:	mov    eax,edx
 100c213:	and    edx,0x7f
 100c216:	shr    eax,0x7
 100c219:	je     0x100c252
 100c21b:	lea    esp,[esp+0x0]
 100c222:	movdqa XMMWORD PTR [ecx],xmm0
 100c226:	movdqa XMMWORD PTR [ecx+0x10],xmm0
 100c22b:	movdqa XMMWORD PTR [ecx+0x20],xmm0
 100c230:	movdqa XMMWORD PTR [ecx+0x30],xmm0
 100c235:	movdqa XMMWORD PTR [ecx+0x40],xmm0
 100c23a:	movdqa XMMWORD PTR [ecx+0x50],xmm0
 100c23f:	movdqa XMMWORD PTR [ecx+0x60],xmm0
 100c244:	movdqa XMMWORD PTR [ecx+0x70],xmm0
 100c249:	lea    ecx,[ecx+0x80]
 100c24f:	dec    eax
 100c250:	jne    0x100c222
 100c252:	test   edx,edx
 100c254:	je     0x100c28d
 100c256:	mov    eax,edx
 100c258:	shr    eax,0x4
 100c25b:	je     0x100c26c
 100c25d:	jmp    0x100c262
 100c25f:	lea    ecx,[ecx+0x0]
 100c262:	movdqa XMMWORD PTR [ecx],xmm0
 100c266:	lea    ecx,[ecx+0x10]
 100c269:	dec    eax
 100c26a:	jne    0x100c262
 100c26c:	and    edx,0xf
 100c26f:	je     0x100c28d
 100c271:	mov    eax,edx
 100c273:	xor    ebx,ebx
 100c275:	shr    edx,0x2
 100c278:	je     0x100c282
 100c27a:	mov    DWORD PTR [ecx],ebx
 100c27c:	lea    ecx,[ecx+0x4]
 100c27f:	dec    edx
 100c280:	jne    0x100c27a
 100c282:	and    eax,0x3
 100c285:	je     0x100c28d
 100c287:	mov    BYTE PTR [ecx],bl
 100c289:	inc    ecx
 100c28a:	dec    eax
 100c28b:	jne    0x100c287
 100c28d:	pop    ebx
 100c28e:	pop    eax
 100c28f:	ret    
 100c290:	mov    ebx,eax
 100c292:	neg    ebx
 100c294:	add    ebx,0x10
 100c297:	sub    edx,ebx
 100c299:	xor    eax,eax
 100c29b:	push   edx
 100c29c:	mov    edx,ebx
 100c29e:	and    edx,0x3
 100c2a1:	je     0x100c2a9
 100c2a3:	mov    BYTE PTR [ecx],al
 100c2a5:	inc    ecx
 100c2a6:	dec    edx
 100c2a7:	jne    0x100c2a3
 100c2a9:	shr    ebx,0x2
 100c2ac:	je     0x100c2b6
 100c2ae:	mov    DWORD PTR [ecx],eax
 100c2b0:	lea    ecx,[ecx+0x4]
 100c2b3:	dec    ebx
 100c2b4:	jne    0x100c2ae
 100c2b6:	pop    edx
 100c2b7:	jmp    0x100c211
 100c2bc:	int3   
 100c2bd:	int3   
 100c2be:	int3   
 100c2bf:	int3   
 100c2c0:	int3   
 100c2c1:	push   0xa
 100c2c3:	call   DWORD PTR ds:0x1001100
 100c2c9:	mov    ds:0x1014fb4,eax
 100c2ce:	xor    eax,eax
 100c2d0:	ret    
 100c2d1:	int3   
 100c2d2:	int3   
 100c2d3:	int3   
 100c2d4:	int3   
 100c2d5:	int3   
 100c2d6:	sub    eax,0x3a4
 100c2db:	je     0x100c2ff
 100c2dd:	sub    eax,0x4
 100c2e0:	je     0x100c2f9
 100c2e2:	sub    eax,0xd
 100c2e5:	je     0x100c2f3
 100c2e7:	dec    eax
 100c2e8:	je     0x100c2ed
 100c2ea:	xor    eax,eax
 100c2ec:	ret    
 100c2ed:	mov    eax,0x404
 100c2f2:	ret    
 100c2f3:	mov    eax,0x412
 100c2f8:	ret    
 100c2f9:	mov    eax,0x804
 100c2fe:	ret    
 100c2ff:	mov    eax,0x411
 100c304:	ret    
 100c305:	int3   
 100c306:	int3   
 100c307:	int3   
 100c308:	int3   
 100c309:	int3   
 100c30a:	mov    edi,edi
 100c30c:	push   esi
 100c30d:	push   edi
 100c30e:	mov    esi,eax
 100c310:	push   0x101
 100c315:	xor    edi,edi
 100c317:	lea    eax,[esi+0x1c]
 100c31a:	push   edi
 100c31b:	push   eax
 100c31c:	call   0x1008600
 100c321:	xor    eax,eax
 100c323:	movzx  ecx,ax
 100c326:	mov    eax,ecx
 100c328:	mov    DWORD PTR [esi+0x4],edi
 100c32b:	mov    DWORD PTR [esi+0x8],edi
 100c32e:	mov    DWORD PTR [esi+0xc],edi
 100c331:	shl    ecx,0x10
 100c334:	or     eax,ecx
 100c336:	lea    edi,[esi+0x10]
 100c339:	stos   DWORD PTR es:[edi],eax
 100c33a:	stos   DWORD PTR es:[edi],eax
 100c33b:	stos   DWORD PTR es:[edi],eax
 100c33c:	mov    ecx,0x1013508
 100c341:	add    esp,0xc
 100c344:	lea    eax,[esi+0x1c]
 100c347:	sub    ecx,esi
 100c349:	mov    edi,0x101
 100c34e:	mov    dl,BYTE PTR [ecx+eax*1]
 100c351:	mov    BYTE PTR [eax],dl
 100c353:	inc    eax
 100c354:	dec    edi
 100c355:	jne    0x100c34e
 100c357:	lea    eax,[esi+0x11d]
 100c35d:	mov    esi,0x100
 100c362:	mov    dl,BYTE PTR [eax+ecx*1]
 100c365:	mov    BYTE PTR [eax],dl
 100c367:	inc    eax
 100c368:	dec    esi
 100c369:	jne    0x100c362
 100c36b:	pop    edi
 100c36c:	pop    esi
 100c36d:	ret    
 100c36e:	int3   
 100c36f:	int3   
 100c370:	int3   
 100c371:	int3   
 100c372:	int3   
 100c373:	mov    edi,edi
 100c375:	push   ebp
 100c376:	mov    ebp,esp
 100c378:	sub    esp,0x51c
 100c37e:	mov    eax,ds:0x1013054
 100c383:	xor    eax,ebp
 100c385:	mov    DWORD PTR [ebp-0x4],eax
 100c388:	push   ebx
 100c389:	push   edi
 100c38a:	lea    eax,[ebp-0x518]
 100c390:	push   eax
 100c391:	push   DWORD PTR [esi+0x4]
 100c394:	call   DWORD PTR ds:0x10010fc
 100c39a:	mov    edi,0x100
 100c39f:	test   eax,eax
 100c3a1:	je     0x100c4a3
 100c3a7:	xor    eax,eax
 100c3a9:	mov    BYTE PTR [ebp+eax*1-0x104],al
 100c3b0:	inc    eax
 100c3b1:	cmp    eax,edi
 100c3b3:	jb     0x100c3a9
 100c3b5:	mov    al,BYTE PTR [ebp-0x512]
 100c3bb:	mov    BYTE PTR [ebp-0x104],0x20
 100c3c2:	test   al,al
 100c3c4:	je     0x100c3f6
 100c3c6:	lea    ebx,[ebp-0x511]
 100c3cc:	movzx  ecx,al
 100c3cf:	movzx  eax,BYTE PTR [ebx]
 100c3d2:	cmp    ecx,eax
 100c3d4:	ja     0x100c3ec
 100c3d6:	sub    eax,ecx
 100c3d8:	inc    eax
 100c3d9:	push   eax
 100c3da:	lea    edx,[ebp+ecx*1-0x104]
 100c3e1:	push   0x20
 100c3e3:	push   edx
 100c3e4:	call   0x1008600
 100c3e9:	add    esp,0xc
 100c3ec:	mov    al,BYTE PTR [ebx+0x1]
 100c3ef:	add    ebx,0x2
 100c3f2:	test   al,al
 100c3f4:	jne    0x100c3cc
 100c3f6:	push   0x0
 100c3f8:	push   DWORD PTR [esi+0xc]
 100c3fb:	lea    eax,[ebp-0x504]
 100c401:	push   DWORD PTR [esi+0x4]
 100c404:	push   eax
 100c405:	push   edi
 100c406:	lea    eax,[ebp-0x104]
 100c40c:	push   eax
 100c40d:	push   0x1
 100c40f:	push   0x0
 100c411:	call   0x1010211
 100c416:	xor    ebx,ebx
 100c418:	push   ebx
 100c419:	push   DWORD PTR [esi+0x4]
 100c41c:	lea    eax,[ebp-0x204]
 100c422:	push   edi
 100c423:	push   eax
 100c424:	push   edi
 100c425:	lea    eax,[ebp-0x104]
 100c42b:	push   eax
 100c42c:	push   edi
 100c42d:	push   DWORD PTR [esi+0xc]
 100c430:	push   ebx
 100c431:	call   0x100cf84
 100c436:	add    esp,0x44
 100c439:	push   ebx
 100c43a:	push   DWORD PTR [esi+0x4]
 100c43d:	lea    eax,[ebp-0x304]
 100c443:	push   edi
 100c444:	push   eax
 100c445:	push   edi
 100c446:	lea    eax,[ebp-0x104]
 100c44c:	push   eax
 100c44d:	push   0x200
 100c452:	push   DWORD PTR [esi+0xc]
 100c455:	push   ebx
 100c456:	call   0x100cf84
 100c45b:	add    esp,0x24
 100c45e:	xor    eax,eax
 100c460:	movzx  ecx,WORD PTR [ebp+eax*2-0x504]
 100c468:	test   cl,0x1
 100c46b:	je     0x100c47b
 100c46d:	or     BYTE PTR [esi+eax*1+0x1d],0x10
 100c472:	mov    cl,BYTE PTR [ebp+eax*1-0x204]
 100c479:	jmp    0x100c48c
 100c47b:	test   cl,0x2
 100c47e:	je     0x100c495
 100c480:	or     BYTE PTR [esi+eax*1+0x1d],0x20
 100c485:	mov    cl,BYTE PTR [ebp+eax*1-0x304]
 100c48c:	mov    BYTE PTR [esi+eax*1+0x11d],cl
 100c493:	jmp    0x100c49c
 100c495:	mov    BYTE PTR [esi+eax*1+0x11d],bl
 100c49c:	inc    eax
 100c49d:	cmp    eax,edi
 100c49f:	jb     0x100c460
 100c4a1:	jmp    0x100c4f5
 100c4a3:	lea    eax,[esi+0x11d]
 100c4a9:	mov    DWORD PTR [ebp-0x51c],0xffffff9f
 100c4b3:	xor    ecx,ecx
 100c4b5:	sub    DWORD PTR [ebp-0x51c],eax
 100c4bb:	mov    edx,DWORD PTR [ebp-0x51c]
 100c4c1:	lea    eax,[esi+ecx*1+0x11d]
 100c4c8:	add    edx,eax
 100c4ca:	lea    ebx,[edx+0x20]
 100c4cd:	cmp    ebx,0x19
 100c4d0:	ja     0x100c4dc
 100c4d2:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
 100c4d7:	lea    edx,[ecx+0x20]
 100c4da:	jmp    0x100c4e9
 100c4dc:	cmp    edx,0x19
 100c4df:	ja     0x100c4ed
 100c4e1:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
 100c4e6:	lea    edx,[ecx-0x20]
 100c4e9:	mov    BYTE PTR [eax],dl
 100c4eb:	jmp    0x100c4f0
 100c4ed:	mov    BYTE PTR [eax],0x0
 100c4f0:	inc    ecx
 100c4f1:	cmp    ecx,edi
 100c4f3:	jb     0x100c4bb
 100c4f5:	mov    ecx,DWORD PTR [ebp-0x4]
 100c4f8:	pop    edi
 100c4f9:	xor    ecx,ebp
 100c4fb:	pop    ebx
 100c4fc:	call   0x1008355
 100c501:	leave  
 100c502:	ret    
 100c503:	int3   
 100c504:	int3   
 100c505:	int3   
 100c506:	int3   
 100c507:	int3   
 100c508:	push   0xc
 100c50a:	push   0x1011bd8
 100c50f:	call   0x1009cd0
 100c514:	call   0x10099cb
 100c519:	mov    edi,eax
 100c51b:	mov    eax,ds:0x1013a28
 100c520:	test   DWORD PTR [edi+0x70],eax
 100c523:	je     0x100c542
 100c525:	cmp    DWORD PTR [edi+0x6c],0x0
 100c529:	je     0x100c542
 100c52b:	mov    esi,DWORD PTR [edi+0x68]
 100c52e:	test   esi,esi
 100c530:	jne    0x100c53a
 100c532:	push   0x20
 100c534:	call   0x1008d8e
 100c539:	pop    ecx
 100c53a:	mov    eax,esi
 100c53c:	call   0x1009d15
 100c541:	ret    
 100c542:	push   0xd
 100c544:	call   0x100d473
 100c549:	pop    ecx
 100c54a:	and    DWORD PTR [ebp-0x4],0x0
 100c54e:	mov    esi,DWORD PTR [edi+0x68]
 100c551:	mov    DWORD PTR [ebp-0x1c],esi
 100c554:	cmp    esi,DWORD PTR ds:0x1013930
 100c55a:	je     0x100c592
 100c55c:	test   esi,esi
 100c55e:	je     0x100c57a
 100c560:	push   esi
 100c561:	call   DWORD PTR ds:0x1001194
 100c567:	test   eax,eax
 100c569:	jne    0x100c57a
 100c56b:	cmp    esi,0x1013508
 100c571:	je     0x100c57a
 100c573:	push   esi
 100c574:	call   0x100af81
 100c579:	pop    ecx
 100c57a:	mov    eax,ds:0x1013930
 100c57f:	mov    DWORD PTR [edi+0x68],eax
 100c582:	mov    esi,DWORD PTR ds:0x1013930
 100c588:	mov    DWORD PTR [ebp-0x1c],esi
 100c58b:	push   esi
 100c58c:	call   DWORD PTR ds:0x1001188
 100c592:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100c599:	call   0x100c5a3
 100c59e:	jmp    0x100c52e
 100c5a0:	mov    esi,DWORD PTR [ebp-0x1c]
 100c5a3:	push   0xd
 100c5a5:	call   0x100d390
 100c5aa:	pop    ecx
 100c5ab:	ret    
 100c5ac:	int3   
 100c5ad:	int3   
 100c5ae:	int3   
 100c5af:	int3   
 100c5b0:	int3   
 100c5b1:	mov    edi,edi
 100c5b3:	push   ebp
 100c5b4:	mov    ebp,esp
 100c5b6:	sub    esp,0x10
 100c5b9:	push   ebx
 100c5ba:	xor    ebx,ebx
 100c5bc:	push   ebx
 100c5bd:	lea    ecx,[ebp-0x10]
 100c5c0:	call   0x10086a4
 100c5c5:	mov    DWORD PTR ds:0x1014da8,ebx
 100c5cb:	cmp    esi,0xfffffffe
 100c5ce:	jne    0x100c5ee
 100c5d0:	mov    DWORD PTR ds:0x1014da8,0x1
 100c5da:	call   DWORD PTR ds:0x10010f4
 100c5e0:	cmp    BYTE PTR [ebp-0x4],bl
 100c5e3:	je     0x100c62a
 100c5e5:	mov    ecx,DWORD PTR [ebp-0x8]
 100c5e8:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100c5ec:	jmp    0x100c62a
 100c5ee:	cmp    esi,0xfffffffd
 100c5f1:	jne    0x100c605
 100c5f3:	mov    DWORD PTR ds:0x1014da8,0x1
 100c5fd:	call   DWORD PTR ds:0x10010f8
 100c603:	jmp    0x100c5e0
 100c605:	cmp    esi,0xfffffffc
 100c608:	jne    0x100c61c
 100c60a:	mov    eax,DWORD PTR [ebp-0x10]
 100c60d:	mov    eax,DWORD PTR [eax+0x4]
 100c610:	mov    DWORD PTR ds:0x1014da8,0x1
 100c61a:	jmp    0x100c5e0
 100c61c:	cmp    BYTE PTR [ebp-0x4],bl
 100c61f:	je     0x100c628
 100c621:	mov    eax,DWORD PTR [ebp-0x8]
 100c624:	and    DWORD PTR [eax+0x70],0xfffffffd
 100c628:	mov    eax,esi
 100c62a:	pop    ebx
 100c62b:	leave  
 100c62c:	ret    
 100c62d:	int3   
 100c62e:	int3   
 100c62f:	int3   
 100c630:	int3   
 100c631:	int3   
 100c632:	mov    edi,edi
 100c634:	push   ebp
 100c635:	mov    ebp,esp
 100c637:	sub    esp,0x20
 100c63a:	mov    eax,ds:0x1013054
 100c63f:	xor    eax,ebp
 100c641:	mov    DWORD PTR [ebp-0x4],eax
 100c644:	push   ebx
 100c645:	mov    ebx,DWORD PTR [ebp+0xc]
 100c648:	push   esi
 100c649:	mov    esi,DWORD PTR [ebp+0x8]
 100c64c:	push   edi
 100c64d:	call   0x100c5b1
 100c652:	mov    edi,eax
 100c654:	xor    esi,esi
 100c656:	mov    DWORD PTR [ebp+0x8],edi
 100c659:	cmp    edi,esi
 100c65b:	jne    0x100c66b
 100c65d:	mov    eax,ebx
 100c65f:	call   0x100c30a
 100c664:	xor    eax,eax
 100c666:	jmp    0x100c80c
 100c66b:	mov    DWORD PTR [ebp-0x1c],esi
 100c66e:	xor    eax,eax
 100c670:	cmp    DWORD PTR [eax+0x1013938],edi
 100c676:	je     0x100c70d
 100c67c:	inc    DWORD PTR [ebp-0x1c]
 100c67f:	add    eax,0x30
 100c682:	cmp    eax,0xf0
 100c687:	jb     0x100c670
 100c689:	cmp    edi,0xfde8
 100c68f:	je     0x100c809
 100c695:	cmp    edi,0xfde9
 100c69b:	je     0x100c809
 100c6a1:	movzx  eax,di
 100c6a4:	push   eax
 100c6a5:	call   DWORD PTR ds:0x10010f0
 100c6ab:	test   eax,eax
 100c6ad:	je     0x100c809
 100c6b3:	lea    eax,[ebp-0x18]
 100c6b6:	push   eax
 100c6b7:	push   edi
 100c6b8:	call   DWORD PTR ds:0x10010fc
 100c6be:	test   eax,eax
 100c6c0:	je     0x100c7fd
 100c6c6:	push   0x101
 100c6cb:	lea    eax,[ebx+0x1c]
 100c6ce:	push   esi
 100c6cf:	push   eax
 100c6d0:	call   0x1008600
 100c6d5:	xor    edx,edx
 100c6d7:	inc    edx
 100c6d8:	add    esp,0xc
 100c6db:	mov    DWORD PTR [ebx+0x4],edi
 100c6de:	mov    DWORD PTR [ebx+0xc],esi
 100c6e1:	cmp    DWORD PTR [ebp-0x18],edx
 100c6e4:	jbe    0x100c7e6
 100c6ea:	cmp    BYTE PTR [ebp-0x12],0x0
 100c6ee:	je     0x100c7c7
 100c6f4:	lea    esi,[ebp-0x11]
 100c6f7:	mov    cl,BYTE PTR [esi]
 100c6f9:	test   cl,cl
 100c6fb:	je     0x100c7c7
 100c701:	movzx  eax,BYTE PTR [esi-0x1]
 100c705:	movzx  ecx,cl
 100c708:	jmp    0x100c7b6
 100c70d:	push   0x101
 100c712:	lea    eax,[ebx+0x1c]
 100c715:	push   esi
 100c716:	push   eax
 100c717:	call   0x1008600
 100c71c:	mov    ecx,DWORD PTR [ebp-0x1c]
 100c71f:	add    esp,0xc
 100c722:	imul   ecx,ecx,0x30
 100c725:	mov    DWORD PTR [ebp-0x20],esi
 100c728:	lea    esi,[ecx+0x1013948]
 100c72e:	mov    DWORD PTR [ebp-0x1c],esi
 100c731:	jmp    0x100c75e
 100c733:	mov    al,BYTE PTR [esi+0x1]
 100c736:	test   al,al
 100c738:	je     0x100c763
 100c73a:	movzx  edi,BYTE PTR [esi]
 100c73d:	movzx  eax,al
 100c740:	jmp    0x100c754
 100c742:	mov    eax,DWORD PTR [ebp-0x20]
 100c745:	mov    al,BYTE PTR [eax+0x1013934]
 100c74b:	or     BYTE PTR [ebx+edi*1+0x1d],al
 100c74f:	movzx  eax,BYTE PTR [esi+0x1]
 100c753:	inc    edi
 100c754:	cmp    edi,eax
 100c756:	jbe    0x100c742
 100c758:	mov    edi,DWORD PTR [ebp+0x8]
 100c75b:	add    esi,0x2
 100c75e:	cmp    BYTE PTR [esi],0x0
 100c761:	jne    0x100c733
 100c763:	mov    esi,DWORD PTR [ebp-0x1c]
 100c766:	inc    DWORD PTR [ebp-0x20]
 100c769:	add    esi,0x8
 100c76c:	cmp    DWORD PTR [ebp-0x20],0x4
 100c770:	mov    DWORD PTR [ebp-0x1c],esi
 100c773:	jb     0x100c75e
 100c775:	mov    eax,edi
 100c777:	mov    DWORD PTR [ebx+0x4],edi
 100c77a:	mov    DWORD PTR [ebx+0x8],0x1
 100c781:	call   0x100c2d6
 100c786:	push   0x6
 100c788:	mov    DWORD PTR [ebx+0xc],eax
 100c78b:	lea    eax,[ebx+0x10]
 100c78e:	lea    ecx,[ecx+0x101393c]
 100c794:	pop    edx
 100c795:	mov    si,WORD PTR [ecx]
 100c798:	mov    WORD PTR [eax],si
 100c79b:	add    ecx,0x2
 100c79e:	add    eax,0x2
 100c7a1:	dec    edx
 100c7a2:	jne    0x100c795
 100c7a4:	mov    esi,ebx
 100c7a6:	call   0x100c373
 100c7ab:	jmp    0x100c664
 100c7b0:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
 100c7b5:	inc    eax
 100c7b6:	cmp    eax,ecx
 100c7b8:	jbe    0x100c7b0
 100c7ba:	add    esi,0x2
 100c7bd:	cmp    BYTE PTR [esi-0x1],0x0
 100c7c1:	jne    0x100c6f7
 100c7c7:	lea    eax,[ebx+0x1e]
 100c7ca:	mov    ecx,0xfe
 100c7cf:	or     BYTE PTR [eax],0x8
 100c7d2:	inc    eax
 100c7d3:	dec    ecx
 100c7d4:	jne    0x100c7cf
 100c7d6:	mov    eax,DWORD PTR [ebx+0x4]
 100c7d9:	call   0x100c2d6
 100c7de:	mov    DWORD PTR [ebx+0xc],eax
 100c7e1:	mov    DWORD PTR [ebx+0x8],edx
 100c7e4:	jmp    0x100c7e9
 100c7e6:	mov    DWORD PTR [ebx+0x8],esi
 100c7e9:	xor    eax,eax
 100c7eb:	movzx  ecx,ax
 100c7ee:	mov    eax,ecx
 100c7f0:	shl    ecx,0x10
 100c7f3:	or     eax,ecx
 100c7f5:	lea    edi,[ebx+0x10]
 100c7f8:	stos   DWORD PTR es:[edi],eax
 100c7f9:	stos   DWORD PTR es:[edi],eax
 100c7fa:	stos   DWORD PTR es:[edi],eax
 100c7fb:	jmp    0x100c7a4
 100c7fd:	cmp    DWORD PTR ds:0x1014da8,esi
 100c803:	jne    0x100c65d
 100c809:	or     eax,0xffffffff
 100c80c:	mov    ecx,DWORD PTR [ebp-0x4]
 100c80f:	pop    edi
 100c810:	pop    esi
 100c811:	xor    ecx,ebp
 100c813:	pop    ebx
 100c814:	call   0x1008355
 100c819:	leave  
 100c81a:	ret    
 100c81b:	int3   
 100c81c:	int3   
 100c81d:	int3   
 100c81e:	int3   
 100c81f:	int3   
 100c820:	push   0x14
 100c822:	push   0x1011bf8
 100c827:	call   0x1009cd0
 100c82c:	or     DWORD PTR [ebp-0x20],0xffffffff
 100c830:	call   0x10099cb
 100c835:	mov    edi,eax
 100c837:	mov    DWORD PTR [ebp-0x24],edi
 100c83a:	call   0x100c508
 100c83f:	mov    ebx,DWORD PTR [edi+0x68]
 100c842:	mov    esi,DWORD PTR [ebp+0x8]
 100c845:	call   0x100c5b1
 100c84a:	mov    DWORD PTR [ebp+0x8],eax
 100c84d:	cmp    eax,DWORD PTR [ebx+0x4]
 100c850:	je     0x100c9ad
 100c856:	push   0x220
 100c85b:	call   0x100dc6f
 100c860:	pop    ecx
 100c861:	mov    ebx,eax
 100c863:	test   ebx,ebx
 100c865:	je     0x100c9b1
 100c86b:	mov    ecx,0x88
 100c870:	mov    esi,DWORD PTR [edi+0x68]
 100c873:	mov    edi,ebx
 100c875:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100c877:	and    DWORD PTR [ebx],0x0
 100c87a:	push   ebx
 100c87b:	push   DWORD PTR [ebp+0x8]
 100c87e:	call   0x100c632
 100c883:	pop    ecx
 100c884:	pop    ecx
 100c885:	mov    DWORD PTR [ebp-0x20],eax
 100c888:	test   eax,eax
 100c88a:	jne    0x100c98c
 100c890:	mov    esi,DWORD PTR [ebp-0x24]
 100c893:	push   DWORD PTR [esi+0x68]
 100c896:	call   DWORD PTR ds:0x1001194
 100c89c:	test   eax,eax
 100c89e:	jne    0x100c8b1
 100c8a0:	mov    eax,DWORD PTR [esi+0x68]
 100c8a3:	cmp    eax,0x1013508
 100c8a8:	je     0x100c8b1
 100c8aa:	push   eax
 100c8ab:	call   0x100af81
 100c8b0:	pop    ecx
 100c8b1:	mov    DWORD PTR [esi+0x68],ebx
 100c8b4:	push   ebx
 100c8b5:	mov    edi,DWORD PTR ds:0x1001188
 100c8bb:	call   edi
 100c8bd:	test   BYTE PTR [esi+0x70],0x2
 100c8c1:	jne    0x100c9b1
 100c8c7:	test   BYTE PTR ds:0x1013a28,0x1
 100c8ce:	jne    0x100c9b1
 100c8d4:	push   0xd
 100c8d6:	call   0x100d473
 100c8db:	pop    ecx
 100c8dc:	and    DWORD PTR [ebp-0x4],0x0
 100c8e0:	mov    eax,DWORD PTR [ebx+0x4]
 100c8e3:	mov    ds:0x1014db8,eax
 100c8e8:	mov    eax,DWORD PTR [ebx+0x8]
 100c8eb:	mov    ds:0x1014dbc,eax
 100c8f0:	mov    eax,DWORD PTR [ebx+0xc]
 100c8f3:	mov    ds:0x1014dc0,eax
 100c8f8:	xor    eax,eax
 100c8fa:	mov    DWORD PTR [ebp-0x1c],eax
 100c8fd:	cmp    eax,0x5
 100c900:	jge    0x100c912
 100c902:	mov    cx,WORD PTR [ebx+eax*2+0x10]
 100c907:	mov    WORD PTR [eax*2+0x1014dac],cx
 100c90f:	inc    eax
 100c910:	jmp    0x100c8fa
 100c912:	xor    eax,eax
 100c914:	mov    DWORD PTR [ebp-0x1c],eax
 100c917:	cmp    eax,0x101
 100c91c:	jge    0x100c92b
 100c91e:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
 100c922:	mov    BYTE PTR [eax+0x1013728],cl
 100c928:	inc    eax
 100c929:	jmp    0x100c914
 100c92b:	xor    eax,eax
 100c92d:	mov    DWORD PTR [ebp-0x1c],eax
 100c930:	cmp    eax,0x100
 100c935:	jge    0x100c947
 100c937:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
 100c93e:	mov    BYTE PTR [eax+0x1013830],cl
 100c944:	inc    eax
 100c945:	jmp    0x100c92d
 100c947:	push   DWORD PTR ds:0x1013930
 100c94d:	call   DWORD PTR ds:0x1001194
 100c953:	test   eax,eax
 100c955:	jne    0x100c96a
 100c957:	mov    eax,ds:0x1013930
 100c95c:	cmp    eax,0x1013508
 100c961:	je     0x100c96a
 100c963:	push   eax
 100c964:	call   0x100af81
 100c969:	pop    ecx
 100c96a:	mov    DWORD PTR ds:0x1013930,ebx
 100c970:	push   ebx
 100c971:	call   edi
 100c973:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100c97a:	call   0x100c981
 100c97f:	jmp    0x100c9b1
 100c981:	push   0xd
 100c983:	call   0x100d390
 100c988:	pop    ecx
 100c989:	ret    
 100c98a:	jmp    0x100c9b1
 100c98c:	cmp    eax,0xffffffff
 100c98f:	jne    0x100c9b1
 100c991:	cmp    ebx,0x1013508
 100c997:	je     0x100c9a0
 100c999:	push   ebx
 100c99a:	call   0x100af81
 100c99f:	pop    ecx
 100c9a0:	call   0x100af29
 100c9a5:	mov    DWORD PTR [eax],0x16
 100c9ab:	jmp    0x100c9b1
 100c9ad:	and    DWORD PTR [ebp-0x20],0x0
 100c9b1:	mov    eax,DWORD PTR [ebp-0x20]
 100c9b4:	call   0x1009d15
 100c9b9:	ret    
 100c9ba:	int3   
 100c9bb:	int3   
 100c9bc:	int3   
 100c9bd:	int3   
 100c9be:	int3   
 100c9bf:	cmp    DWORD PTR ds:0x10160ec,0x0
 100c9c6:	jne    0x100c9da
 100c9c8:	push   0xfffffffd
 100c9ca:	call   0x100c820
 100c9cf:	pop    ecx
 100c9d0:	mov    DWORD PTR ds:0x10160ec,0x1
 100c9da:	xor    eax,eax
 100c9dc:	ret    
 100c9dd:	int3   
 100c9de:	int3   
 100c9df:	int3   
 100c9e0:	int3   
 100c9e1:	int3   
 100c9e2:	mov    edi,edi
 100c9e4:	push   ebp
 100c9e5:	mov    ebp,esp
 100c9e7:	push   ebx
 100c9e8:	push   esi
 100c9e9:	mov    esi,DWORD PTR ds:0x1001188
 100c9ef:	push   edi
 100c9f0:	mov    edi,DWORD PTR [ebp+0x8]
 100c9f3:	push   edi
 100c9f4:	call   esi
 100c9f6:	mov    eax,DWORD PTR [edi+0xb0]
 100c9fc:	test   eax,eax
 100c9fe:	je     0x100ca03
 100ca00:	push   eax
 100ca01:	call   esi
 100ca03:	mov    eax,DWORD PTR [edi+0xb8]
 100ca09:	test   eax,eax
 100ca0b:	je     0x100ca10
 100ca0d:	push   eax
 100ca0e:	call   esi
 100ca10:	mov    eax,DWORD PTR [edi+0xb4]
 100ca16:	test   eax,eax
 100ca18:	je     0x100ca1d
 100ca1a:	push   eax
 100ca1b:	call   esi
 100ca1d:	mov    eax,DWORD PTR [edi+0xc0]
 100ca23:	test   eax,eax
 100ca25:	je     0x100ca2a
 100ca27:	push   eax
 100ca28:	call   esi
 100ca2a:	lea    ebx,[edi+0x50]
 100ca2d:	mov    DWORD PTR [ebp+0x8],0x6
 100ca34:	cmp    DWORD PTR [ebx-0x8],0x1013a2c
 100ca3b:	je     0x100ca46
 100ca3d:	mov    eax,DWORD PTR [ebx]
 100ca3f:	test   eax,eax
 100ca41:	je     0x100ca46
 100ca43:	push   eax
 100ca44:	call   esi
 100ca46:	cmp    DWORD PTR [ebx-0x4],0x0
 100ca4a:	je     0x100ca56
 100ca4c:	mov    eax,DWORD PTR [ebx+0x4]
 100ca4f:	test   eax,eax
 100ca51:	je     0x100ca56
 100ca53:	push   eax
 100ca54:	call   esi
 100ca56:	add    ebx,0x10
 100ca59:	dec    DWORD PTR [ebp+0x8]
 100ca5c:	jne    0x100ca34
 100ca5e:	mov    eax,DWORD PTR [edi+0xd4]
 100ca64:	add    eax,0xb4
 100ca69:	push   eax
 100ca6a:	call   esi
 100ca6c:	pop    edi
 100ca6d:	pop    esi
 100ca6e:	pop    ebx
 100ca6f:	pop    ebp
 100ca70:	ret    
 100ca71:	int3   
 100ca72:	int3   
 100ca73:	int3   
 100ca74:	int3   
 100ca75:	int3   
 100ca76:	mov    edi,edi
 100ca78:	push   ebp
 100ca79:	mov    ebp,esp
 100ca7b:	push   edi
 100ca7c:	mov    edi,DWORD PTR [ebp+0x8]
 100ca7f:	test   edi,edi
 100ca81:	je     0x100cb0a
 100ca87:	push   ebx
 100ca88:	push   esi
 100ca89:	mov    esi,DWORD PTR ds:0x1001194
 100ca8f:	push   edi
 100ca90:	call   esi
 100ca92:	mov    eax,DWORD PTR [edi+0xb0]
 100ca98:	test   eax,eax
 100ca9a:	je     0x100ca9f
 100ca9c:	push   eax
 100ca9d:	call   esi
 100ca9f:	mov    eax,DWORD PTR [edi+0xb8]
 100caa5:	test   eax,eax
 100caa7:	je     0x100caac
 100caa9:	push   eax
 100caaa:	call   esi
 100caac:	mov    eax,DWORD PTR [edi+0xb4]
 100cab2:	test   eax,eax
 100cab4:	je     0x100cab9
 100cab6:	push   eax
 100cab7:	call   esi
 100cab9:	mov    eax,DWORD PTR [edi+0xc0]
 100cabf:	test   eax,eax
 100cac1:	je     0x100cac6
 100cac3:	push   eax
 100cac4:	call   esi
 100cac6:	lea    ebx,[edi+0x50]
 100cac9:	mov    DWORD PTR [ebp+0x8],0x6
 100cad0:	cmp    DWORD PTR [ebx-0x8],0x1013a2c
 100cad7:	je     0x100cae2
 100cad9:	mov    eax,DWORD PTR [ebx]
 100cadb:	test   eax,eax
 100cadd:	je     0x100cae2
 100cadf:	push   eax
 100cae0:	call   esi
 100cae2:	cmp    DWORD PTR [ebx-0x4],0x0
 100cae6:	je     0x100caf2
 100cae8:	mov    eax,DWORD PTR [ebx+0x4]
 100caeb:	test   eax,eax
 100caed:	je     0x100caf2
 100caef:	push   eax
 100caf0:	call   esi
 100caf2:	add    ebx,0x10
 100caf5:	dec    DWORD PTR [ebp+0x8]
 100caf8:	jne    0x100cad0
 100cafa:	mov    eax,DWORD PTR [edi+0xd4]
 100cb00:	add    eax,0xb4
 100cb05:	push   eax
 100cb06:	call   esi
 100cb08:	pop    esi
 100cb09:	pop    ebx
 100cb0a:	mov    eax,edi
 100cb0c:	pop    edi
 100cb0d:	pop    ebp
 100cb0e:	ret    
 100cb0f:	int3   
 100cb10:	int3   
 100cb11:	int3   
 100cb12:	int3   
 100cb13:	int3   
 100cb14:	mov    edi,edi
 100cb16:	push   ebp
 100cb17:	mov    ebp,esp
 100cb19:	push   ebx
 100cb1a:	push   esi
 100cb1b:	mov    esi,DWORD PTR [ebp+0x8]
 100cb1e:	mov    eax,DWORD PTR [esi+0xbc]
 100cb24:	xor    ebx,ebx
 100cb26:	push   edi
 100cb27:	cmp    eax,ebx
 100cb29:	je     0x100cb9a
 100cb2b:	cmp    eax,0x1013de8
 100cb30:	je     0x100cb9a
 100cb32:	mov    eax,DWORD PTR [esi+0xb0]
 100cb38:	cmp    eax,ebx
 100cb3a:	je     0x100cb9a
 100cb3c:	cmp    DWORD PTR [eax],ebx
 100cb3e:	jne    0x100cb9a
 100cb40:	mov    eax,DWORD PTR [esi+0xb8]
 100cb46:	cmp    eax,ebx
 100cb48:	je     0x100cb61
 100cb4a:	cmp    DWORD PTR [eax],ebx
 100cb4c:	jne    0x100cb61
 100cb4e:	push   eax
 100cb4f:	call   0x100af81
 100cb54:	push   DWORD PTR [esi+0xbc]
 100cb5a:	call   0x1010640
 100cb5f:	pop    ecx
 100cb60:	pop    ecx
 100cb61:	mov    eax,DWORD PTR [esi+0xb4]
 100cb67:	cmp    eax,ebx
 100cb69:	je     0x100cb82
 100cb6b:	cmp    DWORD PTR [eax],ebx
 100cb6d:	jne    0x100cb82
 100cb6f:	push   eax
 100cb70:	call   0x100af81
 100cb75:	push   DWORD PTR [esi+0xbc]
 100cb7b:	call   0x10105d2
 100cb80:	pop    ecx
 100cb81:	pop    ecx
 100cb82:	push   DWORD PTR [esi+0xb0]
 100cb88:	call   0x100af81
 100cb8d:	push   DWORD PTR [esi+0xbc]
 100cb93:	call   0x100af81
 100cb98:	pop    ecx
 100cb99:	pop    ecx
 100cb9a:	mov    eax,DWORD PTR [esi+0xc0]
 100cba0:	cmp    eax,ebx
 100cba2:	je     0x100cbe8
 100cba4:	cmp    DWORD PTR [eax],ebx
 100cba6:	jne    0x100cbe8
 100cba8:	mov    eax,DWORD PTR [esi+0xc4]
 100cbae:	sub    eax,0xfe
 100cbb3:	push   eax
 100cbb4:	call   0x100af81
 100cbb9:	mov    eax,DWORD PTR [esi+0xcc]
 100cbbf:	mov    edi,0x80
 100cbc4:	sub    eax,edi
 100cbc6:	push   eax
 100cbc7:	call   0x100af81
 100cbcc:	mov    eax,DWORD PTR [esi+0xd0]
 100cbd2:	sub    eax,edi
 100cbd4:	push   eax
 100cbd5:	call   0x100af81
 100cbda:	push   DWORD PTR [esi+0xc0]
 100cbe0:	call   0x100af81
 100cbe5:	add    esp,0x10
 100cbe8:	mov    eax,DWORD PTR [esi+0xd4]
 100cbee:	cmp    eax,0x1013a30
 100cbf3:	je     0x100cc10
 100cbf5:	cmp    DWORD PTR [eax+0xb4],ebx
 100cbfb:	jne    0x100cc10
 100cbfd:	push   eax
 100cbfe:	call   0x1010256
 100cc03:	push   DWORD PTR [esi+0xd4]
 100cc09:	call   0x100af81
 100cc0e:	pop    ecx
 100cc0f:	pop    ecx
 100cc10:	lea    edi,[esi+0x50]
 100cc13:	mov    DWORD PTR [ebp+0x8],0x6
 100cc1a:	cmp    DWORD PTR [edi-0x8],0x1013a2c
 100cc21:	je     0x100cc34
 100cc23:	mov    eax,DWORD PTR [edi]
 100cc25:	cmp    eax,ebx
 100cc27:	je     0x100cc34
 100cc29:	cmp    DWORD PTR [eax],ebx
 100cc2b:	jne    0x100cc34
 100cc2d:	push   eax
 100cc2e:	call   0x100af81
 100cc33:	pop    ecx
 100cc34:	cmp    DWORD PTR [edi-0x4],ebx
 100cc37:	je     0x100cc4b
 100cc39:	mov    eax,DWORD PTR [edi+0x4]
 100cc3c:	cmp    eax,ebx
 100cc3e:	je     0x100cc4b
 100cc40:	cmp    DWORD PTR [eax],ebx
 100cc42:	jne    0x100cc4b
 100cc44:	push   eax
 100cc45:	call   0x100af81
 100cc4a:	pop    ecx
 100cc4b:	add    edi,0x10
 100cc4e:	dec    DWORD PTR [ebp+0x8]
 100cc51:	jne    0x100cc1a
 100cc53:	push   esi
 100cc54:	call   0x100af81
 100cc59:	pop    ecx
 100cc5a:	pop    edi
 100cc5b:	pop    esi
 100cc5c:	pop    ebx
 100cc5d:	pop    ebp
 100cc5e:	ret    
 100cc5f:	int3   
 100cc60:	int3   
 100cc61:	int3   
 100cc62:	int3   
 100cc63:	int3   
 100cc64:	mov    edi,edi
 100cc66:	push   ebp
 100cc67:	mov    ebp,esp
 100cc69:	push   edi
 100cc6a:	mov    edi,DWORD PTR [ebp+0xc]
 100cc6d:	test   edi,edi
 100cc6f:	je     0x100ccac
 100cc71:	mov    eax,DWORD PTR [ebp+0x8]
 100cc74:	test   eax,eax
 100cc76:	je     0x100ccac
 100cc78:	push   esi
 100cc79:	mov    esi,DWORD PTR [eax]
 100cc7b:	cmp    esi,edi
 100cc7d:	je     0x100cca7
 100cc7f:	push   edi
 100cc80:	mov    DWORD PTR [eax],edi
 100cc82:	call   0x100c9e2
 100cc87:	pop    ecx
 100cc88:	test   esi,esi
 100cc8a:	je     0x100cca7
 100cc8c:	push   esi
 100cc8d:	call   0x100ca76
 100cc92:	cmp    DWORD PTR [esi],0x0
 100cc95:	pop    ecx
 100cc96:	jne    0x100cca7
 100cc98:	cmp    esi,0x1013b98
 100cc9e:	je     0x100cca7
 100cca0:	push   esi
 100cca1:	call   0x100cb14
 100cca6:	pop    ecx
 100cca7:	mov    eax,edi
 100cca9:	pop    esi
 100ccaa:	jmp    0x100ccae
 100ccac:	xor    eax,eax
 100ccae:	pop    edi
 100ccaf:	pop    ebp
 100ccb0:	ret    
 100ccb1:	int3   
 100ccb2:	int3   
 100ccb3:	int3   
 100ccb4:	int3   
 100ccb5:	int3   
 100ccb6:	push   0xc
 100ccb8:	push   0x1011c18
 100ccbd:	call   0x1009cd0
 100ccc2:	call   0x10099cb
 100ccc7:	mov    esi,eax
 100ccc9:	mov    eax,ds:0x1013a28
 100ccce:	test   DWORD PTR [esi+0x70],eax
 100ccd1:	je     0x100ccf5
 100ccd3:	cmp    DWORD PTR [esi+0x6c],0x0
 100ccd7:	je     0x100ccf5
 100ccd9:	call   0x10099cb
 100ccde:	mov    esi,DWORD PTR [eax+0x6c]
 100cce1:	test   esi,esi
 100cce3:	jne    0x100cced
 100cce5:	push   0x20
 100cce7:	call   0x1008d8e
 100ccec:	pop    ecx
 100cced:	mov    eax,esi
 100ccef:	call   0x1009d15
 100ccf4:	ret    
 100ccf5:	push   0xc
 100ccf7:	call   0x100d473
 100ccfc:	pop    ecx
 100ccfd:	and    DWORD PTR [ebp-0x4],0x0
 100cd01:	push   DWORD PTR ds:0x1013c70
 100cd07:	add    esi,0x6c
 100cd0a:	push   esi
 100cd0b:	call   0x100cc64
 100cd10:	pop    ecx
 100cd11:	pop    ecx
 100cd12:	mov    DWORD PTR [ebp-0x1c],eax
 100cd15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100cd1c:	call   0x100cd23
 100cd21:	jmp    0x100cce1
 100cd23:	push   0xc
 100cd25:	call   0x100d390
 100cd2a:	pop    ecx
 100cd2b:	mov    esi,DWORD PTR [ebp-0x1c]
 100cd2e:	ret    
 100cd2f:	int3   
 100cd30:	int3   
 100cd31:	int3   
 100cd32:	int3   
 100cd33:	int3   
 100cd34:	mov    edi,edi
 100cd36:	push   ebp
 100cd37:	mov    ebp,esp
 100cd39:	mov    edx,DWORD PTR [ebp+0x8]
 100cd3c:	push   esi
 100cd3d:	push   edi
 100cd3e:	test   edx,edx
 100cd40:	je     0x100cd49
 100cd42:	mov    edi,DWORD PTR [ebp+0xc]
 100cd45:	test   edi,edi
 100cd47:	jne    0x100cd5c
 100cd49:	call   0x100af29
 100cd4e:	push   0x16
 100cd50:	pop    esi
 100cd51:	mov    DWORD PTR [eax],esi
 100cd53:	call   0x100aecd
 100cd58:	mov    eax,esi
 100cd5a:	jmp    0x100cd8f
 100cd5c:	mov    eax,DWORD PTR [ebp+0x10]
 100cd5f:	test   eax,eax
 100cd61:	jne    0x100cd67
 100cd63:	mov    BYTE PTR [edx],al
 100cd65:	jmp    0x100cd49
 100cd67:	mov    esi,edx
 100cd69:	sub    esi,eax
 100cd6b:	mov    cl,BYTE PTR [eax]
 100cd6d:	mov    BYTE PTR [esi+eax*1],cl
 100cd70:	inc    eax
 100cd71:	test   cl,cl
 100cd73:	je     0x100cd78
 100cd75:	dec    edi
 100cd76:	jne    0x100cd6b
 100cd78:	test   edi,edi
 100cd7a:	jne    0x100cd8d
 100cd7c:	mov    BYTE PTR [edx],0x0
 100cd7f:	call   0x100af29
 100cd84:	push   0x22
 100cd86:	pop    ecx
 100cd87:	mov    DWORD PTR [eax],ecx
 100cd89:	mov    esi,ecx
 100cd8b:	jmp    0x100cd53
 100cd8d:	xor    eax,eax
 100cd8f:	pop    edi
 100cd90:	pop    esi
 100cd91:	pop    ebp
 100cd92:	ret    
 100cd93:	int3   
 100cd94:	int3   
 100cd95:	int3   
 100cd96:	int3   
 100cd97:	int3   
 100cd98:	mov    edi,edi
 100cd9a:	push   ebp
 100cd9b:	mov    ebp,esp
 100cd9d:	sub    esp,0x10
 100cda0:	mov    eax,ds:0x1013054
 100cda5:	xor    eax,ebp
 100cda7:	mov    DWORD PTR [ebp-0x4],eax
 100cdaa:	mov    edx,DWORD PTR [ebp+0x18]
 100cdad:	push   ebx
 100cdae:	xor    ebx,ebx
 100cdb0:	push   esi
 100cdb1:	push   edi
 100cdb2:	cmp    edx,ebx
 100cdb4:	jle    0x100cdd5
 100cdb6:	mov    eax,DWORD PTR [ebp+0x14]
 100cdb9:	mov    ecx,edx
 100cdbb:	dec    ecx
 100cdbc:	cmp    BYTE PTR [eax],bl
 100cdbe:	je     0x100cdc8
 100cdc0:	inc    eax
 100cdc1:	cmp    ecx,ebx
 100cdc3:	jne    0x100cdbb
 100cdc5:	or     ecx,0xffffffff
 100cdc8:	mov    eax,edx
 100cdca:	sub    eax,ecx
 100cdcc:	dec    eax
 100cdcd:	cmp    eax,edx
 100cdcf:	jge    0x100cdd2
 100cdd1:	inc    eax
 100cdd2:	mov    DWORD PTR [ebp+0x18],eax
 100cdd5:	mov    DWORD PTR [ebp-0x8],ebx
 100cdd8:	cmp    DWORD PTR [ebp+0x24],ebx
 100cddb:	jne    0x100cde8
 100cddd:	mov    eax,DWORD PTR [ebp+0x8]
 100cde0:	mov    eax,DWORD PTR [eax]
 100cde2:	mov    eax,DWORD PTR [eax+0x4]
 100cde5:	mov    DWORD PTR [ebp+0x24],eax
 100cde8:	mov    esi,DWORD PTR ds:0x10010e8
 100cdee:	xor    eax,eax
 100cdf0:	cmp    DWORD PTR [ebp+0x28],ebx
 100cdf3:	push   ebx
 100cdf4:	push   ebx
 100cdf5:	push   DWORD PTR [ebp+0x18]
 100cdf8:	setne  al
 100cdfb:	push   DWORD PTR [ebp+0x14]
 100cdfe:	lea    eax,[eax*8+0x1]
 100ce05:	push   eax
 100ce06:	push   DWORD PTR [ebp+0x24]
 100ce09:	call   esi
 100ce0b:	mov    edi,eax
 100ce0d:	mov    DWORD PTR [ebp-0x10],edi
 100ce10:	cmp    edi,ebx
 100ce12:	jne    0x100ce1b
 100ce14:	xor    eax,eax
 100ce16:	jmp    0x100cf6d
 100ce1b:	jle    0x100ce60
 100ce1d:	push   0xffffffe0
 100ce1f:	xor    edx,edx
 100ce21:	pop    eax
 100ce22:	div    edi
 100ce24:	cmp    eax,0x2
 100ce27:	jb     0x100ce60
 100ce29:	lea    eax,[edi+edi*1+0x8]
 100ce2d:	cmp    eax,0x400
 100ce32:	ja     0x100ce47
 100ce34:	call   0x100d000
 100ce39:	mov    eax,esp
 100ce3b:	cmp    eax,ebx
 100ce3d:	je     0x100ce5b
 100ce3f:	mov    DWORD PTR [eax],0xcccc
 100ce45:	jmp    0x100ce58
 100ce47:	push   eax
 100ce48:	call   0x100c0d7
 100ce4d:	pop    ecx
 100ce4e:	cmp    eax,ebx
 100ce50:	je     0x100ce5b
 100ce52:	mov    DWORD PTR [eax],0xdddd
 100ce58:	add    eax,0x8
 100ce5b:	mov    DWORD PTR [ebp-0xc],eax
 100ce5e:	jmp    0x100ce63
 100ce60:	mov    DWORD PTR [ebp-0xc],ebx
 100ce63:	cmp    DWORD PTR [ebp-0xc],ebx
 100ce66:	je     0x100ce14
 100ce68:	push   edi
 100ce69:	push   DWORD PTR [ebp-0xc]
 100ce6c:	push   DWORD PTR [ebp+0x18]
 100ce6f:	push   DWORD PTR [ebp+0x14]
 100ce72:	push   0x1
 100ce74:	push   DWORD PTR [ebp+0x24]
 100ce77:	call   esi
 100ce79:	test   eax,eax
 100ce7b:	je     0x100cf61
 100ce81:	mov    esi,DWORD PTR ds:0x10010ec
 100ce87:	push   ebx
 100ce88:	push   ebx
 100ce89:	push   edi
 100ce8a:	push   DWORD PTR [ebp-0xc]
 100ce8d:	push   DWORD PTR [ebp+0x10]
 100ce90:	push   DWORD PTR [ebp+0xc]
 100ce93:	call   esi
 100ce95:	mov    DWORD PTR [ebp-0x8],eax
 100ce98:	cmp    eax,ebx
 100ce9a:	je     0x100cf61
 100cea0:	mov    ecx,0x400
 100cea5:	test   DWORD PTR [ebp+0x10],ecx
 100cea8:	je     0x100ced3
 100ceaa:	mov    eax,DWORD PTR [ebp+0x20]
 100cead:	cmp    eax,ebx
 100ceaf:	je     0x100cf61
 100ceb5:	cmp    DWORD PTR [ebp-0x8],eax
 100ceb8:	jg     0x100cf61
 100cebe:	push   eax
 100cebf:	push   DWORD PTR [ebp+0x1c]
 100cec2:	push   edi
 100cec3:	push   DWORD PTR [ebp-0xc]
 100cec6:	push   DWORD PTR [ebp+0x10]
 100cec9:	push   DWORD PTR [ebp+0xc]
 100cecc:	call   esi
 100cece:	jmp    0x100cf61
 100ced3:	mov    edi,DWORD PTR [ebp-0x8]
 100ced6:	cmp    edi,ebx
 100ced8:	jle    0x100cf1c
 100ceda:	push   0xffffffe0
 100cedc:	xor    edx,edx
 100cede:	pop    eax
 100cedf:	div    edi
 100cee1:	cmp    eax,0x2
 100cee4:	jb     0x100cf1c
 100cee6:	lea    eax,[edi+edi*1+0x8]
 100ceea:	cmp    eax,ecx
 100ceec:	ja     0x100cf04
 100ceee:	call   0x100d000
 100cef3:	mov    edi,esp
 100cef5:	cmp    edi,ebx
 100cef7:	je     0x100cf61
 100cef9:	mov    DWORD PTR [edi],0xcccc
 100ceff:	add    edi,0x8
 100cf02:	jmp    0x100cf1e
 100cf04:	push   eax
 100cf05:	call   0x100c0d7
 100cf0a:	pop    ecx
 100cf0b:	cmp    eax,ebx
 100cf0d:	je     0x100cf18
 100cf0f:	mov    DWORD PTR [eax],0xdddd
 100cf15:	add    eax,0x8
 100cf18:	mov    edi,eax
 100cf1a:	jmp    0x100cf1e
 100cf1c:	xor    edi,edi
 100cf1e:	cmp    edi,ebx
 100cf20:	je     0x100cf61
 100cf22:	push   DWORD PTR [ebp-0x8]
 100cf25:	push   edi
 100cf26:	push   DWORD PTR [ebp-0x10]
 100cf29:	push   DWORD PTR [ebp-0xc]
 100cf2c:	push   DWORD PTR [ebp+0x10]
 100cf2f:	push   DWORD PTR [ebp+0xc]
 100cf32:	call   esi
 100cf34:	test   eax,eax
 100cf36:	je     0x100cf5a
 100cf38:	push   ebx
 100cf39:	push   ebx
 100cf3a:	cmp    DWORD PTR [ebp+0x20],ebx
 100cf3d:	jne    0x100cf43
 100cf3f:	push   ebx
 100cf40:	push   ebx
 100cf41:	jmp    0x100cf49
 100cf43:	push   DWORD PTR [ebp+0x20]
 100cf46:	push   DWORD PTR [ebp+0x1c]
 100cf49:	push   DWORD PTR [ebp-0x8]
 100cf4c:	push   edi
 100cf4d:	push   ebx
 100cf4e:	push   DWORD PTR [ebp+0x24]
 100cf51:	call   DWORD PTR ds:0x100115c
 100cf57:	mov    DWORD PTR [ebp-0x8],eax
 100cf5a:	push   edi
 100cf5b:	call   0x100867f
 100cf60:	pop    ecx
 100cf61:	push   DWORD PTR [ebp-0xc]
 100cf64:	call   0x100867f
 100cf69:	mov    eax,DWORD PTR [ebp-0x8]
 100cf6c:	pop    ecx
 100cf6d:	lea    esp,[ebp-0x1c]
 100cf70:	pop    edi
 100cf71:	pop    esi
 100cf72:	pop    ebx
 100cf73:	mov    ecx,DWORD PTR [ebp-0x4]
 100cf76:	xor    ecx,ebp
 100cf78:	call   0x1008355
 100cf7d:	leave  
 100cf7e:	ret    
 100cf7f:	int3   
 100cf80:	int3   
 100cf81:	int3   
 100cf82:	int3   
 100cf83:	int3   
 100cf84:	mov    edi,edi
 100cf86:	push   ebp
 100cf87:	mov    ebp,esp
 100cf89:	sub    esp,0x10
 100cf8c:	push   DWORD PTR [ebp+0x8]
 100cf8f:	lea    ecx,[ebp-0x10]
 100cf92:	call   0x10086a4
 100cf97:	push   DWORD PTR [ebp+0x28]
 100cf9a:	lea    eax,[ebp-0x10]
 100cf9d:	push   DWORD PTR [ebp+0x24]
 100cfa0:	push   DWORD PTR [ebp+0x20]
 100cfa3:	push   DWORD PTR [ebp+0x1c]
 100cfa6:	push   DWORD PTR [ebp+0x18]
 100cfa9:	push   DWORD PTR [ebp+0x14]
 100cfac:	push   DWORD PTR [ebp+0x10]
 100cfaf:	push   DWORD PTR [ebp+0xc]
 100cfb2:	push   eax
 100cfb3:	call   0x100cd98
 100cfb8:	add    esp,0x24
 100cfbb:	cmp    BYTE PTR [ebp-0x4],0x0
 100cfbf:	je     0x100cfc8
 100cfc1:	mov    ecx,DWORD PTR [ebp-0x8]
 100cfc4:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100cfc8:	leave  
 100cfc9:	ret    
 100cfca:	int3   
 100cfcb:	int3   
 100cfcc:	int3   
 100cfcd:	int3   
 100cfce:	int3   
 100cfcf:	mov    edi,edi
 100cfd1:	push   ebp
 100cfd2:	mov    ebp,esp
 100cfd4:	xor    eax,eax
 100cfd6:	cmp    DWORD PTR [ebp+0xc],eax
 100cfd9:	jbe    0x100cfea
 100cfdb:	mov    ecx,DWORD PTR [ebp+0x8]
 100cfde:	cmp    BYTE PTR [ecx],0x0
 100cfe1:	je     0x100cfea
 100cfe3:	inc    eax
 100cfe4:	inc    ecx
 100cfe5:	cmp    eax,DWORD PTR [ebp+0xc]
 100cfe8:	jb     0x100cfde
 100cfea:	pop    ebp
 100cfeb:	ret    
 100cfec:	int3   
 100cfed:	int3   
 100cfee:	int3   
 100cfef:	int3   
 100cff0:	int3   
 100cff1:	int3   
 100cff2:	int3   
 100cff3:	int3   
 100cff4:	int3   
 100cff5:	int3   
 100cff6:	int3   
 100cff7:	int3   
 100cff8:	int3   
 100cff9:	int3   
 100cffa:	int3   
 100cffb:	int3   
 100cffc:	int3   
 100cffd:	int3   
 100cffe:	int3   
 100cfff:	int3   
 100d000:	push   ecx
 100d001:	lea    ecx,[esp+0x8]
 100d005:	sub    ecx,eax
 100d007:	and    ecx,0xf
 100d00a:	add    eax,ecx
 100d00c:	sbb    ecx,ecx
 100d00e:	or     eax,ecx
 100d010:	pop    ecx
 100d011:	jmp    0x1010750
 100d016:	push   ecx
 100d017:	lea    ecx,[esp+0x8]
 100d01b:	sub    ecx,eax
 100d01d:	and    ecx,0x7
 100d020:	add    eax,ecx
 100d022:	sbb    ecx,ecx
 100d024:	or     eax,ecx
 100d026:	pop    ecx
 100d027:	jmp    0x1010750
 100d02c:	int3   
 100d02d:	int3   
 100d02e:	int3   
 100d02f:	int3   
 100d030:	int3   
 100d031:	mov    edi,edi
 100d033:	push   ebp
 100d034:	mov    ebp,esp
 100d036:	sub    esp,0x1c
 100d039:	push   esi
 100d03a:	push   DWORD PTR [ebp+0x8]
 100d03d:	lea    ecx,[ebp-0x1c]
 100d040:	call   0x10086a4
 100d045:	mov    eax,DWORD PTR [ebp+0x10]
 100d048:	mov    esi,DWORD PTR [ebp+0xc]
 100d04b:	test   eax,eax
 100d04d:	je     0x100d051
 100d04f:	mov    DWORD PTR [eax],esi
 100d051:	test   esi,esi
 100d053:	jne    0x100d079
 100d055:	call   0x100af29
 100d05a:	mov    DWORD PTR [eax],0x16
 100d060:	call   0x100aecd
 100d065:	cmp    BYTE PTR [ebp-0x10],0x0
 100d069:	je     0x100d072
 100d06b:	mov    eax,DWORD PTR [ebp-0x14]
 100d06e:	and    DWORD PTR [eax+0x70],0xfffffffd
 100d072:	xor    eax,eax
 100d074:	jmp    0x100d259
 100d079:	cmp    DWORD PTR [ebp+0x14],0x0
 100d07d:	je     0x100d08b
 100d07f:	cmp    DWORD PTR [ebp+0x14],0x2
 100d083:	jl     0x100d055
 100d085:	cmp    DWORD PTR [ebp+0x14],0x24
 100d089:	jg     0x100d055
 100d08b:	and    DWORD PTR [ebp-0x4],0x0
 100d08f:	mov    ecx,DWORD PTR [ebp-0x1c]
 100d092:	push   ebx
 100d093:	mov    bl,BYTE PTR [esi]
 100d095:	push   edi
 100d096:	lea    edi,[esi+0x1]
 100d099:	cmp    DWORD PTR [ecx+0xac],0x1
 100d0a0:	jle    0x100d0b9
 100d0a2:	lea    eax,[ebp-0x1c]
 100d0a5:	push   eax
 100d0a6:	movzx  eax,bl
 100d0a9:	push   0x8
 100d0ab:	push   eax
 100d0ac:	call   0x10108d5
 100d0b1:	mov    ecx,DWORD PTR [ebp-0x1c]
 100d0b4:	add    esp,0xc
 100d0b7:	jmp    0x100d0c9
 100d0b9:	mov    edx,DWORD PTR [ecx+0xc8]
 100d0bf:	movzx  eax,bl
 100d0c2:	movzx  eax,WORD PTR [edx+eax*2]
 100d0c6:	and    eax,0x8
 100d0c9:	test   eax,eax
 100d0cb:	je     0x100d0d2
 100d0cd:	mov    bl,BYTE PTR [edi]
 100d0cf:	inc    edi
 100d0d0:	jmp    0x100d099
 100d0d2:	cmp    bl,0x2d
 100d0d5:	jne    0x100d0dd
 100d0d7:	or     DWORD PTR [ebp+0x18],0x2
 100d0db:	jmp    0x100d0e2
 100d0dd:	cmp    bl,0x2b
 100d0e0:	jne    0x100d0e5
 100d0e2:	mov    bl,BYTE PTR [edi]
 100d0e4:	inc    edi
 100d0e5:	mov    eax,DWORD PTR [ebp+0x14]
 100d0e8:	test   eax,eax
 100d0ea:	js     0x100d23f
 100d0f0:	cmp    eax,0x1
 100d0f3:	je     0x100d23f
 100d0f9:	cmp    eax,0x24
 100d0fc:	jg     0x100d23f
 100d102:	test   eax,eax
 100d104:	jne    0x100d130
 100d106:	cmp    bl,0x30
 100d109:	je     0x100d114
 100d10b:	mov    DWORD PTR [ebp+0x14],0xa
 100d112:	jmp    0x100d14a
 100d114:	mov    al,BYTE PTR [edi]
 100d116:	cmp    al,0x78
 100d118:	je     0x100d127
 100d11a:	cmp    al,0x58
 100d11c:	je     0x100d127
 100d11e:	mov    DWORD PTR [ebp+0x14],0x8
 100d125:	jmp    0x100d14a
 100d127:	mov    DWORD PTR [ebp+0x14],0x10
 100d12e:	jmp    0x100d13a
 100d130:	cmp    eax,0x10
 100d133:	jne    0x100d14a
 100d135:	cmp    bl,0x30
 100d138:	jne    0x100d14a
 100d13a:	mov    al,BYTE PTR [edi]
 100d13c:	cmp    al,0x78
 100d13e:	je     0x100d144
 100d140:	cmp    al,0x58
 100d142:	jne    0x100d14a
 100d144:	mov    bl,BYTE PTR [edi+0x1]
 100d147:	add    edi,0x2
 100d14a:	or     eax,0xffffffff
 100d14d:	xor    edx,edx
 100d14f:	div    DWORD PTR [ebp+0x14]
 100d152:	mov    esi,DWORD PTR [ecx+0xc8]
 100d158:	mov    DWORD PTR [ebp-0x8],edx
 100d15b:	movzx  ecx,bl
 100d15e:	movzx  ecx,WORD PTR [esi+ecx*2]
 100d162:	mov    edx,ecx
 100d164:	and    edx,0x4
 100d167:	je     0x100d171
 100d169:	movsx  ecx,bl
 100d16c:	sub    ecx,0x30
 100d16f:	jmp    0x100d18a
 100d171:	and    ecx,0x103
 100d177:	je     0x100d1a9
 100d179:	lea    ecx,[ebx-0x61]
 100d17c:	cmp    cl,0x19
 100d17f:	movsx  ecx,bl
 100d182:	ja     0x100d187
 100d184:	sub    ecx,0x20
 100d187:	add    ecx,0xffffffc9
 100d18a:	cmp    ecx,DWORD PTR [ebp+0x14]
 100d18d:	jae    0x100d1a9
 100d18f:	or     DWORD PTR [ebp+0x18],0x8
 100d193:	cmp    DWORD PTR [ebp-0x4],eax
 100d196:	jb     0x100d1c0
 100d198:	jne    0x100d19f
 100d19a:	cmp    ecx,DWORD PTR [ebp-0x8]
 100d19d:	jbe    0x100d1c0
 100d19f:	or     DWORD PTR [ebp+0x18],0x4
 100d1a3:	cmp    DWORD PTR [ebp+0x10],0x0
 100d1a7:	jne    0x100d1cc
 100d1a9:	mov    eax,DWORD PTR [ebp+0x18]
 100d1ac:	dec    edi
 100d1ad:	test   al,0x8
 100d1af:	jne    0x100d1d1
 100d1b1:	cmp    DWORD PTR [ebp+0x10],0x0
 100d1b5:	je     0x100d1ba
 100d1b7:	mov    edi,DWORD PTR [ebp+0xc]
 100d1ba:	and    DWORD PTR [ebp-0x4],0x0
 100d1be:	jmp    0x100d21b
 100d1c0:	mov    edx,DWORD PTR [ebp-0x4]
 100d1c3:	imul   edx,DWORD PTR [ebp+0x14]
 100d1c7:	add    edx,ecx
 100d1c9:	mov    DWORD PTR [ebp-0x4],edx
 100d1cc:	mov    bl,BYTE PTR [edi]
 100d1ce:	inc    edi
 100d1cf:	jmp    0x100d15b
 100d1d1:	mov    esi,0x7fffffff
 100d1d6:	test   al,0x4
 100d1d8:	jne    0x100d1f5
 100d1da:	test   al,0x1
 100d1dc:	jne    0x100d21b
 100d1de:	and    eax,0x2
 100d1e1:	je     0x100d1ec
 100d1e3:	cmp    DWORD PTR [ebp-0x4],0x80000000
 100d1ea:	ja     0x100d1f5
 100d1ec:	test   eax,eax
 100d1ee:	jne    0x100d21b
 100d1f0:	cmp    DWORD PTR [ebp-0x4],esi
 100d1f3:	jbe    0x100d21b
 100d1f5:	call   0x100af29
 100d1fa:	test   BYTE PTR [ebp+0x18],0x1
 100d1fe:	mov    DWORD PTR [eax],0x22
 100d204:	je     0x100d20c
 100d206:	or     DWORD PTR [ebp-0x4],0xffffffff
 100d20a:	jmp    0x100d21b
 100d20c:	test   BYTE PTR [ebp+0x18],0x2
 100d210:	push   0x0
 100d212:	pop    eax
 100d213:	setne  al
 100d216:	add    eax,esi
 100d218:	mov    DWORD PTR [ebp-0x4],eax
 100d21b:	mov    eax,DWORD PTR [ebp+0x10]
 100d21e:	test   eax,eax
 100d220:	je     0x100d224
 100d222:	mov    DWORD PTR [eax],edi
 100d224:	test   BYTE PTR [ebp+0x18],0x2
 100d228:	je     0x100d22d
 100d22a:	neg    DWORD PTR [ebp-0x4]
 100d22d:	cmp    BYTE PTR [ebp-0x10],0x0
 100d231:	je     0x100d23a
 100d233:	mov    eax,DWORD PTR [ebp-0x14]
 100d236:	and    DWORD PTR [eax+0x70],0xfffffffd
 100d23a:	mov    eax,DWORD PTR [ebp-0x4]
 100d23d:	jmp    0x100d257
 100d23f:	mov    eax,DWORD PTR [ebp+0x10]
 100d242:	test   eax,eax
 100d244:	je     0x100d248
 100d246:	mov    DWORD PTR [eax],esi
 100d248:	cmp    BYTE PTR [ebp-0x10],0x0
 100d24c:	je     0x100d255
 100d24e:	mov    eax,DWORD PTR [ebp-0x14]
 100d251:	and    DWORD PTR [eax+0x70],0xfffffffd
 100d255:	xor    eax,eax
 100d257:	pop    edi
 100d258:	pop    ebx
 100d259:	pop    esi
 100d25a:	leave  
 100d25b:	ret    
 100d25c:	int3   
 100d25d:	int3   
 100d25e:	int3   
 100d25f:	int3   
 100d260:	int3   
 100d261:	mov    edi,edi
 100d263:	push   ebp
 100d264:	mov    ebp,esp
 100d266:	xor    eax,eax
 100d268:	push   eax
 100d269:	push   DWORD PTR [ebp+0x10]
 100d26c:	push   DWORD PTR [ebp+0xc]
 100d26f:	push   DWORD PTR [ebp+0x8]
 100d272:	cmp    DWORD PTR ds:0x1014dc4,eax
 100d278:	jne    0x100d281
 100d27a:	push   0x1013c74
 100d27f:	jmp    0x100d282
 100d281:	push   eax
 100d282:	call   0x100d031
 100d287:	add    esp,0x14
 100d28a:	pop    ebp
 100d28b:	ret    
 100d28c:	int3   
 100d28d:	int3   
 100d28e:	int3   
 100d28f:	int3   
 100d290:	int3   
 100d291:	push   0x8
 100d293:	push   0x1011c38
 100d298:	call   0x1009cd0
 100d29d:	call   0x10099cb
 100d2a2:	mov    eax,DWORD PTR [eax+0x78]
 100d2a5:	test   eax,eax
 100d2a7:	je     0x100d2bf
 100d2a9:	and    DWORD PTR [ebp-0x4],0x0
 100d2ad:	call   eax
 100d2af:	jmp    0x100d2b8
 100d2b1:	xor    eax,eax
 100d2b3:	inc    eax
 100d2b4:	ret    
 100d2b5:	mov    esp,DWORD PTR [ebp-0x18]
 100d2b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100d2bf:	call   0x10109d9
 100d2c4:	call   0x1009d15
 100d2c9:	ret    
 100d2ca:	int3   
 100d2cb:	int3   
 100d2cc:	int3   
 100d2cd:	int3   
 100d2ce:	int3   
 100d2cf:	push   0x100d291
 100d2d4:	call   DWORD PTR ds:0x1001174
 100d2da:	mov    ds:0x1014dc8,eax
 100d2df:	ret    
 100d2e0:	int3   
 100d2e1:	int3   
 100d2e2:	int3   
 100d2e3:	int3   
 100d2e4:	int3   
 100d2e5:	mov    edi,edi
 100d2e7:	push   esi
 100d2e8:	push   edi
 100d2e9:	xor    esi,esi
 100d2eb:	mov    edi,0x1014dd0
 100d2f0:	cmp    DWORD PTR [esi*8+0x1013c8c],0x1
 100d2f8:	jne    0x100d317
 100d2fa:	lea    eax,[esi*8+0x1013c88]
 100d301:	mov    DWORD PTR [eax],edi
 100d303:	push   0xfa0
 100d308:	push   DWORD PTR [eax]
 100d30a:	add    edi,0x18
 100d30d:	call   DWORD PTR ds:0x1001168
 100d313:	test   eax,eax
 100d315:	je     0x100d323
 100d317:	inc    esi
 100d318:	cmp    esi,0x24
 100d31b:	jl     0x100d2f0
 100d31d:	xor    eax,eax
 100d31f:	inc    eax
 100d320:	pop    edi
 100d321:	pop    esi
 100d322:	ret    
 100d323:	and    DWORD PTR [esi*8+0x1013c88],0x0
 100d32b:	xor    eax,eax
 100d32d:	jmp    0x100d320
 100d32f:	int3   
 100d330:	int3   
 100d331:	int3   
 100d332:	int3   
 100d333:	int3   
 100d334:	mov    edi,edi
 100d336:	push   ebx
 100d337:	mov    ebx,DWORD PTR ds:0x1001170
 100d33d:	push   esi
 100d33e:	mov    esi,0x1013c88
 100d343:	push   edi
 100d344:	mov    edi,DWORD PTR [esi]
 100d346:	test   edi,edi
 100d348:	je     0x100d35d
 100d34a:	cmp    DWORD PTR [esi+0x4],0x1
 100d34e:	je     0x100d35d
 100d350:	push   edi
 100d351:	call   ebx
 100d353:	push   edi
 100d354:	call   0x100af81
 100d359:	and    DWORD PTR [esi],0x0
 100d35c:	pop    ecx
 100d35d:	add    esi,0x8
 100d360:	cmp    esi,0x1013da8
 100d366:	jl     0x100d344
 100d368:	mov    esi,0x1013c88
 100d36d:	pop    edi
 100d36e:	mov    eax,DWORD PTR [esi]
 100d370:	test   eax,eax
 100d372:	je     0x100d37d
 100d374:	cmp    DWORD PTR [esi+0x4],0x1
 100d378:	jne    0x100d37d
 100d37a:	push   eax
 100d37b:	call   ebx
 100d37d:	add    esi,0x8
 100d380:	cmp    esi,0x1013da8
 100d386:	jl     0x100d36e
 100d388:	pop    esi
 100d389:	pop    ebx
 100d38a:	ret    
 100d38b:	int3   
 100d38c:	int3   
 100d38d:	int3   
 100d38e:	int3   
 100d38f:	int3   
 100d390:	mov    edi,edi
 100d392:	push   ebp
 100d393:	mov    ebp,esp
 100d395:	mov    eax,DWORD PTR [ebp+0x8]
 100d398:	push   DWORD PTR [eax*8+0x1013c88]
 100d39f:	call   DWORD PTR ds:0x1001114
 100d3a5:	pop    ebp
 100d3a6:	ret    
 100d3a7:	int3   
 100d3a8:	int3   
 100d3a9:	int3   
 100d3aa:	int3   
 100d3ab:	int3   
 100d3ac:	push   0xc
 100d3ae:	push   0x1011c58
 100d3b3:	call   0x1009cd0
 100d3b8:	xor    edi,edi
 100d3ba:	inc    edi
 100d3bb:	mov    DWORD PTR [ebp-0x1c],edi
 100d3be:	xor    ebx,ebx
 100d3c0:	cmp    DWORD PTR ds:0x1014a68,ebx
 100d3c6:	jne    0x100d3e0
 100d3c8:	call   0x1008f90
 100d3cd:	push   0x1e
 100d3cf:	call   0x1008ddc
 100d3d4:	push   0xff
 100d3d9:	call   0x1008ab5
 100d3de:	pop    ecx
 100d3df:	pop    ecx
 100d3e0:	mov    esi,DWORD PTR [ebp+0x8]
 100d3e3:	lea    esi,[esi*8+0x1013c88]
 100d3ea:	cmp    DWORD PTR [esi],ebx
 100d3ec:	je     0x100d3f2
 100d3ee:	mov    eax,edi
 100d3f0:	jmp    0x100d45f
 100d3f2:	push   0x18
 100d3f4:	call   0x100dc6f
 100d3f9:	pop    ecx
 100d3fa:	mov    edi,eax
 100d3fc:	cmp    edi,ebx
 100d3fe:	jne    0x100d40f
 100d400:	call   0x100af29
 100d405:	mov    DWORD PTR [eax],0xc
 100d40b:	xor    eax,eax
 100d40d:	jmp    0x100d45f
 100d40f:	push   0xa
 100d411:	call   0x100d473
 100d416:	pop    ecx
 100d417:	mov    DWORD PTR [ebp-0x4],ebx
 100d41a:	cmp    DWORD PTR [esi],ebx
 100d41c:	jne    0x100d449
 100d41e:	push   0xfa0
 100d423:	push   edi
 100d424:	call   DWORD PTR ds:0x1001168
 100d42a:	test   eax,eax
 100d42c:	jne    0x100d445
 100d42e:	push   edi
 100d42f:	call   0x100af81
 100d434:	pop    ecx
 100d435:	call   0x100af29
 100d43a:	mov    DWORD PTR [eax],0xc
 100d440:	mov    DWORD PTR [ebp-0x1c],ebx
 100d443:	jmp    0x100d450
 100d445:	mov    DWORD PTR [esi],edi
 100d447:	jmp    0x100d450
 100d449:	push   edi
 100d44a:	call   0x100af81
 100d44f:	pop    ecx
 100d450:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100d457:	call   0x100d465
 100d45c:	mov    eax,DWORD PTR [ebp-0x1c]
 100d45f:	call   0x1009d15
 100d464:	ret    
 100d465:	push   0xa
 100d467:	call   0x100d390
 100d46c:	pop    ecx
 100d46d:	ret    
 100d46e:	int3   
 100d46f:	int3   
 100d470:	int3   
 100d471:	int3   
 100d472:	int3   
 100d473:	mov    edi,edi
 100d475:	push   ebp
 100d476:	mov    ebp,esp
 100d478:	mov    eax,DWORD PTR [ebp+0x8]
 100d47b:	push   esi
 100d47c:	lea    esi,[eax*8+0x1013c88]
 100d483:	cmp    DWORD PTR [esi],0x0
 100d486:	jne    0x100d49b
 100d488:	push   eax
 100d489:	call   0x100d3ac
 100d48e:	pop    ecx
 100d48f:	test   eax,eax
 100d491:	jne    0x100d49b
 100d493:	push   0x11
 100d495:	call   0x1008d8e
 100d49a:	pop    ecx
 100d49b:	push   DWORD PTR [esi]
 100d49d:	call   DWORD PTR ds:0x1001118
 100d4a3:	pop    esi
 100d4a4:	pop    ebp
 100d4a5:	ret    
 100d4a6:	int3   
 100d4a7:	int3   
 100d4a8:	int3   
 100d4a9:	int3   
 100d4aa:	int3   
 100d4ab:	mov    edi,edi
 100d4ad:	push   ebp
 100d4ae:	mov    ebp,esp
 100d4b0:	mov    eax,DWORD PTR [ebp+0x8]
 100d4b3:	mov    ds:0x1014f20,eax
 100d4b8:	mov    ds:0x1014f24,eax
 100d4bd:	mov    ds:0x1014f28,eax
 100d4c2:	mov    ds:0x1014f2c,eax
 100d4c7:	pop    ebp
 100d4c8:	ret    
 100d4c9:	int3   
 100d4ca:	int3   
 100d4cb:	int3   
 100d4cc:	int3   
 100d4cd:	int3   
 100d4ce:	mov    edi,edi
 100d4d0:	push   ebp
 100d4d1:	mov    ebp,esp
 100d4d3:	mov    eax,DWORD PTR [ebp+0x8]
 100d4d6:	mov    ecx,DWORD PTR ds:0x1002cec
 100d4dc:	push   esi
 100d4dd:	cmp    DWORD PTR [eax+0x4],edx
 100d4e0:	je     0x100d4f1
 100d4e2:	mov    esi,ecx
 100d4e4:	imul   esi,esi,0xc
 100d4e7:	add    esi,DWORD PTR [ebp+0x8]
 100d4ea:	add    eax,0xc
 100d4ed:	cmp    eax,esi
 100d4ef:	jb     0x100d4dd
 100d4f1:	imul   ecx,ecx,0xc
 100d4f4:	add    ecx,DWORD PTR [ebp+0x8]
 100d4f7:	pop    esi
 100d4f8:	cmp    eax,ecx
 100d4fa:	jae    0x100d501
 100d4fc:	cmp    DWORD PTR [eax+0x4],edx
 100d4ff:	je     0x100d503
 100d501:	xor    eax,eax
 100d503:	pop    ebp
 100d504:	ret    
 100d505:	int3   
 100d506:	int3   
 100d507:	int3   
 100d508:	int3   
 100d509:	int3   
 100d50a:	push   DWORD PTR ds:0x1014f28
 100d510:	call   DWORD PTR ds:0x1001148
 100d516:	ret    
 100d517:	int3   
 100d518:	int3   
 100d519:	int3   
 100d51a:	int3   
 100d51b:	int3   
 100d51c:	push   0x20
 100d51e:	push   0x1011c78
 100d523:	call   0x1009cd0
 100d528:	xor    edi,edi
 100d52a:	mov    DWORD PTR [ebp-0x1c],edi
 100d52d:	mov    DWORD PTR [ebp-0x28],edi
 100d530:	mov    ebx,DWORD PTR [ebp+0x8]
 100d533:	cmp    ebx,0xb
 100d536:	jg     0x100d583
 100d538:	je     0x100d54f
 100d53a:	mov    eax,ebx
 100d53c:	push   0x2
 100d53e:	pop    ecx
 100d53f:	sub    eax,ecx
 100d541:	je     0x100d565
 100d543:	sub    eax,ecx
 100d545:	je     0x100d54f
 100d547:	sub    eax,ecx
 100d549:	je     0x100d5a4
 100d54b:	sub    eax,ecx
 100d54d:	jne    0x100d592
 100d54f:	call   0x100994d
 100d554:	mov    edi,eax
 100d556:	mov    DWORD PTR [ebp-0x28],edi
 100d559:	test   edi,edi
 100d55b:	jne    0x100d571
 100d55d:	or     eax,0xffffffff
 100d560:	jmp    0x100d6b9
 100d565:	mov    esi,0x1014f20
 100d56a:	mov    eax,ds:0x1014f20
 100d56f:	jmp    0x100d5c6
 100d571:	push   DWORD PTR [edi+0x5c]
 100d574:	mov    edx,ebx
 100d576:	call   0x100d4ce
 100d57b:	pop    ecx
 100d57c:	lea    esi,[eax+0x8]
 100d57f:	mov    eax,DWORD PTR [esi]
 100d581:	jmp    0x100d5d4
 100d583:	mov    eax,ebx
 100d585:	sub    eax,0xf
 100d588:	je     0x100d5bc
 100d58a:	sub    eax,0x6
 100d58d:	je     0x100d5b0
 100d58f:	dec    eax
 100d590:	je     0x100d5a4
 100d592:	call   0x100af29
 100d597:	mov    DWORD PTR [eax],0x16
 100d59d:	call   0x100aecd
 100d5a2:	jmp    0x100d55d
 100d5a4:	mov    esi,0x1014f28
 100d5a9:	mov    eax,ds:0x1014f28
 100d5ae:	jmp    0x100d5c6
 100d5b0:	mov    esi,0x1014f24
 100d5b5:	mov    eax,ds:0x1014f24
 100d5ba:	jmp    0x100d5c6
 100d5bc:	mov    esi,0x1014f2c
 100d5c1:	mov    eax,ds:0x1014f2c
 100d5c6:	mov    DWORD PTR [ebp-0x1c],0x1
 100d5cd:	push   eax
 100d5ce:	call   DWORD PTR ds:0x1001148
 100d5d4:	mov    DWORD PTR [ebp-0x20],eax
 100d5d7:	xor    eax,eax
 100d5d9:	cmp    DWORD PTR [ebp-0x20],0x1
 100d5dd:	je     0x100d6b9
 100d5e3:	cmp    DWORD PTR [ebp-0x20],eax
 100d5e6:	jne    0x100d5ef
 100d5e8:	push   0x3
 100d5ea:	call   0x1008d4b
 100d5ef:	cmp    DWORD PTR [ebp-0x1c],eax
 100d5f2:	je     0x100d5fb
 100d5f4:	push   eax
 100d5f5:	call   0x100d473
 100d5fa:	pop    ecx
 100d5fb:	xor    eax,eax
 100d5fd:	mov    DWORD PTR [ebp-0x4],eax
 100d600:	cmp    ebx,0x8
 100d603:	je     0x100d60f
 100d605:	cmp    ebx,0xb
 100d608:	je     0x100d60f
 100d60a:	cmp    ebx,0x4
 100d60d:	jne    0x100d62a
 100d60f:	mov    ecx,DWORD PTR [edi+0x60]
 100d612:	mov    DWORD PTR [ebp-0x2c],ecx
 100d615:	mov    DWORD PTR [edi+0x60],eax
 100d618:	cmp    ebx,0x8
 100d61b:	jne    0x100d65b
 100d61d:	mov    ecx,DWORD PTR [edi+0x64]
 100d620:	mov    DWORD PTR [ebp-0x30],ecx
 100d623:	mov    DWORD PTR [edi+0x64],0x8c
 100d62a:	cmp    ebx,0x8
 100d62d:	jne    0x100d65b
 100d62f:	mov    ecx,DWORD PTR ds:0x1002ce0
 100d635:	mov    DWORD PTR [ebp-0x24],ecx
 100d638:	mov    ecx,DWORD PTR ds:0x1002ce4
 100d63e:	add    ecx,DWORD PTR ds:0x1002ce0
 100d644:	cmp    DWORD PTR [ebp-0x24],ecx
 100d647:	jge    0x100d662
 100d649:	mov    ecx,DWORD PTR [ebp-0x24]
 100d64c:	imul   ecx,ecx,0xc
 100d64f:	mov    edx,DWORD PTR [edi+0x5c]
 100d652:	mov    DWORD PTR [ecx+edx*1+0x8],eax
 100d656:	inc    DWORD PTR [ebp-0x24]
 100d659:	jmp    0x100d638
 100d65b:	call   0x10097fd
 100d660:	mov    DWORD PTR [esi],eax
 100d662:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100d669:	call   0x100d683
 100d66e:	cmp    ebx,0x8
 100d671:	jne    0x100d692
 100d673:	push   DWORD PTR [edi+0x64]
 100d676:	push   ebx
 100d677:	call   DWORD PTR [ebp-0x20]
 100d67a:	pop    ecx
 100d67b:	jmp    0x100d696
 100d67d:	mov    ebx,DWORD PTR [ebp+0x8]
 100d680:	mov    edi,DWORD PTR [ebp-0x28]
 100d683:	cmp    DWORD PTR [ebp-0x1c],0x0
 100d687:	je     0x100d691
 100d689:	push   0x0
 100d68b:	call   0x100d390
 100d690:	pop    ecx
 100d691:	ret    
 100d692:	push   ebx
 100d693:	call   DWORD PTR [ebp-0x20]
 100d696:	pop    ecx
 100d697:	cmp    ebx,0x8
 100d69a:	je     0x100d6a6
 100d69c:	cmp    ebx,0xb
 100d69f:	je     0x100d6a6
 100d6a1:	cmp    ebx,0x4
 100d6a4:	jne    0x100d6b7
 100d6a6:	mov    eax,DWORD PTR [ebp-0x2c]
 100d6a9:	mov    DWORD PTR [edi+0x60],eax
 100d6ac:	cmp    ebx,0x8
 100d6af:	jne    0x100d6b7
 100d6b1:	mov    eax,DWORD PTR [ebp-0x30]
 100d6b4:	mov    DWORD PTR [edi+0x64],eax
 100d6b7:	xor    eax,eax
 100d6b9:	call   0x1009d15
 100d6be:	ret    
 100d6bf:	int3   
 100d6c0:	int3   
 100d6c1:	int3   
 100d6c2:	int3   
 100d6c3:	int3   
 100d6c4:	mov    edi,edi
 100d6c6:	push   ebp
 100d6c7:	mov    ebp,esp
 100d6c9:	mov    eax,DWORD PTR [ebp+0x8]
 100d6cc:	mov    ds:0x1014f34,eax
 100d6d1:	pop    ebp
 100d6d2:	ret    
 100d6d3:	int3   
 100d6d4:	int3   
 100d6d5:	int3   
 100d6d6:	int3   
 100d6d7:	int3   
 100d6d8:	mov    edi,edi
 100d6da:	push   ebp
 100d6db:	mov    ebp,esp
 100d6dd:	mov    eax,DWORD PTR [ebp+0x8]
 100d6e0:	mov    ds:0x1014f38,eax
 100d6e5:	pop    ebp
 100d6e6:	ret    
 100d6e7:	int3   
 100d6e8:	int3   
 100d6e9:	int3   
 100d6ea:	int3   
 100d6eb:	int3   
 100d6ec:	mov    edi,edi
 100d6ee:	push   esi
 100d6ef:	push   edi
 100d6f0:	xor    edi,edi
 100d6f2:	push   DWORD PTR [edi+0x1013da8]
 100d6f8:	call   DWORD PTR ds:0x1001174
 100d6fe:	mov    DWORD PTR [edi+0x1013da8],eax
 100d704:	add    edi,0x4
 100d707:	cmp    edi,0x28
 100d70a:	jb     0x100d6f2
 100d70c:	pop    edi
 100d70d:	pop    esi
 100d70e:	ret    
 100d70f:	int3   
 100d710:	int3   
 100d711:	int3   
 100d712:	int3   
 100d713:	int3   
 100d714:	int3   
 100d715:	int3   
 100d716:	int3   
 100d717:	int3   
 100d718:	int3   
 100d719:	int3   
 100d71a:	int3   
 100d71b:	int3   
 100d71c:	int3   
 100d71d:	int3   
 100d71e:	int3   
 100d71f:	int3   
 100d720:	mov    edi,edi
 100d722:	push   ebp
 100d723:	mov    ebp,esp
 100d725:	mov    ecx,DWORD PTR [ebp+0x8]
 100d728:	mov    eax,0x5a4d
 100d72d:	cmp    WORD PTR [ecx],ax
 100d730:	je     0x100d736
 100d732:	xor    eax,eax
 100d734:	pop    ebp
 100d735:	ret    
 100d736:	mov    eax,DWORD PTR [ecx+0x3c]
 100d739:	add    eax,ecx
 100d73b:	cmp    DWORD PTR [eax],0x4550
 100d741:	jne    0x100d732
 100d743:	xor    edx,edx
 100d745:	mov    ecx,0x10b
 100d74a:	cmp    WORD PTR [eax+0x18],cx
 100d74e:	sete   dl
 100d751:	mov    eax,edx
 100d753:	pop    ebp
 100d754:	ret    
 100d755:	int3   
 100d756:	int3   
 100d757:	int3   
 100d758:	int3   
 100d759:	int3   
 100d75a:	int3   
 100d75b:	int3   
 100d75c:	int3   
 100d75d:	int3   
 100d75e:	int3   
 100d75f:	int3   
 100d760:	mov    edi,edi
 100d762:	push   ebp
 100d763:	mov    ebp,esp
 100d765:	mov    eax,DWORD PTR [ebp+0x8]
 100d768:	mov    ecx,DWORD PTR [eax+0x3c]
 100d76b:	add    ecx,eax
 100d76d:	movzx  eax,WORD PTR [ecx+0x14]
 100d771:	push   ebx
 100d772:	push   esi
 100d773:	movzx  esi,WORD PTR [ecx+0x6]
 100d777:	xor    edx,edx
 100d779:	push   edi
 100d77a:	lea    eax,[eax+ecx*1+0x18]
 100d77e:	test   esi,esi
 100d780:	je     0x100d79d
 100d782:	mov    edi,DWORD PTR [ebp+0xc]
 100d785:	mov    ecx,DWORD PTR [eax+0xc]
 100d788:	cmp    edi,ecx
 100d78a:	jb     0x100d795
 100d78c:	mov    ebx,DWORD PTR [eax+0x8]
 100d78f:	add    ebx,ecx
 100d791:	cmp    edi,ebx
 100d793:	jb     0x100d79f
 100d795:	inc    edx
 100d796:	add    eax,0x28
 100d799:	cmp    edx,esi
 100d79b:	jb     0x100d785
 100d79d:	xor    eax,eax
 100d79f:	pop    edi
 100d7a0:	pop    esi
 100d7a1:	pop    ebx
 100d7a2:	pop    ebp
 100d7a3:	ret    
 100d7a4:	int3   
 100d7a5:	int3   
 100d7a6:	int3   
 100d7a7:	int3   
 100d7a8:	int3   
 100d7a9:	int3   
 100d7aa:	int3   
 100d7ab:	int3   
 100d7ac:	int3   
 100d7ad:	int3   
 100d7ae:	int3   
 100d7af:	int3   
 100d7b0:	mov    edi,edi
 100d7b2:	push   ebp
 100d7b3:	mov    ebp,esp
 100d7b5:	push   0xfffffffe
 100d7b7:	push   0x1011c98
 100d7bc:	push   0x1009d30
 100d7c1:	mov    eax,fs:0x0
 100d7c7:	push   eax
 100d7c8:	sub    esp,0x8
 100d7cb:	push   ebx
 100d7cc:	push   esi
 100d7cd:	push   edi
 100d7ce:	mov    eax,ds:0x1013054
 100d7d3:	xor    DWORD PTR [ebp-0x8],eax
 100d7d6:	xor    eax,ebp
 100d7d8:	push   eax
 100d7d9:	lea    eax,[ebp-0x10]
 100d7dc:	mov    fs:0x0,eax
 100d7e2:	mov    DWORD PTR [ebp-0x18],esp
 100d7e5:	mov    DWORD PTR [ebp-0x4],0x0
 100d7ec:	push   0x1000000
 100d7f1:	call   0x100d720
 100d7f6:	add    esp,0x4
 100d7f9:	test   eax,eax
 100d7fb:	je     0x100d851
 100d7fd:	mov    eax,DWORD PTR [ebp+0x8]
 100d800:	sub    eax,0x1000000
 100d805:	push   eax
 100d806:	push   0x1000000
 100d80b:	call   0x100d760
 100d810:	add    esp,0x8
 100d813:	test   eax,eax
 100d815:	je     0x100d851
 100d817:	mov    eax,DWORD PTR [eax+0x24]
 100d81a:	shr    eax,0x1f
 100d81d:	not    eax
 100d81f:	and    eax,0x1
 100d822:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100d829:	mov    ecx,DWORD PTR [ebp-0x10]
 100d82c:	mov    DWORD PTR fs:0x0,ecx
 100d833:	pop    ecx
 100d834:	pop    edi
 100d835:	pop    esi
 100d836:	pop    ebx
 100d837:	mov    esp,ebp
 100d839:	pop    ebp
 100d83a:	ret    
 100d83b:	mov    eax,DWORD PTR [ebp-0x14]
 100d83e:	mov    ecx,DWORD PTR [eax]
 100d840:	xor    edx,edx
 100d842:	cmp    DWORD PTR [ecx],0xc0000005
 100d848:	sete   dl
 100d84b:	mov    eax,edx
 100d84d:	ret    
 100d84e:	mov    esp,DWORD PTR [ebp-0x18]
 100d851:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100d858:	xor    eax,eax
 100d85a:	mov    ecx,DWORD PTR [ebp-0x10]
 100d85d:	mov    DWORD PTR fs:0x0,ecx
 100d864:	pop    ecx
 100d865:	pop    edi
 100d866:	pop    esi
 100d867:	pop    ebx
 100d868:	mov    esp,ebp
 100d86a:	pop    ebp
 100d86b:	ret    
 100d86c:	int3   
 100d86d:	int3   
 100d86e:	int3   
 100d86f:	int3   
 100d870:	int3   
 100d871:	mov    edi,edi
 100d873:	push   ebp
 100d874:	mov    ebp,esp
 100d876:	sub    esp,0x24
 100d879:	mov    eax,ds:0x1013054
 100d87e:	xor    eax,ebp
 100d880:	mov    DWORD PTR [ebp-0x4],eax
 100d883:	mov    eax,DWORD PTR [ebp+0x8]
 100d886:	push   ebx
 100d887:	mov    DWORD PTR [ebp-0x20],eax
 100d88a:	mov    eax,DWORD PTR [ebp+0xc]
 100d88d:	push   esi
 100d88e:	push   edi
 100d88f:	mov    DWORD PTR [ebp-0x1c],eax
 100d892:	call   0x10097fd
 100d897:	and    DWORD PTR [ebp-0x14],0x0
 100d89b:	cmp    DWORD PTR ds:0x1014f3c,0x0
 100d8a2:	mov    DWORD PTR [ebp-0x18],eax
 100d8a5:	jne    0x100d924
 100d8a7:	push   0x1003258
 100d8ac:	call   DWORD PTR ds:0x10010e4
 100d8b2:	mov    ebx,eax
 100d8b4:	test   ebx,ebx
 100d8b6:	je     0x100d9cc
 100d8bc:	mov    edi,DWORD PTR ds:0x100109c
 100d8c2:	push   0x100324c
 100d8c7:	push   ebx
 100d8c8:	call   edi
 100d8ca:	test   eax,eax
 100d8cc:	je     0x100d9cc
 100d8d2:	mov    esi,DWORD PTR ds:0x1001174
 100d8d8:	push   eax
 100d8d9:	call   esi
 100d8db:	push   0x100323c
 100d8e0:	push   ebx
 100d8e1:	mov    ds:0x1014f3c,eax
 100d8e6:	call   edi
 100d8e8:	push   eax
 100d8e9:	call   esi
 100d8eb:	push   0x1003228
 100d8f0:	push   ebx
 100d8f1:	mov    ds:0x1014f40,eax
 100d8f6:	call   edi
 100d8f8:	push   eax
 100d8f9:	call   esi
 100d8fb:	push   0x100320c
 100d900:	push   ebx
 100d901:	mov    ds:0x1014f44,eax
 100d906:	call   edi
 100d908:	push   eax
 100d909:	call   esi
 100d90b:	mov    ds:0x1014f4c,eax
 100d910:	test   eax,eax
 100d912:	je     0x100d924
 100d914:	push   0x10031f4
 100d919:	push   ebx
 100d91a:	call   edi
 100d91c:	push   eax
 100d91d:	call   esi
 100d91f:	mov    ds:0x1014f48,eax
 100d924:	mov    eax,ds:0x1014f48
 100d929:	mov    ecx,DWORD PTR [ebp-0x18]
 100d92c:	mov    esi,DWORD PTR ds:0x1001148
 100d932:	cmp    eax,ecx
 100d934:	je     0x100d97d
 100d936:	cmp    DWORD PTR ds:0x1014f4c,ecx
 100d93c:	je     0x100d97d
 100d93e:	push   eax
 100d93f:	call   esi
 100d941:	push   DWORD PTR ds:0x1014f4c
 100d947:	mov    edi,eax
 100d949:	call   esi
 100d94b:	mov    ebx,eax
 100d94d:	test   edi,edi
 100d94f:	je     0x100d97d
 100d951:	test   ebx,ebx
 100d953:	je     0x100d97d
 100d955:	call   edi
 100d957:	test   eax,eax
 100d959:	je     0x100d974
 100d95b:	lea    ecx,[ebp-0x24]
 100d95e:	push   ecx
 100d95f:	push   0xc
 100d961:	lea    ecx,[ebp-0x10]
 100d964:	push   ecx
 100d965:	push   0x1
 100d967:	push   eax
 100d968:	call   ebx
 100d96a:	test   eax,eax
 100d96c:	je     0x100d974
 100d96e:	test   BYTE PTR [ebp-0x8],0x1
 100d972:	jne    0x100d97d
 100d974:	or     DWORD PTR [ebp+0x10],0x200000
 100d97b:	jmp    0x100d9b0
 100d97d:	mov    eax,ds:0x1014f40
 100d982:	cmp    eax,DWORD PTR [ebp-0x18]
 100d985:	je     0x100d9b0
 100d987:	push   eax
 100d988:	call   esi
 100d98a:	test   eax,eax
 100d98c:	je     0x100d9b0
 100d98e:	call   eax
 100d990:	mov    DWORD PTR [ebp-0x14],eax
 100d993:	test   eax,eax
 100d995:	je     0x100d9b0
 100d997:	mov    eax,ds:0x1014f44
 100d99c:	cmp    eax,DWORD PTR [ebp-0x18]
 100d99f:	je     0x100d9b0
 100d9a1:	push   eax
 100d9a2:	call   esi
 100d9a4:	test   eax,eax
 100d9a6:	je     0x100d9b0
 100d9a8:	push   DWORD PTR [ebp-0x14]
 100d9ab:	call   eax
 100d9ad:	mov    DWORD PTR [ebp-0x14],eax
 100d9b0:	push   DWORD PTR ds:0x1014f3c
 100d9b6:	call   esi
 100d9b8:	test   eax,eax
 100d9ba:	je     0x100d9cc
 100d9bc:	push   DWORD PTR [ebp+0x10]
 100d9bf:	push   DWORD PTR [ebp-0x1c]
 100d9c2:	push   DWORD PTR [ebp-0x20]
 100d9c5:	push   DWORD PTR [ebp-0x14]
 100d9c8:	call   eax
 100d9ca:	jmp    0x100d9ce
 100d9cc:	xor    eax,eax
 100d9ce:	mov    ecx,DWORD PTR [ebp-0x4]
 100d9d1:	pop    edi
 100d9d2:	pop    esi
 100d9d3:	xor    ecx,ebp
 100d9d5:	pop    ebx
 100d9d6:	call   0x1008355
 100d9db:	leave  
 100d9dc:	ret    
 100d9dd:	int3   
 100d9de:	int3   
 100d9df:	int3   
 100d9e0:	int3   
 100d9e1:	int3   
 100d9e2:	mov    edi,edi
 100d9e4:	push   ebp
 100d9e5:	mov    ebp,esp
 100d9e7:	push   esi
 100d9e8:	mov    esi,DWORD PTR [ebp+0x8]
 100d9eb:	push   edi
 100d9ec:	test   esi,esi
 100d9ee:	je     0x100d9f7
 100d9f0:	mov    edi,DWORD PTR [ebp+0xc]
 100d9f3:	test   edi,edi
 100d9f5:	jne    0x100da0c
 100d9f7:	call   0x100af29
 100d9fc:	push   0x16
 100d9fe:	pop    esi
 100d9ff:	mov    DWORD PTR [eax],esi
 100da01:	call   0x100aecd
 100da06:	mov    eax,esi
 100da08:	pop    edi
 100da09:	pop    esi
 100da0a:	pop    ebp
 100da0b:	ret    
 100da0c:	mov    ecx,DWORD PTR [ebp+0x10]
 100da0f:	test   ecx,ecx
 100da11:	jne    0x100da1a
 100da13:	xor    eax,eax
 100da15:	mov    WORD PTR [esi],ax
 100da18:	jmp    0x100d9f7
 100da1a:	mov    edx,esi
 100da1c:	cmp    WORD PTR [edx],0x0
 100da20:	je     0x100da28
 100da22:	add    edx,0x2
 100da25:	dec    edi
 100da26:	jne    0x100da1c
 100da28:	test   edi,edi
 100da2a:	je     0x100da13
 100da2c:	sub    edx,ecx
 100da2e:	movzx  eax,WORD PTR [ecx]
 100da31:	mov    WORD PTR [edx+ecx*1],ax
 100da35:	add    ecx,0x2
 100da38:	test   ax,ax
 100da3b:	je     0x100da40
 100da3d:	dec    edi
 100da3e:	jne    0x100da2e
 100da40:	xor    eax,eax
 100da42:	test   edi,edi
 100da44:	jne    0x100da08
 100da46:	mov    WORD PTR [esi],ax
 100da49:	call   0x100af29
 100da4e:	push   0x22
 100da50:	pop    ecx
 100da51:	mov    DWORD PTR [eax],ecx
 100da53:	mov    esi,ecx
 100da55:	jmp    0x100da01
 100da57:	int3   
 100da58:	int3   
 100da59:	int3   
 100da5a:	int3   
 100da5b:	int3   
 100da5c:	mov    edi,edi
 100da5e:	push   ebp
 100da5f:	mov    ebp,esp
 100da61:	mov    edx,DWORD PTR [ebp+0x8]
 100da64:	push   ebx
 100da65:	mov    ebx,DWORD PTR [ebp+0x14]
 100da68:	push   esi
 100da69:	push   edi
 100da6a:	test   ebx,ebx
 100da6c:	jne    0x100da7e
 100da6e:	test   edx,edx
 100da70:	jne    0x100da82
 100da72:	cmp    DWORD PTR [ebp+0xc],edx
 100da75:	jne    0x100da89
 100da77:	xor    eax,eax
 100da79:	pop    edi
 100da7a:	pop    esi
 100da7b:	pop    ebx
 100da7c:	pop    ebp
 100da7d:	ret    
 100da7e:	test   edx,edx
 100da80:	je     0x100da89
 100da82:	mov    edi,DWORD PTR [ebp+0xc]
 100da85:	test   edi,edi
 100da87:	jne    0x100da9c
 100da89:	call   0x100af29
 100da8e:	push   0x16
 100da90:	pop    esi
 100da91:	mov    DWORD PTR [eax],esi
 100da93:	call   0x100aecd
 100da98:	mov    eax,esi
 100da9a:	jmp    0x100da79
 100da9c:	test   ebx,ebx
 100da9e:	jne    0x100daa7
 100daa0:	xor    eax,eax
 100daa2:	mov    WORD PTR [edx],ax
 100daa5:	jmp    0x100da77
 100daa7:	mov    ecx,DWORD PTR [ebp+0x10]
 100daaa:	test   ecx,ecx
 100daac:	jne    0x100dab5
 100daae:	xor    eax,eax
 100dab0:	mov    WORD PTR [edx],ax
 100dab3:	jmp    0x100da89
 100dab5:	mov    eax,edx
 100dab7:	cmp    ebx,0xffffffff
 100daba:	jne    0x100dad4
 100dabc:	mov    esi,edx
 100dabe:	sub    esi,ecx
 100dac0:	movzx  eax,WORD PTR [ecx]
 100dac3:	mov    WORD PTR [esi+ecx*1],ax
 100dac7:	add    ecx,0x2
 100daca:	test   ax,ax
 100dacd:	je     0x100daf6
 100dacf:	dec    edi
 100dad0:	jne    0x100dac0
 100dad2:	jmp    0x100daf6
 100dad4:	mov    esi,ecx
 100dad6:	sub    esi,edx
 100dad8:	movzx  ecx,WORD PTR [esi+eax*1]
 100dadc:	mov    WORD PTR [eax],cx
 100dadf:	add    eax,0x2
 100dae2:	test   cx,cx
 100dae5:	je     0x100daed
 100dae7:	dec    edi
 100dae8:	je     0x100daed
 100daea:	dec    ebx
 100daeb:	jne    0x100dad8
 100daed:	test   ebx,ebx
 100daef:	jne    0x100daf6
 100daf1:	xor    ecx,ecx
 100daf3:	mov    WORD PTR [eax],cx
 100daf6:	test   edi,edi
 100daf8:	jne    0x100da77
 100dafe:	xor    eax,eax
 100db00:	cmp    ebx,0xffffffff
 100db03:	jne    0x100db15
 100db05:	mov    ecx,DWORD PTR [ebp+0xc]
 100db08:	push   0x50
 100db0a:	mov    WORD PTR [edx+ecx*2-0x2],ax
 100db0f:	pop    eax
 100db10:	jmp    0x100da79
 100db15:	mov    WORD PTR [edx],ax
 100db18:	call   0x100af29
 100db1d:	push   0x22
 100db1f:	pop    ecx
 100db20:	mov    DWORD PTR [eax],ecx
 100db22:	mov    esi,ecx
 100db24:	jmp    0x100da93
 100db29:	int3   
 100db2a:	int3   
 100db2b:	int3   
 100db2c:	int3   
 100db2d:	int3   
 100db2e:	mov    edi,edi
 100db30:	push   ebp
 100db31:	mov    ebp,esp
 100db33:	mov    eax,DWORD PTR [ebp+0x8]
 100db36:	mov    cx,WORD PTR [eax]
 100db39:	add    eax,0x2
 100db3c:	test   cx,cx
 100db3f:	jne    0x100db36
 100db41:	sub    eax,DWORD PTR [ebp+0x8]
 100db44:	sar    eax,1
 100db46:	dec    eax
 100db47:	pop    ebp
 100db48:	ret    
 100db49:	int3   
 100db4a:	int3   
 100db4b:	int3   
 100db4c:	int3   
 100db4d:	int3   
 100db4e:	mov    edi,edi
 100db50:	push   ebp
 100db51:	mov    ebp,esp
 100db53:	push   esi
 100db54:	mov    esi,DWORD PTR [ebp+0x8]
 100db57:	push   edi
 100db58:	test   esi,esi
 100db5a:	je     0x100db63
 100db5c:	mov    edi,DWORD PTR [ebp+0xc]
 100db5f:	test   edi,edi
 100db61:	jne    0x100db78
 100db63:	call   0x100af29
 100db68:	push   0x16
 100db6a:	pop    esi
 100db6b:	mov    DWORD PTR [eax],esi
 100db6d:	call   0x100aecd
 100db72:	mov    eax,esi
 100db74:	pop    edi
 100db75:	pop    esi
 100db76:	pop    ebp
 100db77:	ret    
 100db78:	mov    eax,DWORD PTR [ebp+0x10]
 100db7b:	test   eax,eax
 100db7d:	jne    0x100db84
 100db7f:	mov    WORD PTR [esi],ax
 100db82:	jmp    0x100db63
 100db84:	mov    edx,esi
 100db86:	sub    edx,eax
 100db88:	movzx  ecx,WORD PTR [eax]
 100db8b:	mov    WORD PTR [edx+eax*1],cx
 100db8f:	add    eax,0x2
 100db92:	test   cx,cx
 100db95:	je     0x100db9a
 100db97:	dec    edi
 100db98:	jne    0x100db88
 100db9a:	xor    eax,eax
 100db9c:	test   edi,edi
 100db9e:	jne    0x100db74
 100dba0:	mov    WORD PTR [esi],ax
 100dba3:	call   0x100af29
 100dba8:	push   0x22
 100dbaa:	pop    ecx
 100dbab:	mov    DWORD PTR [eax],ecx
 100dbad:	mov    esi,ecx
 100dbaf:	jmp    0x100db6d
 100dbb1:	int3   
 100dbb2:	int3   
 100dbb3:	int3   
 100dbb4:	int3   
 100dbb5:	int3   
 100dbb6:	mov    edi,edi
 100dbb8:	push   ebp
 100dbb9:	mov    ebp,esp
 100dbbb:	mov    ecx,DWORD PTR [ebp+0x8]
 100dbbe:	test   ecx,ecx
 100dbc0:	js     0x100dbe0
 100dbc2:	cmp    ecx,0x2
 100dbc5:	jle    0x100dbd3
 100dbc7:	cmp    ecx,0x3
 100dbca:	jne    0x100dbe0
 100dbcc:	mov    eax,ds:0x10142dc
 100dbd1:	pop    ebp
 100dbd2:	ret    
 100dbd3:	mov    eax,ds:0x10142dc
 100dbd8:	mov    DWORD PTR ds:0x10142dc,ecx
 100dbde:	pop    ebp
 100dbdf:	ret    
 100dbe0:	call   0x100af29
 100dbe5:	mov    DWORD PTR [eax],0x16
 100dbeb:	call   0x100aecd
 100dbf0:	or     eax,0xffffffff
 100dbf3:	pop    ebp
 100dbf4:	ret    
 100dbf5:	int3   
 100dbf6:	int3   
 100dbf7:	int3   
 100dbf8:	int3   
 100dbf9:	int3   
 100dbfa:	mov    edi,edi
 100dbfc:	push   ebp
 100dbfd:	mov    ebp,esp
 100dbff:	sub    esp,0x10
 100dc02:	push   DWORD PTR [ebp+0x8]
 100dc05:	lea    ecx,[ebp-0x10]
 100dc08:	call   0x10086a4
 100dc0d:	movzx  eax,BYTE PTR [ebp+0xc]
 100dc11:	mov    ecx,DWORD PTR [ebp-0xc]
 100dc14:	mov    dl,BYTE PTR [ebp+0x14]
 100dc17:	test   BYTE PTR [ecx+eax*1+0x1d],dl
 100dc1b:	jne    0x100dc3b
 100dc1d:	cmp    DWORD PTR [ebp+0x10],0x0
 100dc21:	je     0x100dc35
 100dc23:	mov    ecx,DWORD PTR [ebp-0x10]
 100dc26:	mov    ecx,DWORD PTR [ecx+0xc8]
 100dc2c:	movzx  eax,WORD PTR [ecx+eax*2]
 100dc30:	and    eax,DWORD PTR [ebp+0x10]
 100dc33:	jmp    0x100dc37
 100dc35:	xor    eax,eax
 100dc37:	test   eax,eax
 100dc39:	je     0x100dc3e
 100dc3b:	xor    eax,eax
 100dc3d:	inc    eax
 100dc3e:	cmp    BYTE PTR [ebp-0x4],0x0
 100dc42:	je     0x100dc4b
 100dc44:	mov    ecx,DWORD PTR [ebp-0x8]
 100dc47:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100dc4b:	leave  
 100dc4c:	ret    
 100dc4d:	int3   
 100dc4e:	int3   
 100dc4f:	int3   
 100dc50:	int3   
 100dc51:	int3   
 100dc52:	mov    edi,edi
 100dc54:	push   ebp
 100dc55:	mov    ebp,esp
 100dc57:	push   0x4
 100dc59:	push   0x0
 100dc5b:	push   DWORD PTR [ebp+0x8]
 100dc5e:	push   0x0
 100dc60:	call   0x100dbfa
 100dc65:	add    esp,0x10
 100dc68:	pop    ebp
 100dc69:	ret    
 100dc6a:	int3   
 100dc6b:	int3   
 100dc6c:	int3   
 100dc6d:	int3   
 100dc6e:	int3   
 100dc6f:	mov    edi,edi
 100dc71:	push   ebp
 100dc72:	mov    ebp,esp
 100dc74:	push   esi
 100dc75:	push   edi
 100dc76:	xor    esi,esi
 100dc78:	push   DWORD PTR [ebp+0x8]
 100dc7b:	call   0x100c0d7
 100dc80:	mov    edi,eax
 100dc82:	pop    ecx
 100dc83:	test   edi,edi
 100dc85:	jne    0x100dcae
 100dc87:	cmp    DWORD PTR ds:0x1014f50,eax
 100dc8d:	jbe    0x100dcae
 100dc8f:	push   esi
 100dc90:	call   DWORD PTR ds:0x10010e0
 100dc96:	lea    eax,[esi+0x3e8]
 100dc9c:	cmp    eax,DWORD PTR ds:0x1014f50
 100dca2:	jbe    0x100dca7
 100dca4:	or     eax,0xffffffff
 100dca7:	mov    esi,eax
 100dca9:	cmp    eax,0xffffffff
 100dcac:	jne    0x100dc78
 100dcae:	mov    eax,edi
 100dcb0:	pop    edi
 100dcb1:	pop    esi
 100dcb2:	pop    ebp
 100dcb3:	ret    
 100dcb4:	int3   
 100dcb5:	int3   
 100dcb6:	int3   
 100dcb7:	int3   
 100dcb8:	int3   
 100dcb9:	mov    edi,edi
 100dcbb:	push   ebp
 100dcbc:	mov    ebp,esp
 100dcbe:	push   esi
 100dcbf:	push   edi
 100dcc0:	xor    esi,esi
 100dcc2:	push   0x0
 100dcc4:	push   DWORD PTR [ebp+0xc]
 100dcc7:	push   DWORD PTR [ebp+0x8]
 100dcca:	call   0x1010a1f
 100dccf:	mov    edi,eax
 100dcd1:	add    esp,0xc
 100dcd4:	test   edi,edi
 100dcd6:	jne    0x100dcff
 100dcd8:	cmp    DWORD PTR ds:0x1014f50,eax
 100dcde:	jbe    0x100dcff
 100dce0:	push   esi
 100dce1:	call   DWORD PTR ds:0x10010e0
 100dce7:	lea    eax,[esi+0x3e8]
 100dced:	cmp    eax,DWORD PTR ds:0x1014f50
 100dcf3:	jbe    0x100dcf8
 100dcf5:	or     eax,0xffffffff
 100dcf8:	mov    esi,eax
 100dcfa:	cmp    eax,0xffffffff
 100dcfd:	jne    0x100dcc2
 100dcff:	mov    eax,edi
 100dd01:	pop    edi
 100dd02:	pop    esi
 100dd03:	pop    ebp
 100dd04:	ret    
 100dd05:	int3   
 100dd06:	int3   
 100dd07:	int3   
 100dd08:	int3   
 100dd09:	int3   
 100dd0a:	mov    edi,edi
 100dd0c:	push   ebp
 100dd0d:	mov    ebp,esp
 100dd0f:	push   esi
 100dd10:	push   edi
 100dd11:	xor    esi,esi
 100dd13:	push   DWORD PTR [ebp+0xc]
 100dd16:	push   DWORD PTR [ebp+0x8]
 100dd19:	call   0x1010aa6
 100dd1e:	mov    edi,eax
 100dd20:	pop    ecx
 100dd21:	pop    ecx
 100dd22:	test   edi,edi
 100dd24:	jne    0x100dd52
 100dd26:	cmp    DWORD PTR [ebp+0xc],eax
 100dd29:	je     0x100dd52
 100dd2b:	cmp    DWORD PTR ds:0x1014f50,eax
 100dd31:	jbe    0x100dd52
 100dd33:	push   esi
 100dd34:	call   DWORD PTR ds:0x10010e0
 100dd3a:	lea    eax,[esi+0x3e8]
 100dd40:	cmp    eax,DWORD PTR ds:0x1014f50
 100dd46:	jbe    0x100dd4b
 100dd48:	or     eax,0xffffffff
 100dd4b:	mov    esi,eax
 100dd4d:	cmp    eax,0xffffffff
 100dd50:	jne    0x100dd13
 100dd52:	mov    eax,edi
 100dd54:	pop    edi
 100dd55:	pop    esi
 100dd56:	pop    ebp
 100dd57:	ret    
 100dd58:	int3   
 100dd59:	int3   
 100dd5a:	int3   
 100dd5b:	int3   
 100dd5c:	int3   
 100dd5d:	mov    edi,edi
 100dd5f:	push   ebp
 100dd60:	mov    ebp,esp
 100dd62:	push   ecx
 100dd63:	push   ecx
 100dd64:	mov    eax,DWORD PTR [ebp+0xc]
 100dd67:	push   esi
 100dd68:	mov    esi,DWORD PTR [ebp+0x8]
 100dd6b:	mov    DWORD PTR [ebp-0x8],eax
 100dd6e:	mov    eax,DWORD PTR [ebp+0x10]
 100dd71:	push   edi
 100dd72:	push   esi
 100dd73:	mov    DWORD PTR [ebp-0x4],eax
 100dd76:	call   0x100eb08
 100dd7b:	or     edi,0xffffffff
 100dd7e:	pop    ecx
 100dd7f:	cmp    eax,edi
 100dd81:	jne    0x100dd94
 100dd83:	call   0x100af29
 100dd88:	mov    DWORD PTR [eax],0x9
 100dd8e:	mov    eax,edi
 100dd90:	mov    edx,edi
 100dd92:	jmp    0x100ddde
 100dd94:	push   DWORD PTR [ebp+0x14]
 100dd97:	lea    ecx,[ebp-0x4]
 100dd9a:	push   ecx
 100dd9b:	push   DWORD PTR [ebp-0x8]
 100dd9e:	push   eax
 100dd9f:	call   DWORD PTR ds:0x10010dc
 100dda5:	mov    DWORD PTR [ebp-0x8],eax
 100dda8:	cmp    eax,edi
 100ddaa:	jne    0x100ddbf
 100ddac:	call   DWORD PTR ds:0x1001124
 100ddb2:	test   eax,eax
 100ddb4:	je     0x100ddbf
 100ddb6:	push   eax
 100ddb7:	call   0x100af59
 100ddbc:	pop    ecx
 100ddbd:	jmp    0x100dd8e
 100ddbf:	mov    eax,esi
 100ddc1:	sar    eax,0x5
 100ddc4:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100ddcb:	and    esi,0x1f
 100ddce:	shl    esi,0x6
 100ddd1:	lea    eax,[eax+esi*1+0x4]
 100ddd5:	and    BYTE PTR [eax],0xfd
 100ddd8:	mov    eax,DWORD PTR [ebp-0x8]
 100dddb:	mov    edx,DWORD PTR [ebp-0x4]
 100ddde:	pop    edi
 100dddf:	pop    esi
 100dde0:	leave  
 100dde1:	ret    
 100dde2:	int3   
 100dde3:	int3   
 100dde4:	int3   
 100dde5:	int3   
 100dde6:	int3   
 100dde7:	push   0x14
 100dde9:	push   0x1011cb8
 100ddee:	call   0x1009cd0
 100ddf3:	or     ebx,0xffffffff
 100ddf6:	mov    DWORD PTR [ebp-0x24],ebx
 100ddf9:	mov    DWORD PTR [ebp-0x20],ebx
 100ddfc:	mov    eax,DWORD PTR [ebp+0x8]
 100ddff:	cmp    eax,0xfffffffe
 100de02:	jne    0x100de20
 100de04:	call   0x100af41
 100de09:	and    DWORD PTR [eax],0x0
 100de0c:	call   0x100af29
 100de11:	mov    DWORD PTR [eax],0x9
 100de17:	mov    eax,ebx
 100de19:	mov    edx,ebx
 100de1b:	jmp    0x100dec1
 100de20:	test   eax,eax
 100de22:	js     0x100de2c
 100de24:	cmp    eax,DWORD PTR ds:0x1015fc8
 100de2a:	jb     0x100de46
 100de2c:	call   0x100af41
 100de31:	and    DWORD PTR [eax],0x0
 100de34:	call   0x100af29
 100de39:	mov    DWORD PTR [eax],0x9
 100de3f:	call   0x100aecd
 100de44:	jmp    0x100de17
 100de46:	mov    ecx,eax
 100de48:	sar    ecx,0x5
 100de4b:	lea    edi,[ecx*4+0x1015fe0]
 100de52:	mov    esi,eax
 100de54:	and    esi,0x1f
 100de57:	shl    esi,0x6
 100de5a:	mov    ecx,DWORD PTR [edi]
 100de5c:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
 100de61:	and    ecx,0x1
 100de64:	je     0x100de2c
 100de66:	push   eax
 100de67:	call   0x100eb76
 100de6c:	pop    ecx
 100de6d:	and    DWORD PTR [ebp-0x4],0x0
 100de71:	mov    eax,DWORD PTR [edi]
 100de73:	test   BYTE PTR [eax+esi*1+0x4],0x1
 100de78:	je     0x100de96
 100de7a:	push   DWORD PTR [ebp+0x14]
 100de7d:	push   DWORD PTR [ebp+0x10]
 100de80:	push   DWORD PTR [ebp+0xc]
 100de83:	push   DWORD PTR [ebp+0x8]
 100de86:	call   0x100dd5d
 100de8b:	add    esp,0x10
 100de8e:	mov    DWORD PTR [ebp-0x24],eax
 100de91:	mov    DWORD PTR [ebp-0x20],edx
 100de94:	jmp    0x100deaf
 100de96:	call   0x100af29
 100de9b:	mov    DWORD PTR [eax],0x9
 100dea1:	call   0x100af41
 100dea6:	and    DWORD PTR [eax],0x0
 100dea9:	mov    DWORD PTR [ebp-0x24],ebx
 100deac:	mov    DWORD PTR [ebp-0x20],ebx
 100deaf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100deb6:	call   0x100dec7
 100debb:	mov    eax,DWORD PTR [ebp-0x24]
 100debe:	mov    edx,DWORD PTR [ebp-0x20]
 100dec1:	call   0x1009d15
 100dec6:	ret    
 100dec7:	push   DWORD PTR [ebp+0x8]
 100deca:	call   0x100ec1a
 100decf:	pop    ecx
 100ded0:	ret    
 100ded1:	int3   
 100ded2:	int3   
 100ded3:	int3   
 100ded4:	int3   
 100ded5:	int3   
 100ded6:	mov    edi,edi
 100ded8:	push   ebp
 100ded9:	mov    ebp,esp
 100dedb:	mov    eax,0x1ae4
 100dee0:	call   0x1010750
 100dee5:	mov    eax,ds:0x1013054
 100deea:	xor    eax,ebp
 100deec:	mov    DWORD PTR [ebp-0x4],eax
 100deef:	mov    eax,DWORD PTR [ebp+0xc]
 100def2:	push   esi
 100def3:	mov    esi,DWORD PTR [ebp+0x8]
 100def6:	push   edi
 100def7:	xor    edi,edi
 100def9:	mov    DWORD PTR [ebp-0x1acc],eax
 100deff:	mov    DWORD PTR [ebp-0x1ac8],edi
 100df05:	mov    DWORD PTR [ebp-0x1ad0],edi
 100df0b:	cmp    DWORD PTR [ebp+0x10],edi
 100df0e:	jne    0x100df17
 100df10:	xor    eax,eax
 100df12:	jmp    0x100e5c5
 100df17:	cmp    eax,edi
 100df19:	jne    0x100df3a
 100df1b:	call   0x100af41
 100df20:	mov    DWORD PTR [eax],edi
 100df22:	call   0x100af29
 100df27:	mov    DWORD PTR [eax],0x16
 100df2d:	call   0x100aecd
 100df32:	or     eax,0xffffffff
 100df35:	jmp    0x100e5c5
 100df3a:	mov    eax,esi
 100df3c:	sar    eax,0x5
 100df3f:	mov    edi,esi
 100df41:	push   ebx
 100df42:	lea    ebx,[eax*4+0x1015fe0]
 100df49:	mov    eax,DWORD PTR [ebx]
 100df4b:	and    edi,0x1f
 100df4e:	shl    edi,0x6
 100df51:	mov    cl,BYTE PTR [eax+edi*1+0x24]
 100df55:	add    cl,cl
 100df57:	sar    cl,1
 100df59:	mov    DWORD PTR [ebp-0x1adc],ebx
 100df5f:	mov    BYTE PTR [ebp-0x1ac1],cl
 100df65:	cmp    cl,0x2
 100df68:	je     0x100df6f
 100df6a:	cmp    cl,0x1
 100df6d:	jne    0x100df96
 100df6f:	mov    ecx,DWORD PTR [ebp+0x10]
 100df72:	not    ecx
 100df74:	test   cl,0x1
 100df77:	jne    0x100df96
 100df79:	call   0x100af41
 100df7e:	and    DWORD PTR [eax],0x0
 100df81:	call   0x100af29
 100df86:	mov    DWORD PTR [eax],0x16
 100df8c:	call   0x100aecd
 100df91:	jmp    0x100e5b3
 100df96:	test   BYTE PTR [eax+edi*1+0x4],0x20
 100df9b:	je     0x100dfac
 100df9d:	push   0x2
 100df9f:	push   0x0
 100dfa1:	push   0x0
 100dfa3:	push   esi
 100dfa4:	call   0x100dd5d
 100dfa9:	add    esp,0x10
 100dfac:	push   esi
 100dfad:	call   0x100e6ff
 100dfb2:	pop    ecx
 100dfb3:	test   eax,eax
 100dfb5:	je     0x100e254
 100dfbb:	mov    eax,DWORD PTR [ebx]
 100dfbd:	test   BYTE PTR [edi+eax*1+0x4],0x80
 100dfc2:	je     0x100e254
 100dfc8:	call   0x10099cb
 100dfcd:	mov    eax,DWORD PTR [eax+0x6c]
 100dfd0:	xor    ecx,ecx
 100dfd2:	cmp    DWORD PTR [eax+0x14],ecx
 100dfd5:	lea    eax,[ebp-0x1ae0]
 100dfdb:	sete   cl
 100dfde:	push   eax
 100dfdf:	mov    eax,DWORD PTR [ebx]
 100dfe1:	push   DWORD PTR [edi+eax*1]
 100dfe4:	mov    esi,ecx
 100dfe6:	call   DWORD PTR ds:0x10010d4
 100dfec:	xor    ecx,ecx
 100dfee:	cmp    eax,ecx
 100dff0:	je     0x100e256
 100dff6:	cmp    esi,ecx
 100dff8:	je     0x100e006
 100dffa:	cmp    BYTE PTR [ebp-0x1ac1],cl
 100e000:	je     0x100e256
 100e006:	call   DWORD PTR ds:0x10010d8
 100e00c:	mov    ebx,DWORD PTR [ebp-0x1acc]
 100e012:	mov    DWORD PTR [ebp-0x1ae0],eax
 100e018:	xor    eax,eax
 100e01a:	mov    DWORD PTR [ebp-0x1ad4],eax
 100e020:	cmp    DWORD PTR [ebp+0x10],eax
 100e023:	jbe    0x100e54c
 100e029:	mov    DWORD PTR [ebp-0x1ac0],eax
 100e02f:	mov    al,BYTE PTR [ebp-0x1ac1]
 100e035:	test   al,al
 100e037:	jne    0x100e1a4
 100e03d:	mov    cl,BYTE PTR [ebx]
 100e03f:	mov    esi,DWORD PTR [ebp-0x1adc]
 100e045:	xor    eax,eax
 100e047:	cmp    cl,0xa
 100e04a:	sete   al
 100e04d:	mov    DWORD PTR [ebp-0x1ae4],eax
 100e053:	mov    eax,DWORD PTR [esi]
 100e055:	add    eax,edi
 100e057:	cmp    DWORD PTR [eax+0x38],0x0
 100e05b:	je     0x100e072
 100e05d:	mov    dl,BYTE PTR [eax+0x34]
 100e060:	mov    BYTE PTR [ebp-0xc],dl
 100e063:	mov    BYTE PTR [ebp-0xb],cl
 100e066:	and    DWORD PTR [eax+0x38],0x0
 100e06a:	push   0x2
 100e06c:	lea    eax,[ebp-0xc]
 100e06f:	push   eax
 100e070:	jmp    0x100e0bd
 100e072:	movsx  eax,cl
 100e075:	push   eax
 100e076:	call   0x100e92e
 100e07b:	pop    ecx
 100e07c:	test   eax,eax
 100e07e:	je     0x100e0ba
 100e080:	mov    ecx,DWORD PTR [ebp-0x1acc]
 100e086:	sub    ecx,ebx
 100e088:	add    ecx,DWORD PTR [ebp+0x10]
 100e08b:	xor    eax,eax
 100e08d:	inc    eax
 100e08e:	cmp    ecx,eax
 100e090:	jbe    0x100e23b
 100e096:	push   0x2
 100e098:	lea    eax,[ebp-0x1abc]
 100e09e:	push   ebx
 100e09f:	push   eax
 100e0a0:	call   0x1010cba
 100e0a5:	add    esp,0xc
 100e0a8:	cmp    eax,0xffffffff
 100e0ab:	je     0x100e543
 100e0b1:	inc    ebx
 100e0b2:	inc    DWORD PTR [ebp-0x1ac0]
 100e0b8:	jmp    0x100e0d5
 100e0ba:	push   0x1
 100e0bc:	push   ebx
 100e0bd:	lea    eax,[ebp-0x1abc]
 100e0c3:	push   eax
 100e0c4:	call   0x1010cba
 100e0c9:	add    esp,0xc
 100e0cc:	cmp    eax,0xffffffff
 100e0cf:	je     0x100e543
 100e0d5:	xor    eax,eax
 100e0d7:	push   eax
 100e0d8:	push   eax
 100e0d9:	push   0x5
 100e0db:	lea    ecx,[ebp-0xc]
 100e0de:	push   ecx
 100e0df:	push   0x1
 100e0e1:	lea    ecx,[ebp-0x1abc]
 100e0e7:	push   ecx
 100e0e8:	push   eax
 100e0e9:	push   DWORD PTR [ebp-0x1ae0]
 100e0ef:	inc    ebx
 100e0f0:	inc    DWORD PTR [ebp-0x1ac0]
 100e0f6:	call   DWORD PTR ds:0x100115c
 100e0fc:	mov    esi,eax
 100e0fe:	test   esi,esi
 100e100:	je     0x100e543
 100e106:	push   0x0
 100e108:	lea    eax,[ebp-0x1ad4]
 100e10e:	push   eax
 100e10f:	push   esi
 100e110:	lea    eax,[ebp-0xc]
 100e113:	push   eax
 100e114:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e11a:	mov    eax,DWORD PTR [eax]
 100e11c:	push   DWORD PTR [edi+eax*1]
 100e11f:	call   DWORD PTR ds:0x100114c
 100e125:	test   eax,eax
 100e127:	je     0x100e537
 100e12d:	mov    eax,DWORD PTR [ebp-0x1ac0]
 100e133:	mov    ecx,DWORD PTR [ebp-0x1ad0]
 100e139:	add    eax,ecx
 100e13b:	mov    DWORD PTR [ebp-0x1ac8],eax
 100e141:	cmp    DWORD PTR [ebp-0x1ad4],esi
 100e147:	jl     0x100e543
 100e14d:	cmp    DWORD PTR [ebp-0x1ae4],0x0
 100e154:	je     0x100e227
 100e15a:	push   0x0
 100e15c:	lea    eax,[ebp-0x1ad4]
 100e162:	push   eax
 100e163:	push   0x1
 100e165:	lea    eax,[ebp-0xc]
 100e168:	push   eax
 100e169:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e16f:	mov    eax,DWORD PTR [eax]
 100e171:	mov    BYTE PTR [ebp-0xc],0xd
 100e175:	push   DWORD PTR [edi+eax*1]
 100e178:	call   DWORD PTR ds:0x100114c
 100e17e:	test   eax,eax
 100e180:	je     0x100e537
 100e186:	cmp    DWORD PTR [ebp-0x1ad4],0x1
 100e18d:	jl     0x100e543
 100e193:	inc    DWORD PTR [ebp-0x1ad0]
 100e199:	inc    DWORD PTR [ebp-0x1ac8]
 100e19f:	jmp    0x100e227
 100e1a4:	cmp    al,0x1
 100e1a6:	je     0x100e1ac
 100e1a8:	cmp    al,0x2
 100e1aa:	jne    0x100e1cd
 100e1ac:	movzx  esi,WORD PTR [ebx]
 100e1af:	xor    ecx,ecx
 100e1b1:	cmp    esi,0xa
 100e1b4:	sete   cl
 100e1b7:	add    ebx,0x2
 100e1ba:	add    DWORD PTR [ebp-0x1ac0],0x2
 100e1c1:	mov    DWORD PTR [ebp-0x1abc],esi
 100e1c7:	mov    DWORD PTR [ebp-0x1ae4],ecx
 100e1cd:	cmp    al,0x1
 100e1cf:	je     0x100e1d5
 100e1d1:	cmp    al,0x2
 100e1d3:	jne    0x100e227
 100e1d5:	push   DWORD PTR [ebp-0x1abc]
 100e1db:	call   0x1010b58
 100e1e0:	pop    ecx
 100e1e1:	cmp    ax,WORD PTR [ebp-0x1abc]
 100e1e8:	jne    0x100e537
 100e1ee:	add    DWORD PTR [ebp-0x1ac8],0x2
 100e1f5:	cmp    DWORD PTR [ebp-0x1ae4],0x0
 100e1fc:	je     0x100e227
 100e1fe:	push   0xd
 100e200:	pop    eax
 100e201:	push   eax
 100e202:	mov    DWORD PTR [ebp-0x1abc],eax
 100e208:	call   0x1010b58
 100e20d:	pop    ecx
 100e20e:	cmp    ax,WORD PTR [ebp-0x1abc]
 100e215:	jne    0x100e537
 100e21b:	inc    DWORD PTR [ebp-0x1ac8]
 100e221:	inc    DWORD PTR [ebp-0x1ad0]
 100e227:	mov    eax,DWORD PTR [ebp+0x10]
 100e22a:	cmp    DWORD PTR [ebp-0x1ac0],eax
 100e230:	jb     0x100e02f
 100e236:	jmp    0x100e543
 100e23b:	mov    ecx,DWORD PTR [esi]
 100e23d:	mov    dl,BYTE PTR [ebx]
 100e23f:	inc    DWORD PTR [ebp-0x1ac8]
 100e245:	mov    BYTE PTR [edi+ecx*1+0x34],dl
 100e249:	mov    ecx,DWORD PTR [esi]
 100e24b:	mov    DWORD PTR [edi+ecx*1+0x38],eax
 100e24f:	jmp    0x100e543
 100e254:	xor    ecx,ecx
 100e256:	mov    eax,DWORD PTR [ebx]
 100e258:	test   BYTE PTR [eax+edi*1+0x4],0x80
 100e25d:	je     0x100e504
 100e263:	cmp    BYTE PTR [ebp-0x1ac1],0x0
 100e26a:	mov    DWORD PTR [ebp-0x1abc],ecx
 100e270:	jne    0x100e31e
 100e276:	mov    ebx,DWORD PTR [ebp-0x1acc]
 100e27c:	cmp    DWORD PTR [ebp+0x10],ecx
 100e27f:	jbe    0x100e582
 100e285:	mov    ecx,ebx
 100e287:	xor    esi,esi
 100e289:	sub    ecx,DWORD PTR [ebp-0x1acc]
 100e28f:	lea    eax,[ebp-0x1ab8]
 100e295:	cmp    ecx,DWORD PTR [ebp+0x10]
 100e298:	jae    0x100e2c0
 100e29a:	mov    dl,BYTE PTR [ebx]
 100e29c:	inc    ebx
 100e29d:	inc    ecx
 100e29e:	mov    DWORD PTR [ebp-0x1ae0],ebx
 100e2a4:	cmp    dl,0xa
 100e2a7:	jne    0x100e2b4
 100e2a9:	inc    DWORD PTR [ebp-0x1ad0]
 100e2af:	mov    BYTE PTR [eax],0xd
 100e2b2:	inc    eax
 100e2b3:	inc    esi
 100e2b4:	mov    BYTE PTR [eax],dl
 100e2b6:	inc    eax
 100e2b7:	inc    esi
 100e2b8:	cmp    esi,0x13ff
 100e2be:	jb     0x100e295
 100e2c0:	mov    esi,eax
 100e2c2:	lea    eax,[ebp-0x1ab8]
 100e2c8:	sub    esi,eax
 100e2ca:	push   0x0
 100e2cc:	lea    eax,[ebp-0x1ad8]
 100e2d2:	push   eax
 100e2d3:	push   esi
 100e2d4:	lea    eax,[ebp-0x1ab8]
 100e2da:	push   eax
 100e2db:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e2e1:	mov    eax,DWORD PTR [eax]
 100e2e3:	push   DWORD PTR [edi+eax*1]
 100e2e6:	call   DWORD PTR ds:0x100114c
 100e2ec:	test   eax,eax
 100e2ee:	je     0x100e537
 100e2f4:	mov    eax,DWORD PTR [ebp-0x1ad8]
 100e2fa:	add    DWORD PTR [ebp-0x1ac8],eax
 100e300:	cmp    eax,esi
 100e302:	jl     0x100e543
 100e308:	mov    eax,ebx
 100e30a:	sub    eax,DWORD PTR [ebp-0x1acc]
 100e310:	cmp    eax,DWORD PTR [ebp+0x10]
 100e313:	jb     0x100e285
 100e319:	jmp    0x100e543
 100e31e:	cmp    BYTE PTR [ebp-0x1ac1],0x2
 100e325:	jne    0x100e3f8
 100e32b:	mov    ebx,DWORD PTR [ebp-0x1acc]
 100e331:	cmp    DWORD PTR [ebp+0x10],ecx
 100e334:	jbe    0x100e582
 100e33a:	and    DWORD PTR [ebp-0x1ac0],0x0
 100e341:	mov    ecx,ebx
 100e343:	sub    ecx,DWORD PTR [ebp-0x1acc]
 100e349:	push   0x2
 100e34b:	lea    eax,[ebp-0x1ab8]
 100e351:	pop    esi
 100e352:	cmp    ecx,DWORD PTR [ebp+0x10]
 100e355:	jae    0x100e39a
 100e357:	movzx  edx,WORD PTR [ebx]
 100e35a:	add    ebx,esi
 100e35c:	add    ecx,esi
 100e35e:	mov    DWORD PTR [ebp-0x1ae0],ebx
 100e364:	cmp    edx,0xa
 100e367:	jne    0x100e383
 100e369:	add    DWORD PTR [ebp-0x1ad0],esi
 100e36f:	push   0xd
 100e371:	pop    ebx
 100e372:	mov    WORD PTR [eax],bx
 100e375:	mov    ebx,DWORD PTR [ebp-0x1ae0]
 100e37b:	add    eax,esi
 100e37d:	add    DWORD PTR [ebp-0x1ac0],esi
 100e383:	add    DWORD PTR [ebp-0x1ac0],esi
 100e389:	mov    WORD PTR [eax],dx
 100e38c:	add    eax,esi
 100e38e:	cmp    DWORD PTR [ebp-0x1ac0],0x13fe
 100e398:	jb     0x100e352
 100e39a:	mov    esi,eax
 100e39c:	lea    eax,[ebp-0x1ab8]
 100e3a2:	sub    esi,eax
 100e3a4:	push   0x0
 100e3a6:	lea    eax,[ebp-0x1ad8]
 100e3ac:	push   eax
 100e3ad:	push   esi
 100e3ae:	lea    eax,[ebp-0x1ab8]
 100e3b4:	push   eax
 100e3b5:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e3bb:	mov    eax,DWORD PTR [eax]
 100e3bd:	push   DWORD PTR [edi+eax*1]
 100e3c0:	call   DWORD PTR ds:0x100114c
 100e3c6:	test   eax,eax
 100e3c8:	je     0x100e537
 100e3ce:	mov    eax,DWORD PTR [ebp-0x1ad8]
 100e3d4:	add    DWORD PTR [ebp-0x1ac8],eax
 100e3da:	cmp    eax,esi
 100e3dc:	jl     0x100e543
 100e3e2:	mov    eax,ebx
 100e3e4:	sub    eax,DWORD PTR [ebp-0x1acc]
 100e3ea:	cmp    eax,DWORD PTR [ebp+0x10]
 100e3ed:	jb     0x100e33a
 100e3f3:	jmp    0x100e543
 100e3f8:	mov    eax,DWORD PTR [ebp-0x1acc]
 100e3fe:	mov    DWORD PTR [ebp-0x1ad4],eax
 100e404:	cmp    DWORD PTR [ebp+0x10],ecx
 100e407:	jbe    0x100e582
 100e40d:	mov    ecx,DWORD PTR [ebp-0x1ad4]
 100e413:	and    DWORD PTR [ebp-0x1ac0],0x0
 100e41a:	sub    ecx,DWORD PTR [ebp-0x1acc]
 100e420:	push   0x2
 100e422:	lea    eax,[ebp-0x6b8]
 100e428:	pop    esi
 100e429:	cmp    ecx,DWORD PTR [ebp+0x10]
 100e42c:	jae    0x100e469
 100e42e:	mov    edx,DWORD PTR [ebp-0x1ad4]
 100e434:	movzx  edx,WORD PTR [edx]
 100e437:	add    DWORD PTR [ebp-0x1ad4],esi
 100e43d:	add    ecx,esi
 100e43f:	cmp    edx,0xa
 100e442:	jne    0x100e452
 100e444:	push   0xd
 100e446:	pop    ebx
 100e447:	mov    WORD PTR [eax],bx
 100e44a:	add    eax,esi
 100e44c:	add    DWORD PTR [ebp-0x1ac0],esi
 100e452:	add    DWORD PTR [ebp-0x1ac0],esi
 100e458:	mov    WORD PTR [eax],dx
 100e45b:	add    eax,esi
 100e45d:	cmp    DWORD PTR [ebp-0x1ac0],0x6a8
 100e467:	jb     0x100e429
 100e469:	xor    esi,esi
 100e46b:	push   esi
 100e46c:	push   esi
 100e46d:	push   0xd55
 100e472:	lea    ecx,[ebp-0x1410]
 100e478:	push   ecx
 100e479:	lea    ecx,[ebp-0x6b8]
 100e47f:	sub    eax,ecx
 100e481:	cdq    
 100e482:	sub    eax,edx
 100e484:	sar    eax,1
 100e486:	push   eax
 100e487:	mov    eax,ecx
 100e489:	push   eax
 100e48a:	push   esi
 100e48b:	push   0xfde9
 100e490:	call   DWORD PTR ds:0x100115c
 100e496:	mov    ebx,eax
 100e498:	cmp    ebx,esi
 100e49a:	je     0x100e537
 100e4a0:	push   0x0
 100e4a2:	lea    eax,[ebp-0x1ad8]
 100e4a8:	push   eax
 100e4a9:	mov    eax,ebx
 100e4ab:	sub    eax,esi
 100e4ad:	push   eax
 100e4ae:	lea    eax,[ebp+esi*1-0x1410]
 100e4b5:	push   eax
 100e4b6:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e4bc:	mov    eax,DWORD PTR [eax]
 100e4be:	push   DWORD PTR [edi+eax*1]
 100e4c1:	call   DWORD PTR ds:0x100114c
 100e4c7:	test   eax,eax
 100e4c9:	je     0x100e4d7
 100e4cb:	add    esi,DWORD PTR [ebp-0x1ad8]
 100e4d1:	cmp    ebx,esi
 100e4d3:	jg     0x100e4a0
 100e4d5:	jmp    0x100e4e3
 100e4d7:	call   DWORD PTR ds:0x1001124
 100e4dd:	mov    DWORD PTR [ebp-0x1abc],eax
 100e4e3:	cmp    ebx,esi
 100e4e5:	jg     0x100e543
 100e4e7:	mov    eax,DWORD PTR [ebp-0x1ad4]
 100e4ed:	sub    eax,DWORD PTR [ebp-0x1acc]
 100e4f3:	mov    DWORD PTR [ebp-0x1ac8],eax
 100e4f9:	cmp    eax,DWORD PTR [ebp+0x10]
 100e4fc:	jb     0x100e40d
 100e502:	jmp    0x100e543
 100e504:	push   ecx
 100e505:	lea    ecx,[ebp-0x1ad8]
 100e50b:	push   ecx
 100e50c:	push   DWORD PTR [ebp+0x10]
 100e50f:	push   DWORD PTR [ebp-0x1acc]
 100e515:	push   DWORD PTR [eax+edi*1]
 100e518:	call   DWORD PTR ds:0x100114c
 100e51e:	test   eax,eax
 100e520:	je     0x100e537
 100e522:	mov    eax,DWORD PTR [ebp-0x1ad8]
 100e528:	and    DWORD PTR [ebp-0x1abc],0x0
 100e52f:	mov    DWORD PTR [ebp-0x1ac8],eax
 100e535:	jmp    0x100e543
 100e537:	call   DWORD PTR ds:0x1001124
 100e53d:	mov    DWORD PTR [ebp-0x1abc],eax
 100e543:	cmp    DWORD PTR [ebp-0x1ac8],0x0
 100e54a:	jne    0x100e5b8
 100e54c:	cmp    DWORD PTR [ebp-0x1abc],0x0
 100e553:	je     0x100e582
 100e555:	push   0x5
 100e557:	pop    esi
 100e558:	cmp    DWORD PTR [ebp-0x1abc],esi
 100e55e:	jne    0x100e574
 100e560:	call   0x100af29
 100e565:	mov    DWORD PTR [eax],0x9
 100e56b:	call   0x100af41
 100e570:	mov    DWORD PTR [eax],esi
 100e572:	jmp    0x100e5b3
 100e574:	push   DWORD PTR [ebp-0x1abc]
 100e57a:	call   0x100af59
 100e57f:	pop    ecx
 100e580:	jmp    0x100e5b3
 100e582:	mov    eax,DWORD PTR [ebp-0x1adc]
 100e588:	mov    eax,DWORD PTR [eax]
 100e58a:	test   BYTE PTR [edi+eax*1+0x4],0x40
 100e58f:	je     0x100e5a0
 100e591:	mov    eax,DWORD PTR [ebp-0x1acc]
 100e597:	cmp    BYTE PTR [eax],0x1a
 100e59a:	jne    0x100e5a0
 100e59c:	xor    eax,eax
 100e59e:	jmp    0x100e5c4
 100e5a0:	call   0x100af29
 100e5a5:	mov    DWORD PTR [eax],0x1c
 100e5ab:	call   0x100af41
 100e5b0:	and    DWORD PTR [eax],0x0
 100e5b3:	or     eax,0xffffffff
 100e5b6:	jmp    0x100e5c4
 100e5b8:	mov    eax,DWORD PTR [ebp-0x1ac8]
 100e5be:	sub    eax,DWORD PTR [ebp-0x1ad0]
 100e5c4:	pop    ebx
 100e5c5:	mov    ecx,DWORD PTR [ebp-0x4]
 100e5c8:	pop    edi
 100e5c9:	xor    ecx,ebp
 100e5cb:	pop    esi
 100e5cc:	call   0x1008355
 100e5d1:	leave  
 100e5d2:	ret    
 100e5d3:	int3   
 100e5d4:	int3   
 100e5d5:	int3   
 100e5d6:	int3   
 100e5d7:	int3   
 100e5d8:	push   0x10
 100e5da:	push   0x1011cd8
 100e5df:	call   0x1009cd0
 100e5e4:	mov    ebx,DWORD PTR [ebp+0x8]
 100e5e7:	cmp    ebx,0xfffffffe
 100e5ea:	jne    0x100e607
 100e5ec:	call   0x100af41
 100e5f1:	and    DWORD PTR [eax],0x0
 100e5f4:	call   0x100af29
 100e5f9:	mov    DWORD PTR [eax],0x9
 100e5ff:	or     eax,0xffffffff
 100e602:	jmp    0x100e69b
 100e607:	test   ebx,ebx
 100e609:	js     0x100e613
 100e60b:	cmp    ebx,DWORD PTR ds:0x1015fc8
 100e611:	jb     0x100e62d
 100e613:	call   0x100af41
 100e618:	and    DWORD PTR [eax],0x0
 100e61b:	call   0x100af29
 100e620:	mov    DWORD PTR [eax],0x9
 100e626:	call   0x100aecd
 100e62b:	jmp    0x100e5ff
 100e62d:	mov    eax,ebx
 100e62f:	sar    eax,0x5
 100e632:	lea    edi,[eax*4+0x1015fe0]
 100e639:	mov    esi,ebx
 100e63b:	and    esi,0x1f
 100e63e:	shl    esi,0x6
 100e641:	mov    eax,DWORD PTR [edi]
 100e643:	movsx  eax,BYTE PTR [eax+esi*1+0x4]
 100e648:	and    eax,0x1
 100e64b:	je     0x100e613
 100e64d:	push   ebx
 100e64e:	call   0x100eb76
 100e653:	pop    ecx
 100e654:	and    DWORD PTR [ebp-0x4],0x0
 100e658:	mov    eax,DWORD PTR [edi]
 100e65a:	test   BYTE PTR [eax+esi*1+0x4],0x1
 100e65f:	je     0x100e675
 100e661:	push   DWORD PTR [ebp+0x10]
 100e664:	push   DWORD PTR [ebp+0xc]
 100e667:	push   ebx
 100e668:	call   0x100ded6
 100e66d:	add    esp,0xc
 100e670:	mov    DWORD PTR [ebp-0x1c],eax
 100e673:	jmp    0x100e68c
 100e675:	call   0x100af29
 100e67a:	mov    DWORD PTR [eax],0x9
 100e680:	call   0x100af41
 100e685:	and    DWORD PTR [eax],0x0
 100e688:	or     DWORD PTR [ebp-0x1c],0xffffffff
 100e68c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100e693:	call   0x100e6a4
 100e698:	mov    eax,DWORD PTR [ebp-0x1c]
 100e69b:	call   0x1009d15
 100e6a0:	ret    
 100e6a1:	mov    ebx,DWORD PTR [ebp+0x8]
 100e6a4:	push   ebx
 100e6a5:	call   0x100ec1a
 100e6aa:	pop    ecx
 100e6ab:	ret    
 100e6ac:	int3   
 100e6ad:	int3   
 100e6ae:	int3   
 100e6af:	int3   
 100e6b0:	int3   
 100e6b1:	mov    edi,edi
 100e6b3:	push   ebp
 100e6b4:	mov    ebp,esp
 100e6b6:	inc    DWORD PTR ds:0x1014a70
 100e6bc:	push   0x1000
 100e6c1:	call   0x100dc6f
 100e6c6:	pop    ecx
 100e6c7:	mov    ecx,DWORD PTR [ebp+0x8]
 100e6ca:	mov    DWORD PTR [ecx+0x8],eax
 100e6cd:	test   eax,eax
 100e6cf:	je     0x100e6de
 100e6d1:	or     DWORD PTR [ecx+0xc],0x8
 100e6d5:	mov    DWORD PTR [ecx+0x18],0x1000
 100e6dc:	jmp    0x100e6ef
 100e6de:	or     DWORD PTR [ecx+0xc],0x4
 100e6e2:	lea    eax,[ecx+0x14]
 100e6e5:	mov    DWORD PTR [ecx+0x8],eax
 100e6e8:	mov    DWORD PTR [ecx+0x18],0x2
 100e6ef:	mov    eax,DWORD PTR [ecx+0x8]
 100e6f2:	and    DWORD PTR [ecx+0x4],0x0
 100e6f6:	mov    DWORD PTR [ecx],eax
 100e6f8:	pop    ebp
 100e6f9:	ret    
 100e6fa:	int3   
 100e6fb:	int3   
 100e6fc:	int3   
 100e6fd:	int3   
 100e6fe:	int3   
 100e6ff:	mov    edi,edi
 100e701:	push   ebp
 100e702:	mov    ebp,esp
 100e704:	mov    eax,DWORD PTR [ebp+0x8]
 100e707:	cmp    eax,0xfffffffe
 100e70a:	jne    0x100e71b
 100e70c:	call   0x100af29
 100e711:	mov    DWORD PTR [eax],0x9
 100e717:	xor    eax,eax
 100e719:	pop    ebp
 100e71a:	ret    
 100e71b:	test   eax,eax
 100e71d:	js     0x100e727
 100e71f:	cmp    eax,DWORD PTR ds:0x1015fc8
 100e725:	jb     0x100e739
 100e727:	call   0x100af29
 100e72c:	mov    DWORD PTR [eax],0x9
 100e732:	call   0x100aecd
 100e737:	jmp    0x100e717
 100e739:	mov    ecx,eax
 100e73b:	and    eax,0x1f
 100e73e:	sar    ecx,0x5
 100e741:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100e748:	shl    eax,0x6
 100e74b:	movsx  eax,BYTE PTR [ecx+eax*1+0x4]
 100e750:	and    eax,0x40
 100e753:	pop    ebp
 100e754:	ret    
 100e755:	int3   
 100e756:	int3   
 100e757:	int3   
 100e758:	int3   
 100e759:	int3   
 100e75a:	mov    eax,ds:0x1013054
 100e75f:	or     eax,0x1
 100e762:	xor    ecx,ecx
 100e764:	cmp    DWORD PTR ds:0x1014f54,eax
 100e76a:	sete   cl
 100e76d:	mov    eax,ecx
 100e76f:	ret    
 100e770:	int3   
 100e771:	int3   
 100e772:	int3   
 100e773:	int3   
 100e774:	int3   
 100e775:	mov    edi,edi
 100e777:	push   ebp
 100e778:	mov    ebp,esp
 100e77a:	sub    esp,0x10
 100e77d:	push   ebx
 100e77e:	push   esi
 100e77f:	mov    esi,DWORD PTR [ebp+0xc]
 100e782:	xor    ebx,ebx
 100e784:	push   edi
 100e785:	mov    edi,DWORD PTR [ebp+0x10]
 100e788:	cmp    esi,ebx
 100e78a:	jne    0x100e79d
 100e78c:	cmp    edi,ebx
 100e78e:	jbe    0x100e79d
 100e790:	mov    eax,DWORD PTR [ebp+0x8]
 100e793:	cmp    eax,ebx
 100e795:	je     0x100e799
 100e797:	mov    DWORD PTR [eax],ebx
 100e799:	xor    eax,eax
 100e79b:	jmp    0x100e818
 100e79d:	mov    eax,DWORD PTR [ebp+0x8]
 100e7a0:	cmp    eax,ebx
 100e7a2:	je     0x100e7a7
 100e7a4:	or     DWORD PTR [eax],0xffffffff
 100e7a7:	cmp    edi,0x7fffffff
 100e7ad:	jbe    0x100e7c2
 100e7af:	call   0x100af29
 100e7b4:	push   0x16
 100e7b6:	pop    esi
 100e7b7:	mov    DWORD PTR [eax],esi
 100e7b9:	call   0x100aecd
 100e7be:	mov    eax,esi
 100e7c0:	jmp    0x100e818
 100e7c2:	push   DWORD PTR [ebp+0x18]
 100e7c5:	lea    ecx,[ebp-0x10]
 100e7c8:	call   0x10086a4
 100e7cd:	mov    eax,DWORD PTR [ebp-0x10]
 100e7d0:	cmp    DWORD PTR [eax+0x14],ebx
 100e7d3:	jne    0x100e869
 100e7d9:	mov    ax,WORD PTR [ebp+0x14]
 100e7dd:	mov    ecx,0xff
 100e7e2:	cmp    ax,cx
 100e7e5:	jbe    0x100e81d
 100e7e7:	cmp    esi,ebx
 100e7e9:	je     0x100e7fa
 100e7eb:	cmp    edi,ebx
 100e7ed:	jbe    0x100e7fa
 100e7ef:	push   edi
 100e7f0:	push   ebx
 100e7f1:	push   esi
 100e7f2:	call   0x1008600
 100e7f7:	add    esp,0xc
 100e7fa:	call   0x100af29
 100e7ff:	mov    DWORD PTR [eax],0x2a
 100e805:	call   0x100af29
 100e80a:	mov    eax,DWORD PTR [eax]
 100e80c:	cmp    BYTE PTR [ebp-0x4],bl
 100e80f:	je     0x100e818
 100e811:	mov    ecx,DWORD PTR [ebp-0x8]
 100e814:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100e818:	pop    edi
 100e819:	pop    esi
 100e81a:	pop    ebx
 100e81b:	leave  
 100e81c:	ret    
 100e81d:	cmp    esi,ebx
 100e81f:	je     0x100e847
 100e821:	cmp    edi,ebx
 100e823:	ja     0x100e845
 100e825:	call   0x100af29
 100e82a:	push   0x22
 100e82c:	pop    esi
 100e82d:	mov    DWORD PTR [eax],esi
 100e82f:	call   0x100aecd
 100e834:	cmp    BYTE PTR [ebp-0x4],bl
 100e837:	je     0x100e7be
 100e839:	mov    eax,DWORD PTR [ebp-0x8]
 100e83c:	and    DWORD PTR [eax+0x70],0xfffffffd
 100e840:	jmp    0x100e7be
 100e845:	mov    BYTE PTR [esi],al
 100e847:	mov    eax,DWORD PTR [ebp+0x8]
 100e84a:	cmp    eax,ebx
 100e84c:	je     0x100e854
 100e84e:	mov    DWORD PTR [eax],0x1
 100e854:	cmp    BYTE PTR [ebp-0x4],bl
 100e857:	je     0x100e799
 100e85d:	mov    eax,DWORD PTR [ebp-0x8]
 100e860:	and    DWORD PTR [eax+0x70],0xfffffffd
 100e864:	jmp    0x100e799
 100e869:	lea    ecx,[ebp+0xc]
 100e86c:	push   ecx
 100e86d:	push   ebx
 100e86e:	push   edi
 100e86f:	push   esi
 100e870:	push   0x1
 100e872:	lea    ecx,[ebp+0x14]
 100e875:	push   ecx
 100e876:	push   ebx
 100e877:	mov    DWORD PTR [ebp+0xc],ebx
 100e87a:	push   DWORD PTR [eax+0x4]
 100e87d:	call   DWORD PTR ds:0x100115c
 100e883:	cmp    eax,ebx
 100e885:	je     0x100e89b
 100e887:	cmp    DWORD PTR [ebp+0xc],ebx
 100e88a:	jne    0x100e7fa
 100e890:	mov    ecx,DWORD PTR [ebp+0x8]
 100e893:	cmp    ecx,ebx
 100e895:	je     0x100e854
 100e897:	mov    DWORD PTR [ecx],eax
 100e899:	jmp    0x100e854
 100e89b:	call   DWORD PTR ds:0x1001124
 100e8a1:	cmp    eax,0x7a
 100e8a4:	jne    0x100e7fa
 100e8aa:	cmp    esi,ebx
 100e8ac:	je     0x100e825
 100e8b2:	cmp    edi,ebx
 100e8b4:	jbe    0x100e825
 100e8ba:	push   edi
 100e8bb:	push   ebx
 100e8bc:	push   esi
 100e8bd:	call   0x1008600
 100e8c2:	add    esp,0xc
 100e8c5:	jmp    0x100e825
 100e8ca:	int3   
 100e8cb:	int3   
 100e8cc:	int3   
 100e8cd:	int3   
 100e8ce:	int3   
 100e8cf:	mov    edi,edi
 100e8d1:	push   ebp
 100e8d2:	mov    ebp,esp
 100e8d4:	push   0x0
 100e8d6:	push   DWORD PTR [ebp+0x14]
 100e8d9:	push   DWORD PTR [ebp+0x10]
 100e8dc:	push   DWORD PTR [ebp+0xc]
 100e8df:	push   DWORD PTR [ebp+0x8]
 100e8e2:	call   0x100e775
 100e8e7:	add    esp,0x14
 100e8ea:	pop    ebp
 100e8eb:	ret    
 100e8ec:	int3   
 100e8ed:	int3   
 100e8ee:	int3   
 100e8ef:	int3   
 100e8f0:	int3   
 100e8f1:	mov    edi,edi
 100e8f3:	push   ebp
 100e8f4:	mov    ebp,esp
 100e8f6:	sub    esp,0x10
 100e8f9:	push   DWORD PTR [ebp+0xc]
 100e8fc:	lea    ecx,[ebp-0x10]
 100e8ff:	call   0x10086a4
 100e904:	movzx  eax,BYTE PTR [ebp+0x8]
 100e908:	mov    ecx,DWORD PTR [ebp-0x10]
 100e90b:	mov    ecx,DWORD PTR [ecx+0xc8]
 100e911:	movzx  eax,WORD PTR [ecx+eax*2]
 100e915:	and    eax,0x8000
 100e91a:	cmp    BYTE PTR [ebp-0x4],0x0
 100e91e:	je     0x100e927
 100e920:	mov    ecx,DWORD PTR [ebp-0x8]
 100e923:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100e927:	leave  
 100e928:	ret    
 100e929:	int3   
 100e92a:	int3   
 100e92b:	int3   
 100e92c:	int3   
 100e92d:	int3   
 100e92e:	mov    edi,edi
 100e930:	push   ebp
 100e931:	mov    ebp,esp
 100e933:	push   0x0
 100e935:	push   DWORD PTR [ebp+0x8]
 100e938:	call   0x100e8f1
 100e93d:	pop    ecx
 100e93e:	pop    ecx
 100e93f:	pop    ebp
 100e940:	ret    
 100e941:	int3   
 100e942:	int3   
 100e943:	int3   
 100e944:	int3   
 100e945:	int3   
 100e946:	int3   
 100e947:	int3   
 100e948:	int3   
 100e949:	int3   
 100e94a:	int3   
 100e94b:	int3   
 100e94c:	int3   
 100e94d:	int3   
 100e94e:	int3   
 100e94f:	int3   
 100e950:	push   esi
 100e951:	mov    eax,DWORD PTR [esp+0x14]
 100e955:	or     eax,eax
 100e957:	jne    0x100e981
 100e959:	mov    ecx,DWORD PTR [esp+0x10]
 100e95d:	mov    eax,DWORD PTR [esp+0xc]
 100e961:	xor    edx,edx
 100e963:	div    ecx
 100e965:	mov    ebx,eax
 100e967:	mov    eax,DWORD PTR [esp+0x8]
 100e96b:	div    ecx
 100e96d:	mov    esi,eax
 100e96f:	mov    eax,ebx
 100e971:	mul    DWORD PTR [esp+0x10]
 100e975:	mov    ecx,eax
 100e977:	mov    eax,esi
 100e979:	mul    DWORD PTR [esp+0x10]
 100e97d:	add    edx,ecx
 100e97f:	jmp    0x100e9c8
 100e981:	mov    ecx,eax
 100e983:	mov    ebx,DWORD PTR [esp+0x10]
 100e987:	mov    edx,DWORD PTR [esp+0xc]
 100e98b:	mov    eax,DWORD PTR [esp+0x8]
 100e98f:	shr    ecx,1
 100e991:	rcr    ebx,1
 100e993:	shr    edx,1
 100e995:	rcr    eax,1
 100e997:	or     ecx,ecx
 100e999:	jne    0x100e98f
 100e99b:	div    ebx
 100e99d:	mov    esi,eax
 100e99f:	mul    DWORD PTR [esp+0x14]
 100e9a3:	mov    ecx,eax
 100e9a5:	mov    eax,DWORD PTR [esp+0x10]
 100e9a9:	mul    esi
 100e9ab:	add    edx,ecx
 100e9ad:	jb     0x100e9bd
 100e9af:	cmp    edx,DWORD PTR [esp+0xc]
 100e9b3:	ja     0x100e9bd
 100e9b5:	jb     0x100e9c6
 100e9b7:	cmp    eax,DWORD PTR [esp+0x8]
 100e9bb:	jbe    0x100e9c6
 100e9bd:	dec    esi
 100e9be:	sub    eax,DWORD PTR [esp+0x10]
 100e9c2:	sbb    edx,DWORD PTR [esp+0x14]
 100e9c6:	xor    ebx,ebx
 100e9c8:	sub    eax,DWORD PTR [esp+0x8]
 100e9cc:	sbb    edx,DWORD PTR [esp+0xc]
 100e9d0:	neg    edx
 100e9d2:	neg    eax
 100e9d4:	sbb    edx,0x0
 100e9d7:	mov    ecx,edx
 100e9d9:	mov    edx,ebx
 100e9db:	mov    ebx,ecx
 100e9dd:	mov    ecx,eax
 100e9df:	mov    eax,esi
 100e9e1:	pop    esi
 100e9e2:	ret    0x10
 100e9e5:	int3   
 100e9e6:	int3   
 100e9e7:	int3   
 100e9e8:	int3   
 100e9e9:	int3   
 100e9ea:	and    DWORD PTR ds:0x1014fb0,0x0
 100e9f1:	ret    
 100e9f2:	int3   
 100e9f3:	int3   
 100e9f4:	int3   
 100e9f5:	int3   
 100e9f6:	int3   
 100e9f7:	mov    edi,edi
 100e9f9:	push   ebp
 100e9fa:	mov    ebp,esp
 100e9fc:	mov    eax,DWORD PTR [ebp+0x8]
 100e9ff:	push   esi
 100ea00:	push   edi
 100ea01:	test   eax,eax
 100ea03:	js     0x100ea5e
 100ea05:	cmp    eax,DWORD PTR ds:0x1015fc8
 100ea0b:	jae    0x100ea5e
 100ea0d:	mov    ecx,eax
 100ea0f:	sar    ecx,0x5
 100ea12:	mov    esi,eax
 100ea14:	and    esi,0x1f
 100ea17:	lea    edi,[ecx*4+0x1015fe0]
 100ea1e:	mov    ecx,DWORD PTR [edi]
 100ea20:	shl    esi,0x6
 100ea23:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
 100ea27:	jne    0x100ea5e
 100ea29:	cmp    DWORD PTR ds:0x1013050,0x1
 100ea30:	push   ebx
 100ea31:	mov    ebx,DWORD PTR [ebp+0xc]
 100ea34:	jne    0x100ea54
 100ea36:	sub    eax,0x0
 100ea39:	je     0x100ea4b
 100ea3b:	dec    eax
 100ea3c:	je     0x100ea46
 100ea3e:	dec    eax
 100ea3f:	jne    0x100ea54
 100ea41:	push   ebx
 100ea42:	push   0xfffffff4
 100ea44:	jmp    0x100ea4e
 100ea46:	push   ebx
 100ea47:	push   0xfffffff5
 100ea49:	jmp    0x100ea4e
 100ea4b:	push   ebx
 100ea4c:	push   0xfffffff6
 100ea4e:	call   DWORD PTR ds:0x10010d0
 100ea54:	mov    eax,DWORD PTR [edi]
 100ea56:	mov    DWORD PTR [esi+eax*1],ebx
 100ea59:	xor    eax,eax
 100ea5b:	pop    ebx
 100ea5c:	jmp    0x100ea74
 100ea5e:	call   0x100af29
 100ea63:	mov    DWORD PTR [eax],0x9
 100ea69:	call   0x100af41
 100ea6e:	and    DWORD PTR [eax],0x0
 100ea71:	or     eax,0xffffffff
 100ea74:	pop    edi
 100ea75:	pop    esi
 100ea76:	pop    ebp
 100ea77:	ret    
 100ea78:	int3   
 100ea79:	int3   
 100ea7a:	int3   
 100ea7b:	int3   
 100ea7c:	int3   
 100ea7d:	mov    edi,edi
 100ea7f:	push   ebp
 100ea80:	mov    ebp,esp
 100ea82:	mov    ecx,DWORD PTR [ebp+0x8]
 100ea85:	push   ebx
 100ea86:	xor    ebx,ebx
 100ea88:	push   esi
 100ea89:	push   edi
 100ea8a:	cmp    ecx,ebx
 100ea8c:	jl     0x100eae9
 100ea8e:	cmp    ecx,DWORD PTR ds:0x1015fc8
 100ea94:	jae    0x100eae9
 100ea96:	mov    eax,ecx
 100ea98:	sar    eax,0x5
 100ea9b:	mov    esi,ecx
 100ea9d:	and    esi,0x1f
 100eaa0:	lea    edi,[eax*4+0x1015fe0]
 100eaa7:	mov    eax,DWORD PTR [edi]
 100eaa9:	shl    esi,0x6
 100eaac:	test   BYTE PTR [eax+esi*1+0x4],0x1
 100eab1:	je     0x100eae9
 100eab3:	cmp    DWORD PTR [eax+esi*1],0xffffffff
 100eab7:	je     0x100eae9
 100eab9:	cmp    DWORD PTR ds:0x1013050,0x1
 100eac0:	jne    0x100eadf
 100eac2:	sub    ecx,ebx
 100eac4:	je     0x100ead6
 100eac6:	dec    ecx
 100eac7:	je     0x100ead1
 100eac9:	dec    ecx
 100eaca:	jne    0x100eadf
 100eacc:	push   ebx
 100eacd:	push   0xfffffff4
 100eacf:	jmp    0x100ead9
 100ead1:	push   ebx
 100ead2:	push   0xfffffff5
 100ead4:	jmp    0x100ead9
 100ead6:	push   ebx
 100ead7:	push   0xfffffff6
 100ead9:	call   DWORD PTR ds:0x10010d0
 100eadf:	mov    eax,DWORD PTR [edi]
 100eae1:	or     DWORD PTR [esi+eax*1],0xffffffff
 100eae5:	xor    eax,eax
 100eae7:	jmp    0x100eafe
 100eae9:	call   0x100af29
 100eaee:	mov    DWORD PTR [eax],0x9
 100eaf4:	call   0x100af41
 100eaf9:	mov    DWORD PTR [eax],ebx
 100eafb:	or     eax,0xffffffff
 100eafe:	pop    edi
 100eaff:	pop    esi
 100eb00:	pop    ebx
 100eb01:	pop    ebp
 100eb02:	ret    
 100eb03:	int3   
 100eb04:	int3   
 100eb05:	int3   
 100eb06:	int3   
 100eb07:	int3   
 100eb08:	mov    edi,edi
 100eb0a:	push   ebp
 100eb0b:	mov    ebp,esp
 100eb0d:	mov    eax,DWORD PTR [ebp+0x8]
 100eb10:	cmp    eax,0xfffffffe
 100eb13:	jne    0x100eb2d
 100eb15:	call   0x100af41
 100eb1a:	and    DWORD PTR [eax],0x0
 100eb1d:	call   0x100af29
 100eb22:	mov    DWORD PTR [eax],0x9
 100eb28:	or     eax,0xffffffff
 100eb2b:	pop    ebp
 100eb2c:	ret    
 100eb2d:	test   eax,eax
 100eb2f:	js     0x100eb39
 100eb31:	cmp    eax,DWORD PTR ds:0x1015fc8
 100eb37:	jb     0x100eb53
 100eb39:	call   0x100af41
 100eb3e:	and    DWORD PTR [eax],0x0
 100eb41:	call   0x100af29
 100eb46:	mov    DWORD PTR [eax],0x9
 100eb4c:	call   0x100aecd
 100eb51:	jmp    0x100eb28
 100eb53:	mov    ecx,eax
 100eb55:	sar    ecx,0x5
 100eb58:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100eb5f:	and    eax,0x1f
 100eb62:	shl    eax,0x6
 100eb65:	test   BYTE PTR [eax+ecx*1+0x4],0x1
 100eb6a:	je     0x100eb39
 100eb6c:	mov    eax,DWORD PTR [eax+ecx*1]
 100eb6f:	pop    ebp
 100eb70:	ret    
 100eb71:	int3   
 100eb72:	int3   
 100eb73:	int3   
 100eb74:	int3   
 100eb75:	int3   
 100eb76:	push   0xc
 100eb78:	push   0x1011cf8
 100eb7d:	call   0x1009cd0
 100eb82:	mov    edi,DWORD PTR [ebp+0x8]
 100eb85:	mov    eax,edi
 100eb87:	sar    eax,0x5
 100eb8a:	mov    esi,edi
 100eb8c:	and    esi,0x1f
 100eb8f:	shl    esi,0x6
 100eb92:	add    esi,DWORD PTR [eax*4+0x1015fe0]
 100eb99:	mov    DWORD PTR [ebp-0x1c],0x1
 100eba0:	xor    ebx,ebx
 100eba2:	cmp    DWORD PTR [esi+0x8],ebx
 100eba5:	jne    0x100ebdc
 100eba7:	push   0xa
 100eba9:	call   0x100d473
 100ebae:	pop    ecx
 100ebaf:	mov    DWORD PTR [ebp-0x4],ebx
 100ebb2:	cmp    DWORD PTR [esi+0x8],ebx
 100ebb5:	jne    0x100ebd0
 100ebb7:	push   0xfa0
 100ebbc:	lea    eax,[esi+0xc]
 100ebbf:	push   eax
 100ebc0:	call   DWORD PTR ds:0x1001168
 100ebc6:	test   eax,eax
 100ebc8:	jne    0x100ebcd
 100ebca:	mov    DWORD PTR [ebp-0x1c],ebx
 100ebcd:	inc    DWORD PTR [esi+0x8]
 100ebd0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100ebd7:	call   0x100ec0c
 100ebdc:	cmp    DWORD PTR [ebp-0x1c],ebx
 100ebdf:	je     0x100ebfe
 100ebe1:	mov    eax,edi
 100ebe3:	sar    eax,0x5
 100ebe6:	and    edi,0x1f
 100ebe9:	shl    edi,0x6
 100ebec:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100ebf3:	lea    eax,[eax+edi*1+0xc]
 100ebf7:	push   eax
 100ebf8:	call   DWORD PTR ds:0x1001118
 100ebfe:	mov    eax,DWORD PTR [ebp-0x1c]
 100ec01:	call   0x1009d15
 100ec06:	ret    
 100ec07:	xor    ebx,ebx
 100ec09:	mov    edi,DWORD PTR [ebp+0x8]
 100ec0c:	push   0xa
 100ec0e:	call   0x100d390
 100ec13:	pop    ecx
 100ec14:	ret    
 100ec15:	int3   
 100ec16:	int3   
 100ec17:	int3   
 100ec18:	int3   
 100ec19:	int3   
 100ec1a:	mov    edi,edi
 100ec1c:	push   ebp
 100ec1d:	mov    ebp,esp
 100ec1f:	mov    eax,DWORD PTR [ebp+0x8]
 100ec22:	mov    ecx,eax
 100ec24:	and    eax,0x1f
 100ec27:	sar    ecx,0x5
 100ec2a:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100ec31:	shl    eax,0x6
 100ec34:	lea    eax,[ecx+eax*1+0xc]
 100ec38:	push   eax
 100ec39:	call   DWORD PTR ds:0x1001114
 100ec3f:	pop    ebp
 100ec40:	ret    
 100ec41:	int3   
 100ec42:	int3   
 100ec43:	int3   
 100ec44:	int3   
 100ec45:	int3   
 100ec46:	push   0x18
 100ec48:	push   0x1011d18
 100ec4d:	call   0x1009cd0
 100ec52:	or     DWORD PTR [ebp-0x1c],0xffffffff
 100ec56:	xor    edi,edi
 100ec58:	mov    DWORD PTR [ebp-0x24],edi
 100ec5b:	push   0xb
 100ec5d:	call   0x100d3ac
 100ec62:	pop    ecx
 100ec63:	test   eax,eax
 100ec65:	jne    0x100ec6f
 100ec67:	or     eax,0xffffffff
 100ec6a:	jmp    0x100edd0
 100ec6f:	push   0xb
 100ec71:	call   0x100d473
 100ec76:	pop    ecx
 100ec77:	mov    DWORD PTR [ebp-0x4],edi
 100ec7a:	mov    DWORD PTR [ebp-0x28],edi
 100ec7d:	cmp    edi,0x40
 100ec80:	jge    0x100edc1
 100ec86:	mov    esi,DWORD PTR [edi*4+0x1015fe0]
 100ec8d:	test   esi,esi
 100ec8f:	je     0x100ed4e
 100ec95:	mov    DWORD PTR [ebp-0x20],esi
 100ec98:	mov    eax,DWORD PTR [edi*4+0x1015fe0]
 100ec9f:	add    eax,0x800
 100eca4:	cmp    esi,eax
 100eca6:	jae    0x100ed42
 100ecac:	test   BYTE PTR [esi+0x4],0x1
 100ecb0:	jne    0x100ed0d
 100ecb2:	cmp    DWORD PTR [esi+0x8],0x0
 100ecb6:	jne    0x100ecf0
 100ecb8:	push   0xa
 100ecba:	call   0x100d473
 100ecbf:	pop    ecx
 100ecc0:	xor    ebx,ebx
 100ecc2:	inc    ebx
 100ecc3:	mov    DWORD PTR [ebp-0x4],ebx
 100ecc6:	cmp    DWORD PTR [esi+0x8],0x0
 100ecca:	jne    0x100ece7
 100eccc:	push   0xfa0
 100ecd1:	lea    eax,[esi+0xc]
 100ecd4:	push   eax
 100ecd5:	call   DWORD PTR ds:0x1001168
 100ecdb:	test   eax,eax
 100ecdd:	jne    0x100ece4
 100ecdf:	mov    DWORD PTR [ebp-0x24],ebx
 100ece2:	jmp    0x100ece7
 100ece4:	inc    DWORD PTR [esi+0x8]
 100ece7:	and    DWORD PTR [ebp-0x4],0x0
 100eceb:	call   0x100ed18
 100ecf0:	cmp    DWORD PTR [ebp-0x24],0x0
 100ecf4:	jne    0x100ed0d
 100ecf6:	lea    ebx,[esi+0xc]
 100ecf9:	push   ebx
 100ecfa:	call   DWORD PTR ds:0x1001118
 100ed00:	test   BYTE PTR [esi+0x4],0x1
 100ed04:	je     0x100ed21
 100ed06:	push   ebx
 100ed07:	call   DWORD PTR ds:0x1001114
 100ed0d:	add    esi,0x40
 100ed10:	jmp    0x100ec95
 100ed12:	mov    edi,DWORD PTR [ebp-0x28]
 100ed15:	mov    esi,DWORD PTR [ebp-0x20]
 100ed18:	push   0xa
 100ed1a:	call   0x100d390
 100ed1f:	pop    ecx
 100ed20:	ret    
 100ed21:	cmp    DWORD PTR [ebp-0x24],0x0
 100ed25:	jne    0x100ed0d
 100ed27:	mov    BYTE PTR [esi+0x4],0x1
 100ed2b:	or     DWORD PTR [esi],0xffffffff
 100ed2e:	sub    esi,DWORD PTR [edi*4+0x1015fe0]
 100ed35:	sar    esi,0x6
 100ed38:	mov    eax,edi
 100ed3a:	shl    eax,0x5
 100ed3d:	add    esi,eax
 100ed3f:	mov    DWORD PTR [ebp-0x1c],esi
 100ed42:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
 100ed46:	jne    0x100edc1
 100ed48:	inc    edi
 100ed49:	jmp    0x100ec7a
 100ed4e:	push   0x40
 100ed50:	push   0x20
 100ed52:	call   0x100dcb9
 100ed57:	pop    ecx
 100ed58:	pop    ecx
 100ed59:	mov    DWORD PTR [ebp-0x20],eax
 100ed5c:	test   eax,eax
 100ed5e:	je     0x100edc1
 100ed60:	lea    ecx,[edi*4+0x1015fe0]
 100ed67:	mov    DWORD PTR [ecx],eax
 100ed69:	add    DWORD PTR ds:0x1015fc8,0x20
 100ed70:	mov    edx,DWORD PTR [ecx]
 100ed72:	add    edx,0x800
 100ed78:	cmp    eax,edx
 100ed7a:	jae    0x100ed93
 100ed7c:	mov    BYTE PTR [eax+0x4],0x0
 100ed80:	or     DWORD PTR [eax],0xffffffff
 100ed83:	mov    BYTE PTR [eax+0x5],0xa
 100ed87:	and    DWORD PTR [eax+0x8],0x0
 100ed8b:	add    eax,0x40
 100ed8e:	mov    DWORD PTR [ebp-0x20],eax
 100ed91:	jmp    0x100ed70
 100ed93:	shl    edi,0x5
 100ed96:	mov    DWORD PTR [ebp-0x1c],edi
 100ed99:	mov    eax,edi
 100ed9b:	sar    eax,0x5
 100ed9e:	mov    ecx,edi
 100eda0:	and    ecx,0x1f
 100eda3:	shl    ecx,0x6
 100eda6:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100edad:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
 100edb2:	push   edi
 100edb3:	call   0x100eb76
 100edb8:	pop    ecx
 100edb9:	test   eax,eax
 100edbb:	jne    0x100edc1
 100edbd:	or     DWORD PTR [ebp-0x1c],0xffffffff
 100edc1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100edc8:	call   0x100edd6
 100edcd:	mov    eax,DWORD PTR [ebp-0x1c]
 100edd0:	call   0x1009d15
 100edd5:	ret    
 100edd6:	push   0xb
 100edd8:	call   0x100d390
 100eddd:	pop    ecx
 100edde:	ret    
 100eddf:	int3   
 100ede0:	int3   
 100ede1:	int3   
 100ede2:	int3   
 100ede3:	int3   
 100ede4:	push   0x10
 100ede6:	push   0x1011d40
 100edeb:	call   0x1009cd0
 100edf0:	mov    ebx,DWORD PTR [ebp+0x8]
 100edf3:	cmp    ebx,0xfffffffe
 100edf6:	jne    0x100ee0b
 100edf8:	call   0x100af29
 100edfd:	mov    DWORD PTR [eax],0x9
 100ee03:	or     eax,0xffffffff
 100ee06:	jmp    0x100eeac
 100ee0b:	test   ebx,ebx
 100ee0d:	js     0x100ee17
 100ee0f:	cmp    ebx,DWORD PTR ds:0x1015fc8
 100ee15:	jb     0x100ee29
 100ee17:	call   0x100af29
 100ee1c:	mov    DWORD PTR [eax],0x9
 100ee22:	call   0x100aecd
 100ee27:	jmp    0x100ee03
 100ee29:	mov    eax,ebx
 100ee2b:	sar    eax,0x5
 100ee2e:	lea    edi,[eax*4+0x1015fe0]
 100ee35:	mov    esi,ebx
 100ee37:	and    esi,0x1f
 100ee3a:	shl    esi,0x6
 100ee3d:	mov    eax,DWORD PTR [edi]
 100ee3f:	movsx  eax,BYTE PTR [esi+eax*1+0x4]
 100ee44:	and    eax,0x1
 100ee47:	je     0x100ee17
 100ee49:	push   ebx
 100ee4a:	call   0x100eb76
 100ee4f:	pop    ecx
 100ee50:	and    DWORD PTR [ebp-0x4],0x0
 100ee54:	mov    eax,DWORD PTR [edi]
 100ee56:	test   BYTE PTR [esi+eax*1+0x4],0x1
 100ee5b:	je     0x100ee8e
 100ee5d:	push   ebx
 100ee5e:	call   0x100eb08
 100ee63:	pop    ecx
 100ee64:	push   eax
 100ee65:	call   DWORD PTR ds:0x10010cc
 100ee6b:	test   eax,eax
 100ee6d:	jne    0x100ee7a
 100ee6f:	call   DWORD PTR ds:0x1001124
 100ee75:	mov    DWORD PTR [ebp-0x1c],eax
 100ee78:	jmp    0x100ee7e
 100ee7a:	and    DWORD PTR [ebp-0x1c],0x0
 100ee7e:	cmp    DWORD PTR [ebp-0x1c],0x0
 100ee82:	je     0x100ee9d
 100ee84:	call   0x100af41
 100ee89:	mov    ecx,DWORD PTR [ebp-0x1c]
 100ee8c:	mov    DWORD PTR [eax],ecx
 100ee8e:	call   0x100af29
 100ee93:	mov    DWORD PTR [eax],0x9
 100ee99:	or     DWORD PTR [ebp-0x1c],0xffffffff
 100ee9d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100eea4:	call   0x100eeb5
 100eea9:	mov    eax,DWORD PTR [ebp-0x1c]
 100eeac:	call   0x1009d15
 100eeb1:	ret    
 100eeb2:	mov    ebx,DWORD PTR [ebp+0x8]
 100eeb5:	push   ebx
 100eeb6:	call   0x100ec1a
 100eebb:	pop    ecx
 100eebc:	ret    
 100eebd:	int3   
 100eebe:	int3   
 100eebf:	int3   
 100eec0:	int3   
 100eec1:	int3   
 100eec2:	push   0x10
 100eec4:	push   0x1011d60
 100eec9:	call   0x1009cd0
 100eece:	xor    ebx,ebx
 100eed0:	mov    DWORD PTR [ebp-0x1c],ebx
 100eed3:	push   0x1
 100eed5:	call   0x100d473
 100eeda:	pop    ecx
 100eedb:	mov    DWORD PTR [ebp-0x4],ebx
 100eede:	push   0x3
 100eee0:	pop    edi
 100eee1:	mov    DWORD PTR [ebp-0x20],edi
 100eee4:	cmp    edi,DWORD PTR ds:0x1015fc0
 100eeea:	jge    0x100ef40
 100eeec:	mov    esi,edi
 100eeee:	mov    eax,ds:0x1014fb8
 100eef3:	cmp    DWORD PTR [eax+esi*4],ebx
 100eef6:	je     0x100ef3d
 100eef8:	mov    eax,DWORD PTR [eax+esi*4]
 100eefb:	test   BYTE PTR [eax+0xc],0x83
 100eeff:	je     0x100ef10
 100ef01:	push   eax
 100ef02:	call   0x1007f42
 100ef07:	pop    ecx
 100ef08:	cmp    eax,0xffffffff
 100ef0b:	je     0x100ef10
 100ef0d:	inc    DWORD PTR [ebp-0x1c]
 100ef10:	cmp    edi,0x14
 100ef13:	jl     0x100ef3d
 100ef15:	mov    eax,ds:0x1014fb8
 100ef1a:	mov    eax,DWORD PTR [eax+esi*4]
 100ef1d:	add    eax,0x20
 100ef20:	push   eax
 100ef21:	call   DWORD PTR ds:0x1001170
 100ef27:	mov    eax,ds:0x1014fb8
 100ef2c:	push   DWORD PTR [eax+esi*4]
 100ef2f:	call   0x100af81
 100ef34:	pop    ecx
 100ef35:	mov    eax,ds:0x1014fb8
 100ef3a:	mov    DWORD PTR [eax+esi*4],ebx
 100ef3d:	inc    edi
 100ef3e:	jmp    0x100eee1
 100ef40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100ef47:	call   0x100ef55
 100ef4c:	mov    eax,DWORD PTR [ebp-0x1c]
 100ef4f:	call   0x1009d15
 100ef54:	ret    
 100ef55:	push   0x1
 100ef57:	call   0x100d390
 100ef5c:	pop    ecx
 100ef5d:	ret    
 100ef5e:	int3   
 100ef5f:	int3   
 100ef60:	int3   
 100ef61:	int3   
 100ef62:	int3   
 100ef63:	int3   
 100ef64:	int3   
 100ef65:	int3   
 100ef66:	int3   
 100ef67:	int3   
 100ef68:	int3   
 100ef69:	int3   
 100ef6a:	int3   
 100ef6b:	int3   
 100ef6c:	int3   
 100ef6d:	int3   
 100ef6e:	int3   
 100ef6f:	int3   
 100ef70:	push   ebp
 100ef71:	mov    ebp,esp
 100ef73:	push   edi
 100ef74:	push   esi
 100ef75:	mov    esi,DWORD PTR [ebp+0xc]
 100ef78:	mov    ecx,DWORD PTR [ebp+0x10]
 100ef7b:	mov    edi,DWORD PTR [ebp+0x8]
 100ef7e:	mov    eax,ecx
 100ef80:	mov    edx,ecx
 100ef82:	add    eax,esi
 100ef84:	cmp    edi,esi
 100ef86:	jbe    0x100ef90
 100ef88:	cmp    edi,eax
 100ef8a:	jb     0x100f130
 100ef90:	cmp    ecx,0x80
 100ef96:	jb     0x100efb4
 100ef98:	cmp    DWORD PTR ds:0x1014fb4,0x0
 100ef9f:	je     0x100efb4
 100efa1:	push   edi
 100efa2:	push   esi
 100efa3:	and    edi,0xf
 100efa6:	and    esi,0xf
 100efa9:	cmp    edi,esi
 100efab:	pop    esi
 100efac:	pop    edi
 100efad:	jne    0x100efb4
 100efaf:	jmp    0x1010cd9
 100efb4:	test   edi,0x3
 100efba:	jne    0x100efd0
 100efbc:	shr    ecx,0x2
 100efbf:	and    edx,0x3
 100efc2:	cmp    ecx,0x8
 100efc5:	jb     0x100eff0
 100efc7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100efc9:	jmp    DWORD PTR [edx*4+0x100f0e0]
 100efd0:	mov    eax,edi
 100efd2:	mov    edx,0x3
 100efd7:	sub    ecx,0x4
 100efda:	jb     0x100efe8
 100efdc:	and    eax,0x3
 100efdf:	add    ecx,eax
 100efe1:	jmp    DWORD PTR [eax*4+0x100eff4]
 100efe8:	jmp    DWORD PTR [ecx*4+0x100f0f0]
 100efef:	nop
 100eff0:	jmp    DWORD PTR [ecx*4+0x100f074]
 100eff7:	nop
 100eff8:	add    al,0xf0
 100effa:	add    BYTE PTR [ecx],al
 100effc:	xor    al,dh
 100effe:	add    BYTE PTR [ecx],al
 100f000:	push   esp
 100f001:	lock add BYTE PTR [ecx],al
 100f004:	and    edx,ecx
 100f006:	mov    al,BYTE PTR [esi]
 100f008:	mov    BYTE PTR [edi],al
 100f00a:	mov    al,BYTE PTR [esi+0x1]
 100f00d:	mov    BYTE PTR [edi+0x1],al
 100f010:	mov    al,BYTE PTR [esi+0x2]
 100f013:	shr    ecx,0x2
 100f016:	mov    BYTE PTR [edi+0x2],al
 100f019:	add    esi,0x3
 100f01c:	add    edi,0x3
 100f01f:	cmp    ecx,0x8
 100f022:	jb     0x100eff0
 100f024:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f026:	jmp    DWORD PTR [edx*4+0x100f0e0]
 100f02d:	lea    ecx,[ecx+0x0]
 100f030:	and    edx,ecx
 100f032:	mov    al,BYTE PTR [esi]
 100f034:	mov    BYTE PTR [edi],al
 100f036:	mov    al,BYTE PTR [esi+0x1]
 100f039:	shr    ecx,0x2
 100f03c:	mov    BYTE PTR [edi+0x1],al
 100f03f:	add    esi,0x2
 100f042:	add    edi,0x2
 100f045:	cmp    ecx,0x8
 100f048:	jb     0x100eff0
 100f04a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f04c:	jmp    DWORD PTR [edx*4+0x100f0e0]
 100f053:	nop
 100f054:	and    edx,ecx
 100f056:	mov    al,BYTE PTR [esi]
 100f058:	mov    BYTE PTR [edi],al
 100f05a:	add    esi,0x1
 100f05d:	shr    ecx,0x2
 100f060:	add    edi,0x1
 100f063:	cmp    ecx,0x8
 100f066:	jb     0x100eff0
 100f068:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f06a:	jmp    DWORD PTR [edx*4+0x100f0e0]
 100f071:	lea    ecx,[ecx+0x0]
 100f074:	xlat   BYTE PTR ds:[ebx]
 100f075:	lock add BYTE PTR [ecx],al
 100f078:	(bad)  
 100f079:	lock add BYTE PTR [ecx],al
 100f07c:	mov    esp,0xb40100f0
 100f081:	lock add BYTE PTR [ecx],al
 100f084:	lods   al,BYTE PTR ds:[esi]
 100f085:	lock add BYTE PTR [ecx],al
 100f088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100f089:	lock add BYTE PTR [ecx],al
 100f08c:	pushf  
 100f08d:	lock add BYTE PTR [ecx],al
 100f090:	xchg   esp,eax
 100f091:	lock add BYTE PTR [ecx],al
 100f094:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
 100f098:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
 100f09c:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
 100f0a0:	mov    DWORD PTR [edi+ecx*4-0x18],eax
 100f0a4:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
 100f0a8:	mov    DWORD PTR [edi+ecx*4-0x14],eax
 100f0ac:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
 100f0b0:	mov    DWORD PTR [edi+ecx*4-0x10],eax
 100f0b4:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
 100f0b8:	mov    DWORD PTR [edi+ecx*4-0xc],eax
 100f0bc:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
 100f0c0:	mov    DWORD PTR [edi+ecx*4-0x8],eax
 100f0c4:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
 100f0c8:	mov    DWORD PTR [edi+ecx*4-0x4],eax
 100f0cc:	lea    eax,[ecx*4+0x0]
 100f0d3:	add    esi,eax
 100f0d5:	add    edi,eax
 100f0d7:	jmp    DWORD PTR [edx*4+0x100f0e0]
 100f0de:	mov    edi,edi
 100f0e0:	lock lock add BYTE PTR [ecx],al
 100f0e4:	clc    
 100f0e5:	lock add BYTE PTR [ecx],al
 100f0e8:	add    al,0xf1
 100f0ea:	add    BYTE PTR [ecx],al
 100f0ec:	sbb    cl,dh
 100f0ee:	add    BYTE PTR [ecx],al
 100f0f0:	mov    eax,DWORD PTR [ebp+0x8]
 100f0f3:	pop    esi
 100f0f4:	pop    edi
 100f0f5:	leave  
 100f0f6:	ret    
 100f0f7:	nop
 100f0f8:	mov    al,BYTE PTR [esi]
 100f0fa:	mov    BYTE PTR [edi],al
 100f0fc:	mov    eax,DWORD PTR [ebp+0x8]
 100f0ff:	pop    esi
 100f100:	pop    edi
 100f101:	leave  
 100f102:	ret    
 100f103:	nop
 100f104:	mov    al,BYTE PTR [esi]
 100f106:	mov    BYTE PTR [edi],al
 100f108:	mov    al,BYTE PTR [esi+0x1]
 100f10b:	mov    BYTE PTR [edi+0x1],al
 100f10e:	mov    eax,DWORD PTR [ebp+0x8]
 100f111:	pop    esi
 100f112:	pop    edi
 100f113:	leave  
 100f114:	ret    
 100f115:	lea    ecx,[ecx+0x0]
 100f118:	mov    al,BYTE PTR [esi]
 100f11a:	mov    BYTE PTR [edi],al
 100f11c:	mov    al,BYTE PTR [esi+0x1]
 100f11f:	mov    BYTE PTR [edi+0x1],al
 100f122:	mov    al,BYTE PTR [esi+0x2]
 100f125:	mov    BYTE PTR [edi+0x2],al
 100f128:	mov    eax,DWORD PTR [ebp+0x8]
 100f12b:	pop    esi
 100f12c:	pop    edi
 100f12d:	leave  
 100f12e:	ret    
 100f12f:	nop
 100f130:	lea    esi,[ecx+esi*1-0x4]
 100f134:	lea    edi,[ecx+edi*1-0x4]
 100f138:	test   edi,0x3
 100f13e:	jne    0x100f164
 100f140:	shr    ecx,0x2
 100f143:	and    edx,0x3
 100f146:	cmp    ecx,0x8
 100f149:	jb     0x100f158
 100f14b:	std    
 100f14c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f14e:	cld    
 100f14f:	jmp    DWORD PTR [edx*4+0x100f27c]
 100f156:	mov    edi,edi
 100f158:	neg    ecx
 100f15a:	jmp    DWORD PTR [ecx*4+0x100f22c]
 100f161:	lea    ecx,[ecx+0x0]
 100f164:	mov    eax,edi
 100f166:	mov    edx,0x3
 100f16b:	cmp    ecx,0x4
 100f16e:	jb     0x100f17c
 100f170:	and    eax,0x3
 100f173:	sub    ecx,eax
 100f175:	jmp    DWORD PTR [eax*4+0x100f180]
 100f17c:	jmp    DWORD PTR [ecx*4+0x100f27c]
 100f183:	nop
 100f184:	nop
 100f185:	icebp  
 100f186:	add    BYTE PTR [ecx],al
 100f188:	mov    ah,0xf1
 100f18a:	add    BYTE PTR [ecx],al
 100f18c:	fdivr  st(1),st
 100f18e:	add    BYTE PTR [ecx],al
 100f190:	mov    al,BYTE PTR [esi+0x3]
 100f193:	and    edx,ecx
 100f195:	mov    BYTE PTR [edi+0x3],al
 100f198:	sub    esi,0x1
 100f19b:	shr    ecx,0x2
 100f19e:	sub    edi,0x1
 100f1a1:	cmp    ecx,0x8
 100f1a4:	jb     0x100f158
 100f1a6:	std    
 100f1a7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f1a9:	cld    
 100f1aa:	jmp    DWORD PTR [edx*4+0x100f27c]
 100f1b1:	lea    ecx,[ecx+0x0]
 100f1b4:	mov    al,BYTE PTR [esi+0x3]
 100f1b7:	and    edx,ecx
 100f1b9:	mov    BYTE PTR [edi+0x3],al
 100f1bc:	mov    al,BYTE PTR [esi+0x2]
 100f1bf:	shr    ecx,0x2
 100f1c2:	mov    BYTE PTR [edi+0x2],al
 100f1c5:	sub    esi,0x2
 100f1c8:	sub    edi,0x2
 100f1cb:	cmp    ecx,0x8
 100f1ce:	jb     0x100f158
 100f1d0:	std    
 100f1d1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f1d3:	cld    
 100f1d4:	jmp    DWORD PTR [edx*4+0x100f27c]
 100f1db:	nop
 100f1dc:	mov    al,BYTE PTR [esi+0x3]
 100f1df:	and    edx,ecx
 100f1e1:	mov    BYTE PTR [edi+0x3],al
 100f1e4:	mov    al,BYTE PTR [esi+0x2]
 100f1e7:	mov    BYTE PTR [edi+0x2],al
 100f1ea:	mov    al,BYTE PTR [esi+0x1]
 100f1ed:	shr    ecx,0x2
 100f1f0:	mov    BYTE PTR [edi+0x1],al
 100f1f3:	sub    esi,0x3
 100f1f6:	sub    edi,0x3
 100f1f9:	cmp    ecx,0x8
 100f1fc:	jb     0x100f158
 100f202:	std    
 100f203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100f205:	cld    
 100f206:	jmp    DWORD PTR [edx*4+0x100f27c]
 100f20d:	lea    ecx,[ecx+0x0]
 100f210:	xor    dl,dh
 100f212:	add    BYTE PTR [ecx],al
 100f214:	cmp    dl,dh
 100f216:	add    BYTE PTR [ecx],al
 100f218:	inc    eax
 100f219:	repnz add BYTE PTR [ecx],al
 100f21c:	dec    eax
 100f21d:	repnz add BYTE PTR [ecx],al
 100f220:	push   eax
 100f221:	repnz add BYTE PTR [ecx],al
 100f224:	pop    eax
 100f225:	repnz add BYTE PTR [ecx],al
 100f228:	pusha  
 100f229:	repnz add BYTE PTR [ecx],al
 100f22c:	jae    0x100f220
 100f22e:	add    BYTE PTR [ecx],al
 100f230:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
 100f234:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
 100f238:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
 100f23c:	mov    DWORD PTR [edi+ecx*4+0x18],eax
 100f240:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
 100f244:	mov    DWORD PTR [edi+ecx*4+0x14],eax
 100f248:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
 100f24c:	mov    DWORD PTR [edi+ecx*4+0x10],eax
 100f250:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
 100f254:	mov    DWORD PTR [edi+ecx*4+0xc],eax
 100f258:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
 100f25c:	mov    DWORD PTR [edi+ecx*4+0x8],eax
 100f260:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
 100f264:	mov    DWORD PTR [edi+ecx*4+0x4],eax
 100f268:	lea    eax,[ecx*4+0x0]
 100f26f:	add    esi,eax
 100f271:	add    edi,eax
 100f273:	jmp    DWORD PTR [edx*4+0x100f27c]
 100f27a:	mov    edi,edi
 100f27c:	mov    edx,?
 100f27e:	add    BYTE PTR [ecx],al
 100f280:	xchg   esp,eax
 100f281:	repnz add BYTE PTR [ecx],al
 100f284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100f285:	repnz add BYTE PTR [ecx],al
 100f288:	mov    eax,0x8b0100f2
 100f28d:	inc    ebp
 100f28e:	or     BYTE PTR [esi+0x5f],bl
 100f291:	leave  
 100f292:	ret    
 100f293:	nop
 100f294:	mov    al,BYTE PTR [esi+0x3]
 100f297:	mov    BYTE PTR [edi+0x3],al
 100f29a:	mov    eax,DWORD PTR [ebp+0x8]
 100f29d:	pop    esi
 100f29e:	pop    edi
 100f29f:	leave  
 100f2a0:	ret    
 100f2a1:	lea    ecx,[ecx+0x0]
 100f2a4:	mov    al,BYTE PTR [esi+0x3]
 100f2a7:	mov    BYTE PTR [edi+0x3],al
 100f2aa:	mov    al,BYTE PTR [esi+0x2]
 100f2ad:	mov    BYTE PTR [edi+0x2],al
 100f2b0:	mov    eax,DWORD PTR [ebp+0x8]
 100f2b3:	pop    esi
 100f2b4:	pop    edi
 100f2b5:	leave  
 100f2b6:	ret    
 100f2b7:	nop
 100f2b8:	mov    al,BYTE PTR [esi+0x3]
 100f2bb:	mov    BYTE PTR [edi+0x3],al
 100f2be:	mov    al,BYTE PTR [esi+0x2]
 100f2c1:	mov    BYTE PTR [edi+0x2],al
 100f2c4:	mov    al,BYTE PTR [esi+0x1]
 100f2c7:	mov    BYTE PTR [edi+0x1],al
 100f2ca:	mov    eax,DWORD PTR [ebp+0x8]
 100f2cd:	pop    esi
 100f2ce:	pop    edi
 100f2cf:	leave  
 100f2d0:	ret    
 100f2d1:	int3   
 100f2d2:	int3   
 100f2d3:	int3   
 100f2d4:	int3   
 100f2d5:	int3   
 100f2d6:	mov    edi,edi
 100f2d8:	push   ebp
 100f2d9:	mov    ebp,esp
 100f2db:	sub    esp,0x30
 100f2de:	push   ebx
 100f2df:	xor    ebx,ebx
 100f2e1:	test   BYTE PTR [ebp+0x10],0x80
 100f2e5:	push   esi
 100f2e6:	mov    esi,eax
 100f2e8:	mov    DWORD PTR [ebp-0x24],ebx
 100f2eb:	mov    BYTE PTR [ebp-0x2],bl
 100f2ee:	mov    DWORD PTR [ebp-0x8],ebx
 100f2f1:	mov    DWORD PTR [ebp-0x30],0xc
 100f2f8:	mov    DWORD PTR [ebp-0x2c],ebx
 100f2fb:	je     0x100f306
 100f2fd:	mov    DWORD PTR [ebp-0x28],ebx
 100f300:	mov    BYTE PTR [ebp-0x1],0x10
 100f304:	jmp    0x100f310
 100f306:	mov    DWORD PTR [ebp-0x28],0x1
 100f30d:	mov    BYTE PTR [ebp-0x1],bl
 100f310:	lea    eax,[ebp-0x24]
 100f313:	push   eax
 100f314:	call   0x1011692
 100f319:	pop    ecx
 100f31a:	test   eax,eax
 100f31c:	jne    0x100f9ff
 100f322:	mov    eax,0x8000
 100f327:	test   DWORD PTR [ebp+0x10],eax
 100f32a:	jne    0x100f33e
 100f32c:	test   DWORD PTR [ebp+0x10],0x74000
 100f333:	jne    0x100f33a
 100f335:	cmp    DWORD PTR [ebp-0x24],eax
 100f338:	je     0x100f33e
 100f33a:	or     BYTE PTR [ebp-0x1],0x80
 100f33e:	mov    eax,DWORD PTR [ebp+0x10]
 100f341:	and    eax,0x3
 100f344:	sub    eax,ebx
 100f346:	mov    ecx,0xc0000000
 100f34b:	mov    edx,0x80000000
 100f350:	je     0x100f395
 100f352:	dec    eax
 100f353:	je     0x100f37d
 100f355:	dec    eax
 100f356:	je     0x100f378
 100f358:	call   0x100af41
 100f35d:	mov    DWORD PTR [eax],ebx
 100f35f:	or     DWORD PTR [esi],0xffffffff
 100f362:	call   0x100af29
 100f367:	push   0x16
 100f369:	pop    esi
 100f36a:	mov    DWORD PTR [eax],esi
 100f36c:	call   0x100aecd
 100f371:	mov    eax,esi
 100f373:	jmp    0x100f456
 100f378:	mov    DWORD PTR [ebp-0xc],ecx
 100f37b:	jmp    0x100f398
 100f37d:	test   BYTE PTR [ebp+0x10],0x8
 100f381:	je     0x100f38c
 100f383:	test   DWORD PTR [ebp+0x10],0x70000
 100f38a:	jne    0x100f378
 100f38c:	mov    DWORD PTR [ebp-0xc],0x40000000
 100f393:	jmp    0x100f398
 100f395:	mov    DWORD PTR [ebp-0xc],edx
 100f398:	mov    eax,DWORD PTR [ebp+0x14]
 100f39b:	push   0x10
 100f39d:	pop    ecx
 100f39e:	sub    eax,ecx
 100f3a0:	je     0x100f3d9
 100f3a2:	sub    eax,ecx
 100f3a4:	je     0x100f3d0
 100f3a6:	sub    eax,ecx
 100f3a8:	je     0x100f3c7
 100f3aa:	sub    eax,ecx
 100f3ac:	je     0x100f3be
 100f3ae:	sub    eax,0x40
 100f3b1:	jne    0x100f358
 100f3b3:	cmp    DWORD PTR [ebp-0xc],edx
 100f3b6:	sete   al
 100f3b9:	mov    DWORD PTR [ebp-0x14],eax
 100f3bc:	jmp    0x100f3dc
 100f3be:	mov    DWORD PTR [ebp-0x14],0x3
 100f3c5:	jmp    0x100f3dc
 100f3c7:	mov    DWORD PTR [ebp-0x14],0x2
 100f3ce:	jmp    0x100f3dc
 100f3d0:	mov    DWORD PTR [ebp-0x14],0x1
 100f3d7:	jmp    0x100f3dc
 100f3d9:	mov    DWORD PTR [ebp-0x14],ebx
 100f3dc:	mov    eax,DWORD PTR [ebp+0x10]
 100f3df:	mov    edx,0x700
 100f3e4:	and    eax,edx
 100f3e6:	mov    ecx,0x400
 100f3eb:	push   edi
 100f3ec:	mov    edi,0x100
 100f3f1:	cmp    eax,ecx
 100f3f3:	jg     0x100f428
 100f3f5:	je     0x100f41f
 100f3f7:	cmp    eax,ebx
 100f3f9:	je     0x100f41f
 100f3fb:	cmp    eax,edi
 100f3fd:	je     0x100f416
 100f3ff:	cmp    eax,0x200
 100f404:	je     0x100f45a
 100f406:	cmp    eax,0x300
 100f40b:	jne    0x100f43a
 100f40d:	mov    DWORD PTR [ebp-0x18],0x2
 100f414:	jmp    0x100f46a
 100f416:	mov    DWORD PTR [ebp-0x18],0x4
 100f41d:	jmp    0x100f46a
 100f41f:	mov    DWORD PTR [ebp-0x18],0x3
 100f426:	jmp    0x100f46a
 100f428:	cmp    eax,0x500
 100f42d:	je     0x100f463
 100f42f:	cmp    eax,0x600
 100f434:	je     0x100f45a
 100f436:	cmp    eax,edx
 100f438:	je     0x100f463
 100f43a:	call   0x100af41
 100f43f:	mov    DWORD PTR [eax],ebx
 100f441:	or     DWORD PTR [esi],0xffffffff
 100f444:	call   0x100af29
 100f449:	push   0x16
 100f44b:	pop    esi
 100f44c:	mov    DWORD PTR [eax],esi
 100f44e:	call   0x100aecd
 100f453:	mov    eax,esi
 100f455:	pop    edi
 100f456:	pop    esi
 100f457:	pop    ebx
 100f458:	leave  
 100f459:	ret    
 100f45a:	mov    DWORD PTR [ebp-0x18],0x5
 100f461:	jmp    0x100f46a
 100f463:	mov    DWORD PTR [ebp-0x18],0x1
 100f46a:	mov    eax,DWORD PTR [ebp+0x10]
 100f46d:	mov    DWORD PTR [ebp-0x10],0x80
 100f474:	test   edi,eax
 100f476:	je     0x100f48e
 100f478:	mov    ecx,DWORD PTR ds:0x10142f0
 100f47e:	not    ecx
 100f480:	and    ecx,DWORD PTR [ebp+0x18]
 100f483:	test   cl,cl
 100f485:	js     0x100f48e
 100f487:	mov    DWORD PTR [ebp-0x10],0x1
 100f48e:	test   al,0x40
 100f490:	je     0x100f4a4
 100f492:	or     DWORD PTR [ebp-0x10],0x4000000
 100f499:	or     DWORD PTR [ebp-0xc],0x10000
 100f4a0:	or     DWORD PTR [ebp-0x14],0x4
 100f4a4:	test   eax,0x1000
 100f4a9:	je     0x100f4ae
 100f4ab:	or     DWORD PTR [ebp-0x10],edi
 100f4ae:	test   al,0x20
 100f4b0:	je     0x100f4bb
 100f4b2:	or     DWORD PTR [ebp-0x10],0x8000000
 100f4b9:	jmp    0x100f4c6
 100f4bb:	test   al,0x10
 100f4bd:	je     0x100f4c6
 100f4bf:	or     DWORD PTR [ebp-0x10],0x10000000
 100f4c6:	call   0x100ec46
 100f4cb:	or     ebx,0xffffffff
 100f4ce:	mov    DWORD PTR [esi],eax
 100f4d0:	cmp    eax,ebx
 100f4d2:	jne    0x100f4f5
 100f4d4:	call   0x100af41
 100f4d9:	and    DWORD PTR [eax],0x0
 100f4dc:	mov    DWORD PTR [esi],ebx
 100f4de:	call   0x100af29
 100f4e3:	mov    DWORD PTR [eax],0x18
 100f4e9:	call   0x100af29
 100f4ee:	mov    eax,DWORD PTR [eax]
 100f4f0:	jmp    0x100f455
 100f4f5:	mov    eax,DWORD PTR [ebp+0x8]
 100f4f8:	mov    edi,DWORD PTR ds:0x100106c
 100f4fe:	push   0x0
 100f500:	push   DWORD PTR [ebp-0x10]
 100f503:	mov    DWORD PTR [eax],0x1
 100f509:	push   DWORD PTR [ebp-0x18]
 100f50c:	lea    eax,[ebp-0x30]
 100f50f:	push   eax
 100f510:	push   DWORD PTR [ebp-0x14]
 100f513:	push   DWORD PTR [ebp-0xc]
 100f516:	push   DWORD PTR [ebp+0xc]
 100f519:	call   edi
 100f51b:	mov    DWORD PTR [ebp-0x20],eax
 100f51e:	cmp    eax,ebx
 100f520:	jne    0x100f592
 100f522:	mov    ecx,DWORD PTR [ebp-0xc]
 100f525:	mov    eax,0xc0000000
 100f52a:	and    ecx,eax
 100f52c:	cmp    ecx,eax
 100f52e:	jne    0x100f55b
 100f530:	test   BYTE PTR [ebp+0x10],0x1
 100f534:	je     0x100f55b
 100f536:	and    DWORD PTR [ebp-0xc],0x7fffffff
 100f53d:	push   0x0
 100f53f:	push   DWORD PTR [ebp-0x10]
 100f542:	lea    eax,[ebp-0x30]
 100f545:	push   DWORD PTR [ebp-0x18]
 100f548:	push   eax
 100f549:	push   DWORD PTR [ebp-0x14]
 100f54c:	push   DWORD PTR [ebp-0xc]
 100f54f:	push   DWORD PTR [ebp+0xc]
 100f552:	call   edi
 100f554:	mov    DWORD PTR [ebp-0x20],eax
 100f557:	cmp    eax,ebx
 100f559:	jne    0x100f592
 100f55b:	mov    esi,DWORD PTR [esi]
 100f55d:	mov    eax,esi
 100f55f:	sar    eax,0x5
 100f562:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100f569:	and    esi,0x1f
 100f56c:	shl    esi,0x6
 100f56f:	lea    eax,[eax+esi*1+0x4]
 100f573:	and    BYTE PTR [eax],0xfe
 100f576:	call   DWORD PTR ds:0x1001124
 100f57c:	push   eax
 100f57d:	call   0x100af59
 100f582:	pop    ecx
 100f583:	call   0x100af29
 100f588:	mov    eax,DWORD PTR [eax]
 100f58a:	mov    DWORD PTR [ebp-0x8],eax
 100f58d:	jmp    0x100f9f7
 100f592:	push   DWORD PTR [ebp-0x20]
 100f595:	call   DWORD PTR ds:0x100116c
 100f59b:	test   eax,eax
 100f59d:	jne    0x100f5e3
 100f59f:	mov    esi,DWORD PTR [esi]
 100f5a1:	mov    eax,esi
 100f5a3:	sar    eax,0x5
 100f5a6:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 100f5ad:	and    esi,0x1f
 100f5b0:	shl    esi,0x6
 100f5b3:	lea    eax,[eax+esi*1+0x4]
 100f5b7:	and    BYTE PTR [eax],0xfe
 100f5ba:	call   DWORD PTR ds:0x1001124
 100f5c0:	mov    esi,eax
 100f5c2:	push   esi
 100f5c3:	call   0x100af59
 100f5c8:	pop    ecx
 100f5c9:	push   DWORD PTR [ebp-0x20]
 100f5cc:	call   DWORD PTR ds:0x1001090
 100f5d2:	test   esi,esi
 100f5d4:	jne    0x100f583
 100f5d6:	call   0x100af29
 100f5db:	mov    DWORD PTR [eax],0xd
 100f5e1:	jmp    0x100f583
 100f5e3:	cmp    eax,0x2
 100f5e6:	jne    0x100f5ee
 100f5e8:	or     BYTE PTR [ebp-0x1],0x40
 100f5ec:	jmp    0x100f5f7
 100f5ee:	cmp    eax,0x3
 100f5f1:	jne    0x100f5f7
 100f5f3:	or     BYTE PTR [ebp-0x1],0x8
 100f5f7:	push   DWORD PTR [ebp-0x20]
 100f5fa:	push   DWORD PTR [esi]
 100f5fc:	call   0x100e9f7
 100f601:	mov    eax,DWORD PTR [esi]
 100f603:	mov    edx,eax
 100f605:	and    eax,0x1f
 100f608:	sar    edx,0x5
 100f60b:	mov    edx,DWORD PTR [edx*4+0x1015fe0]
 100f612:	pop    ecx
 100f613:	shl    eax,0x6
 100f616:	pop    ecx
 100f617:	mov    cl,BYTE PTR [ebp-0x1]
 100f61a:	or     cl,0x1
 100f61d:	mov    BYTE PTR [edx+eax*1+0x4],cl
 100f621:	mov    eax,DWORD PTR [esi]
 100f623:	mov    edx,eax
 100f625:	and    eax,0x1f
 100f628:	sar    edx,0x5
 100f62b:	mov    edx,DWORD PTR [edx*4+0x1015fe0]
 100f632:	shl    eax,0x6
 100f635:	lea    eax,[edx+eax*1+0x24]
 100f639:	and    BYTE PTR [eax],0x80
 100f63c:	mov    BYTE PTR [ebp-0x3],cl
 100f63f:	and    BYTE PTR [ebp-0x3],0x48
 100f643:	mov    BYTE PTR [ebp-0x1],cl
 100f646:	jne    0x100f6c6
 100f648:	test   cl,0x80
 100f64b:	je     0x100f8f8
 100f651:	test   BYTE PTR [ebp+0x10],0x2
 100f655:	je     0x100f6c6
 100f657:	push   0x2
 100f659:	push   ebx
 100f65a:	push   DWORD PTR [esi]
 100f65c:	call   0x1011558
 100f661:	mov    edi,eax
 100f663:	add    esp,0xc
 100f666:	cmp    edi,ebx
 100f668:	jne    0x100f683
 100f66a:	call   0x100af41
 100f66f:	cmp    DWORD PTR [eax],0x83
 100f675:	je     0x100f6c6
 100f677:	push   DWORD PTR [esi]
 100f679:	call   0x100afc0
 100f67e:	jmp    0x100f582
 100f683:	push   0x1
 100f685:	lea    eax,[ebp-0x4]
 100f688:	push   eax
 100f689:	push   DWORD PTR [esi]
 100f68b:	mov    BYTE PTR [ebp-0x4],0x0
 100f68f:	call   0x1010f9c
 100f694:	add    esp,0xc
 100f697:	test   eax,eax
 100f699:	jne    0x100f6b4
 100f69b:	cmp    BYTE PTR [ebp-0x4],0x1a
 100f69f:	jne    0x100f6b4
 100f6a1:	mov    eax,edi
 100f6a3:	cdq    
 100f6a4:	push   edx
 100f6a5:	push   eax
 100f6a6:	push   DWORD PTR [esi]
 100f6a8:	call   0x1010de1
 100f6ad:	add    esp,0xc
 100f6b0:	cmp    eax,ebx
 100f6b2:	je     0x100f677
 100f6b4:	push   0x0
 100f6b6:	push   0x0
 100f6b8:	push   DWORD PTR [esi]
 100f6ba:	call   0x1011558
 100f6bf:	add    esp,0xc
 100f6c2:	cmp    eax,ebx
 100f6c4:	je     0x100f677
 100f6c6:	test   BYTE PTR [ebp-0x1],0x80
 100f6ca:	je     0x100f8f8
 100f6d0:	mov    edi,0x74000
 100f6d5:	mov    ecx,0x4000
 100f6da:	test   DWORD PTR [ebp+0x10],edi
 100f6dd:	jne    0x100f6ee
 100f6df:	mov    eax,DWORD PTR [ebp-0x24]
 100f6e2:	and    eax,edi
 100f6e4:	jne    0x100f6eb
 100f6e6:	or     DWORD PTR [ebp+0x10],ecx
 100f6e9:	jmp    0x100f6ee
 100f6eb:	or     DWORD PTR [ebp+0x10],eax
 100f6ee:	mov    eax,DWORD PTR [ebp+0x10]
 100f6f1:	and    eax,edi
 100f6f3:	cmp    eax,ecx
 100f6f5:	je     0x100f73b
 100f6f7:	cmp    eax,0x10000
 100f6fc:	je     0x100f727
 100f6fe:	cmp    eax,0x14000
 100f703:	je     0x100f727
 100f705:	cmp    eax,0x20000
 100f70a:	je     0x100f735
 100f70c:	cmp    eax,0x24000
 100f711:	je     0x100f735
 100f713:	cmp    eax,0x40000
 100f718:	je     0x100f721
 100f71a:	cmp    eax,0x44000
 100f71f:	jne    0x100f73f
 100f721:	mov    BYTE PTR [ebp-0x2],0x1
 100f725:	jmp    0x100f73f
 100f727:	mov    ecx,DWORD PTR [ebp+0x10]
 100f72a:	mov    eax,0x301
 100f72f:	and    ecx,eax
 100f731:	cmp    ecx,eax
 100f733:	jne    0x100f73f
 100f735:	mov    BYTE PTR [ebp-0x2],0x2
 100f739:	jmp    0x100f73f
 100f73b:	mov    BYTE PTR [ebp-0x2],0x0
 100f73f:	test   DWORD PTR [ebp+0x10],0x70000
 100f746:	je     0x100f8f8
 100f74c:	xor    edi,edi
 100f74e:	test   BYTE PTR [ebp-0x1],0x40
 100f752:	mov    DWORD PTR [ebp-0x1c],edi
 100f755:	jne    0x100f8f8
 100f75b:	mov    eax,DWORD PTR [ebp-0xc]
 100f75e:	mov    ecx,0xc0000000
 100f763:	and    eax,ecx
 100f765:	cmp    eax,0x40000000
 100f76a:	je     0x100f820
 100f770:	cmp    eax,0x80000000
 100f775:	je     0x100f7e8
 100f777:	cmp    eax,ecx
 100f779:	jne    0x100f8f8
 100f77f:	mov    eax,DWORD PTR [ebp-0x18]
 100f782:	cmp    eax,edi
 100f784:	jbe    0x100f8f8
 100f78a:	cmp    eax,0x2
 100f78d:	jbe    0x100f79d
 100f78f:	cmp    eax,0x4
 100f792:	jbe    0x100f7bf
 100f794:	cmp    eax,0x5
 100f797:	jne    0x100f8f8
 100f79d:	movsx  eax,BYTE PTR [ebp-0x2]
 100f7a1:	xor    edi,edi
 100f7a3:	dec    eax
 100f7a4:	je     0x100f8c8
 100f7aa:	dec    eax
 100f7ab:	jne    0x100f8f8
 100f7b1:	mov    DWORD PTR [ebp-0x1c],0xfeff
 100f7b8:	push   0x2
 100f7ba:	jmp    0x100f8d1
 100f7bf:	push   0x2
 100f7c1:	push   edi
 100f7c2:	push   edi
 100f7c3:	push   DWORD PTR [esi]
 100f7c5:	call   0x100dd5d
 100f7ca:	add    esp,0x10
 100f7cd:	or     eax,edx
 100f7cf:	je     0x100f79d
 100f7d1:	push   edi
 100f7d2:	push   edi
 100f7d3:	push   edi
 100f7d4:	push   DWORD PTR [esi]
 100f7d6:	call   0x100dd5d
 100f7db:	and    eax,edx
 100f7dd:	add    esp,0x10
 100f7e0:	cmp    eax,ebx
 100f7e2:	je     0x100f677
 100f7e8:	push   0x3
 100f7ea:	lea    eax,[ebp-0x1c]
 100f7ed:	push   eax
 100f7ee:	push   DWORD PTR [esi]
 100f7f0:	call   0x1010f9c
 100f7f5:	add    esp,0xc
 100f7f8:	cmp    eax,ebx
 100f7fa:	je     0x100f677
 100f800:	cmp    eax,0x2
 100f803:	je     0x100f86f
 100f805:	cmp    eax,0x3
 100f808:	jne    0x100f8ba
 100f80e:	cmp    DWORD PTR [ebp-0x1c],0xbfbbef
 100f815:	jne    0x100f86f
 100f817:	mov    BYTE PTR [ebp-0x2],0x1
 100f81b:	jmp    0x100f8f8
 100f820:	mov    eax,DWORD PTR [ebp-0x18]
 100f823:	cmp    eax,edi
 100f825:	jbe    0x100f8f8
 100f82b:	cmp    eax,0x2
 100f82e:	jbe    0x100f79d
 100f834:	cmp    eax,0x4
 100f837:	ja     0x100f794
 100f83d:	push   0x2
 100f83f:	push   edi
 100f840:	push   edi
 100f841:	push   DWORD PTR [esi]
 100f843:	call   0x100dd5d
 100f848:	add    esp,0x10
 100f84b:	or     eax,edx
 100f84d:	je     0x100f79d
 100f853:	push   edi
 100f854:	push   edi
 100f855:	push   edi
 100f856:	push   DWORD PTR [esi]
 100f858:	call   0x100dd5d
 100f85d:	add    esp,0x10
 100f860:	and    eax,edx
 100f862:	cmp    eax,ebx
 100f864:	jne    0x100f8f8
 100f86a:	jmp    0x100f677
 100f86f:	mov    eax,DWORD PTR [ebp-0x1c]
 100f872:	and    eax,0xffff
 100f877:	cmp    eax,0xfffe
 100f87c:	jne    0x100f898
 100f87e:	push   DWORD PTR [esi]
 100f880:	call   0x100afc0
 100f885:	pop    ecx
 100f886:	call   0x100af29
 100f88b:	push   0x16
 100f88d:	pop    esi
 100f88e:	mov    DWORD PTR [eax],esi
 100f890:	mov    DWORD PTR [ebp-0x8],esi
 100f893:	jmp    0x100f9f7
 100f898:	cmp    eax,0xfeff
 100f89d:	jne    0x100f8ba
 100f89f:	push   edi
 100f8a0:	push   0x2
 100f8a2:	push   DWORD PTR [esi]
 100f8a4:	call   0x1011558
 100f8a9:	add    esp,0xc
 100f8ac:	cmp    eax,ebx
 100f8ae:	je     0x100f677
 100f8b4:	mov    BYTE PTR [ebp-0x2],0x2
 100f8b8:	jmp    0x100f8f8
 100f8ba:	push   edi
 100f8bb:	push   edi
 100f8bc:	push   DWORD PTR [esi]
 100f8be:	call   0x1011558
 100f8c3:	add    esp,0xc
 100f8c6:	jmp    0x100f862
 100f8c8:	mov    DWORD PTR [ebp-0x1c],0xbfbbef
 100f8cf:	push   0x3
 100f8d1:	pop    ebx
 100f8d2:	mov    eax,ebx
 100f8d4:	sub    eax,edi
 100f8d6:	push   eax
 100f8d7:	lea    eax,[ebp+edi*1-0x1c]
 100f8db:	push   eax
 100f8dc:	push   DWORD PTR [esi]
 100f8de:	call   0x100e5d8
 100f8e3:	add    esp,0xc
 100f8e6:	cmp    eax,0xffffffff
 100f8e9:	je     0x100f677
 100f8ef:	add    edi,eax
 100f8f1:	cmp    ebx,edi
 100f8f3:	jg     0x100f8d2
 100f8f5:	or     ebx,0xffffffff
 100f8f8:	mov    eax,DWORD PTR [esi]
 100f8fa:	mov    ecx,eax
 100f8fc:	sar    ecx,0x5
 100f8ff:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100f906:	and    eax,0x1f
 100f909:	shl    eax,0x6
 100f90c:	lea    eax,[ecx+eax*1+0x24]
 100f910:	mov    cl,BYTE PTR [eax]
 100f912:	xor    cl,BYTE PTR [ebp-0x2]
 100f915:	and    cl,0x7f
 100f918:	xor    BYTE PTR [eax],cl
 100f91a:	mov    eax,DWORD PTR [esi]
 100f91c:	mov    ecx,eax
 100f91e:	sar    ecx,0x5
 100f921:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100f928:	and    eax,0x1f
 100f92b:	shl    eax,0x6
 100f92e:	lea    eax,[ecx+eax*1+0x24]
 100f932:	mov    ecx,DWORD PTR [ebp+0x10]
 100f935:	mov    dl,BYTE PTR [eax]
 100f937:	shr    ecx,0x10
 100f93a:	shl    cl,0x7
 100f93d:	and    dl,0x7f
 100f940:	or     cl,dl
 100f942:	cmp    BYTE PTR [ebp-0x3],0x0
 100f946:	mov    BYTE PTR [eax],cl
 100f948:	jne    0x100f96b
 100f94a:	test   BYTE PTR [ebp+0x10],0x8
 100f94e:	je     0x100f96b
 100f950:	mov    eax,DWORD PTR [esi]
 100f952:	mov    ecx,eax
 100f954:	and    eax,0x1f
 100f957:	sar    ecx,0x5
 100f95a:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100f961:	shl    eax,0x6
 100f964:	lea    eax,[ecx+eax*1+0x4]
 100f968:	or     BYTE PTR [eax],0x20
 100f96b:	mov    ecx,DWORD PTR [ebp-0xc]
 100f96e:	mov    eax,0xc0000000
 100f973:	and    ecx,eax
 100f975:	cmp    ecx,eax
 100f977:	jne    0x100f9f7
 100f979:	test   BYTE PTR [ebp+0x10],0x1
 100f97d:	je     0x100f9f7
 100f97f:	push   DWORD PTR [ebp-0x20]
 100f982:	call   DWORD PTR ds:0x1001090
 100f988:	push   0x0
 100f98a:	push   DWORD PTR [ebp-0x10]
 100f98d:	lea    eax,[ebp-0x30]
 100f990:	push   0x3
 100f992:	push   eax
 100f993:	push   DWORD PTR [ebp-0x14]
 100f996:	mov    eax,DWORD PTR [ebp-0xc]
 100f999:	and    eax,0x7fffffff
 100f99e:	push   eax
 100f99f:	push   DWORD PTR [ebp+0xc]
 100f9a2:	call   DWORD PTR ds:0x100106c
 100f9a8:	cmp    eax,ebx
 100f9aa:	jne    0x100f9e0
 100f9ac:	call   DWORD PTR ds:0x1001124
 100f9b2:	push   eax
 100f9b3:	call   0x100af59
 100f9b8:	mov    eax,DWORD PTR [esi]
 100f9ba:	mov    ecx,eax
 100f9bc:	and    eax,0x1f
 100f9bf:	sar    ecx,0x5
 100f9c2:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100f9c9:	shl    eax,0x6
 100f9cc:	lea    eax,[ecx+eax*1+0x4]
 100f9d0:	and    BYTE PTR [eax],0xfe
 100f9d3:	push   DWORD PTR [esi]
 100f9d5:	call   0x100ea7d
 100f9da:	pop    ecx
 100f9db:	jmp    0x100f582
 100f9e0:	mov    esi,DWORD PTR [esi]
 100f9e2:	mov    ecx,esi
 100f9e4:	sar    ecx,0x5
 100f9e7:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100f9ee:	and    esi,0x1f
 100f9f1:	shl    esi,0x6
 100f9f4:	mov    DWORD PTR [esi+ecx*1],eax
 100f9f7:	mov    eax,DWORD PTR [ebp-0x8]
 100f9fa:	jmp    0x100f455
 100f9ff:	push   ebx
 100fa00:	push   ebx
 100fa01:	push   ebx
 100fa02:	push   ebx
 100fa03:	push   ebx
 100fa04:	call   0x100ae71
 100fa09:	int3   
 100fa0a:	int3   
 100fa0b:	int3   
 100fa0c:	int3   
 100fa0d:	int3   
 100fa0e:	int3   
 100fa0f:	push   0x14
 100fa11:	push   0x1011d80
 100fa16:	call   0x1009cd0
 100fa1b:	xor    edi,edi
 100fa1d:	mov    DWORD PTR [ebp-0x1c],edi
 100fa20:	xor    eax,eax
 100fa22:	mov    esi,DWORD PTR [ebp+0x18]
 100fa25:	cmp    esi,edi
 100fa27:	setne  al
 100fa2a:	cmp    eax,edi
 100fa2c:	jne    0x100fa41
 100fa2e:	call   0x100af29
 100fa33:	push   0x16
 100fa35:	pop    esi
 100fa36:	mov    DWORD PTR [eax],esi
 100fa38:	call   0x100aecd
 100fa3d:	mov    eax,esi
 100fa3f:	jmp    0x100fa9a
 100fa41:	or     DWORD PTR [esi],0xffffffff
 100fa44:	xor    eax,eax
 100fa46:	cmp    DWORD PTR [ebp+0x8],edi
 100fa49:	setne  al
 100fa4c:	cmp    eax,edi
 100fa4e:	je     0x100fa2e
 100fa50:	cmp    DWORD PTR [ebp+0x1c],edi
 100fa53:	je     0x100fa64
 100fa55:	mov    eax,DWORD PTR [ebp+0x14]
 100fa58:	and    eax,0xfffffe7f
 100fa5d:	neg    eax
 100fa5f:	sbb    eax,eax
 100fa61:	inc    eax
 100fa62:	je     0x100fa2e
 100fa64:	mov    DWORD PTR [ebp-0x4],edi
 100fa67:	push   DWORD PTR [ebp+0x14]
 100fa6a:	push   DWORD PTR [ebp+0x10]
 100fa6d:	push   DWORD PTR [ebp+0xc]
 100fa70:	push   DWORD PTR [ebp+0x8]
 100fa73:	lea    eax,[ebp-0x1c]
 100fa76:	push   eax
 100fa77:	mov    eax,esi
 100fa79:	call   0x100f2d6
 100fa7e:	add    esp,0x14
 100fa81:	mov    DWORD PTR [ebp-0x20],eax
 100fa84:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100fa8b:	call   0x100faa5
 100fa90:	mov    eax,DWORD PTR [ebp-0x20]
 100fa93:	cmp    eax,edi
 100fa95:	je     0x100fa9a
 100fa97:	or     DWORD PTR [esi],0xffffffff
 100fa9a:	call   0x1009d15
 100fa9f:	ret    
 100faa0:	xor    edi,edi
 100faa2:	mov    esi,DWORD PTR [ebp+0x18]
 100faa5:	cmp    DWORD PTR [ebp-0x1c],edi
 100faa8:	je     0x100fad2
 100faaa:	cmp    DWORD PTR [ebp-0x20],edi
 100faad:	je     0x100faca
 100faaf:	mov    eax,DWORD PTR [esi]
 100fab1:	mov    ecx,eax
 100fab3:	sar    ecx,0x5
 100fab6:	and    eax,0x1f
 100fab9:	shl    eax,0x6
 100fabc:	mov    ecx,DWORD PTR [ecx*4+0x1015fe0]
 100fac3:	lea    eax,[ecx+eax*1+0x4]
 100fac7:	and    BYTE PTR [eax],0xfe
 100faca:	push   DWORD PTR [esi]
 100facc:	call   0x100ec1a
 100fad1:	pop    ecx
 100fad2:	ret    
 100fad3:	int3   
 100fad4:	int3   
 100fad5:	int3   
 100fad6:	int3   
 100fad7:	int3   
 100fad8:	mov    edi,edi
 100fada:	push   ebp
 100fadb:	mov    ebp,esp
 100fadd:	push   0x1
 100fadf:	push   DWORD PTR [ebp+0x8]
 100fae2:	push   DWORD PTR [ebp+0x18]
 100fae5:	push   DWORD PTR [ebp+0x14]
 100fae8:	push   DWORD PTR [ebp+0x10]
 100faeb:	push   DWORD PTR [ebp+0xc]
 100faee:	call   0x100fa0f
 100faf3:	add    esp,0x18
 100faf6:	pop    ebp
 100faf7:	ret    
 100faf8:	int3   
 100faf9:	int3   
 100fafa:	int3   
 100fafb:	int3   
 100fafc:	int3   
 100fafd:	mov    edi,edi
 100faff:	push   ebp
 100fb00:	mov    ebp,esp
 100fb02:	sub    esp,0x18
 100fb05:	push   ebx
 100fb06:	push   DWORD PTR [ebp+0x14]
 100fb09:	lea    ecx,[ebp-0x18]
 100fb0c:	call   0x10086a4
 100fb11:	xor    ebx,ebx
 100fb13:	cmp    DWORD PTR [ebp+0x10],ebx
 100fb16:	jne    0x100fb2b
 100fb18:	cmp    BYTE PTR [ebp-0xc],bl
 100fb1b:	je     0x100fb24
 100fb1d:	mov    eax,DWORD PTR [ebp-0x10]
 100fb20:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fb24:	xor    eax,eax
 100fb26:	jmp    0x100fcea
 100fb2b:	mov    eax,DWORD PTR [ebp-0x14]
 100fb2e:	cmp    DWORD PTR [eax+0x8],ebx
 100fb31:	jne    0x100fb59
 100fb33:	push   DWORD PTR [ebp+0x10]
 100fb36:	push   DWORD PTR [ebp+0xc]
 100fb39:	push   DWORD PTR [ebp+0x8]
 100fb3c:	call   0x10117ab
 100fb41:	add    esp,0xc
 100fb44:	cmp    BYTE PTR [ebp-0xc],bl
 100fb47:	je     0x100fcea
 100fb4d:	mov    ecx,DWORD PTR [ebp-0x10]
 100fb50:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100fb54:	jmp    0x100fcea
 100fb59:	cmp    DWORD PTR [ebp+0x8],ebx
 100fb5c:	jne    0x100fb84
 100fb5e:	call   0x100af29
 100fb63:	mov    DWORD PTR [eax],0x16
 100fb69:	call   0x100aecd
 100fb6e:	cmp    BYTE PTR [ebp-0xc],bl
 100fb71:	je     0x100fb7a
 100fb73:	mov    eax,DWORD PTR [ebp-0x10]
 100fb76:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fb7a:	mov    eax,0x7fffffff
 100fb7f:	jmp    0x100fcea
 100fb84:	push   edi
 100fb85:	mov    edi,DWORD PTR [ebp+0xc]
 100fb88:	cmp    edi,ebx
 100fb8a:	jne    0x100fbb2
 100fb8c:	call   0x100af29
 100fb91:	mov    DWORD PTR [eax],0x16
 100fb97:	call   0x100aecd
 100fb9c:	cmp    BYTE PTR [ebp-0xc],bl
 100fb9f:	je     0x100fba8
 100fba1:	mov    eax,DWORD PTR [ebp-0x10]
 100fba4:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fba8:	mov    eax,0x7fffffff
 100fbad:	jmp    0x100fce9
 100fbb2:	push   esi
 100fbb3:	mov    ecx,DWORD PTR [ebp+0x8]
 100fbb6:	movzx  ecx,BYTE PTR [ecx]
 100fbb9:	dec    DWORD PTR [ebp+0x10]
 100fbbc:	inc    DWORD PTR [ebp+0x8]
 100fbbf:	movzx  edx,cl
 100fbc2:	test   BYTE PTR [edx+eax*1+0x1d],0x4
 100fbc7:	mov    DWORD PTR [ebp-0x8],ecx
 100fbca:	je     0x100fc31
 100fbcc:	cmp    DWORD PTR [ebp+0x10],ebx
 100fbcf:	jne    0x100fbea
 100fbd1:	movzx  ecx,BYTE PTR [edi]
 100fbd4:	test   BYTE PTR [ecx+eax*1+0x1d],0x4
 100fbd9:	mov    DWORD PTR [ebp-0x8],ebx
 100fbdc:	jne    0x100fcda
 100fbe2:	mov    si,bx
 100fbe5:	jmp    0x100fcc0
 100fbea:	mov    edx,DWORD PTR [ebp+0x8]
 100fbed:	mov    dl,BYTE PTR [edx]
 100fbef:	cmp    dl,bl
 100fbf1:	jne    0x100fbf8
 100fbf3:	mov    DWORD PTR [ebp-0x8],ebx
 100fbf6:	jmp    0x100fc4c
 100fbf8:	shl    ecx,0x8
 100fbfb:	movzx  edx,dl
 100fbfe:	or     cx,dx
 100fc01:	inc    DWORD PTR [ebp+0x8]
 100fc04:	movzx  ecx,cx
 100fc07:	mov    si,cx
 100fc0a:	mov    DWORD PTR [ebp-0x8],ecx
 100fc0d:	cmp    si,WORD PTR [eax+0x10]
 100fc11:	jb     0x100fc1f
 100fc13:	cmp    si,WORD PTR [eax+0x12]
 100fc17:	ja     0x100fc1f
 100fc19:	add    si,WORD PTR [eax+0x14]
 100fc1d:	jmp    0x100fc50
 100fc1f:	cmp    si,WORD PTR [eax+0x16]
 100fc23:	jb     0x100fc50
 100fc25:	cmp    si,WORD PTR [eax+0x18]
 100fc29:	ja     0x100fc50
 100fc2b:	add    si,WORD PTR [eax+0x1a]
 100fc2f:	jmp    0x100fc50
 100fc31:	movzx  edx,WORD PTR [ebp-0x8]
 100fc35:	lea    ecx,[edx+eax*1]
 100fc38:	test   BYTE PTR [ecx+0x1d],0x10
 100fc3c:	je     0x100fc47
 100fc3e:	movzx  ecx,BYTE PTR [ecx+0x11d]
 100fc45:	jmp    0x100fc49
 100fc47:	mov    ecx,edx
 100fc49:	mov    DWORD PTR [ebp-0x8],ecx
 100fc4c:	mov    si,WORD PTR [ebp-0x8]
 100fc50:	movzx  ecx,BYTE PTR [edi]
 100fc53:	movzx  edx,cl
 100fc56:	inc    edi
 100fc57:	test   BYTE PTR [edx+eax*1+0x1d],0x4
 100fc5c:	mov    DWORD PTR [ebp-0x4],ecx
 100fc5f:	je     0x100fca8
 100fc61:	cmp    DWORD PTR [ebp+0x10],ebx
 100fc64:	jne    0x100fc6b
 100fc66:	mov    DWORD PTR [ebp-0x4],ebx
 100fc69:	jmp    0x100fcc3
 100fc6b:	mov    dl,BYTE PTR [edi]
 100fc6d:	dec    DWORD PTR [ebp+0x10]
 100fc70:	cmp    dl,bl
 100fc72:	je     0x100fc66
 100fc74:	shl    ecx,0x8
 100fc77:	movzx  edx,dl
 100fc7a:	or     cx,dx
 100fc7d:	movzx  ecx,cx
 100fc80:	inc    edi
 100fc81:	mov    DWORD PTR [ebp-0x4],ecx
 100fc84:	cmp    cx,WORD PTR [eax+0x10]
 100fc88:	jb     0x100fc96
 100fc8a:	cmp    cx,WORD PTR [eax+0x12]
 100fc8e:	ja     0x100fc96
 100fc90:	add    cx,WORD PTR [eax+0x14]
 100fc94:	jmp    0x100fcc7
 100fc96:	cmp    cx,WORD PTR [eax+0x16]
 100fc9a:	jb     0x100fcc7
 100fc9c:	cmp    cx,WORD PTR [eax+0x18]
 100fca0:	ja     0x100fcc7
 100fca2:	add    cx,WORD PTR [eax+0x1a]
 100fca6:	jmp    0x100fcc7
 100fca8:	movzx  edx,WORD PTR [ebp-0x4]
 100fcac:	lea    ecx,[edx+eax*1]
 100fcaf:	test   BYTE PTR [ecx+0x1d],0x10
 100fcb3:	je     0x100fcbe
 100fcb5:	movzx  ecx,BYTE PTR [ecx+0x11d]
 100fcbc:	jmp    0x100fcc0
 100fcbe:	mov    ecx,edx
 100fcc0:	mov    DWORD PTR [ebp-0x4],ecx
 100fcc3:	mov    cx,WORD PTR [ebp-0x4]
 100fcc7:	cmp    cx,si
 100fcca:	jne    0x100fced
 100fccc:	cmp    si,bx
 100fccf:	je     0x100fcda
 100fcd1:	cmp    DWORD PTR [ebp+0x10],ebx
 100fcd4:	jne    0x100fbb3
 100fcda:	cmp    BYTE PTR [ebp-0xc],bl
 100fcdd:	je     0x100fce6
 100fcdf:	mov    eax,DWORD PTR [ebp-0x10]
 100fce2:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fce6:	xor    eax,eax
 100fce8:	pop    esi
 100fce9:	pop    edi
 100fcea:	pop    ebx
 100fceb:	leave  
 100fcec:	ret    
 100fced:	sbb    eax,eax
 100fcef:	and    eax,0x2
 100fcf2:	dec    eax
 100fcf3:	cmp    BYTE PTR [ebp-0xc],bl
 100fcf6:	je     0x100fce8
 100fcf8:	mov    ecx,DWORD PTR [ebp-0x10]
 100fcfb:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100fcff:	jmp    0x100fce8
 100fd01:	int3   
 100fd02:	int3   
 100fd03:	int3   
 100fd04:	int3   
 100fd05:	int3   
 100fd06:	mov    edi,edi
 100fd08:	push   ebp
 100fd09:	mov    ebp,esp
 100fd0b:	push   0x0
 100fd0d:	push   DWORD PTR [ebp+0x10]
 100fd10:	push   DWORD PTR [ebp+0xc]
 100fd13:	push   DWORD PTR [ebp+0x8]
 100fd16:	call   0x100fafd
 100fd1b:	add    esp,0x10
 100fd1e:	pop    ebp
 100fd1f:	ret    
 100fd20:	int3   
 100fd21:	int3   
 100fd22:	int3   
 100fd23:	int3   
 100fd24:	int3   
 100fd25:	mov    edi,edi
 100fd27:	push   ebp
 100fd28:	mov    ebp,esp
 100fd2a:	sub    esp,0x10
 100fd2d:	cmp    DWORD PTR [ebp+0x10],0x0
 100fd31:	jne    0x100fd37
 100fd33:	xor    eax,eax
 100fd35:	leave  
 100fd36:	ret    
 100fd37:	push   edi
 100fd38:	push   DWORD PTR [ebp+0x14]
 100fd3b:	lea    ecx,[ebp-0x10]
 100fd3e:	call   0x10086a4
 100fd43:	mov    edi,DWORD PTR [ebp-0xc]
 100fd46:	cmp    DWORD PTR [edi+0x8],0x0
 100fd4a:	jne    0x100fd73
 100fd4c:	push   DWORD PTR [ebp+0x10]
 100fd4f:	push   DWORD PTR [ebp+0xc]
 100fd52:	push   DWORD PTR [ebp+0x8]
 100fd55:	call   0x10107cb
 100fd5a:	add    esp,0xc
 100fd5d:	cmp    BYTE PTR [ebp-0x4],0x0
 100fd61:	je     0x100fdfe
 100fd67:	mov    ecx,DWORD PTR [ebp-0x8]
 100fd6a:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100fd6e:	jmp    0x100fdfe
 100fd73:	push   ebx
 100fd74:	mov    ebx,DWORD PTR [ebp+0x8]
 100fd77:	test   ebx,ebx
 100fd79:	jne    0x100fd9e
 100fd7b:	call   0x100af29
 100fd80:	mov    DWORD PTR [eax],0x16
 100fd86:	call   0x100aecd
 100fd8b:	cmp    BYTE PTR [ebp-0x4],bl
 100fd8e:	je     0x100fd97
 100fd90:	mov    eax,DWORD PTR [ebp-0x8]
 100fd93:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fd97:	mov    eax,0x7fffffff
 100fd9c:	jmp    0x100fdfd
 100fd9e:	push   esi
 100fd9f:	mov    esi,DWORD PTR [ebp+0xc]
 100fda2:	test   esi,esi
 100fda4:	jne    0x100fdca
 100fda6:	call   0x100af29
 100fdab:	mov    DWORD PTR [eax],0x16
 100fdb1:	call   0x100aecd
 100fdb6:	cmp    BYTE PTR [ebp-0x4],0x0
 100fdba:	je     0x100fdc3
 100fdbc:	mov    eax,DWORD PTR [ebp-0x8]
 100fdbf:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fdc3:	mov    eax,0x7fffffff
 100fdc8:	jmp    0x100fdfc
 100fdca:	movzx  ecx,BYTE PTR [ebx]
 100fdcd:	dec    DWORD PTR [ebp+0x10]
 100fdd0:	movzx  eax,cl
 100fdd3:	inc    ebx
 100fdd4:	test   BYTE PTR [eax+edi*1+0x1d],0x4
 100fdd9:	je     0x100fe18
 100fddb:	cmp    DWORD PTR [ebp+0x10],0x0
 100fddf:	jne    0x100fe01
 100fde1:	movzx  eax,BYTE PTR [esi]
 100fde4:	xor    ecx,ecx
 100fde6:	test   BYTE PTR [eax+edi*1+0x1d],0x4
 100fdeb:	je     0x100fe46
 100fded:	cmp    BYTE PTR [ebp-0x4],0x0
 100fdf1:	je     0x100fdfa
 100fdf3:	mov    eax,DWORD PTR [ebp-0x8]
 100fdf6:	and    DWORD PTR [eax+0x70],0xfffffffd
 100fdfa:	xor    eax,eax
 100fdfc:	pop    esi
 100fdfd:	pop    ebx
 100fdfe:	pop    edi
 100fdff:	leave  
 100fe00:	ret    
 100fe01:	mov    al,BYTE PTR [ebx]
 100fe03:	test   al,al
 100fe05:	jne    0x100fe0b
 100fe07:	xor    ecx,ecx
 100fe09:	jmp    0x100fe18
 100fe0b:	shl    ecx,0x8
 100fe0e:	movzx  eax,al
 100fe11:	or     cx,ax
 100fe14:	movzx  ecx,cx
 100fe17:	inc    ebx
 100fe18:	movzx  eax,BYTE PTR [esi]
 100fe1b:	movzx  edx,al
 100fe1e:	inc    esi
 100fe1f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
 100fe24:	je     0x100fe46
 100fe26:	cmp    DWORD PTR [ebp+0x10],0x0
 100fe2a:	jne    0x100fe30
 100fe2c:	xor    eax,eax
 100fe2e:	jmp    0x100fe46
 100fe30:	mov    dl,BYTE PTR [esi]
 100fe32:	dec    DWORD PTR [ebp+0x10]
 100fe35:	test   dl,dl
 100fe37:	je     0x100fe2c
 100fe39:	shl    eax,0x8
 100fe3c:	movzx  edx,dl
 100fe3f:	or     ax,dx
 100fe42:	movzx  eax,ax
 100fe45:	inc    esi
 100fe46:	cmp    ax,cx
 100fe49:	jne    0x100fe5c
 100fe4b:	test   cx,cx
 100fe4e:	je     0x100fded
 100fe50:	cmp    DWORD PTR [ebp+0x10],0x0
 100fe54:	jne    0x100fdca
 100fe5a:	jmp    0x100fded
 100fe5c:	sbb    eax,eax
 100fe5e:	and    eax,0x2
 100fe61:	dec    eax
 100fe62:	cmp    BYTE PTR [ebp-0x4],0x0
 100fe66:	je     0x100fdfc
 100fe68:	mov    ecx,DWORD PTR [ebp-0x8]
 100fe6b:	and    DWORD PTR [ecx+0x70],0xfffffffd
 100fe6f:	jmp    0x100fdfc
 100fe71:	int3   
 100fe72:	int3   
 100fe73:	int3   
 100fe74:	int3   
 100fe75:	int3   
 100fe76:	mov    edi,edi
 100fe78:	push   ebp
 100fe79:	mov    ebp,esp
 100fe7b:	push   0x0
 100fe7d:	push   DWORD PTR [ebp+0x10]
 100fe80:	push   DWORD PTR [ebp+0xc]
 100fe83:	push   DWORD PTR [ebp+0x8]
 100fe86:	call   0x100fd25
 100fe8b:	add    esp,0x10
 100fe8e:	pop    ebp
 100fe8f:	ret    
 100fe90:	int3   
 100fe91:	int3   
 100fe92:	int3   
 100fe93:	int3   
 100fe94:	int3   
 100fe95:	int3   
 100fe96:	int3   
 100fe97:	int3   
 100fe98:	int3   
 100fe99:	int3   
 100fe9a:	int3   
 100fe9b:	int3   
 100fe9c:	int3   
 100fe9d:	int3   
 100fe9e:	int3   
 100fe9f:	int3   
 100fea0:	push   ebp
 100fea1:	mov    ebp,esp
 100fea3:	push   ebx
 100fea4:	push   esi
 100fea5:	push   edi
 100fea6:	push   ebp
 100fea7:	push   0x0
 100fea9:	push   0x0
 100feab:	push   0x100feb8
 100feb0:	push   DWORD PTR [ebp+0x8]
 100feb3:	call   0x10119ea
 100feb8:	pop    ebp
 100feb9:	pop    edi
 100feba:	pop    esi
 100febb:	pop    ebx
 100febc:	mov    esp,ebp
 100febe:	pop    ebp
 100febf:	ret    
 100fec0:	mov    ecx,DWORD PTR [esp+0x4]
 100fec4:	test   DWORD PTR [ecx+0x4],0x6
 100fecb:	mov    eax,0x1
 100fed0:	je     0x100ff04
 100fed2:	mov    eax,DWORD PTR [esp+0x14]
 100fed6:	mov    ecx,DWORD PTR [eax-0x4]
 100fed9:	xor    ecx,eax
 100fedb:	call   0x1008355
 100fee0:	push   ebp
 100fee1:	mov    ebp,DWORD PTR [eax+0x10]
 100fee4:	mov    edx,DWORD PTR [eax+0x28]
 100fee7:	push   edx
 100fee8:	mov    edx,DWORD PTR [eax+0x24]
 100feeb:	push   edx
 100feec:	call   0x100ff05
 100fef1:	add    esp,0x8
 100fef4:	pop    ebp
 100fef5:	mov    eax,DWORD PTR [esp+0x8]
 100fef9:	mov    edx,DWORD PTR [esp+0x10]
 100fefd:	mov    DWORD PTR [edx],eax
 100feff:	mov    eax,0x3
 100ff04:	ret    
 100ff05:	push   ebx
 100ff06:	push   esi
 100ff07:	push   edi
 100ff08:	mov    eax,DWORD PTR [esp+0x10]
 100ff0c:	push   ebp
 100ff0d:	push   eax
 100ff0e:	push   0xfffffffe
 100ff10:	push   0x100fec0
 100ff15:	push   DWORD PTR fs:0x0
 100ff1c:	mov    eax,ds:0x1013054
 100ff21:	xor    eax,esp
 100ff23:	push   eax
 100ff24:	lea    eax,[esp+0x4]
 100ff28:	mov    fs:0x0,eax
 100ff2e:	mov    eax,DWORD PTR [esp+0x28]
 100ff32:	mov    ebx,DWORD PTR [eax+0x8]
 100ff35:	mov    esi,DWORD PTR [eax+0xc]
 100ff38:	cmp    esi,0xffffffff
 100ff3b:	je     0x100ff77
 100ff3d:	cmp    DWORD PTR [esp+0x2c],0xffffffff
 100ff42:	je     0x100ff4a
 100ff44:	cmp    esi,DWORD PTR [esp+0x2c]
 100ff48:	jbe    0x100ff77
 100ff4a:	lea    esi,[esi+esi*2]
 100ff4d:	mov    ecx,DWORD PTR [ebx+esi*4]
 100ff50:	mov    DWORD PTR [esp+0xc],ecx
 100ff54:	mov    DWORD PTR [eax+0xc],ecx
 100ff57:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
 100ff5c:	jne    0x100ff75
 100ff5e:	push   0x101
 100ff63:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
 100ff67:	call   0x100ffb5
 100ff6c:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
 100ff70:	call   0x100ffd4
 100ff75:	jmp    0x100ff2e
 100ff77:	mov    ecx,DWORD PTR [esp+0x4]
 100ff7b:	mov    DWORD PTR fs:0x0,ecx
 100ff82:	add    esp,0x18
 100ff85:	pop    edi
 100ff86:	pop    esi
 100ff87:	pop    ebx
 100ff88:	ret    
 100ff89:	xor    eax,eax
 100ff8b:	mov    ecx,DWORD PTR fs:0x0
 100ff92:	cmp    DWORD PTR [ecx+0x4],0x100fec0
 100ff99:	jne    0x100ffab
 100ff9b:	mov    edx,DWORD PTR [ecx+0xc]
 100ff9e:	mov    edx,DWORD PTR [edx+0xc]
 100ffa1:	cmp    DWORD PTR [ecx+0x8],edx
 100ffa4:	jne    0x100ffab
 100ffa6:	mov    eax,0x1
 100ffab:	ret    
 100ffac:	push   ebx
 100ffad:	push   ecx
 100ffae:	mov    ebx,0x1013dd0
 100ffb3:	jmp    0x100ffc0
 100ffb5:	push   ebx
 100ffb6:	push   ecx
 100ffb7:	mov    ebx,0x1013dd0
 100ffbc:	mov    ecx,DWORD PTR [esp+0xc]
 100ffc0:	mov    DWORD PTR [ebx+0x8],ecx
 100ffc3:	mov    DWORD PTR [ebx+0x4],eax
 100ffc6:	mov    DWORD PTR [ebx+0xc],ebp
 100ffc9:	push   ebp
 100ffca:	push   ecx
 100ffcb:	push   eax
 100ffcc:	pop    eax
 100ffcd:	pop    ecx
 100ffce:	pop    ebp
 100ffcf:	pop    ecx
 100ffd0:	pop    ebx
 100ffd1:	ret    0x4
 100ffd4:	call   eax
 100ffd6:	ret    
 100ffd7:	int3   
 100ffd8:	int3   
 100ffd9:	int3   
 100ffda:	int3   
 100ffdb:	int3   
 100ffdc:	int3   
 100ffdd:	push   0xc
 100ffdf:	push   0x1011da0
 100ffe4:	call   0x1009cd0
 100ffe9:	push   0xe
 100ffeb:	call   0x100d473
 100fff0:	pop    ecx
 100fff1:	and    DWORD PTR [ebp-0x4],0x0
 100fff5:	mov    esi,DWORD PTR [ebp+0x8]
 100fff8:	mov    ecx,DWORD PTR [esi+0x4]
 100fffb:	test   ecx,ecx
 100fffd:	je     0x101002e
 100ffff:	mov    eax,ds:0x1014f60
 1010004:	mov    edx,0x1014f5c
 1010009:	mov    DWORD PTR [ebp-0x1c],eax
 101000c:	test   eax,eax
 101000e:	je     0x1010021
 1010010:	cmp    DWORD PTR [eax],ecx
 1010012:	jne    0x1010040
 1010014:	mov    ecx,DWORD PTR [eax+0x4]
 1010017:	mov    DWORD PTR [edx+0x4],ecx
 101001a:	push   eax
 101001b:	call   0x100af81
 1010020:	pop    ecx
 1010021:	push   DWORD PTR [esi+0x4]
 1010024:	call   0x100af81
 1010029:	pop    ecx
 101002a:	and    DWORD PTR [esi+0x4],0x0
 101002e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1010035:	call   0x1010044
 101003a:	call   0x1009d15
 101003f:	ret    
 1010040:	mov    edx,eax
 1010042:	jmp    0x1010009
 1010044:	push   0xe
 1010046:	call   0x100d390
 101004b:	pop    ecx
 101004c:	ret    
 101004d:	int3   
 101004e:	int3   
 101004f:	int3   
 1010050:	int3   
 1010051:	int3   
 1010052:	int3   
 1010053:	int3   
 1010054:	int3   
 1010055:	int3   
 1010056:	int3   
 1010057:	int3   
 1010058:	int3   
 1010059:	int3   
 101005a:	int3   
 101005b:	int3   
 101005c:	int3   
 101005d:	int3   
 101005e:	int3   
 101005f:	int3   
 1010060:	mov    edx,DWORD PTR [esp+0x4]
 1010064:	mov    ecx,DWORD PTR [esp+0x8]
 1010068:	test   edx,0x3
 101006e:	jne    0x10100ac
 1010070:	mov    eax,DWORD PTR [edx]
 1010072:	cmp    al,BYTE PTR [ecx]
 1010074:	jne    0x10100a4
 1010076:	or     al,al
 1010078:	je     0x10100a0
 101007a:	cmp    ah,BYTE PTR [ecx+0x1]
 101007d:	jne    0x10100a4
 101007f:	or     ah,ah
 1010081:	je     0x10100a0
 1010083:	shr    eax,0x10
 1010086:	cmp    al,BYTE PTR [ecx+0x2]
 1010089:	jne    0x10100a4
 101008b:	or     al,al
 101008d:	je     0x10100a0
 101008f:	cmp    ah,BYTE PTR [ecx+0x3]
 1010092:	jne    0x10100a4
 1010094:	add    ecx,0x4
 1010097:	add    edx,0x4
 101009a:	or     ah,ah
 101009c:	jne    0x1010070
 101009e:	mov    edi,edi
 10100a0:	xor    eax,eax
 10100a2:	ret    
 10100a3:	nop
 10100a4:	sbb    eax,eax
 10100a6:	shl    eax,1
 10100a8:	add    eax,0x1
 10100ab:	ret    
 10100ac:	test   edx,0x1
 10100b2:	je     0x10100cc
 10100b4:	mov    al,BYTE PTR [edx]
 10100b6:	add    edx,0x1
 10100b9:	cmp    al,BYTE PTR [ecx]
 10100bb:	jne    0x10100a4
 10100bd:	add    ecx,0x1
 10100c0:	or     al,al
 10100c2:	je     0x10100a0
 10100c4:	test   edx,0x2
 10100ca:	je     0x1010070
 10100cc:	mov    ax,WORD PTR [edx]
 10100cf:	add    edx,0x2
 10100d2:	cmp    al,BYTE PTR [ecx]
 10100d4:	jne    0x10100a4
 10100d6:	or     al,al
 10100d8:	je     0x10100a0
 10100da:	cmp    ah,BYTE PTR [ecx+0x1]
 10100dd:	jne    0x10100a4
 10100df:	or     ah,ah
 10100e1:	je     0x10100a0
 10100e3:	add    ecx,0x2
 10100e6:	jmp    0x1010070
 10100e8:	int3   
 10100e9:	int3   
 10100ea:	int3   
 10100eb:	int3   
 10100ec:	int3   
 10100ed:	mov    edi,edi
 10100ef:	push   ebp
 10100f0:	mov    ebp,esp
 10100f2:	cmp    DWORD PTR [ebp+0x8],0x0
 10100f6:	jne    0x101010d
 10100f8:	call   0x100af29
 10100fd:	mov    DWORD PTR [eax],0x16
 1010103:	call   0x100aecd
 1010108:	or     eax,0xffffffff
 101010b:	pop    ebp
 101010c:	ret    
 101010d:	push   DWORD PTR [ebp+0x8]
 1010110:	push   0x0
 1010112:	push   DWORD PTR ds:0x1014a68
 1010118:	call   DWORD PTR ds:0x10010c8
 101011e:	pop    ebp
 101011f:	ret    
 1010120:	int3   
 1010121:	int3   
 1010122:	int3   
 1010123:	int3   
 1010124:	int3   
 1010125:	mov    edi,edi
 1010127:	push   ebp
 1010128:	mov    ebp,esp
 101012a:	push   ecx
 101012b:	push   ecx
 101012c:	mov    eax,ds:0x1013054
 1010131:	xor    eax,ebp
 1010133:	mov    DWORD PTR [ebp-0x4],eax
 1010136:	push   ebx
 1010137:	xor    ebx,ebx
 1010139:	push   esi
 101013a:	push   edi
 101013b:	mov    DWORD PTR [ebp-0x8],ebx
 101013e:	cmp    DWORD PTR [ebp+0x1c],ebx
 1010141:	jne    0x101014e
 1010143:	mov    eax,DWORD PTR [ebp+0x8]
 1010146:	mov    eax,DWORD PTR [eax]
 1010148:	mov    eax,DWORD PTR [eax+0x4]
 101014b:	mov    DWORD PTR [ebp+0x1c],eax
 101014e:	mov    esi,DWORD PTR ds:0x10010e8
 1010154:	xor    eax,eax
 1010156:	cmp    DWORD PTR [ebp+0x20],ebx
 1010159:	push   ebx
 101015a:	push   ebx
 101015b:	push   DWORD PTR [ebp+0x14]
 101015e:	setne  al
 1010161:	push   DWORD PTR [ebp+0x10]
 1010164:	lea    eax,[eax*8+0x1]
 101016b:	push   eax
 101016c:	push   DWORD PTR [ebp+0x1c]
 101016f:	call   esi
 1010171:	mov    edi,eax
 1010173:	cmp    edi,ebx
 1010175:	jne    0x101017b
 1010177:	xor    eax,eax
 1010179:	jmp    0x10101fa
 101017b:	jle    0x10101b9
 101017d:	cmp    edi,0x7ffffff0
 1010183:	ja     0x10101b9
 1010185:	lea    eax,[edi+edi*1+0x8]
 1010189:	cmp    eax,0x400
 101018e:	ja     0x10101a3
 1010190:	call   0x100d000
 1010195:	mov    eax,esp
 1010197:	cmp    eax,ebx
 1010199:	je     0x10101b7
 101019b:	mov    DWORD PTR [eax],0xcccc
 10101a1:	jmp    0x10101b4
 10101a3:	push   eax
 10101a4:	call   0x100c0d7
 10101a9:	pop    ecx
 10101aa:	cmp    eax,ebx
 10101ac:	je     0x10101b7
 10101ae:	mov    DWORD PTR [eax],0xdddd
 10101b4:	add    eax,0x8
 10101b7:	mov    ebx,eax
 10101b9:	test   ebx,ebx
 10101bb:	je     0x1010177
 10101bd:	lea    eax,[edi+edi*1]
 10101c0:	push   eax
 10101c1:	push   0x0
 10101c3:	push   ebx
 10101c4:	call   0x1008600
 10101c9:	add    esp,0xc
 10101cc:	push   edi
 10101cd:	push   ebx
 10101ce:	push   DWORD PTR [ebp+0x14]
 10101d1:	push   DWORD PTR [ebp+0x10]
 10101d4:	push   0x1
 10101d6:	push   DWORD PTR [ebp+0x1c]
 10101d9:	call   esi
 10101db:	test   eax,eax
 10101dd:	je     0x10101f0
 10101df:	push   DWORD PTR [ebp+0x18]
 10101e2:	push   eax
 10101e3:	push   ebx
 10101e4:	push   DWORD PTR [ebp+0xc]
 10101e7:	call   DWORD PTR ds:0x10010c4
 10101ed:	mov    DWORD PTR [ebp-0x8],eax
 10101f0:	push   ebx
 10101f1:	call   0x100867f
 10101f6:	mov    eax,DWORD PTR [ebp-0x8]
 10101f9:	pop    ecx
 10101fa:	lea    esp,[ebp-0x14]
 10101fd:	pop    edi
 10101fe:	pop    esi
 10101ff:	pop    ebx
 1010200:	mov    ecx,DWORD PTR [ebp-0x4]
 1010203:	xor    ecx,ebp
 1010205:	call   0x1008355
 101020a:	leave  
 101020b:	ret    
 101020c:	int3   
 101020d:	int3   
 101020e:	int3   
 101020f:	int3   
 1010210:	int3   
 1010211:	mov    edi,edi
 1010213:	push   ebp
 1010214:	mov    ebp,esp
 1010216:	sub    esp,0x10
 1010219:	push   DWORD PTR [ebp+0x8]
 101021c:	lea    ecx,[ebp-0x10]
 101021f:	call   0x10086a4
 1010224:	push   DWORD PTR [ebp+0x24]
 1010227:	lea    eax,[ebp-0x10]
 101022a:	push   DWORD PTR [ebp+0x1c]
 101022d:	push   DWORD PTR [ebp+0x18]
 1010230:	push   DWORD PTR [ebp+0x14]
 1010233:	push   DWORD PTR [ebp+0x10]
 1010236:	push   DWORD PTR [ebp+0xc]
 1010239:	push   eax
 101023a:	call   0x1010125
 101023f:	add    esp,0x1c
 1010242:	cmp    BYTE PTR [ebp-0x4],0x0
 1010246:	je     0x101024f
 1010248:	mov    ecx,DWORD PTR [ebp-0x8]
 101024b:	and    DWORD PTR [ecx+0x70],0xfffffffd
 101024f:	leave  
 1010250:	ret    
 1010251:	int3   
 1010252:	int3   
 1010253:	int3   
 1010254:	int3   
 1010255:	int3   
 1010256:	mov    edi,edi
 1010258:	push   ebp
 1010259:	mov    ebp,esp
 101025b:	push   esi
 101025c:	mov    esi,DWORD PTR [ebp+0x8]
 101025f:	test   esi,esi
 1010261:	je     0x10105ca
 1010267:	push   DWORD PTR [esi+0x4]
 101026a:	call   0x100af81
 101026f:	push   DWORD PTR [esi+0x8]
 1010272:	call   0x100af81
 1010277:	push   DWORD PTR [esi+0xc]
 101027a:	call   0x100af81
 101027f:	push   DWORD PTR [esi+0x10]
 1010282:	call   0x100af81
 1010287:	push   DWORD PTR [esi+0x14]
 101028a:	call   0x100af81
 101028f:	push   DWORD PTR [esi+0x18]
 1010292:	call   0x100af81
 1010297:	push   DWORD PTR [esi]
 1010299:	call   0x100af81
 101029e:	push   DWORD PTR [esi+0x20]
 10102a1:	call   0x100af81
 10102a6:	push   DWORD PTR [esi+0x24]
 10102a9:	call   0x100af81
 10102ae:	push   DWORD PTR [esi+0x28]
 10102b1:	call   0x100af81
 10102b6:	push   DWORD PTR [esi+0x2c]
 10102b9:	call   0x100af81
 10102be:	push   DWORD PTR [esi+0x30]
 10102c1:	call   0x100af81
 10102c6:	push   DWORD PTR [esi+0x34]
 10102c9:	call   0x100af81
 10102ce:	push   DWORD PTR [esi+0x1c]
 10102d1:	call   0x100af81
 10102d6:	push   DWORD PTR [esi+0x38]
 10102d9:	call   0x100af81
 10102de:	push   DWORD PTR [esi+0x3c]
 10102e1:	call   0x100af81
 10102e6:	add    esp,0x40
 10102e9:	push   DWORD PTR [esi+0x40]
 10102ec:	call   0x100af81
 10102f1:	push   DWORD PTR [esi+0x44]
 10102f4:	call   0x100af81
 10102f9:	push   DWORD PTR [esi+0x48]
 10102fc:	call   0x100af81
 1010301:	push   DWORD PTR [esi+0x4c]
 1010304:	call   0x100af81
 1010309:	push   DWORD PTR [esi+0x50]
 101030c:	call   0x100af81
 1010311:	push   DWORD PTR [esi+0x54]
 1010314:	call   0x100af81
 1010319:	push   DWORD PTR [esi+0x58]
 101031c:	call   0x100af81
 1010321:	push   DWORD PTR [esi+0x5c]
 1010324:	call   0x100af81
 1010329:	push   DWORD PTR [esi+0x60]
 101032c:	call   0x100af81
 1010331:	push   DWORD PTR [esi+0x64]
 1010334:	call   0x100af81
 1010339:	push   DWORD PTR [esi+0x68]
 101033c:	call   0x100af81
 1010341:	push   DWORD PTR [esi+0x6c]
 1010344:	call   0x100af81
 1010349:	push   DWORD PTR [esi+0x70]
 101034c:	call   0x100af81
 1010351:	push   DWORD PTR [esi+0x74]
 1010354:	call   0x100af81
 1010359:	push   DWORD PTR [esi+0x78]
 101035c:	call   0x100af81
 1010361:	push   DWORD PTR [esi+0x7c]
 1010364:	call   0x100af81
 1010369:	add    esp,0x40
 101036c:	push   DWORD PTR [esi+0x80]
 1010372:	call   0x100af81
 1010377:	push   DWORD PTR [esi+0x84]
 101037d:	call   0x100af81
 1010382:	push   DWORD PTR [esi+0x88]
 1010388:	call   0x100af81
 101038d:	push   DWORD PTR [esi+0x8c]
 1010393:	call   0x100af81
 1010398:	push   DWORD PTR [esi+0x90]
 101039e:	call   0x100af81
 10103a3:	push   DWORD PTR [esi+0x94]
 10103a9:	call   0x100af81
 10103ae:	push   DWORD PTR [esi+0x98]
 10103b4:	call   0x100af81
 10103b9:	push   DWORD PTR [esi+0x9c]
 10103bf:	call   0x100af81
 10103c4:	push   DWORD PTR [esi+0xa0]
 10103ca:	call   0x100af81
 10103cf:	push   DWORD PTR [esi+0xa4]
 10103d5:	call   0x100af81
 10103da:	push   DWORD PTR [esi+0xa8]
 10103e0:	call   0x100af81
 10103e5:	push   DWORD PTR [esi+0xbc]
 10103eb:	call   0x100af81
 10103f0:	push   DWORD PTR [esi+0xc0]
 10103f6:	call   0x100af81
 10103fb:	push   DWORD PTR [esi+0xc4]
 1010401:	call   0x100af81
 1010406:	push   DWORD PTR [esi+0xc8]
 101040c:	call   0x100af81
 1010411:	push   DWORD PTR [esi+0xcc]
 1010417:	call   0x100af81
 101041c:	add    esp,0x40
 101041f:	push   DWORD PTR [esi+0xd0]
 1010425:	call   0x100af81
 101042a:	push   DWORD PTR [esi+0xb8]
 1010430:	call   0x100af81
 1010435:	push   DWORD PTR [esi+0xd8]
 101043b:	call   0x100af81
 1010440:	push   DWORD PTR [esi+0xdc]
 1010446:	call   0x100af81
 101044b:	push   DWORD PTR [esi+0xe0]
 1010451:	call   0x100af81
 1010456:	push   DWORD PTR [esi+0xe4]
 101045c:	call   0x100af81
 1010461:	push   DWORD PTR [esi+0xe8]
 1010467:	call   0x100af81
 101046c:	push   DWORD PTR [esi+0xec]
 1010472:	call   0x100af81
 1010477:	push   DWORD PTR [esi+0xd4]
 101047d:	call   0x100af81
 1010482:	push   DWORD PTR [esi+0xf0]
 1010488:	call   0x100af81
 101048d:	push   DWORD PTR [esi+0xf4]
 1010493:	call   0x100af81
 1010498:	push   DWORD PTR [esi+0xf8]
 101049e:	call   0x100af81
 10104a3:	push   DWORD PTR [esi+0xfc]
 10104a9:	call   0x100af81
 10104ae:	push   DWORD PTR [esi+0x100]
 10104b4:	call   0x100af81
 10104b9:	push   DWORD PTR [esi+0x104]
 10104bf:	call   0x100af81
 10104c4:	push   DWORD PTR [esi+0x108]
 10104ca:	call   0x100af81
 10104cf:	add    esp,0x40
 10104d2:	push   DWORD PTR [esi+0x10c]
 10104d8:	call   0x100af81
 10104dd:	push   DWORD PTR [esi+0x110]
 10104e3:	call   0x100af81
 10104e8:	push   DWORD PTR [esi+0x114]
 10104ee:	call   0x100af81
 10104f3:	push   DWORD PTR [esi+0x118]
 10104f9:	call   0x100af81
 10104fe:	push   DWORD PTR [esi+0x11c]
 1010504:	call   0x100af81
 1010509:	push   DWORD PTR [esi+0x120]
 101050f:	call   0x100af81
 1010514:	push   DWORD PTR [esi+0x124]
 101051a:	call   0x100af81
 101051f:	push   DWORD PTR [esi+0x128]
 1010525:	call   0x100af81
 101052a:	push   DWORD PTR [esi+0x12c]
 1010530:	call   0x100af81
 1010535:	push   DWORD PTR [esi+0x130]
 101053b:	call   0x100af81
 1010540:	push   DWORD PTR [esi+0x134]
 1010546:	call   0x100af81
 101054b:	push   DWORD PTR [esi+0x138]
 1010551:	call   0x100af81
 1010556:	push   DWORD PTR [esi+0x13c]
 101055c:	call   0x100af81
 1010561:	push   DWORD PTR [esi+0x140]
 1010567:	call   0x100af81
 101056c:	push   DWORD PTR [esi+0x144]
 1010572:	call   0x100af81
 1010577:	push   DWORD PTR [esi+0x148]
 101057d:	call   0x100af81
 1010582:	add    esp,0x40
 1010585:	push   DWORD PTR [esi+0x14c]
 101058b:	call   0x100af81
 1010590:	push   DWORD PTR [esi+0x150]
 1010596:	call   0x100af81
 101059b:	push   DWORD PTR [esi+0x154]
 10105a1:	call   0x100af81
 10105a6:	push   DWORD PTR [esi+0x158]
 10105ac:	call   0x100af81
 10105b1:	push   DWORD PTR [esi+0x15c]
 10105b7:	call   0x100af81
 10105bc:	push   DWORD PTR [esi+0x160]
 10105c2:	call   0x100af81
 10105c7:	add    esp,0x18
 10105ca:	pop    esi
 10105cb:	pop    ebp
 10105cc:	ret    
 10105cd:	int3   
 10105ce:	int3   
 10105cf:	int3   
 10105d0:	int3   
 10105d1:	int3   
 10105d2:	mov    edi,edi
 10105d4:	push   ebp
 10105d5:	mov    ebp,esp
 10105d7:	push   esi
 10105d8:	mov    esi,DWORD PTR [ebp+0x8]
 10105db:	test   esi,esi
 10105dd:	je     0x1010638
 10105df:	mov    eax,DWORD PTR [esi]
 10105e1:	cmp    eax,DWORD PTR ds:0x1013de8
 10105e7:	je     0x10105f0
 10105e9:	push   eax
 10105ea:	call   0x100af81
 10105ef:	pop    ecx
 10105f0:	mov    eax,DWORD PTR [esi+0x4]
 10105f3:	cmp    eax,DWORD PTR ds:0x1013dec
 10105f9:	je     0x1010602
 10105fb:	push   eax
 10105fc:	call   0x100af81
 1010601:	pop    ecx
 1010602:	mov    eax,DWORD PTR [esi+0x8]
 1010605:	cmp    eax,DWORD PTR ds:0x1013df0
 101060b:	je     0x1010614
 101060d:	push   eax
 101060e:	call   0x100af81
 1010613:	pop    ecx
 1010614:	mov    eax,DWORD PTR [esi+0x30]
 1010617:	cmp    eax,DWORD PTR ds:0x1013e18
 101061d:	je     0x1010626
 101061f:	push   eax
 1010620:	call   0x100af81
 1010625:	pop    ecx
 1010626:	mov    esi,DWORD PTR [esi+0x34]
 1010629:	cmp    esi,DWORD PTR ds:0x1013e1c
 101062f:	je     0x1010638
 1010631:	push   esi
 1010632:	call   0x100af81
 1010637:	pop    ecx
 1010638:	pop    esi
 1010639:	pop    ebp
 101063a:	ret    
 101063b:	int3   
 101063c:	int3   
 101063d:	int3   
 101063e:	int3   
 101063f:	int3   
 1010640:	mov    edi,edi
 1010642:	push   ebp
 1010643:	mov    ebp,esp
 1010645:	push   esi
 1010646:	mov    esi,DWORD PTR [ebp+0x8]
 1010649:	test   esi,esi
 101064b:	je     0x101073b
 1010651:	mov    eax,DWORD PTR [esi+0xc]
 1010654:	cmp    eax,DWORD PTR ds:0x1013df4
 101065a:	je     0x1010663
 101065c:	push   eax
 101065d:	call   0x100af81
 1010662:	pop    ecx
 1010663:	mov    eax,DWORD PTR [esi+0x10]
 1010666:	cmp    eax,DWORD PTR ds:0x1013df8
 101066c:	je     0x1010675
 101066e:	push   eax
 101066f:	call   0x100af81
 1010674:	pop    ecx
 1010675:	mov    eax,DWORD PTR [esi+0x14]
 1010678:	cmp    eax,DWORD PTR ds:0x1013dfc
 101067e:	je     0x1010687
 1010680:	push   eax
 1010681:	call   0x100af81
 1010686:	pop    ecx
 1010687:	mov    eax,DWORD PTR [esi+0x18]
 101068a:	cmp    eax,DWORD PTR ds:0x1013e00
 1010690:	je     0x1010699
 1010692:	push   eax
 1010693:	call   0x100af81
 1010698:	pop    ecx
 1010699:	mov    eax,DWORD PTR [esi+0x1c]
 101069c:	cmp    eax,DWORD PTR ds:0x1013e04
 10106a2:	je     0x10106ab
 10106a4:	push   eax
 10106a5:	call   0x100af81
 10106aa:	pop    ecx
 10106ab:	mov    eax,DWORD PTR [esi+0x20]
 10106ae:	cmp    eax,DWORD PTR ds:0x1013e08
 10106b4:	je     0x10106bd
 10106b6:	push   eax
 10106b7:	call   0x100af81
 10106bc:	pop    ecx
 10106bd:	mov    eax,DWORD PTR [esi+0x24]
 10106c0:	cmp    eax,DWORD PTR ds:0x1013e0c
 10106c6:	je     0x10106cf
 10106c8:	push   eax
 10106c9:	call   0x100af81
 10106ce:	pop    ecx
 10106cf:	mov    eax,DWORD PTR [esi+0x38]
 10106d2:	cmp    eax,DWORD PTR ds:0x1013e20
 10106d8:	je     0x10106e1
 10106da:	push   eax
 10106db:	call   0x100af81
 10106e0:	pop    ecx
 10106e1:	mov    eax,DWORD PTR [esi+0x3c]
 10106e4:	cmp    eax,DWORD PTR ds:0x1013e24
 10106ea:	je     0x10106f3
 10106ec:	push   eax
 10106ed:	call   0x100af81
 10106f2:	pop    ecx
 10106f3:	mov    eax,DWORD PTR [esi+0x40]
 10106f6:	cmp    eax,DWORD PTR ds:0x1013e28
 10106fc:	je     0x1010705
 10106fe:	push   eax
 10106ff:	call   0x100af81
 1010704:	pop    ecx
 1010705:	mov    eax,DWORD PTR [esi+0x44]
 1010708:	cmp    eax,DWORD PTR ds:0x1013e2c
 101070e:	je     0x1010717
 1010710:	push   eax
 1010711:	call   0x100af81
 1010716:	pop    ecx
 1010717:	mov    eax,DWORD PTR [esi+0x48]
 101071a:	cmp    eax,DWORD PTR ds:0x1013e30
 1010720:	je     0x1010729
 1010722:	push   eax
 1010723:	call   0x100af81
 1010728:	pop    ecx
 1010729:	mov    esi,DWORD PTR [esi+0x4c]
 101072c:	cmp    esi,DWORD PTR ds:0x1013e34
 1010732:	je     0x101073b
 1010734:	push   esi
 1010735:	call   0x100af81
 101073a:	pop    ecx
 101073b:	pop    esi
 101073c:	pop    ebp
 101073d:	ret    
 101073e:	int3   
 101073f:	int3   
 1010740:	int3   
 1010741:	int3   
 1010742:	int3   
 1010743:	int3   
 1010744:	int3   
 1010745:	int3   
 1010746:	int3   
 1010747:	int3   
 1010748:	int3   
 1010749:	int3   
 101074a:	int3   
 101074b:	int3   
 101074c:	int3   
 101074d:	int3   
 101074e:	int3   
 101074f:	int3   
 1010750:	push   ecx
 1010751:	lea    ecx,[esp+0x4]
 1010755:	sub    ecx,eax
 1010757:	sbb    eax,eax
 1010759:	not    eax
 101075b:	and    ecx,eax
 101075d:	mov    eax,esp
 101075f:	and    eax,0xfffff000
 1010764:	cmp    ecx,eax
 1010766:	jb     0x1010772
 1010768:	mov    eax,ecx
 101076a:	pop    ecx
 101076b:	xchg   esp,eax
 101076c:	mov    eax,DWORD PTR [eax]
 101076e:	mov    DWORD PTR [esp],eax
 1010771:	ret    
 1010772:	sub    eax,0x1000
 1010777:	test   DWORD PTR [eax],eax
 1010779:	jmp    0x1010764
 101077b:	int3   
 101077c:	int3   
 101077d:	int3   
 101077e:	int3   
 101077f:	int3   
 1010780:	push   ebp
 1010781:	mov    ebp,esp
 1010783:	push   esi
 1010784:	xor    eax,eax
 1010786:	push   eax
 1010787:	push   eax
 1010788:	push   eax
 1010789:	push   eax
 101078a:	push   eax
 101078b:	push   eax
 101078c:	push   eax
 101078d:	push   eax
 101078e:	mov    edx,DWORD PTR [ebp+0xc]
 1010791:	lea    ecx,[ecx+0x0]
 1010794:	mov    al,BYTE PTR [edx]
 1010796:	or     al,al
 1010798:	je     0x10107a3
 101079a:	add    edx,0x1
 101079d:	bts    DWORD PTR [esp],eax
 10107a1:	jmp    0x1010794
 10107a3:	mov    esi,DWORD PTR [ebp+0x8]
 10107a6:	or     ecx,0xffffffff
 10107a9:	lea    ecx,[ecx+0x0]
 10107ac:	add    ecx,0x1
 10107af:	mov    al,BYTE PTR [esi]
 10107b1:	or     al,al
 10107b3:	je     0x10107be
 10107b5:	add    esi,0x1
 10107b8:	bt     DWORD PTR [esp],eax
 10107bc:	jae    0x10107ac
 10107be:	mov    eax,ecx
 10107c0:	add    esp,0x20
 10107c3:	pop    esi
 10107c4:	leave  
 10107c5:	ret    
 10107c6:	int3   
 10107c7:	int3   
 10107c8:	int3   
 10107c9:	int3   
 10107ca:	int3   
 10107cb:	mov    edi,edi
 10107cd:	push   ebp
 10107ce:	mov    ebp,esp
 10107d0:	push   ecx
 10107d1:	and    DWORD PTR [ebp-0x4],0x0
 10107d5:	push   ebx
 10107d6:	mov    ebx,DWORD PTR [ebp+0x10]
 10107d9:	test   ebx,ebx
 10107db:	jne    0x10107e4
 10107dd:	xor    eax,eax
 10107df:	jmp    0x101087e
 10107e4:	push   esi
 10107e5:	cmp    ebx,0x4
 10107e8:	jb     0x101085f
 10107ea:	lea    esi,[ebx-0x4]
 10107ed:	test   esi,esi
 10107ef:	je     0x101085f
 10107f1:	mov    ecx,DWORD PTR [ebp+0xc]
 10107f4:	mov    eax,DWORD PTR [ebp+0x8]
 10107f7:	mov    dl,BYTE PTR [eax]
 10107f9:	add    eax,0x4
 10107fc:	add    ecx,0x4
 10107ff:	test   dl,dl
 1010801:	je     0x1010855
 1010803:	cmp    dl,BYTE PTR [ecx-0x4]
 1010806:	jne    0x1010855
 1010808:	mov    dl,BYTE PTR [eax-0x3]
 101080b:	test   dl,dl
 101080d:	je     0x101084b
 101080f:	cmp    dl,BYTE PTR [ecx-0x3]
 1010812:	jne    0x101084b
 1010814:	mov    dl,BYTE PTR [eax-0x2]
 1010817:	test   dl,dl
 1010819:	je     0x1010841
 101081b:	cmp    dl,BYTE PTR [ecx-0x2]
 101081e:	jne    0x1010841
 1010820:	mov    dl,BYTE PTR [eax-0x1]
 1010823:	test   dl,dl
 1010825:	je     0x1010837
 1010827:	cmp    dl,BYTE PTR [ecx-0x1]
 101082a:	jne    0x1010837
 101082c:	add    DWORD PTR [ebp-0x4],0x4
 1010830:	cmp    DWORD PTR [ebp-0x4],esi
 1010833:	jb     0x10107f7
 1010835:	jmp    0x1010865
 1010837:	movzx  eax,BYTE PTR [eax-0x1]
 101083b:	movzx  ecx,BYTE PTR [ecx-0x1]
 101083f:	jmp    0x1010887
 1010841:	movzx  eax,BYTE PTR [eax-0x2]
 1010845:	movzx  ecx,BYTE PTR [ecx-0x2]
 1010849:	jmp    0x1010887
 101084b:	movzx  eax,BYTE PTR [eax-0x3]
 101084f:	movzx  ecx,BYTE PTR [ecx-0x3]
 1010853:	jmp    0x1010887
 1010855:	movzx  eax,BYTE PTR [eax-0x4]
 1010859:	movzx  ecx,BYTE PTR [ecx-0x4]
 101085d:	jmp    0x1010887
 101085f:	mov    ecx,DWORD PTR [ebp+0xc]
 1010862:	mov    eax,DWORD PTR [ebp+0x8]
 1010865:	mov    esi,DWORD PTR [ebp-0x4]
 1010868:	jmp    0x1010877
 101086a:	mov    dl,BYTE PTR [eax]
 101086c:	test   dl,dl
 101086e:	je     0x1010881
 1010870:	cmp    dl,BYTE PTR [ecx]
 1010872:	jne    0x1010881
 1010874:	inc    eax
 1010875:	inc    esi
 1010876:	inc    ecx
 1010877:	cmp    esi,ebx
 1010879:	jb     0x101086a
 101087b:	xor    eax,eax
 101087d:	pop    esi
 101087e:	pop    ebx
 101087f:	leave  
 1010880:	ret    
 1010881:	movzx  eax,BYTE PTR [eax]
 1010884:	movzx  ecx,BYTE PTR [ecx]
 1010887:	sub    eax,ecx
 1010889:	jmp    0x101087d
 101088b:	int3   
 101088c:	int3   
 101088d:	int3   
 101088e:	int3   
 101088f:	int3   
 1010890:	push   ebp
 1010891:	mov    ebp,esp
 1010893:	push   esi
 1010894:	xor    eax,eax
 1010896:	push   eax
 1010897:	push   eax
 1010898:	push   eax
 1010899:	push   eax
 101089a:	push   eax
 101089b:	push   eax
 101089c:	push   eax
 101089d:	push   eax
 101089e:	mov    edx,DWORD PTR [ebp+0xc]
 10108a1:	lea    ecx,[ecx+0x0]
 10108a4:	mov    al,BYTE PTR [edx]
 10108a6:	or     al,al
 10108a8:	je     0x10108b3
 10108aa:	add    edx,0x1
 10108ad:	bts    DWORD PTR [esp],eax
 10108b1:	jmp    0x10108a4
 10108b3:	mov    esi,DWORD PTR [ebp+0x8]
 10108b6:	mov    edi,edi
 10108b8:	mov    al,BYTE PTR [esi]
 10108ba:	or     al,al
 10108bc:	je     0x10108ca
 10108be:	add    esi,0x1
 10108c1:	bt     DWORD PTR [esp],eax
 10108c5:	jae    0x10108b8
 10108c7:	lea    eax,[esi-0x1]
 10108ca:	add    esp,0x20
 10108cd:	pop    esi
 10108ce:	leave  
 10108cf:	ret    
 10108d0:	int3   
 10108d1:	int3   
 10108d2:	int3   
 10108d3:	int3   
 10108d4:	int3   
 10108d5:	mov    edi,edi
 10108d7:	push   ebp
 10108d8:	mov    ebp,esp
 10108da:	sub    esp,0x18
 10108dd:	push   ebx
 10108de:	push   DWORD PTR [ebp+0x10]
 10108e1:	lea    ecx,[ebp-0x18]
 10108e4:	call   0x10086a4
 10108e9:	mov    ebx,DWORD PTR [ebp+0x8]
 10108ec:	lea    eax,[ebx+0x1]
 10108ef:	cmp    eax,0x100
 10108f4:	ja     0x1010905
 10108f6:	mov    eax,DWORD PTR [ebp-0x18]
 10108f9:	mov    eax,DWORD PTR [eax+0xc8]
 10108ff:	movzx  eax,WORD PTR [eax+ebx*2]
 1010903:	jmp    0x101097a
 1010905:	mov    DWORD PTR [ebp+0x8],ebx
 1010908:	sar    DWORD PTR [ebp+0x8],0x8
 101090c:	lea    eax,[ebp-0x18]
 101090f:	push   eax
 1010910:	mov    eax,DWORD PTR [ebp+0x8]
 1010913:	and    eax,0xff
 1010918:	push   eax
 1010919:	call   0x100e8f1
 101091e:	pop    ecx
 101091f:	pop    ecx
 1010920:	test   eax,eax
 1010922:	je     0x1010936
 1010924:	mov    al,BYTE PTR [ebp+0x8]
 1010927:	push   0x2
 1010929:	mov    BYTE PTR [ebp-0x8],al
 101092c:	mov    BYTE PTR [ebp-0x7],bl
 101092f:	mov    BYTE PTR [ebp-0x6],0x0
 1010933:	pop    ecx
 1010934:	jmp    0x1010940
 1010936:	xor    ecx,ecx
 1010938:	mov    BYTE PTR [ebp-0x8],bl
 101093b:	mov    BYTE PTR [ebp-0x7],0x0
 101093f:	inc    ecx
 1010940:	mov    eax,DWORD PTR [ebp-0x18]
 1010943:	push   0x1
 1010945:	push   DWORD PTR [eax+0x14]
 1010948:	push   DWORD PTR [eax+0x4]
 101094b:	lea    eax,[ebp-0x4]
 101094e:	push   eax
 101094f:	push   ecx
 1010950:	lea    eax,[ebp-0x8]
 1010953:	push   eax
 1010954:	lea    eax,[ebp-0x18]
 1010957:	push   0x1
 1010959:	push   eax
 101095a:	call   0x1010211
 101095f:	add    esp,0x20
 1010962:	test   eax,eax
 1010964:	jne    0x1010976
 1010966:	cmp    BYTE PTR [ebp-0xc],al
 1010969:	je     0x1010972
 101096b:	mov    eax,DWORD PTR [ebp-0x10]
 101096e:	and    DWORD PTR [eax+0x70],0xfffffffd
 1010972:	xor    eax,eax
 1010974:	jmp    0x101098a
 1010976:	movzx  eax,WORD PTR [ebp-0x4]
 101097a:	and    eax,DWORD PTR [ebp+0xc]
 101097d:	cmp    BYTE PTR [ebp-0xc],0x0
 1010981:	je     0x101098a
 1010983:	mov    ecx,DWORD PTR [ebp-0x10]
 1010986:	and    DWORD PTR [ecx+0x70],0xfffffffd
 101098a:	pop    ebx
 101098b:	leave  
 101098c:	ret    
 101098d:	int3   
 101098e:	int3   
 101098f:	int3   
 1010990:	int3   
 1010991:	int3   
 1010992:	int3   
 1010993:	int3   
 1010994:	int3   
 1010995:	int3   
 1010996:	int3   
 1010997:	int3   
 1010998:	int3   
 1010999:	int3   
 101099a:	int3   
 101099b:	int3   
 101099c:	int3   
 101099d:	int3   
 101099e:	int3   
 101099f:	int3   
 10109a0:	mov    eax,DWORD PTR [esp+0x8]
 10109a4:	mov    ecx,DWORD PTR [esp+0x10]
 10109a8:	or     ecx,eax
 10109aa:	mov    ecx,DWORD PTR [esp+0xc]
 10109ae:	jne    0x10109b9
 10109b0:	mov    eax,DWORD PTR [esp+0x4]
 10109b4:	mul    ecx
 10109b6:	ret    0x10
 10109b9:	push   ebx
 10109ba:	mul    ecx
 10109bc:	mov    ebx,eax
 10109be:	mov    eax,DWORD PTR [esp+0x8]
 10109c2:	mul    DWORD PTR [esp+0x14]
 10109c6:	add    ebx,eax
 10109c8:	mov    eax,DWORD PTR [esp+0x8]
 10109cc:	mul    ecx
 10109ce:	add    edx,ebx
 10109d0:	pop    ebx
 10109d1:	ret    0x10
 10109d4:	int3   
 10109d5:	int3   
 10109d6:	int3   
 10109d7:	int3   
 10109d8:	int3   
 10109d9:	call   0x100d50a
 10109de:	test   eax,eax
 10109e0:	je     0x10109ea
 10109e2:	push   0x16
 10109e4:	call   0x100d51c
 10109e9:	pop    ecx
 10109ea:	test   BYTE PTR ds:0x1013e60,0x2
 10109f1:	je     0x1010a04
 10109f3:	push   0x1
 10109f5:	push   0x40000015
 10109fa:	push   0x3
 10109fc:	call   0x100ad43
 1010a01:	add    esp,0xc
 1010a04:	push   0x3
 1010a06:	call   0x1008d4b
 1010a0b:	int3   
 1010a0c:	int3   
 1010a0d:	int3   
 1010a0e:	int3   
 1010a0f:	int3   
 1010a10:	int3   
 1010a11:	push   0x2
 1010a13:	call   0x1008d8e
 1010a18:	pop    ecx
 1010a19:	ret    
 1010a1a:	int3   
 1010a1b:	int3   
 1010a1c:	int3   
 1010a1d:	int3   
 1010a1e:	int3   
 1010a1f:	mov    edi,edi
 1010a21:	push   ebp
 1010a22:	mov    ebp,esp
 1010a24:	mov    ecx,DWORD PTR [ebp+0x8]
 1010a27:	test   ecx,ecx
 1010a29:	je     0x1010a46
 1010a2b:	push   0xffffffe0
 1010a2d:	xor    edx,edx
 1010a2f:	pop    eax
 1010a30:	div    ecx
 1010a32:	cmp    eax,DWORD PTR [ebp+0xc]
 1010a35:	jae    0x1010a46
 1010a37:	call   0x100af29
 1010a3c:	mov    DWORD PTR [eax],0xc
 1010a42:	xor    eax,eax
 1010a44:	pop    ebp
 1010a45:	ret    
 1010a46:	imul   ecx,DWORD PTR [ebp+0xc]
 1010a4a:	push   esi
 1010a4b:	mov    esi,ecx
 1010a4d:	test   esi,esi
 1010a4f:	jne    0x1010a52
 1010a51:	inc    esi
 1010a52:	xor    eax,eax
 1010a54:	cmp    esi,0xffffffe0
 1010a57:	ja     0x1010a6c
 1010a59:	push   esi
 1010a5a:	push   0x8
 1010a5c:	push   DWORD PTR ds:0x1014a68
 1010a62:	call   DWORD PTR ds:0x1001108
 1010a68:	test   eax,eax
 1010a6a:	jne    0x1010a9e
 1010a6c:	cmp    DWORD PTR ds:0x1014f64,0x0
 1010a73:	je     0x1010a91
 1010a75:	push   esi
 1010a76:	call   0x100c184
 1010a7b:	pop    ecx
 1010a7c:	test   eax,eax
 1010a7e:	jne    0x1010a52
 1010a80:	mov    eax,DWORD PTR [ebp+0x10]
 1010a83:	test   eax,eax
 1010a85:	je     0x1010a8d
 1010a87:	mov    DWORD PTR [eax],0xc
 1010a8d:	xor    eax,eax
 1010a8f:	jmp    0x1010a9e
 1010a91:	mov    ecx,DWORD PTR [ebp+0x10]
 1010a94:	test   ecx,ecx
 1010a96:	je     0x1010a9e
 1010a98:	mov    DWORD PTR [ecx],0xc
 1010a9e:	pop    esi
 1010a9f:	pop    ebp
 1010aa0:	ret    
 1010aa1:	int3   
 1010aa2:	int3   
 1010aa3:	int3   
 1010aa4:	int3   
 1010aa5:	int3   
 1010aa6:	mov    edi,edi
 1010aa8:	push   ebp
 1010aa9:	mov    ebp,esp
 1010aab:	cmp    DWORD PTR [ebp+0x8],0x0
 1010aaf:	jne    0x1010abc
 1010ab1:	push   DWORD PTR [ebp+0xc]
 1010ab4:	call   0x100c0d7
 1010ab9:	pop    ecx
 1010aba:	pop    ebp
 1010abb:	ret    
 1010abc:	push   esi
 1010abd:	mov    esi,DWORD PTR [ebp+0xc]
 1010ac0:	test   esi,esi
 1010ac2:	jne    0x1010ad1
 1010ac4:	push   DWORD PTR [ebp+0x8]
 1010ac7:	call   0x100af81
 1010acc:	pop    ecx
 1010acd:	xor    eax,eax
 1010acf:	jmp    0x1010b1e
 1010ad1:	push   edi
 1010ad2:	jmp    0x1010b04
 1010ad4:	test   esi,esi
 1010ad6:	jne    0x1010ad9
 1010ad8:	inc    esi
 1010ad9:	push   esi
 1010ada:	push   DWORD PTR [ebp+0x8]
 1010add:	push   0x0
 1010adf:	push   DWORD PTR ds:0x1014a68
 1010ae5:	call   DWORD PTR ds:0x10010c0
 1010aeb:	mov    edi,eax
 1010aed:	test   edi,edi
 1010aef:	jne    0x1010b4f
 1010af1:	cmp    DWORD PTR ds:0x1014f64,eax
 1010af7:	je     0x1010b39
 1010af9:	push   esi
 1010afa:	call   0x100c184
 1010aff:	pop    ecx
 1010b00:	test   eax,eax
 1010b02:	je     0x1010b21
 1010b04:	cmp    esi,0xffffffe0
 1010b07:	jbe    0x1010ad4
 1010b09:	push   esi
 1010b0a:	call   0x100c184
 1010b0f:	pop    ecx
 1010b10:	call   0x100af29
 1010b15:	mov    DWORD PTR [eax],0xc
 1010b1b:	xor    eax,eax
 1010b1d:	pop    edi
 1010b1e:	pop    esi
 1010b1f:	pop    ebp
 1010b20:	ret    
 1010b21:	call   0x100af29
 1010b26:	mov    esi,eax
 1010b28:	call   DWORD PTR ds:0x1001124
 1010b2e:	push   eax
 1010b2f:	call   0x100aee2
 1010b34:	pop    ecx
 1010b35:	mov    DWORD PTR [esi],eax
 1010b37:	jmp    0x1010b1b
 1010b39:	call   0x100af29
 1010b3e:	mov    esi,eax
 1010b40:	call   DWORD PTR ds:0x1001124
 1010b46:	push   eax
 1010b47:	call   0x100aee2
 1010b4c:	pop    ecx
 1010b4d:	mov    DWORD PTR [esi],eax
 1010b4f:	mov    eax,edi
 1010b51:	jmp    0x1010b1d
 1010b53:	int3   
 1010b54:	int3   
 1010b55:	int3   
 1010b56:	int3   
 1010b57:	int3   
 1010b58:	mov    edi,edi
 1010b5a:	push   ebp
 1010b5b:	mov    ebp,esp
 1010b5d:	push   ecx
 1010b5e:	cmp    DWORD PTR ds:0x1013f68,0xfffffffe
 1010b65:	jne    0x1010b6c
 1010b67:	call   0x1011803
 1010b6c:	mov    eax,ds:0x1013f68
 1010b71:	cmp    eax,0xffffffff
 1010b74:	jne    0x1010b7d
 1010b76:	mov    eax,0xffff
 1010b7b:	leave  
 1010b7c:	ret    
 1010b7d:	push   0x0
 1010b7f:	lea    ecx,[ebp-0x4]
 1010b82:	push   ecx
 1010b83:	push   0x1
 1010b85:	lea    ecx,[ebp+0x8]
 1010b88:	push   ecx
 1010b89:	push   eax
 1010b8a:	call   DWORD PTR ds:0x10010bc
 1010b90:	test   eax,eax
 1010b92:	je     0x1010b76
 1010b94:	mov    ax,WORD PTR [ebp+0x8]
 1010b98:	leave  
 1010b99:	ret    
 1010b9a:	int3   
 1010b9b:	int3   
 1010b9c:	int3   
 1010b9d:	int3   
 1010b9e:	int3   
 1010b9f:	mov    edi,edi
 1010ba1:	push   ebp
 1010ba2:	mov    ebp,esp
 1010ba4:	sub    esp,0x10
 1010ba7:	push   ebx
 1010ba8:	push   esi
 1010ba9:	mov    esi,DWORD PTR [ebp+0xc]
 1010bac:	xor    ebx,ebx
 1010bae:	cmp    esi,ebx
 1010bb0:	je     0x1010bc7
 1010bb2:	cmp    DWORD PTR [ebp+0x10],ebx
 1010bb5:	je     0x1010bc7
 1010bb7:	cmp    BYTE PTR [esi],bl
 1010bb9:	jne    0x1010bcd
 1010bbb:	mov    eax,DWORD PTR [ebp+0x8]
 1010bbe:	cmp    eax,ebx
 1010bc0:	je     0x1010bc7
 1010bc2:	xor    ecx,ecx
 1010bc4:	mov    WORD PTR [eax],cx
 1010bc7:	xor    eax,eax
 1010bc9:	pop    esi
 1010bca:	pop    ebx
 1010bcb:	leave  
 1010bcc:	ret    
 1010bcd:	push   DWORD PTR [ebp+0x14]
 1010bd0:	lea    ecx,[ebp-0x10]
 1010bd3:	call   0x10086a4
 1010bd8:	mov    eax,DWORD PTR [ebp-0x10]
 1010bdb:	cmp    DWORD PTR [eax+0x14],ebx
 1010bde:	jne    0x1010bfe
 1010be0:	mov    eax,DWORD PTR [ebp+0x8]
 1010be3:	cmp    eax,ebx
 1010be5:	je     0x1010bed
 1010be7:	movzx  ecx,BYTE PTR [esi]
 1010bea:	mov    WORD PTR [eax],cx
 1010bed:	cmp    BYTE PTR [ebp-0x4],bl
 1010bf0:	je     0x1010bf9
 1010bf2:	mov    eax,DWORD PTR [ebp-0x8]
 1010bf5:	and    DWORD PTR [eax+0x70],0xfffffffd
 1010bf9:	xor    eax,eax
 1010bfb:	inc    eax
 1010bfc:	jmp    0x1010bc9
 1010bfe:	lea    eax,[ebp-0x10]
 1010c01:	push   eax
 1010c02:	movzx  eax,BYTE PTR [esi]
 1010c05:	push   eax
 1010c06:	call   0x100e8f1
 1010c0b:	pop    ecx
 1010c0c:	pop    ecx
 1010c0d:	test   eax,eax
 1010c0f:	je     0x1010c8e
 1010c11:	mov    eax,DWORD PTR [ebp-0x10]
 1010c14:	mov    ecx,DWORD PTR [eax+0xac]
 1010c1a:	cmp    ecx,0x1
 1010c1d:	jle    0x1010c44
 1010c1f:	cmp    DWORD PTR [ebp+0x10],ecx
 1010c22:	jl     0x1010c44
 1010c24:	xor    edx,edx
 1010c26:	cmp    DWORD PTR [ebp+0x8],ebx
 1010c29:	setne  dl
 1010c2c:	push   edx
 1010c2d:	push   DWORD PTR [ebp+0x8]
 1010c30:	push   ecx
 1010c31:	push   esi
 1010c32:	push   0x9
 1010c34:	push   DWORD PTR [eax+0x4]
 1010c37:	call   DWORD PTR ds:0x10010e8
 1010c3d:	test   eax,eax
 1010c3f:	mov    eax,DWORD PTR [ebp-0x10]
 1010c42:	jne    0x1010c54
 1010c44:	mov    ecx,DWORD PTR [ebp+0x10]
 1010c47:	cmp    ecx,DWORD PTR [eax+0xac]
 1010c4d:	jb     0x1010c6f
 1010c4f:	cmp    BYTE PTR [esi+0x1],bl
 1010c52:	je     0x1010c6f
 1010c54:	mov    eax,DWORD PTR [eax+0xac]
 1010c5a:	cmp    BYTE PTR [ebp-0x4],bl
 1010c5d:	je     0x1010bc9
 1010c63:	mov    ecx,DWORD PTR [ebp-0x8]
 1010c66:	and    DWORD PTR [ecx+0x70],0xfffffffd
 1010c6a:	jmp    0x1010bc9
 1010c6f:	call   0x100af29
 1010c74:	mov    DWORD PTR [eax],0x2a
 1010c7a:	cmp    BYTE PTR [ebp-0x4],bl
 1010c7d:	je     0x1010c86
 1010c7f:	mov    eax,DWORD PTR [ebp-0x8]
 1010c82:	and    DWORD PTR [eax+0x70],0xfffffffd
 1010c86:	or     eax,0xffffffff
 1010c89:	jmp    0x1010bc9
 1010c8e:	xor    eax,eax
 1010c90:	cmp    DWORD PTR [ebp+0x8],ebx
 1010c93:	setne  al
 1010c96:	push   eax
 1010c97:	push   DWORD PTR [ebp+0x8]
 1010c9a:	mov    eax,DWORD PTR [ebp-0x10]
 1010c9d:	push   0x1
 1010c9f:	push   esi
 1010ca0:	push   0x9
 1010ca2:	push   DWORD PTR [eax+0x4]
 1010ca5:	call   DWORD PTR ds:0x10010e8
 1010cab:	test   eax,eax
 1010cad:	jne    0x1010bed
 1010cb3:	jmp    0x1010c6f
 1010cb5:	int3   
 1010cb6:	int3   
 1010cb7:	int3   
 1010cb8:	int3   
 1010cb9:	int3   
 1010cba:	mov    edi,edi
 1010cbc:	push   ebp
 1010cbd:	mov    ebp,esp
 1010cbf:	push   0x0
 1010cc1:	push   DWORD PTR [ebp+0x10]
 1010cc4:	push   DWORD PTR [ebp+0xc]
 1010cc7:	push   DWORD PTR [ebp+0x8]
 1010cca:	call   0x1010b9f
 1010ccf:	add    esp,0x10
 1010cd2:	pop    ebp
 1010cd3:	ret    
 1010cd4:	int3   
 1010cd5:	int3   
 1010cd6:	int3   
 1010cd7:	int3   
 1010cd8:	int3   
 1010cd9:	push   edi
 1010cda:	mov    eax,esi
 1010cdc:	and    eax,0xf
 1010cdf:	test   eax,eax
 1010ce1:	jne    0x1010da8
 1010ce7:	mov    edx,ecx
 1010ce9:	and    ecx,0x7f
 1010cec:	shr    edx,0x7
 1010cef:	je     0x1010d56
 1010cf1:	jmp    0x1010cf9
 1010cf3:	lea    ebx,[ebx+0x0]
 1010cf9:	movdqa xmm0,XMMWORD PTR [esi]
 1010cfd:	movdqa xmm1,XMMWORD PTR [esi+0x10]
 1010d02:	movdqa xmm2,XMMWORD PTR [esi+0x20]
 1010d07:	movdqa xmm3,XMMWORD PTR [esi+0x30]
 1010d0c:	movdqa XMMWORD PTR [edi],xmm0
 1010d10:	movdqa XMMWORD PTR [edi+0x10],xmm1
 1010d15:	movdqa XMMWORD PTR [edi+0x20],xmm2
 1010d1a:	movdqa XMMWORD PTR [edi+0x30],xmm3
 1010d1f:	movdqa xmm4,XMMWORD PTR [esi+0x40]
 1010d24:	movdqa xmm5,XMMWORD PTR [esi+0x50]
 1010d29:	movdqa xmm6,XMMWORD PTR [esi+0x60]
 1010d2e:	movdqa xmm7,XMMWORD PTR [esi+0x70]
 1010d33:	movdqa XMMWORD PTR [edi+0x40],xmm4
 1010d38:	movdqa XMMWORD PTR [edi+0x50],xmm5
 1010d3d:	movdqa XMMWORD PTR [edi+0x60],xmm6
 1010d42:	movdqa XMMWORD PTR [edi+0x70],xmm7
 1010d47:	lea    esi,[esi+0x80]
 1010d4d:	lea    edi,[edi+0x80]
 1010d53:	dec    edx
 1010d54:	jne    0x1010cf9
 1010d56:	test   ecx,ecx
 1010d58:	je     0x1010da3
 1010d5a:	mov    edx,ecx
 1010d5c:	shr    edx,0x4
 1010d5f:	test   edx,edx
 1010d61:	je     0x1010d7a
 1010d63:	lea    ebx,[ebx+0x0]
 1010d69:	movdqa xmm0,XMMWORD PTR [esi]
 1010d6d:	movdqa XMMWORD PTR [edi],xmm0
 1010d71:	lea    esi,[esi+0x10]
 1010d74:	lea    edi,[edi+0x10]
 1010d77:	dec    edx
 1010d78:	jne    0x1010d69
 1010d7a:	and    ecx,0xf
 1010d7d:	je     0x1010da3
 1010d7f:	mov    eax,ecx
 1010d81:	shr    ecx,0x2
 1010d84:	je     0x1010d93
 1010d86:	mov    edx,DWORD PTR [esi]
 1010d88:	mov    DWORD PTR [edi],edx
 1010d8a:	lea    esi,[esi+0x4]
 1010d8d:	lea    edi,[edi+0x4]
 1010d90:	dec    ecx
 1010d91:	jne    0x1010d86
 1010d93:	mov    ecx,eax
 1010d95:	and    ecx,0x3
 1010d98:	je     0x1010da3
 1010d9a:	mov    al,BYTE PTR [esi]
 1010d9c:	mov    BYTE PTR [edi],al
 1010d9e:	inc    esi
 1010d9f:	inc    edi
 1010da0:	dec    ecx
 1010da1:	jne    0x1010d9a
 1010da3:	pop    eax
 1010da4:	pop    esi
 1010da5:	pop    edi
 1010da6:	pop    ebp
 1010da7:	ret    
 1010da8:	mov    edx,0x10
 1010dad:	sub    edx,eax
 1010daf:	sub    ecx,edx
 1010db1:	push   ecx
 1010db2:	mov    eax,edx
 1010db4:	mov    ecx,eax
 1010db6:	and    ecx,0x3
 1010db9:	je     0x1010dc4
 1010dbb:	mov    dl,BYTE PTR [esi]
 1010dbd:	mov    BYTE PTR [edi],dl
 1010dbf:	inc    esi
 1010dc0:	inc    edi
 1010dc1:	dec    ecx
 1010dc2:	jne    0x1010dbb
 1010dc4:	shr    eax,0x2
 1010dc7:	je     0x1010dd6
 1010dc9:	mov    edx,DWORD PTR [esi]
 1010dcb:	mov    DWORD PTR [edi],edx
 1010dcd:	lea    esi,[esi+0x4]
 1010dd0:	lea    edi,[edi+0x4]
 1010dd3:	dec    eax
 1010dd4:	jne    0x1010dc9
 1010dd6:	pop    ecx
 1010dd7:	jmp    0x1010ce7
 1010ddc:	int3   
 1010ddd:	int3   
 1010dde:	int3   
 1010ddf:	int3   
 1010de0:	int3   
 1010de1:	mov    edi,edi
 1010de3:	push   ebp
 1010de4:	mov    ebp,esp
 1010de6:	sub    esp,0x18
 1010de9:	push   ebx
 1010dea:	push   esi
 1010deb:	push   edi
 1010dec:	xor    ebx,ebx
 1010dee:	push   0x1
 1010df0:	push   ebx
 1010df1:	push   ebx
 1010df2:	push   DWORD PTR [ebp+0x8]
 1010df5:	mov    DWORD PTR [ebp-0x10],ebx
 1010df8:	mov    DWORD PTR [ebp-0xc],ebx
 1010dfb:	call   0x100dd5d
 1010e00:	mov    DWORD PTR [ebp-0x18],eax
 1010e03:	and    eax,edx
 1010e05:	add    esp,0x10
 1010e08:	mov    DWORD PTR [ebp-0x14],edx
 1010e0b:	cmp    eax,0xffffffff
 1010e0e:	je     0x1010e69
 1010e10:	push   0x2
 1010e12:	push   ebx
 1010e13:	push   ebx
 1010e14:	push   DWORD PTR [ebp+0x8]
 1010e17:	call   0x100dd5d
 1010e1c:	mov    ecx,eax
 1010e1e:	and    ecx,edx
 1010e20:	add    esp,0x10
 1010e23:	cmp    ecx,0xffffffff
 1010e26:	je     0x1010e69
 1010e28:	mov    esi,DWORD PTR [ebp+0xc]
 1010e2b:	mov    edi,DWORD PTR [ebp+0x10]
 1010e2e:	sub    esi,eax
 1010e30:	sbb    edi,edx
 1010e32:	js     0x1010efe
 1010e38:	jg     0x1010e42
 1010e3a:	cmp    esi,ebx
 1010e3c:	jbe    0x1010efe
 1010e42:	mov    ebx,0x1000
 1010e47:	push   ebx
 1010e48:	push   0x8
 1010e4a:	call   DWORD PTR ds:0x10010b4
 1010e50:	push   eax
 1010e51:	call   DWORD PTR ds:0x1001108
 1010e57:	mov    DWORD PTR [ebp-0x4],eax
 1010e5a:	test   eax,eax
 1010e5c:	jne    0x1010e75
 1010e5e:	call   0x100af29
 1010e63:	mov    DWORD PTR [eax],0xc
 1010e69:	call   0x100af29
 1010e6e:	mov    eax,DWORD PTR [eax]
 1010e70:	pop    edi
 1010e71:	pop    esi
 1010e72:	pop    ebx
 1010e73:	leave  
 1010e74:	ret    
 1010e75:	push   0x8000
 1010e7a:	push   DWORD PTR [ebp+0x8]
 1010e7d:	call   0x10115d2
 1010e82:	pop    ecx
 1010e83:	pop    ecx
 1010e84:	mov    DWORD PTR [ebp-0x8],eax
 1010e87:	test   edi,edi
 1010e89:	jl     0x1010e95
 1010e8b:	jg     0x1010e91
 1010e8d:	cmp    esi,ebx
 1010e8f:	jb     0x1010e95
 1010e91:	mov    eax,ebx
 1010e93:	jmp    0x1010e97
 1010e95:	mov    eax,esi
 1010e97:	push   eax
 1010e98:	push   DWORD PTR [ebp-0x4]
 1010e9b:	push   DWORD PTR [ebp+0x8]
 1010e9e:	call   0x100ded6
 1010ea3:	add    esp,0xc
 1010ea6:	cmp    eax,0xffffffff
 1010ea9:	je     0x1010ee1
 1010eab:	cdq    
 1010eac:	sub    esi,eax
 1010eae:	sbb    edi,edx
 1010eb0:	js     0x1010eb8
 1010eb2:	jg     0x1010e87
 1010eb4:	test   esi,esi
 1010eb6:	jne    0x1010e87
 1010eb8:	mov    esi,DWORD PTR [ebp-0x10]
 1010ebb:	push   DWORD PTR [ebp-0x8]
 1010ebe:	push   DWORD PTR [ebp+0x8]
 1010ec1:	call   0x10115d2
 1010ec6:	pop    ecx
 1010ec7:	pop    ecx
 1010ec8:	push   DWORD PTR [ebp-0x4]
 1010ecb:	push   0x0
 1010ecd:	call   DWORD PTR ds:0x10010b4
 1010ed3:	push   eax
 1010ed4:	call   DWORD PTR ds:0x10011b8
 1010eda:	xor    ebx,ebx
 1010edc:	jmp    0x1010f67
 1010ee1:	call   0x100af41
 1010ee6:	cmp    DWORD PTR [eax],0x5
 1010ee9:	jne    0x1010ef6
 1010eeb:	call   0x100af29
 1010ef0:	mov    DWORD PTR [eax],0xd
 1010ef6:	or     esi,0xffffffff
 1010ef9:	mov    DWORD PTR [ebp-0xc],esi
 1010efc:	jmp    0x1010ebb
 1010efe:	cmp    edi,ebx
 1010f00:	jg     0x1010f73
 1010f02:	jl     0x1010f08
 1010f04:	cmp    esi,ebx
 1010f06:	jae    0x1010f73
 1010f08:	push   ebx
 1010f09:	push   DWORD PTR [ebp+0x10]
 1010f0c:	push   DWORD PTR [ebp+0xc]
 1010f0f:	push   DWORD PTR [ebp+0x8]
 1010f12:	call   0x100dd5d
 1010f17:	and    eax,edx
 1010f19:	add    esp,0x10
 1010f1c:	cmp    eax,0xffffffff
 1010f1f:	je     0x1010e69
 1010f25:	push   DWORD PTR [ebp+0x8]
 1010f28:	call   0x100eb08
 1010f2d:	pop    ecx
 1010f2e:	push   eax
 1010f2f:	call   DWORD PTR ds:0x10010b8
 1010f35:	neg    eax
 1010f37:	sbb    eax,eax
 1010f39:	neg    eax
 1010f3b:	dec    eax
 1010f3c:	cdq    
 1010f3d:	mov    DWORD PTR [ebp-0x10],eax
 1010f40:	and    eax,edx
 1010f42:	mov    DWORD PTR [ebp-0xc],edx
 1010f45:	cmp    eax,0xffffffff
 1010f48:	jne    0x1010f73
 1010f4a:	call   0x100af29
 1010f4f:	mov    DWORD PTR [eax],0xd
 1010f55:	call   0x100af41
 1010f5a:	mov    esi,eax
 1010f5c:	call   DWORD PTR ds:0x1001124
 1010f62:	mov    DWORD PTR [esi],eax
 1010f64:	mov    esi,DWORD PTR [ebp-0x10]
 1010f67:	and    esi,DWORD PTR [ebp-0xc]
 1010f6a:	cmp    esi,0xffffffff
 1010f6d:	je     0x1010e69
 1010f73:	push   ebx
 1010f74:	push   DWORD PTR [ebp-0x14]
 1010f77:	push   DWORD PTR [ebp-0x18]
 1010f7a:	push   DWORD PTR [ebp+0x8]
 1010f7d:	call   0x100dd5d
 1010f82:	and    eax,edx
 1010f84:	add    esp,0x10
 1010f87:	cmp    eax,0xffffffff
 1010f8a:	je     0x1010e69
 1010f90:	xor    eax,eax
 1010f92:	jmp    0x1010e70
 1010f97:	int3   
 1010f98:	int3   
 1010f99:	int3   
 1010f9a:	int3   
 1010f9b:	int3   
 1010f9c:	mov    edi,edi
 1010f9e:	push   ebp
 1010f9f:	mov    ebp,esp
 1010fa1:	sub    esp,0x1c
 1010fa4:	mov    edx,DWORD PTR [ebp+0x10]
 1010fa7:	push   esi
 1010fa8:	mov    esi,DWORD PTR [ebp+0x8]
 1010fab:	push   0xfffffffe
 1010fad:	pop    eax
 1010fae:	mov    DWORD PTR [ebp-0x14],eax
 1010fb1:	mov    DWORD PTR [ebp-0x1c],edx
 1010fb4:	cmp    esi,eax
 1010fb6:	jne    0x1010fd3
 1010fb8:	call   0x100af41
 1010fbd:	and    DWORD PTR [eax],0x0
 1010fc0:	call   0x100af29
 1010fc5:	mov    DWORD PTR [eax],0x9
 1010fcb:	or     eax,0xffffffff
 1010fce:	jmp    0x1011550
 1010fd3:	push   ebx
 1010fd4:	xor    ebx,ebx
 1010fd6:	cmp    esi,ebx
 1010fd8:	jl     0x1010fe2
 1010fda:	cmp    esi,DWORD PTR ds:0x1015fc8
 1010fe0:	jb     0x1011001
 1010fe2:	call   0x100af41
 1010fe7:	mov    DWORD PTR [eax],ebx
 1010fe9:	call   0x100af29
 1010fee:	mov    DWORD PTR [eax],0x9
 1010ff4:	call   0x100aecd
 1010ff9:	or     eax,0xffffffff
 1010ffc:	jmp    0x101154f
 1011001:	mov    eax,esi
 1011003:	sar    eax,0x5
 1011006:	push   edi
 1011007:	and    esi,0x1f
 101100a:	lea    edi,[eax*4+0x1015fe0]
 1011011:	mov    eax,DWORD PTR [edi]
 1011013:	shl    esi,0x6
 1011016:	mov    cl,BYTE PTR [eax+esi*1+0x4]
 101101a:	test   cl,0x1
 101101d:	jne    0x1011033
 101101f:	call   0x100af41
 1011024:	mov    DWORD PTR [eax],ebx
 1011026:	call   0x100af29
 101102b:	mov    DWORD PTR [eax],0x9
 1011031:	jmp    0x101109b
 1011033:	cmp    edx,0x7fffffff
 1011039:	ja     0x1011089
 101103b:	mov    DWORD PTR [ebp-0xc],ebx
 101103e:	cmp    edx,ebx
 1011040:	je     0x101154c
 1011046:	test   cl,0x2
 1011049:	jne    0x101154c
 101104f:	cmp    DWORD PTR [ebp+0xc],ebx
 1011052:	je     0x1011089
 1011054:	mov    al,BYTE PTR [eax+esi*1+0x24]
 1011058:	add    al,al
 101105a:	sar    al,1
 101105c:	mov    BYTE PTR [ebp-0x2],al
 101105f:	movsx  eax,al
 1011062:	dec    eax
 1011063:	push   0x4
 1011065:	pop    ecx
 1011066:	je     0x1011081
 1011068:	dec    eax
 1011069:	jne    0x1011079
 101106b:	mov    eax,edx
 101106d:	not    eax
 101106f:	test   al,0x1
 1011071:	je     0x1011089
 1011073:	and    edx,0xfffffffe
 1011076:	mov    DWORD PTR [ebp+0x10],edx
 1011079:	mov    ebx,DWORD PTR [ebp+0xc]
 101107c:	mov    DWORD PTR [ebp-0x10],ebx
 101107f:	jmp    0x10110fb
 1011081:	mov    eax,edx
 1011083:	not    eax
 1011085:	test   al,0x1
 1011087:	jne    0x10110a2
 1011089:	call   0x100af41
 101108e:	mov    DWORD PTR [eax],ebx
 1011090:	call   0x100af29
 1011095:	mov    DWORD PTR [eax],0x16
 101109b:	call   0x100aecd
 10110a0:	jmp    0x10110d8
 10110a2:	mov    eax,edx
 10110a4:	shr    eax,1
 10110a6:	mov    DWORD PTR [ebp+0x10],ecx
 10110a9:	cmp    eax,ecx
 10110ab:	jb     0x10110b0
 10110ad:	mov    DWORD PTR [ebp+0x10],eax
 10110b0:	push   DWORD PTR [ebp+0x10]
 10110b3:	call   0x100dc6f
 10110b8:	mov    ebx,eax
 10110ba:	pop    ecx
 10110bb:	mov    DWORD PTR [ebp-0x10],ebx
 10110be:	test   ebx,ebx
 10110c0:	jne    0x10110e0
 10110c2:	call   0x100af29
 10110c7:	mov    DWORD PTR [eax],0xc
 10110cd:	call   0x100af41
 10110d2:	mov    DWORD PTR [eax],0x8
 10110d8:	or     eax,0xffffffff
 10110db:	jmp    0x101154e
 10110e0:	push   0x1
 10110e2:	push   0x0
 10110e4:	push   0x0
 10110e6:	push   DWORD PTR [ebp+0x8]
 10110e9:	call   0x100dd5d
 10110ee:	mov    ecx,DWORD PTR [edi]
 10110f0:	mov    DWORD PTR [esi+ecx*1+0x28],eax
 10110f4:	add    esp,0x10
 10110f7:	mov    DWORD PTR [esi+ecx*1+0x2c],edx
 10110fb:	mov    ecx,DWORD PTR [edi]
 10110fd:	add    ecx,esi
 10110ff:	test   BYTE PTR [ecx+0x4],0x48
 1011103:	mov    eax,ebx
 1011105:	je     0x1011181
 1011107:	mov    cl,BYTE PTR [ecx+0x5]
 101110a:	cmp    cl,0xa
 101110d:	je     0x1011181
 101110f:	cmp    DWORD PTR [ebp+0x10],0x0
 1011113:	je     0x1011181
 1011115:	dec    DWORD PTR [ebp+0x10]
 1011118:	cmp    BYTE PTR [ebp-0x2],0x0
 101111c:	mov    BYTE PTR [ebx],cl
 101111e:	mov    ecx,DWORD PTR [edi]
 1011120:	lea    eax,[ebx+0x1]
 1011123:	mov    DWORD PTR [ebp-0xc],0x1
 101112a:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
 101112f:	je     0x1011181
 1011131:	mov    ecx,DWORD PTR [edi]
 1011133:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
 1011137:	cmp    cl,0xa
 101113a:	je     0x1011181
 101113c:	cmp    DWORD PTR [ebp+0x10],0x0
 1011140:	je     0x1011181
 1011142:	mov    BYTE PTR [eax],cl
 1011144:	mov    ecx,DWORD PTR [edi]
 1011146:	inc    eax
 1011147:	dec    DWORD PTR [ebp+0x10]
 101114a:	cmp    BYTE PTR [ebp-0x2],0x1
 101114e:	mov    DWORD PTR [ebp-0xc],0x2
 1011155:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
 101115a:	jne    0x1011181
 101115c:	mov    ecx,DWORD PTR [edi]
 101115e:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
 1011162:	cmp    cl,0xa
 1011165:	je     0x1011181
 1011167:	cmp    DWORD PTR [ebp+0x10],0x0
 101116b:	je     0x1011181
 101116d:	mov    BYTE PTR [eax],cl
 101116f:	mov    ecx,DWORD PTR [edi]
 1011171:	inc    eax
 1011172:	dec    DWORD PTR [ebp+0x10]
 1011175:	mov    DWORD PTR [ebp-0xc],0x3
 101117c:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
 1011181:	push   0x0
 1011183:	lea    ecx,[ebp-0x18]
 1011186:	push   ecx
 1011187:	push   DWORD PTR [ebp+0x10]
 101118a:	push   eax
 101118b:	mov    eax,DWORD PTR [edi]
 101118d:	push   DWORD PTR [esi+eax*1]
 1011190:	call   DWORD PTR ds:0x1001064
 1011196:	test   eax,eax
 1011198:	je     0x1011516
 101119e:	mov    ecx,DWORD PTR [ebp-0x18]
 10111a1:	test   ecx,ecx
 10111a3:	js     0x1011516
 10111a9:	cmp    ecx,DWORD PTR [ebp+0x10]
 10111ac:	ja     0x1011516
 10111b2:	mov    eax,DWORD PTR [edi]
 10111b4:	add    DWORD PTR [ebp-0xc],ecx
 10111b7:	lea    eax,[esi+eax*1+0x4]
 10111bb:	test   BYTE PTR [eax],0x80
 10111be:	je     0x10113a8
 10111c4:	cmp    BYTE PTR [ebp-0x2],0x2
 10111c8:	je     0x10113e2
 10111ce:	test   ecx,ecx
 10111d0:	je     0x10111dc
 10111d2:	cmp    BYTE PTR [ebx],0xa
 10111d5:	jne    0x10111dc
 10111d7:	or     BYTE PTR [eax],0x4
 10111da:	jmp    0x10111df
 10111dc:	and    BYTE PTR [eax],0xfb
 10111df:	mov    ebx,DWORD PTR [ebp-0x10]
 10111e2:	mov    eax,DWORD PTR [ebp-0xc]
 10111e5:	add    eax,ebx
 10111e7:	mov    DWORD PTR [ebp+0x10],ebx
 10111ea:	mov    DWORD PTR [ebp-0xc],eax
 10111ed:	cmp    ebx,eax
 10111ef:	jae    0x10112c6
 10111f5:	mov    ecx,DWORD PTR [ebp+0x10]
 10111f8:	mov    al,BYTE PTR [ecx]
 10111fa:	cmp    al,0x1a
 10111fc:	je     0x10112b1
 1011202:	cmp    al,0xd
 1011204:	je     0x1011212
 1011206:	mov    BYTE PTR [ebx],al
 1011208:	inc    ebx
 1011209:	inc    ecx
 101120a:	mov    DWORD PTR [ebp+0x10],ecx
 101120d:	jmp    0x10112a3
 1011212:	mov    eax,DWORD PTR [ebp-0xc]
 1011215:	dec    eax
 1011216:	cmp    ecx,eax
 1011218:	jae    0x1011232
 101121a:	lea    eax,[ecx+0x1]
 101121d:	cmp    BYTE PTR [eax],0xa
 1011220:	jne    0x101122d
 1011222:	add    ecx,0x2
 1011225:	mov    DWORD PTR [ebp+0x10],ecx
 1011228:	mov    BYTE PTR [ebx],0xa
 101122b:	jmp    0x10112a2
 101122d:	mov    DWORD PTR [ebp+0x10],eax
 1011230:	jmp    0x101129f
 1011232:	inc    DWORD PTR [ebp+0x10]
 1011235:	push   0x0
 1011237:	lea    eax,[ebp-0x18]
 101123a:	push   eax
 101123b:	push   0x1
 101123d:	lea    eax,[ebp-0x1]
 1011240:	push   eax
 1011241:	mov    eax,DWORD PTR [edi]
 1011243:	push   DWORD PTR [esi+eax*1]
 1011246:	call   DWORD PTR ds:0x1001064
 101124c:	test   eax,eax
 101124e:	jne    0x101125a
 1011250:	call   DWORD PTR ds:0x1001124
 1011256:	test   eax,eax
 1011258:	jne    0x101129f
 101125a:	cmp    DWORD PTR [ebp-0x18],0x0
 101125e:	je     0x101129f
 1011260:	mov    eax,DWORD PTR [edi]
 1011262:	test   BYTE PTR [esi+eax*1+0x4],0x48
 1011267:	je     0x101127d
 1011269:	cmp    BYTE PTR [ebp-0x1],0xa
 101126d:	je     0x1011228
 101126f:	mov    BYTE PTR [ebx],0xd
 1011272:	mov    eax,DWORD PTR [edi]
 1011274:	mov    cl,BYTE PTR [ebp-0x1]
 1011277:	mov    BYTE PTR [esi+eax*1+0x5],cl
 101127b:	jmp    0x10112a2
 101127d:	cmp    ebx,DWORD PTR [ebp-0x10]
 1011280:	jne    0x1011288
 1011282:	cmp    BYTE PTR [ebp-0x1],0xa
 1011286:	je     0x1011228
 1011288:	push   0x1
 101128a:	push   0xffffffff
 101128c:	push   0xffffffff
 101128e:	push   DWORD PTR [ebp+0x8]
 1011291:	call   0x100dd5d
 1011296:	add    esp,0x10
 1011299:	cmp    BYTE PTR [ebp-0x1],0xa
 101129d:	je     0x10112a3
 101129f:	mov    BYTE PTR [ebx],0xd
 10112a2:	inc    ebx
 10112a3:	mov    eax,DWORD PTR [ebp-0xc]
 10112a6:	cmp    DWORD PTR [ebp+0x10],eax
 10112a9:	jb     0x10111f5
 10112af:	jmp    0x10112c6
 10112b1:	mov    eax,DWORD PTR [edi]
 10112b3:	lea    eax,[esi+eax*1+0x4]
 10112b7:	test   BYTE PTR [eax],0x40
 10112ba:	jne    0x10112c1
 10112bc:	or     BYTE PTR [eax],0x2
 10112bf:	jmp    0x10112c6
 10112c1:	mov    al,BYTE PTR [ecx]
 10112c3:	mov    BYTE PTR [ebx],al
 10112c5:	inc    ebx
 10112c6:	mov    eax,ebx
 10112c8:	sub    eax,DWORD PTR [ebp-0x10]
 10112cb:	cmp    BYTE PTR [ebp-0x2],0x1
 10112cf:	mov    DWORD PTR [ebp-0xc],eax
 10112d2:	jne    0x10113a8
 10112d8:	test   eax,eax
 10112da:	je     0x10113a8
 10112e0:	dec    ebx
 10112e1:	mov    cl,BYTE PTR [ebx]
 10112e3:	test   cl,cl
 10112e5:	js     0x10112ed
 10112e7:	inc    ebx
 10112e8:	jmp    0x1011373
 10112ed:	xor    eax,eax
 10112ef:	inc    eax
 10112f0:	movzx  ecx,cl
 10112f3:	jmp    0x1011304
 10112f5:	cmp    eax,0x4
 10112f8:	jg     0x101130d
 10112fa:	cmp    ebx,DWORD PTR [ebp-0x10]
 10112fd:	jb     0x101130d
 10112ff:	dec    ebx
 1011300:	movzx  ecx,BYTE PTR [ebx]
 1011303:	inc    eax
 1011304:	cmp    BYTE PTR [ecx+0x1013e68],0x0
 101130b:	je     0x10112f5
 101130d:	mov    dl,BYTE PTR [ebx]
 101130f:	movzx  ecx,dl
 1011312:	movsx  ecx,BYTE PTR [ecx+0x1013e68]
 1011319:	test   ecx,ecx
 101131b:	jne    0x101132a
 101131d:	call   0x100af29
 1011322:	mov    DWORD PTR [eax],0x2a
 1011328:	jmp    0x10113a4
 101132a:	inc    ecx
 101132b:	cmp    ecx,eax
 101132d:	jne    0x1011333
 101132f:	add    ebx,eax
 1011331:	jmp    0x1011373
 1011333:	mov    ecx,DWORD PTR [edi]
 1011335:	test   BYTE PTR [ecx+esi*1+0x4],0x48
 101133a:	je     0x1011361
 101133c:	inc    ebx
 101133d:	mov    BYTE PTR [ecx+esi*1+0x5],dl
 1011341:	cmp    eax,0x2
 1011344:	jl     0x101134f
 1011346:	mov    dl,BYTE PTR [ebx]
 1011348:	mov    ecx,DWORD PTR [edi]
 101134a:	mov    BYTE PTR [esi+ecx*1+0x25],dl
 101134e:	inc    ebx
 101134f:	cmp    eax,0x3
 1011352:	jne    0x101135d
 1011354:	mov    dl,BYTE PTR [ebx]
 1011356:	mov    ecx,DWORD PTR [edi]
 1011358:	mov    BYTE PTR [esi+ecx*1+0x26],dl
 101135c:	inc    ebx
 101135d:	sub    ebx,eax
 101135f:	jmp    0x1011373
 1011361:	neg    eax
 1011363:	cdq    
 1011364:	push   0x1
 1011366:	push   edx
 1011367:	push   eax
 1011368:	push   DWORD PTR [ebp+0x8]
 101136b:	call   0x100dd5d
 1011370:	add    esp,0x10
 1011373:	mov    eax,DWORD PTR [ebp-0x1c]
 1011376:	sub    ebx,DWORD PTR [ebp-0x10]
 1011379:	shr    eax,1
 101137b:	push   eax
 101137c:	push   DWORD PTR [ebp+0xc]
 101137f:	push   ebx
 1011380:	push   DWORD PTR [ebp-0x10]
 1011383:	push   0x0
 1011385:	push   0xfde9
 101138a:	call   DWORD PTR ds:0x10010e8
 1011390:	mov    DWORD PTR [ebp-0xc],eax
 1011393:	test   eax,eax
 1011395:	jne    0x10113cb
 1011397:	call   DWORD PTR ds:0x1001124
 101139d:	push   eax
 101139e:	call   0x100af59
 10113a3:	pop    ecx
 10113a4:	or     DWORD PTR [ebp-0x14],0xffffffff
 10113a8:	mov    eax,DWORD PTR [ebp-0x10]
 10113ab:	cmp    eax,DWORD PTR [ebp+0xc]
 10113ae:	je     0x10113b7
 10113b0:	push   eax
 10113b1:	call   0x100af81
 10113b6:	pop    ecx
 10113b7:	mov    eax,DWORD PTR [ebp-0x14]
 10113ba:	cmp    eax,0xfffffffe
 10113bd:	jne    0x101154e
 10113c3:	mov    eax,DWORD PTR [ebp-0xc]
 10113c6:	jmp    0x101154e
 10113cb:	mov    eax,DWORD PTR [ebp-0xc]
 10113ce:	mov    edx,DWORD PTR [edi]
 10113d0:	xor    ecx,ecx
 10113d2:	cmp    eax,ebx
 10113d4:	setne  cl
 10113d7:	add    eax,eax
 10113d9:	mov    DWORD PTR [ebp-0xc],eax
 10113dc:	mov    DWORD PTR [esi+edx*1+0x30],ecx
 10113e0:	jmp    0x10113a8
 10113e2:	test   ecx,ecx
 10113e4:	je     0x10113f1
 10113e6:	cmp    WORD PTR [ebx],0xa
 10113ea:	jne    0x10113f1
 10113ec:	or     BYTE PTR [eax],0x4
 10113ef:	jmp    0x10113f4
 10113f1:	and    BYTE PTR [eax],0xfb
 10113f4:	mov    ebx,DWORD PTR [ebp-0x10]
 10113f7:	mov    eax,DWORD PTR [ebp-0xc]
 10113fa:	add    eax,ebx
 10113fc:	mov    DWORD PTR [ebp+0x10],ebx
 10113ff:	mov    DWORD PTR [ebp-0xc],eax
 1011402:	cmp    ebx,eax
 1011404:	jae    0x101150b
 101140a:	mov    eax,DWORD PTR [ebp+0x10]
 101140d:	movzx  ecx,WORD PTR [eax]
 1011410:	cmp    ecx,0x1a
 1011413:	je     0x10114f2
 1011419:	cmp    ecx,0xd
 101141c:	je     0x101142f
 101141e:	mov    WORD PTR [ebx],cx
 1011421:	add    ebx,0x2
 1011424:	add    eax,0x2
 1011427:	mov    DWORD PTR [ebp+0x10],eax
 101142a:	jmp    0x10114e4
 101142f:	mov    ecx,DWORD PTR [ebp-0xc]
 1011432:	add    ecx,0xfffffffe
 1011435:	cmp    eax,ecx
 1011437:	jae    0x1011457
 1011439:	lea    ecx,[eax+0x2]
 101143c:	cmp    WORD PTR [ecx],0xa
 1011440:	jne    0x101144f
 1011442:	add    eax,0x4
 1011445:	mov    DWORD PTR [ebp+0x10],eax
 1011448:	push   0xa
 101144a:	jmp    0x10114dd
 101144f:	mov    DWORD PTR [ebp+0x10],ecx
 1011452:	jmp    0x10114db
 1011457:	add    DWORD PTR [ebp+0x10],0x2
 101145b:	push   0x0
 101145d:	lea    eax,[ebp-0x18]
 1011460:	push   eax
 1011461:	push   0x2
 1011463:	lea    eax,[ebp-0x8]
 1011466:	push   eax
 1011467:	mov    eax,DWORD PTR [edi]
 1011469:	push   DWORD PTR [esi+eax*1]
 101146c:	call   DWORD PTR ds:0x1001064
 1011472:	test   eax,eax
 1011474:	jne    0x1011480
 1011476:	call   DWORD PTR ds:0x1001124
 101147c:	test   eax,eax
 101147e:	jne    0x10114db
 1011480:	cmp    DWORD PTR [ebp-0x18],0x0
 1011484:	je     0x10114db
 1011486:	mov    eax,DWORD PTR [edi]
 1011488:	test   BYTE PTR [esi+eax*1+0x4],0x48
 101148d:	je     0x10114b7
 101148f:	cmp    WORD PTR [ebp-0x8],0xa
 1011494:	je     0x1011448
 1011496:	push   0xd
 1011498:	pop    eax
 1011499:	mov    WORD PTR [ebx],ax
 101149c:	mov    eax,DWORD PTR [edi]
 101149e:	mov    cl,BYTE PTR [ebp-0x8]
 10114a1:	mov    BYTE PTR [esi+eax*1+0x5],cl
 10114a5:	mov    eax,DWORD PTR [edi]
 10114a7:	mov    cl,BYTE PTR [ebp-0x7]
 10114aa:	mov    BYTE PTR [esi+eax*1+0x25],cl
 10114ae:	mov    eax,DWORD PTR [edi]
 10114b0:	mov    BYTE PTR [esi+eax*1+0x26],0xa
 10114b5:	jmp    0x10114e1
 10114b7:	cmp    ebx,DWORD PTR [ebp-0x10]
 10114ba:	jne    0x10114c3
 10114bc:	cmp    WORD PTR [ebp-0x8],0xa
 10114c1:	je     0x1011448
 10114c3:	push   0x1
 10114c5:	push   0xffffffff
 10114c7:	push   0xfffffffe
 10114c9:	push   DWORD PTR [ebp+0x8]
 10114cc:	call   0x100dd5d
 10114d1:	add    esp,0x10
 10114d4:	cmp    WORD PTR [ebp-0x8],0xa
 10114d9:	je     0x10114e4
 10114db:	push   0xd
 10114dd:	pop    eax
 10114de:	mov    WORD PTR [ebx],ax
 10114e1:	add    ebx,0x2
 10114e4:	mov    eax,DWORD PTR [ebp-0xc]
 10114e7:	cmp    DWORD PTR [ebp+0x10],eax
 10114ea:	jb     0x101140a
 10114f0:	jmp    0x101150b
 10114f2:	mov    ecx,DWORD PTR [edi]
 10114f4:	lea    esi,[esi+ecx*1+0x4]
 10114f8:	test   BYTE PTR [esi],0x40
 10114fb:	jne    0x1011502
 10114fd:	or     BYTE PTR [esi],0x2
 1011500:	jmp    0x101150b
 1011502:	mov    ax,WORD PTR [eax]
 1011505:	mov    WORD PTR [ebx],ax
 1011508:	add    ebx,0x2
 101150b:	sub    ebx,DWORD PTR [ebp-0x10]
 101150e:	mov    DWORD PTR [ebp-0xc],ebx
 1011511:	jmp    0x10113a8
 1011516:	call   DWORD PTR ds:0x1001124
 101151c:	push   0x5
 101151e:	pop    esi
 101151f:	cmp    eax,esi
 1011521:	jne    0x101153a
 1011523:	call   0x100af29
 1011528:	mov    DWORD PTR [eax],0x9
 101152e:	call   0x100af41
 1011533:	mov    DWORD PTR [eax],esi
 1011535:	jmp    0x10113a4
 101153a:	cmp    eax,0x6d
 101153d:	jne    0x101139d
 1011543:	and    DWORD PTR [ebp-0x14],0x0
 1011547:	jmp    0x10113a8
 101154c:	xor    eax,eax
 101154e:	pop    edi
 101154f:	pop    ebx
 1011550:	pop    esi
 1011551:	leave  
 1011552:	ret    
 1011553:	int3   
 1011554:	int3   
 1011555:	int3   
 1011556:	int3   
 1011557:	int3   
 1011558:	mov    edi,edi
 101155a:	push   ebp
 101155b:	mov    ebp,esp
 101155d:	push   esi
 101155e:	mov    esi,DWORD PTR [ebp+0x8]
 1011561:	push   esi
 1011562:	call   0x100eb08
 1011567:	pop    ecx
 1011568:	cmp    eax,0xffffffff
 101156b:	jne    0x101157d
 101156d:	call   0x100af29
 1011572:	mov    DWORD PTR [eax],0x9
 1011578:	or     eax,0xffffffff
 101157b:	jmp    0x10115ca
 101157d:	push   edi
 101157e:	push   DWORD PTR [ebp+0x10]
 1011581:	push   0x0
 1011583:	push   DWORD PTR [ebp+0xc]
 1011586:	push   eax
 1011587:	call   DWORD PTR ds:0x10010dc
 101158d:	mov    edi,eax
 101158f:	cmp    edi,0xffffffff
 1011592:	jne    0x101159c
 1011594:	call   DWORD PTR ds:0x1001124
 101159a:	jmp    0x101159e
 101159c:	xor    eax,eax
 101159e:	test   eax,eax
 10115a0:	je     0x10115ae
 10115a2:	push   eax
 10115a3:	call   0x100af59
 10115a8:	pop    ecx
 10115a9:	or     eax,0xffffffff
 10115ac:	jmp    0x10115c9
 10115ae:	mov    eax,esi
 10115b0:	sar    eax,0x5
 10115b3:	mov    eax,DWORD PTR [eax*4+0x1015fe0]
 10115ba:	and    esi,0x1f
 10115bd:	shl    esi,0x6
 10115c0:	lea    eax,[eax+esi*1+0x4]
 10115c4:	and    BYTE PTR [eax],0xfd
 10115c7:	mov    eax,edi
 10115c9:	pop    edi
 10115ca:	pop    esi
 10115cb:	pop    ebp
 10115cc:	ret    
 10115cd:	int3   
 10115ce:	int3   
 10115cf:	int3   
 10115d0:	int3   
 10115d1:	int3   
 10115d2:	mov    edi,edi
 10115d4:	push   ebp
 10115d5:	mov    ebp,esp
 10115d7:	push   ebx
 10115d8:	mov    ebx,DWORD PTR [ebp+0xc]
 10115db:	push   esi
 10115dc:	mov    esi,DWORD PTR [ebp+0x8]
 10115df:	mov    eax,esi
 10115e1:	sar    eax,0x5
 10115e4:	lea    edx,[eax*4+0x1015fe0]
 10115eb:	mov    ecx,DWORD PTR [edx]
 10115ed:	and    esi,0x1f
 10115f0:	shl    esi,0x6
 10115f3:	add    ecx,esi
 10115f5:	mov    al,BYTE PTR [ecx+0x24]
 10115f8:	add    al,al
 10115fa:	push   edi
 10115fb:	movzx  edi,BYTE PTR [ecx+0x4]
 10115ff:	movsx  eax,al
 1011602:	and    edi,0x80
 1011608:	sar    eax,1
 101160a:	cmp    ebx,0x4000
 1011610:	je     0x1011662
 1011612:	cmp    ebx,0x8000
 1011618:	je     0x101165c
 101161a:	cmp    ebx,0x10000
 1011620:	je     0x1011648
 1011622:	cmp    ebx,0x20000
 1011628:	je     0x1011648
 101162a:	cmp    ebx,0x40000
 1011630:	jne    0x101166f
 1011632:	or     BYTE PTR [ecx+0x4],0x80
 1011636:	mov    ecx,DWORD PTR [edx]
 1011638:	lea    ecx,[ecx+esi*1+0x24]
 101163c:	mov    dl,BYTE PTR [ecx]
 101163e:	and    dl,0x81
 1011641:	or     dl,0x1
 1011644:	mov    BYTE PTR [ecx],dl
 1011646:	jmp    0x101166f
 1011648:	or     BYTE PTR [ecx+0x4],0x80
 101164c:	mov    ecx,DWORD PTR [edx]
 101164e:	lea    ecx,[ecx+esi*1+0x24]
 1011652:	mov    dl,BYTE PTR [ecx]
 1011654:	and    dl,0x82
 1011657:	or     dl,0x2
 101165a:	jmp    0x1011644
 101165c:	and    BYTE PTR [ecx+0x4],0x7f
 1011660:	jmp    0x101166f
 1011662:	or     BYTE PTR [ecx+0x4],0x80
 1011666:	mov    ecx,DWORD PTR [edx]
 1011668:	lea    ecx,[ecx+esi*1+0x24]
 101166c:	and    BYTE PTR [ecx],0x80
 101166f:	test   edi,edi
 1011671:	pop    edi
 1011672:	pop    esi
 1011673:	pop    ebx
 1011674:	jne    0x101167d
 1011676:	mov    eax,0x8000
 101167b:	pop    ebp
 101167c:	ret    
 101167d:	neg    eax
 101167f:	sbb    eax,eax
 1011681:	and    eax,0xc000
 1011686:	add    eax,0x4000
 101168b:	pop    ebp
 101168c:	ret    
 101168d:	int3   
 101168e:	int3   
 101168f:	int3   
 1011690:	int3   
 1011691:	int3   
 1011692:	mov    edi,edi
 1011694:	push   ebp
 1011695:	mov    ebp,esp
 1011697:	mov    eax,DWORD PTR [ebp+0x8]
 101169a:	test   eax,eax
 101169c:	jne    0x10116b3
 101169e:	call   0x100af29
 10116a3:	mov    DWORD PTR [eax],0x16
 10116a9:	call   0x100aecd
 10116ae:	push   0x16
 10116b0:	pop    eax
 10116b1:	pop    ebp
 10116b2:	ret    
 10116b3:	mov    ecx,DWORD PTR ds:0x1014fac
 10116b9:	mov    DWORD PTR [eax],ecx
 10116bb:	xor    eax,eax
 10116bd:	pop    ebp
 10116be:	ret    
 10116bf:	int3   
 10116c0:	int3   
 10116c1:	int3   
 10116c2:	int3   
 10116c3:	int3   
 10116c4:	mov    edi,edi
 10116c6:	push   ebp
 10116c7:	mov    ebp,esp
 10116c9:	sub    esp,0x10
 10116cc:	cmp    DWORD PTR [ebp+0x10],0x0
 10116d0:	push   ebx
 10116d1:	push   esi
 10116d2:	push   edi
 10116d3:	je     0x101179f
 10116d9:	push   DWORD PTR [ebp+0x14]
 10116dc:	lea    ecx,[ebp-0x10]
 10116df:	call   0x10086a4
 10116e4:	mov    ebx,DWORD PTR [ebp+0x8]
 10116e7:	test   ebx,ebx
 10116e9:	jne    0x1011712
 10116eb:	call   0x100af29
 10116f0:	mov    DWORD PTR [eax],0x16
 10116f6:	call   0x100aecd
 10116fb:	cmp    BYTE PTR [ebp-0x4],0x0
 10116ff:	je     0x1011708
 1011701:	mov    eax,DWORD PTR [ebp-0x8]
 1011704:	and    DWORD PTR [eax+0x70],0xfffffffd
 1011708:	mov    eax,0x7fffffff
 101170d:	jmp    0x10117a1
 1011712:	mov    esi,DWORD PTR [ebp+0xc]
 1011715:	test   esi,esi
 1011717:	je     0x10116eb
 1011719:	mov    edi,0x7fffffff
 101171e:	cmp    DWORD PTR [ebp+0x10],edi
 1011721:	jbe    0x1011744
 1011723:	call   0x100af29
 1011728:	mov    DWORD PTR [eax],0x16
 101172e:	call   0x100aecd
 1011733:	cmp    BYTE PTR [ebp-0x4],0x0
 1011737:	je     0x1011740
 1011739:	mov    eax,DWORD PTR [ebp-0x8]
 101173c:	and    DWORD PTR [eax+0x70],0xfffffffd
 1011740:	mov    eax,edi
 1011742:	jmp    0x10117a1
 1011744:	mov    eax,DWORD PTR [ebp-0x10]
 1011747:	cmp    DWORD PTR [eax+0x14],0x0
 101174b:	jne    0x1011769
 101174d:	push   DWORD PTR [ebp+0x10]
 1011750:	push   esi
 1011751:	push   ebx
 1011752:	call   0x1011960
 1011757:	add    esp,0xc
 101175a:	cmp    BYTE PTR [ebp-0x4],0x0
 101175e:	je     0x10117a1
 1011760:	mov    ecx,DWORD PTR [ebp-0x8]
 1011763:	and    DWORD PTR [ecx+0x70],0xfffffffd
 1011767:	jmp    0x10117a1
 1011769:	sub    ebx,esi
 101176b:	movzx  eax,BYTE PTR [ebx+esi*1]
 101176f:	lea    ecx,[ebp-0x10]
 1011772:	push   ecx
 1011773:	push   eax
 1011774:	call   0x1011843
 1011779:	mov    edi,eax
 101177b:	movzx  eax,BYTE PTR [esi]
 101177e:	lea    ecx,[ebp-0x10]
 1011781:	push   ecx
 1011782:	push   eax
 1011783:	call   0x1011843
 1011788:	add    esp,0x10
 101178b:	inc    esi
 101178c:	dec    DWORD PTR [ebp+0x10]
 101178f:	je     0x1011799
 1011791:	test   edi,edi
 1011793:	je     0x1011799
 1011795:	cmp    edi,eax
 1011797:	je     0x101176b
 1011799:	sub    edi,eax
 101179b:	mov    eax,edi
 101179d:	jmp    0x101175a
 101179f:	xor    eax,eax
 10117a1:	pop    edi
 10117a2:	pop    esi
 10117a3:	pop    ebx
 10117a4:	leave  
 10117a5:	ret    
 10117a6:	int3   
 10117a7:	int3   
 10117a8:	int3   
 10117a9:	int3   
 10117aa:	int3   
 10117ab:	mov    edi,edi
 10117ad:	push   ebp
 10117ae:	mov    ebp,esp
 10117b0:	xor    eax,eax
 10117b2:	cmp    DWORD PTR ds:0x1014dc4,eax
 10117b8:	jne    0x10117ea
 10117ba:	cmp    DWORD PTR [ebp+0x8],eax
 10117bd:	jne    0x10117d6
 10117bf:	call   0x100af29
 10117c4:	mov    DWORD PTR [eax],0x16
 10117ca:	call   0x100aecd
 10117cf:	mov    eax,0x7fffffff
 10117d4:	pop    ebp
 10117d5:	ret    
 10117d6:	cmp    DWORD PTR [ebp+0xc],eax
 10117d9:	je     0x10117bf
 10117db:	cmp    DWORD PTR [ebp+0x10],0x7fffffff
 10117e2:	ja     0x10117bf
 10117e4:	pop    ebp
 10117e5:	jmp    0x1011960
 10117ea:	push   eax
 10117eb:	push   DWORD PTR [ebp+0x10]
 10117ee:	push   DWORD PTR [ebp+0xc]
 10117f1:	push   DWORD PTR [ebp+0x8]
 10117f4:	call   0x10116c4
 10117f9:	add    esp,0x10
 10117fc:	pop    ebp
 10117fd:	ret    
 10117fe:	int3   
 10117ff:	int3   
 1011800:	int3   
 1011801:	int3   
 1011802:	int3   
 1011803:	xor    eax,eax
 1011805:	push   eax
 1011806:	push   eax
 1011807:	push   0x3
 1011809:	push   eax
 101180a:	push   0x3
 101180c:	push   0x40000000
 1011811:	push   0x100419c
 1011816:	call   DWORD PTR ds:0x1001110
 101181c:	mov    ds:0x1013f68,eax
 1011821:	ret    
 1011822:	int3   
 1011823:	int3   
 1011824:	int3   
 1011825:	int3   
 1011826:	int3   
 1011827:	mov    eax,ds:0x1013f68
 101182c:	cmp    eax,0xffffffff
 101182f:	je     0x101183d
 1011831:	cmp    eax,0xfffffffe
 1011834:	je     0x101183d
 1011836:	push   eax
 1011837:	call   DWORD PTR ds:0x1001090
 101183d:	ret    
 101183e:	int3   
 101183f:	int3   
 1011840:	int3   
 1011841:	int3   
 1011842:	int3   
 1011843:	mov    edi,edi
 1011845:	push   ebp
 1011846:	mov    ebp,esp
 1011848:	sub    esp,0x18
 101184b:	push   ebx
 101184c:	push   esi
 101184d:	push   DWORD PTR [ebp+0xc]
 1011850:	lea    ecx,[ebp-0x18]
 1011853:	call   0x10086a4
 1011858:	mov    ebx,DWORD PTR [ebp+0x8]
 101185b:	mov    esi,0x100
 1011860:	cmp    ebx,esi
 1011862:	jae    0x10118b8
 1011864:	mov    ecx,DWORD PTR [ebp-0x18]
 1011867:	cmp    DWORD PTR [ecx+0xac],0x1
 101186e:	jle    0x1011884
 1011870:	lea    eax,[ebp-0x18]
 1011873:	push   eax
 1011874:	push   0x1
 1011876:	push   ebx
 1011877:	call   0x10108d5
 101187c:	mov    ecx,DWORD PTR [ebp-0x18]
 101187f:	add    esp,0xc
 1011882:	jmp    0x1011891
 1011884:	mov    eax,DWORD PTR [ecx+0xc8]
 101188a:	movzx  eax,WORD PTR [eax+ebx*2]
 101188e:	and    eax,0x1
 1011891:	test   eax,eax
 1011893:	je     0x10118a4
 1011895:	mov    eax,DWORD PTR [ecx+0xcc]
 101189b:	movzx  eax,BYTE PTR [eax+ebx*1]
 101189f:	jmp    0x1011947
 10118a4:	cmp    BYTE PTR [ebp-0xc],0x0
 10118a8:	je     0x10118b1
 10118aa:	mov    eax,DWORD PTR [ebp-0x10]
 10118ad:	and    DWORD PTR [eax+0x70],0xfffffffd
 10118b1:	mov    eax,ebx
 10118b3:	jmp    0x1011954
 10118b8:	mov    eax,DWORD PTR [ebp-0x18]
 10118bb:	cmp    DWORD PTR [eax+0xac],0x1
 10118c2:	jle    0x10118f5
 10118c4:	mov    DWORD PTR [ebp+0x8],ebx
 10118c7:	sar    DWORD PTR [ebp+0x8],0x8
 10118cb:	lea    eax,[ebp-0x18]
 10118ce:	push   eax
 10118cf:	mov    eax,DWORD PTR [ebp+0x8]
 10118d2:	and    eax,0xff
 10118d7:	push   eax
 10118d8:	call   0x100e8f1
 10118dd:	pop    ecx
 10118de:	pop    ecx
 10118df:	test   eax,eax
 10118e1:	je     0x10118f5
 10118e3:	mov    al,BYTE PTR [ebp+0x8]
 10118e6:	push   0x2
 10118e8:	mov    BYTE PTR [ebp-0x4],al
 10118eb:	mov    BYTE PTR [ebp-0x3],bl
 10118ee:	mov    BYTE PTR [ebp-0x2],0x0
 10118f2:	pop    ecx
 10118f3:	jmp    0x101190a
 10118f5:	call   0x100af29
 10118fa:	mov    DWORD PTR [eax],0x2a
 1011900:	xor    ecx,ecx
 1011902:	mov    BYTE PTR [ebp-0x4],bl
 1011905:	mov    BYTE PTR [ebp-0x3],0x0
 1011909:	inc    ecx
 101190a:	mov    eax,DWORD PTR [ebp-0x18]
 101190d:	push   0x1
 101190f:	push   DWORD PTR [eax+0x4]
 1011912:	lea    edx,[ebp-0x8]
 1011915:	push   0x3
 1011917:	push   edx
 1011918:	push   ecx
 1011919:	lea    ecx,[ebp-0x4]
 101191c:	push   ecx
 101191d:	push   esi
 101191e:	push   DWORD PTR [eax+0x14]
 1011921:	lea    eax,[ebp-0x18]
 1011924:	push   eax
 1011925:	call   0x100cf84
 101192a:	add    esp,0x24
 101192d:	test   eax,eax
 101192f:	je     0x10118a4
 1011935:	cmp    eax,0x1
 1011938:	movzx  eax,BYTE PTR [ebp-0x8]
 101193c:	je     0x1011947
 101193e:	movzx  ecx,BYTE PTR [ebp-0x7]
 1011942:	shl    eax,0x8
 1011945:	or     eax,ecx
 1011947:	cmp    BYTE PTR [ebp-0xc],0x0
 101194b:	je     0x1011954
 101194d:	mov    ecx,DWORD PTR [ebp-0x10]
 1011950:	and    DWORD PTR [ecx+0x70],0xfffffffd
 1011954:	pop    esi
 1011955:	pop    ebx
 1011956:	leave  
 1011957:	ret    
 1011958:	int3   
 1011959:	int3   
 101195a:	int3   
 101195b:	int3   
 101195c:	int3   
 101195d:	int3   
 101195e:	int3   
 101195f:	int3   
 1011960:	push   ebp
 1011961:	mov    ebp,esp
 1011963:	push   edi
 1011964:	push   esi
 1011965:	push   ebx
 1011966:	mov    ecx,DWORD PTR [ebp+0x10]
 1011969:	or     ecx,ecx
 101196b:	je     0x10119ba
 101196d:	mov    esi,DWORD PTR [ebp+0x8]
 1011970:	mov    edi,DWORD PTR [ebp+0xc]
 1011973:	mov    bh,0x41
 1011975:	mov    bl,0x5a
 1011977:	mov    dh,0x20
 1011979:	lea    ecx,[ecx+0x0]
 101197c:	mov    ah,BYTE PTR [esi]
 101197e:	or     ah,ah
 1011980:	mov    al,BYTE PTR [edi]
 1011982:	je     0x10119ab
 1011984:	or     al,al
 1011986:	je     0x10119ab
 1011988:	add    esi,0x1
 101198b:	add    edi,0x1
 101198e:	cmp    ah,bh
 1011990:	jb     0x1011998
 1011992:	cmp    ah,bl
 1011994:	ja     0x1011998
 1011996:	add    ah,dh
 1011998:	cmp    al,bh
 101199a:	jb     0x10119a2
 101199c:	cmp    al,bl
 101199e:	ja     0x10119a2
 10119a0:	add    al,dh
 10119a2:	cmp    ah,al
 10119a4:	jne    0x10119b1
 10119a6:	sub    ecx,0x1
 10119a9:	jne    0x101197c
 10119ab:	xor    ecx,ecx
 10119ad:	cmp    ah,al
 10119af:	je     0x10119ba
 10119b1:	mov    ecx,0xffffffff
 10119b6:	jb     0x10119ba
 10119b8:	neg    ecx
 10119ba:	mov    eax,ecx
 10119bc:	pop    ebx
 10119bd:	pop    esi
 10119be:	pop    edi
 10119bf:	leave  
 10119c0:	ret    
 10119c1:	int3   
 10119c2:	int3   
 10119c3:	int3   
 10119c4:	int3   
 10119c5:	int3   
 10119c6:	jmp    DWORD PTR ds:0x1001228
 10119cc:	int3   
 10119cd:	int3   
 10119ce:	int3   
 10119cf:	int3   
 10119d0:	int3   
 10119d1:	int3   
 10119d2:	jmp    DWORD PTR ds:0x100122c
 10119d8:	int3   
 10119d9:	int3   
 10119da:	int3   
 10119db:	int3   
 10119dc:	int3   
 10119dd:	int3   
 10119de:	jmp    DWORD PTR ds:0x1001224
 10119e4:	int3   
 10119e5:	int3   
 10119e6:	int3   
 10119e7:	int3   
 10119e8:	int3   
 10119e9:	int3   
 10119ea:	jmp    DWORD PTR ds:0x100110c
 10119f0:	int3   
 10119f1:	int3   
 10119f2:	int3   
 10119f3:	int3   
 10119f4:	int3   
 10119f5:	mov    DWORD PTR ds:0x10142e0,0x1002220
 10119ff:	mov    ecx,0x10142e0
 1011a04:	jmp    0x100bee8
 1011a09:	int3   
 1011a0a:	int3   
 1011a0b:	int3   
 1011a0c:	int3   
 1011a0d:	int3   
 1011a0e:	int3   
 1011a0f:	int3   
 1011a10:	(bad)  
 1011a11:	(bad)  
 1011a12:	(bad)  
 1011a13:	inc    DWORD PTR [eax]
 1011a15:	add    BYTE PTR [eax],al
 1011a17:	add    BYTE PTR [eax+0xffffff],cl
 1011a1d:	add    BYTE PTR [eax],al
 1011a1f:	add    dh,bh
 1011a21:	(bad)  
 1011a22:	(bad)  
 1011a23:	jmp    FWORD PTR [ebx-0x40feff83]
 1011a29:	jge    0x1011a2b
 1011a2b:	add    DWORD PTR [eax],eax
 1011a2d:	add    BYTE PTR [eax],al
 1011a2f:	add    dh,bh
 1011a31:	(bad)  
 1011a32:	(bad)  
 1011a33:	inc    DWORD PTR [eax]
 1011a35:	add    BYTE PTR [eax],al
 1011a37:	add    ah,dl
 1011a39:	(bad)  
 1011a3a:	(bad)  
 1011a3b:	inc    DWORD PTR [eax]
 1011a3d:	add    BYTE PTR [eax],al
 1011a3f:	add    dh,bh
 1011a41:	(bad)  
 1011a42:	(bad)  
 1011a43:	inc    DWORD PTR [eax]
 1011a45:	add    BYTE PTR [eax],al
 1011a47:	add    BYTE PTR [ebx+0x1007f],ch
 1011a4d:	add    BYTE PTR [eax],al
 1011a4f:	add    dh,bh
 1011a51:	(bad)  
 1011a52:	(bad)  
 1011a53:	inc    DWORD PTR [eax]
 1011a55:	add    BYTE PTR [eax],al
 1011a57:	add    al,dl
 1011a59:	(bad)  
 1011a5a:	(bad)  
 1011a5b:	inc    DWORD PTR [eax]
 1011a5d:	add    BYTE PTR [eax],al
 1011a5f:	add    dh,bh
 1011a61:	(bad)  
 1011a62:	(bad)  
 1011a63:	inc    DWORD PTR [eax]
 1011a65:	add    BYTE PTR [eax],al
 1011a67:	add    BYTE PTR [esi+0x10080],dh
 1011a6d:	add    BYTE PTR [eax],al
 1011a6f:	add    dh,bh
 1011a71:	(bad)  
 1011a72:	(bad)  
 1011a73:	inc    DWORD PTR [eax]
 1011a75:	add    BYTE PTR [eax],al
 1011a77:	add    ah,dl
 1011a79:	(bad)  
 1011a7a:	(bad)  
 1011a7b:	inc    DWORD PTR [eax]
 1011a7d:	add    BYTE PTR [eax],al
 1011a7f:	add    dh,bh
 1011a81:	(bad)  
 1011a82:	(bad)  
 1011a83:	inc    DWORD PTR [eax]
 1011a85:	add    BYTE PTR [eax],al
 1011a87:	add    BYTE PTR [edx],ch
 1011a89:	add    DWORD PTR [eax],0x1
 1011a8c:	add    BYTE PTR [eax],al
 1011a8e:	add    BYTE PTR [eax],al
 1011a90:	sbb    eax,DWORD PTR [ebp+0x100]
 1011a96:	add    BYTE PTR [eax],al
 1011a98:	pushf  
 1011a99:	sbb    al,BYTE PTR [ecx]
 1011a9b:	add    DWORD PTR [edx],eax
 1011a9d:	add    BYTE PTR [eax],al
 1011a9f:	add    BYTE PTR [eax-0x3bfefee6],ch
 1011aa5:	sbb    al,BYTE PTR [ecx]
 1011aa7:	add    DWORD PTR [eax],eax
 1011aa9:	add    BYTE PTR [eax],al
 1011aab:	add    BYTE PTR [eax+0x30],ah
 1011aae:	add    DWORD PTR [ecx],eax
 1011ab0:	add    BYTE PTR [eax],al
 1011ab2:	add    BYTE PTR [eax],al
 1011ab4:	(bad)  
 1011ab5:	(bad)  
 1011ab6:	(bad)  
 1011ab7:	inc    DWORD PTR [eax]
 1011ab9:	add    BYTE PTR [eax],al
 1011abb:	add    BYTE PTR [eax+eax*1],cl
 1011abe:	add    BYTE PTR [eax],al
 1011ac0:	push   edi
 1011ac1:	test   DWORD PTR [eax],eax
 1011ac3:	add    DWORD PTR [eax],eax
 1011ac5:	add    BYTE PTR [eax],al
 1011ac7:	add    BYTE PTR [eax+esi*1+0x1],bh
 1011acb:	add    DWORD PTR [eax],eax
 1011acd:	add    BYTE PTR [eax],al
 1011acf:	add    bh,bh
 1011ad1:	(bad)  
 1011ad2:	(bad)  
 1011ad3:	inc    DWORD PTR [eax]
 1011ad5:	add    BYTE PTR [eax],al
 1011ad7:	add    BYTE PTR [eax+eax*1],cl
 1011ada:	add    BYTE PTR [eax],al
 1011adc:	and    al,0xbf
 1011ade:	add    BYTE PTR [ecx],al
 1011ae0:	(bad)  
 1011ae1:	(bad)  
 1011ae2:	(bad)  
 1011ae3:	inc    DWORD PTR [eax]
 1011ae5:	add    BYTE PTR [eax],al
 1011ae7:	add    al,al
 1011ae9:	(bad)  
 1011aea:	(bad)  
 1011aeb:	inc    DWORD PTR [eax]
 1011aed:	add    BYTE PTR [eax],al
 1011aef:	add    dh,bh
 1011af1:	(bad)  
 1011af2:	(bad)  
 1011af3:	inc    DWORD PTR [eax]
 1011af5:	add    BYTE PTR [eax],al
 1011af7:	add    BYTE PTR [esi],dl
 1011af9:	lea    eax,[eax]
 1011afb:	add    DWORD PTR [eax],eax
 1011afd:	add    BYTE PTR [eax],al
 1011aff:	add    dh,bh
 1011b01:	(bad)  
 1011b02:	(bad)  
 1011b03:	inc    DWORD PTR [eax]
 1011b05:	add    BYTE PTR [eax],al
 1011b07:	add    al,bl
 1011b09:	(bad)  
 1011b0a:	(bad)  
 1011b0b:	inc    DWORD PTR [eax]
 1011b0d:	add    BYTE PTR [eax],al
 1011b0f:	add    dh,bh
 1011b11:	(bad)  
 1011b12:	(bad)  
 1011b13:	inc    DWORD PTR [eax]
 1011b15:	add    BYTE PTR [eax],al
 1011b17:	add    BYTE PTR [eax],dh
 1011b19:	cdq    
 1011b1a:	add    BYTE PTR [ecx],al
 1011b1c:	(bad)  
 1011b1d:	(bad)  
 1011b1e:	(bad)  
 1011b1f:	inc    DWORD PTR [eax]
 1011b21:	add    BYTE PTR [eax],al
 1011b23:	add    BYTE PTR [edi],bh
 1011b25:	cdq    
 1011b26:	add    BYTE PTR [ecx],al
 1011b28:	(bad)  
 1011b29:	(bad)  
 1011b2a:	(bad)  
 1011b2b:	inc    DWORD PTR [eax]
 1011b2d:	add    BYTE PTR [eax],al
 1011b2f:	add    al,bl
 1011b31:	(bad)  
 1011b32:	(bad)  
 1011b33:	inc    DWORD PTR [eax]
 1011b35:	add    BYTE PTR [eax],al
 1011b37:	add    dh,bh
 1011b39:	(bad)  
 1011b3a:	(bad)  
 1011b3b:	inc    DWORD PTR [eax]
 1011b3d:	add    BYTE PTR [eax],al
 1011b3f:	add    BYTE PTR [ecx],al
 1011b41:	fwait
 1011b42:	add    BYTE PTR [ecx],al
 1011b44:	(bad)  
 1011b45:	(bad)  
 1011b46:	(bad)  
 1011b47:	inc    DWORD PTR [eax]
 1011b49:	add    BYTE PTR [eax],al
 1011b4b:	add    BYTE PTR ds:0xfe01009b,cl
 1011b51:	(bad)  
 1011b52:	(bad)  
 1011b53:	inc    DWORD PTR [eax]
 1011b55:	add    BYTE PTR [eax],al
 1011b57:	add    al,dl
 1011b59:	(bad)  
 1011b5a:	(bad)  
 1011b5b:	inc    DWORD PTR [eax]
 1011b5d:	add    BYTE PTR [eax],al
 1011b5f:	add    dh,bh
 1011b61:	(bad)  
 1011b62:	(bad)  
 1011b63:	inc    DWORD PTR [eax]
 1011b65:	add    BYTE PTR [eax],al
 1011b67:	add    BYTE PTR [edx],bl
 1011b69:	mov    cl,0x0
 1011b6b:	add    DWORD PTR [eax],eax
 1011b6d:	add    BYTE PTR [eax],al
 1011b6f:	add    dh,bh
 1011b71:	(bad)  
 1011b72:	(bad)  
 1011b73:	inc    DWORD PTR [eax]
 1011b75:	add    BYTE PTR [eax],al
 1011b77:	add    ah,cl
 1011b79:	(bad)  
 1011b7a:	(bad)  
 1011b7b:	inc    DWORD PTR [eax]
 1011b7d:	add    BYTE PTR [eax],al
 1011b7f:	add    dh,bh
 1011b81:	(bad)  
 1011b82:	(bad)  
 1011b83:	inc    DWORD PTR [eax]
 1011b85:	add    BYTE PTR [eax],al
 1011b87:	add    BYTE PTR [esi],dl
 1011b89:	mov    bl,0x0
 1011b8b:	add    DWORD PTR [eax],eax
 1011b8d:	add    BYTE PTR [eax],al
 1011b8f:	add    BYTE PTR [eax],al
 1011b91:	add    BYTE PTR [eax],al
 1011b93:	add    dl,ah
 1011b95:	mov    dl,0x0
 1011b97:	add    esi,edi
 1011b99:	(bad)  
 1011b9a:	(bad)  
 1011b9b:	inc    DWORD PTR [eax]
 1011b9d:	add    BYTE PTR [eax],al
 1011b9f:	add    al,dl
 1011ba1:	(bad)  
 1011ba2:	(bad)  
 1011ba3:	inc    DWORD PTR [eax]
 1011ba5:	add    BYTE PTR [eax],al
 1011ba7:	add    dh,bh
 1011ba9:	(bad)  
 1011baa:	(bad)  
 1011bab:	inc    DWORD PTR [eax]
 1011bad:	add    BYTE PTR [eax],al
 1011baf:	add    BYTE PTR [ebx+0x100bb],dl
 1011bb5:	add    BYTE PTR [eax],al
 1011bb7:	add    dh,bh
 1011bb9:	(bad)  
 1011bba:	(bad)  
 1011bbb:	inc    DWORD PTR [eax]
 1011bbd:	add    BYTE PTR [eax],al
 1011bbf:	add    ah,dl
 1011bc1:	(bad)  
 1011bc2:	(bad)  
 1011bc3:	inc    DWORD PTR [eax]
 1011bc5:	add    BYTE PTR [eax],al
 1011bc7:	add    dh,bh
 1011bc9:	(bad)  
 1011bca:	(bad)  
 1011bcb:	inc    DWORD PTR [eax]
 1011bcd:	add    BYTE PTR [eax],al
 1011bcf:	add    BYTE PTR [eax+0x100c0],dh
 1011bd5:	add    BYTE PTR [eax],al
 1011bd7:	add    dh,bh
 1011bd9:	(bad)  
 1011bda:	(bad)  
 1011bdb:	inc    DWORD PTR [eax]
 1011bdd:	add    BYTE PTR [eax],al
 1011bdf:	add    ah,dl
 1011be1:	(bad)  
 1011be2:	(bad)  
 1011be3:	inc    DWORD PTR [eax]
 1011be5:	add    BYTE PTR [eax],al
 1011be7:	add    dh,bh
 1011be9:	(bad)  
 1011bea:	(bad)  
 1011beb:	inc    DWORD PTR [eax]
 1011bed:	add    BYTE PTR [eax],al
 1011bef:	add    BYTE PTR [eax+0x100c5],ah
 1011bf5:	add    BYTE PTR [eax],al
 1011bf7:	add    dh,bh
 1011bf9:	(bad)  
 1011bfa:	(bad)  
 1011bfb:	inc    DWORD PTR [eax]
 1011bfd:	add    BYTE PTR [eax],al
 1011bff:	add    ah,cl
 1011c01:	(bad)  
 1011c02:	(bad)  
 1011c03:	inc    DWORD PTR [eax]
 1011c05:	add    BYTE PTR [eax],al
 1011c07:	add    dh,bh
 1011c09:	(bad)  
 1011c0a:	(bad)  
 1011c0b:	inc    DWORD PTR [eax]
 1011c0d:	add    BYTE PTR [eax],al
 1011c0f:	add    BYTE PTR [ecx+0x100c9],al
 1011c15:	add    BYTE PTR [eax],al
 1011c17:	add    dh,bh
 1011c19:	(bad)  
 1011c1a:	(bad)  
 1011c1b:	inc    DWORD PTR [eax]
 1011c1d:	add    BYTE PTR [eax],al
 1011c1f:	add    ah,dl
 1011c21:	(bad)  
 1011c22:	(bad)  
 1011c23:	inc    DWORD PTR [eax]
 1011c25:	add    BYTE PTR [eax],al
 1011c27:	add    dh,bh
 1011c29:	(bad)  
 1011c2a:	(bad)  
 1011c2b:	inc    DWORD PTR [eax]
 1011c2d:	add    BYTE PTR [eax],al
 1011c2f:	add    BYTE PTR [ebx],ah
 1011c31:	int    0x0
 1011c33:	add    DWORD PTR [eax],eax
 1011c35:	add    BYTE PTR [eax],al
 1011c37:	add    dh,bh
 1011c39:	(bad)  
 1011c3a:	(bad)  
 1011c3b:	inc    DWORD PTR [eax]
 1011c3d:	add    BYTE PTR [eax],al
 1011c3f:	add    al,bl
 1011c41:	(bad)  
 1011c42:	(bad)  
 1011c43:	inc    DWORD PTR [eax]
 1011c45:	add    BYTE PTR [eax],al
 1011c47:	add    dh,bh
 1011c49:	(bad)  
 1011c4a:	(bad)  
 1011c4b:	push   DWORD PTR [ecx-0x4afeff2e]
 1011c51:	rol    BYTE PTR [eax],cl
 1011c53:	add    DWORD PTR [eax],eax
 1011c55:	add    BYTE PTR [eax],al
 1011c57:	add    dh,bh
 1011c59:	(bad)  
 1011c5a:	(bad)  
 1011c5b:	inc    DWORD PTR [eax]
 1011c5d:	add    BYTE PTR [eax],al
 1011c5f:	add    ah,dl
 1011c61:	(bad)  
 1011c62:	(bad)  
 1011c63:	inc    DWORD PTR [eax]
 1011c65:	add    BYTE PTR [eax],al
 1011c67:	add    dh,bh
 1011c69:	(bad)  
 1011c6a:	(bad)  
 1011c6b:	inc    DWORD PTR [eax]
 1011c6d:	add    BYTE PTR [eax],al
 1011c6f:	add    BYTE PTR [ebp-0x2c],ah
 1011c72:	add    BYTE PTR [ecx],al
 1011c74:	add    BYTE PTR [eax],al
 1011c76:	add    BYTE PTR [eax],al
 1011c78:	(bad)  
 1011c79:	(bad)  
 1011c7a:	(bad)  
 1011c7b:	inc    DWORD PTR [eax]
 1011c7d:	add    BYTE PTR [eax],al
 1011c7f:	add    al,al
 1011c81:	(bad)  
 1011c82:	(bad)  
 1011c83:	inc    DWORD PTR [eax]
 1011c85:	add    BYTE PTR [eax],al
 1011c87:	add    dh,bh
 1011c89:	(bad)  
 1011c8a:	(bad)  
 1011c8b:	inc    DWORD PTR [eax]
 1011c8d:	add    BYTE PTR [eax],al
 1011c8f:	add    BYTE PTR [ebp-0x2a],bh
 1011c92:	add    BYTE PTR [ecx],al
 1011c94:	add    BYTE PTR [eax],al
 1011c96:	add    BYTE PTR [eax],al
 1011c98:	(bad)  
 1011c99:	(bad)  
 1011c9a:	(bad)  
 1011c9b:	inc    DWORD PTR [eax]
 1011c9d:	add    BYTE PTR [eax],al
 1011c9f:	add    al,bl
 1011ca1:	(bad)  
 1011ca2:	(bad)  
 1011ca3:	inc    DWORD PTR [eax]
 1011ca5:	add    BYTE PTR [eax],al
 1011ca7:	add    dh,bh
 1011ca9:	(bad)  
 1011caa:	(bad)  
 1011cab:	(bad)  
 1011cac:	cmp    ebx,eax
 1011cae:	add    BYTE PTR [ecx],al
 1011cb0:	dec    esi
 1011cb1:	fadd   DWORD PTR [eax]
 1011cb3:	add    DWORD PTR [eax],eax
 1011cb5:	add    BYTE PTR [eax],al
 1011cb7:	add    dh,bh
 1011cb9:	(bad)  
 1011cba:	(bad)  
 1011cbb:	inc    DWORD PTR [eax]
 1011cbd:	add    BYTE PTR [eax],al
 1011cbf:	add    ah,cl
 1011cc1:	(bad)  
 1011cc2:	(bad)  
 1011cc3:	inc    DWORD PTR [eax]
 1011cc5:	add    BYTE PTR [eax],al
 1011cc7:	add    dh,bh
 1011cc9:	(bad)  
 1011cca:	(bad)  
 1011ccb:	inc    DWORD PTR [eax]
 1011ccd:	add    BYTE PTR [eax],al
 1011ccf:	add    bh,al
 1011cd1:	fiadd  WORD PTR [eax]
 1011cd3:	add    DWORD PTR [eax],eax
 1011cd5:	add    BYTE PTR [eax],al
 1011cd7:	add    dh,bh
 1011cd9:	(bad)  
 1011cda:	(bad)  
 1011cdb:	inc    DWORD PTR [eax]
 1011cdd:	add    BYTE PTR [eax],al
 1011cdf:	add    al,dl
 1011ce1:	(bad)  
 1011ce2:	(bad)  
 1011ce3:	inc    DWORD PTR [eax]
 1011ce5:	add    BYTE PTR [eax],al
 1011ce7:	add    dh,bh
 1011ce9:	(bad)  
 1011cea:	(bad)  
 1011ceb:	inc    DWORD PTR [eax]
 1011ced:	add    BYTE PTR [eax],al
 1011cef:	add    BYTE PTR [ecx+0x100e6],ah
 1011cf5:	add    BYTE PTR [eax],al
 1011cf7:	add    dh,bh
 1011cf9:	(bad)  
 1011cfa:	(bad)  
 1011cfb:	inc    DWORD PTR [eax]
 1011cfd:	add    BYTE PTR [eax],al
 1011cff:	add    ah,dl
 1011d01:	(bad)  
 1011d02:	(bad)  
 1011d03:	inc    DWORD PTR [eax]
 1011d05:	add    BYTE PTR [eax],al
 1011d07:	add    dh,bh
 1011d09:	(bad)  
 1011d0a:	(bad)  
 1011d0b:	inc    DWORD PTR [eax]
 1011d0d:	add    BYTE PTR [eax],al
 1011d0f:	add    BYTE PTR [edi],al
 1011d11:	in     al,dx
 1011d12:	add    BYTE PTR [ecx],al
 1011d14:	add    BYTE PTR [eax],al
 1011d16:	add    BYTE PTR [eax],al
 1011d18:	(bad)  
 1011d19:	(bad)  
 1011d1a:	(bad)  
 1011d1b:	inc    DWORD PTR [eax]
 1011d1d:	add    BYTE PTR [eax],al
 1011d1f:	add    al,cl
 1011d21:	(bad)  
 1011d22:	(bad)  
 1011d23:	inc    DWORD PTR [eax]
 1011d25:	add    BYTE PTR [eax],al
 1011d27:	add    dh,bh
 1011d29:	(bad)  
 1011d2a:	(bad)  
 1011d2b:	inc    DWORD PTR [eax]
 1011d2d:	add    BYTE PTR [eax],al
 1011d2f:	add    dh,dl
 1011d31:	in     eax,dx
 1011d32:	add    BYTE PTR [ecx],al
	...
 1011d3c:	adc    ch,ch
 1011d3e:	add    BYTE PTR [ecx],al
 1011d40:	(bad)  
 1011d41:	(bad)  
 1011d42:	(bad)  
 1011d43:	inc    DWORD PTR [eax]
 1011d45:	add    BYTE PTR [eax],al
 1011d47:	add    al,dl
 1011d49:	(bad)  
 1011d4a:	(bad)  
 1011d4b:	inc    DWORD PTR [eax]
 1011d4d:	add    BYTE PTR [eax],al
 1011d4f:	add    dh,bh
 1011d51:	(bad)  
 1011d52:	(bad)  
 1011d53:	inc    DWORD PTR [eax]
 1011d55:	add    BYTE PTR [eax],al
 1011d57:	add    BYTE PTR [edx+0x100ee],dh
 1011d5d:	add    BYTE PTR [eax],al
 1011d5f:	add    dh,bh
 1011d61:	(bad)  
 1011d62:	(bad)  
 1011d63:	inc    DWORD PTR [eax]
 1011d65:	add    BYTE PTR [eax],al
 1011d67:	add    al,dl
 1011d69:	(bad)  
 1011d6a:	(bad)  
 1011d6b:	inc    DWORD PTR [eax]
 1011d6d:	add    BYTE PTR [eax],al
 1011d6f:	add    dh,bh
 1011d71:	(bad)  
 1011d72:	(bad)  
 1011d73:	inc    DWORD PTR [eax]
 1011d75:	add    BYTE PTR [eax],al
 1011d77:	add    BYTE PTR [ebp-0x11],dl
 1011d7a:	add    BYTE PTR [ecx],al
 1011d7c:	add    BYTE PTR [eax],al
 1011d7e:	add    BYTE PTR [eax],al
 1011d80:	(bad)  
 1011d81:	(bad)  
 1011d82:	(bad)  
 1011d83:	inc    DWORD PTR [eax]
 1011d85:	add    BYTE PTR [eax],al
 1011d87:	add    ah,cl
 1011d89:	(bad)  
 1011d8a:	(bad)  
 1011d8b:	inc    DWORD PTR [eax]
 1011d8d:	add    BYTE PTR [eax],al
 1011d8f:	add    dh,bh
 1011d91:	(bad)  
 1011d92:	(bad)  
 1011d93:	inc    DWORD PTR [eax]
 1011d95:	add    BYTE PTR [eax],al
 1011d97:	add    BYTE PTR [eax+0x100fa],ah
 1011d9d:	add    BYTE PTR [eax],al
 1011d9f:	add    dh,bh
 1011da1:	(bad)  
 1011da2:	(bad)  
 1011da3:	inc    DWORD PTR [eax]
 1011da5:	add    BYTE PTR [eax],al
 1011da7:	add    ah,dl
 1011da9:	(bad)  
 1011daa:	(bad)  
 1011dab:	inc    DWORD PTR [eax]
 1011dad:	add    BYTE PTR [eax],al
 1011daf:	add    dh,bh
 1011db1:	(bad)  
 1011db2:	(bad)  
 1011db3:	inc    DWORD PTR [eax]
 1011db5:	add    BYTE PTR [eax],al
 1011db7:	add    BYTE PTR [eax+eax*1+0x1],al
 1011dbb:	add    DWORD PTR [eax+0x1e],ecx
 1011dbe:	add    DWORD PTR [eax],eax
	...
 1011dc8:	adc    al,0x21
 1011dca:	add    DWORD PTR [eax],eax
 1011dcc:	add    BYTE PTR [eax],dl
 1011dce:	add    BYTE PTR [eax],al
 1011dd0:	mov    al,ds:0x11e
 1011dd5:	add    BYTE PTR [eax],al
 1011dd7:	add    BYTE PTR [eax],al
 1011dd9:	add    BYTE PTR [eax],al
 1011ddb:	add    ah,ch
 1011ddd:	and    al,BYTE PTR [ecx]
 1011ddf:	add    BYTE PTR [eax+0x10],bl
 1011de2:	add    BYTE PTR [eax],al
 1011de4:	jl     0x1011e04
 1011de6:	add    DWORD PTR [eax],eax
	...
 1011df0:	jle    0x1011e15
 1011df2:	add    DWORD PTR [eax],eax
 1011df4:	xor    al,0x10
 1011df6:	add    BYTE PTR [eax],al
 1011df8:	or     BYTE PTR [eax],ah
 1011dfa:	add    DWORD PTR [eax],eax
	...
 1011e04:	or     BYTE PTR ds:0x11c00001,ah
 1011e0a:	add    BYTE PTR [eax],al
 1011e0c:	ins    BYTE PTR es:[edi],dx
 1011e0d:	and    BYTE PTR [ecx],al
	...
 1011e17:	add    BYTE PTR [esi+0x25],dl
 1011e1a:	add    DWORD PTR [eax],eax
 1011e1c:	and    al,0x12
 1011e1e:	add    BYTE PTR [eax],al
 1011e20:	ins    BYTE PTR es:[edi],dx
 1011e21:	push   ds
 1011e22:	add    DWORD PTR [eax],eax
	...
 1011e2c:	nop
 1011e2d:	and    eax,0x10240001
	...
 1011e46:	add    BYTE PTR [eax],al
 1011e48:	jl     0x1011e6a
 1011e4a:	add    DWORD PTR [eax],eax
 1011e4c:	mov    ah,BYTE PTR [eax]
 1011e4e:	add    DWORD PTR [eax],eax
 1011e50:	pushf  
 1011e51:	and    BYTE PTR [ecx],al
 1011e53:	add    BYTE PTR [esi-0x3ffffee0],ch
 1011e59:	and    BYTE PTR [ecx],al
 1011e5b:	add    al,dl
 1011e5d:	and    BYTE PTR [ecx],al
 1011e5f:	add    al,ch
 1011e61:	and    BYTE PTR [ecx],al
 1011e63:	add    BYTE PTR [eax],al
 1011e65:	and    DWORD PTR [ecx],eax
 1011e67:	add    BYTE PTR [eax],al
 1011e69:	add    BYTE PTR [eax],al
 1011e6b:	add    BYTE PTR [ebp+eiz*1+0x1],dh
 1011e6f:	add    BYTE PTR [edx+0x25],ah
 1011e72:	add    DWORD PTR [eax],eax
 1011e74:	adc    DWORD PTR [eax],eax
 1011e76:	add    BYTE PTR [eax+0x0],al
 1011e7c:	inc    eax
 1011e7d:	and    eax,DWORD PTR [ecx]
 1011e7f:	add    BYTE PTR [eax+0x23],dh
 1011e82:	add    DWORD PTR [eax],eax
 1011e84:	bound  esp,QWORD PTR [ebx]
 1011e86:	add    DWORD PTR [eax],eax
 1011e88:	push   esi
 1011e89:	and    eax,DWORD PTR [ecx]
 1011e8b:	add    BYTE PTR [eax],dh
 1011e8d:	and    eax,DWORD PTR [ecx]
 1011e8f:	add    BYTE PTR [edx],bl
 1011e91:	and    eax,DWORD PTR [ecx]
 1011e93:	add    BYTE PTR [edx],cl
 1011e95:	and    eax,DWORD PTR [ecx]
 1011e97:	add    dl,bh
 1011e99:	and    al,BYTE PTR [ecx]
 1011e9b:	add    BYTE PTR [eax],al
 1011e9d:	add    BYTE PTR [eax],al
 1011e9f:	add    BYTE PTR [esi],al
 1011ea1:	and    al,BYTE PTR [ecx]
 1011ea3:	add    BYTE PTR [edx],dl
 1011ea5:	and    al,BYTE PTR [ecx]
 1011ea7:	add    BYTE PTR [edx+eiz*1],ah
 1011eaa:	add    DWORD PTR [eax],eax
 1011eac:	xor    BYTE PTR [edx],ah
 1011eae:	add    DWORD PTR [eax],eax
 1011eb0:	cmp    al,0x22
 1011eb2:	add    DWORD PTR [eax],eax
 1011eb4:	dec    edx
 1011eb5:	and    al,BYTE PTR [ecx]
 1011eb7:	add    BYTE PTR [eax+0x22],bl
 1011eba:	add    DWORD PTR [eax],eax
 1011ebc:	repnz and DWORD PTR [ecx],eax
 1011ebf:	add    BYTE PTR [edx+eiz*1+0x1],bh
 1011ec3:	add    BYTE PTR [edx-0x5dfffede],dl
 1011ec9:	and    al,BYTE PTR [ecx]
 1011ecb:	add    BYTE PTR [edx-0x39fffede],dh
 1011ed1:	and    al,BYTE PTR [ecx]
 1011ed3:	add    dh,dl
 1011ed5:	and    al,BYTE PTR [ecx]
 1011ed7:	add    ah,ah
 1011ed9:	and    DWORD PTR [ecx],eax
 1011edb:	add    ah,dl
 1011edd:	and    DWORD PTR [ecx],eax
 1011edf:	add    ah,al
 1011ee1:	and    DWORD PTR [ecx],eax
 1011ee3:	add    BYTE PTR [edx+0x5c000121],dh
 1011ee9:	and    DWORD PTR [ecx],eax
 1011eeb:	add    BYTE PTR [ecx+eiz*1+0x21920001],ah
 1011ef2:	add    DWORD PTR [eax],eax
 1011ef4:	and    BYTE PTR [ecx],0x1
 1011ef7:	add    BYTE PTR [eax+0x22],dh
 1011efa:	add    DWORD PTR [eax],eax
 1011efc:	lock sub DWORD PTR [ecx],eax
 1011eff:	add    al,ah
 1011f01:	sub    DWORD PTR [ecx],eax
 1011f03:	add    al,dl
 1011f05:	sub    DWORD PTR [ecx],eax
 1011f07:	add    dl,al
 1011f09:	sub    DWORD PTR [ecx],eax
 1011f0b:	add    BYTE PTR [eax-0x5bfffed7],dh
 1011f11:	sub    DWORD PTR [ecx],eax
 1011f13:	add    BYTE PTR [eax-0x7ffffed7],dl
 1011f19:	sub    DWORD PTR [ecx],eax
 1011f1b:	add    BYTE PTR [esi+0x29],ch
 1011f1e:	add    DWORD PTR [eax],eax
 1011f20:	pop    esi
 1011f21:	sub    DWORD PTR [ecx],eax
 1011f23:	add    BYTE PTR [ecx+ebp*1+0x1],cl
 1011f27:	add    BYTE PTR [ecx+ebp*1+0x1],al
 1011f2b:	add    BYTE PTR [ecx+ebp*1],dh
 1011f2e:	add    DWORD PTR [eax],eax
 1011f30:	push   ds
 1011f31:	sub    DWORD PTR [ecx],eax
 1011f33:	add    BYTE PTR [esi],cl
 1011f35:	sub    DWORD PTR [ecx],eax
 1011f37:	add    ah,bh
 1011f39:	sub    BYTE PTR [ecx],al
 1011f3b:	add    al,dh
 1011f3d:	sub    BYTE PTR [ecx],al
 1011f3f:	add    dh,ah
 1011f41:	sub    BYTE PTR [ecx],al
 1011f43:	add    dl,bl
 1011f45:	sub    BYTE PTR [ecx],al
 1011f47:	add    BYTE PTR [esi-0x53fffed8],bh
 1011f4d:	sub    BYTE PTR [ecx],al
 1011f4f:	add    BYTE PTR [eax-0x6bfffed8],ah
 1011f55:	sub    BYTE PTR [ecx],al
 1011f57:	add    BYTE PTR [edx],al
 1011f59:	sub    al,BYTE PTR [ecx]
 1011f5b:	add    BYTE PTR [eax+ebp*1+0x1],bh
 1011f5f:	add    BYTE PTR [eax+ebp*1+0x1],ah
 1011f63:	add    BYTE PTR [esi+0x21],al
 1011f66:	add    DWORD PTR [eax],eax
 1011f68:	xor    ah,BYTE PTR [ecx]
 1011f6a:	add    DWORD PTR [eax],eax
 1011f6c:	and    ah,BYTE PTR [ecx]
 1011f6e:	add    DWORD PTR [eax],eax
 1011f70:	je     0x1011f93
 1011f72:	add    DWORD PTR [eax],eax
 1011f74:	sahf   
 1011f75:	and    eax,0x25b00001
 1011f7a:	add    DWORD PTR [eax],eax
 1011f7c:	(bad)  
 1011f7d:	and    eax,0x25d80001
 1011f82:	add    DWORD PTR [eax],eax
 1011f84:	call   0x70120ae
 1011f89:	add    DWORD PTR es:[eax],eax
 1011f8c:	sbb    ah,BYTE PTR [esi]
 1011f8e:	add    DWORD PTR [eax],eax
 1011f90:	sub    BYTE PTR [esi],ah
 1011f92:	add    DWORD PTR [eax],eax
 1011f94:	cmp    BYTE PTR [esi],ah
 1011f96:	add    DWORD PTR [eax],eax
 1011f98:	inc    esp
 1011f99:	add    DWORD PTR es:[eax],eax
 1011f9c:	push   esp
 1011f9d:	add    DWORD PTR es:[eax],eax
 1011fa0:	push   0x26
 1011fa2:	add    DWORD PTR [eax],eax
 1011fa4:	test   BYTE PTR [esi],ah
 1011fa6:	add    DWORD PTR [eax],eax
 1011fa8:	call   0x126:0xb4000126
 1011faf:	add    dh,al
 1011fb1:	add    DWORD PTR es:[eax],eax
 1011fb4:	out    dx,al
 1011fb5:	add    DWORD PTR es:[eax],eax
 1011fb8:	cld    
 1011fb9:	add    DWORD PTR es:[eax],eax
 1011fbc:	adc    al,0x27
 1011fbe:	add    DWORD PTR [eax],eax
 1011fc0:	and    al,0x27
 1011fc2:	add    DWORD PTR [eax],eax
 1011fc4:	xor    BYTE PTR [edi],ah
 1011fc6:	add    DWORD PTR [eax],eax
 1011fc8:	ds daa 
 1011fca:	add    DWORD PTR [eax],eax
 1011fcc:	dec    esp
 1011fcd:	daa    
 1011fce:	add    DWORD PTR [eax],eax
 1011fd0:	push   esi
 1011fd1:	daa    
 1011fd2:	add    DWORD PTR [eax],eax
 1011fd4:	outs   dx,BYTE PTR ds:[esi]
 1011fd5:	daa    
 1011fd6:	add    DWORD PTR [eax],eax
 1011fd8:	jle    0x1012001
 1011fda:	add    DWORD PTR [eax],eax
 1011fdc:	xchg   esp,eax
 1011fdd:	daa    
 1011fde:	add    DWORD PTR [eax],eax
 1011fe0:	lods   al,BYTE PTR ds:[esi]
 1011fe1:	daa    
 1011fe2:	add    DWORD PTR [eax],eax
 1011fe4:	mov    edx,0xd4000127
 1011fe9:	daa    
 1011fea:	add    DWORD PTR [eax],eax
 1011fec:	in     al,0x27
 1011fee:	add    DWORD PTR [eax],eax
 1011ff0:	cli    
 1011ff1:	daa    
 1011ff2:	add    DWORD PTR [eax],eax
 1011ff4:	adc    al,0x28
 1011ff6:	add    DWORD PTR [eax],eax
 1011ff8:	xor    BYTE PTR [eax],ch
 1011ffa:	add    DWORD PTR [eax],eax
 1011ffc:	inc    esp
 1011ffd:	sub    BYTE PTR [ecx],al
 1011fff:	add    BYTE PTR [eax+0x28],bl
 1012002:	add    DWORD PTR [eax],eax
 1012004:	add    BYTE PTR [eax],al
 1012006:	add    BYTE PTR [eax],al
 1012008:	mov    BYTE PTR [ebx],ah
 101200a:	add    DWORD PTR [eax],eax
 101200c:	xchg   esp,eax
 101200d:	and    eax,DWORD PTR [ecx]
 101200f:	add    dl,bh
 1012011:	and    al,0x1
 1012013:	add    dl,ah
 1012015:	and    al,0x1
 1012017:	add    ah,cl
 1012019:	and    al,0x1
 101201b:	add    BYTE PTR [edx-0x57fffedc],bh
 1012021:	and    al,0x1
 1012023:	add    BYTE PTR [esi-0x79fffedc],dl
 1012029:	and    al,0x1
 101202b:	add    BYTE PTR [edx+0x24],bh
 101202e:	add    DWORD PTR [eax],eax
 1012030:	push   0x5a000124
 1012035:	and    al,0x1
 1012037:	add    BYTE PTR [edx+0x24],cl
 101203a:	add    DWORD PTR [eax],eax
 101203c:	cmp    al,0x24
 101203e:	add    DWORD PTR [eax],eax
 1012040:	sub    BYTE PTR [ecx+eax*1],ah
 1012043:	add    BYTE PTR [eax],bl
 1012045:	and    al,0x1
 1012047:	add    BYTE PTR [edx],cl
 1012049:	and    al,0x1
 101204b:	add    ah,bh
 101204d:	and    eax,DWORD PTR [ecx]
 101204f:	add    dh,ch
 1012051:	and    eax,DWORD PTR [ecx]
 1012053:	add    al,ah
 1012055:	and    eax,DWORD PTR [ecx]
 1012057:	add    dh,cl
 1012059:	and    eax,DWORD PTR [ecx]
 101205b:	add    BYTE PTR [esi-0x57fffedd],bh
 1012061:	and    eax,DWORD PTR [ecx]
 1012063:	add    BYTE PTR [ebx+eiz*1+0x1],bl
 101206a:	add    BYTE PTR [eax],al
 101206c:	inc    esp
 101206d:	and    eax,0x25140001
 1012072:	add    DWORD PTR [eax],eax
 1012074:	sub    ah,BYTE PTR ds:0x1
 101207a:	add    BYTE PTR [eax],al
 101207c:	xor    BYTE PTR [edx],al
 101207e:	push   edx
 101207f:	gs addr16 inc ebx
 1012082:	ins    BYTE PTR es:[edi],dx
 1012083:	outs   dx,DWORD PTR ds:[esi]
 1012084:	jae    0x10120eb
 1012086:	dec    ebx
 1012087:	gs jns 0x101208a
 101208a:	inc    edi
 101208b:	add    dl,BYTE PTR [edx+0x65]
 101208e:	addr16 inc esp
 1012090:	gs ins BYTE PTR es:[edi],dx
 1012092:	gs je  0x10120fa
 1012095:	push   esi
 1012096:	popa   
 1012097:	ins    BYTE PTR es:[edi],dx
 1012098:	jne    0x10120ff
 101209a:	inc    ecx
 101209b:	add    BYTE PTR [ebp+0x2],bh
 101209e:	push   edx
 101209f:	gs addr16 push ebx
 10120a2:	gs je  0x10120fb
 10120a5:	popa   
 10120a6:	ins    BYTE PTR es:[edi],dx
 10120a7:	jne    0x101210e
 10120a9:	inc    ebp
 10120aa:	js     0x10120ed
 10120ac:	add    BYTE PTR [eax],al
 10120ae:	cmp    BYTE PTR [edx],al
 10120b0:	push   edx
 10120b1:	gs addr16 inc ebx
 10120b4:	jb     0x101211b
 10120b6:	popa   
 10120b7:	je     0x101211e
 10120b9:	dec    ebx
 10120ba:	gs jns 0x1012102
 10120bd:	js     0x1012100
 10120bf:	add    BYTE PTR [eax+0x2],ah
 10120c2:	push   edx
 10120c3:	gs addr16 dec edi
 10120c6:	jo     0x101212d
 10120c8:	outs   dx,BYTE PTR ds:[esi]
 10120c9:	dec    ebx
 10120ca:	gs jns 0x1012112
 10120cd:	js     0x1012110
 10120cf:	add    BYTE PTR [edi],bl
 10120d1:	add    BYTE PTR [ecx+0x64],al
 10120d4:	push   0x75
 10120d6:	jae    0x101214c
 10120d8:	push   esp
 10120d9:	outs   dx,DWORD PTR ds:[esi]
 10120da:	imul   esp,DWORD PTR [ebp+0x6e],0x50
 10120de:	jb     0x1012149
 10120e0:	jbe    0x101214b
 10120e2:	ins    BYTE PTR es:[edi],dx
 10120e3:	gs addr16 gs jae 0x10120e8
 10120e8:	xchg   esi,eax
 10120e9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
 10120ed:	imul   esi,DWORD PTR [ebp+0x70],0x50
 10120f1:	jb     0x101215c
 10120f3:	jbe    0x101215e
 10120f5:	ins    BYTE PTR es:[edi],dx
 10120f6:	gs addr16 gs push esi
 10120fa:	popa   
 10120fb:	ins    BYTE PTR es:[edi],dx
 10120fc:	jne    0x1012163
 10120fe:	inc    ecx
 10120ff:	add    bh,dh
 1012101:	add    DWORD PTR [edi+0x70],ecx
 1012104:	outs   dx,BYTE PTR gs:[esi]
 1012106:	push   eax
 1012107:	jb     0x1012178
 1012109:	arpl   WORD PTR [ebp+0x73],sp
 101210c:	jae    0x1012162
 101210e:	outs   dx,DWORD PTR ds:[esi]
 101210f:	imul   esp,DWORD PTR [ebp+0x6e],0x0
 1012113:	add    BYTE PTR [ecx+0x44],al
 1012116:	push   esi
 1012117:	inc    ecx
 1012118:	push   eax
 1012119:	dec    ecx
 101211a:	xor    esi,DWORD PTR [edx]
 101211c:	cs fs ins BYTE PTR es:[edi],dx
 101211f:	ins    BYTE PTR es:[edi],dx
 1012120:	add    BYTE PTR [eax],al
 1012122:	add    al,BYTE PTR [edx]
 1012124:	inc    edi
 1012125:	gs je  0x1012174
 1012128:	popa   
 1012129:	jae    0x101219f
 101212b:	inc    ebp
 101212c:	jb     0x10121a0
 101212e:	outs   dx,DWORD PTR ds:[esi]
 101212f:	jb     0x1012131
 1012131:	add    BYTE PTR [eax+eax*1+0x43],bh
 1012135:	jb     0x101219c
 1012137:	popa   
 1012138:	je     0x101219f
 101213a:	inc    esp
 101213b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1012142:	jns    0x1012185
 1012144:	add    BYTE PTR [eax],al
 1012146:	mov    DWORD PTR [ebx],eax
 1012148:	dec    edi
 1012149:	jne    0x10121bf
 101214b:	jo     0x10121c2
 101214d:	je     0x1012193
 101214f:	bound  esi,QWORD PTR gs:[ebp+0x67]
 1012153:	push   ebx
 1012154:	je     0x10121c8
 1012156:	imul   ebp,DWORD PTR [esi+0x67],0xae000041
 101215d:	add    al,BYTE PTR [edi+0x65]
 1012160:	je     0x10121b9
 1012162:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
 1012169:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1012170:	jns    0x10121b3
 1012172:	add    BYTE PTR [eax],al
 1012174:	dec    eax
 1012175:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 1012179:	popa   
 101217a:	ins    BYTE PTR es:[edi],dx
 101217b:	inc    esi
 101217c:	jb     0x10121e3
 101217e:	add    BYTE PTR gs:[ebp+0x1],bl
 1012182:	inc    esi
 1012183:	outs   dx,DWORD PTR ds:[esi]
 1012184:	jb     0x10121f3
 1012186:	popa   
 1012187:	je     0x10121d6
 1012189:	gs jae 0x10121ff
 101218c:	popa   
 101218d:	addr16 gs inc ecx
 1012190:	add    BYTE PTR [eax],al
 1012192:	popa   
 1012193:	add    BYTE PTR [ebx+0x6f],al
 1012196:	ins    DWORD PTR es:[edi],dx
 1012197:	jo     0x10121fa
 1012199:	jb     0x1012200
 101219b:	push   ebx
 101219c:	je     0x1012210
 101219e:	imul   ebp,DWORD PTR [esi+0x67],0x62000041
 10121a5:	add    DWORD PTR [esi+0x72],eax
 10121a8:	gs gs dec esp
 10121ab:	imul   esp,DWORD PTR [edx+0x72],0x797261
 10121b2:	inc    ebp
 10121b3:	add    al,BYTE PTR [edi+0x65]
 10121b6:	je     0x1012208
 10121b8:	jb     0x1012229
 10121ba:	arpl   WORD PTR [ecx+0x64],ax
 10121bd:	fs jb  0x1012225
 10121c0:	jae    0x1012235
 10121c2:	add    BYTE PTR [eax],al
 10121c4:	cmp    al,0x3
 10121c6:	dec    esp
 10121c7:	outs   dx,DWORD PTR ds:[esi]
 10121c8:	popa   
 10121c9:	fs dec esp
 10121cb:	imul   esp,DWORD PTR [edx+0x72],0x41797261
 10121d2:	add    BYTE PTR [eax],al
 10121d4:	mov    ds:0x74654702,eax
 10121d9:	push   esi
 10121da:	gs jb  0x1012250
 10121dd:	imul   ebp,DWORD PTR [edi+0x6e],0x417845
 10121e4:	push   edx
 10121e5:	add    BYTE PTR [ebx+0x6c],al
 10121e8:	outs   dx,DWORD PTR ds:[esi]
 10121e9:	jae    0x1012250
 10121eb:	dec    eax
 10121ec:	popa   
 10121ed:	outs   dx,BYTE PTR ds:[esi]
 10121ee:	fs ins BYTE PTR es:[edi],dx
 10121f0:	gs add al,al
 10121f3:	add    DWORD PTR [edi+0x65],eax
 10121f6:	je     0x101223b
 10121f8:	jne    0x101226c
 10121fa:	jb     0x1012261
 10121fc:	outs   dx,BYTE PTR ds:[esi]
 10121fd:	je     0x101224f
 10121ff:	jb     0x1012270
 1012201:	arpl   WORD PTR [ebp+0x73],sp
 1012204:	jae    0x1012206
 1012206:	add    DWORD PTR cs:[esi+0x69],eax
 101220a:	outs   dx,BYTE PTR ds:[esi]
 101220b:	fs inc ebx
 101220d:	ins    BYTE PTR es:[edi],dx
 101220e:	outs   dx,DWORD PTR ds:[esi]
 101220f:	jae    0x1012276
 1012211:	add    BYTE PTR [edx],dh
 1012213:	add    DWORD PTR [esi+0x69],eax
 1012216:	outs   dx,BYTE PTR ds:[esi]
 1012217:	fs inc esi
 1012219:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
 1012220:	gs inc ecx
 1012222:	add    BYTE PTR [eax],al
 1012224:	dec    ebp
 1012225:	add    eax,0x7274736c
 101222a:	ins    BYTE PTR es:[edi],dx
 101222b:	outs   dx,BYTE PTR gs:[esi]
 101222d:	inc    ecx
 101222e:	add    BYTE PTR [eax],al
 1012230:	rol    BYTE PTR [ebx],0x52
 1012233:	gs popa 
 1012235:	fs inc esi
 1012237:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4701f000
 101223f:	gs je  0x1012288
 1012242:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
 101224a:	mov    BYTE PTR [eax],al
 101224c:	inc    ebx
 101224d:	jb     0x10122b4
 101224f:	popa   
 1012250:	je     0x10122b7
 1012252:	inc    esi
 1012253:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4701be00
 101225b:	gs je  0x10122a1
 101225e:	jne    0x10122d2
 1012260:	jb     0x10122c7
 1012262:	outs   dx,BYTE PTR ds:[esi]
 1012263:	je     0x10122a9
 1012265:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 101226c:	jns    0x10122af
 101226e:	add    BYTE PTR [eax],al
 1012270:	inc    esp
 1012271:	add    eax,0x7274736c
 1012276:	arpl   WORD PTR [ebp+0x70],bp
 1012279:	imul   eax,DWORD PTR [ecx+0x0],0x65470213
 1012280:	je     0x10122cf
 1012282:	outs   dx,DWORD PTR ds:[esi]
 1012283:	fs jne 0x10122f2
 1012286:	gs inc esi
 1012288:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
 1012290:	add    BYTE PTR [eax],al
 1012292:	pop    eax
 1012293:	add    al,0x53
 1012295:	gs je  0x10122dd
 1012298:	jb     0x101230c
 101229a:	outs   dx,DWORD PTR ds:[esi]
 101229b:	jb     0x10122ea
 101229d:	outs   dx,DWORD PTR ds:[esi]
 101229e:	fs add BYTE PTR gs:[eax],al
 10122a2:	fwait
 10122a3:	add    BYTE PTR [ebx+0x72],al
 10122a6:	gs popa 
 10122a8:	je     0x101230f
 10122aa:	dec    ebp
 10122ab:	jne    0x1012321
 10122ad:	gs js  0x10122f1
 10122b0:	add    BYTE PTR [eax],al
 10122b2:	adc    eax,0x74654702
 10122b7:	dec    ebp
 10122b8:	outs   dx,DWORD PTR ds:[esi]
 10122b9:	fs jne 0x1012328
 10122bc:	gs dec eax
 10122be:	popa   
 10122bf:	outs   dx,BYTE PTR ds:[esi]
 10122c0:	fs ins BYTE PTR es:[edi],dx
 10122c2:	gs inc ecx
 10122c4:	add    BYTE PTR [eax],al
 10122c6:	mov    ch,0x0
 10122c8:	inc    ebx
 10122c9:	jb     0x1012330
 10122cb:	popa   
 10122cc:	je     0x1012333
 10122ce:	push   esp
 10122cf:	push   0x64616572
 10122d4:	add    BYTE PTR [eax],al
 10122d6:	outs   dx,DWORD PTR ds:[esi]
 10122d7:	add    al,BYTE PTR [edi+0x65]
 10122da:	je     0x101232f
 10122dc:	jns    0x1012351
 10122de:	je     0x1012345
 10122e0:	ins    DWORD PTR es:[edi],dx
 10122e1:	inc    esp
 10122e2:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 10122e9:	jns    0x101232c
 10122eb:	add    BYTE PTR [ebx+0x45],cl
 10122ee:	push   edx
 10122ef:	dec    esi
 10122f0:	inc    ebp
 10122f1:	dec    esp
 10122f2:	xor    esi,DWORD PTR [edx]
 10122f4:	cs fs ins BYTE PTR es:[edi],dx
 10122f7:	ins    BYTE PTR es:[edi],dx
 10122f8:	add    BYTE PTR [eax],al
 10122fa:	retf   
 10122fb:	add    DWORD PTR [edi+0x65],eax
 10122fe:	je     0x1012344
 1012300:	gs jbe 0x101236c
 1012303:	arpl   WORD PTR [ebp+0x43],sp
 1012306:	popa   
 1012307:	jo     0x101237c
 1012309:	add    dh,ah
 101230b:	add    BYTE PTR [ebp+eiz*2+0x6c],al
 101230f:	gs je  0x1012377
 1012312:	dec    edi
 1012313:	bound  ebp,QWORD PTR [edx+0x65]
 1012316:	arpl   WORD PTR [eax+eax*1+0x0],si
 101231a:	cmp    eax,0x65724300
 101231f:	popa   
 1012320:	je     0x1012387
 1012322:	inc    esi
 1012323:	outs   dx,DWORD PTR ds:[esi]
 1012324:	outs   dx,BYTE PTR ds:[esi]
 1012325:	je     0x1012370
 1012327:	outs   dx,BYTE PTR ds:[esi]
 1012328:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
 1012330:	ja     0x1012334
 1012332:	push   ebx
 1012333:	gs ins BYTE PTR es:[edi],dx
 1012335:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
 101233a:	push   0x65
 101233c:	arpl   WORD PTR [eax+eax*1+0x0],si
 1012340:	xor    BYTE PTR [eax],al
 1012342:	inc    ebx
 1012343:	jb     0x10123aa
 1012345:	popa   
 1012346:	je     0x10123ad
 1012348:	inc    ebx
 1012349:	outs   dx,DWORD PTR ds:[esi]
 101234a:	ins    DWORD PTR es:[edi],dx
 101234b:	jo     0x10123ae
 101234d:	je     0x10123b8
 101234f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
 1012353:	inc    ebx
 1012354:	add    BYTE PTR [eax],al
 1012356:	jecxz  0x1012358
 1012358:	inc    esp
 1012359:	gs ins BYTE PTR es:[edi],dx
 101235b:	gs je  0x10123c3
 101235e:	inc    esp
 101235f:	inc    ebx
 1012360:	add    BYTE PTR [eax],al
 1012362:	mov    bl,0x2
 1012364:	push   ebx
 1012365:	je     0x10123d9
 1012367:	gs je  0x10123cd
 101236a:	push   0x746c42
 101236f:	add    bl,bh
 1012371:	add    DWORD PTR [edi+0x65],eax
 1012374:	je     0x10123c5
 1012376:	bound  ebp,QWORD PTR [edx+0x65]
 1012379:	arpl   WORD PTR [ecx+eax*2+0x0],si
 101237d:	add    BYTE PTR [edi+0x44],al
 1012380:	dec    ecx
 1012381:	xor    esi,DWORD PTR [edx]
 1012383:	cs fs ins BYTE PTR es:[edi],dx
 1012386:	ins    BYTE PTR es:[edi],dx
 1012387:	add    BYTE PTR [ebp+0x2],ah
 101238a:	push   edx
 101238b:	gs ins BYTE PTR es:[edi],dx
 101238d:	gs popa 
 101238f:	jae    0x10123f6
 1012391:	inc    esp
 1012392:	inc    ebx
 1012393:	add    BYTE PTR [ecx],ah
 1012395:	add    DWORD PTR [edi+0x65],eax
 1012398:	je     0x10123de
 101239a:	inc    ebx
 101239b:	add    BYTE PTR [edx+0x74655302],dl
 10123a1:	inc    esi
 10123a2:	outs   dx,DWORD PTR ds:[esi]
 10123a3:	arpl   WORD PTR [ebp+0x73],si
 10123a6:	add    BYTE PTR [eax],al
 10123a8:	xchg   ebx,eax
 10123a9:	add    dl,BYTE PTR [ebx+0x65]
 10123ac:	je     0x10123f4
 10123ae:	outs   dx,DWORD PTR ds:[esi]
 10123af:	jb     0x1012416
 10123b1:	addr16 jb 0x1012423
 10123b4:	jne    0x1012424
 10123b6:	fs push edi
 10123b8:	imul   ebp,DWORD PTR [esi+0x64],0x1100776f
 10123bf:	add    DWORD PTR [edi+0x65],eax
 10123c2:	je     0x1012407
 10123c4:	ins    BYTE PTR es:[edi],dx
 10123c5:	popa   
 10123c6:	jae    0x101243b
 10123c8:	dec    esi
 10123c9:	popa   
 10123ca:	ins    DWORD PTR es:[edi],dx
 10123cb:	gs inc ecx
 10123cd:	add    BYTE PTR [eax+0x74654701],ah
 10123d3:	push   edi
 10123d4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
 10123db:	js     0x1012451
 10123dd:	inc    ecx
 10123de:	add    BYTE PTR [eax],al
 10123e0:	push   cs
 10123e1:	add    cl,BYTE PTR [ebp+0x65]
 10123e4:	jae    0x1012459
 10123e6:	popa   
 10123e7:	addr16 gs inc edx
 10123ea:	outs   dx,DWORD PTR ds:[esi]
 10123eb:	js     0x101242e
 10123ed:	add    cl,bh
 10123ef:	add    DWORD PTR [edi+ebp*2+0x61],ecx
 10123f3:	fs push ebx
 10123f5:	je     0x1012469
 10123f7:	imul   ebp,DWORD PTR [esi+0x67],0x2b0041
 10123fe:	inc    ebx
 10123ff:	push   0x6f4c7261
 1012404:	ja     0x101246b
 1012406:	jb     0x1012449
 1012408:	add    BYTE PTR [eax],al
 101240a:	repnz add BYTE PTR [ebp+0x6e],al
 101240e:	jne    0x101247d
 1012410:	push   edi
 1012411:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
 1012418:	cmc    
 1012419:	add    BYTE PTR [ebp+0x78],al
 101241c:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
 1012424:	jae    0x101246b
 1012426:	js     0x1012428
 1012428:	pop    es
 1012429:	add    DWORD PTR [edi+0x65],eax
 101242c:	je     0x101246f
 101242e:	jae    0x10124a9
 1012430:	outs   dx,BYTE PTR ds:[esi]
 1012431:	arpl   WORD PTR [ebx+0x65],cx
 1012434:	jns    0x1012489
 1012436:	je     0x1012499
 1012438:	je     0x101249f
 101243a:	add    BYTE PTR [eax],al
 101243c:	fild   WORD PTR [edx]
 101243e:	push   ebx
 101243f:	push   0x6957776f
 1012444:	outs   dx,BYTE PTR ds:[esi]
 1012445:	outs   dx,DWORD PTR fs:[esi]
 1012447:	ja     0x1012449
 1012449:	add    BYTE PTR [edi+0x2],dh
 101244c:	push   ebx
 101244d:	outs   dx,BYTE PTR gs:[esi]
 101244f:	fs dec ebp
 1012451:	gs jae 0x10124c7
 1012454:	popa   
 1012455:	addr16 gs inc ecx
 1012458:	add    BYTE PTR [eax],al
 101245a:	daa    
 101245b:	add    DWORD PTR [edi+0x65],eax
 101245e:	je     0x10124a4
 1012460:	ins    BYTE PTR es:[edi],dx
 1012461:	addr16 dec ecx
 1012463:	je     0x10124ca
 1012465:	ins    DWORD PTR es:[edi],dx
 1012466:	add    BYTE PTR [eax],al
 1012468:	pop    DWORD PTR [edx]
 101246a:	push   ebx
 101246b:	gs je  0x10124b2
 101246e:	ins    BYTE PTR es:[edi],dx
 101246f:	addr16 dec ecx
 1012471:	je     0x10124d8
 1012473:	ins    DWORD PTR es:[edi],dx
 1012474:	push   esp
 1012475:	gs js  0x10124ec
 1012478:	inc    ecx
 1012479:	add    BYTE PTR [ecx+eax*1+0x47],ah
 101247d:	gs je  0x10124d0
 1012480:	popa   
 1012481:	jb     0x10124e8
 1012483:	outs   dx,BYTE PTR ds:[esi]
 1012484:	je     0x1012486
 1012486:	xor    eax,0x736f5002
 101248b:	je     0x10124da
 101248d:	gs jae 0x1012503
 1012490:	popa   
 1012491:	addr16 gs inc ecx
 1012494:	add    BYTE PTR [eax],al
 1012496:	ret    
 1012497:	add    dl,BYTE PTR [ebx+0x65]
 101249a:	je     0x10124f3
 101249c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
 10124a3:	outs   dx,BYTE PTR ds:[esi]
 10124a4:	addr16 inc ecx
 10124a6:	add    BYTE PTR [eax],al
 10124a8:	xchg   ebp,eax
 10124a9:	add    DWORD PTR [edi+0x65],eax
 10124ac:	je     0x1012505
 10124ae:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
 10124b5:	outs   dx,BYTE PTR ds:[esi]
 10124b6:	addr16 inc ecx
 10124b8:	add    BYTE PTR [eax],al
 10124ba:	retf   0x5302
 10124bd:	gs je  0x1012517
 10124c0:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
 10124c7:	js     0x101253d
 10124c9:	inc    ecx
 10124ca:	add    BYTE PTR [eax],al
 10124cc:	jb     0x10124d0
 10124ce:	push   ebx
 10124cf:	outs   dx,BYTE PTR gs:[esi]
 10124d1:	fs inc esp
 10124d3:	ins    BYTE PTR es:[edi],dx
 10124d4:	addr16 dec ecx
 10124d6:	je     0x101253d
 10124d8:	ins    DWORD PTR es:[edi],dx
 10124d9:	dec    ebp
 10124da:	gs jae 0x1012550
 10124dd:	popa   
 10124de:	addr16 gs inc ecx
 10124e1:	add    bl,ch
 10124e3:	add    dl,BYTE PTR [ebx+0x79]
 10124e6:	jae    0x101255c
 10124e8:	gs ins DWORD PTR es:[edi],dx
 10124ea:	push   eax
 10124eb:	popa   
 10124ec:	jb     0x101254f
 10124ee:	ins    DWORD PTR es:[edi],dx
 10124ef:	gs je  0x1012557
 10124f2:	jb     0x1012567
 10124f4:	dec    ecx
 10124f5:	outs   dx,BYTE PTR ds:[esi]
 10124f6:	outs   dx,WORD PTR ds:[esi]
 10124f8:	inc    ecx
 10124f9:	add    dh,ch
 10124fb:	add    DWORD PTR [edi+ebp*2+0x61],ecx
 10124ff:	fs dec ecx
 1012501:	ins    DWORD PTR es:[edi],dx
 1012502:	popa   
 1012503:	addr16 gs inc ecx
 1012506:	add    BYTE PTR [eax],al
 1012508:	push   ebp
 1012509:	push   ebx
 101250a:	inc    ebp
 101250b:	push   edx
 101250c:	xor    esi,DWORD PTR [edx]
 101250e:	cs fs ins BYTE PTR es:[edi],dx
 1012511:	ins    BYTE PTR es:[edi],dx
 1012512:	add    BYTE PTR [eax],al
 1012514:	add    BYTE PTR [eax],al
 1012516:	inc    edi
 1012517:	gs je  0x1012560
 101251a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1012522:	outs   dx,DWORD PTR ds:[esi]
 1012523:	outs   dx,BYTE PTR ds:[esi]
 1012524:	dec    ecx
 1012525:	outs   dx,BYTE PTR ds:[esi]
 1012526:	outs   dx,WORD PTR ds:[esi]
 1012528:	inc    ecx
 1012529:	add    BYTE PTR [ebx],al
 101252b:	add    BYTE PTR [edi+0x65],al
 101252e:	je     0x1012576
 1012530:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 1012538:	outs   dx,DWORD PTR ds:[esi]
 1012539:	outs   dx,BYTE PTR ds:[esi]
 101253a:	dec    ecx
 101253b:	outs   dx,BYTE PTR ds:[esi]
 101253c:	outs   dx,WORD PTR ds:[esi]
 101253e:	push   ebx
 101253f:	imul   edi,DWORD PTR [edx+0x65],0xd0041
 1012546:	push   esi
 1012547:	gs jb  0x101259b
 101254a:	jne    0x10125b1
 101254c:	jb     0x10125c7
 101254e:	push   esi
 101254f:	popa   
 1012550:	ins    BYTE PTR es:[edi],dx
 1012551:	jne    0x10125b8
 1012553:	inc    ecx
 1012554:	add    BYTE PTR [eax],al
 1012556:	push   esi
 1012557:	inc    ebp
 1012558:	push   edx
 1012559:	push   ebx
 101255a:	dec    ecx
 101255b:	dec    edi
 101255c:	dec    esi
 101255d:	cs fs ins BYTE PTR es:[edi],dx
 1012560:	ins    BYTE PTR es:[edi],dx
 1012561:	add    BYTE PTR [eax+eax*1+0x706f7250],al
 1012568:	gs jb  0x10125df
 101256b:	jns    0x10125c0
 101256d:	push   0x41746565
 1012572:	add    BYTE PTR [eax],al
 1012574:	or     BYTE PTR [eax],al
 1012576:	inc    ebx
 1012577:	jb     0x10125de
 1012579:	popa   
 101257a:	je     0x10125e1
 101257c:	push   eax
 101257d:	jb     0x10125ee
 101257f:	jo     0x10125e6
 1012581:	jb     0x10125f7
 1012583:	jns    0x10125d8
 1012585:	push   0x50746565
 101258a:	popa   
 101258b:	addr16 gs inc ecx
 101258e:	add    BYTE PTR [eax],al
 1012590:	inc    ebx
 1012591:	dec    edi
 1012592:	dec    ebp
 1012593:	inc    ebx
 1012594:	push   esp
 1012595:	dec    esp
 1012596:	xor    esi,DWORD PTR [edx]
 1012598:	cs fs ins BYTE PTR es:[edi],dx
 101259b:	ins    BYTE PTR es:[edi],dx
 101259c:	add    BYTE PTR [eax],al
 101259e:	xchg   BYTE PTR [ecx],al
 10125a0:	inc    edi
 10125a1:	gs je  0x10125e7
 10125a4:	outs   dx,DWORD PTR ds:[esi]
 10125a5:	ins    DWORD PTR es:[edi],dx
 10125a6:	ins    DWORD PTR es:[edi],dx
 10125a7:	popa   
 10125a8:	outs   dx,BYTE PTR ds:[esi]
 10125a9:	fs dec esp
 10125ab:	imul   ebp,DWORD PTR [esi+0x65],0x2d30041
 10125b2:	dec    eax
 10125b3:	gs popa 
 10125b5:	jo     0x101260a
 10125b7:	gs je  0x1012603
 10125ba:	outs   dx,BYTE PTR ds:[esi]
 10125bb:	outs   dx,WORD PTR ds:[esi]
 10125bd:	jb     0x101262c
 10125bf:	popa   
 10125c0:	je     0x101262b
 10125c2:	outs   dx,DWORD PTR ds:[esi]
 10125c3:	outs   dx,BYTE PTR ds:[esi]
 10125c4:	add    BYTE PTR [eax],al
 10125c6:	arpl   WORD PTR [edx],ax
 10125c8:	inc    edi
 10125c9:	gs je  0x101261f
 10125cc:	je     0x101262f
 10125ce:	jb     0x1012644
 10125d0:	jne    0x1012642
 10125d2:	dec    ecx
 10125d3:	outs   dx,BYTE PTR ds:[esi]
 10125d4:	outs   dx,WORD PTR ds:[esi]
 10125d6:	push   edi
 10125d7:	add    BYTE PTR [ebx],al
 10125d9:	add    al,BYTE PTR [edi+0x65]
 10125dc:	je     0x101262a
 10125de:	outs   dx,DWORD PTR ds:[esi]
 10125df:	arpl   WORD PTR [ecx+0x6c],sp
 10125e2:	push   esp
 10125e3:	imul   ebp,DWORD PTR [ebp+0x65],0x4a50000
 10125ea:	push   ebx
 10125eb:	gs je  0x1012643
 10125ee:	outs   dx,BYTE PTR ds:[esi]
 10125ef:	push   0x6c646e61
 10125f4:	gs fs inc ebp
 10125f7:	js     0x101265c
 10125f9:	gs jo  0x1012670
 10125fc:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1012603:	gs jb  0x1012606
 1012606:	sbb    BYTE PTR [edx],al
 1012608:	inc    edi
 1012609:	gs je  0x1012659
 101260c:	outs   dx,DWORD PTR ds:[esi]
 101260d:	fs jne 0x101267c
 1012610:	gs dec eax
 1012612:	popa   
 1012613:	outs   dx,BYTE PTR ds:[esi]
 1012614:	fs ins BYTE PTR es:[edi],dx
 1012616:	gs push edi
 1012618:	add    BYTE PTR [eax],al
 101261a:	sbb    DWORD PTR [ecx],eax
 101261c:	inc    ebp
 101261d:	js     0x1012688
 101261f:	je     0x1012671
 1012621:	jb     0x1012692
 1012623:	arpl   WORD PTR [ebp+0x73],sp
 1012626:	jae    0x1012628
 1012628:	retf   0x4400
 101262b:	arpl   WORD PTR gs:[edi+0x64],bp
 101262f:	gs push eax
 1012631:	outs   dx,DWORD PTR ds:[esi]
 1012632:	imul   ebp,DWORD PTR [esi+0x74],0x25007265
 1012639:	add    eax,0x74697257
 101263e:	gs inc esi
 1012640:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x65470264
 1012648:	je     0x101269d
 101264a:	je     0x10126b0
 101264c:	dec    eax
 101264d:	popa   
 101264e:	outs   dx,BYTE PTR ds:[esi]
 101264f:	fs ins BYTE PTR es:[edi],dx
 1012651:	add    BYTE PTR gs:[eax],al
 1012654:	adc    al,0x2
 1012656:	inc    edi
 1012657:	gs je  0x10126a7
 101265a:	outs   dx,DWORD PTR ds:[esi]
 101265b:	fs jne 0x10126ca
 101265e:	gs inc esi
 1012660:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 1012668:	add    BYTE PTR [eax],al
 101266a:	popa   
 101266b:	add    DWORD PTR [esi+0x72],eax
 101266e:	gs gs inc ebp
 1012671:	outs   dx,BYTE PTR ds:[esi]
 1012672:	jbe    0x10126dd
 1012674:	jb     0x10126e5
 1012676:	outs   dx,BYTE PTR ds:[esi]
 1012677:	ins    DWORD PTR es:[edi],dx
 1012678:	outs   dx,BYTE PTR gs:[esi]
 101267a:	je     0x10126cf
 101267c:	je     0x10126f0
 101267e:	imul   ebp,DWORD PTR [esi+0x67],0x11005773
 1012685:	add    eax,0x65646957
 101268a:	inc    ebx
 101268b:	push   0x6f547261
 1012690:	dec    ebp
 1012691:	jne    0x10126ff
 1012693:	je     0x10126fe
 1012695:	inc    edx
 1012696:	jns    0x101270c
 1012698:	gs add dl,bl
 101269b:	add    DWORD PTR [edi+0x65],eax
 101269e:	je     0x10126e5
 10126a0:	outs   dx,BYTE PTR ds:[esi]
 10126a1:	jbe    0x101270c
 10126a3:	jb     0x1012714
 10126a5:	outs   dx,BYTE PTR ds:[esi]
 10126a6:	ins    DWORD PTR es:[edi],dx
 10126a7:	outs   dx,BYTE PTR gs:[esi]
 10126a9:	je     0x10126fe
 10126ab:	je     0x101271f
 10126ad:	imul   ebp,DWORD PTR [esi+0x67],0x5773
 10126b4:	outs   dx,DWORD PTR ds:[esi]
 10126b5:	add    al,0x53
 10126b7:	gs je  0x1012702
 10126ba:	popa   
 10126bb:	outs   dx,BYTE PTR ds:[esi]
 10126bc:	fs ins BYTE PTR es:[edi],dx
 10126be:	gs inc ebx
 10126c0:	outs   dx,DWORD PTR ds:[esi]
 10126c1:	jne    0x1012731
 10126c3:	je     0x10126c5
 10126c5:	add    bl,ah
 10126c7:	add    cl,BYTE PTR [ecx+0x6e]
 10126ca:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 10126d2:	inc    ebx
 10126d3:	jb     0x101273e
 10126d5:	je     0x1012740
 10126d7:	arpl   WORD PTR [ecx+0x6c],sp
 10126da:	push   ebx
 10126db:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10126e0:	outs   dx,BYTE PTR ds:[esi]
 10126e1:	inc    ecx
 10126e2:	outs   dx,BYTE PTR ds:[esi]
 10126e3:	fs push ebx
 10126e5:	jo     0x1012750
 10126e7:	outs   dx,BYTE PTR ds:[esi]
 10126e8:	inc    ebx
 10126e9:	outs   dx,DWORD PTR ds:[esi]
 10126ea:	jne    0x101275a
 10126ec:	je     0x10126ee
 10126ee:	repz add DWORD PTR [edi+0x65],eax
 10126f2:	je     0x101273a
 10126f4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
 10126fc:	rol    DWORD PTR [eax],1
 10126fe:	inc    esp
 10126ff:	gs ins BYTE PTR es:[edi],dx
 1012701:	gs je  0x1012769
 1012704:	inc    ebx
 1012705:	jb     0x1012770
 1012707:	je     0x1012772
 1012709:	arpl   WORD PTR [ecx+0x6c],sp
 101270c:	push   ebx
 101270d:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1012712:	outs   dx,BYTE PTR ds:[esi]
 1012713:	add    dl,ch
 1012715:	add    BYTE PTR [ebp+0x6e],al
 1012718:	arpl   WORD PTR [edi+0x64],bp
 101271b:	gs push eax
 101271d:	outs   dx,DWORD PTR ds:[esi]
 101271e:	imul   ebp,DWORD PTR [esi+0x74],0xc5007265
 1012725:	add    al,0x54
 1012727:	ins    BYTE PTR es:[edi],dx
 1012728:	jae    0x101276b
 101272a:	ins    BYTE PTR es:[edi],dx
 101272b:	ins    BYTE PTR es:[edi],dx
 101272c:	outs   dx,DWORD PTR ds:[esi]
 101272d:	arpl   WORD PTR [eax],ax
 101272f:	add    bh,al
 1012731:	add    al,0x54
 1012733:	ins    BYTE PTR es:[edi],dx
 1012734:	jae    0x101277d
 1012736:	gs je  0x101278f
 1012739:	popa   
 101273a:	ins    BYTE PTR es:[edi],dx
 101273b:	jne    0x10127a2
 101273d:	add    al,cl
 101273f:	add    al,0x54
 1012741:	ins    BYTE PTR es:[edi],dx
 1012742:	jae    0x1012797
 1012744:	gs je  0x101279d
 1012747:	popa   
 1012748:	ins    BYTE PTR es:[edi],dx
 1012749:	jne    0x10127b0
 101274b:	add    dh,al
 101274d:	add    al,0x54
 101274f:	ins    BYTE PTR es:[edi],dx
 1012750:	jae    0x1012798
 1012752:	jb     0x10127b9
 1012754:	gs add bh,ch
 1012757:	add    cl,BYTE PTR [ecx+0x6e]
 101275a:	je     0x10127c1
 101275c:	jb     0x10127ca
 101275e:	outs   dx,DWORD PTR ds:[esi]
 101275f:	arpl   WORD PTR [ebx+0x65],bp
 1012762:	fs dec ecx
 1012764:	outs   dx,BYTE PTR ds:[esi]
 1012765:	arpl   WORD PTR [edx+0x65],si
 1012768:	ins    DWORD PTR es:[edi],dx
 1012769:	outs   dx,BYTE PTR gs:[esi]
 101276b:	je     0x101276d
 101276d:	add    BYTE PTR [ebx+0x4],dh
 1012770:	push   ebx
 1012771:	gs je  0x10127c0
 1012774:	popa   
 1012775:	jae    0x10127eb
 1012777:	inc    ebp
 1012778:	jb     0x10127ec
 101277a:	outs   dx,DWORD PTR ds:[esi]
 101277b:	jb     0x101277d
 101277d:	add    ch,al
 101277f:	add    DWORD PTR [edi+0x65],eax
 1012782:	je     0x10127c7
 1012784:	jne    0x10127f8
 1012786:	jb     0x10127ed
 1012788:	outs   dx,BYTE PTR ds:[esi]
 1012789:	je     0x10127df
 101278b:	push   0x64616572
 1012790:	dec    ecx
 1012791:	add    BYTE PTR fs:[eax],al
 1012794:	jmp    0x1012798
 1012796:	dec    ecx
 1012797:	outs   dx,BYTE PTR ds:[esi]
 1012798:	je     0x10127ff
 101279a:	jb     0x1012808
 101279c:	outs   dx,DWORD PTR ds:[esi]
 101279d:	arpl   WORD PTR [ebx+0x65],bp
 10127a0:	fs inc esp
 10127a2:	arpl   WORD PTR gs:[edx+0x65],si
 10127a6:	ins    DWORD PTR es:[edi],dx
 10127a7:	outs   dx,BYTE PTR gs:[esi]
 10127a9:	je     0x10127ab
 10127ab:	add    ch,cl
 10127ad:	add    cl,BYTE PTR [eax+0x65]
 10127b0:	popa   
 10127b1:	jo     0x10127f6
 10127b3:	jb     0x101281a
 10127b5:	popa   
 10127b6:	je     0x101281d
 10127b8:	add    BYTE PTR [eax],al
 10127ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10127bb:	add    edx,DWORD PTR [ecx+0x75]
 10127be:	gs jb  0x101283a
 10127c1:	push   eax
 10127c2:	gs jb  0x101282b
 10127c5:	outs   dx,DWORD PTR ds:[esi]
 10127c6:	jb     0x1012835
 10127c8:	popa   
 10127c9:	outs   dx,BYTE PTR ds:[esi]
 10127ca:	arpl   WORD PTR [ebp+0x43],sp
 10127cd:	outs   dx,DWORD PTR ds:[esi]
 10127ce:	jne    0x101283e
 10127d0:	je     0x1012837
 10127d2:	jb     0x10127d4
 10127d4:	xchg   ebx,eax
 10127d5:	add    al,BYTE PTR [edi+0x65]
 10127d8:	je     0x101282e
 10127da:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 10127e1:	je     0x10127e3
 10127e3:	add    cl,al
 10127e5:	add    DWORD PTR [edi+0x65],eax
 10127e8:	je     0x101282d
 10127ea:	jne    0x101285e
 10127ec:	jb     0x1012853
 10127ee:	outs   dx,BYTE PTR ds:[esi]
 10127ef:	je     0x1012841
 10127f1:	jb     0x1012862
 10127f3:	arpl   WORD PTR [ebp+0x73],sp
 10127f6:	jae    0x1012841
 10127f8:	add    BYTE PTR fs:[ecx+0x2],bh
 10127fc:	inc    edi
 10127fd:	gs je  0x1012853
 1012800:	jns    0x1012875
 1012802:	je     0x1012869
 1012804:	ins    DWORD PTR es:[edi],dx
 1012805:	push   esp
 1012806:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 101280d:	ins    BYTE PTR es:[edi],dx
 101280e:	gs push esp
 1012810:	imul   ebp,DWORD PTR [ebp+0x65],0x5504d300
 1012817:	outs   dx,BYTE PTR ds:[esi]
 1012818:	push   0x6c646e61
 101281d:	gs fs inc ebp
 1012820:	js     0x1012885
 1012822:	gs jo  0x1012899
 1012825:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 101282c:	gs jb  0x101282f
 101282f:	add    BYTE PTR [eax],al
 1012831:	add    ecx,DWORD PTR [ecx+0x73]
 1012834:	inc    esp
 1012835:	bound  esi,QWORD PTR gs:[ebp+0x67]
 1012839:	addr16 gs jb 0x101288d
 101283d:	jb     0x10128a4
 101283f:	jae    0x10128a6
 1012841:	outs   dx,BYTE PTR ds:[esi]
 1012842:	je     0x1012844
 1012844:	rol    BYTE PTR [esp+edx*2],0x65
 1012848:	jb     0x10128b7
 101284a:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 1012851:	outs   dx,DWORD PTR ds:[esi]
 1012852:	arpl   WORD PTR [ebp+0x73],sp
 1012855:	jae    0x1012857
 1012857:	add    bh,cl
 1012859:	add    cl,BYTE PTR [eax+0x65]
 101285c:	popa   
 101285d:	jo     0x10128a5
 101285f:	jb     0x10128c6
 1012861:	add    BYTE PTR gs:[eax],al
 1012864:	out    dx,al
 1012865:	add    BYTE PTR [ebp+0x6e],al
 1012868:	je     0x10128cf
 101286a:	jb     0x10128af
 101286c:	jb     0x10128d7
 101286e:	je     0x10128d9
 1012870:	arpl   WORD PTR [ecx+0x6c],sp
 1012873:	push   ebx
 1012874:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1012879:	outs   dx,BYTE PTR ds:[esi]
 101287a:	add    BYTE PTR [eax],al
 101287c:	cmp    DWORD PTR [ebx],eax
 101287e:	dec    esp
 101287f:	gs popa 
 1012881:	jbe    0x10128e8
 1012883:	inc    ebx
 1012884:	jb     0x10128ef
 1012886:	je     0x10128f1
 1012888:	arpl   WORD PTR [ecx+0x6c],sp
 101288b:	push   ebx
 101288c:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1012891:	outs   dx,BYTE PTR ds:[esi]
 1012892:	add    BYTE PTR [eax],al
 1012894:	sbb    BYTE PTR [edx+edx*2],al
 1012897:	je     0x1012905
 1012899:	push   ebp
 101289a:	outs   dx,BYTE PTR ds:[esi]
 101289b:	ja     0x1012906
 101289d:	outs   dx,BYTE PTR ds:[esi]
 101289e:	fs add bl,cl
 10128a1:	add    cl,BYTE PTR [eax+0x65]
 10128a4:	popa   
 10128a5:	jo     0x10128e8
 10128a7:	ins    BYTE PTR es:[edi],dx
 10128a8:	ins    BYTE PTR es:[edi],dx
 10128a9:	outs   dx,DWORD PTR ds:[esi]
 10128aa:	arpl   WORD PTR [eax],ax
 10128ac:	mov    cl,0x3
 10128ae:	push   edx
 10128af:	popa   
 10128b0:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
 10128b7:	jo     0x101292d
 10128b9:	imul   ebp,DWORD PTR [edi+0x6e],0x3040000
 10128c0:	dec    ecx
 10128c1:	jae    0x1012913
 10128c3:	jb     0x1012934
 10128c5:	arpl   WORD PTR [ebp+0x73],sp
 10128c8:	jae    0x1012939
 10128ca:	jb     0x1012912
 10128cc:	gs popa 
 10128ce:	je     0x1012945
 10128d0:	jb     0x1012937
 10128d2:	push   eax
 10128d3:	jb     0x101293a
 10128d5:	jae    0x101293c
 10128d7:	outs   dx,BYTE PTR ds:[esi]
 10128d8:	je     0x10128da
 10128da:	jb     0x10128dd
 10128dc:	inc    edi
 10128dd:	gs je  0x1012923
 10128e0:	push   eax
 10128e1:	dec    ecx
 10128e2:	outs   dx,BYTE PTR ds:[esi]
 10128e3:	outs   dx,WORD PTR ds:[esi]
 10128e5:	add    BYTE PTR [eax+0x1],ch
 10128e8:	inc    edi
 10128e9:	gs je  0x101292d
 10128ec:	inc    ebx
 10128ed:	push   eax
 10128ee:	add    BYTE PTR [eax],al
 10128f0:	aaa    
 10128f1:	add    al,BYTE PTR [edi+0x65]
 10128f4:	je     0x1012945
 10128f6:	inc    ebp
 10128f7:	dec    ebp
 10128f8:	inc    ebx
 10128f9:	push   eax
 10128fa:	add    BYTE PTR [eax],al
 10128fc:	or     al,BYTE PTR [ebx]
 10128fe:	dec    ecx
 10128ff:	jae    0x1012957
 1012901:	popa   
 1012902:	ins    BYTE PTR es:[edi],dx
 1012903:	imul   esp,DWORD PTR [ebx+eax*2+0x6f],0x61506564
 101290b:	add    BYTE PTR gs:[di],ch
 101290f:	add    ecx,DWORD PTR [ebx+eax*2+0x4d]
 1012913:	popa   
 1012914:	jo     0x1012969
 1012916:	je     0x101298a
 1012918:	imul   ebp,DWORD PTR [esi+0x67],0x67000057
 101291f:	add    ecx,DWORD PTR [ebp+0x75]
 1012922:	ins    BYTE PTR es:[edi],dx
 1012923:	je     0x101298e
 1012925:	inc    edx
 1012926:	jns    0x101299c
 1012928:	gs push esp
 101292a:	outs   dx,DWORD PTR ds:[esi]
 101292b:	push   edi
 101292c:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
 1012934:	aas    
 1012935:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 1012939:	fs dec esp
 101293b:	imul   esp,DWORD PTR [edx+0x72],0x57797261
 1012942:	add    BYTE PTR [eax],al
 1012944:	mov    dl,0x4
 1012946:	push   ebx
 1012947:	ins    BYTE PTR es:[edi],dx
 1012948:	gs gs jo 0x101294c
 101294c:	data16 add al,0x53
 101294f:	gs je  0x1012998
 1012952:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
 101295a:	gs jb  0x101295d
 101295d:	add    BYTE PTR [edx+0x74654701],bl
 1012963:	inc    ebx
 1012964:	outs   dx,DWORD PTR ds:[esi]
 1012965:	outs   dx,BYTE PTR ds:[esi]
 1012966:	jae    0x10129d7
 1012968:	ins    BYTE PTR es:[edi],dx
 1012969:	gs inc ebx
 101296b:	push   eax
 101296c:	add    BYTE PTR [eax],al
 101296e:	lods   al,BYTE PTR ds:[esi]
 101296f:	add    DWORD PTR [edi+0x65],eax
 1012972:	je     0x10129b7
 1012974:	outs   dx,DWORD PTR ds:[esi]
 1012975:	outs   dx,BYTE PTR ds:[esi]
 1012976:	jae    0x10129e7
 1012978:	ins    BYTE PTR es:[edi],dx
 1012979:	gs dec ebp
 101297b:	outs   dx,DWORD PTR ds:[esi]
 101297c:	fs add BYTE PTR gs:[eax],al
 1012980:	xchg   DWORD PTR [ebx+edx*2],eax
 1012983:	gs je  0x10129d9
 1012986:	je     0x10129ec
 1012988:	dec    eax
 1012989:	popa   
 101298a:	outs   dx,BYTE PTR ds:[esi]
 101298b:	fs ins BYTE PTR es:[edi],dx
 101298d:	add    BYTE PTR gs:[eax],al
 1012990:	push   edi
 1012991:	add    DWORD PTR [esi+0x6c],eax
 1012994:	jne    0x1012a09
 1012996:	push   0x656c6946
 101299b:	inc    edx
 101299c:	jne    0x1012a04
 101299e:	data16 gs jb 0x1012a15
 10129a2:	add    BYTE PTR [eax],al
 10129a4:	aam    0x2
 10129a6:	dec    eax
 10129a7:	gs popa 
 10129a9:	jo     0x10129fe
 10129ab:	imul   edi,DWORD PTR [edx+0x65],0x2690000
 10129b2:	inc    edi
 10129b3:	gs je  0x1012a09
 10129b6:	je     0x1012a2a
 10129b8:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
 10129bf:	push   edi
 10129c0:	add    BYTE PTR [eax],al
 10129c2:	rol    BYTE PTR [edx],cl
 10129c4:	dec    eax
 10129c5:	gs popa 
 10129c7:	jo     0x1012a1b
 10129c9:	gs inc ecx
 10129cb:	ins    BYTE PTR es:[edi],dx
 10129cc:	ins    BYTE PTR es:[edi],dx
 10129cd:	outs   dx,DWORD PTR ds:[esi]
 10129ce:	arpl   WORD PTR [eax],ax
 10129d0:	and    al,0x5
 10129d2:	push   edi
 10129d3:	jb     0x1012a3e
 10129d5:	je     0x1012a3c
 10129d7:	inc    ebx
 10129d8:	outs   dx,DWORD PTR ds:[esi]
 10129d9:	outs   dx,BYTE PTR ds:[esi]
 10129da:	jae    0x1012a4b
 10129dc:	ins    BYTE PTR es:[edi],dx
 10129dd:	gs push edi
 10129df:	add    BYTE PTR [ebx+0x4],dl
 10129e2:	push   ebx
 10129e3:	gs je  0x1012a2b
 10129e6:	outs   dx,BYTE PTR ds:[esi]
 10129e7:	fs dec edi
 10129e9:	inc    si
 10129eb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47024a00
 10129f3:	gs je  0x1012a46
 10129f6:	jb     0x1012a67
 10129f8:	arpl   WORD PTR [ebp+0x73],sp
 10129fb:	jae    0x1012a45
 10129fd:	gs popa 
 10129ff:	jo     0x1012a01
 1012a01:	add    BYTE PTR [edi+0x65724300],cl
 1012a07:	popa   
 1012a08:	je     0x1012a6f
 1012a0a:	inc    esi
 1012a0b:	.byte 0x69
 1012a0c:	ins    BYTE PTR es:[edi],dx
 1012a0d:	gs push edi
	...
