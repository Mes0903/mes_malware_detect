
5a63c01f80e137c588117dec2a9ae121d27b8a57ec40ab77e7e5a94a75be2db2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8c65]        # 0x409c80
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8c66]        # 0x409c90
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8c69]        # 0x409ca0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x8c2c]        # 0x409c70
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x8a6f]        # 0x409ac0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x8c01]        # 0x409c60
  40105f:	mov    DWORD PTR [rip+0xbfa3],edx        # 0x40d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4065b0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x405270
  401081:	mov    rdx,QWORD PTR [rip+0x8ac8]        # 0x409b50
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x8aae]        # 0x409b40
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x8b14]        # 0x409bb0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x8a4b]        # 0x409af0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x404e50
  4010af:	mov    rax,QWORD PTR [rip+0x89ba]        # 0x409a70
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4065b0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x4029]        # 0x405150
  401127:	call   0x405140
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8a75]        # 0x409be0
  40116b:	lea    r8,[rip+0xbea6]        # 0x40d018
  401172:	lea    rdx,[rip+0xbea7]        # 0x40d020
  401179:	lea    rcx,[rip+0xbea8]        # 0x40d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xbe78],eax        # 0x40d000
  401188:	lea    rax,[rip+0xbe71]        # 0x40d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x8a05]        # 0x409ba0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4065c8
  4011a3:	mov    DWORD PTR [rip+0xbe67],eax        # 0x40d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x8a9a]        # 0x409c60
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x892b]        # 0x409b20
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xd196]        # 0x40e398
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x8907]        # 0x409b30
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xbdba],0x1        # 0x40d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x884c]        # 0x409ab0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x405460
  40127d:	lea    rcx,[rip+0x477c]        # 0x405a00
  401284:	call   QWORD PTR [rip+0xd106]        # 0x40e390
  40128a:	mov    rdx,QWORD PTR [rip+0x887f]        # 0x409b10
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x405910
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4065f0
  4012a5:	call   0x405250
  4012aa:	mov    rax,QWORD PTR [rip+0x880f]        # 0x409ac0
  4012b1:	mov    QWORD PTR [rip+0xc890],rax        # 0x40db48
  4012b8:	mov    rax,QWORD PTR [rip+0x8821]        # 0x409ae0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xc829],rax        # 0x40db40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x5cca],eax        # 0x407000
  401336:	mov    r12d,DWORD PTR [rip+0xbceb]        # 0x40d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4064c0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xbcc2]        # 0x40d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x406450
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4064c0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4064b0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xbc6a],rbp        # 0x40d020
  4013b6:	call   0x404e20
  4013bb:	mov    rax,QWORD PTR [rip+0x870e]        # 0x409ad0
  4013c2:	mov    rdx,QWORD PTR [rip+0xbc4f]        # 0x40d018
  4013c9:	mov    ecx,DWORD PTR [rip+0xbc59]        # 0x40d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xbc3c]        # 0x40d018
  4013dc:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 0x40d020
  4013e3:	call   0x4066d0
  4013e8:	mov    ecx,DWORD PTR [rip+0xbc1a]        # 0x40d008
  4013ee:	mov    DWORD PTR [rip+0xbc18],eax        # 0x40d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xbc02]        # 0x40d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x406598
  40140b:	mov    eax,DWORD PTR [rip+0xbbfb]        # 0x40d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x86f9]        # 0x409b30
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4065a0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x870d]        # 0x409b70
  401463:	mov    rcx,QWORD PTR [rip+0x86f6]        # 0x409b60
  40146a:	call   0x406580
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xcea7]        # 0x40e340
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x86e9]        # 0x409b90
  4014a7:	mov    rcx,QWORD PTR [rip+0x86d2]        # 0x409b80
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x406580
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x406538
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8785]        # 0x409c60
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x404e60
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x8755]        # 0x409c60
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x404e60
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rdi
  401532:	push   rsi
  401533:	push   rbx
  401534:	sub    rsp,0x28
  401538:	mov    rbp,QWORD PTR [rip+0xcf21]        # 0x40e460
  40153f:	lea    rsi,[rip+0x7282]        # 0x4087c8
  401546:	xor    ebx,ebx
  401548:	mov    rdi,rcx
  40154b:	nop    DWORD PTR [rax+rax*1+0x0]
  401550:	mov    rdx,QWORD PTR [rsi]
  401553:	mov    rcx,rdi
  401556:	call   rbp
  401558:	test   eax,eax
  40155a:	je     0x401585
  40155c:	add    ebx,0x1
  40155f:	add    rsi,0x10
  401563:	cmp    ebx,0x10
  401566:	jne    0x401550
  401568:	lea    rcx,[rip+0x6a91]        # 0x408000
  40156f:	mov    rdx,rdi
  401572:	call   0x402170
  401577:	mov    eax,0xffffffff
  40157c:	add    rsp,0x28
  401580:	pop    rbx
  401581:	pop    rsi
  401582:	pop    rdi
  401583:	pop    rbp
  401584:	ret    
  401585:	lea    rax,[rip+0x7234]        # 0x4087c0
  40158c:	shl    rbx,0x4
  401590:	mov    eax,DWORD PTR [rax+rbx*1]
  401593:	add    rsp,0x28
  401597:	pop    rbx
  401598:	pop    rsi
  401599:	pop    rdi
  40159a:	pop    rbp
  40159b:	ret    
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	push   rsi
  4015a1:	push   rbx
  4015a2:	sub    rsp,0x28
  4015a6:	mov    r8,QWORD PTR [rip+0x5bd3]        # 0x407180
  4015ad:	mov    esi,edx
  4015af:	lea    rdx,[rip+0x6a62]        # 0x408018
  4015b6:	mov    rbx,rcx
  4015b9:	call   0x406510
  4015be:	lea    rcx,[rip+0x6a7b]        # 0x408040
  4015c5:	mov    r9,rbx
  4015c8:	mov    r8d,0x24
  4015ce:	mov    edx,0x1
  4015d3:	call   0x4064d8
  4015d8:	lea    rcx,[rip+0x6a86]        # 0x408065
  4015df:	mov    r9,rbx
  4015e2:	mov    r8d,0x12
  4015e8:	mov    edx,0x1
  4015ed:	call   0x4064d8
  4015f2:	mov    r8,QWORD PTR [rip+0x5b87]        # 0x407180
  4015f9:	lea    rdx,[rip+0x6a78]        # 0x408078
  401600:	mov    rcx,rbx
  401603:	call   0x406510
  401608:	test   esi,esi
  40160a:	je     0x401613
  40160c:	mov    ecx,esi
  40160e:	call   0x406538
  401613:	lea    r8,[rip+0x6c46]        # 0x408260
  40161a:	lea    rdx,[rip+0x6c65]        # 0x408286
  401621:	mov    rcx,rbx
  401624:	call   0x406510
  401629:	jmp    0x40160c
  40162b:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	push   rsi
  401631:	push   rbx
  401632:	sub    rsp,0x28
  401636:	lea    rdx,[rip+0x6c5c]        # 0x408299
  40163d:	mov    rsi,QWORD PTR [rip+0xce1c]        # 0x40e460
  401644:	mov    rbx,rcx
  401647:	call   rsi
  401649:	test   eax,eax
  40164b:	mov    edx,0xb4
  401650:	jne    0x401660
  401652:	mov    eax,edx
  401654:	add    rsp,0x28
  401658:	pop    rbx
  401659:	pop    rsi
  40165a:	ret    
  40165b:	nop    DWORD PTR [rax+rax*1+0x0]
  401660:	lea    rdx,[rip+0x6c37]        # 0x40829e
  401667:	mov    rcx,rbx
  40166a:	call   rsi
  40166c:	test   eax,eax
  40166e:	mov    edx,0xb5
  401673:	je     0x401652
  401675:	lea    rdx,[rip+0x6c27]        # 0x4082a3
  40167c:	mov    rcx,rbx
  40167f:	call   rsi
  401681:	test   eax,eax
  401683:	jne    0x40168c
  401685:	mov    edx,0x3e
  40168a:	jmp    0x401652
  40168c:	lea    rdx,[rip+0x6c17]        # 0x4082aa
  401693:	mov    rcx,rbx
  401696:	call   rsi
  401698:	test   eax,eax
  40169a:	je     0x401685
  40169c:	lea    rdx,[rip+0x6c0e]        # 0x4082b1
  4016a3:	mov    rcx,rbx
  4016a6:	call   rsi
  4016a8:	test   eax,eax
  4016aa:	mov    edx,eax
  4016ac:	je     0x401652
  4016ae:	lea    rcx,[rip+0x6c01]        # 0x4082b6
  4016b5:	mov    rdx,rbx
  4016b8:	call   0x402170
  4016bd:	or     edx,0xffffffff
  4016c0:	jmp    0x401652
  4016c2:	nop    DWORD PTR [rax+0x0]
  4016c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016d0:	push   rsi
  4016d1:	push   rbx
  4016d2:	sub    rsp,0x28
  4016d6:	lea    rdx,[rip+0x6bf3]        # 0x4082d0
  4016dd:	mov    rsi,QWORD PTR [rip+0xcd7c]        # 0x40e460
  4016e4:	mov    rbx,rcx
  4016e7:	call   rsi
  4016e9:	test   eax,eax
  4016eb:	mov    r8d,0x1
  4016f1:	jne    0x401700
  4016f3:	mov    eax,r8d
  4016f6:	add    rsp,0x28
  4016fa:	pop    rbx
  4016fb:	pop    rsi
  4016fc:	ret    
  4016fd:	nop    DWORD PTR [rax]
  401700:	lea    rdx,[rip+0x6bcd]        # 0x4082d4
  401707:	mov    rcx,rbx
  40170a:	call   rsi
  40170c:	test   eax,eax
  40170e:	mov    r8d,0x2
  401714:	je     0x4016f3
  401716:	lea    rdx,[rip+0x6bbc]        # 0x4082d9
  40171d:	mov    rcx,rbx
  401720:	call   rsi
  401722:	test   eax,eax
  401724:	mov    r8d,0x3
  40172a:	je     0x4016f3
  40172c:	lea    rdx,[rip+0x6b7e]        # 0x4082b1
  401733:	mov    rcx,rbx
  401736:	call   rsi
  401738:	test   eax,eax
  40173a:	mov    r8d,eax
  40173d:	je     0x4016f3
  40173f:	lea    rcx,[rip+0x6b97]        # 0x4082dd
  401746:	mov    rdx,rbx
  401749:	call   0x402170
  40174e:	or     r8d,0xffffffff
  401752:	jmp    0x4016f3
  401754:	xchg   ax,ax
  401756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401760:	push   r12
  401762:	push   rbp
  401763:	push   rdi
  401764:	push   rsi
  401765:	push   rbx
  401766:	sub    rsp,0x20
  40176a:	mov    rsi,rcx
  40176d:	mov    rcx,rdx
  401770:	mov    rbx,rdx
  401773:	call   0x4064e8
  401778:	lea    rcx,[rip+0xb941]        # 0x40d0c0
  40177f:	mov    r9,rbx
  401782:	mov    r8d,0x1
  401788:	mov    edx,0x10
  40178d:	mov    ebp,eax
  40178f:	call   0x406500
  401794:	cmp    rax,0x1
  401798:	je     0x4017c0
  40179a:	lea    rcx,[rip+0x6cc7]        # 0x408468
  4017a1:	mov    rdx,rsi
  4017a4:	call   0x402170
  4017a9:	mov    eax,0x1
  4017ae:	add    rsp,0x20
  4017b2:	pop    rbx
  4017b3:	pop    rsi
  4017b4:	pop    rdi
  4017b5:	pop    rbp
  4017b6:	pop    r12
  4017b8:	ret    
  4017b9:	nop    DWORD PTR [rax+0x0]
  4017c0:	cmp    BYTE PTR [rip+0xb8fe],0x2        # 0x40d0c5
  4017c7:	mov    rdi,QWORD PTR [rip+0x8432]        # 0x409c00
  4017ce:	je     0x401812
  4017d0:	mov    rax,QWORD PTR [rip+0x8449]        # 0x409c20
  4017d7:	movzx  ecx,BYTE PTR [rip+0xb8e6]        # 0x40d0c4
  4017de:	mov    r12,QWORD PTR [rip+0x844b]        # 0x409c30
  4017e5:	mov    QWORD PTR [rdi],rax
  4017e8:	mov    rax,QWORD PTR [rip+0x8461]        # 0x409c50
  4017ef:	cmp    cl,0x1
  4017f2:	mov    QWORD PTR [r12],rax
  4017f6:	je     0x40183a
  4017f8:	cmp    cl,0x2
  4017fb:	je     0x401990
  401801:	movzx  edx,cl
  401804:	lea    rcx,[rip+0x6ae4]        # 0x4082ef
  40180b:	call   0x402170
  401810:	jmp    0x40179a
  401812:	mov    rax,QWORD PTR [rip+0x83f7]        # 0x409c10
  401819:	movzx  ecx,BYTE PTR [rip+0xb8a4]        # 0x40d0c4
  401820:	mov    r12,QWORD PTR [rip+0x8409]        # 0x409c30
  401827:	mov    QWORD PTR [rdi],rax
  40182a:	mov    rax,QWORD PTR [rip+0x840f]        # 0x409c40
  401831:	cmp    cl,0x1
  401834:	mov    QWORD PTR [r12],rax
  401838:	jne    0x4017f8
  40183a:	lea    rcx,[rip+0xb84f]        # 0x40d090
  401841:	mov    r9,rbx
  401844:	mov    r8d,0x1
  40184a:	mov    edx,0x24
  40184f:	call   0x406500
  401854:	cmp    rax,0x1
  401858:	jne    0x40179a
  40185e:	mov    edx,0x2
  401863:	lea    rcx,[rip+0xb826]        # 0x40d090
  40186a:	call   QWORD PTR [rdi]
  40186c:	mov    edx,0x2
  401871:	lea    rcx,[rip+0xb81a]        # 0x40d092
  401878:	mov    WORD PTR [rip+0xb871],ax        # 0x40d0f0
  40187f:	call   QWORD PTR [rdi]
  401881:	mov    edx,0x4
  401886:	lea    rcx,[rip+0xb807]        # 0x40d094
  40188d:	mov    WORD PTR [rip+0xb85e],ax        # 0x40d0f2
  401894:	call   QWORD PTR [rdi]
  401896:	mov    edx,0x4
  40189b:	lea    rcx,[rip+0xb7f6]        # 0x40d098
  4018a2:	mov    DWORD PTR [rip+0xb840],eax        # 0x40d0e8
  4018a8:	call   QWORD PTR [rdi]
  4018aa:	mov    edx,0x4
  4018af:	lea    rcx,[rip+0xb7e6]        # 0x40d09c
  4018b6:	mov    QWORD PTR [rip+0xb813],rax        # 0x40d0d0
  4018bd:	call   QWORD PTR [rdi]
  4018bf:	mov    edx,0x4
  4018c4:	lea    rcx,[rip+0xb7d5]        # 0x40d0a0
  4018cb:	mov    QWORD PTR [rip+0xb806],rax        # 0x40d0d8
  4018d2:	call   QWORD PTR [rdi]
  4018d4:	mov    edx,0x4
  4018d9:	lea    rcx,[rip+0xb7c4]        # 0x40d0a4
  4018e0:	mov    QWORD PTR [rip+0xb7f9],rax        # 0x40d0e0
  4018e7:	call   QWORD PTR [rdi]
  4018e9:	mov    edx,0x2
  4018ee:	lea    rcx,[rip+0xb7b3]        # 0x40d0a8
  4018f5:	mov    DWORD PTR [rip+0xb7f1],eax        # 0x40d0ec
  4018fb:	call   QWORD PTR [rdi]
  4018fd:	mov    edx,0x2
  401902:	lea    rcx,[rip+0xb7a1]        # 0x40d0aa
  401909:	mov    DWORD PTR [rip+0xb7e5],eax        # 0x40d0f4
  40190f:	call   QWORD PTR [rdi]
  401911:	mov    edx,0x2
  401916:	lea    rcx,[rip+0xb78f]        # 0x40d0ac
  40191d:	mov    DWORD PTR [rip+0xb7d5],eax        # 0x40d0f8
  401923:	call   QWORD PTR [rdi]
  401925:	mov    edx,0x2
  40192a:	lea    rcx,[rip+0xb77d]        # 0x40d0ae
  401931:	mov    DWORD PTR [rip+0xb7c5],eax        # 0x40d0fc
  401937:	call   QWORD PTR [rdi]
  401939:	mov    edx,0x2
  40193e:	lea    rcx,[rip+0xb76b]        # 0x40d0b0
  401945:	mov    DWORD PTR [rip+0xb7b5],eax        # 0x40d100
  40194b:	call   QWORD PTR [rdi]
  40194d:	mov    edx,0x2
  401952:	mov    DWORD PTR [rip+0xb7ac],eax        # 0x40d104
  401958:	lea    rcx,[rip+0xb753]        # 0x40d0b2
  40195f:	call   QWORD PTR [rdi]
  401961:	mov    DWORD PTR [rip+0xb7a1],eax        # 0x40d108
  401967:	mov    rax,QWORD PTR [rip+0xb752]        # 0x40d0c0
  40196e:	mov    QWORD PTR [rip+0xb70b],rax        # 0x40d080
  401975:	mov    rax,QWORD PTR [rip+0xb74c]        # 0x40d0c8
  40197c:	mov    QWORD PTR [rip+0xb705],rax        # 0x40d088
  401983:	jmp    0x401ad9
  401988:	nop    DWORD PTR [rax+rax*1+0x0]
  401990:	lea    rcx,[rip+0xb6b9]        # 0x40d050
  401997:	mov    r9,rbx
  40199a:	mov    r8d,0x1
  4019a0:	mov    edx,0x30
  4019a5:	call   0x406500
  4019aa:	cmp    rax,0x1
  4019ae:	jne    0x40179a
  4019b4:	mov    edx,0x2
  4019b9:	lea    rcx,[rip+0xb690]        # 0x40d050
  4019c0:	call   QWORD PTR [rdi]
  4019c2:	mov    edx,0x2
  4019c7:	lea    rcx,[rip+0xb684]        # 0x40d052
  4019ce:	mov    WORD PTR [rip+0xb71b],ax        # 0x40d0f0
  4019d5:	call   QWORD PTR [rdi]
  4019d7:	mov    edx,0x4
  4019dc:	lea    rcx,[rip+0xb671]        # 0x40d054
  4019e3:	mov    WORD PTR [rip+0xb708],ax        # 0x40d0f2
  4019ea:	call   QWORD PTR [rdi]
  4019ec:	mov    edx,0x8
  4019f1:	lea    rcx,[rip+0xb660]        # 0x40d058
  4019f8:	mov    DWORD PTR [rip+0xb6ea],eax        # 0x40d0e8
  4019fe:	call   QWORD PTR [rdi]
  401a00:	mov    edx,0x8
  401a05:	lea    rcx,[rip+0xb654]        # 0x40d060
  401a0c:	mov    QWORD PTR [rip+0xb6bd],rax        # 0x40d0d0
  401a13:	call   QWORD PTR [rdi]
  401a15:	mov    edx,0x8
  401a1a:	lea    rcx,[rip+0xb647]        # 0x40d068
  401a21:	mov    QWORD PTR [rip+0xb6b0],rax        # 0x40d0d8
  401a28:	call   QWORD PTR [rdi]
  401a2a:	mov    edx,0x4
  401a2f:	lea    rcx,[rip+0xb63a]        # 0x40d070
  401a36:	mov    QWORD PTR [rip+0xb6a3],rax        # 0x40d0e0
  401a3d:	call   QWORD PTR [rdi]
  401a3f:	mov    edx,0x2
  401a44:	lea    rcx,[rip+0xb629]        # 0x40d074
  401a4b:	mov    DWORD PTR [rip+0xb69b],eax        # 0x40d0ec
  401a51:	call   QWORD PTR [rdi]
  401a53:	mov    edx,0x2
  401a58:	lea    rcx,[rip+0xb617]        # 0x40d076
  401a5f:	mov    DWORD PTR [rip+0xb68f],eax        # 0x40d0f4
  401a65:	call   QWORD PTR [rdi]
  401a67:	mov    edx,0x2
  401a6c:	lea    rcx,[rip+0xb605]        # 0x40d078
  401a73:	mov    DWORD PTR [rip+0xb67f],eax        # 0x40d0f8
  401a79:	call   QWORD PTR [rdi]
  401a7b:	mov    edx,0x2
  401a80:	lea    rcx,[rip+0xb5f3]        # 0x40d07a
  401a87:	mov    DWORD PTR [rip+0xb66f],eax        # 0x40d0fc
  401a8d:	call   QWORD PTR [rdi]
  401a8f:	mov    edx,0x2
  401a94:	lea    rcx,[rip+0xb5e1]        # 0x40d07c
  401a9b:	mov    DWORD PTR [rip+0xb65f],eax        # 0x40d100
  401aa1:	call   QWORD PTR [rdi]
  401aa3:	mov    edx,0x2
  401aa8:	mov    DWORD PTR [rip+0xb656],eax        # 0x40d104
  401aae:	lea    rcx,[rip+0xb5c9]        # 0x40d07e
  401ab5:	call   QWORD PTR [rdi]
  401ab7:	mov    DWORD PTR [rip+0xb64b],eax        # 0x40d108
  401abd:	mov    rax,QWORD PTR [rip+0xb5fc]        # 0x40d0c0
  401ac4:	mov    QWORD PTR [rip+0xb575],rax        # 0x40d040
  401acb:	mov    rax,QWORD PTR [rip+0xb5f6]        # 0x40d0c8
  401ad2:	mov    QWORD PTR [rip+0xb56f],rax        # 0x40d048
  401ad9:	xor    r8d,r8d
  401adc:	mov    edx,ebp
  401ade:	mov    rcx,rbx
  401ae1:	call   0x4064f0
  401ae6:	test   eax,eax
  401ae8:	je     0x401af9
  401aea:	lea    rcx,[rip+0x681f]        # 0x408310
  401af1:	mov    rdx,rsi
  401af4:	call   0x402170
  401af9:	cmp    DWORD PTR [rip+0xb5bd],0x464c457f        # 0x40d0c0
  401b03:	jne    0x401b65
  401b05:	movzx  r8d,BYTE PTR [rip+0xb5b9]        # 0x40d0c6
  401b0d:	cmp    r8b,0x1
  401b11:	jne    0x401b80
  401b13:	movzx  eax,WORD PTR [rip+0xb5d8]        # 0x40d0f2
  401b1a:	movsxd rdx,DWORD PTR [rip+0x5653]        # 0x407174
  401b21:	cmp    eax,edx
  401b23:	je     0x401c30
  401b29:	movzx  r8d,BYTE PTR [rip+0xb593]        # 0x40d0c4
  401b31:	mov    r9d,DWORD PTR [rip+0x5628]        # 0x407160
  401b38:	cmp    r8d,r9d
  401b3b:	mov    ecx,r8d
  401b3e:	je     0x401ba0
  401b40:	cmp    r9d,0xffffffff
  401b44:	je     0x401ba0
  401b46:	lea    rcx,[rip+0x6853]        # 0x4083a0
  401b4d:	mov    rdx,rsi
  401b50:	call   0x402170
  401b55:	mov    eax,0x1
  401b5a:	add    rsp,0x20
  401b5e:	pop    rbx
  401b5f:	pop    rsi
  401b60:	pop    rdi
  401b61:	pop    rbp
  401b62:	pop    r12
  401b64:	ret    
  401b65:	lea    rcx,[rip+0x67cc]        # 0x408338
  401b6c:	mov    rdx,rsi
  401b6f:	call   0x402170
  401b74:	jmp    0x401b55
  401b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b80:	lea    rcx,[rip+0x67e9]        # 0x408370
  401b87:	mov    r9d,0x1
  401b8d:	mov    rdx,rsi
  401b90:	call   0x402170
  401b95:	jmp    0x401b55
  401b97:	nop    WORD PTR [rax+rax*1+0x0]
  401ba0:	mov    r9d,DWORD PTR [rip+0x55d1]        # 0x407178
  401ba7:	cmp    eax,r9d
  401baa:	je     0x401bd0
  401bac:	cmp    r9d,0xffffffff
  401bb0:	je     0x401bd0
  401bb2:	lea    rcx,[rip+0x680f]        # 0x4083c8
  401bb9:	mov    r8d,eax
  401bbc:	mov    rdx,rsi
  401bbf:	call   0x402170
  401bc4:	jmp    0x401b55
  401bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bd0:	movzx  r8d,WORD PTR [rip+0xb518]        # 0x40d0f0
  401bd8:	mov    r9d,DWORD PTR [rip+0x5591]        # 0x407170
  401bdf:	cmp    r8d,r9d
  401be2:	je     0x401c00
  401be4:	cmp    r9d,0xffffffff
  401be8:	je     0x401c00
  401bea:	lea    rcx,[rip+0x67ff]        # 0x4083f0
  401bf1:	mov    rdx,rsi
  401bf4:	call   0x402170
  401bf9:	jmp    0x401b55
  401bfe:	xchg   ax,ax
  401c00:	movzx  r8d,BYTE PTR [rip+0xb4bf]        # 0x40d0c7
  401c08:	mov    r9d,DWORD PTR [rip+0x5559]        # 0x407168
  401c0f:	cmp    r8d,r9d
  401c12:	je     0x401c40
  401c14:	cmp    r9d,0xffffffff
  401c18:	je     0x401c40
  401c1a:	lea    rcx,[rip+0x67f7]        # 0x408418
  401c21:	mov    rdx,rsi
  401c24:	call   0x402170
  401c29:	jmp    0x401b55
  401c2e:	xchg   ax,ax
  401c30:	xor    eax,eax
  401c32:	jmp    0x4017ae
  401c37:	nop    WORD PTR [rax+rax*1+0x0]
  401c40:	cmp    cl,0x1
  401c43:	je     0x401c53
  401c45:	cmp    cl,0x2
  401c48:	je     0x401cf0
  401c4e:	call   0x406548
  401c53:	cmp    edx,0xffffffff
  401c56:	je     0x401c69
  401c58:	mov    r8d,0x2
  401c5e:	lea    rcx,[rip+0xb42d]        # 0x40d092
  401c65:	call   QWORD PTR [r12]
  401c69:	mov    eax,DWORD PTR [rip+0x54fd]        # 0x40716c
  401c6f:	cmp    eax,0xffffffff
  401c72:	je     0x401c88
  401c74:	movsxd rdx,eax
  401c77:	mov    r8d,0x2
  401c7d:	lea    rcx,[rip+0xb40c]        # 0x40d090
  401c84:	call   QWORD PTR [r12]
  401c88:	mov    eax,DWORD PTR [rip+0x54d6]        # 0x407164
  401c8e:	cmp    eax,0xffffffff
  401c91:	je     0x401c99
  401c93:	mov    BYTE PTR [rip+0xb3ee],al        # 0x40d087
  401c99:	lea    rcx,[rip+0xb3e0]        # 0x40d080
  401ca0:	mov    r9,rbx
  401ca3:	mov    r8d,0x1
  401ca9:	mov    edx,0x34
  401cae:	call   0x4064d8
  401cb3:	cmp    rax,0x1
  401cb7:	sete   al
  401cba:	movzx  eax,al
  401cbd:	cmp    eax,0x1
  401cc0:	je     0x401c30
  401cc6:	call   QWORD PTR [rip+0xc75c]        # 0x40e428
  401ccc:	mov    ecx,DWORD PTR [rax]
  401cce:	call   0x406458
  401cd3:	lea    rcx,[rip+0x6766]        # 0x408440
  401cda:	mov    r8,rax
  401cdd:	mov    rdx,rsi
  401ce0:	call   0x402170
  401ce5:	jmp    0x401b55
  401cea:	nop    WORD PTR [rax+rax*1+0x0]
  401cf0:	cmp    edx,0xffffffff
  401cf3:	je     0x401d06
  401cf5:	mov    r8d,0x2
  401cfb:	lea    rcx,[rip+0xb350]        # 0x40d052
  401d02:	call   QWORD PTR [r12]
  401d06:	mov    eax,DWORD PTR [rip+0x5460]        # 0x40716c
  401d0c:	cmp    eax,0xffffffff
  401d0f:	je     0x401d25
  401d11:	movsxd rdx,eax
  401d14:	mov    r8d,0x2
  401d1a:	lea    rcx,[rip+0xb32f]        # 0x40d050
  401d21:	call   QWORD PTR [r12]
  401d25:	mov    eax,DWORD PTR [rip+0x5439]        # 0x407164
  401d2b:	cmp    eax,0xffffffff
  401d2e:	je     0x401d36
  401d30:	mov    BYTE PTR [rip+0xb311],al        # 0x40d047
  401d36:	lea    rcx,[rip+0xb303]        # 0x40d040
  401d3d:	mov    r9,rbx
  401d40:	mov    r8d,0x1
  401d46:	mov    edx,0x40
  401d4b:	call   0x4064d8
  401d50:	cmp    rax,0x1
  401d54:	sete   al
  401d57:	movzx  eax,al
  401d5a:	jmp    0x401cbd
  401d5f:	nop
  401d60:	push   r15
  401d62:	push   r14
  401d64:	push   r13
  401d66:	push   r12
  401d68:	push   rbp
  401d69:	push   rdi
  401d6a:	push   rsi
  401d6b:	push   rbx
  401d6c:	sub    rsp,0x178
  401d73:	lea    rsi,[rsp+0x50]
  401d78:	mov    QWORD PTR [rsp+0x1c0],rcx
  401d80:	mov    r9d,r8d
  401d83:	mov    rbp,rdx
  401d86:	mov    r13d,r8d
  401d89:	mov    DWORD PTR [rsp+0x20],0x0
  401d91:	mov    r8,rdx
  401d94:	mov    rdx,rcx
  401d97:	mov    rcx,rsi
  401d9a:	mov    QWORD PTR [rsp+0x50],0x0
  401da3:	mov    QWORD PTR [rsp+0x58],0x0
  401dac:	lea    rdi,[rsp+0xe0]
  401db4:	mov    QWORD PTR [rsp+0x68],0x0
  401dbd:	mov    QWORD PTR [rsp+0x70],0x0
  401dc6:	mov    QWORD PTR [rsp+0x80],0x0
  401dd2:	mov    QWORD PTR [rsp+0xe0],0x0
  401dde:	mov    QWORD PTR [rsp+0xe8],0x0
  401dea:	mov    QWORD PTR [rsp+0xf8],0x0
  401df6:	mov    QWORD PTR [rsp+0x100],0x0
  401e02:	mov    QWORD PTR [rsp+0x110],0x0
  401e0e:	call   0x402c50
  401e13:	test   eax,eax
  401e15:	jne    0x401ff0
  401e1b:	lea    rax,[rsi+0x4c]
  401e1f:	xor    r12d,r12d
  401e22:	mov    QWORD PTR [rsp+0x38],rax
  401e27:	lea    rax,[rsi+0x86]
  401e2e:	mov    QWORD PTR [rsp+0x40],rax
  401e33:	lea    rax,[rsp+0xe0]
  401e3b:	mov    QWORD PTR [rsp+0x48],rax
  401e40:	jmp    0x401e72
  401e42:	mov    eax,DWORD PTR [rsp+0x90]
  401e49:	mov    rdx,rbp
  401e4c:	mov    rcx,r14
  401e4f:	mov    DWORD PTR [rip+0xb2bf],eax        # 0x40d114
  401e55:	add    eax,DWORD PTR [rip+0xb2b5]        # 0x40d110
  401e5b:	mov    DWORD PTR [rsp+0x90],eax
  401e62:	call   0x401760
  401e67:	or     r12d,eax
  401e6a:	mov    rcx,r14
  401e6d:	call   0x4064f8
  401e72:	mov    edx,DWORD PTR [rsp+0x90]
  401e79:	xor    r8d,r8d
  401e7c:	mov    rcx,rbp
  401e7f:	call   0x4064f0
  401e84:	test   eax,eax
  401e86:	jne    0x402050
  401e8c:	mov    rcx,QWORD PTR [rsp+0x38]
  401e91:	mov    r9,rbp
  401e94:	mov    r8d,0x3c
  401e9a:	mov    edx,0x1
  401e9f:	call   0x406500
  401ea4:	cmp    rax,0x3c
  401ea8:	jne    0x402070
  401eae:	mov    rcx,QWORD PTR [rsp+0x40]
  401eb3:	lea    rdx,[rip+0x6621]        # 0x4084db
  401eba:	mov    r8d,0x2
  401ec0:	call   0x4064b8
  401ec5:	test   eax,eax
  401ec7:	jne    0x4020a0
  401ecd:	lea    rcx,[rsi+0x7c]
  401ed1:	xor    edx,edx
  401ed3:	mov    r8d,0xa
  401ed9:	add    DWORD PTR [rsp+0x90],0x3c
  401ee1:	call   0x406440
  401ee6:	test   al,0x1
  401ee8:	je     0x401eed
  401eea:	add    eax,0x1
  401eed:	mov    rdi,QWORD PTR [rsp+0x48]
  401ef2:	mov    rcx,rsi
  401ef5:	mov    DWORD PTR [rip+0xb215],eax        # 0x40d110
  401efb:	mov    rdx,rdi
  401efe:	call   0x403090
  401f03:	test   rax,rax
  401f06:	mov    rbx,rax
  401f09:	je     0x402030
  401f0f:	mov    rcx,rax
  401f12:	call   0x406450
  401f17:	mov    r8,rbx
  401f1a:	mov    rdx,rdi
  401f1d:	mov    rcx,rsi
  401f20:	mov    r15,rax
  401f23:	call   0x4032b0
  401f28:	test   rax,rax
  401f2b:	mov    r14,rax
  401f2e:	je     0x402030
  401f34:	test   r13d,r13d
  401f37:	je     0x401e42
  401f3d:	mov    edx,DWORD PTR [rsp+0x8c]
  401f44:	test   edx,edx
  401f46:	je     0x401f81
  401f48:	mov    rcx,QWORD PTR [rsp+0xe8]
  401f50:	add    edx,0x3c
  401f53:	xor    r8d,r8d
  401f56:	mov    DWORD PTR [rip+0xb1b8],edx        # 0x40d114
  401f5c:	call   0x4064f0
  401f61:	test   eax,eax
  401f63:	jne    0x4020c4
  401f69:	mov    rdx,QWORD PTR [rsp+0xe8]
  401f71:	mov    rcx,r14
  401f74:	call   0x401760
  401f79:	or     r12d,eax
  401f7c:	jmp    0x401e6a
  401f81:	mov    rcx,QWORD PTR [rsp+0x1c0]
  401f89:	mov    rdx,rbx
  401f8c:	mov    r8d,r15d
  401f8f:	call   0x402b40
  401f94:	test   rax,rax
  401f97:	mov    rbx,rax
  401f9a:	je     0x401ff0
  401f9c:	lea    rdx,[rip+0x6581]        # 0x408524
  401fa3:	mov    rcx,rax
  401fa6:	call   0x406518
  401fab:	test   rax,rax
  401fae:	mov    r15,rax
  401fb1:	je     0x4020e3
  401fb7:	mov    eax,DWORD PTR [rsp+0x8c]
  401fbe:	mov    rdx,r15
  401fc1:	mov    rcx,r14
  401fc4:	mov    DWORD PTR [rip+0xb14a],eax        # 0x40d114
  401fca:	call   0x401760
  401fcf:	mov    rcx,r15
  401fd2:	or     r12d,eax
  401fd5:	call   0x406530
  401fda:	mov    rcx,rbx
  401fdd:	call   0x4064f8
  401fe2:	jmp    0x401e6a
  401fe7:	nop    WORD PTR [rax+rax*1+0x0]
  401ff0:	mov    r12d,0x1
  401ff6:	mov    rcx,QWORD PTR [rsp+0xe8]
  401ffe:	test   rcx,rcx
  402001:	je     0x402008
  402003:	call   0x406530
  402008:	mov    rcx,rdi
  40200b:	call   0x402f20
  402010:	mov    rcx,rsi
  402013:	call   0x402f20
  402018:	mov    eax,r12d
  40201b:	add    rsp,0x178
  402022:	pop    rbx
  402023:	pop    rsi
  402024:	pop    rdi
  402025:	pop    rbp
  402026:	pop    r12
  402028:	pop    r13
  40202a:	pop    r14
  40202c:	pop    r15
  40202e:	ret    
  40202f:	nop
  402030:	mov    rdx,QWORD PTR [rsp+0x1c0]
  402038:	lea    rcx,[rip+0x64ca]        # 0x408509
  40203f:	mov    r12d,0x1
  402045:	call   0x402170
  40204a:	jmp    0x401ff6
  40204c:	nop    DWORD PTR [rax+0x0]
  402050:	mov    rdx,QWORD PTR [rsp+0x1c0]
  402058:	lea    rcx,[rip+0x6429]        # 0x408488
  40205f:	call   0x402170
  402064:	mov    eax,0x1
  402069:	jmp    0x40201b
  40206b:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	test   rax,rax
  402073:	lea    rdi,[rsp+0xe0]
  40207b:	je     0x401ff6
  402081:	mov    rdx,QWORD PTR [rsp+0x1c0]
  402089:	lea    rcx,[rip+0x6428]        # 0x4084b8
  402090:	mov    r12d,0x1
  402096:	call   0x402170
  40209b:	jmp    0x401ff6
  4020a0:	mov    rdx,QWORD PTR [rsp+0x50]
  4020a5:	lea    rcx,[rip+0x6434]        # 0x4084e0
  4020ac:	mov    r12d,0x1
  4020b2:	lea    rdi,[rsp+0xe0]
  4020ba:	call   0x402170
  4020bf:	jmp    0x401ff6
  4020c4:	mov    rdx,QWORD PTR [rsp+0xe0]
  4020cc:	lea    rcx,[rip+0x647d]        # 0x408550
  4020d3:	mov    r12d,0x1
  4020d9:	call   0x402170
  4020de:	jmp    0x401ff6
  4020e3:	lea    rcx,[rip+0x643e]        # 0x408528
  4020ea:	mov    rdx,rbx
  4020ed:	mov    r12d,0x1
  4020f3:	call   0x402170
  4020f8:	mov    rcx,rbx
  4020fb:	call   0x4064f8
  402100:	jmp    0x401ff6
  402105:	nop
  402106:	nop
  402107:	nop
  402108:	nop
  402109:	nop
  40210a:	nop
  40210b:	nop
  40210c:	nop
  40210d:	nop
  40210e:	nop
  40210f:	nop
  402110:	sub    rsp,0x28
  402114:	lea    r8,[rip+0x67e5]        # 0x408900
  40211b:	mov    rdx,rcx
  40211e:	lea    rcx,[rip+0x67f1]        # 0x408916
  402125:	call   0x4064a0
  40212a:	lea    rcx,[rip+0x67f7]        # 0x408928
  402131:	call   0x406498
  402136:	lea    rcx,[rip+0x6823]        # 0x408960
  40213d:	call   0x406498
  402142:	xor    ecx,ecx
  402144:	call   0x406538
  402149:	nop
  40214a:	nop
  40214b:	nop
  40214c:	nop
  40214d:	nop
  40214e:	nop
  40214f:	nop
  402150:	sub    rsp,0x38
  402154:	mov    QWORD PTR [rsp+0x58],r9
  402159:	lea    r9,[rsp+0x58]
  40215e:	mov    QWORD PTR [rsp+0x28],r9
  402163:	call   0x406410
  402168:	add    rsp,0x38
  40216c:	ret    
  40216d:	nop    DWORD PTR [rax]
  402170:	push   rdi
  402171:	push   rsi
  402172:	push   rbx
  402173:	sub    rsp,0x30
  402177:	mov    rbx,QWORD PTR [rip+0xc272]        # 0x40e3f0
  40217e:	mov    QWORD PTR [rsp+0x68],r9
  402183:	mov    QWORD PTR [rsp+0x58],rdx
  402188:	mov    rsi,rcx
  40218b:	mov    QWORD PTR [rsp+0x60],r8
  402190:	call   rbx
  402192:	lea    rcx,[rax+0x30]
  402196:	call   0x406520
  40219b:	lea    rax,[rsp+0x58]
  4021a0:	mov    QWORD PTR [rsp+0x28],rax
  4021a5:	mov    rax,QWORD PTR [rip+0x7b24]        # 0x409cd0
  4021ac:	mov    rdi,QWORD PTR [rax]
  4021af:	call   rbx
  4021b1:	lea    rdx,[rip+0x6878]        # 0x408a30
  4021b8:	lea    rcx,[rax+0x60]
  4021bc:	mov    r8,rdi
  4021bf:	call   0x406510
  4021c4:	mov    rdi,QWORD PTR [rsp+0x28]
  4021c9:	call   rbx
  4021cb:	lea    rcx,[rax+0x60]
  4021cf:	mov    rdx,rsi
  4021d2:	mov    r8,rdi
  4021d5:	call   0x406438
  4021da:	nop
  4021db:	add    rsp,0x30
  4021df:	pop    rbx
  4021e0:	pop    rsi
  4021e1:	pop    rdi
  4021e2:	ret    
  4021e3:	nop    DWORD PTR [rax]
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021f0:	sub    rsp,0x28
  4021f4:	cmp    edx,0x8
  4021f7:	ja     0x4023b0
  4021fd:	lea    rax,[rip+0x6854]        # 0x408a58
  402204:	mov    r8d,edx
  402207:	movsxd r8,DWORD PTR [rax+r8*4]
  40220b:	add    rax,r8
  40220e:	jmp    rax
  402210:	movzx  eax,BYTE PTR [rcx+0x6]
  402214:	shl    rax,0x8
  402218:	mov    rdx,rax
  40221b:	movzx  eax,BYTE PTR [rcx+0x5]
  40221f:	shl    rax,0x10
  402223:	or     rax,rdx
  402226:	movzx  edx,BYTE PTR [rcx+0x7]
  40222a:	or     rax,rdx
  40222d:	movzx  edx,BYTE PTR [rcx+0x4]
  402231:	shl    rdx,0x18
  402235:	or     rax,rdx
  402238:	movzx  edx,BYTE PTR [rcx+0x3]
  40223c:	shl    rdx,0x20
  402240:	or     rax,rdx
  402243:	movzx  edx,BYTE PTR [rcx+0x2]
  402247:	shl    rdx,0x28
  40224b:	or     rax,rdx
  40224e:	movzx  edx,BYTE PTR [rcx+0x1]
  402252:	shl    rdx,0x30
  402256:	or     rax,rdx
  402259:	movzx  edx,BYTE PTR [rcx]
  40225c:	shl    rdx,0x38
  402260:	or     rax,rdx
  402263:	add    rsp,0x28
  402267:	ret    
  402268:	nop    DWORD PTR [rax+rax*1+0x0]
  402270:	movzx  eax,BYTE PTR [rcx]
  402273:	add    rsp,0x28
  402277:	ret    
  402278:	nop    DWORD PTR [rax+rax*1+0x0]
  402280:	movzx  eax,BYTE PTR [rcx]
  402283:	movzx  edx,BYTE PTR [rcx+0x1]
  402287:	shl    eax,0x8
  40228a:	or     eax,edx
  40228c:	add    rsp,0x28
  402290:	ret    
  402291:	movzx  eax,BYTE PTR [rcx+0x1]
  402295:	movzx  edx,BYTE PTR [rcx]
  402298:	shl    eax,0x8
  40229b:	mov    r8d,eax
  40229e:	mov    eax,edx
  4022a0:	movzx  edx,BYTE PTR [rcx+0x2]
  4022a4:	shl    eax,0x10
  4022a7:	or     eax,r8d
  4022aa:	or     eax,edx
  4022ac:	add    rsp,0x28
  4022b0:	ret    
  4022b1:	movzx  eax,BYTE PTR [rcx+0x2]
  4022b5:	shl    eax,0x8
  4022b8:	mov    edx,eax
  4022ba:	movzx  eax,BYTE PTR [rcx+0x1]
  4022be:	shl    eax,0x10
  4022c1:	or     eax,edx
  4022c3:	movzx  edx,BYTE PTR [rcx+0x3]
  4022c7:	or     eax,edx
  4022c9:	movzx  edx,BYTE PTR [rcx]
  4022cc:	shl    edx,0x18
  4022cf:	or     eax,edx
  4022d1:	add    rsp,0x28
  4022d5:	ret    
  4022d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022e0:	movzx  eax,BYTE PTR [rcx+0x3]
  4022e4:	shl    rax,0x8
  4022e8:	mov    rdx,rax
  4022eb:	movzx  eax,BYTE PTR [rcx+0x2]
  4022ef:	shl    rax,0x10
  4022f3:	or     rax,rdx
  4022f6:	movzx  edx,BYTE PTR [rcx+0x4]
  4022fa:	or     rax,rdx
  4022fd:	movzx  edx,BYTE PTR [rcx+0x1]
  402301:	shl    rdx,0x18
  402305:	or     rax,rdx
  402308:	movzx  edx,BYTE PTR [rcx]
  40230b:	shl    rdx,0x20
  40230f:	or     rax,rdx
  402312:	add    rsp,0x28
  402316:	ret    
  402317:	nop    WORD PTR [rax+rax*1+0x0]
  402320:	movzx  eax,BYTE PTR [rcx+0x4]
  402324:	shl    rax,0x8
  402328:	mov    rdx,rax
  40232b:	movzx  eax,BYTE PTR [rcx+0x3]
  40232f:	shl    rax,0x10
  402333:	or     rax,rdx
  402336:	movzx  edx,BYTE PTR [rcx+0x5]
  40233a:	or     rax,rdx
  40233d:	movzx  edx,BYTE PTR [rcx+0x2]
  402341:	shl    rdx,0x18
  402345:	or     rax,rdx
  402348:	movzx  edx,BYTE PTR [rcx+0x1]
  40234c:	shl    rdx,0x20
  402350:	or     rax,rdx
  402353:	movzx  edx,BYTE PTR [rcx]
  402356:	shl    rdx,0x28
  40235a:	or     rax,rdx
  40235d:	add    rsp,0x28
  402361:	ret    
  402362:	movzx  eax,BYTE PTR [rcx+0x5]
  402366:	shl    rax,0x8
  40236a:	mov    rdx,rax
  40236d:	movzx  eax,BYTE PTR [rcx+0x4]
  402371:	shl    rax,0x10
  402375:	or     rax,rdx
  402378:	movzx  edx,BYTE PTR [rcx+0x6]
  40237c:	or     rax,rdx
  40237f:	movzx  edx,BYTE PTR [rcx+0x3]
  402383:	shl    rdx,0x18
  402387:	or     rax,rdx
  40238a:	movzx  edx,BYTE PTR [rcx+0x2]
  40238e:	shl    rdx,0x20
  402392:	or     rax,rdx
  402395:	movzx  edx,BYTE PTR [rcx+0x1]
  402399:	shl    rdx,0x28
  40239d:	or     rax,rdx
  4023a0:	movzx  edx,BYTE PTR [rcx]
  4023a3:	shl    rdx,0x30
  4023a7:	or     rax,rdx
  4023aa:	add    rsp,0x28
  4023ae:	ret    
  4023af:	nop
  4023b0:	lea    rcx,[rip+0x6685]        # 0x408a3c
  4023b7:	call   0x402170
  4023bc:	call   0x406548
  4023c1:	nop
  4023c2:	nop    DWORD PTR [rax+0x0]
  4023c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023d0:	push   r14
  4023d2:	push   r13
  4023d4:	push   r12
  4023d6:	push   rbp
  4023d7:	push   rdi
  4023d8:	push   rsi
  4023d9:	push   rbx
  4023da:	sub    rsp,0x50
  4023de:	mov    rsi,rcx
  4023e1:	lea    rcx,[rcx+0x7c]
  4023e5:	mov    edi,edx
  4023e7:	mov    ebp,r8d
  4023ea:	xor    edx,edx
  4023ec:	mov    r8d,0xa
  4023f2:	call   0x406440
  4023f7:	test   eax,eax
  4023f9:	js     0x402555
  4023ff:	mov    ebx,eax
  402401:	and    ebx,0x1
  402404:	add    ebx,eax
  402406:	mov    eax,DWORD PTR [rsi+0x40]
  402409:	test   ebp,ebp
  40240b:	lea    eax,[rbx+rax*1+0x3c]
  40240f:	mov    DWORD PTR [rsi+0x40],eax
  402412:	je     0x402480
  402414:	cmp    edi,0x8
  402417:	ja     0x4024d0
  40241d:	cmp    ebx,edi
  40241f:	jb     0x402465
  402421:	lea    r12,[rsp+0x40]
  402426:	mov    r9,QWORD PTR [rsi+0x8]
  40242a:	mov    ebp,edi
  40242c:	mov    r8,rbp
  40242f:	mov    edx,0x1
  402434:	mov    rcx,r12
  402437:	call   0x406500
  40243c:	cmp    rbp,rax
  40243f:	je     0x402514
  402445:	mov    rdx,QWORD PTR [rsi]
  402448:	lea    rcx,[rip+0x66e1]        # 0x408b30
  40244f:	call   0x402170
  402454:	xor    eax,eax
  402456:	add    rsp,0x50
  40245a:	pop    rbx
  40245b:	pop    rsi
  40245c:	pop    rdi
  40245d:	pop    rbp
  40245e:	pop    r12
  402460:	pop    r13
  402462:	pop    r14
  402464:	ret    
  402465:	mov    rdx,QWORD PTR [rsi]
  402468:	lea    rcx,[rip+0x66a1]        # 0x408b10
  40246f:	call   0x402170
  402474:	jmp    0x402454
  402476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402480:	mov    rcx,QWORD PTR [rsi+0x8]
  402484:	mov    r8d,0x1
  40248a:	mov    edx,ebx
  40248c:	call   0x4064f0
  402491:	test   eax,eax
  402493:	jne    0x402570
  402499:	mov    r9,QWORD PTR [rsi+0x8]
  40249d:	lea    rcx,[rsi+0x4c]
  4024a1:	mov    r8d,0x3c
  4024a7:	mov    edx,0x1
  4024ac:	call   0x406500
  4024b1:	test   rax,rax
  4024b4:	je     0x402500
  4024b6:	cmp    rax,0x3c
  4024ba:	je     0x402500
  4024bc:	mov    rdx,QWORD PTR [rsi]
  4024bf:	lea    rcx,[rip+0x6822]        # 0x408ce8
  4024c6:	call   0x402170
  4024cb:	xor    eax,eax
  4024cd:	jmp    0x402456
  4024cf:	nop
  4024d0:	lea    rdx,[rip+0x65fa]        # 0x408ad1
  4024d7:	lea    rcx,[rip+0x6602]        # 0x408ae0
  4024de:	mov    r8d,0x1ed
  4024e4:	call   0x406350
  4024e9:	cmp    ebx,edi
  4024eb:	jae    0x402421
  4024f1:	jmp    0x402465
  4024f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402500:	mov    eax,0x1
  402505:	add    rsp,0x50
  402509:	pop    rbx
  40250a:	pop    rsi
  40250b:	pop    rdi
  40250c:	pop    rbp
  40250d:	pop    r12
  40250f:	pop    r13
  402511:	pop    r14
  402513:	ret    
  402514:	mov    rcx,r12
  402517:	mov    edx,edi
  402519:	sub    ebx,edi
  40251b:	call   0x4021f0
  402520:	mov    r8,rax
  402523:	mov    QWORD PTR [rsi+0x10],rax
  402527:	mov    eax,ebx
  402529:	mov    rcx,r8
  40252c:	imul   rcx,rbp
  402530:	cmp    rax,rcx
  402533:	jb     0x40253a
  402535:	cmp    r8,rax
  402538:	jbe    0x402590
  40253a:	mov    rdx,QWORD PTR [rsi]
  40253d:	lea    rcx,[rip+0x6614]        # 0x408b58
  402544:	mov    DWORD PTR [rsp+0x20],ebx
  402548:	mov    r9d,edi
  40254b:	call   0x402170
  402550:	jmp    0x402454
  402555:	mov    rdx,QWORD PTR [rsi]
  402558:	lea    rcx,[rip+0x6521]        # 0x408a80
  40255f:	mov    r8d,eax
  402562:	call   0x402170
  402567:	xor    eax,eax
  402569:	jmp    0x402456
  40256e:	xchg   ax,ax
  402570:	mov    rdx,QWORD PTR [rsi]
  402573:	lea    rcx,[rip+0x652e]        # 0x408aa8
  40257a:	call   0x402170
  40257f:	xor    eax,eax
  402581:	jmp    0x402456
  402586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402590:	mov    QWORD PTR [rsp+0x38],r8
  402595:	call   0x4064c0
  40259a:	test   rax,rax
  40259d:	mov    r12,rax
  4025a0:	mov    r8,QWORD PTR [rsp+0x38]
  4025a5:	je     0x402647
  4025ab:	mov    r9,QWORD PTR [rsi+0x8]
  4025af:	mov    rdx,rbp
  4025b2:	mov    rcx,rax
  4025b5:	call   0x406500
  4025ba:	mov    rbp,QWORD PTR [rsi+0x10]
  4025be:	cmp    rbp,rax
  4025c1:	je     0x4025d0
  4025c3:	mov    rcx,r12
  4025c6:	call   0x4064f8
  4025cb:	jmp    0x402445
  4025d0:	mov    eax,edi
  4025d2:	lea    rcx,[rbp*8+0x0]
  4025da:	imul   eax,ebp
  4025dd:	sub    ebx,eax
  4025df:	call   0x4064c0
  4025e4:	test   rax,rax
  4025e7:	mov    QWORD PTR [rsi+0x18],rax
  4025eb:	je     0x40269f
  4025f1:	test   rbp,rbp
  4025f4:	je     0x402627
  4025f6:	xor    r13d,r13d
  4025f9:	xor    edx,edx
  4025fb:	xor    ebp,ebp
  4025fd:	jmp    0x402604
  4025ff:	nop
  402600:	mov    rax,QWORD PTR [rsi+0x18]
  402604:	lea    r14,[rax+rdx*8]
  402608:	mov    ecx,r13d
  40260b:	mov    edx,edi
  40260d:	add    rcx,r12
  402610:	add    r13d,edi
  402613:	call   0x4021f0
  402618:	lea    edx,[rbp+0x1]
  40261b:	mov    QWORD PTR [r14],rax
  40261e:	cmp    rdx,QWORD PTR [rsi+0x10]
  402622:	mov    rbp,rdx
  402625:	jb     0x402600
  402627:	mov    rcx,r12
  40262a:	call   0x4064f8
  40262f:	test   ebx,ebx
  402631:	jne    0x402658
  402633:	mov    rdx,QWORD PTR [rsi]
  402636:	lea    rcx,[rip+0x660b]        # 0x408c48
  40263d:	call   0x402170
  402642:	jmp    0x402454
  402647:	lea    rcx,[rip+0x6572]        # 0x408bc0
  40264e:	call   0x402170
  402653:	jmp    0x402454
  402658:	mov    edi,ebx
  40265a:	mov    rcx,rdi
  40265d:	call   0x4064c0
  402662:	test   rax,rax
  402665:	mov    QWORD PTR [rsi+0x20],rax
  402669:	je     0x4026b8
  40266b:	mov    r9,QWORD PTR [rsi+0x8]
  40266f:	mov    DWORD PTR [rsi+0x28],ebx
  402672:	mov    r8,rdi
  402675:	mov    edx,0x1
  40267a:	mov    rcx,rax
  40267d:	call   0x406500
  402682:	cmp    rdi,rax
  402685:	je     0x402499
  40268b:	mov    rdx,QWORD PTR [rsi]
  40268e:	lea    rcx,[rip+0x6623]        # 0x408cb8
  402695:	call   0x402170
  40269a:	jmp    0x402454
  40269f:	mov    rcx,r12
  4026a2:	call   0x4064f8
  4026a7:	lea    rcx,[rip+0x6552]        # 0x408c00
  4026ae:	call   0x402170
  4026b3:	jmp    0x402454
  4026b8:	lea    rcx,[rip+0x65b9]        # 0x408c78
  4026bf:	call   0x402170
  4026c4:	jmp    0x402454
  4026c9:	nop    DWORD PTR [rax+0x0]
  4026d0:	push   rdi
  4026d1:	push   rsi
  4026d2:	push   rbx
  4026d3:	sub    rsp,0x30
  4026d7:	mov    rbx,QWORD PTR [rip+0xbd12]        # 0x40e3f0
  4026de:	mov    QWORD PTR [rsp+0x68],r9
  4026e3:	mov    QWORD PTR [rsp+0x58],rdx
  4026e8:	mov    rsi,rcx
  4026eb:	mov    QWORD PTR [rsp+0x60],r8
  4026f0:	call   rbx
  4026f2:	lea    rcx,[rax+0x30]
  4026f6:	call   0x406520
  4026fb:	lea    rax,[rsp+0x58]
  402700:	mov    QWORD PTR [rsp+0x28],rax
  402705:	mov    rax,QWORD PTR [rip+0x75c4]        # 0x409cd0
  40270c:	mov    rdi,QWORD PTR [rax]
  40270f:	call   rbx
  402711:	lea    rdx,[rip+0x660b]        # 0x408d23
  402718:	lea    rcx,[rax+0x60]
  40271c:	mov    r8,rdi
  40271f:	call   0x406510
  402724:	mov    rdi,QWORD PTR [rsp+0x28]
  402729:	call   rbx
  40272b:	lea    rcx,[rax+0x60]
  40272f:	mov    rdx,rsi
  402732:	mov    r8,rdi
  402735:	call   0x406438
  40273a:	nop
  40273b:	add    rsp,0x30
  40273f:	pop    rbx
  402740:	pop    rsi
  402741:	pop    rdi
  402742:	ret    
  402743:	nop    DWORD PTR [rax]
  402746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402750:	sub    rsp,0x28
  402754:	cmp    r8d,0x8
  402758:	mov    r9,rdx
  40275b:	ja     0x4027c0
  40275d:	lea    rax,[rip+0x65d0]        # 0x408d34
  402764:	mov    edx,r8d
  402767:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40276b:	add    rax,rdx
  40276e:	jmp    rax
  402770:	mov    rax,r9
  402773:	shr    rax,0x38
  402777:	mov    BYTE PTR [rcx+0x7],al
  40277a:	mov    rax,r9
  40277d:	shr    rax,0x30
  402781:	mov    BYTE PTR [rcx+0x6],al
  402784:	mov    rax,r9
  402787:	shr    rax,0x28
  40278b:	mov    BYTE PTR [rcx+0x5],al
  40278e:	mov    rax,r9
  402791:	shr    rax,0x20
  402795:	mov    BYTE PTR [rcx+0x4],al
  402798:	mov    rax,r9
  40279b:	shr    rax,0x18
  40279f:	mov    BYTE PTR [rcx+0x3],al
  4027a2:	mov    rax,r9
  4027a5:	shr    rax,0x10
  4027a9:	mov    BYTE PTR [rcx+0x2],al
  4027ac:	mov    rax,r9
  4027af:	shr    rax,0x8
  4027b3:	mov    BYTE PTR [rcx+0x1],al
  4027b6:	mov    BYTE PTR [rcx],r9b
  4027b9:	add    rsp,0x28
  4027bd:	ret    
  4027be:	xchg   ax,ax
  4027c0:	lea    rcx,[rip+0x6275]        # 0x408a3c
  4027c7:	mov    edx,r8d
  4027ca:	call   0x402170
  4027cf:	call   0x406548
  4027d4:	nop
  4027d5:	nop
  4027d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027e0:	sub    rsp,0x28
  4027e4:	cmp    r8d,0x8
  4027e8:	mov    rax,rdx
  4027eb:	ja     0x402842
  4027ed:	lea    r9,[rip+0x6564]        # 0x408d58
  4027f4:	mov    edx,r8d
  4027f7:	movsxd rdx,DWORD PTR [r9+rdx*4]
  4027fb:	add    r9,rdx
  4027fe:	jmp    r9
  402801:	mov    rdx,rax
  402804:	mov    BYTE PTR [rcx+0x7],al
  402807:	shr    rdx,0x8
  40280b:	mov    BYTE PTR [rcx+0x6],dl
  40280e:	mov    rdx,rax
  402811:	shr    rdx,0x10
  402815:	mov    BYTE PTR [rcx+0x5],dl
  402818:	mov    rdx,rax
  40281b:	shr    rax,0x20
  40281f:	shr    rdx,0x18
  402823:	mov    BYTE PTR [rcx+0x4],dl
  402826:	mov    BYTE PTR [rcx+0x3],al
  402829:	shr    rax,0x8
  40282d:	mov    BYTE PTR [rcx+0x2],al
  402830:	shr    rax,0x8
  402834:	mov    BYTE PTR [rcx+0x1],al
  402837:	shr    rax,0x8
  40283b:	mov    BYTE PTR [rcx],al
  40283d:	add    rsp,0x28
  402841:	ret    
  402842:	lea    rcx,[rip+0x61f3]        # 0x408a3c
  402849:	mov    edx,r8d
  40284c:	call   0x402170
  402851:	call   0x406548
  402856:	nop
  402857:	nop    WORD PTR [rax+rax*1+0x0]
  402860:	sub    rsp,0x28
  402864:	cmp    edx,0x8
  402867:	ja     0x402a20
  40286d:	lea    rax,[rip+0x6508]        # 0x408d7c
  402874:	mov    r8d,edx
  402877:	movsxd r8,DWORD PTR [rax+r8*4]
  40287b:	add    rax,r8
  40287e:	jmp    rax
  402880:	movzx  eax,BYTE PTR [rcx+0x1]
  402884:	shl    rax,0x8
  402888:	mov    rdx,rax
  40288b:	movzx  eax,BYTE PTR [rcx+0x2]
  40288f:	shl    rax,0x10
  402893:	or     rax,rdx
  402896:	movzx  edx,BYTE PTR [rcx]
  402899:	or     rax,rdx
  40289c:	movzx  edx,BYTE PTR [rcx+0x3]
  4028a0:	shl    rdx,0x18
  4028a4:	or     rax,rdx
  4028a7:	movzx  edx,BYTE PTR [rcx+0x4]
  4028ab:	shl    rdx,0x20
  4028af:	or     rax,rdx
  4028b2:	movzx  edx,BYTE PTR [rcx+0x5]
  4028b6:	shl    rdx,0x28
  4028ba:	or     rax,rdx
  4028bd:	movzx  edx,BYTE PTR [rcx+0x6]
  4028c1:	shl    rdx,0x30
  4028c5:	or     rax,rdx
  4028c8:	movzx  edx,BYTE PTR [rcx+0x7]
  4028cc:	shl    rdx,0x38
  4028d0:	or     rax,rdx
  4028d3:	add    rsp,0x28
  4028d7:	ret    
  4028d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	movzx  eax,BYTE PTR [rcx]
  4028e3:	add    rsp,0x28
  4028e7:	ret    
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	movzx  eax,BYTE PTR [rcx+0x1]
  4028f4:	movzx  edx,BYTE PTR [rcx]
  4028f7:	shl    eax,0x8
  4028fa:	or     eax,edx
  4028fc:	add    rsp,0x28
  402900:	ret    
  402901:	movzx  eax,BYTE PTR [rcx+0x1]
  402905:	movzx  edx,BYTE PTR [rcx+0x2]
  402909:	shl    eax,0x8
  40290c:	mov    r8d,eax
  40290f:	mov    eax,edx
  402911:	movzx  edx,BYTE PTR [rcx]
  402914:	shl    eax,0x10
  402917:	or     eax,r8d
  40291a:	or     eax,edx
  40291c:	add    rsp,0x28
  402920:	ret    
  402921:	movzx  eax,BYTE PTR [rcx+0x1]
  402925:	shl    eax,0x8
  402928:	mov    edx,eax
  40292a:	movzx  eax,BYTE PTR [rcx+0x2]
  40292e:	shl    eax,0x10
  402931:	or     eax,edx
  402933:	movzx  edx,BYTE PTR [rcx]
  402936:	or     eax,edx
  402938:	movzx  edx,BYTE PTR [rcx+0x3]
  40293c:	shl    edx,0x18
  40293f:	or     eax,edx
  402941:	add    rsp,0x28
  402945:	ret    
  402946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402950:	movzx  eax,BYTE PTR [rcx+0x1]
  402954:	shl    rax,0x8
  402958:	mov    rdx,rax
  40295b:	movzx  eax,BYTE PTR [rcx+0x2]
  40295f:	shl    rax,0x10
  402963:	or     rax,rdx
  402966:	movzx  edx,BYTE PTR [rcx]
  402969:	or     rax,rdx
  40296c:	movzx  edx,BYTE PTR [rcx+0x3]
  402970:	shl    rdx,0x18
  402974:	or     rax,rdx
  402977:	movzx  edx,BYTE PTR [rcx+0x4]
  40297b:	shl    rdx,0x20
  40297f:	or     rax,rdx
  402982:	add    rsp,0x28
  402986:	ret    
  402987:	nop    WORD PTR [rax+rax*1+0x0]
  402990:	movzx  eax,BYTE PTR [rcx+0x1]
  402994:	shl    rax,0x8
  402998:	mov    rdx,rax
  40299b:	movzx  eax,BYTE PTR [rcx+0x2]
  40299f:	shl    rax,0x10
  4029a3:	or     rax,rdx
  4029a6:	movzx  edx,BYTE PTR [rcx]
  4029a9:	or     rax,rdx
  4029ac:	movzx  edx,BYTE PTR [rcx+0x3]
  4029b0:	shl    rdx,0x18
  4029b4:	or     rax,rdx
  4029b7:	movzx  edx,BYTE PTR [rcx+0x4]
  4029bb:	shl    rdx,0x20
  4029bf:	or     rax,rdx
  4029c2:	movzx  edx,BYTE PTR [rcx+0x5]
  4029c6:	shl    rdx,0x28
  4029ca:	or     rax,rdx
  4029cd:	add    rsp,0x28
  4029d1:	ret    
  4029d2:	movzx  eax,BYTE PTR [rcx+0x1]
  4029d6:	shl    rax,0x8
  4029da:	mov    rdx,rax
  4029dd:	movzx  eax,BYTE PTR [rcx+0x2]
  4029e1:	shl    rax,0x10
  4029e5:	or     rax,rdx
  4029e8:	movzx  edx,BYTE PTR [rcx]
  4029eb:	or     rax,rdx
  4029ee:	movzx  edx,BYTE PTR [rcx+0x3]
  4029f2:	shl    rdx,0x18
  4029f6:	or     rax,rdx
  4029f9:	movzx  edx,BYTE PTR [rcx+0x4]
  4029fd:	shl    rdx,0x20
  402a01:	or     rax,rdx
  402a04:	movzx  edx,BYTE PTR [rcx+0x5]
  402a08:	shl    rdx,0x28
  402a0c:	or     rax,rdx
  402a0f:	movzx  edx,BYTE PTR [rcx+0x6]
  402a13:	shl    rdx,0x30
  402a17:	or     rax,rdx
  402a1a:	add    rsp,0x28
  402a1e:	ret    
  402a1f:	nop
  402a20:	lea    rcx,[rip+0x6015]        # 0x408a3c
  402a27:	call   0x402170
  402a2c:	call   0x406548
  402a31:	nop
  402a32:	nop    DWORD PTR [rax+0x0]
  402a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a40:	push   rbx
  402a41:	sub    rsp,0x20
  402a45:	mov    ebx,edx
  402a47:	mov    edx,ebx
  402a49:	call   QWORD PTR [rip+0xb109]        # 0x40db58
  402a4f:	cmp    ebx,0x8
  402a52:	ja     0x402ab0
  402a54:	lea    rdx,[rip+0x6345]        # 0x408da0
  402a5b:	movsxd rcx,DWORD PTR [rdx+rbx*4]
  402a5f:	add    rdx,rcx
  402a62:	jmp    rdx
  402a64:	xor    rax,0x800000
  402a6a:	sub    rax,0x800000
  402a70:	add    rsp,0x20
  402a74:	pop    rbx
  402a75:	ret    
  402a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a80:	mov    edx,0x80000000
  402a85:	xor    rax,rdx
  402a88:	add    rax,0xffffffff80000000
  402a8e:	add    rsp,0x20
  402a92:	pop    rbx
  402a93:	ret    
  402a94:	xor    al,0x80
  402a96:	add    rax,0xffffffffffffff80
  402a9a:	add    rsp,0x20
  402a9e:	pop    rbx
  402a9f:	ret    
  402aa0:	xor    ah,0x80
  402aa3:	sub    rax,0x8000
  402aa9:	add    rsp,0x20
  402aad:	pop    rbx
  402aae:	ret    
  402aaf:	nop
  402ab0:	call   0x406548
  402ab5:	nop
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	push   rdi
  402ac1:	push   rsi
  402ac2:	push   rbx
  402ac3:	sub    rsp,0x20
  402ac7:	lea    rax,[rip+0xfffffffffffff722]        # 0x4021f0
  402ace:	cmp    QWORD PTR [rip+0xb083],rax        # 0x40db58
  402ad5:	mov    rbx,rcx
  402ad8:	mov    rdi,rdx
  402adb:	mov    rsi,r8
  402ade:	je     0x402b10
  402ae0:	lea    rcx,[rcx+0x4]
  402ae4:	mov    edx,0x4
  402ae9:	call   0x402860
  402aee:	mov    edx,0x4
  402af3:	mov    QWORD PTR [rdi],rax
  402af6:	mov    rcx,rbx
  402af9:	call   0x402860
  402afe:	mov    QWORD PTR [rsi],rax
  402b01:	add    rsp,0x20
  402b05:	pop    rbx
  402b06:	pop    rsi
  402b07:	pop    rdi
  402b08:	ret    
  402b09:	nop    DWORD PTR [rax+0x0]
  402b10:	mov    edx,0x4
  402b15:	call   rax
  402b17:	lea    rcx,[rbx+0x4]
  402b1b:	mov    QWORD PTR [rdi],rax
  402b1e:	mov    edx,0x4
  402b23:	call   0x4021f0
  402b28:	mov    QWORD PTR [rsi],rax
  402b2b:	add    rsp,0x20
  402b2f:	pop    rbx
  402b30:	pop    rsi
  402b31:	pop    rdi
  402b32:	ret    
  402b33:	nop    DWORD PTR [rax]
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	push   r13
  402b42:	push   r12
  402b44:	push   rbp
  402b45:	push   rdi
  402b46:	push   rsi
  402b47:	push   rbx
  402b48:	sub    rsp,0x28
  402b4c:	mov    rdi,rdx
  402b4f:	mov    ebx,r8d
  402b52:	mov    rbp,rcx
  402b55:	call   0x404b10
  402b5a:	movzx  r8d,BYTE PTR [rdi]
  402b5e:	cmp    r8b,0x5c
  402b62:	je     0x402bf0
  402b68:	cmp    r8b,0x2f
  402b6c:	je     0x402bf0
  402b72:	test   r8b,r8b
  402b75:	jne    0x402be3
  402b77:	cmp    rax,rbp
  402b7a:	je     0x402bf0
  402b7c:	sub    rax,rbp
  402b7f:	mov    r13d,ebx
  402b82:	lea    r12,[rax+r13*1]
  402b86:	mov    rsi,rax
  402b89:	lea    rcx,[r12+0x1]
  402b8e:	cmp    rax,rcx
  402b91:	ja     0x402c22
  402b97:	cmp    r13,rcx
  402b9a:	ja     0x402c22
  402ba0:	call   0x4064c0
  402ba5:	test   rax,rax
  402ba8:	mov    rbx,rax
  402bab:	je     0x402c34
  402bb1:	mov    r8,rsi
  402bb4:	mov    rdx,rbp
  402bb7:	mov    rcx,rax
  402bba:	call   0x4064b0
  402bbf:	lea    rcx,[rbx+rsi*1]
  402bc3:	mov    r8,r13
  402bc6:	mov    rdx,rdi
  402bc9:	call   0x4064b0
  402bce:	mov    BYTE PTR [rbx+r12*1],0x0
  402bd3:	mov    rax,rbx
  402bd6:	add    rsp,0x28
  402bda:	pop    rbx
  402bdb:	pop    rsi
  402bdc:	pop    rdi
  402bdd:	pop    rbp
  402bde:	pop    r12
  402be0:	pop    r13
  402be2:	ret    
  402be3:	cmp    BYTE PTR [rdi+0x1],0x3a
  402be7:	jne    0x402b77
  402be9:	nop    DWORD PTR [rax+0x0]
  402bf0:	lea    ecx,[rbx+0x1]
  402bf3:	xor    eax,eax
  402bf5:	test   ecx,ecx
  402bf7:	je     0x402bd6
  402bf9:	call   0x4064c0
  402bfe:	test   rax,rax
  402c01:	je     0x402c34
  402c03:	mov    r8,rbx
  402c06:	mov    rdx,rdi
  402c09:	mov    rcx,rax
  402c0c:	call   0x4064b0
  402c11:	mov    BYTE PTR [rax+rbx*1],0x0
  402c15:	add    rsp,0x28
  402c19:	pop    rbx
  402c1a:	pop    rsi
  402c1b:	pop    rdi
  402c1c:	pop    rbp
  402c1d:	pop    r12
  402c1f:	pop    r13
  402c21:	ret    
  402c22:	lea    rcx,[rip+0x61af]        # 0x408dd8
  402c29:	mov    edx,ebx
  402c2b:	call   0x402170
  402c30:	xor    eax,eax
  402c32:	jmp    0x402bd6
  402c34:	lea    rcx,[rip+0x6189]        # 0x408dc4
  402c3b:	call   0x402170
  402c40:	xor    eax,eax
  402c42:	jmp    0x402bd6
  402c44:	xchg   ax,ax
  402c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c50:	push   r14
  402c52:	push   r13
  402c54:	push   r12
  402c56:	push   rbp
  402c57:	push   rdi
  402c58:	push   rsi
  402c59:	push   rbx
  402c5a:	sub    rsp,0x20
  402c5e:	mov    rbx,rcx
  402c61:	mov    rbp,r8
  402c64:	mov    r12d,r9d
  402c67:	mov    rcx,rdx
  402c6a:	mov    r13,rdx
  402c6d:	call   0x406420
  402c72:	mov    DWORD PTR [rbx+0x44],r12d
  402c76:	xor    r8d,r8d
  402c79:	mov    QWORD PTR [rbx],rax
  402c7c:	mov    QWORD PTR [rbx+0x8],rbp
  402c80:	mov    QWORD PTR [rbx+0x10],0x0
  402c88:	mov    edx,0x8
  402c8d:	mov    QWORD PTR [rbx+0x18],0x0
  402c95:	mov    QWORD PTR [rbx+0x20],0x0
  402c9d:	mov    rcx,rbp
  402ca0:	mov    DWORD PTR [rbx+0x28],0x0
  402ca7:	mov    QWORD PTR [rbx+0x30],0x0
  402caf:	mov    DWORD PTR [rbx+0x38],0x0
  402cb6:	mov    DWORD PTR [rbx+0x3c],0x0
  402cbd:	mov    DWORD PTR [rbx+0x48],0x0
  402cc4:	mov    DWORD PTR [rbx+0x40],0x8
  402ccb:	call   0x4064f0
  402cd0:	test   eax,eax
  402cd2:	mov    r12d,eax
  402cd5:	jne    0x402d12
  402cd7:	lea    r14,[rbx+0x4c]
  402cdb:	mov    r9,rbp
  402cde:	mov    r8d,0x3c
  402ce4:	mov    edx,0x1
  402ce9:	mov    rcx,r14
  402cec:	call   0x406500
  402cf1:	cmp    rax,0x3c
  402cf5:	je     0x402d30
  402cf7:	test   rax,rax
  402cfa:	jne    0x402e00
  402d00:	mov    eax,r12d
  402d03:	add    rsp,0x20
  402d07:	pop    rbx
  402d08:	pop    rsi
  402d09:	pop    rdi
  402d0a:	pop    rbp
  402d0b:	pop    r12
  402d0d:	pop    r13
  402d0f:	pop    r14
  402d11:	ret    
  402d12:	lea    rcx,[rip+0x60f7]        # 0x408e10
  402d19:	mov    rdx,r13
  402d1c:	mov    r12d,0x1
  402d22:	call   0x402170
  402d27:	jmp    0x402d00
  402d29:	nop    DWORD PTR [rax+0x0]
  402d30:	lea    rdi,[rip+0x612c]        # 0x408e63
  402d37:	mov    ecx,0x10
  402d3c:	mov    rsi,r14
  402d3f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402d41:	je     0x402e40
  402d47:	lea    rdi,[rip+0x6126]        # 0x408e74
  402d4e:	mov    ecx,0x10
  402d53:	mov    rsi,r14
  402d56:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402d58:	je     0x402e70
  402d5e:	mov    eax,DWORD PTR [rsp+0x80]
  402d65:	test   eax,eax
  402d67:	jne    0x402ea0
  402d6d:	lea    rdi,[rip+0x612a]        # 0x408e9e
  402d74:	mov    ecx,0x10
  402d79:	mov    rsi,r14
  402d7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402d7e:	jne    0x402d00
  402d80:	lea    rcx,[rbx+0x7c]
  402d84:	xor    edx,edx
  402d86:	mov    r8d,0xa
  402d8c:	call   0x406440
  402d91:	cmp    eax,0x7
  402d94:	mov    edi,eax
  402d96:	mov    DWORD PTR [rbx+0x38],eax
  402d99:	jbe    0x402e20
  402d9f:	test   eax,eax
  402da1:	js     0x402edf
  402da7:	mov    eax,DWORD PTR [rbx+0x40]
  402daa:	lea    ecx,[rdi+0x1]
  402dad:	lea    eax,[rdi+rax*1+0x3c]
  402db1:	mov    DWORD PTR [rbx+0x40],eax
  402db4:	call   0x4064c0
  402db9:	test   rax,rax
  402dbc:	mov    QWORD PTR [rbx+0x30],rax
  402dc0:	je     0x402f0c
  402dc6:	mov    edx,edi
  402dc8:	mov    r9,rbp
  402dcb:	mov    r8d,0x1
  402dd1:	mov    rcx,rax
  402dd4:	call   0x406500
  402dd9:	cmp    rax,0x1
  402ddd:	jne    0x402eb4
  402de3:	mov    eax,DWORD PTR [rbx+0x38]
  402de6:	test   al,0x1
  402de8:	jne    0x402efc
  402dee:	mov    rdx,QWORD PTR [rbx+0x30]
  402df2:	xor    r12d,r12d
  402df5:	mov    BYTE PTR [rdx+rax*1],0x0
  402df9:	jmp    0x402d00
  402dfe:	xchg   ax,ax
  402e00:	lea    rcx,[rip+0x6039]        # 0x408e40
  402e07:	mov    rdx,r13
  402e0a:	mov    r12d,0x1
  402e10:	call   0x402170
  402e15:	jmp    0x402d00
  402e1a:	nop    WORD PTR [rax+rax*1+0x0]
  402e20:	lea    rcx,[rip+0x6089]        # 0x408eb0
  402e27:	mov    r8d,eax
  402e2a:	mov    rdx,r13
  402e2d:	mov    r12d,0x1
  402e33:	call   0x402170
  402e38:	jmp    0x402d00
  402e3d:	nop    DWORD PTR [rax]
  402e40:	mov    r8d,DWORD PTR [rsp+0x80]
  402e48:	mov    edx,0x4
  402e4d:	mov    rcx,rbx
  402e50:	call   0x4023d0
  402e55:	test   eax,eax
  402e57:	jne    0x402d6d
  402e5d:	mov    r12d,0x1
  402e63:	jmp    0x402d00
  402e68:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	mov    r8d,DWORD PTR [rsp+0x80]
  402e78:	mov    DWORD PTR [rbx+0x48],0x1
  402e7f:	mov    edx,0x8
  402e84:	mov    rcx,rbx
  402e87:	call   0x4023d0
  402e8c:	test   eax,eax
  402e8e:	jne    0x402d6d
  402e94:	jmp    0x402e5d
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	lea    rcx,[rip+0x5fde]        # 0x408e85
  402ea7:	mov    rdx,r13
  402eaa:	call   0x4064a0
  402eaf:	jmp    0x402d6d
  402eb4:	mov    rcx,QWORD PTR [rbx+0x30]
  402eb8:	mov    r12d,0x1
  402ebe:	call   0x4064f8
  402ec3:	lea    rcx,[rip+0x607e]        # 0x408f48
  402eca:	mov    QWORD PTR [rbx+0x30],0x0
  402ed2:	mov    rdx,r13
  402ed5:	call   0x402170
  402eda:	jmp    0x402d00
  402edf:	lea    rcx,[rip+0x5ffa]        # 0x408ee0
  402ee6:	mov    r8d,eax
  402ee9:	mov    rdx,r13
  402eec:	mov    r12d,0x1
  402ef2:	call   0x402170
  402ef7:	jmp    0x402d00
  402efc:	mov    rcx,rbp
  402eff:	call   0x4064d0
  402f04:	mov    eax,DWORD PTR [rbx+0x38]
  402f07:	jmp    0x402dee
  402f0c:	lea    rcx,[rip+0x5ffd]        # 0x408f10
  402f13:	call   0x402170
  402f18:	jmp    0x402e5d
  402f1d:	nop    DWORD PTR [rax]
  402f20:	push   rbx
  402f21:	sub    rsp,0x20
  402f25:	mov    rbx,rcx
  402f28:	mov    rcx,QWORD PTR [rcx]
  402f2b:	test   rcx,rcx
  402f2e:	je     0x402f35
  402f30:	call   0x4064f8
  402f35:	mov    rcx,QWORD PTR [rbx+0x18]
  402f39:	test   rcx,rcx
  402f3c:	je     0x402f43
  402f3e:	call   0x4064f8
  402f43:	mov    rcx,QWORD PTR [rbx+0x20]
  402f47:	test   rcx,rcx
  402f4a:	je     0x402f51
  402f4c:	call   0x4064f8
  402f51:	mov    rcx,QWORD PTR [rbx+0x30]
  402f55:	test   rcx,rcx
  402f58:	je     0x402f64
  402f5a:	add    rsp,0x20
  402f5e:	pop    rbx
  402f5f:	jmp    0x4064f8
  402f64:	add    rsp,0x20
  402f68:	pop    rbx
  402f69:	ret    
  402f6a:	nop    WORD PTR [rax+rax*1+0x0]
  402f70:	push   rsi
  402f71:	push   rbx
  402f72:	sub    rsp,0x38
  402f76:	mov    rbx,rcx
  402f79:	mov    rcx,QWORD PTR [rcx]
  402f7c:	mov    rsi,rdx
  402f7f:	test   rcx,rcx
  402f82:	je     0x402f8d
  402f84:	call   0x406468
  402f89:	test   eax,eax
  402f8b:	je     0x402fd5
  402f8d:	mov    rcx,QWORD PTR [rbx+0x8]
  402f91:	test   rcx,rcx
  402f94:	je     0x402f9b
  402f96:	call   0x406530
  402f9b:	mov    rcx,rbx
  402f9e:	call   0x402f20
  402fa3:	lea    rdx,[rip+0x5fd0]        # 0x408f7a
  402faa:	mov    rcx,rsi
  402fad:	call   0x406518
  402fb2:	mov    r8,rax
  402fb5:	mov    eax,0x1
  402fba:	test   r8,r8
  402fbd:	je     0x402fd5
  402fbf:	mov    DWORD PTR [rsp+0x20],0x0
  402fc7:	xor    r9d,r9d
  402fca:	mov    rdx,rsi
  402fcd:	mov    rcx,rbx
  402fd0:	call   0x402c50
  402fd5:	add    rsp,0x38
  402fd9:	pop    rbx
  402fda:	pop    rsi
  402fdb:	ret    
  402fdc:	nop    DWORD PTR [rax+0x0]
  402fe0:	push   rsi
  402fe1:	push   rbx
  402fe2:	sub    rsp,0x28
  402fe6:	mov    rbx,rcx
  402fe9:	mov    rcx,QWORD PTR [rcx+0x8]
  402fed:	mov    rsi,r8
  402ff0:	xor    r8d,r8d
  402ff3:	call   0x4064f0
  402ff8:	test   eax,eax
  402ffa:	jne    0x403045
  402ffc:	mov    r9,QWORD PTR [rbx+0x8]
  403000:	lea    rcx,[rbx+0x4c]
  403004:	mov    r8d,0x3c
  40300a:	mov    edx,0x1
  40300f:	call   0x406500
  403014:	cmp    rax,0x3c
  403018:	jne    0x403060
  40301a:	lea    rcx,[rbx+0x86]
  403021:	lea    rdx,[rip+0x5f7e]        # 0x408fa6
  403028:	mov    r8d,0x2
  40302e:	call   0x4064b8
  403033:	test   eax,eax
  403035:	jne    0x403071
  403037:	mov    rdx,rsi
  40303a:	mov    rcx,rbx
  40303d:	add    rsp,0x28
  403041:	pop    rbx
  403042:	pop    rsi
  403043:	jmp    0x403090
  403045:	mov    rdx,QWORD PTR [rbx]
  403048:	lea    rcx,[rip+0x5f31]        # 0x408f80
  40304f:	call   0x402170
  403054:	xor    eax,eax
  403056:	add    rsp,0x28
  40305a:	pop    rbx
  40305b:	pop    rsi
  40305c:	ret    
  40305d:	nop    DWORD PTR [rax]
  403060:	mov    rdx,QWORD PTR [rbx]
  403063:	lea    rcx,[rip+0x5dd6]        # 0x408e40
  40306a:	call   0x402170
  40306f:	jmp    0x403054
  403071:	mov    rdx,QWORD PTR [rbx]
  403074:	lea    rcx,[rip+0x5f35]        # 0x408fb0
  40307b:	call   0x402170
  403080:	jmp    0x403054
  403082:	nop    DWORD PTR [rax+0x0]
  403086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403090:	push   rbp
  403091:	push   rdi
  403092:	push   rsi
  403093:	push   rbx
  403094:	sub    rsp,0x38
  403098:	xor    r8d,r8d
  40309b:	mov    rbx,rcx
  40309e:	mov    rdi,rdx
  4030a1:	lea    rcx,[rcx+0x4d]
  4030a5:	cmp    BYTE PTR [rbx+0x4c],0x2f
  4030a9:	jne    0x4030ba
  4030ab:	jmp    0x403103
  4030ad:	nop    DWORD PTR [rax]
  4030b0:	add    rcx,0x1
  4030b4:	cmp    BYTE PTR [rcx-0x1],0x2f
  4030b8:	je     0x4030f0
  4030ba:	add    r8d,0x1
  4030be:	cmp    r8d,0x10
  4030c2:	jne    0x4030b0
  4030c4:	mov    ecx,0x11
  4030c9:	call   0x404bb0
  4030ce:	mov    rdx,QWORD PTR [rbx+0x4c]
  4030d2:	mov    BYTE PTR [rax+0x10],0x0
  4030d6:	mov    QWORD PTR [rax],rdx
  4030d9:	mov    rdx,QWORD PTR [rbx+0x54]
  4030dd:	mov    QWORD PTR [rax+0x8],rdx
  4030e1:	add    rsp,0x38
  4030e5:	pop    rbx
  4030e6:	pop    rsi
  4030e7:	pop    rdi
  4030e8:	pop    rbp
  4030e9:	ret    
  4030ea:	nop    WORD PTR [rax+rax*1+0x0]
  4030f0:	lea    rax,[rbx+0x4c]
  4030f4:	mov    BYTE PTR [rbx+r8*1+0x4c],0x0
  4030fa:	add    rsp,0x38
  4030fe:	pop    rbx
  4030ff:	pop    rsi
  403100:	pop    rdi
  403101:	pop    rbp
  403102:	ret    
  403103:	cmp    QWORD PTR [rbx+0x30],0x0
  403108:	je     0x403113
  40310a:	mov    r8d,DWORD PTR [rbx+0x38]
  40310e:	test   r8d,r8d
  403111:	jne    0x403130
  403113:	lea    rcx,[rip+0x5ec6]        # 0x408fe0
  40311a:	call   0x402170
  40311f:	xor    eax,eax
  403121:	add    rsp,0x38
  403125:	pop    rbx
  403126:	pop    rsi
  403127:	pop    rdi
  403128:	pop    rbp
  403129:	ret    
  40312a:	nop    WORD PTR [rax+rax*1+0x0]
  403130:	lea    rdx,[rsp+0x28]
  403135:	mov    DWORD PTR [rbx+0x3c],0x0
  40313c:	mov    r8d,0xa
  403142:	call   0x406440
  403147:	mov    ecx,DWORD PTR [rbx+0x44]
  40314a:	mov    ebp,eax
  40314c:	test   ecx,ecx
  40314e:	jne    0x4031d0
  403154:	mov    r8d,DWORD PTR [rbx+0x38]
  403158:	cmp    ebp,r8d
  40315b:	ja     0x403225
  403161:	mov    rcx,QWORD PTR [rbx+0x30]
  403165:	jae    0x40329f
  40316b:	mov    eax,ebp
  40316d:	mov    r9d,ebp
  403170:	movzx  eax,BYTE PTR [rcx+rax*1]
  403174:	cmp    al,0xa
  403176:	je     0x40319c
  403178:	test   al,al
  40317a:	jne    0x403193
  40317c:	jmp    0x40319c
  40317e:	xchg   ax,ax
  403180:	mov    r10d,r9d
  403183:	movzx  r10d,BYTE PTR [rcx+r10*1]
  403188:	cmp    r10b,0xa
  40318c:	je     0x40319c
  40318e:	test   r10b,r10b
  403191:	je     0x40319c
  403193:	add    r9d,0x1
  403197:	cmp    r8d,r9d
  40319a:	ja     0x403180
  40319c:	test   r9d,r9d
  40319f:	jne    0x403200
  4031a1:	xor    eax,eax
  4031a3:	mov    r8d,r9d
  4031a6:	mov    BYTE PTR [rcx+rax*1],0x0
  4031aa:	mov    edx,DWORD PTR [rbx+0x44]
  4031ad:	test   edx,edx
  4031af:	je     0x40321a
  4031b1:	mov    eax,DWORD PTR [rbx+0x3c]
  4031b4:	test   eax,eax
  4031b6:	je     0x40321a
  4031b8:	cmp    ebp,r8d
  4031bb:	jb     0x40323a
  4031bd:	lea    rcx,[rip+0x5e9c]        # 0x409060
  4031c4:	call   0x402170
  4031c9:	xor    eax,eax
  4031cb:	jmp    0x4030e1
  4031d0:	mov    rax,QWORD PTR [rsp+0x28]
  4031d5:	test   rax,rax
  4031d8:	je     0x403154
  4031de:	cmp    BYTE PTR [rax],0x3a
  4031e1:	jne    0x403154
  4031e7:	lea    rcx,[rax+0x1]
  4031eb:	mov    r8d,0xa
  4031f1:	xor    edx,edx
  4031f3:	call   0x406440
  4031f8:	mov    DWORD PTR [rbx+0x3c],eax
  4031fb:	jmp    0x403154
  403200:	lea    edx,[r9-0x1]
  403204:	cmp    BYTE PTR [rcx+rdx*1],0x2f
  403208:	cmove  r9d,edx
  40320c:	cmp    r8d,r9d
  40320f:	jae    0x4032a7
  403215:	mov    eax,r8d
  403218:	jmp    0x4031a6
  40321a:	mov    eax,ebp
  40321c:	add    rax,QWORD PTR [rbx+0x30]
  403220:	jmp    0x4030e1
  403225:	lea    rcx,[rip+0x5df4]        # 0x409020
  40322c:	mov    edx,ebp
  40322e:	call   0x402170
  403233:	xor    eax,eax
  403235:	jmp    0x4030e1
  40323a:	mov    esi,ebp
  40323c:	mov    rcx,QWORD PTR [rbx]
  40323f:	sub    r8d,ebp
  403242:	mov    rdx,rsi
  403245:	add    rdx,QWORD PTR [rbx+0x30]
  403249:	call   0x402b40
  40324e:	test   rax,rax
  403251:	mov    rbp,rax
  403254:	je     0x403265
  403256:	mov    rdx,rax
  403259:	mov    rcx,rdi
  40325c:	call   0x402f70
  403261:	test   eax,eax
  403263:	je     0x403279
  403265:	mov    rcx,rbp
  403268:	call   0x4064f8
  40326d:	mov    rax,rsi
  403270:	add    rax,QWORD PTR [rbx+0x30]
  403274:	jmp    0x4030e1
  403279:	mov    edx,DWORD PTR [rbx+0x3c]
  40327c:	xor    r8d,r8d
  40327f:	mov    rcx,rdi
  403282:	call   0x402fe0
  403287:	test   rax,rax
  40328a:	mov    rdi,rax
  40328d:	je     0x403265
  40328f:	mov    rcx,rbp
  403292:	call   0x4064f8
  403297:	mov    rax,rdi
  40329a:	jmp    0x4030e1
  40329f:	mov    r9d,ebp
  4032a2:	jmp    0x40319c
  4032a7:	mov    eax,r9d
  4032aa:	jmp    0x4031a3
  4032af:	nop
  4032b0:	push   r13
  4032b2:	push   r12
  4032b4:	push   rbp
  4032b5:	push   rdi
  4032b6:	push   rsi
  4032b7:	push   rbx
  4032b8:	sub    rsp,0x38
  4032bc:	mov    rdi,QWORD PTR [rcx]
  4032bf:	mov    rbp,r8
  4032c2:	mov    rsi,rcx
  4032c5:	mov    r12,rdx
  4032c8:	mov    rcx,rdi
  4032cb:	call   0x406450
  4032d0:	mov    rcx,rbp
  4032d3:	mov    rbx,rax
  4032d6:	call   0x406450
  4032db:	mov    edx,DWORD PTR [rsi+0x44]
  4032de:	add    rbx,rax
  4032e1:	lea    r13,[rbx+0x3]
  4032e5:	test   edx,edx
  4032e7:	je     0x403360
  4032e9:	mov    eax,DWORD PTR [rsi+0x3c]
  4032ec:	test   eax,eax
  4032ee:	je     0x4033a0
  4032f4:	mov    rcx,QWORD PTR [r12]
  4032f8:	test   rcx,rcx
  4032fb:	je     0x4033f0
  403301:	call   0x406450
  403306:	lea    rsi,[rbx+rax*1+0x5]
  40330b:	mov    rcx,rsi
  40330e:	call   0x4064c0
  403313:	test   rax,rax
  403316:	mov    rbx,rax
  403319:	je     0x4033da
  40331f:	mov    rax,QWORD PTR [r12]
  403323:	mov    QWORD PTR [rsp+0x28],rbp
  403328:	test   rax,rax
  40332b:	je     0x403400
  403331:	lea    r8,[rip+0x5d4a]        # 0x409082
  403338:	mov    QWORD PTR [rsp+0x20],rax
  40333d:	mov    r9,rdi
  403340:	mov    rdx,rsi
  403343:	mov    rcx,rbx
  403346:	call   0x402150
  40334b:	mov    rax,rbx
  40334e:	add    rsp,0x38
  403352:	pop    rbx
  403353:	pop    rsi
  403354:	pop    rdi
  403355:	pop    rbp
  403356:	pop    r12
  403358:	pop    r13
  40335a:	ret    
  40335b:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	mov    rcx,r13
  403363:	call   0x4064c0
  403368:	test   rax,rax
  40336b:	mov    rbx,rax
  40336e:	je     0x4033da
  403370:	lea    r8,[rip+0x5d27]        # 0x40909e
  403377:	mov    QWORD PTR [rsp+0x20],rbp
  40337c:	mov    r9,rdi
  40337f:	mov    rdx,r13
  403382:	mov    rcx,rbx
  403385:	call   0x402150
  40338a:	mov    rax,rbx
  40338d:	add    rsp,0x38
  403391:	pop    rbx
  403392:	pop    rsi
  403393:	pop    rdi
  403394:	pop    rbp
  403395:	pop    r12
  403397:	pop    r13
  403399:	ret    
  40339a:	nop    WORD PTR [rax+rax*1+0x0]
  4033a0:	mov    rcx,r13
  4033a3:	call   0x4064c0
  4033a8:	test   rax,rax
  4033ab:	mov    rbx,rax
  4033ae:	je     0x4033da
  4033b0:	lea    r8,[rip+0x5ce0]        # 0x409097
  4033b7:	mov    QWORD PTR [rsp+0x20],rbp
  4033bc:	mov    r9,rdi
  4033bf:	mov    rdx,r13
  4033c2:	mov    rcx,rbx
  4033c5:	call   0x402150
  4033ca:	mov    rax,rbx
  4033cd:	add    rsp,0x38
  4033d1:	pop    rbx
  4033d2:	pop    rsi
  4033d3:	pop    rdi
  4033d4:	pop    rbp
  4033d5:	pop    r12
  4033d7:	pop    r13
  4033d9:	ret    
  4033da:	lea    rcx,[rip+0x59e3]        # 0x408dc4
  4033e1:	call   0x402170
  4033e6:	xor    eax,eax
  4033e8:	jmp    0x40338d
  4033ea:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	lea    rsi,[rbx+0xe]
  4033f4:	jmp    0x40330b
  4033f9:	nop    DWORD PTR [rax+0x0]
  403400:	lea    rax,[rip+0x5c86]        # 0x40908d
  403407:	jmp    0x403331
  40340c:	nop
  40340d:	nop
  40340e:	nop
  40340f:	nop
  403410:	push   rdi
  403411:	push   rsi
  403412:	push   rbx
  403413:	sub    rsp,0x20
  403417:	test   rcx,rcx
  40341a:	je     0x4034a7
  403420:	cmp    QWORD PTR [rcx],0x0
  403424:	je     0x4034a0
  403426:	lea    rax,[rcx+0x8]
  40342a:	xor    edx,edx
  40342c:	nop    DWORD PTR [rax+0x0]
  403430:	add    rax,0x8
  403434:	add    edx,0x1
  403437:	cmp    QWORD PTR [rax-0x8],0x0
  40343c:	jne    0x403430
  40343e:	add    edx,0x1
  403441:	movsxd rdx,edx
  403444:	shl    rdx,0x3
  403448:	mov    rsi,rcx
  40344b:	mov    rcx,rdx
  40344e:	xor    ebx,ebx
  403450:	call   0x404bb0
  403455:	mov    rcx,QWORD PTR [rsi]
  403458:	mov    rdi,rax
  40345b:	test   rcx,rcx
  40345e:	je     0x40348d
  403460:	call   0x406450
  403465:	lea    ecx,[rax+0x1]
  403468:	movsxd rcx,ecx
  40346b:	call   0x404bb0
  403470:	mov    rdx,QWORD PTR [rsi+rbx*1]
  403474:	mov    rcx,rax
  403477:	mov    QWORD PTR [rdi+rbx*1],rax
  40347b:	add    rbx,0x8
  40347f:	call   0x406460
  403484:	mov    rcx,QWORD PTR [rsi+rbx*1]
  403488:	test   rcx,rcx
  40348b:	jne    0x403460
  40348d:	mov    QWORD PTR [rdi+rbx*1],0x0
  403495:	mov    rax,rdi
  403498:	add    rsp,0x20
  40349c:	pop    rbx
  40349d:	pop    rsi
  40349e:	pop    rdi
  40349f:	ret    
  4034a0:	mov    edx,0x8
  4034a5:	jmp    0x403448
  4034a7:	xor    eax,eax
  4034a9:	jmp    0x403498
  4034ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	push   rsi
  4034b1:	push   rbx
  4034b2:	sub    rsp,0x28
  4034b6:	test   rcx,rcx
  4034b9:	je     0x4034f0
  4034bb:	mov    rsi,rcx
  4034be:	mov    rcx,QWORD PTR [rcx]
  4034c1:	mov    rbx,rsi
  4034c4:	test   rcx,rcx
  4034c7:	je     0x4034e1
  4034c9:	nop    DWORD PTR [rax+0x0]
  4034d0:	add    rbx,0x8
  4034d4:	call   0x4064f8
  4034d9:	mov    rcx,QWORD PTR [rbx]
  4034dc:	test   rcx,rcx
  4034df:	jne    0x4034d0
  4034e1:	mov    rcx,rsi
  4034e4:	add    rsp,0x28
  4034e8:	pop    rbx
  4034e9:	pop    rsi
  4034ea:	jmp    0x4064f8
  4034ef:	nop
  4034f0:	add    rsp,0x28
  4034f4:	pop    rbx
  4034f5:	pop    rsi
  4034f6:	ret    
  4034f7:	nop    WORD PTR [rax+rax*1+0x0]
  403500:	push   r15
  403502:	push   r14
  403504:	push   r13
  403506:	push   r12
  403508:	push   rbp
  403509:	push   rdi
  40350a:	push   rsi
  40350b:	push   rbx
  40350c:	sub    rsp,0x38
  403510:	test   rcx,rcx
  403513:	mov    rbx,rcx
  403516:	je     0x403711
  40351c:	call   0x406450
  403521:	lea    rcx,[rax+0x1]
  403525:	xor    r15d,r15d
  403528:	xor    r12d,r12d
  40352b:	xor    ebp,ebp
  40352d:	xor    edi,edi
  40352f:	xor    r14d,r14d
  403532:	call   0x404bb0
  403537:	mov    rsi,QWORD PTR [rip+0x66b2]        # 0x409bf0
  40353e:	mov    QWORD PTR [rsp+0x20],rax
  403543:	xor    r13d,r13d
  403546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403550:	movzx  eax,BYTE PTR [rbx]
  403553:	mov    edx,r15d
  403556:	test   BYTE PTR [rsi+rax*2],0x40
  40355a:	je     0x40356d
  40355c:	nop    DWORD PTR [rax+0x0]
  403560:	add    rbx,0x1
  403564:	movzx  eax,BYTE PTR [rbx]
  403567:	test   BYTE PTR [rsi+rax*2],0x40
  40356b:	jne    0x403560
  40356d:	test   ebp,ebp
  40356f:	je     0x40357c
  403571:	lea    eax,[rbp-0x1]
  403574:	lea    r11,[r12+r15*8]
  403578:	cmp    edx,eax
  40357a:	jl     0x4035a4
  40357c:	test   r12,r12
  40357f:	je     0x4036fa
  403585:	add    ebp,ebp
  403587:	mov    rcx,r12
  40358a:	movsxd rdx,ebp
  40358d:	shl    rdx,0x3
  403591:	call   0x404c30
  403596:	mov    r12,rax
  403599:	lea    r11,[r12+r15*8]
  40359d:	mov    QWORD PTR [r11],0x0
  4035a4:	movzx  edx,BYTE PTR [rbx]
  4035a7:	mov    r8,QWORD PTR [rsp+0x20]
  4035ac:	test   dl,dl
  4035ae:	jne    0x4035c6
  4035b0:	jmp    0x403610
  4035b2:	mov    BYTE PTR [r8],dl
  4035b5:	xor    edi,edi
  4035b7:	add    r8,0x1
  4035bb:	add    rbx,0x1
  4035bf:	movzx  edx,BYTE PTR [rbx]
  4035c2:	test   dl,dl
  4035c4:	je     0x403610
  4035c6:	movzx  r9d,dl
  4035ca:	test   BYTE PTR [rsi+r9*2],0x40
  4035cf:	je     0x4035df
  4035d1:	mov    eax,edi
  4035d3:	or     eax,r13d
  4035d6:	or     eax,r14d
  4035d9:	je     0x4036f0
  4035df:	test   edi,edi
  4035e1:	jne    0x4035b2
  4035e3:	cmp    dl,0x5c
  4035e6:	je     0x4036a0
  4035ec:	test   r13d,r13d
  4035ef:	je     0x403680
  4035f5:	cmp    dl,0x27
  4035f8:	je     0x4036d0
  4035fe:	add    rbx,0x1
  403602:	mov    BYTE PTR [r8],dl
  403605:	add    r8,0x1
  403609:	movzx  edx,BYTE PTR [rbx]
  40360c:	test   dl,dl
  40360e:	jne    0x4035c6
  403610:	mov    rcx,QWORD PTR [rsp+0x20]
  403615:	mov    BYTE PTR [r8],0x0
  403619:	add    r15,0x1
  40361d:	mov    QWORD PTR [rsp+0x28],r11
  403622:	call   0x404c80
  403627:	mov    r11,QWORD PTR [rsp+0x28]
  40362c:	mov    QWORD PTR [r11],rax
  40362f:	mov    QWORD PTR [r12+r15*8],0x0
  403637:	movzx  edx,BYTE PTR [rbx]
  40363a:	test   BYTE PTR [rsi+rdx*2],0x40
  40363e:	mov    rax,rdx
  403641:	je     0x403653
  403643:	add    rbx,0x1
  403647:	movzx  edx,BYTE PTR [rbx]
  40364a:	test   BYTE PTR [rsi+rdx*2],0x40
  40364e:	mov    rax,rdx
  403651:	jne    0x403643
  403653:	test   al,al
  403655:	jne    0x403550
  40365b:	mov    rcx,QWORD PTR [rsp+0x20]
  403660:	call   0x4064f8
  403665:	mov    rax,r12
  403668:	add    rsp,0x38
  40366c:	pop    rbx
  40366d:	pop    rsi
  40366e:	pop    rdi
  40366f:	pop    rbp
  403670:	pop    r12
  403672:	pop    r13
  403674:	pop    r14
  403676:	pop    r15
  403678:	ret    
  403679:	nop    DWORD PTR [rax+0x0]
  403680:	test   r14d,r14d
  403683:	je     0x4036b0
  403685:	cmp    dl,0x22
  403688:	jne    0x4035fe
  40368e:	xor    r14d,r14d
  403691:	jmp    0x4035bb
  403696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036a0:	mov    edi,0x1
  4036a5:	jmp    0x4035bb
  4036aa:	nop    WORD PTR [rax+rax*1+0x0]
  4036b0:	cmp    dl,0x27
  4036b3:	je     0x4036e0
  4036b5:	cmp    dl,0x22
  4036b8:	jne    0x4035fe
  4036be:	mov    r14d,0x1
  4036c4:	jmp    0x4035bb
  4036c9:	nop    DWORD PTR [rax+0x0]
  4036d0:	xor    r13d,r13d
  4036d3:	jmp    0x4035bb
  4036d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036e0:	mov    r13d,0x1
  4036e6:	jmp    0x4035bb
  4036eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4036f0:	xor    edi,edi
  4036f2:	xor    r14d,r14d
  4036f5:	jmp    0x403610
  4036fa:	mov    ecx,0x40
  4036ff:	mov    ebp,0x8
  403704:	call   0x404bb0
  403709:	mov    r12,rax
  40370c:	jmp    0x403599
  403711:	xor    r12d,r12d
  403714:	jmp    0x403665
  403719:	nop    DWORD PTR [rax+0x0]
  403720:	push   r12
  403722:	push   rbp
  403723:	push   rdi
  403724:	push   rsi
  403725:	push   rbx
  403726:	sub    rsp,0x20
  40372a:	test   rdx,rdx
  40372d:	mov    r12,rcx
  403730:	mov    rdi,rdx
  403733:	je     0x40379d
  403735:	mov    rbx,QWORD PTR [rcx]
  403738:	mov    rbp,QWORD PTR [rip+0x64b1]        # 0x409bf0
  40373f:	test   rbx,rbx
  403742:	jne    0x403775
  403744:	jmp    0x4037cf
  403749:	nop    DWORD PTR [rax+0x0]
  403750:	cmp    al,0x22
  403752:	je     0x40378b
  403754:	cmp    al,0x5c
  403756:	sete   dl
  403759:	cmp    al,0x27
  40375b:	sete   al
  40375e:	or     dl,al
  403760:	jne    0x40378b
  403762:	mov    rdx,rdi
  403765:	mov    ecx,esi
  403767:	call   0x406508
  40376c:	cmp    eax,0xffffffff
  40376f:	je     0x40379d
  403771:	add    rbx,0x1
  403775:	movzx  eax,BYTE PTR [rbx]
  403778:	test   al,al
  40377a:	je     0x4037b0
  40377c:	movzx  r8d,al
  403780:	movsx  esi,al
  403783:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  403789:	je     0x403750
  40378b:	mov    rdx,rdi
  40378e:	mov    ecx,0x5c
  403793:	call   0x406508
  403798:	cmp    eax,0xffffffff
  40379b:	jne    0x403762
  40379d:	mov    eax,0x1
  4037a2:	add    rsp,0x20
  4037a6:	pop    rbx
  4037a7:	pop    rsi
  4037a8:	pop    rdi
  4037a9:	pop    rbp
  4037aa:	pop    r12
  4037ac:	ret    
  4037ad:	nop    DWORD PTR [rax]
  4037b0:	mov    rdx,rdi
  4037b3:	mov    ecx,0xa
  4037b8:	call   0x406508
  4037bd:	cmp    eax,0xffffffff
  4037c0:	je     0x40379d
  4037c2:	add    r12,0x8
  4037c6:	mov    rbx,QWORD PTR [r12]
  4037ca:	test   rbx,rbx
  4037cd:	jne    0x403775
  4037cf:	xor    eax,eax
  4037d1:	jmp    0x4037a2
  4037d3:	nop    DWORD PTR [rax]
  4037d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037e0:	push   r15
  4037e2:	push   r14
  4037e4:	push   r13
  4037e6:	push   r12
  4037e8:	push   rbp
  4037e9:	push   rdi
  4037ea:	push   rsi
  4037eb:	push   rbx
  4037ec:	sub    rsp,0x48
  4037f0:	xor    edi,edi
  4037f2:	mov    rbp,rdx
  4037f5:	mov    edx,DWORD PTR [rcx]
  4037f7:	lea    ebx,[rdi+0x1]
  4037fa:	mov    r13,rcx
  4037fd:	mov    DWORD PTR [rsp+0x38],0x7d0
  403805:	cmp    ebx,edx
  403807:	jge    0x403831
  403809:	nop    DWORD PTR [rax+0x0]
  403810:	mov    rax,QWORD PTR [rbp+0x0]
  403814:	movsxd rsi,ebx
  403817:	lea    r12,[rsi*8+0x0]
  40381f:	mov    rcx,QWORD PTR [rax+rsi*8]
  403823:	cmp    BYTE PTR [rcx],0x40
  403826:	je     0x403842
  403828:	mov    edi,ebx
  40382a:	lea    ebx,[rdi+0x1]
  40382d:	cmp    ebx,edx
  40382f:	jl     0x403810
  403831:	add    rsp,0x48
  403835:	pop    rbx
  403836:	pop    rsi
  403837:	pop    rdi
  403838:	pop    rbp
  403839:	pop    r12
  40383b:	pop    r13
  40383d:	pop    r14
  40383f:	pop    r15
  403841:	ret    
  403842:	sub    DWORD PTR [rsp+0x38],0x1
  403847:	je     0x403a4f
  40384d:	lea    rdx,[rip+0x5885]        # 0x4090d9
  403854:	add    rcx,0x1
  403858:	call   0x406518
  40385d:	test   rax,rax
  403860:	mov    r14,rax
  403863:	je     0x4039fa
  403869:	xor    edx,edx
  40386b:	mov    r8d,0x2
  403871:	mov    rcx,rax
  403874:	call   0x4064f0
  403879:	cmp    eax,0xffffffff
  40387c:	je     0x4039f2
  403882:	mov    rcx,r14
  403885:	call   0x4064e8
  40388a:	movsxd r15,eax
  40388d:	cmp    r15d,0xffffffff
  403891:	je     0x4039f2
  403897:	xor    r8d,r8d
  40389a:	xor    edx,edx
  40389c:	mov    rcx,r14
  40389f:	call   0x4064f0
  4038a4:	cmp    eax,0xffffffff
  4038a7:	je     0x4039f2
  4038ad:	lea    rcx,[r15+0x1]
  4038b1:	call   0x404bb0
  4038b6:	mov    edx,0x1
  4038bb:	mov    r9,r14
  4038be:	mov    r8,r15
  4038c1:	mov    rcx,rax
  4038c4:	mov    QWORD PTR [rsp+0x20],rax
  4038c9:	call   0x406500
  4038ce:	cmp    r15,rax
  4038d1:	mov    rdx,rax
  4038d4:	je     0x4038f0
  4038d6:	mov    rcx,r14
  4038d9:	mov    QWORD PTR [rsp+0x28],rax
  4038de:	call   0x406528
  4038e3:	test   eax,eax
  4038e5:	mov    rdx,QWORD PTR [rsp+0x28]
  4038ea:	jne    0x4039f2
  4038f0:	mov    rax,QWORD PTR [rsp+0x20]
  4038f5:	mov    BYTE PTR [rax+rdx*1],0x0
  4038f9:	movzx  eax,BYTE PTR [rax]
  4038fc:	test   al,al
  4038fe:	je     0x40393c
  403900:	mov    rdx,QWORD PTR [rip+0x62e9]        # 0x409bf0
  403907:	test   BYTE PTR [rdx+rax*2],0x40
  40390b:	je     0x403a05
  403911:	mov    rdx,QWORD PTR [rsp+0x20]
  403916:	jmp    0x403931
  403918:	nop    DWORD PTR [rax+rax*1+0x0]
  403920:	mov    rcx,QWORD PTR [rip+0x62c9]        # 0x409bf0
  403927:	test   BYTE PTR [rcx+rax*2],0x40
  40392b:	je     0x403a05
  403931:	add    rdx,0x1
  403935:	movzx  eax,BYTE PTR [rdx]
  403938:	test   al,al
  40393a:	jne    0x403920
  40393c:	mov    ecx,0x8
  403941:	call   0x404bb0
  403946:	mov    rcx,QWORD PTR [rbp+0x0]
  40394a:	mov    QWORD PTR [rax],0x0
  403951:	mov    r15,rax
  403954:	call   0x403410
  403959:	xor    r10d,r10d
  40395c:	mov    QWORD PTR [rbp+0x0],rax
  403960:	xor    r9d,r9d
  403963:	xor    r8d,r8d
  403966:	movsxd rdx,DWORD PTR [r13+0x0]
  40396a:	mov    rcx,rax
  40396d:	mov    DWORD PTR [rsp+0x3c],r10d
  403972:	mov    QWORD PTR [rsp+0x30],r9
  403977:	mov    QWORD PTR [rsp+0x28],r8
  40397c:	lea    rdx,[r8+rdx*1+0x1]
  403981:	shl    rdx,0x3
  403985:	call   0x404c30
  40398a:	mov    edx,DWORD PTR [r13+0x0]
  40398e:	mov    r8,QWORD PTR [rsp+0x28]
  403993:	mov    QWORD PTR [rbp+0x0],rax
  403997:	sub    edx,ebx
  403999:	add    rsi,r8
  40399c:	movsxd rbx,edx
  40399f:	lea    rcx,[rax+rsi*8]
  4039a3:	lea    rdx,[rax+r12*1+0x8]
  4039a8:	lea    r8,[rbx*8+0x0]
  4039b0:	mov    ebx,edi
  4039b2:	call   0x4064a8
  4039b7:	mov    r9,QWORD PTR [rsp+0x30]
  4039bc:	mov    rcx,r12
  4039bf:	add    rcx,QWORD PTR [rbp+0x0]
  4039c3:	mov    rdx,r15
  4039c6:	mov    r8,r9
  4039c9:	call   0x4064b0
  4039ce:	mov    eax,DWORD PTR [r13+0x0]
  4039d2:	mov    r10d,DWORD PTR [rsp+0x3c]
  4039d7:	mov    rcx,r15
  4039da:	lea    eax,[r10+rax*1-0x1]
  4039df:	mov    DWORD PTR [r13+0x0],eax
  4039e3:	call   0x4064f8
  4039e8:	mov    rcx,QWORD PTR [rsp+0x20]
  4039ed:	call   0x4064f8
  4039f2:	mov    rcx,r14
  4039f5:	call   0x406530
  4039fa:	mov    edx,DWORD PTR [r13+0x0]
  4039fe:	mov    edi,ebx
  403a00:	jmp    0x40382a
  403a05:	mov    rcx,QWORD PTR [rsp+0x20]
  403a0a:	call   0x403500
  403a0f:	mov    rcx,QWORD PTR [rbp+0x0]
  403a13:	mov    rdx,QWORD PTR [rax]
  403a16:	mov    r15,rax
  403a19:	mov    QWORD PTR [rsp+0x28],rdx
  403a1e:	call   0x403410
  403a23:	mov    rdx,QWORD PTR [rsp+0x28]
  403a28:	mov    QWORD PTR [rbp+0x0],rax
  403a2c:	test   rdx,rdx
  403a2f:	je     0x403a75
  403a31:	xor    r8d,r8d
  403a34:	add    r8,0x1
  403a38:	cmp    QWORD PTR [r15+r8*8],0x0
  403a3d:	lea    r9,[r8*8+0x0]
  403a45:	jne    0x403a34
  403a47:	mov    r10d,r8d
  403a4a:	jmp    0x403966
  403a4f:	mov    rbx,QWORD PTR [rax]
  403a52:	call   QWORD PTR [rip+0xa998]        # 0x40e3f0
  403a58:	lea    rdx,[rip+0x5651]        # 0x4090b0
  403a5f:	lea    rcx,[rax+0x60]
  403a63:	mov    r8,rbx
  403a66:	call   0x406510
  403a6b:	mov    ecx,0x1
  403a70:	call   0x404b20
  403a75:	xor    r10d,r10d
  403a78:	xor    r9d,r9d
  403a7b:	xor    r8d,r8d
  403a7e:	jmp    0x403966
  403a83:	nop    DWORD PTR [rax]
  403a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a90:	test   rcx,rcx
  403a93:	je     0x403ab1
  403a95:	cmp    QWORD PTR [rcx],0x0
  403a99:	je     0x403ab1
  403a9b:	add    rcx,0x8
  403a9f:	xor    eax,eax
  403aa1:	add    rcx,0x8
  403aa5:	add    eax,0x1
  403aa8:	cmp    QWORD PTR [rcx-0x8],0x0
  403aad:	jne    0x403aa1
  403aaf:	repz ret 
  403ab1:	xor    eax,eax
  403ab3:	ret    
  403ab4:	nop
  403ab5:	nop
  403ab6:	nop
  403ab7:	nop
  403ab8:	nop
  403ab9:	nop
  403aba:	nop
  403abb:	nop
  403abc:	nop
  403abd:	nop
  403abe:	nop
  403abf:	nop
  403ac0:	push   r13
  403ac2:	push   r12
  403ac4:	push   rbp
  403ac5:	push   rdi
  403ac6:	push   rsi
  403ac7:	push   rbx
  403ac8:	movsxd rax,DWORD PTR [rip+0x9681]        # 0x40d150
  403acf:	mov    ebp,DWORD PTR [rip+0x967f]        # 0x40d154
  403ad5:	mov    edi,DWORD PTR [rip+0x36ed]        # 0x4071c8
  403adb:	mov    ebx,ebp
  403add:	lea    r9,[rcx+rax*8]
  403ae1:	mov    r11,rax
  403ae4:	mov    esi,edi
  403ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403af0:	cmp    r11d,ebx
  403af3:	jle    0x403b41
  403af5:	cmp    esi,r11d
  403af8:	jle    0x403b41
  403afa:	mov    r12d,esi
  403afd:	mov    r13d,r11d
  403b00:	sub    r12d,r11d
  403b03:	sub    r13d,ebx
  403b06:	cmp    r12d,r13d
  403b09:	jg     0x403b60
  403b0b:	test   r12d,r12d
  403b0e:	jle    0x403b39
  403b10:	movsxd rax,ebx
  403b13:	lea    rdx,[rcx+rax*8]
  403b17:	xor    eax,eax
  403b19:	nop    DWORD PTR [rax+0x0]
  403b20:	mov    r8,QWORD PTR [rdx+rax*8]
  403b24:	mov    r10,QWORD PTR [r9+rax*8]
  403b28:	mov    QWORD PTR [rdx+rax*8],r10
  403b2c:	mov    QWORD PTR [r9+rax*8],r8
  403b30:	add    rax,0x1
  403b34:	cmp    r12d,eax
  403b37:	jg     0x403b20
  403b39:	add    ebx,r12d
  403b3c:	cmp    r11d,ebx
  403b3f:	jg     0x403af5
  403b41:	mov    eax,edi
  403b43:	mov    DWORD PTR [rip+0x9607],edi        # 0x40d150
  403b49:	sub    eax,r11d
  403b4c:	add    ebp,eax
  403b4e:	mov    DWORD PTR [rip+0x9600],ebp        # 0x40d154
  403b54:	pop    rbx
  403b55:	pop    rsi
  403b56:	pop    rdi
  403b57:	pop    rbp
  403b58:	pop    r12
  403b5a:	pop    r13
  403b5c:	ret    
  403b5d:	nop    DWORD PTR [rax]
  403b60:	test   r13d,r13d
  403b63:	jle    0x403b99
  403b65:	movsxd rax,ebx
  403b68:	lea    r8,[rcx+rax*8]
  403b6c:	mov    eax,ebx
  403b6e:	sub    eax,r11d
  403b71:	add    eax,esi
  403b73:	cdqe   
  403b75:	lea    rdx,[rcx+rax*8]
  403b79:	xor    eax,eax
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b80:	mov    r10,QWORD PTR [r8+rax*8]
  403b84:	mov    r12,QWORD PTR [rdx+rax*8]
  403b88:	mov    QWORD PTR [r8+rax*8],r12
  403b8c:	mov    QWORD PTR [rdx+rax*8],r10
  403b90:	add    rax,0x1
  403b94:	cmp    r13d,eax
  403b97:	jg     0x403b80
  403b99:	sub    esi,r13d
  403b9c:	jmp    0x403af0
  403ba1:	nop    DWORD PTR [rax+rax*1+0x0]
  403ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bb0:	push   r15
  403bb2:	push   r14
  403bb4:	push   r13
  403bb6:	push   r12
  403bb8:	push   rbp
  403bb9:	push   rdi
  403bba:	push   rsi
  403bbb:	push   rbx
  403bbc:	sub    rsp,0x78
  403bc0:	mov    eax,DWORD PTR [rip+0x3602]        # 0x4071c8
  403bc6:	mov    QWORD PTR [rip+0x9577],0x0        # 0x40d148
  403bd1:	mov    r12d,ecx
  403bd4:	mov    QWORD PTR [rsp+0xc8],rdx
  403bdc:	mov    QWORD PTR [rsp+0xd0],r8
  403be4:	mov    QWORD PTR [rsp+0xd8],r9
  403bec:	test   eax,eax
  403bee:	jne    0x403e70
  403bf4:	mov    DWORD PTR [rip+0x35ca],0x1        # 0x4071c8
  403bfe:	mov    eax,0x1
  403c03:	lea    rcx,[rip+0x54d6]        # 0x4090e0
  403c0a:	mov    DWORD PTR [rip+0x9540],eax        # 0x40d150
  403c10:	mov    DWORD PTR [rip+0x953e],eax        # 0x40d154
  403c16:	mov    QWORD PTR [rip+0x9547],0x0        # 0x40d168
  403c21:	call   0x4064c8
  403c26:	mov    rbx,QWORD PTR [rsp+0xd0]
  403c2e:	mov    QWORD PTR [rip+0x9523],rax        # 0x40d158
  403c35:	movzx  edx,BYTE PTR [rbx]
  403c38:	cmp    dl,0x2d
  403c3b:	je     0x404130
  403c41:	cmp    dl,0x2b
  403c44:	je     0x4040d0
  403c4a:	test   rax,rax
  403c4d:	sete   al
  403c50:	movzx  eax,al
  403c53:	mov    DWORD PTR [rip+0x9507],eax        # 0x40d160
  403c59:	mov    DWORD PTR [rip+0x94dd],0x1        # 0x40d140
  403c63:	mov    rsi,QWORD PTR [rip+0x94fe]        # 0x40d168
  403c6a:	test   rsi,rsi
  403c6d:	je     0x403e85
  403c73:	movsx  edi,BYTE PTR [rsi]
  403c76:	test   dil,dil
  403c79:	je     0x403e85
  403c7f:	cmp    QWORD PTR [rsp+0xd8],0x0
  403c88:	je     0x403f40
  403c8e:	movsxd rax,DWORD PTR [rip+0x3533]        # 0x4071c8
  403c95:	lea    rbx,[rax*8+0x0]
  403c9d:	mov    DWORD PTR [rsp+0x3c],eax
  403ca1:	mov    QWORD PTR [rsp+0x50],rax
  403ca6:	mov    QWORD PTR [rsp+0x58],rbx
  403cab:	mov    rbx,QWORD PTR [rsp+0xc8]
  403cb3:	mov    rax,QWORD PTR [rbx+rax*8]
  403cb7:	mov    QWORD PTR [rsp+0x40],rax
  403cbc:	movzx  eax,BYTE PTR [rax+0x1]
  403cc0:	cmp    al,0x2d
  403cc2:	mov    BYTE PTR [rsp+0x48],al
  403cc6:	je     0x403d24
  403cc8:	mov    r14d,DWORD PTR [rsp+0xe8]
  403cd0:	test   r14d,r14d
  403cd3:	je     0x403f40
  403cd9:	mov    rax,QWORD PTR [rsp+0x40]
  403cde:	cmp    BYTE PTR [rax+0x2],0x0
  403ce2:	jne    0x403d24
  403ce4:	mov    rax,QWORD PTR [rsp+0xd0]
  403cec:	movzx  ecx,BYTE PTR [rax]
  403cef:	test   cl,cl
  403cf1:	je     0x403d24
  403cf3:	movzx  r8d,BYTE PTR [rsp+0x48]
  403cf9:	cmp    r8b,cl
  403cfc:	je     0x404320
  403d02:	mov    rax,QWORD PTR [rsp+0xd0]
  403d0a:	jmp    0x403d19
  403d0c:	nop    DWORD PTR [rax+0x0]
  403d10:	cmp    r8b,dl
  403d13:	je     0x404320
  403d19:	add    rax,0x1
  403d1d:	movzx  edx,BYTE PTR [rax]
  403d20:	test   dl,dl
  403d22:	jne    0x403d10
  403d24:	cmp    dil,0x3d
  403d28:	mov    rbp,rsi
  403d2b:	je     0x403d44
  403d2d:	test   dil,dil
  403d30:	jne    0x403d38
  403d32:	jmp    0x403d44
  403d34:	test   al,al
  403d36:	je     0x403d44
  403d38:	add    rbp,0x1
  403d3c:	movzx  eax,BYTE PTR [rbp+0x0]
  403d40:	cmp    al,0x3d
  403d42:	jne    0x403d34
  403d44:	mov    rax,QWORD PTR [rsp+0xd8]
  403d4c:	mov    r13,QWORD PTR [rax]
  403d4f:	test   r13,r13
  403d52:	je     0x404257
  403d58:	mov    r15,rbp
  403d5b:	mov    rbx,rax
  403d5e:	xor    ecx,ecx
  403d60:	xor    eax,eax
  403d62:	mov    BYTE PTR [rsp+0x6f],dil
  403d67:	mov    QWORD PTR [rsp+0x60],rbp
  403d6c:	sub    r15,rsi
  403d6f:	mov    rbp,r13
  403d72:	xor    r14d,r14d
  403d75:	mov    DWORD PTR [rsp+0x68],0xffffffff
  403d7d:	mov    edi,ecx
  403d7f:	mov    r13,rax
  403d82:	jmp    0x403d99
  403d84:	mov    edi,0x1
  403d89:	add    rbx,0x20
  403d8d:	mov    rbp,QWORD PTR [rbx]
  403d90:	add    r14d,0x1
  403d94:	test   rbp,rbp
  403d97:	je     0x403de0
  403d99:	mov    r8,r15
  403d9c:	mov    rdx,rsi
  403d9f:	mov    rcx,rbp
  403da2:	call   0x406448
  403da7:	test   eax,eax
  403da9:	jne    0x403d89
  403dab:	mov    rcx,rbp
  403dae:	call   0x406450
  403db3:	cmp    r15d,eax
  403db6:	je     0x404220
  403dbc:	test   r13,r13
  403dbf:	jne    0x403d84
  403dc1:	mov    r13,rbx
  403dc4:	add    rbx,0x20
  403dc8:	mov    rbp,QWORD PTR [rbx]
  403dcb:	mov    DWORD PTR [rsp+0x68],r14d
  403dd0:	add    r14d,0x1
  403dd4:	test   rbp,rbp
  403dd7:	jne    0x403d99
  403dd9:	nop    DWORD PTR [rax+0x0]
  403de0:	mov    eax,edi
  403de2:	mov    rbp,QWORD PTR [rsp+0x60]
  403de7:	movsx  edi,BYTE PTR [rsp+0x6f]
  403dec:	test   eax,eax
  403dee:	je     0x4041b0
  403df4:	mov    r13d,DWORD PTR [rip+0x33c9]        # 0x4071c4
  403dfb:	test   r13d,r13d
  403dfe:	je     0x403e3a
  403e00:	mov    rax,QWORD PTR [rsp+0xc8]
  403e08:	mov    rbx,QWORD PTR [rax]
  403e0b:	call   QWORD PTR [rip+0xa5df]        # 0x40e3f0
  403e11:	mov    r9,QWORD PTR [rsp+0x40]
  403e16:	lea    rcx,[rax+0x60]
  403e1a:	lea    rdx,[rip+0x52d2]        # 0x4090f3
  403e21:	mov    r8,rbx
  403e24:	call   0x406510
  403e29:	mov    eax,DWORD PTR [rip+0x3399]        # 0x4071c8
  403e2f:	mov    rsi,QWORD PTR [rip+0x9332]        # 0x40d168
  403e36:	mov    DWORD PTR [rsp+0x3c],eax
  403e3a:	mov    rcx,rsi
  403e3d:	call   0x406450
  403e42:	add    rax,rsi
  403e45:	mov    QWORD PTR [rip+0x931c],rax        # 0x40d168
  403e4c:	mov    eax,DWORD PTR [rsp+0x3c]
  403e50:	mov    DWORD PTR [rip+0x3366],0x0        # 0x4071c0
  403e5a:	add    eax,0x1
  403e5d:	mov    DWORD PTR [rip+0x3365],eax        # 0x4071c8
  403e63:	mov    eax,0x3f
  403e68:	jmp    0x404016
  403e6d:	nop    DWORD PTR [rax]
  403e70:	mov    r15d,DWORD PTR [rip+0x92c9]        # 0x40d140
  403e77:	test   r15d,r15d
  403e7a:	je     0x403c03
  403e80:	jmp    0x403c63
  403e85:	mov    edx,DWORD PTR [rip+0x333d]        # 0x4071c8
  403e8b:	cmp    DWORD PTR [rip+0x92bf],edx        # 0x40d150
  403e91:	jle    0x403e99
  403e93:	mov    DWORD PTR [rip+0x92b7],edx        # 0x40d150
  403e99:	cmp    edx,DWORD PTR [rip+0x92b5]        # 0x40d154
  403e9f:	jge    0x403ea7
  403ea1:	mov    DWORD PTR [rip+0x92ad],edx        # 0x40d154
  403ea7:	mov    ebx,DWORD PTR [rip+0x92b3]        # 0x40d160
  403ead:	cmp    ebx,0x1
  403eb0:	je     0x404030
  403eb6:	cmp    r12d,edx
  403eb9:	je     0x4040a2
  403ebf:	mov    rdi,QWORD PTR [rsp+0xc8]
  403ec7:	movsxd rax,edx
  403eca:	mov    ecx,0x3
  403ecf:	mov    rax,QWORD PTR [rdi+rax*8]
  403ed3:	lea    rdi,[rip+0x5216]        # 0x4090f0
  403eda:	mov    rsi,rax
  403edd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403edf:	jne    0x403ff0
  403ee5:	mov    eax,DWORD PTR [rip+0x9269]        # 0x40d154
  403eeb:	mov    ecx,DWORD PTR [rip+0x925f]        # 0x40d150
  403ef1:	add    edx,0x1
  403ef4:	mov    DWORD PTR [rip+0x32ce],edx        # 0x4071c8
  403efa:	cmp    eax,ecx
  403efc:	je     0x404230
  403f02:	cmp    edx,ecx
  403f04:	je     0x403f19
  403f06:	mov    rcx,QWORD PTR [rsp+0xc8]
  403f0e:	call   0x403ac0
  403f13:	mov    eax,DWORD PTR [rip+0x923b]        # 0x40d154
  403f19:	cmp    r12d,eax
  403f1c:	mov    DWORD PTR [rip+0x922d],r12d        # 0x40d150
  403f23:	mov    DWORD PTR [rip+0x329e],r12d        # 0x4071c8
  403f2a:	jne    0x4040b8
  403f30:	mov    eax,0xffffffff
  403f35:	jmp    0x404016
  403f3a:	nop    WORD PTR [rax+rax*1+0x0]
  403f40:	mov    rax,QWORD PTR [rsp+0xd0]
  403f48:	lea    rbx,[rsi+0x1]
  403f4c:	mov    QWORD PTR [rip+0x9215],rbx        # 0x40d168
  403f53:	movzx  eax,BYTE PTR [rax]
  403f56:	test   al,al
  403f58:	je     0x403f84
  403f5a:	cmp    al,dil
  403f5d:	je     0x404148
  403f63:	mov    rax,QWORD PTR [rsp+0xd0]
  403f6b:	jmp    0x403f79
  403f6d:	nop    DWORD PTR [rax]
  403f70:	cmp    dl,dil
  403f73:	je     0x404150
  403f79:	add    rax,0x1
  403f7d:	movzx  edx,BYTE PTR [rax]
  403f80:	test   dl,dl
  403f82:	jne    0x403f70
  403f84:	cmp    BYTE PTR [rsi+0x1],0x0
  403f88:	jne    0x403fa0
  403f8a:	mov    edx,0x1
  403f8f:	xor    eax,eax
  403f91:	add    DWORD PTR [rip+0x3230],0x1        # 0x4071c8
  403f98:	test   dl,dl
  403f9a:	je     0x404190
  403fa0:	mov    r8d,DWORD PTR [rip+0x321d]        # 0x4071c4
  403fa7:	test   r8d,r8d
  403faa:	je     0x403fe1
  403fac:	cmp    QWORD PTR [rip+0x91a4],0x0        # 0x40d158
  403fb4:	mov    rax,QWORD PTR [rsp+0xc8]
  403fbc:	mov    rbx,QWORD PTR [rax]
  403fbf:	je     0x404450
  403fc5:	call   QWORD PTR [rip+0xa425]        # 0x40e3f0
  403fcb:	lea    rdx,[rip+0x520f]        # 0x4091e1
  403fd2:	lea    rcx,[rax+0x60]
  403fd6:	mov    r9d,edi
  403fd9:	mov    r8,rbx
  403fdc:	call   0x406510
  403fe1:	mov    DWORD PTR [rip+0x31d9],edi        # 0x4071c0
  403fe7:	mov    eax,0x3f
  403fec:	jmp    0x404016
  403fee:	xchg   ax,ax
  403ff0:	cmp    BYTE PTR [rax],0x2d
  403ff3:	je     0x4040f0
  403ff9:	test   ebx,ebx
  403ffb:	je     0x403f30
  404001:	add    edx,0x1
  404004:	mov    QWORD PTR [rip+0x913d],rax        # 0x40d148
  40400b:	mov    eax,0x1
  404010:	mov    DWORD PTR [rip+0x31b2],edx        # 0x4071c8
  404016:	add    rsp,0x78
  40401a:	pop    rbx
  40401b:	pop    rsi
  40401c:	pop    rdi
  40401d:	pop    rbp
  40401e:	pop    r12
  404020:	pop    r13
  404022:	pop    r14
  404024:	pop    r15
  404026:	ret    
  404027:	nop    WORD PTR [rax+rax*1+0x0]
  404030:	mov    eax,DWORD PTR [rip+0x911a]        # 0x40d150
  404036:	cmp    DWORD PTR [rip+0x9118],eax        # 0x40d154
  40403c:	je     0x404302
  404042:	cmp    edx,eax
  404044:	je     0x404059
  404046:	mov    rcx,QWORD PTR [rsp+0xc8]
  40404e:	call   0x403ac0
  404053:	mov    eax,DWORD PTR [rip+0x316f]        # 0x4071c8
  404059:	cmp    r12d,eax
  40405c:	jle    0x404170
  404062:	mov    rdi,QWORD PTR [rsp+0xc8]
  40406a:	movsxd rdx,eax
  40406d:	lea    rdx,[rdi+rdx*8]
  404071:	jmp    0x404089
  404073:	add    eax,0x1
  404076:	add    rdx,0x8
  40407a:	cmp    eax,r12d
  40407d:	mov    DWORD PTR [rip+0x3145],eax        # 0x4071c8
  404083:	je     0x404170
  404089:	mov    rcx,QWORD PTR [rdx]
  40408c:	cmp    BYTE PTR [rcx],0x2d
  40408f:	jne    0x404073
  404091:	cmp    BYTE PTR [rcx+0x1],0x0
  404095:	je     0x404073
  404097:	mov    edx,DWORD PTR [rip+0x312b]        # 0x4071c8
  40409d:	jmp    0x404172
  4040a2:	mov    r12d,DWORD PTR [rip+0x90a7]        # 0x40d150
  4040a9:	mov    eax,DWORD PTR [rip+0x90a5]        # 0x40d154
  4040af:	cmp    r12d,eax
  4040b2:	je     0x403f30
  4040b8:	mov    DWORD PTR [rip+0x310a],eax        # 0x4071c8
  4040be:	mov    eax,0xffffffff
  4040c3:	jmp    0x404016
  4040c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4040d0:	mov    DWORD PTR [rip+0x9086],0x0        # 0x40d160
  4040da:	add    QWORD PTR [rsp+0xd0],0x1
  4040e3:	jmp    0x403c59
  4040e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4040f0:	movzx  ecx,BYTE PTR [rax+0x1]
  4040f4:	test   cl,cl
  4040f6:	je     0x403ff9
  4040fc:	cmp    cl,0x2d
  4040ff:	sete   dl
  404102:	xor    ecx,ecx
  404104:	cmp    QWORD PTR [rsp+0xd8],0x0
  40410d:	setne  cl
  404110:	and    rdx,rcx
  404113:	lea    rsi,[rax+rdx*1+0x1]
  404118:	mov    QWORD PTR [rip+0x9049],rsi        # 0x40d168
  40411f:	movsx  edi,BYTE PTR [rsi]
  404122:	jmp    0x403c7f
  404127:	nop    WORD PTR [rax+rax*1+0x0]
  404130:	mov    DWORD PTR [rip+0x9026],0x2        # 0x40d160
  40413a:	add    QWORD PTR [rsp+0xd0],0x1
  404143:	jmp    0x403c59
  404148:	mov    rax,QWORD PTR [rsp+0xd0]
  404150:	test   rax,rax
  404153:	sete   cl
  404156:	cmp    dil,0x3a
  40415a:	sete   dl
  40415d:	or     edx,ecx
  40415f:	cmp    BYTE PTR [rsi+0x1],0x0
  404163:	je     0x403f91
  404169:	jmp    0x403f98
  40416e:	xchg   ax,ax
  404170:	mov    edx,eax
  404172:	cmp    r12d,edx
  404175:	mov    DWORD PTR [rip+0x8fd5],eax        # 0x40d150
  40417b:	jne    0x403ebf
  404181:	jmp    0x4040a2
  404186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404190:	cmp    BYTE PTR [rax],0x57
  404193:	movzx  edx,BYTE PTR [rax+0x1]
  404197:	je     0x404332
  40419d:	cmp    dl,0x3a
  4041a0:	je     0x40441a
  4041a6:	movsx  eax,dil
  4041aa:	jmp    0x404016
  4041af:	nop
  4041b0:	test   r13,r13
  4041b3:	je     0x404257
  4041b9:	mov    r14d,DWORD PTR [rsp+0x68]
  4041be:	mov    rbx,r13
  4041c1:	mov    eax,DWORD PTR [rsp+0x3c]
  4041c5:	add    eax,0x1
  4041c8:	mov    DWORD PTR [rip+0x2ffa],eax        # 0x4071c8
  4041ce:	cmp    BYTE PTR [rbp+0x0],0x0
  4041d2:	jne    0x40423d
  4041d4:	cmp    DWORD PTR [rbx+0x8],0x1
  4041d8:	je     0x40452d
  4041de:	mov    rcx,rsi
  4041e1:	call   0x406450
  4041e6:	add    rsi,rax
  4041e9:	cmp    QWORD PTR [rsp+0xe0],0x0
  4041f2:	mov    QWORD PTR [rip+0x8f6f],rsi        # 0x40d168
  4041f9:	je     0x404206
  4041fb:	mov    rax,QWORD PTR [rsp+0xe0]
  404203:	mov    DWORD PTR [rax],r14d
  404206:	mov    rax,QWORD PTR [rbx+0x10]
  40420a:	test   rax,rax
  40420d:	je     0x404585
  404213:	mov    edx,DWORD PTR [rbx+0x18]
  404216:	mov    DWORD PTR [rax],edx
  404218:	xor    eax,eax
  40421a:	jmp    0x404016
  40421f:	nop
  404220:	mov    rbp,QWORD PTR [rsp+0x60]
  404225:	jmp    0x4041c1
  404227:	nop    WORD PTR [rax+rax*1+0x0]
  404230:	mov    DWORD PTR [rip+0x8f1e],edx        # 0x40d154
  404236:	mov    eax,edx
  404238:	jmp    0x403f19
  40423d:	mov    r12d,DWORD PTR [rbx+0x8]
  404241:	test   r12d,r12d
  404244:	je     0x404471
  40424a:	add    rbp,0x1
  40424e:	mov    QWORD PTR [rip+0x8ef3],rbp        # 0x40d148
  404255:	jmp    0x4041de
  404257:	cmp    BYTE PTR [rsp+0x48],0x2d
  40425c:	sete   cl
  40425f:	je     0x4042a4
  404261:	mov    r10d,DWORD PTR [rsp+0xe8]
  404269:	test   r10d,r10d
  40426c:	je     0x4042a4
  40426e:	mov    rax,QWORD PTR [rsp+0xd0]
  404276:	movzx  eax,BYTE PTR [rax]
  404279:	test   al,al
  40427b:	je     0x4042a4
  40427d:	cmp    dil,al
  404280:	je     0x4049d6
  404286:	mov    rax,QWORD PTR [rsp+0xd0]
  40428e:	jmp    0x404299
  404290:	cmp    dl,dil
  404293:	je     0x4048e6
  404299:	add    rax,0x1
  40429d:	movzx  edx,BYTE PTR [rax]
  4042a0:	test   dl,dl
  4042a2:	jne    0x404290
  4042a4:	mov    r9d,DWORD PTR [rip+0x2f19]        # 0x4071c4
  4042ab:	test   r9d,r9d
  4042ae:	je     0x4042f6
  4042b0:	test   cl,cl
  4042b2:	jne    0x4047b4
  4042b8:	mov    rax,QWORD PTR [rsp+0x40]
  4042bd:	movsx  edi,BYTE PTR [rax]
  4042c0:	mov    rax,QWORD PTR [rsp+0xc8]
  4042c8:	mov    rbx,QWORD PTR [rax]
  4042cb:	call   QWORD PTR [rip+0xa11f]        # 0x40e3f0
  4042d1:	lea    rdx,[rip+0x4ee8]        # 0x4091c0
  4042d8:	lea    rcx,[rax+0x60]
  4042dc:	mov    QWORD PTR [rsp+0x20],rsi
  4042e1:	mov    r9d,edi
  4042e4:	mov    r8,rbx
  4042e7:	call   0x406510
  4042ec:	mov    eax,DWORD PTR [rip+0x2ed6]        # 0x4071c8
  4042f2:	mov    DWORD PTR [rsp+0x3c],eax
  4042f6:	lea    rax,[rip+0x4ee3]        # 0x4091e0
  4042fd:	jmp    0x403e45
  404302:	cmp    edx,eax
  404304:	je     0x404059
  40430a:	mov    DWORD PTR [rip+0x8e44],edx        # 0x40d154
  404310:	mov    eax,edx
  404312:	jmp    0x404059
  404317:	nop    WORD PTR [rax+rax*1+0x0]
  404320:	lea    rbx,[rsi+0x1]
  404324:	mov    eax,ecx
  404326:	mov    QWORD PTR [rip+0x8e3b],rbx        # 0x40d168
  40432d:	jmp    0x403f5a
  404332:	cmp    dl,0x3b
  404335:	jne    0x40419d
  40433b:	cmp    BYTE PTR [rsi+0x1],0x0
  40433f:	je     0x40465e
  404345:	add    DWORD PTR [rip+0x2e7c],0x1        # 0x4071c8
  40434c:	mov    QWORD PTR [rip+0x8df5],rbx        # 0x40d148
  404353:	movzx  edi,BYTE PTR [rbx]
  404356:	mov    QWORD PTR [rip+0x8e0b],rbx        # 0x40d168
  40435d:	mov    rsi,rbx
  404360:	cmp    dil,0x3d
  404364:	jne    0x40437d
  404366:	jmp    0x404382
  404368:	nop    DWORD PTR [rax+rax*1+0x0]
  404370:	add    rsi,0x1
  404374:	movzx  edi,BYTE PTR [rsi]
  404377:	cmp    dil,0x3d
  40437b:	je     0x404382
  40437d:	test   dil,dil
  404380:	jne    0x404370
  404382:	mov    rax,QWORD PTR [rsp+0xd8]
  40438a:	mov    r15,QWORD PTR [rax]
  40438d:	test   r15,r15
  404390:	je     0x4048d1
  404396:	mov    r14,rsi
  404399:	xor    ecx,ecx
  40439b:	mov    BYTE PTR [rsp+0x40],dil
  4043a0:	sub    r14,rbx
  4043a3:	mov    QWORD PTR [rsp+0x48],rsi
  4043a8:	mov    DWORD PTR [rsp+0xc0],r12d
  4043b0:	mov    eax,r14d
  4043b3:	xor    ebp,ebp
  4043b5:	mov    DWORD PTR [rsp+0x3c],0x0
  4043bd:	xor    r13d,r13d
  4043c0:	mov    r12d,ecx
  4043c3:	mov    rsi,QWORD PTR [rsp+0xd8]
  4043cb:	mov    rdi,rax
  4043ce:	jmp    0x4043e9
  4043d0:	mov    r12d,0x1
  4043d6:	add    rsi,0x20
  4043da:	mov    r15,QWORD PTR [rsi]
  4043dd:	add    ebp,0x1
  4043e0:	test   r15,r15
  4043e3:	je     0x4045d3
  4043e9:	mov    r8,r14
  4043ec:	mov    rdx,rbx
  4043ef:	mov    rcx,r15
  4043f2:	call   0x406448
  4043f7:	test   eax,eax
  4043f9:	jne    0x4043d6
  4043fb:	mov    rcx,r15
  4043fe:	call   0x406450
  404403:	cmp    rdi,rax
  404406:	je     0x404795
  40440c:	test   r13,r13
  40440f:	jne    0x4043d0
  404411:	mov    DWORD PTR [rsp+0x3c],ebp
  404415:	mov    r13,rsi
  404418:	jmp    0x4043d6
  40441a:	cmp    BYTE PTR [rax+0x2],0x3a
  40441e:	je     0x40455d
  404424:	cmp    BYTE PTR [rsi+0x1],0x0
  404428:	je     0x4044f8
  40442e:	add    DWORD PTR [rip+0x2d93],0x1        # 0x4071c8
  404435:	mov    QWORD PTR [rip+0x8d0c],rbx        # 0x40d148
  40443c:	movsx  eax,dil
  404440:	mov    QWORD PTR [rip+0x8d1d],0x0        # 0x40d168
  40444b:	jmp    0x404016
  404450:	call   QWORD PTR [rip+0x9f9a]        # 0x40e3f0
  404456:	lea    rdx,[rip+0x4d9e]        # 0x4091fb
  40445d:	lea    rcx,[rax+0x60]
  404461:	mov    r9d,edi
  404464:	mov    r8,rbx
  404467:	call   0x406510
  40446c:	jmp    0x403fe1
  404471:	mov    edi,DWORD PTR [rip+0x2d4d]        # 0x4071c4
  404477:	test   edi,edi
  404479:	je     0x4041de
  40447f:	mov    rax,QWORD PTR [rsp+0xc8]
  404487:	mov    rsi,QWORD PTR [rsp+0x50]
  40448c:	mov    rax,QWORD PTR [rax+rsi*8]
  404490:	cmp    BYTE PTR [rax+0x1],0x2d
  404494:	je     0x40469f
  40449a:	movsx  edi,BYTE PTR [rax]
  40449d:	mov    rax,QWORD PTR [rsp+0xc8]
  4044a5:	mov    rbp,QWORD PTR [rbx]
  4044a8:	mov    rsi,QWORD PTR [rax]
  4044ab:	call   QWORD PTR [rip+0x9f3f]        # 0x40e3f0
  4044b1:	lea    rdx,[rip+0x4c90]        # 0x409148
  4044b8:	lea    rcx,[rax+0x60]
  4044bc:	mov    QWORD PTR [rsp+0x20],rbp
  4044c1:	mov    r9d,edi
  4044c4:	mov    r8,rsi
  4044c7:	call   0x406510
  4044cc:	mov    rsi,QWORD PTR [rip+0x8c95]        # 0x40d168
  4044d3:	mov    rcx,rsi
  4044d6:	call   0x406450
  4044db:	add    rax,rsi
  4044de:	mov    QWORD PTR [rip+0x8c83],rax        # 0x40d168
  4044e5:	mov    eax,DWORD PTR [rbx+0x18]
  4044e8:	mov    DWORD PTR [rip+0x2cd2],eax        # 0x4071c0
  4044ee:	mov    eax,0x3f
  4044f3:	jmp    0x404016
  4044f8:	movsxd rax,DWORD PTR [rip+0x2cc9]        # 0x4071c8
  4044ff:	cmp    eax,r12d
  404502:	je     0x4046ce
  404508:	mov    rsi,QWORD PTR [rsp+0xc8]
  404510:	lea    edx,[rax+0x1]
  404513:	mov    DWORD PTR [rip+0x2caf],edx        # 0x4071c8
  404519:	mov    rax,QWORD PTR [rsi+rax*8]
  40451d:	mov    QWORD PTR [rip+0x8c24],rax        # 0x40d148
  404524:	movsx  eax,dil
  404528:	jmp    0x404440
  40452d:	cmp    r12d,eax
  404530:	jle    0x40458d
  404532:	mov    eax,DWORD PTR [rsp+0x3c]
  404536:	mov    rdi,QWORD PTR [rsp+0x58]
  40453b:	add    eax,0x2
  40453e:	mov    DWORD PTR [rip+0x2c84],eax        # 0x4071c8
  404544:	mov    rax,QWORD PTR [rsp+0xc8]
  40454c:	mov    rax,QWORD PTR [rax+rdi*1+0x8]
  404551:	mov    QWORD PTR [rip+0x8bf0],rax        # 0x40d148
  404558:	jmp    0x4041de
  40455d:	cmp    BYTE PTR [rsi+0x1],0x0
  404561:	je     0x40468f
  404567:	add    DWORD PTR [rip+0x2c5a],0x1        # 0x4071c8
  40456e:	mov    QWORD PTR [rip+0x8bd3],rbx        # 0x40d148
  404575:	mov    QWORD PTR [rip+0x8be8],0x0        # 0x40d168
  404580:	jmp    0x4041a6
  404585:	mov    eax,DWORD PTR [rbx+0x18]
  404588:	jmp    0x404016
  40458d:	mov    r11d,DWORD PTR [rip+0x2c30]        # 0x4071c4
  404594:	test   r11d,r11d
  404597:	jne    0x4047ea
  40459d:	mov    rcx,rsi
  4045a0:	call   0x406450
  4045a5:	add    rax,rsi
  4045a8:	mov    QWORD PTR [rip+0x8bb9],rax        # 0x40d168
  4045af:	mov    eax,DWORD PTR [rbx+0x18]
  4045b2:	mov    DWORD PTR [rip+0x2c08],eax        # 0x4071c0
  4045b8:	mov    rax,QWORD PTR [rsp+0xd0]
  4045c0:	cmp    BYTE PTR [rax],0x3a
  4045c3:	jne    0x403fe7
  4045c9:	mov    eax,0x3a
  4045ce:	jmp    0x404016
  4045d3:	mov    eax,r12d
  4045d6:	movzx  edi,BYTE PTR [rsp+0x40]
  4045db:	mov    rsi,QWORD PTR [rsp+0x48]
  4045e0:	test   eax,eax
  4045e2:	mov    r12d,DWORD PTR [rsp+0xc0]
  4045ea:	je     0x4046fc
  4045f0:	mov    edx,DWORD PTR [rip+0x2bce]        # 0x4071c4
  4045f6:	test   edx,edx
  4045f8:	je     0x40463b
  4045fa:	movsxd rax,DWORD PTR [rip+0x2bc7]        # 0x4071c8
  404601:	mov    rsi,QWORD PTR [rsp+0xc8]
  404609:	mov    rsi,QWORD PTR [rsi+rax*8]
  40460d:	mov    rax,QWORD PTR [rsp+0xc8]
  404615:	mov    rbx,QWORD PTR [rax]
  404618:	call   QWORD PTR [rip+0x9dd2]        # 0x40e3f0
  40461e:	lea    rdx,[rip+0x4c1b]        # 0x409240
  404625:	lea    rcx,[rax+0x60]
  404629:	mov    r9,rsi
  40462c:	mov    r8,rbx
  40462f:	call   0x406510
  404634:	mov    rbx,QWORD PTR [rip+0x8b2d]        # 0x40d168
  40463b:	mov    rcx,rbx
  40463e:	call   0x406450
  404643:	add    rax,rbx
  404646:	add    DWORD PTR [rip+0x2b7b],0x1        # 0x4071c8
  40464d:	mov    QWORD PTR [rip+0x8b14],rax        # 0x40d168
  404654:	mov    eax,0x3f
  404659:	jmp    0x404016
  40465e:	movsxd rax,DWORD PTR [rip+0x2b63]        # 0x4071c8
  404665:	cmp    eax,r12d
  404668:	je     0x404826
  40466e:	mov    rsi,QWORD PTR [rsp+0xc8]
  404676:	lea    edx,[rax+0x1]
  404679:	mov    DWORD PTR [rip+0x2b49],edx        # 0x4071c8
  40467f:	mov    rbx,QWORD PTR [rsi+rax*8]
  404683:	mov    QWORD PTR [rip+0x8abe],rbx        # 0x40d148
  40468a:	jmp    0x404353
  40468f:	mov    QWORD PTR [rip+0x8aae],0x0        # 0x40d148
  40469a:	jmp    0x404575
  40469f:	mov    rax,QWORD PTR [rsp+0xc8]
  4046a7:	mov    rdi,QWORD PTR [rbx]
  4046aa:	mov    rsi,QWORD PTR [rax]
  4046ad:	call   QWORD PTR [rip+0x9d3d]        # 0x40e3f0
  4046b3:	lea    rdx,[rip+0x4a5e]        # 0x409118
  4046ba:	lea    rcx,[rax+0x60]
  4046be:	mov    r9,rdi
  4046c1:	mov    r8,rsi
  4046c4:	call   0x406510
  4046c9:	jmp    0x4044cc
  4046ce:	mov    eax,DWORD PTR [rip+0x2af0]        # 0x4071c4
  4046d4:	test   eax,eax
  4046d6:	jne    0x4048f6
  4046dc:	mov    rax,QWORD PTR [rsp+0xd0]
  4046e4:	mov    DWORD PTR [rip+0x2ad6],edi        # 0x4071c0
  4046ea:	cmp    BYTE PTR [rax],0x3a
  4046ed:	setne  al
  4046f0:	movzx  eax,al
  4046f3:	lea    eax,[rax+rax*4+0x3a]
  4046f7:	jmp    0x404440
  4046fc:	test   r13,r13
  4046ff:	je     0x4048d1
  404705:	mov    ebp,DWORD PTR [rsp+0x3c]
  404709:	mov    QWORD PTR [rsp+0xd8],r13
  404711:	test   dil,dil
  404714:	mov    rax,QWORD PTR [rsp+0xd8]
  40471c:	je     0x404877
  404722:	cmp    DWORD PTR [rax+0x8],0x0
  404726:	jne    0x40494f
  40472c:	cmp    DWORD PTR [rip+0x2a91],0x0        # 0x4071c4
  404733:	je     0x404767
  404735:	mov    rax,QWORD PTR [rsp+0xd8]
  40473d:	mov    rsi,QWORD PTR [rax]
  404740:	mov    rax,QWORD PTR [rsp+0xc8]
  404748:	mov    rbx,QWORD PTR [rax]
  40474b:	call   QWORD PTR [rip+0x9c9f]        # 0x40e3f0
  404751:	lea    rdx,[rip+0x4b10]        # 0x409268
  404758:	lea    rcx,[rax+0x60]
  40475c:	mov    r9,rsi
  40475f:	mov    r8,rbx
  404762:	call   0x406510
  404767:	mov    rdx,QWORD PTR [rip+0x89fa]        # 0x40d168
  40476e:	xor    eax,eax
  404770:	or     rcx,0xffffffffffffffff
  404774:	mov    rdi,rdx
  404777:	repnz scas al,BYTE PTR es:[rdi]
  404779:	mov    rax,rcx
  40477c:	not    rax
  40477f:	lea    rax,[rdx+rax*1-0x1]
  404784:	mov    QWORD PTR [rip+0x89dd],rax        # 0x40d168
  40478b:	mov    eax,0x3f
  404790:	jmp    0x404016
  404795:	mov    QWORD PTR [rsp+0xd8],rsi
  40479d:	movzx  edi,BYTE PTR [rsp+0x40]
  4047a2:	mov    r12d,DWORD PTR [rsp+0xc0]
  4047aa:	mov    rsi,QWORD PTR [rsp+0x48]
  4047af:	jmp    0x404711
  4047b4:	mov    rax,QWORD PTR [rsp+0xc8]
  4047bc:	mov    rbx,QWORD PTR [rax]
  4047bf:	call   QWORD PTR [rip+0x9c2b]        # 0x40e3f0
  4047c5:	lea    rdx,[rip+0x49d4]        # 0x4091a0
  4047cc:	lea    rcx,[rax+0x60]
  4047d0:	mov    r9,rsi
  4047d3:	mov    r8,rbx
  4047d6:	call   0x406510
  4047db:	mov    eax,DWORD PTR [rip+0x29e7]        # 0x4071c8
  4047e1:	mov    DWORD PTR [rsp+0x3c],eax
  4047e5:	jmp    0x4042f6
  4047ea:	mov    rax,QWORD PTR [rsp+0xc8]
  4047f2:	mov    rsi,QWORD PTR [rsp+0x50]
  4047f7:	mov    rdi,QWORD PTR [rax+rsi*8]
  4047fb:	mov    rsi,QWORD PTR [rax]
  4047fe:	call   QWORD PTR [rip+0x9bec]        # 0x40e3f0
  404804:	lea    rdx,[rip+0x496d]        # 0x409178
  40480b:	lea    rcx,[rax+0x60]
  40480f:	mov    r8,rsi
  404812:	mov    r9,rdi
  404815:	call   0x406510
  40481a:	mov    rsi,QWORD PTR [rip+0x8947]        # 0x40d168
  404821:	jmp    0x40459d
  404826:	mov    ecx,DWORD PTR [rip+0x2998]        # 0x4071c4
  40482c:	test   ecx,ecx
  40482e:	je     0x404857
  404830:	mov    rax,QWORD PTR [rsp+0xc8]
  404838:	mov    rbx,QWORD PTR [rax]
  40483b:	call   QWORD PTR [rip+0x9baf]        # 0x40e3f0
  404841:	lea    rdx,[rip+0x49d0]        # 0x409218
  404848:	lea    rcx,[rax+0x60]
  40484c:	mov    r9d,edi
  40484f:	mov    r8,rbx
  404852:	call   0x406510
  404857:	mov    rax,QWORD PTR [rsp+0xd0]
  40485f:	mov    DWORD PTR [rip+0x295b],edi        # 0x4071c0
  404865:	cmp    BYTE PTR [rax],0x3a
  404868:	setne  al
  40486b:	movzx  eax,al
  40486e:	lea    eax,[rax+rax*4+0x3a]
  404872:	jmp    0x404016
  404877:	cmp    DWORD PTR [rax+0x8],0x1
  40487b:	je     0x404922
  404881:	mov    rcx,rbx
  404884:	call   0x406450
  404889:	add    rbx,rax
  40488c:	cmp    QWORD PTR [rsp+0xe0],0x0
  404895:	mov    QWORD PTR [rip+0x88cc],rbx        # 0x40d168
  40489c:	je     0x4048a8
  40489e:	mov    rax,QWORD PTR [rsp+0xe0]
  4048a6:	mov    DWORD PTR [rax],ebp
  4048a8:	mov    rax,QWORD PTR [rsp+0xd8]
  4048b0:	mov    rax,QWORD PTR [rax+0x10]
  4048b4:	test   rax,rax
  4048b7:	je     0x4049ee
  4048bd:	mov    rsi,QWORD PTR [rsp+0xd8]
  4048c5:	mov    edx,DWORD PTR [rsi+0x18]
  4048c8:	mov    DWORD PTR [rax],edx
  4048ca:	xor    eax,eax
  4048cc:	jmp    0x404016
  4048d1:	mov    QWORD PTR [rip+0x888c],0x0        # 0x40d168
  4048dc:	mov    eax,0x57
  4048e1:	jmp    0x404016
  4048e6:	lea    rbx,[rsi+0x1]
  4048ea:	mov    QWORD PTR [rip+0x8877],rbx        # 0x40d168
  4048f1:	jmp    0x403f63
  4048f6:	mov    rax,QWORD PTR [rsp+0xc8]
  4048fe:	mov    rbx,QWORD PTR [rax]
  404901:	call   QWORD PTR [rip+0x9ae9]        # 0x40e3f0
  404907:	lea    rdx,[rip+0x490a]        # 0x409218
  40490e:	lea    rcx,[rax+0x60]
  404912:	mov    r9d,edi
  404915:	mov    r8,rbx
  404918:	call   0x406510
  40491d:	jmp    0x4046dc
  404922:	movsxd rax,DWORD PTR [rip+0x289f]        # 0x4071c8
  404929:	cmp    r12d,eax
  40492c:	jle    0x40495f
  40492e:	mov    rsi,QWORD PTR [rsp+0xc8]
  404936:	lea    edx,[rax+0x1]
  404939:	mov    DWORD PTR [rip+0x2889],edx        # 0x4071c8
  40493f:	mov    rax,QWORD PTR [rsi+rax*8]
  404943:	mov    QWORD PTR [rip+0x87fe],rax        # 0x40d148
  40494a:	jmp    0x404881
  40494f:	add    rsi,0x1
  404953:	mov    QWORD PTR [rip+0x87ee],rsi        # 0x40d148
  40495a:	jmp    0x404881
  40495f:	cmp    DWORD PTR [rip+0x285e],0x0        # 0x4071c4
  404966:	je     0x40499c
  404968:	mov    rsi,QWORD PTR [rsp+0xc8]
  404970:	mov    rsi,QWORD PTR [rsi+rax*8-0x8]
  404975:	mov    rax,QWORD PTR [rsp+0xc8]
  40497d:	mov    rbx,QWORD PTR [rax]
  404980:	call   QWORD PTR [rip+0x9a6a]        # 0x40e3f0
  404986:	lea    rdx,[rip+0x47eb]        # 0x409178
  40498d:	lea    rcx,[rax+0x60]
  404991:	mov    r9,rsi
  404994:	mov    r8,rbx
  404997:	call   0x406510
  40499c:	mov    rdx,QWORD PTR [rip+0x87c5]        # 0x40d168
  4049a3:	xor    eax,eax
  4049a5:	or     rcx,0xffffffffffffffff
  4049a9:	mov    rdi,rdx
  4049ac:	repnz scas al,BYTE PTR es:[rdi]
  4049ae:	mov    rax,rcx
  4049b1:	not    rax
  4049b4:	lea    rax,[rdx+rax*1-0x1]
  4049b9:	mov    QWORD PTR [rip+0x87a8],rax        # 0x40d168
  4049c0:	mov    rax,QWORD PTR [rsp+0xd0]
  4049c8:	cmp    BYTE PTR [rax],0x3a
  4049cb:	jne    0x403fe7
  4049d1:	jmp    0x4045c9
  4049d6:	lea    rbx,[rsi+0x1]
  4049da:	mov    rax,QWORD PTR [rsp+0xd0]
  4049e2:	mov    QWORD PTR [rip+0x877f],rbx        # 0x40d168
  4049e9:	jmp    0x404150
  4049ee:	mov    rax,QWORD PTR [rsp+0xd8]
  4049f6:	mov    eax,DWORD PTR [rax+0x18]
  4049f9:	jmp    0x404016
  4049fe:	xchg   ax,ax
  404a00:	sub    rsp,0x38
  404a04:	xor    r9d,r9d
  404a07:	mov    DWORD PTR [rsp+0x28],0x0
  404a0f:	mov    QWORD PTR [rsp+0x20],0x0
  404a18:	call   0x403bb0
  404a1d:	add    rsp,0x38
  404a21:	ret    
  404a22:	nop
  404a23:	nop
  404a24:	nop
  404a25:	nop
  404a26:	nop
  404a27:	nop
  404a28:	nop
  404a29:	nop
  404a2a:	nop
  404a2b:	nop
  404a2c:	nop
  404a2d:	nop
  404a2e:	nop
  404a2f:	nop
  404a30:	sub    rsp,0x38
  404a34:	mov    rax,QWORD PTR [rsp+0x60]
  404a39:	mov    DWORD PTR [rsp+0x28],0x0
  404a41:	mov    QWORD PTR [rsp+0x20],rax
  404a46:	call   0x403bb0
  404a4b:	add    rsp,0x38
  404a4f:	ret    
  404a50:	sub    rsp,0x38
  404a54:	mov    rax,QWORD PTR [rsp+0x60]
  404a59:	mov    DWORD PTR [rsp+0x28],0x1
  404a61:	mov    QWORD PTR [rsp+0x20],rax
  404a66:	call   0x403bb0
  404a6b:	add    rsp,0x38
  404a6f:	ret    
  404a70:	movzx  r8d,BYTE PTR [rcx]
  404a74:	mov    rax,rcx
  404a77:	test   r8b,r8b
  404a7a:	je     0x404a95
  404a7c:	lea    rdx,[rcx+0x1]
  404a80:	cmp    r8b,0x2f
  404a84:	movzx  r8d,BYTE PTR [rdx]
  404a88:	cmove  rax,rdx
  404a8c:	add    rdx,0x1
  404a90:	test   r8b,r8b
  404a93:	jne    0x404a80
  404a95:	repz ret 
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	movzx  r8d,BYTE PTR [rcx]
  404aa4:	mov    rax,rcx
  404aa7:	mov    rcx,QWORD PTR [rip+0x5142]        # 0x409bf0
  404aae:	test   BYTE PTR [rcx+r8*2],0x88
  404ab3:	mov    rdx,r8
  404ab6:	je     0x404abe
  404ab8:	cmp    BYTE PTR [rax+0x1],0x3a
  404abc:	je     0x404b00
  404abe:	test   dl,dl
  404ac0:	je     0x404af5
  404ac2:	lea    r8,[rax+0x1]
  404ac6:	jmp    0x404ae1
  404ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ad0:	cmp    dl,0x2f
  404ad3:	je     0x404ae6
  404ad5:	movzx  edx,BYTE PTR [r8]
  404ad9:	add    r8,0x1
  404add:	test   dl,dl
  404adf:	je     0x404af5
  404ae1:	cmp    dl,0x5c
  404ae4:	jne    0x404ad0
  404ae6:	movzx  edx,BYTE PTR [r8]
  404aea:	mov    rax,r8
  404aed:	add    r8,0x1
  404af1:	test   dl,dl
  404af3:	jne    0x404ae1
  404af5:	repz ret 
  404af7:	nop    WORD PTR [rax+rax*1+0x0]
  404b00:	movzx  edx,BYTE PTR [rax+0x2]
  404b04:	add    rax,0x2
  404b08:	jmp    0x404abe
  404b0a:	nop    WORD PTR [rax+rax*1+0x0]
  404b10:	jmp    0x404aa0
  404b12:	nop
  404b13:	nop
  404b14:	nop
  404b15:	nop
  404b16:	nop
  404b17:	nop
  404b18:	nop
  404b19:	nop
  404b1a:	nop
  404b1b:	nop
  404b1c:	nop
  404b1d:	nop
  404b1e:	nop
  404b1f:	nop
  404b20:	sub    rsp,0x38
  404b24:	mov    rax,QWORD PTR [rip+0x9035]        # 0x40db60
  404b2b:	test   rax,rax
  404b2e:	je     0x404b3a
  404b30:	mov    DWORD PTR [rsp+0x2c],ecx
  404b34:	call   rax
  404b36:	mov    ecx,DWORD PTR [rsp+0x2c]
  404b3a:	call   0x406538
  404b3f:	nop
  404b40:	mov    QWORD PTR [rip+0x2689],rcx        # 0x4071d0
  404b47:	ret    
  404b48:	nop    DWORD PTR [rax+rax*1+0x0]
  404b50:	push   rdi
  404b51:	push   rsi
  404b52:	push   rbx
  404b53:	sub    rsp,0x30
  404b57:	mov    rsi,QWORD PTR [rip+0x2672]        # 0x4071d0
  404b5e:	lea    rax,[rip+0x4b5b]        # 0x4096c0
  404b65:	lea    rbx,[rip+0x4b57]        # 0x4096c3
  404b6c:	mov    rdi,rcx
  404b6f:	cmp    BYTE PTR [rsi],0x0
  404b72:	cmovne rbx,rax
  404b76:	call   QWORD PTR [rip+0x9874]        # 0x40e3f0
  404b7c:	lea    rdx,[rip+0x4b45]        # 0x4096c8
  404b83:	lea    rcx,[rax+0x60]
  404b87:	mov    DWORD PTR [rsp+0x20],edi
  404b8b:	mov    r9,rbx
  404b8e:	mov    r8,rsi
  404b91:	call   0x406510
  404b96:	mov    ecx,0x1
  404b9b:	call   0x404b20
  404ba0:	nop
  404ba1:	nop    DWORD PTR [rax+rax*1+0x0]
  404ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bb0:	push   rbx
  404bb1:	sub    rsp,0x20
  404bb5:	mov    eax,0x1
  404bba:	test   rcx,rcx
  404bbd:	mov    rbx,rcx
  404bc0:	cmove  rbx,rax
  404bc4:	mov    rcx,rbx
  404bc7:	call   0x4064c0
  404bcc:	test   rax,rax
  404bcf:	je     0x404bd7
  404bd1:	add    rsp,0x20
  404bd5:	pop    rbx
  404bd6:	ret    
  404bd7:	mov    rcx,rbx
  404bda:	call   0x404b50
  404bdf:	nop
  404be0:	push   rsi
  404be1:	push   rbx
  404be2:	sub    rsp,0x28
  404be6:	test   rcx,rcx
  404be9:	mov    rbx,rcx
  404bec:	mov    rsi,rdx
  404bef:	je     0x404c10
  404bf1:	test   rdx,rdx
  404bf4:	je     0x404c10
  404bf6:	mov    rdx,rsi
  404bf9:	mov    rcx,rbx
  404bfc:	call   0x406540
  404c01:	test   rax,rax
  404c04:	je     0x404c1c
  404c06:	add    rsp,0x28
  404c0a:	pop    rbx
  404c0b:	pop    rsi
  404c0c:	ret    
  404c0d:	nop    DWORD PTR [rax]
  404c10:	mov    esi,0x1
  404c15:	mov    ebx,0x1
  404c1a:	jmp    0x404bf6
  404c1c:	mov    rcx,rsi
  404c1f:	imul   rcx,rbx
  404c23:	call   0x404b50
  404c28:	nop
  404c29:	nop    DWORD PTR [rax+0x0]
  404c30:	push   rbx
  404c31:	sub    rsp,0x20
  404c35:	mov    eax,0x1
  404c3a:	test   rdx,rdx
  404c3d:	mov    rbx,rdx
  404c40:	cmove  rbx,rax
  404c44:	test   rcx,rcx
  404c47:	je     0x404c60
  404c49:	mov    rdx,rbx
  404c4c:	call   0x406488
  404c51:	test   rax,rax
  404c54:	je     0x404c6a
  404c56:	add    rsp,0x20
  404c5a:	pop    rbx
  404c5b:	ret    
  404c5c:	nop    DWORD PTR [rax+0x0]
  404c60:	mov    rcx,rbx
  404c63:	call   0x4064c0
  404c68:	jmp    0x404c51
  404c6a:	mov    rcx,rbx
  404c6d:	call   0x404b50
  404c72:	nop
  404c73:	nop
  404c74:	nop
  404c75:	nop
  404c76:	nop
  404c77:	nop
  404c78:	nop
  404c79:	nop
  404c7a:	nop
  404c7b:	nop
  404c7c:	nop
  404c7d:	nop
  404c7e:	nop
  404c7f:	nop
  404c80:	push   rsi
  404c81:	push   rbx
  404c82:	sub    rsp,0x28
  404c86:	mov    rsi,rcx
  404c89:	call   0x406450
  404c8e:	lea    rbx,[rax+0x1]
  404c92:	mov    rcx,rbx
  404c95:	call   0x404bb0
  404c9a:	mov    r8,rbx
  404c9d:	mov    rdx,rsi
  404ca0:	mov    rcx,rax
  404ca3:	add    rsp,0x28
  404ca7:	pop    rbx
  404ca8:	pop    rsi
  404ca9:	jmp    0x4064b0
  404cae:	nop
  404caf:	nop
  404cb0:	push   rbx
  404cb1:	sub    rsp,0x30
  404cb5:	mov    rbx,rcx
  404cb8:	mov    rcx,QWORD PTR [rip+0x8ea9]        # 0x40db68
  404cbf:	call   0x405260
  404cc4:	cmp    rax,0xffffffffffffffff
  404cc8:	mov    QWORD PTR [rsp+0x20],rax
  404ccd:	je     0x404d45
  404ccf:	mov    ecx,0x8
  404cd4:	call   0x406578
  404cd9:	mov    rcx,QWORD PTR [rip+0x8e88]        # 0x40db68
  404ce0:	call   0x405260
  404ce5:	mov    rcx,QWORD PTR [rip+0x8e84]        # 0x40db70
  404cec:	mov    QWORD PTR [rsp+0x20],rax
  404cf1:	call   0x405260
  404cf6:	lea    rdx,[rsp+0x20]
  404cfb:	lea    r8,[rsp+0x28]
  404d00:	mov    rcx,rbx
  404d03:	mov    QWORD PTR [rsp+0x28],rax
  404d08:	call   0x4065d0
  404d0d:	mov    rcx,QWORD PTR [rsp+0x20]
  404d12:	mov    rbx,rax
  404d15:	call   0x405270
  404d1a:	mov    rcx,QWORD PTR [rsp+0x28]
  404d1f:	mov    QWORD PTR [rip+0x8e42],rax        # 0x40db68
  404d26:	call   0x405270
  404d2b:	mov    ecx,0x8
  404d30:	mov    QWORD PTR [rip+0x8e39],rax        # 0x40db70
  404d37:	call   0x406558
  404d3c:	mov    rax,rbx
  404d3f:	add    rsp,0x30
  404d43:	pop    rbx
  404d44:	ret    
  404d45:	mov    rax,QWORD PTR [rip+0x4db4]        # 0x409b00
  404d4c:	mov    rcx,rbx
  404d4f:	call   QWORD PTR [rax]
  404d51:	add    rsp,0x30
  404d55:	pop    rbx
  404d56:	ret    
  404d57:	nop    WORD PTR [rax+rax*1+0x0]
  404d60:	sub    rsp,0x28
  404d64:	call   0x404cb0
  404d69:	test   rax,rax
  404d6c:	sete   al
  404d6f:	movzx  eax,al
  404d72:	neg    eax
  404d74:	add    rsp,0x28
  404d78:	ret    
  404d79:	nop
  404d7a:	nop
  404d7b:	nop
  404d7c:	nop
  404d7d:	nop
  404d7e:	nop
  404d7f:	nop
  404d80:	sub    rsp,0x28
  404d84:	mov    rax,QWORD PTR [rip+0x2455]        # 0x4071e0
  404d8b:	mov    rax,QWORD PTR [rax]
  404d8e:	test   rax,rax
  404d91:	je     0x404db0
  404d93:	call   rax
  404d95:	mov    rax,QWORD PTR [rip+0x2444]        # 0x4071e0
  404d9c:	lea    rdx,[rax+0x8]
  404da0:	mov    rax,QWORD PTR [rax+0x8]
  404da4:	mov    QWORD PTR [rip+0x2435],rdx        # 0x4071e0
  404dab:	test   rax,rax
  404dae:	jne    0x404d93
  404db0:	add    rsp,0x28
  404db4:	ret    
  404db5:	nop
  404db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dc0:	push   rsi
  404dc1:	push   rbx
  404dc2:	sub    rsp,0x28
  404dc6:	mov    rsi,QWORD PTR [rip+0x4cb3]        # 0x409a80
  404dcd:	mov    rax,QWORD PTR [rsi]
  404dd0:	cmp    eax,0xffffffff
  404dd3:	mov    ebx,eax
  404dd5:	je     0x404e00
  404dd7:	test   ebx,ebx
  404dd9:	je     0x404dea
  404ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  404de0:	mov    eax,ebx
  404de2:	call   QWORD PTR [rsi+rax*8]
  404de5:	sub    ebx,0x1
  404de8:	jne    0x404de0
  404dea:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x404d80
  404df1:	add    rsp,0x28
  404df5:	pop    rbx
  404df6:	pop    rsi
  404df7:	jmp    0x404d60
  404dfc:	nop    DWORD PTR [rax+0x0]
  404e00:	xor    ebx,ebx
  404e02:	jmp    0x404e06
  404e04:	mov    ebx,eax
  404e06:	lea    edx,[rbx+0x1]
  404e09:	cmp    QWORD PTR [rsi+rdx*8],0x0
  404e0e:	mov    rax,rdx
  404e11:	jne    0x404e04
  404e13:	jmp    0x404dd7
  404e15:	nop
  404e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e20:	mov    eax,DWORD PTR [rip+0x834a]        # 0x40d170
  404e26:	test   eax,eax
  404e28:	je     0x404e30
  404e2a:	repz ret 
  404e2c:	nop    DWORD PTR [rax+0x0]
  404e30:	mov    DWORD PTR [rip+0x8336],0x1        # 0x40d170
  404e3a:	jmp    0x404dc0
  404e3c:	nop
  404e3d:	nop
  404e3e:	nop
  404e3f:	nop
  404e40:	mov    rax,QWORD PTR [rip+0x95b1]        # 0x40e3f8
  404e47:	rex.W jmp rax
  404e4a:	nop
  404e4b:	nop
  404e4c:	nop
  404e4d:	nop
  404e4e:	nop
  404e4f:	nop
  404e50:	xor    eax,eax
  404e52:	ret    
  404e53:	nop
  404e54:	nop
  404e55:	nop
  404e56:	nop
  404e57:	nop
  404e58:	nop
  404e59:	nop
  404e5a:	nop
  404e5b:	nop
  404e5c:	nop
  404e5d:	nop
  404e5e:	nop
  404e5f:	nop
  404e60:	push   r12
  404e62:	push   rbp
  404e63:	push   rdi
  404e64:	push   rsi
  404e65:	push   rbx
  404e66:	sub    rsp,0x40
  404e6a:	mov    rbx,QWORD PTR [rip+0x23cf]        # 0x407240
  404e71:	movabs rax,0x2b992ddfa232
  404e7b:	mov    QWORD PTR [rsp+0x20],0x0
  404e84:	cmp    rbx,rax
  404e87:	je     0x404ea0
  404e89:	not    rbx
  404e8c:	mov    QWORD PTR [rip+0x23bd],rbx        # 0x407250
  404e93:	add    rsp,0x40
  404e97:	pop    rbx
  404e98:	pop    rsi
  404e99:	pop    rdi
  404e9a:	pop    rbp
  404e9b:	pop    r12
  404e9d:	ret    
  404e9e:	xchg   ax,ax
  404ea0:	lea    rcx,[rsp+0x20]
  404ea5:	call   QWORD PTR [rip+0x949d]        # 0x40e348
  404eab:	mov    r12,QWORD PTR [rsp+0x20]
  404eb0:	call   QWORD PTR [rip+0x946a]        # 0x40e320
  404eb6:	mov    ebp,eax
  404eb8:	call   QWORD PTR [rip+0x946a]        # 0x40e328
  404ebe:	mov    edi,eax
  404ec0:	call   QWORD PTR [rip+0x948a]        # 0x40e350
  404ec6:	lea    rcx,[rsp+0x30]
  404ecb:	mov    esi,eax
  404ecd:	call   QWORD PTR [rip+0x9495]        # 0x40e368
  404ed3:	xor    r12,QWORD PTR [rsp+0x30]
  404ed8:	mov    edx,edi
  404eda:	movabs rax,0xffffffffffff
  404ee4:	xor    rbp,r12
  404ee7:	mov    rdi,rbp
  404eea:	xor    rdi,rdx
  404eed:	mov    edx,esi
  404eef:	xor    rdi,rdx
  404ef2:	mov    rsi,rdi
  404ef5:	and    rsi,rax
  404ef8:	cmp    rsi,rbx
  404efb:	je     0x404f20
  404efd:	mov    rax,rsi
  404f00:	not    rax
  404f03:	mov    QWORD PTR [rip+0x2336],rsi        # 0x407240
  404f0a:	mov    QWORD PTR [rip+0x233f],rax        # 0x407250
  404f11:	add    rsp,0x40
  404f15:	pop    rbx
  404f16:	pop    rsi
  404f17:	pop    rdi
  404f18:	pop    rbp
  404f19:	pop    r12
  404f1b:	ret    
  404f1c:	nop    DWORD PTR [rax+0x0]
  404f20:	movabs rax,0xffffd466d2205dcc
  404f2a:	movabs rsi,0x2b992ddfa233
  404f34:	jmp    0x404f03
  404f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f40:	push   rbp
  404f41:	push   rsi
  404f42:	push   rbx
  404f43:	mov    rbp,rsp
  404f46:	sub    rsp,0x70
  404f4a:	mov    rsi,rcx
  404f4d:	lea    rcx,[rip+0x826c]        # 0x40d1c0
  404f54:	call   QWORD PTR [rip+0x941e]        # 0x40e378
  404f5a:	mov    rbx,QWORD PTR [rip+0x8357]        # 0x40d2b8
  404f61:	xor    r8d,r8d
  404f64:	lea    rdx,[rbp-0x28]
  404f68:	mov    rcx,rbx
  404f6b:	call   QWORD PTR [rip+0x940f]        # 0x40e380
  404f71:	test   rax,rax
  404f74:	mov    r9,rax
  404f77:	je     0x405020
  404f7d:	lea    rax,[rbp-0x20]
  404f81:	mov    QWORD PTR [rsp+0x38],0x0
  404f8a:	mov    r8,rbx
  404f8d:	mov    rdx,QWORD PTR [rbp-0x28]
  404f91:	xor    ecx,ecx
  404f93:	mov    QWORD PTR [rsp+0x30],rax
  404f98:	lea    rax,[rbp-0x18]
  404f9c:	mov    QWORD PTR [rsp+0x28],rax
  404fa1:	lea    rax,[rip+0x8218]        # 0x40d1c0
  404fa8:	mov    QWORD PTR [rsp+0x20],rax
  404fad:	call   QWORD PTR [rip+0x93d5]        # 0x40e388
  404fb3:	mov    rax,QWORD PTR [rip+0x82fe]        # 0x40d2b8
  404fba:	xor    ecx,ecx
  404fbc:	mov    QWORD PTR [rip+0x827d],rsi        # 0x40d240
  404fc3:	mov    DWORD PTR [rip+0x86f3],0xc0000409        # 0x40d6c0
  404fcd:	mov    DWORD PTR [rip+0x86ed],0x1        # 0x40d6c4
  404fd7:	mov    QWORD PTR [rip+0x86f2],rax        # 0x40d6d0
  404fde:	mov    rax,QWORD PTR [rip+0x225b]        # 0x407240
  404fe5:	mov    QWORD PTR [rbp-0x10],rax
  404fe9:	mov    rax,QWORD PTR [rip+0x2260]        # 0x407250
  404ff0:	mov    QWORD PTR [rbp-0x8],rax
  404ff4:	call   QWORD PTR [rip+0x9396]        # 0x40e390
  404ffa:	lea    rcx,[rip+0x46ff]        # 0x409700
  405001:	call   QWORD PTR [rip+0x93a9]        # 0x40e3b0
  405007:	call   QWORD PTR [rip+0x930b]        # 0x40e318
  40500d:	mov    edx,0xc0000409
  405012:	mov    rcx,rax
  405015:	call   QWORD PTR [rip+0x9385]        # 0x40e3a0
  40501b:	call   0x406548
  405020:	mov    rax,QWORD PTR [rbp+0x18]
  405024:	mov    QWORD PTR [rip+0x828d],rax        # 0x40d2b8
  40502b:	lea    rax,[rbp+0x8]
  40502f:	mov    QWORD PTR [rip+0x8222],rax        # 0x40d258
  405036:	jmp    0x404fb3
  40503b:	nop
  40503c:	nop
  40503d:	nop
  40503e:	nop
  40503f:	nop
  405040:	sub    rsp,0x28
  405044:	test   edx,edx
  405046:	je     0x405060
  405048:	cmp    edx,0x3
  40504b:	je     0x405060
  40504d:	mov    eax,0x1
  405052:	add    rsp,0x28
  405056:	ret    
  405057:	nop    WORD PTR [rax+rax*1+0x0]
  405060:	call   0x405d50
  405065:	mov    eax,0x1
  40506a:	add    rsp,0x28
  40506e:	ret    
  40506f:	nop
  405070:	push   rsi
  405071:	push   rbx
  405072:	sub    rsp,0x28
  405076:	mov    rax,QWORD PTR [rip+0x49e3]        # 0x409a60
  40507d:	cmp    DWORD PTR [rax],0x2
  405080:	je     0x405088
  405082:	mov    DWORD PTR [rax],0x2
  405088:	cmp    edx,0x2
  40508b:	je     0x4050a0
  40508d:	cmp    edx,0x1
  405090:	je     0x4050d2
  405092:	mov    eax,0x1
  405097:	add    rsp,0x28
  40509b:	pop    rbx
  40509c:	pop    rsi
  40509d:	ret    
  40509e:	xchg   ax,ax
  4050a0:	lea    rbx,[rip+0x9fb9]        # 0x40f060
  4050a7:	lea    rsi,[rip+0x9fb2]        # 0x40f060
  4050ae:	cmp    rbx,rsi
  4050b1:	je     0x405092
  4050b3:	mov    rax,QWORD PTR [rbx]
  4050b6:	test   rax,rax
  4050b9:	je     0x4050bd
  4050bb:	call   rax
  4050bd:	add    rbx,0x8
  4050c1:	cmp    rbx,rsi
  4050c4:	jne    0x4050b3
  4050c6:	mov    eax,0x1
  4050cb:	add    rsp,0x28
  4050cf:	pop    rbx
  4050d0:	pop    rsi
  4050d1:	ret    
  4050d2:	call   0x405d50
  4050d7:	jmp    0x405092
  4050d9:	nop    DWORD PTR [rax+0x0]
  4050e0:	xor    eax,eax
  4050e2:	ret    
  4050e3:	nop
  4050e4:	nop
  4050e5:	nop
  4050e6:	nop
  4050e7:	nop
  4050e8:	nop
  4050e9:	nop
  4050ea:	nop
  4050eb:	nop
  4050ec:	nop
  4050ed:	nop
  4050ee:	nop
  4050ef:	nop
  4050f0:	sub    rsp,0x58
  4050f4:	mov    rax,QWORD PTR [rip+0x86a5]        # 0x40d7a0
  4050fb:	test   rax,rax
  4050fe:	je     0x40512c
  405100:	movsd  xmm0,QWORD PTR [rsp+0x80]
  405109:	mov    DWORD PTR [rsp+0x20],ecx
  40510d:	lea    rcx,[rsp+0x20]
  405112:	mov    QWORD PTR [rsp+0x28],rdx
  405117:	movsd  QWORD PTR [rsp+0x30],xmm2
  40511d:	movsd  QWORD PTR [rsp+0x38],xmm3
  405123:	movsd  QWORD PTR [rsp+0x40],xmm0
  405129:	call   rax
  40512b:	nop
  40512c:	add    rsp,0x58
  405130:	ret    
  405131:	nop    DWORD PTR [rax+rax*1+0x0]
  405136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405140:	mov    QWORD PTR [rip+0x8659],rcx        # 0x40d7a0
  405147:	jmp    0x4065a8
  40514c:	nop    DWORD PTR [rax+0x0]
  405150:	push   rsi
  405151:	push   rbx
  405152:	sub    rsp,0x78
  405156:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40515b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  405160:	movaps XMMWORD PTR [rsp+0x60],xmm8
  405166:	cmp    DWORD PTR [rcx],0x6
  405169:	ja     0x405240
  40516f:	mov    edx,DWORD PTR [rcx]
  405171:	lea    rax,[rip+0x46cc]        # 0x409844
  405178:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40517c:	add    rax,rdx
  40517f:	jmp    rax
  405181:	lea    rbx,[rip+0x4598]        # 0x409720
  405188:	nop    DWORD PTR [rax+rax*1+0x0]
  405190:	movsd  xmm8,QWORD PTR [rcx+0x20]
  405196:	mov    rsi,QWORD PTR [rcx+0x8]
  40519a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40519f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4051a4:	call   0x4065c0
  4051a9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4051b0:	lea    rcx,[rax+0x60]
  4051b4:	lea    rdx,[rip+0x465d]        # 0x409818
  4051bb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4051c1:	mov    r9,rsi
  4051c4:	mov    r8,rbx
  4051c7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4051cd:	call   0x406510
  4051d2:	nop
  4051d3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4051d8:	xor    eax,eax
  4051da:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4051df:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4051e5:	add    rsp,0x78
  4051e9:	pop    rbx
  4051ea:	pop    rsi
  4051eb:	ret    
  4051ec:	nop    DWORD PTR [rax+0x0]
  4051f0:	lea    rbx,[rip+0x4548]        # 0x40973f
  4051f7:	jmp    0x405190
  4051f9:	nop    DWORD PTR [rax+0x0]
  405200:	lea    rbx,[rip+0x4559]        # 0x409760
  405207:	jmp    0x405190
  405209:	nop    DWORD PTR [rax+0x0]
  405210:	lea    rbx,[rip+0x45b9]        # 0x4097d0
  405217:	jmp    0x405190
  40521c:	nop    DWORD PTR [rax+0x0]
  405220:	lea    rbx,[rip+0x4581]        # 0x4097a8
  405227:	jmp    0x405190
  40522c:	nop    DWORD PTR [rax+0x0]
  405230:	lea    rbx,[rip+0x4549]        # 0x409780
  405237:	jmp    0x405190
  40523c:	nop    DWORD PTR [rax+0x0]
  405240:	lea    rbx,[rip+0x45bf]        # 0x409806
  405247:	jmp    0x405190
  40524c:	nop
  40524d:	nop
  40524e:	nop
  40524f:	nop
  405250:	fninit 
  405252:	ret    
  405253:	nop
  405254:	nop
  405255:	nop
  405256:	nop
  405257:	nop
  405258:	nop
  405259:	nop
  40525a:	nop
  40525b:	nop
  40525c:	nop
  40525d:	nop
  40525e:	nop
  40525f:	nop
  405260:	mov    rax,rcx
  405263:	ret    
  405264:	xchg   ax,ax
  405266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405270:	mov    rax,rcx
  405273:	ret    
  405274:	nop
  405275:	nop
  405276:	nop
  405277:	nop
  405278:	nop
  405279:	nop
  40527a:	nop
  40527b:	nop
  40527c:	nop
  40527d:	nop
  40527e:	nop
  40527f:	nop
  405280:	push   rsi
  405281:	push   rbx
  405282:	sub    rsp,0x38
  405286:	lea    rax,[rsp+0x58]
  40528b:	mov    rbx,rcx
  40528e:	mov    QWORD PTR [rsp+0x58],rdx
  405293:	mov    QWORD PTR [rsp+0x60],r8
  405298:	mov    QWORD PTR [rsp+0x68],r9
  40529d:	mov    QWORD PTR [rsp+0x28],rax
  4052a2:	call   0x4065c0
  4052a7:	lea    rcx,[rip+0x45b2]        # 0x409860
  4052ae:	lea    r9,[rax+0x60]
  4052b2:	mov    r8d,0x1b
  4052b8:	mov    edx,0x1
  4052bd:	call   0x4064d8
  4052c2:	mov    rsi,QWORD PTR [rsp+0x28]
  4052c7:	call   0x4065c0
  4052cc:	lea    rcx,[rax+0x60]
  4052d0:	mov    rdx,rbx
  4052d3:	mov    r8,rsi
  4052d6:	call   0x406438
  4052db:	call   0x406548
  4052e0:	nop
  4052e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4052e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052f0:	push   r13
  4052f2:	push   r12
  4052f4:	push   rbp
  4052f5:	push   rdi
  4052f6:	push   rsi
  4052f7:	push   rbx
  4052f8:	sub    rsp,0x58
  4052fc:	movsxd rbp,DWORD PTR [rip+0x84c1]        # 0x40d7c4
  405303:	mov    rbx,rcx
  405306:	mov    rsi,rdx
  405309:	mov    rdi,r8
  40530c:	test   ebp,ebp
  40530e:	jle    0x40540a
  405314:	mov    rax,QWORD PTR [rip+0x84ad]        # 0x40d7c8
  40531b:	xor    r9d,r9d
  40531e:	add    rax,0x8
  405322:	mov    r10,QWORD PTR [rax]
  405325:	cmp    rbx,r10
  405328:	jb     0x40533e
  40532a:	mov    rdx,QWORD PTR [rax+0x8]
  40532e:	mov    r11d,DWORD PTR [rdx+0x8]
  405332:	add    r10,r11
  405335:	cmp    rbx,r10
  405338:	jb     0x4053f0
  40533e:	add    r9d,0x1
  405342:	add    rax,0x18
  405346:	cmp    r9d,ebp
  405349:	jne    0x405322
  40534b:	mov    rcx,rbx
  40534e:	call   0x405f60
  405353:	test   rax,rax
  405356:	mov    r12,rax
  405359:	je     0x405442
  40535f:	lea    rbp,[rbp+rbp*2+0x0]
  405364:	shl    rbp,0x3
  405368:	mov    r13,rbp
  40536b:	add    r13,QWORD PTR [rip+0x8456]        # 0x40d7c8
  405372:	mov    QWORD PTR [r13+0x10],rax
  405376:	mov    DWORD PTR [r13+0x0],0x0
  40537e:	call   0x406080
  405383:	mov    edx,DWORD PTR [r12+0xc]
  405388:	mov    r8d,0x30
  40538e:	add    rax,rdx
  405391:	lea    rdx,[rsp+0x20]
  405396:	mov    QWORD PTR [r13+0x8],rax
  40539a:	mov    rax,QWORD PTR [rip+0x8427]        # 0x40d7c8
  4053a1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4053a6:	call   QWORD PTR [rip+0x9014]        # 0x40e3c0
  4053ac:	test   rax,rax
  4053af:	je     0x405425
  4053b1:	mov    eax,DWORD PTR [rsp+0x44]
  4053b5:	lea    edx,[rax-0x4]
  4053b8:	and    edx,0xfffffffb
  4053bb:	je     0x4053e9
  4053bd:	sub    eax,0x40
  4053c0:	and    eax,0xffffffbf
  4053c3:	je     0x4053e9
  4053c5:	mov    r9,rbp
  4053c8:	add    r9,QWORD PTR [rip+0x83f9]        # 0x40d7c8
  4053cf:	mov    r8d,0x40
  4053d5:	mov    rdx,QWORD PTR [rsp+0x38]
  4053da:	mov    rcx,QWORD PTR [rsp+0x20]
  4053df:	call   QWORD PTR [rip+0x8fd3]        # 0x40e3b8
  4053e5:	test   eax,eax
  4053e7:	je     0x405411
  4053e9:	add    DWORD PTR [rip+0x83d4],0x1        # 0x40d7c4
  4053f0:	mov    r8,rdi
  4053f3:	mov    rdx,rsi
  4053f6:	mov    rcx,rbx
  4053f9:	add    rsp,0x58
  4053fd:	pop    rbx
  4053fe:	pop    rsi
  4053ff:	pop    rdi
  405400:	pop    rbp
  405401:	pop    r12
  405403:	pop    r13
  405405:	jmp    0x4064b0
  40540a:	xor    ebp,ebp
  40540c:	jmp    0x40534b
  405411:	call   QWORD PTR [rip+0x8f19]        # 0x40e330
  405417:	lea    rcx,[rip+0x44ba]        # 0x4098d8
  40541e:	mov    edx,eax
  405420:	call   0x405280
  405425:	mov    rax,QWORD PTR [rip+0x839c]        # 0x40d7c8
  40542c:	mov    edx,DWORD PTR [r12+0x8]
  405431:	lea    rcx,[rip+0x4468]        # 0x4098a0
  405438:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40543d:	call   0x405280
  405442:	lea    rcx,[rip+0x4437]        # 0x409880
  405449:	mov    rdx,rbx
  40544c:	call   0x405280
  405451:	nop
  405452:	nop    DWORD PTR [rax+0x0]
  405456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405460:	push   rbp
  405461:	push   r14
  405463:	push   r13
  405465:	push   r12
  405467:	push   rdi
  405468:	push   rsi
  405469:	push   rbx
  40546a:	mov    rbp,rsp
  40546d:	sub    rsp,0x60
  405471:	mov    ebx,DWORD PTR [rip+0x8349]        # 0x40d7c0
  405477:	test   ebx,ebx
  405479:	je     0x405490
  40547b:	mov    rsp,rbp
  40547e:	pop    rbx
  40547f:	pop    rsi
  405480:	pop    rdi
  405481:	pop    r12
  405483:	pop    r13
  405485:	pop    r14
  405487:	pop    rbp
  405488:	ret    
  405489:	nop    DWORD PTR [rax+0x0]
  405490:	mov    DWORD PTR [rip+0x8326],0x1        # 0x40d7c0
  40549a:	call   0x405fb0
  40549f:	cdqe   
  4054a1:	lea    rax,[rax+rax*2]
  4054a5:	lea    rax,[rax*8+0x1e]
  4054ad:	and    rax,0xfffffffffffffff0
  4054b1:	call   0x4061d0
  4054b6:	mov    rsi,QWORD PTR [rip+0x45d3]        # 0x409a90
  4054bd:	mov    rbx,QWORD PTR [rip+0x45dc]        # 0x409aa0
  4054c4:	sub    rsp,rax
  4054c7:	mov    DWORD PTR [rip+0x82f3],0x0        # 0x40d7c4
  4054d1:	lea    rax,[rsp+0x20]
  4054d6:	mov    QWORD PTR [rip+0x82eb],rax        # 0x40d7c8
  4054dd:	mov    rax,rsi
  4054e0:	sub    rax,rbx
  4054e3:	cmp    rax,0x7
  4054e7:	jle    0x40547b
  4054e9:	cmp    rax,0xb
  4054ed:	jle    0x405515
  4054ef:	mov    r11d,DWORD PTR [rbx]
  4054f2:	test   r11d,r11d
  4054f5:	jne    0x405640
  4054fb:	mov    r10d,DWORD PTR [rbx+0x4]
  4054ff:	test   r10d,r10d
  405502:	jne    0x405640
  405508:	mov    r9d,DWORD PTR [rbx+0x8]
  40550c:	test   r9d,r9d
  40550f:	jne    0x40552c
  405511:	add    rbx,0xc
  405515:	mov    r8d,DWORD PTR [rbx]
  405518:	test   r8d,r8d
  40551b:	jne    0x405640
  405521:	mov    ecx,DWORD PTR [rbx+0x4]
  405524:	test   ecx,ecx
  405526:	jne    0x405640
  40552c:	mov    edx,DWORD PTR [rbx+0x8]
  40552f:	cmp    edx,0x1
  405532:	jne    0x40574c
  405538:	add    rbx,0xc
  40553c:	cmp    rbx,rsi
  40553f:	jae    0x40547b
  405545:	mov    r12,QWORD PTR [rip+0x4574]        # 0x409ac0
  40554c:	lea    r13,[rbp-0x30]
  405550:	movabs r14,0xffffffff00000000
  40555a:	mov    ecx,DWORD PTR [rbx+0x4]
  40555d:	mov    eax,DWORD PTR [rbx]
  40555f:	movzx  edx,BYTE PTR [rbx+0x8]
  405563:	add    rax,r12
  405566:	add    rcx,r12
  405569:	cmp    edx,0x10
  40556c:	mov    r8,QWORD PTR [rax]
  40556f:	je     0x4056b6
  405575:	jbe    0x40567d
  40557b:	cmp    edx,0x20
  40557e:	je     0x4056ff
  405584:	cmp    edx,0x40
  405587:	jne    0x4056eb
  40558d:	sub    r8,rax
  405590:	mov    rdx,r13
  405593:	mov    rdi,r13
  405596:	mov    rax,r8
  405599:	add    rax,QWORD PTR [rcx]
  40559c:	mov    r8d,0x8
  4055a2:	mov    QWORD PTR [rbp-0x30],rax
  4055a6:	call   0x4052f0
  4055ab:	add    rbx,0xc
  4055af:	cmp    rbx,rsi
  4055b2:	jb     0x40555a
  4055b4:	mov    eax,DWORD PTR [rip+0x820a]        # 0x40d7c4
  4055ba:	xor    ebx,ebx
  4055bc:	xor    esi,esi
  4055be:	test   eax,eax
  4055c0:	jle    0x40547b
  4055c6:	mov    r14,QWORD PTR [rip+0x8df3]        # 0x40e3c0
  4055cd:	lea    r13,[rbp-0x34]
  4055d1:	mov    r12,QWORD PTR [rip+0x8de0]        # 0x40e3b8
  4055d8:	jmp    0x4055f3
  4055da:	nop    WORD PTR [rax+rax*1+0x0]
  4055e0:	add    esi,0x1
  4055e3:	add    rbx,0x18
  4055e7:	cmp    esi,DWORD PTR [rip+0x81d7]        # 0x40d7c4
  4055ed:	jge    0x40547b
  4055f3:	mov    rax,rbx
  4055f6:	add    rax,QWORD PTR [rip+0x81cb]        # 0x40d7c8
  4055fd:	mov    edx,DWORD PTR [rax]
  4055ff:	test   edx,edx
  405601:	je     0x4055e0
  405603:	mov    rcx,QWORD PTR [rax+0x8]
  405607:	mov    r8d,0x30
  40560d:	mov    rdx,rdi
  405610:	call   r14
  405613:	test   rax,rax
  405616:	je     0x40572e
  40561c:	mov    rax,QWORD PTR [rip+0x81a5]        # 0x40d7c8
  405623:	mov    r9,r13
  405626:	mov    rdx,QWORD PTR [rbp-0x18]
  40562a:	mov    rcx,QWORD PTR [rbp-0x30]
  40562e:	mov    r8d,DWORD PTR [rax+rbx*1]
  405632:	call   r12
  405635:	jmp    0x4055e0
  405637:	nop    WORD PTR [rax+rax*1+0x0]
  405640:	cmp    rbx,rsi
  405643:	jae    0x40547b
  405649:	mov    r12,QWORD PTR [rip+0x4470]        # 0x409ac0
  405650:	lea    rdi,[rbp-0x30]
  405654:	mov    ecx,DWORD PTR [rbx+0x4]
  405657:	mov    eax,DWORD PTR [rbx]
  405659:	mov    r8d,0x4
  40565f:	mov    rdx,rdi
  405662:	add    rbx,0x8
  405666:	add    rcx,r12
  405669:	add    eax,DWORD PTR [rcx]
  40566b:	mov    DWORD PTR [rbp-0x30],eax
  40566e:	call   0x4052f0
  405673:	cmp    rbx,rsi
  405676:	jb     0x405654
  405678:	jmp    0x4055b4
  40567d:	cmp    edx,0x8
  405680:	jne    0x4056eb
  405682:	movzx  edx,BYTE PTR [rcx]
  405685:	mov    rdi,r13
  405688:	mov    r10,rdx
  40568b:	or     r10,0xffffffffffffff00
  405692:	test   dl,dl
  405694:	cmovs  rdx,r10
  405698:	sub    rdx,rax
  40569b:	lea    rax,[r8+rdx*1]
  40569f:	mov    r8d,0x1
  4056a5:	mov    rdx,r13
  4056a8:	mov    QWORD PTR [rbp-0x30],rax
  4056ac:	call   0x4052f0
  4056b1:	jmp    0x4055ab
  4056b6:	movzx  edx,WORD PTR [rcx]
  4056b9:	mov    rdi,r13
  4056bc:	mov    r10,rdx
  4056bf:	or     r10,0xffffffffffff0000
  4056c6:	test   dx,dx
  4056c9:	cmovs  rdx,r10
  4056cd:	sub    rdx,rax
  4056d0:	lea    rax,[r8+rdx*1]
  4056d4:	mov    r8d,0x2
  4056da:	mov    rdx,r13
  4056dd:	mov    QWORD PTR [rbp-0x30],rax
  4056e1:	call   0x4052f0
  4056e6:	jmp    0x4055ab
  4056eb:	lea    rcx,[rip+0x4246]        # 0x409938
  4056f2:	mov    QWORD PTR [rbp-0x30],0x0
  4056fa:	call   0x405280
  4056ff:	mov    edx,DWORD PTR [rcx]
  405701:	mov    rdi,r13
  405704:	mov    r10,rdx
  405707:	or     r10,r14
  40570a:	test   edx,edx
  40570c:	cmovs  rdx,r10
  405710:	sub    rdx,rax
  405713:	lea    rax,[r8+rdx*1]
  405717:	mov    r8d,0x4
  40571d:	mov    rdx,r13
  405720:	mov    QWORD PTR [rbp-0x30],rax
  405724:	call   0x4052f0
  405729:	jmp    0x4055ab
  40572e:	add    rbx,QWORD PTR [rip+0x8093]        # 0x40d7c8
  405735:	lea    rcx,[rip+0x4164]        # 0x4098a0
  40573c:	mov    rax,QWORD PTR [rbx+0x10]
  405740:	mov    r8,QWORD PTR [rbx+0x8]
  405744:	mov    edx,DWORD PTR [rax+0x8]
  405747:	call   0x405280
  40574c:	lea    rcx,[rip+0x41ad]        # 0x409900
  405753:	call   0x405280
  405758:	nop
  405759:	nop
  40575a:	nop
  40575b:	nop
  40575c:	nop
  40575d:	nop
  40575e:	nop
  40575f:	nop
  405760:	sub    rsp,0x28
  405764:	mov    eax,DWORD PTR [rcx]
  405766:	cmp    eax,0xc0000091
  40576b:	ja     0x4057d0
  40576d:	cmp    eax,0xc000008d
  405772:	jae    0x4057ef
  405774:	cmp    eax,0xc0000008
  405779:	je     0x405890
  40577f:	ja     0x405860
  405785:	cmp    eax,0x80000002
  40578a:	je     0x405890
  405790:	cmp    eax,0xc0000005
  405795:	jne    0x40586e
  40579b:	xor    edx,edx
  40579d:	mov    ecx,0xb
  4057a2:	call   0x406470
  4057a7:	cmp    rax,0x1
  4057ab:	je     0x4058f0
  4057b1:	test   rax,rax
  4057b4:	je     0x4058d0
  4057ba:	mov    ecx,0xb
  4057bf:	call   rax
  4057c1:	xor    eax,eax
  4057c3:	add    rsp,0x28
  4057c7:	ret    
  4057c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4057d0:	cmp    eax,0xc0000094
  4057d5:	je     0x4058a0
  4057db:	ja     0x405820
  4057dd:	cmp    eax,0xc0000092
  4057e2:	je     0x405890
  4057e8:	cmp    eax,0xc0000093
  4057ed:	jne    0x40586e
  4057ef:	xor    edx,edx
  4057f1:	mov    ecx,0x8
  4057f6:	call   0x406470
  4057fb:	cmp    rax,0x1
  4057ff:	mov    rdx,rax
  405802:	je     0x405878
  405804:	test   rdx,rdx
  405807:	mov    eax,0x1
  40580c:	je     0x4057c3
  40580e:	mov    ecx,0x8
  405813:	call   rdx
  405815:	xor    eax,eax
  405817:	add    rsp,0x28
  40581b:	ret    
  40581c:	nop    DWORD PTR [rax+0x0]
  405820:	cmp    eax,0xc0000095
  405825:	je     0x405890
  405827:	cmp    eax,0xc0000096
  40582c:	jne    0x40586e
  40582e:	xor    edx,edx
  405830:	mov    ecx,0x4
  405835:	call   0x406470
  40583a:	cmp    rax,0x1
  40583e:	je     0x4058da
  405844:	test   rax,rax
  405847:	je     0x4058d0
  40584d:	mov    ecx,0x4
  405852:	call   rax
  405854:	xor    eax,eax
  405856:	jmp    0x4057c3
  40585b:	nop    DWORD PTR [rax+rax*1+0x0]
  405860:	cmp    eax,0xc000001d
  405865:	je     0x40582e
  405867:	cmp    eax,0xc000008c
  40586c:	je     0x405890
  40586e:	mov    eax,0x1
  405873:	add    rsp,0x28
  405877:	ret    
  405878:	mov    edx,0x1
  40587d:	mov    ecx,0x8
  405882:	call   0x406470
  405887:	call   0x405250
  40588c:	nop    DWORD PTR [rax+0x0]
  405890:	xor    eax,eax
  405892:	add    rsp,0x28
  405896:	ret    
  405897:	nop    WORD PTR [rax+rax*1+0x0]
  4058a0:	xor    edx,edx
  4058a2:	mov    ecx,0x8
  4058a7:	call   0x406470
  4058ac:	cmp    rax,0x1
  4058b0:	mov    rdx,rax
  4058b3:	jne    0x405804
  4058b9:	mov    edx,0x1
  4058be:	mov    ecx,0x8
  4058c3:	call   0x406470
  4058c8:	xor    eax,eax
  4058ca:	jmp    0x4057c3
  4058cf:	nop
  4058d0:	mov    eax,0x4
  4058d5:	add    rsp,0x28
  4058d9:	ret    
  4058da:	mov    edx,0x1
  4058df:	mov    ecx,0x4
  4058e4:	call   0x406470
  4058e9:	xor    eax,eax
  4058eb:	jmp    0x4057c3
  4058f0:	mov    edx,0x1
  4058f5:	mov    ecx,0xb
  4058fa:	call   0x406470
  4058ff:	xor    eax,eax
  405901:	jmp    0x4057c3
  405906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405910:	push   r12
  405912:	push   rbp
  405913:	push   rdi
  405914:	push   rsi
  405915:	push   rbx
  405916:	sub    rsp,0x20
  40591a:	call   0x406080
  40591f:	mov    rbp,rax
  405922:	mov    eax,DWORD PTR [rip+0x7ee0]        # 0x40d808
  405928:	test   eax,eax
  40592a:	jne    0x405951
  40592c:	test   rbp,rbp
  40592f:	je     0x405951
  405931:	lea    rcx,[rip+0x4038]        # 0x409970
  405938:	mov    DWORD PTR [rip+0x7ec6],0x1        # 0x40d808
  405942:	call   0x405ec0
  405947:	test   rax,rax
  40594a:	je     0x405960
  40594c:	mov    eax,0x1
  405951:	add    rsp,0x20
  405955:	pop    rbx
  405956:	pop    rsi
  405957:	pop    rdi
  405958:	pop    rbp
  405959:	pop    r12
  40595b:	ret    
  40595c:	nop    DWORD PTR [rax+0x0]
  405960:	lea    rbx,[rip+0x7fd9]        # 0x40d940
  405967:	mov    ecx,0x30
  40596c:	lea    rdx,[rip+0x7ecd]        # 0x40d840
  405973:	lea    r12,[rip+0xfffffffffffffde6]        # 0x405760
  40597a:	xor    esi,esi
  40597c:	mov    rdi,rbx
  40597f:	rep stos QWORD PTR es:[rdi],rax
  405982:	mov    rdi,rdx
  405985:	sub    r12,rbp
  405988:	mov    cl,0x20
  40598a:	rep stos QWORD PTR es:[rdi],rax
  40598d:	mov    rdi,rdx
  405990:	jmp    0x4059c0
  405992:	mov    BYTE PTR [rdi],0x9
  405995:	mov    DWORD PTR [rdi+0x4],r12d
  405999:	add    rsi,0x1
  40599d:	mov    edx,DWORD PTR [rax+0xc]
  4059a0:	add    rbx,0xc
  4059a4:	mov    DWORD PTR [rbx-0xc],edx
  4059a7:	add    edx,DWORD PTR [rax+0x8]
  4059aa:	mov    rax,rdi
  4059ad:	sub    rax,rbp
  4059b0:	add    rdi,0x8
  4059b4:	mov    DWORD PTR [rbx-0x4],eax
  4059b7:	mov    DWORD PTR [rbx-0x8],edx
  4059ba:	cmp    rsi,0x20
  4059be:	je     0x4059f5
  4059c0:	mov    rcx,rsi
  4059c3:	call   0x405ff0
  4059c8:	test   rax,rax
  4059cb:	jne    0x405992
  4059cd:	test   rsi,rsi
  4059d0:	je     0x40594c
  4059d6:	mov    edx,esi
  4059d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e0:	mov    r8,rbp
  4059e3:	lea    rcx,[rip+0x7f56]        # 0x40d940
  4059ea:	call   QWORD PTR [rip+0x8980]        # 0x40e370
  4059f0:	jmp    0x40594c
  4059f5:	mov    edx,0x20
  4059fa:	jmp    0x4059e0
  4059fc:	nop    DWORD PTR [rax+0x0]
  405a00:	push   rbx
  405a01:	sub    rsp,0x20
  405a05:	mov    rdx,QWORD PTR [rcx]
  405a08:	mov    eax,DWORD PTR [rdx]
  405a0a:	mov    r8d,eax
  405a0d:	and    r8d,0x20ffffff
  405a14:	cmp    r8d,0x20474343
  405a1b:	je     0x405b20
  405a21:	cmp    eax,0xc0000091
  405a26:	mov    rbx,rcx
  405a29:	ja     0x405ab0
  405a2f:	cmp    eax,0xc000008d
  405a34:	jae    0x405ac7
  405a3a:	cmp    eax,0xc0000008
  405a3f:	je     0x405a73
  405a41:	ja     0x405a80
  405a43:	cmp    eax,0x80000002
  405a48:	je     0x405a73
  405a4a:	cmp    eax,0xc0000005
  405a4f:	jne    0x405a92
  405a51:	xor    edx,edx
  405a53:	mov    ecx,0xb
  405a58:	call   0x406470
  405a5d:	cmp    rax,0x1
  405a61:	je     0x405b90
  405a67:	test   rax,rax
  405a6a:	je     0x405a92
  405a6c:	mov    ecx,0xb
  405a71:	call   rax
  405a73:	mov    eax,0xffffffff
  405a78:	add    rsp,0x20
  405a7c:	pop    rbx
  405a7d:	ret    
  405a7e:	xchg   ax,ax
  405a80:	cmp    eax,0xc000001d
  405a85:	je     0x405b46
  405a8b:	cmp    eax,0xc000008c
  405a90:	je     0x405a73
  405a92:	mov    rax,QWORD PTR [rip+0x7d67]        # 0x40d800
  405a99:	test   rax,rax
  405a9c:	je     0x405a78
  405a9e:	mov    rcx,rbx
  405aa1:	add    rsp,0x20
  405aa5:	pop    rbx
  405aa6:	rex.W jmp rax
  405aa9:	nop    DWORD PTR [rax+0x0]
  405ab0:	cmp    eax,0xc0000094
  405ab5:	je     0x405af2
  405ab7:	ja     0x405b30
  405ab9:	cmp    eax,0xc0000092
  405abe:	je     0x405a73
  405ac0:	cmp    eax,0xc0000093
  405ac5:	jne    0x405a92
  405ac7:	xor    edx,edx
  405ac9:	mov    ecx,0x8
  405ace:	call   0x406470
  405ad3:	cmp    rax,0x1
  405ad7:	jne    0x405b04
  405ad9:	mov    edx,0x1
  405ade:	mov    ecx,0x8
  405ae3:	call   0x406470
  405ae8:	call   0x405250
  405aed:	jmp    0x405a73
  405af2:	xor    edx,edx
  405af4:	mov    ecx,0x8
  405af9:	call   0x406470
  405afe:	cmp    rax,0x1
  405b02:	je     0x405b72
  405b04:	test   rax,rax
  405b07:	je     0x405a92
  405b09:	mov    ecx,0x8
  405b0e:	call   rax
  405b10:	mov    eax,0xffffffff
  405b15:	jmp    0x405a78
  405b1a:	nop    WORD PTR [rax+rax*1+0x0]
  405b20:	test   BYTE PTR [rdx+0x4],0x1
  405b24:	jne    0x405a21
  405b2a:	jmp    0x405a73
  405b2f:	nop
  405b30:	cmp    eax,0xc0000095
  405b35:	je     0x405a73
  405b3b:	cmp    eax,0xc0000096
  405b40:	jne    0x405a92
  405b46:	xor    edx,edx
  405b48:	mov    ecx,0x4
  405b4d:	call   0x406470
  405b52:	cmp    rax,0x1
  405b56:	je     0x405ba4
  405b58:	test   rax,rax
  405b5b:	je     0x405a92
  405b61:	mov    ecx,0x4
  405b66:	call   rax
  405b68:	mov    eax,0xffffffff
  405b6d:	jmp    0x405a78
  405b72:	mov    edx,0x1
  405b77:	mov    ecx,0x8
  405b7c:	call   0x406470
  405b81:	jmp    0x405a73
  405b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b90:	mov    edx,0x1
  405b95:	mov    ecx,0xb
  405b9a:	call   0x406470
  405b9f:	jmp    0x405a73
  405ba4:	mov    edx,0x1
  405ba9:	mov    ecx,0x4
  405bae:	call   0x406470
  405bb3:	jmp    0x405a73
  405bb8:	nop
  405bb9:	nop
  405bba:	nop
  405bbb:	nop
  405bbc:	nop
  405bbd:	nop
  405bbe:	nop
  405bbf:	nop
  405bc0:	push   rbp
  405bc1:	push   rdi
  405bc2:	push   rsi
  405bc3:	push   rbx
  405bc4:	sub    rsp,0x28
  405bc8:	lea    rcx,[rip+0x7f11]        # 0x40dae0
  405bcf:	call   QWORD PTR [rip+0x873b]        # 0x40e310
  405bd5:	mov    rbx,QWORD PTR [rip+0x7ee4]        # 0x40dac0
  405bdc:	test   rbx,rbx
  405bdf:	je     0x405c14
  405be1:	mov    rbp,QWORD PTR [rip+0x87c0]        # 0x40e3a8
  405be8:	mov    rdi,QWORD PTR [rip+0x8741]        # 0x40e330
  405bef:	nop
  405bf0:	mov    ecx,DWORD PTR [rbx]
  405bf2:	call   rbp
  405bf4:	mov    rsi,rax
  405bf7:	call   rdi
  405bf9:	test   eax,eax
  405bfb:	jne    0x405c0b
  405bfd:	test   rsi,rsi
  405c00:	je     0x405c0b
  405c02:	mov    rax,QWORD PTR [rbx+0x8]
  405c06:	mov    rcx,rsi
  405c09:	call   rax
  405c0b:	mov    rbx,QWORD PTR [rbx+0x10]
  405c0f:	test   rbx,rbx
  405c12:	jne    0x405bf0
  405c14:	mov    rax,QWORD PTR [rip+0x8745]        # 0x40e360
  405c1b:	lea    rcx,[rip+0x7ebe]        # 0x40dae0
  405c22:	add    rsp,0x28
  405c26:	pop    rbx
  405c27:	pop    rsi
  405c28:	pop    rdi
  405c29:	pop    rbp
  405c2a:	rex.W jmp rax
  405c2d:	nop    DWORD PTR [rax]
  405c30:	push   rdi
  405c31:	push   rsi
  405c32:	push   rbx
  405c33:	sub    rsp,0x20
  405c37:	mov    eax,DWORD PTR [rip+0x7e8b]        # 0x40dac8
  405c3d:	test   eax,eax
  405c3f:	jne    0x405c50
  405c41:	add    rsp,0x20
  405c45:	pop    rbx
  405c46:	pop    rsi
  405c47:	pop    rdi
  405c48:	ret    
  405c49:	nop    DWORD PTR [rax+0x0]
  405c50:	mov    rsi,rdx
  405c53:	mov    edi,ecx
  405c55:	mov    edx,0x18
  405c5a:	mov    ecx,0x1
  405c5f:	call   0x406540
  405c64:	test   rax,rax
  405c67:	mov    rbx,rax
  405c6a:	je     0x405ca8
  405c6c:	mov    DWORD PTR [rax],edi
  405c6e:	mov    QWORD PTR [rax+0x8],rsi
  405c72:	lea    rcx,[rip+0x7e67]        # 0x40dae0
  405c79:	call   QWORD PTR [rip+0x8691]        # 0x40e310
  405c7f:	mov    rax,QWORD PTR [rip+0x7e3a]        # 0x40dac0
  405c86:	lea    rcx,[rip+0x7e53]        # 0x40dae0
  405c8d:	mov    QWORD PTR [rip+0x7e2c],rbx        # 0x40dac0
  405c94:	mov    QWORD PTR [rbx+0x10],rax
  405c98:	call   QWORD PTR [rip+0x86c2]        # 0x40e360
  405c9e:	xor    eax,eax
  405ca0:	add    rsp,0x20
  405ca4:	pop    rbx
  405ca5:	pop    rsi
  405ca6:	pop    rdi
  405ca7:	ret    
  405ca8:	mov    eax,0xffffffff
  405cad:	jmp    0x405c41
  405caf:	nop
  405cb0:	push   rbx
  405cb1:	sub    rsp,0x20
  405cb5:	mov    eax,DWORD PTR [rip+0x7e0d]        # 0x40dac8
  405cbb:	test   eax,eax
  405cbd:	jne    0x405cd0
  405cbf:	xor    eax,eax
  405cc1:	add    rsp,0x20
  405cc5:	pop    rbx
  405cc6:	ret    
  405cc7:	nop    WORD PTR [rax+rax*1+0x0]
  405cd0:	mov    ebx,ecx
  405cd2:	lea    rcx,[rip+0x7e07]        # 0x40dae0
  405cd9:	call   QWORD PTR [rip+0x8631]        # 0x40e310
  405cdf:	mov    rdx,QWORD PTR [rip+0x7dda]        # 0x40dac0
  405ce6:	test   rdx,rdx
  405ce9:	je     0x405d07
  405ceb:	mov    eax,DWORD PTR [rdx]
  405ced:	cmp    eax,ebx
  405cef:	jne    0x405cfe
  405cf1:	jmp    0x405d3f
  405cf3:	mov    r8d,DWORD PTR [rax]
  405cf6:	cmp    r8d,ebx
  405cf9:	je     0x405d20
  405cfb:	mov    rdx,rax
  405cfe:	mov    rax,QWORD PTR [rdx+0x10]
  405d02:	test   rax,rax
  405d05:	jne    0x405cf3
  405d07:	lea    rcx,[rip+0x7dd2]        # 0x40dae0
  405d0e:	call   QWORD PTR [rip+0x864c]        # 0x40e360
  405d14:	xor    eax,eax
  405d16:	add    rsp,0x20
  405d1a:	pop    rbx
  405d1b:	ret    
  405d1c:	nop    DWORD PTR [rax+0x0]
  405d20:	mov    rcx,rax
  405d23:	mov    rax,QWORD PTR [rax+0x10]
  405d27:	mov    QWORD PTR [rdx+0x10],rax
  405d2b:	call   0x4064f8
  405d30:	lea    rcx,[rip+0x7da9]        # 0x40dae0
  405d37:	call   QWORD PTR [rip+0x8623]        # 0x40e360
  405d3d:	jmp    0x405d14
  405d3f:	mov    rax,QWORD PTR [rdx+0x10]
  405d43:	mov    rcx,rdx
  405d46:	mov    QWORD PTR [rip+0x7d73],rax        # 0x40dac0
  405d4d:	jmp    0x405d2b
  405d4f:	nop
  405d50:	push   rbx
  405d51:	sub    rsp,0x20
  405d55:	cmp    edx,0x1
  405d58:	je     0x405df0
  405d5e:	jb     0x405d90
  405d60:	cmp    edx,0x2
  405d63:	je     0x405d80
  405d65:	cmp    edx,0x3
  405d68:	jne    0x405d85
  405d6a:	mov    eax,DWORD PTR [rip+0x7d58]        # 0x40dac8
  405d70:	test   eax,eax
  405d72:	je     0x405d85
  405d74:	call   0x405bc0
  405d79:	jmp    0x405d85
  405d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d80:	call   0x405250
  405d85:	mov    eax,0x1
  405d8a:	add    rsp,0x20
  405d8e:	pop    rbx
  405d8f:	ret    
  405d90:	mov    eax,DWORD PTR [rip+0x7d32]        # 0x40dac8
  405d96:	test   eax,eax
  405d98:	jne    0x405e20
  405d9e:	mov    eax,DWORD PTR [rip+0x7d24]        # 0x40dac8
  405da4:	cmp    eax,0x1
  405da7:	jne    0x405d85
  405da9:	mov    rcx,QWORD PTR [rip+0x7d10]        # 0x40dac0
  405db0:	test   rcx,rcx
  405db3:	je     0x405dc6
  405db5:	mov    rbx,QWORD PTR [rcx+0x10]
  405db9:	call   0x4064f8
  405dbe:	test   rbx,rbx
  405dc1:	mov    rcx,rbx
  405dc4:	jne    0x405db5
  405dc6:	lea    rcx,[rip+0x7d13]        # 0x40dae0
  405dcd:	mov    QWORD PTR [rip+0x7ce8],0x0        # 0x40dac0
  405dd8:	mov    DWORD PTR [rip+0x7ce6],0x0        # 0x40dac8
  405de2:	call   QWORD PTR [rip+0x8520]        # 0x40e308
  405de8:	jmp    0x405d85
  405dea:	nop    WORD PTR [rax+rax*1+0x0]
  405df0:	mov    eax,DWORD PTR [rip+0x7cd2]        # 0x40dac8
  405df6:	test   eax,eax
  405df8:	je     0x405e10
  405dfa:	mov    eax,0x1
  405dff:	mov    DWORD PTR [rip+0x7cbf],0x1        # 0x40dac8
  405e09:	add    rsp,0x20
  405e0d:	pop    rbx
  405e0e:	ret    
  405e0f:	nop
  405e10:	lea    rcx,[rip+0x7cc9]        # 0x40dae0
  405e17:	call   QWORD PTR [rip+0x853b]        # 0x40e358
  405e1d:	jmp    0x405dfa
  405e1f:	nop
  405e20:	call   0x405bc0
  405e25:	jmp    0x405d9e
  405e2a:	nop
  405e2b:	nop
  405e2c:	nop
  405e2d:	nop
  405e2e:	nop
  405e2f:	nop
  405e30:	movsxd rax,DWORD PTR [rcx+0x3c]
  405e34:	add    rcx,rax
  405e37:	xor    eax,eax
  405e39:	cmp    DWORD PTR [rcx],0x4550
  405e3f:	je     0x405e43
  405e41:	repz ret 
  405e43:	xor    eax,eax
  405e45:	cmp    WORD PTR [rcx+0x18],0x20b
  405e4b:	sete   al
  405e4e:	ret    
  405e4f:	nop
  405e50:	cmp    WORD PTR [rcx],0x5a4d
  405e55:	je     0x405e60
  405e57:	xor    eax,eax
  405e59:	ret    
  405e5a:	nop    WORD PTR [rax+rax*1+0x0]
  405e60:	jmp    0x405e30
  405e62:	nop    DWORD PTR [rax+0x0]
  405e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e70:	movsxd rax,DWORD PTR [rcx+0x3c]
  405e74:	add    rcx,rax
  405e77:	movzx  eax,WORD PTR [rcx+0x14]
  405e7b:	lea    rax,[rcx+rax*1+0x18]
  405e80:	movzx  ecx,WORD PTR [rcx+0x6]
  405e84:	test   ecx,ecx
  405e86:	je     0x405eb1
  405e88:	sub    ecx,0x1
  405e8b:	lea    rcx,[rcx+rcx*4]
  405e8f:	lea    r9,[rax+rcx*8+0x28]
  405e94:	mov    r8d,DWORD PTR [rax+0xc]
  405e98:	cmp    r8,rdx
  405e9b:	mov    rcx,r8
  405e9e:	ja     0x405ea8
  405ea0:	add    ecx,DWORD PTR [rax+0x8]
  405ea3:	cmp    rdx,rcx
  405ea6:	jb     0x405eb3
  405ea8:	add    rax,0x28
  405eac:	cmp    rax,r9
  405eaf:	jne    0x405e94
  405eb1:	xor    eax,eax
  405eb3:	repz ret 
  405eb5:	nop
  405eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ec0:	push   rdi
  405ec1:	push   rsi
  405ec2:	push   rbx
  405ec3:	sub    rsp,0x20
  405ec7:	mov    rsi,rcx
  405eca:	call   0x406450
  405ecf:	cmp    rax,0x8
  405ed3:	ja     0x405ef0
  405ed5:	mov    rbx,QWORD PTR [rip+0x3be4]        # 0x409ac0
  405edc:	xor    edi,edi
  405ede:	cmp    WORD PTR [rbx],0x5a4d
  405ee3:	je     0x405f00
  405ee5:	mov    rax,rdi
  405ee8:	add    rsp,0x20
  405eec:	pop    rbx
  405eed:	pop    rsi
  405eee:	pop    rdi
  405eef:	ret    
  405ef0:	xor    edi,edi
  405ef2:	mov    rax,rdi
  405ef5:	add    rsp,0x20
  405ef9:	pop    rbx
  405efa:	pop    rsi
  405efb:	pop    rdi
  405efc:	ret    
  405efd:	nop    DWORD PTR [rax]
  405f00:	mov    rcx,rbx
  405f03:	call   0x405e30
  405f08:	test   eax,eax
  405f0a:	je     0x405ee5
  405f0c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  405f10:	add    rdx,rbx
  405f13:	movzx  eax,WORD PTR [rdx+0x14]
  405f17:	lea    rbx,[rdx+rax*1+0x18]
  405f1c:	movzx  eax,WORD PTR [rdx+0x6]
  405f20:	test   eax,eax
  405f22:	je     0x405ee5
  405f24:	sub    eax,0x1
  405f27:	lea    rax,[rax+rax*4]
  405f2b:	lea    rdi,[rbx+rax*8+0x28]
  405f30:	jmp    0x405f3b
  405f32:	add    rbx,0x28
  405f36:	cmp    rbx,rdi
  405f39:	je     0x405ef0
  405f3b:	mov    r8d,0x8
  405f41:	mov    rdx,rsi
  405f44:	mov    rcx,rbx
  405f47:	call   0x406448
  405f4c:	test   eax,eax
  405f4e:	jne    0x405f32
  405f50:	mov    rdi,rbx
  405f53:	mov    rax,rdi
  405f56:	add    rsp,0x20
  405f5a:	pop    rbx
  405f5b:	pop    rsi
  405f5c:	pop    rdi
  405f5d:	ret    
  405f5e:	xchg   ax,ax
  405f60:	push   rsi
  405f61:	push   rbx
  405f62:	sub    rsp,0x28
  405f66:	mov    rbx,QWORD PTR [rip+0x3b53]        # 0x409ac0
  405f6d:	cmp    WORD PTR [rbx],0x5a4d
  405f72:	je     0x405f80
  405f74:	xor    eax,eax
  405f76:	add    rsp,0x28
  405f7a:	pop    rbx
  405f7b:	pop    rsi
  405f7c:	ret    
  405f7d:	nop    DWORD PTR [rax]
  405f80:	mov    rsi,rcx
  405f83:	mov    rcx,rbx
  405f86:	call   0x405e30
  405f8b:	test   eax,eax
  405f8d:	je     0x405f74
  405f8f:	sub    rsi,rbx
  405f92:	mov    rcx,rbx
  405f95:	mov    rdx,rsi
  405f98:	add    rsp,0x28
  405f9c:	pop    rbx
  405f9d:	pop    rsi
  405f9e:	jmp    0x405e70
  405fa3:	nop    DWORD PTR [rax]
  405fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fb0:	push   rbx
  405fb1:	sub    rsp,0x20
  405fb5:	mov    rbx,QWORD PTR [rip+0x3b04]        # 0x409ac0
  405fbc:	xor    eax,eax
  405fbe:	cmp    WORD PTR [rbx],0x5a4d
  405fc3:	je     0x405fd0
  405fc5:	add    rsp,0x20
  405fc9:	pop    rbx
  405fca:	ret    
  405fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  405fd0:	mov    rcx,rbx
  405fd3:	call   0x405e30
  405fd8:	test   eax,eax
  405fda:	je     0x405fc5
  405fdc:	movsxd rax,DWORD PTR [rbx+0x3c]
  405fe0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  405fe5:	add    rsp,0x20
  405fe9:	pop    rbx
  405fea:	ret    
  405feb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	push   rdi
  405ff1:	push   rsi
  405ff2:	push   rbx
  405ff3:	sub    rsp,0x20
  405ff7:	mov    rsi,QWORD PTR [rip+0x3ac2]        # 0x409ac0
  405ffe:	xor    edi,edi
  406000:	mov    rbx,rcx
  406003:	cmp    WORD PTR [rsi],0x5a4d
  406008:	je     0x406015
  40600a:	mov    rax,rdi
  40600d:	add    rsp,0x20
  406011:	pop    rbx
  406012:	pop    rsi
  406013:	pop    rdi
  406014:	ret    
  406015:	mov    rcx,rsi
  406018:	call   0x405e30
  40601d:	test   eax,eax
  40601f:	je     0x40600a
  406021:	movsxd rax,DWORD PTR [rsi+0x3c]
  406025:	add    rsi,rax
  406028:	movzx  eax,WORD PTR [rsi+0x14]
  40602c:	lea    rdx,[rsi+rax*1+0x18]
  406031:	movzx  eax,WORD PTR [rsi+0x6]
  406035:	test   eax,eax
  406037:	je     0x40600a
  406039:	sub    eax,0x1
  40603c:	lea    rax,[rax+rax*4]
  406040:	lea    rax,[rdx+rax*8+0x28]
  406045:	test   BYTE PTR [rdx+0x27],0x20
  406049:	je     0x406054
  40604b:	test   rbx,rbx
  40604e:	je     0x406070
  406050:	sub    rbx,0x1
  406054:	add    rdx,0x28
  406058:	cmp    rdx,rax
  40605b:	jne    0x406045
  40605d:	xor    edi,edi
  40605f:	mov    rax,rdi
  406062:	add    rsp,0x20
  406066:	pop    rbx
  406067:	pop    rsi
  406068:	pop    rdi
  406069:	ret    
  40606a:	nop    WORD PTR [rax+rax*1+0x0]
  406070:	mov    rdi,rdx
  406073:	mov    rax,rdi
  406076:	add    rsp,0x20
  40607a:	pop    rbx
  40607b:	pop    rsi
  40607c:	pop    rdi
  40607d:	ret    
  40607e:	xchg   ax,ax
  406080:	push   rsi
  406081:	push   rbx
  406082:	sub    rsp,0x28
  406086:	mov    rsi,QWORD PTR [rip+0x3a33]        # 0x409ac0
  40608d:	xor    ebx,ebx
  40608f:	cmp    WORD PTR [rsi],0x5a4d
  406094:	je     0x4060a0
  406096:	mov    rax,rbx
  406099:	add    rsp,0x28
  40609d:	pop    rbx
  40609e:	pop    rsi
  40609f:	ret    
  4060a0:	mov    rcx,rsi
  4060a3:	call   0x405e30
  4060a8:	test   eax,eax
  4060aa:	cmovne rbx,rsi
  4060ae:	mov    rax,rbx
  4060b1:	add    rsp,0x28
  4060b5:	pop    rbx
  4060b6:	pop    rsi
  4060b7:	ret    
  4060b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	push   rsi
  4060c1:	push   rbx
  4060c2:	sub    rsp,0x28
  4060c6:	mov    rbx,QWORD PTR [rip+0x39f3]        # 0x409ac0
  4060cd:	xor    eax,eax
  4060cf:	cmp    WORD PTR [rbx],0x5a4d
  4060d4:	je     0x4060e0
  4060d6:	add    rsp,0x28
  4060da:	pop    rbx
  4060db:	pop    rsi
  4060dc:	ret    
  4060dd:	nop    DWORD PTR [rax]
  4060e0:	mov    rsi,rcx
  4060e3:	mov    rcx,rbx
  4060e6:	call   0x405e30
  4060eb:	test   eax,eax
  4060ed:	je     0x4060d6
  4060ef:	sub    rsi,rbx
  4060f2:	mov    rcx,rbx
  4060f5:	mov    rdx,rsi
  4060f8:	call   0x405e70
  4060fd:	test   rax,rax
  406100:	je     0x406111
  406102:	mov    eax,DWORD PTR [rax+0x24]
  406105:	not    eax
  406107:	shr    eax,0x1f
  40610a:	add    rsp,0x28
  40610e:	pop    rbx
  40610f:	pop    rsi
  406110:	ret    
  406111:	xor    eax,eax
  406113:	jmp    0x4060d6
  406115:	nop
  406116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406120:	push   rbp
  406121:	push   rdi
  406122:	push   rsi
  406123:	push   rbx
  406124:	sub    rsp,0x28
  406128:	mov    rdi,QWORD PTR [rip+0x3991]        # 0x409ac0
  40612f:	xor    ebp,ebp
  406131:	mov    esi,ecx
  406133:	cmp    WORD PTR [rdi],0x5a4d
  406138:	je     0x406150
  40613a:	mov    rax,rbp
  40613d:	add    rsp,0x28
  406141:	pop    rbx
  406142:	pop    rsi
  406143:	pop    rdi
  406144:	pop    rbp
  406145:	ret    
  406146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406150:	mov    rcx,rdi
  406153:	call   0x405e30
  406158:	test   eax,eax
  40615a:	je     0x40613a
  40615c:	movsxd rax,DWORD PTR [rdi+0x3c]
  406160:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  406167:	test   edx,edx
  406169:	je     0x40613a
  40616b:	mov    ebx,edx
  40616d:	mov    rcx,rdi
  406170:	mov    rdx,rbx
  406173:	call   0x405e70
  406178:	test   rax,rax
  40617b:	je     0x40613a
  40617d:	add    rbx,rdi
  406180:	mov    rdx,rbx
  406183:	jne    0x406197
  406185:	jmp    0x40613a
  406187:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	sub    esi,0x1
  406193:	add    rdx,0x14
  406197:	mov    ecx,DWORD PTR [rdx+0x4]
  40619a:	test   ecx,ecx
  40619c:	jne    0x4061a5
  40619e:	mov    eax,DWORD PTR [rdx+0xc]
  4061a1:	test   eax,eax
  4061a3:	je     0x4061c0
  4061a5:	test   esi,esi
  4061a7:	jg     0x406190
  4061a9:	mov    ebp,DWORD PTR [rdx+0xc]
  4061ac:	add    rbp,rdi
  4061af:	mov    rax,rbp
  4061b2:	add    rsp,0x28
  4061b6:	pop    rbx
  4061b7:	pop    rsi
  4061b8:	pop    rdi
  4061b9:	pop    rbp
  4061ba:	ret    
  4061bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4061c0:	xor    ebp,ebp
  4061c2:	mov    rax,rbp
  4061c5:	add    rsp,0x28
  4061c9:	pop    rbx
  4061ca:	pop    rsi
  4061cb:	pop    rdi
  4061cc:	pop    rbp
  4061cd:	ret    
  4061ce:	nop
  4061cf:	nop
  4061d0:	push   rcx
  4061d1:	push   rax
  4061d2:	cmp    rax,0x1000
  4061d8:	lea    rcx,[rsp+0x18]
  4061dd:	jb     0x4061f8
  4061df:	sub    rcx,0x1000
  4061e6:	or     QWORD PTR [rcx],0x0
  4061ea:	sub    rax,0x1000
  4061f0:	cmp    rax,0x1000
  4061f6:	ja     0x4061df
  4061f8:	sub    rcx,rax
  4061fb:	or     QWORD PTR [rcx],0x0
  4061ff:	pop    rax
  406200:	pop    rcx
  406201:	ret    
  406202:	nop
  406203:	nop
  406204:	nop
  406205:	nop
  406206:	nop
  406207:	nop
  406208:	nop
  406209:	nop
  40620a:	nop
  40620b:	nop
  40620c:	nop
  40620d:	nop
  40620e:	nop
  40620f:	nop
  406210:	push   r12
  406212:	push   rbp
  406213:	push   rdi
  406214:	push   rsi
  406215:	push   rbx
  406216:	sub    rsp,0x250
  40621d:	mov    rbx,rdx
  406220:	mov    rsi,rcx
  406223:	mov    ecx,0x4000
  406228:	mov    r12d,r8d
  40622b:	call   0x4064c0
  406230:	test   rbx,rbx
  406233:	mov    rbp,rax
  406236:	je     0x406300
  40623c:	cmp    WORD PTR [rbx],0x0
  406240:	lea    rax,[rip+0x3739]        # 0x409980
  406247:	cmove  rbx,rax
  40624b:	test   rsi,rsi
  40624e:	je     0x4062f1
  406254:	cmp    WORD PTR [rsi],0x0
  406258:	lea    rax,[rip+0x3735]        # 0x409994
  40625f:	cmove  rsi,rax
  406263:	lea    rdi,[rsp+0x40]
  406268:	xor    ecx,ecx
  40626a:	mov    r8d,0x104
  406270:	mov    rdx,rdi
  406273:	call   QWORD PTR [rip+0x80bf]        # 0x40e338
  406279:	test   eax,eax
  40627b:	je     0x4062e0
  40627d:	lea    r8,[rip+0x3714]        # 0x409998
  406284:	mov    QWORD PTR [rsp+0x30],rsi
  406289:	mov    DWORD PTR [rsp+0x28],r12d
  40628e:	mov    QWORD PTR [rsp+0x20],rbx
  406293:	mov    r9,rdi
  406296:	mov    edx,0x1fff
  40629b:	mov    rcx,rbp
  40629e:	call   0x406568
  4062a3:	mov    rax,QWORD PTR [rip+0x39b6]        # 0x409c60
  4062aa:	mov    eax,DWORD PTR [rax]
  4062ac:	test   eax,eax
  4062ae:	je     0x406325
  4062b0:	xor    ecx,ecx
  4062b2:	mov    r9d,0x12012
  4062b8:	lea    r8,[rip+0x3771]        # 0x409a30
  4062bf:	mov    rdx,rbp
  4062c2:	call   QWORD PTR [rip+0x82e8]        # 0x40e5b0
  4062c8:	cmp    eax,0x3
  4062cb:	je     0x406311
  4062cd:	cmp    eax,0x5
  4062d0:	jne    0x40630c
  4062d2:	add    rsp,0x250
  4062d9:	pop    rbx
  4062da:	pop    rsi
  4062db:	pop    rdi
  4062dc:	pop    rbp
  4062dd:	pop    r12
  4062df:	ret    
  4062e0:	lea    rdx,[rip+0x3699]        # 0x409980
  4062e7:	mov    rcx,rdi
  4062ea:	call   0x406430
  4062ef:	jmp    0x40627d
  4062f1:	lea    rsi,[rip+0x369c]        # 0x409994
  4062f8:	jmp    0x406263
  4062fd:	nop    DWORD PTR [rax]
  406300:	lea    rbx,[rip+0x3679]        # 0x409980
  406307:	jmp    0x40624b
  40630c:	call   0x406548
  406311:	mov    ecx,0x16
  406316:	call   0x406490
  40631b:	mov    ecx,0x3
  406320:	call   0x406588
  406325:	call   0x4065c0
  40632a:	lea    rdx,[rip+0x36ef]        # 0x409a20
  406331:	lea    rcx,[rax+0x60]
  406335:	mov    r8,rbp
  406338:	call   0x4064e0
  40633d:	call   0x406548
  406342:	nop
  406343:	nop    DWORD PTR [rax]
  406346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406350:	push   rbp
  406351:	push   rdi
  406352:	push   rsi
  406353:	push   rbx
  406354:	sub    rsp,0x38
  406358:	mov    rdi,rdx
  40635b:	mov    DWORD PTR [rsp+0x2c],r8d
  406360:	mov    rbp,rcx
  406363:	call   0x406450
  406368:	lea    rcx,[rax+rax*1+0x2]
  40636d:	call   0x4064c0
  406372:	mov    rcx,rdi
  406375:	mov    rsi,rax
  406378:	call   0x406450
  40637d:	lea    rcx,[rax+rax*1+0x2]
  406382:	call   0x4064c0
  406387:	movzx  r9d,BYTE PTR [rbp+0x0]
  40638c:	xor    r10d,r10d
  40638f:	mov    rbx,rax
  406392:	mov    r8d,DWORD PTR [rsp+0x2c]
  406397:	test   r9b,r9b
  40639a:	je     0x4063b7
  40639c:	nop    DWORD PTR [rax+0x0]
  4063a0:	mov    WORD PTR [rsi+r10*2],r9w
  4063a5:	add    r10,0x1
  4063a9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  4063af:	test   r9b,r9b
  4063b2:	jne    0x4063a0
  4063b4:	add    r10,r10
  4063b7:	movzx  r9d,BYTE PTR [rdi]
  4063bb:	xor    edx,edx
  4063bd:	mov    WORD PTR [rsi+r10*1],dx
  4063c2:	xor    r10d,r10d
  4063c5:	test   r9b,r9b
  4063c8:	je     0x4063e6
  4063ca:	nop    WORD PTR [rax+rax*1+0x0]
  4063d0:	mov    WORD PTR [rbx+r10*2],r9w
  4063d5:	add    r10,0x1
  4063d9:	movzx  r9d,BYTE PTR [rdi+r10*1]
  4063de:	test   r9b,r9b
  4063e1:	jne    0x4063d0
  4063e3:	add    r10,r10
  4063e6:	xor    eax,eax
  4063e8:	mov    rdx,rbx
  4063eb:	mov    rcx,rsi
  4063ee:	mov    WORD PTR [rbx+r10*1],ax
  4063f3:	call   0x406210
  4063f8:	mov    rcx,rsi
  4063fb:	call   0x4064f8
  406400:	mov    rcx,rbx
  406403:	add    rsp,0x38
  406407:	pop    rbx
  406408:	pop    rsi
  406409:	pop    rdi
  40640a:	pop    rbp
  40640b:	jmp    0x4064f8
  406410:	jmp    0x406550
  406415:	nop
  406416:	nop
  406417:	nop
  406418:	nop
  406419:	nop
  40641a:	nop
  40641b:	nop
  40641c:	nop
  40641d:	nop
  40641e:	nop
  40641f:	nop
  406420:	jmp    QWORD PTR [rip+0x817a]        # 0x40e5a0
  406426:	nop
  406427:	nop
  406428:	jmp    QWORD PTR [rip+0x816a]        # 0x40e598
  40642e:	nop
  40642f:	nop
  406430:	jmp    QWORD PTR [rip+0x815a]        # 0x40e590
  406436:	nop
  406437:	nop
  406438:	jmp    QWORD PTR [rip+0x814a]        # 0x40e588
  40643e:	nop
  40643f:	nop
  406440:	jmp    QWORD PTR [rip+0x813a]        # 0x40e580
  406446:	nop
  406447:	nop
  406448:	jmp    QWORD PTR [rip+0x812a]        # 0x40e578
  40644e:	nop
  40644f:	nop
  406450:	jmp    QWORD PTR [rip+0x811a]        # 0x40e570
  406456:	nop
  406457:	nop
  406458:	jmp    QWORD PTR [rip+0x810a]        # 0x40e568
  40645e:	nop
  40645f:	nop
  406460:	jmp    QWORD PTR [rip+0x80fa]        # 0x40e560
  406466:	nop
  406467:	nop
  406468:	jmp    QWORD PTR [rip+0x80ea]        # 0x40e558
  40646e:	nop
  40646f:	nop
  406470:	jmp    QWORD PTR [rip+0x80da]        # 0x40e550
  406476:	nop
  406477:	nop
  406478:	jmp    QWORD PTR [rip+0x80ca]        # 0x40e548
  40647e:	nop
  40647f:	nop
  406480:	jmp    QWORD PTR [rip+0x80ba]        # 0x40e540
  406486:	nop
  406487:	nop
  406488:	jmp    QWORD PTR [rip+0x80aa]        # 0x40e538
  40648e:	nop
  40648f:	nop
  406490:	jmp    QWORD PTR [rip+0x809a]        # 0x40e530
  406496:	nop
  406497:	nop
  406498:	jmp    QWORD PTR [rip+0x808a]        # 0x40e528
  40649e:	nop
  40649f:	nop
  4064a0:	jmp    QWORD PTR [rip+0x807a]        # 0x40e520
  4064a6:	nop
  4064a7:	nop
  4064a8:	jmp    QWORD PTR [rip+0x806a]        # 0x40e518
  4064ae:	nop
  4064af:	nop
  4064b0:	jmp    QWORD PTR [rip+0x805a]        # 0x40e510
  4064b6:	nop
  4064b7:	nop
  4064b8:	jmp    QWORD PTR [rip+0x804a]        # 0x40e508
  4064be:	nop
  4064bf:	nop
  4064c0:	jmp    QWORD PTR [rip+0x803a]        # 0x40e500
  4064c6:	nop
  4064c7:	nop
  4064c8:	jmp    QWORD PTR [rip+0x802a]        # 0x40e4f8
  4064ce:	nop
  4064cf:	nop
  4064d0:	jmp    QWORD PTR [rip+0x801a]        # 0x40e4f0
  4064d6:	nop
  4064d7:	nop
  4064d8:	jmp    QWORD PTR [rip+0x800a]        # 0x40e4e8
  4064de:	nop
  4064df:	nop
  4064e0:	jmp    QWORD PTR [rip+0x7ffa]        # 0x40e4e0
  4064e6:	nop
  4064e7:	nop
  4064e8:	jmp    QWORD PTR [rip+0x7fea]        # 0x40e4d8
  4064ee:	nop
  4064ef:	nop
  4064f0:	jmp    QWORD PTR [rip+0x7fda]        # 0x40e4d0
  4064f6:	nop
  4064f7:	nop
  4064f8:	jmp    QWORD PTR [rip+0x7fca]        # 0x40e4c8
  4064fe:	nop
  4064ff:	nop
  406500:	jmp    QWORD PTR [rip+0x7fba]        # 0x40e4c0
  406506:	nop
  406507:	nop
  406508:	jmp    QWORD PTR [rip+0x7faa]        # 0x40e4b8
  40650e:	nop
  40650f:	nop
  406510:	jmp    QWORD PTR [rip+0x7f9a]        # 0x40e4b0
  406516:	nop
  406517:	nop
  406518:	jmp    QWORD PTR [rip+0x7f8a]        # 0x40e4a8
  40651e:	nop
  40651f:	nop
  406520:	jmp    QWORD PTR [rip+0x7f7a]        # 0x40e4a0
  406526:	nop
  406527:	nop
  406528:	jmp    QWORD PTR [rip+0x7f6a]        # 0x40e498
  40652e:	nop
  40652f:	nop
  406530:	jmp    QWORD PTR [rip+0x7f5a]        # 0x40e490
  406536:	nop
  406537:	nop
  406538:	jmp    QWORD PTR [rip+0x7f4a]        # 0x40e488
  40653e:	nop
  40653f:	nop
  406540:	jmp    QWORD PTR [rip+0x7f3a]        # 0x40e480
  406546:	nop
  406547:	nop
  406548:	jmp    QWORD PTR [rip+0x7f2a]        # 0x40e478
  40654e:	nop
  40654f:	nop
  406550:	jmp    QWORD PTR [rip+0x7f1a]        # 0x40e470
  406556:	nop
  406557:	nop
  406558:	jmp    QWORD PTR [rip+0x7f0a]        # 0x40e468
  40655e:	nop
  40655f:	nop
  406560:	jmp    QWORD PTR [rip+0x7efa]        # 0x40e460
  406566:	nop
  406567:	nop
  406568:	jmp    QWORD PTR [rip+0x7eea]        # 0x40e458
  40656e:	nop
  40656f:	nop
  406570:	jmp    QWORD PTR [rip+0x7eda]        # 0x40e450
  406576:	nop
  406577:	nop
  406578:	jmp    QWORD PTR [rip+0x7eca]        # 0x40e448
  40657e:	nop
  40657f:	nop
  406580:	jmp    QWORD PTR [rip+0x7eba]        # 0x40e440
  406586:	nop
  406587:	nop
  406588:	jmp    QWORD PTR [rip+0x7ea2]        # 0x40e430
  40658e:	nop
  40658f:	nop
  406590:	jmp    QWORD PTR [rip+0x7e92]        # 0x40e428
  406596:	nop
  406597:	nop
  406598:	jmp    QWORD PTR [rip+0x7e82]        # 0x40e420
  40659e:	nop
  40659f:	nop
  4065a0:	jmp    QWORD PTR [rip+0x7e72]        # 0x40e418
  4065a6:	nop
  4065a7:	nop
  4065a8:	jmp    QWORD PTR [rip+0x7e5a]        # 0x40e408
  4065ae:	nop
  4065af:	nop
  4065b0:	jmp    QWORD PTR [rip+0x7e4a]        # 0x40e400
  4065b6:	nop
  4065b7:	nop
  4065b8:	jmp    QWORD PTR [rip+0x7e3a]        # 0x40e3f8
  4065be:	nop
  4065bf:	nop
  4065c0:	jmp    QWORD PTR [rip+0x7e2a]        # 0x40e3f0
  4065c6:	nop
  4065c7:	nop
  4065c8:	jmp    QWORD PTR [rip+0x7e12]        # 0x40e3e0
  4065ce:	nop
  4065cf:	nop
  4065d0:	jmp    QWORD PTR [rip+0x7e02]        # 0x40e3d8
  4065d6:	nop
  4065d7:	nop
  4065d8:	jmp    QWORD PTR [rip+0x7df2]        # 0x40e3d0
  4065de:	nop
  4065df:	nop
  4065e0:	mov    rax,QWORD PTR [rip+0x7549]        # 0x40db30
  4065e7:	ret    
  4065e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4065f0:	mov    rax,rcx
  4065f3:	xchg   QWORD PTR [rip+0x7536],rax        # 0x40db30
  4065fa:	ret    
  4065fb:	nop
  4065fc:	nop
  4065fd:	nop
  4065fe:	nop
  4065ff:	nop
  406600:	jmp    QWORD PTR [rip+0x7faa]        # 0x40e5b0
  406606:	nop
  406607:	nop
  406608:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	jmp    QWORD PTR [rip+0x7daa]        # 0x40e3c0
  406616:	nop
  406617:	nop
  406618:	jmp    QWORD PTR [rip+0x7d9a]        # 0x40e3b8
  40661e:	nop
  40661f:	nop
  406620:	jmp    QWORD PTR [rip+0x7d8a]        # 0x40e3b0
  406626:	nop
  406627:	nop
  406628:	jmp    QWORD PTR [rip+0x7d7a]        # 0x40e3a8
  40662e:	nop
  40662f:	nop
  406630:	jmp    QWORD PTR [rip+0x7d6a]        # 0x40e3a0
  406636:	nop
  406637:	nop
  406638:	jmp    QWORD PTR [rip+0x7d5a]        # 0x40e398
  40663e:	nop
  40663f:	nop
  406640:	jmp    QWORD PTR [rip+0x7d4a]        # 0x40e390
  406646:	nop
  406647:	nop
  406648:	jmp    QWORD PTR [rip+0x7d3a]        # 0x40e388
  40664e:	nop
  40664f:	nop
  406650:	jmp    QWORD PTR [rip+0x7d2a]        # 0x40e380
  406656:	nop
  406657:	nop
  406658:	jmp    QWORD PTR [rip+0x7d1a]        # 0x40e378
  40665e:	nop
  40665f:	nop
  406660:	jmp    QWORD PTR [rip+0x7d0a]        # 0x40e370
  406666:	nop
  406667:	nop
  406668:	jmp    QWORD PTR [rip+0x7cfa]        # 0x40e368
  40666e:	nop
  40666f:	nop
  406670:	jmp    QWORD PTR [rip+0x7cea]        # 0x40e360
  406676:	nop
  406677:	nop
  406678:	jmp    QWORD PTR [rip+0x7cda]        # 0x40e358
  40667e:	nop
  40667f:	nop
  406680:	jmp    QWORD PTR [rip+0x7cca]        # 0x40e350
  406686:	nop
  406687:	nop
  406688:	jmp    QWORD PTR [rip+0x7cba]        # 0x40e348
  40668e:	nop
  40668f:	nop
  406690:	jmp    QWORD PTR [rip+0x7caa]        # 0x40e340
  406696:	nop
  406697:	nop
  406698:	jmp    QWORD PTR [rip+0x7c9a]        # 0x40e338
  40669e:	nop
  40669f:	nop
  4066a0:	jmp    QWORD PTR [rip+0x7c8a]        # 0x40e330
  4066a6:	nop
  4066a7:	nop
  4066a8:	jmp    QWORD PTR [rip+0x7c7a]        # 0x40e328
  4066ae:	nop
  4066af:	nop
  4066b0:	jmp    QWORD PTR [rip+0x7c6a]        # 0x40e320
  4066b6:	nop
  4066b7:	nop
  4066b8:	jmp    QWORD PTR [rip+0x7c5a]        # 0x40e318
  4066be:	nop
  4066bf:	nop
  4066c0:	jmp    QWORD PTR [rip+0x7c4a]        # 0x40e310
  4066c6:	nop
  4066c7:	nop
  4066c8:	jmp    QWORD PTR [rip+0x7c3a]        # 0x40e308
  4066ce:	nop
  4066cf:	nop
  4066d0:	push   r14
  4066d2:	push   r13
  4066d4:	push   r12
  4066d6:	push   rbp
  4066d7:	push   rdi
  4066d8:	push   rsi
  4066d9:	push   rbx
  4066da:	sub    rsp,0x70
  4066de:	mov    DWORD PTR [rsp+0xb0],ecx
  4066e5:	mov    QWORD PTR [rsp+0xb8],rdx
  4066ed:	call   0x404e20
  4066f2:	lea    rdx,[rip+0x1e7d]        # 0x408576
  4066f9:	mov    ecx,0x2
  4066fe:	call   0x406478
  406703:	lea    rdx,[rsp+0xb8]
  40670b:	lea    rcx,[rsp+0xb0]
  406713:	call   0x4037e0
  406718:	mov    rbx,QWORD PTR [rip+0x3591]        # 0x409cb0
  40671f:	mov    r13,rbx
  406722:	mov    r12,rbx
  406725:	mov    rbp,rbx
  406728:	mov    rdi,rbx
  40672b:	mov    rsi,rbx
  40672e:	mov    rdx,QWORD PTR [rsp+0xb8]
  406736:	mov    ecx,DWORD PTR [rsp+0xb0]
  40673d:	lea    r9,[rip+0x8fc]        # 0x407040
  406744:	lea    r8,[rip+0x1e46]        # 0x408591
  40674b:	mov    QWORD PTR [rsp+0x20],0x0
  406754:	call   0x404a30
  406759:	cmp    eax,0xffffffff
  40675c:	je     0x4068c1
  406762:	sub    eax,0x68
  406765:	cmp    eax,0x33
  406768:	ja     0x40686c
  40676e:	lea    rdx,[rip+0x1ebf]        # 0x408634
  406775:	movsxd rax,DWORD PTR [rdx+rax*4]
  406779:	add    rdx,rax
  40677c:	jmp    rdx
  40677e:	mov    rcx,QWORD PTR [rbx]
  406781:	call   0x401530
  406786:	test   eax,eax
  406788:	mov    DWORD PTR [rip+0x9d6],eax        # 0x407164
  40678e:	jns    0x40672e
  406790:	jmp    0x406898
  406795:	mov    rcx,QWORD PTR [r13+0x0]
  406799:	call   0x401530
  40679e:	test   eax,eax
  4067a0:	mov    DWORD PTR [rip+0x9c2],eax        # 0x407168
  4067a6:	jns    0x40672e
  4067a8:	jmp    0x406898
  4067ad:	mov    rcx,QWORD PTR [r12]
  4067b1:	call   0x4016d0
  4067b6:	test   eax,eax
  4067b8:	mov    DWORD PTR [rip+0x9ae],eax        # 0x40716c
  4067be:	jns    0x40672e
  4067c4:	jmp    0x406898
  4067c9:	mov    rcx,QWORD PTR [rbp+0x0]
  4067cd:	call   0x4016d0
  4067d2:	test   eax,eax
  4067d4:	mov    DWORD PTR [rip+0x996],eax        # 0x407170
  4067da:	jns    0x40672e
  4067e0:	jmp    0x406898
  4067e5:	mov    rcx,QWORD PTR [rdi]
  4067e8:	call   0x401630
  4067ed:	test   eax,eax
  4067ef:	mov    DWORD PTR [rip+0x97f],eax        # 0x407174
  4067f5:	jns    0x40672e
  4067fb:	jmp    0x406898
  406800:	mov    rcx,QWORD PTR [rsi]
  406803:	call   0x401630
  406808:	test   eax,eax
  40680a:	mov    DWORD PTR [rip+0x968],eax        # 0x407178
  406810:	js     0x406898
  406816:	cmp    eax,0x3e
  406819:	je     0x4068b7
  40681f:	jg     0x4068ac
  406825:	test   eax,eax
  406827:	jne    0x406880
  406829:	mov    DWORD PTR [rip+0x931],eax        # 0x407160
  40682f:	jmp    0x40672e
  406834:	mov    rcx,QWORD PTR [rip+0x945]        # 0x407180
  40683b:	call   0x402110
  406840:	jmp    0x40672e
  406845:	call   QWORD PTR [rip+0x7ba5]        # 0x40e3f0
  40684b:	lea    rcx,[rax+0x30]
  40684f:	xor    edx,edx
  406851:	call   0x4015a0
  406856:	cmp    DWORD PTR [rip+0x90f],0xffffffff        # 0x40716c
  40685d:	jne    0x4068e4
  406863:	cmp    DWORD PTR [rip+0x8fa],0xffffffff        # 0x407164
  40686a:	jne    0x4068e4
  40686c:	call   QWORD PTR [rip+0x7b7e]        # 0x40e3f0
  406872:	lea    rcx,[rax+0x60]
  406876:	mov    edx,0x1
  40687b:	call   0x4015a0
  406880:	lea    rcx,[rip+0x1cf0]        # 0x408577
  406887:	mov    edx,eax
  406889:	call   0x402170
  40688e:	mov    DWORD PTR [rip+0x8c8],0xffffffff        # 0x407160
  406898:	mov    eax,0x1
  40689d:	add    rsp,0x70
  4068a1:	pop    rbx
  4068a2:	pop    rsi
  4068a3:	pop    rdi
  4068a4:	pop    rbp
  4068a5:	pop    r12
  4068a7:	pop    r13
  4068a9:	pop    r14
  4068ab:	ret    
  4068ac:	lea    edx,[rax-0xb4]
  4068b2:	cmp    edx,0x1
  4068b5:	ja     0x406880
  4068b7:	mov    eax,0x2
  4068bc:	jmp    0x406829
  4068c1:	mov    rsi,QWORD PTR [rip+0x33f8]        # 0x409cc0
  4068c8:	mov    eax,DWORD PTR [rsp+0xb0]
  4068cf:	movsxd r8,DWORD PTR [rsi]
  4068d2:	cmp    r8d,eax
  4068d5:	je     0x40686c
  4068d7:	cmp    DWORD PTR [rip+0x896],0xffffffff        # 0x407174
  4068de:	je     0x406856
  4068e4:	xor    ebx,ebx
  4068e6:	cmp    r8d,eax
  4068e9:	jge    0x406a3b
  4068ef:	lea    rdi,[rsp+0x30]
  4068f4:	mov    rbp,QWORD PTR [rip+0x7c9d]        # 0x40e598
  4068fb:	mov    r12,QWORD PTR [rip+0x7b26]        # 0x40e428
  406902:	jmp    0x40692b
  406904:	lea    rcx,[rip+0x1ccf]        # 0x4085da
  40690b:	mov    rdx,r13
  40690e:	call   0x402170
  406913:	mov    eax,0x1
  406918:	movsxd r8,DWORD PTR [rsi]
  40691b:	or     ebx,eax
  40691d:	cmp    r8d,DWORD PTR [rsp+0xb0]
  406925:	jge    0x406a3b
  40692b:	lea    eax,[r8+0x1]
  40692f:	mov    rdx,rdi
  406932:	mov    DWORD PTR [rsi],eax
  406934:	mov    rax,QWORD PTR [rsp+0xb8]
  40693c:	mov    r13,QWORD PTR [rax+r8*8]
  406940:	mov    rcx,r13
  406943:	call   rbp
  406945:	test   eax,eax
  406947:	js     0x406a0e
  40694d:	movzx  eax,WORD PTR [rsp+0x36]
  406952:	and    ax,0xf000
  406956:	cmp    ax,0x8000
  40695a:	jne    0x406904
  40695c:	lea    rdx,[rip+0x1bc1]        # 0x408524
  406963:	mov    rcx,r13
  406966:	call   0x406518
  40696b:	test   rax,rax
  40696e:	mov    r14,rax
  406971:	je     0x406a87
  406977:	mov    r9,r14
  40697a:	mov    r8d,0x1
  406980:	mov    edx,0x8
  406985:	mov    rcx,rdi
  406988:	call   0x406500
  40698d:	sub    rax,0x1
  406991:	jne    0x4069ed
  406993:	lea    rdx,[rip+0x1c86]        # 0x408620
  40699a:	mov    r8d,0x8
  4069a0:	mov    rcx,rdi
  4069a3:	call   0x4064b8
  4069a8:	test   eax,eax
  4069aa:	je     0x406a71
  4069b0:	lea    rdx,[rip+0x1c72]        # 0x408629
  4069b7:	mov    r8d,0x8
  4069bd:	mov    rcx,rdi
  4069c0:	call   0x4064b8
  4069c5:	test   eax,eax
  4069c7:	jne    0x406a42
  4069c9:	mov    rcx,r13
  4069cc:	mov    r8d,0x1
  4069d2:	mov    rdx,r14
  4069d5:	call   0x401d60
  4069da:	mov    r13d,eax
  4069dd:	mov    rcx,r14
  4069e0:	call   0x406530
  4069e5:	mov    eax,r13d
  4069e8:	jmp    0x406918
  4069ed:	lea    rcx,[rip+0x1c04]        # 0x4085f8
  4069f4:	mov    rdx,r13
  4069f7:	call   0x402170
  4069fc:	mov    rcx,r14
  4069ff:	call   0x406530
  406a04:	mov    eax,0x1
  406a09:	jmp    0x406918
  406a0e:	call   r12
  406a11:	cmp    DWORD PTR [rax],0x2
  406a14:	je     0x406aa0
  406a1a:	call   r12
  406a1d:	mov    ecx,DWORD PTR [rax]
  406a1f:	call   0x406458
  406a24:	lea    rcx,[rip+0x1b7d]        # 0x4085a8
  406a2b:	mov    r8,rax
  406a2e:	mov    rdx,r13
  406a31:	call   0x402170
  406a36:	jmp    0x406913
  406a3b:	mov    eax,ebx
  406a3d:	jmp    0x40689d
  406a42:	mov    rcx,r14
  406a45:	call   0x406480
  406a4a:	mov    rcx,r13
  406a4d:	mov    rdx,r14
  406a50:	mov    DWORD PTR [rip+0x66ba],0x0        # 0x40d114
  406a5a:	mov    DWORD PTR [rip+0x66ac],0x0        # 0x40d110
  406a64:	call   0x401760
  406a69:	mov    r13d,eax
  406a6c:	jmp    0x4069dd
  406a71:	mov    rcx,r13
  406a74:	xor    r8d,r8d
  406a77:	mov    rdx,r14
  406a7a:	call   0x401d60
  406a7f:	mov    r13d,eax
  406a82:	jmp    0x4069dd
  406a87:	lea    rcx,[rip+0x1a9a]        # 0x408528
  406a8e:	mov    rdx,r13
  406a91:	call   0x402170
  406a96:	mov    eax,0x1
  406a9b:	jmp    0x406918
  406aa0:	lea    rcx,[rip+0x1aed]        # 0x408594
  406aa7:	mov    rdx,r13
  406aaa:	call   0x402170
  406aaf:	jmp    0x406913
  406ab4:	nop
  406ab5:	nop
  406ab6:	nop
  406ab7:	nop
  406ab8:	nop
  406ab9:	nop
  406aba:	nop
  406abb:	nop
  406abc:	nop
  406abd:	nop
  406abe:	nop
  406abf:	nop
  406ac0:	(bad)  
  406ac1:	(bad)  
  406ac2:	(bad)  
  406ac3:	(bad)  
  406ac4:	(bad)  
  406ac5:	(bad)  
  406ac6:	(bad)  
  406ac7:	inc    DWORD PTR [rax]
  406ac9:	add    BYTE PTR [rax],al
  406acb:	add    BYTE PTR [rax],al
  406acd:	add    BYTE PTR [rax],al
  406acf:	add    bh,bh
  406ad1:	(bad)  
  406ad2:	(bad)  
  406ad3:	(bad)  
  406ad4:	(bad)  
  406ad5:	(bad)  
  406ad6:	(bad)  
  406ad7:	inc    DWORD PTR [rax]
  406ad9:	add    BYTE PTR [rax],al
  406adb:	add    BYTE PTR [rax],al
  406add:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000407000 <.data>:
  407000:	or     al,BYTE PTR [rax]
	...
  40703e:	add    BYTE PTR [rax],al
  407040:	add    al,0x87
  407042:	add    BYTE PTR [rax],al
  407045:	add    BYTE PTR [rax],al
  407047:	add    BYTE PTR [rcx],al
	...
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rsi+0x0],dl
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    BYTE PTR [rdi],cl
  407061:	xchg   DWORD PTR [rax+0x0],eax
  407064:	add    BYTE PTR [rax],al
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rax],eax
	...
  407076:	add    BYTE PTR [rax],al
  407078:	xchg   edi,eax
  407079:	add    BYTE PTR [rax],al
  40707b:	add    BYTE PTR [rax],al
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rbx],bl
  407081:	xchg   DWORD PTR [rax+0x0],eax
  407084:	add    BYTE PTR [rax],al
  407086:	add    BYTE PTR [rax],al
  407088:	add    DWORD PTR [rax],eax
	...
  407096:	add    BYTE PTR [rax],al
  407098:	cwde   
  407099:	add    BYTE PTR [rax],al
  40709b:	add    BYTE PTR [rax],al
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rsi],ah
  4070a1:	xchg   DWORD PTR [rax+0x0],eax
  4070a4:	add    BYTE PTR [rax],al
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	add    DWORD PTR [rax],eax
	...
  4070b6:	add    BYTE PTR [rax],al
  4070b8:	cdq    
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rax],al
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rdx],dh
  4070c1:	xchg   DWORD PTR [rax+0x0],eax
  4070c4:	add    BYTE PTR [rax],al
  4070c6:	add    BYTE PTR [rax],al
  4070c8:	add    DWORD PTR [rax],eax
	...
  4070d6:	add    BYTE PTR [rax],al
  4070d8:	(bad)  
  4070d9:	add    BYTE PTR [rax],al
  4070db:	add    BYTE PTR [rax],al
  4070dd:	add    BYTE PTR [rax],al
  4070df:	add    BYTE PTR [rsi],bh
  4070e1:	xchg   DWORD PTR [rax+0x0],eax
  4070e4:	add    BYTE PTR [rax],al
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	add    DWORD PTR [rax],eax
	...
  4070f6:	add    BYTE PTR [rax],al
  4070f8:	fwait
  4070f9:	add    BYTE PTR [rax],al
  4070fb:	add    BYTE PTR [rax],al
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rbx-0x79],cl
  407102:	add    BYTE PTR [rax],al
	...
  407115:	add    BYTE PTR [rax],al
  407117:	add    BYTE PTR [rsi+0x0],dh
  40711a:	add    BYTE PTR [rax],al
  40711c:	add    BYTE PTR [rax],al
  40711e:	add    BYTE PTR [rax],al
  407120:	push   rbx
  407121:	xchg   DWORD PTR [rax+0x0],eax
	...
  407138:	push   0x0
	...
  40715d:	add    BYTE PTR [rax],al
  40715f:	add    bh,bh
  407161:	(bad)  
  407162:	(bad)  
  407163:	(bad)  
  407164:	(bad)  
  407165:	(bad)  
  407166:	(bad)  
  407167:	(bad)  
  407168:	(bad)  
  407169:	(bad)  
  40716a:	(bad)  
  40716b:	(bad)  
  40716c:	(bad)  
  40716d:	(bad)  
  40716e:	(bad)  
  40716f:	(bad)  
  407170:	(bad)  
  407171:	(bad)  
  407172:	(bad)  
  407173:	(bad)  
  407174:	(bad)  
  407175:	(bad)  
  407176:	(bad)  
  407177:	(bad)  
  407178:	(bad)  
  407179:	(bad)  
  40717a:	(bad)  
  40717b:	inc    DWORD PTR [rax]
  40717d:	add    BYTE PTR [rax],al
  40717f:	add    al,al
  407181:	mov    BYTE PTR [rax+0x0],al
	...
  4071c0:	(bad)  
  4071c1:	add    BYTE PTR [rax],al
  4071c3:	add    BYTE PTR [rcx],al
  4071c5:	add    BYTE PTR [rax],al
  4071c7:	add    BYTE PTR [rcx],al
  4071c9:	add    BYTE PTR [rax],al
  4071cb:	add    BYTE PTR [rax],al
  4071cd:	add    BYTE PTR [rax],al
  4071cf:	add    bl,al
  4071d1:	xchg   esi,eax
  4071d2:	add    BYTE PTR [rax],al
	...
  4071dd:	add    BYTE PTR [rax],al
  4071df:	add    al,bl
  4071e1:	push   0x40
	...
  4071ef:	add    bh,bh
  4071f1:	(bad)  
  4071f2:	(bad)  
  4071f3:	(bad)  
  4071f4:	(bad)  
  4071f5:	(bad)  
  4071f6:	(bad)  
  4071f7:	inc    DWORD PTR [rax]
  4071f9:	add    BYTE PTR [rax],al
  4071fb:	add    BYTE PTR [rax],al
  4071fd:	add    BYTE PTR [rax],al
  4071ff:	add    bh,bh
	...
  40720d:	add    BYTE PTR [rax],al
  40720f:	add    BYTE PTR [rdx],al
	...
  40721d:	add    BYTE PTR [rax],al
  40721f:	add    bh,bh
  407221:	(bad)  
  407222:	(bad)  
  407223:	inc    DWORD PTR [rax]
	...
  40722d:	add    BYTE PTR [rax],al
  40722f:	add    al,ah
  407231:	add    BYTE PTR gs:[rax],al
  407235:	add    BYTE PTR [rax],al
  407237:	add    al,dh
  407239:	add    BYTE PTR gs:[rax],al
  40723d:	add    BYTE PTR [rax],al
  40723f:	add    BYTE PTR [rdx],dh
  407241:	movabs ds:0x2b992ddf,al
  40724a:	add    BYTE PTR [rax],al
  40724c:	add    BYTE PTR [rax],al
  40724e:	add    BYTE PTR [rax],al
  407250:	int    0x5d
  407252:	and    dl,dl
  407254:	data16 (bad) 
  407256:	(bad)  
  407257:	inc    DWORD PTR [rax]
  407259:	add    BYTE PTR [rax],al
  40725b:	add    BYTE PTR [rax],al
  40725d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000408000 <.rdata>:
  408000:	push   rbp
  408001:	outs   dx,BYTE PTR ds:[rsi]
  408002:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  408006:	outs   dx,BYTE PTR ds:[rsi]
  408007:	and    BYTE PTR [rdi+0x53],cl
  40800a:	rex.B
  40800b:	rex.X
  40800c:	rex.WB cmp spl,BYTE PTR [r8]
  40800f:	and    eax,0xa73
  408014:	add    BYTE PTR [rax],al
  408016:	add    BYTE PTR [rax],al
  408018:	push   rbp
  408019:	jae    0x40807c
  40801b:	cmp    ah,BYTE PTR gs:[eax]
  40801f:	and    eax,0x6f3c2073
  408024:	jo     0x40809a
  408026:	imul   ebp,DWORD PTR [rdi+0x6e],0x3e297328
  40802d:	and    BYTE PTR [rbp+0x6c],ah
  408030:	data16 imul bp,WORD PTR [rbp+riz*2+0x28],0x2973
  408038:	or     al,BYTE PTR [rax]
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rax],al
  40803e:	add    BYTE PTR [rax],al
  408040:	and    BYTE PTR [rbp+0x70],dl
  408043:	fs (bad) 
  408045:	je     0x4080ac
  408047:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40804b:	and    BYTE PTR [rbp+0x4c],al
  40804e:	rex.RX and BYTE PTR [rax+0x65],r13b
  408052:	(bad)  
  408053:	fs gs jb 0x408077
  408057:	outs   dx,DWORD PTR ds:[rsi]
  408058:	data16 and BYTE PTR [rbp+0x4c],al
  40805c:	rex.RX and BYTE PTR [rsi+0x69],r12b
  408060:	ins    BYTE PTR es:[rdi],dx
  408061:	gs jae 0x40806e
  408064:	add    BYTE PTR [rax],ah
  408066:	push   rsp
  408067:	push   0x706f2065
  40806c:	je     0x4080d7
  40806e:	outs   dx,DWORD PTR ds:[rsi]
  40806f:	outs   dx,BYTE PTR ds:[rsi]
  408070:	jae    0x408092
  408072:	(bad)  
  408073:	jb     0x4080da
  408075:	cmp    cl,BYTE PTR [rdx]
  408077:	add    BYTE PTR [rax],ah
  408079:	and    BYTE PTR [rip+0x706e692d],ch        # 0x70aee9ac
  40807f:	jne    0x4080f5
  408081:	sub    eax,0x6863616d
  408086:	and    BYTE PTR [rbp*2+0x69686361],bh
  40808d:	outs   dx,BYTE PTR ds:[rsi]
  40808e:	gs and BYTE PTR ds:[rax],ah
  408092:	and    BYTE PTR [rax],ah
  408094:	and    BYTE PTR [rax],ah
  408096:	push   rbx
  408097:	gs je  0x4080ba
  40809a:	imul   ebp,DWORD PTR [rsi+0x70],0x6d207475
  4080a1:	(bad)  
  4080a2:	movsxd ebp,DWORD PTR [rax+0x69]
  4080a5:	outs   dx,BYTE PTR ds:[rsi]
  4080a6:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4080ab:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4080b0:	cmp    al,0x6d
  4080b2:	(bad)  
  4080b3:	movsxd ebp,DWORD PTR [rax+0x69]
  4080b6:	outs   dx,BYTE PTR ds:[rsi]
  4080b7:	gs or  ah,BYTE PTR ds:[rax]
  4080bb:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b5efee
  4080c1:	jo     0x408138
  4080c3:	je     0x4080f2
  4080c5:	ins    DWORD PTR es:[rdi],dx
  4080c6:	(bad)  
  4080c7:	movsxd ebp,DWORD PTR [rax+0x20]
  4080ca:	cmp    al,0x6d
  4080cc:	(bad)  
  4080cd:	movsxd ebp,DWORD PTR [rax+0x69]
  4080d0:	outs   dx,BYTE PTR ds:[rsi]
  4080d1:	gs and BYTE PTR ds:[rax],ah
  4080d5:	and    BYTE PTR [rax],ah
  4080d7:	and    BYTE PTR [rbx+0x65],dl
  4080da:	je     0x4080fc
  4080dc:	outs   dx,DWORD PTR ds:[rsi]
  4080dd:	jne    0x408153
  4080df:	jo     0x408156
  4080e1:	je     0x408103
  4080e3:	ins    DWORD PTR es:[rdi],dx
  4080e4:	(bad)  
  4080e5:	movsxd ebp,DWORD PTR [rax+0x69]
  4080e8:	outs   dx,BYTE PTR ds:[rsi]
  4080e9:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4080ee:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4080f3:	cmp    al,0x6d
  4080f5:	(bad)  
  4080f6:	movsxd ebp,DWORD PTR [rax+0x69]
  4080f9:	outs   dx,BYTE PTR ds:[rsi]
  4080fa:	gs or  ah,BYTE PTR ds:[rax]
  4080fe:	and    BYTE PTR [rip+0x706e692d],ch        # 0x70aeea31
  408104:	jne    0x40817a
  408106:	sub    eax,0x65707974
  40810b:	and    BYTE PTR [rsp+rsi*2],bh
  40810e:	jns    0x408180
  408110:	gs and BYTE PTR ds:[rax],ah
  408114:	and    BYTE PTR [rax],ah
  408116:	and    BYTE PTR [rax],ah
  408118:	and    BYTE PTR [rax],ah
  40811a:	and    BYTE PTR [rbx+0x65],dl
  40811d:	je     0x40813f
  40811f:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
  408126:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65707974
  40812e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  408132:	cmp    al,0x74
  408134:	jns    0x4081a6
  408136:	gs or  ah,BYTE PTR ds:[rax]
  40813a:	and    BYTE PTR [rip+0x74756f2d],ch        # 0x74b5f06d
  408140:	jo     0x4081b7
  408142:	je     0x408171
  408144:	je     0x4081bf
  408146:	jo     0x4081ad
  408148:	and    BYTE PTR [rsp+rsi*2],bh
  40814b:	jns    0x4081bd
  40814d:	gs and BYTE PTR ds:[rax],ah
  408151:	and    BYTE PTR [rax],ah
  408153:	and    BYTE PTR [rax],ah
  408155:	and    BYTE PTR [rax],ah
  408157:	push   rbx
  408158:	gs je  0x40817b
  40815b:	outs   dx,DWORD PTR ds:[rsi]
  40815c:	jne    0x4081d2
  40815e:	jo     0x4081d5
  408160:	je     0x408182
  408162:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7974
  408169:	jo     0x4081d0
  40816b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40816f:	cmp    al,0x74
  408171:	jns    0x4081e3
  408173:	gs or  ah,BYTE PTR ds:[rax]
  408177:	and    BYTE PTR [rip+0x706e692d],ch        # 0x70aeeaaa
  40817d:	jne    0x4081f3
  40817f:	sub    eax,0x6261736f
  408184:	imul   esp,DWORD PTR [rax],0x61736f3c
  40818a:	(bad)  
  40818b:	imul   edi,DWORD PTR [rsi],0x20202020
  408191:	and    BYTE PTR [rax],ah
  408193:	and    BYTE PTR [rbx+0x65],dl
  408196:	je     0x4081b8
  408198:	imul   ebp,DWORD PTR [rsi+0x70],0x4f207475
  40819f:	push   rbx
  4081a0:	rex.B
  4081a1:	rex.X
  4081a2:	rex.WB and BYTE PTR [r15+rbp*2+0x20],sil
  4081a7:	cmp    al,0x6f
  4081a9:	jae    0x40820c
  4081ab:	(bad)  
  4081ac:	imul   edi,DWORD PTR [rsi],0x2d20200a
  4081b2:	sub    eax,0x7074756f
  4081b7:	jne    0x40822d
  4081b9:	sub    eax,0x6261736f
  4081be:	imul   esp,DWORD PTR [rax],0x61736f3c
  4081c4:	(bad)  
  4081c5:	imul   edi,DWORD PTR [rsi],0x20202020
  4081cb:	and    BYTE PTR [rax],ah
  4081cd:	push   rbx
  4081ce:	gs je  0x4081f1
  4081d1:	outs   dx,DWORD PTR ds:[rsi]
  4081d2:	jne    0x408248
  4081d4:	jo     0x40824b
  4081d6:	je     0x4081f8
  4081d8:	rex.WRXB push r11
  4081da:	rex.B
  4081db:	rex.X
  4081dc:	rex.WB and BYTE PTR [r15+rbp*2+0x20],sil
  4081e1:	cmp    al,0x6f
  4081e3:	jae    0x408246
  4081e5:	(bad)  
  4081e6:	imul   edi,DWORD PTR [rsi],0x2d20200a
  4081ec:	push   0x682d2d20
  4081f1:	gs ins BYTE PTR es:[rdi],dx
  4081f3:	jo     0x408215
  4081f5:	and    BYTE PTR [rax],ah
  4081f7:	and    BYTE PTR [rax],ah
  4081f9:	and    BYTE PTR [rax],ah
  4081fb:	and    BYTE PTR [rax],ah
  4081fd:	and    BYTE PTR [rax],ah
  4081ff:	and    BYTE PTR [rax],ah
  408201:	and    BYTE PTR [rax],ah
  408203:	and    BYTE PTR [rax],ah
  408205:	and    BYTE PTR [rax],ah
  408207:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
  40820f:	je     0x408279
  408211:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
  408218:	jb     0x408287
  40821a:	(bad)  
  40821b:	je     0x408286
  40821d:	outs   dx,DWORD PTR ds:[rsi]
  40821e:	outs   dx,BYTE PTR ds:[rsi]
  40821f:	or     ah,BYTE PTR [rax]
  408221:	and    BYTE PTR [rip+0x2d2d2076],ch        # 0x2d6da29d
  408227:	jbe    0x40828e
  408229:	jb     0x40829e
  40822b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  408232:	and    BYTE PTR [rax],ah
  408234:	and    BYTE PTR [rax],ah
  408236:	and    BYTE PTR [rax],ah
  408238:	and    BYTE PTR [rax],ah
  40823a:	and    BYTE PTR [rax],ah
  40823c:	and    BYTE PTR [rax],ah
  40823e:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
  408246:	je     0x4082b0
  408248:	and    BYTE PTR gs:[rsi+0x65],dh
  40824c:	jb     0x4082c1
  40824e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  408255:	(bad)  
  408256:	gs jb  0x408279
  408259:	outs   dx,DWORD PTR ds:[rsi]
  40825a:	data16 and BYTE PTR [rip+0x3c000a73],ah        # 0x3c408cd4
  408261:	push   0x3a707474
  408266:	(bad)  
  408267:	(bad)  
  408268:	ja     0x4082e1
  40826a:	ja     0x40829a
  40826c:	jae    0x4082dd
  40826e:	jne    0x4082e2
  408270:	movsxd esp,DWORD PTR [rbp+0x77]
  408273:	(bad)  
  408274:	jb     0x4082db
  408276:	outs   dx,DWORD PTR cs:[rsi]
  408278:	jb     0x4082e1
  40827a:	(bad)  
  40827b:	(bad)  
  40827c:	jne    0x4082e5
  40827e:	jp     0x4082e9
  408280:	ins    BYTE PTR es:[rdi],dx
  408281:	ins    BYTE PTR es:[rdi],dx
  408282:	(bad)  
  408283:	(bad)  
  408284:	add    BYTE PTR ds:[rdx+0x65],dl
  408288:	jo     0x4082f9
  40828a:	jb     0x408300
  40828c:	and    BYTE PTR [rdx+0x75],ah
  40828f:	addr32 jae 0x4082b2
  408292:	je     0x408303
  408294:	and    BYTE PTR [rip+0x6c000a73],ah        # 0x6c408d0d
  40829a:	xor    DWORD PTR [rdi+0x6d],ebp
  40829d:	add    BYTE PTR [rbx+0x31],ch
  4082a0:	outs   dx,DWORD PTR ds:[rsi]
  4082a1:	ins    DWORD PTR es:[rdi],dx
  4082a2:	add    BYTE PTR [rax+0x38],bh
  4082a5:	ss pop rdi
  4082a7:	ss xor al,0x0
  4082aa:	js     0x4082e4
  4082ac:	ss sub eax,0x6e003436
  4082b2:	outs   dx,DWORD PTR ds:[rsi]
  4082b3:	outs   dx,BYTE PTR ds:[rsi]
  4082b4:	add    BYTE PTR gs:[rbp+0x6e],dl
  4082b8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4082bc:	outs   dx,BYTE PTR ds:[rsi]
  4082bd:	and    BYTE PTR [rbp+0x61],ch
  4082c0:	movsxd ebp,DWORD PTR [rax+0x69]
  4082c3:	outs   dx,BYTE PTR ds:[rsi]
  4082c4:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4082c9:	cmp    ah,BYTE PTR gs:[rax]
  4082cc:	and    eax,0x72000a73
  4082d1:	gs ins BYTE PTR es:[rdi],dx
  4082d3:	add    BYTE PTR [rbp+0x78],ah
  4082d6:	movsxd eax,DWORD PTR gs:[rax]
  4082d9:	fs jns 0x40834a
  4082dc:	add    BYTE PTR [rbp+0x6e],dl
  4082df:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4082e3:	outs   dx,BYTE PTR ds:[rsi]
  4082e4:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4082e8:	cmp    ah,BYTE PTR gs:[rax]
  4082eb:	and    eax,0x55000a73
  4082f0:	outs   dx,BYTE PTR ds:[rsi]
  4082f1:	jae    0x408368
  4082f3:	jo     0x408365
  4082f5:	outs   dx,DWORD PTR ds:[rsi]
  4082f6:	jb     0x40836c
  4082f8:	gs and BYTE PTR fs:[rbp+0x49],al
  4082fd:	pop    rdi
  4082fe:	rex.XB
  4082ff:	rex.WR
  408300:	push   r11
  408302:	push   rbx
  408303:	cmp    ah,BYTE PTR [rax]
  408305:	and    eax,0xa64
  40830a:	add    BYTE PTR [rax],al
  40830c:	add    BYTE PTR [rax],al
  40830e:	add    BYTE PTR [rax],al
  408310:	and    eax,0x46203a73
  408315:	(bad)  
  408316:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40831e:	jae    0x408385
  408320:	imul   esp,DWORD PTR gs:[rax],0x74
  408324:	outs   dx,DWORD PTR ds:[rsi]
  408325:	and    BYTE PTR [rbp+0x4c],al
  408328:	rex.RX and BYTE PTR [rax+0x65],r13b
  40832c:	(bad)  
  40832d:	fs gs jb 0x40833b
  408331:	add    BYTE PTR [rax],al
  408333:	add    BYTE PTR [rax],al
  408335:	add    BYTE PTR [rax],al
  408337:	add    BYTE PTR [rip+0x4e203a73],ah        # 0x4e60bdb0
  40833d:	outs   dx,DWORD PTR ds:[rsi]
  40833e:	je     0x408360
  408340:	(bad)  
  408341:	outs   dx,BYTE PTR ds:[rsi]
  408342:	and    BYTE PTR [rbp+0x4c],al
  408345:	rex.RX and BYTE PTR [rsi+0x69],r12b
  408349:	ins    BYTE PTR es:[rdi],dx
  40834a:	and    BYTE PTR gs:[rip+0x6f727720],ch        # 0x6fb2fa71
  408351:	outs   dx,BYTE PTR ds:[rsi]
  408352:	and    BYTE PTR [ebp+0x61],ch
  408356:	imul   esp,DWORD PTR [ebx+0x20],0x65747962
  40835e:	jae    0x408380
  408360:	(bad)  
  408361:	je     0x408383
  408363:	je     0x4083cd
  408365:	and    BYTE PTR gs:[rbx+0x74],dh
  408369:	(bad)  
  40836a:	jb     0x4083e0
  40836c:	or     al,BYTE PTR [rax]
  40836e:	add    BYTE PTR [rax],al
  408370:	and    eax,0x55203a73
  408375:	outs   dx,BYTE PTR ds:[rsi]
  408376:	jae    0x4083ed
  408378:	jo     0x4083ea
  40837a:	outs   dx,DWORD PTR ds:[rsi]
  40837b:	jb     0x4083f1
  40837d:	gs and BYTE PTR fs:[rbp+0x49],al
  408382:	pop    rdi
  408383:	push   rsi
  408384:	rex.RB push r10
  408386:	push   rbx
  408387:	rex.WB
  408388:	rex.WRXB
  408389:	rex.WRX cmp r12b,BYTE PTR [rax]
  40838c:	and    eax,0x73692064
  408391:	and    BYTE PTR [rsi+0x6f],ch
  408394:	je     0x4083b6
  408396:	and    eax,0xa64
  40839b:	add    BYTE PTR [rax],al
  40839d:	add    BYTE PTR [rax],al
  40839f:	add    BYTE PTR [rip+0x55203a73],ah        # 0x5560be18
  4083a5:	outs   dx,BYTE PTR ds:[rsi]
  4083a6:	ins    DWORD PTR es:[rdi],dx
  4083a7:	(bad)  
  4083a8:	je     0x40840d
  4083aa:	push   0x45206465
  4083af:	rex.WB pop r15
  4083b1:	rex.XB
  4083b2:	rex.WR
  4083b3:	push   r11
  4083b5:	push   rbx
  4083b6:	cmp    ah,BYTE PTR [rax]
  4083b8:	and    eax,0x73692064
  4083bd:	and    BYTE PTR [rsi+0x6f],ch
  4083c0:	je     0x4083e2
  4083c2:	and    eax,0xa64
  4083c7:	add    BYTE PTR [rip+0x55203a73],ah        # 0x5560be40
  4083cd:	outs   dx,BYTE PTR ds:[rsi]
  4083ce:	ins    DWORD PTR es:[rdi],dx
  4083cf:	(bad)  
  4083d0:	je     0x408435
  4083d2:	push   0x65206465
  4083d7:	pop    rdi
  4083d8:	ins    DWORD PTR es:[rdi],dx
  4083d9:	(bad)  
  4083da:	movsxd ebp,DWORD PTR [rax+0x69]
  4083dd:	outs   dx,BYTE PTR ds:[rsi]
  4083de:	cmp    ah,BYTE PTR gs:[rax]
  4083e1:	and    eax,0x73692064
  4083e6:	and    BYTE PTR [rsi+0x6f],ch
  4083e9:	je     0x40840b
  4083eb:	and    eax,0xa64
  4083f0:	and    eax,0x55203a73
  4083f5:	outs   dx,BYTE PTR ds:[rsi]
  4083f6:	ins    DWORD PTR es:[rdi],dx
  4083f7:	(bad)  
  4083f8:	je     0x40845d
  4083fa:	push   0x65206465
  4083ff:	pop    rdi
  408400:	je     0x40847b
  408402:	jo     0x408469
  408404:	cmp    ah,BYTE PTR [rax]
  408406:	and    eax,0x73692064
  40840b:	and    BYTE PTR [rsi+0x6f],ch
  40840e:	je     0x408430
  408410:	and    eax,0xa64
  408415:	add    BYTE PTR [rax],al
  408417:	add    BYTE PTR [rip+0x55203a73],ah        # 0x5560be90
  40841d:	outs   dx,BYTE PTR ds:[rsi]
  40841e:	ins    DWORD PTR es:[rdi],dx
  40841f:	(bad)  
  408420:	je     0x408485
  408422:	push   0x45206465
  408427:	rex.WB pop r15
  408429:	rex.WRXB push r11
  40842b:	rex.B
  40842c:	rex.X
  40842d:	rex.WB cmp spl,BYTE PTR [r8]
  408430:	and    eax,0x73692064
  408435:	and    BYTE PTR [rsi+0x6f],ch
  408438:	je     0x40845a
  40843a:	and    eax,0xa64
  40843f:	add    BYTE PTR [rip+0x46203a73],ah        # 0x4660beb8
  408445:	(bad)  
  408446:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40844e:	jne    0x4084c0
  408450:	fs (bad) 
  408452:	je     0x4084b9
  408454:	and    BYTE PTR [rbp+0x4c],al
  408457:	rex.RX and BYTE PTR [rax+0x65],r13b
  40845b:	(bad)  
  40845c:	fs gs jb 0x40849a
  408460:	and    BYTE PTR [rip+0xa73],ah        # 0x408ed9
  408466:	add    BYTE PTR [rax],al
  408468:	and    eax,0x46203a73
  40846d:	(bad)  
  40846e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408476:	jb     0x4084dd
  408478:	(bad)  
  408479:	and    BYTE PTR fs:[rbp+0x4c],al
  40847d:	rex.RX and BYTE PTR [rax+0x65],r13b
  408481:	(bad)  
  408482:	fs gs jb 0x408490
  408486:	add    BYTE PTR [rax],al
  408488:	and    eax,0x66203a73
  40848d:	(bad)  
  40848e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408496:	jae    0x4084fd
  408498:	imul   esp,DWORD PTR gs:[rax],0x74
  40849c:	outs   dx,DWORD PTR ds:[rsi]
  40849d:	and    BYTE PTR [rsi+0x65],ch
  4084a0:	js     0x408516
  4084a2:	and    BYTE PTR [rcx+0x72],ah
  4084a5:	movsxd ebp,DWORD PTR [rax+0x69]
  4084a8:	jbe    0x40850f
  4084aa:	and    BYTE PTR [rax+0x65],ch
  4084ad:	(bad)  
  4084ae:	fs gs jb 0x4084bc
  4084b2:	add    BYTE PTR [rax],al
  4084b4:	add    BYTE PTR [rax],al
  4084b6:	add    BYTE PTR [rax],al
  4084b8:	and    eax,0x66203a73
  4084bd:	(bad)  
  4084be:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4084c6:	jb     0x40852d
  4084c8:	(bad)  
  4084c9:	and    BYTE PTR fs:[rcx+0x72],ah
  4084cd:	movsxd ebp,DWORD PTR [rax+0x69]
  4084d0:	jbe    0x408537
  4084d2:	and    BYTE PTR [rax+0x65],ch
  4084d5:	(bad)  
  4084d6:	fs gs jb 0x4084e4
  4084da:	add    BYTE PTR [rax+0xa],ah
  4084dd:	add    BYTE PTR [rax],al
  4084df:	add    BYTE PTR [rip+0x64203a73],ah        # 0x6460bf58
  4084e5:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x6620746f
  4084ed:	imul   ebp,DWORD PTR [rsi+0x64],0x76206120
  4084f4:	(bad)  
  4084f5:	ins    BYTE PTR es:[rdi],dx
  4084f6:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x69686372
  4084fe:	jbe    0x408565
  408500:	and    BYTE PTR [rax+0x65],ch
  408503:	(bad)  
  408504:	fs gs jb 0x408512
  408508:	add    BYTE PTR [rip+0x62203a73],ah        # 0x6260bf81
  40850e:	(bad)  
  40850f:	and    BYTE PTR fs:[rcx+0x72],ah
  408513:	movsxd ebp,DWORD PTR [rax+0x69]
  408516:	jbe    0x40857d
  408518:	and    BYTE PTR [rsi+0x69],ah
  40851b:	ins    BYTE PTR es:[rdi],dx
  40851c:	and    BYTE PTR gs:[rsi+0x61],ch
  408520:	ins    DWORD PTR es:[rdi],dx
  408521:	or     al,BYTE PTR gs:[rax]
  408524:	jb     0x408551
  408526:	(bad)  
  408527:	add    BYTE PTR [rcx+0x6e],cl
  40852a:	jo     0x4085a1
  40852c:	je     0x40854e
  40852e:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  408535:	jae    0x40855e
  408537:	and    BYTE PTR [rcx+0x73],ch
  40853a:	and    BYTE PTR [rsi+0x6f],ch
  40853d:	je     0x40855f
  40853f:	jb     0x4085a6
  408541:	(bad)  
  408542:	fs (bad) 
  408544:	(bad)  
  408545:	ins    BYTE PTR es:[rdi],dx
  408546:	or     al,BYTE PTR gs:[rax]
  408549:	add    BYTE PTR [rax],al
  40854b:	add    BYTE PTR [rax],al
  40854d:	add    BYTE PTR [rax],al
  40854f:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6660bfc8
  408555:	(bad)  
  408556:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  40855e:	jae    0x4085c5
  408560:	imul   esp,DWORD PTR gs:[rax],0x74
  408564:	outs   dx,DWORD PTR ds:[rsi]
  408565:	and    BYTE PTR [rcx+0x72],ah
  408568:	movsxd ebp,DWORD PTR [rax+0x69]
  40856b:	jbe    0x4085d2
  40856d:	and    BYTE PTR [rbp+0x65],ch
  408570:	ins    DWORD PTR es:[rdi],dx
  408571:	(bad)  
  408572:	gs jb  0x40857f
  408575:	add    BYTE PTR [rax],al
  408577:	push   rbp
  408578:	outs   dx,BYTE PTR ds:[rsi]
  408579:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40857d:	outs   dx,BYTE PTR ds:[rsi]
  40857e:	and    BYTE PTR [rbp+0x61],ch
  408581:	movsxd ebp,DWORD PTR [rax+0x69]
  408584:	outs   dx,BYTE PTR ds:[rsi]
  408585:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  40858a:	cmp    ah,BYTE PTR gs:[rax]
  40858d:	and    eax,0x68000a64
  408592:	jbe    0x408594
  408594:	(bad)  
  408595:	and    eax,0x203a2773
  40859a:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  40859c:	and    BYTE PTR [rbx+0x75],dh
  40859f:	movsxd ebp,DWORD PTR [rax+0x20]
  4085a2:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x4300
  4085a9:	outs   dx,DWORD PTR ds:[rsi]
  4085aa:	jne    0x408618
  4085ac:	and    BYTE PTR fs:[rsi+0x6f],ch
  4085b0:	je     0x4085d2
  4085b2:	ins    BYTE PTR es:[rdi],dx
  4085b3:	outs   dx,DWORD PTR ds:[rsi]
  4085b4:	movsxd esp,DWORD PTR [rcx+0x74]
  4085b7:	and    BYTE PTR gs:[rdi],ah
  4085ba:	and    eax,0x202e2773
  4085bf:	and    BYTE PTR [rbx+0x79],dl
  4085c2:	jae    0x408638
  4085c4:	gs ins DWORD PTR es:[rdi],dx
  4085c6:	and    BYTE PTR [rbp+0x72],ah
  4085c9:	jb     0x40863a
  4085cb:	jb     0x4085ed
  4085cd:	ins    DWORD PTR es:[rdi],dx
  4085ce:	gs jae 0x408644
  4085d1:	(bad)  
  4085d2:	cmp    ah,BYTE PTR gs:[eax]
  4085d6:	and    eax,0x27000a73
  4085db:	and    eax,0x69202773
  4085e0:	jae    0x408602
  4085e2:	outs   dx,BYTE PTR ds:[rsi]
  4085e3:	outs   dx,DWORD PTR ds:[rsi]
  4085e4:	je     0x408606
  4085e6:	(bad)  
  4085e7:	outs   dx,BYTE PTR ds:[rsi]
  4085e8:	and    BYTE PTR [rdi+0x72],ch
  4085eb:	imul   ebp,DWORD PTR fs:[rsi+0x61],0x66207972
  4085f3:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x3a732500
  4085fb:	and    BYTE PTR [rsi+0x61],al
  4085fe:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408606:	jb     0x40866d
  408608:	(bad)  
  408609:	and    BYTE PTR fs:[rsi+0x69],ah
  40860d:	ins    BYTE PTR es:[rdi],dx
  40860e:	gs (bad) 
  408610:	jae    0x408632
  408612:	ins    DWORD PTR es:[rdi],dx
  408613:	(bad)  
  408614:	imul   esp,DWORD PTR [ebx+0x20],0x626d756e
  40861c:	gs jb  0x408629
  40861f:	add    BYTE PTR [rcx],ah
  408621:	cmp    al,0x61
  408623:	jb     0x408688
  408625:	push   0x21000a3e
  40862a:	cmp    al,0x74
  40862c:	push   0xa3e6e69
  408631:	add    BYTE PTR [rax],al
  408633:	add    BYTE PTR [rcx],dl
  408635:	loop   0x408636
  408637:	(bad)  
  408638:	cmp    dl,ah
  40863a:	(bad)  
  40863b:	(bad)  
  40863c:	cmp    dl,ah
  40863e:	(bad)  
  40863f:	(bad)  
  408640:	cmp    dl,ah
  408642:	(bad)  
  408643:	(bad)  
  408644:	cmp    dl,ah
  408646:	(bad)  
  408647:	(bad)  
  408648:	cmp    dl,ah
  40864a:	(bad)  
  40864b:	(bad)  
  40864c:	cmp    dl,ah
  40864e:	(bad)  
  40864f:	(bad)  
  408650:	cmp    dl,ah
  408652:	(bad)  
  408653:	(bad)  
  408654:	cmp    dl,ah
  408656:	(bad)  
  408657:	(bad)  
  408658:	cmp    dl,ah
  40865a:	(bad)  
  40865b:	(bad)  
  40865c:	cmp    dl,ah
  40865e:	(bad)  
  40865f:	(bad)  
  408660:	cmp    dl,ah
  408662:	(bad)  
  408663:	(bad)  
  408664:	cmp    dl,ah
  408666:	(bad)  
  408667:	(bad)  
  408668:	cmp    dl,ah
  40866a:	(bad)  
  40866b:	inc    DWORD PTR [rax]
  40866d:	loop   0x40866e
  40866f:	(bad)  
  408670:	cmp    dl,ah
  408672:	(bad)  
  408673:	(bad)  
  408674:	cmp    dl,ah
  408676:	(bad)  
  408677:	(bad)  
  408678:	cmp    dl,ah
  40867a:	(bad)  
  40867b:	(bad)  
  40867c:	cmp    dl,ah
  40867e:	(bad)  
  40867f:	(bad)  
  408680:	cmp    dl,ah
  408682:	(bad)  
  408683:	(bad)  
  408684:	cmp    dl,ah
  408686:	(bad)  
  408687:	(bad)  
  408688:	cmp    dl,ah
  40868a:	(bad)  
  40868b:	(bad)  
  40868c:	cmp    dl,ah
  40868e:	(bad)  
  40868f:	(bad)  
  408690:	cmp    dl,ah
  408692:	(bad)  
  408693:	(bad)  
  408694:	cmp    dl,ah
  408696:	(bad)  
  408697:	(bad)  
  408698:	cmp    dl,ah
  40869a:	(bad)  
  40869b:	(bad)  
  40869c:	cmp    dl,ah
  40869e:	(bad)  
  40869f:	(bad)  
  4086a0:	cmp    dl,ah
  4086a2:	(bad)  
  4086a3:	(bad)  
  4086a4:	cmp    dl,ah
  4086a6:	(bad)  
  4086a7:	(bad)  
  4086a8:	cmp    dl,ah
  4086aa:	(bad)  
  4086ab:	(bad)  
  4086ac:	cmp    dl,ah
  4086ae:	(bad)  
  4086af:	(bad)  
  4086b0:	cmp    dl,ah
  4086b2:	(bad)  
  4086b3:	(bad)  
  4086b4:	cmp    dl,ah
  4086b6:	(bad)  
  4086b7:	(bad)  
  4086b8:	cmp    dl,ah
  4086ba:	(bad)  
  4086bb:	(bad)  
  4086bc:	cmp    dl,ah
  4086be:	(bad)  
  4086bf:	(bad)  
  4086c0:	cmp    dl,ah
  4086c2:	(bad)  
  4086c3:	(bad)  
  4086c4:	cmp    dl,ah
  4086c6:	(bad)  
  4086c7:	(bad)  
  4086c8:	cmp    dl,ah
  4086ca:	(bad)  
  4086cb:	(bad)  
  4086cc:	cmp    dl,ah
  4086ce:	(bad)  
  4086cf:	(bad)  
  4086d0:	cmp    dl,ah
  4086d2:	(bad)  
  4086d3:	(bad)  
  4086d4:	cmp    dl,ah
  4086d6:	(bad)  
  4086d7:	(bad)  
  4086d8:	cmp    dl,ah
  4086da:	(bad)  
  4086db:	(bad)  
  4086dc:	cmp    dl,ah
  4086de:	(bad)  
  4086df:	(bad)  
  4086e0:	cmp    dl,ah
  4086e2:	(bad)  
  4086e3:	(bad)  
  4086e4:	cmp    dl,ah
  4086e6:	(bad)  
  4086e7:	(bad)  
  4086e8:	cmp    dl,ah
  4086ea:	(bad)  
  4086eb:	dec    esp
  4086ed:	loope  0x4086ee
  4086ef:	push   QWORD PTR [rcx-0x6a00001f]
  4086f5:	loope  0x4086f6
  4086f7:	(bad)  
  4086f8:	jns    0x4086db
  4086fa:	(bad)  
  4086fb:	jmp    QWORD PTR [rcx-0x1f]
  4086fe:	(bad)  
  4086ff:	dec    DWORD PTR [rdx-0x1f]
  408702:	(bad)  
  408703:	jmp    FWORD PTR [rcx+0x6e]
  408706:	jo     0x40877d
  408708:	je     0x408737
  40870a:	ins    DWORD PTR es:[rdi],dx
  40870b:	(bad)  
  40870c:	movsxd ebp,DWORD PTR [rax+0x0]
  40870f:	outs   dx,DWORD PTR ds:[rsi]
  408710:	jne    0x408786
  408712:	jo     0x408789
  408714:	je     0x408743
  408716:	ins    DWORD PTR es:[rdi],dx
  408717:	(bad)  
  408718:	movsxd ebp,DWORD PTR [rax+0x0]
  40871b:	imul   ebp,DWORD PTR [rsi+0x70],0x742d7475
  408722:	jns    0x408794
  408724:	add    BYTE PTR gs:[rdi+0x75],ch
  408728:	je     0x40879a
  40872a:	jne    0x4087a0
  40872c:	sub    eax,0x65707974
  408731:	add    BYTE PTR [rcx+0x6e],ch
  408734:	jo     0x4087ab
  408736:	je     0x408765
  408738:	outs   dx,DWORD PTR ds:[rsi]
  408739:	jae    0x40879c
  40873b:	(bad)  
  40873c:	imul   eax,DWORD PTR [rax],0x7074756f
  408742:	jne    0x4087b8
  408744:	sub    eax,0x6261736f
  408749:	imul   eax,DWORD PTR [rax],0x73726576
  40874f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c656800
  408756:	jo     0x408758
  408758:	rex.W push rax
  40875a:	push   rbp
  40875b:	pop    rax
  40875c:	add    BYTE PTR [rsi+0x65],cl
  40875f:	je     0x4087a3
  408761:	push   rbx
  408762:	add    BYTE PTR [rdi+0x4e],r8b
  408766:	push   rbp
  408767:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
  40876b:	jne    0x4087e5
  40876d:	add    BYTE PTR [rbx+0x6f],dl
  408770:	ins    BYTE PTR es:[rdi],dx
  408771:	(bad)  
  408772:	jb     0x4087dd
  408774:	jae    0x408776
  408776:	rex.B
  408777:	rex.WB pop r8
  408779:	add    BYTE PTR [rcx+0x72],cl
  40877c:	imul   edi,DWORD PTR [rax+0x0],0x65657246
  408783:	rex.X push rbx
  408785:	add    BYTE PTR [rdx+rdx*2+0x55],r10b
  40878a:	ss xor al,0x0
  40878d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  40878f:	fs gs jae 0x408807
  408793:	outs   dx,DWORD PTR ds:[rsi]
  408794:	add    BYTE PTR [rdi+0x70],cl
  408797:	outs   dx,BYTE PTR gs:[rsi]
  408799:	rex.X push rbx
  40879b:	add    BYTE PTR [rdi+0x70],r9b
  40879f:	outs   dx,BYTE PTR gs:[rsi]
  4087a1:	push   rsi
  4087a2:	rex.WRB push r11
  4087a4:	add    BYTE PTR [rsi+0x53],cl
  4087a7:	rex.WXB add BYTE PTR [r9+0x52],al
  4087ab:	rex.WRXB push r11
  4087ad:	add    BYTE PTR [rsi+0x65],al
  4087b0:	outs   dx,BYTE PTR ds:[rsi]
  4087b1:	imul   edi,DWORD PTR [rax+0x4f],0x53
	...
  4087c8:	mov    cl,0x82
  4087ca:	add    BYTE PTR [rax],al
  4087cd:	add    BYTE PTR [rax],al
  4087cf:	add    BYTE PTR [rcx],al
  4087d1:	add    BYTE PTR [rax],al
  4087d3:	add    BYTE PTR [rax],al
  4087d5:	add    BYTE PTR [rax],al
  4087d7:	add    BYTE PTR [rax-0x79],bl
  4087da:	add    BYTE PTR [rax],al
  4087dd:	add    BYTE PTR [rax],al
  4087df:	add    BYTE PTR [rdx],al
  4087e1:	add    BYTE PTR [rax],al
  4087e3:	add    BYTE PTR [rax],al
  4087e5:	add    BYTE PTR [rax],al
  4087e7:	add    BYTE PTR [rbp-0x79],bl
  4087ea:	add    BYTE PTR [rax],al
  4087ed:	add    BYTE PTR [rax],al
  4087ef:	add    BYTE PTR [rbx],al
  4087f1:	add    BYTE PTR [rax],al
  4087f3:	add    BYTE PTR [rax],al
  4087f5:	add    BYTE PTR [rax],al
  4087f7:	add    BYTE PTR [rdi+rax*4+0x40],ah
  4087fb:	add    BYTE PTR [rax],al
  4087fd:	add    BYTE PTR [rax],al
  4087ff:	add    BYTE PTR [rbx],al
  408801:	add    BYTE PTR [rax],al
  408803:	add    BYTE PTR [rax],al
  408805:	add    BYTE PTR [rax],al
  408807:	add    BYTE PTR [rax-0x79],ch
  40880a:	add    BYTE PTR [rax],al
  40880d:	add    BYTE PTR [rax],al
  40880f:	add    BYTE PTR [rsi],al
  408811:	add    BYTE PTR [rax],al
  408813:	add    BYTE PTR [rax],al
  408815:	add    BYTE PTR [rax],al
  408817:	add    BYTE PTR [rsi-0x79],ch
  40881a:	add    BYTE PTR [rax],al
  40881d:	add    BYTE PTR [rax],al
  40881f:	add    BYTE PTR [rdi],al
  408821:	add    BYTE PTR [rax],al
  408823:	add    BYTE PTR [rax],al
  408825:	add    BYTE PTR [rax],al
  408827:	add    BYTE PTR [rsi-0x79],dh
  40882a:	add    BYTE PTR [rax],al
  40882d:	add    BYTE PTR [rax],al
  40882f:	add    BYTE PTR [rax],cl
  408831:	add    BYTE PTR [rax],al
  408833:	add    BYTE PTR [rax],al
  408835:	add    BYTE PTR [rax],al
  408837:	add    BYTE PTR [rdx-0x79],bh
  40883a:	add    BYTE PTR [rax],al
  40883d:	add    BYTE PTR [rax],al
  40883f:	add    BYTE PTR [rcx],cl
  408841:	add    BYTE PTR [rax],al
  408843:	add    BYTE PTR [rax],al
  408845:	add    BYTE PTR [rax],al
  408847:	add    BYTE PTR [rdi-0x79],bh
  40884a:	add    BYTE PTR [rax],al
  40884d:	add    BYTE PTR [rax],al
  40884f:	add    BYTE PTR [rdx],cl
  408851:	add    BYTE PTR [rax],al
  408853:	add    BYTE PTR [rax],al
  408855:	add    BYTE PTR [rax],al
  408857:	add    BYTE PTR [rdi+0x4087],al
  40885d:	add    BYTE PTR [rax],al
  40885f:	add    BYTE PTR [rbx],cl
  408861:	add    BYTE PTR [rax],al
  408863:	add    BYTE PTR [rax],al
  408865:	add    BYTE PTR [rax],al
  408867:	add    BYTE PTR [rbp+0x4087],cl
  40886d:	add    BYTE PTR [rax],al
  40886f:	add    BYTE PTR [rax+rax*1],cl
  408872:	add    BYTE PTR [rax],al
  408874:	add    BYTE PTR [rax],al
  408876:	add    BYTE PTR [rax],al
  408878:	xchg   ebp,eax
  408879:	xchg   DWORD PTR [rax+0x0],eax
  40887c:	add    BYTE PTR [rax],al
  40887e:	add    BYTE PTR [rax],al
  408880:	or     eax,0x0
  408885:	add    BYTE PTR [rax],al
  408887:	add    BYTE PTR [rbp+0x4087],bl
  40888d:	add    BYTE PTR [rax],al
  40888f:	add    BYTE PTR [rsi],cl
  408891:	add    BYTE PTR [rax],al
  408893:	add    BYTE PTR [rax],al
  408895:	add    BYTE PTR [rax],al
  408897:	add    BYTE PTR [rbp+0x4087],ah
  40889d:	add    BYTE PTR [rax],al
  40889f:	add    BYTE PTR [rdi],cl
  4088a1:	add    BYTE PTR [rax],al
  4088a3:	add    BYTE PTR [rax],al
  4088a5:	add    BYTE PTR [rax],al
  4088a7:	add    BYTE PTR [rcx+0x4087],ch
  4088ad:	add    BYTE PTR [rax],al
  4088af:	add    BYTE PTR [rax],dl
  4088b1:	add    BYTE PTR [rax],al
  4088b3:	add    BYTE PTR [rax],al
  4088b5:	add    BYTE PTR [rax],al
  4088b7:	add    BYTE PTR [rsi+0x4087],ch
  4088bd:	add    BYTE PTR [rax],al
  4088bf:	add    BYTE PTR [rbp+0x6c],ah
  4088c2:	gs imul si,WORD PTR fs:[rax+rax*1+0x0],0x0
	...
  4088ff:	add    BYTE PTR [rax],ch
  408901:	rex.RXB
  408902:	rex.WRX push rbp
  408904:	and    BYTE PTR [rdx+0x69],al
  408907:	outs   dx,BYTE PTR ds:[rsi]
  408908:	jne    0x40897e
  40890a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x29],0x322e3220
  408912:	xor    eax,0x4700312e
  408917:	rex.WRX push rbp
  408919:	and    BYTE PTR [rip+0x73252073],ah        # 0x7365a992
  40891f:	or     al,BYTE PTR [rax]
  408921:	add    BYTE PTR [rax],al
  408923:	add    BYTE PTR [rax],al
  408925:	add    BYTE PTR [rax],al
  408927:	add    BYTE PTR [rbx+0x6f],al
  40892a:	jo     0x4089a5
  40892c:	jb     0x408997
  40892e:	addr32 push 0x43282074
  408934:	sub    DWORD PTR [rax],esp
  408936:	xor    dh,BYTE PTR [rax]
  408938:	xor    DWORD PTR [rax+riz*1],esi
  40893b:	rex.RX jb 0x4089a3
  40893e:	and    BYTE PTR gs:[rbx+0x6f],dl
  408942:	data16 je 0x4089bc
  408945:	(bad)  
  408946:	jb     0x4089ad
  408948:	and    BYTE PTR [rsi+0x6f],al
  40894b:	jne    0x4089bb
  40894d:	fs (bad) 
  40894f:	je     0x4089ba
  408951:	outs   dx,DWORD PTR ds:[rsi]
  408952:	outs   dx,BYTE PTR ds:[rsi]
  408953:	sub    al,0x20
  408955:	rex.WB outs dx,BYTE PTR ds:[rsi]
  408957:	movsxd ebp,DWORD PTR [rsi]
  408959:	add    BYTE PTR [rax],al
  40895b:	add    BYTE PTR [rax],al
  40895d:	add    BYTE PTR [rax],al
  40895f:	add    BYTE PTR [rax+rbp*2+0x69],dl
  408963:	jae    0x408985
  408965:	jo     0x4089d9
  408967:	outs   dx,DWORD PTR ds:[rsi]
  408968:	addr32 jb 0x4089cc
  40896b:	ins    DWORD PTR es:[rdi],dx
  40896c:	and    BYTE PTR [rcx+0x73],ch
  40896f:	and    BYTE PTR [rsi+0x72],ah
  408972:	gs and BYTE PTR gs:[rbx+0x6f],dh
  408977:	data16 je 0x4089f1
  40897a:	(bad)  
  40897b:	jb     0x4089e2
  40897d:	cmp    esp,DWORD PTR [rax]
  40897f:	jns    0x4089f0
  408981:	jne    0x4089a3
  408983:	ins    DWORD PTR es:[rdi],dx
  408984:	(bad)  
  408985:	jns    0x4089a7
  408987:	jb     0x4089ee
  408989:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  408991:	je     0x4089f8
  408993:	and    BYTE PTR [rcx+0x74],ch
  408996:	and    BYTE PTR [rbp+0x6e],dh
  408999:	fs gs jb 0x4089bd
  40899d:	je     0x408a07
  40899f:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4089a4:	ins    DWORD PTR es:[rdi],dx
  4089a5:	jae    0x4089c7
  4089a7:	outs   dx,DWORD PTR ds:[rsi]
  4089a8:	data16 or dh,BYTE PTR [rax+rbp*2+0x65]
  4089ad:	and    BYTE PTR [rdi+0x4e],al
  4089b0:	push   rbp
  4089b1:	and    BYTE PTR [rdi+0x65],al
  4089b4:	outs   dx,BYTE PTR ds:[rsi]
  4089b5:	gs jb  0x408a19
  4089b8:	ins    BYTE PTR es:[rdi],dx
  4089b9:	and    BYTE PTR [rax+0x75],dl
  4089bc:	(bad)  
  4089bd:	ins    BYTE PTR es:[rdi],dx
  4089be:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  4089c5:	outs   dx,BYTE PTR ds:[rsi]
  4089c6:	jae    0x408a2d
  4089c8:	and    BYTE PTR [rsi+0x65],dh
  4089cb:	jb     0x408a40
  4089cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  4089d4:	jb     0x4089f6
  4089d6:	sub    BYTE PTR [rcx+0x74],ah
  4089d9:	and    BYTE PTR [rcx+0x6f],bh
  4089dc:	jne    0x408a50
  4089de:	and    BYTE PTR [rdi+0x70],ch
  4089e1:	je     0x408a4c
  4089e3:	outs   dx,DWORD PTR ds:[rsi]
  4089e4:	outs   dx,BYTE PTR ds:[rsi]
  4089e5:	sub    DWORD PTR [rax],esp
  4089e7:	(bad)  
  4089e8:	outs   dx,BYTE PTR ds:[rsi]
  4089e9:	jns    0x408a0b
  4089eb:	ins    BYTE PTR es:[rdi],dx
  4089ec:	(bad)  
  4089ed:	je     0x408a54
  4089ef:	jb     0x408a11
  4089f1:	jbe    0x408a58
  4089f3:	jb     0x408a68
  4089f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x68540a2e
  4089fc:	imul   esi,DWORD PTR [rbx+0x20],0x676f7270
  408a03:	jb     0x408a66
  408a05:	ins    DWORD PTR es:[rdi],dx
  408a06:	and    BYTE PTR [rax+0x61],ch
  408a09:	jae    0x408a2b
  408a0b:	(bad)  
  408a0c:	(bad)
  408a11:	je     0x408a78
  408a13:	ins    BYTE PTR es:[rdi],dx
  408a14:	jns    0x408a36
  408a16:	outs   dx,BYTE PTR ds:[rsi]
  408a17:	outs   dx,DWORD PTR ds:[rsi]
  408a18:	and    BYTE PTR [rdi+0x61],dh
  408a1b:	jb     0x408a8f
  408a1d:	(bad)  
  408a1e:	outs   dx,BYTE PTR ds:[rsi]
  408a1f:	je     0x408a9a
  408a21:	add    BYTE PTR cs:[rax],al
	...
  408a30:	and    eax,0x45203a73
  408a35:	jb     0x408aa9
  408a37:	outs   dx,DWORD PTR ds:[rsi]
  408a38:	jb     0x408a74
  408a3a:	and    BYTE PTR [rax],al
  408a3c:	push   rbp
  408a3d:	outs   dx,BYTE PTR ds:[rsi]
  408a3e:	push   0x6c646e61
  408a43:	gs and BYTE PTR fs:[rcx+riz*2+0x74],ah
  408a49:	(bad)  
  408a4a:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  408a4e:	addr32 je 0x408ab9
  408a51:	cmp    ah,BYTE PTR [rax]
  408a53:	and    eax,0xa64
  408a58:	pop    rax
  408a59:	cdq    
  408a5a:	(bad)  
  408a5b:	call   FWORD PTR [rax]
  408a5d:	cwde   
  408a5e:	(bad)  
  408a5f:	jmp    FWORD PTR [rax]
  408a61:	cwde   
  408a62:	(bad)  
  408a63:	(bad)  
  408a64:	cmp    DWORD PTR [rax-0x67a60001],ebx
  408a6a:	(bad)  
  408a6b:	dec    DWORD PTR [rax-0x37000068]
  408a71:	cwde   
  408a72:	(bad)  
  408a73:	dec    DWORD PTR [rdx]
  408a75:	cdq    
  408a76:	(bad)  
  408a77:	(bad)  
  408a78:	mov    eax,0xffff97
  408a7d:	add    BYTE PTR [rax],al
  408a7f:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6960c4f8
  408a85:	outs   dx,BYTE PTR ds:[rsi]
  408a86:	jbe    0x408ae9
  408a88:	ins    BYTE PTR es:[rdi],dx
  408a89:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x69686372
  408a91:	jbe    0x408af8
  408a93:	and    BYTE PTR [rax+0x65],ch
  408a96:	(bad)  
  408a97:	fs gs jb 0x408abb
  408a9b:	jae    0x408b06
  408a9d:	jp     0x408b04
  408a9f:	cmp    ah,BYTE PTR [rax]
  408aa1:	and    eax,0xa646c
  408aa6:	add    BYTE PTR [rax],al
  408aa8:	and    eax,0x66203a73
  408aad:	(bad)  
  408aae:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408ab6:	jae    0x408b23
  408ab8:	imul   esi,DWORD PTR [rax+0x20],0x68637261
  408abf:	imul   esi,DWORD PTR [rsi+0x65],0x6d797320
  408ac6:	(bad)  
  408ac7:	outs   dx,DWORD PTR ds:[rsi]
  408ac8:	ins    BYTE PTR es:[rdi],dx
  408ac9:	and    BYTE PTR [rcx+riz*2+0x62],dh
  408acd:	ins    BYTE PTR es:[rdi],dx
  408ace:	or     al,BYTE PTR gs:[rax]
  408ad1:	gs ins BYTE PTR es:[rdi],dx
  408ad3:	movsxd bp,DWORD PTR [rdi+0x6d]
  408ad7:	ins    DWORD PTR es:[rdi],dx
  408ad8:	movsxd eax,DWORD PTR cs:[rax]
  408adb:	add    BYTE PTR [rax],al
  408add:	add    BYTE PTR [rax],al
  408adf:	add    BYTE PTR [rbx+0x69],dh
  408ae2:	jp     0x408b49
  408ae4:	outs   dx,DWORD PTR ds:[rsi]
  408ae5:	pop    di
  408ae7:	(bad)  
  408ae8:	jb     0x408b49
  408aea:	imul   ebp,DWORD PTR [rsi+0x64],0x3c207865
  408af1:	cmp    eax,0x7a697320
  408af6:	outs   dx,DWORD PTR gs:[rsi]
  408af8:	data16 and BYTE PTR [rcx+0x6e],ch
  408afc:	je     0x408b63
  408afe:	addr32 gs jb 0x408b61
  408b02:	(bad)  
  408b03:	jne    0x408b6b
  408b05:	data16 gs jb 0x408b09
  408b09:	add    BYTE PTR [rax],al
  408b0b:	add    BYTE PTR [rax],al
  408b0d:	add    BYTE PTR [rax],al
  408b0f:	add    BYTE PTR [rip+0x74203a73],ah        # 0x7460c588
  408b15:	push   0x72612065
  408b1a:	movsxd ebp,DWORD PTR [rax+0x69]
  408b1d:	jbe    0x408b84
  408b1f:	and    BYTE PTR [rcx+0x6e],ch
  408b22:	fs gs js 0x408b46
  408b26:	imul   esi,DWORD PTR [rbx+0x20],0x74706d65
  408b2d:	jns    0x408b39
  408b2f:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6660c5a8
  408b35:	(bad)  
  408b36:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408b3e:	jb     0x408ba5
  408b40:	(bad)  
  408b41:	and    BYTE PTR fs:[rcx+0x72],ah
  408b45:	movsxd ebp,DWORD PTR [rax+0x69]
  408b48:	jbe    0x408baf
  408b4a:	and    BYTE PTR [rcx+0x6e],ch
  408b4d:	fs gs js 0x408b5b
  408b51:	add    BYTE PTR [rax],al
  408b53:	add    BYTE PTR [rax],al
  408b55:	add    BYTE PTR [rax],al
  408b57:	add    BYTE PTR [rip+0x74203a73],ah        # 0x7460c5d0
  408b5d:	push   0x72612065
  408b62:	movsxd ebp,DWORD PTR [rax+0x69]
  408b65:	jbe    0x408bcc
  408b67:	and    BYTE PTR [rcx+0x6e],ch
  408b6a:	fs gs js 0x408b8e
  408b6e:	imul   esi,DWORD PTR [rbx+0x20],0x70707573
  408b75:	outs   dx,DWORD PTR ds:[rsi]
  408b76:	jae    0x408bdd
  408b78:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  408b7d:	push   0x20657661
  408b82:	xor    BYTE PTR [rax+0x25],bh
  408b85:	ins    BYTE PTR es:[rdi],dx
  408b86:	js     0x408ba8
  408b88:	outs   dx,BYTE PTR gs:[rsi]
  408b8a:	je     0x408bfe
  408b8c:	imul   esp,DWORD PTR [rbp+0x73],0x20666f20
  408b93:	and    eax,0x79622064
  408b98:	je     0x408bff
  408b9a:	jae    0x408bc8
  408b9c:	and    BYTE PTR [rdx+0x75],ah
  408b9f:	je     0x408bc1
  408ba1:	je     0x408c0b
  408ba3:	and    BYTE PTR gs:[rbx+0x69],dh
  408ba7:	jp     0x408c0e
  408ba9:	and    BYTE PTR [rcx+0x73],ch
  408bac:	and    BYTE PTR [rdi+0x6e],ch
  408baf:	ins    BYTE PTR es:[rdi],dx
  408bb0:	jns    0x408bd2
  408bb2:	xor    BYTE PTR [rax+0x25],bh
  408bb5:	ins    BYTE PTR es:[rdi],dx
  408bb6:	js     0x408bc2
	...
  408bc0:	rex.WRXB jne 0x408c37
  408bc3:	and    BYTE PTR [rdi+0x66],ch
  408bc6:	and    BYTE PTR [rbp+0x65],ch
  408bc9:	ins    DWORD PTR es:[rdi],dx
  408bca:	outs   dx,DWORD PTR ds:[rsi]
  408bcb:	jb     0x408c46
  408bcd:	and    BYTE PTR [rdi+0x68],dh
  408bd0:	imul   ebp,DWORD PTR [rbx+rsi*2+0x74],0x79727420
  408bd8:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  408bdf:	jb     0x408c46
  408be1:	(bad)  
  408be2:	and    BYTE PTR fs:[rcx+0x72],ah
  408be6:	movsxd ebp,DWORD PTR [rax+0x69]
  408be9:	jbe    0x408c50
  408beb:	and    BYTE PTR [rbx+0x79],dh
  408bee:	ins    DWORD PTR es:[rdi],dx
  408bef:	(bad)  
  408bf0:	outs   dx,DWORD PTR ds:[rsi]
  408bf1:	ins    BYTE PTR es:[rdi],dx
  408bf2:	and    BYTE PTR [rcx+0x6e],ch
  408bf5:	fs gs js 0x408c03
  408bf9:	add    BYTE PTR [rax],al
  408bfb:	add    BYTE PTR [rax],al
  408bfd:	add    BYTE PTR [rax],al
  408bff:	add    BYTE PTR [rdi+0x75],cl
  408c02:	je     0x408c24
  408c04:	outs   dx,DWORD PTR ds:[rsi]
  408c05:	data16 and BYTE PTR [rbp+0x65],ch
  408c09:	ins    DWORD PTR es:[rdi],dx
  408c0a:	outs   dx,DWORD PTR ds:[rsi]
  408c0b:	jb     0x408c86
  408c0d:	and    BYTE PTR [rdi+0x68],dh
  408c10:	imul   ebp,DWORD PTR [rbx+rsi*2+0x74],0x79727420
  408c18:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  408c1f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408c22:	jbe    0x408c89
  408c24:	jb     0x408c9a
  408c26:	and    BYTE PTR [rax+rbp*2+0x65],dh
  408c2a:	and    BYTE PTR [rcx+0x72],ah
  408c2d:	movsxd ebp,DWORD PTR [rax+0x69]
  408c30:	jbe    0x408c97
  408c32:	and    BYTE PTR [rbx+0x79],dh
  408c35:	ins    DWORD PTR es:[rdi],dx
  408c36:	(bad)  
  408c37:	outs   dx,DWORD PTR ds:[rsi]
  408c38:	ins    BYTE PTR es:[rdi],dx
  408c39:	and    BYTE PTR [rcx+0x6e],ch
  408c3c:	fs gs js 0x408c4a
	...
  408c48:	and    eax,0x74203a73
  408c4d:	push   0x72612065
  408c52:	movsxd ebp,DWORD PTR [rax+0x69]
  408c55:	jbe    0x408cbc
  408c57:	and    BYTE PTR [rax+0x61],ch
  408c5a:	jae    0x408c7c
  408c5c:	(bad)  
  408c5d:	outs   dx,BYTE PTR ds:[rsi]
  408c5e:	and    BYTE PTR [rcx+0x6e],ch
  408c61:	fs gs js 0x408c85
  408c65:	(bad)  
  408c66:	jne    0x408cdc
  408c68:	and    BYTE PTR [rsi+0x6f],ch
  408c6b:	and    BYTE PTR [rbx+0x79],dh
  408c6e:	ins    DWORD PTR es:[rdi],dx
  408c6f:	(bad)  
  408c70:	outs   dx,DWORD PTR ds:[rsi]
  408c71:	ins    BYTE PTR es:[rdi],dx
  408c72:	jae    0x408c7e
  408c74:	add    BYTE PTR [rax],al
  408c76:	add    BYTE PTR [rax],al
  408c78:	rex.WRXB jne 0x408cef
  408c7b:	and    BYTE PTR [rdi+0x66],ch
  408c7e:	and    BYTE PTR [rbp+0x65],ch
  408c81:	ins    DWORD PTR es:[rdi],dx
  408c82:	outs   dx,DWORD PTR ds:[rsi]
  408c83:	jb     0x408cfe
  408c85:	and    BYTE PTR [rdi+0x68],dh
  408c88:	imul   ebp,DWORD PTR [rbx+rsi*2+0x74],0x79727420
  408c90:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  408c97:	jb     0x408cfe
  408c99:	(bad)  
  408c9a:	and    BYTE PTR fs:[rcx+0x72],ah
  408c9e:	movsxd ebp,DWORD PTR [rax+0x69]
  408ca1:	jbe    0x408d08
  408ca3:	and    BYTE PTR [rcx+0x6e],ch
  408ca6:	fs gs js 0x408cca
  408caa:	jae    0x408d25
  408cac:	ins    DWORD PTR es:[rdi],dx
  408cad:	(bad)  
  408cae:	outs   dx,DWORD PTR ds:[rsi]
  408caf:	ins    BYTE PTR es:[rdi],dx
  408cb0:	and    BYTE PTR [rcx+riz*2+0x62],dh
  408cb4:	ins    BYTE PTR es:[rdi],dx
  408cb5:	or     al,BYTE PTR gs:[rax]
  408cb8:	and    eax,0x66203a73
  408cbd:	(bad)  
  408cbe:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408cc6:	jb     0x408d2d
  408cc8:	(bad)  
  408cc9:	and    BYTE PTR fs:[rcx+0x72],ah
  408ccd:	movsxd ebp,DWORD PTR [rax+0x69]
  408cd0:	jbe    0x408d37
  408cd2:	and    BYTE PTR [rcx+0x6e],ch
  408cd5:	fs gs js 0x408cf9
  408cd9:	jae    0x408d54
  408cdb:	ins    DWORD PTR es:[rdi],dx
  408cdc:	(bad)  
  408cdd:	outs   dx,DWORD PTR ds:[rsi]
  408cde:	ins    BYTE PTR es:[rdi],dx
  408cdf:	and    BYTE PTR [rcx+riz*2+0x62],dh
  408ce3:	ins    BYTE PTR es:[rdi],dx
  408ce4:	or     al,BYTE PTR gs:[rax]
  408ce7:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6660c760
  408ced:	(bad)  
  408cee:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408cf6:	jb     0x408d5d
  408cf8:	(bad)  
  408cf9:	and    BYTE PTR fs:[rcx+0x72],ah
  408cfd:	movsxd ebp,DWORD PTR [rax+0x69]
  408d00:	jbe    0x408d67
  408d02:	and    BYTE PTR [rax+0x65],ch
  408d05:	(bad)  
  408d06:	fs gs jb 0x408d2a
  408d0a:	outs   dx,WORD PTR ds:[rsi]
  408d0c:	ins    BYTE PTR es:[rdi],dx
  408d0d:	ins    BYTE PTR es:[rdi],dx
  408d0e:	outs   dx,DWORD PTR ds:[rsi]
  408d0f:	ja     0x408d7a
  408d11:	outs   dx,BYTE PTR ds:[rsi]
  408d12:	and    BYTE PTR [ecx+0x72],ah
  408d16:	movsxd ebp,DWORD PTR [rax+0x69]
  408d19:	jbe    0x408d80
  408d1b:	and    BYTE PTR [rcx+0x6e],ch
  408d1e:	fs gs js 0x408d2c
  408d22:	add    BYTE PTR [rip+0x57203a73],ah        # 0x5760c79b
  408d28:	(bad)  
  408d29:	jb     0x408d99
  408d2b:	imul   ebp,DWORD PTR [rsi+0x67],0x203a
  408d32:	add    BYTE PTR [rax],al
  408d34:	mov    WORD PTR [rdx-0x657d0001],ds
  408d3a:	(bad)  
  408d3b:	(bad)  
  408d3c:	js     0x408cd8
  408d3e:	(bad)  
  408d3f:	jmp    FWORD PTR [rsi-0x66]
  408d42:	(bad)  
  408d43:	jmp    QWORD PTR [rdx+rbx*4-0x1]
  408d47:	dec    DWORD PTR [rdx+rbx*4-0x65730001]
  408d4e:	(bad)  
  408d4f:	dec    DWORD PTR [rdx+rbx*4-0x65c30001]
  408d56:	(bad)  
  408d57:	(bad)  
  408d58:	(bad)  
  408d59:	(bad)  
  408d5a:	(bad)  
  408d5b:	jmp    rbx
  408d5d:	(bad)  
  408d5e:	(bad)  
  408d5f:	(bad)  
  408d60:	fcomp  QWORD PTR [rdx-0x652a0001]
  408d66:	(bad)  
  408d67:	dec    esi
  408d69:	(bad)  
  408d6a:	(bad)  
  408d6b:	(bad)  
  408d6c:	(bad)  
  408d6d:	(bad)  
  408d6e:	(bad)  
  408d6f:	(bad)  
  408d70:	(bad)  
  408d71:	(bad)  
  408d72:	(bad)  
  408d73:	(bad)  
  408d74:	(bad)  
  408d75:	(bad)  
  408d76:	(bad)  
  408d77:	jmp    FWORD PTR [rcx-0x5b000066]
  408d7d:	pushf  
  408d7e:	(bad)  
  408d7f:	jmp    QWORD PTR [rbx+rbx*4-0x1]
  408d83:	push   QWORD PTR [rbx+rbx*4-0x1]
  408d87:	inc    DWORD PTR [rbp-0x5a000065]
  408d8d:	fwait
  408d8e:	(bad)  
  408d8f:	call   rsp
  408d91:	fwait
  408d92:	(bad)  
  408d93:	call   QWORD PTR [rsp+rbx*4]
  408d96:	(bad)  
  408d97:	call   QWORD PTR [rsi-0x64]
  408d9a:	(bad)  
  408d9b:	inc    DWORD PTR [rbx+rbx*4]
  408d9e:	(bad)  
  408d9f:	call   QWORD PTR [rax]
  408da1:	popf   
  408da2:	(bad)  
  408da3:	push   rsp
  408da5:	pushf  
  408da6:	(bad)  
  408da7:	inc    DWORD PTR [rax]
  408da9:	popf   
  408daa:	(bad)  
  408dab:	inc    esp
  408dad:	pushf  
  408dae:	(bad)  
  408daf:	jmp    rax
  408db1:	pushf  
  408db2:	(bad)  
  408db3:	call   rax
  408db5:	pushf  
  408db6:	(bad)  
  408db7:	call   rax
  408db9:	pushf  
  408dba:	(bad)  
  408dbb:	call   rax
  408dbd:	pushf  
  408dbe:	(bad)  
  408dbf:	call   rax
  408dc1:	pushf  
  408dc2:	(bad)  
  408dc3:	dec    DWORD PTR [rdi+0x75]
  408dc6:	je     0x408de8
  408dc8:	outs   dx,DWORD PTR ds:[rsi]
  408dc9:	data16 and BYTE PTR [rbp+0x65],ch
  408dcd:	ins    DWORD PTR es:[rdi],dx
  408dce:	outs   dx,DWORD PTR ds:[rsi]
  408dcf:	jb     0x408e4a
  408dd1:	or     al,BYTE PTR [rax]
  408dd3:	add    BYTE PTR [rax],al
  408dd5:	add    BYTE PTR [rax],al
  408dd7:	add    BYTE PTR [rcx+0x62],al
  408dda:	outs   dx,BYTE PTR ds:[rsi]
  408ddb:	outs   dx,DWORD PTR ds:[rsi]
  408ddc:	jb     0x408e4b
  408dde:	(bad)  
  408ddf:	ins    BYTE PTR es:[rdi],dx
  408de0:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  408de4:	addr32 je 0x408e4f
  408de7:	and    BYTE PTR [rdi+0x66],ch
  408dea:	and    BYTE PTR [rax+rbp*2+0x69],dh
  408dee:	outs   dx,BYTE PTR ds:[rsi]
  408def:	and    BYTE PTR [rcx+0x72],ah
  408df2:	movsxd ebp,DWORD PTR [rax+0x69]
  408df5:	jbe    0x408e5c
  408df7:	and    BYTE PTR [rbp+0x65],ch
  408dfa:	ins    DWORD PTR es:[rdi],dx
  408dfb:	(bad)  
  408dfc:	gs jb  0x408e1f
  408dff:	outs   dx,BYTE PTR ds:[rsi]
  408e00:	(bad)  
  408e01:	ins    DWORD PTR es:[rdi],dx
  408e02:	cmp    ah,BYTE PTR gs:[rax]
  408e05:	and    eax,0xa786c
  408e0a:	add    BYTE PTR [rax],al
  408e0c:	add    BYTE PTR [rax],al
  408e0e:	add    BYTE PTR [rax],al
  408e10:	and    eax,0x66203a73
  408e15:	(bad)  
  408e16:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408e1e:	jae    0x408e85
  408e20:	imul   esp,DWORD PTR gs:[rax],0x74
  408e24:	outs   dx,DWORD PTR ds:[rsi]
  408e25:	and    BYTE PTR [rsi+0x69],ah
  408e28:	jb     0x408e9d
  408e2a:	je     0x408e4c
  408e2c:	(bad)  
  408e2d:	jb     0x408e92
  408e2f:	push   0x20657669
  408e34:	push   0x65646165
  408e39:	jb     0x408e45
  408e3b:	add    BYTE PTR [rax],al
  408e3d:	add    BYTE PTR [rax],al
  408e3f:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6660c8b8
  408e45:	(bad)  
  408e46:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408e4e:	jb     0x408eb5
  408e50:	(bad)  
  408e51:	and    BYTE PTR fs:[rcx+0x72],ah
  408e55:	movsxd ebp,DWORD PTR [rax+0x69]
  408e58:	jbe    0x408ebf
  408e5a:	and    BYTE PTR [rax+0x65],ch
  408e5d:	(bad)  
  408e5e:	fs gs jb 0x408e6c
  408e62:	add    BYTE PTR [rdi],ch
  408e64:	and    BYTE PTR [rax],ah
  408e66:	and    BYTE PTR [rax],ah
  408e68:	and    BYTE PTR [rax],ah
  408e6a:	and    BYTE PTR [rax],ah
  408e6c:	and    BYTE PTR [rax],ah
  408e6e:	and    BYTE PTR [rax],ah
  408e70:	and    BYTE PTR [rax],ah
  408e72:	and    BYTE PTR [rax],al
  408e74:	(bad)  
  408e75:	push   rbx
  408e76:	pop    rcx
  408e77:	rex.WRB
  408e78:	ss xor al,0x2f
  408e7b:	and    BYTE PTR [rax],ah
  408e7d:	and    BYTE PTR [rax],ah
  408e7f:	and    BYTE PTR [rax],ah
  408e81:	and    BYTE PTR [rax],ah
  408e83:	and    BYTE PTR [rax],al
  408e85:	and    eax,0x61682073
  408e8a:	jae    0x408eac
  408e8c:	outs   dx,BYTE PTR ds:[rsi]
  408e8d:	outs   dx,DWORD PTR ds:[rsi]
  408e8e:	and    BYTE PTR [rcx+0x72],ah
  408e91:	movsxd ebp,DWORD PTR [rax+0x69]
  408e94:	jbe    0x408efb
  408e96:	and    BYTE PTR [rcx+0x6e],ch
  408e99:	fs gs js 0x408ea7
  408e9d:	add    BYTE PTR [rdi],ch
  408e9f:	(bad)  
  408ea0:	and    BYTE PTR [rax],ah
  408ea2:	and    BYTE PTR [rax],ah
  408ea4:	and    BYTE PTR [rax],ah
  408ea6:	and    BYTE PTR [rax],ah
  408ea8:	and    BYTE PTR [rax],ah
  408eaa:	and    BYTE PTR [rax],ah
  408eac:	and    BYTE PTR [rax],ah
  408eae:	add    BYTE PTR [rax],al
  408eb0:	and    eax,0x6c203a73
  408eb5:	outs   dx,DWORD PTR ds:[rsi]
  408eb6:	outs   dx,BYTE PTR ds:[rsi]
  408eb7:	and    BYTE PTR [esi+0x61],ch
  408ebb:	ins    DWORD PTR es:[rdi],dx
  408ebc:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  408ec1:	ins    BYTE PTR es:[rdi],dx
  408ec2:	and    BYTE PTR gs:[rcx+0x73],ch
  408ec6:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  408eca:	and    BYTE PTR [rbx+0x6d],dh
  408ecd:	(bad)  
  408ece:	ins    BYTE PTR es:[rdi],dx
  408ecf:	ins    BYTE PTR es:[rdi],dx
  408ed0:	sub    al,0x20
  408ed2:	sub    BYTE PTR [rbx+0x69],dh
  408ed5:	jp     0x408f3c
  408ed7:	and    BYTE PTR [rip+0x646c2520],bh        # 0x64acb3fd
  408edd:	sub    DWORD PTR [rdx],ecx
  408edf:	add    BYTE PTR [rip+0x6c203a73],ah        # 0x6c60c958
  408ee5:	outs   dx,DWORD PTR ds:[rsi]
  408ee6:	outs   dx,BYTE PTR ds:[rsi]
  408ee7:	and    BYTE PTR [esi+0x61],ch
  408eeb:	ins    DWORD PTR es:[rdi],dx
  408eec:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  408ef1:	ins    BYTE PTR es:[rdi],dx
  408ef2:	and    BYTE PTR gs:[rcx+0x73],ch
  408ef6:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  408efa:	and    BYTE PTR [rdx+0x69],ah
  408efd:	addr32 sub al,0x20
  408f00:	sub    BYTE PTR [rbx+0x69],dh
  408f03:	jp     0x408f6a
  408f05:	and    BYTE PTR [rip+0x25783020],bh        # 0x25b8bf2b
  408f0b:	ins    BYTE PTR es:[rdi],dx
  408f0c:	js     0x408f37
  408f0e:	or     al,BYTE PTR [rax]
  408f10:	rex.WRXB jne 0x408f87
  408f13:	and    BYTE PTR [rdi+0x66],ch
  408f16:	and    BYTE PTR [rbp+0x65],ch
  408f19:	ins    DWORD PTR es:[rdi],dx
  408f1a:	outs   dx,DWORD PTR ds:[rsi]
  408f1b:	jb     0x408f96
  408f1d:	and    BYTE PTR [rdx+0x65],dh
  408f20:	(bad)  
  408f21:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6c20
  408f29:	and    BYTE PTR [ebx+0x79],dh
  408f2d:	ins    DWORD PTR es:[rdi],dx
  408f2e:	(bad)  
  408f2f:	outs   dx,DWORD PTR ds:[rsi]
  408f30:	ins    BYTE PTR es:[rdi],dx
  408f31:	and    BYTE PTR [rsi+0x61],ch
  408f34:	ins    DWORD PTR es:[rdi],dx
  408f35:	gs jae 0x408f58
  408f38:	imul   ebp,DWORD PTR [rsi+0x20],0x68637261
  408f3f:	imul   esi,DWORD PTR [rsi+0x65],0xa
  408f46:	add    BYTE PTR [rax],al
  408f48:	and    eax,0x66203a73
  408f4d:	(bad)  
  408f4e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408f56:	jb     0x408fbd
  408f58:	(bad)  
  408f59:	and    BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  408f5e:	and    BYTE PTR [ebx+0x79],dh
  408f62:	ins    DWORD PTR es:[rdi],dx
  408f63:	(bad)  
  408f64:	outs   dx,DWORD PTR ds:[rsi]
  408f65:	ins    BYTE PTR es:[rdi],dx
  408f66:	and    BYTE PTR [rsi+0x61],ch
  408f69:	ins    DWORD PTR es:[rdi],dx
  408f6a:	and    BYTE PTR gs:[rbx+0x74],dh
  408f6e:	jb     0x408fd9
  408f70:	outs   dx,BYTE PTR ds:[rsi]
  408f71:	and    BYTE PTR [ecx+eiz*2+0x62],dh
  408f76:	ins    BYTE PTR es:[rdi],dx
  408f77:	or     al,BYTE PTR gs:[rax]
  408f7a:	jb     0x408fde
  408f7c:	add    BYTE PTR [rax],al
  408f7e:	add    BYTE PTR [rax],al
  408f80:	and    eax,0x66203a73
  408f85:	(bad)  
  408f86:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408f8e:	jae    0x408ff5
  408f90:	imul   esp,DWORD PTR gs:[rax],0x74
  408f94:	outs   dx,DWORD PTR ds:[rsi]
  408f95:	and    BYTE PTR [rsi+0x65],ch
  408f98:	js     0x40900e
  408f9a:	and    BYTE PTR [rsi+0x69],ah
  408f9d:	ins    BYTE PTR es:[rdi],dx
  408f9e:	and    BYTE PTR gs:[rsi+0x61],ch
  408fa2:	ins    DWORD PTR es:[rdi],dx
  408fa3:	or     al,BYTE PTR gs:[rax]
  408fa6:	(bad)  
  408fa7:	or     al,BYTE PTR [rax]
  408fa9:	add    BYTE PTR [rax],al
  408fab:	add    BYTE PTR [rax],al
  408fad:	add    BYTE PTR [rax],al
  408faf:	add    BYTE PTR [rip+0x64203a73],ah        # 0x6460ca28
  408fb5:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x6620746f
  408fbd:	imul   ebp,DWORD PTR [rsi+0x64],0x76206120
  408fc4:	(bad)  
  408fc5:	ins    BYTE PTR es:[rdi],dx
  408fc6:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x69686372
  408fce:	jbe    0x409035
  408fd0:	and    BYTE PTR [rax+0x65],ch
  408fd3:	(bad)  
  408fd4:	fs gs jb 0x408fe2
	...
  408fe0:	rex.B jb 0x409046
  408fe3:	push   0x20657669
  408fe8:	ins    DWORD PTR es:[rdi],dx
  408fe9:	gs ins DWORD PTR es:[rdi],dx
  408feb:	(bad)  
  408fec:	gs jb  0x40900f
  408fef:	jne    0x409064
  408ff1:	gs jae 0x409014
  408ff4:	ins    BYTE PTR es:[rdi],dx
  408ff5:	outs   dx,DWORD PTR ds:[rsi]
  408ff6:	outs   dx,BYTE PTR ds:[rsi]
  408ff7:	and    BYTE PTR [esi+0x61],ch
  408ffb:	ins    DWORD PTR es:[rdi],dx
  408ffc:	gs jae 0x40902b
  408fff:	and    BYTE PTR [rdx+0x75],ah
  409002:	je     0x409024
  409004:	outs   dx,BYTE PTR ds:[rsi]
  409005:	outs   dx,DWORD PTR ds:[rsi]
  409006:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  40900a:	outs   dx,BYTE PTR ds:[esi]
  40900c:	(bad)  
  40900d:	ins    DWORD PTR es:[rdi],dx
  40900e:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  409013:	ins    BYTE PTR es:[rdi],dx
  409014:	and    BYTE PTR gs:[rsi+0x6f],ah
  409018:	jne    0x409088
  40901a:	or     al,BYTE PTR fs:[rax]
  40901d:	add    BYTE PTR [rax],al
  40901f:	add    BYTE PTR [rsi+0x6f],al
  409022:	jne    0x409092
  409024:	and    BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  409029:	and    BYTE PTR [esi+0x61],ch
  40902d:	ins    DWORD PTR es:[rdi],dx
  40902e:	and    BYTE PTR gs:[rcx+0x6e],ch
  409032:	fs gs js 0x409056
  409036:	sub    BYTE PTR [rip+0x2029646c],ah        # 0x2069f4a8
  40903c:	(bad)  
  40903d:	gs jns 0x4090af
  409040:	outs   dx,BYTE PTR ds:[rsi]
  409041:	and    BYTE PTR fs:[rbp+0x6e],ah
  409045:	and    BYTE PTR fs:[rdi+0x66],ch
  409049:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  40904d:	and    BYTE PTR [esi+0x61],ch
  409051:	ins    DWORD PTR es:[rdi],dx
  409052:	and    BYTE PTR gs:[rcx+riz*2+0x62],dh
  409057:	ins    BYTE PTR es:[rdi],dx
  409058:	or     al,BYTE PTR gs:[rax]
  40905b:	add    BYTE PTR [rax],al
  40905d:	add    BYTE PTR [rax],al
  40905f:	add    BYTE PTR [rcx+0x6e],cl
  409062:	jbe    0x4090c5
  409064:	ins    BYTE PTR es:[rdi],dx
  409065:	imul   esp,DWORD PTR [rax+riz*1+0x54],0x206e6968
  40906d:	(bad)  
  40906e:	jb     0x4090d3
  409070:	push   0x20657669
  409075:	ins    DWORD PTR es:[rdi],dx
  409076:	gs ins DWORD PTR es:[rdi],dx
  409078:	(bad)  
  409079:	gs jb  0x40909c
  40907c:	outs   dx,BYTE PTR ds:[rsi]
  40907d:	(bad)  
  40907e:	ins    DWORD PTR es:[rdi],dx
  40907f:	or     al,BYTE PTR gs:[rax]
  409082:	and    eax,0x73255b73
  409087:	sub    BYTE PTR [rip+0x5d2973],ah        # 0x9dba00
  40908d:	cmp    al,0x63
  40908f:	outs   dx,DWORD PTR ds:[rsi]
  409090:	jb     0x409104
  409092:	jne    0x409104
  409094:	je     0x4090d4
  409096:	add    BYTE PTR [rip+0x73255b73],ah        # 0x7365ec0f
  40909c:	pop    rbp
  40909d:	add    BYTE PTR [rip+0x73252873],ah        # 0x7365b916
  4090a3:	sub    DWORD PTR [rax],eax
	...
  4090ad:	add    BYTE PTR [rax],al
  4090af:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6560cb28
  4090b5:	jb     0x409129
  4090b7:	outs   dx,DWORD PTR ds:[rsi]
  4090b8:	jb     0x4090f4
  4090ba:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4090be:	and    BYTE PTR [rbp+0x61],ch
  4090c1:	outs   dx,BYTE PTR ds:[rsi]
  4090c2:	jns    0x4090e4
  4090c4:	rex sub eax,0x656c6966
  4090ca:	jae    0x4090ec
  4090cc:	outs   dx,BYTE PTR gs:[rsi]
  4090ce:	movsxd ebp,DWORD PTR [rdi+0x75]
  4090d1:	outs   dx,BYTE PTR ds:[rsi]
  4090d2:	je     0x409139
  4090d4:	jb     0x40913b
  4090d6:	or     al,BYTE PTR fs:[rax]
  4090d9:	jb     0x4090db
  4090db:	add    BYTE PTR [rax],al
  4090dd:	add    BYTE PTR [rax],al
  4090df:	add    BYTE PTR [rax+0x4f],dl
  4090e2:	push   rbx
  4090e3:	rex.WB pop r8
  4090e5:	rex.WR pop rcx
  4090e7:	pop    rdi
  4090e8:	rex.XB
  4090e9:	rex.WRXB push r10
  4090eb:	push   rdx
  4090ec:	rex.RB
  4090ed:	rex.XB push r12
  4090ef:	add    BYTE PTR [rip+0x7325002d],ch        # 0x73659122
  4090f5:	cmp    ah,BYTE PTR [rax]
  4090f7:	outs   dx,DWORD PTR ds:[rsi]
  4090f8:	jo     0x40916e
  4090fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  409101:	(bad)  
  409102:	and    BYTE PTR [rcx+0x73],ch
  409105:	and    BYTE PTR [rcx+0x6d],ah
  409108:	(bad)  
  409109:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  409118:	and    eax,0x6f203a73
  40911d:	jo     0x409193
  40911f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d6020
  409126:	and    eax,0x64202773
  40912b:	outs   dx,DWORD PTR ds:[rsi]
  40912c:	gs jae 0x40919d
  40912f:	(bad)  
  409130:	je     0x409152
  409132:	(bad)  
  409133:	ins    BYTE PTR es:[rdi],dx
  409134:	ins    BYTE PTR es:[rdi],dx
  409135:	outs   dx,DWORD PTR ds:[rsi]
  409136:	ja     0x409158
  409138:	(bad)  
  409139:	outs   dx,BYTE PTR ds:[rsi]
  40913a:	and    BYTE PTR [rcx+0x72],ah
  40913d:	addr32 jne 0x4091ad
  409140:	outs   dx,BYTE PTR gs:[rsi]
  409142:	je     0x40914e
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	and    eax,0x6f203a73
  40914d:	jo     0x4091c3
  40914f:	imul   ebp,DWORD PTR [rdi+0x6e],0x63256020
  409156:	and    eax,0x64202773
  40915b:	outs   dx,DWORD PTR ds:[rsi]
  40915c:	gs jae 0x4091cd
  40915f:	(bad)  
  409160:	je     0x409182
  409162:	(bad)  
  409163:	ins    BYTE PTR es:[rdi],dx
  409164:	ins    BYTE PTR es:[rdi],dx
  409165:	outs   dx,DWORD PTR ds:[rsi]
  409166:	ja     0x409188
  409168:	(bad)  
  409169:	outs   dx,BYTE PTR ds:[rsi]
  40916a:	and    BYTE PTR [rcx+0x72],ah
  40916d:	addr32 jne 0x4091dd
  409170:	outs   dx,BYTE PTR gs:[rsi]
  409172:	je     0x40917e
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	and    eax,0x6f203a73
  40917d:	jo     0x4091f3
  40917f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  409186:	(bad)  
  409187:	and    BYTE PTR [rdx+0x65],dh
  40918a:	jno    0x409201
  40918c:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  409193:	and    BYTE PTR [rcx+0x72],ah
  409196:	addr32 jne 0x409206
  409199:	outs   dx,BYTE PTR gs:[rsi]
  40919b:	je     0x4091a7
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7560cc18
  4091a5:	outs   dx,BYTE PTR ds:[rsi]
  4091a6:	jb     0x40920d
  4091a8:	movsxd ebp,DWORD PTR [rdi+0x67]
  4091ab:	outs   dx,BYTE PTR ds:[rsi]
  4091ac:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  4091b3:	je     0x40921e
  4091b5:	outs   dx,DWORD PTR ds:[rsi]
  4091b6:	outs   dx,BYTE PTR ds:[rsi]
  4091b7:	and    BYTE PTR [rax+0x2d],ah
  4091ba:	sub    eax,0xa277325
  4091bf:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7560cc38
  4091c5:	outs   dx,BYTE PTR ds:[rsi]
  4091c6:	jb     0x40922d
  4091c8:	movsxd ebp,DWORD PTR [rdi+0x67]
  4091cb:	outs   dx,BYTE PTR ds:[rsi]
  4091cc:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  4091d3:	je     0x40923e
  4091d5:	outs   dx,DWORD PTR ds:[rsi]
  4091d6:	outs   dx,BYTE PTR ds:[rsi]
  4091d7:	and    BYTE PTR [rax+0x25],ah
  4091da:	movsxd esp,DWORD PTR [rip+0xa2773]        # 0x4ab953
  4091e0:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6960cc59
  4091e6:	ins    BYTE PTR es:[rdi],dx
  4091e7:	ins    BYTE PTR es:[rdi],dx
  4091e8:	gs addr32 (bad) 
  4091eb:	ins    BYTE PTR es:[rdi],dx
  4091ec:	and    BYTE PTR [rdi+0x70],ch
  4091ef:	je     0x40925a
  4091f1:	outs   dx,DWORD PTR ds:[rsi]
  4091f2:	outs   dx,BYTE PTR ds:[rsi]
  4091f3:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6365b226
  4091f9:	or     al,BYTE PTR [rax]
  4091fb:	and    eax,0x69203a73
  409200:	outs   dx,BYTE PTR ds:[rsi]
  409201:	jbe    0x409264
  409203:	ins    BYTE PTR es:[rdi],dx
  409204:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  40920c:	outs   dx,BYTE PTR ds:[rsi]
  40920d:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6365b240
  409213:	or     al,BYTE PTR [rax]
  409215:	add    BYTE PTR [rax],al
  409217:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f60cc90
  40921d:	jo     0x409293
  40921f:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  409226:	jne    0x409291
  409228:	jb     0x40928f
  40922a:	jae    0x40924c
  40922c:	(bad)  
  40922d:	outs   dx,BYTE PTR ds:[rsi]
  40922e:	and    BYTE PTR [rcx+0x72],ah
  409231:	addr32 jne 0x4092a1
  409234:	outs   dx,BYTE PTR gs:[rsi]
  409236:	je     0x409258
  409238:	sub    eax,0x6325202d
  40923d:	or     al,BYTE PTR [rax]
  40923f:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f60ccb8
  409245:	jo     0x4092bb
  409247:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d6020
  40924e:	and    BYTE PTR [rip+0x69202773],ah        # 0x6960b9c7
  409254:	jae    0x409276
  409256:	(bad)  
  409257:	ins    DWORD PTR es:[rdi],dx
  409258:	(bad)  
  409259:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  409268:	and    eax,0x6f203a73
  40926d:	jo     0x4092e3
  40926f:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d6020
  409276:	and    BYTE PTR [rip+0x64202773],ah        # 0x6460b9ef
  40927c:	outs   dx,DWORD PTR ds:[rsi]
  40927d:	gs jae 0x4092ee
  409280:	(bad)  
  409281:	je     0x4092a3
  409283:	(bad)  
  409284:	ins    BYTE PTR es:[rdi],dx
  409285:	ins    BYTE PTR es:[rdi],dx
  409286:	outs   dx,DWORD PTR ds:[rsi]
  409287:	ja     0x4092a9
  409289:	(bad)  
  40928a:	outs   dx,BYTE PTR ds:[rsi]
  40928b:	and    BYTE PTR [rcx+0x72],ah
  40928e:	addr32 jne 0x4092fe
  409291:	outs   dx,BYTE PTR gs:[rsi]
  409293:	je     0x40929f
	...
  4092c1:	add    DWORD PTR [rdx],eax
  4092c3:	add    eax,DWORD PTR [rax*1+0x9080706]
  4092ca:	or     cl,BYTE PTR [rbx]
  4092cc:	or     al,0xd
  4092ce:	(bad)  
  4092cf:	movups xmm2,XMMWORD PTR [rcx]
  4092d2:	adc    dl,BYTE PTR [rbx]
  4092d4:	adc    al,0x15
  4092d6:	(bad)  
  4092d7:	(bad)  
  4092d8:	sbb    BYTE PTR [rcx],bl
  4092da:	sbb    bl,BYTE PTR [rbx]
  4092dc:	sbb    al,0x1d
  4092de:	(bad)  
  4092df:	(bad)  
  4092e0:	and    BYTE PTR [rcx],ah
  4092e2:	and    ah,BYTE PTR [rbx]
  4092e4:	and    al,0x25
  4092e6:	es (bad) 
  4092e8:	sub    BYTE PTR [rcx],ch
  4092ea:	sub    ch,BYTE PTR [rbx]
  4092ec:	sub    al,0x2d
  4092ee:	cs (bad) 
  4092f0:	xor    BYTE PTR [rcx],dh
  4092f2:	xor    dh,BYTE PTR [rbx]
  4092f4:	xor    al,0x35
  4092f6:	ss (bad) 
  4092f8:	cmp    BYTE PTR [rcx],bh
  4092fa:	cmp    bh,BYTE PTR [rbx]
  4092fc:	cmp    al,0x3d
  4092fe:	ds (bad) 
  409300:	rex
  409301:	rex.B
  409302:	rex.X
  409303:	rex.XB
  409304:	rex.R
  409305:	rex.RB
  409306:	rex.RX
  409307:	rex.RXB
  409308:	rex.W
  409309:	rex.WB
  40930a:	rex.WX
  40930b:	rex.WXB
  40930c:	rex.WR
  40930d:	rex.WRB
  40930e:	rex.WRX
  40930f:	rex.WRXB push r8
  409311:	push   rcx
  409312:	push   rdx
  409313:	push   rbx
  409314:	push   rsp
  409315:	push   rbp
  409316:	push   rsi
  409317:	push   rdi
  409318:	pop    rax
  409319:	pop    rcx
  40931a:	pop    rdx
  40931b:	pop    rbx
  40931c:	pop    rsp
  40931d:	pop    rbp
  40931e:	pop    rsi
  40931f:	pop    rdi
  409320:	(bad)  
  409321:	rex.B
  409322:	rex.X
  409323:	rex.XB
  409324:	rex.R
  409325:	rex.RB
  409326:	rex.RX
  409327:	rex.RXB
  409328:	rex.W
  409329:	rex.WB
  40932a:	rex.WX
  40932b:	rex.WXB
  40932c:	rex.WR
  40932d:	rex.WRB
  40932e:	rex.WRX
  40932f:	rex.WRXB push r8
  409331:	push   rcx
  409332:	push   rdx
  409333:	push   rbx
  409334:	push   rsp
  409335:	push   rbp
  409336:	push   rsi
  409337:	push   rdi
  409338:	pop    rax
  409339:	pop    rcx
  40933a:	pop    rdx
  40933b:	jnp    0x4093b9
  40933d:	jge    0x4093bd
  40933f:	jg     0x4092c1
  409341:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
  40934b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
  409352:	xchg   edx,eax
  409353:	xchg   ebx,eax
  409354:	xchg   esp,eax
  409355:	xchg   ebp,eax
  409356:	xchg   esi,eax
  409357:	xchg   edi,eax
  409358:	cwde   
  409359:	cdq    
  40935a:	(bad)  
  40935b:	fwait
  40935c:	pushf  
  40935d:	popf   
  40935e:	sahf   
  40935f:	lahf   
  409360:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  409369:	test   eax,0xadacabaa
  40936e:	scas   al,BYTE PTR es:[rdi]
  40936f:	scas   eax,DWORD PTR es:[rdi]
  409370:	mov    al,0xb1
  409372:	mov    dl,0xb3
  409374:	mov    ah,0xb5
  409376:	mov    dh,0xb7
  409378:	mov    eax,0xbcbbbab9
  40937d:	mov    ebp,0xc1c0bfbe
  409382:	ret    0xc4c3
  409385:	(bad)
  409388:	enter  0xcac9,0xcb
  40938c:	int3   
  40938d:	int    0xce
  40938f:	iret   
  409390:	rcl    cl,1
  409392:	rcl    bl,cl
  409394:	(bad)  
  409395:	(bad)  
  409396:	(bad)  
  409397:	xlat   BYTE PTR ds:[rbx]
  409398:	fcomp  st(1)
  40939a:	fcmovu st,st(3)
  40939c:	(bad)  
  40939e:	(bad)  
  4093a0:	loopne 0x409383
  4093a2:	loop   0x409387
  4093a4:	in     al,0xe5
  4093a6:	out    0xe7,al
  4093a8:	call   0xffffffffed2c7e96
  4093ad:	in     eax,dx
  4093ae:	out    dx,al
  4093af:	out    dx,eax
  4093b0:	lock icebp 
  4093b2:	repnz repz hlt 
  4093b5:	cmc    
  4093b6:	div    bh
  4093b8:	clc    
  4093b9:	stc    
  4093ba:	cli    
  4093bb:	sti    
  4093bc:	cld    
  4093bd:	std    
  4093be:	(bad)  
  4093bf:	inc    DWORD PTR [rax]
  4093c1:	add    DWORD PTR [rdx],eax
  4093c3:	add    eax,DWORD PTR [rax*1+0x9080706]
  4093ca:	or     cl,BYTE PTR [rbx]
  4093cc:	or     al,0xd
  4093ce:	(bad)  
  4093cf:	movups xmm2,XMMWORD PTR [rcx]
  4093d2:	adc    dl,BYTE PTR [rbx]
  4093d4:	adc    al,0x15
  4093d6:	(bad)  
  4093d7:	(bad)  
  4093d8:	sbb    BYTE PTR [rcx],bl
  4093da:	sbb    bl,BYTE PTR [rbx]
  4093dc:	sbb    al,0x1d
  4093de:	(bad)  
  4093df:	(bad)  
  4093e0:	and    BYTE PTR [rcx],ah
  4093e2:	and    ah,BYTE PTR [rbx]
  4093e4:	and    al,0x25
  4093e6:	es (bad) 
  4093e8:	sub    BYTE PTR [rcx],ch
  4093ea:	sub    ch,BYTE PTR [rbx]
  4093ec:	sub    al,0x2d
  4093ee:	cs (bad) 
  4093f0:	xor    BYTE PTR [rcx],dh
  4093f2:	xor    dh,BYTE PTR [rbx]
  4093f4:	xor    al,0x35
  4093f6:	ss (bad) 
  4093f8:	cmp    BYTE PTR [rcx],bh
  4093fa:	cmp    bh,BYTE PTR [rbx]
  4093fc:	cmp    al,0x3d
  4093fe:	ds (bad) 
  409400:	rex (bad) 
  409402:	(bad)
  409407:	addr32 push 0x6c6b6a69
  40940d:	ins    DWORD PTR es:[rdi],dx
  40940e:	outs   dx,BYTE PTR ds:[rsi]
  40940f:	outs   dx,DWORD PTR ds:[rsi]
  409410:	jo     0x409483
  409412:	jb     0x409487
  409414:	je     0x40948b
  409416:	jbe    0x40948f
  409418:	js     0x409493
  40941a:	jp     0x409477
  40941c:	pop    rsp
  40941d:	pop    rbp
  40941e:	pop    rsi
  40941f:	pop    rdi
  409420:	(bad)  
  409421:	(bad)  
  409422:	(bad)
  409427:	addr32 push 0x6c6b6a69
  40942d:	ins    DWORD PTR es:[rdi],dx
  40942e:	outs   dx,BYTE PTR ds:[rsi]
  40942f:	outs   dx,DWORD PTR ds:[rsi]
  409430:	jo     0x4094a3
  409432:	jb     0x4094a7
  409434:	je     0x4094ab
  409436:	jbe    0x4094af
  409438:	js     0x4094b3
  40943a:	jp     0x4094b7
  40943c:	jl     0x4094bb
  40943e:	jle    0x4094bf
  409440:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  409447:	xchg   DWORD PTR [rax-0x73747577],ecx
  40944d:	lea    ecx,[rsi-0x6d6e6f71]
  409453:	xchg   ebx,eax
  409454:	xchg   esp,eax
  409455:	xchg   ebp,eax
  409456:	xchg   esi,eax
  409457:	xchg   edi,eax
  409458:	cwde   
  409459:	cdq    
  40945a:	(bad)  
  40945b:	fwait
  40945c:	pushf  
  40945d:	popf   
  40945e:	sahf   
  40945f:	lahf   
  409460:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  409469:	test   eax,0xadacabaa
  40946e:	scas   al,BYTE PTR es:[rdi]
  40946f:	scas   eax,DWORD PTR es:[rdi]
  409470:	mov    al,0xb1
  409472:	mov    dl,0xb3
  409474:	mov    ah,0xb5
  409476:	mov    dh,0xb7
  409478:	mov    eax,0xbcbbbab9
  40947d:	mov    ebp,0xc1c0bfbe
  409482:	ret    0xc4c3
  409485:	(bad)
  409488:	enter  0xcac9,0xcb
  40948c:	int3   
  40948d:	int    0xce
  40948f:	iret   
  409490:	rcl    cl,1
  409492:	rcl    bl,cl
  409494:	(bad)  
  409495:	(bad)  
  409496:	(bad)  
  409497:	xlat   BYTE PTR ds:[rbx]
  409498:	fcomp  st(1)
  40949a:	fcmovu st,st(3)
  40949c:	(bad)  
  40949e:	(bad)  
  4094a0:	loopne 0x409483
  4094a2:	loop   0x409487
  4094a4:	in     al,0xe5
  4094a6:	out    0xe7,al
  4094a8:	call   0xffffffffed2c7f96
  4094ad:	in     eax,dx
  4094ae:	out    dx,al
  4094af:	out    dx,eax
  4094b0:	lock icebp 
  4094b2:	repnz repz hlt 
  4094b5:	cmc    
  4094b6:	div    bh
  4094b8:	clc    
  4094b9:	stc    
  4094ba:	cli    
  4094bb:	sti    
  4094bc:	cld    
  4094bd:	std    
  4094be:	(bad)  
  4094bf:	inc    DWORD PTR [rdx]
  4094c1:	or     BYTE PTR [rdx],al
  4094c3:	add    BYTE PTR [rdx],al
  4094c5:	add    BYTE PTR [rdx],al
  4094c7:	add    BYTE PTR [rdx],al
  4094c9:	add    BYTE PTR [rdx],al
  4094cb:	add    BYTE PTR [rdx],al
  4094cd:	add    BYTE PTR [rdx],al
  4094cf:	add    BYTE PTR [rdx],al
  4094d1:	add    BYTE PTR [rbx+0x8],al
  4094d4:	rex.X add al,0x42
  4094d7:	or     BYTE PTR [rdx+0x8],al
  4094da:	rex.X add al,0x2
  4094dd:	add    BYTE PTR [rdx],al
  4094df:	add    BYTE PTR [rdx],al
  4094e1:	add    BYTE PTR [rdx],al
  4094e3:	add    BYTE PTR [rdx],al
  4094e5:	add    BYTE PTR [rdx],al
  4094e7:	add    BYTE PTR [rdx],al
  4094e9:	add    BYTE PTR [rdx],al
  4094eb:	add    BYTE PTR [rdx],al
  4094ed:	add    BYTE PTR [rdx],al
  4094ef:	add    BYTE PTR [rdx],al
  4094f1:	add    BYTE PTR [rdx],al
  4094f3:	add    BYTE PTR [rdx],al
  4094f5:	add    BYTE PTR [rdx],al
  4094f7:	add    BYTE PTR [rdx],al
  4094f9:	add    BYTE PTR [rdx],al
  4094fb:	add    BYTE PTR [rdx],al
  4094fd:	add    BYTE PTR [rdx],al
  4094ff:	add    BYTE PTR [rcx+0x8],dl
  409502:	xor    BYTE PTR [rax],al
  409504:	xor    BYTE PTR [rax],al
  409506:	xor    BYTE PTR [rax],al
  409508:	xor    BYTE PTR [rax],al
  40950a:	xor    BYTE PTR [rax],al
  40950c:	xor    BYTE PTR [rax],al
  40950e:	xor    BYTE PTR [rax],al
  409510:	xor    BYTE PTR [rax],al
  409512:	xor    BYTE PTR [rax],al
  409514:	xor    BYTE PTR [rax],al
  409516:	xor    BYTE PTR [rax],al
  409518:	xor    BYTE PTR [rax],al
  40951a:	xor    BYTE PTR [rax],al
  40951c:	xor    BYTE PTR [rax],al
  40951e:	xor    BYTE PTR [rax],al
  409520:	adc    al,0x1
  409522:	adc    al,0x1
  409524:	adc    al,0x1
  409526:	adc    al,0x1
  409528:	adc    al,0x1
  40952a:	adc    al,0x1
  40952c:	adc    al,0x1
  40952e:	adc    al,0x1
  409530:	adc    al,0x1
  409532:	adc    al,0x1
  409534:	xor    BYTE PTR [rax],al
  409536:	xor    BYTE PTR [rax],al
  409538:	xor    BYTE PTR [rax],al
  40953a:	xor    BYTE PTR [rax],al
  40953c:	xor    BYTE PTR [rax],al
  40953e:	xor    BYTE PTR [rax],al
  409540:	xor    BYTE PTR [rax],al
  409542:	nop
  409543:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  409549:	add    edx,DWORD PTR [rax-0x6ffc6ffd]
  40954f:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  409555:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40955b:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  409561:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  409567:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  40956d:	add    dl,BYTE PTR [rax-0x6ffd6ffe]
  409573:	add    dl,BYTE PTR [rax+0x30003002]
  409579:	add    BYTE PTR [rax],dh
  40957b:	add    BYTE PTR [rax],dh
  40957d:	add    BYTE PTR [rax],dh
  40957f:	add    dh,BYTE PTR [rax]
  409581:	add    BYTE PTR [rax],bl
  409583:	add    ebx,DWORD PTR [rax]
  409585:	add    ebx,DWORD PTR [rax]
  409587:	add    ebx,DWORD PTR [rax]
  409589:	add    ebx,DWORD PTR [rax]
  40958b:	add    ebx,DWORD PTR [rax]
  40958d:	add    ebx,DWORD PTR [rax]
  40958f:	add    bl,BYTE PTR [rax]
  409591:	add    bl,BYTE PTR [rax]
  409593:	add    bl,BYTE PTR [rax]
  409595:	add    bl,BYTE PTR [rax]
  409597:	add    bl,BYTE PTR [rax]
  409599:	add    bl,BYTE PTR [rax]
  40959b:	add    bl,BYTE PTR [rax]
  40959d:	add    bl,BYTE PTR [rax]
  40959f:	add    bl,BYTE PTR [rax]
  4095a1:	add    bl,BYTE PTR [rax]
  4095a3:	add    bl,BYTE PTR [rax]
  4095a5:	add    bl,BYTE PTR [rax]
  4095a7:	add    bl,BYTE PTR [rax]
  4095a9:	add    bl,BYTE PTR [rax]
  4095ab:	add    bl,BYTE PTR [rax]
  4095ad:	add    bl,BYTE PTR [rax]
  4095af:	add    bl,BYTE PTR [rax]
  4095b1:	add    bl,BYTE PTR [rax]
  4095b3:	add    bl,BYTE PTR [rax]
  4095b5:	add    dh,BYTE PTR [rax]
  4095b7:	add    BYTE PTR [rax],dh
  4095b9:	add    BYTE PTR [rax],dh
  4095bb:	add    BYTE PTR [rax],dh
  4095bd:	add    BYTE PTR [rdx],al
	...
  4096bf:	add    BYTE PTR [rdx],bh
  4096c1:	and    BYTE PTR [rax],al
  4096c3:	add    BYTE PTR [rax],al
  4096c5:	add    BYTE PTR [rax],al
  4096c7:	add    BYTE PTR [rdx],cl
  4096c9:	and    eax,0x6f732573
  4096ce:	jne    0x409744
  4096d0:	and    BYTE PTR [rdi+0x66],ch
  4096d3:	and    BYTE PTR [rbp+0x65],ch
  4096d6:	ins    DWORD PTR es:[rdi],dx
  4096d7:	outs   dx,DWORD PTR ds:[rsi]
  4096d8:	jb     0x409753
  4096da:	and    BYTE PTR [rcx+0x6c],ah
  4096dd:	ins    BYTE PTR es:[rdi],dx
  4096de:	outs   dx,DWORD PTR ds:[rsi]
  4096df:	movsxd esp,DWORD PTR [rcx+0x74]
  4096e2:	imul   ebp,DWORD PTR [rsi+0x67],0x756c2520
  4096e9:	and    BYTE PTR [rdx+0x79],ah
  4096ec:	je     0x409753
  4096ee:	jae    0x4096fa
	...
  409700:	rcl    dh,0x40
  409703:	add    BYTE PTR [rax],al
  409705:	add    BYTE PTR [rax],al
  409707:	add    al,al
  409709:	rol    DWORD PTR [rax+0x0],1
  40970c:	add    BYTE PTR [rax],al
  40970e:	add    BYTE PTR [rax],al
  409710:	jo     0x409762
  409712:	add    BYTE PTR [rax],al
	...
  40971d:	add    BYTE PTR [rax],al
  40971f:	add    BYTE PTR [rcx+0x72],al
  409722:	addr32 jne 0x409792
  409725:	outs   dx,BYTE PTR gs:[rsi]
  409727:	je     0x409749
  409729:	outs   dx,DWORD PTR fs:[rsi]
  40972b:	ins    DWORD PTR es:[rdi],dx
  40972c:	(bad)  
  40972d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  409734:	jb     0x409756
  409736:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40973a:	rex.B
  40973b:	rex.WB
  40973c:	rex.WRX sub QWORD PTR [rax],r8
  40973f:	rex.B jb 0x4097a9
  409742:	jne    0x4097b1
  409744:	outs   dx,BYTE PTR gs:[rsi]
  409746:	je     0x409768
  409748:	jae    0x4097b3
  40974a:	outs   dx,BYTE PTR ds:[rsi]
  40974b:	addr32 jne 0x4097ba
  40974e:	(bad)  
  40974f:	jb     0x4097ba
  409751:	je     0x4097cc
  409753:	and    BYTE PTR [rax],ch
  409755:	push   rbx
  409756:	rex.WB
  409757:	rex.RXB
  409758:	rex.WRX sub QWORD PTR [rax],r8
  40975b:	add    BYTE PTR [rax],al
  40975d:	add    BYTE PTR [rax],al
  40975f:	add    BYTE PTR [rdi+0x76],cl
  409762:	gs jb  0x4097cb
  409765:	ins    BYTE PTR es:[rdi],dx
  409766:	outs   dx,DWORD PTR ds:[rsi]
  409767:	ja     0x409789
  409769:	jb     0x4097cc
  40976b:	outs   dx,BYTE PTR ds:[rsi]
  40976c:	and    BYTE PTR gs:[ebp+0x72],ah
  409771:	jb     0x4097e2
  409773:	jb     0x409795
  409775:	sub    BYTE PTR [rdi+0x56],cl
  409778:	rex.RB push r10
  40977a:	rex.RX
  40977b:	rex.WR
  40977c:	rex.WRXB push r15
  40977e:	sub    DWORD PTR [rax],eax
  409780:	push   rax
  409781:	(bad)  
  409782:	jb     0x4097f8
  409784:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40978b:	jae    0x4097ad
  40978d:	outs   dx,DWORD PTR ds:[rsi]
  40978e:	data16 and BYTE PTR [rbx+0x69],dh
  409792:	outs   dx,BYTE PTR ds:[esi]
  409794:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40979b:	and    BYTE PTR gs:[rax],ch
  40979e:	push   rax
  40979f:	rex.WR
  4097a0:	rex.WRXB push r11
  4097a2:	push   rbx
  4097a3:	sub    DWORD PTR [rax],eax
  4097a5:	add    BYTE PTR [rax],al
  4097a7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4097ab:	(bad)  
  4097ac:	ins    BYTE PTR es:[rdi],dx
  4097ad:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4097b1:	jae    0x4097d3
  4097b3:	outs   dx,DWORD PTR ds:[rsi]
  4097b4:	data16 and BYTE PTR [rbx+0x69],dh
  4097b8:	outs   dx,BYTE PTR ds:[esi]
  4097ba:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4097c1:	and    BYTE PTR gs:[rax],ch
  4097c4:	push   rsp
  4097c5:	rex.WR
  4097c6:	rex.WRXB push r11
  4097c8:	push   rbx
  4097c9:	sub    DWORD PTR [rax],eax
  4097cb:	add    BYTE PTR [rax],al
  4097cd:	add    BYTE PTR [rax],al
  4097cf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4097d3:	and    BYTE PTR [rdx+0x65],dh
  4097d6:	jae    0x40984d
  4097d8:	ins    BYTE PTR es:[rdi],dx
  4097d9:	je     0x4097fb
  4097db:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4097e2:	jae    0x409851
  4097e4:	(bad)  
  4097e5:	ins    BYTE PTR es:[rdi],dx
  4097e6:	ins    BYTE PTR es:[rdi],dx
  4097e7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4097eb:	(bad)  
  4097ec:	and    BYTE PTR gs:[rdx+0x65],dh
  4097f0:	jo     0x409864
  4097f2:	gs jae 0x40985a
  4097f5:	outs   dx,BYTE PTR ds:[rsi]
  4097f6:	je     0x40985d
  4097f8:	and    BYTE PTR fs:[rax],ch
  4097fb:	push   rbp
  4097fc:	rex.WRX
  4097fd:	rex.R
  4097fe:	rex.RB push r10
  409800:	rex.RX
  409801:	rex.WR
  409802:	rex.WRXB push r15
  409804:	sub    DWORD PTR [rax],eax
  409806:	push   rbp
  409807:	outs   dx,BYTE PTR ds:[rsi]
  409808:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40980c:	outs   dx,BYTE PTR ds:[rsi]
  40980d:	and    BYTE PTR [rbp+0x72],ah
  409810:	jb     0x409881
  409812:	jb     0x409814
  409814:	add    BYTE PTR [rax],al
  409816:	add    BYTE PTR [rax],al
  409818:	pop    rdi
  409819:	ins    DWORD PTR es:[rdi],dx
  40981a:	(bad)  
  40981b:	je     0x409885
  40981d:	gs jb  0x409892
  409820:	sub    BYTE PTR [rcx],ch
  409822:	cmp    ah,BYTE PTR [rax]
  409824:	and    eax,0x6e692073
  409829:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765c0a2
  40982f:	sub    al,0x20
  409831:	and    eax,0x20202967
  409836:	sub    BYTE PTR [rdx+0x65],dh
  409839:	je     0x4098b1
  40983b:	(bad)  
  40983c:	ins    BYTE PTR es:[rdi],dx
  40983d:	cmp    eax,0xa296725
  409842:	add    BYTE PTR [rax],al
  409844:	cld    
  409845:	mov    ecx,0xb93dffff
  40984a:	(bad)  
  40984b:	jmp    FWORD PTR [rcx+rdi*4-0x46430001]
  409852:	(bad)  
  409853:	dec    esp
  409855:	mov    ecx,0xb9dcffff
  40985a:	(bad)  
  40985b:	(bad)  
  40985c:	in     al,dx
  40985d:	mov    ecx,0x694dffff
  409862:	outs   dx,BYTE PTR ds:[rsi]
  409863:	addr32 ja 0x409893
  409866:	ja     0x40989e
  409868:	xor    al,0x20
  40986a:	jb     0x4098e1
  40986c:	outs   dx,BYTE PTR ds:[rsi]
  40986d:	je     0x4098d8
  40986f:	ins    DWORD PTR es:[rdi],dx
  409870:	and    BYTE PTR gs:[rsi+0x61],ah
  409874:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40987c:	add    BYTE PTR [rax],al
  40987e:	add    BYTE PTR [rax],al
  409880:	rex.B
  409881:	fs fs jb 0x4098ea
  409885:	jae    0x4098fa
  409887:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8b8fd
  40988d:	jae    0x4098af
  40988f:	outs   dx,BYTE PTR ds:[rsi]
  409890:	outs   dx,DWORD PTR ds:[rsi]
  409891:	and    BYTE PTR [rcx+0x6d],ch
  409894:	(bad)  
  409895:	addr32 gs sub eax,0x74636573
  40989c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4098a3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4098aa:	jne    0x409911
  4098ac:	jb     0x409927
  4098ae:	and    BYTE PTR [rsi+0x61],ah
  4098b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4098b9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2b923
  4098bf:	je     0x409926
  4098c1:	jae    0x4098e3
  4098c3:	(bad)  
  4098c4:	je     0x4098e6
  4098c6:	(bad)  
  4098c7:	fs fs jb 0x409930
  4098cb:	jae    0x409940
  4098cd:	and    BYTE PTR [rip+0x70],ah        # 0x409943
  4098d3:	add    BYTE PTR [rax],al
  4098d5:	add    BYTE PTR [rax],al
  4098d7:	add    BYTE PTR [rax],ah
  4098d9:	and    BYTE PTR [rsi+0x69],dl
  4098dc:	jb     0x409952
  4098de:	jne    0x409941
  4098e0:	ins    BYTE PTR es:[rdi],dx
  4098e1:	push   rax
  4098e2:	jb     0x409953
  4098e4:	je     0x40994b
  4098e6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4098ea:	(bad)  
  4098eb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4098f3:	push   0x646f6320
  4098f8:	and    BYTE PTR gs:[rax],dh
  4098fb:	js     0x409922
  4098fd:	js     0x4098ff
  4098ff:	add    BYTE PTR [rax],ah
  409901:	and    BYTE PTR [rbp+0x6e],dl
  409904:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409908:	outs   dx,BYTE PTR ds:[rsi]
  409909:	and    BYTE PTR [rax+0x73],dh
  40990c:	gs jne 0x409973
  40990f:	outs   dx,DWORD PTR ds:[rsi]
  409910:	and    BYTE PTR [rdx+0x65],dh
  409913:	ins    BYTE PTR es:[rdi],dx
  409914:	outs   dx,DWORD PTR ds:[rsi]
  409915:	movsxd esp,DWORD PTR [rcx+0x74]
  409918:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40991f:	je     0x409990
  409921:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409924:	and    BYTE PTR [rsi+0x65],dh
  409927:	jb     0x40999c
  409929:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  409930:	or     al,BYTE PTR [rax]
  409932:	add    BYTE PTR [rax],al
  409934:	add    BYTE PTR [rax],al
  409936:	add    BYTE PTR [rax],al
  409938:	and    BYTE PTR [rax],ah
  40993a:	push   rbp
  40993b:	outs   dx,BYTE PTR ds:[rsi]
  40993c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409940:	outs   dx,BYTE PTR ds:[rsi]
  409941:	and    BYTE PTR [rax+0x73],dh
  409944:	gs jne 0x4099ab
  409947:	outs   dx,DWORD PTR ds:[rsi]
  409948:	and    BYTE PTR [rdx+0x65],dh
  40994b:	ins    BYTE PTR es:[rdi],dx
  40994c:	outs   dx,DWORD PTR ds:[rsi]
  40994d:	movsxd esp,DWORD PTR [rcx+0x74]
  409950:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  409957:	and    BYTE PTR [rbx+0x69],dh
  40995a:	jp     0x4099c1
  40995c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ac7c6
	...
  40996e:	add    BYTE PTR [rax],al
  409970:	cs jo  0x4099d7
  409973:	(bad)  
  409974:	je     0x4099d7
	...
  40997e:	add    BYTE PTR [rax],al
  409980:	cmp    al,0x0
  409982:	jne    0x409984
  409984:	outs   dx,BYTE PTR ds:[rsi]
  409985:	add    BYTE PTR [rbx+0x0],ch
  409988:	outs   dx,BYTE PTR ds:[rsi]
  409989:	add    BYTE PTR [rdi+0x0],ch
  40998c:	ja     0x40998e
  40998e:	outs   dx,BYTE PTR ds:[rsi]
  40998f:	add    BYTE PTR [rsi],bh
  409991:	add    BYTE PTR [rax],al
  409993:	add    BYTE PTR [rdi],bh
  409995:	add    BYTE PTR [rax],al
  409997:	add    BYTE PTR [rcx+0x0],al
  40999a:	jae    0x40999c
  40999c:	jae    0x40999e
  40999e:	add    BYTE PTR gs:[rdx+0x0],dh
  4099a2:	je     0x4099a4
  4099a4:	imul   eax,DWORD PTR [rax],0x6e006f
  4099aa:	and    BYTE PTR [rax],al
  4099ac:	data16 add BYTE PTR [rcx+0x0],ah
  4099b0:	imul   eax,DWORD PTR [rax],0x65006c
  4099b6:	add    BYTE PTR fs:[rcx],ah
  4099b9:	add    BYTE PTR [rdx],cl
  4099bb:	add    BYTE PTR [rdx],cl
  4099bd:	add    BYTE PTR [rax+0x0],dl
  4099c0:	jb     0x4099c2
  4099c2:	outs   dx,DWORD PTR ds:[rsi]
  4099c3:	add    BYTE PTR [rdi+0x0],ah
  4099c6:	jb     0x4099c8
  4099c8:	(bad)  
  4099c9:	add    BYTE PTR [rbp+0x0],ch
  4099cc:	cmp    al,BYTE PTR [rax]
  4099ce:	and    BYTE PTR [rax],al
  4099d0:	and    eax,0x73007700
  4099d5:	add    BYTE PTR [rdx],cl
  4099d7:	add    BYTE PTR [rsi+0x0],al
  4099da:	imul   eax,DWORD PTR [rax],0x65006c
  4099e0:	cmp    al,BYTE PTR [rax]
  4099e2:	and    BYTE PTR [rax],al
  4099e4:	and    eax,0x73007700
  4099e9:	add    BYTE PTR [rax+rax*1],ch
  4099ec:	and    BYTE PTR [rax],al
  4099ee:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4099f2:	outs   dx,BYTE PTR ds:[rsi]
  4099f3:	add    BYTE PTR [rbp+0x0],ah
  4099f6:	and    BYTE PTR [rax],al
  4099f8:	and    eax,0xa007500
  4099fd:	add    BYTE PTR [rdx],cl
  4099ff:	add    BYTE PTR [rbp+0x0],al
  409a02:	js     0x409a04
  409a04:	jo     0x409a06
  409a06:	jb     0x409a08
  409a08:	add    BYTE PTR gs:[rbx+0x0],dh
  409a0c:	jae    0x409a0e
  409a0e:	imul   eax,DWORD PTR [rax],0x6e006f
  409a14:	cmp    al,BYTE PTR [rax]
  409a16:	and    BYTE PTR [rax],al
  409a18:	and    eax,0x73007700
  409a1d:	add    BYTE PTR [rax],al
  409a1f:	add    BYTE PTR [rip+0x73007700],ah        # 0x73411125
  409a25:	add    BYTE PTR [rdx],cl
	...
  409a2f:	add    BYTE PTR [rbp+0x0],cl
  409a32:	imul   eax,DWORD PTR [rax],0x47006e
  409a38:	push   rdi
  409a39:	add    BYTE PTR [rax],ah
  409a3b:	add    BYTE PTR [rdx+0x0],dl
  409a3e:	jne    0x409a40
  409a40:	outs   dx,BYTE PTR ds:[rsi]
  409a41:	add    BYTE PTR [rax+rax*1+0x69],dh
  409a45:	add    BYTE PTR [rbp+0x0],ch
  409a48:	add    BYTE PTR gs:[rax],ah
  409a4b:	add    BYTE PTR [rcx+0x0],al
  409a4e:	jae    0x409a50
  409a50:	jae    0x409a52
  409a52:	add    BYTE PTR gs:[rdx+0x0],dh
  409a56:	je     0x409a58
  409a58:	imul   eax,DWORD PTR [rax],0x6e006f
  409a5e:	add    BYTE PTR [rax],al
  409a60:	adc    BYTE PTR [rdx+0x40],dh
	...
  409a6f:	add    BYTE PTR [rax],ah
  409a71:	jb     0x409ab3
	...
  409a7f:	add    al,al
  409a81:	push   0x40
	...
  409a8f:	add    al,al
  409a91:	movabs eax,ds:0x40
  409a9a:	add    BYTE PTR [rax],al
  409a9c:	add    BYTE PTR [rax],al
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	shl    BYTE PTR [rcx+0x40],0x0
	...
  409aaf:	add    BYTE PTR [rax],dl
  409ab1:	xchg   edi,eax
  409ab2:	add    BYTE PTR [rax],al
	...
  409ac1:	add    BYTE PTR [rax+0x0],al
	...
  409ad0:	call   0x40dbb8
	...
  409add:	add    BYTE PTR [rax],al
  409adf:	add    BYTE PTR [rax],dl
  409ae1:	in     al,0x40
	...
  409aef:	add    BYTE PTR [rax],bh
  409af1:	in     al,0x40
	...
  409aff:	add    BYTE PTR [rax-0x1c],dl
  409b02:	add    BYTE PTR [rax],al
	...
  409b11:	fadd   DWORD PTR [rax+0x0]
	...
  409b20:	sbb    bl,0x40
	...
  409b2f:	add    BYTE PTR [rax-0x25],bh
  409b32:	add    BYTE PTR [rax],al
	...
  409b3d:	add    BYTE PTR [rax],al
  409b3f:	add    BYTE PTR [rax-0x25],ch
  409b42:	add    BYTE PTR [rax],al
	...
  409b4d:	add    BYTE PTR [rax],al
  409b4f:	add    BYTE PTR [rax-0x25],dh
  409b52:	add    BYTE PTR [rax],al
	...
  409b61:	lock add BYTE PTR [rax],al
	...
  409b6d:	add    BYTE PTR [rax],al
  409b6f:	add    BYTE PTR [rax],dl
  409b71:	lock add BYTE PTR [rax],al
	...
  409b7d:	add    BYTE PTR [rax],al
  409b7f:	add    BYTE PTR [rax],bl
  409b81:	lock add BYTE PTR [rax],al
	...
  409b8d:	add    BYTE PTR [rax],al
  409b8f:	add    BYTE PTR [rax],dh
  409b91:	lock add BYTE PTR [rax],al
	...
  409b9d:	add    BYTE PTR [rax],al
  409b9f:	add    BYTE PTR [rax+0x40d1],al
	...
  409bad:	add    BYTE PTR [rax],al
  409baf:	add    al,dl
  409bb1:	xlat   BYTE PTR ds:[rbx]
  409bb2:	add    BYTE PTR [rax],al
	...
  409bc1:	pop    rdx
  409bc2:	add    BYTE PTR [rax],al
	...
  409bcd:	add    BYTE PTR [rax],al
  409bcf:	add    BYTE PTR [rax+0x51],dl
  409bd2:	add    BYTE PTR [rax],al
	...
  409bdd:	add    BYTE PTR [rax],al
  409bdf:	add    BYTE PTR [rax+0x40d7],al
	...
  409bed:	add    BYTE PTR [rax],al
  409bef:	add    al,al
  409bf1:	xchg   esp,eax
  409bf2:	add    BYTE PTR [rax],al
	...
  409bfd:	add    BYTE PTR [rax],al
  409bff:	add    BYTE PTR [rax-0x25],bl
  409c02:	add    BYTE PTR [rax],al
	...
  409c0d:	add    BYTE PTR [rax],al
  409c0f:	add    al,dh
  409c11:	and    DWORD PTR [rax+0x0],eax
	...
  409c20:	(bad)  
  409c21:	sub    BYTE PTR [rax+0x0],al
	...
  409c30:	push   rax
  409c31:	fild   DWORD PTR [rax+0x0]
	...
  409c40:	loopne 0x409c69
  409c42:	add    BYTE PTR [rax],al
	...
  409c4d:	add    BYTE PTR [rax],al
  409c4f:	add    BYTE PTR [rax+0x27],dl
  409c52:	add    BYTE PTR [rax],al
	...
  409c5d:	add    BYTE PTR [rax],al
  409c5f:	add    BYTE PTR [rax+0x40d7],dh
	...
  409c6d:	add    BYTE PTR [rax],al
  409c6f:	add    BYTE PTR [rax+0x40d1],dl
	...
  409c7d:	add    BYTE PTR [rax],al
  409c7f:	add    BYTE PTR [rax+0x40d7],bl
	...
  409c8d:	add    BYTE PTR [rax],al
  409c8f:	add    BYTE PTR [rdi+rdx*8+0x40],dl
	...
  409c9e:	add    BYTE PTR [rax],al
  409ca0:	nop
  409ca1:	xlat   BYTE PTR ds:[rbx]
  409ca2:	add    BYTE PTR [rax],al
	...
  409cad:	add    BYTE PTR [rax],al
  409caf:	add    BYTE PTR [rax-0x2f],cl
  409cb2:	add    BYTE PTR [rax],al
	...
  409cbd:	add    BYTE PTR [rax],al
  409cbf:	add    al,cl
  409cc1:	jno    0x409d03
	...
  409ccf:	add    BYTE PTR [rax+0x4071],al
	...
  409cdd:	add    BYTE PTR [rax],al
  409cdf:	add    BYTE PTR [rdi+0x43],al
  409ce2:	rex.XB cmp spl,BYTE PTR [r8]
  409ce5:	sub    BYTE PTR [rdi+0x4e],al
  409ce8:	push   rbp
  409ce9:	sub    DWORD PTR [rax],esp
  409ceb:	xor    al,0x2e
  409ced:	cmp    DWORD PTR [rsi],ebp
  409cef:	xor    al,0x0
	...
  409cfd:	add    BYTE PTR [rax],al
  409cff:	add    BYTE PTR [rdi+0x43],al
  409d02:	rex.XB cmp spl,BYTE PTR [r8]
  409d05:	sub    BYTE PTR [rdi+0x4e],al
  409d08:	push   rbp
  409d09:	sub    DWORD PTR [rax],esp
  409d0b:	xor    al,0x2e
  409d0d:	cmp    DWORD PTR [rsi],ebp
  409d0f:	xor    al,0x0
	...
  409d1d:	add    BYTE PTR [rax],al
  409d1f:	add    BYTE PTR [rdi+0x43],al
  409d22:	rex.XB cmp spl,BYTE PTR [r8]
  409d25:	sub    BYTE PTR [rdi+0x4e],al
  409d28:	push   rbp
  409d29:	sub    DWORD PTR [rax],esp
  409d2b:	xor    al,0x2e
  409d2d:	cmp    DWORD PTR [rsi],ebp
  409d2f:	xor    al,0x0
	...
  409d3d:	add    BYTE PTR [rax],al
  409d3f:	add    BYTE PTR [rdi+0x43],al
  409d42:	rex.XB cmp spl,BYTE PTR [r8]
  409d45:	sub    BYTE PTR [rdi+0x4e],al
  409d48:	push   rbp
  409d49:	sub    DWORD PTR [rax],esp
  409d4b:	xor    al,0x2e
  409d4d:	cmp    DWORD PTR [rsi],ebp
  409d4f:	xor    al,0x0
	...
  409d5d:	add    BYTE PTR [rax],al
  409d5f:	add    BYTE PTR [rdi+0x43],al
  409d62:	rex.XB cmp spl,BYTE PTR [r8]
  409d65:	sub    BYTE PTR [rdi+0x4e],al
  409d68:	push   rbp
  409d69:	sub    DWORD PTR [rax],esp
  409d6b:	xor    al,0x2e
  409d6d:	cmp    DWORD PTR [rsi],ebp
  409d6f:	xor    al,0x0
	...
  409d7d:	add    BYTE PTR [rax],al
  409d7f:	add    BYTE PTR [rdi+0x43],al
  409d82:	rex.XB cmp spl,BYTE PTR [r8]
  409d85:	sub    BYTE PTR [rdi+0x4e],al
  409d88:	push   rbp
  409d89:	sub    DWORD PTR [rax],esp
  409d8b:	xor    al,0x2e
  409d8d:	cmp    DWORD PTR [rsi],ebp
  409d8f:	xor    al,0x0
	...
  409d9d:	add    BYTE PTR [rax],al
  409d9f:	add    BYTE PTR [rdi+0x43],al
  409da2:	rex.XB cmp spl,BYTE PTR [r8]
  409da5:	sub    BYTE PTR [rdi+0x4e],al
  409da8:	push   rbp
  409da9:	sub    DWORD PTR [rax],esp
  409dab:	xor    al,0x2e
  409dad:	cmp    DWORD PTR [rsi],ebp
  409daf:	xor    al,0x0
	...
  409dbd:	add    BYTE PTR [rax],al
  409dbf:	add    BYTE PTR [rdi+0x43],al
  409dc2:	rex.XB cmp spl,BYTE PTR [r8]
  409dc5:	sub    BYTE PTR [rdi+0x4e],al
  409dc8:	push   rbp
  409dc9:	sub    DWORD PTR [rax],esp
  409dcb:	xor    al,0x2e
  409dcd:	cmp    DWORD PTR [rsi],ebp
  409dcf:	xor    al,0x0
	...
  409ddd:	add    BYTE PTR [rax],al
  409ddf:	add    BYTE PTR [rdi+0x43],al
  409de2:	rex.XB cmp spl,BYTE PTR [r8]
  409de5:	sub    BYTE PTR [rdi+0x4e],al
  409de8:	push   rbp
  409de9:	sub    DWORD PTR [rax],esp
  409deb:	xor    al,0x2e
  409ded:	cmp    DWORD PTR [rsi],ebp
  409def:	xor    al,0x0
	...
  409dfd:	add    BYTE PTR [rax],al
  409dff:	add    BYTE PTR [rdi+0x43],al
  409e02:	rex.XB cmp spl,BYTE PTR [r8]
  409e05:	sub    BYTE PTR [rdi+0x4e],al
  409e08:	push   rbp
  409e09:	sub    DWORD PTR [rax],esp
  409e0b:	xor    al,0x2e
  409e0d:	cmp    DWORD PTR [rsi],ebp
  409e0f:	xor    al,0x0
	...
  409e1d:	add    BYTE PTR [rax],al
  409e1f:	add    BYTE PTR [rdi+0x43],al
  409e22:	rex.XB cmp spl,BYTE PTR [r8]
  409e25:	sub    BYTE PTR [rdi+0x4e],al
  409e28:	push   rbp
  409e29:	sub    DWORD PTR [rax],esp
  409e2b:	xor    al,0x2e
  409e2d:	cmp    DWORD PTR [rsi],ebp
  409e2f:	xor    al,0x0
	...
  409e3d:	add    BYTE PTR [rax],al
  409e3f:	add    BYTE PTR [rdi+0x43],al
  409e42:	rex.XB cmp spl,BYTE PTR [r8]
  409e45:	sub    BYTE PTR [rdi+0x4e],al
  409e48:	push   rbp
  409e49:	sub    DWORD PTR [rax],esp
  409e4b:	xor    al,0x2e
  409e4d:	cmp    DWORD PTR [rsi],ebp
  409e4f:	xor    al,0x0
	...
  409e5d:	add    BYTE PTR [rax],al
  409e5f:	add    BYTE PTR [rdi+0x43],al
  409e62:	rex.XB cmp spl,BYTE PTR [r8]
  409e65:	sub    BYTE PTR [rdi+0x4e],al
  409e68:	push   rbp
  409e69:	sub    DWORD PTR [rax],esp
  409e6b:	xor    al,0x2e
  409e6d:	cmp    DWORD PTR [rsi],ebp
  409e6f:	xor    al,0x0
	...
  409e7d:	add    BYTE PTR [rax],al
  409e7f:	add    BYTE PTR [rdi+0x43],al
  409e82:	rex.XB cmp spl,BYTE PTR [r8]
  409e85:	sub    BYTE PTR [rdi+0x4e],al
  409e88:	push   rbp
  409e89:	sub    DWORD PTR [rax],esp
  409e8b:	xor    al,0x2e
  409e8d:	cmp    DWORD PTR [rsi],ebp
  409e8f:	xor    al,0x0
	...
  409e9d:	add    BYTE PTR [rax],al
  409e9f:	add    BYTE PTR [rdi+0x43],al
  409ea2:	rex.XB cmp spl,BYTE PTR [r8]
  409ea5:	sub    BYTE PTR [rdi+0x4e],al
  409ea8:	push   rbp
  409ea9:	sub    DWORD PTR [rax],esp
  409eab:	xor    al,0x2e
  409ead:	cmp    DWORD PTR [rsi],ebp
  409eaf:	xor    al,0x0
	...
  409ebd:	add    BYTE PTR [rax],al
  409ebf:	add    BYTE PTR [rdi+0x43],al
  409ec2:	rex.XB cmp spl,BYTE PTR [r8]
  409ec5:	sub    BYTE PTR [rdi+0x4e],al
  409ec8:	push   rbp
  409ec9:	sub    DWORD PTR [rax],esp
  409ecb:	xor    al,0x2e
  409ecd:	cmp    DWORD PTR [rsi],ebp
  409ecf:	xor    al,0x0
	...
  409edd:	add    BYTE PTR [rax],al
  409edf:	add    BYTE PTR [rdi+0x43],al
  409ee2:	rex.XB cmp spl,BYTE PTR [r8]
  409ee5:	sub    BYTE PTR [rdi+0x4e],al
  409ee8:	push   rbp
  409ee9:	sub    DWORD PTR [rax],esp
  409eeb:	xor    al,0x2e
  409eed:	cmp    DWORD PTR [rsi],ebp
  409eef:	xor    al,0x0
	...
  409efd:	add    BYTE PTR [rax],al
  409eff:	add    BYTE PTR [rdi+0x43],al
  409f02:	rex.XB cmp spl,BYTE PTR [r8]
  409f05:	sub    BYTE PTR [rdi+0x4e],al
  409f08:	push   rbp
  409f09:	sub    DWORD PTR [rax],esp
  409f0b:	xor    al,0x2e
  409f0d:	cmp    DWORD PTR [rsi],ebp
  409f0f:	xor    al,0x0
	...
  409f1d:	add    BYTE PTR [rax],al
  409f1f:	add    BYTE PTR [rdi+0x43],al
  409f22:	rex.XB cmp spl,BYTE PTR [r8]
  409f25:	sub    BYTE PTR [rdi+0x4e],al
  409f28:	push   rbp
  409f29:	sub    DWORD PTR [rax],esp
  409f2b:	xor    al,0x2e
  409f2d:	cmp    DWORD PTR [rsi],ebp
  409f2f:	xor    al,0x0
	...
  409f3d:	add    BYTE PTR [rax],al
  409f3f:	add    BYTE PTR [rdi+0x43],al
  409f42:	rex.XB cmp spl,BYTE PTR [r8]
  409f45:	sub    BYTE PTR [rdi+0x4e],al
  409f48:	push   rbp
  409f49:	sub    DWORD PTR [rax],esp
  409f4b:	xor    al,0x2e
  409f4d:	cmp    DWORD PTR [rsi],ebp
  409f4f:	xor    al,0x0
	...
  409f5d:	add    BYTE PTR [rax],al
  409f5f:	add    BYTE PTR [rdi+0x43],al
  409f62:	rex.XB cmp spl,BYTE PTR [r8]
  409f65:	sub    BYTE PTR [rdi+0x4e],al
  409f68:	push   rbp
  409f69:	sub    DWORD PTR [rax],esp
  409f6b:	xor    al,0x2e
  409f6d:	cmp    DWORD PTR [rsi],ebp
  409f6f:	xor    al,0x0
	...
  409f7d:	add    BYTE PTR [rax],al
  409f7f:	add    BYTE PTR [rdi+0x43],al
  409f82:	rex.XB cmp spl,BYTE PTR [r8]
  409f85:	sub    BYTE PTR [rdi+0x4e],al
  409f88:	push   rbp
  409f89:	sub    DWORD PTR [rax],esp
  409f8b:	xor    al,0x2e
  409f8d:	cmp    DWORD PTR [rsi],ebp
  409f8f:	xor    al,0x0
	...
  409f9d:	add    BYTE PTR [rax],al
  409f9f:	add    BYTE PTR [rdi+0x43],al
  409fa2:	rex.XB cmp spl,BYTE PTR [r8]
  409fa5:	sub    BYTE PTR [rdi+0x4e],al
  409fa8:	push   rbp
  409fa9:	sub    DWORD PTR [rax],esp
  409fab:	xor    al,0x2e
  409fad:	cmp    DWORD PTR [rsi],ebp
  409faf:	xor    al,0x0
	...
  409fbd:	add    BYTE PTR [rax],al
  409fbf:	add    BYTE PTR [rdi+0x43],al
  409fc2:	rex.XB cmp spl,BYTE PTR [r8]
  409fc5:	sub    BYTE PTR [rdi+0x4e],al
  409fc8:	push   rbp
  409fc9:	sub    DWORD PTR [rax],esp
  409fcb:	xor    al,0x2e
  409fcd:	cmp    DWORD PTR [rsi],ebp
  409fcf:	xor    al,0x0
	...
  409fdd:	add    BYTE PTR [rax],al
  409fdf:	add    BYTE PTR [rdi+0x43],al
  409fe2:	rex.XB cmp spl,BYTE PTR [r8]
  409fe5:	sub    BYTE PTR [rdi+0x4e],al
  409fe8:	push   rbp
  409fe9:	sub    DWORD PTR [rax],esp
  409feb:	xor    al,0x2e
  409fed:	cmp    DWORD PTR [rsi],ebp
  409fef:	xor    al,0x0
	...
  409ffd:	add    BYTE PTR [rax],al
  409fff:	add    BYTE PTR [rdi+0x43],al
  40a002:	rex.XB cmp spl,BYTE PTR [r8]
  40a005:	sub    BYTE PTR [rdi+0x4e],al
  40a008:	push   rbp
  40a009:	sub    DWORD PTR [rax],esp
  40a00b:	xor    al,0x2e
  40a00d:	cmp    DWORD PTR [rsi],ebp
  40a00f:	xor    al,0x0
	...
  40a01d:	add    BYTE PTR [rax],al
  40a01f:	add    BYTE PTR [rdi+0x43],al
  40a022:	rex.XB cmp spl,BYTE PTR [r8]
  40a025:	sub    BYTE PTR [rdi+0x4e],al
  40a028:	push   rbp
  40a029:	sub    DWORD PTR [rax],esp
  40a02b:	xor    al,0x2e
  40a02d:	cmp    DWORD PTR [rsi],ebp
  40a02f:	xor    al,0x0
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rdi+0x43],al
  40a042:	rex.XB cmp spl,BYTE PTR [r8]
  40a045:	sub    BYTE PTR [rdi+0x4e],al
  40a048:	push   rbp
  40a049:	sub    DWORD PTR [rax],esp
  40a04b:	xor    al,0x2e
  40a04d:	cmp    DWORD PTR [rsi],ebp
  40a04f:	xor    al,0x0
	...
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    BYTE PTR [rdi+0x43],al
  40a062:	rex.XB cmp spl,BYTE PTR [r8]
  40a065:	sub    BYTE PTR [rdi+0x4e],al
  40a068:	push   rbp
  40a069:	sub    DWORD PTR [rax],esp
  40a06b:	xor    al,0x2e
  40a06d:	cmp    DWORD PTR [rsi],ebp
  40a06f:	xor    al,0x0
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rdi+0x43],al
  40a082:	rex.XB cmp spl,BYTE PTR [r8]
  40a085:	sub    BYTE PTR [rdi+0x4e],al
  40a088:	push   rbp
  40a089:	sub    DWORD PTR [rax],esp
  40a08b:	xor    al,0x2e
  40a08d:	cmp    DWORD PTR [rsi],ebp
  40a08f:	xor    al,0x0
	...
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rdi+0x43],al
  40a0a2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0a5:	sub    BYTE PTR [rdi+0x4e],al
  40a0a8:	push   rbp
  40a0a9:	sub    DWORD PTR [rax],esp
  40a0ab:	xor    al,0x2e
  40a0ad:	cmp    DWORD PTR [rsi],ebp
  40a0af:	xor    al,0x0
	...
  40a0bd:	add    BYTE PTR [rax],al
  40a0bf:	add    BYTE PTR [rdi+0x43],al
  40a0c2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0c5:	sub    BYTE PTR [rdi+0x4e],al
  40a0c8:	push   rbp
  40a0c9:	sub    DWORD PTR [rax],esp
  40a0cb:	xor    al,0x2e
  40a0cd:	cmp    DWORD PTR [rsi],ebp
  40a0cf:	xor    al,0x0
	...
  40a0dd:	add    BYTE PTR [rax],al
  40a0df:	add    BYTE PTR [rdi+0x43],al
  40a0e2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0e5:	sub    BYTE PTR [rdi+0x4e],al
  40a0e8:	push   rbp
  40a0e9:	sub    DWORD PTR [rax],esp
  40a0eb:	xor    al,0x2e
  40a0ed:	cmp    DWORD PTR [rsi],ebp
  40a0ef:	xor    al,0x0
	...
  40a0fd:	add    BYTE PTR [rax],al
  40a0ff:	add    BYTE PTR [rdi+0x43],al
  40a102:	rex.XB cmp spl,BYTE PTR [r8]
  40a105:	sub    BYTE PTR [rdi+0x4e],al
  40a108:	push   rbp
  40a109:	sub    DWORD PTR [rax],esp
  40a10b:	xor    al,0x2e
  40a10d:	cmp    DWORD PTR [rsi],ebp
  40a10f:	xor    al,0x0
	...
  40a11d:	add    BYTE PTR [rax],al
  40a11f:	add    BYTE PTR [rdi+0x43],al
  40a122:	rex.XB cmp spl,BYTE PTR [r8]
  40a125:	sub    BYTE PTR [rdi+0x4e],al
  40a128:	push   rbp
  40a129:	sub    DWORD PTR [rax],esp
  40a12b:	xor    al,0x2e
  40a12d:	cmp    DWORD PTR [rsi],ebp
  40a12f:	xor    al,0x0
	...
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rdi+0x43],al
  40a142:	rex.XB cmp spl,BYTE PTR [r8]
  40a145:	sub    BYTE PTR [rdi+0x4e],al
  40a148:	push   rbp
  40a149:	sub    DWORD PTR [rax],esp
  40a14b:	xor    al,0x2e
  40a14d:	cmp    DWORD PTR [rsi],ebp
  40a14f:	xor    al,0x0
	...
  40a15d:	add    BYTE PTR [rax],al
  40a15f:	add    BYTE PTR [rdi+0x43],al
  40a162:	rex.XB cmp spl,BYTE PTR [r8]
  40a165:	sub    BYTE PTR [rdi+0x4e],al
  40a168:	push   rbp
  40a169:	sub    DWORD PTR [rax],esp
  40a16b:	xor    al,0x2e
  40a16d:	cmp    DWORD PTR [rsi],ebp
  40a16f:	xor    al,0x0
	...
  40a17d:	add    BYTE PTR [rax],al
  40a17f:	add    BYTE PTR [rdi+0x43],al
  40a182:	rex.XB cmp spl,BYTE PTR [r8]
  40a185:	sub    BYTE PTR [rdi+0x4e],al
  40a188:	push   rbp
  40a189:	sub    DWORD PTR [rax],esp
  40a18b:	xor    al,0x2e
  40a18d:	cmp    DWORD PTR [rsi],ebp
  40a18f:	xor    al,0x0
	...
  40a19d:	add    BYTE PTR [rax],al
  40a19f:	add    BYTE PTR [rdi+0x43],al
  40a1a2:	rex.XB cmp spl,BYTE PTR [r8]
  40a1a5:	sub    BYTE PTR [rdi+0x4e],al
  40a1a8:	push   rbp
  40a1a9:	sub    DWORD PTR [rax],esp
  40a1ab:	xor    al,0x2e
  40a1ad:	cmp    DWORD PTR [rsi],ebp
  40a1af:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040b000 <.pdata>:
  40b000:	add    BYTE PTR [rax],dl
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rax],edx
  40b006:	add    BYTE PTR [rax],al
  40b008:	add    al,al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	adc    BYTE PTR [rax],dl
  40b00e:	add    BYTE PTR [rax],al
  40b010:	push   rcx
  40b011:	adc    DWORD PTR [rax],eax
  40b013:	add    BYTE PTR [rax+rax*8],al
  40b016:	add    BYTE PTR [rax],al
  40b018:	(bad)  
  40b019:	adc    DWORD PTR [rax],eax
  40b01b:	add    BYTE PTR [rsi+0xc000011],ch
  40b021:	rol    BYTE PTR [rax],0x0
  40b024:	mov    al,0x11
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	adc    al,0x0
  40b02b:	add    BYTE PTR [rax+rax*8],dl
  40b02e:	add    BYTE PTR [rax],al
  40b030:	rcl    BYTE PTR [rax+rax*1],1
  40b033:	add    dl,dh
  40b035:	adc    al,0x0
  40b037:	add    BYTE PTR [rax],ch
  40b039:	rol    BYTE PTR [rax],0x0
  40b03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562b042
  40b042:	add    BYTE PTR [rax],al
  40b044:	rex.W rol BYTE PTR [rax],0x0
  40b048:	xor    BYTE PTR [rip+0x159c0000],dl        # 0x15dcb04e
  40b04e:	add    BYTE PTR [rax],al
  40b050:	push   0xffffffffa00000c0
  40b055:	adc    eax,0x162b0000
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	js     0x40b01e
  40b05e:	add    BYTE PTR [rax],al
  40b060:	xor    BYTE PTR [rsi],dl
  40b062:	add    BYTE PTR [rax],al
  40b064:	ret    0x16
  40b067:	add    BYTE PTR [rax+rax*8+0x16d00000],al
  40b06e:	add    BYTE PTR [rax],al
  40b070:	push   rsp
  40b071:	(bad)  
  40b072:	add    BYTE PTR [rax],al
  40b074:	nop
  40b075:	rol    BYTE PTR [rax],0x0
  40b078:	(bad)  
  40b079:	(bad)  
  40b07a:	add    BYTE PTR [rax],al
  40b07c:	pop    rdi
  40b07d:	sbb    eax,0xc09c0000
  40b082:	add    BYTE PTR [rax],al
  40b084:	(bad)  
  40b085:	sbb    eax,0x21050000
  40b08a:	add    BYTE PTR [rax],al
  40b08c:	lods   al,BYTE PTR ds:[rsi]
  40b08d:	rol    BYTE PTR [rax],0x0
  40b090:	adc    BYTE PTR [rcx],ah
  40b092:	add    BYTE PTR [rax],al
  40b094:	rex.WX and QWORD PTR [rax],rax
  40b097:	add    al,bl
  40b099:	rol    BYTE PTR [rax],0x0
  40b09c:	push   rax
  40b09d:	and    DWORD PTR [rax],eax
  40b09f:	add    BYTE PTR [rbp+0x21],ch
  40b0a2:	add    BYTE PTR [rax],al
  40b0a4:	loopne 0x40b066
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	jo     0x40b0cb
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	jrcxz  0x40b0cf
  40b0ae:	add    BYTE PTR [rax],al
  40b0b0:	call   0xfffffffff040b175
  40b0b5:	and    DWORD PTR [rax],eax
  40b0b7:	add    dl,al
  40b0b9:	and    eax,DWORD PTR [rax]
  40b0bb:	add    ah,dh
  40b0bd:	rol    BYTE PTR [rax],0x0
  40b0c0:	shl    BYTE PTR [rbx],1
  40b0c2:	add    BYTE PTR [rax],al
  40b0c4:	leave  
  40b0c5:	add    BYTE PTR es:[rax],al
  40b0c8:	cld    
  40b0c9:	rol    BYTE PTR [rax],0x0
  40b0cc:	shl    BYTE PTR [rsi],1
  40b0ce:	add    BYTE PTR [rax],al
  40b0d0:	rex.XB (bad) 
  40b0d2:	add    BYTE PTR [rax],al
  40b0d4:	adc    cl,al
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	push   rax
  40b0d9:	(bad)  
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	(bad)  
  40b0dd:	(bad)  
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	sbb    al,0xc1
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	loopne 0x40b10d
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	push   rdi
  40b0e9:	sub    BYTE PTR [rax],al
  40b0eb:	add    BYTE PTR [rcx+rax*8],ah
  40b0ee:	add    BYTE PTR [rax],al
  40b0f0:	(bad)  
  40b0f1:	sub    BYTE PTR [rax],al
  40b0f3:	add    BYTE PTR [rdx],dh
  40b0f5:	sub    al,BYTE PTR [rax]
  40b0f7:	add    BYTE PTR [rcx+rax*8],ch
  40b0fa:	add    BYTE PTR [rax],al
  40b0fc:	sub    al,BYTE PTR [rax]
  40b0ff:	add    BYTE PTR [rsi+0x3400002a],dh
  40b105:	rol    DWORD PTR [rax],0x0
  40b108:	shr    BYTE PTR [rdx],0x0
  40b10b:	add    BYTE PTR [rbx],dh
  40b10d:	sub    eax,DWORD PTR [rax]
  40b10f:	add    BYTE PTR [rcx+rax*8],bh
  40b112:	add    BYTE PTR [rax],al
  40b114:	rex sub eax,DWORD PTR [rax]
  40b117:	add    BYTE PTR [rsp+rbp*1+0x0],al
  40b11b:	add    BYTE PTR [rax-0x3f],cl
  40b11e:	add    BYTE PTR [rax],al
  40b120:	push   rax
  40b121:	sub    al,0x0
  40b123:	add    BYTE PTR [rip+0x5c00002f],bl        # 0x5c40b158
  40b129:	rol    DWORD PTR [rax],0x0
  40b12c:	and    BYTE PTR [rdi],ch
  40b12e:	add    BYTE PTR [rax],al
  40b130:	push   0x2f
  40b132:	add    BYTE PTR [rax],al
  40b134:	jo     0x40b0f7
  40b136:	add    BYTE PTR [rax],al
  40b138:	jo     0x40b169
  40b13a:	add    BYTE PTR [rax],al
  40b13c:	fsubr  QWORD PTR [rdi]
  40b13e:	add    BYTE PTR [rax],al
  40b140:	js     0x40b103
  40b142:	add    BYTE PTR [rax],al
  40b144:	loopne 0x40b175
  40b146:	add    BYTE PTR [rax],al
  40b148:	(bad)  
  40b149:	xor    BYTE PTR [rax],al
  40b14b:	add    BYTE PTR [rcx+rax*8+0x30900000],al
  40b152:	add    BYTE PTR [rax],al
  40b154:	scas   eax,DWORD PTR es:[rdi]
  40b155:	xor    al,BYTE PTR [rax]
  40b157:	add    BYTE PTR [rax-0x4fffff3f],dl
  40b15d:	xor    al,BYTE PTR [rax]
  40b15f:	add    BYTE PTR [rsp+rsi*1],cl
  40b162:	add    BYTE PTR [rax],al
  40b164:	movabs al,ds:0xab000034100000c1
  40b16d:	xor    al,0x0
  40b16f:	add    BYTE PTR [rcx+rax*8+0x34b00000],dh
  40b176:	add    BYTE PTR [rax],al
  40b178:	div    DWORD PTR [rax+rax*1]
  40b17b:	add    al,al
  40b17d:	rol    DWORD PTR [rax],0x0
  40b180:	add    BYTE PTR [rip+0x37190000],dh        # 0x3759b186
  40b186:	add    BYTE PTR [rax],al
  40b188:	int3   
  40b189:	rol    DWORD PTR [rax],0x0
  40b18c:	and    BYTE PTR [rdi],dh
  40b18e:	add    BYTE PTR [rax],al
  40b190:	shl    DWORD PTR [rdi],cl
  40b192:	add    BYTE PTR [rax],al
  40b194:	in     al,0xc1
  40b196:	add    BYTE PTR [rax],al
  40b198:	loopne 0x40b1d1
  40b19a:	add    BYTE PTR [rax],al
  40b19c:	cmp    DWORD PTR [rdx],0x0
  40b19f:	add    ah,dh
  40b1a1:	rol    DWORD PTR [rax],0x0
  40b1a4:	nop
  40b1a5:	cmp    al,BYTE PTR [rax]
  40b1a7:	add    BYTE PTR [rdx+rdi*1-0x3df40000],dh
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	sar    BYTE PTR [rdx],0x0
  40b1b3:	add    BYTE PTR [rcx+0x1000003b],ah
  40b1b9:	ret    0x0
  40b1bc:	mov    al,0x3b
  40b1be:	add    BYTE PTR [rax],al
  40b1c0:	dec    BYTE PTR [rcx+0x0]
  40b1c3:	add    BYTE PTR [rax],ah
  40b1c5:	ret    0x0
  40b1c8:	add    BYTE PTR [rdx+0x0],cl
  40b1cb:	add    BYTE PTR [rdx],ah
  40b1cd:	rex.WX add BYTE PTR [rax],al
  40b1d0:	cmp    dl,al
  40b1d2:	add    BYTE PTR [rax],al
  40b1d4:	xor    BYTE PTR [rdx+0x0],cl
  40b1d7:	add    BYTE PTR [rax+0x4a],dl
  40b1da:	add    BYTE PTR [rax],al
  40b1dc:	rex ret 0x0
  40b1e0:	push   rax
  40b1e1:	rex.WX add BYTE PTR [rax],al
  40b1e4:	jo     0x40b230
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	rex.W ret 0x0
  40b1ec:	jo     0x40b238
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	xchg   edi,eax
  40b1f1:	rex.WX add BYTE PTR [rax],al
  40b1f4:	push   rax
  40b1f5:	ret    0x0
  40b1f8:	movabs al,ds:0x5400004b0a00004a
  40b201:	ret    0x0
  40b204:	adc    BYTE PTR [rbx+0x0],cl
  40b207:	add    BYTE PTR [rdx],dl
  40b209:	rex.WXB add BYTE PTR [r8],al
  40b20c:	pop    rax
  40b20d:	ret    0x0
  40b210:	and    BYTE PTR [rbx+0x0],cl
  40b213:	add    BYTE PTR [rax+0x4b],al
  40b216:	add    BYTE PTR [rax],al
  40b218:	pop    rsp
  40b219:	ret    0x0
  40b21c:	rex
  40b21d:	rex.WXB add BYTE PTR [r8],al
  40b220:	rex.W
  40b221:	rex.WXB add BYTE PTR [r8],al
  40b224:	fs ret 0x0
  40b228:	push   rax
  40b229:	rex.WXB add BYTE PTR [r8],al
  40b22c:	movabs eax,ds:0xb00000c26800004b
  40b235:	rex.WXB add BYTE PTR [r8],al
  40b238:	loopne 0x40b285
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	je     0x40b200
  40b23e:	add    BYTE PTR [rax],al
  40b240:	loopne 0x40b28d
  40b242:	add    BYTE PTR [rax],al
  40b244:	sub    DWORD PTR [rax+rax*1+0x0],ecx
  40b248:	jl     0x40b20c
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	xor    BYTE PTR [rax+rax*1+0x0],cl
  40b250:	jae    0x40b29e
  40b252:	add    BYTE PTR [rax],al
  40b254:	mov    dl,al
  40b256:	add    BYTE PTR [rax],al
  40b258:	or     BYTE PTR [rax+rax*1+0x0],0xae
  40b25d:	rex.WR add BYTE PTR [rax],r8b
  40b260:	nop
  40b261:	ret    0x0
  40b264:	mov    al,0x4c
  40b266:	add    BYTE PTR [rax],al
  40b268:	push   rdi
  40b269:	rex.WRB add BYTE PTR [r8],r8b
  40b26c:	pushf  
  40b26d:	ret    0x0
  40b270:	(bad)  
  40b271:	rex.WRB add BYTE PTR [r8],r8b
  40b274:	jns    0x40b2c3
  40b276:	add    BYTE PTR [rax],al
  40b278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b279:	ret    0x0
  40b27c:	or     BYTE PTR [rbp+0x0],0x0
  40b280:	mov    ch,0x4d
  40b282:	add    BYTE PTR [rax],al
  40b284:	lods   al,BYTE PTR ds:[rsi]
  40b285:	ret    0x0
  40b288:	ror    BYTE PTR [rbp+0x0],0x0
  40b28c:	adc    eax,0xb400004e
  40b291:	ret    0x0
  40b294:	and    BYTE PTR [rsi+0x0],cl
  40b297:	add    BYTE PTR [rsi+rcx*2],bh
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	rol    dl,0x0
  40b29f:	add    BYTE PTR [rax+0x4e],al
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	rex.WX
  40b2a5:	rex.WRX add BYTE PTR [rax],r8b
  40b2a8:	(bad)
  40b2ac:	push   rax
  40b2ad:	rex.WRX add BYTE PTR [rax],r8b
  40b2b0:	push   rbx
  40b2b1:	rex.WRX add BYTE PTR [rax],r8b
  40b2b4:	enter  0xc2,0x0
  40b2b8:	(bad)  
  40b2b9:	rex.WRX add BYTE PTR [rax],r8b
  40b2bc:	rex.WRXB add BYTE PTR ss:[r8],r8b
  40b2c0:	int3   
  40b2c1:	ret    0x0
  40b2c4:	rex
  40b2c5:	rex.WRXB add BYTE PTR [r8],r8b
  40b2c8:	cmp    edx,DWORD PTR [rax+0x0]
  40b2cb:	add    ah,bl
  40b2cd:	ret    0x0
  40b2d0:	rex push rax
  40b2d2:	add    BYTE PTR [rax],al
  40b2d4:	outs   dx,DWORD PTR ds:[rsi]
  40b2d5:	push   rax
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	in     al,dx
  40b2d9:	ret    0x0
  40b2dc:	jo     0x40b32e
  40b2de:	add    BYTE PTR [rax],al
  40b2e0:	fst    DWORD PTR [rax+0x0]
  40b2e3:	add    ah,dh
  40b2e5:	ret    0x0
  40b2e8:	loopne 0x40b33a
  40b2ea:	add    BYTE PTR [rax],al
  40b2ec:	jrcxz  0x40b33e
  40b2ee:	add    BYTE PTR [rax],al
  40b2f0:	add    bl,al
  40b2f2:	add    BYTE PTR [rax],al
  40b2f4:	lock push rax
  40b2f6:	add    BYTE PTR [rax],al
  40b2f8:	xor    DWORD PTR [rcx+0x0],edx
  40b2fb:	add    BYTE PTR [rbx+rax*8],al
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	rex push rcx
  40b302:	add    BYTE PTR [rax],al
  40b304:	rex.WR push rcx
  40b306:	add    BYTE PTR [rax],al
  40b308:	or     al,0xc3
  40b30a:	add    BYTE PTR [rax],al
  40b30c:	push   rax
  40b30d:	push   rcx
  40b30e:	add    BYTE PTR [rax],al
  40b310:	rex.WR push rdx
  40b312:	add    BYTE PTR [rax],al
  40b314:	adc    bl,al
  40b316:	add    BYTE PTR [rax],al
  40b318:	push   rax
  40b319:	push   rdx
  40b31a:	add    BYTE PTR [rax],al
  40b31c:	push   rbx
  40b31d:	push   rdx
  40b31e:	add    BYTE PTR [rax],al
  40b320:	sub    bl,al
  40b322:	add    BYTE PTR [rax],al
  40b324:	(bad)  
  40b325:	push   rdx
  40b326:	add    BYTE PTR [rax],al
  40b328:	fs push rdx
  40b32a:	add    BYTE PTR [rax],al
  40b32c:	sub    al,0xc3
  40b32e:	add    BYTE PTR [rax],al
  40b330:	jo     0x40b384
  40b332:	add    BYTE PTR [rax],al
  40b334:	je     0x40b388
  40b336:	add    BYTE PTR [rax],al
  40b338:	xor    bl,al
  40b33a:	add    BYTE PTR [rax],al
  40b33c:	adc    BYTE PTR [rdx+0x0],0x0
  40b340:	loope  0x40b394
  40b342:	add    BYTE PTR [rax],al
  40b344:	xor    al,0xc3
  40b346:	add    BYTE PTR [rax],al
  40b348:	lock push rdx
  40b34a:	add    BYTE PTR [rax],al
  40b34c:	push   rdx
  40b34d:	push   rsp
  40b34e:	add    BYTE PTR [rax],al
  40b350:	rex ret 
  40b352:	add    BYTE PTR [rax],al
  40b354:	(bad)  
  40b355:	push   rsp
  40b356:	add    BYTE PTR [rax],al
  40b358:	pop    rcx
  40b359:	push   rdi
  40b35a:	add    BYTE PTR [rax],al
  40b35c:	push   rsp
  40b35d:	ret    
  40b35e:	add    BYTE PTR [rax],al
  40b360:	(bad)  
  40b361:	push   rdi
  40b362:	add    BYTE PTR [rax],al
  40b364:	(bad)  
  40b365:	pop    rcx
  40b366:	add    BYTE PTR [rax],al
  40b368:	ins    BYTE PTR es:[rdi],dx
  40b369:	ret    
  40b36a:	add    BYTE PTR [rax],al
  40b36c:	adc    BYTE PTR [rcx+0x0],bl
  40b36f:	add    ah,bh
  40b371:	pop    rcx
  40b372:	add    BYTE PTR [rax],al
  40b374:	je     0x40b339
  40b376:	add    BYTE PTR [rax],al
  40b378:	add    BYTE PTR [rdx+0x0],bl
  40b37b:	add    BYTE PTR [rax-0x7bffffa5],bh
  40b381:	ret    
  40b382:	add    BYTE PTR [rax],al
  40b384:	rcr    BYTE PTR [rbx+0x0],0x0
  40b388:	sub    eax,0x8c00005c
  40b38d:	ret    
  40b38e:	add    BYTE PTR [rax],al
  40b390:	xor    BYTE PTR [rax+rax*1+0x0],bl
  40b394:	scas   eax,DWORD PTR es:[rdi]
  40b395:	pop    rsp
  40b396:	add    BYTE PTR [rax],al
  40b398:	pushf  
  40b399:	ret    
  40b39a:	add    BYTE PTR [rax],al
  40b39c:	mov    al,0x5c
  40b39e:	add    BYTE PTR [rax],al
  40b3a0:	rex.WRXB pop r13
  40b3a2:	add    BYTE PTR [rax],al
  40b3a4:	test   al,0xc3
  40b3a6:	add    BYTE PTR [rax],al
  40b3a8:	push   rax
  40b3a9:	pop    rbp
  40b3aa:	add    BYTE PTR [rax],al
  40b3ac:	sub    bl,BYTE PTR [rsi+0x0]
  40b3af:	add    BYTE PTR [rax+0x300000c3],dh
  40b3b5:	pop    rsi
  40b3b6:	add    BYTE PTR [rax],al
  40b3b8:	rex.WRXB pop r14
  40b3ba:	add    BYTE PTR [rax],al
  40b3bc:	mov    eax,0x500000c3
  40b3c1:	pop    rsi
  40b3c2:	add    BYTE PTR [rax],al
  40b3c4:	(bad)  
  40b3c5:	pop    rsi
  40b3c6:	add    BYTE PTR [rax],al
  40b3c8:	mov    esp,0x700000c3
  40b3cd:	pop    rsi
  40b3ce:	add    BYTE PTR [rax],al
  40b3d0:	mov    ch,0x5e
  40b3d2:	add    BYTE PTR [rax],al
  40b3d4:	rol    bl,0x0
  40b3d7:	add    al,al
  40b3d9:	pop    rsi
  40b3da:	add    BYTE PTR [rax],al
  40b3dc:	pop    rsi
  40b3dd:	pop    rdi
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	(bad)
  40b3e4:	(bad)  
  40b3e5:	pop    rdi
  40b3e6:	add    BYTE PTR [rax],al
  40b3e8:	movabs ds:0xb00000c3d000005f,eax
  40b3f1:	pop    rdi
  40b3f2:	add    BYTE PTR [rax],al
  40b3f4:	jmp    0x40b455
  40b3f6:	add    BYTE PTR [rax],al
  40b3f8:	fadd   st(3),st
  40b3fa:	add    BYTE PTR [rax],al
  40b3fc:	lock pop rdi
  40b3fe:	add    BYTE PTR [rax],al
  40b400:	jle    0x40b462
  40b402:	add    BYTE PTR [rax],al
  40b404:	in     al,0xc3
  40b406:	add    BYTE PTR [rax],al
  40b408:	and    BYTE PTR [rax+0x0],0x0
  40b40c:	mov    eax,0xf0000060
  40b411:	ret    
  40b412:	add    BYTE PTR [rax],al
  40b414:	shl    BYTE PTR [rax+0x0],0x0
  40b418:	adc    eax,0xfc000061
  40b41d:	ret    
  40b41e:	add    BYTE PTR [rax],al
  40b420:	and    BYTE PTR [rcx+0x0],ah
  40b423:	add    dh,cl
  40b425:	(bad)  
  40b426:	add    BYTE PTR [rax],al
  40b428:	or     ah,al
  40b42a:	add    BYTE PTR [rax],al
  40b42c:	adc    BYTE PTR [rdx+0x0],ah
  40b42f:	add    BYTE PTR [rbx+0x63],al
  40b432:	add    BYTE PTR [rax],al
  40b434:	sbb    ah,al
  40b436:	add    BYTE PTR [rax],al
  40b438:	push   rax
  40b439:	movsxd eax,DWORD PTR [rax]
  40b43b:	add    BYTE PTR [rax],dl
  40b43d:	add    BYTE PTR fs:[rax],al
  40b440:	sub    al,0xc4
  40b442:	add    BYTE PTR [rax],al
  40b444:	adc    BYTE PTR [rax+rax*1+0x0],ah
  40b448:	adc    eax,0x3c000064
  40b44d:	(bad)  
  40b44e:	add    BYTE PTR [rax],al
  40b450:	loopne 0x40b4b7
  40b452:	add    BYTE PTR [rax],al
  40b454:	call   0x4040b4be
  40b459:	(bad)  
  40b45a:	add    BYTE PTR [rax],al
  40b45c:	lock add BYTE PTR gs:[rax],al
  40b460:	sti    
  40b461:	add    BYTE PTR gs:[rax],al
  40b464:	rex.R (bad) 
  40b466:	add    BYTE PTR [rax],al
  40b468:	shl    BYTE PTR [rsi+0x0],1
  40b46b:	add    BYTE PTR [rdx+rbp*2-0x3f3c0000],dh
	...

Disassembly of section .xdata:

000000000040c000 <.xdata>:
  40c000:	add    DWORD PTR [rax],eax
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    DWORD PTR [rcx+rax*1],eax
  40c007:	add    BYTE PTR [rdx+rax*2],al
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	add    DWORD PTR [rcx+rax*1],eax
  40c00f:	add    BYTE PTR [rdx+riz*2],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	add    DWORD PTR [rdi],ecx
  40c016:	or     BYTE PTR [rax],al
  40c018:	lgdt   [rbx]
  40c01b:	add    BYTE PTR [rax],cl
  40c01d:	xor    BYTE PTR [rdi],al
  40c01f:	(bad)  
  40c020:	(bad)  
  40c021:	jo     0x40c028
  40c023:	push   rax
  40c024:	add    al,0xc0
  40c026:	add    dl,al
  40c028:	or     DWORD PTR [rcx+rax*1],eax
  40c02b:	add    BYTE PTR [rdx+rax*2],al
  40c02e:	add    BYTE PTR [rax],al
  40c030:	fsub   DWORD PTR [rbp+0x0]
  40c033:	add    BYTE PTR [rcx],al
  40c035:	add    BYTE PTR [rax],al
  40c037:	add    ah,dl
  40c039:	adc    al,0x0
  40c03b:	add    ah,ch
  40c03d:	adc    al,0x0
  40c03f:	add    BYTE PTR [rax],al
  40c041:	pop    rdx
  40c042:	add    BYTE PTR [rax],al
  40c044:	in     al,dx
  40c045:	adc    al,0x0
  40c047:	add    BYTE PTR [rcx],cl
  40c049:	add    al,0x1
  40c04b:	add    BYTE PTR [rdx+rax*2],al
  40c04e:	add    BYTE PTR [rax],al
  40c050:	fsub   DWORD PTR [rbp+0x0]
  40c053:	add    BYTE PTR [rcx],al
  40c055:	add    BYTE PTR [rax],al
  40c057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40c05e:	add    BYTE PTR [rax],al
  40c060:	add    BYTE PTR [rdx+0x0],bl
  40c063:	add    BYTE PTR [rdx*1+0x8010000],bl
  40c06a:	add    eax,0x4420800
  40c06f:	xor    BYTE PTR [rbx],al
  40c071:	(bad)  
  40c072:	add    dh,BYTE PTR [rax+0x1]
  40c075:	push   rax
  40c076:	add    BYTE PTR [rax],al
  40c078:	add    DWORD PTR [rsi],eax
  40c07a:	add    eax,DWORD PTR [rax]
  40c07c:	(bad)  
  40c07d:	rex.X add sil,BYTE PTR [rax]
  40c080:	add    DWORD PTR [rax+0x0],esp
  40c083:	add    BYTE PTR [rcx],al
  40c085:	(bad)  
  40c086:	add    eax,DWORD PTR [rax]
  40c088:	(bad)  
  40c089:	rex.X add sil,BYTE PTR [rax]
  40c08c:	add    DWORD PTR [rax+0x0],esp
  40c08f:	add    BYTE PTR [rcx],al
  40c091:	(bad)  
  40c092:	add    eax,DWORD PTR [rax]
  40c094:	(bad)  
  40c095:	rex.X add sil,BYTE PTR [rax]
  40c098:	add    DWORD PTR [rax+0x0],esp
  40c09b:	add    BYTE PTR [rcx],al
  40c09d:	or     al,BYTE PTR [rsi]
  40c09f:	add    BYTE PTR [rdx],cl
  40c0a1:	xor    al,BYTE PTR [rsi]
  40c0a3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c509
  40c0a9:	push   rax
  40c0aa:	add    al,al
  40c0ac:	add    DWORD PTR [rbx],edx
  40c0ae:	or     al,BYTE PTR [rax]
  40c0b0:	adc    eax,DWORD PTR [rcx]
  40c0b2:	(bad)  
  40c0b3:	add    BYTE PTR [rax+rsi*1],cl
  40c0b6:	or     esp,DWORD PTR [rax+0xa]
  40c0b9:	jo     0x40c0c4
  40c0bb:	push   rax
  40c0bc:	or     al,al
  40c0be:	(bad)  
  40c0bf:	rol    BYTE PTR [rax+riz*8],1
  40c0c2:	add    dh,al
  40c0c4:	add    DWORD PTR [rsi],ecx
  40c0c6:	or     BYTE PTR [rax],al
  40c0c8:	(bad)  
  40c0c9:	ror    BYTE PTR [rdx],cl
  40c0cb:	xor    BYTE PTR [rcx],cl
  40c0cd:	(bad)  
  40c0ce:	or     BYTE PTR [rax+0x7],dh
  40c0d1:	push   rax
  40c0d2:	(bad)  
  40c0d3:	rol    BYTE PTR [rax+rdx*8],0x2
  40c0d7:	loopne 0x40c0da
  40c0d9:	add    al,0x1
  40c0db:	add    BYTE PTR [rdx+rax*2],al
  40c0de:	add    BYTE PTR [rax],al
  40c0e0:	add    DWORD PTR [rcx+rax*1],eax
  40c0e3:	add    BYTE PTR [rdx+riz*2],al
  40c0e6:	add    BYTE PTR [rax],al
  40c0e8:	add    DWORD PTR [rdi],eax
  40c0ea:	add    al,0x0
  40c0ec:	(bad)  
  40c0ed:	push   rdx
  40c0ee:	add    esi,DWORD PTR [rax]
  40c0f0:	add    ah,BYTE PTR [rax+0x1]
  40c0f3:	jo     0x40c0f6
  40c0f5:	add    al,0x1
  40c0f7:	add    BYTE PTR [rdx+rax*2],al
  40c0fa:	add    BYTE PTR [rax],al
  40c0fc:	add    DWORD PTR [rsi],ecx
  40c0fe:	or     BYTE PTR [rax],al
  40c100:	(bad)  
  40c101:	xchg   edx,eax
  40c102:	or     dh,BYTE PTR [rax]
  40c104:	or     DWORD PTR [rax+0x8],esp
  40c107:	jo     0x40c110
  40c109:	push   rax
  40c10a:	(bad)  
  40c10b:	rol    BYTE PTR [rax+rdx*8],0x2
  40c10f:	loopne 0x40c112
  40c111:	(bad)  
  40c112:	add    al,0x0
  40c114:	(bad)  
  40c115:	push   rdx
  40c116:	add    esi,DWORD PTR [rax]
  40c118:	add    ah,BYTE PTR [rax+0x1]
  40c11b:	jo     0x40c11e
  40c11d:	add    al,0x1
  40c11f:	add    BYTE PTR [rdx+rax*2],al
  40c122:	add    BYTE PTR [rax],al
  40c124:	add    DWORD PTR [rcx+rax*1],eax
  40c127:	add    BYTE PTR [rdx+rax*2],al
  40c12a:	add    BYTE PTR [rax],al
  40c12c:	add    DWORD PTR [rcx+rax*1],eax
  40c12f:	add    BYTE PTR [rdx+rax*2],al
  40c132:	add    BYTE PTR [rax],al
  40c134:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c13c
  40c13a:	add    DWORD PTR [rax],esi
  40c13c:	add    DWORD PTR [rdi],eax
  40c13e:	add    al,0x0
  40c140:	(bad)  
  40c141:	xor    al,BYTE PTR [rbx]
  40c143:	xor    BYTE PTR [rdx],al
  40c145:	(bad)  
  40c146:	add    DWORD PTR [rax+0x1],esi
  40c149:	or     al,0x7
  40c14b:	add    BYTE PTR [rdx+rax*2],cl
  40c14e:	or     BYTE PTR [rax],dh
  40c150:	(bad)  
  40c151:	(bad)  
  40c152:	(bad)  
  40c153:	jo     0x40c15a
  40c155:	push   rax
  40c156:	add    al,0xc0
  40c158:	add    dl,al
  40c15a:	add    BYTE PTR [rax],al
  40c15c:	add    DWORD PTR [rsi],ecx
  40c15e:	or     BYTE PTR [rax],al
  40c160:	(bad)  
  40c161:	xor    cl,BYTE PTR [rdx]
  40c163:	xor    BYTE PTR [rcx],cl
  40c165:	(bad)  
  40c166:	or     BYTE PTR [rax+0x7],dh
  40c169:	push   rax
  40c16a:	(bad)  
  40c16b:	rol    BYTE PTR [rax+rdx*8],0x2
  40c16f:	loopne 0x40c172
  40c171:	add    eax,0x32050002
  40c176:	add    DWORD PTR [rax],esi
  40c178:	add    DWORD PTR [rsi],eax
  40c17a:	add    eax,DWORD PTR [rax]
  40c17c:	(bad)  
  40c17d:	(bad)  
  40c17f:	xor    BYTE PTR [rcx],al
  40c181:	(bad)  
  40c182:	add    BYTE PTR [rax],al
  40c184:	add    DWORD PTR [rsi],eax
  40c186:	add    eax,DWORD PTR [rax]
  40c188:	(bad)  
  40c189:	rex.X add sil,BYTE PTR [rax]
  40c18c:	add    DWORD PTR [rax+0x0],esp
  40c18f:	add    BYTE PTR [rcx],al
  40c191:	or     BYTE PTR [rip+0x4620800],al        # 0x4a2c997
  40c197:	xor    BYTE PTR [rbx],al
  40c199:	(bad)  
  40c19a:	add    dh,BYTE PTR [rax+0x1]
  40c19d:	push   rax
  40c19e:	add    BYTE PTR [rax],al
  40c1a0:	add    DWORD PTR [rdi+rax*1],ecx
  40c1a3:	add    BYTE PTR [rdx+riz*2],cl
  40c1a6:	or     BYTE PTR [rax],dh
  40c1a8:	(bad)  
  40c1a9:	(bad)  
  40c1aa:	(bad)  
  40c1ab:	jo     0x40c1b2
  40c1ad:	push   rax
  40c1ae:	add    al,0xc0
  40c1b0:	add    dl,al
  40c1b2:	add    BYTE PTR [rax],al
  40c1b4:	add    DWORD PTR [rdi],eax
  40c1b6:	add    al,0x0
  40c1b8:	(bad)  
  40c1b9:	xor    al,BYTE PTR [rbx]
  40c1bb:	xor    BYTE PTR [rdx],al
  40c1bd:	(bad)  
  40c1be:	add    DWORD PTR [rax+0x1],esi
  40c1c1:	(bad)  
  40c1c2:	add    eax,DWORD PTR [rax]
  40c1c4:	(bad)  
  40c1c5:	rex.X add sil,BYTE PTR [rax]
  40c1c8:	add    DWORD PTR [rax+0x0],esp
  40c1cb:	add    BYTE PTR [rcx],al
  40c1cd:	adc    BYTE PTR [rcx],cl
  40c1cf:	add    BYTE PTR [rax],dl
  40c1d1:	(bad)  
  40c1d2:	or     al,0x30
  40c1d4:	or     esp,DWORD PTR [rax+0xa]
  40c1d7:	jo     0x40c1e2
  40c1d9:	push   rax
  40c1da:	or     al,al
  40c1dc:	(bad)  
  40c1dd:	rol    BYTE PTR [rax+riz*8],1
  40c1e0:	add    dh,al
  40c1e2:	add    BYTE PTR [rax],al
  40c1e4:	add    DWORD PTR [rdx],ecx
  40c1e6:	(bad)  
  40c1e7:	add    BYTE PTR [rdx],cl
  40c1e9:	xor    al,BYTE PTR [rsi]
  40c1eb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c651
  40c1f1:	push   rax
  40c1f2:	add    al,al
  40c1f4:	add    DWORD PTR [rax],edx
  40c1f6:	or     DWORD PTR [rax],eax
  40c1f8:	adc    BYTE PTR [rdx+0x600b300c],al
  40c1fe:	or     dh,BYTE PTR [rax+0x9]
  40c201:	push   rax
  40c202:	or     al,al
  40c204:	(bad)  
  40c205:	rol    BYTE PTR [rax+riz*8],1
  40c208:	add    dh,al
  40c20a:	add    BYTE PTR [rax],al
  40c20c:	add    DWORD PTR [rax],eax
  40c20e:	add    BYTE PTR [rax],al
  40c210:	add    DWORD PTR [rax],ecx
  40c212:	(bad)  
  40c213:	add    BYTE PTR [rax],cl
  40c215:	xor    BYTE PTR [rdi],al
  40c217:	(bad)  
  40c218:	(bad)  
  40c219:	jo     0x40c220
  40c21b:	push   rax
  40c21c:	add    al,0xc0
  40c21e:	add    dl,al
  40c220:	add    DWORD PTR [rax],edx
  40c222:	or     DWORD PTR [rax],eax
  40c224:	adc    dl,ah
  40c226:	or     al,0x30
  40c228:	or     esp,DWORD PTR [rax+0xa]
  40c22b:	jo     0x40c236
  40c22d:	push   rax
  40c22e:	or     al,al
  40c230:	(bad)  
  40c231:	rol    BYTE PTR [rax+riz*8],1
  40c234:	add    dh,al
  40c236:	add    BYTE PTR [rax],al
  40c238:	add    DWORD PTR [rcx+rax*1],eax
  40c23b:	add    BYTE PTR [rdx+riz*2],al
  40c23e:	add    BYTE PTR [rax],al
  40c240:	add    DWORD PTR [rcx+rax*1],eax
  40c243:	add    BYTE PTR [rdx+riz*2],al
  40c246:	add    BYTE PTR [rax],al
  40c248:	add    DWORD PTR [rcx+rax*1],eax
  40c24b:	add    BYTE PTR [rdx+riz*2],al
  40c24e:	add    BYTE PTR [rax],al
  40c250:	add    DWORD PTR [rax],eax
  40c252:	add    BYTE PTR [rax],al
  40c254:	add    DWORD PTR [rax],eax
  40c256:	add    BYTE PTR [rax],al
  40c258:	add    DWORD PTR [rax],eax
  40c25a:	add    BYTE PTR [rax],al
  40c25c:	add    DWORD PTR [rcx+rax*1],eax
  40c25f:	add    BYTE PTR [rdx+riz*2],al
  40c262:	add    BYTE PTR [rax],al
  40c264:	add    DWORD PTR [rax],eax
  40c266:	add    BYTE PTR [rax],al
  40c268:	add    DWORD PTR [rdi],eax
  40c26a:	add    al,0x0
  40c26c:	(bad)  
  40c26d:	push   rdx
  40c26e:	add    esi,DWORD PTR [rax]
  40c270:	add    ah,BYTE PTR [rax+0x1]
  40c273:	jo     0x40c276
  40c275:	add    eax,0x32050002
  40c27a:	add    DWORD PTR [rax],esi
  40c27c:	add    DWORD PTR [rsi],eax
  40c27e:	add    eax,DWORD PTR [rax]
  40c280:	(bad)  
  40c281:	rex.X add sil,BYTE PTR [rax]
  40c284:	add    DWORD PTR [rax+0x0],esp
  40c287:	add    BYTE PTR [rcx],al
  40c289:	add    eax,0x32050002
  40c28e:	add    DWORD PTR [rax],esi
  40c290:	add    DWORD PTR [rsi],eax
  40c292:	add    eax,DWORD PTR [rax]
  40c294:	(bad)  
  40c295:	rex.X add sil,BYTE PTR [rax]
  40c298:	add    DWORD PTR [rax+0x0],esp
  40c29b:	add    BYTE PTR [rcx],al
  40c29d:	add    eax,0x52050002
  40c2a2:	add    DWORD PTR [rax],esi
  40c2a4:	add    DWORD PTR [rcx+rax*1],eax
  40c2a7:	add    BYTE PTR [rdx+rax*2],al
  40c2aa:	add    BYTE PTR [rax],al
  40c2ac:	add    DWORD PTR [rcx+rax*1],eax
  40c2af:	add    BYTE PTR [rdx+rax*2],al
  40c2b2:	add    BYTE PTR [rax],al
  40c2b4:	add    DWORD PTR [rsi],eax
  40c2b6:	add    eax,DWORD PTR [rax]
  40c2b8:	(bad)  
  40c2b9:	rex.X add sil,BYTE PTR [rax]
  40c2bc:	add    DWORD PTR [rax+0x0],esp
  40c2bf:	add    BYTE PTR [rcx],al
  40c2c1:	add    BYTE PTR [rax],al
  40c2c3:	add    BYTE PTR [rcx],al
  40c2c5:	add    BYTE PTR [rax],al
  40c2c7:	add    BYTE PTR [rcx],al
  40c2c9:	add    BYTE PTR [rax],al
  40c2cb:	add    BYTE PTR [rcx],al
  40c2cd:	or     al,BYTE PTR [rsi]
  40c2cf:	add    BYTE PTR [rdx],cl
  40c2d1:	jb     0x40c2d9
  40c2d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c739
  40c2d9:	push   rax
  40c2da:	add    al,al
  40c2dc:	add    DWORD PTR [rdx],ecx
  40c2de:	add    eax,0x6d20a05
  40c2e3:	add    eax,DWORD PTR [rbx]
  40c2e5:	xor    BYTE PTR [rdx],al
  40c2e7:	(bad)  
  40c2e8:	add    DWORD PTR [rax+0x0],edx
  40c2eb:	add    BYTE PTR [rcx],al
  40c2ed:	add    al,0x1
  40c2ef:	add    BYTE PTR [rdx+rax*2],al
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	add    DWORD PTR [rsi],eax
  40c2f6:	add    eax,DWORD PTR [rax]
  40c2f8:	(bad)  
  40c2f9:	rex.X add sil,BYTE PTR [rax]
  40c2fc:	add    DWORD PTR [rax+0x0],esp
  40c2ff:	add    BYTE PTR [rcx],al
  40c301:	add    BYTE PTR [rax],al
  40c303:	add    BYTE PTR [rcx],al
  40c305:	add    al,0x1
  40c307:	add    BYTE PTR [rdx+riz*4],al
  40c30a:	add    BYTE PTR [rax],al
  40c30c:	add    DWORD PTR [rax],eax
  40c30e:	add    BYTE PTR [rax],al
  40c310:	add    DWORD PTR [rsi],edx
  40c312:	or     DWORD PTR [rax],eax
  40c314:	(bad)  
  40c315:	mov    BYTE PTR [rsi],al
  40c317:	add    BYTE PTR [rax],dl
  40c319:	js     0x40c320
  40c31b:	add    BYTE PTR [rbx],cl
  40c31d:	push   0xffffffffe2060004
  40c322:	add    dh,BYTE PTR [rax]
  40c324:	add    DWORD PTR [rax+0x0],esp
  40c327:	add    BYTE PTR [rcx],al
  40c329:	add    BYTE PTR [rax],al
  40c32b:	add    BYTE PTR [rcx],al
  40c32d:	add    BYTE PTR [rax],al
  40c32f:	add    BYTE PTR [rcx],al
  40c331:	add    BYTE PTR [rax],al
  40c333:	add    BYTE PTR [rcx],al
  40c335:	(bad)  
  40c336:	add    eax,DWORD PTR [rax]
  40c338:	(bad)  
  40c339:	(bad)  
  40c33b:	xor    BYTE PTR [rcx],al
  40c33d:	(bad)  
  40c33e:	add    BYTE PTR [rax],al
  40c340:	add    DWORD PTR [rdi+rax*1],ecx
  40c343:	add    BYTE PTR [rdx+riz*4],cl
  40c346:	or     BYTE PTR [rax],dh
  40c348:	(bad)  
  40c349:	(bad)  
  40c34a:	(bad)  
  40c34b:	jo     0x40c352
  40c34d:	push   rax
  40c34e:	add    al,0xc0
  40c350:	add    dl,al
  40c352:	add    BYTE PTR [rax],al
  40c354:	add    DWORD PTR [rcx],edx
  40c356:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e756d
  40c35c:	or     dh,BYTE PTR [rax]
  40c35e:	or     DWORD PTR [rax+0x8],esp
  40c361:	jo     0x40c36a
  40c363:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220c73a
  40c36a:	add    BYTE PTR [rax],al
  40c36c:	add    DWORD PTR [rcx+rax*1],eax
  40c36f:	add    BYTE PTR [rdx+rax*2],al
  40c372:	add    BYTE PTR [rax],al
  40c374:	add    DWORD PTR [rdx],ecx
  40c376:	(bad)  
  40c377:	add    BYTE PTR [rdx],cl
  40c379:	xor    al,BYTE PTR [rsi]
  40c37b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c7e1
  40c381:	push   rax
  40c382:	add    al,al
  40c384:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c38c
  40c38a:	add    DWORD PTR [rax],esi
  40c38c:	add    DWORD PTR [rax],ecx
  40c38e:	add    eax,0x4420800
  40c393:	xor    BYTE PTR [rbx],al
  40c395:	(bad)  
  40c396:	add    dh,BYTE PTR [rax+0x1]
  40c399:	push   rax
  40c39a:	add    BYTE PTR [rax],al
  40c39c:	add    DWORD PTR [rdi],eax
  40c39e:	add    al,0x0
  40c3a0:	(bad)  
  40c3a1:	xor    al,BYTE PTR [rbx]
  40c3a3:	xor    BYTE PTR [rdx],al
  40c3a5:	(bad)  
  40c3a6:	add    DWORD PTR [rax+0x1],esi
  40c3a9:	add    eax,0x32050002
  40c3ae:	add    DWORD PTR [rax],esi
  40c3b0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c3b8
  40c3b6:	add    DWORD PTR [rax],esi
  40c3b8:	add    DWORD PTR [rax],eax
  40c3ba:	add    BYTE PTR [rax],al
  40c3bc:	add    DWORD PTR [rax],eax
  40c3be:	add    BYTE PTR [rax],al
  40c3c0:	add    DWORD PTR [rax],eax
  40c3c2:	add    BYTE PTR [rax],al
  40c3c4:	add    DWORD PTR [rdi],eax
  40c3c6:	add    al,0x0
  40c3c8:	(bad)  
  40c3c9:	xor    al,BYTE PTR [rbx]
  40c3cb:	xor    BYTE PTR [rdx],al
  40c3cd:	(bad)  
  40c3ce:	add    DWORD PTR [rax+0x1],esi
  40c3d1:	(bad)  
  40c3d2:	add    eax,DWORD PTR [rax]
  40c3d4:	(bad)  
  40c3d5:	rex.X add sil,BYTE PTR [rax]
  40c3d8:	add    DWORD PTR [rax+0x0],esp
  40c3db:	add    BYTE PTR [rcx],al
  40c3dd:	add    eax,0x32050002
  40c3e2:	add    DWORD PTR [rax],esi
  40c3e4:	add    DWORD PTR [rdi],eax
  40c3e6:	add    al,0x0
  40c3e8:	(bad)  
  40c3e9:	xor    al,BYTE PTR [rbx]
  40c3eb:	xor    BYTE PTR [rdx],al
  40c3ed:	(bad)  
  40c3ee:	add    DWORD PTR [rax+0x1],esi
  40c3f1:	(bad)  
  40c3f2:	add    eax,DWORD PTR [rax]
  40c3f4:	(bad)  
  40c3f5:	rex.X add sil,BYTE PTR [rax]
  40c3f8:	add    DWORD PTR [rax+0x0],esp
  40c3fb:	add    BYTE PTR [rcx],al
  40c3fd:	(bad)  
  40c3fe:	add    eax,DWORD PTR [rax]
  40c400:	(bad)  
  40c401:	rex.X add sil,BYTE PTR [rax]
  40c404:	add    DWORD PTR [rax+0x0],esp
  40c407:	add    BYTE PTR [rcx],al
  40c409:	or     BYTE PTR [rip+0x4420800],al        # 0x482cc0f
  40c40f:	xor    BYTE PTR [rbx],al
  40c411:	(bad)  
  40c412:	add    dh,BYTE PTR [rax+0x1]
  40c415:	push   rax
  40c416:	add    BYTE PTR [rax],al
  40c418:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14dc425
  40c41e:	rex.WX add BYTE PTR [rsi],al
  40c421:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c887
  40c427:	push   rax
  40c428:	add    al,al
  40c42a:	add    BYTE PTR [rax],al
  40c42c:	add    DWORD PTR [rax],ecx
  40c42e:	add    eax,0x4620800
  40c433:	xor    BYTE PTR [rbx],al
  40c435:	(bad)  
  40c436:	add    dh,BYTE PTR [rax+0x1]
  40c439:	push   rax
  40c43a:	add    BYTE PTR [rax],al
  40c43c:	add    DWORD PTR [rax],eax
  40c43e:	add    BYTE PTR [rax],al
  40c440:	add    DWORD PTR [rax],eax
  40c442:	add    BYTE PTR [rax],al
  40c444:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040d000 <.bss>:
	...

Disassembly of section .idata:

000000000040e000 <.idata>:
  40e000:	push   rax
  40e001:	loopne 0x40e003
	...
  40e00b:	add    BYTE PTR [rax+0x80000ea],dh
  40e011:	jrcxz  0x40e013
  40e013:	add    BYTE PTR [rax],bl
  40e015:	loope  0x40e017
	...
  40e01f:	add    BYTE PTR [rbx+rbp*8-0x1c300000],ch
  40e026:	add    BYTE PTR [rax],al
  40e028:	clc    
  40e029:	loop   0x40e02b
	...
  40e033:	add    BYTE PTR [rbx+rbp*8-0x1a500000],bh
	...
  40e04e:	add    BYTE PTR [rax],al
  40e050:	shl    ch,0x0
  40e053:	add    BYTE PTR [rax],al
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    al,bl
  40e059:	in     eax,0x0
  40e05b:	add    BYTE PTR [rax],al
  40e05d:	add    BYTE PTR [rax],al
  40e05f:	add    al,dh
  40e061:	in     eax,0x0
  40e063:	add    BYTE PTR [rax],al
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    BYTE PTR [rsi+riz*8],al
  40e06a:	add    BYTE PTR [rax],al
  40e06c:	add    BYTE PTR [rax],al
  40e06e:	add    BYTE PTR [rax],al
  40e070:	sbb    ah,dh
  40e072:	add    BYTE PTR [rax],al
  40e074:	add    BYTE PTR [rax],al
  40e076:	add    BYTE PTR [rax],al
  40e078:	xor    dh,ah
  40e07a:	add    BYTE PTR [rax],al
  40e07c:	add    BYTE PTR [rax],al
  40e07e:	add    BYTE PTR [rax],al
  40e080:	out    0x0,al
  40e083:	add    BYTE PTR [rax],al
  40e085:	add    BYTE PTR [rax],al
  40e087:	add    BYTE PTR [rsi-0x1a],dl
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	add    BYTE PTR [rax],al
  40e08e:	add    BYTE PTR [rax],al
  40e090:	push   0xe6
  40e095:	add    BYTE PTR [rax],al
  40e097:	add    BYTE PTR [rdx+0xe6],al
  40e09d:	add    BYTE PTR [rax],al
  40e09f:	add    BYTE PTR [rdx+0xe6],dl
  40e0a5:	add    BYTE PTR [rax],al
  40e0a7:	add    BYTE PTR [rsi+0xe6],ch
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    dh,al
  40e0b1:	out    0x0,al
  40e0b3:	add    BYTE PTR [rax],al
  40e0b5:	add    BYTE PTR [rax],al
  40e0b7:	add    al,ah
  40e0b9:	out    0x0,al
  40e0bb:	add    BYTE PTR [rax],al
  40e0bd:	add    BYTE PTR [rax],al
  40e0bf:	add    dh,dh
  40e0c1:	out    0x0,al
  40e0c3:	add    BYTE PTR [rax],al
  40e0c5:	add    BYTE PTR [rax],al
  40e0c7:	add    BYTE PTR [rdx],cl
  40e0c9:	out    0x0,eax
  40e0cb:	add    BYTE PTR [rax],al
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rdi+riz*8],ah
  40e0d2:	add    BYTE PTR [rax],al
  40e0d4:	add    BYTE PTR [rax],al
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	cmp    bh,ah
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	add    BYTE PTR [rax],al
  40e0de:	add    BYTE PTR [rax],al
  40e0e0:	push   rsi
  40e0e1:	out    0x0,eax
  40e0e3:	add    BYTE PTR [rax],al
  40e0e5:	add    BYTE PTR [rax],al
  40e0e7:	add    BYTE PTR [rsi-0x19],bl
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    BYTE PTR [rax],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	jb     0x40e0d9
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	add    BYTE PTR [rax],al
  40e0f6:	add    BYTE PTR [rax],al
  40e0f8:	and    bh,0x0
  40e0fb:	add    BYTE PTR [rax],al
  40e0fd:	add    BYTE PTR [rax],al
  40e0ff:	add    BYTE PTR [rdi+riz*8+0x0],bl
  40e106:	add    BYTE PTR [rax],al
  40e108:	scas   al,BYTE PTR es:[rdi]
  40e109:	out    0x0,eax
	...
  40e117:	add    BYTE PTR [rsi+0xe7],bh
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    dh,dl
  40e121:	out    0x0,eax
  40e123:	add    BYTE PTR [rax],al
  40e125:	add    BYTE PTR [rax],al
  40e127:	add    ah,ah
  40e129:	out    0x0,eax
  40e12b:	add    BYTE PTR [rax],al
  40e12d:	add    BYTE PTR [rax],al
  40e12f:	add    ah,dh
  40e131:	out    0x0,eax
  40e133:	add    BYTE PTR [rax],al
  40e135:	add    BYTE PTR [rax],al
  40e137:	add    BYTE PTR [rax],al
  40e139:	call   0x40e13e
  40e13e:	add    BYTE PTR [rax],al
  40e140:	(bad)  
  40e141:	call   0x40e146
  40e146:	add    BYTE PTR [rax],al
  40e148:	(bad)  
  40e149:	call   0x40e14e
  40e14e:	add    BYTE PTR [rax],al
  40e150:	xor    al,ch
  40e152:	add    BYTE PTR [rax],al
  40e154:	add    BYTE PTR [rax],al
  40e156:	add    BYTE PTR [rax],al
  40e158:	rex.R call 0x40e15e
  40e15e:	add    BYTE PTR [rax],al
  40e160:	rex.WRX call 0x40e166
  40e166:	add    BYTE PTR [rax],al
  40e168:	pop    rsp
  40e169:	call   0x40e16e
  40e16e:	add    BYTE PTR [rax],al
  40e170:	call   0xe174
  40e174:	add    BYTE PTR [rax],al
  40e176:	add    BYTE PTR [rax],al
  40e178:	jo     0x40e162
  40e17a:	add    BYTE PTR [rax],al
  40e17c:	add    BYTE PTR [rax],al
  40e17e:	add    BYTE PTR [rax],al
  40e180:	js     0x40e16a
  40e182:	add    BYTE PTR [rax],al
  40e184:	add    BYTE PTR [rax],al
  40e186:	add    BYTE PTR [rax],al
  40e188:	(bad)  
  40e189:	call   0x40e18e
  40e18e:	add    BYTE PTR [rax],al
  40e190:	mov    gs,eax
  40e192:	add    BYTE PTR [rax],al
  40e194:	add    BYTE PTR [rax],al
  40e196:	add    BYTE PTR [rax],al
  40e198:	xchg   esi,eax
  40e199:	call   0x40e19e
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	movabs al,ds:0xae000000000000e8
  40e1a9:	call   0x40e1ae
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	mov    edx,0xe8
  40e1b5:	add    BYTE PTR [rax],al
  40e1b7:	add    ah,al
  40e1b9:	call   0x40e1be
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	shr    al,cl
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	add    BYTE PTR [rax],al
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	(bad)  
  40e1ca:	add    BYTE PTR [rax],al
  40e1cc:	add    BYTE PTR [rax],al
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	in     al,0xe8
  40e1d2:	add    BYTE PTR [rax],al
  40e1d4:	add    BYTE PTR [rax],al
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	in     al,dx
  40e1d9:	call   0x40e1de
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	imul   al
  40e1e2:	add    BYTE PTR [rax],al
  40e1e4:	add    BYTE PTR [rax],al
  40e1e6:	add    BYTE PTR [rax],al
  40e1e8:	add    cl,ch
  40e1ea:	add    BYTE PTR [rax],al
  40e1ec:	add    BYTE PTR [rax],al
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	or     ch,cl
  40e1f2:	add    BYTE PTR [rax],al
  40e1f4:	add    BYTE PTR [rax],al
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	adc    ch,cl
  40e1fa:	add    BYTE PTR [rax],al
  40e1fc:	add    BYTE PTR [rax],al
  40e1fe:	add    BYTE PTR [rax],al
  40e200:	sbb    al,0xe9
  40e202:	add    BYTE PTR [rax],al
  40e204:	add    BYTE PTR [rax],al
  40e206:	add    BYTE PTR [rax],al
  40e208:	and    al,0xe9
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	add    BYTE PTR [rax],al
  40e20e:	add    BYTE PTR [rax],al
  40e210:	sub    al,0xe9
  40e212:	add    BYTE PTR [rax],al
  40e214:	add    BYTE PTR [rax],al
  40e216:	add    BYTE PTR [rax],al
  40e218:	xor    al,0xe9
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	add    BYTE PTR [rax],al
  40e21e:	add    BYTE PTR [rax],al
  40e220:	cmp    al,0xe9
  40e222:	add    BYTE PTR [rax],al
  40e224:	add    BYTE PTR [rax],al
  40e226:	add    BYTE PTR [rax],al
  40e228:	rex.R jmp 0x40e22e
  40e22e:	add    BYTE PTR [rax],al
  40e230:	push   rax
  40e231:	jmp    0x40e236
  40e236:	add    BYTE PTR [rax],al
  40e238:	pop    rdx
  40e239:	jmp    0x40e23e
  40e23e:	add    BYTE PTR [rax],al
  40e240:	(bad)  
  40e241:	jmp    0x40e246
  40e246:	add    BYTE PTR [rax],al
  40e248:	ins    BYTE PTR es:[rdi],dx
  40e249:	jmp    0x40e24e
  40e24e:	add    BYTE PTR [rax],al
  40e250:	jbe    0x40e23b
  40e252:	add    BYTE PTR [rax],al
  40e254:	add    BYTE PTR [rax],al
  40e256:	add    BYTE PTR [rax],al
  40e258:	sub    cl,0x0
  40e25b:	add    BYTE PTR [rax],al
  40e25d:	add    BYTE PTR [rax],al
  40e25f:	add    BYTE PTR [rdx+0xe9],cl
  40e265:	add    BYTE PTR [rax],al
  40e267:	add    BYTE PTR [rcx+rbp*8+0x0],dl
  40e26e:	add    BYTE PTR [rax],al
  40e270:	sahf   
  40e271:	jmp    0x40e276
  40e276:	add    BYTE PTR [rax],al
  40e278:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e279:	jmp    0x40e27e
  40e27e:	add    BYTE PTR [rax],al
  40e280:	scas   al,BYTE PTR es:[rdi]
  40e281:	jmp    0x40e286
  40e286:	add    BYTE PTR [rax],al
  40e288:	mov    eax,0xe9
  40e28d:	add    BYTE PTR [rax],al
  40e28f:	add    dl,al
  40e291:	jmp    0x40e296
  40e296:	add    BYTE PTR [rax],al
  40e298:	(bad)  
  40e299:	jmp    0x40e29e
  40e29e:	add    BYTE PTR [rax],al
  40e2a0:	fsubr  st,st(1)
  40e2a2:	add    BYTE PTR [rax],al
  40e2a4:	add    BYTE PTR [rax],al
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	loop   0x40e293
  40e2aa:	add    BYTE PTR [rax],al
  40e2ac:	add    BYTE PTR [rax],al
  40e2ae:	add    BYTE PTR [rax],al
  40e2b0:	in     al,dx
  40e2b1:	jmp    0x40e2b6
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	clc    
  40e2b9:	jmp    0x40e2be
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	add    ch,dl
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	add    BYTE PTR [rax],al
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	or     al,0xea
  40e2ca:	add    BYTE PTR [rax],al
  40e2cc:	add    BYTE PTR [rax],al
  40e2ce:	add    BYTE PTR [rax],al
  40e2d0:	(bad)  
  40e2d1:	(bad)  
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	add    BYTE PTR [rax],al
  40e2d6:	add    BYTE PTR [rax],al
  40e2d8:	and    ch,dl
  40e2da:	add    BYTE PTR [rax],al
  40e2dc:	add    BYTE PTR [rax],al
  40e2de:	add    BYTE PTR [rax],al
  40e2e0:	sub    al,0xea
  40e2e2:	add    BYTE PTR [rax],al
  40e2e4:	add    BYTE PTR [rax],al
  40e2e6:	add    BYTE PTR [rax],al
  40e2e8:	ss (bad) 
	...
  40e2f6:	add    BYTE PTR [rax],al
  40e2f8:	rex (bad) 
	...
  40e306:	add    BYTE PTR [rax],al
  40e308:	shl    ch,0x0
  40e30b:	add    BYTE PTR [rax],al
  40e30d:	add    BYTE PTR [rax],al
  40e30f:	add    al,bl
  40e311:	in     eax,0x0
  40e313:	add    BYTE PTR [rax],al
  40e315:	add    BYTE PTR [rax],al
  40e317:	add    al,dh
  40e319:	in     eax,0x0
  40e31b:	add    BYTE PTR [rax],al
  40e31d:	add    BYTE PTR [rax],al
  40e31f:	add    BYTE PTR [rsi+riz*8],al
  40e322:	add    BYTE PTR [rax],al
  40e324:	add    BYTE PTR [rax],al
  40e326:	add    BYTE PTR [rax],al
  40e328:	sbb    ah,dh
  40e32a:	add    BYTE PTR [rax],al
  40e32c:	add    BYTE PTR [rax],al
  40e32e:	add    BYTE PTR [rax],al
  40e330:	xor    dh,ah
  40e332:	add    BYTE PTR [rax],al
  40e334:	add    BYTE PTR [rax],al
  40e336:	add    BYTE PTR [rax],al
  40e338:	out    0x0,al
  40e33b:	add    BYTE PTR [rax],al
  40e33d:	add    BYTE PTR [rax],al
  40e33f:	add    BYTE PTR [rsi-0x1a],dl
  40e342:	add    BYTE PTR [rax],al
  40e344:	add    BYTE PTR [rax],al
  40e346:	add    BYTE PTR [rax],al
  40e348:	push   0xe6
  40e34d:	add    BYTE PTR [rax],al
  40e34f:	add    BYTE PTR [rdx+0xe6],al
  40e355:	add    BYTE PTR [rax],al
  40e357:	add    BYTE PTR [rdx+0xe6],dl
  40e35d:	add    BYTE PTR [rax],al
  40e35f:	add    BYTE PTR [rsi+0xe6],ch
  40e365:	add    BYTE PTR [rax],al
  40e367:	add    dh,al
  40e369:	out    0x0,al
  40e36b:	add    BYTE PTR [rax],al
  40e36d:	add    BYTE PTR [rax],al
  40e36f:	add    al,ah
  40e371:	out    0x0,al
  40e373:	add    BYTE PTR [rax],al
  40e375:	add    BYTE PTR [rax],al
  40e377:	add    dh,dh
  40e379:	out    0x0,al
  40e37b:	add    BYTE PTR [rax],al
  40e37d:	add    BYTE PTR [rax],al
  40e37f:	add    BYTE PTR [rdx],cl
  40e381:	out    0x0,eax
  40e383:	add    BYTE PTR [rax],al
  40e385:	add    BYTE PTR [rax],al
  40e387:	add    BYTE PTR [rdi+riz*8],ah
  40e38a:	add    BYTE PTR [rax],al
  40e38c:	add    BYTE PTR [rax],al
  40e38e:	add    BYTE PTR [rax],al
  40e390:	cmp    bh,ah
  40e392:	add    BYTE PTR [rax],al
  40e394:	add    BYTE PTR [rax],al
  40e396:	add    BYTE PTR [rax],al
  40e398:	push   rsi
  40e399:	out    0x0,eax
  40e39b:	add    BYTE PTR [rax],al
  40e39d:	add    BYTE PTR [rax],al
  40e39f:	add    BYTE PTR [rsi-0x19],bl
  40e3a2:	add    BYTE PTR [rax],al
  40e3a4:	add    BYTE PTR [rax],al
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	jb     0x40e391
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	add    BYTE PTR [rax],al
  40e3ae:	add    BYTE PTR [rax],al
  40e3b0:	and    bh,0x0
  40e3b3:	add    BYTE PTR [rax],al
  40e3b5:	add    BYTE PTR [rax],al
  40e3b7:	add    BYTE PTR [rdi+riz*8+0x0],bl
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	scas   al,BYTE PTR es:[rdi]
  40e3c1:	out    0x0,eax
	...
  40e3cf:	add    BYTE PTR [rsi+0xe7],bh
  40e3d5:	add    BYTE PTR [rax],al
  40e3d7:	add    dh,dl
  40e3d9:	out    0x0,eax
  40e3db:	add    BYTE PTR [rax],al
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    ah,ah
  40e3e1:	out    0x0,eax
  40e3e3:	add    BYTE PTR [rax],al
  40e3e5:	add    BYTE PTR [rax],al
  40e3e7:	add    ah,dh
  40e3e9:	out    0x0,eax
  40e3eb:	add    BYTE PTR [rax],al
  40e3ed:	add    BYTE PTR [rax],al
  40e3ef:	add    BYTE PTR [rax],al
  40e3f1:	call   0x40e3f6
  40e3f6:	add    BYTE PTR [rax],al
  40e3f8:	(bad)  
  40e3f9:	call   0x40e3fe
  40e3fe:	add    BYTE PTR [rax],al
  40e400:	(bad)  
  40e401:	call   0x40e406
  40e406:	add    BYTE PTR [rax],al
  40e408:	xor    al,ch
  40e40a:	add    BYTE PTR [rax],al
  40e40c:	add    BYTE PTR [rax],al
  40e40e:	add    BYTE PTR [rax],al
  40e410:	rex.R call 0x40e416
  40e416:	add    BYTE PTR [rax],al
  40e418:	rex.WRX call 0x40e41e
  40e41e:	add    BYTE PTR [rax],al
  40e420:	pop    rsp
  40e421:	call   0x40e426
  40e426:	add    BYTE PTR [rax],al
  40e428:	call   0xe42c
  40e42c:	add    BYTE PTR [rax],al
  40e42e:	add    BYTE PTR [rax],al
  40e430:	jo     0x40e41a
  40e432:	add    BYTE PTR [rax],al
  40e434:	add    BYTE PTR [rax],al
  40e436:	add    BYTE PTR [rax],al
  40e438:	js     0x40e422
  40e43a:	add    BYTE PTR [rax],al
  40e43c:	add    BYTE PTR [rax],al
  40e43e:	add    BYTE PTR [rax],al
  40e440:	(bad)  
  40e441:	call   0x40e446
  40e446:	add    BYTE PTR [rax],al
  40e448:	mov    gs,eax
  40e44a:	add    BYTE PTR [rax],al
  40e44c:	add    BYTE PTR [rax],al
  40e44e:	add    BYTE PTR [rax],al
  40e450:	xchg   esi,eax
  40e451:	call   0x40e456
  40e456:	add    BYTE PTR [rax],al
  40e458:	movabs al,ds:0xae000000000000e8
  40e461:	call   0x40e466
  40e466:	add    BYTE PTR [rax],al
  40e468:	mov    edx,0xe8
  40e46d:	add    BYTE PTR [rax],al
  40e46f:	add    ah,al
  40e471:	call   0x40e476
  40e476:	add    BYTE PTR [rax],al
  40e478:	shr    al,cl
  40e47a:	add    BYTE PTR [rax],al
  40e47c:	add    BYTE PTR [rax],al
  40e47e:	add    BYTE PTR [rax],al
  40e480:	(bad)  
  40e482:	add    BYTE PTR [rax],al
  40e484:	add    BYTE PTR [rax],al
  40e486:	add    BYTE PTR [rax],al
  40e488:	in     al,0xe8
  40e48a:	add    BYTE PTR [rax],al
  40e48c:	add    BYTE PTR [rax],al
  40e48e:	add    BYTE PTR [rax],al
  40e490:	in     al,dx
  40e491:	call   0x40e496
  40e496:	add    BYTE PTR [rax],al
  40e498:	imul   al
  40e49a:	add    BYTE PTR [rax],al
  40e49c:	add    BYTE PTR [rax],al
  40e49e:	add    BYTE PTR [rax],al
  40e4a0:	add    cl,ch
  40e4a2:	add    BYTE PTR [rax],al
  40e4a4:	add    BYTE PTR [rax],al
  40e4a6:	add    BYTE PTR [rax],al
  40e4a8:	or     ch,cl
  40e4aa:	add    BYTE PTR [rax],al
  40e4ac:	add    BYTE PTR [rax],al
  40e4ae:	add    BYTE PTR [rax],al
  40e4b0:	adc    ch,cl
  40e4b2:	add    BYTE PTR [rax],al
  40e4b4:	add    BYTE PTR [rax],al
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	sbb    al,0xe9
  40e4ba:	add    BYTE PTR [rax],al
  40e4bc:	add    BYTE PTR [rax],al
  40e4be:	add    BYTE PTR [rax],al
  40e4c0:	and    al,0xe9
  40e4c2:	add    BYTE PTR [rax],al
  40e4c4:	add    BYTE PTR [rax],al
  40e4c6:	add    BYTE PTR [rax],al
  40e4c8:	sub    al,0xe9
  40e4ca:	add    BYTE PTR [rax],al
  40e4cc:	add    BYTE PTR [rax],al
  40e4ce:	add    BYTE PTR [rax],al
  40e4d0:	xor    al,0xe9
  40e4d2:	add    BYTE PTR [rax],al
  40e4d4:	add    BYTE PTR [rax],al
  40e4d6:	add    BYTE PTR [rax],al
  40e4d8:	cmp    al,0xe9
  40e4da:	add    BYTE PTR [rax],al
  40e4dc:	add    BYTE PTR [rax],al
  40e4de:	add    BYTE PTR [rax],al
  40e4e0:	rex.R jmp 0x40e4e6
  40e4e6:	add    BYTE PTR [rax],al
  40e4e8:	push   rax
  40e4e9:	jmp    0x40e4ee
  40e4ee:	add    BYTE PTR [rax],al
  40e4f0:	pop    rdx
  40e4f1:	jmp    0x40e4f6
  40e4f6:	add    BYTE PTR [rax],al
  40e4f8:	(bad)  
  40e4f9:	jmp    0x40e4fe
  40e4fe:	add    BYTE PTR [rax],al
  40e500:	ins    BYTE PTR es:[rdi],dx
  40e501:	jmp    0x40e506
  40e506:	add    BYTE PTR [rax],al
  40e508:	jbe    0x40e4f3
  40e50a:	add    BYTE PTR [rax],al
  40e50c:	add    BYTE PTR [rax],al
  40e50e:	add    BYTE PTR [rax],al
  40e510:	sub    cl,0x0
  40e513:	add    BYTE PTR [rax],al
  40e515:	add    BYTE PTR [rax],al
  40e517:	add    BYTE PTR [rdx+0xe9],cl
  40e51d:	add    BYTE PTR [rax],al
  40e51f:	add    BYTE PTR [rcx+rbp*8+0x0],dl
  40e526:	add    BYTE PTR [rax],al
  40e528:	sahf   
  40e529:	jmp    0x40e52e
  40e52e:	add    BYTE PTR [rax],al
  40e530:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e531:	jmp    0x40e536
  40e536:	add    BYTE PTR [rax],al
  40e538:	scas   al,BYTE PTR es:[rdi]
  40e539:	jmp    0x40e53e
  40e53e:	add    BYTE PTR [rax],al
  40e540:	mov    eax,0xe9
  40e545:	add    BYTE PTR [rax],al
  40e547:	add    dl,al
  40e549:	jmp    0x40e54e
  40e54e:	add    BYTE PTR [rax],al
  40e550:	(bad)  
  40e551:	jmp    0x40e556
  40e556:	add    BYTE PTR [rax],al
  40e558:	fsubr  st,st(1)
  40e55a:	add    BYTE PTR [rax],al
  40e55c:	add    BYTE PTR [rax],al
  40e55e:	add    BYTE PTR [rax],al
  40e560:	loop   0x40e54b
  40e562:	add    BYTE PTR [rax],al
  40e564:	add    BYTE PTR [rax],al
  40e566:	add    BYTE PTR [rax],al
  40e568:	in     al,dx
  40e569:	jmp    0x40e56e
  40e56e:	add    BYTE PTR [rax],al
  40e570:	clc    
  40e571:	jmp    0x40e576
  40e576:	add    BYTE PTR [rax],al
  40e578:	add    ch,dl
  40e57a:	add    BYTE PTR [rax],al
  40e57c:	add    BYTE PTR [rax],al
  40e57e:	add    BYTE PTR [rax],al
  40e580:	or     al,0xea
  40e582:	add    BYTE PTR [rax],al
  40e584:	add    BYTE PTR [rax],al
  40e586:	add    BYTE PTR [rax],al
  40e588:	(bad)  
  40e589:	(bad)  
  40e58a:	add    BYTE PTR [rax],al
  40e58c:	add    BYTE PTR [rax],al
  40e58e:	add    BYTE PTR [rax],al
  40e590:	and    ch,dl
  40e592:	add    BYTE PTR [rax],al
  40e594:	add    BYTE PTR [rax],al
  40e596:	add    BYTE PTR [rax],al
  40e598:	sub    al,0xea
  40e59a:	add    BYTE PTR [rax],al
  40e59c:	add    BYTE PTR [rax],al
  40e59e:	add    BYTE PTR [rax],al
  40e5a0:	ss (bad) 
	...
  40e5ae:	add    BYTE PTR [rax],al
  40e5b0:	rex (bad) 
	...
  40e5be:	add    BYTE PTR [rax],al
  40e5c0:	fadd   DWORD PTR [rax]
  40e5c2:	rex.R
  40e5c3:	gs ins BYTE PTR es:[rdi],dx
  40e5c5:	gs je  0x40e62d
  40e5c8:	rex.XB jb 0x40e634
  40e5cb:	je     0x40e636
  40e5cd:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e5d0:	push   rbx
  40e5d1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e5d6:	outs   dx,BYTE PTR ds:[rsi]
  40e5d7:	add    al,bh
  40e5d9:	add    BYTE PTR [rbp+0x6e],al
  40e5dc:	je     0x40e643
  40e5de:	jb     0x40e623
  40e5e0:	jb     0x40e64b
  40e5e2:	je     0x40e64d
  40e5e4:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e5e7:	push   rbx
  40e5e8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e5ed:	outs   dx,BYTE PTR ds:[rsi]
  40e5ee:	add    BYTE PTR [rax],al
  40e5f0:	int    0x1
  40e5f2:	rex.RXB
  40e5f3:	gs je  0x40e639
  40e5f6:	jne    0x40e66a
  40e5f8:	jb     0x40e65f
  40e5fa:	outs   dx,BYTE PTR ds:[rsi]
  40e5fb:	je     0x40e64d
  40e5fd:	jb     0x40e66e
  40e5ff:	movsxd esp,DWORD PTR [rbp+0x73]
  40e602:	jae    0x40e604
  40e604:	(bad)  
  40e605:	add    DWORD PTR [rdi+0x65],eax
  40e608:	je     0x40e64d
  40e60a:	jne    0x40e67e
  40e60c:	jb     0x40e673
  40e60e:	outs   dx,BYTE PTR ds:[rsi]
  40e60f:	je     0x40e661
  40e611:	jb     0x40e682
  40e613:	movsxd esp,DWORD PTR [rbp+0x73]
  40e616:	jae    0x40e661
  40e618:	fs add dl,dl
  40e61b:	add    DWORD PTR [rdi+0x65],eax
  40e61e:	je     0x40e663
  40e620:	jne    0x40e694
  40e622:	jb     0x40e689
  40e624:	outs   dx,BYTE PTR ds:[rsi]
  40e625:	je     0x40e67b
  40e627:	push   0x64616572
  40e62c:	rex.WB
  40e62d:	add    BYTE PTR fs:[rax],al
  40e630:	adc    BYTE PTR [rdx],al
  40e632:	rex.RXB
  40e633:	gs je  0x40e682
  40e636:	(bad)  
  40e637:	jae    0x40e6ad
  40e639:	rex.RB jb 0x40e6ae
  40e63c:	outs   dx,DWORD PTR ds:[rsi]
  40e63d:	jb     0x40e63f
  40e63f:	add    BYTE PTR [rbx],ah
  40e641:	add    al,BYTE PTR [rdi+0x65]
  40e644:	je     0x40e693
  40e646:	outs   dx,DWORD PTR ds:[rsi]
  40e647:	fs jne 0x40e6b6
  40e64a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  40e654:	add    BYTE PTR [rax],al
  40e656:	jae    0x40e65a
  40e658:	rex.RXB
  40e659:	gs je  0x40e6af
  40e65c:	je     0x40e6bf
  40e65e:	jb     0x40e6d4
  40e660:	jne    0x40e6d2
  40e662:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e664:	outs   dx,WORD PTR ds:[rsi]
  40e666:	add    BYTE PTR [r10+0x74654702],cl
  40e66d:	push   rbx
  40e66e:	jns    0x40e6e3
  40e670:	je     0x40e6d7
  40e672:	ins    DWORD PTR es:[rdi],dx
  40e673:	push   rsp
  40e674:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40e67b:	ins    BYTE PTR es:[rdi],dx
  40e67c:	gs push rsp
  40e67e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40e685:	gs je  0x40e6dc
  40e688:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40e68f:	je     0x40e691
  40e691:	add    cl,bh
  40e693:	add    cl,BYTE PTR [rcx+0x6e]
  40e696:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e69e:	rex.XB jb 0x40e70a
  40e6a1:	je     0x40e70c
  40e6a3:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e6a6:	push   rbx
  40e6a7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e6ac:	outs   dx,BYTE PTR ds:[rsi]
  40e6ad:	add    BYTE PTR [rbx+0x3],cl
  40e6b0:	rex.WR
  40e6b1:	gs (bad) 
  40e6b3:	jbe    0x40e71a
  40e6b5:	rex.XB jb 0x40e721
  40e6b8:	je     0x40e723
  40e6ba:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e6bd:	push   rbx
  40e6be:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e6c3:	outs   dx,BYTE PTR ds:[rsi]
  40e6c4:	add    BYTE PTR [rax],al
  40e6c6:	mov    ebx,0x65755103
  40e6cb:	jb     0x40e746
  40e6cd:	push   rax
  40e6ce:	gs jb  0x40e737
  40e6d1:	outs   dx,DWORD PTR ds:[rsi]
  40e6d2:	jb     0x40e741
  40e6d4:	(bad)  
  40e6d5:	outs   dx,BYTE PTR ds:[rsi]
  40e6d6:	movsxd esp,DWORD PTR [rbp+0x43]
  40e6d9:	outs   dx,DWORD PTR ds:[rsi]
  40e6da:	jne    0x40e74a
  40e6dc:	je     0x40e743
  40e6de:	jb     0x40e6e0
  40e6e0:	add    DWORD PTR [rdx+rdx*2],eax
  40e6e3:	je     0x40e751
  40e6e5:	rex.B
  40e6e6:	fs fs rex.RX jne 0x40e759
  40e6eb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e6ef:	outs   dx,BYTE PTR ds:[rsi]
  40e6f0:	push   rsp
  40e6f1:	(bad)  
  40e6f2:	(bad)  
  40e6f3:	ins    BYTE PTR es:[rdi],dx
  40e6f4:	add    BYTE PTR gs:[rdx],al
  40e6f7:	add    al,0x52
  40e6f9:	je     0x40e767
  40e6fb:	rex.XB (bad) 
  40e6fd:	jo     0x40e773
  40e6ff:	jne    0x40e773
  40e701:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40e704:	outs   dx,BYTE PTR ds:[rsi]
  40e705:	je     0x40e76c
  40e707:	js     0x40e77d
  40e709:	add    BYTE PTR [rcx],cl
  40e70b:	add    al,0x52
  40e70d:	je     0x40e77b
  40e70f:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e711:	outs   dx,DWORD PTR ds:[rsi]
  40e712:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40e716:	jne    0x40e786
  40e718:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e71c:	outs   dx,BYTE PTR ds:[rsi]
  40e71d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e71f:	je     0x40e793
  40e721:	jns    0x40e723
  40e723:	add    BYTE PTR [rax],dl
  40e725:	add    al,0x52
  40e727:	je     0x40e795
  40e729:	push   rsi
  40e72a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40e731:	outs   dx,BYTE PTR ds:[rsi]
  40e732:	ja     0x40e79d
  40e734:	outs   dx,BYTE PTR ds:[rsi]
  40e735:	add    BYTE PTR fs:[rax],al
  40e738:	lahf   
  40e739:	add    al,0x53
  40e73b:	gs je  0x40e793
  40e73e:	outs   dx,BYTE PTR ds:[rsi]
  40e73f:	push   0x6c646e61
  40e744:	gs fs rex.RB js 0x40e7ac
  40e749:	gs jo  0x40e7c0
  40e74c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e753:	gs jb  0x40e756
  40e756:	lods   al,BYTE PTR ds:[rsi]
  40e757:	add    al,0x53
  40e759:	ins    BYTE PTR es:[rdi],dx
  40e75a:	gs gs jo 0x40e75e
  40e75e:	mov    edx,0x72655404
  40e763:	ins    DWORD PTR es:[rdi],dx
  40e764:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40e76b:	outs   dx,DWORD PTR ds:[rsi]
  40e76c:	movsxd esp,DWORD PTR [rbp+0x73]
  40e76f:	jae    0x40e771
  40e771:	add    cl,al
  40e773:	add    al,0x54
  40e775:	ins    BYTE PTR es:[rdi],dx
  40e776:	jae    0x40e7bf
  40e778:	gs je  0x40e7d1
  40e77b:	(bad)  
  40e77c:	ins    BYTE PTR es:[rdi],dx
  40e77d:	jne    0x40e7e4
  40e77f:	add    dh,cl
  40e781:	add    al,0x55
  40e783:	outs   dx,BYTE PTR ds:[rsi]
  40e784:	push   0x6c646e61
  40e789:	gs fs rex.RB js 0x40e7f1
  40e78e:	gs jo  0x40e805
  40e791:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e798:	gs jb  0x40e79b
  40e79b:	add    ah,ch
  40e79d:	add    al,0x56
  40e79f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40e7a6:	jb     0x40e817
  40e7a8:	je     0x40e80f
  40e7aa:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40e7ae:	out    dx,al
  40e7af:	add    al,0x56
  40e7b1:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40e7b8:	jne    0x40e81f
  40e7ba:	jb     0x40e835
  40e7bc:	add    BYTE PTR [rax],al
  40e7be:	(bad)  
  40e7bf:	add    BYTE PTR [rdi+0x5f],bl
  40e7c2:	rex.XB pop r15
  40e7c4:	jae    0x40e836
  40e7c6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40e7ca:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40e7d1:	ins    BYTE PTR es:[rdi],dx
  40e7d2:	gs jb  0x40e7d5
  40e7d5:	add    BYTE PTR [rsi+0x0],cl
  40e7d8:	pop    rdi
  40e7d9:	pop    rdi
  40e7da:	fs ins BYTE PTR es:[rdi],dx
  40e7dc:	ins    BYTE PTR es:[rdi],dx
  40e7dd:	outs   dx,DWORD PTR ds:[rsi]
  40e7de:	outs   dx,BYTE PTR ds:[rsi]
  40e7df:	gs js  0x40e84b
  40e7e2:	je     0x40e7e4
  40e7e4:	push   rcx
  40e7e5:	add    BYTE PTR [rdi+0x5f],bl
  40e7e8:	addr32 gs je 0x40e859
  40e7ec:	(bad)  
  40e7ed:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40e7f4:	push   rdx
  40e7f5:	add    BYTE PTR [rdi+0x5f],bl
  40e7f8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40e7ff:	add    BYTE PTR [rbx+0x0],dl
  40e802:	pop    rdi
  40e803:	pop    rdi
  40e804:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40e80b:	movsxd eax,DWORD PTR [rax]
  40e80d:	add    BYTE PTR [rdx+0x0],bl
  40e810:	pop    rdi
  40e811:	pop    rdi
  40e812:	ins    BYTE PTR es:[rdi],dx
  40e813:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40e816:	jbe    0x40e877
  40e818:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40e81f:	add    BYTE PTR [rdi+0x5f],bl
  40e822:	jae    0x40e889
  40e824:	je     0x40e885
  40e826:	(bad)  
  40e827:	jo     0x40e899
  40e829:	pop    rdi
  40e82a:	je     0x40e8a5
  40e82c:	jo     0x40e893
  40e82e:	add    BYTE PTR [rax],al
  40e830:	(bad)  
  40e831:	add    BYTE PTR [rdi+0x5f],bl
  40e834:	jae    0x40e89b
  40e836:	je     0x40e8ad
  40e838:	jae    0x40e89f
  40e83a:	jb     0x40e8a9
  40e83c:	(bad)  
  40e83d:	je     0x40e8a7
  40e83f:	gs jb  0x40e8b4
  40e842:	add    BYTE PTR [rax],al
  40e844:	jno    0x40e846
  40e846:	pop    rdi
  40e847:	(bad)  
  40e848:	movsxd ebp,DWORD PTR [rbp+0x64]
  40e84b:	ins    BYTE PTR es:[rdi],dx
  40e84c:	outs   dx,BYTE PTR ds:[rsi]
  40e84d:	add    BYTE PTR [rax+0x0],bh
  40e850:	pop    rdi
  40e851:	(bad)  
  40e852:	ins    DWORD PTR es:[rdi],dx
  40e853:	jae    0x40e8bc
  40e855:	pop    rdi
  40e856:	gs js  0x40e8c2
  40e859:	je     0x40e85b
  40e85b:	add    BYTE PTR [rdx+0x65635f00],cl
  40e861:	js     0x40e8cc
  40e863:	je     0x40e865
  40e865:	add    BYTE PTR [rdx+0x72655f00],bh
  40e86b:	jb     0x40e8db
  40e86d:	outs   dx,DWORD PTR ds:[rsi]
  40e86e:	add    BYTE PTR [rax],al
  40e870:	ret    
  40e871:	add    BYTE PTR [rdi+0x65],bl
  40e874:	js     0x40e8df
  40e876:	je     0x40e878
  40e878:	fiadd  DWORD PTR [rax]
  40e87a:	pop    rdi
  40e87b:	ins    WORD PTR es:[rdi],dx
  40e87d:	outs   dx,DWORD PTR ds:[rsi]
  40e87e:	fs add BYTE PTR gs:[rax],al
  40e882:	sbb    al,BYTE PTR [rcx]
  40e884:	pop    rdi
  40e885:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40e88c:	ins    DWORD PTR es:[rdi],dx
  40e88d:	add    BYTE PTR [rax+0x6f6c5f01],al
  40e893:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e896:	and    eax,0x6e6f5f02
  40e89b:	gs js  0x40e907
  40e89e:	je     0x40e8a0
  40e8a0:	movsxd eax,DWORD PTR [rdx]
  40e8a2:	pop    rdi
  40e8a3:	jae    0x40e913
  40e8a5:	ja     0x40e917
  40e8a7:	jb     0x40e912
  40e8a9:	outs   dx,BYTE PTR ds:[rsi]
  40e8aa:	je     0x40e912
  40e8ac:	add    BYTE PTR [rax],al
  40e8ae:	add    DWORD PTR [rdx],0x5f
  40e8b1:	jae    0x40e927
  40e8b3:	jb     0x40e91e
  40e8b5:	movsxd ebp,DWORD PTR [rbp+0x70]
  40e8b8:	add    BYTE PTR [rax],al
  40e8ba:	(bad)
  40e8be:	outs   dx,BYTE PTR ds:[rsi]
  40e8bf:	ins    BYTE PTR es:[rdi],dx
  40e8c0:	outs   dx,DWORD PTR ds:[rsi]
  40e8c1:	movsxd ebp,DWORD PTR [rbx+0x0]
  40e8c4:	loope  0x40e8c8
  40e8c6:	pop    rdi
  40e8c7:	jbe    0x40e93c
  40e8c9:	outs   dx,BYTE PTR ds:[rsi]
  40e8ca:	jo     0x40e93e
  40e8cc:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  40e8d3:	add    esp,DWORD PTR [rcx+0x62]
  40e8d6:	outs   dx,DWORD PTR ds:[rsi]
  40e8d7:	jb     0x40e94d
  40e8d9:	add    BYTE PTR [rax+0x6c616303],dl
  40e8df:	ins    BYTE PTR es:[rdi],dx
  40e8e0:	outs   dx,DWORD PTR ds:[rsi]
  40e8e1:	movsxd eax,DWORD PTR [rax]
  40e8e3:	add    BYTE PTR [rbp+0x69786503],bl
  40e8e9:	je     0x40e8eb
  40e8eb:	add    BYTE PTR [rcx+0x6c636603],ah
  40e8f1:	outs   dx,DWORD PTR ds:[rsi]
  40e8f2:	jae    0x40e959
  40e8f4:	add    BYTE PTR [rax],al
  40e8f6:	movabs ds:0x726f7272656603,eax
  40e8ff:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  40e906:	jae    0x40e970
  40e908:	add    BYTE PTR [rax],al
  40e90a:	scas   al,BYTE PTR es:[rdi]
  40e90b:	add    esp,DWORD PTR [rsi+0x6f]
  40e90e:	jo     0x40e975
  40e910:	outs   dx,BYTE PTR ds:[rsi]
  40e911:	add    BYTE PTR [rax+0x72706603],dh
  40e917:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40e91e:	data16 jo 0x40e996
  40e921:	je     0x40e986
  40e923:	add    BYTE PTR [rsi+0x65726603],dh
  40e929:	(bad)  
  40e92a:	add    BYTE PTR fs:[rdi+0x65726603],dh
  40e931:	add    BYTE PTR gs:[rax],al
  40e934:	mov    ebp,0x65736603
  40e939:	imul   eax,DWORD PTR gs:[rax],0xffffffbf
  40e93d:	add    esp,DWORD PTR [rsi+0x74]
  40e940:	gs ins BYTE PTR es:[rdi],dx
  40e942:	ins    BYTE PTR es:[rdi],dx
  40e943:	add    al,al
  40e945:	add    esp,DWORD PTR [rsi+0x77]
  40e948:	jo     0x40e9bc
  40e94a:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  40e951:	add    esp,DWORD PTR [rsi+0x77]
  40e954:	jb     0x40e9bf
  40e956:	je     0x40e9bd
  40e958:	add    BYTE PTR [rax],al
  40e95a:	(bad)
  40e95d:	gs je  0x40e9c3
  40e960:	add    BYTE PTR [rax],al
  40e962:	mov    DWORD PTR [rbx],0x65746567
  40e968:	outs   dx,BYTE PTR ds:[rsi]
  40e969:	jbe    0x40e96b
  40e96b:	add    al,dh
  40e96d:	add    ebp,DWORD PTR [rbp+0x61]
  40e970:	ins    BYTE PTR es:[rdi],dx
  40e971:	ins    BYTE PTR es:[rdi],dx
  40e972:	outs   dx,DWORD PTR ds:[rsi]
  40e973:	movsxd eax,DWORD PTR [rax]
  40e975:	add    bh,dh
  40e977:	add    ebp,DWORD PTR [rbp+0x65]
  40e97a:	ins    DWORD PTR es:[rdi],dx
  40e97b:	movsxd ebp,DWORD PTR [rbp+0x70]
  40e97e:	add    BYTE PTR [rax],al
  40e980:	clc    
  40e981:	add    ebp,DWORD PTR [rbp+0x65]
  40e984:	ins    DWORD PTR es:[rdi],dx
  40e985:	movsxd esi,DWORD PTR [rax+0x79]
  40e988:	add    BYTE PTR [rax],al
  40e98a:	stc    
  40e98b:	add    ebp,DWORD PTR [rbp+0x65]
  40e98e:	ins    DWORD PTR es:[rdi],dx
  40e98f:	ins    DWORD PTR es:[rdi],dx
  40e990:	outs   dx,DWORD PTR ds:[rsi]
  40e991:	jbe    0x40e9f8
  40e993:	add    BYTE PTR [rcx],al
  40e995:	add    al,0x70
  40e997:	jb     0x40ea02
  40e999:	outs   dx,BYTE PTR ds:[rsi]
  40e99a:	je     0x40ea02
  40e99c:	add    BYTE PTR [rax],al
  40e99e:	add    eax,0x74757004
  40e9a3:	jae    0x40e9a5
  40e9a5:	add    BYTE PTR [rdx],cl
  40e9a7:	add    al,0x72
  40e9a9:	(bad)  
  40e9aa:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  40e9b1:	gs (bad) 
  40e9b3:	ins    BYTE PTR es:[rdi],dx
  40e9b4:	ins    BYTE PTR es:[rdi],dx
  40e9b5:	outs   dx,DWORD PTR ds:[rsi]
  40e9b6:	movsxd eax,DWORD PTR [rax]
  40e9b8:	(bad)  
  40e9ba:	jb     0x40ea21
  40e9bc:	ja     0x40ea27
  40e9be:	outs   dx,BYTE PTR ds:[rsi]
  40e9bf:	add    BYTE PTR fs:[rax],al
  40e9c2:	adc    al,0x4
  40e9c4:	jae    0x40ea2b
  40e9c6:	je     0x40ea34
  40e9c8:	outs   dx,DWORD PTR ds:[rsi]
  40e9c9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e9cc:	add    BYTE PTR gs:[rsi],dl
  40e9cf:	add    al,0x73
  40e9d1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40e9d8:	and    al,0x4
  40e9da:	jae    0x40ea50
  40e9dc:	jb     0x40ea41
  40e9de:	ins    DWORD PTR es:[rdi],dx
  40e9df:	jo     0x40e9e1
  40e9e1:	add    BYTE PTR [rsi],ah
  40e9e3:	add    al,0x73
  40e9e5:	je     0x40ea59
  40e9e7:	movsxd esi,DWORD PTR [rax+0x79]
  40e9ea:	add    BYTE PTR [rax],al
  40e9ec:	sub    DWORD PTR [rbx+rsi*2],eax
  40e9ef:	je     0x40ea63
  40e9f1:	gs jb  0x40ea66
  40e9f4:	outs   dx,DWORD PTR ds:[rsi]
  40e9f5:	jb     0x40e9f7
  40e9f7:	add    BYTE PTR [rbx],ch
  40e9f9:	add    al,0x73
  40e9fb:	je     0x40ea6f
  40e9fd:	ins    BYTE PTR es:[rdi],dx
  40e9fe:	outs   dx,BYTE PTR gs:[rsi]
  40ea00:	add    BYTE PTR [rax],al
  40ea02:	cs add al,0x73
  40ea05:	je     0x40ea79
  40ea07:	outs   dx,BYTE PTR ds:[rsi]
  40ea08:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ea0b:	add    BYTE PTR [rcx],bh
  40ea0d:	add    al,0x73
  40ea0f:	je     0x40ea83
  40ea11:	je     0x40ea82
  40ea13:	jne    0x40ea81
  40ea15:	add    BYTE PTR [rsi+0x4],cl
  40ea18:	jbe    0x40ea80
  40ea1a:	jo     0x40ea8e
  40ea1c:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  40ea23:	add    al,0x77
  40ea25:	movsxd esi,DWORD PTR [rbx+0x63]
  40ea28:	jo     0x40eaa3
  40ea2a:	add    BYTE PTR [rax],al
  40ea2c:	mov    DWORD PTR [rdi+rbx*2],eax
  40ea2f:	jae    0x40eaa5
  40ea31:	(bad)  
  40ea32:	je     0x40ea6a
  40ea34:	xor    al,0x0
  40ea36:	mov    esi,0x74735f04
  40ea3b:	jb     0x40eaa1
  40ea3d:	jne    0x40eaaf
  40ea3f:	add    al,dh
  40ea41:	add    DWORD PTR [rbp+0x65],ecx
  40ea44:	jae    0x40eab9
  40ea46:	(bad)  
  40ea47:	rex.X outs dx,DWORD PTR gs:[esi]
  40ea4b:	js     0x40eaa4
  40ea4d:	add    BYTE PTR [rax],al
  40ea4f:	add    BYTE PTR [rax],al
  40ea51:	loopne 0x40ea53
  40ea53:	add    BYTE PTR [rax],al
  40ea55:	loopne 0x40ea57
  40ea57:	add    BYTE PTR [rax],al
  40ea59:	loopne 0x40ea5b
  40ea5b:	add    BYTE PTR [rax],al
  40ea5d:	loopne 0x40ea5f
  40ea5f:	add    BYTE PTR [rax],al
  40ea61:	loopne 0x40ea63
  40ea63:	add    BYTE PTR [rax],al
  40ea65:	loopne 0x40ea67
  40ea67:	add    BYTE PTR [rax],al
  40ea69:	loopne 0x40ea6b
  40ea6b:	add    BYTE PTR [rax],al
  40ea6d:	loopne 0x40ea6f
  40ea6f:	add    BYTE PTR [rax],al
  40ea71:	loopne 0x40ea73
  40ea73:	add    BYTE PTR [rax],al
  40ea75:	loopne 0x40ea77
  40ea77:	add    BYTE PTR [rax],al
  40ea79:	loopne 0x40ea7b
  40ea7b:	add    BYTE PTR [rax],al
  40ea7d:	loopne 0x40ea7f
  40ea7f:	add    BYTE PTR [rax],al
  40ea81:	loopne 0x40ea83
  40ea83:	add    BYTE PTR [rax],al
  40ea85:	loopne 0x40ea87
  40ea87:	add    BYTE PTR [rax],al
  40ea89:	loopne 0x40ea8b
  40ea8b:	add    BYTE PTR [rax],al
  40ea8d:	loopne 0x40ea8f
  40ea8f:	add    BYTE PTR [rax],al
  40ea91:	loopne 0x40ea93
  40ea93:	add    BYTE PTR [rax],al
  40ea95:	loopne 0x40ea97
  40ea97:	add    BYTE PTR [rax],al
  40ea99:	loopne 0x40ea9b
  40ea9b:	add    BYTE PTR [rax],al
  40ea9d:	loopne 0x40ea9f
  40ea9f:	add    BYTE PTR [rax],al
  40eaa1:	loopne 0x40eaa3
  40eaa3:	add    BYTE PTR [rax],al
  40eaa5:	loopne 0x40eaa7
  40eaa7:	add    BYTE PTR [rax],al
  40eaa9:	loopne 0x40eaab
  40eaab:	add    BYTE PTR [rax],al
  40eaad:	loopne 0x40eaaf
  40eaaf:	add    BYTE PTR [rbx+0x45],cl
  40eab2:	push   rdx
  40eab3:	rex.WRX
  40eab4:	rex.RB
  40eab5:	xor    r14,QWORD PTR [rdx]
  40eab8:	cs fs ins BYTE PTR es:[rdi],dx
  40eabb:	ins    BYTE PTR es:[rdi],dx
  40eabc:	add    BYTE PTR [rax],al
  40eabe:	add    BYTE PTR [rax],al
  40eac0:	adc    al,0xe0
  40eac2:	add    BYTE PTR [rax],al
  40eac4:	adc    al,0xe0
  40eac6:	add    BYTE PTR [rax],al
  40eac8:	adc    al,0xe0
  40eaca:	add    BYTE PTR [rax],al
  40eacc:	adc    al,0xe0
  40eace:	add    BYTE PTR [rax],al
  40ead0:	adc    al,0xe0
  40ead2:	add    BYTE PTR [rax],al
  40ead4:	adc    al,0xe0
  40ead6:	add    BYTE PTR [rax],al
  40ead8:	adc    al,0xe0
  40eada:	add    BYTE PTR [rax],al
  40eadc:	adc    al,0xe0
  40eade:	add    BYTE PTR [rax],al
  40eae0:	adc    al,0xe0
  40eae2:	add    BYTE PTR [rax],al
  40eae4:	adc    al,0xe0
  40eae6:	add    BYTE PTR [rax],al
  40eae8:	adc    al,0xe0
  40eaea:	add    BYTE PTR [rax],al
  40eaec:	adc    al,0xe0
  40eaee:	add    BYTE PTR [rax],al
  40eaf0:	adc    al,0xe0
  40eaf2:	add    BYTE PTR [rax],al
  40eaf4:	adc    al,0xe0
  40eaf6:	add    BYTE PTR [rax],al
  40eaf8:	adc    al,0xe0
  40eafa:	add    BYTE PTR [rax],al
  40eafc:	adc    al,0xe0
  40eafe:	add    BYTE PTR [rax],al
  40eb00:	adc    al,0xe0
  40eb02:	add    BYTE PTR [rax],al
  40eb04:	adc    al,0xe0
  40eb06:	add    BYTE PTR [rax],al
  40eb08:	adc    al,0xe0
  40eb0a:	add    BYTE PTR [rax],al
  40eb0c:	adc    al,0xe0
  40eb0e:	add    BYTE PTR [rax],al
  40eb10:	adc    al,0xe0
  40eb12:	add    BYTE PTR [rax],al
  40eb14:	adc    al,0xe0
  40eb16:	add    BYTE PTR [rax],al
  40eb18:	adc    al,0xe0
  40eb1a:	add    BYTE PTR [rax],al
  40eb1c:	adc    al,0xe0
  40eb1e:	add    BYTE PTR [rax],al
  40eb20:	adc    al,0xe0
  40eb22:	add    BYTE PTR [rax],al
  40eb24:	adc    al,0xe0
  40eb26:	add    BYTE PTR [rax],al
  40eb28:	adc    al,0xe0
  40eb2a:	add    BYTE PTR [rax],al
  40eb2c:	adc    al,0xe0
  40eb2e:	add    BYTE PTR [rax],al
  40eb30:	adc    al,0xe0
  40eb32:	add    BYTE PTR [rax],al
  40eb34:	adc    al,0xe0
  40eb36:	add    BYTE PTR [rax],al
  40eb38:	adc    al,0xe0
  40eb3a:	add    BYTE PTR [rax],al
  40eb3c:	adc    al,0xe0
  40eb3e:	add    BYTE PTR [rax],al
  40eb40:	adc    al,0xe0
  40eb42:	add    BYTE PTR [rax],al
  40eb44:	adc    al,0xe0
  40eb46:	add    BYTE PTR [rax],al
  40eb48:	adc    al,0xe0
  40eb4a:	add    BYTE PTR [rax],al
  40eb4c:	adc    al,0xe0
  40eb4e:	add    BYTE PTR [rax],al
  40eb50:	adc    al,0xe0
  40eb52:	add    BYTE PTR [rax],al
  40eb54:	adc    al,0xe0
  40eb56:	add    BYTE PTR [rax],al
  40eb58:	adc    al,0xe0
  40eb5a:	add    BYTE PTR [rax],al
  40eb5c:	adc    al,0xe0
  40eb5e:	add    BYTE PTR [rax],al
  40eb60:	adc    al,0xe0
  40eb62:	add    BYTE PTR [rax],al
  40eb64:	adc    al,0xe0
  40eb66:	add    BYTE PTR [rax],al
  40eb68:	adc    al,0xe0
  40eb6a:	add    BYTE PTR [rax],al
  40eb6c:	adc    al,0xe0
  40eb6e:	add    BYTE PTR [rax],al
  40eb70:	adc    al,0xe0
  40eb72:	add    BYTE PTR [rax],al
  40eb74:	adc    al,0xe0
  40eb76:	add    BYTE PTR [rax],al
  40eb78:	adc    al,0xe0
  40eb7a:	add    BYTE PTR [rax],al
  40eb7c:	adc    al,0xe0
  40eb7e:	add    BYTE PTR [rax],al
  40eb80:	adc    al,0xe0
  40eb82:	add    BYTE PTR [rax],al
  40eb84:	adc    al,0xe0
  40eb86:	add    BYTE PTR [rax],al
  40eb88:	adc    al,0xe0
  40eb8a:	add    BYTE PTR [rax],al
  40eb8c:	adc    al,0xe0
  40eb8e:	add    BYTE PTR [rax],al
  40eb90:	adc    al,0xe0
  40eb92:	add    BYTE PTR [rax],al
  40eb94:	adc    al,0xe0
  40eb96:	add    BYTE PTR [rax],al
  40eb98:	adc    al,0xe0
  40eb9a:	add    BYTE PTR [rax],al
  40eb9c:	adc    al,0xe0
  40eb9e:	add    BYTE PTR [rax],al
  40eba0:	adc    al,0xe0
  40eba2:	add    BYTE PTR [rax],al
  40eba4:	adc    al,0xe0
  40eba6:	add    BYTE PTR [rax],al
  40eba8:	adc    al,0xe0
  40ebaa:	add    BYTE PTR [rax],al
  40ebac:	ins    DWORD PTR es:[rdi],dx
  40ebad:	jae    0x40ec25
  40ebaf:	movsxd esi,DWORD PTR [rdx+0x74]
  40ebb2:	cs fs ins BYTE PTR es:[rdi],dx
  40ebb5:	ins    BYTE PTR es:[rdi],dx
  40ebb6:	add    BYTE PTR [rax],al
  40ebb8:	sub    al,ah
  40ebba:	add    BYTE PTR [rax],al
  40ebbc:	push   rbp
  40ebbd:	push   rbx
  40ebbe:	rex.RB push r10
  40ebc0:	xor    esi,DWORD PTR [rdx]
  40ebc2:	cs fs ins BYTE PTR es:[rdi],dx
  40ebc5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040f000 <.CRT>:
	...
  40f008:	(bad)  
  40f009:	adc    DWORD PTR [rax+0x0],eax
	...
  40f020:	adc    BYTE PTR [rax],dl
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    BYTE PTR [rax+0x4e],al
  40f02a:	add    BYTE PTR [rax],al
	...
  40f03d:	add    BYTE PTR [rax],al
  40f03f:	add    BYTE PTR [rax+0x50],dh
  40f042:	add    BYTE PTR [rax],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    BYTE PTR [rax+0x50],al
  40f04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000410000 <.tls>:
	...
  410020:	add    BYTE PTR [rax],al
  410022:	add    BYTE PTR [r8],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax+0x0],ah
  41002a:	add    BYTE PTR [r8],al
  41002d:	add    BYTE PTR [rax],al
  41002f:	add    BYTE PTR [rdi+rdx*8+0x40],bl
  410036:	add    BYTE PTR [rax],al
  410038:	rex
  410039:	lock add BYTE PTR [rax],al
	...
