
e42647afd2747ba0c5a5c2440b5a68a9f0139850782690e1f7f2abd01ff573f3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5b95]        # 0x406bb0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5b96]        # 0x406bc0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5b99]        # 0x406bd0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5b5c]        # 0x406ba0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5a0f]        # 0x406a60
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5b31]        # 0x406b90
  40105f:	mov    DWORD PTR [rip+0x7fa3],edx        # 0x409008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x404970
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4038d0
  401081:	mov    rdx,QWORD PTR [rip+0x5a68]        # 0x406af0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5a4e]        # 0x406ae0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5ab4]        # 0x406b50
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x59eb]        # 0x406a90
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4034b0
  4010af:	mov    rax,QWORD PTR [rip+0x595a]        # 0x406a10
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x404970
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x2689]        # 0x4037b0
  401127:	call   0x4037a0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5a15]        # 0x406b80
  40116b:	lea    r8,[rip+0x7ea6]        # 0x409018
  401172:	lea    rdx,[rip+0x7ea7]        # 0x409020
  401179:	lea    rcx,[rip+0x7ea8]        # 0x409028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x7e78],eax        # 0x409000
  401188:	lea    rax,[rip+0x7e71]        # 0x409000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x59a5]        # 0x406b40
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x404988
  4011a3:	mov    DWORD PTR [rip+0x7e67],eax        # 0x409010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x59ca]        # 0x406b90
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x58cb]        # 0x406ac0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x9346]        # 0x40a548
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x58a7]        # 0x406ad0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x7dba],0x1        # 0x409004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x57ec]        # 0x406a50
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403ac0
  40127d:	lea    rcx,[rip+0x2ddc]        # 0x404060
  401284:	call   QWORD PTR [rip+0x92b6]        # 0x40a540
  40128a:	mov    rdx,QWORD PTR [rip+0x581f]        # 0x406ab0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403f70
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4049b0
  4012a5:	call   0x4038b0
  4012aa:	mov    rax,QWORD PTR [rip+0x57af]        # 0x406a60
  4012b1:	mov    QWORD PTR [rip+0x8750],rax        # 0x409a08
  4012b8:	mov    rax,QWORD PTR [rip+0x57c1]        # 0x406a80
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x86e9],rax        # 0x409a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x7ceb]        # 0x409028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4048e0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x7cc2]        # 0x409020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404890
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4048e0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4048d8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x7c6a],rbp        # 0x409020
  4013b6:	call   0x403480
  4013bb:	mov    rax,QWORD PTR [rip+0x56ae]        # 0x406a70
  4013c2:	mov    rdx,QWORD PTR [rip+0x7c4f]        # 0x409018
  4013c9:	mov    ecx,DWORD PTR [rip+0x7c59]        # 0x409028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x7c3c]        # 0x409018
  4013dc:	mov    rdx,QWORD PTR [rip+0x7c3d]        # 0x409020
  4013e3:	call   0x401e42
  4013e8:	mov    ecx,DWORD PTR [rip+0x7c1a]        # 0x409008
  4013ee:	mov    DWORD PTR [rip+0x7c18],eax        # 0x40900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x7c02]        # 0x409004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404958
  40140b:	mov    eax,DWORD PTR [rip+0x7bfb]        # 0x40900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x5699]        # 0x406ad0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404960
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x56ad]        # 0x406b10
  401463:	mov    rcx,QWORD PTR [rip+0x5696]        # 0x406b00
  40146a:	call   0x404948
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x9057]        # 0x40a4f0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x5689]        # 0x406b30
  4014a7:	mov    rcx,QWORD PTR [rip+0x5672]        # 0x406b20
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404948
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404908
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x56b5]        # 0x406b90
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4034c0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x5685]        # 0x406b90
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4034c0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rbx
  401532:	sub    rsp,0x38
  401536:	lea    rbp,[rsp+0x80]
  40153e:	mov    QWORD PTR [rbp-0x30],rcx
  401542:	mov    QWORD PTR [rbp-0x28],rdx
  401546:	mov    QWORD PTR [rbp-0x18],r9
  40154a:	mov    QWORD PTR [rbp-0x20],r8
  40154e:	lea    rax,[rbp-0x18]
  401552:	mov    QWORD PTR [rbp-0x58],rax
  401556:	mov    rcx,QWORD PTR [rbp-0x58]
  40155a:	mov    rdx,QWORD PTR [rbp-0x20]
  40155e:	mov    rax,QWORD PTR [rbp-0x28]
  401562:	mov    r9,rcx
  401565:	mov    r8,rdx
  401568:	mov    rdx,rax
  40156b:	mov    rcx,QWORD PTR [rbp-0x30]
  40156f:	call   0x404870
  401574:	mov    ebx,eax
  401576:	mov    eax,ebx
  401578:	add    rsp,0x38
  40157c:	pop    rbx
  40157d:	pop    rbp
  40157e:	ret    
  40157f:	push   rbp
  401580:	mov    rbp,rsp
  401583:	sub    rsp,0x30
  401587:	mov    QWORD PTR [rbp+0x10],rcx
  40158b:	mov    QWORD PTR [rbp+0x18],rdx
  40158f:	mov    QWORD PTR [rbp+0x20],r8
  401593:	mov    DWORD PTR [rbp-0x4],0x0
  40159a:	mov    DWORD PTR [rbp-0x8],0x0
  4015a1:	lea    rdx,[rbp-0x8]
  4015a5:	lea    rax,[rbp-0x4]
  4015a9:	mov    rcx,rax
  4015ac:	mov    rax,QWORD PTR [rip+0x8dd5]        # 0x40a388
  4015b3:	call   rax
  4015b5:	mov    ecx,DWORD PTR [rbp-0x8]
  4015b8:	mov    edx,DWORD PTR [rbp-0x4]
  4015bb:	mov    rax,QWORD PTR [rbp+0x18]
  4015bf:	mov    r9d,ecx
  4015c2:	mov    r8d,edx
  4015c5:	mov    edx,0x0
  4015ca:	mov    rcx,rax
  4015cd:	call   0x402ec4
  4015d2:	mov    rax,QWORD PTR [rbp+0x18]
  4015d6:	lea    r8,[rip+0x4a23]        # 0x406000
  4015dd:	lea    rdx,[rip+0x4a29]        # 0x40600d
  4015e4:	mov    rcx,rax
  4015e7:	mov    rax,QWORD PTR [rip+0x8e5a]        # 0x40a448
  4015ee:	call   rax
  4015f0:	test   eax,eax
  4015f2:	je     0x4015fe
  4015f4:	mov    ecx,0x0
  4015f9:	call   0x404908
  4015fe:	mov    eax,0x0
  401603:	add    rsp,0x30
  401607:	pop    rbp
  401608:	ret    
  401609:	push   rbp
  40160a:	mov    rbp,rsp
  40160d:	sub    rsp,0x20
  401611:	lea    rcx,[rip+0x4a10]        # 0x406028
  401618:	call   0x4048b8
  40161d:	lea    rcx,[rip+0x4a44]        # 0x406068
  401624:	call   0x4048b8
  401629:	nop
  40162a:	add    rsp,0x20
  40162e:	pop    rbp
  40162f:	ret    
  401630:	push   rbp
  401631:	mov    rbp,rsp
  401634:	sub    rsp,0x20
  401638:	mov    QWORD PTR [rbp+0x10],rcx
  40163c:	mov    QWORD PTR [rbp+0x18],rdx
  401640:	mov    DWORD PTR [rbp+0x20],r8d
  401644:	mov    DWORD PTR [rbp+0x28],r9d
  401648:	mov    edx,DWORD PTR [rbp+0x28]
  40164b:	mov    eax,DWORD PTR [rbp+0x20]
  40164e:	mov    r9d,edx
  401651:	mov    r8d,eax
  401654:	mov    rdx,QWORD PTR [rbp+0x10]
  401658:	lea    rcx,[rip+0x4a1b]        # 0x40607a
  40165f:	call   0x4048c8
  401664:	mov    eax,DWORD PTR [rbp+0x30]
  401667:	and    eax,0x1
  40166a:	test   eax,eax
  40166c:	je     0x40168c
  40166e:	mov    rax,QWORD PTR [rbp+0x18]
  401672:	mov    rcx,rax
  401675:	mov    rax,QWORD PTR [rip+0x8dbc]        # 0x40a438
  40167c:	call   rax
  40167e:	mov    edx,eax
  401680:	lea    rcx,[rip+0x4a00]        # 0x406087
  401687:	call   0x4048c8
  40168c:	mov    eax,DWORD PTR [rbp+0x30]
  40168f:	and    eax,0x4
  401692:	test   eax,eax
  401694:	je     0x4016d3
  401696:	mov    rax,QWORD PTR [rbp+0x18]
  40169a:	mov    rcx,rax
  40169d:	mov    rax,QWORD PTR [rip+0x8d8c]        # 0x40a430
  4016a4:	call   rax
  4016a6:	test   rax,rax
  4016a9:	je     0x4016bd
  4016ab:	mov    rax,QWORD PTR [rbp+0x18]
  4016af:	mov    rcx,rax
  4016b2:	mov    rax,QWORD PTR [rip+0x8d77]        # 0x40a430
  4016b9:	call   rax
  4016bb:	jmp    0x4016c4
  4016bd:	lea    rax,[rip+0x49c7]        # 0x40608b
  4016c4:	mov    rdx,rax
  4016c7:	lea    rcx,[rip+0x49c4]        # 0x406092
  4016ce:	call   0x4048c8
  4016d3:	mov    eax,DWORD PTR [rbp+0x30]
  4016d6:	and    eax,0x8
  4016d9:	test   eax,eax
  4016db:	je     0x40171a
  4016dd:	mov    rax,QWORD PTR [rbp+0x18]
  4016e1:	mov    rcx,rax
  4016e4:	mov    rax,QWORD PTR [rip+0x8d15]        # 0x40a400
  4016eb:	call   rax
  4016ed:	test   rax,rax
  4016f0:	je     0x401704
  4016f2:	mov    rax,QWORD PTR [rbp+0x18]
  4016f6:	mov    rcx,rax
  4016f9:	mov    rax,QWORD PTR [rip+0x8d00]        # 0x40a400
  401700:	call   rax
  401702:	jmp    0x40170b
  401704:	lea    rax,[rip+0x4980]        # 0x40608b
  40170b:	mov    rdx,rax
  40170e:	lea    rcx,[rip+0x497d]        # 0x406092
  401715:	call   0x4048c8
  40171a:	mov    eax,DWORD PTR [rbp+0x30]
  40171d:	and    eax,0x2
  401720:	test   eax,eax
  401722:	je     0x401742
  401724:	mov    rax,QWORD PTR [rbp+0x18]
  401728:	mov    rcx,rax
  40172b:	mov    rax,QWORD PTR [rip+0x8cf6]        # 0x40a428
  401732:	call   rax
  401734:	mov    edx,eax
  401736:	lea    rcx,[rip+0x494a]        # 0x406087
  40173d:	call   0x4048c8
  401742:	mov    eax,DWORD PTR [rbp+0x30]
  401745:	and    eax,0x10
  401748:	test   eax,eax
  40174a:	je     0x401789
  40174c:	mov    rax,QWORD PTR [rbp+0x18]
  401750:	mov    rcx,rax
  401753:	mov    rax,QWORD PTR [rip+0x8cc6]        # 0x40a420
  40175a:	call   rax
  40175c:	test   rax,rax
  40175f:	je     0x401773
  401761:	mov    rax,QWORD PTR [rbp+0x18]
  401765:	mov    rcx,rax
  401768:	mov    rax,QWORD PTR [rip+0x8cb1]        # 0x40a420
  40176f:	call   rax
  401771:	jmp    0x40177a
  401773:	lea    rax,[rip+0x4911]        # 0x40608b
  40177a:	mov    rdx,rax
  40177d:	lea    rcx,[rip+0x490e]        # 0x406092
  401784:	call   0x4048c8
  401789:	mov    eax,DWORD PTR [rbp+0x30]
  40178c:	and    eax,0x20
  40178f:	test   eax,eax
  401791:	je     0x4017d0
  401793:	mov    rax,QWORD PTR [rbp+0x18]
  401797:	mov    rcx,rax
  40179a:	mov    rax,QWORD PTR [rip+0x8c6f]        # 0x40a410
  4017a1:	call   rax
  4017a3:	test   rax,rax
  4017a6:	je     0x4017ba
  4017a8:	mov    rax,QWORD PTR [rbp+0x18]
  4017ac:	mov    rcx,rax
  4017af:	mov    rax,QWORD PTR [rip+0x8c5a]        # 0x40a410
  4017b6:	call   rax
  4017b8:	jmp    0x4017c1
  4017ba:	lea    rax,[rip+0x48ca]        # 0x40608b
  4017c1:	mov    rdx,rax
  4017c4:	lea    rcx,[rip+0x48c7]        # 0x406092
  4017cb:	call   0x4048c8
  4017d0:	mov    eax,DWORD PTR [rbp+0x30]
  4017d3:	and    eax,0x40
  4017d6:	test   eax,eax
  4017d8:	je     0x401817
  4017da:	mov    rax,QWORD PTR [rbp+0x18]
  4017de:	mov    rcx,rax
  4017e1:	mov    rax,QWORD PTR [rip+0x8c30]        # 0x40a418
  4017e8:	call   rax
  4017ea:	test   rax,rax
  4017ed:	je     0x401801
  4017ef:	mov    rax,QWORD PTR [rbp+0x18]
  4017f3:	mov    rcx,rax
  4017f6:	mov    rax,QWORD PTR [rip+0x8c1b]        # 0x40a418
  4017fd:	call   rax
  4017ff:	jmp    0x401808
  401801:	lea    rax,[rip+0x4883]        # 0x40608b
  401808:	mov    rdx,rax
  40180b:	lea    rcx,[rip+0x4880]        # 0x406092
  401812:	call   0x4048c8
  401817:	mov    eax,DWORD PTR [rbp+0x30]
  40181a:	and    eax,0x80
  40181f:	test   eax,eax
  401821:	je     0x401860
  401823:	mov    rax,QWORD PTR [rbp+0x18]
  401827:	mov    rcx,rax
  40182a:	mov    rax,QWORD PTR [rip+0x8bd7]        # 0x40a408
  401831:	call   rax
  401833:	test   rax,rax
  401836:	je     0x40184a
  401838:	mov    rax,QWORD PTR [rbp+0x18]
  40183c:	mov    rcx,rax
  40183f:	mov    rax,QWORD PTR [rip+0x8bc2]        # 0x40a408
  401846:	call   rax
  401848:	jmp    0x401851
  40184a:	lea    rax,[rip+0x483a]        # 0x40608b
  401851:	mov    rdx,rax
  401854:	lea    rcx,[rip+0x4837]        # 0x406092
  40185b:	call   0x4048c8
  401860:	mov    ecx,0xa
  401865:	call   0x4048c0
  40186a:	nop
  40186b:	add    rsp,0x20
  40186f:	pop    rbp
  401870:	ret    
  401871:	push   rbp
  401872:	mov    rbp,rsp
  401875:	sub    rsp,0x40
  401879:	mov    QWORD PTR [rbp+0x10],rcx
  40187d:	mov    DWORD PTR [rbp-0x4],0x0
  401884:	mov    DWORD PTR [rbp-0x8],0x0
  40188b:	mov    eax,DWORD PTR [rip+0x377f]        # 0x405010
  401891:	test   eax,eax
  401893:	je     0x4018a4
  401895:	call   0x401609
  40189a:	mov    DWORD PTR [rip+0x376c],0x0        # 0x405010
  4018a4:	lea    rdx,[rbp-0x8]
  4018a8:	lea    rax,[rbp-0x4]
  4018ac:	mov    rcx,rax
  4018af:	mov    rax,QWORD PTR [rip+0x8ad2]        # 0x40a388
  4018b6:	call   rax
  4018b8:	mov    rcx,QWORD PTR [rbp+0x10]
  4018bc:	mov    rax,QWORD PTR [rip+0x8b7d]        # 0x40a440
  4018c3:	call   rax
  4018c5:	cmp    eax,0x2
  4018c8:	je     0x401911
  4018ca:	cmp    eax,0x2
  4018cd:	jg     0x4018d9
  4018cf:	cmp    eax,0x1
  4018d2:	je     0x4018e8
  4018d4:	jmp    0x401983
  4018d9:	cmp    eax,0x3
  4018dc:	je     0x401937
  4018de:	cmp    eax,0x4
  4018e1:	je     0x40195d
  4018e3:	jmp    0x401983
  4018e8:	mov    edx,DWORD PTR [rbp-0x8]
  4018eb:	mov    eax,DWORD PTR [rbp-0x4]
  4018ee:	mov    DWORD PTR [rsp+0x20],0x7d
  4018f6:	mov    r9d,edx
  4018f9:	mov    r8d,eax
  4018fc:	mov    rdx,QWORD PTR [rbp+0x10]
  401900:	lea    rcx,[rip+0x478f]        # 0x406096
  401907:	call   0x401630
  40190c:	jmp    0x4019a3
  401911:	mov    edx,DWORD PTR [rbp-0x8]
  401914:	mov    eax,DWORD PTR [rbp-0x4]
  401917:	mov    DWORD PTR [rsp+0x20],0xf
  40191f:	mov    r9d,edx
  401922:	mov    r8d,eax
  401925:	mov    rdx,QWORD PTR [rbp+0x10]
  401929:	lea    rcx,[rip+0x4769]        # 0x406099
  401930:	call   0x401630
  401935:	jmp    0x4019a3
  401937:	mov    edx,DWORD PTR [rbp-0x8]
  40193a:	mov    eax,DWORD PTR [rbp-0x4]
  40193d:	mov    DWORD PTR [rsp+0x20],0xf
  401945:	mov    r9d,edx
  401948:	mov    r8d,eax
  40194b:	mov    rdx,QWORD PTR [rbp+0x10]
  40194f:	lea    rcx,[rip+0x4746]        # 0x40609c
  401956:	call   0x401630
  40195b:	jmp    0x4019a3
  40195d:	mov    edx,DWORD PTR [rbp-0x8]
  401960:	mov    eax,DWORD PTR [rbp-0x4]
  401963:	mov    DWORD PTR [rsp+0x20],0x7d
  40196b:	mov    r9d,edx
  40196e:	mov    r8d,eax
  401971:	mov    rdx,QWORD PTR [rbp+0x10]
  401975:	lea    rcx,[rip+0x4724]        # 0x4060a0
  40197c:	call   0x401630
  401981:	jmp    0x4019a3
  401983:	mov    edx,DWORD PTR [rbp-0x8]
  401986:	mov    eax,DWORD PTR [rbp-0x4]
  401989:	mov    r9d,edx
  40198c:	mov    r8d,eax
  40198f:	lea    rdx,[rip+0x470e]        # 0x4060a4
  401996:	lea    rcx,[rip+0x46dd]        # 0x40607a
  40199d:	call   0x4048c8
  4019a2:	nop
  4019a3:	add    rsp,0x40
  4019a7:	pop    rbp
  4019a8:	ret    
  4019a9:	push   rbp
  4019aa:	mov    rbp,rsp
  4019ad:	sub    rsp,0x20
  4019b1:	mov    QWORD PTR [rbp+0x10],rcx
  4019b5:	mov    QWORD PTR [rbp+0x18],rdx
  4019b9:	mov    QWORD PTR [rbp+0x20],r8
  4019bd:	mov    rax,QWORD PTR [rbp+0x18]
  4019c1:	mov    rcx,rax
  4019c4:	call   0x401871
  4019c9:	mov    rax,QWORD PTR [rbp+0x18]
  4019cd:	lea    r8,[rip+0x462c]        # 0x406000
  4019d4:	lea    rdx,[rip+0x4632]        # 0x40600d
  4019db:	mov    rcx,rax
  4019de:	mov    rax,QWORD PTR [rip+0x8a63]        # 0x40a448
  4019e5:	call   rax
  4019e7:	test   eax,eax
  4019e9:	je     0x4019f5
  4019eb:	mov    ecx,0x0
  4019f0:	call   0x404908
  4019f5:	mov    eax,0x0
  4019fa:	add    rsp,0x20
  4019fe:	pop    rbp
  4019ff:	ret    
  401a00:	push   rbp
  401a01:	mov    rbp,rsp
  401a04:	sub    rsp,0x50
  401a08:	mov    QWORD PTR [rbp+0x10],rcx
  401a0c:	mov    QWORD PTR [rbp+0x18],rdx
  401a10:	mov    QWORD PTR [rbp+0x20],r8
  401a14:	mov    rax,QWORD PTR [rbp+0x20]
  401a18:	mov    DWORD PTR [rbp-0x4],eax
  401a1b:	lea    rcx,[rbp-0x14]
  401a1f:	lea    rdx,[rbp-0x10]
  401a23:	mov    rax,QWORD PTR [rbp+0x18]
  401a27:	mov    r8,rcx
  401a2a:	mov    rcx,rax
  401a2d:	mov    rax,QWORD PTR [rip+0x8a6c]        # 0x40a4a0
  401a34:	call   rax
  401a36:	test   eax,eax
  401a38:	jne    0x401a46
  401a3a:	lea    rcx,[rip+0x4667]        # 0x4060a8
  401a41:	call   0x403110
  401a46:	mov    eax,DWORD PTR [rbp-0x4]
  401a49:	cmp    eax,0x2
  401a4c:	je     0x401a50
  401a4e:	jmp    0x401abc
  401a50:	mov    DWORD PTR [rbp-0x30],0x0
  401a57:	mov    DWORD PTR [rbp-0x2c],0x0
  401a5e:	mov    eax,DWORD PTR [rbp-0x14]
  401a61:	mov    DWORD PTR [rbp-0x28],eax
  401a64:	mov    eax,DWORD PTR [rbp-0x14]
  401a67:	mov    DWORD PTR [rbp-0x24],eax
  401a6a:	lea    rdx,[rbp-0x1c]
  401a6e:	lea    rax,[rbp-0x18]
  401a72:	mov    rcx,rax
  401a75:	mov    rax,QWORD PTR [rip+0x890c]        # 0x40a388
  401a7c:	call   rax
  401a7e:	mov    eax,DWORD PTR [rbp-0x18]
  401a81:	mov    DWORD PTR [rbp-0x30],eax
  401a84:	mov    eax,DWORD PTR [rbp-0x1c]
  401a87:	mov    DWORD PTR [rbp-0x2c],eax
  401a8a:	lea    rax,[rbp-0x30]
  401a8e:	mov    r8d,0x10
  401a94:	mov    rdx,rax
  401a97:	mov    ecx,0x1
  401a9c:	call   0x403147
  401aa1:	test   eax,eax
  401aa3:	jne    0x401abb
  401aa5:	lea    rcx,[rip+0x460f]        # 0x4060bb
  401aac:	call   0x4048d0
  401ab1:	mov    ecx,0x1
  401ab6:	call   0x404908
  401abb:	nop
  401abc:	mov    eax,DWORD PTR [rbp-0x14]
  401abf:	movsxd rdx,eax
  401ac2:	mov    rax,QWORD PTR [rbp-0x10]
  401ac6:	mov    r8,rdx
  401ac9:	mov    rdx,rax
  401acc:	mov    ecx,0x1
  401ad1:	call   0x403147
  401ad6:	test   eax,eax
  401ad8:	jne    0x401af0
  401ada:	lea    rcx,[rip+0x45da]        # 0x4060bb
  401ae1:	call   0x4048d0
  401ae6:	mov    ecx,0x1
  401aeb:	call   0x404908
  401af0:	mov    rax,QWORD PTR [rbp-0x10]
  401af4:	mov    rcx,rax
  401af7:	mov    rax,QWORD PTR [rip+0x88f2]        # 0x40a3f0
  401afe:	call   rax
  401b00:	mov    rax,QWORD PTR [rbp+0x18]
  401b04:	lea    r8,[rip+0x44f5]        # 0x406000
  401b0b:	lea    rdx,[rip+0x44fb]        # 0x40600d
  401b12:	mov    rcx,rax
  401b15:	mov    rax,QWORD PTR [rip+0x892c]        # 0x40a448
  401b1c:	call   rax
  401b1e:	test   eax,eax
  401b20:	je     0x401b2c
  401b22:	mov    ecx,0x0
  401b27:	call   0x404908
  401b2c:	mov    eax,0x0
  401b31:	add    rsp,0x50
  401b35:	pop    rbp
  401b36:	ret    
  401b37:	push   rbp
  401b38:	mov    rbp,rsp
  401b3b:	sub    rsp,0x20
  401b3f:	mov    QWORD PTR [rbp+0x10],rcx
  401b43:	mov    DWORD PTR [rbp+0x18],edx
  401b46:	mov    rax,QWORD PTR [rip+0x8a53]        # 0x40a5a0
  401b4d:	call   rax
  401b4f:	add    rax,0x60
  401b53:	mov    r8,QWORD PTR [rbp+0x10]
  401b57:	lea    rdx,[rip+0x4572]        # 0x4060d0
  401b5e:	mov    rcx,rax
  401b61:	call   0x4048f8
  401b66:	mov    eax,DWORD PTR [rbp+0x18]
  401b69:	mov    ecx,eax
  401b6b:	call   0x404908
  401b70:	nop
  401b71:	push   rbp
  401b72:	mov    rbp,rsp
  401b75:	sub    rsp,0x20
  401b79:	mov    QWORD PTR [rbp+0x10],rcx
  401b7d:	mov    QWORD PTR [rbp+0x18],rdx
  401b81:	mov    rax,QWORD PTR [rbp+0x10]
  401b85:	mov    eax,DWORD PTR [rax]
  401b87:	test   eax,eax
  401b89:	je     0x401bc5
  401b8b:	mov    rax,QWORD PTR [rip+0x8a0e]        # 0x40a5a0
  401b92:	call   rax
  401b94:	add    rax,0x60
  401b98:	mov    r9,rax
  401b9b:	mov    r8d,0x2d
  401ba1:	mov    edx,0x1
  401ba6:	lea    rcx,[rip+0x459b]        # 0x406148
  401bad:	call   0x4048e8
  401bb2:	mov    rax,QWORD PTR [rbp+0x18]
  401bb6:	mov    edx,0x1
  401bbb:	mov    rcx,rax
  401bbe:	call   0x401b37
  401bc3:	jmp    0x401bcf
  401bc5:	mov    rax,QWORD PTR [rbp+0x10]
  401bc9:	mov    DWORD PTR [rax],0x1
  401bcf:	add    rsp,0x20
  401bd3:	pop    rbp
  401bd4:	ret    
  401bd5:	push   rbp
  401bd6:	push   rsi
  401bd7:	push   rbx
  401bd8:	sub    rsp,0x100
  401bdf:	lea    rbp,[rsp+0x80]
  401be7:	mov    QWORD PTR [rbp+0xa0],rcx
  401bee:	mov    DWORD PTR [rbp+0xa8],edx
  401bf4:	mov    QWORD PTR [rbp+0xb0],r8
  401bfb:	mov    QWORD PTR [rbp+0x40],0x0
  401c03:	mov    QWORD PTR [rbp+0x48],0x0
  401c0b:	mov    QWORD PTR [rbp+0x50],0x0
  401c13:	mov    QWORD PTR [rbp+0x58],0x0
  401c1b:	movzx  eax,BYTE PTR [rbp+0x50]
  401c1f:	or     eax,0x1
  401c22:	mov    BYTE PTR [rbp+0x50],al
  401c25:	mov    DWORD PTR [rbp+0x3c],0x0
  401c2c:	lea    r9,[rip+0x4543]        # 0x406176
  401c33:	lea    r8,[rip+0x454e]        # 0x406188
  401c3a:	lea    rdx,[rip+0x4567]        # 0x4061a8
  401c41:	lea    rcx,[rip+0x4576]        # 0x4061be
  401c48:	mov    rax,QWORD PTR [rip+0x8859]        # 0x40a4a8
  401c4f:	call   rax
  401c51:	mov    QWORD PTR [rbp+0x70],rax
  401c55:	cmp    QWORD PTR [rbp+0x70],0x0
  401c5a:	jne    0x401c68
  401c5c:	lea    rcx,[rip+0x4570]        # 0x4061d3
  401c63:	call   0x403110
  401c68:	lea    rdx,[rbp-0x10]
  401c6c:	mov    rax,QWORD PTR [rbp+0x70]
  401c70:	mov    rcx,rax
  401c73:	mov    rax,QWORD PTR [rip+0x8806]        # 0x40a480
  401c7a:	call   rax
  401c7c:	lea    rdx,[rbp-0x60]
  401c80:	lea    rax,[rbp-0x10]
  401c84:	mov    r9,rdx
  401c87:	lea    r8,[rip+0x4558]        # 0x4061e6
  401c8e:	mov    edx,0x61
  401c93:	mov    rcx,rax
  401c96:	mov    rax,QWORD PTR [rip+0x87f3]        # 0x40a490
  401c9d:	call   rax
  401c9f:	test   eax,eax
  401ca1:	jne    0x401caf
  401ca3:	lea    rcx,[rip+0x453e]        # 0x4061e8
  401caa:	call   0x403110
  401caf:	mov    DWORD PTR [rbp+0x7c],0x0
  401cb6:	jmp    0x401cfb
  401cb8:	mov    eax,DWORD PTR [rbp+0x7c]
  401cbb:	cdqe   
  401cbd:	lea    rdx,[rax*8+0x0]
  401cc5:	mov    rax,QWORD PTR [rbp+0xb0]
  401ccc:	add    rdx,rax
  401ccf:	lea    rax,[rbp-0x60]
  401cd3:	mov    r8,rdx
  401cd6:	mov    edx,0x73
  401cdb:	mov    rcx,rax
  401cde:	mov    rax,QWORD PTR [rip+0x876b]        # 0x40a450
  401ce5:	call   rax
  401ce7:	test   eax,eax
  401ce9:	jne    0x401cf7
  401ceb:	lea    rcx,[rip+0x450b]        # 0x4061fd
  401cf2:	call   0x403110
  401cf7:	add    DWORD PTR [rbp+0x7c],0x1
  401cfb:	mov    eax,DWORD PTR [rbp+0x7c]
  401cfe:	cmp    eax,DWORD PTR [rbp+0xa8]
  401d04:	jl     0x401cb8
  401d06:	lea    rdx,[rbp-0x60]
  401d0a:	lea    rax,[rbp-0x10]
  401d0e:	mov    rcx,rax
  401d11:	mov    rax,QWORD PTR [rip+0x8740]        # 0x40a458
  401d18:	call   rax
  401d1a:	test   eax,eax
  401d1c:	je     0x401d3e
  401d1e:	lea    rdx,[rbp+0x3c]
  401d22:	lea    rax,[rbp-0x10]
  401d26:	mov    r8,rdx
  401d29:	mov    edx,0x75
  401d2e:	mov    rcx,rax
  401d31:	mov    rax,QWORD PTR [rip+0x8718]        # 0x40a450
  401d38:	call   rax
  401d3a:	test   eax,eax
  401d3c:	jne    0x401d4a
  401d3e:	lea    rcx,[rip+0x44cf]        # 0x406214
  401d45:	call   0x403110
  401d4a:	lea    rdx,[rbp+0x40]
  401d4e:	mov    rax,QWORD PTR [rbp+0x70]
  401d52:	mov    r9,rdx
  401d55:	mov    r8d,0xffffffff
  401d5b:	mov    rdx,rax
  401d5e:	mov    rcx,QWORD PTR [rbp+0xa0]
  401d65:	mov    rax,QWORD PTR [rip+0x8654]        # 0x40a3c0
  401d6c:	call   rax
  401d6e:	mov    QWORD PTR [rbp+0x68],rax
  401d72:	cmp    QWORD PTR [rbp+0x68],0x0
  401d77:	je     0x401d8e
  401d79:	mov    rax,QWORD PTR [rbp+0x68]
  401d7d:	mov    rcx,rax
  401d80:	mov    rax,QWORD PTR [rip+0x8729]        # 0x40a4b0
  401d87:	call   rax
  401d89:	jmp    0x401e1c
  401d8e:	lea    rax,[rbp+0x40]
  401d92:	lea    rdx,[rip+0x448f]        # 0x406228
  401d99:	mov    rcx,rax
  401d9c:	mov    rax,QWORD PTR [rip+0x8635]        # 0x40a3d8
  401da3:	call   rax
  401da5:	test   eax,eax
  401da7:	je     0x401de2
  401da9:	mov    rax,QWORD PTR [rip+0x87f0]        # 0x40a5a0
  401db0:	call   rax
  401db2:	add    rax,0x60
  401db6:	mov    r9,rax
  401db9:	mov    r8d,0x71
  401dbf:	mov    edx,0x1
  401dc4:	lea    rcx,[rip+0x448d]        # 0x406258
  401dcb:	call   0x4048e8
  401dd0:	lea    rax,[rbp+0x40]
  401dd4:	mov    rcx,rax
  401dd7:	mov    rax,QWORD PTR [rip+0x85f2]        # 0x40a3d0
  401dde:	call   rax
  401de0:	jmp    0x401e1c
  401de2:	mov    rsi,QWORD PTR [rbp+0x48]
  401de6:	mov    rbx,QWORD PTR [rbp+0x40]
  401dea:	mov    rax,QWORD PTR [rip+0x87af]        # 0x40a5a0
  401df1:	call   rax
  401df3:	add    rax,0x60
  401df7:	mov    r9,rsi
  401dfa:	mov    r8,rbx
  401dfd:	lea    rdx,[rip+0x44cc]        # 0x4062d0
  401e04:	mov    rcx,rax
  401e07:	call   0x4048f8
  401e0c:	lea    rax,[rbp+0x40]
  401e10:	mov    rcx,rax
  401e13:	mov    rax,QWORD PTR [rip+0x85b6]        # 0x40a3d0
  401e1a:	call   rax
  401e1c:	mov    rax,QWORD PTR [rbp+0x70]
  401e20:	mov    rcx,rax
  401e23:	mov    rax,QWORD PTR [rip+0x8686]        # 0x40a4b0
  401e2a:	call   rax
  401e2c:	cmp    QWORD PTR [rbp+0x68],0x0
  401e31:	setne  al
  401e34:	movzx  eax,al
  401e37:	add    rsp,0x100
  401e3e:	pop    rbx
  401e3f:	pop    rsi
  401e40:	pop    rbp
  401e41:	ret    
  401e42:	push   rbp
  401e43:	push   rsi
  401e44:	push   rbx
  401e45:	mov    rbp,rsp
  401e48:	sub    rsp,0xd0
  401e4f:	mov    DWORD PTR [rbp+0x20],ecx
  401e52:	mov    QWORD PTR [rbp+0x28],rdx
  401e56:	call   0x403480
  401e5b:	mov    DWORD PTR [rbp-0xc],0x0
  401e62:	lea    rax,[rip+0xfffffffffffff716]        # 0x40157f
  401e69:	mov    QWORD PTR [rbp-0x18],rax
  401e6d:	mov    QWORD PTR [rbp-0x20],0x0
  401e75:	mov    DWORD PTR [rbp-0x84],0x0
  401e7f:	mov    DWORD PTR [rbp-0x24],0x0
  401e86:	mov    DWORD PTR [rbp-0x28],0x0
  401e8d:	mov    DWORD PTR [rbp-0x2c],0x0
  401e94:	mov    DWORD PTR [rbp-0x30],0x0
  401e9b:	mov    QWORD PTR [rbp-0x38],0x0
  401ea3:	mov    rax,QWORD PTR [rip+0x86f6]        # 0x40a5a0
  401eaa:	call   rax
  401eac:	add    rax,0x30
  401eb0:	mov    r9d,0x0
  401eb6:	mov    r8d,0x4
  401ebc:	mov    edx,0x0
  401ec1:	mov    rcx,rax
  401ec4:	call   0x4048a8
  401ec9:	mov    DWORD PTR [rbp-0x28],0x1
  401ed0:	jmp    0x4021d5
  401ed5:	mov    eax,DWORD PTR [rbp-0x28]
  401ed8:	cdqe   
  401eda:	lea    rdx,[rax*8+0x0]
  401ee2:	mov    rax,QWORD PTR [rbp+0x28]
  401ee6:	add    rax,rdx
  401ee9:	mov    rax,QWORD PTR [rax]
  401eec:	mov    QWORD PTR [rbp-0x50],rax
  401ef0:	mov    rax,QWORD PTR [rbp-0x50]
  401ef4:	lea    rdx,[rip+0x4434]        # 0x40632f
  401efb:	mov    rcx,rax
  401efe:	call   0x404898
  401f03:	test   eax,eax
  401f05:	jne    0x401f29
  401f07:	mov    rax,QWORD PTR [rbp+0x28]
  401f0b:	mov    rdx,QWORD PTR [rax]
  401f0e:	lea    rax,[rbp-0x84]
  401f15:	mov    rcx,rax
  401f18:	call   0x401b71
  401f1d:	mov    DWORD PTR [rbp-0xc],0x1
  401f24:	jmp    0x4021d1
  401f29:	mov    rax,QWORD PTR [rbp-0x50]
  401f2d:	lea    rdx,[rip+0x4404]        # 0x406338
  401f34:	mov    rcx,rax
  401f37:	call   0x404898
  401f3c:	test   eax,eax
  401f3e:	jne    0x401f62
  401f40:	mov    rax,QWORD PTR [rbp+0x28]
  401f44:	mov    rdx,QWORD PTR [rax]
  401f47:	lea    rax,[rbp-0x84]
  401f4e:	mov    rcx,rax
  401f51:	call   0x401b71
  401f56:	mov    DWORD PTR [rbp-0xc],0x0
  401f5d:	jmp    0x4021d1
  401f62:	mov    rax,QWORD PTR [rbp-0x50]
  401f66:	lea    rdx,[rip+0x43d5]        # 0x406342
  401f6d:	mov    rcx,rax
  401f70:	call   0x404898
  401f75:	test   eax,eax
  401f77:	jne    0x401fdb
  401f79:	mov    rax,QWORD PTR [rbp+0x28]
  401f7d:	mov    rdx,QWORD PTR [rax]
  401f80:	lea    rax,[rbp-0x84]
  401f87:	mov    rcx,rax
  401f8a:	call   0x401b71
  401f8f:	mov    eax,DWORD PTR [rbp-0x28]
  401f92:	add    eax,0x1
  401f95:	cmp    eax,DWORD PTR [rbp+0x20]
  401f98:	jge    0x401fc2
  401f9a:	mov    eax,DWORD PTR [rbp-0x28]
  401f9d:	cdqe   
  401f9f:	add    rax,0x1
  401fa3:	lea    rdx,[rax*8+0x0]
  401fab:	mov    rax,QWORD PTR [rbp+0x28]
  401faf:	add    rax,rdx
  401fb2:	mov    rax,QWORD PTR [rax]
  401fb5:	mov    QWORD PTR [rbp-0x20],rax
  401fb9:	add    DWORD PTR [rbp-0x28],0x1
  401fbd:	jmp    0x4021d1
  401fc2:	mov    rax,QWORD PTR [rbp+0x28]
  401fc6:	mov    rax,QWORD PTR [rax]
  401fc9:	mov    edx,0x1
  401fce:	mov    rcx,rax
  401fd1:	call   0x401b37
  401fd6:	jmp    0x4021d1
  401fdb:	mov    rax,QWORD PTR [rbp-0x50]
  401fdf:	lea    rdx,[rip+0x4366]        # 0x40634c
  401fe6:	mov    rcx,rax
  401fe9:	call   0x404898
  401fee:	test   eax,eax
  401ff0:	jne    0x40200b
  401ff2:	mov    rax,QWORD PTR [rbp+0x28]
  401ff6:	mov    rax,QWORD PTR [rax]
  401ff9:	mov    edx,0x0
  401ffe:	mov    rcx,rax
  402001:	call   0x401b37
  402006:	jmp    0x4021d1
  40200b:	mov    rax,QWORD PTR [rbp-0x50]
  40200f:	lea    rdx,[rip+0x433d]        # 0x406353
  402016:	mov    rcx,rax
  402019:	call   0x404898
  40201e:	test   eax,eax
  402020:	jne    0x402039
  402022:	lea    rax,[rip+0xfffffffffffff556]        # 0x40157f
  402029:	mov    QWORD PTR [rbp-0x18],rax
  40202d:	mov    DWORD PTR [rbp-0x24],0x0
  402034:	jmp    0x4021d1
  402039:	mov    rax,QWORD PTR [rbp-0x50]
  40203d:	lea    rdx,[rip+0x4319]        # 0x40635d
  402044:	mov    rcx,rax
  402047:	call   0x404898
  40204c:	test   eax,eax
  40204e:	jne    0x402067
  402050:	lea    rax,[rip+0xfffffffffffff952]        # 0x4019a9
  402057:	mov    QWORD PTR [rbp-0x18],rax
  40205b:	mov    DWORD PTR [rbp-0x24],0x0
  402062:	jmp    0x4021d1
  402067:	mov    rax,QWORD PTR [rbp-0x50]
  40206b:	lea    rdx,[rip+0x42f5]        # 0x406367
  402072:	mov    rcx,rax
  402075:	call   0x404898
  40207a:	test   eax,eax
  40207c:	jne    0x402095
  40207e:	lea    rax,[rip+0xfffffffffffff97b]        # 0x401a00
  402085:	mov    QWORD PTR [rbp-0x18],rax
  402089:	mov    DWORD PTR [rbp-0x24],0x1
  402090:	jmp    0x4021d1
  402095:	mov    rax,QWORD PTR [rbp-0x50]
  402099:	lea    rdx,[rip+0x42d0]        # 0x406370
  4020a0:	mov    rcx,rax
  4020a3:	call   0x404898
  4020a8:	test   eax,eax
  4020aa:	jne    0x4020c3
  4020ac:	lea    rax,[rip+0xfffffffffffff94d]        # 0x401a00
  4020b3:	mov    QWORD PTR [rbp-0x18],rax
  4020b7:	mov    DWORD PTR [rbp-0x24],0x2
  4020be:	jmp    0x4021d1
  4020c3:	mov    rax,QWORD PTR [rbp-0x50]
  4020c7:	lea    rdx,[rip+0x42a9]        # 0x406377
  4020ce:	mov    rcx,rax
  4020d1:	call   0x404898
  4020d6:	test   eax,eax
  4020d8:	jne    0x4020df
  4020da:	jmp    0x4021d1
  4020df:	mov    rax,QWORD PTR [rbp-0x50]
  4020e3:	movzx  eax,BYTE PTR [rax]
  4020e6:	cmp    al,0x2d
  4020e8:	jne    0x402103
  4020ea:	mov    rax,QWORD PTR [rbp+0x28]
  4020ee:	mov    rax,QWORD PTR [rax]
  4020f1:	mov    edx,0x1
  4020f6:	mov    rcx,rax
  4020f9:	call   0x401b37
  4020fe:	jmp    0x4021d1
  402103:	add    DWORD PTR [rbp-0x30],0x1
  402107:	mov    rax,QWORD PTR [rbp-0x50]
  40210b:	mov    rcx,rax
  40210e:	call   0x404890
  402113:	add    eax,0x10
  402116:	mov    DWORD PTR [rbp-0x54],eax
  402119:	mov    eax,DWORD PTR [rbp-0x30]
  40211c:	cdqe   
  40211e:	lea    rdx,[rax*8+0x0]
  402126:	mov    rax,QWORD PTR [rbp-0x38]
  40212a:	mov    rcx,rax
  40212d:	call   0x4048b0
  402132:	mov    QWORD PTR [rbp-0x38],rax
  402136:	cmp    QWORD PTR [rbp-0x38],0x0
  40213b:	jne    0x402149
  40213d:	lea    rcx,[rip+0x4236]        # 0x40637a
  402144:	call   0x403110
  402149:	mov    eax,DWORD PTR [rbp-0x2c]
  40214c:	cdqe   
  40214e:	lea    rdx,[rax*8+0x0]
  402156:	mov    rax,QWORD PTR [rbp-0x38]
  40215a:	lea    rbx,[rdx+rax*1]
  40215e:	mov    eax,DWORD PTR [rbp-0x54]
  402161:	mov    rcx,rax
  402164:	call   0x4048e0
  402169:	mov    QWORD PTR [rbx],rax
  40216c:	mov    eax,DWORD PTR [rbp-0x2c]
  40216f:	cdqe   
  402171:	lea    rdx,[rax*8+0x0]
  402179:	mov    rax,QWORD PTR [rbp-0x38]
  40217d:	add    rax,rdx
  402180:	mov    rax,QWORD PTR [rax]
  402183:	test   rax,rax
  402186:	jne    0x402194
  402188:	lea    rcx,[rip+0x4204]        # 0x406393
  40218f:	call   0x403110
  402194:	mov    edx,DWORD PTR [rbp-0x54]
  402197:	mov    eax,DWORD PTR [rbp-0x2c]
  40219a:	cdqe   
  40219c:	lea    rcx,[rax*8+0x0]
  4021a4:	mov    rax,QWORD PTR [rbp-0x38]
  4021a8:	add    rax,rcx
  4021ab:	mov    rax,QWORD PTR [rax]
  4021ae:	mov    rcx,QWORD PTR [rbp-0x50]
  4021b2:	mov    QWORD PTR [rsp+0x20],rcx
  4021b7:	lea    r9,[rip+0x41e9]        # 0x4063a7
  4021be:	lea    r8,[rip+0x41f1]        # 0x4063b6
  4021c5:	mov    rcx,rax
  4021c8:	call   0x401530
  4021cd:	add    DWORD PTR [rbp-0x2c],0x1
  4021d1:	add    DWORD PTR [rbp-0x28],0x1
  4021d5:	mov    eax,DWORD PTR [rbp-0x28]
  4021d8:	cmp    eax,DWORD PTR [rbp+0x20]
  4021db:	jl     0x401ed5
  4021e1:	lea    rax,[rbp-0x80]
  4021e5:	mov    rcx,rax
  4021e8:	mov    rax,QWORD PTR [rip+0x81f1]        # 0x40a3e0
  4021ef:	call   rax
  4021f1:	cmp    QWORD PTR [rbp-0x20],0x0
  4021f6:	je     0x402273
  4021f8:	lea    rdx,[rbp-0x80]
  4021fc:	mov    rax,QWORD PTR [rbp-0x20]
  402200:	mov    rcx,rax
  402203:	mov    rax,QWORD PTR [rip+0x81a6]        # 0x40a3b0
  40220a:	call   rax
  40220c:	mov    QWORD PTR [rbp-0x8],rax
  402210:	cmp    QWORD PTR [rbp-0x8],0x0
  402215:	je     0x402289
  402217:	lea    rdx,[rbp-0x80]
  40221b:	mov    rax,QWORD PTR [rbp-0x8]
  40221f:	mov    rcx,rax
  402222:	mov    rax,QWORD PTR [rip+0x8177]        # 0x40a3a0
  402229:	call   rax
  40222b:	test   eax,eax
  40222d:	jne    0x402289
  40222f:	mov    rbx,QWORD PTR [rbp-0x78]
  402233:	mov    rax,QWORD PTR [rip+0x8366]        # 0x40a5a0
  40223a:	call   rax
  40223c:	add    rax,0x60
  402240:	mov    rdx,QWORD PTR [rbp-0x20]
  402244:	mov    r9,rbx
  402247:	mov    r8,rdx
  40224a:	lea    rdx,[rip+0x416f]        # 0x4063c0
  402251:	mov    rcx,rax
  402254:	call   0x4048f8
  402259:	lea    rax,[rbp-0x80]
  40225d:	mov    rcx,rax
  402260:	mov    rax,QWORD PTR [rip+0x8169]        # 0x40a3d0
  402267:	call   rax
  402269:	mov    ecx,0x1
  40226e:	call   0x404908
  402273:	lea    rdx,[rbp-0x80]
  402277:	mov    eax,DWORD PTR [rbp-0xc]
  40227a:	mov    ecx,eax
  40227c:	mov    rax,QWORD PTR [rip+0x8115]        # 0x40a398
  402283:	call   rax
  402285:	mov    QWORD PTR [rbp-0x8],rax
  402289:	cmp    QWORD PTR [rbp-0x8],0x0
  40228e:	jne    0x40231a
  402294:	cmp    QWORD PTR [rbp-0x20],0x0
  402299:	je     0x4022a5
  40229b:	mov    rax,QWORD PTR [rbp-0x20]
  40229f:	mov    QWORD PTR [rbp-0x40],rax
  4022a3:	jmp    0x4022d6
  4022a5:	mov    eax,DWORD PTR [rbp-0xc]
  4022a8:	test   eax,eax
  4022aa:	je     0x4022be
  4022ac:	cmp    eax,0x1
  4022af:	jne    0x4022cb
  4022b1:	lea    rax,[rip+0x4138]        # 0x4063f0
  4022b8:	mov    QWORD PTR [rbp-0x40],rax
  4022bc:	jmp    0x4022d6
  4022be:	lea    rax,[rip+0x4136]        # 0x4063fb
  4022c5:	mov    QWORD PTR [rbp-0x40],rax
  4022c9:	jmp    0x4022d6
  4022cb:	lea    rax,[rip+0x4135]        # 0x406407
  4022d2:	mov    QWORD PTR [rbp-0x40],rax
  4022d6:	mov    rbx,QWORD PTR [rbp-0x78]
  4022da:	mov    rax,QWORD PTR [rip+0x82bf]        # 0x40a5a0
  4022e1:	call   rax
  4022e3:	add    rax,0x60
  4022e7:	mov    rdx,QWORD PTR [rbp-0x40]
  4022eb:	mov    r9,rbx
  4022ee:	mov    r8,rdx
  4022f1:	lea    rdx,[rip+0x4110]        # 0x406408
  4022f8:	mov    rcx,rax
  4022fb:	call   0x4048f8
  402300:	lea    rax,[rbp-0x80]
  402304:	mov    rcx,rax
  402307:	mov    rax,QWORD PTR [rip+0x80c2]        # 0x40a3d0
  40230e:	call   rax
  402310:	mov    ecx,0x1
  402315:	call   0x404908
  40231a:	mov    rax,QWORD PTR [rbp-0x8]
  40231e:	mov    edx,0x1
  402323:	mov    rcx,rax
  402326:	mov    rax,QWORD PTR [rip+0x809b]        # 0x40a3c8
  40232d:	call   rax
  40232f:	mov    eax,DWORD PTR [rbp-0x24]
  402332:	mov    rcx,rax
  402335:	mov    rdx,QWORD PTR [rbp-0x18]
  402339:	mov    rax,QWORD PTR [rbp-0x8]
  40233d:	mov    r9d,0x0
  402343:	mov    r8,rcx
  402346:	mov    rcx,rax
  402349:	mov    rax,QWORD PTR [rip+0x8058]        # 0x40a3a8
  402350:	call   rax
  402352:	test   eax,eax
  402354:	jne    0x402387
  402356:	mov    rax,QWORD PTR [rip+0x8243]        # 0x40a5a0
  40235d:	call   rax
  40235f:	add    rax,0x60
  402363:	mov    r9,rax
  402366:	mov    r8d,0x15
  40236c:	mov    edx,0x1
  402371:	lea    rcx,[rip+0x40b5]        # 0x40642d
  402378:	call   0x4048e8
  40237d:	mov    ecx,0x1
  402382:	call   0x404908
  402387:	mov    rcx,QWORD PTR [rbp-0x38]
  40238b:	mov    edx,DWORD PTR [rbp-0x30]
  40238e:	mov    rax,QWORD PTR [rbp-0x8]
  402392:	mov    r8,rcx
  402395:	mov    rcx,rax
  402398:	call   0x401bd5
  40239d:	test   eax,eax
  40239f:	jne    0x4025a7
  4023a5:	cmp    DWORD PTR [rbp-0x30],0x0
  4023a9:	je     0x402505
  4023af:	mov    QWORD PTR [rbp-0x48],0x0
  4023b7:	mov    DWORD PTR [rbp-0x28],0x0
  4023be:	jmp    0x4024f4
  4023c3:	mov    eax,DWORD PTR [rbp-0x28]
  4023c6:	cdqe   
  4023c8:	lea    rdx,[rax*8+0x0]
  4023d0:	mov    rax,QWORD PTR [rbp-0x38]
  4023d4:	add    rax,rdx
  4023d7:	mov    rdx,QWORD PTR [rax]
  4023da:	mov    rax,QWORD PTR [rbp-0x48]
  4023de:	add    rdx,rax
  4023e1:	lea    rcx,[rbp-0x80]
  4023e5:	mov    rax,QWORD PTR [rbp-0x8]
  4023e9:	mov    r8,rcx
  4023ec:	mov    rcx,rax
  4023ef:	mov    rax,QWORD PTR [rip+0x7f9a]        # 0x40a390
  4023f6:	call   rax
  4023f8:	lea    rax,[rbp-0x80]
  4023fc:	mov    rcx,rax
  4023ff:	mov    rax,QWORD PTR [rip+0x7fe2]        # 0x40a3e8
  402406:	call   rax
  402408:	test   eax,eax
  40240a:	je     0x402466
  40240c:	cmp    DWORD PTR [rbp-0x28],0x0
  402410:	jne    0x402466
  402412:	cmp    QWORD PTR [rbp-0x48],0x0
  402417:	jne    0x402466
  402419:	mov    QWORD PTR [rbp-0x48],0xf
  402421:	lea    rax,[rbp-0x80]
  402425:	mov    rcx,rax
  402428:	mov    rax,QWORD PTR [rip+0x7fa1]        # 0x40a3d0
  40242f:	call   rax
  402431:	mov    eax,DWORD PTR [rbp-0x28]
  402434:	cdqe   
  402436:	lea    rdx,[rax*8+0x0]
  40243e:	mov    rax,QWORD PTR [rbp-0x38]
  402442:	add    rax,rdx
  402445:	mov    rdx,QWORD PTR [rax]
  402448:	mov    rax,QWORD PTR [rbp-0x48]
  40244c:	add    rdx,rax
  40244f:	lea    rcx,[rbp-0x80]
  402453:	mov    rax,QWORD PTR [rbp-0x8]
  402457:	mov    r8,rcx
  40245a:	mov    rcx,rax
  40245d:	mov    rax,QWORD PTR [rip+0x7f2c]        # 0x40a390
  402464:	call   rax
  402466:	lea    rax,[rbp-0x80]
  40246a:	mov    rcx,rax
  40246d:	mov    rax,QWORD PTR [rip+0x7f74]        # 0x40a3e8
  402474:	call   rax
  402476:	test   eax,eax
  402478:	je     0x4024d1
  40247a:	mov    rsi,QWORD PTR [rbp-0x78]
  40247e:	mov    eax,DWORD PTR [rbp-0x28]
  402481:	cdqe   
  402483:	lea    rdx,[rax*8+0x0]
  40248b:	mov    rax,QWORD PTR [rbp-0x38]
  40248f:	add    rax,rdx
  402492:	mov    rbx,QWORD PTR [rax]
  402495:	mov    rax,QWORD PTR [rip+0x8104]        # 0x40a5a0
  40249c:	call   rax
  40249e:	add    rax,0x60
  4024a2:	mov    r9,rsi
  4024a5:	mov    r8,rbx
  4024a8:	lea    rdx,[rip+0x3f99]        # 0x406448
  4024af:	mov    rcx,rax
  4024b2:	call   0x4048f8
  4024b7:	lea    rax,[rbp-0x80]
  4024bb:	mov    rcx,rax
  4024be:	mov    rax,QWORD PTR [rip+0x7f0b]        # 0x40a3d0
  4024c5:	call   rax
  4024c7:	mov    ecx,0x1
  4024cc:	call   0x404908
  4024d1:	mov    eax,DWORD PTR [rbp-0x28]
  4024d4:	cdqe   
  4024d6:	lea    rdx,[rax*8+0x0]
  4024de:	mov    rax,QWORD PTR [rbp-0x38]
  4024e2:	add    rax,rdx
  4024e5:	mov    rax,QWORD PTR [rax]
  4024e8:	mov    rcx,rax
  4024eb:	call   0x4048f0
  4024f0:	add    DWORD PTR [rbp-0x28],0x1
  4024f4:	mov    eax,DWORD PTR [rbp-0x28]
  4024f7:	cmp    eax,DWORD PTR [rbp-0x2c]
  4024fa:	jl     0x4023c3
  402500:	jmp    0x4025a7
  402505:	lea    rdx,[rbp-0x80]
  402509:	mov    rax,QWORD PTR [rbp-0x8]
  40250d:	mov    r8,rdx
  402510:	lea    rdx,[rip+0x3e90]        # 0x4063a7
  402517:	mov    rcx,rax
  40251a:	mov    rax,QWORD PTR [rip+0x7e6f]        # 0x40a390
  402521:	call   rax
  402523:	lea    rax,[rbp-0x80]
  402527:	mov    rcx,rax
  40252a:	mov    rax,QWORD PTR [rip+0x7eb7]        # 0x40a3e8
  402531:	call   rax
  402533:	test   eax,eax
  402535:	je     0x4025a7
  402537:	lea    rax,[rbp-0x80]
  40253b:	mov    rcx,rax
  40253e:	mov    rax,QWORD PTR [rip+0x7e8b]        # 0x40a3d0
  402545:	call   rax
  402547:	lea    rdx,[rbp-0x80]
  40254b:	mov    rax,QWORD PTR [rbp-0x8]
  40254f:	mov    r8,rdx
  402552:	lea    rdx,[rip+0x3eae]        # 0x406407
  402559:	mov    rcx,rax
  40255c:	mov    rax,QWORD PTR [rip+0x7e2d]        # 0x40a390
  402563:	call   rax
  402565:	lea    rax,[rbp-0x80]
  402569:	mov    rcx,rax
  40256c:	mov    rax,QWORD PTR [rip+0x7e75]        # 0x40a3e8
  402573:	call   rax
  402575:	test   eax,eax
  402577:	je     0x4025a7
  402579:	nop
  40257a:	mov    rbx,QWORD PTR [rbp-0x78]
  40257e:	mov    rax,QWORD PTR [rip+0x801b]        # 0x40a5a0
  402585:	call   rax
  402587:	add    rax,0x60
  40258b:	mov    r8,rbx
  40258e:	lea    rdx,[rip+0x3ed3]        # 0x406468
  402595:	mov    rcx,rax
  402598:	call   0x4048f8
  40259d:	mov    ecx,0x1
  4025a2:	call   0x404908
  4025a7:	mov    eax,DWORD PTR [rbp-0x24]
  4025aa:	cmp    eax,0x1
  4025ad:	jbe    0x40262e
  4025af:	cmp    eax,0x2
  4025b2:	jne    0x40262f
  4025b4:	mov    DWORD PTR [rbp-0xa0],0xa1b2c3d4
  4025be:	mov    WORD PTR [rbp-0x9c],0x2
  4025c7:	mov    WORD PTR [rbp-0x9a],0x4
  4025d0:	mov    DWORD PTR [rbp-0x98],0x0
  4025da:	mov    DWORD PTR [rbp-0x94],0x0
  4025e4:	mov    DWORD PTR [rbp-0x90],0x8000000
  4025ee:	mov    DWORD PTR [rbp-0x8c],0xe7
  4025f8:	lea    rax,[rbp-0xa0]
  4025ff:	mov    r8d,0x18
  402605:	mov    rdx,rax
  402608:	mov    ecx,0x1
  40260d:	call   0x403147
  402612:	test   eax,eax
  402614:	jne    0x40262c
  402616:	lea    rcx,[rip+0x3a9e]        # 0x4060bb
  40261d:	call   0x4048d0
  402622:	mov    ecx,0x1
  402627:	call   0x404908
  40262c:	jmp    0x40262f
  40262e:	nop
  40262f:	nop
  402630:	mov    rax,QWORD PTR [rbp-0x8]
  402634:	mov    edx,0xffffffff
  402639:	mov    rcx,rax
  40263c:	mov    rax,QWORD PTR [rip+0x7d75]        # 0x40a3b8
  402643:	call   rax
  402645:	test   eax,eax
  402647:	jne    0x402630
  402649:	mov    ecx,0x0
  40264e:	call   0x404908
  402653:	nop
  402654:	nop
  402655:	nop
  402656:	nop
  402657:	nop
  402658:	nop
  402659:	nop
  40265a:	nop
  40265b:	nop
  40265c:	nop
  40265d:	nop
  40265e:	nop
  40265f:	nop
  402660:	push   rbp
  402661:	mov    rbp,rsp
  402664:	mov    DWORD PTR [rbp+0x10],ecx
  402667:	mov    eax,DWORD PTR [rbp+0x10]
  40266a:	cmp    eax,0x2
  40266d:	je     0x402697
  40266f:	cmp    eax,0x2
  402672:	jg     0x40267b
  402674:	cmp    eax,0x1
  402677:	je     0x40268e
  402679:	jmp    0x4026a9
  40267b:	cmp    eax,0x3
  40267e:	je     0x4026a0
  402680:	cmp    eax,0x4
  402683:	jne    0x4026a9
  402685:	lea    rax,[rip+0x3df4]        # 0x406480
  40268c:	jmp    0x4026b0
  40268e:	lea    rax,[rip+0x3df2]        # 0x406487
  402695:	jmp    0x4026b0
  402697:	lea    rax,[rip+0x3df5]        # 0x406493
  40269e:	jmp    0x4026b0
  4026a0:	lea    rax,[rip+0x3dfa]        # 0x4064a1
  4026a7:	jmp    0x4026b0
  4026a9:	lea    rax,[rip+0x3df7]        # 0x4064a7
  4026b0:	pop    rbp
  4026b1:	ret    
  4026b2:	push   rbp
  4026b3:	mov    rbp,rsp
  4026b6:	sub    rsp,0x20
  4026ba:	mov    DWORD PTR [rbp+0x10],ecx
  4026bd:	jmp    0x4026cb
  4026bf:	lea    rcx,[rip+0x3df8]        # 0x4064be
  4026c6:	call   0x4048c8
  4026cb:	mov    eax,DWORD PTR [rbp+0x10]
  4026ce:	lea    edx,[rax-0x1]
  4026d1:	mov    DWORD PTR [rbp+0x10],edx
  4026d4:	test   eax,eax
  4026d6:	jg     0x4026bf
  4026d8:	add    rsp,0x20
  4026dc:	pop    rbp
  4026dd:	ret    
  4026de:	push   rbp
  4026df:	mov    rbp,rsp
  4026e2:	sub    rsp,0x30
  4026e6:	mov    QWORD PTR [rbp+0x10],rcx
  4026ea:	mov    DWORD PTR [rbp+0x18],edx
  4026ed:	mov    DWORD PTR [rbp+0x20],r8d
  4026f1:	lea    rcx,[rip+0x3dca]        # 0x4064c2
  4026f8:	call   0x4048b8
  4026fd:	mov    eax,DWORD PTR [rbp+0x20]
  402700:	add    eax,0x1
  402703:	mov    ecx,eax
  402705:	call   0x4026b2
  40270a:	mov    eax,DWORD PTR [rbp+0x20]
  40270d:	not    eax
  40270f:	mov    edx,eax
  402711:	mov    eax,edx
  402713:	add    eax,eax
  402715:	add    eax,edx
  402717:	lea    ecx,[rax+0x50]
  40271a:	mov    edx,0x55555556
  40271f:	mov    eax,ecx
  402721:	imul   edx
  402723:	mov    eax,ecx
  402725:	sar    eax,0x1f
  402728:	sub    edx,eax
  40272a:	mov    eax,edx
  40272c:	mov    DWORD PTR [rbp-0x8],eax
  40272f:	cmp    DWORD PTR [rbp-0x8],0x7
  402733:	ja     0x40273c
  402735:	mov    DWORD PTR [rbp-0x8],0x8
  40273c:	mov    DWORD PTR [rbp-0x4],0x0
  402743:	jmp    0x4027a3
  402745:	mov    edx,DWORD PTR [rbp-0x4]
  402748:	mov    rax,QWORD PTR [rbp+0x10]
  40274c:	add    rax,rdx
  40274f:	movzx  eax,BYTE PTR [rax]
  402752:	movzx  eax,al
  402755:	mov    edx,eax
  402757:	lea    rcx,[rip+0x3d75]        # 0x4064d3
  40275e:	call   0x4048c8
  402763:	add    DWORD PTR [rbp-0x4],0x1
  402767:	mov    eax,DWORD PTR [rbp-0x4]
  40276a:	cmp    eax,DWORD PTR [rbp+0x18]
  40276d:	je     0x4027a3
  40276f:	mov    eax,DWORD PTR [rbp-0x4]
  402772:	mov    edx,0x0
  402777:	div    DWORD PTR [rbp-0x8]
  40277a:	mov    eax,edx
  40277c:	test   eax,eax
  40277e:	jne    0x402799
  402780:	mov    ecx,0xa
  402785:	call   0x4048c0
  40278a:	mov    eax,DWORD PTR [rbp+0x20]
  40278d:	add    eax,0x1
  402790:	mov    ecx,eax
  402792:	call   0x4026b2
  402797:	jmp    0x4027a3
  402799:	mov    ecx,0x20
  40279e:	call   0x4048c0
  4027a3:	mov    eax,DWORD PTR [rbp-0x4]
  4027a6:	cmp    eax,DWORD PTR [rbp+0x18]
  4027a9:	jb     0x402745
  4027ab:	mov    ecx,0xa
  4027b0:	call   0x4048c0
  4027b5:	mov    eax,DWORD PTR [rbp+0x20]
  4027b8:	mov    ecx,eax
  4027ba:	call   0x4026b2
  4027bf:	lea    rcx,[rip+0x3d12]        # 0x4064d8
  4027c6:	call   0x4048b8
  4027cb:	nop
  4027cc:	add    rsp,0x30
  4027d0:	pop    rbp
  4027d1:	ret    
  4027d2:	push   rbp
  4027d3:	mov    rbp,rsp
  4027d6:	sub    rsp,0x40
  4027da:	mov    QWORD PTR [rbp+0x10],rcx
  4027de:	mov    DWORD PTR [rbp+0x18],edx
  4027e1:	mov    DWORD PTR [rbp-0x4],0x1
  4027e8:	lea    rdx,[rbp-0x1c]
  4027ec:	lea    rax,[rbp-0x18]
  4027f0:	mov    r8,rdx
  4027f3:	mov    rdx,rax
  4027f6:	mov    rcx,QWORD PTR [rbp+0x10]
  4027fa:	mov    rax,QWORD PTR [rip+0x7c6f]        # 0x40a470
  402801:	call   rax
  402803:	mov    DWORD PTR [rbp-0x8],0x0
  40280a:	jmp    0x40285d
  40280c:	mov    rdx,QWORD PTR [rbp-0x18]
  402810:	mov    eax,DWORD PTR [rbp-0x8]
  402813:	cdqe   
  402815:	add    rax,rdx
  402818:	movzx  eax,BYTE PTR [rax]
  40281b:	cmp    al,0x1f
  40281d:	jbe    0x402832
  40281f:	mov    rdx,QWORD PTR [rbp-0x18]
  402823:	mov    eax,DWORD PTR [rbp-0x8]
  402826:	cdqe   
  402828:	add    rax,rdx
  40282b:	movzx  eax,BYTE PTR [rax]
  40282e:	cmp    al,0x7e
  402830:	jbe    0x402859
  402832:	mov    eax,DWORD PTR [rbp-0x1c]
  402835:	sub    eax,0x1
  402838:	cmp    eax,DWORD PTR [rbp-0x8]
  40283b:	jg     0x402850
  40283d:	mov    rdx,QWORD PTR [rbp-0x18]
  402841:	mov    eax,DWORD PTR [rbp-0x8]
  402844:	cdqe   
  402846:	add    rax,rdx
  402849:	movzx  eax,BYTE PTR [rax]
  40284c:	test   al,al
  40284e:	je     0x402859
  402850:	mov    DWORD PTR [rbp-0x4],0x0
  402857:	jmp    0x402865
  402859:	add    DWORD PTR [rbp-0x8],0x1
  40285d:	mov    eax,DWORD PTR [rbp-0x1c]
  402860:	cmp    DWORD PTR [rbp-0x8],eax
  402863:	jl     0x40280c
  402865:	cmp    DWORD PTR [rbp-0x4],0x0
  402869:	je     0x4028a2
  40286b:	mov    eax,DWORD PTR [rbp-0x1c]
  40286e:	test   eax,eax
  402870:	jle    0x4028a2
  402872:	mov    rax,QWORD PTR [rbp-0x18]
  402876:	mov    edx,DWORD PTR [rbp-0x1c]
  402879:	movsxd rdx,edx
  40287c:	sub    rdx,0x1
  402880:	add    rax,rdx
  402883:	movzx  eax,BYTE PTR [rax]
  402886:	test   al,al
  402888:	jne    0x4028a2
  40288a:	mov    rax,QWORD PTR [rbp-0x18]
  40288e:	mov    rdx,rax
  402891:	lea    rcx,[rip+0x3c42]        # 0x4064da
  402898:	call   0x4048c8
  40289d:	jmp    0x40293b
  4028a2:	cmp    DWORD PTR [rbp-0x4],0x0
  4028a6:	je     0x402921
  4028a8:	mov    eax,DWORD PTR [rbp-0x1c]
  4028ab:	add    eax,0x1
  4028ae:	cdqe   
  4028b0:	mov    rcx,rax
  4028b3:	mov    rax,QWORD PTR [rip+0x7b3e]        # 0x40a3f8
  4028ba:	call   rax
  4028bc:	mov    QWORD PTR [rbp-0x10],rax
  4028c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4028c5:	jne    0x4028d3
  4028c7:	lea    rcx,[rip+0x3c26]        # 0x4064f4
  4028ce:	call   0x403110
  4028d3:	mov    eax,DWORD PTR [rbp-0x1c]
  4028d6:	movsxd rcx,eax
  4028d9:	mov    rdx,QWORD PTR [rbp-0x18]
  4028dd:	mov    rax,QWORD PTR [rbp-0x10]
  4028e1:	mov    r8,rcx
  4028e4:	mov    rcx,rax
  4028e7:	call   0x4048d8
  4028ec:	mov    eax,DWORD PTR [rbp-0x1c]
  4028ef:	movsxd rdx,eax
  4028f2:	mov    rax,QWORD PTR [rbp-0x10]
  4028f6:	add    rax,rdx
  4028f9:	mov    BYTE PTR [rax],0x0
  4028fc:	mov    rax,QWORD PTR [rbp-0x10]
  402900:	mov    rdx,rax
  402903:	lea    rcx,[rip+0x3bfd]        # 0x406507
  40290a:	call   0x4048c8
  40290f:	mov    rax,QWORD PTR [rbp-0x10]
  402913:	mov    rcx,rax
  402916:	mov    rax,QWORD PTR [rip+0x7ad3]        # 0x40a3f0
  40291d:	call   rax
  40291f:	jmp    0x40293b
  402921:	mov    eax,DWORD PTR [rbp-0x1c]
  402924:	mov    ecx,eax
  402926:	mov    rax,QWORD PTR [rbp-0x18]
  40292a:	mov    edx,DWORD PTR [rbp+0x18]
  40292d:	mov    r8d,edx
  402930:	mov    edx,ecx
  402932:	mov    rcx,rax
  402935:	call   0x4026de
  40293a:	nop
  40293b:	add    rsp,0x40
  40293f:	pop    rbp
  402940:	ret    
  402941:	push   rbp
  402942:	mov    rbp,rsp
  402945:	sub    rsp,0xd0
  40294c:	mov    QWORD PTR [rbp+0x10],rcx
  402950:	mov    DWORD PTR [rbp+0x18],edx
  402953:	mov    DWORD PTR [rbp+0x20],r8d
  402957:	mov    rcx,QWORD PTR [rbp+0x10]
  40295b:	mov    rax,QWORD PTR [rip+0x7afe]        # 0x40a460
  402962:	call   rax
  402964:	mov    DWORD PTR [rbp-0x8],eax
  402967:	cmp    DWORD PTR [rbp-0x8],0x0
  40296b:	jne    0x402972
  40296d:	jmp    0x402ebb
  402972:	mov    eax,DWORD PTR [rbp+0x20]
  402975:	mov    ecx,eax
  402977:	call   0x4026b2
  40297c:	mov    eax,DWORD PTR [rbp-0x8]
  40297f:	sub    eax,0x61
  402982:	cmp    eax,0x18
  402985:	ja     0x402e94
  40298b:	mov    eax,eax
  40298d:	lea    rdx,[rax*4+0x0]
  402995:	lea    rax,[rip+0x3c80]        # 0x40661c
  40299c:	mov    eax,DWORD PTR [rdx+rax*1]
  40299f:	movsxd rdx,eax
  4029a2:	lea    rax,[rip+0x3c73]        # 0x40661c
  4029a9:	add    rax,rdx
  4029ac:	jmp    rax
  4029ae:	lea    rax,[rbp-0x18]
  4029b2:	mov    rdx,rax
  4029b5:	mov    rcx,QWORD PTR [rbp+0x10]
  4029b9:	mov    rax,QWORD PTR [rip+0x7aa8]        # 0x40a468
  4029c0:	call   rax
  4029c2:	cmp    DWORD PTR [rbp+0x18],0x0
  4029c6:	jne    0x4029d4
  4029c8:	lea    rcx,[rip+0x3b4d]        # 0x40651c
  4029cf:	call   0x4048c8
  4029d4:	mov    rax,QWORD PTR [rbp-0x18]
  4029d8:	mov    rdx,rax
  4029db:	lea    rcx,[rip+0x3b43]        # 0x406525
  4029e2:	call   0x4048c8
  4029e7:	cmp    DWORD PTR [rbp+0x18],0x0
  4029eb:	jne    0x4029f9
  4029ed:	lea    rcx,[rip+0x3b34]        # 0x406528
  4029f4:	call   0x4048b8
  4029f9:	nop
  4029fa:	jmp    0x402ea6
  4029ff:	lea    rax,[rbp-0x20]
  402a03:	mov    rdx,rax
  402a06:	mov    rcx,QWORD PTR [rbp+0x10]
  402a0a:	mov    rax,QWORD PTR [rip+0x7a57]        # 0x40a468
  402a11:	call   rax
  402a13:	cmp    DWORD PTR [rbp+0x18],0x0
  402a17:	jne    0x402a25
  402a19:	lea    rcx,[rip+0x3b0a]        # 0x40652a
  402a20:	call   0x4048c8
  402a25:	mov    rax,QWORD PTR [rbp-0x20]
  402a29:	mov    rdx,rax
  402a2c:	lea    rcx,[rip+0x3af2]        # 0x406525
  402a33:	call   0x4048c8
  402a38:	cmp    DWORD PTR [rbp+0x18],0x0
  402a3c:	jne    0x402a4a
  402a3e:	lea    rcx,[rip+0x3ae3]        # 0x406528
  402a45:	call   0x4048b8
  402a4a:	nop
  402a4b:	jmp    0x402ea6
  402a50:	lea    rax,[rbp-0x28]
  402a54:	mov    rdx,rax
  402a57:	mov    rcx,QWORD PTR [rbp+0x10]
  402a5b:	mov    rax,QWORD PTR [rip+0x7a06]        # 0x40a468
  402a62:	call   rax
  402a64:	cmp    DWORD PTR [rbp+0x18],0x0
  402a68:	jne    0x402a76
  402a6a:	lea    rcx,[rip+0x3ac5]        # 0x406536
  402a71:	call   0x4048c8
  402a76:	mov    rax,QWORD PTR [rbp-0x28]
  402a7a:	mov    rdx,rax
  402a7d:	lea    rcx,[rip+0x3aa1]        # 0x406525
  402a84:	call   0x4048c8
  402a89:	cmp    DWORD PTR [rbp+0x18],0x0
  402a8d:	jne    0x402a9b
  402a8f:	lea    rcx,[rip+0x3a92]        # 0x406528
  402a96:	call   0x4048b8
  402a9b:	nop
  402a9c:	jmp    0x402ea6
  402aa1:	lea    rax,[rbp-0x2a]
  402aa5:	mov    rdx,rax
  402aa8:	mov    rcx,QWORD PTR [rbp+0x10]
  402aac:	mov    rax,QWORD PTR [rip+0x79b5]        # 0x40a468
  402ab3:	call   rax
  402ab5:	movzx  eax,WORD PTR [rbp-0x2a]
  402ab9:	cwde   
  402aba:	mov    edx,eax
  402abc:	lea    rcx,[rip+0x3a81]        # 0x406544
  402ac3:	call   0x4048c8
  402ac8:	nop
  402ac9:	jmp    0x402ea6
  402ace:	lea    rax,[rbp-0x2c]
  402ad2:	mov    rdx,rax
  402ad5:	mov    rcx,QWORD PTR [rbp+0x10]
  402ad9:	mov    rax,QWORD PTR [rip+0x7988]        # 0x40a468
  402ae0:	call   rax
  402ae2:	movzx  eax,WORD PTR [rbp-0x2c]
  402ae6:	movzx  eax,ax
  402ae9:	mov    edx,eax
  402aeb:	lea    rcx,[rip+0x3a5c]        # 0x40654e
  402af2:	call   0x4048c8
  402af7:	nop
  402af8:	jmp    0x402ea6
  402afd:	lea    rax,[rbp-0x30]
  402b01:	mov    rdx,rax
  402b04:	mov    rcx,QWORD PTR [rbp+0x10]
  402b08:	mov    rax,QWORD PTR [rip+0x7959]        # 0x40a468
  402b0f:	call   rax
  402b11:	mov    eax,DWORD PTR [rbp-0x30]
  402b14:	mov    edx,eax
  402b16:	lea    rcx,[rip+0x3a3c]        # 0x406559
  402b1d:	call   0x4048c8
  402b22:	nop
  402b23:	jmp    0x402ea6
  402b28:	lea    rax,[rbp-0x34]
  402b2c:	mov    rdx,rax
  402b2f:	mov    rcx,QWORD PTR [rbp+0x10]
  402b33:	mov    rax,QWORD PTR [rip+0x792e]        # 0x40a468
  402b3a:	call   rax
  402b3c:	mov    eax,DWORD PTR [rbp-0x34]
  402b3f:	mov    edx,eax
  402b41:	lea    rcx,[rip+0x3a1b]        # 0x406563
  402b48:	call   0x4048c8
  402b4d:	nop
  402b4e:	jmp    0x402ea6
  402b53:	lea    rax,[rbp-0x40]
  402b57:	mov    rdx,rax
  402b5a:	mov    rcx,QWORD PTR [rbp+0x10]
  402b5e:	mov    rax,QWORD PTR [rip+0x7903]        # 0x40a468
  402b65:	call   rax
  402b67:	lea    rcx,[rip+0x3a00]        # 0x40656e
  402b6e:	call   0x4048b8
  402b73:	nop
  402b74:	jmp    0x402ea6
  402b79:	lea    rax,[rbp-0x48]
  402b7d:	mov    rdx,rax
  402b80:	mov    rcx,QWORD PTR [rbp+0x10]
  402b84:	mov    rax,QWORD PTR [rip+0x78dd]        # 0x40a468
  402b8b:	call   rax
  402b8d:	lea    rcx,[rip+0x39ea]        # 0x40657e
  402b94:	call   0x4048b8
  402b99:	nop
  402b9a:	jmp    0x402ea6
  402b9f:	lea    rax,[rbp-0x50]
  402ba3:	mov    rdx,rax
  402ba6:	mov    rcx,QWORD PTR [rbp+0x10]
  402baa:	mov    rax,QWORD PTR [rip+0x78b7]        # 0x40a468
  402bb1:	call   rax
  402bb3:	mov    rax,QWORD PTR [rbp-0x50]
  402bb7:	mov    rdx,rax
  402bba:	mov    QWORD PTR [rbp-0xa8],rdx
  402bc1:	movsd  xmm0,QWORD PTR [rbp-0xa8]
  402bc9:	movapd xmm1,xmm0
  402bcd:	mov    rdx,rax
  402bd0:	lea    rcx,[rip+0x39b8]        # 0x40658f
  402bd7:	call   0x4048c8
  402bdc:	nop
  402bdd:	jmp    0x402ea6
  402be2:	lea    rax,[rbp-0x51]
  402be6:	mov    rdx,rax
  402be9:	mov    rcx,QWORD PTR [rbp+0x10]
  402bed:	mov    rax,QWORD PTR [rip+0x7874]        # 0x40a468
  402bf4:	call   rax
  402bf6:	movzx  eax,BYTE PTR [rbp-0x51]
  402bfa:	movzx  eax,al
  402bfd:	mov    edx,eax
  402bff:	lea    rcx,[rip+0x3994]        # 0x40659a
  402c06:	call   0x4048c8
  402c0b:	nop
  402c0c:	jmp    0x402ea6
  402c11:	lea    rax,[rbp-0x58]
  402c15:	mov    rdx,rax
  402c18:	mov    rcx,QWORD PTR [rbp+0x10]
  402c1c:	mov    rax,QWORD PTR [rip+0x7845]        # 0x40a468
  402c23:	call   rax
  402c25:	mov    eax,DWORD PTR [rbp-0x58]
  402c28:	test   eax,eax
  402c2a:	je     0x402c35
  402c2c:	lea    rax,[rip+0x3970]        # 0x4065a3
  402c33:	jmp    0x402c3c
  402c35:	lea    rax,[rip+0x396c]        # 0x4065a8
  402c3c:	mov    rdx,rax
  402c3f:	lea    rcx,[rip+0x3968]        # 0x4065ae
  402c46:	call   0x4048c8
  402c4b:	nop
  402c4c:	jmp    0x402ea6
  402c51:	lea    rax,[rbp-0xa0]
  402c58:	mov    rdx,rax
  402c5b:	mov    rcx,QWORD PTR [rbp+0x10]
  402c5f:	mov    rax,QWORD PTR [rip+0x7832]        # 0x40a498
  402c66:	call   rax
  402c68:	lea    rcx,[rip+0x394b]        # 0x4065ba
  402c6f:	call   0x4048c8
  402c74:	mov    eax,DWORD PTR [rbp+0x20]
  402c77:	lea    ecx,[rax+0x1]
  402c7a:	mov    edx,DWORD PTR [rbp+0x18]
  402c7d:	lea    rax,[rbp-0xa0]
  402c84:	mov    r8d,ecx
  402c87:	mov    rcx,rax
  402c8a:	call   0x402941
  402c8f:	nop
  402c90:	jmp    0x402ea6
  402c95:	lea    rax,[rbp-0xa0]
  402c9c:	mov    rdx,rax
  402c9f:	mov    rcx,QWORD PTR [rbp+0x10]
  402ca3:	mov    rax,QWORD PTR [rip+0x77ee]        # 0x40a498
  402caa:	call   rax
  402cac:	lea    rax,[rbp-0xa0]
  402cb3:	mov    rcx,rax
  402cb6:	mov    rax,QWORD PTR [rip+0x77a3]        # 0x40a460
  402cbd:	call   rax
  402cbf:	mov    DWORD PTR [rbp-0x4],eax
  402cc2:	cmp    DWORD PTR [rbp-0x4],0x79
  402cc6:	jne    0x402cdf
  402cc8:	mov    edx,DWORD PTR [rbp+0x20]
  402ccb:	lea    rax,[rbp-0xa0]
  402cd2:	mov    rcx,rax
  402cd5:	call   0x4027d2
  402cda:	jmp    0x402ea6
  402cdf:	lea    rcx,[rip+0x38dd]        # 0x4065c3
  402ce6:	call   0x4048b8
  402ceb:	jmp    0x402d41
  402ced:	mov    eax,DWORD PTR [rbp+0x20]
  402cf0:	lea    ecx,[rax+0x1]
  402cf3:	mov    edx,DWORD PTR [rbp+0x18]
  402cf6:	lea    rax,[rbp-0xa0]
  402cfd:	mov    r8d,ecx
  402d00:	mov    rcx,rax
  402d03:	call   0x402941
  402d08:	lea    rax,[rbp-0xa0]
  402d0f:	mov    rcx,rax
  402d12:	mov    rax,QWORD PTR [rip+0x776f]        # 0x40a488
  402d19:	call   rax
  402d1b:	lea    rax,[rbp-0xa0]
  402d22:	mov    rcx,rax
  402d25:	mov    rax,QWORD PTR [rip+0x7734]        # 0x40a460
  402d2c:	call   rax
  402d2e:	mov    DWORD PTR [rbp-0x4],eax
  402d31:	cmp    DWORD PTR [rbp-0x4],0x0
  402d35:	je     0x402d41
  402d37:	mov    ecx,0x2c
  402d3c:	call   0x4048c0
  402d41:	cmp    DWORD PTR [rbp-0x4],0x0
  402d45:	jne    0x402ced
  402d47:	mov    eax,DWORD PTR [rbp+0x20]
  402d4a:	mov    ecx,eax
  402d4c:	call   0x4026b2
  402d51:	lea    rcx,[rip+0x3780]        # 0x4064d8
  402d58:	call   0x4048b8
  402d5d:	nop
  402d5e:	jmp    0x402ea6
  402d63:	lea    rax,[rbp-0xa0]
  402d6a:	mov    rdx,rax
  402d6d:	mov    rcx,QWORD PTR [rbp+0x10]
  402d71:	mov    rax,QWORD PTR [rip+0x7720]        # 0x40a498
  402d78:	call   rax
  402d7a:	lea    rcx,[rip+0x384a]        # 0x4065cb
  402d81:	call   0x4048b8
  402d86:	mov    eax,DWORD PTR [rbp+0x20]
  402d89:	lea    ecx,[rax+0x1]
  402d8c:	mov    edx,DWORD PTR [rbp+0x18]
  402d8f:	lea    rax,[rbp-0xa0]
  402d96:	mov    r8d,ecx
  402d99:	mov    rcx,rax
  402d9c:	call   0x402941
  402da1:	lea    rax,[rbp-0xa0]
  402da8:	mov    rcx,rax
  402dab:	mov    rax,QWORD PTR [rip+0x76d6]        # 0x40a488
  402db2:	call   rax
  402db4:	mov    eax,DWORD PTR [rbp+0x20]
  402db7:	lea    ecx,[rax+0x1]
  402dba:	mov    edx,DWORD PTR [rbp+0x18]
  402dbd:	lea    rax,[rbp-0xa0]
  402dc4:	mov    r8d,ecx
  402dc7:	mov    rcx,rax
  402dca:	call   0x402941
  402dcf:	mov    eax,DWORD PTR [rbp+0x20]
  402dd2:	mov    ecx,eax
  402dd4:	call   0x4026b2
  402dd9:	lea    rcx,[rip+0x37f7]        # 0x4065d7
  402de0:	call   0x4048b8
  402de5:	nop
  402de6:	jmp    0x402ea6
  402deb:	lea    rax,[rbp-0xa0]
  402df2:	mov    rdx,rax
  402df5:	mov    rcx,QWORD PTR [rbp+0x10]
  402df9:	mov    rax,QWORD PTR [rip+0x7698]        # 0x40a498
  402e00:	call   rax
  402e02:	lea    rcx,[rip+0x37d0]        # 0x4065d9
  402e09:	call   0x4048b8
  402e0e:	jmp    0x402e5f
  402e10:	mov    eax,DWORD PTR [rbp+0x20]
  402e13:	lea    ecx,[rax+0x1]
  402e16:	mov    edx,DWORD PTR [rbp+0x18]
  402e19:	lea    rax,[rbp-0xa0]
  402e20:	mov    r8d,ecx
  402e23:	mov    rcx,rax
  402e26:	call   0x402941
  402e2b:	lea    rax,[rbp-0xa0]
  402e32:	mov    rcx,rax
  402e35:	mov    rax,QWORD PTR [rip+0x764c]        # 0x40a488
  402e3c:	call   rax
  402e3e:	lea    rax,[rbp-0xa0]
  402e45:	mov    rcx,rax
  402e48:	mov    rax,QWORD PTR [rip+0x7611]        # 0x40a460
  402e4f:	call   rax
  402e51:	test   eax,eax
  402e53:	je     0x402e5f
  402e55:	mov    ecx,0x2c
  402e5a:	call   0x4048c0
  402e5f:	lea    rax,[rbp-0xa0]
  402e66:	mov    rcx,rax
  402e69:	mov    rax,QWORD PTR [rip+0x75f0]        # 0x40a460
  402e70:	call   rax
  402e72:	mov    DWORD PTR [rbp-0xc],eax
  402e75:	cmp    DWORD PTR [rbp-0xc],0x0
  402e79:	jne    0x402e10
  402e7b:	mov    eax,DWORD PTR [rbp+0x20]
  402e7e:	mov    ecx,eax
  402e80:	call   0x4026b2
  402e85:	lea    rcx,[rip+0x3756]        # 0x4065e2
  402e8c:	call   0x4048b8
  402e91:	nop
  402e92:	jmp    0x402ea6
  402e94:	mov    eax,DWORD PTR [rbp-0x8]
  402e97:	mov    edx,eax
  402e99:	lea    rcx,[rip+0x3748]        # 0x4065e8
  402ea0:	call   0x4048c8
  402ea5:	nop
  402ea6:	mov    rcx,QWORD PTR [rbp+0x10]
  402eaa:	mov    rax,QWORD PTR [rip+0x75d7]        # 0x40a488
  402eb1:	call   rax
  402eb3:	test   eax,eax
  402eb5:	jne    0x402957
  402ebb:	add    rsp,0xd0
  402ec2:	pop    rbp
  402ec3:	ret    
  402ec4:	push   rbp
  402ec5:	push   rdi
  402ec6:	push   rsi
  402ec7:	push   rbx
  402ec8:	sub    rsp,0x98
  402ecf:	lea    rbp,[rsp+0x80]
  402ed7:	mov    QWORD PTR [rbp+0x40],rcx
  402edb:	mov    DWORD PTR [rbp+0x48],edx
  402ede:	mov    DWORD PTR [rbp+0x50],r8d
  402ee2:	mov    DWORD PTR [rbp+0x58],r9d
  402ee6:	mov    rcx,QWORD PTR [rbp+0x40]
  402eea:	mov    rax,QWORD PTR [rip+0x754f]        # 0x40a440
  402ef1:	call   rax
  402ef3:	mov    DWORD PTR [rbp+0xc],eax
  402ef6:	mov    rcx,QWORD PTR [rbp+0x40]
  402efa:	mov    rax,QWORD PTR [rip+0x752f]        # 0x40a430
  402f01:	call   rax
  402f03:	mov    QWORD PTR [rbp+0x0],rax
  402f07:	mov    rcx,QWORD PTR [rbp+0x40]
  402f0b:	mov    rax,QWORD PTR [rip+0x74ee]        # 0x40a400
  402f12:	call   rax
  402f14:	mov    QWORD PTR [rbp-0x8],rax
  402f18:	cmp    DWORD PTR [rbp+0x48],0x0
  402f1c:	jne    0x4030bc
  402f22:	cmp    DWORD PTR [rbp+0x50],0x0
  402f26:	jne    0x402f2e
  402f28:	cmp    DWORD PTR [rbp+0x58],0x0
  402f2c:	je     0x402f8a
  402f2e:	cmp    QWORD PTR [rbp-0x8],0x0
  402f33:	je     0x402f3b
  402f35:	mov    rsi,QWORD PTR [rbp-0x8]
  402f39:	jmp    0x402f42
  402f3b:	lea    rsi,[rip+0x373e]        # 0x406680
  402f42:	cmp    QWORD PTR [rbp+0x0],0x0
  402f47:	je     0x402f4f
  402f49:	mov    rbx,QWORD PTR [rbp+0x0]
  402f4d:	jmp    0x402f56
  402f4f:	lea    rbx,[rip+0x373d]        # 0x406693
  402f56:	mov    eax,DWORD PTR [rbp+0xc]
  402f59:	mov    ecx,eax
  402f5b:	call   0x402660
  402f60:	mov    rcx,rax
  402f63:	mov    edx,DWORD PTR [rbp+0x58]
  402f66:	mov    eax,DWORD PTR [rbp+0x50]
  402f69:	mov    QWORD PTR [rsp+0x28],rsi
  402f6e:	mov    QWORD PTR [rsp+0x20],rbx
  402f73:	mov    r9d,edx
  402f76:	mov    r8d,eax
  402f79:	mov    rdx,rcx
  402f7c:	lea    rcx,[rip+0x3725]        # 0x4066a8
  402f83:	call   0x4048c8
  402f88:	jmp    0x402fd1
  402f8a:	cmp    QWORD PTR [rbp-0x8],0x0
  402f8f:	je     0x402f97
  402f91:	mov    rsi,QWORD PTR [rbp-0x8]
  402f95:	jmp    0x402f9e
  402f97:	lea    rsi,[rip+0x36e2]        # 0x406680
  402f9e:	cmp    QWORD PTR [rbp+0x0],0x0
  402fa3:	je     0x402fab
  402fa5:	mov    rbx,QWORD PTR [rbp+0x0]
  402fa9:	jmp    0x402fb2
  402fab:	lea    rbx,[rip+0x36e1]        # 0x406693
  402fb2:	mov    eax,DWORD PTR [rbp+0xc]
  402fb5:	mov    ecx,eax
  402fb7:	call   0x402660
  402fbc:	mov    r9,rsi
  402fbf:	mov    r8,rbx
  402fc2:	mov    rdx,rax
  402fc5:	lea    rcx,[rip+0x370c]        # 0x4066d8
  402fcc:	call   0x4048c8
  402fd1:	mov    eax,DWORD PTR [rbp+0xc]
  402fd4:	cmp    eax,0x2
  402fd7:	je     0x403052
  402fd9:	cmp    eax,0x2
  402fdc:	jg     0x402fe8
  402fde:	cmp    eax,0x1
  402fe1:	je     0x402ffa
  402fe3:	jmp    0x4030b1
  402fe8:	cmp    eax,0x3
  402feb:	je     0x403081
  402ff1:	cmp    eax,0x4
  402ff4:	jne    0x4030b1
  402ffa:	mov    rcx,QWORD PTR [rbp+0x40]
  402ffe:	mov    rax,QWORD PTR [rip+0x7413]        # 0x40a418
  403005:	call   rax
  403007:	mov    rbx,rax
  40300a:	mov    rcx,QWORD PTR [rbp+0x40]
  40300e:	mov    rax,QWORD PTR [rip+0x73fb]        # 0x40a410
  403015:	call   rax
  403017:	mov    rdi,rax
  40301a:	mov    rcx,QWORD PTR [rbp+0x40]
  40301e:	mov    rax,QWORD PTR [rip+0x73fb]        # 0x40a420
  403025:	call   rax
  403027:	mov    rsi,rax
  40302a:	mov    rcx,QWORD PTR [rbp+0x40]
  40302e:	mov    rax,QWORD PTR [rip+0x7403]        # 0x40a438
  403035:	call   rax
  403037:	mov    QWORD PTR [rsp+0x20],rbx
  40303c:	mov    r9,rdi
  40303f:	mov    r8,rsi
  403042:	mov    edx,eax
  403044:	lea    rcx,[rip+0x36ad]        # 0x4066f8
  40304b:	call   0x4048c8
  403050:	jmp    0x4030bc
  403052:	mov    rcx,QWORD PTR [rbp+0x40]
  403056:	mov    rax,QWORD PTR [rip+0x73cb]        # 0x40a428
  40305d:	call   rax
  40305f:	mov    ebx,eax
  403061:	mov    rcx,QWORD PTR [rbp+0x40]
  403065:	mov    rax,QWORD PTR [rip+0x73cc]        # 0x40a438
  40306c:	call   rax
  40306e:	mov    r8d,ebx
  403071:	mov    edx,eax
  403073:	lea    rcx,[rip+0x36ab]        # 0x406725
  40307a:	call   0x4048c8
  40307f:	jmp    0x4030bc
  403081:	mov    rcx,QWORD PTR [rbp+0x40]
  403085:	mov    rax,QWORD PTR [rip+0x739c]        # 0x40a428
  40308c:	call   rax
  40308e:	mov    ebx,eax
  403090:	mov    rcx,QWORD PTR [rbp+0x40]
  403094:	mov    rax,QWORD PTR [rip+0x736d]        # 0x40a408
  40309b:	call   rax
  40309d:	mov    r8d,ebx
  4030a0:	mov    rdx,rax
  4030a3:	lea    rcx,[rip+0x369e]        # 0x406748
  4030aa:	call   0x4048c8
  4030af:	jmp    0x4030bc
  4030b1:	mov    ecx,0xa
  4030b6:	call   0x4048c0
  4030bb:	nop
  4030bc:	lea    rax,[rbp-0x50]
  4030c0:	mov    rdx,rax
  4030c3:	mov    rcx,QWORD PTR [rbp+0x40]
  4030c7:	mov    rax,QWORD PTR [rip+0x73aa]        # 0x40a478
  4030ce:	call   rax
  4030d0:	mov    edx,DWORD PTR [rbp+0x48]
  4030d3:	lea    rax,[rbp-0x50]
  4030d7:	mov    r8d,0x1
  4030dd:	mov    rcx,rax
  4030e0:	call   0x402941
  4030e5:	mov    rax,QWORD PTR [rip+0x74b4]        # 0x40a5a0
  4030ec:	call   rax
  4030ee:	add    rax,0x30
  4030f2:	mov    rcx,rax
  4030f5:	call   0x404900
  4030fa:	nop
  4030fb:	add    rsp,0x98
  403102:	pop    rbx
  403103:	pop    rsi
  403104:	pop    rdi
  403105:	pop    rbp
  403106:	ret    
  403107:	nop
  403108:	nop
  403109:	nop
  40310a:	nop
  40310b:	nop
  40310c:	nop
  40310d:	nop
  40310e:	nop
  40310f:	nop
  403110:	push   rbp
  403111:	mov    rbp,rsp
  403114:	sub    rsp,0x20
  403118:	mov    QWORD PTR [rbp+0x10],rcx
  40311c:	mov    rax,QWORD PTR [rip+0x747d]        # 0x40a5a0
  403123:	call   rax
  403125:	add    rax,0x60
  403129:	mov    r8,QWORD PTR [rbp+0x10]
  40312d:	lea    rdx,[rip+0x363c]        # 0x406770
  403134:	mov    rcx,rax
  403137:	call   0x4048f8
  40313c:	mov    ecx,0x1
  403141:	call   0x404908
  403146:	nop
  403147:	push   rbp
  403148:	mov    rbp,rsp
  40314b:	sub    rsp,0x40
  40314f:	mov    DWORD PTR [rbp+0x10],ecx
  403152:	mov    QWORD PTR [rbp+0x18],rdx
  403156:	mov    QWORD PTR [rbp+0x20],r8
  40315a:	mov    rax,QWORD PTR [rbp+0x18]
  40315e:	mov    QWORD PTR [rbp-0x8],rax
  403162:	mov    QWORD PTR [rbp-0x10],0x0
  40316a:	jmp    0x4031c9
  40316c:	mov    rax,QWORD PTR [rbp+0x20]
  403170:	mov    edx,eax
  403172:	mov    rax,QWORD PTR [rbp-0x10]
  403176:	sub    edx,eax
  403178:	mov    rax,QWORD PTR [rbp-0x8]
  40317c:	mov    r8d,edx
  40317f:	mov    rdx,rax
  403182:	mov    ecx,DWORD PTR [rbp+0x10]
  403185:	mov    rax,QWORD PTR [rip+0x7484]        # 0x40a610
  40318c:	call   rax
  40318e:	mov    DWORD PTR [rbp-0x14],eax
  403191:	cmp    DWORD PTR [rbp-0x14],0x0
  403195:	jns    0x4031b0
  403197:	mov    rax,QWORD PTR [rip+0x743a]        # 0x40a5d8
  40319e:	call   rax
  4031a0:	mov    eax,DWORD PTR [rax]
  4031a2:	cmp    eax,0x4
  4031a5:	jne    0x4031a9
  4031a7:	jmp    0x4031c9
  4031a9:	mov    eax,0x0
  4031ae:	jmp    0x4031d8
  4031b0:	mov    eax,DWORD PTR [rbp-0x14]
  4031b3:	cdqe   
  4031b5:	mov    QWORD PTR [rbp-0x20],rax
  4031b9:	mov    rax,QWORD PTR [rbp-0x20]
  4031bd:	add    QWORD PTR [rbp-0x8],rax
  4031c1:	mov    rax,QWORD PTR [rbp-0x20]
  4031c5:	add    QWORD PTR [rbp-0x10],rax
  4031c9:	mov    rax,QWORD PTR [rbp+0x20]
  4031cd:	cmp    rax,QWORD PTR [rbp-0x10]
  4031d1:	ja     0x40316c
  4031d3:	mov    eax,0x1
  4031d8:	add    rsp,0x40
  4031dc:	pop    rbp
  4031dd:	ret    
  4031de:	nop
  4031df:	nop
  4031e0:	jmp    QWORD PTR [rip+0x72ca]        # 0x40a4b0
  4031e6:	nop
  4031e7:	nop
  4031e8:	jmp    QWORD PTR [rip+0x72ba]        # 0x40a4a8
  4031ee:	nop
  4031ef:	nop
  4031f0:	jmp    QWORD PTR [rip+0x72aa]        # 0x40a4a0
  4031f6:	nop
  4031f7:	nop
  4031f8:	jmp    QWORD PTR [rip+0x729a]        # 0x40a498
  4031fe:	nop
  4031ff:	nop
  403200:	jmp    QWORD PTR [rip+0x728a]        # 0x40a490
  403206:	nop
  403207:	nop
  403208:	jmp    QWORD PTR [rip+0x727a]        # 0x40a488
  40320e:	nop
  40320f:	nop
  403210:	jmp    QWORD PTR [rip+0x726a]        # 0x40a480
  403216:	nop
  403217:	nop
  403218:	jmp    QWORD PTR [rip+0x725a]        # 0x40a478
  40321e:	nop
  40321f:	nop
  403220:	jmp    QWORD PTR [rip+0x724a]        # 0x40a470
  403226:	nop
  403227:	nop
  403228:	jmp    QWORD PTR [rip+0x723a]        # 0x40a468
  40322e:	nop
  40322f:	nop
  403230:	jmp    QWORD PTR [rip+0x722a]        # 0x40a460
  403236:	nop
  403237:	nop
  403238:	jmp    QWORD PTR [rip+0x721a]        # 0x40a458
  40323e:	nop
  40323f:	nop
  403240:	jmp    QWORD PTR [rip+0x720a]        # 0x40a450
  403246:	nop
  403247:	nop
  403248:	jmp    QWORD PTR [rip+0x71fa]        # 0x40a448
  40324e:	nop
  40324f:	nop
  403250:	jmp    QWORD PTR [rip+0x71ea]        # 0x40a440
  403256:	nop
  403257:	nop
  403258:	jmp    QWORD PTR [rip+0x71da]        # 0x40a438
  40325e:	nop
  40325f:	nop
  403260:	jmp    QWORD PTR [rip+0x71ca]        # 0x40a430
  403266:	nop
  403267:	nop
  403268:	jmp    QWORD PTR [rip+0x71ba]        # 0x40a428
  40326e:	nop
  40326f:	nop
  403270:	jmp    QWORD PTR [rip+0x71aa]        # 0x40a420
  403276:	nop
  403277:	nop
  403278:	jmp    QWORD PTR [rip+0x719a]        # 0x40a418
  40327e:	nop
  40327f:	nop
  403280:	jmp    QWORD PTR [rip+0x718a]        # 0x40a410
  403286:	nop
  403287:	nop
  403288:	jmp    QWORD PTR [rip+0x717a]        # 0x40a408
  40328e:	nop
  40328f:	nop
  403290:	jmp    QWORD PTR [rip+0x716a]        # 0x40a400
  403296:	nop
  403297:	nop
  403298:	jmp    QWORD PTR [rip+0x715a]        # 0x40a3f8
  40329e:	nop
  40329f:	nop
  4032a0:	jmp    QWORD PTR [rip+0x714a]        # 0x40a3f0
  4032a6:	nop
  4032a7:	nop
  4032a8:	jmp    QWORD PTR [rip+0x713a]        # 0x40a3e8
  4032ae:	nop
  4032af:	nop
  4032b0:	jmp    QWORD PTR [rip+0x712a]        # 0x40a3e0
  4032b6:	nop
  4032b7:	nop
  4032b8:	jmp    QWORD PTR [rip+0x711a]        # 0x40a3d8
  4032be:	nop
  4032bf:	nop
  4032c0:	jmp    QWORD PTR [rip+0x710a]        # 0x40a3d0
  4032c6:	nop
  4032c7:	nop
  4032c8:	jmp    QWORD PTR [rip+0x70fa]        # 0x40a3c8
  4032ce:	nop
  4032cf:	nop
  4032d0:	jmp    QWORD PTR [rip+0x70ea]        # 0x40a3c0
  4032d6:	nop
  4032d7:	nop
  4032d8:	jmp    QWORD PTR [rip+0x70da]        # 0x40a3b8
  4032de:	nop
  4032df:	nop
  4032e0:	jmp    QWORD PTR [rip+0x70ca]        # 0x40a3b0
  4032e6:	nop
  4032e7:	nop
  4032e8:	jmp    QWORD PTR [rip+0x70ba]        # 0x40a3a8
  4032ee:	nop
  4032ef:	nop
  4032f0:	jmp    QWORD PTR [rip+0x70aa]        # 0x40a3a0
  4032f6:	nop
  4032f7:	nop
  4032f8:	jmp    QWORD PTR [rip+0x709a]        # 0x40a398
  4032fe:	nop
  4032ff:	nop
  403300:	jmp    QWORD PTR [rip+0x708a]        # 0x40a390
  403306:	nop
  403307:	nop
  403308:	jmp    QWORD PTR [rip+0x707a]        # 0x40a388
  40330e:	nop
  40330f:	nop
  403310:	push   rbx
  403311:	sub    rsp,0x30
  403315:	mov    rbx,rcx
  403318:	mov    rcx,QWORD PTR [rip+0x66f1]        # 0x409a10
  40331f:	call   0x4038c0
  403324:	cmp    rax,0xffffffffffffffff
  403328:	mov    QWORD PTR [rsp+0x20],rax
  40332d:	je     0x4033a5
  40332f:	mov    ecx,0x8
  403334:	call   0x404940
  403339:	mov    rcx,QWORD PTR [rip+0x66d0]        # 0x409a10
  403340:	call   0x4038c0
  403345:	mov    rcx,QWORD PTR [rip+0x66cc]        # 0x409a18
  40334c:	mov    QWORD PTR [rsp+0x20],rax
  403351:	call   0x4038c0
  403356:	lea    rdx,[rsp+0x20]
  40335b:	lea    r8,[rsp+0x28]
  403360:	mov    rcx,rbx
  403363:	mov    QWORD PTR [rsp+0x28],rax
  403368:	call   0x404990
  40336d:	mov    rcx,QWORD PTR [rsp+0x20]
  403372:	mov    rbx,rax
  403375:	call   0x4038d0
  40337a:	mov    rcx,QWORD PTR [rsp+0x28]
  40337f:	mov    QWORD PTR [rip+0x668a],rax        # 0x409a10
  403386:	call   0x4038d0
  40338b:	mov    ecx,0x8
  403390:	mov    QWORD PTR [rip+0x6681],rax        # 0x409a18
  403397:	call   0x404930
  40339c:	mov    rax,rbx
  40339f:	add    rsp,0x30
  4033a3:	pop    rbx
  4033a4:	ret    
  4033a5:	mov    rax,QWORD PTR [rip+0x36f4]        # 0x406aa0
  4033ac:	mov    rcx,rbx
  4033af:	call   QWORD PTR [rax]
  4033b1:	add    rsp,0x30
  4033b5:	pop    rbx
  4033b6:	ret    
  4033b7:	nop    WORD PTR [rax+rax*1+0x0]
  4033c0:	sub    rsp,0x28
  4033c4:	call   0x403310
  4033c9:	test   rax,rax
  4033cc:	sete   al
  4033cf:	movzx  eax,al
  4033d2:	neg    eax
  4033d4:	add    rsp,0x28
  4033d8:	ret    
  4033d9:	nop
  4033da:	nop
  4033db:	nop
  4033dc:	nop
  4033dd:	nop
  4033de:	nop
  4033df:	nop
  4033e0:	sub    rsp,0x28
  4033e4:	mov    rax,QWORD PTR [rip+0x1c35]        # 0x405020
  4033eb:	mov    rax,QWORD PTR [rax]
  4033ee:	test   rax,rax
  4033f1:	je     0x403410
  4033f3:	call   rax
  4033f5:	mov    rax,QWORD PTR [rip+0x1c24]        # 0x405020
  4033fc:	lea    rdx,[rax+0x8]
  403400:	mov    rax,QWORD PTR [rax+0x8]
  403404:	mov    QWORD PTR [rip+0x1c15],rdx        # 0x405020
  40340b:	test   rax,rax
  40340e:	jne    0x4033f3
  403410:	add    rsp,0x28
  403414:	ret    
  403415:	nop
  403416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403420:	push   rsi
  403421:	push   rbx
  403422:	sub    rsp,0x28
  403426:	mov    rsi,QWORD PTR [rip+0x35f3]        # 0x406a20
  40342d:	mov    rax,QWORD PTR [rsi]
  403430:	cmp    eax,0xffffffff
  403433:	mov    ebx,eax
  403435:	je     0x403460
  403437:	test   ebx,ebx
  403439:	je     0x40344a
  40343b:	nop    DWORD PTR [rax+rax*1+0x0]
  403440:	mov    eax,ebx
  403442:	call   QWORD PTR [rsi+rax*8]
  403445:	sub    ebx,0x1
  403448:	jne    0x403440
  40344a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4033e0
  403451:	add    rsp,0x28
  403455:	pop    rbx
  403456:	pop    rsi
  403457:	jmp    0x4033c0
  40345c:	nop    DWORD PTR [rax+0x0]
  403460:	xor    ebx,ebx
  403462:	jmp    0x403466
  403464:	mov    ebx,eax
  403466:	lea    edx,[rbx+0x1]
  403469:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40346e:	mov    rax,rdx
  403471:	jne    0x403464
  403473:	jmp    0x403437
  403475:	nop
  403476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403480:	mov    eax,DWORD PTR [rip+0x5baa]        # 0x409030
  403486:	test   eax,eax
  403488:	je     0x403490
  40348a:	repz ret 
  40348c:	nop    DWORD PTR [rax+0x0]
  403490:	mov    DWORD PTR [rip+0x5b96],0x1        # 0x409030
  40349a:	jmp    0x403420
  40349c:	nop
  40349d:	nop
  40349e:	nop
  40349f:	nop
  4034a0:	mov    rax,QWORD PTR [rip+0x7101]        # 0x40a5a8
  4034a7:	rex.W jmp rax
  4034aa:	nop
  4034ab:	nop
  4034ac:	nop
  4034ad:	nop
  4034ae:	nop
  4034af:	nop
  4034b0:	xor    eax,eax
  4034b2:	ret    
  4034b3:	nop
  4034b4:	nop
  4034b5:	nop
  4034b6:	nop
  4034b7:	nop
  4034b8:	nop
  4034b9:	nop
  4034ba:	nop
  4034bb:	nop
  4034bc:	nop
  4034bd:	nop
  4034be:	nop
  4034bf:	nop
  4034c0:	push   r12
  4034c2:	push   rbp
  4034c3:	push   rdi
  4034c4:	push   rsi
  4034c5:	push   rbx
  4034c6:	sub    rsp,0x40
  4034ca:	mov    rbx,QWORD PTR [rip+0x1baf]        # 0x405080
  4034d1:	movabs rax,0x2b992ddfa232
  4034db:	mov    QWORD PTR [rsp+0x20],0x0
  4034e4:	cmp    rbx,rax
  4034e7:	je     0x403500
  4034e9:	not    rbx
  4034ec:	mov    QWORD PTR [rip+0x1b9d],rbx        # 0x405090
  4034f3:	add    rsp,0x40
  4034f7:	pop    rbx
  4034f8:	pop    rsi
  4034f9:	pop    rdi
  4034fa:	pop    rbp
  4034fb:	pop    r12
  4034fd:	ret    
  4034fe:	xchg   ax,ax
  403500:	lea    rcx,[rsp+0x20]
  403505:	call   QWORD PTR [rip+0x6fed]        # 0x40a4f8
  40350b:	mov    r12,QWORD PTR [rsp+0x20]
  403510:	call   QWORD PTR [rip+0x6fc2]        # 0x40a4d8
  403516:	mov    ebp,eax
  403518:	call   QWORD PTR [rip+0x6fc2]        # 0x40a4e0
  40351e:	mov    edi,eax
  403520:	call   QWORD PTR [rip+0x6fda]        # 0x40a500
  403526:	lea    rcx,[rsp+0x30]
  40352b:	mov    esi,eax
  40352d:	call   QWORD PTR [rip+0x6fe5]        # 0x40a518
  403533:	xor    r12,QWORD PTR [rsp+0x30]
  403538:	mov    edx,edi
  40353a:	movabs rax,0xffffffffffff
  403544:	xor    rbp,r12
  403547:	mov    rdi,rbp
  40354a:	xor    rdi,rdx
  40354d:	mov    edx,esi
  40354f:	xor    rdi,rdx
  403552:	mov    rsi,rdi
  403555:	and    rsi,rax
  403558:	cmp    rsi,rbx
  40355b:	je     0x403580
  40355d:	mov    rax,rsi
  403560:	not    rax
  403563:	mov    QWORD PTR [rip+0x1b16],rsi        # 0x405080
  40356a:	mov    QWORD PTR [rip+0x1b1f],rax        # 0x405090
  403571:	add    rsp,0x40
  403575:	pop    rbx
  403576:	pop    rsi
  403577:	pop    rdi
  403578:	pop    rbp
  403579:	pop    r12
  40357b:	ret    
  40357c:	nop    DWORD PTR [rax+0x0]
  403580:	movabs rax,0xffffd466d2205dcc
  40358a:	movabs rsi,0x2b992ddfa233
  403594:	jmp    0x403563
  403596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035a0:	push   rbp
  4035a1:	push   rsi
  4035a2:	push   rbx
  4035a3:	mov    rbp,rsp
  4035a6:	sub    rsp,0x70
  4035aa:	mov    rsi,rcx
  4035ad:	lea    rcx,[rip+0x5acc]        # 0x409080
  4035b4:	call   QWORD PTR [rip+0x6f6e]        # 0x40a528
  4035ba:	mov    rbx,QWORD PTR [rip+0x5bb7]        # 0x409178
  4035c1:	xor    r8d,r8d
  4035c4:	lea    rdx,[rbp-0x28]
  4035c8:	mov    rcx,rbx
  4035cb:	call   QWORD PTR [rip+0x6f5f]        # 0x40a530
  4035d1:	test   rax,rax
  4035d4:	mov    r9,rax
  4035d7:	je     0x403680
  4035dd:	lea    rax,[rbp-0x20]
  4035e1:	mov    QWORD PTR [rsp+0x38],0x0
  4035ea:	mov    r8,rbx
  4035ed:	mov    rdx,QWORD PTR [rbp-0x28]
  4035f1:	xor    ecx,ecx
  4035f3:	mov    QWORD PTR [rsp+0x30],rax
  4035f8:	lea    rax,[rbp-0x18]
  4035fc:	mov    QWORD PTR [rsp+0x28],rax
  403601:	lea    rax,[rip+0x5a78]        # 0x409080
  403608:	mov    QWORD PTR [rsp+0x20],rax
  40360d:	call   QWORD PTR [rip+0x6f25]        # 0x40a538
  403613:	mov    rax,QWORD PTR [rip+0x5b5e]        # 0x409178
  40361a:	xor    ecx,ecx
  40361c:	mov    QWORD PTR [rip+0x5add],rsi        # 0x409100
  403623:	mov    DWORD PTR [rip+0x5f53],0xc0000409        # 0x409580
  40362d:	mov    DWORD PTR [rip+0x5f4d],0x1        # 0x409584
  403637:	mov    QWORD PTR [rip+0x5f52],rax        # 0x409590
  40363e:	mov    rax,QWORD PTR [rip+0x1a3b]        # 0x405080
  403645:	mov    QWORD PTR [rbp-0x10],rax
  403649:	mov    rax,QWORD PTR [rip+0x1a40]        # 0x405090
  403650:	mov    QWORD PTR [rbp-0x8],rax
  403654:	call   QWORD PTR [rip+0x6ee6]        # 0x40a540
  40365a:	lea    rcx,[rip+0x311f]        # 0x406780
  403661:	call   QWORD PTR [rip+0x6ef9]        # 0x40a560
  403667:	call   QWORD PTR [rip+0x6e63]        # 0x40a4d0
  40366d:	mov    edx,0xc0000409
  403672:	mov    rcx,rax
  403675:	call   QWORD PTR [rip+0x6ed5]        # 0x40a550
  40367b:	call   0x404918
  403680:	mov    rax,QWORD PTR [rbp+0x18]
  403684:	mov    QWORD PTR [rip+0x5aed],rax        # 0x409178
  40368b:	lea    rax,[rbp+0x8]
  40368f:	mov    QWORD PTR [rip+0x5a82],rax        # 0x409118
  403696:	jmp    0x403613
  40369b:	nop
  40369c:	nop
  40369d:	nop
  40369e:	nop
  40369f:	nop
  4036a0:	sub    rsp,0x28
  4036a4:	test   edx,edx
  4036a6:	je     0x4036c0
  4036a8:	cmp    edx,0x3
  4036ab:	je     0x4036c0
  4036ad:	mov    eax,0x1
  4036b2:	add    rsp,0x28
  4036b6:	ret    
  4036b7:	nop    WORD PTR [rax+rax*1+0x0]
  4036c0:	call   0x4043b0
  4036c5:	mov    eax,0x1
  4036ca:	add    rsp,0x28
  4036ce:	ret    
  4036cf:	nop
  4036d0:	push   rsi
  4036d1:	push   rbx
  4036d2:	sub    rsp,0x28
  4036d6:	mov    rax,QWORD PTR [rip+0x3323]        # 0x406a00
  4036dd:	cmp    DWORD PTR [rax],0x2
  4036e0:	je     0x4036e8
  4036e2:	mov    DWORD PTR [rax],0x2
  4036e8:	cmp    edx,0x2
  4036eb:	je     0x403700
  4036ed:	cmp    edx,0x1
  4036f0:	je     0x403732
  4036f2:	mov    eax,0x1
  4036f7:	add    rsp,0x28
  4036fb:	pop    rbx
  4036fc:	pop    rsi
  4036fd:	ret    
  4036fe:	xchg   ax,ax
  403700:	lea    rbx,[rip+0x8959]        # 0x40c060
  403707:	lea    rsi,[rip+0x8952]        # 0x40c060
  40370e:	cmp    rbx,rsi
  403711:	je     0x4036f2
  403713:	mov    rax,QWORD PTR [rbx]
  403716:	test   rax,rax
  403719:	je     0x40371d
  40371b:	call   rax
  40371d:	add    rbx,0x8
  403721:	cmp    rbx,rsi
  403724:	jne    0x403713
  403726:	mov    eax,0x1
  40372b:	add    rsp,0x28
  40372f:	pop    rbx
  403730:	pop    rsi
  403731:	ret    
  403732:	call   0x4043b0
  403737:	jmp    0x4036f2
  403739:	nop    DWORD PTR [rax+0x0]
  403740:	xor    eax,eax
  403742:	ret    
  403743:	nop
  403744:	nop
  403745:	nop
  403746:	nop
  403747:	nop
  403748:	nop
  403749:	nop
  40374a:	nop
  40374b:	nop
  40374c:	nop
  40374d:	nop
  40374e:	nop
  40374f:	nop
  403750:	sub    rsp,0x58
  403754:	mov    rax,QWORD PTR [rip+0x5f05]        # 0x409660
  40375b:	test   rax,rax
  40375e:	je     0x40378c
  403760:	movsd  xmm0,QWORD PTR [rsp+0x80]
  403769:	mov    DWORD PTR [rsp+0x20],ecx
  40376d:	lea    rcx,[rsp+0x20]
  403772:	mov    QWORD PTR [rsp+0x28],rdx
  403777:	movsd  QWORD PTR [rsp+0x30],xmm2
  40377d:	movsd  QWORD PTR [rsp+0x38],xmm3
  403783:	movsd  QWORD PTR [rsp+0x40],xmm0
  403789:	call   rax
  40378b:	nop
  40378c:	add    rsp,0x58
  403790:	ret    
  403791:	nop    DWORD PTR [rax+rax*1+0x0]
  403796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037a0:	mov    QWORD PTR [rip+0x5eb9],rcx        # 0x409660
  4037a7:	jmp    0x404968
  4037ac:	nop    DWORD PTR [rax+0x0]
  4037b0:	push   rsi
  4037b1:	push   rbx
  4037b2:	sub    rsp,0x78
  4037b6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4037bb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4037c0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4037c6:	cmp    DWORD PTR [rcx],0x6
  4037c9:	ja     0x4038a0
  4037cf:	mov    edx,DWORD PTR [rcx]
  4037d1:	lea    rax,[rip+0x30ec]        # 0x4068c4
  4037d8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4037dc:	add    rax,rdx
  4037df:	jmp    rax
  4037e1:	lea    rbx,[rip+0x2fb8]        # 0x4067a0
  4037e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037f0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4037f6:	mov    rsi,QWORD PTR [rcx+0x8]
  4037fa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4037ff:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403804:	call   0x404980
  403809:	movsd  QWORD PTR [rsp+0x30],xmm8
  403810:	lea    rcx,[rax+0x60]
  403814:	lea    rdx,[rip+0x307d]        # 0x406898
  40381b:	movsd  QWORD PTR [rsp+0x28],xmm7
  403821:	mov    r9,rsi
  403824:	mov    r8,rbx
  403827:	movsd  QWORD PTR [rsp+0x20],xmm6
  40382d:	call   0x4048f8
  403832:	nop
  403833:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  403838:	xor    eax,eax
  40383a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40383f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  403845:	add    rsp,0x78
  403849:	pop    rbx
  40384a:	pop    rsi
  40384b:	ret    
  40384c:	nop    DWORD PTR [rax+0x0]
  403850:	lea    rbx,[rip+0x2f68]        # 0x4067bf
  403857:	jmp    0x4037f0
  403859:	nop    DWORD PTR [rax+0x0]
  403860:	lea    rbx,[rip+0x2f79]        # 0x4067e0
  403867:	jmp    0x4037f0
  403869:	nop    DWORD PTR [rax+0x0]
  403870:	lea    rbx,[rip+0x2fd9]        # 0x406850
  403877:	jmp    0x4037f0
  40387c:	nop    DWORD PTR [rax+0x0]
  403880:	lea    rbx,[rip+0x2fa1]        # 0x406828
  403887:	jmp    0x4037f0
  40388c:	nop    DWORD PTR [rax+0x0]
  403890:	lea    rbx,[rip+0x2f69]        # 0x406800
  403897:	jmp    0x4037f0
  40389c:	nop    DWORD PTR [rax+0x0]
  4038a0:	lea    rbx,[rip+0x2fdf]        # 0x406886
  4038a7:	jmp    0x4037f0
  4038ac:	nop
  4038ad:	nop
  4038ae:	nop
  4038af:	nop
  4038b0:	fninit 
  4038b2:	ret    
  4038b3:	nop
  4038b4:	nop
  4038b5:	nop
  4038b6:	nop
  4038b7:	nop
  4038b8:	nop
  4038b9:	nop
  4038ba:	nop
  4038bb:	nop
  4038bc:	nop
  4038bd:	nop
  4038be:	nop
  4038bf:	nop
  4038c0:	mov    rax,rcx
  4038c3:	ret    
  4038c4:	xchg   ax,ax
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	mov    rax,rcx
  4038d3:	ret    
  4038d4:	nop
  4038d5:	nop
  4038d6:	nop
  4038d7:	nop
  4038d8:	nop
  4038d9:	nop
  4038da:	nop
  4038db:	nop
  4038dc:	nop
  4038dd:	nop
  4038de:	nop
  4038df:	nop
  4038e0:	push   rsi
  4038e1:	push   rbx
  4038e2:	sub    rsp,0x38
  4038e6:	lea    rax,[rsp+0x58]
  4038eb:	mov    rbx,rcx
  4038ee:	mov    QWORD PTR [rsp+0x58],rdx
  4038f3:	mov    QWORD PTR [rsp+0x60],r8
  4038f8:	mov    QWORD PTR [rsp+0x68],r9
  4038fd:	mov    QWORD PTR [rsp+0x28],rax
  403902:	call   0x404980
  403907:	lea    rcx,[rip+0x2fd2]        # 0x4068e0
  40390e:	lea    r9,[rax+0x60]
  403912:	mov    r8d,0x1b
  403918:	mov    edx,0x1
  40391d:	call   0x4048e8
  403922:	mov    rsi,QWORD PTR [rsp+0x28]
  403927:	call   0x404980
  40392c:	lea    rcx,[rax+0x60]
  403930:	mov    rdx,rbx
  403933:	mov    r8,rsi
  403936:	call   0x404880
  40393b:	call   0x404918
  403940:	nop
  403941:	nop    DWORD PTR [rax+rax*1+0x0]
  403946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403950:	push   r13
  403952:	push   r12
  403954:	push   rbp
  403955:	push   rdi
  403956:	push   rsi
  403957:	push   rbx
  403958:	sub    rsp,0x58
  40395c:	movsxd rbp,DWORD PTR [rip+0x5d21]        # 0x409684
  403963:	mov    rbx,rcx
  403966:	mov    rsi,rdx
  403969:	mov    rdi,r8
  40396c:	test   ebp,ebp
  40396e:	jle    0x403a6a
  403974:	mov    rax,QWORD PTR [rip+0x5d0d]        # 0x409688
  40397b:	xor    r9d,r9d
  40397e:	add    rax,0x8
  403982:	mov    r10,QWORD PTR [rax]
  403985:	cmp    rbx,r10
  403988:	jb     0x40399e
  40398a:	mov    rdx,QWORD PTR [rax+0x8]
  40398e:	mov    r11d,DWORD PTR [rdx+0x8]
  403992:	add    r10,r11
  403995:	cmp    rbx,r10
  403998:	jb     0x403a50
  40399e:	add    r9d,0x1
  4039a2:	add    rax,0x18
  4039a6:	cmp    r9d,ebp
  4039a9:	jne    0x403982
  4039ab:	mov    rcx,rbx
  4039ae:	call   0x4045c0
  4039b3:	test   rax,rax
  4039b6:	mov    r12,rax
  4039b9:	je     0x403aa2
  4039bf:	lea    rbp,[rbp+rbp*2+0x0]
  4039c4:	shl    rbp,0x3
  4039c8:	mov    r13,rbp
  4039cb:	add    r13,QWORD PTR [rip+0x5cb6]        # 0x409688
  4039d2:	mov    QWORD PTR [r13+0x10],rax
  4039d6:	mov    DWORD PTR [r13+0x0],0x0
  4039de:	call   0x4046e0
  4039e3:	mov    edx,DWORD PTR [r12+0xc]
  4039e8:	mov    r8d,0x30
  4039ee:	add    rax,rdx
  4039f1:	lea    rdx,[rsp+0x20]
  4039f6:	mov    QWORD PTR [r13+0x8],rax
  4039fa:	mov    rax,QWORD PTR [rip+0x5c87]        # 0x409688
  403a01:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403a06:	call   QWORD PTR [rip+0x6b64]        # 0x40a570
  403a0c:	test   rax,rax
  403a0f:	je     0x403a85
  403a11:	mov    eax,DWORD PTR [rsp+0x44]
  403a15:	lea    edx,[rax-0x4]
  403a18:	and    edx,0xfffffffb
  403a1b:	je     0x403a49
  403a1d:	sub    eax,0x40
  403a20:	and    eax,0xffffffbf
  403a23:	je     0x403a49
  403a25:	mov    r9,rbp
  403a28:	add    r9,QWORD PTR [rip+0x5c59]        # 0x409688
  403a2f:	mov    r8d,0x40
  403a35:	mov    rdx,QWORD PTR [rsp+0x38]
  403a3a:	mov    rcx,QWORD PTR [rsp+0x20]
  403a3f:	call   QWORD PTR [rip+0x6b23]        # 0x40a568
  403a45:	test   eax,eax
  403a47:	je     0x403a71
  403a49:	add    DWORD PTR [rip+0x5c34],0x1        # 0x409684
  403a50:	mov    r8,rdi
  403a53:	mov    rdx,rsi
  403a56:	mov    rcx,rbx
  403a59:	add    rsp,0x58
  403a5d:	pop    rbx
  403a5e:	pop    rsi
  403a5f:	pop    rdi
  403a60:	pop    rbp
  403a61:	pop    r12
  403a63:	pop    r13
  403a65:	jmp    0x4048d8
  403a6a:	xor    ebp,ebp
  403a6c:	jmp    0x4039ab
  403a71:	call   QWORD PTR [rip+0x6a71]        # 0x40a4e8
  403a77:	lea    rcx,[rip+0x2eda]        # 0x406958
  403a7e:	mov    edx,eax
  403a80:	call   0x4038e0
  403a85:	mov    rax,QWORD PTR [rip+0x5bfc]        # 0x409688
  403a8c:	mov    edx,DWORD PTR [r12+0x8]
  403a91:	lea    rcx,[rip+0x2e88]        # 0x406920
  403a98:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  403a9d:	call   0x4038e0
  403aa2:	lea    rcx,[rip+0x2e57]        # 0x406900
  403aa9:	mov    rdx,rbx
  403aac:	call   0x4038e0
  403ab1:	nop
  403ab2:	nop    DWORD PTR [rax+0x0]
  403ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ac0:	push   rbp
  403ac1:	push   r14
  403ac3:	push   r13
  403ac5:	push   r12
  403ac7:	push   rdi
  403ac8:	push   rsi
  403ac9:	push   rbx
  403aca:	mov    rbp,rsp
  403acd:	sub    rsp,0x60
  403ad1:	mov    ebx,DWORD PTR [rip+0x5ba9]        # 0x409680
  403ad7:	test   ebx,ebx
  403ad9:	je     0x403af0
  403adb:	mov    rsp,rbp
  403ade:	pop    rbx
  403adf:	pop    rsi
  403ae0:	pop    rdi
  403ae1:	pop    r12
  403ae3:	pop    r13
  403ae5:	pop    r14
  403ae7:	pop    rbp
  403ae8:	ret    
  403ae9:	nop    DWORD PTR [rax+0x0]
  403af0:	mov    DWORD PTR [rip+0x5b86],0x1        # 0x409680
  403afa:	call   0x404610
  403aff:	cdqe   
  403b01:	lea    rax,[rax+rax*2]
  403b05:	lea    rax,[rax*8+0x1e]
  403b0d:	and    rax,0xfffffffffffffff0
  403b11:	call   0x404830
  403b16:	mov    rsi,QWORD PTR [rip+0x2f13]        # 0x406a30
  403b1d:	mov    rbx,QWORD PTR [rip+0x2f1c]        # 0x406a40
  403b24:	sub    rsp,rax
  403b27:	mov    DWORD PTR [rip+0x5b53],0x0        # 0x409684
  403b31:	lea    rax,[rsp+0x20]
  403b36:	mov    QWORD PTR [rip+0x5b4b],rax        # 0x409688
  403b3d:	mov    rax,rsi
  403b40:	sub    rax,rbx
  403b43:	cmp    rax,0x7
  403b47:	jle    0x403adb
  403b49:	cmp    rax,0xb
  403b4d:	jle    0x403b75
  403b4f:	mov    r11d,DWORD PTR [rbx]
  403b52:	test   r11d,r11d
  403b55:	jne    0x403ca0
  403b5b:	mov    r10d,DWORD PTR [rbx+0x4]
  403b5f:	test   r10d,r10d
  403b62:	jne    0x403ca0
  403b68:	mov    r9d,DWORD PTR [rbx+0x8]
  403b6c:	test   r9d,r9d
  403b6f:	jne    0x403b8c
  403b71:	add    rbx,0xc
  403b75:	mov    r8d,DWORD PTR [rbx]
  403b78:	test   r8d,r8d
  403b7b:	jne    0x403ca0
  403b81:	mov    ecx,DWORD PTR [rbx+0x4]
  403b84:	test   ecx,ecx
  403b86:	jne    0x403ca0
  403b8c:	mov    edx,DWORD PTR [rbx+0x8]
  403b8f:	cmp    edx,0x1
  403b92:	jne    0x403dac
  403b98:	add    rbx,0xc
  403b9c:	cmp    rbx,rsi
  403b9f:	jae    0x403adb
  403ba5:	mov    r12,QWORD PTR [rip+0x2eb4]        # 0x406a60
  403bac:	lea    r13,[rbp-0x30]
  403bb0:	movabs r14,0xffffffff00000000
  403bba:	mov    ecx,DWORD PTR [rbx+0x4]
  403bbd:	mov    eax,DWORD PTR [rbx]
  403bbf:	movzx  edx,BYTE PTR [rbx+0x8]
  403bc3:	add    rax,r12
  403bc6:	add    rcx,r12
  403bc9:	cmp    edx,0x10
  403bcc:	mov    r8,QWORD PTR [rax]
  403bcf:	je     0x403d16
  403bd5:	jbe    0x403cdd
  403bdb:	cmp    edx,0x20
  403bde:	je     0x403d5f
  403be4:	cmp    edx,0x40
  403be7:	jne    0x403d4b
  403bed:	sub    r8,rax
  403bf0:	mov    rdx,r13
  403bf3:	mov    rdi,r13
  403bf6:	mov    rax,r8
  403bf9:	add    rax,QWORD PTR [rcx]
  403bfc:	mov    r8d,0x8
  403c02:	mov    QWORD PTR [rbp-0x30],rax
  403c06:	call   0x403950
  403c0b:	add    rbx,0xc
  403c0f:	cmp    rbx,rsi
  403c12:	jb     0x403bba
  403c14:	mov    eax,DWORD PTR [rip+0x5a6a]        # 0x409684
  403c1a:	xor    ebx,ebx
  403c1c:	xor    esi,esi
  403c1e:	test   eax,eax
  403c20:	jle    0x403adb
  403c26:	mov    r14,QWORD PTR [rip+0x6943]        # 0x40a570
  403c2d:	lea    r13,[rbp-0x34]
  403c31:	mov    r12,QWORD PTR [rip+0x6930]        # 0x40a568
  403c38:	jmp    0x403c53
  403c3a:	nop    WORD PTR [rax+rax*1+0x0]
  403c40:	add    esi,0x1
  403c43:	add    rbx,0x18
  403c47:	cmp    esi,DWORD PTR [rip+0x5a37]        # 0x409684
  403c4d:	jge    0x403adb
  403c53:	mov    rax,rbx
  403c56:	add    rax,QWORD PTR [rip+0x5a2b]        # 0x409688
  403c5d:	mov    edx,DWORD PTR [rax]
  403c5f:	test   edx,edx
  403c61:	je     0x403c40
  403c63:	mov    rcx,QWORD PTR [rax+0x8]
  403c67:	mov    r8d,0x30
  403c6d:	mov    rdx,rdi
  403c70:	call   r14
  403c73:	test   rax,rax
  403c76:	je     0x403d8e
  403c7c:	mov    rax,QWORD PTR [rip+0x5a05]        # 0x409688
  403c83:	mov    r9,r13
  403c86:	mov    rdx,QWORD PTR [rbp-0x18]
  403c8a:	mov    rcx,QWORD PTR [rbp-0x30]
  403c8e:	mov    r8d,DWORD PTR [rax+rbx*1]
  403c92:	call   r12
  403c95:	jmp    0x403c40
  403c97:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	cmp    rbx,rsi
  403ca3:	jae    0x403adb
  403ca9:	mov    r12,QWORD PTR [rip+0x2db0]        # 0x406a60
  403cb0:	lea    rdi,[rbp-0x30]
  403cb4:	mov    ecx,DWORD PTR [rbx+0x4]
  403cb7:	mov    eax,DWORD PTR [rbx]
  403cb9:	mov    r8d,0x4
  403cbf:	mov    rdx,rdi
  403cc2:	add    rbx,0x8
  403cc6:	add    rcx,r12
  403cc9:	add    eax,DWORD PTR [rcx]
  403ccb:	mov    DWORD PTR [rbp-0x30],eax
  403cce:	call   0x403950
  403cd3:	cmp    rbx,rsi
  403cd6:	jb     0x403cb4
  403cd8:	jmp    0x403c14
  403cdd:	cmp    edx,0x8
  403ce0:	jne    0x403d4b
  403ce2:	movzx  edx,BYTE PTR [rcx]
  403ce5:	mov    rdi,r13
  403ce8:	mov    r10,rdx
  403ceb:	or     r10,0xffffffffffffff00
  403cf2:	test   dl,dl
  403cf4:	cmovs  rdx,r10
  403cf8:	sub    rdx,rax
  403cfb:	lea    rax,[r8+rdx*1]
  403cff:	mov    r8d,0x1
  403d05:	mov    rdx,r13
  403d08:	mov    QWORD PTR [rbp-0x30],rax
  403d0c:	call   0x403950
  403d11:	jmp    0x403c0b
  403d16:	movzx  edx,WORD PTR [rcx]
  403d19:	mov    rdi,r13
  403d1c:	mov    r10,rdx
  403d1f:	or     r10,0xffffffffffff0000
  403d26:	test   dx,dx
  403d29:	cmovs  rdx,r10
  403d2d:	sub    rdx,rax
  403d30:	lea    rax,[r8+rdx*1]
  403d34:	mov    r8d,0x2
  403d3a:	mov    rdx,r13
  403d3d:	mov    QWORD PTR [rbp-0x30],rax
  403d41:	call   0x403950
  403d46:	jmp    0x403c0b
  403d4b:	lea    rcx,[rip+0x2c66]        # 0x4069b8
  403d52:	mov    QWORD PTR [rbp-0x30],0x0
  403d5a:	call   0x4038e0
  403d5f:	mov    edx,DWORD PTR [rcx]
  403d61:	mov    rdi,r13
  403d64:	mov    r10,rdx
  403d67:	or     r10,r14
  403d6a:	test   edx,edx
  403d6c:	cmovs  rdx,r10
  403d70:	sub    rdx,rax
  403d73:	lea    rax,[r8+rdx*1]
  403d77:	mov    r8d,0x4
  403d7d:	mov    rdx,r13
  403d80:	mov    QWORD PTR [rbp-0x30],rax
  403d84:	call   0x403950
  403d89:	jmp    0x403c0b
  403d8e:	add    rbx,QWORD PTR [rip+0x58f3]        # 0x409688
  403d95:	lea    rcx,[rip+0x2b84]        # 0x406920
  403d9c:	mov    rax,QWORD PTR [rbx+0x10]
  403da0:	mov    r8,QWORD PTR [rbx+0x8]
  403da4:	mov    edx,DWORD PTR [rax+0x8]
  403da7:	call   0x4038e0
  403dac:	lea    rcx,[rip+0x2bcd]        # 0x406980
  403db3:	call   0x4038e0
  403db8:	nop
  403db9:	nop
  403dba:	nop
  403dbb:	nop
  403dbc:	nop
  403dbd:	nop
  403dbe:	nop
  403dbf:	nop
  403dc0:	sub    rsp,0x28
  403dc4:	mov    eax,DWORD PTR [rcx]
  403dc6:	cmp    eax,0xc0000091
  403dcb:	ja     0x403e30
  403dcd:	cmp    eax,0xc000008d
  403dd2:	jae    0x403e4f
  403dd4:	cmp    eax,0xc0000008
  403dd9:	je     0x403ef0
  403ddf:	ja     0x403ec0
  403de5:	cmp    eax,0x80000002
  403dea:	je     0x403ef0
  403df0:	cmp    eax,0xc0000005
  403df5:	jne    0x403ece
  403dfb:	xor    edx,edx
  403dfd:	mov    ecx,0xb
  403e02:	call   0x4048a0
  403e07:	cmp    rax,0x1
  403e0b:	je     0x403f50
  403e11:	test   rax,rax
  403e14:	je     0x403f30
  403e1a:	mov    ecx,0xb
  403e1f:	call   rax
  403e21:	xor    eax,eax
  403e23:	add    rsp,0x28
  403e27:	ret    
  403e28:	nop    DWORD PTR [rax+rax*1+0x0]
  403e30:	cmp    eax,0xc0000094
  403e35:	je     0x403f00
  403e3b:	ja     0x403e80
  403e3d:	cmp    eax,0xc0000092
  403e42:	je     0x403ef0
  403e48:	cmp    eax,0xc0000093
  403e4d:	jne    0x403ece
  403e4f:	xor    edx,edx
  403e51:	mov    ecx,0x8
  403e56:	call   0x4048a0
  403e5b:	cmp    rax,0x1
  403e5f:	mov    rdx,rax
  403e62:	je     0x403ed8
  403e64:	test   rdx,rdx
  403e67:	mov    eax,0x1
  403e6c:	je     0x403e23
  403e6e:	mov    ecx,0x8
  403e73:	call   rdx
  403e75:	xor    eax,eax
  403e77:	add    rsp,0x28
  403e7b:	ret    
  403e7c:	nop    DWORD PTR [rax+0x0]
  403e80:	cmp    eax,0xc0000095
  403e85:	je     0x403ef0
  403e87:	cmp    eax,0xc0000096
  403e8c:	jne    0x403ece
  403e8e:	xor    edx,edx
  403e90:	mov    ecx,0x4
  403e95:	call   0x4048a0
  403e9a:	cmp    rax,0x1
  403e9e:	je     0x403f3a
  403ea4:	test   rax,rax
  403ea7:	je     0x403f30
  403ead:	mov    ecx,0x4
  403eb2:	call   rax
  403eb4:	xor    eax,eax
  403eb6:	jmp    0x403e23
  403ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ec0:	cmp    eax,0xc000001d
  403ec5:	je     0x403e8e
  403ec7:	cmp    eax,0xc000008c
  403ecc:	je     0x403ef0
  403ece:	mov    eax,0x1
  403ed3:	add    rsp,0x28
  403ed7:	ret    
  403ed8:	mov    edx,0x1
  403edd:	mov    ecx,0x8
  403ee2:	call   0x4048a0
  403ee7:	call   0x4038b0
  403eec:	nop    DWORD PTR [rax+0x0]
  403ef0:	xor    eax,eax
  403ef2:	add    rsp,0x28
  403ef6:	ret    
  403ef7:	nop    WORD PTR [rax+rax*1+0x0]
  403f00:	xor    edx,edx
  403f02:	mov    ecx,0x8
  403f07:	call   0x4048a0
  403f0c:	cmp    rax,0x1
  403f10:	mov    rdx,rax
  403f13:	jne    0x403e64
  403f19:	mov    edx,0x1
  403f1e:	mov    ecx,0x8
  403f23:	call   0x4048a0
  403f28:	xor    eax,eax
  403f2a:	jmp    0x403e23
  403f2f:	nop
  403f30:	mov    eax,0x4
  403f35:	add    rsp,0x28
  403f39:	ret    
  403f3a:	mov    edx,0x1
  403f3f:	mov    ecx,0x4
  403f44:	call   0x4048a0
  403f49:	xor    eax,eax
  403f4b:	jmp    0x403e23
  403f50:	mov    edx,0x1
  403f55:	mov    ecx,0xb
  403f5a:	call   0x4048a0
  403f5f:	xor    eax,eax
  403f61:	jmp    0x403e23
  403f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f70:	push   r12
  403f72:	push   rbp
  403f73:	push   rdi
  403f74:	push   rsi
  403f75:	push   rbx
  403f76:	sub    rsp,0x20
  403f7a:	call   0x4046e0
  403f7f:	mov    rbp,rax
  403f82:	mov    eax,DWORD PTR [rip+0x5740]        # 0x4096c8
  403f88:	test   eax,eax
  403f8a:	jne    0x403fb1
  403f8c:	test   rbp,rbp
  403f8f:	je     0x403fb1
  403f91:	lea    rcx,[rip+0x2a58]        # 0x4069f0
  403f98:	mov    DWORD PTR [rip+0x5726],0x1        # 0x4096c8
  403fa2:	call   0x404520
  403fa7:	test   rax,rax
  403faa:	je     0x403fc0
  403fac:	mov    eax,0x1
  403fb1:	add    rsp,0x20
  403fb5:	pop    rbx
  403fb6:	pop    rsi
  403fb7:	pop    rdi
  403fb8:	pop    rbp
  403fb9:	pop    r12
  403fbb:	ret    
  403fbc:	nop    DWORD PTR [rax+0x0]
  403fc0:	lea    rbx,[rip+0x5839]        # 0x409800
  403fc7:	mov    ecx,0x30
  403fcc:	lea    rdx,[rip+0x572d]        # 0x409700
  403fd3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403dc0
  403fda:	xor    esi,esi
  403fdc:	mov    rdi,rbx
  403fdf:	rep stos QWORD PTR es:[rdi],rax
  403fe2:	mov    rdi,rdx
  403fe5:	sub    r12,rbp
  403fe8:	mov    cl,0x20
  403fea:	rep stos QWORD PTR es:[rdi],rax
  403fed:	mov    rdi,rdx
  403ff0:	jmp    0x404020
  403ff2:	mov    BYTE PTR [rdi],0x9
  403ff5:	mov    DWORD PTR [rdi+0x4],r12d
  403ff9:	add    rsi,0x1
  403ffd:	mov    edx,DWORD PTR [rax+0xc]
  404000:	add    rbx,0xc
  404004:	mov    DWORD PTR [rbx-0xc],edx
  404007:	add    edx,DWORD PTR [rax+0x8]
  40400a:	mov    rax,rdi
  40400d:	sub    rax,rbp
  404010:	add    rdi,0x8
  404014:	mov    DWORD PTR [rbx-0x4],eax
  404017:	mov    DWORD PTR [rbx-0x8],edx
  40401a:	cmp    rsi,0x20
  40401e:	je     0x404055
  404020:	mov    rcx,rsi
  404023:	call   0x404650
  404028:	test   rax,rax
  40402b:	jne    0x403ff2
  40402d:	test   rsi,rsi
  404030:	je     0x403fac
  404036:	mov    edx,esi
  404038:	nop    DWORD PTR [rax+rax*1+0x0]
  404040:	mov    r8,rbp
  404043:	lea    rcx,[rip+0x57b6]        # 0x409800
  40404a:	call   QWORD PTR [rip+0x64d0]        # 0x40a520
  404050:	jmp    0x403fac
  404055:	mov    edx,0x20
  40405a:	jmp    0x404040
  40405c:	nop    DWORD PTR [rax+0x0]
  404060:	push   rbx
  404061:	sub    rsp,0x20
  404065:	mov    rdx,QWORD PTR [rcx]
  404068:	mov    eax,DWORD PTR [rdx]
  40406a:	mov    r8d,eax
  40406d:	and    r8d,0x20ffffff
  404074:	cmp    r8d,0x20474343
  40407b:	je     0x404180
  404081:	cmp    eax,0xc0000091
  404086:	mov    rbx,rcx
  404089:	ja     0x404110
  40408f:	cmp    eax,0xc000008d
  404094:	jae    0x404127
  40409a:	cmp    eax,0xc0000008
  40409f:	je     0x4040d3
  4040a1:	ja     0x4040e0
  4040a3:	cmp    eax,0x80000002
  4040a8:	je     0x4040d3
  4040aa:	cmp    eax,0xc0000005
  4040af:	jne    0x4040f2
  4040b1:	xor    edx,edx
  4040b3:	mov    ecx,0xb
  4040b8:	call   0x4048a0
  4040bd:	cmp    rax,0x1
  4040c1:	je     0x4041f0
  4040c7:	test   rax,rax
  4040ca:	je     0x4040f2
  4040cc:	mov    ecx,0xb
  4040d1:	call   rax
  4040d3:	mov    eax,0xffffffff
  4040d8:	add    rsp,0x20
  4040dc:	pop    rbx
  4040dd:	ret    
  4040de:	xchg   ax,ax
  4040e0:	cmp    eax,0xc000001d
  4040e5:	je     0x4041a6
  4040eb:	cmp    eax,0xc000008c
  4040f0:	je     0x4040d3
  4040f2:	mov    rax,QWORD PTR [rip+0x55c7]        # 0x4096c0
  4040f9:	test   rax,rax
  4040fc:	je     0x4040d8
  4040fe:	mov    rcx,rbx
  404101:	add    rsp,0x20
  404105:	pop    rbx
  404106:	rex.W jmp rax
  404109:	nop    DWORD PTR [rax+0x0]
  404110:	cmp    eax,0xc0000094
  404115:	je     0x404152
  404117:	ja     0x404190
  404119:	cmp    eax,0xc0000092
  40411e:	je     0x4040d3
  404120:	cmp    eax,0xc0000093
  404125:	jne    0x4040f2
  404127:	xor    edx,edx
  404129:	mov    ecx,0x8
  40412e:	call   0x4048a0
  404133:	cmp    rax,0x1
  404137:	jne    0x404164
  404139:	mov    edx,0x1
  40413e:	mov    ecx,0x8
  404143:	call   0x4048a0
  404148:	call   0x4038b0
  40414d:	jmp    0x4040d3
  404152:	xor    edx,edx
  404154:	mov    ecx,0x8
  404159:	call   0x4048a0
  40415e:	cmp    rax,0x1
  404162:	je     0x4041d2
  404164:	test   rax,rax
  404167:	je     0x4040f2
  404169:	mov    ecx,0x8
  40416e:	call   rax
  404170:	mov    eax,0xffffffff
  404175:	jmp    0x4040d8
  40417a:	nop    WORD PTR [rax+rax*1+0x0]
  404180:	test   BYTE PTR [rdx+0x4],0x1
  404184:	jne    0x404081
  40418a:	jmp    0x4040d3
  40418f:	nop
  404190:	cmp    eax,0xc0000095
  404195:	je     0x4040d3
  40419b:	cmp    eax,0xc0000096
  4041a0:	jne    0x4040f2
  4041a6:	xor    edx,edx
  4041a8:	mov    ecx,0x4
  4041ad:	call   0x4048a0
  4041b2:	cmp    rax,0x1
  4041b6:	je     0x404204
  4041b8:	test   rax,rax
  4041bb:	je     0x4040f2
  4041c1:	mov    ecx,0x4
  4041c6:	call   rax
  4041c8:	mov    eax,0xffffffff
  4041cd:	jmp    0x4040d8
  4041d2:	mov    edx,0x1
  4041d7:	mov    ecx,0x8
  4041dc:	call   0x4048a0
  4041e1:	jmp    0x4040d3
  4041e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041f0:	mov    edx,0x1
  4041f5:	mov    ecx,0xb
  4041fa:	call   0x4048a0
  4041ff:	jmp    0x4040d3
  404204:	mov    edx,0x1
  404209:	mov    ecx,0x4
  40420e:	call   0x4048a0
  404213:	jmp    0x4040d3
  404218:	nop
  404219:	nop
  40421a:	nop
  40421b:	nop
  40421c:	nop
  40421d:	nop
  40421e:	nop
  40421f:	nop
  404220:	push   rbp
  404221:	push   rdi
  404222:	push   rsi
  404223:	push   rbx
  404224:	sub    rsp,0x28
  404228:	lea    rcx,[rip+0x5771]        # 0x4099a0
  40422f:	call   QWORD PTR [rip+0x6293]        # 0x40a4c8
  404235:	mov    rbx,QWORD PTR [rip+0x5744]        # 0x409980
  40423c:	test   rbx,rbx
  40423f:	je     0x404274
  404241:	mov    rbp,QWORD PTR [rip+0x6310]        # 0x40a558
  404248:	mov    rdi,QWORD PTR [rip+0x6299]        # 0x40a4e8
  40424f:	nop
  404250:	mov    ecx,DWORD PTR [rbx]
  404252:	call   rbp
  404254:	mov    rsi,rax
  404257:	call   rdi
  404259:	test   eax,eax
  40425b:	jne    0x40426b
  40425d:	test   rsi,rsi
  404260:	je     0x40426b
  404262:	mov    rax,QWORD PTR [rbx+0x8]
  404266:	mov    rcx,rsi
  404269:	call   rax
  40426b:	mov    rbx,QWORD PTR [rbx+0x10]
  40426f:	test   rbx,rbx
  404272:	jne    0x404250
  404274:	mov    rax,QWORD PTR [rip+0x6295]        # 0x40a510
  40427b:	lea    rcx,[rip+0x571e]        # 0x4099a0
  404282:	add    rsp,0x28
  404286:	pop    rbx
  404287:	pop    rsi
  404288:	pop    rdi
  404289:	pop    rbp
  40428a:	rex.W jmp rax
  40428d:	nop    DWORD PTR [rax]
  404290:	push   rdi
  404291:	push   rsi
  404292:	push   rbx
  404293:	sub    rsp,0x20
  404297:	mov    eax,DWORD PTR [rip+0x56eb]        # 0x409988
  40429d:	test   eax,eax
  40429f:	jne    0x4042b0
  4042a1:	add    rsp,0x20
  4042a5:	pop    rbx
  4042a6:	pop    rsi
  4042a7:	pop    rdi
  4042a8:	ret    
  4042a9:	nop    DWORD PTR [rax+0x0]
  4042b0:	mov    rsi,rdx
  4042b3:	mov    edi,ecx
  4042b5:	mov    edx,0x18
  4042ba:	mov    ecx,0x1
  4042bf:	call   0x404910
  4042c4:	test   rax,rax
  4042c7:	mov    rbx,rax
  4042ca:	je     0x404308
  4042cc:	mov    DWORD PTR [rax],edi
  4042ce:	mov    QWORD PTR [rax+0x8],rsi
  4042d2:	lea    rcx,[rip+0x56c7]        # 0x4099a0
  4042d9:	call   QWORD PTR [rip+0x61e9]        # 0x40a4c8
  4042df:	mov    rax,QWORD PTR [rip+0x569a]        # 0x409980
  4042e6:	lea    rcx,[rip+0x56b3]        # 0x4099a0
  4042ed:	mov    QWORD PTR [rip+0x568c],rbx        # 0x409980
  4042f4:	mov    QWORD PTR [rbx+0x10],rax
  4042f8:	call   QWORD PTR [rip+0x6212]        # 0x40a510
  4042fe:	xor    eax,eax
  404300:	add    rsp,0x20
  404304:	pop    rbx
  404305:	pop    rsi
  404306:	pop    rdi
  404307:	ret    
  404308:	mov    eax,0xffffffff
  40430d:	jmp    0x4042a1
  40430f:	nop
  404310:	push   rbx
  404311:	sub    rsp,0x20
  404315:	mov    eax,DWORD PTR [rip+0x566d]        # 0x409988
  40431b:	test   eax,eax
  40431d:	jne    0x404330
  40431f:	xor    eax,eax
  404321:	add    rsp,0x20
  404325:	pop    rbx
  404326:	ret    
  404327:	nop    WORD PTR [rax+rax*1+0x0]
  404330:	mov    ebx,ecx
  404332:	lea    rcx,[rip+0x5667]        # 0x4099a0
  404339:	call   QWORD PTR [rip+0x6189]        # 0x40a4c8
  40433f:	mov    rdx,QWORD PTR [rip+0x563a]        # 0x409980
  404346:	test   rdx,rdx
  404349:	je     0x404367
  40434b:	mov    eax,DWORD PTR [rdx]
  40434d:	cmp    eax,ebx
  40434f:	jne    0x40435e
  404351:	jmp    0x40439f
  404353:	mov    r8d,DWORD PTR [rax]
  404356:	cmp    r8d,ebx
  404359:	je     0x404380
  40435b:	mov    rdx,rax
  40435e:	mov    rax,QWORD PTR [rdx+0x10]
  404362:	test   rax,rax
  404365:	jne    0x404353
  404367:	lea    rcx,[rip+0x5632]        # 0x4099a0
  40436e:	call   QWORD PTR [rip+0x619c]        # 0x40a510
  404374:	xor    eax,eax
  404376:	add    rsp,0x20
  40437a:	pop    rbx
  40437b:	ret    
  40437c:	nop    DWORD PTR [rax+0x0]
  404380:	mov    rcx,rax
  404383:	mov    rax,QWORD PTR [rax+0x10]
  404387:	mov    QWORD PTR [rdx+0x10],rax
  40438b:	call   0x4048f0
  404390:	lea    rcx,[rip+0x5609]        # 0x4099a0
  404397:	call   QWORD PTR [rip+0x6173]        # 0x40a510
  40439d:	jmp    0x404374
  40439f:	mov    rax,QWORD PTR [rdx+0x10]
  4043a3:	mov    rcx,rdx
  4043a6:	mov    QWORD PTR [rip+0x55d3],rax        # 0x409980
  4043ad:	jmp    0x40438b
  4043af:	nop
  4043b0:	push   rbx
  4043b1:	sub    rsp,0x20
  4043b5:	cmp    edx,0x1
  4043b8:	je     0x404450
  4043be:	jb     0x4043f0
  4043c0:	cmp    edx,0x2
  4043c3:	je     0x4043e0
  4043c5:	cmp    edx,0x3
  4043c8:	jne    0x4043e5
  4043ca:	mov    eax,DWORD PTR [rip+0x55b8]        # 0x409988
  4043d0:	test   eax,eax
  4043d2:	je     0x4043e5
  4043d4:	call   0x404220
  4043d9:	jmp    0x4043e5
  4043db:	nop    DWORD PTR [rax+rax*1+0x0]
  4043e0:	call   0x4038b0
  4043e5:	mov    eax,0x1
  4043ea:	add    rsp,0x20
  4043ee:	pop    rbx
  4043ef:	ret    
  4043f0:	mov    eax,DWORD PTR [rip+0x5592]        # 0x409988
  4043f6:	test   eax,eax
  4043f8:	jne    0x404480
  4043fe:	mov    eax,DWORD PTR [rip+0x5584]        # 0x409988
  404404:	cmp    eax,0x1
  404407:	jne    0x4043e5
  404409:	mov    rcx,QWORD PTR [rip+0x5570]        # 0x409980
  404410:	test   rcx,rcx
  404413:	je     0x404426
  404415:	mov    rbx,QWORD PTR [rcx+0x10]
  404419:	call   0x4048f0
  40441e:	test   rbx,rbx
  404421:	mov    rcx,rbx
  404424:	jne    0x404415
  404426:	lea    rcx,[rip+0x5573]        # 0x4099a0
  40442d:	mov    QWORD PTR [rip+0x5548],0x0        # 0x409980
  404438:	mov    DWORD PTR [rip+0x5546],0x0        # 0x409988
  404442:	call   QWORD PTR [rip+0x6078]        # 0x40a4c0
  404448:	jmp    0x4043e5
  40444a:	nop    WORD PTR [rax+rax*1+0x0]
  404450:	mov    eax,DWORD PTR [rip+0x5532]        # 0x409988
  404456:	test   eax,eax
  404458:	je     0x404470
  40445a:	mov    eax,0x1
  40445f:	mov    DWORD PTR [rip+0x551f],0x1        # 0x409988
  404469:	add    rsp,0x20
  40446d:	pop    rbx
  40446e:	ret    
  40446f:	nop
  404470:	lea    rcx,[rip+0x5529]        # 0x4099a0
  404477:	call   QWORD PTR [rip+0x608b]        # 0x40a508
  40447d:	jmp    0x40445a
  40447f:	nop
  404480:	call   0x404220
  404485:	jmp    0x4043fe
  40448a:	nop
  40448b:	nop
  40448c:	nop
  40448d:	nop
  40448e:	nop
  40448f:	nop
  404490:	movsxd rax,DWORD PTR [rcx+0x3c]
  404494:	add    rcx,rax
  404497:	xor    eax,eax
  404499:	cmp    DWORD PTR [rcx],0x4550
  40449f:	je     0x4044a3
  4044a1:	repz ret 
  4044a3:	xor    eax,eax
  4044a5:	cmp    WORD PTR [rcx+0x18],0x20b
  4044ab:	sete   al
  4044ae:	ret    
  4044af:	nop
  4044b0:	cmp    WORD PTR [rcx],0x5a4d
  4044b5:	je     0x4044c0
  4044b7:	xor    eax,eax
  4044b9:	ret    
  4044ba:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	jmp    0x404490
  4044c2:	nop    DWORD PTR [rax+0x0]
  4044c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044d0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4044d4:	add    rcx,rax
  4044d7:	movzx  eax,WORD PTR [rcx+0x14]
  4044db:	lea    rax,[rcx+rax*1+0x18]
  4044e0:	movzx  ecx,WORD PTR [rcx+0x6]
  4044e4:	test   ecx,ecx
  4044e6:	je     0x404511
  4044e8:	sub    ecx,0x1
  4044eb:	lea    rcx,[rcx+rcx*4]
  4044ef:	lea    r9,[rax+rcx*8+0x28]
  4044f4:	mov    r8d,DWORD PTR [rax+0xc]
  4044f8:	cmp    r8,rdx
  4044fb:	mov    rcx,r8
  4044fe:	ja     0x404508
  404500:	add    ecx,DWORD PTR [rax+0x8]
  404503:	cmp    rdx,rcx
  404506:	jb     0x404513
  404508:	add    rax,0x28
  40450c:	cmp    rax,r9
  40450f:	jne    0x4044f4
  404511:	xor    eax,eax
  404513:	repz ret 
  404515:	nop
  404516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404520:	push   rdi
  404521:	push   rsi
  404522:	push   rbx
  404523:	sub    rsp,0x20
  404527:	mov    rsi,rcx
  40452a:	call   0x404890
  40452f:	cmp    rax,0x8
  404533:	ja     0x404550
  404535:	mov    rbx,QWORD PTR [rip+0x2524]        # 0x406a60
  40453c:	xor    edi,edi
  40453e:	cmp    WORD PTR [rbx],0x5a4d
  404543:	je     0x404560
  404545:	mov    rax,rdi
  404548:	add    rsp,0x20
  40454c:	pop    rbx
  40454d:	pop    rsi
  40454e:	pop    rdi
  40454f:	ret    
  404550:	xor    edi,edi
  404552:	mov    rax,rdi
  404555:	add    rsp,0x20
  404559:	pop    rbx
  40455a:	pop    rsi
  40455b:	pop    rdi
  40455c:	ret    
  40455d:	nop    DWORD PTR [rax]
  404560:	mov    rcx,rbx
  404563:	call   0x404490
  404568:	test   eax,eax
  40456a:	je     0x404545
  40456c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  404570:	add    rdx,rbx
  404573:	movzx  eax,WORD PTR [rdx+0x14]
  404577:	lea    rbx,[rdx+rax*1+0x18]
  40457c:	movzx  eax,WORD PTR [rdx+0x6]
  404580:	test   eax,eax
  404582:	je     0x404545
  404584:	sub    eax,0x1
  404587:	lea    rax,[rax+rax*4]
  40458b:	lea    rdi,[rbx+rax*8+0x28]
  404590:	jmp    0x40459b
  404592:	add    rbx,0x28
  404596:	cmp    rbx,rdi
  404599:	je     0x404550
  40459b:	mov    r8d,0x8
  4045a1:	mov    rdx,rsi
  4045a4:	mov    rcx,rbx
  4045a7:	call   0x404888
  4045ac:	test   eax,eax
  4045ae:	jne    0x404592
  4045b0:	mov    rdi,rbx
  4045b3:	mov    rax,rdi
  4045b6:	add    rsp,0x20
  4045ba:	pop    rbx
  4045bb:	pop    rsi
  4045bc:	pop    rdi
  4045bd:	ret    
  4045be:	xchg   ax,ax
  4045c0:	push   rsi
  4045c1:	push   rbx
  4045c2:	sub    rsp,0x28
  4045c6:	mov    rbx,QWORD PTR [rip+0x2493]        # 0x406a60
  4045cd:	cmp    WORD PTR [rbx],0x5a4d
  4045d2:	je     0x4045e0
  4045d4:	xor    eax,eax
  4045d6:	add    rsp,0x28
  4045da:	pop    rbx
  4045db:	pop    rsi
  4045dc:	ret    
  4045dd:	nop    DWORD PTR [rax]
  4045e0:	mov    rsi,rcx
  4045e3:	mov    rcx,rbx
  4045e6:	call   0x404490
  4045eb:	test   eax,eax
  4045ed:	je     0x4045d4
  4045ef:	sub    rsi,rbx
  4045f2:	mov    rcx,rbx
  4045f5:	mov    rdx,rsi
  4045f8:	add    rsp,0x28
  4045fc:	pop    rbx
  4045fd:	pop    rsi
  4045fe:	jmp    0x4044d0
  404603:	nop    DWORD PTR [rax]
  404606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404610:	push   rbx
  404611:	sub    rsp,0x20
  404615:	mov    rbx,QWORD PTR [rip+0x2444]        # 0x406a60
  40461c:	xor    eax,eax
  40461e:	cmp    WORD PTR [rbx],0x5a4d
  404623:	je     0x404630
  404625:	add    rsp,0x20
  404629:	pop    rbx
  40462a:	ret    
  40462b:	nop    DWORD PTR [rax+rax*1+0x0]
  404630:	mov    rcx,rbx
  404633:	call   0x404490
  404638:	test   eax,eax
  40463a:	je     0x404625
  40463c:	movsxd rax,DWORD PTR [rbx+0x3c]
  404640:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  404645:	add    rsp,0x20
  404649:	pop    rbx
  40464a:	ret    
  40464b:	nop    DWORD PTR [rax+rax*1+0x0]
  404650:	push   rdi
  404651:	push   rsi
  404652:	push   rbx
  404653:	sub    rsp,0x20
  404657:	mov    rsi,QWORD PTR [rip+0x2402]        # 0x406a60
  40465e:	xor    edi,edi
  404660:	mov    rbx,rcx
  404663:	cmp    WORD PTR [rsi],0x5a4d
  404668:	je     0x404675
  40466a:	mov    rax,rdi
  40466d:	add    rsp,0x20
  404671:	pop    rbx
  404672:	pop    rsi
  404673:	pop    rdi
  404674:	ret    
  404675:	mov    rcx,rsi
  404678:	call   0x404490
  40467d:	test   eax,eax
  40467f:	je     0x40466a
  404681:	movsxd rax,DWORD PTR [rsi+0x3c]
  404685:	add    rsi,rax
  404688:	movzx  eax,WORD PTR [rsi+0x14]
  40468c:	lea    rdx,[rsi+rax*1+0x18]
  404691:	movzx  eax,WORD PTR [rsi+0x6]
  404695:	test   eax,eax
  404697:	je     0x40466a
  404699:	sub    eax,0x1
  40469c:	lea    rax,[rax+rax*4]
  4046a0:	lea    rax,[rdx+rax*8+0x28]
  4046a5:	test   BYTE PTR [rdx+0x27],0x20
  4046a9:	je     0x4046b4
  4046ab:	test   rbx,rbx
  4046ae:	je     0x4046d0
  4046b0:	sub    rbx,0x1
  4046b4:	add    rdx,0x28
  4046b8:	cmp    rdx,rax
  4046bb:	jne    0x4046a5
  4046bd:	xor    edi,edi
  4046bf:	mov    rax,rdi
  4046c2:	add    rsp,0x20
  4046c6:	pop    rbx
  4046c7:	pop    rsi
  4046c8:	pop    rdi
  4046c9:	ret    
  4046ca:	nop    WORD PTR [rax+rax*1+0x0]
  4046d0:	mov    rdi,rdx
  4046d3:	mov    rax,rdi
  4046d6:	add    rsp,0x20
  4046da:	pop    rbx
  4046db:	pop    rsi
  4046dc:	pop    rdi
  4046dd:	ret    
  4046de:	xchg   ax,ax
  4046e0:	push   rsi
  4046e1:	push   rbx
  4046e2:	sub    rsp,0x28
  4046e6:	mov    rsi,QWORD PTR [rip+0x2373]        # 0x406a60
  4046ed:	xor    ebx,ebx
  4046ef:	cmp    WORD PTR [rsi],0x5a4d
  4046f4:	je     0x404700
  4046f6:	mov    rax,rbx
  4046f9:	add    rsp,0x28
  4046fd:	pop    rbx
  4046fe:	pop    rsi
  4046ff:	ret    
  404700:	mov    rcx,rsi
  404703:	call   0x404490
  404708:	test   eax,eax
  40470a:	cmovne rbx,rsi
  40470e:	mov    rax,rbx
  404711:	add    rsp,0x28
  404715:	pop    rbx
  404716:	pop    rsi
  404717:	ret    
  404718:	nop    DWORD PTR [rax+rax*1+0x0]
  404720:	push   rsi
  404721:	push   rbx
  404722:	sub    rsp,0x28
  404726:	mov    rbx,QWORD PTR [rip+0x2333]        # 0x406a60
  40472d:	xor    eax,eax
  40472f:	cmp    WORD PTR [rbx],0x5a4d
  404734:	je     0x404740
  404736:	add    rsp,0x28
  40473a:	pop    rbx
  40473b:	pop    rsi
  40473c:	ret    
  40473d:	nop    DWORD PTR [rax]
  404740:	mov    rsi,rcx
  404743:	mov    rcx,rbx
  404746:	call   0x404490
  40474b:	test   eax,eax
  40474d:	je     0x404736
  40474f:	sub    rsi,rbx
  404752:	mov    rcx,rbx
  404755:	mov    rdx,rsi
  404758:	call   0x4044d0
  40475d:	test   rax,rax
  404760:	je     0x404771
  404762:	mov    eax,DWORD PTR [rax+0x24]
  404765:	not    eax
  404767:	shr    eax,0x1f
  40476a:	add    rsp,0x28
  40476e:	pop    rbx
  40476f:	pop    rsi
  404770:	ret    
  404771:	xor    eax,eax
  404773:	jmp    0x404736
  404775:	nop
  404776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404780:	push   rbp
  404781:	push   rdi
  404782:	push   rsi
  404783:	push   rbx
  404784:	sub    rsp,0x28
  404788:	mov    rdi,QWORD PTR [rip+0x22d1]        # 0x406a60
  40478f:	xor    ebp,ebp
  404791:	mov    esi,ecx
  404793:	cmp    WORD PTR [rdi],0x5a4d
  404798:	je     0x4047b0
  40479a:	mov    rax,rbp
  40479d:	add    rsp,0x28
  4047a1:	pop    rbx
  4047a2:	pop    rsi
  4047a3:	pop    rdi
  4047a4:	pop    rbp
  4047a5:	ret    
  4047a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047b0:	mov    rcx,rdi
  4047b3:	call   0x404490
  4047b8:	test   eax,eax
  4047ba:	je     0x40479a
  4047bc:	movsxd rax,DWORD PTR [rdi+0x3c]
  4047c0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  4047c7:	test   edx,edx
  4047c9:	je     0x40479a
  4047cb:	mov    ebx,edx
  4047cd:	mov    rcx,rdi
  4047d0:	mov    rdx,rbx
  4047d3:	call   0x4044d0
  4047d8:	test   rax,rax
  4047db:	je     0x40479a
  4047dd:	add    rbx,rdi
  4047e0:	mov    rdx,rbx
  4047e3:	jne    0x4047f7
  4047e5:	jmp    0x40479a
  4047e7:	nop    WORD PTR [rax+rax*1+0x0]
  4047f0:	sub    esi,0x1
  4047f3:	add    rdx,0x14
  4047f7:	mov    ecx,DWORD PTR [rdx+0x4]
  4047fa:	test   ecx,ecx
  4047fc:	jne    0x404805
  4047fe:	mov    eax,DWORD PTR [rdx+0xc]
  404801:	test   eax,eax
  404803:	je     0x404820
  404805:	test   esi,esi
  404807:	jg     0x4047f0
  404809:	mov    ebp,DWORD PTR [rdx+0xc]
  40480c:	add    rbp,rdi
  40480f:	mov    rax,rbp
  404812:	add    rsp,0x28
  404816:	pop    rbx
  404817:	pop    rsi
  404818:	pop    rdi
  404819:	pop    rbp
  40481a:	ret    
  40481b:	nop    DWORD PTR [rax+rax*1+0x0]
  404820:	xor    ebp,ebp
  404822:	mov    rax,rbp
  404825:	add    rsp,0x28
  404829:	pop    rbx
  40482a:	pop    rsi
  40482b:	pop    rdi
  40482c:	pop    rbp
  40482d:	ret    
  40482e:	nop
  40482f:	nop
  404830:	push   rcx
  404831:	push   rax
  404832:	cmp    rax,0x1000
  404838:	lea    rcx,[rsp+0x18]
  40483d:	jb     0x404858
  40483f:	sub    rcx,0x1000
  404846:	or     QWORD PTR [rcx],0x0
  40484a:	sub    rax,0x1000
  404850:	cmp    rax,0x1000
  404856:	ja     0x40483f
  404858:	sub    rcx,rax
  40485b:	or     QWORD PTR [rcx],0x0
  40485f:	pop    rax
  404860:	pop    rcx
  404861:	ret    
  404862:	nop
  404863:	nop
  404864:	nop
  404865:	nop
  404866:	nop
  404867:	nop
  404868:	nop
  404869:	nop
  40486a:	nop
  40486b:	nop
  40486c:	nop
  40486d:	nop
  40486e:	nop
  40486f:	nop
  404870:	jmp    0x404928
  404875:	nop
  404876:	nop
  404877:	nop
  404878:	nop
  404879:	nop
  40487a:	nop
  40487b:	nop
  40487c:	nop
  40487d:	nop
  40487e:	nop
  40487f:	nop
  404880:	jmp    QWORD PTR [rip+0x5e2a]        # 0x40a6b0
  404886:	nop
  404887:	nop
  404888:	jmp    QWORD PTR [rip+0x5e1a]        # 0x40a6a8
  40488e:	nop
  40488f:	nop
  404890:	jmp    QWORD PTR [rip+0x5e0a]        # 0x40a6a0
  404896:	nop
  404897:	nop
  404898:	jmp    QWORD PTR [rip+0x5dfa]        # 0x40a698
  40489e:	nop
  40489f:	nop
  4048a0:	jmp    QWORD PTR [rip+0x5dea]        # 0x40a690
  4048a6:	nop
  4048a7:	nop
  4048a8:	jmp    QWORD PTR [rip+0x5dda]        # 0x40a688
  4048ae:	nop
  4048af:	nop
  4048b0:	jmp    QWORD PTR [rip+0x5dca]        # 0x40a680
  4048b6:	nop
  4048b7:	nop
  4048b8:	jmp    QWORD PTR [rip+0x5dba]        # 0x40a678
  4048be:	nop
  4048bf:	nop
  4048c0:	jmp    QWORD PTR [rip+0x5daa]        # 0x40a670
  4048c6:	nop
  4048c7:	nop
  4048c8:	jmp    QWORD PTR [rip+0x5d9a]        # 0x40a668
  4048ce:	nop
  4048cf:	nop
  4048d0:	jmp    QWORD PTR [rip+0x5d8a]        # 0x40a660
  4048d6:	nop
  4048d7:	nop
  4048d8:	jmp    QWORD PTR [rip+0x5d7a]        # 0x40a658
  4048de:	nop
  4048df:	nop
  4048e0:	jmp    QWORD PTR [rip+0x5d6a]        # 0x40a650
  4048e6:	nop
  4048e7:	nop
  4048e8:	jmp    QWORD PTR [rip+0x5d5a]        # 0x40a648
  4048ee:	nop
  4048ef:	nop
  4048f0:	jmp    QWORD PTR [rip+0x5d4a]        # 0x40a640
  4048f6:	nop
  4048f7:	nop
  4048f8:	jmp    QWORD PTR [rip+0x5d3a]        # 0x40a638
  4048fe:	nop
  4048ff:	nop
  404900:	jmp    QWORD PTR [rip+0x5d2a]        # 0x40a630
  404906:	nop
  404907:	nop
  404908:	jmp    QWORD PTR [rip+0x5d1a]        # 0x40a628
  40490e:	nop
  40490f:	nop
  404910:	jmp    QWORD PTR [rip+0x5d0a]        # 0x40a620
  404916:	nop
  404917:	nop
  404918:	jmp    QWORD PTR [rip+0x5cfa]        # 0x40a618
  40491e:	nop
  40491f:	nop
  404920:	jmp    QWORD PTR [rip+0x5cea]        # 0x40a610
  404926:	nop
  404927:	nop
  404928:	jmp    QWORD PTR [rip+0x5cda]        # 0x40a608
  40492e:	nop
  40492f:	nop
  404930:	jmp    QWORD PTR [rip+0x5cca]        # 0x40a600
  404936:	nop
  404937:	nop
  404938:	jmp    QWORD PTR [rip+0x5cba]        # 0x40a5f8
  40493e:	nop
  40493f:	nop
  404940:	jmp    QWORD PTR [rip+0x5caa]        # 0x40a5f0
  404946:	nop
  404947:	nop
  404948:	jmp    QWORD PTR [rip+0x5c9a]        # 0x40a5e8
  40494e:	nop
  40494f:	nop
  404950:	jmp    QWORD PTR [rip+0x5c82]        # 0x40a5d8
  404956:	nop
  404957:	nop
  404958:	jmp    QWORD PTR [rip+0x5c72]        # 0x40a5d0
  40495e:	nop
  40495f:	nop
  404960:	jmp    QWORD PTR [rip+0x5c62]        # 0x40a5c8
  404966:	nop
  404967:	nop
  404968:	jmp    QWORD PTR [rip+0x5c4a]        # 0x40a5b8
  40496e:	nop
  40496f:	nop
  404970:	jmp    QWORD PTR [rip+0x5c3a]        # 0x40a5b0
  404976:	nop
  404977:	nop
  404978:	jmp    QWORD PTR [rip+0x5c2a]        # 0x40a5a8
  40497e:	nop
  40497f:	nop
  404980:	jmp    QWORD PTR [rip+0x5c1a]        # 0x40a5a0
  404986:	nop
  404987:	nop
  404988:	jmp    QWORD PTR [rip+0x5c02]        # 0x40a590
  40498e:	nop
  40498f:	nop
  404990:	jmp    QWORD PTR [rip+0x5bf2]        # 0x40a588
  404996:	nop
  404997:	nop
  404998:	jmp    QWORD PTR [rip+0x5be2]        # 0x40a580
  40499e:	nop
  40499f:	nop
  4049a0:	mov    rax,QWORD PTR [rip+0x5049]        # 0x4099f0
  4049a7:	ret    
  4049a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049b0:	mov    rax,rcx
  4049b3:	xchg   QWORD PTR [rip+0x5036],rax        # 0x4099f0
  4049ba:	ret    
  4049bb:	nop
  4049bc:	nop
  4049bd:	nop
  4049be:	nop
  4049bf:	nop
  4049c0:	jmp    QWORD PTR [rip+0x5baa]        # 0x40a570
  4049c6:	nop
  4049c7:	nop
  4049c8:	jmp    QWORD PTR [rip+0x5b9a]        # 0x40a568
  4049ce:	nop
  4049cf:	nop
  4049d0:	jmp    QWORD PTR [rip+0x5b8a]        # 0x40a560
  4049d6:	nop
  4049d7:	nop
  4049d8:	jmp    QWORD PTR [rip+0x5b7a]        # 0x40a558
  4049de:	nop
  4049df:	nop
  4049e0:	jmp    QWORD PTR [rip+0x5b6a]        # 0x40a550
  4049e6:	nop
  4049e7:	nop
  4049e8:	jmp    QWORD PTR [rip+0x5b5a]        # 0x40a548
  4049ee:	nop
  4049ef:	nop
  4049f0:	jmp    QWORD PTR [rip+0x5b4a]        # 0x40a540
  4049f6:	nop
  4049f7:	nop
  4049f8:	jmp    QWORD PTR [rip+0x5b3a]        # 0x40a538
  4049fe:	nop
  4049ff:	nop
  404a00:	jmp    QWORD PTR [rip+0x5b2a]        # 0x40a530
  404a06:	nop
  404a07:	nop
  404a08:	jmp    QWORD PTR [rip+0x5b1a]        # 0x40a528
  404a0e:	nop
  404a0f:	nop
  404a10:	jmp    QWORD PTR [rip+0x5b0a]        # 0x40a520
  404a16:	nop
  404a17:	nop
  404a18:	jmp    QWORD PTR [rip+0x5afa]        # 0x40a518
  404a1e:	nop
  404a1f:	nop
  404a20:	jmp    QWORD PTR [rip+0x5aea]        # 0x40a510
  404a26:	nop
  404a27:	nop
  404a28:	jmp    QWORD PTR [rip+0x5ada]        # 0x40a508
  404a2e:	nop
  404a2f:	nop
  404a30:	jmp    QWORD PTR [rip+0x5aca]        # 0x40a500
  404a36:	nop
  404a37:	nop
  404a38:	jmp    QWORD PTR [rip+0x5aba]        # 0x40a4f8
  404a3e:	nop
  404a3f:	nop
  404a40:	jmp    QWORD PTR [rip+0x5aaa]        # 0x40a4f0
  404a46:	nop
  404a47:	nop
  404a48:	jmp    QWORD PTR [rip+0x5a9a]        # 0x40a4e8
  404a4e:	nop
  404a4f:	nop
  404a50:	jmp    QWORD PTR [rip+0x5a8a]        # 0x40a4e0
  404a56:	nop
  404a57:	nop
  404a58:	jmp    QWORD PTR [rip+0x5a7a]        # 0x40a4d8
  404a5e:	nop
  404a5f:	nop
  404a60:	jmp    QWORD PTR [rip+0x5a6a]        # 0x40a4d0
  404a66:	nop
  404a67:	nop
  404a68:	jmp    QWORD PTR [rip+0x5a5a]        # 0x40a4c8
  404a6e:	nop
  404a6f:	nop
  404a70:	jmp    QWORD PTR [rip+0x5a4a]        # 0x40a4c0
  404a76:	nop
  404a77:	nop
  404a78:	nop    DWORD PTR [rax+rax*1+0x0]
  404a80:	(bad)  
  404a81:	(bad)  
  404a82:	(bad)  
  404a83:	(bad)  
  404a84:	(bad)  
  404a85:	(bad)  
  404a86:	(bad)  
  404a87:	inc    DWORD PTR [rax]
  404a89:	add    BYTE PTR [rax],al
  404a8b:	add    BYTE PTR [rax],al
  404a8d:	add    BYTE PTR [rax],al
  404a8f:	add    bh,bh
  404a91:	(bad)  
  404a92:	(bad)  
  404a93:	(bad)  
  404a94:	(bad)  
  404a95:	(bad)  
  404a96:	(bad)  
  404a97:	inc    DWORD PTR [rax]
  404a99:	add    BYTE PTR [rax],al
  404a9b:	add    BYTE PTR [rax],al
  404a9d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	add    DWORD PTR [rax],eax
	...
  40501e:	add    BYTE PTR [rax],al
  405020:	cwde   
  405021:	rex.WX
  405022:	add    BYTE PTR [rax],al
	...
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
  405031:	(bad)  
  405032:	(bad)  
  405033:	(bad)  
  405034:	(bad)  
  405035:	(bad)  
  405036:	(bad)  
  405037:	inc    DWORD PTR [rax]
  405039:	add    BYTE PTR [rax],al
  40503b:	add    BYTE PTR [rax],al
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    bh,bh
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    BYTE PTR [rdx],al
	...
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    bh,bh
  405061:	(bad)  
  405062:	(bad)  
  405063:	inc    DWORD PTR [rax]
	...
  40506d:	add    BYTE PTR [rax],al
  40506f:	add    BYTE PTR [rax+0x4049],ah
  405075:	add    BYTE PTR [rax],al
  405077:	add    BYTE PTR [rax+0x4049],dh
  40507d:	add    BYTE PTR [rax],al
  40507f:	add    BYTE PTR [rdx],dh
  405081:	movabs ds:0x2b992ddf,al
  40508a:	add    BYTE PTR [rax],al
  40508c:	add    BYTE PTR [rax],al
  40508e:	add    BYTE PTR [rax],al
  405090:	int    0x5d
  405092:	and    dl,dl
  405094:	data16 (bad) 
  405096:	(bad)  
  405097:	inc    DWORD PTR [rax]
  405099:	add    BYTE PTR [rax],al
  40509b:	add    BYTE PTR [rax],al
  40509d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
  406008:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  40600c:	add    BYTE PTR [rdi+0x72],ch
  40600f:	addr32 cs data16 jb 0x406079
  406014:	gs fs gs jae 0x406084
  406019:	je     0x40608a
  40601b:	jo     0x40604b
  40601d:	rex.R
  40601e:	rex.X jne 0x406094
  406021:	rex.WR outs dx,DWORD PTR cs:[rsi]
  406024:	movsxd esp,DWORD PTR [rcx+0x6c]
  406027:	add    BYTE PTR [rbx],ah
  406029:	je     0x4060a4
  40602b:	jo     0x406092
  40602d:	or     DWORD PTR [rcx+rbp*2+0x6d],esi
  406031:	gs jae 0x4060a8
  406034:	(bad)  
  406035:	ins    DWORD PTR es:[rdi],dx
  406036:	jo     0x406041
  406038:	jae    0x40609f
  40603a:	jb     0x4060a5
  40603c:	(bad)  
  40603d:	ins    BYTE PTR es:[rdi],dx
  40603e:	or     DWORD PTR [rbx+0x65],esi
  406041:	outs   dx,BYTE PTR ds:[rsi]
  406042:	fs gs jb 0x40604f
  406046:	fs gs jae 0x4060be
  40604a:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  406051:	or     DWORD PTR [rax+0x61],esi
  406054:	je     0x4060be
  406056:	or     DWORD PTR [rcx+0x6e],ebp
  406059:	je     0x4060c0
  40605b:	jb     0x4060c3
  40605d:	(bad)  
  40605e:	movsxd esp,DWORD PTR [rbp+0x9]
  406061:	ins    DWORD PTR es:[rdi],dx
  406062:	gs ins DWORD PTR es:[rdi],dx
  406064:	(bad)  
  406065:	gs jb  0x406068
  406068:	and    ecx,DWORD PTR [rcx]
  40606a:	or     DWORD PTR [rcx],ecx
  40606c:	or     DWORD PTR [rcx],ecx
  40606e:	imul   ebp,DWORD PTR [rsi+0x5f],0x6c706572
  406075:	jns    0x4060d6
  406077:	je     0x4060e8
  406079:	add    BYTE PTR [rip+0x6c250973],ah        # 0x6c6569f2
  40607f:	fs cs and eax,0x646c3630
  406086:	add    BYTE PTR [rcx],cl
  406088:	and    eax,0x6e3c0075
  40608d:	outs   dx,DWORD PTR ds:[rsi]
  40608e:	outs   dx,BYTE PTR ds:[rsi]
  40608f:	gs add BYTE PTR ds:[rcx],cl
  406093:	and    eax,0x636d0073
  406098:	add    BYTE PTR [rbp+0x72],ch
  40609b:	add    BYTE PTR [rbp+0x72],ah
  40609e:	jb     0x4060a0
  4060a0:	jae    0x40610b
  4060a2:	add    BYTE PTR [ebp+esi*2+0x6e],dh
  4060a7:	add    BYTE PTR [rdx+0x65],dh
  4060aa:	je     0x40611e
  4060ac:	imul   esp,DWORD PTR [rbp+0x76],0x20676e69
  4060b3:	ins    DWORD PTR es:[rdi],dx
  4060b4:	gs jae 0x40612a
  4060b7:	(bad)  
  4060b8:	add    BYTE PTR gs:[edx+eiz*2+0x75],ah
  4060be:	jae    0x4060ed
  4060c0:	ins    DWORD PTR es:[rdi],dx
  4060c1:	outs   dx,DWORD PTR ds:[rsi]
  4060c2:	outs   dx,BYTE PTR ds:[rsi]
  4060c3:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x7277203a
  4060cb:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x61735500
  4060d3:	cmp    ah,BYTE PTR gs:[eax]
  4060d7:	and    eax,0x2d5b2073
  4060dc:	sub    eax,0x74737973
  4060e1:	gs ins DWORD PTR es:[rdi],dx
  4060e3:	and    BYTE PTR [rax+riz*1+0x2d],bh
  4060e7:	sub    eax,0x73736573
  4060ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d207c20
  4060f3:	sub    eax,0x72646461
  4060f8:	gs jae 0x40616e
  4060fb:	and    BYTE PTR [rcx+0x44],al
  4060fe:	rex.R push rdx
  406100:	rex.RB push r11
  406102:	push   rbx
  406103:	pop    rbp
  406104:	and    BYTE PTR [rbx+0x2d],bl
  406107:	sub    eax,0x696e6f6d
  40610c:	je     0x40617d
  40610e:	jb     0x406130
  406110:	jl     0x406132
  406112:	sub    eax,0x6f72702d
  406117:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x207c
  40611e:	sub    eax,0x6163702d
  406123:	jo     0x406145
  406125:	jl     0x406147
  406127:	sub    eax,0x6e69622d
  40612c:	(bad)  
  40612d:	jb     0x4061a8
  40612f:	and    BYTE PTR [rbp+0x20],bl
  406132:	pop    rbx
  406133:	ja     0x406196
  406135:	je     0x40619a
  406137:	push   0x70786520
  40613c:	jb     0x4061a3
  40613e:	jae    0x4061b3
  406140:	imul   ebp,DWORD PTR [rdi+0x6e],0xa5d73
  406147:	add    BYTE PTR [rcx+0x20],cl
  40614a:	outs   dx,DWORD PTR ds:[rsi]
  40614b:	outs   dx,BYTE PTR ds:[rsi]
  40614c:	ins    BYTE PTR es:[rdi],dx
  40614d:	jns    0x40616f
  40614f:	jae    0x4061c6
  406151:	jo     0x4061c3
  406153:	outs   dx,DWORD PTR ds:[rsi]
  406154:	jb     0x4061ca
  406156:	and    BYTE PTR [rbp+0x6f],ch
  406159:	outs   dx,BYTE PTR ds:[rsi]
  40615a:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x20676e69
  406162:	outs   dx,DWORD PTR ds:[rsi]
  406163:	outs   dx,BYTE PTR ds:[rsi]
  406164:	and    BYTE PTR gs:[rdx+0x75],ah
  406168:	jae    0x40618a
  40616a:	(bad)  
  40616b:	je     0x40618d
  40616d:	(bad)  
  40616e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  406172:	and    DWORD PTR gs:[rdx],ecx
  406175:	add    BYTE PTR [rdx+0x65],al
  406178:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40617b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  40617e:	outs   dx,BYTE PTR ds:[rsi]
  40617f:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x0
  406187:	add    BYTE PTR [rdi+0x72],ch
  40618a:	addr32 cs data16 jb 0x4061f4
  40618f:	gs fs gs jae 0x4061ff
  406194:	je     0x406205
  406196:	jo     0x4061c6
  406198:	rex.R
  406199:	rex.X jne 0x40620f
  40619c:	rex.WRB outs dx,DWORD PTR cs:[rsi]
  40619f:	outs   dx,BYTE PTR ds:[rsi]
  4061a0:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x676e69
  4061a8:	(bad)  
  4061a9:	outs   dx,DWORD PTR ds:[rsi]
  4061aa:	jb     0x406213
  4061ac:	(bad)  
  4061ad:	data16 jb 0x406215
  4061b0:	gs fs gs jae 0x406220
  4061b5:	je     0x406226
  4061b7:	jo     0x4061e8
  4061b9:	rex.R
  4061ba:	rex.X jne 0x406230
  4061bd:	add    BYTE PTR [rdi+0x72],ch
  4061c0:	addr32 cs data16 jb 0x40622a
  4061c5:	gs fs gs jae 0x406235
  4061ca:	je     0x40623b
  4061cc:	jo     0x4061fc
  4061ce:	rex.R
  4061cf:	rex.X jne 0x406245
  4061d2:	add    BYTE PTR [rdx+0x65],ah
  4061d5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4061d8:	imul   ebp,DWORD PTR [rsi+0x67],0x6d206120
  4061df:	outs   dx,DWORD PTR ds:[rsi]
  4061e0:	outs   dx,BYTE PTR ds:[rsi]
  4061e1:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6f007300
  4061e9:	jo     0x406250
  4061eb:	outs   dx,BYTE PTR ds:[rsi]
  4061ec:	imul   ebp,DWORD PTR [rsi+0x67],0x72747320
  4061f3:	imul   ebp,DWORD PTR [rsi+0x67],0x72726120
  4061fa:	(bad)  
  4061fb:	jns    0x4061fd
  4061fd:	(bad)  
  4061fe:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  406207:	je     0x40626e
  406209:	jb     0x40622b
  40620b:	je     0x40627c
  40620d:	and    BYTE PTR [rcx+0x72],ah
  406210:	jb     0x406273
  406212:	jns    0x406214
  406214:	imul   bp,WORD PTR [rsi+0x69],0x6873
  40621a:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  406221:	jne    0x406290
  406223:	outs   dx,BYTE PTR gs:[rsi]
  406225:	je     0x40629a
  406227:	add    BYTE PTR [rdi+0x72],ch
  40622a:	addr32 cs data16 jb 0x406294
  40622f:	gs fs gs jae 0x40629f
  406234:	je     0x4062a5
  406236:	jo     0x406266
  406238:	rex.R
  406239:	rex.X jne 0x4062af
  40623c:	cs rex.RB jb 0x4062b2
  406240:	outs   dx,DWORD PTR ds:[rsi]
  406241:	jb     0x406271
  406243:	push   rbp
  406244:	outs   dx,BYTE PTR ds:[rsi]
  406245:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406249:	outs   dx,BYTE PTR ds:[rsi]
  40624a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40624c:	je     0x4062b3
  40624e:	jb     0x4062b6
  406250:	(bad)  
  406251:	movsxd esp,DWORD PTR [rbp+0x0]
  406254:	add    BYTE PTR [rax],al
  406256:	add    BYTE PTR [rax],al
  406258:	fs (bad) 
  40625a:	jne    0x4062cf
  40625c:	sub    eax,0x696e6f6d
  406261:	je     0x4062d2
  406263:	jb     0x40629f
  406265:	and    BYTE PTR [rbp+0x6e],dh
  406268:	(bad)  
  406269:	(bad)  
  40626a:	ins    BYTE PTR es:[rdi],dx
  40626b:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  406270:	outs   dx,BYTE PTR gs:[rsi]
  406272:	(bad)  
  406273:	(bad)  
  406274:	ins    BYTE PTR es:[rdi],dx
  406275:	and    BYTE PTR gs:[rsi+0x65],ch
  406279:	ja     0x4062a8
  40627b:	jae    0x4062f1
  40627d:	jns    0x4062eb
  40627f:	and    BYTE PTR gs:[rbp+0x6f],ch
  406283:	outs   dx,BYTE PTR ds:[rsi]
  406284:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x2c676e69
  40628c:	and    BYTE PTR [rcx+0x6f],bh
  40628f:	jne    0x406303
  406291:	and    BYTE PTR [rdx+riz*2+0x75],ah
  406295:	jae    0x4062c4
  406297:	fs (bad) 
  406299:	gs ins DWORD PTR es:[rdi],dx
  40629b:	outs   dx,DWORD PTR ds:[rsi]
  40629c:	outs   dx,BYTE PTR ds:[rsi]
  40629d:	and    BYTE PTR [rcx+0x73],ch
  4062a0:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4062a4:	and    BYTE PTR [rdi+0x6c],ch
  4062a7:	fs and BYTE PTR cs:[rsi+0x61],al
  4062ac:	ins    BYTE PTR es:[rdi],dx
  4062ad:	ins    BYTE PTR es:[rdi],dx
  4062ae:	imul   ebp,DWORD PTR [rsi+0x67],0x63616220
  4062b5:	imul   esp,DWORD PTR [rax],0x74
  4062b8:	outs   dx,DWORD PTR ds:[rsi]
  4062b9:	and    BYTE PTR [rbp+0x61],ah
  4062bc:	jbe    0x406323
  4062be:	jae    0x406324
  4062c0:	jb     0x406331
  4062c2:	jo     0x406334
  4062c4:	imul   ebp,DWORD PTR [rsi+0x67],0xa2e
  4062cb:	add    BYTE PTR [rax],al
  4062cd:	add    BYTE PTR [rax],al
  4062cf:	add    BYTE PTR [rdx+riz*2+0x75],ah
  4062d3:	jae    0x406302
  4062d5:	ins    DWORD PTR es:[rdi],dx
  4062d6:	outs   dx,DWORD PTR ds:[rsi]
  4062d7:	outs   dx,BYTE PTR ds:[rsi]
  4062d8:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6e75203a
  4062e0:	(bad)  
  4062e1:	(bad)  
  4062e2:	ins    BYTE PTR es:[rdi],dx
  4062e3:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4062e8:	outs   dx,BYTE PTR gs:[rsi]
  4062ea:	(bad)  
  4062eb:	(bad)  
  4062ec:	ins    BYTE PTR es:[rdi],dx
  4062ed:	and    BYTE PTR gs:[rsi+0x65],ch
  4062f1:	ja     0x406320
  4062f3:	jae    0x406369
  4062f5:	jns    0x406363
  4062f7:	and    BYTE PTR gs:[rbp+0x6f],ch
  4062fb:	outs   dx,BYTE PTR ds:[rsi]
  4062fc:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x3a676e69
  406304:	and    BYTE PTR [rip+0x22203a73],ah        # 0x22609d7d
  40630a:	and    eax,0x202e2273
  40630f:	rex.RX (bad) 
  406311:	ins    BYTE PTR es:[rdi],dx
  406312:	ins    BYTE PTR es:[rdi],dx
  406313:	imul   ebp,DWORD PTR [rsi+0x67],0x63616220
  40631a:	imul   esp,DWORD PTR [rax],0x74
  40631d:	outs   dx,DWORD PTR ds:[rsi]
  40631e:	and    BYTE PTR [rbp+0x61],ah
  406321:	jbe    0x406388
  406323:	jae    0x406389
  406325:	jb     0x406396
  406327:	jo     0x406399
  406329:	imul   ebp,DWORD PTR [rsi+0x67],0x2d000a2e
  406330:	sub    eax,0x74737973
  406335:	gs ins DWORD PTR es:[rdi],dx
  406337:	add    BYTE PTR [rip+0x7365732d],ch        # 0x73a5d66a
  40633d:	jae    0x4063a8
  40633f:	outs   dx,DWORD PTR ds:[rsi]
  406340:	outs   dx,BYTE PTR ds:[rsi]
  406341:	add    BYTE PTR [rip+0x6464612d],ch        # 0x64a4c474
  406347:	jb     0x4063ae
  406349:	jae    0x4063be
  40634b:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca5cb7e
  406351:	jo     0x406353
  406353:	sub    eax,0x6e6f6d2d
  406358:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x702d2d00
  406360:	jb     0x4063d1
  406362:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x2d2d
  406369:	(bad)  
  40636a:	imul   ebp,DWORD PTR [rsi+0x61],0x2d007972
  406371:	sub    eax,0x70616370
  406376:	add    BYTE PTR [rip+0x6461002d],ch        # 0x64a163a9
  40637c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e206120
  406384:	gs ja  0x4063a7
  406387:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2072
  40638e:	jae    0x4063fc
  406390:	outs   dx,DWORD PTR ds:[rsi]
  406391:	je     0x406393
  406393:	(bad)  
  406394:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6e206120
  40639d:	gs ja  0x4063c0
  4063a0:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  4063a7:	gs (bad) 
  4063a9:	jbe    0x406410
  4063ab:	jae    0x406411
  4063ad:	jb     0x40641e
  4063af:	jo     0x4063ee
  4063b1:	je     0x406425
  4063b3:	jne    0x40641a
  4063b5:	add    BYTE PTR [rip+0x73252c73],ah        # 0x7365902e
  4063bb:	add    BYTE PTR [rax],al
  4063bd:	add    BYTE PTR [rax],al
  4063bf:	add    BYTE PTR [rsi+0x61],al
  4063c2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4063ca:	jb     0x406431
  4063cc:	imul   esi,DWORD PTR [ebx+0x74],0x63207265
  4063d4:	outs   dx,DWORD PTR ds:[rsi]
  4063d5:	outs   dx,BYTE PTR ds:[rsi]
  4063d6:	outs   dx,BYTE PTR ds:[rsi]
  4063d7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4063dc:	outs   dx,BYTE PTR ds:[rsi]
  4063dd:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4063e1:	(bad)  
  4063e2:	jne    0x406457
  4063e4:	and    BYTE PTR [rcx+0x74],ah
  4063e7:	and    BYTE PTR [rip+0x25203a73],ah        # 0x25609e60
  4063ed:	jae    0x4063f9
  4063ef:	add    BYTE PTR [rbx+0x79],dh
  4063f2:	jae    0x406468
  4063f4:	gs ins DWORD PTR es:[rdi],dx
  4063f6:	and    BYTE PTR [rdx+0x75],ah
  4063f9:	jae    0x4063fb
  4063fb:	jae    0x406462
  4063fd:	jae    0x406472
  4063ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x73756220
  406406:	add    BYTE PTR [rax],al
  406408:	rex.RX (bad) 
  40640a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  406412:	outs   dx,DWORD PTR ds:[rsi]
  406413:	jo     0x40647a
  406415:	outs   dx,BYTE PTR ds:[rsi]
  406416:	and    BYTE PTR [rbx+0x6f],ah
  406419:	outs   dx,BYTE PTR ds:[rsi]
  40641a:	outs   dx,BYTE PTR ds:[rsi]
  40641b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  406420:	outs   dx,BYTE PTR ds:[rsi]
  406421:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406425:	and    eax,0x25203a73
  40642a:	jae    0x406436
  40642c:	add    BYTE PTR [rbx+0x6f],al
  40642f:	jne    0x40649d
  406431:	outs   dx,BYTE PTR fs:[rsi]
  406433:	(bad)  
  406434:	je     0x406456
  406436:	(bad)  
  406437:	fs and BYTE PTR fs:[rsi+0x69],ah
  40643c:	ins    BYTE PTR es:[rdi],dx
  40643d:	je     0x4064a4
  40643f:	jb     0x406462
  406441:	or     al,BYTE PTR [rax]
  406443:	add    BYTE PTR [rax],al
  406445:	add    BYTE PTR [rax],al
  406447:	add    BYTE PTR [rsi+0x61],al
  40644a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  406452:	jae    0x4064b9
  406454:	je     0x4064cb
  406456:	jo     0x406478
  406458:	ins    DWORD PTR es:[rdi],dx
  406459:	(bad)  
  40645a:	je     0x4064bf
  40645c:	push   0x73252220
  406461:	and    bh,BYTE PTR [rdx]
  406463:	and    BYTE PTR [rip+0x45000a73],ah        # 0x45406edc
  406469:	jb     0x4064dd
  40646b:	outs   dx,DWORD PTR ds:[rsi]
  40646c:	jb     0x4064a8
  40646e:	and    BYTE PTR [rip+0xa73],ah        # 0x406ee7
	...
  406480:	jae    0x4064eb
  406482:	outs   dx,BYTE PTR ds:[esi]
  406484:	(bad)  
  406485:	ins    BYTE PTR es:[rdi],dx
  406486:	add    BYTE PTR [rbp+0x65],ch
  406489:	je     0x4064f3
  40648b:	outs   dx,DWORD PTR ds:[rsi]
  40648c:	and    BYTE PTR fs:[rbx+0x61],ah
  406490:	ins    BYTE PTR es:[rdi],dx
  406491:	ins    BYTE PTR es:[rdi],dx
  406492:	add    BYTE PTR [rbp+0x65],ch
  406495:	je     0x4064ff
  406497:	outs   dx,DWORD PTR ds:[rsi]
  406498:	and    BYTE PTR fs:[rdx+0x65],dh
  40649c:	je     0x406513
  40649e:	jb     0x40650e
  4064a0:	add    BYTE PTR [rbp+0x72],ah
  4064a3:	jb     0x406514
  4064a5:	jb     0x4064a7
  4064a7:	sub    BYTE PTR [rbp+0x6e],dh
  4064aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4064ae:	outs   dx,BYTE PTR ds:[rsi]
  4064af:	and    BYTE PTR [rbp+0x65],ch
  4064b2:	jae    0x406527
  4064b4:	(bad)  
  4064b5:	and    BYTE PTR gs:[ecx+edi*2+0x70],dh
  4064bb:	sub    DWORD PTR gs:[rax],eax
  4064be:	and    BYTE PTR [rax],ah
  4064c0:	and    BYTE PTR [rax],al
  4064c2:	(bad)  
  4064c3:	jb     0x406537
  4064c5:	(bad)  
  4064c6:	jns    0x4064e8
  4064c8:	outs   dx,DWORD PTR ds:[rsi]
  4064c9:	data16 and BYTE PTR [rdx+0x79],ah
  4064cd:	je     0x406534
  4064cf:	jae    0x4064f1
  4064d1:	pop    rbx
  4064d2:	add    BYTE PTR [rip+0x783230],ah        # 0xb89708
  4064d8:	pop    rbp
  4064d9:	add    BYTE PTR [rcx+0x72],ah
  4064dc:	jb     0x40653f
  4064de:	jns    0x406500
  4064e0:	outs   dx,DWORD PTR ds:[rsi]
  4064e1:	data16 and BYTE PTR [rdx+0x79],ah
  4064e5:	je     0x40654c
  4064e7:	jae    0x406509
  4064e9:	and    ah,BYTE PTR [rip+0x2b202273]        # 0x2b608762
  4064ef:	and    BYTE PTR [rax+rsi*1+0xa],bl
  4064f3:	add    BYTE PTR [rbx+0x6f],ah
  4064f6:	jo     0x406571
  4064f8:	imul   ebp,DWORD PTR [rsi+0x67],0x74796220
  4064ff:	gs jae 0x406576
  406502:	jb     0x40656d
  406504:	outs   dx,BYTE PTR ds:[rsi]
  406505:	add    BYTE PTR [ecx+0x72],ah
  406509:	jb     0x40656c
  40650b:	jns    0x40652d
  40650d:	outs   dx,DWORD PTR ds:[rsi]
  40650e:	data16 and BYTE PTR [rdx+0x79],ah
  406512:	je     0x406579
  406514:	jae    0x406536
  406516:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4a878f
  40651c:	jae    0x406592
  40651e:	jb     0x406589
  406520:	outs   dx,BYTE PTR ds:[rsi]
  406521:	and    BYTE PTR [edx],ah
  406524:	add    BYTE PTR [rip+0x220073],ah        # 0x62659d
  40652a:	jae    0x406595
  40652c:	outs   dx,BYTE PTR ds:[esi]
  40652e:	(bad)  
  40652f:	je     0x4065a6
  406531:	jb     0x406598
  406533:	and    BYTE PTR [rdx],ah
  406535:	add    BYTE PTR [rdi+0x62],ch
  406538:	push   0x65
  40653a:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  40653e:	(bad)  
  40653f:	je     0x4065a9
  406541:	and    BYTE PTR [rdx],ah
  406543:	add    BYTE PTR [rcx+0x6e],ch
  406546:	je     0x406579
  406548:	and    BYTE PTR ss:[rip+0x75000a64],ah        # 0x75406fb3
  40654f:	imul   ebp,DWORD PTR [rsi+0x74],0x25203631
  406556:	jne    0x406562
  406558:	add    BYTE PTR [rcx+0x6e],ch
  40655b:	je     0x406590
  40655d:	xor    ah,BYTE PTR [rax]
  40655f:	and    eax,0x75000a64
  406564:	imul   ebp,DWORD PTR [rsi+0x74],0x25203233
  40656b:	jne    0x406577
  40656d:	add    BYTE PTR [rcx+0x6e],ch
  406570:	je     0x4065a8
  406572:	xor    al,0x20
  406574:	sub    BYTE PTR [rdi+0x6d],ch
  406577:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x75002964
  40657f:	imul   ebp,DWORD PTR [rsi+0x74],0x28203436
  406586:	outs   dx,DWORD PTR ds:[rsi]
  406587:	ins    DWORD PTR es:[rdi],dx
  406588:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x64002964
  406590:	outs   dx,DWORD PTR ds:[rsi]
  406591:	jne    0x4065f5
  406593:	ins    BYTE PTR es:[rdi],dx
  406594:	and    BYTE PTR gs:[rip+0x62000a67],ah        # 0x62407002
  40659b:	jns    0x406611
  40659d:	and    BYTE PTR gs:[rip+0x74000a64],ah        # 0x74407008
  4065a4:	jb     0x40661b
  4065a6:	add    BYTE PTR gs:[rsi+0x61],ah
  4065aa:	ins    BYTE PTR es:[rdi],dx
  4065ab:	jae    0x406612
  4065ad:	add    BYTE PTR [rdx+0x6f],ah
  4065b0:	outs   dx,DWORD PTR ds:[rsi]
  4065b1:	ins    BYTE PTR es:[rdi],dx
  4065b2:	gs (bad) 
  4065b4:	outs   dx,BYTE PTR ds:[rsi]
  4065b5:	and    BYTE PTR [rip+0x76000a73],ah        # 0x7640702e
  4065bb:	(bad)  
  4065bc:	jb     0x406627
  4065be:	(bad)  
  4065bf:	outs   dx,BYTE PTR ds:[rsi]
  4065c0:	je     0x4065e2
  4065c2:	add    BYTE PTR [rcx+0x72],ah
  4065c5:	jb     0x406628
  4065c7:	jns    0x4065e9
  4065c9:	pop    rbx
  4065ca:	add    BYTE PTR [rcx+rbp*2+0x63],ah
  4065ce:	je     0x4065f0
  4065d0:	outs   dx,BYTE PTR gs:[rsi]
  4065d2:	je     0x406646
  4065d4:	jns    0x4065fe
  4065d6:	add    BYTE PTR [rcx],ch
  4065d8:	add    BYTE PTR [rbx+0x74],dh
  4065db:	jb     0x406652
  4065dd:	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
  4065e1:	add    BYTE PTR [rbp+0x0],bh
  4065e4:	add    BYTE PTR [rax],al
  4065e6:	add    BYTE PTR [rax],al
  4065e8:	and    BYTE PTR [rax],ch
  4065ea:	fs (bad) 
  4065ec:	jne    0x406661
  4065ee:	sub    eax,0x696e6f6d
  4065f3:	je     0x406664
  4065f5:	jb     0x406617
  4065f7:	je     0x406668
  4065f9:	outs   dx,DWORD PTR ds:[rsi]
  4065fa:	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  4065fe:	(bad)  
  4065ff:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406603:	fs movsxd ebp,DWORD PTR gs:[rcx+0x70]
  406608:	push   0x61207265
  40660d:	jb     0x406676
  40660f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  406613:	and    BYTE PTR gs:[rdi],ah
  406616:	and    eax,0xa292763
  40661b:	add    BYTE PTR [rcx-0x3a],bh
  40661e:	(bad)  
  40661f:	push   rbp
  406621:	(bad)  
  406624:	js     0x4065ee
  406626:	(bad)  
  406627:	inc    DWORD PTR [rbx+0x47ffffc5]
  40662d:	(bad)  
  40662e:	(bad)  
  40662f:	(bad)  
  406630:	js     0x4065fa
  406632:	(bad)  
  406633:	jmp    rbx
  406635:	ret    
  406636:	(bad)  
  406637:	(bad)  
  406638:	js     0x406602
  40663a:	(bad)  
  40663b:	jmp    rcx
  40663d:	(bad)  
  40663e:	(bad)  
  40663f:	(bad)  
  406640:	js     0x40660a
  406642:	(bad)  
  406643:	(bad)  
  406644:	js     0x40660e
  406646:	(bad)  
  406647:	(bad)  
  406648:	js     0x406612
  40664a:	(bad)  
  40664b:	(bad)  
  40664c:	js     0x406616
  40664e:	(bad)  
  40664f:	inc    DWORD PTR [rbp+0x34ffffc4]
  406655:	(bad)  
  406656:	(bad)  
  406657:	(bad)  
  406658:	js     0x406622
  40665a:	(bad)  
  40665b:	push   QWORD PTR [rdx-0x3000003c]
  406661:	(bad)  
  406662:	(bad)  
  406663:	call   QWORD PTR [rdx+0x5dffffc3]
  406669:	(bad)  
  40666c:	or     al,0xc5
  40666e:	(bad)  
  40666f:	push   QWORD PTR [rip+0x78ffffc6]        # 0x7940663b
  406675:	enter  0xffff,0x37
  406679:	(bad)  
  40667c:	mov    ch,0xff
  40667f:	jmp    FWORD PTR [rax]
  406681:	outs   dx,BYTE PTR ds:[rsi]
  406682:	jne    0x4066f0
  406684:	ins    BYTE PTR es:[rdi],dx
  406685:	and    BYTE PTR [rbp+riz*2+0x73],ah
  406689:	je     0x4066f4
  40668b:	outs   dx,BYTE PTR ds:[rsi]
  40668c:	(bad)  
  40668d:	je     0x4066f8
  40668f:	outs   dx,DWORD PTR ds:[rsi]
  406690:	outs   dx,BYTE PTR ds:[rsi]
  406691:	sub    DWORD PTR [rax],eax
  406693:	sub    BYTE PTR [rsi+0x75],ch
  406696:	ins    BYTE PTR es:[rdi],dx
  406697:	ins    BYTE PTR es:[rdi],dx
  406698:	and    BYTE PTR [rbx+0x65],dh
  40669b:	outs   dx,BYTE PTR ds:[rsi]
  40669c:	fs gs jb 0x4066c9
	...
  4066a8:	and    eax,0x69742073
  4066ad:	ins    DWORD PTR es:[rdi],dx
  4066ae:	gs cmp eax,0x2e646c25
  4066b4:	and    eax,0x646c3630
  4066b9:	and    BYTE PTR [rbx+0x65],dh
  4066bc:	outs   dx,BYTE PTR ds:[rsi]
  4066bd:	fs gs jb 0x4066fe
  4066c1:	and    eax,0x3e2d2073
  4066c6:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4066ca:	je     0x406735
  4066cc:	outs   dx,BYTE PTR ds:[rsi]
  4066cd:	(bad)  
  4066ce:	je     0x406739
  4066d0:	outs   dx,DWORD PTR ds:[rsi]
  4066d1:	outs   dx,BYTE PTR ds:[rsi]
  4066d2:	cmp    eax,0x7325
  4066d7:	add    BYTE PTR [rip+0x65732073],ah        # 0x65b38750
  4066dd:	outs   dx,BYTE PTR ds:[rsi]
  4066de:	fs gs jb 0x40671f
  4066e2:	and    eax,0x3e2d2073
  4066e7:	and    BYTE PTR [rbp+riz*2+0x73],ah
  4066eb:	je     0x406756
  4066ed:	outs   dx,BYTE PTR ds:[rsi]
  4066ee:	(bad)  
  4066ef:	je     0x40675a
  4066f1:	outs   dx,DWORD PTR ds:[rsi]
  4066f2:	outs   dx,BYTE PTR ds:[rsi]
  4066f3:	cmp    eax,0x7325
  4066f8:	and    BYTE PTR [rbx+0x65],dh
  4066fb:	jb     0x406766
  4066fd:	(bad)  
  4066fe:	ins    BYTE PTR es:[rdi],dx
  4066ff:	cmp    eax,0x70207525
  406704:	(bad)  
  406705:	je     0x40676f
  406707:	cmp    eax,0x203b7325
  40670c:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  406713:	movsxd esp,DWORD PTR [rbp+0x3d]
  406716:	and    eax,0x6d203b73
  40671b:	gs ins DWORD PTR es:[rdi],dx
  40671d:	(bad)  
  40671e:	gs jb  0x40675e
  406721:	and    eax,0x20000a73
  406726:	jae    0x40678d
  406728:	jb     0x406793
  40672a:	(bad)  
  40672b:	ins    BYTE PTR es:[rdi],dx
  40672c:	cmp    eax,0x72207525
  406731:	gs jo  0x4067a0
  406734:	jns    0x406795
  406736:	jae    0x40679d
  406738:	jb     0x4067a3
  40673a:	(bad)  
  40673b:	ins    BYTE PTR es:[rdi],dx
  40673c:	cmp    eax,0xa7525
  406741:	add    BYTE PTR [rax],al
  406743:	add    BYTE PTR [rax],al
  406745:	add    BYTE PTR [rax],al
  406747:	add    BYTE PTR [rax],ah
  406749:	gs jb  0x4067be
  40674c:	outs   dx,DWORD PTR ds:[rsi]
  40674d:	jb     0x4067ae
  40674f:	outs   dx,BYTE PTR ds:[rsi]
  406750:	(bad)  
  406751:	ins    DWORD PTR es:[rdi],dx
  406752:	gs cmp eax,0x72207325
  406758:	gs jo  0x4067c7
  40675b:	jns    0x4067bc
  40675d:	jae    0x4067c4
  40675f:	jb     0x4067ca
  406761:	(bad)  
  406762:	ins    BYTE PTR es:[rdi],dx
  406763:	cmp    eax,0xa7525
	...
  406770:	rex.WRXB
  406771:	rex.WRXB
  406772:	rex.WRB and BYTE PTR [r15+0x68],r14b
  406776:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0xa7325
  40677e:	add    BYTE PTR [rax],al
  406780:	adc    BYTE PTR [rbp+0x40],0x0
  406787:	add    BYTE PTR [rax+0x4090],al
  40678d:	add    BYTE PTR [rax],al
  40678f:	add    al,dl
  406791:	add    BYTE PTR ss:[rax],al
	...
  40679d:	add    BYTE PTR [rax],al
  40679f:	add    BYTE PTR [rcx+0x72],al
  4067a2:	addr32 jne 0x406812
  4067a5:	outs   dx,BYTE PTR gs:[rsi]
  4067a7:	je     0x4067c9
  4067a9:	outs   dx,DWORD PTR fs:[rsi]
  4067ab:	ins    DWORD PTR es:[rdi],dx
  4067ac:	(bad)  
  4067ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4067b4:	jb     0x4067d6
  4067b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4067ba:	rex.B
  4067bb:	rex.WB
  4067bc:	rex.WRX sub QWORD PTR [rax],r8
  4067bf:	rex.B jb 0x406829
  4067c2:	jne    0x406831
  4067c4:	outs   dx,BYTE PTR gs:[rsi]
  4067c6:	je     0x4067e8
  4067c8:	jae    0x406833
  4067ca:	outs   dx,BYTE PTR ds:[rsi]
  4067cb:	addr32 jne 0x40683a
  4067ce:	(bad)  
  4067cf:	jb     0x40683a
  4067d1:	je     0x40684c
  4067d3:	and    BYTE PTR [rax],ch
  4067d5:	push   rbx
  4067d6:	rex.WB
  4067d7:	rex.RXB
  4067d8:	rex.WRX sub QWORD PTR [rax],r8
  4067db:	add    BYTE PTR [rax],al
  4067dd:	add    BYTE PTR [rax],al
  4067df:	add    BYTE PTR [rdi+0x76],cl
  4067e2:	gs jb  0x40684b
  4067e5:	ins    BYTE PTR es:[rdi],dx
  4067e6:	outs   dx,DWORD PTR ds:[rsi]
  4067e7:	ja     0x406809
  4067e9:	jb     0x40684c
  4067eb:	outs   dx,BYTE PTR ds:[rsi]
  4067ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4067f1:	jb     0x406862
  4067f3:	jb     0x406815
  4067f5:	sub    BYTE PTR [rdi+0x56],cl
  4067f8:	rex.RB push r10
  4067fa:	rex.RX
  4067fb:	rex.WR
  4067fc:	rex.WRXB push r15
  4067fe:	sub    DWORD PTR [rax],eax
  406800:	push   rax
  406801:	(bad)  
  406802:	jb     0x406878
  406804:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40680b:	jae    0x40682d
  40680d:	outs   dx,DWORD PTR ds:[rsi]
  40680e:	data16 and BYTE PTR [rbx+0x69],dh
  406812:	outs   dx,BYTE PTR ds:[esi]
  406814:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40681b:	and    BYTE PTR gs:[rax],ch
  40681e:	push   rax
  40681f:	rex.WR
  406820:	rex.WRXB push r11
  406822:	push   rbx
  406823:	sub    DWORD PTR [rax],eax
  406825:	add    BYTE PTR [rax],al
  406827:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40682b:	(bad)  
  40682c:	ins    BYTE PTR es:[rdi],dx
  40682d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406831:	jae    0x406853
  406833:	outs   dx,DWORD PTR ds:[rsi]
  406834:	data16 and BYTE PTR [rbx+0x69],dh
  406838:	outs   dx,BYTE PTR ds:[esi]
  40683a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406841:	and    BYTE PTR gs:[rax],ch
  406844:	push   rsp
  406845:	rex.WR
  406846:	rex.WRXB push r11
  406848:	push   rbx
  406849:	sub    DWORD PTR [rax],eax
  40684b:	add    BYTE PTR [rax],al
  40684d:	add    BYTE PTR [rax],al
  40684f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406853:	and    BYTE PTR [rdx+0x65],dh
  406856:	jae    0x4068cd
  406858:	ins    BYTE PTR es:[rdi],dx
  406859:	je     0x40687b
  40685b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406862:	jae    0x4068d1
  406864:	(bad)  
  406865:	ins    BYTE PTR es:[rdi],dx
  406866:	ins    BYTE PTR es:[rdi],dx
  406867:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40686b:	(bad)  
  40686c:	and    BYTE PTR gs:[rdx+0x65],dh
  406870:	jo     0x4068e4
  406872:	gs jae 0x4068da
  406875:	outs   dx,BYTE PTR ds:[rsi]
  406876:	je     0x4068dd
  406878:	and    BYTE PTR fs:[rax],ch
  40687b:	push   rbp
  40687c:	rex.WRX
  40687d:	rex.R
  40687e:	rex.RB push r10
  406880:	rex.RX
  406881:	rex.WR
  406882:	rex.WRXB push r15
  406884:	sub    DWORD PTR [rax],eax
  406886:	push   rbp
  406887:	outs   dx,BYTE PTR ds:[rsi]
  406888:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40688c:	outs   dx,BYTE PTR ds:[rsi]
  40688d:	and    BYTE PTR [rbp+0x72],ah
  406890:	jb     0x406901
  406892:	jb     0x406894
  406894:	add    BYTE PTR [rax],al
  406896:	add    BYTE PTR [rax],al
  406898:	pop    rdi
  406899:	ins    DWORD PTR es:[rdi],dx
  40689a:	(bad)  
  40689b:	je     0x406905
  40689d:	gs jb  0x406912
  4068a0:	sub    BYTE PTR [rcx],ch
  4068a2:	cmp    ah,BYTE PTR [rax]
  4068a4:	and    eax,0x6e692073
  4068a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67659122
  4068af:	sub    al,0x20
  4068b1:	and    eax,0x20202967
  4068b6:	sub    BYTE PTR [rdx+0x65],dh
  4068b9:	je     0x406931
  4068bb:	(bad)  
  4068bc:	ins    BYTE PTR es:[rdi],dx
  4068bd:	cmp    eax,0xa296725
  4068c2:	add    BYTE PTR [rax],al
  4068c4:	fmul   st(7),st
  4068c6:	(bad)  
  4068c7:	call   FWORD PTR [rip+0xffffffff8cffffcf]        # 0xffffffff8d40689c
  4068cd:	iret   
  4068ce:	(bad)  
  4068cf:	call   FWORD PTR [rdi+rcx*8-0x30530001]
  4068d6:	(bad)  
  4068d7:	(bad)  
  4068d8:	mov    esp,0xccffffcf
  4068dd:	iret   
  4068de:	(bad)  
  4068df:	dec    DWORD PTR [rbp+0x69]
  4068e2:	outs   dx,BYTE PTR ds:[rsi]
  4068e3:	addr32 ja 0x406913
  4068e6:	ja     0x40691e
  4068e8:	xor    al,0x20
  4068ea:	jb     0x406961
  4068ec:	outs   dx,BYTE PTR ds:[rsi]
  4068ed:	je     0x406958
  4068ef:	ins    DWORD PTR es:[rdi],dx
  4068f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4068f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4068fc:	add    BYTE PTR [rax],al
  4068fe:	add    BYTE PTR [rax],al
  406900:	rex.B
  406901:	fs fs jb 0x40696a
  406905:	jae    0x40697a
  406907:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8897d
  40690d:	jae    0x40692f
  40690f:	outs   dx,BYTE PTR ds:[rsi]
  406910:	outs   dx,DWORD PTR ds:[rsi]
  406911:	and    BYTE PTR [rcx+0x6d],ch
  406914:	(bad)  
  406915:	addr32 gs sub eax,0x74636573
  40691c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406923:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40692a:	jne    0x406991
  40692c:	jb     0x4069a7
  40692e:	and    BYTE PTR [rsi+0x61],ah
  406931:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406939:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a289a3
  40693f:	je     0x4069a6
  406941:	jae    0x406963
  406943:	(bad)  
  406944:	je     0x406966
  406946:	(bad)  
  406947:	fs fs jb 0x4069b0
  40694b:	jae    0x4069c0
  40694d:	and    BYTE PTR [rip+0x70],ah        # 0x4069c3
  406953:	add    BYTE PTR [rax],al
  406955:	add    BYTE PTR [rax],al
  406957:	add    BYTE PTR [rax],ah
  406959:	and    BYTE PTR [rsi+0x69],dl
  40695c:	jb     0x4069d2
  40695e:	jne    0x4069c1
  406960:	ins    BYTE PTR es:[rdi],dx
  406961:	push   rax
  406962:	jb     0x4069d3
  406964:	je     0x4069cb
  406966:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40696a:	(bad)  
  40696b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406973:	push   0x646f6320
  406978:	and    BYTE PTR gs:[rax],dh
  40697b:	js     0x4069a2
  40697d:	js     0x40697f
  40697f:	add    BYTE PTR [rax],ah
  406981:	and    BYTE PTR [rbp+0x6e],dl
  406984:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406988:	outs   dx,BYTE PTR ds:[rsi]
  406989:	and    BYTE PTR [rax+0x73],dh
  40698c:	gs jne 0x4069f3
  40698f:	outs   dx,DWORD PTR ds:[rsi]
  406990:	and    BYTE PTR [rdx+0x65],dh
  406993:	ins    BYTE PTR es:[rdi],dx
  406994:	outs   dx,DWORD PTR ds:[rsi]
  406995:	movsxd esp,DWORD PTR [rcx+0x74]
  406998:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40699f:	je     0x406a10
  4069a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4069a4:	and    BYTE PTR [rsi+0x65],dh
  4069a7:	jb     0x406a1c
  4069a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4069b0:	or     al,BYTE PTR [rax]
  4069b2:	add    BYTE PTR [rax],al
  4069b4:	add    BYTE PTR [rax],al
  4069b6:	add    BYTE PTR [rax],al
  4069b8:	and    BYTE PTR [rax],ah
  4069ba:	push   rbp
  4069bb:	outs   dx,BYTE PTR ds:[rsi]
  4069bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4069c0:	outs   dx,BYTE PTR ds:[rsi]
  4069c1:	and    BYTE PTR [rax+0x73],dh
  4069c4:	gs jne 0x406a2b
  4069c7:	outs   dx,DWORD PTR ds:[rsi]
  4069c8:	and    BYTE PTR [rdx+0x65],dh
  4069cb:	ins    BYTE PTR es:[rdi],dx
  4069cc:	outs   dx,DWORD PTR ds:[rsi]
  4069cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4069d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4069d7:	and    BYTE PTR [rbx+0x69],dh
  4069da:	jp     0x406a41
  4069dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9846
	...
  4069ee:	add    BYTE PTR [rax],al
  4069f0:	cs jo  0x406a57
  4069f3:	(bad)  
  4069f4:	je     0x406a57
	...
  4069fe:	add    BYTE PTR [rax],al
  406a00:	push   rax
  406a01:	push   rax
  406a02:	add    BYTE PTR [rax],al
	...
  406a0d:	add    BYTE PTR [rax],al
  406a0f:	add    BYTE PTR [rax+0x50],ah
  406a12:	add    BYTE PTR [rax],al
	...
  406a1d:	add    BYTE PTR [rax],al
  406a1f:	add    BYTE PTR [rax+0x404a],al
	...
  406a2d:	add    BYTE PTR [rax],al
  406a2f:	add    BYTE PTR [rax+0x406f],ah
	...
  406a3d:	add    BYTE PTR [rax],al
  406a3f:	add    BYTE PTR [rax+0x406f],ah
	...
  406a4d:	add    BYTE PTR [rax],al
  406a4f:	add    BYTE PTR [rax+0x4067],dl
	...
  406a61:	add    BYTE PTR [rax+0x0],al
	...
  406a70:	cwde   
  406a71:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406a72:	add    BYTE PTR [rax],al
	...
  406a7d:	add    BYTE PTR [rax],al
  406a7f:	add    al,al
  406a81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406a82:	add    BYTE PTR [rax],al
	...
  406a8d:	add    BYTE PTR [rax],al
  406a8f:	add    al,ah
  406a91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406a92:	add    BYTE PTR [rax],al
	...
  406a9d:	add    BYTE PTR [rax],al
  406a9f:	add    al,bh
  406aa1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406aa2:	add    BYTE PTR [rax],al
	...
  406aad:	add    BYTE PTR [rax],al
  406aaf:	add    al,al
  406ab1:	xchg   esi,eax
  406ab2:	add    BYTE PTR [rax],al
	...
  406abd:	add    BYTE PTR [rax],al
  406abf:	add    BYTE PTR [rax],ch
  406ac1:	(bad)  
  406ac2:	add    BYTE PTR [rax],al
	...
  406acd:	add    BYTE PTR [rax],al
  406acf:	add    BYTE PTR [rax],ah
  406ad1:	(bad)  
  406ad2:	add    BYTE PTR [rax],al
	...
  406add:	add    BYTE PTR [rax],al
  406adf:	add    BYTE PTR [rax],dl
  406ae1:	(bad)  
  406ae2:	add    BYTE PTR [rax],al
	...
  406aed:	add    BYTE PTR [rax],al
  406aef:	add    BYTE PTR [rax],bl
  406af1:	(bad)  
  406af2:	add    BYTE PTR [rax],al
	...
  406b01:	rol    BYTE PTR [rax+0x0],0x0
	...
  406b0d:	add    BYTE PTR [rax],al
  406b0f:	add    BYTE PTR [rax],dl
  406b11:	rol    BYTE PTR [rax+0x0],0x0
	...
  406b1d:	add    BYTE PTR [rax],al
  406b1f:	add    BYTE PTR [rax],bl
  406b21:	rol    BYTE PTR [rax+0x0],0x0
	...
  406b2d:	add    BYTE PTR [rax],al
  406b2f:	add    BYTE PTR [rax],dh
  406b31:	rol    BYTE PTR [rax+0x0],0x0
	...
  406b3d:	add    BYTE PTR [rax],al
  406b3f:	add    BYTE PTR [rax-0x70],al
  406b42:	add    BYTE PTR [rax],al
	...
  406b4d:	add    BYTE PTR [rax],al
  406b4f:	add    BYTE PTR [rax+0x4096],dl
	...
  406b5d:	add    BYTE PTR [rax],al
  406b5f:	add    BYTE PTR [rax+0x40],ah
  406b62:	add    BYTE PTR [rax],al
	...
  406b6d:	add    BYTE PTR [rax],al
  406b6f:	add    BYTE PTR [rax+0x4037],dh
	...
  406b7d:	add    BYTE PTR [rax],al
  406b7f:	add    BYTE PTR [rax-0x6a],al
  406b82:	add    BYTE PTR [rax],al
	...
  406b8d:	add    BYTE PTR [rax],al
  406b8f:	add    BYTE PTR [rax-0x6a],dh
  406b92:	add    BYTE PTR [rax],al
	...
  406b9d:	add    BYTE PTR [rax],al
  406b9f:	add    BYTE PTR [rax-0x70],dl
  406ba2:	add    BYTE PTR [rax],al
	...
  406bad:	add    BYTE PTR [rax],al
  406baf:	add    BYTE PTR [rax-0x6a],bl
  406bb2:	add    BYTE PTR [rax],al
	...
  406bbd:	add    BYTE PTR [rax],al
  406bbf:	add    BYTE PTR [rsi+rdx*4+0x40],dl
	...
  406bcf:	add    BYTE PTR [rax-0x6a],dl
  406bd2:	add    BYTE PTR [rax],al
	...
  406bdd:	add    BYTE PTR [rax],al
  406bdf:	add    BYTE PTR [rdi+0x43],al
  406be2:	rex.XB cmp spl,BYTE PTR [r8]
  406be5:	sub    BYTE PTR [rdi+0x4e],al
  406be8:	push   rbp
  406be9:	sub    DWORD PTR [rax],esp
  406beb:	xor    al,0x2e
  406bed:	cmp    DWORD PTR [rsi],ebp
  406bef:	xor    al,0x0
	...
  406bfd:	add    BYTE PTR [rax],al
  406bff:	add    BYTE PTR [rdi+0x43],al
  406c02:	rex.XB cmp spl,BYTE PTR [r8]
  406c05:	sub    BYTE PTR [rdi+0x4e],al
  406c08:	push   rbp
  406c09:	sub    DWORD PTR [rax],esp
  406c0b:	xor    al,0x2e
  406c0d:	cmp    DWORD PTR [rsi],ebp
  406c0f:	xor    al,0x0
	...
  406c1d:	add    BYTE PTR [rax],al
  406c1f:	add    BYTE PTR [rdi+0x43],al
  406c22:	rex.XB cmp spl,BYTE PTR [r8]
  406c25:	sub    BYTE PTR [rdi+0x4e],al
  406c28:	push   rbp
  406c29:	sub    DWORD PTR [rax],esp
  406c2b:	xor    al,0x2e
  406c2d:	cmp    DWORD PTR [rsi],ebp
  406c2f:	xor    al,0x0
	...
  406c3d:	add    BYTE PTR [rax],al
  406c3f:	add    BYTE PTR [rdi+0x43],al
  406c42:	rex.XB cmp spl,BYTE PTR [r8]
  406c45:	sub    BYTE PTR [rdi+0x4e],al
  406c48:	push   rbp
  406c49:	sub    DWORD PTR [rax],esp
  406c4b:	xor    al,0x2e
  406c4d:	cmp    DWORD PTR [rsi],ebp
  406c4f:	xor    al,0x0
	...
  406c5d:	add    BYTE PTR [rax],al
  406c5f:	add    BYTE PTR [rdi+0x43],al
  406c62:	rex.XB cmp spl,BYTE PTR [r8]
  406c65:	sub    BYTE PTR [rdi+0x4e],al
  406c68:	push   rbp
  406c69:	sub    DWORD PTR [rax],esp
  406c6b:	xor    al,0x2e
  406c6d:	cmp    DWORD PTR [rsi],ebp
  406c6f:	xor    al,0x0
	...
  406c7d:	add    BYTE PTR [rax],al
  406c7f:	add    BYTE PTR [rdi+0x43],al
  406c82:	rex.XB cmp spl,BYTE PTR [r8]
  406c85:	sub    BYTE PTR [rdi+0x4e],al
  406c88:	push   rbp
  406c89:	sub    DWORD PTR [rax],esp
  406c8b:	xor    al,0x2e
  406c8d:	cmp    DWORD PTR [rsi],ebp
  406c8f:	xor    al,0x0
	...
  406c9d:	add    BYTE PTR [rax],al
  406c9f:	add    BYTE PTR [rdi+0x43],al
  406ca2:	rex.XB cmp spl,BYTE PTR [r8]
  406ca5:	sub    BYTE PTR [rdi+0x4e],al
  406ca8:	push   rbp
  406ca9:	sub    DWORD PTR [rax],esp
  406cab:	xor    al,0x2e
  406cad:	cmp    DWORD PTR [rsi],ebp
  406caf:	xor    al,0x0
	...
  406cbd:	add    BYTE PTR [rax],al
  406cbf:	add    BYTE PTR [rdi+0x43],al
  406cc2:	rex.XB cmp spl,BYTE PTR [r8]
  406cc5:	sub    BYTE PTR [rdi+0x4e],al
  406cc8:	push   rbp
  406cc9:	sub    DWORD PTR [rax],esp
  406ccb:	xor    al,0x2e
  406ccd:	cmp    DWORD PTR [rsi],ebp
  406ccf:	xor    al,0x0
	...
  406cdd:	add    BYTE PTR [rax],al
  406cdf:	add    BYTE PTR [rdi+0x43],al
  406ce2:	rex.XB cmp spl,BYTE PTR [r8]
  406ce5:	sub    BYTE PTR [rdi+0x4e],al
  406ce8:	push   rbp
  406ce9:	sub    DWORD PTR [rax],esp
  406ceb:	xor    al,0x2e
  406ced:	cmp    DWORD PTR [rsi],ebp
  406cef:	xor    al,0x0
	...
  406cfd:	add    BYTE PTR [rax],al
  406cff:	add    BYTE PTR [rdi+0x43],al
  406d02:	rex.XB cmp spl,BYTE PTR [r8]
  406d05:	sub    BYTE PTR [rdi+0x4e],al
  406d08:	push   rbp
  406d09:	sub    DWORD PTR [rax],esp
  406d0b:	xor    al,0x2e
  406d0d:	cmp    DWORD PTR [rsi],ebp
  406d0f:	xor    al,0x0
	...
  406d1d:	add    BYTE PTR [rax],al
  406d1f:	add    BYTE PTR [rdi+0x43],al
  406d22:	rex.XB cmp spl,BYTE PTR [r8]
  406d25:	sub    BYTE PTR [rdi+0x4e],al
  406d28:	push   rbp
  406d29:	sub    DWORD PTR [rax],esp
  406d2b:	xor    al,0x2e
  406d2d:	cmp    DWORD PTR [rsi],ebp
  406d2f:	xor    al,0x0
	...
  406d3d:	add    BYTE PTR [rax],al
  406d3f:	add    BYTE PTR [rdi+0x43],al
  406d42:	rex.XB cmp spl,BYTE PTR [r8]
  406d45:	sub    BYTE PTR [rdi+0x4e],al
  406d48:	push   rbp
  406d49:	sub    DWORD PTR [rax],esp
  406d4b:	xor    al,0x2e
  406d4d:	cmp    DWORD PTR [rsi],ebp
  406d4f:	xor    al,0x0
	...
  406d5d:	add    BYTE PTR [rax],al
  406d5f:	add    BYTE PTR [rdi+0x43],al
  406d62:	rex.XB cmp spl,BYTE PTR [r8]
  406d65:	sub    BYTE PTR [rdi+0x4e],al
  406d68:	push   rbp
  406d69:	sub    DWORD PTR [rax],esp
  406d6b:	xor    al,0x2e
  406d6d:	cmp    DWORD PTR [rsi],ebp
  406d6f:	xor    al,0x0
	...
  406d7d:	add    BYTE PTR [rax],al
  406d7f:	add    BYTE PTR [rdi+0x43],al
  406d82:	rex.XB cmp spl,BYTE PTR [r8]
  406d85:	sub    BYTE PTR [rdi+0x4e],al
  406d88:	push   rbp
  406d89:	sub    DWORD PTR [rax],esp
  406d8b:	xor    al,0x2e
  406d8d:	cmp    DWORD PTR [rsi],ebp
  406d8f:	xor    al,0x0
	...
  406d9d:	add    BYTE PTR [rax],al
  406d9f:	add    BYTE PTR [rdi+0x43],al
  406da2:	rex.XB cmp spl,BYTE PTR [r8]
  406da5:	sub    BYTE PTR [rdi+0x4e],al
  406da8:	push   rbp
  406da9:	sub    DWORD PTR [rax],esp
  406dab:	xor    al,0x2e
  406dad:	cmp    DWORD PTR [rsi],ebp
  406daf:	xor    al,0x0
	...
  406dbd:	add    BYTE PTR [rax],al
  406dbf:	add    BYTE PTR [rdi+0x43],al
  406dc2:	rex.XB cmp spl,BYTE PTR [r8]
  406dc5:	sub    BYTE PTR [rdi+0x4e],al
  406dc8:	push   rbp
  406dc9:	sub    DWORD PTR [rax],esp
  406dcb:	xor    al,0x2e
  406dcd:	cmp    DWORD PTR [rsi],ebp
  406dcf:	xor    al,0x0
	...
  406ddd:	add    BYTE PTR [rax],al
  406ddf:	add    BYTE PTR [rdi+0x43],al
  406de2:	rex.XB cmp spl,BYTE PTR [r8]
  406de5:	sub    BYTE PTR [rdi+0x4e],al
  406de8:	push   rbp
  406de9:	sub    DWORD PTR [rax],esp
  406deb:	xor    al,0x2e
  406ded:	cmp    DWORD PTR [rsi],ebp
  406def:	xor    al,0x0
	...
  406dfd:	add    BYTE PTR [rax],al
  406dff:	add    BYTE PTR [rdi+0x43],al
  406e02:	rex.XB cmp spl,BYTE PTR [r8]
  406e05:	sub    BYTE PTR [rdi+0x4e],al
  406e08:	push   rbp
  406e09:	sub    DWORD PTR [rax],esp
  406e0b:	xor    al,0x2e
  406e0d:	cmp    DWORD PTR [rsi],ebp
  406e0f:	xor    al,0x0
	...
  406e1d:	add    BYTE PTR [rax],al
  406e1f:	add    BYTE PTR [rdi+0x43],al
  406e22:	rex.XB cmp spl,BYTE PTR [r8]
  406e25:	sub    BYTE PTR [rdi+0x4e],al
  406e28:	push   rbp
  406e29:	sub    DWORD PTR [rax],esp
  406e2b:	xor    al,0x2e
  406e2d:	cmp    DWORD PTR [rsi],ebp
  406e2f:	xor    al,0x0
	...
  406e3d:	add    BYTE PTR [rax],al
  406e3f:	add    BYTE PTR [rdi+0x43],al
  406e42:	rex.XB cmp spl,BYTE PTR [r8]
  406e45:	sub    BYTE PTR [rdi+0x4e],al
  406e48:	push   rbp
  406e49:	sub    DWORD PTR [rax],esp
  406e4b:	xor    al,0x2e
  406e4d:	cmp    DWORD PTR [rsi],ebp
  406e4f:	xor    al,0x0
	...
  406e5d:	add    BYTE PTR [rax],al
  406e5f:	add    BYTE PTR [rdi+0x43],al
  406e62:	rex.XB cmp spl,BYTE PTR [r8]
  406e65:	sub    BYTE PTR [rdi+0x4e],al
  406e68:	push   rbp
  406e69:	sub    DWORD PTR [rax],esp
  406e6b:	xor    al,0x2e
  406e6d:	cmp    DWORD PTR [rsi],ebp
  406e6f:	xor    al,0x0
	...
  406e7d:	add    BYTE PTR [rax],al
  406e7f:	add    BYTE PTR [rdi+0x43],al
  406e82:	rex.XB cmp spl,BYTE PTR [r8]
  406e85:	sub    BYTE PTR [rdi+0x4e],al
  406e88:	push   rbp
  406e89:	sub    DWORD PTR [rax],esp
  406e8b:	xor    al,0x2e
  406e8d:	cmp    DWORD PTR [rsi],ebp
  406e8f:	xor    al,0x0
	...
  406e9d:	add    BYTE PTR [rax],al
  406e9f:	add    BYTE PTR [rdi+0x43],al
  406ea2:	rex.XB cmp spl,BYTE PTR [r8]
  406ea5:	sub    BYTE PTR [rdi+0x4e],al
  406ea8:	push   rbp
  406ea9:	sub    DWORD PTR [rax],esp
  406eab:	xor    al,0x2e
  406ead:	cmp    DWORD PTR [rsi],ebp
  406eaf:	xor    al,0x0
	...
  406ebd:	add    BYTE PTR [rax],al
  406ebf:	add    BYTE PTR [rdi+0x43],al
  406ec2:	rex.XB cmp spl,BYTE PTR [r8]
  406ec5:	sub    BYTE PTR [rdi+0x4e],al
  406ec8:	push   rbp
  406ec9:	sub    DWORD PTR [rax],esp
  406ecb:	xor    al,0x2e
  406ecd:	cmp    DWORD PTR [rsi],ebp
  406ecf:	xor    al,0x0
	...
  406edd:	add    BYTE PTR [rax],al
  406edf:	add    BYTE PTR [rdi+0x43],al
  406ee2:	rex.XB cmp spl,BYTE PTR [r8]
  406ee5:	sub    BYTE PTR [rdi+0x4e],al
  406ee8:	push   rbp
  406ee9:	sub    DWORD PTR [rax],esp
  406eeb:	xor    al,0x2e
  406eed:	cmp    DWORD PTR [rsi],ebp
  406eef:	xor    al,0x0
	...
  406efd:	add    BYTE PTR [rax],al
  406eff:	add    BYTE PTR [rdi+0x43],al
  406f02:	rex.XB cmp spl,BYTE PTR [r8]
  406f05:	sub    BYTE PTR [rdi+0x4e],al
  406f08:	push   rbp
  406f09:	sub    DWORD PTR [rax],esp
  406f0b:	xor    al,0x2e
  406f0d:	cmp    DWORD PTR [rsi],ebp
  406f0f:	xor    al,0x0
	...
  406f1d:	add    BYTE PTR [rax],al
  406f1f:	add    BYTE PTR [rdi+0x43],al
  406f22:	rex.XB cmp spl,BYTE PTR [r8]
  406f25:	sub    BYTE PTR [rdi+0x4e],al
  406f28:	push   rbp
  406f29:	sub    DWORD PTR [rax],esp
  406f2b:	xor    al,0x2e
  406f2d:	cmp    DWORD PTR [rsi],ebp
  406f2f:	xor    al,0x0
	...
  406f3d:	add    BYTE PTR [rax],al
  406f3f:	add    BYTE PTR [rdi+0x43],al
  406f42:	rex.XB cmp spl,BYTE PTR [r8]
  406f45:	sub    BYTE PTR [rdi+0x4e],al
  406f48:	push   rbp
  406f49:	sub    DWORD PTR [rax],esp
  406f4b:	xor    al,0x2e
  406f4d:	cmp    DWORD PTR [rsi],ebp
  406f4f:	xor    al,0x0
	...
  406f5d:	add    BYTE PTR [rax],al
  406f5f:	add    BYTE PTR [rdi+0x43],al
  406f62:	rex.XB cmp spl,BYTE PTR [r8]
  406f65:	sub    BYTE PTR [rdi+0x4e],al
  406f68:	push   rbp
  406f69:	sub    DWORD PTR [rax],esp
  406f6b:	xor    al,0x2e
  406f6d:	cmp    DWORD PTR [rsi],ebp
  406f6f:	xor    al,0x0
	...
  406f7d:	add    BYTE PTR [rax],al
  406f7f:	add    BYTE PTR [rdi+0x43],al
  406f82:	rex.XB cmp spl,BYTE PTR [r8]
  406f85:	sub    BYTE PTR [rdi+0x4e],al
  406f88:	push   rbp
  406f89:	sub    DWORD PTR [rax],esp
  406f8b:	xor    al,0x2e
  406f8d:	cmp    DWORD PTR [rsi],ebp
  406f8f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000407000 <.pdata>:
  407000:	add    BYTE PTR [rax],dl
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rax],edx
  407006:	add    BYTE PTR [rax],al
  407008:	add    BYTE PTR [rax+0x10100000],al
  40700e:	add    BYTE PTR [rax],al
  407010:	push   rcx
  407011:	adc    DWORD PTR [rax],eax
  407013:	add    BYTE PTR [rax+rax*4],al
  407016:	add    BYTE PTR [rax],al
  407018:	(bad)  
  407019:	adc    DWORD PTR [rax],eax
  40701b:	add    BYTE PTR [rsi+0xc000011],ch
  407021:	add    BYTE PTR [rax],0x0
  407024:	mov    al,0x11
  407026:	add    BYTE PTR [rax],al
  407028:	(bad)  
  407029:	adc    al,0x0
  40702b:	add    BYTE PTR [rax+rax*4],dl
  40702e:	add    BYTE PTR [rax],al
  407030:	rcl    BYTE PTR [rax+rax*1],1
  407033:	add    dl,dh
  407035:	adc    al,0x0
  407037:	add    BYTE PTR [rax],ch
  407039:	add    BYTE PTR [rax],0x0
  40703c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15627042
  407042:	add    BYTE PTR [rax],al
  407044:	rex.W add BYTE PTR [rax],0x0
  407048:	xor    BYTE PTR [rip+0x157f0000],dl        # 0x15bf704e
  40704e:	add    BYTE PTR [rax],al
  407050:	push   0x7f000080
  407055:	adc    eax,0x16090000
  40705a:	add    BYTE PTR [rax],al
  40705c:	je     0x406fde
  40705e:	add    BYTE PTR [rax],al
  407060:	or     DWORD PTR [rsi],edx
  407062:	add    BYTE PTR [rax],al
  407064:	xor    BYTE PTR [rsi],dl
  407066:	add    BYTE PTR [rax],al
  407068:	add    BYTE PTR [rax+0x16300000],0x0
  40706f:	add    BYTE PTR [rcx+0x18],dh
  407072:	add    BYTE PTR [rax],al
  407074:	mov    WORD PTR [rax+0x18710000],es
  40707a:	add    BYTE PTR [rax],al
  40707c:	test   eax,0x98000019
  407081:	add    BYTE PTR [rax],0x0
  407084:	test   eax,0x19
  407089:	sbb    al,BYTE PTR [rax]
  40708b:	add    BYTE PTR [rax+rax*4+0x1a000000],ah
  407092:	add    BYTE PTR [rax],al
  407094:	(bad)  
  407095:	sbb    eax,DWORD PTR [rax]
  407097:	add    BYTE PTR [rax+0x37000080],dh
  40709d:	sbb    eax,DWORD PTR [rax]
  40709f:	add    BYTE PTR [rcx+0x1b],dh
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	mov    esp,0x71000080
  4070a9:	sbb    eax,DWORD PTR [rax]
  4070ab:	add    ch,dl
  4070ad:	sbb    eax,DWORD PTR [rax]
  4070af:	add    al,cl
  4070b1:	add    BYTE PTR [rax],0x0
  4070b4:	(bad)  
  4070b5:	sbb    eax,DWORD PTR [rax]
  4070b7:	add    BYTE PTR [rdx+0x1e],al
  4070ba:	add    BYTE PTR [rax],al
  4070bc:	(bad)  
  4070bd:	add    BYTE PTR [rax],0x0
  4070c0:	rex.X (bad) 
  4070c2:	add    BYTE PTR [rax],al
  4070c4:	push   rsp
  4070c5:	add    BYTE PTR es:[rax],al
  4070c8:	in     al,0x80
  4070ca:	add    BYTE PTR [rax],al
  4070cc:	(bad)  
  4070cd:	add    BYTE PTR es:[rax],al
  4070d0:	mov    dl,0x26
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	hlt    
  4070d5:	add    BYTE PTR [rax],0x0
  4070d8:	mov    dl,0x26
  4070da:	add    BYTE PTR [rax],al
  4070dc:	fisub  WORD PTR [rsi]
  4070de:	add    BYTE PTR [rax],al
  4070e0:	cld    
  4070e1:	add    BYTE PTR [rax],0x0
  4070e4:	fisub  WORD PTR [rsi]
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	shl    BYTE PTR [rdi],cl
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	or     BYTE PTR [rcx+0x27d20000],al
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	sub    DWORD PTR [r8],eax
  4070f7:	add    BYTE PTR [rcx+rax*4],dl
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	sub    DWORD PTR [r8],eax
  4070ff:	add    ah,al
  407101:	add    BYTE PTR cs:[rax],al
  407104:	and    BYTE PTR [rcx+0x2ec40000],al
  40710a:	add    BYTE PTR [rax],al
  40710c:	(bad)  
  40710d:	xor    DWORD PTR [rax],eax
  40710f:	add    BYTE PTR [rcx+rax*4],ch
  407112:	add    BYTE PTR [rax],al
  407114:	adc    BYTE PTR [rcx],dh
  407116:	add    BYTE PTR [rax],al
  407118:	rex.RXB xor DWORD PTR [r8],r8d
  40711b:	add    BYTE PTR [rax-0x7f],al
  40711e:	add    BYTE PTR [rax],al
  407120:	rex.RXB xor DWORD PTR [r8],r8d
  407123:	add    dh,bl
  407125:	xor    DWORD PTR [rax],eax
  407127:	add    BYTE PTR [rcx+rax*4+0x0],cl
  40712b:	add    BYTE PTR [rax],dl
  40712d:	xor    eax,DWORD PTR [rax]
  40712f:	add    BYTE PTR [rdi+0x58000033],dh
  407135:	add    DWORD PTR [rax],0x33c000
  40713b:	add    cl,bl
  40713d:	xor    eax,DWORD PTR [rax]
  40713f:	add    BYTE PTR [rax-0x7f],ah
  407142:	add    BYTE PTR [rax],al
  407144:	loopne 0x407179
  407146:	add    BYTE PTR [rax],al
  407148:	adc    eax,0x68000034
  40714d:	add    DWORD PTR [rax],0x342000
  407153:	add    BYTE PTR [rbp+0x34],dh
  407156:	add    BYTE PTR [rax],al
  407158:	jo     0x4070db
  40715a:	add    BYTE PTR [rax],al
  40715c:	xor    BYTE PTR [rax+rax*1],0x0
  407160:	pushf  
  407161:	xor    al,0x0
  407163:	add    BYTE PTR [rcx+rax*4+0x0],bh
  407167:	add    BYTE PTR [rax-0x55ffffcc],ah
  40716d:	xor    al,0x0
  40716f:	add    BYTE PTR [rax-0x4fffff7f],al
  407175:	xor    al,0x0
  407177:	add    BYTE PTR [rbx-0x7bffffcc],dh
  40717d:	add    DWORD PTR [rax],0x34c000
  407183:	add    BYTE PTR [rsi-0x77ffffcb],dl
  407189:	add    DWORD PTR [rax],0x35a000
  40718f:	add    BYTE PTR [rbx-0x67ffffca],bl
  407195:	add    DWORD PTR [rax],0x36a000
  40719b:	add    bh,cl
  40719d:	add    BYTE PTR ss:[rax],al
  4071a0:	test   al,0x81
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	shl    BYTE PTR [rsi],1
  4071a6:	add    BYTE PTR [rax],al
  4071a8:	cmp    DWORD PTR [rdi],esi
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	mov    al,0x81
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	rex (bad) 
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	rex.XB (bad) 
  4071b6:	add    BYTE PTR [rax],al
  4071b8:	mov    esp,0x50000081
  4071bd:	(bad)  
  4071be:	add    BYTE PTR [rax],al
  4071c0:	xchg   ecx,eax
  4071c1:	(bad)  
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	rol    BYTE PTR [rcx+0x37a00000],0x0
  4071cb:	add    BYTE PTR [rdi+rsi*1-0x7e380000],ch
  4071d2:	add    BYTE PTR [rax],al
  4071d4:	mov    al,0x37
  4071d6:	add    BYTE PTR [rax],al
  4071d8:	lods   al,BYTE PTR ds:[rsi]
  4071d9:	cmp    BYTE PTR [rax],al
  4071db:	add    ah,cl
  4071dd:	add    DWORD PTR [rax],0x38b000
  4071e3:	add    BYTE PTR [rbx-0x1bffffc8],dh
  4071e9:	add    DWORD PTR [rax],0x38c000
  4071ef:	add    ah,al
  4071f1:	cmp    BYTE PTR [rax],al
  4071f3:	add    al,ch
  4071f5:	add    DWORD PTR [rax],0x38d000
  4071fb:	add    ah,dl
  4071fd:	cmp    BYTE PTR [rax],al
  4071ff:	add    ah,ch
  407201:	add    DWORD PTR [rax],0x38e000
  407207:	add    BYTE PTR [rcx+0x39],al
  40720a:	add    BYTE PTR [rax],al
  40720c:	lock add DWORD PTR [rax],0x395000
  407213:	add    BYTE PTR [rdx-0x3ffffc6],dh
  407219:	add    DWORD PTR [rax],0x3ac000
  40721f:	add    BYTE PTR [rcx+0x1000003d],bh
  407225:	(bad)  
  407226:	add    BYTE PTR [rax],al
  407228:	sar    BYTE PTR [rip+0x3f660000],0x0        # 0x3fa6722f
  40722f:	add    BYTE PTR [rax],ch
  407231:	(bad)  
  407232:	add    BYTE PTR [rax],al
  407234:	jo     0x407275
  407236:	add    BYTE PTR [rax],al
  407238:	pop    rsp
  407239:	add    BYTE PTR [rax],al
  40723c:	xor    BYTE PTR [rdx+0x40600000],al
  407242:	add    BYTE PTR [rax],al
  407244:	sbb    BYTE PTR [rdx+0x0],al
  407247:	add    BYTE PTR [rax-0x7e],al
  40724a:	add    BYTE PTR [rax],al
  40724c:	and    BYTE PTR [rdx+0x0],al
  40724f:	add    BYTE PTR [rbp+0x48000042],cl
  407255:	(bad)  
  407256:	add    BYTE PTR [rax],al
  407258:	nop
  407259:	rex.X add BYTE PTR [rax],al
  40725c:	cmovae eax,DWORD PTR [rax]
  40725f:	add    BYTE PTR [rax-0x7e],bl
  407262:	add    BYTE PTR [rax],al
  407264:	adc    BYTE PTR [rbx+0x0],al
  407267:	add    BYTE PTR [rdi+0x64000043],ch
  40726d:	(bad)  
  40726e:	add    BYTE PTR [rax],al
  407270:	mov    al,0x43
  407272:	add    BYTE PTR [rax],al
  407274:	mov    al,BYTE PTR [rax+rax*1+0x0]
  407278:	ins    BYTE PTR es:[rdi],dx
  407279:	(bad)  
  40727a:	add    BYTE PTR [rax],al
  40727c:	nop
  40727d:	add    BYTE PTR [rax],r8b
  407280:	scas   eax,DWORD PTR es:[rdi]
  407281:	add    BYTE PTR [rax],r8b
  407284:	je     0x407208
  407286:	add    BYTE PTR [rax],al
  407288:	mov    al,0x44
  40728a:	add    BYTE PTR [rax],al
  40728c:	ret    0x44
  40728f:	add    BYTE PTR [rax-0x7e],bh
  407292:	add    BYTE PTR [rax],al
  407294:	rol    BYTE PTR [rax+rax*1+0x0],1
  407298:	adc    eax,0x7c000045
  40729d:	(bad)  
  40729e:	add    BYTE PTR [rax],al
  4072a0:	and    BYTE PTR [rbp+0x0],al
  4072a3:	add    BYTE PTR [rsi-0x7fffffbb],bh
  4072a9:	(bad)  
  4072aa:	add    BYTE PTR [rax],al
  4072ac:	rol    BYTE PTR [rbp+0x0],0x0
  4072b0:	add    eax,DWORD PTR [rsi+0x0]
  4072b3:	add    BYTE PTR [rdx+rax*4+0x46100000],cl
  4072ba:	add    BYTE PTR [rax],al
  4072bc:	rex.WXB
  4072bd:	rex.RX add BYTE PTR [rax],r8b
  4072c0:	cwde   
  4072c1:	(bad)  
  4072c2:	add    BYTE PTR [rax],al
  4072c4:	push   rax
  4072c5:	rex.RX add BYTE PTR [rax],r8b
  4072c8:	fiadd  WORD PTR [rsi+0x0]
  4072cb:	add    BYTE PTR [rax-0x1fffff7e],ah
  4072d1:	rex.RX add BYTE PTR [rax],r8b
  4072d4:	sbb    BYTE PTR [rdi+0x0],al
  4072d7:	add    BYTE PTR [rdx+rax*4+0x47200000],ch
  4072de:	add    BYTE PTR [rax],al
  4072e0:	jne    0x407329
  4072e2:	add    BYTE PTR [rax],al
  4072e4:	mov    eax,0x80000082
  4072e9:	rex.RXB add BYTE PTR [r8],r8b
  4072ec:	rex.W add BYTE PTR cs:[rax],al
  4072f0:	(bad)
  4072f4:	jo     0x40733e
  4072f6:	add    BYTE PTR [rax],al
  4072f8:	jne    0x407342
  4072fa:	add    BYTE PTR [rax],al
  4072fc:	(bad)  
  4072fd:	(bad)  
  4072fe:	add    BYTE PTR [rax],al
  407300:	movabs al,ds:0xd8000049a8000049
  407309:	(bad)  
  40730a:	add    BYTE PTR [rax],al
  40730c:	mov    al,0x49
  40730e:	add    BYTE PTR [rax],al
  407310:	mov    ebx,0xdc000049
  407315:	(bad)  
	...

Disassembly of section .xdata:

0000000000408000 <.xdata>:
  408000:	add    DWORD PTR [rax],eax
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rcx+rax*1],eax
  408007:	add    BYTE PTR [rdx+rax*2],al
  40800a:	add    BYTE PTR [rax],al
  40800c:	add    DWORD PTR [rcx+rax*1],eax
  40800f:	add    BYTE PTR [rdx+riz*2],al
  408012:	add    BYTE PTR [rax],al
  408014:	add    DWORD PTR [rdi],ecx
  408016:	or     BYTE PTR [rax],al
  408018:	lgdt   [rbx]
  40801b:	add    BYTE PTR [rax],cl
  40801d:	xor    BYTE PTR [rdi],al
  40801f:	(bad)  
  408020:	(bad)  
  408021:	jo     0x408028
  408023:	push   rax
  408024:	add    al,0xc0
  408026:	add    dl,al
  408028:	or     DWORD PTR [rcx+rax*1],eax
  40802b:	add    BYTE PTR [rdx+rax*2],al
  40802e:	add    BYTE PTR [rax],al
  408030:	cwde   
  408031:	rex.WB add BYTE PTR [r8],al
  408034:	add    DWORD PTR [rax],eax
  408036:	add    BYTE PTR [rax],al
  408038:	(bad)  
  408039:	adc    al,0x0
  40803b:	add    ah,ch
  40803d:	adc    al,0x0
  40803f:	add    BYTE PTR [rax+0x40],ah
  408042:	add    BYTE PTR [rax],al
  408044:	in     al,dx
  408045:	adc    al,0x0
  408047:	add    BYTE PTR [rcx],cl
  408049:	add    al,0x1
  40804b:	add    BYTE PTR [rdx+rax*2],al
  40804e:	add    BYTE PTR [rax],al
  408050:	cwde   
  408051:	rex.WB add BYTE PTR [r8],al
  408054:	add    DWORD PTR [rax],eax
  408056:	add    BYTE PTR [rax],al
  408058:	add    al,0x15
  40805a:	add    BYTE PTR [rax],al
  40805c:	sbb    al,0x15
  40805e:	add    BYTE PTR [rax],al
  408060:	(bad)  
  408061:	add    BYTE PTR [rax],al
  408064:	sbb    al,0x15
  408066:	add    BYTE PTR [rax],al
  408068:	add    DWORD PTR [rsi],ecx
  40806a:	add    al,0x85
  40806c:	(bad)  
  40806d:	add    eax,DWORD PTR [rsi]
  40806f:	(bad)  
  408071:	xor    BYTE PTR [rcx],al
  408073:	push   rax
  408074:	add    DWORD PTR [rax],ecx
  408076:	add    eax,DWORD PTR [rip+0x3045208]        # 0x344d284
  40807c:	add    DWORD PTR [rax+0x0],edx
  40807f:	add    BYTE PTR [rcx],al
  408081:	or     BYTE PTR [rbx],al
  408083:	add    eax,0x3043208
  408088:	add    DWORD PTR [rax+0x0],edx
  40808b:	add    BYTE PTR [rcx],al
  40808d:	or     BYTE PTR [rbx],al
  40808f:	add    eax,0x3043208
  408094:	add    DWORD PTR [rax+0x0],edx
  408097:	add    BYTE PTR [rcx],al
  408099:	or     BYTE PTR [rbx],al
  40809b:	add    eax,0x3047208
  4080a0:	add    DWORD PTR [rax+0x0],edx
  4080a3:	add    BYTE PTR [rcx],al
  4080a5:	or     BYTE PTR [rbx],al
  4080a7:	add    eax,0x3043208
  4080ac:	add    DWORD PTR [rax+0x0],edx
  4080af:	add    BYTE PTR [rcx],al
  4080b1:	or     BYTE PTR [rbx],al
  4080b3:	add    eax,0x3049208
  4080b8:	add    DWORD PTR [rax+0x0],edx
  4080bb:	add    BYTE PTR [rcx],al
  4080bd:	or     BYTE PTR [rbx],al
  4080bf:	add    eax,0x3043208
  4080c4:	add    DWORD PTR [rax+0x0],edx
  4080c7:	add    BYTE PTR [rcx],al
  4080c9:	or     BYTE PTR [rbx],al
  4080cb:	add    eax,0x3043208
  4080d0:	add    DWORD PTR [rax+0x0],edx
  4080d3:	add    BYTE PTR [rcx],al
  4080d5:	adc    al,BYTE PTR [rsi]
  4080d7:	test   DWORD PTR [rdx],edx
  4080d9:	add    ecx,DWORD PTR [rdx]
  4080db:	add    DWORD PTR [rax],esp
  4080dd:	add    BYTE PTR [rbx],al
  4080df:	xor    BYTE PTR [rdx],al
  4080e1:	(bad)  
  4080e2:	add    DWORD PTR [rax+0x1],edx
  4080e5:	or     eax,0x10d0506
  4080ea:	sbb    al,BYTE PTR [rax]
  4080ec:	(bad)  
  4080ed:	add    eax,DWORD PTR [rbx]
  4080ef:	xor    BYTE PTR [rdx],al
  4080f1:	(bad)  
  4080f2:	add    DWORD PTR [rax+0x1],edx
  4080f5:	add    al,0x2
  4080f7:	add    eax,0x50010304
  4080fc:	add    DWORD PTR [rax],ecx
  4080fe:	add    eax,DWORD PTR [rip+0x3043208]        # 0x344b30c
  408104:	add    DWORD PTR [rax+0x0],edx
  408107:	add    BYTE PTR [rcx],al
  408109:	or     BYTE PTR [rbx],al
  40810b:	add    eax,0x3045208
  408110:	add    DWORD PTR [rax+0x0],edx
  408113:	add    BYTE PTR [rcx],al
  408115:	or     BYTE PTR [rbx],al
  408117:	add    eax,0x3047208
  40811c:	add    DWORD PTR [rax+0x0],edx
  40811f:	add    BYTE PTR [rcx],al
  408121:	or     eax,DWORD PTR [rax*1+0x1a010b]
  408128:	add    al,0x3
  40812a:	add    DWORD PTR [rax+0x1],edx
  40812d:	adc    eax,DWORD PTR [rdi]
  40812f:	test   DWORD PTR [rbx],edx
  408131:	add    ecx,DWORD PTR [rbx]
  408133:	add    DWORD PTR [rbx],edx
  408135:	add    BYTE PTR [rax+rsi*1],al
  408138:	add    esp,DWORD PTR [rax+0x2]
  40813b:	jo     0x40813e
  40813d:	push   rax
  40813e:	add    BYTE PTR [rax],al
  408140:	add    DWORD PTR [rax],ecx
  408142:	add    eax,DWORD PTR [rip+0x3043208]        # 0x344b350
  408148:	add    DWORD PTR [rax+0x0],edx
  40814b:	add    BYTE PTR [rcx],al
  40814d:	or     BYTE PTR [rbx],al
  40814f:	add    eax,0x3047208
  408154:	add    DWORD PTR [rax+0x0],edx
  408157:	add    BYTE PTR [rcx],al
  408159:	add    eax,0x52050002
  40815e:	add    DWORD PTR [rax],esi
  408160:	add    DWORD PTR [rcx+rax*1],eax
  408163:	add    BYTE PTR [rdx+rax*2],al
  408166:	add    BYTE PTR [rax],al
  408168:	add    DWORD PTR [rcx+rax*1],eax
  40816b:	add    BYTE PTR [rdx+rax*2],al
  40816e:	add    BYTE PTR [rax],al
  408170:	add    DWORD PTR [rsi],eax
  408172:	add    eax,DWORD PTR [rax]
  408174:	(bad)  
  408175:	rex.X add sil,BYTE PTR [rax]
  408178:	add    DWORD PTR [rax+0x0],esp
  40817b:	add    BYTE PTR [rcx],al
  40817d:	add    BYTE PTR [rax],al
  40817f:	add    BYTE PTR [rcx],al
  408181:	add    BYTE PTR [rax],al
  408183:	add    BYTE PTR [rcx],al
  408185:	add    BYTE PTR [rax],al
  408187:	add    BYTE PTR [rcx],al
  408189:	or     al,BYTE PTR [rsi]
  40818b:	add    BYTE PTR [rdx],cl
  40818d:	jb     0x408195
  40818f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b085f5
  408195:	push   rax
  408196:	add    al,al
  408198:	add    DWORD PTR [rdx],ecx
  40819a:	add    eax,0x6d20a05
  40819f:	add    eax,DWORD PTR [rbx]
  4081a1:	xor    BYTE PTR [rdx],al
  4081a3:	(bad)  
  4081a4:	add    DWORD PTR [rax+0x0],edx
  4081a7:	add    BYTE PTR [rcx],al
  4081a9:	add    al,0x1
  4081ab:	add    BYTE PTR [rdx+rax*2],al
  4081ae:	add    BYTE PTR [rax],al
  4081b0:	add    DWORD PTR [rsi],eax
  4081b2:	add    eax,DWORD PTR [rax]
  4081b4:	(bad)  
  4081b5:	rex.X add sil,BYTE PTR [rax]
  4081b8:	add    DWORD PTR [rax+0x0],esp
  4081bb:	add    BYTE PTR [rcx],al
  4081bd:	add    BYTE PTR [rax],al
  4081bf:	add    BYTE PTR [rcx],al
  4081c1:	add    al,0x1
  4081c3:	add    BYTE PTR [rdx+riz*4],al
  4081c6:	add    BYTE PTR [rax],al
  4081c8:	add    DWORD PTR [rax],eax
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	add    DWORD PTR [rsi],edx
  4081ce:	or     DWORD PTR [rax],eax
  4081d0:	(bad)  
  4081d1:	mov    BYTE PTR [rsi],al
  4081d3:	add    BYTE PTR [rax],dl
  4081d5:	js     0x4081dc
  4081d7:	add    BYTE PTR [rbx],cl
  4081d9:	push   0xffffffffe2060004
  4081de:	add    dh,BYTE PTR [rax]
  4081e0:	add    DWORD PTR [rax+0x0],esp
  4081e3:	add    BYTE PTR [rcx],al
  4081e5:	add    BYTE PTR [rax],al
  4081e7:	add    BYTE PTR [rcx],al
  4081e9:	add    BYTE PTR [rax],al
  4081eb:	add    BYTE PTR [rcx],al
  4081ed:	add    BYTE PTR [rax],al
  4081ef:	add    BYTE PTR [rcx],al
  4081f1:	(bad)  
  4081f2:	add    eax,DWORD PTR [rax]
  4081f4:	(bad)  
  4081f5:	(bad)  
  4081f7:	xor    BYTE PTR [rcx],al
  4081f9:	(bad)  
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	add    DWORD PTR [rdi+rax*1],ecx
  4081ff:	add    BYTE PTR [rdx+riz*4],cl
  408202:	or     BYTE PTR [rax],dh
  408204:	(bad)  
  408205:	(bad)  
  408206:	(bad)  
  408207:	jo     0x40820e
  408209:	push   rax
  40820a:	add    al,0xc0
  40820c:	add    dl,al
  40820e:	add    BYTE PTR [rax],al
  408210:	add    DWORD PTR [rcx],edx
  408212:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e3429
  408218:	or     dh,BYTE PTR [rax]
  40821a:	or     DWORD PTR [rax+0x8],esp
  40821d:	jo     0x408226
  40821f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22085f6
  408226:	add    BYTE PTR [rax],al
  408228:	add    DWORD PTR [rcx+rax*1],eax
  40822b:	add    BYTE PTR [rdx+rax*2],al
  40822e:	add    BYTE PTR [rax],al
  408230:	add    DWORD PTR [rdx],ecx
  408232:	(bad)  
  408233:	add    BYTE PTR [rdx],cl
  408235:	xor    al,BYTE PTR [rsi]
  408237:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0869d
  40823d:	push   rax
  40823e:	add    al,al
  408240:	add    DWORD PTR [rip+0x32050002],eax        # 0x32458248
  408246:	add    DWORD PTR [rax],esi
  408248:	add    DWORD PTR [rax],ecx
  40824a:	add    eax,0x4420800
  40824f:	xor    BYTE PTR [rbx],al
  408251:	(bad)  
  408252:	add    dh,BYTE PTR [rax+0x1]
  408255:	push   rax
  408256:	add    BYTE PTR [rax],al
  408258:	add    DWORD PTR [rdi],eax
  40825a:	add    al,0x0
  40825c:	(bad)  
  40825d:	xor    al,BYTE PTR [rbx]
  40825f:	xor    BYTE PTR [rdx],al
  408261:	(bad)  
  408262:	add    DWORD PTR [rax+0x1],esi
  408265:	add    eax,0x32050002
  40826a:	add    DWORD PTR [rax],esi
  40826c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32458274
  408272:	add    DWORD PTR [rax],esi
  408274:	add    DWORD PTR [rax],eax
  408276:	add    BYTE PTR [rax],al
  408278:	add    DWORD PTR [rax],eax
  40827a:	add    BYTE PTR [rax],al
  40827c:	add    DWORD PTR [rax],eax
  40827e:	add    BYTE PTR [rax],al
  408280:	add    DWORD PTR [rdi],eax
  408282:	add    al,0x0
  408284:	(bad)  
  408285:	xor    al,BYTE PTR [rbx]
  408287:	xor    BYTE PTR [rdx],al
  408289:	(bad)  
  40828a:	add    DWORD PTR [rax+0x1],esi
  40828d:	(bad)  
  40828e:	add    eax,DWORD PTR [rax]
  408290:	(bad)  
  408291:	rex.X add sil,BYTE PTR [rax]
  408294:	add    DWORD PTR [rax+0x0],esp
  408297:	add    BYTE PTR [rcx],al
  408299:	add    eax,0x32050002
  40829e:	add    DWORD PTR [rax],esi
  4082a0:	add    DWORD PTR [rdi],eax
  4082a2:	add    al,0x0
  4082a4:	(bad)  
  4082a5:	xor    al,BYTE PTR [rbx]
  4082a7:	xor    BYTE PTR [rdx],al
  4082a9:	(bad)  
  4082aa:	add    DWORD PTR [rax+0x1],esi
  4082ad:	(bad)  
  4082ae:	add    eax,DWORD PTR [rax]
  4082b0:	(bad)  
  4082b1:	rex.X add sil,BYTE PTR [rax]
  4082b4:	add    DWORD PTR [rax+0x0],esp
  4082b7:	add    BYTE PTR [rcx],al
  4082b9:	(bad)  
  4082ba:	add    eax,DWORD PTR [rax]
  4082bc:	(bad)  
  4082bd:	rex.X add sil,BYTE PTR [rax]
  4082c0:	add    DWORD PTR [rax+0x0],esp
  4082c3:	add    BYTE PTR [rcx],al
  4082c5:	or     BYTE PTR [rip+0x4420800],al        # 0x4828acb
  4082cb:	xor    BYTE PTR [rbx],al
  4082cd:	(bad)  
  4082ce:	add    dh,BYTE PTR [rax+0x1]
  4082d1:	push   rax
  4082d2:	add    BYTE PTR [rax],al
  4082d4:	add    DWORD PTR [rax],eax
  4082d6:	add    BYTE PTR [rax],al
  4082d8:	add    DWORD PTR [rax],eax
  4082da:	add    BYTE PTR [rax],al
  4082dc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000409000 <.bss>:
	...

Disassembly of section .idata:

000000000040a000 <.idata>:
  40a000:	push   rax
  40a001:	movabs al,ds:0x0
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	xor    al,0xaf
  40a00e:	add    BYTE PTR [rax],al
  40a010:	mov    BYTE PTR [rbx-0x5e780000],ah
	...
  40a01e:	add    BYTE PTR [rax],al
  40a020:	movabs al,ds:0x480000a4c00000af
  40a029:	movabs ds:0x0,al
  40a032:	add    BYTE PTR [rax],al
  40a034:	rex.WR mov al,0x0
  40a037:	add    BYTE PTR [rax+0xa5],al
	...
  40a04d:	add    BYTE PTR [rax],al
  40a04f:	add    al,al
  40a051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a052:	add    BYTE PTR [rax],al
  40a054:	add    BYTE PTR [rax],al
  40a056:	add    BYTE PTR [rax],al
  40a058:	fsub   DWORD PTR [rsi+0x0]
  40a05e:	add    BYTE PTR [rax],al
  40a060:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a062:	add    BYTE PTR [rax],al
  40a064:	add    BYTE PTR [rax],al
  40a066:	add    BYTE PTR [rax],al
  40a068:	add    BYTE PTR [rdi+0x0],ah
  40a06e:	add    BYTE PTR [rax],al
  40a070:	adc    al,0xa7
  40a072:	add    BYTE PTR [rax],al
  40a074:	add    BYTE PTR [rax],al
  40a076:	add    BYTE PTR [rax],al
  40a078:	xor    al,0xa7
  40a07a:	add    BYTE PTR [rax],al
  40a07c:	add    BYTE PTR [rax],al
  40a07e:	add    BYTE PTR [rax],al
  40a080:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  40a082:	add    BYTE PTR [rax],al
  40a084:	add    BYTE PTR [rax],al
  40a086:	add    BYTE PTR [rax],al
  40a088:	je     0x40a031
  40a08a:	add    BYTE PTR [rax],al
  40a08c:	add    BYTE PTR [rax],al
  40a08e:	add    BYTE PTR [rax],al
  40a090:	movabs al,ds:0xcc000000000000a7
  40a099:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a09a:	add    BYTE PTR [rax],al
  40a09c:	add    BYTE PTR [rax],al
  40a09e:	add    BYTE PTR [rax],al
  40a0a0:	loopne 0x40a049
  40a0a2:	add    BYTE PTR [rax],al
  40a0a4:	add    BYTE PTR [rax],al
  40a0a6:	add    BYTE PTR [rax],al
  40a0a8:	clc    
  40a0a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a0aa:	add    BYTE PTR [rax],al
  40a0ac:	add    BYTE PTR [rax],al
  40a0ae:	add    BYTE PTR [rax],al
  40a0b0:	or     al,0xa8
  40a0b2:	add    BYTE PTR [rax],al
  40a0b4:	add    BYTE PTR [rax],al
  40a0b6:	add    BYTE PTR [rax],al
  40a0b8:	and    BYTE PTR [rax+0x0],ch
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	sub    al,0xa8
  40a0c2:	add    BYTE PTR [rax],al
  40a0c4:	add    BYTE PTR [rax],al
  40a0c6:	add    BYTE PTR [rax],al
  40a0c8:	cmp    al,0xa8
  40a0ca:	add    BYTE PTR [rax],al
  40a0cc:	add    BYTE PTR [rax],al
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	pop    rsp
  40a0d1:	test   al,0x0
  40a0d3:	add    BYTE PTR [rax],al
  40a0d5:	add    BYTE PTR [rax],al
  40a0d7:	add    BYTE PTR [rax+rbp*4+0x0],bh
  40a0db:	add    BYTE PTR [rax],al
  40a0dd:	add    BYTE PTR [rax],al
  40a0df:	add    BYTE PTR [rax+rbp*4+0x0],bl
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	mov    eax,0xa8
  40a0ed:	add    BYTE PTR [rax],al
  40a0ef:	add    al,dl
  40a0f1:	test   al,0x0
  40a0f3:	add    BYTE PTR [rax],al
  40a0f5:	add    BYTE PTR [rax],al
  40a0f7:	add    al,dh
  40a0f9:	test   al,0x0
  40a0fb:	add    BYTE PTR [rax],al
  40a0fd:	add    BYTE PTR [rax],al
  40a0ff:	add    BYTE PTR [rcx+rbp*4],cl
  40a102:	add    BYTE PTR [rax],al
  40a104:	add    BYTE PTR [rax],al
  40a106:	add    BYTE PTR [rax],al
  40a108:	sub    BYTE PTR [rcx+0x0],ch
  40a10e:	add    BYTE PTR [rax],al
  40a110:	rex test eax,0x0
  40a116:	add    BYTE PTR [rax],al
  40a118:	pop    rsp
  40a119:	test   eax,0x0
  40a11e:	add    BYTE PTR [rax],al
  40a120:	sub    BYTE PTR [rcx+0x0],0x0
  40a127:	add    BYTE PTR [rcx+rbp*4+0x0],ah
  40a12e:	add    BYTE PTR [rax],al
  40a130:	enter  0xa9,0x0
  40a134:	add    BYTE PTR [rax],al
  40a136:	add    BYTE PTR [rax],al
  40a138:	call   0x40a1e6
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rdx+rbp*4],cl
  40a142:	add    BYTE PTR [rax],al
  40a144:	add    BYTE PTR [rax],al
  40a146:	add    BYTE PTR [rax],al
  40a148:	sub    BYTE PTR [rdx+0x0],ch
  40a14e:	add    BYTE PTR [rax],al
  40a150:	rex.W stos BYTE PTR es:[rdi],al
  40a152:	add    BYTE PTR [rax],al
  40a154:	add    BYTE PTR [rax],al
  40a156:	add    BYTE PTR [rax],al
  40a158:	fs stos BYTE PTR es:[rdi],al
  40a15a:	add    BYTE PTR [rax],al
  40a15c:	add    BYTE PTR [rax],al
  40a15e:	add    BYTE PTR [rax],al
  40a160:	mov    BYTE PTR [rdx+0x0],ch
  40a166:	add    BYTE PTR [rax],al
  40a168:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a169:	stos   BYTE PTR es:[rdi],al
  40a16a:	add    BYTE PTR [rax],al
  40a16c:	add    BYTE PTR [rax],al
  40a16e:	add    BYTE PTR [rax],al
  40a170:	mov    esp,0xaa
  40a175:	add    BYTE PTR [rax],al
  40a177:	add    ah,bl
  40a179:	stos   BYTE PTR es:[rdi],al
	...
  40a186:	add    BYTE PTR [rax],al
  40a188:	hlt    
  40a189:	stos   BYTE PTR es:[rdi],al
  40a18a:	add    BYTE PTR [rax],al
  40a18c:	add    BYTE PTR [rax],al
  40a18e:	add    BYTE PTR [rax],al
  40a190:	or     al,0xab
  40a192:	add    BYTE PTR [rax],al
  40a194:	add    BYTE PTR [rax],al
  40a196:	add    BYTE PTR [rax],al
  40a198:	and    al,0xab
  40a19a:	add    BYTE PTR [rax],al
  40a19c:	add    BYTE PTR [rax],al
  40a19e:	add    BYTE PTR [rax],al
  40a1a0:	cmp    BYTE PTR [rbx+0x0],ch
  40a1a6:	add    BYTE PTR [rax],al
  40a1a8:	rex.WRX stos QWORD PTR es:[rdi],rax
  40a1aa:	add    BYTE PTR [rax],al
  40a1ac:	add    BYTE PTR [rax],al
  40a1ae:	add    BYTE PTR [rax],al
  40a1b0:	fs stos DWORD PTR es:[rdi],eax
  40a1b2:	add    BYTE PTR [rax],al
  40a1b4:	add    BYTE PTR [rax],al
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	je     0x40a165
  40a1ba:	add    BYTE PTR [rax],al
  40a1bc:	add    BYTE PTR [rax],al
  40a1be:	add    BYTE PTR [rax],al
  40a1c0:	xchg   BYTE PTR [rbx+0x0],ch
  40a1c6:	add    BYTE PTR [rax],al
  40a1c8:	movabs al,ds:0xb0000000000000ab
  40a1d1:	stos   DWORD PTR es:[rdi],eax
  40a1d2:	add    BYTE PTR [rax],al
  40a1d4:	add    BYTE PTR [rax],al
  40a1d6:	add    BYTE PTR [rax],al
  40a1d8:	int3   
  40a1d9:	stos   DWORD PTR es:[rdi],eax
  40a1da:	add    BYTE PTR [rax],al
  40a1dc:	add    BYTE PTR [rax],al
  40a1de:	add    BYTE PTR [rax],al
  40a1e0:	in     al,0xab
  40a1e2:	add    BYTE PTR [rax],al
  40a1e4:	add    BYTE PTR [rax],al
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	(bad)  
  40a1e9:	stos   DWORD PTR es:[rdi],eax
  40a1ea:	add    BYTE PTR [rax],al
  40a1ec:	add    BYTE PTR [rax],al
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	adc    al,0xac
  40a1f2:	add    BYTE PTR [rax],al
  40a1f4:	add    BYTE PTR [rax],al
  40a1f6:	add    BYTE PTR [rax],al
  40a1f8:	sub    BYTE PTR [rax+rax*1+0x0],ch
  40a1ff:	add    BYTE PTR [rdx-0x54],al
  40a202:	add    BYTE PTR [rax],al
  40a204:	add    BYTE PTR [rax],al
  40a206:	add    BYTE PTR [rax],al
  40a208:	push   rsi
  40a209:	lods   al,BYTE PTR ds:[rsi]
  40a20a:	add    BYTE PTR [rax],al
  40a20c:	add    BYTE PTR [rax],al
  40a20e:	add    BYTE PTR [rax],al
  40a210:	je     0x40a1be
  40a212:	add    BYTE PTR [rax],al
  40a214:	add    BYTE PTR [rax],al
  40a216:	add    BYTE PTR [rax],al
  40a218:	jl     0x40a1c6
  40a21a:	add    BYTE PTR [rax],al
  40a21c:	add    BYTE PTR [rax],al
  40a21e:	add    BYTE PTR [rax],al
  40a220:	nop
  40a221:	lods   al,BYTE PTR ds:[rsi]
  40a222:	add    BYTE PTR [rax],al
  40a224:	add    BYTE PTR [rax],al
  40a226:	add    BYTE PTR [rax],al
  40a228:	sahf   
  40a229:	lods   al,BYTE PTR ds:[rsi]
  40a22a:	add    BYTE PTR [rax],al
  40a22c:	add    BYTE PTR [rax],al
  40a22e:	add    BYTE PTR [rax],al
  40a230:	mov    edx,0xac
  40a235:	add    BYTE PTR [rax],al
  40a237:	add    ah,cl
  40a239:	lods   al,BYTE PTR ds:[rsi]
	...
  40a246:	add    BYTE PTR [rax],al
  40a248:	fsubr  QWORD PTR [rax+rax*1+0x0]
  40a24f:	add    ah,dh
  40a251:	lods   al,BYTE PTR ds:[rsi]
  40a252:	add    BYTE PTR [rax],al
  40a254:	add    BYTE PTR [rax],al
  40a256:	add    BYTE PTR [rax],al
  40a258:	add    ch,BYTE PTR [rbp+0x0]
  40a25e:	add    BYTE PTR [rax],al
  40a260:	adc    ch,BYTE PTR [rbp+0x0]
  40a266:	add    BYTE PTR [rax],al
  40a268:	(bad)  
  40a269:	lods   eax,DWORD PTR ds:[rsi]
  40a26a:	add    BYTE PTR [rax],al
  40a26c:	add    BYTE PTR [rax],al
  40a26e:	add    BYTE PTR [rax],al
  40a270:	sub    al,0xad
  40a272:	add    BYTE PTR [rax],al
  40a274:	add    BYTE PTR [rax],al
  40a276:	add    BYTE PTR [rax],al
  40a278:	cmp    al,0xad
  40a27a:	add    BYTE PTR [rax],al
  40a27c:	add    BYTE PTR [rax],al
  40a27e:	add    BYTE PTR [rax],al
  40a280:	rex.WRX lods rax,QWORD PTR ds:[rsi]
  40a282:	add    BYTE PTR [rax],al
  40a284:	add    BYTE PTR [rax],al
  40a286:	add    BYTE PTR [rax],al
  40a288:	(bad)  
  40a289:	lods   eax,DWORD PTR ds:[rsi]
  40a28a:	add    BYTE PTR [rax],al
  40a28c:	add    BYTE PTR [rax],al
  40a28e:	add    BYTE PTR [rax],al
  40a290:	ins    BYTE PTR es:[rdi],dx
  40a291:	lods   eax,DWORD PTR ds:[rsi]
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    BYTE PTR [rax],al
  40a296:	add    BYTE PTR [rax],al
  40a298:	jp     0x40a247
  40a29a:	add    BYTE PTR [rax],al
  40a29c:	add    BYTE PTR [rax],al
  40a29e:	add    BYTE PTR [rax],al
  40a2a0:	test   BYTE PTR [rbp+0x0],ch
  40a2a6:	add    BYTE PTR [rax],al
  40a2a8:	mov    gs,WORD PTR [rbp+0x0]
  40a2ae:	add    BYTE PTR [rax],al
  40a2b0:	cwde   
  40a2b1:	lods   eax,DWORD PTR ds:[rsi]
  40a2b2:	add    BYTE PTR [rax],al
  40a2b4:	add    BYTE PTR [rax],al
  40a2b6:	add    BYTE PTR [rax],al
  40a2b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a2b9:	lods   eax,DWORD PTR ds:[rsi]
  40a2ba:	add    BYTE PTR [rax],al
  40a2bc:	add    BYTE PTR [rax],al
  40a2be:	add    BYTE PTR [rax],al
  40a2c0:	lods   al,BYTE PTR ds:[rsi]
  40a2c1:	lods   eax,DWORD PTR ds:[rsi]
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    BYTE PTR [rax],al
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	mov    dh,0xad
  40a2ca:	add    BYTE PTR [rax],al
  40a2cc:	add    BYTE PTR [rax],al
  40a2ce:	add    BYTE PTR [rax],al
  40a2d0:	shr    BYTE PTR [rbp+0x0],0x0
  40a2d7:	add    dh,cl
  40a2d9:	lods   eax,DWORD PTR ds:[rsi]
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    BYTE PTR [rax],al
  40a2de:	add    BYTE PTR [rax],al
  40a2e0:	fsubr  DWORD PTR [rbp+0x0]
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	loopne 0x40a297
  40a2ea:	add    BYTE PTR [rax],al
  40a2ec:	add    BYTE PTR [rax],al
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	(bad)  
  40a2f1:	lods   eax,DWORD PTR ds:[rsi]
  40a2f2:	add    BYTE PTR [rax],al
  40a2f4:	add    BYTE PTR [rax],al
  40a2f6:	add    BYTE PTR [rax],al
  40a2f8:	repnz lods eax,DWORD PTR ds:[rsi]
  40a2fa:	add    BYTE PTR [rax],al
  40a2fc:	add    BYTE PTR [rax],al
  40a2fe:	add    BYTE PTR [rax],al
  40a300:	cld    
  40a301:	lods   eax,DWORD PTR ds:[rsi]
  40a302:	add    BYTE PTR [rax],al
  40a304:	add    BYTE PTR [rax],al
  40a306:	add    BYTE PTR [rax],al
  40a308:	(bad)  
  40a309:	scas   al,BYTE PTR es:[rdi]
  40a30a:	add    BYTE PTR [rax],al
  40a30c:	add    BYTE PTR [rax],al
  40a30e:	add    BYTE PTR [rax],al
  40a310:	(bad)  
  40a311:	scas   al,BYTE PTR es:[rdi]
  40a312:	add    BYTE PTR [rax],al
  40a314:	add    BYTE PTR [rax],al
  40a316:	add    BYTE PTR [rax],al
  40a318:	sbb    BYTE PTR [rsi+0x0],ch
  40a31e:	add    BYTE PTR [rax],al
  40a320:	and    ch,BYTE PTR [rsi+0x0]
  40a326:	add    BYTE PTR [rax],al
  40a328:	sub    al,0xae
  40a32a:	add    BYTE PTR [rax],al
  40a32c:	add    BYTE PTR [rax],al
  40a32e:	add    BYTE PTR [rax],al
  40a330:	ss scas al,BYTE PTR es:[rdi]
  40a332:	add    BYTE PTR [rax],al
  40a334:	add    BYTE PTR [rax],al
  40a336:	add    BYTE PTR [rax],al
  40a338:	scas   al,BYTE PTR es:[rdi]
  40a33a:	add    BYTE PTR [rax],al
  40a33c:	add    BYTE PTR [rax],al
  40a33e:	add    BYTE PTR [rax],al
  40a340:	rex.WX scas al,BYTE PTR es:[rdi]
  40a342:	add    BYTE PTR [rax],al
  40a344:	add    BYTE PTR [rax],al
  40a346:	add    BYTE PTR [rax],al
  40a348:	push   rdx
  40a349:	scas   al,BYTE PTR es:[rdi]
  40a34a:	add    BYTE PTR [rax],al
  40a34c:	add    BYTE PTR [rax],al
  40a34e:	add    BYTE PTR [rax],al
  40a350:	pop    rsp
  40a351:	scas   al,BYTE PTR es:[rdi]
  40a352:	add    BYTE PTR [rax],al
  40a354:	add    BYTE PTR [rax],al
  40a356:	add    BYTE PTR [rax],al
  40a358:	data16 scas al,BYTE PTR es:[rdi]
  40a35a:	add    BYTE PTR [rax],al
  40a35c:	add    BYTE PTR [rax],al
  40a35e:	add    BYTE PTR [rax],al
  40a360:	jo     0x40a310
  40a362:	add    BYTE PTR [rax],al
  40a364:	add    BYTE PTR [rax],al
  40a366:	add    BYTE PTR [rax],al
  40a368:	jp     0x40a318
  40a36a:	add    BYTE PTR [rax],al
  40a36c:	add    BYTE PTR [rax],al
  40a36e:	add    BYTE PTR [rax],al
  40a370:	test   BYTE PTR [rsi+0x0],ch
  40a376:	add    BYTE PTR [rax],al
  40a378:	mov    gs,WORD PTR [rsi+0x0]
	...
  40a386:	add    BYTE PTR [rax],al
  40a388:	shl    BYTE PTR [rsi+0x0],0x0
  40a38f:	add    al,bl
  40a391:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a392:	add    BYTE PTR [rax],al
  40a394:	add    BYTE PTR [rax],al
  40a396:	add    BYTE PTR [rax],al
  40a398:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a39a:	add    BYTE PTR [rax],al
  40a39c:	add    BYTE PTR [rax],al
  40a39e:	add    BYTE PTR [rax],al
  40a3a0:	add    BYTE PTR [rdi+0x0],ah
  40a3a6:	add    BYTE PTR [rax],al
  40a3a8:	adc    al,0xa7
  40a3aa:	add    BYTE PTR [rax],al
  40a3ac:	add    BYTE PTR [rax],al
  40a3ae:	add    BYTE PTR [rax],al
  40a3b0:	xor    al,0xa7
  40a3b2:	add    BYTE PTR [rax],al
  40a3b4:	add    BYTE PTR [rax],al
  40a3b6:	add    BYTE PTR [rax],al
  40a3b8:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  40a3ba:	add    BYTE PTR [rax],al
  40a3bc:	add    BYTE PTR [rax],al
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	je     0x40a369
  40a3c2:	add    BYTE PTR [rax],al
  40a3c4:	add    BYTE PTR [rax],al
  40a3c6:	add    BYTE PTR [rax],al
  40a3c8:	movabs al,ds:0xcc000000000000a7
  40a3d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	add    BYTE PTR [rax],al
  40a3d6:	add    BYTE PTR [rax],al
  40a3d8:	loopne 0x40a381
  40a3da:	add    BYTE PTR [rax],al
  40a3dc:	add    BYTE PTR [rax],al
  40a3de:	add    BYTE PTR [rax],al
  40a3e0:	clc    
  40a3e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3e2:	add    BYTE PTR [rax],al
  40a3e4:	add    BYTE PTR [rax],al
  40a3e6:	add    BYTE PTR [rax],al
  40a3e8:	or     al,0xa8
  40a3ea:	add    BYTE PTR [rax],al
  40a3ec:	add    BYTE PTR [rax],al
  40a3ee:	add    BYTE PTR [rax],al
  40a3f0:	and    BYTE PTR [rax+0x0],ch
  40a3f6:	add    BYTE PTR [rax],al
  40a3f8:	sub    al,0xa8
  40a3fa:	add    BYTE PTR [rax],al
  40a3fc:	add    BYTE PTR [rax],al
  40a3fe:	add    BYTE PTR [rax],al
  40a400:	cmp    al,0xa8
  40a402:	add    BYTE PTR [rax],al
  40a404:	add    BYTE PTR [rax],al
  40a406:	add    BYTE PTR [rax],al
  40a408:	pop    rsp
  40a409:	test   al,0x0
  40a40b:	add    BYTE PTR [rax],al
  40a40d:	add    BYTE PTR [rax],al
  40a40f:	add    BYTE PTR [rax+rbp*4+0x0],bh
  40a413:	add    BYTE PTR [rax],al
  40a415:	add    BYTE PTR [rax],al
  40a417:	add    BYTE PTR [rax+rbp*4+0x0],bl
  40a41e:	add    BYTE PTR [rax],al
  40a420:	mov    eax,0xa8
  40a425:	add    BYTE PTR [rax],al
  40a427:	add    al,dl
  40a429:	test   al,0x0
  40a42b:	add    BYTE PTR [rax],al
  40a42d:	add    BYTE PTR [rax],al
  40a42f:	add    al,dh
  40a431:	test   al,0x0
  40a433:	add    BYTE PTR [rax],al
  40a435:	add    BYTE PTR [rax],al
  40a437:	add    BYTE PTR [rcx+rbp*4],cl
  40a43a:	add    BYTE PTR [rax],al
  40a43c:	add    BYTE PTR [rax],al
  40a43e:	add    BYTE PTR [rax],al
  40a440:	sub    BYTE PTR [rcx+0x0],ch
  40a446:	add    BYTE PTR [rax],al
  40a448:	rex test eax,0x0
  40a44e:	add    BYTE PTR [rax],al
  40a450:	pop    rsp
  40a451:	test   eax,0x0
  40a456:	add    BYTE PTR [rax],al
  40a458:	sub    BYTE PTR [rcx+0x0],0x0
  40a45f:	add    BYTE PTR [rcx+rbp*4+0x0],ah
  40a466:	add    BYTE PTR [rax],al
  40a468:	enter  0xa9,0x0
  40a46c:	add    BYTE PTR [rax],al
  40a46e:	add    BYTE PTR [rax],al
  40a470:	call   0x40a51e
  40a475:	add    BYTE PTR [rax],al
  40a477:	add    BYTE PTR [rdx+rbp*4],cl
  40a47a:	add    BYTE PTR [rax],al
  40a47c:	add    BYTE PTR [rax],al
  40a47e:	add    BYTE PTR [rax],al
  40a480:	sub    BYTE PTR [rdx+0x0],ch
  40a486:	add    BYTE PTR [rax],al
  40a488:	rex.W stos BYTE PTR es:[rdi],al
  40a48a:	add    BYTE PTR [rax],al
  40a48c:	add    BYTE PTR [rax],al
  40a48e:	add    BYTE PTR [rax],al
  40a490:	fs stos BYTE PTR es:[rdi],al
  40a492:	add    BYTE PTR [rax],al
  40a494:	add    BYTE PTR [rax],al
  40a496:	add    BYTE PTR [rax],al
  40a498:	mov    BYTE PTR [rdx+0x0],ch
  40a49e:	add    BYTE PTR [rax],al
  40a4a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a4a1:	stos   BYTE PTR es:[rdi],al
  40a4a2:	add    BYTE PTR [rax],al
  40a4a4:	add    BYTE PTR [rax],al
  40a4a6:	add    BYTE PTR [rax],al
  40a4a8:	mov    esp,0xaa
  40a4ad:	add    BYTE PTR [rax],al
  40a4af:	add    ah,bl
  40a4b1:	stos   BYTE PTR es:[rdi],al
	...
  40a4be:	add    BYTE PTR [rax],al
  40a4c0:	hlt    
  40a4c1:	stos   BYTE PTR es:[rdi],al
  40a4c2:	add    BYTE PTR [rax],al
  40a4c4:	add    BYTE PTR [rax],al
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	or     al,0xab
  40a4ca:	add    BYTE PTR [rax],al
  40a4cc:	add    BYTE PTR [rax],al
  40a4ce:	add    BYTE PTR [rax],al
  40a4d0:	and    al,0xab
  40a4d2:	add    BYTE PTR [rax],al
  40a4d4:	add    BYTE PTR [rax],al
  40a4d6:	add    BYTE PTR [rax],al
  40a4d8:	cmp    BYTE PTR [rbx+0x0],ch
  40a4de:	add    BYTE PTR [rax],al
  40a4e0:	rex.WRX stos QWORD PTR es:[rdi],rax
  40a4e2:	add    BYTE PTR [rax],al
  40a4e4:	add    BYTE PTR [rax],al
  40a4e6:	add    BYTE PTR [rax],al
  40a4e8:	fs stos DWORD PTR es:[rdi],eax
  40a4ea:	add    BYTE PTR [rax],al
  40a4ec:	add    BYTE PTR [rax],al
  40a4ee:	add    BYTE PTR [rax],al
  40a4f0:	je     0x40a49d
  40a4f2:	add    BYTE PTR [rax],al
  40a4f4:	add    BYTE PTR [rax],al
  40a4f6:	add    BYTE PTR [rax],al
  40a4f8:	xchg   BYTE PTR [rbx+0x0],ch
  40a4fe:	add    BYTE PTR [rax],al
  40a500:	movabs al,ds:0xb0000000000000ab
  40a509:	stos   DWORD PTR es:[rdi],eax
  40a50a:	add    BYTE PTR [rax],al
  40a50c:	add    BYTE PTR [rax],al
  40a50e:	add    BYTE PTR [rax],al
  40a510:	int3   
  40a511:	stos   DWORD PTR es:[rdi],eax
  40a512:	add    BYTE PTR [rax],al
  40a514:	add    BYTE PTR [rax],al
  40a516:	add    BYTE PTR [rax],al
  40a518:	in     al,0xab
  40a51a:	add    BYTE PTR [rax],al
  40a51c:	add    BYTE PTR [rax],al
  40a51e:	add    BYTE PTR [rax],al
  40a520:	(bad)  
  40a521:	stos   DWORD PTR es:[rdi],eax
  40a522:	add    BYTE PTR [rax],al
  40a524:	add    BYTE PTR [rax],al
  40a526:	add    BYTE PTR [rax],al
  40a528:	adc    al,0xac
  40a52a:	add    BYTE PTR [rax],al
  40a52c:	add    BYTE PTR [rax],al
  40a52e:	add    BYTE PTR [rax],al
  40a530:	sub    BYTE PTR [rax+rax*1+0x0],ch
  40a537:	add    BYTE PTR [rdx-0x54],al
  40a53a:	add    BYTE PTR [rax],al
  40a53c:	add    BYTE PTR [rax],al
  40a53e:	add    BYTE PTR [rax],al
  40a540:	push   rsi
  40a541:	lods   al,BYTE PTR ds:[rsi]
  40a542:	add    BYTE PTR [rax],al
  40a544:	add    BYTE PTR [rax],al
  40a546:	add    BYTE PTR [rax],al
  40a548:	je     0x40a4f6
  40a54a:	add    BYTE PTR [rax],al
  40a54c:	add    BYTE PTR [rax],al
  40a54e:	add    BYTE PTR [rax],al
  40a550:	jl     0x40a4fe
  40a552:	add    BYTE PTR [rax],al
  40a554:	add    BYTE PTR [rax],al
  40a556:	add    BYTE PTR [rax],al
  40a558:	nop
  40a559:	lods   al,BYTE PTR ds:[rsi]
  40a55a:	add    BYTE PTR [rax],al
  40a55c:	add    BYTE PTR [rax],al
  40a55e:	add    BYTE PTR [rax],al
  40a560:	sahf   
  40a561:	lods   al,BYTE PTR ds:[rsi]
  40a562:	add    BYTE PTR [rax],al
  40a564:	add    BYTE PTR [rax],al
  40a566:	add    BYTE PTR [rax],al
  40a568:	mov    edx,0xac
  40a56d:	add    BYTE PTR [rax],al
  40a56f:	add    ah,cl
  40a571:	lods   al,BYTE PTR ds:[rsi]
	...
  40a57e:	add    BYTE PTR [rax],al
  40a580:	fsubr  QWORD PTR [rax+rax*1+0x0]
  40a587:	add    ah,dh
  40a589:	lods   al,BYTE PTR ds:[rsi]
  40a58a:	add    BYTE PTR [rax],al
  40a58c:	add    BYTE PTR [rax],al
  40a58e:	add    BYTE PTR [rax],al
  40a590:	add    ch,BYTE PTR [rbp+0x0]
  40a596:	add    BYTE PTR [rax],al
  40a598:	adc    ch,BYTE PTR [rbp+0x0]
  40a59e:	add    BYTE PTR [rax],al
  40a5a0:	(bad)  
  40a5a1:	lods   eax,DWORD PTR ds:[rsi]
  40a5a2:	add    BYTE PTR [rax],al
  40a5a4:	add    BYTE PTR [rax],al
  40a5a6:	add    BYTE PTR [rax],al
  40a5a8:	sub    al,0xad
  40a5aa:	add    BYTE PTR [rax],al
  40a5ac:	add    BYTE PTR [rax],al
  40a5ae:	add    BYTE PTR [rax],al
  40a5b0:	cmp    al,0xad
  40a5b2:	add    BYTE PTR [rax],al
  40a5b4:	add    BYTE PTR [rax],al
  40a5b6:	add    BYTE PTR [rax],al
  40a5b8:	rex.WRX lods rax,QWORD PTR ds:[rsi]
  40a5ba:	add    BYTE PTR [rax],al
  40a5bc:	add    BYTE PTR [rax],al
  40a5be:	add    BYTE PTR [rax],al
  40a5c0:	(bad)  
  40a5c1:	lods   eax,DWORD PTR ds:[rsi]
  40a5c2:	add    BYTE PTR [rax],al
  40a5c4:	add    BYTE PTR [rax],al
  40a5c6:	add    BYTE PTR [rax],al
  40a5c8:	ins    BYTE PTR es:[rdi],dx
  40a5c9:	lods   eax,DWORD PTR ds:[rsi]
  40a5ca:	add    BYTE PTR [rax],al
  40a5cc:	add    BYTE PTR [rax],al
  40a5ce:	add    BYTE PTR [rax],al
  40a5d0:	jp     0x40a57f
  40a5d2:	add    BYTE PTR [rax],al
  40a5d4:	add    BYTE PTR [rax],al
  40a5d6:	add    BYTE PTR [rax],al
  40a5d8:	test   BYTE PTR [rbp+0x0],ch
  40a5de:	add    BYTE PTR [rax],al
  40a5e0:	mov    gs,WORD PTR [rbp+0x0]
  40a5e6:	add    BYTE PTR [rax],al
  40a5e8:	cwde   
  40a5e9:	lods   eax,DWORD PTR ds:[rsi]
  40a5ea:	add    BYTE PTR [rax],al
  40a5ec:	add    BYTE PTR [rax],al
  40a5ee:	add    BYTE PTR [rax],al
  40a5f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a5f1:	lods   eax,DWORD PTR ds:[rsi]
  40a5f2:	add    BYTE PTR [rax],al
  40a5f4:	add    BYTE PTR [rax],al
  40a5f6:	add    BYTE PTR [rax],al
  40a5f8:	lods   al,BYTE PTR ds:[rsi]
  40a5f9:	lods   eax,DWORD PTR ds:[rsi]
  40a5fa:	add    BYTE PTR [rax],al
  40a5fc:	add    BYTE PTR [rax],al
  40a5fe:	add    BYTE PTR [rax],al
  40a600:	mov    dh,0xad
  40a602:	add    BYTE PTR [rax],al
  40a604:	add    BYTE PTR [rax],al
  40a606:	add    BYTE PTR [rax],al
  40a608:	shr    BYTE PTR [rbp+0x0],0x0
  40a60f:	add    dh,cl
  40a611:	lods   eax,DWORD PTR ds:[rsi]
  40a612:	add    BYTE PTR [rax],al
  40a614:	add    BYTE PTR [rax],al
  40a616:	add    BYTE PTR [rax],al
  40a618:	fsubr  DWORD PTR [rbp+0x0]
  40a61e:	add    BYTE PTR [rax],al
  40a620:	loopne 0x40a5cf
  40a622:	add    BYTE PTR [rax],al
  40a624:	add    BYTE PTR [rax],al
  40a626:	add    BYTE PTR [rax],al
  40a628:	(bad)  
  40a629:	lods   eax,DWORD PTR ds:[rsi]
  40a62a:	add    BYTE PTR [rax],al
  40a62c:	add    BYTE PTR [rax],al
  40a62e:	add    BYTE PTR [rax],al
  40a630:	repnz lods eax,DWORD PTR ds:[rsi]
  40a632:	add    BYTE PTR [rax],al
  40a634:	add    BYTE PTR [rax],al
  40a636:	add    BYTE PTR [rax],al
  40a638:	cld    
  40a639:	lods   eax,DWORD PTR ds:[rsi]
  40a63a:	add    BYTE PTR [rax],al
  40a63c:	add    BYTE PTR [rax],al
  40a63e:	add    BYTE PTR [rax],al
  40a640:	(bad)  
  40a641:	scas   al,BYTE PTR es:[rdi]
  40a642:	add    BYTE PTR [rax],al
  40a644:	add    BYTE PTR [rax],al
  40a646:	add    BYTE PTR [rax],al
  40a648:	(bad)  
  40a649:	scas   al,BYTE PTR es:[rdi]
  40a64a:	add    BYTE PTR [rax],al
  40a64c:	add    BYTE PTR [rax],al
  40a64e:	add    BYTE PTR [rax],al
  40a650:	sbb    BYTE PTR [rsi+0x0],ch
  40a656:	add    BYTE PTR [rax],al
  40a658:	and    ch,BYTE PTR [rsi+0x0]
  40a65e:	add    BYTE PTR [rax],al
  40a660:	sub    al,0xae
  40a662:	add    BYTE PTR [rax],al
  40a664:	add    BYTE PTR [rax],al
  40a666:	add    BYTE PTR [rax],al
  40a668:	ss scas al,BYTE PTR es:[rdi]
  40a66a:	add    BYTE PTR [rax],al
  40a66c:	add    BYTE PTR [rax],al
  40a66e:	add    BYTE PTR [rax],al
  40a670:	scas   al,BYTE PTR es:[rdi]
  40a672:	add    BYTE PTR [rax],al
  40a674:	add    BYTE PTR [rax],al
  40a676:	add    BYTE PTR [rax],al
  40a678:	rex.WX scas al,BYTE PTR es:[rdi]
  40a67a:	add    BYTE PTR [rax],al
  40a67c:	add    BYTE PTR [rax],al
  40a67e:	add    BYTE PTR [rax],al
  40a680:	push   rdx
  40a681:	scas   al,BYTE PTR es:[rdi]
  40a682:	add    BYTE PTR [rax],al
  40a684:	add    BYTE PTR [rax],al
  40a686:	add    BYTE PTR [rax],al
  40a688:	pop    rsp
  40a689:	scas   al,BYTE PTR es:[rdi]
  40a68a:	add    BYTE PTR [rax],al
  40a68c:	add    BYTE PTR [rax],al
  40a68e:	add    BYTE PTR [rax],al
  40a690:	data16 scas al,BYTE PTR es:[rdi]
  40a692:	add    BYTE PTR [rax],al
  40a694:	add    BYTE PTR [rax],al
  40a696:	add    BYTE PTR [rax],al
  40a698:	jo     0x40a648
  40a69a:	add    BYTE PTR [rax],al
  40a69c:	add    BYTE PTR [rax],al
  40a69e:	add    BYTE PTR [rax],al
  40a6a0:	jp     0x40a650
  40a6a2:	add    BYTE PTR [rax],al
  40a6a4:	add    BYTE PTR [rax],al
  40a6a6:	add    BYTE PTR [rax],al
  40a6a8:	test   BYTE PTR [rsi+0x0],ch
  40a6ae:	add    BYTE PTR [rax],al
  40a6b0:	mov    gs,WORD PTR [rsi+0x0]
	...
  40a6be:	add    BYTE PTR [rax],al
  40a6c0:	cmp    eax,DWORD PTR [rax]
  40a6c2:	pop    rdi
  40a6c3:	fs (bad) 
  40a6c5:	jne    0x40a73a
  40a6c7:	pop    rdi
  40a6c8:	addr32 gs je 0x40a72b
  40a6cc:	jb     0x40a733
  40a6ce:	(bad)  
  40a6cf:	ins    BYTE PTR es:[rdi],dx
  40a6d0:	pop    rdi
  40a6d1:	je     0x40a73c
  40a6d3:	ins    DWORD PTR es:[rdi],dx
  40a6d4:	add    BYTE PTR gs:[rax],al
  40a6d7:	add    BYTE PTR [rdx],dl
  40a6d9:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a6dd:	jae    0x40a73e
  40a6df:	(bad)  
  40a6e0:	jne    0x40a755
  40a6e2:	pop    rdi
  40a6e3:	(bad)  
  40a6e4:	fs fs pop rdi
  40a6e7:	ins    DWORD PTR es:[rdi],dx
  40a6e8:	(bad)  
  40a6e9:	je     0x40a74e
  40a6eb:	push   0x0
  40a6f0:	adc    eax,DWORD PTR [rcx]
  40a6f2:	fs (bad) 
  40a6f4:	jne    0x40a769
  40a6f6:	pop    rdi
  40a6f7:	(bad)  
  40a6f8:	jne    0x40a76d
  40a6fa:	pop    rdi
  40a6fb:	addr32 gs je 0x40a6ff
  40a6ff:	add    BYTE PTR [rcx],bl
  40a701:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a705:	jae    0x40a766
  40a707:	(bad)  
  40a708:	jne    0x40a77d
  40a70a:	pop    rdi
  40a70b:	jb     0x40a772
  40a70d:	imul   esi,DWORD PTR [ebx+0x74],0x1f007265
  40a715:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a719:	jae    0x40a77a
  40a71b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a71e:	outs   dx,BYTE PTR ds:[rsi]
  40a71f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a724:	outs   dx,BYTE PTR ds:[rsi]
  40a725:	pop    rdi
  40a726:	(bad)  
  40a727:	fs fs pop rdi
  40a72a:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  40a731:	add    BYTE PTR [rax],al
  40a733:	add    BYTE PTR [rip+0x75626401],bh        # 0x75a30b3a
  40a739:	jae    0x40a79a
  40a73b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a73e:	outs   dx,BYTE PTR ds:[rsi]
  40a73f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a744:	outs   dx,BYTE PTR ds:[rsi]
  40a745:	pop    rdi
  40a746:	outs   dx,DWORD PTR ds:[rsi]
  40a747:	jo     0x40a7ae
  40a749:	outs   dx,BYTE PTR ds:[rsi]
  40a74a:	add    BYTE PTR [rax],al
  40a74c:	add    DWORD PTR [rdx+r12*2+0x75],esp
  40a751:	jae    0x40a7b2
  40a753:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a756:	outs   dx,BYTE PTR ds:[rsi]
  40a757:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a75c:	outs   dx,BYTE PTR ds:[rsi]
  40a75d:	pop    rdi
  40a75e:	jb     0x40a7c5
  40a760:	(bad)  
  40a761:	fs pop rdi
  40a763:	ja     0x40a7d7
  40a765:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x70736964
  40a76d:	(bad)  
  40a76e:	je     0x40a7d3
  40a770:	push   0x4b000000
  40a775:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a779:	jae    0x40a7da
  40a77b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a77e:	outs   dx,BYTE PTR ds:[rsi]
  40a77f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a784:	outs   dx,BYTE PTR ds:[rsi]
  40a785:	pop    rdi
  40a786:	jae    0x40a7ed
  40a788:	outs   dx,BYTE PTR ds:[rsi]
  40a789:	fs pop rdi
  40a78b:	ja     0x40a7f6
  40a78d:	je     0x40a7f7
  40a78f:	pop    rdi
  40a790:	jb     0x40a7f7
  40a792:	jo     0x40a800
  40a794:	jns    0x40a7f5
  40a796:	(bad)  
  40a797:	outs   dx,BYTE PTR ds:[rsi]
  40a798:	fs pop rdi
  40a79a:	(bad)  
  40a79b:	ins    BYTE PTR es:[rdi],dx
  40a79c:	outs   dx,DWORD PTR ds:[rsi]
  40a79d:	movsxd ebp,DWORD PTR [rbx+0x0]
  40a7a0:	push   rbp
  40a7a1:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a7a5:	jae    0x40a806
  40a7a7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a7aa:	outs   dx,BYTE PTR ds:[rsi]
  40a7ab:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a7b0:	outs   dx,BYTE PTR ds:[rsi]
  40a7b1:	pop    rdi
  40a7b2:	jae    0x40a819
  40a7b4:	je     0x40a815
  40a7b6:	jb     0x40a827
  40a7b8:	jne    0x40a82e
  40a7ba:	gs pop rdi
  40a7bc:	jo     0x40a823
  40a7be:	gs jb  0x40a820
  40a7c1:	ins    DWORD PTR es:[rdi],dx
  40a7c2:	gs jae 0x40a838
  40a7c5:	(bad)  
  40a7c6:	addr32 gs jae 0x40a7ca
  40a7ca:	add    BYTE PTR [rax],al
  40a7cc:	(bad)  
  40a7cd:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a7d1:	jae    0x40a832
  40a7d3:	gs jb  0x40a848
  40a7d6:	outs   dx,DWORD PTR ds:[rsi]
  40a7d7:	jb     0x40a838
  40a7d9:	data16 jb 0x40a841
  40a7dc:	add    BYTE PTR gs:[rax],al
  40a7df:	add    BYTE PTR [rcx+0x1],ah
  40a7e2:	fs (bad) 
  40a7e4:	jne    0x40a859
  40a7e6:	pop    rdi
  40a7e7:	gs jb  0x40a85c
  40a7ea:	outs   dx,DWORD PTR ds:[rsi]
  40a7eb:	jb     0x40a84c
  40a7ed:	push   0x6e5f7361
  40a7f2:	(bad)  
  40a7f3:	ins    DWORD PTR es:[rdi],dx
  40a7f4:	add    BYTE PTR gs:[rax],al
  40a7f7:	add    BYTE PTR [rdx+0x1],ah
  40a7fa:	fs (bad) 
  40a7fc:	jne    0x40a871
  40a7fe:	pop    rdi
  40a7ff:	gs jb  0x40a874
  40a802:	outs   dx,DWORD PTR ds:[rsi]
  40a803:	jb     0x40a864
  40a805:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  40a80c:	movsxd eax,DWORD PTR [rcx]
  40a80e:	fs (bad) 
  40a810:	jne    0x40a885
  40a812:	pop    rdi
  40a813:	gs jb  0x40a888
  40a816:	outs   dx,DWORD PTR ds:[rsi]
  40a817:	jb     0x40a878
  40a819:	imul   esi,DWORD PTR [rbx+0x5f],0x746573
  40a820:	add    DWORD PTR fs:[rdx+riz*2+0x75],esp
  40a825:	jae    0x40a886
  40a827:	data16 jb 0x40a88f
  40a82a:	add    BYTE PTR gs:[rax+0x1],ch
  40a82e:	fs (bad) 
  40a830:	jne    0x40a8a5
  40a832:	pop    rdi
  40a833:	ins    DWORD PTR es:[rdi],dx
  40a834:	(bad)  
  40a835:	ins    BYTE PTR es:[rdi],dx
  40a836:	ins    BYTE PTR es:[rdi],dx
  40a837:	outs   dx,DWORD PTR ds:[rsi]
  40a838:	movsxd eax,DWORD PTR [rax]
  40a83a:	add    BYTE PTR [rax],al
  40a83c:	ja     0x40a83f
  40a83e:	fs (bad) 
  40a840:	jne    0x40a8b5
  40a842:	pop    rdi
  40a843:	ins    DWORD PTR es:[rdi],dx
  40a844:	gs jae 0x40a8ba
  40a847:	(bad)  
  40a848:	addr32 gs pop rdi
  40a84b:	addr32 gs je 0x40a8ae
  40a84f:	fs gs jae 0x40a8c7
  40a853:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  40a85a:	add    BYTE PTR [rax],al
  40a85c:	js     0x40a85f
  40a85e:	fs (bad) 
  40a860:	jne    0x40a8d5
  40a862:	pop    rdi
  40a863:	ins    DWORD PTR es:[rdi],dx
  40a864:	gs jae 0x40a8da
  40a867:	(bad)  
  40a868:	addr32 gs pop rdi
  40a86b:	addr32 gs je 0x40a8ce
  40a86f:	gs jb  0x40a8e4
  40a872:	outs   dx,DWORD PTR ds:[rsi]
  40a873:	jb     0x40a8d4
  40a875:	outs   dx,BYTE PTR ds:[rsi]
  40a876:	(bad)  
  40a877:	ins    DWORD PTR es:[rdi],dx
  40a878:	add    BYTE PTR gs:[rax],al
  40a87b:	add    BYTE PTR [rcx+0x1],bh
  40a87e:	fs (bad) 
  40a880:	jne    0x40a8f5
  40a882:	pop    rdi
  40a883:	ins    DWORD PTR es:[rdi],dx
  40a884:	gs jae 0x40a8fa
  40a887:	(bad)  
  40a888:	addr32 gs pop rdi
  40a88b:	addr32 gs je 0x40a8ee
  40a88f:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  40a896:	movsxd esp,DWORD PTR [rbp+0x0]
  40a899:	add    BYTE PTR [rax],al
  40a89b:	add    BYTE PTR [rdx+0x1],bh
  40a89e:	fs (bad) 
  40a8a0:	jne    0x40a915
  40a8a2:	pop    rdi
  40a8a3:	ins    DWORD PTR es:[rdi],dx
  40a8a4:	gs jae 0x40a91a
  40a8a7:	(bad)  
  40a8a8:	addr32 gs pop rdi
  40a8ab:	addr32 gs je 0x40a90e
  40a8af:	ins    DWORD PTR es:[rdi],dx
  40a8b0:	gs ins DWORD PTR es:[rdi],dx
  40a8b2:	(bad)  
  40a8b3:	gs jb  0x40a8b6
  40a8b6:	add    BYTE PTR [rax],al
  40a8b8:	jl     0x40a8bb
  40a8ba:	fs (bad) 
  40a8bc:	jne    0x40a931
  40a8be:	pop    rdi
  40a8bf:	ins    DWORD PTR es:[rdi],dx
  40a8c0:	gs jae 0x40a936
  40a8c3:	(bad)  
  40a8c4:	addr32 gs pop rdi
  40a8c7:	addr32 gs je 0x40a92a
  40a8cb:	jo     0x40a92e
  40a8cd:	je     0x40a937
  40a8cf:	add    BYTE PTR [rsi+0x1],bh
  40a8d2:	fs (bad) 
  40a8d4:	jne    0x40a949
  40a8d6:	pop    rdi
  40a8d7:	ins    DWORD PTR es:[rdi],dx
  40a8d8:	gs jae 0x40a94e
  40a8db:	(bad)  
  40a8dc:	addr32 gs pop rdi
  40a8df:	addr32 gs je 0x40a942
  40a8e3:	jb     0x40a94a
  40a8e5:	jo     0x40a953
  40a8e7:	jns    0x40a948
  40a8e9:	jae    0x40a950
  40a8eb:	jb     0x40a956
  40a8ed:	(bad)  
  40a8ee:	ins    BYTE PTR es:[rdi],dx
  40a8ef:	add    BYTE PTR [rdi+0x1],bh
  40a8f2:	fs (bad) 
  40a8f4:	jne    0x40a969
  40a8f6:	pop    rdi
  40a8f7:	ins    DWORD PTR es:[rdi],dx
  40a8f8:	gs jae 0x40a96e
  40a8fb:	(bad)  
  40a8fc:	addr32 gs pop rdi
  40a8ff:	addr32 gs je 0x40a962
  40a903:	jae    0x40a96a
  40a905:	outs   dx,BYTE PTR ds:[rsi]
  40a906:	fs gs jb 0x40a90a
  40a90a:	add    BYTE PTR [rax],al
  40a90c:	add    BYTE PTR [rcx],0x64
  40a90f:	(bad)  
  40a910:	jne    0x40a985
  40a912:	pop    rdi
  40a913:	ins    DWORD PTR es:[rdi],dx
  40a914:	gs jae 0x40a98a
  40a917:	(bad)  
  40a918:	addr32 gs pop rdi
  40a91b:	addr32 gs je 0x40a97e
  40a91f:	jae    0x40a986
  40a921:	jb     0x40a98c
  40a923:	(bad)  
  40a924:	ins    BYTE PTR es:[rdi],dx
  40a925:	add    BYTE PTR [rax],al
  40a927:	add    BYTE PTR [rdx+0x75626401],al
  40a92d:	jae    0x40a98e
  40a92f:	ins    DWORD PTR es:[rdi],dx
  40a930:	gs jae 0x40a9a6
  40a933:	(bad)  
  40a934:	addr32 gs pop rdi
  40a937:	addr32 gs je 0x40a99a
  40a93b:	je     0x40a9b6
  40a93d:	jo     0x40a9a4
  40a93f:	add    BYTE PTR [rbx+0x75626401],cl
  40a945:	jae    0x40a9a6
  40a947:	ins    DWORD PTR es:[rdi],dx
  40a948:	gs jae 0x40a9be
  40a94b:	(bad)  
  40a94c:	addr32 gs pop rdi
  40a94f:	imul   esi,DWORD PTR [rbx+0x5f],0x6e676973
  40a956:	(bad)  
  40a957:	ins    BYTE PTR es:[rdi],dx
  40a958:	add    BYTE PTR [rax],al
  40a95a:	add    BYTE PTR [rax],al
  40a95c:	lea    eax,[rcx]
  40a95e:	fs (bad) 
  40a960:	jne    0x40a9d5
  40a962:	pop    rdi
  40a963:	ins    DWORD PTR es:[rdi],dx
  40a964:	gs jae 0x40a9da
  40a967:	(bad)  
  40a968:	addr32 gs pop rdi
  40a96b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7070615f
  40a973:	outs   dx,BYTE PTR gs:[rsi]
  40a975:	fs pop rdi
  40a977:	(bad)  
  40a979:	jae    0x40a9e4
  40a97b:	movsxd eax,DWORD PTR [rax]
  40a97d:	add    BYTE PTR [rax],al
  40a97f:	add    BYTE PTR [rdi+0x75626401],cl
  40a985:	jae    0x40a9e6
  40a987:	ins    DWORD PTR es:[rdi],dx
  40a988:	gs jae 0x40a9fe
  40a98b:	(bad)  
  40a98c:	addr32 gs pop rdi
  40a98f:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f6c635f
  40a997:	jae    0x40a9fe
  40a999:	pop    rdi
  40a99a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a99d:	je     0x40aa00
  40a99f:	imul   ebp,DWORD PTR [rsi+0x65],0x1900072
  40a9a6:	fs (bad) 
  40a9a8:	jne    0x40aa1d
  40a9aa:	pop    rdi
  40a9ab:	ins    DWORD PTR es:[rdi],dx
  40a9ac:	gs jae 0x40aa22
  40a9af:	(bad)  
  40a9b0:	addr32 gs pop rdi
  40a9b3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  40a9bb:	pop    rdi
  40a9bc:	(bad)  
  40a9bd:	jb     0x40aa26
  40a9bf:	pop    rdi
  40a9c0:	je     0x40aa3b
  40a9c2:	jo     0x40aa29
  40a9c4:	add    BYTE PTR [rax],al
  40a9c6:	add    BYTE PTR [rax],al
  40a9c8:	xchg   edx,eax
  40a9c9:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a9cd:	jae    0x40aa2e
  40a9cf:	ins    DWORD PTR es:[rdi],dx
  40a9d0:	gs jae 0x40aa46
  40a9d3:	(bad)  
  40a9d4:	addr32 gs pop rdi
  40a9d7:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  40a9df:	pop    rdi
  40a9e0:	(bad)  
  40a9e2:	jae    0x40aa4d
  40a9e4:	movsxd eax,DWORD PTR [rax]
  40a9e6:	add    BYTE PTR [rax],al
  40a9e8:	xchg   ebp,eax
  40a9e9:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40a9ed:	jae    0x40aa4e
  40a9ef:	ins    DWORD PTR es:[rdi],dx
  40a9f0:	gs jae 0x40aa66
  40a9f3:	(bad)  
  40a9f4:	addr32 gs pop rdi
  40a9f7:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x7465675f
  40a9ff:	pop    rdi
  40aa00:	imul   di,WORD PTR [rax+0x65],0x5f64
  40aa06:	(bad)  
  40aa07:	jb     0x40aa7b
  40aa09:	(bad)  
  40aa0a:	jns    0x40aa0c
  40aa0c:	cwde   
  40aa0d:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40aa11:	jae    0x40aa72
  40aa13:	ins    DWORD PTR es:[rdi],dx
  40aa14:	gs jae 0x40aa8a
  40aa17:	(bad)  
  40aa18:	addr32 gs pop rdi
  40aa1b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  40aa23:	je     0x40aa25
  40aa25:	add    BYTE PTR [rax],al
  40aa27:	add    BYTE PTR [rcx+0x75626401],bl
  40aa2d:	jae    0x40aa8e
  40aa2f:	ins    DWORD PTR es:[rdi],dx
  40aa30:	gs jae 0x40aaa6
  40aa33:	(bad)  
  40aa34:	addr32 gs pop rdi
  40aa37:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  40aa3f:	je     0x40aaa0
  40aa41:	(bad)  
  40aa42:	jo     0x40aab4
  40aa44:	outs   dx,BYTE PTR gs:[rsi]
  40aa46:	add    BYTE PTR fs:[rdx+0x75626401],bl
  40aa4d:	jae    0x40aaae
  40aa4f:	ins    DWORD PTR es:[rdi],dx
  40aa50:	gs jae 0x40aac6
  40aa53:	(bad)  
  40aa54:	addr32 gs pop rdi
  40aa57:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x78656e5f
  40aa5f:	je     0x40aa61
  40aa61:	add    BYTE PTR [rax],al
  40aa63:	add    BYTE PTR [rbx+0x75626401],bl
  40aa69:	jae    0x40aaca
  40aa6b:	ins    DWORD PTR es:[rdi],dx
  40aa6c:	gs jae 0x40aae2
  40aa6f:	(bad)  
  40aa70:	addr32 gs pop rdi
  40aa73:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x65706f5f
  40aa7b:	outs   dx,BYTE PTR ds:[rsi]
  40aa7c:	pop    rdi
  40aa7d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40aa80:	je     0x40aae3
  40aa82:	imul   ebp,DWORD PTR [rsi+0x65],0x9c000072
  40aa89:	add    DWORD PTR [rdx+riz*2+0x75],esp
  40aa8d:	jae    0x40aaee
  40aa8f:	ins    DWORD PTR es:[rdi],dx
  40aa90:	gs jae 0x40ab06
  40aa93:	(bad)  
  40aa94:	addr32 gs pop rdi
  40aa97:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6365725f
  40aa9f:	jne    0x40ab13
  40aaa1:	jae    0x40ab08
  40aaa3:	add    BYTE PTR [rsi+0x75626401],bl
  40aaa9:	jae    0x40ab0a
  40aaab:	ins    DWORD PTR es:[rdi],dx
  40aaac:	gs jae 0x40ab22
  40aaaf:	(bad)  
  40aab0:	addr32 gs pop rdi
  40aab3:	ins    DWORD PTR es:[rdi],dx
  40aab4:	(bad)  
  40aab5:	jb     0x40ab2a
  40aab7:	push   0x6c61
  40aabc:	movabs ds:0x656d5f7375626401,al
  40aac5:	jae    0x40ab3a
  40aac7:	(bad)  
  40aac8:	addr32 gs pop rdi
  40aacb:	outs   dx,BYTE PTR ds:[rsi]
  40aacc:	gs ja  0x40ab2e
  40aacf:	ins    DWORD PTR es:[rdi],dx
  40aad0:	gs je  0x40ab3b
  40aad3:	outs   dx,DWORD PTR ds:[rsi]
  40aad4:	fs pop rdi
  40aad6:	movsxd esp,DWORD PTR [rcx+0x6c]
  40aad9:	ins    BYTE PTR es:[rdi],dx
  40aada:	add    BYTE PTR [rax],al
  40aadc:	mov    ah,0x1
  40aade:	fs (bad) 
  40aae0:	jne    0x40ab55
  40aae2:	pop    rdi
  40aae3:	ins    DWORD PTR es:[rdi],dx
  40aae4:	gs jae 0x40ab5a
  40aae7:	(bad)  
  40aae8:	addr32 gs pop rdi
  40aaeb:	jne    0x40ab5b
  40aaed:	jb     0x40ab54
  40aaef:	data16 add BYTE PTR [rax],al
  40aaf2:	add    BYTE PTR [rax],al
  40aaf4:	fadd   DWORD PTR [rax]
  40aaf6:	rex.R
  40aaf7:	gs ins BYTE PTR es:[rdi],dx
  40aaf9:	gs je  0x40ab61
  40aafc:	rex.XB jb 0x40ab68
  40aaff:	je     0x40ab6a
  40ab01:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ab04:	push   rbx
  40ab05:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40ab0a:	outs   dx,BYTE PTR ds:[rsi]
  40ab0b:	add    al,bh
  40ab0d:	add    BYTE PTR [rbp+0x6e],al
  40ab10:	je     0x40ab77
  40ab12:	jb     0x40ab57
  40ab14:	jb     0x40ab7f
  40ab16:	je     0x40ab81
  40ab18:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ab1b:	push   rbx
  40ab1c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40ab21:	outs   dx,BYTE PTR ds:[rsi]
  40ab22:	add    BYTE PTR [rax],al
  40ab24:	int    0x1
  40ab26:	rex.RXB
  40ab27:	gs je  0x40ab6d
  40ab2a:	jne    0x40ab9e
  40ab2c:	jb     0x40ab93
  40ab2e:	outs   dx,BYTE PTR ds:[rsi]
  40ab2f:	je     0x40ab81
  40ab31:	jb     0x40aba2
  40ab33:	movsxd esp,DWORD PTR [rbp+0x73]
  40ab36:	jae    0x40ab38
  40ab38:	(bad)  
  40ab39:	add    DWORD PTR [rdi+0x65],eax
  40ab3c:	je     0x40ab81
  40ab3e:	jne    0x40abb2
  40ab40:	jb     0x40aba7
  40ab42:	outs   dx,BYTE PTR ds:[rsi]
  40ab43:	je     0x40ab95
  40ab45:	jb     0x40abb6
  40ab47:	movsxd esp,DWORD PTR [rbp+0x73]
  40ab4a:	jae    0x40ab95
  40ab4c:	fs add dl,dl
  40ab4f:	add    DWORD PTR [rdi+0x65],eax
  40ab52:	je     0x40ab97
  40ab54:	jne    0x40abc8
  40ab56:	jb     0x40abbd
  40ab58:	outs   dx,BYTE PTR ds:[rsi]
  40ab59:	je     0x40abaf
  40ab5b:	push   0x64616572
  40ab60:	rex.WB
  40ab61:	add    BYTE PTR fs:[rax],al
  40ab64:	adc    BYTE PTR [rdx],al
  40ab66:	rex.RXB
  40ab67:	gs je  0x40abb6
  40ab6a:	(bad)  
  40ab6b:	jae    0x40abe1
  40ab6d:	rex.RB jb 0x40abe2
  40ab70:	outs   dx,DWORD PTR ds:[rsi]
  40ab71:	jb     0x40ab73
  40ab73:	add    BYTE PTR [rbx+0x2],dh
  40ab76:	rex.RXB
  40ab77:	gs je  0x40abcd
  40ab7a:	je     0x40abdd
  40ab7c:	jb     0x40abf2
  40ab7e:	jne    0x40abf0
  40ab80:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40ab82:	outs   dx,WORD PTR ds:[rsi]
  40ab84:	add    BYTE PTR [r10+0x74654702],cl
  40ab8b:	push   rbx
  40ab8c:	jns    0x40ac01
  40ab8e:	je     0x40abf5
  40ab90:	ins    DWORD PTR es:[rdi],dx
  40ab91:	push   rsp
  40ab92:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40ab99:	ins    BYTE PTR es:[rdi],dx
  40ab9a:	gs push rsp
  40ab9c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40aba3:	gs je  0x40abfa
  40aba6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40abad:	je     0x40abaf
  40abaf:	add    cl,bh
  40abb1:	add    cl,BYTE PTR [rcx+0x6e]
  40abb4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40abbc:	rex.XB jb 0x40ac28
  40abbf:	je     0x40ac2a
  40abc1:	movsxd esp,DWORD PTR [rcx+0x6c]
  40abc4:	push   rbx
  40abc5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40abca:	outs   dx,BYTE PTR ds:[rsi]
  40abcb:	add    BYTE PTR [rbx+0x3],cl
  40abce:	rex.WR
  40abcf:	gs (bad) 
  40abd1:	jbe    0x40ac38
  40abd3:	rex.XB jb 0x40ac3f
  40abd6:	je     0x40ac41
  40abd8:	movsxd esp,DWORD PTR [rcx+0x6c]
  40abdb:	push   rbx
  40abdc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40abe1:	outs   dx,BYTE PTR ds:[rsi]
  40abe2:	add    BYTE PTR [rax],al
  40abe4:	mov    ebx,0x65755103
  40abe9:	jb     0x40ac64
  40abeb:	push   rax
  40abec:	gs jb  0x40ac55
  40abef:	outs   dx,DWORD PTR ds:[rsi]
  40abf0:	jb     0x40ac5f
  40abf2:	(bad)  
  40abf3:	outs   dx,BYTE PTR ds:[rsi]
  40abf4:	movsxd esp,DWORD PTR [rbp+0x43]
  40abf7:	outs   dx,DWORD PTR ds:[rsi]
  40abf8:	jne    0x40ac68
  40abfa:	je     0x40ac61
  40abfc:	jb     0x40abfe
  40abfe:	add    DWORD PTR [rdx+rdx*2],eax
  40ac01:	je     0x40ac6f
  40ac03:	rex.B
  40ac04:	fs fs rex.RX jne 0x40ac77
  40ac09:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40ac0d:	outs   dx,BYTE PTR ds:[rsi]
  40ac0e:	push   rsp
  40ac0f:	(bad)  
  40ac10:	(bad)  
  40ac11:	ins    BYTE PTR es:[rdi],dx
  40ac12:	add    BYTE PTR gs:[rdx],al
  40ac15:	add    al,0x52
  40ac17:	je     0x40ac85
  40ac19:	rex.XB (bad) 
  40ac1b:	jo     0x40ac91
  40ac1d:	jne    0x40ac91
  40ac1f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40ac22:	outs   dx,BYTE PTR ds:[rsi]
  40ac23:	je     0x40ac8a
  40ac25:	js     0x40ac9b
  40ac27:	add    BYTE PTR [rcx],cl
  40ac29:	add    al,0x52
  40ac2b:	je     0x40ac99
  40ac2d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40ac2f:	outs   dx,DWORD PTR ds:[rsi]
  40ac30:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40ac34:	jne    0x40aca4
  40ac36:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40ac3a:	outs   dx,BYTE PTR ds:[rsi]
  40ac3b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40ac3d:	je     0x40acb1
  40ac3f:	jns    0x40ac41
  40ac41:	add    BYTE PTR [rax],dl
  40ac43:	add    al,0x52
  40ac45:	je     0x40acb3
  40ac47:	push   rsi
  40ac48:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40ac4f:	outs   dx,BYTE PTR ds:[rsi]
  40ac50:	ja     0x40acbb
  40ac52:	outs   dx,BYTE PTR ds:[rsi]
  40ac53:	add    BYTE PTR fs:[rax],al
  40ac56:	lahf   
  40ac57:	add    al,0x53
  40ac59:	gs je  0x40acb1
  40ac5c:	outs   dx,BYTE PTR ds:[rsi]
  40ac5d:	push   0x6c646e61
  40ac62:	gs fs rex.RB js 0x40acca
  40ac67:	gs jo  0x40acde
  40ac6a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40ac71:	gs jb  0x40ac74
  40ac74:	lods   al,BYTE PTR ds:[rsi]
  40ac75:	add    al,0x53
  40ac77:	ins    BYTE PTR es:[rdi],dx
  40ac78:	gs gs jo 0x40ac7c
  40ac7c:	mov    edx,0x72655404
  40ac81:	ins    DWORD PTR es:[rdi],dx
  40ac82:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40ac89:	outs   dx,DWORD PTR ds:[rsi]
  40ac8a:	movsxd esp,DWORD PTR [rbp+0x73]
  40ac8d:	jae    0x40ac8f
  40ac8f:	add    cl,al
  40ac91:	add    al,0x54
  40ac93:	ins    BYTE PTR es:[rdi],dx
  40ac94:	jae    0x40acdd
  40ac96:	gs je  0x40acef
  40ac99:	(bad)  
  40ac9a:	ins    BYTE PTR es:[rdi],dx
  40ac9b:	jne    0x40ad02
  40ac9d:	add    dh,cl
  40ac9f:	add    al,0x55
  40aca1:	outs   dx,BYTE PTR ds:[rsi]
  40aca2:	push   0x6c646e61
  40aca7:	gs fs rex.RB js 0x40ad0f
  40acac:	gs jo  0x40ad23
  40acaf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40acb6:	gs jb  0x40acb9
  40acb9:	add    ah,ch
  40acbb:	add    al,0x56
  40acbd:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40acc4:	jb     0x40ad35
  40acc6:	je     0x40ad2d
  40acc8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40accc:	out    dx,al
  40accd:	add    al,0x56
  40accf:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40acd6:	jne    0x40ad3d
  40acd8:	jb     0x40ad53
  40acda:	add    BYTE PTR [rax],al
  40acdc:	(bad)  
  40acdd:	add    BYTE PTR [rdi+0x5f],bl
  40ace0:	rex.XB pop r15
  40ace2:	jae    0x40ad54
  40ace4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40ace8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40acef:	ins    BYTE PTR es:[rdi],dx
  40acf0:	gs jb  0x40acf3
  40acf3:	add    BYTE PTR [rsi+0x0],cl
  40acf6:	pop    rdi
  40acf7:	pop    rdi
  40acf8:	fs ins BYTE PTR es:[rdi],dx
  40acfa:	ins    BYTE PTR es:[rdi],dx
  40acfb:	outs   dx,DWORD PTR ds:[rsi]
  40acfc:	outs   dx,BYTE PTR ds:[rsi]
  40acfd:	gs js  0x40ad69
  40ad00:	je     0x40ad02
  40ad02:	push   rcx
  40ad03:	add    BYTE PTR [rdi+0x5f],bl
  40ad06:	addr32 gs je 0x40ad77
  40ad0a:	(bad)  
  40ad0b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40ad12:	push   rdx
  40ad13:	add    BYTE PTR [rdi+0x5f],bl
  40ad16:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40ad1d:	add    BYTE PTR [rbx+0x0],dl
  40ad20:	pop    rdi
  40ad21:	pop    rdi
  40ad22:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40ad29:	movsxd eax,DWORD PTR [rax]
  40ad2b:	add    BYTE PTR [rdx+0x0],bl
  40ad2e:	pop    rdi
  40ad2f:	pop    rdi
  40ad30:	ins    BYTE PTR es:[rdi],dx
  40ad31:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ad34:	jbe    0x40ad95
  40ad36:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40ad3d:	add    BYTE PTR [rdi+0x5f],bl
  40ad40:	jae    0x40ada7
  40ad42:	je     0x40ada3
  40ad44:	(bad)  
  40ad45:	jo     0x40adb7
  40ad47:	pop    rdi
  40ad48:	je     0x40adc3
  40ad4a:	jo     0x40adb1
  40ad4c:	add    BYTE PTR [rax],al
  40ad4e:	(bad)  
  40ad4f:	add    BYTE PTR [rdi+0x5f],bl
  40ad52:	jae    0x40adb9
  40ad54:	je     0x40adcb
  40ad56:	jae    0x40adbd
  40ad58:	jb     0x40adc7
  40ad5a:	(bad)  
  40ad5b:	je     0x40adc5
  40ad5d:	gs jb  0x40add2
  40ad60:	add    BYTE PTR [rax],al
  40ad62:	jno    0x40ad64
  40ad64:	pop    rdi
  40ad65:	(bad)  
  40ad66:	movsxd ebp,DWORD PTR [rbp+0x64]
  40ad69:	ins    BYTE PTR es:[rdi],dx
  40ad6a:	outs   dx,BYTE PTR ds:[rsi]
  40ad6b:	add    BYTE PTR [rax+0x0],bh
  40ad6e:	pop    rdi
  40ad6f:	(bad)  
  40ad70:	ins    DWORD PTR es:[rdi],dx
  40ad71:	jae    0x40adda
  40ad73:	pop    rdi
  40ad74:	gs js  0x40ade0
  40ad77:	je     0x40ad79
  40ad79:	add    BYTE PTR [rdx+0x65635f00],cl
  40ad7f:	js     0x40adea
  40ad81:	je     0x40ad83
  40ad83:	add    BYTE PTR [rdx+0x72655f00],bh
  40ad89:	jb     0x40adf9
  40ad8b:	outs   dx,DWORD PTR ds:[rsi]
  40ad8c:	add    BYTE PTR [rax],al
  40ad8e:	fiadd  DWORD PTR [rax]
  40ad90:	pop    rdi
  40ad91:	ins    WORD PTR es:[rdi],dx
  40ad93:	outs   dx,DWORD PTR ds:[rsi]
  40ad94:	fs add BYTE PTR gs:[rax],al
  40ad98:	sbb    al,BYTE PTR [rcx]
  40ad9a:	pop    rdi
  40ad9b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40ada2:	ins    DWORD PTR es:[rdi],dx
  40ada3:	add    BYTE PTR [rax+0x6f6c5f01],al
  40ada9:	movsxd ebp,DWORD PTR [rbx+0x0]
  40adac:	and    eax,0x6e6f5f02
  40adb1:	gs js  0x40ae1d
  40adb4:	je     0x40adb6
  40adb6:	(bad)
  40adba:	outs   dx,BYTE PTR ds:[rsi]
  40adbb:	ins    BYTE PTR es:[rdi],dx
  40adbc:	outs   dx,DWORD PTR ds:[rsi]
  40adbd:	movsxd ebp,DWORD PTR [rbx+0x0]
  40adc0:	loope  0x40adc4
  40adc2:	pop    rdi
  40adc3:	jbe    0x40ae38
  40adc5:	outs   dx,BYTE PTR ds:[rsi]
  40adc6:	jo     0x40ae3a
  40adc8:	imul   ebp,DWORD PTR [rsi+0x74],0x58000066
  40adcf:	add    ebx,DWORD PTR [rdi+0x77]
  40add2:	jb     0x40ae3d
  40add4:	je     0x40ae3b
  40add6:	add    BYTE PTR [rax],al
  40add8:	jg     0x40addd
  40adda:	(bad)  
  40addb:	(bad)  
  40addc:	outs   dx,DWORD PTR ds:[rsi]
  40addd:	jb     0x40ae53
  40addf:	add    BYTE PTR [rax+0x6c616303],dl
  40ade5:	ins    BYTE PTR es:[rdi],dx
  40ade6:	outs   dx,DWORD PTR ds:[rsi]
  40ade7:	movsxd eax,DWORD PTR [rax]
  40ade9:	add    BYTE PTR [rbp+0x69786503],bl
  40adef:	je     0x40adf1
  40adf1:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  40adf8:	jae    0x40ae62
  40adfa:	add    BYTE PTR [rax],al
  40adfc:	mov    al,0x3
  40adfe:	data16 jo 0x40ae73
  40ae01:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40ae08:	data16 jb 0x40ae70
  40ae0b:	add    BYTE PTR gs:[rax],al
  40ae0e:	ret    0x6603
  40ae11:	ja     0x40ae85
  40ae13:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40ae1b:	(bad)  
  40ae1c:	ins    BYTE PTR es:[rdi],dx
  40ae1d:	ins    BYTE PTR es:[rdi],dx
  40ae1e:	outs   dx,DWORD PTR ds:[rsi]
  40ae1f:	movsxd eax,DWORD PTR [rax]
  40ae21:	add    al,bh
  40ae23:	add    ebp,DWORD PTR [rbp+0x65]
  40ae26:	ins    DWORD PTR es:[rdi],dx
  40ae27:	movsxd esi,DWORD PTR [rax+0x79]
  40ae2a:	add    BYTE PTR [rax],al
  40ae2c:	inc    BYTE PTR [rbx]
  40ae2e:	jo     0x40ae95
  40ae30:	jb     0x40aea4
  40ae32:	outs   dx,DWORD PTR ds:[rsi]
  40ae33:	jb     0x40ae35
  40ae35:	add    BYTE PTR [rcx],al
  40ae37:	add    al,0x70
  40ae39:	jb     0x40aea4
  40ae3b:	outs   dx,BYTE PTR ds:[rsi]
  40ae3c:	je     0x40aea4
  40ae3e:	add    BYTE PTR [rax],al
  40ae40:	add    al,0x4
  40ae42:	jo     0x40aeb9
  40ae44:	je     0x40aea9
  40ae46:	push   0x5007261
  40ae4b:	add    al,0x70
  40ae4d:	jne    0x40aec3
  40ae4f:	jae    0x40ae51
  40ae51:	add    BYTE PTR [rsp+rax*1],cl
  40ae54:	jb     0x40aebb
  40ae56:	(bad)  
  40ae57:	ins    BYTE PTR es:[rdi],dx
  40ae58:	ins    BYTE PTR es:[rdi],dx
  40ae59:	outs   dx,DWORD PTR ds:[rsi]
  40ae5a:	movsxd eax,DWORD PTR [rax]
  40ae5c:	adc    eax,0x74657304
  40ae61:	jbe    0x40aec5
  40ae63:	jne    0x40aecb
  40ae65:	add    BYTE PTR [rsi],dl
  40ae67:	add    al,0x73
  40ae69:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40ae70:	and    al,0x4
  40ae72:	jae    0x40aee8
  40ae74:	jb     0x40aed9
  40ae76:	ins    DWORD PTR es:[rdi],dx
  40ae77:	jo     0x40ae79
  40ae79:	add    BYTE PTR [rbx],ch
  40ae7b:	add    al,0x73
  40ae7d:	je     0x40aef1
  40ae7f:	ins    BYTE PTR es:[rdi],dx
  40ae80:	outs   dx,BYTE PTR gs:[rsi]
  40ae82:	add    BYTE PTR [rax],al
  40ae84:	cs add al,0x73
  40ae87:	je     0x40aefb
  40ae89:	outs   dx,BYTE PTR ds:[rsi]
  40ae8a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ae8d:	add    BYTE PTR [rsi+0x4],cl
  40ae90:	jbe    0x40aef8
  40ae92:	jo     0x40af06
  40ae94:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40ae9b:	add    BYTE PTR [rax],al
  40ae9d:	movabs al,ds:0xa0000000a0000000
  40aea6:	add    BYTE PTR [rax],al
  40aea8:	add    BYTE PTR [rax-0x60000000],ah
  40aeae:	add    BYTE PTR [rax],al
  40aeb0:	add    BYTE PTR [rax-0x60000000],ah
  40aeb6:	add    BYTE PTR [rax],al
  40aeb8:	add    BYTE PTR [rax-0x60000000],ah
  40aebe:	add    BYTE PTR [rax],al
  40aec0:	add    BYTE PTR [rax-0x60000000],ah
  40aec6:	add    BYTE PTR [rax],al
  40aec8:	add    BYTE PTR [rax-0x60000000],ah
  40aece:	add    BYTE PTR [rax],al
  40aed0:	add    BYTE PTR [rax-0x60000000],ah
  40aed6:	add    BYTE PTR [rax],al
  40aed8:	add    BYTE PTR [rax-0x60000000],ah
  40aede:	add    BYTE PTR [rax],al
  40aee0:	add    BYTE PTR [rax-0x60000000],ah
  40aee6:	add    BYTE PTR [rax],al
  40aee8:	add    BYTE PTR [rax-0x60000000],ah
  40aeee:	add    BYTE PTR [rax],al
  40aef0:	add    BYTE PTR [rax-0x60000000],ah
  40aef6:	add    BYTE PTR [rax],al
  40aef8:	add    BYTE PTR [rax-0x60000000],ah
  40aefe:	add    BYTE PTR [rax],al
  40af00:	add    BYTE PTR [rax-0x60000000],ah
  40af06:	add    BYTE PTR [rax],al
  40af08:	add    BYTE PTR [rax-0x60000000],ah
  40af0e:	add    BYTE PTR [rax],al
  40af10:	add    BYTE PTR [rax-0x60000000],ah
  40af16:	add    BYTE PTR [rax],al
  40af18:	add    BYTE PTR [rax-0x60000000],ah
  40af1e:	add    BYTE PTR [rax],al
  40af20:	add    BYTE PTR [rax-0x60000000],ah
  40af26:	add    BYTE PTR [rax],al
  40af28:	add    BYTE PTR [rax-0x60000000],ah
  40af2e:	add    BYTE PTR [rax],al
  40af30:	add    BYTE PTR [rax+0x696c0000],ah
  40af36:	(bad)  
  40af37:	fs (bad) 
  40af39:	jne    0x40afae
  40af3b:	sub    eax,0x2e332d31
  40af40:	fs ins BYTE PTR es:[rdi],dx
  40af42:	ins    BYTE PTR es:[rdi],dx
  40af43:	add    BYTE PTR [rax+riz*4],dl
  40af46:	add    BYTE PTR [rax],al
  40af48:	adc    al,0xa0
  40af4a:	add    BYTE PTR [rax],al
  40af4c:	adc    al,0xa0
  40af4e:	add    BYTE PTR [rax],al
  40af50:	adc    al,0xa0
  40af52:	add    BYTE PTR [rax],al
  40af54:	adc    al,0xa0
  40af56:	add    BYTE PTR [rax],al
  40af58:	adc    al,0xa0
  40af5a:	add    BYTE PTR [rax],al
  40af5c:	adc    al,0xa0
  40af5e:	add    BYTE PTR [rax],al
  40af60:	adc    al,0xa0
  40af62:	add    BYTE PTR [rax],al
  40af64:	adc    al,0xa0
  40af66:	add    BYTE PTR [rax],al
  40af68:	adc    al,0xa0
  40af6a:	add    BYTE PTR [rax],al
  40af6c:	adc    al,0xa0
  40af6e:	add    BYTE PTR [rax],al
  40af70:	adc    al,0xa0
  40af72:	add    BYTE PTR [rax],al
  40af74:	adc    al,0xa0
  40af76:	add    BYTE PTR [rax],al
  40af78:	adc    al,0xa0
  40af7a:	add    BYTE PTR [rax],al
  40af7c:	adc    al,0xa0
  40af7e:	add    BYTE PTR [rax],al
  40af80:	adc    al,0xa0
  40af82:	add    BYTE PTR [rax],al
  40af84:	adc    al,0xa0
  40af86:	add    BYTE PTR [rax],al
  40af88:	adc    al,0xa0
  40af8a:	add    BYTE PTR [rax],al
  40af8c:	adc    al,0xa0
  40af8e:	add    BYTE PTR [rax],al
  40af90:	adc    al,0xa0
  40af92:	add    BYTE PTR [rax],al
  40af94:	adc    al,0xa0
  40af96:	add    BYTE PTR [rax],al
  40af98:	adc    al,0xa0
  40af9a:	add    BYTE PTR [rax],al
  40af9c:	adc    al,0xa0
  40af9e:	add    BYTE PTR [rax],al
  40afa0:	rex.WXB
  40afa1:	rex.RB push r10
  40afa3:	rex.WRX
  40afa4:	rex.RB
  40afa5:	xor    r14,QWORD PTR [rdx]
  40afa8:	cs fs ins BYTE PTR es:[rdi],dx
  40afab:	ins    BYTE PTR es:[rdi],dx
  40afac:	add    BYTE PTR [rax],al
  40afae:	add    BYTE PTR [rax],al
  40afb0:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afb6:	add    BYTE PTR [rax],al
  40afb8:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afbe:	add    BYTE PTR [rax],al
  40afc0:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afc6:	add    BYTE PTR [rax],al
  40afc8:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afce:	add    BYTE PTR [rax],al
  40afd0:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afd6:	add    BYTE PTR [rax],al
  40afd8:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afde:	add    BYTE PTR [rax],al
  40afe0:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afe6:	add    BYTE PTR [rax],al
  40afe8:	sub    BYTE PTR [rax-0x5fd80000],ah
  40afee:	add    BYTE PTR [rax],al
  40aff0:	sub    BYTE PTR [rax-0x5fd80000],ah
  40aff6:	add    BYTE PTR [rax],al
  40aff8:	sub    BYTE PTR [rax-0x5fd80000],ah
  40affe:	add    BYTE PTR [rax],al
  40b000:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b006:	add    BYTE PTR [rax],al
  40b008:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b00e:	add    BYTE PTR [rax],al
  40b010:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b016:	add    BYTE PTR [rax],al
  40b018:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b01e:	add    BYTE PTR [rax],al
  40b020:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b026:	add    BYTE PTR [rax],al
  40b028:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b02e:	add    BYTE PTR [rax],al
  40b030:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b036:	add    BYTE PTR [rax],al
  40b038:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b03e:	add    BYTE PTR [rax],al
  40b040:	sub    BYTE PTR [rax-0x5fd80000],ah
  40b046:	add    BYTE PTR [rax],al
  40b048:	sub    BYTE PTR [rax+0x736d0000],ah
  40b04e:	jbe    0x40b0b3
  40b050:	jb     0x40b0c6
  40b052:	cs fs ins BYTE PTR es:[rdi],dx
  40b055:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040c000 <.CRT>:
	...
  40c008:	(bad)  
  40c009:	adc    DWORD PTR [rax+0x0],eax
	...
  40c020:	adc    BYTE PTR [rax],dl
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax+0x4034],ah
	...
  40c03d:	add    BYTE PTR [rax],al
  40c03f:	add    al,dl
  40c041:	add    BYTE PTR ss:[rax],al
  40c045:	add    BYTE PTR [rax],al
  40c047:	add    BYTE PTR [rax+0x4036],ah
	...

Disassembly of section .tls:

000000000040d000 <.tls>:
	...
  40d020:	add    al,dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax-0x30],ah
  40d02a:	add    BYTE PTR [rax],al
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rsi+rdx*4+0x40],bl
  40d033:	add    BYTE PTR [rax],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x40],al
  40d03a:	add    BYTE PTR [rax],al
	...
