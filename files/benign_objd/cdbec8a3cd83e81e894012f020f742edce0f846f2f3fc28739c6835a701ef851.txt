
cdbec8a3cd83e81e894012f020f742edce0f846f2f3fc28739c6835a701ef851.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x10],rbx
   14000100d:	mov    DWORD PTR [rsp+0x18],r8d
   140001012:	mov    QWORD PTR [rsp+0x8],rcx
   140001017:	push   rbp
   140001018:	push   rsi
   140001019:	push   rdi
   14000101a:	sub    rsp,0x20
   14000101e:	movzx  ebp,WORD PTR [rcx]
   140001021:	xor    edi,edi
   140001023:	mov    ebx,r8d
   140001026:	mov    rsi,rdx
   140001029:	mov    rax,rcx
   14000102c:	test   ebp,ebp
   14000102e:	je     0x1400010ad
   140001030:	cmp    ebp,0x2a
   140001033:	je     0x140001094
   140001035:	cmp    ebp,0x3f
   140001038:	je     0x140001085
   14000103a:	test   ebx,ebx
   14000103c:	je     0x140001043
   14000103e:	cmp    bp,WORD PTR [rdx]
   140001041:	jmp    0x140001061
   140001043:	movzx  ecx,WORD PTR [rdx]
   140001046:	call   QWORD PTR [rip+0x538c]        # 0x1400063d8
   14000104c:	mov    ecx,ebp
   14000104e:	mov    ebx,eax
   140001050:	call   QWORD PTR [rip+0x5382]        # 0x1400063d8
   140001056:	cmp    eax,ebx
   140001058:	mov    ebx,DWORD PTR [rsp+0x50]
   14000105c:	mov    rax,QWORD PTR [rsp+0x40]
   140001061:	mov    ecx,edi
   140001063:	sete   cl
   140001066:	test   ecx,ecx
   140001068:	je     0x1400010b4
   14000106a:	lea    rcx,[rax+0x2]
   14000106e:	mov    r8d,ebx
   140001071:	lea    rdx,[rsi+0x2]
   140001075:	call   0x140001008
   14000107a:	test   eax,eax
   14000107c:	je     0x1400010b4
   14000107e:	mov    edi,0x1
   140001083:	jmp    0x1400010b4
   140001085:	cmp    WORD PTR [rdx],di
   140001088:	je     0x1400010b4
   14000108a:	add    rdx,0x2
   14000108e:	add    rcx,0x2
   140001092:	jmp    0x140001075
   140001094:	add    rcx,0x2
   140001098:	call   0x140001008
   14000109d:	test   eax,eax
   14000109f:	jne    0x14000107e
   1400010a1:	cmp    WORD PTR [rsi],di
   1400010a4:	je     0x1400010b4
   1400010a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400010ab:	jmp    0x14000106e
   1400010ad:	cmp    WORD PTR [rdx],di
   1400010b0:	sete   dil
   1400010b4:	mov    eax,edi
   1400010b6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400010bb:	add    rsp,0x20
   1400010bf:	pop    rdi
   1400010c0:	pop    rsi
   1400010c1:	pop    rbp
   1400010c2:	ret    
   1400010c3:	int3   
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	sub    rsp,0x28
   1400010d0:	xor    r8d,r8d
   1400010d3:	lea    rcx,[rip+0x53c6]        # 0x1400064a0
   1400010da:	xor    edx,edx
   1400010dc:	call   QWORD PTR [rip+0x5096]        # 0x140006178
   1400010e2:	mov    QWORD PTR [rip+0x84e7],rax        # 0x1400095d0
   1400010e9:	test   rax,rax
   1400010ec:	je     0x140001124
   1400010ee:	lea    rdx,[rip+0x53cb]        # 0x1400064c0
   1400010f5:	mov    rcx,rax
   1400010f8:	call   QWORD PTR [rip+0x5072]        # 0x140006170
   1400010fe:	mov    QWORD PTR [rip+0x850b],rax        # 0x140009610
   140001105:	test   rax,rax
   140001108:	jne    0x14000112b
   14000110a:	mov    rcx,QWORD PTR [rip+0x84bf]        # 0x1400095d0
   140001111:	test   rcx,rcx
   140001114:	je     0x140001124
   140001116:	call   QWORD PTR [rip+0x5064]        # 0x140006180
   14000111c:	and    QWORD PTR [rip+0x84ac],0x0        # 0x1400095d0
   140001124:	xor    al,al
   140001126:	add    rsp,0x28
   14000112a:	ret    
   14000112b:	mov    al,0x1
   14000112d:	jmp    0x140001126
   14000112f:	int3   
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	mov    QWORD PTR [rsp+0x18],rbx
   14000113d:	mov    QWORD PTR [rsp+0x20],rbp
   140001142:	push   rsi
   140001143:	push   rdi
   140001144:	push   r12
   140001146:	push   r14
   140001148:	push   r15
   14000114a:	sub    rsp,0x80
   140001151:	mov    rax,QWORD PTR [rip+0x7eb0]        # 0x140009008
   140001158:	xor    rax,rsp
   14000115b:	mov    QWORD PTR [rsp+0x70],rax
   140001160:	xor    esi,esi
   140001162:	xor    r15d,r15d
   140001165:	and    DWORD PTR [rsp+0x20],esi
   140001169:	mov    r14,rdx
   14000116c:	mov    rdi,rcx
   14000116f:	mov    ebp,0x54f
   140001174:	lea    r12d,[rsi+0x1]
   140001178:	test   rcx,rcx
   14000117b:	je     0x140001293
   140001181:	mov    rdx,QWORD PTR [rdi+0x48]
   140001185:	test   r14,r14
   140001188:	je     0x1400011a6
   14000118a:	test   rdx,rdx
   14000118d:	je     0x14000119c
   14000118f:	xor    r8d,r8d
   140001192:	mov    rcx,r14
   140001195:	call   0x140001008
   14000119a:	jmp    0x14000119e
   14000119c:	xor    eax,eax
   14000119e:	test   eax,eax
   1400011a0:	je     0x140001279
   1400011a6:	cmp    DWORD PTR [rdi+0x64],0x18
   1400011aa:	je     0x140001279
   1400011b0:	test   BYTE PTR [rdi+0x5c],0x80
   1400011b4:	je     0x140001279
   1400011ba:	lea    rcx,[rdi+0xe0]
   1400011c1:	mov    r8d,0x20
   1400011c7:	lea    rdx,[rsp+0x30]
   1400011cc:	call   QWORD PTR [rip+0x4e96]        # 0x140006068
   1400011d2:	test   eax,eax
   1400011d4:	jne    0x140001267
   1400011da:	mov    rbx,QWORD PTR [rip+0x842f]        # 0x140009610
   1400011e1:	mov    rcx,rbx
   1400011e4:	call   QWORD PTR [rip+0x523e]        # 0x140006428
   1400011ea:	lea    rdx,[rsp+0x20]
   1400011ef:	lea    rcx,[rsp+0x30]
   1400011f4:	call   rbx
   1400011f6:	test   eax,eax
   1400011f8:	jne    0x140001267
   1400011fa:	add    esi,r12d
   1400011fd:	cmp    DWORD PTR [rdi+0x68],0x2
   140001201:	jne    0x140001212
   140001203:	mov    ecx,r12d
   140001206:	call   0x140005558
   14000120b:	mov    edx,0x2909
   140001210:	jmp    0x140001259
   140001212:	cmp    DWORD PTR [rsp+0x20],0x0
   140001217:	jne    0x140001231
   140001219:	test   r14,r14
   14000121c:	je     0x14000122d
   14000121e:	mov    ecx,r12d
   140001221:	call   0x140005558
   140001226:	mov    edx,0x2906
   14000122b:	jmp    0x140001259
   14000122d:	dec    esi
   14000122f:	jmp    0x140001279
   140001231:	lea    rcx,[rsp+0x30]
   140001236:	call   QWORD PTR [rip+0x508c]        # 0x1400062c8
   14000123c:	test   eax,eax
   14000123e:	jne    0x140001245
   140001240:	mov    r15d,r12d
   140001243:	jmp    0x140001279
   140001245:	cmp    eax,0x79
   140001248:	jne    0x140001267
   14000124a:	mov    ecx,r12d
   14000124d:	mov    ebp,eax
   14000124f:	call   0x140005558
   140001254:	mov    edx,0x2904
   140001259:	mov    r8,QWORD PTR [rdi+0x48]
   14000125d:	mov    rcx,rax
   140001260:	call   0x14000499c
   140001265:	jmp    0x140001279
   140001267:	mov    r8,QWORD PTR [rdi+0x48]
   14000126b:	mov    ecx,0x2905
   140001270:	mov    edx,eax
   140001272:	mov    ebp,eax
   140001274:	call   0x140002370
   140001279:	mov    rdi,QWORD PTR [rdi+0x8]
   14000127d:	test   rdi,rdi
   140001280:	jne    0x140001181
   140001286:	test   r15d,r15d
   140001289:	je     0x14000128f
   14000128b:	xor    eax,eax
   14000128d:	jmp    0x1400012aa
   14000128f:	test   esi,esi
   140001291:	jne    0x1400012a8
   140001293:	mov    ecx,r12d
   140001296:	call   0x140005558
   14000129b:	mov    rcx,rax
   14000129e:	mov    edx,0x2908
   1400012a3:	call   0x14000499c
   1400012a8:	mov    eax,ebp
   1400012aa:	mov    rcx,QWORD PTR [rsp+0x70]
   1400012af:	xor    rcx,rsp
   1400012b2:	call   0x140004f50
   1400012b7:	lea    r11,[rsp+0x80]
   1400012bf:	mov    rbx,QWORD PTR [r11+0x40]
   1400012c3:	mov    rbp,QWORD PTR [r11+0x48]
   1400012c7:	mov    rsp,r11
   1400012ca:	pop    r15
   1400012cc:	pop    r14
   1400012ce:	pop    r12
   1400012d0:	pop    rdi
   1400012d1:	pop    rsi
   1400012d2:	ret    
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	mov    QWORD PTR [rsp+0x18],rbx
   1400012e1:	push   rbp
   1400012e2:	push   rsi
   1400012e3:	push   rdi
   1400012e4:	push   r14
   1400012e6:	push   r15
   1400012e8:	sub    rsp,0x80
   1400012ef:	mov    rax,QWORD PTR [rip+0x7d12]        # 0x140009008
   1400012f6:	xor    rax,rsp
   1400012f9:	mov    QWORD PTR [rsp+0x70],rax
   1400012fe:	xor    esi,esi
   140001300:	xor    r15d,r15d
   140001303:	and    DWORD PTR [rsp+0x20],esi
   140001307:	mov    r14,rdx
   14000130a:	mov    rdi,rcx
   14000130d:	mov    ebp,0x54f
   140001312:	test   rcx,rcx
   140001315:	je     0x140001414
   14000131b:	mov    rdx,QWORD PTR [rdi+0x48]
   14000131f:	test   r14,r14
   140001322:	je     0x140001340
   140001324:	test   rdx,rdx
   140001327:	je     0x140001336
   140001329:	xor    r8d,r8d
   14000132c:	mov    rcx,r14
   14000132f:	call   0x140001008
   140001334:	jmp    0x140001338
   140001336:	xor    eax,eax
   140001338:	test   eax,eax
   14000133a:	je     0x1400013fa
   140001340:	cmp    DWORD PTR [rdi+0x64],0x18
   140001344:	je     0x1400013fa
   14000134a:	test   BYTE PTR [rdi+0x5c],0x80
   14000134e:	je     0x1400013fa
   140001354:	lea    rcx,[rdi+0xe0]
   14000135b:	mov    r8d,0x20
   140001361:	lea    rdx,[rsp+0x30]
   140001366:	call   QWORD PTR [rip+0x4cfc]        # 0x140006068
   14000136c:	test   eax,eax
   14000136e:	jne    0x1400013e8
   140001370:	mov    rbx,QWORD PTR [rip+0x8299]        # 0x140009610
   140001377:	mov    rcx,rbx
   14000137a:	call   QWORD PTR [rip+0x50a8]        # 0x140006428
   140001380:	lea    rdx,[rsp+0x20]
   140001385:	lea    rcx,[rsp+0x30]
   14000138a:	call   rbx
   14000138c:	test   eax,eax
   14000138e:	jne    0x1400013e8
   140001390:	inc    esi
   140001392:	cmp    DWORD PTR [rsp+0x20],eax
   140001396:	jne    0x1400013b0
   140001398:	test   r14,r14
   14000139b:	je     0x1400013ac
   14000139d:	lea    ecx,[rax+0x1]
   1400013a0:	call   0x140005558
   1400013a5:	mov    edx,0x2906
   1400013aa:	jmp    0x1400013c5
   1400013ac:	dec    esi
   1400013ae:	jmp    0x1400013fa
   1400013b0:	cmp    DWORD PTR [rdi+0x68],0x2
   1400013b4:	jne    0x1400013d3
   1400013b6:	mov    ecx,0x1
   1400013bb:	call   0x140005558
   1400013c0:	mov    edx,0x2909
   1400013c5:	mov    r8,QWORD PTR [rdi+0x48]
   1400013c9:	mov    rcx,rax
   1400013cc:	call   0x14000499c
   1400013d1:	jmp    0x1400013fa
   1400013d3:	lea    rcx,[rsp+0x30]
   1400013d8:	call   QWORD PTR [rip+0x4eda]        # 0x1400062b8
   1400013de:	test   eax,eax
   1400013e0:	jne    0x1400013e8
   1400013e2:	lea    r15d,[rax+0x1]
   1400013e6:	jmp    0x1400013fa
   1400013e8:	mov    r8,QWORD PTR [rdi+0x48]
   1400013ec:	mov    ecx,0x2907
   1400013f1:	mov    edx,eax
   1400013f3:	mov    ebp,eax
   1400013f5:	call   0x140002370
   1400013fa:	mov    rdi,QWORD PTR [rdi+0x8]
   1400013fe:	test   rdi,rdi
   140001401:	jne    0x14000131b
   140001407:	test   r15d,r15d
   14000140a:	je     0x140001410
   14000140c:	xor    eax,eax
   14000140e:	jmp    0x14000142d
   140001410:	test   esi,esi
   140001412:	jne    0x14000142b
   140001414:	mov    ecx,0x1
   140001419:	call   0x140005558
   14000141e:	mov    rcx,rax
   140001421:	mov    edx,0x2908
   140001426:	call   0x14000499c
   14000142b:	mov    eax,ebp
   14000142d:	mov    rcx,QWORD PTR [rsp+0x70]
   140001432:	xor    rcx,rsp
   140001435:	call   0x140004f50
   14000143a:	mov    rbx,QWORD PTR [rsp+0xc0]
   140001442:	add    rsp,0x80
   140001449:	pop    r15
   14000144b:	pop    r14
   14000144d:	pop    rdi
   14000144e:	pop    rsi
   14000144f:	pop    rbp
   140001450:	ret    
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	mov    QWORD PTR [rsp+0x18],rbx
   14000145d:	mov    QWORD PTR [rsp+0x20],rbp
   140001462:	push   rsi
   140001463:	push   rdi
   140001464:	push   r12
   140001466:	push   r14
   140001468:	push   r15
   14000146a:	sub    rsp,0x80
   140001471:	mov    rax,QWORD PTR [rip+0x7b90]        # 0x140009008
   140001478:	xor    rax,rsp
   14000147b:	mov    QWORD PTR [rsp+0x70],rax
   140001480:	xor    edi,edi
   140001482:	xor    r15d,r15d
   140001485:	and    DWORD PTR [rsp+0x20],edi
   140001489:	mov    r12,rdx
   14000148c:	mov    rbx,rcx
   14000148f:	test   rcx,rcx
   140001492:	je     0x1400015ef
   140001498:	mov    rdx,QWORD PTR [rbx+0x48]
   14000149c:	test   r12,r12
   14000149f:	je     0x1400014bd
   1400014a1:	test   rdx,rdx
   1400014a4:	je     0x1400014b3
   1400014a6:	xor    r8d,r8d
   1400014a9:	mov    rcx,r12
   1400014ac:	call   0x140001008
   1400014b1:	jmp    0x1400014b5
   1400014b3:	xor    eax,eax
   1400014b5:	test   eax,eax
   1400014b7:	je     0x1400015d9
   1400014bd:	lea    rcx,[rbx+0xe0]
   1400014c4:	mov    r8d,0x20
   1400014ca:	lea    rdx,[rsp+0x30]
   1400014cf:	inc    r15d
   1400014d2:	call   QWORD PTR [rip+0x4b90]        # 0x140006068
   1400014d8:	test   eax,eax
   1400014da:	jne    0x14000160b
   1400014e0:	and    DWORD PTR [rsp+0x20],eax
   1400014e4:	lea    r8,[rsp+0x20]
   1400014e9:	xor    r9d,r9d
   1400014ec:	lea    rdx,[rsp+0x30]
   1400014f1:	xor    ecx,ecx
   1400014f3:	call   QWORD PTR [rip+0x4dd7]        # 0x1400062d0
   1400014f9:	mov    edi,eax
   1400014fb:	cmp    eax,0xea
   140001500:	je     0x140001528
   140001502:	test   eax,eax
   140001504:	jne    0x1400015c9
   14000150a:	lea    ecx,[rax+0x1]
   14000150d:	call   0x140005558
   140001512:	mov    r8,QWORD PTR [rbx+0x48]
   140001516:	mov    rcx,rax
   140001519:	mov    edx,0x292c
   14000151e:	call   0x14000499c
   140001523:	jmp    0x1400015d9
   140001528:	mov    edx,DWORD PTR [rsp+0x20]
   14000152c:	xor    ecx,ecx
   14000152e:	call   QWORD PTR [rip+0x4c1c]        # 0x140006150
   140001534:	mov    rsi,rax
   140001537:	test   rax,rax
   14000153a:	jne    0x140001544
   14000153c:	lea    edi,[rax+0x8]
   14000153f:	jmp    0x1400015c9
   140001544:	mov    r9,rax
   140001547:	lea    r8,[rsp+0x20]
   14000154c:	lea    rdx,[rsp+0x30]
   140001551:	xor    ecx,ecx
   140001553:	call   QWORD PTR [rip+0x4d77]        # 0x1400062d0
   140001559:	mov    edi,eax
   14000155b:	test   eax,eax
   14000155d:	jne    0x1400015bc
   14000155f:	mov    ebp,DWORD PTR [rsp+0x20]
   140001563:	lea    ecx,[rax+0x1]
   140001566:	call   0x140005558
   14000156b:	mov    r8,QWORD PTR [rbx+0x48]
   14000156f:	mov    rcx,rax
   140001572:	test   ebp,ebp
   140001574:	je     0x1400015b2
   140001576:	mov    edx,0x2936
   14000157b:	call   0x14000499c
   140001580:	test   ebp,ebp
   140001582:	je     0x1400015bc
   140001584:	lea    r14,[rsi+0x8]
   140001588:	mov    ecx,0x1
   14000158d:	call   0x140005558
   140001592:	mov    r9,QWORD PTR [r14+0x8]
   140001596:	mov    rcx,rax
   140001599:	mov    r8,QWORD PTR [r14]
   14000159c:	mov    edx,0x2937
   1400015a1:	call   0x14000499c
   1400015a6:	lea    r14,[r14+0x28]
   1400015aa:	sub    rbp,0x1
   1400015ae:	jne    0x140001588
   1400015b0:	jmp    0x1400015bc
   1400015b2:	mov    edx,0x292c
   1400015b7:	call   0x14000499c
   1400015bc:	mov    rcx,rsi
   1400015bf:	call   QWORD PTR [rip+0x4b93]        # 0x140006158
   1400015c5:	test   edi,edi
   1400015c7:	je     0x1400015d9
   1400015c9:	mov    r8,QWORD PTR [rbx+0x48]
   1400015cd:	mov    ecx,0x2938
   1400015d2:	mov    edx,edi
   1400015d4:	call   0x140002370
   1400015d9:	mov    rbx,QWORD PTR [rbx+0x8]
   1400015dd:	test   rbx,rbx
   1400015e0:	jne    0x140001498
   1400015e6:	test   r15d,r15d
   1400015e9:	je     0x1400015ef
   1400015eb:	mov    eax,edi
   1400015ed:	jmp    0x14000160b
   1400015ef:	mov    ecx,0x1
   1400015f4:	call   0x140005558
   1400015f9:	mov    rcx,rax
   1400015fc:	mov    edx,0x2908
   140001601:	call   0x14000499c
   140001606:	mov    eax,0x490
   14000160b:	mov    rcx,QWORD PTR [rsp+0x70]
   140001610:	xor    rcx,rsp
   140001613:	call   0x140004f50
   140001618:	lea    r11,[rsp+0x80]
   140001620:	mov    rbx,QWORD PTR [r11+0x40]
   140001624:	mov    rbp,QWORD PTR [r11+0x48]
   140001628:	mov    rsp,r11
   14000162b:	pop    r15
   14000162d:	pop    r14
   14000162f:	pop    r12
   140001631:	pop    rdi
   140001632:	pop    rsi
   140001633:	ret    
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	mov    QWORD PTR [rsp+0x8],rbx
   140001641:	mov    QWORD PTR [rsp+0x10],rbp
   140001646:	mov    QWORD PTR [rsp+0x18],rsi
   14000164b:	push   rdi
   14000164c:	sub    rsp,0x240
   140001653:	mov    rax,QWORD PTR [rip+0x79ae]        # 0x140009008
   14000165a:	xor    rax,rsp
   14000165d:	mov    QWORD PTR [rsp+0x230],rax
   140001665:	mov    ebx,r8d
   140001668:	mov    rdi,rcx
   14000166b:	xor    ebp,ebp
   14000166d:	lea    rcx,[rsp+0x32]
   140001672:	mov    r8d,0x1fe
   140001678:	mov    WORD PTR [rsp+0x30],bp
   14000167d:	xor    edx,edx
   14000167f:	mov    rsi,r9
   140001682:	call   0x140005622
   140001687:	lea    r9,[rip+0x4e62]        # 0x1400064f0
   14000168e:	mov    r10d,0x100
   140001694:	lea    rax,[rsp+0x30]
   140001699:	mov    r8d,ebp
   14000169c:	sub    r9,rax
   14000169f:	lea    rdx,[rsp+0x30]
   1400016a4:	lea    rax,[r10+0x7ffffefe]
   1400016ab:	test   rax,rax
   1400016ae:	je     0x1400016c7
   1400016b0:	movzx  eax,WORD PTR [r9+rdx*1]
   1400016b5:	test   ax,ax
   1400016b8:	je     0x1400016c7
   1400016ba:	mov    WORD PTR [rdx],ax
   1400016bd:	add    rdx,0x2
   1400016c1:	sub    r10,0x1
   1400016c5:	jne    0x1400016a4
   1400016c7:	test   r10,r10
   1400016ca:	jne    0x1400016d6
   1400016cc:	sub    rdx,0x2
   1400016d0:	mov    r8d,0x8007007a
   1400016d6:	mov    WORD PTR [rdx],bp
   1400016d9:	test   r8d,r8d
   1400016dc:	jns    0x1400016e5
   1400016de:	mov    eax,0x8
   1400016e3:	jmp    0x140001720
   1400016e5:	mov    r8,rdi
   1400016e8:	lea    rcx,[rsp+0x30]
   1400016ed:	call   0x1400022e8
   1400016f2:	test   eax,eax
   1400016f4:	js     0x1400016de
   1400016f6:	mov    eax,0x2001f
   1400016fb:	mov    QWORD PTR [rsp+0x20],rsi
   140001700:	and    bl,0x2
   140001703:	lea    rdx,[rsp+0x30]
   140001708:	mov    rcx,0xffffffff80000002
   14000170f:	lea    r9d,[rax-0x6]
   140001713:	cmovne r9d,eax
   140001717:	xor    r8d,r8d
   14000171a:	call   QWORD PTR [rip+0x4ad8]        # 0x1400061f8
   140001720:	mov    rcx,QWORD PTR [rsp+0x230]
   140001728:	xor    rcx,rsp
   14000172b:	call   0x140004f50
   140001730:	lea    r11,[rsp+0x240]
   140001738:	mov    rbx,QWORD PTR [r11+0x10]
   14000173c:	mov    rbp,QWORD PTR [r11+0x18]
   140001740:	mov    rsi,QWORD PTR [r11+0x20]
   140001744:	mov    rsp,r11
   140001747:	pop    rdi
   140001748:	ret    
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    QWORD PTR [rsp+0x20],rbx
   140001755:	push   rbp
   140001756:	push   rsi
   140001757:	push   rdi
   140001758:	push   r12
   14000175a:	push   r13
   14000175c:	push   r14
   14000175e:	push   r15
   140001760:	lea    rbp,[rsp-0x27]
   140001765:	sub    rsp,0xf0
   14000176c:	mov    rax,QWORD PTR [rip+0x7895]        # 0x140009008
   140001773:	xor    rax,rsp
   140001776:	mov    QWORD PTR [rbp+0x17],rax
   14000177a:	xor    r13d,r13d
   14000177d:	xor    eax,eax
   14000177f:	mov    rbx,r8
   140001782:	mov    QWORD PTR [rsp+0x40],r13
   140001787:	mov    r12,rdx
   14000178a:	mov    DWORD PTR [rsp+0x48],r13d
   14000178f:	mov    rdi,rcx
   140001792:	mov    QWORD PTR [rbp-0x7d],rax
   140001796:	lea    r8d,[r13+0x28]
   14000179a:	mov    DWORD PTR [rbp-0x75],eax
   14000179d:	xor    edx,edx
   14000179f:	mov    DWORD PTR [rbp-0x71],r13d
   1400017a3:	lea    rcx,[rbp-0x6d]
   1400017a7:	mov    esi,r13d
   1400017aa:	call   0x140005622
   1400017af:	xor    eax,eax
   1400017b1:	mov    WORD PTR [rsp+0x30],r13w
   1400017b7:	test   rbx,rbx
   1400017ba:	mov    QWORD PTR [rsp+0x32],rax
   1400017bf:	lea    r15,[rip+0x4e4a]        # 0x140006610
   1400017c6:	mov    DWORD PTR [rsp+0x3a],eax
   1400017ca:	cmovne r15,rbx
   1400017ce:	mov    WORD PTR [rsp+0x3e],ax
   1400017d3:	or     rax,0xffffffffffffffff
   1400017d7:	mov    r14d,r13d
   1400017da:	inc    rax
   1400017dd:	cmp    WORD PTR [r15+rax*2],r13w
   1400017e2:	jne    0x1400017da
   1400017e4:	cmp    rax,0x100
   1400017ea:	jb     0x1400017f6
   1400017ec:	mov    eax,0x57
   1400017f1:	jmp    0x1400019ba
   1400017f6:	mov    ebx,0x1
   1400017fb:	test   rdi,rdi
   1400017fe:	je     0x1400019a1
   140001804:	cmp    DWORD PTR [rdi+0x64],0x18
   140001808:	je     0x14000196a
   14000180e:	mov    rdx,QWORD PTR [rdi+0x48]
   140001812:	test   r12,r12
   140001815:	je     0x140001834
   140001817:	test   rdx,rdx
   14000181a:	je     0x140001829
   14000181c:	xor    r8d,r8d
   14000181f:	mov    rcx,r12
   140001822:	call   0x140001008
   140001827:	jmp    0x14000182c
   140001829:	mov    eax,r13d
   14000182c:	test   eax,eax
   14000182e:	je     0x14000196a
   140001834:	lea    rcx,[rdi+0xe0]
   14000183b:	add    r14d,ebx
   14000183e:	lea    rdx,[rsp+0x48]
   140001843:	call   QWORD PTR [rip+0x480f]        # 0x140006058
   140001849:	test   eax,eax
   14000184b:	jne    0x1400019ba
   140001851:	lea    rdx,[rsp+0x30]
   140001856:	lea    rcx,[rsp+0x48]
   14000185b:	call   QWORD PTR [rip+0x4bb7]        # 0x140006418
   140001861:	test   eax,eax
   140001863:	js     0x14000199d
   140001869:	mov    esi,0x50
   14000186e:	cmp    WORD PTR [rsp+0x30],si
   140001873:	jae    0x14000198b
   140001879:	movzx  ebx,WORD PTR [rsp+0x30]
   14000187e:	lea    rcx,[rbp-0x39]
   140001882:	mov    rdx,QWORD PTR [rsp+0x38]
   140001887:	mov    r8d,ebx
   14000188a:	call   0x140005616
   14000188f:	shr    rbx,1
   140001892:	add    rbx,rbx
   140001895:	cmp    rbx,rsi
   140001898:	jae    0x1400019e1
   14000189e:	lea    rcx,[rsp+0x30]
   1400018a3:	mov    WORD PTR [rbp+rbx*1-0x39],r13w
   1400018a9:	call   QWORD PTR [rip+0x4b61]        # 0x140006410
   1400018af:	lea    r9,[rsp+0x40]
   1400018b4:	lea    r8d,[rsi-0x4e]
   1400018b8:	lea    rcx,[rbp-0x39]
   1400018bc:	call   0x14000163c
   1400018c1:	mov    ebx,eax
   1400018c3:	test   eax,eax
   1400018c5:	jne    0x140001980
   1400018cb:	or     rax,0xffffffffffffffff
   1400018cf:	inc    rax
   1400018d2:	cmp    WORD PTR [r15+rax*2],r13w
   1400018d7:	jne    0x1400018cf
   1400018d9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400018de:	lea    eax,[rax*2+0x2]
   1400018e5:	mov    DWORD PTR [rsp+0x28],eax
   1400018e9:	lea    rdx,[rip+0x4be0]        # 0x1400064d0
   1400018f0:	mov    ebx,0x1
   1400018f5:	mov    QWORD PTR [rsp+0x20],r15
   1400018fa:	mov    r9d,ebx
   1400018fd:	xor    r8d,r8d
   140001900:	call   QWORD PTR [rip+0x48fa]        # 0x140006200
   140001906:	mov    rcx,QWORD PTR [rsp+0x40]
   14000190b:	call   QWORD PTR [rip+0x48df]        # 0x1400061f0
   140001911:	xor    edx,edx
   140001913:	lea    r8d,[rbx+0x2b]
   140001917:	lea    rcx,[rbp-0x71]
   14000191b:	call   0x140005622
   140001920:	lea    r9,[rbp-0x71]
   140001924:	mov    DWORD PTR [rbp-0x61],ebx
   140001927:	lea    r8,[rbp-0x39]
   14000192b:	mov    QWORD PTR [rsp+0x20],r13
   140001930:	mov    edx,ebx
   140001932:	xor    ecx,ecx
   140001934:	call   QWORD PTR [rip+0x4986]        # 0x1400062c0
   14000193a:	mov    esi,eax
   14000193c:	test   eax,eax
   14000193e:	je     0x140001952
   140001940:	mov    r8,QWORD PTR [rdi+0x48]
   140001944:	mov    edx,esi
   140001946:	mov    ecx,0x2922
   14000194b:	call   0x140002370
   140001950:	jmp    0x14000196a
   140001952:	mov    ecx,ebx
   140001954:	call   0x140005558
   140001959:	mov    r8,QWORD PTR [rdi+0x48]
   14000195d:	mov    rcx,rax
   140001960:	mov    edx,0x2923
   140001965:	call   0x14000499c
   14000196a:	mov    rdi,QWORD PTR [rdi+0x8]
   14000196e:	test   rdi,rdi
   140001971:	jne    0x140001804
   140001977:	test   r14d,r14d
   14000197a:	je     0x1400019a1
   14000197c:	mov    eax,esi
   14000197e:	jmp    0x1400019ba
   140001980:	mov    edx,eax
   140001982:	call   0x140002430
   140001987:	mov    eax,ebx
   140001989:	jmp    0x1400019ba
   14000198b:	lea    rcx,[rsp+0x30]
   140001990:	call   QWORD PTR [rip+0x4a7a]        # 0x140006410
   140001996:	mov    eax,0x54f
   14000199b:	jmp    0x1400019ba
   14000199d:	xor    eax,eax
   14000199f:	jmp    0x1400019ba
   1400019a1:	mov    ecx,ebx
   1400019a3:	call   0x140005558
   1400019a8:	mov    rcx,rax
   1400019ab:	mov    edx,0x2908
   1400019b0:	call   0x14000499c
   1400019b5:	mov    eax,0x490
   1400019ba:	mov    rcx,QWORD PTR [rbp+0x17]
   1400019be:	xor    rcx,rsp
   1400019c1:	call   0x140004f50
   1400019c6:	mov    rbx,QWORD PTR [rsp+0x148]
   1400019ce:	add    rsp,0xf0
   1400019d5:	pop    r15
   1400019d7:	pop    r14
   1400019d9:	pop    r13
   1400019db:	pop    r12
   1400019dd:	pop    rdi
   1400019de:	pop    rsi
   1400019df:	pop    rbp
   1400019e0:	ret    
   1400019e1:	call   0x140005128
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    rax,rsp
   1400019f3:	mov    QWORD PTR [rax+0x8],rbx
   1400019f7:	mov    QWORD PTR [rax+0x18],rbp
   1400019fb:	mov    QWORD PTR [rax+0x20],rsi
   1400019ff:	push   rdi
   140001a00:	sub    rsp,0x30
   140001a04:	and    DWORD PTR [rax+0x10],0x0
   140001a08:	xor    ebx,ebx
   140001a0a:	and    QWORD PTR [rcx],rbx
   140001a0d:	mov    rsi,rcx
   140001a10:	xor    r9d,r9d
   140001a13:	movzx  ebp,dx
   140001a16:	jmp    0x140001a45
   140001a18:	test   rbx,rbx
   140001a1b:	je     0x140001a28
   140001a1d:	mov    rcx,rbx
   140001a20:	call   QWORD PTR [rip+0x4732]        # 0x140006158
   140001a26:	xor    ebx,ebx
   140001a28:	cmp    edi,0x6f
   140001a2b:	jne    0x140001a6b
   140001a2d:	mov    edx,DWORD PTR [rsp+0x48]
   140001a31:	lea    ecx,[rdi-0x2f]
   140001a34:	call   QWORD PTR [rip+0x4716]        # 0x140006150
   140001a3a:	mov    rbx,rax
   140001a3d:	test   rax,rax
   140001a40:	je     0x140001a66
   140001a42:	mov    r9,rax
   140001a45:	xor    r8d,r8d
   140001a48:	lea    rax,[rsp+0x48]
   140001a4d:	mov    ecx,ebp
   140001a4f:	mov    QWORD PTR [rsp+0x20],rax
   140001a54:	lea    edx,[r8+0xf]
   140001a58:	call   QWORD PTR [rip+0x45ea]        # 0x140006048
   140001a5e:	mov    edi,eax
   140001a60:	test   eax,eax
   140001a62:	jne    0x140001a18
   140001a64:	jmp    0x140001a6b
   140001a66:	mov    edi,0x8
   140001a6b:	mov    rbp,QWORD PTR [rsp+0x50]
   140001a70:	mov    eax,edi
   140001a72:	mov    QWORD PTR [rsi],rbx
   140001a75:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a7a:	mov    rsi,QWORD PTR [rsp+0x58]
   140001a7f:	add    rsp,0x30
   140001a83:	pop    rdi
   140001a84:	ret    
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	mov    QWORD PTR [rsp+0x18],rbx
   140001a91:	push   rbp
   140001a92:	push   rsi
   140001a93:	push   rdi
   140001a94:	push   r14
   140001a96:	push   r15
   140001a98:	sub    rsp,0xa0
   140001a9f:	mov    rax,QWORD PTR [rip+0x7562]        # 0x140009008
   140001aa6:	xor    rax,rsp
   140001aa9:	mov    QWORD PTR [rsp+0x90],rax
   140001ab1:	xor    edi,edi
   140001ab3:	xor    ebp,ebp
   140001ab5:	and    DWORD PTR [rsp+0x40],edi
   140001ab9:	xor    r14b,r14b
   140001abc:	mov    r15,rdx
   140001abf:	mov    rbx,rcx
   140001ac2:	test   rcx,rcx
   140001ac5:	je     0x140001be2
   140001acb:	mov    rdx,QWORD PTR [rbx+0x48]
   140001acf:	test   r15,r15
   140001ad2:	je     0x140001af0
   140001ad4:	test   rdx,rdx
   140001ad7:	je     0x140001ae6
   140001ad9:	xor    r8d,r8d
   140001adc:	mov    rcx,r15
   140001adf:	call   0x140001008
   140001ae4:	jmp    0x140001ae8
   140001ae6:	xor    eax,eax
   140001ae8:	test   eax,eax
   140001aea:	je     0x140001bc8
   140001af0:	cmp    DWORD PTR [rbx+0x64],0x18
   140001af4:	je     0x140001bc8
   140001afa:	test   DWORD PTR [rbx+0x5c],0x100
   140001b01:	je     0x140001bc8
   140001b07:	inc    ebp
   140001b09:	cmp    DWORD PTR [rbx+0x68],0x2
   140001b0d:	jne    0x140001b2f
   140001b0f:	mov    ecx,0x1
   140001b14:	call   0x140005558
   140001b19:	mov    r8,QWORD PTR [rbx+0x48]
   140001b1d:	mov    rcx,rax
   140001b20:	mov    edx,0x2909
   140001b25:	call   0x14000499c
   140001b2a:	jmp    0x140001bc8
   140001b2f:	lea    rsi,[rbx+0xe0]
   140001b36:	mov    r8d,0x20
   140001b3c:	mov    rcx,rsi
   140001b3f:	lea    rdx,[rsp+0x50]
   140001b44:	call   QWORD PTR [rip+0x451e]        # 0x140006068
   140001b4a:	mov    edi,eax
   140001b4c:	test   eax,eax
   140001b4e:	jne    0x140001bb7
   140001b50:	and    DWORD PTR [rsp+0x38],eax
   140001b54:	lea    r9d,[rax+0x19]
   140001b58:	and    QWORD PTR [rsp+0x30],0x0
   140001b5e:	lea    r8,[rip+0x544b]        # 0x140006fb0
   140001b65:	mov    DWORD PTR [rsp+0x28],0x8
   140001b6d:	lea    edx,[rax+0x5]
   140001b70:	lea    ecx,[rax+0x1]
   140001b73:	mov    QWORD PTR [rsp+0x20],rsi
   140001b78:	call   QWORD PTR [rip+0x451a]        # 0x140006098
   140001b7e:	mov    edi,eax
   140001b80:	test   eax,eax
   140001b82:	jne    0x140001bb7
   140001b84:	lea    rdx,[rsp+0x40]
   140001b89:	mov    r14b,0x1
   140001b8c:	lea    rcx,[rsp+0x50]
   140001b91:	call   QWORD PTR [rip+0x4761]        # 0x1400062f8
   140001b97:	mov    edi,eax
   140001b99:	test   eax,eax
   140001b9b:	jne    0x140001bc8
   140001b9d:	cmp    DWORD PTR [rsp+0x40],0x1
   140001ba2:	jne    0x140001bc8
   140001ba4:	lea    rcx,[rsp+0x50]
   140001ba9:	call   QWORD PTR [rip+0x4751]        # 0x140006300
   140001baf:	mov    edi,eax
   140001bb1:	test   eax,eax
   140001bb3:	jne    0x140001bb7
   140001bb5:	jmp    0x140001bc8
   140001bb7:	mov    r8,QWORD PTR [rbx+0x48]
   140001bbb:	mov    rdx,rdi
   140001bbe:	mov    ecx,0x2905
   140001bc3:	call   0x140002370
   140001bc8:	mov    rbx,QWORD PTR [rbx+0x8]
   140001bcc:	test   rbx,rbx
   140001bcf:	jne    0x140001acb
   140001bd5:	test   r14b,r14b
   140001bd8:	je     0x140001bde
   140001bda:	xor    eax,eax
   140001bdc:	jmp    0x140001bfb
   140001bde:	test   ebp,ebp
   140001be0:	jne    0x140001bf9
   140001be2:	mov    ecx,0x1
   140001be7:	call   0x140005558
   140001bec:	mov    rcx,rax
   140001bef:	mov    edx,0x2908
   140001bf4:	call   0x14000499c
   140001bf9:	mov    eax,edi
   140001bfb:	mov    rcx,QWORD PTR [rsp+0x90]
   140001c03:	xor    rcx,rsp
   140001c06:	call   0x140004f50
   140001c0b:	mov    rbx,QWORD PTR [rsp+0xe0]
   140001c13:	add    rsp,0xa0
   140001c1a:	pop    r15
   140001c1c:	pop    r14
   140001c1e:	pop    rdi
   140001c1f:	pop    rsi
   140001c20:	pop    rbp
   140001c21:	ret    
   140001c22:	int3   
   140001c23:	int3   
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	mov    QWORD PTR [rsp+0x18],rbx
   140001c2d:	mov    QWORD PTR [rsp+0x20],rbp
   140001c32:	push   rsi
   140001c33:	push   rdi
   140001c34:	push   r14
   140001c36:	sub    rsp,0x80
   140001c3d:	mov    rax,QWORD PTR [rip+0x73c4]        # 0x140009008
   140001c44:	xor    rax,rsp
   140001c47:	mov    QWORD PTR [rsp+0x70],rax
   140001c4c:	xor    esi,esi
   140001c4e:	xor    edi,edi
   140001c50:	and    DWORD PTR [rsp+0x20],esi
   140001c54:	xor    bpl,bpl
   140001c57:	mov    r14,rdx
   140001c5a:	mov    rbx,rcx
   140001c5d:	test   rcx,rcx
   140001c60:	je     0x140001d52
   140001c66:	mov    rdx,QWORD PTR [rbx+0x48]
   140001c6a:	test   r14,r14
   140001c6d:	je     0x140001c8b
   140001c6f:	test   rdx,rdx
   140001c72:	je     0x140001c81
   140001c74:	xor    r8d,r8d
   140001c77:	mov    rcx,r14
   140001c7a:	call   0x140001008
   140001c7f:	jmp    0x140001c83
   140001c81:	xor    eax,eax
   140001c83:	test   eax,eax
   140001c85:	je     0x140001d38
   140001c8b:	cmp    DWORD PTR [rbx+0x64],0x18
   140001c8f:	je     0x140001d38
   140001c95:	test   DWORD PTR [rbx+0x5c],0x100
   140001c9c:	je     0x140001d38
   140001ca2:	inc    esi
   140001ca4:	cmp    DWORD PTR [rbx+0x68],0x2
   140001ca8:	jne    0x140001cc7
   140001caa:	mov    ecx,0x1
   140001caf:	call   0x140005558
   140001cb4:	mov    edx,0x2909
   140001cb9:	mov    r8,QWORD PTR [rbx+0x48]
   140001cbd:	mov    rcx,rax
   140001cc0:	call   0x14000499c
   140001cc5:	jmp    0x140001d38
   140001cc7:	lea    rcx,[rbx+0xe0]
   140001cce:	mov    r8d,0x20
   140001cd4:	lea    rdx,[rsp+0x30]
   140001cd9:	call   QWORD PTR [rip+0x4389]        # 0x140006068
   140001cdf:	mov    edi,eax
   140001ce1:	test   eax,eax
   140001ce3:	jne    0x140001d27
   140001ce5:	lea    rdx,[rsp+0x20]
   140001cea:	lea    rcx,[rsp+0x30]
   140001cef:	call   QWORD PTR [rip+0x4603]        # 0x1400062f8
   140001cf5:	mov    edi,eax
   140001cf7:	test   eax,eax
   140001cf9:	jne    0x140001d27
   140001cfb:	cmp    DWORD PTR [rsp+0x20],0x1
   140001d00:	je     0x140001d11
   140001d02:	lea    ecx,[rax+0x1]
   140001d05:	call   0x140005558
   140001d0a:	mov    edx,0x2906
   140001d0f:	jmp    0x140001cb9
   140001d11:	lea    rcx,[rsp+0x30]
   140001d16:	call   QWORD PTR [rip+0x45c4]        # 0x1400062e0
   140001d1c:	mov    edi,eax
   140001d1e:	test   eax,eax
   140001d20:	jne    0x140001d27
   140001d22:	mov    bpl,0x1
   140001d25:	jmp    0x140001d38
   140001d27:	mov    r8,QWORD PTR [rbx+0x48]
   140001d2b:	mov    rdx,rdi
   140001d2e:	mov    ecx,0x2907
   140001d33:	call   0x140002370
   140001d38:	mov    rbx,QWORD PTR [rbx+0x8]
   140001d3c:	test   rbx,rbx
   140001d3f:	jne    0x140001c66
   140001d45:	test   bpl,bpl
   140001d48:	je     0x140001d4e
   140001d4a:	xor    eax,eax
   140001d4c:	jmp    0x140001d6b
   140001d4e:	test   esi,esi
   140001d50:	jne    0x140001d69
   140001d52:	mov    ecx,0x1
   140001d57:	call   0x140005558
   140001d5c:	mov    rcx,rax
   140001d5f:	mov    edx,0x2908
   140001d64:	call   0x14000499c
   140001d69:	mov    eax,edi
   140001d6b:	mov    rcx,QWORD PTR [rsp+0x70]
   140001d70:	xor    rcx,rsp
   140001d73:	call   0x140004f50
   140001d78:	lea    r11,[rsp+0x80]
   140001d80:	mov    rbx,QWORD PTR [r11+0x30]
   140001d84:	mov    rbp,QWORD PTR [r11+0x38]
   140001d88:	mov    rsp,r11
   140001d8b:	pop    r14
   140001d8d:	pop    rdi
   140001d8e:	pop    rsi
   140001d8f:	ret    
   140001d90:	int3   
   140001d91:	int3   
   140001d92:	int3   
   140001d93:	int3   
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	mov    QWORD PTR [rsp+0x18],rbx
   140001d9d:	mov    QWORD PTR [rsp+0x20],rbp
   140001da2:	push   rsi
   140001da3:	push   rdi
   140001da4:	push   r12
   140001da6:	push   r14
   140001da8:	push   r15
   140001daa:	sub    rsp,0x80
   140001db1:	mov    rax,QWORD PTR [rip+0x7250]        # 0x140009008
   140001db8:	xor    rax,rsp
   140001dbb:	mov    QWORD PTR [rsp+0x70],rax
   140001dc0:	xor    ebx,ebx
   140001dc2:	xor    r15d,r15d
   140001dc5:	and    DWORD PTR [rsp+0x20],ebx
   140001dc9:	mov    r12,rdx
   140001dcc:	mov    rdi,rcx
   140001dcf:	test   rcx,rcx
   140001dd2:	je     0x140001f2d
   140001dd8:	mov    rdx,QWORD PTR [rdi+0x48]
   140001ddc:	test   r12,r12
   140001ddf:	je     0x140001dfd
   140001de1:	test   rdx,rdx
   140001de4:	je     0x140001df3
   140001de6:	xor    r8d,r8d
   140001de9:	mov    rcx,r12
   140001dec:	call   0x140001008
   140001df1:	jmp    0x140001df5
   140001df3:	xor    eax,eax
   140001df5:	test   eax,eax
   140001df7:	je     0x140001f17
   140001dfd:	lea    rcx,[rdi+0xe0]
   140001e04:	mov    r8d,0x20
   140001e0a:	lea    rdx,[rsp+0x30]
   140001e0f:	inc    r15d
   140001e12:	call   QWORD PTR [rip+0x4250]        # 0x140006068
   140001e18:	test   eax,eax
   140001e1a:	jne    0x140001f49
   140001e20:	mov    edx,0x400
   140001e25:	mov    DWORD PTR [rsp+0x20],0x400
   140001e2d:	xor    ecx,ecx
   140001e2f:	call   QWORD PTR [rip+0x431b]        # 0x140006150
   140001e35:	mov    rsi,rax
   140001e38:	test   rax,rax
   140001e3b:	jne    0x140001e47
   140001e3d:	mov    ebx,0x8
   140001e42:	jmp    0x140001f07
   140001e47:	mov    r9,rax
   140001e4a:	lea    r8,[rsp+0x20]
   140001e4f:	lea    rdx,[rsp+0x30]
   140001e54:	xor    ecx,ecx
   140001e56:	call   QWORD PTR [rip+0x448c]        # 0x1400062e8
   140001e5c:	mov    ebx,eax
   140001e5e:	cmp    eax,0xea
   140001e63:	jne    0x140001e99
   140001e65:	mov    rcx,rsi
   140001e68:	call   QWORD PTR [rip+0x42ea]        # 0x140006158
   140001e6e:	mov    edx,DWORD PTR [rsp+0x20]
   140001e72:	xor    ecx,ecx
   140001e74:	call   QWORD PTR [rip+0x42d6]        # 0x140006150
   140001e7a:	mov    rsi,rax
   140001e7d:	test   rax,rax
   140001e80:	je     0x140001e3d
   140001e82:	mov    r9,rax
   140001e85:	lea    r8,[rsp+0x20]
   140001e8a:	lea    rdx,[rsp+0x30]
   140001e8f:	xor    ecx,ecx
   140001e91:	call   QWORD PTR [rip+0x4451]        # 0x1400062e8
   140001e97:	mov    ebx,eax
   140001e99:	test   ebx,ebx
   140001e9b:	jne    0x140001efa
   140001e9d:	mov    ebp,DWORD PTR [rsp+0x20]
   140001ea1:	lea    ecx,[rbx+0x1]
   140001ea4:	call   0x140005558
   140001ea9:	mov    r8,QWORD PTR [rdi+0x48]
   140001ead:	mov    rcx,rax
   140001eb0:	test   ebp,ebp
   140001eb2:	je     0x140001ef0
   140001eb4:	mov    edx,0x293e
   140001eb9:	call   0x14000499c
   140001ebe:	test   ebp,ebp
   140001ec0:	je     0x140001efa
   140001ec2:	lea    r14,[rsi+0x8]
   140001ec6:	mov    ecx,0x1
   140001ecb:	call   0x140005558
   140001ed0:	mov    r9,QWORD PTR [r14+0x8]
   140001ed4:	mov    rcx,rax
   140001ed7:	mov    r8,QWORD PTR [r14]
   140001eda:	mov    edx,0x293d
   140001edf:	call   0x14000499c
   140001ee4:	lea    r14,[r14+0x28]
   140001ee8:	sub    rbp,0x1
   140001eec:	jne    0x140001ec6
   140001eee:	jmp    0x140001efa
   140001ef0:	mov    edx,0x293b
   140001ef5:	call   0x14000499c
   140001efa:	mov    rcx,rsi
   140001efd:	call   QWORD PTR [rip+0x4255]        # 0x140006158
   140001f03:	test   ebx,ebx
   140001f05:	je     0x140001f17
   140001f07:	mov    r8,QWORD PTR [rdi+0x48]
   140001f0b:	mov    ecx,0x293c
   140001f10:	mov    edx,ebx
   140001f12:	call   0x140002370
   140001f17:	mov    rdi,QWORD PTR [rdi+0x8]
   140001f1b:	test   rdi,rdi
   140001f1e:	jne    0x140001dd8
   140001f24:	test   r15d,r15d
   140001f27:	je     0x140001f2d
   140001f29:	mov    eax,ebx
   140001f2b:	jmp    0x140001f49
   140001f2d:	mov    ecx,0x1
   140001f32:	call   0x140005558
   140001f37:	mov    rcx,rax
   140001f3a:	mov    edx,0x2908
   140001f3f:	call   0x14000499c
   140001f44:	mov    eax,0x490
   140001f49:	mov    rcx,QWORD PTR [rsp+0x70]
   140001f4e:	xor    rcx,rsp
   140001f51:	call   0x140004f50
   140001f56:	lea    r11,[rsp+0x80]
   140001f5e:	mov    rbx,QWORD PTR [r11+0x40]
   140001f62:	mov    rbp,QWORD PTR [r11+0x48]
   140001f66:	mov    rsp,r11
   140001f69:	pop    r15
   140001f6b:	pop    r14
   140001f6d:	pop    r12
   140001f6f:	pop    rdi
   140001f70:	pop    rsi
   140001f71:	ret    
   140001f72:	int3   
   140001f73:	int3   
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	mov    QWORD PTR [rsp+0x8],rbx
   140001f7d:	mov    QWORD PTR [rsp+0x10],rbp
   140001f82:	mov    QWORD PTR [rsp+0x18],rsi
   140001f87:	push   rdi
   140001f88:	sub    rsp,0x240
   140001f8f:	mov    rax,QWORD PTR [rip+0x7072]        # 0x140009008
   140001f96:	xor    rax,rsp
   140001f99:	mov    QWORD PTR [rsp+0x230],rax
   140001fa1:	mov    ebx,r8d
   140001fa4:	mov    rdi,rcx
   140001fa7:	xor    ebp,ebp
   140001fa9:	lea    rcx,[rsp+0x32]
   140001fae:	mov    r8d,0x1fe
   140001fb4:	mov    WORD PTR [rsp+0x30],bp
   140001fb9:	xor    edx,edx
   140001fbb:	mov    rsi,r9
   140001fbe:	call   0x140005622
   140001fc3:	lea    r9,[rip+0x45c6]        # 0x140006590
   140001fca:	mov    r10d,0x100
   140001fd0:	lea    rax,[rsp+0x30]
   140001fd5:	mov    r8d,ebp
   140001fd8:	sub    r9,rax
   140001fdb:	lea    rdx,[rsp+0x30]
   140001fe0:	lea    rax,[r10+0x7ffffefe]
   140001fe7:	test   rax,rax
   140001fea:	je     0x140002003
   140001fec:	movzx  eax,WORD PTR [r9+rdx*1]
   140001ff1:	test   ax,ax
   140001ff4:	je     0x140002003
   140001ff6:	mov    WORD PTR [rdx],ax
   140001ff9:	add    rdx,0x2
   140001ffd:	sub    r10,0x1
   140002001:	jne    0x140001fe0
   140002003:	test   r10,r10
   140002006:	jne    0x140002012
   140002008:	sub    rdx,0x2
   14000200c:	mov    r8d,0x8007007a
   140002012:	mov    WORD PTR [rdx],bp
   140002015:	test   r8d,r8d
   140002018:	jns    0x140002021
   14000201a:	mov    eax,0x8
   14000201f:	jmp    0x14000205c
   140002021:	mov    r8,rdi
   140002024:	lea    rcx,[rsp+0x30]
   140002029:	call   0x1400022e8
   14000202e:	test   eax,eax
   140002030:	js     0x14000201a
   140002032:	mov    eax,0x2001f
   140002037:	mov    QWORD PTR [rsp+0x20],rsi
   14000203c:	and    bl,0x2
   14000203f:	lea    rdx,[rsp+0x30]
   140002044:	mov    rcx,0xffffffff80000002
   14000204b:	lea    r9d,[rax-0x6]
   14000204f:	cmovne r9d,eax
   140002053:	xor    r8d,r8d
   140002056:	call   QWORD PTR [rip+0x419c]        # 0x1400061f8
   14000205c:	mov    rcx,QWORD PTR [rsp+0x230]
   140002064:	xor    rcx,rsp
   140002067:	call   0x140004f50
   14000206c:	lea    r11,[rsp+0x240]
   140002074:	mov    rbx,QWORD PTR [r11+0x10]
   140002078:	mov    rbp,QWORD PTR [r11+0x18]
   14000207c:	mov    rsi,QWORD PTR [r11+0x20]
   140002080:	mov    rsp,r11
   140002083:	pop    rdi
   140002084:	ret    
   140002085:	int3   
   140002086:	int3   
   140002087:	int3   
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	rex push rbp
   14000208e:	push   rbx
   14000208f:	push   rsi
   140002090:	push   rdi
   140002091:	push   r12
   140002093:	push   r14
   140002095:	push   r15
   140002097:	lea    rbp,[rsp-0x27]
   14000209c:	sub    rsp,0xc0
   1400020a3:	mov    rax,QWORD PTR [rip+0x6f5e]        # 0x140009008
   1400020aa:	xor    rax,rsp
   1400020ad:	mov    QWORD PTR [rbp+0x17],rax
   1400020b1:	xor    r12d,r12d
   1400020b4:	lea    rsi,[rip+0x4555]        # 0x140006610
   1400020bb:	xor    eax,eax
   1400020bd:	mov    QWORD PTR [rbp-0x59],r12
   1400020c1:	test   r8,r8
   1400020c4:	mov    QWORD PTR [rbp-0x4d],rax
   1400020c8:	mov    DWORD PTR [rbp-0x45],eax
   1400020cb:	mov    r15,rdx
   1400020ce:	cmovne rsi,r8
   1400020d2:	mov    QWORD PTR [rbp-0x67],rax
   1400020d6:	mov    DWORD PTR [rbp-0x5f],eax
   1400020d9:	mov    rbx,rcx
   1400020dc:	mov    WORD PTR [rbp-0x5b],ax
   1400020e0:	mov    edi,r12d
   1400020e3:	or     rax,0xffffffffffffffff
   1400020e7:	mov    DWORD PTR [rbp-0x51],r12d
   1400020eb:	mov    WORD PTR [rbp-0x69],r12w
   1400020f0:	mov    r14d,r12d
   1400020f3:	inc    rax
   1400020f6:	cmp    WORD PTR [rsi+rax*2],r12w
   1400020fb:	jne    0x1400020f3
   1400020fd:	cmp    rax,0x100
   140002103:	jb     0x14000210f
   140002105:	mov    eax,0x57
   14000210a:	jmp    0x14000229e
   14000210f:	test   rcx,rcx
   140002112:	je     0x140002282
   140002118:	cmp    DWORD PTR [rbx+0x64],0x18
   14000211c:	je     0x140002270
   140002122:	mov    rdx,QWORD PTR [rbx+0x48]
   140002126:	test   r15,r15
   140002129:	je     0x140002148
   14000212b:	test   rdx,rdx
   14000212e:	je     0x14000213d
   140002130:	xor    r8d,r8d
   140002133:	mov    rcx,r15
   140002136:	call   0x140001008
   14000213b:	jmp    0x140002140
   14000213d:	mov    eax,r12d
   140002140:	test   eax,eax
   140002142:	je     0x140002270
   140002148:	lea    rcx,[rbx+0xe0]
   14000214f:	inc    r14d
   140002152:	lea    rdx,[rbp-0x51]
   140002156:	call   QWORD PTR [rip+0x3efc]        # 0x140006058
   14000215c:	test   eax,eax
   14000215e:	jne    0x14000229e
   140002164:	lea    rdx,[rbp-0x69]
   140002168:	lea    rcx,[rbp-0x51]
   14000216c:	call   QWORD PTR [rip+0x42a6]        # 0x140006418
   140002172:	test   eax,eax
   140002174:	js     0x1400022d8
   14000217a:	mov    eax,0x50
   14000217f:	cmp    WORD PTR [rbp-0x69],ax
   140002183:	jae    0x1400022c7
   140002189:	movzx  edi,WORD PTR [rbp-0x69]
   14000218d:	lea    rcx,[rbp-0x39]
   140002191:	mov    rdx,QWORD PTR [rbp-0x61]
   140002195:	mov    r8d,edi
   140002198:	call   0x140005616
   14000219d:	shr    rdi,1
   1400021a0:	mov    eax,0x50
   1400021a5:	add    rdi,rdi
   1400021a8:	cmp    rdi,rax
   1400021ab:	jae    0x1400022dc
   1400021b1:	lea    rcx,[rbp-0x69]
   1400021b5:	mov    WORD PTR [rbp+rdi*1-0x39],r12w
   1400021bb:	call   QWORD PTR [rip+0x424f]        # 0x140006410
   1400021c1:	lea    r9,[rbp-0x59]
   1400021c5:	mov    r8d,0x2
   1400021cb:	lea    rcx,[rbp-0x39]
   1400021cf:	call   0x140001f78
   1400021d4:	mov    edi,eax
   1400021d6:	test   eax,eax
   1400021d8:	jne    0x1400022bc
   1400021de:	or     rdi,0xffffffffffffffff
   1400021e2:	mov    rax,rdi
   1400021e5:	inc    rax
   1400021e8:	cmp    WORD PTR [rsi+rax*2],r12w
   1400021ed:	jne    0x1400021e5
   1400021ef:	mov    rcx,QWORD PTR [rbp-0x59]
   1400021f3:	lea    eax,[rax*2+0x2]
   1400021fa:	mov    DWORD PTR [rsp+0x28],eax
   1400021fe:	lea    rdx,[rip+0x436b]        # 0x140006570
   140002205:	mov    r9d,0x1
   14000220b:	mov    QWORD PTR [rsp+0x20],rsi
   140002210:	xor    r8d,r8d
   140002213:	call   QWORD PTR [rip+0x3fe7]        # 0x140006200
   140002219:	mov    rcx,QWORD PTR [rbp-0x59]
   14000221d:	call   QWORD PTR [rip+0x3fcd]        # 0x1400061f0
   140002223:	mov    r8,rdi
   140002226:	inc    r8
   140002229:	cmp    WORD PTR [rsi+r8*2],r12w
   14000222e:	jne    0x140002226
   140002230:	mov    rdx,rsi
   140002233:	lea    rcx,[rbp-0x39]
   140002237:	call   QWORD PTR [rip+0x40b3]        # 0x1400062f0
   14000223d:	mov    edi,eax
   14000223f:	test   eax,eax
   140002241:	je     0x140002255
   140002243:	mov    r8,QWORD PTR [rbx+0x48]
   140002247:	mov    edx,edi
   140002249:	mov    ecx,0x2939
   14000224e:	call   0x140002370
   140002253:	jmp    0x140002270
   140002255:	mov    ecx,0x1
   14000225a:	call   0x140005558
   14000225f:	mov    r8,QWORD PTR [rbx+0x48]
   140002263:	mov    rcx,rax
   140002266:	mov    edx,0x293a
   14000226b:	call   0x14000499c
   140002270:	mov    rbx,QWORD PTR [rbx+0x8]
   140002274:	test   rbx,rbx
   140002277:	jne    0x140002118
   14000227d:	test   r14d,r14d
   140002280:	jne    0x1400022c3
   140002282:	mov    ecx,0x1
   140002287:	call   0x140005558
   14000228c:	mov    rcx,rax
   14000228f:	mov    edx,0x2908
   140002294:	call   0x14000499c
   140002299:	mov    eax,0x490
   14000229e:	mov    rcx,QWORD PTR [rbp+0x17]
   1400022a2:	xor    rcx,rsp
   1400022a5:	call   0x140004f50
   1400022aa:	add    rsp,0xc0
   1400022b1:	pop    r15
   1400022b3:	pop    r14
   1400022b5:	pop    r12
   1400022b7:	pop    rdi
   1400022b8:	pop    rsi
   1400022b9:	pop    rbx
   1400022ba:	pop    rbp
   1400022bb:	ret    
   1400022bc:	mov    edx,eax
   1400022be:	call   0x140002430
   1400022c3:	mov    eax,edi
   1400022c5:	jmp    0x14000229e
   1400022c7:	lea    rcx,[rbp-0x69]
   1400022cb:	call   QWORD PTR [rip+0x413f]        # 0x140006410
   1400022d1:	mov    eax,0x54f
   1400022d6:	jmp    0x14000229e
   1400022d8:	xor    eax,eax
   1400022da:	jmp    0x14000229e
   1400022dc:	call   0x140005128
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	int3   
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	mov    edx,0x100
   1400022ed:	mov    r10,r8
   1400022f0:	mov    eax,edx
   1400022f2:	mov    r9,rcx
   1400022f5:	xor    r11d,r11d
   1400022f8:	cmp    WORD PTR [r9],r11w
   1400022fc:	je     0x140002308
   1400022fe:	add    r9,0x2
   140002302:	sub    rax,0x1
   140002306:	jne    0x1400022f8
   140002308:	test   rax,rax
   14000230b:	je     0x140002361
   14000230d:	mov    r8,rdx
   140002310:	sub    r8,rax
   140002313:	lea    rax,[rcx+r8*2]
   140002317:	mov    ecx,r11d
   14000231a:	sub    rdx,r8
   14000231d:	je     0x140002352
   14000231f:	add    r8,0x7ffffefe
   140002326:	add    r8,rdx
   140002329:	sub    r10,rax
   14000232c:	test   r8,r8
   14000232f:	je     0x14000234d
   140002331:	movzx  r9d,WORD PTR [r10+rax*1]
   140002336:	test   r9w,r9w
   14000233a:	je     0x14000234d
   14000233c:	mov    WORD PTR [rax],r9w
   140002340:	dec    r8
   140002343:	add    rax,0x2
   140002347:	sub    rdx,0x1
   14000234b:	jne    0x14000232c
   14000234d:	test   rdx,rdx
   140002350:	jne    0x14000235b
   140002352:	sub    rax,0x2
   140002356:	mov    ecx,0x8007007a
   14000235b:	mov    WORD PTR [rax],r11w
   14000235f:	jmp    0x140002366
   140002361:	mov    ecx,0x80070057
   140002366:	mov    eax,ecx
   140002368:	ret    
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    QWORD PTR [rsp+0x8],rbx
   140002375:	push   rbp
   140002376:	push   rsi
   140002377:	push   rdi
   140002378:	sub    rsp,0x1e0
   14000237f:	mov    rax,QWORD PTR [rip+0x6c82]        # 0x140009008
   140002386:	xor    rax,rsp
   140002389:	mov    QWORD PTR [rsp+0x1d0],rax
   140002391:	mov    rsi,r8
   140002394:	lea    rax,[rsp+0x40]
   140002399:	mov    rbx,rdx
   14000239c:	mov    edi,ecx
   14000239e:	mov    r8d,edx
   1400023a1:	xor    ebp,ebp
   1400023a3:	mov    QWORD PTR [rsp+0x30],rbp
   1400023a8:	xor    r9d,r9d
   1400023ab:	mov    DWORD PTR [rsp+0x28],0xc8
   1400023b3:	xor    edx,edx
   1400023b5:	mov    ecx,0x1000
   1400023ba:	mov    QWORD PTR [rsp+0x20],rax
   1400023bf:	call   QWORD PTR [rip+0x3dcb]        # 0x140006190
   1400023c5:	test   eax,eax
   1400023c7:	jne    0x1400023eb
   1400023c9:	mov    r9,rbx
   1400023cc:	lea    r8,[rip+0x4245]        # 0x140006618
   1400023d3:	mov    edx,0xc8
   1400023d8:	lea    rcx,[rsp+0x40]
   1400023dd:	call   0x1400025d4
   1400023e2:	test   eax,eax
   1400023e4:	jns    0x1400023eb
   1400023e6:	mov    WORD PTR [rsp+0x40],bp
   1400023eb:	mov    ecx,0x1
   1400023f0:	call   0x140005558
   1400023f5:	mov    rcx,rax
   1400023f8:	lea    r8,[rsp+0x40]
   1400023fd:	mov    r9,rsi
   140002400:	mov    edx,edi
   140002402:	call   0x14000499c
   140002407:	mov    rcx,QWORD PTR [rsp+0x1d0]
   14000240f:	xor    rcx,rsp
   140002412:	call   0x140004f50
   140002417:	mov    rbx,QWORD PTR [rsp+0x200]
   14000241f:	add    rsp,0x1e0
   140002426:	pop    rdi
   140002427:	pop    rsi
   140002428:	pop    rbp
   140002429:	ret    
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	mov    QWORD PTR [rsp+0x8],rbx
   140002435:	push   rdi
   140002436:	sub    rsp,0x1e0
   14000243d:	mov    rax,QWORD PTR [rip+0x6bc4]        # 0x140009008
   140002444:	xor    rax,rsp
   140002447:	mov    QWORD PTR [rsp+0x1d0],rax
   14000244f:	mov    edi,edx
   140002451:	lea    rax,[rsp+0x40]
   140002456:	mov    r8d,edx
   140002459:	xor    ebx,ebx
   14000245b:	mov    QWORD PTR [rsp+0x30],rbx
   140002460:	xor    r9d,r9d
   140002463:	mov    DWORD PTR [rsp+0x28],0xc8
   14000246b:	xor    edx,edx
   14000246d:	mov    ecx,0x1000
   140002472:	mov    QWORD PTR [rsp+0x20],rax
   140002477:	call   QWORD PTR [rip+0x3d13]        # 0x140006190
   14000247d:	test   eax,eax
   14000247f:	jne    0x1400024a3
   140002481:	mov    r9d,edi
   140002484:	lea    r8,[rip+0x419d]        # 0x140006628
   14000248b:	mov    edx,0xc8
   140002490:	lea    rcx,[rsp+0x40]
   140002495:	call   0x1400025d4
   14000249a:	test   eax,eax
   14000249c:	jns    0x1400024a3
   14000249e:	mov    WORD PTR [rsp+0x40],bx
   1400024a3:	lea    rdx,[rip+0x42c6]        # 0x140006770
   1400024aa:	mov    eax,ebx
   1400024ac:	mov    rcx,rdx
   1400024af:	cmp    DWORD PTR [rcx],0xe
   1400024b2:	je     0x1400024c1
   1400024b4:	inc    eax
   1400024b6:	add    rcx,0x8
   1400024ba:	cmp    eax,0x13
   1400024bd:	jb     0x1400024af
   1400024bf:	jmp    0x1400024c5
   1400024c1:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
   1400024c5:	mov    ecx,0x1
   1400024ca:	call   0x140005558
   1400024cf:	mov    rcx,rax
   1400024d2:	lea    r8,[rsp+0x40]
   1400024d7:	mov    edx,ebx
   1400024d9:	call   0x14000499c
   1400024de:	mov    rcx,QWORD PTR [rsp+0x1d0]
   1400024e6:	xor    rcx,rsp
   1400024e9:	call   0x140004f50
   1400024ee:	mov    rbx,QWORD PTR [rsp+0x1f0]
   1400024f6:	add    rsp,0x1e0
   1400024fd:	pop    rdi
   1400024fe:	ret    
   1400024ff:	int3   
   140002500:	int3   
   140002501:	int3   
   140002502:	int3   
   140002503:	int3   
   140002504:	int3   
   140002505:	int3   
   140002506:	int3   
   140002507:	int3   
   140002508:	mov    QWORD PTR [rsp+0x18],rbx
   14000250d:	push   rdi
   14000250e:	sub    rsp,0x50
   140002512:	mov    rax,QWORD PTR [rip+0x6aef]        # 0x140009008
   140002519:	xor    rax,rsp
   14000251c:	mov    QWORD PTR [rsp+0x48],rax
   140002521:	mov    rdi,rdx
   140002524:	lea    rdx,[rsp+0x30]
   140002529:	call   QWORD PTR [rip+0x3be9]        # 0x140006118
   14000252f:	lea    rdx,[rsp+0x38]
   140002534:	lea    rcx,[rsp+0x30]
   140002539:	call   QWORD PTR [rip+0x3d49]        # 0x140006288
   14000253f:	mov    ebx,0x80
   140002544:	lea    r8,[rsp+0x38]
   140002549:	mov    DWORD PTR [rsp+0x28],ebx
   14000254d:	xor    r9d,r9d
   140002550:	mov    ecx,0x400
   140002555:	mov    QWORD PTR [rsp+0x20],rdi
   14000255a:	lea    edx,[rbx-0x7e]
   14000255d:	call   QWORD PTR [rip+0x3b7d]        # 0x1400060e0
   140002563:	mov    ecx,eax
   140002565:	test   eax,eax
   140002567:	jne    0x140002571
   140002569:	call   QWORD PTR [rip+0x3b81]        # 0x1400060f0
   14000256f:	jmp    0x1400025b6
   140002571:	cmp    eax,ebx
   140002573:	jne    0x14000257c
   140002575:	mov    eax,0x7a
   14000257a:	jmp    0x1400025b6
   14000257c:	lea    edx,[rax-0x1]
   14000257f:	sub    ebx,ecx
   140002581:	mov    eax,0x20
   140002586:	mov    DWORD PTR [rsp+0x28],ebx
   14000258a:	mov    WORD PTR [rdi+rdx*2],ax
   14000258e:	lea    r8,[rsp+0x38]
   140002593:	lea    rax,[rdi+0x2]
   140002597:	xor    r9d,r9d
   14000259a:	lea    rax,[rax+rdx*2]
   14000259e:	mov    ecx,0x400
   1400025a3:	xor    edx,edx
   1400025a5:	mov    QWORD PTR [rsp+0x20],rax
   1400025aa:	call   QWORD PTR [rip+0x3b28]        # 0x1400060d8
   1400025b0:	test   eax,eax
   1400025b2:	je     0x140002569
   1400025b4:	xor    eax,eax
   1400025b6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400025bb:	xor    rcx,rsp
   1400025be:	call   0x140004f50
   1400025c3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400025c8:	add    rsp,0x50
   1400025cc:	pop    rdi
   1400025cd:	ret    
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	int3   
   1400025d1:	int3   
   1400025d2:	int3   
   1400025d3:	int3   
   1400025d4:	mov    QWORD PTR [rsp+0x18],r8
   1400025d9:	mov    QWORD PTR [rsp+0x20],r9
   1400025de:	push   rbx
   1400025df:	push   rbp
   1400025e0:	push   rsi
   1400025e1:	push   rdi
   1400025e2:	sub    rsp,0x28
   1400025e6:	xor    ebp,ebp
   1400025e8:	lea    rax,[rdx-0x1]
   1400025ec:	cmp    rax,0x7ffffffe
   1400025f2:	mov    rsi,rcx
   1400025f5:	mov    edi,ebp
   1400025f7:	mov    ecx,0x80070057
   1400025fc:	cmova  edi,ecx
   1400025ff:	test   edi,edi
   140002601:	js     0x140002638
   140002603:	lea    rbx,[rdx-0x1]
   140002607:	mov    rcx,rsi
   14000260a:	mov    rdx,rbx
   14000260d:	lea    r9,[rsp+0x68]
   140002612:	mov    edi,ebp
   140002614:	call   QWORD PTR [rip+0x3dae]        # 0x1400063c8
   14000261a:	test   eax,eax
   14000261c:	js     0x14000262d
   14000261e:	cdqe   
   140002620:	cmp    rax,rbx
   140002623:	ja     0x14000262d
   140002625:	jne    0x140002640
   140002627:	mov    WORD PTR [rsi+rbx*2],bp
   14000262b:	jmp    0x140002640
   14000262d:	mov    WORD PTR [rsi+rbx*2],bp
   140002631:	mov    edi,0x8007007a
   140002636:	jmp    0x140002640
   140002638:	test   rdx,rdx
   14000263b:	je     0x140002640
   14000263d:	mov    WORD PTR [rsi],bp
   140002640:	mov    eax,edi
   140002642:	add    rsp,0x28
   140002646:	pop    rdi
   140002647:	pop    rsi
   140002648:	pop    rbp
   140002649:	pop    rbx
   14000264a:	ret    
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	int3   
   140002651:	int3   
   140002652:	int3   
   140002653:	int3   
   140002654:	mov    QWORD PTR [rsp+0x10],rbx
   140002659:	mov    QWORD PTR [rsp+0x18],rsi
   14000265e:	push   rbp
   14000265f:	push   rdi
   140002660:	push   r14
   140002662:	lea    rbp,[rsp-0x20]
   140002667:	sub    rsp,0x120
   14000266e:	mov    rax,QWORD PTR [rip+0x6993]        # 0x140009008
   140002675:	xor    rax,rsp
   140002678:	mov    QWORD PTR [rbp+0x18],rax
   14000267c:	mov    r9d,DWORD PTR [rcx+0x30]
   140002680:	lea    rsi,[rip+0x4229]        # 0x1400068b0
   140002687:	mov    rbx,rcx
   14000268a:	mov    r14d,0x14
   140002690:	mov    r8,rsi
   140002693:	lea    rcx,[rbp-0x10]
   140002697:	mov    edx,r14d
   14000269a:	call   0x1400025d4
   14000269f:	xor    edi,edi
   1400026a1:	test   eax,eax
   1400026a3:	jns    0x1400026a9
   1400026a5:	mov    WORD PTR [rbp-0x10],di
   1400026a9:	mov    r9d,DWORD PTR [rbx+0x34]
   1400026ad:	lea    rcx,[rbp-0x60]
   1400026b1:	mov    r8,rsi
   1400026b4:	mov    rdx,r14
   1400026b7:	call   0x1400025d4
   1400026bc:	test   eax,eax
   1400026be:	jns    0x1400026c4
   1400026c0:	mov    WORD PTR [rbp-0x60],di
   1400026c4:	mov    r9d,DWORD PTR [rbx+0x38]
   1400026c8:	lea    rcx,[rsp+0x50]
   1400026cd:	mov    r8,rsi
   1400026d0:	mov    rdx,r14
   1400026d3:	call   0x1400025d4
   1400026d8:	test   eax,eax
   1400026da:	jns    0x1400026e1
   1400026dc:	mov    WORD PTR [rsp+0x50],di
   1400026e1:	mov    r9d,DWORD PTR [rbx+0x3c]
   1400026e5:	lea    rcx,[rbp-0x38]
   1400026e9:	mov    r8,rsi
   1400026ec:	mov    rdx,r14
   1400026ef:	call   0x1400025d4
   1400026f4:	test   eax,eax
   1400026f6:	jns    0x1400026fc
   1400026f8:	mov    WORD PTR [rbp-0x38],di
   1400026fc:	mov    r9d,DWORD PTR [rbx+0x40]
   140002700:	lea    rcx,[rsp+0x78]
   140002705:	mov    r8,rsi
   140002708:	mov    rdx,r14
   14000270b:	call   0x1400025d4
   140002710:	test   eax,eax
   140002712:	jns    0x140002719
   140002714:	mov    WORD PTR [rsp+0x78],di
   140002719:	mov    ecx,0x1
   14000271e:	call   0x140005558
   140002723:	mov    r9,QWORD PTR [rbx+0x28]
   140002727:	mov    rcx,rax
   14000272a:	mov    r8,QWORD PTR [rbx+0x20]
   14000272e:	lea    rax,[rsp+0x78]
   140002733:	mov    QWORD PTR [rsp+0x40],rax
   140002738:	mov    edx,0x294c
   14000273d:	lea    rax,[rbp-0x38]
   140002741:	mov    QWORD PTR [rsp+0x38],rax
   140002746:	lea    rax,[rsp+0x50]
   14000274b:	mov    QWORD PTR [rsp+0x30],rax
   140002750:	lea    rax,[rbp-0x60]
   140002754:	mov    QWORD PTR [rsp+0x28],rax
   140002759:	lea    rax,[rbp-0x10]
   14000275d:	mov    QWORD PTR [rsp+0x20],rax
   140002762:	call   0x14000499c
   140002767:	mov    rcx,QWORD PTR [rbp+0x18]
   14000276b:	xor    rcx,rsp
   14000276e:	call   0x140004f50
   140002773:	lea    r11,[rsp+0x120]
   14000277b:	mov    rbx,QWORD PTR [r11+0x28]
   14000277f:	mov    rsi,QWORD PTR [r11+0x30]
   140002783:	mov    rsp,r11
   140002786:	pop    r14
   140002788:	pop    rdi
   140002789:	pop    rbp
   14000278a:	ret    
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	int3   
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	mov    QWORD PTR [rsp+0x10],rbx
   140002799:	push   rdi
   14000279a:	sub    rsp,0x90
   1400027a1:	mov    rax,QWORD PTR [rip+0x6860]        # 0x140009008
   1400027a8:	xor    rax,rsp
   1400027ab:	mov    QWORD PTR [rsp+0x80],rax
   1400027b3:	movzx  r9d,WORD PTR [rcx+0x28]
   1400027b8:	lea    r8,[rip+0x40f1]        # 0x1400068b0
   1400027bf:	mov    rbx,rcx
   1400027c2:	mov    edx,0x14
   1400027c7:	lea    rcx,[rsp+0x58]
   1400027cc:	call   0x1400025d4
   1400027d1:	xor    edi,edi
   1400027d3:	test   eax,eax
   1400027d5:	jns    0x1400027dc
   1400027d7:	mov    WORD PTR [rsp+0x58],di
   1400027dc:	movzx  r9d,WORD PTR [rbx+0x2a]
   1400027e1:	lea    r8,[rip+0x40c8]        # 0x1400068b0
   1400027e8:	mov    edx,0x14
   1400027ed:	lea    rcx,[rsp+0x30]
   1400027f2:	call   0x1400025d4
   1400027f7:	test   eax,eax
   1400027f9:	jns    0x140002800
   1400027fb:	mov    WORD PTR [rsp+0x30],di
   140002800:	mov    ecx,0x1
   140002805:	call   0x140005558
   14000280a:	mov    r8,QWORD PTR [rbx+0x20]
   14000280e:	lea    r9,[rsp+0x58]
   140002813:	mov    rcx,rax
   140002816:	mov    edx,0x294f
   14000281b:	lea    rax,[rsp+0x30]
   140002820:	mov    QWORD PTR [rsp+0x20],rax
   140002825:	call   0x14000499c
   14000282a:	mov    rcx,QWORD PTR [rsp+0x80]
   140002832:	xor    rcx,rsp
   140002835:	call   0x140004f50
   14000283a:	mov    rbx,QWORD PTR [rsp+0xa8]
   140002842:	add    rsp,0x90
   140002849:	pop    rdi
   14000284a:	ret    
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	int3   
   140002851:	int3   
   140002852:	int3   
   140002853:	int3   
   140002854:	mov    r11,rsp
   140002857:	mov    QWORD PTR [r11+0x10],rbx
   14000285b:	mov    QWORD PTR [r11+0x18],rbp
   14000285f:	push   rdi
   140002860:	sub    rsp,0xb0
   140002867:	mov    rax,QWORD PTR [rip+0x679a]        # 0x140009008
   14000286e:	xor    rax,rsp
   140002871:	mov    QWORD PTR [rsp+0xa8],rax
   140002879:	movzx  r9d,WORD PTR [rcx+0x28]
   14000287e:	lea    r8,[rip+0x402b]        # 0x1400068b0
   140002885:	mov    rbx,rcx
   140002888:	mov    ebp,0x14
   14000288d:	mov    edx,ebp
   14000288f:	lea    rcx,[r11-0x38]
   140002893:	call   0x1400025d4
   140002898:	xor    edi,edi
   14000289a:	test   eax,eax
   14000289c:	jns    0x1400028a6
   14000289e:	mov    WORD PTR [rsp+0x80],di
   1400028a6:	movzx  r9d,WORD PTR [rbx+0x2a]
   1400028ab:	lea    r8,[rip+0x3ffe]        # 0x1400068b0
   1400028b2:	mov    rdx,rbp
   1400028b5:	lea    rcx,[rsp+0x30]
   1400028ba:	call   0x1400025d4
   1400028bf:	test   eax,eax
   1400028c1:	jns    0x1400028c8
   1400028c3:	mov    WORD PTR [rsp+0x30],di
   1400028c8:	movzx  r9d,WORD PTR [rbx+0x2c]
   1400028cd:	lea    r8,[rip+0x3fdc]        # 0x1400068b0
   1400028d4:	mov    rdx,rbp
   1400028d7:	lea    rcx,[rsp+0x58]
   1400028dc:	call   0x1400025d4
   1400028e1:	test   eax,eax
   1400028e3:	jns    0x1400028ea
   1400028e5:	mov    WORD PTR [rsp+0x58],di
   1400028ea:	mov    ecx,0x1
   1400028ef:	call   0x140005558
   1400028f4:	mov    r8,QWORD PTR [rbx+0x20]
   1400028f8:	lea    r9,[rsp+0x80]
   140002900:	mov    rcx,rax
   140002903:	mov    edx,0x294b
   140002908:	lea    rax,[rsp+0x58]
   14000290d:	mov    QWORD PTR [rsp+0x28],rax
   140002912:	lea    rax,[rsp+0x30]
   140002917:	mov    QWORD PTR [rsp+0x20],rax
   14000291c:	call   0x14000499c
   140002921:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002929:	xor    rcx,rsp
   14000292c:	call   0x140004f50
   140002931:	lea    r11,[rsp+0xb0]
   140002939:	mov    rbx,QWORD PTR [r11+0x18]
   14000293d:	mov    rbp,QWORD PTR [r11+0x20]
   140002941:	mov    rsp,r11
   140002944:	pop    rdi
   140002945:	ret    
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	mov    QWORD PTR [rsp+0x10],rbx
   140002951:	mov    QWORD PTR [rsp+0x18],rbp
   140002956:	mov    QWORD PTR [rsp+0x20],rsi
   14000295b:	push   rdi
   14000295c:	sub    rsp,0x2c0
   140002963:	mov    rax,QWORD PTR [rip+0x669e]        # 0x140009008
   14000296a:	xor    rax,rsp
   14000296d:	mov    QWORD PTR [rsp+0x2b0],rax
   140002975:	movzx  r9d,BYTE PTR [rcx+0x20]
   14000297a:	lea    r8,[rip+0x3f2f]        # 0x1400068b0
   140002981:	mov    rbx,rcx
   140002984:	mov    edx,0x14
   140002989:	lea    rcx,[rsp+0x20]
   14000298e:	call   0x1400025d4
   140002993:	xor    ebp,ebp
   140002995:	test   eax,eax
   140002997:	jns    0x14000299e
   140002999:	mov    WORD PTR [rsp+0x20],bp
   14000299e:	lea    r9,[rbx+0x21]
   1400029a2:	test   r9,r9
   1400029a5:	je     0x140002a16
   1400029a7:	cmp    BYTE PTR [rbx+0x20],0x1
   1400029ab:	jne    0x140002a16
   1400029ad:	lea    r8,[rip+0x3f04]        # 0x1400068b8
   1400029b4:	mov    edx,0x12c
   1400029b9:	lea    rcx,[rsp+0x50]
   1400029be:	call   0x1400025d4
   1400029c3:	test   eax,eax
   1400029c5:	jns    0x1400029cc
   1400029c7:	mov    WORD PTR [rsp+0x50],bp
   1400029cc:	mov    ecx,0x1
   1400029d1:	call   0x140005558
   1400029d6:	mov    rcx,rax
   1400029d9:	lea    r9,[rsp+0x50]
   1400029de:	lea    r8,[rsp+0x20]
   1400029e3:	mov    edx,0x2951
   1400029e8:	call   0x14000499c
   1400029ed:	mov    rcx,QWORD PTR [rsp+0x2b0]
   1400029f5:	xor    rcx,rsp
   1400029f8:	call   0x140004f50
   1400029fd:	lea    r11,[rsp+0x2c0]
   140002a05:	mov    rbx,QWORD PTR [r11+0x18]
   140002a09:	mov    rbp,QWORD PTR [r11+0x20]
   140002a0d:	mov    rsi,QWORD PTR [r11+0x28]
   140002a11:	mov    rsp,r11
   140002a14:	pop    rdi
   140002a15:	ret    
   140002a16:	mov    edi,ebp
   140002a18:	cmp    bp,WORD PTR [rbx+0x12]
   140002a1c:	jae    0x1400029cc
   140002a1e:	mov    esi,ebp
   140002a20:	mov    eax,edi
   140002a22:	lea    r8,[rip+0x3e97]        # 0x1400068c0
   140002a29:	mov    ecx,esi
   140002a2b:	mov    edx,0x12c
   140002a30:	sub    rdx,rcx
   140002a33:	movzx  r9d,BYTE PTR [rax+rbx*1+0x21]
   140002a39:	lea    rax,[rsp+0x50]
   140002a3e:	lea    rcx,[rax+rcx*2]
   140002a42:	call   0x1400025d4
   140002a47:	test   eax,eax
   140002a49:	js     0x1400029c7
   140002a4f:	movzx  eax,WORD PTR [rbx+0x12]
   140002a53:	inc    edi
   140002a55:	add    esi,0x2
   140002a58:	cmp    edi,eax
   140002a5a:	jb     0x140002a20
   140002a5c:	jmp    0x1400029cc
   140002a61:	int3   
   140002a62:	int3   
   140002a63:	int3   
   140002a64:	int3   
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	test   rcx,rcx
   140002a6b:	je     0x140002cbf
   140002a71:	mov    QWORD PTR [rsp+0x10],rbx
   140002a76:	mov    QWORD PTR [rsp+0x18],rsi
   140002a7b:	mov    QWORD PTR [rsp+0x20],rdi
   140002a80:	push   rbp
   140002a81:	push   r14
   140002a83:	push   r15
   140002a85:	lea    rbp,[rsp-0x80]
   140002a8a:	sub    rsp,0x180
   140002a91:	mov    rax,QWORD PTR [rip+0x6570]        # 0x140009008
   140002a98:	xor    rax,rsp
   140002a9b:	mov    QWORD PTR [rbp+0x70],rax
   140002a9f:	movzx  r9d,WORD PTR [rcx+0x10]
   140002aa4:	lea    rdi,[rip+0x3e05]        # 0x1400068b0
   140002aab:	mov    rbx,rcx
   140002aae:	xor    esi,esi
   140002ab0:	mov    r8,rdi
   140002ab3:	lea    rcx,[rsp+0x40]
   140002ab8:	lea    r15d,[rsi+0x14]
   140002abc:	mov    edx,r15d
   140002abf:	call   0x1400025d4
   140002ac4:	test   eax,eax
   140002ac6:	jns    0x140002acd
   140002ac8:	mov    WORD PTR [rsp+0x40],si
   140002acd:	mov    r9d,DWORD PTR [rbx+0x18]
   140002ad1:	lea    rcx,[rbp-0x70]
   140002ad5:	mov    r8,rdi
   140002ad8:	mov    rdx,r15
   140002adb:	call   0x1400025d4
   140002ae0:	test   eax,eax
   140002ae2:	jns    0x140002ae8
   140002ae4:	mov    WORD PTR [rbp-0x70],si
   140002ae8:	movzx  r9d,WORD PTR [rbx+0x12]
   140002aed:	lea    rcx,[rsp+0x68]
   140002af2:	mov    r8,rdi
   140002af5:	mov    rdx,r15
   140002af8:	call   0x1400025d4
   140002afd:	test   eax,eax
   140002aff:	jns    0x140002b06
   140002b01:	mov    WORD PTR [rsp+0x68],si
   140002b06:	mov    r14d,0x1
   140002b0c:	mov    ecx,r14d
   140002b0f:	call   0x140005558
   140002b14:	mov    r8,QWORD PTR [rbx+0x8]
   140002b18:	lea    r9,[rsp+0x40]
   140002b1d:	mov    rcx,rax
   140002b20:	mov    edx,0x2940
   140002b25:	lea    rax,[rsp+0x68]
   140002b2a:	mov    QWORD PTR [rsp+0x28],rax
   140002b2f:	lea    rax,[rbp-0x70]
   140002b33:	mov    QWORD PTR [rsp+0x20],rax
   140002b38:	call   0x14000499c
   140002b3d:	mov    eax,DWORD PTR [rbx+0x14]
   140002b40:	and    eax,0x3
   140002b43:	jne    0x140002b4c
   140002b45:	mov    edi,0x2941
   140002b4a:	jmp    0x140002b67
   140002b4c:	cmp    eax,r14d
   140002b4f:	jne    0x140002b58
   140002b51:	mov    edi,0x2942
   140002b56:	jmp    0x140002b67
   140002b58:	cmp    eax,0x2
   140002b5b:	mov    edi,esi
   140002b5d:	setne  dil
   140002b61:	add    edi,0x2943
   140002b67:	mov    ecx,r14d
   140002b6a:	call   0x140005558
   140002b6f:	mov    rcx,rax
   140002b72:	mov    edx,edi
   140002b74:	call   0x14000499c
   140002b79:	movzx  edx,WORD PTR [rbx+0x10]
   140002b7d:	sub    edx,r14d
   140002b80:	je     0x140002c48
   140002b86:	sub    edx,r14d
   140002b89:	je     0x140002c35
   140002b8f:	sub    edx,0x3
   140002b92:	je     0x140002c22
   140002b98:	sub    edx,r14d
   140002b9b:	je     0x140002c18
   140002b9d:	sub    edx,0x6
   140002ba0:	je     0x140002c05
   140002ba2:	sub    edx,0x3
   140002ba5:	je     0x140002bf8
   140002ba7:	sub    edx,0xd
   140002baa:	je     0x140002bd4
   140002bac:	sub    edx,0x5
   140002baf:	je     0x140002bc7
   140002bb1:	cmp    edx,r14d
   140002bb4:	jne    0x140002c97
   140002bba:	mov    rcx,rbx
   140002bbd:	call   0x14000294c
   140002bc2:	jmp    0x140002c97
   140002bc7:	mov    rcx,rbx
   140002bca:	call   0x140002854
   140002bcf:	jmp    0x140002c97
   140002bd4:	lea    rcx,[rbx+0x20]
   140002bd8:	lea    rdx,[rbp-0x20]
   140002bdc:	call   QWORD PTR [rip+0x3816]        # 0x1400063f8
   140002be2:	mov    ecx,r14d
   140002be5:	call   0x140005558
   140002bea:	lea    r8,[rbp-0x20]
   140002bee:	mov    edx,0x2950
   140002bf3:	jmp    0x140002c8f
   140002bf8:	mov    rcx,rbx
   140002bfb:	call   0x140002794
   140002c00:	jmp    0x140002c97
   140002c05:	mov    ecx,r14d
   140002c08:	call   0x140005558
   140002c0d:	mov    r8,QWORD PTR [rbx+0x20]
   140002c11:	mov    edx,0x294e
   140002c16:	jmp    0x140002c8f
   140002c18:	mov    rcx,rbx
   140002c1b:	call   0x140002654
   140002c20:	jmp    0x140002c97
   140002c22:	mov    ecx,r14d
   140002c25:	call   0x140005558
   140002c2a:	mov    r8,QWORD PTR [rbx+0x20]
   140002c2e:	mov    edx,0x2952
   140002c33:	jmp    0x140002c8f
   140002c35:	mov    ecx,r14d
   140002c38:	call   0x140005558
   140002c3d:	mov    r8,QWORD PTR [rbx+0x20]
   140002c41:	mov    edx,0x294d
   140002c46:	jmp    0x140002c8f
   140002c48:	movzx  ecx,BYTE PTR [rbx+0x22]
   140002c4c:	mov    rdx,r15
   140002c4f:	movzx  r8d,BYTE PTR [rbx+0x21]
   140002c54:	movzx  eax,BYTE PTR [rbx+0x23]
   140002c58:	movzx  r9d,BYTE PTR [rbx+0x20]
   140002c5d:	mov    DWORD PTR [rsp+0x30],eax
   140002c61:	mov    DWORD PTR [rsp+0x28],ecx
   140002c65:	lea    rcx,[rbp-0x48]
   140002c69:	mov    DWORD PTR [rsp+0x20],r8d
   140002c6e:	lea    r8,[rip+0x3c23]        # 0x140006898
   140002c75:	call   0x1400025d4
   140002c7a:	test   eax,eax
   140002c7c:	js     0x140002c97
   140002c7e:	mov    ecx,r14d
   140002c81:	call   0x140005558
   140002c86:	lea    r8,[rbp-0x48]
   140002c8a:	mov    edx,0x294a
   140002c8f:	mov    rcx,rax
   140002c92:	call   0x14000499c
   140002c97:	mov    rcx,QWORD PTR [rbp+0x70]
   140002c9b:	xor    rcx,rsp
   140002c9e:	call   0x140004f50
   140002ca3:	lea    r11,[rsp+0x180]
   140002cab:	mov    rbx,QWORD PTR [r11+0x28]
   140002caf:	mov    rsi,QWORD PTR [r11+0x30]
   140002cb3:	mov    rdi,QWORD PTR [r11+0x38]
   140002cb7:	mov    rsp,r11
   140002cba:	pop    r15
   140002cbc:	pop    r14
   140002cbe:	pop    rbp
   140002cbf:	ret    
   140002cc0:	int3   
   140002cc1:	int3   
   140002cc2:	int3   
   140002cc3:	int3   
   140002cc4:	int3   
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	mov    QWORD PTR [rsp+0x18],rbx
   140002ccd:	push   rdi
   140002cce:	sub    rsp,0x60
   140002cd2:	mov    rax,QWORD PTR [rip+0x632f]        # 0x140009008
   140002cd9:	xor    rax,rsp
   140002cdc:	mov    QWORD PTR [rsp+0x50],rax
   140002ce1:	and    QWORD PTR [rsp+0x30],0x0
   140002ce7:	mov    rbx,rcx
   140002cea:	movzx  ecx,dx
   140002ced:	movzx  edi,dx
   140002cf0:	call   0x140004a10
   140002cf5:	lea    rcx,[rsp+0x38]
   140002cfa:	mov    edx,0xb
   140002cff:	test   rax,rax
   140002d02:	je     0x140002d15
   140002d04:	mov    r9,rax
   140002d07:	lea    r8,[rip+0x3baa]        # 0x1400068b8
   140002d0e:	call   0x1400025d4
   140002d13:	jmp    0x140002d25
   140002d15:	movzx  r9d,di
   140002d19:	lea    r8,[rip+0x3df8]        # 0x140006b18
   140002d20:	call   0x1400025d4
   140002d25:	and    QWORD PTR [rsp+0x28],0x0
   140002d2b:	lea    rax,[rsp+0x30]
   140002d30:	xor    r9d,r9d
   140002d33:	mov    QWORD PTR [rsp+0x20],rax
   140002d38:	mov    r8d,0x8010
   140002d3e:	movzx  edx,di
   140002d41:	mov    rcx,rbx
   140002d44:	call   QWORD PTR [rip+0x32d6]        # 0x140006020
   140002d4a:	test   eax,eax
   140002d4c:	je     0x140002de7
   140002d52:	cmp    eax,0x251d
   140002d57:	jne    0x140002d6a
   140002d59:	mov    ecx,0x1
   140002d5e:	call   0x140005558
   140002d63:	mov    edx,0x295e
   140002d68:	jmp    0x140002dd3
   140002d6a:	cmp    eax,0x232a
   140002d6f:	jne    0x140002d82
   140002d71:	mov    ecx,0x1
   140002d76:	call   0x140005558
   140002d7b:	mov    edx,0x2964
   140002d80:	jmp    0x140002dd3
   140002d82:	cmp    eax,0x5b4
   140002d87:	jne    0x140002d9a
   140002d89:	mov    ecx,0x1
   140002d8e:	call   0x140005558
   140002d93:	mov    edx,0x2963
   140002d98:	jmp    0x140002dd3
   140002d9a:	cmp    eax,0x232b
   140002d9f:	jne    0x140002dbd
   140002da1:	mov    ecx,0x1
   140002da6:	call   0x140005558
   140002dab:	mov    rcx,rax
   140002dae:	mov    r8,rbx
   140002db1:	mov    edx,0x295f
   140002db6:	call   0x14000499c
   140002dbb:	jmp    0x140002de3
   140002dbd:	cmp    eax,0x25e5
   140002dc2:	je     0x140002de3
   140002dc4:	mov    ecx,0x1
   140002dc9:	call   0x140005558
   140002dce:	mov    edx,0x2960
   140002dd3:	lea    r9,[rsp+0x38]
   140002dd8:	mov    r8,rbx
   140002ddb:	mov    rcx,rax
   140002dde:	call   0x14000499c
   140002de3:	xor    eax,eax
   140002de5:	jmp    0x140002e3b
   140002de7:	cmp    QWORD PTR [rsp+0x30],0x0
   140002ded:	je     0x140002e36
   140002def:	mov    ecx,0x1
   140002df4:	call   0x140005558
   140002df9:	mov    rcx,rax
   140002dfc:	mov    r8,rbx
   140002dff:	mov    edx,0x2961
   140002e04:	call   0x14000499c
   140002e09:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e0e:	test   rbx,rbx
   140002e11:	je     0x140002e28
   140002e13:	mov    rcx,rbx
   140002e16:	call   0x140002a68
   140002e1b:	mov    rbx,QWORD PTR [rbx]
   140002e1e:	test   rbx,rbx
   140002e21:	jne    0x140002e13
   140002e23:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e28:	mov    edx,0x1
   140002e2d:	mov    rcx,rbx
   140002e30:	call   QWORD PTR [rip+0x31f2]        # 0x140006028
   140002e36:	mov    eax,0x1
   140002e3b:	mov    rcx,QWORD PTR [rsp+0x50]
   140002e40:	xor    rcx,rsp
   140002e43:	call   0x140004f50
   140002e48:	mov    rbx,QWORD PTR [rsp+0x80]
   140002e50:	add    rsp,0x60
   140002e54:	pop    rdi
   140002e55:	ret    
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	mov    rax,rsp
   140002e5f:	mov    QWORD PTR [rax+0x10],rbx
   140002e63:	mov    QWORD PTR [rax+0x18],rsi
   140002e67:	push   rdi
   140002e68:	sub    rsp,0x20
   140002e6c:	xor    esi,esi
   140002e6e:	lea    rcx,[rax+0x8]
   140002e72:	mov    QWORD PTR [rax+0x8],rsi
   140002e76:	call   QWORD PTR [rip+0x319c]        # 0x140006018
   140002e7c:	test   eax,eax
   140002e7e:	jne    0x140002e97
   140002e80:	lea    ecx,[rsi+0x1]
   140002e83:	call   0x140005558
   140002e88:	mov    rcx,rax
   140002e8b:	mov    edx,0x2962
   140002e90:	call   0x14000499c
   140002e95:	jmp    0x140002ef9
   140002e97:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e9c:	test   rbx,rbx
   140002e9f:	je     0x140002ef9
   140002ea1:	movzx  edx,WORD PTR [rbx+0x10]
   140002ea5:	mov    rdi,QWORD PTR [rbx]
   140002ea8:	test   dx,dx
   140002eab:	je     0x140002eb6
   140002ead:	mov    rcx,QWORD PTR [rbx+0x8]
   140002eb1:	call   0x140002cc8
   140002eb6:	movzx  edx,WORD PTR [rbx+0x12]
   140002eba:	test   dx,dx
   140002ebd:	je     0x140002ec8
   140002ebf:	mov    rcx,QWORD PTR [rbx+0x8]
   140002ec3:	call   0x140002cc8
   140002ec8:	movzx  edx,WORD PTR [rbx+0x14]
   140002ecc:	test   dx,dx
   140002ecf:	je     0x140002eda
   140002ed1:	mov    rcx,QWORD PTR [rbx+0x8]
   140002ed5:	call   0x140002cc8
   140002eda:	mov    rcx,QWORD PTR [rbx+0x8]
   140002ede:	xor    edx,edx
   140002ee0:	call   QWORD PTR [rip+0x3142]        # 0x140006028
   140002ee6:	xor    edx,edx
   140002ee8:	mov    rcx,rbx
   140002eeb:	call   QWORD PTR [rip+0x3137]        # 0x140006028
   140002ef1:	mov    rbx,rdi
   140002ef4:	test   rdi,rdi
   140002ef7:	jne    0x140002ea1
   140002ef9:	mov    rbx,QWORD PTR [rsp+0x38]
   140002efe:	xor    eax,eax
   140002f00:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f05:	add    rsp,0x20
   140002f09:	pop    rdi
   140002f0a:	ret    
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	int3   
   140002f11:	int3   
   140002f12:	int3   
   140002f13:	int3   
   140002f14:	sub    rsp,0x38
   140002f18:	cmp    WORD PTR [rcx],0x2
   140002f1c:	mov    r9,r8
   140002f1f:	mov    r10,rdx
   140002f22:	mov    rax,rcx
   140002f25:	jne    0x140002f38
   140002f27:	xor    edx,edx
   140002f29:	add    rcx,0x4
   140002f2d:	mov    r8,r10
   140002f30:	call   QWORD PTR [rip+0x34d2]        # 0x140006408
   140002f36:	jmp    0x140002f56
   140002f38:	cmp    WORD PTR [rcx],0x17
   140002f3c:	jne    0x140002f64
   140002f3e:	mov    QWORD PTR [rsp+0x20],r9
   140002f43:	xor    r8d,r8d
   140002f46:	mov    r9,rdx
   140002f49:	add    rcx,0x8
   140002f4d:	mov    edx,DWORD PTR [rax+0x18]
   140002f50:	call   QWORD PTR [rip+0x34aa]        # 0x140006400
   140002f56:	mov    ecx,eax
   140002f58:	xor    eax,eax
   140002f5a:	test   ecx,ecx
   140002f5c:	lea    edx,[rax+0x57]
   140002f5f:	cmovs  eax,edx
   140002f62:	jmp    0x140002f69
   140002f64:	mov    eax,0x32
   140002f69:	add    rsp,0x38
   140002f6d:	ret    
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	int3   
   140002f71:	int3   
   140002f72:	int3   
   140002f73:	int3   
   140002f74:	rex push rbx
   140002f76:	sub    rsp,0x160
   140002f7d:	mov    rax,QWORD PTR [rip+0x6084]        # 0x140009008
   140002f84:	xor    rax,rsp
   140002f87:	mov    QWORD PTR [rsp+0x150],rax
   140002f8f:	and    QWORD PTR [rsp+0x60],0x0
   140002f95:	lea    rdx,[rsp+0x60]
   140002f9a:	call   QWORD PTR [rip+0x30d0]        # 0x140006070
   140002fa0:	mov    ebx,0x1
   140002fa5:	test   eax,eax
   140002fa7:	jne    0x14000302d
   140002fad:	and    DWORD PTR [rsp+0x50],eax
   140002fb1:	lea    r9,[rsp+0x60]
   140002fb6:	and    QWORD PTR [rsp+0x48],0x0
   140002fbc:	lea    rax,[rsp+0x70]
   140002fc1:	mov    DWORD PTR [rsp+0x40],0xd8
   140002fc9:	lea    rdx,[rip+0x3ff8]        # 0x140006fc8
   140002fd0:	mov    QWORD PTR [rsp+0x38],rax
   140002fd5:	xor    r8d,r8d
   140002fd8:	and    DWORD PTR [rsp+0x30],0x0
   140002fdd:	mov    ecx,ebx
   140002fdf:	and    QWORD PTR [rsp+0x28],0x0
   140002fe5:	mov    DWORD PTR [rsp+0x20],0x8
   140002fed:	call   QWORD PTR [rip+0x309d]        # 0x140006090
   140002ff3:	test   eax,eax
   140002ff5:	jne    0x14000302d
   140002ff7:	mov    eax,DWORD PTR [rsp+0x74]
   140002ffb:	mov    ecx,ebx
   140002ffd:	test   al,0x2
   140002fff:	je     0x14000300d
   140003001:	call   0x140005558
   140003006:	mov    edx,0x2774
   14000300b:	jmp    0x140003039
   14000300d:	test   bl,al
   14000300f:	je     0x14000301d
   140003011:	call   0x140005558
   140003016:	mov    edx,0x2775
   14000301b:	jmp    0x140003039
   14000301d:	test   al,0x8
   14000301f:	je     0x14000302f
   140003021:	call   0x140005558
   140003026:	mov    edx,0x2776
   14000302b:	jmp    0x140003039
   14000302d:	mov    ecx,ebx
   14000302f:	call   0x140005558
   140003034:	mov    edx,0x2777
   140003039:	mov    rcx,rax
   14000303c:	call   0x14000499c
   140003041:	mov    rcx,QWORD PTR [rsp+0x150]
   140003049:	xor    rcx,rsp
   14000304c:	call   0x140004f50
   140003051:	add    rsp,0x160
   140003058:	pop    rbx
   140003059:	ret    
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	mov    rax,rsp
   140003063:	mov    QWORD PTR [rax+0x8],rbx
   140003067:	mov    QWORD PTR [rax+0x18],rsi
   14000306b:	mov    QWORD PTR [rax+0x20],rdi
   14000306f:	push   rbp
   140003070:	push   r12
   140003072:	push   r13
   140003074:	push   r14
   140003076:	push   r15
   140003078:	lea    rbp,[rax-0x2b8]
   14000307f:	sub    rsp,0x390
   140003086:	mov    rax,QWORD PTR [rip+0x5f7b]        # 0x140009008
   14000308d:	xor    rax,rsp
   140003090:	mov    QWORD PTR [rbp+0x280],rax
   140003097:	mov    r8d,DWORD PTR [rdx+0x64]
   14000309b:	xor    r12d,r12d
   14000309e:	mov    r14d,ecx
   1400030a1:	mov    eax,r12d
   1400030a4:	lea    rcx,[rip+0x3765]        # 0x140006810
   1400030ab:	mov    rdi,rdx
   1400030ae:	mov    r15d,r12d
   1400030b1:	mov    rdx,rcx
   1400030b4:	lea    r13d,[r12+0x1]
   1400030b9:	cmp    DWORD PTR [rdx],r8d
   1400030bc:	je     0x1400030d1
   1400030be:	add    eax,r13d
   1400030c1:	add    rdx,0x8
   1400030c5:	cmp    eax,0xd
   1400030c8:	jb     0x1400030b9
   1400030ca:	mov    ebx,0x2756
   1400030cf:	jmp    0x1400030d5
   1400030d1:	mov    ebx,DWORD PTR [rcx+rax*8+0x4]
   1400030d5:	mov    ecx,r13d
   1400030d8:	call   0x140005558
   1400030dd:	mov    r8,QWORD PTR [rdi+0x48]
   1400030e1:	mov    rcx,rax
   1400030e4:	mov    edx,ebx
   1400030e6:	call   0x14000499c
   1400030eb:	cmp    DWORD PTR [rdi+0x68],r13d
   1400030ef:	je     0x1400030f9
   1400030f1:	mov    ecx,DWORD PTR [rdi+0x4]
   1400030f4:	call   0x140002f74
   1400030f9:	mov    ecx,r13d
   1400030fc:	call   0x140005558
   140003101:	mov    r8,QWORD PTR [rdi+0x38]
   140003105:	mov    rcx,rax
   140003108:	mov    edx,0x277e
   14000310d:	call   0x14000499c
   140003112:	test   r14d,r14d
   140003115:	je     0x140003203
   14000311b:	mov    ecx,r13d
   14000311e:	call   0x140005558
   140003123:	mov    r8,QWORD PTR [rdi+0x40]
   140003127:	mov    rcx,rax
   14000312a:	mov    edx,0x277f
   14000312f:	call   0x14000499c
   140003134:	mov    ecx,DWORD PTR [rdi+0x58]
   140003137:	test   ecx,ecx
   140003139:	je     0x1400031a7
   14000313b:	lea    eax,[rcx+rcx*2]
   14000313e:	cmp    eax,0x41
   140003141:	ja     0x1400031a7
   140003143:	mov    ebx,r12d
   140003146:	test   ecx,ecx
   140003148:	je     0x140003186
   14000314a:	mov    esi,r12d
   14000314d:	mov    eax,ebx
   14000314f:	lea    r8,[rip+0x377a]        # 0x1400068d0
   140003156:	mov    edx,0x41
   14000315b:	movzx  r9d,BYTE PTR [rax+rdi*1+0x50]
   140003161:	lea    rcx,[rax+rax*2]
   140003165:	add    rcx,rcx
   140003168:	mov    eax,esi
   14000316a:	sub    rdx,rcx
   14000316d:	lea    rcx,[rsp+0x70]
   140003172:	lea    rcx,[rcx+rax*2]
   140003176:	call   0x1400025d4
   14000317b:	add    ebx,r13d
   14000317e:	add    esi,0x3
   140003181:	cmp    ebx,DWORD PTR [rdi+0x58]
   140003184:	jb     0x14000314d
   140003186:	lea    ecx,[rbx*2-0x1]
   14000318d:	add    ecx,ebx
   14000318f:	add    rcx,rcx
   140003192:	cmp    rcx,0x82
   140003199:	jae    0x1400038de
   14000319f:	mov    WORD PTR [rsp+rcx*1+0x70],r12w
   1400031a5:	jmp    0x1400031ad
   1400031a7:	mov    WORD PTR [rsp+0x70],r12w
   1400031ad:	mov    ecx,r13d
   1400031b0:	call   0x140005558
   1400031b5:	mov    rcx,rax
   1400031b8:	lea    r8,[rsp+0x70]
   1400031bd:	mov    edx,0x2780
   1400031c2:	call   0x14000499c
   1400031c7:	test   BYTE PTR [rdi+0x5c],0x4
   1400031cb:	mov    ecx,r13d
   1400031ce:	je     0x1400031dc
   1400031d0:	call   0x140005558
   1400031d5:	mov    edx,0x2782
   1400031da:	jmp    0x1400031e6
   1400031dc:	call   0x140005558
   1400031e1:	mov    edx,0x2781
   1400031e6:	mov    rcx,rax
   1400031e9:	call   0x14000499c
   1400031ee:	mov    ecx,r13d
   1400031f1:	call   0x140005558
   1400031f6:	mov    rcx,rax
   1400031f9:	mov    edx,0x2789
   1400031fe:	call   0x14000499c
   140003203:	mov    ebx,0x2
   140003208:	cmp    DWORD PTR [rdi+0x68],ebx
   14000320b:	je     0x1400038ae
   140003211:	mov    rsi,QWORD PTR [rdi+0x18]
   140003215:	jmp    0x140003444
   14000321a:	test   r14d,r14d
   14000321d:	jne    0x140003229
   14000321f:	cmp    DWORD PTR [rsi+0x28],0x3
   140003223:	jl     0x140003440
   140003229:	mov    DWORD PTR [rsp+0x40],0x41
   140003231:	lea    r8,[rsp+0x40]
   140003236:	mov    rcx,QWORD PTR [rsi+0x10]
   14000323a:	lea    rdx,[rsp+0x70]
   14000323f:	call   0x140002f14
   140003244:	test   eax,eax
   140003246:	jne    0x140003440
   14000324c:	test   r14d,r14d
   14000324f:	je     0x140003289
   140003251:	movsxd rax,DWORD PTR [rsi+0x28]
   140003255:	lea    rcx,[rbp+0x0]
   140003259:	lea    rdx,[rip+0x3680]        # 0x1400068e0
   140003260:	mov    QWORD PTR [rsp+0x30],r12
   140003265:	mov    DWORD PTR [rsp+0x28],0x14
   14000326d:	xor    r9d,r9d
   140003270:	mov    QWORD PTR [rsp+0x20],rcx
   140003275:	mov    ecx,0x8ff
   14000327a:	mov    r8d,DWORD PTR [rdx+rax*4]
   14000327e:	xor    edx,edx
   140003280:	call   QWORD PTR [rip+0x2f0a]        # 0x140006190
   140003286:	mov    r15d,eax
   140003289:	test   r15d,r15d
   14000328c:	jne    0x140003293
   14000328e:	mov    WORD PTR [rbp+0x0],r12w
   140003293:	mov    rcx,QWORD PTR [rsi+0x10]
   140003297:	cmp    WORD PTR [rcx],bx
   14000329a:	jne    0x140003323
   1400032a0:	cmp    DWORD PTR [rsi+0x24],0x4
   1400032a4:	mov    ecx,r13d
   1400032a7:	jne    0x1400032b5
   1400032a9:	call   0x140005558
   1400032ae:	mov    edx,0x278b
   1400032b3:	jmp    0x1400032bf
   1400032b5:	call   0x140005558
   1400032ba:	mov    edx,0x278a
   1400032bf:	lea    r9,[rbp+0x0]
   1400032c3:	mov    rcx,rax
   1400032c6:	lea    r8,[rsp+0x70]
   1400032cb:	call   0x14000499c
   1400032d0:	movzx  ecx,BYTE PTR [rsi+0x38]
   1400032d4:	lea    rdx,[rsp+0x58]
   1400032d9:	call   QWORD PTR [rip+0x2d99]        # 0x140006078
   1400032df:	test   eax,eax
   1400032e1:	jne    0x14000338f
   1400032e7:	mov    eax,DWORD PTR [rsp+0x58]
   1400032eb:	lea    r8,[rsp+0x70]
   1400032f0:	mov    r9d,0x41
   1400032f6:	mov    DWORD PTR [rsp+0x50],eax
   1400032fa:	lea    rdx,[rsp+0x50]
   1400032ff:	mov    ecx,ebx
   140003301:	call   QWORD PTR [rip+0x2db1]        # 0x1400060b8
   140003307:	mov    ecx,r13d
   14000330a:	call   0x140005558
   14000330f:	mov    rcx,rax
   140003312:	lea    r8,[rsp+0x70]
   140003317:	mov    edx,0x278c
   14000331c:	call   0x14000499c
   140003321:	jmp    0x14000338f
   140003323:	cmp    BYTE PTR [rcx+0x8],0xfe
   140003327:	jne    0x14000335f
   140003329:	mov    al,BYTE PTR [rcx+0x9]
   14000332c:	and    al,0xc0
   14000332e:	cmp    al,0x80
   140003330:	jne    0x140003341
   140003332:	mov    ecx,r13d
   140003335:	call   0x140005558
   14000333a:	mov    edx,0x296a
   14000333f:	jmp    0x14000337e
   140003341:	cmp    BYTE PTR [rcx+0x8],0xfe
   140003345:	jne    0x14000335f
   140003347:	mov    al,BYTE PTR [rcx+0x9]
   14000334a:	and    al,0xc0
   14000334c:	cmp    al,0xc0
   14000334e:	jne    0x14000335f
   140003350:	mov    ecx,r13d
   140003353:	call   0x140005558
   140003358:	mov    edx,0x2969
   14000335d:	jmp    0x14000337e
   14000335f:	cmp    DWORD PTR [rsi+0x24],0x5
   140003363:	mov    ecx,r13d
   140003366:	jne    0x140003374
   140003368:	call   0x140005558
   14000336d:	mov    edx,0x2968
   140003372:	jmp    0x14000337e
   140003374:	call   0x140005558
   140003379:	mov    edx,0x296b
   14000337e:	lea    r9,[rbp+0x0]
   140003382:	mov    rcx,rax
   140003385:	lea    r8,[rsp+0x70]
   14000338a:	call   0x14000499c
   14000338f:	test   r14d,r14d
   140003392:	je     0x140003440
   140003398:	cmp    DWORD PTR [rsi+0x24],0x3
   14000339c:	jne    0x140003440
   1400033a2:	mov    eax,DWORD PTR [rsi+0x34]
   1400033a5:	lea    rcx,[rsp+0x48]
   1400033aa:	sub    eax,DWORD PTR [rsi+0x2c]
   1400033ad:	imul   rbx,rax,0x989680
   1400033b4:	call   QWORD PTR [rip+0x2eae]        # 0x140006268
   1400033ba:	sub    QWORD PTR [rsp+0x48],rbx
   1400033bf:	lea    rdx,[rbp+0x80]
   1400033c6:	lea    rcx,[rsp+0x48]
   1400033cb:	call   0x140002508
   1400033d0:	test   eax,eax
   1400033d2:	jne    0x1400033f0
   1400033d4:	mov    ecx,r13d
   1400033d7:	call   0x140005558
   1400033dc:	mov    rcx,rax
   1400033df:	lea    r8,[rbp+0x80]
   1400033e6:	mov    edx,0x27a6
   1400033eb:	call   0x14000499c
   1400033f0:	mov    eax,DWORD PTR [rsi+0x2c]
   1400033f3:	lea    rcx,[rsp+0x48]
   1400033f8:	imul   rbx,rax,0xffffffffff676980
   1400033ff:	call   QWORD PTR [rip+0x2e63]        # 0x140006268
   140003405:	sub    QWORD PTR [rsp+0x48],rbx
   14000340a:	lea    rdx,[rbp+0x80]
   140003411:	lea    rcx,[rsp+0x48]
   140003416:	call   0x140002508
   14000341b:	test   eax,eax
   14000341d:	jne    0x14000343b
   14000341f:	mov    ecx,r13d
   140003422:	call   0x140005558
   140003427:	mov    rcx,rax
   14000342a:	lea    r8,[rbp+0x80]
   140003431:	mov    edx,0x27a7
   140003436:	call   0x14000499c
   14000343b:	mov    ebx,0x2
   140003440:	mov    rsi,QWORD PTR [rsi+0x8]
   140003444:	test   rsi,rsi
   140003447:	jne    0x14000321a
   14000344d:	mov    rbx,QWORD PTR [rdi+0xd0]
   140003454:	mov    esi,0x278d
   140003459:	lea    r15d,[rsi-0x41]
   14000345d:	jmp    0x1400034ac
   14000345f:	mov    DWORD PTR [rsp+0x40],0x41
   140003467:	lea    r8,[rsp+0x40]
   14000346c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003470:	lea    rdx,[rsp+0x70]
   140003475:	call   0x140002f14
   14000347a:	test   eax,eax
   14000347c:	jne    0x1400034a8
   14000347e:	mov    ecx,r13d
   140003481:	cmp    rbx,QWORD PTR [rdi+0xd0]
   140003488:	jne    0x140003493
   14000348a:	call   0x140005558
   14000348f:	mov    edx,esi
   140003491:	jmp    0x14000349b
   140003493:	call   0x140005558
   140003498:	mov    edx,r15d
   14000349b:	lea    r8,[rsp+0x70]
   1400034a0:	mov    rcx,rax
   1400034a3:	call   0x14000499c
   1400034a8:	mov    rbx,QWORD PTR [rbx+0x8]
   1400034ac:	test   rbx,rbx
   1400034af:	jne    0x14000345f
   1400034b1:	cmp    QWORD PTR [rdi+0xd0],r12
   1400034b8:	jne    0x1400034d3
   1400034ba:	mov    ecx,r13d
   1400034bd:	call   0x140005558
   1400034c2:	mov    rcx,rax
   1400034c5:	lea    r8,[rip+0x3144]        # 0x140006610
   1400034cc:	mov    edx,esi
   1400034ce:	call   0x14000499c
   1400034d3:	test   r14d,r14d
   1400034d6:	je     0x1400038ae
   1400034dc:	lea    rbx,[rdi+0xe0]
   1400034e3:	mov    r14d,0x200
   1400034e9:	mov    rcx,rbx
   1400034ec:	mov    DWORD PTR [rsp+0x50],r14d
   1400034f1:	lea    rdx,[rsp+0x60]
   1400034f6:	call   QWORD PTR [rip+0x2b5c]        # 0x140006058
   1400034fc:	mov    esi,0x27
   140003501:	test   eax,eax
   140003503:	jne    0x140003580
   140003505:	mov    r8d,esi
   140003508:	lea    rdx,[rbp+0x30]
   14000350c:	lea    rcx,[rsp+0x60]
   140003511:	call   QWORD PTR [rip+0x2b29]        # 0x140006040
   140003517:	test   eax,eax
   140003519:	jne    0x140003580
   14000351b:	lea    r9,[rsp+0x48]
   140003520:	mov    r8d,r13d
   140003523:	lea    rcx,[rbp+0x30]
   140003527:	call   0x140001f78
   14000352c:	test   eax,eax
   14000352e:	jne    0x140003580
   140003530:	mov    rcx,QWORD PTR [rsp+0x48]
   140003535:	lea    rax,[rsp+0x50]
   14000353a:	mov    QWORD PTR [rsp+0x28],rax
   14000353f:	lea    r9,[rsp+0x58]
   140003544:	lea    rax,[rbp+0x80]
   14000354b:	xor    r8d,r8d
   14000354e:	lea    rdx,[rip+0x301b]        # 0x140006570
   140003555:	mov    QWORD PTR [rsp+0x20],rax
   14000355a:	call   QWORD PTR [rip+0x2ca8]        # 0x140006208
   140003560:	test   eax,eax
   140003562:	jne    0x140003580
   140003564:	mov    ecx,r13d
   140003567:	call   0x140005558
   14000356c:	mov    rcx,rax
   14000356f:	lea    r8,[rbp+0x80]
   140003576:	mov    edx,0x293f
   14000357b:	call   0x14000499c
   140003580:	lea    rdx,[rsp+0x60]
   140003585:	mov    DWORD PTR [rsp+0x50],r14d
   14000358a:	mov    rcx,rbx
   14000358d:	call   QWORD PTR [rip+0x2ac5]        # 0x140006058
   140003593:	test   eax,eax
   140003595:	jne    0x140003612
   140003597:	mov    r8,rsi
   14000359a:	lea    rdx,[rbp+0x30]
   14000359e:	lea    rcx,[rsp+0x60]
   1400035a3:	call   QWORD PTR [rip+0x2a97]        # 0x140006040
   1400035a9:	test   eax,eax
   1400035ab:	jne    0x140003612
   1400035ad:	lea    r9,[rsp+0x48]
   1400035b2:	mov    r8d,r13d
   1400035b5:	lea    rcx,[rbp+0x30]
   1400035b9:	call   0x14000163c
   1400035be:	test   eax,eax
   1400035c0:	jne    0x140003612
   1400035c2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400035c7:	lea    rax,[rsp+0x50]
   1400035cc:	mov    QWORD PTR [rsp+0x28],rax
   1400035d1:	lea    r9,[rsp+0x58]
   1400035d6:	lea    rax,[rbp+0x80]
   1400035dd:	xor    r8d,r8d
   1400035e0:	lea    rdx,[rip+0x2ee9]        # 0x1400064d0
   1400035e7:	mov    QWORD PTR [rsp+0x20],rax
   1400035ec:	call   QWORD PTR [rip+0x2c16]        # 0x140006208
   1400035f2:	test   eax,eax
   1400035f4:	jne    0x140003612
   1400035f6:	mov    ecx,r13d
   1400035f9:	call   0x140005558
   1400035fe:	mov    rcx,rax
   140003601:	lea    r8,[rbp+0x80]
   140003608:	mov    edx,0x278e
   14000360d:	call   0x14000499c
   140003612:	mov    rcx,QWORD PTR [rdi+0xe8]
   140003619:	mov    ebx,0x278f
   14000361e:	test   rcx,rcx
   140003621:	je     0x140003655
   140003623:	lea    r8,[rsp+0x40]
   140003628:	mov    DWORD PTR [rsp+0x40],0x41
   140003630:	lea    rdx,[rsp+0x70]
   140003635:	call   0x140002f14
   14000363a:	test   eax,eax
   14000363c:	jne    0x140003655
   14000363e:	mov    ecx,r13d
   140003641:	call   0x140005558
   140003646:	mov    rcx,rax
   140003649:	lea    r8,[rsp+0x70]
   14000364e:	mov    edx,ebx
   140003650:	call   0x14000499c
   140003655:	mov    rcx,QWORD PTR [rdi+0x118]
   14000365c:	test   rcx,rcx
   14000365f:	je     0x1400036a6
   140003661:	lea    r8,[rsp+0x40]
   140003666:	mov    DWORD PTR [rsp+0x40],0x41
   14000366e:	lea    rdx,[rsp+0x70]
   140003673:	call   0x140002f14
   140003678:	test   eax,eax
   14000367a:	jne    0x1400036a6
   14000367c:	mov    ecx,r13d
   14000367f:	cmp    QWORD PTR [rdi+0xe8],r12
   140003686:	je     0x140003692
   140003688:	call   0x140005558
   14000368d:	mov    edx,r15d
   140003690:	jmp    0x140003699
   140003692:	call   0x140005558
   140003697:	mov    edx,ebx
   140003699:	lea    r8,[rsp+0x70]
   14000369e:	mov    rcx,rax
   1400036a1:	call   0x14000499c
   1400036a6:	mov    ebx,DWORD PTR [rdi+0x1b0]
   1400036ac:	test   ebx,ebx
   1400036ae:	je     0x1400036c8
   1400036b0:	mov    ecx,r13d
   1400036b3:	call   0x140005558
   1400036b8:	mov    rcx,rax
   1400036bb:	mov    r8d,ebx
   1400036be:	mov    edx,0x2a31
   1400036c3:	call   0x14000499c
   1400036c8:	mov    eax,DWORD PTR [rdi+0x1ac]
   1400036ce:	test   eax,eax
   1400036d0:	je     0x140003776
   1400036d6:	lea    ebx,[rax+rax*2]
   1400036d9:	add    rbx,rbx
   1400036dc:	call   QWORD PTR [rip+0x2a56]        # 0x140006138
   1400036e2:	mov    r8,rbx
   1400036e5:	xor    edx,edx
   1400036e7:	mov    rcx,rax
   1400036ea:	call   QWORD PTR [rip+0x2a38]        # 0x140006128
   1400036f0:	mov    rsi,rax
   1400036f3:	test   rax,rax
   1400036f6:	je     0x140003776
   1400036f8:	mov    edx,DWORD PTR [rdi+0x1ac]
   1400036fe:	mov    ebx,r12d
   140003701:	test   edx,edx
   140003703:	je     0x14000373c
   140003705:	mov    r14d,r12d
   140003708:	mov    ecx,ebx
   14000370a:	lea    r8,[rip+0x31bf]        # 0x1400068d0
   140003711:	sub    edx,ebx
   140003713:	mov    eax,r14d
   140003716:	movzx  r9d,BYTE PTR [rcx+rdi*1+0x128]
   14000371f:	lea    rcx,[rsi+rax*2]
   140003723:	lea    edx,[rdx+rdx*2]
   140003726:	call   0x1400025d4
   14000372b:	mov    edx,DWORD PTR [rdi+0x1ac]
   140003731:	add    ebx,r13d
   140003734:	add    r14d,0x3
   140003738:	cmp    ebx,edx
   14000373a:	jb     0x140003708
   14000373c:	lea    eax,[rbx*2-0x1]
   140003743:	mov    ecx,r13d
   140003746:	add    eax,ebx
   140003748:	mov    WORD PTR [rsi+rax*2],r12w
   14000374d:	call   0x140005558
   140003752:	mov    rcx,rax
   140003755:	mov    r8,rsi
   140003758:	mov    edx,0x2a30
   14000375d:	call   0x14000499c
   140003762:	call   QWORD PTR [rip+0x29d0]        # 0x140006138
   140003768:	mov    r8,rsi
   14000376b:	xor    edx,edx
   14000376d:	mov    rcx,rax
   140003770:	call   QWORD PTR [rip+0x29ba]        # 0x140006130
   140003776:	mov    rbx,QWORD PTR [rdi+0x30]
   14000377a:	jmp    0x1400037c9
   14000377c:	mov    DWORD PTR [rsp+0x40],0x41
   140003784:	lea    r8,[rsp+0x40]
   140003789:	mov    rcx,QWORD PTR [rbx+0x10]
   14000378d:	lea    rdx,[rsp+0x70]
   140003792:	call   0x140002f14
   140003797:	test   eax,eax
   140003799:	jne    0x1400037c5
   14000379b:	mov    ecx,r13d
   14000379e:	cmp    rbx,QWORD PTR [rdi+0x30]
   1400037a2:	jne    0x1400037b0
   1400037a4:	call   0x140005558
   1400037a9:	mov    edx,0x2790
   1400037ae:	jmp    0x1400037b8
   1400037b0:	call   0x140005558
   1400037b5:	mov    edx,r15d
   1400037b8:	lea    r8,[rsp+0x70]
   1400037bd:	mov    rcx,rax
   1400037c0:	call   0x14000499c
   1400037c5:	mov    rbx,QWORD PTR [rbx+0x8]
   1400037c9:	test   rbx,rbx
   1400037cc:	jne    0x14000377c
   1400037ce:	mov    rbx,QWORD PTR [rdi+0xc8]
   1400037d5:	jmp    0x14000383c
   1400037d7:	mov    DWORD PTR [rsp+0x40],0x41
   1400037df:	lea    r8,[rsp+0x40]
   1400037e4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400037e8:	lea    rdx,[rsp+0x70]
   1400037ed:	call   0x140002f14
   1400037f2:	test   eax,eax
   1400037f4:	jne    0x140003838
   1400037f6:	mov    rax,QWORD PTR [rdi+0xc8]
   1400037fd:	mov    ecx,r13d
   140003800:	cmp    rbx,rax
   140003803:	jne    0x140003811
   140003805:	call   0x140005558
   14000380a:	mov    edx,0x2792
   14000380f:	jmp    0x14000382b
   140003811:	cmp    rbx,QWORD PTR [rax+0x8]
   140003815:	jne    0x140003823
   140003817:	call   0x140005558
   14000381c:	mov    edx,0x2793
   140003821:	jmp    0x14000382b
   140003823:	call   0x140005558
   140003828:	mov    edx,r15d
   14000382b:	lea    r8,[rsp+0x70]
   140003830:	mov    rcx,rax
   140003833:	call   0x14000499c
   140003838:	mov    rbx,QWORD PTR [rbx+0x8]
   14000383c:	test   rbx,rbx
   14000383f:	jne    0x1400037d7
   140003841:	test   BYTE PTR [rdi+0x5c],0x40
   140003845:	mov    ecx,r13d
   140003848:	je     0x140003856
   14000384a:	call   0x140005558
   14000384f:	mov    edx,0x279d
   140003854:	jmp    0x140003860
   140003856:	call   0x140005558
   14000385b:	mov    edx,0x279c
   140003860:	mov    rcx,rax
   140003863:	call   0x14000499c
   140003868:	cmp    QWORD PTR [rdi+0x1b8],r12
   14000386f:	je     0x1400038ae
   140003871:	mov    ecx,r13d
   140003874:	call   0x140005558
   140003879:	mov    rcx,rax
   14000387c:	mov    edx,0x2743
   140003881:	call   0x14000499c
   140003886:	mov    rdi,QWORD PTR [rdi+0x1b8]
   14000388d:	jmp    0x1400038a9
   14000388f:	mov    ecx,r13d
   140003892:	call   0x140005558
   140003897:	mov    rcx,rax
   14000389a:	lea    r8,[rdi+0x8]
   14000389e:	mov    edx,r15d
   1400038a1:	call   0x14000499c
   1400038a6:	mov    rdi,QWORD PTR [rdi]
   1400038a9:	test   rdi,rdi
   1400038ac:	jne    0x14000388f
   1400038ae:	mov    rcx,QWORD PTR [rbp+0x280]
   1400038b5:	xor    rcx,rsp
   1400038b8:	call   0x140004f50
   1400038bd:	lea    r11,[rsp+0x390]
   1400038c5:	mov    rbx,QWORD PTR [r11+0x30]
   1400038c9:	mov    rsi,QWORD PTR [r11+0x40]
   1400038cd:	mov    rdi,QWORD PTR [r11+0x48]
   1400038d1:	mov    rsp,r11
   1400038d4:	pop    r15
   1400038d6:	pop    r14
   1400038d8:	pop    r13
   1400038da:	pop    r12
   1400038dc:	pop    rbp
   1400038dd:	ret    
   1400038de:	call   0x140005128
   1400038e3:	int3   
   1400038e4:	int3   
   1400038e5:	int3   
   1400038e6:	int3   
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	test   ecx,ecx
   1400038ee:	je     0x140003b4c
   1400038f4:	mov    rax,rsp
   1400038f7:	mov    QWORD PTR [rax+0x8],rbx
   1400038fb:	mov    QWORD PTR [rax+0x10],rsi
   1400038ff:	mov    QWORD PTR [rax+0x18],rdi
   140003903:	mov    QWORD PTR [rax+0x20],r14
   140003907:	push   rbp
   140003908:	lea    rbp,[rax-0x158]
   14000390f:	sub    rsp,0x250
   140003916:	mov    rax,QWORD PTR [rip+0x56eb]        # 0x140009008
   14000391d:	xor    rax,rsp
   140003920:	mov    QWORD PTR [rbp+0x140],rax
   140003927:	xor    esi,esi
   140003929:	mov    DWORD PTR [rsp+0x30],0xff
   140003931:	lea    r8,[rsp+0x30]
   140003936:	lea    rdx,[rsp+0x40]
   14000393b:	lea    r14d,[rsi+0x1]
   14000393f:	mov    ecx,r14d
   140003942:	call   QWORD PTR [rip+0x2930]        # 0x140006278
   140003948:	test   eax,eax
   14000394a:	jne    0x140003951
   14000394c:	mov    WORD PTR [rsp+0x40],si
   140003951:	mov    ecx,r14d
   140003954:	call   0x140005558
   140003959:	mov    rcx,rax
   14000395c:	lea    r8,[rsp+0x40]
   140003961:	mov    edx,0x2711
   140003966:	call   0x14000499c
   14000396b:	lea    r8,[rsp+0x30]
   140003970:	mov    DWORD PTR [rsp+0x30],0xff
   140003978:	lea    rdx,[rsp+0x40]
   14000397d:	mov    ecx,0x2
   140003982:	call   QWORD PTR [rip+0x28f0]        # 0x140006278
   140003988:	test   eax,eax
   14000398a:	jne    0x140003991
   14000398c:	mov    WORD PTR [rsp+0x40],si
   140003991:	mov    ecx,r14d
   140003994:	call   0x140005558
   140003999:	mov    rcx,rax
   14000399c:	lea    r8,[rsp+0x40]
   1400039a1:	mov    edx,0x2712
   1400039a6:	call   0x14000499c
   1400039ab:	lea    rdx,[rsp+0x30]
   1400039b0:	xor    ecx,ecx
   1400039b2:	call   QWORD PTR [rip+0x26c8]        # 0x140006080
   1400039b8:	cmp    eax,0x6f
   1400039bb:	jne    0x140003b21
   1400039c1:	mov    ebx,DWORD PTR [rsp+0x30]
   1400039c5:	call   QWORD PTR [rip+0x276d]        # 0x140006138
   1400039cb:	mov    r8d,ebx
   1400039ce:	xor    edx,edx
   1400039d0:	mov    rcx,rax
   1400039d3:	call   QWORD PTR [rip+0x274f]        # 0x140006128
   1400039d9:	mov    rdi,rax
   1400039dc:	test   rax,rax
   1400039df:	je     0x140003b21
   1400039e5:	lea    rdx,[rsp+0x30]
   1400039ea:	mov    rcx,rax
   1400039ed:	call   QWORD PTR [rip+0x268d]        # 0x140006080
   1400039f3:	test   eax,eax
   1400039f5:	jne    0x140003a82
   1400039fb:	mov    edx,DWORD PTR [rdi+0x140]
   140003a01:	lea    r8,[rip+0x2e70]        # 0x140006878
   140003a08:	mov    rax,r8
   140003a0b:	mov    ecx,esi
   140003a0d:	cmp    DWORD PTR [rax],edx
   140003a0f:	je     0x140003a24
   140003a11:	add    ecx,r14d
   140003a14:	add    rax,0x8
   140003a18:	cmp    ecx,0x4
   140003a1b:	jb     0x140003a0d
   140003a1d:	mov    ebx,0x2713
   140003a22:	jmp    0x140003a2b
   140003a24:	mov    eax,ecx
   140003a26:	mov    ebx,DWORD PTR [r8+rax*8+0x4]
   140003a2b:	mov    ecx,r14d
   140003a2e:	call   0x140005558
   140003a33:	mov    rcx,rax
   140003a36:	mov    edx,ebx
   140003a38:	call   0x14000499c
   140003a3d:	mov    ebx,DWORD PTR [rdi+0x248]
   140003a43:	mov    ecx,r14d
   140003a46:	call   0x140005558
   140003a4b:	mov    rcx,rax
   140003a4e:	lea    edx,[rbx+0x272e]
   140003a54:	call   0x14000499c
   140003a59:	mov    ecx,r14d
   140003a5c:	cmp    DWORD PTR [rdi+0x24c],esi
   140003a62:	je     0x140003a70
   140003a64:	call   0x140005558
   140003a69:	mov    edx,0x2739
   140003a6e:	jmp    0x140003a7a
   140003a70:	call   0x140005558
   140003a75:	mov    edx,0x2738
   140003a7a:	mov    rcx,rax
   140003a7d:	call   0x14000499c
   140003a82:	call   QWORD PTR [rip+0x26b0]        # 0x140006138
   140003a88:	mov    r8,rdi
   140003a8b:	xor    edx,edx
   140003a8d:	mov    rcx,rax
   140003a90:	call   QWORD PTR [rip+0x269a]        # 0x140006130
   140003a96:	xor    r8d,r8d
   140003a99:	xor    edx,edx
   140003a9b:	mov    ecx,0x10003
   140003aa0:	call   QWORD PTR [rip+0x2562]        # 0x140006008
   140003aa6:	mov    rdi,rax
   140003aa9:	test   rax,rax
   140003aac:	je     0x140003b21
   140003aae:	mov    ebx,esi
   140003ab0:	cmp    DWORD PTR [rax+0x8],esi
   140003ab3:	jbe    0x140003b13
   140003ab5:	lea    rax,[rsp+0x40]
   140003aba:	mov    r8d,ebx
   140003abd:	mov    DWORD PTR [rsp+0x28],0xff
   140003ac5:	or     r9d,0xffffffff
   140003ac9:	xor    edx,edx
   140003acb:	mov    QWORD PTR [rsp+0x20],rax
   140003ad0:	mov    ecx,0xfde9
   140003ad5:	mov    r8,QWORD PTR [rdi+r8*8+0x10]
   140003ada:	call   QWORD PTR [rip+0x2760]        # 0x140006240
   140003ae0:	mov    DWORD PTR [rsp+0x30],eax
   140003ae4:	test   eax,eax
   140003ae6:	je     0x140003b0b
   140003ae8:	mov    ecx,r14d
   140003aeb:	call   0x140005558
   140003af0:	lea    r8,[rsp+0x40]
   140003af5:	mov    rcx,rax
   140003af8:	mov    edx,0x2742
   140003afd:	test   ebx,ebx
   140003aff:	je     0x140003b06
   140003b01:	mov    edx,0x274c
   140003b06:	call   0x14000499c
   140003b0b:	add    ebx,r14d
   140003b0e:	cmp    ebx,DWORD PTR [rdi+0x8]
   140003b11:	jb     0x140003ab5
   140003b13:	mov    edx,0x10003
   140003b18:	mov    rcx,rdi
   140003b1b:	call   QWORD PTR [rip+0x250f]        # 0x140006030
   140003b21:	mov    rcx,QWORD PTR [rbp+0x140]
   140003b28:	xor    rcx,rsp
   140003b2b:	call   0x140004f50
   140003b30:	lea    r11,[rsp+0x250]
   140003b38:	mov    rbx,QWORD PTR [r11+0x10]
   140003b3c:	mov    rsi,QWORD PTR [r11+0x18]
   140003b40:	mov    rdi,QWORD PTR [r11+0x20]
   140003b44:	mov    r14,QWORD PTR [r11+0x28]
   140003b48:	mov    rsp,r11
   140003b4b:	pop    rbp
   140003b4c:	ret    
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	int3   
   140003b51:	int3   
   140003b52:	int3   
   140003b53:	int3   
   140003b54:	sub    rsp,0x38
   140003b58:	or     r9d,0xffffffff
   140003b5c:	mov    r8,rcx
   140003b5f:	mov    DWORD PTR [rsp+0x28],r9d
   140003b64:	mov    ecx,0x400
   140003b69:	mov    QWORD PTR [rsp+0x20],rdx
   140003b6e:	mov    edx,0x30001
   140003b73:	call   QWORD PTR [rip+0x26cf]        # 0x140006248
   140003b79:	xor    ecx,ecx
   140003b7b:	cmp    eax,0x2
   140003b7e:	sete   cl
   140003b81:	mov    eax,ecx
   140003b83:	add    rsp,0x38
   140003b87:	ret    
   140003b88:	int3   
   140003b89:	int3   
   140003b8a:	int3   
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x8],rbx
   140003b95:	mov    QWORD PTR [rsp+0x10],rbp
   140003b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140003b9f:	push   rdi
   140003ba0:	push   r12
   140003ba2:	push   r14
   140003ba4:	sub    rsp,0x20
   140003ba8:	lea    rsi,[rdx+0x8]
   140003bac:	mov    r12d,0xfffd
   140003bb2:	mov    rdx,QWORD PTR [rsi]
   140003bb5:	mov    r14,r9
   140003bb8:	mov    ebp,r8d
   140003bbb:	mov    rdi,rcx
   140003bbe:	movzx  eax,WORD PTR [rdx]
   140003bc1:	sub    ax,0x2d
   140003bc5:	test   r12w,ax
   140003bc9:	jne    0x140003e2b
   140003bcf:	mov    rcx,QWORD PTR [rcx+0x50]
   140003bd3:	add    rdx,0x2
   140003bd7:	mov    QWORD PTR [rsi],rdx
   140003bda:	call   0x140003b54
   140003bdf:	xor    ebx,ebx
   140003be1:	test   eax,eax
   140003be3:	je     0x140003c14
   140003be5:	add    rsi,0x8
   140003be9:	mov    QWORD PTR [rdi+0x50],rbx
   140003bed:	add    ebp,0xffffffff
   140003bf0:	jne    0x140003bf9
   140003bf2:	xor    eax,eax
   140003bf4:	jmp    0x140003e30
   140003bf9:	mov    rcx,QWORD PTR [rsi]
   140003bfc:	movzx  eax,WORD PTR [rcx]
   140003bff:	sub    ax,0x2d
   140003c03:	test   r12w,ax
   140003c07:	jne    0x140003e2b
   140003c0d:	lea    rax,[rcx+0x2]
   140003c11:	mov    QWORD PTR [rsi],rax
   140003c14:	mov    rdx,QWORD PTR [rsi]
   140003c17:	mov    rcx,QWORD PTR [rdi+0x58]
   140003c1b:	call   0x140003b54
   140003c20:	test   eax,eax
   140003c22:	je     0x140003c4c
   140003c24:	add    rsi,0x8
   140003c28:	mov    QWORD PTR [rdi+0x58],rbx
   140003c2c:	add    ebp,0xffffffff
   140003c2f:	je     0x140003bf2
   140003c31:	mov    rcx,QWORD PTR [rsi]
   140003c34:	movzx  eax,WORD PTR [rcx]
   140003c37:	sub    ax,0x2d
   140003c3b:	test   r12w,ax
   140003c3f:	jne    0x140003e2b
   140003c45:	lea    rax,[rcx+0x2]
   140003c49:	mov    QWORD PTR [rsi],rax
   140003c4c:	cmp    ebp,0x2
   140003c4f:	jb     0x140003c58
   140003c51:	mov    rax,QWORD PTR [rsi+0x8]
   140003c55:	mov    QWORD PTR [r14],rax
   140003c58:	cmp    ebp,0x3
   140003c5b:	jne    0x140003c69
   140003c5d:	mov    rax,QWORD PTR [rsp+0x60]
   140003c62:	mov    rcx,QWORD PTR [rsi+0x10]
   140003c66:	mov    QWORD PTR [rax],rcx
   140003c69:	mov    rdx,QWORD PTR [rsi]
   140003c6c:	cmp    WORD PTR [rdx],0x3f
   140003c70:	jne    0x140003c7c
   140003c72:	mov    eax,0x667
   140003c77:	jmp    0x140003e30
   140003c7c:	mov    rcx,QWORD PTR [rdi]
   140003c7f:	call   0x140003b54
   140003c84:	test   eax,eax
   140003c86:	je     0x140003c99
   140003c88:	cmp    ebp,0x1
   140003c8b:	jne    0x140003e2b
   140003c91:	mov    QWORD PTR [rdi],rbx
   140003c94:	jmp    0x140003bf2
   140003c99:	mov    rdx,QWORD PTR [rsi]
   140003c9c:	mov    rcx,QWORD PTR [rdi+0x18]
   140003ca0:	call   0x140003b54
   140003ca5:	test   eax,eax
   140003ca7:	je     0x140003cdd
   140003ca9:	cmp    ebp,0x1
   140003cac:	jne    0x140003e2b
   140003cb2:	mov    QWORD PTR [rdi+0x18],rbx
   140003cb6:	call   0x140004b18
   140003cbb:	test   al,al
   140003cbd:	jne    0x140003cc8
   140003cbf:	call   0x140004b50
   140003cc4:	test   al,al
   140003cc6:	je     0x140003ccd
   140003cc8:	mov    ebx,0x1
   140003ccd:	neg    bl
   140003ccf:	sbb    eax,eax
   140003cd1:	not    eax
   140003cd3:	and    eax,0x2e4
   140003cd8:	jmp    0x140003e30
   140003cdd:	mov    rdx,QWORD PTR [rsi]
   140003ce0:	mov    rcx,QWORD PTR [rdi+0x20]
   140003ce4:	call   0x140003b54
   140003ce9:	test   eax,eax
   140003ceb:	je     0x140003d03
   140003ced:	cmp    ebp,0x1
   140003cf0:	jne    0x140003e2b
   140003cf6:	mov    QWORD PTR [rdi+0x20],rbx
   140003cfa:	call   0x140004b18
   140003cff:	neg    al
   140003d01:	jmp    0x140003ccf
   140003d03:	mov    rdx,QWORD PTR [rsi]
   140003d06:	mov    rcx,QWORD PTR [rdi+0x28]
   140003d0a:	call   0x140003b54
   140003d0f:	test   eax,eax
   140003d11:	je     0x140003d25
   140003d13:	cmp    ebp,0x1
   140003d16:	jne    0x140003e2b
   140003d1c:	mov    QWORD PTR [rdi+0x28],rbx
   140003d20:	jmp    0x140003bf2
   140003d25:	mov    rdx,QWORD PTR [rsi]
   140003d28:	mov    rcx,QWORD PTR [rdi+0x8]
   140003d2c:	call   0x140003b54
   140003d31:	test   eax,eax
   140003d33:	je     0x140003d47
   140003d35:	cmp    ebp,0x2
   140003d38:	ja     0x140003e2b
   140003d3e:	mov    QWORD PTR [rdi+0x8],rbx
   140003d42:	jmp    0x140003bf2
   140003d47:	mov    rdx,QWORD PTR [rsi]
   140003d4a:	mov    rcx,QWORD PTR [rdi+0x60]
   140003d4e:	call   0x140003b54
   140003d53:	test   eax,eax
   140003d55:	je     0x140003d69
   140003d57:	cmp    ebp,0x2
   140003d5a:	ja     0x140003e2b
   140003d60:	mov    QWORD PTR [rdi+0x60],rbx
   140003d64:	jmp    0x140003bf2
   140003d69:	mov    rdx,QWORD PTR [rsi]
   140003d6c:	mov    rcx,QWORD PTR [rdi+0x10]
   140003d70:	call   0x140003b54
   140003d75:	test   eax,eax
   140003d77:	je     0x140003d8b
   140003d79:	cmp    ebp,0x2
   140003d7c:	ja     0x140003e2b
   140003d82:	mov    QWORD PTR [rdi+0x10],rbx
   140003d86:	jmp    0x140003cb6
   140003d8b:	mov    rdx,QWORD PTR [rsi]
   140003d8e:	mov    rcx,QWORD PTR [rdi+0x68]
   140003d92:	call   0x140003b54
   140003d97:	test   eax,eax
   140003d99:	je     0x140003dad
   140003d9b:	cmp    ebp,0x2
   140003d9e:	ja     0x140003e2b
   140003da4:	mov    QWORD PTR [rdi+0x68],rbx
   140003da8:	jmp    0x140003cb6
   140003dad:	mov    rdx,QWORD PTR [rsi]
   140003db0:	mov    rcx,QWORD PTR [rdi+0x30]
   140003db4:	call   0x140003b54
   140003db9:	test   eax,eax
   140003dbb:	je     0x140003dcb
   140003dbd:	cmp    ebp,0x2
   140003dc0:	jne    0x140003e2b
   140003dc2:	mov    QWORD PTR [rdi+0x30],rbx
   140003dc6:	jmp    0x140003bf2
   140003dcb:	mov    rdx,QWORD PTR [rsi]
   140003dce:	mov    rcx,QWORD PTR [rdi+0x38]
   140003dd2:	call   0x140003b54
   140003dd7:	test   eax,eax
   140003dd9:	je     0x140003dec
   140003ddb:	lea    eax,[rbp-0x2]
   140003dde:	cmp    eax,0x1
   140003de1:	ja     0x140003e2b
   140003de3:	mov    QWORD PTR [rdi+0x38],rbx
   140003de7:	jmp    0x140003cfa
   140003dec:	mov    rdx,QWORD PTR [rsi]
   140003def:	mov    rcx,QWORD PTR [rdi+0x40]
   140003df3:	call   0x140003b54
   140003df8:	test   eax,eax
   140003dfa:	je     0x140003e0a
   140003dfc:	cmp    ebp,0x2
   140003dff:	jne    0x140003e2b
   140003e01:	mov    QWORD PTR [rdi+0x40],rbx
   140003e05:	jmp    0x140003bf2
   140003e0a:	mov    rdx,QWORD PTR [rsi]
   140003e0d:	mov    rcx,QWORD PTR [rdi+0x48]
   140003e11:	call   0x140003b54
   140003e16:	test   eax,eax
   140003e18:	je     0x140003e2b
   140003e1a:	lea    eax,[rbp-0x2]
   140003e1d:	cmp    eax,0x1
   140003e20:	ja     0x140003e2b
   140003e22:	mov    QWORD PTR [rdi+0x48],rbx
   140003e26:	jmp    0x140003cfa
   140003e2b:	mov    eax,0xd
   140003e30:	mov    rbx,QWORD PTR [rsp+0x40]
   140003e35:	mov    rbp,QWORD PTR [rsp+0x48]
   140003e3a:	mov    rsi,QWORD PTR [rsp+0x50]
   140003e3f:	add    rsp,0x20
   140003e43:	pop    r14
   140003e45:	pop    r12
   140003e47:	pop    rdi
   140003e48:	ret    
   140003e49:	int3   
   140003e4a:	int3   
   140003e4b:	int3   
   140003e4c:	int3   
   140003e4d:	int3   
   140003e4e:	int3   
   140003e4f:	int3   
   140003e50:	mov    QWORD PTR [rsp+0x10],rbx
   140003e55:	mov    QWORD PTR [rsp+0x18],rsi
   140003e5a:	push   rdi
   140003e5b:	sub    rsp,0x30
   140003e5f:	movzx  esi,cl
   140003e62:	mov    ecx,esi
   140003e64:	call   0x1400038ec
   140003e69:	and    DWORD PTR [rsp+0x40],0x0
   140003e6e:	xor    edi,edi
   140003e70:	xor    r9d,r9d
   140003e73:	jmp    0x140003e9b
   140003e75:	test   rdi,rdi
   140003e78:	je     0x140003e83
   140003e7a:	mov    rcx,rdi
   140003e7d:	call   QWORD PTR [rip+0x22d5]        # 0x140006158
   140003e83:	cmp    ebx,0x6f
   140003e86:	jne    0x140003ee5
   140003e88:	mov    edx,DWORD PTR [rsp+0x40]
   140003e8c:	lea    ecx,[rbx-0x2f]
   140003e8f:	call   QWORD PTR [rip+0x22bb]        # 0x140006150
   140003e95:	mov    rdi,rax
   140003e98:	mov    r9,rax
   140003e9b:	lea    rax,[rsp+0x40]
   140003ea0:	xor    r8d,r8d
   140003ea3:	mov    edx,0xc6
   140003ea8:	mov    QWORD PTR [rsp+0x20],rax
   140003ead:	xor    ecx,ecx
   140003eaf:	call   QWORD PTR [rip+0x2193]        # 0x140006048
   140003eb5:	mov    ebx,eax
   140003eb7:	test   eax,eax
   140003eb9:	jne    0x140003e75
   140003ebb:	mov    rbx,rdi
   140003ebe:	test   rdi,rdi
   140003ec1:	je     0x140003ee5
   140003ec3:	cmp    DWORD PTR [rbx+0x64],0x18
   140003ec7:	je     0x140003ed3
   140003ec9:	mov    rdx,rbx
   140003ecc:	mov    ecx,esi
   140003ece:	call   0x140003060
   140003ed3:	mov    rbx,QWORD PTR [rbx+0x8]
   140003ed7:	test   rbx,rbx
   140003eda:	jne    0x140003ec3
   140003edc:	mov    rcx,rdi
   140003edf:	call   QWORD PTR [rip+0x2273]        # 0x140006158
   140003ee5:	mov    rbx,QWORD PTR [rsp+0x48]
   140003eea:	mov    rsi,QWORD PTR [rsp+0x50]
   140003eef:	add    rsp,0x30
   140003ef3:	pop    rdi
   140003ef4:	ret    
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	mov    QWORD PTR [rsp+0x8],rbx
   140003f01:	push   rbp
   140003f02:	push   rsi
   140003f03:	push   rdi
   140003f04:	sub    rsp,0x70
   140003f08:	mov    bpl,cl
   140003f0b:	call   QWORD PTR [rip+0x213f]        # 0x140006050
   140003f11:	mov    ecx,0x1
   140003f16:	mov    esi,eax
   140003f18:	call   0x140005558
   140003f1d:	mov    rcx,rax
   140003f20:	mov    r8d,esi
   140003f23:	mov    edx,0x2973
   140003f28:	call   0x14000499c
   140003f2d:	mov    cl,bpl
   140003f30:	call   0x140003e50
   140003f35:	mov    BYTE PTR [rsp+0x60],0x1
   140003f3a:	lea    rax,[rsp+0x98]
   140003f42:	mov    QWORD PTR [rsp+0x58],rax
   140003f47:	lea    r9,[rsp+0xa0]
   140003f4f:	and    DWORD PTR [rsp+0x50],0x0
   140003f54:	lea    rax,[rsp+0xa8]
   140003f5c:	and    QWORD PTR [rsp+0x48],0x0
   140003f62:	lea    rdx,[rip+0x305f]        # 0x140006fc8
   140003f69:	and    DWORD PTR [rsp+0x40],0x0
   140003f6e:	mov    r8d,0x7
   140003f74:	and    QWORD PTR [rsp+0x38],0x0
   140003f7a:	mov    DWORD PTR [rsp+0x30],0x658
   140003f82:	mov    QWORD PTR [rsp+0x28],rax
   140003f87:	lea    ecx,[r8-0x6]
   140003f8b:	mov    DWORD PTR [rsp+0x20],0x4
   140003f93:	call   QWORD PTR [rip+0x2107]        # 0x1400060a0
   140003f99:	test   eax,eax
   140003f9b:	jne    0x140004021
   140003fa1:	mov    edx,DWORD PTR [rsp+0x98]
   140003fa8:	xor    ebx,ebx
   140003faa:	test   edx,edx
   140003fac:	je     0x140003ffd
   140003fae:	mov    rax,QWORD PTR [rsp+0xa0]
   140003fb6:	mov    ecx,DWORD PTR [rax+rbx*4]
   140003fb9:	cmp    ecx,esi
   140003fbb:	je     0x140003ff7
   140003fbd:	call   QWORD PTR [rip+0x209d]        # 0x140006060
   140003fc3:	test   eax,eax
   140003fc5:	jne    0x140003ffd
   140003fc7:	lea    ecx,[rax+0x1]
   140003fca:	call   0x140005558
   140003fcf:	mov    rcx,rax
   140003fd2:	mov    edx,0x2974
   140003fd7:	mov    rax,QWORD PTR [rsp+0xa0]
   140003fdf:	mov    r8d,DWORD PTR [rax+rbx*4]
   140003fe3:	call   0x14000499c
   140003fe8:	mov    cl,bpl
   140003feb:	call   0x140003e50
   140003ff0:	mov    edx,DWORD PTR [rsp+0x98]
   140003ff7:	inc    ebx
   140003ff9:	cmp    ebx,edx
   140003ffb:	jb     0x140003fae
   140003ffd:	xor    ecx,ecx
   140003fff:	call   QWORD PTR [rip+0x205b]        # 0x140006060
   140004005:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000400d:	xor    r9d,r9d
   140004010:	mov    rcx,QWORD PTR [rsp+0xa0]
   140004018:	xor    r8d,r8d
   14000401b:	call   QWORD PTR [rip+0x2087]        # 0x1400060a8
   140004021:	mov    rbx,QWORD PTR [rsp+0x90]
   140004029:	add    rsp,0x70
   14000402d:	pop    rdi
   14000402e:	pop    rsi
   14000402f:	pop    rbp
   140004030:	ret    
   140004031:	int3   
   140004032:	int3   
   140004033:	int3   
   140004034:	int3   
   140004035:	int3   
   140004036:	int3   
   140004037:	int3   
   140004038:	mov    QWORD PTR [rsp+0x18],rbx
   14000403d:	push   rbp
   14000403e:	push   rsi
   14000403f:	push   rdi
   140004040:	push   r12
   140004042:	push   r13
   140004044:	push   r14
   140004046:	push   r15
   140004048:	lea    rbp,[rsp-0x20]
   14000404d:	sub    rsp,0x120
   140004054:	mov    rax,QWORD PTR [rip+0x4fad]        # 0x140009008
   14000405b:	xor    rax,rsp
   14000405e:	mov    QWORD PTR [rbp+0x10],rax
   140004062:	xor    r9d,r9d
   140004065:	mov    QWORD PTR [rsp+0x60],rdx
   14000406a:	mov    DWORD PTR [rsp+0x58],ecx
   14000406e:	xor    r8d,r8d
   140004071:	xor    ecx,ecx
   140004073:	lea    ebx,[r9+0x1]
   140004077:	mov    edx,ebx
   140004079:	call   QWORD PTR [rip+0x20c1]        # 0x140006140
   14000407f:	lea    rdx,[rip+0x286e]        # 0x1400068f4
   140004086:	xor    ecx,ecx
   140004088:	call   QWORD PTR [rip+0x2332]        # 0x1400063c0
   14000408e:	xor    ecx,ecx
   140004090:	call   QWORD PTR [rip+0x2102]        # 0x140006198
   140004096:	mov    ecx,ebx
   140004098:	call   0x140005558
   14000409d:	mov    rcx,rax
   1400040a0:	mov    rdi,rax
   1400040a3:	call   QWORD PTR [rip+0x22d7]        # 0x140006380
   1400040a9:	mov    ecx,eax
   1400040ab:	call   QWORD PTR [rip+0x22df]        # 0x140006390
   1400040b1:	xor    esi,esi
   1400040b3:	cmp    rax,0xffffffffffffffff
   1400040b7:	je     0x1400041b4
   1400040bd:	mov    rdx,rax
   1400040c0:	lea    rcx,[rsp+0x50]
   1400040c5:	call   0x14000467c
   1400040ca:	test   eax,eax
   1400040cc:	jne    0x1400041b4
   1400040d2:	cmp    DWORD PTR [rsp+0x50],esi
   1400040d6:	jne    0x1400041b4
   1400040dc:	lea    r8d,[rbx+0x4f]
   1400040e0:	lea    rdx,[rsp+0x70]
   1400040e5:	lea    rcx,[rip+0x280c]        # 0x1400068f8
   1400040ec:	call   QWORD PTR [rip+0x20b6]        # 0x1400061a8
   1400040f2:	mov    ecx,ebx
   1400040f4:	mov    DWORD PTR [rsp+0x50],ebx
   1400040f8:	test   eax,eax
   1400040fa:	je     0x140004114
   1400040fc:	mov    r8d,eax
   1400040ff:	lea    rdx,[rsp+0x70]
   140004104:	lea    rcx,[rsp+0x50]
   140004109:	call   0x1400046fc
   14000410e:	mov    ecx,DWORD PTR [rsp+0x50]
   140004112:	jmp    0x140004116
   140004114:	mov    eax,esi
   140004116:	test   eax,eax
   140004118:	je     0x14000415f
   14000411a:	lea    rdx,[rsp+0x40]
   14000411f:	mov    rcx,rdi
   140004122:	call   QWORD PTR [rip+0x22a8]        # 0x1400063d0
   140004128:	test   eax,eax
   14000412a:	jne    0x1400041b4
   140004130:	cmp    QWORD PTR [rsp+0x40],rsi
   140004135:	jne    0x1400041b4
   140004137:	mov    rcx,rdi
   14000413a:	call   QWORD PTR [rip+0x2240]        # 0x140006380
   140004140:	mov    ecx,eax
   140004142:	mov    edx,0x20000
   140004147:	call   QWORD PTR [rip+0x223b]        # 0x140006388
   14000414d:	lea    rdx,[rip+0x2800]        # 0x140006954
   140004154:	mov    rcx,rdi
   140004157:	call   QWORD PTR [rip+0x220b]        # 0x140006368
   14000415d:	jmp    0x1400041b4
   14000415f:	cmp    ecx,0xfde9
   140004165:	jne    0x1400041b4
   140004167:	lea    rdx,[rsp+0x40]
   14000416c:	mov    rcx,rdi
   14000416f:	call   QWORD PTR [rip+0x225b]        # 0x1400063d0
   140004175:	test   eax,eax
   140004177:	jne    0x1400041b4
   140004179:	cmp    QWORD PTR [rsp+0x40],rsi
   14000417e:	jne    0x1400041b4
   140004180:	mov    rcx,rdi
   140004183:	call   QWORD PTR [rip+0x21f7]        # 0x140006380
   140004189:	mov    ecx,eax
   14000418b:	mov    edx,0x8000
   140004190:	call   QWORD PTR [rip+0x21f2]        # 0x140006388
   140004196:	mov    rcx,rdi
   140004199:	call   QWORD PTR [rip+0x21e1]        # 0x140006380
   14000419f:	mov    r8d,0x3
   1400041a5:	lea    rdx,[rip+0x27ac]        # 0x140006958
   1400041ac:	mov    ecx,eax
   1400041ae:	call   QWORD PTR [rip+0x21e4]        # 0x140006398
   1400041b4:	mov    r8d,DWORD PTR [rsp+0x58]
   1400041b9:	lea    rax,[rip+0x24b8]        # 0x140006678
   1400041c0:	mov    QWORD PTR [rbp-0x68],rax
   1400041c4:	lea    rax,[rip+0x24c5]        # 0x140006690
   1400041cb:	mov    QWORD PTR [rbp-0x70],rax
   1400041cf:	lea    rax,[rip+0x24d2]        # 0x1400066a8
   1400041d6:	mov    QWORD PTR [rbp-0x60],rax
   1400041da:	lea    rax,[rip+0x24df]        # 0x1400066c0
   1400041e1:	mov    QWORD PTR [rbp-0x58],rax
   1400041e5:	lea    rax,[rip+0x24ec]        # 0x1400066d8
   1400041ec:	mov    QWORD PTR [rbp-0x50],rax
   1400041f0:	lea    rax,[rip+0x2501]        # 0x1400066f8
   1400041f7:	mov    QWORD PTR [rbp-0x48],rax
   1400041fb:	lea    rax,[rip+0x250e]        # 0x140006710
   140004202:	mov    QWORD PTR [rbp-0x40],rax
   140004206:	lea    rcx,[rip+0x2533]        # 0x140006740
   14000420d:	mov    QWORD PTR [rbp-0x30],rcx
   140004211:	lea    rax,[rip+0x2508]        # 0x140006720
   140004218:	mov    QWORD PTR [rbp-0x38],rax
   14000421c:	lea    r14,[rip+0x2415]        # 0x140006638
   140004223:	mov    QWORD PTR [rsp+0x70],r14
   140004228:	lea    r15,[rip+0x2411]        # 0x140006640
   14000422f:	mov    QWORD PTR [rsp+0x78],r15
   140004234:	lea    r12,[rip+0x2415]        # 0x140006650
   14000423b:	mov    QWORD PTR [rbp-0x80],r12
   14000423f:	lea    r13,[rip+0x241a]        # 0x140006660
   140004246:	mov    QWORD PTR [rbp-0x78],r13
   14000424a:	lea    rcx,[rip+0x24ff]        # 0x140006750
   140004251:	mov    QWORD PTR [rbp-0x28],rcx
   140004255:	mov    rdi,rsi
   140004258:	mov    QWORD PTR [rsp+0x40],rsi
   14000425d:	mov    QWORD PTR [rsp+0x50],rsi
   140004262:	sub    r8d,ebx
   140004265:	je     0x140004361
   14000426b:	mov    rdx,QWORD PTR [rsp+0x60]
   140004270:	lea    rax,[rsp+0x50]
   140004275:	lea    r9,[rsp+0x40]
   14000427a:	mov    QWORD PTR [rsp+0x20],rax
   14000427f:	lea    rcx,[rsp+0x70]
   140004284:	call   0x140003b90
   140004289:	cmp    eax,0x667
   14000428e:	jne    0x1400042ad
   140004290:	mov    ecx,ebx
   140004292:	call   0x140005558
   140004297:	mov    rcx,rax
   14000429a:	mov    edx,0x28aa
   14000429f:	call   0x14000499c
   1400042a4:	mov    ecx,ebx
   1400042a6:	call   QWORD PTR [rip+0x210c]        # 0x1400063b8
   1400042ac:	int3   
   1400042ad:	mov    r8d,0x2e4
   1400042b3:	cmp    eax,r8d
   1400042b6:	jne    0x14000430c
   1400042b8:	mov    QWORD PTR [rsp+0x30],rdi
   1400042bd:	lea    rax,[rsp+0x40]
   1400042c2:	mov    DWORD PTR [rsp+0x28],edi
   1400042c6:	xor    r9d,r9d
   1400042c9:	xor    edx,edx
   1400042cb:	mov    QWORD PTR [rsp+0x20],rax
   1400042d0:	mov    ecx,0x1100
   1400042d5:	mov    QWORD PTR [rsp+0x40],rdi
   1400042da:	call   QWORD PTR [rip+0x1eb0]        # 0x140006190
   1400042e0:	test   eax,eax
   1400042e2:	je     0x1400042f8
   1400042e4:	mov    ecx,ebx
   1400042e6:	call   0x140005558
   1400042eb:	mov    rdx,QWORD PTR [rsp+0x40]
   1400042f0:	mov    rcx,rax
   1400042f3:	call   0x140004788
   1400042f8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400042fd:	call   QWORD PTR [rip+0x1e55]        # 0x140006158
   140004303:	mov    ecx,ebx
   140004305:	call   QWORD PTR [rip+0x20ad]        # 0x1400063b8
   14000430b:	int3   
   14000430c:	test   eax,eax
   14000430e:	je     0x140004341
   140004310:	mov    ecx,ebx
   140004312:	call   0x140005558
   140004317:	mov    rcx,rax
   14000431a:	mov    edx,0x28a9
   14000431f:	call   0x14000499c
   140004324:	mov    ecx,ebx
   140004326:	call   0x140005558
   14000432b:	mov    rcx,rax
   14000432e:	mov    edx,0x28aa
   140004333:	call   0x14000499c
   140004338:	mov    ecx,ebx
   14000433a:	call   QWORD PTR [rip+0x2078]        # 0x1400063b8
   140004340:	int3   
   140004341:	mov    rax,QWORD PTR [rbp-0x38]
   140004345:	mov    r13,QWORD PTR [rbp-0x78]
   140004349:	mov    r12,QWORD PTR [rbp-0x80]
   14000434d:	mov    r15,QWORD PTR [rsp+0x78]
   140004352:	mov    r14,QWORD PTR [rsp+0x70]
   140004357:	mov    rdi,QWORD PTR [rsp+0x40]
   14000435c:	mov    rsi,QWORD PTR [rsp+0x50]
   140004361:	test   r14,r14
   140004364:	mov    ecx,ebx
   140004366:	sete   BYTE PTR [rsp+0x48]
   14000436b:	test   rax,rax
   14000436e:	sete   BYTE PTR [rsp+0x49]
   140004373:	call   0x140005558
   140004378:	mov    rcx,rax
   14000437b:	mov    edx,0x2710
   140004380:	call   0x14000499c
   140004385:	test   r14,r14
   140004388:	je     0x140004651
   14000438e:	xor    r14d,r14d
   140004391:	test   r15,r15
   140004394:	jne    0x1400043ca
   140004396:	mov    QWORD PTR [rsp+0x40],r14
   14000439b:	call   0x1400010cc
   1400043a0:	test   al,al
   1400043a2:	je     0x1400043dd
   1400043a4:	lea    edx,[r14+0x2]
   1400043a8:	lea    rcx,[rsp+0x40]
   1400043ad:	call   0x1400019f0
   1400043b2:	mov    ebx,eax
   1400043b4:	test   eax,eax
   1400043b6:	jne    0x14000441c
   1400043b8:	mov    rdx,rdi
   1400043bb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400043c0:	mov    rcx,rdi
   1400043c3:	call   0x140001138
   1400043c8:	jmp    0x14000440c
   1400043ca:	test   r12,r12
   1400043cd:	jne    0x14000443e
   1400043cf:	mov    QWORD PTR [rsp+0x40],r14
   1400043d4:	call   0x1400010cc
   1400043d9:	test   al,al
   1400043db:	jne    0x1400043e7
   1400043dd:	mov    ebx,0x1f
   1400043e2:	jmp    0x1400045d9
   1400043e7:	mov    edx,0x2
   1400043ec:	lea    rcx,[rsp+0x40]
   1400043f1:	call   0x1400019f0
   1400043f6:	mov    ebx,eax
   1400043f8:	test   eax,eax
   1400043fa:	jne    0x14000441c
   1400043fc:	mov    rdx,rdi
   1400043ff:	mov    rdi,QWORD PTR [rsp+0x40]
   140004404:	mov    rcx,rdi
   140004407:	call   0x1400012dc
   14000440c:	mov    ebx,eax
   14000440e:	test   rdi,rdi
   140004411:	je     0x14000441c
   140004413:	mov    rcx,rdi
   140004416:	call   QWORD PTR [rip+0x1d3c]        # 0x140006158
   14000441c:	mov    rcx,QWORD PTR [rip+0x51ad]        # 0x1400095d0
   140004423:	test   rcx,rcx
   140004426:	je     0x1400045d9
   14000442c:	call   QWORD PTR [rip+0x1d4e]        # 0x140006180
   140004432:	mov    QWORD PTR [rip+0x5197],r14        # 0x1400095d0
   140004439:	jmp    0x1400045d9
   14000443e:	test   r13,r13
   140004441:	jne    0x14000447d
   140004443:	call   QWORD PTR [rip+0x1bb7]        # 0x140006000
   140004449:	test   eax,eax
   14000444b:	jne    0x140004464
   14000444d:	mov    edx,0x65b
   140004452:	mov    ecx,0x290e
   140004457:	xor    r8d,r8d
   14000445a:	call   0x140002370
   14000445f:	jmp    0x14000466c
   140004464:	mov    ecx,ebx
   140004466:	call   0x140005558
   14000446b:	mov    edx,0x290f
   140004470:	mov    rcx,rax
   140004473:	call   0x14000499c
   140004478:	jmp    0x14000466c
   14000447d:	cmp    QWORD PTR [rbp-0x70],r14
   140004481:	jne    0x1400044ac
   140004483:	xor    edx,edx
   140004485:	xor    r8d,r8d
   140004488:	lea    ecx,[rdx+0x2]
   14000448b:	call   QWORD PTR [rip+0x1b7f]        # 0x140006010
   140004491:	test   eax,eax
   140004493:	je     0x14000449e
   140004495:	mov    edx,eax
   140004497:	mov    ecx,0x2919
   14000449c:	jmp    0x140004457
   14000449e:	mov    ecx,ebx
   1400044a0:	call   0x140005558
   1400044a5:	mov    edx,0x2918
   1400044aa:	jmp    0x140004470
   1400044ac:	cmp    QWORD PTR [rbp-0x68],r14
   1400044b0:	jne    0x1400044bc
   1400044b2:	call   0x140002e5c
   1400044b7:	jmp    0x14000466c
   1400044bc:	cmp    QWORD PTR [rbp-0x60],r14
   1400044c0:	jne    0x140004527
   1400044c2:	mov    QWORD PTR [rsp+0x40],r14
   1400044c7:	call   0x1400010cc
   1400044cc:	test   al,al
   1400044ce:	je     0x14000466c
   1400044d4:	mov    edx,0x2
   1400044d9:	lea    rcx,[rsp+0x40]
   1400044de:	call   0x1400019f0
   1400044e3:	test   eax,eax
   1400044e5:	jne    0x140004505
   1400044e7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400044ec:	mov    rdx,rdi
   1400044ef:	mov    rcx,rbx
   1400044f2:	call   0x140001458
   1400044f7:	test   rbx,rbx
   1400044fa:	je     0x140004505
   1400044fc:	mov    rcx,rbx
   1400044ff:	call   QWORD PTR [rip+0x1c53]        # 0x140006158
   140004505:	mov    rcx,QWORD PTR [rip+0x50c4]        # 0x1400095d0
   14000450c:	test   rcx,rcx
   14000450f:	je     0x14000466c
   140004515:	call   QWORD PTR [rip+0x1c65]        # 0x140006180
   14000451b:	mov    QWORD PTR [rip+0x50ae],r14        # 0x1400095d0
   140004522:	jmp    0x14000466c
   140004527:	cmp    QWORD PTR [rbp-0x58],r14
   14000452b:	jne    0x140004567
   14000452d:	mov    QWORD PTR [rsp+0x40],r14
   140004532:	call   0x1400010cc
   140004537:	test   al,al
   140004539:	je     0x14000466c
   14000453f:	mov    edx,0x2
   140004544:	lea    rcx,[rsp+0x40]
   140004549:	call   0x1400019f0
   14000454e:	test   eax,eax
   140004550:	jne    0x140004505
   140004552:	mov    rbx,QWORD PTR [rsp+0x40]
   140004557:	mov    r8,rsi
   14000455a:	mov    rcx,rbx
   14000455d:	mov    rdx,rdi
   140004560:	call   0x140001750
   140004565:	jmp    0x1400044f7
   140004567:	cmp    QWORD PTR [rbp-0x30],r14
   14000456b:	jne    0x140004599
   14000456d:	mov    edx,0x17
   140004572:	mov    QWORD PTR [rsp+0x40],r14
   140004577:	lea    rcx,[rsp+0x40]
   14000457c:	call   0x1400019f0
   140004581:	mov    ebx,eax
   140004583:	test   eax,eax
   140004585:	jne    0x1400045d9
   140004587:	mov    rdx,rdi
   14000458a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000458f:	mov    rcx,rdi
   140004592:	call   0x140001a8c
   140004597:	jmp    0x1400045c9
   140004599:	cmp    QWORD PTR [rbp-0x28],r14
   14000459d:	jne    0x1400045e0
   14000459f:	mov    edx,0x17
   1400045a4:	mov    QWORD PTR [rsp+0x40],r14
   1400045a9:	lea    rcx,[rsp+0x40]
   1400045ae:	call   0x1400019f0
   1400045b3:	mov    ebx,eax
   1400045b5:	test   eax,eax
   1400045b7:	jne    0x1400045d9
   1400045b9:	mov    rdx,rdi
   1400045bc:	mov    rdi,QWORD PTR [rsp+0x40]
   1400045c1:	mov    rcx,rdi
   1400045c4:	call   0x140001c28
   1400045c9:	mov    ebx,eax
   1400045cb:	test   rdi,rdi
   1400045ce:	je     0x1400045d9
   1400045d0:	mov    rcx,rdi
   1400045d3:	call   QWORD PTR [rip+0x1b7f]        # 0x140006158
   1400045d9:	test   ebx,ebx
   1400045db:	sete   bl
   1400045de:	jmp    0x140004651
   1400045e0:	cmp    QWORD PTR [rbp-0x50],r14
   1400045e4:	jne    0x14000461e
   1400045e6:	mov    edx,0x17
   1400045eb:	mov    QWORD PTR [rsp+0x40],r14
   1400045f0:	lea    rcx,[rsp+0x40]
   1400045f5:	call   0x1400019f0
   1400045fa:	test   eax,eax
   1400045fc:	jne    0x14000466c
   1400045fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140004603:	mov    rdx,rdi
   140004606:	mov    rcx,rbx
   140004609:	call   0x140001d98
   14000460e:	test   rbx,rbx
   140004611:	je     0x14000466c
   140004613:	mov    rcx,rbx
   140004616:	call   QWORD PTR [rip+0x1b3c]        # 0x140006158
   14000461c:	jmp    0x14000466c
   14000461e:	cmp    QWORD PTR [rbp-0x48],r14
   140004622:	jne    0x140004655
   140004624:	mov    edx,0x17
   140004629:	mov    QWORD PTR [rsp+0x40],r14
   14000462e:	lea    rcx,[rsp+0x40]
   140004633:	call   0x1400019f0
   140004638:	test   eax,eax
   14000463a:	jne    0x14000466c
   14000463c:	mov    rbx,QWORD PTR [rsp+0x40]
   140004641:	mov    r8,rsi
   140004644:	mov    rcx,rbx
   140004647:	mov    rdx,rdi
   14000464a:	call   0x14000208c
   14000464f:	jmp    0x14000460e
   140004651:	test   bl,bl
   140004653:	je     0x14000466c
   140004655:	mov    cl,BYTE PTR [rsp+0x48]
   140004659:	cmp    BYTE PTR [rsp+0x49],r14b
   14000465e:	je     0x140004667
   140004660:	call   0x140003efc
   140004665:	jmp    0x14000466c
   140004667:	call   0x140003e50
   14000466c:	xor    ecx,ecx
   14000466e:	call   QWORD PTR [rip+0x1d44]        # 0x1400063b8
   140004674:	int3   
   140004675:	int3   
   140004676:	int3   
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	mov    QWORD PTR [rsp+0x8],rbx
   140004681:	mov    QWORD PTR [rsp+0x10],rsi
   140004686:	push   rdi
   140004687:	sub    rsp,0x20
   14000468b:	mov    rbx,rcx
   14000468e:	mov    rsi,rdx
   140004691:	mov    rcx,rdx
   140004694:	call   QWORD PTR [rip+0x1a76]        # 0x140006110
   14000469a:	mov    edi,eax
   14000469c:	test   eax,eax
   14000469e:	jne    0x1400046b2
   1400046a0:	call   QWORD PTR [rip+0x1a4a]        # 0x1400060f0
   1400046a6:	test   eax,eax
   1400046a8:	je     0x1400046b2
   1400046aa:	call   QWORD PTR [rip+0x1a40]        # 0x1400060f0
   1400046b0:	jmp    0x1400046e5
   1400046b2:	btr    edi,0xf
   1400046b6:	cmp    edi,0x2
   1400046b9:	jne    0x1400046e0
   1400046bb:	lea    rdx,[rsp+0x40]
   1400046c0:	mov    rcx,rsi
   1400046c3:	call   QWORD PTR [rip+0x19ff]        # 0x1400060c8
   1400046c9:	test   eax,eax
   1400046cb:	jne    0x1400046d8
   1400046cd:	call   QWORD PTR [rip+0x1a1d]        # 0x1400060f0
   1400046d3:	cmp    eax,0x6
   1400046d6:	je     0x1400046e0
   1400046d8:	mov    DWORD PTR [rbx],0x1
   1400046de:	jmp    0x1400046e3
   1400046e0:	and    DWORD PTR [rbx],0x0
   1400046e3:	xor    eax,eax
   1400046e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046ea:	mov    rsi,QWORD PTR [rsp+0x38]
   1400046ef:	add    rsp,0x20
   1400046f3:	pop    rdi
   1400046f4:	ret    
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	mov    QWORD PTR [rsp+0x18],rbx
   140004701:	push   rdi
   140004702:	sub    rsp,0x20
   140004706:	mov    rbx,rdx
   140004709:	mov    rdi,rcx
   14000470c:	cmp    r8d,0x4f
   140004710:	jae    0x140004773
   140004712:	lea    rdx,[rip+0x21ff]        # 0x140006918
   140004719:	mov    rcx,rbx
   14000471c:	call   QWORD PTR [rip+0x1c3e]        # 0x140006360
   140004722:	test   eax,eax
   140004724:	jne    0x14000472d
   140004726:	mov    eax,0x1
   14000472b:	jmp    0x140004775
   14000472d:	lea    rdx,[rip+0x21f4]        # 0x140006928
   140004734:	mov    rcx,rbx
   140004737:	call   QWORD PTR [rip+0x1c23]        # 0x140006360
   14000473d:	test   eax,eax
   14000473f:	jne    0x140004745
   140004741:	and    DWORD PTR [rdi],eax
   140004743:	jmp    0x140004773
   140004745:	lea    rdx,[rip+0x21ec]        # 0x140006938
   14000474c:	mov    rcx,rbx
   14000474f:	call   QWORD PTR [rip+0x1c0b]        # 0x140006360
   140004755:	test   eax,eax
   140004757:	je     0x14000476d
   140004759:	lea    rdx,[rip+0x21e8]        # 0x140006948
   140004760:	mov    rcx,rbx
   140004763:	call   QWORD PTR [rip+0x1bf7]        # 0x140006360
   140004769:	test   eax,eax
   14000476b:	jne    0x140004773
   14000476d:	mov    DWORD PTR [rdi],0xfde9
   140004773:	xor    eax,eax
   140004775:	mov    rbx,QWORD PTR [rsp+0x40]
   14000477a:	add    rsp,0x20
   14000477e:	pop    rdi
   14000477f:	ret    
   140004780:	int3   
   140004781:	int3   
   140004782:	int3   
   140004783:	int3   
   140004784:	int3   
   140004785:	int3   
   140004786:	int3   
   140004787:	int3   
   140004788:	mov    QWORD PTR [rsp+0x18],rbx
   14000478d:	mov    QWORD PTR [rsp+0x20],rbp
   140004792:	push   rsi
   140004793:	push   rdi
   140004794:	push   r12
   140004796:	push   r14
   140004798:	push   r15
   14000479a:	sub    rsp,0x100
   1400047a1:	mov    rax,QWORD PTR [rip+0x4860]        # 0x140009008
   1400047a8:	xor    rax,rsp
   1400047ab:	mov    QWORD PTR [rsp+0xf0],rax
   1400047b3:	xor    r14d,r14d
   1400047b6:	mov    r15,rdx
   1400047b9:	mov    rdi,rcx
   1400047bc:	xor    esi,esi
   1400047be:	lea    r12d,[r14+0x1]
   1400047c2:	mov    ebx,r12d
   1400047c5:	mov    DWORD PTR [rsp+0x40],ebx
   1400047c9:	call   QWORD PTR [rip+0x1ba9]        # 0x140006378
   1400047cf:	mov    rcx,rdi
   1400047d2:	call   QWORD PTR [rip+0x1ba8]        # 0x140006380
   1400047d8:	mov    ecx,eax
   1400047da:	call   QWORD PTR [rip+0x1bb0]        # 0x140006390
   1400047e0:	cmp    rax,0xffffffffffffffff
   1400047e4:	je     0x1400047ff
   1400047e6:	mov    rdx,rax
   1400047e9:	lea    rcx,[rsp+0x40]
   1400047ee:	call   0x14000467c
   1400047f3:	mov    ebx,DWORD PTR [rsp+0x40]
   1400047f7:	test   eax,eax
   1400047f9:	jne    0x1400047ff
   1400047fb:	test   ebx,ebx
   1400047fd:	je     0x140004818
   1400047ff:	mov    rcx,rdi
   140004802:	call   QWORD PTR [rip+0x1b78]        # 0x140006380
   140004808:	mov    ecx,eax
   14000480a:	mov    edx,0x20000
   14000480f:	call   QWORD PTR [rip+0x1b73]        # 0x140006388
   140004815:	mov    r14d,eax
   140004818:	mov    r8d,0x50
   14000481e:	lea    rdx,[rsp+0x50]
   140004823:	lea    rcx,[rip+0x20ce]        # 0x1400068f8
   14000482a:	call   QWORD PTR [rip+0x1978]        # 0x1400061a8
   140004830:	mov    DWORD PTR [rsp+0x40],r12d
   140004835:	test   eax,eax
   140004837:	je     0x140004854
   140004839:	mov    r8d,eax
   14000483c:	lea    rdx,[rsp+0x50]
   140004841:	lea    rcx,[rsp+0x40]
   140004846:	call   0x1400046fc
   14000484b:	mov    r12d,DWORD PTR [rsp+0x40]
   140004850:	mov    ebp,eax
   140004852:	jmp    0x140004856
   140004854:	xor    ebp,ebp
   140004856:	test   ebx,ebx
   140004858:	jne    0x14000492b
   14000485e:	lea    edx,[rbx+0xd]
   140004861:	mov    rcx,r15
   140004864:	call   QWORD PTR [rip+0x1aee]        # 0x140006358
   14000486a:	mov    rcx,rdi
   14000486d:	test   rax,rax
   140004870:	je     0x14000487f
   140004872:	call   QWORD PTR [rip+0x1b08]        # 0x140006380
   140004878:	mov    edx,0x8000
   14000487d:	jmp    0x140004897
   14000487f:	mov    eax,ebp
   140004881:	neg    eax
   140004883:	sbb    ebx,ebx
   140004885:	and    ebx,0x1c000
   14000488b:	call   QWORD PTR [rip+0x1aef]        # 0x140006380
   140004891:	lea    edx,[rbx+0x4000]
   140004897:	mov    ecx,eax
   140004899:	call   QWORD PTR [rip+0x1ae9]        # 0x140006388
   14000489f:	mov    r14d,eax
   1400048a2:	test   ebp,ebp
   1400048a4:	jne    0x14000492b
   1400048aa:	and    QWORD PTR [rsp+0x38],rsi
   1400048af:	or     r9d,0xffffffff
   1400048b3:	and    QWORD PTR [rsp+0x30],rsi
   1400048b8:	mov    r8,r15
   1400048bb:	and    DWORD PTR [rsp+0x28],esi
   1400048bf:	xor    edx,edx
   1400048c1:	and    QWORD PTR [rsp+0x20],rsi
   1400048c6:	mov    ecx,r12d
   1400048c9:	call   QWORD PTR [rip+0x1969]        # 0x140006238
   1400048cf:	movsxd rbx,eax
   1400048d2:	test   eax,eax
   1400048d4:	je     0x14000493e
   1400048d6:	mov    rdx,rbx
   1400048d9:	lea    ecx,[rbp+0x40]
   1400048dc:	call   QWORD PTR [rip+0x186e]        # 0x140006150
   1400048e2:	mov    rsi,rax
   1400048e5:	test   rax,rax
   1400048e8:	je     0x14000493e
   1400048ea:	and    QWORD PTR [rsp+0x38],0x0
   1400048f0:	or     r9d,0xffffffff
   1400048f4:	and    QWORD PTR [rsp+0x30],0x0
   1400048fa:	mov    r8,r15
   1400048fd:	mov    DWORD PTR [rsp+0x28],ebx
   140004901:	xor    edx,edx
   140004903:	mov    ecx,r12d
   140004906:	mov    QWORD PTR [rsp+0x20],rax
   14000490b:	call   QWORD PTR [rip+0x1927]        # 0x140006238
   140004911:	mov    rcx,rdi
   140004914:	call   QWORD PTR [rip+0x1a66]        # 0x140006380
   14000491a:	lea    r8d,[rbx-0x1]
   14000491e:	mov    rdx,rsi
   140004921:	mov    ecx,eax
   140004923:	call   QWORD PTR [rip+0x1a6f]        # 0x140006398
   140004929:	jmp    0x14000493e
   14000492b:	mov    r8,r15
   14000492e:	lea    rdx,[rip+0x202b]        # 0x140006960
   140004935:	mov    rcx,rdi
   140004938:	call   QWORD PTR [rip+0x1a2a]        # 0x140006368
   14000493e:	mov    rcx,rdi
   140004941:	call   QWORD PTR [rip+0x1a31]        # 0x140006378
   140004947:	mov    rcx,rdi
   14000494a:	call   QWORD PTR [rip+0x1a30]        # 0x140006380
   140004950:	mov    ecx,eax
   140004952:	mov    edx,r14d
   140004955:	call   QWORD PTR [rip+0x1a2d]        # 0x140006388
   14000495b:	test   rsi,rsi
   14000495e:	je     0x140004969
   140004960:	mov    rcx,rsi
   140004963:	call   QWORD PTR [rip+0x17ef]        # 0x140006158
   140004969:	mov    rcx,QWORD PTR [rsp+0xf0]
   140004971:	xor    rcx,rsp
   140004974:	call   0x140004f50
   140004979:	lea    r11,[rsp+0x100]
   140004981:	mov    rbx,QWORD PTR [r11+0x40]
   140004985:	mov    rbp,QWORD PTR [r11+0x48]
   140004989:	mov    rsp,r11
   14000498c:	pop    r15
   14000498e:	pop    r14
   140004990:	pop    r12
   140004992:	pop    rdi
   140004993:	pop    rsi
   140004994:	ret    
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	mov    DWORD PTR [rsp+0x10],edx
   1400049a0:	mov    r11,rsp
   1400049a3:	mov    QWORD PTR [r11+0x18],r8
   1400049a7:	mov    QWORD PTR [r11+0x20],r9
   1400049ab:	push   rbx
   1400049ac:	sub    rsp,0x50
   1400049b0:	lea    rax,[r11+0x18]
   1400049b4:	mov    rbx,rcx
   1400049b7:	mov    QWORD PTR [r11-0x10],rax
   1400049bb:	mov    r8d,edx
   1400049be:	mov    rdx,QWORD PTR [rip+0x4c13]        # 0x1400095d8
   1400049c5:	lea    rax,[r11-0x10]
   1400049c9:	mov    QWORD PTR [r11-0x28],rax
   1400049cd:	xor    r9d,r9d
   1400049d0:	and    DWORD PTR [rsp+0x28],0x0
   1400049d5:	lea    rax,[r11-0x18]
   1400049d9:	mov    ecx,0x900
   1400049de:	mov    QWORD PTR [r11-0x38],rax
   1400049e2:	call   QWORD PTR [rip+0x17a8]        # 0x140006190
   1400049e8:	test   eax,eax
   1400049ea:	je     0x140004a04
   1400049ec:	mov    rdx,QWORD PTR [rsp+0x40]
   1400049f1:	mov    rcx,rbx
   1400049f4:	call   0x140004788
   1400049f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400049fe:	call   QWORD PTR [rip+0x1754]        # 0x140006158
   140004a04:	add    rsp,0x50
   140004a08:	pop    rbx
   140004a09:	ret    
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	movzx  edx,cx
   140004a13:	cmp    cx,0x34
   140004a17:	lea    rcx,[rip+0x2102]        # 0x140006b20
   140004a1e:	ja     0x140004a25
   140004a20:	movzx  eax,dx
   140004a23:	jmp    0x140004a55
   140004a25:	mov    r8d,0x35
   140004a2b:	mov    eax,0xf9
   140004a30:	mov    r9d,r8d
   140004a33:	cmp    dx,ax
   140004a36:	je     0x140004a52
   140004a38:	inc    r9
   140004a3b:	inc    r8d
   140004a3e:	mov    rax,r9
   140004a41:	shl    rax,0x4
   140004a45:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
   140004a4a:	test   ax,ax
   140004a4d:	jne    0x140004a33
   140004a4f:	xor    eax,eax
   140004a51:	ret    
   140004a52:	movsxd rax,r8d
   140004a55:	add    rax,rax
   140004a58:	mov    rax,QWORD PTR [rcx+rax*8]
   140004a5c:	ret    
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	mov    QWORD PTR [rsp+0x10],rbx
   140004a69:	push   rbp
   140004a6a:	mov    rbp,rsp
   140004a6d:	sub    rsp,0x80
   140004a74:	mov    rax,QWORD PTR [rip+0x458d]        # 0x140009008
   140004a7b:	xor    rax,rsp
   140004a7e:	mov    QWORD PTR [rbp-0x8],rax
   140004a82:	xor    ebx,ebx
   140004a84:	mov    WORD PTR [rbp-0xc],0x500
   140004a8a:	lea    rax,[rbp-0x18]
   140004a8e:	mov    DWORD PTR [rbp-0x10],ebx
   140004a91:	mov    QWORD PTR [rsp+0x50],rax
   140004a96:	mov    r9d,ecx
   140004a99:	mov    DWORD PTR [rsp+0x48],ebx
   140004a9d:	lea    rcx,[rbp-0x10]
   140004aa1:	mov    DWORD PTR [rsp+0x40],ebx
   140004aa5:	lea    r8d,[rbx+0x20]
   140004aa9:	mov    DWORD PTR [rsp+0x38],ebx
   140004aad:	mov    dl,0x2
   140004aaf:	mov    DWORD PTR [rsp+0x30],ebx
   140004ab3:	mov    DWORD PTR [rsp+0x28],ebx
   140004ab7:	mov    DWORD PTR [rsp+0x20],ebx
   140004abb:	call   QWORD PTR [rip+0x17d7]        # 0x140006298
   140004ac1:	mov    DWORD PTR [rbp-0x20],eax
   140004ac4:	test   eax,eax
   140004ac6:	je     0x140004af2
   140004ac8:	mov    rdx,QWORD PTR [rbp-0x18]
   140004acc:	lea    r8,[rbp-0x20]
   140004ad0:	xor    ecx,ecx
   140004ad2:	call   QWORD PTR [rip+0x17d0]        # 0x1400062a8
   140004ad8:	neg    eax
   140004ada:	sbb    ecx,ecx
   140004adc:	and    DWORD PTR [rbp-0x20],ecx
   140004adf:	mov    rcx,QWORD PTR [rbp-0x18]
   140004ae3:	call   QWORD PTR [rip+0x17b7]        # 0x1400062a0
   140004ae9:	cmp    DWORD PTR [rbp-0x20],ebx
   140004aec:	je     0x140004af2
   140004aee:	mov    al,0x1
   140004af0:	jmp    0x140004af4
   140004af2:	xor    al,al
   140004af4:	mov    rcx,QWORD PTR [rbp-0x8]
   140004af8:	xor    rcx,rsp
   140004afb:	call   0x140004f50
   140004b00:	mov    rbx,QWORD PTR [rsp+0x98]
   140004b08:	add    rsp,0x80
   140004b0f:	pop    rbp
   140004b10:	ret    
   140004b11:	int3   
   140004b12:	int3   
   140004b13:	int3   
   140004b14:	int3   
   140004b15:	int3   
   140004b16:	int3   
   140004b17:	int3   
   140004b18:	rex push rbx
   140004b1a:	sub    rsp,0x20
   140004b1e:	mov    ecx,0x220
   140004b23:	call   0x140004a64
   140004b28:	xor    ebx,ebx
   140004b2a:	test   al,al
   140004b2c:	jne    0x140004b3c
   140004b2e:	mov    ecx,0x22c
   140004b33:	call   0x140004a64
   140004b38:	test   al,al
   140004b3a:	je     0x140004b41
   140004b3c:	mov    ebx,0x1
   140004b41:	mov    al,bl
   140004b43:	add    rsp,0x20
   140004b47:	pop    rbx
   140004b48:	ret    
   140004b49:	int3   
   140004b4a:	int3   
   140004b4b:	int3   
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	mov    QWORD PTR [rsp+0x8],rbx
   140004b55:	push   rbp
   140004b56:	mov    rbp,rsp
   140004b59:	sub    rsp,0x80
   140004b60:	mov    rax,QWORD PTR [rip+0x44a1]        # 0x140009008
   140004b67:	xor    rax,rsp
   140004b6a:	mov    QWORD PTR [rbp-0x8],rax
   140004b6e:	xor    ebx,ebx
   140004b70:	mov    WORD PTR [rbp-0xc],0x200
   140004b76:	lea    rax,[rbp-0x18]
   140004b7a:	mov    DWORD PTR [rbp-0x10],ebx
   140004b7d:	mov    QWORD PTR [rsp+0x50],rax
   140004b82:	lea    rcx,[rbp-0x10]
   140004b86:	mov    DWORD PTR [rsp+0x48],ebx
   140004b8a:	xor    r9d,r9d
   140004b8d:	mov    DWORD PTR [rsp+0x40],ebx
   140004b91:	lea    r8d,[rbx+0x1]
   140004b95:	mov    DWORD PTR [rsp+0x38],ebx
   140004b99:	mov    dl,r8b
   140004b9c:	mov    DWORD PTR [rsp+0x30],ebx
   140004ba0:	mov    DWORD PTR [rsp+0x28],ebx
   140004ba4:	mov    DWORD PTR [rsp+0x20],ebx
   140004ba8:	call   QWORD PTR [rip+0x16ea]        # 0x140006298
   140004bae:	mov    DWORD PTR [rbp-0x20],eax
   140004bb1:	test   eax,eax
   140004bb3:	je     0x140004bdf
   140004bb5:	mov    rdx,QWORD PTR [rbp-0x18]
   140004bb9:	lea    r8,[rbp-0x20]
   140004bbd:	xor    ecx,ecx
   140004bbf:	call   QWORD PTR [rip+0x16e3]        # 0x1400062a8
   140004bc5:	neg    eax
   140004bc7:	sbb    ecx,ecx
   140004bc9:	and    DWORD PTR [rbp-0x20],ecx
   140004bcc:	mov    rcx,QWORD PTR [rbp-0x18]
   140004bd0:	call   QWORD PTR [rip+0x16ca]        # 0x1400062a0
   140004bd6:	cmp    DWORD PTR [rbp-0x20],ebx
   140004bd9:	je     0x140004bdf
   140004bdb:	mov    al,0x1
   140004bdd:	jmp    0x140004be1
   140004bdf:	xor    al,al
   140004be1:	mov    rcx,QWORD PTR [rbp-0x8]
   140004be5:	xor    rcx,rsp
   140004be8:	call   0x140004f50
   140004bed:	mov    rbx,QWORD PTR [rsp+0x90]
   140004bf5:	add    rsp,0x80
   140004bfc:	pop    rbp
   140004bfd:	ret    
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	int3   
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	sub    rsp,0x28
   140004c14:	mov    eax,0x5a4d
   140004c19:	cmp    WORD PTR [rip+0xffffffffffffb3e0],ax        # 0x140000000
   140004c20:	je     0x140004c26
   140004c22:	xor    eax,eax
   140004c24:	jmp    0x140004c75
   140004c26:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb40f]        # 0x14000003c
   140004c2d:	lea    rax,[rip+0xffffffffffffb3cc]        # 0x140000000
   140004c34:	add    rcx,rax
   140004c37:	cmp    DWORD PTR [rcx],0x4550
   140004c3d:	jne    0x140004c22
   140004c3f:	movzx  eax,WORD PTR [rcx+0x18]
   140004c43:	cmp    eax,0x10b
   140004c48:	je     0x140004c64
   140004c4a:	cmp    eax,0x20b
   140004c4f:	jne    0x140004c22
   140004c51:	xor    eax,eax
   140004c53:	cmp    DWORD PTR [rcx+0x84],0xe
   140004c5a:	jbe    0x140004c75
   140004c5c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004c62:	jmp    0x140004c72
   140004c64:	xor    eax,eax
   140004c66:	cmp    DWORD PTR [rcx+0x74],0xe
   140004c6a:	jbe    0x140004c75
   140004c6c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004c72:	setne  al
   140004c75:	mov    ecx,0x1
   140004c7a:	mov    DWORD PTR [rip+0x43c0],eax        # 0x140009040
   140004c80:	call   0x1400052f8
   140004c85:	mov    ecx,eax
   140004c87:	call   QWORD PTR [rip+0x16bb]        # 0x140006348
   140004c8d:	mov    rcx,QWORD PTR [rip+0x1684]        # 0x140006318
   140004c94:	or     rax,0xffffffffffffffff
   140004c98:	mov    QWORD PTR [rip+0x4941],rax        # 0x1400095e0
   140004c9f:	mov    QWORD PTR [rip+0x4942],rax        # 0x1400095e8
   140004ca6:	mov    eax,DWORD PTR [rip+0x4920]        # 0x1400095cc
   140004cac:	mov    DWORD PTR [rcx],eax
   140004cae:	mov    rcx,QWORD PTR [rip+0x172b]        # 0x1400063e0
   140004cb5:	mov    eax,DWORD PTR [rip+0x4905]        # 0x1400095c0
   140004cbb:	mov    DWORD PTR [rcx],eax
   140004cbd:	call   0x140005350
   140004cc2:	cmp    DWORD PTR [rip+0x4337],0x0        # 0x140009000
   140004cc9:	jne    0x140004cd8
   140004ccb:	lea    rcx,[rip+0x67e]        # 0x140005350
   140004cd2:	call   QWORD PTR [rip+0x1658]        # 0x140006330
   140004cd8:	xor    eax,eax
   140004cda:	add    rsp,0x28
   140004cde:	ret    
   140004cdf:	int3   
   140004ce0:	int3   
   140004ce1:	int3   
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	sub    rsp,0x38
   140004cf4:	mov    eax,DWORD PTR [rip+0x48ce]        # 0x1400095c8
   140004cfa:	lea    r8,[rip+0x4337]        # 0x140009038
   140004d01:	mov    r9d,DWORD PTR [rip+0x48bc]        # 0x1400095c4
   140004d08:	lea    rdx,[rip+0x4321]        # 0x140009030
   140004d0f:	mov    DWORD PTR [rip+0x432f],eax        # 0x140009044
   140004d15:	lea    rcx,[rip+0x430c]        # 0x140009028
   140004d1c:	lea    rax,[rip+0x4321]        # 0x140009044
   140004d23:	mov    QWORD PTR [rsp+0x20],rax
   140004d28:	call   QWORD PTR [rip+0x1672]        # 0x1400063a0
   140004d2e:	mov    DWORD PTR [rip+0x42f8],eax        # 0x14000902c
   140004d34:	add    rsp,0x38
   140004d38:	ret    
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	mov    rax,rsp
   140004d43:	mov    QWORD PTR [rax+0x8],rbx
   140004d47:	mov    QWORD PTR [rax+0x10],rsi
   140004d4b:	mov    QWORD PTR [rax+0x18],rdi
   140004d4f:	mov    QWORD PTR [rax+0x20],r12
   140004d53:	push   r14
   140004d55:	sub    rsp,0x30
   140004d59:	mov    rax,QWORD PTR gs:0x30
   140004d62:	mov    rbx,QWORD PTR [rax+0x8]
   140004d66:	xor    r14d,r14d
   140004d69:	xor    eax,eax
   140004d6b:	lock cmpxchg QWORD PTR [rip+0x487c],rbx        # 0x1400095f0
   140004d74:	je     0x140004d92
   140004d76:	cmp    rax,rbx
   140004d79:	jne    0x140004d85
   140004d7b:	mov    ebx,0x1
   140004d80:	mov    r14d,ebx
   140004d83:	jmp    0x140004d97
   140004d85:	mov    ecx,0x3e8
   140004d8a:	call   QWORD PTR [rip+0x14c8]        # 0x140006258
   140004d90:	jmp    0x140004d69
   140004d92:	mov    ebx,0x1
   140004d97:	mov    eax,DWORD PTR [rip+0x485b]        # 0x1400095f8
   140004d9d:	cmp    eax,ebx
   140004d9f:	jne    0x140004dad
   140004da1:	mov    ecx,0x1f
   140004da6:	call   0x140005344
   140004dab:	jmp    0x140004e16
   140004dad:	mov    eax,DWORD PTR [rip+0x4845]        # 0x1400095f8
   140004db3:	test   eax,eax
   140004db5:	jne    0x140004e10
   140004db7:	mov    DWORD PTR [rip+0x483b],ebx        # 0x1400095f8
   140004dbd:	lea    r12,[rip+0x16a4]        # 0x140006468
   140004dc4:	lea    rdi,[rip+0x1685]        # 0x140006450
   140004dcb:	mov    QWORD PTR [rsp+0x28],rdi
   140004dd0:	mov    DWORD PTR [rsp+0x20],eax
   140004dd4:	cmp    rdi,r12
   140004dd7:	jae    0x140004e02
   140004dd9:	test   eax,eax
   140004ddb:	jne    0x140004e06
   140004ddd:	mov    rsi,QWORD PTR [rdi]
   140004de0:	test   rsi,rsi
   140004de3:	je     0x140004df7
   140004de5:	mov    rcx,rsi
   140004de8:	mov    rax,QWORD PTR [rip+0x1639]        # 0x140006428
   140004def:	call   rax
   140004df1:	call   rsi
   140004df3:	mov    DWORD PTR [rsp+0x20],eax
   140004df7:	add    rdi,0x8
   140004dfb:	mov    QWORD PTR [rsp+0x28],rdi
   140004e00:	jmp    0x140004dd4
   140004e02:	test   eax,eax
   140004e04:	je     0x140004e16
   140004e06:	mov    eax,0xff
   140004e0b:	jmp    0x140004ef7
   140004e10:	mov    DWORD PTR [rip+0x420e],ebx        # 0x140009024
   140004e16:	mov    eax,DWORD PTR [rip+0x47dc]        # 0x1400095f8
   140004e1c:	cmp    eax,ebx
   140004e1e:	jne    0x140004e3d
   140004e20:	lea    rdx,[rip+0x1621]        # 0x140006448
   140004e27:	lea    rcx,[rip+0x160a]        # 0x140006438
   140004e2e:	call   0x14000551a
   140004e33:	mov    DWORD PTR [rip+0x47bb],0x2        # 0x1400095f8
   140004e3d:	test   r14d,r14d
   140004e40:	jne    0x140004e4b
   140004e42:	xor    eax,eax
   140004e44:	xchg   QWORD PTR [rip+0x47a5],rax        # 0x1400095f0
   140004e4b:	cmp    QWORD PTR [rip+0x47ad],0x0        # 0x140009600
   140004e53:	je     0x140004e83
   140004e55:	lea    rcx,[rip+0x47a4]        # 0x140009600
   140004e5c:	call   0x1400053b0
   140004e61:	test   eax,eax
   140004e63:	je     0x140004e83
   140004e65:	mov    rbx,QWORD PTR [rip+0x4794]        # 0x140009600
   140004e6c:	mov    rcx,rbx
   140004e6f:	mov    rax,QWORD PTR [rip+0x15b2]        # 0x140006428
   140004e76:	call   rax
   140004e78:	xor    r8d,r8d
   140004e7b:	lea    edx,[r8+0x2]
   140004e7f:	xor    ecx,ecx
   140004e81:	call   rbx
   140004e83:	mov    r8,QWORD PTR [rip+0x41ae]        # 0x140009038
   140004e8a:	mov    rdx,QWORD PTR [rip+0x419f]        # 0x140009030
   140004e91:	mov    ecx,DWORD PTR [rip+0x4191]        # 0x140009028
   140004e97:	call   0x140004038
   140004e9c:	mov    DWORD PTR [rip+0x417e],eax        # 0x140009020
   140004ea2:	cmp    DWORD PTR [rip+0x4197],0x0        # 0x140009040
   140004ea9:	jne    0x140004eb3
   140004eab:	mov    ecx,eax
   140004ead:	call   QWORD PTR [rip+0x1505]        # 0x1400063b8
   140004eb3:	cmp    DWORD PTR [rip+0x416a],0x0        # 0x140009024
   140004eba:	jne    0x140004ec8
   140004ebc:	call   QWORD PTR [rip+0x1476]        # 0x140006338
   140004ec2:	mov    eax,DWORD PTR [rip+0x4158]        # 0x140009020
   140004ec8:	jmp    0x140004ef7
   140004eca:	mov    DWORD PTR [rip+0x4150],eax        # 0x140009020
   140004ed0:	cmp    DWORD PTR [rip+0x4169],0x0        # 0x140009040
   140004ed7:	jne    0x140004ee2
   140004ed9:	mov    ecx,eax
   140004edb:	call   QWORD PTR [rip+0x145f]        # 0x140006340
   140004ee1:	int3   
   140004ee2:	cmp    DWORD PTR [rip+0x413b],0x0        # 0x140009024
   140004ee9:	jne    0x140004ef7
   140004eeb:	call   QWORD PTR [rip+0x1447]        # 0x140006338
   140004ef1:	mov    eax,DWORD PTR [rip+0x4129]        # 0x140009020
   140004ef7:	mov    rbx,QWORD PTR [rsp+0x40]
   140004efc:	mov    rsi,QWORD PTR [rsp+0x48]
   140004f01:	mov    rdi,QWORD PTR [rsp+0x50]
   140004f06:	mov    r12,QWORD PTR [rsp+0x58]
   140004f0b:	add    rsp,0x30
   140004f0f:	pop    r14
   140004f11:	ret    
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	sub    rsp,0x28
   140004f24:	call   0x140005444
   140004f29:	add    rsp,0x28
   140004f2d:	jmp    0x140004d40
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	int3   
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	int3   
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	int3   
   140004f45:	int3   
   140004f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004f50:	cmp    rcx,QWORD PTR [rip+0x40b1]        # 0x140009008
   140004f57:	jne    0x140004f69
   140004f59:	rol    rcx,0x10
   140004f5d:	test   cx,0xffff
   140004f62:	jne    0x140004f65
   140004f64:	ret    
   140004f65:	ror    rcx,0x10
   140004f69:	jmp    0x140004fb0
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	int3   
   140004f71:	int3   
   140004f72:	int3   
   140004f73:	int3   
   140004f74:	rex push rbx
   140004f76:	sub    rsp,0x20
   140004f7a:	mov    rbx,rcx
   140004f7d:	xor    ecx,ecx
   140004f7f:	call   QWORD PTR [rip+0x1173]        # 0x1400060f8
   140004f85:	mov    rcx,rbx
   140004f88:	call   QWORD PTR [rip+0x1172]        # 0x140006100
   140004f8e:	call   QWORD PTR [rip+0x1234]        # 0x1400061c8
   140004f94:	mov    rcx,rax
   140004f97:	mov    edx,0xc0000409
   140004f9c:	add    rsp,0x20
   140004fa0:	pop    rbx
   140004fa1:	rex.W jmp QWORD PTR [rip+0x1210]        # 0x1400061b8
   140004fa8:	int3   
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140004fb5:	sub    rsp,0x88
   140004fbc:	lea    rcx,[rip+0x412d]        # 0x1400090f0
   140004fc3:	call   QWORD PTR [rip+0x1257]        # 0x140006220
   140004fc9:	mov    rax,QWORD PTR [rip+0x4218]        # 0x1400091e8
   140004fd0:	mov    QWORD PTR [rsp+0x48],rax
   140004fd5:	xor    r8d,r8d
   140004fd8:	lea    rdx,[rsp+0x50]
   140004fdd:	mov    rcx,QWORD PTR [rsp+0x48]
   140004fe2:	call   QWORD PTR [rip+0x1230]        # 0x140006218
   140004fe8:	mov    QWORD PTR [rsp+0x40],rax
   140004fed:	cmp    QWORD PTR [rsp+0x40],0x0
   140004ff3:	je     0x140005037
   140004ff5:	mov    QWORD PTR [rsp+0x38],0x0
   140004ffe:	lea    rax,[rsp+0x58]
   140005003:	mov    QWORD PTR [rsp+0x30],rax
   140005008:	lea    rax,[rsp+0x60]
   14000500d:	mov    QWORD PTR [rsp+0x28],rax
   140005012:	lea    rax,[rip+0x40d7]        # 0x1400090f0
   140005019:	mov    QWORD PTR [rsp+0x20],rax
   14000501e:	mov    r9,QWORD PTR [rsp+0x40]
   140005023:	mov    r8,QWORD PTR [rsp+0x48]
   140005028:	mov    rdx,QWORD PTR [rsp+0x50]
   14000502d:	xor    ecx,ecx
   14000502f:	call   QWORD PTR [rip+0x11f3]        # 0x140006228
   140005035:	jmp    0x14000505a
   140005037:	mov    rax,QWORD PTR [rip+0x414a]        # 0x140009188
   14000503e:	mov    rax,QWORD PTR [rax]
   140005041:	mov    QWORD PTR [rip+0x41a0],rax        # 0x1400091e8
   140005048:	mov    rax,QWORD PTR [rip+0x4139]        # 0x140009188
   14000504f:	add    rax,0x8
   140005053:	mov    QWORD PTR [rip+0x412e],rax        # 0x140009188
   14000505a:	mov    rax,QWORD PTR [rip+0x4187]        # 0x1400091e8
   140005061:	mov    QWORD PTR [rip+0x3ff8],rax        # 0x140009060
   140005068:	mov    rax,QWORD PTR [rsp+0x90]
   140005070:	mov    QWORD PTR [rip+0x40f9],rax        # 0x140009170
   140005077:	mov    DWORD PTR [rip+0x3fcf],0xc0000409        # 0x140009050
   140005081:	mov    DWORD PTR [rip+0x3fc9],0x1        # 0x140009054
   14000508b:	mov    DWORD PTR [rip+0x3fd3],0x3        # 0x140009068
   140005095:	mov    eax,0x8
   14000509a:	imul   rax,rax,0x0
   14000509e:	lea    rcx,[rip+0x3fcb]        # 0x140009070
   1400050a5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400050ad:	mov    eax,0x8
   1400050b2:	imul   rax,rax,0x1
   1400050b6:	lea    rcx,[rip+0x3fb3]        # 0x140009070
   1400050bd:	mov    rdx,QWORD PTR [rip+0x3f44]        # 0x140009008
   1400050c4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400050c8:	mov    eax,0x8
   1400050cd:	imul   rax,rax,0x2
   1400050d1:	lea    rcx,[rip+0x3f98]        # 0x140009070
   1400050d8:	mov    rdx,QWORD PTR [rip+0x3f31]        # 0x140009010
   1400050df:	mov    QWORD PTR [rcx+rax*1],rdx
   1400050e3:	mov    eax,0x8
   1400050e8:	imul   rax,rax,0x0
   1400050ec:	mov    rcx,QWORD PTR [rip+0x3f15]        # 0x140009008
   1400050f3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400050f8:	mov    eax,0x8
   1400050fd:	imul   rax,rax,0x1
   140005101:	mov    rcx,QWORD PTR [rip+0x3f08]        # 0x140009010
   140005108:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000510d:	lea    rcx,[rip+0x137c]        # 0x140006490
   140005114:	call   0x140004f74
   140005119:	add    rsp,0x88
   140005120:	ret    
   140005121:	int3   
   140005122:	int3   
   140005123:	int3   
   140005124:	int3   
   140005125:	int3   
   140005126:	int3   
   140005127:	int3   
   140005128:	sub    rsp,0x78
   14000512c:	lea    rcx,[rip+0x3fbd]        # 0x1400090f0
   140005133:	call   QWORD PTR [rip+0x10e7]        # 0x140006220
   140005139:	mov    rax,QWORD PTR [rip+0x40a8]        # 0x1400091e8
   140005140:	mov    QWORD PTR [rsp+0x48],rax
   140005145:	xor    r8d,r8d
   140005148:	lea    rdx,[rsp+0x50]
   14000514d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005152:	call   QWORD PTR [rip+0x10c0]        # 0x140006218
   140005158:	mov    QWORD PTR [rsp+0x40],rax
   14000515d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005163:	je     0x1400051a7
   140005165:	mov    QWORD PTR [rsp+0x38],0x0
   14000516e:	lea    rax,[rsp+0x58]
   140005173:	mov    QWORD PTR [rsp+0x30],rax
   140005178:	lea    rax,[rsp+0x60]
   14000517d:	mov    QWORD PTR [rsp+0x28],rax
   140005182:	lea    rax,[rip+0x3f67]        # 0x1400090f0
   140005189:	mov    QWORD PTR [rsp+0x20],rax
   14000518e:	mov    r9,QWORD PTR [rsp+0x40]
   140005193:	mov    r8,QWORD PTR [rsp+0x48]
   140005198:	mov    rdx,QWORD PTR [rsp+0x50]
   14000519d:	xor    ecx,ecx
   14000519f:	call   QWORD PTR [rip+0x1083]        # 0x140006228
   1400051a5:	jmp    0x1400051ca
   1400051a7:	mov    rax,QWORD PTR [rip+0x3fda]        # 0x140009188
   1400051ae:	mov    rax,QWORD PTR [rax]
   1400051b1:	mov    QWORD PTR [rip+0x4030],rax        # 0x1400091e8
   1400051b8:	mov    rax,QWORD PTR [rip+0x3fc9]        # 0x140009188
   1400051bf:	add    rax,0x8
   1400051c3:	mov    QWORD PTR [rip+0x3fbe],rax        # 0x140009188
   1400051ca:	mov    rax,QWORD PTR [rip+0x4017]        # 0x1400091e8
   1400051d1:	mov    QWORD PTR [rip+0x3e88],rax        # 0x140009060
   1400051d8:	mov    DWORD PTR [rip+0x3e6e],0xc0000409        # 0x140009050
   1400051e2:	mov    DWORD PTR [rip+0x3e68],0x1        # 0x140009054
   1400051ec:	mov    DWORD PTR [rip+0x3e72],0x1        # 0x140009068
   1400051f6:	mov    eax,0x8
   1400051fb:	imul   rax,rax,0x0
   1400051ff:	lea    rcx,[rip+0x3e6a]        # 0x140009070
   140005206:	mov    QWORD PTR [rcx+rax*1],0x8
   14000520e:	lea    rcx,[rip+0x127b]        # 0x140006490
   140005215:	call   0x140004f74
   14000521a:	add    rsp,0x78
   14000521e:	ret    
   14000521f:	int3   
   140005220:	int3   
   140005221:	int3   
   140005222:	int3   
   140005223:	int3   
   140005224:	int3   
   140005225:	int3   
   140005226:	int3   
   140005227:	int3   
   140005228:	int3   
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	int3   
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	sub    rsp,0x28
   140005234:	mov    rax,QWORD PTR [rcx]
   140005237:	cmp    DWORD PTR [rax],0xe06d7363
   14000523d:	jne    0x140005262
   14000523f:	cmp    DWORD PTR [rax+0x18],0x4
   140005243:	jne    0x140005262
   140005245:	mov    ecx,DWORD PTR [rax+0x20]
   140005248:	lea    eax,[rcx-0x19930520]
   14000524e:	cmp    eax,0x2
   140005251:	jbe    0x14000525b
   140005253:	cmp    ecx,0x1994000
   140005259:	jne    0x140005262
   14000525b:	call   QWORD PTR [rip+0x10af]        # 0x140006310
   140005261:	int3   
   140005262:	xor    eax,eax
   140005264:	add    rsp,0x28
   140005268:	ret    
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	sub    rsp,0x28
   140005274:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005230
   14000527b:	call   QWORD PTR [rip+0xe77]        # 0x1400060f8
   140005281:	xor    eax,eax
   140005283:	add    rsp,0x28
   140005287:	ret    
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	jmp    QWORD PTR [rip+0x111c]        # 0x1400063b0
   140005294:	int3   
   140005295:	int3   
   140005296:	int3   
   140005297:	int3   
   140005298:	int3   
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	sub    rsp,0x18
   1400052a0:	xor    edx,edx
   1400052a2:	lea    rax,[rcx-0x1]
   1400052a6:	cmp    rax,0xfffffffffffffffd
   1400052aa:	ja     0x1400052e8
   1400052ac:	mov    eax,0x5a4d
   1400052b1:	cmp    WORD PTR [rcx],ax
   1400052b4:	jne    0x1400052e0
   1400052b6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400052b9:	jl     0x1400052e0
   1400052bb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400052c2:	jae    0x1400052e0
   1400052c4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400052c8:	add    rax,rcx
   1400052cb:	mov    QWORD PTR [rsp],rax
   1400052cf:	cmp    DWORD PTR [rax],0x4550
   1400052d5:	cmovne rax,rdx
   1400052d9:	mov    rdx,rax
   1400052dc:	mov    QWORD PTR [rsp],rax
   1400052e0:	jmp    0x1400052e8
   1400052e2:	xor    edx,edx
   1400052e4:	mov    QWORD PTR [rsp],rdx
   1400052e8:	mov    rax,rdx
   1400052eb:	add    rsp,0x18
   1400052ef:	ret    
   1400052f0:	int3   
   1400052f1:	int3   
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	rex push rbx
   1400052fa:	sub    rsp,0x20
   1400052fe:	mov    ebx,ecx
   140005300:	xor    ecx,ecx
   140005302:	call   QWORD PTR [rip+0xe60]        # 0x140006168
   140005308:	test   rax,rax
   14000530b:	je     0x140005335
   14000530d:	mov    rcx,rax
   140005310:	call   0x14000529c
   140005315:	test   rax,rax
   140005318:	je     0x140005335
   14000531a:	mov    ecx,0x2
   14000531f:	cmp    WORD PTR [rax+0x5c],cx
   140005323:	jne    0x140005329
   140005325:	mov    eax,ecx
   140005327:	jmp    0x140005337
   140005329:	cmp    WORD PTR [rax+0x5c],0x3
   14000532e:	mov    eax,0x1
   140005333:	je     0x140005337
   140005335:	mov    eax,ebx
   140005337:	add    rsp,0x20
   14000533b:	pop    rbx
   14000533c:	ret    
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	int3   
   140005341:	int3   
   140005342:	int3   
   140005343:	int3   
   140005344:	jmp    QWORD PTR [rip+0x105e]        # 0x1400063a8
   14000534a:	int3   
   14000534b:	int3   
   14000534c:	int3   
   14000534d:	int3   
   14000534e:	int3   
   14000534f:	int3   
   140005350:	xor    eax,eax
   140005352:	ret    
   140005353:	int3   
   140005354:	int3   
   140005355:	int3   
   140005356:	int3   
   140005357:	int3   
   140005358:	int3   
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005364:	xor    r9d,r9d
   140005367:	add    r8,rcx
   14000536a:	mov    r10,rdx
   14000536d:	movzx  eax,WORD PTR [r8+0x14]
   140005372:	movzx  r11d,WORD PTR [r8+0x6]
   140005377:	add    rax,0x18
   14000537b:	add    rax,r8
   14000537e:	test   r11d,r11d
   140005381:	je     0x1400053a1
   140005383:	mov    edx,DWORD PTR [rax+0xc]
   140005386:	cmp    r10,rdx
   140005389:	jb     0x140005395
   14000538b:	mov    ecx,DWORD PTR [rax+0x8]
   14000538e:	add    ecx,edx
   140005390:	cmp    r10,rcx
   140005393:	jb     0x1400053a3
   140005395:	inc    r9d
   140005398:	add    rax,0x28
   14000539c:	cmp    r9d,r11d
   14000539f:	jb     0x140005383
   1400053a1:	xor    eax,eax
   1400053a3:	ret    
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	int3   
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	int3   
   1400053ad:	int3   
   1400053ae:	int3   
   1400053af:	int3   
   1400053b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053b5:	push   rdi
   1400053b6:	sub    rsp,0x20
   1400053ba:	mov    rbx,rcx
   1400053bd:	lea    rdi,[rip+0xffffffffffffac3c]        # 0x140000000
   1400053c4:	mov    rcx,rdi
   1400053c7:	call   0x140005410
   1400053cc:	test   eax,eax
   1400053ce:	je     0x1400053f2
   1400053d0:	sub    rbx,rdi
   1400053d3:	mov    rdx,rbx
   1400053d6:	mov    rcx,rdi
   1400053d9:	call   0x140005360
   1400053de:	test   rax,rax
   1400053e1:	je     0x1400053f2
   1400053e3:	mov    eax,DWORD PTR [rax+0x24]
   1400053e6:	shr    eax,0x1f
   1400053e9:	not    eax
   1400053eb:	and    eax,0x1
   1400053ee:	jmp    0x1400053f2
   1400053f0:	xor    eax,eax
   1400053f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053f7:	add    rsp,0x20
   1400053fb:	pop    rdi
   1400053fc:	ret    
   1400053fd:	int3   
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	int3   
   140005401:	int3   
   140005402:	int3   
   140005403:	int3   
   140005404:	int3   
   140005405:	int3   
   140005406:	int3   
   140005407:	int3   
   140005408:	int3   
   140005409:	int3   
   14000540a:	int3   
   14000540b:	int3   
   14000540c:	int3   
   14000540d:	int3   
   14000540e:	int3   
   14000540f:	int3   
   140005410:	mov    rax,rcx
   140005413:	mov    ecx,0x5a4d
   140005418:	cmp    WORD PTR [rax],cx
   14000541b:	je     0x140005420
   14000541d:	xor    eax,eax
   14000541f:	ret    
   140005420:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005424:	add    rcx,rax
   140005427:	xor    eax,eax
   140005429:	cmp    DWORD PTR [rcx],0x4550
   14000542f:	jne    0x14000543d
   140005431:	mov    edx,0x20b
   140005436:	cmp    WORD PTR [rcx+0x18],dx
   14000543a:	sete   al
   14000543d:	ret    
   14000543e:	int3   
   14000543f:	int3   
   140005440:	int3   
   140005441:	int3   
   140005442:	int3   
   140005443:	int3   
   140005444:	mov    QWORD PTR [rsp+0x20],rbx
   140005449:	push   rbp
   14000544a:	mov    rbp,rsp
   14000544d:	sub    rsp,0x20
   140005451:	and    QWORD PTR [rbp+0x18],0x0
   140005456:	movabs rbx,0x2b992ddfa232
   140005460:	mov    rax,QWORD PTR [rip+0x3ba1]        # 0x140009008
   140005467:	cmp    rax,rbx
   14000546a:	jne    0x1400054ff
   140005470:	lea    rcx,[rbp+0x18]
   140005474:	call   QWORD PTR [rip+0xdee]        # 0x140006268
   14000547a:	mov    rax,QWORD PTR [rbp+0x18]
   14000547e:	mov    QWORD PTR [rbp+0x10],rax
   140005482:	call   QWORD PTR [rip+0xd48]        # 0x1400061d0
   140005488:	mov    eax,eax
   14000548a:	xor    QWORD PTR [rbp+0x10],rax
   14000548e:	call   QWORD PTR [rip+0xd2c]        # 0x1400061c0
   140005494:	mov    eax,eax
   140005496:	xor    QWORD PTR [rbp+0x10],rax
   14000549a:	call   QWORD PTR [rip+0xdd0]        # 0x140006270
   1400054a0:	mov    eax,eax
   1400054a2:	shl    rax,0x18
   1400054a6:	xor    QWORD PTR [rbp+0x10],rax
   1400054aa:	call   QWORD PTR [rip+0xdc0]        # 0x140006270
   1400054b0:	mov    eax,eax
   1400054b2:	lea    rcx,[rbp+0x10]
   1400054b6:	xor    rax,QWORD PTR [rbp+0x10]
   1400054ba:	xor    rax,rcx
   1400054bd:	lea    rcx,[rbp+0x20]
   1400054c1:	mov    QWORD PTR [rbp+0x10],rax
   1400054c5:	call   QWORD PTR [rip+0xd15]        # 0x1400061e0
   1400054cb:	mov    eax,DWORD PTR [rbp+0x20]
   1400054ce:	movabs rcx,0xffffffffffff
   1400054d8:	shl    rax,0x20
   1400054dc:	xor    rax,QWORD PTR [rbp+0x20]
   1400054e0:	xor    rax,QWORD PTR [rbp+0x10]
   1400054e4:	and    rax,rcx
   1400054e7:	movabs rcx,0x2b992ddfa233
   1400054f1:	cmp    rax,rbx
   1400054f4:	cmove  rax,rcx
   1400054f8:	mov    QWORD PTR [rip+0x3b09],rax        # 0x140009008
   1400054ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140005504:	not    rax
   140005507:	mov    QWORD PTR [rip+0x3b02],rax        # 0x140009010
   14000550e:	add    rsp,0x20
   140005512:	pop    rbp
   140005513:	ret    
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	jmp    QWORD PTR [rip+0xe08]        # 0x140006328
   140005520:	int3   
   140005521:	int3   
   140005522:	int3   
   140005523:	int3   
   140005524:	int3   
   140005525:	int3   
   140005526:	jmp    QWORD PTR [rip+0xdf4]        # 0x140006320
   14000552c:	int3   
   14000552d:	int3   
   14000552e:	int3   
   14000552f:	int3   
   140005530:	int3   
   140005531:	int3   
   140005532:	int3   
   140005533:	int3   
   140005534:	int3   
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	ret    0x0
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	int3   
   140005551:	int3   
   140005552:	int3   
   140005553:	int3   
   140005554:	int3   
   140005555:	int3   
   140005556:	int3   
   140005557:	int3   
   140005558:	rex push rbx
   14000555a:	sub    rsp,0x20
   14000555e:	mov    ebx,ecx
   140005560:	call   0x14000557c
   140005565:	lea    rdx,[rbx+rbx*2]
   140005569:	shl    rdx,0x4
   14000556d:	add    rax,rdx
   140005570:	add    rsp,0x20
   140005574:	pop    rbx
   140005575:	ret    
   140005576:	int3   
   140005577:	int3   
   140005578:	int3   
   140005579:	int3   
   14000557a:	int3   
   14000557b:	int3   
   14000557c:	jmp    QWORD PTR [rip+0xdce]        # 0x140006350
   140005582:	int3   
   140005583:	int3   
   140005584:	int3   
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	sub    rsp,0x28
   14000558c:	mov    r8,QWORD PTR [r9+0x38]
   140005590:	mov    rcx,rdx
   140005593:	mov    rdx,r9
   140005596:	call   0x1400055ac
   14000559b:	mov    eax,0x1
   1400055a0:	add    rsp,0x28
   1400055a4:	ret    
   1400055a5:	int3   
   1400055a6:	int3   
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	rex push rbx
   1400055ae:	sub    rsp,0x20
   1400055b2:	mov    r11d,DWORD PTR [r8]
   1400055b5:	mov    rbx,rdx
   1400055b8:	and    r11d,0xfffffff8
   1400055bc:	mov    r9,rcx
   1400055bf:	test   BYTE PTR [r8],0x4
   1400055c3:	mov    r10,rcx
   1400055c6:	je     0x1400055db
   1400055c8:	mov    eax,DWORD PTR [r8+0x8]
   1400055cc:	movsxd r10,DWORD PTR [r8+0x4]
   1400055d0:	neg    eax
   1400055d2:	add    r10,rcx
   1400055d5:	movsxd rcx,eax
   1400055d8:	and    r10,rcx
   1400055db:	movsxd rax,r11d
   1400055de:	mov    rdx,QWORD PTR [rax+r10*1]
   1400055e2:	mov    rax,QWORD PTR [rbx+0x10]
   1400055e6:	mov    ecx,DWORD PTR [rax+0x8]
   1400055e9:	add    rcx,QWORD PTR [rbx+0x8]
   1400055ed:	test   BYTE PTR [rcx+0x3],0xf
   1400055f1:	je     0x1400055ff
   1400055f3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400055f7:	and    eax,0xfffffff0
   1400055fa:	cdqe   
   1400055fc:	add    r9,rax
   1400055ff:	xor    r9,rdx
   140005602:	mov    rcx,r9
   140005605:	add    rsp,0x20
   140005609:	pop    rbx
   14000560a:	jmp    0x140004f50
   14000560f:	int3   
   140005610:	int3   
   140005611:	int3   
   140005612:	int3   
   140005613:	int3   
   140005614:	int3   
   140005615:	int3   
   140005616:	jmp    QWORD PTR [rip+0xd54]        # 0x140006370
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	int3   
   140005621:	int3   
   140005622:	jmp    QWORD PTR [rip+0xdc0]        # 0x1400063e8
   140005628:	int3   
   140005629:	int3   
   14000562a:	int3   
   14000562b:	int3   
   14000562c:	int3   
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	int3   
   140005631:	int3   
   140005632:	int3   
   140005633:	int3   
   140005634:	int3   
   140005635:	int3   
   140005636:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005640:	jmp    rax
   140005642:	int3   
   140005643:	int3   
   140005644:	int3   
   140005645:	int3   
   140005646:	int3   
   140005647:	int3   
   140005648:	int3   
   140005649:	int3   
   14000564a:	int3   
   14000564b:	int3   
   14000564c:	int3   
   14000564d:	int3   
   14000564e:	int3   
   14000564f:	int3   
   140005650:	int3   
   140005651:	int3   
   140005652:	int3   
   140005653:	int3   
   140005654:	int3   
   140005655:	int3   
   140005656:	rex push rbp
   140005658:	sub    rsp,0x20
   14000565c:	mov    rbp,rdx
   14000565f:	mov    rax,QWORD PTR [rcx]
   140005662:	mov    rdx,rcx
   140005665:	mov    ecx,DWORD PTR [rax]
   140005667:	call   0x14000528e
   14000566c:	nop
   14000566d:	add    rsp,0x20
   140005671:	pop    rbp
   140005672:	ret    
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	rex push rbp
   140005682:	sub    rsp,0x20
   140005686:	mov    rbp,rdx
   140005689:	mov    rax,QWORD PTR [rcx]
   14000568c:	xor    ecx,ecx
   14000568e:	cmp    DWORD PTR [rax],0xc0000005
   140005694:	sete   cl
   140005697:	mov    eax,ecx
   140005699:	add    rsp,0x20
   14000569d:	pop    rbp
   14000569e:	ret    
   14000569f:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	(bad)  
   140006001:	jg     0x140006003
   140006003:	add    BYTE PTR [rax],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rdx+0x80],ch
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    dh,bl
   140006011:	jg     0x140006013
   140006013:	add    BYTE PTR [rax],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rsi],al
   140006019:	add    BYTE PTR [rax],0x0
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	out    dx,al
   140006021:	jg     0x140006023
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    ah,bh
   140006029:	jg     0x14000602b
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    al,bl
   140006031:	add    BYTE PTR [rax],0x0
	...
   140006040:	mov    ah,0x7e
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	sub    bh,BYTE PTR [rdi+0x0]
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rcx+rax*4],ah
   140006052:	add    BYTE PTR [rax],al
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	xchg   esi,eax
   140006059:	jle    0x14000605b
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rcx+rax*4+0x0],al
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rsi+0x7e],bl
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	(bad)  
   140006071:	add    BYTE PTR [rax],0x0
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	cmp    al,0x80
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	xchg   esi,eax
   140006081:	add    BYTE PTR [rax],0x0
	...
   140006090:	push   rsp
   140006091:	xchg   BYTE PTR [rax],al
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    dl,cl
   140006099:	test   DWORD PTR [rax],eax
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rdx-0x7a],ch
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	add    BYTE PTR [rax],al
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	test   BYTE PTR [rsi+0x0],al
	...
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	push   rsp
   1400060b9:	jg     0x1400060bb
	...
   1400060c7:	add    BYTE PTR [rax],al
   1400060c9:	add    DWORD PTR [rax],0x0
	...
   1400060d7:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	xchg   edx,eax
   1400060e1:	jg     0x1400060e3
	...
   1400060ef:	add    BYTE PTR [rdi+rdi*2+0x0],ah
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	test   BYTE PTR [rcx+0x0],0x0
   1400060ff:	add    dl,bl
   140006101:	add    DWORD PTR [rax],0x0
	...
   14000610f:	add    dl,dh
   140006111:	add    BYTE PTR [rax],0x0
   140006114:	add    BYTE PTR [rax],al
   140006116:	add    BYTE PTR [rax],al
   140006118:	(bad)  
   140006119:	jg     0x14000611b
	...
   140006127:	add    BYTE PTR [rsi-0x80],dl
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	je     0x1400060b2
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	(bad)  
   140006139:	add    BYTE PTR [rax],0x0
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	add    DWORD PTR fs:[rax],0x0
	...
   14000614f:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    BYTE PTR [rdx+0x7e],cl
	...
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    BYTE PTR [rdx+rax*4],bh
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	rex.WR jle 0x140006173
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rdx],bh
   140006179:	jle    0x14000617b
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rsi+rdi*2],ch
	...
   14000618e:	add    BYTE PTR [rax],al
   140006190:	rex.X jg 0x140006193
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rdx-0x7f],bh
	...
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400061a9:	(bad)  
	...
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	sub    BYTE PTR [rdx+0x0],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	add    BYTE PTR [rdx+0x0],0x0
   1400061c7:	add    BYTE PTR [rdx+rax*4],dl
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	push   0xffffffffffffff82
	...
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	push   rax
   1400061e1:	(bad)  
	...
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	add    bh,BYTE PTR [rdi+0x0]
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    al,ah
   1400061f9:	jle    0x1400061fb
   1400061fb:	add    BYTE PTR [rax],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    al,dh
   140006201:	jle    0x140006203
   140006203:	add    BYTE PTR [rax],al
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    ah,cl
   140006209:	jle    0x14000620b
	...
   140006217:	add    BYTE PTR [rcx+rax*4+0x0],ch
   14000621e:	add    BYTE PTR [rax],al
   140006220:	cwde   
   140006221:	add    DWORD PTR [rax],0x0
   140006227:	add    dh,al
   140006229:	add    DWORD PTR [rax],0x0
	...
   140006237:	add    al,al
   140006239:	(bad)  
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	ret    0x80
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rdx],dl
   140006249:	add    DWORD PTR [rax],0x0
	...
   140006257:	add    BYTE PTR [rax+0x81],dl
	...
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rax],dl
   140006269:	jg     0x14000626b
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rsi+0x82],dl
   140006275:	add    BYTE PTR [rax],al
   140006277:	add    BYTE PTR [rax+0x80],al
	...
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rdx+0x7f],bh
	...
   140006296:	add    BYTE PTR [rax],al
   140006298:	mov    dh,0x87
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	rol    BYTE PTR [rdi+0x0],cl
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	fadd   QWORD PTR [rdi+0x0]
	...
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	mov    al,BYTE PTR [rbp+0x0]
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	mov    ah,0x85
   1400062c2:	add    BYTE PTR [rax],al
   1400062c4:	add    BYTE PTR [rax],al
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	jb     0x14000624f
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	movabs ds:0x85,al
   1400062d9:	add    BYTE PTR [rax],al
   1400062db:	add    BYTE PTR [rax],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rsi+rax*4],cl
   1400062e2:	add    BYTE PTR [rax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	xchg   BYTE PTR es:[rax],al
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rsi],bh
   1400062f1:	xchg   BYTE PTR [rax],al
   1400062f3:	add    BYTE PTR [rax],al
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    al,ah
   1400062f9:	test   DWORD PTR [rax],eax
   1400062fb:	add    BYTE PTR [rax],al
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    dl,dh
   140006301:	test   DWORD PTR [rax],eax
	...
   14000630f:	add    BYTE PTR [rax],bl
   140006311:	jle    0x140006313
   140006313:	add    BYTE PTR [rax],al
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    dh,dh
   140006319:	jge    0x14000631b
   14000631b:	add    BYTE PTR [rax],al
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    dh,bl
   140006321:	jge    0x140006323
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    dl,dl
   140006329:	jge    0x14000632b
   14000632b:	add    BYTE PTR [rax],al
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    BYTE PTR [rsi+0x7d],bh
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    BYTE PTR [rbp+rdi*2+0x0],dh
   14000633e:	add    BYTE PTR [rax],al
   140006340:	lods   al,BYTE PTR ds:[rsi]
   140006341:	jge    0x140006343
   140006343:	add    BYTE PTR [rax],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    BYTE PTR [rdx+0x7d],bl
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax-0x79],al
   140006352:	add    BYTE PTR [rax],al
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	rex.WRX xchg QWORD PTR [rax],r8
   14000635b:	add    BYTE PTR [rax],al
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rax-0x79],bl
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	xchg   DWORD PTR fs:[rax],eax
   14000636b:	add    BYTE PTR [rax],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rax],bl
   140006371:	mov    BYTE PTR [rax],al
   140006373:	add    BYTE PTR [rax],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    BYTE PTR [rdx-0x79],bh
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    BYTE PTR [rax],al
   140006380:	test   BYTE PTR [rdi+0x0],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	mov    es,WORD PTR [rdi+0x0]
   14000638e:	add    BYTE PTR [rax],al
   140006390:	(bad)  
   140006391:	xchg   DWORD PTR [rax],eax
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rdi+rax*4+0x0],ch
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	mov    BYTE PTR [rbp+0x0],bh
   1400063a3:	add    BYTE PTR [rax],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rdx+0x7d],bh
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	ins    BYTE PTR es:[rdi],dx
   1400063b1:	jge    0x1400063b3
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   1400063bb:	add    BYTE PTR [rax],al
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rax+0x7d],bl
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	rex.WX jge 0x1400063cb
   1400063cb:	add    BYTE PTR [rax],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    BYTE PTR [rax-0x79],dh
   1400063d2:	add    BYTE PTR [rax],al
   1400063d4:	add    BYTE PTR [rax],al
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	rex jge 0x1400063db
   1400063db:	add    BYTE PTR [rax],al
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    BYTE PTR [rax],al
   1400063e1:	jle    0x1400063e3
   1400063e3:	add    BYTE PTR [rax],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    BYTE PTR [rdx],ah
   1400063e9:	mov    BYTE PTR [rax],al
	...
   1400063f7:	add    BYTE PTR [rdi+rax*4],bl
   1400063fa:	add    BYTE PTR [rax],al
   1400063fc:	add    BYTE PTR [rax],al
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	add    BYTE PTR [rdi+0x0],al
   140006406:	add    BYTE PTR [rax],al
   140006408:	in     al,0x86
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	int3   
   140006411:	xchg   BYTE PTR [rax],al
   140006413:	add    BYTE PTR [rax],al
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rax+0x86],bh
	...
   140006425:	add    BYTE PTR [rax],al
   140006427:	add    BYTE PTR [rax+0x55],al
   14000642a:	add    BYTE PTR [rax+0x1],al
   14000642d:	add    BYTE PTR [rax],al
   14000642f:	add    BYTE PTR [rax+0x56],al
   140006432:	add    BYTE PTR [rax+0x1],al
	...
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    al,dh
   140006441:	rex.WR add BYTE PTR [rax+0x1],r8b
	...
   140006455:	add    BYTE PTR [rax],al
   140006457:	add    BYTE PTR [rax],dl
   140006459:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000645d:	add    BYTE PTR [rax],al
   14000645f:	add    BYTE PTR [rax+0x52],dh
   140006462:	add    BYTE PTR [rax+0x1],al
	...
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rax],dl
   140006471:	rex.WR add BYTE PTR [rax],r8b
   140006474:	lock rex.WR add BYTE PTR [rax],r8b
   140006478:	and    BYTE PTR [rdi+0x0],cl
   14000647b:	add    BYTE PTR [rax+0x3000004f],dh
   140006481:	push   rdx
   140006482:	add    BYTE PTR [rax],al
   140006484:	jo     0x1400064d8
   140006486:	add    BYTE PTR [rax],al
   140006488:	push   rax
   140006489:	push   rbx
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	rex push rbp
   14000648e:	add    BYTE PTR [rax],al
   140006490:	push   rax
   140006491:	nop
   140006492:	add    BYTE PTR [rax+0x1],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    al,dh
   140006499:	nop
   14000649a:	add    BYTE PTR [rax+0x1],al
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    BYTE PTR [rax+rax*1+0x68],ah
   1400064a3:	add    BYTE PTR [rbx+0x0],ah
   1400064a6:	jo     0x1400064a8
   1400064a8:	movsxd eax,DWORD PTR [rax]
   1400064aa:	jae    0x1400064ac
   1400064ac:	jbe    0x1400064ae
   1400064ae:	movsxd eax,DWORD PTR [rax]
   1400064b0:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400064b5:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400064b9:	add    BYTE PTR [rax],al
   1400064bb:	add    BYTE PTR [rax],al
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rax+rbp*2+0x63],al
   1400064c3:	jo     0x14000650e
   1400064c5:	jae    0x14000650c
   1400064c7:	outs   dx,BYTE PTR ds:[rsi]
   1400064c8:	(bad)  
   1400064c9:	(bad)  
   1400064ca:	ins    BYTE PTR es:[rdi],dx
   1400064cb:	gs add BYTE PTR fs:[rax],al
   1400064cf:	add    BYTE PTR [rax+rax*1+0x68],al
   1400064d3:	add    BYTE PTR [rbx+0x0],ah
   1400064d6:	jo     0x1400064d8
   1400064d8:	add    BYTE PTR [r8+r8*1+0x61],bpl
   1400064dd:	add    BYTE PTR [rbx+0x0],dh
   1400064e0:	jae    0x1400064e2
   1400064e2:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
	...
   1400064ef:	add    BYTE PTR [rbx+0x0],dl
   1400064f2:	pop    rcx
   1400064f3:	add    BYTE PTR [rbx+0x0],dl
   1400064f6:	push   rsp
   1400064f7:	add    BYTE PTR [rbp+0x0],al
   1400064fa:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   1400064ff:	add    BYTE PTR [rbp+0x0],dh
   140006502:	jb     0x140006504
   140006504:	jb     0x140006506
   140006506:	add    BYTE PTR gs:[rsi+0x0],ch
   14000650a:	je     0x14000650c
   14000650c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006510:	outs   dx,BYTE PTR ds:[rsi]
   140006511:	add    BYTE PTR [rax+rax*1+0x72],dh
   140006515:	add    BYTE PTR [rdi+0x0],ch
   140006518:	ins    BYTE PTR es:[rdi],dx
   140006519:	add    BYTE PTR [rbx+0x0],dl
   14000651c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   140006521:	add    BYTE PTR [rbx+0x0],dl
   140006524:	add    BYTE PTR gs:[rdx+0x0],dh
   140006528:	jbe    0x14000652a
   14000652a:	imul   eax,DWORD PTR [rax],0x650063
   140006530:	jae    0x140006532
   140006532:	pop    rsp
   140006533:	add    BYTE PTR [rax+rax*1+0x63],dl
   140006537:	add    BYTE PTR [rax+0x0],dh
   14000653a:	imul   eax,DWORD PTR [rax],0x5c0070
   140006540:	push   rax
   140006541:	add    BYTE PTR [rcx+0x0],ah
   140006544:	jb     0x140006546
   140006546:	(bad)  
   140006547:	add    BYTE PTR [rbp+0x0],ch
   14000654a:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14000654f:	add    BYTE PTR [rdx+0x0],dh
   140006552:	jae    0x140006554
   140006554:	pop    rsp
   140006555:	add    BYTE PTR [rcx+0x0],cl
   140006558:	outs   dx,BYTE PTR ds:[rsi]
   140006559:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000655d:	add    BYTE PTR [rdx+0x0],dh
   140006560:	data16 add BYTE PTR [rcx+0x0],ah
   140006564:	movsxd eax,DWORD PTR [rax]
   140006566:	add    BYTE PTR gs:[rbx+0x0],dh
   14000656a:	pop    rsp
   14000656b:	add    BYTE PTR [rax],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax+rax*1+0x68],al
   140006573:	add    BYTE PTR [rbx+0x0],ah
   140006576:	jo     0x140006578
   140006578:	jbe    0x14000657a
   14000657a:	add    BYTE PTR ss:[rbx+0x0],al
   14000657e:	ins    BYTE PTR es:[rdi],dx
   14000657f:	add    BYTE PTR [rcx+0x0],ah
   140006582:	jae    0x140006584
   140006584:	jae    0x140006586
   140006586:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000658b:	add    BYTE PTR [rax],al
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    BYTE PTR [rbx+0x0],dl
   140006592:	pop    rcx
   140006593:	add    BYTE PTR [rbx+0x0],dl
   140006596:	push   rsp
   140006597:	add    BYTE PTR [rbp+0x0],al
   14000659a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r11b
   14000659f:	add    BYTE PTR [rbp+0x0],dh
   1400065a2:	jb     0x1400065a4
   1400065a4:	jb     0x1400065a6
   1400065a6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400065aa:	je     0x1400065ac
   1400065ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400065b0:	outs   dx,BYTE PTR ds:[rsi]
   1400065b1:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400065b5:	add    BYTE PTR [rdi+0x0],ch
   1400065b8:	ins    BYTE PTR es:[rdi],dx
   1400065b9:	add    BYTE PTR [rbx+0x0],dl
   1400065bc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   1400065c1:	add    BYTE PTR [rbx+0x0],dl
   1400065c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065c8:	jbe    0x1400065ca
   1400065ca:	imul   eax,DWORD PTR [rax],0x650063
   1400065d0:	jae    0x1400065d2
   1400065d2:	pop    rsp
   1400065d3:	add    BYTE PTR [rax+rax*1+0x63],dl
   1400065d7:	add    BYTE PTR [rax+0x0],dh
   1400065da:	imul   eax,DWORD PTR [rax],0x360070
   1400065e0:	pop    rsp
   1400065e1:	add    BYTE PTR [rax+0x0],dl
   1400065e4:	(bad)  
   1400065e5:	add    BYTE PTR [rdx+0x0],dh
   1400065e8:	(bad)  
   1400065e9:	add    BYTE PTR [rbp+0x0],ch
   1400065ec:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   1400065f1:	add    BYTE PTR [rdx+0x0],dh
   1400065f4:	jae    0x1400065f6
   1400065f6:	pop    rsp
   1400065f7:	add    BYTE PTR [rcx+0x0],cl
   1400065fa:	outs   dx,BYTE PTR ds:[rsi]
   1400065fb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400065ff:	add    BYTE PTR [rdx+0x0],dh
   140006602:	data16 add BYTE PTR [rcx+0x0],ah
   140006606:	movsxd eax,DWORD PTR [rax]
   140006608:	add    BYTE PTR gs:[rbx+0x0],dh
   14000660c:	pop    rsp
	...
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rax],dh
   140006619:	add    BYTE PTR [rax+0x0],bh
   14000661c:	and    eax,0x78004900
   140006621:	add    BYTE PTR [rsi],ch
   140006623:	add    BYTE PTR [rax],al
   140006625:	add    BYTE PTR [rax],al
   140006627:	add    BYTE PTR [rax],dh
   140006629:	add    BYTE PTR [rax+0x0],bh
   14000662c:	and    eax,0x78006c00
   140006631:	add    BYTE PTR [rsi],ch
   140006633:	add    BYTE PTR [rax],al
   140006635:	add    BYTE PTR [rax],al
   140006637:	add    BYTE PTR [rcx+0x0],ah
   14000663a:	ins    BYTE PTR es:[rdi],dx
   14000663b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000663f:	add    BYTE PTR [rdx+0x0],dh
   140006642:	add    BYTE PTR gs:[rsi+0x0],ch
   140006646:	add    BYTE PTR gs:[rdi+0x0],dh
   14000664a:	add    BYTE PTR [rax],al
   14000664c:	add    BYTE PTR [rax],al
   14000664e:	add    BYTE PTR [rax],al
   140006650:	jb     0x140006652
   140006652:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140006657:	add    BYTE PTR [rcx+0x0],ah
   14000665a:	jae    0x14000665c
   14000665c:	add    BYTE PTR gs:[rax],al
   14000665f:	add    BYTE PTR [rsi+0x0],ah
   140006662:	ins    BYTE PTR es:[rdi],dx
   140006663:	add    BYTE PTR [rbp+0x0],dh
   140006666:	jae    0x140006668
   140006668:	push   0x6e006400
   14000666d:	add    BYTE PTR [rbx+0x0],dh
	...
   140006678:	add    BYTE PTR fs:[rcx+0x0],ch
   14000667c:	jae    0x14000667e
   14000667e:	jo     0x140006680
   140006680:	ins    BYTE PTR es:[rdi],dx
   140006681:	add    BYTE PTR [rcx+0x0],ah
   140006684:	jns    0x140006686
   140006686:	add    BYTE PTR fs:[rsi+0x0],ch
   14000668a:	jae    0x14000668c
   14000668c:	add    BYTE PTR [rax],al
   14000668e:	add    BYTE PTR [rax],al
   140006690:	jb     0x140006692
   140006692:	add    BYTE PTR gs:[rdi+0x0],ah
   140006696:	imul   eax,DWORD PTR [rax],0x740073
   14000669c:	add    BYTE PTR gs:[rdx+0x0],dh
   1400066a0:	add    BYTE PTR fs:[rsi+0x0],ch
   1400066a4:	jae    0x1400066a6
   1400066a6:	add    BYTE PTR [rax],al
   1400066a8:	jae    0x1400066aa
   1400066aa:	push   0x77006f00
   1400066af:	add    BYTE PTR [rbx+0x0],ah
   1400066b2:	ins    BYTE PTR es:[rdi],dx
   1400066b3:	add    BYTE PTR [rcx+0x0],ah
   1400066b6:	jae    0x1400066b8
   1400066b8:	jae    0x1400066ba
   1400066ba:	imul   eax,DWORD PTR [rax],0x64
   1400066c0:	jae    0x1400066c2
   1400066c2:	add    BYTE PTR gs:[rax+rax*1+0x63],dh
   1400066c7:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400066cb:	add    BYTE PTR [rbx+0x0],dh
   1400066ce:	jae    0x1400066d0
   1400066d0:	imul   eax,DWORD PTR [rax],0x64
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	jae    0x1400066da
   1400066da:	push   0x77006f00
   1400066df:	add    BYTE PTR [rbx+0x0],ah
   1400066e2:	ins    BYTE PTR es:[rdi],dx
   1400066e3:	add    BYTE PTR [rcx+0x0],ah
   1400066e6:	jae    0x1400066e8
   1400066e8:	jae    0x1400066ea
   1400066ea:	imul   eax,DWORD PTR [rax],0x360064
	...
   1400066f8:	jae    0x1400066fa
   1400066fa:	add    BYTE PTR gs:[rax+rax*1+0x63],dh
   1400066ff:	add    BYTE PTR [rax+rax*1+0x61],ch
   140006703:	add    BYTE PTR [rbx+0x0],dh
   140006706:	jae    0x140006708
   140006708:	imul   eax,DWORD PTR [rax],0x360064
   14000670e:	add    BYTE PTR [rax],al
   140006710:	add    BYTE PTR fs:[rbp+0x0],ah
   140006714:	(bad)  
   140006715:	add    BYTE PTR [rbp+0x0],dh
   140006718:	add    BYTE PTR [eax],al
   14000671b:	add    BYTE PTR [rax],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rcx+0x0],ah
   140006722:	ins    BYTE PTR es:[rdi],dx
   140006723:	add    BYTE PTR [rax+rax*1+0x63],ch
   140006727:	add    BYTE PTR [rdi+0x0],ch
   14000672a:	ins    DWORD PTR es:[rdi],dx
   14000672b:	add    BYTE PTR [rax+0x0],dh
   14000672e:	(bad)  
   14000672f:	add    BYTE PTR [rdx+0x0],dh
   140006732:	je     0x140006734
   140006734:	ins    DWORD PTR es:[rdi],dx
   140006735:	add    BYTE PTR [rbp+0x0],ah
   140006738:	outs   dx,BYTE PTR ds:[rsi]
   140006739:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    BYTE PTR [rdx+0x0],dh
   140006742:	add    BYTE PTR gs:[rsi+0x0],ch
   140006746:	add    BYTE PTR gs:[rdi+0x0],dh
   14000674a:	add    BYTE PTR ss:[rax],al
   14000674d:	add    BYTE PTR [rax],al
   14000674f:	add    BYTE PTR [rdx+0x0],dh
   140006752:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140006757:	add    BYTE PTR [rcx+0x0],ah
   14000675a:	jae    0x14000675c
   14000675c:	add    BYTE PTR gs:[rsi],dh
	...
   140006773:	add    al,bl
   140006775:	(bad)  
   140006776:	add    BYTE PTR [rax],al
   140006778:	add    al,BYTE PTR [rax]
   14000677a:	add    BYTE PTR [rax],al
   14000677c:	fldenv [rdi]
   14000677e:	add    BYTE PTR [rax],al
   140006780:	add    eax,DWORD PTR [rax]
   140006782:	add    BYTE PTR [rax],al
   140006784:	fisub  DWORD PTR [rdi]
   140006786:	add    BYTE PTR [rax],al
   140006788:	add    al,0x0
   14000678a:	add    BYTE PTR [rax],al
   14000678c:	(bad)  [rdi]
   14000678e:	add    BYTE PTR [rax],al
   140006790:	add    eax,0xdc000000
   140006795:	(bad)  
   140006796:	add    BYTE PTR [rax],al
   140006798:	(bad)  
   140006799:	add    BYTE PTR [rax],al
   14000679b:	add    ch,bl
   14000679d:	(bad)  
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	or     BYTE PTR [rax],al
   1400067a2:	add    BYTE PTR [rax],al
   1400067a4:	fisub  WORD PTR [rdi]
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	or     DWORD PTR [rax],eax
   1400067aa:	add    BYTE PTR [rax],al
   1400067ac:	fbld   TBYTE PTR [rdi]
   1400067ae:	add    BYTE PTR [rax],al
   1400067b0:	or     al,BYTE PTR [rax]
   1400067b2:	add    BYTE PTR [rax],al
   1400067b4:	loopne 0x1400067dd
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	or     eax,DWORD PTR [rax]
   1400067ba:	add    BYTE PTR [rax],al
   1400067bc:	loope  0x1400067e5
   1400067be:	add    BYTE PTR [rax],al
   1400067c0:	or     al,0x0
   1400067c2:	add    BYTE PTR [rax],al
   1400067c4:	loop   0x1400067ed
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	or     eax,0xe3000000
   1400067cd:	(bad)  
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	(bad)  
   1400067d1:	add    BYTE PTR [rax],al
   1400067d3:	add    ah,ah
   1400067d5:	(bad)  
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	sldt   WORD PTR [rax]
   1400067db:	add    ch,ah
   1400067dd:	(bad)  
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	adc    BYTE PTR [rax],al
   1400067e2:	add    BYTE PTR [rax],al
   1400067e4:	out    0x27,al
   1400067e6:	add    BYTE PTR [rax],al
   1400067e8:	adc    DWORD PTR [rax],eax
   1400067ea:	add    BYTE PTR [rax],al
   1400067ec:	out    0x27,eax
   1400067ee:	add    BYTE PTR [rax],al
   1400067f0:	adc    al,BYTE PTR [rax]
   1400067f2:	add    BYTE PTR [rax],al
   1400067f4:	call   0x153006820
   1400067f9:	add    BYTE PTR [rax],al
   1400067fb:	add    cl,ch
   1400067fd:	(bad)  
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	adc    al,0x0
   140006802:	add    BYTE PTR [rax],al
   140006804:	(bad)  
   140006805:	(bad)  
	...
   14000680e:	add    BYTE PTR [rax],al
   140006810:	add    DWORD PTR [rax],eax
   140006812:	add    BYTE PTR [rax],al
   140006814:	push   rdi
   140006815:	(bad)  
   140006816:	add    BYTE PTR [rax],al
   140006818:	(bad)  
   140006819:	add    BYTE PTR [rax],al
   14000681b:	add    BYTE PTR [rax+0x27],bl
   14000681e:	add    BYTE PTR [rax],al
   140006820:	or     DWORD PTR [rax],eax
   140006822:	add    BYTE PTR [rax],al
   140006824:	pop    rcx
   140006825:	(bad)  
   140006826:	add    BYTE PTR [rax],al
   140006828:	sldt   WORD PTR [rax]
   14000682b:	add    BYTE PTR [rdx+0x27],bl
   14000682e:	add    BYTE PTR [rax],al
   140006830:	sbb    BYTE PTR [rax],al
   140006832:	add    BYTE PTR [rax],al
   140006834:	pop    rbx
   140006835:	(bad)  
   140006836:	add    BYTE PTR [rax],al
   140006838:	(bad)  
   140006839:	add    BYTE PTR [rax],al
   14000683b:	add    BYTE PTR [rdi+riz*1+0x0],bl
   14000683f:	add    BYTE PTR [rax+rax*1],bl
   140006842:	add    BYTE PTR [rax],al
   140006844:	pop    rbp
   140006845:	(bad)  
   140006846:	add    BYTE PTR [rax],al
   140006848:	add    DWORD PTR [rax],0x0
   14000684b:	add    BYTE PTR [rsi+0x27],bl
   14000684e:	add    BYTE PTR [rax],al
   140006850:	nop
   140006851:	add    BYTE PTR [rax],al
   140006853:	add    BYTE PTR [rdi+0x27],dl
   140006856:	add    BYTE PTR [rax],al
   140006858:	rex.RXB add BYTE PTR [r8],r8b
   14000685b:	add    BYTE PTR [rdi+0x27],bl
   14000685e:	add    BYTE PTR [rax],al
   140006860:	in     eax,dx
   140006861:	add    BYTE PTR [rax],al
   140006863:	add    BYTE PTR [rax+0x27],ah
   140006866:	add    BYTE PTR [rax],al
   140006868:	repz add BYTE PTR [rax],al
   14000686b:	add    BYTE PTR [rcx+0x27],ah
   14000686e:	add    BYTE PTR [rax],al
   140006870:	hlt    
   140006871:	add    BYTE PTR [rax],al
   140006873:	add    BYTE PTR [rdx+0x27],ah
   140006876:	add    BYTE PTR [rax],al
   140006878:	add    DWORD PTR [rax],eax
   14000687a:	add    BYTE PTR [rax],al
   14000687c:	adc    al,0x27
   14000687e:	add    BYTE PTR [rax],al
   140006880:	add    al,BYTE PTR [rax]
   140006882:	add    BYTE PTR [rax],al
   140006884:	es (bad) 
   140006886:	add    BYTE PTR [rax],al
   140006888:	add    al,0x0
   14000688a:	add    BYTE PTR [rax],al
   14000688c:	and    al,0x27
   14000688e:	add    BYTE PTR [rax],al
   140006890:	or     BYTE PTR [rax],al
   140006892:	add    BYTE PTR [rax],al
   140006894:	and    eax,0x25000027
   140006899:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14000689d:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e00cca3
   1400068a3:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e00cca9
   1400068a9:	add    BYTE PTR [rip+0x6400],ah        # 0x14000ccaf
   1400068af:	add    BYTE PTR [rip+0x6400],ah        # 0x14000ccb5
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rip+0x5300],ah        # 0x14000bbbd
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rip+0x32003000],ah        # 0x1720098c5
   1400068c5:	add    BYTE PTR [rax+0x0],bh
	...
   1400068d0:	and    eax,0x32003000
   1400068d5:	add    BYTE PTR [rax+0x0],bl
   1400068d8:	sub    eax,0x0
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    dl,ch
   1400068e1:	sub    DWORD PTR [rax],eax
   1400068e3:	add    bl,ch
   1400068e5:	sub    DWORD PTR [rax],eax
   1400068e7:	add    ah,ch
   1400068e9:	sub    DWORD PTR [rax],eax
   1400068eb:	add    ch,ch
   1400068ed:	sub    DWORD PTR [rax],eax
   1400068ef:	add    dh,ch
   1400068f1:	sub    DWORD PTR [rax],eax
   1400068f3:	add    BYTE PTR [rax],al
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    BYTE PTR [rdi+0x0],cl
   1400068fa:	jne    0x1400068fc
   1400068fc:	je     0x1400068fe
   1400068fe:	jo     0x140006900
   140006900:	jne    0x140006902
   140006902:	je     0x140006904
   140006904:	add    BYTE PTR [r14+0x0],r13b
   140006908:	movsxd eax,DWORD PTR [rax]
   14000690a:	outs   dx,DWORD PTR ds:[rsi]
   14000690b:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000690f:	add    BYTE PTR [rsi+0x0],ch
   140006912:	add    BYTE PTR [eax],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rbp+0x0],dl
   14000691a:	outs   dx,BYTE PTR ds:[rsi]
   14000691b:	add    BYTE PTR [rcx+0x0],ch
   14000691e:	movsxd eax,DWORD PTR [rax]
   140006920:	outs   dx,DWORD PTR ds:[rsi]
   140006921:	add    BYTE PTR [rax+rax*1+0x65],ah
   140006925:	add    BYTE PTR [rax],al
   140006927:	add    BYTE PTR [rcx+0x0],al
   14000692a:	outs   dx,BYTE PTR ds:[rsi]
   14000692b:	add    BYTE PTR [rbx+0x0],dh
   14000692e:	imul   eax,DWORD PTR [rax],0x0
   140006934:	add    BYTE PTR [rax],al
   140006936:	add    BYTE PTR [rax],al
   140006938:	push   rbp
   140006939:	add    BYTE PTR [rax+rax*1+0x46],dl
   14000693d:	add    BYTE PTR [rax],bh
	...
   140006947:	add    BYTE PTR [rbp+0x0],dl
   14000694a:	push   rsp
   14000694b:	add    BYTE PTR [rsi+0x0],al
   14000694e:	sub    eax,0x3800
   140006953:	add    bh,bh
   140006955:	inc    BYTE PTR [rax]
   140006957:	add    bh,ch
   140006959:	mov    ebx,0xbf
   14000695e:	add    BYTE PTR [rax],al
   140006960:	and    eax,0x73006c00
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rsi+0x55],cl
   14000696a:	rex.WR
   14000696b:	rex.WR add BYTE PTR [rax],r8b
   14000696e:	add    BYTE PTR [rax],al
   140006970:	pop    rdx
   140006971:	rex.RB push r10
   140006973:	rex.WRXB add BYTE PTR [r8],r8b
   140006976:	add    BYTE PTR [rax],al
   140006978:	add    BYTE PTR [r8],al
   14000697b:	add    BYTE PTR [rsi+0x53],cl
   14000697e:	add    BYTE PTR [rax],al
   140006980:	rex.WRB
   140006981:	add    BYTE PTR [rax],r8b
   140006984:	rex.WRB
   140006985:	rex.RX add BYTE PTR [rax],r8b
   140006988:	rex.XB
   140006989:	rex.WRX
   14000698a:	rex.B
   14000698b:	rex.WRB
   14000698c:	add    BYTE PTR [r8],r8b
   14000698f:	add    BYTE PTR [rbx+0x4f],dl
   140006992:	add    BYTE PTR [r13+0x42],cl
   140006996:	add    BYTE PTR [rax],al
   140006998:	rex.WRB
   140006999:	rex.RXB add BYTE PTR [r8],r8b
   14000699c:	rex.WRB push r10
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	push   rdi
   1400069a1:	rex.WXB push r11
   1400069a3:	add    BYTE PTR [rax+0x54],dl
   1400069a6:	push   rdx
   1400069a7:	add    BYTE PTR [rax+0x49],cl
   1400069aa:	rex.WRX
   1400069ab:	rex.RX
   1400069ac:	rex.WRXB add BYTE PTR [r8],r8b
   1400069af:	add    BYTE PTR [rbp+0x49],cl
   1400069b2:	rex.WRX
   1400069b3:	rex.RX
   1400069b4:	rex.WRXB add BYTE PTR [r8],r8b
   1400069b7:	add    BYTE PTR [rbp+0x58],cl
   1400069ba:	add    BYTE PTR [rax],al
   1400069bc:	push   rsp
   1400069bd:	pop    rax
   1400069be:	push   rsp
   1400069bf:	add    BYTE PTR [rdx+0x50],dl
   1400069c2:	add    BYTE PTR [rax],al
   1400069c4:	rex.B
   1400069c5:	rex.RX push rbx
   1400069c7:	rex.R
   1400069c8:	rex.X add BYTE PTR [rax],al
   1400069cb:	add    BYTE PTR [rax+0x32],bl
   1400069ce:	xor    eax,0x44534900
   1400069d3:	rex.WRX add BYTE PTR [rax],r8b
   1400069d6:	add    BYTE PTR [rax],al
   1400069d8:	push   rdx
   1400069d9:	push   rsp
   1400069da:	add    BYTE PTR [rax],al
   1400069dc:	rex.WRX push rbx
   1400069de:	push   r8
	...
   1400069e8:	rex.WRX push rbx
   1400069ea:	push   r8
   1400069ec:	push   rax
   1400069ed:	push   rsp
   1400069ee:	push   rdx
   1400069ef:	add    BYTE PTR [rbx+0x49],dl
   1400069f2:	rex.RXB add BYTE PTR [r11+0x45],r9b
   1400069f6:	pop    rcx
   1400069f7:	add    BYTE PTR [rax+0x58],dl
   1400069fa:	add    BYTE PTR [rax],al
   1400069fc:	rex.RXB push r8
   1400069fe:	rex.WRXB push r11
   140006a00:	add    BYTE PTR [rax],al
   140006a02:	add    BYTE PTR [rax],al
   140006a04:	rex.B
   140006a05:	rex.B
   140006a06:	rex.B
   140006a07:	add    BYTE PTR [r8],al
   140006a0a:	add    BYTE PTR [rax],al
   140006a0c:	rex.WR
   140006a0d:	rex.WRXB
   140006a0e:	rex.XB add BYTE PTR [r14+0x58],cl
   140006a12:	push   rsp
   140006a13:	add    BYTE PTR [rbp+0x49],al
   140006a16:	add    BYTE PTR [rsi+0x49],r9b
   140006a1a:	rex.WRB
   140006a1b:	rex.WR
   140006a1c:	rex.WRXB
   140006a1d:	rex.XB add BYTE PTR [r8],al
   140006a20:	push   rbx
   140006a21:	push   rdx
   140006a22:	push   rsi
   140006a23:	add    BYTE PTR [rcx+0x54],al
   140006a26:	rex.WRB
   140006a27:	add    BYTE PTR [r8],al
   140006a2a:	add    BYTE PTR [rax],al
   140006a2c:	rex.WRX
   140006a2d:	push   r8
   140006a2f:	push   rsp
   140006a30:	push   rdx
   140006a31:	add    BYTE PTR [rax],al
   140006a33:	add    BYTE PTR [rbx+0x58],cl
   140006a36:	add    BYTE PTR [rax],al
   140006a38:	rex.XB
   140006a39:	rex.RB push r10
   140006a3b:	push   rsp
   140006a3c:	add    BYTE PTR [rax],al
   140006a3e:	add    BYTE PTR [rax],al
   140006a40:	rex.B
   140006a41:	add    BYTE PTR ss:[rax],al
   140006a44:	rex.R
   140006a45:	rex.WRX
   140006a46:	rex.B
   140006a47:	rex.WRB
   140006a48:	add    BYTE PTR [r8],r8b
   140006a4b:	add    BYTE PTR [rbx+0x49],dl
   140006a4e:	rex.WRX
   140006a4f:	rex.WXB add BYTE PTR [r8],al
   140006a52:	add    BYTE PTR [rax],al
   140006a54:	rex.WRXB push r8
   140006a56:	push   rsp
   140006a57:	add    BYTE PTR [rdx+rsi*1],dh
   140006a5a:	add    BYTE PTR [rax],al
   140006a5c:	rex.R push rbx
   140006a5e:	add    BYTE PTR [rax],al
   140006a60:	xor    al,0x34
   140006a62:	add    BYTE PTR [rax],al
   140006a64:	xor    al,0x35
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	push   rdx
   140006a69:	push   rdx
   140006a6a:	push   rbx
   140006a6b:	rex.WB
   140006a6c:	rex.RXB add BYTE PTR [r8],r8b
   140006a6f:	add    BYTE PTR [rsi+0x53],cl
   140006a72:	rex.RB
   140006a73:	rex.XB add BYTE PTR [r8],al
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	rex.R
   140006a79:	rex.WRX push rbx
   140006a7b:	rex.WXB
   140006a7c:	rex.RB pop r9
   140006a7e:	add    BYTE PTR [rax],al
   140006a80:	rex.R
   140006a81:	rex.W
   140006a82:	rex.XB
   140006a83:	rex.WB
   140006a84:	add    BYTE PTR [rax],r8b
   140006a87:	add    BYTE PTR [rsi+0x53],cl
   140006a8a:	rex.RB
   140006a8b:	rex.XB xor eax,DWORD PTR [r8]
   140006a8e:	add    BYTE PTR [rax],al
   140006a90:	rex.WRX push rbx
   140006a92:	rex.RB
   140006a93:	rex.XB xor edx,DWORD PTR [r8+0x41]
   140006a97:	push   rdx
   140006a98:	rex.B
   140006a99:	rex.WRB add BYTE PTR [r8],r8b
   140006a9c:	push   rsp
   140006a9d:	rex.WR push rbx
   140006a9f:	add    BYTE PTR [r8],al
   140006aa2:	add    BYTE PTR [rax],al
   140006aa4:	push   rsp
   140006aa5:	rex.WXB
   140006aa6:	rex.RB pop r9
   140006aa8:	add    BYTE PTR [rax],al
   140006aaa:	add    BYTE PTR [rax],al
   140006aac:	push   rsp
   140006aad:	push   rbx
   140006aae:	rex.WB
   140006aaf:	rex.RXB add BYTE PTR [r8],r8b
   140006ab2:	add    BYTE PTR [rax],al
   140006ab4:	push   rdi
   140006ab5:	rex.WB
   140006ab6:	rex.WRX push rbx
   140006ab8:	add    BYTE PTR [rax],al
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	push   rdi
   140006abd:	rex.WB
   140006abe:	rex.WRX push rbx
   140006ac0:	push   rdx
   140006ac1:	add    BYTE PTR [rax],al
   140006ac3:	add    BYTE PTR [rbp+0x49],dl
   140006ac6:	rex.WRX
   140006ac7:	rex.RX
   140006ac8:	rex.WRXB add BYTE PTR [r8],r8b
   140006acb:	add    BYTE PTR [rbp+0x49],dl
   140006ace:	add    BYTE PTR [rdi+0x49],r8b
   140006ad2:	add    BYTE PTR [rbp+0x4e],r10b
   140006ad6:	push   rbx
   140006ad7:	push   rax
   140006ad8:	rex.RB
   140006ad9:	rex.XB add BYTE PTR [r8],al
   140006adc:	push   rdi
   140006add:	rex.WB
   140006ade:	rex.WRX push rbx
   140006ae0:	sub    eax,0x4e000052
   140006ae5:	rex.X push rbx
   140006ae7:	push   rsp
   140006ae8:	push   r12
   140006aea:	add    BYTE PTR [rax],al
   140006aec:	rex.B
   140006aed:	rex.R
   140006aee:	rex.R push rdx
   140006af0:	push   rbx
   140006af1:	add    BYTE PTR [rax],al
   140006af3:	add    BYTE PTR [rcx+0x58],cl
   140006af6:	rex.RX push rdx
   140006af8:	add    BYTE PTR [rax],al
   140006afa:	add    BYTE PTR [rax],al
   140006afc:	pop    r8
   140006afe:	rex.RX push rdx
   140006b00:	add    BYTE PTR [rax],al
   140006b02:	add    BYTE PTR [rax],al
   140006b04:	rex.WRB
   140006b05:	rex.B
   140006b06:	rex.WB
   140006b07:	rex.WR
   140006b08:	rex.X add BYTE PTR [rax],al
   140006b0b:	add    BYTE PTR [rbp+0x41],cl
   140006b0e:	rex.WB
   140006b0f:	rex.WR
   140006b10:	add    BYTE PTR [r8],al
   140006b13:	add    BYTE PTR [rcx+0x4c],al
   140006b16:	rex.WR add BYTE PTR [rip+0x7500],r12b        # 0x14000e01d
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rax+0x69],dh
   140006b22:	add    BYTE PTR [rax+0x1],al
	...
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    BYTE PTR [rax+0x69],bh
   140006b32:	add    BYTE PTR [rax+0x1],al
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    BYTE PTR [rcx],al
   140006b39:	add    BYTE PTR [rax],al
   140006b3b:	add    BYTE PTR [rax],al
   140006b3d:	add    BYTE PTR [rax],al
   140006b3f:	add    BYTE PTR [rcx+rbp*2+0x0],bh
   140006b43:	rex add DWORD PTR [rax],eax
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	add    al,BYTE PTR [rax]
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	add    BYTE PTR [rax],al
   140006b4e:	add    BYTE PTR [rax],al
   140006b50:	sub    BYTE PTR [rcx+0x0],0x40
   140006b54:	add    DWORD PTR [rax],eax
   140006b56:	add    BYTE PTR [rax],al
   140006b58:	add    eax,DWORD PTR [rax]
   140006b5a:	add    BYTE PTR [rax],al
   140006b5c:	add    BYTE PTR [rax],al
   140006b5e:	add    BYTE PTR [rax],al
   140006b60:	test   BYTE PTR [rcx+0x0],ch
   140006b63:	rex add DWORD PTR [rax],eax
   140006b66:	add    BYTE PTR [rax],al
   140006b68:	add    al,0x0
   140006b6a:	add    BYTE PTR [rax],al
   140006b6c:	add    BYTE PTR [rax],al
   140006b6e:	add    BYTE PTR [rax],al
   140006b70:	mov    BYTE PTR [rcx+0x0],ch
   140006b73:	rex add DWORD PTR [rax],eax
   140006b76:	add    BYTE PTR [rax],al
   140006b78:	add    eax,0x0
   140006b7d:	add    BYTE PTR [rax],al
   140006b7f:	add    BYTE PTR [rax+0x1400069],dl
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rsi],al
   140006b89:	add    BYTE PTR [rax],al
   140006b8b:	add    BYTE PTR [rax],al
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    BYTE PTR [rcx+rbp*2+0x14000],dl
   140006b96:	add    BYTE PTR [rax],al
   140006b98:	(bad)  
   140006b99:	add    BYTE PTR [rax],al
   140006b9b:	add    BYTE PTR [rax],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rax+0x1400069],bl
   140006ba5:	add    BYTE PTR [rax],al
   140006ba7:	add    BYTE PTR [rax],cl
   140006ba9:	add    BYTE PTR [rax],al
   140006bab:	add    BYTE PTR [rax],al
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	add    BYTE PTR [rcx+rbp*2+0x14000],bl
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	or     DWORD PTR [rax],eax
   140006bba:	add    BYTE PTR [rax],al
   140006bbc:	add    BYTE PTR [rax],al
   140006bbe:	add    BYTE PTR [rax],al
   140006bc0:	push   0x1400069
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rdx],cl
   140006bc9:	add    BYTE PTR [rax],al
   140006bcb:	add    BYTE PTR [rax],al
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rax+0x1400069],ah
   140006bd5:	add    BYTE PTR [rax],al
   140006bd7:	add    BYTE PTR [rbx],cl
   140006bd9:	add    BYTE PTR [rax],al
   140006bdb:	add    BYTE PTR [rax],al
   140006bdd:	add    BYTE PTR [rax],al
   140006bdf:	add    BYTE PTR [rcx+rbp*2+0x14000],ah
   140006be6:	add    BYTE PTR [rax],al
   140006be8:	or     al,0x0
   140006bea:	add    BYTE PTR [rax],al
   140006bec:	add    BYTE PTR [rax],al
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	test   al,0x69
   140006bf2:	add    BYTE PTR [rax+0x1],al
   140006bf5:	add    BYTE PTR [rax],al
   140006bf7:	add    BYTE PTR [rip+0x0],cl        # 0x140006bfd
   140006bfd:	add    BYTE PTR [rax],al
   140006bff:	add    BYTE PTR [rax+0x1400069],dh
   140006c05:	add    BYTE PTR [rax],al
   140006c07:	add    BYTE PTR [rsi],cl
   140006c09:	add    BYTE PTR [rax],al
   140006c0b:	add    BYTE PTR [rax],al
   140006c0d:	add    BYTE PTR [rax],al
   140006c0f:	add    BYTE PTR [rax+0x1400069],bh
   140006c15:	add    BYTE PTR [rax],al
   140006c17:	add    BYTE PTR [rdi],cl
   140006c19:	add    BYTE PTR [rax],al
   140006c1b:	add    BYTE PTR [rax],al
   140006c1d:	add    BYTE PTR [rax],al
   140006c1f:	add    BYTE PTR [rcx+rbp*2+0x14000],bh
   140006c26:	add    BYTE PTR [rax],al
   140006c28:	adc    BYTE PTR [rax],al
   140006c2a:	add    BYTE PTR [rax],al
   140006c2c:	add    BYTE PTR [rax],al
   140006c2e:	add    BYTE PTR [rax],al
   140006c30:	shr    BYTE PTR [rcx+0x0],0x40
   140006c34:	add    DWORD PTR [rax],eax
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	adc    DWORD PTR [rax],eax
   140006c3a:	add    BYTE PTR [rax],al
   140006c3c:	add    BYTE PTR [rax],al
   140006c3e:	add    BYTE PTR [rax],al
   140006c40:	(bad)  
   140006c41:	imul   eax,DWORD PTR [rax],0x140
   140006c47:	add    BYTE PTR [rdx],dl
   140006c49:	add    BYTE PTR [rax],al
   140006c4b:	add    BYTE PTR [rax],al
   140006c4d:	add    BYTE PTR [rax],al
   140006c4f:	add    ah,cl
   140006c51:	imul   eax,DWORD PTR [rax],0x140
   140006c57:	add    BYTE PTR [rbx],dl
   140006c59:	add    BYTE PTR [rax],al
   140006c5b:	add    BYTE PTR [rax],al
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    al,dl
   140006c61:	imul   eax,DWORD PTR [rax],0x140
   140006c67:	add    BYTE PTR [rax+rax*1],dl
   140006c6a:	add    BYTE PTR [rax],al
   140006c6c:	add    BYTE PTR [rax],al
   140006c6e:	add    BYTE PTR [rax],al
   140006c70:	fsubr  DWORD PTR [rcx+0x0]
   140006c73:	rex add DWORD PTR [rax],eax
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	adc    eax,0x0
   140006c7d:	add    BYTE PTR [rax],al
   140006c7f:	add    ah,bl
   140006c81:	imul   eax,DWORD PTR [rax],0x140
   140006c87:	add    BYTE PTR [rsi],dl
   140006c89:	add    BYTE PTR [rax],al
   140006c8b:	add    BYTE PTR [rax],al
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    al,ch
   140006c91:	imul   eax,DWORD PTR [rax],0x140
   140006c97:	add    BYTE PTR [rdi],dl
   140006c99:	add    BYTE PTR [rax],al
   140006c9b:	add    BYTE PTR [rax],al
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    al,dh
   140006ca1:	imul   eax,DWORD PTR [rax],0x140
   140006ca7:	add    BYTE PTR [rax],bl
   140006ca9:	add    BYTE PTR [rax],al
   140006cab:	add    BYTE PTR [rax],al
   140006cad:	add    BYTE PTR [rax],al
   140006caf:	add    ah,dh
   140006cb1:	imul   eax,DWORD PTR [rax],0x140
   140006cb7:	add    BYTE PTR [rcx],bl
   140006cb9:	add    BYTE PTR [rax],al
   140006cbb:	add    BYTE PTR [rax],al
   140006cbd:	add    BYTE PTR [rax],al
   140006cbf:	add    al,bh
   140006cc1:	imul   eax,DWORD PTR [rax],0x140
   140006cc7:	add    BYTE PTR [rdx],bl
   140006cc9:	add    BYTE PTR [rax],al
   140006ccb:	add    BYTE PTR [rax],al
   140006ccd:	add    BYTE PTR [rax],al
   140006ccf:	add    ah,bh
   140006cd1:	imul   eax,DWORD PTR [rax],0x140
   140006cd7:	add    BYTE PTR [rbx],bl
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rax],al
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rdx+rbp*2],al
   140006ce2:	add    BYTE PTR [rax+0x1],al
   140006ce5:	add    BYTE PTR [rax],al
   140006ce7:	add    BYTE PTR [rax+rax*1],bl
   140006cea:	add    BYTE PTR [rax],al
   140006cec:	add    BYTE PTR [rax],al
   140006cee:	add    BYTE PTR [rax],al
   140006cf0:	or     al,0x6a
   140006cf2:	add    BYTE PTR [rax+0x1],al
   140006cf5:	add    BYTE PTR [rax],al
   140006cf7:	add    BYTE PTR [rip+0x0],bl        # 0x140006cfd
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rax],dl
   140006d01:	push   0x0
   140006d03:	rex add DWORD PTR [rax],eax
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	(bad)  
   140006d09:	add    BYTE PTR [rax],al
   140006d0b:	add    BYTE PTR [rax],al
   140006d0d:	add    BYTE PTR [rax],al
   140006d0f:	add    BYTE PTR [rdx+rbp*2],dl
   140006d12:	add    BYTE PTR [rax+0x1],al
   140006d15:	add    BYTE PTR [rax],al
   140006d17:	add    BYTE PTR [rdi],bl
   140006d19:	add    BYTE PTR [rax],al
   140006d1b:	add    BYTE PTR [rax],al
   140006d1d:	add    BYTE PTR [rax],al
   140006d1f:	add    BYTE PTR [rax],bl
   140006d21:	push   0x0
   140006d23:	rex add DWORD PTR [rax],eax
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	and    BYTE PTR [rax],al
   140006d2a:	add    BYTE PTR [rax],al
   140006d2c:	add    BYTE PTR [rax],al
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	and    BYTE PTR [rdx+0x0],ch
   140006d33:	rex add DWORD PTR [rax],eax
   140006d36:	add    BYTE PTR [rax],al
   140006d38:	and    DWORD PTR [rax],eax
   140006d3a:	add    BYTE PTR [rax],al
   140006d3c:	add    BYTE PTR [rax],al
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	and    al,0x6a
   140006d42:	add    BYTE PTR [rax+0x1],al
   140006d45:	add    BYTE PTR [rax],al
   140006d47:	add    BYTE PTR [rdx],ah
   140006d49:	add    BYTE PTR [rax],al
   140006d4b:	add    BYTE PTR [rax],al
   140006d4d:	add    BYTE PTR [rax],al
   140006d4f:	add    BYTE PTR [rdx+rbp*2],ch
   140006d52:	add    BYTE PTR [rax+0x1],al
   140006d55:	add    BYTE PTR [rax],al
   140006d57:	add    BYTE PTR [rbx],ah
   140006d59:	add    BYTE PTR [rax],al
   140006d5b:	add    BYTE PTR [rax],al
   140006d5d:	add    BYTE PTR [rax],al
   140006d5f:	add    BYTE PTR [rdx+rbp*2],dh
   140006d62:	add    BYTE PTR [rax+0x1],al
   140006d65:	add    BYTE PTR [rax],al
   140006d67:	add    BYTE PTR [rax+rax*1],ah
   140006d6a:	add    BYTE PTR [rax],al
   140006d6c:	add    BYTE PTR [rax],al
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	cmp    BYTE PTR [rdx+0x0],ch
   140006d73:	rex add DWORD PTR [rax],eax
   140006d76:	add    BYTE PTR [rax],al
   140006d78:	and    eax,0x0
   140006d7d:	add    BYTE PTR [rax],al
   140006d7f:	add    BYTE PTR [rax+0x6a],al
   140006d82:	add    BYTE PTR [rax+0x1],al
   140006d85:	add    BYTE PTR [rax],al
   140006d87:	add    BYTE PTR [rsi],ah
   140006d89:	add    BYTE PTR [rax],al
   140006d8b:	add    BYTE PTR [rax],al
   140006d8d:	add    BYTE PTR [rax],al
   140006d8f:	add    BYTE PTR [rdx+rbp*2+0x0],al
   140006d93:	rex add DWORD PTR [rax],eax
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	(bad)  
   140006d99:	add    BYTE PTR [rax],al
   140006d9b:	add    BYTE PTR [rax],al
   140006d9d:	add    BYTE PTR [rax],al
   140006d9f:	add    BYTE PTR [rdx+rbp*2+0x0],cl
   140006da3:	rex add DWORD PTR [rax],eax
   140006da6:	add    BYTE PTR [rax],al
   140006da8:	sub    BYTE PTR [rax],al
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	add    BYTE PTR [rax],al
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	push   rsp
   140006db1:	push   0x0
   140006db3:	rex add DWORD PTR [rax],eax
   140006db6:	add    BYTE PTR [rax],al
   140006db8:	sub    DWORD PTR [rax],eax
   140006dba:	add    BYTE PTR [rax],al
   140006dbc:	add    BYTE PTR [rax],al
   140006dbe:	add    BYTE PTR [rax],al
   140006dc0:	pop    rax
   140006dc1:	push   0x0
   140006dc3:	rex add DWORD PTR [rax],eax
   140006dc6:	add    BYTE PTR [rax],al
   140006dc8:	sub    al,BYTE PTR [rax]
   140006dca:	add    BYTE PTR [rax],al
   140006dcc:	add    BYTE PTR [rax],al
   140006dce:	add    BYTE PTR [rax],al
   140006dd0:	pop    rsp
   140006dd1:	push   0x0
   140006dd3:	rex add DWORD PTR [rax],eax
   140006dd6:	add    BYTE PTR [rax],al
   140006dd8:	sub    eax,DWORD PTR [rax]
   140006dda:	add    BYTE PTR [rax],al
   140006ddc:	add    BYTE PTR [rax],al
   140006dde:	add    BYTE PTR [rax],al
   140006de0:	(bad)  
   140006de1:	push   0x0
   140006de3:	rex add DWORD PTR [rax],eax
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	sub    al,0x0
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	add    BYTE PTR [rax],al
   140006dee:	add    BYTE PTR [rax],al
   140006df0:	fs push 0x0
   140006df3:	rex add DWORD PTR [rax],eax
   140006df6:	add    BYTE PTR [rax],al
   140006df8:	sub    eax,0x0
   140006dfd:	add    BYTE PTR [rax],al
   140006dff:	add    BYTE PTR [rax+0x6a],ch
   140006e02:	add    BYTE PTR [rax+0x1],al
   140006e05:	add    BYTE PTR [rax],al
   140006e07:	add    BYTE PTR [rsi],ch
   140006e09:	add    BYTE PTR [rax],al
   140006e0b:	add    BYTE PTR [rax],al
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    BYTE PTR [rax+0x6a],dh
   140006e12:	add    BYTE PTR [rax+0x1],al
   140006e15:	add    BYTE PTR [rax],al
   140006e17:	add    BYTE PTR [rdi],ch
   140006e19:	add    BYTE PTR [rax],al
   140006e1b:	add    BYTE PTR [rax],al
   140006e1d:	add    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rax+0x6a],bh
   140006e22:	add    BYTE PTR [rax+0x1],al
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rax],dh
   140006e29:	add    BYTE PTR [rax],al
   140006e2b:	add    BYTE PTR [rax],al
   140006e2d:	add    BYTE PTR [rax],al
   140006e2f:	add    BYTE PTR [rax+0x140006a],al
   140006e35:	add    BYTE PTR [rax],al
   140006e37:	add    BYTE PTR [rcx],dh
   140006e39:	add    BYTE PTR [rax],al
   140006e3b:	add    BYTE PTR [rax],al
   140006e3d:	add    BYTE PTR [rax],al
   140006e3f:	add    BYTE PTR [rax+0x140006a],cl
   140006e45:	add    BYTE PTR [rax],al
   140006e47:	add    BYTE PTR [rdx],dh
   140006e49:	add    BYTE PTR [rax],al
   140006e4b:	add    BYTE PTR [rax],al
   140006e4d:	add    BYTE PTR [rax],al
   140006e4f:	add    BYTE PTR [rax+0x140006a],dl
   140006e55:	add    BYTE PTR [rax],al
   140006e57:	add    BYTE PTR [rbx],dh
   140006e59:	add    BYTE PTR [rax],al
   140006e5b:	add    BYTE PTR [rax],al
   140006e5d:	add    BYTE PTR [rax],al
   140006e5f:	add    BYTE PTR [rdx+rbp*2+0x14000],bl
   140006e66:	add    BYTE PTR [rax],al
   140006e68:	xor    al,0x0
   140006e6a:	add    BYTE PTR [rax],al
   140006e6c:	add    BYTE PTR [rax],al
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006e71:	push   0x0
   140006e73:	rex add DWORD PTR [rax],eax
   140006e76:	add    BYTE PTR [rax],al
   140006e78:	stc    
   140006e79:	add    BYTE PTR [rax],al
   140006e7b:	add    BYTE PTR [rax],al
   140006e7d:	add    BYTE PTR [rax],al
   140006e7f:	add    BYTE PTR [rdx+rbp*2+0x14000],ch
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	cli    
   140006e89:	add    BYTE PTR [rax],al
   140006e8b:	add    BYTE PTR [rax],al
   140006e8d:	add    BYTE PTR [rax],al
   140006e8f:	add    BYTE PTR [rdx+rbp*2+0x14000],dh
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	add    edi,edi
   140006e9a:	add    BYTE PTR [rax],al
   140006e9c:	add    BYTE PTR [rax],al
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	mov    esp,0x140006a
   140006ea5:	add    BYTE PTR [rax],al
   140006ea7:	add    BYTE PTR [rdx],al
   140006ea9:	inc    DWORD PTR [rax]
   140006eab:	add    BYTE PTR [rax],al
   140006ead:	add    BYTE PTR [rax],al
   140006eaf:	add    ah,al
   140006eb1:	push   0x0
   140006eb3:	rex add DWORD PTR [rax],eax
   140006eb6:	add    BYTE PTR [rax],al
   140006eb8:	add    BYTE PTR fs:[rax],al
   140006ebb:	add    BYTE PTR [rax],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    ah,cl
   140006ec1:	push   0x0
   140006ec3:	rex add DWORD PTR [rax],eax
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	add    BYTE PTR gs:[rax],al
   140006ecb:	add    BYTE PTR [rax],al
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    al,dl
   140006ed1:	push   0x0
   140006ed3:	rex add DWORD PTR [rax],eax
   140006ed6:	add    BYTE PTR [rax],al
   140006ed8:	data16 add BYTE PTR [rax],al
   140006edb:	add    BYTE PTR [rax],al
   140006edd:	add    BYTE PTR [rax],al
   140006edf:	add    ah,dl
   140006ee1:	push   0x0
   140006ee3:	rex add DWORD PTR [rax],eax
   140006ee6:	add    BYTE PTR [rax],al
   140006ee8:	add    BYTE PTR [eax],al
   140006eeb:	add    BYTE PTR [rax],al
   140006eed:	add    BYTE PTR [rax],al
   140006eef:	add    ah,bl
   140006ef1:	push   0x0
   140006ef3:	rex add DWORD PTR [rax],eax
   140006ef6:	add    BYTE PTR [rax],al
   140006ef8:	add    bh,bh
   140006efa:	add    BYTE PTR [rax],al
   140006efc:	add    BYTE PTR [rax],al
   140006efe:	add    BYTE PTR [rax],al
   140006f00:	in     al,0x6a
   140006f02:	add    BYTE PTR [rax+0x1],al
   140006f05:	add    BYTE PTR [rax],al
   140006f07:	add    BYTE PTR [rdx],al
   140006f09:	inc    DWORD PTR [rax]
   140006f0b:	add    BYTE PTR [rax],al
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    ah,ch
   140006f11:	push   0x0
   140006f13:	rex add DWORD PTR [rax],eax
   140006f16:	add    BYTE PTR [rax],al
   140006f18:	clc    
   140006f19:	add    BYTE PTR [rax],al
   140006f1b:	add    BYTE PTR [rax],al
   140006f1d:	add    BYTE PTR [rax],al
   140006f1f:	add    BYTE PTR [rdx+rbp*2+0x14000],ah
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	stc    
   140006f29:	add    BYTE PTR [rax],al
   140006f2b:	add    BYTE PTR [rax],al
   140006f2d:	add    BYTE PTR [rax],al
   140006f2f:	add    BYTE PTR [rdx+rbp*2+0x14000],ch
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	cli    
   140006f39:	add    BYTE PTR [rax],al
   140006f3b:	add    BYTE PTR [rax],al
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    ah,dh
   140006f41:	push   0x0
   140006f43:	rex add DWORD PTR [rax],eax
   140006f46:	add    BYTE PTR [rax],al
   140006f48:	sti    
   140006f49:	add    BYTE PTR [rax],al
   140006f4b:	add    BYTE PTR [rax],al
   140006f4d:	add    BYTE PTR [rax],al
   140006f4f:	add    ah,bh
   140006f51:	push   0x0
   140006f53:	rex add DWORD PTR [rax],eax
   140006f56:	add    BYTE PTR [rax],al
   140006f58:	cld    
   140006f59:	add    BYTE PTR [rax],al
   140006f5b:	add    BYTE PTR [rax],al
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rbx+rbp*2],al
   140006f62:	add    BYTE PTR [rax+0x1],al
   140006f65:	add    BYTE PTR [rax],al
   140006f67:	add    ch,bh
   140006f69:	add    BYTE PTR [rax],al
   140006f6b:	add    BYTE PTR [rax],al
   140006f6d:	add    BYTE PTR [rax],al
   140006f6f:	add    BYTE PTR [rbx+rbp*2],cl
   140006f72:	add    BYTE PTR [rax+0x1],al
   140006f75:	add    BYTE PTR [rax],al
   140006f77:	add    dh,bh
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rax],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rbx+rbp*2],al
   140006f82:	add    BYTE PTR [rax+0x1],al
   140006f85:	add    BYTE PTR [rax],al
   140006f87:	add    ch,bh
   140006f89:	add    BYTE PTR [rax],al
   140006f8b:	add    BYTE PTR [rax],al
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rbx+rbp*2],dl
   140006f92:	add    BYTE PTR [rax+0x1],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	add    bh,bh
	...
   140006fad:	add    BYTE PTR [rax],al
   140006faf:	add    BYTE PTR [rax],bl
   140006fb1:	add    BYTE PTR [rax],al
   140006fb3:	add    BYTE PTR [rcx],al
   140006fb5:	add    BYTE PTR [rax],al
   140006fb7:	add    BYTE PTR [rcx],al
   140006fb9:	rex.WX add bl,bpl
   140006fbc:	sbb    bl,BYTE PTR [rbx+0x239111d4]
   140006fc2:	add    BYTE PTR [rax+0x4],dl
   140006fc5:	ja     0x140007020
   140006fc7:	mov    esp,0x18
   140006fcc:	add    DWORD PTR [rax],eax
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	adc    DWORD PTR [rdx+0x0],ecx
   140006fd3:	jmp    0x140006fef
   140006fd5:	fwait
   140006fd6:	(bad)  
   140006fd7:	adc    DWORD PTR [rcx+0x4500023],edx
   140006fdd:	ja     0x140007038
   140006fdf:	mov    esp,0x0
   140006fe4:	movabs ds:0x200000000559f3a,eax
   140006fed:	add    BYTE PTR [rax],al
   140006fef:	add    BYTE PTR [rip+0xffffffffe0000000],ah        # 0x120006ff5
   140006ff5:	jo     0x140006ff7
   140006ff7:	add    al,ah
   140006ff9:	pop    rsp
   140006ffa:	add    BYTE PTR [rax],al
   140006ffc:	add    BYTE PTR [rax],al
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	movabs ds:0xd00000000559f3a,eax
   140007009:	add    BYTE PTR [rax],al
   14000700b:	add    al,ah
   14000700d:	add    DWORD PTR [rax],eax
   14000700f:	add    BYTE PTR [rcx+rsi*2],bl
   140007012:	add    BYTE PTR [rax],al
   140007014:	sbb    al,0x5d
	...
   14000703e:	add    BYTE PTR [rax],al
   140007040:	movabs al,ds:0x0
	...
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rax],cl
   140007099:	nop
   14000709a:	add    BYTE PTR [rax+0x1],al
	...
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rax],ch
   1400070b1:	add    BYTE PTR fs:[rax+0x1],al
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rax],dh
   1400070b9:	add    BYTE PTR fs:[rax+0x1],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rax+0x64],dh
   1400070c2:	add    BYTE PTR [rax+0x1],al
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    BYTE PTR [rax],cl
	...
   1400070d1:	xor    eax,0x0
	...
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	push   rdx
   1400070e1:	push   rbx
   1400070e2:	rex.R push rbx
   1400070e4:	(bad)  
   1400070e5:	push   rdx
   1400070e6:	jmp    QWORD PTR [rbx+0x7c]
   1400070e9:	(bad)  
   1400070ea:	push   rdi
   1400070eb:	rex.RX mov cl,0xa6
   1400070ee:	retf   
   1400070ef:	adc    bl,BYTE PTR [rcx+0x1fdfd3c]
   1400070f5:	add    BYTE PTR [rax],al
   1400070f7:	add    BYTE PTR [rcx+0x70],ch
   1400070fa:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400070fd:	imul   sp,WORD PTR [rdi+0x2e],0x6470
   140007103:	(bad)  
	...
   14000711c:	rex.RXB
   14000711d:	rex.XB push r12
   14000711f:	rex.WR add BYTE PTR [rax],r10b
   140007122:	add    BYTE PTR [rax],al
   140007124:	sub    BYTE PTR [rsi+0x0],al
   140007127:	add    BYTE PTR [rsi],ch
   140007129:	je     0x140007190
   14000712b:	js     0x1400071a1
   14000712d:	and    al,0x6d
   14000712f:	outs   dx,BYTE PTR ds:[rsi]
   140007130:	add    BYTE PTR [rax],al
   140007132:	add    BYTE PTR [rax],al
   140007134:	xor    BYTE PTR [rsi+0x0],dl
   140007137:	add    BYTE PTR [rdx],dl
   140007139:	add    BYTE PTR [rax],al
   14000713b:	add    BYTE PTR [rsi],ch
   14000713d:	je     0x1400071a4
   14000713f:	js     0x1400071b5
   140007141:	and    al,0x6d
   140007143:	outs   dx,BYTE PTR ds:[rsi]
   140007144:	and    al,0x30
   140007146:	xor    BYTE PTR [rax],al
   140007148:	push   rax
   140007149:	push   rsi
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	push   rax
   14000714d:	add    BYTE PTR [rax],al
   14000714f:	add    BYTE PTR [rsi],ch
   140007151:	je     0x1400071b8
   140007153:	js     0x1400071c9
   140007155:	and    al,0x78
   140007157:	add    BYTE PTR [rax],al
   140007159:	(bad)  
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	sub    BYTE PTR [rax+rax*1],al
   14000715f:	add    BYTE PTR [rsi],ch
   140007161:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007169:	add    BYTE PTR [rax],al
   14000716b:	add    BYTE PTR [rax],ch
   14000716d:	add    BYTE PTR fs:[rax],al
   140007170:	adc    BYTE PTR [rax],al
   140007172:	add    BYTE PTR [rax],al
   140007174:	xor    BYTE PTR cs:[rax],dh
   140007177:	movsxd esp,DWORD PTR [rsi+0x67]
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   140007180:	or     BYTE PTR [rax],al
   140007182:	add    BYTE PTR [rax],al
   140007184:	cs rex.XB push r10
   140007187:	push   rsp
   140007188:	and    al,0x58
   14000718a:	rex.XB
   14000718b:	add    BYTE PTR [r8],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	rex
   140007191:	add    BYTE PTR fs:[rax],al
   140007194:	or     BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	cs rex.XB push r10
   14000719b:	push   rsp
   14000719c:	and    al,0x58
   14000719e:	rex.XB
   14000719f:	rex.B
   1400071a0:	add    BYTE PTR [r8],al
   1400071a3:	add    BYTE PTR [rax+0x64],cl
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	or     BYTE PTR [rax],al
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	cs rex.XB push r10
   1400071af:	push   rsp
   1400071b0:	and    al,0x58
   1400071b2:	rex.XB pop r10
   1400071b4:	add    BYTE PTR [rax],al
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	push   rax
   1400071b9:	add    BYTE PTR fs:[rax],al
   1400071bc:	or     BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	cs rex.XB push r10
   1400071c3:	push   rsp
   1400071c4:	and    al,0x58
   1400071c6:	rex.WB
   1400071c7:	add    BYTE PTR [r8],al
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	pop    rax
   1400071cd:	add    BYTE PTR fs:[rax],al
   1400071d0:	or     BYTE PTR [rax],al
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	cs rex.XB push r10
   1400071d7:	push   rsp
   1400071d8:	and    al,0x58
   1400071da:	rex.WB
   1400071db:	rex.B
   1400071dc:	add    BYTE PTR [r8],al
   1400071df:	add    BYTE PTR [rax+0x64],ah
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	or     BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	cs rex.XB push r10
   1400071eb:	push   rsp
   1400071ec:	and    al,0x58
   1400071ee:	rex.WB pop r9
   1400071f0:	add    BYTE PTR [rax],al
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	push   0x8000064
   1400071f9:	add    BYTE PTR [rax],al
   1400071fb:	add    BYTE PTR [rsi],ch
   1400071fd:	rex.XB push r10
   1400071ff:	push   rsp
   140007200:	and    al,0x58
   140007202:	rex.WB pop r10
   140007204:	add    BYTE PTR [rax],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	jo     0x14000726e
   14000720a:	add    BYTE PTR [rax],al
   14000720c:	and    BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140007219:	add    BYTE PTR [rax],al
   14000721b:	add    BYTE PTR [rax+0x50000064],dl
   140007221:	or     al,0x0
   140007223:	add    BYTE PTR [rsi],ch
   140007225:	jb     0x14000728b
   140007227:	(bad)  
   140007228:	je     0x14000728b
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	loopne 0x14000729e
   14000722e:	add    BYTE PTR [rax],al
   140007230:	sbb    al,0x2
   140007232:	add    BYTE PTR [rax],al
   140007234:	cs jb  0x14000729b
   140007237:	(bad)  
   140007238:	je     0x14000729b
   14000723a:	and    al,0x7a
   14000723c:	jp     0x1400072b8
   14000723e:	fs (bad) 
   140007240:	add    BYTE PTR [eax],al
   140007243:	add    BYTE PTR [rax],al
   140007245:	jae    0x140007247
   140007247:	add    ah,bh
   140007249:	add    eax,DWORD PTR [rax]
   14000724b:	add    BYTE PTR [rsi],ch
   14000724d:	js     0x1400072b3
   14000724f:	(bad)  
   140007250:	je     0x1400072b3
   140007252:	add    BYTE PTR [rax],al
   140007254:	cld    
   140007255:	jbe    0x140007257
   140007257:	add    BYTE PTR [rax],cl
   140007259:	add    al,BYTE PTR [rax]
   14000725b:	add    BYTE PTR [rsi],ch
   14000725d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rcx+rdi*2],al
   14000726a:	add    BYTE PTR [rax],al
   14000726c:	adc    al,0x0
   14000726e:	add    BYTE PTR [rax],al
   140007270:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007279:	add    BYTE PTR [rax],al
   14000727b:	add    BYTE PTR [rax],bl
   14000727d:	jns    0x14000727f
   14000727f:	add    BYTE PTR [rax],ch
   140007281:	add    al,0x0
   140007283:	add    BYTE PTR [rsi],ch
   140007285:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax+0x7d],al
   140007292:	add    BYTE PTR [rax],al
   140007294:	in     al,dx
   140007295:	or     al,BYTE PTR [rax]
   140007297:	add    BYTE PTR [rsi],ch
   140007299:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400072a1:	add    BYTE PTR [rax],al
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	nop
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	and    BYTE PTR [rax],al
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	cs fs (bad) 
   1400072af:	je     0x140007312
   1400072b1:	add    BYTE PTR [rax],al
   1400072b3:	add    BYTE PTR [rax],ah
   1400072b5:	nop
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	cld    
   1400072b9:	add    eax,0x622e0000
   1400072be:	jae    0x140007333
   1400072c0:	add    BYTE PTR [rax],al
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax+0x2d00000],ah
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	cs jo  0x140007333
   1400072cf:	(bad)  
   1400072d0:	je     0x140007333
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax+0xf00000],dh
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	cs jb  0x140007352
   1400072df:	jb     0x140007344
   1400072e1:	and    al,0x30
   1400072e3:	xor    DWORD PTR [rax],eax
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    al,dh
   1400072e9:	mov    al,0x0
   1400072eb:	add    BYTE PTR [rax+0x7],cl
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	cs jb  0x140007366
   1400072f3:	jb     0x140007358
   1400072f5:	and    al,0x30
   1400072f7:	xor    al,BYTE PTR [rax]
   1400072f9:	add    BYTE PTR [rax],al
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rcx],al
   140007301:	(bad)  
   140007302:	(bad)  
   140007303:	add    BYTE PTR [rsi],dl
   140007305:	xor    al,0x9
   140007307:	add    BYTE PTR [rsi],dl
   140007309:	xor    dl,BYTE PTR [rdx]
   14000730b:	jo     0x14000731e
   14000730d:	(bad)  
   14000730e:	adc    BYTE PTR [rax+0x1],dl
   140007311:	add    al,0x1
   140007313:	add    BYTE PTR [rdx+rax*2],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	sbb    DWORD PTR [rax],ebp
   14000731a:	or     al,BYTE PTR [rax]
   14000731c:	sbb    DWORD PTR [rcx+rbx*1+0x0],edx
   140007320:	sbb    DWORD PTR [rax+rbx*1],esi
   140007323:	add    BYTE PTR [rcx],bl
   140007325:	repnz adc dh,al
   140007328:	adc    al,ah
   14000732a:	(bad)  
   14000732b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000732f:	(bad)  
   140007330:	mov    BYTE PTR [rbp+0x0],dl
   140007333:	add    BYTE PTR [rax+0x0],dh
   140007336:	add    BYTE PTR [rax],al
   140007338:	sbb    DWORD PTR [rdx],esp
   14000733a:	or     BYTE PTR [rax],al
   14000733c:	adc    esi,DWORD PTR [rax+rbx*1]
   14000733f:	add    BYTE PTR [rbx],dl
   140007341:	repnz or al,0xf0
   140007344:	or     ah,al
   140007346:	or     BYTE PTR [rax+0x7],dh
   140007349:	(bad)  
   14000734a:	(bad)  
   14000734b:	push   rax
   14000734c:	mov    BYTE PTR [rbp+0x0],dl
   14000734f:	add    BYTE PTR [rax+0x0],dh
   140007352:	add    BYTE PTR [rax],al
   140007354:	sbb    DWORD PTR [rcx],ebp
   140007356:	or     DWORD PTR [rax],eax
   140007358:	(bad)  
   140007359:	rex.WR add BYTE PTR fs:[rdi],r10b
   14000735d:	push   rsp
   14000735e:	rex.WXB add BYTE PTR [r15],dl
   140007361:	xor    al,0x4a
   140007363:	add    BYTE PTR [rdi],dl
   140007365:	add    DWORD PTR [rax+0x0],ecx
   140007368:	adc    BYTE PTR [rax+0x0],dh
   14000736b:	add    BYTE PTR [rax+0x30000055],cl
   140007371:	add    al,BYTE PTR [rax]
   140007373:	add    BYTE PTR [rcx],bl
   140007375:	sub    cl,BYTE PTR [rbx]
   140007377:	add    BYTE PTR [rsp+rsi*1],bl
   14000737a:	sub    DWORD PTR [rax],eax
   14000737c:	sbb    al,0x1
   14000737e:	(bad)  
   14000737f:	add    BYTE PTR [rax],dl
   140007381:	lock (bad) 
   140007383:	loopne 0x140007391
   140007385:	ror    BYTE PTR [rdx],1
   140007387:	ror    BYTE PTR [rax],0x70
   14000738a:	(bad)  
   14000738b:	(bad)  
   14000738c:	(bad)  
   14000738d:	push   rax
   14000738e:	add    BYTE PTR [rax],al
   140007390:	mov    BYTE PTR [rbp+0x0],dl
   140007393:	add    al,ah
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rcx],al
   140007399:	adc    al,0x8
   14000739b:	add    BYTE PTR [rsp+riz*2],dl
   14000739e:	or     eax,DWORD PTR [rax]
   1400073a0:	adc    al,0x54
   1400073a2:	or     al,BYTE PTR [rax]
   1400073a4:	adc    al,0x34
   1400073a6:	or     BYTE PTR [rax],al
   1400073a8:	adc    al,0x52
   1400073aa:	adc    BYTE PTR [rax+0x19],dh
   1400073ad:	and    eax,0x34130009
   1400073b2:	sbb    al,0x0
   1400073b4:	adc    eax,DWORD PTR [rcx]
   1400073b6:	adc    al,0x0
   1400073b8:	or     al,0xf0
   1400073ba:	or     ah,al
   1400073bc:	or     BYTE PTR [rax+0x7],dh
   1400073bf:	(bad)  
   1400073c0:	(bad)  
   1400073c1:	push   rax
   1400073c2:	add    BYTE PTR [rax],al
   1400073c4:	mov    BYTE PTR [rbp+0x0],dl
   1400073c7:	add    BYTE PTR [rax+0x19000000],dl
   1400073cd:	and    al,0x8
   1400073cf:	add    BYTE PTR [rip+0x15001754],dl        # 0x155008b29
   1400073d5:	xor    al,0x16
   1400073d7:	add    BYTE PTR [rip+0xce00ef2],dl        # 0x14ce082cf
   1400073dd:	jo     0x1400073ea
   1400073df:	(bad)  
   1400073e0:	mov    BYTE PTR [rbp+0x0],dl
   1400073e3:	add    BYTE PTR [rax+0x0],dh
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	sbb    DWORD PTR [rip+0x1170009],esp        # 0x1411773f7
   1400073ee:	sbb    BYTE PTR [rax],al
   1400073f0:	or     esi,eax
   1400073f2:	or     eax,esp
   1400073f4:	(bad)  
   1400073f5:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360786c
   1400073fc:	add    dl,BYTE PTR [rax+0x0]
   1400073ff:	add    BYTE PTR [rax-0x4fffffab],cl
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rcx],bl
   140007409:	and    DWORD PTR [rdi],eax
   14000740b:	add    BYTE PTR [rdi],cl
   14000740d:	xor    al,0x40
   14000740f:	add    BYTE PTR [rdi],cl
   140007411:	add    DWORD PTR [rax+rax*1],edi
   140007414:	or     BYTE PTR [rax+0x7],dh
   140007417:	(bad)  
   140007418:	(bad)  
   140007419:	push   rax
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	mov    BYTE PTR [rbp+0x0],dl
   14000741f:	add    al,dl
   140007421:	add    DWORD PTR [rax],eax
   140007423:	add    BYTE PTR [rcx],bl
   140007425:	(bad)  
   140007426:	add    eax,0x3e340d00
   14000742b:	add    BYTE PTR [rip+0x6003c01],cl        # 0x14600b032
   140007431:	jo     0x140007433
   140007433:	add    BYTE PTR [rax-0x2fffffab],cl
   140007439:	add    DWORD PTR [rax],eax
   14000743b:	add    BYTE PTR [rcx],bl
   14000743d:	sbb    DWORD PTR [rax+rax*1],eax
   140007440:	or     dh,BYTE PTR [rsi+rcx*1]
   140007443:	add    BYTE PTR [rdx],cl
   140007445:	xchg   edx,eax
   140007446:	(bad)  
   140007447:	jo     0x1400073d1
   140007449:	push   rbp
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	rex.W add BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rcx],al
   140007451:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e428657
   140007457:	jo     0x140007466
   140007459:	(bad)  
   14000745a:	or     al,0x50
   14000745c:	or     esi,DWORD PTR [rax]
   14000745e:	add    BYTE PTR [rax],al
   140007460:	sbb    DWORD PTR [rax],ebp
   140007462:	or     DWORD PTR [rax],eax
   140007464:	sbb    ah,BYTE PTR [rdx+rbp*1+0x0]
   140007468:	sbb    dh,BYTE PTR [rcx+rbp*1]
   14000746b:	add    BYTE PTR [rdx],bl
   14000746d:	add    DWORD PTR [rax+rax*1],esp
   140007470:	(bad)  
   140007471:	loopne 0x14000747f
   140007473:	jo     0x140007480
   140007475:	push   rax
   140007476:	add    BYTE PTR [rax],al
   140007478:	mov    BYTE PTR [rbp+0x0],dl
   14000747b:	add    BYTE PTR [rax],bl
   14000747d:	add    DWORD PTR [rax],eax
   14000747f:	add    BYTE PTR [rcx],bl
   140007481:	(bad)  
   140007482:	add    eax,0x15340d00
   140007487:	add    BYTE PTR [rip+0x6001201],cl        # 0x14600868e
   14000748d:	jo     0x14000748f
   14000748f:	add    BYTE PTR [rax-0x7fffffab],cl
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    BYTE PTR [rcx],bl
   140007499:	and    eax,0x54130007
   14000749e:	sbb    al,BYTE PTR [rax]
   1400074a0:	adc    esi,DWORD PTR [rcx+rbx*1]
   1400074a3:	add    BYTE PTR [rbx],dl
   1400074a5:	add    DWORD PTR [rsi],edx
   1400074a7:	add    BYTE PTR [rax+rsi*2],cl
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	mov    BYTE PTR [rbp+0x0],dl
   1400074af:	add    BYTE PTR [rax+0x19000000],ch
   1400074b5:	sub    DWORD PTR [rcx],ecx
   1400074b7:	add    BYTE PTR [rdi],dl
   1400074b9:	fs pop rbp
   1400074bb:	add    BYTE PTR [rdi],dl
   1400074bd:	push   rsp
   1400074be:	pop    rsp
   1400074bf:	add    BYTE PTR [rdi],dl
   1400074c1:	xor    al,0x5b
   1400074c3:	add    BYTE PTR [rdi],dl
   1400074c5:	add    DWORD PTR [rax+0x0],ebx
   1400074c8:	adc    BYTE PTR [rax+0x0],dh
   1400074cb:	add    BYTE PTR [rax-0x4fffffab],cl
   1400074d1:	add    al,BYTE PTR [rax]
   1400074d3:	add    BYTE PTR [rcx],bl
   1400074d5:	(bad)  
   1400074d6:	or     eax,DWORD PTR [rax]
   1400074d8:	sub    DWORD PTR [rdi+rsi*1+0x0],esi
   1400074dc:	sub    DWORD PTR [rsi+rsi*1+0x0],esp
   1400074e0:	sub    DWORD PTR [rsi*1+0x30012900],esi
   1400074e7:	add    BYTE PTR [rip+0x19e01bf0],bl        # 0x159e090dd
   1400074ed:	push   rax
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	mov    BYTE PTR [rbp+0x0],dl
   1400074f3:	add    BYTE PTR [rax+0x1],dh
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	sbb    DWORD PTR [rcx],ebx
   1400074fa:	add    al,0x0
   1400074fc:	or     dh,BYTE PTR [rax+rdx*1]
   1400074ff:	add    BYTE PTR [rdx],cl
   140007501:	mov    dl,0x6
   140007503:	jo     0x14000748d
   140007505:	push   rbp
   140007506:	add    BYTE PTR [rax],al
   140007508:	push   rax
   140007509:	add    BYTE PTR [rax],al
   14000750b:	add    BYTE PTR [rcx],al
   14000750d:	adc    BYTE PTR [rsi],al
   14000750f:	add    BYTE PTR [rax],dl
   140007511:	or     BYTE PTR fs:[rax],al
   140007514:	adc    BYTE PTR [rdi+rax*1],dh
   140007517:	add    BYTE PTR [rax],dl
   140007519:	xor    cl,BYTE PTR [rax+rsi*2]
   14000751c:	add    DWORD PTR [rcx+rax*1],eax
   14000751f:	add    BYTE PTR [rdx+riz*2],al
   140007522:	add    BYTE PTR [rax],al
   140007524:	sbb    DWORD PTR [rbx],ebx
   140007526:	add    eax,DWORD PTR [rax]
   140007528:	or     DWORD PTR [rcx],eax
   14000752a:	sub    al,0x0
   14000752c:	add    dh,BYTE PTR [rax]
   14000752e:	add    BYTE PTR [rax],al
   140007530:	mov    BYTE PTR [rbp+0x0],dl
   140007533:	add    BYTE PTR [rax+0x1],dl
   140007536:	add    BYTE PTR [rax],al
   140007538:	sbb    DWORD PTR [rdi],esi
   14000753a:	or     eax,0x7b742600
   14000753f:	add    BYTE PTR [rsi],ah
   140007541:	fs jp  0x140007544
   140007544:	es xor al,0x78
   140007547:	add    BYTE PTR [rsi],ah
   140007549:	add    DWORD PTR [rdx+0x0],esi
   14000754c:	sbb    al,dh
   14000754e:	(bad)  
   14000754f:	loopne 0x140007565
   140007551:	rcl    BYTE PTR [rdx],1
   140007553:	rcl    BYTE PTR [rax],0x50
   140007556:	add    BYTE PTR [rax],al
   140007558:	mov    BYTE PTR [rbp+0x0],dl
   14000755b:	add    BYTE PTR [rax+0x19000003],al
   140007561:	cmp    ecx,DWORD PTR [rbx]
   140007563:	add    BYTE PTR [rdx],ch
   140007565:	in     al,0x4f
   140007567:	add    BYTE PTR [rdx],ch
   140007569:	je     0x1400075b9
   14000756b:	add    BYTE PTR [rdx],ch
   14000756d:	rex.WRB add BYTE PTR fs:[r10],r13b
   140007571:	xor    al,0x4c
   140007573:	add    BYTE PTR [rdx],ch
   140007575:	add    DWORD PTR [rdx+0x0],ecx
   140007578:	sbb    al,0x50
   14000757a:	add    BYTE PTR [rax],al
   14000757c:	mov    BYTE PTR [rbp+0x0],dl
   14000757f:	add    BYTE PTR [rax+0x2],al
   140007582:	add    BYTE PTR [rax],al
   140007584:	add    DWORD PTR [rax],ebx
   140007586:	or     al,BYTE PTR [rax]
   140007588:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000758c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140007590:	sbb    BYTE PTR [rax+rcx*1],dh
   140007593:	add    BYTE PTR [rax],bl
   140007595:	xor    dl,BYTE PTR [rax+riz*8]
   140007598:	adc    al,al
   14000759a:	adc    BYTE PTR [rax+0x1],dh
   14000759d:	clts   
   14000759f:	add    BYTE PTR [rdi],cl
   1400075a1:	or     al,BYTE PTR fs:[rax]
   1400075a4:	sysenter 
   1400075a6:	or     DWORD PTR [rax],eax
   1400075a8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400075ab:	jo     0x1400075ae
   1400075ad:	or     al,0x6
   1400075af:	add    BYTE PTR [rsp+rsi*1],cl
   1400075b2:	adc    al,BYTE PTR [rax]
   1400075b4:	or     al,0xd2
   1400075b6:	or     BYTE PTR [rax+0x7],dh
   1400075b9:	(bad)  
   1400075ba:	(bad)  
   1400075bb:	push   rax
   1400075bc:	sbb    DWORD PTR [rdx],ebp
   1400075be:	or     eax,DWORD PTR [rax]
   1400075c0:	sbb    al,0x34
   1400075c2:	add    BYTE PTR cs:[rcx+rax*1],bl
   1400075c6:	and    al,0x0
   1400075c8:	adc    al,dh
   1400075ca:	(bad)  
   1400075cb:	loopne 0x1400075d9
   1400075cd:	ror    BYTE PTR [rdx],1
   1400075cf:	ror    BYTE PTR [rax],0x70
   1400075d2:	(bad)  
   1400075d3:	(bad)  
   1400075d4:	(bad)  
   1400075d5:	push   rax
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	mov    BYTE PTR [rbp+0x0],dl
   1400075db:	add    BYTE PTR [rax],dl
   1400075dd:	add    DWORD PTR [rax],eax
   1400075df:	add    BYTE PTR [rcx],al
   1400075e1:	clts   
   1400075e3:	add    BYTE PTR [rdi],cl
   1400075e5:	fs (bad) 
   1400075e7:	add    BYTE PTR [rdi],cl
   1400075e9:	xor    al,0x6
   1400075eb:	add    BYTE PTR [rdi],cl
   1400075ed:	xor    cl,BYTE PTR [rbx]
   1400075ef:	jo     0x1400075f2
   1400075f1:	or     al,BYTE PTR [rax+rax*1]
   1400075f4:	or     dh,BYTE PTR [rax+rcx*1]
   1400075f7:	add    BYTE PTR [rdx],cl
   1400075f9:	xor    al,BYTE PTR [rsi]
   1400075fb:	jo     0x140007616
   1400075fd:	sub    ecx,DWORD PTR [rbx]
   1400075ff:	add    BYTE PTR [rcx],bl
   140007601:	push   rsp
   140007602:	sub    DWORD PTR [rax],eax
   140007604:	sbb    DWORD PTR [rax+rbp*1],esi
   140007607:	add    BYTE PTR [rcx],bl
   140007609:	add    DWORD PTR [rax],esp
   14000760b:	add    BYTE PTR [rdx],dl
   14000760d:	lock adc al,ah
   140007610:	(bad)  
   140007611:	ror    BYTE PTR [rax+rsi*2],0xb
   140007615:	(bad)  
   140007616:	add    BYTE PTR [rax],al
   140007618:	mov    BYTE PTR [rbp+0x0],dl
   14000761b:	add    al,dh
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rcx],al
   140007621:	adc    al,0x2
   140007623:	add    BYTE PTR [rdx+rdx*4],dl
   140007626:	adc    BYTE PTR [rax],dh
   140007628:	sbb    DWORD PTR [rsi],ebx
   14000762a:	add    al,0x0
   14000762c:	adc    BYTE PTR [rbx+rdx*1],dh
   14000762f:	add    BYTE PTR [rax],dl
   140007631:	repnz (bad) 
   140007633:	push   rax
   140007634:	mov    BYTE PTR [rbp+0x0],dl
   140007637:	add    BYTE PTR [rax+0x0],bh
   14000763a:	add    BYTE PTR [rax],al
   14000763c:	add    DWORD PTR [rsi],eax
   14000763e:	add    al,BYTE PTR [rax]
   140007640:	(bad)  
   140007641:	xor    al,BYTE PTR [rdx]
   140007643:	xor    BYTE PTR [rcx],bl
   140007645:	(bad)  
   140007646:	add    al,0x0
   140007648:	adc    BYTE PTR [rdx+rdx*1],dh
   14000764b:	add    BYTE PTR [rax],dl
   14000764d:	repnz (bad) 
   14000764f:	push   rax
   140007650:	mov    BYTE PTR [rbp+0x0],dl
   140007653:	add    BYTE PTR [rax+0x0],bh
   140007656:	add    BYTE PTR [rax],al
   140007658:	or     DWORD PTR [rcx],ebx
   14000765a:	or     al,BYTE PTR [rax]
   14000765c:	sbb    esp,eax
   14000765e:	or     eax,DWORD PTR [rax]
   140007660:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140007664:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140007668:	sbb    DWORD PTR [rax+rcx*1],esi
   14000766b:	add    BYTE PTR [rcx],bl
   14000766d:	push   rdx
   14000766e:	adc    eax,0x5526e0
   140007673:	add    BYTE PTR [rcx],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rcx+0x4d],bl
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	retf   0x4e
   14000767f:	add    BYTE PTR [rsi+0x56],dl
   140007682:	add    BYTE PTR [rax],al
   140007684:	retf   0x4e
   140007687:	add    BYTE PTR [rcx],al
   140007689:	add    BYTE PTR [rax],al
   14000768b:	add    BYTE PTR [rcx],al
   14000768d:	add    al,0x1
   14000768f:	add    BYTE PTR [rdx+riz*8],al
   140007692:	add    BYTE PTR [rax],al
   140007694:	add    DWORD PTR [rdx+rax*1],ecx
   140007697:	add    BYTE PTR [rcx+rax*1],cl
   14000769a:	adc    DWORD PTR [rax],eax
   14000769c:	or     DWORD PTR [rcx+rax*1],eax
   14000769f:	add    BYTE PTR [rdx+riz*1],al
   1400076a2:	add    BYTE PTR [rax],al
   1400076a4:	es push rbp
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	add    DWORD PTR [rax],eax
   1400076aa:	add    BYTE PTR [rax],al
   1400076ac:	lods   al,BYTE PTR ds:[rsi]
   1400076ad:	push   rdx
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	loop   0x140007704
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	add    DWORD PTR [rax],eax
   1400076b6:	add    BYTE PTR [rax],al
   1400076b8:	loop   0x14000770c
   1400076ba:	add    BYTE PTR [rax],al
   1400076bc:	or     DWORD PTR [rdx],ecx
   1400076be:	add    al,0x0
   1400076c0:	or     dh,BYTE PTR [rsi+rax*1]
   1400076c3:	add    BYTE PTR [rdx],cl
   1400076c5:	xor    al,BYTE PTR [rsi]
   1400076c7:	jo     0x1400076ef
   1400076c9:	push   rbp
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	add    DWORD PTR [rax],eax
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	mov    ebp,0xf0000053
   1400076d5:	push   rbx
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	adc    BYTE PTR [rsi+0x0],0x0
   1400076dc:	lock push rbx
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	add    DWORD PTR [rsi],eax
   1400076e2:	add    al,BYTE PTR [rax]
   1400076e4:	(bad)  
   1400076e5:	xor    al,BYTE PTR [rdx]
   1400076e7:	push   rax
   1400076e8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d76f2
   1400076ee:	or     DWORD PTR [rax],eax
   1400076f0:	or     eax,0x500632
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rcx],al
   1400076f9:	add    BYTE PTR [rax],al
   1400076fb:	add    BYTE PTR [rax],ch
   1400076fd:	jl     0x1400076ff
	...
   140007707:	add    BYTE PTR [rsi+rdi*2],cl
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	adc    BYTE PTR [rbx+0x0],ah
   14000770f:	add    BYTE PTR [rax+0x7a],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    BYTE PTR [rax],al
   140007719:	add    BYTE PTR [rax],al
   14000771b:	add    dh,dl
   14000771d:	(bad)  
   14000771e:	add    BYTE PTR [rax],al
   140007720:	push   0x58000061
   140007725:	jns    0x140007727
	...
   14000772f:	add    BYTE PTR [rax],al
   140007731:	add    DWORD PTR [rax],0x0
   140007734:	rex (bad) 
   140007736:	add    BYTE PTR [rax],al
   140007738:	push   0x7a
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    BYTE PTR [rax],al
   140007741:	add    BYTE PTR [rax],al
   140007743:	add    BYTE PTR [rsi],cl
   140007745:	add    DWORD PTR [rax],0x0
   140007748:	push   rax
   140007749:	(bad)  
   14000774a:	add    BYTE PTR [rax],al
   14000774c:	or     BYTE PTR [rbx+0x0],bh
	...
   140007757:	add    BYTE PTR [rsi],ch
   140007759:	add    DWORD PTR [rax],0x0
   14000775c:	lock (bad) 
   14000775e:	add    BYTE PTR [rax],al
   140007760:	cmp    BYTE PTR [rbx+0x0],0x0
	...
   14000776c:	push   rdx
   14000776d:	add    DWORD PTR [rax],0x0
   140007770:	push   0xffffffffa8000062
   140007775:	jp     0x140007777
	...
   14000777f:	add    BYTE PTR [rsi-0x7d],dh
   140007782:	add    BYTE PTR [rax],al
   140007784:	nop
   140007785:	(bad)  
   140007786:	add    BYTE PTR [rax],al
   140007788:	sar    BYTE PTR [rcx+0x0],1
	...
   140007793:	add    BYTE PTR [rsi-0x47ffff7d],bl
   140007799:	(bad)  
   14000779a:	add    BYTE PTR [rax],al
   14000779c:	sub    BYTE PTR [rdx+0x0],bh
	...
   1400077a7:	add    BYTE PTR [rdx+0x10000083],ch
   1400077ad:	(bad)  
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	movabs al,ds:0x7b
   1400077b9:	add    BYTE PTR [rax],al
   1400077bb:	add    dl,cl
   1400077bd:	add    DWORD PTR [rax],0x0
   1400077c0:	mov    BYTE PTR [rdx+0x0],ah
   1400077c3:	add    al,dh
   1400077c5:	jns    0x1400077c7
	...
   1400077cf:	add    dh,ch
   1400077d1:	add    DWORD PTR [rax],0x0
   1400077d4:	fsub   DWORD PTR [rax+0x0]
   1400077d7:	add    BYTE PTR [rax],cl
   1400077d9:	jp     0x1400077db
	...
   1400077e3:	add    BYTE PTR [rdx],dl
   1400077e5:	test   BYTE PTR [rax],al
   1400077e7:	add    al,dh
   1400077e9:	(bad)  
   1400077ea:	add    BYTE PTR [rax],al
   1400077ec:	sbb    BYTE PTR [rcx+0x0],bh
	...
   1400077f7:	add    BYTE PTR [rsp+rax*4],bh
   1400077fa:	add    BYTE PTR [rax],al
   1400077fc:	add    BYTE PTR [rax+0x0],ah
   1400077ff:	add    BYTE PTR [rax+0x7a],al
	...
   14000780a:	add    BYTE PTR [rax],al
   14000780c:	rex.W test BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rax],ch
   140007811:	(bad)  
   140007812:	add    BYTE PTR [rax],al
   140007814:	push   rax
   140007815:	jnp    0x140007817
	...
   14000781f:	add    BYTE PTR [rax-0x7c],ch
   140007822:	add    BYTE PTR [rax],al
   140007824:	cmp    BYTE PTR [rdx+0x0],ah
   140007827:	add    al,ah
   140007829:	jns    0x14000782b
	...
   140007833:	add    BYTE PTR [rdx-0x37ffff7c],cl
   140007839:	(bad)  
   14000783a:	add    BYTE PTR [rax],al
   14000783c:	jo     0x1400078b9
	...
   140007846:	add    BYTE PTR [rax],al
   140007848:	scas   al,BYTE PTR es:[rdi]
   140007849:	test   BYTE PTR [rax],al
   14000784b:	add    BYTE PTR [rax+0x62],bl
   14000784e:	add    BYTE PTR [rax],al
   140007850:	xor    BYTE PTR [rbx+0x0],bh
	...
   14000785b:	add    al,dl
   14000785d:	test   BYTE PTR [rax],al
   14000785f:	add    BYTE PTR [rax],bl
   140007861:	(bad)  
   140007862:	add    BYTE PTR [rax],al
   140007864:	sar    BYTE PTR [rdx+0x0],1
	...
   14000786f:	add    dh,dh
   140007871:	test   BYTE PTR [rax],al
   140007873:	add    BYTE PTR [rax-0x7ffff9f],bh
   140007879:	jp     0x14000787b
	...
   140007883:	add    BYTE PTR [rax],ah
   140007885:	test   DWORD PTR [rax],eax
   140007887:	add    al,ah
   140007889:	(bad)  
   14000788a:	add    BYTE PTR [rax],al
   14000788c:	sar    BYTE PTR [rdx+0x0],0x0
	...
   140007898:	test   DWORD PTR [rax],r8d
   14000789b:	add    BYTE PTR [rax-0x2fffff9f],ch
   1400078a1:	jnp    0x1400078a3
	...
   1400078ab:	add    BYTE PTR [rsi+rax*4+0x62b80000],dl
   1400078b2:	add    BYTE PTR [rax],al
   1400078b4:	test   al,0x79
	...
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	movabs ds:0xf800006090000086,al
   1400078c9:	jnp    0x1400078cb
	...
   1400078d3:	add    BYTE PTR [rdx-0x1fffff7a],ch
   1400078d9:	(bad)  
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	adc    BYTE PTR [rbp+0x0],bh
	...
   1400078e7:	add    BYTE PTR [rsi],dh
   1400078e9:	xchg   DWORD PTR [rax],eax
   1400078eb:	add    al,bh
   1400078ed:	movsxd eax,DWORD PTR [rax]
   1400078ef:	add    BYTE PTR [rax+0x7b],dh
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rax],al
   1400078f9:	add    BYTE PTR [rax],al
   1400078fb:	add    ah,dh
   1400078fd:	xchg   DWORD PTR [rax],eax
   1400078ff:	add    BYTE PTR [rax+0x62],bl
	...
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    dh,al
   140007919:	jg     0x14000791b
   14000791b:	add    BYTE PTR [rax],al
   14000791d:	add    BYTE PTR [rax],al
   14000791f:	add    BYTE PTR [rdx+0x80],ch
   140007925:	add    BYTE PTR [rax],al
   140007927:	add    dh,bl
   140007929:	jg     0x14000792b
   14000792b:	add    BYTE PTR [rax],al
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rsi],al
   140007931:	add    BYTE PTR [rax],0x0
   140007934:	add    BYTE PTR [rax],al
   140007936:	add    BYTE PTR [rax],al
   140007938:	out    dx,al
   140007939:	jg     0x14000793b
   14000793b:	add    BYTE PTR [rax],al
   14000793d:	add    BYTE PTR [rax],al
   14000793f:	add    ah,bh
   140007941:	jg     0x140007943
   140007943:	add    BYTE PTR [rax],al
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    al,bl
   140007949:	add    BYTE PTR [rax],0x0
	...
   140007958:	mov    ah,0x7e
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	add    BYTE PTR [rax],al
   14000795e:	add    BYTE PTR [rax],al
   140007960:	sub    bh,BYTE PTR [rdi+0x0]
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rcx+rax*4],ah
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	xchg   esi,eax
   140007971:	jle    0x140007973
   140007973:	add    BYTE PTR [rax],al
   140007975:	add    BYTE PTR [rax],al
   140007977:	add    BYTE PTR [rcx+rax*4+0x0],al
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rsi+0x7e],bl
   140007982:	add    BYTE PTR [rax],al
   140007984:	add    BYTE PTR [rax],al
   140007986:	add    BYTE PTR [rax],al
   140007988:	(bad)  
   140007989:	add    BYTE PTR [rax],0x0
   14000798c:	add    BYTE PTR [rax],al
   14000798e:	add    BYTE PTR [rax],al
   140007990:	cmp    al,0x80
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    BYTE PTR [rax],al
   140007996:	add    BYTE PTR [rax],al
   140007998:	xchg   esi,eax
   140007999:	add    BYTE PTR [rax],0x0
	...
   1400079a8:	push   rsp
   1400079a9:	xchg   BYTE PTR [rax],al
   1400079ab:	add    BYTE PTR [rax],al
   1400079ad:	add    BYTE PTR [rax],al
   1400079af:	add    dl,cl
   1400079b1:	test   DWORD PTR [rax],eax
   1400079b3:	add    BYTE PTR [rax],al
   1400079b5:	add    BYTE PTR [rax],al
   1400079b7:	add    BYTE PTR [rdx-0x7a],ch
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	add    BYTE PTR [rax],al
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	test   BYTE PTR [rsi+0x0],al
	...
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	push   rsp
   1400079d1:	jg     0x1400079d3
	...
   1400079df:	add    BYTE PTR [rax],al
   1400079e1:	add    DWORD PTR [rax],0x0
	...
   1400079ef:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	xchg   edx,eax
   1400079f9:	jg     0x1400079fb
	...
   140007a07:	add    BYTE PTR [rdi+rdi*2+0x0],ah
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	test   BYTE PTR [rcx+0x0],0x0
   140007a17:	add    dl,bl
   140007a19:	add    DWORD PTR [rax],0x0
	...
   140007a27:	add    dl,dh
   140007a29:	add    BYTE PTR [rax],0x0
   140007a2c:	add    BYTE PTR [rax],al
   140007a2e:	add    BYTE PTR [rax],al
   140007a30:	(bad)  
   140007a31:	jg     0x140007a33
	...
   140007a3f:	add    BYTE PTR [rsi-0x80],dl
   140007a42:	add    BYTE PTR [rax],al
   140007a44:	add    BYTE PTR [rax],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	je     0x1400079ca
   140007a4a:	add    BYTE PTR [rax],al
   140007a4c:	add    BYTE PTR [rax],al
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	(bad)  
   140007a51:	add    BYTE PTR [rax],0x0
   140007a54:	add    BYTE PTR [rax],al
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	add    DWORD PTR fs:[rax],0x0
	...
   140007a67:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   140007a6b:	add    BYTE PTR [rax],al
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rdx+0x7e],cl
	...
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    BYTE PTR [rdx+rax*4],bh
   140007a82:	add    BYTE PTR [rax],al
   140007a84:	add    BYTE PTR [rax],al
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	rex.WR jle 0x140007a8b
   140007a8b:	add    BYTE PTR [rax],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rdx],bh
   140007a91:	jle    0x140007a93
   140007a93:	add    BYTE PTR [rax],al
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rsi+rdi*2],ch
	...
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	rex.X jg 0x140007aab
   140007aab:	add    BYTE PTR [rax],al
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    BYTE PTR [rdx-0x7f],bh
	...
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007ac1:	(bad)  
	...
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	sub    BYTE PTR [rdx+0x0],al
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	add    BYTE PTR [rdx+0x0],0x0
   140007adf:	add    BYTE PTR [rdx+rax*4],dl
   140007ae2:	add    BYTE PTR [rax],al
   140007ae4:	add    BYTE PTR [rax],al
   140007ae6:	add    BYTE PTR [rax],al
   140007ae8:	push   0xffffffffffffff82
	...
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	push   rax
   140007af9:	(bad)  
	...
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	add    bh,BYTE PTR [rdi+0x0]
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    al,ah
   140007b11:	jle    0x140007b13
   140007b13:	add    BYTE PTR [rax],al
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    al,dh
   140007b19:	jle    0x140007b1b
   140007b1b:	add    BYTE PTR [rax],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    ah,cl
   140007b21:	jle    0x140007b23
	...
   140007b2f:	add    BYTE PTR [rcx+rax*4+0x0],ch
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	cwde   
   140007b39:	add    DWORD PTR [rax],0x0
   140007b3f:	add    dh,al
   140007b41:	add    DWORD PTR [rax],0x0
	...
   140007b4f:	add    al,al
   140007b51:	(bad)  
   140007b52:	add    BYTE PTR [rax],al
   140007b54:	add    BYTE PTR [rax],al
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	ret    0x80
   140007b5b:	add    BYTE PTR [rax],al
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    BYTE PTR [rdx],dl
   140007b61:	add    DWORD PTR [rax],0x0
	...
   140007b6f:	add    BYTE PTR [rax+0x81],dl
	...
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rax],dl
   140007b81:	jg     0x140007b83
   140007b83:	add    BYTE PTR [rax],al
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    BYTE PTR [rsi+0x82],dl
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax+0x80],al
	...
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rdx+0x7f],bh
	...
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	mov    dh,0x87
   140007bb2:	add    BYTE PTR [rax],al
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	rol    BYTE PTR [rdi+0x0],cl
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	fadd   QWORD PTR [rdi+0x0]
	...
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	mov    al,BYTE PTR [rbp+0x0]
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	mov    ah,0x85
   140007bda:	add    BYTE PTR [rax],al
   140007bdc:	add    BYTE PTR [rax],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	jb     0x140007b67
   140007be2:	add    BYTE PTR [rax],al
   140007be4:	add    BYTE PTR [rax],al
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	movabs ds:0x85,al
   140007bf1:	add    BYTE PTR [rax],al
   140007bf3:	add    BYTE PTR [rax],al
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rsi+rax*4],cl
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	xchg   BYTE PTR es:[rax],al
   140007c03:	add    BYTE PTR [rax],al
   140007c05:	add    BYTE PTR [rax],al
   140007c07:	add    BYTE PTR [rsi],bh
   140007c09:	xchg   BYTE PTR [rax],al
   140007c0b:	add    BYTE PTR [rax],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    al,ah
   140007c11:	test   DWORD PTR [rax],eax
   140007c13:	add    BYTE PTR [rax],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    dl,dh
   140007c19:	test   DWORD PTR [rax],eax
	...
   140007c27:	add    BYTE PTR [rax],bl
   140007c29:	jle    0x140007c2b
   140007c2b:	add    BYTE PTR [rax],al
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    dh,dh
   140007c31:	jge    0x140007c33
   140007c33:	add    BYTE PTR [rax],al
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    dh,bl
   140007c39:	jge    0x140007c3b
   140007c3b:	add    BYTE PTR [rax],al
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    dl,dl
   140007c41:	jge    0x140007c43
   140007c43:	add    BYTE PTR [rax],al
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rsi+0x7d],bh
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rbp+rdi*2+0x0],dh
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	lods   al,BYTE PTR ds:[rsi]
   140007c59:	jge    0x140007c5b
   140007c5b:	add    BYTE PTR [rax],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rdx+0x7d],bl
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rax-0x79],al
   140007c6a:	add    BYTE PTR [rax],al
   140007c6c:	add    BYTE PTR [rax],al
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	rex.WRX xchg QWORD PTR [rax],r8
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rax-0x79],bl
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	xchg   DWORD PTR fs:[rax],eax
   140007c83:	add    BYTE PTR [rax],al
   140007c85:	add    BYTE PTR [rax],al
   140007c87:	add    BYTE PTR [rax],bl
   140007c89:	mov    BYTE PTR [rax],al
   140007c8b:	add    BYTE PTR [rax],al
   140007c8d:	add    BYTE PTR [rax],al
   140007c8f:	add    BYTE PTR [rdx-0x79],bh
   140007c92:	add    BYTE PTR [rax],al
   140007c94:	add    BYTE PTR [rax],al
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	test   BYTE PTR [rdi+0x0],al
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	mov    es,WORD PTR [rdi+0x0]
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	(bad)  
   140007ca9:	xchg   DWORD PTR [rax],eax
   140007cab:	add    BYTE PTR [rax],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    BYTE PTR [rdi+rax*4+0x0],ch
   140007cb6:	add    BYTE PTR [rax],al
   140007cb8:	mov    BYTE PTR [rbp+0x0],bh
   140007cbb:	add    BYTE PTR [rax],al
   140007cbd:	add    BYTE PTR [rax],al
   140007cbf:	add    BYTE PTR [rdx+0x7d],bh
   140007cc2:	add    BYTE PTR [rax],al
   140007cc4:	add    BYTE PTR [rax],al
   140007cc6:	add    BYTE PTR [rax],al
   140007cc8:	ins    BYTE PTR es:[rdi],dx
   140007cc9:	jge    0x140007ccb
   140007ccb:	add    BYTE PTR [rax],al
   140007ccd:	add    BYTE PTR [rax],al
   140007ccf:	add    BYTE PTR [rbp+rdi*2+0x0],ah
   140007cd3:	add    BYTE PTR [rax],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rax+0x7d],bl
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	rex.WX jge 0x140007ce3
   140007ce3:	add    BYTE PTR [rax],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rax-0x79],dh
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	add    BYTE PTR [rax],al
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	rex jge 0x140007cf3
   140007cf3:	add    BYTE PTR [rax],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rax],al
   140007cf9:	jle    0x140007cfb
   140007cfb:	add    BYTE PTR [rax],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    BYTE PTR [rdx],ah
   140007d01:	mov    BYTE PTR [rax],al
	...
   140007d0f:	add    BYTE PTR [rdi+rax*4],bl
   140007d12:	add    BYTE PTR [rax],al
   140007d14:	add    BYTE PTR [rax],al
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	add    BYTE PTR [rdi+0x0],al
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	in     al,0x86
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    BYTE PTR [rax],al
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	int3   
   140007d29:	xchg   BYTE PTR [rax],al
   140007d2b:	add    BYTE PTR [rax],al
   140007d2d:	add    BYTE PTR [rax],al
   140007d2f:	add    BYTE PTR [rax+0x86],bh
	...
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    dl,ch
   140007d41:	add    al,0x74
   140007d43:	outs   dx,DWORD PTR ds:[rsi]
   140007d44:	jne    0x140007db6
   140007d46:	jo     0x140007dad
   140007d48:	jb     0x140007d4a
   140007d4a:	imul   eax,DWORD PTR [rbx],0x6e73765f
   140007d50:	ja     0x140007dc2
   140007d52:	jb     0x140007dbd
   140007d54:	outs   dx,BYTE PTR ds:[rsi]
   140007d55:	je     0x140007dbd
   140007d57:	add    BYTE PTR [rcx+0x74657304],dh
   140007d5d:	ins    BYTE PTR es:[rdi],dx
   140007d5e:	outs   dx,DWORD PTR ds:[rsi]
   140007d5f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007d62:	add    BYTE PTR gs:[rdx],dh
   140007d65:	add    al,0x65
   140007d67:	js     0x140007dd2
   140007d69:	je     0x140007d6b
   140007d6b:	add    BYTE PTR [rbp+0x0],dl
   140007d6e:	pop    rdi
   140007d6f:	pop    rax
   140007d70:	movsxd esi,DWORD PTR [rax+0x74]
   140007d73:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140007d7c:	pop    rdi
   140007d7d:	(bad)  
   140007d7e:	ins    DWORD PTR es:[rdi],dx
   140007d7f:	jae    0x140007de8
   140007d81:	pop    rdi
   140007d82:	gs js  0x140007dee
   140007d85:	je     0x140007d87
   140007d87:	add    BYTE PTR [rbp+0x775f5f00],bl
   140007d8d:	addr32 gs je 0x140007dfe
   140007d91:	(bad)  
   140007d92:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140007d99:	add    BYTE PTR [rsi+0x735f5f00],cl
   140007d9f:	gs je  0x140007e01
   140007da2:	(bad)  
   140007da3:	jo     0x140007e15
   140007da5:	pop    rdi
   140007da6:	je     0x140007e21
   140007da8:	jo     0x140007e0f
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	(bad)  
   140007dad:	add    DWORD PTR [rdi+0x65],ebx
   140007db0:	js     0x140007e1b
   140007db2:	je     0x140007db4
   140007db4:	rol    DWORD PTR [rax],0x5f
   140007db7:	movsxd esp,DWORD PTR [rbp+0x78]
   140007dba:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140007dc2:	jae    0x140007e29
   140007dc4:	je     0x140007e3b
   140007dc6:	jae    0x140007e2d
   140007dc8:	jb     0x140007e37
   140007dca:	(bad)  
   140007dcb:	je     0x140007e35
   140007dcd:	gs jb  0x140007e42
   140007dd0:	add    BYTE PTR [rax],al
   140007dd2:	jge    0x140007dd5
   140007dd4:	pop    rdi
   140007dd5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140007ddc:	ins    DWORD PTR es:[rdi],dx
   140007ddd:	add    BYTE PTR [rdi+0x0],dl
   140007de0:	pop    rdi
   140007de1:	pop    rdi
   140007de2:	rex.XB pop r15
   140007de4:	jae    0x140007e56
   140007de6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140007dea:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140007df1:	ins    BYTE PTR es:[rdi],dx
   140007df2:	gs jb  0x140007df5
   140007df5:	add    BYTE PTR [rdi],ah
   140007df7:	add    DWORD PTR [rdi+0x66],ebx
   140007dfa:	ins    DWORD PTR es:[rdi],dx
   140007dfb:	outs   dx,DWORD PTR ds:[rsi]
   140007dfc:	fs add BYTE PTR gs:[rax],al
   140007e00:	rol    BYTE PTR [rax],cl
   140007e02:	pop    rdi
   140007e03:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007e06:	ins    DWORD PTR es:[rdi],dx
   140007e07:	outs   dx,DWORD PTR ds:[rsi]
   140007e08:	fs add BYTE PTR gs:[rax],al
   140007e0c:	ins    DWORD PTR es:[rdi],dx
   140007e0d:	jae    0x140007e85
   140007e0f:	movsxd esi,DWORD PTR [rdx+0x74]
   140007e12:	cs fs ins BYTE PTR es:[rdi],dx
   140007e15:	ins    BYTE PTR es:[rdi],dx
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	(bad)  
   140007e19:	add    BYTE PTR [rdi],bh
   140007e1b:	je     0x140007e82
   140007e1d:	jb     0x140007e8c
   140007e1f:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140007e26:	pop    rcx
   140007e27:	pop    r8
   140007e29:	pop    rax
   140007e2a:	pop    rdx
   140007e2b:	add    BYTE PTR [rbx],cl
   140007e2d:	add    BYTE PTR [rsi+0x72],al
   140007e30:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140007e3a:	(bad)  
   140007e3b:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140007e3f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007e48:	js     0x140007ea1
   140007e4a:	add    BYTE PTR [rax],al
   140007e4c:	adc    al,0x0
   140007e4e:	rex.RXB
   140007e4f:	gs je  0x140007ea2
   140007e52:	jb     0x140007ec3
   140007e54:	movsxd eax,DWORD PTR [rcx+0x64]
   140007e57:	fs jb  0x140007ebf
   140007e5a:	jae    0x140007ecf
   140007e5c:	add    BYTE PTR [rax],al
   140007e5e:	adc    al,BYTE PTR [rax]
   140007e60:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007e62:	outs   dx,BYTE PTR ds:[rsi]
   140007e63:	jbe    0x140007eca
   140007e65:	jb     0x140007edb
   140007e67:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007e69:	je     0x140007ed0
   140007e6b:	jb     0x140007ed3
   140007e6d:	(bad)  
   140007e6e:	movsxd esp,DWORD PTR [rbp+0x4c]
   140007e71:	jne    0x140007edc
   140007e73:	fs push rsp
   140007e75:	outs   dx,DWORD PTR ds:[rsi]
   140007e76:	rex.WRX (bad) 
   140007e78:	ins    DWORD PTR es:[rdi],dx
   140007e79:	gs push rdi
   140007e7b:	add    BYTE PTR [rdx],al
   140007e7d:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140007e81:	(bad)  
   140007e82:	ins    BYTE PTR es:[rdi],dx
   140007e83:	rex.B ins BYTE PTR es:[rdi],dx
   140007e85:	ins    BYTE PTR es:[rdi],dx
   140007e86:	outs   dx,DWORD PTR ds:[rsi]
   140007e87:	movsxd eax,DWORD PTR [rax]
   140007e89:	add    BYTE PTR [rbx],al
   140007e8b:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   140007e8f:	(bad)  
   140007e90:	ins    BYTE PTR es:[rdi],dx
   140007e91:	rex.RX jb 0x140007ef9
   140007e94:	add    BYTE PTR gs:[rdi],cl
   140007e97:	add    BYTE PTR [rbx+0x6f],al
   140007e9a:	outs   dx,BYTE PTR ds:[rsi]
   140007e9b:	jbe    0x140007f02
   140007e9d:	jb     0x140007f13
   140007e9f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007ea1:	je     0x140007f08
   140007ea3:	jb     0x140007f0b
   140007ea5:	(bad)  
   140007ea6:	movsxd esp,DWORD PTR [rbp+0x4c]
   140007ea9:	jne    0x140007f14
   140007eab:	fs push rsp
   140007ead:	outs   dx,DWORD PTR ds:[rsi]
   140007eae:	rex.RXB jne 0x140007f1a
   140007eb1:	add    BYTE PTR fs:[rax],al
   140007eb4:	or     al,BYTE PTR [rax]
   140007eb6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007eb8:	outs   dx,BYTE PTR ds:[rsi]
   140007eb9:	jbe    0x140007f20
   140007ebb:	jb     0x140007f31
   140007ebd:	rex.RXB jne 0x140007f29
   140007ec0:	fs push rsp
   140007ec2:	outs   dx,DWORD PTR ds:[rsi]
   140007ec3:	push   rbx
   140007ec4:	je     0x140007f38
   140007ec6:	imul   ebp,DWORD PTR [rsi+0x67],0x23000057
   140007ecd:	add    BYTE PTR [rdx+0x65],dl
   140007ed0:	addr32 push rcx
   140007ed2:	jne    0x140007f39
   140007ed4:	jb     0x140007f4f
   140007ed6:	push   rsi
   140007ed7:	(bad)  
   140007ed8:	ins    BYTE PTR es:[rdi],dx
   140007ed9:	jne    0x140007f40
   140007edb:	rex.RB js 0x140007f35
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	(bad)  
   140007ee1:	add    BYTE PTR [rdx+0x65],dl
   140007ee4:	addr32 rex.WRXB jo 0x140007f4d
   140007ee8:	outs   dx,BYTE PTR ds:[rsi]
   140007ee9:	rex.WXB
   140007eea:	gs jns 0x140007f32
   140007eed:	js     0x140007f46
   140007eef:	add    BYTE PTR [rax+rax*1],ch
   140007ef2:	push   rdx
   140007ef3:	gs addr32 push rbx
   140007ef6:	gs je  0x140007f4f
   140007ef9:	(bad)  
   140007efa:	ins    BYTE PTR es:[rdi],dx
   140007efb:	jne    0x140007f62
   140007efd:	rex.RB js 0x140007f57
   140007f00:	add    BYTE PTR [rax],al
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	push   rdx
   140007f05:	gs rex.XB ins BYTE PTR es:[edi],dx
   140007f09:	outs   dx,DWORD PTR ds:[rsi]
   140007f0a:	jae    0x140007f71
   140007f0c:	rex.WXB
   140007f0d:	gs jns 0x140007f10
   140007f10:	adc    al,0x0
   140007f12:	rex.RXB
   140007f13:	gs je  0x140007f69
   140007f16:	jns    0x140007f8b
   140007f18:	je     0x140007f7f
   140007f1a:	ins    DWORD PTR es:[rdi],dx
   140007f1b:	push   rsp
   140007f1c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140007f23:	ins    BYTE PTR es:[rdi],dx
   140007f24:	gs push rsp
   140007f26:	imul   ebp,DWORD PTR [rbp+0x65],0x47003f00
   140007f2d:	gs je  0x140007f71
   140007f30:	fs (bad) 
   140007f32:	jo     0x140007fa8
   140007f34:	gs jb  0x140007faa
   140007f37:	rex.B
   140007f38:	fs fs jb 0x140007fa1
   140007f3c:	jae    0x140007fb1
   140007f3e:	gs jae 0x140007f41
   140007f41:	add    BYTE PTR [rax],cl
   140007f43:	add    BYTE PTR [rsi+0x6f],al
   140007f46:	jb     0x140007fb5
   140007f48:	(bad)  
   140007f49:	je     0x140007f98
   140007f4b:	gs jae 0x140007fc1
   140007f4e:	(bad)  
   140007f4f:	addr32 gs push rdi
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	or     al,BYTE PTR [rax]
   140007f56:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007f58:	gs je  0x140007fa9
   140007f5b:	je     0x140007fcc
   140007f5d:	jo     0x140007fb6
   140007f5f:	add    BYTE PTR [rbx],cl
   140007f61:	add    BYTE PTR [rsi+0x69],al
   140007f64:	ins    BYTE PTR es:[rdi],dx
   140007f65:	gs push rsp
   140007f67:	imul   ebp,DWORD PTR [rbp+0x65],0x6f4c6f54
   140007f6e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007f71:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   140007f7a:	add    DWORD PTR [rax],eax
   140007f7c:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140007f85:	outs   dx,DWORD PTR ds:[rsi]
   140007f86:	push   rbx
   140007f87:	jns    0x140007ffc
   140007f89:	je     0x140007ff0
   140007f8b:	ins    DWORD PTR es:[rdi],dx
   140007f8c:	push   rsp
   140007f8d:	imul   ebp,DWORD PTR [rbp+0x65],0x20000
   140007f94:	rex.RXB
   140007f95:	gs je  0x140007fdc
   140007f98:	(bad)  
   140007f99:	je     0x140008000
   140007f9b:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140007f9d:	jb     0x14000800c
   140007f9f:	(bad)  
   140007fa0:	je     0x140007ff9
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	add    eax,0x74654700
   140007fa9:	rex.WR (bad) 
   140007fab:	jae    0x140008021
   140007fad:	rex.RB jb 0x140008022
   140007fb0:	outs   dx,DWORD PTR ds:[rsi]
   140007fb1:	jb     0x140007fb3
   140007fb3:	add    BYTE PTR [rsi],al
   140007fb5:	add    BYTE PTR [rdi+0x65],al
   140007fb8:	je     0x14000800e
   140007fba:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140007fc1:	(bad)  
   140007fc2:	je     0x14000801b
   140007fc4:	add    BYTE PTR [rax],al
   140007fc6:	sub    eax,DWORD PTR [rax]
   140007fc8:	rex.R outs dx,BYTE PTR ds:[rsi]
   140007fca:	jae    0x140008012
   140007fcc:	ins    BYTE PTR es:[rdi],dx
   140007fcd:	jne    0x140008042
   140007fcf:	push   0x6f736552
   140007fd4:	ins    BYTE PTR es:[rdi],dx
   140007fd5:	jbe    0x14000803c
   140007fd7:	jb     0x14000801c
   140007fd9:	(bad)  
   140007fda:	movsxd ebp,DWORD PTR [rax+0x65]
   140007fdd:	add    BYTE PTR [rax+rax*1+0x44],dh
   140007fe1:	outs   dx,BYTE PTR ds:[rsi]
   140007fe2:	jae    0x140008036
   140007fe4:	gs jae 0x140008056
   140007fe7:	ins    BYTE PTR es:[rdi],dx
   140007fe8:	jbe    0x14000804f
   140007fea:	jb     0x14000803b
   140007fec:	jo     0x140007fee
   140007fee:	(bad)  
   140007fef:	add    BYTE PTR [rsi+rbp*2+0x73],al
   140007ff3:	push   rcx
   140007ff4:	jne    0x14000805b
   140007ff6:	jb     0x140008071
   140007ff8:	pop    rdi
   140007ff9:	push   rdi
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	(bad)  
   140007ffd:	add    BYTE PTR [rsi+rbp*2+0x73],al
   140008001:	rex.RX jb 0x140008069
   140008004:	add    BYTE PTR gs:[rax+rax*1],dh
   140008008:	rex.R outs dx,BYTE PTR ds:[rsi]
   14000800a:	jae    0x140008053
   14000800c:	gs je  0x140008052
   14000800f:	(bad)  
   140008010:	movsxd ebp,DWORD PTR [rax+0x65]
   140008013:	rex.R (bad) 
   140008015:	je     0x140008078
   140008017:	push   rsp
   140008018:	(bad)  
   140008019:	(bad)  
   14000801a:	ins    BYTE PTR es:[rdi],dx
   14000801b:	add    BYTE PTR gs:[rax],al
   14000801e:	or     eax,0x6e6f4300
   140008023:	jbe    0x14000808a
   140008025:	jb     0x14000809b
   140008027:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008029:	je     0x140008090
   14000802b:	jb     0x140008093
   14000802d:	(bad)  
   14000802e:	movsxd esp,DWORD PTR [rbp+0x49]
   140008031:	outs   dx,BYTE PTR ds:[rsi]
   140008032:	fs gs js 0x14000808a
   140008036:	outs   dx,DWORD PTR ds:[rsi]
   140008037:	rex.WR jne 0x1400080a3
   14000803a:	add    BYTE PTR fs:[rdi],dl
   14000803d:	add    BYTE PTR [rbx+0x6f],al
   140008040:	outs   dx,BYTE PTR ds:[rsi]
   140008041:	jbe    0x1400080a8
   140008043:	jb     0x1400080b9
   140008045:	rex.WR
   140008046:	outs   dx,BYTE PTR gs:[rsi]
   140008048:	addr32 je 0x1400080b3
   14000804b:	push   rsp
   14000804c:	outs   dx,DWORD PTR ds:[rsi]
   14000804d:	rex.WB jo 0x1400080c6
   140008050:	xor    al,0x4d
   140008052:	(bad)  
   140008053:	jae    0x1400080c0
   140008055:	add    BYTE PTR [rdx],al
   140008057:	add    BYTE PTR [rax+0x65],cl
   14000805a:	(bad)  
   14000805b:	jo     0x14000809e
   14000805d:	ins    BYTE PTR es:[rdi],dx
   14000805e:	ins    BYTE PTR es:[rdi],dx
   14000805f:	outs   dx,DWORD PTR ds:[rsi]
   140008060:	movsxd eax,DWORD PTR [rax]
   140008062:	add    BYTE PTR [rax],al
   140008064:	rex.RXB
   140008065:	gs je  0x1400080b8
   140008068:	jb     0x1400080d9
   14000806a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000806d:	jae    0x1400080b7
   14000806f:	gs (bad) 
   140008071:	jo     0x140008073
   140008073:	add    BYTE PTR [rsi],al
   140008075:	add    BYTE PTR [rax+0x65],cl
   140008078:	(bad)  
   140008079:	jo     0x1400080c1
   14000807b:	jb     0x1400080e2
   14000807d:	add    BYTE PTR gs:[rax],al
   140008080:	add    eax,DWORD PTR [rax]
   140008082:	rex.RXB
   140008083:	gs je  0x1400080c9
   140008086:	outs   dx,DWORD PTR ds:[rsi]
   140008087:	ins    DWORD PTR es:[rdi],dx
   140008088:	jo     0x1400080ff
   14000808a:	je     0x1400080f1
   14000808c:	jb     0x1400080dc
   14000808e:	(bad)  
   14000808f:	ins    DWORD PTR es:[rdi],dx
   140008090:	gs rex.RB js 0x1400080eb
   140008094:	add    BYTE PTR [rax],al
   140008096:	imul   eax,DWORD PTR [rax],0x4e746547
   14000809c:	gs je  0x140008116
   14000809f:	outs   dx,DWORD PTR ds:[rsi]
   1400080a0:	jb     0x14000810d
   1400080a2:	push   rax
   1400080a3:	(bad)  
   1400080a4:	jb     0x140008107
   1400080a6:	ins    DWORD PTR es:[rdi],dx
   1400080a7:	jae    0x1400080a9
   1400080a9:	add    BYTE PTR [rax+0x0],bl
   1400080ac:	rex.R outs dx,BYTE PTR ds:[rsi]
   1400080ae:	jae    0x140008101
   1400080b0:	jne    0x140008117
   1400080b2:	jb     0x14000812d
   1400080b4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400080b6:	outs   dx,BYTE PTR ds:[rsi]
   1400080b7:	imul   sp,WORD PTR [rdi+0x41],0x6c6c
   1400080bd:	outs   dx,DWORD PTR ds:[rsi]
   1400080be:	movsxd eax,DWORD PTR [rbp+0x78]
   1400080c1:	add    BYTE PTR [rsi],al
   1400080c3:	add    BYTE PTR [rbp+0x75],cl
   1400080c6:	ins    BYTE PTR es:[rdi],dx
   1400080c7:	je     0x140008132
   1400080c9:	rex.X jns 0x140008140
   1400080cc:	gs push rsp
   1400080ce:	outs   dx,DWORD PTR ds:[rsi]
   1400080cf:	push   rdi
   1400080d0:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   1400080d8:	xor    BYTE PTR [rax],al
   1400080da:	rex.R outs dx,BYTE PTR ds:[rsi]
   1400080dc:	jae    0x140008124
   1400080de:	jb     0x140008145
   1400080e0:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400080e3:	outs   dx,BYTE PTR ds:[rsi]
   1400080e4:	imul   sp,WORD PTR [rdi+0x53],0x7274
   1400080ea:	jne    0x14000814f
   1400080ec:	je     0x140008163
   1400080ee:	jb     0x140008155
   1400080f0:	add    BYTE PTR [rax],al
   1400080f2:	(bad)  
   1400080f3:	add    BYTE PTR [rdi+0x65],al
   1400080f6:	je     0x14000813e
   1400080f8:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140008100:	add    al,BYTE PTR [rax]
   140008102:	rex.RXB
   140008103:	gs je  0x140008149
   140008106:	outs   dx,DWORD PTR ds:[rsi]
   140008107:	outs   dx,BYTE PTR ds:[rsi]
   140008108:	jae    0x140008179
   14000810a:	ins    BYTE PTR es:[rdi],dx
   14000810b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000810e:	fs add BYTE PTR gs:[rax],al
   140008112:	add    al,BYTE PTR [rax]
   140008114:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008116:	ins    DWORD PTR es:[rdi],dx
   140008117:	jo     0x14000817a
   140008119:	jb     0x140008180
   14000811b:	push   rbx
   14000811c:	je     0x140008190
   14000811e:	imul   ebp,DWORD PTR [rsi+0x67],0x47000057
   140008125:	add    BYTE PTR [rdi+0x65],al
   140008128:	je     0x14000816d
   14000812a:	jne    0x14000819e
   14000812c:	jb     0x140008193
   14000812e:	outs   dx,BYTE PTR ds:[rsi]
   14000812f:	je     0x140008185
   140008131:	push   0x64616572
   140008136:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008138:	ins    DWORD PTR es:[rdi],dx
   140008139:	jo     0x14000819c
   14000813b:	jb     0x1400081b1
   14000813d:	ins    DWORD PTR es:[rdi],dx
   14000813e:	outs   dx,BYTE PTR gs:[rsi]
   140008140:	je     0x14000818b
   140008142:	fs add bl,bh
   140008145:	add    BYTE PTR [rbx+0x65],dl
   140008148:	je     0x14000818d
   14000814a:	jne    0x1400081be
   14000814c:	jb     0x1400081b3
   14000814e:	outs   dx,BYTE PTR ds:[rsi]
   14000814f:	je     0x1400081a5
   140008151:	push   0x64616572
   140008156:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008158:	ins    DWORD PTR es:[rdi],dx
   140008159:	jo     0x1400081bc
   14000815b:	jb     0x1400081d1
   14000815d:	ins    DWORD PTR es:[rdi],dx
   14000815e:	outs   dx,BYTE PTR gs:[rsi]
   140008160:	je     0x1400081ab
   140008162:	add    BYTE PTR fs:[rdx],cl
   140008165:	add    BYTE PTR [rax+0x65],cl
   140008168:	(bad)  
   140008169:	jo     0x1400081be
   14000816b:	gs je  0x1400081b7
   14000816e:	outs   dx,BYTE PTR ds:[rsi]
   14000816f:	outs   dx,WORD PTR ds:[rsi]
   140008171:	jb     0x1400081e0
   140008173:	(bad)  
   140008174:	je     0x1400081df
   140008176:	outs   dx,DWORD PTR ds:[rsi]
   140008177:	outs   dx,BYTE PTR ds:[rsi]
   140008178:	add    BYTE PTR [rax],al
   14000817a:	cmp    al,BYTE PTR [rax]
   14000817c:	push   rbx
   14000817d:	gs je  0x1400081d4
   140008180:	push   0x64616572
   140008185:	push   rbp
   140008186:	rex.WB
   140008187:	rex.WR (bad) 
   140008189:	outs   dx,BYTE PTR ds:[rsi]
   14000818a:	addr32 jne 0x1400081ee
   14000818d:	add    BYTE PTR gs:[eip+0x656c5300],ch        # 0x1a56cd495
   140008195:	gs jo  0x140008198
   140008198:	add    al,BYTE PTR [rax]
   14000819a:	push   rdx
   14000819b:	je     0x140008209
   14000819d:	rex.XB (bad) 
   14000819f:	jo     0x140008215
   1400081a1:	jne    0x140008215
   1400081a3:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400081a6:	outs   dx,BYTE PTR ds:[rsi]
   1400081a7:	je     0x14000820e
   1400081a9:	js     0x14000821f
   1400081ab:	add    BYTE PTR [rcx],cl
   1400081ad:	add    BYTE PTR [rdx+0x74],dl
   1400081b0:	ins    BYTE PTR es:[rdi],dx
   1400081b1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400081b3:	outs   dx,DWORD PTR ds:[rsi]
   1400081b4:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400081b8:	jne    0x140008228
   1400081ba:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400081be:	outs   dx,BYTE PTR ds:[rsi]
   1400081bf:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400081c1:	je     0x140008235
   1400081c3:	jns    0x1400081c5
   1400081c5:	add    BYTE PTR [rdi],cl
   1400081c7:	add    BYTE PTR [rdx+0x74],dl
   1400081ca:	ins    BYTE PTR es:[rdi],dx
   1400081cb:	push   rsi
   1400081cc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400081d3:	outs   dx,BYTE PTR ds:[rsi]
   1400081d4:	ja     0x14000823f
   1400081d6:	outs   dx,BYTE PTR ds:[rsi]
   1400081d7:	add    BYTE PTR fs:[rax],al
   1400081da:	adc    DWORD PTR [rax],eax
   1400081dc:	push   rbp
   1400081dd:	outs   dx,BYTE PTR ds:[rsi]
   1400081de:	push   0x6c646e61
   1400081e3:	gs fs rex.RB js 0x14000824b
   1400081e8:	gs jo  0x14000825f
   1400081eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400081f2:	gs jb  0x1400081f5
   1400081f5:	add    BYTE PTR [rdi],cl
   1400081f7:	add    BYTE PTR [rbx+0x65],dl
   1400081fa:	je     0x140008251
   1400081fc:	outs   dx,BYTE PTR ds:[rsi]
   1400081fd:	push   0x6c646e61
   140008202:	gs fs rex.RB js 0x14000826a
   140008207:	gs jo  0x14000827e
   14000820a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008211:	gs jb  0x140008214
   140008214:	or     al,0x0
   140008216:	rex.RXB
   140008217:	gs je  0x14000825d
   14000821a:	jne    0x14000828e
   14000821c:	jb     0x140008283
   14000821e:	outs   dx,BYTE PTR ds:[rsi]
   14000821f:	je     0x140008271
   140008221:	jb     0x140008292
   140008223:	movsxd esp,DWORD PTR [rbp+0x73]
   140008226:	jae    0x140008228
   140008228:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000822d:	ins    DWORD PTR es:[rdi],dx
   14000822e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008235:	outs   dx,DWORD PTR ds:[rsi]
   140008236:	movsxd esp,DWORD PTR [rbp+0x73]
   140008239:	jae    0x14000823b
   14000823b:	add    BYTE PTR [rbx],dl
   14000823d:	add    BYTE PTR [rdi+0x65],al
   140008240:	je     0x14000828f
   140008242:	outs   dx,DWORD PTR ds:[rsi]
   140008243:	fs jne 0x1400082b2
   140008246:	gs rex.W (bad) 
   140008249:	outs   dx,BYTE PTR ds:[rsi]
   14000824a:	fs ins BYTE PTR es:[rdi],dx
   14000824c:	gs push rdi
   14000824e:	add    BYTE PTR [rax],al
   140008250:	add    BYTE PTR [rax],al
   140008252:	push   rcx
   140008253:	jne    0x1400082ba
   140008255:	jb     0x1400082d0
   140008257:	push   rax
   140008258:	gs jb  0x1400082c1
   14000825b:	outs   dx,DWORD PTR ds:[rsi]
   14000825c:	jb     0x1400082cb
   14000825e:	(bad)  
   14000825f:	outs   dx,BYTE PTR ds:[rsi]
   140008260:	movsxd esp,DWORD PTR [rbp+0x43]
   140008263:	outs   dx,DWORD PTR ds:[rsi]
   140008264:	jne    0x1400082d4
   140008266:	je     0x1400082cd
   140008268:	jb     0x14000826a
   14000826a:	or     eax,0x74654700
   14000826f:	rex.XB jne 0x1400082e4
   140008272:	jb     0x1400082d9
   140008274:	outs   dx,BYTE PTR ds:[rsi]
   140008275:	je     0x1400082c7
   140008277:	jb     0x1400082e8
   140008279:	movsxd esp,DWORD PTR [rbp+0x73]
   14000827c:	jae    0x1400082c7
   14000827e:	add    BYTE PTR fs:[rcx],dl
   140008281:	add    BYTE PTR [rdi+0x65],al
   140008284:	je     0x1400082c9
   140008286:	jne    0x1400082fa
   140008288:	jb     0x1400082ef
   14000828a:	outs   dx,BYTE PTR ds:[rsi]
   14000828b:	je     0x1400082e1
   14000828d:	push   0x64616572
   140008292:	rex.WB
   140008293:	add    BYTE PTR fs:[rax],al
   140008296:	sbb    BYTE PTR [rax],al
   140008298:	rex.RXB
   140008299:	gs je  0x1400082f0
   14000829c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400082a3:	je     0x1400082a5
   1400082a5:	add    BYTE PTR [rbx],cl
   1400082a7:	add    BYTE PTR [rdi+0x65],al
   1400082aa:	je     0x1400082f1
   1400082ac:	outs   dx,BYTE PTR ds:[rsi]
   1400082ad:	jbe    0x140008318
   1400082af:	jb     0x140008320
   1400082b1:	outs   dx,BYTE PTR ds:[rsi]
   1400082b2:	ins    DWORD PTR es:[rdi],dx
   1400082b3:	outs   dx,BYTE PTR gs:[rsi]
   1400082b5:	je     0x14000830d
   1400082b7:	(bad)  
   1400082b8:	jb     0x140008323
   1400082ba:	(bad)  
   1400082bb:	(bad)  
   1400082bc:	ins    BYTE PTR es:[rdi],dx
   1400082bd:	gs push rdi
   1400082bf:	add    BYTE PTR [rdi],al
   1400082c1:	add    BYTE PTR [rdi+0x69],dl
   1400082c4:	fs gs rex.XB push 0x6f547261
   1400082cc:	rex.WRB jne 0x14000833b
   1400082cf:	je     0x14000833a
   1400082d1:	rex.X jns 0x140008348
   1400082d4:	add    BYTE PTR gs:[rcx+0x70],ah
   1400082d8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df64f
   1400082e2:	outs   dx,DWORD PTR ds:[rsi]
   1400082e3:	jb     0x14000834a
   1400082e5:	sub    eax,0x7262696c
   1400082ea:	(bad)  
   1400082eb:	jb     0x140008366
   1400082ed:	ins    BYTE PTR es:[rdi],dx
   1400082ee:	outs   dx,DWORD PTR ds:[rsi]
   1400082ef:	(bad)  
   1400082f0:	fs gs jb 0x140008321
   1400082f4:	ins    BYTE PTR es:[rdi],dx
   1400082f5:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b02d
   1400082fb:	fs ins BYTE PTR es:[rdi],dx
   1400082fd:	ins    BYTE PTR es:[rdi],dx
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	rex.WB push r8
   140008302:	rex.W
   140008303:	rex.WR push rax
   140008305:	push   r8
   140008307:	rex.WB
   140008308:	cs rex.R
   14000830a:	rex.WR
   14000830b:	rex.WR add BYTE PTR [rax],r8b
   14000830e:	(bad)  
   14000830f:	jo     0x14000837a
   140008311:	sub    eax,0x772d736d
   140008316:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000831d:	sub    eax,0x70616568
   140008322:	sub    eax,0x312d326c
   140008327:	sub    eax,0x6c642e30
   14000832c:	ins    BYTE PTR es:[rdi],dx
   14000832d:	add    BYTE PTR [rcx+0x70],ah
   140008330:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df6a7
   14000833a:	outs   dx,DWORD PTR ds:[rsi]
   14000833b:	jb     0x1400083a2
   14000833d:	sub    eax,0x69676572
   140008342:	jae    0x1400083b8
   140008344:	jb     0x1400083bf
   140008346:	sub    eax,0x312d316c
   14000834b:	sub    eax,0x6c642e30
   140008350:	ins    BYTE PTR es:[rdi],dx
   140008351:	add    BYTE PTR [rcx+0x70],ah
   140008354:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df6cb
   14000835e:	outs   dx,DWORD PTR ds:[rsi]
   14000835f:	jb     0x1400083c6
   140008361:	sub    eax,0x69737973
   140008366:	outs   dx,BYTE PTR ds:[rsi]
   140008367:	outs   dx,WORD PTR ds:[rsi]
   140008369:	sub    eax,0x322d316c
   14000836e:	sub    eax,0x6c642e31
   140008373:	ins    BYTE PTR es:[rdi],dx
   140008374:	add    BYTE PTR [rax],al
   140008376:	(bad)  
   140008377:	jo     0x1400083e2
   140008379:	sub    eax,0x772d736d
   14000837e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008385:	sub    eax,0x61636f6c
   14000838a:	ins    BYTE PTR es:[rdi],dx
   14000838b:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140008392:	sub    eax,0x322d316c
   140008397:	sub    eax,0x6c642e31
   14000839c:	ins    BYTE PTR es:[rdi],dx
   14000839d:	add    BYTE PTR [rdi+0x53],dl
   1400083a0:	xor    bl,BYTE PTR [rdi+0x33]
   1400083a3:	xor    ch,BYTE PTR [rsi]
   1400083a5:	fs ins BYTE PTR es:[rdi],dx
   1400083a7:	ins    BYTE PTR es:[rdi],dx
   1400083a8:	add    BYTE PTR [rax],al
   1400083aa:	(bad)  
   1400083ab:	jo     0x140008416
   1400083ad:	sub    eax,0x772d736d
   1400083b2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400083b9:	sub    eax,0x656c6966
   1400083be:	sub    eax,0x322d316c
   1400083c3:	sub    eax,0x6c642e31
   1400083c8:	ins    BYTE PTR es:[rdi],dx
   1400083c9:	add    BYTE PTR [rcx+0x70],ah
   1400083cc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df743
   1400083d6:	outs   dx,DWORD PTR ds:[rsi]
   1400083d7:	jb     0x14000843e
   1400083d9:	sub    eax,0x656d6974
   1400083de:	jp     0x14000844f
   1400083e0:	outs   dx,BYTE PTR ds:[rsi]
   1400083e1:	gs sub eax,0x312d316c
   1400083e7:	sub    eax,0x6c642e30
   1400083ec:	ins    BYTE PTR es:[rdi],dx
   1400083ed:	add    BYTE PTR [rcx+0x70],ah
   1400083f0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df767
   1400083fa:	outs   dx,DWORD PTR ds:[rsi]
   1400083fb:	jb     0x140008462
   1400083fd:	sub    eax,0x65746164
   140008402:	je     0x14000846d
   140008404:	ins    DWORD PTR es:[rdi],dx
   140008405:	gs sub eax,0x312d316c
   14000840b:	sub    eax,0x6c642e31
   140008410:	ins    BYTE PTR es:[rdi],dx
   140008411:	add    BYTE PTR [rcx+0x70],ah
   140008414:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df78b
   14000841e:	outs   dx,DWORD PTR ds:[rsi]
   14000841f:	jb     0x140008486
   140008421:	sub    eax,0x6f727265
   140008426:	jb     0x140008490
   140008428:	(bad)  
   140008429:	outs   dx,BYTE PTR ds:[rsi]
   14000842a:	fs ins BYTE PTR es:[rdi],dx
   14000842c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140008433:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64b26a
   140008439:	ins    BYTE PTR es:[rdi],dx
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	rex.R
   14000843d:	rex.WRX push rbx
   14000843f:	push   r8
   140008441:	rex.WB
   140008442:	cs fs ins BYTE PTR es:[rdi],dx
   140008445:	ins    BYTE PTR es:[rdi],dx
   140008446:	add    BYTE PTR [rax],al
   140008448:	(bad)  
   140008449:	jo     0x1400084b4
   14000844b:	sub    eax,0x772d736d
   140008450:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008457:	sub    eax,0x70616568
   14000845c:	sub    eax,0x322d316c
   140008461:	sub    eax,0x6c642e30
   140008466:	ins    BYTE PTR es:[rdi],dx
   140008467:	add    BYTE PTR [rcx+0x70],ah
   14000846a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df7e1
   140008474:	outs   dx,DWORD PTR ds:[rsi]
   140008475:	jb     0x1400084dc
   140008477:	sub    eax,0x69727473
   14000847c:	outs   dx,BYTE PTR ds:[rsi]
   14000847d:	addr32 sub eax,0x312d316c
   140008483:	sub    eax,0x6c642e30
   140008488:	ins    BYTE PTR es:[rdi],dx
   140008489:	add    BYTE PTR [rcx+0x70],ah
   14000848c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df803
   140008496:	outs   dx,DWORD PTR ds:[rsi]
   140008497:	jb     0x1400084fe
   140008499:	sub    eax,0x736e6f63
   14000849e:	outs   dx,DWORD PTR ds:[rsi]
   14000849f:	ins    BYTE PTR es:[rdi],dx
   1400084a0:	gs sub eax,0x312d316c
   1400084a6:	sub    eax,0x6c642e30
   1400084ab:	ins    BYTE PTR es:[rdi],dx
   1400084ac:	add    BYTE PTR [rax],al
   1400084ae:	(bad)  
   1400084af:	jo     0x14000851a
   1400084b1:	sub    eax,0x772d736d
   1400084b6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400084bd:	sub    eax,0x636e7973
   1400084c2:	push   0x2d316c2d
   1400084c7:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64b2fd
   1400084cd:	ins    BYTE PTR es:[rdi],dx
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	(bad)  
   1400084d1:	jo     0x14000853c
   1400084d3:	sub    eax,0x772d736d
   1400084d8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400084df:	sub    eax,0x736c7472
   1400084e4:	jne    0x140008556
   1400084e6:	jo     0x140008557
   1400084e8:	jb     0x14000855e
   1400084ea:	sub    eax,0x322d316c
   1400084ef:	sub    eax,0x6c642e30
   1400084f4:	ins    BYTE PTR es:[rdi],dx
   1400084f5:	add    BYTE PTR [rcx+0x70],ah
   1400084f8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df86f
   140008502:	outs   dx,DWORD PTR ds:[rsi]
   140008503:	jb     0x14000856a
   140008505:	sub    eax,0x636f7270
   14000850a:	gs jae 0x140008580
   14000850d:	je     0x140008577
   14000850f:	jb     0x140008576
   140008511:	(bad)  
   140008512:	fs jae 0x140008542
   140008515:	ins    BYTE PTR es:[rdi],dx
   140008516:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32b24d
   14000851c:	fs ins BYTE PTR es:[rdi],dx
   14000851e:	ins    BYTE PTR es:[rdi],dx
   14000851f:	add    BYTE PTR [rcx+0x70],ah
   140008522:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df899
   14000852c:	outs   dx,DWORD PTR ds:[rsi]
   14000852d:	jb     0x140008594
   14000852f:	sub    eax,0x666f7270
   140008534:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000853c:	sub    eax,0x6c642e30
   140008541:	ins    BYTE PTR es:[rdi],dx
   140008542:	add    BYTE PTR [rax],al
   140008544:	(bad)  
   140008545:	jo     0x1400085b0
   140008547:	sub    eax,0x772d736d
   14000854c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008553:	sub    eax,0x636f7270
   140008558:	gs jae 0x1400085ce
   14000855b:	outs   dx,BYTE PTR gs:[rsi]
   14000855d:	jbe    0x1400085c8
   14000855f:	jb     0x1400085d0
   140008561:	outs   dx,BYTE PTR ds:[rsi]
   140008562:	ins    DWORD PTR es:[rdi],dx
   140008563:	outs   dx,BYTE PTR gs:[rsi]
   140008565:	je     0x140008594
   140008567:	ins    BYTE PTR es:[rdi],dx
   140008568:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b2a0
   14000856e:	fs ins BYTE PTR es:[rdi],dx
   140008570:	ins    BYTE PTR es:[rdi],dx
   140008571:	add    BYTE PTR [rax],al
   140008573:	add    BYTE PTR [rax+rbp*2+0x63],al
   140008577:	jo     0x1400085ba
   140008579:	movsxd esi,DWORD PTR [rcx+0x75]
   14000857c:	imul   esi,DWORD PTR [rdx+0x65],0x61726150
   140008583:	ins    DWORD PTR es:[rdi],dx
   140008584:	gs je  0x1400085ec
   140008587:	jb     0x1400085fc
   140008589:	add    BYTE PTR [rip+0x63684400],ch        # 0x1a368c98f
   14000858f:	jo     0x1400085e3
   140008591:	gs ins BYTE PTR es:[rdi],dx
   140008593:	gs (bad) 
   140008595:	jae    0x1400085fc
   140008597:	push   rax
   140008598:	(bad)  
   140008599:	jb     0x1400085fc
   14000859b:	ins    DWORD PTR es:[rdi],dx
   14000859c:	gs je  0x140008604
   14000859f:	jb     0x140008614
   1400085a1:	add    BYTE PTR [rbx],cl
   1400085a3:	add    BYTE PTR [rax+rbp*2+0x63],al
   1400085a7:	jo     0x1400085ee
   1400085a9:	outs   dx,BYTE PTR ds:[rsi]
   1400085aa:	jne    0x140008619
   1400085ac:	rex.XB ins BYTE PTR es:[rdi],dx
   1400085ae:	(bad)  
   1400085af:	jae    0x140008624
   1400085b1:	gs jae 0x1400085b4
   1400085b4:	sbb    al,0x0
   1400085b6:	rex.R push 0x61487063
   1400085bc:	outs   dx,BYTE PTR ds:[rsi]
   1400085bd:	fs ins BYTE PTR es:[rdi],dx
   1400085bf:	gs push rax
   1400085c1:	outs   dx,BYTE PTR ds:[rsi]
   1400085c2:	push   rax
   1400085c3:	rex.RB jbe 0x14000862b
   1400085c6:	outs   dx,BYTE PTR ds:[rsi]
   1400085c7:	je     0x1400085c9
   1400085c9:	add    BYTE PTR [rax+rax*1],dl
   1400085cc:	rex.WRX jae 0x140008638
   1400085cf:	push   rbx
   1400085d0:	gs je  0x140008614
   1400085d3:	ins    BYTE PTR es:[rdi],dx
   1400085d4:	ins    BYTE PTR es:[rdi],dx
   1400085d5:	push   rax
   1400085d6:	(bad)  
   1400085d7:	jb     0x14000863a
   1400085d9:	ins    DWORD PTR es:[rdi],dx
   1400085da:	gs je  0x140008642
   1400085dd:	jb     0x140008652
   1400085df:	add    BYTE PTR [rdx],cl
   1400085e1:	add    BYTE PTR [rax+rbp*2+0x63],al
   1400085e5:	jo     0x14000865d
   1400085e7:	ss rex.WB jae 0x140008630
   1400085eb:	outs   dx,BYTE PTR ds:[rsi]
   1400085ec:	(bad)  
   1400085ed:	(bad)  
   1400085ee:	ins    BYTE PTR es:[rdi],dx
   1400085ef:	gs add BYTE PTR fs:[rax],al
   1400085f3:	add    BYTE PTR [rax+rbp*2+0x63],al
   1400085f7:	jo     0x14000866f
   1400085f9:	movsxd esi,DWORD PTR ss:[r9+0x75]
   1400085fe:	imul   esi,DWORD PTR [rdx+0x65],0x61726150
   140008605:	ins    DWORD PTR es:[rdi],dx
   140008606:	gs je  0x14000866e
   140008609:	jb     0x14000867e
   14000860b:	add    BYTE PTR [rip+0x63684400],cl        # 0x1a368ca11
   140008611:	jo     0x140008689
   140008613:	ss push rdx
   140008615:	gs ins BYTE PTR es:[rdi],dx
   140008617:	gs (bad) 
   140008619:	jae    0x140008680
   14000861b:	push   rax
   14000861c:	(bad)  
   14000861d:	jb     0x140008680
   14000861f:	ins    DWORD PTR es:[rdi],dx
   140008620:	gs je  0x140008688
   140008623:	jb     0x140008698
   140008625:	add    BYTE PTR [rcx],cl
   140008627:	add    BYTE PTR [rax+rbp*2+0x63],al
   14000862b:	jo     0x1400086a3
   14000862d:	ss rex.RXB
   14000862f:	gs je  0x140008687
   140008632:	jae    0x140008699
   140008634:	jb     0x140008679
   140008636:	ins    BYTE PTR es:[rdi],dx
   140008637:	(bad)  
   140008638:	jae    0x1400086ad
   14000863a:	gs jae 0x14000863d
   14000863d:	add    BYTE PTR [rip+0x63684400],dl        # 0x1a368ca43
   140008643:	jo     0x1400086bb
   140008645:	ss push rbx
   140008647:	gs je  0x14000869f
   14000864a:	jae    0x1400086b1
   14000864c:	jb     0x140008691
   14000864e:	ins    BYTE PTR es:[rdi],dx
   14000864f:	(bad)  
   140008650:	jae    0x1400086c5
   140008652:	add    BYTE PTR [rax],al
   140008654:	or     al,BYTE PTR [rax]
   140008656:	rex.WRX jae 0x1400086c2
   140008659:	rex.RXB
   14000865a:	gs je  0x14000869e
   14000865d:	ins    BYTE PTR es:[rdi],dx
   14000865e:	ins    BYTE PTR es:[rdi],dx
   14000865f:	push   rax
   140008660:	(bad)  
   140008661:	jb     0x1400086c4
   140008663:	ins    DWORD PTR es:[rdi],dx
   140008664:	gs je  0x1400086cc
   140008667:	jb     0x1400086dc
   140008669:	add    BYTE PTR [rcx],al
   14000866b:	add    BYTE PTR [rsi+0x73],cl
   14000866e:	imul   eax,DWORD PTR [rcx+0x6c],0x61636f6c
   140008675:	je     0x1400086dc
   140008677:	rex.B outs dx,BYTE PTR ds:[rsi]
   140008679:	fs rex.RXB
   14000867b:	gs je  0x1400086d2
   14000867e:	(bad)  
   14000867f:	(bad)  
   140008680:	ins    BYTE PTR es:[rdi],dx
   140008681:	add    BYTE PTR gs:[rax],al
   140008684:	or     DWORD PTR [rax],eax
   140008686:	rex.WRX jae 0x1400086f2
   140008689:	rex.RX jb 0x1400086f1
   14000868c:	gs push rsp
   14000868e:	(bad)  
   14000868f:	(bad)  
   140008690:	ins    BYTE PTR es:[rdi],dx
   140008691:	add    BYTE PTR gs:[rax],al
   140008694:	fs push 0x73637063
   14000869a:	jbe    0x1400086ff
   14000869c:	cs rex.R
   14000869e:	rex.WR
   14000869f:	rex.WR add BYTE PTR [rax],r8b
   1400086a2:	rex.WRX push rbx
   1400086a4:	rex.WB
   1400086a5:	cs fs ins BYTE PTR es:[rdi],dx
   1400086a8:	ins    BYTE PTR es:[rdi],dx
   1400086a9:	add    BYTE PTR [rax+rbp*2+0x63],ah
   1400086ad:	jo     0x140008712
   1400086af:	jae    0x140008727
   1400086b1:	movsxd esi,DWORD PTR [rsi]
   1400086b3:	cs rex.R
   1400086b5:	rex.WR
   1400086b6:	rex.WR add BYTE PTR [rcx],r15b
   1400086b9:	add    eax,0x536c7452
   1400086be:	je     0x140008732
   1400086c0:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   1400086c7:	rex.RXB push r13
   1400086c9:	rex.WB
   1400086ca:	add    BYTE PTR [rax+0x6c745203],r14b
   1400086d1:	rex.RX jb 0x140008739
   1400086d4:	gs push rbp
   1400086d6:	outs   dx,BYTE PTR ds:[rsi]
   1400086d7:	imul   esp,DWORD PTR [rbx+0x6f],0x74536564
   1400086de:	jb     0x140008749
   1400086e0:	outs   dx,BYTE PTR ds:[rsi]
   1400086e1:	add    BYTE PTR [eax],al
   1400086e4:	(bad)  
   1400086e5:	add    al,0x52
   1400086e7:	je     0x140008755
   1400086e9:	rex.WB jo 0x140008762
   1400086ec:	xor    al,0x41
   1400086ee:	fs fs jb 0x140008757
   1400086f2:	jae    0x140008767
   1400086f4:	push   rsp
   1400086f5:	outs   dx,DWORD PTR ds:[rsi]
   1400086f6:	push   rbx
   1400086f7:	je     0x14000876b
   1400086f9:	imul   ebp,DWORD PTR [rsi+0x67],0x577845
   140008700:	(bad)  
   140008701:	add    al,0x52
   140008703:	je     0x140008771
   140008705:	rex.WB jo 0x14000877e
   140008708:	ss rex.B
   14000870a:	fs fs jb 0x140008773
   14000870e:	jae    0x140008783
   140008710:	push   rsp
   140008711:	outs   dx,DWORD PTR ds:[rsi]
   140008712:	push   rbx
   140008713:	je     0x140008787
   140008715:	imul   ebp,DWORD PTR [rsi+0x67],0x577845
   14000871c:	add    al,0x52
   14000871f:	je     0x14000878d
   140008721:	rex.WB jo 0x14000879a
   140008724:	ss rex.B
   140008726:	fs fs jb 0x14000878f
   14000872a:	jae    0x14000879f
   14000872c:	push   rsp
   14000872d:	outs   dx,DWORD PTR ds:[rsi]
   14000872e:	push   rbx
   14000872f:	je     0x1400087a3
   140008731:	imul   ebp,DWORD PTR [rsi+0x67],0x746e0057
   140008738:	fs ins BYTE PTR es:[rdi],dx
   14000873a:	ins    BYTE PTR es:[rdi],dx
   14000873b:	cs fs ins BYTE PTR es:[rdi],dx
   14000873e:	ins    BYTE PTR es:[rdi],dx
   14000873f:	add    BYTE PTR [rcx+0x695f5f00],al
   140008745:	outs   dx,DWORD PTR ds:[rsi]
   140008746:	(bad)  
   140008747:	pop    rdi
   140008748:	data16 jne 0x1400087b9
   14000874b:	movsxd eax,DWORD PTR [rax]
   14000874d:	add    BYTE PTR [rcx],al
   14000874f:	add    eax,0x63736377
   140008754:	push   0xffffffff8a000072
   140008759:	add    ebx,DWORD PTR [rdi+0x77]
   14000875c:	movsxd esi,DWORD PTR [rbx+0x69]
   14000875f:	movsxd ebp,DWORD PTR [rbp+0x70]
   140008762:	add    BYTE PTR [rax],al
   140008764:	push   rbp
   140008765:	add    al,0x66
   140008767:	ja     0x1400087d9
   140008769:	jb     0x1400087d4
   14000876b:	outs   dx,BYTE PTR ds:[rsi]
   14000876c:	je     0x1400087d4
   14000876e:	add    BYTE PTR [rax],al
   140008770:	cmp    eax,DWORD PTR [rsi+riz*2]
   140008773:	addr32 gs je 0x1400087e7
   140008777:	outs   dx,DWORD PTR ds:[rsi]
   140008778:	jae    0x14000877a
   14000877a:	cmp    DWORD PTR [rsi+riz*2],eax
   14000877d:	data16 ins BYTE PTR es:[rdi],dx
   14000877f:	jne    0x1400087f4
   140008781:	push   0x11b0000
   140008786:	pop    rdi
   140008787:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
   14000878e:	enter  0x5f02,0x73
   140008792:	gs je  0x140008802
   140008795:	outs   dx,DWORD PTR ds:[rsi]
   140008796:	fs add BYTE PTR gs:[rax],al
   14000879a:	push   rbp
   14000879b:	add    DWORD PTR [rdi+0x67],ebx
   14000879e:	gs je  0x140008800
   1400087a1:	outs   dx,DWORD PTR ds:[rsi]
   1400087a2:	jae    0x14000880a
   1400087a4:	push   0x6c646e61
   1400087a9:	add    BYTE PTR gs:[rax],al
   1400087ac:	in     al,0x3
   1400087ae:	pop    rdi
   1400087af:	ja     0x140008823
   1400087b1:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x41001600
   1400087b9:	ins    BYTE PTR es:[rdi],dx
   1400087ba:	ins    BYTE PTR es:[rdi],dx
   1400087bb:	outs   dx,DWORD PTR ds:[rsi]
   1400087bc:	movsxd esp,DWORD PTR [rcx+0x74]
   1400087bf:	rex.B outs dx,BYTE PTR gs:[rsi]
   1400087c2:	rex.WB outs dx,BYTE PTR fs:[rsi]
   1400087c5:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400087cd:	push   rbx
   1400087ce:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7246002c
   1400087d6:	gs gs push rbx
   1400087d9:	imul   esp,DWORD PTR [rax+rax*1+0x1b],0x65684300
   1400087e1:	movsxd ebp,DWORD PTR [rbx+0x54]
   1400087e4:	outs   dx,DWORD PTR ds:[rsi]
   1400087e5:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   1400087e9:	gs ins DWORD PTR es:[rdi],dx
   1400087eb:	(bad)  
   1400087ec:	gs jb  0x140008862
   1400087ef:	push   0x7069
   1400087f4:	(bad)  
   1400087f5:	jo     0x140008860
   1400087f7:	sub    eax,0x772d736d
   1400087fc:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   140008803:	jb     0x14000886e
   140008805:	je     0x140008880
   140008807:	sub    eax,0x65736162
   14000880c:	sub    eax,0x322d316c
   140008811:	sub    eax,0x6c642e30
   140008816:	ins    BYTE PTR es:[rdi],dx
   140008817:	add    BYTE PTR [rdx+0x6d656d04],dl
   14000881d:	movsxd esi,DWORD PTR [rax+0x79]
   140008820:	add    BYTE PTR [rax],al
   140008822:	xchg   esi,eax
   140008823:	add    al,0x6d
   140008825:	gs ins DWORD PTR es:[rdi],dx
   140008827:	jae    0x14000888e
   140008829:	je     0x14000882b
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	or     BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	ret    
   14000a005:	adc    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rax],al
   14000a009:	jae    0x14000a00b
   14000a00b:	add    ah,cl
   14000a00d:	adc    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rdi],ch
   14000a011:	adc    DWORD PTR [rax],eax
   14000a013:	add    BYTE PTR [rax],dl
   14000a015:	jae    0x14000a017
   14000a017:	add    BYTE PTR [rax],bh
   14000a019:	adc    DWORD PTR [rax],eax
   14000a01b:	add    bl,dl
   14000a01d:	adc    al,BYTE PTR [rax]
   14000a01f:	add    BYTE PTR [rax],bl
   14000a021:	jae    0x14000a023
   14000a023:	add    ah,bl
   14000a025:	adc    al,BYTE PTR [rax]
   14000a027:	add    BYTE PTR [rcx+0x14],dl
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	cmp    BYTE PTR [rbx+0x0],dh
   14000a02f:	add    BYTE PTR [rax+0x14],bl
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	xor    al,0x16
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	sbb    BYTE PTR [rbx+0x0],dh
   14000a03b:	add    BYTE PTR [rsi+rdx*1],bh
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	rex.WB (bad) 
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	push   rsp
   14000a045:	jae    0x14000a047
   14000a047:	add    BYTE PTR [rax+0x17],dl
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	out    0x19,eax
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	je     0x14000a0c5
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	lock sbb DWORD PTR [rax],eax
   14000a057:	add    BYTE PTR [rbp-0x67ffffe6],al
   14000a05d:	jae    0x14000a05f
   14000a05f:	add    BYTE PTR [rdx+rbx*1+0x1c220000],cl
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	lods   al,BYTE PTR ds:[rsi]
   14000a069:	jae    0x14000a06b
   14000a06b:	add    BYTE PTR [rax],ch
   14000a06d:	sbb    al,0x0
   14000a06f:	add    BYTE PTR [rax-0x33ffffe3],dl
   14000a075:	jae    0x14000a077
   14000a077:	add    BYTE PTR [rax+0x7200001d],bl
   14000a07d:	(bad)  
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	sbb    BYTE PTR [rbx+0x0],dh
   14000a083:	add    BYTE PTR [rax+0x1f],bh
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	test   DWORD PTR [rax],esp
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	push   rsp
   14000a08d:	jae    0x14000a08f
   14000a08f:	add    BYTE PTR [rax+riz*1+0x22e20000],cl
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	call   0x1b000a110
   14000a09d:	and    eax,DWORD PTR [rax]
   14000a09f:	add    BYTE PTR [rdx],ch
   14000a0a1:	and    al,0x0
   14000a0a3:	add    BYTE PTR [rax],cl
   14000a0a5:	je     0x14000a0a7
   14000a0a7:	add    BYTE PTR [rax],dh
   14000a0a9:	and    al,0x0
   14000a0ab:	add    bh,bh
   14000a0ad:	and    al,0x0
   14000a0af:	add    BYTE PTR [rsp+rsi*2],ah
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	or     BYTE PTR [rip+0x25ce0000],ah        # 0x165cea0ba
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	cmp    al,0x74
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	(bad)  
   14000a0c1:	and    eax,0x264b0000
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	push   rax
   14000a0c9:	je     0x14000a0cb
   14000a0cb:	add    BYTE PTR [rsi+riz*1+0x0],dl
   14000a0cf:	add    BYTE PTR [rbx+0x60000027],cl
   14000a0d5:	je     0x14000a0d7
   14000a0d7:	add    BYTE PTR [rdi+riz*1+0x284b0000],dl
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	xor    BYTE PTR [rax+rax*1+0x0],0x54
   14000a0e5:	sub    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rsi+0x29],al
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	cwde   
   14000a0ed:	je     0x14000a0ef
   14000a0ef:	add    BYTE PTR [rcx+rbp*1+0x0],cl
   14000a0f3:	add    BYTE PTR [rcx+0x2a],ah
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	mov    ah,0x74
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	push   0xffffffffc000002a
   14000a101:	sub    al,0x0
   14000a103:	add    ah,dl
   14000a105:	je     0x14000a107
   14000a107:	add    al,cl
   14000a109:	sub    al,0x0
   14000a10b:	add    BYTE PTR [rsi+0x2e],dl
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	clc    
   14000a111:	je     0x14000a113
   14000a113:	add    BYTE PTR [rsi+rbp*1+0x0],bl
   14000a117:	add    BYTE PTR [rbx],cl
   14000a119:	(bad)  
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	or     al,0x75
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	adc    al,0x2f
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	outs   dx,BYTE PTR ds:[rsi]
   14000a125:	(bad)  
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	sbb    al,0x75
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	je     0x14000a15d
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	pop    rdx
   14000a131:	xor    BYTE PTR [rax],al
   14000a133:	add    BYTE PTR [rsi*2+0x30600000],ah
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	in     al,0x38
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	cmp    BYTE PTR [rbp+0x0],dh
   14000a143:	add    ah,ch
   14000a145:	cmp    BYTE PTR [rax],al
   14000a147:	add    BYTE PTR [rbp+0x3b],cl
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	(bad)  
   14000a14d:	jne    0x14000a14f
   14000a14f:	add    BYTE PTR [rbx+rdi*1+0x0],dl
   14000a153:	add    BYTE PTR [rax+0x1c00003b],cl
   14000a159:	jne    0x14000a15b
   14000a15b:	add    BYTE PTR [rax+0x4900003b],dl
   14000a161:	add    BYTE PTR ds:[rax],al
   14000a164:	test   BYTE PTR [rbp+0x0],dh
   14000a167:	add    BYTE PTR [rax+0x3e],dl
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	cmc    
   14000a16d:	add    BYTE PTR ds:[rax],al
   14000a170:	pushf  
   14000a171:	jne    0x14000a173
   14000a173:	add    ah,bh
   14000a175:	add    BYTE PTR ds:[rax],al
   14000a178:	xor    DWORD PTR [rax+0x0],eax
   14000a17b:	add    BYTE PTR [rbp+rsi*2+0x40380000],ch
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	jne    0x14000a1cc
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	mov    esp,0x7c000075
   14000a18d:	rex.RX add BYTE PTR [rax],r8b
   14000a190:	cmc    
   14000a191:	rex.RX add BYTE PTR [rax],r8b
   14000a194:	loopne 0x14000a20b
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	cld    
   14000a199:	rex.RX add BYTE PTR [rax],r8b
   14000a19c:	add    BYTE PTR [rdi+0x0],0x0
   14000a1a0:	lock jne 0x14000a1a3
   14000a1a3:	add    BYTE PTR [rax-0x6affffb9],cl
   14000a1a9:	rex.WB add BYTE PTR [r8],al
   14000a1ac:	cld    
   14000a1ad:	jne    0x14000a1af
   14000a1af:	add    BYTE PTR [rcx+rcx*2+0x4a0a0000],bl
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	and    BYTE PTR [rsi+0x0],dh
   14000a1bb:	add    BYTE PTR [rdx+rcx*2+0x0],ah
   14000a1bf:	add    BYTE PTR [rcx],dl
   14000a1c1:	rex.WXB add BYTE PTR [r8],al
   14000a1c4:	sub    BYTE PTR [rsi+0x0],dh
   14000a1c7:	add    BYTE PTR [rax],bl
   14000a1c9:	rex.WXB add BYTE PTR [r8],al
   14000a1cc:	rex.WB
   14000a1cd:	rex.WXB add BYTE PTR [r8],al
   14000a1d0:	cmp    al,0x76
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	push   rax
   14000a1d5:	rex.WXB add BYTE PTR [r8],al
   14000a1d8:	dec    BYTE PTR [rbx+0x0]
   14000a1db:	add    BYTE PTR [rsi+rsi*2+0x0],al
   14000a1df:	add    BYTE PTR [rax],dl
   14000a1e1:	rex.WR add BYTE PTR [rax],r8b
   14000a1e4:	fisttp WORD PTR [rax+rax*1+0x0]
   14000a1e8:	adc    BYTE PTR [rbx+0x0],dh
   14000a1eb:	add    al,dh
   14000a1ed:	rex.WR add BYTE PTR [rax],r8b
   14000a1f0:	cmp    DWORD PTR [rbp+0x0],ecx
   14000a1f3:	add    BYTE PTR [rsi*2+0x4d400000],bl
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	adc    cl,BYTE PTR [rdi+0x0]
   14000a1ff:	add    BYTE PTR [rax+0x76],bl
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	and    BYTE PTR [rdi+0x0],cl
   14000a207:	add    BYTE PTR [rdx],dh
   14000a209:	rex.WRXB add BYTE PTR [r8],r8b
   14000a20c:	adc    BYTE PTR [rbx+0x0],dh
   14000a20f:	add    BYTE PTR [rax+0x4f],dl
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	outs   dx,BYTE PTR ds:[rsi]
   14000a215:	rex.WRXB add BYTE PTR [r8],r8b
   14000a218:	mov    BYTE PTR [rsi+0x0],dh
   14000a21b:	add    BYTE PTR [rdi+rcx*2+0x0],dh
   14000a21f:	add    BYTE PTR [rax+0x3c00004f],ch
   14000a225:	jbe    0x14000a227
   14000a227:	add    BYTE PTR [rax+0x2100004f],dh
   14000a22d:	push   rcx
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	xchg   esp,eax
   14000a231:	jbe    0x14000a233
   14000a233:	add    BYTE PTR [rax],ch
   14000a235:	push   rcx
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	(bad)  
   14000a239:	push   rdx
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	mov    WORD PTR [rsi+0x0],?
   14000a23f:	add    BYTE PTR [rax],dh
   14000a241:	push   rdx
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	imul   edx,DWORD PTR [rdx+0x0],0x731000
   14000a24b:	add    BYTE PTR [rax+0x52],dh
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	mov    BYTE PTR [rdx+0x0],dl
   14000a253:	add    BYTE PTR [rax],dl
   14000a255:	jae    0x14000a257
   14000a257:	add    BYTE PTR [rdx+rdx*2+0x52f00000],bl
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	pushf  
   14000a261:	jbe    0x14000a263
   14000a263:	add    al,bh
   14000a265:	push   rdx
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	cmp    eax,0x3c000053
   14000a26d:	jbe    0x14000a26f
   14000a26f:	add    BYTE PTR [rax-0x2ffffad],dh
   14000a275:	push   rbx
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	mov    esp,0x44000076
   14000a27d:	push   rsp
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	adc    al,0x55
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	call   0x19800a2ff
   14000a289:	push   rbp
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	jbe    0x14000a2e3
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	cmp    al,0x76
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	mov    BYTE PTR [rbp+0x0],dl
   14000a297:	add    BYTE PTR [rbp+0x10000055],ah
   14000a29d:	jae    0x14000a29f
   14000a29f:	add    BYTE PTR [rbp+rdx*2+0x560f0000],ch
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	cmp    al,0x76
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	rex push rsi
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	rex.X push rsi
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	clc    
   14000a2b5:	jbe    0x14000a2b7
   14000a2b7:	add    BYTE PTR [rsi+0x56],dl
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	je     0x14000a314
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	loopne 0x14000a338
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	adc    BYTE PTR [rsi+0x0],0x0
   14000a2c8:	.byte 0xa0
   14000a2c9:	push   rsi
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	loopne 0x14000a344
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    al,BYTE PTR [rax]
   14000b010:	call   0x16880b015
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	adc    BYTE PTR [rax],0x0
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	add    BYTE PTR [rax],al
   14000b01f:	sbb    BYTE PTR [rax],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	pop    rax
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax],0x0
	...
   14000b036:	add    DWORD PTR [rax],eax
   14000b038:	add    DWORD PTR [rax],eax
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	jo     0x14000b03e
   14000b03e:	add    BYTE PTR [rax+0x0],al
	...
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    DWORD PTR [rax],eax
   14000b050:	add    DWORD PTR [rax],eax
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	mov    BYTE PTR [rax],al
   14000b056:	add    BYTE PTR [rax+0x0],al
	...
   14000b064:	add    BYTE PTR [rax],al
   14000b066:	add    DWORD PTR [rax],eax
   14000b068:	add    DWORD PTR [rax],eax
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	movabs al,ds:0x800000
	...
   14000b07d:	add    BYTE PTR [rcx],al
   14000b07f:	add    BYTE PTR [rcx],cl
   14000b081:	add    al,0x0
   14000b083:	add    BYTE PTR [rax+0x0],bh
	...
   14000b095:	add    BYTE PTR [rcx],al
   14000b097:	add    BYTE PTR [rcx],cl
   14000b099:	add    al,0x0
   14000b09b:	add    al,cl
	...
   14000b0ad:	add    BYTE PTR [rcx],al
   14000b0af:	add    BYTE PTR [rcx],cl
   14000b0b1:	add    al,0x0
   14000b0b3:	add    al,bl
   14000b0b5:	add    BYTE PTR [rax],al
   14000b0b7:	add    BYTE PTR [rax-0x49],dh
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	enter  0x0,0x0
	...
   14000b0c8:	shl    BYTE PTR [rbx+0x3a00000],1
	...
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	lock mov al,0x0
   14000b0db:	add    bh,bl
   14000b0dd:	add    al,BYTE PTR [rax]
	...
   14000b0e7:	add    BYTE PTR [rbx],al
   14000b0e9:	add    BYTE PTR [rbp+0x0],cl
   14000b0ec:	push   rbp
   14000b0ed:	add    BYTE PTR [rcx+0x0],cl
   14000b0f0:	cmp    al,0x3f
   14000b0f2:	js     0x14000b161
   14000b0f4:	ins    BYTE PTR es:[rdi],dx
   14000b0f5:	and    BYTE PTR [rsi+0x65],dh
   14000b0f8:	jb     0x14000b16d
   14000b0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b101:	xor    BYTE PTR [rdx],ah
   14000b103:	and    BYTE PTR [rbp+0x6e],ah
   14000b106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b110:	rex.RX sub eax,0x73202238
   14000b116:	je     0x14000b179
   14000b118:	outs   dx,BYTE PTR ds:[rsi]
   14000b119:	fs (bad) 
   14000b11b:	ins    BYTE PTR es:[rdi],dx
   14000b11c:	outs   dx,DWORD PTR ds:[rsi]
   14000b11d:	outs   dx,BYTE PTR ds:[rsi]
   14000b11e:	gs cmp eax,0x73657922
   14000b124:	and    bh,BYTE PTR [rdi]
   14000b126:	ds or  eax,0x2d213c0a
   14000b12c:	sub    eax,0x706f4320
   14000b131:	jns    0x14000b1a5
   14000b133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000b13a:	sub    DWORD PTR [rax],esp
   14000b13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000b144:	je     0x14000b166
   14000b146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b148:	jb     0x14000b1ba
   14000b14a:	outs   dx,DWORD PTR ds:[rsi]
   14000b14b:	jb     0x14000b1ae
   14000b14d:	je     0x14000b1b8
   14000b14f:	outs   dx,DWORD PTR ds:[rsi]
   14000b150:	outs   dx,BYTE PTR ds:[rsi]
   14000b151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0def84
   14000b157:	cmp    al,0x61
   14000b159:	jae    0x14000b1ce
   14000b15b:	gs ins DWORD PTR es:[rdi],dx
   14000b15d:	(bad)  
   14000b15e:	ins    BYTE PTR es:[rdi],dx
   14000b15f:	jns    0x14000b181
   14000b161:	js     0x14000b1d0
   14000b163:	ins    BYTE PTR es:[rdi],dx
   14000b164:	outs   dx,BYTE PTR ds:[rsi]
   14000b165:	jae    0x14000b1a4
   14000b167:	and    dh,BYTE PTR [rbp+0x72]
   14000b16a:	outs   dx,BYTE PTR ds:[rsi]
   14000b16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b16e:	push   0x73616d65
   14000b173:	sub    eax,0x7263696d
   14000b178:	outs   dx,DWORD PTR ds:[rsi]
   14000b179:	jae    0x14000b1ea
   14000b17b:	data16 je 0x14000b1ab
   14000b17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b184:	ins    DWORD PTR es:[rdi],dx
   14000b185:	cs jbe 0x14000b1b9
   14000b188:	and    cl,BYTE PTR [rip+0x616d200a]        # 0x1a16dd198
   14000b18e:	outs   dx,BYTE PTR ds:[rsi]
   14000b18f:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b196:	jb     0x14000b20b
   14000b198:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b19f:	xor    BYTE PTR [rdx],ah
   14000b1a1:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x1600abeb2
   14000b1a8:	and    BYTE PTR [rcx+riz*2],bh
   14000b1ab:	jae    0x14000b220
   14000b1ad:	gs ins DWORD PTR es:[rdi],dx
   14000b1af:	(bad)  
   14000b1b0:	ins    BYTE PTR es:[rdi],dx
   14000b1b1:	jns    0x14000b1fc
   14000b1b3:	fs outs dx,BYTE PTR gs:[rsi]
   14000b1b6:	je     0x14000b221
   14000b1b8:	je     0x14000b233
   14000b1ba:	and    BYTE PTR [rsi+0x65],dh
   14000b1bd:	jb     0x14000b232
   14000b1bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000b1c6:	xor    DWORD PTR [rsi],ebp
   14000b1c8:	xor    BYTE PTR [rsi],ch
   14000b1ca:	xor    BYTE PTR [rdx],ah
   14000b1cc:	or     eax,0x2020200a
   14000b1d1:	and    BYTE PTR [rax],ah
   14000b1d3:	jo     0x14000b247
   14000b1d5:	outs   dx,DWORD PTR ds:[rsi]
   14000b1d6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b1d9:	jae    0x14000b24a
   14000b1db:	jb     0x14000b21e
   14000b1dd:	jb     0x14000b242
   14000b1df:	push   0x63657469
   14000b1e4:	je     0x14000b25b
   14000b1e6:	jb     0x14000b24d
   14000b1e8:	cmp    eax,0x646d6122
   14000b1ed:	ss xor al,0x22
   14000b1f0:	or     eax,0x2020200a
   14000b1f5:	and    BYTE PTR [rax],ah
   14000b1f7:	outs   dx,BYTE PTR ds:[rsi]
   14000b1f8:	(bad)  
   14000b1f9:	ins    DWORD PTR es:[rdi],dx
   14000b1fa:	gs cmp eax,0x63694d22
   14000b200:	jb     0x14000b271
   14000b202:	jae    0x14000b273
   14000b204:	data16 je 0x14000b235
   14000b207:	push   rdi
   14000b208:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b20f:	rex.WRX
   14000b210:	gs je  0x14000b241
   14000b213:	imul   esi,DWORD PTR [rax+0x63],0x69666e6f
   14000b21a:	and    cl,BYTE PTR [eip+0x2020200a]        # 0x16020d22b
   14000b221:	and    BYTE PTR [rax],ah
   14000b223:	je     0x14000b29e
   14000b225:	jo     0x14000b28c
   14000b227:	cmp    eax,0x6e697722
   14000b22c:	xor    esi,DWORD PTR [rdx]
   14000b22e:	and    ch,BYTE PTR [rdi]
   14000b230:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x1600abf41
   14000b237:	and    BYTE PTR [rsp+riz*2],bh
   14000b23a:	gs jae 0x14000b2a0
   14000b23d:	jb     0x14000b2a8
   14000b23f:	jo     0x14000b2b5
   14000b241:	imul   ebp,DWORD PTR [rdi+0x6e],0x6370693e
   14000b248:	outs   dx,DWORD PTR ds:[rsi]
   14000b249:	outs   dx,BYTE PTR ds:[rsi]
   14000b24a:	imul   sp,WORD PTR [rdi+0x20],0x202d
   14000b250:	imul   esi,DWORD PTR [rax+0x63],0x69666e6f
   14000b257:	and    BYTE PTR [ebx+0x6f],ah
   14000b25b:	ins    DWORD PTR es:[rdi],dx
   14000b25c:	ins    DWORD PTR es:[rdi],dx
   14000b25d:	(bad)  
   14000b25e:	outs   dx,BYTE PTR ds:[rsi]
   14000b25f:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14000b264:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000b269:	ins    BYTE PTR es:[rdi],dx
   14000b26a:	cs cmp al,0x2f
   14000b26d:	fs gs jae 0x14000b2d4
   14000b271:	jb     0x14000b2dc
   14000b273:	jo     0x14000b2e9
   14000b275:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
   14000b27c:	or     eax,0x3c20200a
   14000b281:	and    DWORD PTR [rip+0x6449202d],ebp        # 0x1a449d2b4
   14000b287:	outs   dx,BYTE PTR gs:[rsi]
   14000b289:	je     0x14000b2f4
   14000b28b:	data16 jns 0x14000b2ae
   14000b28e:	je     0x14000b2f8
   14000b290:	and    BYTE PTR gs:[rcx+0x70],ah
   14000b294:	jo     0x14000b302
   14000b296:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b29d:	and    BYTE PTR [rbx+0x65],dh
   14000b2a0:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b2a3:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14000b2ab:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000b2b2:	jae    0x14000b2e2
   14000b2b4:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0df0e7
   14000b2ba:	or     eax,0x3c20200a
   14000b2bf:	je     0x14000b333
   14000b2c1:	jne    0x14000b336
   14000b2c3:	je     0x14000b30e
   14000b2c5:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c6:	outs   dx,WORD PTR ds:[rsi]
   14000b2c8:	and    BYTE PTR [rax+0x6d],bh
   14000b2cb:	ins    BYTE PTR es:[rdi],dx
   14000b2cc:	outs   dx,BYTE PTR ds:[rsi]
   14000b2cd:	jae    0x14000b30c
   14000b2cf:	and    dh,BYTE PTR [rbp+0x72]
   14000b2d2:	outs   dx,BYTE PTR ds:[rsi]
   14000b2d3:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b2d6:	push   0x73616d65
   14000b2db:	sub    eax,0x7263696d
   14000b2e0:	outs   dx,DWORD PTR ds:[rsi]
   14000b2e1:	jae    0x14000b352
   14000b2e3:	data16 je 0x14000b313
   14000b2e6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b2e9:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b2ec:	ins    DWORD PTR es:[rdi],dx
   14000b2ed:	cs jbe 0x14000b323
   14000b2f0:	and    bh,BYTE PTR [rsi]
   14000b2f2:	or     eax,0x2020200a
   14000b2f7:	and    BYTE PTR [rbx+rsi*2],bh
   14000b2fa:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b2fe:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b306:	and    BYTE PTR [rax],ah
   14000b308:	and    BYTE PTR [rax],ah
   14000b30a:	cmp    al,0x72
   14000b30c:	gs jno 0x14000b384
   14000b30f:	gs jae 0x14000b386
   14000b312:	gs fs push rax
   14000b315:	jb     0x14000b380
   14000b317:	jbe    0x14000b382
   14000b319:	ins    BYTE PTR es:[rdi],dx
   14000b31a:	gs addr32 gs jae 0x14000b35d
   14000b31f:	or     eax,0x2020200a
   14000b324:	and    BYTE PTR [rax],ah
   14000b326:	and    BYTE PTR [rax],ah
   14000b328:	and    BYTE PTR [rdx+rsi*2],bh
   14000b32b:	gs jno 0x14000b3a3
   14000b32e:	gs jae 0x14000b3a5
   14000b331:	gs fs rex.RB js 0x14000b39b
   14000b336:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b339:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b340:	ins    BYTE PTR es:[rdi],dx
   14000b341:	or     eax,0x2020200a
   14000b346:	and    BYTE PTR [rax],ah
   14000b348:	and    BYTE PTR [rax],ah
   14000b34a:	and    BYTE PTR [rax],ah
   14000b34c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b350:	gs ins BYTE PTR es:[rdi],dx
   14000b352:	cmp    eax,0x49736122
   14000b357:	outs   dx,BYTE PTR ds:[rsi]
   14000b358:	jbe    0x14000b3c9
   14000b35a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b35e:	or     eax,0x2020200a
   14000b363:	and    BYTE PTR [rax],ah
   14000b365:	and    BYTE PTR [rax],ah
   14000b367:	and    BYTE PTR [rax],ah
   14000b369:	and    BYTE PTR [rbp+0x69],dh
   14000b36c:	movsxd esp,DWORD PTR [r11+0x65]
   14000b370:	jae    0x14000b3e5
   14000b372:	cmp    eax,0x6c616622
   14000b377:	jae    0x14000b3de
   14000b379:	and    ch,BYTE PTR [rdi]
   14000b37b:	ds or  eax,0x2020200a
   14000b381:	and    BYTE PTR [rax],ah
   14000b383:	and    BYTE PTR [rax],ah
   14000b385:	and    BYTE PTR [rdi+rbp*1],bh
   14000b388:	jb     0x14000b3ef
   14000b38a:	jno    0x14000b401
   14000b38c:	gs jae 0x14000b403
   14000b38f:	gs fs push rax
   14000b392:	jb     0x14000b3fd
   14000b394:	jbe    0x14000b3ff
   14000b396:	ins    BYTE PTR es:[rdi],dx
   14000b397:	gs addr32 gs jae 0x14000b3da
   14000b39c:	or     eax,0x2020200a
   14000b3a1:	and    BYTE PTR [rax],ah
   14000b3a3:	and    BYTE PTR [rax],ah
   14000b3a5:	cmp    al,0x2f
   14000b3a7:	jae    0x14000b40e
   14000b3a9:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b3ac:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b3b4:	cmp    al,0x2f
   14000b3b6:	je     0x14000b42a
   14000b3b8:	jne    0x14000b42d
   14000b3ba:	je     0x14000b405
   14000b3bc:	outs   dx,BYTE PTR ds:[rsi]
   14000b3bd:	outs   dx,WORD PTR ds:[rsi]
   14000b3bf:	ds or  eax,0x3c0a0d0a
   14000b3c5:	(bad)  
   14000b3c6:	(bad)  
   14000b3c7:	jae    0x14000b43c
   14000b3c9:	gs ins DWORD PTR es:[rdi],dx
   14000b3cb:	(bad)  
   14000b3cc:	ins    BYTE PTR es:[rdi],dx
   14000b3cd:	jns    0x14000b40d
   14000b3cf:	add    BYTE PTR [rax+0x3403],ah
   14000b3d5:	add    BYTE PTR [rsi+0x0],dl
   14000b3d8:	push   rbx
   14000b3d9:	add    BYTE PTR [rdi+0x0],bl
   14000b3dc:	push   rsi
   14000b3dd:	add    BYTE PTR [rbp+0x0],al
   14000b3e0:	push   rdx
   14000b3e1:	add    BYTE PTR [rbx+0x0],dl
   14000b3e4:	rex.WB add BYTE PTR [r15+0x0],cl
   14000b3e8:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000b3ec:	rex.WB add BYTE PTR [r14+0x0],cl
   14000b3f0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000b3f4:	add    BYTE PTR [rax],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	mov    ebp,0xfeef04
   14000b3fd:	add    BYTE PTR [rcx],al
   14000b3ff:	add    BYTE PTR [rax],al
   14000b401:	add    BYTE PTR [rdx],cl
   14000b403:	add    BYTE PTR [rax],al
   14000b405:	add    BYTE PTR [rax],bpl
   14000b408:	add    BYTE PTR [rax],al
   14000b40a:	or     al,BYTE PTR [rax]
   14000b40c:	add    BYTE PTR [rax+0x0],al
   14000b40f:	sub    BYTE PTR [rdi],bh
   14000b411:	add    BYTE PTR [rax],al
   14000b413:	add    BYTE PTR [rax],al
   14000b415:	add    BYTE PTR [rax],al
   14000b417:	add    BYTE PTR [rax+rax*1],al
   14000b41a:	add    al,0x0
   14000b41c:	add    DWORD PTR [rax],eax
	...
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	inc    BYTE PTR [rdx]
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	add    DWORD PTR [rax],eax
   14000b432:	push   rbx
   14000b433:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b437:	add    BYTE PTR [rcx+0x0],ch
   14000b43a:	outs   dx,BYTE PTR ds:[rsi]
   14000b43b:	add    BYTE PTR [rdi+0x0],ah
   14000b43e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b442:	ins    BYTE PTR es:[rdi],dx
   14000b443:	add    BYTE PTR [rbp+0x0],ah
   14000b446:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b44a:	data16 add BYTE PTR [rdi+0x0],ch
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	fiadd  DWORD PTR [rdx]
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	add    DWORD PTR [rax],eax
   14000b456:	xor    BYTE PTR [rax],al
   14000b458:	xor    al,0x0
   14000b45a:	xor    BYTE PTR [rax],al
   14000b45c:	cmp    DWORD PTR [rax],eax
   14000b45e:	xor    BYTE PTR [rax],al
   14000b460:	xor    al,0x0
   14000b462:	rex.X add BYTE PTR [rax],sil
   14000b465:	add    BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b46b:	add    BYTE PTR [rcx],al
   14000b46d:	add    BYTE PTR [rbx+0x0],al
   14000b470:	outs   dx,DWORD PTR ds:[rsi]
   14000b471:	add    BYTE PTR [rbp+0x0],ch
   14000b474:	jo     0x14000b476
   14000b476:	(bad)  
   14000b477:	add    BYTE PTR [rsi+0x0],ch
   14000b47a:	jns    0x14000b47c
   14000b47c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b480:	ins    DWORD PTR es:[rdi],dx
   14000b481:	add    BYTE PTR [rbp+0x0],ah
   14000b484:	add    BYTE PTR [rax],al
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b48c:	movsxd eax,DWORD PTR [rax]
   14000b48e:	jb     0x14000b490
   14000b490:	outs   dx,DWORD PTR ds:[rsi]
   14000b491:	add    BYTE PTR [rbx+0x0],dh
   14000b494:	outs   dx,DWORD PTR ds:[rsi]
   14000b495:	add    BYTE PTR [rsi+0x0],ah
   14000b498:	je     0x14000b49a
   14000b49a:	and    BYTE PTR [rax],al
   14000b49c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b4a0:	jb     0x14000b4a2
   14000b4a2:	jo     0x14000b4a4
   14000b4a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a5:	add    BYTE PTR [rdx+0x0],dh
   14000b4a8:	(bad)  
   14000b4a9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b4ad:	add    BYTE PTR [rdi+0x0],ch
   14000b4b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4b1:	add    BYTE PTR [rax],al
   14000b4b3:	add    BYTE PTR [rdx+0x0],bl
   14000b4b6:	sbb    DWORD PTR [rax],eax
   14000b4b8:	add    DWORD PTR [rax],eax
   14000b4ba:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b4be:	ins    BYTE PTR es:[rdi],dx
   14000b4bf:	add    BYTE PTR [rbp+0x0],ah
   14000b4c2:	add    BYTE PTR [rbp+0x0],r12b
   14000b4c6:	jae    0x14000b4c8
   14000b4c8:	movsxd eax,DWORD PTR [rax]
   14000b4ca:	jb     0x14000b4cc
   14000b4cc:	imul   eax,DWORD PTR [rax],0x740070
   14000b4d2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b4d8:	add    BYTE PTR [rax],al
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	rex.WB add BYTE PTR [r8+0x0],dl
   14000b4e0:	and    BYTE PTR [rax],al
   14000b4e2:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b4e6:	outs   dx,BYTE PTR ds:[rsi]
   14000b4e7:	add    BYTE PTR [rsi+0x0],ah
   14000b4ea:	imul   eax,DWORD PTR [rax],0x750067
   14000b4f0:	jb     0x14000b4f2
   14000b4f2:	(bad)  
   14000b4f3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b4f7:	add    BYTE PTR [rdi+0x0],ch
   14000b4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000b4fb:	add    BYTE PTR [rax],ah
   14000b4fd:	add    BYTE PTR [rbp+0x0],dl
   14000b500:	je     0x14000b502
   14000b502:	imul   eax,DWORD PTR [rax],0x69006c
   14000b508:	je     0x14000b50a
   14000b50a:	jns    0x14000b50c
   14000b50c:	add    BYTE PTR [rax],al
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	data16 add BYTE PTR [rbx],ah
   14000b513:	add    BYTE PTR [rcx],al
   14000b515:	add    BYTE PTR [rsi+0x0],al
   14000b518:	imul   eax,DWORD PTR [rax],0x65006c
   14000b51e:	push   rsi
   14000b51f:	add    BYTE PTR [rbp+0x0],ah
   14000b522:	jb     0x14000b524
   14000b524:	jae    0x14000b526
   14000b526:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b52c:	add    BYTE PTR [rax],al
   14000b52e:	add    BYTE PTR [rax],al
   14000b530:	xor    DWORD PTR [rax],eax
   14000b532:	xor    BYTE PTR [rax],al
   14000b534:	add    BYTE PTR cs:[rax],dh
   14000b537:	add    BYTE PTR [rsi],ch
   14000b539:	add    BYTE PTR [rcx],dh
   14000b53b:	add    BYTE PTR [rax],dh
   14000b53d:	add    BYTE PTR [rdx],dh
   14000b53f:	add    BYTE PTR [rax+rax*1],dh
   14000b542:	xor    BYTE PTR [rax],al
   14000b544:	add    BYTE PTR cs:[rcx],dh
   14000b547:	add    BYTE PTR [rsi],dh
   14000b549:	add    BYTE PTR [rbx],dh
   14000b54b:	add    BYTE PTR [rax],bh
   14000b54d:	add    BYTE PTR [rax+rax*1],dh
   14000b550:	and    BYTE PTR [rax],al
   14000b552:	sub    BYTE PTR [rax],al
   14000b554:	je     0x14000b556
   14000b556:	push   0x2e003100
   14000b55b:	add    BYTE PTR [rcx],dh
   14000b55d:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700e563
   14000b563:	add    BYTE PTR [rax],dh
   14000b565:	add    BYTE PTR [rcx],bh
   14000b567:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700e66d
   14000b56d:	add    BYTE PTR [rax],dh
   14000b56f:	add    BYTE PTR [rax],dh
   14000b571:	add    BYTE PTR [rcx],ch
   14000b573:	add    BYTE PTR [rax],al
   14000b575:	add    BYTE PTR [rax],al
   14000b577:	add    BYTE PTR [rdx],bh
   14000b579:	add    BYTE PTR [rip+0x49000100],cl        # 0x18900b67f
   14000b57f:	add    BYTE PTR [rsi+0x0],ch
   14000b582:	je     0x14000b584
   14000b584:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b588:	outs   dx,BYTE PTR ds:[rsi]
   14000b589:	add    BYTE PTR [rcx+0x0],ah
   14000b58c:	ins    BYTE PTR es:[rdi],dx
   14000b58d:	add    BYTE PTR [rsi+0x0],cl
   14000b590:	(bad)  
   14000b591:	add    BYTE PTR [rbp+0x0],ch
   14000b594:	add    BYTE PTR gs:[rax],al
   14000b597:	add    BYTE PTR [rcx+0x0],ch
   14000b59a:	jo     0x14000b59c
   14000b59c:	movsxd eax,DWORD PTR [rax]
   14000b59e:	outs   dx,DWORD PTR ds:[rsi]
   14000b59f:	add    BYTE PTR [rsi+0x0],ch
   14000b5a2:	data16 add BYTE PTR [rcx+0x0],ch
   14000b5a6:	add    BYTE PTR [esi],ch
   14000b5a9:	add    BYTE PTR [rbp+0x0],ah
   14000b5ac:	js     0x14000b5ae
   14000b5ae:	add    BYTE PTR gs:[rax],al
   14000b5b1:	add    BYTE PTR [rax],al
   14000b5b3:	add    BYTE PTR [rax+0x1002e00],al
   14000b5b9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b5bd:	add    BYTE PTR [rdi+0x0],ah
   14000b5c0:	(bad)  
   14000b5c1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b5c5:	add    BYTE PTR [rdi+0x0],ch
   14000b5c8:	jo     0x14000b5ca
   14000b5ca:	jns    0x14000b5cc
   14000b5cc:	jb     0x14000b5ce
   14000b5ce:	imul   eax,DWORD PTR [rax],0x680067
   14000b5d4:	je     0x14000b5d6
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	test   eax,0x4d002000
   14000b5dd:	add    BYTE PTR [rcx+0x0],ch
   14000b5e0:	movsxd eax,DWORD PTR [rax]
   14000b5e2:	jb     0x14000b5e4
   14000b5e4:	outs   dx,DWORD PTR ds:[rsi]
   14000b5e5:	add    BYTE PTR [rbx+0x0],dh
   14000b5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000b5e9:	add    BYTE PTR [rsi+0x0],ah
   14000b5ec:	je     0x14000b5ee
   14000b5ee:	and    BYTE PTR [rax],al
   14000b5f0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b5f4:	jb     0x14000b5f6
   14000b5f6:	jo     0x14000b5f8
   14000b5f8:	outs   dx,DWORD PTR ds:[rsi]
   14000b5f9:	add    BYTE PTR [rdx+0x0],dh
   14000b5fc:	(bad)  
   14000b5fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b601:	add    BYTE PTR [rdi+0x0],ch
   14000b604:	outs   dx,BYTE PTR ds:[rsi]
   14000b605:	add    BYTE PTR [rsi],ch
   14000b607:	add    BYTE PTR [rax],ah
   14000b609:	add    BYTE PTR [rcx+0x0],al
   14000b60c:	ins    BYTE PTR es:[rdi],dx
   14000b60d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b611:	add    BYTE PTR [rdx+0x0],dh
   14000b614:	imul   eax,DWORD PTR [rax],0x680067
   14000b61a:	je     0x14000b61c
   14000b61c:	jae    0x14000b61e
   14000b61e:	and    BYTE PTR [rax],al
   14000b620:	jb     0x14000b622
   14000b622:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b626:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b62a:	jbe    0x14000b62c
   14000b62c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000b631:	add    BYTE PTR [rax],al
   14000b633:	add    BYTE PTR [rdx+0x0],al
   14000b636:	or     eax,0x4f000100
   14000b63b:	add    BYTE PTR [rdx+0x0],dh
   14000b63e:	imul   eax,DWORD PTR [rax],0x690067
   14000b644:	outs   dx,BYTE PTR ds:[rsi]
   14000b645:	add    BYTE PTR [rcx+0x0],ah
   14000b648:	ins    BYTE PTR es:[rdi],dx
   14000b649:	add    BYTE PTR [rsi+0x0],al
   14000b64c:	imul   eax,DWORD PTR [rax],0x65006c
   14000b652:	outs   dx,BYTE PTR ds:[rsi]
   14000b653:	add    BYTE PTR [rcx+0x0],ah
   14000b656:	ins    DWORD PTR es:[rdi],dx
   14000b657:	add    BYTE PTR [rbp+0x0],ah
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	imul   eax,DWORD PTR [rax],0x630070
   14000b662:	outs   dx,DWORD PTR ds:[rsi]
   14000b663:	add    BYTE PTR [rsi+0x0],ch
   14000b666:	data16 add BYTE PTR [rcx+0x0],ch
   14000b66a:	add    BYTE PTR [esi],ch
   14000b66d:	add    BYTE PTR [rbp+0x0],ah
   14000b670:	js     0x14000b672
   14000b672:	add    BYTE PTR gs:[rax],al
   14000b675:	add    BYTE PTR [rax],al
   14000b677:	add    BYTE PTR [rdx+0x0],ch
   14000b67a:	and    eax,0x50000100
   14000b67f:	add    BYTE PTR [rdx+0x0],dh
   14000b682:	outs   dx,DWORD PTR ds:[rsi]
   14000b683:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b687:	add    BYTE PTR [rbx+0x0],ah
   14000b68a:	je     0x14000b68c
   14000b68c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b690:	ins    DWORD PTR es:[rdi],dx
   14000b691:	add    BYTE PTR [rbp+0x0],ah
   14000b694:	add    BYTE PTR [rax],al
   14000b696:	add    BYTE PTR [rax],al
   14000b698:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b69c:	movsxd eax,DWORD PTR [rax]
   14000b69e:	jb     0x14000b6a0
   14000b6a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b6a1:	add    BYTE PTR [rbx+0x0],dh
   14000b6a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b6a5:	add    BYTE PTR [rsi+0x0],ah
   14000b6a8:	je     0x14000b6aa
   14000b6aa:	scas   al,BYTE PTR es:[rdi]
   14000b6ab:	add    BYTE PTR [rax],ah
   14000b6ad:	add    BYTE PTR [rdi+0x0],dl
   14000b6b0:	imul   eax,DWORD PTR [rax],0x64006e
   14000b6b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b6b7:	add    BYTE PTR [rdi+0x0],dh
   14000b6ba:	jae    0x14000b6bc
   14000b6bc:	scas   al,BYTE PTR es:[rdi]
   14000b6bd:	add    BYTE PTR [rax],ah
   14000b6bf:	add    BYTE PTR [rdi+0x0],cl
   14000b6c2:	jo     0x14000b6c4
   14000b6c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b6c8:	(bad)  
   14000b6c9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b6cd:	add    BYTE PTR [rsi+0x0],ch
   14000b6d0:	add    BYTE PTR [eax],ah
   14000b6d3:	add    BYTE PTR [rbx+0x0],dl
   14000b6d6:	jns    0x14000b6d8
   14000b6d8:	jae    0x14000b6da
   14000b6da:	je     0x14000b6dc
   14000b6dc:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b6e0:	add    BYTE PTR [rax],al
   14000b6e2:	add    BYTE PTR [rax],al
   14000b6e4:	rex.RX add BYTE PTR [rcx],r10b
   14000b6e7:	add    BYTE PTR [rcx],al
   14000b6e9:	add    BYTE PTR [rax+0x0],dl
   14000b6ec:	jb     0x14000b6ee
   14000b6ee:	outs   dx,DWORD PTR ds:[rsi]
   14000b6ef:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b6f3:	add    BYTE PTR [rbx+0x0],ah
   14000b6f6:	je     0x14000b6f8
   14000b6f8:	push   rsi
   14000b6f9:	add    BYTE PTR [rbp+0x0],ah
   14000b6fc:	jb     0x14000b6fe
   14000b6fe:	jae    0x14000b700
   14000b700:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b706:	add    BYTE PTR [rax],al
   14000b708:	xor    DWORD PTR [rax],eax
   14000b70a:	xor    BYTE PTR [rax],al
   14000b70c:	add    BYTE PTR cs:[rax],dh
   14000b70f:	add    BYTE PTR [rsi],ch
   14000b711:	add    BYTE PTR [rcx],dh
   14000b713:	add    BYTE PTR [rax],dh
   14000b715:	add    BYTE PTR [rdx],dh
   14000b717:	add    BYTE PTR [rax+rax*1],dh
   14000b71a:	xor    BYTE PTR [rax],al
   14000b71c:	add    BYTE PTR cs:[rcx],dh
   14000b71f:	add    BYTE PTR [rsi],dh
   14000b721:	add    BYTE PTR [rbx],dh
   14000b723:	add    BYTE PTR [rax],bh
   14000b725:	add    BYTE PTR [rax+rax*1],dh
   14000b728:	add    BYTE PTR [rax],al
   14000b72a:	add    BYTE PTR [rax],al
   14000b72c:	add    BYTE PTR [rax],r8b
   14000b72f:	add    BYTE PTR [rcx],al
   14000b731:	add    BYTE PTR [rsi+0x0],dl
   14000b734:	(bad)  
   14000b735:	add    BYTE PTR [rdx+0x0],dh
   14000b738:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b73c:	ins    BYTE PTR es:[rdi],dx
   14000b73d:	add    BYTE PTR [rbp+0x0],ah
   14000b740:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b744:	data16 add BYTE PTR [rdi+0x0],ch
   14000b748:	add    BYTE PTR [rax],al
   14000b74a:	add    BYTE PTR [rax],al
   14000b74c:	and    al,0x0
   14000b74e:	add    al,0x0
   14000b750:	add    BYTE PTR [rax],al
   14000b752:	push   rsp
   14000b753:	add    BYTE PTR [rdx+0x0],dh
   14000b756:	(bad)  
   14000b757:	add    BYTE PTR [rsi+0x0],ch
   14000b75a:	jae    0x14000b75c
   14000b75c:	ins    BYTE PTR es:[rdi],dx
   14000b75d:	add    BYTE PTR [rcx+0x0],ah
   14000b760:	je     0x14000b762
   14000b762:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b768:	add    BYTE PTR [rax],al
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	or     DWORD PTR [rax+rsi*4],eax
   14000b76f:	add    al,0xcd
   14000b771:	dec    ch
   14000b773:	dec    al
   14000b775:	add    BYTE PTR [rax],al
   14000b777:	add    BYTE PTR [rax],al
   14000b779:	add    BYTE PTR [rcx],al
   14000b77b:	add    BYTE PTR [rax],al
   14000b77d:	add    BYTE PTR [rax],al
   14000b77f:	add    BYTE PTR [rcx],dl
   14000b781:	add    BYTE PTR [rax],al
   14000b783:	add    BYTE PTR [rax],al
   14000b785:	add    BYTE PTR [rax],al
   14000b787:	add    BYTE PTR [rdx],al
   14000b789:	add    BYTE PTR [rax],al
   14000b78b:	add    dh,ah
   14000b78d:	and    eax,0x60580d1a
   14000b792:	rex.B ret 0xaebd
   14000b796:	(bad)  
   14000b797:	jge    0x14000b76a
   14000b799:	idiv   esi
   14000b79b:	mov    BYTE PTR [rbp+0x47],ah
   14000b79e:	xchg   ebp,eax
   14000b79f:	cmp    bl,BYTE PTR [rcx+0x7f17151f]
   14000b7a5:	xlat   BYTE PTR ds:[rbx]
   14000b7a6:	ja     0x14000b7a1
   14000b7a8:	add    eax,0x1456ae
	...
   14000b7c1:	add    BYTE PTR [rax],al
   14000b7c3:	add    BYTE PTR [rax+0xe000000],cl
   14000b7c9:	add    BYTE PTR [rax],al
   14000b7cb:	add    BYTE PTR [rax+0x8000000],bl
   14000b7d1:	add    BYTE PTR [rax],al
   14000b7d3:	add    BYTE PTR [rax+0xe000000],ah
   14000b7d9:	add    BYTE PTR [rax],al
   14000b7db:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000b7e9:	add    BYTE PTR [rax],al
   14000b7eb:	add    BYTE PTR [rax+0xc000000],bh
   14000b7f1:	add    BYTE PTR [rax],al
   14000b7f3:	add    BYTE PTR [rax],al
   14000b7f5:	add    BYTE PTR [rax],al
   14000b7f7:	add    BYTE PTR [rbp+0x0],cl
   14000b7fa:	push   rbp
   14000b7fb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000b806:	add    BYTE PTR [rax],al
   14000b808:	adc    BYTE PTR [rax],al
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	sbb    BYTE PTR [rax],al
   14000b80e:	add    BYTE PTR [rax],al
   14000b810:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000b814:	rex.WB add BYTE PTR [r8],al
	...
   14000b81f:	add    BYTE PTR [rbx],cl
   14000b821:	add    BYTE PTR [rax],al
   14000b823:	add    BYTE PTR [rax],dl
   14000b825:	add    BYTE PTR [rax],al
   14000b827:	add    BYTE PTR [rbp+0x0],ah
   14000b82a:	outs   dx,BYTE PTR ds:[rsi]
   14000b82b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193010d31
   14000b831:	add    BYTE PTR [rax],al
   14000b833:	add    BYTE PTR [rax],al
   14000b835:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	add    BYTE PTR [rax+0x0],ah
   14000c003:	add    BYTE PTR [rax+0x28000000],ch
   14000c009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c00a:	xor    BYTE PTR [rax+rax*2+0x60a458a4],ah
   14000c011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c012:	nop
   14000c013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c014:	cwde   
   14000c015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c016:	and    BYTE PTR [rbx-0x54bf54d0],ch
   14000c01c:	push   rax
   14000c01d:	stos   DWORD PTR es:[rdi],eax
   14000c01e:	(bad)  
   14000c01f:	stos   DWORD PTR es:[rdi],eax
   14000c020:	jo     0x14000bfcd
   14000c022:	sub    BYTE PTR [rbx-0x545f5470],0xb0
   14000c029:	stos   DWORD PTR es:[rdi],eax
   14000c02a:	shr    BYTE PTR [rbx-0x541f5430],0xf0
   14000c031:	stos   DWORD PTR es:[rdi],eax
   14000c032:	add    BYTE PTR [rax+rdx*1+0x30ac20ac],ch
   14000c039:	lods   al,BYTE PTR ds:[rsi]
   14000c03a:	lods   al,BYTE PTR ds:[rsi]
   14000c03c:	push   rax
   14000c03d:	lods   al,BYTE PTR ds:[rsi]
   14000c03e:	(bad)  
   14000c03f:	lods   al,BYTE PTR ds:[rsi]
   14000c040:	jo     0x14000bfee
   14000c042:	sub    BYTE PTR [rax+rdx*4-0x4f535f54],0xac
   14000c04a:	shr    BYTE PTR [rax+rdx*8-0xf531f54],0xac
   14000c052:	add    BYTE PTR [rbp-0x52df52f0],ch
   14000c058:	xor    BYTE PTR [rbp-0x52af52c0],ch
   14000c05e:	(bad)  
   14000c05f:	lods   eax,DWORD PTR ds:[rsi]
   14000c060:	jo     0x14000c00f
   14000c062:	sub    BYTE PTR [rbp-0x525f5270],0xb0
   14000c069:	lods   eax,DWORD PTR ds:[rsi]
   14000c06a:	shr    BYTE PTR [rbp-0x521f5230],0xf0
   14000c071:	lods   eax,DWORD PTR ds:[rsi]
   14000c072:	add    BYTE PTR [rsi-0x51df51f0],ch
   14000c078:	xor    BYTE PTR [rsi-0x51af51c0],ch
   14000c07e:	(bad)  
   14000c07f:	scas   al,BYTE PTR es:[rdi]
   14000c080:	jo     0x14000c030
   14000c082:	sub    BYTE PTR [rsi-0x515f5170],0xb0
   14000c089:	scas   al,BYTE PTR es:[rdi]
   14000c08a:	shr    BYTE PTR [rsi-0x511f5130],0xf0
   14000c091:	scas   al,BYTE PTR es:[rdi]
   14000c092:	add    BYTE PTR [rdi-0x50df50f0],ch
   14000c098:	xor    BYTE PTR [rdi-0x50af50c0],ch
   14000c09e:	(bad)  
   14000c09f:	scas   eax,DWORD PTR es:[rdi]
   14000c0a0:	jo     0x14000c051
   14000c0a2:	sub    BYTE PTR [rdi+0xaf90],0x0
   14000c0a9:	jo     0x14000c0ab
   14000c0ab:	add    BYTE PTR [rax],dl
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rax-0x475f4f60],bl
   14000c0b5:	.byte 0xa0
   14000c0b6:	.byte 0xc0
   14000c0b7:	.byte 0xa0
