
3e71f762320a9af8159d51e374a64ebd4916a92e3de3be8dc1e22d86410982c5.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x58e5]        # 0x406900
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x58e6]        # 0x406910
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x58e9]        # 0x406920
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x58ac]        # 0x4068f0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x574f]        # 0x4067a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5881]        # 0x4068e0
  40105f:	mov    DWORD PTR [rip+0x7fa3],edx        # 0x409008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403a38
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401d70
  401081:	mov    rdx,QWORD PTR [rip+0x57b8]        # 0x406840
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x579e]        # 0x406830
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5804]        # 0x4068a0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x573b]        # 0x4067e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401950
  4010af:	mov    rax,QWORD PTR [rip+0x569a]        # 0x406750
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403a38
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xb29]        # 0x401c50
  401127:	call   0x401c40
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5765]        # 0x4068d0
  40116b:	lea    r8,[rip+0x7ea6]        # 0x409018
  401172:	lea    rdx,[rip+0x7ea7]        # 0x409020
  401179:	lea    rcx,[rip+0x7ea8]        # 0x409028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x7e78],eax        # 0x409000
  401188:	lea    rax,[rip+0x7e71]        # 0x409000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x56f5]        # 0x406890
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403a50
  4011a3:	mov    DWORD PTR [rip+0x7e67],eax        # 0x409010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x571a]        # 0x4068e0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x561b]        # 0x406810
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x9246]        # 0x40a448
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x55f7]        # 0x406820
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x7dba],0x1        # 0x409004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x552c]        # 0x406790
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401f60
  40127d:	lea    rcx,[rip+0x127c]        # 0x402500
  401284:	call   QWORD PTR [rip+0x91b6]        # 0x40a440
  40128a:	mov    rdx,QWORD PTR [rip+0x556f]        # 0x406800
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402410
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403a80
  4012a5:	call   0x401d50
  4012aa:	mov    rax,QWORD PTR [rip+0x54ef]        # 0x4067a0
  4012b1:	mov    QWORD PTR [rip+0x8750],rax        # 0x409a08
  4012b8:	mov    rax,QWORD PTR [rip+0x5511]        # 0x4067d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x86e9],rax        # 0x409a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x7ceb]        # 0x409028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4039b8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x7cc2]        # 0x409020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403970
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4039b8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4039b0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x7c6a],rbp        # 0x409020
  4013b6:	call   0x401920
  4013bb:	mov    rax,QWORD PTR [rip+0x53fe]        # 0x4067c0
  4013c2:	mov    rdx,QWORD PTR [rip+0x7c4f]        # 0x409018
  4013c9:	mov    ecx,DWORD PTR [rip+0x7c59]        # 0x409028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x7c3c]        # 0x409018
  4013dc:	mov    rdx,QWORD PTR [rip+0x7c3d]        # 0x409020
  4013e3:	call   0x403b50
  4013e8:	mov    ecx,DWORD PTR [rip+0x7c1a]        # 0x409008
  4013ee:	mov    DWORD PTR [rip+0x7c18],eax        # 0x40900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x7c02]        # 0x409004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403a20
  40140b:	mov    eax,DWORD PTR [rip+0x7bfb]        # 0x40900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x53e9]        # 0x406820
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403a28
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x53fd]        # 0x406860
  401463:	mov    rcx,QWORD PTR [rip+0x53e6]        # 0x406850
  40146a:	call   0x403a18
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x8f57]        # 0x40a3f0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x53d9]        # 0x406880
  4014a7:	mov    rcx,QWORD PTR [rip+0x53c2]        # 0x406870
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403a18
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4039e8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x5405]        # 0x4068e0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401960
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x53d5]        # 0x4068e0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401960
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	test   edx,edx
  401539:	mov    rdi,rcx
  40153c:	mov    esi,edx
  40153e:	je     0x401643
  401544:	call   QWORD PTR [rip+0x8f5e]        # 0x40a4a8
  40154a:	lea    rbx,[rax+0x60]
  40154e:	lea    r9,[rip+0x4aab]        # 0x406000
  401555:	lea    rdx,[rip+0x4abc]        # 0x406018
  40155c:	mov    r8,rdi
  40155f:	mov    rcx,rbx
  401562:	call   0x4039e0
  401567:	lea    rdx,[rip+0x4af2]        # 0x406060
  40156e:	mov    r8,rdi
  401571:	mov    rcx,rbx
  401574:	call   0x4039e0
  401579:	lea    rcx,[rip+0x4b08]        # 0x406088
  401580:	mov    r9,rbx
  401583:	mov    r8d,0x23
  401589:	mov    edx,0x1
  40158e:	call   0x4039c8
  401593:	lea    rcx,[rip+0x4b16]        # 0x4060b0
  40159a:	mov    r9,rbx
  40159d:	mov    r8d,0x24
  4015a3:	mov    edx,0x1
  4015a8:	call   0x4039c8
  4015ad:	lea    rcx,[rip+0x4b24]        # 0x4060d8
  4015b4:	mov    r9,rbx
  4015b7:	mov    r8d,0x2b
  4015bd:	mov    edx,0x1
  4015c2:	call   0x4039c8
  4015c7:	mov    rdx,rbx
  4015ca:	mov    ecx,0xa
  4015cf:	call   0x4039d8
  4015d4:	lea    rcx,[rip+0x4b2d]        # 0x406108
  4015db:	mov    r9,rbx
  4015de:	mov    r8d,0x33
  4015e4:	mov    edx,0x1
  4015e9:	call   0x4039c8
  4015ee:	lea    rcx,[rip+0x4b4b]        # 0x406140
  4015f5:	mov    r9,rbx
  4015f8:	mov    r8d,0x22
  4015fe:	mov    edx,0x1
  401603:	call   0x4039c8
  401608:	lea    rcx,[rip+0x4b59]        # 0x406168
  40160f:	mov    r9,rbx
  401612:	mov    r8d,0x3c
  401618:	mov    edx,0x1
  40161d:	call   0x4039c8
  401622:	lea    rcx,[rip+0x4b7f]        # 0x4061a8
  401629:	mov    r9,rbx
  40162c:	mov    r8d,0x32
  401632:	mov    edx,0x1
  401637:	call   0x4039c8
  40163c:	mov    ecx,esi
  40163e:	call   0x4039e8
  401643:	call   QWORD PTR [rip+0x8e5f]        # 0x40a4a8
  401649:	lea    rbx,[rax+0x30]
  40164d:	jmp    0x40154e
  401652:	nop    DWORD PTR [rax+0x0]
  401656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401660:	push   rdi
  401661:	push   rsi
  401662:	push   rbx
  401663:	sub    rsp,0x20
  401667:	mov    rdi,rcx
  40166a:	mov    rsi,rdx
  40166d:	mov    rdx,rcx
  401670:	mov    ecx,0x22
  401675:	call   0x403998
  40167a:	xor    edx,edx
  40167c:	cmp    eax,0xffffffff
  40167f:	jne    0x401698
  401681:	jmp    0x4016bd
  401683:	cmp    bl,0x5c
  401686:	je     0x4016a9
  401688:	movzx  ecx,bl
  40168b:	mov    rdx,rdi
  40168e:	call   0x403998
  401693:	cmp    eax,0xffffffff
  401696:	je     0x4016bb
  401698:	add    rsi,0x1
  40169c:	movzx  ebx,BYTE PTR [rsi-0x1]
  4016a0:	test   bl,bl
  4016a2:	je     0x4016d0
  4016a4:	cmp    bl,0x22
  4016a7:	jne    0x401683
  4016a9:	mov    rdx,rdi
  4016ac:	mov    ecx,0x5c
  4016b1:	call   0x403998
  4016b6:	cmp    eax,0xffffffff
  4016b9:	jne    0x401688
  4016bb:	xor    edx,edx
  4016bd:	mov    eax,edx
  4016bf:	add    rsp,0x20
  4016c3:	pop    rbx
  4016c4:	pop    rsi
  4016c5:	pop    rdi
  4016c6:	ret    
  4016c7:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	mov    rdx,rdi
  4016d3:	mov    ecx,0x22
  4016d8:	call   0x403998
  4016dd:	xor    edx,edx
  4016df:	cmp    eax,0xffffffff
  4016e2:	setne  dl
  4016e5:	mov    eax,edx
  4016e7:	add    rsp,0x20
  4016eb:	pop    rbx
  4016ec:	pop    rsi
  4016ed:	pop    rdi
  4016ee:	ret    
  4016ef:	nop
  4016f0:	jmp    QWORD PTR [rip+0x8cba]        # 0x40a3b0
  4016f6:	nop
  4016f7:	nop
  4016f8:	jmp    QWORD PTR [rip+0x8caa]        # 0x40a3a8
  4016fe:	nop
  4016ff:	nop
  401700:	jmp    QWORD PTR [rip+0x8c9a]        # 0x40a3a0
  401706:	nop
  401707:	nop
  401708:	jmp    QWORD PTR [rip+0x8c8a]        # 0x40a398
  40170e:	nop
  40170f:	nop
  401710:	jmp    QWORD PTR [rip+0x8c7a]        # 0x40a390
  401716:	nop
  401717:	nop
  401718:	jmp    QWORD PTR [rip+0x8c6a]        # 0x40a388
  40171e:	nop
  40171f:	nop
  401720:	jmp    QWORD PTR [rip+0x8c5a]        # 0x40a380
  401726:	nop
  401727:	nop
  401728:	jmp    QWORD PTR [rip+0x8c4a]        # 0x40a378
  40172e:	nop
  40172f:	nop
  401730:	jmp    QWORD PTR [rip+0x8c3a]        # 0x40a370
  401736:	nop
  401737:	nop
  401738:	jmp    QWORD PTR [rip+0x8c2a]        # 0x40a368
  40173e:	nop
  40173f:	nop
  401740:	jmp    QWORD PTR [rip+0x8c1a]        # 0x40a360
  401746:	nop
  401747:	nop
  401748:	jmp    QWORD PTR [rip+0x8c0a]        # 0x40a358
  40174e:	nop
  40174f:	nop
  401750:	jmp    QWORD PTR [rip+0x8bfa]        # 0x40a350
  401756:	nop
  401757:	nop
  401758:	jmp    QWORD PTR [rip+0x8bea]        # 0x40a348
  40175e:	nop
  40175f:	nop
  401760:	jmp    QWORD PTR [rip+0x8bda]        # 0x40a340
  401766:	nop
  401767:	nop
  401768:	jmp    QWORD PTR [rip+0x8bca]        # 0x40a338
  40176e:	nop
  40176f:	nop
  401770:	jmp    QWORD PTR [rip+0x8bba]        # 0x40a330
  401776:	nop
  401777:	nop
  401778:	jmp    QWORD PTR [rip+0x8baa]        # 0x40a328
  40177e:	nop
  40177f:	nop
  401780:	jmp    QWORD PTR [rip+0x8b9a]        # 0x40a320
  401786:	nop
  401787:	nop
  401788:	jmp    QWORD PTR [rip+0x8b8a]        # 0x40a318
  40178e:	nop
  40178f:	nop
  401790:	jmp    QWORD PTR [rip+0x8b7a]        # 0x40a310
  401796:	nop
  401797:	nop
  401798:	jmp    QWORD PTR [rip+0x8b6a]        # 0x40a308
  40179e:	nop
  40179f:	nop
  4017a0:	jmp    QWORD PTR [rip+0x8b5a]        # 0x40a300
  4017a6:	nop
  4017a7:	nop
  4017a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4017b0:	push   rbx
  4017b1:	sub    rsp,0x30
  4017b5:	mov    rbx,rcx
  4017b8:	mov    rcx,QWORD PTR [rip+0x8251]        # 0x409a10
  4017bf:	call   0x401d60
  4017c4:	cmp    rax,0xffffffffffffffff
  4017c8:	mov    QWORD PTR [rsp+0x20],rax
  4017cd:	je     0x401845
  4017cf:	mov    ecx,0x8
  4017d4:	call   0x403a10
  4017d9:	mov    rcx,QWORD PTR [rip+0x8230]        # 0x409a10
  4017e0:	call   0x401d60
  4017e5:	mov    rcx,QWORD PTR [rip+0x822c]        # 0x409a18
  4017ec:	mov    QWORD PTR [rsp+0x20],rax
  4017f1:	call   0x401d60
  4017f6:	lea    rdx,[rsp+0x20]
  4017fb:	lea    r8,[rsp+0x28]
  401800:	mov    rcx,rbx
  401803:	mov    QWORD PTR [rsp+0x28],rax
  401808:	call   0x403a58
  40180d:	mov    rcx,QWORD PTR [rsp+0x20]
  401812:	mov    rbx,rax
  401815:	call   0x401d70
  40181a:	mov    rcx,QWORD PTR [rsp+0x28]
  40181f:	mov    QWORD PTR [rip+0x81ea],rax        # 0x409a10
  401826:	call   0x401d70
  40182b:	mov    ecx,0x8
  401830:	mov    QWORD PTR [rip+0x81e1],rax        # 0x409a18
  401837:	call   0x403a00
  40183c:	mov    rax,rbx
  40183f:	add    rsp,0x30
  401843:	pop    rbx
  401844:	ret    
  401845:	mov    rax,QWORD PTR [rip+0x4fa4]        # 0x4067f0
  40184c:	mov    rcx,rbx
  40184f:	call   QWORD PTR [rax]
  401851:	add    rsp,0x30
  401855:	pop    rbx
  401856:	ret    
  401857:	nop    WORD PTR [rax+rax*1+0x0]
  401860:	sub    rsp,0x28
  401864:	call   0x4017b0
  401869:	test   rax,rax
  40186c:	sete   al
  40186f:	movzx  eax,al
  401872:	neg    eax
  401874:	add    rsp,0x28
  401878:	ret    
  401879:	nop
  40187a:	nop
  40187b:	nop
  40187c:	nop
  40187d:	nop
  40187e:	nop
  40187f:	nop
  401880:	sub    rsp,0x28
  401884:	mov    rax,QWORD PTR [rip+0x3785]        # 0x405010
  40188b:	mov    rax,QWORD PTR [rax]
  40188e:	test   rax,rax
  401891:	je     0x4018b0
  401893:	call   rax
  401895:	mov    rax,QWORD PTR [rip+0x3774]        # 0x405010
  40189c:	lea    rdx,[rax+0x8]
  4018a0:	mov    rax,QWORD PTR [rax+0x8]
  4018a4:	mov    QWORD PTR [rip+0x3765],rdx        # 0x405010
  4018ab:	test   rax,rax
  4018ae:	jne    0x401893
  4018b0:	add    rsp,0x28
  4018b4:	ret    
  4018b5:	nop
  4018b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018c0:	push   rsi
  4018c1:	push   rbx
  4018c2:	sub    rsp,0x28
  4018c6:	mov    rsi,QWORD PTR [rip+0x4e93]        # 0x406760
  4018cd:	mov    rax,QWORD PTR [rsi]
  4018d0:	cmp    eax,0xffffffff
  4018d3:	mov    ebx,eax
  4018d5:	je     0x401900
  4018d7:	test   ebx,ebx
  4018d9:	je     0x4018ea
  4018db:	nop    DWORD PTR [rax+rax*1+0x0]
  4018e0:	mov    eax,ebx
  4018e2:	call   QWORD PTR [rsi+rax*8]
  4018e5:	sub    ebx,0x1
  4018e8:	jne    0x4018e0
  4018ea:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401880
  4018f1:	add    rsp,0x28
  4018f5:	pop    rbx
  4018f6:	pop    rsi
  4018f7:	jmp    0x401860
  4018fc:	nop    DWORD PTR [rax+0x0]
  401900:	xor    ebx,ebx
  401902:	jmp    0x401906
  401904:	mov    ebx,eax
  401906:	lea    edx,[rbx+0x1]
  401909:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40190e:	mov    rax,rdx
  401911:	jne    0x401904
  401913:	jmp    0x4018d7
  401915:	nop
  401916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401920:	mov    eax,DWORD PTR [rip+0x770a]        # 0x409030
  401926:	test   eax,eax
  401928:	je     0x401930
  40192a:	repz ret 
  40192c:	nop    DWORD PTR [rax+0x0]
  401930:	mov    DWORD PTR [rip+0x76f6],0x1        # 0x409030
  40193a:	jmp    0x4018c0
  40193c:	nop
  40193d:	nop
  40193e:	nop
  40193f:	nop
  401940:	mov    rax,QWORD PTR [rip+0x8b69]        # 0x40a4b0
  401947:	rex.W jmp rax
  40194a:	nop
  40194b:	nop
  40194c:	nop
  40194d:	nop
  40194e:	nop
  40194f:	nop
  401950:	xor    eax,eax
  401952:	ret    
  401953:	nop
  401954:	nop
  401955:	nop
  401956:	nop
  401957:	nop
  401958:	nop
  401959:	nop
  40195a:	nop
  40195b:	nop
  40195c:	nop
  40195d:	nop
  40195e:	nop
  40195f:	nop
  401960:	push   r12
  401962:	push   rbp
  401963:	push   rdi
  401964:	push   rsi
  401965:	push   rbx
  401966:	sub    rsp,0x40
  40196a:	mov    rbx,QWORD PTR [rip+0x372f]        # 0x4050a0
  401971:	movabs rax,0x2b992ddfa232
  40197b:	mov    QWORD PTR [rsp+0x20],0x0
  401984:	cmp    rbx,rax
  401987:	je     0x4019a0
  401989:	not    rbx
  40198c:	mov    QWORD PTR [rip+0x371d],rbx        # 0x4050b0
  401993:	add    rsp,0x40
  401997:	pop    rbx
  401998:	pop    rsi
  401999:	pop    rdi
  40199a:	pop    rbp
  40199b:	pop    r12
  40199d:	ret    
  40199e:	xchg   ax,ax
  4019a0:	lea    rcx,[rsp+0x20]
  4019a5:	call   QWORD PTR [rip+0x8a4d]        # 0x40a3f8
  4019ab:	mov    r12,QWORD PTR [rsp+0x20]
  4019b0:	call   QWORD PTR [rip+0x8a22]        # 0x40a3d8
  4019b6:	mov    ebp,eax
  4019b8:	call   QWORD PTR [rip+0x8a22]        # 0x40a3e0
  4019be:	mov    edi,eax
  4019c0:	call   QWORD PTR [rip+0x8a3a]        # 0x40a400
  4019c6:	lea    rcx,[rsp+0x30]
  4019cb:	mov    esi,eax
  4019cd:	call   QWORD PTR [rip+0x8a45]        # 0x40a418
  4019d3:	xor    r12,QWORD PTR [rsp+0x30]
  4019d8:	mov    edx,edi
  4019da:	movabs rax,0xffffffffffff
  4019e4:	xor    rbp,r12
  4019e7:	mov    rdi,rbp
  4019ea:	xor    rdi,rdx
  4019ed:	mov    edx,esi
  4019ef:	xor    rdi,rdx
  4019f2:	mov    rsi,rdi
  4019f5:	and    rsi,rax
  4019f8:	cmp    rsi,rbx
  4019fb:	je     0x401a20
  4019fd:	mov    rax,rsi
  401a00:	not    rax
  401a03:	mov    QWORD PTR [rip+0x3696],rsi        # 0x4050a0
  401a0a:	mov    QWORD PTR [rip+0x369f],rax        # 0x4050b0
  401a11:	add    rsp,0x40
  401a15:	pop    rbx
  401a16:	pop    rsi
  401a17:	pop    rdi
  401a18:	pop    rbp
  401a19:	pop    r12
  401a1b:	ret    
  401a1c:	nop    DWORD PTR [rax+0x0]
  401a20:	movabs rax,0xffffd466d2205dcc
  401a2a:	movabs rsi,0x2b992ddfa233
  401a34:	jmp    0x401a03
  401a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a40:	push   rbp
  401a41:	push   rsi
  401a42:	push   rbx
  401a43:	mov    rbp,rsp
  401a46:	sub    rsp,0x70
  401a4a:	mov    rsi,rcx
  401a4d:	lea    rcx,[rip+0x762c]        # 0x409080
  401a54:	call   QWORD PTR [rip+0x89ce]        # 0x40a428
  401a5a:	mov    rbx,QWORD PTR [rip+0x7717]        # 0x409178
  401a61:	xor    r8d,r8d
  401a64:	lea    rdx,[rbp-0x28]
  401a68:	mov    rcx,rbx
  401a6b:	call   QWORD PTR [rip+0x89bf]        # 0x40a430
  401a71:	test   rax,rax
  401a74:	mov    r9,rax
  401a77:	je     0x401b20
  401a7d:	lea    rax,[rbp-0x20]
  401a81:	mov    QWORD PTR [rsp+0x38],0x0
  401a8a:	mov    r8,rbx
  401a8d:	mov    rdx,QWORD PTR [rbp-0x28]
  401a91:	xor    ecx,ecx
  401a93:	mov    QWORD PTR [rsp+0x30],rax
  401a98:	lea    rax,[rbp-0x18]
  401a9c:	mov    QWORD PTR [rsp+0x28],rax
  401aa1:	lea    rax,[rip+0x75d8]        # 0x409080
  401aa8:	mov    QWORD PTR [rsp+0x20],rax
  401aad:	call   QWORD PTR [rip+0x8985]        # 0x40a438
  401ab3:	mov    rax,QWORD PTR [rip+0x76be]        # 0x409178
  401aba:	xor    ecx,ecx
  401abc:	mov    QWORD PTR [rip+0x763d],rsi        # 0x409100
  401ac3:	mov    DWORD PTR [rip+0x7ab3],0xc0000409        # 0x409580
  401acd:	mov    DWORD PTR [rip+0x7aad],0x1        # 0x409584
  401ad7:	mov    QWORD PTR [rip+0x7ab2],rax        # 0x409590
  401ade:	mov    rax,QWORD PTR [rip+0x35bb]        # 0x4050a0
  401ae5:	mov    QWORD PTR [rbp-0x10],rax
  401ae9:	mov    rax,QWORD PTR [rip+0x35c0]        # 0x4050b0
  401af0:	mov    QWORD PTR [rbp-0x8],rax
  401af4:	call   QWORD PTR [rip+0x8946]        # 0x40a440
  401afa:	lea    rcx,[rip+0x487f]        # 0x406380
  401b01:	call   QWORD PTR [rip+0x8959]        # 0x40a460
  401b07:	call   QWORD PTR [rip+0x88c3]        # 0x40a3d0
  401b0d:	mov    edx,0xc0000409
  401b12:	mov    rcx,rax
  401b15:	call   QWORD PTR [rip+0x8935]        # 0x40a450
  401b1b:	call   0x4039f8
  401b20:	mov    rax,QWORD PTR [rbp+0x18]
  401b24:	mov    QWORD PTR [rip+0x764d],rax        # 0x409178
  401b2b:	lea    rax,[rbp+0x8]
  401b2f:	mov    QWORD PTR [rip+0x75e2],rax        # 0x409118
  401b36:	jmp    0x401ab3
  401b3b:	nop
  401b3c:	nop
  401b3d:	nop
  401b3e:	nop
  401b3f:	nop
  401b40:	sub    rsp,0x28
  401b44:	test   edx,edx
  401b46:	je     0x401b60
  401b48:	cmp    edx,0x3
  401b4b:	je     0x401b60
  401b4d:	mov    eax,0x1
  401b52:	add    rsp,0x28
  401b56:	ret    
  401b57:	nop    WORD PTR [rax+rax*1+0x0]
  401b60:	call   0x402850
  401b65:	mov    eax,0x1
  401b6a:	add    rsp,0x28
  401b6e:	ret    
  401b6f:	nop
  401b70:	push   rsi
  401b71:	push   rbx
  401b72:	sub    rsp,0x28
  401b76:	mov    rax,QWORD PTR [rip+0x4bc3]        # 0x406740
  401b7d:	cmp    DWORD PTR [rax],0x2
  401b80:	je     0x401b88
  401b82:	mov    DWORD PTR [rax],0x2
  401b88:	cmp    edx,0x2
  401b8b:	je     0x401ba0
  401b8d:	cmp    edx,0x1
  401b90:	je     0x401bd2
  401b92:	mov    eax,0x1
  401b97:	add    rsp,0x28
  401b9b:	pop    rbx
  401b9c:	pop    rsi
  401b9d:	ret    
  401b9e:	xchg   ax,ax
  401ba0:	lea    rbx,[rip+0x94b9]        # 0x40b060
  401ba7:	lea    rsi,[rip+0x94b2]        # 0x40b060
  401bae:	cmp    rbx,rsi
  401bb1:	je     0x401b92
  401bb3:	mov    rax,QWORD PTR [rbx]
  401bb6:	test   rax,rax
  401bb9:	je     0x401bbd
  401bbb:	call   rax
  401bbd:	add    rbx,0x8
  401bc1:	cmp    rbx,rsi
  401bc4:	jne    0x401bb3
  401bc6:	mov    eax,0x1
  401bcb:	add    rsp,0x28
  401bcf:	pop    rbx
  401bd0:	pop    rsi
  401bd1:	ret    
  401bd2:	call   0x402850
  401bd7:	jmp    0x401b92
  401bd9:	nop    DWORD PTR [rax+0x0]
  401be0:	xor    eax,eax
  401be2:	ret    
  401be3:	nop
  401be4:	nop
  401be5:	nop
  401be6:	nop
  401be7:	nop
  401be8:	nop
  401be9:	nop
  401bea:	nop
  401beb:	nop
  401bec:	nop
  401bed:	nop
  401bee:	nop
  401bef:	nop
  401bf0:	sub    rsp,0x58
  401bf4:	mov    rax,QWORD PTR [rip+0x7a65]        # 0x409660
  401bfb:	test   rax,rax
  401bfe:	je     0x401c2c
  401c00:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401c09:	mov    DWORD PTR [rsp+0x20],ecx
  401c0d:	lea    rcx,[rsp+0x20]
  401c12:	mov    QWORD PTR [rsp+0x28],rdx
  401c17:	movsd  QWORD PTR [rsp+0x30],xmm2
  401c1d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401c23:	movsd  QWORD PTR [rsp+0x40],xmm0
  401c29:	call   rax
  401c2b:	nop
  401c2c:	add    rsp,0x58
  401c30:	ret    
  401c31:	nop    DWORD PTR [rax+rax*1+0x0]
  401c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c40:	mov    QWORD PTR [rip+0x7a19],rcx        # 0x409660
  401c47:	jmp    0x403a30
  401c4c:	nop    DWORD PTR [rax+0x0]
  401c50:	push   rsi
  401c51:	push   rbx
  401c52:	sub    rsp,0x78
  401c56:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401c5b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401c60:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401c66:	cmp    DWORD PTR [rcx],0x6
  401c69:	ja     0x401d40
  401c6f:	mov    edx,DWORD PTR [rcx]
  401c71:	lea    rax,[rip+0x484c]        # 0x4064c4
  401c78:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c7c:	add    rax,rdx
  401c7f:	jmp    rax
  401c81:	lea    rbx,[rip+0x4718]        # 0x4063a0
  401c88:	nop    DWORD PTR [rax+rax*1+0x0]
  401c90:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401c96:	mov    rsi,QWORD PTR [rcx+0x8]
  401c9a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401c9f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ca4:	call   0x403a48
  401ca9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401cb0:	lea    rcx,[rax+0x60]
  401cb4:	lea    rdx,[rip+0x47dd]        # 0x406498
  401cbb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401cc1:	mov    r9,rsi
  401cc4:	mov    r8,rbx
  401cc7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401ccd:	call   0x4039e0
  401cd2:	nop
  401cd3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401cd8:	xor    eax,eax
  401cda:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401cdf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ce5:	add    rsp,0x78
  401ce9:	pop    rbx
  401cea:	pop    rsi
  401ceb:	ret    
  401cec:	nop    DWORD PTR [rax+0x0]
  401cf0:	lea    rbx,[rip+0x46c8]        # 0x4063bf
  401cf7:	jmp    0x401c90
  401cf9:	nop    DWORD PTR [rax+0x0]
  401d00:	lea    rbx,[rip+0x46d9]        # 0x4063e0
  401d07:	jmp    0x401c90
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	lea    rbx,[rip+0x4739]        # 0x406450
  401d17:	jmp    0x401c90
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	lea    rbx,[rip+0x4701]        # 0x406428
  401d27:	jmp    0x401c90
  401d2c:	nop    DWORD PTR [rax+0x0]
  401d30:	lea    rbx,[rip+0x46c9]        # 0x406400
  401d37:	jmp    0x401c90
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	lea    rbx,[rip+0x473f]        # 0x406486
  401d47:	jmp    0x401c90
  401d4c:	nop
  401d4d:	nop
  401d4e:	nop
  401d4f:	nop
  401d50:	fninit 
  401d52:	ret    
  401d53:	nop
  401d54:	nop
  401d55:	nop
  401d56:	nop
  401d57:	nop
  401d58:	nop
  401d59:	nop
  401d5a:	nop
  401d5b:	nop
  401d5c:	nop
  401d5d:	nop
  401d5e:	nop
  401d5f:	nop
  401d60:	mov    rax,rcx
  401d63:	ret    
  401d64:	xchg   ax,ax
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	mov    rax,rcx
  401d73:	ret    
  401d74:	nop
  401d75:	nop
  401d76:	nop
  401d77:	nop
  401d78:	nop
  401d79:	nop
  401d7a:	nop
  401d7b:	nop
  401d7c:	nop
  401d7d:	nop
  401d7e:	nop
  401d7f:	nop
  401d80:	push   rsi
  401d81:	push   rbx
  401d82:	sub    rsp,0x38
  401d86:	lea    rax,[rsp+0x58]
  401d8b:	mov    rbx,rcx
  401d8e:	mov    QWORD PTR [rsp+0x58],rdx
  401d93:	mov    QWORD PTR [rsp+0x60],r8
  401d98:	mov    QWORD PTR [rsp+0x68],r9
  401d9d:	mov    QWORD PTR [rsp+0x28],rax
  401da2:	call   0x403a48
  401da7:	lea    rcx,[rip+0x4732]        # 0x4064e0
  401dae:	lea    r9,[rax+0x60]
  401db2:	mov    r8d,0x1b
  401db8:	mov    edx,0x1
  401dbd:	call   0x4039c8
  401dc2:	mov    rsi,QWORD PTR [rsp+0x28]
  401dc7:	call   0x403a48
  401dcc:	lea    rcx,[rax+0x60]
  401dd0:	mov    rdx,rbx
  401dd3:	mov    r8,rsi
  401dd6:	call   0x403960
  401ddb:	call   0x4039f8
  401de0:	nop
  401de1:	nop    DWORD PTR [rax+rax*1+0x0]
  401de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401df0:	push   r13
  401df2:	push   r12
  401df4:	push   rbp
  401df5:	push   rdi
  401df6:	push   rsi
  401df7:	push   rbx
  401df8:	sub    rsp,0x58
  401dfc:	movsxd rbp,DWORD PTR [rip+0x7881]        # 0x409684
  401e03:	mov    rbx,rcx
  401e06:	mov    rsi,rdx
  401e09:	mov    rdi,r8
  401e0c:	test   ebp,ebp
  401e0e:	jle    0x401f0a
  401e14:	mov    rax,QWORD PTR [rip+0x786d]        # 0x409688
  401e1b:	xor    r9d,r9d
  401e1e:	add    rax,0x8
  401e22:	mov    r10,QWORD PTR [rax]
  401e25:	cmp    rbx,r10
  401e28:	jb     0x401e3e
  401e2a:	mov    rdx,QWORD PTR [rax+0x8]
  401e2e:	mov    r11d,DWORD PTR [rdx+0x8]
  401e32:	add    r10,r11
  401e35:	cmp    rbx,r10
  401e38:	jb     0x401ef0
  401e3e:	add    r9d,0x1
  401e42:	add    rax,0x18
  401e46:	cmp    r9d,ebp
  401e49:	jne    0x401e22
  401e4b:	mov    rcx,rbx
  401e4e:	call   0x402a60
  401e53:	test   rax,rax
  401e56:	mov    r12,rax
  401e59:	je     0x401f42
  401e5f:	lea    rbp,[rbp+rbp*2+0x0]
  401e64:	shl    rbp,0x3
  401e68:	mov    r13,rbp
  401e6b:	add    r13,QWORD PTR [rip+0x7816]        # 0x409688
  401e72:	mov    QWORD PTR [r13+0x10],rax
  401e76:	mov    DWORD PTR [r13+0x0],0x0
  401e7e:	call   0x402b80
  401e83:	mov    edx,DWORD PTR [r12+0xc]
  401e88:	mov    r8d,0x30
  401e8e:	add    rax,rdx
  401e91:	lea    rdx,[rsp+0x20]
  401e96:	mov    QWORD PTR [r13+0x8],rax
  401e9a:	mov    rax,QWORD PTR [rip+0x77e7]        # 0x409688
  401ea1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401ea6:	call   QWORD PTR [rip+0x85c4]        # 0x40a470
  401eac:	test   rax,rax
  401eaf:	je     0x401f25
  401eb1:	mov    eax,DWORD PTR [rsp+0x44]
  401eb5:	lea    edx,[rax-0x4]
  401eb8:	and    edx,0xfffffffb
  401ebb:	je     0x401ee9
  401ebd:	sub    eax,0x40
  401ec0:	and    eax,0xffffffbf
  401ec3:	je     0x401ee9
  401ec5:	mov    r9,rbp
  401ec8:	add    r9,QWORD PTR [rip+0x77b9]        # 0x409688
  401ecf:	mov    r8d,0x40
  401ed5:	mov    rdx,QWORD PTR [rsp+0x38]
  401eda:	mov    rcx,QWORD PTR [rsp+0x20]
  401edf:	call   QWORD PTR [rip+0x8583]        # 0x40a468
  401ee5:	test   eax,eax
  401ee7:	je     0x401f11
  401ee9:	add    DWORD PTR [rip+0x7794],0x1        # 0x409684
  401ef0:	mov    r8,rdi
  401ef3:	mov    rdx,rsi
  401ef6:	mov    rcx,rbx
  401ef9:	add    rsp,0x58
  401efd:	pop    rbx
  401efe:	pop    rsi
  401eff:	pop    rdi
  401f00:	pop    rbp
  401f01:	pop    r12
  401f03:	pop    r13
  401f05:	jmp    0x4039b0
  401f0a:	xor    ebp,ebp
  401f0c:	jmp    0x401e4b
  401f11:	call   QWORD PTR [rip+0x84d1]        # 0x40a3e8
  401f17:	lea    rcx,[rip+0x463a]        # 0x406558
  401f1e:	mov    edx,eax
  401f20:	call   0x401d80
  401f25:	mov    rax,QWORD PTR [rip+0x775c]        # 0x409688
  401f2c:	mov    edx,DWORD PTR [r12+0x8]
  401f31:	lea    rcx,[rip+0x45e8]        # 0x406520
  401f38:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401f3d:	call   0x401d80
  401f42:	lea    rcx,[rip+0x45b7]        # 0x406500
  401f49:	mov    rdx,rbx
  401f4c:	call   0x401d80
  401f51:	nop
  401f52:	nop    DWORD PTR [rax+0x0]
  401f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f60:	push   rbp
  401f61:	push   r14
  401f63:	push   r13
  401f65:	push   r12
  401f67:	push   rdi
  401f68:	push   rsi
  401f69:	push   rbx
  401f6a:	mov    rbp,rsp
  401f6d:	sub    rsp,0x60
  401f71:	mov    ebx,DWORD PTR [rip+0x7709]        # 0x409680
  401f77:	test   ebx,ebx
  401f79:	je     0x401f90
  401f7b:	mov    rsp,rbp
  401f7e:	pop    rbx
  401f7f:	pop    rsi
  401f80:	pop    rdi
  401f81:	pop    r12
  401f83:	pop    r13
  401f85:	pop    r14
  401f87:	pop    rbp
  401f88:	ret    
  401f89:	nop    DWORD PTR [rax+0x0]
  401f90:	mov    DWORD PTR [rip+0x76e6],0x1        # 0x409680
  401f9a:	call   0x402ab0
  401f9f:	cdqe   
  401fa1:	lea    rax,[rax+rax*2]
  401fa5:	lea    rax,[rax*8+0x1e]
  401fad:	and    rax,0xfffffffffffffff0
  401fb1:	call   0x402cd0
  401fb6:	mov    rsi,QWORD PTR [rip+0x47b3]        # 0x406770
  401fbd:	mov    rbx,QWORD PTR [rip+0x47bc]        # 0x406780
  401fc4:	sub    rsp,rax
  401fc7:	mov    DWORD PTR [rip+0x76b3],0x0        # 0x409684
  401fd1:	lea    rax,[rsp+0x20]
  401fd6:	mov    QWORD PTR [rip+0x76ab],rax        # 0x409688
  401fdd:	mov    rax,rsi
  401fe0:	sub    rax,rbx
  401fe3:	cmp    rax,0x7
  401fe7:	jle    0x401f7b
  401fe9:	cmp    rax,0xb
  401fed:	jle    0x402015
  401fef:	mov    r11d,DWORD PTR [rbx]
  401ff2:	test   r11d,r11d
  401ff5:	jne    0x402140
  401ffb:	mov    r10d,DWORD PTR [rbx+0x4]
  401fff:	test   r10d,r10d
  402002:	jne    0x402140
  402008:	mov    r9d,DWORD PTR [rbx+0x8]
  40200c:	test   r9d,r9d
  40200f:	jne    0x40202c
  402011:	add    rbx,0xc
  402015:	mov    r8d,DWORD PTR [rbx]
  402018:	test   r8d,r8d
  40201b:	jne    0x402140
  402021:	mov    ecx,DWORD PTR [rbx+0x4]
  402024:	test   ecx,ecx
  402026:	jne    0x402140
  40202c:	mov    edx,DWORD PTR [rbx+0x8]
  40202f:	cmp    edx,0x1
  402032:	jne    0x40224c
  402038:	add    rbx,0xc
  40203c:	cmp    rbx,rsi
  40203f:	jae    0x401f7b
  402045:	mov    r12,QWORD PTR [rip+0x4754]        # 0x4067a0
  40204c:	lea    r13,[rbp-0x30]
  402050:	movabs r14,0xffffffff00000000
  40205a:	mov    ecx,DWORD PTR [rbx+0x4]
  40205d:	mov    eax,DWORD PTR [rbx]
  40205f:	movzx  edx,BYTE PTR [rbx+0x8]
  402063:	add    rax,r12
  402066:	add    rcx,r12
  402069:	cmp    edx,0x10
  40206c:	mov    r8,QWORD PTR [rax]
  40206f:	je     0x4021b6
  402075:	jbe    0x40217d
  40207b:	cmp    edx,0x20
  40207e:	je     0x4021ff
  402084:	cmp    edx,0x40
  402087:	jne    0x4021eb
  40208d:	sub    r8,rax
  402090:	mov    rdx,r13
  402093:	mov    rdi,r13
  402096:	mov    rax,r8
  402099:	add    rax,QWORD PTR [rcx]
  40209c:	mov    r8d,0x8
  4020a2:	mov    QWORD PTR [rbp-0x30],rax
  4020a6:	call   0x401df0
  4020ab:	add    rbx,0xc
  4020af:	cmp    rbx,rsi
  4020b2:	jb     0x40205a
  4020b4:	mov    eax,DWORD PTR [rip+0x75ca]        # 0x409684
  4020ba:	xor    ebx,ebx
  4020bc:	xor    esi,esi
  4020be:	test   eax,eax
  4020c0:	jle    0x401f7b
  4020c6:	mov    r14,QWORD PTR [rip+0x83a3]        # 0x40a470
  4020cd:	lea    r13,[rbp-0x34]
  4020d1:	mov    r12,QWORD PTR [rip+0x8390]        # 0x40a468
  4020d8:	jmp    0x4020f3
  4020da:	nop    WORD PTR [rax+rax*1+0x0]
  4020e0:	add    esi,0x1
  4020e3:	add    rbx,0x18
  4020e7:	cmp    esi,DWORD PTR [rip+0x7597]        # 0x409684
  4020ed:	jge    0x401f7b
  4020f3:	mov    rax,rbx
  4020f6:	add    rax,QWORD PTR [rip+0x758b]        # 0x409688
  4020fd:	mov    edx,DWORD PTR [rax]
  4020ff:	test   edx,edx
  402101:	je     0x4020e0
  402103:	mov    rcx,QWORD PTR [rax+0x8]
  402107:	mov    r8d,0x30
  40210d:	mov    rdx,rdi
  402110:	call   r14
  402113:	test   rax,rax
  402116:	je     0x40222e
  40211c:	mov    rax,QWORD PTR [rip+0x7565]        # 0x409688
  402123:	mov    r9,r13
  402126:	mov    rdx,QWORD PTR [rbp-0x18]
  40212a:	mov    rcx,QWORD PTR [rbp-0x30]
  40212e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402132:	call   r12
  402135:	jmp    0x4020e0
  402137:	nop    WORD PTR [rax+rax*1+0x0]
  402140:	cmp    rbx,rsi
  402143:	jae    0x401f7b
  402149:	mov    r12,QWORD PTR [rip+0x4650]        # 0x4067a0
  402150:	lea    rdi,[rbp-0x30]
  402154:	mov    ecx,DWORD PTR [rbx+0x4]
  402157:	mov    eax,DWORD PTR [rbx]
  402159:	mov    r8d,0x4
  40215f:	mov    rdx,rdi
  402162:	add    rbx,0x8
  402166:	add    rcx,r12
  402169:	add    eax,DWORD PTR [rcx]
  40216b:	mov    DWORD PTR [rbp-0x30],eax
  40216e:	call   0x401df0
  402173:	cmp    rbx,rsi
  402176:	jb     0x402154
  402178:	jmp    0x4020b4
  40217d:	cmp    edx,0x8
  402180:	jne    0x4021eb
  402182:	movzx  edx,BYTE PTR [rcx]
  402185:	mov    rdi,r13
  402188:	mov    r10,rdx
  40218b:	or     r10,0xffffffffffffff00
  402192:	test   dl,dl
  402194:	cmovs  rdx,r10
  402198:	sub    rdx,rax
  40219b:	lea    rax,[r8+rdx*1]
  40219f:	mov    r8d,0x1
  4021a5:	mov    rdx,r13
  4021a8:	mov    QWORD PTR [rbp-0x30],rax
  4021ac:	call   0x401df0
  4021b1:	jmp    0x4020ab
  4021b6:	movzx  edx,WORD PTR [rcx]
  4021b9:	mov    rdi,r13
  4021bc:	mov    r10,rdx
  4021bf:	or     r10,0xffffffffffff0000
  4021c6:	test   dx,dx
  4021c9:	cmovs  rdx,r10
  4021cd:	sub    rdx,rax
  4021d0:	lea    rax,[r8+rdx*1]
  4021d4:	mov    r8d,0x2
  4021da:	mov    rdx,r13
  4021dd:	mov    QWORD PTR [rbp-0x30],rax
  4021e1:	call   0x401df0
  4021e6:	jmp    0x4020ab
  4021eb:	lea    rcx,[rip+0x43c6]        # 0x4065b8
  4021f2:	mov    QWORD PTR [rbp-0x30],0x0
  4021fa:	call   0x401d80
  4021ff:	mov    edx,DWORD PTR [rcx]
  402201:	mov    rdi,r13
  402204:	mov    r10,rdx
  402207:	or     r10,r14
  40220a:	test   edx,edx
  40220c:	cmovs  rdx,r10
  402210:	sub    rdx,rax
  402213:	lea    rax,[r8+rdx*1]
  402217:	mov    r8d,0x4
  40221d:	mov    rdx,r13
  402220:	mov    QWORD PTR [rbp-0x30],rax
  402224:	call   0x401df0
  402229:	jmp    0x4020ab
  40222e:	add    rbx,QWORD PTR [rip+0x7453]        # 0x409688
  402235:	lea    rcx,[rip+0x42e4]        # 0x406520
  40223c:	mov    rax,QWORD PTR [rbx+0x10]
  402240:	mov    r8,QWORD PTR [rbx+0x8]
  402244:	mov    edx,DWORD PTR [rax+0x8]
  402247:	call   0x401d80
  40224c:	lea    rcx,[rip+0x432d]        # 0x406580
  402253:	call   0x401d80
  402258:	nop
  402259:	nop
  40225a:	nop
  40225b:	nop
  40225c:	nop
  40225d:	nop
  40225e:	nop
  40225f:	nop
  402260:	sub    rsp,0x28
  402264:	mov    eax,DWORD PTR [rcx]
  402266:	cmp    eax,0xc0000091
  40226b:	ja     0x4022d0
  40226d:	cmp    eax,0xc000008d
  402272:	jae    0x4022ef
  402274:	cmp    eax,0xc0000008
  402279:	je     0x402390
  40227f:	ja     0x402360
  402285:	cmp    eax,0x80000002
  40228a:	je     0x402390
  402290:	cmp    eax,0xc0000005
  402295:	jne    0x40236e
  40229b:	xor    edx,edx
  40229d:	mov    ecx,0xb
  4022a2:	call   0x403980
  4022a7:	cmp    rax,0x1
  4022ab:	je     0x4023f0
  4022b1:	test   rax,rax
  4022b4:	je     0x4023d0
  4022ba:	mov    ecx,0xb
  4022bf:	call   rax
  4022c1:	xor    eax,eax
  4022c3:	add    rsp,0x28
  4022c7:	ret    
  4022c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022d0:	cmp    eax,0xc0000094
  4022d5:	je     0x4023a0
  4022db:	ja     0x402320
  4022dd:	cmp    eax,0xc0000092
  4022e2:	je     0x402390
  4022e8:	cmp    eax,0xc0000093
  4022ed:	jne    0x40236e
  4022ef:	xor    edx,edx
  4022f1:	mov    ecx,0x8
  4022f6:	call   0x403980
  4022fb:	cmp    rax,0x1
  4022ff:	mov    rdx,rax
  402302:	je     0x402378
  402304:	test   rdx,rdx
  402307:	mov    eax,0x1
  40230c:	je     0x4022c3
  40230e:	mov    ecx,0x8
  402313:	call   rdx
  402315:	xor    eax,eax
  402317:	add    rsp,0x28
  40231b:	ret    
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	cmp    eax,0xc0000095
  402325:	je     0x402390
  402327:	cmp    eax,0xc0000096
  40232c:	jne    0x40236e
  40232e:	xor    edx,edx
  402330:	mov    ecx,0x4
  402335:	call   0x403980
  40233a:	cmp    rax,0x1
  40233e:	je     0x4023da
  402344:	test   rax,rax
  402347:	je     0x4023d0
  40234d:	mov    ecx,0x4
  402352:	call   rax
  402354:	xor    eax,eax
  402356:	jmp    0x4022c3
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]
  402360:	cmp    eax,0xc000001d
  402365:	je     0x40232e
  402367:	cmp    eax,0xc000008c
  40236c:	je     0x402390
  40236e:	mov    eax,0x1
  402373:	add    rsp,0x28
  402377:	ret    
  402378:	mov    edx,0x1
  40237d:	mov    ecx,0x8
  402382:	call   0x403980
  402387:	call   0x401d50
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	xor    eax,eax
  402392:	add    rsp,0x28
  402396:	ret    
  402397:	nop    WORD PTR [rax+rax*1+0x0]
  4023a0:	xor    edx,edx
  4023a2:	mov    ecx,0x8
  4023a7:	call   0x403980
  4023ac:	cmp    rax,0x1
  4023b0:	mov    rdx,rax
  4023b3:	jne    0x402304
  4023b9:	mov    edx,0x1
  4023be:	mov    ecx,0x8
  4023c3:	call   0x403980
  4023c8:	xor    eax,eax
  4023ca:	jmp    0x4022c3
  4023cf:	nop
  4023d0:	mov    eax,0x4
  4023d5:	add    rsp,0x28
  4023d9:	ret    
  4023da:	mov    edx,0x1
  4023df:	mov    ecx,0x4
  4023e4:	call   0x403980
  4023e9:	xor    eax,eax
  4023eb:	jmp    0x4022c3
  4023f0:	mov    edx,0x1
  4023f5:	mov    ecx,0xb
  4023fa:	call   0x403980
  4023ff:	xor    eax,eax
  402401:	jmp    0x4022c3
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	push   r12
  402412:	push   rbp
  402413:	push   rdi
  402414:	push   rsi
  402415:	push   rbx
  402416:	sub    rsp,0x20
  40241a:	call   0x402b80
  40241f:	mov    rbp,rax
  402422:	mov    eax,DWORD PTR [rip+0x72a0]        # 0x4096c8
  402428:	test   eax,eax
  40242a:	jne    0x402451
  40242c:	test   rbp,rbp
  40242f:	je     0x402451
  402431:	lea    rcx,[rip+0x41b8]        # 0x4065f0
  402438:	mov    DWORD PTR [rip+0x7286],0x1        # 0x4096c8
  402442:	call   0x4029c0
  402447:	test   rax,rax
  40244a:	je     0x402460
  40244c:	mov    eax,0x1
  402451:	add    rsp,0x20
  402455:	pop    rbx
  402456:	pop    rsi
  402457:	pop    rdi
  402458:	pop    rbp
  402459:	pop    r12
  40245b:	ret    
  40245c:	nop    DWORD PTR [rax+0x0]
  402460:	lea    rbx,[rip+0x7399]        # 0x409800
  402467:	mov    ecx,0x30
  40246c:	lea    rdx,[rip+0x728d]        # 0x409700
  402473:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402260
  40247a:	xor    esi,esi
  40247c:	mov    rdi,rbx
  40247f:	rep stos QWORD PTR es:[rdi],rax
  402482:	mov    rdi,rdx
  402485:	sub    r12,rbp
  402488:	mov    cl,0x20
  40248a:	rep stos QWORD PTR es:[rdi],rax
  40248d:	mov    rdi,rdx
  402490:	jmp    0x4024c0
  402492:	mov    BYTE PTR [rdi],0x9
  402495:	mov    DWORD PTR [rdi+0x4],r12d
  402499:	add    rsi,0x1
  40249d:	mov    edx,DWORD PTR [rax+0xc]
  4024a0:	add    rbx,0xc
  4024a4:	mov    DWORD PTR [rbx-0xc],edx
  4024a7:	add    edx,DWORD PTR [rax+0x8]
  4024aa:	mov    rax,rdi
  4024ad:	sub    rax,rbp
  4024b0:	add    rdi,0x8
  4024b4:	mov    DWORD PTR [rbx-0x4],eax
  4024b7:	mov    DWORD PTR [rbx-0x8],edx
  4024ba:	cmp    rsi,0x20
  4024be:	je     0x4024f5
  4024c0:	mov    rcx,rsi
  4024c3:	call   0x402af0
  4024c8:	test   rax,rax
  4024cb:	jne    0x402492
  4024cd:	test   rsi,rsi
  4024d0:	je     0x40244c
  4024d6:	mov    edx,esi
  4024d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024e0:	mov    r8,rbp
  4024e3:	lea    rcx,[rip+0x7316]        # 0x409800
  4024ea:	call   QWORD PTR [rip+0x7f30]        # 0x40a420
  4024f0:	jmp    0x40244c
  4024f5:	mov    edx,0x20
  4024fa:	jmp    0x4024e0
  4024fc:	nop    DWORD PTR [rax+0x0]
  402500:	push   rbx
  402501:	sub    rsp,0x20
  402505:	mov    rdx,QWORD PTR [rcx]
  402508:	mov    eax,DWORD PTR [rdx]
  40250a:	mov    r8d,eax
  40250d:	and    r8d,0x20ffffff
  402514:	cmp    r8d,0x20474343
  40251b:	je     0x402620
  402521:	cmp    eax,0xc0000091
  402526:	mov    rbx,rcx
  402529:	ja     0x4025b0
  40252f:	cmp    eax,0xc000008d
  402534:	jae    0x4025c7
  40253a:	cmp    eax,0xc0000008
  40253f:	je     0x402573
  402541:	ja     0x402580
  402543:	cmp    eax,0x80000002
  402548:	je     0x402573
  40254a:	cmp    eax,0xc0000005
  40254f:	jne    0x402592
  402551:	xor    edx,edx
  402553:	mov    ecx,0xb
  402558:	call   0x403980
  40255d:	cmp    rax,0x1
  402561:	je     0x402690
  402567:	test   rax,rax
  40256a:	je     0x402592
  40256c:	mov    ecx,0xb
  402571:	call   rax
  402573:	mov    eax,0xffffffff
  402578:	add    rsp,0x20
  40257c:	pop    rbx
  40257d:	ret    
  40257e:	xchg   ax,ax
  402580:	cmp    eax,0xc000001d
  402585:	je     0x402646
  40258b:	cmp    eax,0xc000008c
  402590:	je     0x402573
  402592:	mov    rax,QWORD PTR [rip+0x7127]        # 0x4096c0
  402599:	test   rax,rax
  40259c:	je     0x402578
  40259e:	mov    rcx,rbx
  4025a1:	add    rsp,0x20
  4025a5:	pop    rbx
  4025a6:	rex.W jmp rax
  4025a9:	nop    DWORD PTR [rax+0x0]
  4025b0:	cmp    eax,0xc0000094
  4025b5:	je     0x4025f2
  4025b7:	ja     0x402630
  4025b9:	cmp    eax,0xc0000092
  4025be:	je     0x402573
  4025c0:	cmp    eax,0xc0000093
  4025c5:	jne    0x402592
  4025c7:	xor    edx,edx
  4025c9:	mov    ecx,0x8
  4025ce:	call   0x403980
  4025d3:	cmp    rax,0x1
  4025d7:	jne    0x402604
  4025d9:	mov    edx,0x1
  4025de:	mov    ecx,0x8
  4025e3:	call   0x403980
  4025e8:	call   0x401d50
  4025ed:	jmp    0x402573
  4025f2:	xor    edx,edx
  4025f4:	mov    ecx,0x8
  4025f9:	call   0x403980
  4025fe:	cmp    rax,0x1
  402602:	je     0x402672
  402604:	test   rax,rax
  402607:	je     0x402592
  402609:	mov    ecx,0x8
  40260e:	call   rax
  402610:	mov    eax,0xffffffff
  402615:	jmp    0x402578
  40261a:	nop    WORD PTR [rax+rax*1+0x0]
  402620:	test   BYTE PTR [rdx+0x4],0x1
  402624:	jne    0x402521
  40262a:	jmp    0x402573
  40262f:	nop
  402630:	cmp    eax,0xc0000095
  402635:	je     0x402573
  40263b:	cmp    eax,0xc0000096
  402640:	jne    0x402592
  402646:	xor    edx,edx
  402648:	mov    ecx,0x4
  40264d:	call   0x403980
  402652:	cmp    rax,0x1
  402656:	je     0x4026a4
  402658:	test   rax,rax
  40265b:	je     0x402592
  402661:	mov    ecx,0x4
  402666:	call   rax
  402668:	mov    eax,0xffffffff
  40266d:	jmp    0x402578
  402672:	mov    edx,0x1
  402677:	mov    ecx,0x8
  40267c:	call   0x403980
  402681:	jmp    0x402573
  402686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402690:	mov    edx,0x1
  402695:	mov    ecx,0xb
  40269a:	call   0x403980
  40269f:	jmp    0x402573
  4026a4:	mov    edx,0x1
  4026a9:	mov    ecx,0x4
  4026ae:	call   0x403980
  4026b3:	jmp    0x402573
  4026b8:	nop
  4026b9:	nop
  4026ba:	nop
  4026bb:	nop
  4026bc:	nop
  4026bd:	nop
  4026be:	nop
  4026bf:	nop
  4026c0:	push   rbp
  4026c1:	push   rdi
  4026c2:	push   rsi
  4026c3:	push   rbx
  4026c4:	sub    rsp,0x28
  4026c8:	lea    rcx,[rip+0x72d1]        # 0x4099a0
  4026cf:	call   QWORD PTR [rip+0x7cf3]        # 0x40a3c8
  4026d5:	mov    rbx,QWORD PTR [rip+0x72a4]        # 0x409980
  4026dc:	test   rbx,rbx
  4026df:	je     0x402714
  4026e1:	mov    rbp,QWORD PTR [rip+0x7d70]        # 0x40a458
  4026e8:	mov    rdi,QWORD PTR [rip+0x7cf9]        # 0x40a3e8
  4026ef:	nop
  4026f0:	mov    ecx,DWORD PTR [rbx]
  4026f2:	call   rbp
  4026f4:	mov    rsi,rax
  4026f7:	call   rdi
  4026f9:	test   eax,eax
  4026fb:	jne    0x40270b
  4026fd:	test   rsi,rsi
  402700:	je     0x40270b
  402702:	mov    rax,QWORD PTR [rbx+0x8]
  402706:	mov    rcx,rsi
  402709:	call   rax
  40270b:	mov    rbx,QWORD PTR [rbx+0x10]
  40270f:	test   rbx,rbx
  402712:	jne    0x4026f0
  402714:	mov    rax,QWORD PTR [rip+0x7cf5]        # 0x40a410
  40271b:	lea    rcx,[rip+0x727e]        # 0x4099a0
  402722:	add    rsp,0x28
  402726:	pop    rbx
  402727:	pop    rsi
  402728:	pop    rdi
  402729:	pop    rbp
  40272a:	rex.W jmp rax
  40272d:	nop    DWORD PTR [rax]
  402730:	push   rdi
  402731:	push   rsi
  402732:	push   rbx
  402733:	sub    rsp,0x20
  402737:	mov    eax,DWORD PTR [rip+0x724b]        # 0x409988
  40273d:	test   eax,eax
  40273f:	jne    0x402750
  402741:	add    rsp,0x20
  402745:	pop    rbx
  402746:	pop    rsi
  402747:	pop    rdi
  402748:	ret    
  402749:	nop    DWORD PTR [rax+0x0]
  402750:	mov    rsi,rdx
  402753:	mov    edi,ecx
  402755:	mov    edx,0x18
  40275a:	mov    ecx,0x1
  40275f:	call   0x4039f0
  402764:	test   rax,rax
  402767:	mov    rbx,rax
  40276a:	je     0x4027a8
  40276c:	mov    DWORD PTR [rax],edi
  40276e:	mov    QWORD PTR [rax+0x8],rsi
  402772:	lea    rcx,[rip+0x7227]        # 0x4099a0
  402779:	call   QWORD PTR [rip+0x7c49]        # 0x40a3c8
  40277f:	mov    rax,QWORD PTR [rip+0x71fa]        # 0x409980
  402786:	lea    rcx,[rip+0x7213]        # 0x4099a0
  40278d:	mov    QWORD PTR [rip+0x71ec],rbx        # 0x409980
  402794:	mov    QWORD PTR [rbx+0x10],rax
  402798:	call   QWORD PTR [rip+0x7c72]        # 0x40a410
  40279e:	xor    eax,eax
  4027a0:	add    rsp,0x20
  4027a4:	pop    rbx
  4027a5:	pop    rsi
  4027a6:	pop    rdi
  4027a7:	ret    
  4027a8:	mov    eax,0xffffffff
  4027ad:	jmp    0x402741
  4027af:	nop
  4027b0:	push   rbx
  4027b1:	sub    rsp,0x20
  4027b5:	mov    eax,DWORD PTR [rip+0x71cd]        # 0x409988
  4027bb:	test   eax,eax
  4027bd:	jne    0x4027d0
  4027bf:	xor    eax,eax
  4027c1:	add    rsp,0x20
  4027c5:	pop    rbx
  4027c6:	ret    
  4027c7:	nop    WORD PTR [rax+rax*1+0x0]
  4027d0:	mov    ebx,ecx
  4027d2:	lea    rcx,[rip+0x71c7]        # 0x4099a0
  4027d9:	call   QWORD PTR [rip+0x7be9]        # 0x40a3c8
  4027df:	mov    rdx,QWORD PTR [rip+0x719a]        # 0x409980
  4027e6:	test   rdx,rdx
  4027e9:	je     0x402807
  4027eb:	mov    eax,DWORD PTR [rdx]
  4027ed:	cmp    eax,ebx
  4027ef:	jne    0x4027fe
  4027f1:	jmp    0x40283f
  4027f3:	mov    r8d,DWORD PTR [rax]
  4027f6:	cmp    r8d,ebx
  4027f9:	je     0x402820
  4027fb:	mov    rdx,rax
  4027fe:	mov    rax,QWORD PTR [rdx+0x10]
  402802:	test   rax,rax
  402805:	jne    0x4027f3
  402807:	lea    rcx,[rip+0x7192]        # 0x4099a0
  40280e:	call   QWORD PTR [rip+0x7bfc]        # 0x40a410
  402814:	xor    eax,eax
  402816:	add    rsp,0x20
  40281a:	pop    rbx
  40281b:	ret    
  40281c:	nop    DWORD PTR [rax+0x0]
  402820:	mov    rcx,rax
  402823:	mov    rax,QWORD PTR [rax+0x10]
  402827:	mov    QWORD PTR [rdx+0x10],rax
  40282b:	call   0x4039d0
  402830:	lea    rcx,[rip+0x7169]        # 0x4099a0
  402837:	call   QWORD PTR [rip+0x7bd3]        # 0x40a410
  40283d:	jmp    0x402814
  40283f:	mov    rax,QWORD PTR [rdx+0x10]
  402843:	mov    rcx,rdx
  402846:	mov    QWORD PTR [rip+0x7133],rax        # 0x409980
  40284d:	jmp    0x40282b
  40284f:	nop
  402850:	push   rbx
  402851:	sub    rsp,0x20
  402855:	cmp    edx,0x1
  402858:	je     0x4028f0
  40285e:	jb     0x402890
  402860:	cmp    edx,0x2
  402863:	je     0x402880
  402865:	cmp    edx,0x3
  402868:	jne    0x402885
  40286a:	mov    eax,DWORD PTR [rip+0x7118]        # 0x409988
  402870:	test   eax,eax
  402872:	je     0x402885
  402874:	call   0x4026c0
  402879:	jmp    0x402885
  40287b:	nop    DWORD PTR [rax+rax*1+0x0]
  402880:	call   0x401d50
  402885:	mov    eax,0x1
  40288a:	add    rsp,0x20
  40288e:	pop    rbx
  40288f:	ret    
  402890:	mov    eax,DWORD PTR [rip+0x70f2]        # 0x409988
  402896:	test   eax,eax
  402898:	jne    0x402920
  40289e:	mov    eax,DWORD PTR [rip+0x70e4]        # 0x409988
  4028a4:	cmp    eax,0x1
  4028a7:	jne    0x402885
  4028a9:	mov    rcx,QWORD PTR [rip+0x70d0]        # 0x409980
  4028b0:	test   rcx,rcx
  4028b3:	je     0x4028c6
  4028b5:	mov    rbx,QWORD PTR [rcx+0x10]
  4028b9:	call   0x4039d0
  4028be:	test   rbx,rbx
  4028c1:	mov    rcx,rbx
  4028c4:	jne    0x4028b5
  4028c6:	lea    rcx,[rip+0x70d3]        # 0x4099a0
  4028cd:	mov    QWORD PTR [rip+0x70a8],0x0        # 0x409980
  4028d8:	mov    DWORD PTR [rip+0x70a6],0x0        # 0x409988
  4028e2:	call   QWORD PTR [rip+0x7ad8]        # 0x40a3c0
  4028e8:	jmp    0x402885
  4028ea:	nop    WORD PTR [rax+rax*1+0x0]
  4028f0:	mov    eax,DWORD PTR [rip+0x7092]        # 0x409988
  4028f6:	test   eax,eax
  4028f8:	je     0x402910
  4028fa:	mov    eax,0x1
  4028ff:	mov    DWORD PTR [rip+0x707f],0x1        # 0x409988
  402909:	add    rsp,0x20
  40290d:	pop    rbx
  40290e:	ret    
  40290f:	nop
  402910:	lea    rcx,[rip+0x7089]        # 0x4099a0
  402917:	call   QWORD PTR [rip+0x7aeb]        # 0x40a408
  40291d:	jmp    0x4028fa
  40291f:	nop
  402920:	call   0x4026c0
  402925:	jmp    0x40289e
  40292a:	nop
  40292b:	nop
  40292c:	nop
  40292d:	nop
  40292e:	nop
  40292f:	nop
  402930:	movsxd rax,DWORD PTR [rcx+0x3c]
  402934:	add    rcx,rax
  402937:	xor    eax,eax
  402939:	cmp    DWORD PTR [rcx],0x4550
  40293f:	je     0x402943
  402941:	repz ret 
  402943:	xor    eax,eax
  402945:	cmp    WORD PTR [rcx+0x18],0x20b
  40294b:	sete   al
  40294e:	ret    
  40294f:	nop
  402950:	cmp    WORD PTR [rcx],0x5a4d
  402955:	je     0x402960
  402957:	xor    eax,eax
  402959:	ret    
  40295a:	nop    WORD PTR [rax+rax*1+0x0]
  402960:	jmp    0x402930
  402962:	nop    DWORD PTR [rax+0x0]
  402966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402970:	movsxd rax,DWORD PTR [rcx+0x3c]
  402974:	add    rcx,rax
  402977:	movzx  eax,WORD PTR [rcx+0x14]
  40297b:	lea    rax,[rcx+rax*1+0x18]
  402980:	movzx  ecx,WORD PTR [rcx+0x6]
  402984:	test   ecx,ecx
  402986:	je     0x4029b1
  402988:	sub    ecx,0x1
  40298b:	lea    rcx,[rcx+rcx*4]
  40298f:	lea    r9,[rax+rcx*8+0x28]
  402994:	mov    r8d,DWORD PTR [rax+0xc]
  402998:	cmp    r8,rdx
  40299b:	mov    rcx,r8
  40299e:	ja     0x4029a8
  4029a0:	add    ecx,DWORD PTR [rax+0x8]
  4029a3:	cmp    rdx,rcx
  4029a6:	jb     0x4029b3
  4029a8:	add    rax,0x28
  4029ac:	cmp    rax,r9
  4029af:	jne    0x402994
  4029b1:	xor    eax,eax
  4029b3:	repz ret 
  4029b5:	nop
  4029b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029c0:	push   rdi
  4029c1:	push   rsi
  4029c2:	push   rbx
  4029c3:	sub    rsp,0x20
  4029c7:	mov    rsi,rcx
  4029ca:	call   0x403970
  4029cf:	cmp    rax,0x8
  4029d3:	ja     0x4029f0
  4029d5:	mov    rbx,QWORD PTR [rip+0x3dc4]        # 0x4067a0
  4029dc:	xor    edi,edi
  4029de:	cmp    WORD PTR [rbx],0x5a4d
  4029e3:	je     0x402a00
  4029e5:	mov    rax,rdi
  4029e8:	add    rsp,0x20
  4029ec:	pop    rbx
  4029ed:	pop    rsi
  4029ee:	pop    rdi
  4029ef:	ret    
  4029f0:	xor    edi,edi
  4029f2:	mov    rax,rdi
  4029f5:	add    rsp,0x20
  4029f9:	pop    rbx
  4029fa:	pop    rsi
  4029fb:	pop    rdi
  4029fc:	ret    
  4029fd:	nop    DWORD PTR [rax]
  402a00:	mov    rcx,rbx
  402a03:	call   0x402930
  402a08:	test   eax,eax
  402a0a:	je     0x4029e5
  402a0c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402a10:	add    rdx,rbx
  402a13:	movzx  eax,WORD PTR [rdx+0x14]
  402a17:	lea    rbx,[rdx+rax*1+0x18]
  402a1c:	movzx  eax,WORD PTR [rdx+0x6]
  402a20:	test   eax,eax
  402a22:	je     0x4029e5
  402a24:	sub    eax,0x1
  402a27:	lea    rax,[rax+rax*4]
  402a2b:	lea    rdi,[rbx+rax*8+0x28]
  402a30:	jmp    0x402a3b
  402a32:	add    rbx,0x28
  402a36:	cmp    rbx,rdi
  402a39:	je     0x4029f0
  402a3b:	mov    r8d,0x8
  402a41:	mov    rdx,rsi
  402a44:	mov    rcx,rbx
  402a47:	call   0x403968
  402a4c:	test   eax,eax
  402a4e:	jne    0x402a32
  402a50:	mov    rdi,rbx
  402a53:	mov    rax,rdi
  402a56:	add    rsp,0x20
  402a5a:	pop    rbx
  402a5b:	pop    rsi
  402a5c:	pop    rdi
  402a5d:	ret    
  402a5e:	xchg   ax,ax
  402a60:	push   rsi
  402a61:	push   rbx
  402a62:	sub    rsp,0x28
  402a66:	mov    rbx,QWORD PTR [rip+0x3d33]        # 0x4067a0
  402a6d:	cmp    WORD PTR [rbx],0x5a4d
  402a72:	je     0x402a80
  402a74:	xor    eax,eax
  402a76:	add    rsp,0x28
  402a7a:	pop    rbx
  402a7b:	pop    rsi
  402a7c:	ret    
  402a7d:	nop    DWORD PTR [rax]
  402a80:	mov    rsi,rcx
  402a83:	mov    rcx,rbx
  402a86:	call   0x402930
  402a8b:	test   eax,eax
  402a8d:	je     0x402a74
  402a8f:	sub    rsi,rbx
  402a92:	mov    rcx,rbx
  402a95:	mov    rdx,rsi
  402a98:	add    rsp,0x28
  402a9c:	pop    rbx
  402a9d:	pop    rsi
  402a9e:	jmp    0x402970
  402aa3:	nop    DWORD PTR [rax]
  402aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ab0:	push   rbx
  402ab1:	sub    rsp,0x20
  402ab5:	mov    rbx,QWORD PTR [rip+0x3ce4]        # 0x4067a0
  402abc:	xor    eax,eax
  402abe:	cmp    WORD PTR [rbx],0x5a4d
  402ac3:	je     0x402ad0
  402ac5:	add    rsp,0x20
  402ac9:	pop    rbx
  402aca:	ret    
  402acb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	mov    rcx,rbx
  402ad3:	call   0x402930
  402ad8:	test   eax,eax
  402ada:	je     0x402ac5
  402adc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ae0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ae5:	add    rsp,0x20
  402ae9:	pop    rbx
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	push   rdi
  402af1:	push   rsi
  402af2:	push   rbx
  402af3:	sub    rsp,0x20
  402af7:	mov    rsi,QWORD PTR [rip+0x3ca2]        # 0x4067a0
  402afe:	xor    edi,edi
  402b00:	mov    rbx,rcx
  402b03:	cmp    WORD PTR [rsi],0x5a4d
  402b08:	je     0x402b15
  402b0a:	mov    rax,rdi
  402b0d:	add    rsp,0x20
  402b11:	pop    rbx
  402b12:	pop    rsi
  402b13:	pop    rdi
  402b14:	ret    
  402b15:	mov    rcx,rsi
  402b18:	call   0x402930
  402b1d:	test   eax,eax
  402b1f:	je     0x402b0a
  402b21:	movsxd rax,DWORD PTR [rsi+0x3c]
  402b25:	add    rsi,rax
  402b28:	movzx  eax,WORD PTR [rsi+0x14]
  402b2c:	lea    rdx,[rsi+rax*1+0x18]
  402b31:	movzx  eax,WORD PTR [rsi+0x6]
  402b35:	test   eax,eax
  402b37:	je     0x402b0a
  402b39:	sub    eax,0x1
  402b3c:	lea    rax,[rax+rax*4]
  402b40:	lea    rax,[rdx+rax*8+0x28]
  402b45:	test   BYTE PTR [rdx+0x27],0x20
  402b49:	je     0x402b54
  402b4b:	test   rbx,rbx
  402b4e:	je     0x402b70
  402b50:	sub    rbx,0x1
  402b54:	add    rdx,0x28
  402b58:	cmp    rdx,rax
  402b5b:	jne    0x402b45
  402b5d:	xor    edi,edi
  402b5f:	mov    rax,rdi
  402b62:	add    rsp,0x20
  402b66:	pop    rbx
  402b67:	pop    rsi
  402b68:	pop    rdi
  402b69:	ret    
  402b6a:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	mov    rdi,rdx
  402b73:	mov    rax,rdi
  402b76:	add    rsp,0x20
  402b7a:	pop    rbx
  402b7b:	pop    rsi
  402b7c:	pop    rdi
  402b7d:	ret    
  402b7e:	xchg   ax,ax
  402b80:	push   rsi
  402b81:	push   rbx
  402b82:	sub    rsp,0x28
  402b86:	mov    rsi,QWORD PTR [rip+0x3c13]        # 0x4067a0
  402b8d:	xor    ebx,ebx
  402b8f:	cmp    WORD PTR [rsi],0x5a4d
  402b94:	je     0x402ba0
  402b96:	mov    rax,rbx
  402b99:	add    rsp,0x28
  402b9d:	pop    rbx
  402b9e:	pop    rsi
  402b9f:	ret    
  402ba0:	mov    rcx,rsi
  402ba3:	call   0x402930
  402ba8:	test   eax,eax
  402baa:	cmovne rbx,rsi
  402bae:	mov    rax,rbx
  402bb1:	add    rsp,0x28
  402bb5:	pop    rbx
  402bb6:	pop    rsi
  402bb7:	ret    
  402bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bc0:	push   rsi
  402bc1:	push   rbx
  402bc2:	sub    rsp,0x28
  402bc6:	mov    rbx,QWORD PTR [rip+0x3bd3]        # 0x4067a0
  402bcd:	xor    eax,eax
  402bcf:	cmp    WORD PTR [rbx],0x5a4d
  402bd4:	je     0x402be0
  402bd6:	add    rsp,0x28
  402bda:	pop    rbx
  402bdb:	pop    rsi
  402bdc:	ret    
  402bdd:	nop    DWORD PTR [rax]
  402be0:	mov    rsi,rcx
  402be3:	mov    rcx,rbx
  402be6:	call   0x402930
  402beb:	test   eax,eax
  402bed:	je     0x402bd6
  402bef:	sub    rsi,rbx
  402bf2:	mov    rcx,rbx
  402bf5:	mov    rdx,rsi
  402bf8:	call   0x402970
  402bfd:	test   rax,rax
  402c00:	je     0x402c11
  402c02:	mov    eax,DWORD PTR [rax+0x24]
  402c05:	not    eax
  402c07:	shr    eax,0x1f
  402c0a:	add    rsp,0x28
  402c0e:	pop    rbx
  402c0f:	pop    rsi
  402c10:	ret    
  402c11:	xor    eax,eax
  402c13:	jmp    0x402bd6
  402c15:	nop
  402c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c20:	push   rbp
  402c21:	push   rdi
  402c22:	push   rsi
  402c23:	push   rbx
  402c24:	sub    rsp,0x28
  402c28:	mov    rdi,QWORD PTR [rip+0x3b71]        # 0x4067a0
  402c2f:	xor    ebp,ebp
  402c31:	mov    esi,ecx
  402c33:	cmp    WORD PTR [rdi],0x5a4d
  402c38:	je     0x402c50
  402c3a:	mov    rax,rbp
  402c3d:	add    rsp,0x28
  402c41:	pop    rbx
  402c42:	pop    rsi
  402c43:	pop    rdi
  402c44:	pop    rbp
  402c45:	ret    
  402c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c50:	mov    rcx,rdi
  402c53:	call   0x402930
  402c58:	test   eax,eax
  402c5a:	je     0x402c3a
  402c5c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402c60:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402c67:	test   edx,edx
  402c69:	je     0x402c3a
  402c6b:	mov    ebx,edx
  402c6d:	mov    rcx,rdi
  402c70:	mov    rdx,rbx
  402c73:	call   0x402970
  402c78:	test   rax,rax
  402c7b:	je     0x402c3a
  402c7d:	add    rbx,rdi
  402c80:	mov    rdx,rbx
  402c83:	jne    0x402c97
  402c85:	jmp    0x402c3a
  402c87:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	sub    esi,0x1
  402c93:	add    rdx,0x14
  402c97:	mov    ecx,DWORD PTR [rdx+0x4]
  402c9a:	test   ecx,ecx
  402c9c:	jne    0x402ca5
  402c9e:	mov    eax,DWORD PTR [rdx+0xc]
  402ca1:	test   eax,eax
  402ca3:	je     0x402cc0
  402ca5:	test   esi,esi
  402ca7:	jg     0x402c90
  402ca9:	mov    ebp,DWORD PTR [rdx+0xc]
  402cac:	add    rbp,rdi
  402caf:	mov    rax,rbp
  402cb2:	add    rsp,0x28
  402cb6:	pop    rbx
  402cb7:	pop    rsi
  402cb8:	pop    rdi
  402cb9:	pop    rbp
  402cba:	ret    
  402cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	xor    ebp,ebp
  402cc2:	mov    rax,rbp
  402cc5:	add    rsp,0x28
  402cc9:	pop    rbx
  402cca:	pop    rsi
  402ccb:	pop    rdi
  402ccc:	pop    rbp
  402ccd:	ret    
  402cce:	nop
  402ccf:	nop
  402cd0:	push   rcx
  402cd1:	push   rax
  402cd2:	cmp    rax,0x1000
  402cd8:	lea    rcx,[rsp+0x18]
  402cdd:	jb     0x402cf8
  402cdf:	sub    rcx,0x1000
  402ce6:	or     QWORD PTR [rcx],0x0
  402cea:	sub    rax,0x1000
  402cf0:	cmp    rax,0x1000
  402cf6:	ja     0x402cdf
  402cf8:	sub    rcx,rax
  402cfb:	or     QWORD PTR [rcx],0x0
  402cff:	pop    rax
  402d00:	pop    rcx
  402d01:	ret    
  402d02:	nop
  402d03:	nop
  402d04:	nop
  402d05:	nop
  402d06:	nop
  402d07:	nop
  402d08:	nop
  402d09:	nop
  402d0a:	nop
  402d0b:	nop
  402d0c:	nop
  402d0d:	nop
  402d0e:	nop
  402d0f:	nop
  402d10:	push   r13
  402d12:	push   r12
  402d14:	push   rbp
  402d15:	push   rdi
  402d16:	push   rsi
  402d17:	push   rbx
  402d18:	mov    r12d,edx
  402d1b:	mov    ebp,r8d
  402d1e:	mov    edi,edx
  402d20:	sub    r12d,ecx
  402d23:	sub    ebp,edx
  402d25:	mov    eax,r12d
  402d28:	cdq    
  402d29:	idiv   ebp
  402d2b:	test   edx,edx
  402d2d:	mov    r13d,edx
  402d30:	je     0x402db5
  402d36:	mov    eax,ebp
  402d38:	jmp    0x402d43
  402d3a:	nop    WORD PTR [rax+rax*1+0x0]
  402d40:	mov    r13d,edx
  402d43:	cdq    
  402d44:	idiv   r13d
  402d47:	mov    eax,r13d
  402d4a:	test   edx,edx
  402d4c:	jne    0x402d40
  402d4e:	mov    eax,r8d
  402d51:	sub    eax,ecx
  402d53:	cdq    
  402d54:	idiv   r13d
  402d57:	test   r13d,r13d
  402d5a:	jle    0x402dac
  402d5c:	movsxd rdx,edi
  402d5f:	xor    esi,esi
  402d61:	lea    rdx,[r9+rdx*8]
  402d65:	test   eax,eax
  402d67:	lea    ecx,[rdi+rsi*1]
  402d6a:	jle    0x402da3
  402d6c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  402d70:	xor    r10d,r10d
  402d73:	mov    r11d,ecx
  402d76:	lea    r8d,[rcx+rbp*1]
  402d7a:	sub    r11d,r12d
  402d7d:	cmp    edi,ecx
  402d7f:	mov    ecx,r11d
  402d82:	cmovg  ecx,r8d
  402d86:	add    r10d,0x1
  402d8a:	movsxd r11,ecx
  402d8d:	cmp    r10d,eax
  402d90:	lea    r8,[r9+r11*8]
  402d94:	mov    r11,QWORD PTR [r8]
  402d97:	mov    QWORD PTR [r8],rbx
  402d9a:	mov    QWORD PTR [rdx+rsi*8],r11
  402d9e:	mov    rbx,r11
  402da1:	jne    0x402d73
  402da3:	add    rsi,0x1
  402da7:	cmp    r13d,esi
  402daa:	jg     0x402d65
  402dac:	pop    rbx
  402dad:	pop    rsi
  402dae:	pop    rdi
  402daf:	pop    rbp
  402db0:	pop    r12
  402db2:	pop    r13
  402db4:	ret    
  402db5:	mov    r13d,ebp
  402db8:	jmp    0x402d4e
  402dba:	nop    WORD PTR [rax+rax*1+0x0]
  402dc0:	push   rdi
  402dc1:	push   rsi
  402dc2:	push   rbx
  402dc3:	sub    rsp,0x30
  402dc7:	mov    rax,QWORD PTR [rip+0x39e2]        # 0x4067b0
  402dce:	mov    QWORD PTR [rsp+0x58],rdx
  402dd3:	mov    QWORD PTR [rsp+0x60],r8
  402dd8:	lea    rsi,[rsp+0x58]
  402ddd:	mov    QWORD PTR [rsp+0x68],r9
  402de2:	mov    rbx,rcx
  402de5:	mov    rax,QWORD PTR [rax]
  402de8:	mov    QWORD PTR [rsp+0x28],rsi
  402ded:	mov    rax,QWORD PTR [rax]
  402df0:	mov    rdi,QWORD PTR [rax]
  402df3:	call   0x403a48
  402df8:	lea    rdx,[rip+0x3801]        # 0x406600
  402dff:	lea    rcx,[rax+0x60]
  402e03:	mov    r8,rdi
  402e06:	call   0x4039e0
  402e0b:	test   rbx,rbx
  402e0e:	je     0x402e24
  402e10:	call   0x403a48
  402e15:	lea    rcx,[rax+0x60]
  402e19:	mov    r8,rsi
  402e1c:	mov    rdx,rbx
  402e1f:	call   0x403960
  402e24:	call   0x403a48
  402e29:	lea    rdx,[rax+0x60]
  402e2d:	mov    ecx,0xa
  402e32:	call   0x4039d8
  402e37:	nop
  402e38:	add    rsp,0x30
  402e3c:	pop    rbx
  402e3d:	pop    rsi
  402e3e:	pop    rdi
  402e3f:	ret    
  402e40:	push   r15
  402e42:	push   r14
  402e44:	push   r13
  402e46:	push   r12
  402e48:	push   rbp
  402e49:	push   rdi
  402e4a:	push   rsi
  402e4b:	push   rbx
  402e4c:	sub    rsp,0x48
  402e50:	mov    eax,DWORD PTR [rip+0x2216]        # 0x40506c
  402e56:	mov    rbp,QWORD PTR [rip+0x2203]        # 0x405060
  402e5d:	mov    QWORD PTR [rsp+0x90],rcx
  402e65:	mov    QWORD PTR [rsp+0x98],rdx
  402e6d:	mov    edx,0x3d
  402e72:	mov    r14,r8
  402e75:	mov    QWORD PTR [rsp+0xa8],r9
  402e7d:	mov    r13d,DWORD PTR [rsp+0xb0]
  402e85:	mov    DWORD PTR [rsp+0x38],eax
  402e89:	mov    rcx,rbp
  402e8c:	add    eax,0x1
  402e8f:	mov    DWORD PTR [rsp+0x3c],eax
  402e93:	mov    DWORD PTR [rip+0x21d3],eax        # 0x40506c
  402e99:	call   0x403978
  402e9e:	test   rax,rax
  402ea1:	mov    QWORD PTR [rsp+0x30],rax
  402ea6:	je     0x403084
  402eac:	mov    rdi,rax
  402eaf:	add    rax,0x1
  402eb3:	sub    rdi,rbp
  402eb6:	mov    QWORD PTR [rsp+0x30],rax
  402ebb:	mov    r15,QWORD PTR [r14]
  402ebe:	test   r15,r15
  402ec1:	je     0x4030cb
  402ec7:	lea    rbx,[r14+0x20]
  402ecb:	mov    r12d,0xffffffff
  402ed1:	mov    DWORD PTR [rsp+0x2c],0x0
  402ed9:	xor    esi,esi
  402edb:	jmp    0x402ef5
  402edd:	nop    DWORD PTR [rax]
  402ee0:	test   r13d,r13d
  402ee3:	je     0x402f1e
  402ee5:	add    rbx,0x20
  402ee9:	mov    r15,QWORD PTR [rbx-0x20]
  402eed:	add    esi,0x1
  402ef0:	test   r15,r15
  402ef3:	je     0x402f60
  402ef5:	mov    r8,rdi
  402ef8:	mov    rdx,r15
  402efb:	mov    rcx,rbp
  402efe:	call   0x403968
  402f03:	test   eax,eax
  402f05:	jne    0x402ee5
  402f07:	mov    rcx,r15
  402f0a:	call   0x403970
  402f0f:	cmp    rax,rdi
  402f12:	je     0x40300d
  402f18:	cmp    rdi,0x1
  402f1c:	je     0x402ee0
  402f1e:	cmp    r12d,0xffffffff
  402f22:	je     0x402fc0
  402f28:	movsxd rax,r12d
  402f2b:	shl    rax,0x5
  402f2f:	add    rax,r14
  402f32:	mov    edx,DWORD PTR [rax+0x8]
  402f35:	cmp    DWORD PTR [rbx-0x18],edx
  402f38:	je     0x402fd0
  402f3e:	add    rbx,0x20
  402f42:	mov    r15,QWORD PTR [rbx-0x20]
  402f46:	add    esi,0x1
  402f49:	mov    DWORD PTR [rsp+0x2c],0x1
  402f51:	test   r15,r15
  402f54:	jne    0x402ef5
  402f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f60:	mov    r9d,DWORD PTR [rsp+0x2c]
  402f65:	test   r9d,r9d
  402f68:	je     0x403000
  402f6e:	mov    r8d,DWORD PTR [rip+0x20fb]        # 0x405070
  402f75:	test   r8d,r8d
  402f78:	je     0x402f98
  402f7a:	mov    rax,QWORD PTR [rsp+0x98]
  402f82:	cmp    BYTE PTR [rax],0x3a
  402f85:	je     0x402f98
  402f87:	lea    rcx,[rip+0x3702]        # 0x406690
  402f8e:	mov    r8,rbp
  402f91:	mov    edx,edi
  402f93:	call   0x402dc0
  402f98:	mov    DWORD PTR [rip+0x20c6],0x0        # 0x405068
  402fa2:	mov    eax,0x3f
  402fa7:	add    rsp,0x48
  402fab:	pop    rbx
  402fac:	pop    rsi
  402fad:	pop    rdi
  402fae:	pop    rbp
  402faf:	pop    r12
  402fb1:	pop    r13
  402fb3:	pop    r14
  402fb5:	pop    r15
  402fb7:	ret    
  402fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fc0:	mov    r12d,esi
  402fc3:	jmp    0x402ee5
  402fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	mov    rdx,QWORD PTR [rax+0x10]
  402fd4:	cmp    QWORD PTR [rbx-0x10],rdx
  402fd8:	jne    0x402f3e
  402fde:	mov    eax,DWORD PTR [rax+0x18]
  402fe1:	cmp    DWORD PTR [rbx-0x8],eax
  402fe4:	mov    eax,0x1
  402fe9:	cmove  eax,DWORD PTR [rsp+0x2c]
  402fee:	mov    DWORD PTR [rsp+0x2c],eax
  402ff2:	jmp    0x402ee5
  402ff7:	nop    WORD PTR [rax+rax*1+0x0]
  403000:	cmp    r12d,0xffffffff
  403004:	je     0x4030cb
  40300a:	mov    esi,r12d
  40300d:	movsxd rax,esi
  403010:	shl    rax,0x5
  403014:	add    r14,rax
  403017:	cmp    QWORD PTR [rsp+0x30],0x0
  40301d:	mov    eax,DWORD PTR [r14+0x8]
  403021:	setne  cl
  403024:	je     0x403094
  403026:	test   eax,eax
  403028:	jne    0x403094
  40302a:	mov    ecx,DWORD PTR [rip+0x2040]        # 0x405070
  403030:	test   ecx,ecx
  403032:	jne    0x403064
  403034:	cmp    QWORD PTR [r14+0x10],0x0
  403039:	je     0x403194
  40303f:	mov    DWORD PTR [rip+0x201f],0x0        # 0x405068
  403049:	mov    rax,QWORD PTR [rsp+0x98]
  403051:	cmp    BYTE PTR [rax],0x3a
  403054:	je     0x403181
  40305a:	mov    eax,0x3f
  40305f:	jmp    0x402fa7
  403064:	mov    rax,QWORD PTR [rsp+0x98]
  40306c:	cmp    BYTE PTR [rax],0x3a
  40306f:	je     0x403034
  403071:	lea    rcx,[rip+0x35e8]        # 0x406660
  403078:	mov    r8,rbp
  40307b:	mov    edx,edi
  40307d:	call   0x402dc0
  403082:	jmp    0x403034
  403084:	mov    rcx,rbp
  403087:	call   0x403970
  40308c:	mov    rdi,rax
  40308f:	jmp    0x402ebb
  403094:	lea    edx,[rax-0x1]
  403097:	cmp    edx,0x1
  40309a:	jbe    0x403107
  40309c:	cmp    QWORD PTR [rsp+0xa8],0x0
  4030a5:	je     0x4030b1
  4030a7:	mov    rax,QWORD PTR [rsp+0xa8]
  4030af:	mov    DWORD PTR [rax],esi
  4030b1:	mov    rax,QWORD PTR [r14+0x10]
  4030b5:	test   rax,rax
  4030b8:	je     0x40318b
  4030be:	mov    edx,DWORD PTR [r14+0x18]
  4030c2:	mov    DWORD PTR [rax],edx
  4030c4:	xor    eax,eax
  4030c6:	jmp    0x402fa7
  4030cb:	test   r13d,r13d
  4030ce:	jne    0x4031e2
  4030d4:	mov    eax,DWORD PTR [rip+0x1f96]        # 0x405070
  4030da:	test   eax,eax
  4030dc:	je     0x402f98
  4030e2:	mov    rax,QWORD PTR [rsp+0x98]
  4030ea:	cmp    BYTE PTR [rax],0x3a
  4030ed:	je     0x402f98
  4030f3:	lea    rcx,[rip+0x3526]        # 0x406620
  4030fa:	mov    rdx,rbp
  4030fd:	call   0x402dc0
  403102:	jmp    0x402f98
  403107:	test   cl,cl
  403109:	je     0x4031a3
  40310f:	mov    rdx,QWORD PTR [rsp+0x30]
  403114:	cmp    eax,0x1
  403117:	mov    QWORD PTR [rip+0x6932],rdx        # 0x409a50
  40311e:	jne    0x40309c
  403124:	mov    r15,QWORD PTR [rsp+0x30]
  403129:	test   r15,r15
  40312c:	jne    0x40309c
  403132:	mov    edx,DWORD PTR [rip+0x1f38]        # 0x405070
  403138:	test   edx,edx
  40313a:	je     0x403158
  40313c:	mov    rax,QWORD PTR [rsp+0x98]
  403144:	cmp    BYTE PTR [rax],0x3a
  403147:	je     0x403158
  403149:	lea    rcx,[rip+0x3570]        # 0x4066c0
  403150:	mov    rdx,rbp
  403153:	call   0x402dc0
  403158:	cmp    QWORD PTR [r14+0x10],0x0
  40315d:	je     0x4031d6
  40315f:	mov    DWORD PTR [rip+0x1eff],0x0        # 0x405068
  403169:	mov    rax,QWORD PTR [rsp+0x98]
  403171:	sub    DWORD PTR [rip+0x1ef4],0x1        # 0x40506c
  403178:	cmp    BYTE PTR [rax],0x3a
  40317b:	jne    0x40305a
  403181:	mov    eax,0x3a
  403186:	jmp    0x402fa7
  40318b:	mov    eax,DWORD PTR [r14+0x18]
  40318f:	jmp    0x402fa7
  403194:	mov    eax,DWORD PTR [r14+0x18]
  403198:	mov    DWORD PTR [rip+0x1eca],eax        # 0x405068
  40319e:	jmp    0x403049
  4031a3:	cmp    eax,0x1
  4031a6:	jne    0x40309c
  4031ac:	mov    eax,DWORD PTR [rsp+0x38]
  4031b0:	mov    rdx,QWORD PTR [rsp+0x90]
  4031b8:	add    eax,0x2
  4031bb:	mov    DWORD PTR [rip+0x1eab],eax        # 0x40506c
  4031c1:	movsxd rax,DWORD PTR [rsp+0x3c]
  4031c6:	mov    r15,QWORD PTR [rdx+rax*8]
  4031ca:	mov    QWORD PTR [rip+0x687f],r15        # 0x409a50
  4031d1:	jmp    0x403129
  4031d6:	mov    eax,DWORD PTR [r14+0x18]
  4031da:	mov    DWORD PTR [rip+0x1e88],eax        # 0x405068
  4031e0:	jmp    0x403169
  4031e2:	mov    eax,DWORD PTR [rsp+0x38]
  4031e6:	mov    DWORD PTR [rip+0x1e80],eax        # 0x40506c
  4031ec:	mov    eax,0xffffffff
  4031f1:	jmp    0x402fa7
  4031f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403200:	push   r15
  403202:	push   r14
  403204:	push   r13
  403206:	push   r12
  403208:	push   rbp
  403209:	push   rdi
  40320a:	push   rsi
  40320b:	push   rbx
  40320c:	sub    rsp,0x38
  403210:	test   r8,r8
  403213:	mov    edi,ecx
  403215:	mov    r15,rdx
  403218:	mov    QWORD PTR [rsp+0x90],r8
  403220:	mov    QWORD PTR [rsp+0x98],r9
  403228:	je     0x4034fe
  40322e:	mov    r9d,DWORD PTR [rip+0x1e37]        # 0x40506c
  403235:	test   r9d,r9d
  403238:	je     0x403490
  40323e:	cmp    DWORD PTR [rip+0x1e0b],0xffffffff        # 0x405050
  403245:	je     0x403404
  40324b:	mov    edx,DWORD PTR [rip+0x6807]        # 0x409a58
  403251:	test   edx,edx
  403253:	jne    0x403404
  403259:	mov    rax,QWORD PTR [rsp+0x90]
  403261:	movzx  eax,BYTE PTR [rax]
  403264:	cmp    al,0x2d
  403266:	je     0x403438
  40326c:	cmp    al,0x2b
  40326e:	je     0x403514
  403274:	mov    r8d,DWORD PTR [rip+0x1dd5]        # 0x405050
  40327b:	test   r8d,r8d
  40327e:	jne    0x403514
  403284:	sub    eax,0x2b
  403287:	test   al,0xfd
  403289:	je     0x403440
  40328f:	test   edx,edx
  403291:	mov    QWORD PTR [rip+0x67b4],0x0        # 0x409a50
  40329c:	jne    0x403470
  4032a2:	mov    r14d,DWORD PTR [rsp+0xa8]
  4032aa:	mov    ebp,DWORD PTR [rsp+0xa8]
  4032b1:	and    r14d,0x2
  4032b5:	and    ebp,0x1
  4032b8:	jmp    0x40333e
  4032bd:	nop    DWORD PTR [rax]
  4032c0:	lea    rax,[rip+0x334e]        # 0x406615
  4032c7:	test   r14d,r14d
  4032ca:	mov    edx,r14d
  4032cd:	mov    QWORD PTR [rip+0x1d8c],rax        # 0x405060
  4032d4:	jne    0x4035e0
  4032da:	test   ebp,ebp
  4032dc:	je     0x4034fe
  4032e2:	mov    r12d,DWORD PTR [rip+0x1d6f]        # 0x405058
  4032e9:	cmp    r12d,0xffffffff
  4032ed:	je     0x403460
  4032f3:	mov    r13d,DWORD PTR [rip+0x1d5a]        # 0x405054
  4032fa:	cmp    r13d,0xffffffff
  4032fe:	je     0x403335
  403300:	mov    edx,r13d
  403303:	mov    r9,r15
  403306:	mov    r8d,ebx
  403309:	mov    ecx,r12d
  40330c:	call   0x402d10
  403311:	mov    esi,DWORD PTR [rip+0x1d55]        # 0x40506c
  403317:	mov    eax,r12d
  40331a:	mov    edx,DWORD PTR [rip+0x6738]        # 0x409a58
  403320:	sub    eax,r13d
  403323:	mov    DWORD PTR [rip+0x1d27],0xffffffff        # 0x405054
  40332d:	add    eax,esi
  40332f:	mov    DWORD PTR [rip+0x1d23],eax        # 0x405058
  403335:	add    esi,0x1
  403338:	mov    DWORD PTR [rip+0x1d2e],esi        # 0x40506c
  40333e:	test   edx,edx
  403340:	jne    0x403354
  403342:	mov    rsi,QWORD PTR [rip+0x1d17]        # 0x405060
  403349:	movzx  eax,BYTE PTR [rsi]
  40334c:	test   al,al
  40334e:	jne    0x40354e
  403354:	movsxd rbx,DWORD PTR [rip+0x1d11]        # 0x40506c
  40335b:	mov    DWORD PTR [rip+0x66f3],0x0        # 0x409a58
  403365:	cmp    ebx,edi
  403367:	mov    esi,ebx
  403369:	jge    0x4034b0
  40336f:	movsxd rax,ebx
  403372:	mov    r13,QWORD PTR [r15+rax*8]
  403376:	cmp    BYTE PTR [r13+0x0],0x2d
  40337b:	mov    QWORD PTR [rip+0x1cde],r13        # 0x405060
  403382:	jne    0x4032c0
  403388:	movzx  eax,BYTE PTR [r13+0x1]
  40338d:	test   al,al
  40338f:	jne    0x403521
  403395:	mov    rcx,QWORD PTR [rsp+0x90]
  40339d:	mov    edx,0x2d
  4033a2:	call   0x403978
  4033a7:	test   rax,rax
  4033aa:	je     0x4032c0
  4033b0:	cmp    DWORD PTR [rip+0x1ca1],0xffffffff        # 0x405058
  4033b7:	mov    rsi,r13
  4033ba:	je     0x4033d4
  4033bc:	cmp    DWORD PTR [rip+0x1c91],0xffffffff        # 0x405054
  4033c3:	mov    eax,0x2d
  4033c8:	jne    0x40354e
  4033ce:	mov    DWORD PTR [rip+0x1c80],ebx        # 0x405054
  4033d4:	cmp    QWORD PTR [rsp+0x98],0x0
  4033dd:	je     0x4037cc
  4033e3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  4033e7:	mov    eax,0x2d
  4033ec:	je     0x40361e
  4033f2:	add    rsi,0x1
  4033f6:	xor    edx,edx
  4033f8:	mov    QWORD PTR [rip+0x1c61],rsi        # 0x405060
  4033ff:	jmp    0x4035a2
  403404:	lea    rcx,[rip+0x31fa]        # 0x406605
  40340b:	call   0x4039c0
  403410:	test   rax,rax
  403413:	mov    edx,DWORD PTR [rip+0x663f]        # 0x409a58
  403419:	setne  al
  40341c:	movzx  eax,al
  40341f:	mov    DWORD PTR [rip+0x1c2b],eax        # 0x405050
  403425:	mov    rax,QWORD PTR [rsp+0x90]
  40342d:	movzx  eax,BYTE PTR [rax]
  403430:	cmp    al,0x2d
  403432:	jne    0x40326c
  403438:	or     DWORD PTR [rsp+0xa8],0x2
  403440:	add    QWORD PTR [rsp+0x90],0x1
  403449:	test   edx,edx
  40344b:	mov    QWORD PTR [rip+0x65fa],0x0        # 0x409a50
  403456:	je     0x4032a2
  40345c:	jmp    0x403470
  40345e:	xchg   ax,ax
  403460:	mov    DWORD PTR [rip+0x1bf2],ebx        # 0x405058
  403466:	jmp    0x403335
  40346b:	nop    DWORD PTR [rax+rax*1+0x0]
  403470:	mov    DWORD PTR [rip+0x1bda],0xffffffff        # 0x405054
  40347a:	mov    DWORD PTR [rip+0x1bd4],0xffffffff        # 0x405058
  403484:	jmp    0x4032a2
  403489:	nop    DWORD PTR [rax+0x0]
  403490:	mov    DWORD PTR [rip+0x65be],0x1        # 0x409a58
  40349a:	mov    DWORD PTR [rip+0x1bc8],0x1        # 0x40506c
  4034a4:	jmp    0x40323e
  4034a9:	nop    DWORD PTR [rax+0x0]
  4034b0:	mov    esi,DWORD PTR [rip+0x1b9e]        # 0x405054
  4034b6:	lea    rax,[rip+0x3158]        # 0x406615
  4034bd:	mov    QWORD PTR [rip+0x1b9c],rax        # 0x405060
  4034c4:	cmp    esi,0xffffffff
  4034c7:	je     0x4035fa
  4034cd:	mov    edi,DWORD PTR [rip+0x1b85]        # 0x405058
  4034d3:	mov    r9,r15
  4034d6:	mov    r8d,ebx
  4034d9:	mov    edx,esi
  4034db:	mov    ecx,edi
  4034dd:	sub    edi,esi
  4034df:	call   0x402d10
  4034e4:	add    DWORD PTR [rip+0x1b82],edi        # 0x40506c
  4034ea:	mov    DWORD PTR [rip+0x1b60],0xffffffff        # 0x405054
  4034f4:	mov    DWORD PTR [rip+0x1b5a],0xffffffff        # 0x405058
  4034fe:	mov    eax,0xffffffff
  403503:	add    rsp,0x38
  403507:	pop    rbx
  403508:	pop    rsi
  403509:	pop    rdi
  40350a:	pop    rbp
  40350b:	pop    r12
  40350d:	pop    r13
  40350f:	pop    r14
  403511:	pop    r15
  403513:	ret    
  403514:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40351c:	jmp    0x403284
  403521:	mov    ebp,DWORD PTR [rip+0x1b31]        # 0x405058
  403527:	cmp    ebp,0xffffffff
  40352a:	je     0x40353b
  40352c:	cmp    DWORD PTR [rip+0x1b21],0xffffffff        # 0x405054
  403533:	jne    0x40353b
  403535:	mov    DWORD PTR [rip+0x1b19],ebx        # 0x405054
  40353b:	lea    rsi,[r13+0x1]
  40353f:	cmp    al,0x2d
  403541:	mov    QWORD PTR [rip+0x1b18],rsi        # 0x405060
  403548:	je     0x4036ff
  40354e:	cmp    QWORD PTR [rsp+0x98],0x0
  403557:	je     0x40361e
  40355d:	movsxd rdx,DWORD PTR [rip+0x1b08]        # 0x40506c
  403564:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403568:	je     0x40361e
  40356e:	cmp    al,0x2d
  403570:	je     0x4033f2
  403576:	test   BYTE PTR [rsp+0xa8],0x4
  40357e:	je     0x40361e
  403584:	xor    edx,edx
  403586:	cmp    al,0x3a
  403588:	je     0x4035a2
  40358a:	mov    rcx,QWORD PTR [rsp+0x90]
  403592:	movsx  edx,al
  403595:	call   0x403978
  40359a:	xor    edx,edx
  40359c:	test   rax,rax
  40359f:	setne  dl
  4035a2:	mov    DWORD PTR [rsp+0x20],edx
  4035a6:	mov    r9,QWORD PTR [rsp+0xa0]
  4035ae:	mov    rcx,r15
  4035b1:	mov    r8,QWORD PTR [rsp+0x98]
  4035b9:	mov    rdx,QWORD PTR [rsp+0x90]
  4035c1:	call   0x402e40
  4035c6:	cmp    eax,0xffffffff
  4035c9:	je     0x403614
  4035cb:	lea    rcx,[rip+0x3043]        # 0x406615
  4035d2:	mov    QWORD PTR [rip+0x1a87],rcx        # 0x405060
  4035d9:	jmp    0x403503
  4035de:	xchg   ax,ax
  4035e0:	add    ebx,0x1
  4035e3:	mov    QWORD PTR [rip+0x6466],r13        # 0x409a50
  4035ea:	mov    eax,0x1
  4035ef:	mov    DWORD PTR [rip+0x1a77],ebx        # 0x40506c
  4035f5:	jmp    0x403503
  4035fa:	mov    eax,DWORD PTR [rip+0x1a58]        # 0x405058
  403600:	cmp    eax,0xffffffff
  403603:	je     0x4034ea
  403609:	mov    DWORD PTR [rip+0x1a5d],eax        # 0x40506c
  40360f:	jmp    0x4034ea
  403614:	mov    rsi,QWORD PTR [rip+0x1a45]        # 0x405060
  40361b:	movzx  eax,BYTE PTR [rsi]
  40361e:	lea    rbp,[rsi+0x1]
  403622:	movsx  ebx,al
  403625:	cmp    ebx,0x3a
  403628:	mov    QWORD PTR [rip+0x1a31],rbp        # 0x405060
  40362f:	je     0x403694
  403631:	cmp    ebx,0x2d
  403634:	je     0x4037d7
  40363a:	mov    rcx,QWORD PTR [rsp+0x90]
  403642:	mov    edx,ebx
  403644:	call   0x403978
  403649:	test   rax,rax
  40364c:	je     0x403694
  40364e:	cmp    ebx,0x57
  403651:	jne    0x4036f6
  403657:	cmp    QWORD PTR [rsp+0x98],0x0
  403660:	je     0x4036f6
  403666:	movzx  edx,BYTE PTR [rax+0x1]
  40366a:	cmp    dl,0x3b
  40366d:	je     0x403750
  403673:	cmp    dl,0x3a
  403676:	je     0x4037eb
  40367c:	cmp    BYTE PTR [rsi+0x1],0x0
  403680:	mov    eax,ebx
  403682:	jne    0x403503
  403688:	add    DWORD PTR [rip+0x19dd],0x1        # 0x40506c
  40368f:	jmp    0x403503
  403694:	cmp    BYTE PTR [rsi+0x1],0x0
  403698:	jne    0x4036a1
  40369a:	add    DWORD PTR [rip+0x19cb],0x1        # 0x40506c
  4036a1:	mov    ecx,DWORD PTR [rip+0x19c9]        # 0x405070
  4036a7:	test   ecx,ecx
  4036a9:	je     0x4036c6
  4036ab:	mov    rax,QWORD PTR [rsp+0x90]
  4036b3:	cmp    BYTE PTR [rax],0x3a
  4036b6:	je     0x4036c6
  4036b8:	lea    rcx,[rip+0x2f81]        # 0x406640
  4036bf:	mov    edx,ebx
  4036c1:	call   0x402dc0
  4036c6:	mov    DWORD PTR [rip+0x199c],ebx        # 0x405068
  4036cc:	mov    eax,0x3f
  4036d1:	jmp    0x403503
  4036d6:	mov    rcx,QWORD PTR [rsp+0x90]
  4036de:	mov    edx,0x2d
  4036e3:	call   0x403978
  4036e8:	test   rax,rax
  4036eb:	je     0x4034fe
  4036f1:	mov    ebx,0x2d
  4036f6:	movzx  edx,BYTE PTR [rax+0x1]
  4036fa:	jmp    0x403673
  4036ff:	cmp    BYTE PTR [r13+0x2],0x0
  403704:	jne    0x4033d4
  40370a:	mov    esi,DWORD PTR [rip+0x1944]        # 0x405054
  403710:	lea    r8d,[rbx+0x1]
  403714:	lea    rax,[rip+0x2efa]        # 0x406615
  40371b:	mov    DWORD PTR [rip+0x194a],r8d        # 0x40506c
  403722:	mov    QWORD PTR [rip+0x1937],rax        # 0x405060
  403729:	cmp    esi,0xffffffff
  40372c:	je     0x4034ea
  403732:	mov    ecx,ebp
  403734:	mov    r9,r15
  403737:	mov    edx,esi
  403739:	call   0x402d10
  40373e:	sub    ebp,esi
  403740:	add    DWORD PTR [rip+0x1926],ebp        # 0x40506c
  403746:	jmp    0x4034ea
  40374b:	nop    DWORD PTR [rax+rax*1+0x0]
  403750:	cmp    BYTE PTR [rsi+0x1],0x0
  403754:	jne    0x4038a5
  40375a:	mov    eax,DWORD PTR [rip+0x190c]        # 0x40506c
  403760:	add    eax,0x1
  403763:	cmp    edi,eax
  403765:	mov    DWORD PTR [rip+0x1901],eax        # 0x40506c
  40376b:	jg     0x403898
  403771:	mov    edx,DWORD PTR [rip+0x18f9]        # 0x405070
  403777:	lea    rax,[rip+0x2e97]        # 0x406615
  40377e:	mov    QWORD PTR [rip+0x18db],rax        # 0x405060
  403785:	test   edx,edx
  403787:	je     0x4037a7
  403789:	mov    rax,QWORD PTR [rsp+0x90]
  403791:	cmp    BYTE PTR [rax],0x3a
  403794:	je     0x4037a7
  403796:	lea    rcx,[rip+0x2f63]        # 0x406700
  40379d:	mov    edx,0x57
  4037a2:	call   0x402dc0
  4037a7:	mov    rax,QWORD PTR [rsp+0x90]
  4037af:	mov    DWORD PTR [rip+0x18af],0x57        # 0x405068
  4037b9:	cmp    BYTE PTR [rax],0x3a
  4037bc:	je     0x40388e
  4037c2:	mov    eax,0x3f
  4037c7:	jmp    0x403503
  4037cc:	lea    rbp,[rsi+0x1]
  4037d0:	mov    QWORD PTR [rip+0x1889],rbp        # 0x405060
  4037d7:	cmp    BYTE PTR [rsi+0x1],0x0
  4037db:	je     0x4036d6
  4037e1:	mov    ebx,0x2d
  4037e6:	jmp    0x4036a1
  4037eb:	mov    QWORD PTR [rip+0x625a],0x0        # 0x409a50
  4037f6:	cmp    BYTE PTR [rsi+0x1],0x0
  4037fa:	je     0x403827
  4037fc:	mov    eax,DWORD PTR [rip+0x186a]        # 0x40506c
  403802:	mov    QWORD PTR [rip+0x6247],rbp        # 0x409a50
  403809:	lea    rcx,[rip+0x2e05]        # 0x406615
  403810:	add    eax,0x1
  403813:	mov    DWORD PTR [rip+0x1853],eax        # 0x40506c
  403819:	mov    eax,ebx
  40381b:	mov    QWORD PTR [rip+0x183e],rcx        # 0x405060
  403822:	jmp    0x403503
  403827:	cmp    BYTE PTR [rax+0x2],0x3a
  40382b:	mov    eax,DWORD PTR [rip+0x183b]        # 0x40506c
  403831:	je     0x403809
  403833:	add    eax,0x1
  403836:	cmp    edi,eax
  403838:	mov    DWORD PTR [rip+0x182e],eax        # 0x40506c
  40383e:	jg     0x4038d2
  403844:	lea    rax,[rip+0x2dca]        # 0x406615
  40384b:	mov    QWORD PTR [rip+0x180e],rax        # 0x405060
  403852:	mov    eax,DWORD PTR [rip+0x1818]        # 0x405070
  403858:	test   eax,eax
  40385a:	je     0x403877
  40385c:	mov    rax,QWORD PTR [rsp+0x90]
  403864:	cmp    BYTE PTR [rax],0x3a
  403867:	je     0x403877
  403869:	lea    rcx,[rip+0x2e90]        # 0x406700
  403870:	mov    edx,ebx
  403872:	call   0x402dc0
  403877:	mov    rax,QWORD PTR [rsp+0x90]
  40387f:	mov    DWORD PTR [rip+0x17e3],ebx        # 0x405068
  403885:	cmp    BYTE PTR [rax],0x3a
  403888:	jne    0x4037c2
  40388e:	mov    eax,0x3a
  403893:	jmp    0x403503
  403898:	cdqe   
  40389a:	mov    rax,QWORD PTR [r15+rax*8]
  40389e:	mov    QWORD PTR [rip+0x17bb],rax        # 0x405060
  4038a5:	mov    r9,QWORD PTR [rsp+0xa0]
  4038ad:	mov    r8,QWORD PTR [rsp+0x98]
  4038b5:	mov    rcx,r15
  4038b8:	mov    rdx,QWORD PTR [rsp+0x90]
  4038c0:	mov    DWORD PTR [rsp+0x20],0x0
  4038c8:	call   0x402e40
  4038cd:	jmp    0x4035cb
  4038d2:	movsxd rdx,eax
  4038d5:	mov    rdx,QWORD PTR [r15+rdx*8]
  4038d9:	mov    QWORD PTR [rip+0x6170],rdx        # 0x409a50
  4038e0:	jmp    0x403809
  4038e5:	nop
  4038e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038f0:	sub    rsp,0x38
  4038f4:	xor    r9d,r9d
  4038f7:	mov    DWORD PTR [rsp+0x28],0x0
  4038ff:	mov    QWORD PTR [rsp+0x20],0x0
  403908:	call   0x403200
  40390d:	add    rsp,0x38
  403911:	ret    
  403912:	nop    DWORD PTR [rax+0x0]
  403916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403920:	sub    rsp,0x38
  403924:	mov    rax,QWORD PTR [rsp+0x60]
  403929:	mov    DWORD PTR [rsp+0x28],0x1
  403931:	mov    QWORD PTR [rsp+0x20],rax
  403936:	call   0x403200
  40393b:	add    rsp,0x38
  40393f:	ret    
  403940:	sub    rsp,0x38
  403944:	mov    rax,QWORD PTR [rsp+0x60]
  403949:	mov    DWORD PTR [rsp+0x28],0x5
  403951:	mov    QWORD PTR [rsp+0x20],rax
  403956:	call   0x403200
  40395b:	add    rsp,0x38
  40395f:	ret    
  403960:	jmp    QWORD PTR [rip+0x6c3a]        # 0x40a5a0
  403966:	nop
  403967:	nop
  403968:	jmp    QWORD PTR [rip+0x6c2a]        # 0x40a598
  40396e:	nop
  40396f:	nop
  403970:	jmp    QWORD PTR [rip+0x6c1a]        # 0x40a590
  403976:	nop
  403977:	nop
  403978:	jmp    QWORD PTR [rip+0x6c0a]        # 0x40a588
  40397e:	nop
  40397f:	nop
  403980:	jmp    QWORD PTR [rip+0x6bfa]        # 0x40a580
  403986:	nop
  403987:	nop
  403988:	jmp    QWORD PTR [rip+0x6bea]        # 0x40a578
  40398e:	nop
  40398f:	nop
  403990:	jmp    QWORD PTR [rip+0x6bda]        # 0x40a570
  403996:	nop
  403997:	nop
  403998:	jmp    QWORD PTR [rip+0x6bca]        # 0x40a568
  40399e:	nop
  40399f:	nop
  4039a0:	jmp    QWORD PTR [rip+0x6bba]        # 0x40a560
  4039a6:	nop
  4039a7:	nop
  4039a8:	jmp    QWORD PTR [rip+0x6baa]        # 0x40a558
  4039ae:	nop
  4039af:	nop
  4039b0:	jmp    QWORD PTR [rip+0x6b9a]        # 0x40a550
  4039b6:	nop
  4039b7:	nop
  4039b8:	jmp    QWORD PTR [rip+0x6b8a]        # 0x40a548
  4039be:	nop
  4039bf:	nop
  4039c0:	jmp    QWORD PTR [rip+0x6b7a]        # 0x40a540
  4039c6:	nop
  4039c7:	nop
  4039c8:	jmp    QWORD PTR [rip+0x6b6a]        # 0x40a538
  4039ce:	nop
  4039cf:	nop
  4039d0:	jmp    QWORD PTR [rip+0x6b5a]        # 0x40a530
  4039d6:	nop
  4039d7:	nop
  4039d8:	jmp    QWORD PTR [rip+0x6b4a]        # 0x40a528
  4039de:	nop
  4039df:	nop
  4039e0:	jmp    QWORD PTR [rip+0x6b3a]        # 0x40a520
  4039e6:	nop
  4039e7:	nop
  4039e8:	jmp    QWORD PTR [rip+0x6b2a]        # 0x40a518
  4039ee:	nop
  4039ef:	nop
  4039f0:	jmp    QWORD PTR [rip+0x6b1a]        # 0x40a510
  4039f6:	nop
  4039f7:	nop
  4039f8:	jmp    QWORD PTR [rip+0x6b0a]        # 0x40a508
  4039fe:	nop
  4039ff:	nop
  403a00:	jmp    QWORD PTR [rip+0x6afa]        # 0x40a500
  403a06:	nop
  403a07:	nop
  403a08:	jmp    QWORD PTR [rip+0x6aea]        # 0x40a4f8
  403a0e:	nop
  403a0f:	nop
  403a10:	jmp    QWORD PTR [rip+0x6ada]        # 0x40a4f0
  403a16:	nop
  403a17:	nop
  403a18:	jmp    QWORD PTR [rip+0x6aca]        # 0x40a4e8
  403a1e:	nop
  403a1f:	nop
  403a20:	jmp    QWORD PTR [rip+0x6ab2]        # 0x40a4d8
  403a26:	nop
  403a27:	nop
  403a28:	jmp    QWORD PTR [rip+0x6aa2]        # 0x40a4d0
  403a2e:	nop
  403a2f:	nop
  403a30:	jmp    QWORD PTR [rip+0x6a8a]        # 0x40a4c0
  403a36:	nop
  403a37:	nop
  403a38:	jmp    QWORD PTR [rip+0x6a7a]        # 0x40a4b8
  403a3e:	nop
  403a3f:	nop
  403a40:	jmp    QWORD PTR [rip+0x6a6a]        # 0x40a4b0
  403a46:	nop
  403a47:	nop
  403a48:	jmp    QWORD PTR [rip+0x6a5a]        # 0x40a4a8
  403a4e:	nop
  403a4f:	nop
  403a50:	jmp    QWORD PTR [rip+0x6a42]        # 0x40a498
  403a56:	nop
  403a57:	nop
  403a58:	jmp    QWORD PTR [rip+0x6a32]        # 0x40a490
  403a5e:	nop
  403a5f:	nop
  403a60:	jmp    QWORD PTR [rip+0x6a1a]        # 0x40a480
  403a66:	nop
  403a67:	nop
  403a68:	nop    DWORD PTR [rax+rax*1+0x0]
  403a70:	mov    rax,QWORD PTR [rip+0x5f79]        # 0x4099f0
  403a77:	ret    
  403a78:	nop    DWORD PTR [rax+rax*1+0x0]
  403a80:	mov    rax,rcx
  403a83:	xchg   QWORD PTR [rip+0x5f66],rax        # 0x4099f0
  403a8a:	ret    
  403a8b:	nop
  403a8c:	nop
  403a8d:	nop
  403a8e:	nop
  403a8f:	nop
  403a90:	jmp    QWORD PTR [rip+0x69da]        # 0x40a470
  403a96:	nop
  403a97:	nop
  403a98:	jmp    QWORD PTR [rip+0x69ca]        # 0x40a468
  403a9e:	nop
  403a9f:	nop
  403aa0:	jmp    QWORD PTR [rip+0x69ba]        # 0x40a460
  403aa6:	nop
  403aa7:	nop
  403aa8:	jmp    QWORD PTR [rip+0x69aa]        # 0x40a458
  403aae:	nop
  403aaf:	nop
  403ab0:	jmp    QWORD PTR [rip+0x699a]        # 0x40a450
  403ab6:	nop
  403ab7:	nop
  403ab8:	jmp    QWORD PTR [rip+0x698a]        # 0x40a448
  403abe:	nop
  403abf:	nop
  403ac0:	jmp    QWORD PTR [rip+0x697a]        # 0x40a440
  403ac6:	nop
  403ac7:	nop
  403ac8:	jmp    QWORD PTR [rip+0x696a]        # 0x40a438
  403ace:	nop
  403acf:	nop
  403ad0:	jmp    QWORD PTR [rip+0x695a]        # 0x40a430
  403ad6:	nop
  403ad7:	nop
  403ad8:	jmp    QWORD PTR [rip+0x694a]        # 0x40a428
  403ade:	nop
  403adf:	nop
  403ae0:	jmp    QWORD PTR [rip+0x693a]        # 0x40a420
  403ae6:	nop
  403ae7:	nop
  403ae8:	jmp    QWORD PTR [rip+0x692a]        # 0x40a418
  403aee:	nop
  403aef:	nop
  403af0:	jmp    QWORD PTR [rip+0x691a]        # 0x40a410
  403af6:	nop
  403af7:	nop
  403af8:	jmp    QWORD PTR [rip+0x690a]        # 0x40a408
  403afe:	nop
  403aff:	nop
  403b00:	jmp    QWORD PTR [rip+0x68fa]        # 0x40a400
  403b06:	nop
  403b07:	nop
  403b08:	jmp    QWORD PTR [rip+0x68ea]        # 0x40a3f8
  403b0e:	nop
  403b0f:	nop
  403b10:	jmp    QWORD PTR [rip+0x68da]        # 0x40a3f0
  403b16:	nop
  403b17:	nop
  403b18:	jmp    QWORD PTR [rip+0x68ca]        # 0x40a3e8
  403b1e:	nop
  403b1f:	nop
  403b20:	jmp    QWORD PTR [rip+0x68ba]        # 0x40a3e0
  403b26:	nop
  403b27:	nop
  403b28:	jmp    QWORD PTR [rip+0x68aa]        # 0x40a3d8
  403b2e:	nop
  403b2f:	nop
  403b30:	jmp    QWORD PTR [rip+0x689a]        # 0x40a3d0
  403b36:	nop
  403b37:	nop
  403b38:	jmp    QWORD PTR [rip+0x688a]        # 0x40a3c8
  403b3e:	nop
  403b3f:	nop
  403b40:	jmp    QWORD PTR [rip+0x687a]        # 0x40a3c0
  403b46:	nop
  403b47:	nop
  403b48:	nop    DWORD PTR [rax+rax*1+0x0]
  403b50:	push   r15
  403b52:	push   r14
  403b54:	push   r13
  403b56:	push   r12
  403b58:	push   rbp
  403b59:	push   rdi
  403b5a:	push   rsi
  403b5b:	push   rbx
  403b5c:	sub    rsp,0xd8
  403b63:	xor    edi,edi
  403b65:	xor    r15d,r15d
  403b68:	mov    esi,ecx
  403b6a:	mov    rbx,rdx
  403b6d:	call   0x401920
  403b72:	lea    r9,[rip+0x2747]        # 0x4062c0
  403b79:	lea    r8,[rip+0x2678]        # 0x4061f8
  403b80:	mov    QWORD PTR [rsp+0x20],0x0
  403b89:	mov    rdx,rbx
  403b8c:	mov    ecx,esi
  403b8e:	call   0x403920
  403b93:	cmp    eax,0xffffffff
  403b96:	je     0x403c01
  403b98:	cmp    eax,0x68
  403b9b:	je     0x403bf7
  403b9d:	jle    0x403bb4
  403b9f:	cmp    eax,0x72
  403ba2:	je     0x403baf
  403ba4:	cmp    eax,0x76
  403ba7:	jne    0x403bea
  403ba9:	add    r15d,0x1
  403bad:	jmp    0x403b72
  403baf:	add    edi,0x1
  403bb2:	jmp    0x403b72
  403bb4:	cmp    eax,0x56
  403bb7:	jne    0x403bea
  403bb9:	call   QWORD PTR [rip+0x68e9]        # 0x40a4a8
  403bbf:	lea    rdx,[rip+0x2615]        # 0x4061db
  403bc6:	lea    rcx,[rax+0x60]
  403bca:	mov    DWORD PTR [rsp+0x20],0x1
  403bd2:	mov    r9d,0xc
  403bd8:	mov    r8d,0x2
  403bde:	call   0x4039e0
  403be3:	xor    ecx,ecx
  403be5:	call   0x4039e8
  403bea:	mov    rcx,QWORD PTR [rbx]
  403bed:	mov    edx,0x1
  403bf2:	call   0x401530
  403bf7:	mov    rcx,QWORD PTR [rbx]
  403bfa:	xor    edx,edx
  403bfc:	call   0x401530
  403c01:	mov    rax,QWORD PTR [rip+0x2d28]        # 0x406930
  403c08:	mov    r12d,DWORD PTR [rax]
  403c0b:	call   0x401738
  403c10:	test   rax,rax
  403c13:	mov    QWORD PTR [rsp+0x60],rax
  403c18:	je     0x404048
  403c1e:	mov    r14,QWORD PTR [rsp+0x60]
  403c23:	mov    rcx,r14
  403c26:	call   0x401770
  403c2b:	mov    rcx,r14
  403c2e:	call   0x401780
  403c33:	call   0x4016f8
  403c38:	test   rax,rax
  403c3b:	mov    QWORD PTR [rsp+0x50],rax
  403c40:	je     0x403f30
  403c46:	cmp    esi,r12d
  403c49:	jle    0x404004
  403c4f:	movsxd rax,r12d
  403c52:	mov    r14,QWORD PTR [rsp+0x50]
  403c57:	xor    ebp,ebp
  403c59:	lea    r13,[rbx+rax*8]
  403c5d:	mov    rdx,QWORD PTR [r13+rbp*8+0x0]
  403c62:	mov    rcx,r14
  403c65:	call   0x401700
  403c6a:	test   eax,eax
  403c6c:	je     0x403f30
  403c72:	add    rbp,0x1
  403c76:	lea    eax,[r12+rbp*1]
  403c7a:	cmp    esi,eax
  403c7c:	jg     0x403c5d
  403c7e:	mov    rcx,QWORD PTR [rsp+0x50]
  403c83:	call   0x401720
  403c88:	test   rax,rax
  403c8b:	mov    QWORD PTR [rsp+0x58],rax
  403c90:	je     0x403f30
  403c96:	mov    rcx,QWORD PTR [rsp+0x50]
  403c9b:	call   0x4016f0
  403ca0:	lea    rax,[rsp+0x90]
  403ca8:	mov    rbx,QWORD PTR [rip+0x67f9]        # 0x40a4a8
  403caf:	mov    DWORD PTR [rsp+0x6c],0x1
  403cb7:	mov    DWORD PTR [rsp+0x68],r15d
  403cbc:	mov    QWORD PTR [rsp+0x70],rax
  403cc1:	lea    rax,[rsp+0x88]
  403cc9:	mov    QWORD PTR [rsp+0x78],rax
  403cce:	mov    rcx,QWORD PTR [rsp+0x58]
  403cd3:	call   0x401710
  403cd8:	test   rax,rax
  403cdb:	mov    r13,rax
  403cde:	je     0x403fee
  403ce4:	mov    rcx,r13
  403ce7:	mov    QWORD PTR [rsp+0x88],0x0
  403cf3:	call   0x401750
  403cf8:	test   eax,eax
  403cfa:	je     0x403f0e
  403d00:	mov    r8,QWORD PTR [rsp+0x78]
  403d05:	mov    rdx,QWORD PTR [rsp+0x60]
  403d0a:	mov    rcx,r13
  403d0d:	call   0x401768
  403d12:	mov    rsi,rax
  403d15:	test   rsi,rsi
  403d18:	je     0x403f23
  403d1e:	call   0x4016f8
  403d23:	mov    rcx,rsi
  403d26:	mov    r12,rax
  403d29:	xor    ebp,ebp
  403d2b:	call   0x4017a0
  403d30:	mov    r14,QWORD PTR [rsp+0x50]
  403d35:	mov    QWORD PTR [rsp+0x30],rax
  403d3a:	jmp    0x403d43
  403d3c:	nop    DWORD PTR [rax+0x0]
  403d40:	add    ebp,0x1
  403d43:	mov    rcx,rsi
  403d46:	call   0x401790
  403d4b:	cmp    ebp,eax
  403d4d:	jge    0x403d7f
  403d4f:	mov    edx,ebp
  403d51:	mov    rcx,rsi
  403d54:	call   0x401788
  403d59:	mov    rcx,r12
  403d5c:	mov    rdx,rax
  403d5f:	call   0x401708
  403d64:	test   edi,edi
  403d66:	je     0x403d40
  403d68:	mov    edx,ebp
  403d6a:	mov    rcx,rsi
  403d6d:	call   0x401788
  403d72:	mov    rcx,r14
  403d75:	mov    rdx,rax
  403d78:	call   0x401708
  403d7d:	jmp    0x403d40
  403d7f:	cmp    DWORD PTR [rsp+0x68],0x0
  403d84:	je     0x403dc2
  403d86:	cmp    DWORD PTR [rsp+0x6c],0x0
  403d8b:	je     0x403f65
  403d91:	mov    rbp,QWORD PTR [rsp+0x88]
  403d99:	mov    rcx,rsi
  403d9c:	test   rbp,rbp
  403d9f:	cmove  rbp,r13
  403da3:	call   0x401798
  403da8:	lea    rcx,[rip+0x2489]        # 0x406238
  403daf:	mov    r8,rbp
  403db2:	mov    rdx,rax
  403db5:	call   0x4039a0
  403dba:	mov    DWORD PTR [rsp+0x6c],0x0
  403dc2:	mov    rcx,rsi
  403dc5:	call   0x401798
  403dca:	mov    rcx,r12
  403dcd:	mov    rbp,rax
  403dd0:	call   0x401720
  403dd5:	test   rax,rax
  403dd8:	mov    QWORD PTR [rsp+0x38],rax
  403ddd:	je     0x403ed9
  403de3:	xor    r14d,r14d
  403de6:	mov    QWORD PTR [rsp+0x40],rsi
  403deb:	mov    DWORD PTR [rsp+0x4c],edi
  403def:	mov    r15,rax
  403df2:	jmp    0x403e44
  403df4:	call   rbx
  403df6:	lea    rdx,[rax+0x30]
  403dfa:	mov    ecx,0x20
  403dff:	call   0x403998
  403e04:	add    eax,0x1
  403e07:	je     0x403ec6
  403e0d:	call   rbx
  403e0f:	lea    rdx,[rip+0x2444]        # 0x40625a
  403e16:	lea    rcx,[rax+0x30]
  403e1a:	call   0x401660
  403e1f:	test   eax,eax
  403e21:	je     0x403ec6
  403e27:	call   rbx
  403e29:	lea    rdx,[rax+0x30]
  403e2d:	mov    ecx,0xa
  403e32:	call   0x403998
  403e37:	cmp    eax,0xffffffff
  403e3a:	je     0x403ec6
  403e40:	add    r14d,0x1
  403e44:	mov    rcx,r15
  403e47:	call   0x401710
  403e4c:	test   rax,rax
  403e4f:	mov    rsi,rax
  403e52:	je     0x403f74
  403e58:	mov    rcx,rbp
  403e5b:	mov    rdi,rsi
  403e5e:	call   0x403970
  403e63:	movsxd r13,eax
  403e66:	mov    rdx,rsi
  403e69:	mov    rcx,rbp
  403e6c:	mov    r8,r13
  403e6f:	call   0x403968
  403e74:	test   eax,eax
  403e76:	jne    0x403e86
  403e78:	cmp    BYTE PTR [rsi+r13*1],0x2f
  403e7d:	lea    rax,[rsi+r13*1+0x1]
  403e82:	cmove  rdi,rax
  403e86:	call   rbx
  403e88:	lea    rcx,[rax+0x30]
  403e8c:	mov    rdx,rdi
  403e8f:	call   0x401660
  403e94:	test   eax,eax
  403e96:	je     0x403ec6
  403e98:	call   rbx
  403e9a:	lea    rdx,[rax+0x30]
  403e9e:	mov    ecx,0x20
  403ea3:	call   0x403998
  403ea8:	cmp    eax,0xffffffff
  403eab:	je     0x403ec6
  403ead:	call   rbx
  403eaf:	lea    rdx,[rax+0x30]
  403eb3:	mov    ecx,0x30
  403eb8:	call   0x403998
  403ebd:	cmp    eax,0xffffffff
  403ec0:	jne    0x403df4
  403ec6:	mov    rsi,QWORD PTR [rsp+0x40]
  403ecb:	mov    edi,DWORD PTR [rsp+0x4c]
  403ecf:	mov    rcx,QWORD PTR [rsp+0x38]
  403ed4:	call   0x401718
  403ed9:	mov    rcx,r12
  403edc:	call   0x4016f0
  403ee1:	mov    rcx,QWORD PTR [rsp+0x30]
  403ee6:	call   0x401740
  403eeb:	mov    rcx,rsi
  403eee:	call   0x401758
  403ef3:	mov    rcx,QWORD PTR [rsp+0x88]
  403efb:	test   rcx,rcx
  403efe:	je     0x403cce
  403f04:	call   0x401728
  403f09:	jmp    0x403cce
  403f0e:	mov    rdx,QWORD PTR [rsp+0x70]
  403f13:	mov    rcx,r13
  403f16:	call   0x401760
  403f1b:	mov    rsi,rax
  403f1e:	jmp    0x403d15
  403f23:	mov    rcx,r13
  403f26:	call   0x4039a8
  403f2b:	jmp    0x403cce
  403f30:	mov    rbx,QWORD PTR [rbx]
  403f33:	call   QWORD PTR [rip+0x656f]        # 0x40a4a8
  403f39:	lea    rdx,[rip+0x22e4]        # 0x406224
  403f40:	lea    rcx,[rax+0x60]
  403f44:	mov    r8,rbx
  403f47:	call   0x4039e0
  403f4c:	mov    eax,0x1
  403f51:	add    rsp,0xd8
  403f58:	pop    rbx
  403f59:	pop    rsi
  403f5a:	pop    rdi
  403f5b:	pop    rbp
  403f5c:	pop    r12
  403f5e:	pop    r13
  403f60:	pop    r14
  403f62:	pop    r15
  403f64:	ret    
  403f65:	mov    ecx,0xa
  403f6a:	call   0x403990
  403f6f:	jmp    0x403d91
  403f74:	mov    r15d,r14d
  403f77:	mov    rsi,QWORD PTR [rsp+0x40]
  403f7c:	mov    edi,DWORD PTR [rsp+0x4c]
  403f80:	xor    ebp,ebp
  403f82:	mov    r14,QWORD PTR [rsp+0x30]
  403f87:	jmp    0x403fc0
  403f89:	mov    rax,QWORD PTR [r14+0x8]
  403f8d:	lea    rdx,[rip+0x22cb]        # 0x40625f
  403f94:	mov    rcx,QWORD PTR [rax+rbp*8]
  403f98:	call   0x401730
  403f9d:	test   rax,rax
  403fa0:	mov    r13,rax
  403fa3:	je     0x403fbc
  403fa5:	lea    rcx,[rip+0x22be]        # 0x40626a
  403fac:	mov    rdx,rax
  403faf:	call   0x4039a0
  403fb4:	mov    rcx,r13
  403fb7:	call   0x401728
  403fbc:	add    rbp,0x1
  403fc0:	mov    eax,DWORD PTR [r14]
  403fc3:	cmp    eax,ebp
  403fc5:	jg     0x403f89
  403fc7:	cmp    DWORD PTR [rsp+0x68],0x0
  403fcc:	je     0x403ecf
  403fd2:	mov    edx,r15d
  403fd5:	or     edx,eax
  403fd7:	jne    0x403ecf
  403fdd:	lea    rcx,[rip+0x2289]        # 0x40626d
  403fe4:	call   0x403988
  403fe9:	jmp    0x403ecf
  403fee:	mov    rcx,QWORD PTR [rsp+0x58]
  403ff3:	call   0x401718
  403ff8:	call   0x401748
  403ffd:	xor    eax,eax
  403fff:	jmp    0x403f51
  404004:	mov    rcx,QWORD PTR [rsp+0x60]
  404009:	call   0x401778
  40400e:	mov    rbp,QWORD PTR [rsp+0x50]
  404013:	mov    rsi,rax
  404016:	jmp    0x40402b
  404018:	mov    rdx,rax
  40401b:	mov    rcx,rbp
  40401e:	call   0x401708
  404023:	test   eax,eax
  404025:	je     0x403f30
  40402b:	mov    rcx,rsi
  40402e:	call   0x401710
  404033:	test   rax,rax
  404036:	jne    0x404018
  404038:	mov    rcx,rsi
  40403b:	add    edi,0x1
  40403e:	call   0x401718
  404043:	jmp    0x403c7e
  404048:	mov    rbx,QWORD PTR [rbx]
  40404b:	call   QWORD PTR [rip+0x6457]        # 0x40a4a8
  404051:	lea    rdx,[rip+0x21a8]        # 0x406200
  404058:	lea    rcx,[rax+0x60]
  40405c:	mov    r8,rbx
  40405f:	call   0x4039e0
  404064:	mov    eax,0x1
  404069:	jmp    0x403f51
  40406e:	nop
  40406f:	nop
  404070:	(bad)  
  404071:	(bad)  
  404072:	(bad)  
  404073:	(bad)  
  404074:	(bad)  
  404075:	(bad)  
  404076:	(bad)  
  404077:	inc    DWORD PTR [rax]
  404079:	add    BYTE PTR [rax],al
  40407b:	add    BYTE PTR [rax],al
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    bh,bh
  404081:	(bad)  
  404082:	(bad)  
  404083:	(bad)  
  404084:	(bad)  
  404085:	(bad)  
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	mov    BYTE PTR [rax+0x40],al
	...
  40501f:	add    bh,bh
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	(bad)  
  405026:	(bad)  
  405027:	inc    DWORD PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rdx],al
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    bh,bh
  405051:	(bad)  
  405052:	(bad)  
  405053:	(bad)  
  405054:	(bad)  
  405055:	(bad)  
  405056:	(bad)  
  405057:	(bad)  
  405058:	(bad)  
  405059:	(bad)  
  40505a:	(bad)  
  40505b:	inc    DWORD PTR [rax]
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rip+0x4066],dl        # 0x4090cb
  405065:	add    BYTE PTR [rax],al
  405067:	add    BYTE PTR [rdi],bh
  405069:	add    BYTE PTR [rax],al
  40506b:	add    BYTE PTR [rcx],al
  40506d:	add    BYTE PTR [rax],al
  40506f:	add    BYTE PTR [rcx],al
	...
  40507d:	add    BYTE PTR [rax],al
  40507f:	add    bh,bh
  405081:	(bad)  
  405082:	(bad)  
  405083:	inc    DWORD PTR [rax]
	...
  40508d:	add    BYTE PTR [rax],al
  40508f:	add    BYTE PTR [rax+0x3a],dh
  405092:	add    BYTE PTR [rax],al
  405095:	add    BYTE PTR [rax],al
  405097:	add    BYTE PTR [rax+0x403a],al
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rdx],dh
  4050a1:	movabs ds:0x2b992ddf,al
  4050aa:	add    BYTE PTR [rax],al
  4050ac:	add    BYTE PTR [rax],al
  4050ae:	add    BYTE PTR [rax],al
  4050b0:	int    0x5d
  4050b2:	and    dl,dl
  4050b4:	data16 (bad) 
  4050b6:	(bad)  
  4050b7:	inc    DWORD PTR [rax]
  4050b9:	add    BYTE PTR [rax],al
  4050bb:	add    BYTE PTR [rax],al
  4050bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	js     0x40603a
  406002:	ss pop rdi
  406004:	ss xor al,0x2d
  406007:	ja     0x40603f
  406009:	xor    al,0x2d
  40600b:	ins    DWORD PTR es:[rdi],dx
  40600c:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  406013:	add    BYTE PTR [rax],al
  406015:	add    BYTE PTR [rax],al
  406017:	add    BYTE PTR [rbp+0x73],dh
  40601a:	(bad)  
  40601b:	cmp    ah,BYTE PTR gs:[eax]
  40601f:	and    eax,0x2d5b2073
  406024:	jb     0x40609c
  406026:	pop    rbp
  406027:	and    BYTE PTR [rbx+0x2d],bl
  40602a:	sub    eax,0x75636572
  40602f:	jb     0x4060a4
  406031:	gs pop rbp
  406033:	and    BYTE PTR [rbx+0x2d],bl
  406036:	sub    eax,0x62726576
  40603b:	outs   dx,DWORD PTR ds:[rsi]
  40603c:	jae    0x4060a3
  40603e:	pop    rbp
  40603f:	and    BYTE PTR [rbx+0x2a],bl
  406042:	sub    eax,0x632e7325
  406047:	(bad)  
  406048:	movsxd ebp,DWORD PTR [rax+0x65]
  40604b:	sub    eax,0x69647c37
  406050:	jb     0x4060b7
  406052:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  406056:	jns    0x4060b5
  406058:	cs cs or al,BYTE PTR cs:[rax]
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    BYTE PTR [rax],ah
  406061:	and    BYTE PTR [rax],ah
  406063:	and    BYTE PTR [rax],ah
  406065:	and    BYTE PTR [rax],ah
  406067:	and    eax,0x2d5b2073
  40606c:	push   rsi
  40606d:	push   0x2d5b205d
  406072:	sub    eax,0x73726576
  406077:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d5b205d
  40607e:	sub    eax,0x706c6568
  406083:	pop    rbp
  406084:	or     al,BYTE PTR [rax]
  406086:	add    BYTE PTR [rax],al
  406088:	push   rdx
  406089:	gs (bad) 
  40608b:	fs jae 0x4060ae
  40608e:	outs   dx,WORD PTR ds:[rsi]
  406090:	outs   dx,BYTE PTR ds:[rsi]
  406091:	je     0x4060b3
  406093:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  40609a:	je     0x406105
  40609c:	outs   dx,DWORD PTR ds:[rsi]
  40609d:	outs   dx,BYTE PTR ds:[rsi]
  40609e:	and    BYTE PTR [rbx+0x61],ah
  4060a1:	movsxd ebp,DWORD PTR [rax+0x65]
  4060a4:	and    BYTE PTR [rsi+0x72],ah
  4060a7:	outs   dx,DWORD PTR ds:[rsi]
  4060a8:	ins    DWORD PTR es:[rdi],dx
  4060a9:	cmp    cl,BYTE PTR [rdx]
  4060ab:	add    BYTE PTR [rax],al
  4060ad:	add    BYTE PTR [rax],al
  4060af:	add    BYTE PTR [rax],ah
  4060b1:	xor    DWORD PTR [rcx],ebp
  4060b3:	and    BYTE PTR [rbx+0x70],dh
  4060b6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4060ba:	imul   esp,DWORD PTR [rbp+0x64],0x6e6f6620
  4060c1:	je     0x406126
  4060c3:	outs   dx,DWORD PTR ds:[rsi]
  4060c4:	outs   dx,BYTE PTR ds:[rsi]
  4060c5:	imul   sp,WORD PTR [rdi+0x20],0x6163
  4060cb:	movsxd ebp,DWORD PTR [rax+0x65]
  4060ce:	and    BYTE PTR [rsi+0x69],ah
  4060d1:	ins    BYTE PTR es:[rdi],dx
  4060d2:	or     al,BYTE PTR gs:[rax]
  4060d5:	add    BYTE PTR [rax],al
  4060d7:	add    BYTE PTR [rax],ah
  4060d9:	xor    ch,BYTE PTR [rcx]
  4060db:	and    BYTE PTR [rdx+0x65],dh
  4060de:	ins    BYTE PTR es:[rdi],dx
  4060df:	(bad)  
  4060e0:	je     0x406147
  4060e2:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4060e7:	(bad)  
  4060e8:	and    BYTE PTR [rax+0x61],dh
  4060eb:	jb     0x406161
  4060ed:	imul   esp,DWORD PTR [rbx+0x75],0x2072616c
  4060f4:	outs   dx,WORD PTR ds:[rsi]
  4060f6:	outs   dx,BYTE PTR ds:[rsi]
  4060f7:	je     0x406119
  4060f9:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  406101:	jns    0x40610d
  406103:	add    BYTE PTR [rax],al
  406105:	add    BYTE PTR [rax],al
  406107:	add    BYTE PTR [rax],ah
  406109:	and    BYTE PTR [rip+0x2d202c72],ch        # 0x2d608d81
  40610f:	sub    eax,0x75636572
  406114:	jb     0x406189
  406116:	and    BYTE PTR gs:[rax],ah
  406119:	and    BYTE PTR [rax],ah
  40611b:	and    BYTE PTR [rax],ah
  40611d:	and    BYTE PTR [rax],ah
  40611f:	jb     0x406186
  406121:	movsxd esi,DWORD PTR [rbp+0x72]
  406124:	jae    0x40618b
  406126:	and    BYTE PTR [rcx+0x6e],ch
  406129:	je     0x40619a
  40612b:	and    BYTE PTR [rbx+0x75],dh
  40612e:	(bad)  
  40612f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  406137:	imul   esp,DWORD PTR [rbp+0x73],0xa
  40613e:	add    BYTE PTR [rax],al
  406140:	and    BYTE PTR [rax],ah
  406142:	sub    eax,0x2d202c76
  406147:	sub    eax,0x62726576
  40614c:	outs   dx,DWORD PTR ds:[rsi]
  40614d:	jae    0x4061b4
  40614f:	and    BYTE PTR [rax],ah
  406151:	and    BYTE PTR [rax],ah
  406153:	and    BYTE PTR [rax],ah
  406155:	and    BYTE PTR [rax],ah
  406157:	(bad)  
  406158:	and    BYTE PTR gs:[rsi+0x65],dh
  40615c:	jb     0x4061c0
  40615e:	outs   dx,DWORD PTR ds:[rsi]
  40615f:	jae    0x4061c6
  406161:	or     al,BYTE PTR [rax]
  406163:	add    BYTE PTR [rax],al
  406165:	add    BYTE PTR [rax],al
  406167:	add    BYTE PTR [rax],ah
  406169:	and    BYTE PTR [rip+0x2d202c56],ch        # 0x2d608dc5
  40616f:	sub    eax,0x73726576
  406174:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  40617b:	and    BYTE PTR [rax],ah
  40617d:	and    BYTE PTR [rax],ah
  40617f:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  406187:	outs   dx,WORD PTR ds:[rsi]
  406189:	outs   dx,BYTE PTR ds:[rsi]
  40618a:	je     0x4061ac
  40618c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40618f:	imul   sp,WORD PTR [rdi+0x20],0x6576
  406195:	jb     0x40620a
  406197:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  40619e:	and    BYTE PTR [rbp+0x78],ah
  4061a1:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20000000
  4061a9:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d608e17
  4061af:	sub    eax,0x706c6568
  4061b4:	and    BYTE PTR [rax],ah
  4061b6:	and    BYTE PTR [rax],ah
  4061b8:	and    BYTE PTR [rax],ah
  4061ba:	and    BYTE PTR [rax],ah
  4061bc:	and    BYTE PTR [rax],ah
  4061be:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4061c2:	jo     0x406230
  4061c4:	(bad)  
  4061c5:	jns    0x4061e7
  4061c7:	je     0x406231
  4061c9:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4061d0:	and    BYTE PTR [rcx+0x6e],ah
  4061d3:	and    BYTE PTR fs:[rbp+0x78],ah
  4061d7:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x746e6f66
  4061df:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4061e2:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4061e8:	jb     0x40625d
  4061ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4061f1:	and    eax,0x64252e64
  4061f6:	or     al,BYTE PTR [rax]
  4061f8:	push   rsi
  4061f9:	jbe    0x40626d
  4061fb:	push   0x0
  406200:	and    eax,0x43203a73
  406205:	(bad)  
  406206:	outs   dx,BYTE PTR ds:[rsi]
  406207:	(bad)  
  406208:	je     0x40622a
  40620a:	imul   ebp,DWORD PTR [rsi+0x69],0x6f662074
  406211:	outs   dx,BYTE PTR ds:[rsi]
  406212:	je     0x406234
  406214:	movsxd ebp,DWORD PTR [rdi+0x6e]
  406217:	imul   sp,WORD PTR [rdi+0x20],0x696c
  40621d:	(bad)  
  40621f:	(bad)  
  406220:	jb     0x40629b
  406222:	or     al,BYTE PTR [rax]
  406224:	and    eax,0x6d203a73
  406229:	(bad)  
  40622a:	ins    BYTE PTR es:[rdi],dx
  40622b:	ins    BYTE PTR es:[rdi],dx
  40622c:	outs   dx,DWORD PTR ds:[rsi]
  40622d:	movsxd esp,DWORD PTR [rax]
  40622f:	data16 (bad) 
  406231:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x44000a65
  406239:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
  406240:	jns    0x40627c
  406242:	and    BYTE PTR [rip+0x61430a73],ah        # 0x61836cbb
  406248:	movsxd ebp,DWORD PTR [rax+0x65]
  40624b:	cmp    ah,BYTE PTR [rax]
  40624d:	and    eax,0x2d2d0a73
  406252:	sub    eax,0x2d2d2d2d
  406257:	sub    eax,0x642e000a
  40625c:	imul   esi,DWORD PTR [rdx+0x0],0x663d7b25
  406263:	movsxd esp,DWORD PTR [rbx+0x61]
  406266:	je     0x4062e5
  406268:	or     al,BYTE PTR [rax]
  40626a:	and    eax,0x653c0073
  40626f:	ins    DWORD PTR es:[rdi],dx
  406270:	jo     0x4062e6
  406272:	jns    0x4062b2
  406274:	add    BYTE PTR [rsi+0x65],dh
  406277:	jb     0x4062ec
  406279:	imul   ebp,DWORD PTR [rdi+0x6e],0x72657600
  406280:	(bad)  
  406281:	outs   dx,DWORD PTR ds:[rsi]
  406282:	jae    0x4062e9
  406284:	add    BYTE PTR [rdx+0x65],dh
  406287:	movsxd esi,DWORD PTR [rbp+0x72]
  40628a:	jae    0x4062f1
  40628c:	add    BYTE PTR [rax+0x65],ch
  40628f:	ins    BYTE PTR es:[rdi],dx
  406290:	jo     0x406292
	...
  4062be:	add    BYTE PTR [rax],al
  4062c0:	jne    0x406324
  4062c2:	add    BYTE PTR [rax],al
	...
  4062d5:	add    BYTE PTR [rax],al
  4062d7:	add    BYTE PTR [rsi+0x0],dl
  4062da:	add    BYTE PTR [rax],al
  4062dc:	add    BYTE PTR [rax],al
  4062de:	add    BYTE PTR [rax],al
  4062e0:	jge    0x406344
  4062e2:	add    BYTE PTR [rax],al
	...
  4062f5:	add    BYTE PTR [rax],al
  4062f7:	add    BYTE PTR [rsi+0x0],dh
  4062fa:	add    BYTE PTR [rax],al
  4062fc:	add    BYTE PTR [rax],al
  4062fe:	add    BYTE PTR [rax],al
  406300:	test   DWORD PTR [rdx+0x40],esp
	...
  406317:	add    BYTE PTR [rdx+0x0],dh
  40631a:	add    BYTE PTR [rax],al
  40631c:	add    BYTE PTR [rax],al
  40631e:	add    BYTE PTR [rax],al
  406320:	lea    esp,[rdx+0x40]
	...
  406337:	add    BYTE PTR [rax+0x0],ch
	...
  40637e:	add    BYTE PTR [rax],al
  406380:	adc    BYTE PTR [rbp+0x40],0x0
  406387:	add    BYTE PTR [rax+0x4090],al
  40638d:	add    BYTE PTR [rax],al
  40638f:	add    BYTE PTR [rax+0x1b],dh
  406392:	add    BYTE PTR [rax],al
	...
  40639d:	add    BYTE PTR [rax],al
  40639f:	add    BYTE PTR [rcx+0x72],al
  4063a2:	addr32 jne 0x406412
  4063a5:	outs   dx,BYTE PTR gs:[rsi]
  4063a7:	je     0x4063c9
  4063a9:	outs   dx,DWORD PTR fs:[rsi]
  4063ab:	ins    DWORD PTR es:[rdi],dx
  4063ac:	(bad)  
  4063ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4063b4:	jb     0x4063d6
  4063b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4063ba:	rex.B
  4063bb:	rex.WB
  4063bc:	rex.WRX sub QWORD PTR [rax],r8
  4063bf:	rex.B jb 0x406429
  4063c2:	jne    0x406431
  4063c4:	outs   dx,BYTE PTR gs:[rsi]
  4063c6:	je     0x4063e8
  4063c8:	jae    0x406433
  4063ca:	outs   dx,BYTE PTR ds:[rsi]
  4063cb:	addr32 jne 0x40643a
  4063ce:	(bad)  
  4063cf:	jb     0x40643a
  4063d1:	je     0x40644c
  4063d3:	and    BYTE PTR [rax],ch
  4063d5:	push   rbx
  4063d6:	rex.WB
  4063d7:	rex.RXB
  4063d8:	rex.WRX sub QWORD PTR [rax],r8
  4063db:	add    BYTE PTR [rax],al
  4063dd:	add    BYTE PTR [rax],al
  4063df:	add    BYTE PTR [rdi+0x76],cl
  4063e2:	gs jb  0x40644b
  4063e5:	ins    BYTE PTR es:[rdi],dx
  4063e6:	outs   dx,DWORD PTR ds:[rsi]
  4063e7:	ja     0x406409
  4063e9:	jb     0x40644c
  4063eb:	outs   dx,BYTE PTR ds:[rsi]
  4063ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4063f1:	jb     0x406462
  4063f3:	jb     0x406415
  4063f5:	sub    BYTE PTR [rdi+0x56],cl
  4063f8:	rex.RB push r10
  4063fa:	rex.RX
  4063fb:	rex.WR
  4063fc:	rex.WRXB push r15
  4063fe:	sub    DWORD PTR [rax],eax
  406400:	push   rax
  406401:	(bad)  
  406402:	jb     0x406478
  406404:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40640b:	jae    0x40642d
  40640d:	outs   dx,DWORD PTR ds:[rsi]
  40640e:	data16 and BYTE PTR [rbx+0x69],dh
  406412:	outs   dx,BYTE PTR ds:[esi]
  406414:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40641b:	and    BYTE PTR gs:[rax],ch
  40641e:	push   rax
  40641f:	rex.WR
  406420:	rex.WRXB push r11
  406422:	push   rbx
  406423:	sub    DWORD PTR [rax],eax
  406425:	add    BYTE PTR [rax],al
  406427:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40642b:	(bad)  
  40642c:	ins    BYTE PTR es:[rdi],dx
  40642d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406431:	jae    0x406453
  406433:	outs   dx,DWORD PTR ds:[rsi]
  406434:	data16 and BYTE PTR [rbx+0x69],dh
  406438:	outs   dx,BYTE PTR ds:[esi]
  40643a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406441:	and    BYTE PTR gs:[rax],ch
  406444:	push   rsp
  406445:	rex.WR
  406446:	rex.WRXB push r11
  406448:	push   rbx
  406449:	sub    DWORD PTR [rax],eax
  40644b:	add    BYTE PTR [rax],al
  40644d:	add    BYTE PTR [rax],al
  40644f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406453:	and    BYTE PTR [rdx+0x65],dh
  406456:	jae    0x4064cd
  406458:	ins    BYTE PTR es:[rdi],dx
  406459:	je     0x40647b
  40645b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406462:	jae    0x4064d1
  406464:	(bad)  
  406465:	ins    BYTE PTR es:[rdi],dx
  406466:	ins    BYTE PTR es:[rdi],dx
  406467:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40646b:	(bad)  
  40646c:	and    BYTE PTR gs:[rdx+0x65],dh
  406470:	jo     0x4064e4
  406472:	gs jae 0x4064da
  406475:	outs   dx,BYTE PTR ds:[rsi]
  406476:	je     0x4064dd
  406478:	and    BYTE PTR fs:[rax],ch
  40647b:	push   rbp
  40647c:	rex.WRX
  40647d:	rex.R
  40647e:	rex.RB push r10
  406480:	rex.RX
  406481:	rex.WR
  406482:	rex.WRXB push r15
  406484:	sub    DWORD PTR [rax],eax
  406486:	push   rbp
  406487:	outs   dx,BYTE PTR ds:[rsi]
  406488:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40648c:	outs   dx,BYTE PTR ds:[rsi]
  40648d:	and    BYTE PTR [rbp+0x72],ah
  406490:	jb     0x406501
  406492:	jb     0x406494
  406494:	add    BYTE PTR [rax],al
  406496:	add    BYTE PTR [rax],al
  406498:	pop    rdi
  406499:	ins    DWORD PTR es:[rdi],dx
  40649a:	(bad)  
  40649b:	je     0x406505
  40649d:	gs jb  0x406512
  4064a0:	sub    BYTE PTR [rcx],ch
  4064a2:	cmp    ah,BYTE PTR [rax]
  4064a4:	and    eax,0x6e692073
  4064a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67658d22
  4064af:	sub    al,0x20
  4064b1:	and    eax,0x20202967
  4064b6:	sub    BYTE PTR [rdx+0x65],dh
  4064b9:	je     0x406531
  4064bb:	(bad)  
  4064bc:	ins    BYTE PTR es:[rdi],dx
  4064bd:	cmp    eax,0xa296725
  4064c2:	add    BYTE PTR [rax],al
  4064c4:	jl     0x40647e
  4064c6:	(bad)  
  4064c7:	(bad)  
  4064c8:	mov    ebp,0x2cffffb7
  4064cd:	mov    eax,0xb83cffff
  4064d2:	(bad)  
  4064d3:	dec    DWORD PTR [rax+rdi*4-0x1]
  4064d7:	call   FWORD PTR [rax+rdi*4-0x1]
  4064db:	jmp    FWORD PTR [rax+rdi*4-0x1]
  4064df:	dec    DWORD PTR [rbp+0x69]
  4064e2:	outs   dx,BYTE PTR ds:[rsi]
  4064e3:	addr32 ja 0x406513
  4064e6:	ja     0x40651e
  4064e8:	xor    al,0x20
  4064ea:	jb     0x406561
  4064ec:	outs   dx,BYTE PTR ds:[rsi]
  4064ed:	je     0x406558
  4064ef:	ins    DWORD PTR es:[rdi],dx
  4064f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4064f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4064fc:	add    BYTE PTR [rax],al
  4064fe:	add    BYTE PTR [rax],al
  406500:	rex.B
  406501:	fs fs jb 0x40656a
  406505:	jae    0x40657a
  406507:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8857d
  40650d:	jae    0x40652f
  40650f:	outs   dx,BYTE PTR ds:[rsi]
  406510:	outs   dx,DWORD PTR ds:[rsi]
  406511:	and    BYTE PTR [rcx+0x6d],ch
  406514:	(bad)  
  406515:	addr32 gs sub eax,0x74636573
  40651c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406523:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40652a:	jne    0x406591
  40652c:	jb     0x4065a7
  40652e:	and    BYTE PTR [rsi+0x61],ah
  406531:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406539:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a285a3
  40653f:	je     0x4065a6
  406541:	jae    0x406563
  406543:	(bad)  
  406544:	je     0x406566
  406546:	(bad)  
  406547:	fs fs jb 0x4065b0
  40654b:	jae    0x4065c0
  40654d:	and    BYTE PTR [rip+0x70],ah        # 0x4065c3
  406553:	add    BYTE PTR [rax],al
  406555:	add    BYTE PTR [rax],al
  406557:	add    BYTE PTR [rax],ah
  406559:	and    BYTE PTR [rsi+0x69],dl
  40655c:	jb     0x4065d2
  40655e:	jne    0x4065c1
  406560:	ins    BYTE PTR es:[rdi],dx
  406561:	push   rax
  406562:	jb     0x4065d3
  406564:	je     0x4065cb
  406566:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40656a:	(bad)  
  40656b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406573:	push   0x646f6320
  406578:	and    BYTE PTR gs:[rax],dh
  40657b:	js     0x4065a2
  40657d:	js     0x40657f
  40657f:	add    BYTE PTR [rax],ah
  406581:	and    BYTE PTR [rbp+0x6e],dl
  406584:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406588:	outs   dx,BYTE PTR ds:[rsi]
  406589:	and    BYTE PTR [rax+0x73],dh
  40658c:	gs jne 0x4065f3
  40658f:	outs   dx,DWORD PTR ds:[rsi]
  406590:	and    BYTE PTR [rdx+0x65],dh
  406593:	ins    BYTE PTR es:[rdi],dx
  406594:	outs   dx,DWORD PTR ds:[rsi]
  406595:	movsxd esp,DWORD PTR [rcx+0x74]
  406598:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40659f:	je     0x406610
  4065a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4065a4:	and    BYTE PTR [rsi+0x65],dh
  4065a7:	jb     0x40661c
  4065a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4065b0:	or     al,BYTE PTR [rax]
  4065b2:	add    BYTE PTR [rax],al
  4065b4:	add    BYTE PTR [rax],al
  4065b6:	add    BYTE PTR [rax],al
  4065b8:	and    BYTE PTR [rax],ah
  4065ba:	push   rbp
  4065bb:	outs   dx,BYTE PTR ds:[rsi]
  4065bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4065c0:	outs   dx,BYTE PTR ds:[rsi]
  4065c1:	and    BYTE PTR [rax+0x73],dh
  4065c4:	gs jne 0x40662b
  4065c7:	outs   dx,DWORD PTR ds:[rsi]
  4065c8:	and    BYTE PTR [rdx+0x65],dh
  4065cb:	ins    BYTE PTR es:[rdi],dx
  4065cc:	outs   dx,DWORD PTR ds:[rsi]
  4065cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4065d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4065d7:	and    BYTE PTR [rbx+0x69],dh
  4065da:	jp     0x406641
  4065dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9446
	...
  4065ee:	add    BYTE PTR [rax],al
  4065f0:	cs jo  0x406657
  4065f3:	(bad)  
  4065f4:	je     0x406657
	...
  4065fe:	add    BYTE PTR [rax],al
  406600:	and    eax,0x203a73
  406605:	push   rax
  406606:	rex.WRXB push r11
  406608:	rex.WB pop r8
  40660a:	rex.WR pop rcx
  40660c:	pop    rdi
  40660d:	rex.XB
  40660e:	rex.WRXB push r10
  406610:	push   rdx
  406611:	rex.RB
  406612:	rex.XB push r12
	...
  406620:	jne    0x406690
  406622:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406626:	outs   dx,BYTE PTR ds:[rsi]
  406627:	and    BYTE PTR [rdi+0x70],ch
  40662a:	je     0x406695
  40662c:	outs   dx,DWORD PTR ds:[rsi]
  40662d:	outs   dx,BYTE PTR ds:[rsi]
  40662e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73658661
	...
  406640:	jne    0x4066b0
  406642:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406646:	outs   dx,BYTE PTR ds:[rsi]
  406647:	and    BYTE PTR [rdi+0x70],ch
  40664a:	je     0x4066b5
  40664c:	outs   dx,DWORD PTR ds:[rsi]
  40664d:	outs   dx,BYTE PTR ds:[rsi]
  40664e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63658681
	...
  406660:	outs   dx,DWORD PTR ds:[rsi]
  406661:	jo     0x4066d7
  406663:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40666a:	jae    0x4066da
  40666c:	(bad)  
  40666d:	je     0x40668f
  40666f:	je     0x4066d2
  406671:	imul   esp,DWORD PTR [rbp+0x20],0x61
  406675:	outs   dx,BYTE PTR ds:[rsi]
  406676:	and    BYTE PTR [rcx+0x72],ah
  406679:	addr32 jne 0x4066e9
  40667c:	outs   dx,BYTE PTR gs:[rsi]
  40667e:	je     0x4066a0
  406680:	sub    eax,0x2e25202d
  406685:	sub    dh,BYTE PTR [rbx+0x0]
	...
  406690:	(bad)  
  406691:	ins    DWORD PTR es:[rdi],dx
  406692:	(bad)  
  406693:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40669a:	outs   dx,DWORD PTR ds:[rsi]
  40669b:	jo     0x406711
  40669d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  4066a4:	and    eax,0x732a2e
	...
  4066bd:	add    BYTE PTR [rax],al
  4066bf:	add    BYTE PTR [rdi+0x70],ch
  4066c2:	je     0x40672d
  4066c4:	outs   dx,DWORD PTR ds:[rsi]
  4066c5:	outs   dx,BYTE PTR ds:[rsi]
  4066c6:	and    BYTE PTR [rdx+0x65],dh
  4066c9:	jno    0x406740
  4066cb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4066d2:	and    BYTE PTR [rcx+0x72],ah
  4066d5:	addr32 jne 0x406745
  4066d8:	outs   dx,BYTE PTR gs:[rsi]
  4066da:	je     0x4066fc
  4066dc:	sub    eax,0x7325202d
	...
  4066fd:	add    BYTE PTR [rax],al
  4066ff:	add    BYTE PTR [rdi+0x70],ch
  406702:	je     0x40676d
  406704:	outs   dx,DWORD PTR ds:[rsi]
  406705:	outs   dx,BYTE PTR ds:[rsi]
  406706:	and    BYTE PTR [rdx+0x65],dh
  406709:	jno    0x406780
  40670b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  406712:	and    BYTE PTR [rcx+0x72],ah
  406715:	addr32 jne 0x406785
  406718:	outs   dx,BYTE PTR gs:[rsi]
  40671a:	je     0x40673c
  40671c:	sub    eax,0x6325202d
	...
  40673d:	add    BYTE PTR [rax],al
  40673f:	add    BYTE PTR [rax+0x50],al
  406742:	add    BYTE PTR [rax],al
	...
  40674d:	add    BYTE PTR [rax],al
  40674f:	add    BYTE PTR [rax+0x4050],al
	...
  40675d:	add    BYTE PTR [rax],al
  40675f:	add    BYTE PTR [rax+0x40],dh
  406762:	add    BYTE PTR [rax],al
	...
  40676d:	add    BYTE PTR [rax],al
  40676f:	add    al,al
  406771:	ins    BYTE PTR es:[rdi],dx
  406772:	add    BYTE PTR [rax],al
	...
  40677d:	add    BYTE PTR [rax],al
  40677f:	add    al,al
  406781:	ins    BYTE PTR es:[rdi],dx
  406782:	add    BYTE PTR [rax],al
	...
  40678d:	add    BYTE PTR [rax],al
  40678f:	add    BYTE PTR [rax+0x4063],dl
	...
  4067a1:	add    BYTE PTR [rax+0x0],al
	...
  4067b0:	mov    BYTE PTR [rax+rax*2+0x0],ah
	...
  4067bf:	add    BYTE PTR [rax+0x40a4],ah
	...
  4067cd:	add    BYTE PTR [rax],al
  4067cf:	add    al,cl
  4067d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4067d2:	add    BYTE PTR [rax],al
	...
  4067dd:	add    BYTE PTR [rax],al
  4067df:	add    al,ah
  4067e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4067e2:	add    BYTE PTR [rax],al
	...
  4067ed:	add    BYTE PTR [rax],al
  4067ef:	add    al,bh
  4067f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4067f2:	add    BYTE PTR [rax],al
	...
  4067fd:	add    BYTE PTR [rax],al
  4067ff:	add    al,al
  406801:	xchg   esi,eax
  406802:	add    BYTE PTR [rax],al
	...
  40680d:	add    BYTE PTR [rax],al
  40680f:	add    BYTE PTR [rax],ch
  406811:	(bad)  
  406812:	add    BYTE PTR [rax],al
	...
  40681d:	add    BYTE PTR [rax],al
  40681f:	add    BYTE PTR [rax],ah
  406821:	(bad)  
  406822:	add    BYTE PTR [rax],al
	...
  40682d:	add    BYTE PTR [rax],al
  40682f:	add    BYTE PTR [rax],dl
  406831:	(bad)  
  406832:	add    BYTE PTR [rax],al
	...
  40683d:	add    BYTE PTR [rax],al
  40683f:	add    BYTE PTR [rax],bl
  406841:	(bad)  
  406842:	add    BYTE PTR [rax],al
	...
  406851:	mov    al,0x40
	...
  40685f:	add    BYTE PTR [rax],dl
  406861:	mov    al,0x40
	...
  40686f:	add    BYTE PTR [rax],bl
  406871:	mov    al,0x40
	...
  40687f:	add    BYTE PTR [rax],dh
  406881:	mov    al,0x40
	...
  40688f:	add    BYTE PTR [rax-0x70],al
  406892:	add    BYTE PTR [rax],al
	...
  40689d:	add    BYTE PTR [rax],al
  40689f:	add    BYTE PTR [rax+0x4096],dl
	...
  4068b1:	and    eax,0x40
	...
  4068be:	add    BYTE PTR [rax],al
  4068c0:	push   rax
  4068c1:	sbb    al,0x40
	...
  4068cf:	add    BYTE PTR [rax-0x6a],al
  4068d2:	add    BYTE PTR [rax],al
	...
  4068dd:	add    BYTE PTR [rax],al
  4068df:	add    BYTE PTR [rax-0x6a],dh
  4068e2:	add    BYTE PTR [rax],al
	...
  4068ed:	add    BYTE PTR [rax],al
  4068ef:	add    BYTE PTR [rax-0x70],dl
  4068f2:	add    BYTE PTR [rax],al
	...
  4068fd:	add    BYTE PTR [rax],al
  4068ff:	add    BYTE PTR [rax-0x6a],bl
  406902:	add    BYTE PTR [rax],al
	...
  40690d:	add    BYTE PTR [rax],al
  40690f:	add    BYTE PTR [rsi+rdx*4+0x40],dl
	...
  40691f:	add    BYTE PTR [rax-0x6a],dl
  406922:	add    BYTE PTR [rax],al
	...
  40692d:	add    BYTE PTR [rax],al
  40692f:	add    BYTE PTR [rax+rdx*2+0x40],ch
	...
  40693f:	add    BYTE PTR [rdi+0x43],al
  406942:	rex.XB cmp spl,BYTE PTR [r8]
  406945:	sub    BYTE PTR [rdi+0x4e],al
  406948:	push   rbp
  406949:	sub    DWORD PTR [rax],esp
  40694b:	xor    al,0x2e
  40694d:	cmp    DWORD PTR [rsi],ebp
  40694f:	xor    al,0x0
	...
  40695d:	add    BYTE PTR [rax],al
  40695f:	add    BYTE PTR [rdi+0x43],al
  406962:	rex.XB cmp spl,BYTE PTR [r8]
  406965:	sub    BYTE PTR [rdi+0x4e],al
  406968:	push   rbp
  406969:	sub    DWORD PTR [rax],esp
  40696b:	xor    al,0x2e
  40696d:	cmp    DWORD PTR [rsi],ebp
  40696f:	xor    al,0x0
	...
  40697d:	add    BYTE PTR [rax],al
  40697f:	add    BYTE PTR [rdi+0x43],al
  406982:	rex.XB cmp spl,BYTE PTR [r8]
  406985:	sub    BYTE PTR [rdi+0x4e],al
  406988:	push   rbp
  406989:	sub    DWORD PTR [rax],esp
  40698b:	xor    al,0x2e
  40698d:	cmp    DWORD PTR [rsi],ebp
  40698f:	xor    al,0x0
	...
  40699d:	add    BYTE PTR [rax],al
  40699f:	add    BYTE PTR [rdi+0x43],al
  4069a2:	rex.XB cmp spl,BYTE PTR [r8]
  4069a5:	sub    BYTE PTR [rdi+0x4e],al
  4069a8:	push   rbp
  4069a9:	sub    DWORD PTR [rax],esp
  4069ab:	xor    al,0x2e
  4069ad:	cmp    DWORD PTR [rsi],ebp
  4069af:	xor    al,0x0
	...
  4069bd:	add    BYTE PTR [rax],al
  4069bf:	add    BYTE PTR [rdi+0x43],al
  4069c2:	rex.XB cmp spl,BYTE PTR [r8]
  4069c5:	sub    BYTE PTR [rdi+0x4e],al
  4069c8:	push   rbp
  4069c9:	sub    DWORD PTR [rax],esp
  4069cb:	xor    al,0x2e
  4069cd:	cmp    DWORD PTR [rsi],ebp
  4069cf:	xor    al,0x0
	...
  4069dd:	add    BYTE PTR [rax],al
  4069df:	add    BYTE PTR [rdi+0x43],al
  4069e2:	rex.XB cmp spl,BYTE PTR [r8]
  4069e5:	sub    BYTE PTR [rdi+0x4e],al
  4069e8:	push   rbp
  4069e9:	sub    DWORD PTR [rax],esp
  4069eb:	xor    al,0x2e
  4069ed:	cmp    DWORD PTR [rsi],ebp
  4069ef:	xor    al,0x0
	...
  4069fd:	add    BYTE PTR [rax],al
  4069ff:	add    BYTE PTR [rdi+0x43],al
  406a02:	rex.XB cmp spl,BYTE PTR [r8]
  406a05:	sub    BYTE PTR [rdi+0x4e],al
  406a08:	push   rbp
  406a09:	sub    DWORD PTR [rax],esp
  406a0b:	xor    al,0x2e
  406a0d:	cmp    DWORD PTR [rsi],ebp
  406a0f:	xor    al,0x0
	...
  406a1d:	add    BYTE PTR [rax],al
  406a1f:	add    BYTE PTR [rdi+0x43],al
  406a22:	rex.XB cmp spl,BYTE PTR [r8]
  406a25:	sub    BYTE PTR [rdi+0x4e],al
  406a28:	push   rbp
  406a29:	sub    DWORD PTR [rax],esp
  406a2b:	xor    al,0x2e
  406a2d:	cmp    DWORD PTR [rsi],ebp
  406a2f:	xor    al,0x0
	...
  406a3d:	add    BYTE PTR [rax],al
  406a3f:	add    BYTE PTR [rdi+0x43],al
  406a42:	rex.XB cmp spl,BYTE PTR [r8]
  406a45:	sub    BYTE PTR [rdi+0x4e],al
  406a48:	push   rbp
  406a49:	sub    DWORD PTR [rax],esp
  406a4b:	xor    al,0x2e
  406a4d:	cmp    DWORD PTR [rsi],ebp
  406a4f:	xor    al,0x0
	...
  406a5d:	add    BYTE PTR [rax],al
  406a5f:	add    BYTE PTR [rdi+0x43],al
  406a62:	rex.XB cmp spl,BYTE PTR [r8]
  406a65:	sub    BYTE PTR [rdi+0x4e],al
  406a68:	push   rbp
  406a69:	sub    DWORD PTR [rax],esp
  406a6b:	xor    al,0x2e
  406a6d:	cmp    DWORD PTR [rsi],ebp
  406a6f:	xor    al,0x0
	...
  406a7d:	add    BYTE PTR [rax],al
  406a7f:	add    BYTE PTR [rdi+0x43],al
  406a82:	rex.XB cmp spl,BYTE PTR [r8]
  406a85:	sub    BYTE PTR [rdi+0x4e],al
  406a88:	push   rbp
  406a89:	sub    DWORD PTR [rax],esp
  406a8b:	xor    al,0x2e
  406a8d:	cmp    DWORD PTR [rsi],ebp
  406a8f:	xor    al,0x0
	...
  406a9d:	add    BYTE PTR [rax],al
  406a9f:	add    BYTE PTR [rdi+0x43],al
  406aa2:	rex.XB cmp spl,BYTE PTR [r8]
  406aa5:	sub    BYTE PTR [rdi+0x4e],al
  406aa8:	push   rbp
  406aa9:	sub    DWORD PTR [rax],esp
  406aab:	xor    al,0x2e
  406aad:	cmp    DWORD PTR [rsi],ebp
  406aaf:	xor    al,0x0
	...
  406abd:	add    BYTE PTR [rax],al
  406abf:	add    BYTE PTR [rdi+0x43],al
  406ac2:	rex.XB cmp spl,BYTE PTR [r8]
  406ac5:	sub    BYTE PTR [rdi+0x4e],al
  406ac8:	push   rbp
  406ac9:	sub    DWORD PTR [rax],esp
  406acb:	xor    al,0x2e
  406acd:	cmp    DWORD PTR [rsi],ebp
  406acf:	xor    al,0x0
	...
  406add:	add    BYTE PTR [rax],al
  406adf:	add    BYTE PTR [rdi+0x43],al
  406ae2:	rex.XB cmp spl,BYTE PTR [r8]
  406ae5:	sub    BYTE PTR [rdi+0x4e],al
  406ae8:	push   rbp
  406ae9:	sub    DWORD PTR [rax],esp
  406aeb:	xor    al,0x2e
  406aed:	cmp    DWORD PTR [rsi],ebp
  406aef:	xor    al,0x0
	...
  406afd:	add    BYTE PTR [rax],al
  406aff:	add    BYTE PTR [rdi+0x43],al
  406b02:	rex.XB cmp spl,BYTE PTR [r8]
  406b05:	sub    BYTE PTR [rdi+0x4e],al
  406b08:	push   rbp
  406b09:	sub    DWORD PTR [rax],esp
  406b0b:	xor    al,0x2e
  406b0d:	cmp    DWORD PTR [rsi],ebp
  406b0f:	xor    al,0x0
	...
  406b1d:	add    BYTE PTR [rax],al
  406b1f:	add    BYTE PTR [rdi+0x43],al
  406b22:	rex.XB cmp spl,BYTE PTR [r8]
  406b25:	sub    BYTE PTR [rdi+0x4e],al
  406b28:	push   rbp
  406b29:	sub    DWORD PTR [rax],esp
  406b2b:	xor    al,0x2e
  406b2d:	cmp    DWORD PTR [rsi],ebp
  406b2f:	xor    al,0x0
	...
  406b3d:	add    BYTE PTR [rax],al
  406b3f:	add    BYTE PTR [rdi+0x43],al
  406b42:	rex.XB cmp spl,BYTE PTR [r8]
  406b45:	sub    BYTE PTR [rdi+0x4e],al
  406b48:	push   rbp
  406b49:	sub    DWORD PTR [rax],esp
  406b4b:	xor    al,0x2e
  406b4d:	cmp    DWORD PTR [rsi],ebp
  406b4f:	xor    al,0x0
	...
  406b5d:	add    BYTE PTR [rax],al
  406b5f:	add    BYTE PTR [rdi+0x43],al
  406b62:	rex.XB cmp spl,BYTE PTR [r8]
  406b65:	sub    BYTE PTR [rdi+0x4e],al
  406b68:	push   rbp
  406b69:	sub    DWORD PTR [rax],esp
  406b6b:	xor    al,0x2e
  406b6d:	cmp    DWORD PTR [rsi],ebp
  406b6f:	xor    al,0x0
	...
  406b7d:	add    BYTE PTR [rax],al
  406b7f:	add    BYTE PTR [rdi+0x43],al
  406b82:	rex.XB cmp spl,BYTE PTR [r8]
  406b85:	sub    BYTE PTR [rdi+0x4e],al
  406b88:	push   rbp
  406b89:	sub    DWORD PTR [rax],esp
  406b8b:	xor    al,0x2e
  406b8d:	cmp    DWORD PTR [rsi],ebp
  406b8f:	xor    al,0x0
	...
  406b9d:	add    BYTE PTR [rax],al
  406b9f:	add    BYTE PTR [rdi+0x43],al
  406ba2:	rex.XB cmp spl,BYTE PTR [r8]
  406ba5:	sub    BYTE PTR [rdi+0x4e],al
  406ba8:	push   rbp
  406ba9:	sub    DWORD PTR [rax],esp
  406bab:	xor    al,0x2e
  406bad:	cmp    DWORD PTR [rsi],ebp
  406baf:	xor    al,0x0
	...
  406bbd:	add    BYTE PTR [rax],al
  406bbf:	add    BYTE PTR [rdi+0x43],al
  406bc2:	rex.XB cmp spl,BYTE PTR [r8]
  406bc5:	sub    BYTE PTR [rdi+0x4e],al
  406bc8:	push   rbp
  406bc9:	sub    DWORD PTR [rax],esp
  406bcb:	xor    al,0x2e
  406bcd:	cmp    DWORD PTR [rsi],ebp
  406bcf:	xor    al,0x0
	...
  406bdd:	add    BYTE PTR [rax],al
  406bdf:	add    BYTE PTR [rdi+0x43],al
  406be2:	rex.XB cmp spl,BYTE PTR [r8]
  406be5:	sub    BYTE PTR [rdi+0x4e],al
  406be8:	push   rbp
  406be9:	sub    DWORD PTR [rax],esp
  406beb:	xor    al,0x2e
  406bed:	cmp    DWORD PTR [rsi],ebp
  406bef:	xor    al,0x0
	...
  406bfd:	add    BYTE PTR [rax],al
  406bff:	add    BYTE PTR [rdi+0x43],al
  406c02:	rex.XB cmp spl,BYTE PTR [r8]
  406c05:	sub    BYTE PTR [rdi+0x4e],al
  406c08:	push   rbp
  406c09:	sub    DWORD PTR [rax],esp
  406c0b:	xor    al,0x2e
  406c0d:	cmp    DWORD PTR [rsi],ebp
  406c0f:	xor    al,0x0
	...
  406c1d:	add    BYTE PTR [rax],al
  406c1f:	add    BYTE PTR [rdi+0x43],al
  406c22:	rex.XB cmp spl,BYTE PTR [r8]
  406c25:	sub    BYTE PTR [rdi+0x4e],al
  406c28:	push   rbp
  406c29:	sub    DWORD PTR [rax],esp
  406c2b:	xor    al,0x2e
  406c2d:	cmp    DWORD PTR [rsi],ebp
  406c2f:	xor    al,0x0
	...
  406c3d:	add    BYTE PTR [rax],al
  406c3f:	add    BYTE PTR [rdi+0x43],al
  406c42:	rex.XB cmp spl,BYTE PTR [r8]
  406c45:	sub    BYTE PTR [rdi+0x4e],al
  406c48:	push   rbp
  406c49:	sub    DWORD PTR [rax],esp
  406c4b:	xor    al,0x2e
  406c4d:	cmp    DWORD PTR [rsi],ebp
  406c4f:	xor    al,0x0
	...
  406c5d:	add    BYTE PTR [rax],al
  406c5f:	add    BYTE PTR [rdi+0x43],al
  406c62:	rex.XB cmp spl,BYTE PTR [r8]
  406c65:	sub    BYTE PTR [rdi+0x4e],al
  406c68:	push   rbp
  406c69:	sub    DWORD PTR [rax],esp
  406c6b:	xor    al,0x2e
  406c6d:	cmp    DWORD PTR [rsi],ebp
  406c6f:	xor    al,0x0
	...
  406c7d:	add    BYTE PTR [rax],al
  406c7f:	add    BYTE PTR [rdi+0x43],al
  406c82:	rex.XB cmp spl,BYTE PTR [r8]
  406c85:	sub    BYTE PTR [rdi+0x4e],al
  406c88:	push   rbp
  406c89:	sub    DWORD PTR [rax],esp
  406c8b:	xor    al,0x2e
  406c8d:	cmp    DWORD PTR [rsi],ebp
  406c8f:	xor    al,0x0
	...
  406c9d:	add    BYTE PTR [rax],al
  406c9f:	add    BYTE PTR [rdi+0x43],al
  406ca2:	rex.XB cmp spl,BYTE PTR [r8]
  406ca5:	sub    BYTE PTR [rdi+0x4e],al
  406ca8:	push   rbp
  406ca9:	sub    DWORD PTR [rax],esp
  406cab:	xor    al,0x2e
  406cad:	cmp    DWORD PTR [rsi],ebp
  406caf:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000407000 <.pdata>:
  407000:	add    BYTE PTR [rax],dl
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rax],edx
  407006:	add    BYTE PTR [rax],al
  407008:	add    BYTE PTR [rax+0x10100000],al
  40700e:	add    BYTE PTR [rax],al
  407010:	push   rcx
  407011:	adc    DWORD PTR [rax],eax
  407013:	add    BYTE PTR [rax+rax*4],al
  407016:	add    BYTE PTR [rax],al
  407018:	(bad)  
  407019:	adc    DWORD PTR [rax],eax
  40701b:	add    BYTE PTR [rsi+0xc000011],ch
  407021:	add    BYTE PTR [rax],0x0
  407024:	mov    al,0x11
  407026:	add    BYTE PTR [rax],al
  407028:	(bad)  
  407029:	adc    al,0x0
  40702b:	add    BYTE PTR [rax+rax*4],dl
  40702e:	add    BYTE PTR [rax],al
  407030:	rcl    BYTE PTR [rax+rax*1],1
  407033:	add    dl,dh
  407035:	adc    al,0x0
  407037:	add    BYTE PTR [rax],ch
  407039:	add    BYTE PTR [rax],0x0
  40703c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15627042
  407042:	add    BYTE PTR [rax],al
  407044:	rex.W add BYTE PTR [rax],0x0
  407048:	xor    BYTE PTR [rip+0x16520000],dl        # 0x1692704e
  40704e:	add    BYTE PTR [rax],al
  407050:	push   0x60000080
  407055:	(bad)  
  407056:	add    BYTE PTR [rax],al
  407058:	out    dx,eax
  407059:	(bad)  
  40705a:	add    BYTE PTR [rax],al
  40705c:	je     0x406fde
  40705e:	add    BYTE PTR [rax],al
  407060:	mov    al,0x17
  407062:	add    BYTE PTR [rax],al
  407064:	push   rdi
  407065:	sbb    BYTE PTR [rax],al
  407067:	add    BYTE PTR [rax+0x60000080],bl
  40706d:	sbb    BYTE PTR [rax],al
  40706f:	add    BYTE PTR [rcx+0x18],bh
  407072:	add    BYTE PTR [rax],al
  407074:	movabs al,ds:0xb500001880000080
  40707d:	sbb    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rax-0x3fffff80],ch
  407085:	sbb    BYTE PTR [rax],al
  407087:	add    BYTE PTR [rip+0xffffffffb0000019],dl        # 0xffffffffb04070a6
  40708d:	add    BYTE PTR [rax],0x0
  407090:	and    BYTE PTR [rcx],bl
  407092:	add    BYTE PTR [rax],al
  407094:	cmp    al,0x19
  407096:	add    BYTE PTR [rax],al
  407098:	mov    esp,0x40000080
  40709d:	sbb    DWORD PTR [rax],eax
  40709f:	add    BYTE PTR [rdx+0x19],cl
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	rol    BYTE PTR [rax+0x19500000],0x0
  4070ab:	add    BYTE PTR [rbx+0x19],dl
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	(bad)  
  4070b1:	add    BYTE PTR [rax],0x0
  4070b4:	(bad)  
  4070b5:	sbb    DWORD PTR [rax],eax
  4070b7:	add    BYTE PTR [rsi],dh
  4070b9:	sbb    al,BYTE PTR [rax]
  4070bb:	add    al,cl
  4070bd:	add    BYTE PTR [rax],0x0
  4070c0:	sbb    al,BYTE PTR [rax]
  4070c3:	add    BYTE PTR [rbx],bh
  4070c5:	sbb    eax,DWORD PTR [rax]
  4070c7:	add    al,bl
  4070c9:	add    BYTE PTR [rax],0x0
  4070cc:	rex sbb eax,DWORD PTR [rax]
  4070cf:	add    BYTE PTR [rdi+0x1b],ch
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	call   0x70407159
  4070d9:	sbb    eax,DWORD PTR [rax]
  4070db:	add    cl,bl
  4070dd:	sbb    eax,DWORD PTR [rax]
  4070df:	add    al,dh
  4070e1:	add    BYTE PTR [rax],0x0
  4070e4:	loopne 0x407101
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	jrcxz  0x407105
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	cld    
  4070ed:	add    BYTE PTR [rax],0x0
  4070f0:	lock sbb eax,DWORD PTR [rax]
  4070f3:	add    BYTE PTR [rcx],dh
  4070f5:	sbb    al,0x0
  4070f7:	add    BYTE PTR [rax],al
  4070f9:	add    DWORD PTR [rax],0x1c4000
  4070ff:	add    BYTE PTR [rsp+rbx*1+0x0],cl
  407103:	add    BYTE PTR [rax],cl
  407105:	add    DWORD PTR [rax],0x1c5000
  40710b:	add    BYTE PTR [rbp+rbx*1+0x0],cl
  40710f:	add    BYTE PTR [rcx+rax*4],cl
  407112:	add    BYTE PTR [rax],al
  407114:	push   rax
  407115:	sbb    eax,0x1d530000
  40711a:	add    BYTE PTR [rax],al
  40711c:	and    al,0x81
  40711e:	add    BYTE PTR [rax],al
  407120:	(bad)  
  407121:	sbb    eax,0x1d640000
  407126:	add    BYTE PTR [rax],al
  407128:	sub    BYTE PTR [rcx+0x1d700000],al
  40712e:	add    BYTE PTR [rax],al
  407130:	je     0x40714f
  407132:	add    BYTE PTR [rax],al
  407134:	sub    al,0x81
  407136:	add    BYTE PTR [rax],al
  407138:	sbb    BYTE PTR [rip+0x1de10000],0x0        # 0x1e21713f
  40713f:	add    BYTE PTR [rax],dh
  407141:	add    DWORD PTR [rax],0x1df000
  407147:	add    BYTE PTR [rdx+0x1f],dl
  40714a:	add    BYTE PTR [rax],al
  40714c:	cmp    al,0x81
  40714e:	add    BYTE PTR [rax],al
  407150:	(bad)  
  407151:	(bad)  
  407152:	add    BYTE PTR [rax],al
  407154:	pop    rcx
  407155:	and    al,BYTE PTR [rax]
  407157:	add    BYTE PTR [rax-0x7f],dl
  40715a:	add    BYTE PTR [rax],al
  40715c:	(bad)  
  40715d:	and    al,BYTE PTR [rax]
  40715f:	add    BYTE PTR [rsi],al
  407161:	and    al,0x0
  407163:	add    BYTE PTR [rax-0x7f],ch
  407166:	add    BYTE PTR [rax],al
  407168:	adc    BYTE PTR [rax+rax*1],ah
  40716b:	add    ah,bh
  40716d:	and    al,0x0
  40716f:	add    BYTE PTR [rax-0x7f],dh
  407172:	add    BYTE PTR [rax],al
  407174:	add    BYTE PTR [rip+0x26b80000],ah        # 0x26f8717a
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    BYTE PTR [rcx+0x26c00000],0x0
  407183:	add    BYTE PTR [rip+0xffffffff88000027],ch        # 0xffffffff884071b0
  407189:	add    DWORD PTR [rax],0x273000
  40718f:	add    BYTE PTR [rdi-0x67ffffd9],ch
  407195:	add    DWORD PTR [rax],0x27b000
  40719b:	add    BYTE PTR [rdi+0x28],cl
  40719e:	add    BYTE PTR [rax],al
  4071a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4071a1:	add    DWORD PTR [rax],0x285000
  4071a7:	add    BYTE PTR [rdx],ch
  4071a9:	sub    DWORD PTR [rax],eax
  4071ab:	add    BYTE PTR [rcx+rax*4+0x29300000],ch
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	rex.WRXB sub QWORD PTR [r8],r8
  4071b7:	add    BYTE PTR [rcx+rax*4+0x29500000],dh
  4071be:	add    BYTE PTR [rax],al
  4071c0:	(bad)  
  4071c1:	sub    DWORD PTR [rax],eax
  4071c3:	add    BYTE PTR [rax+0x70000081],bh
  4071c9:	sub    DWORD PTR [rax],eax
  4071cb:	add    BYTE PTR [rbp-0x43ffffd7],dh
  4071d1:	add    DWORD PTR [rax],0x29c000
  4071d7:	add    BYTE PTR [rsi+0x2a],bl
  4071da:	add    BYTE PTR [rax],al
  4071dc:	rol    BYTE PTR [rcx+0x2a600000],0x0
  4071e3:	add    BYTE PTR [rbx-0x33ffffd6],ah
  4071e9:	add    DWORD PTR [rax],0x2ab000
  4071ef:	add    bl,ch
  4071f1:	sub    al,BYTE PTR [rax]
  4071f3:	add    al,bl
  4071f5:	add    DWORD PTR [rax],0x2af000
  4071fb:	add    BYTE PTR [rsi+0x2b],bh
  4071fe:	add    BYTE PTR [rax],al
  407200:	loopne 0x407183
  407202:	add    BYTE PTR [rax],al
  407204:	sub    BYTE PTR [rbx],0x0
  407207:	add    BYTE PTR [rax-0x13ffffd5],bh
  40720d:	add    DWORD PTR [rax],0x2bc000
  407213:	add    BYTE PTR [rip+0xfffffffff800002c],dl        # 0xfffffffff8407245
  407219:	add    DWORD PTR [rax],0x2c2000
  40721f:	add    dh,cl
  407221:	sub    al,0x0
  407223:	add    BYTE PTR [rdx+rax*4],al
  407226:	add    BYTE PTR [rax],al
  407228:	adc    BYTE PTR [rip+0x2dba0000],ch        # 0x2dfa722e
  40722e:	add    BYTE PTR [rax],al
  407230:	adc    al,0x82
  407232:	add    BYTE PTR [rax],al
  407234:	shr    BYTE PTR [rip+0x2e400000],0x0        # 0x2e80723b
  40723b:	add    BYTE PTR [rdx+rax*4],ah
  40723e:	add    BYTE PTR [rax],al
  407240:	rex
  407241:	add    BYTE PTR cs:[rax],al
  407244:	div    BYTE PTR [rcx]
  407246:	add    BYTE PTR [rax],al
  407248:	xor    BYTE PTR [rdx+0x32000000],al
  40724e:	add    BYTE PTR [rax],al
  407250:	in     eax,0x38
  407252:	add    BYTE PTR [rax],al
  407254:	rex.W (bad) 
  407256:	add    BYTE PTR [rax],al
  407258:	lock cmp BYTE PTR [rax],al
  40725b:	add    BYTE PTR [rdx],dl
  40725d:	cmp    DWORD PTR [rax],eax
  40725f:	add    BYTE PTR [rax-0x7e],ah
  407262:	add    BYTE PTR [rax],al
  407264:	and    BYTE PTR [rcx],bh
  407266:	add    BYTE PTR [rax],al
  407268:	rex cmp DWORD PTR [rax],eax
  40726b:	add    BYTE PTR [rax-0x7e],ch
  40726e:	add    BYTE PTR [rax],al
  407270:	rex cmp DWORD PTR [rax],eax
  407273:	add    BYTE PTR [rax+0x39],ah
  407276:	add    BYTE PTR [rax],al
  407278:	jo     0x4071fc
  40727a:	add    BYTE PTR [rax],al
  40727c:	jo     0x4072b8
  40727e:	add    BYTE PTR [rax],al
  407280:	js     0x4072bc
  407282:	add    BYTE PTR [rax],al
  407284:	js     0x407208
  407286:	add    BYTE PTR [rax],al
  407288:	cmp    BYTE PTR [rdx],0x0
  40728b:	add    BYTE PTR [rbx+0x7c00003a],cl
  407291:	(bad)  
  407292:	add    BYTE PTR [rax],al
  407294:	push   rax
  407295:	cmp    eax,DWORD PTR [rax]
  407297:	add    BYTE PTR [rsi+0x40],ch
  40729a:	add    BYTE PTR [rax],al
  40729c:	.byte 0x80
  40729d:	add    BYTE PTR [rax],0x0

Disassembly of section .xdata:

0000000000408000 <.xdata>:
  408000:	add    DWORD PTR [rax],eax
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rcx+rax*1],eax
  408007:	add    BYTE PTR [rdx+rax*2],al
  40800a:	add    BYTE PTR [rax],al
  40800c:	add    DWORD PTR [rcx+rax*1],eax
  40800f:	add    BYTE PTR [rdx+riz*2],al
  408012:	add    BYTE PTR [rax],al
  408014:	add    DWORD PTR [rdi],ecx
  408016:	or     BYTE PTR [rax],al
  408018:	lgdt   [rbx]
  40801b:	add    BYTE PTR [rax],cl
  40801d:	xor    BYTE PTR [rdi],al
  40801f:	(bad)  
  408020:	(bad)  
  408021:	jo     0x408028
  408023:	push   rax
  408024:	add    al,0xc0
  408026:	add    dl,al
  408028:	or     DWORD PTR [rcx+rax*1],eax
  40802b:	add    BYTE PTR [rdx+rax*2],al
  40802e:	add    BYTE PTR [rax],al
  408030:	(bad)  
  408031:	cmp    al,BYTE PTR [rax]
  408033:	add    BYTE PTR [rcx],al
  408035:	add    BYTE PTR [rax],al
  408037:	add    ah,dl
  408039:	adc    al,0x0
  40803b:	add    ah,ch
  40803d:	adc    al,0x0
  40803f:	add    BYTE PTR [rax],al
  408041:	and    eax,0x14ec0000
  408046:	add    BYTE PTR [rax],al
  408048:	or     DWORD PTR [rcx+rax*1],eax
  40804b:	add    BYTE PTR [rdx+rax*2],al
  40804e:	add    BYTE PTR [rax],al
  408050:	(bad)  
  408051:	cmp    al,BYTE PTR [rax]
  408053:	add    BYTE PTR [rcx],al
  408055:	add    BYTE PTR [rax],al
  408057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40805e:	add    BYTE PTR [rax],al
  408060:	add    BYTE PTR [rip+0x151c0000],ah        # 0x155c8066
  408066:	add    BYTE PTR [rax],al
  408068:	add    DWORD PTR [rdi],eax
  40806a:	add    al,0x0
  40806c:	(bad)  
  40806d:	xor    al,BYTE PTR [rbx]
  40806f:	xor    BYTE PTR [rdx],al
  408071:	(bad)  
  408072:	add    DWORD PTR [rax+0x1],esi
  408075:	(bad)  
  408076:	add    al,0x0
  408078:	(bad)  
  408079:	xor    al,BYTE PTR [rbx]
  40807b:	xor    BYTE PTR [rdx],al
  40807d:	(bad)  
  40807e:	add    DWORD PTR [rax+0x1],esi
  408081:	adc    ecx,DWORD PTR [rdx]
  408083:	add    BYTE PTR [rbx],dl
  408085:	add    DWORD PTR [rbx],ebx
  408087:	add    BYTE PTR [rax+rsi*1],cl
  40808a:	or     esp,DWORD PTR [rax+0xa]
  40808d:	jo     0x408098
  40808f:	push   rax
  408090:	or     al,al
  408092:	(bad)  
  408093:	rol    BYTE PTR [rax+riz*8],1
  408096:	add    dh,al
  408098:	add    DWORD PTR [rip+0x52050002],eax        # 0x524580a0
  40809e:	add    DWORD PTR [rax],esi
  4080a0:	add    DWORD PTR [rcx+rax*1],eax
  4080a3:	add    BYTE PTR [rdx+rax*2],al
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	add    DWORD PTR [rcx+rax*1],eax
  4080ab:	add    BYTE PTR [rdx+rax*2],al
  4080ae:	add    BYTE PTR [rax],al
  4080b0:	add    DWORD PTR [rsi],eax
  4080b2:	add    eax,DWORD PTR [rax]
  4080b4:	(bad)  
  4080b5:	rex.X add sil,BYTE PTR [rax]
  4080b8:	add    DWORD PTR [rax+0x0],esp
  4080bb:	add    BYTE PTR [rcx],al
  4080bd:	add    BYTE PTR [rax],al
  4080bf:	add    BYTE PTR [rcx],al
  4080c1:	add    BYTE PTR [rax],al
  4080c3:	add    BYTE PTR [rcx],al
  4080c5:	add    BYTE PTR [rax],al
  4080c7:	add    BYTE PTR [rcx],al
  4080c9:	or     al,BYTE PTR [rsi]
  4080cb:	add    BYTE PTR [rdx],cl
  4080cd:	jb     0x4080d5
  4080cf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b08535
  4080d5:	push   rax
  4080d6:	add    al,al
  4080d8:	add    DWORD PTR [rdx],ecx
  4080da:	add    eax,0x6d20a05
  4080df:	add    eax,DWORD PTR [rbx]
  4080e1:	xor    BYTE PTR [rdx],al
  4080e3:	(bad)  
  4080e4:	add    DWORD PTR [rax+0x0],edx
  4080e7:	add    BYTE PTR [rcx],al
  4080e9:	add    al,0x1
  4080eb:	add    BYTE PTR [rdx+rax*2],al
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	add    DWORD PTR [rsi],eax
  4080f2:	add    eax,DWORD PTR [rax]
  4080f4:	(bad)  
  4080f5:	rex.X add sil,BYTE PTR [rax]
  4080f8:	add    DWORD PTR [rax+0x0],esp
  4080fb:	add    BYTE PTR [rcx],al
  4080fd:	add    BYTE PTR [rax],al
  4080ff:	add    BYTE PTR [rcx],al
  408101:	add    al,0x1
  408103:	add    BYTE PTR [rdx+riz*4],al
  408106:	add    BYTE PTR [rax],al
  408108:	add    DWORD PTR [rax],eax
  40810a:	add    BYTE PTR [rax],al
  40810c:	add    DWORD PTR [rsi],edx
  40810e:	or     DWORD PTR [rax],eax
  408110:	(bad)  
  408111:	mov    BYTE PTR [rsi],al
  408113:	add    BYTE PTR [rax],dl
  408115:	js     0x40811c
  408117:	add    BYTE PTR [rbx],cl
  408119:	push   0xffffffffe2060004
  40811e:	add    dh,BYTE PTR [rax]
  408120:	add    DWORD PTR [rax+0x0],esp
  408123:	add    BYTE PTR [rcx],al
  408125:	add    BYTE PTR [rax],al
  408127:	add    BYTE PTR [rcx],al
  408129:	add    BYTE PTR [rax],al
  40812b:	add    BYTE PTR [rcx],al
  40812d:	add    BYTE PTR [rax],al
  40812f:	add    BYTE PTR [rcx],al
  408131:	(bad)  
  408132:	add    eax,DWORD PTR [rax]
  408134:	(bad)  
  408135:	(bad)  
  408137:	xor    BYTE PTR [rcx],al
  408139:	(bad)  
  40813a:	add    BYTE PTR [rax],al
  40813c:	add    DWORD PTR [rdi+rax*1],ecx
  40813f:	add    BYTE PTR [rdx+riz*4],cl
  408142:	or     BYTE PTR [rax],dh
  408144:	(bad)  
  408145:	(bad)  
  408146:	(bad)  
  408147:	jo     0x40814e
  408149:	push   rax
  40814a:	add    al,0xc0
  40814c:	add    dl,al
  40814e:	add    BYTE PTR [rax],al
  408150:	add    DWORD PTR [rcx],edx
  408152:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e3369
  408158:	or     dh,BYTE PTR [rax]
  40815a:	or     DWORD PTR [rax+0x8],esp
  40815d:	jo     0x408166
  40815f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2208536
  408166:	add    BYTE PTR [rax],al
  408168:	add    DWORD PTR [rcx+rax*1],eax
  40816b:	add    BYTE PTR [rdx+rax*2],al
  40816e:	add    BYTE PTR [rax],al
  408170:	add    DWORD PTR [rdx],ecx
  408172:	(bad)  
  408173:	add    BYTE PTR [rdx],cl
  408175:	xor    al,BYTE PTR [rsi]
  408177:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b085dd
  40817d:	push   rax
  40817e:	add    al,al
  408180:	add    DWORD PTR [rip+0x32050002],eax        # 0x32458188
  408186:	add    DWORD PTR [rax],esi
  408188:	add    DWORD PTR [rax],ecx
  40818a:	add    eax,0x4420800
  40818f:	xor    BYTE PTR [rbx],al
  408191:	(bad)  
  408192:	add    dh,BYTE PTR [rax+0x1]
  408195:	push   rax
  408196:	add    BYTE PTR [rax],al
  408198:	add    DWORD PTR [rdi],eax
  40819a:	add    al,0x0
  40819c:	(bad)  
  40819d:	xor    al,BYTE PTR [rbx]
  40819f:	xor    BYTE PTR [rdx],al
  4081a1:	(bad)  
  4081a2:	add    DWORD PTR [rax+0x1],esi
  4081a5:	add    eax,0x32050002
  4081aa:	add    DWORD PTR [rax],esi
  4081ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324581b4
  4081b2:	add    DWORD PTR [rax],esi
  4081b4:	add    DWORD PTR [rax],eax
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	add    DWORD PTR [rax],eax
  4081ba:	add    BYTE PTR [rax],al
  4081bc:	add    DWORD PTR [rax],eax
  4081be:	add    BYTE PTR [rax],al
  4081c0:	add    DWORD PTR [rdi],eax
  4081c2:	add    al,0x0
  4081c4:	(bad)  
  4081c5:	xor    al,BYTE PTR [rbx]
  4081c7:	xor    BYTE PTR [rdx],al
  4081c9:	(bad)  
  4081ca:	add    DWORD PTR [rax+0x1],esi
  4081cd:	(bad)  
  4081ce:	add    eax,DWORD PTR [rax]
  4081d0:	(bad)  
  4081d1:	rex.X add sil,BYTE PTR [rax]
  4081d4:	add    DWORD PTR [rax+0x0],esp
  4081d7:	add    BYTE PTR [rcx],al
  4081d9:	add    eax,0x32050002
  4081de:	add    DWORD PTR [rax],esi
  4081e0:	add    DWORD PTR [rdi],eax
  4081e2:	add    al,0x0
  4081e4:	(bad)  
  4081e5:	xor    al,BYTE PTR [rbx]
  4081e7:	xor    BYTE PTR [rdx],al
  4081e9:	(bad)  
  4081ea:	add    DWORD PTR [rax+0x1],esi
  4081ed:	(bad)  
  4081ee:	add    eax,DWORD PTR [rax]
  4081f0:	(bad)  
  4081f1:	rex.X add sil,BYTE PTR [rax]
  4081f4:	add    DWORD PTR [rax+0x0],esp
  4081f7:	add    BYTE PTR [rcx],al
  4081f9:	(bad)  
  4081fa:	add    eax,DWORD PTR [rax]
  4081fc:	(bad)  
  4081fd:	rex.X add sil,BYTE PTR [rax]
  408200:	add    DWORD PTR [rax+0x0],esp
  408203:	add    BYTE PTR [rcx],al
  408205:	or     BYTE PTR [rip+0x4420800],al        # 0x4828a0b
  40820b:	xor    BYTE PTR [rbx],al
  40820d:	(bad)  
  40820e:	add    dh,BYTE PTR [rax+0x1]
  408211:	push   rax
  408212:	add    BYTE PTR [rax],al
  408214:	add    DWORD PTR [rax],ecx
  408216:	(bad)  
  408217:	add    BYTE PTR [rax],cl
  408219:	xor    BYTE PTR [rdi],al
  40821b:	(bad)  
  40821c:	(bad)  
  40821d:	jo     0x408224
  40821f:	push   rax
  408220:	add    al,0xc0
  408222:	add    dl,al
  408224:	add    DWORD PTR [rdi],eax
  408226:	add    al,0x0
  408228:	(bad)  
  408229:	push   rdx
  40822a:	add    esi,DWORD PTR [rax]
  40822c:	add    ah,BYTE PTR [rax+0x1]
  40822f:	jo     0x408232
  408231:	adc    BYTE PTR [rcx],cl
  408233:	add    BYTE PTR [rax],dl
  408235:	(bad)  
  408236:	or     al,0x30
  408238:	or     esp,DWORD PTR [rax+0xa]
  40823b:	jo     0x408246
  40823d:	push   rax
  40823e:	or     al,al
  408240:	(bad)  
  408241:	rol    BYTE PTR [rax+riz*8],1
  408244:	add    dh,al
  408246:	add    BYTE PTR [rax],al
  408248:	add    DWORD PTR [rax],edx
  40824a:	or     DWORD PTR [rax],eax
  40824c:	adc    BYTE PTR [rdx+0xc],ah
  40824f:	xor    BYTE PTR [rbx],cl
  408251:	(bad)  
  408252:	or     dh,BYTE PTR [rax+0x9]
  408255:	push   rax
  408256:	or     al,al
  408258:	(bad)  
  408259:	rol    BYTE PTR [rax+riz*8],1
  40825c:	add    dh,al
  40825e:	add    BYTE PTR [rax],al
  408260:	add    DWORD PTR [rcx+rax*1],eax
  408263:	add    BYTE PTR [rdx+riz*2],al
  408266:	add    BYTE PTR [rax],al
  408268:	add    DWORD PTR [rcx+rax*1],eax
  40826b:	add    BYTE PTR [rdx+riz*2],al
  40826e:	add    BYTE PTR [rax],al
  408270:	add    DWORD PTR [rcx+rax*1],eax
  408273:	add    BYTE PTR [rdx+riz*2],al
  408276:	add    BYTE PTR [rax],al
  408278:	add    DWORD PTR [rax],eax
  40827a:	add    BYTE PTR [rax],al
  40827c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000409000 <.bss>:
	...

Disassembly of section .idata:

000000000040a000 <.idata>:
  40a000:	push   rax
  40a001:	movabs al,ds:0x0
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	rex.WR stos QWORD PTR es:[rdi],rax
  40a00e:	add    BYTE PTR [rax],al
  40a010:	add    BYTE PTR [rbx-0x5ef00000],ah
	...
  40a01e:	add    BYTE PTR [rax],al
  40a020:	mov    esp,0xc00000ab
  40a025:	movabs ds:0xa1d00000,eax
  40a02e:	add    BYTE PTR [rax],al
  40a030:	add    BYTE PTR [rax],al
  40a032:	add    BYTE PTR [rax],al
  40a034:	(bad)  
  40a035:	lods   al,BYTE PTR ds:[rsi]
  40a036:	add    BYTE PTR [rax],al
  40a038:	and    BYTE PTR [rax+rax*1+0x0],0x0
	...
  40a050:	mov    al,0xa5
  40a052:	add    BYTE PTR [rax],al
  40a054:	add    BYTE PTR [rax],al
  40a056:	add    BYTE PTR [rax],al
  40a058:	(bad)  
  40a059:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	add    BYTE PTR [rax],al
  40a05e:	add    BYTE PTR [rax],al
  40a060:	(bad)  
  40a061:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a062:	add    BYTE PTR [rax],al
  40a064:	add    BYTE PTR [rax],al
  40a066:	add    BYTE PTR [rax],al
  40a068:	call   0x40a112
  40a06d:	add    BYTE PTR [rax],al
  40a06f:	add    al,bh
  40a071:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a072:	add    BYTE PTR [rax],al
  40a074:	add    BYTE PTR [rax],al
  40a076:	add    BYTE PTR [rax],al
  40a078:	or     al,0xa6
  40a07a:	add    BYTE PTR [rax],al
  40a07c:	add    BYTE PTR [rax],al
  40a07e:	add    BYTE PTR [rax],al
  40a080:	and    al,0xa6
  40a082:	add    BYTE PTR [rax],al
  40a084:	add    BYTE PTR [rax],al
  40a086:	add    BYTE PTR [rax],al
  40a088:	cmp    al,0xa6
  40a08a:	add    BYTE PTR [rax],al
  40a08c:	add    BYTE PTR [rax],al
  40a08e:	add    BYTE PTR [rax],al
  40a090:	push   rax
  40a091:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a092:	add    BYTE PTR [rax],al
  40a094:	add    BYTE PTR [rax],al
  40a096:	add    BYTE PTR [rax],al
  40a098:	push   0xa6
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rsi+riz*4+0x0],bh
  40a0a3:	add    BYTE PTR [rax],al
  40a0a5:	add    BYTE PTR [rax],al
  40a0a7:	add    BYTE PTR [rsi+riz*4+0x0],cl
  40a0ae:	add    BYTE PTR [rax],al
  40a0b0:	cwde   
  40a0b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0b2:	add    BYTE PTR [rax],al
  40a0b4:	add    BYTE PTR [rax],al
  40a0b6:	add    BYTE PTR [rax],al
  40a0b8:	lods   al,BYTE PTR ds:[rsi]
  40a0b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0ba:	add    BYTE PTR [rax],al
  40a0bc:	add    BYTE PTR [rax],al
  40a0be:	add    BYTE PTR [rax],al
  40a0c0:	shl    BYTE PTR [rsi+0x0],0x0
  40a0c7:	add    ah,dl
  40a0c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0ca:	add    BYTE PTR [rax],al
  40a0cc:	add    BYTE PTR [rax],al
  40a0ce:	add    BYTE PTR [rax],al
  40a0d0:	loopne 0x40a078
  40a0d2:	add    BYTE PTR [rax],al
  40a0d4:	add    BYTE PTR [rax],al
  40a0d6:	add    BYTE PTR [rax],al
  40a0d8:	hlt    
  40a0d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a0da:	add    BYTE PTR [rax],al
  40a0dc:	add    BYTE PTR [rax],al
  40a0de:	add    BYTE PTR [rax],al
  40a0e0:	add    al,0xa7
  40a0e2:	add    BYTE PTR [rax],al
  40a0e4:	add    BYTE PTR [rax],al
  40a0e6:	add    BYTE PTR [rax],al
  40a0e8:	adc    al,0xa7
  40a0ea:	add    BYTE PTR [rax],al
  40a0ec:	add    BYTE PTR [rax],al
  40a0ee:	add    BYTE PTR [rax],al
  40a0f0:	and    al,0xa7
  40a0f2:	add    BYTE PTR [rax],al
  40a0f4:	add    BYTE PTR [rax],al
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	cmp    al,0xa7
  40a0fa:	add    BYTE PTR [rax],al
  40a0fc:	add    BYTE PTR [rax],al
  40a0fe:	add    BYTE PTR [rax],al
  40a100:	push   rax
  40a101:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
  40a10e:	add    BYTE PTR [rax],al
  40a110:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
  40a112:	add    BYTE PTR [rax],al
  40a114:	add    BYTE PTR [rax],al
  40a116:	add    BYTE PTR [rax],al
  40a118:	jl     0x40a0c1
  40a11a:	add    BYTE PTR [rax],al
  40a11c:	add    BYTE PTR [rax],al
  40a11e:	add    BYTE PTR [rax],al
  40a120:	xchg   esp,eax
  40a121:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a122:	add    BYTE PTR [rax],al
  40a124:	add    BYTE PTR [rax],al
  40a126:	add    BYTE PTR [rax],al
  40a128:	test   al,0xa7
  40a12a:	add    BYTE PTR [rax],al
  40a12c:	add    BYTE PTR [rax],al
  40a12e:	add    BYTE PTR [rax],al
  40a130:	mov    esi,0xa7
  40a135:	add    BYTE PTR [rax],al
  40a137:	add    ah,dl
  40a139:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a13a:	add    BYTE PTR [rax],al
  40a13c:	add    BYTE PTR [rax],al
  40a13e:	add    BYTE PTR [rax],al
  40a140:	in     al,0xa7
  40a142:	add    BYTE PTR [rax],al
  40a144:	add    BYTE PTR [rax],al
  40a146:	add    BYTE PTR [rax],al
  40a148:	mul    BYTE PTR [rdi+0x0]
  40a14e:	add    BYTE PTR [rax],al
  40a150:	adc    BYTE PTR [rax+0x0],ch
  40a156:	add    BYTE PTR [rax],al
  40a158:	and    BYTE PTR [rax+0x0],ch
  40a15e:	add    BYTE PTR [rax],al
  40a160:	cmp    al,0xa8
  40a162:	add    BYTE PTR [rax],al
  40a164:	add    BYTE PTR [rax],al
  40a166:	add    BYTE PTR [rax],al
  40a168:	push   rsp
  40a169:	test   al,0x0
  40a16b:	add    BYTE PTR [rax],al
  40a16d:	add    BYTE PTR [rax],al
  40a16f:	add    BYTE PTR [rsi-0x58],ch
  40a172:	add    BYTE PTR [rax],al
  40a174:	add    BYTE PTR [rax],al
  40a176:	add    BYTE PTR [rax],al
  40a178:	test   BYTE PTR [rax+0x0],ch
  40a17e:	add    BYTE PTR [rax],al
  40a180:	cwde   
  40a181:	test   al,0x0
  40a183:	add    BYTE PTR [rax],al
  40a185:	add    BYTE PTR [rax],al
  40a187:	add    BYTE PTR [rdx+0xa8],dh
  40a18d:	add    BYTE PTR [rax],al
  40a18f:	add    dh,al
  40a191:	test   al,0x0
  40a193:	add    BYTE PTR [rax],al
  40a195:	add    BYTE PTR [rax],al
  40a197:	add    ah,ah
  40a199:	test   al,0x0
  40a19b:	add    BYTE PTR [rax],al
  40a19d:	add    BYTE PTR [rax],al
  40a19f:	add    ah,ch
  40a1a1:	test   al,0x0
  40a1a3:	add    BYTE PTR [rax],al
  40a1a5:	add    BYTE PTR [rax],al
  40a1a7:	add    BYTE PTR [rax],al
  40a1a9:	test   eax,0x0
  40a1ae:	add    BYTE PTR [rax],al
  40a1b0:	(bad)  
  40a1b1:	test   eax,0x0
  40a1b6:	add    BYTE PTR [rax],al
  40a1b8:	sub    ch,BYTE PTR [rcx+0x0]
  40a1be:	add    BYTE PTR [rax],al
  40a1c0:	cmp    al,0xa9
	...
  40a1ce:	add    BYTE PTR [rax],al
  40a1d0:	rex.WR test rax,0x0
  40a1d6:	add    BYTE PTR [rax],al
  40a1d8:	fs test eax,0x0
  40a1de:	add    BYTE PTR [rax],al
  40a1e0:	outs   dx,BYTE PTR ds:[rsi]
  40a1e1:	test   eax,0x0
  40a1e6:	add    BYTE PTR [rax],al
  40a1e8:	jl     0x40a193
  40a1ea:	add    BYTE PTR [rax],al
  40a1ec:	add    BYTE PTR [rax],al
  40a1ee:	add    BYTE PTR [rax],al
  40a1f0:	mov    WORD PTR [rcx+0x0],gs
  40a1f6:	add    BYTE PTR [rax],al
  40a1f8:	cwde   
  40a1f9:	test   eax,0x0
  40a1fe:	add    BYTE PTR [rax],al
  40a200:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a201:	test   eax,0x0
  40a206:	add    BYTE PTR [rax],al
  40a208:	mov    dh,0xa9
  40a20a:	add    BYTE PTR [rax],al
  40a20c:	add    BYTE PTR [rax],al
  40a20e:	add    BYTE PTR [rax],al
  40a210:	enter  0xa9,0x0
  40a214:	add    BYTE PTR [rax],al
  40a216:	add    BYTE PTR [rax],al
  40a218:	fsubr  QWORD PTR [rcx+0x0]
  40a21e:	add    BYTE PTR [rax],al
  40a220:	out    0xa9,al
  40a222:	add    BYTE PTR [rax],al
  40a224:	add    BYTE PTR [rax],al
  40a226:	add    BYTE PTR [rax],al
  40a228:	hlt    
  40a229:	test   eax,0x0
  40a22e:	add    BYTE PTR [rax],al
  40a230:	(bad)  
  40a231:	test   eax,0x0
  40a236:	add    BYTE PTR [rax],al
  40a238:	or     BYTE PTR [rdx+0x0],ch
  40a23e:	add    BYTE PTR [rax],al
  40a240:	adc    al,0xaa
  40a242:	add    BYTE PTR [rax],al
  40a244:	add    BYTE PTR [rax],al
  40a246:	add    BYTE PTR [rax],al
  40a248:	sbb    al,0xaa
  40a24a:	add    BYTE PTR [rax],al
  40a24c:	add    BYTE PTR [rax],al
  40a24e:	add    BYTE PTR [rax],al
  40a250:	es stos BYTE PTR es:[rdi],al
  40a252:	add    BYTE PTR [rax],al
  40a254:	add    BYTE PTR [rax],al
  40a256:	add    BYTE PTR [rax],al
  40a258:	xor    BYTE PTR [rdx+0x0],ch
  40a25e:	add    BYTE PTR [rax],al
  40a260:	cmp    BYTE PTR [rdx+0x0],ch
  40a266:	add    BYTE PTR [rax],al
  40a268:	rex.X stos BYTE PTR es:[rdi],al
  40a26a:	add    BYTE PTR [rax],al
  40a26c:	add    BYTE PTR [rax],al
  40a26e:	add    BYTE PTR [rax],al
  40a270:	rex.WX stos BYTE PTR es:[rdi],al
  40a272:	add    BYTE PTR [rax],al
  40a274:	add    BYTE PTR [rax],al
  40a276:	add    BYTE PTR [rax],al
  40a278:	push   rsp
  40a279:	stos   BYTE PTR es:[rdi],al
  40a27a:	add    BYTE PTR [rax],al
  40a27c:	add    BYTE PTR [rax],al
  40a27e:	add    BYTE PTR [rax],al
  40a280:	pop    rsp
  40a281:	stos   BYTE PTR es:[rdi],al
  40a282:	add    BYTE PTR [rax],al
  40a284:	add    BYTE PTR [rax],al
  40a286:	add    BYTE PTR [rax],al
  40a288:	fs stos BYTE PTR es:[rdi],al
  40a28a:	add    BYTE PTR [rax],al
  40a28c:	add    BYTE PTR [rax],al
  40a28e:	add    BYTE PTR [rax],al
  40a290:	outs   dx,BYTE PTR ds:[rsi]
  40a291:	stos   BYTE PTR es:[rdi],al
  40a292:	add    BYTE PTR [rax],al
  40a294:	add    BYTE PTR [rax],al
  40a296:	add    BYTE PTR [rax],al
  40a298:	js     0x40a244
  40a29a:	add    BYTE PTR [rax],al
  40a29c:	add    BYTE PTR [rax],al
  40a29e:	add    BYTE PTR [rax],al
  40a2a0:	(bad)  
  40a2a1:	stos   BYTE PTR es:[rdi],al
  40a2a2:	add    BYTE PTR [rax],al
  40a2a4:	add    BYTE PTR [rax],al
  40a2a6:	add    BYTE PTR [rax],al
  40a2a8:	mov    WORD PTR [rdx+0x0],gs
  40a2ae:	add    BYTE PTR [rax],al
  40a2b0:	xchg   esi,eax
  40a2b1:	stos   BYTE PTR es:[rdi],al
  40a2b2:	add    BYTE PTR [rax],al
  40a2b4:	add    BYTE PTR [rax],al
  40a2b6:	add    BYTE PTR [rax],al
  40a2b8:	movabs al,ds:0xa8000000000000aa
  40a2c1:	stos   BYTE PTR es:[rdi],al
  40a2c2:	add    BYTE PTR [rax],al
  40a2c4:	add    BYTE PTR [rax],al
  40a2c6:	add    BYTE PTR [rax],al
  40a2c8:	mov    dl,0xaa
  40a2ca:	add    BYTE PTR [rax],al
  40a2cc:	add    BYTE PTR [rax],al
  40a2ce:	add    BYTE PTR [rax],al
  40a2d0:	mov    edx,0xaa
  40a2d5:	add    BYTE PTR [rax],al
  40a2d7:	add    ah,al
  40a2d9:	stos   BYTE PTR es:[rdi],al
  40a2da:	add    BYTE PTR [rax],al
  40a2dc:	add    BYTE PTR [rax],al
  40a2de:	add    BYTE PTR [rax],al
  40a2e0:	(bad)  
  40a2e1:	stos   BYTE PTR es:[rdi],al
  40a2e2:	add    BYTE PTR [rax],al
  40a2e4:	add    BYTE PTR [rax],al
  40a2e6:	add    BYTE PTR [rax],al
  40a2e8:	fsubr  DWORD PTR [rdx+0x0]
  40a2ee:	add    BYTE PTR [rax],al
  40a2f0:	loop   0x40a29c
	...
  40a2fe:	add    BYTE PTR [rax],al
  40a300:	mov    al,0xa5
  40a302:	add    BYTE PTR [rax],al
  40a304:	add    BYTE PTR [rax],al
  40a306:	add    BYTE PTR [rax],al
  40a308:	(bad)  
  40a309:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a30a:	add    BYTE PTR [rax],al
  40a30c:	add    BYTE PTR [rax],al
  40a30e:	add    BYTE PTR [rax],al
  40a310:	(bad)  
  40a311:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a312:	add    BYTE PTR [rax],al
  40a314:	add    BYTE PTR [rax],al
  40a316:	add    BYTE PTR [rax],al
  40a318:	call   0x40a3c2
  40a31d:	add    BYTE PTR [rax],al
  40a31f:	add    al,bh
  40a321:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40a322:	add    BYTE PTR [rax],al
  40a324:	add    BYTE PTR [rax],al
  40a326:	add    BYTE PTR [rax],al
  40a328:	or     al,0xa6
  40a32a:	add    BYTE PTR [rax],al
  40a32c:	add    BYTE PTR [rax],al
  40a32e:	add    BYTE PTR [rax],al
  40a330:	and    al,0xa6
  40a332:	add    BYTE PTR [rax],al
  40a334:	add    BYTE PTR [rax],al
  40a336:	add    BYTE PTR [rax],al
  40a338:	cmp    al,0xa6
  40a33a:	add    BYTE PTR [rax],al
  40a33c:	add    BYTE PTR [rax],al
  40a33e:	add    BYTE PTR [rax],al
  40a340:	push   rax
  40a341:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a342:	add    BYTE PTR [rax],al
  40a344:	add    BYTE PTR [rax],al
  40a346:	add    BYTE PTR [rax],al
  40a348:	push   0xa6
  40a34d:	add    BYTE PTR [rax],al
  40a34f:	add    BYTE PTR [rsi+riz*4+0x0],bh
  40a353:	add    BYTE PTR [rax],al
  40a355:	add    BYTE PTR [rax],al
  40a357:	add    BYTE PTR [rsi+riz*4+0x0],cl
  40a35e:	add    BYTE PTR [rax],al
  40a360:	cwde   
  40a361:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a362:	add    BYTE PTR [rax],al
  40a364:	add    BYTE PTR [rax],al
  40a366:	add    BYTE PTR [rax],al
  40a368:	lods   al,BYTE PTR ds:[rsi]
  40a369:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a36a:	add    BYTE PTR [rax],al
  40a36c:	add    BYTE PTR [rax],al
  40a36e:	add    BYTE PTR [rax],al
  40a370:	shl    BYTE PTR [rsi+0x0],0x0
  40a377:	add    ah,dl
  40a379:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a37a:	add    BYTE PTR [rax],al
  40a37c:	add    BYTE PTR [rax],al
  40a37e:	add    BYTE PTR [rax],al
  40a380:	loopne 0x40a328
  40a382:	add    BYTE PTR [rax],al
  40a384:	add    BYTE PTR [rax],al
  40a386:	add    BYTE PTR [rax],al
  40a388:	hlt    
  40a389:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a38a:	add    BYTE PTR [rax],al
  40a38c:	add    BYTE PTR [rax],al
  40a38e:	add    BYTE PTR [rax],al
  40a390:	add    al,0xa7
  40a392:	add    BYTE PTR [rax],al
  40a394:	add    BYTE PTR [rax],al
  40a396:	add    BYTE PTR [rax],al
  40a398:	adc    al,0xa7
  40a39a:	add    BYTE PTR [rax],al
  40a39c:	add    BYTE PTR [rax],al
  40a39e:	add    BYTE PTR [rax],al
  40a3a0:	and    al,0xa7
  40a3a2:	add    BYTE PTR [rax],al
  40a3a4:	add    BYTE PTR [rax],al
  40a3a6:	add    BYTE PTR [rax],al
  40a3a8:	cmp    al,0xa7
  40a3aa:	add    BYTE PTR [rax],al
  40a3ac:	add    BYTE PTR [rax],al
  40a3ae:	add    BYTE PTR [rax],al
  40a3b0:	push   rax
  40a3b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
  40a3be:	add    BYTE PTR [rax],al
  40a3c0:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
  40a3c2:	add    BYTE PTR [rax],al
  40a3c4:	add    BYTE PTR [rax],al
  40a3c6:	add    BYTE PTR [rax],al
  40a3c8:	jl     0x40a371
  40a3ca:	add    BYTE PTR [rax],al
  40a3cc:	add    BYTE PTR [rax],al
  40a3ce:	add    BYTE PTR [rax],al
  40a3d0:	xchg   esp,eax
  40a3d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3d2:	add    BYTE PTR [rax],al
  40a3d4:	add    BYTE PTR [rax],al
  40a3d6:	add    BYTE PTR [rax],al
  40a3d8:	test   al,0xa7
  40a3da:	add    BYTE PTR [rax],al
  40a3dc:	add    BYTE PTR [rax],al
  40a3de:	add    BYTE PTR [rax],al
  40a3e0:	mov    esi,0xa7
  40a3e5:	add    BYTE PTR [rax],al
  40a3e7:	add    ah,dl
  40a3e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3ea:	add    BYTE PTR [rax],al
  40a3ec:	add    BYTE PTR [rax],al
  40a3ee:	add    BYTE PTR [rax],al
  40a3f0:	in     al,0xa7
  40a3f2:	add    BYTE PTR [rax],al
  40a3f4:	add    BYTE PTR [rax],al
  40a3f6:	add    BYTE PTR [rax],al
  40a3f8:	mul    BYTE PTR [rdi+0x0]
  40a3fe:	add    BYTE PTR [rax],al
  40a400:	adc    BYTE PTR [rax+0x0],ch
  40a406:	add    BYTE PTR [rax],al
  40a408:	and    BYTE PTR [rax+0x0],ch
  40a40e:	add    BYTE PTR [rax],al
  40a410:	cmp    al,0xa8
  40a412:	add    BYTE PTR [rax],al
  40a414:	add    BYTE PTR [rax],al
  40a416:	add    BYTE PTR [rax],al
  40a418:	push   rsp
  40a419:	test   al,0x0
  40a41b:	add    BYTE PTR [rax],al
  40a41d:	add    BYTE PTR [rax],al
  40a41f:	add    BYTE PTR [rsi-0x58],ch
  40a422:	add    BYTE PTR [rax],al
  40a424:	add    BYTE PTR [rax],al
  40a426:	add    BYTE PTR [rax],al
  40a428:	test   BYTE PTR [rax+0x0],ch
  40a42e:	add    BYTE PTR [rax],al
  40a430:	cwde   
  40a431:	test   al,0x0
  40a433:	add    BYTE PTR [rax],al
  40a435:	add    BYTE PTR [rax],al
  40a437:	add    BYTE PTR [rdx+0xa8],dh
  40a43d:	add    BYTE PTR [rax],al
  40a43f:	add    dh,al
  40a441:	test   al,0x0
  40a443:	add    BYTE PTR [rax],al
  40a445:	add    BYTE PTR [rax],al
  40a447:	add    ah,ah
  40a449:	test   al,0x0
  40a44b:	add    BYTE PTR [rax],al
  40a44d:	add    BYTE PTR [rax],al
  40a44f:	add    ah,ch
  40a451:	test   al,0x0
  40a453:	add    BYTE PTR [rax],al
  40a455:	add    BYTE PTR [rax],al
  40a457:	add    BYTE PTR [rax],al
  40a459:	test   eax,0x0
  40a45e:	add    BYTE PTR [rax],al
  40a460:	(bad)  
  40a461:	test   eax,0x0
  40a466:	add    BYTE PTR [rax],al
  40a468:	sub    ch,BYTE PTR [rcx+0x0]
  40a46e:	add    BYTE PTR [rax],al
  40a470:	cmp    al,0xa9
	...
  40a47e:	add    BYTE PTR [rax],al
  40a480:	rex.WR test rax,0x0
  40a486:	add    BYTE PTR [rax],al
  40a488:	fs test eax,0x0
  40a48e:	add    BYTE PTR [rax],al
  40a490:	outs   dx,BYTE PTR ds:[rsi]
  40a491:	test   eax,0x0
  40a496:	add    BYTE PTR [rax],al
  40a498:	jl     0x40a443
  40a49a:	add    BYTE PTR [rax],al
  40a49c:	add    BYTE PTR [rax],al
  40a49e:	add    BYTE PTR [rax],al
  40a4a0:	mov    WORD PTR [rcx+0x0],gs
  40a4a6:	add    BYTE PTR [rax],al
  40a4a8:	cwde   
  40a4a9:	test   eax,0x0
  40a4ae:	add    BYTE PTR [rax],al
  40a4b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4b1:	test   eax,0x0
  40a4b6:	add    BYTE PTR [rax],al
  40a4b8:	mov    dh,0xa9
  40a4ba:	add    BYTE PTR [rax],al
  40a4bc:	add    BYTE PTR [rax],al
  40a4be:	add    BYTE PTR [rax],al
  40a4c0:	enter  0xa9,0x0
  40a4c4:	add    BYTE PTR [rax],al
  40a4c6:	add    BYTE PTR [rax],al
  40a4c8:	fsubr  QWORD PTR [rcx+0x0]
  40a4ce:	add    BYTE PTR [rax],al
  40a4d0:	out    0xa9,al
  40a4d2:	add    BYTE PTR [rax],al
  40a4d4:	add    BYTE PTR [rax],al
  40a4d6:	add    BYTE PTR [rax],al
  40a4d8:	hlt    
  40a4d9:	test   eax,0x0
  40a4de:	add    BYTE PTR [rax],al
  40a4e0:	(bad)  
  40a4e1:	test   eax,0x0
  40a4e6:	add    BYTE PTR [rax],al
  40a4e8:	or     BYTE PTR [rdx+0x0],ch
  40a4ee:	add    BYTE PTR [rax],al
  40a4f0:	adc    al,0xaa
  40a4f2:	add    BYTE PTR [rax],al
  40a4f4:	add    BYTE PTR [rax],al
  40a4f6:	add    BYTE PTR [rax],al
  40a4f8:	sbb    al,0xaa
  40a4fa:	add    BYTE PTR [rax],al
  40a4fc:	add    BYTE PTR [rax],al
  40a4fe:	add    BYTE PTR [rax],al
  40a500:	es stos BYTE PTR es:[rdi],al
  40a502:	add    BYTE PTR [rax],al
  40a504:	add    BYTE PTR [rax],al
  40a506:	add    BYTE PTR [rax],al
  40a508:	xor    BYTE PTR [rdx+0x0],ch
  40a50e:	add    BYTE PTR [rax],al
  40a510:	cmp    BYTE PTR [rdx+0x0],ch
  40a516:	add    BYTE PTR [rax],al
  40a518:	rex.X stos BYTE PTR es:[rdi],al
  40a51a:	add    BYTE PTR [rax],al
  40a51c:	add    BYTE PTR [rax],al
  40a51e:	add    BYTE PTR [rax],al
  40a520:	rex.WX stos BYTE PTR es:[rdi],al
  40a522:	add    BYTE PTR [rax],al
  40a524:	add    BYTE PTR [rax],al
  40a526:	add    BYTE PTR [rax],al
  40a528:	push   rsp
  40a529:	stos   BYTE PTR es:[rdi],al
  40a52a:	add    BYTE PTR [rax],al
  40a52c:	add    BYTE PTR [rax],al
  40a52e:	add    BYTE PTR [rax],al
  40a530:	pop    rsp
  40a531:	stos   BYTE PTR es:[rdi],al
  40a532:	add    BYTE PTR [rax],al
  40a534:	add    BYTE PTR [rax],al
  40a536:	add    BYTE PTR [rax],al
  40a538:	fs stos BYTE PTR es:[rdi],al
  40a53a:	add    BYTE PTR [rax],al
  40a53c:	add    BYTE PTR [rax],al
  40a53e:	add    BYTE PTR [rax],al
  40a540:	outs   dx,BYTE PTR ds:[rsi]
  40a541:	stos   BYTE PTR es:[rdi],al
  40a542:	add    BYTE PTR [rax],al
  40a544:	add    BYTE PTR [rax],al
  40a546:	add    BYTE PTR [rax],al
  40a548:	js     0x40a4f4
  40a54a:	add    BYTE PTR [rax],al
  40a54c:	add    BYTE PTR [rax],al
  40a54e:	add    BYTE PTR [rax],al
  40a550:	(bad)  
  40a551:	stos   BYTE PTR es:[rdi],al
  40a552:	add    BYTE PTR [rax],al
  40a554:	add    BYTE PTR [rax],al
  40a556:	add    BYTE PTR [rax],al
  40a558:	mov    WORD PTR [rdx+0x0],gs
  40a55e:	add    BYTE PTR [rax],al
  40a560:	xchg   esi,eax
  40a561:	stos   BYTE PTR es:[rdi],al
  40a562:	add    BYTE PTR [rax],al
  40a564:	add    BYTE PTR [rax],al
  40a566:	add    BYTE PTR [rax],al
  40a568:	movabs al,ds:0xa8000000000000aa
  40a571:	stos   BYTE PTR es:[rdi],al
  40a572:	add    BYTE PTR [rax],al
  40a574:	add    BYTE PTR [rax],al
  40a576:	add    BYTE PTR [rax],al
  40a578:	mov    dl,0xaa
  40a57a:	add    BYTE PTR [rax],al
  40a57c:	add    BYTE PTR [rax],al
  40a57e:	add    BYTE PTR [rax],al
  40a580:	mov    edx,0xaa
  40a585:	add    BYTE PTR [rax],al
  40a587:	add    ah,al
  40a589:	stos   BYTE PTR es:[rdi],al
  40a58a:	add    BYTE PTR [rax],al
  40a58c:	add    BYTE PTR [rax],al
  40a58e:	add    BYTE PTR [rax],al
  40a590:	(bad)  
  40a591:	stos   BYTE PTR es:[rdi],al
  40a592:	add    BYTE PTR [rax],al
  40a594:	add    BYTE PTR [rax],al
  40a596:	add    BYTE PTR [rax],al
  40a598:	fsubr  DWORD PTR [rdx+0x0]
  40a59e:	add    BYTE PTR [rax],al
  40a5a0:	loop   0x40a54c
	...
  40a5ae:	add    BYTE PTR [rax],al
  40a5b0:	or     al,0x0
  40a5b2:	rex.RX movsxd r8d,DWORD PTR [rbx+0x61]
  40a5b6:	movsxd ebp,DWORD PTR [rax+0x65]
  40a5b9:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40a5bb:	jo     0x40a636
  40a5bd:	push   rbx
  40a5be:	gs je  0x40a5c1
  40a5c1:	add    BYTE PTR [rax],al
  40a5c3:	add    BYTE PTR [rsi],cl
  40a5c5:	add    BYTE PTR [rsi+0x63],al
  40a5c8:	rex.XB (bad) 
  40a5ca:	movsxd ebp,DWORD PTR [rax+0x65]
  40a5cd:	imul   r14d,DWORD PTR [rdx+0x0],0x10000000
  40a5d5:	add    BYTE PTR [rsi+0x63],al
  40a5d8:	rex.XB (bad) 
  40a5da:	movsxd ebp,DWORD PTR [rax+0x65]
  40a5dd:	rex.WRX jne 0x40a64d
  40a5e0:	push   rbx
  40a5e1:	jne    0x40a645
  40a5e3:	imul   esi,DWORD PTR fs:[rdx+0x0],0x46001100
  40a5eb:	movsxd eax,DWORD PTR [rbx+0x61]
  40a5ee:	movsxd ebp,DWORD PTR [rax+0x65]
  40a5f1:	push   rbx
  40a5f2:	jne    0x40a656
  40a5f4:	imul   esi,DWORD PTR fs:[rdx+0x0],0x6346002a
  40a5fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40a5fe:	outs   dx,BYTE PTR ds:[rsi]
  40a5ff:	imul   sp,WORD PTR [rdi+0x44],0x7365
  40a605:	je     0x40a679
  40a607:	outs   dx,DWORD PTR ds:[rsi]
  40a608:	jns    0x40a60a
  40a60a:	add    BYTE PTR [rax],al
  40a60c:	xor    eax,DWORD PTR [rax]
  40a60e:	rex.RX movsxd r8d,DWORD PTR [rbx+0x6f]
  40a612:	outs   dx,BYTE PTR ds:[rsi]
  40a613:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40a619:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a61b:	outs   dx,BYTE PTR ds:[rsi]
  40a61c:	je     0x40a662
  40a61e:	imul   esi,DWORD PTR [rdx+0x73],0x3b000000
  40a625:	add    BYTE PTR [rsi+0x63],al
  40a628:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40a62a:	outs   dx,BYTE PTR ds:[rsi]
  40a62b:	imul   sp,WORD PTR [rdi+0x53],0x7465
  40a631:	rex.XB jne 0x40a6a6
  40a634:	jb     0x40a69b
  40a636:	outs   dx,BYTE PTR ds:[rsi]
  40a637:	je     0x40a639
  40a639:	add    BYTE PTR [rax],al
  40a63b:	add    BYTE PTR [rax+rax*1+0x46],al
  40a63f:	movsxd eax,DWORD PTR [rcx+rbp*2+0x72]
  40a643:	rex.XB (bad) 
  40a645:	movsxd ebp,DWORD PTR [rax+0x65]
  40a648:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40a64a:	(bad)  
  40a64b:	add    BYTE PTR fs:[rax],al
  40a64e:	add    BYTE PTR [rax],al
  40a650:	add    BYTE PTR [r14+0x63],r8b
  40a654:	imul   r14d,DWORD PTR [rdx+0x43],0x65686361
  40a65c:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40a65e:	(bad)  
  40a65f:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x49000000
  40a669:	add    BYTE PTR [rsi+0x63],al
  40a66c:	imul   r14d,DWORD PTR [rdx+0x43],0x65686361
  40a674:	push   rbp
  40a675:	outs   dx,BYTE PTR ds:[rsi]
  40a676:	ins    BYTE PTR es:[rdi],dx
  40a677:	outs   dx,DWORD PTR ds:[rsi]
  40a678:	(bad)  
  40a679:	add    BYTE PTR fs:[rax],al
  40a67c:	rex.WRB add BYTE PTR [r14+0x63],r8b
  40a680:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x72694473
  40a689:	add    BYTE PTR [rax],al
  40a68b:	add    BYTE PTR [rdi+0x0],cl
  40a68e:	rex.RX movsxd r8d,DWORD PTR [rsi+0x69]
  40a692:	outs   dx,BYTE PTR ds:[rsi]
  40a693:	imul   eax,DWORD PTR [rax],0x55000000
  40a699:	add    BYTE PTR [rsi+0x63],al
  40a69c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a69e:	outs   dx,BYTE PTR ds:[rsi]
  40a69f:	je     0x40a6f4
  40a6a1:	gs je  0x40a6e8
  40a6a4:	gs jae 0x40a71b
  40a6a7:	jb     0x40a718
  40a6a9:	jns    0x40a6ab
  40a6ab:	add    BYTE PTR [rsi+0x0],ah
  40a6ae:	rex.RX movsxd r9d,DWORD PTR [rcx+0x6e]
  40a6b2:	imul   esi,DWORD PTR [rsp+rcx*2+0x6f],0x6f436461
  40a6ba:	outs   dx,BYTE PTR ds:[rsi]
  40a6bb:	imul   sp,WORD PTR [rdi+0x0],0x9f00
  40a6c1:	add    BYTE PTR [rsi+0x63],al
  40a6c4:	push   rax
  40a6c5:	(bad)  
  40a6c6:	je     0x40a73c
  40a6c8:	gs jb  0x40a739
  40a6cb:	rex.RX outs dx,DWORD PTR ds:[rsi]
  40a6cd:	jb     0x40a73c
  40a6cf:	(bad)  
  40a6d0:	je     0x40a6d2
  40a6d2:	add    BYTE PTR [rax],al
  40a6d4:	mov    ebx,0x53634600
  40a6d9:	je     0x40a74d
  40a6db:	rex.RX jb 0x40a743
  40a6de:	add    BYTE PTR gs:[rax+rax*1+0x74536346],bh
  40a6e6:	jb     0x40a734
  40a6e8:	imul   esi,DWORD PTR [rbx+0x74],0x61657243
  40a6ef:	je     0x40a756
  40a6f1:	add    BYTE PTR [rax],al
  40a6f3:	add    BYTE PTR [rbp+0x53634600],bh
  40a6f9:	je     0x40a76d
  40a6fb:	imul   r14,QWORD PTR [rbx+0x74],0x656e6f44
  40a703:	add    BYTE PTR [rdi+0x53634600],bh
  40a709:	je     0x40a77d
  40a70b:	imul   r14,QWORD PTR [rbx+0x74],0x7478654e
  40a713:	add    cl,al
  40a715:	add    BYTE PTR [rsi+0x63],al
  40a718:	push   rbx
  40a719:	je     0x40a78d
  40a71b:	push   rbx
  40a71c:	gs je  0x40a760
  40a71f:	fs add BYTE PTR fs:[rax],al
  40a723:	add    dl,al
  40a725:	add    BYTE PTR [rsi+0x63],al
  40a728:	push   rbx
  40a729:	je     0x40a79d
  40a72b:	push   rbx
  40a72c:	gs je  0x40a770
  40a72f:	fs imul r13d,DWORD PTR fs:[rbp+r12*2+0x6e],0x656d61
  40a73a:	add    BYTE PTR [rax],al
  40a73c:	ret    
  40a73d:	add    BYTE PTR [rsi+0x63],al
  40a740:	push   rbx
  40a741:	je     0x40a7b5
  40a743:	push   rbx
  40a744:	gs je  0x40a78a
  40a747:	jb     0x40a7ae
  40a749:	(bad)  
  40a74a:	je     0x40a7b1
  40a74c:	add    BYTE PTR [rax],al
  40a74e:	add    BYTE PTR [rax],al
  40a750:	(bad)
  40a753:	movsxd edx,DWORD PTR [rbx+0x74]
  40a756:	jb     0x40a7ab
  40a758:	gs je  0x40a79f
  40a75b:	gs jae 0x40a7d2
  40a75e:	jb     0x40a7cf
  40a760:	jns    0x40a762
  40a762:	add    BYTE PTR [rax],al
  40a764:	fadd   DWORD PTR [rax]
  40a766:	rex.R
  40a767:	gs ins BYTE PTR es:[rdi],dx
  40a769:	gs je  0x40a7d1
  40a76c:	rex.XB jb 0x40a7d8
  40a76f:	je     0x40a7da
  40a771:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a774:	push   rbx
  40a775:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a77a:	outs   dx,BYTE PTR ds:[rsi]
  40a77b:	add    al,bh
  40a77d:	add    BYTE PTR [rbp+0x6e],al
  40a780:	je     0x40a7e7
  40a782:	jb     0x40a7c7
  40a784:	jb     0x40a7ef
  40a786:	je     0x40a7f1
  40a788:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a78b:	push   rbx
  40a78c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a791:	outs   dx,BYTE PTR ds:[rsi]
  40a792:	add    BYTE PTR [rax],al
  40a794:	int    0x1
  40a796:	rex.RXB
  40a797:	gs je  0x40a7dd
  40a79a:	jne    0x40a80e
  40a79c:	jb     0x40a803
  40a79e:	outs   dx,BYTE PTR ds:[rsi]
  40a79f:	je     0x40a7f1
  40a7a1:	jb     0x40a812
  40a7a3:	movsxd esp,DWORD PTR [rbp+0x73]
  40a7a6:	jae    0x40a7a8
  40a7a8:	(bad)  
  40a7a9:	add    DWORD PTR [rdi+0x65],eax
  40a7ac:	je     0x40a7f1
  40a7ae:	jne    0x40a822
  40a7b0:	jb     0x40a817
  40a7b2:	outs   dx,BYTE PTR ds:[rsi]
  40a7b3:	je     0x40a805
  40a7b5:	jb     0x40a826
  40a7b7:	movsxd esp,DWORD PTR [rbp+0x73]
  40a7ba:	jae    0x40a805
  40a7bc:	fs add dl,dl
  40a7bf:	add    DWORD PTR [rdi+0x65],eax
  40a7c2:	je     0x40a807
  40a7c4:	jne    0x40a838
  40a7c6:	jb     0x40a82d
  40a7c8:	outs   dx,BYTE PTR ds:[rsi]
  40a7c9:	je     0x40a81f
  40a7cb:	push   0x64616572
  40a7d0:	rex.WB
  40a7d1:	add    BYTE PTR fs:[rax],al
  40a7d4:	adc    BYTE PTR [rdx],al
  40a7d6:	rex.RXB
  40a7d7:	gs je  0x40a826
  40a7da:	(bad)  
  40a7db:	jae    0x40a851
  40a7dd:	rex.RB jb 0x40a852
  40a7e0:	outs   dx,DWORD PTR ds:[rsi]
  40a7e1:	jb     0x40a7e3
  40a7e3:	add    BYTE PTR [rbx+0x2],dh
  40a7e6:	rex.RXB
  40a7e7:	gs je  0x40a83d
  40a7ea:	je     0x40a84d
  40a7ec:	jb     0x40a862
  40a7ee:	jne    0x40a860
  40a7f0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40a7f2:	outs   dx,WORD PTR ds:[rsi]
  40a7f4:	add    BYTE PTR [r10+0x74654702],cl
  40a7fb:	push   rbx
  40a7fc:	jns    0x40a871
  40a7fe:	je     0x40a865
  40a800:	ins    DWORD PTR es:[rdi],dx
  40a801:	push   rsp
  40a802:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40a809:	ins    BYTE PTR es:[rdi],dx
  40a80a:	gs push rsp
  40a80c:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40a813:	gs je  0x40a86a
  40a816:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40a81d:	je     0x40a81f
  40a81f:	add    cl,bh
  40a821:	add    cl,BYTE PTR [rcx+0x6e]
  40a824:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40a82c:	rex.XB jb 0x40a898
  40a82f:	je     0x40a89a
  40a831:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a834:	push   rbx
  40a835:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a83a:	outs   dx,BYTE PTR ds:[rsi]
  40a83b:	add    BYTE PTR [rbx+0x3],cl
  40a83e:	rex.WR
  40a83f:	gs (bad) 
  40a841:	jbe    0x40a8a8
  40a843:	rex.XB jb 0x40a8af
  40a846:	je     0x40a8b1
  40a848:	movsxd esp,DWORD PTR [rcx+0x6c]
  40a84b:	push   rbx
  40a84c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40a851:	outs   dx,BYTE PTR ds:[rsi]
  40a852:	add    BYTE PTR [rax],al
  40a854:	mov    ebx,0x65755103
  40a859:	jb     0x40a8d4
  40a85b:	push   rax
  40a85c:	gs jb  0x40a8c5
  40a85f:	outs   dx,DWORD PTR ds:[rsi]
  40a860:	jb     0x40a8cf
  40a862:	(bad)  
  40a863:	outs   dx,BYTE PTR ds:[rsi]
  40a864:	movsxd esp,DWORD PTR [rbp+0x43]
  40a867:	outs   dx,DWORD PTR ds:[rsi]
  40a868:	jne    0x40a8d8
  40a86a:	je     0x40a8d1
  40a86c:	jb     0x40a86e
  40a86e:	add    DWORD PTR [rdx+rdx*2],eax
  40a871:	je     0x40a8df
  40a873:	rex.B
  40a874:	fs fs rex.RX jne 0x40a8e7
  40a879:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a87d:	outs   dx,BYTE PTR ds:[rsi]
  40a87e:	push   rsp
  40a87f:	(bad)  
  40a880:	(bad)  
  40a881:	ins    BYTE PTR es:[rdi],dx
  40a882:	add    BYTE PTR gs:[rdx],al
  40a885:	add    al,0x52
  40a887:	je     0x40a8f5
  40a889:	rex.XB (bad) 
  40a88b:	jo     0x40a901
  40a88d:	jne    0x40a901
  40a88f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40a892:	outs   dx,BYTE PTR ds:[rsi]
  40a893:	je     0x40a8fa
  40a895:	js     0x40a90b
  40a897:	add    BYTE PTR [rcx],cl
  40a899:	add    al,0x52
  40a89b:	je     0x40a909
  40a89d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40a89f:	outs   dx,DWORD PTR ds:[rsi]
  40a8a0:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40a8a4:	jne    0x40a914
  40a8a6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40a8aa:	outs   dx,BYTE PTR ds:[rsi]
  40a8ab:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40a8ad:	je     0x40a921
  40a8af:	jns    0x40a8b1
  40a8b1:	add    BYTE PTR [rax],dl
  40a8b3:	add    al,0x52
  40a8b5:	je     0x40a923
  40a8b7:	push   rsi
  40a8b8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40a8bf:	outs   dx,BYTE PTR ds:[rsi]
  40a8c0:	ja     0x40a92b
  40a8c2:	outs   dx,BYTE PTR ds:[rsi]
  40a8c3:	add    BYTE PTR fs:[rax],al
  40a8c6:	lahf   
  40a8c7:	add    al,0x53
  40a8c9:	gs je  0x40a921
  40a8cc:	outs   dx,BYTE PTR ds:[rsi]
  40a8cd:	push   0x6c646e61
  40a8d2:	gs fs rex.RB js 0x40a93a
  40a8d7:	gs jo  0x40a94e
  40a8da:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a8e1:	gs jb  0x40a8e4
  40a8e4:	lods   al,BYTE PTR ds:[rsi]
  40a8e5:	add    al,0x53
  40a8e7:	ins    BYTE PTR es:[rdi],dx
  40a8e8:	gs gs jo 0x40a8ec
  40a8ec:	mov    edx,0x72655404
  40a8f1:	ins    DWORD PTR es:[rdi],dx
  40a8f2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40a8f9:	outs   dx,DWORD PTR ds:[rsi]
  40a8fa:	movsxd esp,DWORD PTR [rbp+0x73]
  40a8fd:	jae    0x40a8ff
  40a8ff:	add    cl,al
  40a901:	add    al,0x54
  40a903:	ins    BYTE PTR es:[rdi],dx
  40a904:	jae    0x40a94d
  40a906:	gs je  0x40a95f
  40a909:	(bad)  
  40a90a:	ins    BYTE PTR es:[rdi],dx
  40a90b:	jne    0x40a972
  40a90d:	add    dh,cl
  40a90f:	add    al,0x55
  40a911:	outs   dx,BYTE PTR ds:[rsi]
  40a912:	push   0x6c646e61
  40a917:	gs fs rex.RB js 0x40a97f
  40a91c:	gs jo  0x40a993
  40a91f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40a926:	gs jb  0x40a929
  40a929:	add    ah,ch
  40a92b:	add    al,0x56
  40a92d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40a934:	jb     0x40a9a5
  40a936:	je     0x40a99d
  40a938:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40a93c:	out    dx,al
  40a93d:	add    al,0x56
  40a93f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40a946:	jne    0x40a9ad
  40a948:	jb     0x40a9c3
  40a94a:	add    BYTE PTR [rax],al
  40a94c:	(bad)  
  40a94d:	add    BYTE PTR [rdi+0x5f],bl
  40a950:	rex.XB pop r15
  40a952:	jae    0x40a9c4
  40a954:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40a958:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40a95f:	ins    BYTE PTR es:[rdi],dx
  40a960:	gs jb  0x40a963
  40a963:	add    BYTE PTR [rsi+0x0],al
  40a966:	pop    rdi
  40a967:	pop    rdi
  40a968:	(bad)  
  40a969:	jb     0x40a9d2
  40a96b:	jbe    0x40a96d
  40a96d:	add    BYTE PTR [rsi+0x0],cl
  40a970:	pop    rdi
  40a971:	pop    rdi
  40a972:	fs ins BYTE PTR es:[rdi],dx
  40a974:	ins    BYTE PTR es:[rdi],dx
  40a975:	outs   dx,DWORD PTR ds:[rsi]
  40a976:	outs   dx,BYTE PTR ds:[rsi]
  40a977:	gs js  0x40a9e3
  40a97a:	je     0x40a97c
  40a97c:	push   rcx
  40a97d:	add    BYTE PTR [rdi+0x5f],bl
  40a980:	addr32 gs je 0x40a9f1
  40a984:	(bad)  
  40a985:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40a98c:	push   rdx
  40a98d:	add    BYTE PTR [rdi+0x5f],bl
  40a990:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40a997:	add    BYTE PTR [rbx+0x0],dl
  40a99a:	pop    rdi
  40a99b:	pop    rdi
  40a99c:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40a9a3:	movsxd eax,DWORD PTR [rax]
  40a9a5:	add    BYTE PTR [rdx+0x0],bl
  40a9a8:	pop    rdi
  40a9a9:	pop    rdi
  40a9aa:	ins    BYTE PTR es:[rdi],dx
  40a9ab:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40a9ae:	jbe    0x40aa0f
  40a9b0:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40a9b7:	add    BYTE PTR [rdi+0x5f],bl
  40a9ba:	jae    0x40aa21
  40a9bc:	je     0x40aa1d
  40a9be:	(bad)  
  40a9bf:	jo     0x40aa31
  40a9c1:	pop    rdi
  40a9c2:	je     0x40aa3d
  40a9c4:	jo     0x40aa2b
  40a9c6:	add    BYTE PTR [rax],al
  40a9c8:	(bad)  
  40a9c9:	add    BYTE PTR [rdi+0x5f],bl
  40a9cc:	jae    0x40aa33
  40a9ce:	je     0x40aa45
  40a9d0:	jae    0x40aa37
  40a9d2:	jb     0x40aa41
  40a9d4:	(bad)  
  40a9d5:	je     0x40aa3f
  40a9d7:	gs jb  0x40aa4c
  40a9da:	add    BYTE PTR [rax],al
  40a9dc:	jno    0x40a9de
  40a9de:	pop    rdi
  40a9df:	(bad)  
  40a9e0:	movsxd ebp,DWORD PTR [rbp+0x64]
  40a9e3:	ins    BYTE PTR es:[rdi],dx
  40a9e4:	outs   dx,BYTE PTR ds:[rsi]
  40a9e5:	add    BYTE PTR [rax+0x0],bh
  40a9e8:	pop    rdi
  40a9e9:	(bad)  
  40a9ea:	ins    DWORD PTR es:[rdi],dx
  40a9eb:	jae    0x40aa54
  40a9ed:	pop    rdi
  40a9ee:	gs js  0x40aa5a
  40a9f1:	je     0x40a9f3
  40a9f3:	add    BYTE PTR [rdx+0x65635f00],cl
  40a9f9:	js     0x40aa64
  40a9fb:	je     0x40a9fd
  40a9fd:	add    dl,bl
  40a9ff:	add    BYTE PTR [rdi+0x66],bl
  40aa02:	ins    DWORD PTR es:[rdi],dx
  40aa03:	outs   dx,DWORD PTR ds:[rsi]
  40aa04:	fs add BYTE PTR gs:[rax],al
  40aa08:	sbb    al,BYTE PTR [rcx]
  40aa0a:	pop    rdi
  40aa0b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40aa12:	ins    DWORD PTR es:[rdi],dx
  40aa13:	add    BYTE PTR [rax+0x6f6c5f01],al
  40aa19:	movsxd ebp,DWORD PTR [rbx+0x0]
  40aa1c:	and    eax,0x6e6f5f02
  40aa21:	gs js  0x40aa8d
  40aa24:	je     0x40aa26
  40aa26:	(bad)
  40aa2a:	outs   dx,BYTE PTR ds:[rsi]
  40aa2b:	ins    BYTE PTR es:[rdi],dx
  40aa2c:	outs   dx,DWORD PTR ds:[rsi]
  40aa2d:	movsxd ebp,DWORD PTR [rbx+0x0]
  40aa30:	jg     0x40aa35
  40aa32:	(bad)  
  40aa33:	(bad)  
  40aa34:	outs   dx,DWORD PTR ds:[rsi]
  40aa35:	jb     0x40aaab
  40aa37:	add    BYTE PTR [rax+0x6c616303],dl
  40aa3d:	ins    BYTE PTR es:[rdi],dx
  40aa3e:	outs   dx,DWORD PTR ds:[rsi]
  40aa3f:	movsxd eax,DWORD PTR [rax]
  40aa41:	add    BYTE PTR [rbp+0x69786503],bl
  40aa47:	je     0x40aa49
  40aa49:	add    BYTE PTR [rax+0x72706603],dh
  40aa4f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40aa56:	data16 jo 0x40aace
  40aa59:	je     0x40aabe
  40aa5b:	add    BYTE PTR [rdi+0x65726603],dh
  40aa61:	add    BYTE PTR gs:[rax],al
  40aa64:	ret    0x6603
  40aa67:	ja     0x40aadb
  40aa69:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40aa71:	gs je  0x40aad9
  40aa74:	outs   dx,BYTE PTR ds:[rsi]
  40aa75:	jbe    0x40aa77
  40aa77:	add    al,dh
  40aa79:	add    ebp,DWORD PTR [rbp+0x61]
  40aa7c:	ins    BYTE PTR es:[rdi],dx
  40aa7d:	ins    BYTE PTR es:[rdi],dx
  40aa7e:	outs   dx,DWORD PTR ds:[rsi]
  40aa7f:	movsxd eax,DWORD PTR [rax]
  40aa81:	add    al,bh
  40aa83:	add    ebp,DWORD PTR [rbp+0x65]
  40aa86:	ins    DWORD PTR es:[rdi],dx
  40aa87:	movsxd esi,DWORD PTR [rax+0x79]
  40aa8a:	add    BYTE PTR [rax],al
  40aa8c:	inc    BYTE PTR [rbx]
  40aa8e:	jo     0x40aaf5
  40aa90:	jb     0x40ab04
  40aa92:	outs   dx,DWORD PTR ds:[rsi]
  40aa93:	jb     0x40aa95
  40aa95:	add    BYTE PTR [rcx],al
  40aa97:	add    al,0x70
  40aa99:	jb     0x40ab04
  40aa9b:	outs   dx,BYTE PTR ds:[rsi]
  40aa9c:	je     0x40ab04
  40aa9e:	add    BYTE PTR [rax],al
  40aaa0:	add    eax,DWORD PTR [rax+rsi*2]
  40aaa3:	jne    0x40ab19
  40aaa5:	movsxd eax,DWORD PTR [rax]
  40aaa7:	add    BYTE PTR [rsp+rax*1],al
  40aaaa:	jo     0x40ab21
  40aaac:	je     0x40ab11
  40aaae:	push   0x5007261
  40aab3:	add    al,0x70
  40aab5:	jne    0x40ab2b
  40aab7:	jae    0x40aab9
  40aab9:	add    BYTE PTR [rsi],dl
  40aabb:	add    al,0x73
  40aabd:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40aac4:	and    eax,DWORD PTR [rbx+rsi*2]
  40aac7:	je     0x40ab3b
  40aac9:	movsxd ebp,DWORD PTR [rax+0x72]
  40aacc:	add    BYTE PTR [rax],al
  40aace:	sub    eax,DWORD PTR [rbx+rsi*2]
  40aad1:	je     0x40ab45
  40aad3:	ins    BYTE PTR es:[rdi],dx
  40aad4:	outs   dx,BYTE PTR gs:[rsi]
  40aad6:	add    BYTE PTR [rax],al
  40aad8:	cs add al,0x73
  40aadb:	je     0x40ab4f
  40aadd:	outs   dx,BYTE PTR ds:[rsi]
  40aade:	movsxd ebp,DWORD PTR [rbp+0x70]
  40aae1:	add    BYTE PTR [rsi+0x4],cl
  40aae4:	jbe    0x40ab4c
  40aae6:	jo     0x40ab5a
  40aae8:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40aaef:	add    BYTE PTR [rax],al
  40aaf1:	movabs al,ds:0xa0000000a0000000
  40aafa:	add    BYTE PTR [rax],al
  40aafc:	add    BYTE PTR [rax-0x60000000],ah
  40ab02:	add    BYTE PTR [rax],al
  40ab04:	add    BYTE PTR [rax-0x60000000],ah
  40ab0a:	add    BYTE PTR [rax],al
  40ab0c:	add    BYTE PTR [rax-0x60000000],ah
  40ab12:	add    BYTE PTR [rax],al
  40ab14:	add    BYTE PTR [rax-0x60000000],ah
  40ab1a:	add    BYTE PTR [rax],al
  40ab1c:	add    BYTE PTR [rax-0x60000000],ah
  40ab22:	add    BYTE PTR [rax],al
  40ab24:	add    BYTE PTR [rax-0x60000000],ah
  40ab2a:	add    BYTE PTR [rax],al
  40ab2c:	add    BYTE PTR [rax-0x60000000],ah
  40ab32:	add    BYTE PTR [rax],al
  40ab34:	add    BYTE PTR [rax-0x60000000],ah
  40ab3a:	add    BYTE PTR [rax],al
  40ab3c:	add    BYTE PTR [rax-0x60000000],ah
  40ab42:	add    BYTE PTR [rax],al
  40ab44:	add    BYTE PTR [rax-0x60000000],ah
  40ab4a:	add    BYTE PTR [rax],al
  40ab4c:	ins    BYTE PTR es:[rdi],dx
  40ab4d:	imul   esp,DWORD PTR [rdx+0x66],0x63746e6f
  40ab54:	outs   dx,DWORD PTR ds:[rsi]
  40ab55:	outs   dx,BYTE PTR ds:[rsi]
  40ab56:	imul   sp,WORD PTR [rdi+0x2d],0x2e31
  40ab5c:	fs ins BYTE PTR es:[rdi],dx
  40ab5e:	ins    BYTE PTR es:[rdi],dx
  40ab5f:	add    BYTE PTR [rax+riz*4],dl
  40ab62:	add    BYTE PTR [rax],al
  40ab64:	adc    al,0xa0
  40ab66:	add    BYTE PTR [rax],al
  40ab68:	adc    al,0xa0
  40ab6a:	add    BYTE PTR [rax],al
  40ab6c:	adc    al,0xa0
  40ab6e:	add    BYTE PTR [rax],al
  40ab70:	adc    al,0xa0
  40ab72:	add    BYTE PTR [rax],al
  40ab74:	adc    al,0xa0
  40ab76:	add    BYTE PTR [rax],al
  40ab78:	adc    al,0xa0
  40ab7a:	add    BYTE PTR [rax],al
  40ab7c:	adc    al,0xa0
  40ab7e:	add    BYTE PTR [rax],al
  40ab80:	adc    al,0xa0
  40ab82:	add    BYTE PTR [rax],al
  40ab84:	adc    al,0xa0
  40ab86:	add    BYTE PTR [rax],al
  40ab88:	adc    al,0xa0
  40ab8a:	add    BYTE PTR [rax],al
  40ab8c:	adc    al,0xa0
  40ab8e:	add    BYTE PTR [rax],al
  40ab90:	adc    al,0xa0
  40ab92:	add    BYTE PTR [rax],al
  40ab94:	adc    al,0xa0
  40ab96:	add    BYTE PTR [rax],al
  40ab98:	adc    al,0xa0
  40ab9a:	add    BYTE PTR [rax],al
  40ab9c:	adc    al,0xa0
  40ab9e:	add    BYTE PTR [rax],al
  40aba0:	adc    al,0xa0
  40aba2:	add    BYTE PTR [rax],al
  40aba4:	adc    al,0xa0
  40aba6:	add    BYTE PTR [rax],al
  40aba8:	adc    al,0xa0
  40abaa:	add    BYTE PTR [rax],al
  40abac:	adc    al,0xa0
  40abae:	add    BYTE PTR [rax],al
  40abb0:	adc    al,0xa0
  40abb2:	add    BYTE PTR [rax],al
  40abb4:	adc    al,0xa0
  40abb6:	add    BYTE PTR [rax],al
  40abb8:	adc    al,0xa0
  40abba:	add    BYTE PTR [rax],al
  40abbc:	rex.WXB
  40abbd:	rex.RB push r10
  40abbf:	rex.WRX
  40abc0:	rex.RB
  40abc1:	xor    r14,QWORD PTR [rdx]
  40abc4:	cs fs ins BYTE PTR es:[rdi],dx
  40abc7:	ins    BYTE PTR es:[rdi],dx
  40abc8:	add    BYTE PTR [rax],al
  40abca:	add    BYTE PTR [rax],al
  40abcc:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abd2:	add    BYTE PTR [rax],al
  40abd4:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abda:	add    BYTE PTR [rax],al
  40abdc:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abe2:	add    BYTE PTR [rax],al
  40abe4:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abea:	add    BYTE PTR [rax],al
  40abec:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abf2:	add    BYTE PTR [rax],al
  40abf4:	sub    BYTE PTR [rax-0x5fd80000],ah
  40abfa:	add    BYTE PTR [rax],al
  40abfc:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac02:	add    BYTE PTR [rax],al
  40ac04:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac0a:	add    BYTE PTR [rax],al
  40ac0c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac12:	add    BYTE PTR [rax],al
  40ac14:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac1a:	add    BYTE PTR [rax],al
  40ac1c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac22:	add    BYTE PTR [rax],al
  40ac24:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac2a:	add    BYTE PTR [rax],al
  40ac2c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac32:	add    BYTE PTR [rax],al
  40ac34:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac3a:	add    BYTE PTR [rax],al
  40ac3c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac42:	add    BYTE PTR [rax],al
  40ac44:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac4a:	add    BYTE PTR [rax],al
  40ac4c:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac52:	add    BYTE PTR [rax],al
  40ac54:	sub    BYTE PTR [rax-0x5fd80000],ah
  40ac5a:	add    BYTE PTR [rax],al
  40ac5c:	sub    BYTE PTR [rax+0x736d0000],ah
  40ac62:	jbe    0x40acc7
  40ac64:	jb     0x40acda
  40ac66:	cs fs ins BYTE PTR es:[rdi],dx
  40ac69:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040b000 <.CRT>:
	...
  40b008:	(bad)  
  40b009:	adc    DWORD PTR [rax+0x0],eax
	...
  40b020:	adc    BYTE PTR [rax],dl
  40b022:	add    BYTE PTR [rax],al
  40b025:	add    BYTE PTR [rax],al
  40b027:	add    BYTE PTR [rax+0x19],al
  40b02a:	add    BYTE PTR [rax],al
	...
  40b03d:	add    BYTE PTR [rax],al
  40b03f:	add    BYTE PTR [rax+0x1b],dh
  40b042:	add    BYTE PTR [rax],al
  40b045:	add    BYTE PTR [rax],al
  40b047:	add    BYTE PTR [rax+0x1b],al
  40b04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040c000 <.tls>:
	...
  40c020:	add    al,al
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax-0x40],ah
  40c02a:	add    BYTE PTR [rax],al
  40c02d:	add    BYTE PTR [rax],al
  40c02f:	add    BYTE PTR [rsi+rdx*4+0x40],bl
  40c033:	add    BYTE PTR [rax],al
  40c035:	add    BYTE PTR [rax],al
  40c037:	add    BYTE PTR [rax-0x50],al
  40c03a:	add    BYTE PTR [rax],al
	...
