
73bb2538c8a42b16397858d449d8558d666918a17e272aa74934b2014482a9d0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000001001000 <.text>:
 1001000:	rex.XB add DWORD PTR cs:[r8],eax
 1001004:	add    BYTE PTR [rax],al
 1001006:	add    BYTE PTR [rax],al
 1001008:	rex.XB add DWORD PTR ds:[r8],eax
 100100c:	add    BYTE PTR [rax],al
 100100e:	add    BYTE PTR [rax],al
 1001010:	and    BYTE PTR [rbx+0x1],al
	...
 100101f:	add    BYTE PTR [rax+0x43],ah
 1001022:	add    DWORD PTR [rax],eax
 1001024:	add    BYTE PTR [rax],al
 1001026:	add    BYTE PTR [rax],al
 1001028:	outs   dx,BYTE PTR ds:[rsi]
 1001029:	rex.XB add DWORD PTR [r8],eax
 100102c:	add    BYTE PTR [rax],al
 100102e:	add    BYTE PTR [rax],al
 1001030:	add    BYTE PTR [rbx+0x1],0x0
 1001034:	add    BYTE PTR [rax],al
 1001036:	add    BYTE PTR [rax],al
 1001038:	mov    es,WORD PTR [rbx+0x1]
 100103b:	add    BYTE PTR [rax],al
 100103d:	add    BYTE PTR [rax],al
 100103f:	add    BYTE PTR [rsi+0x143],bl
 1001045:	add    BYTE PTR [rax],al
 1001047:	add    BYTE PTR [rsi+0x143],ah
 100104d:	add    BYTE PTR [rax],al
 100104f:	add    BYTE PTR [rbx+rax*2+0x1],dh
 1001056:	add    BYTE PTR [rax],al
 1001058:	rol    BYTE PTR [rbx+0x1],0x0
 100105c:	add    BYTE PTR [rax],al
 100105e:	add    BYTE PTR [rax],al
 1001060:	(bad)  
 1001061:	rex.XB add DWORD PTR [r8],eax
 1001064:	add    BYTE PTR [rax],al
 1001066:	add    BYTE PTR [rax],al
 1001068:	fiadd  WORD PTR [rbx+0x1]
 100106b:	add    BYTE PTR [rax],al
 100106d:	add    BYTE PTR [rax],al
 100106f:	add    al,dh
 1001071:	rex.XB add DWORD PTR [r8],eax
 1001074:	add    BYTE PTR [rax],al
 1001076:	add    BYTE PTR [rax],al
 1001078:	add    BYTE PTR [rcx+rax*1+0x0],al
 100107c:	add    BYTE PTR [rax],al
 100107e:	add    BYTE PTR [rax],al
 1001080:	adc    al,0x44
 1001082:	add    DWORD PTR [rax],eax
 1001084:	add    BYTE PTR [rax],al
 1001086:	add    BYTE PTR [rax],al
 1001088:	sub    al,BYTE PTR [rcx+rax*1+0x0]
 100108c:	add    BYTE PTR [rax],al
 100108e:	add    BYTE PTR [rax],al
 1001090:	cmp    al,BYTE PTR [rcx+rax*1+0x0]
 1001094:	add    BYTE PTR [rax],al
 1001096:	add    BYTE PTR [rax],al
 1001098:	rex.WX
 1001099:	add    DWORD PTR [rax],r8d
 100109c:	add    BYTE PTR [rax],al
 100109e:	add    BYTE PTR [rax],al
 10010a0:	pop    rsi
 10010a1:	add    DWORD PTR [rax],r8d
 10010a4:	add    BYTE PTR [rax],al
 10010a6:	add    BYTE PTR [rax],al
 10010a8:	jb     0x10010ee
 10010aa:	add    DWORD PTR [rax],eax
 10010ac:	add    BYTE PTR [rax],al
 10010ae:	add    BYTE PTR [rax],al
 10010b0:	xchg   BYTE PTR [rcx+rax*1+0x0],al
 10010b4:	add    BYTE PTR [rax],al
 10010b6:	add    BYTE PTR [rax],al
 10010b8:	xchg   esp,eax
 10010b9:	add    DWORD PTR [rax],r8d
 10010bc:	add    BYTE PTR [rax],al
 10010be:	add    BYTE PTR [rax],al
 10010c0:	stos   BYTE PTR es:[rdi],al
 10010c1:	add    DWORD PTR [rax],r8d
 10010c4:	add    BYTE PTR [rax],al
 10010c6:	add    BYTE PTR [rax],al
 10010c8:	rol    BYTE PTR [rcx+rax*1+0x0],0x0
 10010cd:	add    BYTE PTR [rax],al
 10010cf:	add    dl,dl
 10010d1:	add    DWORD PTR [rax],r8d
 10010d4:	add    BYTE PTR [rax],al
 10010d6:	add    BYTE PTR [rax],al
 10010d8:	loop   0x100111e
 10010da:	add    DWORD PTR [rax],eax
 10010dc:	add    BYTE PTR [rax],al
 10010de:	add    BYTE PTR [rax],al
 10010e0:	clc    
 10010e1:	add    DWORD PTR [rax],r8d
 10010e4:	add    BYTE PTR [rax],al
 10010e6:	add    BYTE PTR [rax],al
 10010e8:	(bad)  
 10010e9:	add    DWORD PTR [r8],r8d
 10010ec:	add    BYTE PTR [rax],al
 10010ee:	add    BYTE PTR [rax],al
 10010f0:	and    BYTE PTR [rbp+0x1],al
 10010f3:	add    BYTE PTR [rax],al
 10010f5:	add    BYTE PTR [rax],al
 10010f7:	add    BYTE PTR [rdx],dh
 10010f9:	add    DWORD PTR [r8],r8d
 10010fc:	add    BYTE PTR [rax],al
 10010fe:	add    BYTE PTR [rax],al
 1001100:	rex.R
 1001101:	add    DWORD PTR [r8],r8d
 1001104:	add    BYTE PTR [rax],al
 1001106:	add    BYTE PTR [rax],al
 1001108:	js     0x1001154
 100110a:	add    DWORD PTR [rax],eax
 100110c:	add    BYTE PTR [rax],al
 100110e:	add    BYTE PTR [rax],al
 1001110:	(bad)  
 1001111:	rex.WX add QWORD PTR [rax],rax
 1001114:	add    BYTE PTR [rax],al
 1001116:	add    BYTE PTR [rax],al
 1001118:	push   rdx
 1001119:	rex.WX add QWORD PTR [rax],rax
 100111c:	add    BYTE PTR [rax],al
 100111e:	add    BYTE PTR [rax],al
 1001120:	cmp    BYTE PTR [rdx+0x1],cl
 1001123:	add    BYTE PTR [rax],al
 1001125:	add    BYTE PTR [rax],al
 1001127:	add    BYTE PTR [rdx+rcx*2],ah
 100112a:	add    DWORD PTR [rax],eax
 100112c:	add    BYTE PTR [rax],al
 100112e:	add    BYTE PTR [rax],al
 1001130:	or     cl,BYTE PTR [rdx+0x1]
 1001133:	add    BYTE PTR [rax],al
 1001135:	add    BYTE PTR [rax],al
 1001137:	add    dh,dh
 1001139:	add    QWORD PTR [r8],rax
 100113c:	add    BYTE PTR [rax],al
 100113e:	add    BYTE PTR [rax],al
 1001140:	loop   0x100118b
 1001142:	add    DWORD PTR [rax],eax
 1001144:	add    BYTE PTR [rax],al
 1001146:	add    BYTE PTR [rax],al
 1001148:	(bad)  
 1001149:	add    QWORD PTR [r8],rax
 100114c:	add    BYTE PTR [rax],al
 100114e:	add    BYTE PTR [rax],al
 1001150:	test   al,0x49
 1001152:	add    DWORD PTR [rax],eax
 1001154:	add    BYTE PTR [rax],al
 1001156:	add    BYTE PTR [rax],al
 1001158:	xchg   esp,eax
 1001159:	add    QWORD PTR [r8],rax
 100115c:	add    BYTE PTR [rax],al
 100115e:	add    BYTE PTR [rax],al
 1001160:	or     BYTE PTR [rcx+0x1],0x0
 1001164:	add    BYTE PTR [rax],al
 1001166:	add    BYTE PTR [rax],al
 1001168:	jo     0x10011b3
 100116a:	add    DWORD PTR [rax],eax
 100116c:	add    BYTE PTR [rax],al
 100116e:	add    BYTE PTR [rax],al
 1001170:	(bad)  
 1001171:	add    QWORD PTR [r8],rax
 1001174:	add    BYTE PTR [rax],al
 1001176:	add    BYTE PTR [rax],al
 1001178:	mov    cs,WORD PTR [rdx+0x1]
	...
 1001187:	add    BYTE PTR [rsi],cl
 1001189:	rex.RX add DWORD PTR [rax],r8d
 100118c:	add    BYTE PTR [rax],al
 100118e:	add    BYTE PTR [rax],al
 1001190:	sbb    BYTE PTR [rsi+0x1],al
 1001193:	add    BYTE PTR [rax],al
 1001195:	add    BYTE PTR [rax],al
 1001197:	add    BYTE PTR [rax],ah
 1001199:	rex.RX add DWORD PTR [rax],r8d
 100119c:	add    BYTE PTR [rax],al
 100119e:	add    BYTE PTR [rax],al
 10011a0:	rex.RX add DWORD PTR cs:[rax],r8d
 10011a4:	add    BYTE PTR [rax],al
 10011a6:	add    BYTE PTR [rax],al
 10011a8:	rex.RX add DWORD PTR ds:[rax],r8d
 10011ac:	add    BYTE PTR [rax],al
 10011ae:	add    BYTE PTR [rax],al
 10011b0:	rex.WX
 10011b1:	rex.RX add DWORD PTR [rax],r8d
 10011b4:	add    BYTE PTR [rax],al
 10011b6:	add    BYTE PTR [rax],al
 10011b8:	push   rsp
 10011b9:	rex.RX add DWORD PTR [rax],r8d
 10011bc:	add    BYTE PTR [rax],al
 10011be:	add    BYTE PTR [rax],al
 10011c0:	pop    rsi
 10011c1:	rex.RX add DWORD PTR [rax],r8d
 10011c4:	add    BYTE PTR [rax],al
 10011c6:	add    BYTE PTR [rax],al
 10011c8:	push   0x146
 10011cd:	add    BYTE PTR [rax],al
 10011cf:	add    BYTE PTR [rax+0x46],dh
 10011d2:	add    DWORD PTR [rax],eax
 10011d4:	add    BYTE PTR [rax],al
 10011d6:	add    BYTE PTR [rax],al
 10011d8:	jp     0x1001220
 10011da:	add    DWORD PTR [rax],eax
 10011dc:	add    BYTE PTR [rax],al
 10011de:	add    BYTE PTR [rax],al
 10011e0:	test   BYTE PTR [rsi+0x1],al
 10011e3:	add    BYTE PTR [rax],al
 10011e5:	add    BYTE PTR [rax],al
 10011e7:	add    BYTE PTR [rsi+0x146],cl
 10011ed:	add    BYTE PTR [rax],al
 10011ef:	add    BYTE PTR [rsi+rax*2],al
 10011f2:	add    DWORD PTR [rax],eax
 10011f4:	add    BYTE PTR [rax],al
 10011f6:	add    BYTE PTR [rax],al
 10011f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 10011f9:	rex.RX add DWORD PTR [rax],r8d
 10011fc:	add    BYTE PTR [rax],al
 10011fe:	add    BYTE PTR [rax],al
 1001200:	mov    dl,0x46
 1001202:	add    DWORD PTR [rax],eax
 1001204:	add    BYTE PTR [rax],al
 1001206:	add    BYTE PTR [rax],al
 1001208:	rol    BYTE PTR [rsi+0x1],0x0
 100120c:	add    BYTE PTR [rax],al
 100120e:	add    BYTE PTR [rax],al
 1001210:	retf   0x146
 1001213:	add    BYTE PTR [rax],al
 1001215:	add    BYTE PTR [rax],al
 1001217:	add    dh,dl
 1001219:	rex.RX add DWORD PTR [rax],r8d
 100121c:	add    BYTE PTR [rax],al
 100121e:	add    BYTE PTR [rax],al
 1001220:	in     al,0x46
 1001222:	add    DWORD PTR [rax],eax
 1001224:	add    BYTE PTR [rax],al
 1001226:	add    BYTE PTR [rax],al
 1001228:	test   BYTE PTR [rsi+0x1],0x0
 100122c:	add    BYTE PTR [rax],al
 100122e:	add    BYTE PTR [rax],al
 1001230:	or     BYTE PTR [rdi+0x1],al
 1001233:	add    BYTE PTR [rax],al
 1001235:	add    BYTE PTR [rax],al
 1001237:	add    BYTE PTR [rsi],bl
 1001239:	rex.RXB add DWORD PTR [r8],r8d
 100123c:	add    BYTE PTR [rax],al
 100123e:	add    BYTE PTR [rax],al
 1001240:	sub    al,0x47
 1001242:	add    DWORD PTR [rax],eax
 1001244:	add    BYTE PTR [rax],al
 1001246:	add    BYTE PTR [rax],al
 1001248:	rex.RXB add DWORD PTR ds:[r8],r8d
 100124c:	add    BYTE PTR [rax],al
 100124e:	add    BYTE PTR [rax],al
 1001250:	push   rsi
 1001251:	rex.RXB add DWORD PTR [r8],r8d
 1001254:	add    BYTE PTR [rax],al
 1001256:	add    BYTE PTR [rax],al
 1001258:	rex.RXB add DWORD PTR fs:[r8],r8d
 100125c:	add    BYTE PTR [rax],al
 100125e:	add    BYTE PTR [rax],al
 1001260:	ins    BYTE PTR es:[rdi],dx
 1001261:	rex.RXB add DWORD PTR [r8],r8d
 1001264:	add    BYTE PTR [rax],al
 1001266:	add    BYTE PTR [rax],al
 1001268:	jbe    0x10012b1
 100126a:	add    DWORD PTR [rax],eax
 100126c:	add    BYTE PTR [rax],al
 100126e:	add    BYTE PTR [rax],al
 1001270:	jle    0x10012b9
 1001272:	add    DWORD PTR [rax],eax
 1001274:	add    BYTE PTR [rax],al
 1001276:	add    BYTE PTR [rax],al
 1001278:	mov    WORD PTR [rdi+0x1],es
 100127b:	add    BYTE PTR [rax],al
 100127d:	add    BYTE PTR [rax],al
 100127f:	add    BYTE PTR [rax+0x147],bl
 1001285:	add    BYTE PTR [rax],al
 1001287:	add    BYTE PTR [rsi+0x147],ah
 100128d:	add    BYTE PTR [rax],al
 100128f:	add    BYTE PTR [rdi+rax*2+0x1],bh
 1001296:	add    BYTE PTR [rax],al
 1001298:	rol    BYTE PTR [rdi+0x1],1
 100129b:	add    BYTE PTR [rax],al
 100129d:	add    BYTE PTR [rax],al
 100129f:	add    ah,bl
 10012a1:	rex.RXB add DWORD PTR [r8],r8d
 10012a4:	add    BYTE PTR [rax],al
 10012a6:	add    BYTE PTR [rax],al
 10012a8:	out    0x47,al
 10012aa:	add    DWORD PTR [rax],eax
 10012ac:	add    BYTE PTR [rax],al
 10012ae:	add    BYTE PTR [rax],al
 10012b0:	clc    
 10012b1:	rex.RXB add DWORD PTR [r8],r8d
 10012b4:	add    BYTE PTR [rax],al
 10012b6:	add    BYTE PTR [rax],al
 10012b8:	sbb    cl,BYTE PTR [rax+0x1]
 10012bb:	add    BYTE PTR [rax],al
 10012bd:	add    BYTE PTR [rax],al
 10012bf:	add    BYTE PTR [rax+rcx*2],ah
 10012c2:	add    DWORD PTR [rax],eax
 10012c4:	add    BYTE PTR [rax],al
 10012c6:	add    BYTE PTR [rax],al
 10012c8:	xor    cl,BYTE PTR [rax+0x1]
 10012cb:	add    BYTE PTR [rax],al
 10012cd:	add    BYTE PTR [rax],al
 10012cf:	add    BYTE PTR [rdx],bh
 10012d1:	add    QWORD PTR [rax],rax
 10012d4:	add    BYTE PTR [rax],al
 10012d6:	add    BYTE PTR [rax],al
 10012d8:	rex.R
 10012d9:	add    QWORD PTR [rax],rax
 10012dc:	add    BYTE PTR [rax],al
 10012de:	add    BYTE PTR [rax],al
 10012e0:	add    DWORD PTR fs:[r8],r8d
 10012e4:	add    BYTE PTR [rax],al
 10012e6:	add    BYTE PTR [rax],al
 10012e8:	je     0x100132f
 10012ea:	add    DWORD PTR [rax],eax
 10012ec:	add    BYTE PTR [rax],al
 10012ee:	add    BYTE PTR [rax],al
 10012f0:	add    BYTE PTR [rbp+0x1],0x0
 10012f4:	add    BYTE PTR [rax],al
 10012f6:	add    BYTE PTR [rax],al
 10012f8:	mov    al,BYTE PTR [rbp+0x1]
 10012fb:	add    BYTE PTR [rax],al
 10012fd:	add    BYTE PTR [rax],al
 10012ff:	add    BYTE PTR [rbp+rax*2+0x1],dl
 1001306:	add    BYTE PTR [rax],al
 1001308:	sahf   
 1001309:	add    DWORD PTR [r8],r8d
 100130c:	add    BYTE PTR [rax],al
 100130e:	add    BYTE PTR [rax],al
 1001310:	stos   BYTE PTR es:[rdi],al
 1001311:	add    DWORD PTR [r8],r8d
 1001314:	add    BYTE PTR [rax],al
 1001316:	add    BYTE PTR [rax],al
 1001318:	mov    dh,0x45
 100131a:	add    DWORD PTR [rax],eax
 100131c:	add    BYTE PTR [rax],al
 100131e:	add    BYTE PTR [rax],al
 1001320:	rol    BYTE PTR [rbp+0x1],0x0
 1001324:	add    BYTE PTR [rax],al
 1001326:	add    BYTE PTR [rax],al
 1001328:	retf   0x145
 100132b:	add    BYTE PTR [rax],al
 100132d:	add    BYTE PTR [rax],al
 100132f:	add    dh,dl
 1001331:	add    DWORD PTR [r8],r8d
 1001334:	add    BYTE PTR [rax],al
 1001336:	add    BYTE PTR [rax],al
 1001338:	loopne 0x100137f
 100133a:	add    DWORD PTR [rax],eax
 100133c:	add    BYTE PTR [rax],al
 100133e:	add    BYTE PTR [rax],al
 1001340:	in     al,dx
 1001341:	add    DWORD PTR [r8],r8d
 1001344:	add    BYTE PTR [rax],al
 1001346:	add    BYTE PTR [rax],al
 1001348:	clc    
 1001349:	add    DWORD PTR [r8],r8d
 100134c:	add    BYTE PTR [rax],al
 100134e:	add    BYTE PTR [rax],al
 1001350:	(bad)  
 1001351:	rex.RX add DWORD PTR [rax],r8d
	...
 1001360:	(bad)  
 1001361:	add    BYTE PTR [rax],al
 1001363:	add    BYTE PTR [rax],al
 1001365:	add    BYTE PTR [rax],al
 1001367:	or     al,0x0
 100136a:	add    BYTE PTR [rax],al
 100136c:	add    BYTE PTR [rax],al
 100136e:	add    BYTE PTR [rax+0x0],al
 1001374:	add    BYTE PTR [rax],al
 1001376:	add    BYTE PTR [rax],al
 1001378:	(bad)  
 1001379:	add    QWORD PTR [r8],rax
 100137c:	add    BYTE PTR [rax],al
 100137e:	add    BYTE PTR [rax],al
 1001380:	xor    al,0x49
 1001382:	add    DWORD PTR [rax],eax
	...
 1001390:	push   0x148
 1001395:	add    BYTE PTR [rax],al
 1001397:	add    BYTE PTR [rdx+0x48],bl
 100139a:	add    DWORD PTR [rax],eax
	...
 10013a8:	add    BYTE PTR [rcx+0x1],cl
 10013ab:	add    BYTE PTR [rax],al
 10013ad:	add    BYTE PTR [rax],al
 10013af:	add    dl,ch
 10013b1:	add    QWORD PTR [rax],rax
 10013b4:	add    BYTE PTR [rax],al
 10013b6:	add    BYTE PTR [rax],al
 10013b8:	ror    BYTE PTR [rax+0x1],1
	...
 10013c7:	add    BYTE PTR [rdx+0x148],dl
 10013cd:	add    BYTE PTR [rax],al
 10013cf:	add    BYTE PTR [rax+rcx*2+0x1],ah
 10013d6:	add    BYTE PTR [rax],al
 10013d8:	(bad)  
 10013d9:	add    QWORD PTR [rax],rax
	...
 10013f0:	sub    al,0x18
 10013f2:	add    DWORD PTR [rcx],eax
 10013f4:	add    BYTE PTR [rax],al
 10013f6:	add    BYTE PTR [rax],al
 10013f8:	movabs al,ds:0xd00000000001012a
 1001401:	sub    al,BYTE PTR [rcx]
 1001403:	add    DWORD PTR [rax],eax
 1001405:	add    BYTE PTR [rax],al
 1001407:	add    BYTE PTR [rax],al
 1001409:	sub    eax,DWORD PTR [rcx]
 100140b:	add    DWORD PTR [rax],eax
	...
 100141d:	add    BYTE PTR [rax],al
 100141f:	add    BYTE PTR [rax],ah
 1001421:	sbb    al,BYTE PTR [rcx]
 1001423:	add    DWORD PTR [rax],eax
 1001425:	add    BYTE PTR [rax],al
 1001427:	add    BYTE PTR [rax+0x10120],dh
	...
 1001441:	add    BYTE PTR [rax],al
 1001443:	add    ah,dh
 1001445:	(bad)  
 1001446:	xor    eax,0x4f
 100144b:	add    BYTE PTR [rdx],al
 100144d:	add    BYTE PTR [rax],al
 100144f:	add    BYTE PTR [rip+0x78000000],ah        # 0x79001455
 1001455:	add    BYTE PTR ss:[rax],al
 1001458:	js     0x1001484
 100145a:	add    BYTE PTR [rax],al
 100145c:	add    BYTE PTR [rax],al
 100145e:	add    BYTE PTR [rax],al
 1001460:	add    BYTE PTR [rdi],bl
 1001462:	add    dl,BYTE PTR [rax]
 1001464:	(bad)  
 1001465:	loop   0x1001436
 1001467:	adc    DWORD PTR [rsi+0xaa0068],ebp
 100146d:	rex.WX xor al,0xd5
 1001470:	add    eax,0x6010021f
 1001475:	loop   0x1001446
 1001477:	adc    DWORD PTR [rsi+0xaa0068],ebp
 100147d:	rex.WX xor al,0xd5
 1001480:	or     BYTE PTR [rdi],bl
 1001482:	add    dl,BYTE PTR [rax]
 1001484:	(bad)  
 1001485:	loop   0x1001456
 1001487:	adc    DWORD PTR [rsi+0xaa0068],ebp
 100148d:	rex.WX xor al,0xd5
 1001490:	adc    eax,0x60100227
 1001495:	loop   0x1001466
 1001497:	adc    DWORD PTR [rsi+0xaa0068],ebp
 100149d:	rex.WX xor al,0xd5
 10014a0:	add    BYTE PTR [rdx],dh
 10014a2:	add    dl,BYTE PTR [rax]
 10014a4:	(bad)  
 10014a5:	loop   0x1001476
 10014a7:	adc    DWORD PTR [rsi+0xaa0068],ebp
 10014ad:	rex.WX xor al,0xd5
 10014b0:	add    dh,BYTE PTR [rdx]
 10014b2:	add    dl,BYTE PTR [rax]
 10014b4:	(bad)  
 10014b5:	loop   0x1001486
 10014b7:	adc    DWORD PTR [rsi+0xaa0068],ebp
 10014bd:	rex.WX xor al,0xd5
 10014c0:	add    eax,0x60100232
 10014c5:	loop   0x1001496
 10014c7:	adc    DWORD PTR [rsi+0xaa0068],ebp
 10014cd:	rex.WX xor al,0xd5
	...
 10014d8:	add    BYTE PTR [rcx],al
 10014da:	add    dl,BYTE PTR [rax]
 10014dc:	(bad)  
 10014dd:	loop   0x10014ae
 10014df:	adc    DWORD PTR [rsi+0xaa0068],ebp
 10014e5:	rex.WX xor al,0xd5
 10014e8:	add    eax,0x60100201
 10014ed:	loop   0x10014be
 10014ef:	adc    DWORD PTR [rsi+0xaa0068],ebp
 10014f5:	rex.WX xor al,0xd5
 10014f8:	add    BYTE PTR [rdx],al
 10014fa:	add    dl,BYTE PTR [rax]
 10014fc:	(bad)  
 10014fd:	loop   0x10014ce
 10014ff:	adc    DWORD PTR [rsi+0xaa0068],ebp
 1001505:	rex.WX xor al,0xd5
 1001508:	add    eax,0x60100202
 100150d:	loop   0x10014de
 100150f:	adc    DWORD PTR [rsi+0xaa0068],ebp
 1001515:	rex.WX xor al,0xd5
 1001518:	and    al,BYTE PTR [rip+0x61993]        # 0x1062eb1
 100151e:	add    BYTE PTR [rax],al
 1001520:	xchg   esp,eax
 1001521:	sub    al,0x1
	...
 100152b:	add    BYTE PTR [rcx],bh
 100152d:	add    BYTE PTR [rax],al
 100152f:	add    ah,al
 1001531:	sub    al,0x1
 1001533:	add    BYTE PTR [rax+0x1],al
 1001539:	add    BYTE PTR [rax],al
 100153b:	add    BYTE PTR [rax],al
 100153d:	add    BYTE PTR [rax],al
 100153f:	add    BYTE PTR [rdx],ah
 1001541:	add    eax,0x21993
 1001546:	add    BYTE PTR [rax],al
 1001548:	lock add DWORD PTR cs:[rax],eax
	...
 1001554:	or     eax,DWORD PTR [rax]
 1001556:	add    BYTE PTR [rax],al
 1001558:	add    BYTE PTR [rdi],ch
 100155a:	add    DWORD PTR [rax],eax
 100155c:	mov    BYTE PTR [rip+0x0],ah        # 0x1001562
 1001562:	add    BYTE PTR [rax],al
 1001564:	add    BYTE PTR [rax],al
 1001566:	add    BYTE PTR [rax],al
 1001568:	and    al,BYTE PTR [rip+0x51993]        # 0x1052f01
 100156e:	add    BYTE PTR [rax],al
 1001570:	sub    BYTE PTR [rdi],0x1
	...
 100157b:	add    BYTE PTR [rcx],dl
 100157d:	add    BYTE PTR [rax],al
 100157f:	add    BYTE PTR [rax-0x7fffed1],ch
 1001585:	(bad)  
	...
 100158e:	add    BYTE PTR [rax],al
 1001590:	and    al,BYTE PTR [rip+0x21993]        # 0x1022f29
 1001596:	add    BYTE PTR [rax],al
 1001598:	or     al,0x31
 100159a:	add    DWORD PTR [rax],eax
	...
 10015a4:	or     BYTE PTR [rax],al
 10015a6:	add    BYTE PTR [rax],al
 10015a8:	sbb    al,0x31
 10015aa:	add    DWORD PTR [rax],eax
 10015ac:	pop    rax
	...
 10015b5:	add    BYTE PTR [rax],al
 10015b7:	add    BYTE PTR [rdx],ah
 10015b9:	add    eax,0x11993
 10015be:	add    BYTE PTR [rax],al
 10015c0:	and    al,0x32
 10015c2:	add    DWORD PTR [rax],eax
	...
 10015cc:	or     eax,0x2c000000
 10015d1:	xor    al,BYTE PTR [rcx]
 10015d3:	add    BYTE PTR [rax+0x0],cl
 10015d9:	add    BYTE PTR [rax],al
 10015db:	add    BYTE PTR [rax],al
 10015dd:	add    BYTE PTR [rax],al
 10015df:	add    BYTE PTR [rdx],ah
 10015e1:	add    eax,0x11993
 10015e6:	add    BYTE PTR [rax],al
 10015e8:	(bad)  
 10015e9:	xor    al,BYTE PTR [rcx]
	...
 10015f3:	add    BYTE PTR [rbx],al
 10015f5:	add    BYTE PTR [rax],al
 10015f7:	add    ah,bl
 10015f9:	xor    al,BYTE PTR [rcx]
 10015fb:	add    BYTE PTR [rax],ah
	...
 1001605:	add    BYTE PTR [rax],al
 1001607:	add    BYTE PTR [rdx],ah
 1001609:	add    eax,0x21993
 100160e:	add    BYTE PTR [rax],al
 1001610:	sub    BYTE PTR [rbx],dh
 1001612:	add    DWORD PTR [rax],eax
	...
 100161c:	adc    BYTE PTR [rax],al
 100161e:	add    BYTE PTR [rax],al
 1001620:	cmp    BYTE PTR [rbx],dh
 1001622:	add    DWORD PTR [rax],eax
 1001624:	adc    BYTE PTR [rbx],cl
	...
 100162e:	add    BYTE PTR [rax],al
 1001630:	and    al,BYTE PTR [rip+0x31993]        # 0x1032fc9
 1001636:	add    BYTE PTR [rax],al
 1001638:	loopne 0x100166d
 100163a:	add    DWORD PTR [rax],eax
	...
 1001644:	or     eax,DWORD PTR [rax]
 1001646:	add    BYTE PTR [rax],al
 1001648:	clc    
 1001649:	xor    eax,DWORD PTR [rcx]
 100164b:	add    BYTE PTR [rax],al
 100164d:	add    eax,DWORD PTR [rax]
	...
 1001657:	add    BYTE PTR [rdx],ah
 1001659:	add    eax,0x41993
 100165e:	add    BYTE PTR [rax],al
 1001660:	xor    BYTE PTR [rcx+rax*1],0x0
	...
 100166c:	adc    eax,0xa0000000
 1001671:	xor    al,0x1
 1001673:	add    BYTE PTR [rax+0x0],ah
 1001679:	add    BYTE PTR [rax],al
 100167b:	add    BYTE PTR [rax],al
 100167d:	add    BYTE PTR [rax],al
 100167f:	add    BYTE PTR [rdx],ah
 1001681:	add    eax,0x21993
 1001686:	add    BYTE PTR [rax],al
 1001688:	xchg   esp,eax
 1001689:	xor    eax,0x1
 100168e:	add    BYTE PTR [rax],al
 1001690:	add    BYTE PTR [rax],al
 1001692:	add    BYTE PTR [rax],al
 1001694:	add    eax,0xa4000000
 1001699:	xor    eax,0xa80001
	...
 10016a6:	add    BYTE PTR [rax],al
 10016a8:	and    al,BYTE PTR [rip+0x21993]        # 0x1023041
 10016ae:	add    BYTE PTR [rax],al
 10016b0:	cmp    BYTE PTR [rsi],dh
 10016b2:	add    DWORD PTR [rax],eax
	...
 10016bc:	or     DWORD PTR [rax],eax
 10016be:	add    BYTE PTR [rax],al
 10016c0:	rex.W
 10016c1:	add    DWORD PTR ss:[rax],eax
 10016c4:	fmul   DWORD PTR [rip+0x0]        # 0x10016ca
 10016ca:	add    BYTE PTR [rax],al
 10016cc:	add    BYTE PTR [rax],al
 10016ce:	add    BYTE PTR [rax],al
 10016d0:	and    al,BYTE PTR [rip+0x11993]        # 0x1013069
 10016d6:	add    BYTE PTR [rax],al
 10016d8:	enter  0x136,0x0
	...
 10016e4:	add    eax,0xd0000000
 10016e9:	add    DWORD PTR ss:[rax],eax
 10016ec:	push   0x0
 10016f1:	add    BYTE PTR [rax],al
 10016f3:	add    BYTE PTR [rax],al
 10016f5:	add    BYTE PTR [rax],al
 10016f7:	add    BYTE PTR [rdx],ah
 10016f9:	add    eax,0x31993
 10016fe:	add    BYTE PTR [rax],al
 1001700:	sbb    BYTE PTR [rdi],dh
 1001702:	add    DWORD PTR [rax],eax
	...
 100170c:	or     eax,DWORD PTR [rax]
 100170e:	add    BYTE PTR [rax],al
 1001710:	xor    BYTE PTR [rdi],dh
 1001712:	add    DWORD PTR [rax],eax
 1001714:	movabs al,ds:0x18
 100171d:	add    BYTE PTR [rax],al
 100171f:	add    BYTE PTR [rdx],ah
 1001721:	add    eax,0x11993
 1001726:	add    BYTE PTR [rax],al
 1001728:	call   0x1001864
 100172d:	add    BYTE PTR [rax],al
 100172f:	add    BYTE PTR [rax],al
 1001731:	add    BYTE PTR [rax],al
 1001733:	add    BYTE PTR [rcx],al
 1001735:	add    BYTE PTR [rax],al
 1001737:	add    al,dh
 1001739:	(bad)  
 100173a:	add    DWORD PTR [rax],eax
 100173c:	and    BYTE PTR [rax],al
	...
 1001746:	add    BYTE PTR [rax],al
 1001748:	and    al,BYTE PTR [rip+0x21993]        # 0x10230e1
 100174e:	add    BYTE PTR [rax],al
 1001750:	cmp    BYTE PTR fs:[rcx],al
	...
 100175b:	add    BYTE PTR [rip+0x74000000],al        # 0x75001761
 1001761:	cmp    BYTE PTR [rcx],al
 1001763:	add    BYTE PTR [rax+0x0],al
 1001769:	add    BYTE PTR [rax],al
 100176b:	add    BYTE PTR [rax],al
 100176d:	add    BYTE PTR [rax],al
 100176f:	add    BYTE PTR [rdx],ah
 1001771:	add    eax,0x21993
 1001776:	add    BYTE PTR [rax],al
 1001778:	mov    esp,0x138
 100177d:	add    BYTE PTR [rax],al
 100177f:	add    BYTE PTR [rax],al
 1001781:	add    BYTE PTR [rax],al
 1001783:	add    BYTE PTR [rax],cl
 1001785:	add    BYTE PTR [rax],al
 1001787:	add    ah,cl
 1001789:	cmp    BYTE PTR [rcx],al
 100178b:	add    BYTE PTR [rax+0x0],dh
	...
 1001796:	add    BYTE PTR [rax],al
 1001798:	and    al,BYTE PTR [rip+0x31993]        # 0x1033131
 100179e:	add    BYTE PTR [rax],al
 10017a0:	xor    BYTE PTR [rdx],bh
 10017a2:	add    DWORD PTR [rax],eax
 10017a4:	add    DWORD PTR [rax],eax
 10017a6:	add    BYTE PTR [rax],al
 10017a8:	rex.W cmp al,BYTE PTR [rcx]
 10017ab:	add    BYTE PTR [rax],cl
 10017ad:	add    BYTE PTR [rax],al
 10017af:	add    BYTE PTR [rax+0x3a],dh
 10017b2:	add    DWORD PTR [rax],eax
 10017b4:	cwde   
	...
 10017c5:	add    BYTE PTR [rax],al
 10017c7:	add    al,ah
 10017c9:	jmp    0x10018ce
 10017ce:	add    BYTE PTR [rax],al
 10017d0:	rex (bad) 
 10017d2:	add    BYTE PTR [rcx],al
 10017d4:	add    BYTE PTR [rax],al
 10017d6:	add    BYTE PTR [rax],al
 10017d8:	(bad)  
 10017d9:	(bad)  
 10017da:	add    BYTE PTR [rcx],al
 10017dc:	add    BYTE PTR [rax],al
 10017de:	add    BYTE PTR [rax],al
 10017e0:	sub    dl,0x0
 10017e3:	add    DWORD PTR [rax],eax
 10017e5:	add    BYTE PTR [rax],al
 10017e7:	add    BYTE PTR [rax+0x100ea],ah
 10017ed:	add    BYTE PTR [rax],al
 10017ef:	add    BYTE PTR [rax],dl
 10017f1:	jmp    0x10017f3
 10017f3:	add    DWORD PTR [rax],eax
 10017f5:	add    BYTE PTR [rax],al
 10017f7:	add    BYTE PTR [rax+rax*1+0x4b],bl
 10017fb:	add    BYTE PTR [rbp+0x0],al
 10017fe:	push   rdx
 10017ff:	add    BYTE PTR [rsi+0x0],cl
 1001802:	add    BYTE PTR [r8+rax*1+0x33],r9b
 1001807:	add    BYTE PTR [rdx],dh
 1001809:	add    BYTE PTR [rsi],ch
 100180b:	add    BYTE PTR [rax+rax*1+0x4c],al
 100180f:	add    BYTE PTR [rax+rax*1+0x0],cl
 1001813:	add    BYTE PTR [rax],al
 1001815:	add    BYTE PTR [rax],al
 1001817:	add    BYTE PTR [rax+0x65],cl
 100181a:	(bad)  
 100181b:	jo     0x1001870
 100181d:	gs je  0x1001869
 1001820:	outs   dx,BYTE PTR ds:[rsi]
 1001821:	outs   dx,WORD PTR ds:[rsi]
 1001823:	jb     0x1001892
 1001825:	(bad)  
 1001826:	je     0x1001891
 1001828:	outs   dx,DWORD PTR ds:[rsi]
 1001829:	outs   dx,BYTE PTR ds:[rsi]
 100182a:	add    BYTE PTR [rax],al
 100182c:	add    BYTE PTR [rax],al
 100182e:	add    BYTE PTR [rax],al
 1001830:	add    BYTE PTR [r8+r8*1+0x53],cl
 1001835:	add    BYTE PTR [rcx+0x0],cl
 1001838:	add    BYTE PTR [rax+rax*1+0x7b],r11b
 100183d:	add    BYTE PTR [rcx],dh
 100183f:	add    BYTE PTR [rax],dh
 1001841:	add    BYTE PTR [rax],dh
 1001843:	add    BYTE PTR [rdx],dh
 1001845:	add    BYTE PTR [rax],dh
 1001847:	add    BYTE PTR [rcx],dh
 1001849:	add    BYTE PTR [rax],dh
 100184b:	add    BYTE PTR [rax],dh
 100184d:	add    BYTE PTR [rip+0x32004500],ch        # 0x33005d53
 1001853:	add    BYTE PTR [rsi],dh
 1001855:	add    BYTE PTR [rax],dh
 1001857:	add    BYTE PTR [rip+0x31003100],ch        # 0x3200495d
 100185d:	add    BYTE PTR [rbx+0x0],al
 1001860:	rex.RX add BYTE PTR [rip+0x45004100],r13b        # 0x46005967
 1001867:	add    BYTE PTR [rsi],dh
 1001869:	add    BYTE PTR [rax],bh
 100186b:	add    BYTE PTR [rip+0x30003000],ch        # 0x31004871
 1001871:	add    BYTE PTR [rcx+0x0],al
 1001874:	add    BYTE PTR [r8],sil
 1001877:	add    BYTE PTR [rax],dh
 1001879:	add    BYTE PTR [rax+rax*1],dh
 100187c:	add    BYTE PTR [r11],sil
 100187f:	add    BYTE PTR [rax+rax*1],dh
 1001882:	add    BYTE PTR [rip+0x5c007d00],r14b        # 0x5d009589
 1001889:	add    BYTE PTR [rcx+0x0],cl
 100188c:	outs   dx,BYTE PTR ds:[rsi]
 100188d:	add    BYTE PTR [rax+0x0],dh
 1001890:	jb     0x1001892
 1001892:	outs   dx,DWORD PTR ds:[rsi]
 1001893:	add    BYTE PTR [rbx+0x0],ah
 1001896:	push   rbx
 1001897:	add    BYTE PTR [rbp+0x0],ah
 100189a:	jb     0x100189c
 100189c:	jbe    0x100189e
 100189e:	add    BYTE PTR gs:[rdx+0x0],dh
 10018a2:	xor    eax,DWORD PTR [rax]
 10018a4:	xor    al,BYTE PTR [rax]
 10018a6:	add    BYTE PTR [rax],al
 10018a8:	pop    rsp
 10018a9:	add    BYTE PTR [rax],al
 10018ab:	add    BYTE PTR [rax],al
 10018ad:	add    BYTE PTR [rax],al
 10018af:	add    BYTE PTR [rsi],ch
 10018b1:	add    BYTE PTR [rdi+0x0],cl
 10018b4:	rex.XB add BYTE PTR [r8+0x0],dl
	...
 10018c0:	push   rbp
 10018c1:	add    BYTE PTR [rsi+0x0],ch
 10018c4:	imul   eax,DWORD PTR [rax],0x6f0063
 10018ca:	add    BYTE PTR fs:[rbp+0x0],ah
 10018ce:	add    BYTE PTR [rax],al
 10018d0:	push   rbx
 10018d1:	add    BYTE PTR [rcx+0x0],dl
 10018d4:	rex.WR add BYTE PTR [rbp+0x0],r9b
 10018d8:	add    BYTE PTR [r9+0x0],cl
 10018dc:	rex.WRX add BYTE PTR [rax+r8*1+0x2e],r10b
 10018e1:	add    BYTE PTR [rbp+0x0],al
 10018e4:	pop    rax
 10018e5:	add    BYTE PTR [rbp+0x0],al
 10018e8:	add    BYTE PTR [rax],al
 10018ea:	add    BYTE PTR [rax],al
 10018ec:	and    BYTE PTR [rax],al
 10018ee:	add    BYTE PTR [rax],al
 10018f0:	sub    eax,0x6b004300
 10018f5:	add    BYTE PTR [rcx+0x0],al
 10018f8:	ins    BYTE PTR es:[rdi],dx
 10018f9:	add    BYTE PTR [rax],al
 10018fb:	add    BYTE PTR [rax],al
 10018fd:	add    BYTE PTR [rax],al
 10018ff:	add    BYTE PTR [rip+0x6b004300],ch        # 0x6c005c05
 1001905:	add    BYTE PTR [rcx+0x0],al
 1001908:	ins    BYTE PTR es:[rdi],dx
 1001909:	add    BYTE PTR [rsi+0x0],cl
 100190c:	outs   dx,DWORD PTR ds:[rsi]
 100190d:	add    BYTE PTR [rcx+0x0],cl
 1001910:	add    BYTE PTR fs:[rax+0x0],bh
 1001914:	add    BYTE PTR [rax],al
 1001916:	add    BYTE PTR [rax],al
 1001918:	sub    eax,0x6b004300
 100191d:	add    BYTE PTR [rax+rax*1+0x78],dl
 1001921:	add    BYTE PTR [rax+rax*1+0x41],dh
 1001925:	add    BYTE PTR [rax+rax*1+0x0],ch
 1001929:	add    BYTE PTR [rax],al
 100192b:	add    BYTE PTR [rax],al
 100192d:	add    BYTE PTR [rax],al
 100192f:	add    BYTE PTR [rip+0x6b004300],ch        # 0x6c005c35
 1001935:	add    BYTE PTR [rax+rax*1+0x42],al
 1001939:	add    BYTE PTR [rsi+0x0],cl
 100193c:	outs   dx,DWORD PTR ds:[rsi]
 100193d:	add    BYTE PTR [rcx+0x0],cl
 1001940:	add    BYTE PTR fs:[rax+0x0],bh
 1001944:	add    BYTE PTR [rax],al
 1001946:	add    BYTE PTR [rax],al
 1001948:	sub    eax,0x6b004300
 100194d:	add    BYTE PTR [rax+rax*1+0x42],al
 1001951:	add    BYTE PTR [rax],al
 1001953:	add    BYTE PTR [rax],al
 1001955:	add    BYTE PTR [rax],al
 1001957:	add    BYTE PTR [rip+0x6b004300],ch        # 0x6c005c5d
 100195d:	add    BYTE PTR [rbx+0x0],al
 1001960:	(bad)  
 1001961:	add    BYTE PTR [rax+rax*1+0x0],dh
 1001965:	add    BYTE PTR [rax],al
 1001967:	add    BYTE PTR [rip+0x6b004300],ch        # 0x6c005c6d
 100196d:	add    BYTE PTR [rcx+0x0],al
 1001970:	ins    BYTE PTR es:[rdi],dx
 1001971:	add    BYTE PTR [rdx+0x0],dl
 1001974:	add    BYTE PTR gs:[rax+0x0],dh
 1001978:	(bad)  
 1001979:	add    BYTE PTR [rcx+0x0],ch
 100197c:	jb     0x100197e
 100197e:	add    BYTE PTR [rax],al
 1001980:	sub    eax,0x6b004300
 1001985:	add    BYTE PTR [rax+rax*1+0x42],al
 1001989:	add    BYTE PTR [rdx+0x0],dl
 100198c:	add    BYTE PTR gs:[rax+0x0],dh
 1001990:	(bad)  
 1001991:	add    BYTE PTR [rcx+0x0],ch
 1001994:	jb     0x1001996
 1001996:	add    BYTE PTR [rax],al
 1001998:	sub    eax,0x70005500
 100199d:	add    BYTE PTR [rax+rax*1+0x53],ah
 10019a1:	add    BYTE PTR [rax+rax*1+0x73],dh
 10019a5:	add    BYTE PTR [rax],al
 10019a7:	add    BYTE PTR [rip+0x65005200],ch        # 0x66006bad
 10019ad:	add    BYTE PTR [rdx+0x0],ah
 10019b0:	ins    BYTE PTR es:[rdi],dx
 10019b1:	add    BYTE PTR [rax+rax*1+0x49],ah
 10019b5:	add    BYTE PTR [rax+rax*1+0x78],ah
 10019b9:	add    BYTE PTR [rax],al
 10019bb:	add    BYTE PTR [rax],al
 10019bd:	add    BYTE PTR [rax],al
 10019bf:	add    BYTE PTR [rip+0x6b004200],ch        # 0x6c005bc5
 10019c5:	add    BYTE PTR [rbp+0x0],dl
 10019c8:	jo     0x10019ca
 10019ca:	add    BYTE PTR [rdx+0x0],r8b
 10019ce:	add    BYTE PTR [rax],al
 10019d0:	sub    eax,0x6b004200
 10019d5:	add    BYTE PTR [rbp+0x0],dl
 10019d8:	jo     0x10019da
 10019da:	rex.WR add BYTE PTR [rdi+0x0],r13b
 10019de:	add    BYTE PTR [eax],al
 10019e1:	add    BYTE PTR [rax],al
 10019e3:	add    BYTE PTR [rax],al
 10019e5:	add    BYTE PTR [rax],al
 10019e7:	add    BYTE PTR [rip+0x65004400],ch        # 0x66005ded
 10019ed:	add    BYTE PTR [rax+rax*1+0x42],ch
 10019f1:	add    BYTE PTR [rbx+0x0],ch
 10019f4:	push   rbp
 10019f5:	add    BYTE PTR [rax+0x0],dh
 10019f8:	jae    0x10019fa
 10019fa:	add    BYTE PTR [rax],al
 10019fc:	add    BYTE PTR [rax],al
 10019fe:	add    BYTE PTR [rax],al
 1001a00:	sub    eax,0x70005500
 1001a05:	add    BYTE PTR [rax+rax*1+0x4f],ah
 1001a09:	add    BYTE PTR [rax+0x0],dh
 1001a0c:	je     0x1001a0e
 1001a0e:	imul   eax,DWORD PTR [rax],0x740053
 1001a14:	(bad)  
 1001a15:	add    BYTE PTR [rax+rax*1+0x73],dh
 1001a19:	add    BYTE PTR [rax],al
 1001a1b:	add    BYTE PTR [rax],al
 1001a1d:	add    BYTE PTR [rax],al
 1001a1f:	add    BYTE PTR [rip+0x6d005200],ch        # 0x6e006c25
 1001a25:	add    BYTE PTR [rbp+0x0],dl
 1001a28:	outs   dx,BYTE PTR ds:[rsi]
 1001a29:	add    BYTE PTR [rbp+0x0],dh
 1001a2c:	jae    0x1001a2e
 1001a2e:	add    BYTE PTR gs:[rax+rax*1+0x53],ah
 1001a33:	add    BYTE PTR [rax+0x0],dh
 1001a36:	(bad)  
 1001a37:	add    BYTE PTR [rbx+0x0],ah
 1001a3a:	add    BYTE PTR gs:[rax],al
 1001a3d:	add    BYTE PTR [rax],al
 1001a3f:	add    BYTE PTR [rax],ch
 1001a41:	add    BYTE PTR [rax+rax*1+0x6f],ch
 1001a45:	add    BYTE PTR [rbx+0x0],ah
 1001a48:	(bad)  
 1001a49:	add    BYTE PTR [rax+rax*1+0x29],ch
 1001a4d:	add    BYTE PTR [rax],al
 1001a4f:	add    BYTE PTR [rbx+0x0],dl
 1001a52:	add    BYTE PTR [r8+rax*1+0x20],r10b
 1001a57:	add    BYTE PTR [rcx+0x0],al
 1001a5a:	rex.WRX add BYTE PTR [rbx+0x0],r10b
 1001a5e:	rex.WB add BYTE PTR [r15+0x0],bl
 1001a62:	rex.WRX add BYTE PTR [rbp+0x0],r10b
 1001a66:	rex.WR add BYTE PTR [rax+rax*1+0x53],r9b
 1001a6b:	add    BYTE PTR [rax],ah
 1001a6d:	add    BYTE PTR [rdi+0x0],cl
 1001a70:	rex.WRX add BYTE PTR [rip+0x53000a00],r9b        # 0x54002477
 1001a77:	add    BYTE PTR [rbp+0x0],al
 1001a7a:	push   rsp
 1001a7b:	add    BYTE PTR [rax],ah
 1001a7d:	add    BYTE PTR [rcx+0x0],al
 1001a80:	rex.WRX add BYTE PTR [rbx+0x0],r10b
 1001a84:	rex.WB add BYTE PTR [r15+0x0],bl
 1001a88:	push   rax
 1001a89:	add    BYTE PTR [rcx+0x0],al
 1001a8c:	add    BYTE PTR [rax+rax*1+0x49],r8b
 1001a91:	add    BYTE PTR [rsi+0x0],cl
 1001a94:	rex.RXB add BYTE PTR [r8],r12b
 1001a97:	add    BYTE PTR [rdi+0x0],cl
 1001a9a:	rex.WRX add BYTE PTR [rip+0x53000a00],r9b        # 0x540024a1
 1001aa1:	add    BYTE PTR [rbp+0x0],al
 1001aa4:	push   rsp
 1001aa5:	add    BYTE PTR [rax],ah
 1001aa7:	add    BYTE PTR [rcx+0x0],al
 1001aaa:	rex.WRX add BYTE PTR [rbx+0x0],r10b
 1001aae:	rex.WB add BYTE PTR [r15+0x0],bl
 1001ab2:	push   rdi
 1001ab3:	add    BYTE PTR [rcx+0x0],al
 1001ab6:	push   rdx
 1001ab7:	add    BYTE PTR [rsi+0x0],cl
 1001aba:	rex.WB add BYTE PTR [r14+0x0],cl
 1001abe:	rex.RXB add BYTE PTR [r11+0x0],r10b
 1001ac2:	and    BYTE PTR [rax],al
 1001ac4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
 1001ac8:	or     eax,0x53000a00
 1001acd:	add    BYTE PTR [rbp+0x0],al
 1001ad0:	push   rsp
 1001ad1:	add    BYTE PTR [rax],ah
 1001ad3:	add    BYTE PTR [rcx+0x0],dl
 1001ad6:	push   rbp
 1001ad7:	add    BYTE PTR [rdi+0x0],cl
 1001ada:	push   rsp
 1001adb:	add    BYTE PTR [rbp+0x0],al
 1001ade:	add    BYTE PTR [rdi+0x0],r11b
 1001ae2:	rex.WB add BYTE PTR [r8+rax*1+0x45],al
 1001ae7:	add    BYTE PTR [rsi+0x0],cl
 1001aea:	push   rsp
 1001aeb:	add    BYTE PTR [rcx+0x0],cl
 1001aee:	rex.RX add BYTE PTR [rcx+0x0],r9b
 1001af2:	add    BYTE PTR [r10+0x0],r10b
 1001af6:	and    BYTE PTR [rax],al
 1001af8:	rex.WRXB add BYTE PTR [r14+0x0],r9b
 1001afc:	or     eax,0x53000a00
 1001b01:	add    BYTE PTR [rbp+0x0],al
 1001b04:	push   rsp
 1001b05:	add    BYTE PTR [rax],ah
 1001b07:	add    BYTE PTR [rcx+0x0],al
 1001b0a:	push   rdx
 1001b0b:	add    BYTE PTR [rcx+0x0],cl
 1001b0e:	push   rsp
 1001b0f:	add    BYTE PTR [rax+0x0],cl
 1001b12:	add    BYTE PTR [r10+0x0],al
 1001b16:	rex.WRXB add BYTE PTR [r10+0x0],r10b
 1001b1a:	push   rsp
 1001b1b:	add    BYTE PTR [rax],ah
 1001b1d:	add    BYTE PTR [rdi+0x0],cl
 1001b20:	rex.WRX add BYTE PTR [rip+0x53000a00],r9b        # 0x54002527
 1001b27:	add    BYTE PTR [rbp+0x0],al
 1001b2a:	push   rsp
 1001b2b:	add    BYTE PTR [rax],ah
 1001b2d:	add    BYTE PTR [rbx+0x0],al
 1001b30:	rex.WRXB add BYTE PTR [r14+0x0],r9b
 1001b34:	rex.XB add BYTE PTR [r9+0x0],al
 1001b38:	push   rsp
 1001b39:	add    BYTE PTR [rdi+0x0],bl
 1001b3c:	rex.WRX add BYTE PTR [rbp+0x0],r10b
 1001b40:	rex.WR add BYTE PTR [rax+rax*1+0x5f],r9b
 1001b45:	add    BYTE PTR [rcx+0x0],bl
 1001b48:	rex.WB add BYTE PTR [r13+0x0],al
 1001b4c:	rex.WR add BYTE PTR [rax+rax*1+0x53],r8b
 1001b51:	add    BYTE PTR [rdi+0x0],bl
 1001b54:	rex.WRX add BYTE PTR [rbp+0x0],r10b
 1001b58:	rex.WR add BYTE PTR [rax+rax*1+0x20],r9b
 1001b5d:	add    BYTE PTR [rdi+0x0],cl
 1001b60:	rex.WRX add BYTE PTR [rip+0x53000a00],r9b        # 0x54002567
 1001b67:	add    BYTE PTR [rbp+0x0],al
 1001b6a:	push   rsp
 1001b6b:	add    BYTE PTR [rax],ah
 1001b6d:	add    BYTE PTR [rsi+0x0],cl
 1001b70:	push   rbp
 1001b71:	add    BYTE PTR [rbp+0x0],cl
 1001b74:	add    BYTE PTR [r10+0x0],r10b
 1001b78:	rex.WB add BYTE PTR [r11+0x0],al
 1001b7c:	pop    rdi
 1001b7d:	add    BYTE PTR [rdx+0x0],dl
 1001b80:	rex.WRXB add BYTE PTR [r13+0x0],r10b
 1001b84:	rex.WRX add BYTE PTR [rax+r8*1+0x41],r8b
 1001b89:	add    BYTE PTR [rdx+0x0],al
 1001b8c:	rex.WRXB add BYTE PTR [r10+0x0],r10b
 1001b90:	push   rsp
 1001b91:	add    BYTE PTR [rax],ah
 1001b93:	add    BYTE PTR [rdi+0x0],cl
 1001b96:	rex.RX add BYTE PTR [rsi+0x0],r8b
 1001b9a:	or     eax,0xa00
 1001b9f:	add    BYTE PTR [rip+0x3f00],ch        # 0x1005aa5
 1001ba5:	add    BYTE PTR [rax],al
 1001ba7:	add    BYTE PTR [rip+0x4300],ch        # 0x1005ead
 1001bad:	add    BYTE PTR [rax],al
 1001baf:	add    BYTE PTR [rip+0x4400],ch        # 0x1005fb5
 1001bb5:	add    BYTE PTR [rax],al
 1001bb7:	add    BYTE PTR [rip+0x70005200],ch        # 0x71006dbd
 1001bbd:	add    BYTE PTR [rax+rax*1+0x0],dh
 1001bc1:	add    BYTE PTR [rax],al
 1001bc3:	add    BYTE PTR [rax],al
 1001bc5:	add    BYTE PTR [rax],al
 1001bc7:	add    BYTE PTR [rip+0x74004800],ch        # 0x750063cd
 1001bcd:	add    BYTE PTR [rbp+0x0],ch
 1001bd0:	ins    BYTE PTR es:[rdi],dx
 1001bd1:	add    BYTE PTR [rdx+0x0],dl
 1001bd4:	jo     0x1001bd6
 1001bd6:	je     0x1001bd8
 1001bd8:	add    BYTE PTR [rax],al
 1001bda:	add    BYTE PTR [rax],al
 1001bdc:	sub    eax,0x5300
 1001be1:	add    BYTE PTR [rax],al
 1001be3:	add    BYTE PTR [rip+0x5500],ch        # 0x10070e9
 1001be9:	add    BYTE PTR [rax],al
 1001beb:	add    BYTE PTR [rip+0x5000],ch        # 0x1006bf1
 1001bf1:	add    BYTE PTR [rax],al
 1001bf3:	add    BYTE PTR [rax],al
 1001bf5:	add    BYTE PTR [rax],al
 1001bf7:	add    BYTE PTR [rip+0x72005600],ch        # 0x730071fd
 1001bfd:	add    BYTE PTR [rsi+0x0],ah
 1001c00:	jns    0x1001c02
 1001c02:	rex.X add BYTE PTR [rcx+0x0],spl
 1001c06:	movsxd eax,DWORD PTR [rax]
 1001c08:	imul   eax,DWORD PTR [rax],0x75
 1001c0b:	add    BYTE PTR [rax+0x0],dh
 1001c0e:	add    BYTE PTR [rax],al
 1001c10:	sub    eax,0x6b004200
 1001c15:	add    BYTE PTR [rbp+0x0],dl
 1001c18:	jo     0x1001c1a
 1001c1a:	rex.WRXB add BYTE PTR [r14+0x0],r13b
 1001c1e:	ins    BYTE PTR es:[rdi],dx
 1001c1f:	add    BYTE PTR [rcx+0x0],bh
 1001c22:	rex.WB add BYTE PTR [r14+0x0],spl
 1001c26:	add    BYTE PTR [r8+r8*1+0x65],bpl
 1001c2b:	add    BYTE PTR [rcx+0x0],ah
 1001c2e:	outs   dx,BYTE PTR ds:[rsi]
	...
 1001c37:	add    BYTE PTR [rip+0x6b004200],ch        # 0x6c005e3d
 1001c3d:	add    BYTE PTR [rbp+0x0],dl
 1001c40:	jo     0x1001c42
 1001c42:	rex.WRB add BYTE PTR [r13+0x0],r12b
 1001c46:	add    BYTE PTR fs:[rcx+0x0],ch
 1001c4a:	(bad)  
 1001c4b:	add    BYTE PTR [rax],al
 1001c4d:	add    BYTE PTR [rax],al
 1001c4f:	add    BYTE PTR [rax+rax*1+0x49],al
 1001c53:	add    BYTE PTR [rbx+0x0],dl
 1001c56:	rex.WXB add BYTE PTR [r8],al
 1001c59:	add    BYTE PTR [rax],al
 1001c5b:	add    BYTE PTR [rax],al
 1001c5d:	add    BYTE PTR [rax],al
 1001c5f:	add    BYTE PTR [rax+rax*1+0x41],dl
 1001c63:	add    BYTE PTR [rax+0x0],dl
 1001c66:	add    BYTE PTR [r8],r8b
 1001c69:	add    BYTE PTR [rax],al
 1001c6b:	add    BYTE PTR [rax],al
 1001c6d:	add    BYTE PTR [rax],al
 1001c6f:	add    BYTE PTR [rip+0x6b004200],ch        # 0x6c005e75
 1001c75:	add    BYTE PTR [rbp+0x0],al
 1001c78:	js     0x1001c7a
 1001c7a:	je     0x1001c7c
 1001c7c:	add    BYTE PTR [rax],al
 1001c7e:	add    BYTE PTR [rax],al
 1001c80:	sub    eax,0x73005500
 1001c85:	add    BYTE PTR [rbp+0x0],ah
 1001c88:	add    BYTE PTR [rbp+0x0],r12b
 1001c8c:	data16 add BYTE PTR [rax+rax*1+0x69],al
 1001c91:	add    BYTE PTR [rdx+0x0],dh
 1001c94:	add    BYTE PTR [rax],al
 1001c96:	add    BYTE PTR [rax],al
 1001c98:	sub    eax,0x6f004600
 1001c9d:	add    BYTE PTR [rdx+0x0],dh
 1001ca0:	movsxd eax,DWORD PTR [rax]
 1001ca2:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
 1001ca7:	add    BYTE PTR [rcx+0x0],ah
 1001caa:	add    BYTE PTR fs:[rax],al
 1001cad:	add    BYTE PTR [rax],al
 1001caf:	add    BYTE PTR [rip+0x65004b00],ch        # 0x660067b5
 1001cb5:	add    BYTE PTR [rbp+0x0],ah
 1001cb8:	jo     0x1001cba
 1001cba:	push   rdx
 1001cbb:	add    BYTE PTR [rbp+0x0],ah
 1001cbe:	jo     0x1001cc0
 1001cc0:	ins    BYTE PTR es:[rdi],dx
 1001cc1:	add    BYTE PTR [rax],al
 1001cc3:	add    BYTE PTR [rax],al
 1001cc5:	add    BYTE PTR [rax],al
 1001cc7:	add    BYTE PTR [rip+0x75004200],ch        # 0x76005ecd
 1001ccd:	add    BYTE PTR [rsi+0x0],ah
 1001cd0:	data16 add BYTE PTR [rbp+0x0],ah
 1001cd4:	jb     0x1001cd6
 1001cd6:	rex.XB add BYTE PTR [r15+0x0],bpl
 1001cda:	jne    0x1001cdc
 1001cdc:	outs   dx,BYTE PTR ds:[rsi]
 1001cdd:	add    BYTE PTR [rax+rax*1+0x0],dh
 1001ce1:	add    BYTE PTR [rax],al
 1001ce3:	add    BYTE PTR [rax],al
 1001ce5:	add    BYTE PTR [rax],al
 1001ce7:	add    BYTE PTR [rip+0x61004d00],ch        # 0x620069ed
 1001ced:	add    BYTE PTR [rax+0x0],bh
 1001cf0:	push   rsp
 1001cf1:	add    BYTE PTR [rdx+0x0],dh
 1001cf4:	(bad)  
 1001cf5:	add    BYTE PTR [rsi+0x0],ch
 1001cf8:	jae    0x1001cfa
 1001cfa:	data16 add BYTE PTR [rbp+0x0],ah
 1001cfe:	jb     0x1001d00
 1001d00:	push   rbx
 1001d01:	add    BYTE PTR [rcx+0x0],ch
 1001d04:	jp     0x1001d06
 1001d06:	add    BYTE PTR gs:[rax],al
 1001d09:	add    BYTE PTR [rax],al
 1001d0b:	add    BYTE PTR [rax],al
 1001d0d:	add    BYTE PTR [rax],al
 1001d0f:	add    BYTE PTR [rip+0x75005300],ch        # 0x76007015
 1001d15:	add    BYTE PTR [rax+0x0],dh
 1001d18:	jo     0x1001d1a
 1001d1a:	outs   dx,DWORD PTR ds:[rsi]
 1001d1b:	add    BYTE PTR [rdx+0x0],dh
 1001d1e:	je     0x1001d20
 1001d20:	rex.XB add BYTE PTR [r15+0x0],bpl
 1001d24:	ins    DWORD PTR es:[rdi],dx
 1001d25:	add    BYTE PTR [rax+0x0],dh
 1001d28:	jne    0x1001d2a
 1001d2a:	je     0x1001d2c
 1001d2c:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
 1001d31:	add    BYTE PTR [rdi+0x0],ch
 1001d34:	ins    BYTE PTR es:[rdi],dx
 1001d35:	add    BYTE PTR [rbp+0x0],dh
 1001d38:	ins    DWORD PTR es:[rdi],dx
 1001d39:	add    BYTE PTR [rsi+0x0],ch
 1001d3c:	add    BYTE PTR [rax],al
 1001d3e:	add    BYTE PTR [rax],al
 1001d40:	sub    eax,0x74005300
 1001d45:	add    BYTE PTR [rdi+0x0],ch
 1001d48:	jo     0x1001d4a
 1001d4a:	add    BYTE PTR [r8+rax*1+0x0],sil
 1001d4f:	add    BYTE PTR [rip+0x72004300],ch        # 0x73006055
 1001d55:	add    BYTE PTR [rdx+0x0],al
 1001d58:	imul   eax,DWORD PTR [rax],0x53
 1001d5b:	add    BYTE PTR [rbp+0x0],dh
 1001d5e:	(bad)  
 1001d5f:	add    BYTE PTR [rax+rax*1+0x69],al
 1001d63:	add    BYTE PTR [rdx+0x0],dh
 1001d66:	add    BYTE PTR [rax],al
 1001d68:	sub    eax,0x6c005000
 1001d6d:	add    BYTE PTR [rcx+0x0],ah
 1001d70:	outs   dx,BYTE PTR ds:[rsi]
 1001d71:	add    BYTE PTR [rcx+0x0],cl
 1001d74:	add    BYTE PTR [rax],r8b
 1001d77:	add    BYTE PTR [rip+0x6c005000],ch        # 0x6d006d7d
 1001d7d:	add    BYTE PTR [rcx+0x0],ah
 1001d80:	outs   dx,BYTE PTR ds:[rsi]
 1001d81:	add    BYTE PTR [rsi+0x0],cl
 1001d84:	(bad)  
 1001d85:	add    BYTE PTR [rbp+0x0],ch
 1001d88:	add    BYTE PTR gs:[rax],al
 1001d8b:	add    BYTE PTR [rax],al
 1001d8d:	add    BYTE PTR [rax],al
 1001d8f:	add    BYTE PTR [rip+0x65004400],ch        # 0x66006195
 1001d95:	add    BYTE PTR [rax+rax*1+0x54],ch
 1001d99:	add    BYTE PTR [rax+0x0],bh
 1001d9c:	je     0x1001d9e
 1001d9e:	push   rdx
 1001d9f:	add    BYTE PTR [rax+0x0],dh
 1001da2:	je     0x1001da4
 1001da4:	add    BYTE PTR [rax],al
 1001da6:	add    BYTE PTR [rax],al
 1001da8:	sub    eax,0x65004400
 1001dad:	add    BYTE PTR [rax+rax*1+0x48],ch
 1001db1:	add    BYTE PTR [rax+rax*1+0x6d],dh
 1001db5:	add    BYTE PTR [rax+rax*1+0x52],ch
 1001db9:	add    BYTE PTR [rax+0x0],dh
 1001dbc:	je     0x1001dbe
 1001dbe:	add    BYTE PTR [rax],al
 1001dc0:	sub    eax,0x72005700
 1001dc5:	add    BYTE PTR [rcx+0x0],ch
 1001dc8:	je     0x1001dca
 1001dca:	add    BYTE PTR gs:[rax+0x0],cl
 1001dce:	imul   eax,DWORD PTR [rax],0x740073
 1001dd4:	outs   dx,DWORD PTR ds:[rsi]
 1001dd5:	add    BYTE PTR [rdx+0x0],dh
 1001dd8:	jns    0x1001dda
 1001dda:	add    BYTE PTR [rax],al
 1001ddc:	add    BYTE PTR [rax],al
 1001dde:	add    BYTE PTR [rax],al
 1001de0:	sub    eax,0x6f005400
 1001de5:	add    BYTE PTR [rax],al
 1001de7:	add    BYTE PTR [rip+0x6f004300],ch        # 0x700060ed
 1001ded:	add    BYTE PTR [rax+0x0],dh
 1001df0:	jns    0x1001df2
 1001df2:	add    BYTE PTR [rax],al
 1001df4:	add    BYTE PTR [rax],al
 1001df6:	add    BYTE PTR [rax],al
 1001df8:	sub    eax,0x6f004300
 1001dfd:	add    BYTE PTR [rax+0x0],dh
 1001e00:	jns    0x1001e02
 1001e02:	push   rax
 1001e03:	add    BYTE PTR [rax+rax*1+0x61],ch
 1001e07:	add    BYTE PTR [rsi+0x0],ch
 1001e0a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
 1001e0e:	ins    DWORD PTR es:[rdi],dx
 1001e0f:	add    BYTE PTR [rbp+0x0],ah
 1001e12:	add    BYTE PTR [rax],al
 1001e14:	add    BYTE PTR [rax],al
 1001e16:	add    BYTE PTR [rax],al
 1001e18:	sub    eax,0x6f004c00
 1001e1d:	add    BYTE PTR [rcx+0x0],ah
 1001e20:	add    BYTE PTR fs:[rax],al
 1001e23:	add    BYTE PTR [rax],al
 1001e25:	add    BYTE PTR [rax],al
 1001e27:	add    BYTE PTR [rip+0x6f004c00],ch        # 0x70006a2d
 1001e2d:	add    BYTE PTR [rcx+0x0],ah
 1001e30:	add    BYTE PTR fs:[rax+0x0],dl
 1001e34:	ins    BYTE PTR es:[rdi],dx
 1001e35:	add    BYTE PTR [rcx+0x0],ah
 1001e38:	outs   dx,BYTE PTR ds:[rsi]
 1001e39:	add    BYTE PTR [rsi+0x0],cl
 1001e3c:	(bad)  
 1001e3d:	add    BYTE PTR [rbp+0x0],ch
 1001e40:	add    BYTE PTR gs:[rax],al
 1001e43:	add    BYTE PTR [rax],al
 1001e45:	add    BYTE PTR [rax],al
 1001e47:	add    BYTE PTR [rip+0x53004c00],ch        # 0x54006a4d
 1001e4d:	add    BYTE PTR [rbx+0x0],al
 1001e50:	outs   dx,DWORD PTR ds:[rsi]
 1001e51:	add    BYTE PTR [rax+0x0],dh
 1001e54:	jns    0x1001e56
 1001e56:	push   rax
 1001e57:	add    BYTE PTR [rax+rax*1+0x61],ch
 1001e5b:	add    BYTE PTR [rsi+0x0],ch
 1001e5e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
 1001e63:	add    BYTE PTR [rax],al
 1001e65:	add    BYTE PTR [rax],al
 1001e67:	add    BYTE PTR [rip+0x53004c00],ch        # 0x54006a6d
 1001e6d:	add    BYTE PTR [rdx+0x0],dl
 1001e70:	add    BYTE PTR gs:[rbx+0x0],dh
 1001e74:	je     0x1001e76
 1001e76:	outs   dx,DWORD PTR ds:[rsi]
 1001e77:	add    BYTE PTR [rdx+0x0],dh
 1001e7a:	add    BYTE PTR gs:[rax+0x0],dl
 1001e7e:	ins    BYTE PTR es:[rdi],dx
 1001e7f:	add    BYTE PTR [rcx+0x0],ah
 1001e82:	outs   dx,BYTE PTR ds:[rsi]
 1001e83:	add    BYTE PTR [rcx+0x0],cl
 1001e86:	add    BYTE PTR [rax],r8b
 1001e89:	add    BYTE PTR [rax],al
 1001e8b:	add    BYTE PTR [rax],al
 1001e8d:	add    BYTE PTR [rax],al
 1001e8f:	add    BYTE PTR [rip+0x25007300],ah        # 0x26009195
 1001e95:	add    BYTE PTR [rbx+0x0],dh
 1001e98:	or     al,BYTE PTR [rax]
 1001e9a:	add    BYTE PTR [rax],al
 1001e9c:	add    BYTE PTR [rax],al
 1001e9e:	add    BYTE PTR [rax],al
 1001ea0:	and    eax,0x25007300
 1001ea5:	add    BYTE PTR [rbx+0x0],dh
	...
 1001eb0:	and    eax,0xa007300
 1001eb5:	add    BYTE PTR [rdx],cl
	...
 1001ebf:	add    BYTE PTR [rip+0x64006c00],ah        # 0x65008ac5
 1001ec5:	add    BYTE PTR [rax],al
 1001ec7:	add    BYTE PTR [rip+0x2500],ah        # 0x10043cd
 1001ecd:	add    BYTE PTR [rax],al
 1001ecf:	add    BYTE PTR [rdi],dh
 1001ed1:	add    BYTE PTR [rsi],ch
 1001ed3:	add    BYTE PTR [rax],dh
 1001ed5:	add    BYTE PTR [rax],al
 1001ed7:	add    BYTE PTR [rdx],cl
 1001ed9:	add    BYTE PTR [rax],al
 1001edb:	add    BYTE PTR [rax],al
 1001edd:	add    BYTE PTR [rax],al
 1001edf:	add    BYTE PTR [rax+rax*1+0x65],dh
 1001ee3:	add    BYTE PTR [rbp+0x0],ch
 1001ee6:	jo     0x1001ee8
 1001ee8:	add    BYTE PTR fs:[rdx+0x0],ah
 1001eec:	add    BYTE PTR [rax],al
 1001eee:	add    BYTE PTR [rax],al
 1001ef0:	ins    DWORD PTR es:[rdi],dx
 1001ef1:	add    BYTE PTR [rcx+0x0],ah
 1001ef4:	jae    0x1001ef6
 1001ef6:	je     0x1001ef8
 1001ef8:	add    BYTE PTR gs:[rdx+0x0],dh
 1001efc:	add    BYTE PTR [rax],al
 1001efe:	add    BYTE PTR [rax],al
 1001f00:	or     al,BYTE PTR [rax]
 1001f02:	or     al,BYTE PTR [rax]
	...
 1001f10:	push   rsp
 1001f11:	add    BYTE PTR [rax+0x0],ch
 1001f14:	add    BYTE PTR gs:[rax],ah
 1001f17:	add    BYTE PTR [rsi+0x0],ah
 1001f1a:	imul   eax,DWORD PTR [rax],0x65006c
 1001f20:	and    BYTE PTR [rax],al
 1001f22:	and    eax,0x20007300
 1001f27:	add    BYTE PTR [rcx+0x0],ah
 1001f2a:	ins    BYTE PTR es:[rdi],dx
 1001f2b:	add    BYTE PTR [rdx+0x0],dh
 1001f2e:	add    BYTE PTR gs:[rcx+0x0],ah
 1001f32:	add    BYTE PTR fs:[rcx+0x0],bh
 1001f36:	and    BYTE PTR [rax],al
 1001f38:	add    BYTE PTR gs:[rax+0x0],bh
 1001f3c:	imul   eax,DWORD PTR [rax],0x740073
 1001f42:	jae    0x1001f44
 1001f44:	add    BYTE PTR cs:[rax],ah
 1001f47:	add    BYTE PTR [rax+rax*1+0x68],dl
 1001f4b:	add    BYTE PTR [rcx+0x0],ch
 1001f4e:	jae    0x1001f50
 1001f50:	and    BYTE PTR [rax],al
 1001f52:	(bad)  
 1001f53:	add    BYTE PTR [rcx+0x0],ah
 1001f56:	movsxd eax,DWORD PTR [rax]
 1001f58:	imul   eax,DWORD PTR [rax],0x75
 1001f5b:	add    BYTE PTR [rax+0x0],dh
 1001f5e:	and    BYTE PTR [rax],al
 1001f60:	movsxd eax,DWORD PTR [rax]
 1001f62:	outs   dx,DWORD PTR ds:[rsi]
 1001f63:	add    BYTE PTR [rbp+0x0],ch
 1001f66:	ins    DWORD PTR es:[rdi],dx
 1001f67:	add    BYTE PTR [rcx+0x0],ah
 1001f6a:	outs   dx,BYTE PTR ds:[rsi]
 1001f6b:	add    BYTE PTR [rax+rax*1+0x20],ah
 1001f6f:	add    BYTE PTR [rcx+0x0],ch
 1001f72:	jae    0x1001f74
 1001f74:	and    BYTE PTR [rax],al
 1001f76:	imul   eax,DWORD PTR [rax],0x6e0067
 1001f7c:	outs   dx,DWORD PTR ds:[rsi]
 1001f7d:	add    BYTE PTR [rdx+0x0],dh
 1001f80:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
 1001f85:	add    BYTE PTR [rax],al
 1001f87:	add    BYTE PTR [rdi],ah
 1001f89:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800928f
	...
 1001f97:	add    BYTE PTR [rdx],ch
 1001f99:	add    BYTE PTR [rsi],ch
 1001f9b:	add    BYTE PTR [rdx],ch
 1001f9d:	add    BYTE PTR [rax],al
 1001f9f:	add    BYTE PTR [rax+rax*1+0x45],al
 1001fa3:	add    BYTE PTR [rbx+0x0],al
 1001fa6:	rex.WR add BYTE PTR [rcx+0x0],r8b
 1001faa:	push   rdx
 1001fab:	add    BYTE PTR [rbp+0x0],al
 1001fae:	and    BYTE PTR [rax],al
 1001fb0:	add    BYTE PTR [rbp+0x0],bpl
 1001fb4:	jae    0x1001fb6
 1001fb6:	add    BYTE PTR [eax],ah
 1001fb9:	add    BYTE PTR [rsi+0x0],dh
 1001fbc:	(bad)  
 1001fbd:	add    BYTE PTR [rdx+0x0],dh
 1001fc0:	movsxd eax,DWORD PTR [rax]
 1001fc2:	push   0x72006100
 1001fc7:	add    BYTE PTR [rax],ch
 1001fc9:	add    BYTE PTR [rdx],dh
 1001fcb:	add    BYTE PTR [rip+0x29003500],dh        # 0x2a0054d1
 1001fd1:	add    BYTE PTR [rax],ah
 1001fd3:	add    BYTE PTR [rip+0x53000a00],cl        # 0x540029d9
 1001fd9:	add    BYTE PTR [rbp+0x0],al
 1001fdc:	rex.WR add BYTE PTR [rbp+0x0],r8b
 1001fe0:	add    BYTE PTR [r8+r8*1+0x20],dl
 1001fe5:	add    BYTE PTR [rax+0x0],al
 1001fe8:	ins    DWORD PTR es:[rdi],dx
 1001fe9:	add    BYTE PTR [rbx+0x0],dh
 1001fec:	add    BYTE PTR [eax],ah
 1001fef:	add    BYTE PTR [rip+0x27002000],bh        # 0x28003ff5
 1001ff5:	add    BYTE PTR [rip+0x20007300],ah        # 0x210092fb
 1001ffb:	add    BYTE PTR [rdi],ah
 1001ffd:	add    BYTE PTR [rax],ah
 1001fff:	add    BYTE PTR [rbx],ch
 1002001:	add    BYTE PTR [rax],ah
 1002003:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002a09
 1002009:	add    BYTE PTR [rax+rax*1+0x61],ah
 100200d:	add    BYTE PTR [rax+rax*1+0x65],dh
 1002011:	add    BYTE PTR [rsi+0x0],ch
 1002014:	(bad)  
 1002015:	add    BYTE PTR [rbp+0x0],ch
 1002018:	add    BYTE PTR gs:[rax],ch
 100201b:	add    BYTE PTR [rax+rax*1+0x77],ah
 100201f:	add    BYTE PTR [rax+rax*1],ch
 1002022:	and    BYTE PTR [rax],al
 1002024:	add    BYTE PTR [ebp+0x0],ah
 1002028:	je     0x100202a
 100202a:	add    BYTE PTR fs:[rcx+0x0],ah
 100202e:	je     0x1002030
 1002030:	add    BYTE PTR gs:[rax],ch
 1002033:	add    BYTE PTR [rcx],ch
 1002035:	add    BYTE PTR [rcx],ch
 1002037:	add    BYTE PTR [rax],ah
 1002039:	add    BYTE PTR [rbx],ch
 100203b:	add    BYTE PTR [rax],ah
 100203d:	add    BYTE PTR [rdi],ah
 100203f:	add    BYTE PTR [rax],ah
 1002041:	add    BYTE PTR [rdi],ah
 1002043:	add    BYTE PTR [rax],ah
 1002045:	add    BYTE PTR [rbx],ch
 1002047:	add    BYTE PTR [rax],ah
 1002049:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002a4f
 100204f:	add    BYTE PTR [rbx+0x0],ah
 1002052:	outs   dx,DWORD PTR ds:[rsi]
 1002053:	add    BYTE PTR [rsi+0x0],ch
 1002056:	jbe    0x1002058
 1002058:	add    BYTE PTR gs:[rdx+0x0],dh
 100205c:	je     0x100205e
 100205e:	sub    BYTE PTR [rax],al
 1002060:	jbe    0x1002062
 1002062:	(bad)  
 1002063:	add    BYTE PTR [rdx+0x0],dh
 1002066:	movsxd eax,DWORD PTR [rax]
 1002068:	push   0x72006100
 100206d:	add    BYTE PTR [rax+rax*1],ch
 1002070:	and    BYTE PTR [rax],al
 1002072:	add    BYTE PTR fs:[rcx+0x0],ah
 1002076:	je     0x1002078
 1002078:	add    BYTE PTR gs:[rax+0x0],dh
 100207c:	(bad)  
 100207d:	add    BYTE PTR [rdx+0x0],dh
 1002080:	je     0x1002082
 1002082:	sub    BYTE PTR [rax],al
 1002084:	add    BYTE PTR fs:[rax+rax*1+0x2c],ah
 1002089:	add    BYTE PTR [rax],ah
 100208b:	add    BYTE PTR [rdi+0x0],ah
 100208e:	add    BYTE PTR gs:[rax+rax*1+0x64],dh
 1002093:	add    BYTE PTR [rcx+0x0],ah
 1002096:	je     0x1002098
 1002098:	add    BYTE PTR gs:[rax],ch
 100209b:	add    BYTE PTR [rcx],ch
 100209d:	add    BYTE PTR [rcx],ch
 100209f:	add    BYTE PTR [rcx],ch
 10020a1:	add    BYTE PTR [rax],ah
 10020a3:	add    BYTE PTR [rbx],ch
 10020a5:	add    BYTE PTR [rax],ah
 10020a7:	add    BYTE PTR [rdi],ah
 10020a9:	add    BYTE PTR [rax],ah
 10020ab:	add    BYTE PTR [rdi],ah
 10020ad:	add    BYTE PTR [rax],ah
 10020af:	add    BYTE PTR [rbx],ch
 10020b1:	add    BYTE PTR [rax],ah
 10020b3:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002ab9
 10020b9:	add    BYTE PTR [rax+rax*1+0x61],ah
 10020bd:	add    BYTE PTR [rax+rax*1+0x65],dh
 10020c1:	add    BYTE PTR [rsi+0x0],ch
 10020c4:	(bad)  
 10020c5:	add    BYTE PTR [rbp+0x0],ch
 10020c8:	add    BYTE PTR gs:[rax],ch
 10020cb:	add    BYTE PTR [rbp+0x0],ch
 10020ce:	ins    DWORD PTR es:[rdi],dx
 10020cf:	add    BYTE PTR [rax+rax*1],ch
 10020d2:	and    BYTE PTR [rax],al
 10020d4:	add    BYTE PTR [ebp+0x0],ah
 10020d8:	je     0x10020da
 10020da:	add    BYTE PTR fs:[rcx+0x0],ah
 10020de:	je     0x10020e0
 10020e0:	add    BYTE PTR gs:[rax],ch
 10020e3:	add    BYTE PTR [rcx],ch
 10020e5:	add    BYTE PTR [rcx],ch
 10020e7:	add    BYTE PTR [rax],ah
 10020e9:	add    BYTE PTR [rbx],ch
 10020eb:	add    BYTE PTR [rax],ah
 10020ed:	add    BYTE PTR [rdi],ah
 10020ef:	add    BYTE PTR [rax],ah
 10020f1:	add    BYTE PTR [rdi],ah
 10020f3:	add    BYTE PTR [rax],ah
 10020f5:	add    BYTE PTR [rbx],ch
 10020f7:	add    BYTE PTR [rax],ah
 10020f9:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002aff
 10020ff:	add    BYTE PTR [rbx+0x0],ah
 1002102:	outs   dx,DWORD PTR ds:[rsi]
 1002103:	add    BYTE PTR [rsi+0x0],ch
 1002106:	jbe    0x1002108
 1002108:	add    BYTE PTR gs:[rdx+0x0],dh
 100210c:	je     0x100210e
 100210e:	sub    BYTE PTR [rax],al
 1002110:	jbe    0x1002112
 1002112:	(bad)  
 1002113:	add    BYTE PTR [rdx+0x0],dh
 1002116:	movsxd eax,DWORD PTR [rax]
 1002118:	push   0x72006100
 100211d:	add    BYTE PTR [rax+rax*1],ch
 1002120:	and    BYTE PTR [rax],al
 1002122:	add    BYTE PTR fs:[rcx+0x0],ah
 1002126:	je     0x1002128
 1002128:	add    BYTE PTR gs:[rax+0x0],dh
 100212c:	(bad)  
 100212d:	add    BYTE PTR [rdx+0x0],dh
 1002130:	je     0x1002132
 1002132:	sub    BYTE PTR [rax],al
 1002134:	jns    0x1002136
 1002136:	jns    0x1002138
 1002138:	sub    al,0x0
 100213a:	and    BYTE PTR [rax],al
 100213c:	add    BYTE PTR [ebp+0x0],ah
 1002140:	je     0x1002142
 1002142:	add    BYTE PTR fs:[rcx+0x0],ah
 1002146:	je     0x1002148
 1002148:	add    BYTE PTR gs:[rax],ch
 100214b:	add    BYTE PTR [rcx],ch
 100214d:	add    BYTE PTR [rcx],ch
 100214f:	add    BYTE PTR [rcx],ch
 1002151:	add    BYTE PTR [rax],ah
 1002153:	add    BYTE PTR [rbx],ch
 1002155:	add    BYTE PTR [rax],ah
 1002157:	add    BYTE PTR [rdi],ah
 1002159:	add    BYTE PTR [rdx],bh
 100215b:	add    BYTE PTR [rdi],ah
 100215d:	add    BYTE PTR [rax],ah
 100215f:	add    BYTE PTR [rbx],ch
 1002161:	add    BYTE PTR [rax],ah
 1002163:	add    BYTE PTR [rbx+0x0],al
 1002166:	rex.W add BYTE PTR [rcx+0x0],al
 100216a:	push   rdx
 100216b:	add    BYTE PTR [rax],ch
 100216d:	add    BYTE PTR [rcx],dh
 100216f:	add    BYTE PTR [rbx],dh
 1002171:	add    BYTE PTR [rcx],ch
 1002173:	add    BYTE PTR [rax],ah
 1002175:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002b7b
 100217b:	add    BYTE PTR [rbp+0x0],al
 100217e:	pop    rax
 100217f:	add    BYTE PTR [rbp+0x0],al
 1002182:	rex.XB add BYTE PTR [r8],spl
 1002185:	add    BYTE PTR [rax+0x0],bh
 1002188:	jo     0x100218a
 100218a:	pop    rdi
 100218b:	add    BYTE PTR [rbx+0x0],dh
 100218e:	add    BYTE PTR gs:[rsi+0x0],ch
 1002192:	add    BYTE PTR fs:[rbp+0x0],ch
 1002196:	(bad)  
 1002197:	add    BYTE PTR [rcx+0x0],ch
 100219a:	ins    BYTE PTR es:[rdi],dx
 100219b:	add    BYTE PTR [rax],ah
 100219d:	add    BYTE PTR [rip+0x20000a00],cl        # 0x21002ba3
 10021a3:	add    BYTE PTR [rax+0x0],al
 10021a6:	jb     0x10021a8
 10021a8:	add    BYTE PTR gs:[rbx+0x0],ah
 10021ac:	imul   eax,DWORD PTR [rax],0x690070
 10021b2:	add    BYTE PTR gs:[rsi+0x0],ch
 10021b6:	je     0x10021b8
 10021b8:	jae    0x10021ba
 10021ba:	and    BYTE PTR [rax],al
 10021bc:	cmp    eax,0x27002000
 10021c1:	add    BYTE PTR [rip+0x27007300],ah        # 0x280094c7
 10021c7:	add    BYTE PTR [rax+rax*1],ch
 10021ca:	and    BYTE PTR [rax],al
 10021cc:	or     eax,0x20000a00
 10021d1:	add    BYTE PTR [rax+0x0],al
 10021d4:	jae    0x10021d6
 10021d6:	jne    0x10021d8
 10021d8:	(bad)  
 10021d9:	add    BYTE PTR [rdx+0x0],ch
 10021dc:	add    BYTE PTR gs:[rbx+0x0],ah
 10021e0:	je     0x10021e2
 10021e2:	and    BYTE PTR [rax],al
 10021e4:	cmp    eax,0x27002000
 10021e9:	add    BYTE PTR [rip+0x20007300],ah        # 0x210094ef
 10021ef:	add    BYTE PTR [rip+0x25002000],ch        # 0x260041f5
 10021f5:	add    BYTE PTR [rbx+0x0],dh
 10021f8:	pop    rsp
 10021f9:	add    BYTE PTR [rip+0x20007300],ah        # 0x210094ff
 10021ff:	add    BYTE PTR [rax],ch
 1002201:	add    BYTE PTR [rip+0x29007300],ah        # 0x2a009507
 1002207:	add    BYTE PTR [rdi],ah
 1002209:	add    BYTE PTR [rax+rax*1],ch
 100220c:	and    BYTE PTR [rax],al
 100220e:	or     eax,0x20000a00
 1002213:	add    BYTE PTR [rax+0x0],al
 1002216:	ins    DWORD PTR es:[rdi],dx
 1002217:	add    BYTE PTR [rbp+0x0],ah
 100221a:	jae    0x100221c
 100221c:	jae    0x100221e
 100221e:	(bad)  
 100221f:	add    BYTE PTR [rdi+0x0],ah
 1002222:	add    BYTE PTR gs:[rax],ah
 1002225:	add    BYTE PTR [rip+0x40002000],bh        # 0x4100422b
 100222b:	add    BYTE PTR [rbp+0x0],ch
 100222e:	jae    0x1002230
 1002230:	add    BYTE PTR [eax+eax*1],ch
 1002234:	and    BYTE PTR [rax],al
 1002236:	or     eax,0x20000a00
 100223b:	add    BYTE PTR [rax+0x0],al
 100223e:	(bad)  
 100223f:	add    BYTE PTR [rax+rax*1+0x74],dh
 1002243:	add    BYTE PTR [rcx+0x0],ah
 1002246:	movsxd eax,DWORD PTR [rax]
 1002248:	push   0x65006d00
 100224d:	add    BYTE PTR [rsi+0x0],ch
 1002250:	je     0x1002252
 1002252:	jae    0x1002254
 1002254:	and    BYTE PTR [rax],al
 1002256:	cmp    eax,0x27002000
 100225b:	add    BYTE PTR [rip+0x27007300],ah        # 0x28009561
 1002261:	add    BYTE PTR [rax],al
 1002263:	add    BYTE PTR [rax],al
 1002265:	add    BYTE PTR [rax],al
 1002267:	add    BYTE PTR [rax],ch
 1002269:	add    BYTE PTR [rbp+0x0],dl
 100226c:	outs   dx,BYTE PTR ds:[rsi]
 100226d:	add    BYTE PTR [rbx+0x0],ch
 1002270:	outs   dx,BYTE PTR ds:[rsi]
 1002271:	add    BYTE PTR [rdi+0x0],ch
 1002274:	ja     0x1002276
 1002276:	outs   dx,BYTE PTR ds:[rsi]
 1002277:	add    BYTE PTR [rax],ah
 1002279:	add    BYTE PTR [rbp+0x0],al
 100227c:	jb     0x100227e
 100227e:	jb     0x1002280
 1002280:	outs   dx,DWORD PTR ds:[rsi]
 1002281:	add    BYTE PTR [rdx+0x0],dh
 1002284:	sub    DWORD PTR [rax],eax
 1002286:	add    BYTE PTR [rax],al
 1002288:	pop    rbx
 1002289:	add    BYTE PTR [rip+0x5d007300],ah        # 0x5e00958f
 100228f:	add    BYTE PTR [rax],ah
 1002291:	add    BYTE PTR [rip+0xa007300],ah        # 0xb009597
	...
 100229f:	add    BYTE PTR [rax],ch
 10022a1:	add    BYTE PTR [rbp+0x0],dl
 10022a4:	outs   dx,BYTE PTR ds:[rsi]
 10022a5:	add    BYTE PTR [rbx+0x0],ch
 10022a8:	outs   dx,BYTE PTR ds:[rsi]
 10022a9:	add    BYTE PTR [rdi+0x0],ch
 10022ac:	ja     0x10022ae
 10022ae:	outs   dx,BYTE PTR ds:[rsi]
 10022af:	add    BYTE PTR [rax],ah
 10022b1:	add    BYTE PTR [rbx+0x0],dl
 10022b4:	outs   dx,DWORD PTR ds:[rsi]
 10022b5:	add    BYTE PTR [rbp+0x0],dh
 10022b8:	jb     0x10022ba
 10022ba:	movsxd eax,DWORD PTR [rax]
 10022bc:	add    BYTE PTR gs:[rcx],ch
	...
 10022cf:	add    BYTE PTR [rip+0x5f007300],ah        # 0x600095d5
 10022d5:	add    BYTE PTR [rax+rax*1+0x62],ah
 10022d9:	add    BYTE PTR [rdi+0x0],bl
 10022dc:	and    eax,0x34003000
 10022e1:	add    BYTE PTR [rax+rax*1+0x64],ch
 10022e5:	add    BYTE PTR [rip+0x32003000],ah        # 0x330052eb
 10022eb:	add    BYTE PTR [rax+rax*1+0x64],ch
 10022ef:	add    BYTE PTR [rip+0x32003000],ah        # 0x330052f5
 10022f5:	add    BYTE PTR [rax+rax*1+0x64],ch
 10022f9:	add    BYTE PTR [rip+0x32003000],ah        # 0x330052ff
 10022ff:	add    BYTE PTR [rax+rax*1+0x64],ch
 1002303:	add    BYTE PTR [rip+0x32003000],ah        # 0x33005309
 1002309:	add    BYTE PTR [rax+rax*1+0x64],ch
 100230d:	add    BYTE PTR [rsi],ch
	...
 100231f:	add    BYTE PTR [rip+0x5f007300],ah        # 0x60009625
 1002325:	add    BYTE PTR [rax+rax*1+0x6c],dh
 1002329:	add    BYTE PTR [rdi+0x0],ch
 100232c:	add    BYTE PTR [edi+0x0],bl
 1002330:	and    eax,0x34003000
 1002335:	add    BYTE PTR [rax+rax*1+0x64],ch
 1002339:	add    BYTE PTR [rip+0x32003000],ah        # 0x3300533f
 100233f:	add    BYTE PTR [rax+rax*1+0x64],ch
 1002343:	add    BYTE PTR [rip+0x32003000],ah        # 0x33005349
 1002349:	add    BYTE PTR [rax+rax*1+0x64],ch
 100234d:	add    BYTE PTR [rip+0x32003000],ah        # 0x33005353
 1002353:	add    BYTE PTR [rax+rax*1+0x64],ch
 1002357:	add    BYTE PTR [rip+0x32003000],ah        # 0x3300535d
 100235d:	add    BYTE PTR [rax+rax*1+0x64],ch
 1002361:	add    BYTE PTR [rsi],ch
	...
 100236f:	add    BYTE PTR [rbx+0x0],dl
 1002372:	add    BYTE PTR [r8+rax*1+0x45],r9b
 1002377:	add    BYTE PTR [rbx+0x0],al
 100237a:	push   rsp
 100237b:	add    BYTE PTR [rax],ah
 100237d:	add    BYTE PTR [rbx+0x0],ah
 1002380:	outs   dx,DWORD PTR ds:[rsi]
 1002381:	add    BYTE PTR [rbp+0x0],dh
 1002384:	outs   dx,BYTE PTR ds:[rsi]
 1002385:	add    BYTE PTR [rax+rax*1+0x28],dh
 1002389:	add    BYTE PTR [rdx],ch
 100238b:	add    BYTE PTR [rcx],ch
 100238d:	add    BYTE PTR [rax],ah
 100238f:	add    BYTE PTR [rsi+0x0],al
 1002392:	push   rdx
 1002393:	add    BYTE PTR [rdi+0x0],cl
 1002396:	rex.WRB add BYTE PTR [r8],r12b
 1002399:	add    BYTE PTR [rbp+0x0],ch
 100239c:	(bad)  
 100239d:	add    BYTE PTR [rbx+0x0],dh
 10023a0:	je     0x10023a2
 10023a2:	add    BYTE PTR gs:[rdx+0x0],dh
 10023a6:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 10023ab:	add    BYTE PTR [rdi+0x0],ch
 10023ae:	add    BYTE PTR cs:[rbx+0x0],dh
 10023b2:	jns    0x10023b4
 10023b4:	jae    0x10023b6
 10023b6:	jo     0x10023b8
 10023b8:	jb     0x10023ba
 10023ba:	outs   dx,DWORD PTR ds:[rsi]
 10023bb:	add    BYTE PTR [rbx+0x0],ah
 10023be:	add    BYTE PTR gs:[rbx+0x0],dh
 10023c2:	jae    0x10023c4
 10023c4:	add    BYTE PTR gs:[rbx+0x0],dh
 10023c8:	and    BYTE PTR [rax],al
 10023ca:	push   rdi
 10023cb:	add    BYTE PTR [rax+0x0],cl
 10023ce:	add    BYTE PTR [r10+0x0],r10b
 10023d2:	add    BYTE PTR [r8],r12b
 10023d5:	add    BYTE PTR [rbx+0x0],dh
 10023d8:	jo     0x10023da
 10023da:	imul   eax,DWORD PTR [rax],0x200064
 10023e0:	add    BYTE PTR ds:[rax],ah
 10023e3:	add    BYTE PTR [rcx],dh
 10023e5:	add    BYTE PTR [rax],dh
 10023e7:	add    BYTE PTR [rax],ah
 10023e9:	add    BYTE PTR [rcx+0x0],al
 10023ec:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r8b
 10023f1:	add    BYTE PTR [rax+rax*1+0x62],ah
 10023f5:	add    BYTE PTR [rcx+0x0],ch
 10023f8:	add    BYTE PTR fs:[rax],ah
 10023fb:	add    BYTE PTR [rip+0x64002000],bh        # 0x65004401
 1002401:	add    BYTE PTR [rdx+0x0],ah
 1002404:	pop    rdi
 1002405:	add    BYTE PTR [rcx+0x0],ch
 1002408:	add    BYTE PTR fs:[rax],ch
 100240b:	add    BYTE PTR [rdi],ah
 100240d:	add    BYTE PTR [rip+0x27007300],ah        # 0x28009713
 1002413:	add    BYTE PTR [rcx],ch
	...
 100241d:	add    BYTE PTR [rax],al
 100241f:	add    BYTE PTR [rbx+0x0],dh
 1002422:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
 1002427:	add    BYTE PTR [rbx+0x0],ah
 100242a:	je     0x100242c
 100242c:	and    BYTE PTR [rax],al
 100242e:	jo     0x1002430
 1002430:	outs   dx,DWORD PTR ds:[rsi]
 1002431:	add    BYTE PTR [rbx+0x0],dh
 1002434:	imul   eax,DWORD PTR [rax],0x690074
 100243a:	outs   dx,DWORD PTR ds:[rsi]
 100243b:	add    BYTE PTR [rsi+0x0],ch
 100243e:	and    BYTE PTR [rax],al
 1002440:	data16 add BYTE PTR [rdx+0x0],dh
 1002444:	outs   dx,DWORD PTR ds:[rsi]
 1002445:	add    BYTE PTR [rbp+0x0],ch
 1002448:	and    BYTE PTR [rax],al
 100244a:	ins    DWORD PTR es:[rdi],dx
 100244b:	add    BYTE PTR [rbx+0x0],dh
 100244e:	add    BYTE PTR fs:[rdx+0x0],ah
 1002452:	add    BYTE PTR cs:[rsi],ch
 1002455:	add    BYTE PTR [rdx+0x0],ah
 1002458:	(bad)  
 1002459:	add    BYTE PTR [rbx+0x0],ah
 100245c:	imul   eax,DWORD PTR [rax],0x75
 100245f:	add    BYTE PTR [rax+0x0],dh
 1002462:	jae    0x1002464
 1002464:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
 1002469:	add    BYTE PTR [rdi+0x0],dh
 100246c:	push   0x72006500
 1002471:	add    BYTE PTR [rbp+0x0],ah
 1002474:	and    BYTE PTR [rax],al
 1002476:	add    BYTE PTR fs:[rcx+0x0],ah
 100247a:	je     0x100247c
 100247c:	(bad)  
 100247d:	add    BYTE PTR [rdx+0x0],ah
 1002480:	(bad)  
 1002481:	add    BYTE PTR [rbx+0x0],dh
 1002484:	add    BYTE PTR gs:[rdi+0x0],bl
 1002488:	outs   dx,BYTE PTR ds:[rsi]
 1002489:	add    BYTE PTR [rcx+0x0],ah
 100248c:	ins    DWORD PTR es:[rdi],dx
 100248d:	add    BYTE PTR [rbp+0x0],ah
 1002490:	cmp    eax,0x25002700
 1002495:	add    BYTE PTR [rbx+0x0],dh
 1002498:	(bad)  
 1002499:	add    BYTE PTR [rcx+0x0],ah
 100249c:	outs   dx,BYTE PTR ds:[rsi]
 100249d:	add    BYTE PTR [rax+rax*1+0x20],ah
 10024a1:	add    BYTE PTR [rax+rax*1+0x79],dh
 10024a5:	add    BYTE PTR [rax+0x0],dh
 10024a8:	add    BYTE PTR gs:[rcx],ah
 10024ab:	add    BYTE PTR [rip+0x46002700],bh        # 0x47004bb1
 10024b1:	add    BYTE PTR [rdi],ah
 10024b3:	add    BYTE PTR [rax],ah
 10024b5:	add    BYTE PTR [rcx+0x0],ah
 10024b8:	outs   dx,BYTE PTR ds:[rsi]
 10024b9:	add    BYTE PTR [rax+rax*1+0x20],ah
 10024bd:	add    BYTE PTR [rdx+0x0],ah
 10024c0:	(bad)  
 10024c1:	add    BYTE PTR [rbx+0x0],ah
 10024c4:	imul   eax,DWORD PTR [rax],0x75
 10024c7:	add    BYTE PTR [rax+0x0],dh
 10024ca:	pop    rdi
 10024cb:	add    BYTE PTR [rbx+0x0],dh
 10024ce:	add    BYTE PTR gs:[rax+rax*1+0x5f],dh
 10024d3:	add    BYTE PTR [rcx+0x0],ch
 10024d6:	add    BYTE PTR fs:[rip+0x73002800],bh        # 0x74004cdd
 10024dd:	add    BYTE PTR [rbp+0x0],ah
 10024e0:	ins    BYTE PTR es:[rdi],dx
 10024e1:	add    BYTE PTR [rbp+0x0],ah
 10024e4:	movsxd eax,DWORD PTR [rax]
 10024e6:	je     0x10024e8
 10024e8:	and    BYTE PTR [rax],al
 10024ea:	ins    DWORD PTR es:[rdi],dx
 10024eb:	add    BYTE PTR [rcx+0x0],ah
 10024ee:	js     0x10024f0
 10024f0:	sub    BYTE PTR [rax],al
 10024f2:	(bad)  
 10024f3:	add    BYTE PTR [rcx+0x0],ah
 10024f6:	movsxd eax,DWORD PTR [rax]
 10024f8:	imul   eax,DWORD PTR [rax],0x75
 10024fb:	add    BYTE PTR [rax+0x0],dh
 10024fe:	pop    rdi
 10024ff:	add    BYTE PTR [rbx+0x0],dh
 1002502:	add    BYTE PTR gs:[rax+rax*1+0x5f],dh
 1002507:	add    BYTE PTR [rcx+0x0],ch
 100250a:	add    BYTE PTR fs:[rcx],ch
 100250d:	add    BYTE PTR [rax],ah
 100250f:	add    BYTE PTR [rax],ah
 1002511:	add    BYTE PTR [rax],ah
 1002513:	add    BYTE PTR [rsi+0x0],ah
 1002516:	jb     0x1002518
 1002518:	outs   dx,DWORD PTR ds:[rsi]
 1002519:	add    BYTE PTR [rbp+0x0],ch
 100251c:	and    BYTE PTR [rax],al
 100251e:	ins    DWORD PTR es:[rdi],dx
 100251f:	add    BYTE PTR [rbx+0x0],dh
 1002522:	add    BYTE PTR fs:[rdx+0x0],ah
 1002526:	add    BYTE PTR cs:[rsi],ch
 1002529:	add    BYTE PTR [rdx+0x0],ah
 100252c:	(bad)  
 100252d:	add    BYTE PTR [rbx+0x0],ah
 1002530:	imul   eax,DWORD PTR [rax],0x75
 1002533:	add    BYTE PTR [rax+0x0],dh
 1002536:	jae    0x1002538
 1002538:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
 100253d:	add    BYTE PTR [rdi+0x0],dh
 1002540:	push   0x72006500
 1002545:	add    BYTE PTR [rbp+0x0],ah
 1002548:	and    BYTE PTR [rax],al
 100254a:	add    BYTE PTR fs:[rcx+0x0],ah
 100254e:	je     0x1002550
 1002550:	(bad)  
 1002551:	add    BYTE PTR [rdx+0x0],ah
 1002554:	(bad)  
 1002555:	add    BYTE PTR [rbx+0x0],dh
 1002558:	add    BYTE PTR gs:[rdi+0x0],bl
 100255c:	outs   dx,BYTE PTR ds:[rsi]
 100255d:	add    BYTE PTR [rcx+0x0],ah
 1002560:	ins    DWORD PTR es:[rdi],dx
 1002561:	add    BYTE PTR [rbp+0x0],ah
 1002564:	cmp    eax,0x25002700
 1002569:	add    BYTE PTR [rbx+0x0],dh
 100256c:	(bad)  
 100256d:	add    BYTE PTR [rcx],ch
 100256f:	add    BYTE PTR [rax],al
 1002571:	add    BYTE PTR [rax],al
 1002573:	add    BYTE PTR [rsi],ch
 1002575:	add    BYTE PTR [rax],al
 1002577:	add    BYTE PTR [rax+rax*1+0x78],dh
 100257b:	add    BYTE PTR [rax+rax*1+0x0],dh
 100257f:	add    BYTE PTR [rdi+0x0],bl
	...
 100258e:	add    BYTE PTR [rax],al
 1002590:	and    eax,0x25007300
 1002595:	add    BYTE PTR [rbx+0x0],dh
 1002598:	and    eax,0x34003000
 100259d:	add    BYTE PTR [rax+rax*1+0x64],ch
 10025a1:	add    BYTE PTR [rip+0x32003000],ah        # 0x330055a7
 10025a7:	add    BYTE PTR [rax+rax*1+0x64],ch
 10025ab:	add    BYTE PTR [rip+0x32003000],ah        # 0x330055b1
 10025b1:	add    BYTE PTR [rax+rax*1+0x64],ch
 10025b5:	add    BYTE PTR [rip+0x32003000],ah        # 0x330055bb
 10025bb:	add    BYTE PTR [rax+rax*1+0x64],ch
 10025bf:	add    BYTE PTR [rip+0x32003000],ah        # 0x330055c5
 10025c5:	add    BYTE PTR [rax+rax*1+0x64],ch
 10025c9:	add    BYTE PTR [rip+0x7300],ah        # 0x10098cf
 10025cf:	add    BYTE PTR [rdx+0x0],dl
 10025d2:	jo     0x10025d4
 10025d4:	je     0x10025d6
 10025d6:	add    BYTE PTR [rax],al
 10025d8:	push   rdx
 10025d9:	jo     0x100264f
 10025db:	add    BYTE PTR [rax],al
 10025dd:	add    BYTE PTR [rax],al
 10025df:	add    BYTE PTR [rcx],dh
 10025e1:	xor    DWORD PTR [rsi],ebp
 10025e3:	xor    BYTE PTR [rsi],ch
 10025e5:	xor    dh,BYTE PTR [rcx]
 10025e7:	xor    BYTE PTR [rax],dh
 10025e9:	cs xor BYTE PTR ss:[rax],al
 10025ed:	add    BYTE PTR [rax],al
 10025ef:	add    BYTE PTR [rax+0x0],ch
 10025f2:	je     0x10025f4
 10025f4:	ins    DWORD PTR es:[rdi],dx
 10025f5:	add    BYTE PTR [rax],al
 10025f7:	add    BYTE PTR [rip+0x64006c00],ah        # 0x650091fd
 10025fd:	add    BYTE PTR [rip+0x6c002500],ch        # 0x6d004b03
 1002603:	add    BYTE PTR [rax+rax*1+0x2d],ah
 1002607:	add    BYTE PTR [rip+0x64006c00],ah        # 0x6500920d
 100260d:	add    BYTE PTR [rax],al
 100260f:	add    BYTE PTR [rax+rax*1],bh
 1002612:	push   0x6d007400
 1002617:	add    BYTE PTR [rax+rax*1+0x3e],ch
 100261b:	add    BYTE PTR [rax],ah
 100261d:	add    BYTE PTR [rax+rax*1],bh
 1002620:	push   0x61006500
 1002625:	add    BYTE PTR [rax+rax*1+0x3e],ah
 1002629:	add    BYTE PTR [rax],ah
 100262b:	add    BYTE PTR [rax+rax*1],bh
 100262e:	ins    DWORD PTR es:[rdi],dx
 100262f:	add    BYTE PTR [rbp+0x0],ah
 1002632:	je     0x1002634
 1002634:	(bad)  
 1002635:	add    BYTE PTR [rax],ah
 1002637:	add    BYTE PTR [rax+0x0],ch
 100263a:	je     0x100263c
 100263c:	je     0x100263e
 100263e:	jo     0x1002640
 1002640:	sub    eax,0x71006500
 1002645:	add    BYTE PTR [rbp+0x0],dh
 1002648:	imul   eax,DWORD PTR [rax],0x3d0076
 100264e:	and    al,BYTE PTR [rax]
 1002650:	rex.XB add BYTE PTR [r15+0x0],bpl
 1002654:	outs   dx,BYTE PTR ds:[rsi]
 1002655:	add    BYTE PTR [rax+rax*1+0x65],dh
 1002659:	add    BYTE PTR [rsi+0x0],ch
 100265c:	je     0x100265e
 100265e:	sub    eax,0x79005400
 1002663:	add    BYTE PTR [rax+0x0],dh
 1002666:	add    BYTE PTR gs:[rdx],ah
 1002669:	add    BYTE PTR [rax],ah
 100266b:	add    BYTE PTR [rbx+0x0],ah
 100266e:	outs   dx,DWORD PTR ds:[rsi]
 100266f:	add    BYTE PTR [rsi+0x0],ch
 1002672:	je     0x1002674
 1002674:	add    BYTE PTR gs:[rsi+0x0],ch
 1002678:	je     0x100267a
 100267a:	cmp    eax,0x74002200
 100267f:	add    BYTE PTR [rbp+0x0],ah
 1002682:	js     0x1002684
 1002684:	je     0x1002686
 1002686:	(bad)  
 1002687:	add    BYTE PTR [rax+0x0],ch
 100268a:	je     0x100268c
 100268c:	ins    DWORD PTR es:[rdi],dx
 100268d:	add    BYTE PTR [rax+rax*1+0x3b],ch
 1002691:	add    BYTE PTR [rax],ah
 1002693:	add    BYTE PTR [rbx+0x0],ah
 1002696:	push   0x72006100
 100269b:	add    BYTE PTR [rbx+0x0],dh
 100269e:	add    BYTE PTR gs:[rax+rax*1+0x3d],dh
 10026a3:	add    BYTE PTR [rcx+0x0],ch
 10026a6:	jae    0x10026a8
 10026a8:	outs   dx,DWORD PTR ds:[rsi]
 10026a9:	add    BYTE PTR [rip+0x38003800],ch        # 0x39005eaf
 10026af:	add    BYTE PTR [rip+0x2d003900],dh        # 0x2e005fb5
 10026b5:	add    BYTE PTR [rcx],dh
 10026b7:	add    BYTE PTR [rdx],ah
 10026b9:	add    BYTE PTR [rsi],bh
 10026bb:	add    BYTE PTR [rax],ah
 10026bd:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d0030c3
 10026c3:	add    BYTE PTR [rax+rax*1+0x69],dh
 10026c7:	add    BYTE PTR [rax+rax*1+0x6c],dh
 10026cb:	add    BYTE PTR [rbp+0x0],ah
 10026ce:	add    BYTE PTR ds:[rsi+0x0],cl
 10026d2:	add    BYTE PTR gs:[rdi+0x0],dh
 10026d6:	and    BYTE PTR [rax],al
 10026d8:	push   rax
 10026d9:	add    BYTE PTR [rcx+0x0],ah
 10026dc:	add    BYTE PTR [ebp+0x0],ah
 10026e0:	and    BYTE PTR [rax],al
 10026e2:	xor    al,BYTE PTR [rax]
 10026e4:	cmp    al,0x0
 10026e6:	(bad)  
 10026e7:	add    BYTE PTR [rax+rax*1+0x69],dh
 10026eb:	add    BYTE PTR [rax+rax*1+0x6c],dh
 10026ef:	add    BYTE PTR [rbp+0x0],ah
 10026f2:	add    BYTE PTR ds:[rax],ah
 10026f5:	add    BYTE PTR [rax+rax*1],bh
 10026f8:	(bad)  
 10026f9:	add    BYTE PTR [rax+0x0],ch
 10026fc:	add    BYTE PTR gs:[rcx+0x0],ah
 1002700:	add    BYTE PTR fs:[rsi],bh
 1002703:	add    BYTE PTR [rax],ah
 1002705:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d00310b
 100270b:	add    BYTE PTR [rdx+0x0],ah
 100270e:	outs   dx,DWORD PTR ds:[rsi]
 100270f:	add    BYTE PTR [rax+rax*1+0x79],ah
 1002713:	add    BYTE PTR [rsi],bh
 1002715:	add    BYTE PTR [rax],ah
 1002717:	add    BYTE PTR [rip+0xa00],cl        # 0x100311d
 100271d:	add    BYTE PTR [rax],al
 100271f:	add    BYTE PTR [rax+rax*1],bh
 1002722:	jo     0x1002724
 1002724:	and    BYTE PTR [rax],al
 1002726:	(bad)  
 1002727:	add    BYTE PTR [rax+rax*1+0x69],ch
 100272b:	add    BYTE PTR [rdi+0x0],ah
 100272e:	outs   dx,BYTE PTR ds:[rsi]
 100272f:	add    BYTE PTR [rip+0x6c002200],bh        # 0x6d004935
 1002735:	add    BYTE PTR [rbp+0x0],ah
 1002738:	data16 add BYTE PTR [rax+rax*1+0x22],dh
 100273d:	add    BYTE PTR [rsi],bh
 100273f:	add    BYTE PTR [rax+rax*1],bh
 1002742:	imul   eax,DWORD PTR [rax],0x67006d
 1002748:	and    BYTE PTR [rax],al
 100274a:	jae    0x100274c
 100274c:	jb     0x100274e
 100274e:	movsxd eax,DWORD PTR [rax]
 1002750:	cmp    eax,0x25002200
 1002755:	add    BYTE PTR [rbx+0x0],dh
 1002758:	pop    rsp
 1002759:	add    BYTE PTR [rax+0x0],cl
 100275c:	push   rsp
 100275d:	add    BYTE PTR [rbp+0x0],cl
 1002760:	rex.WR add BYTE PTR [rax+rax*1+0x64],r11b
 1002765:	add    BYTE PTR [rdx+0x0],ah
 1002768:	rex.W add BYTE PTR [rbp+0x0],spl
 100276c:	(bad)  
 100276d:	add    BYTE PTR [rax+rax*1+0x65],ah
 1002771:	add    BYTE PTR [rdx+0x0],dh
 1002774:	add    BYTE PTR cs:[rdi+0x0],al
 1002778:	rex.WB add BYTE PTR [r14+0x0],al
 100277c:	and    al,BYTE PTR [rax]
 100277e:	and    BYTE PTR [rax],al
 1002780:	(bad)  
 1002781:	add    BYTE PTR [rax+rax*1+0x74],ch
 1002785:	add    BYTE PTR [rip+0x53002200],bh        # 0x5400498b
 100278b:	add    BYTE PTR [rcx+0x0],dl
 100278e:	rex.WR add BYTE PTR [rax],r12b
 1002791:	add    BYTE PTR [rbx+0x0],dl
 1002794:	add    BYTE PTR gs:[rdx+0x0],dh
 1002798:	jbe    0x100279a
 100279a:	add    BYTE PTR gs:[rdx+0x0],dh
 100279e:	and    BYTE PTR [rax],al
 10027a0:	rex.X add BYTE PTR [rcx+0x0],spl
 10027a4:	outs   dx,BYTE PTR ds:[rsi]
 10027a5:	add    BYTE PTR [rsi+0x0],ch
 10027a8:	add    BYTE PTR gs:[rdx+0x0],dh
 10027ac:	and    al,BYTE PTR [rax]
 10027ae:	and    BYTE PTR [rax],al
 10027b0:	push   rdi
 10027b1:	add    BYTE PTR [rcx+0x0],cl
 10027b4:	add    BYTE PTR [rax+rax*1+0x48],r10b
 10027b9:	add    BYTE PTR [rip+0x35002200],bh        # 0x360049bf
 10027bf:	add    BYTE PTR [rax+rax*1],dh
 10027c2:	xor    eax,0x20002200
 10027c7:	add    BYTE PTR [rax+0x0],cl
 10027ca:	add    BYTE PTR [r9+0x0],r9b
 10027ce:	rex.RXB add BYTE PTR [r8+0x0],r9b
 10027d2:	push   rsp
 10027d3:	add    BYTE PTR [rip+0x33002200],bh        # 0x340049d9
 10027d9:	add    BYTE PTR [rax],dh
 10027db:	add    BYTE PTR [rdx],ah
 10027dd:	add    BYTE PTR [rsi],bh
 10027df:	add    BYTE PTR [rax+rax*1],bh
 10027e2:	(bad)  
 10027e3:	add    BYTE PTR [rax+0x0],dh
 10027e6:	add    BYTE PTR ds:[rax],ah
 10027e9:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d0031ef
 10027ef:	add    BYTE PTR [rax+0x0],dh
 10027f2:	and    BYTE PTR [rax],al
 10027f4:	(bad)  
 10027f5:	add    BYTE PTR [rax+rax*1+0x69],ch
 10027f9:	add    BYTE PTR [rdi+0x0],ah
 10027fc:	outs   dx,BYTE PTR ds:[rsi]
 10027fd:	add    BYTE PTR [rip+0x63002200],bh        # 0x64004a03
 1002803:	add    BYTE PTR [rbp+0x0],ah
 1002806:	outs   dx,BYTE PTR ds:[rsi]
 1002807:	add    BYTE PTR [rax+rax*1+0x65],dh
 100280b:	add    BYTE PTR [rdx+0x0],dh
 100280e:	and    al,BYTE PTR [rax]
 1002810:	add    BYTE PTR ds:[rax+rax*1],bh
 1002814:	data16 add BYTE PTR [rdi+0x0],ch
 1002818:	outs   dx,BYTE PTR ds:[rsi]
 1002819:	add    BYTE PTR [rax+rax*1+0x20],dh
 100281d:	add    BYTE PTR [rbx+0x0],dh
 1002820:	imul   eax,DWORD PTR [rax],0x65007a
 1002826:	cmp    eax,0x35002200
 100282b:	add    BYTE PTR [rdx],ah
 100282d:	add    BYTE PTR [rsi],bh
 100282f:	add    BYTE PTR [rax+rax*1],bh
 1002832:	jae    0x1002834
 1002834:	je     0x1002836
 1002836:	jb     0x1002838
 1002838:	outs   dx,DWORD PTR ds:[rsi]
 1002839:	add    BYTE PTR [rsi+0x0],ch
 100283c:	add    BYTE PTR [esi],bh
 100283f:	add    BYTE PTR [rax+rax*1+0x61],al
 1002843:	add    BYTE PTR [rax+rax*1+0x61],dh
 1002847:	add    BYTE PTR [rdx+0x0],ah
 100284a:	(bad)  
 100284b:	add    BYTE PTR [rbx+0x0],dh
 100284e:	add    BYTE PTR gs:[rax],ah
 1002851:	add    BYTE PTR [rbp+0x0],cl
 1002854:	(bad)  
 1002855:	add    BYTE PTR [rcx+0x0],ch
 1002858:	outs   dx,BYTE PTR ds:[rsi]
 1002859:	add    BYTE PTR [rax+rax*1+0x65],dh
 100285d:	add    BYTE PTR [rsi+0x0],ch
 1002860:	(bad)  
 1002861:	add    BYTE PTR [rsi+0x0],ch
 1002864:	movsxd eax,DWORD PTR [rax]
 1002866:	add    BYTE PTR gs:[rax],ah
 1002869:	add    BYTE PTR [rcx+0x0],al
 100286c:	movsxd eax,DWORD PTR [rax]
 100286e:	je     0x1002870
 1002870:	imul   eax,DWORD PTR [rax],0x690076
 1002876:	je     0x1002878
 1002878:	imul   eax,DWORD PTR [rax],0x730065
 100287e:	cmp    al,0x0
 1002880:	(bad)  
 1002881:	add    BYTE PTR [rbx+0x0],dh
 1002884:	je     0x1002886
 1002886:	jb     0x1002888
 1002888:	outs   dx,DWORD PTR ds:[rsi]
 1002889:	add    BYTE PTR [rsi+0x0],ch
 100288c:	add    BYTE PTR [esi],bh
 100288f:	add    BYTE PTR [rax+rax*1],bh
 1002892:	(bad)  
 1002893:	add    BYTE PTR [rsi+0x0],ah
 1002896:	outs   dx,DWORD PTR ds:[rsi]
 1002897:	add    BYTE PTR [rsi+0x0],ch
 100289a:	je     0x100289c
 100289c:	add    BYTE PTR ds:[rax+rax*1],bh
 10028a0:	(bad)  
 10028a1:	add    BYTE PTR [rax+0x0],dh
 10028a4:	add    BYTE PTR ds:[rax],ah
 10028a7:	add    BYTE PTR [rip+0xa00],cl        # 0x10032ad
 10028ad:	add    BYTE PTR [rax],al
 10028af:	add    BYTE PTR [rax+rax*1],bh
 10028b2:	je     0x10028b4
 10028b4:	(bad)  
 10028b5:	add    BYTE PTR [rdx+0x0],ah
 10028b8:	ins    BYTE PTR es:[rdi],dx
 10028b9:	add    BYTE PTR [rbp+0x0],ah
 10028bc:	and    BYTE PTR [rax],al
 10028be:	(bad)  
 10028bf:	add    BYTE PTR [rdi+0x0],ch
 10028c2:	jb     0x10028c4
 10028c4:	add    BYTE PTR fs:[rbp+0x0],ah
 10028c8:	jb     0x10028ca
 10028ca:	cmp    eax,0x31002200
 10028cf:	add    BYTE PTR [rdx],ah
 10028d1:	add    BYTE PTR [rax],ah
 10028d3:	add    BYTE PTR [rdi+0x0],dh
 10028d6:	imul   eax,DWORD PTR [rax],0x740064
 10028dc:	push   0x22003d00
 10028e1:	add    BYTE PTR [rcx],dh
 10028e3:	add    BYTE PTR [rax],dh
 10028e5:	add    BYTE PTR [rax],dh
 10028e7:	add    BYTE PTR [rip+0x3e002200],ah        # 0x3f004aed
 10028ed:	add    BYTE PTR [rax],ah
 10028ef:	add    BYTE PTR [rax+rax*1],bh
 10028f2:	je     0x10028f4
 10028f4:	jb     0x10028f6
 10028f6:	add    BYTE PTR ds:[rax],ah
 10028f9:	add    BYTE PTR [rax],ah
 10028fb:	add    BYTE PTR [rax],ah
 10028fd:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d003303
 1002903:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002907:	add    BYTE PTR [rax],ah
 1002909:	add    BYTE PTR [rdi+0x0],dh
 100290c:	imul   eax,DWORD PTR [rax],0x740064
 1002912:	push   0x22003d00
 1002917:	add    BYTE PTR [rcx],dh
 1002919:	add    BYTE PTR [rip+0x22002500],dh        # 0x23004e1f
 100291f:	add    BYTE PTR [rax],ah
 1002921:	add    BYTE PTR [rdx+0x0],ah
 1002924:	add    BYTE PTR [ebx+0x0],ah
 1002928:	outs   dx,DWORD PTR ds:[rsi]
 1002929:	add    BYTE PTR [rax+rax*1+0x6f],ch
 100292d:	add    BYTE PTR [rdx+0x0],dh
 1002930:	cmp    eax,0x23002200
 1002935:	add    BYTE PTR [rsi+0x0],al
 1002938:	rex.RX add BYTE PTR [rax],r14b
 100293b:	add    BYTE PTR [rax],dh
 100293d:	add    BYTE PTR [rax],dh
 100293f:	add    BYTE PTR [rax],dh
 1002941:	add    BYTE PTR [rdx],ah
 1002943:	add    BYTE PTR [rsi],bh
 1002945:	add    BYTE PTR [rax+rax*1+0x61],al
 1002949:	add    BYTE PTR [rax+rax*1+0x61],dh
 100294d:	add    BYTE PTR [rdx+0x0],ah
 1002950:	(bad)  
 1002951:	add    BYTE PTR [rbx+0x0],dh
 1002954:	add    BYTE PTR gs:[rax+rax*1],bh
 1002958:	(bad)  
 1002959:	add    BYTE PTR [rax+rax*1+0x64],dh
 100295d:	add    BYTE PTR [rsi],bh
 100295f:	add    BYTE PTR [rax],ah
 1002961:	add    BYTE PTR [rax],ah
 1002963:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d003369
 1002969:	add    BYTE PTR [rax+rax*1+0x64],dh
 100296d:	add    BYTE PTR [rax],ah
 100296f:	add    BYTE PTR [rdi+0x0],dh
 1002972:	imul   eax,DWORD PTR [rax],0x740064
 1002978:	push   0x22003d00
 100297d:	add    BYTE PTR [rcx],dh
 100297f:	add    BYTE PTR [rip+0x22002500],dh        # 0x23004e85
 1002985:	add    BYTE PTR [rax],ah
 1002987:	add    BYTE PTR [rdx+0x0],ah
 100298a:	add    BYTE PTR [ebx+0x0],ah
 100298e:	outs   dx,DWORD PTR ds:[rsi]
 100298f:	add    BYTE PTR [rax+rax*1+0x6f],ch
 1002993:	add    BYTE PTR [rdx+0x0],dh
 1002996:	cmp    eax,0x23002200
 100299b:	add    BYTE PTR [rsi+0x0],al
 100299e:	rex.RX add BYTE PTR [rax],r14b
 10029a1:	add    BYTE PTR [rax],dh
 10029a3:	add    BYTE PTR [rax],dh
 10029a5:	add    BYTE PTR [rax],dh
 10029a7:	add    BYTE PTR [rdx],ah
 10029a9:	add    BYTE PTR [rsi],bh
 10029ab:	add    BYTE PTR [rcx+0x0],al
 10029ae:	movsxd eax,DWORD PTR [rax]
 10029b0:	je     0x10029b2
 10029b2:	imul   eax,DWORD PTR [rax],0x690076
 10029b8:	je     0x10029ba
 10029ba:	jns    0x10029bc
 10029bc:	cmp    al,0x0
 10029be:	(bad)  
 10029bf:	add    BYTE PTR [rax+rax*1+0x64],dh
 10029c3:	add    BYTE PTR [rsi],bh
 10029c5:	add    BYTE PTR [rax],ah
 10029c7:	add    BYTE PTR [rax],ah
 10029c9:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d0033cf
 10029cf:	add    BYTE PTR [rax+rax*1+0x64],dh
 10029d3:	add    BYTE PTR [rax],ah
 10029d5:	add    BYTE PTR [rdi+0x0],dh
 10029d8:	imul   eax,DWORD PTR [rax],0x740064
 10029de:	push   0x22003d00
 10029e3:	add    BYTE PTR [rcx],dh
 10029e5:	add    BYTE PTR [rip+0x22002500],dh        # 0x23004eeb
 10029eb:	add    BYTE PTR [rax],ah
 10029ed:	add    BYTE PTR [rcx+0x0],ah
 10029f0:	ins    BYTE PTR es:[rdi],dx
 10029f1:	add    BYTE PTR [rcx+0x0],ch
 10029f4:	add    BYTE PTR [esi+0x0],ch
 10029f8:	cmp    eax,0x72002200
 10029fd:	add    BYTE PTR [rcx+0x0],ch
 1002a00:	add    BYTE PTR [eax+0x0],ch
 1002a04:	je     0x1002a06
 1002a06:	and    al,BYTE PTR [rax]
 1002a08:	and    BYTE PTR [rax],al
 1002a0a:	(bad)  
 1002a0b:	add    BYTE PTR [rdi+0x0],ah
 1002a0e:	movsxd eax,DWORD PTR [rax]
 1002a10:	outs   dx,DWORD PTR ds:[rsi]
 1002a11:	add    BYTE PTR [rax+rax*1+0x6f],ch
 1002a15:	add    BYTE PTR [rdx+0x0],dh
 1002a18:	cmp    eax,0x23002200
 1002a1d:	add    BYTE PTR [rsi+0x0],al
 1002a20:	rex.RX add BYTE PTR [rax],r14b
 1002a23:	add    BYTE PTR [rax],dh
 1002a25:	add    BYTE PTR [rax],dh
 1002a27:	add    BYTE PTR [rax],dh
 1002a29:	add    BYTE PTR [rdx],ah
 1002a2b:	add    BYTE PTR [rsi],bh
 1002a2d:	add    BYTE PTR [rax+rax*1],bh
 1002a30:	jo     0x1002a32
 1002a32:	and    BYTE PTR [rax],al
 1002a34:	(bad)  
 1002a35:	add    BYTE PTR [rax+rax*1+0x69],ch
 1002a39:	add    BYTE PTR [rdi+0x0],ah
 1002a3c:	outs   dx,BYTE PTR ds:[rsi]
 1002a3d:	add    BYTE PTR [rip+0x63002200],bh        # 0x64004c43
 1002a43:	add    BYTE PTR [rbp+0x0],ah
 1002a46:	outs   dx,BYTE PTR ds:[rsi]
 1002a47:	add    BYTE PTR [rax+rax*1+0x65],dh
 1002a4b:	add    BYTE PTR [rdx+0x0],dh
 1002a4e:	and    al,BYTE PTR [rax]
 1002a50:	add    BYTE PTR ds:[rax+rax*1+0x61],al
 1002a55:	add    BYTE PTR [rax+rax*1+0x65],dh
 1002a59:	add    BYTE PTR [rax+rax*1],bh
 1002a5c:	(bad)  
 1002a5d:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002a61:	add    BYTE PTR [rsi],bh
 1002a63:	add    BYTE PTR [rax],ah
 1002a65:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d00346b
 1002a6b:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002a6f:	add    BYTE PTR [rax],ah
 1002a71:	add    BYTE PTR [rdi+0x0],dh
 1002a74:	imul   eax,DWORD PTR [rax],0x740064
 1002a7a:	push   0x22003d00
 1002a7f:	add    BYTE PTR [rcx],dh
 1002a81:	add    BYTE PTR [rip+0x22002500],dh        # 0x23004f87
 1002a87:	add    BYTE PTR [rax],ah
 1002a89:	add    BYTE PTR [rdx+0x0],ah
 1002a8c:	add    BYTE PTR [ebx+0x0],ah
 1002a90:	outs   dx,DWORD PTR ds:[rsi]
 1002a91:	add    BYTE PTR [rax+rax*1+0x6f],ch
 1002a95:	add    BYTE PTR [rdx+0x0],dh
 1002a98:	cmp    eax,0x23002200
 1002a9d:	add    BYTE PTR [rsi+0x0],al
 1002aa0:	rex.RX add BYTE PTR [rax],r14b
 1002aa3:	add    BYTE PTR [rax],dh
 1002aa5:	add    BYTE PTR [rax],dh
 1002aa7:	add    BYTE PTR [rax],dh
 1002aa9:	add    BYTE PTR [rdx],ah
 1002aab:	add    BYTE PTR [rsi],bh
 1002aad:	add    BYTE PTR [rdx+0x0],dl
 1002ab0:	add    BYTE PTR gs:[rbx+0x0],dh
 1002ab4:	jne    0x1002ab6
 1002ab6:	ins    BYTE PTR es:[rdi],dx
 1002ab7:	add    BYTE PTR [rax+rax*1+0x3c],dh
 1002abb:	add    BYTE PTR [rdi],ch
 1002abd:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002ac1:	add    BYTE PTR [rsi],bh
 1002ac3:	add    BYTE PTR [rax],ah
 1002ac5:	add    BYTE PTR [rax],ah
 1002ac7:	add    BYTE PTR [rax],ah
 1002ac9:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d0034cf
 1002acf:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002ad3:	add    BYTE PTR [rax],ah
 1002ad5:	add    BYTE PTR [rdi+0x0],dh
 1002ad8:	imul   eax,DWORD PTR [rax],0x740064
 1002ade:	push   0x22003d00
 1002ae3:	add    BYTE PTR [rax+rax*1],dh
 1002ae6:	xor    BYTE PTR [rax],al
 1002ae8:	and    eax,0x20002200
 1002aed:	add    BYTE PTR [rdx+0x0],ah
 1002af0:	add    BYTE PTR [ebx+0x0],ah
 1002af4:	outs   dx,DWORD PTR ds:[rsi]
 1002af5:	add    BYTE PTR [rax+rax*1+0x6f],ch
 1002af9:	add    BYTE PTR [rdx+0x0],dh
 1002afc:	cmp    eax,0x23002200
 1002b01:	add    BYTE PTR [rsi+0x0],al
 1002b04:	rex.RX add BYTE PTR [rax],r14b
 1002b07:	add    BYTE PTR [rax],dh
 1002b09:	add    BYTE PTR [rax],dh
 1002b0b:	add    BYTE PTR [rax],dh
 1002b0d:	add    BYTE PTR [rdx],ah
 1002b0f:	add    BYTE PTR [rsi],bh
 1002b11:	add    BYTE PTR [rbp+0x0],cl
 1002b14:	add    BYTE PTR gs:[rbx+0x0],dh
 1002b18:	jae    0x1002b1a
 1002b1a:	(bad)  
 1002b1b:	add    BYTE PTR [rdi+0x0],ah
 1002b1e:	add    BYTE PTR gs:[rax+rax*1],bh
 1002b22:	(bad)  
 1002b23:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002b27:	add    BYTE PTR [rsi],bh
 1002b29:	add    BYTE PTR [rax],ah
 1002b2b:	add    BYTE PTR [rax+rax*1],bh
 1002b2e:	(bad)  
 1002b2f:	add    BYTE PTR [rax+rax*1+0x72],dh
 1002b33:	add    BYTE PTR [rsi],bh
 1002b35:	add    BYTE PTR [rip+0xa00],cl        # 0x100353b
 1002b3b:	add    BYTE PTR [rax],al
 1002b3d:	add    BYTE PTR [rax],al
 1002b3f:	add    BYTE PTR [rax+rax*1],bh
 1002b42:	(bad)  
 1002b43:	add    BYTE PTR [rax+rax*1+0x72],dh
 1002b47:	add    BYTE PTR [rsi],bh
 1002b49:	add    BYTE PTR [rax],ah
 1002b4b:	add    BYTE PTR [rax+rax*1],bh
 1002b4e:	(bad)  
 1002b4f:	add    BYTE PTR [rax+rax*1+0x61],dh
 1002b53:	add    BYTE PTR [rdx+0x0],ah
 1002b56:	ins    BYTE PTR es:[rdi],dx
 1002b57:	add    BYTE PTR [rbp+0x0],ah
 1002b5a:	add    BYTE PTR ds:[rax],ah
 1002b5d:	add    BYTE PTR [rax+rax*1],bh
 1002b60:	(bad)  
 1002b61:	add    BYTE PTR [rdx+0x0],ah
 1002b64:	outs   dx,DWORD PTR ds:[rsi]
 1002b65:	add    BYTE PTR [rax+rax*1+0x79],ah
 1002b69:	add    BYTE PTR [rsi],bh
 1002b6b:	add    BYTE PTR [rax],ah
 1002b6d:	add    BYTE PTR [rax+rax*1],bh
 1002b70:	(bad)  
 1002b71:	add    BYTE PTR [rax+0x0],ch
 1002b74:	je     0x1002b76
 1002b76:	ins    DWORD PTR es:[rdi],dx
 1002b77:	add    BYTE PTR [rax+rax*1+0x3e],ch
 1002b7b:	add    BYTE PTR [rax],al
 1002b7d:	add    BYTE PTR [rax],al
 1002b7f:	add    BYTE PTR [rdi+0x0],dh
 1002b82:	sub    eax,DWORD PTR [rax]
 1002b84:	add    BYTE PTR [rax],al
 1002b86:	add    BYTE PTR [rax],al
 1002b88:	ja     0x1002bb5
 1002b8a:	add    BYTE PTR [rax],al
 1002b8c:	and    BYTE PTR [rax],al
 1002b8e:	add    BYTE PTR [rax],al
 1002b90:	rex.WRB add BYTE PTR [r15+0x0],r9b
 1002b94:	rex.WRX add BYTE PTR [rax+r8*1+0x48],r10b
 1002b99:	add    BYTE PTR [rbx+0x0],dl
 1002b9c:	add    BYTE PTR [rax],al
 1002b9e:	add    BYTE PTR [rax],al
 1002ba0:	rex.W add BYTE PTR [rdi+0x0],cl
 1002ba4:	push   rbp
 1002ba5:	add    BYTE PTR [rdx+0x0],dl
 1002ba8:	push   rbx
 1002ba9:	add    BYTE PTR [rax],al
 1002bab:	add    BYTE PTR [rax],al
 1002bad:	add    BYTE PTR [rax],al
 1002baf:	add    BYTE PTR [rax+rax*1+0x41],al
 1002bb3:	add    BYTE PTR [rcx+0x0],bl
 1002bb6:	push   rbx
	...
 1002bbf:	add    BYTE PTR [rbp+0x0],cl
 1002bc2:	rex.WB add BYTE PTR [r14+0x0],cl
 1002bc6:	push   rbp
 1002bc7:	add    BYTE PTR [rax+rax*1+0x45],dl
 1002bcb:	add    BYTE PTR [rbx+0x0],dl
 1002bce:	add    BYTE PTR [rax],al
 1002bd0:	cmp    al,0x0
 1002bd2:	je     0x1002bd4
 1002bd4:	jb     0x1002bd6
 1002bd6:	add    BYTE PTR ds:[rax],ah
 1002bd9:	add    BYTE PTR [rax+rax*1],bh
 1002bdc:	je     0x1002bde
 1002bde:	add    BYTE PTR fs:[rax],ah
 1002be1:	add    BYTE PTR [rdi+0x0],dh
 1002be4:	imul   eax,DWORD PTR [rax],0x740064
 1002bea:	push   0x22003d00
 1002bef:	add    BYTE PTR [rcx],dh
 1002bf1:	add    BYTE PTR [rip+0x25002500],dh        # 0x260050f7
 1002bf7:	add    BYTE PTR [rdx],ah
 1002bf9:	add    BYTE PTR [rsi],bh
 1002bfb:	add    BYTE PTR [rip+0x3c007300],ah        # 0x3d009f01
 1002c01:	add    BYTE PTR [rdi],ch
 1002c03:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c07:	add    BYTE PTR [rsi],bh
 1002c09:	add    BYTE PTR [rax],ah
 1002c0b:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d003611
 1002c11:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c15:	add    BYTE PTR [rax],ah
 1002c17:	add    BYTE PTR [rdi+0x0],dh
 1002c1a:	imul   eax,DWORD PTR [rax],0x740064
 1002c20:	push   0x22003d00
 1002c25:	add    BYTE PTR [rcx],dh
 1002c27:	add    BYTE PTR [rip+0x25002500],dh        # 0x2600512d
 1002c2d:	add    BYTE PTR [rdx],ah
 1002c2f:	add    BYTE PTR [rsi],bh
 1002c31:	add    BYTE PTR [rip+0x3c007300],ah        # 0x3d009f37
 1002c37:	add    BYTE PTR [rdi],ch
 1002c39:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c3d:	add    BYTE PTR [rsi],bh
 1002c3f:	add    BYTE PTR [rax],ah
 1002c41:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d003647
 1002c47:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c4b:	add    BYTE PTR [rax],ah
 1002c4d:	add    BYTE PTR [rdi+0x0],dh
 1002c50:	imul   eax,DWORD PTR [rax],0x740064
 1002c56:	push   0x22003d00
 1002c5b:	add    BYTE PTR [rcx],dh
 1002c5d:	add    BYTE PTR [rip+0x25002500],dh        # 0x26005163
 1002c63:	add    BYTE PTR [rdx],ah
 1002c65:	add    BYTE PTR [rax],ah
 1002c67:	add    BYTE PTR [rcx+0x0],ah
 1002c6a:	ins    BYTE PTR es:[rdi],dx
 1002c6b:	add    BYTE PTR [rcx+0x0],ch
 1002c6e:	add    BYTE PTR [esi+0x0],ch
 1002c72:	cmp    eax,0x72002200
 1002c77:	add    BYTE PTR [rcx+0x0],ch
 1002c7a:	add    BYTE PTR [eax+0x0],ch
 1002c7e:	je     0x1002c80
 1002c80:	and    al,BYTE PTR [rax]
 1002c82:	add    BYTE PTR ds:[rip+0x3c007300],ah        # 0x3d009f89
 1002c89:	add    BYTE PTR [rdi],ch
 1002c8b:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c8f:	add    BYTE PTR [rsi],bh
 1002c91:	add    BYTE PTR [rax],ah
 1002c93:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d003699
 1002c99:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002c9d:	add    BYTE PTR [rax],ah
 1002c9f:	add    BYTE PTR [rdi+0x0],dh
 1002ca2:	imul   eax,DWORD PTR [rax],0x740064
 1002ca8:	push   0x22003d00
 1002cad:	add    BYTE PTR [rcx],dh
 1002caf:	add    BYTE PTR [rip+0x25002500],dh        # 0x260051b5
 1002cb5:	add    BYTE PTR [rdx],ah
 1002cb7:	add    BYTE PTR [rsi],bh
 1002cb9:	add    BYTE PTR [rip+0x3c007300],ah        # 0x3d009fbf
 1002cbf:	add    BYTE PTR [rdi],ch
 1002cc1:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002cc5:	add    BYTE PTR [rsi],bh
 1002cc7:	add    BYTE PTR [rip+0x3c000a00],cl        # 0x3d0036cd
 1002ccd:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002cd1:	add    BYTE PTR [rax],ah
 1002cd3:	add    BYTE PTR [rdi+0x0],dh
 1002cd6:	imul   eax,DWORD PTR [rax],0x740064
 1002cdc:	push   0x22003d00
 1002ce1:	add    BYTE PTR [rax+rax*1],dh
 1002ce4:	xor    BYTE PTR [rax],al
 1002ce6:	and    eax,0x22002500
 1002ceb:	add    BYTE PTR [rsi],bh
 1002ced:	add    BYTE PTR [rip+0x3c007300],ah        # 0x3d009ff3
 1002cf3:	add    BYTE PTR [rdi],ch
 1002cf5:	add    BYTE PTR [rax+rax*1+0x64],dh
 1002cf9:	add    BYTE PTR [rsi],bh
 1002cfb:	add    BYTE PTR [rax],ah
 1002cfd:	add    BYTE PTR [rax+rax*1],bh
 1002d00:	(bad)  
 1002d01:	add    BYTE PTR [rax+rax*1+0x72],dh
 1002d05:	add    BYTE PTR [rsi],bh
 1002d07:	add    BYTE PTR [rax],ah
 1002d09:	add    BYTE PTR [rip+0xa00],cl        # 0x100370f
 1002d0f:	add    BYTE PTR [rax],dh
 1002d11:	add    BYTE PTR [rax],dh
 1002d13:	add    BYTE PTR [rax],dh
 1002d15:	add    BYTE PTR [rax],dh
 1002d17:	add    BYTE PTR [rax],dh
 1002d19:	add    BYTE PTR [rax],dh
 1002d1b:	add    BYTE PTR [rax],dh
 1002d1d:	add    BYTE PTR [rax],dh
 1002d1f:	add    BYTE PTR [rip+0x30003000],ch        # 0x31005d25
 1002d25:	add    BYTE PTR [rax],dh
 1002d27:	add    BYTE PTR [rax],dh
 1002d29:	add    BYTE PTR [rip+0x30003000],ch        # 0x31005d2f
 1002d2f:	add    BYTE PTR [rax],dh
 1002d31:	add    BYTE PTR [rax],dh
 1002d33:	add    BYTE PTR [rip+0x30003000],ch        # 0x31005d39
 1002d39:	add    BYTE PTR [rax],dh
 1002d3b:	add    BYTE PTR [rax],dh
 1002d3d:	add    BYTE PTR [rip+0x30003000],ch        # 0x31005d43
 1002d43:	add    BYTE PTR [rax],dh
 1002d45:	add    BYTE PTR [rax],dh
 1002d47:	add    BYTE PTR [rax],dh
 1002d49:	add    BYTE PTR [rax],dh
 1002d4b:	add    BYTE PTR [rax],dh
 1002d4d:	add    BYTE PTR [rax],dh
 1002d4f:	add    BYTE PTR [rax],dh
 1002d51:	add    BYTE PTR [rax],dh
 1002d53:	add    BYTE PTR [rax],dh
 1002d55:	add    BYTE PTR [rax],dh
	...
 1002d5f:	add    BYTE PTR [rcx+0x0],al
 1002d62:	ins    BYTE PTR es:[rdi],dx
 1002d63:	add    BYTE PTR [rax+rax*1+0x20],ch
 1002d67:	add    BYTE PTR [rcx+0x0],ah
 1002d6a:	add    BYTE PTR fs:[rip+0x6f006800],ch        # 0x70009571
 1002d71:	add    BYTE PTR [rbx+0x0],ah
 1002d74:	and    BYTE PTR [rax],al
 1002d76:	jo     0x1002d78
 1002d78:	ins    BYTE PTR es:[rdi],dx
 1002d79:	add    BYTE PTR [rcx+0x0],ah
 1002d7c:	outs   dx,BYTE PTR ds:[rsi]
 1002d7d:	add    BYTE PTR [rbx+0x0],dh
	...
 1002d90:	rex.WB add BYTE PTR [r14+0x0],cl
 1002d94:	push   rbx
 1002d95:	add    BYTE PTR [rbp+0x0],al
 1002d98:	push   rdx
 1002d99:	add    BYTE PTR [rax+rax*1+0x20],dl
 1002d9d:	add    BYTE PTR [rbp+0x0],ch
 1002da0:	jae    0x1002da2
 1002da2:	add    BYTE PTR fs:[rdx+0x0],ah
 1002da6:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 1002dab:	add    BYTE PTR [rdi+0x0],ch
 1002dae:	add    BYTE PTR cs:[rbx+0x0],dh
 1002db2:	jns    0x1002db4
 1002db4:	jae    0x1002db6
 1002db6:	add    BYTE PTR fs:[rdx+0x0],ah
 1002dba:	ins    DWORD PTR es:[rdi],dx
 1002dbb:	add    BYTE PTR [rcx+0x0],ah
 1002dbe:	imul   eax,DWORD PTR [rax],0x74006e
 1002dc4:	jo     0x1002dc6
 1002dc6:	ins    BYTE PTR es:[rdi],dx
 1002dc7:	add    BYTE PTR [rcx+0x0],ah
 1002dca:	outs   dx,BYTE PTR ds:[rsi]
 1002dcb:	add    BYTE PTR [rdi+0x0],bl
 1002dce:	push   0x73006900
 1002dd3:	add    BYTE PTR [rax+rax*1+0x6f],dh
 1002dd7:	add    BYTE PTR [rdx+0x0],dh
 1002dda:	jns    0x1002ddc
 1002ddc:	and    BYTE PTR [rax],al
 1002dde:	sub    BYTE PTR [rax],al
 1002de0:	jo     0x1002de2
 1002de2:	ins    BYTE PTR es:[rdi],dx
 1002de3:	add    BYTE PTR [rcx+0x0],ah
 1002de6:	outs   dx,BYTE PTR ds:[rsi]
 1002de7:	add    BYTE PTR [rdi+0x0],bl
 1002dea:	imul   eax,DWORD PTR [rax],0x2c0064
 1002df0:	and    BYTE PTR [rax],al
 1002df2:	jo     0x1002df4
 1002df4:	ins    BYTE PTR es:[rdi],dx
 1002df5:	add    BYTE PTR [rcx+0x0],ah
 1002df8:	outs   dx,BYTE PTR ds:[rsi]
 1002df9:	add    BYTE PTR [rdi+0x0],bl
 1002dfc:	outs   dx,BYTE PTR ds:[rsi]
 1002dfd:	add    BYTE PTR [rcx+0x0],ah
 1002e00:	ins    DWORD PTR es:[rdi],dx
 1002e01:	add    BYTE PTR [rbp+0x0],ah
 1002e04:	sub    al,0x0
 1002e06:	and    BYTE PTR [rax],al
 1002e08:	jae    0x1002e0a
 1002e0a:	add    BYTE PTR gs:[rdx+0x0],dh
 1002e0e:	jbe    0x1002e10
 1002e10:	add    BYTE PTR gs:[rdx+0x0],dh
 1002e14:	pop    rdi
 1002e15:	add    BYTE PTR [rsi+0x0],ch
 1002e18:	(bad)  
 1002e19:	add    BYTE PTR [rbp+0x0],ch
 1002e1c:	add    BYTE PTR gs:[rax+rax*1],ch
 1002e20:	and    BYTE PTR [rax],al
 1002e22:	add    BYTE PTR fs:[rcx+0x0],ah
 1002e26:	je     0x1002e28
 1002e28:	(bad)  
 1002e29:	add    BYTE PTR [rdx+0x0],ah
 1002e2c:	(bad)  
 1002e2d:	add    BYTE PTR [rbx+0x0],dh
 1002e30:	add    BYTE PTR gs:[rdi+0x0],bl
 1002e34:	outs   dx,BYTE PTR ds:[rsi]
 1002e35:	add    BYTE PTR [rcx+0x0],ah
 1002e38:	ins    DWORD PTR es:[rdi],dx
 1002e39:	add    BYTE PTR [rbp+0x0],ah
 1002e3c:	sub    al,0x0
 1002e3e:	and    BYTE PTR [rax],al
 1002e40:	(bad)  
 1002e41:	add    BYTE PTR [rbx+0x0],ah
 1002e44:	je     0x1002e46
 1002e46:	imul   eax,DWORD PTR [rax],0x690076
 1002e4c:	je     0x1002e4e
 1002e4e:	jns    0x1002e50
 1002e50:	sub    al,0x0
 1002e52:	and    BYTE PTR [rax],al
 1002e54:	jae    0x1002e56
 1002e56:	jne    0x1002e58
 1002e58:	movsxd eax,DWORD PTR [rax]
 1002e5a:	movsxd eax,DWORD PTR [rax]
 1002e5c:	add    BYTE PTR gs:[rbp+0x0],ah
 1002e60:	add    BYTE PTR fs:[rbp+0x0],ah
 1002e64:	add    BYTE PTR fs:[rax+rax*1],ch
 1002e68:	and    BYTE PTR [rax],al
 1002e6a:	add    BYTE PTR fs:[rbp+0x0],dh
 1002e6e:	jb     0x1002e70
 1002e70:	(bad)  
 1002e71:	add    BYTE PTR [rax+rax*1+0x69],dh
 1002e75:	add    BYTE PTR [rdi+0x0],ch
 1002e78:	outs   dx,BYTE PTR ds:[rsi]
 1002e79:	add    BYTE PTR [rax+rax*1],ch
 1002e7c:	and    BYTE PTR [rax],al
 1002e7e:	add    BYTE PTR gs:[rdx+0x0],dh
 1002e82:	jb     0x1002e84
 1002e84:	outs   dx,DWORD PTR ds:[rsi]
 1002e85:	add    BYTE PTR [rdx+0x0],dh
 1002e88:	pop    rdi
 1002e89:	add    BYTE PTR [rsi+0x0],ch
 1002e8c:	jne    0x1002e8e
 1002e8e:	ins    DWORD PTR es:[rdi],dx
 1002e8f:	add    BYTE PTR [rdx+0x0],ah
 1002e92:	add    BYTE PTR gs:[rdx+0x0],dh
 1002e96:	sub    al,0x0
 1002e98:	and    BYTE PTR [rax],al
 1002e9a:	ins    DWORD PTR es:[rdi],dx
 1002e9b:	add    BYTE PTR [rbp+0x0],ah
 1002e9e:	jae    0x1002ea0
 1002ea0:	jae    0x1002ea2
 1002ea2:	(bad)  
 1002ea3:	add    BYTE PTR [rdi+0x0],ah
 1002ea6:	add    BYTE PTR gs:[rcx],ch
 1002ea9:	add    BYTE PTR [rax],ah
 1002eab:	add    BYTE PTR [rsi+0x0],dl
 1002eae:	add    BYTE PTR [r8+rax*1+0x55],cl
 1002eb3:	add    BYTE PTR [rbp+0x0],al
 1002eb6:	push   rbx
 1002eb7:	add    BYTE PTR [rax],ah
 1002eb9:	add    BYTE PTR [rax],ch
 1002ebb:	add    BYTE PTR [rdi],ah
 1002ebd:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a1c3
 1002ec3:	add    BYTE PTR [rax+rax*1],ch
 1002ec6:	and    BYTE PTR [rax],al
 1002ec8:	rex.WRX add BYTE PTR [rdi],r12b
 1002ecb:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a1d1
 1002ed1:	add    BYTE PTR [rax+rax*1],ch
 1002ed4:	and    BYTE PTR [rax],al
 1002ed6:	rex.WRX add BYTE PTR [rdi],r12b
 1002ed9:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a1df
 1002edf:	add    BYTE PTR [rax+rax*1],ch
 1002ee2:	and    BYTE PTR [rax],al
 1002ee4:	rex.WRX add BYTE PTR [rdi],r12b
 1002ee7:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a1ed
 1002eed:	add    BYTE PTR [rax+rax*1],ch
 1002ef0:	and    BYTE PTR [rax],al
 1002ef2:	rex.WRX add BYTE PTR [rdi],r12b
 1002ef5:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a1fb
 1002efb:	add    BYTE PTR [rax+rax*1],ch
 1002efe:	and    BYTE PTR [rax],al
 1002f00:	and    eax,0x2c006400
 1002f05:	add    BYTE PTR [rax],ah
 1002f07:	add    BYTE PTR [rip+0x2c006400],ah        # 0x2d00930d
 1002f0d:	add    BYTE PTR [rax],ah
 1002f0f:	add    BYTE PTR [rip+0x2c006400],ah        # 0x2d009315
 1002f15:	add    BYTE PTR [rax],ah
 1002f17:	add    BYTE PTR [rsi+0x0],cl
 1002f1a:	(bad)  
 1002f1b:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a221
 1002f21:	add    BYTE PTR [rcx],ch
 1002f23:	add    BYTE PTR [rax],ah
 1002f25:	add    BYTE PTR [rax],al
 1002f27:	add    BYTE PTR [rax+rax*1+0x62],ah
 1002f2b:	add    BYTE PTR [rdi+0x0],bl
 1002f2e:	ins    DWORD PTR es:[rdi],dx
 1002f2f:	add    BYTE PTR [rcx+0x0],ah
 1002f32:	imul   eax,DWORD PTR [rax],0x74006e
 1002f38:	pop    rdi
 1002f39:	add    BYTE PTR [rax+0x0],dh
 1002f3c:	ins    BYTE PTR es:[rdi],dx
 1002f3d:	add    BYTE PTR [rcx+0x0],ah
 1002f40:	outs   dx,BYTE PTR ds:[rsi]
 1002f41:	add    BYTE PTR [rdi+0x0],bl
 1002f44:	ins    BYTE PTR es:[rdi],dx
 1002f45:	add    BYTE PTR [rdi+0x0],ch
 1002f48:	movsxd eax,DWORD PTR [rax]
 1002f4a:	imul   eax,DWORD PTR [rax],0x5f
 1002f4d:	add    BYTE PTR [rax+rax*1+0x62],ah
 1002f51:	add    BYTE PTR [rdi+0x0],bl
 1002f54:	add    BYTE PTR [rax],al
 1002f56:	add    BYTE PTR [rax],al
 1002f58:	add    BYTE PTR [rdx+0x0],r10b
 1002f5c:	rex.WRXB add BYTE PTR [r8+0x0],r10b
 1002f60:	and    BYTE PTR [rax],al
 1002f62:	push   rsp
 1002f63:	add    BYTE PTR [rcx+0x0],al
 1002f66:	add    BYTE PTR [rax+r8*1+0x45],cl
 1002f6b:	add    BYTE PTR [rax],ah
 1002f6d:	add    BYTE PTR [rax],al
 1002f6f:	add    BYTE PTR [rbx+0x0],al
 1002f72:	push   rdx
 1002f73:	add    BYTE PTR [rbp+0x0],al
 1002f76:	add    BYTE PTR [r8+rax*1+0x45],dl
 1002f7b:	add    BYTE PTR [rax],ah
 1002f7d:	add    BYTE PTR [rax+rax*1+0x41],dl
 1002f81:	add    BYTE PTR [rdx+0x0],al
 1002f84:	rex.WR add BYTE PTR [rbp+0x0],r8b
 1002f88:	and    BYTE PTR [rax],al
 1002f8a:	add    BYTE PTR [rax],al
 1002f8c:	add    BYTE PTR [rax],al
 1002f8e:	add    BYTE PTR [rax],al
 1002f90:	and    BYTE PTR [rax],al
 1002f92:	sub    BYTE PTR [rax],al
 1002f94:	movsxd eax,DWORD PTR [rax]
 1002f96:	outs   dx,DWORD PTR ds:[rsi]
 1002f97:	add    BYTE PTR [rax+rax*1+0x31],ch
 1002f9b:	add    BYTE PTR [rax],ah
 1002f9d:	add    BYTE PTR [rcx+0x0],ch
 1002fa0:	outs   dx,BYTE PTR ds:[rsi]
 1002fa1:	add    BYTE PTR [rax+rax*1+0x29],dh
	...
 1002fad:	add    BYTE PTR [rax],al
 1002faf:	add    BYTE PTR [rbx+0x0],dl
 1002fb2:	add    BYTE PTR [r8+rax*1+0x45],r9b
 1002fb7:	add    BYTE PTR [rbx+0x0],al
 1002fba:	push   rsp
 1002fbb:	add    BYTE PTR [rax],ah
 1002fbd:	add    BYTE PTR [rax+0x0],dh
 1002fc0:	ins    BYTE PTR es:[rdi],dx
 1002fc1:	add    BYTE PTR [rcx+0x0],ah
 1002fc4:	outs   dx,BYTE PTR ds:[rsi]
 1002fc5:	add    BYTE PTR [rdi+0x0],bl
 1002fc8:	outs   dx,BYTE PTR ds:[rsi]
 1002fc9:	add    BYTE PTR [rcx+0x0],ah
 1002fcc:	ins    DWORD PTR es:[rdi],dx
 1002fcd:	add    BYTE PTR [rbp+0x0],ah
 1002fd0:	sub    al,0x0
 1002fd2:	and    BYTE PTR [rax],al
 1002fd4:	jb     0x1002fd6
 1002fd6:	add    BYTE PTR gs:[rbp+0x0],ch
 1002fda:	outs   dx,DWORD PTR ds:[rsi]
 1002fdb:	add    BYTE PTR [rax+rax*1+0x65],dh
 1002fdf:	add    BYTE PTR [rdi+0x0],bl
 1002fe2:	push   0x73006900
 1002fe7:	add    BYTE PTR [rax+rax*1+0x6f],dh
 1002feb:	add    BYTE PTR [rdx+0x0],dh
 1002fee:	jns    0x1002ff0
 1002ff0:	pop    rdi
 1002ff1:	add    BYTE PTR [rbx+0x0],dh
 1002ff4:	add    BYTE PTR gs:[rdx+0x0],dh
 1002ff8:	jbe    0x1002ffa
 1002ffa:	add    BYTE PTR gs:[rdx+0x0],dh
 1002ffe:	and    BYTE PTR [rax],al
 1003000:	rex.RX add BYTE PTR [rdx+0x0],r10b
 1003004:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 1003008:	and    BYTE PTR [rax],al
 100300a:	ins    DWORD PTR es:[rdi],dx
 100300b:	add    BYTE PTR [rbx+0x0],dh
 100300e:	add    BYTE PTR fs:[rdx+0x0],ah
 1003012:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 1003017:	add    BYTE PTR [rdi+0x0],ch
 100301a:	add    BYTE PTR cs:[rbx+0x0],dh
 100301e:	jns    0x1003020
 1003020:	jae    0x1003022
 1003022:	add    BYTE PTR fs:[rdx+0x0],ah
 1003026:	ins    DWORD PTR es:[rdi],dx
 1003027:	add    BYTE PTR [rcx+0x0],ah
 100302a:	imul   eax,DWORD PTR [rax],0x74006e
 1003030:	jo     0x1003032
 1003032:	ins    BYTE PTR es:[rdi],dx
 1003033:	add    BYTE PTR [rcx+0x0],ah
 1003036:	outs   dx,BYTE PTR ds:[rsi]
 1003037:	add    BYTE PTR [rbx+0x0],dh
 100303a:	and    BYTE PTR [rax],al
 100303c:	push   rdi
 100303d:	add    BYTE PTR [rax+0x0],cl
 1003040:	add    BYTE PTR [r10+0x0],r10b
 1003044:	add    BYTE PTR [r8],r12b
 1003047:	add    BYTE PTR [rax+0x0],dh
 100304a:	ins    BYTE PTR es:[rdi],dx
 100304b:	add    BYTE PTR [rcx+0x0],ah
 100304e:	outs   dx,BYTE PTR ds:[rsi]
 100304f:	add    BYTE PTR [rdi+0x0],bl
 1003052:	imul   eax,DWORD PTR [rax],0x200064
 1003058:	cmp    eax,0x27002000
 100305d:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a363
	...
 100306f:	add    BYTE PTR [rbx+0x0],dl
 1003072:	add    BYTE PTR [r8+rax*1+0x45],r9b
 1003077:	add    BYTE PTR [rbx+0x0],al
 100307a:	push   rsp
 100307b:	add    BYTE PTR [rax],ah
 100307d:	add    BYTE PTR [rax+0x0],dh
 1003080:	ins    BYTE PTR es:[rdi],dx
 1003081:	add    BYTE PTR [rcx+0x0],ah
 1003084:	outs   dx,BYTE PTR ds:[rsi]
 1003085:	add    BYTE PTR [rdi+0x0],bl
 1003088:	imul   eax,DWORD PTR [rax],0x2c0064
 100308e:	and    BYTE PTR [rax],al
 1003090:	jb     0x1003092
 1003092:	add    BYTE PTR gs:[rbp+0x0],ch
 1003096:	outs   dx,DWORD PTR ds:[rsi]
 1003097:	add    BYTE PTR [rax+rax*1+0x65],dh
 100309b:	add    BYTE PTR [rdi+0x0],bl
 100309e:	push   0x73006900
 10030a3:	add    BYTE PTR [rax+rax*1+0x6f],dh
 10030a7:	add    BYTE PTR [rdx+0x0],dh
 10030aa:	jns    0x10030ac
 10030ac:	pop    rdi
 10030ad:	add    BYTE PTR [rbx+0x0],dh
 10030b0:	add    BYTE PTR gs:[rdx+0x0],dh
 10030b4:	jbe    0x10030b6
 10030b6:	add    BYTE PTR gs:[rdx+0x0],dh
 10030ba:	and    BYTE PTR [rax],al
 10030bc:	rex.RX add BYTE PTR [rdx+0x0],r10b
 10030c0:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 10030c4:	and    BYTE PTR [rax],al
 10030c6:	ins    DWORD PTR es:[rdi],dx
 10030c7:	add    BYTE PTR [rbx+0x0],dh
 10030ca:	add    BYTE PTR fs:[rdx+0x0],ah
 10030ce:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 10030d3:	add    BYTE PTR [rdi+0x0],ch
 10030d6:	add    BYTE PTR cs:[rbx+0x0],dh
 10030da:	jns    0x10030dc
 10030dc:	jae    0x10030de
 10030de:	add    BYTE PTR fs:[rdx+0x0],ah
 10030e2:	ins    DWORD PTR es:[rdi],dx
 10030e3:	add    BYTE PTR [rcx+0x0],ah
 10030e6:	imul   eax,DWORD PTR [rax],0x74006e
 10030ec:	jo     0x10030ee
 10030ee:	ins    BYTE PTR es:[rdi],dx
 10030ef:	add    BYTE PTR [rcx+0x0],ah
 10030f2:	outs   dx,BYTE PTR ds:[rsi]
 10030f3:	add    BYTE PTR [rbx+0x0],dh
 10030f6:	and    BYTE PTR [rax],al
 10030f8:	push   rdi
 10030f9:	add    BYTE PTR [rax+0x0],cl
 10030fc:	add    BYTE PTR [r10+0x0],r10b
 1003100:	add    BYTE PTR [r8],r12b
 1003103:	add    BYTE PTR [rax+0x0],dh
 1003106:	ins    BYTE PTR es:[rdi],dx
 1003107:	add    BYTE PTR [rcx+0x0],ah
 100310a:	outs   dx,BYTE PTR ds:[rsi]
 100310b:	add    BYTE PTR [rdi+0x0],bl
 100310e:	outs   dx,BYTE PTR ds:[rsi]
 100310f:	add    BYTE PTR [rcx+0x0],ah
 1003112:	ins    DWORD PTR es:[rdi],dx
 1003113:	add    BYTE PTR [rbp+0x0],ah
 1003116:	and    BYTE PTR [rax],al
 1003118:	cmp    eax,0x4e002000
 100311d:	add    BYTE PTR [rdi],ah
 100311f:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a425
	...
 100312d:	add    BYTE PTR [rax],al
 100312f:	add    BYTE PTR [rbx+0x0],dl
 1003132:	add    BYTE PTR [r8+rax*1+0x45],r9b
 1003137:	add    BYTE PTR [rbx+0x0],al
 100313a:	push   rsp
 100313b:	add    BYTE PTR [rax],ah
 100313d:	add    BYTE PTR [rax+rax*1+0x61],ah
 1003141:	add    BYTE PTR [rax+rax*1+0x61],dh
 1003145:	add    BYTE PTR [rdx+0x0],ah
 1003148:	(bad)  
 1003149:	add    BYTE PTR [rbx+0x0],dh
 100314c:	add    BYTE PTR gs:[rdi+0x0],bl
 1003150:	outs   dx,BYTE PTR ds:[rsi]
 1003151:	add    BYTE PTR [rcx+0x0],ah
 1003154:	ins    DWORD PTR es:[rdi],dx
 1003155:	add    BYTE PTR [rbp+0x0],ah
 1003158:	and    BYTE PTR [rax],al
 100315a:	rex.RX add BYTE PTR [rdx+0x0],r10b
 100315e:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 1003162:	and    BYTE PTR [rax],al
 1003164:	ins    DWORD PTR es:[rdi],dx
 1003165:	add    BYTE PTR [rbx+0x0],dh
 1003168:	add    BYTE PTR fs:[rdx+0x0],ah
 100316c:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 1003171:	add    BYTE PTR [rdi+0x0],ch
 1003174:	add    BYTE PTR cs:[rbx+0x0],dh
 1003178:	jns    0x100317a
 100317a:	jae    0x100317c
 100317c:	add    BYTE PTR fs:[rdx+0x0],ah
 1003180:	ins    DWORD PTR es:[rdi],dx
 1003181:	add    BYTE PTR [rcx+0x0],ah
 1003184:	imul   eax,DWORD PTR [rax],0x74006e
 100318a:	jo     0x100318c
 100318c:	ins    BYTE PTR es:[rdi],dx
 100318d:	add    BYTE PTR [rcx+0x0],ah
 1003190:	outs   dx,BYTE PTR ds:[rsi]
 1003191:	add    BYTE PTR [rdi+0x0],bl
 1003194:	add    BYTE PTR fs:[rcx+0x0],ah
 1003198:	je     0x100319a
 100319a:	(bad)  
 100319b:	add    BYTE PTR [rdx+0x0],ah
 100319e:	(bad)  
 100319f:	add    BYTE PTR [rbx+0x0],dh
 10031a2:	add    BYTE PTR gs:[rbx+0x0],dh
 10031a6:	and    BYTE PTR [rax],al
 10031a8:	push   rdi
 10031a9:	add    BYTE PTR [rax+0x0],cl
 10031ac:	add    BYTE PTR [r10+0x0],r10b
 10031b0:	add    BYTE PTR [r8],r12b
 10031b3:	add    BYTE PTR [rax+0x0],dh
 10031b6:	ins    BYTE PTR es:[rdi],dx
 10031b7:	add    BYTE PTR [rcx+0x0],ah
 10031ba:	outs   dx,BYTE PTR ds:[rsi]
 10031bb:	add    BYTE PTR [rdi+0x0],bl
 10031be:	imul   eax,DWORD PTR [rax],0x200064
 10031c4:	cmp    eax,0x27002000
 10031c9:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a4cf
	...
 10031d7:	add    BYTE PTR [rcx+0x0],al
 10031da:	ins    BYTE PTR es:[rdi],dx
 10031db:	add    BYTE PTR [rax+rax*1+0x20],ch
 10031df:	add    BYTE PTR [rax+rax*1+0x61],al
 10031e3:	add    BYTE PTR [rax+rax*1+0x61],dh
 10031e7:	add    BYTE PTR [rdx+0x0],ah
 10031ea:	(bad)  
 10031eb:	add    BYTE PTR [rbx+0x0],dh
 10031ee:	add    BYTE PTR gs:[rbx+0x0],dh
 10031f2:	add    BYTE PTR [rax],al
 10031f4:	add    BYTE PTR [rax],al
 10031f6:	add    BYTE PTR [rax],al
 10031f8:	add    BYTE PTR [r8+rax*1+0x6c],bpl
 10031fd:	add    BYTE PTR [rax],ah
 10031ff:	add    BYTE PTR [rbx+0x0],dl
 1003202:	jns    0x1003204
 1003204:	jae    0x1003206
 1003206:	je     0x1003208
 1003208:	add    BYTE PTR gs:[rbp+0x0],ch
 100320c:	and    BYTE PTR [rax],al
 100320e:	add    BYTE PTR [rcx+0x0],r12b
 1003212:	je     0x1003214
 1003214:	(bad)  
 1003215:	add    BYTE PTR [rdx+0x0],ah
 1003218:	(bad)  
 1003219:	add    BYTE PTR [rbx+0x0],dh
 100321c:	add    BYTE PTR gs:[rbx+0x0],dh
	...
 1003228:	add    BYTE PTR [r8+rax*1+0x6c],bpl
 100322d:	add    BYTE PTR [rax],ah
 100322f:	add    BYTE PTR [rbp+0x0],dl
 1003232:	jae    0x1003234
 1003234:	add    BYTE PTR gs:[rdx+0x0],dh
 1003238:	and    BYTE PTR [rax],al
 100323a:	add    BYTE PTR [rcx+0x0],r12b
 100323e:	je     0x1003240
 1003240:	(bad)  
 1003241:	add    BYTE PTR [rdx+0x0],ah
 1003244:	(bad)  
 1003245:	add    BYTE PTR [rbx+0x0],dh
 1003248:	add    BYTE PTR gs:[rbx+0x0],dh
 100324c:	add    BYTE PTR [rax],al
 100324e:	add    BYTE PTR [rax],al
 1003250:	push   rbx
 1003251:	add    BYTE PTR [rbp+0x0],al
 1003254:	rex.WR add BYTE PTR [rbp+0x0],r8b
 1003258:	add    BYTE PTR [r8+r8*1+0x20],dl
 100325d:	add    BYTE PTR [rbp+0x0],ch
 1003260:	(bad)  
 1003261:	add    BYTE PTR [rax+0x0],bh
 1003264:	pop    rdi
 1003265:	add    BYTE PTR [rax+0x0],ch
 1003268:	imul   eax,DWORD PTR [rax],0x740073
 100326e:	outs   dx,DWORD PTR ds:[rsi]
 100326f:	add    BYTE PTR [rdx+0x0],dh
 1003272:	jns    0x1003274
 1003274:	pop    rdi
 1003275:	add    BYTE PTR [rdx+0x0],dh
 1003278:	outs   dx,DWORD PTR ds:[rsi]
 1003279:	add    BYTE PTR [rdi+0x0],dh
 100327c:	jae    0x100327e
 100327e:	and    BYTE PTR [rax],al
 1003280:	rex.RX add BYTE PTR [rdx+0x0],r10b
 1003284:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 1003288:	and    BYTE PTR [rax],al
 100328a:	ins    DWORD PTR es:[rdi],dx
 100328b:	add    BYTE PTR [rbx+0x0],dh
 100328e:	add    BYTE PTR fs:[rdx+0x0],ah
 1003292:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 1003297:	add    BYTE PTR [rdi+0x0],ch
 100329a:	add    BYTE PTR cs:[rbx+0x0],dh
 100329e:	jns    0x10032a0
 10032a0:	jae    0x10032a2
 10032a2:	add    BYTE PTR fs:[rdx+0x0],ah
 10032a6:	ins    DWORD PTR es:[rdi],dx
 10032a7:	add    BYTE PTR [rcx+0x0],ah
 10032aa:	imul   eax,DWORD PTR [rax],0x74006e
 10032b0:	jo     0x10032b2
 10032b2:	ins    BYTE PTR es:[rdi],dx
 10032b3:	add    BYTE PTR [rcx+0x0],ah
 10032b6:	outs   dx,BYTE PTR ds:[rsi]
 10032b7:	add    BYTE PTR [rbx+0x0],dh
 10032ba:	and    BYTE PTR [rax],al
 10032bc:	push   rdi
 10032bd:	add    BYTE PTR [rax+0x0],cl
 10032c0:	add    BYTE PTR [r10+0x0],r10b
 10032c4:	add    BYTE PTR [r8],r12b
 10032c7:	add    BYTE PTR [rax+0x0],dh
 10032ca:	ins    BYTE PTR es:[rdi],dx
 10032cb:	add    BYTE PTR [rcx+0x0],ah
 10032ce:	outs   dx,BYTE PTR ds:[rsi]
 10032cf:	add    BYTE PTR [rdi+0x0],bl
 10032d2:	imul   eax,DWORD PTR [rax],0x200064
 10032d8:	cmp    eax,0x27002000
 10032dd:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a5e3
 10032e3:	add    BYTE PTR [rax],ah
 10032e5:	add    BYTE PTR [rbx+0x0],dl
 10032e8:	add    BYTE PTR [r8+rax*1+0x45],r9b
 10032ed:	add    BYTE PTR [rbx+0x0],al
 10032f0:	push   rsp
 10032f1:	add    BYTE PTR [rax],ah
 10032f3:	add    BYTE PTR [rbx+0x0],al
 10032f6:	rex.WRXB add BYTE PTR [r13+0x0],r10b
 10032fa:	rex.WRX add BYTE PTR [rax+r8*1+0x28],r10b
 10032ff:	add    BYTE PTR [rdx],ch
 1003301:	add    BYTE PTR [rcx],ch
 1003303:	add    BYTE PTR [rax],ah
 1003305:	add    BYTE PTR [rsi+0x0],al
 1003308:	push   rdx
 1003309:	add    BYTE PTR [rdi+0x0],cl
 100330c:	rex.WRB add BYTE PTR [r8],r12b
 100330f:	add    BYTE PTR [rbp+0x0],ch
 1003312:	jae    0x1003314
 1003314:	add    BYTE PTR fs:[rdx+0x0],ah
 1003318:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 100331d:	add    BYTE PTR [rdi+0x0],ch
 1003320:	add    BYTE PTR cs:[rbx+0x0],dh
 1003324:	jns    0x1003326
 1003326:	jae    0x1003328
 1003328:	add    BYTE PTR fs:[rdx+0x0],ah
 100332c:	ins    DWORD PTR es:[rdi],dx
 100332d:	add    BYTE PTR [rcx+0x0],ah
 1003330:	imul   eax,DWORD PTR [rax],0x74006e
 1003336:	jo     0x1003338
 1003338:	ins    BYTE PTR es:[rdi],dx
 1003339:	add    BYTE PTR [rcx+0x0],ah
 100333c:	outs   dx,BYTE PTR ds:[rsi]
 100333d:	add    BYTE PTR [rdi+0x0],bl
 1003340:	push   0x73006900
 1003345:	add    BYTE PTR [rax+rax*1+0x6f],dh
 1003349:	add    BYTE PTR [rdx+0x0],dh
 100334c:	jns    0x100334e
 100334e:	and    BYTE PTR [rax],al
 1003350:	push   rdi
 1003351:	add    BYTE PTR [rax+0x0],cl
 1003354:	add    BYTE PTR [r10+0x0],r10b
 1003358:	add    BYTE PTR [r8],r12b
 100335b:	add    BYTE PTR [rax+0x0],dh
 100335e:	ins    BYTE PTR es:[rdi],dx
 100335f:	add    BYTE PTR [rcx+0x0],ah
 1003362:	outs   dx,BYTE PTR ds:[rsi]
 1003363:	add    BYTE PTR [rdi+0x0],bl
 1003366:	imul   eax,DWORD PTR [rax],0x200064
 100336c:	cmp    eax,0x27002000
 1003371:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a677
	...
 100337f:	add    BYTE PTR [rbx+0x0],dl
 1003382:	add    BYTE PTR [r8+rax*1+0x45],r9b
 1003387:	add    BYTE PTR [rbx+0x0],al
 100338a:	push   rsp
 100338b:	add    BYTE PTR [rax],ah
 100338d:	add    BYTE PTR [rbp+0x0],ch
 1003390:	(bad)  
 1003391:	add    BYTE PTR [rax+0x0],bh
 1003394:	pop    rdi
 1003395:	add    BYTE PTR [rdx+0x0],dh
 1003398:	add    BYTE PTR gs:[rbp+0x0],ch
 100339c:	outs   dx,DWORD PTR ds:[rsi]
 100339d:	add    BYTE PTR [rax+rax*1+0x65],dh
 10033a1:	add    BYTE PTR [rdi+0x0],bl
 10033a4:	push   0x73006900
 10033a9:	add    BYTE PTR [rax+rax*1+0x6f],dh
 10033ad:	add    BYTE PTR [rdx+0x0],dh
 10033b0:	jns    0x10033b2
 10033b2:	pop    rdi
 10033b3:	add    BYTE PTR [rdx+0x0],dh
 10033b6:	outs   dx,DWORD PTR ds:[rsi]
 10033b7:	add    BYTE PTR [rdi+0x0],dh
 10033ba:	jae    0x10033bc
 10033bc:	and    BYTE PTR [rax],al
 10033be:	rex.RX add BYTE PTR [rdx+0x0],r10b
 10033c2:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 10033c6:	and    BYTE PTR [rax],al
 10033c8:	ins    DWORD PTR es:[rdi],dx
 10033c9:	add    BYTE PTR [rbx+0x0],dh
 10033cc:	add    BYTE PTR fs:[rdx+0x0],ah
 10033d0:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 10033d5:	add    BYTE PTR [rdi+0x0],ch
 10033d8:	add    BYTE PTR cs:[rbx+0x0],dh
 10033dc:	jns    0x10033de
 10033de:	jae    0x10033e0
 10033e0:	add    BYTE PTR fs:[rdx+0x0],ah
 10033e4:	ins    DWORD PTR es:[rdi],dx
 10033e5:	add    BYTE PTR [rcx+0x0],ah
 10033e8:	imul   eax,DWORD PTR [rax],0x74006e
 10033ee:	jo     0x10033f0
 10033f0:	ins    BYTE PTR es:[rdi],dx
 10033f1:	add    BYTE PTR [rcx+0x0],ah
 10033f4:	outs   dx,BYTE PTR ds:[rsi]
 10033f5:	add    BYTE PTR [rbx+0x0],dh
 10033f8:	and    BYTE PTR [rax],al
 10033fa:	push   rdi
 10033fb:	add    BYTE PTR [rax+0x0],cl
 10033fe:	add    BYTE PTR [r10+0x0],r10b
 1003402:	add    BYTE PTR [r8],r12b
 1003405:	add    BYTE PTR [rax+0x0],dh
 1003408:	ins    BYTE PTR es:[rdi],dx
 1003409:	add    BYTE PTR [rcx+0x0],ah
 100340c:	outs   dx,BYTE PTR ds:[rsi]
 100340d:	add    BYTE PTR [rdi+0x0],bl
 1003410:	imul   eax,DWORD PTR [rax],0x200064
 1003416:	cmp    eax,0x27002000
 100341b:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a721
 1003421:	add    BYTE PTR [rax],ah
 1003423:	add    BYTE PTR [rbx+0x0],dl
 1003426:	add    BYTE PTR [r8+rax*1+0x45],r9b
 100342b:	add    BYTE PTR [rbx+0x0],al
 100342e:	push   rsp
 100342f:	add    BYTE PTR [rax],ah
 1003431:	add    BYTE PTR [rbx+0x0],al
 1003434:	rex.WRXB add BYTE PTR [r13+0x0],r10b
 1003438:	rex.WRX add BYTE PTR [rax+r8*1+0x28],r10b
 100343d:	add    BYTE PTR [rdx],ch
 100343f:	add    BYTE PTR [rcx],ch
 1003441:	add    BYTE PTR [rax],ah
 1003443:	add    BYTE PTR [rsi+0x0],al
 1003446:	push   rdx
 1003447:	add    BYTE PTR [rdi+0x0],cl
 100344a:	rex.WRB add BYTE PTR [r8],r12b
 100344d:	add    BYTE PTR [rbp+0x0],ch
 1003450:	jae    0x1003452
 1003452:	add    BYTE PTR fs:[rdx+0x0],ah
 1003456:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 100345b:	add    BYTE PTR [rdi+0x0],ch
 100345e:	add    BYTE PTR cs:[rbx+0x0],dh
 1003462:	jns    0x1003464
 1003464:	jae    0x1003466
 1003466:	add    BYTE PTR fs:[rdx+0x0],ah
 100346a:	ins    DWORD PTR es:[rdi],dx
 100346b:	add    BYTE PTR [rcx+0x0],ah
 100346e:	imul   eax,DWORD PTR [rax],0x74006e
 1003474:	jo     0x1003476
 1003476:	ins    BYTE PTR es:[rdi],dx
 1003477:	add    BYTE PTR [rcx+0x0],ah
 100347a:	outs   dx,BYTE PTR ds:[rsi]
 100347b:	add    BYTE PTR [rdi+0x0],bl
 100347e:	push   0x73006900
 1003483:	add    BYTE PTR [rax+rax*1+0x6f],dh
 1003487:	add    BYTE PTR [rdx+0x0],dh
 100348a:	jns    0x100348c
 100348c:	and    BYTE PTR [rax],al
 100348e:	push   rdi
 100348f:	add    BYTE PTR [rax+0x0],cl
 1003492:	add    BYTE PTR [r10+0x0],r10b
 1003496:	add    BYTE PTR [r8],r12b
 1003499:	add    BYTE PTR [rax+0x0],dh
 100349c:	ins    BYTE PTR es:[rdi],dx
 100349d:	add    BYTE PTR [rcx+0x0],ah
 10034a0:	outs   dx,BYTE PTR ds:[rsi]
 10034a1:	add    BYTE PTR [rdi+0x0],bl
 10034a4:	imul   eax,DWORD PTR [rax],0x200064
 10034aa:	cmp    eax,0x27002000
 10034af:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a7b5
	...
 10034bd:	add    BYTE PTR [rax],al
 10034bf:	add    BYTE PTR [rbx+0x0],dl
 10034c2:	add    BYTE PTR [r8+rax*1+0x45],r9b
 10034c7:	add    BYTE PTR [rbx+0x0],al
 10034ca:	push   rsp
 10034cb:	add    BYTE PTR [rax],ah
 10034cd:	add    BYTE PTR [rbx+0x0],dh
 10034d0:	add    BYTE PTR gs:[rcx+0x0],dh
 10034d4:	jne    0x10034d6
 10034d6:	add    BYTE PTR gs:[rsi+0x0],ch
 10034da:	movsxd eax,DWORD PTR [rax]
 10034dc:	add    BYTE PTR gs:[rdi+0x0],bl
 10034e0:	imul   eax,DWORD PTR [rax],0x200064
 10034e6:	rex.RX add BYTE PTR [rdx+0x0],r10b
 10034ea:	rex.WRXB add BYTE PTR [r13+0x0],r9b
 10034ee:	and    BYTE PTR [rax],al
 10034f0:	ins    DWORD PTR es:[rdi],dx
 10034f1:	add    BYTE PTR [rbx+0x0],dh
 10034f4:	add    BYTE PTR fs:[rdx+0x0],ah
 10034f8:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 10034fd:	add    BYTE PTR [rdi+0x0],ch
 1003500:	add    BYTE PTR cs:[rbx+0x0],dh
 1003504:	jns    0x1003506
 1003506:	jae    0x1003508
 1003508:	add    BYTE PTR fs:[rdx+0x0],ah
 100350c:	ins    DWORD PTR es:[rdi],dx
 100350d:	add    BYTE PTR [rcx+0x0],ah
 1003510:	imul   eax,DWORD PTR [rax],0x74006e
 1003516:	jo     0x1003518
 1003518:	ins    BYTE PTR es:[rdi],dx
 1003519:	add    BYTE PTR [rcx+0x0],ah
 100351c:	outs   dx,BYTE PTR ds:[rsi]
 100351d:	add    BYTE PTR [rdi+0x0],bl
 1003520:	push   0x73006900
 1003525:	add    BYTE PTR [rax+rax*1+0x6f],dh
 1003529:	add    BYTE PTR [rdx+0x0],dh
 100352c:	jns    0x100352e
 100352e:	and    BYTE PTR [rax],al
 1003530:	push   rdi
 1003531:	add    BYTE PTR [rax+0x0],cl
 1003534:	add    BYTE PTR [r10+0x0],r10b
 1003538:	add    BYTE PTR [r8],r12b
 100353b:	add    BYTE PTR [rax+0x0],dh
 100353e:	ins    BYTE PTR es:[rdi],dx
 100353f:	add    BYTE PTR [rcx+0x0],ah
 1003542:	outs   dx,BYTE PTR ds:[rsi]
 1003543:	add    BYTE PTR [rdi+0x0],bl
 1003546:	imul   eax,DWORD PTR [rax],0x200064
 100354c:	cmp    eax,0x27002000
 1003551:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a857
 1003557:	add    BYTE PTR [rax],ah
 1003559:	add    BYTE PTR [rdi+0x0],cl
 100355c:	push   rdx
 100355d:	add    BYTE PTR [rax+rax*1+0x45],al
 1003561:	add    BYTE PTR [rdx+0x0],dl
 1003564:	and    BYTE PTR [rax],al
 1003566:	rex.X add BYTE PTR [rcx+0x0],bl
 100356a:	and    BYTE PTR [rax],al
 100356c:	jae    0x100356e
 100356e:	add    BYTE PTR gs:[rcx+0x0],dh
 1003572:	jne    0x1003574
 1003574:	add    BYTE PTR gs:[rsi+0x0],ch
 1003578:	movsxd eax,DWORD PTR [rax]
 100357a:	add    BYTE PTR gs:[rdi+0x0],bl
 100357e:	imul   eax,DWORD PTR [rax],0x64
	...
 1003590:	add    BYTE PTR [rbp+0x0],r8b
 1003594:	rex.WR add BYTE PTR [rbp+0x0],r8b
 1003598:	push   rsp
 1003599:	add    BYTE PTR [rbp+0x0],al
 100359c:	and    BYTE PTR [rax],al
 100359e:	ins    DWORD PTR es:[rdi],dx
 100359f:	add    BYTE PTR [rbx+0x0],dh
 10035a2:	add    BYTE PTR fs:[rdx+0x0],ah
 10035a6:	add    BYTE PTR cs:[rax+rax*1+0x62],ah
 10035ab:	add    BYTE PTR [rdi+0x0],ch
 10035ae:	add    BYTE PTR cs:[rbx+0x0],dh
 10035b2:	jns    0x10035b4
 10035b4:	jae    0x10035b6
 10035b6:	add    BYTE PTR fs:[rdx+0x0],ah
 10035ba:	ins    DWORD PTR es:[rdi],dx
 10035bb:	add    BYTE PTR [rcx+0x0],ah
 10035be:	imul   eax,DWORD PTR [rax],0x74006e
 10035c4:	jo     0x10035c6
 10035c6:	ins    BYTE PTR es:[rdi],dx
 10035c7:	add    BYTE PTR [rcx+0x0],ah
 10035ca:	outs   dx,BYTE PTR ds:[rsi]
 10035cb:	add    BYTE PTR [rdi+0x0],bl
 10035ce:	push   0x73006900
 10035d3:	add    BYTE PTR [rax+rax*1+0x6f],dh
 10035d7:	add    BYTE PTR [rdx+0x0],dh
 10035da:	jns    0x10035dc
 10035dc:	and    BYTE PTR [rax],al
 10035de:	push   rdi
 10035df:	add    BYTE PTR [rax+0x0],cl
 10035e2:	add    BYTE PTR [r10+0x0],r10b
 10035e6:	add    BYTE PTR [r8],r12b
 10035e9:	add    BYTE PTR [rax+0x0],dh
 10035ec:	ins    BYTE PTR es:[rdi],dx
 10035ed:	add    BYTE PTR [rcx+0x0],ah
 10035f0:	outs   dx,BYTE PTR ds:[rsi]
 10035f1:	add    BYTE PTR [rdi+0x0],bl
 10035f4:	imul   eax,DWORD PTR [rax],0x200064
 10035fa:	cmp    eax,0x27002000
 10035ff:	add    BYTE PTR [rip+0x27007300],ah        # 0x2800a905
 1003605:	add    BYTE PTR [rax],ah
 1003607:	add    BYTE PTR [rcx+0x0],al
 100360a:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r8b
 100360f:	add    BYTE PTR [rbx+0x0],dh
 1003612:	add    BYTE PTR gs:[rcx+0x0],dh
 1003616:	jne    0x1003618
 1003618:	add    BYTE PTR gs:[rsi+0x0],ch
 100361c:	movsxd eax,DWORD PTR [rax]
 100361e:	add    BYTE PTR gs:[rdi+0x0],bl
 1003622:	imul   eax,DWORD PTR [rax],0x200064
 1003628:	cmp    al,0x0
 100362a:	and    BYTE PTR [rax],al
 100362c:	and    eax,0x6400
 1003631:	add    BYTE PTR [rax],al
 1003633:	add    BYTE PTR [rax],al
 1003635:	add    BYTE PTR [rax],al
 1003637:	add    BYTE PTR [rax+0x3],dl
 100363a:	add    al,BYTE PTR [rcx]
 100363c:	add    BYTE PTR [rax],al
 100363e:	add    BYTE PTR [rax],al
 1003640:	lock add eax,DWORD PTR [rdx]
 1003643:	add    DWORD PTR [rax],eax
	...
 1003655:	add    BYTE PTR [rax],al
 1003657:	add    BYTE PTR [rax+0x3d],ah
 100365a:	or     ebx,edi
 100365c:	(bad)  
 100365d:	push   rsp
 100365e:	sbb    edx,DWORD PTR [rax]
 1003660:	mov    fs,WORD PTR [rbp+0x8]
 1003663:	add    BYTE PTR [rbx],ch
 1003665:	sub    edx,ecx
 1003667:	sbb    DWORD PTR [rdx+rsi*4-0x454b4e6a],eax
 100366e:	sbb    dl,BYTE PTR [rax]
 1003670:	mov    dh,0x9c
 1003672:	add    BYTE PTR [rdx+0x71d3400],ch
 1003678:	push   rdx
 1003679:	push   rbx
 100367a:	rex.R push rbx
 100367c:	repnz and ch,BYTE PTR [rdi]
 100367f:	movabs al,ds:0xbeee29b47375f7a
 1003688:	ds cmp esi,edx
 100368b:	rol    DWORD PTR [rcx],cl
 100368d:	add    BYTE PTR [rax],al
 100368f:	add    BYTE PTR [rbx+0x51],dl
 1003692:	rex.WR
 1003693:	rex.WRB
 1003694:	rex.B
 1003695:	rex.WB
 1003696:	rex.WRX push rsp
 1003698:	cs jo  0x10036ff
 100369b:	(bad)  
	...
 1003720:	mov    WORD PTR [rsp+0x10],dx
 1003725:	mov    QWORD PTR [rsp+0x8],rcx
 100372a:	push   rbp
 100372b:	mov    rbp,rsp
 100372e:	sub    rsp,0x20
 1003732:	movzx  edx,WORD PTR [rsp+0x38]
 1003737:	mov    rcx,QWORD PTR [rsp+0x30]
 100373c:	call   QWORD PTR [rip+0xffffffffffffdbd6]        # 0x1001318
 1003742:	add    rsp,0x20
 1003746:	pop    rbp
 1003747:	ret    
 1003748:	int3   
 1003749:	int3   
 100374a:	int3   
 100374b:	int3   
 100374c:	int3   
 100374d:	int3   
 100374e:	int3   
 100374f:	int3   
 1003750:	mov    QWORD PTR [rsp+0x10],rdx
 1003755:	mov    QWORD PTR [rsp+0x8],rcx
 100375a:	push   rbp
 100375b:	mov    rbp,rsp
 100375e:	sub    rsp,0x30
 1003762:	mov    r8d,0x10
 1003768:	mov    rdx,QWORD PTR [rsp+0x48]
 100376d:	mov    rcx,QWORD PTR [rsp+0x40]
 1003772:	call   0x1011e60
 1003777:	test   eax,eax
 1003779:	jne    0x1003785
 100377b:	mov    DWORD PTR [rsp+0x20],0x1
 1003783:	jmp    0x100378d
 1003785:	mov    DWORD PTR [rsp+0x20],0x0
 100378d:	mov    eax,DWORD PTR [rsp+0x20]
 1003791:	add    rsp,0x30
 1003795:	pop    rbp
 1003796:	ret    
 1003797:	int3   
 1003798:	int3   
 1003799:	int3   
 100379a:	int3   
 100379b:	int3   
 100379c:	int3   
 100379d:	int3   
 100379e:	int3   
 100379f:	int3   
 10037a0:	mov    QWORD PTR [rsp+0x10],rdx
 10037a5:	mov    QWORD PTR [rsp+0x8],rcx
 10037aa:	push   rbp
 10037ab:	mov    rbp,rsp
 10037ae:	sub    rsp,0x20
 10037b2:	mov    rdx,QWORD PTR [rsp+0x38]
 10037b7:	mov    rcx,QWORD PTR [rsp+0x30]
 10037bc:	call   0x1003750
 10037c1:	add    rsp,0x20
 10037c5:	pop    rbp
 10037c6:	ret    
 10037c7:	int3   
 10037c8:	int3   
 10037c9:	int3   
 10037ca:	int3   
 10037cb:	int3   
 10037cc:	int3   
 10037cd:	int3   
 10037ce:	int3   
 10037cf:	int3   
 10037d0:	mov    QWORD PTR [rsp+0x10],rdx
 10037d5:	mov    QWORD PTR [rsp+0x8],rcx
 10037da:	push   rbp
 10037db:	mov    rbp,rsp
 10037de:	push   rdi
 10037df:	sub    rsp,0x18
 10037e3:	mov    rax,QWORD PTR [rsp+0x30]
 10037e8:	mov    QWORD PTR [rsp],rax
 10037ec:	mov    rdi,QWORD PTR [rsp]
 10037f0:	xor    eax,eax
 10037f2:	mov    rcx,QWORD PTR [rsp+0x38]
 10037f7:	rep stos BYTE PTR es:[rdi],al
 10037f9:	mov    rax,QWORD PTR [rsp+0x30]
 10037fe:	add    rsp,0x18
 1003802:	pop    rdi
 1003803:	pop    rbp
 1003804:	ret    
 1003805:	int3   
 1003806:	int3   
 1003807:	int3   
 1003808:	int3   
 1003809:	int3   
 100380a:	int3   
 100380b:	int3   
 100380c:	int3   
 100380d:	int3   
 100380e:	int3   
 100380f:	int3   
 1003810:	mov    QWORD PTR [rsp+0x8],rcx
 1003815:	push   rbp
 1003816:	mov    rbp,rsp
 1003819:	mov    rax,QWORD PTR [rsp+0x10]
 100381e:	pop    rbp
 100381f:	ret    
 1003820:	int3   
 1003821:	int3   
 1003822:	int3   
 1003823:	int3   
 1003824:	int3   
 1003825:	int3   
 1003826:	int3   
 1003827:	int3   
 1003828:	int3   
 1003829:	int3   
 100382a:	int3   
 100382b:	int3   
 100382c:	int3   
 100382d:	int3   
 100382e:	int3   
 100382f:	int3   
 1003830:	mov    QWORD PTR [rsp+0x10],rdx
 1003835:	mov    QWORD PTR [rsp+0x8],rcx
 100383a:	push   rbp
 100383b:	mov    rbp,rsp
 100383e:	sub    rsp,0x20
 1003842:	mov    rdx,QWORD PTR [rsp+0x38]
 1003847:	mov    rcx,QWORD PTR [rsp+0x30]
 100384c:	call   QWORD PTR [rip+0xffffffffffffd946]        # 0x1001198
 1003852:	add    rsp,0x20
 1003856:	pop    rbp
 1003857:	ret    
 1003858:	int3   
 1003859:	int3   
 100385a:	int3   
 100385b:	int3   
 100385c:	int3   
 100385d:	int3   
 100385e:	int3   
 100385f:	int3   
 1003860:	mov    QWORD PTR [rsp+0x8],rcx
 1003865:	push   rbp
 1003866:	mov    rbp,rsp
 1003869:	sub    rsp,0x20
 100386d:	mov    rcx,QWORD PTR [rsp+0x30]
 1003872:	call   QWORD PTR [rip+0xffffffffffffd928]        # 0x10011a0
 1003878:	add    rsp,0x20
 100387c:	pop    rbp
 100387d:	ret    
 100387e:	int3   
 100387f:	int3   
 1003880:	int3   
 1003881:	int3   
 1003882:	int3   
 1003883:	int3   
 1003884:	int3   
 1003885:	int3   
 1003886:	int3   
 1003887:	int3   
 1003888:	int3   
 1003889:	int3   
 100388a:	int3   
 100388b:	int3   
 100388c:	int3   
 100388d:	int3   
 100388e:	int3   
 100388f:	int3   
 1003890:	mov    QWORD PTR [rsp+0x8],rcx
 1003895:	push   rbp
 1003896:	mov    rbp,rsp
 1003899:	sub    rsp,0x20
 100389d:	mov    rcx,QWORD PTR [rsp+0x30]
 10038a2:	call   QWORD PTR [rip+0xffffffffffffd900]        # 0x10011a8
 10038a8:	add    rsp,0x20
 10038ac:	pop    rbp
 10038ad:	ret    
 10038ae:	int3   
 10038af:	int3   
 10038b0:	int3   
 10038b1:	int3   
 10038b2:	int3   
 10038b3:	int3   
 10038b4:	int3   
 10038b5:	int3   
 10038b6:	int3   
 10038b7:	int3   
 10038b8:	int3   
 10038b9:	int3   
 10038ba:	int3   
 10038bb:	int3   
 10038bc:	int3   
 10038bd:	int3   
 10038be:	int3   
 10038bf:	int3   
 10038c0:	mov    QWORD PTR [rsp+0x8],rcx
 10038c5:	push   rbp
 10038c6:	mov    rbp,rsp
 10038c9:	sub    rsp,0x20
 10038cd:	mov    rcx,QWORD PTR [rsp+0x30]
 10038d2:	call   QWORD PTR [rip+0xffffffffffffd8d8]        # 0x10011b0
 10038d8:	add    rsp,0x20
 10038dc:	pop    rbp
 10038dd:	ret    
 10038de:	int3   
 10038df:	int3   
 10038e0:	int3   
 10038e1:	int3   
 10038e2:	int3   
 10038e3:	int3   
 10038e4:	int3   
 10038e5:	int3   
 10038e6:	int3   
 10038e7:	int3   
 10038e8:	int3   
 10038e9:	int3   
 10038ea:	int3   
 10038eb:	int3   
 10038ec:	int3   
 10038ed:	int3   
 10038ee:	int3   
 10038ef:	int3   
 10038f0:	mov    QWORD PTR [rsp+0x8],rcx
 10038f5:	push   rbp
 10038f6:	mov    rbp,rsp
 10038f9:	mov    rax,QWORD PTR [rsp+0x10]
 10038fe:	mov    QWORD PTR [rax],0x0
 1003905:	mov    rax,QWORD PTR [rsp+0x10]
 100390a:	pop    rbp
 100390b:	ret    
 100390c:	int3   
 100390d:	int3   
 100390e:	int3   
 100390f:	int3   
 1003910:	int3   
 1003911:	int3   
 1003912:	int3   
 1003913:	int3   
 1003914:	int3   
 1003915:	int3   
 1003916:	int3   
 1003917:	int3   
 1003918:	int3   
 1003919:	int3   
 100391a:	int3   
 100391b:	int3   
 100391c:	int3   
 100391d:	int3   
 100391e:	int3   
 100391f:	int3   
 1003920:	mov    QWORD PTR [rsp+0x8],rcx
 1003925:	push   rbp
 1003926:	mov    rbp,rsp
 1003929:	sub    rsp,0x20
 100392d:	mov    rcx,QWORD PTR [rsp+0x30]
 1003932:	call   0x1003950
 1003937:	add    rsp,0x20
 100393b:	pop    rbp
 100393c:	ret    
 100393d:	int3   
 100393e:	int3   
 100393f:	int3   
 1003940:	int3   
 1003941:	int3   
 1003942:	int3   
 1003943:	int3   
 1003944:	int3   
 1003945:	int3   
 1003946:	int3   
 1003947:	int3   
 1003948:	int3   
 1003949:	int3   
 100394a:	int3   
 100394b:	int3   
 100394c:	int3   
 100394d:	int3   
 100394e:	int3   
 100394f:	int3   
 1003950:	mov    QWORD PTR [rsp+0x8],rcx
 1003955:	push   rbp
 1003956:	mov    rbp,rsp
 1003959:	sub    rsp,0x20
 100395d:	mov    rax,QWORD PTR [rsp+0x30]
 1003962:	cmp    QWORD PTR [rax],0x0
 1003966:	je     0x1003982
 1003968:	mov    rax,QWORD PTR [rsp+0x30]
 100396d:	mov    rcx,QWORD PTR [rax]
 1003970:	call   QWORD PTR [rip+0xffffffffffffd9ea]        # 0x1001360
 1003976:	mov    rax,QWORD PTR [rsp+0x30]
 100397b:	mov    QWORD PTR [rax],0x0
 1003982:	add    rsp,0x20
 1003986:	pop    rbp
 1003987:	ret    
 1003988:	int3   
 1003989:	int3   
 100398a:	int3   
 100398b:	int3   
 100398c:	int3   
 100398d:	int3   
 100398e:	int3   
 100398f:	int3   
 1003990:	mov    QWORD PTR [rsp+0x8],rcx
 1003995:	push   rbp
 1003996:	mov    rbp,rsp
 1003999:	mov    rax,QWORD PTR [rsp+0x10]
 100399e:	mov    rax,QWORD PTR [rax]
 10039a1:	pop    rbp
 10039a2:	ret    
 10039a3:	int3   
 10039a4:	int3   
 10039a5:	int3   
 10039a6:	int3   
 10039a7:	int3   
 10039a8:	int3   
 10039a9:	int3   
 10039aa:	int3   
 10039ab:	int3   
 10039ac:	int3   
 10039ad:	int3   
 10039ae:	int3   
 10039af:	int3   
 10039b0:	mov    QWORD PTR [rsp+0x8],rcx
 10039b5:	push   rbp
 10039b6:	mov    rbp,rsp
 10039b9:	mov    rax,QWORD PTR [rsp+0x10]
 10039be:	mov    rax,QWORD PTR [rax]
 10039c1:	pop    rbp
 10039c2:	ret    
 10039c3:	int3   
 10039c4:	int3   
 10039c5:	int3   
 10039c6:	int3   
 10039c7:	int3   
 10039c8:	int3   
 10039c9:	int3   
 10039ca:	int3   
 10039cb:	int3   
 10039cc:	int3   
 10039cd:	int3   
 10039ce:	int3   
 10039cf:	int3   
 10039d0:	mov    QWORD PTR [rsp+0x8],rcx
 10039d5:	push   rbp
 10039d6:	mov    rbp,rsp
 10039d9:	mov    rax,QWORD PTR [rsp+0x10]
 10039de:	pop    rbp
 10039df:	ret    
 10039e0:	int3   
 10039e1:	int3   
 10039e2:	int3   
 10039e3:	int3   
 10039e4:	int3   
 10039e5:	int3   
 10039e6:	int3   
 10039e7:	int3   
 10039e8:	int3   
 10039e9:	int3   
 10039ea:	int3   
 10039eb:	int3   
 10039ec:	int3   
 10039ed:	int3   
 10039ee:	int3   
 10039ef:	int3   
 10039f0:	mov    QWORD PTR [rsp+0x8],rcx
 10039f5:	push   rbp
 10039f6:	mov    rbp,rsp
 10039f9:	sub    rsp,0x20
 10039fd:	mov    rcx,QWORD PTR [rsp+0x30]
 1003a02:	call   0x1003810
 1003a07:	mov    rax,QWORD PTR [rsp+0x30]
 1003a0c:	add    rsp,0x20
 1003a10:	pop    rbp
 1003a11:	ret    
 1003a12:	int3   
 1003a13:	int3   
 1003a14:	int3   
 1003a15:	int3   
 1003a16:	int3   
 1003a17:	int3   
 1003a18:	int3   
 1003a19:	int3   
 1003a1a:	int3   
 1003a1b:	int3   
 1003a1c:	int3   
 1003a1d:	int3   
 1003a1e:	int3   
 1003a1f:	int3   
 1003a20:	mov    QWORD PTR [rsp+0x18],r8
 1003a25:	mov    QWORD PTR [rsp+0x10],rdx
 1003a2a:	mov    QWORD PTR [rsp+0x8],rcx
 1003a2f:	push   rbp
 1003a30:	mov    rbp,rsp
 1003a33:	sub    rsp,0x10
 1003a37:	mov    DWORD PTR [rsp],0x0
 1003a3e:	mov    rax,QWORD PTR [rsp+0x28]
 1003a43:	mov    QWORD PTR [rsp+0x8],rax
 1003a48:	cmp    QWORD PTR [rsp+0x28],0x0
 1003a4e:	je     0x1003a79
 1003a50:	mov    rax,QWORD PTR [rsp+0x20]
 1003a55:	movzx  eax,WORD PTR [rax]
 1003a58:	test   eax,eax
 1003a5a:	je     0x1003a79
 1003a5c:	mov    rax,QWORD PTR [rsp+0x20]
 1003a61:	add    rax,0x2
 1003a65:	mov    QWORD PTR [rsp+0x20],rax
 1003a6a:	mov    rax,QWORD PTR [rsp+0x28]
 1003a6f:	dec    rax
 1003a72:	mov    QWORD PTR [rsp+0x28],rax
 1003a77:	jmp    0x1003a48
 1003a79:	cmp    QWORD PTR [rsp+0x28],0x0
 1003a7f:	jne    0x1003a88
 1003a81:	mov    DWORD PTR [rsp],0x80070057
 1003a88:	cmp    QWORD PTR [rsp+0x30],0x0
 1003a8e:	je     0x1003abc
 1003a90:	cmp    DWORD PTR [rsp],0x0
 1003a94:	jl     0x1003ab0
 1003a96:	mov    rax,QWORD PTR [rsp+0x28]
 1003a9b:	mov    rcx,QWORD PTR [rsp+0x8]
 1003aa0:	sub    rcx,rax
 1003aa3:	mov    rax,rcx
 1003aa6:	mov    rcx,QWORD PTR [rsp+0x30]
 1003aab:	mov    QWORD PTR [rcx],rax
 1003aae:	jmp    0x1003abc
 1003ab0:	mov    rax,QWORD PTR [rsp+0x30]
 1003ab5:	mov    QWORD PTR [rax],0x0
 1003abc:	mov    eax,DWORD PTR [rsp]
 1003abf:	add    rsp,0x10
 1003ac3:	pop    rbp
 1003ac4:	ret    
 1003ac5:	int3   
 1003ac6:	int3   
 1003ac7:	int3   
 1003ac8:	int3   
 1003ac9:	int3   
 1003aca:	int3   
 1003acb:	int3   
 1003acc:	int3   
 1003acd:	int3   
 1003ace:	int3   
 1003acf:	int3   
 1003ad0:	mov    QWORD PTR [rsp+0x18],r8
 1003ad5:	mov    QWORD PTR [rsp+0x10],rdx
 1003ada:	mov    QWORD PTR [rsp+0x8],rcx
 1003adf:	push   rbp
 1003ae0:	mov    rbp,rsp
 1003ae3:	sub    rsp,0x10
 1003ae7:	mov    DWORD PTR [rsp],0x0
 1003aee:	cmp    QWORD PTR [rsp+0x28],0x0
 1003af4:	je     0x1003b02
 1003af6:	mov    rax,QWORD PTR [rsp+0x30]
 1003afb:	cmp    QWORD PTR [rsp+0x28],rax
 1003b00:	jbe    0x1003b09
 1003b02:	mov    DWORD PTR [rsp],0x80070057
 1003b09:	mov    eax,DWORD PTR [rsp]
 1003b0c:	add    rsp,0x10
 1003b10:	pop    rbp
 1003b11:	ret    
 1003b12:	int3   
 1003b13:	int3   
 1003b14:	int3   
 1003b15:	int3   
 1003b16:	int3   
 1003b17:	int3   
 1003b18:	int3   
 1003b19:	int3   
 1003b1a:	int3   
 1003b1b:	int3   
 1003b1c:	int3   
 1003b1d:	int3   
 1003b1e:	int3   
 1003b1f:	int3   
 1003b20:	mov    QWORD PTR [rsp+0x20],r9
 1003b25:	mov    QWORD PTR [rsp+0x18],r8
 1003b2a:	mov    QWORD PTR [rsp+0x10],rdx
 1003b2f:	mov    QWORD PTR [rsp+0x8],rcx
 1003b34:	push   rbp
 1003b35:	mov    rbp,rsp
 1003b38:	sub    rsp,0x10
 1003b3c:	mov    DWORD PTR [rsp],0x0
 1003b43:	mov    QWORD PTR [rsp+0x8],0x0
 1003b4c:	cmp    QWORD PTR [rsp+0x28],0x0
 1003b52:	je     0x1003bbd
 1003b54:	cmp    QWORD PTR [rsp+0x40],0x0
 1003b5a:	je     0x1003bbd
 1003b5c:	mov    rax,QWORD PTR [rsp+0x38]
 1003b61:	movzx  eax,WORD PTR [rax]
 1003b64:	test   eax,eax
 1003b66:	je     0x1003bbd
 1003b68:	mov    rax,QWORD PTR [rsp+0x20]
 1003b6d:	mov    rcx,QWORD PTR [rsp+0x38]
 1003b72:	movzx  ecx,WORD PTR [rcx]
 1003b75:	mov    WORD PTR [rax],cx
 1003b78:	mov    rax,QWORD PTR [rsp+0x20]
 1003b7d:	add    rax,0x2
 1003b81:	mov    QWORD PTR [rsp+0x20],rax
 1003b86:	mov    rax,QWORD PTR [rsp+0x38]
 1003b8b:	add    rax,0x2
 1003b8f:	mov    QWORD PTR [rsp+0x38],rax
 1003b94:	mov    rax,QWORD PTR [rsp+0x28]
 1003b99:	dec    rax
 1003b9c:	mov    QWORD PTR [rsp+0x28],rax
 1003ba1:	mov    rax,QWORD PTR [rsp+0x40]
 1003ba6:	dec    rax
 1003ba9:	mov    QWORD PTR [rsp+0x40],rax
 1003bae:	mov    rax,QWORD PTR [rsp+0x8]
 1003bb3:	inc    rax
 1003bb6:	mov    QWORD PTR [rsp+0x8],rax
 1003bbb:	jmp    0x1003b4c
 1003bbd:	cmp    QWORD PTR [rsp+0x28],0x0
 1003bc3:	jne    0x1003be7
 1003bc5:	mov    rax,QWORD PTR [rsp+0x20]
 1003bca:	sub    rax,0x2
 1003bce:	mov    QWORD PTR [rsp+0x20],rax
 1003bd3:	mov    rax,QWORD PTR [rsp+0x8]
 1003bd8:	dec    rax
 1003bdb:	mov    QWORD PTR [rsp+0x8],rax
 1003be0:	mov    DWORD PTR [rsp],0x8007007a
 1003be7:	xor    eax,eax
 1003be9:	mov    rcx,QWORD PTR [rsp+0x20]
 1003bee:	mov    WORD PTR [rcx],ax
 1003bf1:	cmp    QWORD PTR [rsp+0x30],0x0
 1003bf7:	je     0x1003c06
 1003bf9:	mov    rax,QWORD PTR [rsp+0x30]
 1003bfe:	mov    rcx,QWORD PTR [rsp+0x8]
 1003c03:	mov    QWORD PTR [rax],rcx
 1003c06:	mov    eax,DWORD PTR [rsp]
 1003c09:	add    rsp,0x10
 1003c0d:	pop    rbp
 1003c0e:	ret    
 1003c0f:	int3   
 1003c10:	int3   
 1003c11:	int3   
 1003c12:	int3   
 1003c13:	int3   
 1003c14:	int3   
 1003c15:	int3   
 1003c16:	int3   
 1003c17:	int3   
 1003c18:	int3   
 1003c19:	int3   
 1003c1a:	int3   
 1003c1b:	int3   
 1003c1c:	int3   
 1003c1d:	int3   
 1003c1e:	int3   
 1003c1f:	int3   
 1003c20:	mov    QWORD PTR [rsp+0x20],r9
 1003c25:	mov    QWORD PTR [rsp+0x18],r8
 1003c2a:	mov    QWORD PTR [rsp+0x10],rdx
 1003c2f:	mov    QWORD PTR [rsp+0x8],rcx
 1003c34:	push   rbp
 1003c35:	mov    rbp,rsp
 1003c38:	sub    rsp,0x40
 1003c3c:	mov    DWORD PTR [rsp+0x24],0x0
 1003c44:	mov    QWORD PTR [rsp+0x30],0x0
 1003c4d:	mov    rax,QWORD PTR [rsp+0x58]
 1003c52:	dec    rax
 1003c55:	mov    QWORD PTR [rsp+0x28],rax
 1003c5a:	mov    r9,QWORD PTR [rsp+0x70]
 1003c5f:	mov    r8,QWORD PTR [rsp+0x68]
 1003c64:	mov    rdx,QWORD PTR [rsp+0x28]
 1003c69:	mov    rcx,QWORD PTR [rsp+0x50]
 1003c6e:	call   QWORD PTR [rip+0xffffffffffffd58c]        # 0x1001200
 1003c74:	mov    DWORD PTR [rsp+0x20],eax
 1003c78:	cmp    DWORD PTR [rsp+0x20],0x0
 1003c7d:	jl     0x1003c8b
 1003c7f:	movsxd rax,DWORD PTR [rsp+0x20]
 1003c84:	cmp    rax,QWORD PTR [rsp+0x28]
 1003c89:	jbe    0x1003cbc
 1003c8b:	mov    rax,QWORD PTR [rsp+0x50]
 1003c90:	mov    rcx,QWORD PTR [rsp+0x28]
 1003c95:	lea    rax,[rax+rcx*2]
 1003c99:	mov    QWORD PTR [rsp+0x50],rax
 1003c9e:	xor    eax,eax
 1003ca0:	mov    rcx,QWORD PTR [rsp+0x50]
 1003ca5:	mov    WORD PTR [rcx],ax
 1003ca8:	mov    rax,QWORD PTR [rsp+0x28]
 1003cad:	mov    QWORD PTR [rsp+0x30],rax
 1003cb2:	mov    DWORD PTR [rsp+0x24],0x8007007a
 1003cba:	jmp    0x1003cfb
 1003cbc:	movsxd rax,DWORD PTR [rsp+0x20]
 1003cc1:	cmp    rax,QWORD PTR [rsp+0x28]
 1003cc6:	jne    0x1003cf1
 1003cc8:	mov    rax,QWORD PTR [rsp+0x50]
 1003ccd:	mov    rcx,QWORD PTR [rsp+0x28]
 1003cd2:	lea    rax,[rax+rcx*2]
 1003cd6:	mov    QWORD PTR [rsp+0x50],rax
 1003cdb:	xor    eax,eax
 1003cdd:	mov    rcx,QWORD PTR [rsp+0x50]
 1003ce2:	mov    WORD PTR [rcx],ax
 1003ce5:	mov    rax,QWORD PTR [rsp+0x28]
 1003cea:	mov    QWORD PTR [rsp+0x30],rax
 1003cef:	jmp    0x1003cfb
 1003cf1:	movsxd rax,DWORD PTR [rsp+0x20]
 1003cf6:	mov    QWORD PTR [rsp+0x30],rax
 1003cfb:	cmp    QWORD PTR [rsp+0x60],0x0
 1003d01:	je     0x1003d10
 1003d03:	mov    rax,QWORD PTR [rsp+0x60]
 1003d08:	mov    rcx,QWORD PTR [rsp+0x30]
 1003d0d:	mov    QWORD PTR [rax],rcx
 1003d10:	mov    eax,DWORD PTR [rsp+0x24]
 1003d14:	add    rsp,0x40
 1003d18:	pop    rbp
 1003d19:	ret    
 1003d1a:	int3   
 1003d1b:	int3   
 1003d1c:	int3   
 1003d1d:	int3   
 1003d1e:	int3   
 1003d1f:	int3   
 1003d20:	mov    QWORD PTR [rsp+0x18],r8
 1003d25:	mov    QWORD PTR [rsp+0x10],rdx
 1003d2a:	mov    QWORD PTR [rsp+0x8],rcx
 1003d2f:	push   rbp
 1003d30:	mov    rbp,rsp
 1003d33:	sub    rsp,0x40
 1003d37:	xor    edx,edx
 1003d39:	mov    rax,QWORD PTR [rsp+0x58]
 1003d3e:	mov    ecx,0x2
 1003d43:	div    rcx
 1003d46:	mov    QWORD PTR [rsp+0x38],rax
 1003d4b:	mov    r8d,0x7fffffff
 1003d51:	mov    rdx,QWORD PTR [rsp+0x38]
 1003d56:	mov    rcx,QWORD PTR [rsp+0x50]
 1003d5b:	call   0x1003ad0
 1003d60:	mov    DWORD PTR [rsp+0x30],eax
 1003d64:	cmp    DWORD PTR [rsp+0x30],0x0
 1003d69:	jl     0x1003d8f
 1003d6b:	mov    QWORD PTR [rsp+0x20],0x7ffffffe
 1003d74:	mov    r9,QWORD PTR [rsp+0x60]
 1003d79:	xor    r8d,r8d
 1003d7c:	mov    rdx,QWORD PTR [rsp+0x38]
 1003d81:	mov    rcx,QWORD PTR [rsp+0x50]
 1003d86:	call   0x1003b20
 1003d8b:	mov    DWORD PTR [rsp+0x30],eax
 1003d8f:	mov    eax,DWORD PTR [rsp+0x30]
 1003d93:	add    rsp,0x40
 1003d97:	pop    rbp
 1003d98:	ret    
 1003d99:	int3   
 1003d9a:	int3   
 1003d9b:	int3   
 1003d9c:	int3   
 1003d9d:	int3   
 1003d9e:	int3   
 1003d9f:	int3   
 1003da0:	mov    QWORD PTR [rsp+0x18],r8
 1003da5:	mov    QWORD PTR [rsp+0x10],rdx
 1003daa:	mov    QWORD PTR [rsp+0x8],rcx
 1003daf:	mov    QWORD PTR [rsp+0x20],r9
 1003db4:	push   rbp
 1003db5:	mov    rbp,rsp
 1003db8:	sub    rsp,0x50
 1003dbc:	xor    edx,edx
 1003dbe:	mov    rax,QWORD PTR [rsp+0x68]
 1003dc3:	mov    ecx,0x2
 1003dc8:	div    rcx
 1003dcb:	mov    QWORD PTR [rsp+0x38],rax
 1003dd0:	mov    r8d,0x7fffffff
 1003dd6:	mov    rdx,QWORD PTR [rsp+0x38]
 1003ddb:	mov    rcx,QWORD PTR [rsp+0x60]
 1003de0:	call   0x1003ad0
 1003de5:	mov    DWORD PTR [rsp+0x30],eax
 1003de9:	cmp    DWORD PTR [rsp+0x30],0x0
 1003dee:	jl     0x1003e28
 1003df0:	lea    rax,[rsp+0x78]
 1003df5:	mov    QWORD PTR [rsp+0x40],rax
 1003dfa:	mov    rax,QWORD PTR [rsp+0x40]
 1003dff:	mov    QWORD PTR [rsp+0x20],rax
 1003e04:	mov    r9,QWORD PTR [rsp+0x70]
 1003e09:	xor    r8d,r8d
 1003e0c:	mov    rdx,QWORD PTR [rsp+0x38]
 1003e11:	mov    rcx,QWORD PTR [rsp+0x60]
 1003e16:	call   0x1003c20
 1003e1b:	mov    DWORD PTR [rsp+0x30],eax
 1003e1f:	mov    QWORD PTR [rsp+0x40],0x0
 1003e28:	mov    eax,DWORD PTR [rsp+0x30]
 1003e2c:	add    rsp,0x50
 1003e30:	pop    rbp
 1003e31:	ret    
 1003e32:	int3   
 1003e33:	int3   
 1003e34:	int3   
 1003e35:	int3   
 1003e36:	int3   
 1003e37:	int3   
 1003e38:	int3   
 1003e39:	int3   
 1003e3a:	int3   
 1003e3b:	int3   
 1003e3c:	int3   
 1003e3d:	int3   
 1003e3e:	int3   
 1003e3f:	int3   
 1003e40:	mov    QWORD PTR [rsp+0x18],r8
 1003e45:	mov    QWORD PTR [rsp+0x10],rdx
 1003e4a:	mov    QWORD PTR [rsp+0x8],rcx
 1003e4f:	push   rbp
 1003e50:	mov    rbp,rsp
 1003e53:	sub    rsp,0x30
 1003e57:	cmp    QWORD PTR [rsp+0x40],0x0
 1003e5d:	je     0x1003e6a
 1003e5f:	cmp    QWORD PTR [rsp+0x48],0x7fffffff
 1003e68:	jbe    0x1003e74
 1003e6a:	mov    DWORD PTR [rsp+0x20],0x80070057
 1003e72:	jmp    0x1003e8c
 1003e74:	mov    r8,QWORD PTR [rsp+0x50]
 1003e79:	mov    rdx,QWORD PTR [rsp+0x48]
 1003e7e:	mov    rcx,QWORD PTR [rsp+0x40]
 1003e83:	call   0x1003a20
 1003e88:	mov    DWORD PTR [rsp+0x20],eax
 1003e8c:	cmp    DWORD PTR [rsp+0x20],0x0
 1003e91:	jge    0x1003ea7
 1003e93:	cmp    QWORD PTR [rsp+0x50],0x0
 1003e99:	je     0x1003ea7
 1003e9b:	mov    rax,QWORD PTR [rsp+0x50]
 1003ea0:	mov    QWORD PTR [rax],0x0
 1003ea7:	mov    eax,DWORD PTR [rsp+0x20]
 1003eab:	add    rsp,0x30
 1003eaf:	pop    rbp
 1003eb0:	ret    
 1003eb1:	int3   
 1003eb2:	int3   
 1003eb3:	int3   
 1003eb4:	int3   
 1003eb5:	int3   
 1003eb6:	int3   
 1003eb7:	int3   
 1003eb8:	int3   
 1003eb9:	int3   
 1003eba:	int3   
 1003ebb:	int3   
 1003ebc:	int3   
 1003ebd:	int3   
 1003ebe:	int3   
 1003ebf:	int3   
 1003ec0:	rex push rbp
 1003ec2:	mov    rbp,rsp
 1003ec5:	sub    rsp,0xa20
 1003ecc:	mov    QWORD PTR [rsp+0x180],0xfffffffffffffffe
 1003ed8:	mov    rax,QWORD PTR [rip+0x11481]        # 0x1015360
 1003edf:	xor    rax,rsp
 1003ee2:	mov    QWORD PTR [rbp-0x10],rax
 1003ee6:	movzx  eax,WORD PTR [rip+0x1a243]        # 0x101e130
 1003eed:	test   eax,eax
 1003eef:	jne    0x1003f03
 1003ef1:	movzx  eax,WORD PTR [rip+0x1a1e8]        # 0x101e0e0
 1003ef8:	test   eax,eax
 1003efa:	jne    0x1003f03
 1003efc:	xor    eax,eax
 1003efe:	jmp    0x1004eb8
 1003f03:	lea    rcx,[rsp+0x38]
 1003f08:	call   0x10112f0
 1003f0d:	nop
 1003f0e:	lea    rcx,[rsp+0x30]
 1003f13:	call   0x10038f0
 1003f18:	nop
 1003f19:	lea    rcx,[rsp+0x58]
 1003f1e:	call   0x10038f0
 1003f23:	nop
 1003f24:	movzx  eax,WORD PTR [rip+0x1a1b5]        # 0x101e0e0
 1003f2b:	test   eax,eax
 1003f2d:	je     0x1003f52
 1003f2f:	lea    r9,[rip+0x1a1aa]        # 0x101e0e0
 1003f36:	lea    r8,[rip+0xfffffffffffff073]        # 0x1002fb0
 1003f3d:	mov    edx,0x400
 1003f42:	lea    rcx,[rsp+0x190]
 1003f4a:	call   QWORD PTR [rip+0xffffffffffffd2a8]        # 0x10011f8
 1003f50:	jmp    0x1003f8c
 1003f52:	mov    r8d,0x100
 1003f58:	lea    rdx,[rip+0x1bf21]        # 0x101fe80
 1003f5f:	lea    rcx,[rip+0x1a1ca]        # 0x101e130
 1003f66:	call   0x1008be0
 1003f6b:	lea    r9,[rip+0x1bf0e]        # 0x101fe80
 1003f72:	lea    r8,[rip+0xfffffffffffff0f7]        # 0x1003070
 1003f79:	mov    edx,0x400
 1003f7e:	lea    rcx,[rsp+0x190]
 1003f86:	call   QWORD PTR [rip+0xffffffffffffd26c]        # 0x10011f8
 1003f8c:	lea    rcx,[rip+0x1c38d]        # 0x1020320
 1003f93:	call   0x100f0e0
 1003f98:	mov    QWORD PTR [rsp+0xf0],rax
 1003fa0:	lea    rcx,[rsp+0x38]
 1003fa5:	call   0x10113a0
 1003faa:	mov    rcx,QWORD PTR [rsp+0xf0]
 1003fb2:	mov    rcx,QWORD PTR [rcx]
 1003fb5:	mov    QWORD PTR [rsp+0x108],rcx
 1003fbd:	xor    r9d,r9d
 1003fc0:	mov    r8,rax
 1003fc3:	lea    rdx,[rsp+0x190]
 1003fcb:	mov    rcx,QWORD PTR [rsp+0xf0]
 1003fd3:	mov    rax,QWORD PTR [rsp+0x108]
 1003fdb:	call   QWORD PTR [rax+0x2e0]
 1003fe1:	mov    ecx,eax
 1003fe3:	call   0x1006e20
 1003fe8:	test   eax,eax
 1003fea:	jne    0x10040ac
 1003ff0:	lea    rcx,[rsp+0x38]
 1003ff5:	call   0x10113c0
 1003ffa:	test   eax,eax
 1003ffc:	jne    0x10040ac
 1004002:	lea    rcx,[rsp+0x38]
 1004007:	call   0x1011400
 100400c:	mov    QWORD PTR [rbp-0x30],rax
 1004010:	lea    rcx,[rsp+0x30]
 1004015:	call   0x10039d0
 100401a:	mov    rcx,QWORD PTR [rbp-0x30]
 100401e:	mov    rcx,QWORD PTR [rcx]
 1004021:	mov    QWORD PTR [rsp+0x150],rcx
 1004029:	mov    r9,rax
 100402c:	xor    r8d,r8d
 100402f:	xor    edx,edx
 1004031:	mov    rcx,QWORD PTR [rbp-0x30]
 1004035:	mov    rax,QWORD PTR [rsp+0x150]
 100403d:	call   QWORD PTR [rax+0xa0]
 1004043:	mov    ecx,eax
 1004045:	call   0x1006e20
 100404a:	test   eax,eax
 100404c:	jne    0x10040ac
 100404e:	lea    rcx,[rsp+0x30]
 1004053:	call   0x1003990
 1004058:	test   rax,rax
 100405b:	je     0x10040ac
 100405d:	lea    rcx,[rsp+0x38]
 1004062:	call   0x1011400
 1004067:	mov    QWORD PTR [rbp-0x40],rax
 100406b:	lea    rcx,[rsp+0x58]
 1004070:	call   0x10039d0
 1004075:	mov    rcx,QWORD PTR [rbp-0x40]
 1004079:	mov    rcx,QWORD PTR [rcx]
 100407c:	mov    QWORD PTR [rsp+0x120],rcx
 1004084:	mov    r9,rax
 1004087:	mov    r8d,0x1
 100408d:	xor    edx,edx
 100408f:	mov    rcx,QWORD PTR [rbp-0x40]
 1004093:	mov    rax,QWORD PTR [rsp+0x120]
 100409b:	call   QWORD PTR [rax+0xa0]
 10040a1:	mov    ecx,eax
 10040a3:	call   0x1006e20
 10040a8:	test   eax,eax
 10040aa:	je     0x10040db
 10040ac:	mov    DWORD PTR [rbp-0x60],0x0
 10040b3:	lea    rcx,[rsp+0x58]
 10040b8:	call   0x1003920
 10040bd:	nop
 10040be:	lea    rcx,[rsp+0x30]
 10040c3:	call   0x1003920
 10040c8:	nop
 10040c9:	lea    rcx,[rsp+0x38]
 10040ce:	call   0x1011320
 10040d3:	mov    eax,DWORD PTR [rbp-0x60]
 10040d6:	jmp    0x1004eb8
 10040db:	movzx  eax,WORD PTR [rip+0x19ffe]        # 0x101e0e0
 10040e2:	test   eax,eax
 10040e4:	je     0x10040f0
 10040e6:	mov    QWORD PTR [rbp-0x20],0x82
 10040ee:	jmp    0x10040f8
 10040f0:	mov    QWORD PTR [rbp-0x20],0x28
 10040f8:	movzx  eax,WORD PTR [rip+0x19fe1]        # 0x101e0e0
 10040ff:	test   eax,eax
 1004101:	je     0x1004114
 1004103:	lea    rax,[rip+0x1a026]        # 0x101e130
 100410a:	mov    QWORD PTR [rsp+0x100],rax
 1004112:	jmp    0x1004123
 1004114:	lea    rax,[rip+0x19fc5]        # 0x101e0e0
 100411b:	mov    QWORD PTR [rsp+0x100],rax
 1004123:	lea    rcx,[rsp+0x30]
 1004128:	call   0x10039b0
 100412d:	mov    r8,rax
 1004130:	mov    rdx,QWORD PTR [rbp-0x20]
 1004134:	mov    rcx,QWORD PTR [rsp+0x100]
 100413c:	call   QWORD PTR [rip+0xffffffffffffd1e6]        # 0x1001328
 1004142:	mov    r8d,0x100
 1004148:	lea    rdx,[rip+0x1bd31]        # 0x101fe80
 100414f:	lea    rcx,[rip+0x19fda]        # 0x101e130
 1004156:	call   0x1008be0
 100415b:	lea    rcx,[rsp+0x30]
 1004160:	call   0x1003950
 1004165:	lea    rcx,[rsp+0x38]
 100416a:	call   0x1011420
 100416f:	lea    rcx,[rsp+0x58]
 1004174:	call   0x1003990
 1004179:	test   rax,rax
 100417c:	je     0x10042d4
 1004182:	lea    rcx,[rsp+0x58]
 1004187:	call   0x10039b0
 100418c:	mov    rcx,rax
 100418f:	call   QWORD PTR [rip+0xffffffffffffd19b]        # 0x1001330
 1004195:	cmp    rax,0x1
 1004199:	jbe    0x10042d4
 100419f:	lea    rcx,[rip+0x1c172]        # 0x1020318
 10041a6:	call   0x100f080
 10041ab:	mov    QWORD PTR [rsp+0x20],rax
 10041b0:	lea    r9,[rip+0xffffffffffffd351]        # 0x1001508
 10041b7:	mov    r8d,0x1
 10041bd:	xor    edx,edx
 10041bf:	lea    rcx,[rip+0xffffffffffffd332]        # 0x10014f8
 10041c6:	call   QWORD PTR [rip+0xffffffffffffd204]        # 0x10013d0
 10041cc:	mov    ecx,eax
 10041ce:	call   0x1006e20
 10041d3:	test   eax,eax
 10041d5:	jne    0x10042d4
 10041db:	lea    rcx,[rip+0x1c136]        # 0x1020318
 10041e2:	call   0x100f040
 10041e7:	test   eax,eax
 10041e9:	je     0x10042d4
 10041ef:	lea    rcx,[rip+0x1c122]        # 0x1020318
 10041f6:	call   0x100f0e0
 10041fb:	mov    QWORD PTR [rsp+0xc8],rax
 1004203:	mov    rax,QWORD PTR [rsp+0xc8]
 100420b:	mov    rax,QWORD PTR [rax]
 100420e:	mov    edx,0xa
 1004213:	mov    rcx,QWORD PTR [rsp+0xc8]
 100421b:	call   QWORD PTR [rax+0xb8]
 1004221:	mov    ecx,eax
 1004223:	call   0x1006e20
 1004228:	test   eax,eax
 100422a:	jne    0x10042c8
 1004230:	lea    rcx,[rip+0x1c0e1]        # 0x1020318
 1004237:	call   0x100f0e0
 100423c:	mov    QWORD PTR [rsp+0x98],rax
 1004244:	mov    rax,QWORD PTR [rsp+0x98]
 100424c:	mov    rax,QWORD PTR [rax]
 100424f:	mov    edx,0x1
 1004254:	mov    rcx,QWORD PTR [rsp+0x98]
 100425c:	call   QWORD PTR [rax+0xc8]
 1004262:	mov    ecx,eax
 1004264:	call   0x1006e20
 1004269:	test   eax,eax
 100426b:	jne    0x10042c8
 100426d:	lea    rcx,[rip+0x1c0a4]        # 0x1020318
 1004274:	call   0x100f0e0
 1004279:	mov    QWORD PTR [rsp+0xe8],rax
 1004281:	lea    rcx,[rsp+0x58]
 1004286:	call   0x10039b0
 100428b:	mov    rcx,QWORD PTR [rsp+0xe8]
 1004293:	mov    rcx,QWORD PTR [rcx]
 1004296:	mov    QWORD PTR [rsp+0x170],rcx
 100429e:	xor    r9d,r9d
 10042a1:	xor    r8d,r8d
 10042a4:	mov    rdx,rax
 10042a7:	mov    rcx,QWORD PTR [rsp+0xe8]
 10042af:	mov    rax,QWORD PTR [rsp+0x170]
 10042b7:	call   QWORD PTR [rax+0x2b0]
 10042bd:	mov    ecx,eax
 10042bf:	call   0x1006e20
 10042c4:	test   eax,eax
 10042c6:	je     0x10042d4
 10042c8:	lea    rcx,[rip+0x1c049]        # 0x1020318
 10042cf:	call   0x100f100
 10042d4:	mov    DWORD PTR [rsp+0x68],0x0
 10042dc:	lea    r9,[rip+0x19dfd]        # 0x101e0e0
 10042e3:	lea    r8,[rip+0xffffffffffffee46]        # 0x1003130
 10042ea:	mov    edx,0x400
 10042ef:	lea    rcx,[rsp+0x190]
 10042f7:	call   QWORD PTR [rip+0xffffffffffffcefb]        # 0x10011f8
 10042fd:	lea    rcx,[rip+0x1c01c]        # 0x1020320
 1004304:	call   0x100f0e0
 1004309:	mov    QWORD PTR [rsp+0xa8],rax
 1004311:	lea    rcx,[rsp+0x38]
 1004316:	call   0x10113a0
 100431b:	mov    rcx,QWORD PTR [rsp+0xa8]
 1004323:	mov    rcx,QWORD PTR [rcx]
 1004326:	mov    QWORD PTR [rsp+0x130],rcx
 100432e:	xor    r9d,r9d
 1004331:	mov    r8,rax
 1004334:	lea    rdx,[rsp+0x190]
 100433c:	mov    rcx,QWORD PTR [rsp+0xa8]
 1004344:	mov    rax,QWORD PTR [rsp+0x130]
 100434c:	call   QWORD PTR [rax+0x2e0]
 1004352:	mov    ecx,eax
 1004354:	call   0x1006e20
 1004359:	test   eax,eax
 100435b:	jne    0x10043aa
 100435d:	lea    rcx,[rsp+0x38]
 1004362:	call   0x10113c0
 1004367:	test   eax,eax
 1004369:	jne    0x10043aa
 100436b:	lea    rcx,[rsp+0x38]
 1004370:	call   0x1011400
 1004375:	mov    QWORD PTR [rsp+0xd8],rax
 100437d:	mov    rax,QWORD PTR [rsp+0xd8]
 1004385:	mov    rax,QWORD PTR [rax]
 1004388:	lea    rdx,[rsp+0x68]
 100438d:	mov    rcx,QWORD PTR [rsp+0xd8]
 1004395:	call   QWORD PTR [rax+0x58]
 1004398:	mov    ecx,eax
 100439a:	call   0x1006e20
 100439f:	test   eax,eax
 10043a1:	jne    0x10043aa
 10043a3:	cmp    DWORD PTR [rsp+0x68],0x0
 10043a8:	jge    0x10043d9
 10043aa:	mov    DWORD PTR [rbp-0x78],0x0
 10043b1:	lea    rcx,[rsp+0x58]
 10043b6:	call   0x1003920
 10043bb:	nop
 10043bc:	lea    rcx,[rsp+0x30]
 10043c1:	call   0x1003920
 10043c6:	nop
 10043c7:	lea    rcx,[rsp+0x38]
 10043cc:	call   0x1011320
 10043d1:	mov    eax,DWORD PTR [rbp-0x78]
 10043d4:	jmp    0x1004eb8
 10043d9:	mov    DWORD PTR [rsp+0x48],0x0
 10043e1:	mov    DWORD PTR [rsp+0x50],0x0
 10043e9:	mov    DWORD PTR [rsp+0x4c],0x0
 10043f1:	mov    DWORD PTR [rsp+0x60],0x0
 10043f9:	mov    DWORD PTR [rsp+0x40],0x0
 1004401:	mov    DWORD PTR [rsp+0x40],0x0
 1004409:	jmp    0x1004415
 100440b:	mov    eax,DWORD PTR [rsp+0x40]
 100440f:	inc    eax
 1004411:	mov    DWORD PTR [rsp+0x40],eax
 1004415:	mov    eax,DWORD PTR [rsp+0x68]
 1004419:	cmp    DWORD PTR [rsp+0x40],eax
 100441d:	jge    0x1004527
 1004423:	lea    rcx,[rsp+0x30]
 1004428:	call   0x1003950
 100442d:	lea    rcx,[rsp+0x38]
 1004432:	call   0x1011400
 1004437:	mov    QWORD PTR [rsp+0xb8],rax
 100443f:	lea    rcx,[rsp+0x30]
 1004444:	call   0x10039d0
 1004449:	mov    rcx,QWORD PTR [rsp+0xb8]
 1004451:	mov    rcx,QWORD PTR [rcx]
 1004454:	mov    QWORD PTR [rsp+0x160],rcx
 100445c:	mov    r9,rax
 100445f:	xor    r8d,r8d
 1004462:	mov    edx,DWORD PTR [rsp+0x40]
 1004466:	mov    rcx,QWORD PTR [rsp+0xb8]
 100446e:	mov    rax,QWORD PTR [rsp+0x160]
 1004476:	call   QWORD PTR [rax+0xa0]
 100447c:	test   eax,eax
 100447e:	jl     0x1004522
 1004484:	lea    rcx,[rsp+0x30]
 1004489:	call   0x1003990
 100448e:	test   rax,rax
 1004491:	je     0x1004522
 1004497:	lea    rcx,[rsp+0x30]
 100449c:	call   0x10039b0
 10044a1:	mov    rdx,rax
 10044a4:	lea    rcx,[rip+0xffffffffffffed2d]        # 0x10031d8
 10044ab:	call   QWORD PTR [rip+0xffffffffffffce97]        # 0x1001348
 10044b1:	test   eax,eax
 10044b3:	jne    0x10044c2
 10044b5:	mov    DWORD PTR [rsp+0x48],0x1
 10044bd:	jmp    0x100440b
 10044c2:	lea    rcx,[rsp+0x30]
 10044c7:	call   0x10039b0
 10044cc:	mov    rdx,rax
 10044cf:	lea    rcx,[rip+0xffffffffffffed22]        # 0x10031f8
 10044d6:	call   QWORD PTR [rip+0xffffffffffffce6c]        # 0x1001348
 10044dc:	test   eax,eax
 10044de:	jne    0x10044ed
 10044e0:	mov    DWORD PTR [rsp+0x50],0x1
 10044e8:	jmp    0x100440b
 10044ed:	lea    rcx,[rsp+0x30]
 10044f2:	call   0x10039b0
 10044f7:	mov    rdx,rax
 10044fa:	lea    rcx,[rip+0xffffffffffffed27]        # 0x1003228
 1004501:	call   QWORD PTR [rip+0xffffffffffffce41]        # 0x1001348
 1004507:	test   eax,eax
 1004509:	jne    0x1004518
 100450b:	mov    DWORD PTR [rsp+0x4c],0x1
 1004513:	jmp    0x100440b
 1004518:	mov    eax,DWORD PTR [rsp+0x60]
 100451c:	inc    eax
 100451e:	mov    DWORD PTR [rsp+0x60],eax
 1004522:	jmp    0x100440b
 1004527:	lea    rcx,[rsp+0x30]
 100452c:	call   0x1003950
 1004531:	cmp    DWORD PTR [rsp+0x48],0x0
 1004536:	jne    0x100454e
 1004538:	cmp    DWORD PTR [rsp+0x4c],0x0
 100453d:	je     0x100454e
 100453f:	cmp    DWORD PTR [rsp+0x50],0x0
 1004544:	je     0x100454e
 1004546:	mov    DWORD PTR [rsp+0x48],0x1
 100454e:	cmp    DWORD PTR [rsp+0x48],0x0
 1004553:	je     0x100456d
 1004555:	mov    DWORD PTR [rsp+0x50],0x0
 100455d:	mov    eax,DWORD PTR [rsp+0x50]
 1004561:	mov    DWORD PTR [rsp+0x4c],eax
 1004565:	mov    eax,DWORD PTR [rsp+0x4c]
 1004569:	mov    DWORD PTR [rsp+0x60],eax
 100456d:	cmp    DWORD PTR [rsp+0x48],0x0
 1004572:	jne    0x1004586
 1004574:	cmp    DWORD PTR [rsp+0x4c],0x0
 1004579:	jne    0x1004586
 100457b:	cmp    DWORD PTR [rsp+0x50],0x0
 1004580:	je     0x1004829
 1004586:	lea    rcx,[rsp+0x80]
 100458e:	call   0x100e7c0
 1004593:	nop
 1004594:	mov    DWORD PTR [rsp+0x88],0x0
 100459f:	mov    DWORD PTR [rsp+0x994],0x0
 10045aa:	lea    rcx,[rip+0x1bd6f]        # 0x1020320
 10045b1:	call   0x100f0a0
 10045b6:	test   eax,eax
 10045b8:	jne    0x1004604
 10045ba:	lea    rcx,[rip+0x1bd5f]        # 0x1020320
 10045c1:	call   0x100f0e0
 10045c6:	mov    QWORD PTR [rsp+0xf8],rax
 10045ce:	mov    rax,QWORD PTR [rsp+0xf8]
 10045d6:	mov    rax,QWORD PTR [rax]
 10045d9:	lea    rdx,[rsp+0x88]
 10045e1:	mov    rcx,QWORD PTR [rsp+0xf8]
 10045e9:	call   QWORD PTR [rax+0x1e0]
 10045ef:	mov    ecx,eax
 10045f1:	call   0x1006e20
 10045f6:	test   eax,eax
 10045f8:	jne    0x1004604
 10045fa:	cmp    DWORD PTR [rsp+0x88],0x0
 1004602:	jg     0x1004641
 1004604:	mov    DWORD PTR [rbp-0x74],0x0
 100460b:	lea    rcx,[rsp+0x80]
 1004613:	call   0x100e7f0
 1004618:	nop
 1004619:	lea    rcx,[rsp+0x58]
 100461e:	call   0x1003920
 1004623:	nop
 1004624:	lea    rcx,[rsp+0x30]
 1004629:	call   0x1003920
 100462e:	nop
 100462f:	lea    rcx,[rsp+0x38]
 1004634:	call   0x1011320
 1004639:	mov    eax,DWORD PTR [rbp-0x74]
 100463c:	jmp    0x1004eb8
 1004641:	mov    DWORD PTR [rsp+0x6c],0x0
 1004649:	jmp    0x1004655
 100464b:	mov    eax,DWORD PTR [rsp+0x6c]
 100464f:	inc    eax
 1004651:	mov    DWORD PTR [rsp+0x6c],eax
 1004655:	mov    eax,DWORD PTR [rsp+0x88]
 100465c:	cmp    DWORD PTR [rsp+0x6c],eax
 1004660:	jge    0x100481c
 1004666:	lea    rcx,[rip+0x1bcb3]        # 0x1020320
 100466d:	call   0x100f0e0
 1004672:	mov    QWORD PTR [rbp-0x18],rax
 1004676:	lea    rcx,[rsp+0x80]
 100467e:	call   0x100e830
 1004683:	mov    rcx,QWORD PTR [rbp-0x18]
 1004687:	mov    rcx,QWORD PTR [rcx]
 100468a:	mov    QWORD PTR [rsp+0x140],rcx
 1004692:	mov    r8,rax
 1004695:	mov    edx,DWORD PTR [rsp+0x6c]
 1004699:	mov    rcx,QWORD PTR [rbp-0x18]
 100469d:	mov    rax,QWORD PTR [rsp+0x140]
 10046a5:	call   QWORD PTR [rax+0x1c0]
 10046ab:	mov    ecx,eax
 10046ad:	call   0x1006e20
 10046b2:	test   eax,eax
 10046b4:	jne    0x1004772
 10046ba:	lea    rcx,[rsp+0x80]
 10046c2:	call   0x100e850
 10046c7:	test   eax,eax
 10046c9:	jne    0x1004772
 10046cf:	lea    rcx,[rsp+0x80]
 10046d7:	call   0x100e890
 10046dc:	mov    QWORD PTR [rsp+0x90],rax
 10046e4:	mov    rax,QWORD PTR [rsp+0x90]
 10046ec:	mov    rax,QWORD PTR [rax]
 10046ef:	lea    rdx,[rsp+0x994]
 10046f7:	mov    rcx,QWORD PTR [rsp+0x90]
 10046ff:	call   QWORD PTR [rax+0x98]
 1004705:	mov    ecx,eax
 1004707:	call   0x1006e20
 100470c:	test   eax,eax
 100470e:	jne    0x1004772
 1004710:	lea    rcx,[rsp+0x80]
 1004718:	call   0x100e890
 100471d:	mov    QWORD PTR [rsp+0xa0],rax
 1004725:	lea    rcx,[rsp+0x30]
 100472a:	call   0x10039d0
 100472f:	mov    rcx,QWORD PTR [rsp+0xa0]
 1004737:	mov    rcx,QWORD PTR [rcx]
 100473a:	mov    QWORD PTR [rsp+0x178],rcx
 1004742:	mov    rdx,rax
 1004745:	mov    rcx,QWORD PTR [rsp+0xa0]
 100474d:	mov    rax,QWORD PTR [rsp+0x178]
 1004755:	call   QWORD PTR [rax+0x40]
 1004758:	mov    ecx,eax
 100475a:	call   0x1006e20
 100475f:	test   eax,eax
 1004761:	jne    0x1004772
 1004763:	lea    rcx,[rsp+0x30]
 1004768:	call   0x1003990
 100476d:	test   rax,rax
 1004770:	jne    0x10047af
 1004772:	mov    DWORD PTR [rbp-0x6c],0x0
 1004779:	lea    rcx,[rsp+0x80]
 1004781:	call   0x100e7f0
 1004786:	nop
 1004787:	lea    rcx,[rsp+0x58]
 100478c:	call   0x1003920
 1004791:	nop
 1004792:	lea    rcx,[rsp+0x30]
 1004797:	call   0x1003920
 100479c:	nop
 100479d:	lea    rcx,[rsp+0x38]
 10047a2:	call   0x1011320
 10047a7:	mov    eax,DWORD PTR [rbp-0x6c]
 10047aa:	jmp    0x1004eb8
 10047af:	lea    rcx,[rsp+0x30]
 10047b4:	call   0x10039b0
 10047b9:	lea    rdx,[rip+0xffffffffffffd720]        # 0x1001ee0
 10047c0:	mov    rcx,rax
 10047c3:	call   QWORD PTR [rip+0xffffffffffffcb7f]        # 0x1001348
 10047c9:	test   eax,eax
 10047cb:	je     0x1004800
 10047cd:	cmp    DWORD PTR [rsp+0x48],0x0
 10047d2:	jne    0x10047f6
 10047d4:	cmp    DWORD PTR [rsp+0x994],0x0
 10047dc:	je     0x10047e5
 10047de:	cmp    DWORD PTR [rsp+0x50],0x0
 10047e3:	jne    0x10047f6
 10047e5:	cmp    DWORD PTR [rsp+0x994],0x0
 10047ed:	jne    0x1004800
 10047ef:	cmp    DWORD PTR [rsp+0x4c],0x0
 10047f4:	je     0x1004800
 10047f6:	mov    eax,DWORD PTR [rsp+0x60]
 10047fa:	inc    eax
 10047fc:	mov    DWORD PTR [rsp+0x60],eax
 1004800:	lea    rcx,[rsp+0x30]
 1004805:	call   0x1003950
 100480a:	lea    rcx,[rsp+0x80]
 1004812:	call   0x100e8b0
 1004817:	jmp    0x100464b
 100481c:	lea    rcx,[rsp+0x80]
 1004824:	call   0x100e7f0
 1004829:	mov    eax,DWORD PTR [rsp+0x60]
 100482d:	mov    DWORD PTR [rip+0x1978d],eax        # 0x101dfc0
 1004833:	movsxd rax,DWORD PTR [rip+0x19786]        # 0x101dfc0
 100483a:	mov    QWORD PTR [rbp-0x48],rax
 100483e:	mov    eax,0xb78
 1004843:	mul    QWORD PTR [rbp-0x48]
 1004847:	mov    rcx,0xffffffffffffffff
 100484e:	cmovo  rax,rcx
 1004852:	add    rax,0x8
 1004856:	mov    rcx,0xffffffffffffffff
 100485d:	cmovb  rax,rcx
 1004861:	mov    rcx,rax
 1004864:	call   0x1011e84
 1004869:	mov    QWORD PTR [rbp-0x80],rax
 100486d:	cmp    QWORD PTR [rbp-0x80],0x0
 1004872:	je     0x10048bb
 1004874:	mov    rax,QWORD PTR [rbp-0x80]
 1004878:	mov    ecx,DWORD PTR [rbp-0x48]
 100487b:	mov    DWORD PTR [rax],ecx
 100487d:	mov    rax,QWORD PTR [rbp-0x80]
 1004881:	add    rax,0x8
 1004885:	lea    rcx,[rip+0xa074]        # 0x100e900
 100488c:	mov    QWORD PTR [rsp+0x20],rcx
 1004891:	lea    r9,[rip+0x61c8]        # 0x100aa60
 1004898:	mov    r8d,DWORD PTR [rbp-0x48]
 100489c:	mov    edx,0xb78
 10048a1:	mov    rcx,rax
 10048a4:	call   0x1011b0c
 10048a9:	mov    rax,QWORD PTR [rbp-0x80]
 10048ad:	add    rax,0x8
 10048b1:	mov    QWORD PTR [rsp+0xb0],rax
 10048b9:	jmp    0x10048c7
 10048bb:	mov    QWORD PTR [rsp+0xb0],0x0
 10048c7:	mov    rax,QWORD PTR [rsp+0xb0]
 10048cf:	mov    QWORD PTR [rsp+0x110],rax
 10048d7:	mov    rax,QWORD PTR [rsp+0x110]
 10048df:	mov    QWORD PTR [rip+0x196d2],rax        # 0x101dfb8
 10048e6:	cmp    QWORD PTR [rip+0x196ca],0x0        # 0x101dfb8
 10048ee:	jne    0x100491f
 10048f0:	mov    DWORD PTR [rbp-0x64],0x0
 10048f7:	lea    rcx,[rsp+0x58]
 10048fc:	call   0x1003920
 1004901:	nop
 1004902:	lea    rcx,[rsp+0x30]
 1004907:	call   0x1003920
 100490c:	nop
 100490d:	lea    rcx,[rsp+0x38]
 1004912:	call   0x1011320
 1004917:	mov    eax,DWORD PTR [rbp-0x64]
 100491a:	jmp    0x1004eb8
 100491f:	mov    DWORD PTR [rsp+0x44],0x0
 1004927:	cmp    DWORD PTR [rsp+0x48],0x0
 100492c:	jne    0x1004940
 100492e:	cmp    DWORD PTR [rsp+0x4c],0x0
 1004933:	jne    0x1004940
 1004935:	cmp    DWORD PTR [rsp+0x50],0x0
 100493a:	je     0x1004c0f
 1004940:	lea    rcx,[rsp+0x78]
 1004945:	call   0x100e7c0
 100494a:	nop
 100494b:	mov    DWORD PTR [rsp+0x998],0x0
 1004956:	mov    DWORD PTR [rsp+0x990],0x0
 1004961:	lea    rcx,[rip+0x1b9b8]        # 0x1020320
 1004968:	call   0x100f0a0
 100496d:	test   eax,eax
 100496f:	jne    0x10049bb
 1004971:	lea    rcx,[rip+0x1b9a8]        # 0x1020320
 1004978:	call   0x100f0e0
 100497d:	mov    QWORD PTR [rsp+0xc0],rax
 1004985:	mov    rax,QWORD PTR [rsp+0xc0]
 100498d:	mov    rax,QWORD PTR [rax]
 1004990:	lea    rdx,[rsp+0x998]
 1004998:	mov    rcx,QWORD PTR [rsp+0xc0]
 10049a0:	call   QWORD PTR [rax+0x1e0]
 10049a6:	mov    ecx,eax
 10049a8:	call   0x1006e20
 10049ad:	test   eax,eax
 10049af:	jne    0x10049bb
 10049b1:	cmp    DWORD PTR [rsp+0x998],0x0
 10049b9:	jg     0x10049f5
 10049bb:	mov    DWORD PTR [rbp-0x5c],0x0
 10049c2:	lea    rcx,[rsp+0x78]
 10049c7:	call   0x100e7f0
 10049cc:	nop
 10049cd:	lea    rcx,[rsp+0x58]
 10049d2:	call   0x1003920
 10049d7:	nop
 10049d8:	lea    rcx,[rsp+0x30]
 10049dd:	call   0x1003920
 10049e2:	nop
 10049e3:	lea    rcx,[rsp+0x38]
 10049e8:	call   0x1011320
 10049ed:	mov    eax,DWORD PTR [rbp-0x5c]
 10049f0:	jmp    0x1004eb8
 10049f5:	mov    DWORD PTR [rsp+0x64],0x0
 10049fd:	jmp    0x1004a09
 10049ff:	mov    eax,DWORD PTR [rsp+0x64]
 1004a03:	inc    eax
 1004a05:	mov    DWORD PTR [rsp+0x64],eax
 1004a09:	mov    eax,DWORD PTR [rsp+0x998]
 1004a10:	cmp    DWORD PTR [rsp+0x64],eax
 1004a14:	jge    0x1004c05
 1004a1a:	lea    rcx,[rip+0x1b8ff]        # 0x1020320
 1004a21:	call   0x100f0e0
 1004a26:	mov    QWORD PTR [rsp+0xd0],rax
 1004a2e:	lea    rcx,[rsp+0x78]
 1004a33:	call   0x100e830
 1004a38:	mov    rcx,QWORD PTR [rsp+0xd0]
 1004a40:	mov    rcx,QWORD PTR [rcx]
 1004a43:	mov    QWORD PTR [rsp+0x118],rcx
 1004a4b:	mov    r8,rax
 1004a4e:	mov    edx,DWORD PTR [rsp+0x64]
 1004a52:	mov    rcx,QWORD PTR [rsp+0xd0]
 1004a5a:	mov    rax,QWORD PTR [rsp+0x118]
 1004a62:	call   QWORD PTR [rax+0x1c0]
 1004a68:	mov    ecx,eax
 1004a6a:	call   0x1006e20
 1004a6f:	test   eax,eax
 1004a71:	jne    0x1004b1a
 1004a77:	lea    rcx,[rsp+0x78]
 1004a7c:	call   0x100e850
 1004a81:	test   eax,eax
 1004a83:	jne    0x1004b1a
 1004a89:	lea    rcx,[rsp+0x78]
 1004a8e:	call   0x100e890
 1004a93:	mov    QWORD PTR [rsp+0xe0],rax
 1004a9b:	mov    rax,QWORD PTR [rsp+0xe0]
 1004aa3:	mov    rax,QWORD PTR [rax]
 1004aa6:	lea    rdx,[rsp+0x990]
 1004aae:	mov    rcx,QWORD PTR [rsp+0xe0]
 1004ab6:	call   QWORD PTR [rax+0x98]
 1004abc:	mov    ecx,eax
 1004abe:	call   0x1006e20
 1004ac3:	test   eax,eax
 1004ac5:	jne    0x1004b1a
 1004ac7:	lea    rcx,[rsp+0x78]
 1004acc:	call   0x100e890
 1004ad1:	mov    QWORD PTR [rbp-0x38],rax
 1004ad5:	lea    rcx,[rsp+0x30]
 1004ada:	call   0x10039d0
 1004adf:	mov    rcx,QWORD PTR [rbp-0x38]
 1004ae3:	mov    rcx,QWORD PTR [rcx]
 1004ae6:	mov    QWORD PTR [rsp+0x128],rcx
 1004aee:	mov    rdx,rax
 1004af1:	mov    rcx,QWORD PTR [rbp-0x38]
 1004af5:	mov    rax,QWORD PTR [rsp+0x128]
 1004afd:	call   QWORD PTR [rax+0x40]
 1004b00:	mov    ecx,eax
 1004b02:	call   0x1006e20
 1004b07:	test   eax,eax
 1004b09:	jne    0x1004b1a
 1004b0b:	lea    rcx,[rsp+0x30]
 1004b10:	call   0x1003990
 1004b15:	test   rax,rax
 1004b18:	jne    0x1004b54
 1004b1a:	mov    DWORD PTR [rbp-0x54],0x0
 1004b21:	lea    rcx,[rsp+0x78]
 1004b26:	call   0x100e7f0
 1004b2b:	nop
 1004b2c:	lea    rcx,[rsp+0x58]
 1004b31:	call   0x1003920
 1004b36:	nop
 1004b37:	lea    rcx,[rsp+0x30]
 1004b3c:	call   0x1003920
 1004b41:	nop
 1004b42:	lea    rcx,[rsp+0x38]
 1004b47:	call   0x1011320
 1004b4c:	mov    eax,DWORD PTR [rbp-0x54]
 1004b4f:	jmp    0x1004eb8
 1004b54:	lea    rcx,[rsp+0x30]
 1004b59:	call   0x10039b0
 1004b5e:	lea    rdx,[rip+0xffffffffffffd37b]        # 0x1001ee0
 1004b65:	mov    rcx,rax
 1004b68:	call   QWORD PTR [rip+0xffffffffffffc7da]        # 0x1001348
 1004b6e:	test   eax,eax
 1004b70:	je     0x1004bec
 1004b72:	mov    eax,DWORD PTR [rip+0x19448]        # 0x101dfc0
 1004b78:	cmp    DWORD PTR [rsp+0x44],eax
 1004b7c:	jge    0x1004bec
 1004b7e:	cmp    DWORD PTR [rsp+0x48],0x0
 1004b83:	jne    0x1004ba7
 1004b85:	cmp    DWORD PTR [rsp+0x990],0x0
 1004b8d:	je     0x1004b96
 1004b8f:	cmp    DWORD PTR [rsp+0x50],0x0
 1004b94:	jne    0x1004ba7
 1004b96:	cmp    DWORD PTR [rsp+0x990],0x0
 1004b9e:	jne    0x1004bec
 1004ba0:	cmp    DWORD PTR [rsp+0x4c],0x0
 1004ba5:	je     0x1004bec
 1004ba7:	movsxd rax,DWORD PTR [rsp+0x44]
 1004bac:	imul   rax,rax,0xb78
 1004bb3:	mov    rcx,QWORD PTR [rip+0x193fe]        # 0x101dfb8
 1004bba:	add    rcx,rax
 1004bbd:	mov    rax,rcx
 1004bc0:	mov    QWORD PTR [rsp+0x138],rax
 1004bc8:	mov    eax,DWORD PTR [rsp+0x44]
 1004bcc:	inc    eax
 1004bce:	mov    DWORD PTR [rsp+0x44],eax
 1004bd2:	lea    rcx,[rsp+0x30]
 1004bd7:	call   0x1003990
 1004bdc:	mov    rdx,rax
 1004bdf:	mov    rcx,QWORD PTR [rsp+0x138]
 1004be7:	call   0x100ab20
 1004bec:	lea    rcx,[rsp+0x30]
 1004bf1:	call   0x1003950
 1004bf6:	lea    rcx,[rsp+0x78]
 1004bfb:	call   0x100e8b0
 1004c00:	jmp    0x10049ff
 1004c05:	lea    rcx,[rsp+0x78]
 1004c0a:	call   0x100e7f0
 1004c0f:	cmp    DWORD PTR [rsp+0x48],0x0
 1004c14:	je     0x1004c45
 1004c16:	mov    DWORD PTR [rbp-0x70],0x1
 1004c1d:	lea    rcx,[rsp+0x58]
 1004c22:	call   0x1003920
 1004c27:	nop
 1004c28:	lea    rcx,[rsp+0x30]
 1004c2d:	call   0x1003920
 1004c32:	nop
 1004c33:	lea    rcx,[rsp+0x38]
 1004c38:	call   0x1011320
 1004c3d:	mov    eax,DWORD PTR [rbp-0x70]
 1004c40:	jmp    0x1004eb8
 1004c45:	mov    DWORD PTR [rsp+0x40],0x0
 1004c4d:	jmp    0x1004c59
 1004c4f:	mov    eax,DWORD PTR [rsp+0x40]
 1004c53:	inc    eax
 1004c55:	mov    DWORD PTR [rsp+0x40],eax
 1004c59:	mov    eax,DWORD PTR [rsp+0x68]
 1004c5d:	cmp    DWORD PTR [rsp+0x40],eax
 1004c61:	jge    0x1004e8e
 1004c67:	lea    rcx,[rsp+0x38]
 1004c6c:	call   0x1011400
 1004c71:	mov    QWORD PTR [rbp-0x28],rax
 1004c75:	lea    rcx,[rsp+0x30]
 1004c7a:	call   0x10039d0
 1004c7f:	mov    rcx,QWORD PTR [rbp-0x28]
 1004c83:	mov    rcx,QWORD PTR [rcx]
 1004c86:	mov    QWORD PTR [rsp+0x148],rcx
 1004c8e:	mov    r9,rax
 1004c91:	xor    r8d,r8d
 1004c94:	mov    edx,DWORD PTR [rsp+0x40]
 1004c98:	mov    rcx,QWORD PTR [rbp-0x28]
 1004c9c:	mov    rax,QWORD PTR [rsp+0x148]
 1004ca4:	call   QWORD PTR [rax+0xa0]
 1004caa:	test   eax,eax
 1004cac:	jl     0x1004e5d
 1004cb2:	lea    rcx,[rsp+0x30]
 1004cb7:	call   0x1003990
 1004cbc:	test   rax,rax
 1004cbf:	je     0x1004e5d
 1004cc5:	lea    rcx,[rsp+0x30]
 1004cca:	call   0x10039b0
 1004ccf:	mov    rdx,rax
 1004cd2:	lea    rcx,[rip+0xffffffffffffe4ff]        # 0x10031d8
 1004cd9:	call   QWORD PTR [rip+0xffffffffffffc669]        # 0x1001348
 1004cdf:	test   eax,eax
 1004ce1:	je     0x1004d3d
 1004ce3:	lea    rcx,[rsp+0x30]
 1004ce8:	call   0x10039b0
 1004ced:	mov    rdx,rax
 1004cf0:	lea    rcx,[rip+0xffffffffffffe501]        # 0x10031f8
 1004cf7:	call   QWORD PTR [rip+0xffffffffffffc64b]        # 0x1001348
 1004cfd:	test   eax,eax
 1004cff:	je     0x1004d3d
 1004d01:	lea    rcx,[rsp+0x30]
 1004d06:	call   0x10039b0
 1004d0b:	mov    rdx,rax
 1004d0e:	lea    rcx,[rip+0xffffffffffffe513]        # 0x1003228
 1004d15:	call   QWORD PTR [rip+0xffffffffffffc62d]        # 0x1001348
 1004d1b:	test   eax,eax
 1004d1d:	je     0x1004d3d
 1004d1f:	lea    rcx,[rsp+0x30]
 1004d24:	call   0x10039b0
 1004d29:	lea    rdx,[rip+0xffffffffffffd1b0]        # 0x1001ee0
 1004d30:	mov    rcx,rax
 1004d33:	call   QWORD PTR [rip+0xffffffffffffc60f]        # 0x1001348
 1004d39:	test   eax,eax
 1004d3b:	jne    0x1004d42
 1004d3d:	jmp    0x1004c4f
 1004d42:	mov    DWORD PTR [rsp+0x99c],0x0
 1004d4d:	mov    DWORD PTR [rsp+0x70],0x0
 1004d55:	jmp    0x1004d61
 1004d57:	mov    eax,DWORD PTR [rsp+0x70]
 1004d5b:	inc    eax
 1004d5d:	mov    DWORD PTR [rsp+0x70],eax
 1004d61:	mov    eax,DWORD PTR [rsp+0x44]
 1004d65:	cmp    DWORD PTR [rsp+0x70],eax
 1004d69:	jge    0x1004dc2
 1004d6b:	lea    rcx,[rsp+0x30]
 1004d70:	call   0x10039b0
 1004d75:	mov    QWORD PTR [rsp+0x158],rax
 1004d7d:	movsxd rcx,DWORD PTR [rsp+0x70]
 1004d82:	imul   rcx,rcx,0xb78
 1004d89:	mov    rdx,QWORD PTR [rip+0x19228]        # 0x101dfb8
 1004d90:	add    rdx,rcx
 1004d93:	mov    rcx,rdx
 1004d96:	call   0x100d540
 1004d9b:	mov    rcx,QWORD PTR [rsp+0x158]
 1004da3:	mov    rdx,rcx
 1004da6:	mov    rcx,rax
 1004da9:	call   QWORD PTR [rip+0xffffffffffffc571]        # 0x1001320
 1004daf:	test   eax,eax
 1004db1:	jne    0x1004dc0
 1004db3:	mov    DWORD PTR [rsp+0x99c],0x1
 1004dbe:	jmp    0x1004dc2
 1004dc0:	jmp    0x1004d57
 1004dc2:	cmp    DWORD PTR [rsp+0x99c],0x0
 1004dca:	jne    0x1004e51
 1004dd0:	mov    eax,DWORD PTR [rip+0x191ea]        # 0x101dfc0
 1004dd6:	cmp    DWORD PTR [rsp+0x44],eax
 1004dda:	jge    0x1004e51
 1004ddc:	movsxd rax,DWORD PTR [rsp+0x44]
 1004de1:	imul   rax,rax,0xb78
 1004de8:	mov    rcx,QWORD PTR [rip+0x191c9]        # 0x101dfb8
 1004def:	add    rcx,rax
 1004df2:	mov    rax,rcx
 1004df5:	mov    QWORD PTR [rsp+0x168],rax
 1004dfd:	mov    eax,DWORD PTR [rsp+0x44]
 1004e01:	inc    eax
 1004e03:	mov    DWORD PTR [rsp+0x44],eax
 1004e07:	lea    rcx,[rsp+0x30]
 1004e0c:	call   0x1003990
 1004e11:	mov    rdx,rax
 1004e14:	mov    rcx,QWORD PTR [rsp+0x168]
 1004e1c:	call   0x100ab20
 1004e21:	test   eax,eax
 1004e23:	jne    0x1004e51
 1004e25:	mov    DWORD PTR [rbp-0x50],0x0
 1004e2c:	lea    rcx,[rsp+0x58]
 1004e31:	call   0x1003920
 1004e36:	nop
 1004e37:	lea    rcx,[rsp+0x30]
 1004e3c:	call   0x1003920
 1004e41:	nop
 1004e42:	lea    rcx,[rsp+0x38]
 1004e47:	call   0x1011320
 1004e4c:	mov    eax,DWORD PTR [rbp-0x50]
 1004e4f:	jmp    0x1004eb8
 1004e51:	lea    rcx,[rsp+0x30]
 1004e56:	call   0x1003950
 1004e5b:	jmp    0x1004e89
 1004e5d:	mov    DWORD PTR [rbp-0x68],0x0
 1004e64:	lea    rcx,[rsp+0x58]
 1004e69:	call   0x1003920
 1004e6e:	nop
 1004e6f:	lea    rcx,[rsp+0x30]
 1004e74:	call   0x1003920
 1004e79:	nop
 1004e7a:	lea    rcx,[rsp+0x38]
 1004e7f:	call   0x1011320
 1004e84:	mov    eax,DWORD PTR [rbp-0x68]
 1004e87:	jmp    0x1004eb8
 1004e89:	jmp    0x1004c4f
 1004e8e:	mov    DWORD PTR [rbp-0x58],0x1
 1004e95:	lea    rcx,[rsp+0x58]
 1004e9a:	call   0x1003920
 1004e9f:	nop
 1004ea0:	lea    rcx,[rsp+0x30]
 1004ea5:	call   0x1003920
 1004eaa:	nop
 1004eab:	lea    rcx,[rsp+0x38]
 1004eb0:	call   0x1011320
 1004eb5:	mov    eax,DWORD PTR [rbp-0x58]
 1004eb8:	mov    rcx,QWORD PTR [rbp-0x10]
 1004ebc:	xor    rcx,rsp
 1004ebf:	call   0x1012040
 1004ec4:	add    rsp,0xa20
 1004ecb:	pop    rbp
 1004ecc:	ret    
 1004ecd:	int3   
 1004ece:	int3   
 1004ecf:	int3   
 1004ed0:	int3   
 1004ed1:	int3   
 1004ed2:	int3   
 1004ed3:	int3   
 1004ed4:	int3   
 1004ed5:	int3   
 1004ed6:	int3   
 1004ed7:	int3   
 1004ed8:	int3   
 1004ed9:	int3   
 1004eda:	int3   
 1004edb:	int3   
 1004edc:	int3   
 1004edd:	int3   
 1004ede:	int3   
 1004edf:	int3   
 1004ee0:	mov    QWORD PTR [rsp+0x18],r8
 1004ee5:	mov    QWORD PTR [rsp+0x10],rdx
 1004eea:	mov    QWORD PTR [rsp+0x8],rcx
 1004eef:	push   rbp
 1004ef0:	mov    rbp,rsp
 1004ef3:	push   rdi
 1004ef4:	sub    rsp,0x2f8
 1004efb:	mov    rax,QWORD PTR [rip+0x1045e]        # 0x1015360
 1004f02:	xor    rax,rsp
 1004f05:	mov    QWORD PTR [rbp-0x20],rax
 1004f09:	mov    DWORD PTR [rsp+0x38],0x0
 1004f11:	mov    DWORD PTR [rsp+0x40],0x0
 1004f19:	mov    QWORD PTR [rsp+0x30],0x0
 1004f22:	mov    QWORD PTR [rsp+0x48],0x0
 1004f2b:	mov    QWORD PTR [rsp+0x58],0x0
 1004f34:	movzx  eax,WORD PTR [rip+0xffffffffffffc885]        # 0x10017c0
 1004f3b:	mov    WORD PTR [rsp+0x90],ax
 1004f43:	lea    rax,[rsp+0x92]
 1004f4b:	mov    rdi,rax
 1004f4e:	xor    eax,eax
 1004f50:	mov    ecx,0xfe
 1004f55:	rep stos BYTE PTR es:[rdi],al
 1004f57:	movzx  eax,WORD PTR [rip+0xffffffffffffc862]        # 0x10017c0
 1004f5e:	mov    WORD PTR [rsp+0x1e0],ax
 1004f66:	lea    rax,[rsp+0x1e2]
 1004f6e:	mov    rdi,rax
 1004f71:	xor    eax,eax
 1004f73:	mov    ecx,0xfe
 1004f78:	rep stos BYTE PTR es:[rdi],al
 1004f7a:	cmp    QWORD PTR [rbp+0x10],0x0
 1004f7f:	je     0x1004f8f
 1004f81:	cmp    QWORD PTR [rbp+0x18],0x0
 1004f86:	je     0x1004f8f
 1004f88:	cmp    QWORD PTR [rbp+0x20],0x0
 1004f8d:	jne    0x1004f99
 1004f8f:	jmp    0x1005474
 1004f94:	jmp    0x1005474
 1004f99:	lea    rcx,[rip+0x1b380]        # 0x1020320
 1004fa0:	call   0x100f0e0
 1004fa5:	mov    QWORD PTR [rsp+0x190],rax
 1004fad:	mov    rax,QWORD PTR [rsp+0x190]
 1004fb5:	mov    rax,QWORD PTR [rax]
 1004fb8:	mov    edx,0xa
 1004fbd:	mov    rcx,QWORD PTR [rsp+0x190]
 1004fc5:	call   QWORD PTR [rax+0xb8]
 1004fcb:	mov    ecx,eax
 1004fcd:	call   0x1006e20
 1004fd2:	mov    rax,QWORD PTR [rbp+0x18]
 1004fd6:	movzx  eax,WORD PTR [rax]
 1004fd9:	test   eax,eax
 1004fdb:	jne    0x1004fe7
 1004fdd:	mov    DWORD PTR [rsp+0x50],0x1
 1004fe5:	jmp    0x1004fef
 1004fe7:	mov    DWORD PTR [rsp+0x50],0x0
 1004fef:	lea    rcx,[rip+0x1b32a]        # 0x1020320
 1004ff6:	call   0x100f0e0
 1004ffb:	mov    QWORD PTR [rsp+0x70],rax
 1005000:	mov    rax,QWORD PTR [rsp+0x70]
 1005005:	mov    rax,QWORD PTR [rax]
 1005008:	mov    edx,DWORD PTR [rsp+0x50]
 100500c:	mov    rcx,QWORD PTR [rsp+0x70]
 1005011:	call   QWORD PTR [rax+0xc8]
 1005017:	mov    ecx,eax
 1005019:	call   0x1006e20
 100501e:	test   eax,eax
 1005020:	jne    0x10050dc
 1005026:	mov    rax,QWORD PTR [rbp+0x20]
 100502a:	movzx  eax,WORD PTR [rax]
 100502d:	test   eax,eax
 100502f:	je     0x100503f
 1005031:	mov    rax,QWORD PTR [rbp+0x20]
 1005035:	mov    QWORD PTR [rsp+0x1b0],rax
 100503d:	jmp    0x100504b
 100503f:	mov    QWORD PTR [rsp+0x1b0],0x0
 100504b:	mov    rax,QWORD PTR [rbp+0x18]
 100504f:	movzx  eax,WORD PTR [rax]
 1005052:	test   eax,eax
 1005054:	je     0x1005064
 1005056:	mov    rax,QWORD PTR [rbp+0x18]
 100505a:	mov    QWORD PTR [rsp+0x80],rax
 1005062:	jmp    0x1005070
 1005064:	mov    QWORD PTR [rsp+0x80],0x0
 1005070:	mov    rax,QWORD PTR [rbp+0x10]
 1005074:	movzx  eax,WORD PTR [rax]
 1005077:	test   eax,eax
 1005079:	je     0x1005089
 100507b:	mov    rax,QWORD PTR [rbp+0x10]
 100507f:	mov    QWORD PTR [rsp+0x1d0],rax
 1005087:	jmp    0x1005095
 1005089:	mov    QWORD PTR [rsp+0x1d0],0x0
 1005095:	lea    rcx,[rip+0x1b284]        # 0x1020320
 100509c:	call   0x100f0e0
 10050a1:	mov    QWORD PTR [rsp+0x60],rax
 10050a6:	mov    rax,QWORD PTR [rsp+0x60]
 10050ab:	mov    rax,QWORD PTR [rax]
 10050ae:	mov    r9,QWORD PTR [rsp+0x1b0]
 10050b6:	mov    r8,QWORD PTR [rsp+0x80]
 10050be:	mov    rdx,QWORD PTR [rsp+0x1d0]
 10050c6:	mov    rcx,QWORD PTR [rsp+0x60]
 10050cb:	call   QWORD PTR [rax+0x2b0]
 10050d1:	mov    ecx,eax
 10050d3:	call   0x1006e20
 10050d8:	test   eax,eax
 10050da:	je     0x10050eb
 10050dc:	jmp    0x1005474
 10050e1:	jmp    0x1005474
 10050e6:	jmp    0x10051d4
 10050eb:	mov    DWORD PTR [rsp+0x38],0x1
 10050f3:	lea    rcx,[rip+0x1b226]        # 0x1020320
 10050fa:	call   0x100f0e0
 10050ff:	mov    QWORD PTR [rsp+0x1c0],rax
 1005107:	mov    rax,QWORD PTR [rsp+0x1c0]
 100510f:	mov    rax,QWORD PTR [rax]
 1005112:	lea    rdx,[rsp+0x40]
 1005117:	mov    rcx,QWORD PTR [rsp+0x1c0]
 100511f:	call   QWORD PTR [rax+0xc0]
 1005125:	mov    ecx,eax
 1005127:	call   0x1006e20
 100512c:	lea    rcx,[rip+0x1b1ed]        # 0x1020320
 1005133:	call   0x100f0e0
 1005138:	mov    QWORD PTR [rsp+0x1a0],rax
 1005140:	mov    rax,QWORD PTR [rsp+0x1a0]
 1005148:	mov    rax,QWORD PTR [rax]
 100514b:	lea    rdx,[rip+0x10242]        # 0x1015394
 1005152:	mov    rcx,QWORD PTR [rsp+0x1a0]
 100515a:	call   QWORD PTR [rax+0x128]
 1005160:	mov    ecx,eax
 1005162:	call   0x1006e20
 1005167:	lea    rcx,[rip+0x1b1b2]        # 0x1020320
 100516e:	call   0x100f0e0
 1005173:	mov    QWORD PTR [rsp+0x1d8],rax
 100517b:	mov    rax,QWORD PTR [rsp+0x1d8]
 1005183:	mov    rax,QWORD PTR [rax]
 1005186:	lea    rdx,[rip+0x1021b]        # 0x10153a8
 100518d:	mov    rcx,QWORD PTR [rsp+0x1d8]
 1005195:	call   QWORD PTR [rax+0x130]
 100519b:	mov    ecx,eax
 100519d:	call   0x1006e20
 10051a2:	lea    rcx,[rip+0x1b177]        # 0x1020320
 10051a9:	call   0x100f0e0
 10051ae:	mov    QWORD PTR [rsp+0x68],rax
 10051b3:	mov    rax,QWORD PTR [rsp+0x68]
 10051b8:	mov    rax,QWORD PTR [rax]
 10051bb:	lea    rdx,[rip+0x101e6]        # 0x10153a8
 10051c2:	mov    rcx,QWORD PTR [rsp+0x68]
 10051c7:	call   QWORD PTR [rax+0x130]
 10051cd:	mov    ecx,eax
 10051cf:	call   0x1006e20
 10051d4:	lea    rcx,[rip+0x1b145]        # 0x1020320
 10051db:	call   0x100f0e0
 10051e0:	mov    QWORD PTR [rsp+0x78],rax
 10051e5:	mov    rax,QWORD PTR [rsp+0x78]
 10051ea:	mov    rax,QWORD PTR [rax]
 10051ed:	lea    rdx,[rsp+0x30]
 10051f2:	mov    rcx,QWORD PTR [rsp+0x78]
 10051f7:	call   QWORD PTR [rax+0x118]
 10051fd:	mov    ecx,eax
 10051ff:	call   0x1006e20
 1005204:	lea    rcx,[rip+0x1b115]        # 0x1020320
 100520b:	call   0x100f0e0
 1005210:	mov    QWORD PTR [rsp+0x88],rax
 1005218:	mov    rax,QWORD PTR [rsp+0x88]
 1005220:	mov    rax,QWORD PTR [rax]
 1005223:	lea    rdx,[rsp+0x48]
 1005228:	mov    rcx,QWORD PTR [rsp+0x88]
 1005230:	call   QWORD PTR [rax+0x3b8]
 1005236:	mov    ecx,eax
 1005238:	call   0x1006e20
 100523d:	cmp    QWORD PTR [rsp+0x30],0x0
 1005243:	je     0x100525e
 1005245:	mov    r8d,0x100
 100524b:	lea    rdx,[rip+0x1ae2e]        # 0x1020080
 1005252:	mov    rcx,QWORD PTR [rsp+0x30]
 1005257:	call   0x1008be0
 100525c:	jmp    0x1005277
 100525e:	lea    r8,[rip+0xffffffffffffc7db]        # 0x1001a40
 1005265:	mov    edx,0x100
 100526a:	lea    rcx,[rip+0x1ae0f]        # 0x1020080
 1005271:	call   QWORD PTR [rip+0xffffffffffffc0b1]        # 0x1001328
 1005277:	mov    r8d,0x80
 100527d:	lea    rdx,[rsp+0x1e0]
 1005285:	mov    ecx,0x2e
 100528a:	call   0x1008800
 100528f:	mov    r8d,0x1000
 1005295:	lea    rdx,[rip+0x15bf4]        # 0x101ae90
 100529c:	mov    ecx,0x10
 10052a1:	call   0x1008800
 10052a6:	cmp    QWORD PTR [rsp+0x30],0x0
 10052ac:	je     0x10052bd
 10052ae:	mov    rax,QWORD PTR [rsp+0x30]
 10052b3:	mov    QWORD PTR [rsp+0x1a8],rax
 10052bb:	jmp    0x10052f4
 10052bd:	cmp    QWORD PTR [rsp+0x48],0x0
 10052c3:	je     0x10052d4
 10052c5:	mov    rax,QWORD PTR [rsp+0x48]
 10052ca:	mov    QWORD PTR [rsp+0x198],rax
 10052d2:	jmp    0x10052e4
 10052d4:	lea    rax,[rsp+0x1e0]
 10052dc:	mov    QWORD PTR [rsp+0x198],rax
 10052e4:	mov    rax,QWORD PTR [rsp+0x198]
 10052ec:	mov    QWORD PTR [rsp+0x1a8],rax
 10052f4:	mov    r9,QWORD PTR [rsp+0x1a8]
 10052fc:	lea    r8,[rip+0x15b8d]        # 0x101ae90
 1005303:	mov    edx,0x2710
 1005308:	lea    rcx,[rip+0x10d61]        # 0x1016070
 100530f:	call   QWORD PTR [rip+0xffffffffffffbee3]        # 0x10011f8
 1005315:	lea    rcx,[rip+0x10d54]        # 0x1016070
 100531c:	call   0x1008f00
 1005321:	cmp    QWORD PTR [rsp+0x30],0x0
 1005327:	je     0x1005334
 1005329:	mov    rcx,QWORD PTR [rsp+0x30]
 100532e:	call   QWORD PTR [rip+0xffffffffffffc02c]        # 0x1001360
 1005334:	cmp    QWORD PTR [rsp+0x48],0x0
 100533a:	je     0x1005347
 100533c:	mov    rcx,QWORD PTR [rsp+0x48]
 1005341:	call   QWORD PTR [rip+0xffffffffffffc019]        # 0x1001360
 1005347:	lea    rcx,[rip+0x1afd2]        # 0x1020320
 100534e:	call   0x100f0e0
 1005353:	mov    QWORD PTR [rsp+0x1b8],rax
 100535b:	mov    rax,QWORD PTR [rsp+0x1b8]
 1005363:	mov    rax,QWORD PTR [rax]
 1005366:	lea    rdx,[rsp+0x58]
 100536b:	mov    rcx,QWORD PTR [rsp+0x1b8]
 1005373:	call   QWORD PTR [rax+0x110]
 1005379:	mov    ecx,eax
 100537b:	call   0x1006e20
 1005380:	test   eax,eax
 1005382:	jne    0x100540e
 1005388:	cmp    QWORD PTR [rsp+0x58],0x0
 100538e:	je     0x100540e
 1005390:	mov    r8d,0x1000
 1005396:	lea    rdx,[rip+0x15af3]        # 0x101ae90
 100539d:	mov    ecx,0x11
 10053a2:	call   0x1008800
 10053a7:	cmp    DWORD PTR [rsp+0x40],0x0
 10053ac:	je     0x10053b8
 10053ae:	mov    DWORD PTR [rsp+0x3c],0x28
 10053b6:	jmp    0x10053c0
 10053b8:	mov    DWORD PTR [rsp+0x3c],0x29
 10053c0:	mov    r8d,0x80
 10053c6:	lea    rdx,[rsp+0x90]
 10053ce:	mov    ecx,DWORD PTR [rsp+0x3c]
 10053d2:	call   0x1008800
 10053d7:	lea    rax,[rsp+0x90]
 10053df:	mov    QWORD PTR [rsp+0x20],rax
 10053e4:	mov    r9,QWORD PTR [rsp+0x58]
 10053e9:	lea    r8,[rip+0x15aa0]        # 0x101ae90
 10053f0:	mov    edx,0x2710
 10053f5:	lea    rcx,[rip+0x10c74]        # 0x1016070
 10053fc:	call   QWORD PTR [rip+0xffffffffffffbdf6]        # 0x10011f8
 1005402:	lea    rcx,[rip+0x10c67]        # 0x1016070
 1005409:	call   0x1008f00
 100540e:	cmp    QWORD PTR [rsp+0x58],0x0
 1005414:	je     0x1005421
 1005416:	mov    rcx,QWORD PTR [rsp+0x58]
 100541b:	call   QWORD PTR [rip+0xffffffffffffbf3f]        # 0x1001360
 1005421:	cmp    DWORD PTR [rsp+0x38],0x0
 1005426:	je     0x1005474
 1005428:	movzx  eax,BYTE PTR [rip+0x1918b]        # 0x101e5ba
 100542f:	test   eax,eax
 1005431:	je     0x1005474
 1005433:	lea    rcx,[rip+0x1aee6]        # 0x1020320
 100543a:	call   0x100f0e0
 100543f:	mov    QWORD PTR [rsp+0x1c8],rax
 1005447:	mov    rax,QWORD PTR [rsp+0x1c8]
 100544f:	mov    rax,QWORD PTR [rax]
 1005452:	xor    r9d,r9d
 1005455:	xor    r8d,r8d
 1005458:	lea    rdx,[rip+0xffffffffffffc5f1]        # 0x1001a50
 100545f:	mov    rcx,QWORD PTR [rsp+0x1c8]
 1005467:	call   QWORD PTR [rax+0x2d8]
 100546d:	mov    ecx,eax
 100546f:	call   0x1006e20
 1005474:	mov    eax,DWORD PTR [rsp+0x38]
 1005478:	mov    rcx,QWORD PTR [rbp-0x20]
 100547c:	xor    rcx,rsp
 100547f:	call   0x1012040
 1005484:	add    rsp,0x2f8
 100548b:	pop    rdi
 100548c:	pop    rbp
 100548d:	ret    
 100548e:	int3   
 100548f:	int3   
 1005490:	int3   
 1005491:	int3   
 1005492:	int3   
 1005493:	int3   
 1005494:	int3   
 1005495:	int3   
 1005496:	int3   
 1005497:	int3   
 1005498:	int3   
 1005499:	int3   
 100549a:	int3   
 100549b:	int3   
 100549c:	int3   
 100549d:	int3   
 100549e:	int3   
 100549f:	int3   
 10054a0:	mov    QWORD PTR [rsp+0x20],r9
 10054a5:	mov    QWORD PTR [rsp+0x18],r8
 10054aa:	mov    QWORD PTR [rsp+0x10],rdx
 10054af:	mov    DWORD PTR [rsp+0x8],ecx
 10054b3:	push   rbp
 10054b4:	mov    rbp,rsp
 10054b7:	sub    rsp,0x50
 10054bb:	mov    DWORD PTR [rsp+0x2c],0x0
 10054c3:	mov    DWORD PTR [rsp+0x38],0x0
 10054cb:	mov    DWORD PTR [rsp+0x30],0x0
 10054d3:	mov    DWORD PTR [rsp+0x3c],0x0
 10054db:	mov    DWORD PTR [rsp+0x40],0x0
 10054e3:	mov    DWORD PTR [rsp+0x44],0x0
 10054eb:	mov    DWORD PTR [rsp+0x28],0x0
 10054f3:	mov    DWORD PTR [rsp+0x24],0x0
 10054fb:	mov    DWORD PTR [rsp+0x34],0x0
 1005503:	mov    DWORD PTR [rsp+0x20],0x1
 100550b:	jmp    0x1005517
 100550d:	mov    eax,DWORD PTR [rsp+0x20]
 1005511:	inc    eax
 1005513:	mov    DWORD PTR [rsp+0x20],eax
 1005517:	mov    eax,DWORD PTR [rsp+0x60]
 100551b:	cmp    DWORD PTR [rsp+0x20],eax
 100551f:	jge    0x10066e2
 1005525:	movsxd rax,DWORD PTR [rsp+0x20]
 100552a:	lea    rdx,[rip+0xffffffffffffc66f]        # 0x1001ba0
 1005531:	mov    rcx,QWORD PTR [rsp+0x68]
 1005536:	mov    rcx,QWORD PTR [rcx+rax*8]
 100553a:	call   QWORD PTR [rip+0xffffffffffffbde0]        # 0x1001320
 1005540:	test   eax,eax
 1005542:	jne    0x100554b
 1005544:	xor    eax,eax
 1005546:	jmp    0x10067d2
 100554b:	movsxd rax,DWORD PTR [rsp+0x20]
 1005550:	lea    rdx,[rip+0xffffffffffffc651]        # 0x1001ba8
 1005557:	mov    rcx,QWORD PTR [rsp+0x68]
 100555c:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005560:	call   QWORD PTR [rip+0xffffffffffffbdba]        # 0x1001320
 1005566:	test   eax,eax
 1005568:	jne    0x1005576
 100556a:	mov    DWORD PTR [rip+0x10098],0x1        # 0x101560c
 1005574:	jmp    0x100550d
 1005576:	movsxd rax,DWORD PTR [rsp+0x20]
 100557b:	lea    rdx,[rip+0xffffffffffffc62e]        # 0x1001bb0
 1005582:	mov    rcx,QWORD PTR [rsp+0x68]
 1005587:	mov    rcx,QWORD PTR [rcx+rax*8]
 100558b:	call   QWORD PTR [rip+0xffffffffffffbd8f]        # 0x1001320
 1005591:	test   eax,eax
 1005593:	jne    0x10055fb
 1005595:	mov    eax,DWORD PTR [rsp+0x60]
 1005599:	dec    eax
 100559b:	cmp    DWORD PTR [rsp+0x20],eax
 100559f:	jge    0x10055fb
 10055a1:	mov    eax,DWORD PTR [rsp+0x20]
 10055a5:	inc    eax
 10055a7:	cdqe   
 10055a9:	mov    rcx,QWORD PTR [rsp+0x68]
 10055ae:	mov    rax,QWORD PTR [rcx+rax*8]
 10055b2:	movzx  eax,WORD PTR [rax]
 10055b5:	cmp    eax,0x2d
 10055b8:	je     0x10055fb
 10055ba:	mov    eax,DWORD PTR [rsp+0x20]
 10055be:	inc    eax
 10055c0:	cdqe   
 10055c2:	mov    r9d,0x81
 10055c8:	mov    rcx,QWORD PTR [rsp+0x68]
 10055cd:	mov    r8,QWORD PTR [rcx+rax*8]
 10055d1:	mov    edx,0x82
 10055d6:	lea    rcx,[rip+0x189f3]        # 0x101dfd0
 10055dd:	call   QWORD PTR [rip+0xffffffffffffbd5d]        # 0x1001340
 10055e3:	xor    eax,eax
 10055e5:	mov    WORD PTR [rip+0x18ae6],ax        # 0x101e0d2
 10055ec:	mov    eax,DWORD PTR [rsp+0x20]
 10055f0:	inc    eax
 10055f2:	mov    DWORD PTR [rsp+0x20],eax
 10055f6:	jmp    0x100550d
 10055fb:	movsxd rax,DWORD PTR [rsp+0x20]
 1005600:	lea    rdx,[rip+0xffffffffffffc5b1]        # 0x1001bb8
 1005607:	mov    rcx,QWORD PTR [rsp+0x68]
 100560c:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005610:	call   QWORD PTR [rip+0xffffffffffffbd0a]        # 0x1001320
 1005616:	test   eax,eax
 1005618:	jne    0x100568b
 100561a:	mov    eax,DWORD PTR [rsp+0x60]
 100561e:	dec    eax
 1005620:	cmp    DWORD PTR [rsp+0x20],eax
 1005624:	jge    0x100568b
 1005626:	mov    eax,DWORD PTR [rsp+0x20]
 100562a:	inc    eax
 100562c:	cdqe   
 100562e:	mov    rcx,QWORD PTR [rsp+0x68]
 1005633:	mov    rax,QWORD PTR [rcx+rax*8]
 1005637:	movzx  eax,WORD PTR [rax]
 100563a:	cmp    eax,0x2d
 100563d:	je     0x100568b
 100563f:	mov    eax,DWORD PTR [rsp+0x20]
 1005643:	inc    eax
 1005645:	cdqe   
 1005647:	mov    r9d,0xff
 100564d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005652:	mov    r8,QWORD PTR [rcx+rax*8]
 1005656:	mov    edx,0x100
 100565b:	mov    rcx,QWORD PTR [rbp+0x38]
 100565f:	call   QWORD PTR [rip+0xffffffffffffbcdb]        # 0x1001340
 1005665:	xor    eax,eax
 1005667:	mov    rcx,QWORD PTR [rbp+0x38]
 100566b:	mov    WORD PTR [rcx+0x1fe],ax
 1005672:	mov    DWORD PTR [rip+0x17818],0x1        # 0x101ce94
 100567c:	mov    eax,DWORD PTR [rsp+0x20]
 1005680:	inc    eax
 1005682:	mov    DWORD PTR [rsp+0x20],eax
 1005686:	jmp    0x100550d
 100568b:	movsxd rax,DWORD PTR [rsp+0x20]
 1005690:	lea    rdx,[rip+0xffffffffffffc531]        # 0x1001bc8
 1005697:	mov    rcx,QWORD PTR [rsp+0x68]
 100569c:	mov    rcx,QWORD PTR [rcx+rax*8]
 10056a0:	call   QWORD PTR [rip+0xffffffffffffbc7a]        # 0x1001320
 10056a6:	test   eax,eax
 10056a8:	jne    0x100571a
 10056aa:	mov    eax,DWORD PTR [rsp+0x60]
 10056ae:	dec    eax
 10056b0:	cmp    DWORD PTR [rsp+0x20],eax
 10056b4:	jge    0x100571a
 10056b6:	mov    eax,DWORD PTR [rsp+0x20]
 10056ba:	inc    eax
 10056bc:	cdqe   
 10056be:	mov    rcx,QWORD PTR [rsp+0x68]
 10056c3:	mov    rax,QWORD PTR [rcx+rax*8]
 10056c7:	movzx  eax,WORD PTR [rax]
 10056ca:	cmp    eax,0x2d
 10056cd:	je     0x100571a
 10056cf:	mov    eax,DWORD PTR [rsp+0x20]
 10056d3:	inc    eax
 10056d5:	cdqe   
 10056d7:	mov    r9d,0xff
 10056dd:	mov    rcx,QWORD PTR [rsp+0x68]
 10056e2:	mov    r8,QWORD PTR [rcx+rax*8]
 10056e6:	mov    edx,0x12c
 10056eb:	lea    rcx,[rip+0x1071e]        # 0x1015e10
 10056f2:	call   QWORD PTR [rip+0xffffffffffffbc48]        # 0x1001340
 10056f8:	xor    eax,eax
 10056fa:	mov    WORD PTR [rip+0x1090d],ax        # 0x101600e
 1005701:	mov    DWORD PTR [rip+0x1778d],0x1        # 0x101ce98
 100570b:	mov    eax,DWORD PTR [rsp+0x20]
 100570f:	inc    eax
 1005711:	mov    DWORD PTR [rsp+0x20],eax
 1005715:	jmp    0x100550d
 100571a:	movsxd rax,DWORD PTR [rsp+0x20]
 100571f:	lea    rdx,[rip+0xffffffffffffc4b6]        # 0x1001bdc
 1005726:	mov    rcx,QWORD PTR [rsp+0x68]
 100572b:	mov    rcx,QWORD PTR [rcx+rax*8]
 100572f:	call   QWORD PTR [rip+0xffffffffffffbbeb]        # 0x1001320
 1005735:	test   eax,eax
 1005737:	jne    0x10057a2
 1005739:	mov    eax,DWORD PTR [rsp+0x60]
 100573d:	dec    eax
 100573f:	cmp    DWORD PTR [rsp+0x20],eax
 1005743:	jge    0x10057a2
 1005745:	mov    eax,DWORD PTR [rsp+0x20]
 1005749:	inc    eax
 100574b:	cdqe   
 100574d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005752:	mov    rax,QWORD PTR [rcx+rax*8]
 1005756:	movzx  eax,WORD PTR [rax]
 1005759:	cmp    eax,0x2d
 100575c:	je     0x10057a2
 100575e:	mov    eax,DWORD PTR [rsp+0x20]
 1005762:	inc    eax
 1005764:	cdqe   
 1005766:	mov    r9d,0x80
 100576c:	mov    rcx,QWORD PTR [rsp+0x68]
 1005771:	mov    r8,QWORD PTR [rcx+rax*8]
 1005775:	mov    edx,0x81
 100577a:	mov    rcx,QWORD PTR [rsp+0x70]
 100577f:	call   QWORD PTR [rip+0xffffffffffffbbbb]        # 0x1001340
 1005785:	xor    eax,eax
 1005787:	mov    rcx,QWORD PTR [rsp+0x70]
 100578c:	mov    WORD PTR [rcx+0x100],ax
 1005793:	mov    eax,DWORD PTR [rsp+0x20]
 1005797:	inc    eax
 1005799:	mov    DWORD PTR [rsp+0x20],eax
 100579d:	jmp    0x100550d
 10057a2:	movsxd rax,DWORD PTR [rsp+0x20]
 10057a7:	lea    rdx,[rip+0xffffffffffffc436]        # 0x1001be4
 10057ae:	mov    rcx,QWORD PTR [rsp+0x68]
 10057b3:	mov    rcx,QWORD PTR [rcx+rax*8]
 10057b7:	call   QWORD PTR [rip+0xffffffffffffbb63]        # 0x1001320
 10057bd:	test   eax,eax
 10057bf:	jne    0x100582a
 10057c1:	mov    eax,DWORD PTR [rsp+0x60]
 10057c5:	dec    eax
 10057c7:	cmp    DWORD PTR [rsp+0x20],eax
 10057cb:	jge    0x100582a
 10057cd:	mov    eax,DWORD PTR [rsp+0x20]
 10057d1:	inc    eax
 10057d3:	cdqe   
 10057d5:	mov    rcx,QWORD PTR [rsp+0x68]
 10057da:	mov    rax,QWORD PTR [rcx+rax*8]
 10057de:	movzx  eax,WORD PTR [rax]
 10057e1:	cmp    eax,0x2d
 10057e4:	je     0x100582a
 10057e6:	mov    eax,DWORD PTR [rsp+0x20]
 10057ea:	inc    eax
 10057ec:	cdqe   
 10057ee:	mov    r9d,0x80
 10057f4:	mov    rcx,QWORD PTR [rsp+0x68]
 10057f9:	mov    r8,QWORD PTR [rcx+rax*8]
 10057fd:	mov    edx,0x81
 1005802:	mov    rcx,QWORD PTR [rsp+0x78]
 1005807:	call   QWORD PTR [rip+0xffffffffffffbb33]        # 0x1001340
 100580d:	xor    eax,eax
 100580f:	mov    rcx,QWORD PTR [rsp+0x78]
 1005814:	mov    WORD PTR [rcx+0x100],ax
 100581b:	mov    eax,DWORD PTR [rsp+0x20]
 100581f:	inc    eax
 1005821:	mov    DWORD PTR [rsp+0x20],eax
 1005825:	jmp    0x100550d
 100582a:	movsxd rax,DWORD PTR [rsp+0x20]
 100582f:	lea    rdx,[rip+0xffffffffffffc3b6]        # 0x1001bec
 1005836:	mov    rcx,QWORD PTR [rsp+0x68]
 100583b:	mov    rcx,QWORD PTR [rcx+rax*8]
 100583f:	call   QWORD PTR [rip+0xffffffffffffbadb]        # 0x1001320
 1005845:	test   eax,eax
 1005847:	jne    0x10058c1
 1005849:	mov    eax,DWORD PTR [rsp+0x60]
 100584d:	dec    eax
 100584f:	cmp    DWORD PTR [rsp+0x20],eax
 1005853:	jge    0x100586e
 1005855:	mov    eax,DWORD PTR [rsp+0x20]
 1005859:	inc    eax
 100585b:	cdqe   
 100585d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005862:	mov    rax,QWORD PTR [rcx+rax*8]
 1005866:	movzx  eax,WORD PTR [rax]
 1005869:	cmp    eax,0x2d
 100586c:	je     0x100587a
 100586e:	mov    eax,DWORD PTR [rsp+0x60]
 1005872:	dec    eax
 1005874:	cmp    DWORD PTR [rsp+0x20],eax
 1005878:	jne    0x100587f
 100587a:	jmp    0x100550d
 100587f:	mov    eax,DWORD PTR [rsp+0x20]
 1005883:	inc    eax
 1005885:	cdqe   
 1005887:	mov    r9d,0x80
 100588d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005892:	mov    r8,QWORD PTR [rcx+rax*8]
 1005896:	mov    edx,0x81
 100589b:	mov    rcx,QWORD PTR [rbp+0x30]
 100589f:	call   QWORD PTR [rip+0xffffffffffffba9b]        # 0x1001340
 10058a5:	xor    eax,eax
 10058a7:	mov    rcx,QWORD PTR [rbp+0x30]
 10058ab:	mov    WORD PTR [rcx+0x100],ax
 10058b2:	mov    eax,DWORD PTR [rsp+0x20]
 10058b6:	inc    eax
 10058b8:	mov    DWORD PTR [rsp+0x20],eax
 10058bc:	jmp    0x100550d
 10058c1:	movsxd rax,DWORD PTR [rsp+0x20]
 10058c6:	lea    rdx,[rip+0xffffffffffffc023]        # 0x10018f0
 10058cd:	mov    rcx,QWORD PTR [rsp+0x68]
 10058d2:	mov    rcx,QWORD PTR [rcx+rax*8]
 10058d6:	call   QWORD PTR [rip+0xffffffffffffba44]        # 0x1001320
 10058dc:	test   eax,eax
 10058de:	jne    0x10058ed
 10058e0:	mov    DWORD PTR [rsp+0x2c],0x1
 10058e8:	jmp    0x100550d
 10058ed:	movsxd rax,DWORD PTR [rsp+0x20]
 10058f2:	lea    rdx,[rip+0xffffffffffffc007]        # 0x1001900
 10058f9:	mov    rcx,QWORD PTR [rsp+0x68]
 10058fe:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005902:	call   QWORD PTR [rip+0xffffffffffffba18]        # 0x1001320
 1005908:	test   eax,eax
 100590a:	jne    0x1005919
 100590c:	mov    DWORD PTR [rsp+0x38],0x1
 1005914:	jmp    0x100550d
 1005919:	movsxd rax,DWORD PTR [rsp+0x20]
 100591e:	lea    rdx,[rip+0xffffffffffffc023]        # 0x1001948
 1005925:	mov    rcx,QWORD PTR [rsp+0x68]
 100592a:	mov    rcx,QWORD PTR [rcx+rax*8]
 100592e:	call   QWORD PTR [rip+0xffffffffffffb9ec]        # 0x1001320
 1005934:	test   eax,eax
 1005936:	jne    0x1005945
 1005938:	mov    DWORD PTR [rsp+0x30],0x1
 1005940:	jmp    0x100550d
 1005945:	movsxd rax,DWORD PTR [rsp+0x20]
 100594a:	lea    rdx,[rip+0xffffffffffffbfdf]        # 0x1001930
 1005951:	mov    rcx,QWORD PTR [rsp+0x68]
 1005956:	mov    rcx,QWORD PTR [rcx+rax*8]
 100595a:	call   QWORD PTR [rip+0xffffffffffffb9c0]        # 0x1001320
 1005960:	test   eax,eax
 1005962:	jne    0x1005971
 1005964:	mov    DWORD PTR [rsp+0x3c],0x1
 100596c:	jmp    0x100550d
 1005971:	movsxd rax,DWORD PTR [rsp+0x20]
 1005976:	lea    rdx,[rip+0xffffffffffffbfeb]        # 0x1001968
 100597d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005982:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005986:	call   QWORD PTR [rip+0xffffffffffffb994]        # 0x1001320
 100598c:	test   eax,eax
 100598e:	jne    0x100599d
 1005990:	mov    DWORD PTR [rsp+0x2c],0x1
 1005998:	jmp    0x100550d
 100599d:	movsxd rax,DWORD PTR [rsp+0x20]
 10059a2:	lea    rdx,[rip+0xffffffffffffbfd7]        # 0x1001980
 10059a9:	mov    rcx,QWORD PTR [rsp+0x68]
 10059ae:	mov    rcx,QWORD PTR [rcx+rax*8]
 10059b2:	call   QWORD PTR [rip+0xffffffffffffb968]        # 0x1001320
 10059b8:	test   eax,eax
 10059ba:	jne    0x10059c9
 10059bc:	mov    DWORD PTR [rsp+0x30],0x1
 10059c4:	jmp    0x100550d
 10059c9:	movsxd rax,DWORD PTR [rsp+0x20]
 10059ce:	lea    rdx,[rip+0xffffffffffffbf43]        # 0x1001918
 10059d5:	mov    rcx,QWORD PTR [rsp+0x68]
 10059da:	mov    rcx,QWORD PTR [rcx+rax*8]
 10059de:	call   QWORD PTR [rip+0xffffffffffffb93c]        # 0x1001320
 10059e4:	test   eax,eax
 10059e6:	jne    0x10059f5
 10059e8:	mov    DWORD PTR [rsp+0x44],0x1
 10059f0:	jmp    0x100550d
 10059f5:	movsxd rax,DWORD PTR [rsp+0x20]
 10059fa:	lea    rdx,[rip+0xffffffffffffbf57]        # 0x1001958
 1005a01:	mov    rcx,QWORD PTR [rsp+0x68]
 1005a06:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005a0a:	call   QWORD PTR [rip+0xffffffffffffb910]        # 0x1001320
 1005a10:	test   eax,eax
 1005a12:	jne    0x1005a21
 1005a14:	mov    DWORD PTR [rsp+0x40],0x1
 1005a1c:	jmp    0x100550d
 1005a21:	movsxd rax,DWORD PTR [rsp+0x20]
 1005a26:	lea    rdx,[rip+0xffffffffffffc1cb]        # 0x1001bf8
 1005a2d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005a32:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005a36:	call   QWORD PTR [rip+0xffffffffffffb8e4]        # 0x1001320
 1005a3c:	test   eax,eax
 1005a3e:	jne    0x1005a4f
 1005a40:	mov    DWORD PTR [rip+0x1061e],0x1        # 0x1016068
 1005a4a:	jmp    0x100550d
 1005a4f:	movsxd rax,DWORD PTR [rsp+0x20]
 1005a54:	lea    rdx,[rip+0xffffffffffffbfa5]        # 0x1001a00
 1005a5b:	mov    rcx,QWORD PTR [rsp+0x68]
 1005a60:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005a64:	call   QWORD PTR [rip+0xffffffffffffb8b6]        # 0x1001320
 1005a6a:	test   eax,eax
 1005a6c:	jne    0x1005ab0
 1005a6e:	mov    eax,DWORD PTR [rsp+0x60]
 1005a72:	dec    eax
 1005a74:	cmp    DWORD PTR [rsp+0x20],eax
 1005a78:	jge    0x1005ab0
 1005a7a:	mov    DWORD PTR [rip+0x105e8],0x1        # 0x101606c
 1005a84:	mov    eax,DWORD PTR [rsp+0x20]
 1005a88:	inc    eax
 1005a8a:	cdqe   
 1005a8c:	mov    rcx,QWORD PTR [rsp+0x68]
 1005a91:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005a95:	call   QWORD PTR [rip+0xffffffffffffb6f5]        # 0x1001190
 1005a9b:	mov    DWORD PTR [rip+0x173ef],eax        # 0x101ce90
 1005aa1:	mov    eax,DWORD PTR [rsp+0x20]
 1005aa5:	inc    eax
 1005aa7:	mov    DWORD PTR [rsp+0x20],eax
 1005aab:	jmp    0x100550d
 1005ab0:	movsxd rax,DWORD PTR [rsp+0x20]
 1005ab5:	lea    rdx,[rip+0xffffffffffffbf04]        # 0x10019c0
 1005abc:	mov    rcx,QWORD PTR [rsp+0x68]
 1005ac1:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005ac5:	call   QWORD PTR [rip+0xffffffffffffb855]        # 0x1001320
 1005acb:	test   eax,eax
 1005acd:	jne    0x1005b3d
 1005acf:	mov    DWORD PTR [rsp+0x28],0x1
 1005ad7:	mov    eax,DWORD PTR [rsp+0x60]
 1005adb:	dec    eax
 1005add:	cmp    DWORD PTR [rsp+0x20],eax
 1005ae1:	jge    0x1005b38
 1005ae3:	mov    eax,DWORD PTR [rsp+0x20]
 1005ae7:	inc    eax
 1005ae9:	cdqe   
 1005aeb:	mov    rcx,QWORD PTR [rsp+0x68]
 1005af0:	mov    rax,QWORD PTR [rcx+rax*8]
 1005af4:	movzx  eax,WORD PTR [rax]
 1005af7:	cmp    eax,0x2d
 1005afa:	je     0x1005b38
 1005afc:	mov    eax,DWORD PTR [rsp+0x20]
 1005b00:	inc    eax
 1005b02:	cdqe   
 1005b04:	mov    r9d,0x10e
 1005b0a:	mov    rcx,QWORD PTR [rsp+0x68]
 1005b0f:	mov    r8,QWORD PTR [rcx+rax*8]
 1005b13:	mov    edx,0x400
 1005b18:	lea    rcx,[rip+0xfaf1]        # 0x1015610
 1005b1f:	call   QWORD PTR [rip+0xffffffffffffb81b]        # 0x1001340
 1005b25:	xor    eax,eax
 1005b27:	mov    WORD PTR [rip+0xfcfe],ax        # 0x101582c
 1005b2e:	mov    eax,DWORD PTR [rsp+0x20]
 1005b32:	inc    eax
 1005b34:	mov    DWORD PTR [rsp+0x20],eax
 1005b38:	jmp    0x100550d
 1005b3d:	movsxd rax,DWORD PTR [rsp+0x20]
 1005b42:	lea    rdx,[rip+0xffffffffffffbe87]        # 0x10019d0
 1005b49:	mov    rcx,QWORD PTR [rsp+0x68]
 1005b4e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005b52:	call   QWORD PTR [rip+0xffffffffffffb7c8]        # 0x1001320
 1005b58:	test   eax,eax
 1005b5a:	jne    0x1005bca
 1005b5c:	mov    DWORD PTR [rsp+0x24],0x1
 1005b64:	mov    eax,DWORD PTR [rsp+0x60]
 1005b68:	dec    eax
 1005b6a:	cmp    DWORD PTR [rsp+0x20],eax
 1005b6e:	jge    0x1005bc5
 1005b70:	mov    eax,DWORD PTR [rsp+0x20]
 1005b74:	inc    eax
 1005b76:	cdqe   
 1005b78:	mov    rcx,QWORD PTR [rsp+0x68]
 1005b7d:	mov    rax,QWORD PTR [rcx+rax*8]
 1005b81:	movzx  eax,WORD PTR [rax]
 1005b84:	cmp    eax,0x2d
 1005b87:	je     0x1005bc5
 1005b89:	mov    eax,DWORD PTR [rsp+0x20]
 1005b8d:	inc    eax
 1005b8f:	cdqe   
 1005b91:	mov    r9d,0x10e
 1005b97:	mov    rcx,QWORD PTR [rsp+0x68]
 1005b9c:	mov    r8,QWORD PTR [rcx+rax*8]
 1005ba0:	mov    edx,0x400
 1005ba5:	lea    rcx,[rip+0xfa64]        # 0x1015610
 1005bac:	call   QWORD PTR [rip+0xffffffffffffb78e]        # 0x1001340
 1005bb2:	xor    eax,eax
 1005bb4:	mov    WORD PTR [rip+0xfc71],ax        # 0x101582c
 1005bbb:	mov    eax,DWORD PTR [rsp+0x20]
 1005bbf:	inc    eax
 1005bc1:	mov    DWORD PTR [rsp+0x20],eax
 1005bc5:	jmp    0x100550d
 1005bca:	movsxd rax,DWORD PTR [rsp+0x20]
 1005bcf:	lea    rdx,[rip+0xffffffffffffc03a]        # 0x1001c10
 1005bd6:	mov    rcx,QWORD PTR [rsp+0x68]
 1005bdb:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005bdf:	call   QWORD PTR [rip+0xffffffffffffb73b]        # 0x1001320
 1005be5:	test   eax,eax
 1005be7:	jne    0x1005bf8
 1005be9:	mov    DWORD PTR [rip+0xfa15],0x1        # 0x1015608
 1005bf3:	jmp    0x100550d
 1005bf8:	movsxd rax,DWORD PTR [rsp+0x20]
 1005bfd:	lea    rdx,[rip+0xffffffffffffc034]        # 0x1001c38
 1005c04:	mov    rcx,QWORD PTR [rsp+0x68]
 1005c09:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005c0d:	call   QWORD PTR [rip+0xffffffffffffb70d]        # 0x1001320
 1005c13:	test   eax,eax
 1005c15:	jne    0x1005cb6
 1005c1b:	mov    eax,DWORD PTR [rsp+0x60]
 1005c1f:	dec    eax
 1005c21:	cmp    DWORD PTR [rsp+0x20],eax
 1005c25:	jge    0x1005cb6
 1005c2b:	mov    eax,DWORD PTR [rsp+0x20]
 1005c2f:	inc    eax
 1005c31:	cdqe   
 1005c33:	mov    rcx,QWORD PTR [rsp+0x68]
 1005c38:	mov    rax,QWORD PTR [rcx+rax*8]
 1005c3c:	movzx  eax,WORD PTR [rax]
 1005c3f:	cmp    eax,0x2d
 1005c42:	je     0x1005cb6
 1005c44:	mov    eax,DWORD PTR [rsp+0x20]
 1005c48:	inc    eax
 1005c4a:	cdqe   
 1005c4c:	lea    rdx,[rip+0xffffffffffffbffd]        # 0x1001c50
 1005c53:	mov    rcx,QWORD PTR [rsp+0x68]
 1005c58:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005c5c:	call   QWORD PTR [rip+0xffffffffffffb6be]        # 0x1001320
 1005c62:	test   eax,eax
 1005c64:	jne    0x1005c72
 1005c66:	mov    DWORD PTR [rip+0xf720],0x1        # 0x1015390
 1005c70:	jmp    0x1005ca7
 1005c72:	mov    eax,DWORD PTR [rsp+0x20]
 1005c76:	inc    eax
 1005c78:	cdqe   
 1005c7a:	lea    rdx,[rip+0xffffffffffffbfdf]        # 0x1001c60
 1005c81:	mov    rcx,QWORD PTR [rsp+0x68]
 1005c86:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005c8a:	call   QWORD PTR [rip+0xffffffffffffb690]        # 0x1001320
 1005c90:	test   eax,eax
 1005c92:	jne    0x1005ca0
 1005c94:	mov    DWORD PTR [rip+0xf6f2],0x2        # 0x1015390
 1005c9e:	jmp    0x1005ca7
 1005ca0:	xor    eax,eax
 1005ca2:	jmp    0x10067d2
 1005ca7:	mov    eax,DWORD PTR [rsp+0x20]
 1005cab:	inc    eax
 1005cad:	mov    DWORD PTR [rsp+0x20],eax
 1005cb1:	jmp    0x100550d
 1005cb6:	movsxd rax,DWORD PTR [rsp+0x20]
 1005cbb:	lea    rdx,[rip+0xffffffffffffbd26]        # 0x10019e8
 1005cc2:	mov    rcx,QWORD PTR [rsp+0x68]
 1005cc7:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005ccb:	call   QWORD PTR [rip+0xffffffffffffb64f]        # 0x1001320
 1005cd1:	test   eax,eax
 1005cd3:	jne    0x1005d11
 1005cd5:	mov    eax,DWORD PTR [rsp+0x60]
 1005cd9:	dec    eax
 1005cdb:	cmp    DWORD PTR [rsp+0x20],eax
 1005cdf:	jge    0x1005d11
 1005ce1:	mov    eax,DWORD PTR [rsp+0x20]
 1005ce5:	inc    eax
 1005ce7:	cdqe   
 1005ce9:	mov    rcx,QWORD PTR [rsp+0x68]
 1005cee:	mov    rax,QWORD PTR [rcx+rax*8]
 1005cf2:	movzx  eax,WORD PTR [rax]
 1005cf5:	cmp    eax,0x2d
 1005cf8:	je     0x1005d11
 1005cfa:	mov    DWORD PTR [rsp+0x34],0x1
 1005d02:	mov    eax,DWORD PTR [rsp+0x20]
 1005d06:	inc    eax
 1005d08:	mov    DWORD PTR [rsp+0x20],eax
 1005d0c:	jmp    0x100550d
 1005d11:	movsxd rax,DWORD PTR [rsp+0x20]
 1005d16:	lea    rdx,[rip+0xffffffffffffbd03]        # 0x1001a20
 1005d1d:	mov    rcx,QWORD PTR [rsp+0x68]
 1005d22:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005d26:	call   QWORD PTR [rip+0xffffffffffffb5f4]        # 0x1001320
 1005d2c:	test   eax,eax
 1005d2e:	jne    0x1005d4d
 1005d30:	mov    eax,DWORD PTR [rsp+0x60]
 1005d34:	sub    eax,0x2
 1005d37:	cmp    DWORD PTR [rsp+0x20],eax
 1005d3b:	jge    0x1005d4d
 1005d3d:	mov    eax,DWORD PTR [rsp+0x20]
 1005d41:	add    eax,0x2
 1005d44:	mov    DWORD PTR [rsp+0x20],eax
 1005d48:	jmp    0x100550d
 1005d4d:	movsxd rax,DWORD PTR [rsp+0x20]
 1005d52:	lea    rdx,[rip+0xffffffffffffbf17]        # 0x1001c70
 1005d59:	mov    rcx,QWORD PTR [rsp+0x68]
 1005d5e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005d62:	call   QWORD PTR [rip+0xffffffffffffb5b8]        # 0x1001320
 1005d68:	test   eax,eax
 1005d6a:	jne    0x1005dc9
 1005d6c:	mov    eax,DWORD PTR [rsp+0x60]
 1005d70:	dec    eax
 1005d72:	cmp    DWORD PTR [rsp+0x20],eax
 1005d76:	jge    0x1005dc9
 1005d78:	mov    eax,DWORD PTR [rsp+0x20]
 1005d7c:	inc    eax
 1005d7e:	cdqe   
 1005d80:	mov    rcx,QWORD PTR [rsp+0x68]
 1005d85:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005d89:	call   QWORD PTR [rip+0xffffffffffffb5a1]        # 0x1001330
 1005d8f:	cmp    rax,0x12c
 1005d95:	jae    0x1005dba
 1005d97:	mov    eax,DWORD PTR [rsp+0x20]
 1005d9b:	inc    eax
 1005d9d:	cdqe   
 1005d9f:	mov    rcx,QWORD PTR [rsp+0x68]
 1005da4:	mov    r8,QWORD PTR [rcx+rax*8]
 1005da8:	mov    edx,0x12c
 1005dad:	lea    rcx,[rip+0xf34c]        # 0x1015100
 1005db4:	call   QWORD PTR [rip+0xffffffffffffb56e]        # 0x1001328
 1005dba:	mov    eax,DWORD PTR [rsp+0x20]
 1005dbe:	inc    eax
 1005dc0:	mov    DWORD PTR [rsp+0x20],eax
 1005dc4:	jmp    0x100550d
 1005dc9:	movsxd rax,DWORD PTR [rsp+0x20]
 1005dce:	lea    rdx,[rip+0xffffffffffffbeab]        # 0x1001c80
 1005dd5:	mov    rcx,QWORD PTR [rsp+0x68]
 1005dda:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005dde:	call   QWORD PTR [rip+0xffffffffffffb53c]        # 0x1001320
 1005de4:	test   eax,eax
 1005de6:	jne    0x1005df7
 1005de8:	mov    DWORD PTR [rip+0x181d6],0x1        # 0x101dfc8
 1005df2:	jmp    0x100550d
 1005df7:	movsxd rax,DWORD PTR [rsp+0x20]
 1005dfc:	lea    rdx,[rip+0xffffffffffffbe95]        # 0x1001c98
 1005e03:	mov    rcx,QWORD PTR [rsp+0x68]
 1005e08:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005e0c:	call   QWORD PTR [rip+0xffffffffffffb50e]        # 0x1001320
 1005e12:	test   eax,eax
 1005e14:	jne    0x1005e22
 1005e16:	mov    BYTE PTR [rip+0x1841d],0x1        # 0x101e23a
 1005e1d:	jmp    0x100550d
 1005e22:	movsxd rax,DWORD PTR [rsp+0x20]
 1005e27:	lea    rdx,[rip+0xffffffffffffbe82]        # 0x1001cb0
 1005e2e:	mov    rcx,QWORD PTR [rsp+0x68]
 1005e33:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005e37:	call   QWORD PTR [rip+0xffffffffffffb4e3]        # 0x1001320
 1005e3d:	test   eax,eax
 1005e3f:	jne    0x1005e4d
 1005e41:	mov    BYTE PTR [rip+0x183f3],0x1        # 0x101e23b
 1005e48:	jmp    0x100550d
 1005e4d:	movsxd rax,DWORD PTR [rsp+0x20]
 1005e52:	lea    rdx,[rip+0xffffffffffffbe6f]        # 0x1001cc8
 1005e59:	mov    rcx,QWORD PTR [rsp+0x68]
 1005e5e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005e62:	call   QWORD PTR [rip+0xffffffffffffb4b8]        # 0x1001320
 1005e68:	test   eax,eax
 1005e6a:	jne    0x1005ed5
 1005e6c:	mov    eax,DWORD PTR [rsp+0x60]
 1005e70:	dec    eax
 1005e72:	cmp    DWORD PTR [rsp+0x20],eax
 1005e76:	jge    0x1005ed5
 1005e78:	mov    eax,DWORD PTR [rsp+0x20]
 1005e7c:	inc    eax
 1005e7e:	cdqe   
 1005e80:	mov    rcx,QWORD PTR [rsp+0x68]
 1005e85:	mov    rax,QWORD PTR [rcx+rax*8]
 1005e89:	movzx  eax,WORD PTR [rax]
 1005e8c:	cmp    eax,0x2d
 1005e8f:	je     0x1005ed5
 1005e91:	mov    eax,DWORD PTR [rsp+0x20]
 1005e95:	inc    eax
 1005e97:	cdqe   
 1005e99:	mov    r8d,0xa
 1005e9f:	xor    edx,edx
 1005ea1:	mov    rcx,QWORD PTR [rsp+0x68]
 1005ea6:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005eaa:	call   QWORD PTR [rip+0xffffffffffffb2d8]        # 0x1001188
 1005eb0:	mov    DWORD PTR [rip+0x18942],eax        # 0x101e7f8
 1005eb6:	cmp    DWORD PTR [rip+0x1893b],0x0        # 0x101e7f8
 1005ebd:	jbe    0x1005ed5
 1005ebf:	mov    BYTE PTR [rip+0x186f3],0x1        # 0x101e5b9
 1005ec6:	mov    eax,DWORD PTR [rsp+0x20]
 1005eca:	inc    eax
 1005ecc:	mov    DWORD PTR [rsp+0x20],eax
 1005ed0:	jmp    0x100550d
 1005ed5:	movsxd rax,DWORD PTR [rsp+0x20]
 1005eda:	lea    rdx,[rip+0xffffffffffffbe07]        # 0x1001ce8
 1005ee1:	mov    rcx,QWORD PTR [rsp+0x68]
 1005ee6:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005eea:	call   QWORD PTR [rip+0xffffffffffffb430]        # 0x1001320
 1005ef0:	test   eax,eax
 1005ef2:	jne    0x1005f5d
 1005ef4:	mov    eax,DWORD PTR [rsp+0x60]
 1005ef8:	dec    eax
 1005efa:	cmp    DWORD PTR [rsp+0x20],eax
 1005efe:	jge    0x1005f5d
 1005f00:	mov    eax,DWORD PTR [rsp+0x20]
 1005f04:	inc    eax
 1005f06:	cdqe   
 1005f08:	mov    rcx,QWORD PTR [rsp+0x68]
 1005f0d:	mov    rax,QWORD PTR [rcx+rax*8]
 1005f11:	movzx  eax,WORD PTR [rax]
 1005f14:	cmp    eax,0x2d
 1005f17:	je     0x1005f5d
 1005f19:	mov    eax,DWORD PTR [rsp+0x20]
 1005f1d:	inc    eax
 1005f1f:	cdqe   
 1005f21:	mov    r8d,0xa
 1005f27:	xor    edx,edx
 1005f29:	mov    rcx,QWORD PTR [rsp+0x68]
 1005f2e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005f32:	call   QWORD PTR [rip+0xffffffffffffb250]        # 0x1001188
 1005f38:	mov    DWORD PTR [rip+0x1879a],eax        # 0x101e6d8
 1005f3e:	cmp    DWORD PTR [rip+0x18793],0x0        # 0x101e6d8
 1005f45:	jbe    0x1005f5d
 1005f47:	mov    BYTE PTR [rip+0x1866a],0x1        # 0x101e5b8
 1005f4e:	mov    eax,DWORD PTR [rsp+0x20]
 1005f52:	inc    eax
 1005f54:	mov    DWORD PTR [rsp+0x20],eax
 1005f58:	jmp    0x100550d
 1005f5d:	movsxd rax,DWORD PTR [rsp+0x20]
 1005f62:	lea    rdx,[rip+0xffffffffffffbda7]        # 0x1001d10
 1005f69:	mov    rcx,QWORD PTR [rsp+0x68]
 1005f6e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005f72:	call   QWORD PTR [rip+0xffffffffffffb3a8]        # 0x1001320
 1005f78:	test   eax,eax
 1005f7a:	jne    0x1005f88
 1005f7c:	mov    BYTE PTR [rip+0x18637],0x1        # 0x101e5ba
 1005f83:	jmp    0x100550d
 1005f88:	movsxd rax,DWORD PTR [rsp+0x20]
 1005f8d:	lea    rdx,[rip+0xffffffffffffbdac]        # 0x1001d40
 1005f94:	mov    rcx,QWORD PTR [rsp+0x68]
 1005f99:	mov    rcx,QWORD PTR [rcx+rax*8]
 1005f9d:	call   QWORD PTR [rip+0xffffffffffffb37d]        # 0x1001320
 1005fa3:	test   eax,eax
 1005fa5:	jne    0x1005ffd
 1005fa7:	mov    eax,DWORD PTR [rsp+0x60]
 1005fab:	dec    eax
 1005fad:	cmp    DWORD PTR [rsp+0x20],eax
 1005fb1:	jge    0x1005ffd
 1005fb3:	mov    eax,DWORD PTR [rsp+0x20]
 1005fb7:	inc    eax
 1005fb9:	cdqe   
 1005fbb:	mov    rcx,QWORD PTR [rsp+0x68]
 1005fc0:	mov    rax,QWORD PTR [rcx+rax*8]
 1005fc4:	movzx  eax,WORD PTR [rax]
 1005fc7:	cmp    eax,0x2d
 1005fca:	je     0x1005ffd
 1005fcc:	mov    eax,DWORD PTR [rsp+0x20]
 1005fd0:	inc    eax
 1005fd2:	cdqe   
 1005fd4:	mov    rcx,QWORD PTR [rsp+0x68]
 1005fd9:	mov    r8,QWORD PTR [rcx+rax*8]
 1005fdd:	mov    edx,0x3c
 1005fe2:	lea    rcx,[rip+0x1a2e7]        # 0x10202d0
 1005fe9:	call   0x1003d20
 1005fee:	mov    eax,DWORD PTR [rsp+0x20]
 1005ff2:	inc    eax
 1005ff4:	mov    DWORD PTR [rsp+0x20],eax
 1005ff8:	jmp    0x100550d
 1005ffd:	movsxd rax,DWORD PTR [rsp+0x20]
 1006002:	lea    rdx,[rip+0xffffffffffffbd47]        # 0x1001d50
 1006009:	mov    rcx,QWORD PTR [rsp+0x68]
 100600e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006012:	call   QWORD PTR [rip+0xffffffffffffb308]        # 0x1001320
 1006018:	test   eax,eax
 100601a:	jne    0x100602b
 100601c:	mov    DWORD PTR [rip+0x17f9e],0x1        # 0x101dfc4
 1006026:	jmp    0x100550d
 100602b:	movsxd rax,DWORD PTR [rsp+0x20]
 1006030:	lea    rdx,[rip+0xffffffffffffbd31]        # 0x1001d68
 1006037:	mov    rcx,QWORD PTR [rsp+0x68]
 100603c:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006040:	call   QWORD PTR [rip+0xffffffffffffb2da]        # 0x1001320
 1006046:	test   eax,eax
 1006048:	jne    0x10060a5
 100604a:	mov    eax,DWORD PTR [rsp+0x60]
 100604e:	dec    eax
 1006050:	cmp    DWORD PTR [rsp+0x20],eax
 1006054:	jge    0x10060a5
 1006056:	mov    eax,DWORD PTR [rsp+0x20]
 100605a:	inc    eax
 100605c:	cdqe   
 100605e:	mov    rcx,QWORD PTR [rsp+0x68]
 1006063:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006067:	call   QWORD PTR [rip+0xffffffffffffb2c3]        # 0x1001330
 100606d:	cmp    rax,0x24
 1006071:	jne    0x1006096
 1006073:	mov    eax,DWORD PTR [rsp+0x20]
 1006077:	inc    eax
 1006079:	cdqe   
 100607b:	mov    rcx,QWORD PTR [rsp+0x68]
 1006080:	mov    r8,QWORD PTR [rcx+rax*8]
 1006084:	mov    edx,0x28
 1006089:	lea    rcx,[rip+0x18050]        # 0x101e0e0
 1006090:	call   QWORD PTR [rip+0xffffffffffffb292]        # 0x1001328
 1006096:	mov    eax,DWORD PTR [rsp+0x20]
 100609a:	inc    eax
 100609c:	mov    DWORD PTR [rsp+0x20],eax
 10060a0:	jmp    0x100550d
 10060a5:	movsxd rax,DWORD PTR [rsp+0x20]
 10060aa:	lea    rdx,[rip+0xffffffffffffbcc7]        # 0x1001d78
 10060b1:	mov    rcx,QWORD PTR [rsp+0x68]
 10060b6:	mov    rcx,QWORD PTR [rcx+rax*8]
 10060ba:	call   QWORD PTR [rip+0xffffffffffffb260]        # 0x1001320
 10060c0:	test   eax,eax
 10060c2:	jne    0x1006121
 10060c4:	mov    eax,DWORD PTR [rsp+0x60]
 10060c8:	dec    eax
 10060ca:	cmp    DWORD PTR [rsp+0x20],eax
 10060ce:	jge    0x1006121
 10060d0:	mov    eax,DWORD PTR [rsp+0x20]
 10060d4:	inc    eax
 10060d6:	cdqe   
 10060d8:	mov    rcx,QWORD PTR [rsp+0x68]
 10060dd:	mov    rcx,QWORD PTR [rcx+rax*8]
 10060e1:	call   QWORD PTR [rip+0xffffffffffffb249]        # 0x1001330
 10060e7:	cmp    rax,0x81
 10060ed:	jae    0x1006112
 10060ef:	mov    eax,DWORD PTR [rsp+0x20]
 10060f3:	inc    eax
 10060f5:	cdqe   
 10060f7:	mov    rcx,QWORD PTR [rsp+0x68]
 10060fc:	mov    r8,QWORD PTR [rcx+rax*8]
 1006100:	mov    edx,0x82
 1006105:	lea    rcx,[rip+0x18024]        # 0x101e130
 100610c:	call   QWORD PTR [rip+0xffffffffffffb216]        # 0x1001328
 1006112:	mov    eax,DWORD PTR [rsp+0x20]
 1006116:	inc    eax
 1006118:	mov    DWORD PTR [rsp+0x20],eax
 100611c:	jmp    0x100550d
 1006121:	movsxd rax,DWORD PTR [rsp+0x20]
 1006126:	lea    rdx,[rip+0xffffffffffffbc63]        # 0x1001d90
 100612d:	mov    rcx,QWORD PTR [rsp+0x68]
 1006132:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006136:	call   QWORD PTR [rip+0xffffffffffffb1e4]        # 0x1001320
 100613c:	test   eax,eax
 100613e:	jne    0x10061b4
 1006140:	mov    eax,DWORD PTR [rsp+0x60]
 1006144:	dec    eax
 1006146:	cmp    DWORD PTR [rsp+0x20],eax
 100614a:	jge    0x10061b4
 100614c:	mov    eax,DWORD PTR [rsp+0x20]
 1006150:	inc    eax
 1006152:	cdqe   
 1006154:	mov    rcx,QWORD PTR [rsp+0x68]
 1006159:	mov    rcx,QWORD PTR [rcx+rax*8]
 100615d:	call   QWORD PTR [rip+0xffffffffffffb1cd]        # 0x1001330
 1006163:	cmp    rax,0x64
 1006167:	jae    0x10061a5
 1006169:	mov    DWORD PTR [rip+0x17f61],0x1        # 0x101e0d4
 1006173:	mov    eax,DWORD PTR [rsp+0x20]
 1006177:	inc    eax
 1006179:	cdqe   
 100617b:	mov    r9d,0x5a
 1006181:	mov    rcx,QWORD PTR [rsp+0x68]
 1006186:	mov    r8,QWORD PTR [rcx+rax*8]
 100618a:	mov    edx,0x64
 100618f:	lea    rcx,[rip+0x1978a]        # 0x101f920
 1006196:	call   QWORD PTR [rip+0xffffffffffffb1a4]        # 0x1001340
 100619c:	xor    eax,eax
 100619e:	mov    WORD PTR [rip+0x1982f],ax        # 0x101f9d4
 10061a5:	mov    eax,DWORD PTR [rsp+0x20]
 10061a9:	inc    eax
 10061ab:	mov    DWORD PTR [rsp+0x20],eax
 10061af:	jmp    0x100550d
 10061b4:	movsxd rax,DWORD PTR [rsp+0x20]
 10061b9:	lea    rdx,[rip+0xffffffffffffbbe8]        # 0x1001da8
 10061c0:	mov    rcx,QWORD PTR [rsp+0x68]
 10061c5:	mov    rcx,QWORD PTR [rcx+rax*8]
 10061c9:	call   QWORD PTR [rip+0xffffffffffffb151]        # 0x1001320
 10061cf:	test   eax,eax
 10061d1:	jne    0x1006247
 10061d3:	mov    eax,DWORD PTR [rsp+0x60]
 10061d7:	dec    eax
 10061d9:	cmp    DWORD PTR [rsp+0x20],eax
 10061dd:	jge    0x1006247
 10061df:	mov    eax,DWORD PTR [rsp+0x20]
 10061e3:	inc    eax
 10061e5:	cdqe   
 10061e7:	mov    rcx,QWORD PTR [rsp+0x68]
 10061ec:	mov    rcx,QWORD PTR [rcx+rax*8]
 10061f0:	call   QWORD PTR [rip+0xffffffffffffb13a]        # 0x1001330
 10061f6:	cmp    rax,0x64
 10061fa:	jae    0x1006238
 10061fc:	mov    DWORD PTR [rip+0x17ed2],0x1        # 0x101e0d8
 1006206:	mov    eax,DWORD PTR [rsp+0x20]
 100620a:	inc    eax
 100620c:	cdqe   
 100620e:	mov    r9d,0x5a
 1006214:	mov    rcx,QWORD PTR [rsp+0x68]
 1006219:	mov    r8,QWORD PTR [rcx+rax*8]
 100621d:	mov    edx,0x64
 1006222:	lea    rcx,[rip+0x197c7]        # 0x101f9f0
 1006229:	call   QWORD PTR [rip+0xffffffffffffb111]        # 0x1001340
 100622f:	xor    eax,eax
 1006231:	mov    WORD PTR [rip+0x1986c],ax        # 0x101faa4
 1006238:	mov    eax,DWORD PTR [rsp+0x20]
 100623c:	inc    eax
 100623e:	mov    DWORD PTR [rsp+0x20],eax
 1006242:	jmp    0x100550d
 1006247:	movsxd rax,DWORD PTR [rsp+0x20]
 100624c:	lea    rdx,[rip+0xffffffffffffbb6d]        # 0x1001dc0
 1006253:	mov    rcx,QWORD PTR [rsp+0x68]
 1006258:	mov    rcx,QWORD PTR [rcx+rax*8]
 100625c:	call   QWORD PTR [rip+0xffffffffffffb0be]        # 0x1001320
 1006262:	test   eax,eax
 1006264:	jne    0x1006275
 1006266:	mov    DWORD PTR [rip+0x17d5c],0x1        # 0x101dfcc
 1006270:	jmp    0x100550d
 1006275:	movsxd rax,DWORD PTR [rsp+0x20]
 100627a:	lea    rdx,[rip+0xffffffffffffbb5f]        # 0x1001de0
 1006281:	mov    rcx,QWORD PTR [rsp+0x68]
 1006286:	mov    rcx,QWORD PTR [rcx+rax*8]
 100628a:	call   QWORD PTR [rip+0xffffffffffffb090]        # 0x1001320
 1006290:	test   eax,eax
 1006292:	jne    0x10063b3
 1006298:	mov    eax,DWORD PTR [rsp+0x60]
 100629c:	dec    eax
 100629e:	cmp    DWORD PTR [rsp+0x20],eax
 10062a2:	jge    0x10063b3
 10062a8:	mov    eax,DWORD PTR [rsp+0x20]
 10062ac:	inc    eax
 10062ae:	cdqe   
 10062b0:	mov    rcx,QWORD PTR [rsp+0x68]
 10062b5:	mov    rax,QWORD PTR [rcx+rax*8]
 10062b9:	movzx  eax,WORD PTR [rax]
 10062bc:	cmp    eax,0x2d
 10062bf:	je     0x10063b3
 10062c5:	mov    eax,DWORD PTR [rsp+0x60]
 10062c9:	dec    eax
 10062cb:	cmp    DWORD PTR [rsp+0x20],eax
 10062cf:	jge    0x1006379
 10062d5:	mov    eax,DWORD PTR [rsp+0x20]
 10062d9:	inc    eax
 10062db:	mov    DWORD PTR [rsp+0x20],eax
 10062df:	movsxd rax,DWORD PTR [rsp+0x20]
 10062e4:	mov    rcx,QWORD PTR [rsp+0x68]
 10062e9:	mov    rax,QWORD PTR [rcx+rax*8]
 10062ed:	movzx  eax,WORD PTR [rax]
 10062f0:	cmp    eax,0x2d
 10062f3:	je     0x1006379
 10062f9:	mov    rcx,QWORD PTR [rbp+0x40]
 10062fd:	call   QWORD PTR [rip+0xffffffffffffb02d]        # 0x1001330
 1006303:	mov    QWORD PTR [rsp+0x48],rax
 1006308:	movsxd rcx,DWORD PTR [rsp+0x20]
 100630d:	mov    rdx,QWORD PTR [rsp+0x68]
 1006312:	mov    rcx,QWORD PTR [rdx+rcx*8]
 1006316:	call   QWORD PTR [rip+0xffffffffffffb014]        # 0x1001330
 100631c:	mov    rcx,QWORD PTR [rsp+0x48]
 1006321:	add    rcx,rax
 1006324:	mov    rax,rcx
 1006327:	cmp    rax,0x7f
 100632b:	jbe    0x100632f
 100632d:	jmp    0x1006379
 100632f:	movsxd rax,DWORD PTR [rsp+0x20]
 1006334:	mov    rcx,QWORD PTR [rsp+0x68]
 1006339:	mov    r8,QWORD PTR [rcx+rax*8]
 100633d:	mov    edx,0x8c
 1006342:	mov    rcx,QWORD PTR [rbp+0x40]
 1006346:	call   QWORD PTR [rip+0xffffffffffffafc4]        # 0x1001310
 100634c:	mov    rcx,QWORD PTR [rbp+0x40]
 1006350:	call   QWORD PTR [rip+0xffffffffffffafda]        # 0x1001330
 1006356:	cmp    rax,0x7f
 100635a:	jbe    0x100635e
 100635c:	jmp    0x1006379
 100635e:	lea    r8,[rip+0xffffffffffffb587]        # 0x10018ec
 1006365:	mov    edx,0x8c
 100636a:	mov    rcx,QWORD PTR [rbp+0x40]
 100636e:	call   QWORD PTR [rip+0xffffffffffffaf9c]        # 0x1001310
 1006374:	jmp    0x10062c5
 1006379:	mov    rcx,QWORD PTR [rbp+0x40]
 100637d:	call   QWORD PTR [rip+0xffffffffffffafad]        # 0x1001330
 1006383:	xor    ecx,ecx
 1006385:	mov    rdx,QWORD PTR [rbp+0x40]
 1006389:	mov    WORD PTR [rdx+rax*2-0x2],cx
 100638e:	movsxd rax,DWORD PTR [rsp+0x20]
 1006393:	mov    rcx,QWORD PTR [rsp+0x68]
 1006398:	mov    rax,QWORD PTR [rcx+rax*8]
 100639c:	movzx  eax,WORD PTR [rax]
 100639f:	cmp    eax,0x2d
 10063a2:	jne    0x10063ae
 10063a4:	mov    eax,DWORD PTR [rsp+0x20]
 10063a8:	dec    eax
 10063aa:	mov    DWORD PTR [rsp+0x20],eax
 10063ae:	jmp    0x100550d
 10063b3:	movsxd rax,DWORD PTR [rsp+0x20]
 10063b8:	lea    rdx,[rip+0xffffffffffffb5d9]        # 0x1001998
 10063bf:	mov    rcx,QWORD PTR [rsp+0x68]
 10063c4:	mov    rcx,QWORD PTR [rcx+rax*8]
 10063c8:	call   QWORD PTR [rip+0xffffffffffffaf52]        # 0x1001320
 10063ce:	test   eax,eax
 10063d0:	je     0x10063f1
 10063d2:	movsxd rax,DWORD PTR [rsp+0x20]
 10063d7:	lea    rdx,[rip+0xffffffffffffb5ca]        # 0x10019a8
 10063de:	mov    rcx,QWORD PTR [rsp+0x68]
 10063e3:	mov    rcx,QWORD PTR [rcx+rax*8]
 10063e7:	call   QWORD PTR [rip+0xffffffffffffaf33]        # 0x1001320
 10063ed:	test   eax,eax
 10063ef:	jne    0x100640c
 10063f1:	mov    eax,DWORD PTR [rsp+0x60]
 10063f5:	dec    eax
 10063f7:	cmp    DWORD PTR [rsp+0x20],eax
 10063fb:	jge    0x100640c
 10063fd:	mov    eax,DWORD PTR [rsp+0x20]
 1006401:	inc    eax
 1006403:	mov    DWORD PTR [rsp+0x20],eax
 1006407:	jmp    0x100550d
 100640c:	movsxd rax,DWORD PTR [rsp+0x20]
 1006411:	lea    rdx,[rip+0xffffffffffffb9d0]        # 0x1001de8
 1006418:	mov    rcx,QWORD PTR [rsp+0x68]
 100641d:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006421:	call   QWORD PTR [rip+0xffffffffffffaef9]        # 0x1001320
 1006427:	test   eax,eax
 1006429:	jne    0x1006497
 100642b:	mov    eax,DWORD PTR [rsp+0x60]
 100642f:	dec    eax
 1006431:	cmp    DWORD PTR [rsp+0x20],eax
 1006435:	jge    0x1006497
 1006437:	mov    eax,DWORD PTR [rsp+0x20]
 100643b:	inc    eax
 100643d:	cdqe   
 100643f:	mov    rcx,QWORD PTR [rsp+0x68]
 1006444:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006448:	call   QWORD PTR [rip+0xffffffffffffaee2]        # 0x1001330
 100644e:	cmp    rax,0x24
 1006452:	je     0x100645b
 1006454:	xor    eax,eax
 1006456:	jmp    0x10067d2
 100645b:	mov    DWORD PTR [rip+0x17c77],0x1        # 0x101e0dc
 1006465:	mov    eax,DWORD PTR [rsp+0x20]
 1006469:	inc    eax
 100646b:	cdqe   
 100646d:	mov    rcx,QWORD PTR [rsp+0x68]
 1006472:	mov    r8,QWORD PTR [rcx+rax*8]
 1006476:	mov    edx,0x28
 100647b:	lea    rcx,[rip+0x1963e]        # 0x101fac0
 1006482:	call   QWORD PTR [rip+0xffffffffffffaea0]        # 0x1001328
 1006488:	mov    eax,DWORD PTR [rsp+0x20]
 100648c:	inc    eax
 100648e:	mov    DWORD PTR [rsp+0x20],eax
 1006492:	jmp    0x100550d
 1006497:	movsxd rax,DWORD PTR [rsp+0x20]
 100649c:	lea    rdx,[rip+0xffffffffffffb955]        # 0x1001df8
 10064a3:	mov    rcx,QWORD PTR [rsp+0x68]
 10064a8:	mov    rcx,QWORD PTR [rcx+rax*8]
 10064ac:	call   QWORD PTR [rip+0xffffffffffffae6e]        # 0x1001320
 10064b2:	test   eax,eax
 10064b4:	jne    0x100650d
 10064b6:	mov    eax,DWORD PTR [rsp+0x60]
 10064ba:	dec    eax
 10064bc:	cmp    DWORD PTR [rsp+0x20],eax
 10064c0:	jge    0x100650d
 10064c2:	mov    DWORD PTR [rip+0x17c10],0x1        # 0x101e0dc
 10064cc:	mov    eax,DWORD PTR [rsp+0x20]
 10064d0:	inc    eax
 10064d2:	cdqe   
 10064d4:	mov    r9d,0x80
 10064da:	mov    rcx,QWORD PTR [rsp+0x68]
 10064df:	mov    r8,QWORD PTR [rcx+rax*8]
 10064e3:	mov    edx,0xc8
 10064e8:	lea    rcx,[rip+0x19671]        # 0x101fb60
 10064ef:	call   QWORD PTR [rip+0xffffffffffffae4b]        # 0x1001340
 10064f5:	xor    eax,eax
 10064f7:	mov    WORD PTR [rip+0x19762],ax        # 0x101fc60
 10064fe:	mov    eax,DWORD PTR [rsp+0x20]
 1006502:	inc    eax
 1006504:	mov    DWORD PTR [rsp+0x20],eax
 1006508:	jmp    0x100550d
 100650d:	movsxd rax,DWORD PTR [rsp+0x20]
 1006512:	lea    rdx,[rip+0xffffffffffffb8ff]        # 0x1001e18
 1006519:	mov    rcx,QWORD PTR [rsp+0x68]
 100651e:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006522:	call   QWORD PTR [rip+0xffffffffffffadf8]        # 0x1001320
 1006528:	test   eax,eax
 100652a:	jne    0x1006598
 100652c:	mov    eax,DWORD PTR [rsp+0x60]
 1006530:	dec    eax
 1006532:	cmp    DWORD PTR [rsp+0x20],eax
 1006536:	jge    0x1006598
 1006538:	mov    eax,DWORD PTR [rsp+0x20]
 100653c:	inc    eax
 100653e:	cdqe   
 1006540:	mov    rcx,QWORD PTR [rsp+0x68]
 1006545:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006549:	call   QWORD PTR [rip+0xffffffffffffade1]        # 0x1001330
 100654f:	cmp    rax,0x24
 1006553:	je     0x100655c
 1006555:	xor    eax,eax
 1006557:	jmp    0x10067d2
 100655c:	mov    DWORD PTR [rip+0x17cce],0x1        # 0x101e234
 1006566:	mov    eax,DWORD PTR [rsp+0x20]
 100656a:	inc    eax
 100656c:	cdqe   
 100656e:	mov    rcx,QWORD PTR [rsp+0x68]
 1006573:	mov    r8,QWORD PTR [rcx+rax*8]
 1006577:	mov    edx,0x28
 100657c:	lea    rcx,[rip+0x1958d]        # 0x101fb10
 1006583:	call   QWORD PTR [rip+0xffffffffffffad9f]        # 0x1001328
 1006589:	mov    eax,DWORD PTR [rsp+0x20]
 100658d:	inc    eax
 100658f:	mov    DWORD PTR [rsp+0x20],eax
 1006593:	jmp    0x100550d
 1006598:	movsxd rax,DWORD PTR [rsp+0x20]
 100659d:	lea    rdx,[rip+0xffffffffffffb884]        # 0x1001e28
 10065a4:	mov    rcx,QWORD PTR [rsp+0x68]
 10065a9:	mov    rcx,QWORD PTR [rcx+rax*8]
 10065ad:	call   QWORD PTR [rip+0xffffffffffffad6d]        # 0x1001320
 10065b3:	test   eax,eax
 10065b5:	jne    0x100660e
 10065b7:	mov    eax,DWORD PTR [rsp+0x60]
 10065bb:	dec    eax
 10065bd:	cmp    DWORD PTR [rsp+0x20],eax
 10065c1:	jge    0x100660e
 10065c3:	mov    DWORD PTR [rip+0x17c67],0x1        # 0x101e234
 10065cd:	mov    eax,DWORD PTR [rsp+0x20]
 10065d1:	inc    eax
 10065d3:	cdqe   
 10065d5:	mov    r9d,0x80
 10065db:	mov    rcx,QWORD PTR [rsp+0x68]
 10065e0:	mov    r8,QWORD PTR [rcx+rax*8]
 10065e4:	mov    edx,0xc8
 10065e9:	lea    rcx,[rip+0x19700]        # 0x101fcf0
 10065f0:	call   QWORD PTR [rip+0xffffffffffffad4a]        # 0x1001340
 10065f6:	xor    eax,eax
 10065f8:	mov    WORD PTR [rip+0x197f1],ax        # 0x101fdf0
 10065ff:	mov    eax,DWORD PTR [rsp+0x20]
 1006603:	inc    eax
 1006605:	mov    DWORD PTR [rsp+0x20],eax
 1006609:	jmp    0x100550d
 100660e:	movsxd rax,DWORD PTR [rsp+0x20]
 1006613:	lea    rdx,[rip+0xffffffffffffb82e]        # 0x1001e48
 100661a:	mov    rcx,QWORD PTR [rsp+0x68]
 100661f:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006623:	call   QWORD PTR [rip+0xffffffffffffacf7]        # 0x1001320
 1006629:	test   eax,eax
 100662b:	jne    0x1006672
 100662d:	mov    eax,DWORD PTR [rsp+0x60]
 1006631:	dec    eax
 1006633:	cmp    DWORD PTR [rsp+0x20],eax
 1006637:	jge    0x1006672
 1006639:	mov    BYTE PTR [rip+0x17bf8],0x1        # 0x101e238
 1006640:	mov    eax,DWORD PTR [rsp+0x20]
 1006644:	inc    eax
 1006646:	cdqe   
 1006648:	mov    rcx,QWORD PTR [rsp+0x68]
 100664d:	mov    r8,QWORD PTR [rcx+rax*8]
 1006651:	mov    edx,0x28
 1006656:	lea    rcx,[rip+0x19c23]        # 0x1020280
 100665d:	call   QWORD PTR [rip+0xffffffffffffacc5]        # 0x1001328
 1006663:	mov    eax,DWORD PTR [rsp+0x20]
 1006667:	inc    eax
 1006669:	mov    DWORD PTR [rsp+0x20],eax
 100666d:	jmp    0x100550d
 1006672:	movsxd rax,DWORD PTR [rsp+0x20]
 1006677:	lea    rdx,[rip+0xffffffffffffb7ea]        # 0x1001e68
 100667e:	mov    rcx,QWORD PTR [rsp+0x68]
 1006683:	mov    rcx,QWORD PTR [rcx+rax*8]
 1006687:	call   QWORD PTR [rip+0xffffffffffffac93]        # 0x1001320
 100668d:	test   eax,eax
 100668f:	jne    0x10066d6
 1006691:	mov    eax,DWORD PTR [rsp+0x60]
 1006695:	dec    eax
 1006697:	cmp    DWORD PTR [rsp+0x20],eax
 100669b:	jge    0x10066d6
 100669d:	mov    BYTE PTR [rip+0x17b95],0x1        # 0x101e239
 10066a4:	mov    eax,DWORD PTR [rsp+0x20]
 10066a8:	inc    eax
 10066aa:	cdqe   
 10066ac:	mov    rcx,QWORD PTR [rsp+0x68]
 10066b1:	mov    r8,QWORD PTR [rcx+rax*8]
 10066b5:	mov    edx,0x28
 10066ba:	lea    rcx,[rip+0x19bbf]        # 0x1020280
 10066c1:	call   QWORD PTR [rip+0xffffffffffffac61]        # 0x1001328
 10066c7:	mov    eax,DWORD PTR [rsp+0x20]
 10066cb:	inc    eax
 10066cd:	mov    DWORD PTR [rsp+0x20],eax
 10066d1:	jmp    0x100550d
 10066d6:	xor    eax,eax
 10066d8:	jmp    0x10067d2
 10066dd:	jmp    0x100550d
 10066e2:	cmp    DWORD PTR [rsp+0x30],0x0
 10066e7:	je     0x10066f4
 10066e9:	cmp    DWORD PTR [rsp+0x3c],0x0
 10066ee:	jne    0x10067a3
 10066f4:	cmp    DWORD PTR [rsp+0x2c],0x0
 10066f9:	je     0x1006706
 10066fb:	cmp    DWORD PTR [rsp+0x38],0x0
 1006700:	jne    0x10067a3
 1006706:	cmp    DWORD PTR [rsp+0x28],0x0
 100670b:	je     0x1006718
 100670d:	cmp    DWORD PTR [rsp+0x24],0x0
 1006712:	jne    0x10067a3
 1006718:	cmp    DWORD PTR [rsp+0x28],0x0
 100671d:	jne    0x1006726
 100671f:	cmp    DWORD PTR [rsp+0x24],0x0
 1006724:	je     0x1006736
 1006726:	cmp    DWORD PTR [rip+0xec63],0x2        # 0x1015390
 100672d:	jne    0x1006736
 100672f:	cmp    DWORD PTR [rsp+0x34],0x0
 1006734:	jne    0x10067a3
 1006736:	cmp    DWORD PTR [rsp+0x34],0x0
 100673b:	je     0x100674b
 100673d:	cmp    DWORD PTR [rsp+0x28],0x0
 1006742:	jne    0x100674b
 1006744:	cmp    DWORD PTR [rsp+0x24],0x0
 1006749:	je     0x10067a3
 100674b:	cmp    DWORD PTR [rsp+0x28],0x0
 1006750:	jne    0x1006759
 1006752:	cmp    DWORD PTR [rsp+0x24],0x0
 1006757:	je     0x1006762
 1006759:	cmp    DWORD PTR [rip+0xec30],0x0        # 0x1015390
 1006760:	je     0x10067a3
 1006762:	cmp    DWORD PTR [rip+0xee9f],0x0        # 0x1015608
 1006769:	je     0x10067a7
 100676b:	cmp    DWORD PTR [rsp+0x28],0x0
 1006770:	jne    0x1006779
 1006772:	cmp    DWORD PTR [rsp+0x24],0x0
 1006777:	je     0x10067a3
 1006779:	cmp    DWORD PTR [rsp+0x2c],0x0
 100677e:	jne    0x10067a7
 1006780:	cmp    DWORD PTR [rsp+0x38],0x0
 1006785:	jne    0x10067a7
 1006787:	cmp    DWORD PTR [rsp+0x30],0x0
 100678c:	jne    0x10067a7
 100678e:	cmp    DWORD PTR [rsp+0x3c],0x0
 1006793:	jne    0x10067a7
 1006795:	cmp    DWORD PTR [rsp+0x40],0x0
 100679a:	jne    0x10067a7
 100679c:	cmp    DWORD PTR [rsp+0x44],0x0
 10067a1:	jne    0x10067a7
 10067a3:	xor    eax,eax
 10067a5:	jmp    0x10067d2
 10067a7:	cmp    DWORD PTR [rsp+0x28],0x0
 10067ac:	jne    0x10067b5
 10067ae:	cmp    DWORD PTR [rsp+0x24],0x0
 10067b3:	je     0x10067cd
 10067b5:	cmp    DWORD PTR [rip+0x1780c],0x0        # 0x101dfc8
 10067bc:	jne    0x10067cd
 10067be:	movzx  eax,WORD PTR [rip+0xee4b]        # 0x1015610
 10067c5:	test   eax,eax
 10067c7:	jne    0x10067cd
 10067c9:	xor    eax,eax
 10067cb:	jmp    0x10067d2
 10067cd:	mov    eax,0x1
 10067d2:	add    rsp,0x50
 10067d6:	pop    rbp
 10067d7:	ret    
 10067d8:	int3   
 10067d9:	int3   
 10067da:	int3   
 10067db:	int3   
 10067dc:	int3   
 10067dd:	int3   
 10067de:	int3   
 10067df:	int3   
 10067e0:	mov    QWORD PTR [rsp+0x10],rdx
 10067e5:	mov    QWORD PTR [rsp+0x8],rcx
 10067ea:	push   rbp
 10067eb:	mov    rbp,rsp
 10067ee:	push   rdi
 10067ef:	mov    eax,0x26a8
 10067f4:	call   0x1011fe0
 10067f9:	sub    rsp,rax
 10067fc:	mov    QWORD PTR [rsp+0x2588],0xfffffffffffffffe
 1006808:	mov    rax,QWORD PTR [rip+0xeb51]        # 0x1015360
 100680f:	xor    rax,rsp
 1006812:	mov    QWORD PTR [rbp-0x20],rax
 1006816:	xor    edx,edx
 1006818:	lea    rcx,[rsp+0x78]
 100681d:	call   0x1010ff0
 1006822:	nop
 1006823:	xor    edx,edx
 1006825:	lea    rcx,[rsp+0x80]
 100682d:	call   0x10110a0
 1006832:	nop
 1006833:	mov    DWORD PTR [rsp+0x50],0x0
 100683b:	movzx  eax,WORD PTR [rip+0xffffffffffffaf7e]        # 0x10017c0
 1006842:	mov    WORD PTR [rsp+0xd20],ax
 100684a:	lea    rax,[rsp+0xd22]
 1006852:	mov    rdi,rax
 1006855:	xor    eax,eax
 1006857:	mov    ecx,0x7fe
 100685c:	rep stos BYTE PTR es:[rdi],al
 100685e:	movzx  eax,WORD PTR [rip+0xffffffffffffaf5b]        # 0x10017c0
 1006865:	mov    WORD PTR [rsp+0x90],ax
 100686d:	lea    rax,[rsp+0x92]
 1006875:	mov    rdi,rax
 1006878:	xor    eax,eax
 100687a:	mov    ecx,0xfe
 100687f:	rep stos BYTE PTR es:[rdi],al
 1006881:	movzx  eax,WORD PTR [rip+0xffffffffffffaf38]        # 0x10017c0
 1006888:	mov    WORD PTR [rsp+0x920],ax
 1006890:	lea    rax,[rsp+0x922]
 1006898:	mov    rdi,rax
 100689b:	xor    eax,eax
 100689d:	mov    ecx,0x3fe
 10068a2:	rep stos BYTE PTR es:[rdi],al
 10068a4:	movzx  eax,WORD PTR [rip+0xffffffffffffaf15]        # 0x10017c0
 10068ab:	mov    WORD PTR [rsp+0x260],ax
 10068b3:	lea    rax,[rsp+0x262]
 10068bb:	mov    rdi,rax
 10068be:	xor    eax,eax
 10068c0:	mov    ecx,0x1fe
 10068c5:	rep stos BYTE PTR es:[rdi],al
 10068c7:	movzx  eax,WORD PTR [rip+0xffffffffffffaef2]        # 0x10017c0
 10068ce:	mov    WORD PTR [rsp+0x2590],ax
 10068d6:	lea    rax,[rsp+0x2592]
 10068de:	mov    rdi,rax
 10068e1:	xor    eax,eax
 10068e3:	mov    ecx,0xfe
 10068e8:	rep stos BYTE PTR es:[rdi],al
 10068ea:	mov    QWORD PTR [rsp+0x58],0x0
 10068f3:	mov    QWORD PTR [rsp+0x60],0x0
 10068fc:	mov    QWORD PTR [rsp+0x70],0x0
 1006905:	cmp    QWORD PTR [rbp+0x10],0x0
 100690a:	je     0x1006976
 100690c:	cmp    QWORD PTR [rbp+0x10],0x0
 1006911:	je     0x100691e
 1006913:	mov    rax,QWORD PTR [rbp+0x10]
 1006917:	movzx  eax,WORD PTR [rax]
 100691a:	test   eax,eax
 100691c:	je     0x1006976
 100691e:	lea    rcx,[rip+0x199fb]        # 0x1020320
 1006925:	call   0x100f0e0
 100692a:	mov    QWORD PTR [rsp+0x2538],rax
 1006932:	lea    rcx,[rsp+0x80]
 100693a:	call   0x1011110
 100693f:	mov    rcx,QWORD PTR [rsp+0x2538]
 1006947:	mov    rcx,QWORD PTR [rcx]
 100694a:	mov    QWORD PTR [rsp+0x2578],rcx
 1006952:	mov    rdx,rax
 1006955:	mov    rcx,QWORD PTR [rsp+0x2538]
 100695d:	mov    rax,QWORD PTR [rsp+0x2578]
 1006965:	call   QWORD PTR [rax+0x1a8]
 100696b:	mov    ecx,eax
 100696d:	call   0x1006e20
 1006972:	test   eax,eax
 1006974:	je     0x10069a5
 1006976:	mov    eax,DWORD PTR [rsp+0x50]
 100697a:	mov    DWORD PTR [rsp+0x2524],eax
 1006981:	lea    rcx,[rsp+0x80]
 1006989:	call   0x10110d0
 100698e:	nop
 100698f:	lea    rcx,[rsp+0x78]
 1006994:	call   0x1011020
 1006999:	mov    eax,DWORD PTR [rsp+0x2524]
 10069a0:	jmp    0x1006df6
 10069a5:	mov    r8d,0x1000
 10069ab:	lea    rdx,[rip+0x144de]        # 0x101ae90
 10069b2:	mov    ecx,0x25
 10069b7:	call   0x1008800
 10069bc:	mov    r9,QWORD PTR [rbp+0x10]
 10069c0:	lea    r8,[rip+0x144c9]        # 0x101ae90
 10069c7:	mov    edx,0x2710
 10069cc:	lea    rcx,[rip+0xf69d]        # 0x1016070
 10069d3:	call   QWORD PTR [rip+0xffffffffffffa81f]        # 0x10011f8
 10069d9:	lea    rcx,[rip+0xf690]        # 0x1016070
 10069e0:	call   0x1008f00
 10069e5:	lea    rcx,[rip+0x19934]        # 0x1020320
 10069ec:	call   0x100f0e0
 10069f1:	mov    QWORD PTR [rsp+0x2570],rax
 10069f9:	mov    rax,QWORD PTR [rsp+0x2570]
 1006a01:	mov    rax,QWORD PTR [rax]
 1006a04:	lea    rdx,[rsp+0x60]
 1006a09:	mov    rcx,QWORD PTR [rsp+0x2570]
 1006a11:	call   QWORD PTR [rax+0x118]
 1006a17:	mov    ecx,eax
 1006a19:	call   0x1006e20
 1006a1e:	lea    rcx,[rip+0x198fb]        # 0x1020320
 1006a25:	call   0x100f0e0
 1006a2a:	mov    QWORD PTR [rsp+0x2548],rax
 1006a32:	mov    rax,QWORD PTR [rsp+0x2548]
 1006a3a:	mov    rax,QWORD PTR [rax]
 1006a3d:	lea    rdx,[rsp+0x70]
 1006a42:	mov    rcx,QWORD PTR [rsp+0x2548]
 1006a4a:	call   QWORD PTR [rax+0x3b8]
 1006a50:	mov    ecx,eax
 1006a52:	call   0x1006e20
 1006a57:	mov    r8d,0x80
 1006a5d:	lea    rdx,[rsp+0x2590]
 1006a65:	mov    ecx,0x2e
 1006a6a:	call   0x1008800
 1006a6f:	cmp    QWORD PTR [rsp+0x60],0x0
 1006a75:	je     0x1006a86
 1006a77:	mov    rax,QWORD PTR [rsp+0x60]
 1006a7c:	mov    QWORD PTR [rsp+0x2558],rax
 1006a84:	jmp    0x1006abd
 1006a86:	cmp    QWORD PTR [rsp+0x70],0x0
 1006a8c:	je     0x1006a9d
 1006a8e:	mov    rax,QWORD PTR [rsp+0x70]
 1006a93:	mov    QWORD PTR [rsp+0x2568],rax
 1006a9b:	jmp    0x1006aad
 1006a9d:	lea    rax,[rsp+0x2590]
 1006aa5:	mov    QWORD PTR [rsp+0x2568],rax
 1006aad:	mov    rax,QWORD PTR [rsp+0x2568]
 1006ab5:	mov    QWORD PTR [rsp+0x2558],rax
 1006abd:	mov    r8,QWORD PTR [rsp+0x2558]
 1006ac5:	mov    edx,0x80
 1006aca:	lea    rcx,[rsp+0x90]
 1006ad2:	call   QWORD PTR [rip+0xffffffffffffa850]        # 0x1001328
 1006ad8:	lea    rcx,[rsp+0x80]
 1006ae0:	call   0x1011130
 1006ae5:	mov    QWORD PTR [rsp+0x2530],rax
 1006aed:	lea    rcx,[rsp+0x78]
 1006af2:	call   0x1011060
 1006af7:	mov    rcx,QWORD PTR [rsp+0x2530]
 1006aff:	mov    rcx,QWORD PTR [rcx]
 1006b02:	mov    QWORD PTR [rsp+0x2580],rcx
 1006b0a:	mov    r8,rax
 1006b0d:	mov    rdx,QWORD PTR [rbp+0x10]
 1006b11:	mov    rcx,QWORD PTR [rsp+0x2530]
 1006b19:	mov    rax,QWORD PTR [rsp+0x2580]
 1006b21:	call   QWORD PTR [rax+0xc8]
 1006b27:	mov    ecx,eax
 1006b29:	call   0x1006e20
 1006b2e:	test   eax,eax
 1006b30:	jne    0x1006d93
 1006b36:	lea    rcx,[rsp+0x78]
 1006b3b:	call   0x1011080
 1006b40:	mov    QWORD PTR [rsp+0x2540],rax
 1006b48:	mov    rax,QWORD PTR [rsp+0x2540]
 1006b50:	mov    rax,QWORD PTR [rax]
 1006b53:	lea    rdx,[rsp+0x58]
 1006b58:	mov    rcx,QWORD PTR [rsp+0x2540]
 1006b60:	call   QWORD PTR [rax+0x68]
 1006b63:	mov    ecx,eax
 1006b65:	call   0x1006e20
 1006b6a:	test   eax,eax
 1006b6c:	jne    0x1006d93
 1006b72:	cmp    QWORD PTR [rsp+0x58],0x0
 1006b78:	je     0x1006d93
 1006b7e:	cmp    DWORD PTR [rip+0x1630f],0x0        # 0x101ce94
 1006b85:	je     0x1006b9c
 1006b87:	mov    rcx,QWORD PTR [rip+0xe80a]        # 0x1015398
 1006b8e:	call   QWORD PTR [rip+0xffffffffffffa62c]        # 0x10011c0
 1006b94:	test   eax,eax
 1006b96:	jne    0x1006d93
 1006b9c:	movzx  eax,WORD PTR [rip+0x1742d]        # 0x101dfd0
 1006ba3:	test   eax,eax
 1006ba5:	je     0x1006bb1
 1006ba7:	mov    DWORD PTR [rsp+0x68],0x32
 1006baf:	jmp    0x1006bb9
 1006bb1:	mov    DWORD PTR [rsp+0x68],0x52
 1006bb9:	mov    r8d,0x200
 1006bbf:	lea    rdx,[rsp+0x920]
 1006bc7:	mov    ecx,DWORD PTR [rsp+0x68]
 1006bcb:	call   0x1008800
 1006bd0:	mov    r8d,0x100
 1006bd6:	lea    rdx,[rsp+0x260]
 1006bde:	mov    ecx,0x33
 1006be3:	call   0x1008800
 1006be8:	mov    r8d,0x400
 1006bee:	lea    rdx,[rsp+0x1d20]
 1006bf6:	mov    rcx,QWORD PTR [rsp+0x58]
 1006bfb:	call   0x1008be0
 1006c00:	test   eax,eax
 1006c02:	je     0x1006c7d
 1006c04:	mov    r8d,0x64
 1006c0a:	lea    rdx,[rsp+0x190]
 1006c12:	lea    rcx,[rsp+0x90]
 1006c1a:	call   0x1008be0
 1006c1f:	test   eax,eax
 1006c21:	je     0x1006c7d
 1006c23:	mov    r8d,0x12c
 1006c29:	lea    rdx,[rsp+0x460]
 1006c31:	lea    rcx,[rip+0x17398]        # 0x101dfd0
 1006c38:	call   0x1008be0
 1006c3d:	test   eax,eax
 1006c3f:	je     0x1006c7d
 1006c41:	mov    r8d,0x12c
 1006c47:	lea    rdx,[rsp+0x6c0]
 1006c4f:	lea    rcx,[rip+0x174da]        # 0x101e130
 1006c56:	call   0x1008be0
 1006c5b:	test   eax,eax
 1006c5d:	je     0x1006c7d
 1006c5f:	mov    r8d,0x400
 1006c65:	lea    rdx,[rsp+0x1520]
 1006c6d:	lea    rcx,[rip+0xe73c]        # 0x10153b0
 1006c74:	call   0x1008be0
 1006c79:	test   eax,eax
 1006c7b:	jne    0x1006cac
 1006c7d:	mov    DWORD PTR [rsp+0x2528],0x0
 1006c88:	lea    rcx,[rsp+0x80]
 1006c90:	call   0x10110d0
 1006c95:	nop
 1006c96:	lea    rcx,[rsp+0x78]
 1006c9b:	call   0x1011020
 1006ca0:	mov    eax,DWORD PTR [rsp+0x2528]
 1006ca7:	jmp    0x1006df6
 1006cac:	movzx  eax,WORD PTR [rip+0x1731d]        # 0x101dfd0
 1006cb3:	test   eax,eax
 1006cb5:	je     0x1006cc9
 1006cb7:	lea    rax,[rsp+0x460]
 1006cbf:	mov    QWORD PTR [rsp+0x2550],rax
 1006cc7:	jmp    0x1006cd9
 1006cc9:	lea    rax,[rsp+0x6c0]
 1006cd1:	mov    QWORD PTR [rsp+0x2550],rax
 1006cd9:	lea    rax,[rsp+0x1520]
 1006ce1:	mov    QWORD PTR [rsp+0x48],rax
 1006ce6:	mov    rax,QWORD PTR [rbp+0x18]
 1006cea:	mov    QWORD PTR [rsp+0x40],rax
 1006cef:	mov    rax,QWORD PTR [rsp+0x2550]
 1006cf7:	mov    QWORD PTR [rsp+0x38],rax
 1006cfc:	lea    rax,[rsp+0x190]
 1006d04:	mov    QWORD PTR [rsp+0x30],rax
 1006d09:	lea    rax,[rsp+0x260]
 1006d11:	mov    QWORD PTR [rsp+0x28],rax
 1006d16:	lea    rax,[rsp+0x1d20]
 1006d1e:	mov    QWORD PTR [rsp+0x20],rax
 1006d23:	lea    r9,[rsp+0x920]
 1006d2b:	lea    r8,[rip+0xffffffffffffb26e]        # 0x1001fa0
 1006d32:	mov    edx,0x400
 1006d37:	lea    rcx,[rsp+0xd20]
 1006d3f:	call   QWORD PTR [rip+0xffffffffffffa4b3]        # 0x10011f8
 1006d45:	lea    rcx,[rip+0x195d4]        # 0x1020320
 1006d4c:	call   0x100f0e0
 1006d51:	mov    QWORD PTR [rsp+0x2560],rax
 1006d59:	mov    rax,QWORD PTR [rsp+0x2560]
 1006d61:	mov    rax,QWORD PTR [rax]
 1006d64:	xor    r9d,r9d
 1006d67:	xor    r8d,r8d
 1006d6a:	lea    rdx,[rsp+0xd20]
 1006d72:	mov    rcx,QWORD PTR [rsp+0x2560]
 1006d7a:	call   QWORD PTR [rax+0x2d8]
 1006d80:	mov    ecx,eax
 1006d82:	call   0x1006e20
 1006d87:	test   eax,eax
 1006d89:	jne    0x1006d93
 1006d8b:	mov    DWORD PTR [rsp+0x50],0x1
 1006d93:	cmp    QWORD PTR [rsp+0x58],0x0
 1006d99:	je     0x1006da6
 1006d9b:	mov    rcx,QWORD PTR [rsp+0x58]
 1006da0:	call   QWORD PTR [rip+0xffffffffffffa5ba]        # 0x1001360
 1006da6:	cmp    QWORD PTR [rsp+0x60],0x0
 1006dac:	je     0x1006db9
 1006dae:	mov    rcx,QWORD PTR [rsp+0x60]
 1006db3:	call   QWORD PTR [rip+0xffffffffffffa5a7]        # 0x1001360
 1006db9:	cmp    QWORD PTR [rsp+0x70],0x0
 1006dbf:	je     0x1006dcc
 1006dc1:	mov    rcx,QWORD PTR [rsp+0x70]
 1006dc6:	call   QWORD PTR [rip+0xffffffffffffa594]        # 0x1001360
 1006dcc:	mov    eax,DWORD PTR [rsp+0x50]
 1006dd0:	mov    DWORD PTR [rsp+0x2520],eax
 1006dd7:	lea    rcx,[rsp+0x80]
 1006ddf:	call   0x10110d0
 1006de4:	nop
 1006de5:	lea    rcx,[rsp+0x78]
 1006dea:	call   0x1011020
 1006def:	mov    eax,DWORD PTR [rsp+0x2520]
 1006df6:	mov    rcx,QWORD PTR [rbp-0x20]
 1006dfa:	xor    rcx,rsp
 1006dfd:	call   0x1012040
 1006e02:	add    rsp,0x26a8
 1006e09:	pop    rdi
 1006e0a:	pop    rbp
 1006e0b:	ret    
 1006e0c:	int3   
 1006e0d:	int3   
 1006e0e:	int3   
 1006e0f:	int3   
 1006e10:	int3   
 1006e11:	int3   
 1006e12:	int3   
 1006e13:	int3   
 1006e14:	int3   
 1006e15:	int3   
 1006e16:	int3   
 1006e17:	int3   
 1006e18:	int3   
 1006e19:	int3   
 1006e1a:	int3   
 1006e1b:	int3   
 1006e1c:	int3   
 1006e1d:	int3   
 1006e1e:	int3   
 1006e1f:	int3   
 1006e20:	mov    DWORD PTR [rsp+0x8],ecx
 1006e24:	push   rbp
 1006e25:	mov    rbp,rsp
 1006e28:	push   rdi
 1006e29:	mov    eax,0x4218
 1006e2e:	call   0x1011fe0
 1006e33:	sub    rsp,rax
 1006e36:	mov    QWORD PTR [rsp+0x3ff8],0xfffffffffffffffe
 1006e42:	mov    rax,QWORD PTR [rip+0xe517]        # 0x1015360
 1006e49:	xor    rax,rsp
 1006e4c:	mov    QWORD PTR [rbp-0x20],rax
 1006e50:	movzx  eax,WORD PTR [rip+0xffffffffffffa969]        # 0x10017c0
 1006e57:	mov    WORD PTR [rsp+0x4000],ax
 1006e5f:	lea    rax,[rsp+0x4002]
 1006e67:	mov    rdi,rax
 1006e6a:	xor    eax,eax
 1006e6c:	mov    ecx,0x1fe
 1006e71:	rep stos BYTE PTR es:[rdi],al
 1006e73:	movzx  eax,WORD PTR [rip+0xffffffffffffa946]        # 0x10017c0
 1006e7a:	mov    WORD PTR [rsp+0x1fd0],ax
 1006e82:	lea    rax,[rsp+0x1fd2]
 1006e8a:	mov    rdi,rax
 1006e8d:	xor    eax,eax
 1006e8f:	mov    ecx,0x1ffe
 1006e94:	rep stos BYTE PTR es:[rdi],al
 1006e96:	movzx  eax,WORD PTR [rip+0xffffffffffffa923]        # 0x10017c0
 1006e9d:	mov    WORD PTR [rsp+0x90],ax
 1006ea5:	lea    rax,[rsp+0x92]
 1006ead:	mov    rdi,rax
 1006eb0:	xor    eax,eax
 1006eb2:	mov    ecx,0x1f3e
 1006eb7:	rep stos BYTE PTR es:[rdi],al
 1006eb9:	lea    rcx,[rsp+0x48]
 1006ebe:	call   0x1011150
 1006ec3:	nop
 1006ec4:	lea    rcx,[rsp+0x30]
 1006ec9:	call   0x1011220
 1006ece:	nop
 1006ecf:	lea    rcx,[rsp+0x40]
 1006ed4:	call   0x10038f0
 1006ed9:	nop
 1006eda:	lea    rcx,[rsp+0x60]
 1006edf:	call   0x10038f0
 1006ee4:	nop
 1006ee5:	lea    rcx,[rsp+0x38]
 1006eea:	call   0x10038f0
 1006eef:	nop
 1006ef0:	mov    DWORD PTR [rsp+0x50],0x0
 1006ef8:	cmp    DWORD PTR [rbp+0x10],0x0
 1006efc:	jge    0x1006f0e
 1006efe:	lea    rcx,[rip+0x1940b]        # 0x1020310
 1006f05:	call   0x100f5c0
 1006f0a:	test   eax,eax
 1006f0c:	je     0x1006f55
 1006f0e:	mov    DWORD PTR [rsp+0x58],0x0
 1006f16:	lea    rcx,[rsp+0x38]
 1006f1b:	call   0x1003920
 1006f20:	nop
 1006f21:	lea    rcx,[rsp+0x60]
 1006f26:	call   0x1003920
 1006f2b:	nop
 1006f2c:	lea    rcx,[rsp+0x40]
 1006f31:	call   0x1003920
 1006f36:	nop
 1006f37:	lea    rcx,[rsp+0x30]
 1006f3c:	call   0x1011250
 1006f41:	nop
 1006f42:	lea    rcx,[rsp+0x48]
 1006f47:	call   0x1011180
 1006f4c:	mov    eax,DWORD PTR [rsp+0x58]
 1006f50:	jmp    0x1007436
 1006f55:	mov    r8d,0x100
 1006f5b:	lea    rdx,[rsp+0x4000]
 1006f63:	mov    ecx,0x2
 1006f68:	call   0x1008800
 1006f6d:	lea    rcx,[rip+0x1939c]        # 0x1020310
 1006f74:	call   0x100f600
 1006f79:	mov    QWORD PTR [rsp+0x88],rax
 1006f81:	lea    rcx,[rsp+0x48]
 1006f86:	call   0x10111e0
 1006f8b:	mov    rcx,QWORD PTR [rsp+0x88]
 1006f93:	mov    rcx,QWORD PTR [rcx]
 1006f96:	mov    QWORD PTR [rsp+0x3fe8],rcx
 1006f9e:	mov    r8,rax
 1006fa1:	lea    rdx,[rip+0xffffffffffffc6b0]        # 0x1003658
 1006fa8:	mov    rcx,QWORD PTR [rsp+0x88]
 1006fb0:	mov    rax,QWORD PTR [rsp+0x3fe8]
 1006fb8:	call   QWORD PTR [rax]
 1006fba:	lea    rcx,[rsp+0x48]
 1006fbf:	call   0x10111c0
 1006fc4:	test   rax,rax
 1006fc7:	je     0x1007335
 1006fcd:	lea    rcx,[rsp+0x48]
 1006fd2:	call   0x1011200
 1006fd7:	mov    QWORD PTR [rsp+0x78],rax
 1006fdc:	mov    rax,QWORD PTR [rsp+0x78]
 1006fe1:	mov    rax,QWORD PTR [rax]
 1006fe4:	lea    rdx,[rip+0xffffffffffffc65d]        # 0x1003648
 1006feb:	mov    rcx,QWORD PTR [rsp+0x78]
 1006ff0:	call   QWORD PTR [rax+0x18]
 1006ff3:	test   eax,eax
 1006ff5:	jne    0x1007335
 1006ffb:	lea    rcx,[rsp+0x30]
 1007000:	call   0x10112b0
 1007005:	mov    rdx,rax
 1007008:	xor    ecx,ecx
 100700a:	call   QWORD PTR [rip+0xffffffffffffa358]        # 0x1001368
 1007010:	test   eax,eax
 1007012:	jl     0x1007330
 1007018:	lea    rcx,[rsp+0x30]
 100701d:	call   0x1011290
 1007022:	test   rax,rax
 1007025:	je     0x1007330
 100702b:	lea    rcx,[rsp+0x30]
 1007030:	call   0x10112d0
 1007035:	mov    QWORD PTR [rsp+0x68],rax
 100703a:	mov    rax,QWORD PTR [rsp+0x68]
 100703f:	mov    rax,QWORD PTR [rax]
 1007042:	lea    rdx,[rsp+0x50]
 1007047:	mov    rcx,QWORD PTR [rsp+0x68]
 100704c:	call   QWORD PTR [rax+0x38]
 100704f:	lea    rcx,[rsp+0x30]
 1007054:	call   0x10112d0
 1007059:	mov    QWORD PTR [rsp+0x70],rax
 100705e:	lea    rcx,[rsp+0x40]
 1007063:	call   0x10039d0
 1007068:	mov    rcx,QWORD PTR [rsp+0x70]
 100706d:	mov    rcx,QWORD PTR [rcx]
 1007070:	mov    QWORD PTR [rsp+0x3fd8],rcx
 1007078:	mov    rdx,rax
 100707b:	mov    rcx,QWORD PTR [rsp+0x70]
 1007080:	mov    rax,QWORD PTR [rsp+0x3fd8]
 1007088:	call   QWORD PTR [rax+0x28]
 100708b:	lea    rcx,[rsp+0x30]
 1007090:	call   0x10112d0
 1007095:	mov    QWORD PTR [rsp+0x80],rax
 100709d:	lea    rcx,[rsp+0x60]
 10070a2:	call   0x10039d0
 10070a7:	mov    rcx,QWORD PTR [rsp+0x80]
 10070af:	mov    rcx,QWORD PTR [rcx]
 10070b2:	mov    QWORD PTR [rsp+0x3fe0],rcx
 10070ba:	mov    rdx,rax
 10070bd:	mov    rcx,QWORD PTR [rsp+0x80]
 10070c5:	mov    rax,QWORD PTR [rsp+0x3fe0]
 10070cd:	call   QWORD PTR [rax+0x30]
 10070d0:	lea    rcx,[rsp+0x30]
 10070d5:	call   0x10112d0
 10070da:	mov    QWORD PTR [rsp+0x3fd0],rax
 10070e2:	lea    rcx,[rsp+0x38]
 10070e7:	call   0x10039d0
 10070ec:	mov    rcx,QWORD PTR [rsp+0x3fd0]
 10070f4:	mov    rcx,QWORD PTR [rcx]
 10070f7:	mov    QWORD PTR [rsp+0x3ff0],rcx
 10070ff:	mov    rdx,rax
 1007102:	mov    rcx,QWORD PTR [rsp+0x3fd0]
 100710a:	mov    rax,QWORD PTR [rsp+0x3ff0]
 1007112:	call   QWORD PTR [rax+0x20]
 1007115:	lea    rcx,[rsp+0x40]
 100711a:	call   0x1003990
 100711f:	test   rax,rax
 1007122:	je     0x10071da
 1007128:	lea    rcx,[rsp+0x40]
 100712d:	call   0x10039b0
 1007132:	mov    rcx,rax
 1007135:	call   QWORD PTR [rip+0xffffffffffffa1f5]        # 0x1001330
 100713b:	cmp    rax,0xfa0
 1007141:	jae    0x1007175
 1007143:	mov    eax,DWORD PTR [rbp+0x10]
 1007146:	and    eax,0xffff
 100714b:	mov    rcx,QWORD PTR [rsp+0x40]
 1007150:	mov    QWORD PTR [rsp+0x20],rcx
 1007155:	mov    r9d,eax
 1007158:	lea    r8,[rsp+0x4000]
 1007160:	mov    edx,0x1000
 1007165:	lea    rcx,[rsp+0x1fd0]
 100716d:	call   QWORD PTR [rip+0xffffffffffffa085]        # 0x10011f8
 1007173:	jmp    0x10071d8
 1007175:	lea    rcx,[rsp+0x40]
 100717a:	call   0x10039b0
 100717f:	mov    r9d,0xf9e
 1007185:	mov    r8,rax
 1007188:	mov    edx,0xfa0
 100718d:	lea    rcx,[rsp+0x90]
 1007195:	call   QWORD PTR [rip+0xffffffffffffa1a5]        # 0x1001340
 100719b:	xor    eax,eax
 100719d:	mov    WORD PTR [rsp+0x1fce],ax
 10071a5:	mov    eax,DWORD PTR [rbp+0x10]
 10071a8:	and    eax,0xffff
 10071ad:	lea    rcx,[rsp+0x90]
 10071b5:	mov    QWORD PTR [rsp+0x20],rcx
 10071ba:	mov    r9d,eax
 10071bd:	lea    r8,[rsp+0x4000]
 10071c5:	mov    edx,0x1000
 10071ca:	lea    rcx,[rsp+0x1fd0]
 10071d2:	call   QWORD PTR [rip+0xffffffffffffa020]        # 0x10011f8
 10071d8:	jmp    0x100720c
 10071da:	mov    eax,DWORD PTR [rbp+0x10]
 10071dd:	and    eax,0xffff
 10071e2:	lea    rcx,[rip+0xffffffffffffb07f]        # 0x1002268
 10071e9:	mov    QWORD PTR [rsp+0x20],rcx
 10071ee:	mov    r9d,eax
 10071f1:	lea    r8,[rsp+0x4000]
 10071f9:	mov    edx,0x1000
 10071fe:	lea    rcx,[rsp+0x1fd0]
 1007206:	call   QWORD PTR [rip+0xffffffffffff9fec]        # 0x10011f8
 100720c:	lea    rcx,[rsp+0x38]
 1007211:	call   0x1003990
 1007216:	test   rax,rax
 1007219:	je     0x10072cf
 100721f:	lea    rcx,[rsp+0x38]
 1007224:	call   0x10039b0
 1007229:	mov    rcx,rax
 100722c:	call   QWORD PTR [rip+0xffffffffffffa0fe]        # 0x1001330
 1007232:	cmp    rax,0xfa0
 1007238:	jae    0x100726f
 100723a:	lea    rcx,[rsp+0x38]
 100723f:	call   0x10039b0
 1007244:	lea    rcx,[rsp+0x1fd0]
 100724c:	mov    QWORD PTR [rsp+0x20],rcx
 1007251:	mov    r9,rax
 1007254:	lea    r8,[rip+0xffffffffffffb02d]        # 0x1002288
 100725b:	mov    edx,0x2710
 1007260:	lea    rcx,[rip+0xee09]        # 0x1016070
 1007267:	call   QWORD PTR [rip+0xffffffffffff9f8b]        # 0x10011f8
 100726d:	jmp    0x10072cd
 100726f:	lea    rcx,[rsp+0x38]
 1007274:	call   0x10039b0
 1007279:	mov    r9d,0xf9e
 100727f:	mov    r8,rax
 1007282:	mov    edx,0xfa0
 1007287:	lea    rcx,[rsp+0x90]
 100728f:	call   QWORD PTR [rip+0xffffffffffffa0ab]        # 0x1001340
 1007295:	xor    eax,eax
 1007297:	mov    WORD PTR [rsp+0x1fce],ax
 100729f:	lea    rax,[rsp+0x1fd0]
 10072a7:	mov    QWORD PTR [rsp+0x20],rax
 10072ac:	lea    r9,[rsp+0x90]
 10072b4:	lea    r8,[rip+0xffffffffffffafcd]        # 0x1002288
 10072bb:	mov    edx,0x2710
 10072c0:	lea    rcx,[rip+0xeda9]        # 0x1016070
 10072c7:	call   QWORD PTR [rip+0xffffffffffff9f2b]        # 0x10011f8
 10072cd:	jmp    0x10072fc
 10072cf:	lea    rax,[rsp+0x1fd0]
 10072d7:	mov    QWORD PTR [rsp+0x20],rax
 10072dc:	lea    r9,[rip+0xffffffffffffafbd]        # 0x10022a0
 10072e3:	lea    r8,[rip+0xffffffffffffaf9e]        # 0x1002288
 10072ea:	mov    edx,0x2710
 10072ef:	lea    rcx,[rip+0xed7a]        # 0x1016070
 10072f6:	call   QWORD PTR [rip+0xffffffffffff9efc]        # 0x10011f8
 10072fc:	lea    rcx,[rip+0xed6d]        # 0x1016070
 1007303:	call   0x1008f00
 1007308:	mov    r9d,0x7ff
 100730e:	lea    r8,[rip+0xed5b]        # 0x1016070
 1007315:	mov    edx,0x800
 100731a:	lea    rcx,[rip+0x175e3]        # 0x101e904
 1007321:	call   QWORD PTR [rip+0xffffffffffffa019]        # 0x1001340
 1007327:	xor    eax,eax
 1007329:	mov    WORD PTR [rip+0x185d2],ax        # 0x101f902
 1007330:	jmp    0x10073e6
 1007335:	mov    r8d,0x1000
 100733b:	lea    rdx,[rip+0x13b4e]        # 0x101ae90
 1007342:	mov    ecx,0x26
 1007347:	call   0x1008800
 100734c:	mov    eax,DWORD PTR [rbp+0x10]
 100734f:	and    eax,0xffff
 1007354:	lea    rcx,[rip+0x13b35]        # 0x101ae90
 100735b:	mov    QWORD PTR [rsp+0x20],rcx
 1007360:	mov    r9d,eax
 1007363:	lea    r8,[rsp+0x4000]
 100736b:	mov    edx,0x1000
 1007370:	lea    rcx,[rsp+0x1fd0]
 1007378:	call   QWORD PTR [rip+0xffffffffffff9e7a]        # 0x10011f8
 100737e:	mov    r8d,0x1000
 1007384:	lea    rdx,[rip+0x13b05]        # 0x101ae90
 100738b:	mov    ecx,0x27
 1007390:	call   0x1008800
 1007395:	lea    rax,[rsp+0x1fd0]
 100739d:	mov    QWORD PTR [rsp+0x20],rax
 10073a2:	lea    r9,[rip+0x13ae7]        # 0x101ae90
 10073a9:	lea    r8,[rip+0xffffffffffffaed8]        # 0x1002288
 10073b0:	mov    edx,0x2710
 10073b5:	lea    rcx,[rip+0xecb4]        # 0x1016070
 10073bc:	call   QWORD PTR [rip+0xffffffffffff9e36]        # 0x10011f8
 10073c2:	lea    rcx,[rip+0xeca7]        # 0x1016070
 10073c9:	call   0x1008f00
 10073ce:	lea    r8,[rip+0xec9b]        # 0x1016070
 10073d5:	mov    edx,0x1000
 10073da:	lea    rcx,[rip+0x17523]        # 0x101e904
 10073e1:	call   0x1003d20
 10073e6:	mov    eax,DWORD PTR [rbp+0x10]
 10073e9:	and    eax,0xffff
 10073ee:	mov    DWORD PTR [rip+0x18520],eax        # 0x101f914
 10073f4:	mov    DWORD PTR [rsp+0x54],0x1
 10073fc:	lea    rcx,[rsp+0x38]
 1007401:	call   0x1003920
 1007406:	nop
 1007407:	lea    rcx,[rsp+0x60]
 100740c:	call   0x1003920
 1007411:	nop
 1007412:	lea    rcx,[rsp+0x40]
 1007417:	call   0x1003920
 100741c:	nop
 100741d:	lea    rcx,[rsp+0x30]
 1007422:	call   0x1011250
 1007427:	nop
 1007428:	lea    rcx,[rsp+0x48]
 100742d:	call   0x1011180
 1007432:	mov    eax,DWORD PTR [rsp+0x54]
 1007436:	mov    rcx,QWORD PTR [rbp-0x20]
 100743a:	xor    rcx,rsp
 100743d:	call   0x1012040
 1007442:	add    rsp,0x4218
 1007449:	pop    rdi
 100744a:	pop    rbp
 100744b:	ret    
 100744c:	int3   
 100744d:	int3   
 100744e:	int3   
 100744f:	int3   
 1007450:	int3   
 1007451:	int3   
 1007452:	int3   
 1007453:	int3   
 1007454:	int3   
 1007455:	int3   
 1007456:	int3   
 1007457:	int3   
 1007458:	int3   
 1007459:	int3   
 100745a:	int3   
 100745b:	int3   
 100745c:	int3   
 100745d:	int3   
 100745e:	int3   
 100745f:	int3   
 1007460:	mov    DWORD PTR [rsp+0x10],edx
 1007464:	mov    DWORD PTR [rsp+0x8],ecx
 1007468:	push   rbp
 1007469:	mov    rbp,rsp
 100746c:	push   rdi
 100746d:	mov    eax,0x2058
 1007472:	call   0x1011fe0
 1007477:	sub    rsp,rax
 100747a:	mov    rax,QWORD PTR [rip+0xdedf]        # 0x1015360
 1007481:	xor    rax,rsp
 1007484:	mov    QWORD PTR [rbp-0x20],rax
 1007488:	movzx  eax,WORD PTR [rip+0xffffffffffffa331]        # 0x10017c0
 100748f:	mov    WORD PTR [rsp+0x40],ax
 1007494:	lea    rax,[rsp+0x42]
 1007499:	mov    rdi,rax
 100749c:	xor    eax,eax
 100749e:	mov    ecx,0xffe
 10074a3:	rep stos BYTE PTR es:[rdi],al
 10074a5:	movzx  eax,WORD PTR [rip+0xffffffffffffa314]        # 0x10017c0
 10074ac:	mov    WORD PTR [rsp+0x1040],ax
 10074b4:	lea    rax,[rsp+0x1042]
 10074bc:	mov    rdi,rax
 10074bf:	xor    eax,eax
 10074c1:	mov    ecx,0xffe
 10074c6:	rep stos BYTE PTR es:[rdi],al
 10074c8:	mov    QWORD PTR [rsp+0x30],0x0
 10074d1:	mov    DWORD PTR [rsp+0x28],0x7ff
 10074d9:	lea    rax,[rsp+0x40]
 10074de:	mov    QWORD PTR [rsp+0x20],rax
 10074e3:	mov    r9d,0x800
 10074e9:	mov    r8d,DWORD PTR [rbp+0x10]
 10074ed:	xor    edx,edx
 10074ef:	mov    ecx,0x1000
 10074f4:	call   QWORD PTR [rip+0xffffffffffff9b6e]        # 0x1001068
 10074fa:	test   eax,eax
 10074fc:	jne    0x1007550
 10074fe:	mov    eax,DWORD PTR [rbp+0x10]
 1007501:	and    eax,0xffff
 1007506:	mov    QWORD PTR [rsp+0x30],0x0
 100750f:	mov    DWORD PTR [rsp+0x28],0x7ff
 1007517:	lea    rcx,[rsp+0x40]
 100751c:	mov    QWORD PTR [rsp+0x20],rcx
 1007521:	mov    r9d,0x800
 1007527:	mov    r8d,eax
 100752a:	xor    edx,edx
 100752c:	mov    ecx,0x1000
 1007531:	call   QWORD PTR [rip+0xffffffffffff9b31]        # 0x1001068
 1007537:	test   eax,eax
 1007539:	jne    0x1007550
 100753b:	mov    r8d,0x800
 1007541:	lea    rdx,[rsp+0x40]
 1007546:	mov    ecx,0x2e
 100754b:	call   0x1008800
 1007550:	mov    r8d,0x800
 1007556:	lea    rdx,[rsp+0x1040]
 100755e:	mov    ecx,DWORD PTR [rbp+0x18]
 1007561:	call   0x1008800
 1007566:	lea    rdx,[rsp+0x40]
 100756b:	lea    rcx,[rsp+0x1040]
 1007573:	call   QWORD PTR [rip+0xffffffffffff9dd7]        # 0x1001350
 1007579:	mov    rcx,QWORD PTR [rbp-0x20]
 100757d:	xor    rcx,rsp
 1007580:	call   0x1012040
 1007585:	add    rsp,0x2058
 100758c:	pop    rdi
 100758d:	pop    rbp
 100758e:	ret    
 100758f:	int3   
 1007590:	int3   
 1007591:	int3   
 1007592:	int3   
 1007593:	int3   
 1007594:	int3   
 1007595:	int3   
 1007596:	int3   
 1007597:	int3   
 1007598:	int3   
 1007599:	int3   
 100759a:	int3   
 100759b:	int3   
 100759c:	int3   
 100759d:	int3   
 100759e:	int3   
 100759f:	int3   
 10075a0:	rex push rbp
 10075a2:	mov    rbp,rsp
 10075a5:	sub    rsp,0x20
 10075a9:	mov    r8d,0x1000
 10075af:	lea    rdx,[rip+0x138da]        # 0x101ae90
 10075b6:	mov    ecx,0x3
 10075bb:	call   0x1008800
 10075c0:	lea    rdx,[rip+0xffffffffffffa615]        # 0x1001bdc
 10075c7:	lea    rcx,[rip+0x138c2]        # 0x101ae90
 10075ce:	call   QWORD PTR [rip+0xffffffffffff9d7c]        # 0x1001350
 10075d4:	mov    r8d,0x1000
 10075da:	lea    rdx,[rip+0x138af]        # 0x101ae90
 10075e1:	mov    ecx,0x4
 10075e6:	call   0x1008800
 10075eb:	lea    r8,[rip+0xffffffffffffa5fa]        # 0x1001bec
 10075f2:	lea    rdx,[rip+0xffffffffffffa5eb]        # 0x1001be4
 10075f9:	lea    rcx,[rip+0x13890]        # 0x101ae90
 1007600:	call   QWORD PTR [rip+0xffffffffffff9d4a]        # 0x1001350
 1007606:	mov    r8d,0x1000
 100760c:	lea    rdx,[rip+0x1387d]        # 0x101ae90
 1007613:	mov    ecx,0x5
 1007618:	call   0x1008800
 100761d:	lea    rdx,[rip+0xffffffffffffa58c]        # 0x1001bb0
 1007624:	lea    rcx,[rip+0x13865]        # 0x101ae90
 100762b:	call   QWORD PTR [rip+0xffffffffffff9d1f]        # 0x1001350
 1007631:	mov    r8d,0x1000
 1007637:	lea    rdx,[rip+0x13852]        # 0x101ae90
 100763e:	mov    ecx,0x6
 1007643:	call   0x1008800
 1007648:	lea    rdx,[rip+0xffffffffffffa569]        # 0x1001bb8
 100764f:	lea    rcx,[rip+0x1383a]        # 0x101ae90
 1007656:	call   QWORD PTR [rip+0xffffffffffff9cf4]        # 0x1001350
 100765c:	mov    r8d,0x1000
 1007662:	lea    rdx,[rip+0x13827]        # 0x101ae90
 1007669:	mov    ecx,0x8
 100766e:	call   0x1008800
 1007673:	lea    rdx,[rip+0xffffffffffffa766]        # 0x1001de0
 100767a:	lea    rcx,[rip+0x1380f]        # 0x101ae90
 1007681:	call   QWORD PTR [rip+0xffffffffffff9cc9]        # 0x1001350
 1007687:	mov    r8d,0x1000
 100768d:	lea    rdx,[rip+0x137fc]        # 0x101ae90
 1007694:	mov    ecx,0xc
 1007699:	call   0x1008800
 100769e:	lea    r8,[rip+0xffffffffffffa28b]        # 0x1001930
 10076a5:	lea    rdx,[rip+0xffffffffffffa29c]        # 0x1001948
 10076ac:	lea    rcx,[rip+0x137dd]        # 0x101ae90
 10076b3:	call   QWORD PTR [rip+0xffffffffffff9c97]        # 0x1001350
 10076b9:	mov    r8d,0x1000
 10076bf:	lea    rdx,[rip+0x137ca]        # 0x101ae90
 10076c6:	mov    ecx,0xc
 10076cb:	call   0x1008800
 10076d0:	lea    r8,[rip+0xffffffffffffa229]        # 0x1001900
 10076d7:	lea    rdx,[rip+0xffffffffffffa212]        # 0x10018f0
 10076de:	lea    rcx,[rip+0x137ab]        # 0x101ae90
 10076e5:	call   QWORD PTR [rip+0xffffffffffff9c65]        # 0x1001350
 10076eb:	mov    r8d,0x1000
 10076f1:	lea    rdx,[rip+0x13798]        # 0x101ae90
 10076f8:	mov    ecx,0xb
 10076fd:	call   0x1008800
 1007702:	lea    rdx,[rip+0xffffffffffffa20f]        # 0x1001918
 1007709:	lea    rcx,[rip+0x13780]        # 0x101ae90
 1007710:	call   QWORD PTR [rip+0xffffffffffff9c3a]        # 0x1001350
 1007716:	mov    r8d,0x1000
 100771c:	lea    rdx,[rip+0x1376d]        # 0x101ae90
 1007723:	mov    ecx,0xb
 1007728:	call   0x1008800
 100772d:	lea    rdx,[rip+0xffffffffffffa224]        # 0x1001958
 1007734:	lea    rcx,[rip+0x13755]        # 0x101ae90
 100773b:	call   QWORD PTR [rip+0xffffffffffff9c0f]        # 0x1001350
 1007741:	mov    r8d,0x1000
 1007747:	lea    rdx,[rip+0x13742]        # 0x101ae90
 100774e:	mov    ecx,0xb
 1007753:	call   0x1008800
 1007758:	lea    rdx,[rip+0xffffffffffffa239]        # 0x1001998
 100775f:	lea    rcx,[rip+0x1372a]        # 0x101ae90
 1007766:	call   QWORD PTR [rip+0xffffffffffff9be4]        # 0x1001350
 100776c:	mov    r8d,0x1000
 1007772:	lea    rdx,[rip+0x13717]        # 0x101ae90
 1007779:	mov    ecx,0x9
 100777e:	call   0x1008800
 1007783:	lea    rdx,[rip+0xffffffffffffa21e]        # 0x10019a8
 100778a:	lea    rcx,[rip+0x136ff]        # 0x101ae90
 1007791:	call   QWORD PTR [rip+0xffffffffffff9bb9]        # 0x1001350
 1007797:	mov    r8d,0x1000
 100779d:	lea    rdx,[rip+0x136ec]        # 0x101ae90
 10077a4:	mov    ecx,0xa
 10077a9:	call   0x1008800
 10077ae:	lea    r8,[rip+0xffffffffffffa21b]        # 0x10019d0
 10077b5:	lea    rdx,[rip+0xffffffffffffa204]        # 0x10019c0
 10077bc:	lea    rcx,[rip+0x136cd]        # 0x101ae90
 10077c3:	call   QWORD PTR [rip+0xffffffffffff9b87]        # 0x1001350
 10077c9:	mov    r8d,0x1000
 10077cf:	lea    rdx,[rip+0x136ba]        # 0x101ae90
 10077d6:	mov    ecx,0xb
 10077db:	call   0x1008800
 10077e0:	lea    rdx,[rip+0xffffffffffffa429]        # 0x1001c10
 10077e7:	lea    rcx,[rip+0x136a2]        # 0x101ae90
 10077ee:	call   QWORD PTR [rip+0xffffffffffff9b5c]        # 0x1001350
 10077f4:	mov    r8d,0x1000
 10077fa:	lea    rdx,[rip+0x1368f]        # 0x101ae90
 1007801:	mov    ecx,0x67
 1007806:	call   0x1008800
 100780b:	lea    r8,[rip+0xffffffffffffa1d6]        # 0x10019e8
 1007812:	lea    rdx,[rip+0xffffffffffffa41f]        # 0x1001c38
 1007819:	lea    rcx,[rip+0x13670]        # 0x101ae90
 1007820:	call   QWORD PTR [rip+0xffffffffffff9b2a]        # 0x1001350
 1007826:	mov    r8d,0x1000
 100782c:	lea    rdx,[rip+0x1365d]        # 0x101ae90
 1007833:	mov    ecx,0x48
 1007838:	call   0x1008800
 100783d:	lea    rdx,[rip+0xffffffffffffa1bc]        # 0x1001a00
 1007844:	lea    rcx,[rip+0x13645]        # 0x101ae90
 100784b:	call   QWORD PTR [rip+0xffffffffffff9aff]        # 0x1001350
 1007851:	mov    r8d,0x1000
 1007857:	lea    rdx,[rip+0x13632]        # 0x101ae90
 100785e:	mov    ecx,0x49
 1007863:	call   0x1008800
 1007868:	lea    rdx,[rip+0xffffffffffffa359]        # 0x1001bc8
 100786f:	lea    rcx,[rip+0x1361a]        # 0x101ae90
 1007876:	call   QWORD PTR [rip+0xffffffffffff9ad4]        # 0x1001350
 100787c:	mov    r8d,0x1000
 1007882:	lea    rdx,[rip+0x13607]        # 0x101ae90
 1007889:	mov    ecx,0x4a
 100788e:	call   0x1008800
 1007893:	lea    rdx,[rip+0xffffffffffffa35e]        # 0x1001bf8
 100789a:	lea    rcx,[rip+0x135ef]        # 0x101ae90
 10078a1:	call   QWORD PTR [rip+0xffffffffffff9aa9]        # 0x1001350
 10078a7:	mov    r8d,0x1000
 10078ad:	lea    rdx,[rip+0x135dc]        # 0x101ae90
 10078b4:	mov    ecx,0x4f
 10078b9:	call   0x1008800
 10078be:	lea    rdx,[rip+0xffffffffffffa15b]        # 0x1001a20
 10078c5:	lea    rcx,[rip+0x135c4]        # 0x101ae90
 10078cc:	call   QWORD PTR [rip+0xffffffffffff9a7e]        # 0x1001350
 10078d2:	mov    r8d,0x1000
 10078d8:	lea    rdx,[rip+0x135b1]        # 0x101ae90
 10078df:	mov    ecx,0x53
 10078e4:	call   0x1008800
 10078e9:	lea    rdx,[rip+0xffffffffffffa478]        # 0x1001d68
 10078f0:	lea    rcx,[rip+0x13599]        # 0x101ae90
 10078f7:	call   QWORD PTR [rip+0xffffffffffff9a53]        # 0x1001350
 10078fd:	mov    r8d,0x1000
 1007903:	lea    rdx,[rip+0x13586]        # 0x101ae90
 100790a:	mov    ecx,0x54
 100790f:	call   0x1008800
 1007914:	lea    rdx,[rip+0xffffffffffffa45d]        # 0x1001d78
 100791b:	lea    rcx,[rip+0x1356e]        # 0x101ae90
 1007922:	call   QWORD PTR [rip+0xffffffffffff9a28]        # 0x1001350
 1007928:	mov    r8d,0x1000
 100792e:	lea    rdx,[rip+0x1355b]        # 0x101ae90
 1007935:	mov    ecx,0x55
 100793a:	call   0x1008800
 100793f:	lea    rdx,[rip+0xffffffffffffa40a]        # 0x1001d50
 1007946:	lea    rcx,[rip+0x13543]        # 0x101ae90
 100794d:	call   QWORD PTR [rip+0xffffffffffff99fd]        # 0x1001350
 1007953:	mov    r8d,0x1000
 1007959:	lea    rdx,[rip+0x13530]        # 0x101ae90
 1007960:	mov    ecx,0x56
 1007965:	call   0x1008800
 100796a:	lea    rdx,[rip+0xffffffffffffa30f]        # 0x1001c80
 1007971:	lea    rcx,[rip+0x13518]        # 0x101ae90
 1007978:	call   QWORD PTR [rip+0xffffffffffff99d2]        # 0x1001350
 100797e:	mov    r8d,0x1000
 1007984:	lea    rdx,[rip+0x13505]        # 0x101ae90
 100798b:	mov    ecx,0x8b
 1007990:	call   0x1008800
 1007995:	lea    rdx,[rip+0xffffffffffffa374]        # 0x1001d10
 100799c:	lea    rcx,[rip+0x134ed]        # 0x101ae90
 10079a3:	call   QWORD PTR [rip+0xffffffffffff99a7]        # 0x1001350
 10079a9:	mov    r8d,0x1000
 10079af:	lea    rdx,[rip+0x134da]        # 0x101ae90
 10079b6:	mov    ecx,0x70
 10079bb:	call   0x1008800
 10079c0:	lea    rdx,[rip+0xffffffffffffa3f9]        # 0x1001dc0
 10079c7:	lea    rcx,[rip+0x134c2]        # 0x101ae90
 10079ce:	call   QWORD PTR [rip+0xffffffffffff997c]        # 0x1001350
 10079d4:	mov    r8d,0x1000
 10079da:	lea    rdx,[rip+0x134af]        # 0x101ae90
 10079e1:	mov    ecx,0x71
 10079e6:	call   0x1008800
 10079eb:	lea    rdx,[rip+0xffffffffffffa39e]        # 0x1001d90
 10079f2:	lea    rcx,[rip+0x13497]        # 0x101ae90
 10079f9:	call   QWORD PTR [rip+0xffffffffffff9951]        # 0x1001350
 10079ff:	mov    r8d,0x1000
 1007a05:	lea    rdx,[rip+0x13484]        # 0x101ae90
 1007a0c:	mov    ecx,0x72
 1007a11:	call   0x1008800
 1007a16:	lea    rdx,[rip+0xffffffffffffa38b]        # 0x1001da8
 1007a1d:	lea    rcx,[rip+0x1346c]        # 0x101ae90
 1007a24:	call   QWORD PTR [rip+0xffffffffffff9926]        # 0x1001350
 1007a2a:	add    rsp,0x20
 1007a2e:	pop    rbp
 1007a2f:	ret    
 1007a30:	int3   
 1007a31:	int3   
 1007a32:	int3   
 1007a33:	int3   
 1007a34:	int3   
 1007a35:	int3   
 1007a36:	int3   
 1007a37:	int3   
 1007a38:	int3   
 1007a39:	int3   
 1007a3a:	int3   
 1007a3b:	int3   
 1007a3c:	int3   
 1007a3d:	int3   
 1007a3e:	int3   
 1007a3f:	int3   
 1007a40:	rex push rbp
 1007a42:	mov    rbp,rsp
 1007a45:	push   rdi
 1007a46:	mov    eax,0x14e8
 1007a4b:	call   0x1011fe0
 1007a50:	sub    rsp,rax
 1007a53:	mov    rax,QWORD PTR [rip+0xd906]        # 0x1015360
 1007a5a:	xor    rax,rsp
 1007a5d:	mov    QWORD PTR [rbp-0x20],rax
 1007a61:	cmp    DWORD PTR [rip+0x1542c],0x0        # 0x101ce94
 1007a68:	je     0x1007c98
 1007a6e:	mov    QWORD PTR [rsp+0x60],0x0
 1007a77:	mov    QWORD PTR [rsp+0x68],0x0
 1007a80:	movzx  eax,WORD PTR [rip+0xffffffffffff9d39]        # 0x10017c0
 1007a87:	mov    WORD PTR [rsp+0xbb0],ax
 1007a8f:	lea    rax,[rsp+0xbb2]
 1007a97:	mov    rdi,rax
 1007a9a:	xor    eax,eax
 1007a9c:	mov    ecx,0x7fe
 1007aa1:	rep stos BYTE PTR es:[rdi],al
 1007aa3:	mov    eax,DWORD PTR [rip+0xffffffffffffaacb]        # 0x1002574
 1007aa9:	mov    DWORD PTR [rsp+0x3b0],eax
 1007ab0:	lea    rax,[rsp+0x3b4]
 1007ab8:	mov    rdi,rax
 1007abb:	xor    eax,eax
 1007abd:	mov    ecx,0x7fc
 1007ac2:	rep stos BYTE PTR es:[rdi],al
 1007ac4:	movzx  eax,WORD PTR [rip+0xffffffffffff9cf5]        # 0x10017c0
 1007acb:	mov    WORD PTR [rsp+0x13b0],ax
 1007ad3:	lea    rax,[rsp+0x13b2]
 1007adb:	mov    rdi,rax
 1007ade:	xor    eax,eax
 1007ae0:	mov    ecx,0x6
 1007ae5:	rep stos BYTE PTR es:[rdi],al
 1007ae7:	mov    QWORD PTR [rsp+0x78],0x0
 1007af0:	xor    eax,eax
 1007af2:	mov    WORD PTR [rsp+0xbae],ax
 1007afa:	lea    rax,[rip+0xd8af]        # 0x10153b0
 1007b01:	mov    QWORD PTR [rsp+0x60],rax
 1007b06:	mov    dx,0x2e
 1007b0a:	mov    rcx,QWORD PTR [rsp+0x60]
 1007b0f:	call   0x1003720
 1007b14:	mov    QWORD PTR [rsp+0x60],rax
 1007b19:	cmp    QWORD PTR [rsp+0x60],0x0
 1007b1f:	je     0x1007b3b
 1007b21:	mov    rax,QWORD PTR [rsp+0x60]
 1007b26:	mov    QWORD PTR [rsp+0x68],rax
 1007b2b:	mov    rax,QWORD PTR [rsp+0x60]
 1007b30:	add    rax,0x2
 1007b34:	mov    QWORD PTR [rsp+0x60],rax
 1007b39:	jmp    0x1007b06
 1007b3b:	cmp    QWORD PTR [rsp+0x68],0x0
 1007b41:	je     0x1007b8f
 1007b43:	xor    eax,eax
 1007b45:	mov    rcx,QWORD PTR [rsp+0x68]
 1007b4a:	mov    WORD PTR [rcx],ax
 1007b4d:	lea    r8,[rip+0xd85c]        # 0x10153b0
 1007b54:	mov    edx,0x400
 1007b59:	lea    rcx,[rsp+0xbb0]
 1007b61:	call   QWORD PTR [rip+0xffffffffffff97c1]        # 0x1001328
 1007b67:	mov    rax,QWORD PTR [rsp+0x68]
 1007b6c:	add    rax,0x2
 1007b70:	mov    QWORD PTR [rsp+0x68],rax
 1007b75:	mov    r8,QWORD PTR [rsp+0x68]
 1007b7a:	mov    edx,0x400
 1007b7f:	lea    rcx,[rsp+0x3b0]
 1007b87:	call   QWORD PTR [rip+0xffffffffffff9783]        # 0x1001310
 1007b8d:	jmp    0x1007ba9
 1007b8f:	lea    r8,[rip+0xd81a]        # 0x10153b0
 1007b96:	mov    edx,0x400
 1007b9b:	lea    rcx,[rsp+0xbb0]
 1007ba3:	call   QWORD PTR [rip+0xffffffffffff977f]        # 0x1001328
 1007ba9:	lea    rcx,[rsp+0x3b0]
 1007bb1:	call   QWORD PTR [rip+0xffffffffffff9779]        # 0x1001330
 1007bb7:	cmp    rax,0x2
 1007bbb:	jne    0x1007bd7
 1007bbd:	lea    r8,[rip+0xffffffffffffa9b4]        # 0x1002578
 1007bc4:	mov    edx,0x400
 1007bc9:	lea    rcx,[rsp+0x3b0]
 1007bd1:	call   QWORD PTR [rip+0xffffffffffff9739]        # 0x1001310
 1007bd7:	lea    rcx,[rsp+0xbb0]
 1007bdf:	call   QWORD PTR [rip+0xffffffffffff974b]        # 0x1001330
 1007be5:	movzx  eax,WORD PTR [rsp+rax*2+0xbae]
 1007bed:	cmp    eax,0x5f
 1007bf0:	je     0x1007c0c
 1007bf2:	lea    r8,[rip+0xffffffffffffa987]        # 0x1002580
 1007bf9:	mov    edx,0x4
 1007bfe:	lea    rcx,[rsp+0x13b0]
 1007c06:	call   QWORD PTR [rip+0xffffffffffff971c]        # 0x1001328
 1007c0c:	lea    rcx,[rsp+0x80]
 1007c14:	call   QWORD PTR [rip+0xffffffffffff9446]        # 0x1001060
 1007c1a:	movzx  eax,WORD PTR [rsp+0x8a]
 1007c22:	movzx  ecx,WORD PTR [rsp+0x88]
 1007c2a:	movzx  edx,WORD PTR [rsp+0x86]
 1007c32:	movzx  edi,WORD PTR [rsp+0x82]
 1007c3a:	movzx  r8d,WORD PTR [rsp+0x80]
 1007c43:	lea    r9,[rsp+0x3b0]
 1007c4b:	mov    QWORD PTR [rsp+0x50],r9
 1007c50:	mov    DWORD PTR [rsp+0x48],eax
 1007c54:	mov    DWORD PTR [rsp+0x40],ecx
 1007c58:	mov    DWORD PTR [rsp+0x38],edx
 1007c5c:	mov    DWORD PTR [rsp+0x30],edi
 1007c60:	mov    DWORD PTR [rsp+0x28],r8d
 1007c65:	lea    rax,[rsp+0x13b0]
 1007c6d:	mov    QWORD PTR [rsp+0x20],rax
 1007c72:	lea    r9,[rsp+0xbb0]
 1007c7a:	lea    r8,[rip+0xffffffffffffa90f]        # 0x1002590
 1007c81:	mov    edx,0x12c
 1007c86:	lea    rcx,[rip+0xd723]        # 0x10153b0
 1007c8d:	call   QWORD PTR [rip+0xffffffffffff9565]        # 0x10011f8
 1007c93:	jmp    0x1007de0
 1007c98:	movzx  eax,WORD PTR [rip+0x16201]        # 0x101dea0
 1007c9f:	test   eax,eax
 1007ca1:	jne    0x1007cad
 1007ca3:	mov    eax,0x1
 1007ca8:	jmp    0x1007e51
 1007cad:	mov    DWORD PTR [rip+0x151dd],0x1        # 0x101ce94
 1007cb7:	mov    eax,DWORD PTR [rip+0x151d7]        # 0x101ce94
 1007cbd:	mov    DWORD PTR [rip+0x151d9],eax        # 0x101ce9c
 1007cc3:	call   QWORD PTR [rip+0xffffffffffff9367]        # 0x1001030
 1007cc9:	cmp    eax,0x80000000
 1007cce:	jae    0x1007d13
 1007cd0:	lea    rdx,[rsp+0x1a0]
 1007cd8:	mov    ecx,0x104
 1007cdd:	call   QWORD PTR [rip+0xffffffffffff93ad]        # 0x1001090
 1007ce3:	test   eax,eax
 1007ce5:	je     0x1007d0a
 1007ce7:	lea    r9,[rip+0xd6c2]        # 0x10153b0
 1007cee:	xor    r8d,r8d
 1007cf1:	lea    rdx,[rip+0xffffffffffffa8d8]        # 0x10025d0
 1007cf8:	lea    rcx,[rsp+0x1a0]
 1007d00:	call   QWORD PTR [rip+0xffffffffffff939a]        # 0x10010a0
 1007d06:	test   eax,eax
 1007d08:	jne    0x1007d11
 1007d0a:	xor    eax,eax
 1007d0c:	jmp    0x1007e51
 1007d11:	jmp    0x1007d84
 1007d13:	lea    rdx,[rsp+0x13c0]
 1007d1b:	mov    ecx,0x104
 1007d20:	call   QWORD PTR [rip+0xffffffffffff9362]        # 0x1001088
 1007d26:	test   eax,eax
 1007d28:	je     0x1007d4e
 1007d2a:	lea    r9,[rsp+0x90]
 1007d32:	xor    r8d,r8d
 1007d35:	lea    rdx,[rip+0xffffffffffffa89c]        # 0x10025d8
 1007d3c:	lea    rcx,[rsp+0x13c0]
 1007d44:	call   QWORD PTR [rip+0xffffffffffff934e]        # 0x1001098
 1007d4a:	test   eax,eax
 1007d4c:	jne    0x1007d55
 1007d4e:	xor    eax,eax
 1007d50:	jmp    0x1007e51
 1007d55:	mov    DWORD PTR [rsp+0x28],0x104
 1007d5d:	lea    rax,[rip+0xd64c]        # 0x10153b0
 1007d64:	mov    QWORD PTR [rsp+0x20],rax
 1007d69:	mov    r9d,0xffffffff
 1007d6f:	lea    r8,[rsp+0x90]
 1007d77:	xor    edx,edx
 1007d79:	mov    ecx,0x1
 1007d7e:	call   QWORD PTR [rip+0xffffffffffff9354]        # 0x10010d8
 1007d84:	lea    rcx,[rip+0xd625]        # 0x10153b0
 1007d8b:	call   QWORD PTR [rip+0xffffffffffff959f]        # 0x1001330
 1007d91:	mov    QWORD PTR [rsp+0x70],rax
 1007d96:	cmp    QWORD PTR [rsp+0x70],0x3
 1007d9c:	jbe    0x1007de0
 1007d9e:	lea    rax,[rip+0xd60b]        # 0x10153b0
 1007da5:	mov    ecx,0x74
 1007daa:	mov    rdx,QWORD PTR [rsp+0x70]
 1007daf:	mov    WORD PTR [rax+rdx*2-0x6],cx
 1007db4:	lea    rax,[rip+0xd5f5]        # 0x10153b0
 1007dbb:	mov    ecx,0x78
 1007dc0:	mov    rdx,QWORD PTR [rsp+0x70]
 1007dc5:	mov    WORD PTR [rax+rdx*2-0x4],cx
 1007dca:	lea    rax,[rip+0xd5df]        # 0x10153b0
 1007dd1:	mov    ecx,0x74
 1007dd6:	mov    rdx,QWORD PTR [rsp+0x70]
 1007ddb:	mov    WORD PTR [rax+rdx*2-0x2],cx
 1007de0:	lea    rcx,[rip+0xd5c9]        # 0x10153b0
 1007de7:	call   0x1008730
 1007dec:	mov    QWORD PTR [rip+0xd5a5],rax        # 0x1015398
 1007df3:	cmp    QWORD PTR [rip+0xd59d],0x0        # 0x1015398
 1007dfb:	jne    0x1007e13
 1007dfd:	call   QWORD PTR [rip+0xffffffffffff9235]        # 0x1001038
 1007e03:	mov    edx,0x3a
 1007e08:	mov    ecx,eax
 1007e0a:	call   0x1007460
 1007e0f:	xor    eax,eax
 1007e11:	jmp    0x1007e51
 1007e13:	mov    r8d,0x1000
 1007e19:	lea    rdx,[rip+0x13070]        # 0x101ae90
 1007e20:	mov    ecx,0x1
 1007e25:	call   0x1008800
 1007e2a:	lea    r9,[rip+0xffffffffffffa7af]        # 0x10025e0
 1007e31:	lea    r8,[rip+0xffffffffffff9a88]        # 0x10018c0
 1007e38:	lea    rdx,[rip+0x13051]        # 0x101ae90
 1007e3f:	mov    rcx,QWORD PTR [rip+0xd552]        # 0x1015398
 1007e46:	call   QWORD PTR [rip+0xffffffffffff939c]        # 0x10011e8
 1007e4c:	mov    eax,0x1
 1007e51:	mov    rcx,QWORD PTR [rbp-0x20]
 1007e55:	xor    rcx,rsp
 1007e58:	call   0x1012040
 1007e5d:	add    rsp,0x14e8
 1007e64:	pop    rdi
 1007e65:	pop    rbp
 1007e66:	ret    
 1007e67:	int3   
 1007e68:	int3   
 1007e69:	int3   
 1007e6a:	int3   
 1007e6b:	int3   
 1007e6c:	int3   
 1007e6d:	int3   
 1007e6e:	int3   
 1007e6f:	int3   
 1007e70:	rex push rbp
 1007e72:	mov    rbp,rsp
 1007e75:	sub    rsp,0x20
 1007e79:	cmp    QWORD PTR [rip+0xd517],0x0        # 0x1015398
 1007e81:	je     0x1007e90
 1007e83:	mov    rcx,QWORD PTR [rip+0xd50e]        # 0x1015398
 1007e8a:	call   QWORD PTR [rip+0xffffffffffff9328]        # 0x10011b8
 1007e90:	mov    QWORD PTR [rip+0xd4fd],0x0        # 0x1015398
 1007e9b:	cmp    DWORD PTR [rip+0x14ffa],0x0        # 0x101ce9c
 1007ea2:	je     0x1007eb0
 1007ea4:	lea    rcx,[rip+0xd505]        # 0x10153b0
 1007eab:	call   0x1008680
 1007eb0:	add    rsp,0x20
 1007eb4:	pop    rbp
 1007eb5:	ret    
 1007eb6:	int3   
 1007eb7:	int3   
 1007eb8:	int3   
 1007eb9:	int3   
 1007eba:	int3   
 1007ebb:	int3   
 1007ebc:	int3   
 1007ebd:	int3   
 1007ebe:	int3   
 1007ebf:	int3   
 1007ec0:	rex push rbp
 1007ec2:	mov    rbp,rsp
 1007ec5:	push   rdi
 1007ec6:	mov    eax,0x30a8
 1007ecb:	call   0x1011fe0
 1007ed0:	sub    rsp,rax
 1007ed3:	mov    rax,QWORD PTR [rip+0xd486]        # 0x1015360
 1007eda:	xor    rax,rsp
 1007edd:	mov    QWORD PTR [rbp-0x20],rax
 1007ee1:	mov    QWORD PTR [rsp+0x60],0x0
 1007eea:	mov    QWORD PTR [rsp+0x68],0x0
 1007ef3:	mov    eax,DWORD PTR [rip+0xffffffffffffa67b]        # 0x1002574
 1007ef9:	mov    DWORD PTR [rsp+0x90],eax
 1007f00:	lea    rax,[rsp+0x94]
 1007f08:	mov    rdi,rax
 1007f0b:	xor    eax,eax
 1007f0d:	mov    ecx,0x7fc
 1007f12:	rep stos BYTE PTR es:[rdi],al
 1007f14:	movzx  eax,WORD PTR [rip+0xffffffffffff98a5]        # 0x10017c0
 1007f1b:	mov    WORD PTR [rsp+0x88],ax
 1007f23:	lea    rax,[rsp+0x8a]
 1007f2b:	mov    rdi,rax
 1007f2e:	xor    eax,eax
 1007f30:	mov    ecx,0x6
 1007f35:	rep stos BYTE PTR es:[rdi],al
 1007f37:	movzx  eax,WORD PTR [rip+0xffffffffffff9882]        # 0x10017c0
 1007f3e:	mov    WORD PTR [rsp+0x2890],ax
 1007f46:	lea    rax,[rsp+0x2892]
 1007f4e:	mov    rdi,rax
 1007f51:	xor    eax,eax
 1007f53:	mov    ecx,0x7fe
 1007f58:	rep stos BYTE PTR es:[rdi],al
 1007f5a:	mov    QWORD PTR [rsp+0x70],0x0
 1007f63:	lea    rax,[rip+0xdea6]        # 0x1015e10
 1007f6a:	mov    QWORD PTR [rsp+0x60],rax
 1007f6f:	xor    eax,eax
 1007f71:	mov    WORD PTR [rsp+0x88e],ax
 1007f79:	mov    dx,0x2e
 1007f7d:	mov    rcx,QWORD PTR [rsp+0x60]
 1007f82:	call   0x1003720
 1007f87:	mov    QWORD PTR [rsp+0x60],rax
 1007f8c:	cmp    QWORD PTR [rsp+0x60],0x0
 1007f92:	je     0x1007fae
 1007f94:	mov    rax,QWORD PTR [rsp+0x60]
 1007f99:	mov    QWORD PTR [rsp+0x68],rax
 1007f9e:	mov    rax,QWORD PTR [rsp+0x60]
 1007fa3:	add    rax,0x2
 1007fa7:	mov    QWORD PTR [rsp+0x60],rax
 1007fac:	jmp    0x1007f79
 1007fae:	cmp    QWORD PTR [rsp+0x68],0x0
 1007fb4:	je     0x1008002
 1007fb6:	xor    eax,eax
 1007fb8:	mov    rcx,QWORD PTR [rsp+0x68]
 1007fbd:	mov    WORD PTR [rcx],ax
 1007fc0:	lea    r8,[rip+0xde49]        # 0x1015e10
 1007fc7:	mov    edx,0x400
 1007fcc:	lea    rcx,[rsp+0x2890]
 1007fd4:	call   QWORD PTR [rip+0xffffffffffff934e]        # 0x1001328
 1007fda:	mov    rax,QWORD PTR [rsp+0x68]
 1007fdf:	add    rax,0x2
 1007fe3:	mov    QWORD PTR [rsp+0x68],rax
 1007fe8:	mov    r8,QWORD PTR [rsp+0x68]
 1007fed:	mov    edx,0x400
 1007ff2:	lea    rcx,[rsp+0x90]
 1007ffa:	call   QWORD PTR [rip+0xffffffffffff9310]        # 0x1001310
 1008000:	jmp    0x100801c
 1008002:	lea    r8,[rip+0xde07]        # 0x1015e10
 1008009:	mov    edx,0x400
 100800e:	lea    rcx,[rsp+0x2890]
 1008016:	call   QWORD PTR [rip+0xffffffffffff930c]        # 0x1001328
 100801c:	lea    rcx,[rsp+0x90]
 1008024:	call   QWORD PTR [rip+0xffffffffffff9306]        # 0x1001330
 100802a:	cmp    rax,0x2
 100802e:	jne    0x100804a
 1008030:	lea    r8,[rip+0xffffffffffffa5b9]        # 0x10025f0
 1008037:	mov    edx,0x400
 100803c:	lea    rcx,[rsp+0x90]
 1008044:	call   QWORD PTR [rip+0xffffffffffff92c6]        # 0x1001310
 100804a:	lea    rcx,[rsp+0x2890]
 1008052:	call   QWORD PTR [rip+0xffffffffffff92d8]        # 0x1001330
 1008058:	movzx  eax,WORD PTR [rsp+rax*2+0x288e]
 1008060:	cmp    eax,0x5f
 1008063:	je     0x100807f
 1008065:	lea    r8,[rip+0xffffffffffffa514]        # 0x1002580
 100806c:	mov    edx,0x4
 1008071:	lea    rcx,[rsp+0x88]
 1008079:	call   QWORD PTR [rip+0xffffffffffff92a9]        # 0x1001328
 100807f:	lea    rcx,[rsp+0x78]
 1008084:	call   QWORD PTR [rip+0xffffffffffff8fd6]        # 0x1001060
 100808a:	movzx  eax,WORD PTR [rsp+0x82]
 1008092:	movzx  ecx,WORD PTR [rsp+0x80]
 100809a:	movzx  edx,WORD PTR [rsp+0x7e]
 100809f:	movzx  edi,WORD PTR [rsp+0x7a]
 10080a4:	movzx  r8d,WORD PTR [rsp+0x78]
 10080aa:	lea    r9,[rsp+0x90]
 10080b2:	mov    QWORD PTR [rsp+0x50],r9
 10080b7:	mov    DWORD PTR [rsp+0x48],eax
 10080bb:	mov    DWORD PTR [rsp+0x40],ecx
 10080bf:	mov    DWORD PTR [rsp+0x38],edx
 10080c3:	mov    DWORD PTR [rsp+0x30],edi
 10080c7:	mov    DWORD PTR [rsp+0x28],r8d
 10080cc:	lea    rax,[rsp+0x88]
 10080d4:	mov    QWORD PTR [rsp+0x20],rax
 10080d9:	lea    r9,[rsp+0x2890]
 10080e1:	lea    r8,[rip+0xffffffffffffa4a8]        # 0x1002590
 10080e8:	mov    edx,0x12c
 10080ed:	lea    rcx,[rip+0xdd1c]        # 0x1015e10
 10080f4:	call   QWORD PTR [rip+0xffffffffffff90fe]        # 0x10011f8
 10080fa:	movzx  eax,WORD PTR [rsp+0x7e]
 10080ff:	movzx  ecx,WORD PTR [rsp+0x7a]
 1008104:	movzx  edx,WORD PTR [rsp+0x78]
 1008109:	mov    DWORD PTR [rsp+0x28],eax
 100810d:	mov    DWORD PTR [rsp+0x20],ecx
 1008111:	mov    r9d,edx
 1008114:	lea    r8,[rip+0xffffffffffffa4dd]        # 0x10025f8
 100811b:	mov    edx,0x400
 1008120:	lea    rcx,[rip+0x14d79]        # 0x101cea0
 1008127:	call   QWORD PTR [rip+0xffffffffffff90cb]        # 0x10011f8
 100812d:	lea    rcx,[rip+0xdcdc]        # 0x1015e10
 1008134:	call   0x1008730
 1008139:	mov    QWORD PTR [rip+0xd260],rax        # 0x10153a0
 1008140:	cmp    QWORD PTR [rip+0xd258],0x0        # 0x10153a0
 1008148:	jne    0x1008163
 100814a:	call   QWORD PTR [rip+0xffffffffffff8ee8]        # 0x1001038
 1008150:	mov    edx,0x3a
 1008155:	mov    ecx,eax
 1008157:	call   0x1007460
 100815c:	xor    eax,eax
 100815e:	jmp    0x1008269
 1008163:	movzx  eax,WORD PTR [rip+0xffffffffffff9656]        # 0x10017c0
 100816a:	mov    WORD PTR [rsp+0x890],ax
 1008172:	lea    rax,[rsp+0x892]
 100817a:	mov    rdi,rax
 100817d:	xor    eax,eax
 100817f:	mov    ecx,0x7fe
 1008184:	rep stos BYTE PTR es:[rdi],al
 1008186:	movzx  eax,WORD PTR [rip+0xffffffffffff9633]        # 0x10017c0
 100818d:	mov    WORD PTR [rsp+0x1890],ax
 1008195:	lea    rax,[rsp+0x1892]
 100819d:	mov    rdi,rax
 10081a0:	xor    eax,eax
 10081a2:	mov    ecx,0xffe
 10081a7:	rep stos BYTE PTR es:[rdi],al
 10081a9:	movzx  eax,WORD PTR [rip+0xffffffffffff9610]        # 0x10017c0
 10081b0:	mov    WORD PTR [rsp+0x1090],ax
 10081b8:	lea    rax,[rsp+0x1092]
 10081c0:	mov    rdi,rax
 10081c3:	xor    eax,eax
 10081c5:	mov    ecx,0x7fe
 10081ca:	rep stos BYTE PTR es:[rdi],al
 10081cc:	lea    r8,[rip+0xffffffffffffa43d]        # 0x1002610
 10081d3:	mov    edx,0x800
 10081d8:	lea    rcx,[rsp+0x1890]
 10081e0:	call   QWORD PTR [rip+0xffffffffffff9142]        # 0x1001328
 10081e6:	mov    edx,0x400
 10081eb:	lea    rcx,[rsp+0x890]
 10081f3:	call   0x10088d0
 10081f8:	lea    r9,[rsp+0x890]
 1008200:	lea    r8,[rip+0xffffffffffffa519]        # 0x1002720
 1008207:	mov    edx,0x400
 100820c:	lea    rcx,[rsp+0x1090]
 1008214:	call   QWORD PTR [rip+0xffffffffffff8fde]        # 0x10011f8
 100821a:	lea    r8,[rsp+0x1090]
 1008222:	mov    edx,0x800
 1008227:	lea    rcx,[rsp+0x1890]
 100822f:	call   QWORD PTR [rip+0xffffffffffff90db]        # 0x1001310
 1008235:	lea    r8,[rip+0xffffffffffffa674]        # 0x10028b0
 100823c:	mov    edx,0x800
 1008241:	lea    rcx,[rsp+0x1890]
 1008249:	call   QWORD PTR [rip+0xffffffffffff90c1]        # 0x1001310
 100824f:	mov    rdx,QWORD PTR [rip+0xd14a]        # 0x10153a0
 1008256:	lea    rcx,[rsp+0x1890]
 100825e:	call   QWORD PTR [rip+0xffffffffffff8f74]        # 0x10011d8
 1008264:	mov    eax,0x1
 1008269:	mov    rcx,QWORD PTR [rbp-0x20]
 100826d:	xor    rcx,rsp
 1008270:	call   0x1012040
 1008275:	add    rsp,0x30a8
 100827c:	pop    rdi
 100827d:	pop    rbp
 100827e:	ret    
 100827f:	int3   
 1008280:	int3   
 1008281:	int3   
 1008282:	int3   
 1008283:	int3   
 1008284:	int3   
 1008285:	int3   
 1008286:	int3   
 1008287:	int3   
 1008288:	int3   
 1008289:	int3   
 100828a:	int3   
 100828b:	int3   
 100828c:	int3   
 100828d:	int3   
 100828e:	int3   
 100828f:	int3   
 1008290:	rex push rbp
 1008292:	mov    rbp,rsp
 1008295:	sub    rsp,0x20
 1008299:	cmp    QWORD PTR [rip+0xd0ff],0x0        # 0x10153a0
 10082a1:	je     0x10082cf
 10082a3:	lea    rdx,[rip+0xffffffffffffa896]        # 0x1002b40
 10082aa:	mov    rcx,QWORD PTR [rip+0xd0ef]        # 0x10153a0
 10082b1:	call   QWORD PTR [rip+0xffffffffffff8f31]        # 0x10011e8
 10082b7:	mov    rcx,QWORD PTR [rip+0xd0e2]        # 0x10153a0
 10082be:	call   QWORD PTR [rip+0xffffffffffff8ef4]        # 0x10011b8
 10082c4:	mov    QWORD PTR [rip+0xd0d1],0x0        # 0x10153a0
 10082cf:	add    rsp,0x20
 10082d3:	pop    rbp
 10082d4:	ret    
 10082d5:	int3   
 10082d6:	int3   
 10082d7:	int3   
 10082d8:	int3   
 10082d9:	int3   
 10082da:	int3   
 10082db:	int3   
 10082dc:	int3   
 10082dd:	int3   
 10082de:	int3   
 10082df:	int3   
 10082e0:	rex push rbp
 10082e2:	mov    rbp,rsp
 10082e5:	push   rdi
 10082e6:	mov    eax,0x3448
 10082eb:	call   0x1011fe0
 10082f0:	sub    rsp,rax
 10082f3:	mov    rax,QWORD PTR [rip+0xd066]        # 0x1015360
 10082fa:	xor    rax,rsp
 10082fd:	mov    QWORD PTR [rbp-0x20],rax
 1008301:	lea    rcx,[rsp+0x32f8]
 1008309:	call   0x10038c0
 100830e:	mov    r8d,0xc8
 1008314:	lea    rdx,[rsp+0x90]
 100831c:	mov    ecx,DWORD PTR [rip+0x175ee]        # 0x101f910
 1008322:	call   0x1008800
 1008327:	mov    rax,QWORD PTR [rip+0x175da]        # 0x101f908
 100832e:	mov    rcx,QWORD PTR [rsp+0x32f8]
 1008336:	sub    rcx,rax
 1008339:	mov    rax,rcx
 100833c:	mov    DWORD PTR [rsp+0x74],eax
 1008340:	xor    eax,eax
 1008342:	mov    WORD PTR [rip+0x169bb],ax        # 0x101ed04
 1008349:	cmp    QWORD PTR [rip+0xd04f],0x0        # 0x10153a0
 1008351:	je     0x1008461
 1008357:	call   0x1008a50
 100835c:	cmp    DWORD PTR [rip+0x175a1],0x0        # 0x101f904
 1008363:	je     0x100836f
 1008365:	mov    DWORD PTR [rsp+0x70],0x37
 100836d:	jmp    0x1008377
 100836f:	mov    DWORD PTR [rsp+0x70],0x38
 1008377:	mov    eax,DWORD PTR [rsp+0x70]
 100837b:	mov    DWORD PTR [rsp+0x78],eax
 100837f:	mov    r8d,0x64
 1008385:	lea    rdx,[rsp+0x3360]
 100838d:	mov    ecx,DWORD PTR [rsp+0x78]
 1008391:	call   0x1008800
 1008396:	lea    rax,[rip+0x16567]        # 0x101e904
 100839d:	mov    QWORD PTR [rsp+0x38],rax
 10083a2:	lea    rax,[rsp+0x3360]
 10083aa:	mov    QWORD PTR [rsp+0x30],rax
 10083af:	lea    rax,[rip+0x152ea]        # 0x101d6a0
 10083b6:	mov    QWORD PTR [rsp+0x28],rax
 10083bb:	lea    rax,[rsp+0x90]
 10083c3:	mov    QWORD PTR [rsp+0x20],rax
 10083c8:	lea    r9,[rip+0x16431]        # 0x101e800
 10083cf:	lea    r8,[rip+0xffffffffffffa7fa]        # 0x1002bd0
 10083d6:	mov    edx,0x400
 10083db:	lea    rcx,[rsp+0x350]
 10083e3:	call   QWORD PTR [rip+0xffffffffffff8e0f]        # 0x10011f8
 10083e9:	lea    rcx,[rsp+0x350]
 10083f1:	call   QWORD PTR [rip+0xffffffffffff8f39]        # 0x1001330
 10083f7:	mov    QWORD PTR [rsp+0x3300],rax
 10083ff:	mov    QWORD PTR [rsp+0x68],0x0
 1008408:	jmp    0x1008417
 100840a:	mov    rax,QWORD PTR [rsp+0x68]
 100840f:	inc    rax
 1008412:	mov    QWORD PTR [rsp+0x68],rax
 1008417:	mov    rax,QWORD PTR [rsp+0x3300]
 100841f:	cmp    QWORD PTR [rsp+0x68],rax
 1008424:	jae    0x100844c
 1008426:	mov    rax,QWORD PTR [rsp+0x68]
 100842b:	movzx  eax,WORD PTR [rsp+rax*2+0x350]
 1008433:	cmp    eax,0x40
 1008436:	jne    0x100844a
 1008438:	mov    eax,0x25
 100843d:	mov    rcx,QWORD PTR [rsp+0x68]
 1008442:	mov    WORD PTR [rsp+rcx*2+0x350],ax
 100844a:	jmp    0x100840a
 100844c:	mov    rdx,QWORD PTR [rip+0xcf4d]        # 0x10153a0
 1008453:	lea    rcx,[rsp+0x350]
 100845b:	call   QWORD PTR [rip+0xffffffffffff8d77]        # 0x10011d8
 1008461:	cmp    DWORD PTR [rip+0x15b64],0x0        # 0x101dfcc
 1008468:	jne    0x100847e
 100846a:	lea    rcx,[rip+0x17ea7]        # 0x1020318
 1008471:	call   0x100f040
 1008476:	test   eax,eax
 1008478:	je     0x1008662
 100847e:	mov    r8d,0x96
 1008484:	lea    rdx,[rsp+0x220]
 100848c:	lea    rcx,[rip+0x1636d]        # 0x101e800
 1008493:	call   0x1008be0
 1008498:	movzx  eax,WORD PTR [rip+0x15c41]        # 0x101e0e0
 100849f:	test   eax,eax
 10084a1:	jne    0x10084d8
 10084a3:	lea    r8,[rip+0xffffffffffffa866]        # 0x1002d10
 10084aa:	mov    edx,0x28
 10084af:	lea    rcx,[rsp+0x3310]
 10084b7:	call   QWORD PTR [rip+0xffffffffffff8e6b]        # 0x1001328
 10084bd:	lea    r8,[rip+0xffffffffffffa89c]        # 0x1002d60
 10084c4:	mov    edx,0x100
 10084c9:	lea    rcx,[rip+0x179b0]        # 0x101fe80
 10084d0:	call   QWORD PTR [rip+0xffffffffffff8e52]        # 0x1001328
 10084d6:	jmp    0x10084f2
 10084d8:	lea    r8,[rip+0x15c01]        # 0x101e0e0
 10084df:	mov    edx,0x28
 10084e4:	lea    rcx,[rsp+0x3310]
 10084ec:	call   QWORD PTR [rip+0xffffffffffff8e36]        # 0x1001328
 10084f2:	movzx  eax,WORD PTR [rip+0xffffffffffff92c7]        # 0x10017c0
 10084f9:	mov    WORD PTR [rsp+0xb50],ax
 1008501:	lea    rax,[rsp+0xb52]
 1008509:	mov    rdi,rax
 100850c:	xor    eax,eax
 100850e:	mov    ecx,0x7fe
 1008513:	rep stos BYTE PTR es:[rdi],al
 1008515:	mov    r8d,0x400
 100851b:	lea    rdx,[rsp+0xb50]
 1008523:	lea    rcx,[rip+0x163da]        # 0x101e904
 100852a:	call   0x1008be0
 100852f:	cmp    DWORD PTR [rip+0x173ce],0x0        # 0x101f904
 1008536:	je     0x1008542
 1008538:	mov    DWORD PTR [rsp+0x60],0x1
 1008540:	jmp    0x100854a
 1008542:	mov    DWORD PTR [rsp+0x60],0x0
 100854a:	lea    rax,[rsp+0xb50]
 1008552:	mov    QWORD PTR [rsp+0x58],rax
 1008557:	mov    eax,DWORD PTR [rip+0x173b7]        # 0x101f914
 100855d:	mov    DWORD PTR [rsp+0x50],eax
 1008561:	mov    eax,DWORD PTR [rsp+0x74]
 1008565:	mov    DWORD PTR [rsp+0x48],eax
 1008569:	mov    eax,DWORD PTR [rsp+0x60]
 100856d:	mov    DWORD PTR [rsp+0x40],eax
 1008571:	lea    rax,[rsp+0x90]
 1008579:	mov    QWORD PTR [rsp+0x38],rax
 100857e:	lea    rax,[rsp+0x220]
 1008586:	mov    QWORD PTR [rsp+0x30],rax
 100858b:	lea    rax,[rip+0x17aee]        # 0x1020080
 1008592:	mov    QWORD PTR [rsp+0x28],rax
 1008597:	lea    rax,[rip+0x178e2]        # 0x101fe80
 100859e:	mov    QWORD PTR [rsp+0x20],rax
 10085a3:	lea    r9,[rsp+0x3310]
 10085ab:	lea    r8,[rip+0xffffffffffffa7de]        # 0x1002d90
 10085b2:	mov    edx,0xfd0
 10085b7:	lea    rcx,[rsp+0x1350]
 10085bf:	call   QWORD PTR [rip+0xffffffffffff8c33]        # 0x10011f8
 10085c5:	cmp    DWORD PTR [rip+0x15a00],0x0        # 0x101dfcc
 10085cc:	je     0x1008610
 10085ce:	lea    rcx,[rip+0x17d4b]        # 0x1020320
 10085d5:	call   0x100f0e0
 10085da:	mov    QWORD PTR [rsp+0x80],rax
 10085e2:	mov    rax,QWORD PTR [rsp+0x80]
 10085ea:	mov    rax,QWORD PTR [rax]
 10085ed:	xor    r9d,r9d
 10085f0:	xor    r8d,r8d
 10085f3:	lea    rdx,[rsp+0x1350]
 10085fb:	mov    rcx,QWORD PTR [rsp+0x80]
 1008603:	call   QWORD PTR [rax+0x2d8]
 1008609:	mov    ecx,eax
 100860b:	call   0x1006e20
 1008610:	lea    rcx,[rip+0x17d01]        # 0x1020318
 1008617:	call   0x100f040
 100861c:	test   eax,eax
 100861e:	je     0x1008662
 1008620:	lea    rcx,[rip+0x17cf1]        # 0x1020318
 1008627:	call   0x100f0e0
 100862c:	mov    QWORD PTR [rsp+0x32f0],rax
 1008634:	mov    rax,QWORD PTR [rsp+0x32f0]
 100863c:	mov    rax,QWORD PTR [rax]
 100863f:	xor    r9d,r9d
 1008642:	xor    r8d,r8d
 1008645:	lea    rdx,[rsp+0x1350]
 100864d:	mov    rcx,QWORD PTR [rsp+0x32f0]
 1008655:	call   QWORD PTR [rax+0x2d8]
 100865b:	mov    ecx,eax
 100865d:	call   0x1006e20
 1008662:	mov    rcx,QWORD PTR [rbp-0x20]
 1008666:	xor    rcx,rsp
 1008669:	call   0x1012040
 100866e:	add    rsp,0x3448
 1008675:	pop    rdi
 1008676:	pop    rbp
 1008677:	ret    
 1008678:	int3   
 1008679:	int3   
 100867a:	int3   
 100867b:	int3   
 100867c:	int3   
 100867d:	int3   
 100867e:	int3   
 100867f:	int3   
 1008680:	mov    QWORD PTR [rsp+0x8],rcx
 1008685:	push   rbp
 1008686:	mov    rbp,rsp
 1008689:	sub    rsp,0x450
 1008690:	mov    rax,QWORD PTR [rip+0xccc9]        # 0x1015360
 1008697:	xor    rax,rsp
 100869a:	mov    QWORD PTR [rbp-0x10],rax
 100869e:	call   QWORD PTR [rip+0xffffffffffff898c]        # 0x1001030
 10086a4:	cmp    eax,0x80000000
 10086a9:	jae    0x10086b9
 10086ab:	mov    rcx,QWORD PTR [rbp+0x10]
 10086af:	call   QWORD PTR [rip+0xffffffffffff8b5b]        # 0x1001210
 10086b5:	jmp    0x1008711
 10086b7:	jmp    0x1008711
 10086b9:	cmp    QWORD PTR [rbp+0x10],0x0
 10086be:	je     0x10086ff
 10086c0:	mov    QWORD PTR [rsp+0x38],0x0
 10086c9:	mov    QWORD PTR [rsp+0x30],0x0
 10086d2:	mov    DWORD PTR [rsp+0x28],0x400
 10086da:	lea    rax,[rsp+0x40]
 10086df:	mov    QWORD PTR [rsp+0x20],rax
 10086e4:	mov    r9d,0xffffffff
 10086ea:	mov    r8,QWORD PTR [rbp+0x10]
 10086ee:	xor    edx,edx
 10086f0:	mov    ecx,0x1
 10086f5:	call   QWORD PTR [rip+0xffffffffffff89e5]        # 0x10010e0
 10086fb:	test   eax,eax
 10086fd:	jg     0x1008706
 10086ff:	mov    eax,0x1
 1008704:	jmp    0x1008711
 1008706:	lea    rcx,[rsp+0x40]
 100870b:	call   QWORD PTR [rip+0xffffffffffff8abf]        # 0x10011d0
 1008711:	mov    rcx,QWORD PTR [rbp-0x10]
 1008715:	xor    rcx,rsp
 1008718:	call   0x1012040
 100871d:	add    rsp,0x450
 1008724:	pop    rbp
 1008725:	ret    
 1008726:	int3   
 1008727:	int3   
 1008728:	int3   
 1008729:	int3   
 100872a:	int3   
 100872b:	int3   
 100872c:	int3   
 100872d:	int3   
 100872e:	int3   
 100872f:	int3   
 1008730:	mov    QWORD PTR [rsp+0x8],rcx
 1008735:	push   rbp
 1008736:	mov    rbp,rsp
 1008739:	sub    rsp,0x450
 1008740:	mov    rax,QWORD PTR [rip+0xcc19]        # 0x1015360
 1008747:	xor    rax,rsp
 100874a:	mov    QWORD PTR [rbp-0x10],rax
 100874e:	mov    rcx,QWORD PTR [rbp+0x10]
 1008752:	call   0x100f2e0
 1008757:	test   eax,eax
 1008759:	je     0x100875f
 100875b:	xor    eax,eax
 100875d:	jmp    0x10087dd
 100875f:	call   QWORD PTR [rip+0xffffffffffff88cb]        # 0x1001030
 1008765:	cmp    eax,0x80000000
 100876a:	jae    0x1008781
 100876c:	lea    rdx,[rip+0xffffffffffffa40d]        # 0x1002b80
 1008773:	mov    rcx,QWORD PTR [rbp+0x10]
 1008777:	call   QWORD PTR [rip+0xffffffffffff8a8b]        # 0x1001208
 100877d:	jmp    0x10087dd
 100877f:	jmp    0x10087dd
 1008781:	cmp    QWORD PTR [rbp+0x10],0x0
 1008786:	je     0x10087c7
 1008788:	mov    QWORD PTR [rsp+0x38],0x0
 1008791:	mov    QWORD PTR [rsp+0x30],0x0
 100879a:	mov    DWORD PTR [rsp+0x28],0x400
 10087a2:	lea    rax,[rsp+0x40]
 10087a7:	mov    QWORD PTR [rsp+0x20],rax
 10087ac:	mov    r9d,0xffffffff
 10087b2:	mov    r8,QWORD PTR [rbp+0x10]
 10087b6:	xor    edx,edx
 10087b8:	mov    ecx,0x1
 10087bd:	call   QWORD PTR [rip+0xffffffffffff891d]        # 0x10010e0
 10087c3:	test   eax,eax
 10087c5:	jg     0x10087cb
 10087c7:	xor    eax,eax
 10087c9:	jmp    0x10087dd
 10087cb:	lea    rdx,[rip+0xffffffffffffa3b6]        # 0x1002b88
 10087d2:	lea    rcx,[rsp+0x40]
 10087d7:	call   QWORD PTR [rip+0xffffffffffff89eb]        # 0x10011c8
 10087dd:	mov    rcx,QWORD PTR [rbp-0x10]
 10087e1:	xor    rcx,rsp
 10087e4:	call   0x1012040
 10087e9:	add    rsp,0x450
 10087f0:	pop    rbp
 10087f1:	ret    
 10087f2:	int3   
 10087f3:	int3   
 10087f4:	int3   
 10087f5:	int3   
 10087f6:	int3   
 10087f7:	int3   
 10087f8:	int3   
 10087f9:	int3   
 10087fa:	int3   
 10087fb:	int3   
 10087fc:	int3   
 10087fd:	int3   
 10087fe:	int3   
 10087ff:	int3   
 1008800:	mov    DWORD PTR [rsp+0x18],r8d
 1008805:	mov    QWORD PTR [rsp+0x10],rdx
 100880a:	mov    DWORD PTR [rsp+0x8],ecx
 100880e:	push   rbp
 100880f:	mov    rbp,rsp
 1008812:	sub    rsp,0x440
 1008819:	mov    rax,QWORD PTR [rip+0xcb40]        # 0x1015360
 1008820:	xor    rax,rsp
 1008823:	mov    QWORD PTR [rbp-0x10],rax
 1008827:	call   QWORD PTR [rip+0xffffffffffff8803]        # 0x1001030
 100882d:	cmp    eax,0x80000000
 1008832:	jae    0x100884e
 1008834:	mov    r9d,DWORD PTR [rbp+0x20]
 1008838:	mov    r8,QWORD PTR [rbp+0x18]
 100883c:	mov    edx,DWORD PTR [rbp+0x10]
 100883f:	mov    rcx,QWORD PTR [rip+0x15b12]        # 0x101e358
 1008846:	call   QWORD PTR [rip+0xffffffffffff8b44]        # 0x1001390
 100884c:	jmp    0x10088ab
 100884e:	mov    r9d,0x400
 1008854:	lea    r8,[rsp+0x30]
 1008859:	mov    edx,DWORD PTR [rbp+0x10]
 100885c:	mov    rcx,QWORD PTR [rip+0x15af5]        # 0x101e358
 1008863:	call   QWORD PTR [rip+0xffffffffffff8b2f]        # 0x1001398
 1008869:	test   eax,eax
 100886b:	jle    0x10088a9
 100886d:	mov    eax,DWORD PTR [rbp+0x20]
 1008870:	mov    DWORD PTR [rsp+0x28],eax
 1008874:	mov    rax,QWORD PTR [rbp+0x18]
 1008878:	mov    QWORD PTR [rsp+0x20],rax
 100887d:	mov    r9d,0xffffffff
 1008883:	lea    r8,[rsp+0x30]
 1008888:	xor    edx,edx
 100888a:	mov    ecx,0x1
 100888f:	call   QWORD PTR [rip+0xffffffffffff8843]        # 0x10010d8
 1008895:	test   eax,eax
 1008897:	jg     0x100889d
 1008899:	xor    eax,eax
 100889b:	jmp    0x10088ab
 100889d:	mov    rcx,QWORD PTR [rbp+0x18]
 10088a1:	call   QWORD PTR [rip+0xffffffffffff8a89]        # 0x1001330
 10088a7:	jmp    0x10088ab
 10088a9:	xor    eax,eax
 10088ab:	mov    rcx,QWORD PTR [rbp-0x10]
 10088af:	xor    rcx,rsp
 10088b2:	call   0x1012040
 10088b7:	add    rsp,0x440
 10088be:	pop    rbp
 10088bf:	ret    
 10088c0:	int3   
 10088c1:	int3   
 10088c2:	int3   
 10088c3:	int3   
 10088c4:	int3   
 10088c5:	int3   
 10088c6:	int3   
 10088c7:	int3   
 10088c8:	int3   
 10088c9:	int3   
 10088ca:	int3   
 10088cb:	int3   
 10088cc:	int3   
 10088cd:	int3   
 10088ce:	int3   
 10088cf:	int3   
 10088d0:	mov    DWORD PTR [rsp+0x10],edx
 10088d4:	mov    QWORD PTR [rsp+0x8],rcx
 10088d9:	push   rbp
 10088da:	mov    rbp,rsp
 10088dd:	sub    rsp,0x60
 10088e1:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
 10088ea:	cmp    QWORD PTR [rsp+0x70],0x0
 10088f0:	jne    0x10088f9
 10088f2:	xor    eax,eax
 10088f4:	jmp    0x1008a42
 10088f9:	xor    eax,eax
 10088fb:	mov    rcx,QWORD PTR [rsp+0x70]
 1008900:	mov    WORD PTR [rcx],ax
 1008903:	lea    rcx,[rsp+0x28]
 1008908:	call   0x1011540
 100890d:	nop
 100890e:	lea    rcx,[rsp+0x20]
 1008913:	call   0x10038f0
 1008918:	nop
 1008919:	lea    rcx,[rip+0x17a00]        # 0x1020320
 1008920:	call   0x100f0a0
 1008925:	test   eax,eax
 1008927:	jne    0x10089d4
 100892d:	lea    rcx,[rip+0x179ec]        # 0x1020320
 1008934:	call   0x100f0e0
 1008939:	mov    QWORD PTR [rsp+0x38],rax
 100893e:	lea    rcx,[rsp+0x28]
 1008943:	call   0x1011610
 1008948:	mov    rcx,QWORD PTR [rsp+0x38]
 100894d:	mov    rcx,QWORD PTR [rcx]
 1008950:	mov    QWORD PTR [rsp+0x48],rcx
 1008955:	mov    rdx,rax
 1008958:	mov    rcx,QWORD PTR [rsp+0x38]
 100895d:	mov    rax,QWORD PTR [rsp+0x48]
 1008962:	call   QWORD PTR [rax+0x1a0]
 1008968:	mov    ecx,eax
 100896a:	call   0x1006e20
 100896f:	test   eax,eax
 1008971:	jne    0x10089d4
 1008973:	lea    rcx,[rsp+0x28]
 1008978:	call   0x10115d0
 100897d:	test   eax,eax
 100897f:	je     0x10089d4
 1008981:	lea    rcx,[rsp+0x28]
 1008986:	call   0x1011630
 100898b:	mov    QWORD PTR [rsp+0x40],rax
 1008990:	lea    rcx,[rsp+0x20]
 1008995:	call   0x10039d0
 100899a:	mov    rcx,QWORD PTR [rsp+0x40]
 100899f:	mov    rcx,QWORD PTR [rcx]
 10089a2:	mov    QWORD PTR [rsp+0x50],rcx
 10089a7:	mov    rdx,rax
 10089aa:	mov    rcx,QWORD PTR [rsp+0x40]
 10089af:	mov    rax,QWORD PTR [rsp+0x50]
 10089b4:	call   QWORD PTR [rax+0x100]
 10089ba:	mov    ecx,eax
 10089bc:	call   0x1006e20
 10089c1:	test   eax,eax
 10089c3:	jne    0x10089d4
 10089c5:	lea    rcx,[rsp+0x20]
 10089ca:	call   0x1003990
 10089cf:	test   rax,rax
 10089d2:	jne    0x10089f7
 10089d4:	mov    DWORD PTR [rsp+0x34],0x0
 10089dc:	lea    rcx,[rsp+0x20]
 10089e1:	call   0x1003920
 10089e6:	nop
 10089e7:	lea    rcx,[rsp+0x28]
 10089ec:	call   0x1011570
 10089f1:	mov    eax,DWORD PTR [rsp+0x34]
 10089f5:	jmp    0x1008a42
 10089f7:	lea    rcx,[rsp+0x20]
 10089fc:	call   0x10039b0
 1008a01:	movsxd rcx,DWORD PTR [rsp+0x78]
 1008a06:	mov    r8,rax
 1008a09:	mov    rdx,rcx
 1008a0c:	mov    rcx,QWORD PTR [rsp+0x70]
 1008a11:	call   QWORD PTR [rip+0xffffffffffff8911]        # 0x1001328
 1008a17:	lea    rcx,[rsp+0x20]
 1008a1c:	call   0x1003950
 1008a21:	mov    DWORD PTR [rsp+0x30],0x1
 1008a29:	lea    rcx,[rsp+0x20]
 1008a2e:	call   0x1003920
 1008a33:	nop
 1008a34:	lea    rcx,[rsp+0x28]
 1008a39:	call   0x1011570
 1008a3e:	mov    eax,DWORD PTR [rsp+0x30]
 1008a42:	add    rsp,0x60
 1008a46:	pop    rbp
 1008a47:	ret    
 1008a48:	int3   
 1008a49:	int3   
 1008a4a:	int3   
 1008a4b:	int3   
 1008a4c:	int3   
 1008a4d:	int3   
 1008a4e:	int3   
 1008a4f:	int3   
 1008a50:	rex push rbp
 1008a52:	mov    rbp,rsp
 1008a55:	mov    eax,0x1040
 1008a5a:	call   0x1011fe0
 1008a5f:	sub    rsp,rax
 1008a62:	mov    rax,QWORD PTR [rip+0xc8f7]        # 0x1015360
 1008a69:	xor    rax,rsp
 1008a6c:	mov    QWORD PTR [rbp-0x10],rax
 1008a70:	call   QWORD PTR [rip+0xffffffffffff85ba]        # 0x1001030
 1008a76:	cmp    eax,0x80000000
 1008a7b:	jae    0x1008b08
 1008a81:	mov    DWORD PTR [rsp+0x28],0x400
 1008a89:	lea    rax,[rip+0x14c10]        # 0x101d6a0
 1008a90:	mov    QWORD PTR [rsp+0x20],rax
 1008a95:	xor    r9d,r9d
 1008a98:	xor    r8d,r8d
 1008a9b:	xor    edx,edx
 1008a9d:	mov    ecx,0x400
 1008aa2:	call   QWORD PTR [rip+0xffffffffffff8658]        # 0x1001100
 1008aa8:	mov    DWORD PTR [rsp+0x28],0x400
 1008ab0:	lea    rax,[rsp+0x430]
 1008ab8:	mov    QWORD PTR [rsp+0x20],rax
 1008abd:	xor    r9d,r9d
 1008ac0:	xor    r8d,r8d
 1008ac3:	xor    edx,edx
 1008ac5:	mov    ecx,0x400
 1008aca:	call   QWORD PTR [rip+0xffffffffffff8620]        # 0x10010f0
 1008ad0:	lea    r8,[rip+0xffffffffffff8e15]        # 0x10018ec
 1008ad7:	mov    edx,0x400
 1008adc:	lea    rcx,[rip+0x14bbd]        # 0x101d6a0
 1008ae3:	call   QWORD PTR [rip+0xffffffffffff8827]        # 0x1001310
 1008ae9:	lea    r8,[rsp+0x430]
 1008af1:	mov    edx,0x400
 1008af6:	lea    rcx,[rip+0x14ba3]        # 0x101d6a0
 1008afd:	call   QWORD PTR [rip+0xffffffffffff880d]        # 0x1001310
 1008b03:	jmp    0x1008bc4
 1008b08:	mov    BYTE PTR [rsp+0xc30],0x0
 1008b10:	movzx  eax,BYTE PTR [rsp+0xc30]
 1008b18:	mov    BYTE PTR [rsp+0x30],al
 1008b1c:	mov    DWORD PTR [rsp+0x28],0x400
 1008b24:	lea    rax,[rsp+0x30]
 1008b29:	mov    QWORD PTR [rsp+0x20],rax
 1008b2e:	xor    r9d,r9d
 1008b31:	xor    r8d,r8d
 1008b34:	xor    edx,edx
 1008b36:	mov    ecx,0x400
 1008b3b:	call   QWORD PTR [rip+0xffffffffffff85b7]        # 0x10010f8
 1008b41:	mov    DWORD PTR [rsp+0x28],0x400
 1008b49:	lea    rax,[rsp+0xc30]
 1008b51:	mov    QWORD PTR [rsp+0x20],rax
 1008b56:	xor    r9d,r9d
 1008b59:	xor    r8d,r8d
 1008b5c:	xor    edx,edx
 1008b5e:	mov    ecx,0x400
 1008b63:	call   QWORD PTR [rip+0xffffffffffff857f]        # 0x10010e8
 1008b69:	lea    r8,[rip+0xffffffffffffa01c]        # 0x1002b8c
 1008b70:	mov    edx,0x400
 1008b75:	lea    rcx,[rsp+0x30]
 1008b7a:	call   QWORD PTR [rip+0xffffffffffff8788]        # 0x1001308
 1008b80:	lea    r8,[rsp+0xc30]
 1008b88:	mov    edx,0x400
 1008b8d:	lea    rcx,[rsp+0x30]
 1008b92:	call   QWORD PTR [rip+0xffffffffffff8770]        # 0x1001308
 1008b98:	mov    DWORD PTR [rsp+0x28],0x400
 1008ba0:	lea    rax,[rip+0x14af9]        # 0x101d6a0
 1008ba7:	mov    QWORD PTR [rsp+0x20],rax
 1008bac:	mov    r9d,0xffffffff
 1008bb2:	lea    r8,[rsp+0x30]
 1008bb7:	xor    edx,edx
 1008bb9:	mov    ecx,0x1
 1008bbe:	call   QWORD PTR [rip+0xffffffffffff8514]        # 0x10010d8
 1008bc4:	mov    rcx,QWORD PTR [rbp-0x10]
 1008bc8:	xor    rcx,rsp
 1008bcb:	call   0x1012040
 1008bd0:	add    rsp,0x1040
 1008bd7:	pop    rbp
 1008bd8:	ret    
 1008bd9:	int3   
 1008bda:	int3   
 1008bdb:	int3   
 1008bdc:	int3   
 1008bdd:	int3   
 1008bde:	int3   
 1008bdf:	int3   
 1008be0:	mov    DWORD PTR [rsp+0x18],r8d
 1008be5:	mov    QWORD PTR [rsp+0x10],rdx
 1008bea:	mov    QWORD PTR [rsp+0x8],rcx
 1008bef:	push   rbp
 1008bf0:	mov    rbp,rsp
 1008bf3:	sub    rsp,0x10
 1008bf7:	cmp    QWORD PTR [rsp+0x20],0x0
 1008bfd:	je     0x1008c0e
 1008bff:	cmp    QWORD PTR [rsp+0x28],0x0
 1008c05:	je     0x1008c0e
 1008c07:	cmp    DWORD PTR [rsp+0x30],0x1
 1008c0c:	jge    0x1008c15
 1008c0e:	xor    eax,eax
 1008c10:	jmp    0x1008d1c
 1008c15:	mov    DWORD PTR [rsp+0x4],0x0
 1008c1d:	mov    DWORD PTR [rsp],0x0
 1008c24:	mov    DWORD PTR [rsp],0x0
 1008c2b:	jmp    0x1008c35
 1008c2d:	mov    eax,DWORD PTR [rsp]
 1008c30:	inc    eax
 1008c32:	mov    DWORD PTR [rsp],eax
 1008c35:	mov    eax,DWORD PTR [rsp+0x4]
 1008c39:	mov    ecx,DWORD PTR [rsp+0x30]
 1008c3d:	sub    ecx,eax
 1008c3f:	mov    eax,ecx
 1008c41:	dec    eax
 1008c43:	cmp    DWORD PTR [rsp],eax
 1008c46:	jge    0x1008cc4
 1008c48:	movsxd rax,DWORD PTR [rsp]
 1008c4c:	mov    rcx,QWORD PTR [rsp+0x20]
 1008c51:	movzx  eax,WORD PTR [rcx+rax*2]
 1008c55:	test   eax,eax
 1008c57:	je     0x1008cc4
 1008c59:	movsxd rax,DWORD PTR [rsp]
 1008c5d:	mov    rcx,QWORD PTR [rsp+0x20]
 1008c62:	movzx  eax,WORD PTR [rcx+rax*2]
 1008c66:	cmp    eax,0x27
 1008c69:	jne    0x1008c9a
 1008c6b:	movsxd rax,DWORD PTR [rsp]
 1008c6f:	mov    ecx,DWORD PTR [rsp+0x4]
 1008c73:	mov    edx,DWORD PTR [rsp]
 1008c76:	add    edx,ecx
 1008c78:	mov    ecx,edx
 1008c7a:	movsxd rcx,ecx
 1008c7d:	mov    rdx,QWORD PTR [rsp+0x28]
 1008c82:	mov    r8,QWORD PTR [rsp+0x20]
 1008c87:	movzx  eax,WORD PTR [r8+rax*2]
 1008c8c:	mov    WORD PTR [rdx+rcx*2],ax
 1008c90:	mov    eax,DWORD PTR [rsp+0x4]
 1008c94:	inc    eax
 1008c96:	mov    DWORD PTR [rsp+0x4],eax
 1008c9a:	movsxd rax,DWORD PTR [rsp]
 1008c9e:	mov    ecx,DWORD PTR [rsp+0x4]
 1008ca2:	mov    edx,DWORD PTR [rsp]
 1008ca5:	add    edx,ecx
 1008ca7:	mov    ecx,edx
 1008ca9:	movsxd rcx,ecx
 1008cac:	mov    rdx,QWORD PTR [rsp+0x28]
 1008cb1:	mov    r8,QWORD PTR [rsp+0x20]
 1008cb6:	movzx  eax,WORD PTR [r8+rax*2]
 1008cbb:	mov    WORD PTR [rdx+rcx*2],ax
 1008cbf:	jmp    0x1008c2d
 1008cc4:	mov    eax,DWORD PTR [rsp+0x4]
 1008cc8:	mov    ecx,DWORD PTR [rsp]
 1008ccb:	add    ecx,eax
 1008ccd:	mov    eax,ecx
 1008ccf:	mov    ecx,DWORD PTR [rsp+0x30]
 1008cd3:	dec    ecx
 1008cd5:	cmp    eax,ecx
 1008cd7:	jge    0x1008cf1
 1008cd9:	mov    eax,DWORD PTR [rsp+0x4]
 1008cdd:	mov    ecx,DWORD PTR [rsp]
 1008ce0:	add    ecx,eax
 1008ce2:	mov    eax,ecx
 1008ce4:	cdqe   
 1008ce6:	xor    ecx,ecx
 1008ce8:	mov    rdx,QWORD PTR [rsp+0x28]
 1008ced:	mov    WORD PTR [rdx+rax*2],cx
 1008cf1:	mov    eax,DWORD PTR [rsp+0x4]
 1008cf5:	mov    ecx,DWORD PTR [rsp]
 1008cf8:	add    ecx,eax
 1008cfa:	mov    eax,ecx
 1008cfc:	mov    ecx,DWORD PTR [rsp+0x30]
 1008d00:	dec    ecx
 1008d02:	cmp    eax,ecx
 1008d04:	jge    0x1008d10
 1008d06:	mov    DWORD PTR [rsp+0x8],0x1
 1008d0e:	jmp    0x1008d18
 1008d10:	mov    DWORD PTR [rsp+0x8],0x0
 1008d18:	mov    eax,DWORD PTR [rsp+0x8]
 1008d1c:	add    rsp,0x10
 1008d20:	pop    rbp
 1008d21:	ret    
 1008d22:	int3   
 1008d23:	int3   
 1008d24:	int3   
 1008d25:	int3   
 1008d26:	int3   
 1008d27:	int3   
 1008d28:	int3   
 1008d29:	int3   
 1008d2a:	int3   
 1008d2b:	int3   
 1008d2c:	int3   
 1008d2d:	int3   
 1008d2e:	int3   
 1008d2f:	int3   
 1008d30:	mov    QWORD PTR [rsp+0x10],rdx
 1008d35:	mov    QWORD PTR [rsp+0x8],rcx
 1008d3a:	push   rbp
 1008d3b:	mov    rbp,rsp
 1008d3e:	sub    rsp,0x30
 1008d42:	cmp    QWORD PTR [rsp+0x40],0x0
 1008d48:	je     0x1008d52
 1008d4a:	cmp    QWORD PTR [rsp+0x48],0x0
 1008d50:	jne    0x1008d59
 1008d52:	xor    eax,eax
 1008d54:	jmp    0x1008ee8
 1008d59:	mov    rax,QWORD PTR [rsp+0x48]
 1008d5e:	mov    DWORD PTR [rax],0x0
 1008d64:	mov    rcx,QWORD PTR [rsp+0x40]
 1008d69:	call   QWORD PTR [rip+0xffffffffffff85c1]        # 0x1001330
 1008d6f:	mov    QWORD PTR [rsp+0x28],rax
 1008d74:	mov    QWORD PTR [rsp+0x20],0x0
 1008d7d:	mov    QWORD PTR [rsp+0x20],0x0
 1008d86:	jmp    0x1008d95
 1008d88:	mov    rax,QWORD PTR [rsp+0x20]
 1008d8d:	inc    rax
 1008d90:	mov    QWORD PTR [rsp+0x20],rax
 1008d95:	mov    rax,QWORD PTR [rsp+0x28]
 1008d9a:	cmp    QWORD PTR [rsp+0x20],rax
 1008d9f:	jae    0x1008dde
 1008da1:	mov    rax,QWORD PTR [rsp+0x40]
 1008da6:	mov    rcx,QWORD PTR [rsp+0x20]
 1008dab:	movzx  ecx,WORD PTR [rax+rcx*2]
 1008daf:	call   QWORD PTR [rip+0xffffffffffff8533]        # 0x10012e8
 1008db5:	test   eax,eax
 1008db7:	je     0x1008dde
 1008db9:	mov    rax,QWORD PTR [rsp+0x48]
 1008dbe:	mov    eax,DWORD PTR [rax]
 1008dc0:	imul   eax,eax,0xa
 1008dc3:	mov    rcx,QWORD PTR [rsp+0x40]
 1008dc8:	mov    rdx,QWORD PTR [rsp+0x20]
 1008dcd:	movzx  ecx,WORD PTR [rcx+rdx*2]
 1008dd1:	lea    eax,[rax+rcx*1-0x30]
 1008dd5:	mov    rcx,QWORD PTR [rsp+0x48]
 1008dda:	mov    DWORD PTR [rcx],eax
 1008ddc:	jmp    0x1008d88
 1008dde:	mov    rax,QWORD PTR [rsp+0x28]
 1008de3:	cmp    QWORD PTR [rsp+0x20],rax
 1008de8:	jae    0x1008e0c
 1008dea:	mov    rax,QWORD PTR [rsp+0x40]
 1008def:	mov    rcx,QWORD PTR [rsp+0x20]
 1008df4:	lea    rax,[rax+rcx*2]
 1008df8:	lea    rdx,[rip+0xffffffffffff9d91]        # 0x1002b90
 1008dff:	mov    rcx,rax
 1008e02:	call   QWORD PTR [rip+0xffffffffffff8540]        # 0x1001348
 1008e08:	test   eax,eax
 1008e0a:	jne    0x1008e25
 1008e0c:	mov    rax,QWORD PTR [rsp+0x48]
 1008e11:	mov    eax,DWORD PTR [rax]
 1008e13:	imul   eax,eax,0x28de80
 1008e19:	mov    rcx,QWORD PTR [rsp+0x48]
 1008e1e:	mov    DWORD PTR [rcx],eax
 1008e20:	jmp    0x1008ee1
 1008e25:	mov    rax,QWORD PTR [rsp+0x40]
 1008e2a:	mov    rcx,QWORD PTR [rsp+0x20]
 1008e2f:	lea    rax,[rax+rcx*2]
 1008e33:	lea    rdx,[rip+0xffffffffffff9d66]        # 0x1002ba0
 1008e3a:	mov    rcx,rax
 1008e3d:	call   QWORD PTR [rip+0xffffffffffff8505]        # 0x1001348
 1008e43:	test   eax,eax
 1008e45:	jne    0x1008e60
 1008e47:	mov    rax,QWORD PTR [rsp+0x48]
 1008e4c:	mov    eax,DWORD PTR [rax]
 1008e4e:	imul   eax,eax,0xe10
 1008e54:	mov    rcx,QWORD PTR [rsp+0x48]
 1008e59:	mov    DWORD PTR [rcx],eax
 1008e5b:	jmp    0x1008ee1
 1008e60:	mov    rax,QWORD PTR [rsp+0x40]
 1008e65:	mov    rcx,QWORD PTR [rsp+0x20]
 1008e6a:	lea    rax,[rax+rcx*2]
 1008e6e:	lea    rdx,[rip+0xffffffffffff9d3b]        # 0x1002bb0
 1008e75:	mov    rcx,rax
 1008e78:	call   QWORD PTR [rip+0xffffffffffff84ca]        # 0x1001348
 1008e7e:	test   eax,eax
 1008e80:	jne    0x1008e98
 1008e82:	mov    rax,QWORD PTR [rsp+0x48]
 1008e87:	mov    eax,DWORD PTR [rax]
 1008e89:	imul   eax,eax,0x15180
 1008e8f:	mov    rcx,QWORD PTR [rsp+0x48]
 1008e94:	mov    DWORD PTR [rcx],eax
 1008e96:	jmp    0x1008ee1
 1008e98:	mov    rax,QWORD PTR [rsp+0x40]
 1008e9d:	mov    rcx,QWORD PTR [rsp+0x20]
 1008ea2:	lea    rax,[rax+rcx*2]
 1008ea6:	lea    rdx,[rip+0xffffffffffff9d13]        # 0x1002bc0
 1008ead:	mov    rcx,rax
 1008eb0:	call   QWORD PTR [rip+0xffffffffffff8492]        # 0x1001348
 1008eb6:	test   eax,eax
 1008eb8:	jne    0x1008ecd
 1008eba:	mov    rax,QWORD PTR [rsp+0x48]
 1008ebf:	mov    eax,DWORD PTR [rax]
 1008ec1:	imul   eax,eax,0x3c
 1008ec4:	mov    rcx,QWORD PTR [rsp+0x48]
 1008ec9:	mov    DWORD PTR [rcx],eax
 1008ecb:	jmp    0x1008ee1
 1008ecd:	mov    rax,QWORD PTR [rsp+0x48]
 1008ed2:	mov    eax,DWORD PTR [rax]
 1008ed4:	imul   eax,eax,0x93a80
 1008eda:	mov    rcx,QWORD PTR [rsp+0x48]
 1008edf:	mov    DWORD PTR [rcx],eax
 1008ee1:	mov    rax,QWORD PTR [rsp+0x48]
 1008ee6:	mov    eax,DWORD PTR [rax]
 1008ee8:	add    rsp,0x30
 1008eec:	pop    rbp
 1008eed:	ret    
 1008eee:	int3   
 1008eef:	int3   
 1008ef0:	int3   
 1008ef1:	int3   
 1008ef2:	int3   
 1008ef3:	int3   
 1008ef4:	int3   
 1008ef5:	int3   
 1008ef6:	int3   
 1008ef7:	int3   
 1008ef8:	int3   
 1008ef9:	int3   
 1008efa:	int3   
 1008efb:	int3   
 1008efc:	int3   
 1008efd:	int3   
 1008efe:	int3   
 1008eff:	int3   
 1008f00:	mov    QWORD PTR [rsp+0x8],rcx
 1008f05:	push   rbp
 1008f06:	mov    rbp,rsp
 1008f09:	sub    rsp,0x20
 1008f0d:	mov    rcx,QWORD PTR [rsp+0x30]
 1008f12:	call   QWORD PTR [rip+0xffffffffffff82c8]        # 0x10011e0
 1008f18:	cmp    DWORD PTR [rip+0x13f75],0x0        # 0x101ce94
 1008f1f:	je     0x1008f3d
 1008f21:	cmp    QWORD PTR [rip+0xc46f],0x0        # 0x1015398
 1008f29:	je     0x1008f3d
 1008f2b:	mov    rdx,QWORD PTR [rip+0xc466]        # 0x1015398
 1008f32:	mov    rcx,QWORD PTR [rsp+0x30]
 1008f37:	call   QWORD PTR [rip+0xffffffffffff829b]        # 0x10011d8
 1008f3d:	add    rsp,0x20
 1008f41:	pop    rbp
 1008f42:	ret    
 1008f43:	int3   
 1008f44:	int3   
 1008f45:	int3   
 1008f46:	int3   
 1008f47:	int3   
 1008f48:	int3   
 1008f49:	int3   
 1008f4a:	int3   
 1008f4b:	int3   
 1008f4c:	int3   
 1008f4d:	int3   
 1008f4e:	int3   
 1008f4f:	int3   
 1008f50:	mov    DWORD PTR [rsp+0x8],ecx
 1008f54:	push   rbp
 1008f55:	mov    rbp,rsp
 1008f58:	sub    rsp,0x40
 1008f5c:	mov    DWORD PTR [rsp+0x2c],0x1
 1008f64:	mov    DWORD PTR [rsp+0x28],0x0
 1008f6c:	mov    DWORD PTR [rsp+0x24],0x0
 1008f74:	jmp    0x1008f80
 1008f76:	mov    eax,DWORD PTR [rsp+0x24]
 1008f7a:	inc    eax
 1008f7c:	mov    DWORD PTR [rsp+0x24],eax
 1008f80:	mov    eax,DWORD PTR [rip+0x1503a]        # 0x101dfc0
 1008f86:	cmp    DWORD PTR [rsp+0x24],eax
 1008f8a:	jge    0x1008fa8
 1008f8c:	movsxd rax,DWORD PTR [rsp+0x24]
 1008f91:	imul   rax,rax,0xb78
 1008f98:	mov    rcx,QWORD PTR [rip+0x15019]        # 0x101dfb8
 1008f9f:	mov    DWORD PTR [rcx+rax*1],0x0
 1008fa6:	jmp    0x1008f76
 1008fa8:	cmp    DWORD PTR [rsp+0x28],0x0
 1008fad:	jne    0x10090cc
 1008fb3:	mov    DWORD PTR [rsp+0x28],0x1
 1008fbb:	mov    DWORD PTR [rsp+0x20],0x0
 1008fc3:	jmp    0x1008fcf
 1008fc5:	mov    eax,DWORD PTR [rsp+0x20]
 1008fc9:	inc    eax
 1008fcb:	mov    DWORD PTR [rsp+0x20],eax
 1008fcf:	mov    eax,DWORD PTR [rip+0x14feb]        # 0x101dfc0
 1008fd5:	cmp    DWORD PTR [rsp+0x20],eax
 1008fd9:	jge    0x10090b5
 1008fdf:	movsxd rax,DWORD PTR [rsp+0x20]
 1008fe4:	imul   rax,rax,0xb78
 1008feb:	mov    rcx,QWORD PTR [rip+0x14fc6]        # 0x101dfb8
 1008ff2:	cmp    DWORD PTR [rcx+rax*1],0x0
 1008ff6:	jne    0x10090b0
 1008ffc:	movsxd rax,DWORD PTR [rsp+0x20]
 1009001:	imul   rax,rax,0xb78
 1009008:	mov    rcx,QWORD PTR [rip+0x14fa9]        # 0x101dfb8
 100900f:	add    rcx,rax
 1009012:	mov    rax,rcx
 1009015:	mov    rcx,rax
 1009018:	call   0x100d560
 100901d:	test   eax,eax
 100901f:	jne    0x100902b
 1009021:	mov    DWORD PTR [rsp+0x28],0x0
 1009029:	jmp    0x1008fc5
 100902b:	movsxd rax,DWORD PTR [rsp+0x20]
 1009030:	imul   rax,rax,0xb78
 1009037:	mov    rcx,QWORD PTR [rip+0x14f7a]        # 0x101dfb8
 100903e:	mov    DWORD PTR [rcx+rax*1],0x1
 1009045:	movsxd rax,DWORD PTR [rsp+0x20]
 100904a:	imul   rax,rax,0xb78
 1009051:	mov    rcx,QWORD PTR [rip+0x14f60]        # 0x101dfb8
 1009058:	add    rcx,rax
 100905b:	mov    rax,rcx
 100905e:	mov    edx,DWORD PTR [rsp+0x50]
 1009062:	mov    rcx,rax
 1009065:	call   0x100aeb0
 100906a:	test   eax,eax
 100906c:	je     0x100907f
 100906e:	cmp    DWORD PTR [rsp+0x2c],0x0
 1009073:	je     0x100907f
 1009075:	mov    DWORD PTR [rsp+0x30],0x1
 100907d:	jmp    0x1009087
 100907f:	mov    DWORD PTR [rsp+0x30],0x0
 1009087:	mov    eax,DWORD PTR [rsp+0x30]
 100908b:	mov    DWORD PTR [rsp+0x2c],eax
 100908f:	movsxd rax,DWORD PTR [rsp+0x20]
 1009094:	imul   rax,rax,0xb78
 100909b:	mov    rcx,QWORD PTR [rip+0x14f16]        # 0x101dfb8
 10090a2:	add    rcx,rax
 10090a5:	mov    rax,rcx
 10090a8:	mov    rcx,rax
 10090ab:	call   0x100d690
 10090b0:	jmp    0x1008fc5
 10090b5:	cmp    DWORD PTR [rsp+0x28],0x0
 10090ba:	jne    0x10090c7
 10090bc:	mov    ecx,0x2710
 10090c1:	call   QWORD PTR [rip+0xffffffffffff7f79]        # 0x1001040
 10090c7:	jmp    0x1008fa8
 10090cc:	mov    eax,DWORD PTR [rsp+0x2c]
 10090d0:	add    rsp,0x40
 10090d4:	pop    rbp
 10090d5:	ret    
 10090d6:	int3   
 10090d7:	int3   
 10090d8:	int3   
 10090d9:	int3   
 10090da:	int3   
 10090db:	int3   
 10090dc:	int3   
 10090dd:	int3   
 10090de:	int3   
 10090df:	int3   
 10090e0:	mov    DWORD PTR [rsp+0x8],ecx
 10090e4:	push   rbp
 10090e5:	mov    rbp,rsp
 10090e8:	sub    rsp,0x40
 10090ec:	mov    DWORD PTR [rsp+0x2c],0x1
 10090f4:	mov    DWORD PTR [rsp+0x28],0x0
 10090fc:	mov    DWORD PTR [rsp+0x24],0x0
 1009104:	jmp    0x1009110
 1009106:	mov    eax,DWORD PTR [rsp+0x24]
 100910a:	inc    eax
 100910c:	mov    DWORD PTR [rsp+0x24],eax
 1009110:	mov    eax,DWORD PTR [rip+0x14eaa]        # 0x101dfc0
 1009116:	cmp    DWORD PTR [rsp+0x24],eax
 100911a:	jge    0x1009138
 100911c:	movsxd rax,DWORD PTR [rsp+0x24]
 1009121:	imul   rax,rax,0xb78
 1009128:	mov    rcx,QWORD PTR [rip+0x14e89]        # 0x101dfb8
 100912f:	mov    DWORD PTR [rcx+rax*1],0x0
 1009136:	jmp    0x1009106
 1009138:	cmp    DWORD PTR [rsp+0x28],0x0
 100913d:	jne    0x100925c
 1009143:	mov    DWORD PTR [rsp+0x28],0x1
 100914b:	mov    DWORD PTR [rsp+0x20],0x0
 1009153:	jmp    0x100915f
 1009155:	mov    eax,DWORD PTR [rsp+0x20]
 1009159:	inc    eax
 100915b:	mov    DWORD PTR [rsp+0x20],eax
 100915f:	mov    eax,DWORD PTR [rip+0x14e5b]        # 0x101dfc0
 1009165:	cmp    DWORD PTR [rsp+0x20],eax
 1009169:	jge    0x1009245
 100916f:	movsxd rax,DWORD PTR [rsp+0x20]
 1009174:	imul   rax,rax,0xb78
 100917b:	mov    rcx,QWORD PTR [rip+0x14e36]        # 0x101dfb8
 1009182:	cmp    DWORD PTR [rcx+rax*1],0x0
 1009186:	jne    0x1009240
 100918c:	movsxd rax,DWORD PTR [rsp+0x20]
 1009191:	imul   rax,rax,0xb78
 1009198:	mov    rcx,QWORD PTR [rip+0x14e19]        # 0x101dfb8
 100919f:	add    rcx,rax
 10091a2:	mov    rax,rcx
 10091a5:	mov    rcx,rax
 10091a8:	call   0x100d560
 10091ad:	test   eax,eax
 10091af:	jne    0x10091bb
 10091b1:	mov    DWORD PTR [rsp+0x28],0x0
 10091b9:	jmp    0x1009155
 10091bb:	movsxd rax,DWORD PTR [rsp+0x20]
 10091c0:	imul   rax,rax,0xb78
 10091c7:	mov    rcx,QWORD PTR [rip+0x14dea]        # 0x101dfb8
 10091ce:	mov    DWORD PTR [rcx+rax*1],0x1
 10091d5:	movsxd rax,DWORD PTR [rsp+0x20]
 10091da:	imul   rax,rax,0xb78
 10091e1:	mov    rcx,QWORD PTR [rip+0x14dd0]        # 0x101dfb8
 10091e8:	add    rcx,rax
 10091eb:	mov    rax,rcx
 10091ee:	mov    edx,DWORD PTR [rsp+0x50]
 10091f2:	mov    rcx,rax
 10091f5:	call   0x100b710
 10091fa:	test   eax,eax
 10091fc:	je     0x100920f
 10091fe:	cmp    DWORD PTR [rsp+0x2c],0x0
 1009203:	je     0x100920f
 1009205:	mov    DWORD PTR [rsp+0x30],0x1
 100920d:	jmp    0x1009217
 100920f:	mov    DWORD PTR [rsp+0x30],0x0
 1009217:	mov    eax,DWORD PTR [rsp+0x30]
 100921b:	mov    DWORD PTR [rsp+0x2c],eax
 100921f:	movsxd rax,DWORD PTR [rsp+0x20]
 1009224:	imul   rax,rax,0xb78
 100922b:	mov    rcx,QWORD PTR [rip+0x14d86]        # 0x101dfb8
 1009232:	add    rcx,rax
 1009235:	mov    rax,rcx
 1009238:	mov    rcx,rax
 100923b:	call   0x100d690
 1009240:	jmp    0x1009155
 1009245:	cmp    DWORD PTR [rsp+0x28],0x0
 100924a:	jne    0x1009257
 100924c:	mov    ecx,0x2710
 1009251:	call   QWORD PTR [rip+0xffffffffffff7de9]        # 0x1001040
 1009257:	jmp    0x1009138
 100925c:	mov    eax,DWORD PTR [rsp+0x2c]
 1009260:	add    rsp,0x40
 1009264:	pop    rbp
 1009265:	ret    
 1009266:	int3   
 1009267:	int3   
 1009268:	int3   
 1009269:	int3   
 100926a:	int3   
 100926b:	int3   
 100926c:	int3   
 100926d:	int3   
 100926e:	int3   
 100926f:	int3   
 1009270:	mov    DWORD PTR [rsp+0x8],ecx
 1009274:	push   rbp
 1009275:	mov    rbp,rsp
 1009278:	sub    rsp,0x40
 100927c:	mov    DWORD PTR [rsp+0x2c],0x1
 1009284:	mov    DWORD PTR [rsp+0x28],0x0
 100928c:	mov    DWORD PTR [rsp+0x24],0x0
 1009294:	jmp    0x10092a0
 1009296:	mov    eax,DWORD PTR [rsp+0x24]
 100929a:	inc    eax
 100929c:	mov    DWORD PTR [rsp+0x24],eax
 10092a0:	mov    eax,DWORD PTR [rip+0x14d1a]        # 0x101dfc0
 10092a6:	cmp    DWORD PTR [rsp+0x24],eax
 10092aa:	jge    0x10092c8
 10092ac:	movsxd rax,DWORD PTR [rsp+0x24]
 10092b1:	imul   rax,rax,0xb78
 10092b8:	mov    rcx,QWORD PTR [rip+0x14cf9]        # 0x101dfb8
 10092bf:	mov    DWORD PTR [rcx+rax*1],0x0
 10092c6:	jmp    0x1009296
 10092c8:	cmp    DWORD PTR [rsp+0x28],0x0
 10092cd:	jne    0x10093ec
 10092d3:	mov    DWORD PTR [rsp+0x28],0x1
 10092db:	mov    DWORD PTR [rsp+0x20],0x0
 10092e3:	jmp    0x10092ef
 10092e5:	mov    eax,DWORD PTR [rsp+0x20]
 10092e9:	inc    eax
 10092eb:	mov    DWORD PTR [rsp+0x20],eax
 10092ef:	mov    eax,DWORD PTR [rip+0x14ccb]        # 0x101dfc0
 10092f5:	cmp    DWORD PTR [rsp+0x20],eax
 10092f9:	jge    0x10093d5
 10092ff:	movsxd rax,DWORD PTR [rsp+0x20]
 1009304:	imul   rax,rax,0xb78
 100930b:	mov    rcx,QWORD PTR [rip+0x14ca6]        # 0x101dfb8
 1009312:	cmp    DWORD PTR [rcx+rax*1],0x0
 1009316:	jne    0x10093d0
 100931c:	movsxd rax,DWORD PTR [rsp+0x20]
 1009321:	imul   rax,rax,0xb78
 1009328:	mov    rcx,QWORD PTR [rip+0x14c89]        # 0x101dfb8
 100932f:	add    rcx,rax
 1009332:	mov    rax,rcx
 1009335:	mov    rcx,rax
 1009338:	call   0x100d560
 100933d:	test   eax,eax
 100933f:	jne    0x100934b
 1009341:	mov    DWORD PTR [rsp+0x28],0x0
 1009349:	jmp    0x10092e5
 100934b:	movsxd rax,DWORD PTR [rsp+0x20]
 1009350:	imul   rax,rax,0xb78
 1009357:	mov    rcx,QWORD PTR [rip+0x14c5a]        # 0x101dfb8
 100935e:	mov    DWORD PTR [rcx+rax*1],0x1
 1009365:	movsxd rax,DWORD PTR [rsp+0x20]
 100936a:	imul   rax,rax,0xb78
 1009371:	mov    rcx,QWORD PTR [rip+0x14c40]        # 0x101dfb8
 1009378:	add    rcx,rax
 100937b:	mov    rax,rcx
 100937e:	mov    edx,DWORD PTR [rsp+0x50]
 1009382:	mov    rcx,rax
 1009385:	call   0x100be90
 100938a:	test   eax,eax
 100938c:	je     0x100939f
 100938e:	cmp    DWORD PTR [rsp+0x2c],0x0
 1009393:	je     0x100939f
 1009395:	mov    DWORD PTR [rsp+0x30],0x1
 100939d:	jmp    0x10093a7
 100939f:	mov    DWORD PTR [rsp+0x30],0x0
 10093a7:	mov    eax,DWORD PTR [rsp+0x30]
 10093ab:	mov    DWORD PTR [rsp+0x2c],eax
 10093af:	movsxd rax,DWORD PTR [rsp+0x20]
 10093b4:	imul   rax,rax,0xb78
 10093bb:	mov    rcx,QWORD PTR [rip+0x14bf6]        # 0x101dfb8
 10093c2:	add    rcx,rax
 10093c5:	mov    rax,rcx
 10093c8:	mov    rcx,rax
 10093cb:	call   0x100d690
 10093d0:	jmp    0x10092e5
 10093d5:	cmp    DWORD PTR [rsp+0x28],0x0
 10093da:	jne    0x10093e7
 10093dc:	mov    ecx,0x2710
 10093e1:	call   QWORD PTR [rip+0xffffffffffff7c59]        # 0x1001040
 10093e7:	jmp    0x10092c8
 10093ec:	mov    eax,DWORD PTR [rsp+0x2c]
 10093f0:	add    rsp,0x40
 10093f4:	pop    rbp
 10093f5:	ret    
 10093f6:	int3   
 10093f7:	int3   
 10093f8:	int3   
 10093f9:	int3   
 10093fa:	int3   
 10093fb:	int3   
 10093fc:	int3   
 10093fd:	int3   
 10093fe:	int3   
 10093ff:	int3   
 1009400:	rex push rbp
 1009402:	mov    rbp,rsp
 1009405:	sub    rsp,0x40
 1009409:	mov    DWORD PTR [rsp+0x2c],0x1
 1009411:	mov    DWORD PTR [rsp+0x28],0x0
 1009419:	mov    DWORD PTR [rsp+0x24],0x0
 1009421:	jmp    0x100942d
 1009423:	mov    eax,DWORD PTR [rsp+0x24]
 1009427:	inc    eax
 1009429:	mov    DWORD PTR [rsp+0x24],eax
 100942d:	mov    eax,DWORD PTR [rip+0x14b8d]        # 0x101dfc0
 1009433:	cmp    DWORD PTR [rsp+0x24],eax
 1009437:	jge    0x1009455
 1009439:	movsxd rax,DWORD PTR [rsp+0x24]
 100943e:	imul   rax,rax,0xb78
 1009445:	mov    rcx,QWORD PTR [rip+0x14b6c]        # 0x101dfb8
 100944c:	mov    DWORD PTR [rcx+rax*1],0x0
 1009453:	jmp    0x1009423
 1009455:	cmp    DWORD PTR [rsp+0x28],0x0
 100945a:	jne    0x1009575
 1009460:	mov    DWORD PTR [rsp+0x28],0x1
 1009468:	mov    DWORD PTR [rsp+0x20],0x0
 1009470:	jmp    0x100947c
 1009472:	mov    eax,DWORD PTR [rsp+0x20]
 1009476:	inc    eax
 1009478:	mov    DWORD PTR [rsp+0x20],eax
 100947c:	mov    eax,DWORD PTR [rip+0x14b3e]        # 0x101dfc0
 1009482:	cmp    DWORD PTR [rsp+0x20],eax
 1009486:	jge    0x100955e
 100948c:	movsxd rax,DWORD PTR [rsp+0x20]
 1009491:	imul   rax,rax,0xb78
 1009498:	mov    rcx,QWORD PTR [rip+0x14b19]        # 0x101dfb8
 100949f:	cmp    DWORD PTR [rcx+rax*1],0x0
 10094a3:	jne    0x1009559
 10094a9:	movsxd rax,DWORD PTR [rsp+0x20]
 10094ae:	imul   rax,rax,0xb78
 10094b5:	mov    rcx,QWORD PTR [rip+0x14afc]        # 0x101dfb8
 10094bc:	add    rcx,rax
 10094bf:	mov    rax,rcx
 10094c2:	mov    rcx,rax
 10094c5:	call   0x100d560
 10094ca:	test   eax,eax
 10094cc:	jne    0x10094d8
 10094ce:	mov    DWORD PTR [rsp+0x28],0x0
 10094d6:	jmp    0x1009472
 10094d8:	movsxd rax,DWORD PTR [rsp+0x20]
 10094dd:	imul   rax,rax,0xb78
 10094e4:	mov    rcx,QWORD PTR [rip+0x14acd]        # 0x101dfb8
 10094eb:	mov    DWORD PTR [rcx+rax*1],0x1
 10094f2:	movsxd rax,DWORD PTR [rsp+0x20]
 10094f7:	imul   rax,rax,0xb78
 10094fe:	mov    rcx,QWORD PTR [rip+0x14ab3]        # 0x101dfb8
 1009505:	add    rcx,rax
 1009508:	mov    rax,rcx
 100950b:	mov    rcx,rax
 100950e:	call   0x100ce70
 1009513:	test   eax,eax
 1009515:	je     0x1009528
 1009517:	cmp    DWORD PTR [rsp+0x2c],0x0
 100951c:	je     0x1009528
 100951e:	mov    DWORD PTR [rsp+0x30],0x1
 1009526:	jmp    0x1009530
 1009528:	mov    DWORD PTR [rsp+0x30],0x0
 1009530:	mov    eax,DWORD PTR [rsp+0x30]
 1009534:	mov    DWORD PTR [rsp+0x2c],eax
 1009538:	movsxd rax,DWORD PTR [rsp+0x20]
 100953d:	imul   rax,rax,0xb78
 1009544:	mov    rcx,QWORD PTR [rip+0x14a6d]        # 0x101dfb8
 100954b:	add    rcx,rax
 100954e:	mov    rax,rcx
 1009551:	mov    rcx,rax
 1009554:	call   0x100d690
 1009559:	jmp    0x1009472
 100955e:	cmp    DWORD PTR [rsp+0x28],0x0
 1009563:	jne    0x1009570
 1009565:	mov    ecx,0x2710
 100956a:	call   QWORD PTR [rip+0xffffffffffff7ad0]        # 0x1001040
 1009570:	jmp    0x1009455
 1009575:	mov    eax,DWORD PTR [rsp+0x2c]
 1009579:	add    rsp,0x40
 100957d:	pop    rbp
 100957e:	ret    
 100957f:	int3   
 1009580:	int3   
 1009581:	int3   
 1009582:	int3   
 1009583:	int3   
 1009584:	int3   
 1009585:	int3   
 1009586:	int3   
 1009587:	int3   
 1009588:	int3   
 1009589:	int3   
 100958a:	int3   
 100958b:	int3   
 100958c:	int3   
 100958d:	int3   
 100958e:	int3   
 100958f:	int3   
 1009590:	mov    QWORD PTR [rsp+0x10],rdx
 1009595:	mov    QWORD PTR [rsp+0x8],rcx
 100959a:	push   rbp
 100959b:	mov    rbp,rsp
 100959e:	sub    rsp,0x40
 10095a2:	mov    DWORD PTR [rsp+0x2c],0x1
 10095aa:	mov    DWORD PTR [rsp+0x28],0x0
 10095b2:	mov    DWORD PTR [rsp+0x24],0x0
 10095ba:	jmp    0x10095c6
 10095bc:	mov    eax,DWORD PTR [rsp+0x24]
 10095c0:	inc    eax
 10095c2:	mov    DWORD PTR [rsp+0x24],eax
 10095c6:	mov    eax,DWORD PTR [rip+0x149f4]        # 0x101dfc0
 10095cc:	cmp    DWORD PTR [rsp+0x24],eax
 10095d0:	jge    0x10095ee
 10095d2:	movsxd rax,DWORD PTR [rsp+0x24]
 10095d7:	imul   rax,rax,0xb78
 10095de:	mov    rcx,QWORD PTR [rip+0x149d3]        # 0x101dfb8
 10095e5:	mov    DWORD PTR [rcx+rax*1],0x0
 10095ec:	jmp    0x10095bc
 10095ee:	cmp    DWORD PTR [rsp+0x28],0x0
 10095f3:	jne    0x1009718
 10095f9:	mov    DWORD PTR [rsp+0x28],0x1
 1009601:	mov    DWORD PTR [rsp+0x20],0x0
 1009609:	jmp    0x1009615
 100960b:	mov    eax,DWORD PTR [rsp+0x20]
 100960f:	inc    eax
 1009611:	mov    DWORD PTR [rsp+0x20],eax
 1009615:	mov    eax,DWORD PTR [rip+0x149a5]        # 0x101dfc0
 100961b:	cmp    DWORD PTR [rsp+0x20],eax
 100961f:	jge    0x1009701
 1009625:	movsxd rax,DWORD PTR [rsp+0x20]
 100962a:	imul   rax,rax,0xb78
 1009631:	mov    rcx,QWORD PTR [rip+0x14980]        # 0x101dfb8
 1009638:	cmp    DWORD PTR [rcx+rax*1],0x0
 100963c:	jne    0x10096fc
 1009642:	movsxd rax,DWORD PTR [rsp+0x20]
 1009647:	imul   rax,rax,0xb78
 100964e:	mov    rcx,QWORD PTR [rip+0x14963]        # 0x101dfb8
 1009655:	add    rcx,rax
 1009658:	mov    rax,rcx
 100965b:	mov    rcx,rax
 100965e:	call   0x100d560
 1009663:	test   eax,eax
 1009665:	jne    0x1009671
 1009667:	mov    DWORD PTR [rsp+0x28],0x0
 100966f:	jmp    0x100960b
 1009671:	movsxd rax,DWORD PTR [rsp+0x20]
 1009676:	imul   rax,rax,0xb78
 100967d:	mov    rcx,QWORD PTR [rip+0x14934]        # 0x101dfb8
 1009684:	mov    DWORD PTR [rcx+rax*1],0x1
 100968b:	movsxd rax,DWORD PTR [rsp+0x20]
 1009690:	imul   rax,rax,0xb78
 1009697:	mov    rcx,QWORD PTR [rip+0x1491a]        # 0x101dfb8
 100969e:	add    rcx,rax
 10096a1:	mov    rax,rcx
 10096a4:	mov    r8,QWORD PTR [rsp+0x58]
 10096a9:	mov    rdx,QWORD PTR [rsp+0x50]
 10096ae:	mov    rcx,rax
 10096b1:	call   0x100d260
 10096b6:	test   eax,eax
 10096b8:	je     0x10096cb
 10096ba:	cmp    DWORD PTR [rsp+0x2c],0x0
 10096bf:	je     0x10096cb
 10096c1:	mov    DWORD PTR [rsp+0x30],0x1
 10096c9:	jmp    0x10096d3
 10096cb:	mov    DWORD PTR [rsp+0x30],0x0
 10096d3:	mov    eax,DWORD PTR [rsp+0x30]
 10096d7:	mov    DWORD PTR [rsp+0x2c],eax
 10096db:	movsxd rax,DWORD PTR [rsp+0x20]
 10096e0:	imul   rax,rax,0xb78
 10096e7:	mov    rcx,QWORD PTR [rip+0x148ca]        # 0x101dfb8
 10096ee:	add    rcx,rax
 10096f1:	mov    rax,rcx
 10096f4:	mov    rcx,rax
 10096f7:	call   0x100d690
 10096fc:	jmp    0x100960b
 1009701:	cmp    DWORD PTR [rsp+0x28],0x0
 1009706:	jne    0x1009713
 1009708:	mov    ecx,0x2710
 100970d:	call   QWORD PTR [rip+0xffffffffffff792d]        # 0x1001040
 1009713:	jmp    0x10095ee
 1009718:	mov    eax,DWORD PTR [rsp+0x2c]
 100971c:	add    rsp,0x40
 1009720:	pop    rbp
 1009721:	ret    
 1009722:	int3   
 1009723:	int3   
 1009724:	int3   
 1009725:	int3   
 1009726:	int3   
 1009727:	int3   
 1009728:	int3   
 1009729:	int3   
 100972a:	int3   
 100972b:	int3   
 100972c:	int3   
 100972d:	int3   
 100972e:	int3   
 100972f:	int3   
 1009730:	mov    QWORD PTR [rsp+0x10],rdx
 1009735:	mov    DWORD PTR [rsp+0x8],ecx
 1009739:	push   rbp
 100973a:	mov    rbp,rsp
 100973d:	sub    rsp,0x30
 1009741:	mov    DWORD PTR [rsp+0x24],0x1
 1009749:	mov    DWORD PTR [rsp+0x20],0x0
 1009751:	jmp    0x100975d
 1009753:	mov    eax,DWORD PTR [rsp+0x20]
 1009757:	inc    eax
 1009759:	mov    DWORD PTR [rsp+0x20],eax
 100975d:	mov    eax,DWORD PTR [rip+0x1485d]        # 0x101dfc0
 1009763:	cmp    DWORD PTR [rsp+0x20],eax
 1009767:	jge    0x10097ba
 1009769:	movsxd rax,DWORD PTR [rsp+0x20]
 100976e:	imul   rax,rax,0xb78
 1009775:	mov    rcx,QWORD PTR [rip+0x1483c]        # 0x101dfb8
 100977c:	add    rcx,rax
 100977f:	mov    rax,rcx
 1009782:	mov    r8,QWORD PTR [rsp+0x48]
 1009787:	mov    edx,DWORD PTR [rsp+0x40]
 100978b:	mov    rcx,rax
 100978e:	call   0x100c8f0
 1009793:	test   eax,eax
 1009795:	je     0x10097a8
 1009797:	cmp    DWORD PTR [rsp+0x24],0x0
 100979c:	je     0x10097a8
 100979e:	mov    DWORD PTR [rsp+0x28],0x1
 10097a6:	jmp    0x10097b0
 10097a8:	mov    DWORD PTR [rsp+0x28],0x0
 10097b0:	mov    eax,DWORD PTR [rsp+0x28]
 10097b4:	mov    DWORD PTR [rsp+0x24],eax
 10097b8:	jmp    0x1009753
 10097ba:	mov    eax,DWORD PTR [rsp+0x24]
 10097be:	add    rsp,0x30
 10097c2:	pop    rbp
 10097c3:	ret    
 10097c4:	int3   
 10097c5:	int3   
 10097c6:	int3   
 10097c7:	int3   
 10097c8:	int3   
 10097c9:	int3   
 10097ca:	int3   
 10097cb:	int3   
 10097cc:	int3   
 10097cd:	int3   
 10097ce:	int3   
 10097cf:	int3   
 10097d0:	rex push rbp
 10097d2:	mov    rbp,rsp
 10097d5:	sub    rsp,0x20
 10097d9:	cmp    DWORD PTR [rip+0x148f4],0x0        # 0x101e0d4
 10097e0:	je     0x1009805
 10097e2:	cmp    QWORD PTR [rip+0xbbae],0x0        # 0x1015398
 10097ea:	je     0x1009805
 10097ec:	movzx  eax,WORD PTR [rip+0xbbbd]        # 0x10153b0
 10097f3:	test   eax,eax
 10097f5:	je     0x1009805
 10097f7:	cmp    DWORD PTR [rip+0x1369e],0x0        # 0x101ce9c
 10097fe:	jne    0x1009805
 1009800:	call   0x1009bf0
 1009805:	cmp    DWORD PTR [rip+0x148cc],0x0        # 0x101e0d8
 100980c:	je     0x1009828
 100980e:	cmp    QWORD PTR [rip+0xbb8a],0x0        # 0x10153a0
 1009816:	je     0x1009828
 1009818:	movzx  eax,WORD PTR [rip+0xc5f1]        # 0x1015e10
 100981f:	test   eax,eax
 1009821:	je     0x1009828
 1009823:	call   0x100a080
 1009828:	cmp    DWORD PTR [rip+0x1479d],0x0        # 0x101dfcc
 100982f:	je     0x1009845
 1009831:	lea    rcx,[rip+0x16ae8]        # 0x1020320
 1009838:	call   0x100f020
 100983d:	mov    rcx,rax
 1009840:	call   0x100a510
 1009845:	lea    rcx,[rip+0x16acc]        # 0x1020318
 100984c:	call   0x100f040
 1009851:	test   eax,eax
 1009853:	je     0x1009869
 1009855:	lea    rcx,[rip+0x16abc]        # 0x1020318
 100985c:	call   0x100f020
 1009861:	mov    rcx,rax
 1009864:	call   0x100a510
 1009869:	add    rsp,0x20
 100986d:	pop    rbp
 100986e:	ret    
 100986f:	int3   
 1009870:	int3   
 1009871:	int3   
 1009872:	int3   
 1009873:	int3   
 1009874:	int3   
 1009875:	int3   
 1009876:	int3   
 1009877:	int3   
 1009878:	int3   
 1009879:	int3   
 100987a:	int3   
 100987b:	int3   
 100987c:	int3   
 100987d:	int3   
 100987e:	int3   
 100987f:	int3   
 1009880:	mov    QWORD PTR [rsp+0x10],rdx
 1009885:	mov    QWORD PTR [rsp+0x8],rcx
 100988a:	push   rbp
 100988b:	mov    rbp,rsp
 100988e:	push   rdi
 100988f:	sub    rsp,0x118
 1009896:	mov    rax,QWORD PTR [rip+0xbac3]        # 0x1015360
 100989d:	xor    rax,rsp
 10098a0:	mov    QWORD PTR [rbp-0x20],rax
 10098a4:	mov    DWORD PTR [rsp+0x2c],0x0
 10098ac:	movzx  eax,WORD PTR [rip+0xffffffffffff7f0d]        # 0x10017c0
 10098b3:	mov    WORD PTR [rsp+0x80],ax
 10098bb:	lea    rax,[rsp+0x82]
 10098c3:	mov    rdi,rax
 10098c6:	xor    eax,eax
 10098c8:	mov    ecx,0x7e
 10098cd:	rep stos BYTE PTR es:[rdi],al
 10098cf:	mov    DWORD PTR [rsp+0x34],0x0
 10098d7:	mov    DWORD PTR [rsp+0x30],0x0
 10098df:	mov    DWORD PTR [rsp+0x28],0x0
 10098e7:	mov    DWORD PTR [rsp+0x3c],0x0
 10098ef:	mov    DWORD PTR [rsp+0x38],0x0
 10098f7:	mov    QWORD PTR [rsp+0x48],0x0
 1009900:	mov    QWORD PTR [rsp+0x20],0x0
 1009909:	mov    QWORD PTR [rsp+0x40],0x0
 1009912:	mov    QWORD PTR [rsp+0x50],0x0
 100991b:	cmp    QWORD PTR [rbp+0x10],0x0
 1009920:	je     0x1009939
 1009922:	mov    rcx,QWORD PTR [rbp+0x10]
 1009926:	call   QWORD PTR [rip+0xffffffffffff7a04]        # 0x1001330
 100992c:	mov    QWORD PTR [rsp+0x48],rax
 1009931:	cmp    QWORD PTR [rsp+0x48],0x8
 1009937:	jge    0x1009940
 1009939:	xor    eax,eax
 100993b:	jmp    0x1009bd2
 1009940:	mov    rax,QWORD PTR [rsp+0x48]
 1009945:	dec    rax
 1009948:	mov    QWORD PTR [rsp+0x20],rax
 100994d:	jmp    0x100995c
 100994f:	mov    rax,QWORD PTR [rsp+0x20]
 1009954:	dec    rax
 1009957:	mov    QWORD PTR [rsp+0x20],rax
 100995c:	cmp    QWORD PTR [rsp+0x20],0x0
 1009962:	jl     0x100997a
 1009964:	mov    rax,QWORD PTR [rbp+0x10]
 1009968:	mov    rcx,QWORD PTR [rsp+0x20]
 100996d:	movzx  eax,WORD PTR [rax+rcx*2]
 1009971:	cmp    eax,0x2e
 1009974:	jne    0x1009978
 1009976:	jmp    0x100997a
 1009978:	jmp    0x100994f
 100997a:	mov    rax,QWORD PTR [rsp+0x20]
 100997f:	dec    rax
 1009982:	mov    QWORD PTR [rsp+0x20],rax
 1009987:	cmp    QWORD PTR [rsp+0x20],0x0
 100998d:	jg     0x1009996
 100998f:	xor    eax,eax
 1009991:	jmp    0x1009bd2
 1009996:	mov    rax,QWORD PTR [rsp+0x20]
 100999b:	mov    QWORD PTR [rsp+0x40],rax
 10099a0:	jmp    0x10099af
 10099a2:	mov    rax,QWORD PTR [rsp+0x20]
 10099a7:	dec    rax
 10099aa:	mov    QWORD PTR [rsp+0x20],rax
 10099af:	cmp    QWORD PTR [rsp+0x20],0x0
 10099b5:	jl     0x10099cd
 10099b7:	mov    rax,QWORD PTR [rbp+0x10]
 10099bb:	mov    rcx,QWORD PTR [rsp+0x20]
 10099c0:	movzx  eax,WORD PTR [rax+rcx*2]
 10099c4:	cmp    eax,0x5f
 10099c7:	jne    0x10099cb
 10099c9:	jmp    0x10099cd
 10099cb:	jmp    0x10099a2
 10099cd:	mov    rax,QWORD PTR [rsp+0x20]
 10099d2:	inc    rax
 10099d5:	mov    QWORD PTR [rsp+0x20],rax
 10099da:	cmp    QWORD PTR [rsp+0x20],0x0
 10099e0:	jl     0x10099f8
 10099e2:	mov    rax,QWORD PTR [rsp+0x20]
 10099e7:	mov    rcx,QWORD PTR [rsp+0x40]
 10099ec:	sub    rcx,rax
 10099ef:	mov    rax,rcx
 10099f2:	cmp    rax,0x8
 10099f6:	jge    0x10099ff
 10099f8:	xor    eax,eax
 10099fa:	jmp    0x1009bd2
 10099ff:	mov    r8d,0x80
 1009a05:	xor    edx,edx
 1009a07:	lea    rcx,[rsp+0x80]
 1009a0f:	call   0x1011e78
 1009a14:	mov    rax,QWORD PTR [rsp+0x20]
 1009a19:	mov    rcx,QWORD PTR [rsp+0x40]
 1009a1e:	sub    rcx,rax
 1009a21:	mov    rax,rcx
 1009a24:	lea    rax,[rax+rax*1+0x2]
 1009a29:	mov    rcx,QWORD PTR [rbp+0x10]
 1009a2d:	mov    rdx,QWORD PTR [rsp+0x20]
 1009a32:	lea    rcx,[rcx+rdx*2]
 1009a36:	mov    r8,rax
 1009a39:	mov    rdx,rcx
 1009a3c:	lea    rcx,[rsp+0x80]
 1009a44:	call   0x1011e6c
 1009a49:	lea    rcx,[rsp+0x80]
 1009a51:	call   QWORD PTR [rip+0xffffffffffff78d9]        # 0x1001330
 1009a57:	cmp    rax,0x8
 1009a5b:	jae    0x1009a66
 1009a5d:	mov    eax,DWORD PTR [rsp+0x2c]
 1009a61:	jmp    0x1009bd2
 1009a66:	movzx  eax,WORD PTR [rsp+0x80]
 1009a6e:	sub    eax,0x30
 1009a71:	imul   eax,eax,0x3e8
 1009a77:	movzx  ecx,WORD PTR [rsp+0x82]
 1009a7f:	sub    ecx,0x30
 1009a82:	imul   ecx,ecx,0x64
 1009a85:	add    eax,ecx
 1009a87:	movzx  ecx,WORD PTR [rsp+0x84]
 1009a8f:	sub    ecx,0x30
 1009a92:	imul   ecx,ecx,0xa
 1009a95:	add    eax,ecx
 1009a97:	movzx  ecx,WORD PTR [rsp+0x86]
 1009a9f:	lea    eax,[rax+rcx*1-0x30]
 1009aa3:	mov    DWORD PTR [rsp+0x34],eax
 1009aa7:	movzx  eax,WORD PTR [rsp+0x88]
 1009aaf:	sub    eax,0x30
 1009ab2:	imul   eax,eax,0xa
 1009ab5:	movzx  ecx,WORD PTR [rsp+0x8a]
 1009abd:	lea    eax,[rax+rcx*1-0x30]
 1009ac1:	mov    DWORD PTR [rsp+0x30],eax
 1009ac5:	movzx  eax,WORD PTR [rsp+0x8c]
 1009acd:	sub    eax,0x30
 1009ad0:	imul   eax,eax,0xa
 1009ad3:	movzx  ecx,WORD PTR [rsp+0x8e]
 1009adb:	lea    eax,[rax+rcx*1-0x30]
 1009adf:	mov    DWORD PTR [rsp+0x28],eax
 1009ae3:	cmp    DWORD PTR [rsp+0x34],0x7c6
 1009aeb:	jl     0x1009b13
 1009aed:	cmp    DWORD PTR [rsp+0x34],0x833
 1009af5:	jg     0x1009b13
 1009af7:	cmp    DWORD PTR [rsp+0x30],0x1
 1009afc:	jl     0x1009b13
 1009afe:	cmp    DWORD PTR [rsp+0x30],0xc
 1009b03:	jg     0x1009b13
 1009b05:	cmp    DWORD PTR [rsp+0x28],0x0
 1009b0a:	jl     0x1009b13
 1009b0c:	cmp    DWORD PTR [rsp+0x28],0x1f
 1009b11:	jle    0x1009b1c
 1009b13:	mov    eax,DWORD PTR [rsp+0x2c]
 1009b17:	jmp    0x1009bd2
 1009b1c:	lea    rcx,[rsp+0x80]
 1009b24:	call   QWORD PTR [rip+0xffffffffffff7806]        # 0x1001330
 1009b2a:	cmp    rax,0xc
 1009b2e:	jne    0x1009b6c
 1009b30:	movzx  eax,WORD PTR [rsp+0x90]
 1009b38:	sub    eax,0x30
 1009b3b:	imul   eax,eax,0xa
 1009b3e:	movzx  ecx,WORD PTR [rsp+0x92]
 1009b46:	lea    eax,[rax+rcx*1-0x30]
 1009b4a:	mov    DWORD PTR [rsp+0x3c],eax
 1009b4e:	movzx  eax,WORD PTR [rsp+0x94]
 1009b56:	sub    eax,0x30
 1009b59:	imul   eax,eax,0xa
 1009b5c:	movzx  ecx,WORD PTR [rsp+0x96]
 1009b64:	lea    eax,[rax+rcx*1-0x30]
 1009b68:	mov    DWORD PTR [rsp+0x38],eax
 1009b6c:	mov    r8d,0x24
 1009b72:	xor    edx,edx
 1009b74:	lea    rcx,[rsp+0x58]
 1009b79:	call   0x1011e78
 1009b7e:	mov    eax,DWORD PTR [rsp+0x34]
 1009b82:	sub    eax,0x76c
 1009b87:	mov    DWORD PTR [rsp+0x6c],eax
 1009b8b:	mov    eax,DWORD PTR [rsp+0x30]
 1009b8f:	dec    eax
 1009b91:	mov    DWORD PTR [rsp+0x68],eax
 1009b95:	mov    eax,DWORD PTR [rsp+0x28]
 1009b99:	mov    DWORD PTR [rsp+0x64],eax
 1009b9d:	mov    eax,DWORD PTR [rsp+0x3c]
 1009ba1:	mov    DWORD PTR [rsp+0x60],eax
 1009ba5:	mov    eax,DWORD PTR [rsp+0x38]
 1009ba9:	mov    DWORD PTR [rsp+0x5c],eax
 1009bad:	mov    DWORD PTR [rsp+0x78],0xffffffff
 1009bb5:	lea    rcx,[rsp+0x58]
 1009bba:	call   0x1003890
 1009bbf:	mov    rcx,QWORD PTR [rbp+0x18]
 1009bc3:	mov    QWORD PTR [rcx],rax
 1009bc6:	mov    DWORD PTR [rsp+0x2c],0x1
 1009bce:	mov    eax,DWORD PTR [rsp+0x2c]
 1009bd2:	mov    rcx,QWORD PTR [rbp-0x20]
 1009bd6:	xor    rcx,rsp
 1009bd9:	call   0x1012040
 1009bde:	add    rsp,0x118
 1009be5:	pop    rdi
 1009be6:	pop    rbp
 1009be7:	ret    
 1009be8:	int3   
 1009be9:	int3   
 1009bea:	int3   
 1009beb:	int3   
 1009bec:	int3   
 1009bed:	int3   
 1009bee:	int3   
 1009bef:	int3   
 1009bf0:	rex push rbp
 1009bf2:	mov    rbp,rsp
 1009bf5:	mov    eax,0x1ad0
 1009bfa:	call   0x1011fe0
 1009bff:	sub    rsp,rax
 1009c02:	mov    rax,QWORD PTR [rip+0xb757]        # 0x1015360
 1009c09:	xor    rax,rsp
 1009c0c:	mov    QWORD PTR [rbp-0x10],rax
 1009c10:	mov    DWORD PTR [rsp+0x28],0x0
 1009c18:	mov    QWORD PTR [rsp+0x38],0x0
 1009c21:	mov    DWORD PTR [rsp+0x30],0xf4240
 1009c29:	mov    DWORD PTR [rsp+0x2c],0x1
 1009c31:	mov    QWORD PTR [rsp+0x20],0x0
 1009c3a:	lea    r8,[rip+0xb76f]        # 0x10153b0
 1009c41:	mov    edx,0x400
 1009c46:	lea    rcx,[rsp+0x2c0]
 1009c4e:	call   QWORD PTR [rip+0xffffffffffff76d4]        # 0x1001328
 1009c54:	lea    rdx,[rsp+0x58]
 1009c59:	lea    rcx,[rsp+0x2c0]
 1009c61:	call   0x1009880
 1009c66:	lea    rdx,[rsp+0x30]
 1009c6b:	lea    rcx,[rip+0x15cae]        # 0x101f920
 1009c72:	call   0x1008d30
 1009c77:	test   eax,eax
 1009c79:	jne    0x1009c80
 1009c7b:	jmp    0x100a05f
 1009c80:	lea    r8,[rip+0xb729]        # 0x10153b0
 1009c87:	mov    edx,0x400
 1009c8c:	lea    rcx,[rsp+0xac0]
 1009c94:	call   QWORD PTR [rip+0xffffffffffff768e]        # 0x1001328
 1009c9a:	lea    rcx,[rsp+0xac0]
 1009ca2:	call   QWORD PTR [rip+0xffffffffffff7688]        # 0x1001330
 1009ca8:	dec    rax
 1009cab:	mov    QWORD PTR [rsp+0x20],rax
 1009cb0:	jmp    0x1009cbf
 1009cb2:	mov    rax,QWORD PTR [rsp+0x20]
 1009cb7:	dec    rax
 1009cba:	mov    QWORD PTR [rsp+0x20],rax
 1009cbf:	cmp    QWORD PTR [rsp+0x20],0x0
 1009cc5:	jbe    0x1009cdd
 1009cc7:	mov    rax,QWORD PTR [rsp+0x20]
 1009ccc:	movzx  eax,WORD PTR [rsp+rax*2+0xac0]
 1009cd4:	cmp    eax,0x5c
 1009cd7:	jne    0x1009cdb
 1009cd9:	jmp    0x1009cdd
 1009cdb:	jmp    0x1009cb2
 1009cdd:	mov    rax,QWORD PTR [rsp+0x20]
 1009ce2:	lea    rax,[rax+rax*1+0x2]
 1009ce7:	mov    QWORD PTR [rsp+0x50],rax
 1009cec:	cmp    QWORD PTR [rsp+0x50],0x800
 1009cf5:	jae    0x1009cf9
 1009cf7:	jmp    0x1009d00
 1009cf9:	xor    ecx,ecx
 1009cfb:	call   0x1011d10
 1009d00:	xor    eax,eax
 1009d02:	mov    rcx,QWORD PTR [rsp+0x50]
 1009d07:	mov    WORD PTR [rsp+rcx*1+0xac0],ax
 1009d0f:	mov    r8d,0x1000
 1009d15:	lea    rdx,[rip+0x11174]        # 0x101ae90
 1009d1c:	mov    ecx,0x68
 1009d21:	call   0x1008800
 1009d26:	mov    eax,DWORD PTR [rip+0xb680]        # 0x10153ac
 1009d2c:	inc    eax
 1009d2e:	mov    DWORD PTR [rip+0xb678],eax        # 0x10153ac
 1009d34:	mov    r9d,DWORD PTR [rip+0xb671]        # 0x10153ac
 1009d3b:	lea    r8,[rip+0x1114e]        # 0x101ae90
 1009d42:	mov    edx,0x2710
 1009d47:	lea    rcx,[rip+0xc322]        # 0x1016070
 1009d4e:	call   QWORD PTR [rip+0xffffffffffff74a4]        # 0x10011f8
 1009d54:	lea    rcx,[rip+0xc315]        # 0x1016070
 1009d5b:	call   0x1008f00
 1009d60:	xor    eax,eax
 1009d62:	mov    WORD PTR [rip+0x14a97],ax        # 0x101e800
 1009d69:	xor    eax,eax
 1009d6b:	mov    WORD PTR [rip+0x14b92],ax        # 0x101e904
 1009d72:	mov    DWORD PTR [rip+0x15b88],0x1        # 0x101f904
 1009d7c:	lea    rcx,[rip+0x15b85]        # 0x101f908
 1009d83:	call   0x10038c0
 1009d88:	mov    DWORD PTR [rip+0x15b7e],0x69        # 0x101f910
 1009d92:	lea    r8,[rip+0xb617]        # 0x10153b0
 1009d99:	mov    edx,0x400
 1009d9e:	lea    rcx,[rsp+0x12c0]
 1009da6:	call   QWORD PTR [rip+0xffffffffffff757c]        # 0x1001328
 1009dac:	lea    rcx,[rsp+0x12c0]
 1009db4:	call   QWORD PTR [rip+0xffffffffffff7576]        # 0x1001330
 1009dba:	mov    QWORD PTR [rsp+0x68],rax
 1009dbf:	mov    rax,QWORD PTR [rsp+0x68]
 1009dc4:	sub    rax,0x6
 1009dc8:	mov    QWORD PTR [rsp+0x20],rax
 1009dcd:	jmp    0x1009ddc
 1009dcf:	mov    rax,QWORD PTR [rsp+0x20]
 1009dd4:	dec    rax
 1009dd7:	mov    QWORD PTR [rsp+0x20],rax
 1009ddc:	cmp    QWORD PTR [rsp+0x20],0x0
 1009de2:	jbe    0x1009dfa
 1009de4:	mov    rax,QWORD PTR [rsp+0x20]
 1009de9:	movzx  eax,WORD PTR [rsp+rax*2+0x12c0]
 1009df1:	cmp    eax,0x5f
 1009df4:	jne    0x1009df8
 1009df6:	jmp    0x1009dfa
 1009df8:	jmp    0x1009dcf
 1009dfa:	cmp    QWORD PTR [rsp+0x20],0x0
 1009e00:	ja     0x1009e07
 1009e02:	jmp    0x100a05f
 1009e07:	mov    eax,0x2a
 1009e0c:	mov    rcx,QWORD PTR [rsp+0x20]
 1009e11:	mov    WORD PTR [rsp+rcx*2+0x12c2],ax
 1009e19:	mov    eax,0x2e
 1009e1e:	mov    rcx,QWORD PTR [rsp+0x20]
 1009e23:	mov    WORD PTR [rsp+rcx*2+0x12c4],ax
 1009e2b:	mov    eax,0x74
 1009e30:	mov    rcx,QWORD PTR [rsp+0x20]
 1009e35:	mov    WORD PTR [rsp+rcx*2+0x12c6],ax
 1009e3d:	mov    eax,0x78
 1009e42:	mov    rcx,QWORD PTR [rsp+0x20]
 1009e47:	mov    WORD PTR [rsp+rcx*2+0x12c8],ax
 1009e4f:	mov    eax,0x74
 1009e54:	mov    rcx,QWORD PTR [rsp+0x20]
 1009e59:	mov    WORD PTR [rsp+rcx*2+0x12ca],ax
 1009e61:	mov    rax,QWORD PTR [rsp+0x20]
 1009e66:	lea    rax,[rax+rax*1+0xc]
 1009e6b:	mov    QWORD PTR [rsp+0x48],rax
 1009e70:	cmp    QWORD PTR [rsp+0x48],0x800
 1009e79:	jae    0x1009e7d
 1009e7b:	jmp    0x1009e84
 1009e7d:	xor    ecx,ecx
 1009e7f:	call   0x1011d10
 1009e84:	xor    eax,eax
 1009e86:	mov    rcx,QWORD PTR [rsp+0x48]
 1009e8b:	mov    WORD PTR [rsp+rcx*1+0x12c0],ax
 1009e93:	lea    rdx,[rsp+0x70]
 1009e98:	lea    rcx,[rsp+0x12c0]
 1009ea0:	call   QWORD PTR [rip+0xffffffffffff7222]        # 0x10010c8
 1009ea6:	mov    QWORD PTR [rsp+0x38],rax
 1009eab:	cmp    QWORD PTR [rsp+0x38],0xffffffffffffffff
 1009eb1:	je     0x1009fd3
 1009eb7:	lea    r8,[rsp+0x9c]
 1009ebf:	mov    edx,0x400
 1009ec4:	lea    rcx,[rsp+0x2c0]
 1009ecc:	call   QWORD PTR [rip+0xffffffffffff7456]        # 0x1001328
 1009ed2:	lea    rdx,[rsp+0x60]
 1009ed7:	lea    rcx,[rsp+0x2c0]
 1009edf:	call   0x1009880
 1009ee4:	test   eax,eax
 1009ee6:	je     0x1009fb0
 1009eec:	mov    rdx,QWORD PTR [rsp+0x60]
 1009ef1:	mov    rcx,QWORD PTR [rsp+0x58]
 1009ef6:	call   0x1003830
 1009efb:	cvttsd2si eax,xmm0
 1009eff:	mov    DWORD PTR [rsp+0x40],eax
 1009f03:	mov    eax,DWORD PTR [rsp+0x30]
 1009f07:	cmp    DWORD PTR [rsp+0x40],eax
 1009f0b:	jle    0x1009fb0
 1009f11:	lea    r8,[rsp+0xac0]
 1009f19:	mov    edx,0x400
 1009f1e:	lea    rcx,[rsp+0x2c0]
 1009f26:	call   QWORD PTR [rip+0xffffffffffff73fc]        # 0x1001328
 1009f2c:	lea    r8,[rsp+0x9c]
 1009f34:	mov    edx,0x400
 1009f39:	lea    rcx,[rsp+0x2c0]
 1009f41:	call   QWORD PTR [rip+0xffffffffffff73c9]        # 0x1001310
 1009f47:	lea    rcx,[rsp+0x2c0]
 1009f4f:	call   0x1008680
 1009f54:	test   eax,eax
 1009f56:	je     0x1009fa6
 1009f58:	mov    r8d,0x1000
 1009f5e:	lea    rdx,[rip+0x10f2b]        # 0x101ae90
 1009f65:	mov    ecx,0x23
 1009f6a:	call   0x1008800
 1009f6f:	lea    r9,[rsp+0x9c]
 1009f77:	lea    r8,[rip+0x10f12]        # 0x101ae90
 1009f7e:	mov    edx,0x2710
 1009f83:	lea    rcx,[rip+0xc0e6]        # 0x1016070
 1009f8a:	call   QWORD PTR [rip+0xffffffffffff7268]        # 0x10011f8
 1009f90:	lea    rcx,[rip+0xc0d9]        # 0x1016070
 1009f97:	call   0x1008f00
 1009f9c:	mov    DWORD PTR [rsp+0x2c],0x0
 1009fa4:	jmp    0x1009fb0
 1009fa6:	mov    eax,DWORD PTR [rsp+0x28]
 1009faa:	inc    eax
 1009fac:	mov    DWORD PTR [rsp+0x28],eax
 1009fb0:	lea    rdx,[rsp+0x70]
 1009fb5:	mov    rcx,QWORD PTR [rsp+0x38]
 1009fba:	call   QWORD PTR [rip+0xffffffffffff7110]        # 0x10010d0
 1009fc0:	test   eax,eax
 1009fc2:	jne    0x1009eb7
 1009fc8:	mov    rcx,QWORD PTR [rsp+0x38]
 1009fcd:	call   QWORD PTR [rip+0xffffffffffff707d]        # 0x1001050
 1009fd3:	mov    r8d,0x1000
 1009fd9:	lea    rdx,[rip+0x10eb0]        # 0x101ae90
 1009fe0:	mov    ecx,0x24
 1009fe5:	call   0x1008800
 1009fea:	mov    r9d,DWORD PTR [rsp+0x28]
 1009fef:	lea    r8,[rip+0x10e9a]        # 0x101ae90
 1009ff6:	mov    edx,0x2710
 1009ffb:	lea    rcx,[rip+0xc06e]        # 0x1016070
 100a002:	call   QWORD PTR [rip+0xffffffffffff71f0]        # 0x10011f8
 100a008:	lea    rcx,[rip+0xc061]        # 0x1016070
 100a00f:	call   0x1008f00
 100a014:	mov    r8d,0x1000
 100a01a:	lea    rdx,[rip+0x10e6f]        # 0x101ae90
 100a021:	mov    ecx,0x74
 100a026:	call   0x1008800
 100a02b:	mov    r9d,DWORD PTR [rsp+0x28]
 100a030:	lea    r8,[rip+0x10e59]        # 0x101ae90
 100a037:	mov    edx,0x800
 100a03c:	lea    rcx,[rip+0x148c1]        # 0x101e904
 100a043:	call   QWORD PTR [rip+0xffffffffffff71af]        # 0x10011f8
 100a049:	mov    eax,DWORD PTR [rsp+0x2c]
 100a04d:	mov    DWORD PTR [rip+0x158b1],eax        # 0x101f904
 100a053:	cmp    DWORD PTR [rsp+0x28],0x0
 100a058:	jle    0x100a05f
 100a05a:	call   0x10082e0
 100a05f:	mov    rcx,QWORD PTR [rbp-0x10]
 100a063:	xor    rcx,rsp
 100a066:	call   0x1012040
 100a06b:	add    rsp,0x1ad0
 100a072:	pop    rbp
 100a073:	ret    
 100a074:	int3   
 100a075:	int3   
 100a076:	int3   
 100a077:	int3   
 100a078:	int3   
 100a079:	int3   
 100a07a:	int3   
 100a07b:	int3   
 100a07c:	int3   
 100a07d:	int3   
 100a07e:	int3   
 100a07f:	int3   
 100a080:	rex push rbp
 100a082:	mov    rbp,rsp
 100a085:	mov    eax,0x16d0
 100a08a:	call   0x1011fe0
 100a08f:	sub    rsp,rax
 100a092:	mov    rax,QWORD PTR [rip+0xb2c7]        # 0x1015360
 100a099:	xor    rax,rsp
 100a09c:	mov    QWORD PTR [rbp-0x10],rax
 100a0a0:	mov    DWORD PTR [rsp+0x28],0x0
 100a0a8:	mov    QWORD PTR [rsp+0x30],0x0
 100a0b1:	mov    DWORD PTR [rsp+0x2c],0xf4240
 100a0b9:	mov    DWORD PTR [rsp+0x3c],0x1
 100a0c1:	mov    QWORD PTR [rsp+0x20],0x0
 100a0ca:	lea    rdx,[rsp+0x2c]
 100a0cf:	lea    rcx,[rip+0x1591a]        # 0x101f9f0
 100a0d6:	call   0x1008d30
 100a0db:	test   eax,eax
 100a0dd:	jne    0x100a0e4
 100a0df:	jmp    0x100a4ef
 100a0e4:	lea    r8,[rip+0xbd25]        # 0x1015e10
 100a0eb:	mov    edx,0x200
 100a0f0:	lea    rcx,[rsp+0xec0]
 100a0f8:	call   QWORD PTR [rip+0xffffffffffff722a]        # 0x1001328
 100a0fe:	lea    rdx,[rsp+0x60]
 100a103:	lea    rcx,[rsp+0xec0]
 100a10b:	call   0x1009880
 100a110:	lea    r8,[rip+0xbcf9]        # 0x1015e10
 100a117:	mov    edx,0x200
 100a11c:	lea    rcx,[rsp+0xac0]
 100a124:	call   QWORD PTR [rip+0xffffffffffff71fe]        # 0x1001328
 100a12a:	lea    rcx,[rsp+0xac0]
 100a132:	call   QWORD PTR [rip+0xffffffffffff71f8]        # 0x1001330
 100a138:	dec    rax
 100a13b:	mov    QWORD PTR [rsp+0x20],rax
 100a140:	jmp    0x100a14f
 100a142:	mov    rax,QWORD PTR [rsp+0x20]
 100a147:	dec    rax
 100a14a:	mov    QWORD PTR [rsp+0x20],rax
 100a14f:	cmp    QWORD PTR [rsp+0x20],0x0
 100a155:	jbe    0x100a16d
 100a157:	mov    rax,QWORD PTR [rsp+0x20]
 100a15c:	movzx  eax,WORD PTR [rsp+rax*2+0xac0]
 100a164:	cmp    eax,0x5c
 100a167:	jne    0x100a16b
 100a169:	jmp    0x100a16d
 100a16b:	jmp    0x100a142
 100a16d:	mov    rax,QWORD PTR [rsp+0x20]
 100a172:	lea    rax,[rax+rax*1+0x2]
 100a177:	mov    QWORD PTR [rsp+0x48],rax
 100a17c:	cmp    QWORD PTR [rsp+0x48],0x400
 100a185:	jae    0x100a189
 100a187:	jmp    0x100a190
 100a189:	xor    ecx,ecx
 100a18b:	call   0x1011d10
 100a190:	xor    eax,eax
 100a192:	mov    rcx,QWORD PTR [rsp+0x48]
 100a197:	mov    WORD PTR [rsp+rcx*1+0xac0],ax
 100a19f:	mov    r8d,0x1000
 100a1a5:	lea    rdx,[rip+0x10ce4]        # 0x101ae90
 100a1ac:	mov    ecx,0x6a
 100a1b1:	call   0x1008800
 100a1b6:	mov    eax,DWORD PTR [rip+0xb1f0]        # 0x10153ac
 100a1bc:	inc    eax
 100a1be:	mov    DWORD PTR [rip+0xb1e8],eax        # 0x10153ac
 100a1c4:	mov    r9d,DWORD PTR [rip+0xb1e1]        # 0x10153ac
 100a1cb:	lea    r8,[rip+0x10cbe]        # 0x101ae90
 100a1d2:	mov    edx,0x2710
 100a1d7:	lea    rcx,[rip+0xbe92]        # 0x1016070
 100a1de:	call   QWORD PTR [rip+0xffffffffffff7014]        # 0x10011f8
 100a1e4:	lea    rcx,[rip+0xbe85]        # 0x1016070
 100a1eb:	call   0x1008f00
 100a1f0:	xor    eax,eax
 100a1f2:	mov    WORD PTR [rip+0x14607],ax        # 0x101e800
 100a1f9:	xor    eax,eax
 100a1fb:	mov    WORD PTR [rip+0x14702],ax        # 0x101e904
 100a202:	mov    DWORD PTR [rip+0x156f8],0x1        # 0x101f904
 100a20c:	lea    rcx,[rip+0x156f5]        # 0x101f908
 100a213:	call   0x10038c0
 100a218:	mov    DWORD PTR [rip+0x156ee],0x6b        # 0x101f910
 100a222:	lea    r8,[rip+0xb187]        # 0x10153b0
 100a229:	mov    edx,0x400
 100a22e:	lea    rcx,[rsp+0x2c0]
 100a236:	call   QWORD PTR [rip+0xffffffffffff70ec]        # 0x1001328
 100a23c:	lea    rcx,[rsp+0x2c0]
 100a244:	call   QWORD PTR [rip+0xffffffffffff70e6]        # 0x1001330
 100a24a:	mov    QWORD PTR [rsp+0x50],rax
 100a24f:	mov    rax,QWORD PTR [rsp+0x50]
 100a254:	sub    rax,0x6
 100a258:	mov    QWORD PTR [rsp+0x20],rax
 100a25d:	jmp    0x100a26c
 100a25f:	mov    rax,QWORD PTR [rsp+0x20]
 100a264:	dec    rax
 100a267:	mov    QWORD PTR [rsp+0x20],rax
 100a26c:	cmp    QWORD PTR [rsp+0x20],0x0
 100a272:	jbe    0x100a28a
 100a274:	mov    rax,QWORD PTR [rsp+0x20]
 100a279:	movzx  eax,WORD PTR [rsp+rax*2+0x2c0]
 100a281:	cmp    eax,0x5f
 100a284:	jne    0x100a288
 100a286:	jmp    0x100a28a
 100a288:	jmp    0x100a25f
 100a28a:	cmp    QWORD PTR [rsp+0x20],0x0
 100a290:	ja     0x100a297
 100a292:	jmp    0x100a4ef
 100a297:	mov    eax,0x2a
 100a29c:	mov    rcx,QWORD PTR [rsp+0x20]
 100a2a1:	mov    WORD PTR [rsp+rcx*2+0x2c2],ax
 100a2a9:	mov    eax,0x2e
 100a2ae:	mov    rcx,QWORD PTR [rsp+0x20]
 100a2b3:	mov    WORD PTR [rsp+rcx*2+0x2c4],ax
 100a2bb:	mov    eax,0x68
 100a2c0:	mov    rcx,QWORD PTR [rsp+0x20]
 100a2c5:	mov    WORD PTR [rsp+rcx*2+0x2c6],ax
 100a2cd:	mov    eax,0x74
 100a2d2:	mov    rcx,QWORD PTR [rsp+0x20]
 100a2d7:	mov    WORD PTR [rsp+rcx*2+0x2c8],ax
 100a2df:	mov    eax,0x6d
 100a2e4:	mov    rcx,QWORD PTR [rsp+0x20]
 100a2e9:	mov    WORD PTR [rsp+rcx*2+0x2ca],ax
 100a2f1:	mov    rax,QWORD PTR [rsp+0x20]
 100a2f6:	lea    rax,[rax+rax*1+0xc]
 100a2fb:	mov    QWORD PTR [rsp+0x40],rax
 100a300:	cmp    QWORD PTR [rsp+0x40],0x800
 100a309:	jae    0x100a30d
 100a30b:	jmp    0x100a314
 100a30d:	xor    ecx,ecx
 100a30f:	call   0x1011d10
 100a314:	xor    eax,eax
 100a316:	mov    rcx,QWORD PTR [rsp+0x40]
 100a31b:	mov    WORD PTR [rsp+rcx*1+0x2c0],ax
 100a323:	lea    rdx,[rsp+0x70]
 100a328:	lea    rcx,[rsp+0x2c0]
 100a330:	call   QWORD PTR [rip+0xffffffffffff6d92]        # 0x10010c8
 100a336:	mov    QWORD PTR [rsp+0x30],rax
 100a33b:	cmp    QWORD PTR [rsp+0x30],0xffffffffffffffff
 100a341:	je     0x100a463
 100a347:	lea    r8,[rsp+0x9c]
 100a34f:	mov    edx,0x200
 100a354:	lea    rcx,[rsp+0x12c0]
 100a35c:	call   QWORD PTR [rip+0xffffffffffff6fc6]        # 0x1001328
 100a362:	lea    rdx,[rsp+0x58]
 100a367:	lea    rcx,[rsp+0x12c0]
 100a36f:	call   0x1009880
 100a374:	test   eax,eax
 100a376:	je     0x100a440
 100a37c:	mov    rdx,QWORD PTR [rsp+0x58]
 100a381:	mov    rcx,QWORD PTR [rsp+0x60]
 100a386:	call   0x1003830
 100a38b:	cvttsd2si eax,xmm0
 100a38f:	mov    DWORD PTR [rsp+0x38],eax
 100a393:	mov    eax,DWORD PTR [rsp+0x2c]
 100a397:	cmp    DWORD PTR [rsp+0x38],eax
 100a39b:	jle    0x100a440
 100a3a1:	lea    r8,[rsp+0xac0]
 100a3a9:	mov    edx,0x200
 100a3ae:	lea    rcx,[rsp+0x12c0]
 100a3b6:	call   QWORD PTR [rip+0xffffffffffff6f6c]        # 0x1001328
 100a3bc:	lea    r8,[rsp+0x9c]
 100a3c4:	mov    edx,0x200
 100a3c9:	lea    rcx,[rsp+0x12c0]
 100a3d1:	call   QWORD PTR [rip+0xffffffffffff6f39]        # 0x1001310
 100a3d7:	lea    rcx,[rsp+0x12c0]
 100a3df:	call   0x1008680
 100a3e4:	test   eax,eax
 100a3e6:	je     0x100a436
 100a3e8:	mov    r8d,0x1000
 100a3ee:	lea    rdx,[rip+0x10a9b]        # 0x101ae90
 100a3f5:	mov    ecx,0x23
 100a3fa:	call   0x1008800
 100a3ff:	lea    r9,[rsp+0x9c]
 100a407:	lea    r8,[rip+0x10a82]        # 0x101ae90
 100a40e:	mov    edx,0x2710
 100a413:	lea    rcx,[rip+0xbc56]        # 0x1016070
 100a41a:	call   QWORD PTR [rip+0xffffffffffff6dd8]        # 0x10011f8
 100a420:	lea    rcx,[rip+0xbc49]        # 0x1016070
 100a427:	call   0x1008f00
 100a42c:	mov    DWORD PTR [rsp+0x3c],0x0
 100a434:	jmp    0x100a440
 100a436:	mov    eax,DWORD PTR [rsp+0x28]
 100a43a:	inc    eax
 100a43c:	mov    DWORD PTR [rsp+0x28],eax
 100a440:	lea    rdx,[rsp+0x70]
 100a445:	mov    rcx,QWORD PTR [rsp+0x30]
 100a44a:	call   QWORD PTR [rip+0xffffffffffff6c80]        # 0x10010d0
 100a450:	test   eax,eax
 100a452:	jne    0x100a347
 100a458:	mov    rcx,QWORD PTR [rsp+0x30]
 100a45d:	call   QWORD PTR [rip+0xffffffffffff6bed]        # 0x1001050
 100a463:	mov    r8d,0x1000
 100a469:	lea    rdx,[rip+0x10a20]        # 0x101ae90
 100a470:	mov    ecx,0x24
 100a475:	call   0x1008800
 100a47a:	mov    r9d,DWORD PTR [rsp+0x28]
 100a47f:	lea    r8,[rip+0x10a0a]        # 0x101ae90
 100a486:	mov    edx,0x2710
 100a48b:	lea    rcx,[rip+0xbbde]        # 0x1016070
 100a492:	call   QWORD PTR [rip+0xffffffffffff6d60]        # 0x10011f8
 100a498:	lea    rcx,[rip+0xbbd1]        # 0x1016070
 100a49f:	call   0x1008f00
 100a4a4:	mov    r8d,0x1000
 100a4aa:	lea    rdx,[rip+0x109df]        # 0x101ae90
 100a4b1:	mov    ecx,0x74
 100a4b6:	call   0x1008800
 100a4bb:	mov    r9d,DWORD PTR [rsp+0x28]
 100a4c0:	lea    r8,[rip+0x109c9]        # 0x101ae90
 100a4c7:	mov    edx,0x800
 100a4cc:	lea    rcx,[rip+0x14431]        # 0x101e904
 100a4d3:	call   QWORD PTR [rip+0xffffffffffff6d1f]        # 0x10011f8
 100a4d9:	mov    DWORD PTR [rip+0x15421],0x1        # 0x101f904
 100a4e3:	cmp    DWORD PTR [rsp+0x28],0x0
 100a4e8:	jle    0x100a4ef
 100a4ea:	call   0x10082e0
 100a4ef:	mov    rcx,QWORD PTR [rbp-0x10]
 100a4f3:	xor    rcx,rsp
 100a4f6:	call   0x1012040
 100a4fb:	add    rsp,0x16d0
 100a502:	pop    rbp
 100a503:	ret    
 100a504:	int3   
 100a505:	int3   
 100a506:	int3   
 100a507:	int3   
 100a508:	int3   
 100a509:	int3   
 100a50a:	int3   
 100a50b:	int3   
 100a50c:	int3   
 100a50d:	int3   
 100a50e:	int3   
 100a50f:	int3   
 100a510:	mov    QWORD PTR [rsp+0x8],rcx
 100a515:	push   rbp
 100a516:	mov    rbp,rsp
 100a519:	sub    rsp,0x8f0
 100a520:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
 100a52c:	mov    rax,QWORD PTR [rip+0xae2d]        # 0x1015360
 100a533:	xor    rax,rsp
 100a536:	mov    QWORD PTR [rbp-0x10],rax
 100a53a:	mov    DWORD PTR [rsp+0x38],0x0
 100a542:	mov    DWORD PTR [rsp+0x3c],0x0
 100a54a:	lea    rcx,[rsp+0x30]
 100a54f:	call   0x10112f0
 100a554:	nop
 100a555:	lea    rcx,[rip+0x15dc4]        # 0x1020320
 100a55c:	call   0x100f020
 100a561:	mov    QWORD PTR [rsp+0x48],rax
 100a566:	movzx  eax,WORD PTR [rip+0x13b73]        # 0x101e0e0
 100a56d:	test   eax,eax
 100a56f:	jne    0x100a58d
 100a571:	lea    r8,[rip+0xffffffffffff8798]        # 0x1002d10
 100a578:	mov    edx,0x28
 100a57d:	lea    rcx,[rsp+0x90]
 100a585:	call   QWORD PTR [rip+0xffffffffffff6d9d]        # 0x1001328
 100a58b:	jmp    0x100a5a7
 100a58d:	lea    r8,[rip+0x13b4c]        # 0x101e0e0
 100a594:	mov    edx,0x28
 100a599:	lea    rcx,[rsp+0x90]
 100a5a1:	call   QWORD PTR [rip+0xffffffffffff6d81]        # 0x1001328
 100a5a7:	mov    rax,QWORD PTR [rbp+0x10]
 100a5ab:	cmp    QWORD PTR [rsp+0x48],rax
 100a5b0:	jne    0x100a5e3
 100a5b2:	lea    rax,[rsp+0x90]
 100a5ba:	mov    QWORD PTR [rsp+0x20],rax
 100a5bf:	lea    r9,[rsp+0x90]
 100a5c7:	lea    r8,[rip+0xffffffffffff8c82]        # 0x1003250
 100a5ce:	mov    edx,0x400
 100a5d3:	lea    rcx,[rsp+0xe0]
 100a5db:	call   QWORD PTR [rip+0xffffffffffff6c17]        # 0x10011f8
 100a5e1:	jmp    0x100a612
 100a5e3:	lea    rax,[rsp+0x90]
 100a5eb:	mov    QWORD PTR [rsp+0x20],rax
 100a5f0:	lea    r9,[rsp+0x90]
 100a5f8:	lea    r8,[rip+0xffffffffffff8d81]        # 0x1003380
 100a5ff:	mov    edx,0x400
 100a604:	lea    rcx,[rsp+0xe0]
 100a60c:	call   QWORD PTR [rip+0xffffffffffff6be6]        # 0x10011f8
 100a612:	lea    rcx,[rsp+0x30]
 100a617:	call   0x10113a0
 100a61c:	mov    rcx,QWORD PTR [rsp+0x48]
 100a621:	mov    rcx,QWORD PTR [rcx]
 100a624:	mov    QWORD PTR [rsp+0x78],rcx
 100a629:	xor    r9d,r9d
 100a62c:	mov    r8,rax
 100a62f:	lea    rdx,[rsp+0xe0]
 100a637:	mov    rcx,QWORD PTR [rsp+0x48]
 100a63c:	mov    rax,QWORD PTR [rsp+0x78]
 100a641:	call   QWORD PTR [rax+0x2e0]
 100a647:	test   eax,eax
 100a649:	jl     0x100a689
 100a64b:	lea    rcx,[rsp+0x30]
 100a650:	call   0x10113c0
 100a655:	test   eax,eax
 100a657:	jne    0x100a689
 100a659:	lea    rcx,[rsp+0x30]
 100a65e:	call   0x1011400
 100a663:	mov    QWORD PTR [rsp+0x58],rax
 100a668:	mov    rax,QWORD PTR [rsp+0x58]
 100a66d:	mov    rax,QWORD PTR [rax]
 100a670:	lea    r9,[rsp+0x38]
 100a675:	xor    r8d,r8d
 100a678:	xor    edx,edx
 100a67a:	mov    rcx,QWORD PTR [rsp+0x58]
 100a67f:	call   QWORD PTR [rax+0x80]
 100a685:	test   eax,eax
 100a687:	jge    0x100a698
 100a689:	lea    rcx,[rsp+0x30]
 100a68e:	call   0x1011320
 100a693:	jmp    0x100a85d
 100a698:	cmp    DWORD PTR [rsp+0x38],0x0
 100a69d:	jg     0x100a6ae
 100a69f:	lea    rcx,[rsp+0x30]
 100a6a4:	call   0x1011320
 100a6a9:	jmp    0x100a85d
 100a6ae:	lea    rcx,[rsp+0x30]
 100a6b3:	call   0x1011400
 100a6b8:	mov    QWORD PTR [rsp+0x60],rax
 100a6bd:	mov    rax,QWORD PTR [rsp+0x60]
 100a6c2:	mov    rax,QWORD PTR [rax]
 100a6c5:	mov    edx,0x1
 100a6ca:	mov    rcx,QWORD PTR [rsp+0x60]
 100a6cf:	call   QWORD PTR [rax+0x50]
 100a6d2:	test   eax,eax
 100a6d4:	jl     0x100a706
 100a6d6:	lea    rcx,[rsp+0x30]
 100a6db:	call   0x1011400
 100a6e0:	mov    QWORD PTR [rsp+0x50],rax
 100a6e5:	mov    rax,QWORD PTR [rsp+0x50]
 100a6ea:	mov    rax,QWORD PTR [rax]
 100a6ed:	lea    r9,[rsp+0x3c]
 100a6f2:	xor    r8d,r8d
 100a6f5:	xor    edx,edx
 100a6f7:	mov    rcx,QWORD PTR [rsp+0x50]
 100a6fc:	call   QWORD PTR [rax+0x80]
 100a702:	test   eax,eax
 100a704:	jge    0x100a715
 100a706:	lea    rcx,[rsp+0x30]
 100a70b:	call   0x1011320
 100a710:	jmp    0x100a85d
 100a715:	mov    eax,DWORD PTR [rsp+0x38]
 100a719:	cmp    DWORD PTR [rsp+0x3c],eax
 100a71d:	jg     0x100a72e
 100a71f:	lea    rcx,[rsp+0x30]
 100a724:	call   0x1011320
 100a729:	jmp    0x100a85d
 100a72e:	lea    rcx,[rsp+0x30]
 100a733:	call   0x1011420
 100a738:	mov    DWORD PTR [rsp+0x40],0x0
 100a740:	lea    r9,[rsp+0x90]
 100a748:	lea    r8,[rip+0xffffffffffff8d71]        # 0x10034c0
 100a74f:	mov    edx,0x400
 100a754:	lea    rcx,[rsp+0xe0]
 100a75c:	call   QWORD PTR [rip+0xffffffffffff6a96]        # 0x10011f8
 100a762:	lea    rcx,[rsp+0x30]
 100a767:	call   0x10113a0
 100a76c:	mov    rcx,QWORD PTR [rbp+0x10]
 100a770:	mov    rcx,QWORD PTR [rcx]
 100a773:	mov    QWORD PTR [rsp+0x70],rcx
 100a778:	xor    r9d,r9d
 100a77b:	mov    r8,rax
 100a77e:	lea    rdx,[rsp+0xe0]
 100a786:	mov    rcx,QWORD PTR [rbp+0x10]
 100a78a:	mov    rax,QWORD PTR [rsp+0x70]
 100a78f:	call   QWORD PTR [rax+0x2e0]
 100a795:	test   eax,eax
 100a797:	jl     0x100a7f3
 100a799:	lea    rcx,[rsp+0x30]
 100a79e:	call   0x10113c0
 100a7a3:	test   eax,eax
 100a7a5:	jne    0x100a7f3
 100a7a7:	lea    rcx,[rsp+0x30]
 100a7ac:	call   0x1011400
 100a7b1:	mov    QWORD PTR [rsp+0x68],rax
 100a7b6:	mov    eax,DWORD PTR [rsp+0x38]
 100a7ba:	mov    ecx,DWORD PTR [rsp+0x3c]
 100a7be:	sub    ecx,eax
 100a7c0:	mov    eax,ecx
 100a7c2:	mov    rcx,QWORD PTR [rsp+0x68]
 100a7c7:	mov    rcx,QWORD PTR [rcx]
 100a7ca:	mov    QWORD PTR [rsp+0x80],rcx
 100a7d2:	lea    r9,[rsp+0x40]
 100a7d7:	xor    r8d,r8d
 100a7da:	mov    edx,eax
 100a7dc:	mov    rcx,QWORD PTR [rsp+0x68]
 100a7e1:	mov    rax,QWORD PTR [rsp+0x80]
 100a7e9:	call   QWORD PTR [rax+0x80]
 100a7ef:	test   eax,eax
 100a7f1:	jge    0x100a7ff
 100a7f3:	lea    rcx,[rsp+0x30]
 100a7f8:	call   0x1011320
 100a7fd:	jmp    0x100a85d
 100a7ff:	lea    rcx,[rsp+0x30]
 100a804:	call   0x1011420
 100a809:	mov    eax,DWORD PTR [rsp+0x40]
 100a80d:	mov    DWORD PTR [rsp+0x20],eax
 100a811:	lea    r9,[rsp+0x90]
 100a819:	lea    r8,[rip+0xffffffffffff8d70]        # 0x1003590
 100a820:	mov    edx,0x400
 100a825:	lea    rcx,[rsp+0xe0]
 100a82d:	call   QWORD PTR [rip+0xffffffffffff69c5]        # 0x10011f8
 100a833:	mov    rax,QWORD PTR [rbp+0x10]
 100a837:	mov    rax,QWORD PTR [rax]
 100a83a:	xor    r9d,r9d
 100a83d:	xor    r8d,r8d
 100a840:	lea    rdx,[rsp+0xe0]
 100a848:	mov    rcx,QWORD PTR [rbp+0x10]
 100a84c:	call   QWORD PTR [rax+0x2d8]
 100a852:	nop
 100a853:	lea    rcx,[rsp+0x30]
 100a858:	call   0x1011320
 100a85d:	mov    rcx,QWORD PTR [rbp-0x10]
 100a861:	xor    rcx,rsp
 100a864:	call   0x1012040
 100a869:	add    rsp,0x8f0
 100a870:	pop    rbp
 100a871:	ret    
 100a872:	int3   
 100a873:	int3   
 100a874:	int3   
 100a875:	int3   
 100a876:	int3   
 100a877:	int3   
 100a878:	int3   
 100a879:	int3   
 100a87a:	int3   
 100a87b:	int3   
 100a87c:	int3   
 100a87d:	int3   
 100a87e:	int3   
 100a87f:	int3   
 100a880:	mov    QWORD PTR [rsp+0x8],rcx
 100a885:	push   rbp
 100a886:	mov    rbp,rsp
 100a889:	sub    rsp,0x850
 100a890:	mov    rax,QWORD PTR [rip+0xaac9]        # 0x1015360
 100a897:	xor    rax,rsp
 100a89a:	mov    QWORD PTR [rbp-0x10],rax
 100a89e:	call   QWORD PTR [rip+0xffffffffffff678c]        # 0x1001030
 100a8a4:	cmp    eax,0x80000000
 100a8a9:	jae    0x100a8b7
 100a8ab:	mov    rcx,QWORD PTR [rbp+0x10]
 100a8af:	call   QWORD PTR [rip+0xffffffffffff680b]        # 0x10010c0
 100a8b5:	jmp    0x100a921
 100a8b7:	cmp    QWORD PTR [rbp+0x10],0x0
 100a8bc:	je     0x100a8d0
 100a8be:	mov    rcx,QWORD PTR [rbp+0x10]
 100a8c2:	call   QWORD PTR [rip+0xffffffffffff6a68]        # 0x1001330
 100a8c8:	cmp    rax,0x3fc
 100a8ce:	jbe    0x100a8d7
 100a8d0:	mov    eax,0xffffffff
 100a8d5:	jmp    0x100a921
 100a8d7:	mov    QWORD PTR [rsp+0x38],0x0
 100a8e0:	mov    QWORD PTR [rsp+0x30],0x0
 100a8e9:	mov    DWORD PTR [rsp+0x28],0x800
 100a8f1:	lea    rax,[rsp+0x40]
 100a8f6:	mov    QWORD PTR [rsp+0x20],rax
 100a8fb:	mov    r9d,0xffffffff
 100a901:	mov    r8,QWORD PTR [rbp+0x10]
 100a905:	xor    edx,edx
 100a907:	mov    ecx,0x1
 100a90c:	call   QWORD PTR [rip+0xffffffffffff67ce]        # 0x10010e0
 100a912:	mov    BYTE PTR [rbp-0x40],0x0
 100a916:	lea    rcx,[rsp+0x40]
 100a91b:	call   QWORD PTR [rip+0xffffffffffff6797]        # 0x10010b8
 100a921:	mov    rcx,QWORD PTR [rbp-0x10]
 100a925:	xor    rcx,rsp
 100a928:	call   0x1012040
 100a92d:	add    rsp,0x850
 100a934:	pop    rbp
 100a935:	ret    
 100a936:	int3   
 100a937:	int3   
 100a938:	int3   
 100a939:	int3   
 100a93a:	int3   
 100a93b:	int3   
 100a93c:	int3   
 100a93d:	int3   
 100a93e:	int3   
 100a93f:	int3   
 100a940:	mov    QWORD PTR [rsp+0x8],rcx
 100a945:	push   rbp
 100a946:	mov    rbp,rsp
 100a949:	sub    rsp,0x850
 100a950:	mov    rax,QWORD PTR [rip+0xaa09]        # 0x1015360
 100a957:	xor    rax,rsp
 100a95a:	mov    QWORD PTR [rbp-0x10],rax
 100a95e:	cmp    QWORD PTR [rbp+0x10],0x0
 100a963:	jne    0x100a96a
 100a965:	jmp    0x100aa38
 100a96a:	mov    r8,QWORD PTR [rbp+0x10]
 100a96e:	mov    edx,0x400
 100a973:	lea    rcx,[rsp+0x40]
 100a978:	call   QWORD PTR [rip+0xffffffffffff69aa]        # 0x1001328
 100a97e:	mov    rax,QWORD PTR [rbp+0x10]
 100a982:	mov    QWORD PTR [rsp+0x20],rax
 100a987:	mov    eax,0x5b
 100a98c:	mov    rcx,QWORD PTR [rsp+0x20]
 100a991:	mov    WORD PTR [rcx],ax
 100a994:	mov    rax,QWORD PTR [rsp+0x20]
 100a999:	add    rax,0x2
 100a99d:	mov    QWORD PTR [rsp+0x20],rax
 100a9a2:	lea    rcx,[rsp+0x40]
 100a9a7:	call   QWORD PTR [rip+0xffffffffffff6983]        # 0x1001330
 100a9ad:	mov    QWORD PTR [rsp+0x30],rax
 100a9b2:	mov    QWORD PTR [rsp+0x28],0x0
 100a9bb:	jmp    0x100a9ca
 100a9bd:	mov    rax,QWORD PTR [rsp+0x28]
 100a9c2:	inc    rax
 100a9c5:	mov    QWORD PTR [rsp+0x28],rax
 100a9ca:	mov    rax,QWORD PTR [rsp+0x30]
 100a9cf:	cmp    QWORD PTR [rsp+0x28],rax
 100a9d4:	jae    0x100aa20
 100a9d6:	mov    rax,QWORD PTR [rsp+0x20]
 100a9db:	mov    rcx,QWORD PTR [rsp+0x28]
 100a9e0:	movzx  ecx,WORD PTR [rsp+rcx*2+0x40]
 100a9e5:	mov    WORD PTR [rax],cx
 100a9e8:	mov    rax,QWORD PTR [rsp+0x20]
 100a9ed:	movzx  eax,WORD PTR [rax]
 100a9f0:	cmp    eax,0x5d
 100a9f3:	jne    0x100aa10
 100a9f5:	mov    rax,QWORD PTR [rsp+0x20]
 100a9fa:	add    rax,0x2
 100a9fe:	mov    QWORD PTR [rsp+0x20],rax
 100aa03:	mov    eax,0x5d
 100aa08:	mov    rcx,QWORD PTR [rsp+0x20]
 100aa0d:	mov    WORD PTR [rcx],ax
 100aa10:	mov    rax,QWORD PTR [rsp+0x20]
 100aa15:	add    rax,0x2
 100aa19:	mov    QWORD PTR [rsp+0x20],rax
 100aa1e:	jmp    0x100a9bd
 100aa20:	mov    eax,0x5d
 100aa25:	mov    rcx,QWORD PTR [rsp+0x20]
 100aa2a:	mov    WORD PTR [rcx],ax
 100aa2d:	xor    eax,eax
 100aa2f:	mov    rcx,QWORD PTR [rsp+0x20]
 100aa34:	mov    WORD PTR [rcx+0x2],ax
 100aa38:	mov    rcx,QWORD PTR [rbp-0x10]
 100aa3c:	xor    rcx,rsp
 100aa3f:	call   0x1012040
 100aa44:	add    rsp,0x850
 100aa4b:	pop    rbp
 100aa4c:	ret    
 100aa4d:	int3   
 100aa4e:	int3   
 100aa4f:	int3   
 100aa50:	int3   
 100aa51:	int3   
 100aa52:	int3   
 100aa53:	int3   
 100aa54:	int3   
 100aa55:	int3   
 100aa56:	int3   
 100aa57:	int3   
 100aa58:	int3   
 100aa59:	int3   
 100aa5a:	int3   
 100aa5b:	int3   
 100aa5c:	int3   
 100aa5d:	int3   
 100aa5e:	int3   
 100aa5f:	int3   
 100aa60:	mov    QWORD PTR [rsp+0x8],rcx
 100aa65:	push   rbp
 100aa66:	mov    rbp,rsp
 100aa69:	sub    rsp,0x30
 100aa6d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
 100aa76:	mov    rax,QWORD PTR [rsp+0x40]
 100aa7b:	add    rax,0x8
 100aa7f:	mov    rcx,rax
 100aa82:	call   0x100e7c0
 100aa87:	nop
 100aa88:	mov    rax,QWORD PTR [rsp+0x40]
 100aa8d:	mov    DWORD PTR [rax+0xb6c],0x1
 100aa97:	mov    rax,QWORD PTR [rsp+0x40]
 100aa9c:	mov    DWORD PTR [rax+0xb70],0x0
 100aaa6:	mov    rax,QWORD PTR [rsp+0x40]
 100aaab:	mov    DWORD PTR [rax+0xb74],0x0
 100aab5:	mov    rax,QWORD PTR [rsp+0x40]
 100aaba:	add    rax,0x114
 100aac0:	mov    r8d,0x800
 100aac6:	xor    edx,edx
 100aac8:	mov    rcx,rax
 100aacb:	call   0x1011e78
 100aad0:	mov    rax,QWORD PTR [rsp+0x40]
 100aad5:	add    rax,0x10
 100aad9:	mov    r8d,0x104
 100aadf:	xor    edx,edx
 100aae1:	mov    rcx,rax
 100aae4:	call   0x1011e78
 100aae9:	mov    rax,QWORD PTR [rsp+0x40]
 100aaee:	add    rax,0x914
 100aaf4:	mov    r8d,0x258
 100aafa:	xor    edx,edx
 100aafc:	mov    rcx,rax
 100aaff:	call   0x1011e78
 100ab04:	nop
 100ab05:	mov    rax,QWORD PTR [rsp+0x40]
 100ab0a:	add    rsp,0x30
 100ab0e:	pop    rbp
 100ab0f:	ret    
 100ab10:	int3   
 100ab11:	int3   
 100ab12:	int3   
 100ab13:	int3   
 100ab14:	int3   
 100ab15:	int3   
 100ab16:	int3   
 100ab17:	int3   
 100ab18:	int3   
 100ab19:	int3   
 100ab1a:	int3   
 100ab1b:	int3   
 100ab1c:	int3   
 100ab1d:	int3   
 100ab1e:	int3   
 100ab1f:	int3   
 100ab20:	mov    QWORD PTR [rsp+0x10],rdx
 100ab25:	mov    QWORD PTR [rsp+0x8],rcx
 100ab2a:	push   rbp
 100ab2b:	mov    rbp,rsp
 100ab2e:	sub    rsp,0x150
 100ab35:	mov    rax,QWORD PTR [rip+0xa824]        # 0x1015360
 100ab3c:	xor    rax,rsp
 100ab3f:	mov    QWORD PTR [rbp-0x10],rax
 100ab43:	mov    rax,QWORD PTR [rbp+0x10]
 100ab47:	add    rax,0x8
 100ab4b:	mov    rcx,rax
 100ab4e:	call   0x100e8b0
 100ab53:	mov    DWORD PTR [rsp+0x44],0x0
 100ab5b:	mov    DWORD PTR [rsp+0x40],0x0
 100ab63:	cmp    QWORD PTR [rbp+0x18],0x0
 100ab68:	je     0x100ac59
 100ab6e:	lea    rcx,[rip+0x157ab]        # 0x1020320
 100ab75:	call   0x100f0a0
 100ab7a:	test   eax,eax
 100ab7c:	jne    0x100ac59
 100ab82:	lea    rcx,[rip+0x15797]        # 0x1020320
 100ab89:	call   0x100f0e0
 100ab8e:	mov    QWORD PTR [rsp+0x48],rax
 100ab93:	mov    rax,QWORD PTR [rbp+0x10]
 100ab97:	add    rax,0x8
 100ab9b:	mov    rcx,rax
 100ab9e:	call   0x100e830
 100aba3:	mov    rcx,QWORD PTR [rsp+0x48]
 100aba8:	mov    rcx,QWORD PTR [rcx]
 100abab:	mov    QWORD PTR [rsp+0x60],rcx
 100abb0:	xor    r9d,r9d
 100abb3:	mov    r8,rax
 100abb6:	mov    rdx,QWORD PTR [rbp+0x18]
 100abba:	mov    rcx,QWORD PTR [rsp+0x48]
 100abbf:	mov    rax,QWORD PTR [rsp+0x60]
 100abc4:	call   QWORD PTR [rax+0x1b8]
 100abca:	mov    ecx,eax
 100abcc:	call   0x1006e20
 100abd1:	test   eax,eax
 100abd3:	jne    0x100ac59
 100abd9:	mov    rax,QWORD PTR [rbp+0x10]
 100abdd:	add    rax,0x8
 100abe1:	mov    rcx,rax
 100abe4:	call   0x100e850
 100abe9:	test   eax,eax
 100abeb:	jne    0x100ac59
 100abed:	lea    rcx,[rip+0x1572c]        # 0x1020320
 100abf4:	call   0x100f0e0
 100abf9:	mov    QWORD PTR [rsp+0x50],rax
 100abfe:	mov    rax,QWORD PTR [rsp+0x50]
 100ac03:	mov    rax,QWORD PTR [rax]
 100ac06:	lea    rdx,[rsp+0x44]
 100ac0b:	mov    rcx,QWORD PTR [rsp+0x50]
 100ac10:	call   QWORD PTR [rax+0x178]
 100ac16:	mov    ecx,eax
 100ac18:	call   0x1006e20
 100ac1d:	test   eax,eax
 100ac1f:	jne    0x100ac59
 100ac21:	mov    rax,QWORD PTR [rbp+0x10]
 100ac25:	add    rax,0x8
 100ac29:	mov    rcx,rax
 100ac2c:	call   0x100e890
 100ac31:	mov    QWORD PTR [rsp+0x58],rax
 100ac36:	mov    rax,QWORD PTR [rsp+0x58]
 100ac3b:	mov    rax,QWORD PTR [rax]
 100ac3e:	lea    rdx,[rsp+0x40]
 100ac43:	mov    rcx,QWORD PTR [rsp+0x58]
 100ac48:	call   QWORD PTR [rax+0xd8]
 100ac4e:	mov    ecx,eax
 100ac50:	call   0x1006e20
 100ac55:	test   eax,eax
 100ac57:	je     0x100ac60
 100ac59:	xor    eax,eax
 100ac5b:	jmp    0x100ae8c
 100ac60:	mov    rax,QWORD PTR [rbp+0x10]
 100ac64:	add    rax,0x10
 100ac68:	mov    r8,QWORD PTR [rbp+0x18]
 100ac6c:	mov    edx,0x82
 100ac71:	mov    rcx,rax
 100ac74:	call   QWORD PTR [rip+0xffffffffffff66ae]        # 0x1001328
 100ac7a:	cmp    DWORD PTR [rsp+0x44],0x0
 100ac7f:	jne    0x100acfb
 100ac81:	cmp    DWORD PTR [rsp+0x40],0x0
 100ac86:	jne    0x100acfb
 100ac88:	mov    r8d,0x1000
 100ac8e:	lea    rdx,[rip+0x101fb]        # 0x101ae90
 100ac95:	mov    ecx,0x39
 100ac9a:	call   0x1008800
 100ac9f:	mov    rax,QWORD PTR [rbp+0x10]
 100aca3:	add    rax,0x10
 100aca7:	lea    rcx,[rip+0xffffffffffff6c22]        # 0x10018d0
 100acae:	mov    QWORD PTR [rsp+0x28],rcx
 100acb3:	mov    QWORD PTR [rsp+0x20],rax
 100acb8:	lea    r9,[rip+0x13581]        # 0x101e240
 100acbf:	lea    r8,[rip+0x101ca]        # 0x101ae90
 100acc6:	mov    edx,0x2710
 100accb:	lea    rcx,[rip+0xb39e]        # 0x1016070
 100acd2:	call   QWORD PTR [rip+0xffffffffffff6520]        # 0x10011f8
 100acd8:	lea    rcx,[rip+0xb391]        # 0x1016070
 100acdf:	call   0x1008f00
 100ace4:	mov    rax,QWORD PTR [rbp+0x10]
 100ace8:	add    rax,0x8
 100acec:	mov    rcx,rax
 100acef:	call   0x100e8b0
 100acf4:	xor    eax,eax
 100acf6:	jmp    0x100ae8c
 100acfb:	mov    rax,QWORD PTR [rbp+0x10]
 100acff:	add    rax,0x914
 100ad05:	mov    r8d,0x258
 100ad0b:	xor    edx,edx
 100ad0d:	mov    rcx,rax
 100ad10:	call   0x1011e78
 100ad15:	mov    eax,0x5b
 100ad1a:	mov    rcx,QWORD PTR [rbp+0x10]
 100ad1e:	mov    WORD PTR [rcx+0x914],ax
 100ad25:	mov    eax,0x23
 100ad2a:	mov    rcx,QWORD PTR [rbp+0x10]
 100ad2e:	mov    WORD PTR [rcx+0x916],ax
 100ad35:	mov    eax,0x23
 100ad3a:	mov    rcx,QWORD PTR [rbp+0x10]
 100ad3e:	mov    WORD PTR [rcx+0x918],ax
 100ad45:	mov    rax,QWORD PTR [rbp+0x10]
 100ad49:	add    rax,0x914
 100ad4f:	lea    r8,[rip+0xffffffffffff81d2]        # 0x1002f28
 100ad56:	mov    edx,0x12c
 100ad5b:	mov    rcx,rax
 100ad5e:	call   QWORD PTR [rip+0xffffffffffff65ac]        # 0x1001310
 100ad64:	mov    r8d,0xd0
 100ad6a:	xor    edx,edx
 100ad6c:	lea    rcx,[rsp+0x70]
 100ad71:	call   0x1011e78
 100ad76:	mov    rax,QWORD PTR [rbp+0x10]
 100ad7a:	add    rax,0x10
 100ad7e:	mov    r9d,0x64
 100ad84:	mov    r8,rax
 100ad87:	mov    edx,0x68
 100ad8c:	lea    rcx,[rsp+0x70]
 100ad91:	call   QWORD PTR [rip+0xffffffffffff65a9]        # 0x1001340
 100ad97:	mov    rax,QWORD PTR [rbp+0x10]
 100ad9b:	add    rax,0x914
 100ada1:	mov    rcx,rax
 100ada4:	call   QWORD PTR [rip+0xffffffffffff6586]        # 0x1001330
 100adaa:	mov    QWORD PTR [rsp+0x30],rax
 100adaf:	lea    rcx,[rsp+0x70]
 100adb4:	call   QWORD PTR [rip+0xffffffffffff6576]        # 0x1001330
 100adba:	mov    QWORD PTR [rsp+0x68],rax
 100adbf:	mov    QWORD PTR [rsp+0x38],0x0
 100adc8:	jmp    0x100add7
 100adca:	mov    rax,QWORD PTR [rsp+0x38]
 100adcf:	inc    rax
 100add2:	mov    QWORD PTR [rsp+0x38],rax
 100add7:	mov    rax,QWORD PTR [rsp+0x68]
 100addc:	cmp    QWORD PTR [rsp+0x38],rax
 100ade1:	jae    0x100ae44
 100ade3:	mov    rax,QWORD PTR [rbp+0x10]
 100ade7:	mov    rcx,QWORD PTR [rsp+0x30]
 100adec:	mov    rdx,QWORD PTR [rsp+0x38]
 100adf1:	movzx  edx,WORD PTR [rsp+rdx*2+0x70]
 100adf6:	mov    WORD PTR [rax+rcx*2+0x914],dx
 100adfe:	mov    rax,QWORD PTR [rsp+0x30]
 100ae03:	inc    rax
 100ae06:	mov    QWORD PTR [rsp+0x30],rax
 100ae0b:	mov    rax,QWORD PTR [rsp+0x38]
 100ae10:	movzx  eax,WORD PTR [rsp+rax*2+0x70]
 100ae15:	cmp    eax,0x5d
 100ae18:	jne    0x100ae42
 100ae1a:	mov    rax,QWORD PTR [rbp+0x10]
 100ae1e:	mov    rcx,QWORD PTR [rsp+0x30]
 100ae23:	mov    rdx,QWORD PTR [rsp+0x38]
 100ae28:	movzx  edx,WORD PTR [rsp+rdx*2+0x70]
 100ae2d:	mov    WORD PTR [rax+rcx*2+0x914],dx
 100ae35:	mov    rax,QWORD PTR [rsp+0x30]
 100ae3a:	inc    rax
 100ae3d:	mov    QWORD PTR [rsp+0x30],rax
 100ae42:	jmp    0x100adca
 100ae44:	mov    eax,0x5d
 100ae49:	mov    rcx,QWORD PTR [rbp+0x10]
 100ae4d:	mov    rdx,QWORD PTR [rsp+0x30]
 100ae52:	mov    WORD PTR [rcx+rdx*2+0x914],ax
 100ae5a:	mov    rax,QWORD PTR [rsp+0x30]
 100ae5f:	inc    rax
 100ae62:	mov    QWORD PTR [rsp+0x30],rax
 100ae67:	xor    eax,eax
 100ae69:	mov    rcx,QWORD PTR [rbp+0x10]
 100ae6d:	mov    rdx,QWORD PTR [rsp+0x30]
 100ae72:	mov    WORD PTR [rcx+rdx*2+0x914],ax
 100ae7a:	mov    rax,QWORD PTR [rsp+0x30]
 100ae7f:	inc    rax
 100ae82:	mov    QWORD PTR [rsp+0x30],rax
 100ae87:	mov    eax,0x1
 100ae8c:	mov    rcx,QWORD PTR [rbp-0x10]
 100ae90:	xor    rcx,rsp
 100ae93:	call   0x1012040
 100ae98:	add    rsp,0x150
 100ae9f:	pop    rbp
 100aea0:	ret    
 100aea1:	int3   
 100aea2:	int3   
 100aea3:	int3   
 100aea4:	int3   
 100aea5:	int3   
 100aea6:	int3   
 100aea7:	int3   
 100aea8:	int3   
 100aea9:	int3   
 100aeaa:	int3   
 100aeab:	int3   
 100aeac:	int3   
 100aead:	int3   
 100aeae:	int3   
 100aeaf:	int3   
 100aeb0:	mov    DWORD PTR [rsp+0x10],edx
 100aeb4:	mov    QWORD PTR [rsp+0x8],rcx
 100aeb9:	push   rbp
 100aeba:	mov    rbp,rsp
 100aebd:	push   rdi
 100aebe:	sub    rsp,0xb28
 100aec5:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
 100aecd:	mov    rax,QWORD PTR [rip+0xa48c]        # 0x1015360
 100aed4:	xor    rax,rsp
 100aed7:	mov    QWORD PTR [rbp-0x18],rax
 100aedb:	mov    rax,QWORD PTR [rbp+0x10]
 100aedf:	add    rax,0x8
 100aee3:	mov    rcx,rax
 100aee6:	call   0x100e850
 100aeeb:	test   eax,eax
 100aeed:	je     0x100aef9
 100aeef:	mov    eax,0x1
 100aef4:	jmp    0x100b6ab
 100aef9:	lea    rcx,[rsp+0x38]
 100aefe:	call   0x10038f0
 100af03:	nop
 100af04:	movzx  eax,WORD PTR [rip+0xffffffffffff68b5]        # 0x10017c0
 100af0b:	mov    WORD PTR [rsp+0x690],ax
 100af13:	lea    rax,[rsp+0x692]
 100af1b:	mov    rdi,rax
 100af1e:	xor    eax,eax
 100af20:	mov    ecx,0x3fe
 100af25:	rep stos BYTE PTR es:[rdi],al
 100af27:	movzx  eax,WORD PTR [rip+0xffffffffffff6892]        # 0x10017c0
 100af2e:	mov    WORD PTR [rsp+0x490],ax
 100af36:	lea    rax,[rsp+0x492]
 100af3e:	mov    rdi,rax
 100af41:	xor    eax,eax
 100af43:	mov    ecx,0x1fe
 100af48:	rep stos BYTE PTR es:[rdi],al
 100af4a:	movzx  eax,WORD PTR [rip+0xffffffffffff686f]        # 0x10017c0
 100af51:	mov    WORD PTR [rsp+0x90],ax
 100af59:	lea    rax,[rsp+0x92]
 100af61:	mov    rdi,rax
 100af64:	xor    eax,eax
 100af66:	mov    ecx,0x3fe
 100af6b:	rep stos BYTE PTR es:[rdi],al
 100af6d:	mov    DWORD PTR [rsp+0x30],0x0
 100af75:	mov    DWORD PTR [rsp+0x40],0x0
 100af7d:	mov    DWORD PTR [rsp+0x44],0x0
 100af85:	mov    DWORD PTR [rsp+0x54],0x0
 100af8d:	lea    rcx,[rsp+0x48]
 100af92:	call   0x1010be0
 100af97:	nop
 100af98:	lea    rcx,[rbp-0x58]
 100af9c:	call   0x10038c0
 100afa1:	mov    eax,DWORD PTR [rbp+0x18]
 100afa4:	mov    DWORD PTR [rsp+0x5c],eax
 100afa8:	cmp    DWORD PTR [rsp+0x5c],0x7
 100afad:	ja     0x100b0bc
 100afb3:	movsxd rax,DWORD PTR [rsp+0x5c]
 100afb8:	lea    rcx,[rip+0xffffffffffff5041]        # 0x1000000
 100afbf:	mov    eax,DWORD PTR [rcx+rax*4+0xb6c4]
 100afc6:	add    rax,rcx
 100afc9:	jmp    rax
 100afcb:	mov    DWORD PTR [rip+0x1493b],0x59        # 0x101f910
 100afd5:	mov    r8d,0x200
 100afdb:	lea    rdx,[rsp+0x90]
 100afe3:	mov    ecx,0x13
 100afe8:	call   0x1008800
 100afed:	jmp    0x100b0e2
 100aff2:	mov    DWORD PTR [rsp+0x44],0x1
 100affa:	mov    DWORD PTR [rip+0x1490c],0x5a        # 0x101f910
 100b004:	mov    r8d,0x200
 100b00a:	lea    rdx,[rsp+0x90]
 100b012:	mov    ecx,0x14
 100b017:	call   0x1008800
 100b01c:	jmp    0x100b0e2
 100b021:	mov    DWORD PTR [rip+0x148e5],0x5b        # 0x101f910
 100b02b:	mov    r8d,0x200
 100b031:	lea    rdx,[rsp+0x90]
 100b039:	mov    ecx,0x15
 100b03e:	call   0x1008800
 100b043:	jmp    0x100b0e2
 100b048:	mov    DWORD PTR [rip+0x148be],0x5c        # 0x101f910
 100b052:	mov    r8d,0x200
 100b058:	lea    rdx,[rsp+0x90]
 100b060:	mov    ecx,0x16
 100b065:	call   0x1008800
 100b06a:	jmp    0x100b0e2
 100b06c:	mov    DWORD PTR [rsp+0x44],0x1
 100b074:	mov    DWORD PTR [rip+0x14892],0x5d        # 0x101f910
 100b07e:	mov    r8d,0x200
 100b084:	lea    rdx,[rsp+0x90]
 100b08c:	mov    ecx,0x17
 100b091:	call   0x1008800
 100b096:	jmp    0x100b0e2
 100b098:	mov    DWORD PTR [rip+0x1486e],0x5e        # 0x101f910
 100b0a2:	mov    r8d,0x200
 100b0a8:	lea    rdx,[rsp+0x90]
 100b0b0:	mov    ecx,0x18
 100b0b5:	call   0x1008800
 100b0ba:	jmp    0x100b0e2
 100b0bc:	mov    eax,DWORD PTR [rsp+0x30]
 100b0c0:	mov    DWORD PTR [rsp+0x6c],eax
 100b0c4:	lea    rcx,[rsp+0x48]
 100b0c9:	call   0x1010c10
 100b0ce:	nop
 100b0cf:	lea    rcx,[rsp+0x38]
 100b0d4:	call   0x1003920
 100b0d9:	mov    eax,DWORD PTR [rsp+0x6c]
 100b0dd:	jmp    0x100b6ab
 100b0e2:	cmp    DWORD PTR [rsp+0x44],0x0
 100b0e7:	je     0x100b1b2
 100b0ed:	mov    DWORD PTR [rsp+0x68],0x0
 100b0f5:	mov    rax,QWORD PTR [rbp+0x10]
 100b0f9:	add    rax,0x8
 100b0fd:	mov    rcx,rax
 100b100:	call   0x100e890
 100b105:	mov    QWORD PTR [rsp+0xaa0],rax
 100b10d:	lea    rcx,[rsp+0x48]
 100b112:	call   0x1010c90
 100b117:	mov    rcx,QWORD PTR [rsp+0xaa0]
 100b11f:	mov    rcx,QWORD PTR [rcx]
 100b122:	mov    QWORD PTR [rbp-0x50],rcx
 100b126:	mov    rdx,rax
 100b129:	mov    rcx,QWORD PTR [rsp+0xaa0]
 100b131:	mov    rax,QWORD PTR [rbp-0x50]
 100b135:	call   QWORD PTR [rax+0xe0]
 100b13b:	test   eax,eax
 100b13d:	jl     0x100b1b2
 100b13f:	lea    rcx,[rsp+0x48]
 100b144:	call   0x1010cb0
 100b149:	mov    QWORD PTR [rbp-0x80],rax
 100b14d:	mov    rax,QWORD PTR [rbp-0x80]
 100b151:	mov    rax,QWORD PTR [rax]
 100b154:	lea    rdx,[rsp+0x68]
 100b159:	mov    rcx,QWORD PTR [rbp-0x80]
 100b15d:	call   QWORD PTR [rax+0x70]
 100b160:	mov    ecx,eax
 100b162:	call   0x1006e20
 100b167:	test   eax,eax
 100b169:	jne    0x100b1b2
 100b16b:	cmp    DWORD PTR [rsp+0x68],0x0
 100b170:	jne    0x100b1b2
 100b172:	lea    rcx,[rsp+0x48]
 100b177:	call   0x1010cb0
 100b17c:	mov    QWORD PTR [rsp+0x80],rax
 100b184:	mov    rax,QWORD PTR [rsp+0x80]
 100b18c:	mov    rax,QWORD PTR [rax]
 100b18f:	mov    edx,0x1
 100b194:	mov    rcx,QWORD PTR [rsp+0x80]
 100b19c:	call   QWORD PTR [rax+0x78]
 100b19f:	mov    ecx,eax
 100b1a1:	call   0x1006e20
 100b1a6:	test   eax,eax
 100b1a8:	jne    0x100b1b2
 100b1aa:	mov    DWORD PTR [rsp+0x54],0x1
 100b1b2:	mov    edx,DWORD PTR [rip+0x14758]        # 0x101f910
 100b1b8:	mov    rcx,QWORD PTR [rbp+0x10]
 100b1bc:	call   0x100e750
 100b1c1:	mov    rax,QWORD PTR [rbp+0x10]
 100b1c5:	add    rax,0x10
 100b1c9:	mov    r9,rax
 100b1cc:	lea    r8,[rsp+0x90]
 100b1d4:	mov    edx,0x200
 100b1d9:	lea    rcx,[rsp+0x690]
 100b1e1:	call   QWORD PTR [rip+0xffffffffffff6011]        # 0x10011f8
 100b1e7:	mov    r8d,0x1000
 100b1ed:	lea    rdx,[rip+0xfc9c]        # 0x101ae90
 100b1f4:	mov    ecx,0x12
 100b1f9:	call   0x1008800
 100b1fe:	mov    eax,DWORD PTR [rip+0xa1a8]        # 0x10153ac
 100b204:	inc    eax
 100b206:	mov    DWORD PTR [rip+0xa1a0],eax        # 0x10153ac
 100b20c:	lea    rax,[rsp+0x690]
 100b214:	mov    QWORD PTR [rsp+0x20],rax
 100b219:	mov    r9d,DWORD PTR [rip+0xa18c]        # 0x10153ac
 100b220:	lea    r8,[rip+0xfc69]        # 0x101ae90
 100b227:	mov    edx,0x2710
 100b22c:	lea    rcx,[rip+0xae3d]        # 0x1016070
 100b233:	call   QWORD PTR [rip+0xffffffffffff5fbf]        # 0x10011f8
 100b239:	lea    rcx,[rip+0xae30]        # 0x1016070
 100b240:	call   0x1008f00
 100b245:	mov    eax,DWORD PTR [rbp+0x18]
 100b248:	mov    DWORD PTR [rsp+0x64],eax
 100b24c:	cmp    DWORD PTR [rsp+0x64],0x7
 100b251:	ja     0x100b475
 100b257:	movsxd rax,DWORD PTR [rsp+0x64]
 100b25c:	lea    rcx,[rip+0xffffffffffff4d9d]        # 0x1000000
 100b263:	mov    eax,DWORD PTR [rcx+rax*4+0xb6e4]
 100b26a:	add    rax,rcx
 100b26d:	jmp    rax
 100b26f:	mov    rcx,QWORD PTR [rbp+0x10]
 100b273:	call   0x100e000
 100b278:	mov    rax,QWORD PTR [rbp+0x10]
 100b27c:	add    rax,0x8
 100b280:	mov    rcx,rax
 100b283:	call   0x100e890
 100b288:	mov    QWORD PTR [rbp-0x70],rax
 100b28c:	lea    rcx,[rsp+0x38]
 100b291:	call   0x10039d0
 100b296:	mov    rcx,QWORD PTR [rbp-0x70]
 100b29a:	mov    rcx,QWORD PTR [rcx]
 100b29d:	mov    QWORD PTR [rbp-0x60],rcx
 100b2a1:	mov    rdx,rax
 100b2a4:	mov    rcx,QWORD PTR [rbp-0x70]
 100b2a8:	mov    rax,QWORD PTR [rbp-0x60]
 100b2ac:	call   QWORD PTR [rax+0x3a0]
 100b2b2:	mov    ecx,eax
 100b2b4:	call   0x1006e20
 100b2b9:	test   eax,eax
 100b2bb:	jne    0x100b2c5
 100b2bd:	mov    DWORD PTR [rsp+0x30],0x1
 100b2c5:	jmp    0x100b49b
 100b2ca:	mov    rcx,QWORD PTR [rbp+0x10]
 100b2ce:	call   0x100e000
 100b2d3:	cmp    DWORD PTR [rsp+0x44],0x0
 100b2d8:	je     0x100b2e4
 100b2da:	mov    DWORD PTR [rsp+0x60],0x1
 100b2e2:	jmp    0x100b2ec
 100b2e4:	mov    DWORD PTR [rsp+0x60],0x0
 100b2ec:	mov    rax,QWORD PTR [rbp+0x10]
 100b2f0:	add    rax,0x8
 100b2f4:	mov    rcx,rax
 100b2f7:	call   0x100e890
 100b2fc:	mov    QWORD PTR [rsp+0xa90],rax
 100b304:	lea    rcx,[rsp+0x38]
 100b309:	call   0x10039d0
 100b30e:	mov    rcx,QWORD PTR [rsp+0xa90]
 100b316:	mov    rcx,QWORD PTR [rcx]
 100b319:	mov    QWORD PTR [rbp-0x38],rcx
 100b31d:	mov    r8d,DWORD PTR [rsp+0x60]
 100b322:	mov    rdx,rax
 100b325:	mov    rcx,QWORD PTR [rsp+0xa90]
 100b32d:	mov    rax,QWORD PTR [rbp-0x38]
 100b331:	call   QWORD PTR [rax+0x300]
 100b337:	mov    ecx,eax
 100b339:	call   0x1006e20
 100b33e:	test   eax,eax
 100b340:	jne    0x100b34a
 100b342:	mov    DWORD PTR [rsp+0x30],0x1
 100b34a:	jmp    0x100b49b
 100b34f:	mov    rax,QWORD PTR [rbp+0x10]
 100b353:	add    rax,0x8
 100b357:	mov    rcx,rax
 100b35a:	call   0x100e890
 100b35f:	mov    QWORD PTR [rsp+0xa98],rax
 100b367:	lea    rcx,[rsp+0x38]
 100b36c:	call   0x10039d0
 100b371:	mov    rcx,QWORD PTR [rsp+0xa98]
 100b379:	mov    rcx,QWORD PTR [rcx]
 100b37c:	mov    QWORD PTR [rbp-0x40],rcx
 100b380:	mov    rdx,rax
 100b383:	mov    rcx,QWORD PTR [rsp+0xa98]
 100b38b:	mov    rax,QWORD PTR [rbp-0x40]
 100b38f:	call   QWORD PTR [rax+0x398]
 100b395:	mov    ecx,eax
 100b397:	call   0x1006e20
 100b39c:	test   eax,eax
 100b39e:	jne    0x100b3a8
 100b3a0:	mov    DWORD PTR [rsp+0x30],0x1
 100b3a8:	jmp    0x100b49b
 100b3ad:	cmp    DWORD PTR [rsp+0x44],0x0
 100b3b2:	je     0x100b3be
 100b3b4:	mov    DWORD PTR [rsp+0x50],0x1
 100b3bc:	jmp    0x100b3c6
 100b3be:	mov    DWORD PTR [rsp+0x50],0x0
 100b3c6:	mov    rax,QWORD PTR [rbp+0x10]
 100b3ca:	add    rax,0x8
 100b3ce:	mov    rcx,rax
 100b3d1:	call   0x100e890
 100b3d6:	mov    QWORD PTR [rsp+0xaa8],rax
 100b3de:	lea    rcx,[rsp+0x38]
 100b3e3:	call   0x10039d0
 100b3e8:	mov    rcx,QWORD PTR [rsp+0xaa8]
 100b3f0:	mov    rcx,QWORD PTR [rcx]
 100b3f3:	mov    QWORD PTR [rbp-0x28],rcx
 100b3f7:	mov    r8d,DWORD PTR [rsp+0x50]
 100b3fc:	mov    rdx,rax
 100b3ff:	mov    rcx,QWORD PTR [rsp+0xaa8]
 100b407:	mov    rax,QWORD PTR [rbp-0x28]
 100b40b:	call   QWORD PTR [rax+0x2f8]
 100b411:	mov    ecx,eax
 100b413:	call   0x1006e20
 100b418:	test   eax,eax
 100b41a:	jne    0x100b424
 100b41c:	mov    DWORD PTR [rsp+0x30],0x1
 100b424:	jmp    0x100b49b
 100b426:	mov    rax,QWORD PTR [rbp+0x10]
 100b42a:	add    rax,0x8
 100b42e:	mov    rcx,rax
 100b431:	call   0x100e890
 100b436:	mov    QWORD PTR [rbp-0x78],rax
 100b43a:	lea    rcx,[rsp+0x38]
 100b43f:	call   0x10039d0
 100b444:	mov    rcx,QWORD PTR [rbp-0x78]
 100b448:	mov    rcx,QWORD PTR [rcx]
 100b44b:	mov    QWORD PTR [rbp-0x30],rcx
 100b44f:	mov    rdx,rax
 100b452:	mov    rcx,QWORD PTR [rbp-0x78]
 100b456:	mov    rax,QWORD PTR [rbp-0x30]
 100b45a:	call   QWORD PTR [rax+0x308]
 100b460:	mov    ecx,eax
 100b462:	call   0x1006e20
 100b467:	test   eax,eax
 100b469:	jne    0x100b473
 100b46b:	mov    DWORD PTR [rsp+0x30],0x1
 100b473:	jmp    0x100b49b
 100b475:	mov    eax,DWORD PTR [rsp+0x30]
 100b479:	mov    DWORD PTR [rsp+0x70],eax
 100b47d:	lea    rcx,[rsp+0x48]
 100b482:	call   0x1010c10
 100b487:	nop
 100b488:	lea    rcx,[rsp+0x38]
 100b48d:	call   0x1003920
 100b492:	mov    eax,DWORD PTR [rsp+0x70]
 100b496:	jmp    0x100b6ab
 100b49b:	cmp    DWORD PTR [rsp+0x54],0x0
 100b4a0:	je     0x100b4c0
 100b4a2:	lea    rcx,[rsp+0x48]
 100b4a7:	call   0x1010cb0
 100b4ac:	mov    QWORD PTR [rbp-0x68],rax
 100b4b0:	mov    rax,QWORD PTR [rbp-0x68]
 100b4b4:	mov    rax,QWORD PTR [rax]
 100b4b7:	xor    edx,edx
 100b4b9:	mov    rcx,QWORD PTR [rbp-0x68]
 100b4bd:	call   QWORD PTR [rax+0x78]
 100b4c0:	lea    rcx,[rbp-0x48]
 100b4c4:	call   0x10038c0
 100b4c9:	mov    rdx,QWORD PTR [rbp-0x58]
 100b4cd:	mov    rcx,QWORD PTR [rbp-0x48]
 100b4d1:	call   0x1003830
 100b4d6:	cvttsd2si eax,xmm0
 100b4da:	mov    DWORD PTR [rsp+0x40],eax
 100b4de:	mov    r8d,0x1000
 100b4e4:	lea    rdx,[rip+0xf9a5]        # 0x101ae90
 100b4eb:	mov    ecx,0x19
 100b4f0:	call   0x1008800
 100b4f5:	mov    eax,DWORD PTR [rsp+0x40]
 100b4f9:	cdq    
 100b4fa:	mov    ecx,0x3c
 100b4ff:	idiv   ecx
 100b501:	mov    eax,edx
 100b503:	cmp    eax,0x1
 100b506:	jle    0x100b51c
 100b508:	mov    eax,DWORD PTR [rsp+0x40]
 100b50c:	cdq    
 100b50d:	mov    ecx,0x3c
 100b512:	idiv   ecx
 100b514:	mov    eax,edx
 100b516:	mov    DWORD PTR [rsp+0x58],eax
 100b51a:	jmp    0x100b524
 100b51c:	mov    DWORD PTR [rsp+0x58],0x1
 100b524:	mov    eax,DWORD PTR [rsp+0x40]
 100b528:	cdq    
 100b529:	mov    ecx,0xe10
 100b52e:	idiv   ecx
 100b530:	mov    eax,edx
 100b532:	cdq    
 100b533:	mov    ecx,0x3c
 100b538:	idiv   ecx
 100b53a:	mov    DWORD PTR [rsp+0x78],eax
 100b53e:	mov    eax,DWORD PTR [rsp+0x40]
 100b542:	cdq    
 100b543:	mov    ecx,0xe10
 100b548:	idiv   ecx
 100b54a:	mov    ecx,DWORD PTR [rsp+0x58]
 100b54e:	mov    DWORD PTR [rsp+0x28],ecx
 100b552:	mov    ecx,DWORD PTR [rsp+0x78]
 100b556:	mov    DWORD PTR [rsp+0x20],ecx
 100b55a:	mov    r9d,eax
 100b55d:	lea    r8,[rip+0xf92c]        # 0x101ae90
 100b564:	mov    edx,0x100
 100b569:	lea    rcx,[rsp+0x490]
 100b571:	call   QWORD PTR [rip+0xffffffffffff5c81]        # 0x10011f8
 100b577:	cmp    DWORD PTR [rsp+0x30],0x0
 100b57c:	jne    0x100b64e
 100b582:	lea    rcx,[rsp+0x38]
 100b587:	call   0x1003990
 100b58c:	test   rax,rax
 100b58f:	je     0x100b640
 100b595:	lea    rcx,[rsp+0x38]
 100b59a:	call   0x10039b0
 100b59f:	mov    r9d,0x7ff
 100b5a5:	mov    r8,rax
 100b5a8:	mov    edx,0x800
 100b5ad:	lea    rcx,[rip+0x13350]        # 0x101e904
 100b5b4:	call   QWORD PTR [rip+0xffffffffffff5d86]        # 0x1001340
 100b5ba:	xor    eax,eax
 100b5bc:	mov    WORD PTR [rip+0x1433f],ax        # 0x101f902
 100b5c3:	mov    DWORD PTR [rip+0x14337],0x0        # 0x101f904
 100b5cd:	mov    r8d,0x1000
 100b5d3:	lea    rdx,[rip+0xf8b6]        # 0x101ae90
 100b5da:	mov    ecx,0x1a
 100b5df:	call   0x1008800
 100b5e4:	lea    rcx,[rsp+0x38]
 100b5e9:	call   0x10039b0
 100b5ee:	mov    r8,rax
 100b5f1:	lea    rdx,[rip+0xf898]        # 0x101ae90
 100b5f8:	lea    rcx,[rip+0xffffffffffff6891]        # 0x1001e90
 100b5ff:	call   QWORD PTR [rip+0xffffffffffff5d4b]        # 0x1001350
 100b605:	cmp    DWORD PTR [rip+0x11888],0x0        # 0x101ce94
 100b60c:	je     0x100b640
 100b60e:	cmp    QWORD PTR [rip+0x9d82],0x0        # 0x1015398
 100b616:	je     0x100b640
 100b618:	lea    rcx,[rsp+0x38]
 100b61d:	call   0x1003990
 100b622:	mov    r9,rax
 100b625:	lea    r8,[rip+0xf864]        # 0x101ae90
 100b62c:	lea    rdx,[rip+0xffffffffffff686d]        # 0x1001ea0
 100b633:	mov    rcx,QWORD PTR [rip+0x9d5e]        # 0x1015398
 100b63a:	call   QWORD PTR [rip+0xffffffffffff5ba8]        # 0x10011e8
 100b640:	mov    rax,QWORD PTR [rbp+0x10]
 100b644:	mov    DWORD PTR [rax+0xb6c],0x0
 100b64e:	lea    r9,[rsp+0x490]
 100b656:	lea    r8,[rip+0xffffffffffff6853]        # 0x1001eb0
 100b65d:	mov    edx,0x2710
 100b662:	lea    rcx,[rip+0xaa07]        # 0x1016070
 100b669:	call   QWORD PTR [rip+0xffffffffffff5b89]        # 0x10011f8
 100b66f:	lea    rcx,[rip+0xa9fa]        # 0x1016070
 100b676:	call   0x1008f00
 100b67b:	mov    eax,DWORD PTR [rsp+0x30]
 100b67f:	mov    DWORD PTR [rip+0x1427f],eax        # 0x101f904
 100b685:	call   0x10082e0
 100b68a:	mov    eax,DWORD PTR [rsp+0x30]
 100b68e:	mov    DWORD PTR [rsp+0x74],eax
 100b692:	lea    rcx,[rsp+0x48]
 100b697:	call   0x1010c10
 100b69c:	nop
 100b69d:	lea    rcx,[rsp+0x38]
 100b6a2:	call   0x1003920
 100b6a7:	mov    eax,DWORD PTR [rsp+0x74]
 100b6ab:	mov    rcx,QWORD PTR [rbp-0x18]
 100b6af:	xor    rcx,rsp
 100b6b2:	call   0x1012040
 100b6b7:	add    rsp,0xb28
 100b6be:	pop    rdi
 100b6bf:	pop    rbp
 100b6c0:	ret    
 100b6c1:	nop    DWORD PTR [rax]
 100b6c4:	retf   
 100b6c5:	scas   eax,DWORD PTR es:[rdi]
 100b6c6:	add    BYTE PTR [rax],al
 100b6c8:	cli    
 100b6c9:	scas   eax,DWORD PTR es:[rdi]
 100b6ca:	add    BYTE PTR [rax],al
 100b6cc:	and    DWORD PTR [rax-0x4fb80000],esi
 100b6d2:	add    BYTE PTR [rax],al
 100b6d4:	je     0x100b686
 100b6d6:	add    BYTE PTR [rax],al
 100b6d8:	cwde   
 100b6d9:	mov    al,0x0
 100b6db:	add    dl,dh
 100b6dd:	scas   eax,DWORD PTR es:[rdi]
 100b6de:	add    BYTE PTR [rax],al
 100b6e0:	ins    BYTE PTR es:[rdi],dx
 100b6e1:	mov    al,0x0
 100b6e3:	add    BYTE PTR [rdi-0x4e],ch
 100b6e6:	add    BYTE PTR [rax],al
 100b6e8:	retf   0xb2
 100b6eb:	add    dl,cl
 100b6ed:	mov    dl,0x0
 100b6ef:	add    BYTE PTR [rdi-0x4d],cl
 100b6f2:	add    BYTE PTR [rax],al
 100b6f4:	lods   eax,DWORD PTR ds:[rsi]
 100b6f5:	mov    bl,0x0
 100b6f7:	add    BYTE PTR [rsi],ah
 100b6f9:	mov    ah,0x0
 100b6fb:	add    dl,cl
 100b6fd:	mov    dl,0x0
 100b6ff:	add    BYTE PTR [rbp-0x33ffff4d],ch
 100b705:	int3   
 100b706:	int3   
 100b707:	int3   
 100b708:	int3   
 100b709:	int3   
 100b70a:	int3   
 100b70b:	int3   
 100b70c:	int3   
 100b70d:	int3   
 100b70e:	int3   
 100b70f:	int3   
 100b710:	mov    DWORD PTR [rsp+0x10],edx
 100b714:	mov    QWORD PTR [rsp+0x8],rcx
 100b719:	push   rbp
 100b71a:	mov    rbp,rsp
 100b71d:	push   rdi
 100b71e:	sub    rsp,0x3a8
 100b725:	mov    QWORD PTR [rsp+0x300],0xfffffffffffffffe
 100b731:	mov    rax,QWORD PTR [rip+0x9c28]        # 0x1015360
 100b738:	xor    rax,rsp
 100b73b:	mov    QWORD PTR [rbp-0x20],rax
 100b73f:	mov    rax,QWORD PTR [rbp+0x10]
 100b743:	add    rax,0x8
 100b747:	mov    rcx,rax
 100b74a:	call   0x100e850
 100b74f:	test   eax,eax
 100b751:	je     0x100b75d
 100b753:	mov    eax,0x1
 100b758:	jmp    0x100be6e
 100b75d:	mov    edx,0x43
 100b762:	mov    rcx,QWORD PTR [rbp+0x10]
 100b766:	call   0x100e750
 100b76b:	xor    edx,edx
 100b76d:	lea    rcx,[rsp+0x40]
 100b772:	call   0x1010d00
 100b777:	nop
 100b778:	xor    edx,edx
 100b77a:	lea    rcx,[rsp+0x2a8]
 100b782:	call   0x1010e40
 100b787:	nop
 100b788:	mov    DWORD PTR [rsp+0x2f4],0x0
 100b793:	mov    DWORD PTR [rsp+0x5c],0x0
 100b79b:	mov    DWORD PTR [rsp+0x2f0],0x0
 100b7a6:	mov    DWORD PTR [rsp+0x38],0x0
 100b7ae:	movzx  eax,WORD PTR [rip+0xffffffffffff600b]        # 0x10017c0
 100b7b5:	mov    WORD PTR [rsp+0x90],ax
 100b7bd:	lea    rax,[rsp+0x92]
 100b7c5:	mov    rdi,rax
 100b7c8:	xor    eax,eax
 100b7ca:	mov    ecx,0x1fe
 100b7cf:	rep stos BYTE PTR es:[rdi],al
 100b7d1:	movzx  eax,WORD PTR [rip+0xffffffffffff5fe8]        # 0x10017c0
 100b7d8:	mov    WORD PTR [rsp+0x310],ax
 100b7e0:	lea    rax,[rsp+0x312]
 100b7e8:	mov    rdi,rax
 100b7eb:	xor    eax,eax
 100b7ed:	mov    ecx,0x7e
 100b7f2:	rep stos BYTE PTR es:[rdi],al
 100b7f4:	mov    DWORD PTR [rsp+0x34],0x0
 100b7fc:	lea    rcx,[rsp+0x48]
 100b801:	call   0x10038f0
 100b806:	nop
 100b807:	mov    eax,0x64
 100b80c:	sub    eax,DWORD PTR [rbp+0x18]
 100b80f:	test   eax,eax
 100b811:	je     0x100b854
 100b813:	mov    eax,0x64
 100b818:	sub    eax,DWORD PTR [rbp+0x18]
 100b81b:	mov    r9d,eax
 100b81e:	lea    r8,[rip+0xffffffffffff669b]        # 0x1001ec0
 100b825:	mov    edx,0x40
 100b82a:	lea    rcx,[rsp+0x310]
 100b832:	call   QWORD PTR [rip+0xffffffffffff59c0]        # 0x10011f8
 100b838:	lea    r8,[rip+0xffffffffffff6689]        # 0x1001ec8
 100b83f:	mov    edx,0x40
 100b844:	lea    rcx,[rsp+0x310]
 100b84c:	call   QWORD PTR [rip+0xffffffffffff5abe]        # 0x1001310
 100b852:	jmp    0x100b86c
 100b854:	mov    r8d,0x40
 100b85a:	lea    rdx,[rsp+0x310]
 100b862:	mov    ecx,0x2a
 100b867:	call   0x1008800
 100b86c:	mov    r8d,0x1000
 100b872:	lea    rdx,[rip+0xf617]        # 0x101ae90
 100b879:	mov    ecx,0x1c
 100b87e:	call   0x1008800
 100b883:	mov    eax,DWORD PTR [rip+0x9b23]        # 0x10153ac
 100b889:	inc    eax
 100b88b:	mov    DWORD PTR [rip+0x9b1b],eax        # 0x10153ac
 100b891:	mov    rax,QWORD PTR [rbp+0x10]
 100b895:	add    rax,0x10
 100b899:	lea    rcx,[rsp+0x310]
 100b8a1:	mov    QWORD PTR [rsp+0x28],rcx
 100b8a6:	mov    QWORD PTR [rsp+0x20],rax
 100b8ab:	mov    r9d,DWORD PTR [rip+0x9afa]        # 0x10153ac
 100b8b2:	lea    r8,[rip+0xf5d7]        # 0x101ae90
 100b8b9:	mov    edx,0x2710
 100b8be:	lea    rcx,[rip+0xa7ab]        # 0x1016070
 100b8c5:	call   QWORD PTR [rip+0xffffffffffff592d]        # 0x10011f8
 100b8cb:	lea    rcx,[rip+0xa79e]        # 0x1016070
 100b8d2:	call   0x1008f00
 100b8d7:	cmp    DWORD PTR [rip+0x9ab6],0x7        # 0x1015394
 100b8de:	jge    0x100b96d
 100b8e4:	mov    r8d,0x1000
 100b8ea:	lea    rdx,[rip+0xf59f]        # 0x101ae90
 100b8f1:	mov    ecx,0x1d
 100b8f6:	call   0x1008800
 100b8fb:	lea    rax,[rip+0xffffffffffff65ce]        # 0x1001ed0
 100b902:	mov    QWORD PTR [rsp+0x20],rax
 100b907:	lea    r9,[rip+0xffffffffffff5fc2]        # 0x10018d0
 100b90e:	lea    r8,[rip+0xf57b]        # 0x101ae90
 100b915:	mov    edx,0x2710
 100b91a:	lea    rcx,[rip+0xa74f]        # 0x1016070
 100b921:	call   QWORD PTR [rip+0xffffffffffff58d1]        # 0x10011f8
 100b927:	lea    rcx,[rip+0xa742]        # 0x1016070
 100b92e:	call   0x1008f00
 100b933:	mov    DWORD PTR [rsp+0x290],0x1
 100b93e:	lea    rcx,[rsp+0x48]
 100b943:	call   0x1003920
 100b948:	nop
 100b949:	lea    rcx,[rsp+0x2a8]
 100b951:	call   0x1010e70
 100b956:	nop
 100b957:	lea    rcx,[rsp+0x40]
 100b95c:	call   0x1010d30
 100b961:	mov    eax,DWORD PTR [rsp+0x290]
 100b968:	jmp    0x100be6e
 100b96d:	lea    rcx,[rsp+0x2e0]
 100b975:	call   0x10038c0
 100b97a:	mov    rax,QWORD PTR [rbp+0x10]
 100b97e:	add    rax,0x8
 100b982:	mov    rcx,rax
 100b985:	call   0x100e890
 100b98a:	mov    QWORD PTR [rsp+0x2b0],rax
 100b992:	mov    rax,QWORD PTR [rsp+0x2b0]
 100b99a:	mov    rax,QWORD PTR [rax]
 100b99d:	lea    rdx,[rsp+0x5c]
 100b9a2:	mov    rcx,QWORD PTR [rsp+0x2b0]
 100b9aa:	call   QWORD PTR [rax+0x120]
 100b9b0:	mov    ecx,eax
 100b9b2:	call   0x1006e20
 100b9b7:	test   eax,eax
 100b9b9:	jne    0x100bd08
 100b9bf:	lea    rcx,[rip+0xffffffffffff6512]        # 0x1001ed8
 100b9c6:	call   0x1008f00
 100b9cb:	mov    DWORD PTR [rsp+0x3c],0x0
 100b9d3:	jmp    0x100b9df
 100b9d5:	mov    eax,DWORD PTR [rsp+0x3c]
 100b9d9:	inc    eax
 100b9db:	mov    DWORD PTR [rsp+0x3c],eax
 100b9df:	mov    eax,DWORD PTR [rsp+0x5c]
 100b9e3:	cmp    DWORD PTR [rsp+0x3c],eax
 100b9e7:	jge    0x100bd08
 100b9ed:	cmp    DWORD PTR [rsp+0x34],0x0
 100b9f2:	jne    0x100bd08
 100b9f8:	lea    rcx,[rsp+0x40]
 100b9fd:	call   0x1010df0
 100ba02:	lea    rcx,[rsp+0x48]
 100ba07:	call   0x1003950
 100ba0c:	mov    DWORD PTR [rsp+0x74],0x0
 100ba14:	mov    DWORD PTR [rsp+0x80],0x1
 100ba1f:	mov    DWORD PTR [rsp+0x6c],0x1
 100ba27:	mov    DWORD PTR [rsp+0x30],0x1
 100ba2f:	mov    rax,QWORD PTR [rbp+0x10]
 100ba33:	add    rax,0x8
 100ba37:	mov    rcx,rax
 100ba3a:	call   0x100e890
 100ba3f:	mov    QWORD PTR [rsp+0x2d0],rax
 100ba47:	lea    rcx,[rsp+0x40]
 100ba4c:	call   0x1010d70
 100ba51:	mov    rcx,QWORD PTR [rsp+0x2d0]
 100ba59:	mov    rcx,QWORD PTR [rcx]
 100ba5c:	mov    QWORD PTR [rsp+0x2d8],rcx
 100ba64:	mov    r8,rax
 100ba67:	mov    edx,DWORD PTR [rsp+0x3c]
 100ba6b:	mov    rcx,QWORD PTR [rsp+0x2d0]
 100ba73:	mov    rax,QWORD PTR [rsp+0x2d8]
 100ba7b:	call   QWORD PTR [rax+0x100]
 100ba81:	mov    ecx,eax
 100ba83:	call   0x1006e20
 100ba88:	test   eax,eax
 100ba8a:	jne    0x100ba96
 100ba8c:	mov    DWORD PTR [rsp+0x70],0x1
 100ba94:	jmp    0x100ba9e
 100ba96:	mov    DWORD PTR [rsp+0x70],0x0
 100ba9e:	mov    eax,DWORD PTR [rsp+0x70]
 100baa2:	mov    DWORD PTR [rsp+0x30],eax
 100baa6:	cmp    DWORD PTR [rsp+0x30],0x0
 100baab:	je     0x100bcf4
 100bab1:	lea    rcx,[rsp+0x40]
 100bab6:	call   0x1010dd0
 100babb:	mov    QWORD PTR [rsp+0x2c8],rax
 100bac3:	mov    rax,QWORD PTR [rsp+0x2c8]
 100bacb:	mov    rax,QWORD PTR [rax]
 100bace:	lea    rdx,[rsp+0x74]
 100bad3:	mov    rcx,QWORD PTR [rsp+0x2c8]
 100badb:	call   QWORD PTR [rax+0x68]
 100bade:	mov    ecx,eax
 100bae0:	call   0x1006e20
 100bae5:	test   eax,eax
 100bae7:	jne    0x100baf3
 100bae9:	mov    DWORD PTR [rsp+0x78],0x1
 100baf1:	jmp    0x100bafb
 100baf3:	mov    DWORD PTR [rsp+0x78],0x0
 100bafb:	mov    eax,DWORD PTR [rsp+0x78]
 100baff:	mov    DWORD PTR [rsp+0x30],eax
 100bb03:	cmp    DWORD PTR [rsp+0x30],0x0
 100bb08:	je     0x100bcf4
 100bb0e:	cmp    DWORD PTR [rsp+0x74],0x0
 100bb13:	jne    0x100bcf4
 100bb19:	lea    rcx,[rsp+0x40]
 100bb1e:	call   0x1010dd0
 100bb23:	mov    QWORD PTR [rsp+0x2b8],rax
 100bb2b:	mov    rax,QWORD PTR [rsp+0x2b8]
 100bb33:	mov    rax,QWORD PTR [rax]
 100bb36:	lea    rdx,[rsp+0x6c]
 100bb3b:	mov    rcx,QWORD PTR [rsp+0x2b8]
 100bb43:	call   QWORD PTR [rax+0x350]
 100bb49:	mov    ecx,eax
 100bb4b:	call   0x1006e20
 100bb50:	test   eax,eax
 100bb52:	jne    0x100bb5e
 100bb54:	mov    DWORD PTR [rsp+0x50],0x1
 100bb5c:	jmp    0x100bb66
 100bb5e:	mov    DWORD PTR [rsp+0x50],0x0
 100bb66:	mov    eax,DWORD PTR [rsp+0x50]
 100bb6a:	mov    DWORD PTR [rsp+0x30],eax
 100bb6e:	cmp    DWORD PTR [rsp+0x30],0x0
 100bb73:	je     0x100bcf4
 100bb79:	cmp    DWORD PTR [rsp+0x6c],0x0
 100bb7e:	je     0x100bcf4
 100bb84:	lea    rcx,[rsp+0x40]
 100bb89:	call   0x1010dd0
 100bb8e:	mov    QWORD PTR [rsp+0x298],rax
 100bb96:	mov    rax,QWORD PTR [rsp+0x298]
 100bb9e:	mov    rax,QWORD PTR [rax]
 100bba1:	lea    rdx,[rsp+0x80]
 100bba9:	mov    rcx,QWORD PTR [rsp+0x298]
 100bbb1:	call   QWORD PTR [rax+0x348]
 100bbb7:	mov    ecx,eax
 100bbb9:	call   0x1006e20
 100bbbe:	test   eax,eax
 100bbc0:	jne    0x100bbcc
 100bbc2:	mov    DWORD PTR [rsp+0x64],0x1
 100bbca:	jmp    0x100bbd4
 100bbcc:	mov    DWORD PTR [rsp+0x64],0x0
 100bbd4:	mov    eax,DWORD PTR [rsp+0x64]
 100bbd8:	mov    DWORD PTR [rsp+0x30],eax
 100bbdc:	cmp    DWORD PTR [rsp+0x30],0x0
 100bbe1:	je     0x100bcf4
 100bbe7:	lea    rcx,[rsp+0x40]
 100bbec:	call   0x1010dd0
 100bbf1:	mov    QWORD PTR [rsp+0x2c0],rax
 100bbf9:	lea    rcx,[rsp+0x48]
 100bbfe:	call   0x10039d0
 100bc03:	mov    rcx,QWORD PTR [rsp+0x2c0]
 100bc0b:	mov    rcx,QWORD PTR [rcx]
 100bc0e:	mov    QWORD PTR [rsp+0x2f8],rcx
 100bc16:	mov    rdx,rax
 100bc19:	mov    rcx,QWORD PTR [rsp+0x2c0]
 100bc21:	mov    rax,QWORD PTR [rsp+0x2f8]
 100bc29:	call   QWORD PTR [rax+0x40]
 100bc2c:	mov    ecx,eax
 100bc2e:	call   0x1006e20
 100bc33:	test   eax,eax
 100bc35:	jne    0x100bc41
 100bc37:	mov    DWORD PTR [rsp+0x54],0x1
 100bc3f:	jmp    0x100bc49
 100bc41:	mov    DWORD PTR [rsp+0x54],0x0
 100bc49:	mov    eax,DWORD PTR [rsp+0x54]
 100bc4d:	mov    DWORD PTR [rsp+0x30],eax
 100bc51:	cmp    DWORD PTR [rsp+0x30],0x0
 100bc56:	je     0x100bcf4
 100bc5c:	lea    rcx,[rsp+0x48]
 100bc61:	call   0x1003990
 100bc66:	test   rax,rax
 100bc69:	je     0x100bcf4
 100bc6f:	mov    r8d,0x1000
 100bc75:	lea    rdx,[rip+0xf214]        # 0x101ae90
 100bc7c:	mov    ecx,0x1e
 100bc81:	call   0x1008800
 100bc86:	mov    r9,QWORD PTR [rsp+0x48]
 100bc8b:	lea    r8,[rip+0xf1fe]        # 0x101ae90
 100bc92:	mov    edx,0x2710
 100bc97:	lea    rcx,[rip+0xa3d2]        # 0x1016070
 100bc9e:	call   QWORD PTR [rip+0xffffffffffff5554]        # 0x10011f8
 100bca4:	lea    rcx,[rip+0xa3c5]        # 0x1016070
 100bcab:	call   0x1008f00
 100bcb0:	lea    rcx,[rsp+0x40]
 100bcb5:	call   0x1010dd0
 100bcba:	mov    QWORD PTR [rsp+0x2a0],rax
 100bcc2:	mov    rax,QWORD PTR [rsp+0x2a0]
 100bcca:	mov    rax,QWORD PTR [rax]
 100bccd:	mov    r8d,DWORD PTR [rbp+0x18]
 100bcd1:	xor    edx,edx
 100bcd3:	mov    rcx,QWORD PTR [rsp+0x2a0]
 100bcdb:	call   QWORD PTR [rax+0x278]
 100bce1:	mov    ecx,eax
 100bce3:	call   0x1006e20
 100bce8:	test   eax,eax
 100bcea:	je     0x100bcf4
 100bcec:	mov    DWORD PTR [rsp+0x34],0x1
 100bcf4:	cmp    DWORD PTR [rsp+0x30],0x0
 100bcf9:	jne    0x100bd03
 100bcfb:	mov    DWORD PTR [rsp+0x34],0x1
 100bd03:	jmp    0x100b9d5
 100bd08:	lea    rcx,[rsp+0x2e8]
 100bd10:	call   0x10038c0
 100bd15:	mov    rdx,QWORD PTR [rsp+0x2e0]
 100bd1d:	mov    rcx,QWORD PTR [rsp+0x2e8]
 100bd25:	call   0x1003830
 100bd2a:	cvttsd2si eax,xmm0
 100bd2e:	mov    DWORD PTR [rsp+0x38],eax
 100bd32:	mov    r8d,0x1000
 100bd38:	lea    rdx,[rip+0xf151]        # 0x101ae90
 100bd3f:	mov    ecx,0x19
 100bd44:	call   0x1008800
 100bd49:	mov    eax,DWORD PTR [rsp+0x38]
 100bd4d:	cdq    
 100bd4e:	mov    ecx,0x3c
 100bd53:	idiv   ecx
 100bd55:	mov    eax,edx
 100bd57:	cmp    eax,0x1
 100bd5a:	jle    0x100bd70
 100bd5c:	mov    eax,DWORD PTR [rsp+0x38]
 100bd60:	cdq    
 100bd61:	mov    ecx,0x3c
 100bd66:	idiv   ecx
 100bd68:	mov    eax,edx
 100bd6a:	mov    DWORD PTR [rsp+0x58],eax
 100bd6e:	jmp    0x100bd78
 100bd70:	mov    DWORD PTR [rsp+0x58],0x1
 100bd78:	mov    eax,DWORD PTR [rsp+0x38]
 100bd7c:	cdq    
 100bd7d:	mov    ecx,0xe10
 100bd82:	idiv   ecx
 100bd84:	mov    eax,edx
 100bd86:	cdq    
 100bd87:	mov    ecx,0x3c
 100bd8c:	idiv   ecx
 100bd8e:	mov    DWORD PTR [rsp+0x294],eax
 100bd95:	mov    eax,DWORD PTR [rsp+0x38]
 100bd99:	cdq    
 100bd9a:	mov    ecx,0xe10
 100bd9f:	idiv   ecx
 100bda1:	mov    ecx,DWORD PTR [rsp+0x58]
 100bda5:	mov    DWORD PTR [rsp+0x28],ecx
 100bda9:	mov    ecx,DWORD PTR [rsp+0x294]
 100bdb0:	mov    DWORD PTR [rsp+0x20],ecx
 100bdb4:	mov    r9d,eax
 100bdb7:	lea    r8,[rip+0xf0d2]        # 0x101ae90
 100bdbe:	mov    edx,0x100
 100bdc3:	lea    rcx,[rsp+0x90]
 100bdcb:	call   QWORD PTR [rip+0xffffffffffff5427]        # 0x10011f8
 100bdd1:	lea    r9,[rsp+0x90]
 100bdd9:	lea    r8,[rip+0xffffffffffff60d0]        # 0x1001eb0
 100bde0:	mov    edx,0x2710
 100bde5:	lea    rcx,[rip+0xa284]        # 0x1016070
 100bdec:	call   QWORD PTR [rip+0xffffffffffff5406]        # 0x10011f8
 100bdf2:	lea    rcx,[rip+0xa277]        # 0x1016070
 100bdf9:	call   0x1008f00
 100bdfe:	cmp    DWORD PTR [rsp+0x34],0x0
 100be03:	jne    0x100be0f
 100be05:	mov    DWORD PTR [rsp+0x60],0x1
 100be0d:	jmp    0x100be17
 100be0f:	mov    DWORD PTR [rsp+0x60],0x0
 100be17:	mov    eax,DWORD PTR [rsp+0x60]
 100be1b:	mov    DWORD PTR [rip+0x13ae3],eax        # 0x101f904
 100be21:	call   0x10082e0
 100be26:	cmp    DWORD PTR [rsp+0x34],0x0
 100be2b:	jne    0x100be37
 100be2d:	mov    DWORD PTR [rsp+0x68],0x1
 100be35:	jmp    0x100be3f
 100be37:	mov    DWORD PTR [rsp+0x68],0x0
 100be3f:	mov    eax,DWORD PTR [rsp+0x68]
 100be43:	mov    DWORD PTR [rsp+0x7c],eax
 100be47:	lea    rcx,[rsp+0x48]
 100be4c:	call   0x1003920
 100be51:	nop
 100be52:	lea    rcx,[rsp+0x2a8]
 100be5a:	call   0x1010e70
 100be5f:	nop
 100be60:	lea    rcx,[rsp+0x40]
 100be65:	call   0x1010d30
 100be6a:	mov    eax,DWORD PTR [rsp+0x7c]
 100be6e:	mov    rcx,QWORD PTR [rbp-0x20]
 100be72:	xor    rcx,rsp
 100be75:	call   0x1012040
 100be7a:	add    rsp,0x3a8
 100be81:	pop    rdi
 100be82:	pop    rbp
 100be83:	ret    
 100be84:	int3   
 100be85:	int3   
 100be86:	int3   
 100be87:	int3   
 100be88:	int3   
 100be89:	int3   
 100be8a:	int3   
 100be8b:	int3   
 100be8c:	int3   
 100be8d:	int3   
 100be8e:	int3   
 100be8f:	int3   
 100be90:	mov    DWORD PTR [rsp+0x10],edx
 100be94:	mov    QWORD PTR [rsp+0x8],rcx
 100be99:	push   rbp
 100be9a:	mov    rbp,rsp
 100be9d:	push   rdi
 100be9e:	mov    eax,0x1768
 100bea3:	call   0x1011fe0
 100bea8:	sub    rsp,rax
 100beab:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
 100beb7:	mov    rax,QWORD PTR [rip+0x94a2]        # 0x1015360
 100bebe:	xor    rax,rsp
 100bec1:	mov    QWORD PTR [rbp-0x18],rax
 100bec5:	mov    rax,QWORD PTR [rbp+0x10]
 100bec9:	add    rax,0x8
 100becd:	mov    rcx,rax
 100bed0:	call   0x100e850
 100bed5:	test   eax,eax
 100bed7:	je     0x100bee3
 100bed9:	mov    eax,0x1
 100bede:	jmp    0x100c8ce
 100bee3:	mov    rax,QWORD PTR [rbp+0x10]
 100bee7:	add    rax,0x10
 100beeb:	mov    rdx,rax
 100beee:	lea    rcx,[rip+0xffffffffffff5feb]        # 0x1001ee0
 100bef5:	call   QWORD PTR [rip+0xffffffffffff544d]        # 0x1001348
 100befb:	test   eax,eax
 100befd:	je     0x100bf2b
 100beff:	cmp    DWORD PTR [rbp+0x18],0x2
 100bf03:	jne    0x100bf21
 100bf05:	mov    rax,QWORD PTR [rbp+0x10]
 100bf09:	add    rax,0x10
 100bf0d:	mov    rdx,rax
 100bf10:	lea    rcx,[rip+0xffffffffffff5fd9]        # 0x1001ef0
 100bf17:	call   QWORD PTR [rip+0xffffffffffff542b]        # 0x1001348
 100bf1d:	test   eax,eax
 100bf1f:	je     0x100bf2b
 100bf21:	mov    DWORD PTR [rsp+0x4c],0x0
 100bf29:	jmp    0x100bf33
 100bf2b:	mov    DWORD PTR [rsp+0x4c],0x1
 100bf33:	mov    eax,DWORD PTR [rsp+0x4c]
 100bf37:	mov    DWORD PTR [rsp+0x44],eax
 100bf3b:	cmp    DWORD PTR [rsp+0x44],0x0
 100bf40:	jne    0x100bffb
 100bf46:	cmp    DWORD PTR [rbp+0x18],0x1
 100bf4a:	je     0x100bffb
 100bf50:	lea    rcx,[rsp+0x78]
 100bf55:	call   0x1010be0
 100bf5a:	nop
 100bf5b:	mov    rax,QWORD PTR [rbp+0x10]
 100bf5f:	add    rax,0x8
 100bf63:	mov    rcx,rax
 100bf66:	call   0x100e890
 100bf6b:	mov    QWORD PTR [rbp-0x40],rax
 100bf6f:	lea    rcx,[rsp+0x78]
 100bf74:	call   0x1010c90
 100bf79:	mov    rcx,QWORD PTR [rbp-0x40]
 100bf7d:	mov    rcx,QWORD PTR [rcx]
 100bf80:	mov    QWORD PTR [rbp-0x20],rcx
 100bf84:	mov    rdx,rax
 100bf87:	mov    rcx,QWORD PTR [rbp-0x40]
 100bf8b:	mov    rax,QWORD PTR [rbp-0x20]
 100bf8f:	call   QWORD PTR [rax+0xe0]
 100bf95:	mov    ecx,eax
 100bf97:	call   0x1006e20
 100bf9c:	test   eax,eax
 100bf9e:	jne    0x100bff1
 100bfa0:	lea    rcx,[rsp+0x78]
 100bfa5:	call   0x1010c50
 100bfaa:	test   eax,eax
 100bfac:	je     0x100bff1
 100bfae:	lea    rcx,[rsp+0x78]
 100bfb3:	call   0x1010cb0
 100bfb8:	mov    QWORD PTR [rsp+0x16e8],rax
 100bfc0:	mov    rax,QWORD PTR [rsp+0x16e8]
 100bfc8:	mov    rax,QWORD PTR [rax]
 100bfcb:	lea    rdx,[rsp+0x44]
 100bfd0:	mov    rcx,QWORD PTR [rsp+0x16e8]
 100bfd8:	call   QWORD PTR [rax+0x80]
 100bfde:	mov    ecx,eax
 100bfe0:	call   0x1006e20
 100bfe5:	test   eax,eax
 100bfe7:	je     0x100bff1
 100bfe9:	mov    DWORD PTR [rsp+0x44],0x0
 100bff1:	lea    rcx,[rsp+0x78]
 100bff6:	call   0x1010c10
 100bffb:	cmp    DWORD PTR [rsp+0x44],0x0
 100c000:	je     0x100c0ab
 100c006:	cmp    DWORD PTR [rbp+0x18],0x1
 100c00a:	jne    0x100c016
 100c00c:	mov    DWORD PTR [rsp+0x70],0x60
 100c014:	jmp    0x100c01e
 100c016:	mov    DWORD PTR [rsp+0x70],0x61
 100c01e:	mov    edx,DWORD PTR [rsp+0x70]
 100c022:	mov    rcx,QWORD PTR [rbp+0x10]
 100c026:	call   0x100e750
 100c02b:	mov    r8d,0x800
 100c031:	lea    rdx,[rip+0x128cc]        # 0x101e904
 100c038:	mov    ecx,0x75
 100c03d:	call   0x1008800
 100c042:	mov    DWORD PTR [rip+0x138b8],0x0        # 0x101f904
 100c04c:	call   0x10082e0
 100c051:	mov    r8d,0x1000
 100c057:	lea    rdx,[rip+0xee32]        # 0x101ae90
 100c05e:	mov    ecx,0x89
 100c063:	call   0x1008800
 100c068:	mov    rax,QWORD PTR [rbp+0x10]
 100c06c:	add    rax,0x10
 100c070:	mov    r9,rax
 100c073:	lea    r8,[rip+0xee16]        # 0x101ae90
 100c07a:	mov    edx,0x2710
 100c07f:	lea    rcx,[rip+0x9fea]        # 0x1016070
 100c086:	call   QWORD PTR [rip+0xffffffffffff516c]        # 0x10011f8
 100c08c:	lea    rcx,[rip+0x9fdd]        # 0x1016070
 100c093:	call   0x1008f00
 100c098:	lea    rcx,[rip+0xffffffffffff5e61]        # 0x1001f00
 100c09f:	call   0x1008f00
 100c0a4:	xor    eax,eax
 100c0a6:	jmp    0x100c8ce
 100c0ab:	lea    rcx,[rsp+0x38]
 100c0b0:	call   0x1010eb0
 100c0b5:	nop
 100c0b6:	lea    rcx,[rsp+0x58]
 100c0bb:	call   0x1010f80
 100c0c0:	nop
 100c0c1:	movzx  eax,WORD PTR [rip+0xffffffffffff56f8]        # 0x10017c0
 100c0c8:	mov    WORD PTR [rsp+0xd0],ax
 100c0d0:	lea    rax,[rsp+0xd2]
 100c0d8:	mov    rdi,rax
 100c0db:	xor    eax,eax
 100c0dd:	mov    ecx,0xfe
 100c0e2:	rep stos BYTE PTR es:[rdi],al
 100c0e4:	movzx  eax,WORD PTR [rip+0xffffffffffff56d5]        # 0x10017c0
 100c0eb:	mov    WORD PTR [rsp+0x2d0],ax
 100c0f3:	lea    rax,[rsp+0x2d2]
 100c0fb:	mov    rdi,rax
 100c0fe:	xor    eax,eax
 100c100:	mov    ecx,0x1fe
 100c105:	rep stos BYTE PTR es:[rdi],al
 100c107:	movzx  eax,WORD PTR [rip+0xffffffffffff56b2]        # 0x10017c0
 100c10e:	mov    WORD PTR [rsp+0x6d0],ax
 100c116:	lea    rax,[rsp+0x6d2]
 100c11e:	mov    rdi,rax
 100c121:	xor    eax,eax
 100c123:	mov    ecx,0xffe
 100c128:	rep stos BYTE PTR es:[rdi],al
 100c12a:	movzx  eax,WORD PTR [rip+0xffffffffffff568f]        # 0x10017c0
 100c131:	mov    WORD PTR [rsp+0x1d0],ax
 100c139:	lea    rax,[rsp+0x1d2]
 100c141:	mov    rdi,rax
 100c144:	xor    eax,eax
 100c146:	mov    ecx,0xfe
 100c14b:	rep stos BYTE PTR es:[rdi],al
 100c14d:	movzx  eax,WORD PTR [rip+0xffffffffffff566c]        # 0x10017c0
 100c154:	mov    WORD PTR [rsp+0x4d0],ax
 100c15c:	lea    rax,[rsp+0x4d2]
 100c164:	mov    rdi,rax
 100c167:	xor    eax,eax
 100c169:	mov    ecx,0x1fe
 100c16e:	rep stos BYTE PTR es:[rdi],al
 100c170:	mov    DWORD PTR [rsp+0x40],0x0
 100c178:	mov    DWORD PTR [rsp+0x6c],0x0
 100c180:	mov    DWORD PTR [rsp+0x30],0x0
 100c188:	mov    rcx,QWORD PTR [rbp+0x10]
 100c18c:	call   0x100e220
 100c191:	cmp    DWORD PTR [rbp+0x18],0x1
 100c195:	je     0x100c19d
 100c197:	cmp    DWORD PTR [rbp+0x18],0x2
 100c19b:	jne    0x100c1ac
 100c19d:	mov    rax,QWORD PTR [rbp+0x10]
 100c1a1:	movzx  eax,WORD PTR [rax+0x114]
 100c1a8:	test   eax,eax
 100c1aa:	jne    0x100c1d8
 100c1ac:	mov    DWORD PTR [rsp+0x16d0],0x0
 100c1b7:	lea    rcx,[rsp+0x58]
 100c1bc:	call   0x1010fb0
 100c1c1:	nop
 100c1c2:	lea    rcx,[rsp+0x38]
 100c1c7:	call   0x1010ee0
 100c1cc:	mov    eax,DWORD PTR [rsp+0x16d0]
 100c1d3:	jmp    0x100c8ce
 100c1d8:	mov    r8d,0x1000
 100c1de:	lea    rdx,[rip+0xecab]        # 0x101ae90
 100c1e5:	mov    ecx,0x1f
 100c1ea:	call   0x1008800
 100c1ef:	cmp    DWORD PTR [rbp+0x18],0x1
 100c1f3:	jne    0x100c1ff
 100c1f5:	mov    DWORD PTR [rsp+0x68],0x20
 100c1fd:	jmp    0x100c207
 100c1ff:	mov    DWORD PTR [rsp+0x68],0x21
 100c207:	mov    r8d,0x80
 100c20d:	lea    rdx,[rsp+0x1d0]
 100c215:	mov    ecx,DWORD PTR [rsp+0x68]
 100c219:	call   0x1008800
 100c21e:	mov    eax,DWORD PTR [rip+0x9188]        # 0x10153ac
 100c224:	inc    eax
 100c226:	mov    DWORD PTR [rip+0x9180],eax        # 0x10153ac
 100c22c:	mov    rax,QWORD PTR [rbp+0x10]
 100c230:	add    rax,0x10
 100c234:	lea    rcx,[rsp+0x1d0]
 100c23c:	mov    QWORD PTR [rsp+0x28],rcx
 100c241:	mov    QWORD PTR [rsp+0x20],rax
 100c246:	mov    r9d,DWORD PTR [rip+0x915f]        # 0x10153ac
 100c24d:	lea    r8,[rip+0xec3c]        # 0x101ae90
 100c254:	mov    edx,0x2710
 100c259:	lea    rcx,[rip+0x9e10]        # 0x1016070
 100c260:	call   QWORD PTR [rip+0xffffffffffff4f92]        # 0x10011f8
 100c266:	lea    rcx,[rip+0x9e03]        # 0x1016070
 100c26d:	call   0x1008f00
 100c272:	cmp    DWORD PTR [rbp+0x18],0x1
 100c276:	jne    0x100c282
 100c278:	mov    DWORD PTR [rsp+0x50],0x60
 100c280:	jmp    0x100c28a
 100c282:	mov    DWORD PTR [rsp+0x50],0x61
 100c28a:	mov    edx,DWORD PTR [rsp+0x50]
 100c28e:	mov    rcx,QWORD PTR [rbp+0x10]
 100c292:	call   0x100e750
 100c297:	cmp    DWORD PTR [rip+0x936a],0x0        # 0x1015608
 100c29e:	je     0x100c2fc
 100c2a0:	mov    rax,QWORD PTR [rbp+0x10]
 100c2a4:	cmp    DWORD PTR [rax+0xb6c],0x0
 100c2ab:	jne    0x100c2fc
 100c2ad:	mov    r8d,0x1000
 100c2b3:	lea    rdx,[rip+0xebd6]        # 0x101ae90
 100c2ba:	mov    ecx,0x35
 100c2bf:	call   0x1008800
 100c2c4:	lea    rcx,[rip+0xebc5]        # 0x101ae90
 100c2cb:	call   0x1008f00
 100c2d0:	mov    eax,DWORD PTR [rsp+0x30]
 100c2d4:	mov    DWORD PTR [rsp+0x80],eax
 100c2db:	lea    rcx,[rsp+0x58]
 100c2e0:	call   0x1010fb0
 100c2e5:	nop
 100c2e6:	lea    rcx,[rsp+0x38]
 100c2eb:	call   0x1010ee0
 100c2f0:	mov    eax,DWORD PTR [rsp+0x80]
 100c2f7:	jmp    0x100c8ce
 100c2fc:	lea    rcx,[rsp+0x38]
 100c301:	call   0x1010f40
 100c306:	mov    QWORD PTR [rsp+0x20],rax
 100c30b:	lea    r9,[rip+0xffffffffffff515e]        # 0x1001470
 100c312:	mov    r8d,0x1
 100c318:	xor    edx,edx
 100c31a:	lea    rcx,[rip+0xffffffffffff513f]        # 0x1001460
 100c321:	call   QWORD PTR [rip+0xffffffffffff50a9]        # 0x10013d0
 100c327:	mov    DWORD PTR [rsp+0x6c],eax
 100c32b:	cmp    DWORD PTR [rsp+0x6c],0x0
 100c330:	jge    0x100c35e
 100c332:	mov    eax,DWORD PTR [rsp+0x30]
 100c336:	mov    DWORD PTR [rsp+0x16d8],eax
 100c33d:	lea    rcx,[rsp+0x58]
 100c342:	call   0x1010fb0
 100c347:	nop
 100c348:	lea    rcx,[rsp+0x38]
 100c34d:	call   0x1010ee0
 100c352:	mov    eax,DWORD PTR [rsp+0x16d8]
 100c359:	jmp    0x100c8ce
 100c35e:	lea    rcx,[rsp+0x88]
 100c366:	call   0x10038c0
 100c36b:	mov    eax,DWORD PTR [rip+0x901f]        # 0x1015390
 100c371:	mov    DWORD PTR [rsp+0x64],eax
 100c375:	cmp    DWORD PTR [rsp+0x64],0x1
 100c37a:	je     0x100c38c
 100c37c:	cmp    DWORD PTR [rsp+0x64],0x2
 100c381:	je     0x100c4d7
 100c387:	jmp    0x100c554
 100c38c:	mov    r9d,DWORD PTR [rbp+0x18]
 100c390:	mov    r8d,0x80
 100c396:	lea    rdx,[rsp+0xd0]
 100c39e:	mov    rcx,QWORD PTR [rbp+0x10]
 100c3a2:	call   0x100ddd0
 100c3a7:	test   eax,eax
 100c3a9:	jne    0x100c3b0
 100c3ab:	jmp    0x100c898
 100c3b0:	mov    rax,QWORD PTR [rbp+0x10]
 100c3b4:	add    rax,0x114
 100c3ba:	mov    r8,rax
 100c3bd:	mov    edx,0x800
 100c3c2:	lea    rcx,[rsp+0x6d0]
 100c3ca:	call   QWORD PTR [rip+0xffffffffffff4f58]        # 0x1001328
 100c3d0:	lea    rcx,[rsp+0x6d0]
 100c3d8:	call   QWORD PTR [rip+0xffffffffffff4f52]        # 0x1001330
 100c3de:	movzx  eax,WORD PTR [rsp+rax*2+0x6ce]
 100c3e6:	cmp    eax,0x5c
 100c3e9:	je     0x100c405
 100c3eb:	lea    r8,[rip+0xffffffffffff54b6]        # 0x10018a8
 100c3f2:	mov    edx,0x800
 100c3f7:	lea    rcx,[rsp+0x6d0]
 100c3ff:	call   QWORD PTR [rip+0xffffffffffff4f0b]        # 0x1001310
 100c405:	lea    r8,[rsp+0xd0]
 100c40d:	mov    edx,0x800
 100c412:	lea    rcx,[rsp+0x6d0]
 100c41a:	call   QWORD PTR [rip+0xffffffffffff4ef0]        # 0x1001310
 100c420:	lea    rcx,[rsp+0x6d0]
 100c428:	call   0x100a880
 100c42d:	cmp    eax,0xffffffff
 100c430:	jne    0x100c4a7
 100c432:	lea    rcx,[rsp+0x6d0]
 100c43a:	call   0x100a940
 100c43f:	lea    rcx,[rsp+0x38]
 100c444:	call   0x1010f60
 100c449:	mov    QWORD PTR [rbp-0x70],rax
 100c44d:	mov    rax,QWORD PTR [rbp-0x70]
 100c451:	mov    rax,QWORD PTR [rax]
 100c454:	lea    rdx,[rsp+0x6d0]
 100c45c:	mov    rcx,QWORD PTR [rbp-0x70]
 100c460:	call   QWORD PTR [rax+0x88]
 100c466:	mov    ecx,eax
 100c468:	call   0x1006e20
 100c46d:	test   eax,eax
 100c46f:	jne    0x100c4a0
 100c471:	lea    rcx,[rsp+0x38]
 100c476:	call   0x1010f60
 100c47b:	mov    QWORD PTR [rbp-0x50],rax
 100c47f:	mov    rax,QWORD PTR [rbp-0x50]
 100c483:	mov    rax,QWORD PTR [rax]
 100c486:	mov    edx,0x1
 100c48b:	mov    rcx,QWORD PTR [rbp-0x50]
 100c48f:	call   QWORD PTR [rax+0x188]
 100c495:	mov    ecx,eax
 100c497:	call   0x1006e20
 100c49c:	test   eax,eax
 100c49e:	je     0x100c4a5
 100c4a0:	jmp    0x100c898
 100c4a5:	jmp    0x100c4d5
 100c4a7:	lea    r9,[rsp+0x6d0]
 100c4af:	lea    r8,[rip+0xffffffffffff5a5a]        # 0x1001f10
 100c4b6:	mov    edx,0x800
 100c4bb:	lea    rcx,[rip+0x12442]        # 0x101e904
 100c4c2:	call   QWORD PTR [rip+0xffffffffffff4d30]        # 0x10011f8
 100c4c8:	mov    DWORD PTR [rsp+0x30],0x0
 100c4d0:	jmp    0x100c898
 100c4d5:	jmp    0x100c554
 100c4d7:	mov    rax,QWORD PTR [rbp+0x10]
 100c4db:	add    rax,0x114
 100c4e1:	mov    r9,rax
 100c4e4:	lea    r8,[rip+0xffffffffffff5a9d]        # 0x1001f88
 100c4eb:	mov    edx,0x100
 100c4f0:	lea    rcx,[rsp+0x4d0]
 100c4f8:	call   QWORD PTR [rip+0xffffffffffff4cfa]        # 0x10011f8
 100c4fe:	mov    rax,QWORD PTR [rbp+0x10]
 100c502:	add    rax,0x114
 100c508:	mov    rcx,rax
 100c50b:	call   0x100a940
 100c510:	lea    rcx,[rsp+0x38]
 100c515:	call   0x1010f60
 100c51a:	mov    QWORD PTR [rbp-0x60],rax
 100c51e:	mov    rax,QWORD PTR [rbp+0x10]
 100c522:	add    rax,0x114
 100c528:	mov    rcx,QWORD PTR [rbp-0x60]
 100c52c:	mov    rcx,QWORD PTR [rcx]
 100c52f:	mov    QWORD PTR [rbp-0x30],rcx
 100c533:	mov    rdx,rax
 100c536:	mov    rcx,QWORD PTR [rbp-0x60]
 100c53a:	mov    rax,QWORD PTR [rbp-0x30]
 100c53e:	call   QWORD PTR [rax+0x158]
 100c544:	mov    ecx,eax
 100c546:	call   0x1006e20
 100c54b:	test   eax,eax
 100c54d:	je     0x100c554
 100c54f:	jmp    0x100c898
 100c554:	mov    r8d,0x1000
 100c55a:	lea    rdx,[rip+0xe92f]        # 0x101ae90
 100c561:	mov    ecx,0x31
 100c566:	call   0x1008800
 100c56b:	cmp    DWORD PTR [rip+0x8e1e],0x1        # 0x1015390
 100c572:	jne    0x100c582
 100c574:	lea    rax,[rsp+0x6d0]
 100c57c:	mov    QWORD PTR [rbp-0x80],rax
 100c580:	jmp    0x100c590
 100c582:	mov    rax,QWORD PTR [rbp+0x10]
 100c586:	add    rax,0x114
 100c58c:	mov    QWORD PTR [rbp-0x80],rax
 100c590:	mov    r9,QWORD PTR [rbp-0x80]
 100c594:	lea    r8,[rip+0xe8f5]        # 0x101ae90
 100c59b:	mov    edx,0x2710
 100c5a0:	lea    rcx,[rip+0x9ac9]        # 0x1016070
 100c5a7:	call   QWORD PTR [rip+0xffffffffffff4c4b]        # 0x10011f8
 100c5ad:	lea    rcx,[rip+0x9abc]        # 0x1016070
 100c5b4:	call   0x1008f00
 100c5b9:	mov    r8d,0x1000
 100c5bf:	lea    rdx,[rip+0xe8ca]        # 0x101ae90
 100c5c6:	mov    ecx,0x73
 100c5cb:	call   0x1008800
 100c5d0:	cmp    DWORD PTR [rip+0x8db9],0x1        # 0x1015390
 100c5d7:	jne    0x100c5e7
 100c5d9:	lea    rax,[rsp+0x6d0]
 100c5e1:	mov    QWORD PTR [rbp-0x78],rax
 100c5e5:	jmp    0x100c5f5
 100c5e7:	mov    rax,QWORD PTR [rbp+0x10]
 100c5eb:	add    rax,0x114
 100c5f1:	mov    QWORD PTR [rbp-0x78],rax
 100c5f5:	mov    r9,QWORD PTR [rbp-0x78]
 100c5f9:	lea    r8,[rip+0xe890]        # 0x101ae90
 100c600:	mov    edx,0x800
 100c605:	lea    rcx,[rip+0x122f8]        # 0x101e904
 100c60c:	call   QWORD PTR [rip+0xffffffffffff4be6]        # 0x10011f8
 100c612:	lea    rcx,[rsp+0x38]
 100c617:	call   0x1010f60
 100c61c:	mov    QWORD PTR [rbp-0x68],rax
 100c620:	mov    rax,QWORD PTR [rbp+0x10]
 100c624:	add    rax,0x10
 100c628:	mov    rcx,QWORD PTR [rbp-0x68]
 100c62c:	mov    rcx,QWORD PTR [rcx]
 100c62f:	mov    QWORD PTR [rsp+0x90],rcx
 100c637:	mov    rdx,rax
 100c63a:	mov    rcx,QWORD PTR [rbp-0x68]
 100c63e:	mov    rax,QWORD PTR [rsp+0x90]
 100c646:	call   QWORD PTR [rax+0x78]
 100c649:	mov    ecx,eax
 100c64b:	call   0x1006e20
 100c650:	test   eax,eax
 100c652:	jne    0x100c71b
 100c658:	cmp    DWORD PTR [rbp+0x18],0x1
 100c65c:	jne    0x100c668
 100c65e:	mov    DWORD PTR [rsp+0x48],0x0
 100c666:	jmp    0x100c670
 100c668:	mov    DWORD PTR [rsp+0x48],0x3
 100c670:	lea    rcx,[rsp+0x38]
 100c675:	call   0x1010f60
 100c67a:	mov    QWORD PTR [rbp-0x58],rax
 100c67e:	mov    rax,QWORD PTR [rbp-0x58]
 100c682:	mov    rax,QWORD PTR [rax]
 100c685:	mov    edx,DWORD PTR [rsp+0x48]
 100c689:	mov    rcx,QWORD PTR [rbp-0x58]
 100c68d:	call   QWORD PTR [rax+0xb8]
 100c693:	mov    ecx,eax
 100c695:	call   0x1006e20
 100c69a:	test   eax,eax
 100c69c:	jne    0x100c71b
 100c69e:	lea    rcx,[rsp+0x38]
 100c6a3:	call   0x1010f20
 100c6a8:	mov    rdx,rax
 100c6ab:	lea    rcx,[rsp+0xa8]
 100c6b3:	call   0x100eba0
 100c6b8:	nop
 100c6b9:	lea    rcx,[rsp+0x38]
 100c6be:	call   0x1010f60
 100c6c3:	mov    QWORD PTR [rbp-0x48],rax
 100c6c7:	lea    rcx,[rip+0x13c52]        # 0x1020320
 100c6ce:	call   0x100f020
 100c6d3:	mov    rcx,QWORD PTR [rbp-0x48]
 100c6d7:	mov    rcx,QWORD PTR [rcx]
 100c6da:	mov    QWORD PTR [rbp-0x28],rcx
 100c6de:	mov    rdx,rax
 100c6e1:	mov    rcx,QWORD PTR [rbp-0x48]
 100c6e5:	mov    rax,QWORD PTR [rbp-0x28]
 100c6e9:	call   QWORD PTR [rax+0x1a8]
 100c6ef:	mov    ecx,eax
 100c6f1:	call   0x1006e20
 100c6f6:	test   eax,eax
 100c6f8:	je     0x100c70c
 100c6fa:	lea    rcx,[rsp+0xa8]
 100c702:	call   0x100ec10
 100c707:	jmp    0x100c898
 100c70c:	lea    rcx,[rsp+0xa8]
 100c714:	call   0x100ec10
 100c719:	jmp    0x100c720
 100c71b:	jmp    0x100c898
 100c720:	mov    DWORD PTR [rsp+0x30],0x1
 100c728:	lea    rcx,[rsp+0x98]
 100c730:	call   0x10038c0
 100c735:	mov    rdx,QWORD PTR [rsp+0x88]
 100c73d:	mov    rcx,QWORD PTR [rsp+0x98]
 100c745:	call   0x1003830
 100c74a:	cvttsd2si eax,xmm0
 100c74e:	mov    DWORD PTR [rsp+0x40],eax
 100c752:	mov    r8d,0x1000
 100c758:	lea    rdx,[rip+0xe731]        # 0x101ae90
 100c75f:	mov    ecx,0x19
 100c764:	call   0x1008800
 100c769:	mov    eax,DWORD PTR [rsp+0x40]
 100c76d:	cdq    
 100c76e:	mov    ecx,0x3c
 100c773:	idiv   ecx
 100c775:	mov    eax,edx
 100c777:	cmp    eax,0x1
 100c77a:	jle    0x100c790
 100c77c:	mov    eax,DWORD PTR [rsp+0x40]
 100c780:	cdq    
 100c781:	mov    ecx,0x3c
 100c786:	idiv   ecx
 100c788:	mov    eax,edx
 100c78a:	mov    DWORD PTR [rsp+0x60],eax
 100c78e:	jmp    0x100c798
 100c790:	mov    DWORD PTR [rsp+0x60],0x1
 100c798:	mov    eax,DWORD PTR [rsp+0x40]
 100c79c:	cdq    
 100c79d:	mov    ecx,0xe10
 100c7a2:	idiv   ecx
 100c7a4:	mov    eax,edx
 100c7a6:	cdq    
 100c7a7:	mov    ecx,0x3c
 100c7ac:	idiv   ecx
 100c7ae:	mov    DWORD PTR [rsp+0x16e0],eax
 100c7b5:	mov    eax,DWORD PTR [rsp+0x40]
 100c7b9:	cdq    
 100c7ba:	mov    ecx,0xe10
 100c7bf:	idiv   ecx
 100c7c1:	mov    ecx,DWORD PTR [rsp+0x60]
 100c7c5:	mov    DWORD PTR [rsp+0x28],ecx
 100c7c9:	mov    ecx,DWORD PTR [rsp+0x16e0]
 100c7d0:	mov    DWORD PTR [rsp+0x20],ecx
 100c7d4:	mov    r9d,eax
 100c7d7:	lea    r8,[rip+0xe6b2]        # 0x101ae90
 100c7de:	mov    edx,0x100
 100c7e3:	lea    rcx,[rsp+0x2d0]
 100c7eb:	call   QWORD PTR [rip+0xffffffffffff4a07]        # 0x10011f8
 100c7f1:	lea    r9,[rsp+0x2d0]
 100c7f9:	lea    r8,[rip+0xffffffffffff56b0]        # 0x1001eb0
 100c800:	mov    edx,0x2710
 100c805:	lea    rcx,[rip+0x9864]        # 0x1016070
 100c80c:	call   QWORD PTR [rip+0xffffffffffff49e6]        # 0x10011f8
 100c812:	lea    rcx,[rip+0x9857]        # 0x1016070
 100c819:	call   0x1008f00
 100c81e:	mov    eax,DWORD PTR [rsp+0x30]
 100c822:	mov    DWORD PTR [rip+0x130dc],eax        # 0x101f904
 100c828:	call   0x10082e0
 100c82d:	cmp    DWORD PTR [rip+0x9834],0x0        # 0x1016068
 100c834:	je     0x100c86f
 100c836:	cmp    DWORD PTR [rip+0x8b53],0x1        # 0x1015390
 100c83d:	jne    0x100c84d
 100c83f:	lea    rax,[rsp+0x6d0]
 100c847:	mov    QWORD PTR [rbp-0x38],rax
 100c84b:	jmp    0x100c85b
 100c84d:	mov    rax,QWORD PTR [rbp+0x10]
 100c851:	add    rax,0x114
 100c857:	mov    QWORD PTR [rbp-0x38],rax
 100c85b:	mov    r8,QWORD PTR [rbp-0x38]
 100c85f:	mov    edx,DWORD PTR [rbp+0x18]
 100c862:	mov    rcx,QWORD PTR [rbp+0x10]
 100c866:	call   0x100d790
 100c86b:	mov    DWORD PTR [rsp+0x30],eax
 100c86f:	mov    eax,DWORD PTR [rsp+0x30]
 100c873:	mov    DWORD PTR [rsp+0x16d4],eax
 100c87a:	lea    rcx,[rsp+0x58]
 100c87f:	call   0x1010fb0
 100c884:	nop
 100c885:	lea    rcx,[rsp+0x38]
 100c88a:	call   0x1010ee0
 100c88f:	mov    eax,DWORD PTR [rsp+0x16d4]
 100c896:	jmp    0x100c8ce
 100c898:	mov    eax,DWORD PTR [rsp+0x30]
 100c89c:	mov    DWORD PTR [rip+0x13062],eax        # 0x101f904
 100c8a2:	call   0x10082e0
 100c8a7:	mov    eax,DWORD PTR [rsp+0x30]
 100c8ab:	mov    DWORD PTR [rsp+0x16dc],eax
 100c8b2:	lea    rcx,[rsp+0x58]
 100c8b7:	call   0x1010fb0
 100c8bc:	nop
 100c8bd:	lea    rcx,[rsp+0x38]
 100c8c2:	call   0x1010ee0
 100c8c7:	mov    eax,DWORD PTR [rsp+0x16dc]
 100c8ce:	mov    rcx,QWORD PTR [rbp-0x18]
 100c8d2:	xor    rcx,rsp
 100c8d5:	call   0x1012040
 100c8da:	add    rsp,0x1768
 100c8e1:	pop    rdi
 100c8e2:	pop    rbp
 100c8e3:	ret    
 100c8e4:	int3   
 100c8e5:	int3   
 100c8e6:	int3   
 100c8e7:	int3   
 100c8e8:	int3   
 100c8e9:	int3   
 100c8ea:	int3   
 100c8eb:	int3   
 100c8ec:	int3   
 100c8ed:	int3   
 100c8ee:	int3   
 100c8ef:	int3   
 100c8f0:	mov    QWORD PTR [rsp+0x18],r8
 100c8f5:	mov    DWORD PTR [rsp+0x10],edx
 100c8f9:	mov    QWORD PTR [rsp+0x8],rcx
 100c8fe:	push   rbp
 100c8ff:	mov    rbp,rsp
 100c902:	push   rdi
 100c903:	mov    eax,0x1ac8
 100c908:	call   0x1011fe0
 100c90d:	sub    rsp,rax
 100c910:	mov    rax,QWORD PTR [rip+0x8a49]        # 0x1015360
 100c917:	xor    rax,rsp
 100c91a:	mov    QWORD PTR [rbp-0x20],rax
 100c91e:	mov    rax,QWORD PTR [rbp+0x10]
 100c922:	add    rax,0x8
 100c926:	mov    rcx,rax
 100c929:	call   0x100e850
 100c92e:	test   eax,eax
 100c930:	je     0x100c93c
 100c932:	mov    eax,0x1
 100c937:	jmp    0x100ce46
 100c93c:	mov    rcx,QWORD PTR [rbp+0x10]
 100c940:	call   0x100e220
 100c945:	mov    DWORD PTR [rsp+0x34],0x1
 100c94d:	movzx  eax,WORD PTR [rip+0xffffffffffff4e6c]        # 0x10017c0
 100c954:	mov    WORD PTR [rsp+0x2b0],ax
 100c95c:	lea    rax,[rsp+0x2b2]
 100c964:	mov    rdi,rax
 100c967:	xor    eax,eax
 100c969:	mov    ecx,0x7fe
 100c96e:	rep stos BYTE PTR es:[rdi],al
 100c970:	movzx  eax,WORD PTR [rip+0xffffffffffff4e49]        # 0x10017c0
 100c977:	mov    WORD PTR [rsp+0x12b0],ax
 100c97f:	lea    rax,[rsp+0x12b2]
 100c987:	mov    rdi,rax
 100c98a:	xor    eax,eax
 100c98c:	mov    ecx,0x7fe
 100c991:	rep stos BYTE PTR es:[rdi],al
 100c993:	movzx  eax,WORD PTR [rip+0xffffffffffff4e26]        # 0x10017c0
 100c99a:	mov    WORD PTR [rsp+0xab0],ax
 100c9a2:	lea    rax,[rsp+0xab2]
 100c9aa:	mov    rdi,rax
 100c9ad:	xor    eax,eax
 100c9af:	mov    ecx,0x7fe
 100c9b4:	rep stos BYTE PTR es:[rdi],al
 100c9b6:	mov    DWORD PTR [rsp+0x30],0x0
 100c9be:	mov    DWORD PTR [rsp+0x3c],0x0
 100c9c6:	mov    QWORD PTR [rsp+0x40],0x0
 100c9cf:	mov    rax,QWORD PTR [rbp+0x10]
 100c9d3:	movzx  eax,WORD PTR [rax+0x114]
 100c9da:	test   eax,eax
 100c9dc:	je     0x100c9f3
 100c9de:	cmp    DWORD PTR [rip+0x89ab],0x2        # 0x1015390
 100c9e5:	je     0x100c9f3
 100c9e7:	cmp    DWORD PTR [rbp+0x18],0x1
 100c9eb:	je     0x100c9fa
 100c9ed:	cmp    DWORD PTR [rbp+0x18],0x2
 100c9f1:	je     0x100c9fa
 100c9f3:	xor    eax,eax
 100c9f5:	jmp    0x100ce46
 100c9fa:	lea    rdx,[rsp+0x48]
 100c9ff:	mov    rcx,QWORD PTR [rbp+0x20]
 100ca03:	call   0x1008d30
 100ca08:	test   eax,eax
 100ca0a:	jne    0x100ca13
 100ca0c:	xor    eax,eax
 100ca0e:	jmp    0x100ce46
 100ca13:	mov    r8d,0x1000
 100ca19:	lea    rdx,[rip+0xe470]        # 0x101ae90
 100ca20:	mov    ecx,0x22
 100ca25:	call   0x1008800
 100ca2a:	mov    eax,DWORD PTR [rip+0x897c]        # 0x10153ac
 100ca30:	inc    eax
 100ca32:	mov    DWORD PTR [rip+0x8974],eax        # 0x10153ac
 100ca38:	mov    rax,QWORD PTR [rbp+0x10]
 100ca3c:	add    rax,0x10
 100ca40:	mov    QWORD PTR [rsp+0x20],rax
 100ca45:	mov    r9d,DWORD PTR [rip+0x8960]        # 0x10153ac
 100ca4c:	lea    r8,[rip+0xe43d]        # 0x101ae90
 100ca53:	mov    edx,0x2710
 100ca58:	lea    rcx,[rip+0x9611]        # 0x1016070
 100ca5f:	call   QWORD PTR [rip+0xffffffffffff4793]        # 0x10011f8
 100ca65:	lea    rcx,[rip+0x9604]        # 0x1016070
 100ca6c:	call   0x1008f00
 100ca71:	cmp    DWORD PTR [rbp+0x18],0x1
 100ca75:	jne    0x100ca81
 100ca77:	mov    DWORD PTR [rsp+0x38],0x62
 100ca7f:	jmp    0x100ca89
 100ca81:	mov    DWORD PTR [rsp+0x38],0x63
 100ca89:	mov    edx,DWORD PTR [rsp+0x38]
 100ca8d:	mov    rcx,QWORD PTR [rbp+0x10]
 100ca91:	call   0x100e750
 100ca96:	mov    r9d,DWORD PTR [rbp+0x18]
 100ca9a:	mov    r8d,0x400
 100caa0:	lea    rdx,[rsp+0x2b0]
 100caa8:	mov    rcx,QWORD PTR [rbp+0x10]
 100caac:	call   0x100ddd0
 100cab1:	test   eax,eax
 100cab3:	je     0x100cdb6
 100cab9:	lea    rcx,[rsp+0x58]
 100cabe:	call   0x10038c0
 100cac3:	mov    dx,0x2e
 100cac7:	lea    rcx,[rsp+0x2b0]
 100cacf:	call   0x1003720
 100cad4:	test   rax,rax
 100cad7:	je     0x100cb36
 100cad9:	lea    rcx,[rsp+0x2b0]
 100cae1:	call   QWORD PTR [rip+0xffffffffffff4709]        # 0x10011f0
 100cae7:	mov    dx,0x2e
 100caeb:	lea    rcx,[rsp+0x2b0]
 100caf3:	call   0x1003720
 100caf8:	add    rax,0x2
 100cafc:	mov    r8,rax
 100caff:	mov    edx,0x400
 100cb04:	lea    rcx,[rsp+0xab0]
 100cb0c:	call   QWORD PTR [rip+0xffffffffffff4816]        # 0x1001328
 100cb12:	lea    rcx,[rsp+0xab0]
 100cb1a:	call   QWORD PTR [rip+0xffffffffffff46d0]        # 0x10011f0
 100cb20:	mov    r8,rax
 100cb23:	mov    edx,0x400
 100cb28:	lea    rcx,[rsp+0x2b0]
 100cb30:	call   QWORD PTR [rip+0xffffffffffff47f2]        # 0x1001328
 100cb36:	mov    dx,0x5f
 100cb3a:	lea    rcx,[rsp+0x2b0]
 100cb42:	call   0x1003720
 100cb47:	test   rax,rax
 100cb4a:	je     0x100cba9
 100cb4c:	lea    rcx,[rsp+0x2b0]
 100cb54:	call   QWORD PTR [rip+0xffffffffffff4696]        # 0x10011f0
 100cb5a:	mov    dx,0x5f
 100cb5e:	lea    rcx,[rsp+0x2b0]
 100cb66:	call   0x1003720
 100cb6b:	add    rax,0x2
 100cb6f:	mov    r8,rax
 100cb72:	mov    edx,0x400
 100cb77:	lea    rcx,[rsp+0xab0]
 100cb7f:	call   QWORD PTR [rip+0xffffffffffff47a3]        # 0x1001328
 100cb85:	lea    rcx,[rsp+0xab0]
 100cb8d:	call   QWORD PTR [rip+0xffffffffffff465d]        # 0x10011f0
 100cb93:	mov    r8,rax
 100cb96:	mov    edx,0x400
 100cb9b:	lea    rcx,[rsp+0x2b0]
 100cba3:	call   QWORD PTR [rip+0xffffffffffff477f]        # 0x1001328
 100cba9:	mov    r8d,0x250
 100cbaf:	xor    edx,edx
 100cbb1:	lea    rcx,[rsp+0x60]
 100cbb6:	call   0x1011e78
 100cbbb:	mov    rax,QWORD PTR [rbp+0x10]
 100cbbf:	add    rax,0x114
 100cbc5:	mov    r8,rax
 100cbc8:	mov    edx,0x400
 100cbcd:	lea    rcx,[rsp+0x12b0]
 100cbd5:	call   QWORD PTR [rip+0xffffffffffff474d]        # 0x1001328
 100cbdb:	mov    rax,QWORD PTR [rbp+0x10]
 100cbdf:	add    rax,0x114
 100cbe5:	mov    rcx,rax
 100cbe8:	call   QWORD PTR [rip+0xffffffffffff4742]        # 0x1001330
 100cbee:	mov    rcx,QWORD PTR [rbp+0x10]
 100cbf2:	movzx  eax,WORD PTR [rcx+rax*2+0x112]
 100cbfa:	cmp    eax,0x5c
 100cbfd:	je     0x100cc19
 100cbff:	lea    r8,[rip+0xffffffffffff4ca2]        # 0x10018a8
 100cc06:	mov    edx,0x400
 100cc0b:	lea    rcx,[rsp+0x12b0]
 100cc13:	call   QWORD PTR [rip+0xffffffffffff46f7]        # 0x1001310
 100cc19:	lea    r8,[rsp+0x2b0]
 100cc21:	mov    edx,0x400
 100cc26:	lea    rcx,[rsp+0x12b0]
 100cc2e:	call   QWORD PTR [rip+0xffffffffffff46dc]        # 0x1001310
 100cc34:	lea    r8,[rip+0xffffffffffff535d]        # 0x1001f98
 100cc3b:	mov    edx,0x400
 100cc40:	lea    rcx,[rsp+0x12b0]
 100cc48:	call   QWORD PTR [rip+0xffffffffffff46c2]        # 0x1001310
 100cc4e:	lea    rdx,[rsp+0x60]
 100cc53:	lea    rcx,[rsp+0x12b0]
 100cc5b:	call   QWORD PTR [rip+0xffffffffffff4467]        # 0x10010c8
 100cc61:	mov    QWORD PTR [rsp+0x40],rax
 100cc66:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
 100cc6c:	je     0x100cdb6
 100cc72:	lea    rdx,[rsp+0x50]
 100cc77:	lea    rcx,[rsp+0x8c]
 100cc7f:	call   0x1009880
 100cc84:	test   eax,eax
 100cc86:	je     0x100cd93
 100cc8c:	mov    rdx,QWORD PTR [rsp+0x50]
 100cc91:	mov    rcx,QWORD PTR [rsp+0x58]
 100cc96:	call   0x1003830
 100cc9b:	cvttsd2si eax,xmm0
 100cc9f:	mov    DWORD PTR [rsp+0x3c],eax
 100cca3:	mov    eax,DWORD PTR [rsp+0x48]
 100cca7:	cmp    DWORD PTR [rsp+0x3c],eax
 100ccab:	jle    0x100cd93
 100ccb1:	mov    rax,QWORD PTR [rbp+0x10]
 100ccb5:	add    rax,0x114
 100ccbb:	mov    r8,rax
 100ccbe:	mov    edx,0x400
 100ccc3:	lea    rcx,[rsp+0x12b0]
 100cccb:	call   QWORD PTR [rip+0xffffffffffff4657]        # 0x1001328
 100ccd1:	mov    rax,QWORD PTR [rbp+0x10]
 100ccd5:	add    rax,0x114
 100ccdb:	mov    rcx,rax
 100ccde:	call   QWORD PTR [rip+0xffffffffffff464c]        # 0x1001330
 100cce4:	mov    rcx,QWORD PTR [rbp+0x10]
 100cce8:	movzx  eax,WORD PTR [rcx+rax*2+0x112]
 100ccf0:	cmp    eax,0x5c
 100ccf3:	je     0x100cd0f
 100ccf5:	lea    r8,[rip+0xffffffffffff4bac]        # 0x10018a8
 100ccfc:	mov    edx,0x400
 100cd01:	lea    rcx,[rsp+0x12b0]
 100cd09:	call   QWORD PTR [rip+0xffffffffffff4601]        # 0x1001310
 100cd0f:	lea    r8,[rsp+0x8c]
 100cd17:	mov    edx,0x400
 100cd1c:	lea    rcx,[rsp+0x12b0]
 100cd24:	call   QWORD PTR [rip+0xffffffffffff45e6]        # 0x1001310
 100cd2a:	lea    rcx,[rsp+0x12b0]
 100cd32:	call   0x1008680
 100cd37:	test   eax,eax
 100cd39:	je     0x100cd89
 100cd3b:	mov    r8d,0x1000
 100cd41:	lea    rdx,[rip+0xe148]        # 0x101ae90
 100cd48:	mov    ecx,0x23
 100cd4d:	call   0x1008800
 100cd52:	lea    r9,[rsp+0x12b0]
 100cd5a:	lea    r8,[rip+0xe12f]        # 0x101ae90
 100cd61:	mov    edx,0x2710
 100cd66:	lea    rcx,[rip+0x9303]        # 0x1016070
 100cd6d:	call   QWORD PTR [rip+0xffffffffffff4485]        # 0x10011f8
 100cd73:	lea    rcx,[rip+0x92f6]        # 0x1016070
 100cd7a:	call   0x1008f00
 100cd7f:	mov    DWORD PTR [rsp+0x34],0x0
 100cd87:	jmp    0x100cd93
 100cd89:	mov    eax,DWORD PTR [rsp+0x30]
 100cd8d:	inc    eax
 100cd8f:	mov    DWORD PTR [rsp+0x30],eax
 100cd93:	lea    rdx,[rsp+0x60]
 100cd98:	mov    rcx,QWORD PTR [rsp+0x40]
 100cd9d:	call   QWORD PTR [rip+0xffffffffffff432d]        # 0x10010d0
 100cda3:	test   eax,eax
 100cda5:	jne    0x100cc72
 100cdab:	mov    rcx,QWORD PTR [rsp+0x40]
 100cdb0:	call   QWORD PTR [rip+0xffffffffffff429a]        # 0x1001050
 100cdb6:	mov    r8d,0x1000
 100cdbc:	lea    rdx,[rip+0xe0cd]        # 0x101ae90
 100cdc3:	mov    ecx,0x24
 100cdc8:	call   0x1008800
 100cdcd:	mov    r9d,DWORD PTR [rsp+0x30]
 100cdd2:	lea    r8,[rip+0xe0b7]        # 0x101ae90
 100cdd9:	mov    edx,0x2710
 100cdde:	lea    rcx,[rip+0x928b]        # 0x1016070
 100cde5:	call   QWORD PTR [rip+0xffffffffffff440d]        # 0x10011f8
 100cdeb:	lea    rcx,[rip+0x927e]        # 0x1016070
 100cdf2:	call   0x1008f00
 100cdf7:	mov    r8d,0x1000
 100cdfd:	lea    rdx,[rip+0xe08c]        # 0x101ae90
 100ce04:	mov    ecx,0x74
 100ce09:	call   0x1008800
 100ce0e:	mov    r9d,DWORD PTR [rsp+0x30]
 100ce13:	lea    r8,[rip+0xe076]        # 0x101ae90
 100ce1a:	mov    edx,0x800
 100ce1f:	lea    rcx,[rip+0x11ade]        # 0x101e904
 100ce26:	call   QWORD PTR [rip+0xffffffffffff43cc]        # 0x10011f8
 100ce2c:	mov    eax,DWORD PTR [rsp+0x34]
 100ce30:	mov    DWORD PTR [rip+0x12ace],eax        # 0x101f904
 100ce36:	cmp    DWORD PTR [rsp+0x30],0x0
 100ce3b:	jle    0x100ce42
 100ce3d:	call   0x10082e0
 100ce42:	mov    eax,DWORD PTR [rsp+0x34]
 100ce46:	mov    rcx,QWORD PTR [rbp-0x20]
 100ce4a:	xor    rcx,rsp
 100ce4d:	call   0x1012040
 100ce52:	add    rsp,0x1ac8
 100ce59:	pop    rdi
 100ce5a:	pop    rbp
 100ce5b:	ret    
 100ce5c:	int3   
 100ce5d:	int3   
 100ce5e:	int3   
 100ce5f:	int3   
 100ce60:	int3   
 100ce61:	int3   
 100ce62:	int3   
 100ce63:	int3   
 100ce64:	int3   
 100ce65:	int3   
 100ce66:	int3   
 100ce67:	int3   
 100ce68:	int3   
 100ce69:	int3   
 100ce6a:	int3   
 100ce6b:	int3   
 100ce6c:	int3   
 100ce6d:	int3   
 100ce6e:	int3   
 100ce6f:	int3   
 100ce70:	mov    QWORD PTR [rsp+0x8],rcx
 100ce75:	push   rbp
 100ce76:	mov    rbp,rsp
 100ce79:	push   rdi
 100ce7a:	sub    rsp,0x8c8
 100ce81:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
 100ce8d:	mov    rax,QWORD PTR [rip+0x84cc]        # 0x1015360
 100ce94:	xor    rax,rsp
 100ce97:	mov    QWORD PTR [rbp-0x20],rax
 100ce9b:	mov    rax,QWORD PTR [rbp+0x10]
 100ce9f:	add    rax,0x8
 100cea3:	mov    rcx,rax
 100cea6:	call   0x100e850
 100ceab:	test   eax,eax
 100cead:	je     0x100ceb9
 100ceaf:	mov    eax,0x1
 100ceb4:	jmp    0x100d237
 100ceb9:	mov    DWORD PTR [rsp+0x48],0x0
 100cec1:	lea    rcx,[rsp+0x40]
 100cec6:	call   0x1010cd0
 100cecb:	nop
 100cecc:	lea    rcx,[rsp+0x70]
 100ced1:	call   0x10038f0
 100ced6:	nop
 100ced7:	mov    DWORD PTR [rsp+0x34],0x0
 100cedf:	movzx  eax,WORD PTR [rip+0xffffffffffff48da]        # 0x10017c0
 100cee6:	mov    WORD PTR [rsp+0xb0],ax
 100ceee:	lea    rax,[rsp+0xb2]
 100cef6:	mov    rdi,rax
 100cef9:	xor    eax,eax
 100cefb:	mov    ecx,0x7fe
 100cf00:	rep stos BYTE PTR es:[rdi],al
 100cf02:	mov    DWORD PTR [rsp+0x88],0x0
 100cf0d:	mov    rax,QWORD PTR [rbp+0x10]
 100cf11:	add    rax,0x10
 100cf15:	mov    rcx,rax
 100cf18:	call   QWORD PTR [rip+0xffffffffffff4412]        # 0x1001330
 100cf1e:	mov    QWORD PTR [rsp+0x90],rax
 100cf26:	mov    DWORD PTR [rsp+0x30],0x0
 100cf2e:	mov    r8d,0x1000
 100cf34:	lea    rdx,[rip+0xdf55]        # 0x101ae90
 100cf3b:	mov    ecx,0x4b
 100cf40:	call   0x1008800
 100cf45:	mov    eax,DWORD PTR [rip+0x8461]        # 0x10153ac
 100cf4b:	inc    eax
 100cf4d:	mov    DWORD PTR [rip+0x8459],eax        # 0x10153ac
 100cf53:	mov    rax,QWORD PTR [rbp+0x10]
 100cf57:	add    rax,0x10
 100cf5b:	mov    ecx,DWORD PTR [rip+0xff2f]        # 0x101ce90
 100cf61:	mov    DWORD PTR [rsp+0x28],ecx
 100cf65:	mov    QWORD PTR [rsp+0x20],rax
 100cf6a:	mov    r9d,DWORD PTR [rip+0x843b]        # 0x10153ac
 100cf71:	lea    r8,[rip+0xdf18]        # 0x101ae90
 100cf78:	mov    edx,0x2710
 100cf7d:	lea    rcx,[rip+0x90ec]        # 0x1016070
 100cf84:	call   QWORD PTR [rip+0xffffffffffff426e]        # 0x10011f8
 100cf8a:	lea    rcx,[rip+0x90df]        # 0x1016070
 100cf91:	call   0x1008f00
 100cf96:	mov    edx,0x65
 100cf9b:	mov    rcx,QWORD PTR [rbp+0x10]
 100cf9f:	call   0x100e750
 100cfa4:	lea    rcx,[rsp+0x98]
 100cfac:	call   0x10038c0
 100cfb1:	mov    DWORD PTR [rsp+0x30],0x1
 100cfb9:	mov    rax,QWORD PTR [rbp+0x10]
 100cfbd:	add    rax,0x8
 100cfc1:	mov    rcx,rax
 100cfc4:	call   0x100e890
 100cfc9:	mov    QWORD PTR [rsp+0x58],rax
 100cfce:	mov    rax,QWORD PTR [rsp+0x58]
 100cfd3:	mov    rax,QWORD PTR [rax]
 100cfd6:	lea    rdx,[rsp+0x48]
 100cfdb:	mov    rcx,QWORD PTR [rsp+0x58]
 100cfe0:	call   QWORD PTR [rax+0x120]
 100cfe6:	mov    ecx,eax
 100cfe8:	call   0x1006e20
 100cfed:	test   eax,eax
 100cfef:	jne    0x100d12c
 100cff5:	mov    DWORD PTR [rsp+0x38],0x0
 100cffd:	jmp    0x100d009
 100cfff:	mov    eax,DWORD PTR [rsp+0x38]
 100d003:	inc    eax
 100d005:	mov    DWORD PTR [rsp+0x38],eax
 100d009:	mov    eax,DWORD PTR [rsp+0x48]
 100d00d:	cmp    DWORD PTR [rsp+0x38],eax
 100d011:	jge    0x100d12a
 100d017:	mov    DWORD PTR [rsp+0x3c],0x0
 100d01f:	lea    rcx,[rsp+0x40]
 100d024:	call   0x1010df0
 100d029:	mov    rax,QWORD PTR [rbp+0x10]
 100d02d:	add    rax,0x8
 100d031:	mov    rcx,rax
 100d034:	call   0x100e890
 100d039:	mov    QWORD PTR [rsp+0x60],rax
 100d03e:	lea    rcx,[rsp+0x40]
 100d043:	call   0x1010d70
 100d048:	mov    rcx,QWORD PTR [rsp+0x60]
 100d04d:	mov    rcx,QWORD PTR [rcx]
 100d050:	mov    QWORD PTR [rsp+0x80],rcx
 100d058:	mov    r8,rax
 100d05b:	mov    edx,DWORD PTR [rsp+0x38]
 100d05f:	mov    rcx,QWORD PTR [rsp+0x60]
 100d064:	mov    rax,QWORD PTR [rsp+0x80]
 100d06c:	call   QWORD PTR [rax+0x100]
 100d072:	mov    ecx,eax
 100d074:	call   0x1006e20
 100d079:	test   eax,eax
 100d07b:	jne    0x100d10c
 100d081:	lea    rcx,[rsp+0x40]
 100d086:	call   0x1010d90
 100d08b:	test   eax,eax
 100d08d:	jne    0x100d10c
 100d08f:	lea    rcx,[rsp+0x40]
 100d094:	call   0x1010dd0
 100d099:	mov    QWORD PTR [rsp+0x68],rax
 100d09e:	mov    rax,QWORD PTR [rsp+0x68]
 100d0a3:	mov    rax,QWORD PTR [rax]
 100d0a6:	lea    rdx,[rsp+0x3c]
 100d0ab:	mov    rcx,QWORD PTR [rsp+0x68]
 100d0b0:	call   QWORD PTR [rax+0x68]
 100d0b3:	mov    ecx,eax
 100d0b5:	call   0x1006e20
 100d0ba:	test   eax,eax
 100d0bc:	jne    0x100d10c
 100d0be:	cmp    DWORD PTR [rsp+0x3c],0x0
 100d0c3:	jne    0x100d10c
 100d0c5:	lea    rcx,[rsp+0x40]
 100d0ca:	call   0x1010dd0
 100d0cf:	mov    QWORD PTR [rsp+0x78],rax
 100d0d4:	mov    rax,QWORD PTR [rsp+0x78]
 100d0d9:	mov    rax,QWORD PTR [rax]
 100d0dc:	mov    DWORD PTR [rsp+0x20],0x1
 100d0e4:	mov    r9d,DWORD PTR [rip+0xfda5]        # 0x101ce90
 100d0eb:	mov    r8d,0x1
 100d0f1:	mov    edx,0x2
 100d0f6:	mov    rcx,QWORD PTR [rsp+0x78]
 100d0fb:	call   QWORD PTR [rax+0x2e8]
 100d101:	mov    ecx,eax
 100d103:	call   0x1006e20
 100d108:	test   eax,eax
 100d10a:	je     0x100d11b
 100d10c:	cmp    DWORD PTR [rsp+0x3c],0x0
 100d111:	jne    0x100d11b
 100d113:	mov    DWORD PTR [rsp+0x30],0x0
 100d11b:	lea    rcx,[rsp+0x70]
 100d120:	call   0x1003950
 100d125:	jmp    0x100cfff
 100d12a:	jmp    0x100d134
 100d12c:	mov    DWORD PTR [rsp+0x30],0x0
 100d134:	lea    rcx,[rsp+0xa0]
 100d13c:	call   0x10038c0
 100d141:	mov    r8d,0x1000
 100d147:	lea    rdx,[rip+0xdd42]        # 0x101ae90
 100d14e:	mov    ecx,0x19
 100d153:	call   0x1008800
 100d158:	mov    eax,DWORD PTR [rsp+0x34]
 100d15c:	cdq    
 100d15d:	mov    ecx,0x3c
 100d162:	idiv   ecx
 100d164:	mov    eax,edx
 100d166:	cmp    eax,0x1
 100d169:	jle    0x100d17f
 100d16b:	mov    eax,DWORD PTR [rsp+0x34]
 100d16f:	cdq    
 100d170:	mov    ecx,0x3c
 100d175:	idiv   ecx
 100d177:	mov    eax,edx
 100d179:	mov    DWORD PTR [rsp+0x4c],eax
 100d17d:	jmp    0x100d187
 100d17f:	mov    DWORD PTR [rsp+0x4c],0x1
 100d187:	mov    eax,DWORD PTR [rsp+0x34]
 100d18b:	cdq    
 100d18c:	mov    ecx,0xe10
 100d191:	idiv   ecx
 100d193:	mov    eax,edx
 100d195:	cdq    
 100d196:	mov    ecx,0x3c
 100d19b:	idiv   ecx
 100d19d:	mov    DWORD PTR [rsp+0x54],eax
 100d1a1:	mov    eax,DWORD PTR [rsp+0x34]
 100d1a5:	cdq    
 100d1a6:	mov    ecx,0xe10
 100d1ab:	idiv   ecx
 100d1ad:	mov    ecx,DWORD PTR [rsp+0x4c]
 100d1b1:	mov    DWORD PTR [rsp+0x28],ecx
 100d1b5:	mov    ecx,DWORD PTR [rsp+0x54]
 100d1b9:	mov    DWORD PTR [rsp+0x20],ecx
 100d1bd:	mov    r9d,eax
 100d1c0:	lea    r8,[rip+0xdcc9]        # 0x101ae90
 100d1c7:	mov    edx,0x400
 100d1cc:	lea    rcx,[rsp+0xb0]
 100d1d4:	call   QWORD PTR [rip+0xffffffffffff401e]        # 0x10011f8
 100d1da:	lea    r9,[rsp+0xb0]
 100d1e2:	lea    r8,[rip+0xffffffffffff4cc7]        # 0x1001eb0
 100d1e9:	mov    edx,0x2710
 100d1ee:	lea    rcx,[rip+0x8e7b]        # 0x1016070
 100d1f5:	call   QWORD PTR [rip+0xffffffffffff3ffd]        # 0x10011f8
 100d1fb:	lea    rcx,[rip+0x8e6e]        # 0x1016070
 100d202:	call   0x1008f00
 100d207:	mov    eax,DWORD PTR [rsp+0x30]
 100d20b:	mov    DWORD PTR [rip+0x126f3],eax        # 0x101f904
 100d211:	call   0x10082e0
 100d216:	mov    eax,DWORD PTR [rsp+0x30]
 100d21a:	mov    DWORD PTR [rsp+0x50],eax
 100d21e:	lea    rcx,[rsp+0x70]
 100d223:	call   0x1003920
 100d228:	nop
 100d229:	lea    rcx,[rsp+0x40]
 100d22e:	call   0x1010d30
 100d233:	mov    eax,DWORD PTR [rsp+0x50]
 100d237:	mov    rcx,QWORD PTR [rbp-0x20]
 100d23b:	xor    rcx,rsp
 100d23e:	call   0x1012040
 100d243:	add    rsp,0x8c8
 100d24a:	pop    rdi
 100d24b:	pop    rbp
 100d24c:	ret    
 100d24d:	int3   
 100d24e:	int3   
 100d24f:	int3   
 100d250:	int3   
 100d251:	int3   
 100d252:	int3   
 100d253:	int3   
 100d254:	int3   
 100d255:	int3   
 100d256:	int3   
 100d257:	int3   
 100d258:	int3   
 100d259:	int3   
 100d25a:	int3   
 100d25b:	int3   
 100d25c:	int3   
 100d25d:	int3   
 100d25e:	int3   
 100d25f:	int3   
 100d260:	mov    QWORD PTR [rsp+0x18],r8
 100d265:	mov    QWORD PTR [rsp+0x10],rdx
 100d26a:	mov    QWORD PTR [rsp+0x8],rcx
 100d26f:	push   rbp
 100d270:	mov    rbp,rsp
 100d273:	push   rdi
 100d274:	sub    rsp,0x898
 100d27b:	mov    rax,QWORD PTR [rip+0x80de]        # 0x1015360
 100d282:	xor    rax,rsp
 100d285:	mov    QWORD PTR [rbp-0x20],rax
 100d289:	mov    rax,QWORD PTR [rbp+0x10]
 100d28d:	add    rax,0x8
 100d291:	mov    rcx,rax
 100d294:	call   0x100e850
 100d299:	test   eax,eax
 100d29b:	je     0x100d2a7
 100d29d:	mov    eax,0x1
 100d2a2:	jmp    0x100d520
 100d2a7:	mov    DWORD PTR [rsp+0x50],0x0
 100d2af:	mov    rcx,QWORD PTR [rbp+0x18]
 100d2b3:	call   QWORD PTR [rip+0xffffffffffff3ed7]        # 0x1001190
 100d2b9:	mov    DWORD PTR [rsp+0x54],eax
 100d2bd:	mov    rcx,QWORD PTR [rbp+0x20]
 100d2c1:	call   QWORD PTR [rip+0xffffffffffff3ec9]        # 0x1001190
 100d2c7:	mov    DWORD PTR [rsp+0x44],eax
 100d2cb:	mov    DWORD PTR [rsp+0x40],0x0
 100d2d3:	movzx  eax,WORD PTR [rip+0xffffffffffff44e6]        # 0x10017c0
 100d2da:	mov    WORD PTR [rsp+0x80],ax
 100d2e2:	lea    rax,[rsp+0x82]
 100d2ea:	mov    rdi,rax
 100d2ed:	xor    eax,eax
 100d2ef:	mov    ecx,0x7fe
 100d2f4:	rep stos BYTE PTR es:[rdi],al
 100d2f6:	mov    DWORD PTR [rsp+0x48],0x0
 100d2fe:	mov    r8d,0x1000
 100d304:	lea    rdx,[rip+0xdb85]        # 0x101ae90
 100d30b:	mov    ecx,0x4e
 100d310:	call   0x1008800
 100d315:	mov    eax,DWORD PTR [rip+0x8091]        # 0x10153ac
 100d31b:	inc    eax
 100d31d:	mov    DWORD PTR [rip+0x8089],eax        # 0x10153ac
 100d323:	mov    rax,QWORD PTR [rbp+0x10]
 100d327:	add    rax,0x10
 100d32b:	mov    rcx,QWORD PTR [rbp+0x20]
 100d32f:	mov    QWORD PTR [rsp+0x30],rcx
 100d334:	mov    rcx,QWORD PTR [rbp+0x18]
 100d338:	mov    QWORD PTR [rsp+0x28],rcx
 100d33d:	mov    QWORD PTR [rsp+0x20],rax
 100d342:	mov    r9d,DWORD PTR [rip+0x8063]        # 0x10153ac
 100d349:	lea    r8,[rip+0xdb40]        # 0x101ae90
 100d350:	mov    edx,0x2710
 100d355:	lea    rcx,[rip+0x8d14]        # 0x1016070
 100d35c:	call   QWORD PTR [rip+0xffffffffffff3e96]        # 0x10011f8
 100d362:	lea    rcx,[rip+0x8d07]        # 0x1016070
 100d369:	call   0x1008f00
 100d36e:	mov    edx,0x66
 100d373:	mov    rcx,QWORD PTR [rbp+0x10]
 100d377:	call   0x100e750
 100d37c:	lea    rcx,[rsp+0x70]
 100d381:	call   0x10038c0
 100d386:	cmp    DWORD PTR [rsp+0x54],0x1
 100d38b:	jl     0x100d3d3
 100d38d:	cmp    DWORD PTR [rsp+0x44],0x0
 100d392:	jl     0x100d3d3
 100d394:	cmp    DWORD PTR [rsp+0x44],0x64
 100d399:	jg     0x100d3d3
 100d39b:	mov    rax,QWORD PTR [rbp+0x10]
 100d39f:	add    rax,0x8
 100d3a3:	mov    rcx,rax
 100d3a6:	call   0x100e890
 100d3ab:	mov    QWORD PTR [rsp+0x60],rax
 100d3b0:	mov    rax,QWORD PTR [rsp+0x60]
 100d3b5:	mov    rax,QWORD PTR [rax]
 100d3b8:	lea    rdx,[rsp+0x50]
 100d3bd:	mov    rcx,QWORD PTR [rsp+0x60]
 100d3c2:	call   QWORD PTR [rax+0x80]
 100d3c8:	mov    ecx,eax
 100d3ca:	call   0x1006e20
 100d3cf:	test   eax,eax
 100d3d1:	je     0x100d3dd
 100d3d3:	jmp    0x100d50d
 100d3d8:	jmp    0x100d50d
 100d3dd:	mov    eax,DWORD PTR [rsp+0x50]
 100d3e1:	cmp    DWORD PTR [rsp+0x54],eax
 100d3e5:	jg     0x100d435
 100d3e7:	cmp    DWORD PTR [rsp+0x44],0x64
 100d3ec:	jge    0x100d435
 100d3ee:	mov    rax,QWORD PTR [rbp+0x10]
 100d3f2:	add    rax,0x8
 100d3f6:	mov    rcx,rax
 100d3f9:	call   0x100e890
 100d3fe:	mov    QWORD PTR [rsp+0x68],rax
 100d403:	mov    rax,QWORD PTR [rsp+0x68]
 100d408:	mov    rax,QWORD PTR [rax]
 100d40b:	mov    r8d,0x2
 100d411:	mov    edx,DWORD PTR [rsp+0x44]
 100d415:	mov    rcx,QWORD PTR [rsp+0x68]
 100d41a:	call   QWORD PTR [rax+0x4b8]
 100d420:	mov    ecx,eax
 100d422:	call   0x1006e20
 100d427:	test   eax,eax
 100d429:	je     0x100d435
 100d42b:	jmp    0x100d50d
 100d430:	jmp    0x100d50d
 100d435:	lea    rcx,[rsp+0x78]
 100d43a:	call   0x10038c0
 100d43f:	mov    r8d,0x1000
 100d445:	lea    rdx,[rip+0xda44]        # 0x101ae90
 100d44c:	mov    ecx,0x19
 100d451:	call   0x1008800
 100d456:	mov    eax,DWORD PTR [rsp+0x40]
 100d45a:	cdq    
 100d45b:	mov    ecx,0x3c
 100d460:	idiv   ecx
 100d462:	mov    eax,edx
 100d464:	cmp    eax,0x1
 100d467:	jle    0x100d47d
 100d469:	mov    eax,DWORD PTR [rsp+0x40]
 100d46d:	cdq    
 100d46e:	mov    ecx,0x3c
 100d473:	idiv   ecx
 100d475:	mov    eax,edx
 100d477:	mov    DWORD PTR [rsp+0x4c],eax
 100d47b:	jmp    0x100d485
 100d47d:	mov    DWORD PTR [rsp+0x4c],0x1
 100d485:	mov    eax,DWORD PTR [rsp+0x40]
 100d489:	cdq    
 100d48a:	mov    ecx,0xe10
 100d48f:	idiv   ecx
 100d491:	mov    eax,edx
 100d493:	cdq    
 100d494:	mov    ecx,0x3c
 100d499:	idiv   ecx
 100d49b:	mov    DWORD PTR [rsp+0x58],eax
 100d49f:	mov    eax,DWORD PTR [rsp+0x40]
 100d4a3:	cdq    
 100d4a4:	mov    ecx,0xe10
 100d4a9:	idiv   ecx
 100d4ab:	mov    ecx,DWORD PTR [rsp+0x4c]
 100d4af:	mov    DWORD PTR [rsp+0x28],ecx
 100d4b3:	mov    ecx,DWORD PTR [rsp+0x58]
 100d4b7:	mov    DWORD PTR [rsp+0x20],ecx
 100d4bb:	mov    r9d,eax
 100d4be:	lea    r8,[rip+0xd9cb]        # 0x101ae90
 100d4c5:	mov    edx,0x400
 100d4ca:	lea    rcx,[rsp+0x80]
 100d4d2:	call   QWORD PTR [rip+0xffffffffffff3d20]        # 0x10011f8
 100d4d8:	lea    r9,[rsp+0x80]
 100d4e0:	lea    r8,[rip+0xffffffffffff49c9]        # 0x1001eb0
 100d4e7:	mov    edx,0x2710
 100d4ec:	lea    rcx,[rip+0x8b7d]        # 0x1016070
 100d4f3:	call   QWORD PTR [rip+0xffffffffffff3cff]        # 0x10011f8
 100d4f9:	lea    rcx,[rip+0x8b70]        # 0x1016070
 100d500:	call   0x1008f00
 100d505:	mov    DWORD PTR [rsp+0x48],0x1
 100d50d:	mov    eax,DWORD PTR [rsp+0x48]
 100d511:	mov    DWORD PTR [rip+0x123ed],eax        # 0x101f904
 100d517:	call   0x10082e0
 100d51c:	mov    eax,DWORD PTR [rsp+0x48]
 100d520:	mov    rcx,QWORD PTR [rbp-0x20]
 100d524:	xor    rcx,rsp
 100d527:	call   0x1012040
 100d52c:	add    rsp,0x898
 100d533:	pop    rdi
 100d534:	pop    rbp
 100d535:	ret    
 100d536:	int3   
 100d537:	int3   
 100d538:	int3   
 100d539:	int3   
 100d53a:	int3   
 100d53b:	int3   
 100d53c:	int3   
 100d53d:	int3   
 100d53e:	int3   
 100d53f:	int3   
 100d540:	mov    QWORD PTR [rsp+0x8],rcx
 100d545:	push   rbp
 100d546:	mov    rbp,rsp
 100d549:	mov    rax,QWORD PTR [rsp+0x10]
 100d54e:	add    rax,0x10
 100d552:	pop    rbp
 100d553:	ret    
 100d554:	int3   
 100d555:	int3   
 100d556:	int3   
 100d557:	int3   
 100d558:	int3   
 100d559:	int3   
 100d55a:	int3   
 100d55b:	int3   
 100d55c:	int3   
 100d55d:	int3   
 100d55e:	int3   
 100d55f:	int3   
 100d560:	mov    QWORD PTR [rsp+0x8],rcx
 100d565:	push   rbp
 100d566:	mov    rbp,rsp
 100d569:	sub    rsp,0x840
 100d570:	mov    rax,QWORD PTR [rip+0x7de9]        # 0x1015360
 100d577:	xor    rax,rsp
 100d57a:	mov    QWORD PTR [rbp-0x10],rax
 100d57e:	mov    rax,QWORD PTR [rbp+0x10]
 100d582:	mov    DWORD PTR [rax+0xb74],0x0
 100d58c:	mov    rax,QWORD PTR [rbp+0x10]
 100d590:	cmp    DWORD PTR [rax+0xb70],0x0
 100d597:	je     0x100d5a3
 100d599:	mov    eax,0x1
 100d59e:	jmp    0x100d671
 100d5a3:	mov    r8d,0x800
 100d5a9:	xor    edx,edx
 100d5ab:	lea    rcx,[rsp+0x30]
 100d5b0:	call   0x1011e78
 100d5b5:	lea    r8,[rip+0xffffffffffff59b4]        # 0x1002f70
 100d5bc:	mov    edx,0x400
 100d5c1:	lea    rcx,[rsp+0x30]
 100d5c6:	call   QWORD PTR [rip+0xffffffffffff3d5c]        # 0x1001328
 100d5cc:	mov    rax,QWORD PTR [rbp+0x10]
 100d5d0:	add    rax,0x914
 100d5d6:	mov    r8,rax
 100d5d9:	mov    edx,0x400
 100d5de:	lea    rcx,[rsp+0x30]
 100d5e3:	call   QWORD PTR [rip+0xffffffffffff3d27]        # 0x1001310
 100d5e9:	lea    r8,[rip+0xffffffffffff59a0]        # 0x1002f90
 100d5f0:	mov    edx,0x400
 100d5f5:	lea    rcx,[rsp+0x30]
 100d5fa:	call   QWORD PTR [rip+0xffffffffffff3d10]        # 0x1001310
 100d600:	mov    DWORD PTR [rsp+0x20],0x0
 100d608:	lea    rcx,[rip+0x12d11]        # 0x1020320
 100d60f:	call   0x100f0e0
 100d614:	mov    QWORD PTR [rsp+0x28],rax
 100d619:	mov    rax,QWORD PTR [rsp+0x28]
 100d61e:	mov    rax,QWORD PTR [rax]
 100d621:	xor    r9d,r9d
 100d624:	xor    r8d,r8d
 100d627:	lea    rdx,[rsp+0x30]
 100d62c:	mov    rcx,QWORD PTR [rsp+0x28]
 100d631:	call   QWORD PTR [rax+0x2d8]
 100d637:	mov    DWORD PTR [rsp+0x20],eax
 100d63b:	cmp    DWORD PTR [rsp+0x20],0x0
 100d640:	jl     0x100d649
 100d642:	mov    eax,0x1
 100d647:	jmp    0x100d671
 100d649:	mov    eax,DWORD PTR [rsp+0x20]
 100d64d:	and    eax,0xffff
 100d652:	cmp    eax,0xa9a
 100d657:	je     0x100d667
 100d659:	mov    rax,QWORD PTR [rbp+0x10]
 100d65d:	mov    DWORD PTR [rax+0xb74],0x1
 100d667:	mov    rax,QWORD PTR [rbp+0x10]
 100d66b:	mov    eax,DWORD PTR [rax+0xb74]
 100d671:	mov    rcx,QWORD PTR [rbp-0x10]
 100d675:	xor    rcx,rsp
 100d678:	call   0x1012040
 100d67d:	add    rsp,0x840
 100d684:	pop    rbp
 100d685:	ret    
 100d686:	int3   
 100d687:	int3   
 100d688:	int3   
 100d689:	int3   
 100d68a:	int3   
 100d68b:	int3   
 100d68c:	int3   
 100d68d:	int3   
 100d68e:	int3   
 100d68f:	int3   
 100d690:	mov    QWORD PTR [rsp+0x8],rcx
 100d695:	push   rbp
 100d696:	mov    rbp,rsp
 100d699:	sub    rsp,0x840
 100d6a0:	mov    rax,QWORD PTR [rip+0x7cb9]        # 0x1015360
 100d6a7:	xor    rax,rsp
 100d6aa:	mov    QWORD PTR [rbp-0x10],rax
 100d6ae:	mov    rax,QWORD PTR [rbp+0x10]
 100d6b2:	mov    DWORD PTR [rax+0xb70],0x0
 100d6bc:	mov    rax,QWORD PTR [rbp+0x10]
 100d6c0:	cmp    DWORD PTR [rax+0xb74],0x0
 100d6c7:	je     0x100d6ce
 100d6c9:	jmp    0x100d767
 100d6ce:	mov    r8d,0x800
 100d6d4:	xor    edx,edx
 100d6d6:	lea    rcx,[rsp+0x30]
 100d6db:	call   0x1011e78
 100d6e0:	lea    r8,[rip+0xffffffffffff5871]        # 0x1002f58
 100d6e7:	mov    edx,0x400
 100d6ec:	lea    rcx,[rsp+0x30]
 100d6f1:	call   QWORD PTR [rip+0xffffffffffff3c31]        # 0x1001328
 100d6f7:	mov    rax,QWORD PTR [rbp+0x10]
 100d6fb:	add    rax,0x914
 100d701:	mov    r8,rax
 100d704:	mov    edx,0x400
 100d709:	lea    rcx,[rsp+0x30]
 100d70e:	call   QWORD PTR [rip+0xffffffffffff3bfc]        # 0x1001310
 100d714:	lea    rcx,[rip+0x12c05]        # 0x1020320
 100d71b:	call   0x100f0e0
 100d720:	mov    QWORD PTR [rsp+0x28],rax
 100d725:	mov    rax,QWORD PTR [rsp+0x28]
 100d72a:	mov    rax,QWORD PTR [rax]
 100d72d:	xor    r9d,r9d
 100d730:	xor    r8d,r8d
 100d733:	lea    rdx,[rsp+0x30]
 100d738:	mov    rcx,QWORD PTR [rsp+0x28]
 100d73d:	call   QWORD PTR [rax+0x2d8]
 100d743:	test   eax,eax
 100d745:	jge    0x100d751
 100d747:	mov    DWORD PTR [rsp+0x20],0x1
 100d74f:	jmp    0x100d759
 100d751:	mov    DWORD PTR [rsp+0x20],0x0
 100d759:	mov    rax,QWORD PTR [rbp+0x10]
 100d75d:	mov    ecx,DWORD PTR [rsp+0x20]
 100d761:	mov    DWORD PTR [rax+0xb70],ecx
 100d767:	mov    rcx,QWORD PTR [rbp-0x10]
 100d76b:	xor    rcx,rsp
 100d76e:	call   0x1012040
 100d773:	add    rsp,0x840
 100d77a:	pop    rbp
 100d77b:	ret    
 100d77c:	int3   
 100d77d:	int3   
 100d77e:	int3   
 100d77f:	int3   
 100d780:	int3   
 100d781:	int3   
 100d782:	int3   
 100d783:	int3   
 100d784:	int3   
 100d785:	int3   
 100d786:	int3   
 100d787:	int3   
 100d788:	int3   
 100d789:	int3   
 100d78a:	int3   
 100d78b:	int3   
 100d78c:	int3   
 100d78d:	int3   
 100d78e:	int3   
 100d78f:	int3   
 100d790:	mov    QWORD PTR [rsp+0x18],r8
 100d795:	mov    DWORD PTR [rsp+0x10],edx
 100d799:	mov    QWORD PTR [rsp+0x8],rcx
 100d79e:	push   rbp
 100d79f:	mov    rbp,rsp
 100d7a2:	push   rdi
 100d7a3:	mov    eax,0x1018
 100d7a8:	call   0x1011fe0
 100d7ad:	sub    rsp,rax
 100d7b0:	mov    QWORD PTR [rsp+0xdd8],0xfffffffffffffffe
 100d7bc:	mov    rax,QWORD PTR [rip+0x7b9d]        # 0x1015360
 100d7c3:	xor    rax,rsp
 100d7c6:	mov    QWORD PTR [rbp-0x20],rax
 100d7ca:	mov    rax,QWORD PTR [rbp+0x10]
 100d7ce:	add    rax,0x8
 100d7d2:	mov    rcx,rax
 100d7d5:	call   0x100e850
 100d7da:	test   eax,eax
 100d7dc:	je     0x100d7e8
 100d7de:	mov    eax,0x1
 100d7e3:	jmp    0x100dda6
 100d7e8:	lea    rcx,[rsp+0x38]
 100d7ed:	call   0x1011470
 100d7f2:	nop
 100d7f3:	movzx  eax,WORD PTR [rip+0xffffffffffff3fc6]        # 0x10017c0
 100d7fa:	mov    WORD PTR [rsp+0xe00],ax
 100d802:	lea    rax,[rsp+0xe02]
 100d80a:	mov    rdi,rax
 100d80d:	xor    eax,eax
 100d80f:	mov    ecx,0x1fe
 100d814:	rep stos BYTE PTR es:[rdi],al
 100d816:	mov    DWORD PTR [rsp+0x30],0x0
 100d81e:	mov    DWORD PTR [rsp+0x5c],0x0
 100d826:	mov    DWORD PTR [rsp+0x48],0x0
 100d82e:	movzx  eax,WORD PTR [rip+0xffffffffffff3f8b]        # 0x10017c0
 100d835:	mov    WORD PTR [rsp+0x90],ax
 100d83d:	lea    rax,[rsp+0x92]
 100d845:	mov    rdi,rax
 100d848:	xor    eax,eax
 100d84a:	mov    ecx,0xfe
 100d84f:	rep stos BYTE PTR es:[rdi],al
 100d851:	mov    edx,0x64
 100d856:	mov    rcx,QWORD PTR [rbp+0x10]
 100d85a:	call   0x100e750
 100d85f:	mov    r8d,0x1000
 100d865:	lea    rdx,[rip+0xd624]        # 0x101ae90
 100d86c:	mov    ecx,0x4c
 100d871:	call   0x1008800
 100d876:	mov    eax,DWORD PTR [rip+0x7b30]        # 0x10153ac
 100d87c:	inc    eax
 100d87e:	mov    DWORD PTR [rip+0x7b28],eax        # 0x10153ac
 100d884:	mov    rax,QWORD PTR [rbp+0x10]
 100d888:	add    rax,0x10
 100d88c:	mov    QWORD PTR [rsp+0x20],rax
 100d891:	mov    r9d,DWORD PTR [rip+0x7b14]        # 0x10153ac
 100d898:	lea    r8,[rip+0xd5f1]        # 0x101ae90
 100d89f:	mov    edx,0x2710
 100d8a4:	lea    rcx,[rip+0x87c5]        # 0x1016070
 100d8ab:	call   QWORD PTR [rip+0xffffffffffff3947]        # 0x10011f8
 100d8b1:	lea    rcx,[rip+0x87b8]        # 0x1016070
 100d8b8:	call   0x1008f00
 100d8bd:	lea    rcx,[rsp+0xdb8]
 100d8c5:	call   0x10038c0
 100d8ca:	cmp    DWORD PTR [rbp+0x18],0x1
 100d8ce:	je     0x100d8d6
 100d8d0:	cmp    DWORD PTR [rbp+0x18],0x2
 100d8d4:	jne    0x100d8e5
 100d8d6:	mov    rax,QWORD PTR [rbp+0x10]
 100d8da:	movzx  eax,WORD PTR [rax+0x114]
 100d8e1:	test   eax,eax
 100d8e3:	jne    0x100d900
 100d8e5:	mov    DWORD PTR [rsp+0x68],0x0
 100d8ed:	lea    rcx,[rsp+0x38]
 100d8f2:	call   0x10114a0
 100d8f7:	mov    eax,DWORD PTR [rsp+0x68]
 100d8fb:	jmp    0x100dda6
 100d900:	lea    rcx,[rsp+0x38]
 100d905:	call   0x1011500
 100d90a:	mov    QWORD PTR [rsp+0x20],rax
 100d90f:	lea    r9,[rip+0xffffffffffff3b9a]        # 0x10014b0
 100d916:	mov    r8d,0x1
 100d91c:	xor    edx,edx
 100d91e:	lea    rcx,[rip+0xffffffffffff3b7b]        # 0x10014a0
 100d925:	call   QWORD PTR [rip+0xffffffffffff3aa5]        # 0x10013d0
 100d92b:	mov    DWORD PTR [rsp+0x5c],eax
 100d92f:	cmp    DWORD PTR [rsp+0x5c],0x0
 100d934:	jge    0x100d951
 100d936:	mov    DWORD PTR [rsp+0x64],0x0
 100d93e:	lea    rcx,[rsp+0x38]
 100d943:	call   0x10114a0
 100d948:	mov    eax,DWORD PTR [rsp+0x64]
 100d94c:	jmp    0x100dda6
 100d951:	lea    rcx,[rsp+0xdb8]
 100d959:	call   0x10038c0
 100d95e:	mov    eax,DWORD PTR [rip+0x7a2c]        # 0x1015390
 100d964:	mov    DWORD PTR [rsp+0x60],eax
 100d968:	cmp    DWORD PTR [rsp+0x60],0x1
 100d96d:	je     0x100d978
 100d96f:	cmp    DWORD PTR [rsp+0x60],0x2
 100d974:	je     0x100d9b9
 100d976:	jmp    0x100d9ef
 100d978:	lea    rcx,[rsp+0x38]
 100d97d:	call   0x1011520
 100d982:	mov    QWORD PTR [rsp+0xd90],rax
 100d98a:	mov    rax,QWORD PTR [rsp+0xd90]
 100d992:	mov    rax,QWORD PTR [rax]
 100d995:	mov    rdx,QWORD PTR [rbp+0x20]
 100d999:	mov    rcx,QWORD PTR [rsp+0xd90]
 100d9a1:	call   QWORD PTR [rax+0x88]
 100d9a7:	mov    ecx,eax
 100d9a9:	call   0x1006e20
 100d9ae:	test   eax,eax
 100d9b0:	je     0x100d9b7
 100d9b2:	jmp    0x100dd81
 100d9b7:	jmp    0x100d9ef
 100d9b9:	lea    rcx,[rsp+0x38]
 100d9be:	call   0x1011520
 100d9c3:	mov    QWORD PTR [rsp+0x78],rax
 100d9c8:	mov    rax,QWORD PTR [rsp+0x78]
 100d9cd:	mov    rax,QWORD PTR [rax]
 100d9d0:	mov    rdx,QWORD PTR [rbp+0x20]
 100d9d4:	mov    rcx,QWORD PTR [rsp+0x78]
 100d9d9:	call   QWORD PTR [rax+0x98]
 100d9df:	mov    ecx,eax
 100d9e1:	call   0x1006e20
 100d9e6:	test   eax,eax
 100d9e8:	je     0x100d9ef
 100d9ea:	jmp    0x100dd81
 100d9ef:	lea    rcx,[rsp+0x38]
 100d9f4:	call   0x1011520
 100d9f9:	mov    QWORD PTR [rsp+0xdb0],rax
 100da01:	mov    rax,QWORD PTR [rbp+0x10]
 100da05:	add    rax,0x10
 100da09:	mov    rcx,QWORD PTR [rsp+0xdb0]
 100da11:	mov    rcx,QWORD PTR [rcx]
 100da14:	mov    QWORD PTR [rsp+0xdc0],rcx
 100da1c:	mov    rdx,rax
 100da1f:	mov    rcx,QWORD PTR [rsp+0xdb0]
 100da27:	mov    rax,QWORD PTR [rsp+0xdc0]
 100da2f:	call   QWORD PTR [rax+0x68]
 100da32:	mov    ecx,eax
 100da34:	call   0x1006e20
 100da39:	test   eax,eax
 100da3b:	jne    0x100dc84
 100da41:	cmp    DWORD PTR [rbp+0x18],0x1
 100da45:	jne    0x100da51
 100da47:	mov    DWORD PTR [rsp+0x54],0x0
 100da4f:	jmp    0x100da59
 100da51:	mov    DWORD PTR [rsp+0x54],0x2
 100da59:	lea    rcx,[rsp+0x38]
 100da5e:	call   0x1011520
 100da63:	mov    QWORD PTR [rsp+0xda0],rax
 100da6b:	mov    rax,QWORD PTR [rsp+0xda0]
 100da73:	mov    rax,QWORD PTR [rax]
 100da76:	mov    edx,DWORD PTR [rsp+0x54]
 100da7a:	mov    rcx,QWORD PTR [rsp+0xda0]
 100da82:	call   QWORD PTR [rax+0xd8]
 100da88:	mov    ecx,eax
 100da8a:	call   0x1006e20
 100da8f:	test   eax,eax
 100da91:	jne    0x100dc84
 100da97:	mov    QWORD PTR [rsp+0x40],0x0
 100daa0:	mov    rax,QWORD PTR [rbp+0x10]
 100daa4:	add    rax,0x10
 100daa8:	mov    r8d,0x200
 100daae:	lea    rdx,[rsp+0x190]
 100dab6:	mov    rcx,rax
 100dab9:	call   0x1008be0
 100dabe:	lea    rax,[rsp+0x190]
 100dac6:	mov    QWORD PTR [rsp+0x20],rax
 100dacb:	lea    r9,[rsp+0x190]
 100dad3:	lea    r8,[rip+0xffffffffffff4946]        # 0x1002420
 100dada:	mov    edx,0x800
 100dadf:	lea    rcx,[rsp+0x590]
 100dae7:	call   0x1003da0
 100daec:	lea    rcx,[rip+0x1282d]        # 0x1020320
 100daf3:	call   0x100f0e0
 100daf8:	mov    QWORD PTR [rsp+0x80],rax
 100db00:	mov    rax,QWORD PTR [rsp+0x80]
 100db08:	mov    rax,QWORD PTR [rax]
 100db0b:	xor    r9d,r9d
 100db0e:	lea    r8,[rsp+0x40]
 100db13:	lea    rdx,[rsp+0x590]
 100db1b:	mov    rcx,QWORD PTR [rsp+0x80]
 100db23:	call   QWORD PTR [rax+0x2e0]
 100db29:	mov    ecx,eax
 100db2b:	call   0x1006e20
 100db30:	test   eax,eax
 100db32:	jne    0x100dbd2
 100db38:	cmp    QWORD PTR [rsp+0x40],0x0
 100db3e:	je     0x100dbd2
 100db44:	mov    DWORD PTR [rsp+0x58],0x0
 100db4c:	mov    DWORD PTR [rsp+0x4c],0x0
 100db54:	mov    rax,QWORD PTR [rsp+0x40]
 100db59:	mov    rax,QWORD PTR [rax]
 100db5c:	lea    rdx,[rsp+0x58]
 100db61:	mov    rcx,QWORD PTR [rsp+0x40]
 100db66:	call   QWORD PTR [rax+0x58]
 100db69:	mov    ecx,eax
 100db6b:	call   0x1006e20
 100db70:	test   eax,eax
 100db72:	jne    0x100dbd2
 100db74:	cmp    DWORD PTR [rsp+0x58],0x0
 100db79:	jle    0x100dbd2
 100db7b:	mov    rax,QWORD PTR [rsp+0x40]
 100db80:	mov    rax,QWORD PTR [rax]
 100db83:	lea    r9,[rsp+0x4c]
 100db88:	xor    r8d,r8d
 100db8b:	xor    edx,edx
 100db8d:	mov    rcx,QWORD PTR [rsp+0x40]
 100db92:	call   QWORD PTR [rax+0x80]
 100db98:	mov    ecx,eax
 100db9a:	call   0x1006e20
 100db9f:	test   eax,eax
 100dba1:	jne    0x100dbd2
 100dba3:	lea    rcx,[rsp+0x38]
 100dba8:	call   0x1011520
 100dbad:	mov    QWORD PTR [rsp+0xd98],rax
 100dbb5:	mov    rax,QWORD PTR [rsp+0xd98]
 100dbbd:	mov    rax,QWORD PTR [rax]
 100dbc0:	mov    edx,DWORD PTR [rsp+0x4c]
 100dbc4:	mov    rcx,QWORD PTR [rsp+0xd98]
 100dbcc:	call   QWORD PTR [rax+0x158]
 100dbd2:	cmp    QWORD PTR [rsp+0x40],0x0
 100dbd8:	je     0x100dbf3
 100dbda:	mov    rax,QWORD PTR [rsp+0x40]
 100dbdf:	mov    rax,QWORD PTR [rax]
 100dbe2:	mov    rcx,QWORD PTR [rsp+0x40]
 100dbe7:	call   QWORD PTR [rax+0x10]
 100dbea:	mov    QWORD PTR [rsp+0x40],0x0
 100dbf3:	lea    rcx,[rsp+0x38]
 100dbf8:	call   0x10114e0
 100dbfd:	mov    rdx,rax
 100dc00:	lea    rcx,[rsp+0xde0]
 100dc08:	call   0x100eb30
 100dc0d:	nop
 100dc0e:	lea    rcx,[rsp+0x38]
 100dc13:	call   0x1011520
 100dc18:	mov    QWORD PTR [rsp+0xda8],rax
 100dc20:	lea    rcx,[rip+0x126f9]        # 0x1020320
 100dc27:	call   0x100f020
 100dc2c:	mov    rcx,QWORD PTR [rsp+0xda8]
 100dc34:	mov    rcx,QWORD PTR [rcx]
 100dc37:	mov    QWORD PTR [rsp+0xdd0],rcx
 100dc3f:	mov    rdx,rax
 100dc42:	mov    rcx,QWORD PTR [rsp+0xda8]
 100dc4a:	mov    rax,QWORD PTR [rsp+0xdd0]
 100dc52:	call   QWORD PTR [rax+0x190]
 100dc58:	mov    ecx,eax
 100dc5a:	call   0x1006e20
 100dc5f:	test   eax,eax
 100dc61:	je     0x100dc75
 100dc63:	lea    rcx,[rsp+0xde0]
 100dc6b:	call   0x100ec10
 100dc70:	jmp    0x100dd81
 100dc75:	lea    rcx,[rsp+0xde0]
 100dc7d:	call   0x100ec10
 100dc82:	jmp    0x100dc89
 100dc84:	jmp    0x100dd81
 100dc89:	mov    DWORD PTR [rsp+0x48],0x1
 100dc91:	lea    rcx,[rsp+0xdc8]
 100dc99:	call   0x10038c0
 100dc9e:	mov    rdx,QWORD PTR [rsp+0xdb8]
 100dca6:	mov    rcx,QWORD PTR [rsp+0xdc8]
 100dcae:	call   0x1003830
 100dcb3:	cvttsd2si eax,xmm0
 100dcb7:	mov    DWORD PTR [rsp+0x30],eax
 100dcbb:	mov    r8d,0x1000
 100dcc1:	lea    rdx,[rip+0xd1c8]        # 0x101ae90
 100dcc8:	mov    ecx,0x19
 100dccd:	call   0x1008800
 100dcd2:	mov    eax,DWORD PTR [rsp+0x30]
 100dcd6:	cdq    
 100dcd7:	mov    ecx,0x3c
 100dcdc:	idiv   ecx
 100dcde:	mov    eax,edx
 100dce0:	cmp    eax,0x1
 100dce3:	jle    0x100dcf9
 100dce5:	mov    eax,DWORD PTR [rsp+0x30]
 100dce9:	cdq    
 100dcea:	mov    ecx,0x3c
 100dcef:	idiv   ecx
 100dcf1:	mov    eax,edx
 100dcf3:	mov    DWORD PTR [rsp+0x50],eax
 100dcf7:	jmp    0x100dd01
 100dcf9:	mov    DWORD PTR [rsp+0x50],0x1
 100dd01:	mov    eax,DWORD PTR [rsp+0x30]
 100dd05:	cdq    
 100dd06:	mov    ecx,0xe10
 100dd0b:	idiv   ecx
 100dd0d:	mov    eax,edx
 100dd0f:	cdq    
 100dd10:	mov    ecx,0x3c
 100dd15:	idiv   ecx
 100dd17:	mov    DWORD PTR [rsp+0x70],eax
 100dd1b:	mov    eax,DWORD PTR [rsp+0x30]
 100dd1f:	cdq    
 100dd20:	mov    ecx,0xe10
 100dd25:	idiv   ecx
 100dd27:	mov    ecx,DWORD PTR [rsp+0x50]
 100dd2b:	mov    DWORD PTR [rsp+0x28],ecx
 100dd2f:	mov    ecx,DWORD PTR [rsp+0x70]
 100dd33:	mov    DWORD PTR [rsp+0x20],ecx
 100dd37:	mov    r9d,eax
 100dd3a:	lea    r8,[rip+0xd14f]        # 0x101ae90
 100dd41:	mov    edx,0x100
 100dd46:	lea    rcx,[rsp+0xe00]
 100dd4e:	call   QWORD PTR [rip+0xffffffffffff34a4]        # 0x10011f8
 100dd54:	lea    r9,[rsp+0xe00]
 100dd5c:	lea    r8,[rip+0xffffffffffff414d]        # 0x1001eb0
 100dd63:	mov    edx,0x2710
 100dd68:	lea    rcx,[rip+0x8301]        # 0x1016070
 100dd6f:	call   QWORD PTR [rip+0xffffffffffff3483]        # 0x10011f8
 100dd75:	lea    rcx,[rip+0x82f4]        # 0x1016070
 100dd7c:	call   0x1008f00
 100dd81:	mov    eax,DWORD PTR [rsp+0x48]
 100dd85:	mov    DWORD PTR [rip+0x11b79],eax        # 0x101f904
 100dd8b:	call   0x10082e0
 100dd90:	mov    eax,DWORD PTR [rsp+0x48]
 100dd94:	mov    DWORD PTR [rsp+0x6c],eax
 100dd98:	lea    rcx,[rsp+0x38]
 100dd9d:	call   0x10114a0
 100dda2:	mov    eax,DWORD PTR [rsp+0x6c]
 100dda6:	mov    rcx,QWORD PTR [rbp-0x20]
 100ddaa:	xor    rcx,rsp
 100ddad:	call   0x1012040
 100ddb2:	add    rsp,0x1018
 100ddb9:	pop    rdi
 100ddba:	pop    rbp
 100ddbb:	ret    
 100ddbc:	int3   
 100ddbd:	int3   
 100ddbe:	int3   
 100ddbf:	int3   
 100ddc0:	int3   
 100ddc1:	int3   
 100ddc2:	int3   
 100ddc3:	int3   
 100ddc4:	int3   
 100ddc5:	int3   
 100ddc6:	int3   
 100ddc7:	int3   
 100ddc8:	int3   
 100ddc9:	int3   
 100ddca:	int3   
 100ddcb:	int3   
 100ddcc:	int3   
 100ddcd:	int3   
 100ddce:	int3   
 100ddcf:	int3   
 100ddd0:	mov    DWORD PTR [rsp+0x20],r9d
 100ddd5:	mov    DWORD PTR [rsp+0x18],r8d
 100ddda:	mov    QWORD PTR [rsp+0x10],rdx
 100dddf:	mov    QWORD PTR [rsp+0x8],rcx
 100dde4:	push   rbp
 100dde5:	mov    rbp,rsp
 100dde8:	sub    rsp,0x70
 100ddec:	mov    rax,QWORD PTR [rip+0x756d]        # 0x1015360
 100ddf3:	xor    rax,rsp
 100ddf6:	mov    QWORD PTR [rsp+0x68],rax
 100ddfb:	mov    rax,QWORD PTR [rbp+0x10]
 100ddff:	add    rax,0x8
 100de03:	mov    rcx,rax
 100de06:	call   0x100e850
 100de0b:	test   eax,eax
 100de0d:	je     0x100de19
 100de0f:	mov    eax,0x1
 100de14:	jmp    0x100dfdf
 100de19:	cmp    DWORD PTR [rbp+0x28],0x1
 100de1d:	je     0x100de25
 100de1f:	cmp    DWORD PTR [rbp+0x28],0x2
 100de23:	jne    0x100de31
 100de25:	mov    rax,QWORD PTR [rbp+0x10]
 100de29:	movzx  eax,WORD PTR [rax+0x10]
 100de2d:	test   eax,eax
 100de2f:	jne    0x100de38
 100de31:	xor    eax,eax
 100de33:	jmp    0x100dfdf
 100de38:	lea    rcx,[rsp+0x58]
 100de3d:	call   QWORD PTR [rip+0xffffffffffff321d]        # 0x1001060
 100de43:	cmp    DWORD PTR [rbp+0x28],0x1
 100de47:	jne    0x100de9f
 100de49:	movzx  eax,WORD PTR [rsp+0x62]
 100de4e:	movzx  ecx,WORD PTR [rsp+0x60]
 100de53:	movzx  edx,WORD PTR [rsp+0x5e]
 100de58:	movzx  r8d,WORD PTR [rsp+0x5a]
 100de5e:	movzx  r9d,WORD PTR [rsp+0x58]
 100de64:	mov    r10,QWORD PTR [rbp+0x10]
 100de68:	add    r10,0x10
 100de6c:	movsxd r11,DWORD PTR [rbp+0x20]
 100de70:	mov    DWORD PTR [rsp+0x40],eax
 100de74:	mov    DWORD PTR [rsp+0x38],ecx
 100de78:	mov    DWORD PTR [rsp+0x30],edx
 100de7c:	mov    DWORD PTR [rsp+0x28],r8d
 100de81:	mov    DWORD PTR [rsp+0x20],r9d
 100de86:	mov    r9,r10
 100de89:	lea    r8,[rip+0xffffffffffff4440]        # 0x10022d0
 100de90:	mov    rdx,r11
 100de93:	mov    rcx,QWORD PTR [rbp+0x18]
 100de97:	call   QWORD PTR [rip+0xffffffffffff335b]        # 0x10011f8
 100de9d:	jmp    0x100def3
 100de9f:	movzx  eax,WORD PTR [rsp+0x62]
 100dea4:	movzx  ecx,WORD PTR [rsp+0x60]
 100dea9:	movzx  edx,WORD PTR [rsp+0x5e]
 100deae:	movzx  r8d,WORD PTR [rsp+0x5a]
 100deb4:	movzx  r9d,WORD PTR [rsp+0x58]
 100deba:	mov    r10,QWORD PTR [rbp+0x10]
 100debe:	add    r10,0x10
 100dec2:	movsxd r11,DWORD PTR [rbp+0x20]
 100dec6:	mov    DWORD PTR [rsp+0x40],eax
 100deca:	mov    DWORD PTR [rsp+0x38],ecx
 100dece:	mov    DWORD PTR [rsp+0x30],edx
 100ded2:	mov    DWORD PTR [rsp+0x28],r8d
 100ded7:	mov    DWORD PTR [rsp+0x20],r9d
 100dedc:	mov    r9,r10
 100dedf:	lea    r8,[rip+0xffffffffffff443a]        # 0x1002320
 100dee6:	mov    rdx,r11
 100dee9:	mov    rcx,QWORD PTR [rbp+0x18]
 100deed:	call   QWORD PTR [rip+0xffffffffffff3305]        # 0x10011f8
 100def3:	movsxd rax,DWORD PTR [rbp+0x20]
 100def7:	lea    r8,[rip+0x7202]        # 0x1015100
 100defe:	mov    rdx,rax
 100df01:	mov    rcx,QWORD PTR [rbp+0x18]
 100df05:	call   QWORD PTR [rip+0xffffffffffff3405]        # 0x1001310
 100df0b:	mov    DWORD PTR [rsp+0x50],0x0
 100df13:	jmp    0x100df1f
 100df15:	mov    eax,DWORD PTR [rsp+0x50]
 100df19:	inc    eax
 100df1b:	mov    DWORD PTR [rsp+0x50],eax
 100df1f:	mov    rcx,QWORD PTR [rbp+0x18]
 100df23:	call   QWORD PTR [rip+0xffffffffffff3407]        # 0x1001330
 100df29:	cmp    DWORD PTR [rsp+0x50],eax
 100df2d:	jge    0x100dfda
 100df33:	movsxd rax,DWORD PTR [rsp+0x50]
 100df38:	mov    rcx,QWORD PTR [rbp+0x18]
 100df3c:	movzx  eax,WORD PTR [rcx+rax*2]
 100df40:	cmp    eax,0x22
 100df43:	je     0x100dfc3
 100df45:	movsxd rax,DWORD PTR [rsp+0x50]
 100df4a:	mov    rcx,QWORD PTR [rbp+0x18]
 100df4e:	movzx  eax,WORD PTR [rcx+rax*2]
 100df52:	cmp    eax,0x27
 100df55:	je     0x100dfc3
 100df57:	movsxd rax,DWORD PTR [rsp+0x50]
 100df5c:	mov    rcx,QWORD PTR [rbp+0x18]
 100df60:	movzx  eax,WORD PTR [rcx+rax*2]
 100df64:	cmp    eax,0x3a
 100df67:	je     0x100dfc3
 100df69:	movsxd rax,DWORD PTR [rsp+0x50]
 100df6e:	mov    rcx,QWORD PTR [rbp+0x18]
 100df72:	movzx  eax,WORD PTR [rcx+rax*2]
 100df76:	cmp    eax,0x3f
 100df79:	je     0x100dfc3
 100df7b:	movsxd rax,DWORD PTR [rsp+0x50]
 100df80:	mov    rcx,QWORD PTR [rbp+0x18]
 100df84:	movzx  eax,WORD PTR [rcx+rax*2]
 100df88:	cmp    eax,0x2a
 100df8b:	je     0x100dfc3
 100df8d:	movsxd rax,DWORD PTR [rsp+0x50]
 100df92:	mov    rcx,QWORD PTR [rbp+0x18]
 100df96:	movzx  eax,WORD PTR [rcx+rax*2]
 100df9a:	cmp    eax,0x3e
 100df9d:	je     0x100dfc3
 100df9f:	movsxd rax,DWORD PTR [rsp+0x50]
 100dfa4:	mov    rcx,QWORD PTR [rbp+0x18]
 100dfa8:	movzx  eax,WORD PTR [rcx+rax*2]
 100dfac:	cmp    eax,0x3c
 100dfaf:	je     0x100dfc3
 100dfb1:	movsxd rax,DWORD PTR [rsp+0x50]
 100dfb6:	mov    rcx,QWORD PTR [rbp+0x18]
 100dfba:	movzx  eax,WORD PTR [rcx+rax*2]
 100dfbe:	cmp    eax,0x7c
 100dfc1:	jne    0x100dfd5
 100dfc3:	movsxd rax,DWORD PTR [rsp+0x50]
 100dfc8:	mov    ecx,0x20
 100dfcd:	mov    rdx,QWORD PTR [rbp+0x18]
 100dfd1:	mov    WORD PTR [rdx+rax*2],cx
 100dfd5:	jmp    0x100df15
 100dfda:	mov    eax,0x1
 100dfdf:	mov    rcx,QWORD PTR [rsp+0x68]
 100dfe4:	xor    rcx,rsp
 100dfe7:	call   0x1012040
 100dfec:	add    rsp,0x70
 100dff0:	pop    rbp
 100dff1:	ret    
 100dff2:	int3   
 100dff3:	int3   
 100dff4:	int3   
 100dff5:	int3   
 100dff6:	int3   
 100dff7:	int3   
 100dff8:	int3   
 100dff9:	int3   
 100dffa:	int3   
 100dffb:	int3   
 100dffc:	int3   
 100dffd:	int3   
 100dffe:	int3   
 100dfff:	int3   
 100e000:	mov    QWORD PTR [rsp+0x8],rcx
 100e005:	push   rbp
 100e006:	mov    rbp,rsp
 100e009:	push   rdi
 100e00a:	sub    rsp,0x6e8
 100e011:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
 100e01a:	mov    rax,QWORD PTR [rip+0x733f]        # 0x1015360
 100e021:	xor    rax,rsp
 100e024:	mov    QWORD PTR [rbp-0x20],rax
 100e028:	movzx  eax,WORD PTR [rip+0xffffffffffff3791]        # 0x10017c0
 100e02f:	mov    WORD PTR [rsp+0x2d0],ax
 100e037:	lea    rax,[rsp+0x2d2]
 100e03f:	mov    rdi,rax
 100e042:	xor    eax,eax
 100e044:	mov    ecx,0x3fe
 100e049:	rep stos BYTE PTR es:[rdi],al
 100e04b:	lea    rcx,[rsp+0x38]
 100e050:	call   0x10112f0
 100e055:	nop
 100e056:	mov    DWORD PTR [rsp+0x40],0x0
 100e05e:	mov    DWORD PTR [rsp+0x34],0x0
 100e066:	mov    rax,QWORD PTR [rbp+0x10]
 100e06a:	add    rax,0x10
 100e06e:	mov    r8d,0x12c
 100e074:	lea    rdx,[rsp+0x70]
 100e079:	mov    rcx,rax
 100e07c:	call   0x1008be0
 100e081:	test   eax,eax
 100e083:	jne    0x100e094
 100e085:	lea    rcx,[rsp+0x38]
 100e08a:	call   0x1011320
 100e08f:	jmp    0x100e1ff
 100e094:	lea    r9,[rsp+0x70]
 100e099:	lea    r8,[rip+0xffffffffffff42d0]        # 0x1002370
 100e0a0:	mov    edx,0x200
 100e0a5:	lea    rcx,[rsp+0x2d0]
 100e0ad:	call   QWORD PTR [rip+0xffffffffffff3145]        # 0x10011f8
 100e0b3:	lea    rcx,[rip+0x12266]        # 0x1020320
 100e0ba:	call   0x100f0e0
 100e0bf:	mov    QWORD PTR [rsp+0x50],rax
 100e0c4:	lea    rcx,[rsp+0x38]
 100e0c9:	call   0x10113a0
 100e0ce:	mov    rcx,QWORD PTR [rsp+0x50]
 100e0d3:	mov    rcx,QWORD PTR [rcx]
 100e0d6:	mov    QWORD PTR [rsp+0x60],rcx
 100e0db:	xor    r9d,r9d
 100e0de:	mov    r8,rax
 100e0e1:	lea    rdx,[rsp+0x2d0]
 100e0e9:	mov    rcx,QWORD PTR [rsp+0x50]
 100e0ee:	mov    rax,QWORD PTR [rsp+0x60]
 100e0f3:	call   QWORD PTR [rax+0x2e0]
 100e0f9:	mov    ecx,eax
 100e0fb:	call   0x1006e20
 100e100:	test   eax,eax
 100e102:	jne    0x100e19e
 100e108:	lea    rcx,[rsp+0x38]
 100e10d:	call   0x1011360
 100e112:	test   eax,eax
 100e114:	je     0x100e19e
 100e11a:	lea    rcx,[rsp+0x38]
 100e11f:	call   0x1011400
 100e124:	mov    QWORD PTR [rsp+0x48],rax
 100e129:	mov    rax,QWORD PTR [rsp+0x48]
 100e12e:	mov    rax,QWORD PTR [rax]
 100e131:	lea    rdx,[rsp+0x40]
 100e136:	mov    rcx,QWORD PTR [rsp+0x48]
 100e13b:	call   QWORD PTR [rax+0x58]
 100e13e:	mov    ecx,eax
 100e140:	call   0x1006e20
 100e145:	test   eax,eax
 100e147:	jne    0x100e19e
 100e149:	mov    DWORD PTR [rsp+0x30],0x0
 100e151:	jmp    0x100e15d
 100e153:	mov    eax,DWORD PTR [rsp+0x30]
 100e157:	inc    eax
 100e159:	mov    DWORD PTR [rsp+0x30],eax
 100e15d:	mov    eax,DWORD PTR [rsp+0x40]
 100e161:	cmp    DWORD PTR [rsp+0x30],eax
 100e165:	jge    0x100e19e
 100e167:	lea    rcx,[rsp+0x38]
 100e16c:	call   0x1011400
 100e171:	mov    QWORD PTR [rsp+0x58],rax
 100e176:	mov    rax,QWORD PTR [rsp+0x58]
 100e17b:	mov    rax,QWORD PTR [rax]
 100e17e:	lea    r9,[rsp+0x34]
 100e183:	xor    r8d,r8d
 100e186:	mov    edx,DWORD PTR [rsp+0x30]
 100e18a:	mov    rcx,QWORD PTR [rsp+0x58]
 100e18f:	call   QWORD PTR [rax+0x80]
 100e195:	mov    ecx,eax
 100e197:	call   0x1006e20
 100e19c:	jmp    0x100e153
 100e19e:	cmp    DWORD PTR [rsp+0x34],0x0
 100e1a3:	jle    0x100e1f5
 100e1a5:	mov    r8d,0x1000
 100e1ab:	lea    rdx,[rip+0xccde]        # 0x101ae90
 100e1b2:	mov    ecx,0x34
 100e1b7:	call   0x1008800
 100e1bc:	mov    rax,QWORD PTR [rbp+0x10]
 100e1c0:	add    rax,0x10
 100e1c4:	mov    ecx,DWORD PTR [rsp+0x34]
 100e1c8:	mov    DWORD PTR [rsp+0x20],ecx
 100e1cc:	mov    r9,rax
 100e1cf:	lea    r8,[rip+0xccba]        # 0x101ae90
 100e1d6:	mov    edx,0x2710
 100e1db:	lea    rcx,[rip+0x7e8e]        # 0x1016070
 100e1e2:	call   QWORD PTR [rip+0xffffffffffff3010]        # 0x10011f8
 100e1e8:	lea    rcx,[rip+0x7e81]        # 0x1016070
 100e1ef:	call   0x1008f00
 100e1f4:	nop
 100e1f5:	lea    rcx,[rsp+0x38]
 100e1fa:	call   0x1011320
 100e1ff:	mov    rcx,QWORD PTR [rbp-0x20]
 100e203:	xor    rcx,rsp
 100e206:	call   0x1012040
 100e20b:	add    rsp,0x6e8
 100e212:	pop    rdi
 100e213:	pop    rbp
 100e214:	ret    
 100e215:	int3   
 100e216:	int3   
 100e217:	int3   
 100e218:	int3   
 100e219:	int3   
 100e21a:	int3   
 100e21b:	int3   
 100e21c:	int3   
 100e21d:	int3   
 100e21e:	int3   
 100e21f:	int3   
 100e220:	mov    QWORD PTR [rsp+0x8],rcx
 100e225:	push   rbp
 100e226:	mov    rbp,rsp
 100e229:	mov    eax,0x20c0
 100e22e:	call   0x1011fe0
 100e233:	sub    rsp,rax
 100e236:	mov    QWORD PTR [rsp+0x18a0],0xfffffffffffffffe
 100e242:	mov    rax,QWORD PTR [rip+0x7117]        # 0x1015360
 100e249:	xor    rax,rsp
 100e24c:	mov    QWORD PTR [rbp-0x10],rax
 100e250:	mov    rax,QWORD PTR [rbp+0x10]
 100e254:	add    rax,0x8
 100e258:	mov    rcx,rax
 100e25b:	call   0x100e850
 100e260:	test   eax,eax
 100e262:	jne    0x100e273
 100e264:	mov    rax,QWORD PTR [rbp+0x10]
 100e268:	movzx  eax,WORD PTR [rax+0x114]
 100e26f:	test   eax,eax
 100e271:	je     0x100e278
 100e273:	jmp    0x100e731
 100e278:	mov    rax,QWORD PTR [rbp+0x10]
 100e27c:	add    rax,0x114
 100e282:	mov    r8d,0x800
 100e288:	xor    edx,edx
 100e28a:	mov    rcx,rax
 100e28d:	call   0x1011e78
 100e292:	mov    r8d,0x800
 100e298:	xor    edx,edx
 100e29a:	lea    rcx,[rsp+0x18b0]
 100e2a2:	call   0x1011e78
 100e2a7:	cmp    DWORD PTR [rip+0xfd16],0x0        # 0x101dfc4
 100e2ae:	jne    0x100e2dd
 100e2b0:	cmp    DWORD PTR [rip+0xfd11],0x0        # 0x101dfc8
 100e2b7:	jne    0x100e2dd
 100e2b9:	mov    rax,QWORD PTR [rbp+0x10]
 100e2bd:	add    rax,0x114
 100e2c3:	lea    r8,[rip+0x7346]        # 0x1015610
 100e2ca:	mov    edx,0x400
 100e2cf:	mov    rcx,rax
 100e2d2:	call   QWORD PTR [rip+0xffffffffffff3050]        # 0x1001328
 100e2d8:	jmp    0x100e731
 100e2dd:	cmp    DWORD PTR [rip+0xfce4],0x0        # 0x101dfc8
 100e2e4:	je     0x100e4d2
 100e2ea:	movzx  eax,WORD PTR [rip+0x1006f]        # 0x101e360
 100e2f1:	test   eax,eax
 100e2f3:	jne    0x100e4b1
 100e2f9:	lea    rcx,[rsp+0x58]
 100e2fe:	call   0x10038f0
 100e303:	nop
 100e304:	lea    rcx,[rsp+0x80]
 100e30c:	call   0x10112f0
 100e311:	nop
 100e312:	lea    rcx,[rsp+0x68]
 100e317:	call   0x1011540
 100e31c:	nop
 100e31d:	mov    QWORD PTR [rsp+0x48],0x0
 100e326:	lea    rcx,[rip+0x11ff3]        # 0x1020320
 100e32d:	call   0x100f0e0
 100e332:	mov    QWORD PTR [rsp+0x78],rax
 100e337:	lea    rcx,[rsp+0x68]
 100e33c:	call   0x1011610
 100e341:	mov    rcx,QWORD PTR [rsp+0x78]
 100e346:	mov    rcx,QWORD PTR [rcx]
 100e349:	mov    QWORD PTR [rsp+0x1890],rcx
 100e351:	mov    rdx,rax
 100e354:	mov    rcx,QWORD PTR [rsp+0x78]
 100e359:	mov    rax,QWORD PTR [rsp+0x1890]
 100e361:	call   QWORD PTR [rax+0x1a0]
 100e367:	mov    ecx,eax
 100e369:	call   0x1006e20
 100e36e:	test   eax,eax
 100e370:	jne    0x100e3d4
 100e372:	lea    rcx,[rsp+0x68]
 100e377:	call   0x10115b0
 100e37c:	lea    rdx,[rsp+0x48]
 100e381:	mov    rcx,rax
 100e384:	call   0x100f150
 100e389:	test   eax,eax
 100e38b:	jl     0x100e3d4
 100e38d:	lea    rcx,[rsp+0x58]
 100e392:	call   0x10039d0
 100e397:	mov    rcx,QWORD PTR [rsp+0x48]
 100e39c:	mov    rcx,QWORD PTR [rcx]
 100e39f:	mov    QWORD PTR [rsp+0x1898],rcx
 100e3a7:	mov    rdx,rax
 100e3aa:	mov    rcx,QWORD PTR [rsp+0x48]
 100e3af:	mov    rax,QWORD PTR [rsp+0x1898]
 100e3b7:	call   QWORD PTR [rax+0x148]
 100e3bd:	test   eax,eax
 100e3bf:	jl     0x100e3d4
 100e3c1:	lea    rcx,[rsp+0x58]
 100e3c6:	call   0x1003990
 100e3cb:	test   rax,rax
 100e3ce:	jne    0x100e45e
 100e3d4:	mov    r8d,0x1000
 100e3da:	lea    rdx,[rip+0xcaaf]        # 0x101ae90
 100e3e1:	mov    ecx,0x57
 100e3e6:	call   0x1008800
 100e3eb:	mov    rax,QWORD PTR [rbp+0x10]
 100e3ef:	add    rax,0x10
 100e3f3:	mov    r9,rax
 100e3f6:	lea    r8,[rip+0xca93]        # 0x101ae90
 100e3fd:	mov    edx,0x400
 100e402:	lea    rcx,[rsp+0x90]
 100e40a:	call   QWORD PTR [rip+0xffffffffffff2de8]        # 0x10011f8
 100e410:	lea    rcx,[rsp+0x90]
 100e418:	call   0x1008f00
 100e41d:	cmp    QWORD PTR [rsp+0x48],0x0
 100e423:	je     0x100e436
 100e425:	mov    rax,QWORD PTR [rsp+0x48]
 100e42a:	mov    rax,QWORD PTR [rax]
 100e42d:	mov    rcx,QWORD PTR [rsp+0x48]
 100e432:	call   QWORD PTR [rax+0x10]
 100e435:	nop
 100e436:	lea    rcx,[rsp+0x68]
 100e43b:	call   0x1011570
 100e440:	nop
 100e441:	lea    rcx,[rsp+0x80]
 100e449:	call   0x1011320
 100e44e:	nop
 100e44f:	lea    rcx,[rsp+0x58]
 100e454:	call   0x1003920
 100e459:	jmp    0x100e731
 100e45e:	lea    rcx,[rsp+0x58]
 100e463:	call   0x10039b0
 100e468:	mov    r8,rax
 100e46b:	mov    edx,0x12c
 100e470:	lea    rcx,[rip+0xfee9]        # 0x101e360
 100e477:	call   QWORD PTR [rip+0xffffffffffff2eab]        # 0x1001328
 100e47d:	mov    rax,QWORD PTR [rsp+0x48]
 100e482:	mov    rax,QWORD PTR [rax]
 100e485:	mov    rcx,QWORD PTR [rsp+0x48]
 100e48a:	call   QWORD PTR [rax+0x10]
 100e48d:	nop
 100e48e:	lea    rcx,[rsp+0x68]
 100e493:	call   0x1011570
 100e498:	nop
 100e499:	lea    rcx,[rsp+0x80]
 100e4a1:	call   0x1011320
 100e4a6:	nop
 100e4a7:	lea    rcx,[rsp+0x58]
 100e4ac:	call   0x1003920
 100e4b1:	mov    rax,QWORD PTR [rbp+0x10]
 100e4b5:	add    rax,0x114
 100e4bb:	lea    r8,[rip+0xfe9e]        # 0x101e360
 100e4c2:	mov    edx,0x400
 100e4c7:	mov    rcx,rax
 100e4ca:	call   QWORD PTR [rip+0xffffffffffff2e58]        # 0x1001328
 100e4d0:	jmp    0x100e4f1
 100e4d2:	mov    rax,QWORD PTR [rbp+0x10]
 100e4d6:	add    rax,0x114
 100e4dc:	lea    r8,[rip+0x712d]        # 0x1015610
 100e4e3:	mov    edx,0x400
 100e4e8:	mov    rcx,rax
 100e4eb:	call   QWORD PTR [rip+0xffffffffffff2e37]        # 0x1001328
 100e4f1:	cmp    DWORD PTR [rip+0xfacc],0x0        # 0x101dfc4
 100e4f8:	jne    0x100e4ff
 100e4fa:	jmp    0x100e731
 100e4ff:	mov    rax,QWORD PTR [rbp+0x10]
 100e503:	add    rax,0x114
 100e509:	mov    rcx,rax
 100e50c:	call   QWORD PTR [rip+0xffffffffffff2e1e]        # 0x1001330
 100e512:	mov    QWORD PTR [rsp+0x40],rax
 100e517:	mov    rax,QWORD PTR [rbp+0x10]
 100e51b:	add    rax,0x10
 100e51f:	mov    rcx,rax
 100e522:	call   QWORD PTR [rip+0xffffffffffff2e08]        # 0x1001330
 100e528:	mov    QWORD PTR [rsp+0x70],rax
 100e52d:	mov    rax,QWORD PTR [rbp+0x10]
 100e531:	mov    rcx,QWORD PTR [rsp+0x40]
 100e536:	movzx  eax,WORD PTR [rax+rcx*2+0x112]
 100e53e:	cmp    eax,0x5c
 100e541:	je     0x100e579
 100e543:	mov    eax,0x5c
 100e548:	mov    rcx,QWORD PTR [rbp+0x10]
 100e54c:	mov    rdx,QWORD PTR [rsp+0x40]
 100e551:	mov    WORD PTR [rcx+rdx*2+0x114],ax
 100e559:	mov    rax,QWORD PTR [rsp+0x40]
 100e55e:	inc    rax
 100e561:	mov    QWORD PTR [rsp+0x40],rax
 100e566:	xor    eax,eax
 100e568:	mov    rcx,QWORD PTR [rbp+0x10]
 100e56c:	mov    rdx,QWORD PTR [rsp+0x40]
 100e571:	mov    WORD PTR [rcx+rdx*2+0x114],ax
 100e579:	mov    rax,QWORD PTR [rsp+0x70]
 100e57e:	mov    rcx,QWORD PTR [rsp+0x40]
 100e583:	add    rcx,rax
 100e586:	mov    rax,rcx
 100e589:	cmp    rax,0x400
 100e58f:	jb     0x100e596
 100e591:	jmp    0x100e731
 100e596:	mov    QWORD PTR [rsp+0x50],0x0
 100e59f:	jmp    0x100e5ae
 100e5a1:	mov    rax,QWORD PTR [rsp+0x50]
 100e5a6:	inc    rax
 100e5a9:	mov    QWORD PTR [rsp+0x50],rax
 100e5ae:	mov    rax,QWORD PTR [rsp+0x70]
 100e5b3:	cmp    QWORD PTR [rsp+0x50],rax
 100e5b8:	jae    0x100e61b
 100e5ba:	mov    rax,QWORD PTR [rsp+0x50]
 100e5bf:	mov    rcx,QWORD PTR [rsp+0x40]
 100e5c4:	add    rcx,rax
 100e5c7:	mov    rax,rcx
 100e5ca:	mov    rcx,QWORD PTR [rbp+0x10]
 100e5ce:	mov    rdx,QWORD PTR [rbp+0x10]
 100e5d2:	mov    r8,QWORD PTR [rsp+0x50]
 100e5d7:	movzx  edx,WORD PTR [rdx+r8*2+0x10]
 100e5dd:	mov    WORD PTR [rcx+rax*2+0x114],dx
 100e5e5:	mov    rax,QWORD PTR [rbp+0x10]
 100e5e9:	mov    rcx,QWORD PTR [rsp+0x50]
 100e5ee:	movzx  eax,WORD PTR [rax+rcx*2+0x10]
 100e5f3:	cmp    eax,0x22
 100e5f6:	jne    0x100e619
 100e5f8:	mov    rax,QWORD PTR [rsp+0x50]
 100e5fd:	mov    rcx,QWORD PTR [rsp+0x40]
 100e602:	add    rcx,rax
 100e605:	mov    rax,rcx
 100e608:	mov    ecx,0x71
 100e60d:	mov    rdx,QWORD PTR [rbp+0x10]
 100e611:	mov    WORD PTR [rdx+rax*2+0x114],cx
 100e619:	jmp    0x100e5a1
 100e61b:	mov    rax,QWORD PTR [rsp+0x70]
 100e620:	mov    rcx,QWORD PTR [rsp+0x40]
 100e625:	add    rcx,rax
 100e628:	mov    rax,rcx
 100e62b:	xor    ecx,ecx
 100e62d:	mov    rdx,QWORD PTR [rbp+0x10]
 100e631:	mov    WORD PTR [rdx+rax*2+0x114],cx
 100e639:	mov    r8d,0x800
 100e63f:	xor    edx,edx
 100e641:	lea    rcx,[rsp+0x18b0]
 100e649:	call   0x1011e78
 100e64e:	mov    rax,QWORD PTR [rbp+0x10]
 100e652:	add    rax,0x114
 100e658:	mov    QWORD PTR [rsp+0x38],0x0
 100e661:	mov    QWORD PTR [rsp+0x30],0x0
 100e66a:	mov    DWORD PTR [rsp+0x28],0x800
 100e672:	lea    rcx,[rsp+0x18b0]
 100e67a:	mov    QWORD PTR [rsp+0x20],rcx
 100e67f:	mov    r9d,0xffffffff
 100e685:	mov    r8,rax
 100e688:	xor    edx,edx
 100e68a:	mov    ecx,0x1
 100e68f:	call   QWORD PTR [rip+0xffffffffffff2a4b]        # 0x10010e0
 100e695:	mov    rax,QWORD PTR [rbp+0x10]
 100e699:	add    rax,0x114
 100e69f:	mov    rcx,rax
 100e6a2:	call   0x100a880
 100e6a7:	mov    DWORD PTR [rsp+0x60],eax
 100e6ab:	cmp    DWORD PTR [rsp+0x60],0xffffffff
 100e6b0:	je     0x100e6bf
 100e6b2:	mov    eax,DWORD PTR [rsp+0x60]
 100e6b6:	and    eax,0x10
 100e6b9:	test   eax,eax
 100e6bb:	je     0x100e6bf
 100e6bd:	jmp    0x100e731
 100e6bf:	xor    edx,edx
 100e6c1:	lea    rcx,[rsp+0x18b0]
 100e6c9:	call   QWORD PTR [rip+0xffffffffffff29d9]        # 0x10010a8
 100e6cf:	test   eax,eax
 100e6d1:	jne    0x100e731
 100e6d3:	mov    r8d,0x400
 100e6d9:	lea    rdx,[rsp+0x890]
 100e6e1:	mov    ecx,0x58
 100e6e6:	call   0x1008800
 100e6eb:	mov    rax,QWORD PTR [rbp+0x10]
 100e6ef:	add    rax,0x10
 100e6f3:	mov    r9,rax
 100e6f6:	lea    r8,[rsp+0x890]
 100e6fe:	mov    edx,0x400
 100e703:	lea    rcx,[rsp+0x1090]
 100e70b:	call   QWORD PTR [rip+0xffffffffffff2ae7]        # 0x10011f8
 100e711:	lea    rcx,[rsp+0x1090]
 100e719:	call   0x1008f00
 100e71e:	xor    eax,eax
 100e720:	mov    rcx,QWORD PTR [rbp+0x10]
 100e724:	mov    rdx,QWORD PTR [rsp+0x40]
 100e729:	mov    WORD PTR [rcx+rdx*2+0x114],ax
 100e731:	mov    rcx,QWORD PTR [rbp-0x10]
 100e735:	xor    rcx,rsp
 100e738:	call   0x1012040
 100e73d:	add    rsp,0x20c0
 100e744:	pop    rbp
 100e745:	ret    
 100e746:	int3   
 100e747:	int3   
 100e748:	int3   
 100e749:	int3   
 100e74a:	int3   
 100e74b:	int3   
 100e74c:	int3   
 100e74d:	int3   
 100e74e:	int3   
 100e74f:	int3   
 100e750:	mov    DWORD PTR [rsp+0x10],edx
 100e754:	mov    QWORD PTR [rsp+0x8],rcx
 100e759:	push   rbp
 100e75a:	mov    rbp,rsp
 100e75d:	sub    rsp,0x20
 100e761:	mov    rax,QWORD PTR [rsp+0x30]
 100e766:	add    rax,0x10
 100e76a:	mov    r8,rax
 100e76d:	mov    edx,0x82
 100e772:	lea    rcx,[rip+0x10087]        # 0x101e800
 100e779:	call   QWORD PTR [rip+0xffffffffffff2ba9]        # 0x1001328
 100e77f:	xor    eax,eax
 100e781:	mov    WORD PTR [rip+0x1017c],ax        # 0x101e904
 100e788:	mov    DWORD PTR [rip+0x11172],0x1        # 0x101f904
 100e792:	lea    rcx,[rip+0x1116f]        # 0x101f908
 100e799:	call   0x10038c0
 100e79e:	mov    eax,DWORD PTR [rsp+0x38]
 100e7a2:	mov    DWORD PTR [rip+0x11168],eax        # 0x101f910
 100e7a8:	mov    DWORD PTR [rip+0x11162],0x0        # 0x101f914
 100e7b2:	add    rsp,0x20
 100e7b6:	pop    rbp
 100e7b7:	ret    
 100e7b8:	int3   
 100e7b9:	int3   
 100e7ba:	int3   
 100e7bb:	int3   
 100e7bc:	int3   
 100e7bd:	int3   
 100e7be:	int3   
 100e7bf:	int3   
 100e7c0:	mov    QWORD PTR [rsp+0x8],rcx
 100e7c5:	push   rbp
 100e7c6:	mov    rbp,rsp
 100e7c9:	mov    rax,QWORD PTR [rsp+0x10]
 100e7ce:	mov    QWORD PTR [rax],0x0
 100e7d5:	mov    rax,QWORD PTR [rsp+0x10]
 100e7da:	pop    rbp
 100e7db:	ret    
 100e7dc:	int3   
 100e7dd:	int3   
 100e7de:	int3   
 100e7df:	int3   
 100e7e0:	int3   
 100e7e1:	int3   
 100e7e2:	int3   
 100e7e3:	int3   
 100e7e4:	int3   
 100e7e5:	int3   
 100e7e6:	int3   
 100e7e7:	int3   
 100e7e8:	int3   
 100e7e9:	int3   
 100e7ea:	int3   
 100e7eb:	int3   
 100e7ec:	int3   
 100e7ed:	int3   
 100e7ee:	int3   
 100e7ef:	int3   
 100e7f0:	mov    QWORD PTR [rsp+0x8],rcx
 100e7f5:	push   rbp
 100e7f6:	mov    rbp,rsp
 100e7f9:	sub    rsp,0x20
 100e7fd:	mov    rax,QWORD PTR [rsp+0x30]
 100e802:	cmp    QWORD PTR [rax],0x0
 100e806:	je     0x100e81e
 100e808:	mov    rax,QWORD PTR [rsp+0x30]
 100e80d:	mov    rax,QWORD PTR [rax]
 100e810:	mov    rcx,QWORD PTR [rsp+0x30]
 100e815:	mov    rcx,QWORD PTR [rcx]
 100e818:	mov    rax,QWORD PTR [rax]
 100e81b:	call   QWORD PTR [rax+0x10]
 100e81e:	add    rsp,0x20
 100e822:	pop    rbp
 100e823:	ret    
 100e824:	int3   
 100e825:	int3   
 100e826:	int3   
 100e827:	int3   
 100e828:	int3   
 100e829:	int3   
 100e82a:	int3   
 100e82b:	int3   
 100e82c:	int3   
 100e82d:	int3   
 100e82e:	int3   
 100e82f:	int3   
 100e830:	mov    QWORD PTR [rsp+0x8],rcx
 100e835:	push   rbp
 100e836:	mov    rbp,rsp
 100e839:	mov    rax,QWORD PTR [rsp+0x10]
 100e83e:	pop    rbp
 100e83f:	ret    
 100e840:	int3   
 100e841:	int3   
 100e842:	int3   
 100e843:	int3   
 100e844:	int3   
 100e845:	int3   
 100e846:	int3   
 100e847:	int3   
 100e848:	int3   
 100e849:	int3   
 100e84a:	int3   
 100e84b:	int3   
 100e84c:	int3   
 100e84d:	int3   
 100e84e:	int3   
 100e84f:	int3   
 100e850:	mov    QWORD PTR [rsp+0x8],rcx
 100e855:	push   rbp
 100e856:	mov    rbp,rsp
 100e859:	sub    rsp,0x10
 100e85d:	mov    rax,QWORD PTR [rsp+0x20]
 100e862:	cmp    QWORD PTR [rax],0x0
 100e866:	je     0x100e871
 100e868:	mov    DWORD PTR [rsp],0x0
 100e86f:	jmp    0x100e878
 100e871:	mov    DWORD PTR [rsp],0x1
 100e878:	mov    eax,DWORD PTR [rsp]
 100e87b:	add    rsp,0x10
 100e87f:	pop    rbp
 100e880:	ret    
 100e881:	int3   
 100e882:	int3   
 100e883:	int3   
 100e884:	int3   
 100e885:	int3   
 100e886:	int3   
 100e887:	int3   
 100e888:	int3   
 100e889:	int3   
 100e88a:	int3   
 100e88b:	int3   
 100e88c:	int3   
 100e88d:	int3   
 100e88e:	int3   
 100e88f:	int3   
 100e890:	mov    QWORD PTR [rsp+0x8],rcx
 100e895:	push   rbp
 100e896:	mov    rbp,rsp
 100e899:	mov    rax,QWORD PTR [rsp+0x10]
 100e89e:	mov    rax,QWORD PTR [rax]
 100e8a1:	pop    rbp
 100e8a2:	ret    
 100e8a3:	int3   
 100e8a4:	int3   
 100e8a5:	int3   
 100e8a6:	int3   
 100e8a7:	int3   
 100e8a8:	int3   
 100e8a9:	int3   
 100e8aa:	int3   
 100e8ab:	int3   
 100e8ac:	int3   
 100e8ad:	int3   
 100e8ae:	int3   
 100e8af:	int3   
 100e8b0:	mov    QWORD PTR [rsp+0x8],rcx
 100e8b5:	push   rbp
 100e8b6:	mov    rbp,rsp
 100e8b9:	sub    rsp,0x20
 100e8bd:	mov    rax,QWORD PTR [rsp+0x30]
 100e8c2:	cmp    QWORD PTR [rax],0x0
 100e8c6:	je     0x100e8de
 100e8c8:	mov    rax,QWORD PTR [rsp+0x30]
 100e8cd:	mov    rax,QWORD PTR [rax]
 100e8d0:	mov    rcx,QWORD PTR [rsp+0x30]
 100e8d5:	mov    rcx,QWORD PTR [rcx]
 100e8d8:	mov    rax,QWORD PTR [rax]
 100e8db:	call   QWORD PTR [rax+0x10]
 100e8de:	mov    rax,QWORD PTR [rsp+0x30]
 100e8e3:	mov    QWORD PTR [rax],0x0
 100e8ea:	add    rsp,0x20
 100e8ee:	pop    rbp
 100e8ef:	ret    
 100e8f0:	int3   
 100e8f1:	int3   
 100e8f2:	int3   
 100e8f3:	int3   
 100e8f4:	int3   
 100e8f5:	int3   
 100e8f6:	int3   
 100e8f7:	int3   
 100e8f8:	int3   
 100e8f9:	int3   
 100e8fa:	int3   
 100e8fb:	int3   
 100e8fc:	int3   
 100e8fd:	int3   
 100e8fe:	int3   
 100e8ff:	int3   
 100e900:	mov    QWORD PTR [rsp+0x8],rcx
 100e905:	push   rbp
 100e906:	mov    rbp,rsp
 100e909:	sub    rsp,0x30
 100e90d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
 100e916:	mov    rax,QWORD PTR [rsp+0x40]
 100e91b:	add    rax,0x8
 100e91f:	mov    rcx,rax
 100e922:	call   0x100e7f0
 100e927:	add    rsp,0x30
 100e92b:	pop    rbp
 100e92c:	ret    
 100e92d:	int3   
 100e92e:	int3   
 100e92f:	int3   
 100e930:	int3   
 100e931:	int3   
 100e932:	int3   
 100e933:	int3   
 100e934:	int3   
 100e935:	int3   
 100e936:	int3   
 100e937:	int3   
 100e938:	int3   
 100e939:	int3   
 100e93a:	int3   
 100e93b:	int3   
 100e93c:	int3   
 100e93d:	int3   
 100e93e:	int3   
 100e93f:	int3   
 100e940:	mov    DWORD PTR [rsp+0x10],edx
 100e944:	mov    QWORD PTR [rsp+0x8],rcx
 100e949:	push   rbp
 100e94a:	mov    rbp,rsp
 100e94d:	sub    rsp,0x20
 100e951:	mov    eax,DWORD PTR [rsp+0x38]
 100e955:	and    eax,0x2
 100e958:	test   eax,eax
 100e95a:	je     0x100e9a2
 100e95c:	lea    r9,[rip+0xffffffffffffff9d]        # 0x100e900
 100e963:	mov    rax,QWORD PTR [rsp+0x30]
 100e968:	mov    r8d,DWORD PTR [rax-0x8]
 100e96c:	mov    edx,0xb78
 100e971:	mov    rcx,QWORD PTR [rsp+0x30]
 100e976:	call   0x1011bc8
 100e97b:	mov    eax,DWORD PTR [rsp+0x38]
 100e97f:	and    eax,0x1
 100e982:	test   eax,eax
 100e984:	je     0x100e997
 100e986:	mov    rax,QWORD PTR [rsp+0x30]
 100e98b:	sub    rax,0x8
 100e98f:	mov    rcx,rax
 100e992:	call   0x1011e90
 100e997:	mov    rax,QWORD PTR [rsp+0x30]
 100e99c:	sub    rax,0x8
 100e9a0:	jmp    0x100e9c6
 100e9a2:	mov    rcx,QWORD PTR [rsp+0x30]
 100e9a7:	call   0x100e900
 100e9ac:	mov    eax,DWORD PTR [rsp+0x38]
 100e9b0:	and    eax,0x1
 100e9b3:	test   eax,eax
 100e9b5:	je     0x100e9c1
 100e9b7:	mov    rcx,QWORD PTR [rsp+0x30]
 100e9bc:	call   0x1011c2c
 100e9c1:	mov    rax,QWORD PTR [rsp+0x30]
 100e9c6:	add    rsp,0x20
 100e9ca:	pop    rbp
 100e9cb:	ret    
 100e9cc:	int3   
 100e9cd:	int3   
 100e9ce:	int3   
 100e9cf:	int3   
 100e9d0:	int3   
 100e9d1:	int3   
 100e9d2:	int3   
 100e9d3:	int3   
 100e9d4:	int3   
 100e9d5:	int3   
 100e9d6:	int3   
 100e9d7:	int3   
 100e9d8:	int3   
 100e9d9:	int3   
 100e9da:	int3   
 100e9db:	int3   
 100e9dc:	int3   
 100e9dd:	int3   
 100e9de:	int3   
 100e9df:	int3   
 100e9e0:	mov    QWORD PTR [rsp+0x18],r8
 100e9e5:	mov    QWORD PTR [rsp+0x10],rdx
 100e9ea:	mov    QWORD PTR [rsp+0x8],rcx
 100e9ef:	push   rbp
 100e9f0:	mov    rbp,rsp
 100e9f3:	sub    rsp,0x20
 100e9f7:	lea    rdx,[rip+0xffffffffffff2a82]        # 0x1001480
 100e9fe:	mov    rcx,QWORD PTR [rsp+0x38]
 100ea03:	call   0x10037a0
 100ea08:	test   eax,eax
 100ea0a:	je     0x100ea1d
 100ea0c:	mov    rax,QWORD PTR [rsp+0x40]
 100ea11:	mov    rcx,QWORD PTR [rsp+0x30]
 100ea16:	mov    QWORD PTR [rax],rcx
 100ea19:	xor    eax,eax
 100ea1b:	jmp    0x100ea2e
 100ea1d:	mov    rax,QWORD PTR [rsp+0x40]
 100ea22:	mov    QWORD PTR [rax],0x0
 100ea29:	mov    eax,0x80004002
 100ea2e:	add    rsp,0x20
 100ea32:	pop    rbp
 100ea33:	ret    
 100ea34:	int3   
 100ea35:	int3   
 100ea36:	int3   
 100ea37:	int3   
 100ea38:	int3   
 100ea39:	int3   
 100ea3a:	int3   
 100ea3b:	int3   
 100ea3c:	int3   
 100ea3d:	int3   
 100ea3e:	int3   
 100ea3f:	int3   
 100ea40:	mov    QWORD PTR [rsp+0x8],rcx
 100ea45:	push   rbp
 100ea46:	mov    rbp,rsp
 100ea49:	mov    eax,0x1
 100ea4e:	pop    rbp
 100ea4f:	ret    
 100ea50:	int3   
 100ea51:	int3   
 100ea52:	int3   
 100ea53:	int3   
 100ea54:	int3   
 100ea55:	int3   
 100ea56:	int3   
 100ea57:	int3   
 100ea58:	int3   
 100ea59:	int3   
 100ea5a:	int3   
 100ea5b:	int3   
 100ea5c:	int3   
 100ea5d:	int3   
 100ea5e:	int3   
 100ea5f:	int3   
 100ea60:	mov    QWORD PTR [rsp+0x8],rcx
 100ea65:	push   rbp
 100ea66:	mov    rbp,rsp
 100ea69:	mov    eax,0x1
 100ea6e:	pop    rbp
 100ea6f:	ret    
 100ea70:	int3   
 100ea71:	int3   
 100ea72:	int3   
 100ea73:	int3   
 100ea74:	int3   
 100ea75:	int3   
 100ea76:	int3   
 100ea77:	int3   
 100ea78:	int3   
 100ea79:	int3   
 100ea7a:	int3   
 100ea7b:	int3   
 100ea7c:	int3   
 100ea7d:	int3   
 100ea7e:	int3   
 100ea7f:	int3   
 100ea80:	mov    DWORD PTR [rsp+0x18],r8d
 100ea85:	mov    QWORD PTR [rsp+0x10],rdx
 100ea8a:	mov    QWORD PTR [rsp+0x8],rcx
 100ea8f:	push   rbp
 100ea90:	mov    rbp,rsp
 100ea93:	xor    eax,eax
 100ea95:	pop    rbp
 100ea96:	ret    
 100ea97:	int3   
 100ea98:	int3   
 100ea99:	int3   
 100ea9a:	int3   
 100ea9b:	int3   
 100ea9c:	int3   
 100ea9d:	int3   
 100ea9e:	int3   
 100ea9f:	int3   
 100eaa0:	mov    QWORD PTR [rsp+0x10],rdx
 100eaa5:	mov    QWORD PTR [rsp+0x8],rcx
 100eaaa:	push   rbp
 100eaab:	mov    rbp,rsp
 100eaae:	sub    rsp,0x20
 100eab2:	mov    rax,QWORD PTR [rsp+0x30]
 100eab7:	cmp    QWORD PTR [rax+0x10],0x0
 100eabc:	je     0x100ead9
 100eabe:	mov    rax,QWORD PTR [rsp+0x30]
 100eac3:	mov    rax,QWORD PTR [rax+0x10]
 100eac7:	mov    rcx,QWORD PTR [rsp+0x30]
 100eacc:	mov    rcx,QWORD PTR [rcx+0x10]
 100ead0:	mov    rax,QWORD PTR [rax]
 100ead3:	call   QWORD PTR [rax+0x1a0]
 100ead9:	mov    rax,QWORD PTR [rsp+0x30]
 100eade:	cmp    QWORD PTR [rax+0x8],0x0
 100eae3:	je     0x100eb00
 100eae5:	mov    rax,QWORD PTR [rsp+0x30]
 100eaea:	mov    rax,QWORD PTR [rax+0x8]
 100eaee:	mov    rcx,QWORD PTR [rsp+0x30]
 100eaf3:	mov    rcx,QWORD PTR [rcx+0x8]
 100eaf7:	mov    rax,QWORD PTR [rax]
 100eafa:	call   QWORD PTR [rax+0x180]
 100eb00:	xor    eax,eax
 100eb02:	add    rsp,0x20
 100eb06:	pop    rbp
 100eb07:	ret    
 100eb08:	int3   
 100eb09:	int3   
 100eb0a:	int3   
 100eb0b:	int3   
 100eb0c:	int3   
 100eb0d:	int3   
 100eb0e:	int3   
 100eb0f:	int3   
 100eb10:	mov    QWORD PTR [rsp+0x10],rdx
 100eb15:	mov    QWORD PTR [rsp+0x8],rcx
 100eb1a:	push   rbp
 100eb1b:	mov    rbp,rsp
 100eb1e:	xor    eax,eax
 100eb20:	pop    rbp
 100eb21:	ret    
 100eb22:	int3   
 100eb23:	int3   
 100eb24:	int3   
 100eb25:	int3   
 100eb26:	int3   
 100eb27:	int3   
 100eb28:	int3   
 100eb29:	int3   
 100eb2a:	int3   
 100eb2b:	int3   
 100eb2c:	int3   
 100eb2d:	int3   
 100eb2e:	int3   
 100eb2f:	int3   
 100eb30:	mov    QWORD PTR [rsp+0x10],rdx
 100eb35:	mov    QWORD PTR [rsp+0x8],rcx
 100eb3a:	push   rbp
 100eb3b:	mov    rbp,rsp
 100eb3e:	sub    rsp,0x20
 100eb42:	mov    rcx,QWORD PTR [rsp+0x30]
 100eb47:	call   0x10039f0
 100eb4c:	mov    rax,QWORD PTR [rsp+0x30]
 100eb51:	lea    rcx,[rip+0xffffffffffff2c70]        # 0x10017c8
 100eb58:	mov    QWORD PTR [rax],rcx
 100eb5b:	mov    rax,QWORD PTR [rsp+0x30]
 100eb60:	mov    rcx,QWORD PTR [rsp+0x38]
 100eb65:	mov    QWORD PTR [rax+0x8],rcx
 100eb69:	mov    rax,QWORD PTR [rsp+0x30]
 100eb6e:	mov    QWORD PTR [rax+0x10],0x0
 100eb76:	mov    rax,QWORD PTR [rsp+0x30]
 100eb7b:	mov    DWORD PTR [rax+0x18],0x0
 100eb82:	mov    rcx,QWORD PTR [rsp+0x30]
 100eb87:	call   0x100ec50
 100eb8c:	mov    rax,QWORD PTR [rsp+0x30]
 100eb91:	add    rsp,0x20
 100eb95:	pop    rbp
 100eb96:	ret    
 100eb97:	int3   
 100eb98:	int3   
 100eb99:	int3   
 100eb9a:	int3   
 100eb9b:	int3   
 100eb9c:	int3   
 100eb9d:	int3   
 100eb9e:	int3   
 100eb9f:	int3   
 100eba0:	mov    QWORD PTR [rsp+0x10],rdx
 100eba5:	mov    QWORD PTR [rsp+0x8],rcx
 100ebaa:	push   rbp
 100ebab:	mov    rbp,rsp
 100ebae:	sub    rsp,0x20
 100ebb2:	mov    rcx,QWORD PTR [rsp+0x30]
 100ebb7:	call   0x10039f0
 100ebbc:	mov    rax,QWORD PTR [rsp+0x30]
 100ebc1:	lea    rcx,[rip+0xffffffffffff2c00]        # 0x10017c8
 100ebc8:	mov    QWORD PTR [rax],rcx
 100ebcb:	mov    rax,QWORD PTR [rsp+0x30]
 100ebd0:	mov    QWORD PTR [rax+0x8],0x0
 100ebd8:	mov    rax,QWORD PTR [rsp+0x30]
 100ebdd:	mov    rcx,QWORD PTR [rsp+0x38]
 100ebe2:	mov    QWORD PTR [rax+0x10],rcx
 100ebe6:	mov    rax,QWORD PTR [rsp+0x30]
 100ebeb:	mov    DWORD PTR [rax+0x18],0x0
 100ebf2:	mov    rcx,QWORD PTR [rsp+0x30]
 100ebf7:	call   0x100ec50
 100ebfc:	mov    rax,QWORD PTR [rsp+0x30]
 100ec01:	add    rsp,0x20
 100ec05:	pop    rbp
 100ec06:	ret    
 100ec07:	int3   
 100ec08:	int3   
 100ec09:	int3   
 100ec0a:	int3   
 100ec0b:	int3   
 100ec0c:	int3   
 100ec0d:	int3   
 100ec0e:	int3   
 100ec0f:	int3   
 100ec10:	mov    QWORD PTR [rsp+0x8],rcx
 100ec15:	push   rbp
 100ec16:	mov    rbp,rsp
 100ec19:	sub    rsp,0x20
 100ec1d:	mov    rax,QWORD PTR [rsp+0x30]
 100ec22:	lea    rcx,[rip+0xffffffffffff2b9f]        # 0x10017c8
 100ec29:	mov    QWORD PTR [rax],rcx
 100ec2c:	mov    rcx,QWORD PTR [rsp+0x30]
 100ec31:	call   0x100ee00
 100ec36:	add    rsp,0x20
 100ec3a:	pop    rbp
 100ec3b:	ret    
 100ec3c:	int3   
 100ec3d:	int3   
 100ec3e:	int3   
 100ec3f:	int3   
 100ec40:	int3   
 100ec41:	int3   
 100ec42:	int3   
 100ec43:	int3   
 100ec44:	int3   
 100ec45:	int3   
 100ec46:	int3   
 100ec47:	int3   
 100ec48:	int3   
 100ec49:	int3   
 100ec4a:	int3   
 100ec4b:	int3   
 100ec4c:	int3   
 100ec4d:	int3   
 100ec4e:	int3   
 100ec4f:	int3   
 100ec50:	mov    QWORD PTR [rsp+0x8],rcx
 100ec55:	push   rbp
 100ec56:	mov    rbp,rsp
 100ec59:	sub    rsp,0x90
 100ec60:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
 100ec68:	mov    rax,QWORD PTR [rbp+0x10]
 100ec6c:	cmp    QWORD PTR [rax+0x10],0x0
 100ec71:	je     0x100ec82
 100ec73:	mov    rax,QWORD PTR [rbp+0x10]
 100ec77:	mov    rax,QWORD PTR [rax+0x10]
 100ec7b:	mov    QWORD PTR [rsp+0x48],rax
 100ec80:	jmp    0x100ec8f
 100ec82:	mov    rax,QWORD PTR [rbp+0x10]
 100ec86:	mov    rax,QWORD PTR [rax+0x8]
 100ec8a:	mov    QWORD PTR [rsp+0x48],rax
 100ec8f:	mov    rax,QWORD PTR [rsp+0x48]
 100ec94:	mov    QWORD PTR [rsp+0x30],rax
 100ec99:	mov    DWORD PTR [rsp+0x68],0x0
 100eca1:	lea    rcx,[rsp+0x28]
 100eca6:	call   0x1011650
 100ecab:	nop
 100ecac:	lea    rcx,[rsp+0x20]
 100ecb1:	call   0x1011740
 100ecb6:	nop
 100ecb7:	cmp    QWORD PTR [rsp+0x30],0x0
 100ecbd:	je     0x100edc2
 100ecc3:	lea    rcx,[rsp+0x28]
 100ecc8:	call   0x1011700
 100eccd:	mov    rcx,QWORD PTR [rsp+0x30]
 100ecd2:	mov    rcx,QWORD PTR [rcx]
 100ecd5:	mov    QWORD PTR [rsp+0x58],rcx
 100ecda:	mov    r8,rax
 100ecdd:	lea    rdx,[rip+0xffffffffffff4984]        # 0x1003668
 100ece4:	mov    rcx,QWORD PTR [rsp+0x30]
 100ece9:	mov    rax,QWORD PTR [rsp+0x58]
 100ecee:	call   QWORD PTR [rax]
 100ecf0:	test   eax,eax
 100ecf2:	jl     0x100edc2
 100ecf8:	lea    rcx,[rsp+0x28]
 100ecfd:	call   0x10116c0
 100ed02:	test   eax,eax
 100ed04:	je     0x100edc2
 100ed0a:	mov    rax,QWORD PTR [rbp+0x10]
 100ed0e:	cmp    QWORD PTR [rax+0x10],0x0
 100ed13:	je     0x100ed23
 100ed15:	lea    rax,[rip+0xffffffffffff2764]        # 0x1001480
 100ed1c:	mov    QWORD PTR [rsp+0x40],rax
 100ed21:	jmp    0x100ed2f
 100ed23:	lea    rax,[rip+0xffffffffffff2796]        # 0x10014c0
 100ed2a:	mov    QWORD PTR [rsp+0x40],rax
 100ed2f:	mov    rax,QWORD PTR [rsp+0x40]
 100ed34:	mov    QWORD PTR [rsp+0x78],rax
 100ed39:	lea    rcx,[rsp+0x28]
 100ed3e:	call   0x1011720
 100ed43:	mov    QWORD PTR [rsp+0x38],rax
 100ed48:	lea    rcx,[rsp+0x20]
 100ed4d:	call   0x10117f0
 100ed52:	mov    rcx,QWORD PTR [rsp+0x38]
 100ed57:	mov    rcx,QWORD PTR [rcx]
 100ed5a:	mov    QWORD PTR [rsp+0x60],rcx
 100ed5f:	mov    r8,rax
 100ed62:	mov    rdx,QWORD PTR [rsp+0x78]
 100ed67:	mov    rcx,QWORD PTR [rsp+0x38]
 100ed6c:	mov    rax,QWORD PTR [rsp+0x60]
 100ed71:	call   QWORD PTR [rax+0x20]
 100ed74:	test   eax,eax
 100ed76:	jl     0x100edc2
 100ed78:	lea    rcx,[rsp+0x20]
 100ed7d:	call   0x10117b0
 100ed82:	test   eax,eax
 100ed84:	je     0x100edc2
 100ed86:	lea    rcx,[rsp+0x20]
 100ed8b:	call   0x1011810
 100ed90:	mov    QWORD PTR [rsp+0x50],rax
 100ed95:	mov    rax,QWORD PTR [rbp+0x10]
 100ed99:	add    rax,0x18
 100ed9d:	mov    rcx,QWORD PTR [rsp+0x50]
 100eda2:	mov    rcx,QWORD PTR [rcx]
 100eda5:	mov    QWORD PTR [rsp+0x70],rcx
 100edaa:	mov    r8,rax
 100edad:	mov    rdx,QWORD PTR [rbp+0x10]
 100edb1:	mov    rcx,QWORD PTR [rsp+0x50]
 100edb6:	mov    rax,QWORD PTR [rsp+0x70]
 100edbb:	call   QWORD PTR [rax+0x28]
 100edbe:	test   eax,eax
 100edc0:	jge    0x100edcd
 100edc2:	mov    rax,QWORD PTR [rbp+0x10]
 100edc6:	mov    DWORD PTR [rax+0x18],0x0
 100edcd:	lea    rcx,[rsp+0x20]
 100edd2:	call   0x1011770
 100edd7:	nop
 100edd8:	lea    rcx,[rsp+0x28]
 100eddd:	call   0x1011680
 100ede2:	add    rsp,0x90
 100ede9:	pop    rbp
 100edea:	ret    
 100edeb:	int3   
 100edec:	int3   
 100eded:	int3   
 100edee:	int3   
 100edef:	int3   
 100edf0:	int3   
 100edf1:	int3   
 100edf2:	int3   
 100edf3:	int3   
 100edf4:	int3   
 100edf5:	int3   
 100edf6:	int3   
 100edf7:	int3   
 100edf8:	int3   
 100edf9:	int3   
 100edfa:	int3   
 100edfb:	int3   
 100edfc:	int3   
 100edfd:	int3   
 100edfe:	int3   
 100edff:	int3   
 100ee00:	mov    QWORD PTR [rsp+0x8],rcx
 100ee05:	push   rbp
 100ee06:	mov    rbp,rsp
 100ee09:	sub    rsp,0x80
 100ee10:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
 100ee19:	mov    rax,QWORD PTR [rbp+0x10]
 100ee1d:	cmp    QWORD PTR [rax+0x10],0x0
 100ee22:	je     0x100ee33
 100ee24:	mov    rax,QWORD PTR [rbp+0x10]
 100ee28:	mov    rax,QWORD PTR [rax+0x10]
 100ee2c:	mov    QWORD PTR [rsp+0x40],rax
 100ee31:	jmp    0x100ee40
 100ee33:	mov    rax,QWORD PTR [rbp+0x10]
 100ee37:	mov    rax,QWORD PTR [rax+0x8]
 100ee3b:	mov    QWORD PTR [rsp+0x40],rax
 100ee40:	mov    rax,QWORD PTR [rsp+0x40]
 100ee45:	mov    QWORD PTR [rsp+0x30],rax
 100ee4a:	lea    rcx,[rsp+0x20]
 100ee4f:	call   0x1011650
 100ee54:	nop
 100ee55:	lea    rcx,[rsp+0x28]
 100ee5a:	call   0x1011740
 100ee5f:	nop
 100ee60:	mov    rax,QWORD PTR [rbp+0x10]
 100ee64:	cmp    DWORD PTR [rax+0x18],0x0
 100ee68:	je     0x100ef39
 100ee6e:	cmp    QWORD PTR [rsp+0x30],0x0
 100ee74:	je     0x100ef39
 100ee7a:	lea    rcx,[rsp+0x20]
 100ee7f:	call   0x1011700
 100ee84:	mov    rcx,QWORD PTR [rsp+0x30]
 100ee89:	mov    rcx,QWORD PTR [rcx]
 100ee8c:	mov    QWORD PTR [rsp+0x58],rcx
 100ee91:	mov    r8,rax
 100ee94:	lea    rdx,[rip+0xffffffffffff47cd]        # 0x1003668
 100ee9b:	mov    rcx,QWORD PTR [rsp+0x30]
 100eea0:	mov    rax,QWORD PTR [rsp+0x58]
 100eea5:	call   QWORD PTR [rax]
 100eea7:	test   eax,eax
 100eea9:	jl     0x100ef39
 100eeaf:	lea    rcx,[rsp+0x20]
 100eeb4:	call   0x10116c0
 100eeb9:	test   eax,eax
 100eebb:	je     0x100ef39
 100eebd:	mov    rax,QWORD PTR [rbp+0x10]
 100eec1:	cmp    QWORD PTR [rax+0x10],0x0
 100eec6:	je     0x100eed6
 100eec8:	lea    rax,[rip+0xffffffffffff25b1]        # 0x1001480
 100eecf:	mov    QWORD PTR [rsp+0x48],rax
 100eed4:	jmp    0x100eee2
 100eed6:	lea    rax,[rip+0xffffffffffff25e3]        # 0x10014c0
 100eedd:	mov    QWORD PTR [rsp+0x48],rax
 100eee2:	mov    rax,QWORD PTR [rsp+0x48]
 100eee7:	mov    QWORD PTR [rsp+0x68],rax
 100eeec:	lea    rcx,[rsp+0x20]
 100eef1:	call   0x1011720
 100eef6:	mov    QWORD PTR [rsp+0x38],rax
 100eefb:	lea    rcx,[rsp+0x28]
 100ef00:	call   0x10117f0
 100ef05:	mov    rcx,QWORD PTR [rsp+0x38]
 100ef0a:	mov    rcx,QWORD PTR [rcx]
 100ef0d:	mov    QWORD PTR [rsp+0x60],rcx
 100ef12:	mov    r8,rax
 100ef15:	mov    rdx,QWORD PTR [rsp+0x68]
 100ef1a:	mov    rcx,QWORD PTR [rsp+0x38]
 100ef1f:	mov    rax,QWORD PTR [rsp+0x60]
 100ef24:	call   QWORD PTR [rax+0x20]
 100ef27:	test   eax,eax
 100ef29:	jl     0x100ef39
 100ef2b:	lea    rcx,[rsp+0x28]
 100ef30:	call   0x10117b0
 100ef35:	test   eax,eax
 100ef37:	jne    0x100ef50
 100ef39:	lea    rcx,[rsp+0x28]
 100ef3e:	call   0x1011770
 100ef43:	nop
 100ef44:	lea    rcx,[rsp+0x20]
 100ef49:	call   0x1011680
 100ef4e:	jmp    0x100ef96
 100ef50:	lea    rcx,[rsp+0x28]
 100ef55:	call   0x1011810
 100ef5a:	mov    QWORD PTR [rsp+0x50],rax
 100ef5f:	mov    rax,QWORD PTR [rsp+0x50]
 100ef64:	mov    rax,QWORD PTR [rax]
 100ef67:	mov    rcx,QWORD PTR [rbp+0x10]
 100ef6b:	mov    edx,DWORD PTR [rcx+0x18]
 100ef6e:	mov    rcx,QWORD PTR [rsp+0x50]
 100ef73:	call   QWORD PTR [rax+0x30]
 100ef76:	mov    rax,QWORD PTR [rbp+0x10]
 100ef7a:	mov    DWORD PTR [rax+0x18],0x0
 100ef81:	lea    rcx,[rsp+0x28]
 100ef86:	call   0x1011770
 100ef8b:	nop
 100ef8c:	lea    rcx,[rsp+0x20]
 100ef91:	call   0x1011680
 100ef96:	add    rsp,0x80
 100ef9d:	pop    rbp
 100ef9e:	ret    
 100ef9f:	int3   
 100efa0:	int3   
 100efa1:	int3   
 100efa2:	int3   
 100efa3:	int3   
 100efa4:	int3   
 100efa5:	int3   
 100efa6:	int3   
 100efa7:	int3   
 100efa8:	int3   
 100efa9:	int3   
 100efaa:	int3   
 100efab:	int3   
 100efac:	int3   
 100efad:	int3   
 100efae:	int3   
 100efaf:	int3   
 100efb0:	mov    QWORD PTR [rsp+0x8],rcx
 100efb5:	push   rbp
 100efb6:	mov    rbp,rsp
 100efb9:	mov    rax,QWORD PTR [rsp+0x10]
 100efbe:	mov    QWORD PTR [rax],0x0
 100efc5:	mov    rax,QWORD PTR [rsp+0x10]
 100efca:	pop    rbp
 100efcb:	ret    
 100efcc:	int3   
 100efcd:	int3   
 100efce:	int3   
 100efcf:	int3   
 100efd0:	int3   
 100efd1:	int3   
 100efd2:	int3   
 100efd3:	int3   
 100efd4:	int3   
 100efd5:	int3   
 100efd6:	int3   
 100efd7:	int3   
 100efd8:	int3   
 100efd9:	int3   
 100efda:	int3   
 100efdb:	int3   
 100efdc:	int3   
 100efdd:	int3   
 100efde:	int3   
 100efdf:	int3   
 100efe0:	mov    QWORD PTR [rsp+0x8],rcx
 100efe5:	push   rbp
 100efe6:	mov    rbp,rsp
 100efe9:	sub    rsp,0x20
 100efed:	mov    rax,QWORD PTR [rsp+0x30]
 100eff2:	cmp    QWORD PTR [rax],0x0
 100eff6:	je     0x100f00e
 100eff8:	mov    rax,QWORD PTR [rsp+0x30]
 100effd:	mov    rax,QWORD PTR [rax]
 100f000:	mov    rcx,QWORD PTR [rsp+0x30]
 100f005:	mov    rcx,QWORD PTR [rcx]
 100f008:	mov    rax,QWORD PTR [rax]
 100f00b:	call   QWORD PTR [rax+0x10]
 100f00e:	add    rsp,0x20
 100f012:	pop    rbp
 100f013:	ret    
 100f014:	int3   
 100f015:	int3   
 100f016:	int3   
 100f017:	int3   
 100f018:	int3   
 100f019:	int3   
 100f01a:	int3   
 100f01b:	int3   
 100f01c:	int3   
 100f01d:	int3   
 100f01e:	int3   
 100f01f:	int3   
 100f020:	mov    QWORD PTR [rsp+0x8],rcx
 100f025:	push   rbp
 100f026:	mov    rbp,rsp
 100f029:	mov    rax,QWORD PTR [rsp+0x10]
 100f02e:	mov    rax,QWORD PTR [rax]
 100f031:	pop    rbp
 100f032:	ret    
 100f033:	int3   
 100f034:	int3   
 100f035:	int3   
 100f036:	int3   
 100f037:	int3   
 100f038:	int3   
 100f039:	int3   
 100f03a:	int3   
 100f03b:	int3   
 100f03c:	int3   
 100f03d:	int3   
 100f03e:	int3   
 100f03f:	int3   
 100f040:	mov    QWORD PTR [rsp+0x8],rcx
 100f045:	push   rbp
 100f046:	mov    rbp,rsp
 100f049:	sub    rsp,0x10
 100f04d:	mov    rax,QWORD PTR [rsp+0x20]
 100f052:	cmp    QWORD PTR [rax],0x0
 100f056:	je     0x100f061
 100f058:	mov    DWORD PTR [rsp],0x1
 100f05f:	jmp    0x100f068
 100f061:	mov    DWORD PTR [rsp],0x0
 100f068:	mov    eax,DWORD PTR [rsp]
 100f06b:	add    rsp,0x10
 100f06f:	pop    rbp
 100f070:	ret    
 100f071:	int3   
 100f072:	int3   
 100f073:	int3   
 100f074:	int3   
 100f075:	int3   
 100f076:	int3   
 100f077:	int3   
 100f078:	int3   
 100f079:	int3   
 100f07a:	int3   
 100f07b:	int3   
 100f07c:	int3   
 100f07d:	int3   
 100f07e:	int3   
 100f07f:	int3   
 100f080:	mov    QWORD PTR [rsp+0x8],rcx
 100f085:	push   rbp
 100f086:	mov    rbp,rsp
 100f089:	mov    rax,QWORD PTR [rsp+0x10]
 100f08e:	pop    rbp
 100f08f:	ret    
 100f090:	int3   
 100f091:	int3   
 100f092:	int3   
 100f093:	int3   
 100f094:	int3   
 100f095:	int3   
 100f096:	int3   
 100f097:	int3   
 100f098:	int3   
 100f099:	int3   
 100f09a:	int3   
 100f09b:	int3   
 100f09c:	int3   
 100f09d:	int3   
 100f09e:	int3   
 100f09f:	int3   
 100f0a0:	mov    QWORD PTR [rsp+0x8],rcx
 100f0a5:	push   rbp
 100f0a6:	mov    rbp,rsp
 100f0a9:	sub    rsp,0x10
 100f0ad:	mov    rax,QWORD PTR [rsp+0x20]
 100f0b2:	cmp    QWORD PTR [rax],0x0
 100f0b6:	je     0x100f0c1
 100f0b8:	mov    DWORD PTR [rsp],0x0
 100f0bf:	jmp    0x100f0c8
 100f0c1:	mov    DWORD PTR [rsp],0x1
 100f0c8:	mov    eax,DWORD PTR [rsp]
 100f0cb:	add    rsp,0x10
 100f0cf:	pop    rbp
 100f0d0:	ret    
 100f0d1:	int3   
 100f0d2:	int3   
 100f0d3:	int3   
 100f0d4:	int3   
 100f0d5:	int3   
 100f0d6:	int3   
 100f0d7:	int3   
 100f0d8:	int3   
 100f0d9:	int3   
 100f0da:	int3   
 100f0db:	int3   
 100f0dc:	int3   
 100f0dd:	int3   
 100f0de:	int3   
 100f0df:	int3   
 100f0e0:	mov    QWORD PTR [rsp+0x8],rcx
 100f0e5:	push   rbp
 100f0e6:	mov    rbp,rsp
 100f0e9:	mov    rax,QWORD PTR [rsp+0x10]
 100f0ee:	mov    rax,QWORD PTR [rax]
 100f0f1:	pop    rbp
 100f0f2:	ret    
 100f0f3:	int3   
 100f0f4:	int3   
 100f0f5:	int3   
 100f0f6:	int3   
 100f0f7:	int3   
 100f0f8:	int3   
 100f0f9:	int3   
 100f0fa:	int3   
 100f0fb:	int3   
 100f0fc:	int3   
 100f0fd:	int3   
 100f0fe:	int3   
 100f0ff:	int3   
 100f100:	mov    QWORD PTR [rsp+0x8],rcx
 100f105:	push   rbp
 100f106:	mov    rbp,rsp
 100f109:	sub    rsp,0x20
 100f10d:	mov    rax,QWORD PTR [rsp+0x30]
 100f112:	cmp    QWORD PTR [rax],0x0
 100f116:	je     0x100f12e
 100f118:	mov    rax,QWORD PTR [rsp+0x30]
 100f11d:	mov    rax,QWORD PTR [rax]
 100f120:	mov    rcx,QWORD PTR [rsp+0x30]
 100f125:	mov    rcx,QWORD PTR [rcx]
 100f128:	mov    rax,QWORD PTR [rax]
 100f12b:	call   QWORD PTR [rax+0x10]
 100f12e:	mov    rax,QWORD PTR [rsp+0x30]
 100f133:	mov    QWORD PTR [rax],0x0
 100f13a:	add    rsp,0x20
 100f13e:	pop    rbp
 100f13f:	ret    
 100f140:	int3   
 100f141:	int3   
 100f142:	int3   
 100f143:	int3   
 100f144:	int3   
 100f145:	int3   
 100f146:	int3   
 100f147:	int3   
 100f148:	int3   
 100f149:	int3   
 100f14a:	int3   
 100f14b:	int3   
 100f14c:	int3   
 100f14d:	int3   
 100f14e:	int3   
 100f14f:	int3   
 100f150:	mov    QWORD PTR [rsp+0x10],rdx
 100f155:	mov    QWORD PTR [rsp+0x8],rcx
 100f15a:	push   rbp
 100f15b:	mov    rbp,rsp
 100f15e:	sub    rsp,0x20
 100f162:	lea    r8,[rip+0xffffffffffff2327]        # 0x1001490
 100f169:	mov    rdx,QWORD PTR [rsp+0x38]
 100f16e:	mov    rcx,QWORD PTR [rsp+0x30]
 100f173:	call   0x100f190
 100f178:	add    rsp,0x20
 100f17c:	pop    rbp
 100f17d:	ret    
 100f17e:	int3   
 100f17f:	int3   
 100f180:	int3   
 100f181:	int3   
 100f182:	int3   
 100f183:	int3   
 100f184:	int3   
 100f185:	int3   
 100f186:	int3   
 100f187:	int3   
 100f188:	int3   
 100f189:	int3   
 100f18a:	int3   
 100f18b:	int3   
 100f18c:	int3   
 100f18d:	int3   
 100f18e:	int3   
 100f18f:	int3   
 100f190:	mov    QWORD PTR [rsp+0x18],r8
 100f195:	mov    QWORD PTR [rsp+0x10],rdx
 100f19a:	mov    QWORD PTR [rsp+0x8],rcx
 100f19f:	push   rbp
 100f1a0:	mov    rbp,rsp
 100f1a3:	sub    rsp,0x30
 100f1a7:	cmp    QWORD PTR [rsp+0x48],0x0
 100f1ad:	jne    0x100f1b6
 100f1af:	mov    eax,0x80004003
 100f1b4:	jmp    0x100f210
 100f1b6:	mov    rax,QWORD PTR [rsp+0x48]
 100f1bb:	mov    QWORD PTR [rax],0x0
 100f1c2:	cmp    QWORD PTR [rsp+0x40],0x0
 100f1c8:	jne    0x100f1d1
 100f1ca:	mov    eax,0x80004002
 100f1cf:	jmp    0x100f210
 100f1d1:	mov    rax,QWORD PTR [rsp+0x40]
 100f1d6:	mov    rax,QWORD PTR [rax]
 100f1d9:	mov    r8,QWORD PTR [rsp+0x48]
 100f1de:	mov    rdx,QWORD PTR [rsp+0x50]
 100f1e3:	mov    rcx,QWORD PTR [rsp+0x40]
 100f1e8:	call   QWORD PTR [rax]
 100f1ea:	mov    DWORD PTR [rsp+0x20],eax
 100f1ee:	cmp    DWORD PTR [rsp+0x20],0x0
 100f1f3:	jl     0x100f200
 100f1f5:	mov    rax,QWORD PTR [rsp+0x48]
 100f1fa:	cmp    QWORD PTR [rax],0x0
 100f1fe:	jne    0x100f20c
 100f200:	mov    rax,QWORD PTR [rsp+0x48]
 100f205:	mov    QWORD PTR [rax],0x0
 100f20c:	mov    eax,DWORD PTR [rsp+0x20]
 100f210:	add    rsp,0x30
 100f214:	pop    rbp
 100f215:	ret    
 100f216:	int3   
 100f217:	int3   
 100f218:	int3   
 100f219:	int3   
 100f21a:	int3   
 100f21b:	int3   
 100f21c:	int3   
 100f21d:	int3   
 100f21e:	int3   
 100f21f:	int3   
 100f220:	mov    WORD PTR [rsp+0x8],cx
 100f225:	push   rbp
 100f226:	mov    rbp,rsp
 100f229:	sub    rsp,0x10
 100f22d:	movzx  eax,WORD PTR [rsp+0x20]
 100f232:	cmp    eax,0x2f
 100f235:	je     0x100f24a
 100f237:	movzx  eax,WORD PTR [rsp+0x20]
 100f23c:	cmp    eax,0x5c
 100f23f:	je     0x100f24a
 100f241:	mov    DWORD PTR [rsp],0x0
 100f248:	jmp    0x100f251
 100f24a:	mov    DWORD PTR [rsp],0x1
 100f251:	mov    eax,DWORD PTR [rsp]
 100f254:	add    rsp,0x10
 100f258:	pop    rbp
 100f259:	ret    
 100f25a:	int3   
 100f25b:	int3   
 100f25c:	int3   
 100f25d:	int3   
 100f25e:	int3   
 100f25f:	int3   
 100f260:	mov    QWORD PTR [rsp+0x10],rdx
 100f265:	mov    QWORD PTR [rsp+0x8],rcx
 100f26a:	push   rbp
 100f26b:	mov    rbp,rsp
 100f26e:	sub    rsp,0x30
 100f272:	mov    QWORD PTR [rsp+0x20],0x0
 100f27b:	lea    r8,[rsp+0x20]
 100f280:	mov    rdx,QWORD PTR [rsp+0x48]
 100f285:	mov    rcx,QWORD PTR [rsp+0x40]
 100f28a:	call   0x1003e40
 100f28f:	test   eax,eax
 100f291:	jl     0x100f2d3
 100f293:	cmp    QWORD PTR [rsp+0x20],0x0
 100f299:	jbe    0x100f2d3
 100f29b:	mov    rax,QWORD PTR [rsp+0x40]
 100f2a0:	mov    rcx,QWORD PTR [rsp+0x20]
 100f2a5:	movzx  ecx,WORD PTR [rax+rcx*2-0x2]
 100f2aa:	call   0x100f220
 100f2af:	test   eax,eax
 100f2b1:	je     0x100f2d3
 100f2b3:	xor    eax,eax
 100f2b5:	mov    rcx,QWORD PTR [rsp+0x40]
 100f2ba:	mov    rdx,QWORD PTR [rsp+0x20]
 100f2bf:	mov    WORD PTR [rcx+rdx*2-0x2],ax
 100f2c4:	mov    rax,QWORD PTR [rsp+0x20]
 100f2c9:	dec    rax
 100f2cc:	mov    QWORD PTR [rsp+0x20],rax
 100f2d1:	jmp    0x100f293
 100f2d3:	add    rsp,0x30
 100f2d7:	pop    rbp
 100f2d8:	ret    
 100f2d9:	int3   
 100f2da:	int3   
 100f2db:	int3   
 100f2dc:	int3   
 100f2dd:	int3   
 100f2de:	int3   
 100f2df:	int3   
 100f2e0:	mov    QWORD PTR [rsp+0x8],rcx
 100f2e5:	push   rbp
 100f2e6:	mov    rbp,rsp
 100f2e9:	sub    rsp,0x270
 100f2f0:	mov    rax,QWORD PTR [rip+0x6069]        # 0x1015360
 100f2f7:	xor    rax,rsp
 100f2fa:	mov    QWORD PTR [rbp-0x10],rax
 100f2fe:	mov    QWORD PTR [rsp+0x40],0x0
 100f307:	cmp    QWORD PTR [rbp+0x10],0x0
 100f30c:	jne    0x100f315
 100f30e:	xor    eax,eax
 100f310:	jmp    0x100f40d
 100f315:	mov    rcx,QWORD PTR [rbp+0x10]
 100f319:	call   QWORD PTR [rip+0xffffffffffff2011]        # 0x1001330
 100f31f:	mov    QWORD PTR [rsp+0x48],rax
 100f324:	cmp    QWORD PTR [rsp+0x48],0x0
 100f32a:	jne    0x100f333
 100f32c:	xor    eax,eax
 100f32e:	jmp    0x100f40d
 100f333:	mov    rax,QWORD PTR [rbp+0x10]
 100f337:	mov    rcx,QWORD PTR [rsp+0x48]
 100f33c:	movzx  ecx,WORD PTR [rax+rcx*2-0x2]
 100f341:	call   0x100f220
 100f346:	test   eax,eax
 100f348:	je     0x100f397
 100f34a:	mov    r8,QWORD PTR [rbp+0x10]
 100f34e:	mov    edx,0x20a
 100f353:	lea    rcx,[rsp+0x50]
 100f358:	call   0x1003d20
 100f35d:	test   eax,eax
 100f35f:	jge    0x100f36b
 100f361:	mov    eax,0x1
 100f366:	jmp    0x100f40d
 100f36b:	mov    edx,0x105
 100f370:	lea    rcx,[rsp+0x50]
 100f375:	call   0x100f260
 100f37a:	lea    rcx,[rsp+0x50]
 100f37f:	call   QWORD PTR [rip+0xffffffffffff1fab]        # 0x1001330
 100f385:	test   rax,rax
 100f388:	jne    0x100f38e
 100f38a:	xor    eax,eax
 100f38c:	jmp    0x100f40d
 100f38e:	lea    rax,[rsp+0x50]
 100f393:	mov    QWORD PTR [rbp+0x10],rax
 100f397:	mov    QWORD PTR [rsp+0x30],0x0
 100f3a0:	mov    DWORD PTR [rsp+0x28],0x100000
 100f3a8:	mov    DWORD PTR [rsp+0x20],0x3
 100f3b0:	xor    r9d,r9d
 100f3b3:	xor    r8d,r8d
 100f3b6:	mov    edx,0x80
 100f3bb:	mov    rcx,QWORD PTR [rbp+0x10]
 100f3bf:	call   QWORD PTR [rip+0xffffffffffff1ceb]        # 0x10010b0
 100f3c5:	mov    QWORD PTR [rsp+0x40],rax
 100f3ca:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
 100f3d0:	je     0x100f3da
 100f3d2:	cmp    QWORD PTR [rsp+0x40],0x0
 100f3d8:	jne    0x100f3de
 100f3da:	xor    eax,eax
 100f3dc:	jmp    0x100f40d
 100f3de:	mov    rcx,QWORD PTR [rsp+0x40]
 100f3e3:	call   QWORD PTR [rip+0xffffffffffff1c5f]        # 0x1001048
 100f3e9:	cmp    eax,0x3
 100f3ec:	jne    0x100f400
 100f3ee:	mov    rcx,QWORD PTR [rsp+0x40]
 100f3f3:	call   QWORD PTR [rip+0xffffffffffff1c5f]        # 0x1001058
 100f3f9:	mov    eax,0x1
 100f3fe:	jmp    0x100f40d
 100f400:	mov    rcx,QWORD PTR [rsp+0x40]
 100f405:	call   QWORD PTR [rip+0xffffffffffff1c4d]        # 0x1001058
 100f40b:	xor    eax,eax
 100f40d:	mov    rcx,QWORD PTR [rbp-0x10]
 100f411:	xor    rcx,rsp
 100f414:	call   0x1012040
 100f419:	add    rsp,0x270
 100f420:	pop    rbp
 100f421:	ret    
 100f422:	int3   
 100f423:	int3   
 100f424:	int3   
 100f425:	int3   
 100f426:	int3   
 100f427:	int3   
 100f428:	int3   
 100f429:	int3   
 100f42a:	int3   
 100f42b:	int3   
 100f42c:	int3   
 100f42d:	int3   
 100f42e:	int3   
 100f42f:	int3   
 100f430:	rex push rbp
 100f432:	mov    rbp,rsp
 100f435:	push   rdi
 100f436:	sub    rsp,0x268
 100f43d:	mov    rax,QWORD PTR [rip+0x5f1c]        # 0x1015360
 100f444:	xor    rax,rsp
 100f447:	mov    QWORD PTR [rbp-0x20],rax
 100f44b:	xor    eax,eax
 100f44d:	mov    WORD PTR [rsp+0x40],ax
 100f452:	lea    rax,[rsp+0x42]
 100f457:	mov    rdi,rax
 100f45a:	xor    eax,eax
 100f45c:	mov    ecx,0x208
 100f461:	rep stos BYTE PTR es:[rdi],al
 100f463:	mov    DWORD PTR [rsp+0x20],0x105
 100f46b:	mov    edx,DWORD PTR [rsp+0x20]
 100f46f:	lea    rcx,[rsp+0x40]
 100f474:	call   QWORD PTR [rip+0xffffffffffff1c06]        # 0x1001080
 100f47a:	mov    DWORD PTR [rsp+0x24],eax
 100f47e:	cmp    DWORD PTR [rsp+0x24],0x0
 100f483:	je     0x100f509
 100f489:	mov    eax,DWORD PTR [rsp+0x20]
 100f48d:	cmp    DWORD PTR [rsp+0x24],eax
 100f491:	jae    0x100f509
 100f493:	mov    eax,DWORD PTR [rsp+0x20]
 100f497:	mov    r9,0xffffffffffffffff
 100f49e:	lea    r8,[rip+0xffffffffffff2353]        # 0x10017f8
 100f4a5:	mov    edx,eax
 100f4a7:	lea    rcx,[rsp+0x40]
 100f4ac:	call   QWORD PTR [rip+0xffffffffffff1e86]        # 0x1001338
 100f4b2:	test   eax,eax
 100f4b4:	jne    0x100f509
 100f4b6:	lea    rcx,[rsp+0x40]
 100f4bb:	call   QWORD PTR [rip+0xffffffffffff1baf]        # 0x1001070
 100f4c1:	mov    QWORD PTR [rsp+0x28],rax
 100f4c6:	cmp    QWORD PTR [rsp+0x28],0x0
 100f4cc:	je     0x100f509
 100f4ce:	lea    rdx,[rip+0xffffffffffff2343]        # 0x1001818
 100f4d5:	mov    rcx,QWORD PTR [rsp+0x28]
 100f4da:	call   QWORD PTR [rip+0xffffffffffff1b48]        # 0x1001028
 100f4e0:	mov    QWORD PTR [rsp+0x30],rax
 100f4e5:	cmp    QWORD PTR [rsp+0x30],0x0
 100f4eb:	je     0x100f4fe
 100f4ed:	xor    r9d,r9d
 100f4f0:	xor    r8d,r8d
 100f4f3:	mov    edx,0x1
 100f4f8:	xor    ecx,ecx
 100f4fa:	call   QWORD PTR [rsp+0x30]
 100f4fe:	mov    rcx,QWORD PTR [rsp+0x28]
 100f503:	call   QWORD PTR [rip+0xffffffffffff1b17]        # 0x1001020
 100f509:	mov    rcx,QWORD PTR [rbp-0x20]
 100f50d:	xor    rcx,rsp
 100f510:	call   0x1012040
 100f515:	add    rsp,0x268
 100f51c:	pop    rdi
 100f51d:	pop    rbp
 100f51e:	ret    
 100f51f:	int3   
 100f520:	int3   
 100f521:	int3   
 100f522:	int3   
 100f523:	int3   
 100f524:	int3   
 100f525:	int3   
 100f526:	int3   
 100f527:	int3   
 100f528:	int3   
 100f529:	int3   
 100f52a:	int3   
 100f52b:	int3   
 100f52c:	int3   
 100f52d:	int3   
 100f52e:	int3   
 100f52f:	int3   
 100f530:	mov    QWORD PTR [rsp+0x8],rcx
 100f535:	push   rbp
 100f536:	mov    rbp,rsp
 100f539:	mov    rax,QWORD PTR [rsp+0x10]
 100f53e:	mov    QWORD PTR [rax],0x0
 100f545:	mov    rax,QWORD PTR [rsp+0x10]
 100f54a:	pop    rbp
 100f54b:	ret    
 100f54c:	int3   
 100f54d:	int3   
 100f54e:	int3   
 100f54f:	int3   
 100f550:	int3   
 100f551:	int3   
 100f552:	int3   
 100f553:	int3   
 100f554:	int3   
 100f555:	int3   
 100f556:	int3   
 100f557:	int3   
 100f558:	int3   
 100f559:	int3   
 100f55a:	int3   
 100f55b:	int3   
 100f55c:	int3   
 100f55d:	int3   
 100f55e:	int3   
 100f55f:	int3   
 100f560:	mov    QWORD PTR [rsp+0x8],rcx
 100f565:	push   rbp
 100f566:	mov    rbp,rsp
 100f569:	sub    rsp,0x20
 100f56d:	mov    rax,QWORD PTR [rsp+0x30]
 100f572:	cmp    QWORD PTR [rax],0x0
 100f576:	je     0x100f58e
 100f578:	mov    rax,QWORD PTR [rsp+0x30]
 100f57d:	mov    rax,QWORD PTR [rax]
 100f580:	mov    rcx,QWORD PTR [rsp+0x30]
 100f585:	mov    rcx,QWORD PTR [rcx]
 100f588:	mov    rax,QWORD PTR [rax]
 100f58b:	call   QWORD PTR [rax+0x10]
 100f58e:	add    rsp,0x20
 100f592:	pop    rbp
 100f593:	ret    
 100f594:	int3   
 100f595:	int3   
 100f596:	int3   
 100f597:	int3   
 100f598:	int3   
 100f599:	int3   
 100f59a:	int3   
 100f59b:	int3   
 100f59c:	int3   
 100f59d:	int3   
 100f59e:	int3   
 100f59f:	int3   
 100f5a0:	mov    QWORD PTR [rsp+0x8],rcx
 100f5a5:	push   rbp
 100f5a6:	mov    rbp,rsp
 100f5a9:	mov    rax,QWORD PTR [rsp+0x10]
 100f5ae:	pop    rbp
 100f5af:	ret    
 100f5b0:	int3   
 100f5b1:	int3   
 100f5b2:	int3   
 100f5b3:	int3   
 100f5b4:	int3   
 100f5b5:	int3   
 100f5b6:	int3   
 100f5b7:	int3   
 100f5b8:	int3   
 100f5b9:	int3   
 100f5ba:	int3   
 100f5bb:	int3   
 100f5bc:	int3   
 100f5bd:	int3   
 100f5be:	int3   
 100f5bf:	int3   
 100f5c0:	mov    QWORD PTR [rsp+0x8],rcx
 100f5c5:	push   rbp
 100f5c6:	mov    rbp,rsp
 100f5c9:	sub    rsp,0x10
 100f5cd:	mov    rax,QWORD PTR [rsp+0x20]
 100f5d2:	cmp    QWORD PTR [rax],0x0
 100f5d6:	je     0x100f5e1
 100f5d8:	mov    DWORD PTR [rsp],0x0
 100f5df:	jmp    0x100f5e8
 100f5e1:	mov    DWORD PTR [rsp],0x1
 100f5e8:	mov    eax,DWORD PTR [rsp]
 100f5eb:	add    rsp,0x10
 100f5ef:	pop    rbp
 100f5f0:	ret    
 100f5f1:	int3   
 100f5f2:	int3   
 100f5f3:	int3   
 100f5f4:	int3   
 100f5f5:	int3   
 100f5f6:	int3   
 100f5f7:	int3   
 100f5f8:	int3   
 100f5f9:	int3   
 100f5fa:	int3   
 100f5fb:	int3   
 100f5fc:	int3   
 100f5fd:	int3   
 100f5fe:	int3   
 100f5ff:	int3   
 100f600:	mov    QWORD PTR [rsp+0x8],rcx
 100f605:	push   rbp
 100f606:	mov    rbp,rsp
 100f609:	mov    rax,QWORD PTR [rsp+0x10]
 100f60e:	mov    rax,QWORD PTR [rax]
 100f611:	pop    rbp
 100f612:	ret    
 100f613:	int3   
 100f614:	int3   
 100f615:	int3   
 100f616:	int3   
 100f617:	int3   
 100f618:	int3   
 100f619:	int3   
 100f61a:	int3   
 100f61b:	int3   
 100f61c:	int3   
 100f61d:	int3   
 100f61e:	int3   
 100f61f:	int3   
 100f620:	mov    QWORD PTR [rsp+0x8],rcx
 100f625:	push   rbp
 100f626:	mov    rbp,rsp
 100f629:	sub    rsp,0x20
 100f62d:	mov    rax,QWORD PTR [rsp+0x30]
 100f632:	cmp    QWORD PTR [rax],0x0
 100f636:	je     0x100f64e
 100f638:	mov    rax,QWORD PTR [rsp+0x30]
 100f63d:	mov    rax,QWORD PTR [rax]
 100f640:	mov    rcx,QWORD PTR [rsp+0x30]
 100f645:	mov    rcx,QWORD PTR [rcx]
 100f648:	mov    rax,QWORD PTR [rax]
 100f64b:	call   QWORD PTR [rax+0x10]
 100f64e:	mov    rax,QWORD PTR [rsp+0x30]
 100f653:	mov    QWORD PTR [rax],0x0
 100f65a:	add    rsp,0x20
 100f65e:	pop    rbp
 100f65f:	ret    
 100f660:	int3   
 100f661:	int3   
 100f662:	int3   
 100f663:	int3   
 100f664:	int3   
 100f665:	int3   
 100f666:	int3   
 100f667:	int3   
 100f668:	int3   
 100f669:	int3   
 100f66a:	int3   
 100f66b:	int3   
 100f66c:	int3   
 100f66d:	int3   
 100f66e:	int3   
 100f66f:	int3   
 100f670:	rex push rbp
 100f672:	mov    rbp,rsp
 100f675:	push   rdi
 100f676:	sub    rsp,0x2d8
 100f67d:	mov    rax,QWORD PTR [rip+0x5cdc]        # 0x1015360
 100f684:	xor    rax,rsp
 100f687:	mov    QWORD PTR [rbp-0x20],rax
 100f68b:	lea    rax,[rip+0xffffffffffff219e]        # 0x1001830
 100f692:	mov    QWORD PTR [rsp+0x70],rax
 100f697:	mov    DWORD PTR [rsp+0x30],0x0
 100f69f:	mov    DWORD PTR [rsp+0x40],0x0
 100f6a7:	xor    eax,eax
 100f6a9:	mov    WORD PTR [rsp+0xb0],ax
 100f6b1:	lea    rax,[rsp+0xb2]
 100f6b9:	mov    rdi,rax
 100f6bc:	xor    eax,eax
 100f6be:	mov    ecx,0x208
 100f6c3:	rep stos BYTE PTR es:[rdi],al
 100f6c5:	lea    rax,[rsp+0x58]
 100f6ca:	mov    QWORD PTR [rsp+0x20],rax
 100f6cf:	mov    r9d,0x20019
 100f6d5:	xor    r8d,r8d
 100f6d8:	mov    rdx,QWORD PTR [rsp+0x70]
 100f6dd:	mov    rcx,0xffffffff80000000
 100f6e4:	call   QWORD PTR [rip+0xffffffffffff1916]        # 0x1001000
 100f6ea:	mov    DWORD PTR [rsp+0x30],eax
 100f6ee:	cmp    DWORD PTR [rsp+0x30],0x0
 100f6f3:	je     0x100f6fc
 100f6f5:	xor    al,al
 100f6f7:	jmp    0x100f8cd
 100f6fc:	mov    DWORD PTR [rsp+0x40],0x20a
 100f704:	lea    rax,[rsp+0x40]
 100f709:	mov    QWORD PTR [rsp+0x28],rax
 100f70e:	lea    rax,[rsp+0xb0]
 100f716:	mov    QWORD PTR [rsp+0x20],rax
 100f71b:	xor    r9d,r9d
 100f71e:	xor    r8d,r8d
 100f721:	xor    edx,edx
 100f723:	mov    rcx,QWORD PTR [rsp+0x58]
 100f728:	call   QWORD PTR [rip+0xffffffffffff18da]        # 0x1001008
 100f72e:	mov    DWORD PTR [rsp+0x30],eax
 100f732:	mov    rcx,QWORD PTR [rsp+0x58]
 100f737:	call   QWORD PTR [rip+0xffffffffffff18d3]        # 0x1001010
 100f73d:	mov    QWORD PTR [rsp+0x58],0x0
 100f746:	cmp    DWORD PTR [rsp+0x30],0x0
 100f74b:	je     0x100f754
 100f74d:	xor    al,al
 100f74f:	jmp    0x100f8cd
 100f754:	mov    DWORD PTR [rsp+0x68],0x7d0
 100f75c:	mov    DWORD PTR [rsp+0x98],0x55
 100f767:	mov    DWORD PTR [rsp+0x88],0x8fc
 100f772:	mov    QWORD PTR [rsp+0x38],0x0
 100f77b:	lea    rdx,[rsp+0x50]
 100f780:	lea    rcx,[rsp+0xb0]
 100f788:	call   0x101237e
 100f78d:	mov    DWORD PTR [rsp+0x34],eax
 100f791:	cmp    DWORD PTR [rsp+0x34],0x0
 100f796:	je     0x100f8b1
 100f79c:	mov    eax,DWORD PTR [rsp+0x34]
 100f7a0:	mov    ecx,eax
 100f7a2:	call   0x1011e84
 100f7a7:	mov    QWORD PTR [rsp+0x80],rax
 100f7af:	mov    rax,QWORD PTR [rsp+0x80]
 100f7b7:	mov    QWORD PTR [rsp+0x38],rax
 100f7bc:	cmp    QWORD PTR [rsp+0x38],0x0
 100f7c2:	je     0x100f8b1
 100f7c8:	mov    r9,QWORD PTR [rsp+0x38]
 100f7cd:	mov    r8d,DWORD PTR [rsp+0x34]
 100f7d2:	mov    edx,DWORD PTR [rsp+0x50]
 100f7d6:	lea    rcx,[rsp+0xb0]
 100f7de:	call   0x101238a
 100f7e3:	test   eax,eax
 100f7e5:	je     0x100f8b1
 100f7eb:	lea    r9,[rsp+0x64]
 100f7f0:	lea    r8,[rsp+0x48]
 100f7f5:	lea    rdx,[rip+0xffffffffffff20ac]        # 0x10018a8
 100f7fc:	mov    rcx,QWORD PTR [rsp+0x38]
 100f801:	call   0x1012396
 100f806:	test   eax,eax
 100f808:	je     0x100f8b1
 100f80e:	mov    rax,QWORD PTR [rsp+0x48]
 100f813:	mov    eax,DWORD PTR [rax+0x8]
 100f816:	shr    rax,0x10
 100f81a:	and    rax,0xffff
 100f820:	movzx  eax,ax
 100f823:	mov    DWORD PTR [rsp+0xa8],eax
 100f82a:	mov    rax,QWORD PTR [rsp+0x48]
 100f82f:	mov    eax,DWORD PTR [rax+0x8]
 100f832:	and    rax,0xffff
 100f838:	movzx  eax,ax
 100f83b:	mov    DWORD PTR [rsp+0x54],eax
 100f83f:	mov    rax,QWORD PTR [rsp+0x48]
 100f844:	mov    eax,DWORD PTR [rax+0xc]
 100f847:	shr    rax,0x10
 100f84b:	and    rax,0xffff
 100f851:	movzx  eax,ax
 100f854:	mov    DWORD PTR [rsp+0x60],eax
 100f858:	mov    rax,QWORD PTR [rsp+0x48]
 100f85d:	mov    eax,DWORD PTR [rax+0xc]
 100f860:	and    rax,0xffff
 100f866:	movzx  eax,ax
 100f869:	mov    DWORD PTR [rsp+0x78],eax
 100f86d:	mov    rax,QWORD PTR [rsp+0x38]
 100f872:	mov    QWORD PTR [rsp+0x90],rax
 100f87a:	mov    rcx,QWORD PTR [rsp+0x90]
 100f882:	call   0x1011e90
 100f887:	cmp    DWORD PTR [rsp+0x54],0x55
 100f88c:	jne    0x100f8a2
 100f88e:	cmp    DWORD PTR [rsp+0x60],0x8fc
 100f896:	jl     0x100f8a2
 100f898:	mov    DWORD PTR [rsp+0x44],0x1
 100f8a0:	jmp    0x100f8aa
 100f8a2:	mov    DWORD PTR [rsp+0x44],0x0
 100f8aa:	movzx  eax,BYTE PTR [rsp+0x44]
 100f8af:	jmp    0x100f8cd
 100f8b1:	mov    rax,QWORD PTR [rsp+0x38]
 100f8b6:	mov    QWORD PTR [rsp+0xa0],rax
 100f8be:	mov    rcx,QWORD PTR [rsp+0xa0]
 100f8c6:	call   0x1011e90
 100f8cb:	xor    al,al
 100f8cd:	mov    rcx,QWORD PTR [rbp-0x20]
 100f8d1:	xor    rcx,rsp
 100f8d4:	call   0x1012040
 100f8d9:	add    rsp,0x2d8
 100f8e0:	pop    rdi
 100f8e1:	pop    rbp
 100f8e2:	ret    
 100f8e3:	int3   
 100f8e4:	int3   
 100f8e5:	int3   
 100f8e6:	int3   
 100f8e7:	int3   
 100f8e8:	int3   
 100f8e9:	int3   
 100f8ea:	int3   
 100f8eb:	int3   
 100f8ec:	int3   
 100f8ed:	int3   
 100f8ee:	int3   
 100f8ef:	int3   
 100f8f0:	mov    QWORD PTR [rsp+0x18],r8
 100f8f5:	mov    QWORD PTR [rsp+0x10],rdx
 100f8fa:	mov    DWORD PTR [rsp+0x8],ecx
 100f8fe:	push   rbp
 100f8ff:	mov    rbp,rsp
 100f902:	push   rdi
 100f903:	sub    rsp,0x548
 100f90a:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
 100f916:	mov    rax,QWORD PTR [rip+0x5a43]        # 0x1015360
 100f91d:	xor    rax,rsp
 100f920:	mov    QWORD PTR [rbp-0x18],rax
 100f924:	call   0x100f430
 100f929:	xor    ecx,ecx
 100f92b:	call   QWORD PTR [rip+0xffffffffffff1747]        # 0x1001078
 100f931:	mov    rcx,rax
 100f934:	call   0x10123a2
 100f939:	mov    QWORD PTR [rip+0xea18],rax        # 0x101e358
 100f940:	cmp    QWORD PTR [rip+0xea10],0x0        # 0x101e358
 100f948:	jne    0x100f954
 100f94a:	mov    eax,0xffffffff
 100f94f:	jmp    0x1010bbb
 100f954:	mov    DWORD PTR [rsp+0x4c],0x0
 100f95c:	mov    DWORD PTR [rsp+0x64],0x0
 100f964:	mov    DWORD PTR [rsp+0x40],0x0
 100f96c:	mov    DWORD PTR [rsp+0x8c],0x0
 100f977:	mov    DWORD PTR [rbp-0x28],0x0
 100f97e:	movzx  eax,WORD PTR [rip+0xffffffffffff1e3b]        # 0x10017c0
 100f985:	mov    WORD PTR [rsp+0x3b0],ax
 100f98d:	lea    rax,[rsp+0x3b2]
 100f995:	mov    rdi,rax
 100f998:	xor    eax,eax
 100f99a:	mov    ecx,0xfe
 100f99f:	rep stos BYTE PTR es:[rdi],al
 100f9a1:	movzx  eax,WORD PTR [rip+0xffffffffffff1e18]        # 0x10017c0
 100f9a8:	mov    WORD PTR [rsp+0xb0],ax
 100f9b0:	lea    rax,[rsp+0xb2]
 100f9b8:	mov    rdi,rax
 100f9bb:	xor    eax,eax
 100f9bd:	mov    ecx,0xfe
 100f9c2:	rep stos BYTE PTR es:[rdi],al
 100f9c4:	movzx  eax,WORD PTR [rip+0xffffffffffff1df5]        # 0x10017c0
 100f9cb:	mov    WORD PTR [rsp+0x1b0],ax
 100f9d3:	lea    rax,[rsp+0x1b2]
 100f9db:	mov    rdi,rax
 100f9de:	xor    eax,eax
 100f9e0:	mov    ecx,0xfe
 100f9e5:	rep stos BYTE PTR es:[rdi],al
 100f9e7:	movzx  eax,WORD PTR [rip+0xffffffffffff1dd2]        # 0x10017c0
 100f9ee:	mov    WORD PTR [rsp+0x2b0],ax
 100f9f6:	lea    rax,[rsp+0x2b2]
 100f9fe:	mov    rdi,rax
 100fa01:	xor    eax,eax
 100fa03:	mov    ecx,0xfe
 100fa08:	rep stos BYTE PTR es:[rdi],al
 100fa0a:	mov    DWORD PTR [rsp+0x48],0x0
 100fa12:	mov    DWORD PTR [rsp+0x60],0x0
 100fa1a:	mov    QWORD PTR [rbp-0x70],0x0
 100fa22:	mov    DWORD PTR [rsp+0x58],0x0
 100fa2a:	mov    DWORD PTR [rsp+0x5c],0xffffffff
 100fa32:	lea    rdx,[rip+0xffffffffffff1e77]        # 0x10018b0
 100fa39:	xor    ecx,ecx
 100fa3b:	call   QWORD PTR [rip+0xffffffffffff17d7]        # 0x1001218
 100fa41:	mov    r8d,0x1000
 100fa47:	lea    rdx,[rip+0xb442]        # 0x101ae90
 100fa4e:	mov    ecx,0x1
 100fa53:	call   0x1008800
 100fa58:	mov    r8d,0x7db
 100fa5e:	lea    rdx,[rip+0xffffffffffff1e5b]        # 0x10018c0
 100fa65:	lea    rcx,[rip+0xb424]        # 0x101ae90
 100fa6c:	call   QWORD PTR [rip+0xffffffffffff18de]        # 0x1001350
 100fa72:	call   0x100f670
 100fa77:	movzx  eax,al
 100fa7a:	test   eax,eax
 100fa7c:	jne    0x100fa97
 100fa7e:	mov    edx,0x2c
 100fa83:	mov    ecx,0x485
 100fa88:	call   0x1007460
 100fa8d:	mov    eax,0x1
 100fa92:	jmp    0x1010bbb
 100fa97:	xor    ecx,ecx
 100fa99:	call   QWORD PTR [rip+0xffffffffffff1939]        # 0x10013d8
 100fa9f:	mov    DWORD PTR [rsp+0x4c],eax
 100faa3:	cmp    DWORD PTR [rsp+0x4c],0x0
 100faa8:	je     0x100fac2
 100faaa:	mov    edx,0x2b
 100faaf:	mov    ecx,DWORD PTR [rsp+0x4c]
 100fab3:	call   0x1007460
 100fab8:	mov    eax,0x1
 100fabd:	jmp    0x1010bbb
 100fac2:	lea    rcx,[rip+0x10847]        # 0x1020310
 100fac9:	call   0x100f5a0
 100face:	mov    QWORD PTR [rsp+0x20],rax
 100fad3:	lea    r9,[rip+0xffffffffffff1a0e]        # 0x10014e8
 100fada:	mov    r8d,0x1
 100fae0:	xor    edx,edx
 100fae2:	lea    rcx,[rip+0xffffffffffff19ef]        # 0x10014d8
 100fae9:	call   QWORD PTR [rip+0xffffffffffff18e1]        # 0x10013d0
 100faef:	mov    DWORD PTR [rsp+0x4c],eax
 100faf3:	cmp    DWORD PTR [rsp+0x4c],0x0
 100faf8:	jge    0x100fb15
 100fafa:	mov    edx,0x2c
 100faff:	mov    ecx,DWORD PTR [rsp+0x4c]
 100fb03:	call   0x1007460
 100fb08:	mov    DWORD PTR [rsp+0x40],0x1
 100fb10:	jmp    0x1010add
 100fb15:	lea    rcx,[rip+0x10804]        # 0x1020320
 100fb1c:	call   0x100f080
 100fb21:	mov    QWORD PTR [rsp+0x20],rax
 100fb26:	lea    r9,[rip+0xffffffffffff19db]        # 0x1001508
 100fb2d:	mov    r8d,0x1
 100fb33:	xor    edx,edx
 100fb35:	lea    rcx,[rip+0xffffffffffff19bc]        # 0x10014f8
 100fb3c:	call   QWORD PTR [rip+0xffffffffffff188e]        # 0x10013d0
 100fb42:	mov    DWORD PTR [rsp+0x4c],eax
 100fb46:	cmp    DWORD PTR [rsp+0x4c],0x0
 100fb4b:	jl     0x100fb5d
 100fb4d:	lea    rcx,[rip+0x107cc]        # 0x1020320
 100fb54:	call   0x100f0a0
 100fb59:	test   eax,eax
 100fb5b:	je     0x100fb78
 100fb5d:	mov    edx,0x2d
 100fb62:	mov    ecx,DWORD PTR [rsp+0x4c]
 100fb66:	call   0x1007460
 100fb6b:	mov    DWORD PTR [rsp+0x40],0x1
 100fb73:	jmp    0x1010add
 100fb78:	lea    rax,[rip+0xe321]        # 0x101dea0
 100fb7f:	mov    QWORD PTR [rsp+0x30],rax
 100fb84:	lea    rax,[rip+0x5825]        # 0x10153b0
 100fb8b:	mov    QWORD PTR [rsp+0x28],rax
 100fb90:	lea    rax,[rip+0xeb49]        # 0x101e6e0
 100fb97:	mov    QWORD PTR [rsp+0x20],rax
 100fb9c:	lea    r9,[rip+0xe69d]        # 0x101e240
 100fba3:	lea    r8,[rip+0xea16]        # 0x101e5c0
 100fbaa:	mov    rdx,QWORD PTR [rbp+0x18]
 100fbae:	mov    ecx,DWORD PTR [rbp+0x10]
 100fbb1:	call   0x10054a0
 100fbb6:	test   eax,eax
 100fbb8:	jne    0x100fbcc
 100fbba:	call   0x10075a0
 100fbbf:	mov    DWORD PTR [rsp+0x40],0x1
 100fbc7:	jmp    0x1010add
 100fbcc:	movzx  eax,WORD PTR [rip+0xeb0d]        # 0x101e6e0
 100fbd3:	test   eax,eax
 100fbd5:	je     0x100fbe2
 100fbd7:	movzx  eax,WORD PTR [rip+0xe662]        # 0x101e240
 100fbde:	test   eax,eax
 100fbe0:	je     0x100fc2b
 100fbe2:	movzx  eax,WORD PTR [rip+0xe3e7]        # 0x101dfd0
 100fbe9:	test   eax,eax
 100fbeb:	jne    0x100fc3d
 100fbed:	movzx  eax,WORD PTR [rip+0xe53c]        # 0x101e130
 100fbf4:	test   eax,eax
 100fbf6:	jne    0x100fc3d
 100fbf8:	movzx  eax,WORD PTR [rip+0xe4e1]        # 0x101e0e0
 100fbff:	test   eax,eax
 100fc01:	jne    0x100fc3d
 100fc03:	cmp    DWORD PTR [rip+0xe62a],0x0        # 0x101e234
 100fc0a:	jne    0x100fc3d
 100fc0c:	cmp    DWORD PTR [rip+0xe4c9],0x0        # 0x101e0dc
 100fc13:	jne    0x100fc3d
 100fc15:	movzx  eax,BYTE PTR [rip+0xe61c]        # 0x101e238
 100fc1c:	test   eax,eax
 100fc1e:	jne    0x100fc3d
 100fc20:	movzx  eax,BYTE PTR [rip+0xe612]        # 0x101e239
 100fc27:	test   eax,eax
 100fc29:	jne    0x100fc3d
 100fc2b:	call   0x10075a0
 100fc30:	mov    DWORD PTR [rsp+0x40],0x1
 100fc38:	jmp    0x1010add
 100fc3d:	call   0x1007a40
 100fc42:	test   eax,eax
 100fc44:	jne    0x100fc5b
 100fc46:	mov    DWORD PTR [rip+0xd244],0x0        # 0x101ce94
 100fc50:	mov    QWORD PTR [rip+0x573d],0x0        # 0x1015398
 100fc5b:	lea    r8,[rip+0xea7e]        # 0x101e6e0
 100fc62:	lea    rdx,[rip+0xe5d7]        # 0x101e240
 100fc69:	lea    rcx,[rip+0xe950]        # 0x101e5c0
 100fc70:	call   0x1004ee0
 100fc75:	mov    DWORD PTR [rsp+0x64],eax
 100fc79:	cmp    DWORD PTR [rsp+0x64],0x0
 100fc7e:	jne    0x100fc8d
 100fc80:	mov    DWORD PTR [rsp+0x40],0x1
 100fc88:	jmp    0x1010add
 100fc8d:	mov    edx,0x118
 100fc92:	lea    rcx,[rip+0xea47]        # 0x101e6e0
 100fc99:	call   0x10037d0
 100fc9e:	cmp    DWORD PTR [rip+0xd1f3],0x0        # 0x101ce98
 100fca5:	je     0x100fcc5
 100fca7:	call   0x1007ec0
 100fcac:	test   eax,eax
 100fcae:	jne    0x100fcc5
 100fcb0:	mov    DWORD PTR [rip+0xd1de],0x0        # 0x101ce98
 100fcba:	mov    QWORD PTR [rip+0x56db],0x0        # 0x10153a0
 100fcc5:	movzx  eax,WORD PTR [rip+0xe304]        # 0x101dfd0
 100fccc:	test   eax,eax
 100fcce:	je     0x100fd78
 100fcd4:	mov    ecx,0xb80
 100fcd9:	call   0x1011e84
 100fcde:	mov    QWORD PTR [rbp-0x68],rax
 100fce2:	cmp    QWORD PTR [rbp-0x68],0x0
 100fce7:	je     0x100fd2f
 100fce9:	mov    rax,QWORD PTR [rbp-0x68]
 100fced:	mov    DWORD PTR [rax],0x1
 100fcf3:	mov    rax,QWORD PTR [rbp-0x68]
 100fcf7:	add    rax,0x8
 100fcfb:	lea    rcx,[rip+0xffffffffffffebfe]        # 0x100e900
 100fd02:	mov    QWORD PTR [rsp+0x20],rcx
 100fd07:	lea    r9,[rip+0xffffffffffffad52]        # 0x100aa60
 100fd0e:	mov    r8d,0x1
 100fd14:	mov    edx,0xb78
 100fd19:	mov    rcx,rax
 100fd1c:	call   0x1011b0c
 100fd21:	mov    rax,QWORD PTR [rbp-0x68]
 100fd25:	add    rax,0x8
 100fd29:	mov    QWORD PTR [rbp-0x40],rax
 100fd2d:	jmp    0x100fd37
 100fd2f:	mov    QWORD PTR [rbp-0x40],0x0
 100fd37:	mov    rax,QWORD PTR [rbp-0x40]
 100fd3b:	mov    QWORD PTR [rbp-0x30],rax
 100fd3f:	mov    rax,QWORD PTR [rbp-0x30]
 100fd43:	mov    QWORD PTR [rip+0xe26e],rax        # 0x101dfb8
 100fd4a:	cmp    QWORD PTR [rip+0xe266],0x0        # 0x101dfb8
 100fd52:	je     0x100fd6b
 100fd54:	lea    rdx,[rip+0xe275]        # 0x101dfd0
 100fd5b:	mov    rcx,QWORD PTR [rip+0xe256]        # 0x101dfb8
 100fd62:	call   0x100ab20
 100fd67:	test   eax,eax
 100fd69:	jne    0x100fd78
 100fd6b:	mov    DWORD PTR [rsp+0x40],0x1
 100fd73:	jmp    0x1010add
 100fd78:	cmp    DWORD PTR [rip+0xe35d],0x0        # 0x101e0dc
 100fd7f:	je     0x100fe25
 100fd85:	mov    r8d,0x1000
 100fd8b:	lea    rdx,[rip+0xb0fe]        # 0x101ae90
 100fd92:	mov    ecx,0x8a
 100fd97:	call   0x1008800
 100fd9c:	lea    rcx,[rip+0xb0ed]        # 0x101ae90
 100fda3:	call   0x1008f00
 100fda8:	mov    r8d,0x1000
 100fdae:	lea    rdx,[rip+0xb0db]        # 0x101ae90
 100fdb5:	mov    ecx,0x36
 100fdba:	call   0x1008800
 100fdbf:	mov    r8d,0x80
 100fdc5:	lea    rdx,[rsp+0xb0]
 100fdcd:	mov    ecx,0x38
 100fdd2:	call   0x1008800
 100fdd7:	lea    rax,[rsp+0xb0]
 100fddf:	mov    QWORD PTR [rsp+0x28],rax
 100fde4:	mov    DWORD PTR [rsp+0x20],0x1
 100fdec:	lea    r9,[rip+0xffffffffffff1add]        # 0x10018d0
 100fdf3:	lea    r8,[rip+0xb096]        # 0x101ae90
 100fdfa:	mov    edx,0x2710
 100fdff:	lea    rcx,[rip+0x626a]        # 0x1016070
 100fe06:	call   QWORD PTR [rip+0xffffffffffff13ec]        # 0x10011f8
 100fe0c:	lea    rcx,[rip+0x625d]        # 0x1016070
 100fe13:	call   0x1008f00
 100fe18:	mov    DWORD PTR [rsp+0x40],0x1
 100fe20:	jmp    0x1010add
 100fe25:	cmp    DWORD PTR [rip+0xe408],0x0        # 0x101e234
 100fe2c:	je     0x100fed2
 100fe32:	mov    r8d,0x1000
 100fe38:	lea    rdx,[rip+0xb051]        # 0x101ae90
 100fe3f:	mov    ecx,0x8a
 100fe44:	call   0x1008800
 100fe49:	lea    rcx,[rip+0xb040]        # 0x101ae90
 100fe50:	call   0x1008f00
 100fe55:	mov    r8d,0x1000
 100fe5b:	lea    rdx,[rip+0xb02e]        # 0x101ae90
 100fe62:	mov    ecx,0x36
 100fe67:	call   0x1008800
 100fe6c:	mov    r8d,0x80
 100fe72:	lea    rdx,[rsp+0xb0]
 100fe7a:	mov    ecx,0x38
 100fe7f:	call   0x1008800
 100fe84:	lea    rax,[rsp+0xb0]
 100fe8c:	mov    QWORD PTR [rsp+0x28],rax
 100fe91:	mov    DWORD PTR [rsp+0x20],0x1
 100fe99:	lea    r9,[rip+0xffffffffffff1a30]        # 0x10018d0
 100fea0:	lea    r8,[rip+0xafe9]        # 0x101ae90
 100fea7:	mov    edx,0x2710
 100feac:	lea    rcx,[rip+0x61bd]        # 0x1016070
 100feb3:	call   QWORD PTR [rip+0xffffffffffff133f]        # 0x10011f8
 100feb9:	lea    rcx,[rip+0x61b0]        # 0x1016070
 100fec0:	call   0x1008f00
 100fec5:	mov    DWORD PTR [rsp+0x40],0x1
 100fecd:	jmp    0x1010add
 100fed2:	movzx  eax,BYTE PTR [rip+0xe35f]        # 0x101e238
 100fed9:	test   eax,eax
 100fedb:	je     0x100ff81
 100fee1:	mov    r8d,0x1000
 100fee7:	lea    rdx,[rip+0xafa2]        # 0x101ae90
 100feee:	mov    ecx,0x8a
 100fef3:	call   0x1008800
 100fef8:	lea    rcx,[rip+0xaf91]        # 0x101ae90
 100feff:	call   0x1008f00
 100ff04:	mov    r8d,0x1000
 100ff0a:	lea    rdx,[rip+0xaf7f]        # 0x101ae90
 100ff11:	mov    ecx,0x36
 100ff16:	call   0x1008800
 100ff1b:	mov    r8d,0x80
 100ff21:	lea    rdx,[rsp+0xb0]
 100ff29:	mov    ecx,0x38
 100ff2e:	call   0x1008800
 100ff33:	lea    rax,[rsp+0xb0]
 100ff3b:	mov    QWORD PTR [rsp+0x28],rax
 100ff40:	mov    DWORD PTR [rsp+0x20],0x1
 100ff48:	lea    r9,[rip+0xffffffffffff1981]        # 0x10018d0
 100ff4f:	lea    r8,[rip+0xaf3a]        # 0x101ae90
 100ff56:	mov    edx,0x2710
 100ff5b:	lea    rcx,[rip+0x610e]        # 0x1016070
 100ff62:	call   QWORD PTR [rip+0xffffffffffff1290]        # 0x10011f8
 100ff68:	lea    rcx,[rip+0x6101]        # 0x1016070
 100ff6f:	call   0x1008f00
 100ff74:	mov    DWORD PTR [rsp+0x40],0x1
 100ff7c:	jmp    0x1010add
 100ff81:	movzx  eax,BYTE PTR [rip+0xe2b1]        # 0x101e239
 100ff88:	test   eax,eax
 100ff8a:	je     0x1010030
 100ff90:	mov    r8d,0x1000
 100ff96:	lea    rdx,[rip+0xaef3]        # 0x101ae90
 100ff9d:	mov    ecx,0x8a
 100ffa2:	call   0x1008800
 100ffa7:	lea    rcx,[rip+0xaee2]        # 0x101ae90
 100ffae:	call   0x1008f00
 100ffb3:	mov    r8d,0x1000
 100ffb9:	lea    rdx,[rip+0xaed0]        # 0x101ae90
 100ffc0:	mov    ecx,0x36
 100ffc5:	call   0x1008800
 100ffca:	mov    r8d,0x80
 100ffd0:	lea    rdx,[rsp+0xb0]
 100ffd8:	mov    ecx,0x38
 100ffdd:	call   0x1008800
 100ffe2:	lea    rax,[rsp+0xb0]
 100ffea:	mov    QWORD PTR [rsp+0x28],rax
 100ffef:	mov    DWORD PTR [rsp+0x20],0x1
 100fff7:	lea    r9,[rip+0xffffffffffff18d2]        # 0x10018d0
 100fffe:	lea    r8,[rip+0xae8b]        # 0x101ae90
 1010005:	mov    edx,0x2710
 101000a:	lea    rcx,[rip+0x605f]        # 0x1016070
 1010011:	call   QWORD PTR [rip+0xffffffffffff11e1]        # 0x10011f8
 1010017:	lea    rcx,[rip+0x6052]        # 0x1016070
 101001e:	call   0x1008f00
 1010023:	mov    DWORD PTR [rsp+0x40],0x1
 101002b:	jmp    0x1010add
 1010030:	movzx  eax,WORD PTR [rip+0xdf99]        # 0x101dfd0
 1010037:	test   eax,eax
 1010039:	je     0x1010045
 101003b:	mov    DWORD PTR [rip+0xdf7b],0x1        # 0x101dfc0
 1010045:	movzx  eax,WORD PTR [rip+0xdf84]        # 0x101dfd0
 101004c:	test   eax,eax
 101004e:	jne    0x1010066
 1010050:	call   0x1003ec0
 1010055:	test   eax,eax
 1010057:	jne    0x1010066
 1010059:	mov    DWORD PTR [rsp+0x40],0x1
 1010061:	jmp    0x1010add
 1010066:	movzx  eax,WORD PTR [rip+0xdf63]        # 0x101dfd0
 101006d:	test   eax,eax
 101006f:	je     0x101007e
 1010071:	mov    DWORD PTR [rsp+0x4b0],0x2f
 101007c:	jmp    0x1010089
 101007e:	mov    DWORD PTR [rsp+0x4b0],0x50
 1010089:	mov    r8d,0x1000
 101008f:	lea    rdx,[rip+0xadfa]        # 0x101ae90
 1010096:	mov    ecx,DWORD PTR [rsp+0x4b0]
 101009d:	call   0x1008800
 10100a2:	lea    rcx,[rbp-0x70]
 10100a6:	call   0x10038c0
 10100ab:	lea    rcx,[rbp-0x70]
 10100af:	call   0x1003860
 10100b4:	mov    QWORD PTR [rsp+0x50],rax
 10100b9:	mov    rax,QWORD PTR [rsp+0x50]
 10100be:	mov    eax,DWORD PTR [rax+0x14]
 10100c1:	add    eax,0x76c
 10100c6:	mov    WORD PTR [rsp+0xa0],ax
 10100ce:	mov    rax,QWORD PTR [rsp+0x50]
 10100d3:	mov    eax,DWORD PTR [rax+0x10]
 10100d6:	inc    eax
 10100d8:	mov    WORD PTR [rsp+0xa2],ax
 10100e0:	mov    rax,QWORD PTR [rsp+0x50]
 10100e5:	movzx  eax,WORD PTR [rax+0x18]
 10100e9:	mov    WORD PTR [rsp+0xa4],ax
 10100f1:	mov    rax,QWORD PTR [rsp+0x50]
 10100f6:	movzx  eax,WORD PTR [rax+0xc]
 10100fa:	mov    WORD PTR [rsp+0xa6],ax
 1010102:	mov    rax,QWORD PTR [rsp+0x50]
 1010107:	movzx  eax,WORD PTR [rax+0x8]
 101010b:	mov    WORD PTR [rsp+0xa8],ax
 1010113:	mov    rax,QWORD PTR [rsp+0x50]
 1010118:	movzx  eax,WORD PTR [rax+0x4]
 101011c:	mov    WORD PTR [rsp+0xaa],ax
 1010124:	mov    rax,QWORD PTR [rsp+0x50]
 1010129:	movzx  eax,WORD PTR [rax]
 101012c:	mov    WORD PTR [rsp+0xac],ax
 1010134:	xor    eax,eax
 1010136:	mov    WORD PTR [rsp+0xae],ax
 101013e:	mov    DWORD PTR [rsp+0x28],0x80
 1010146:	lea    rax,[rsp+0x2b0]
 101014e:	mov    QWORD PTR [rsp+0x20],rax
 1010153:	xor    r9d,r9d
 1010156:	lea    r8,[rsp+0xa0]
 101015e:	xor    edx,edx
 1010160:	mov    ecx,0x400
 1010165:	call   QWORD PTR [rip+0xffffffffffff0f85]        # 0x10010f0
 101016b:	mov    DWORD PTR [rsp+0x28],0x80
 1010173:	lea    rax,[rsp+0x1b0]
 101017b:	mov    QWORD PTR [rsp+0x20],rax
 1010180:	xor    r9d,r9d
 1010183:	lea    r8,[rsp+0xa0]
 101018b:	xor    edx,edx
 101018d:	mov    ecx,0x400
 1010192:	call   QWORD PTR [rip+0xffffffffffff0f68]        # 0x1001100
 1010198:	lea    r8,[rip+0xffffffffffff174d]        # 0x10018ec
 101019f:	mov    edx,0x80
 10101a4:	lea    rcx,[rsp+0x1b0]
 10101ac:	call   QWORD PTR [rip+0xffffffffffff115e]        # 0x1001310
 10101b2:	movzx  eax,WORD PTR [rip+0xde17]        # 0x101dfd0
 10101b9:	test   eax,eax
 10101bb:	je     0x10101ca
 10101bd:	lea    rax,[rip+0xde0c]        # 0x101dfd0
 10101c4:	mov    QWORD PTR [rbp-0x58],rax
 10101c8:	jmp    0x10101d5
 10101ca:	lea    rax,[rip+0xdf5f]        # 0x101e130
 10101d1:	mov    QWORD PTR [rbp-0x58],rax
 10101d5:	lea    r8,[rsp+0x2b0]
 10101dd:	mov    edx,0x80
 10101e2:	lea    rcx,[rsp+0x1b0]
 10101ea:	call   QWORD PTR [rip+0xffffffffffff1120]        # 0x1001310
 10101f0:	mov    DWORD PTR [rsp+0x20],eax
 10101f4:	mov    r9,QWORD PTR [rbp-0x58]
 10101f8:	lea    r8,[rip+0xac91]        # 0x101ae90
 10101ff:	mov    edx,0x2710
 1010204:	lea    rcx,[rip+0x5e65]        # 0x1016070
 101020b:	call   QWORD PTR [rip+0xffffffffffff0fe7]        # 0x10011f8
 1010211:	lea    rcx,[rip+0x5e58]        # 0x1016070
 1010218:	call   0x1008f00
 101021d:	mov    DWORD PTR [rsp+0x48],0x1
 1010225:	jmp    0x1010231
 1010227:	mov    eax,DWORD PTR [rsp+0x48]
 101022b:	inc    eax
 101022d:	mov    DWORD PTR [rsp+0x48],eax
 1010231:	mov    eax,DWORD PTR [rbp+0x10]
 1010234:	cmp    DWORD PTR [rsp+0x48],eax
 1010238:	jge    0x101081d
 101023e:	mov    DWORD PTR [rsp+0x44],0x1
 1010246:	movsxd rax,DWORD PTR [rsp+0x48]
 101024b:	mov    rcx,QWORD PTR [rbp+0x18]
 101024f:	mov    rax,QWORD PTR [rcx+rax*8]
 1010253:	movzx  eax,WORD PTR [rax]
 1010256:	cmp    eax,0x2d
 1010259:	jne    0x1010818
 101025f:	movsxd rax,DWORD PTR [rsp+0x48]
 1010264:	lea    rdx,[rip+0xffffffffffff1685]        # 0x10018f0
 101026b:	mov    rcx,QWORD PTR [rbp+0x18]
 101026f:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010273:	call   QWORD PTR [rip+0xffffffffffff10a7]        # 0x1001320
 1010279:	test   eax,eax
 101027b:	jne    0x10102b1
 101027d:	mov    ecx,0x1
 1010282:	call   0x1008f50
 1010287:	mov    DWORD PTR [rsp+0x44],eax
 101028b:	cmp    DWORD PTR [rsp+0x44],0x0
 1010290:	jne    0x101029b
 1010292:	mov    DWORD PTR [rbp-0x7c],0x1
 1010299:	jmp    0x10102a2
 101029b:	mov    DWORD PTR [rbp-0x7c],0x0
 10102a2:	mov    eax,DWORD PTR [rbp-0x7c]
 10102a5:	mov    ecx,DWORD PTR [rsp+0x40]
 10102a9:	or     ecx,eax
 10102ab:	mov    eax,ecx
 10102ad:	mov    DWORD PTR [rsp+0x40],eax
 10102b1:	movsxd rax,DWORD PTR [rsp+0x48]
 10102b6:	lea    rdx,[rip+0xffffffffffff1643]        # 0x1001900
 10102bd:	mov    rcx,QWORD PTR [rbp+0x18]
 10102c1:	mov    rcx,QWORD PTR [rcx+rax*8]
 10102c5:	call   QWORD PTR [rip+0xffffffffffff1055]        # 0x1001320
 10102cb:	test   eax,eax
 10102cd:	jne    0x1010300
 10102cf:	xor    ecx,ecx
 10102d1:	call   0x1008f50
 10102d6:	mov    DWORD PTR [rsp+0x44],eax
 10102da:	cmp    DWORD PTR [rsp+0x44],0x0
 10102df:	jne    0x10102ea
 10102e1:	mov    DWORD PTR [rbp-0x78],0x1
 10102e8:	jmp    0x10102f1
 10102ea:	mov    DWORD PTR [rbp-0x78],0x0
 10102f1:	mov    eax,DWORD PTR [rbp-0x78]
 10102f4:	mov    ecx,DWORD PTR [rsp+0x40]
 10102f8:	or     ecx,eax
 10102fa:	mov    eax,ecx
 10102fc:	mov    DWORD PTR [rsp+0x40],eax
 1010300:	movsxd rax,DWORD PTR [rsp+0x48]
 1010305:	lea    rdx,[rip+0xffffffffffff160c]        # 0x1001918
 101030c:	mov    rcx,QWORD PTR [rbp+0x18]
 1010310:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010314:	call   QWORD PTR [rip+0xffffffffffff1006]        # 0x1001320
 101031a:	test   eax,eax
 101031c:	jne    0x1010355
 101031e:	mov    ecx,0x2
 1010323:	call   0x1008f50
 1010328:	mov    DWORD PTR [rsp+0x44],eax
 101032c:	cmp    DWORD PTR [rsp+0x44],0x0
 1010331:	jne    0x101033d
 1010333:	mov    DWORD PTR [rsp+0x74],0x1
 101033b:	jmp    0x1010345
 101033d:	mov    DWORD PTR [rsp+0x74],0x0
 1010345:	mov    eax,DWORD PTR [rsp+0x74]
 1010349:	mov    ecx,DWORD PTR [rsp+0x40]
 101034d:	or     ecx,eax
 101034f:	mov    eax,ecx
 1010351:	mov    DWORD PTR [rsp+0x40],eax
 1010355:	movsxd rax,DWORD PTR [rsp+0x48]
 101035a:	lea    rdx,[rip+0xffffffffffff15cf]        # 0x1001930
 1010361:	mov    rcx,QWORD PTR [rbp+0x18]
 1010365:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010369:	call   QWORD PTR [rip+0xffffffffffff0fb1]        # 0x1001320
 101036f:	test   eax,eax
 1010371:	jne    0x10103aa
 1010373:	mov    ecx,0x3
 1010378:	call   0x1008f50
 101037d:	mov    DWORD PTR [rsp+0x44],eax
 1010381:	cmp    DWORD PTR [rsp+0x44],0x0
 1010386:	jne    0x1010392
 1010388:	mov    DWORD PTR [rsp+0x78],0x1
 1010390:	jmp    0x101039a
 1010392:	mov    DWORD PTR [rsp+0x78],0x0
 101039a:	mov    eax,DWORD PTR [rsp+0x78]
 101039e:	mov    ecx,DWORD PTR [rsp+0x40]
 10103a2:	or     ecx,eax
 10103a4:	mov    eax,ecx
 10103a6:	mov    DWORD PTR [rsp+0x40],eax
 10103aa:	movsxd rax,DWORD PTR [rsp+0x48]
 10103af:	lea    rdx,[rip+0xffffffffffff1592]        # 0x1001948
 10103b6:	mov    rcx,QWORD PTR [rbp+0x18]
 10103ba:	mov    rcx,QWORD PTR [rcx+rax*8]
 10103be:	call   QWORD PTR [rip+0xffffffffffff0f5c]        # 0x1001320
 10103c4:	test   eax,eax
 10103c6:	jne    0x1010408
 10103c8:	mov    ecx,0x4
 10103cd:	call   0x1008f50
 10103d2:	mov    DWORD PTR [rsp+0x44],eax
 10103d6:	cmp    DWORD PTR [rsp+0x44],0x0
 10103db:	jne    0x10103ea
 10103dd:	mov    DWORD PTR [rsp+0x4bc],0x1
 10103e8:	jmp    0x10103f5
 10103ea:	mov    DWORD PTR [rsp+0x4bc],0x0
 10103f5:	mov    eax,DWORD PTR [rsp+0x4bc]
 10103fc:	mov    ecx,DWORD PTR [rsp+0x40]
 1010400:	or     ecx,eax
 1010402:	mov    eax,ecx
 1010404:	mov    DWORD PTR [rsp+0x40],eax
 1010408:	movsxd rax,DWORD PTR [rsp+0x48]
 101040d:	lea    rdx,[rip+0xffffffffffff1544]        # 0x1001958
 1010414:	mov    rcx,QWORD PTR [rbp+0x18]
 1010418:	mov    rcx,QWORD PTR [rcx+rax*8]
 101041c:	call   QWORD PTR [rip+0xffffffffffff0efe]        # 0x1001320
 1010422:	test   eax,eax
 1010424:	jne    0x1010466
 1010426:	mov    ecx,0x5
 101042b:	call   0x1008f50
 1010430:	mov    DWORD PTR [rsp+0x44],eax
 1010434:	cmp    DWORD PTR [rsp+0x44],0x0
 1010439:	jne    0x1010448
 101043b:	mov    DWORD PTR [rsp+0x80],0x1
 1010446:	jmp    0x1010453
 1010448:	mov    DWORD PTR [rsp+0x80],0x0
 1010453:	mov    eax,DWORD PTR [rsp+0x80]
 101045a:	mov    ecx,DWORD PTR [rsp+0x40]
 101045e:	or     ecx,eax
 1010460:	mov    eax,ecx
 1010462:	mov    DWORD PTR [rsp+0x40],eax
 1010466:	movsxd rax,DWORD PTR [rsp+0x48]
 101046b:	lea    rdx,[rip+0xffffffffffff14f6]        # 0x1001968
 1010472:	mov    rcx,QWORD PTR [rbp+0x18]
 1010476:	mov    rcx,QWORD PTR [rcx+rax*8]
 101047a:	call   QWORD PTR [rip+0xffffffffffff0ea0]        # 0x1001320
 1010480:	test   eax,eax
 1010482:	jne    0x10104c4
 1010484:	mov    ecx,0x6
 1010489:	call   0x1008f50
 101048e:	mov    DWORD PTR [rsp+0x44],eax
 1010492:	cmp    DWORD PTR [rsp+0x44],0x0
 1010497:	jne    0x10104a6
 1010499:	mov    DWORD PTR [rsp+0x4cc],0x1
 10104a4:	jmp    0x10104b1
 10104a6:	mov    DWORD PTR [rsp+0x4cc],0x0
 10104b1:	mov    eax,DWORD PTR [rsp+0x4cc]
 10104b8:	mov    ecx,DWORD PTR [rsp+0x40]
 10104bc:	or     ecx,eax
 10104be:	mov    eax,ecx
 10104c0:	mov    DWORD PTR [rsp+0x40],eax
 10104c4:	movsxd rax,DWORD PTR [rsp+0x48]
 10104c9:	lea    rdx,[rip+0xffffffffffff14b0]        # 0x1001980
 10104d0:	mov    rcx,QWORD PTR [rbp+0x18]
 10104d4:	mov    rcx,QWORD PTR [rcx+rax*8]
 10104d8:	call   QWORD PTR [rip+0xffffffffffff0e42]        # 0x1001320
 10104de:	test   eax,eax
 10104e0:	jne    0x1010522
 10104e2:	mov    ecx,0x7
 10104e7:	call   0x1008f50
 10104ec:	mov    DWORD PTR [rsp+0x44],eax
 10104f0:	cmp    DWORD PTR [rsp+0x44],0x0
 10104f5:	jne    0x1010504
 10104f7:	mov    DWORD PTR [rsp+0x88],0x1
 1010502:	jmp    0x101050f
 1010504:	mov    DWORD PTR [rsp+0x88],0x0
 101050f:	mov    eax,DWORD PTR [rsp+0x88]
 1010516:	mov    ecx,DWORD PTR [rsp+0x40]
 101051a:	or     ecx,eax
 101051c:	mov    eax,ecx
 101051e:	mov    DWORD PTR [rsp+0x40],eax
 1010522:	movsxd rax,DWORD PTR [rsp+0x48]
 1010527:	lea    rdx,[rip+0xffffffffffff146a]        # 0x1001998
 101052e:	mov    rcx,QWORD PTR [rbp+0x18]
 1010532:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010536:	call   QWORD PTR [rip+0xffffffffffff0de4]        # 0x1001320
 101053c:	test   eax,eax
 101053e:	jne    0x1010572
 1010540:	cmp    DWORD PTR [rsp+0x44],0x0
 1010545:	jne    0x1010554
 1010547:	mov    DWORD PTR [rsp+0x4c4],0x1
 1010552:	jmp    0x101055f
 1010554:	mov    DWORD PTR [rsp+0x4c4],0x0
 101055f:	mov    eax,DWORD PTR [rsp+0x4c4]
 1010566:	mov    ecx,DWORD PTR [rsp+0x40]
 101056a:	or     ecx,eax
 101056c:	mov    eax,ecx
 101056e:	mov    DWORD PTR [rsp+0x40],eax
 1010572:	movsxd rax,DWORD PTR [rsp+0x48]
 1010577:	lea    rdx,[rip+0xffffffffffff142a]        # 0x10019a8
 101057e:	mov    rcx,QWORD PTR [rbp+0x18]
 1010582:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010586:	call   QWORD PTR [rip+0xffffffffffff0d94]        # 0x1001320
 101058c:	test   eax,eax
 101058e:	jne    0x10105f7
 1010590:	mov    eax,DWORD PTR [rsp+0x48]
 1010594:	inc    eax
 1010596:	cmp    eax,DWORD PTR [rbp+0x10]
 1010599:	jge    0x10105c5
 101059b:	mov    eax,DWORD PTR [rsp+0x48]
 101059f:	inc    eax
 10105a1:	cdqe   
 10105a3:	mov    rcx,QWORD PTR [rbp+0x18]
 10105a7:	mov    rcx,QWORD PTR [rcx+rax*8]
 10105ab:	call   QWORD PTR [rip+0xffffffffffff0bdf]        # 0x1001190
 10105b1:	mov    ecx,0x64
 10105b6:	sub    ecx,eax
 10105b8:	mov    eax,ecx
 10105ba:	mov    ecx,eax
 10105bc:	call   0x10090e0
 10105c1:	mov    DWORD PTR [rsp+0x44],eax
 10105c5:	cmp    DWORD PTR [rsp+0x44],0x0
 10105ca:	jne    0x10105d9
 10105cc:	mov    DWORD PTR [rsp+0x4b4],0x1
 10105d7:	jmp    0x10105e4
 10105d9:	mov    DWORD PTR [rsp+0x4b4],0x0
 10105e4:	mov    eax,DWORD PTR [rsp+0x4b4]
 10105eb:	mov    ecx,DWORD PTR [rsp+0x40]
 10105ef:	or     ecx,eax
 10105f1:	mov    eax,ecx
 10105f3:	mov    DWORD PTR [rsp+0x40],eax
 10105f7:	movsxd rax,DWORD PTR [rsp+0x48]
 10105fc:	lea    rdx,[rip+0xffffffffffff13bd]        # 0x10019c0
 1010603:	mov    rcx,QWORD PTR [rbp+0x18]
 1010607:	mov    rcx,QWORD PTR [rcx+rax*8]
 101060b:	call   QWORD PTR [rip+0xffffffffffff0d0f]        # 0x1001320
 1010611:	test   eax,eax
 1010613:	jne    0x101065c
 1010615:	mov    ecx,0x1
 101061a:	call   0x1009270
 101061f:	mov    DWORD PTR [rsp+0x44],eax
 1010623:	mov    eax,DWORD PTR [rsp+0x44]
 1010627:	mov    DWORD PTR [rsp+0x58],eax
 101062b:	mov    DWORD PTR [rsp+0x60],0x1
 1010633:	cmp    DWORD PTR [rsp+0x44],0x0
 1010638:	jne    0x1010644
 101063a:	mov    DWORD PTR [rsp+0x70],0x1
 1010642:	jmp    0x101064c
 1010644:	mov    DWORD PTR [rsp+0x70],0x0
 101064c:	mov    eax,DWORD PTR [rsp+0x70]
 1010650:	mov    ecx,DWORD PTR [rsp+0x40]
 1010654:	or     ecx,eax
 1010656:	mov    eax,ecx
 1010658:	mov    DWORD PTR [rsp+0x40],eax
 101065c:	movsxd rax,DWORD PTR [rsp+0x48]
 1010661:	lea    rdx,[rip+0xffffffffffff1368]        # 0x10019d0
 1010668:	mov    rcx,QWORD PTR [rbp+0x18]
 101066c:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010670:	call   QWORD PTR [rip+0xffffffffffff0caa]        # 0x1001320
 1010676:	test   eax,eax
 1010678:	jne    0x10106c1
 101067a:	mov    ecx,0x2
 101067f:	call   0x1009270
 1010684:	mov    DWORD PTR [rsp+0x44],eax
 1010688:	mov    eax,DWORD PTR [rsp+0x44]
 101068c:	mov    DWORD PTR [rsp+0x58],eax
 1010690:	mov    DWORD PTR [rsp+0x60],0x2
 1010698:	cmp    DWORD PTR [rsp+0x44],0x0
 101069d:	jne    0x10106a9
 101069f:	mov    DWORD PTR [rsp+0x6c],0x1
 10106a7:	jmp    0x10106b1
 10106a9:	mov    DWORD PTR [rsp+0x6c],0x0
 10106b1:	mov    eax,DWORD PTR [rsp+0x6c]
 10106b5:	mov    ecx,DWORD PTR [rsp+0x40]
 10106b9:	or     ecx,eax
 10106bb:	mov    eax,ecx
 10106bd:	mov    DWORD PTR [rsp+0x40],eax
 10106c1:	movsxd rax,DWORD PTR [rsp+0x48]
 10106c6:	lea    rdx,[rip+0xffffffffffff131b]        # 0x10019e8
 10106cd:	mov    rcx,QWORD PTR [rbp+0x18]
 10106d1:	mov    rcx,QWORD PTR [rcx+rax*8]
 10106d5:	call   QWORD PTR [rip+0xffffffffffff0c45]        # 0x1001320
 10106db:	test   eax,eax
 10106dd:	jne    0x1010741
 10106df:	cmp    DWORD PTR [rsp+0x58],0x0
 10106e4:	je     0x1010718
 10106e6:	mov    eax,DWORD PTR [rsp+0x48]
 10106ea:	inc    eax
 10106ec:	cmp    eax,DWORD PTR [rbp+0x10]
 10106ef:	jge    0x1010710
 10106f1:	mov    eax,DWORD PTR [rsp+0x48]
 10106f5:	inc    eax
 10106f7:	cdqe   
 10106f9:	mov    rcx,QWORD PTR [rbp+0x18]
 10106fd:	mov    rdx,QWORD PTR [rcx+rax*8]
 1010701:	mov    ecx,DWORD PTR [rsp+0x60]
 1010705:	call   0x1009730
 101070a:	mov    DWORD PTR [rsp+0x44],eax
 101070e:	jmp    0x1010718
 1010710:	mov    eax,DWORD PTR [rsp+0x48]
 1010714:	mov    DWORD PTR [rsp+0x5c],eax
 1010718:	cmp    DWORD PTR [rsp+0x44],0x0
 101071d:	jne    0x1010729
 101071f:	mov    DWORD PTR [rsp+0x7c],0x1
 1010727:	jmp    0x1010731
 1010729:	mov    DWORD PTR [rsp+0x7c],0x0
 1010731:	mov    eax,DWORD PTR [rsp+0x7c]
 1010735:	mov    ecx,DWORD PTR [rsp+0x40]
 1010739:	or     ecx,eax
 101073b:	mov    eax,ecx
 101073d:	mov    DWORD PTR [rsp+0x40],eax
 1010741:	movsxd rax,DWORD PTR [rsp+0x48]
 1010746:	lea    rdx,[rip+0xffffffffffff12b3]        # 0x1001a00
 101074d:	mov    rcx,QWORD PTR [rbp+0x18]
 1010751:	mov    rcx,QWORD PTR [rcx+rax*8]
 1010755:	call   QWORD PTR [rip+0xffffffffffff0bc5]        # 0x1001320
 101075b:	test   eax,eax
 101075d:	jne    0x101079a
 101075f:	call   0x1009400
 1010764:	mov    DWORD PTR [rsp+0x44],eax
 1010768:	cmp    DWORD PTR [rsp+0x44],0x0
 101076d:	jne    0x101077c
 101076f:	mov    DWORD PTR [rsp+0x84],0x1
 101077a:	jmp    0x1010787
 101077c:	mov    DWORD PTR [rsp+0x84],0x0
 1010787:	mov    eax,DWORD PTR [rsp+0x84]
 101078e:	mov    ecx,DWORD PTR [rsp+0x40]
 1010792:	or     ecx,eax
 1010794:	mov    eax,ecx
 1010796:	mov    DWORD PTR [rsp+0x40],eax
 101079a:	movsxd rax,DWORD PTR [rsp+0x48]
 101079f:	lea    rdx,[rip+0xffffffffffff127a]        # 0x1001a20
 10107a6:	mov    rcx,QWORD PTR [rbp+0x18]
 10107aa:	mov    rcx,QWORD PTR [rcx+rax*8]
 10107ae:	call   QWORD PTR [rip+0xffffffffffff0b6c]        # 0x1001320
 10107b4:	test   eax,eax
 10107b6:	jne    0x1010818
 10107b8:	mov    eax,DWORD PTR [rsp+0x48]
 10107bc:	add    eax,0x2
 10107bf:	cmp    eax,DWORD PTR [rbp+0x10]
 10107c2:	jge    0x10107ef
 10107c4:	mov    eax,DWORD PTR [rsp+0x48]
 10107c8:	add    eax,0x2
 10107cb:	cdqe   
 10107cd:	mov    ecx,DWORD PTR [rsp+0x48]
 10107d1:	inc    ecx
 10107d3:	movsxd rcx,ecx
 10107d6:	mov    rdx,QWORD PTR [rbp+0x18]
 10107da:	mov    rdx,QWORD PTR [rdx+rax*8]
 10107de:	mov    rax,QWORD PTR [rbp+0x18]
 10107e2:	mov    rcx,QWORD PTR [rax+rcx*8]
 10107e6:	call   0x1009590
 10107eb:	mov    DWORD PTR [rsp+0x44],eax
 10107ef:	cmp    DWORD PTR [rsp+0x44],0x0
 10107f4:	jne    0x1010800
 10107f6:	mov    DWORD PTR [rsp+0x68],0x1
 10107fe:	jmp    0x1010808
 1010800:	mov    DWORD PTR [rsp+0x68],0x0
 1010808:	mov    eax,DWORD PTR [rsp+0x68]
 101080c:	mov    ecx,DWORD PTR [rsp+0x40]
 1010810:	or     ecx,eax
 1010812:	mov    eax,ecx
 1010814:	mov    DWORD PTR [rsp+0x40],eax
 1010818:	jmp    0x1010227
 101081d:	cmp    DWORD PTR [rsp+0x58],0x0
 1010822:	je     0x101084f
 1010824:	cmp    DWORD PTR [rsp+0x5c],0x0
 1010829:	jle    0x101084f
 101082b:	mov    eax,DWORD PTR [rsp+0x5c]
 101082f:	inc    eax
 1010831:	cmp    eax,DWORD PTR [rbp+0x10]
 1010834:	jge    0x101084f
 1010836:	mov    eax,DWORD PTR [rsp+0x5c]
 101083a:	inc    eax
 101083c:	cdqe   
 101083e:	mov    rcx,QWORD PTR [rbp+0x18]
 1010842:	mov    rdx,QWORD PTR [rcx+rax*8]
 1010846:	mov    ecx,DWORD PTR [rsp+0x60]
 101084a:	call   0x1009730
 101084f:	call   0x10097d0
 1010854:	movzx  eax,WORD PTR [rip+0xd775]        # 0x101dfd0
 101085b:	test   eax,eax
 101085d:	je     0x101086c
 101085f:	mov    DWORD PTR [rsp+0x4b8],0x30
 101086a:	jmp    0x1010877
 101086c:	mov    DWORD PTR [rsp+0x4b8],0x51
 1010877:	mov    r8d,0x1000
 101087d:	lea    rdx,[rip+0xa60c]        # 0x101ae90
 1010884:	mov    ecx,DWORD PTR [rsp+0x4b8]
 101088b:	call   0x1008800
 1010890:	lea    rcx,[rbp-0x70]
 1010894:	call   0x10038c0
 1010899:	lea    rcx,[rbp-0x70]
 101089d:	call   0x1003860
 10108a2:	mov    QWORD PTR [rsp+0x50],rax
 10108a7:	mov    rax,QWORD PTR [rsp+0x50]
 10108ac:	mov    eax,DWORD PTR [rax+0x14]
 10108af:	add    eax,0x76c
 10108b4:	mov    WORD PTR [rsp+0xa0],ax
 10108bc:	mov    rax,QWORD PTR [rsp+0x50]
 10108c1:	mov    eax,DWORD PTR [rax+0x10]
 10108c4:	inc    eax
 10108c6:	mov    WORD PTR [rsp+0xa2],ax
 10108ce:	mov    rax,QWORD PTR [rsp+0x50]
 10108d3:	movzx  eax,WORD PTR [rax+0x18]
 10108d7:	mov    WORD PTR [rsp+0xa4],ax
 10108df:	mov    rax,QWORD PTR [rsp+0x50]
 10108e4:	movzx  eax,WORD PTR [rax+0xc]
 10108e8:	mov    WORD PTR [rsp+0xa6],ax
 10108f0:	mov    rax,QWORD PTR [rsp+0x50]
 10108f5:	movzx  eax,WORD PTR [rax+0x8]
 10108f9:	mov    WORD PTR [rsp+0xa8],ax
 1010901:	mov    rax,QWORD PTR [rsp+0x50]
 1010906:	movzx  eax,WORD PTR [rax+0x4]
 101090a:	mov    WORD PTR [rsp+0xaa],ax
 1010912:	mov    rax,QWORD PTR [rsp+0x50]
 1010917:	movzx  eax,WORD PTR [rax]
 101091a:	mov    WORD PTR [rsp+0xac],ax
 1010922:	xor    eax,eax
 1010924:	mov    WORD PTR [rsp+0xae],ax
 101092c:	mov    DWORD PTR [rsp+0x28],0x80
 1010934:	lea    rax,[rsp+0x2b0]
 101093c:	mov    QWORD PTR [rsp+0x20],rax
 1010941:	xor    r9d,r9d
 1010944:	lea    r8,[rsp+0xa0]
 101094c:	xor    edx,edx
 101094e:	mov    ecx,0x400
 1010953:	call   QWORD PTR [rip+0xffffffffffff0797]        # 0x10010f0
 1010959:	mov    DWORD PTR [rsp+0x28],0x80
 1010961:	lea    rax,[rsp+0x1b0]
 1010969:	mov    QWORD PTR [rsp+0x20],rax
 101096e:	xor    r9d,r9d
 1010971:	lea    r8,[rsp+0xa0]
 1010979:	xor    edx,edx
 101097b:	mov    ecx,0x400
 1010980:	call   QWORD PTR [rip+0xffffffffffff077a]        # 0x1001100
 1010986:	lea    r8,[rip+0xffffffffffff0f5f]        # 0x10018ec
 101098d:	mov    edx,0x80
 1010992:	lea    rcx,[rsp+0x1b0]
 101099a:	call   QWORD PTR [rip+0xffffffffffff0970]        # 0x1001310
 10109a0:	movzx  eax,WORD PTR [rip+0xd629]        # 0x101dfd0
 10109a7:	test   eax,eax
 10109a9:	je     0x10109b8
 10109ab:	lea    rax,[rip+0xd61e]        # 0x101dfd0
 10109b2:	mov    QWORD PTR [rbp-0x48],rax
 10109b6:	jmp    0x10109c3
 10109b8:	lea    rax,[rip+0xd771]        # 0x101e130
 10109bf:	mov    QWORD PTR [rbp-0x48],rax
 10109c3:	lea    r8,[rsp+0x2b0]
 10109cb:	mov    edx,0x80
 10109d0:	lea    rcx,[rsp+0x1b0]
 10109d8:	call   QWORD PTR [rip+0xffffffffffff0932]        # 0x1001310
 10109de:	mov    DWORD PTR [rsp+0x20],eax
 10109e2:	mov    r9,QWORD PTR [rbp-0x48]
 10109e6:	lea    r8,[rip+0xa4a3]        # 0x101ae90
 10109ed:	mov    edx,0x2710
 10109f2:	lea    rcx,[rip+0x5677]        # 0x1016070
 10109f9:	call   QWORD PTR [rip+0xffffffffffff07f9]        # 0x10011f8
 10109ff:	lea    rcx,[rip+0x566a]        # 0x1016070
 1010a06:	call   0x1008f00
 1010a0b:	mov    r8d,0x1000
 1010a11:	lea    rdx,[rip+0xa478]        # 0x101ae90
 1010a18:	mov    ecx,0x36
 1010a1d:	call   0x1008800
 1010a22:	cmp    DWORD PTR [rsp+0x40],0x0
 1010a27:	je     0x1010a36
 1010a29:	mov    DWORD PTR [rsp+0x4c0],0x38
 1010a34:	jmp    0x1010a41
 1010a36:	mov    DWORD PTR [rsp+0x4c0],0x37
 1010a41:	mov    r8d,0x80
 1010a47:	lea    rdx,[rsp+0xb0]
 1010a4f:	mov    ecx,DWORD PTR [rsp+0x4c0]
 1010a56:	call   0x1008800
 1010a5b:	cmp    DWORD PTR [rsp+0x40],0x0
 1010a60:	je     0x1010a6f
 1010a62:	mov    DWORD PTR [rsp+0x4c8],0x1
 1010a6d:	jmp    0x1010a7a
 1010a6f:	mov    DWORD PTR [rsp+0x4c8],0x0
 1010a7a:	lea    rax,[rsp+0xb0]
 1010a82:	mov    QWORD PTR [rsp+0x28],rax
 1010a87:	mov    eax,DWORD PTR [rsp+0x4c8]
 1010a8e:	mov    DWORD PTR [rsp+0x20],eax
 1010a92:	lea    r9,[rip+0xffffffffffff0e37]        # 0x10018d0
 1010a99:	lea    r8,[rip+0xa3f0]        # 0x101ae90
 1010aa0:	mov    edx,0x2710
 1010aa5:	lea    rcx,[rip+0x55c4]        # 0x1016070
 1010aac:	call   QWORD PTR [rip+0xffffffffffff0746]        # 0x10011f8
 1010ab2:	lea    rcx,[rip+0x55b7]        # 0x1016070
 1010ab9:	call   0x1008f00
 1010abe:	movzx  eax,WORD PTR [rip+0xd3db]        # 0x101dea0
 1010ac5:	test   eax,eax
 1010ac7:	je     0x1010add
 1010ac9:	lea    rdx,[rsp+0xb0]
 1010ad1:	lea    rcx,[rip+0xd3c8]        # 0x101dea0
 1010ad8:	call   0x10067e0
 1010add:	cmp    DWORD PTR [rsp+0x64],0x0
 1010ae2:	je     0x1010b1c
 1010ae4:	lea    rcx,[rip+0xf835]        # 0x1020320
 1010aeb:	call   0x100f040
 1010af0:	test   eax,eax
 1010af2:	je     0x1010b1c
 1010af4:	lea    rcx,[rip+0xf825]        # 0x1020320
 1010afb:	call   0x100f0e0
 1010b00:	mov    QWORD PTR [rbp-0x38],rax
 1010b04:	mov    rax,QWORD PTR [rbp-0x38]
 1010b08:	mov    rax,QWORD PTR [rax]
 1010b0b:	mov    rcx,QWORD PTR [rbp-0x38]
 1010b0f:	call   QWORD PTR [rax+0x2c0]
 1010b15:	mov    ecx,eax
 1010b17:	call   0x1006e20
 1010b1c:	call   0x1007e70
 1010b21:	call   0x1008290
 1010b26:	lea    rcx,[rip+0xf7e3]        # 0x1020310
 1010b2d:	call   0x100f620
 1010b32:	lea    rcx,[rip+0xf7e7]        # 0x1020320
 1010b39:	call   0x100f100
 1010b3e:	lea    rcx,[rip+0xf7d3]        # 0x1020318
 1010b45:	call   0x100f100
 1010b4a:	mov    rax,QWORD PTR [rip+0xd467]        # 0x101dfb8
 1010b51:	mov    QWORD PTR [rbp-0x20],rax
 1010b55:	mov    rax,QWORD PTR [rbp-0x20]
 1010b59:	mov    QWORD PTR [rbp-0x50],rax
 1010b5d:	cmp    QWORD PTR [rbp-0x50],0x0
 1010b62:	je     0x1010b7c
 1010b64:	mov    edx,0x3
 1010b69:	mov    rcx,QWORD PTR [rbp-0x50]
 1010b6d:	call   0x100e940
 1010b72:	mov    QWORD PTR [rsp+0x90],rax
 1010b7a:	jmp    0x1010b88
 1010b7c:	mov    QWORD PTR [rsp+0x90],0x0
 1010b88:	call   QWORD PTR [rip+0xffffffffffff083a]        # 0x10013c8
 1010b8e:	mov    rcx,QWORD PTR [rip+0xd7c3]        # 0x101e358
 1010b95:	call   0x10123ae
 1010b9a:	cmp    DWORD PTR [rsp+0x40],0x0
 1010b9f:	je     0x1010baa
 1010ba1:	mov    DWORD PTR [rbp-0x80],0x1
 1010ba8:	jmp    0x1010bb1
 1010baa:	mov    DWORD PTR [rbp-0x80],0x0
 1010bb1:	mov    eax,DWORD PTR [rbp-0x80]
 1010bb4:	jmp    0x1010bbb
 1010bb6:	jmp    0x1010bbb
 1010bb8:	mov    eax,DWORD PTR [rbp-0x60]
 1010bbb:	mov    rcx,QWORD PTR [rbp-0x18]
 1010bbf:	xor    rcx,rsp
 1010bc2:	call   0x1012040
 1010bc7:	add    rsp,0x548
 1010bce:	pop    rdi
 1010bcf:	pop    rbp
 1010bd0:	ret    
 1010bd1:	int3   
 1010bd2:	int3   
 1010bd3:	int3   
 1010bd4:	int3   
 1010bd5:	int3   
 1010bd6:	int3   
 1010bd7:	int3   
 1010bd8:	int3   
 1010bd9:	int3   
 1010bda:	int3   
 1010bdb:	int3   
 1010bdc:	int3   
 1010bdd:	int3   
 1010bde:	int3   
 1010bdf:	int3   
 1010be0:	mov    QWORD PTR [rsp+0x8],rcx
 1010be5:	push   rbp
 1010be6:	mov    rbp,rsp
 1010be9:	mov    rax,QWORD PTR [rsp+0x10]
 1010bee:	mov    QWORD PTR [rax],0x0
 1010bf5:	mov    rax,QWORD PTR [rsp+0x10]
 1010bfa:	pop    rbp
 1010bfb:	ret    
 1010bfc:	int3   
 1010bfd:	int3   
 1010bfe:	int3   
 1010bff:	int3   
 1010c00:	int3   
 1010c01:	int3   
 1010c02:	int3   
 1010c03:	int3   
 1010c04:	int3   
 1010c05:	int3   
 1010c06:	int3   
 1010c07:	int3   
 1010c08:	int3   
 1010c09:	int3   
 1010c0a:	int3   
 1010c0b:	int3   
 1010c0c:	int3   
 1010c0d:	int3   
 1010c0e:	int3   
 1010c0f:	int3   
 1010c10:	mov    QWORD PTR [rsp+0x8],rcx
 1010c15:	push   rbp
 1010c16:	mov    rbp,rsp
 1010c19:	sub    rsp,0x20
 1010c1d:	mov    rax,QWORD PTR [rsp+0x30]
 1010c22:	cmp    QWORD PTR [rax],0x0
 1010c26:	je     0x1010c3e
 1010c28:	mov    rax,QWORD PTR [rsp+0x30]
 1010c2d:	mov    rax,QWORD PTR [rax]
 1010c30:	mov    rcx,QWORD PTR [rsp+0x30]
 1010c35:	mov    rcx,QWORD PTR [rcx]
 1010c38:	mov    rax,QWORD PTR [rax]
 1010c3b:	call   QWORD PTR [rax+0x10]
 1010c3e:	add    rsp,0x20
 1010c42:	pop    rbp
 1010c43:	ret    
 1010c44:	int3   
 1010c45:	int3   
 1010c46:	int3   
 1010c47:	int3   
 1010c48:	int3   
 1010c49:	int3   
 1010c4a:	int3   
 1010c4b:	int3   
 1010c4c:	int3   
 1010c4d:	int3   
 1010c4e:	int3   
 1010c4f:	int3   
 1010c50:	mov    QWORD PTR [rsp+0x8],rcx
 1010c55:	push   rbp
 1010c56:	mov    rbp,rsp
 1010c59:	sub    rsp,0x10
 1010c5d:	mov    rax,QWORD PTR [rsp+0x20]
 1010c62:	cmp    QWORD PTR [rax],0x0
 1010c66:	je     0x1010c71
 1010c68:	mov    DWORD PTR [rsp],0x1
 1010c6f:	jmp    0x1010c78
 1010c71:	mov    DWORD PTR [rsp],0x0
 1010c78:	mov    eax,DWORD PTR [rsp]
 1010c7b:	add    rsp,0x10
 1010c7f:	pop    rbp
 1010c80:	ret    
 1010c81:	int3   
 1010c82:	int3   
 1010c83:	int3   
 1010c84:	int3   
 1010c85:	int3   
 1010c86:	int3   
 1010c87:	int3   
 1010c88:	int3   
 1010c89:	int3   
 1010c8a:	int3   
 1010c8b:	int3   
 1010c8c:	int3   
 1010c8d:	int3   
 1010c8e:	int3   
 1010c8f:	int3   
 1010c90:	mov    QWORD PTR [rsp+0x8],rcx
 1010c95:	push   rbp
 1010c96:	mov    rbp,rsp
 1010c99:	mov    rax,QWORD PTR [rsp+0x10]
 1010c9e:	pop    rbp
 1010c9f:	ret    
 1010ca0:	int3   
 1010ca1:	int3   
 1010ca2:	int3   
 1010ca3:	int3   
 1010ca4:	int3   
 1010ca5:	int3   
 1010ca6:	int3   
 1010ca7:	int3   
 1010ca8:	int3   
 1010ca9:	int3   
 1010caa:	int3   
 1010cab:	int3   
 1010cac:	int3   
 1010cad:	int3   
 1010cae:	int3   
 1010caf:	int3   
 1010cb0:	mov    QWORD PTR [rsp+0x8],rcx
 1010cb5:	push   rbp
 1010cb6:	mov    rbp,rsp
 1010cb9:	mov    rax,QWORD PTR [rsp+0x10]
 1010cbe:	mov    rax,QWORD PTR [rax]
 1010cc1:	pop    rbp
 1010cc2:	ret    
 1010cc3:	int3   
 1010cc4:	int3   
 1010cc5:	int3   
 1010cc6:	int3   
 1010cc7:	int3   
 1010cc8:	int3   
 1010cc9:	int3   
 1010cca:	int3   
 1010ccb:	int3   
 1010ccc:	int3   
 1010ccd:	int3   
 1010cce:	int3   
 1010ccf:	int3   
 1010cd0:	mov    QWORD PTR [rsp+0x8],rcx
 1010cd5:	push   rbp
 1010cd6:	mov    rbp,rsp
 1010cd9:	mov    rax,QWORD PTR [rsp+0x10]
 1010cde:	mov    QWORD PTR [rax],0x0
 1010ce5:	mov    rax,QWORD PTR [rsp+0x10]
 1010cea:	pop    rbp
 1010ceb:	ret    
 1010cec:	int3   
 1010ced:	int3   
 1010cee:	int3   
 1010cef:	int3   
 1010cf0:	int3   
 1010cf1:	int3   
 1010cf2:	int3   
 1010cf3:	int3   
 1010cf4:	int3   
 1010cf5:	int3   
 1010cf6:	int3   
 1010cf7:	int3   
 1010cf8:	int3   
 1010cf9:	int3   
 1010cfa:	int3   
 1010cfb:	int3   
 1010cfc:	int3   
 1010cfd:	int3   
 1010cfe:	int3   
 1010cff:	int3   
 1010d00:	mov    QWORD PTR [rsp+0x10],rdx
 1010d05:	mov    QWORD PTR [rsp+0x8],rcx
 1010d0a:	push   rbp
 1010d0b:	mov    rbp,rsp
 1010d0e:	mov    rax,QWORD PTR [rsp+0x10]
 1010d13:	mov    rcx,QWORD PTR [rsp+0x18]
 1010d18:	mov    QWORD PTR [rax],rcx
 1010d1b:	mov    rax,QWORD PTR [rsp+0x10]
 1010d20:	pop    rbp
 1010d21:	ret    
 1010d22:	int3   
 1010d23:	int3   
 1010d24:	int3   
 1010d25:	int3   
 1010d26:	int3   
 1010d27:	int3   
 1010d28:	int3   
 1010d29:	int3   
 1010d2a:	int3   
 1010d2b:	int3   
 1010d2c:	int3   
 1010d2d:	int3   
 1010d2e:	int3   
 1010d2f:	int3   
 1010d30:	mov    QWORD PTR [rsp+0x8],rcx
 1010d35:	push   rbp
 1010d36:	mov    rbp,rsp
 1010d39:	sub    rsp,0x20
 1010d3d:	mov    rax,QWORD PTR [rsp+0x30]
 1010d42:	cmp    QWORD PTR [rax],0x0
 1010d46:	je     0x1010d5e
 1010d48:	mov    rax,QWORD PTR [rsp+0x30]
 1010d4d:	mov    rax,QWORD PTR [rax]
 1010d50:	mov    rcx,QWORD PTR [rsp+0x30]
 1010d55:	mov    rcx,QWORD PTR [rcx]
 1010d58:	mov    rax,QWORD PTR [rax]
 1010d5b:	call   QWORD PTR [rax+0x10]
 1010d5e:	add    rsp,0x20
 1010d62:	pop    rbp
 1010d63:	ret    
 1010d64:	int3   
 1010d65:	int3   
 1010d66:	int3   
 1010d67:	int3   
 1010d68:	int3   
 1010d69:	int3   
 1010d6a:	int3   
 1010d6b:	int3   
 1010d6c:	int3   
 1010d6d:	int3   
 1010d6e:	int3   
 1010d6f:	int3   
 1010d70:	mov    QWORD PTR [rsp+0x8],rcx
 1010d75:	push   rbp
 1010d76:	mov    rbp,rsp
 1010d79:	mov    rax,QWORD PTR [rsp+0x10]
 1010d7e:	pop    rbp
 1010d7f:	ret    
 1010d80:	int3   
 1010d81:	int3   
 1010d82:	int3   
 1010d83:	int3   
 1010d84:	int3   
 1010d85:	int3   
 1010d86:	int3   
 1010d87:	int3   
 1010d88:	int3   
 1010d89:	int3   
 1010d8a:	int3   
 1010d8b:	int3   
 1010d8c:	int3   
 1010d8d:	int3   
 1010d8e:	int3   
 1010d8f:	int3   
 1010d90:	mov    QWORD PTR [rsp+0x8],rcx
 1010d95:	push   rbp
 1010d96:	mov    rbp,rsp
 1010d99:	sub    rsp,0x10
 1010d9d:	mov    rax,QWORD PTR [rsp+0x20]
 1010da2:	cmp    QWORD PTR [rax],0x0
 1010da6:	je     0x1010db1
 1010da8:	mov    DWORD PTR [rsp],0x0
 1010daf:	jmp    0x1010db8
 1010db1:	mov    DWORD PTR [rsp],0x1
 1010db8:	mov    eax,DWORD PTR [rsp]
 1010dbb:	add    rsp,0x10
 1010dbf:	pop    rbp
 1010dc0:	ret    
 1010dc1:	int3   
 1010dc2:	int3   
 1010dc3:	int3   
 1010dc4:	int3   
 1010dc5:	int3   
 1010dc6:	int3   
 1010dc7:	int3   
 1010dc8:	int3   
 1010dc9:	int3   
 1010dca:	int3   
 1010dcb:	int3   
 1010dcc:	int3   
 1010dcd:	int3   
 1010dce:	int3   
 1010dcf:	int3   
 1010dd0:	mov    QWORD PTR [rsp+0x8],rcx
 1010dd5:	push   rbp
 1010dd6:	mov    rbp,rsp
 1010dd9:	mov    rax,QWORD PTR [rsp+0x10]
 1010dde:	mov    rax,QWORD PTR [rax]
 1010de1:	pop    rbp
 1010de2:	ret    
 1010de3:	int3   
 1010de4:	int3   
 1010de5:	int3   
 1010de6:	int3   
 1010de7:	int3   
 1010de8:	int3   
 1010de9:	int3   
 1010dea:	int3   
 1010deb:	int3   
 1010dec:	int3   
 1010ded:	int3   
 1010dee:	int3   
 1010def:	int3   
 1010df0:	mov    QWORD PTR [rsp+0x8],rcx
 1010df5:	push   rbp
 1010df6:	mov    rbp,rsp
 1010df9:	sub    rsp,0x20
 1010dfd:	mov    rax,QWORD PTR [rsp+0x30]
 1010e02:	cmp    QWORD PTR [rax],0x0
 1010e06:	je     0x1010e1e
 1010e08:	mov    rax,QWORD PTR [rsp+0x30]
 1010e0d:	mov    rax,QWORD PTR [rax]
 1010e10:	mov    rcx,QWORD PTR [rsp+0x30]
 1010e15:	mov    rcx,QWORD PTR [rcx]
 1010e18:	mov    rax,QWORD PTR [rax]
 1010e1b:	call   QWORD PTR [rax+0x10]
 1010e1e:	mov    rax,QWORD PTR [rsp+0x30]
 1010e23:	mov    QWORD PTR [rax],0x0
 1010e2a:	add    rsp,0x20
 1010e2e:	pop    rbp
 1010e2f:	ret    
 1010e30:	int3   
 1010e31:	int3   
 1010e32:	int3   
 1010e33:	int3   
 1010e34:	int3   
 1010e35:	int3   
 1010e36:	int3   
 1010e37:	int3   
 1010e38:	int3   
 1010e39:	int3   
 1010e3a:	int3   
 1010e3b:	int3   
 1010e3c:	int3   
 1010e3d:	int3   
 1010e3e:	int3   
 1010e3f:	int3   
 1010e40:	mov    QWORD PTR [rsp+0x10],rdx
 1010e45:	mov    QWORD PTR [rsp+0x8],rcx
 1010e4a:	push   rbp
 1010e4b:	mov    rbp,rsp
 1010e4e:	mov    rax,QWORD PTR [rsp+0x10]
 1010e53:	mov    rcx,QWORD PTR [rsp+0x18]
 1010e58:	mov    QWORD PTR [rax],rcx
 1010e5b:	mov    rax,QWORD PTR [rsp+0x10]
 1010e60:	pop    rbp
 1010e61:	ret    
 1010e62:	int3   
 1010e63:	int3   
 1010e64:	int3   
 1010e65:	int3   
 1010e66:	int3   
 1010e67:	int3   
 1010e68:	int3   
 1010e69:	int3   
 1010e6a:	int3   
 1010e6b:	int3   
 1010e6c:	int3   
 1010e6d:	int3   
 1010e6e:	int3   
 1010e6f:	int3   
 1010e70:	mov    QWORD PTR [rsp+0x8],rcx
 1010e75:	push   rbp
 1010e76:	mov    rbp,rsp
 1010e79:	sub    rsp,0x20
 1010e7d:	mov    rax,QWORD PTR [rsp+0x30]
 1010e82:	cmp    QWORD PTR [rax],0x0
 1010e86:	je     0x1010e9e
 1010e88:	mov    rax,QWORD PTR [rsp+0x30]
 1010e8d:	mov    rax,QWORD PTR [rax]
 1010e90:	mov    rcx,QWORD PTR [rsp+0x30]
 1010e95:	mov    rcx,QWORD PTR [rcx]
 1010e98:	mov    rax,QWORD PTR [rax]
 1010e9b:	call   QWORD PTR [rax+0x10]
 1010e9e:	add    rsp,0x20
 1010ea2:	pop    rbp
 1010ea3:	ret    
 1010ea4:	int3   
 1010ea5:	int3   
 1010ea6:	int3   
 1010ea7:	int3   
 1010ea8:	int3   
 1010ea9:	int3   
 1010eaa:	int3   
 1010eab:	int3   
 1010eac:	int3   
 1010ead:	int3   
 1010eae:	int3   
 1010eaf:	int3   
 1010eb0:	mov    QWORD PTR [rsp+0x8],rcx
 1010eb5:	push   rbp
 1010eb6:	mov    rbp,rsp
 1010eb9:	mov    rax,QWORD PTR [rsp+0x10]
 1010ebe:	mov    QWORD PTR [rax],0x0
 1010ec5:	mov    rax,QWORD PTR [rsp+0x10]
 1010eca:	pop    rbp
 1010ecb:	ret    
 1010ecc:	int3   
 1010ecd:	int3   
 1010ece:	int3   
 1010ecf:	int3   
 1010ed0:	int3   
 1010ed1:	int3   
 1010ed2:	int3   
 1010ed3:	int3   
 1010ed4:	int3   
 1010ed5:	int3   
 1010ed6:	int3   
 1010ed7:	int3   
 1010ed8:	int3   
 1010ed9:	int3   
 1010eda:	int3   
 1010edb:	int3   
 1010edc:	int3   
 1010edd:	int3   
 1010ede:	int3   
 1010edf:	int3   
 1010ee0:	mov    QWORD PTR [rsp+0x8],rcx
 1010ee5:	push   rbp
 1010ee6:	mov    rbp,rsp
 1010ee9:	sub    rsp,0x20
 1010eed:	mov    rax,QWORD PTR [rsp+0x30]
 1010ef2:	cmp    QWORD PTR [rax],0x0
 1010ef6:	je     0x1010f0e
 1010ef8:	mov    rax,QWORD PTR [rsp+0x30]
 1010efd:	mov    rax,QWORD PTR [rax]
 1010f00:	mov    rcx,QWORD PTR [rsp+0x30]
 1010f05:	mov    rcx,QWORD PTR [rcx]
 1010f08:	mov    rax,QWORD PTR [rax]
 1010f0b:	call   QWORD PTR [rax+0x10]
 1010f0e:	add    rsp,0x20
 1010f12:	pop    rbp
 1010f13:	ret    
 1010f14:	int3   
 1010f15:	int3   
 1010f16:	int3   
 1010f17:	int3   
 1010f18:	int3   
 1010f19:	int3   
 1010f1a:	int3   
 1010f1b:	int3   
 1010f1c:	int3   
 1010f1d:	int3   
 1010f1e:	int3   
 1010f1f:	int3   
 1010f20:	mov    QWORD PTR [rsp+0x8],rcx
 1010f25:	push   rbp
 1010f26:	mov    rbp,rsp
 1010f29:	mov    rax,QWORD PTR [rsp+0x10]
 1010f2e:	mov    rax,QWORD PTR [rax]
 1010f31:	pop    rbp
 1010f32:	ret    
 1010f33:	int3   
 1010f34:	int3   
 1010f35:	int3   
 1010f36:	int3   
 1010f37:	int3   
 1010f38:	int3   
 1010f39:	int3   
 1010f3a:	int3   
 1010f3b:	int3   
 1010f3c:	int3   
 1010f3d:	int3   
 1010f3e:	int3   
 1010f3f:	int3   
 1010f40:	mov    QWORD PTR [rsp+0x8],rcx
 1010f45:	push   rbp
 1010f46:	mov    rbp,rsp
 1010f49:	mov    rax,QWORD PTR [rsp+0x10]
 1010f4e:	pop    rbp
 1010f4f:	ret    
 1010f50:	int3   
 1010f51:	int3   
 1010f52:	int3   
 1010f53:	int3   
 1010f54:	int3   
 1010f55:	int3   
 1010f56:	int3   
 1010f57:	int3   
 1010f58:	int3   
 1010f59:	int3   
 1010f5a:	int3   
 1010f5b:	int3   
 1010f5c:	int3   
 1010f5d:	int3   
 1010f5e:	int3   
 1010f5f:	int3   
 1010f60:	mov    QWORD PTR [rsp+0x8],rcx
 1010f65:	push   rbp
 1010f66:	mov    rbp,rsp
 1010f69:	mov    rax,QWORD PTR [rsp+0x10]
 1010f6e:	mov    rax,QWORD PTR [rax]
 1010f71:	pop    rbp
 1010f72:	ret    
 1010f73:	int3   
 1010f74:	int3   
 1010f75:	int3   
 1010f76:	int3   
 1010f77:	int3   
 1010f78:	int3   
 1010f79:	int3   
 1010f7a:	int3   
 1010f7b:	int3   
 1010f7c:	int3   
 1010f7d:	int3   
 1010f7e:	int3   
 1010f7f:	int3   
 1010f80:	mov    QWORD PTR [rsp+0x8],rcx
 1010f85:	push   rbp
 1010f86:	mov    rbp,rsp
 1010f89:	mov    rax,QWORD PTR [rsp+0x10]
 1010f8e:	mov    QWORD PTR [rax],0x0
 1010f95:	mov    rax,QWORD PTR [rsp+0x10]
 1010f9a:	pop    rbp
 1010f9b:	ret    
 1010f9c:	int3   
 1010f9d:	int3   
 1010f9e:	int3   
 1010f9f:	int3   
 1010fa0:	int3   
 1010fa1:	int3   
 1010fa2:	int3   
 1010fa3:	int3   
 1010fa4:	int3   
 1010fa5:	int3   
 1010fa6:	int3   
 1010fa7:	int3   
 1010fa8:	int3   
 1010fa9:	int3   
 1010faa:	int3   
 1010fab:	int3   
 1010fac:	int3   
 1010fad:	int3   
 1010fae:	int3   
 1010faf:	int3   
 1010fb0:	mov    QWORD PTR [rsp+0x8],rcx
 1010fb5:	push   rbp
 1010fb6:	mov    rbp,rsp
 1010fb9:	sub    rsp,0x20
 1010fbd:	mov    rax,QWORD PTR [rsp+0x30]
 1010fc2:	cmp    QWORD PTR [rax],0x0
 1010fc6:	je     0x1010fde
 1010fc8:	mov    rax,QWORD PTR [rsp+0x30]
 1010fcd:	mov    rax,QWORD PTR [rax]
 1010fd0:	mov    rcx,QWORD PTR [rsp+0x30]
 1010fd5:	mov    rcx,QWORD PTR [rcx]
 1010fd8:	mov    rax,QWORD PTR [rax]
 1010fdb:	call   QWORD PTR [rax+0x10]
 1010fde:	add    rsp,0x20
 1010fe2:	pop    rbp
 1010fe3:	ret    
 1010fe4:	int3   
 1010fe5:	int3   
 1010fe6:	int3   
 1010fe7:	int3   
 1010fe8:	int3   
 1010fe9:	int3   
 1010fea:	int3   
 1010feb:	int3   
 1010fec:	int3   
 1010fed:	int3   
 1010fee:	int3   
 1010fef:	int3   
 1010ff0:	mov    QWORD PTR [rsp+0x10],rdx
 1010ff5:	mov    QWORD PTR [rsp+0x8],rcx
 1010ffa:	push   rbp
 1010ffb:	mov    rbp,rsp
 1010ffe:	mov    rax,QWORD PTR [rsp+0x10]
 1011003:	mov    rcx,QWORD PTR [rsp+0x18]
 1011008:	mov    QWORD PTR [rax],rcx
 101100b:	mov    rax,QWORD PTR [rsp+0x10]
 1011010:	pop    rbp
 1011011:	ret    
 1011012:	int3   
 1011013:	int3   
 1011014:	int3   
 1011015:	int3   
 1011016:	int3   
 1011017:	int3   
 1011018:	int3   
 1011019:	int3   
 101101a:	int3   
 101101b:	int3   
 101101c:	int3   
 101101d:	int3   
 101101e:	int3   
 101101f:	int3   
 1011020:	mov    QWORD PTR [rsp+0x8],rcx
 1011025:	push   rbp
 1011026:	mov    rbp,rsp
 1011029:	sub    rsp,0x20
 101102d:	mov    rax,QWORD PTR [rsp+0x30]
 1011032:	cmp    QWORD PTR [rax],0x0
 1011036:	je     0x101104e
 1011038:	mov    rax,QWORD PTR [rsp+0x30]
 101103d:	mov    rax,QWORD PTR [rax]
 1011040:	mov    rcx,QWORD PTR [rsp+0x30]
 1011045:	mov    rcx,QWORD PTR [rcx]
 1011048:	mov    rax,QWORD PTR [rax]
 101104b:	call   QWORD PTR [rax+0x10]
 101104e:	add    rsp,0x20
 1011052:	pop    rbp
 1011053:	ret    
 1011054:	int3   
 1011055:	int3   
 1011056:	int3   
 1011057:	int3   
 1011058:	int3   
 1011059:	int3   
 101105a:	int3   
 101105b:	int3   
 101105c:	int3   
 101105d:	int3   
 101105e:	int3   
 101105f:	int3   
 1011060:	mov    QWORD PTR [rsp+0x8],rcx
 1011065:	push   rbp
 1011066:	mov    rbp,rsp
 1011069:	mov    rax,QWORD PTR [rsp+0x10]
 101106e:	pop    rbp
 101106f:	ret    
 1011070:	int3   
 1011071:	int3   
 1011072:	int3   
 1011073:	int3   
 1011074:	int3   
 1011075:	int3   
 1011076:	int3   
 1011077:	int3   
 1011078:	int3   
 1011079:	int3   
 101107a:	int3   
 101107b:	int3   
 101107c:	int3   
 101107d:	int3   
 101107e:	int3   
 101107f:	int3   
 1011080:	mov    QWORD PTR [rsp+0x8],rcx
 1011085:	push   rbp
 1011086:	mov    rbp,rsp
 1011089:	mov    rax,QWORD PTR [rsp+0x10]
 101108e:	mov    rax,QWORD PTR [rax]
 1011091:	pop    rbp
 1011092:	ret    
 1011093:	int3   
 1011094:	int3   
 1011095:	int3   
 1011096:	int3   
 1011097:	int3   
 1011098:	int3   
 1011099:	int3   
 101109a:	int3   
 101109b:	int3   
 101109c:	int3   
 101109d:	int3   
 101109e:	int3   
 101109f:	int3   
 10110a0:	mov    QWORD PTR [rsp+0x10],rdx
 10110a5:	mov    QWORD PTR [rsp+0x8],rcx
 10110aa:	push   rbp
 10110ab:	mov    rbp,rsp
 10110ae:	mov    rax,QWORD PTR [rsp+0x10]
 10110b3:	mov    rcx,QWORD PTR [rsp+0x18]
 10110b8:	mov    QWORD PTR [rax],rcx
 10110bb:	mov    rax,QWORD PTR [rsp+0x10]
 10110c0:	pop    rbp
 10110c1:	ret    
 10110c2:	int3   
 10110c3:	int3   
 10110c4:	int3   
 10110c5:	int3   
 10110c6:	int3   
 10110c7:	int3   
 10110c8:	int3   
 10110c9:	int3   
 10110ca:	int3   
 10110cb:	int3   
 10110cc:	int3   
 10110cd:	int3   
 10110ce:	int3   
 10110cf:	int3   
 10110d0:	mov    QWORD PTR [rsp+0x8],rcx
 10110d5:	push   rbp
 10110d6:	mov    rbp,rsp
 10110d9:	sub    rsp,0x20
 10110dd:	mov    rax,QWORD PTR [rsp+0x30]
 10110e2:	cmp    QWORD PTR [rax],0x0
 10110e6:	je     0x10110fe
 10110e8:	mov    rax,QWORD PTR [rsp+0x30]
 10110ed:	mov    rax,QWORD PTR [rax]
 10110f0:	mov    rcx,QWORD PTR [rsp+0x30]
 10110f5:	mov    rcx,QWORD PTR [rcx]
 10110f8:	mov    rax,QWORD PTR [rax]
 10110fb:	call   QWORD PTR [rax+0x10]
 10110fe:	add    rsp,0x20
 1011102:	pop    rbp
 1011103:	ret    
 1011104:	int3   
 1011105:	int3   
 1011106:	int3   
 1011107:	int3   
 1011108:	int3   
 1011109:	int3   
 101110a:	int3   
 101110b:	int3   
 101110c:	int3   
 101110d:	int3   
 101110e:	int3   
 101110f:	int3   
 1011110:	mov    QWORD PTR [rsp+0x8],rcx
 1011115:	push   rbp
 1011116:	mov    rbp,rsp
 1011119:	mov    rax,QWORD PTR [rsp+0x10]
 101111e:	pop    rbp
 101111f:	ret    
 1011120:	int3   
 1011121:	int3   
 1011122:	int3   
 1011123:	int3   
 1011124:	int3   
 1011125:	int3   
 1011126:	int3   
 1011127:	int3   
 1011128:	int3   
 1011129:	int3   
 101112a:	int3   
 101112b:	int3   
 101112c:	int3   
 101112d:	int3   
 101112e:	int3   
 101112f:	int3   
 1011130:	mov    QWORD PTR [rsp+0x8],rcx
 1011135:	push   rbp
 1011136:	mov    rbp,rsp
 1011139:	mov    rax,QWORD PTR [rsp+0x10]
 101113e:	mov    rax,QWORD PTR [rax]
 1011141:	pop    rbp
 1011142:	ret    
 1011143:	int3   
 1011144:	int3   
 1011145:	int3   
 1011146:	int3   
 1011147:	int3   
 1011148:	int3   
 1011149:	int3   
 101114a:	int3   
 101114b:	int3   
 101114c:	int3   
 101114d:	int3   
 101114e:	int3   
 101114f:	int3   
 1011150:	mov    QWORD PTR [rsp+0x8],rcx
 1011155:	push   rbp
 1011156:	mov    rbp,rsp
 1011159:	mov    rax,QWORD PTR [rsp+0x10]
 101115e:	mov    QWORD PTR [rax],0x0
 1011165:	mov    rax,QWORD PTR [rsp+0x10]
 101116a:	pop    rbp
 101116b:	ret    
 101116c:	int3   
 101116d:	int3   
 101116e:	int3   
 101116f:	int3   
 1011170:	int3   
 1011171:	int3   
 1011172:	int3   
 1011173:	int3   
 1011174:	int3   
 1011175:	int3   
 1011176:	int3   
 1011177:	int3   
 1011178:	int3   
 1011179:	int3   
 101117a:	int3   
 101117b:	int3   
 101117c:	int3   
 101117d:	int3   
 101117e:	int3   
 101117f:	int3   
 1011180:	mov    QWORD PTR [rsp+0x8],rcx
 1011185:	push   rbp
 1011186:	mov    rbp,rsp
 1011189:	sub    rsp,0x20
 101118d:	mov    rax,QWORD PTR [rsp+0x30]
 1011192:	cmp    QWORD PTR [rax],0x0
 1011196:	je     0x10111ae
 1011198:	mov    rax,QWORD PTR [rsp+0x30]
 101119d:	mov    rax,QWORD PTR [rax]
 10111a0:	mov    rcx,QWORD PTR [rsp+0x30]
 10111a5:	mov    rcx,QWORD PTR [rcx]
 10111a8:	mov    rax,QWORD PTR [rax]
 10111ab:	call   QWORD PTR [rax+0x10]
 10111ae:	add    rsp,0x20
 10111b2:	pop    rbp
 10111b3:	ret    
 10111b4:	int3   
 10111b5:	int3   
 10111b6:	int3   
 10111b7:	int3   
 10111b8:	int3   
 10111b9:	int3   
 10111ba:	int3   
 10111bb:	int3   
 10111bc:	int3   
 10111bd:	int3   
 10111be:	int3   
 10111bf:	int3   
 10111c0:	mov    QWORD PTR [rsp+0x8],rcx
 10111c5:	push   rbp
 10111c6:	mov    rbp,rsp
 10111c9:	mov    rax,QWORD PTR [rsp+0x10]
 10111ce:	mov    rax,QWORD PTR [rax]
 10111d1:	pop    rbp
 10111d2:	ret    
 10111d3:	int3   
 10111d4:	int3   
 10111d5:	int3   
 10111d6:	int3   
 10111d7:	int3   
 10111d8:	int3   
 10111d9:	int3   
 10111da:	int3   
 10111db:	int3   
 10111dc:	int3   
 10111dd:	int3   
 10111de:	int3   
 10111df:	int3   
 10111e0:	mov    QWORD PTR [rsp+0x8],rcx
 10111e5:	push   rbp
 10111e6:	mov    rbp,rsp
 10111e9:	mov    rax,QWORD PTR [rsp+0x10]
 10111ee:	pop    rbp
 10111ef:	ret    
 10111f0:	int3   
 10111f1:	int3   
 10111f2:	int3   
 10111f3:	int3   
 10111f4:	int3   
 10111f5:	int3   
 10111f6:	int3   
 10111f7:	int3   
 10111f8:	int3   
 10111f9:	int3   
 10111fa:	int3   
 10111fb:	int3   
 10111fc:	int3   
 10111fd:	int3   
 10111fe:	int3   
 10111ff:	int3   
 1011200:	mov    QWORD PTR [rsp+0x8],rcx
 1011205:	push   rbp
 1011206:	mov    rbp,rsp
 1011209:	mov    rax,QWORD PTR [rsp+0x10]
 101120e:	mov    rax,QWORD PTR [rax]
 1011211:	pop    rbp
 1011212:	ret    
 1011213:	int3   
 1011214:	int3   
 1011215:	int3   
 1011216:	int3   
 1011217:	int3   
 1011218:	int3   
 1011219:	int3   
 101121a:	int3   
 101121b:	int3   
 101121c:	int3   
 101121d:	int3   
 101121e:	int3   
 101121f:	int3   
 1011220:	mov    QWORD PTR [rsp+0x8],rcx
 1011225:	push   rbp
 1011226:	mov    rbp,rsp
 1011229:	mov    rax,QWORD PTR [rsp+0x10]
 101122e:	mov    QWORD PTR [rax],0x0
 1011235:	mov    rax,QWORD PTR [rsp+0x10]
 101123a:	pop    rbp
 101123b:	ret    
 101123c:	int3   
 101123d:	int3   
 101123e:	int3   
 101123f:	int3   
 1011240:	int3   
 1011241:	int3   
 1011242:	int3   
 1011243:	int3   
 1011244:	int3   
 1011245:	int3   
 1011246:	int3   
 1011247:	int3   
 1011248:	int3   
 1011249:	int3   
 101124a:	int3   
 101124b:	int3   
 101124c:	int3   
 101124d:	int3   
 101124e:	int3   
 101124f:	int3   
 1011250:	mov    QWORD PTR [rsp+0x8],rcx
 1011255:	push   rbp
 1011256:	mov    rbp,rsp
 1011259:	sub    rsp,0x20
 101125d:	mov    rax,QWORD PTR [rsp+0x30]
 1011262:	cmp    QWORD PTR [rax],0x0
 1011266:	je     0x101127e
 1011268:	mov    rax,QWORD PTR [rsp+0x30]
 101126d:	mov    rax,QWORD PTR [rax]
 1011270:	mov    rcx,QWORD PTR [rsp+0x30]
 1011275:	mov    rcx,QWORD PTR [rcx]
 1011278:	mov    rax,QWORD PTR [rax]
 101127b:	call   QWORD PTR [rax+0x10]
 101127e:	add    rsp,0x20
 1011282:	pop    rbp
 1011283:	ret    
 1011284:	int3   
 1011285:	int3   
 1011286:	int3   
 1011287:	int3   
 1011288:	int3   
 1011289:	int3   
 101128a:	int3   
 101128b:	int3   
 101128c:	int3   
 101128d:	int3   
 101128e:	int3   
 101128f:	int3   
 1011290:	mov    QWORD PTR [rsp+0x8],rcx
 1011295:	push   rbp
 1011296:	mov    rbp,rsp
 1011299:	mov    rax,QWORD PTR [rsp+0x10]
 101129e:	mov    rax,QWORD PTR [rax]
 10112a1:	pop    rbp
 10112a2:	ret    
 10112a3:	int3   
 10112a4:	int3   
 10112a5:	int3   
 10112a6:	int3   
 10112a7:	int3   
 10112a8:	int3   
 10112a9:	int3   
 10112aa:	int3   
 10112ab:	int3   
 10112ac:	int3   
 10112ad:	int3   
 10112ae:	int3   
 10112af:	int3   
 10112b0:	mov    QWORD PTR [rsp+0x8],rcx
 10112b5:	push   rbp
 10112b6:	mov    rbp,rsp
 10112b9:	mov    rax,QWORD PTR [rsp+0x10]
 10112be:	pop    rbp
 10112bf:	ret    
 10112c0:	int3   
 10112c1:	int3   
 10112c2:	int3   
 10112c3:	int3   
 10112c4:	int3   
 10112c5:	int3   
 10112c6:	int3   
 10112c7:	int3   
 10112c8:	int3   
 10112c9:	int3   
 10112ca:	int3   
 10112cb:	int3   
 10112cc:	int3   
 10112cd:	int3   
 10112ce:	int3   
 10112cf:	int3   
 10112d0:	mov    QWORD PTR [rsp+0x8],rcx
 10112d5:	push   rbp
 10112d6:	mov    rbp,rsp
 10112d9:	mov    rax,QWORD PTR [rsp+0x10]
 10112de:	mov    rax,QWORD PTR [rax]
 10112e1:	pop    rbp
 10112e2:	ret    
 10112e3:	int3   
 10112e4:	int3   
 10112e5:	int3   
 10112e6:	int3   
 10112e7:	int3   
 10112e8:	int3   
 10112e9:	int3   
 10112ea:	int3   
 10112eb:	int3   
 10112ec:	int3   
 10112ed:	int3   
 10112ee:	int3   
 10112ef:	int3   
 10112f0:	mov    QWORD PTR [rsp+0x8],rcx
 10112f5:	push   rbp
 10112f6:	mov    rbp,rsp
 10112f9:	mov    rax,QWORD PTR [rsp+0x10]
 10112fe:	mov    QWORD PTR [rax],0x0
 1011305:	mov    rax,QWORD PTR [rsp+0x10]
 101130a:	pop    rbp
 101130b:	ret    
 101130c:	int3   
 101130d:	int3   
 101130e:	int3   
 101130f:	int3   
 1011310:	int3   
 1011311:	int3   
 1011312:	int3   
 1011313:	int3   
 1011314:	int3   
 1011315:	int3   
 1011316:	int3   
 1011317:	int3   
 1011318:	int3   
 1011319:	int3   
 101131a:	int3   
 101131b:	int3   
 101131c:	int3   
 101131d:	int3   
 101131e:	int3   
 101131f:	int3   
 1011320:	mov    QWORD PTR [rsp+0x8],rcx
 1011325:	push   rbp
 1011326:	mov    rbp,rsp
 1011329:	sub    rsp,0x20
 101132d:	mov    rax,QWORD PTR [rsp+0x30]
 1011332:	cmp    QWORD PTR [rax],0x0
 1011336:	je     0x101134e
 1011338:	mov    rax,QWORD PTR [rsp+0x30]
 101133d:	mov    rax,QWORD PTR [rax]
 1011340:	mov    rcx,QWORD PTR [rsp+0x30]
 1011345:	mov    rcx,QWORD PTR [rcx]
 1011348:	mov    rax,QWORD PTR [rax]
 101134b:	call   QWORD PTR [rax+0x10]
 101134e:	add    rsp,0x20
 1011352:	pop    rbp
 1011353:	ret    
 1011354:	int3   
 1011355:	int3   
 1011356:	int3   
 1011357:	int3   
 1011358:	int3   
 1011359:	int3   
 101135a:	int3   
 101135b:	int3   
 101135c:	int3   
 101135d:	int3   
 101135e:	int3   
 101135f:	int3   
 1011360:	mov    QWORD PTR [rsp+0x8],rcx
 1011365:	push   rbp
 1011366:	mov    rbp,rsp
 1011369:	sub    rsp,0x10
 101136d:	mov    rax,QWORD PTR [rsp+0x20]
 1011372:	cmp    QWORD PTR [rax],0x0
 1011376:	je     0x1011381
 1011378:	mov    DWORD PTR [rsp],0x1
 101137f:	jmp    0x1011388
 1011381:	mov    DWORD PTR [rsp],0x0
 1011388:	mov    eax,DWORD PTR [rsp]
 101138b:	add    rsp,0x10
 101138f:	pop    rbp
 1011390:	ret    
 1011391:	int3   
 1011392:	int3   
 1011393:	int3   
 1011394:	int3   
 1011395:	int3   
 1011396:	int3   
 1011397:	int3   
 1011398:	int3   
 1011399:	int3   
 101139a:	int3   
 101139b:	int3   
 101139c:	int3   
 101139d:	int3   
 101139e:	int3   
 101139f:	int3   
 10113a0:	mov    QWORD PTR [rsp+0x8],rcx
 10113a5:	push   rbp
 10113a6:	mov    rbp,rsp
 10113a9:	mov    rax,QWORD PTR [rsp+0x10]
 10113ae:	pop    rbp
 10113af:	ret    
 10113b0:	int3   
 10113b1:	int3   
 10113b2:	int3   
 10113b3:	int3   
 10113b4:	int3   
 10113b5:	int3   
 10113b6:	int3   
 10113b7:	int3   
 10113b8:	int3   
 10113b9:	int3   
 10113ba:	int3   
 10113bb:	int3   
 10113bc:	int3   
 10113bd:	int3   
 10113be:	int3   
 10113bf:	int3   
 10113c0:	mov    QWORD PTR [rsp+0x8],rcx
 10113c5:	push   rbp
 10113c6:	mov    rbp,rsp
 10113c9:	sub    rsp,0x10
 10113cd:	mov    rax,QWORD PTR [rsp+0x20]
 10113d2:	cmp    QWORD PTR [rax],0x0
 10113d6:	je     0x10113e1
 10113d8:	mov    DWORD PTR [rsp],0x0
 10113df:	jmp    0x10113e8
 10113e1:	mov    DWORD PTR [rsp],0x1
 10113e8:	mov    eax,DWORD PTR [rsp]
 10113eb:	add    rsp,0x10
 10113ef:	pop    rbp
 10113f0:	ret    
 10113f1:	int3   
 10113f2:	int3   
 10113f3:	int3   
 10113f4:	int3   
 10113f5:	int3   
 10113f6:	int3   
 10113f7:	int3   
 10113f8:	int3   
 10113f9:	int3   
 10113fa:	int3   
 10113fb:	int3   
 10113fc:	int3   
 10113fd:	int3   
 10113fe:	int3   
 10113ff:	int3   
 1011400:	mov    QWORD PTR [rsp+0x8],rcx
 1011405:	push   rbp
 1011406:	mov    rbp,rsp
 1011409:	mov    rax,QWORD PTR [rsp+0x10]
 101140e:	mov    rax,QWORD PTR [rax]
 1011411:	pop    rbp
 1011412:	ret    
 1011413:	int3   
 1011414:	int3   
 1011415:	int3   
 1011416:	int3   
 1011417:	int3   
 1011418:	int3   
 1011419:	int3   
 101141a:	int3   
 101141b:	int3   
 101141c:	int3   
 101141d:	int3   
 101141e:	int3   
 101141f:	int3   
 1011420:	mov    QWORD PTR [rsp+0x8],rcx
 1011425:	push   rbp
 1011426:	mov    rbp,rsp
 1011429:	sub    rsp,0x20
 101142d:	mov    rax,QWORD PTR [rsp+0x30]
 1011432:	cmp    QWORD PTR [rax],0x0
 1011436:	je     0x101144e
 1011438:	mov    rax,QWORD PTR [rsp+0x30]
 101143d:	mov    rax,QWORD PTR [rax]
 1011440:	mov    rcx,QWORD PTR [rsp+0x30]
 1011445:	mov    rcx,QWORD PTR [rcx]
 1011448:	mov    rax,QWORD PTR [rax]
 101144b:	call   QWORD PTR [rax+0x10]
 101144e:	mov    rax,QWORD PTR [rsp+0x30]
 1011453:	mov    QWORD PTR [rax],0x0
 101145a:	add    rsp,0x20
 101145e:	pop    rbp
 101145f:	ret    
 1011460:	int3   
 1011461:	int3   
 1011462:	int3   
 1011463:	int3   
 1011464:	int3   
 1011465:	int3   
 1011466:	int3   
 1011467:	int3   
 1011468:	int3   
 1011469:	int3   
 101146a:	int3   
 101146b:	int3   
 101146c:	int3   
 101146d:	int3   
 101146e:	int3   
 101146f:	int3   
 1011470:	mov    QWORD PTR [rsp+0x8],rcx
 1011475:	push   rbp
 1011476:	mov    rbp,rsp
 1011479:	mov    rax,QWORD PTR [rsp+0x10]
 101147e:	mov    QWORD PTR [rax],0x0
 1011485:	mov    rax,QWORD PTR [rsp+0x10]
 101148a:	pop    rbp
 101148b:	ret    
 101148c:	int3   
 101148d:	int3   
 101148e:	int3   
 101148f:	int3   
 1011490:	int3   
 1011491:	int3   
 1011492:	int3   
 1011493:	int3   
 1011494:	int3   
 1011495:	int3   
 1011496:	int3   
 1011497:	int3   
 1011498:	int3   
 1011499:	int3   
 101149a:	int3   
 101149b:	int3   
 101149c:	int3   
 101149d:	int3   
 101149e:	int3   
 101149f:	int3   
 10114a0:	mov    QWORD PTR [rsp+0x8],rcx
 10114a5:	push   rbp
 10114a6:	mov    rbp,rsp
 10114a9:	sub    rsp,0x20
 10114ad:	mov    rax,QWORD PTR [rsp+0x30]
 10114b2:	cmp    QWORD PTR [rax],0x0
 10114b6:	je     0x10114ce
 10114b8:	mov    rax,QWORD PTR [rsp+0x30]
 10114bd:	mov    rax,QWORD PTR [rax]
 10114c0:	mov    rcx,QWORD PTR [rsp+0x30]
 10114c5:	mov    rcx,QWORD PTR [rcx]
 10114c8:	mov    rax,QWORD PTR [rax]
 10114cb:	call   QWORD PTR [rax+0x10]
 10114ce:	add    rsp,0x20
 10114d2:	pop    rbp
 10114d3:	ret    
 10114d4:	int3   
 10114d5:	int3   
 10114d6:	int3   
 10114d7:	int3   
 10114d8:	int3   
 10114d9:	int3   
 10114da:	int3   
 10114db:	int3   
 10114dc:	int3   
 10114dd:	int3   
 10114de:	int3   
 10114df:	int3   
 10114e0:	mov    QWORD PTR [rsp+0x8],rcx
 10114e5:	push   rbp
 10114e6:	mov    rbp,rsp
 10114e9:	mov    rax,QWORD PTR [rsp+0x10]
 10114ee:	mov    rax,QWORD PTR [rax]
 10114f1:	pop    rbp
 10114f2:	ret    
 10114f3:	int3   
 10114f4:	int3   
 10114f5:	int3   
 10114f6:	int3   
 10114f7:	int3   
 10114f8:	int3   
 10114f9:	int3   
 10114fa:	int3   
 10114fb:	int3   
 10114fc:	int3   
 10114fd:	int3   
 10114fe:	int3   
 10114ff:	int3   
 1011500:	mov    QWORD PTR [rsp+0x8],rcx
 1011505:	push   rbp
 1011506:	mov    rbp,rsp
 1011509:	mov    rax,QWORD PTR [rsp+0x10]
 101150e:	pop    rbp
 101150f:	ret    
 1011510:	int3   
 1011511:	int3   
 1011512:	int3   
 1011513:	int3   
 1011514:	int3   
 1011515:	int3   
 1011516:	int3   
 1011517:	int3   
 1011518:	int3   
 1011519:	int3   
 101151a:	int3   
 101151b:	int3   
 101151c:	int3   
 101151d:	int3   
 101151e:	int3   
 101151f:	int3   
 1011520:	mov    QWORD PTR [rsp+0x8],rcx
 1011525:	push   rbp
 1011526:	mov    rbp,rsp
 1011529:	mov    rax,QWORD PTR [rsp+0x10]
 101152e:	mov    rax,QWORD PTR [rax]
 1011531:	pop    rbp
 1011532:	ret    
 1011533:	int3   
 1011534:	int3   
 1011535:	int3   
 1011536:	int3   
 1011537:	int3   
 1011538:	int3   
 1011539:	int3   
 101153a:	int3   
 101153b:	int3   
 101153c:	int3   
 101153d:	int3   
 101153e:	int3   
 101153f:	int3   
 1011540:	mov    QWORD PTR [rsp+0x8],rcx
 1011545:	push   rbp
 1011546:	mov    rbp,rsp
 1011549:	mov    rax,QWORD PTR [rsp+0x10]
 101154e:	mov    QWORD PTR [rax],0x0
 1011555:	mov    rax,QWORD PTR [rsp+0x10]
 101155a:	pop    rbp
 101155b:	ret    
 101155c:	int3   
 101155d:	int3   
 101155e:	int3   
 101155f:	int3   
 1011560:	int3   
 1011561:	int3   
 1011562:	int3   
 1011563:	int3   
 1011564:	int3   
 1011565:	int3   
 1011566:	int3   
 1011567:	int3   
 1011568:	int3   
 1011569:	int3   
 101156a:	int3   
 101156b:	int3   
 101156c:	int3   
 101156d:	int3   
 101156e:	int3   
 101156f:	int3   
 1011570:	mov    QWORD PTR [rsp+0x8],rcx
 1011575:	push   rbp
 1011576:	mov    rbp,rsp
 1011579:	sub    rsp,0x20
 101157d:	mov    rax,QWORD PTR [rsp+0x30]
 1011582:	cmp    QWORD PTR [rax],0x0
 1011586:	je     0x101159e
 1011588:	mov    rax,QWORD PTR [rsp+0x30]
 101158d:	mov    rax,QWORD PTR [rax]
 1011590:	mov    rcx,QWORD PTR [rsp+0x30]
 1011595:	mov    rcx,QWORD PTR [rcx]
 1011598:	mov    rax,QWORD PTR [rax]
 101159b:	call   QWORD PTR [rax+0x10]
 101159e:	add    rsp,0x20
 10115a2:	pop    rbp
 10115a3:	ret    
 10115a4:	int3   
 10115a5:	int3   
 10115a6:	int3   
 10115a7:	int3   
 10115a8:	int3   
 10115a9:	int3   
 10115aa:	int3   
 10115ab:	int3   
 10115ac:	int3   
 10115ad:	int3   
 10115ae:	int3   
 10115af:	int3   
 10115b0:	mov    QWORD PTR [rsp+0x8],rcx
 10115b5:	push   rbp
 10115b6:	mov    rbp,rsp
 10115b9:	mov    rax,QWORD PTR [rsp+0x10]
 10115be:	mov    rax,QWORD PTR [rax]
 10115c1:	pop    rbp
 10115c2:	ret    
 10115c3:	int3   
 10115c4:	int3   
 10115c5:	int3   
 10115c6:	int3   
 10115c7:	int3   
 10115c8:	int3   
 10115c9:	int3   
 10115ca:	int3   
 10115cb:	int3   
 10115cc:	int3   
 10115cd:	int3   
 10115ce:	int3   
 10115cf:	int3   
 10115d0:	mov    QWORD PTR [rsp+0x8],rcx
 10115d5:	push   rbp
 10115d6:	mov    rbp,rsp
 10115d9:	sub    rsp,0x10
 10115dd:	mov    rax,QWORD PTR [rsp+0x20]
 10115e2:	cmp    QWORD PTR [rax],0x0
 10115e6:	je     0x10115f1
 10115e8:	mov    DWORD PTR [rsp],0x1
 10115ef:	jmp    0x10115f8
 10115f1:	mov    DWORD PTR [rsp],0x0
 10115f8:	mov    eax,DWORD PTR [rsp]
 10115fb:	add    rsp,0x10
 10115ff:	pop    rbp
 1011600:	ret    
 1011601:	int3   
 1011602:	int3   
 1011603:	int3   
 1011604:	int3   
 1011605:	int3   
 1011606:	int3   
 1011607:	int3   
 1011608:	int3   
 1011609:	int3   
 101160a:	int3   
 101160b:	int3   
 101160c:	int3   
 101160d:	int3   
 101160e:	int3   
 101160f:	int3   
 1011610:	mov    QWORD PTR [rsp+0x8],rcx
 1011615:	push   rbp
 1011616:	mov    rbp,rsp
 1011619:	mov    rax,QWORD PTR [rsp+0x10]
 101161e:	pop    rbp
 101161f:	ret    
 1011620:	int3   
 1011621:	int3   
 1011622:	int3   
 1011623:	int3   
 1011624:	int3   
 1011625:	int3   
 1011626:	int3   
 1011627:	int3   
 1011628:	int3   
 1011629:	int3   
 101162a:	int3   
 101162b:	int3   
 101162c:	int3   
 101162d:	int3   
 101162e:	int3   
 101162f:	int3   
 1011630:	mov    QWORD PTR [rsp+0x8],rcx
 1011635:	push   rbp
 1011636:	mov    rbp,rsp
 1011639:	mov    rax,QWORD PTR [rsp+0x10]
 101163e:	mov    rax,QWORD PTR [rax]
 1011641:	pop    rbp
 1011642:	ret    
 1011643:	int3   
 1011644:	int3   
 1011645:	int3   
 1011646:	int3   
 1011647:	int3   
 1011648:	int3   
 1011649:	int3   
 101164a:	int3   
 101164b:	int3   
 101164c:	int3   
 101164d:	int3   
 101164e:	int3   
 101164f:	int3   
 1011650:	mov    QWORD PTR [rsp+0x8],rcx
 1011655:	push   rbp
 1011656:	mov    rbp,rsp
 1011659:	mov    rax,QWORD PTR [rsp+0x10]
 101165e:	mov    QWORD PTR [rax],0x0
 1011665:	mov    rax,QWORD PTR [rsp+0x10]
 101166a:	pop    rbp
 101166b:	ret    
 101166c:	int3   
 101166d:	int3   
 101166e:	int3   
 101166f:	int3   
 1011670:	int3   
 1011671:	int3   
 1011672:	int3   
 1011673:	int3   
 1011674:	int3   
 1011675:	int3   
 1011676:	int3   
 1011677:	int3   
 1011678:	int3   
 1011679:	int3   
 101167a:	int3   
 101167b:	int3   
 101167c:	int3   
 101167d:	int3   
 101167e:	int3   
 101167f:	int3   
 1011680:	mov    QWORD PTR [rsp+0x8],rcx
 1011685:	push   rbp
 1011686:	mov    rbp,rsp
 1011689:	sub    rsp,0x20
 101168d:	mov    rax,QWORD PTR [rsp+0x30]
 1011692:	cmp    QWORD PTR [rax],0x0
 1011696:	je     0x10116ae
 1011698:	mov    rax,QWORD PTR [rsp+0x30]
 101169d:	mov    rax,QWORD PTR [rax]
 10116a0:	mov    rcx,QWORD PTR [rsp+0x30]
 10116a5:	mov    rcx,QWORD PTR [rcx]
 10116a8:	mov    rax,QWORD PTR [rax]
 10116ab:	call   QWORD PTR [rax+0x10]
 10116ae:	add    rsp,0x20
 10116b2:	pop    rbp
 10116b3:	ret    
 10116b4:	int3   
 10116b5:	int3   
 10116b6:	int3   
 10116b7:	int3   
 10116b8:	int3   
 10116b9:	int3   
 10116ba:	int3   
 10116bb:	int3   
 10116bc:	int3   
 10116bd:	int3   
 10116be:	int3   
 10116bf:	int3   
 10116c0:	mov    QWORD PTR [rsp+0x8],rcx
 10116c5:	push   rbp
 10116c6:	mov    rbp,rsp
 10116c9:	sub    rsp,0x10
 10116cd:	mov    rax,QWORD PTR [rsp+0x20]
 10116d2:	cmp    QWORD PTR [rax],0x0
 10116d6:	je     0x10116e1
 10116d8:	mov    DWORD PTR [rsp],0x1
 10116df:	jmp    0x10116e8
 10116e1:	mov    DWORD PTR [rsp],0x0
 10116e8:	mov    eax,DWORD PTR [rsp]
 10116eb:	add    rsp,0x10
 10116ef:	pop    rbp
 10116f0:	ret    
 10116f1:	int3   
 10116f2:	int3   
 10116f3:	int3   
 10116f4:	int3   
 10116f5:	int3   
 10116f6:	int3   
 10116f7:	int3   
 10116f8:	int3   
 10116f9:	int3   
 10116fa:	int3   
 10116fb:	int3   
 10116fc:	int3   
 10116fd:	int3   
 10116fe:	int3   
 10116ff:	int3   
 1011700:	mov    QWORD PTR [rsp+0x8],rcx
 1011705:	push   rbp
 1011706:	mov    rbp,rsp
 1011709:	mov    rax,QWORD PTR [rsp+0x10]
 101170e:	pop    rbp
 101170f:	ret    
 1011710:	int3   
 1011711:	int3   
 1011712:	int3   
 1011713:	int3   
 1011714:	int3   
 1011715:	int3   
 1011716:	int3   
 1011717:	int3   
 1011718:	int3   
 1011719:	int3   
 101171a:	int3   
 101171b:	int3   
 101171c:	int3   
 101171d:	int3   
 101171e:	int3   
 101171f:	int3   
 1011720:	mov    QWORD PTR [rsp+0x8],rcx
 1011725:	push   rbp
 1011726:	mov    rbp,rsp
 1011729:	mov    rax,QWORD PTR [rsp+0x10]
 101172e:	mov    rax,QWORD PTR [rax]
 1011731:	pop    rbp
 1011732:	ret    
 1011733:	int3   
 1011734:	int3   
 1011735:	int3   
 1011736:	int3   
 1011737:	int3   
 1011738:	int3   
 1011739:	int3   
 101173a:	int3   
 101173b:	int3   
 101173c:	int3   
 101173d:	int3   
 101173e:	int3   
 101173f:	int3   
 1011740:	mov    QWORD PTR [rsp+0x8],rcx
 1011745:	push   rbp
 1011746:	mov    rbp,rsp
 1011749:	mov    rax,QWORD PTR [rsp+0x10]
 101174e:	mov    QWORD PTR [rax],0x0
 1011755:	mov    rax,QWORD PTR [rsp+0x10]
 101175a:	pop    rbp
 101175b:	ret    
 101175c:	int3   
 101175d:	int3   
 101175e:	int3   
 101175f:	int3   
 1011760:	int3   
 1011761:	int3   
 1011762:	int3   
 1011763:	int3   
 1011764:	int3   
 1011765:	int3   
 1011766:	int3   
 1011767:	int3   
 1011768:	int3   
 1011769:	int3   
 101176a:	int3   
 101176b:	int3   
 101176c:	int3   
 101176d:	int3   
 101176e:	int3   
 101176f:	int3   
 1011770:	mov    QWORD PTR [rsp+0x8],rcx
 1011775:	push   rbp
 1011776:	mov    rbp,rsp
 1011779:	sub    rsp,0x20
 101177d:	mov    rax,QWORD PTR [rsp+0x30]
 1011782:	cmp    QWORD PTR [rax],0x0
 1011786:	je     0x101179e
 1011788:	mov    rax,QWORD PTR [rsp+0x30]
 101178d:	mov    rax,QWORD PTR [rax]
 1011790:	mov    rcx,QWORD PTR [rsp+0x30]
 1011795:	mov    rcx,QWORD PTR [rcx]
 1011798:	mov    rax,QWORD PTR [rax]
 101179b:	call   QWORD PTR [rax+0x10]
 101179e:	add    rsp,0x20
 10117a2:	pop    rbp
 10117a3:	ret    
 10117a4:	int3   
 10117a5:	int3   
 10117a6:	int3   
 10117a7:	int3   
 10117a8:	int3   
 10117a9:	int3   
 10117aa:	int3   
 10117ab:	int3   
 10117ac:	int3   
 10117ad:	int3   
 10117ae:	int3   
 10117af:	int3   
 10117b0:	mov    QWORD PTR [rsp+0x8],rcx
 10117b5:	push   rbp
 10117b6:	mov    rbp,rsp
 10117b9:	sub    rsp,0x10
 10117bd:	mov    rax,QWORD PTR [rsp+0x20]
 10117c2:	cmp    QWORD PTR [rax],0x0
 10117c6:	je     0x10117d1
 10117c8:	mov    DWORD PTR [rsp],0x1
 10117cf:	jmp    0x10117d8
 10117d1:	mov    DWORD PTR [rsp],0x0
 10117d8:	mov    eax,DWORD PTR [rsp]
 10117db:	add    rsp,0x10
 10117df:	pop    rbp
 10117e0:	ret    
 10117e1:	int3   
 10117e2:	int3   
 10117e3:	int3   
 10117e4:	int3   
 10117e5:	int3   
 10117e6:	int3   
 10117e7:	int3   
 10117e8:	int3   
 10117e9:	int3   
 10117ea:	int3   
 10117eb:	int3   
 10117ec:	int3   
 10117ed:	int3   
 10117ee:	int3   
 10117ef:	int3   
 10117f0:	mov    QWORD PTR [rsp+0x8],rcx
 10117f5:	push   rbp
 10117f6:	mov    rbp,rsp
 10117f9:	mov    rax,QWORD PTR [rsp+0x10]
 10117fe:	pop    rbp
 10117ff:	ret    
 1011800:	int3   
 1011801:	int3   
 1011802:	int3   
 1011803:	int3   
 1011804:	int3   
 1011805:	int3   
 1011806:	int3   
 1011807:	int3   
 1011808:	int3   
 1011809:	int3   
 101180a:	int3   
 101180b:	int3   
 101180c:	int3   
 101180d:	int3   
 101180e:	int3   
 101180f:	int3   
 1011810:	mov    QWORD PTR [rsp+0x8],rcx
 1011815:	push   rbp
 1011816:	mov    rbp,rsp
 1011819:	mov    rax,QWORD PTR [rsp+0x10]
 101181e:	mov    rax,QWORD PTR [rax]
 1011821:	pop    rbp
 1011822:	ret    
 1011823:	int3   
 1011824:	int3   
 1011825:	int3   
 1011826:	int3   
 1011827:	int3   
 1011828:	int3   
 1011829:	int3   
 101182a:	int3   
 101182b:	int3   
 101182c:	sub    rsp,0x38
 1011830:	lea    rcx,[rip+0x8e5]        # 0x101211c
 1011837:	call   0x1011cf0
 101183c:	mov    r11d,DWORD PTR [rip+0xf081]        # 0x10208c4
 1011843:	mov    r9d,DWORD PTR [rip+0xf076]        # 0x10208c0
 101184a:	lea    rax,[rip+0xeaf3]        # 0x1020344
 1011851:	lea    r8,[rip+0xead8]        # 0x1020330
 1011858:	lea    rdx,[rip+0xead9]        # 0x1020338
 101185f:	lea    rcx,[rip+0xeac2]        # 0x1020328
 1011866:	mov    DWORD PTR [rip+0xead7],r11d        # 0x1020344
 101186d:	mov    QWORD PTR [rsp+0x20],rax
 1011872:	call   QWORD PTR [rip+0xfffffffffffef9c8]        # 0x1001240
 1011878:	mov    DWORD PTR [rip+0xeac2],eax        # 0x1020340
 101187e:	test   eax,eax
 1011880:	jns    0x101188c
 1011882:	mov    ecx,0x8
 1011887:	call   0x10120ce
 101188c:	add    rsp,0x38
 1011890:	ret    
 1011891:	int3   
 1011892:	int3   
 1011893:	int3   
 1011894:	int3   
 1011895:	int3   
 1011896:	int3   
 1011897:	int3   
 1011898:	mov    QWORD PTR [rsp+0x8],rbx
 101189d:	push   rdi
 101189e:	sub    rsp,0x20
 10118a2:	mov    rax,QWORD PTR gs:0x30
 10118ab:	mov    rbx,QWORD PTR [rax+0x8]
 10118af:	xor    edi,edi
 10118b1:	xor    eax,eax
 10118b3:	lock cmpxchg QWORD PTR [rip+0xf01c],rbx        # 0x10208d8
 10118bc:	je     0x10118d9
 10118be:	cmp    rax,rbx
 10118c1:	jne    0x10118cc
 10118c3:	mov    ebx,0x1
 10118c8:	mov    edi,ebx
 10118ca:	jmp    0x10118de
 10118cc:	mov    ecx,0x3e8
 10118d1:	call   QWORD PTR [rip+0xfffffffffffef769]        # 0x1001040
 10118d7:	jmp    0x10118b1
 10118d9:	mov    ebx,0x1
 10118de:	mov    eax,DWORD PTR [rip+0xefec]        # 0x10208d0
 10118e4:	cmp    eax,ebx
 10118e6:	jne    0x10118f4
 10118e8:	mov    ecx,0x1f
 10118ed:	call   0x10120ce
 10118f2:	jmp    0x101192b
 10118f4:	mov    eax,DWORD PTR [rip+0xefd6]        # 0x10208d0
 10118fa:	test   eax,eax
 10118fc:	jne    0x1011925
 10118fe:	mov    DWORD PTR [rip+0xefcc],ebx        # 0x10208d0
 1011904:	lea    rdx,[rip+0xfffffffffffefb25]        # 0x1001430
 101190b:	lea    rcx,[rip+0xfffffffffffefb06]        # 0x1001418
 1011912:	call   0x1012264
 1011917:	test   eax,eax
 1011919:	je     0x101192b
 101191b:	mov    eax,0xff
 1011920:	jmp    0x1011a0d
 1011925:	mov    DWORD PTR [rip+0xea21],ebx        # 0x102034c
 101192b:	mov    eax,DWORD PTR [rip+0xef9f]        # 0x10208d0
 1011931:	cmp    eax,ebx
 1011933:	jne    0x1011952
 1011935:	lea    rdx,[rip+0xfffffffffffefad4]        # 0x1001410
 101193c:	lea    rcx,[rip+0xfffffffffffefaa5]        # 0x10013e8
 1011943:	call   0x1012258
 1011948:	mov    DWORD PTR [rip+0xef7e],0x2        # 0x10208d0
 1011952:	test   edi,edi
 1011954:	jne    0x101195f
 1011956:	xor    eax,eax
 1011958:	xchg   QWORD PTR [rip+0xef79],rax        # 0x10208d8
 101195f:	cmp    QWORD PTR [rip+0xef89],0x0        # 0x10208f0
 1011967:	je     0x1011988
 1011969:	lea    rcx,[rip+0xef80]        # 0x10208f0
 1011970:	call   0x1012210
 1011975:	test   eax,eax
 1011977:	je     0x1011988
 1011979:	xor    r8d,r8d
 101197c:	lea    edx,[r8+0x2]
 1011980:	xor    ecx,ecx
 1011982:	call   QWORD PTR [rip+0xef68]        # 0x10208f0
 1011988:	mov    rcx,QWORD PTR [rip+0xfffffffffffef8e1]        # 0x1001270
 101198f:	mov    rax,QWORD PTR [rip+0xe99a]        # 0x1020330
 1011996:	mov    QWORD PTR [rcx],rax
 1011999:	mov    r8,QWORD PTR [rip+0xe990]        # 0x1020330
 10119a0:	mov    rdx,QWORD PTR [rip+0xe991]        # 0x1020338
 10119a7:	mov    ecx,DWORD PTR [rip+0xe97b]        # 0x1020328
 10119ad:	call   0x100f8f0
 10119b2:	mov    DWORD PTR [rip+0xe990],eax        # 0x1020348
 10119b8:	cmp    DWORD PTR [rip+0xe96d],0x0        # 0x102032c
 10119bf:	jne    0x10119c9
 10119c1:	mov    ecx,eax
 10119c3:	call   QWORD PTR [rip+0xfffffffffffef89f]        # 0x1001268
 10119c9:	cmp    DWORD PTR [rip+0xe97c],0x0        # 0x102034c
 10119d0:	jne    0x10119de
 10119d2:	call   QWORD PTR [rip+0xfffffffffffef888]        # 0x1001260
 10119d8:	mov    eax,DWORD PTR [rip+0xe96a]        # 0x1020348
 10119de:	jmp    0x1011a0d
 10119e0:	mov    DWORD PTR [rip+0xe962],eax        # 0x1020348
 10119e6:	cmp    DWORD PTR [rip+0xe93f],0x0        # 0x102032c
 10119ed:	jne    0x10119f8
 10119ef:	mov    ecx,eax
 10119f1:	call   QWORD PTR [rip+0xfffffffffffef861]        # 0x1001258
 10119f7:	int3   
 10119f8:	cmp    DWORD PTR [rip+0xe94d],0x0        # 0x102034c
 10119ff:	jne    0x1011a0d
 1011a01:	call   QWORD PTR [rip+0xfffffffffffef859]        # 0x1001260
 1011a07:	mov    eax,DWORD PTR [rip+0xe93b]        # 0x1020348
 1011a0d:	mov    rbx,QWORD PTR [rsp+0x30]
 1011a12:	add    rsp,0x20
 1011a16:	pop    rdi
 1011a17:	ret    
 1011a18:	int3   
 1011a19:	int3   
 1011a1a:	int3   
 1011a1b:	int3   
 1011a1c:	int3   
 1011a1d:	int3   
 1011a1e:	int3   
 1011a1f:	int3   
 1011a20:	sub    rsp,0x28
 1011a24:	mov    eax,0x5a4d
 1011a29:	cmp    WORD PTR [rip+0xfffffffffffee5d0],ax        # 0x1000000
 1011a30:	je     0x1011a36
 1011a32:	xor    ecx,ecx
 1011a34:	jmp    0x1011a6e
 1011a36:	movsxd rax,DWORD PTR [rip+0xfffffffffffee5ff]        # 0x100003c
 1011a3d:	lea    rcx,[rip+0xfffffffffffee5bc]        # 0x1000000
 1011a44:	add    rax,rcx
 1011a47:	cmp    DWORD PTR [rax],0x4550
 1011a4d:	jne    0x1011a32
 1011a4f:	mov    ecx,0x20b
 1011a54:	cmp    WORD PTR [rax+0x18],cx
 1011a58:	jne    0x1011a32
 1011a5a:	xor    ecx,ecx
 1011a5c:	cmp    DWORD PTR [rax+0x84],0xe
 1011a63:	jbe    0x1011a6e
 1011a65:	cmp    DWORD PTR [rax+0xf8],ecx
 1011a6b:	setne  cl
 1011a6e:	mov    DWORD PTR [rip+0xe8b8],ecx        # 0x102032c
 1011a74:	mov    ecx,0x1
 1011a79:	call   QWORD PTR [rip+0xfffffffffffef829]        # 0x10012a8
 1011a7f:	or     rcx,0xffffffffffffffff
 1011a83:	call   QWORD PTR [rip+0xfffffffffffef6e7]        # 0x1001170
 1011a89:	mov    rcx,QWORD PTR [rip+0xfffffffffffef810]        # 0x10012a0
 1011a90:	mov    QWORD PTR [rip+0xee49],rax        # 0x10208e0
 1011a97:	mov    QWORD PTR [rip+0xee4a],rax        # 0x10208e8
 1011a9e:	mov    eax,DWORD PTR [rip+0xee28]        # 0x10208cc
 1011aa4:	mov    DWORD PTR [rcx],eax
 1011aa6:	mov    rdx,QWORD PTR [rip+0xfffffffffffef7eb]        # 0x1001298
 1011aad:	mov    eax,DWORD PTR [rip+0xee15]        # 0x10208c8
 1011ab3:	mov    DWORD PTR [rdx],eax
 1011ab5:	call   0x10120dc
 1011aba:	call   0x101227c
 1011abf:	cmp    DWORD PTR [rip+0x38ba],0x0        # 0x1015380
 1011ac6:	jne    0x1011ad5
 1011ac8:	lea    rcx,[rip+0x7a1]        # 0x1012270
 1011acf:	call   QWORD PTR [rip+0xfffffffffffef7bb]        # 0x1001290
 1011ad5:	cmp    DWORD PTR [rip+0x38a0],0xffffffff        # 0x101537c
 1011adc:	jne    0x1011ae7
 1011ade:	or     ecx,0xffffffff
 1011ae1:	call   QWORD PTR [rip+0xfffffffffffef7a1]        # 0x1001288
 1011ae7:	xor    eax,eax
 1011ae9:	add    rsp,0x28
 1011aed:	ret    
 1011aee:	int3   
 1011aef:	int3   
 1011af0:	int3   
 1011af1:	int3   
 1011af2:	int3   
 1011af3:	int3   
 1011af4:	sub    rsp,0x28
 1011af8:	call   0x1012288
 1011afd:	add    rsp,0x28
 1011b01:	jmp    0x1011898
 1011b06:	int3   
 1011b07:	int3   
 1011b08:	int3   
 1011b09:	int3   
 1011b0a:	int3   
 1011b0b:	int3   
 1011b0c:	mov    rax,rsp
 1011b0f:	mov    QWORD PTR [rax+0x18],rbx
 1011b13:	mov    QWORD PTR [rax+0x20],rsi
 1011b17:	mov    QWORD PTR [rax+0x10],rdx
 1011b1b:	mov    QWORD PTR [rax+0x8],rcx
 1011b1f:	push   rdi
 1011b20:	push   r12
 1011b22:	push   r13
 1011b24:	sub    rsp,0x30
 1011b28:	mov    r13,r9
 1011b2b:	mov    r12d,r8d
 1011b2e:	mov    rsi,rdx
 1011b31:	mov    rdi,rcx
 1011b34:	xor    ebx,ebx
 1011b36:	mov    DWORD PTR [rax-0x28],ebx
 1011b39:	mov    DWORD PTR [rsp+0x24],ebx
 1011b3d:	cmp    ebx,r12d
 1011b40:	jge    0x1011b54
 1011b42:	mov    rcx,rdi
 1011b45:	call   r13
 1011b48:	add    rdi,rsi
 1011b4b:	mov    QWORD PTR [rsp+0x50],rdi
 1011b50:	inc    ebx
 1011b52:	jmp    0x1011b39
 1011b54:	mov    DWORD PTR [rsp+0x20],0x1
 1011b5c:	mov    rbx,QWORD PTR [rsp+0x60]
 1011b61:	mov    rsi,QWORD PTR [rsp+0x68]
 1011b66:	add    rsp,0x30
 1011b6a:	pop    r13
 1011b6c:	pop    r12
 1011b6e:	pop    rdi
 1011b6f:	ret    
 1011b70:	int3   
 1011b71:	int3   
 1011b72:	int3   
 1011b73:	int3   
 1011b74:	int3   
 1011b75:	int3   
 1011b76:	int3   
 1011b77:	int3   
 1011b78:	mov    QWORD PTR [rsp+0x10],rbx
 1011b7d:	mov    DWORD PTR [rsp+0x18],r8d
 1011b82:	mov    QWORD PTR [rsp+0x8],rcx
 1011b87:	push   rsi
 1011b88:	push   rdi
 1011b89:	push   r12
 1011b8b:	sub    rsp,0x40
 1011b8f:	mov    rsi,r9
 1011b92:	mov    edi,r8d
 1011b95:	mov    r12,rdx
 1011b98:	mov    rbx,rcx
 1011b9b:	dec    edi
 1011b9d:	mov    DWORD PTR [rsp+0x70],edi
 1011ba1:	js     0x1011bb2
 1011ba3:	sub    rbx,r12
 1011ba6:	mov    QWORD PTR [rsp+0x60],rbx
 1011bab:	mov    rcx,rbx
 1011bae:	call   rsi
 1011bb0:	jmp    0x1011b9b
 1011bb2:	jmp    0x1011bb4
 1011bb4:	mov    rbx,QWORD PTR [rsp+0x68]
 1011bb9:	add    rsp,0x40
 1011bbd:	pop    r12
 1011bbf:	pop    rdi
 1011bc0:	pop    rsi
 1011bc1:	ret    
 1011bc2:	int3   
 1011bc3:	int3   
 1011bc4:	int3   
 1011bc5:	int3   
 1011bc6:	int3   
 1011bc7:	int3   
 1011bc8:	mov    rax,rsp
 1011bcb:	mov    QWORD PTR [rax+0x20],r9
 1011bcf:	mov    DWORD PTR [rax+0x18],r8d
 1011bd3:	mov    QWORD PTR [rax+0x10],rdx
 1011bd7:	push   rbx
 1011bd8:	push   rsi
 1011bd9:	push   rdi
 1011bda:	push   r12
 1011bdc:	sub    rsp,0x38
 1011be0:	mov    r12,r9
 1011be3:	movsxd rdi,r8d
 1011be6:	mov    rsi,rdx
 1011be9:	and    DWORD PTR [rax-0x38],0x0
 1011bed:	mov    rbx,rdi
 1011bf0:	imul   rbx,rdx
 1011bf4:	add    rbx,rcx
 1011bf7:	mov    QWORD PTR [rax+0x8],rbx
 1011bfb:	dec    edi
 1011bfd:	mov    DWORD PTR [rsp+0x70],edi
 1011c01:	js     0x1011c13
 1011c03:	sub    rbx,rsi
 1011c06:	mov    QWORD PTR [rsp+0x60],rbx
 1011c0b:	mov    rcx,rbx
 1011c0e:	call   r12
 1011c11:	jmp    0x1011bfb
 1011c13:	mov    DWORD PTR [rsp+0x20],0x1
 1011c1b:	add    rsp,0x38
 1011c1f:	pop    r12
 1011c21:	pop    rdi
 1011c22:	pop    rsi
 1011c23:	pop    rbx
 1011c24:	ret    
 1011c25:	int3   
 1011c26:	int3   
 1011c27:	int3   
 1011c28:	int3   
 1011c29:	int3   
 1011c2a:	int3   
 1011c2b:	int3   
 1011c2c:	jmp    QWORD PTR [rip+0xfffffffffffef6ae]        # 0x10012e0
 1011c32:	int3   
 1011c33:	int3   
 1011c34:	int3   
 1011c35:	int3   
 1011c36:	int3   
 1011c37:	int3   
 1011c38:	rex push rbx
 1011c3a:	sub    rsp,0x20
 1011c3e:	mov    rbx,rcx
 1011c41:	mov    rcx,QWORD PTR [rip+0xeca0]        # 0x10208e8
 1011c48:	call   QWORD PTR [rip+0xfffffffffffef51a]        # 0x1001168
 1011c4e:	mov    QWORD PTR [rsp+0x38],rax
 1011c53:	cmp    rax,0xffffffffffffffff
 1011c57:	jne    0x1011c64
 1011c59:	mov    rcx,rbx
 1011c5c:	call   QWORD PTR [rip+0xfffffffffffef66e]        # 0x10012d0
 1011c62:	jmp    0x1011ce2
 1011c64:	mov    ecx,0x8
 1011c69:	call   0x1012366
 1011c6e:	nop
 1011c6f:	mov    rcx,QWORD PTR [rip+0xec72]        # 0x10208e8
 1011c76:	call   QWORD PTR [rip+0xfffffffffffef4ec]        # 0x1001168
 1011c7c:	mov    QWORD PTR [rsp+0x38],rax
 1011c81:	mov    rcx,QWORD PTR [rip+0xec58]        # 0x10208e0
 1011c88:	call   QWORD PTR [rip+0xfffffffffffef4da]        # 0x1001168
 1011c8e:	mov    QWORD PTR [rsp+0x40],rax
 1011c93:	mov    rcx,rbx
 1011c96:	call   QWORD PTR [rip+0xfffffffffffef4d4]        # 0x1001170
 1011c9c:	mov    rcx,rax
 1011c9f:	lea    r8,[rsp+0x40]
 1011ca4:	lea    rdx,[rsp+0x38]
 1011ca9:	call   0x101235a
 1011cae:	mov    rbx,rax
 1011cb1:	mov    rcx,QWORD PTR [rsp+0x38]
 1011cb6:	call   QWORD PTR [rip+0xfffffffffffef4b4]        # 0x1001170
 1011cbc:	mov    QWORD PTR [rip+0xec25],rax        # 0x10208e8
 1011cc3:	mov    rcx,QWORD PTR [rsp+0x40]
 1011cc8:	call   QWORD PTR [rip+0xfffffffffffef4a2]        # 0x1001170
 1011cce:	mov    QWORD PTR [rip+0xec0b],rax        # 0x10208e0
 1011cd5:	mov    ecx,0x8
 1011cda:	call   0x101234e
 1011cdf:	mov    rax,rbx
 1011ce2:	add    rsp,0x20
 1011ce6:	pop    rbx
 1011ce7:	ret    
 1011ce8:	int3   
 1011ce9:	int3   
 1011cea:	int3   
 1011ceb:	int3   
 1011cec:	int3   
 1011ced:	int3   
 1011cee:	int3   
 1011cef:	int3   
 1011cf0:	sub    rsp,0x28
 1011cf4:	call   0x1011c38
 1011cf9:	neg    rax
 1011cfc:	sbb    eax,eax
 1011cfe:	neg    eax
 1011d00:	dec    eax
 1011d02:	add    rsp,0x28
 1011d06:	ret    
 1011d07:	int3   
 1011d08:	int3   
 1011d09:	int3   
 1011d0a:	int3   
 1011d0b:	int3   
 1011d0c:	int3   
 1011d0d:	int3   
 1011d0e:	int3   
 1011d0f:	int3   
 1011d10:	mov    QWORD PTR [rsp+0x8],rcx
 1011d15:	sub    rsp,0x88
 1011d1c:	lea    rcx,[rip+0xe6cd]        # 0x10203f0
 1011d23:	call   QWORD PTR [rip+0xfffffffffffef3ff]        # 0x1001128
 1011d29:	mov    rax,QWORD PTR [rip+0xe7b8]        # 0x10204e8
 1011d30:	mov    QWORD PTR [rsp+0x58],rax
 1011d35:	xor    r8d,r8d
 1011d38:	lea    rdx,[rsp+0x60]
 1011d3d:	mov    rcx,QWORD PTR [rsp+0x58]
 1011d42:	call   0x10123c6
 1011d47:	mov    QWORD PTR [rsp+0x50],rax
 1011d4c:	cmp    QWORD PTR [rsp+0x50],0x0
 1011d52:	je     0x1011d95
 1011d54:	mov    QWORD PTR [rsp+0x38],0x0
 1011d5d:	lea    rax,[rsp+0x48]
 1011d62:	mov    QWORD PTR [rsp+0x30],rax
 1011d67:	lea    rax,[rsp+0x40]
 1011d6c:	mov    QWORD PTR [rsp+0x28],rax
 1011d71:	lea    rax,[rip+0xe678]        # 0x10203f0
 1011d78:	mov    QWORD PTR [rsp+0x20],rax
 1011d7d:	mov    r9,QWORD PTR [rsp+0x50]
 1011d82:	mov    r8,QWORD PTR [rsp+0x58]
 1011d87:	mov    rdx,QWORD PTR [rsp+0x60]
 1011d8c:	xor    ecx,ecx
 1011d8e:	call   0x10123ba
 1011d93:	jmp    0x1011db7
 1011d95:	mov    rax,QWORD PTR [rsp+0x88]
 1011d9d:	mov    QWORD PTR [rip+0xe744],rax        # 0x10204e8
 1011da4:	lea    rax,[rsp+0x88]
 1011dac:	add    rax,0x8
 1011db0:	mov    QWORD PTR [rip+0xe6d1],rax        # 0x1020488
 1011db7:	mov    rax,QWORD PTR [rip+0xe72a]        # 0x10204e8
 1011dbe:	mov    QWORD PTR [rip+0xe59b],rax        # 0x1020360
 1011dc5:	mov    rax,QWORD PTR [rsp+0x90]
 1011dcd:	mov    QWORD PTR [rip+0xe69c],rax        # 0x1020470
 1011dd4:	mov    DWORD PTR [rip+0xe572],0xc0000409        # 0x1020350
 1011dde:	mov    DWORD PTR [rip+0xe56c],0x1        # 0x1020354
 1011de8:	mov    rax,QWORD PTR [rip+0x3571]        # 0x1015360
 1011def:	mov    QWORD PTR [rsp+0x68],rax
 1011df4:	mov    rax,QWORD PTR [rip+0x356d]        # 0x1015368
 1011dfb:	mov    QWORD PTR [rsp+0x70],rax
 1011e00:	call   QWORD PTR [rip+0xfffffffffffef33a]        # 0x1001140
 1011e06:	mov    DWORD PTR [rip+0xe5dc],eax        # 0x10203e8
 1011e0c:	mov    ecx,0x1
 1011e11:	call   0x1012372
 1011e16:	xor    ecx,ecx
 1011e18:	call   QWORD PTR [rip+0xfffffffffffef32a]        # 0x1001148
 1011e1e:	lea    rcx,[rip+0xffffffffffff1813]        # 0x1003638
 1011e25:	call   QWORD PTR [rip+0xfffffffffffef325]        # 0x1001150
 1011e2b:	cmp    DWORD PTR [rip+0xe5b6],0x0        # 0x10203e8
 1011e32:	jne    0x1011e3e
 1011e34:	mov    ecx,0x1
 1011e39:	call   0x1012372
 1011e3e:	call   QWORD PTR [rip+0xfffffffffffef314]        # 0x1001158
 1011e44:	mov    edx,0xc0000409
 1011e49:	mov    rcx,rax
 1011e4c:	call   QWORD PTR [rip+0xfffffffffffef30e]        # 0x1001160
 1011e52:	add    rsp,0x88
 1011e59:	ret    
 1011e5a:	int3   
 1011e5b:	int3   
 1011e5c:	int3   
 1011e5d:	int3   
 1011e5e:	int3   
 1011e5f:	int3   
 1011e60:	jmp    QWORD PTR [rip+0xfffffffffffef48a]        # 0x10012f0
 1011e66:	int3   
 1011e67:	int3   
 1011e68:	int3   
 1011e69:	int3   
 1011e6a:	int3   
 1011e6b:	int3   
 1011e6c:	jmp    QWORD PTR [rip+0xfffffffffffef486]        # 0x10012f8
 1011e72:	int3   
 1011e73:	int3   
 1011e74:	int3   
 1011e75:	int3   
 1011e76:	int3   
 1011e77:	int3   
 1011e78:	jmp    QWORD PTR [rip+0xfffffffffffef482]        # 0x1001300
 1011e7e:	int3   
 1011e7f:	int3   
 1011e80:	int3   
 1011e81:	int3   
 1011e82:	int3   
 1011e83:	int3   
 1011e84:	jmp    QWORD PTR [rip+0xfffffffffffef396]        # 0x1001220
 1011e8a:	int3   
 1011e8b:	int3   
 1011e8c:	int3   
 1011e8d:	int3   
 1011e8e:	int3   
 1011e8f:	int3   
 1011e90:	jmp    QWORD PTR [rip+0xfffffffffffef392]        # 0x1001228
 1011e96:	int3   
 1011e97:	int3   
 1011e98:	int3   
 1011e99:	int3   
 1011e9a:	int3   
 1011e9b:	int3   
 1011e9c:	jmp    QWORD PTR [rip+0xfffffffffffef38e]        # 0x1001230
 1011ea2:	int3   
 1011ea3:	int3   
 1011ea4:	int3   
 1011ea5:	int3   
 1011ea6:	int3   
 1011ea7:	int3   
 1011ea8:	rex push rbx
 1011eaa:	sub    rsp,0x20
 1011eae:	mov    r11d,DWORD PTR [r8]
 1011eb1:	mov    rbx,rdx
 1011eb4:	mov    r9,rcx
 1011eb7:	and    r11d,0xfffffff8
 1011ebb:	test   BYTE PTR [r8],0x4
 1011ebf:	mov    r10,rcx
 1011ec2:	je     0x1011ed7
 1011ec4:	mov    eax,DWORD PTR [r8+0x8]
 1011ec8:	movsxd r10,DWORD PTR [r8+0x4]
 1011ecc:	neg    eax
 1011ece:	add    r10,rcx
 1011ed1:	movsxd rcx,eax
 1011ed4:	and    r10,rcx
 1011ed7:	movsxd rax,r11d
 1011eda:	mov    rdx,QWORD PTR [rax+r10*1]
 1011ede:	mov    rax,QWORD PTR [rbx+0x10]
 1011ee2:	mov    ecx,DWORD PTR [rax+0x8]
 1011ee5:	add    rcx,QWORD PTR [rbx+0x8]
 1011ee9:	test   BYTE PTR [rcx+0x3],0xf
 1011eed:	je     0x1011efb
 1011eef:	movzx  eax,BYTE PTR [rcx+0x3]
 1011ef3:	and    eax,0xfffffff0
 1011ef6:	cdqe   
 1011ef8:	add    r9,rax
 1011efb:	xor    r9,rdx
 1011efe:	mov    rcx,r9
 1011f01:	add    rsp,0x20
 1011f05:	pop    rbx
 1011f06:	jmp    0x1012040
 1011f0b:	int3   
 1011f0c:	int3   
 1011f0d:	int3   
 1011f0e:	int3   
 1011f0f:	int3   
 1011f10:	int3   
 1011f11:	int3   
 1011f12:	int3   
 1011f13:	int3   
 1011f14:	sub    rsp,0x28
 1011f18:	mov    r8,QWORD PTR [r9+0x38]
 1011f1c:	mov    rcx,rdx
 1011f1f:	mov    rdx,r9
 1011f22:	call   0x1011ea8
 1011f27:	mov    eax,0x1
 1011f2c:	add    rsp,0x28
 1011f30:	ret    
 1011f31:	int3   
 1011f32:	int3   
 1011f33:	int3   
 1011f34:	int3   
 1011f35:	int3   
 1011f36:	int3   
 1011f37:	int3   
 1011f38:	mov    rax,rsp
 1011f3b:	mov    QWORD PTR [rax+0x8],rbx
 1011f3f:	mov    QWORD PTR [rax+0x10],rbp
 1011f43:	mov    QWORD PTR [rax+0x18],rsi
 1011f47:	mov    QWORD PTR [rax+0x20],rdi
 1011f4b:	push   r12
 1011f4d:	sub    rsp,0x20
 1011f51:	mov    rbx,QWORD PTR [r9+0x38]
 1011f55:	mov    rsi,rdx
 1011f58:	mov    r12,r8
 1011f5b:	mov    rbp,rcx
 1011f5e:	lea    r8,[rbx+0x4]
 1011f62:	mov    rdx,r9
 1011f65:	mov    rcx,rsi
 1011f68:	mov    rdi,r9
 1011f6b:	call   0x1011ea8
 1011f70:	mov    r11d,DWORD PTR [rbx+0x4]
 1011f74:	mov    r10d,DWORD PTR [rbp+0x4]
 1011f78:	mov    eax,r11d
 1011f7b:	and    r11d,0x2
 1011f7f:	mov    r8d,0x1
 1011f85:	and    eax,r8d
 1011f88:	and    r10b,0x66
 1011f8c:	cmove  r11d,eax
 1011f90:	test   r11d,r11d
 1011f93:	je     0x1011fa9
 1011f95:	mov    r9,rdi
 1011f98:	mov    r8,r12
 1011f9b:	mov    rdx,rsi
 1011f9e:	mov    rcx,rbp
 1011fa1:	call   0x1011e9c
 1011fa6:	mov    r8d,eax
 1011fa9:	mov    rbx,QWORD PTR [rsp+0x30]
 1011fae:	mov    rbp,QWORD PTR [rsp+0x38]
 1011fb3:	mov    rsi,QWORD PTR [rsp+0x40]
 1011fb8:	mov    rdi,QWORD PTR [rsp+0x48]
 1011fbd:	mov    eax,r8d
 1011fc0:	add    rsp,0x20
 1011fc4:	pop    r12
 1011fc6:	ret    
 1011fc7:	int3   
 1011fc8:	int3   
 1011fc9:	int3   
 1011fca:	int3   
 1011fcb:	int3   
 1011fcc:	int3   
 1011fcd:	int3   
 1011fce:	int3   
 1011fcf:	int3   
 1011fd0:	int3   
 1011fd1:	int3   
 1011fd2:	int3   
 1011fd3:	int3   
 1011fd4:	int3   
 1011fd5:	int3   
 1011fd6:	data16 nop WORD PTR [rax+rax*1+0x0]
 1011fe0:	sub    rsp,0x10
 1011fe4:	mov    QWORD PTR [rsp],r10
 1011fe8:	mov    QWORD PTR [rsp+0x8],r11
 1011fed:	xor    r11,r11
 1011ff0:	lea    r10,[rsp+0x18]
 1011ff5:	sub    r10,rax
 1011ff8:	cmovb  r10,r11
 1011ffc:	mov    r11,QWORD PTR gs:0x10
 1012005:	cmp    r10,r11
 1012008:	jae    0x1012020
 101200a:	and    r10w,0xf000
 1012010:	lea    r11,[r11-0x1000]
 1012017:	mov    BYTE PTR [r11],0x0
 101201b:	cmp    r10,r11
 101201e:	jne    0x1012010
 1012020:	mov    r10,QWORD PTR [rsp]
 1012024:	mov    r11,QWORD PTR [rsp+0x8]
 1012029:	add    rsp,0x10
 101202d:	ret    
 101202e:	int3   
 101202f:	int3   
 1012030:	int3   
 1012031:	int3   
 1012032:	int3   
 1012033:	int3   
 1012034:	int3   
 1012035:	int3   
 1012036:	data16 nop WORD PTR [rax+rax*1+0x0]
 1012040:	cmp    rcx,QWORD PTR [rip+0x3319]        # 0x1015360
 1012047:	jne    0x101205a
 1012049:	rol    rcx,0x10
 101204d:	test   cx,0xffff
 1012052:	jne    0x1012056
 1012054:	repz ret 
 1012056:	ror    rcx,0x10
 101205a:	jmp    0x1011d10
 101205f:	int3   
 1012060:	int3   
 1012061:	int3   
 1012062:	int3   
 1012063:	int3   
 1012064:	int3   
 1012065:	int3   
 1012066:	int3   
 1012067:	int3   
 1012068:	sub    rsp,0x28
 101206c:	mov    rax,QWORD PTR [rcx]
 101206f:	cmp    DWORD PTR [rax],0xe06d7363
 1012075:	jne    0x10120a2
 1012077:	cmp    DWORD PTR [rax+0x18],0x4
 101207b:	jne    0x10120a2
 101207d:	mov    eax,DWORD PTR [rax+0x20]
 1012080:	cmp    eax,0x19930520
 1012085:	je     0x101209c
 1012087:	cmp    eax,0x19930521
 101208c:	je     0x101209c
 101208e:	cmp    eax,0x19930522
 1012093:	je     0x101209c
 1012095:	cmp    eax,0x1994000
 101209a:	jne    0x10120a2
 101209c:	call   0x1012342
 10120a1:	int3   
 10120a2:	xor    eax,eax
 10120a4:	add    rsp,0x28
 10120a8:	ret    
 10120a9:	int3   
 10120aa:	int3   
 10120ab:	int3   
 10120ac:	int3   
 10120ad:	int3   
 10120ae:	int3   
 10120af:	int3   
 10120b0:	sub    rsp,0x28
 10120b4:	lea    rcx,[rip+0xffffffffffffffad]        # 0x1012068
 10120bb:	call   QWORD PTR [rip+0xfffffffffffef087]        # 0x1001148
 10120c1:	xor    eax,eax
 10120c3:	add    rsp,0x28
 10120c7:	ret    
 10120c8:	int3   
 10120c9:	int3   
 10120ca:	int3   
 10120cb:	int3   
 10120cc:	int3   
 10120cd:	int3   
 10120ce:	jmp    QWORD PTR [rip+0xfffffffffffef164]        # 0x1001238
 10120d4:	int3   
 10120d5:	int3   
 10120d6:	int3   
 10120d7:	int3   
 10120d8:	int3   
 10120d9:	int3   
 10120da:	int3   
 10120db:	int3   
 10120dc:	mov    QWORD PTR [rsp+0x8],rbx
 10120e1:	push   rdi
 10120e2:	sub    rsp,0x20
 10120e6:	lea    rbx,[rip+0xffffffffffff1603]        # 0x10036f0
 10120ed:	lea    rdi,[rip+0xffffffffffff15fc]        # 0x10036f0
 10120f4:	jmp    0x1012104
 10120f6:	mov    rax,QWORD PTR [rbx]
 10120f9:	test   rax,rax
 10120fc:	je     0x1012100
 10120fe:	call   rax
 1012100:	add    rbx,0x8
 1012104:	cmp    rbx,rdi
 1012107:	jb     0x10120f6
 1012109:	mov    rbx,QWORD PTR [rsp+0x30]
 101210e:	add    rsp,0x20
 1012112:	pop    rdi
 1012113:	ret    
 1012114:	int3   
 1012115:	int3   
 1012116:	int3   
 1012117:	int3   
 1012118:	int3   
 1012119:	int3   
 101211a:	int3   
 101211b:	int3   
 101211c:	mov    QWORD PTR [rsp+0x8],rbx
 1012121:	push   rdi
 1012122:	sub    rsp,0x20
 1012126:	lea    rbx,[rip+0xffffffffffff15d3]        # 0x1003700
 101212d:	lea    rdi,[rip+0xffffffffffff15cc]        # 0x1003700
 1012134:	jmp    0x1012144
 1012136:	mov    rax,QWORD PTR [rbx]
 1012139:	test   rax,rax
 101213c:	je     0x1012140
 101213e:	call   rax
 1012140:	add    rbx,0x8
 1012144:	cmp    rbx,rdi
 1012147:	jb     0x1012136
 1012149:	mov    rbx,QWORD PTR [rsp+0x30]
 101214e:	add    rsp,0x20
 1012152:	pop    rdi
 1012153:	ret    
 1012154:	int3   
 1012155:	int3   
 1012156:	int3   
 1012157:	int3   
 1012158:	int3   
 1012159:	int3   
 101215a:	jmp    QWORD PTR [rip+0xfffffffffffef0e8]        # 0x1001248
 1012160:	int3   
 1012161:	int3   
 1012162:	int3   
 1012163:	int3   
 1012164:	int3   
 1012165:	int3   
 1012166:	jmp    QWORD PTR [rip+0xfffffffffffef0e4]        # 0x1001250
 101216c:	int3   
 101216d:	int3   
 101216e:	int3   
 101216f:	int3   
 1012170:	int3   
 1012171:	int3   
 1012172:	int3   
 1012173:	int3   
 1012174:	int3   
 1012175:	int3   
 1012176:	int3   
 1012177:	int3   
 1012178:	int3   
 1012179:	int3   
 101217a:	int3   
 101217b:	int3   
 101217c:	int3   
 101217d:	int3   
 101217e:	int3   
 101217f:	int3   
 1012180:	mov    rax,rcx
 1012183:	mov    ecx,0x5a4d
 1012188:	cmp    WORD PTR [rax],cx
 101218b:	je     0x1012190
 101218d:	xor    eax,eax
 101218f:	ret    
 1012190:	movsxd rcx,DWORD PTR [rax+0x3c]
 1012194:	add    rcx,rax
 1012197:	xor    eax,eax
 1012199:	cmp    DWORD PTR [rcx],0x4550
 101219f:	jne    0x10121ad
 10121a1:	mov    edx,0x20b
 10121a6:	cmp    WORD PTR [rcx+0x18],dx
 10121aa:	sete   al
 10121ad:	repz ret 
 10121af:	int3   
 10121b0:	int3   
 10121b1:	int3   
 10121b2:	int3   
 10121b3:	int3   
 10121b4:	int3   
 10121b5:	int3   
 10121b6:	int3   
 10121b7:	int3   
 10121b8:	int3   
 10121b9:	int3   
 10121ba:	int3   
 10121bb:	int3   
 10121bc:	int3   
 10121bd:	int3   
 10121be:	int3   
 10121bf:	int3   
 10121c0:	movsxd r8,DWORD PTR [rcx+0x3c]
 10121c4:	xor    r9d,r9d
 10121c7:	mov    r10,rdx
 10121ca:	add    r8,rcx
 10121cd:	movzx  eax,WORD PTR [r8+0x14]
 10121d2:	movzx  r11d,WORD PTR [r8+0x6]
 10121d7:	lea    rcx,[rax+r8*1+0x18]
 10121dc:	test   r11d,r11d
 10121df:	je     0x10121ff
 10121e1:	mov    edx,DWORD PTR [rcx+0xc]
 10121e4:	cmp    r10,rdx
 10121e7:	jb     0x10121f3
 10121e9:	mov    eax,DWORD PTR [rcx+0x8]
 10121ec:	add    eax,edx
 10121ee:	cmp    r10,rax
 10121f1:	jb     0x1012202
 10121f3:	inc    r9d
 10121f6:	add    rcx,0x28
 10121fa:	cmp    r9d,r11d
 10121fd:	jb     0x10121e1
 10121ff:	xor    eax,eax
 1012201:	ret    
 1012202:	mov    rax,rcx
 1012205:	ret    
 1012206:	int3   
 1012207:	int3   
 1012208:	int3   
 1012209:	int3   
 101220a:	int3   
 101220b:	int3   
 101220c:	int3   
 101220d:	int3   
 101220e:	int3   
 101220f:	int3   
 1012210:	sub    rsp,0x28
 1012214:	mov    r8,rcx
 1012217:	lea    r9,[rip+0xfffffffffffedde2]        # 0x1000000
 101221e:	mov    rcx,r9
 1012221:	call   0x1012180
 1012226:	test   eax,eax
 1012228:	je     0x101224c
 101222a:	sub    r8,r9
 101222d:	mov    rdx,r8
 1012230:	mov    rcx,r9
 1012233:	call   0x10121c0
 1012238:	test   rax,rax
 101223b:	je     0x101224c
 101223d:	mov    eax,DWORD PTR [rax+0x24]
 1012240:	shr    eax,0x1f
 1012243:	not    eax
 1012245:	and    eax,0x1
 1012248:	jmp    0x101224c
 101224a:	xor    eax,eax
 101224c:	add    rsp,0x28
 1012250:	ret    
 1012251:	int3   
 1012252:	int3   
 1012253:	int3   
 1012254:	int3   
 1012255:	int3   
 1012256:	int3   
 1012257:	int3   
 1012258:	jmp    QWORD PTR [rip+0xfffffffffffef01a]        # 0x1001278
 101225e:	int3   
 101225f:	int3   
 1012260:	int3   
 1012261:	int3   
 1012262:	int3   
 1012263:	int3   
 1012264:	jmp    QWORD PTR [rip+0xfffffffffffef016]        # 0x1001280
 101226a:	int3   
 101226b:	int3   
 101226c:	int3   
 101226d:	int3   
 101226e:	int3   
 101226f:	int3   
 1012270:	xor    eax,eax
 1012272:	ret    
 1012273:	int3   
 1012274:	int3   
 1012275:	int3   
 1012276:	int3   
 1012277:	int3   
 1012278:	int3   
 1012279:	int3   
 101227a:	int3   
 101227b:	int3   
 101227c:	xor    eax,eax
 101227e:	ret    
 101227f:	int3   
 1012280:	int3   
 1012281:	int3   
 1012282:	int3   
 1012283:	int3   
 1012284:	int3   
 1012285:	int3   
 1012286:	int3   
 1012287:	int3   
 1012288:	mov    QWORD PTR [rsp+0x18],rbx
 101228d:	push   rdi
 101228e:	sub    rsp,0x20
 1012292:	mov    rax,QWORD PTR [rip+0x30c7]        # 0x1015360
 1012299:	and    QWORD PTR [rsp+0x30],0x0
 101229f:	movabs rdi,0x2b992ddfa232
 10122a9:	cmp    rax,rdi
 10122ac:	je     0x10122ba
 10122ae:	not    rax
 10122b1:	mov    QWORD PTR [rip+0x30b0],rax        # 0x1015368
 10122b8:	jmp    0x1012330
 10122ba:	lea    rcx,[rsp+0x30]
 10122bf:	call   QWORD PTR [rip+0xfffffffffffeeeb3]        # 0x1001178
 10122c5:	mov    rbx,QWORD PTR [rsp+0x30]
 10122ca:	call   QWORD PTR [rip+0xfffffffffffeee38]        # 0x1001108
 10122d0:	mov    r11d,eax
 10122d3:	xor    rbx,r11
 10122d6:	call   QWORD PTR [rip+0xfffffffffffeee34]        # 0x1001110
 10122dc:	mov    r11d,eax
 10122df:	xor    rbx,r11
 10122e2:	call   QWORD PTR [rip+0xfffffffffffeee30]        # 0x1001118
 10122e8:	lea    rcx,[rsp+0x38]
 10122ed:	mov    r11d,eax
 10122f0:	xor    rbx,r11
 10122f3:	call   QWORD PTR [rip+0xfffffffffffeee27]        # 0x1001120
 10122f9:	mov    r11,QWORD PTR [rsp+0x38]
 10122fe:	xor    r11,rbx
 1012301:	movabs rax,0xffffffffffff
 101230b:	and    r11,rax
 101230e:	movabs rax,0x2b992ddfa233
 1012318:	cmp    r11,rdi
 101231b:	cmove  r11,rax
 101231f:	mov    QWORD PTR [rip+0x303a],r11        # 0x1015360
 1012326:	not    r11
 1012329:	mov    QWORD PTR [rip+0x3038],r11        # 0x1015368
 1012330:	mov    rbx,QWORD PTR [rsp+0x40]
 1012335:	add    rsp,0x20
 1012339:	pop    rdi
 101233a:	ret    
 101233b:	int3   
 101233c:	int3   
 101233d:	int3   
 101233e:	int3   
 101233f:	int3   
 1012340:	int3   
 1012341:	int3   
 1012342:	jmp    QWORD PTR [rip+0xfffffffffffeef68]        # 0x10012b0
 1012348:	int3   
 1012349:	int3   
 101234a:	int3   
 101234b:	int3   
 101234c:	int3   
 101234d:	int3   
 101234e:	jmp    QWORD PTR [rip+0xfffffffffffeef64]        # 0x10012b8
 1012354:	int3   
 1012355:	int3   
 1012356:	int3   
 1012357:	int3   
 1012358:	int3   
 1012359:	int3   
 101235a:	jmp    QWORD PTR [rip+0xfffffffffffeef60]        # 0x10012c0
 1012360:	int3   
 1012361:	int3   
 1012362:	int3   
 1012363:	int3   
 1012364:	int3   
 1012365:	int3   
 1012366:	jmp    QWORD PTR [rip+0xfffffffffffeef5c]        # 0x10012c8
 101236c:	int3   
 101236d:	int3   
 101236e:	int3   
 101236f:	int3   
 1012370:	int3   
 1012371:	int3   
 1012372:	jmp    QWORD PTR [rip+0xfffffffffffeef60]        # 0x10012d8
 1012378:	int3   
 1012379:	int3   
 101237a:	int3   
 101237b:	int3   
 101237c:	int3   
 101237d:	int3   
 101237e:	jmp    QWORD PTR [rip+0xfffffffffffef034]        # 0x10013b8
 1012384:	int3   
 1012385:	int3   
 1012386:	int3   
 1012387:	int3   
 1012388:	int3   
 1012389:	int3   
 101238a:	jmp    QWORD PTR [rip+0xfffffffffffef020]        # 0x10013b0
 1012390:	int3   
 1012391:	int3   
 1012392:	int3   
 1012393:	int3   
 1012394:	int3   
 1012395:	int3   
 1012396:	jmp    QWORD PTR [rip+0xfffffffffffef00c]        # 0x10013a8
 101239c:	int3   
 101239d:	int3   
 101239e:	int3   
 101239f:	int3   
 10123a0:	int3   
 10123a1:	int3   
 10123a2:	jmp    QWORD PTR [rip+0xfffffffffffeefd0]        # 0x1001378
 10123a8:	int3   
 10123a9:	int3   
 10123aa:	int3   
 10123ab:	int3   
 10123ac:	int3   
 10123ad:	int3   
 10123ae:	jmp    QWORD PTR [rip+0xfffffffffffeefcc]        # 0x1001380
 10123b4:	int3   
 10123b5:	int3   
 10123b6:	int3   
 10123b7:	int3   
 10123b8:	int3   
 10123b9:	int3   
 10123ba:	jmp    QWORD PTR [rip+0xfffffffffffeed78]        # 0x1001138
 10123c0:	int3   
 10123c1:	int3   
 10123c2:	int3   
 10123c3:	int3   
 10123c4:	int3   
 10123c5:	int3   
 10123c6:	jmp    QWORD PTR [rip+0xfffffffffffeed64]        # 0x1001130
 10123cc:	int3   
 10123cd:	int3   
 10123ce:	int3   
 10123cf:	int3   
 10123d0:	int3   
 10123d1:	int3   
 10123d2:	int3   
 10123d3:	int3   
 10123d4:	int3   
 10123d5:	int3   
 10123d6:	int3   
 10123d7:	int3   
 10123d8:	int3   
 10123d9:	int3   
 10123da:	int3   
 10123db:	int3   
 10123dc:	int3   
 10123dd:	int3   
 10123de:	int3   
 10123df:	int3   
 10123e0:	rex push rbp
 10123e2:	sub    rsp,0x20
 10123e6:	mov    rbp,rdx
 10123e9:	mov    rcx,QWORD PTR [rbp+0x40]
 10123ed:	add    rcx,0x8
 10123f1:	call   0x100e7f0
 10123f6:	add    rsp,0x20
 10123fa:	pop    rbp
 10123fb:	ret    
 10123fc:	int3   
 10123fd:	int3   
 10123fe:	int3   
 10123ff:	int3   
 1012400:	int3   
 1012401:	int3   
 1012402:	int3   
 1012403:	int3   
 1012404:	int3   
 1012405:	int3   
 1012406:	int3   
 1012407:	int3   
 1012408:	int3   
 1012409:	int3   
 101240a:	int3   
 101240b:	int3   
 101240c:	int3   
 101240d:	int3   
 101240e:	int3   
 101240f:	int3   
 1012410:	rex push rbp
 1012412:	sub    rsp,0x20
 1012416:	mov    rbp,rdx
 1012419:	mov    rcx,QWORD PTR [rbp+0x40]
 101241d:	add    rcx,0x8
 1012421:	call   0x100e7f0
 1012426:	add    rsp,0x20
 101242a:	pop    rbp
 101242b:	ret    
 101242c:	int3   
 101242d:	int3   
 101242e:	int3   
 101242f:	int3   
 1012430:	int3   
 1012431:	int3   
 1012432:	int3   
 1012433:	int3   
 1012434:	int3   
 1012435:	int3   
 1012436:	int3   
 1012437:	int3   
 1012438:	int3   
 1012439:	int3   
 101243a:	int3   
 101243b:	int3   
 101243c:	int3   
 101243d:	int3   
 101243e:	int3   
 101243f:	int3   
 1012440:	rex push rbp
 1012442:	sub    rsp,0x20
 1012446:	mov    rbp,rdx
 1012449:	lea    rcx,[rbp+0x28]
 101244d:	call   0x1011680
 1012452:	add    rsp,0x20
 1012456:	pop    rbp
 1012457:	ret    
 1012458:	int3   
 1012459:	int3   
 101245a:	int3   
 101245b:	int3   
 101245c:	int3   
 101245d:	int3   
 101245e:	int3   
 101245f:	int3   
 1012460:	rex push rbp
 1012462:	sub    rsp,0x20
 1012466:	mov    rbp,rdx
 1012469:	lea    rcx,[rbp+0x20]
 101246d:	call   0x1011770
 1012472:	add    rsp,0x20
 1012476:	pop    rbp
 1012477:	ret    
 1012478:	int3   
 1012479:	int3   
 101247a:	int3   
 101247b:	int3   
 101247c:	int3   
 101247d:	int3   
 101247e:	int3   
 101247f:	int3   
 1012480:	rex push rbp
 1012482:	sub    rsp,0x20
 1012486:	mov    rbp,rdx
 1012489:	lea    rcx,[rbp+0x38]
 101248d:	call   0x1011320
 1012492:	add    rsp,0x20
 1012496:	pop    rbp
 1012497:	ret    
 1012498:	int3   
 1012499:	int3   
 101249a:	int3   
 101249b:	int3   
 101249c:	int3   
 101249d:	int3   
 101249e:	int3   
 101249f:	int3   
 10124a0:	rex push rbp
 10124a2:	sub    rsp,0x20
 10124a6:	mov    rbp,rdx
 10124a9:	lea    rcx,[rbp+0x78]
 10124ad:	call   0x1010c10
 10124b2:	add    rsp,0x20
 10124b6:	pop    rbp
 10124b7:	ret    
 10124b8:	int3   
 10124b9:	int3   
 10124ba:	int3   
 10124bb:	int3   
 10124bc:	int3   
 10124bd:	int3   
 10124be:	int3   
 10124bf:	int3   
 10124c0:	rex push rbp
 10124c2:	sub    rsp,0x20
 10124c6:	mov    rbp,rdx
 10124c9:	lea    rcx,[rbp+0x38]
 10124cd:	call   0x1010ee0
 10124d2:	add    rsp,0x20
 10124d6:	pop    rbp
 10124d7:	ret    
 10124d8:	int3   
 10124d9:	int3   
 10124da:	int3   
 10124db:	int3   
 10124dc:	int3   
 10124dd:	int3   
 10124de:	int3   
 10124df:	int3   
 10124e0:	rex push rbp
 10124e2:	sub    rsp,0x20
 10124e6:	mov    rbp,rdx
 10124e9:	lea    rcx,[rbp+0x58]
 10124ed:	call   0x1010fb0
 10124f2:	add    rsp,0x20
 10124f6:	pop    rbp
 10124f7:	ret    
 10124f8:	int3   
 10124f9:	int3   
 10124fa:	int3   
 10124fb:	int3   
 10124fc:	int3   
 10124fd:	int3   
 10124fe:	int3   
 10124ff:	int3   
 1012500:	rex push rbp
 1012502:	sub    rsp,0x20
 1012506:	mov    rbp,rdx
 1012509:	lea    rcx,[rbp+0xa8]
 1012510:	call   0x100ec10
 1012515:	add    rsp,0x20
 1012519:	pop    rbp
 101251a:	ret    
 101251b:	int3   
 101251c:	int3   
 101251d:	int3   
 101251e:	int3   
 101251f:	int3   
 1012520:	int3   
 1012521:	int3   
 1012522:	int3   
 1012523:	int3   
 1012524:	int3   
 1012525:	int3   
 1012526:	int3   
 1012527:	int3   
 1012528:	int3   
 1012529:	int3   
 101252a:	int3   
 101252b:	int3   
 101252c:	int3   
 101252d:	int3   
 101252e:	int3   
 101252f:	int3   
 1012530:	rex push rbp
 1012532:	sub    rsp,0x20
 1012536:	mov    rbp,rdx
 1012539:	lea    rcx,[rbp+0x38]
 101253d:	call   0x1003920
 1012542:	add    rsp,0x20
 1012546:	pop    rbp
 1012547:	ret    
 1012548:	int3   
 1012549:	int3   
 101254a:	int3   
 101254b:	int3   
 101254c:	int3   
 101254d:	int3   
 101254e:	int3   
 101254f:	int3   
 1012550:	rex push rbp
 1012552:	sub    rsp,0x20
 1012556:	mov    rbp,rdx
 1012559:	lea    rcx,[rbp+0x48]
 101255d:	call   0x1010c10
 1012562:	add    rsp,0x20
 1012566:	pop    rbp
 1012567:	ret    
 1012568:	int3   
 1012569:	int3   
 101256a:	int3   
 101256b:	int3   
 101256c:	int3   
 101256d:	int3   
 101256e:	int3   
 101256f:	int3   
 1012570:	rex push rbp
 1012572:	sub    rsp,0x20
 1012576:	mov    rbp,rdx
 1012579:	lea    rcx,[rbp+0x30]
 101257d:	call   0x1011320
 1012582:	add    rsp,0x20
 1012586:	pop    rbp
 1012587:	ret    
 1012588:	int3   
 1012589:	int3   
 101258a:	int3   
 101258b:	int3   
 101258c:	int3   
 101258d:	int3   
 101258e:	int3   
 101258f:	int3   
 1012590:	rex push rbp
 1012592:	sub    rsp,0x20
 1012596:	mov    rbp,rdx
 1012599:	lea    rcx,[rbp+0x78]
 101259d:	call   0x1011020
 10125a2:	add    rsp,0x20
 10125a6:	pop    rbp
 10125a7:	ret    
 10125a8:	int3   
 10125a9:	int3   
 10125aa:	int3   
 10125ab:	int3   
 10125ac:	int3   
 10125ad:	int3   
 10125ae:	int3   
 10125af:	int3   
 10125b0:	rex push rbp
 10125b2:	sub    rsp,0x20
 10125b6:	mov    rbp,rdx
 10125b9:	lea    rcx,[rbp+0x80]
 10125c0:	call   0x10110d0
 10125c5:	add    rsp,0x20
 10125c9:	pop    rbp
 10125ca:	ret    
 10125cb:	int3   
 10125cc:	int3   
 10125cd:	int3   
 10125ce:	int3   
 10125cf:	int3   
 10125d0:	int3   
 10125d1:	int3   
 10125d2:	int3   
 10125d3:	int3   
 10125d4:	int3   
 10125d5:	int3   
 10125d6:	int3   
 10125d7:	int3   
 10125d8:	int3   
 10125d9:	int3   
 10125da:	int3   
 10125db:	int3   
 10125dc:	int3   
 10125dd:	int3   
 10125de:	int3   
 10125df:	int3   
 10125e0:	rex push rbp
 10125e2:	sub    rsp,0x20
 10125e6:	mov    rbp,rdx
 10125e9:	lea    rcx,[rbp+0x40]
 10125ed:	call   0x1010d30
 10125f2:	add    rsp,0x20
 10125f6:	pop    rbp
 10125f7:	ret    
 10125f8:	int3   
 10125f9:	int3   
 10125fa:	int3   
 10125fb:	int3   
 10125fc:	int3   
 10125fd:	int3   
 10125fe:	int3   
 10125ff:	int3   
 1012600:	rex push rbp
 1012602:	sub    rsp,0x20
 1012606:	mov    rbp,rdx
 1012609:	lea    rcx,[rbp+0x2a8]
 1012610:	call   0x1010e70
 1012615:	add    rsp,0x20
 1012619:	pop    rbp
 101261a:	ret    
 101261b:	int3   
 101261c:	int3   
 101261d:	int3   
 101261e:	int3   
 101261f:	int3   
 1012620:	rex push rbp
 1012622:	sub    rsp,0x20
 1012626:	mov    rbp,rdx
 1012629:	lea    rcx,[rbp+0x48]
 101262d:	call   0x1003920
 1012632:	add    rsp,0x20
 1012636:	pop    rbp
 1012637:	ret    
 1012638:	int3   
 1012639:	int3   
 101263a:	int3   
 101263b:	int3   
 101263c:	int3   
 101263d:	int3   
 101263e:	int3   
 101263f:	int3   
 1012640:	rex push rbp
 1012642:	sub    rsp,0x20
 1012646:	mov    rbp,rdx
 1012649:	lea    rcx,[rbp+0x40]
 101264d:	call   0x1010d30
 1012652:	add    rsp,0x20
 1012656:	pop    rbp
 1012657:	ret    
 1012658:	int3   
 1012659:	int3   
 101265a:	int3   
 101265b:	int3   
 101265c:	int3   
 101265d:	int3   
 101265e:	int3   
 101265f:	int3   
 1012660:	rex push rbp
 1012662:	sub    rsp,0x20
 1012666:	mov    rbp,rdx
 1012669:	lea    rcx,[rbp+0x70]
 101266d:	call   0x1003920
 1012672:	add    rsp,0x20
 1012676:	pop    rbp
 1012677:	ret    
 1012678:	int3   
 1012679:	int3   
 101267a:	int3   
 101267b:	int3   
 101267c:	int3   
 101267d:	int3   
 101267e:	int3   
 101267f:	int3   
 1012680:	rex push rbp
 1012682:	sub    rsp,0x20
 1012686:	mov    rbp,rdx
 1012689:	lea    rcx,[rbp+0x38]
 101268d:	call   0x10114a0
 1012692:	add    rsp,0x20
 1012696:	pop    rbp
 1012697:	ret    
 1012698:	int3   
 1012699:	int3   
 101269a:	int3   
 101269b:	int3   
 101269c:	int3   
 101269d:	int3   
 101269e:	int3   
 101269f:	int3   
 10126a0:	rex push rbp
 10126a2:	sub    rsp,0x20
 10126a6:	mov    rbp,rdx
 10126a9:	lea    rcx,[rbp+0xde0]
 10126b0:	call   0x100ec10
 10126b5:	add    rsp,0x20
 10126b9:	pop    rbp
 10126ba:	ret    
 10126bb:	int3   
 10126bc:	int3   
 10126bd:	int3   
 10126be:	int3   
 10126bf:	int3   
 10126c0:	int3   
 10126c1:	int3   
 10126c2:	int3   
 10126c3:	int3   
 10126c4:	int3   
 10126c5:	int3   
 10126c6:	int3   
 10126c7:	int3   
 10126c8:	int3   
 10126c9:	int3   
 10126ca:	int3   
 10126cb:	int3   
 10126cc:	int3   
 10126cd:	int3   
 10126ce:	int3   
 10126cf:	int3   
 10126d0:	rex push rbp
 10126d2:	sub    rsp,0x20
 10126d6:	mov    rbp,rdx
 10126d9:	lea    rcx,[rbp+0x28]
 10126dd:	call   0x1011570
 10126e2:	add    rsp,0x20
 10126e6:	pop    rbp
 10126e7:	ret    
 10126e8:	int3   
 10126e9:	int3   
 10126ea:	int3   
 10126eb:	int3   
 10126ec:	int3   
 10126ed:	int3   
 10126ee:	int3   
 10126ef:	int3   
 10126f0:	rex push rbp
 10126f2:	sub    rsp,0x20
 10126f6:	mov    rbp,rdx
 10126f9:	lea    rcx,[rbp+0x20]
 10126fd:	call   0x1003920
 1012702:	add    rsp,0x20
 1012706:	pop    rbp
 1012707:	ret    
 1012708:	int3   
 1012709:	int3   
 101270a:	int3   
 101270b:	int3   
 101270c:	int3   
 101270d:	int3   
 101270e:	int3   
 101270f:	int3   
 1012710:	rex push rbp
 1012712:	sub    rsp,0x20
 1012716:	mov    rbp,rdx
 1012719:	lea    rcx,[rbp+0x38]
 101271d:	call   0x1011320
 1012722:	add    rsp,0x20
 1012726:	pop    rbp
 1012727:	ret    
 1012728:	int3   
 1012729:	int3   
 101272a:	int3   
 101272b:	int3   
 101272c:	int3   
 101272d:	int3   
 101272e:	int3   
 101272f:	int3   
 1012730:	rex push rbp
 1012732:	sub    rsp,0x20
 1012736:	mov    rbp,rdx
 1012739:	lea    rcx,[rbp+0x30]
 101273d:	call   0x1003920
 1012742:	add    rsp,0x20
 1012746:	pop    rbp
 1012747:	ret    
 1012748:	int3   
 1012749:	int3   
 101274a:	int3   
 101274b:	int3   
 101274c:	int3   
 101274d:	int3   
 101274e:	int3   
 101274f:	int3   
 1012750:	rex push rbp
 1012752:	sub    rsp,0x20
 1012756:	mov    rbp,rdx
 1012759:	lea    rcx,[rbp+0x58]
 101275d:	call   0x1003920
 1012762:	add    rsp,0x20
 1012766:	pop    rbp
 1012767:	ret    
 1012768:	int3   
 1012769:	int3   
 101276a:	int3   
 101276b:	int3   
 101276c:	int3   
 101276d:	int3   
 101276e:	int3   
 101276f:	int3   
 1012770:	rex push rbp
 1012772:	sub    rsp,0x20
 1012776:	mov    rbp,rdx
 1012779:	lea    rcx,[rbp+0x80]
 1012780:	call   0x100e7f0
 1012785:	add    rsp,0x20
 1012789:	pop    rbp
 101278a:	ret    
 101278b:	int3   
 101278c:	int3   
 101278d:	int3   
 101278e:	int3   
 101278f:	int3   
 1012790:	rex push rbp
 1012792:	sub    rsp,0x20
 1012796:	mov    rbp,rdx
 1012799:	mov    rcx,QWORD PTR [rbp+0x9a0]
 10127a0:	call   0x1011e90
 10127a5:	add    rsp,0x20
 10127a9:	pop    rbp
 10127aa:	ret    
 10127ab:	int3   
 10127ac:	int3   
 10127ad:	int3   
 10127ae:	int3   
 10127af:	int3   
 10127b0:	rex push rbp
 10127b2:	sub    rsp,0x20
 10127b6:	mov    rbp,rdx
 10127b9:	lea    rcx,[rbp+0x78]
 10127bd:	call   0x100e7f0
 10127c2:	add    rsp,0x20
 10127c6:	pop    rbp
 10127c7:	ret    
 10127c8:	int3   
 10127c9:	int3   
 10127ca:	int3   
 10127cb:	int3   
 10127cc:	int3   
 10127cd:	int3   
 10127ce:	int3   
 10127cf:	int3   
 10127d0:	rex push rbp
 10127d2:	sub    rsp,0x20
 10127d6:	mov    rbp,rdx
 10127d9:	lea    rcx,[rbp+0x58]
 10127dd:	call   0x1003920
 10127e2:	add    rsp,0x20
 10127e6:	pop    rbp
 10127e7:	ret    
 10127e8:	int3   
 10127e9:	int3   
 10127ea:	int3   
 10127eb:	int3   
 10127ec:	int3   
 10127ed:	int3   
 10127ee:	int3   
 10127ef:	int3   
 10127f0:	rex push rbp
 10127f2:	sub    rsp,0x20
 10127f6:	mov    rbp,rdx
 10127f9:	lea    rcx,[rbp+0x80]
 1012800:	call   0x1011320
 1012805:	add    rsp,0x20
 1012809:	pop    rbp
 101280a:	ret    
 101280b:	int3   
 101280c:	int3   
 101280d:	int3   
 101280e:	int3   
 101280f:	int3   
 1012810:	rex push rbp
 1012812:	sub    rsp,0x20
 1012816:	mov    rbp,rdx
 1012819:	lea    rcx,[rbp+0x68]
 101281d:	call   0x1011570
 1012822:	add    rsp,0x20
 1012826:	pop    rbp
 1012827:	ret    
 1012828:	int3   
 1012829:	int3   
 101282a:	int3   
 101282b:	int3   
 101282c:	int3   
 101282d:	int3   
 101282e:	int3   
 101282f:	int3   
 1012830:	rex push rbp
 1012832:	sub    rsp,0x20
 1012836:	mov    rbp,rdx
 1012839:	lea    rcx,[rbp+0x48]
 101283d:	call   0x1011180
 1012842:	add    rsp,0x20
 1012846:	pop    rbp
 1012847:	ret    
 1012848:	int3   
 1012849:	int3   
 101284a:	int3   
 101284b:	int3   
 101284c:	int3   
 101284d:	int3   
 101284e:	int3   
 101284f:	int3   
 1012850:	rex push rbp
 1012852:	sub    rsp,0x20
 1012856:	mov    rbp,rdx
 1012859:	lea    rcx,[rbp+0x30]
 101285d:	call   0x1011250
 1012862:	add    rsp,0x20
 1012866:	pop    rbp
 1012867:	ret    
 1012868:	int3   
 1012869:	int3   
 101286a:	int3   
 101286b:	int3   
 101286c:	int3   
 101286d:	int3   
 101286e:	int3   
 101286f:	int3   
 1012870:	rex push rbp
 1012872:	sub    rsp,0x20
 1012876:	mov    rbp,rdx
 1012879:	lea    rcx,[rbp+0x40]
 101287d:	call   0x1003920
 1012882:	add    rsp,0x20
 1012886:	pop    rbp
 1012887:	ret    
 1012888:	int3   
 1012889:	int3   
 101288a:	int3   
 101288b:	int3   
 101288c:	int3   
 101288d:	int3   
 101288e:	int3   
 101288f:	int3   
 1012890:	rex push rbp
 1012892:	sub    rsp,0x20
 1012896:	mov    rbp,rdx
 1012899:	lea    rcx,[rbp+0x60]
 101289d:	call   0x1003920
 10128a2:	add    rsp,0x20
 10128a6:	pop    rbp
 10128a7:	ret    
 10128a8:	int3   
 10128a9:	int3   
 10128aa:	int3   
 10128ab:	int3   
 10128ac:	int3   
 10128ad:	int3   
 10128ae:	int3   
 10128af:	int3   
 10128b0:	rex push rbp
 10128b2:	sub    rsp,0x20
 10128b6:	mov    rbp,rdx
 10128b9:	lea    rcx,[rbp+0x38]
 10128bd:	call   0x1003920
 10128c2:	add    rsp,0x20
 10128c6:	pop    rbp
 10128c7:	ret    
 10128c8:	int3   
 10128c9:	int3   
 10128ca:	int3   
 10128cb:	int3   
 10128cc:	int3   
 10128cd:	int3   
 10128ce:	int3   
 10128cf:	int3   
 10128d0:	rex push rbp
 10128d2:	sub    rsp,0x20
 10128d6:	mov    rbp,rdx
 10128d9:	lea    rcx,[rbp+0x20]
 10128dd:	call   0x1011680
 10128e2:	add    rsp,0x20
 10128e6:	pop    rbp
 10128e7:	ret    
 10128e8:	int3   
 10128e9:	int3   
 10128ea:	int3   
 10128eb:	int3   
 10128ec:	int3   
 10128ed:	int3   
 10128ee:	int3   
 10128ef:	int3   
 10128f0:	rex push rbp
 10128f2:	sub    rsp,0x20
 10128f6:	mov    rbp,rdx
 10128f9:	lea    rcx,[rbp+0x28]
 10128fd:	call   0x1011770
 1012902:	add    rsp,0x20
 1012906:	pop    rbp
 1012907:	ret    
 1012908:	int3   
 1012909:	int3   
 101290a:	int3   
 101290b:	int3   
 101290c:	int3   
 101290d:	int3   
 101290e:	int3   
 101290f:	int3   
 1012910:	rex push rbp
 1012912:	sub    rsp,0x20
 1012916:	mov    rbp,rdx
 1012919:	mov    rcx,QWORD PTR [rbp+0x4e8]
 1012920:	call   0x1011e90
 1012925:	add    rsp,0x20
 1012929:	pop    rbp
 101292a:	ret    
 101292b:	int3   
 101292c:	int3   
 101292d:	int3   
 101292e:	int3   
 101292f:	int3   
 1012930:	mov    QWORD PTR [rsp+0x10],rdx
 1012935:	push   rbp
 1012936:	sub    rsp,0x40
 101293a:	mov    rbp,rdx
 101293d:	mov    DWORD PTR [rbp+0x4f0],0x1
 1012947:	lea    rax,[rip+0xffffffffffffe26a]        # 0x1010bb8
 101294e:	jmp    0x1012957
 1012950:	lea    rax,[rip+0xffffffffffffe25f]        # 0x1010bb6
 1012957:	add    rsp,0x40
 101295b:	pop    rbp
 101295c:	ret    
 101295d:	int3   
 101295e:	int3   
 101295f:	int3   
 1012960:	int3   
 1012961:	int3   
 1012962:	int3   
 1012963:	int3   
 1012964:	rex push rbp
 1012966:	sub    rsp,0x20
 101296a:	mov    rbp,rdx
 101296d:	mov    rax,QWORD PTR [rcx]
 1012970:	mov    rdx,rcx
 1012973:	mov    ecx,DWORD PTR [rax]
 1012975:	call   0x1012166
 101297a:	nop
 101297b:	add    rsp,0x20
 101297f:	pop    rbp
 1012980:	ret    
 1012981:	int3   
 1012982:	int3   
 1012983:	int3   
 1012984:	int3   
 1012985:	int3   
 1012986:	int3   
 1012987:	int3   
 1012988:	rex push rbp
 101298a:	sub    rsp,0x20
 101298e:	mov    rbp,rdx
 1012991:	cmp    DWORD PTR [rbp+0x20],0x0
 1012995:	jne    0x10129ad
 1012997:	mov    r9,QWORD PTR [rbp+0x70]
 101299b:	mov    r8d,DWORD PTR [rbp+0x24]
 101299f:	mov    rdx,QWORD PTR [rbp+0x58]
 10129a3:	mov    rcx,QWORD PTR [rbp+0x50]
 10129a7:	call   0x1011b78
 10129ac:	nop
 10129ad:	add    rsp,0x20
 10129b1:	pop    rbp
 10129b2:	ret    
 10129b3:	int3   
 10129b4:	int3   
 10129b5:	int3   
 10129b6:	int3   
 10129b7:	int3   
 10129b8:	int3   
 10129b9:	int3   
 10129ba:	rex push rbp
 10129bc:	sub    rsp,0x20
 10129c0:	mov    rbp,rdx
 10129c3:	mov    QWORD PTR [rbp+0x38],rcx
 10129c7:	mov    QWORD PTR [rbp+0x28],rcx
 10129cb:	mov    rax,QWORD PTR [rbp+0x28]
 10129cf:	mov    rcx,QWORD PTR [rax]
 10129d2:	mov    QWORD PTR [rbp+0x30],rcx
 10129d6:	mov    rax,QWORD PTR [rbp+0x30]
 10129da:	cmp    DWORD PTR [rax],0xe06d7363
 10129e0:	je     0x10129ee
 10129e2:	mov    DWORD PTR [rbp+0x20],0x0
 10129e9:	mov    eax,DWORD PTR [rbp+0x20]
 10129ec:	jmp    0x10129f4
 10129ee:	call   0x1012342
 10129f3:	nop
 10129f4:	add    rsp,0x20
 10129f8:	pop    rbp
 10129f9:	ret    
 10129fa:	int3   
 10129fb:	int3   
 10129fc:	int3   
 10129fd:	int3   
 10129fe:	int3   
 10129ff:	int3   
 1012a00:	int3   
 1012a01:	rex push rbp
 1012a03:	sub    rsp,0x20
 1012a07:	mov    rbp,rdx
 1012a0a:	cmp    DWORD PTR [rbp+0x20],0x0
 1012a0e:	jne    0x1012a26
 1012a10:	mov    r9,QWORD PTR [rbp+0x78]
 1012a14:	mov    r8d,DWORD PTR [rbp+0x70]
 1012a18:	mov    rdx,QWORD PTR [rbp+0x68]
 1012a1c:	mov    rcx,QWORD PTR [rbp+0x60]
 1012a20:	call   0x1011b78
 1012a25:	nop
 1012a26:	add    rsp,0x20
 1012a2a:	pop    rbp
 1012a2b:	ret    
 1012a2c:	int3   
 1012a2d:	int3   
 1012a2e:	int3   
 1012a2f:	int3   
 1012a30:	int3   
 1012a31:	int3   
 1012a32:	int3   
 1012a33:	rex push rbp
 1012a35:	sub    rsp,0x20
 1012a39:	mov    rbp,rdx
 1012a3c:	mov    ecx,0x8
 1012a41:	call   0x101234e
 1012a46:	nop
 1012a47:	add    rsp,0x20
 1012a4b:	pop    rbp
 1012a4c:	ret    
 1012a4d:	int3   
 1012a4e:	int3   
 1012a4f:	int3   
 1012a50:	int3   
 1012a51:	int3   
 1012a52:	int3   
 1012a53:	int3   
 1012a54:	int3   
 1012a55:	int3   
 1012a56:	int3   
 1012a57:	int3   
 1012a58:	int3   
 1012a59:	int3   
 1012a5a:	int3   
 1012a5b:	int3   
 1012a5c:	int3   
 1012a5d:	int3   
 1012a5e:	int3   
 1012a5f:	int3   
 1012a60:	rex push rbp
 1012a62:	sub    rsp,0x20
 1012a66:	mov    rbp,rdx
 1012a69:	mov    rax,QWORD PTR [rcx]
 1012a6c:	xor    ecx,ecx
 1012a6e:	cmp    DWORD PTR [rax],0xc0000005
 1012a74:	sete   cl
 1012a77:	mov    eax,ecx
 1012a79:	mov    eax,ecx
 1012a7b:	add    rsp,0x20
 1012a7f:	pop    rbp
 1012a80:	ret    
 1012a81:	int3   
 1012a82:	int3   
 1012a83:	int3   
 1012a84:	int3   
 1012a85:	int3   
 1012a86:	int3   
 1012a87:	int3   
 1012a88:	int3   
 1012a89:	int3   
 1012a8a:	int3   
 1012a8b:	int3   
 1012a8c:	int3   
 1012a8d:	int3   
 1012a8e:	int3   
 1012a8f:	int3   
 1012a90:	int3   
 1012a91:	int3   
 1012a92:	int3   
 1012a93:	int3   
 1012a94:	int3   
 1012a95:	int3   
 1012a96:	int3   
 1012a97:	int3   
 1012a98:	int3   
 1012a99:	int3   
 1012a9a:	int3   
 1012a9b:	int3   
 1012a9c:	int3   
 1012a9d:	int3   
 1012a9e:	int3   
 1012a9f:	int3   
 1012aa0:	rex push rbp
 1012aa2:	mov    rbp,rsp
 1012aa5:	sub    rsp,0x20
 1012aa9:	lea    rcx,[rip+0xd860]        # 0x1020310
 1012ab0:	call   0x100f530
 1012ab5:	lea    rcx,[rip+0x84]        # 0x1012b40
 1012abc:	call   0x1011cf0
 1012ac1:	add    rsp,0x20
 1012ac5:	pop    rbp
 1012ac6:	ret    
 1012ac7:	int3   
 1012ac8:	int3   
 1012ac9:	int3   
 1012aca:	int3   
 1012acb:	int3   
 1012acc:	int3   
 1012acd:	int3   
 1012ace:	int3   
 1012acf:	int3   
 1012ad0:	rex push rbp
 1012ad2:	mov    rbp,rsp
 1012ad5:	sub    rsp,0x20
 1012ad9:	lea    rcx,[rip+0xd840]        # 0x1020320
 1012ae0:	call   0x100efb0
 1012ae5:	lea    rcx,[rip+0x84]        # 0x1012b70
 1012aec:	call   0x1011cf0
 1012af1:	add    rsp,0x20
 1012af5:	pop    rbp
 1012af6:	ret    
 1012af7:	int3   
 1012af8:	int3   
 1012af9:	int3   
 1012afa:	int3   
 1012afb:	int3   
 1012afc:	int3   
 1012afd:	int3   
 1012afe:	int3   
 1012aff:	int3   
 1012b00:	rex push rbp
 1012b02:	mov    rbp,rsp
 1012b05:	sub    rsp,0x20
 1012b09:	lea    rcx,[rip+0xd808]        # 0x1020318
 1012b10:	call   0x100efb0
 1012b15:	lea    rcx,[rip+0x84]        # 0x1012ba0
 1012b1c:	call   0x1011cf0
 1012b21:	add    rsp,0x20
 1012b25:	pop    rbp
 1012b26:	ret    
 1012b27:	int3   
 1012b28:	int3   
 1012b29:	int3   
 1012b2a:	int3   
 1012b2b:	int3   
 1012b2c:	int3   
 1012b2d:	int3   
 1012b2e:	int3   
 1012b2f:	int3   
 1012b30:	int3   
 1012b31:	int3   
 1012b32:	int3   
 1012b33:	int3   
 1012b34:	int3   
 1012b35:	int3   
 1012b36:	int3   
 1012b37:	int3   
 1012b38:	int3   
 1012b39:	int3   
 1012b3a:	int3   
 1012b3b:	int3   
 1012b3c:	int3   
 1012b3d:	int3   
 1012b3e:	int3   
 1012b3f:	int3   
 1012b40:	rex push rbp
 1012b42:	mov    rbp,rsp
 1012b45:	sub    rsp,0x20
 1012b49:	lea    rcx,[rip+0xd7c0]        # 0x1020310
 1012b50:	call   0x100f560
 1012b55:	add    rsp,0x20
 1012b59:	pop    rbp
 1012b5a:	ret    
 1012b5b:	int3   
 1012b5c:	int3   
 1012b5d:	int3   
 1012b5e:	int3   
 1012b5f:	int3   
 1012b60:	int3   
 1012b61:	int3   
 1012b62:	int3   
 1012b63:	int3   
 1012b64:	int3   
 1012b65:	int3   
 1012b66:	int3   
 1012b67:	int3   
 1012b68:	int3   
 1012b69:	int3   
 1012b6a:	int3   
 1012b6b:	int3   
 1012b6c:	int3   
 1012b6d:	int3   
 1012b6e:	int3   
 1012b6f:	int3   
 1012b70:	rex push rbp
 1012b72:	mov    rbp,rsp
 1012b75:	sub    rsp,0x20
 1012b79:	lea    rcx,[rip+0xd7a0]        # 0x1020320
 1012b80:	call   0x100efe0
 1012b85:	add    rsp,0x20
 1012b89:	pop    rbp
 1012b8a:	ret    
 1012b8b:	int3   
 1012b8c:	int3   
 1012b8d:	int3   
 1012b8e:	int3   
 1012b8f:	int3   
 1012b90:	int3   
 1012b91:	int3   
 1012b92:	int3   
 1012b93:	int3   
 1012b94:	int3   
 1012b95:	int3   
 1012b96:	int3   
 1012b97:	int3   
 1012b98:	int3   
 1012b99:	int3   
 1012b9a:	int3   
 1012b9b:	int3   
 1012b9c:	int3   
 1012b9d:	int3   
 1012b9e:	int3   
 1012b9f:	int3   
 1012ba0:	rex push rbp
 1012ba2:	mov    rbp,rsp
 1012ba5:	sub    rsp,0x20
 1012ba9:	lea    rcx,[rip+0xd768]        # 0x1020318
 1012bb0:	call   0x100efe0
 1012bb5:	add    rsp,0x20
 1012bb9:	pop    rbp
 1012bba:	ret    
 1012bbb:	int3   
 1012bbc:	int3   
 1012bbd:	int3   
 1012bbe:	int3   
 1012bbf:	int3   
 1012bc0:	add    DWORD PTR [rdx],edx
 1012bc2:	add    al,BYTE PTR [rax]
 1012bc4:	adc    dh,BYTE PTR [rdx]
 1012bc6:	or     edx,DWORD PTR [rax+0x1]
 1012bc9:	adc    al,BYTE PTR [rdx]
 1012bcb:	add    BYTE PTR [rdx],dl
 1012bcd:	push   rdx
 1012bce:	or     edx,DWORD PTR [rax+0x1]
 1012bd1:	adc    al,BYTE PTR [rdx]
 1012bd3:	add    BYTE PTR [rdx],dl
 1012bd5:	xor    cl,BYTE PTR [rbx]
 1012bd7:	push   rax
 1012bd8:	add    DWORD PTR [rbx],edx
 1012bda:	add    eax,DWORD PTR [rax]
 1012bdc:	adc    esp,DWORD PTR [rdx]
 1012bde:	pshufw mm1,QWORD PTR [rbx],0x50
 1012be2:	add    BYTE PTR [rax],al
 1012be4:	add    DWORD PTR [rcx],ecx
 1012be6:	add    DWORD PTR [rax],eax
 1012be8:	(bad)  
 1012be9:	push   rax
 1012bea:	add    BYTE PTR [rax],al
 1012bec:	add    DWORD PTR [rdx],edx
 1012bee:	add    al,BYTE PTR [rax]
 1012bf0:	adc    dh,BYTE PTR [rdx]
 1012bf2:	or     edx,DWORD PTR [rax+0x1]
 1012bf5:	or     eax,0x320d0002
 1012bfa:	(bad)  
 1012bfb:	push   rax
 1012bfc:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e2c04
 1012c02:	(bad)  
 1012c03:	push   rax
 1012c04:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e2c0c
 1012c0a:	(bad)  
 1012c0b:	push   rax
 1012c0c:	add    DWORD PTR [rcx],ecx
 1012c0e:	add    DWORD PTR [rax],eax
 1012c10:	(bad)  
 1012c11:	push   rax
 1012c12:	add    BYTE PTR [rax],al
 1012c14:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e2c1c
 1012c1a:	(bad)  
 1012c1b:	push   rax
 1012c1c:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e2c24
 1012c22:	(bad)  
 1012c23:	push   rax
 1012c24:	add    DWORD PTR [rcx],ecx
 1012c26:	add    DWORD PTR [rax],eax
 1012c28:	(bad)  
 1012c29:	push   rax
 1012c2a:	add    BYTE PTR [rax],al
 1012c2c:	add    DWORD PTR [rcx],ecx
 1012c2e:	add    DWORD PTR [rax],eax
 1012c30:	(bad)  
 1012c31:	push   rax
 1012c32:	add    BYTE PTR [rax],al
 1012c34:	add    DWORD PTR [rcx],ecx
 1012c36:	add    DWORD PTR [rax],eax
 1012c38:	(bad)  
 1012c39:	push   rax
 1012c3a:	add    BYTE PTR [rax],al
 1012c3c:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e2c44
 1012c42:	(bad)  
 1012c43:	push   rax
 1012c44:	add    DWORD PTR [rdi],edx
 1012c46:	add    al,BYTE PTR [rax]
 1012c48:	(bad)  
 1012c49:	adc    dl,BYTE PTR [rax]
 1012c4b:	push   rax
 1012c4c:	add    DWORD PTR [rdi],edx
 1012c4e:	add    al,BYTE PTR [rax]
 1012c50:	(bad)  
 1012c51:	adc    dl,BYTE PTR [rax]
 1012c53:	push   rax
 1012c54:	add    DWORD PTR [rdx+rax*1],ebx
 1012c57:	add    BYTE PTR [rdx+rdx*1],bl
 1012c5a:	adc    eax,0x21c0150
 1012c5f:	add    BYTE PTR [rdx+rsi*2],bl
 1012c62:	adc    eax,0x2170150
 1012c67:	add    BYTE PTR [rdi],dl
 1012c69:	jb     0x1012c7b
 1012c6b:	push   rax
 1012c6c:	add    DWORD PTR [rdx+rax*1],ebx
 1012c6f:	add    BYTE PTR [rdx+rdx*4],bl
 1012c72:	adc    eax,0x2170150
 1012c77:	add    BYTE PTR [rdi],dl
 1012c79:	push   rdx
 1012c7a:	adc    BYTE PTR [rax+0x19],dl
 1012c7d:	add    eax,DWORD PTR es:[rax]
 1012c80:	or     al,0x1
 1012c82:	add    DWORD PTR [rdx],r8d
 1012c85:	push   rax
 1012c86:	add    BYTE PTR [rax],al
 1012c88:	cmp    BYTE PTR [rdi],bl
 1012c8a:	add    DWORD PTR [rax],eax
 1012c8c:	sbb    BYTE PTR [rip+0xa120000],dl        # 0xb132c92
 1012c92:	add    BYTE PTR [rax],al
 1012c94:	(bad)  
 1012c95:	(bad)  
 1012c96:	(bad)  
 1012c97:	call   QWORD PTR [rax]
 1012c99:	(bad)  
 1012c9a:	add    DWORD PTR [rax],eax
 1012c9c:	add    BYTE PTR [rax],al
 1012c9e:	add    BYTE PTR [rax],al
 1012ca0:	xor    BYTE PTR [rdi],ah
 1012ca2:	add    DWORD PTR [rax],eax
 1012ca4:	add    DWORD PTR [rax],eax
 1012ca6:	add    BYTE PTR [rax],al
 1012ca8:	push   rax
 1012ca9:	(bad)  
 1012caa:	add    DWORD PTR [rax],eax
 1012cac:	add    al,BYTE PTR [rax]
 1012cae:	add    BYTE PTR [rax],al
 1012cb0:	jo     0x1012cd9
 1012cb2:	add    DWORD PTR [rax],eax
 1012cb4:	add    al,BYTE PTR [rax]
 1012cb6:	add    BYTE PTR [rax],al
 1012cb8:	nop
 1012cb9:	(bad)  
 1012cba:	add    DWORD PTR [rax],eax
 1012cbc:	add    al,BYTE PTR [rax]
 1012cbe:	add    BYTE PTR [rax],al
 1012cc0:	mov    al,0x27
 1012cc2:	add    DWORD PTR [rax],eax
 1012cc4:	sar    BYTE PTR [rsi],0x0
 1012cc7:	add    bh,bh
 1012cc9:	(bad)  
 1012cca:	(bad)  
 1012ccb:	dec    DWORD PTR [rsi]
 1012ccd:	(bad)  
 1012cce:	add    BYTE PTR [rax],al
 1012cd0:	add    BYTE PTR [rax],al
 1012cd2:	add    BYTE PTR [rax],al
 1012cd4:	sbb    DWORD PTR [rdi],edi
 1012cd6:	add    BYTE PTR [rax],al
 1012cd8:	add    DWORD PTR [rax],eax
 1012cda:	add    BYTE PTR [rax],al
 1012cdc:	and    al,0x3f
 1012cde:	add    BYTE PTR [rax],al
 1012ce0:	add    al,BYTE PTR [rax]
 1012ce2:	add    BYTE PTR [rax],al
 1012ce4:	mov    bl,0x40
 1012ce6:	add    BYTE PTR [rax],al
 1012ce8:	add    DWORD PTR [rax],eax
 1012cea:	add    BYTE PTR [rax],al
 1012cec:	mov    esi,0x40
 1012cf1:	add    BYTE PTR [rax],al
 1012cf3:	add    cl,cl
 1012cf5:	add    BYTE PTR [rax],al
 1012cf8:	(bad)  
 1012cf9:	(bad)  
 1012cfa:	(bad)  
 1012cfb:	(bad)  
 1012cfc:	fild   DWORD PTR [rax+0x0]
 1012cff:	add    BYTE PTR [rdx],al
 1012d01:	add    BYTE PTR [rax],al
 1012d03:	add    BYTE PTR [rcx+0x1000043],dh
 1012d09:	add    BYTE PTR [rax],al
 1012d0b:	add    BYTE PTR [rbx+rax*2+0x0],bh
 1012d12:	add    BYTE PTR [rax],al
 1012d14:	mov    DWORD PTR [rbx+0x0],0xffffff00
 1012d1b:	(bad)  
 1012d1c:	fld    DWORD PTR [rbx+0x0]
 1012d1f:	add    BYTE PTR [rdx],al
 1012d21:	add    BYTE PTR [rax],al
 1012d23:	add    BYTE PTR [rbp+rax*2+0x30000],dl
 1012d2a:	add    BYTE PTR [rax],al
 1012d2c:	or     eax,DWORD PTR [rsi+0x0]
 1012d2f:	add    BYTE PTR [rdx],al
 1012d31:	add    BYTE PTR [rax],al
 1012d33:	add    BYTE PTR [rcx],bl
 1012d35:	rex.RX add BYTE PTR [rax],r8b
 1012d38:	add    DWORD PTR [rax],eax
 1012d3a:	add    BYTE PTR [rax],al
 1012d3c:	and    al,0x46
 1012d3e:	add    BYTE PTR [rax],al
 1012d40:	add    BYTE PTR [rax],al
 1012d42:	add    BYTE PTR [rax],al
 1012d44:	(bad)  
 1012d45:	rex.RX add BYTE PTR [rax],r8b
 1012d48:	(bad)  
 1012d49:	(bad)  
 1012d4a:	(bad)  
 1012d4b:	inc    DWORD PTR [rcx+0x46]
 1012d4e:	add    BYTE PTR [rax],al
 1012d50:	add    eax,DWORD PTR [rax]
 1012d52:	add    BYTE PTR [rax],al
 1012d54:	jns    0x1012d9d
 1012d56:	add    BYTE PTR [rax],al
 1012d58:	add    al,BYTE PTR [rax]
 1012d5a:	add    BYTE PTR [rax],al
 1012d5c:	xchg   DWORD PTR [rdi+0x0],eax
 1012d5f:	add    BYTE PTR [rcx],al
 1012d61:	add    BYTE PTR [rax],al
 1012d63:	add    BYTE PTR [rdx+0x47],dl
 1012d69:	add    BYTE PTR [rax],al
 1012d6b:	add    BYTE PTR [rbp-0xffffb9],bl
 1012d71:	(bad)  
 1012d72:	(bad)  
 1012d73:	jmp    FWORD PTR [rdi+0x3000047]
 1012d79:	add    BYTE PTR [rax],al
 1012d7b:	add    BYTE PTR [rax+rcx*2],bl
 1012d7e:	add    BYTE PTR [rax],al
 1012d80:	add    al,BYTE PTR [rax]
 1012d82:	add    BYTE PTR [rax],al
 1012d84:	ins    DWORD PTR es:[rdi],dx
 1012d85:	rex.W add BYTE PTR [rax],al
 1012d88:	add    al,0x0
 1012d8a:	add    BYTE PTR [rax],al
 1012d8c:	xlat   BYTE PTR ds:[rbx]
 1012d8d:	rex.W add BYTE PTR [rax],al
 1012d90:	add    al,BYTE PTR [rax]
 1012d92:	add    BYTE PTR [rax],al
 1012d94:	test   DWORD PTR [rax+0x0],0x100
 1012d9b:	add    BYTE PTR [rdx],al
 1012d9d:	rex.WB add BYTE PTR [r8],al
 1012da0:	add    BYTE PTR [rax],al
 1012da2:	add    BYTE PTR [rax],al
 1012da4:	or     eax,0xff000049
 1012da9:	(bad)  
 1012daa:	(bad)  
 1012dab:	call   FWORD PTR [rdi]
 1012dad:	rex.WB add BYTE PTR [r8],al
 1012db0:	add    al,BYTE PTR [rax]
 1012db2:	add    BYTE PTR [rax],al
 1012db4:	rex.WXB
 1012db5:	rex.WB add BYTE PTR [r8],al
 1012db8:	add    eax,0xc2000000
 1012dbd:	rex.WB add BYTE PTR [r8],al
 1012dc0:	add    al,BYTE PTR [rax]
 1012dc2:	add    BYTE PTR [rax],al
 1012dc4:	int    0x49
 1012dc6:	add    BYTE PTR [rax],al
 1012dc8:	add    DWORD PTR [rax],eax
 1012dca:	add    BYTE PTR [rax],al
 1012dcc:	fmul   DWORD PTR [rcx+0x0]
 1012dcf:	add    BYTE PTR [rax],al
 1012dd1:	add    BYTE PTR [rax],al
 1012dd3:	add    bl,ah
 1012dd5:	rex.WB add BYTE PTR [r8],al
 1012dd8:	(bad)  
 1012dd9:	(bad)  
 1012dda:	(bad)  
 1012ddb:	push   rbp
 1012ddd:	rex.WB add BYTE PTR [r8],al
 1012de0:	add    eax,0x21000000
 1012de5:	rex.WXB add BYTE PTR [r8],al
 1012de8:	add    al,BYTE PTR [rax]
 1012dea:	add    BYTE PTR [rax],al
 1012dec:	sub    al,0x4b
 1012dee:	add    BYTE PTR [rax],al
 1012df0:	add    DWORD PTR [rax],eax
 1012df2:	add    BYTE PTR [rax],al
 1012df4:	(bad)  
 1012df5:	rex.WXB add BYTE PTR [r8],al
 1012df8:	add    BYTE PTR [rax],al
 1012dfa:	add    BYTE PTR [rax],al
 1012dfc:	rex.X
 1012dfd:	rex.WXB add BYTE PTR [r8],al
 1012e00:	(bad)  
 1012e01:	(bad)  
 1012e02:	(bad)  
 1012e03:	call   QWORD PTR [rbx+rcx*2+0x0]
 1012e07:	add    BYTE PTR [rip+0x5000000],al        # 0x6012e0d
 1012e0d:	rex.WR add BYTE PTR [rax],r8b
 1012e10:	add    al,BYTE PTR [rax]
 1012e12:	add    BYTE PTR [rax],al
 1012e14:	sbb    eax,0x100004c
 1012e19:	add    BYTE PTR [rax],al
 1012e1b:	add    BYTE PTR [rax],ch
 1012e1d:	rex.WR add BYTE PTR [rax],r8b
 1012e20:	add    BYTE PTR [rax],al
 1012e22:	add    BYTE PTR [rax],al
 1012e24:	xor    ecx,DWORD PTR [rax+rax*1+0x0]
 1012e28:	(bad)  
 1012e29:	(bad)  
 1012e2a:	(bad)  
 1012e2b:	inc    DWORD PTR [rbp+0x4c]
 1012e2e:	add    BYTE PTR [rax],al
 1012e30:	add    al,BYTE PTR [rax]
 1012e32:	add    BYTE PTR [rax],al
 1012e34:	sub    al,0x4e
 1012e36:	add    BYTE PTR [rax],al
 1012e38:	add    DWORD PTR [rax],eax
 1012e3a:	add    BYTE PTR [rax],al
 1012e3c:	(bad)  
 1012e3d:	rex.WRX add BYTE PTR [rax],r8b
 1012e40:	add    BYTE PTR [rax],al
 1012e42:	add    BYTE PTR [rax],al
 1012e44:	rex.X
 1012e45:	rex.WRX add BYTE PTR [rax],r8b
 1012e48:	(bad)  
 1012e49:	(bad)  
 1012e4a:	(bad)  
 1012e4b:	call   QWORD PTR [rcx+0x4e]
 1012e4e:	add    BYTE PTR [rax],al
 1012e50:	add    al,BYTE PTR [rax]
 1012e52:	add    BYTE PTR [rax],al
 1012e54:	rex.WRX add BYTE PTR fs:[rax],r8b
 1012e58:	add    DWORD PTR [rax],eax
 1012e5a:	add    BYTE PTR [rax],al
 1012e5c:	outs   dx,DWORD PTR ds:[rsi]
 1012e5d:	rex.WRX add BYTE PTR [rax],r8b
 1012e60:	add    BYTE PTR [rax],al
 1012e62:	add    BYTE PTR [rax],al
 1012e64:	jp     0x1012eb4
 1012e66:	add    BYTE PTR [rax],al
 1012e68:	(bad)  
 1012e69:	(bad)  
 1012e6a:	(bad)  
 1012e6b:	dec    DWORD PTR [rcx+0x200004e]
 1012e71:	add    BYTE PTR [rax],al
 1012e73:	add    BYTE PTR [rbp+0x100004e],dl
 1012e79:	add    BYTE PTR [rax],al
 1012e7b:	add    BYTE PTR [rax+0x4e],ah
 1012e81:	add    BYTE PTR [rax],al
 1012e83:	add    BYTE PTR [rbx-0xffffb2],ch
 1012e89:	(bad)  
 1012e8a:	(bad)  
 1012e8b:	inc    DWORD PTR [rcx]
 1012e8d:	(bad)  
 1012e8e:	add    al,BYTE PTR [rax]
 1012e90:	(bad)  
 1012e91:	xor    al,BYTE PTR [rdx]
 1012e93:	push   rax
 1012e94:	add    DWORD PTR [rsi],eax
 1012e96:	add    al,BYTE PTR [rax]
 1012e98:	(bad)  
 1012e99:	xor    al,BYTE PTR [rdx]
 1012e9b:	push   rax
 1012e9c:	add    DWORD PTR [rsi],eax
 1012e9e:	add    al,BYTE PTR [rax]
 1012ea0:	(bad)  
 1012ea1:	xor    al,BYTE PTR [rdx]
 1012ea3:	push   rax
 1012ea4:	add    DWORD PTR [rsi],eax
 1012ea6:	add    al,BYTE PTR [rax]
 1012ea8:	(bad)  
 1012ea9:	xor    al,BYTE PTR [rdx]
 1012eab:	push   rax
 1012eac:	add    DWORD PTR [rsi],eax
 1012eae:	add    al,BYTE PTR [rax]
 1012eb0:	(bad)  
 1012eb1:	xor    al,BYTE PTR [rdx]
 1012eb3:	push   rax
 1012eb4:	add    DWORD PTR [rsi],eax
 1012eb6:	add    al,BYTE PTR [rax]
 1012eb8:	(bad)  
 1012eb9:	xor    al,BYTE PTR [rdx]
 1012ebb:	push   rax
 1012ebc:	sbb    DWORD PTR [rcx],ebp
 1012ebe:	add    al,0x0
 1012ec0:	sbb    eax,DWORD PTR [rcx]
 1012ec2:	pop    rdi
 1012ec3:	add    BYTE PTR [rax+rsi*2],dl
 1012ec6:	adc    BYTE PTR [rax+0x14],dl
 1012ec9:	(bad)  
 1012eca:	add    DWORD PTR [rax],eax
 1012ecc:	loopne 0x1012ed0
 1012ece:	add    BYTE PTR [rax],al
 1012ed0:	add    DWORD PTR [rbx],ebx
 1012ed2:	add    al,BYTE PTR [rax]
 1012ed4:	sbb    edx,DWORD PTR [rdx+0x36195014]
 1012eda:	add    al,0x0
 1012edc:	sbb    al,0x1
 1012ede:	(bad)  
 1012edf:	add    al,0xf
 1012ee1:	jo     0x1012eee
 1012ee3:	push   rax
 1012ee4:	cmp    BYTE PTR [rdi],bl
 1012ee6:	add    DWORD PTR [rax],eax
 1012ee8:	rex adc eax,0x26920000
 1012eee:	add    BYTE PTR [rax],al
 1012ef0:	(bad)  
 1012ef1:	(bad)  
 1012ef2:	(bad)  
 1012ef3:	call   QWORD PTR [rax+0x125]
 1012ef9:	add    BYTE PTR [rax],al
 1012efb:	add    BYTE PTR [rax-0x1ffffedb],dh
 1012f01:	add    BYTE PTR [eax],al
 1012f04:	(bad)  
 1012f05:	(bad)  
 1012f06:	(bad)  
 1012f07:	jmp    QWORD PTR [rbx]
 1012f09:	push   0x0
 1012f0e:	add    BYTE PTR [rax],al
 1012f10:	xor    ebp,DWORD PTR [rax+0x0]
 1012f13:	add    BYTE PTR [rcx],al
 1012f15:	add    BYTE PTR [rax],al
 1012f17:	add    BYTE PTR [rcx+0x69],al
 1012f1d:	add    BYTE PTR [rax],al
 1012f1f:	add    BYTE PTR [rdi-0xffff97],cl
 1012f25:	(bad)  
 1012f26:	(bad)  
 1012f27:	jmp    QWORD PTR [rbp+0x1000069]
 1012f2d:	add    BYTE PTR [rax],al
 1012f2f:	add    BYTE PTR [rax+0x6c],cl
 1012f35:	add    BYTE PTR [rax],al
 1012f37:	add    BYTE PTR [rsi-0xffff94],dl
 1012f3d:	(bad)  
 1012f3e:	(bad)  
 1012f3f:	jmp    FWORD PTR [rsp+rbp*2+0x10000]
 1012f46:	add    BYTE PTR [rax],al
 1012f48:	xlat   BYTE PTR ds:[rbx]
 1012f49:	ins    DWORD PTR es:[rdi],dx
 1012f4a:	add    BYTE PTR [rax],al
 1012f4c:	add    BYTE PTR [rax],al
 1012f4e:	add    BYTE PTR [rax],al
 1012f50:	in     eax,0x6d
 1012f52:	add    BYTE PTR [rax],al
 1012f54:	(bad)  
 1012f55:	(bad)  
 1012f56:	(bad)  
 1012f57:	inc    DWORD PTR [rcx]
 1012f59:	(bad)  
 1012f5a:	add    al,BYTE PTR [rax]
 1012f5c:	(bad)  
 1012f5d:	xor    al,BYTE PTR [rdx]
 1012f5f:	push   rax
 1012f60:	add    DWORD PTR [rsi],eax
 1012f62:	add    al,BYTE PTR [rax]
 1012f64:	(bad)  
 1012f65:	xor    al,BYTE PTR [rdx]
 1012f67:	push   rax
 1012f68:	sbb    DWORD PTR [rax],esi
 1012f6a:	add    al,0x0
 1012f6c:	(bad)  
 1012f6d:	add    DWORD PTR [rbx+0x8],eax
 1012f70:	or     DWORD PTR [rax+0x5],esi
 1012f73:	push   rax
 1012f74:	cmp    BYTE PTR [rdi],bl
 1012f76:	add    DWORD PTR [rax],eax
 1012f78:	push   0x2000015
 1012f7d:	rex.X add BYTE PTR [rax],al
 1012f80:	(bad)  
 1012f81:	(bad)  
 1012f82:	(bad)  
 1012f83:	push   QWORD PTR [rax]
 1012f85:	sub    BYTE PTR [rcx],al
 1012f87:	add    BYTE PTR [rax],al
 1012f89:	add    BYTE PTR [rax],al
 1012f8b:	add    BYTE PTR [rax+0x28],dl
 1012f8e:	add    DWORD PTR [rax],eax
 1012f90:	add    DWORD PTR [rax],eax
 1012f92:	add    BYTE PTR [rax],al
 1012f94:	jo     0x1012fbe
 1012f96:	add    DWORD PTR [rax],eax
 1012f98:	add    al,BYTE PTR [rax]
 1012f9a:	add    BYTE PTR [rax],al
 1012f9c:	nop
 1012f9d:	sub    BYTE PTR [rcx],al
 1012f9f:	add    BYTE PTR [rbx],al
 1012fa1:	add    BYTE PTR [rax],al
 1012fa3:	add    BYTE PTR [rax+0x20000128],dh
 1012fa9:	outs   dx,BYTE PTR ds:[rsi]
 1012faa:	add    BYTE PTR [rax],al
 1012fac:	(bad)  
 1012fad:	(bad)  
 1012fae:	(bad)  
 1012faf:	inc    esp
 1012fb1:	outs   dx,BYTE PTR ds:[rsi]
 1012fb2:	add    BYTE PTR [rax],al
 1012fb4:	add    BYTE PTR [rax],al
 1012fb6:	add    BYTE PTR [rax],al
 1012fb8:	iret   
 1012fb9:	outs   dx,BYTE PTR ds:[rsi]
 1012fba:	add    BYTE PTR [rax],al
 1012fbc:	add    DWORD PTR [rax],eax
 1012fbe:	add    BYTE PTR [rax],al
 1012fc0:	fisubr DWORD PTR [rsi+0x0]
 1012fc3:	add    BYTE PTR [rdx],al
 1012fc5:	add    BYTE PTR [rax],al
 1012fc7:	add    ch,ah
 1012fc9:	outs   dx,BYTE PTR ds:[rsi]
 1012fca:	add    BYTE PTR [rax],al
 1012fcc:	add    eax,DWORD PTR [rax]
 1012fce:	add    BYTE PTR [rax],al
 1012fd0:	lock outs dx,BYTE PTR ds:[rsi]
 1012fd2:	add    BYTE PTR [rax],al
 1012fd4:	add    al,0x0
 1012fd6:	add    BYTE PTR [rax],al
 1012fd8:	(bad)  
 1012fd9:	outs   dx,DWORD PTR ds:[rsi]
 1012fda:	add    BYTE PTR [rax],al
 1012fdc:	add    eax,DWORD PTR [rax]
 1012fde:	add    BYTE PTR [rax],al
 1012fe0:	and    DWORD PTR [rdi+0x0],ebp
 1012fe3:	add    BYTE PTR [rdx],al
 1012fe5:	add    BYTE PTR [rax],al
 1012fe7:	add    BYTE PTR [rdi+rbp*2],ch
 1012fea:	add    BYTE PTR [rax],al
 1012fec:	add    DWORD PTR [rax],eax
 1012fee:	add    BYTE PTR [rax],al
 1012ff0:	(bad)  
 1012ff1:	outs   dx,DWORD PTR ds:[rsi]
 1012ff2:	add    BYTE PTR [rax],al
 1012ff4:	add    BYTE PTR [rax],al
 1012ff6:	add    BYTE PTR [rax],al
 1012ff8:	rex.X outs dx,DWORD PTR ds:[rsi]
 1012ffa:	add    BYTE PTR [rax],al
 1012ffc:	(bad)  
 1012ffd:	(bad)  
 1012ffe:	(bad)  
 1012fff:	call   QWORD PTR [rbp+0x6f]
 1013002:	add    BYTE PTR [rax],al
 1013004:	add    al,0x0
 1013006:	add    BYTE PTR [rax],al
 1013008:	cld    
 1013009:	jae    0x101300b
 101300b:	add    BYTE PTR [rbx],al
 101300d:	add    BYTE PTR [rax],al
 101300f:	add    BYTE PTR [rdi],al
 1013011:	je     0x1013013
 1013013:	add    BYTE PTR [rdx],al
 1013015:	add    BYTE PTR [rax],al
 1013017:	add    BYTE PTR [rdx],dl
 1013019:	je     0x101301b
 101301b:	add    BYTE PTR [rcx],al
 101301d:	add    BYTE PTR [rax],al
 101301f:	add    BYTE PTR [rip+0x74],bl        # 0x1013099
 1013025:	add    BYTE PTR [rax],al
 1013027:	add    BYTE PTR [rax],ch
 1013029:	je     0x101302b
 101302b:	add    bh,bh
 101302d:	(bad)  
 101302e:	(bad)  
 101302f:	inc    DWORD PTR [rcx]
 1013031:	(bad)  
 1013032:	add    al,BYTE PTR [rax]
 1013034:	(bad)  
 1013035:	xor    al,BYTE PTR [rdx]
 1013037:	push   rax
 1013038:	add    DWORD PTR [rsi],eax
 101303a:	add    al,BYTE PTR [rax]
 101303c:	(bad)  
 101303d:	xor    al,BYTE PTR [rdx]
 101303f:	push   rax
 1013040:	add    DWORD PTR [rsi],eax
 1013042:	add    al,BYTE PTR [rax]
 1013044:	(bad)  
 1013045:	xor    al,BYTE PTR [rdx]
 1013047:	push   rax
 1013048:	add    DWORD PTR [rsi],eax
 101304a:	add    al,BYTE PTR [rax]
 101304c:	(bad)  
 101304d:	xor    al,BYTE PTR [rdx]
 101304f:	push   rax
 1013050:	add    DWORD PTR [rsi],eax
 1013052:	add    al,BYTE PTR [rax]
 1013054:	(bad)  
 1013055:	xor    al,BYTE PTR [rdx]
 1013057:	push   rax
 1013058:	sbb    DWORD PTR [rax],ebp
 101305a:	add    al,0x0
 101305c:	sbb    al,BYTE PTR [rcx]
 101305e:	or     eax,DWORD PTR [rcx*1+0x14500970]
 1013065:	(bad)  
 1013066:	add    DWORD PTR [rax],eax
 1013068:	and    BYTE PTR [rax],al
 101306b:	add    BYTE PTR [rcx],al
 101306d:	or     DWORD PTR [rdx],eax
 101306f:	add    BYTE PTR [rcx],cl
 1013071:	xor    al,BYTE PTR [rdx]
 1013073:	push   rax
 1013074:	sbb    DWORD PTR [rcx],esp
 1013076:	add    al,0x0
 1013078:	adc    eax,DWORD PTR [rcx]
 101307a:	popf   
 101307b:	add    al,BYTE PTR [rsi]
 101307d:	jo     0x1013081
 101307f:	push   rax
 1013080:	adc    al,0x1f
 1013082:	add    DWORD PTR [rax],eax
 1013084:	rcl    BYTE PTR [rax+rax*1],1
 1013087:	add    BYTE PTR [rcx],al
 1013089:	or     DWORD PTR [rdx],eax
 101308b:	add    BYTE PTR [rcx],cl
 101308d:	xor    al,BYTE PTR [rdx]
 101308f:	push   rax
 1013090:	sbb    DWORD PTR [rcx],esp
 1013092:	add    al,0x0
 1013094:	adc    eax,DWORD PTR [rcx]
 1013096:	adc    eax,0x2700606
 101309b:	push   rax
 101309c:	adc    al,0x1f
 101309e:	add    DWORD PTR [rax],eax
 10130a0:	nop
 10130a1:	xor    BYTE PTR [rax],al
 10130a3:	add    BYTE PTR [rcx],al
 10130a5:	or     DWORD PTR [rdx],eax
 10130a7:	add    BYTE PTR [rcx],cl
 10130a9:	xor    al,BYTE PTR [rdx]
 10130ab:	push   rax
 10130ac:	sbb    DWORD PTR [rcx],esp
 10130ae:	add    al,0x0
 10130b0:	adc    eax,DWORD PTR [rcx]
 10130b2:	mov    DWORD PTR [rsi],eax
 10130b4:	(bad)  
 10130b5:	jo     0x10130b9
 10130b7:	push   rax
 10130b8:	adc    al,0x1f
 10130ba:	add    DWORD PTR [rax],eax
 10130bc:	xor    BYTE PTR [rax+rax*1],dh
 10130bf:	add    BYTE PTR [rcx],bl
 10130c1:	(bad)  
 10130c2:	add    eax,DWORD PTR [rax]
 10130c4:	adc    BYTE PTR [rcx],al
 10130c6:	mov    al,BYTE PTR [rax]
 10130c8:	(bad)  
 10130c9:	push   rax
 10130ca:	add    BYTE PTR [rax],al
 10130cc:	adc    al,0x1f
 10130ce:	add    DWORD PTR [rax],eax
 10130d0:	add    al,0x0
 10130d3:	add    BYTE PTR [rcx],bl
 10130d5:	(bad)  
 10130d6:	add    eax,DWORD PTR [rax]
 10130d8:	adc    BYTE PTR [rcx],al
 10130da:	mov    al,BYTE PTR [rax]
 10130dc:	(bad)  
 10130dd:	push   rax
 10130de:	add    BYTE PTR [rax],al
 10130e0:	adc    al,0x1f
 10130e2:	add    DWORD PTR [rax],eax
 10130e4:	add    al,0x0
 10130e7:	add    BYTE PTR [rcx],bl
 10130e9:	(bad)  
 10130ea:	add    eax,DWORD PTR [rax]
 10130ec:	sbb    DWORD PTR [rcx],eax
 10130ee:	mov    BYTE PTR [rax],al
 10130f0:	(bad)  
 10130f2:	add    BYTE PTR [rax],al
 10130f4:	adc    al,0x1f
 10130f6:	add    DWORD PTR [rax],eax
 10130f8:	xor    BYTE PTR [rax+rax*1],al
 10130fb:	add    BYTE PTR [rcx],dl
 10130fd:	sbb    al,BYTE PTR [rdx]
 10130ff:	add    BYTE PTR [rcx],dl
 1013101:	mov    dl,0xa
 1013103:	push   rax
 1013104:	pushf  
 1013105:	(bad)  
 1013106:	add    DWORD PTR [rax],eax
 1013108:	nop
 1013109:	adc    eax,0xffff0000
 101310e:	(bad)  
 101310f:	call   rax
 1013111:	add    DWORD PTR es:[rax],eax
 1013114:	add    BYTE PTR [rax],al
 1013116:	add    BYTE PTR [rax],al
 1013118:	lock add DWORD PTR es:[rax],eax
 101311c:	ror    BYTE PTR [rax-0x10000],1
 1013122:	(bad)  
 1013123:	dec    DWORD PTR [rsi]
 1013125:	mov    DWORD PTR [rax],eax
 1013127:	add    BYTE PTR [rax],al
 1013129:	add    BYTE PTR [rax],al
 101312b:	add    BYTE PTR [rcx],bl
 101312d:	mov    DWORD PTR [rax],eax
 101312f:	add    BYTE PTR [rcx],al
 1013131:	add    BYTE PTR [rax],al
 1013133:	add    ah,bl
 1013135:	mov    DWORD PTR [rax],eax
 1013137:	add    BYTE PTR [rax],al
 1013139:	add    BYTE PTR [rax],al
 101313b:	add    bh,ah
 101313d:	mov    DWORD PTR [rax],eax
 101313f:	add    bh,bh
 1013141:	(bad)  
 1013142:	(bad)  
 1013143:	push   rdi
 1013145:	mov    DWORD PTR [rax],eax
 1013147:	add    BYTE PTR [rcx],al
 1013149:	add    BYTE PTR [rax],al
 101314b:	add    BYTE PTR [rcx],ch
 101314d:	mov    al,BYTE PTR [rax]
 101314f:	add    BYTE PTR [rax],al
 1013151:	add    BYTE PTR [rax],al
 1013153:	add    BYTE PTR [rdx+rcx*4],dh
 1013156:	add    BYTE PTR [rax],al
 1013158:	(bad)  
 1013159:	(bad)  
 101315a:	(bad)  
 101315b:	inc    DWORD PTR [rcx]
 101315d:	(bad)  
 101315e:	add    al,BYTE PTR [rax]
 1013160:	(bad)  
 1013161:	xor    al,BYTE PTR [rdx]
 1013163:	push   rax
 1013164:	add    DWORD PTR [rsi],eax
 1013166:	add    al,BYTE PTR [rax]
 1013168:	(bad)  
 1013169:	xor    al,BYTE PTR [rdx]
 101316b:	push   rax
 101316c:	sbb    DWORD PTR [rax],esp
 101316e:	add    eax,DWORD PTR [rax]
 1013170:	adc    al,BYTE PTR [rcx]
 1013172:	or     BYTE PTR [rdx],al
 1013174:	add    dl,BYTE PTR [rax+0x0]
 1013177:	add    BYTE PTR [rdi+rbx*1],dl
 101317a:	add    DWORD PTR [rax],eax
 101317c:	xor    BYTE PTR [rax],dl
 101317e:	add    BYTE PTR [rax],al
 1013180:	add    DWORD PTR [rdi],edx
 1013182:	add    al,BYTE PTR [rax]
 1013184:	(bad)  
 1013185:	adc    dl,BYTE PTR [rax]
 1013187:	push   rax
 1013188:	add    DWORD PTR [rdx],edx
 101318a:	add    al,BYTE PTR [rax]
 101318c:	adc    dl,BYTE PTR [rdx+0xb]
 101318f:	push   rax
 1013190:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3198
 1013196:	(bad)  
 1013197:	push   rax
 1013198:	add    DWORD PTR [rdx+rax*1],ecx
 101319b:	add    BYTE PTR [rdx+rsi*2],cl
 101319e:	add    eax,0x20c0150
 10131a3:	add    BYTE PTR [rdx+rsi*2],cl
 10131a6:	add    eax,0x20c0150
 10131ab:	add    BYTE PTR [rdx+rsi*2],cl
 10131ae:	add    eax,0x2090150
 10131b3:	add    BYTE PTR [rcx],cl
 10131b5:	jb     0x10131b9
 10131b7:	push   rax
 10131b8:	add    DWORD PTR [rdx],edx
 10131ba:	add    al,BYTE PTR [rax]
 10131bc:	adc    dh,BYTE PTR [rdx+0xb]
 10131bf:	push   rax
 10131c0:	add    DWORD PTR [rcx],edx
 10131c2:	add    al,BYTE PTR [rax]
 10131c4:	adc    DWORD PTR [rdx+0xa],edx
 10131c7:	push   rax
 10131c8:	add    DWORD PTR [rcx],ecx
 10131ca:	add    al,BYTE PTR [rax]
 10131cc:	or     DWORD PTR [rdx],esi
 10131ce:	add    dl,BYTE PTR [rax+0x19]
 10131d1:	and    al,0x4
 10131d3:	add    BYTE PTR [rsi],dl
 10131d5:	add    DWORD PTR [rbx],esp
 10131d7:	add    BYTE PTR [rdi],cl
 10131d9:	jo     0x10131e6
 10131db:	push   rax
 10131dc:	adc    al,0x1f
 10131de:	add    DWORD PTR [rax],eax
 10131e0:	add    BYTE PTR [rcx],al
 10131e2:	add    BYTE PTR [rax],al
 10131e4:	sbb    DWORD PTR [rax],esp
 10131e6:	add    eax,DWORD PTR [rax]
 10131e8:	adc    al,BYTE PTR [rcx]
 10131ea:	pop    rdx
 10131eb:	add    eax,DWORD PTR [rdx]
 10131ed:	push   rax
 10131ee:	add    BYTE PTR [rax],al
 10131f0:	adc    al,0x1f
 10131f2:	add    DWORD PTR [rax],eax
 10131f4:	rcr    BYTE PTR [rdx],0x0
 10131f7:	add    BYTE PTR [rcx],bl
 10131f9:	and    BYTE PTR [rbx],al
 10131fb:	add    BYTE PTR [rdx],dl
 10131fd:	add    edx,ebx
 10131ff:	add    al,BYTE PTR [rdx]
 1013201:	push   rax
 1013202:	add    BYTE PTR [rax],al
 1013204:	adc    al,0x1f
 1013206:	add    DWORD PTR [rax],eax
 1013208:	rcl    BYTE PTR [rsi],0x0
 101320b:	add    BYTE PTR [rcx],bl
 101320d:	sub    al,BYTE PTR [rbx]
 101320f:	add    BYTE PTR [rax],dl
 1013211:	add    DWORD PTR [rsi],ebx
 1013213:	add    DWORD PTR [rsi],eax
 1013215:	push   rax
 1013216:	add    BYTE PTR [rax],al
 1013218:	cmp    BYTE PTR [rdi],bl
 101321a:	add    DWORD PTR [rax],eax
 101321c:	mov    eax,0xe2000015
 1013221:	or     BYTE PTR [rax],al
 1013223:	add    bh,bh
 1013225:	(bad)  
 1013226:	(bad)  
 1013227:	push   QWORD PTR [rax+0x25]
 101322a:	add    DWORD PTR [rax],eax
 101322c:	adc    BYTE PTR [rbp-0x10000],ah
 1013232:	(bad)  
 1013233:	call   QWORD PTR [rbp-0x5b]
 1013236:	add    BYTE PTR [rax],al
 1013238:	add    BYTE PTR [rax],al
 101323a:	add    BYTE PTR [rax],al
 101323c:	mov    DWORD PTR [rsi-0x10000],esp
 1013242:	(bad)  
 1013243:	call   FWORD PTR [rax+0xa6]
 1013249:	add    BYTE PTR [rax],al
 101324b:	add    BYTE PTR [rdi-0xffff5a],bl
 1013251:	(bad)  
 1013252:	(bad)  
 1013253:	jmp    FWORD PTR [rsi+0xa6]
 1013259:	add    BYTE PTR [rax],al
 101325b:	add    BYTE PTR [rsi],al
 101325d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 101325e:	add    BYTE PTR [rax],al
 1013260:	(bad)  
 1013261:	(bad)  
 1013262:	(bad)  
 1013263:	call   QWORD PTR [rip+0xa7]        # 0x1013310
 1013269:	add    BYTE PTR [rax],al
 101326b:	add    BYTE PTR [rdi],bl
 101326d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 101326e:	add    BYTE PTR [rax],al
 1013270:	(bad)  
 1013271:	(bad)  
 1013272:	(bad)  
 1013273:	jmp    FWORD PTR [rsi]
 1013275:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 1013276:	add    BYTE PTR [rax],al
 1013278:	add    BYTE PTR [rax],al
 101327a:	add    BYTE PTR [rax],al
 101327c:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 101327e:	add    BYTE PTR [rax],al
 1013280:	(bad)  
 1013281:	(bad)  
 1013282:	(bad)  
 1013283:	(bad)  
 1013284:	jmp    QWORD PTR [rdi+0x0]
 101328a:	add    BYTE PTR [rax],al
 101328c:	push   rbx
 101328d:	test   al,0x0
 101328f:	add    bh,bh
 1013291:	(bad)  
 1013292:	(bad)  
 1013293:	inc    DWORD PTR [rcx]
 1013295:	(bad)  
 1013296:	add    al,BYTE PTR [rax]
 1013298:	(bad)  
 1013299:	xor    al,BYTE PTR [rdx]
 101329b:	push   rax
 101329c:	sbb    DWORD PTR [rsi],ebx
 101329e:	add    eax,DWORD PTR [rax]
 10132a0:	adc    BYTE PTR [rcx],al
 10132a2:	or     al,BYTE PTR [rcx]
 10132a4:	(bad)  
 10132a5:	push   rax
 10132a6:	add    BYTE PTR [rax],al
 10132a8:	adc    al,0x1f
 10132aa:	add    DWORD PTR [rax],eax
 10132ac:	or     BYTE PTR [rax],al
 10132af:	add    BYTE PTR [rcx],bl
 10132b1:	(bad)  
 10132b2:	add    eax,DWORD PTR [rax]
 10132b4:	adc    BYTE PTR [rcx],al
 10132b6:	or     al,BYTE PTR [rcx]
 10132b8:	(bad)  
 10132b9:	push   rax
 10132ba:	add    BYTE PTR [rax],al
 10132bc:	adc    al,0x1f
 10132be:	add    DWORD PTR [rax],eax
 10132c0:	or     BYTE PTR [rax],al
 10132c3:	add    BYTE PTR [rcx],dl
 10132c5:	(bad)  
 10132c6:	add    al,BYTE PTR [rax]
 10132c8:	or     eax,0x9c500652
 10132cd:	(bad)  
 10132ce:	add    DWORD PTR [rax],eax
 10132d0:	loopne 0x10132e7
 10132d2:	add    BYTE PTR [rax],al
 10132d4:	(bad)  
 10132d5:	(bad)  
 10132d6:	(bad)  
 10132d7:	jmp    rax
 10132d9:	and    eax,DWORD PTR [rcx]
 10132db:	add    BYTE PTR [rax-0x56],ah
 10132de:	add    BYTE PTR [rax],al
 10132e0:	(bad)  
 10132e1:	(bad)  
 10132e2:	(bad)  
 10132e3:	dec    DWORD PTR [rax+0xaa]
 10132e9:	add    BYTE PTR [rax],al
 10132eb:	add    BYTE PTR [rip+0xffffffffff0000ab],al        # 0x1339c
 10132f1:	(bad)  
 10132f2:	(bad)  
 10132f3:	inc    DWORD PTR [rcx]
 10132f5:	(bad)  
 10132f6:	add    al,BYTE PTR [rax]
 10132f8:	(bad)  
 10132f9:	xor    al,BYTE PTR [rdx]
 10132fb:	push   rax
 10132fc:	sbb    DWORD PTR [rbx],esp
 10132fe:	add    eax,DWORD PTR [rax]
 1013300:	adc    eax,0xb002a01
 1013305:	push   rax
 1013306:	add    BYTE PTR [rax],al
 1013308:	adc    al,0x1f
 101330a:	add    DWORD PTR [rax],eax
 101330c:	rex add DWORD PTR [rax],eax
 101330f:	add    BYTE PTR [rcx],bl
 1013311:	sub    eax,DWORD PTR [rax+rax*1]
 1013314:	adc    eax,0xe016501
 1013319:	jo     0x1013325
 101331b:	push   rax
 101331c:	cmp    BYTE PTR [rdi],bl
 101331e:	add    DWORD PTR [rax],eax
 1013320:	or     BYTE PTR [rsi],dl
 1013322:	add    BYTE PTR [rax],al
 1013324:	sbb    cl,BYTE PTR [rbx]
 1013326:	add    BYTE PTR [rax],al
 1013328:	(bad)  
 1013329:	(bad)  
 101332a:	(bad)  
 101332b:	push   QWORD PTR [rax]
 101332d:	and    eax,0x1
 1013332:	add    BYTE PTR [rax],al
 1013334:	push   rax
 1013335:	and    eax,0xaeb00001
 101333a:	add    BYTE PTR [rax],al
 101333c:	(bad)  
 101333d:	(bad)  
 101333e:	(bad)  
 101333f:	inc    DWORD PTR [rdi+rbp*4]
 1013342:	add    BYTE PTR [rax],al
 1013344:	add    BYTE PTR [rax],al
 1013346:	add    BYTE PTR [rax],al
 1013348:	cwde   
 1013349:	scas   eax,DWORD PTR es:[rdi]
 101334a:	add    BYTE PTR [rax],al
 101334c:	add    DWORD PTR [rax],eax
 101334e:	add    BYTE PTR [rax],al
 1013350:	leave  
 1013351:	scas   eax,DWORD PTR es:[rdi]
 1013352:	add    BYTE PTR [rax],al
 1013354:	add    BYTE PTR [rax],al
 1013356:	add    BYTE PTR [rax],al
 1013358:	retf   
 1013359:	scas   eax,DWORD PTR es:[rdi]
 101335a:	add    BYTE PTR [rax],al
 101335c:	add    DWORD PTR [rax],eax
 101335e:	add    BYTE PTR [rax],al
 1013360:	(bad)  
 1013361:	mov    al,0x0
 1013363:	add    BYTE PTR [rax],al
 1013365:	add    BYTE PTR [rax],al
 1013367:	add    bh,cl
 1013369:	mov    al,0x0
 101336b:	add    bh,bh
 101336d:	(bad)  
 101336e:	(bad)  
 101336f:	jmp    rdx
 1013371:	mov    al,0x0
 1013373:	add    BYTE PTR [rcx],al
 1013375:	add    BYTE PTR [rax],al
 1013377:	add    BYTE PTR [rbp-0x4e],ch
 101337a:	add    BYTE PTR [rax],al
 101337c:	add    BYTE PTR [rax],al
 101337e:	add    BYTE PTR [rax],al
 1013380:	outs   dx,DWORD PTR ds:[rsi]
 1013381:	mov    dl,0x0
 1013383:	add    BYTE PTR [rcx],al
 1013385:	add    BYTE PTR [rax],al
 1013387:	add    BYTE PTR [rbp-0x4c],bh
 101338a:	add    BYTE PTR [rax],al
 101338c:	add    BYTE PTR [rax],al
 101338e:	add    BYTE PTR [rax],al
 1013390:	mov    BYTE PTR [rax+rax*1-0x100],dh
 1013397:	call   FWORD PTR [rbx+0x10000b4]
 101339d:	add    BYTE PTR [rax],al
 101339f:	add    BYTE PTR [rdx+0xb6],dl
 10133a5:	add    BYTE PTR [rax],al
 10133a7:	add    BYTE PTR [rbp-0xffff4a],bl
 10133ad:	(bad)  
 10133ae:	(bad)  
 10133af:	inc    esp
 10133b1:	mov    dh,0x0
 10133b3:	add    BYTE PTR [rax],al
 10133b5:	add    BYTE PTR [rax],al
 10133b7:	add    BYTE PTR [rcx],al
 10133b9:	(bad)  
 10133ba:	add    al,BYTE PTR [rax]
 10133bc:	(bad)  
 10133bd:	xor    al,BYTE PTR [rdx]
 10133bf:	push   rax
 10133c0:	add    DWORD PTR [rsi],eax
 10133c2:	add    al,BYTE PTR [rax]
 10133c4:	(bad)  
 10133c5:	xor    al,BYTE PTR [rdx]
 10133c7:	push   rax
 10133c8:	sbb    DWORD PTR [rdi],ebp
 10133ca:	add    al,0x0
 10133cc:	adc    eax,0xe007501
 10133d1:	jo     0x10133dd
 10133d3:	push   rax
 10133d4:	cmp    BYTE PTR [rdi],bl
 10133d6:	add    DWORD PTR [rax],eax
 10133d8:	xor    BYTE PTR [rsi],dl
 10133da:	add    BYTE PTR [rax],al
 10133dc:	xchg   edx,eax
 10133dd:	add    eax,DWORD PTR [rax]
 10133df:	add    bh,bh
 10133e1:	(bad)  
 10133e2:	(bad)  
 10133e3:	jmp    rax
 10133e5:	and    eax,0x1
 10133ea:	add    BYTE PTR [rax],al
 10133ec:	add    BYTE PTR [rsi],ah
 10133ee:	add    DWORD PTR [rax],eax
 10133f0:	add    DWORD PTR [rax],eax
 10133f2:	add    BYTE PTR [rax],al
 10133f4:	and    BYTE PTR [rsi],ah
 10133f6:	add    DWORD PTR [rax],eax
 10133f8:	adc    BYTE PTR [rdi-0x10000],dh
 10133fe:	(bad)  
 10133ff:	(bad)  
 1013400:	js     0x10133b9
 1013402:	add    BYTE PTR [rax],al
 1013404:	add    BYTE PTR [rax],al
 1013406:	add    BYTE PTR [rax],al
 1013408:	mov    BYTE PTR [rdi+0x10000],dh
 101340e:	add    BYTE PTR [rax],al
 1013410:	(bad)  
 1013411:	mov    eax,0x20000
 1013416:	add    BYTE PTR [rax],al
 1013418:	ds mov ecx,0x10000
 101341e:	add    BYTE PTR [rax],al
 1013420:	movabs r9,0xb957000000000000
 101342a:	add    BYTE PTR [rax],al
 101342c:	(bad)  
 101342d:	(bad)  
 101342e:	(bad)  
 101342f:	jmp    FWORD PTR [rbp-0x47]
 1013432:	add    BYTE PTR [rax],al
 1013434:	add    al,BYTE PTR [rax]
 1013436:	add    BYTE PTR [rax],al
 1013438:	rex.RXB mov r14d,0x10000
 101343e:	add    BYTE PTR [rax],al
 1013440:	push   rdx
 1013441:	mov    esi,0x0
 1013446:	add    BYTE PTR [rax],al
 1013448:	(bad)  
 1013449:	mov    esi,0xffff0000
 101344e:	(bad)  
 101344f:	inc    DWORD PTR [rcx]
 1013451:	(bad)  
 1013452:	add    al,BYTE PTR [rax]
 1013454:	(bad)  
 1013455:	xor    al,BYTE PTR [rdx]
 1013457:	push   rax
 1013458:	add    DWORD PTR [rsi],eax
 101345a:	add    al,BYTE PTR [rax]
 101345c:	(bad)  
 101345d:	xor    al,BYTE PTR [rdx]
 101345f:	push   rax
 1013460:	add    DWORD PTR [rsi],eax
 1013462:	add    al,BYTE PTR [rax]
 1013464:	(bad)  
 1013465:	xor    al,BYTE PTR [rdx]
 1013467:	push   rax
 1013468:	sbb    DWORD PTR [rip+0x11b0004],esi        # 0x21c3472
 101346e:	in     eax,dx
 101346f:	add    cl,BYTE PTR [rsi]
 1013471:	jo     0x101347d
 1013473:	push   rax
 1013474:	cmp    BYTE PTR [rdi],bl
 1013476:	add    DWORD PTR [rax],eax
 1013478:	pop    rax
 1013479:	(bad)  
 101347a:	add    BYTE PTR [rax],al
 101347c:	pop    rdx
 101347d:	(bad)  
 101347e:	add    BYTE PTR [rax],al
 1013480:	(bad)  
 1013481:	(bad)  
 1013482:	(bad)  
 1013483:	jmp    QWORD PTR [rax-0xfffedc]
 1013489:	(bad)  
 101348a:	(bad)  
 101348b:	inc    eax
 101348d:	and    al,0x1
 101348f:	add    BYTE PTR [rcx],al
 1013491:	add    BYTE PTR [rax],al
 1013493:	add    al,ah
 1013495:	and    al,0x1
 1013497:	add    BYTE PTR [rdx],al
 1013499:	add    BYTE PTR [rax],al
 101349b:	add    BYTE PTR [rax],al
 101349d:	and    eax,0xbe900001
 10134a2:	add    BYTE PTR [rax],al
 10134a4:	(bad)  
 10134a5:	(bad)  
 10134a6:	(bad)  
 10134a7:	call   FWORD PTR [rbx-0x41]
 10134aa:	add    BYTE PTR [rax],al
 10134ac:	add    BYTE PTR [rax],al
 10134ae:	add    BYTE PTR [rax],al
 10134b0:	icebp  
 10134b1:	mov    edi,0xffff0000
 10134b6:	(bad)  
 10134b7:	push   QWORD PTR [rsi+0x10000c0]
 10134bd:	add    BYTE PTR [rax],al
 10134bf:	add    cl,al
 10134c1:	rol    BYTE PTR [rax],0x0
 10134c4:	add    al,BYTE PTR [rax]
 10134c6:	add    BYTE PTR [rax],al
 10134c8:	mov    bh,0xc1
 10134ca:	add    BYTE PTR [rax],al
 10134cc:	add    DWORD PTR [rax],eax
 10134ce:	add    BYTE PTR [rax],al
 10134d0:	ret    0xc1
 10134d3:	add    bh,bh
 10134d5:	(bad)  
 10134d6:	(bad)  
 10134d7:	(bad)  
 10134d8:	fadd   st,st(1)
 10134da:	add    BYTE PTR [rax],al
 10134dc:	add    al,BYTE PTR [rax]
 10134de:	add    BYTE PTR [rax],al
 10134e0:	fcmovnb st,st(2)
 10134e2:	add    BYTE PTR [rax],al
 10134e4:	add    DWORD PTR [rax],eax
 10134e6:	add    BYTE PTR [rax],al
 10134e8:	out    0xc2,al
 10134ea:	add    BYTE PTR [rax],al
 10134ec:	(bad)  
 10134ed:	(bad)  
 10134ee:	(bad)  
 10134ef:	(bad)  
 10134f0:	cld    
 10134f1:	ret    0x0
 10134f4:	add    al,BYTE PTR [rax]
 10134f6:	add    BYTE PTR [rax],al
 10134f8:	cmp    eax,0x10000c3
 10134fd:	add    BYTE PTR [rax],al
 10134ff:	add    BYTE PTR [rax-0x3d],cl
 1013502:	add    BYTE PTR [rax],al
 1013504:	(bad)  
 1013505:	(bad)  
 1013506:	(bad)  
 1013507:	call   FWORD PTR [rsi-0x3d]
 101350a:	add    BYTE PTR [rax],al
 101350c:	add    al,BYTE PTR [rax]
 101350e:	add    BYTE PTR [rax],al
 1013510:	mov    ecx,0x30000c6
 1013515:	add    BYTE PTR [rax],al
 1013517:	add    dl,bh
 1013519:	mov    BYTE PTR [rax],0x0
 101351c:	add    al,BYTE PTR [rax]
 101351e:	add    BYTE PTR [rax],al
 1013520:	jp     0x10134ea
 1013522:	add    BYTE PTR [rax],al
 1013524:	add    DWORD PTR [rax],eax
 1013526:	add    BYTE PTR [rax],al
 1013528:	test   eax,ecx
 101352a:	add    BYTE PTR [rax],al
 101352c:	(bad)  
 101352d:	(bad)  
 101352e:	(bad)  
 101352f:	call   FWORD PTR [rax+0x20000c8]
 1013535:	add    BYTE PTR [rax],al
 1013537:	add    BYTE PTR [rdx+0x10000c8],dh
 101353d:	add    BYTE PTR [rax],al
 101353f:	add    BYTE PTR [rbp-0xffff38],bh
 1013545:	(bad)  
 1013546:	(bad)  
 1013547:	inc    DWORD PTR [rcx]
 1013549:	(bad)  
 101354a:	add    al,BYTE PTR [rax]
 101354c:	(bad)  
 101354d:	xor    al,BYTE PTR [rdx]
 101354f:	push   rax
 1013550:	add    DWORD PTR [rsi],eax
 1013552:	add    al,BYTE PTR [rax]
 1013554:	(bad)  
 1013555:	xor    al,BYTE PTR [rdx]
 1013557:	push   rax
 1013558:	add    DWORD PTR [rsi],eax
 101355a:	add    al,BYTE PTR [rax]
 101355c:	(bad)  
 101355d:	xor    al,BYTE PTR [rdx]
 101355f:	push   rax
 1013560:	add    DWORD PTR [rsi],eax
 1013562:	add    al,BYTE PTR [rax]
 1013564:	(bad)  
 1013565:	xor    al,BYTE PTR [rdx]
 1013567:	push   rax
 1013568:	sbb    DWORD PTR [rsi],ebp
 101356a:	add    al,0x0
 101356c:	and    BYTE PTR [rcx],al
 101356e:	pop    rcx
 101356f:	add    edx,DWORD PTR [rbx]
 1013571:	jo     0x1013582
 1013573:	push   rax
 1013574:	adc    al,0x1f
 1013576:	add    DWORD PTR [rax],eax
 1013578:	mov    al,0x1a
 101357a:	add    BYTE PTR [rax],al
 101357c:	sbb    DWORD PTR [rbx],ebp
 101357e:	add    al,0x0
 1013580:	adc    DWORD PTR [rcx],eax
 1013582:	sbb    DWORD PTR [rcx],eax
 1013584:	or     dh,BYTE PTR [rax+0x6]
 1013587:	push   rax
 1013588:	cmp    BYTE PTR [rdi],bl
 101358a:	add    DWORD PTR [rax],eax
 101358c:	adc    BYTE PTR [rsi],0x0
 101358f:	add    BYTE PTR [rdx-0xfffff8],dh
 1013595:	(bad)  
 1013596:	(bad)  
 1013597:	inc    DWORD PTR [rax+0x26]
 101359a:	add    DWORD PTR [rax],eax
 101359c:	add    BYTE PTR [rax],al
 101359e:	add    BYTE PTR [rax],al
 10135a0:	(bad)  
 10135a1:	add    DWORD PTR es:[rax],eax
 10135a4:	jo     0x1013574
 10135a6:	add    BYTE PTR [rax],al
 10135a8:	(bad)  
 10135a9:	(bad)  
 10135aa:	(bad)  
 10135ab:	dec    esp
 10135ad:	(bad)  
 10135ae:	add    BYTE PTR [rax],al
 10135b0:	add    BYTE PTR [rax],al
 10135b2:	add    BYTE PTR [rax],al
 10135b4:	xlat   BYTE PTR ds:[rbx]
 10135b5:	(bad)  
 10135b6:	add    BYTE PTR [rax],al
 10135b8:	add    DWORD PTR [rax],eax
 10135ba:	add    BYTE PTR [rax],al
 10135bc:	(bad)  
 10135bd:	rol    BYTE PTR [rax],cl
 10135bf:	add    BYTE PTR [rax],al
 10135c1:	add    BYTE PTR [rax],al
 10135c3:	add    BYTE PTR [rcx],ch
 10135c5:	rol    BYTE PTR [rax],cl
 10135c7:	add    bh,bh
 10135c9:	(bad)  
 10135ca:	(bad)  
 10135cb:	inc    DWORD PTR [rcx]
 10135cd:	(bad)  
 10135ce:	add    al,BYTE PTR [rax]
 10135d0:	(bad)  
 10135d1:	xor    al,BYTE PTR [rdx]
 10135d3:	push   rax
 10135d4:	add    DWORD PTR [rsi],eax
 10135d6:	add    al,BYTE PTR [rax]
 10135d8:	(bad)  
 10135d9:	xor    al,BYTE PTR [rdx]
 10135db:	push   rax
 10135dc:	sbb    DWORD PTR [rcx],ebp
 10135de:	add    al,0x0
 10135e0:	sbb    eax,DWORD PTR [rcx]
 10135e2:	adc    eax,DWORD PTR [rcx]
 10135e4:	adc    al,0x70
 10135e6:	adc    BYTE PTR [rax+0x14],dl
 10135e9:	(bad)  
 10135ea:	add    DWORD PTR [rax],eax
 10135ec:	or     BYTE PTR [rax],0x0
 10135ef:	add    BYTE PTR [rcx],al
 10135f1:	or     DWORD PTR [rcx],eax
 10135f3:	add    BYTE PTR [rsi],al
 10135f5:	push   rax
 10135f6:	add    BYTE PTR [rax],al
 10135f8:	sbb    DWORD PTR [rsi],ebx
 10135fa:	add    eax,DWORD PTR [rax]
 10135fc:	adc    BYTE PTR [rcx],al
 10135fe:	or     BYTE PTR [rcx],al
 1013600:	(bad)  
 1013601:	push   rax
 1013602:	add    BYTE PTR [rax],al
 1013604:	adc    al,0x1f
 1013606:	add    DWORD PTR [rax],eax
 1013608:	xor    BYTE PTR [rax],cl
 101360a:	add    BYTE PTR [rax],al
 101360c:	sbb    DWORD PTR [rsi],ebx
 101360e:	add    eax,DWORD PTR [rax]
 1013610:	adc    BYTE PTR [rcx],al
 1013612:	or     BYTE PTR [rcx],al
 1013614:	(bad)  
 1013615:	push   rax
 1013616:	add    BYTE PTR [rax],al
 1013618:	adc    al,0x1f
 101361a:	add    DWORD PTR [rax],eax
 101361c:	xor    BYTE PTR [rax],cl
 101361e:	add    BYTE PTR [rax],al
 1013620:	sbb    DWORD PTR [rdx],edi
 1013622:	add    al,0x0
 1013624:	and    BYTE PTR [rcx],al
 1013626:	add    eax,DWORD PTR [rdx]
 1013628:	adc    esi,DWORD PTR [rax+0xf]
 101362b:	push   rax
 101362c:	cmp    BYTE PTR [rdi],bl
 101362e:	add    DWORD PTR [rax],eax
 1013630:	test   al,0x16
 1013632:	add    BYTE PTR [rax],al
 1013634:	add    dl,BYTE PTR [rax]
 1013636:	add    BYTE PTR [rax],al
 1013638:	(bad)  
 1013639:	(bad)  
 101363a:	(bad)  
 101363b:	inc    DWORD PTR [rax+0x126]
 1013641:	add    BYTE PTR [rax],al
 1013643:	add    BYTE PTR [rax-0x6ffffeda],ah
 1013649:	xlat   BYTE PTR ds:[rbx]
 101364a:	add    BYTE PTR [rax],al
 101364c:	(bad)  
 101364d:	(bad)  
 101364e:	(bad)  
 101364f:	push   rbx
 1013651:	xlat   BYTE PTR ds:[rbx]
 1013652:	add    BYTE PTR [rax],al
 1013654:	add    BYTE PTR [rax],al
 1013656:	add    BYTE PTR [rax],al
 1013658:	in     eax,dx
 1013659:	fadd   DWORD PTR [rax]
 101365b:	add    bh,bh
 101365d:	(bad)  
 101365e:	(bad)  
 101365f:	inc    DWORD PTR [rax]
 1013661:	fld    DWORD PTR [rax]
 1013663:	add    BYTE PTR [rax],al
 1013665:	add    BYTE PTR [rax],al
 1013667:	add    BYTE PTR [rsi],bh
 1013669:	fld    DWORD PTR [rax]
 101366b:	add    bh,bh
 101366d:	(bad)  
 101366e:	(bad)  
 101366f:	call   QWORD PTR [rcx-0x27]
 1013672:	add    BYTE PTR [rax],al
 1013674:	add    BYTE PTR [rax],al
 1013676:	add    BYTE PTR [rax],al
 1013678:	(bad)  
 1013679:	fadd   QWORD PTR [rax]
 101367b:	add    BYTE PTR [rcx],al
 101367d:	add    BYTE PTR [rax],al
 101367f:	add    BYTE PTR [rbx-0x24],ah
 1013682:	add    BYTE PTR [rax],al
 1013684:	add    BYTE PTR [rax],al
 1013686:	add    BYTE PTR [rax],al
 1013688:	cwde   
 1013689:	fld    QWORD PTR [rax]
 101368b:	add    bh,bh
 101368d:	(bad)  
 101368e:	(bad)  
 101368f:	inc    DWORD PTR [rcx]
 1013691:	(bad)  
 1013692:	add    al,BYTE PTR [rax]
 1013694:	(bad)  
 1013695:	xor    al,BYTE PTR [rdx]
 1013697:	push   rax
 1013698:	add    DWORD PTR [rsi],eax
 101369a:	add    al,BYTE PTR [rax]
 101369c:	(bad)  
 101369d:	xor    al,BYTE PTR [rdx]
 101369f:	push   rax
 10136a0:	sbb    DWORD PTR [rbx],ebp
 10136a2:	add    al,BYTE PTR [rax]
 10136a4:	sbb    al,0xd2
 10136a6:	adc    eax,0x11f1450
 10136ab:	add    BYTE PTR [rax+0x0],ch
 10136ae:	add    BYTE PTR [rax],al
 10136b0:	sbb    DWORD PTR [rax],ebp
 10136b2:	add    al,0x0
 10136b4:	adc    DWORD PTR [rcx],eax
 10136b6:	fld    QWORD PTR [rax]
 10136b8:	or     dh,BYTE PTR [rax+0x6]
 10136bb:	push   rax
 10136bc:	cmp    BYTE PTR [rdi],bl
 10136be:	add    DWORD PTR [rax],eax
 10136c0:	rcl    BYTE PTR [rsi],1
 10136c2:	add    BYTE PTR [rax],al
 10136c4:	rol    BYTE PTR [rsi],cl
 10136c6:	add    BYTE PTR [rax],al
 10136c8:	(bad)  
 10136c9:	(bad)  
 10136ca:	(bad)  
 10136cb:	inc    DWORD PTR [rax+0x124]
 10136d1:	loopne 0x10136d3
 10136d3:	add    bh,bh
 10136d5:	(bad)  
 10136d6:	(bad)  
 10136d7:	call   QWORD PTR [rsi-0x20]
 10136da:	add    BYTE PTR [rax],al
 10136dc:	add    BYTE PTR [rax],al
 10136de:	add    BYTE PTR [rax],al
 10136e0:	test   eax,esp
 10136e2:	add    BYTE PTR [rax],al
 10136e4:	(bad)  
 10136e5:	(bad)  
 10136e6:	(bad)  
 10136e7:	call   QWORD PTR [rax+riz*8+0x0]
 10136ee:	add    BYTE PTR [rax],al
 10136f0:	cmc    
 10136f1:	loope  0x10136f3
 10136f3:	add    bh,bh
 10136f5:	(bad)  
 10136f6:	(bad)  
 10136f7:	inc    DWORD PTR [rcx]
 10136f9:	(bad)  
 10136fa:	add    al,BYTE PTR [rax]
 10136fc:	(bad)  
 10136fd:	xor    al,BYTE PTR [rdx]
 10136ff:	push   rax
 1013700:	sbb    DWORD PTR [rax],esi
 1013702:	add    eax,DWORD PTR [rax]
 1013704:	(bad)  
 1013705:	add    DWORD PTR [rax],ebx
 1013707:	add    al,0x6
 1013709:	push   rax
 101370a:	add    BYTE PTR [rax],al
 101370c:	cmp    BYTE PTR [rdi],bl
 101370e:	add    DWORD PTR [rax],eax
 1013710:	clc    
 1013711:	(bad)  
 1013712:	add    BYTE PTR [rax],al
 1013714:	mov    dl,0x20
 1013716:	add    BYTE PTR [rax],al
 1013718:	(bad)  
 1013719:	(bad)  
 101371a:	(bad)  
 101371b:	call   rax
 101371d:	(bad)  
 101371e:	add    DWORD PTR [rax],eax
 1013720:	add    BYTE PTR [rax],al
 1013722:	add    BYTE PTR [rax],al
 1013724:	lock (bad) 
 1013726:	add    DWORD PTR [rax],eax
 1013728:	add    DWORD PTR [rax],eax
 101372a:	add    BYTE PTR [rax],al
 101372c:	adc    BYTE PTR [rax],ch
 101372e:	add    DWORD PTR [rax],eax
 1013730:	and    dl,ah
 1013732:	add    BYTE PTR [rax],al
 1013734:	(bad)  
 1013735:	(bad)  
 1013736:	(bad)  
 1013737:	inc    DWORD PTR [rbx+riz*8]
 101373a:	add    BYTE PTR [rax],al
 101373c:	add    BYTE PTR [rax],al
 101373e:	add    BYTE PTR [rax],al
 1013740:	adc    ah,bl
 1013742:	add    BYTE PTR [rax],al
 1013744:	add    DWORD PTR [rax],eax
 1013746:	add    BYTE PTR [rax],al
 1013748:	sbb    eax,0x20000e3
 101374d:	add    BYTE PTR [rax],al
 101374f:	add    BYTE PTR [rsi],dh
 1013751:	in     al,0x0
 1013753:	add    BYTE PTR [rcx],al
 1013755:	add    BYTE PTR [rax],al
 1013757:	add    BYTE PTR [rcx-0x1c],al
 101375a:	add    BYTE PTR [rax],al
 101375c:	add    BYTE PTR [rax],al
 101375e:	add    BYTE PTR [rax],al
 1013760:	rex.WRXB in al,0x0
 1013763:	add    bh,bh
 1013765:	(bad)  
 1013766:	(bad)  
 1013767:	call   FWORD PTR [rsi-0x1c]
 101376a:	add    BYTE PTR [rax],al
 101376c:	add    al,BYTE PTR [rax]
 101376e:	add    BYTE PTR [rax],al
 1013770:	mov    fs,esp
 1013772:	add    BYTE PTR [rax],al
 1013774:	add    DWORD PTR [rax],eax
 1013776:	add    BYTE PTR [rax],al
 1013778:	cdq    
 1013779:	in     al,0x0
 101377b:	add    BYTE PTR [rax],al
 101377d:	add    BYTE PTR [rax],al
 101377f:	add    BYTE PTR [rdi-0xffff1c],ah
 1013785:	(bad)  
 1013786:	(bad)  
 1013787:	inc    DWORD PTR [rcx]
 1013789:	(bad)  
 101378a:	add    al,BYTE PTR [rax]
 101378c:	(bad)  
 101378d:	xor    al,BYTE PTR [rdx]
 101378f:	push   rax
 1013790:	add    DWORD PTR [rsi],eax
 1013792:	add    al,BYTE PTR [rax]
 1013794:	(bad)  
 1013795:	xor    al,BYTE PTR [rdx]
 1013797:	push   rax
 1013798:	add    DWORD PTR [rsi],eax
 101379a:	add    al,BYTE PTR [rax]
 101379c:	(bad)  
 101379d:	xor    al,BYTE PTR [rdx]
 101379f:	push   rax
 10137a0:	add    DWORD PTR [rcx],edx
 10137a2:	add    al,BYTE PTR [rax]
 10137a4:	adc    DWORD PTR [rdx],esi
 10137a6:	or     dl,BYTE PTR [rax+0x1]
 10137a9:	or     DWORD PTR [rcx],eax
 10137ab:	add    BYTE PTR [rsi],al
 10137ad:	push   rax
 10137ae:	add    BYTE PTR [rax],al
 10137b0:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e37b8
 10137b6:	(bad)  
 10137b7:	push   rax
 10137b8:	add    DWORD PTR [rcx],ecx
 10137ba:	add    DWORD PTR [rax],eax
 10137bc:	(bad)  
 10137bd:	push   rax
 10137be:	add    BYTE PTR [rax],al
 10137c0:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e37c8
 10137c6:	(bad)  
 10137c7:	push   rax
 10137c8:	add    DWORD PTR [rcx],ecx
 10137ca:	add    DWORD PTR [rax],eax
 10137cc:	(bad)  
 10137cd:	push   rax
 10137ce:	add    BYTE PTR [rax],al
 10137d0:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e37d8
 10137d6:	(bad)  
 10137d7:	push   rax
 10137d8:	adc    DWORD PTR [rsi],edx
 10137da:	add    al,BYTE PTR [rax]
 10137dc:	or     eax,0x9c500652
 10137e1:	(bad)  
 10137e2:	add    DWORD PTR [rax],eax
 10137e4:	and    BYTE PTR [rdi],dl
 10137e6:	add    BYTE PTR [rax],al
 10137e8:	(bad)  
 10137e9:	(bad)  
 10137ea:	(bad)  
 10137eb:	call   QWORD PTR [rax]
 10137ed:	and    al,0x1
 10137ef:	add    BYTE PTR [rax],al
 10137f1:	jmp    0x10037f6
 10137f6:	(bad)  
 10137f7:	inc    DWORD PTR [rcx]
 10137f9:	(bad)  
 10137fa:	add    al,BYTE PTR [rax]
 10137fc:	(bad)  
 10137fd:	xor    al,BYTE PTR [rdx]
 10137ff:	push   rax
 1013800:	add    DWORD PTR [rcx],edx
 1013802:	add    al,BYTE PTR [rax]
 1013804:	adc    DWORD PTR [rdx],esi
 1013806:	or     dl,BYTE PTR [rax+0x1]
 1013809:	(bad)  
 101380a:	add    al,BYTE PTR [rax]
 101380c:	(bad)  
 101380d:	xor    dl,BYTE PTR [rax]
 101380f:	push   rax
 1013810:	add    DWORD PTR [rcx],ecx
 1013812:	add    DWORD PTR [rax],eax
 1013814:	(bad)  
 1013815:	push   rax
 1013816:	add    BYTE PTR [rax],al
 1013818:	add    DWORD PTR [rcx],ecx
 101381a:	add    DWORD PTR [rax],eax
 101381c:	(bad)  
 101381d:	push   rax
 101381e:	add    BYTE PTR [rax],al
 1013820:	add    DWORD PTR [rbx],edx
 1013822:	add    DWORD PTR [rax],eax
 1013824:	adc    BYTE PTR [rax+0x0],dl
 1013827:	add    BYTE PTR [rcx],al
 1013829:	adc    al,BYTE PTR [rdx]
 101382b:	add    BYTE PTR [rdx],dl
 101382d:	xor    cl,BYTE PTR [rbx]
 101382f:	push   rax
 1013830:	add    DWORD PTR [rsi],ecx
 1013832:	add    DWORD PTR [rax],eax
 1013834:	or     edx,DWORD PTR [rax+0x0]
 1013837:	add    BYTE PTR [rcx],al
 1013839:	adc    al,BYTE PTR [rdx]
 101383b:	add    BYTE PTR [rdx],dl
 101383d:	xor    cl,BYTE PTR [rbx]
 101383f:	push   rax
 1013840:	add    DWORD PTR [rdx],edx
 1013842:	add    al,BYTE PTR [rax]
 1013844:	adc    dh,BYTE PTR [rdx]
 1013846:	or     edx,DWORD PTR [rax+0x1]
 1013849:	or     eax,0x320d0002
 101384e:	(bad)  
 101384f:	push   rax
 1013850:	adc    DWORD PTR [rax],ebx
 1013852:	add    eax,DWORD PTR [rax]
 1013854:	adc    BYTE PTR [rcx],al
 1013856:	adc    al,BYTE PTR [rax]
 1013858:	(bad)  
 1013859:	push   rax
 101385a:	add    BYTE PTR [rax],al
 101385c:	pushf  
 101385d:	(bad)  
 101385e:	add    DWORD PTR [rax],eax
 1013860:	rex.W (bad) 
 1013862:	add    BYTE PTR [rax],al
 1013864:	(bad)  
 1013865:	(bad)  
 1013866:	(bad)  
 1013867:	inc    DWORD PTR [rax+0x24]
 101386a:	add    DWORD PTR [rax],eax
 101386c:	add    BYTE PTR [rax],al
 101386e:	add    BYTE PTR [rax],al
 1013870:	(bad)  
 1013871:	and    al,0x1
 1013873:	add    BYTE PTR [rax-0x14],dl
 1013876:	add    BYTE PTR [rax],al
 1013878:	(bad)  
 1013879:	(bad)  
 101387a:	(bad)  
 101387b:	jmp    FWORD PTR [rsp+rbp*8+0x0]
 1013882:	add    BYTE PTR [rax],al
 1013884:	mov    bh,0xec
 1013886:	add    BYTE PTR [rax],al
 1013888:	add    DWORD PTR [rax],eax
 101388a:	add    BYTE PTR [rax],al
 101388c:	int    0xed
 101388e:	add    BYTE PTR [rax],al
 1013890:	add    BYTE PTR [rax],al
 1013892:	add    BYTE PTR [rax],al
 1013894:	fsubr  st,st(5)
 1013896:	add    BYTE PTR [rax],al
 1013898:	(bad)  
 1013899:	(bad)  
 101389a:	(bad)  
 101389b:	inc    DWORD PTR [rcx]
 101389d:	(bad)  
 101389e:	add    al,BYTE PTR [rax]
 10138a0:	(bad)  
 10138a1:	xor    al,BYTE PTR [rdx]
 10138a3:	push   rax
 10138a4:	add    DWORD PTR [rsi],eax
 10138a6:	add    al,BYTE PTR [rax]
 10138a8:	(bad)  
 10138a9:	xor    al,BYTE PTR [rdx]
 10138ab:	push   rax
 10138ac:	adc    DWORD PTR [rcx],ebx
 10138ae:	add    al,BYTE PTR [rax]
 10138b0:	adc    dl,dh
 10138b2:	(bad)  
 10138b3:	push   rax
 10138b4:	pushf  
 10138b5:	(bad)  
 10138b6:	add    DWORD PTR [rax],eax
 10138b8:	jo     0x10138d1
 10138ba:	add    BYTE PTR [rax],al
 10138bc:	(bad)  
 10138bd:	(bad)  
 10138be:	(bad)  
 10138bf:	call   rax
 10138c1:	sub    BYTE PTR [rcx],al
 10138c3:	add    BYTE PTR [rax],al
 10138c5:	add    BYTE PTR [rax],al
 10138c7:	add    al,dh
 10138c9:	sub    BYTE PTR [rcx],al
 10138cb:	add    BYTE PTR [rax],al
 10138cd:	out    dx,al
 10138ce:	add    BYTE PTR [rax],al
 10138d0:	(bad)  
 10138d1:	(bad)  
 10138d2:	(bad)  
 10138d3:	call   QWORD PTR [rbp-0x12]
 10138d6:	add    BYTE PTR [rax],al
 10138d8:	add    BYTE PTR [rax],al
 10138da:	add    BYTE PTR [rax],al
 10138dc:	(bad)  
 10138dd:	out    dx,al
 10138de:	add    BYTE PTR [rax],al
 10138e0:	add    DWORD PTR [rax],eax
 10138e2:	add    BYTE PTR [rax],al
 10138e4:	cmp    edi,ebp
 10138e6:	add    BYTE PTR [rax],al
 10138e8:	add    BYTE PTR [rax],al
 10138ea:	add    BYTE PTR [rax],al
 10138ec:	rex.R out dx,eax
 10138ee:	add    BYTE PTR [rax],al
 10138f0:	(bad)  
 10138f1:	(bad)  
 10138f2:	(bad)  
 10138f3:	call   QWORD PTR [rax-0x11]
 10138f6:	add    BYTE PTR [rax],al
 10138f8:	add    DWORD PTR [rax],eax
 10138fa:	add    BYTE PTR [rax],al
 10138fc:	sub    edi,0x0
 1013902:	add    BYTE PTR [rax],al
 1013904:	mov    edi,gs
 1013906:	add    BYTE PTR [rax],al
 1013908:	(bad)  
 1013909:	(bad)  
 101390a:	(bad)  
 101390b:	inc    DWORD PTR [rcx]
 101390d:	(bad)  
 101390e:	add    al,BYTE PTR [rax]
 1013910:	(bad)  
 1013911:	xor    al,BYTE PTR [rdx]
 1013913:	push   rax
 1013914:	add    DWORD PTR [rsi],eax
 1013916:	add    al,BYTE PTR [rax]
 1013918:	(bad)  
 1013919:	xor    al,BYTE PTR [rdx]
 101391b:	push   rax
 101391c:	add    DWORD PTR [rcx],ecx
 101391e:	add    DWORD PTR [rax],eax
 1013920:	(bad)  
 1013921:	push   rax
 1013922:	add    BYTE PTR [rax],al
 1013924:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e392c
 101392a:	(bad)  
 101392b:	push   rax
 101392c:	add    DWORD PTR [rcx],ecx
 101392e:	add    DWORD PTR [rax],eax
 1013930:	(bad)  
 1013931:	push   rax
 1013932:	add    BYTE PTR [rax],al
 1013934:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e393c
 101393a:	(bad)  
 101393b:	push   rax
 101393c:	add    DWORD PTR [rcx],ecx
 101393e:	add    DWORD PTR [rax],eax
 1013940:	(bad)  
 1013941:	push   rax
 1013942:	add    BYTE PTR [rax],al
 1013944:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e394c
 101394a:	(bad)  
 101394b:	push   rax
 101394c:	add    DWORD PTR [rcx],ecx
 101394e:	add    DWORD PTR [rax],eax
 1013950:	(bad)  
 1013951:	push   rax
 1013952:	add    BYTE PTR [rax],al
 1013954:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e395c
 101395a:	(bad)  
 101395b:	push   rax
 101395c:	add    DWORD PTR [rdx],edx
 101395e:	add    al,BYTE PTR [rax]
 1013960:	adc    dh,BYTE PTR [rdx]
 1013962:	or     edx,DWORD PTR [rax+0x1]
 1013965:	(bad)  
 1013966:	add    al,BYTE PTR [rax]
 1013968:	(bad)  
 1013969:	push   rdx
 101396a:	adc    BYTE PTR [rax+0x1],dl
 101396d:	or     eax,0x120d0002
 1013972:	(bad)  
 1013973:	push   rax
 1013974:	add    DWORD PTR [rdx],edx
 1013976:	add    al,BYTE PTR [rax]
 1013978:	adc    dl,BYTE PTR [rdx+0xb]
 101397b:	push   rax
 101397c:	sbb    DWORD PTR [rsi],ebx
 101397e:	add    eax,DWORD PTR [rax]
 1013980:	adc    BYTE PTR [rcx],al
 1013982:	rex.WRX add BYTE PTR [rsi],r8b
 1013985:	push   rax
 1013986:	add    BYTE PTR [rax],al
 1013988:	adc    al,0x1f
 101398a:	add    DWORD PTR [rax],eax
 101398c:	(bad)  
 101398d:	add    al,BYTE PTR [rax]
 101398f:	add    BYTE PTR [rcx],bl
 1013991:	sbb    eax,DWORD PTR [rax+rax*1]
 1013994:	or     eax,0x6004d01
 1013999:	jo     0x101399d
 101399b:	push   rax
 101399c:	adc    al,0x1f
 101399e:	add    DWORD PTR [rax],eax
 10139a0:	push   rax
 10139a1:	add    al,BYTE PTR [rax]
 10139a3:	add    BYTE PTR [rcx],al
 10139a5:	or     DWORD PTR [rcx],eax
 10139a7:	add    BYTE PTR [rsi],al
 10139a9:	push   rax
 10139aa:	add    BYTE PTR [rax],al
 10139ac:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e39b4
 10139b2:	(bad)  
 10139b3:	push   rax
 10139b4:	add    DWORD PTR [rcx],ecx
 10139b6:	add    DWORD PTR [rax],eax
 10139b8:	(bad)  
 10139b9:	push   rax
 10139ba:	add    BYTE PTR [rax],al
 10139bc:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e39c4
 10139c2:	(bad)  
 10139c3:	push   rax
 10139c4:	add    DWORD PTR [rcx],ecx
 10139c6:	add    DWORD PTR [rax],eax
 10139c8:	(bad)  
 10139c9:	push   rax
 10139ca:	add    BYTE PTR [rax],al
 10139cc:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e39d4
 10139d2:	(bad)  
 10139d3:	push   rax
 10139d4:	add    DWORD PTR [rcx],ecx
 10139d6:	add    al,BYTE PTR [rax]
 10139d8:	or     DWORD PTR [rdx],esi
 10139da:	add    dl,BYTE PTR [rax+0x1]
 10139dd:	or     DWORD PTR [rdx],eax
 10139df:	add    BYTE PTR [rcx],cl
 10139e1:	xor    al,BYTE PTR [rdx]
 10139e3:	push   rax
 10139e4:	add    DWORD PTR [rcx],ecx
 10139e6:	add    al,BYTE PTR [rax]
 10139e8:	or     DWORD PTR [rdx],esi
 10139ea:	add    dl,BYTE PTR [rax+0x1]
 10139ed:	or     DWORD PTR [rdx],eax
 10139ef:	add    BYTE PTR [rcx],cl
 10139f1:	xor    al,BYTE PTR [rdx]
 10139f3:	push   rax
 10139f4:	add    DWORD PTR [rcx],ecx
 10139f6:	add    al,BYTE PTR [rax]
 10139f8:	or     DWORD PTR [rdx],esi
 10139fa:	add    dl,BYTE PTR [rax+0x1]
 10139fd:	or     DWORD PTR [rdx],eax
 10139ff:	add    BYTE PTR [rcx],cl
 1013a01:	xor    al,BYTE PTR [rdx]
 1013a03:	push   rax
 1013a04:	sbb    DWORD PTR [rbx],ebx
 1013a06:	add    al,0x0
 1013a08:	or     eax,0x6005b01
 1013a0d:	jo     0x1013a11
 1013a0f:	push   rax
 1013a10:	adc    al,0x1f
 1013a12:	add    DWORD PTR [rax],eax
 1013a14:	rol    BYTE PTR [rdx],0x0
 1013a17:	add    BYTE PTR [rcx],bl
 1013a19:	xor    al,0x4
 1013a1b:	add    BYTE PTR [rdx],bl
 1013a1d:	add    DWORD PTR [rcx+0xf701300],ebp
 1013a23:	push   rax
 1013a24:	cmp    BYTE PTR [rdi],bl
 1013a26:	add    DWORD PTR [rax],eax
 1013a28:	cwde   
 1013a29:	(bad)  
 1013a2a:	add    BYTE PTR [rax],al
 1013a2c:	cmp    eax,DWORD PTR [rip+0xffffffffffff0000]        # 0x1003a32
 1013a32:	(bad)  
 1013a33:	inc    DWORD PTR [rax]
 1013a35:	add    BYTE PTR [rax],al
 1013a37:	add    BYTE PTR [rax],al
 1013a39:	add    BYTE PTR [rax],al
 1013a3b:	add    BYTE PTR [rax],dl
 1013a3d:	sub    DWORD PTR [rcx],eax
 1013a3f:	add    bh,bh
 1013a41:	(bad)  
 1013a42:	(bad)  
 1013a43:	inc    DWORD PTR [rax]
 1013a45:	add    BYTE PTR [rax],al
 1013a47:	add    BYTE PTR [rax],al
 1013a49:	add    BYTE PTR [rax],al
 1013a4b:	add    BYTE PTR [rcx],al
 1013a4d:	add    BYTE PTR [rax],al
 1013a4f:	add    BYTE PTR [rdx],al
 1013a51:	add    BYTE PTR [rax],al
 1013a53:	add    BYTE PTR [rcx],al
 1013a55:	add    BYTE PTR [rax],al
 1013a57:	add    BYTE PTR [rdx+rdi*1+0x1],bl
	...
 1013a67:	add    BYTE PTR [rax],dh
 1013a69:	sub    DWORD PTR [rcx],eax
 1013a6b:	add    BYTE PTR [rax+0x0],bl
 1013a6e:	add    BYTE PTR [rax],al
 1013a70:	lock clc 
 1013a72:	add    BYTE PTR [rax],al
 1013a74:	(bad)  
 1013a75:	(bad)  
 1013a76:	(bad)  
 1013a77:	call   QWORD PTR [rcx+rdi*8+0x0]
 1013a7b:	add    BYTE PTR [rax],al
 1013a7d:	add    BYTE PTR [rax],al
 1013a7f:	add    dl,ah
 1013a81:	cld    
 1013a82:	add    BYTE PTR [rax],al
 1013a84:	add    DWORD PTR [rax],eax
 1013a86:	add    BYTE PTR [rax],al
 1013a88:	(bad)  
 1013a89:	std    
 1013a8a:	add    BYTE PTR [rax],al
 1013a8c:	add    BYTE PTR [rax],al
 1013a8e:	add    BYTE PTR [rax],al
 1013a90:	mov    eax,0xff00010b
 1013a95:	(bad)  
 1013a96:	(bad)  
 1013a97:	(bad)  
 1013a98:	mov    ebx,0x10b
 1013a9d:	add    BYTE PTR [rax],al
 1013a9f:	add    BYTE PTR [rip+0x2000129],bh        # 0x3013bce
 1013aa5:	add    BYTE PTR [rax],al
 1013aa7:	add    BYTE PTR [rdi+0x29],al
 1013aaa:	add    DWORD PTR [rax],eax
 1013aac:	add    BYTE PTR [rax],al
 1013aae:	add    BYTE PTR [rax],al
 1013ab0:	add    DWORD PTR [rsi],eax
 1013ab2:	add    al,BYTE PTR [rax]
 1013ab4:	(bad)  
 1013ab5:	xor    al,BYTE PTR [rdx]
 1013ab7:	push   rax
 1013ab8:	sbb    DWORD PTR [rdx],ecx
 1013aba:	add    al,BYTE PTR [rax]
 1013abc:	or     dh,BYTE PTR [rdx+0x6]
 1013abf:	push   rax
 1013ac0:	pushf  
 1013ac1:	(bad)  
 1013ac2:	add    DWORD PTR [rax],eax
 1013ac4:	cwde   
 1013ac5:	(bad)  
 1013ac6:	add    BYTE PTR [rax],al
 1013ac8:	add    DWORD PTR [rcx],ecx
 1013aca:	add    DWORD PTR [rax],eax
 1013acc:	(bad)  
 1013acd:	push   rax
 1013ace:	add    BYTE PTR [rax],al
 1013ad0:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3ad8
 1013ad6:	(bad)  
 1013ad7:	push   rax
 1013ad8:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3ae0
 1013ade:	(bad)  
 1013adf:	push   rax
 1013ae0:	add    DWORD PTR [rcx],ecx
 1013ae2:	add    DWORD PTR [rax],eax
 1013ae4:	(bad)  
 1013ae5:	push   rax
 1013ae6:	add    BYTE PTR [rax],al
 1013ae8:	add    DWORD PTR [rcx],ecx
 1013aea:	add    DWORD PTR [rax],eax
 1013aec:	(bad)  
 1013aed:	push   rax
 1013aee:	add    BYTE PTR [rax],al
 1013af0:	add    DWORD PTR [rcx],ecx
 1013af2:	add    DWORD PTR [rax],eax
 1013af4:	(bad)  
 1013af5:	push   rax
 1013af6:	add    BYTE PTR [rax],al
 1013af8:	add    DWORD PTR [rsi],ecx
 1013afa:	add    DWORD PTR [rax],eax
 1013afc:	or     edx,DWORD PTR [rax+0x0]
 1013aff:	add    BYTE PTR [rcx],al
 1013b01:	or     eax,0x320d0002
 1013b06:	(bad)  
 1013b07:	push   rax
 1013b08:	add    DWORD PTR [rcx],ecx
 1013b0a:	add    DWORD PTR [rax],eax
 1013b0c:	(bad)  
 1013b0d:	push   rax
 1013b0e:	add    BYTE PTR [rax],al
 1013b10:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3b18
 1013b16:	(bad)  
 1013b17:	push   rax
 1013b18:	add    DWORD PTR [rcx],ecx
 1013b1a:	add    DWORD PTR [rax],eax
 1013b1c:	(bad)  
 1013b1d:	push   rax
 1013b1e:	add    BYTE PTR [rax],al
 1013b20:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3b28
 1013b26:	(bad)  
 1013b27:	push   rax
 1013b28:	add    DWORD PTR [rsi],ecx
 1013b2a:	add    DWORD PTR [rax],eax
 1013b2c:	or     edx,DWORD PTR [rax+0x0]
 1013b2f:	add    BYTE PTR [rcx],al
 1013b31:	or     eax,0x320d0002
 1013b36:	(bad)  
 1013b37:	push   rax
 1013b38:	add    DWORD PTR [rcx],ecx
 1013b3a:	add    DWORD PTR [rax],eax
 1013b3c:	(bad)  
 1013b3d:	push   rax
 1013b3e:	add    BYTE PTR [rax],al
 1013b40:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3b48
 1013b46:	(bad)  
 1013b47:	push   rax
 1013b48:	add    DWORD PTR [rcx],ecx
 1013b4a:	add    DWORD PTR [rax],eax
 1013b4c:	(bad)  
 1013b4d:	push   rax
 1013b4e:	add    BYTE PTR [rax],al
 1013b50:	add    DWORD PTR [rcx],ecx
 1013b52:	add    DWORD PTR [rax],eax
 1013b54:	(bad)  
 1013b55:	push   rax
 1013b56:	add    BYTE PTR [rax],al
 1013b58:	add    DWORD PTR [rcx],ecx
 1013b5a:	add    DWORD PTR [rax],eax
 1013b5c:	(bad)  
 1013b5d:	push   rax
 1013b5e:	add    BYTE PTR [rax],al
 1013b60:	add    DWORD PTR [rcx],ecx
 1013b62:	add    DWORD PTR [rax],eax
 1013b64:	(bad)  
 1013b65:	push   rax
 1013b66:	add    BYTE PTR [rax],al
 1013b68:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3b70
 1013b6e:	(bad)  
 1013b6f:	push   rax
 1013b70:	add    DWORD PTR [rsi],ecx
 1013b72:	add    DWORD PTR [rax],eax
 1013b74:	or     edx,DWORD PTR [rax+0x0]
 1013b77:	add    BYTE PTR [rcx],al
 1013b79:	or     eax,0x320d0002
 1013b7e:	(bad)  
 1013b7f:	push   rax
 1013b80:	add    DWORD PTR [rcx],ecx
 1013b82:	add    DWORD PTR [rax],eax
 1013b84:	(bad)  
 1013b85:	push   rax
 1013b86:	add    BYTE PTR [rax],al
 1013b88:	add    DWORD PTR [rcx],ecx
 1013b8a:	add    DWORD PTR [rax],eax
 1013b8c:	(bad)  
 1013b8d:	push   rax
 1013b8e:	add    BYTE PTR [rax],al
 1013b90:	add    DWORD PTR [rsi],ecx
 1013b92:	add    DWORD PTR [rax],eax
 1013b94:	or     edx,DWORD PTR [rax+0x0]
 1013b97:	add    BYTE PTR [rcx],al
 1013b99:	or     eax,0x320d0002
 1013b9e:	(bad)  
 1013b9f:	push   rax
 1013ba0:	add    DWORD PTR [rcx],ecx
 1013ba2:	add    DWORD PTR [rax],eax
 1013ba4:	(bad)  
 1013ba5:	push   rax
 1013ba6:	add    BYTE PTR [rax],al
 1013ba8:	add    DWORD PTR [rcx],ecx
 1013baa:	add    DWORD PTR [rax],eax
 1013bac:	(bad)  
 1013bad:	push   rax
 1013bae:	add    BYTE PTR [rax],al
 1013bb0:	add    DWORD PTR [rcx],ecx
 1013bb2:	add    DWORD PTR [rax],eax
 1013bb4:	(bad)  
 1013bb5:	push   rax
 1013bb6:	add    BYTE PTR [rax],al
 1013bb8:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3bc0
 1013bbe:	(bad)  
 1013bbf:	push   rax
 1013bc0:	add    DWORD PTR [rcx],ecx
 1013bc2:	add    DWORD PTR [rax],eax
 1013bc4:	(bad)  
 1013bc5:	push   rax
 1013bc6:	add    BYTE PTR [rax],al
 1013bc8:	add    DWORD PTR [rcx],ecx
 1013bca:	add    DWORD PTR [rax],eax
 1013bcc:	(bad)  
 1013bcd:	push   rax
 1013bce:	add    BYTE PTR [rax],al
 1013bd0:	add    DWORD PTR [rcx],ecx
 1013bd2:	add    DWORD PTR [rax],eax
 1013bd4:	(bad)  
 1013bd5:	push   rax
 1013bd6:	add    BYTE PTR [rax],al
 1013bd8:	add    DWORD PTR [rcx],ecx
 1013bda:	add    DWORD PTR [rax],eax
 1013bdc:	(bad)  
 1013bdd:	push   rax
 1013bde:	add    BYTE PTR [rax],al
 1013be0:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3be8
 1013be6:	(bad)  
 1013be7:	push   rax
 1013be8:	add    DWORD PTR [rcx],ecx
 1013bea:	add    DWORD PTR [rax],eax
 1013bec:	(bad)  
 1013bed:	push   rax
 1013bee:	add    BYTE PTR [rax],al
 1013bf0:	add    DWORD PTR [rcx],ecx
 1013bf2:	add    DWORD PTR [rax],eax
 1013bf4:	(bad)  
 1013bf5:	push   rax
 1013bf6:	add    BYTE PTR [rax],al
 1013bf8:	add    DWORD PTR [rcx],ecx
 1013bfa:	add    DWORD PTR [rax],eax
 1013bfc:	(bad)  
 1013bfd:	push   rax
 1013bfe:	add    BYTE PTR [rax],al
 1013c00:	add    DWORD PTR [rcx],ecx
 1013c02:	add    DWORD PTR [rax],eax
 1013c04:	(bad)  
 1013c05:	push   rax
 1013c06:	add    BYTE PTR [rax],al
 1013c08:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3c10
 1013c0e:	(bad)  
 1013c0f:	push   rax
 1013c10:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3c18
 1013c16:	(bad)  
 1013c17:	push   rax
 1013c18:	add    DWORD PTR [rcx],ecx
 1013c1a:	add    DWORD PTR [rax],eax
 1013c1c:	(bad)  
 1013c1d:	push   rax
 1013c1e:	add    BYTE PTR [rax],al
 1013c20:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3c28
 1013c26:	(bad)  
 1013c27:	push   rax
 1013c28:	add    DWORD PTR [rcx],ecx
 1013c2a:	add    DWORD PTR [rax],eax
 1013c2c:	(bad)  
 1013c2d:	push   rax
 1013c2e:	add    BYTE PTR [rax],al
 1013c30:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3c38
 1013c36:	(bad)  
 1013c37:	push   rax
 1013c38:	add    DWORD PTR [rcx],ecx
 1013c3a:	add    DWORD PTR [rax],eax
 1013c3c:	(bad)  
 1013c3d:	push   rax
 1013c3e:	add    BYTE PTR [rax],al
 1013c40:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3c48
 1013c46:	(bad)  
 1013c47:	push   rax
 1013c48:	add    DWORD PTR [rcx],ecx
 1013c4a:	add    DWORD PTR [rax],eax
 1013c4c:	(bad)  
 1013c4d:	push   rax
 1013c4e:	add    BYTE PTR [rax],al
 1013c50:	add    DWORD PTR [rcx],ecx
 1013c52:	add    DWORD PTR [rax],eax
 1013c54:	(bad)  
 1013c55:	push   rax
 1013c56:	add    BYTE PTR [rax],al
 1013c58:	add    DWORD PTR [rcx],ecx
 1013c5a:	add    DWORD PTR [rax],eax
 1013c5c:	(bad)  
 1013c5d:	push   rax
 1013c5e:	add    BYTE PTR [rax],al
 1013c60:	add    DWORD PTR [rcx],ecx
 1013c62:	add    DWORD PTR [rax],eax
 1013c64:	(bad)  
 1013c65:	push   rax
 1013c66:	add    BYTE PTR [rax],al
 1013c68:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3c70
 1013c6e:	(bad)  
 1013c6f:	push   rax
 1013c70:	add    DWORD PTR [rcx],ecx
 1013c72:	add    DWORD PTR [rax],eax
 1013c74:	(bad)  
 1013c75:	push   rax
 1013c76:	add    BYTE PTR [rax],al
 1013c78:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3c80
 1013c7e:	(bad)  
 1013c7f:	push   rax
 1013c80:	add    DWORD PTR [rcx],ecx
 1013c82:	add    DWORD PTR [rax],eax
 1013c84:	(bad)  
 1013c85:	push   rax
 1013c86:	add    BYTE PTR [rax],al
 1013c88:	add    DWORD PTR [rcx],ecx
 1013c8a:	add    DWORD PTR [rax],eax
 1013c8c:	(bad)  
 1013c8d:	push   rax
 1013c8e:	add    BYTE PTR [rax],al
 1013c90:	add    DWORD PTR [rcx],ecx
 1013c92:	add    DWORD PTR [rax],eax
 1013c94:	(bad)  
 1013c95:	push   rax
 1013c96:	add    BYTE PTR [rax],al
 1013c98:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3ca0
 1013c9e:	(bad)  
 1013c9f:	push   rax
 1013ca0:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3ca8
 1013ca6:	(bad)  
 1013ca7:	push   rax
 1013ca8:	add    DWORD PTR [rcx],ecx
 1013caa:	add    DWORD PTR [rax],eax
 1013cac:	(bad)  
 1013cad:	push   rax
 1013cae:	add    BYTE PTR [rax],al
 1013cb0:	add    DWORD PTR [rcx],ecx
 1013cb2:	add    DWORD PTR [rax],eax
 1013cb4:	(bad)  
 1013cb5:	push   rax
 1013cb6:	add    BYTE PTR [rax],al
 1013cb8:	add    DWORD PTR [rcx],ecx
 1013cba:	add    DWORD PTR [rax],eax
 1013cbc:	(bad)  
 1013cbd:	push   rax
 1013cbe:	add    BYTE PTR [rax],al
 1013cc0:	add    DWORD PTR [rip+0x320d0002],ecx        # 0x330e3cc8
 1013cc6:	(bad)  
 1013cc7:	push   rax
 1013cc8:	add    DWORD PTR [rip+0x120d0002],ecx        # 0x130e3cd0
 1013cce:	(bad)  
 1013ccf:	push   rax
 1013cd0:	add    DWORD PTR [rcx],ecx
 1013cd2:	add    DWORD PTR [rax],eax
 1013cd4:	(bad)  
 1013cd5:	push   rax
 1013cd6:	add    BYTE PTR [rax],al
 1013cd8:	add    DWORD PTR [rcx],ecx
 1013cda:	add    DWORD PTR [rax],eax
 1013cdc:	(bad)  
 1013cdd:	push   rax
 1013cde:	add    BYTE PTR [rax],al
 1013ce0:	add    DWORD PTR [rcx+rax*1],eax
 1013ce3:	add    BYTE PTR [rdx+riz*2],al
 1013ce6:	add    BYTE PTR [rax],al
 1013ce8:	add    DWORD PTR [rsi],eax
 1013cea:	add    al,BYTE PTR [rax]
 1013cec:	(bad)  
 1013ced:	xor    al,BYTE PTR [rdx]
 1013cef:	push   rax
 1013cf0:	or     DWORD PTR [rdx],ecx
 1013cf2:	add    al,0x0
 1013cf4:	or     dh,BYTE PTR [rsi+rax*1]
 1013cf7:	add    BYTE PTR [rdx],cl
 1013cf9:	xor    al,BYTE PTR [rsi]
 1013cfb:	jo     0x1013d57
 1013cfd:	and    DWORD PTR [rcx],eax
 1013cff:	add    BYTE PTR [rcx],al
 1013d01:	add    BYTE PTR [rax],al
 1013d03:	add    BYTE PTR [rdx-0x1ffffee8],ah
 1013d09:	sbb    DWORD PTR [rcx],eax
 1013d0b:	add    BYTE PTR [rcx+rbp*1+0x1],ah
 1013d0f:	add    al,ah
 1013d11:	sbb    DWORD PTR [rcx],eax
 1013d13:	add    BYTE PTR [rcx],al
 1013d15:	add    al,0x1
 1013d17:	add    BYTE PTR [rdx+rax*2],al
 1013d1a:	add    BYTE PTR [rax],al
 1013d1c:	add    DWORD PTR [rcx+rax*1],eax
 1013d1f:	add    BYTE PTR [rdx+rax*2],al
 1013d22:	add    BYTE PTR [rax],al
 1013d24:	add    DWORD PTR [rsi],eax
 1013d26:	add    al,BYTE PTR [rax]
 1013d28:	(bad)  
 1013d29:	xor    al,BYTE PTR [rdx]
 1013d2b:	push   rax
 1013d2c:	adc    DWORD PTR [rax+rcx*1],ebx
 1013d2f:	add    BYTE PTR [rsp+riz*2],bl
 1013d32:	or     eax,0xc341c00
 1013d37:	add    BYTE PTR [rdx+rdx*2],bl
 1013d3a:	sbb    al,dl
 1013d3c:	(bad)  
 1013d3d:	rcl    BYTE PTR [rax+rsi*2],0x5a
 1013d41:	and    DWORD PTR [rcx],eax
 1013d43:	add    BYTE PTR [rcx],al
 1013d45:	add    BYTE PTR [rax],al
 1013d47:	add    BYTE PTR [rcx],bh
 1013d49:	sbb    eax,DWORD PTR [rcx]
 1013d4b:	add    BYTE PTR [rbx+rbx*1+0x1],bl
 1013d4f:	add    BYTE PTR [rax+0x129],cl
 1013d55:	add    BYTE PTR [rax],al
 1013d57:	add    BYTE PTR [rcx],al
 1013d59:	(bad)  
 1013d5a:	add    al,BYTE PTR [rax]
 1013d5c:	(bad)  
 1013d5d:	xor    al,BYTE PTR [rdx]
 1013d5f:	push   rax
 1013d60:	or     DWORD PTR [rdi],edx
 1013d62:	(bad)  
 1013d63:	add    BYTE PTR [rdi],dl
 1013d65:	xor    al,0xd
 1013d67:	add    BYTE PTR [rdi],dl
 1013d69:	jb     0x1013d7e
 1013d6b:	rcl    BYTE PTR [rcx],0x70
 1013d6e:	adc    BYTE PTR [rax+0x5a],ah
 1013d71:	and    DWORD PTR [rcx],eax
 1013d73:	add    BYTE PTR [rcx],al
 1013d75:	add    BYTE PTR [rax],al
 1013d77:	add    BYTE PTR [rbx-0x4bfffee5],bl
 1013d7d:	sbb    eax,DWORD PTR [rcx]
 1013d7f:	add    BYTE PTR [rdx-0x4bfffed7],bh
 1013d85:	sbb    eax,DWORD PTR [rcx]
 1013d87:	add    BYTE PTR [rcx],al
 1013d89:	(bad)  
 1013d8a:	add    al,BYTE PTR [rax]
 1013d8c:	(bad)  
 1013d8d:	xor    al,BYTE PTR [rdx]
 1013d8f:	push   rax
 1013d90:	adc    DWORD PTR [rax],ebx
 1013d92:	add    eax,0x14621800
 1013d97:	rcl    BYTE PTR [rdx],0x70
 1013d9a:	adc    DWORD PTR [rax+0x10],esp
 1013d9d:	xor    BYTE PTR [rax],al
 1013d9f:	add    BYTE PTR [rdx+0x21],bl
 1013da2:	add    DWORD PTR [rax],eax
 1013da4:	add    DWORD PTR [rax],eax
 1013da6:	add    BYTE PTR [rax],al
 1013da8:	sti    
 1013da9:	sbb    eax,DWORD PTR [rcx]
 1013dab:	add    BYTE PTR [rbx],bl
 1013dad:	sbb    al,0x1
 1013daf:	add    BYTE PTR [rcx],al
 1013db1:	sub    al,BYTE PTR [rcx]
 1013db3:	add    BYTE PTR [rax],al
 1013db5:	add    BYTE PTR [rax],al
 1013db7:	add    BYTE PTR [rcx],al
 1013db9:	(bad)  
 1013dba:	add    al,BYTE PTR [rax]
 1013dbc:	(bad)  
 1013dbd:	xor    al,BYTE PTR [rdx]
 1013dbf:	push   rax
 1013dc0:	adc    DWORD PTR [rsi],eax
 1013dc2:	add    al,BYTE PTR [rax]
 1013dc4:	(bad)  
 1013dc5:	xor    al,BYTE PTR [rdx]
 1013dc7:	xor    BYTE PTR [rdx+0x21],bl
 1013dca:	add    DWORD PTR [rax],eax
 1013dcc:	add    DWORD PTR [rax],eax
 1013dce:	add    BYTE PTR [rax],al
 1013dd0:	outs   dx,DWORD PTR ds:[rsi]
 1013dd1:	sbb    al,0x1
 1013dd3:	add    ch,dl
 1013dd5:	sbb    al,0x1
 1013dd7:	add    BYTE PTR [rbx],dh
 1013dd9:	sub    al,BYTE PTR [rcx]
 1013ddb:	add    BYTE PTR [rax],al
 1013ddd:	add    BYTE PTR [rax],al
 1013ddf:	add    BYTE PTR [rcx],al
 1013de1:	add    al,0x1
 1013de3:	add    BYTE PTR [rdx+rax*2],al
 1013de6:	add    BYTE PTR [rax],al
 1013de8:	add    DWORD PTR [rdx+rax*1],ecx
 1013deb:	add    BYTE PTR [rcx+rax*1],cl
 1013dee:	adc    DWORD PTR [rax],eax
 1013df0:	add    DWORD PTR [rsi],eax
 1013df2:	add    al,BYTE PTR [rax]
 1013df4:	(bad)  
 1013df5:	xor    al,BYTE PTR [rdx]
 1013df7:	xor    BYTE PTR [rcx],al
 1013df9:	add    al,0x1
 1013dfb:	add    BYTE PTR [rdx+rax*2],al
 1013dfe:	add    BYTE PTR [rax],al
 1013e00:	add    DWORD PTR [rcx],ebx
 1013e02:	or     al,BYTE PTR [rax]
 1013e04:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
 1013e08:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
 1013e0c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
 1013e10:	sbb    DWORD PTR [rsi+rax*1],esi
 1013e13:	add    BYTE PTR [rcx],bl
 1013e15:	xor    dl,BYTE PTR [rip+0x10401c0]        # 0x2053fdb
 1013e1b:	add    BYTE PTR [rdx+rdx*1],al
 1013e1e:	add    BYTE PTR [rax],al
 1013e20:	add    DWORD PTR [rax],eax
 1013e22:	add    BYTE PTR [rax],al
 1013e24:	add    DWORD PTR [rcx+rax*1],eax
 1013e27:	add    BYTE PTR [rdx+rax*2],al
 1013e2a:	add    BYTE PTR [rax],al
 1013e2c:	add    DWORD PTR [rcx+rax*1],eax
 1013e2f:	add    BYTE PTR [rdx+rax*2],al
 1013e32:	add    BYTE PTR [rax],al
 1013e34:	add    DWORD PTR [rdx],ecx
 1013e36:	add    al,0x0
 1013e38:	or     dh,BYTE PTR [rsi+rax*1]
 1013e3b:	add    BYTE PTR [rdx],cl
 1013e3d:	xor    al,BYTE PTR [rsi]
 1013e3f:	jo     0x1013e42
 1013e41:	or     al,BYTE PTR [rax+rax*1]
 1013e44:	or     dh,BYTE PTR [rsi+rax*1]
 1013e47:	add    BYTE PTR [rdx],cl
 1013e49:	xor    al,BYTE PTR [rsi]
 1013e4b:	jo     0x1013e4e
 1013e4d:	(bad)  
 1013e4e:	add    al,BYTE PTR [rax]
 1013e50:	(bad)  
 1013e51:	xor    al,BYTE PTR [rdx]
 1013e53:	push   rax
 1013e54:	or     DWORD PTR [rcx+rax*1],eax
 1013e57:	add    BYTE PTR [rdx+rax*2],al
 1013e5a:	add    BYTE PTR [rax],al
 1013e5c:	pop    rdx
 1013e5d:	and    DWORD PTR [rcx],eax
 1013e5f:	add    BYTE PTR [rcx],al
 1013e61:	add    BYTE PTR [rax],al
 1013e63:	add    BYTE PTR [rdi],dl
 1013e65:	and    al,BYTE PTR [rcx]
 1013e67:	add    BYTE PTR [rdx+0x22],cl
 1013e6a:	add    DWORD PTR [rax],eax
 1013e6c:	(bad)  
 1013e6d:	sub    al,BYTE PTR [rcx]
 1013e6f:	add    BYTE PTR [rdx+0x22],cl
 1013e72:	add    DWORD PTR [rax],eax
 1013e74:	add    DWORD PTR [rdx],ecx
 1013e76:	add    al,0x0
 1013e78:	or     dh,BYTE PTR [rax+rcx*1]
 1013e7b:	add    BYTE PTR [rdx],cl
 1013e7d:	xor    al,BYTE PTR [rsi]
 1013e7f:	jo     0x1013eb9
 1013e81:	(bad)  
 1013e82:	add    DWORD PTR [rax],eax
	...
 1013e8c:	push   rdx
 1013e8d:	rex.XB add DWORD PTR [r8],eax
 1013e90:	add    BYTE PTR [rax],dl
 1013e92:	add    BYTE PTR [rax],al
 1013e94:	pop    rax
 1013e95:	(bad)  
 1013e96:	add    DWORD PTR [rax],eax
	...
 1013ea0:	push   rsi
 1013ea1:	add    DWORD PTR [r8],r8d
 1013ea4:	and    BYTE PTR [rax],dl
 1013ea6:	add    BYTE PTR [rax],al
 1013ea8:	rol    BYTE PTR [rax+0x1],0x0
	...
 1013eb4:	or     al,0x48
 1013eb6:	add    DWORD PTR [rax],eax
 1013eb8:	mov    BYTE PTR [rcx],dl
 1013eba:	add    BYTE PTR [rax],al
 1013ebc:	enter  0x142,0x0
	...
 1013ec8:	jbe    0x1013f12
 1013eca:	add    DWORD PTR [rax],eax
 1013ecc:	nop
 1013ecd:	adc    eax,DWORD PTR [rax]
 1013ecf:	add    BYTE PTR [rax],al
 1013ed1:	rex.XB add DWORD PTR [r8],eax
	...
 1013edc:	mov    eax,0xc8000148
 1013ee1:	adc    eax,DWORD PTR [rax]
 1013ee3:	add    BYTE PTR [rax+0x142],bl
 1013ee9:	add    BYTE PTR [rax],al
 1013eeb:	add    BYTE PTR [rax],al
 1013eed:	add    BYTE PTR [rax],al
 1013eef:	add    dl,al
 1013ef1:	add    QWORD PTR [rax],rax
 1013ef4:	(bad)  
 1013ef5:	adc    eax,DWORD PTR [rax]
 1013ef7:	add    al,ah
 1013ef9:	rex.X add DWORD PTR [rax],eax
	...
 1013f04:	adc    cl,BYTE PTR [rcx+0x1]
 1013f07:	add    BYTE PTR [rax-0x4fffffed],ch
 1013f0d:	rex.X add DWORD PTR [rax],eax
	...
 1013f18:	rex.WX
 1013f19:	add    QWORD PTR [r8],rax
 1013f1c:	js     0x1013f31
	...
 1013f36:	add    BYTE PTR [rax],al
 1013f38:	rex.XB add DWORD PTR cs:[r8],eax
 1013f3c:	add    BYTE PTR [rax],al
 1013f3e:	add    BYTE PTR [rax],al
 1013f40:	rex.XB add DWORD PTR ds:[r8],eax
 1013f44:	add    BYTE PTR [rax],al
 1013f46:	add    BYTE PTR [rax],al
 1013f48:	and    BYTE PTR [rbx+0x1],al
	...
 1013f57:	add    BYTE PTR [rax+0x43],ah
 1013f5a:	add    DWORD PTR [rax],eax
 1013f5c:	add    BYTE PTR [rax],al
 1013f5e:	add    BYTE PTR [rax],al
 1013f60:	outs   dx,BYTE PTR ds:[rsi]
 1013f61:	rex.XB add DWORD PTR [r8],eax
 1013f64:	add    BYTE PTR [rax],al
 1013f66:	add    BYTE PTR [rax],al
 1013f68:	add    BYTE PTR [rbx+0x1],0x0
 1013f6c:	add    BYTE PTR [rax],al
 1013f6e:	add    BYTE PTR [rax],al
 1013f70:	mov    es,WORD PTR [rbx+0x1]
 1013f73:	add    BYTE PTR [rax],al
 1013f75:	add    BYTE PTR [rax],al
 1013f77:	add    BYTE PTR [rsi+0x143],bl
 1013f7d:	add    BYTE PTR [rax],al
 1013f7f:	add    BYTE PTR [rsi+0x143],ah
 1013f85:	add    BYTE PTR [rax],al
 1013f87:	add    BYTE PTR [rbx+rax*2+0x1],dh
 1013f8e:	add    BYTE PTR [rax],al
 1013f90:	rol    BYTE PTR [rbx+0x1],0x0
 1013f94:	add    BYTE PTR [rax],al
 1013f96:	add    BYTE PTR [rax],al
 1013f98:	(bad)  
 1013f99:	rex.XB add DWORD PTR [r8],eax
 1013f9c:	add    BYTE PTR [rax],al
 1013f9e:	add    BYTE PTR [rax],al
 1013fa0:	fiadd  WORD PTR [rbx+0x1]
 1013fa3:	add    BYTE PTR [rax],al
 1013fa5:	add    BYTE PTR [rax],al
 1013fa7:	add    al,dh
 1013fa9:	rex.XB add DWORD PTR [r8],eax
 1013fac:	add    BYTE PTR [rax],al
 1013fae:	add    BYTE PTR [rax],al
 1013fb0:	add    BYTE PTR [rcx+rax*1+0x0],al
 1013fb4:	add    BYTE PTR [rax],al
 1013fb6:	add    BYTE PTR [rax],al
 1013fb8:	adc    al,0x44
 1013fba:	add    DWORD PTR [rax],eax
 1013fbc:	add    BYTE PTR [rax],al
 1013fbe:	add    BYTE PTR [rax],al
 1013fc0:	sub    al,BYTE PTR [rcx+rax*1+0x0]
 1013fc4:	add    BYTE PTR [rax],al
 1013fc6:	add    BYTE PTR [rax],al
 1013fc8:	cmp    al,BYTE PTR [rcx+rax*1+0x0]
 1013fcc:	add    BYTE PTR [rax],al
 1013fce:	add    BYTE PTR [rax],al
 1013fd0:	rex.WX
 1013fd1:	add    DWORD PTR [rax],r8d
 1013fd4:	add    BYTE PTR [rax],al
 1013fd6:	add    BYTE PTR [rax],al
 1013fd8:	pop    rsi
 1013fd9:	add    DWORD PTR [rax],r8d
 1013fdc:	add    BYTE PTR [rax],al
 1013fde:	add    BYTE PTR [rax],al
 1013fe0:	jb     0x1014026
 1013fe2:	add    DWORD PTR [rax],eax
 1013fe4:	add    BYTE PTR [rax],al
 1013fe6:	add    BYTE PTR [rax],al
 1013fe8:	xchg   BYTE PTR [rcx+rax*1+0x0],al
 1013fec:	add    BYTE PTR [rax],al
 1013fee:	add    BYTE PTR [rax],al
 1013ff0:	xchg   esp,eax
 1013ff1:	add    DWORD PTR [rax],r8d
 1013ff4:	add    BYTE PTR [rax],al
 1013ff6:	add    BYTE PTR [rax],al
 1013ff8:	stos   BYTE PTR es:[rdi],al
 1013ff9:	add    DWORD PTR [rax],r8d
 1013ffc:	add    BYTE PTR [rax],al
 1013ffe:	add    BYTE PTR [rax],al
 1014000:	rol    BYTE PTR [rcx+rax*1+0x0],0x0
 1014005:	add    BYTE PTR [rax],al
 1014007:	add    dl,dl
 1014009:	add    DWORD PTR [rax],r8d
 101400c:	add    BYTE PTR [rax],al
 101400e:	add    BYTE PTR [rax],al
 1014010:	loop   0x1014056
 1014012:	add    DWORD PTR [rax],eax
 1014014:	add    BYTE PTR [rax],al
 1014016:	add    BYTE PTR [rax],al
 1014018:	clc    
 1014019:	add    DWORD PTR [rax],r8d
 101401c:	add    BYTE PTR [rax],al
 101401e:	add    BYTE PTR [rax],al
 1014020:	(bad)  
 1014021:	add    DWORD PTR [r8],r8d
 1014024:	add    BYTE PTR [rax],al
 1014026:	add    BYTE PTR [rax],al
 1014028:	and    BYTE PTR [rbp+0x1],al
 101402b:	add    BYTE PTR [rax],al
 101402d:	add    BYTE PTR [rax],al
 101402f:	add    BYTE PTR [rdx],dh
 1014031:	add    DWORD PTR [r8],r8d
 1014034:	add    BYTE PTR [rax],al
 1014036:	add    BYTE PTR [rax],al
 1014038:	rex.R
 1014039:	add    DWORD PTR [r8],r8d
 101403c:	add    BYTE PTR [rax],al
 101403e:	add    BYTE PTR [rax],al
 1014040:	js     0x101408c
 1014042:	add    DWORD PTR [rax],eax
 1014044:	add    BYTE PTR [rax],al
 1014046:	add    BYTE PTR [rax],al
 1014048:	(bad)  
 1014049:	rex.WX add QWORD PTR [rax],rax
 101404c:	add    BYTE PTR [rax],al
 101404e:	add    BYTE PTR [rax],al
 1014050:	push   rdx
 1014051:	rex.WX add QWORD PTR [rax],rax
 1014054:	add    BYTE PTR [rax],al
 1014056:	add    BYTE PTR [rax],al
 1014058:	cmp    BYTE PTR [rdx+0x1],cl
 101405b:	add    BYTE PTR [rax],al
 101405d:	add    BYTE PTR [rax],al
 101405f:	add    BYTE PTR [rdx+rcx*2],ah
 1014062:	add    DWORD PTR [rax],eax
 1014064:	add    BYTE PTR [rax],al
 1014066:	add    BYTE PTR [rax],al
 1014068:	or     cl,BYTE PTR [rdx+0x1]
 101406b:	add    BYTE PTR [rax],al
 101406d:	add    BYTE PTR [rax],al
 101406f:	add    dh,dh
 1014071:	add    QWORD PTR [r8],rax
 1014074:	add    BYTE PTR [rax],al
 1014076:	add    BYTE PTR [rax],al
 1014078:	loop   0x10140c3
 101407a:	add    DWORD PTR [rax],eax
 101407c:	add    BYTE PTR [rax],al
 101407e:	add    BYTE PTR [rax],al
 1014080:	(bad)  
 1014081:	add    QWORD PTR [r8],rax
 1014084:	add    BYTE PTR [rax],al
 1014086:	add    BYTE PTR [rax],al
 1014088:	test   al,0x49
 101408a:	add    DWORD PTR [rax],eax
 101408c:	add    BYTE PTR [rax],al
 101408e:	add    BYTE PTR [rax],al
 1014090:	xchg   esp,eax
 1014091:	add    QWORD PTR [r8],rax
 1014094:	add    BYTE PTR [rax],al
 1014096:	add    BYTE PTR [rax],al
 1014098:	or     BYTE PTR [rcx+0x1],0x0
 101409c:	add    BYTE PTR [rax],al
 101409e:	add    BYTE PTR [rax],al
 10140a0:	jo     0x10140eb
 10140a2:	add    DWORD PTR [rax],eax
 10140a4:	add    BYTE PTR [rax],al
 10140a6:	add    BYTE PTR [rax],al
 10140a8:	(bad)  
 10140a9:	add    QWORD PTR [r8],rax
 10140ac:	add    BYTE PTR [rax],al
 10140ae:	add    BYTE PTR [rax],al
 10140b0:	mov    cs,WORD PTR [rdx+0x1]
	...
 10140bf:	add    BYTE PTR [rsi],cl
 10140c1:	rex.RX add DWORD PTR [rax],r8d
 10140c4:	add    BYTE PTR [rax],al
 10140c6:	add    BYTE PTR [rax],al
 10140c8:	sbb    BYTE PTR [rsi+0x1],al
 10140cb:	add    BYTE PTR [rax],al
 10140cd:	add    BYTE PTR [rax],al
 10140cf:	add    BYTE PTR [rax],ah
 10140d1:	rex.RX add DWORD PTR [rax],r8d
 10140d4:	add    BYTE PTR [rax],al
 10140d6:	add    BYTE PTR [rax],al
 10140d8:	rex.RX add DWORD PTR cs:[rax],r8d
 10140dc:	add    BYTE PTR [rax],al
 10140de:	add    BYTE PTR [rax],al
 10140e0:	rex.RX add DWORD PTR ds:[rax],r8d
 10140e4:	add    BYTE PTR [rax],al
 10140e6:	add    BYTE PTR [rax],al
 10140e8:	rex.WX
 10140e9:	rex.RX add DWORD PTR [rax],r8d
 10140ec:	add    BYTE PTR [rax],al
 10140ee:	add    BYTE PTR [rax],al
 10140f0:	push   rsp
 10140f1:	rex.RX add DWORD PTR [rax],r8d
 10140f4:	add    BYTE PTR [rax],al
 10140f6:	add    BYTE PTR [rax],al
 10140f8:	pop    rsi
 10140f9:	rex.RX add DWORD PTR [rax],r8d
 10140fc:	add    BYTE PTR [rax],al
 10140fe:	add    BYTE PTR [rax],al
 1014100:	push   0x146
 1014105:	add    BYTE PTR [rax],al
 1014107:	add    BYTE PTR [rax+0x46],dh
 101410a:	add    DWORD PTR [rax],eax
 101410c:	add    BYTE PTR [rax],al
 101410e:	add    BYTE PTR [rax],al
 1014110:	jp     0x1014158
 1014112:	add    DWORD PTR [rax],eax
 1014114:	add    BYTE PTR [rax],al
 1014116:	add    BYTE PTR [rax],al
 1014118:	test   BYTE PTR [rsi+0x1],al
 101411b:	add    BYTE PTR [rax],al
 101411d:	add    BYTE PTR [rax],al
 101411f:	add    BYTE PTR [rsi+0x146],cl
 1014125:	add    BYTE PTR [rax],al
 1014127:	add    BYTE PTR [rsi+rax*2],al
 101412a:	add    DWORD PTR [rax],eax
 101412c:	add    BYTE PTR [rax],al
 101412e:	add    BYTE PTR [rax],al
 1014130:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 1014131:	rex.RX add DWORD PTR [rax],r8d
 1014134:	add    BYTE PTR [rax],al
 1014136:	add    BYTE PTR [rax],al
 1014138:	mov    dl,0x46
 101413a:	add    DWORD PTR [rax],eax
 101413c:	add    BYTE PTR [rax],al
 101413e:	add    BYTE PTR [rax],al
 1014140:	rol    BYTE PTR [rsi+0x1],0x0
 1014144:	add    BYTE PTR [rax],al
 1014146:	add    BYTE PTR [rax],al
 1014148:	retf   0x146
 101414b:	add    BYTE PTR [rax],al
 101414d:	add    BYTE PTR [rax],al
 101414f:	add    dh,dl
 1014151:	rex.RX add DWORD PTR [rax],r8d
 1014154:	add    BYTE PTR [rax],al
 1014156:	add    BYTE PTR [rax],al
 1014158:	in     al,0x46
 101415a:	add    DWORD PTR [rax],eax
 101415c:	add    BYTE PTR [rax],al
 101415e:	add    BYTE PTR [rax],al
 1014160:	test   BYTE PTR [rsi+0x1],0x0
 1014164:	add    BYTE PTR [rax],al
 1014166:	add    BYTE PTR [rax],al
 1014168:	or     BYTE PTR [rdi+0x1],al
 101416b:	add    BYTE PTR [rax],al
 101416d:	add    BYTE PTR [rax],al
 101416f:	add    BYTE PTR [rsi],bl
 1014171:	rex.RXB add DWORD PTR [r8],r8d
 1014174:	add    BYTE PTR [rax],al
 1014176:	add    BYTE PTR [rax],al
 1014178:	sub    al,0x47
 101417a:	add    DWORD PTR [rax],eax
 101417c:	add    BYTE PTR [rax],al
 101417e:	add    BYTE PTR [rax],al
 1014180:	rex.RXB add DWORD PTR ds:[r8],r8d
 1014184:	add    BYTE PTR [rax],al
 1014186:	add    BYTE PTR [rax],al
 1014188:	push   rsi
 1014189:	rex.RXB add DWORD PTR [r8],r8d
 101418c:	add    BYTE PTR [rax],al
 101418e:	add    BYTE PTR [rax],al
 1014190:	rex.RXB add DWORD PTR fs:[r8],r8d
 1014194:	add    BYTE PTR [rax],al
 1014196:	add    BYTE PTR [rax],al
 1014198:	ins    BYTE PTR es:[rdi],dx
 1014199:	rex.RXB add DWORD PTR [r8],r8d
 101419c:	add    BYTE PTR [rax],al
 101419e:	add    BYTE PTR [rax],al
 10141a0:	jbe    0x10141e9
 10141a2:	add    DWORD PTR [rax],eax
 10141a4:	add    BYTE PTR [rax],al
 10141a6:	add    BYTE PTR [rax],al
 10141a8:	jle    0x10141f1
 10141aa:	add    DWORD PTR [rax],eax
 10141ac:	add    BYTE PTR [rax],al
 10141ae:	add    BYTE PTR [rax],al
 10141b0:	mov    WORD PTR [rdi+0x1],es
 10141b3:	add    BYTE PTR [rax],al
 10141b5:	add    BYTE PTR [rax],al
 10141b7:	add    BYTE PTR [rax+0x147],bl
 10141bd:	add    BYTE PTR [rax],al
 10141bf:	add    BYTE PTR [rsi+0x147],ah
 10141c5:	add    BYTE PTR [rax],al
 10141c7:	add    BYTE PTR [rdi+rax*2+0x1],bh
 10141ce:	add    BYTE PTR [rax],al
 10141d0:	rol    BYTE PTR [rdi+0x1],1
 10141d3:	add    BYTE PTR [rax],al
 10141d5:	add    BYTE PTR [rax],al
 10141d7:	add    ah,bl
 10141d9:	rex.RXB add DWORD PTR [r8],r8d
 10141dc:	add    BYTE PTR [rax],al
 10141de:	add    BYTE PTR [rax],al
 10141e0:	out    0x47,al
 10141e2:	add    DWORD PTR [rax],eax
 10141e4:	add    BYTE PTR [rax],al
 10141e6:	add    BYTE PTR [rax],al
 10141e8:	clc    
 10141e9:	rex.RXB add DWORD PTR [r8],r8d
 10141ec:	add    BYTE PTR [rax],al
 10141ee:	add    BYTE PTR [rax],al
 10141f0:	sbb    cl,BYTE PTR [rax+0x1]
 10141f3:	add    BYTE PTR [rax],al
 10141f5:	add    BYTE PTR [rax],al
 10141f7:	add    BYTE PTR [rax+rcx*2],ah
 10141fa:	add    DWORD PTR [rax],eax
 10141fc:	add    BYTE PTR [rax],al
 10141fe:	add    BYTE PTR [rax],al
 1014200:	xor    cl,BYTE PTR [rax+0x1]
 1014203:	add    BYTE PTR [rax],al
 1014205:	add    BYTE PTR [rax],al
 1014207:	add    BYTE PTR [rdx],bh
 1014209:	add    QWORD PTR [rax],rax
 101420c:	add    BYTE PTR [rax],al
 101420e:	add    BYTE PTR [rax],al
 1014210:	rex.R
 1014211:	add    QWORD PTR [rax],rax
 1014214:	add    BYTE PTR [rax],al
 1014216:	add    BYTE PTR [rax],al
 1014218:	add    DWORD PTR fs:[r8],r8d
 101421c:	add    BYTE PTR [rax],al
 101421e:	add    BYTE PTR [rax],al
 1014220:	je     0x1014267
 1014222:	add    DWORD PTR [rax],eax
 1014224:	add    BYTE PTR [rax],al
 1014226:	add    BYTE PTR [rax],al
 1014228:	add    BYTE PTR [rbp+0x1],0x0
 101422c:	add    BYTE PTR [rax],al
 101422e:	add    BYTE PTR [rax],al
 1014230:	mov    al,BYTE PTR [rbp+0x1]
 1014233:	add    BYTE PTR [rax],al
 1014235:	add    BYTE PTR [rax],al
 1014237:	add    BYTE PTR [rbp+rax*2+0x1],dl
 101423e:	add    BYTE PTR [rax],al
 1014240:	sahf   
 1014241:	add    DWORD PTR [r8],r8d
 1014244:	add    BYTE PTR [rax],al
 1014246:	add    BYTE PTR [rax],al
 1014248:	stos   BYTE PTR es:[rdi],al
 1014249:	add    DWORD PTR [r8],r8d
 101424c:	add    BYTE PTR [rax],al
 101424e:	add    BYTE PTR [rax],al
 1014250:	mov    dh,0x45
 1014252:	add    DWORD PTR [rax],eax
 1014254:	add    BYTE PTR [rax],al
 1014256:	add    BYTE PTR [rax],al
 1014258:	rol    BYTE PTR [rbp+0x1],0x0
 101425c:	add    BYTE PTR [rax],al
 101425e:	add    BYTE PTR [rax],al
 1014260:	retf   0x145
 1014263:	add    BYTE PTR [rax],al
 1014265:	add    BYTE PTR [rax],al
 1014267:	add    dh,dl
 1014269:	add    DWORD PTR [r8],r8d
 101426c:	add    BYTE PTR [rax],al
 101426e:	add    BYTE PTR [rax],al
 1014270:	loopne 0x10142b7
 1014272:	add    DWORD PTR [rax],eax
 1014274:	add    BYTE PTR [rax],al
 1014276:	add    BYTE PTR [rax],al
 1014278:	in     al,dx
 1014279:	add    DWORD PTR [r8],r8d
 101427c:	add    BYTE PTR [rax],al
 101427e:	add    BYTE PTR [rax],al
 1014280:	clc    
 1014281:	add    DWORD PTR [r8],r8d
 1014284:	add    BYTE PTR [rax],al
 1014286:	add    BYTE PTR [rax],al
 1014288:	(bad)  
 1014289:	rex.RX add DWORD PTR [rax],r8d
	...
 1014298:	(bad)  
 1014299:	add    BYTE PTR [rax],al
 101429b:	add    BYTE PTR [rax],al
 101429d:	add    BYTE PTR [rax],al
 101429f:	or     al,0x0
 10142a2:	add    BYTE PTR [rax],al
 10142a4:	add    BYTE PTR [rax],al
 10142a6:	add    BYTE PTR [rax+0x0],al
 10142ac:	add    BYTE PTR [rax],al
 10142ae:	add    BYTE PTR [rax],al
 10142b0:	(bad)  
 10142b1:	add    QWORD PTR [r8],rax
 10142b4:	add    BYTE PTR [rax],al
 10142b6:	add    BYTE PTR [rax],al
 10142b8:	xor    al,0x49
 10142ba:	add    DWORD PTR [rax],eax
	...
 10142c8:	push   0x148
 10142cd:	add    BYTE PTR [rax],al
 10142cf:	add    BYTE PTR [rdx+0x48],bl
 10142d2:	add    DWORD PTR [rax],eax
	...
 10142e0:	add    BYTE PTR [rcx+0x1],cl
 10142e3:	add    BYTE PTR [rax],al
 10142e5:	add    BYTE PTR [rax],al
 10142e7:	add    dl,ch
 10142e9:	add    QWORD PTR [rax],rax
 10142ec:	add    BYTE PTR [rax],al
 10142ee:	add    BYTE PTR [rax],al
 10142f0:	ror    BYTE PTR [rax+0x1],1
	...
 10142ff:	add    BYTE PTR [rdx+0x148],dl
 1014305:	add    BYTE PTR [rax],al
 1014307:	add    BYTE PTR [rax+rcx*2+0x1],ah
 101430e:	add    BYTE PTR [rax],al
 1014310:	(bad)  
 1014311:	add    QWORD PTR [rax],rax
	...
 1014320:	xor    BYTE PTR [rdx],al
 1014322:	push   rdx
 1014323:	gs rex.XB ins BYTE PTR es:[edi],dx
 1014327:	outs   dx,DWORD PTR ds:[rsi]
 1014328:	jae    0x101438f
 101432a:	rex.WXB
 101432b:	gs jns 0x101432e
 101432e:	(bad)  
 101432f:	add    dl,BYTE PTR [rdx+0x65]
 1014332:	addr32 rex.WRXB jo 0x101439b
 1014336:	outs   dx,BYTE PTR ds:[rsi]
 1014337:	rex.WXB
 1014338:	gs jns 0x1014380
 101433b:	js     0x1014394
 101433d:	add    BYTE PTR [rsi+0x2],ch
 1014340:	push   rdx
 1014341:	gs addr32 push rcx
 1014344:	jne    0x10143ab
 1014346:	jb     0x10143c1
 1014348:	push   rsi
 1014349:	(bad)  
 101434a:	ins    BYTE PTR es:[rdi],dx
 101434b:	jne    0x10143b2
 101434d:	rex.RB js 0x10143a7
 1014350:	add    BYTE PTR [rax],al
 1014352:	rex.B
 1014353:	rex.R push rsi
 1014355:	push   r8
 1014357:	xor    rsi,QWORD PTR [r10]
 101435a:	cs fs ins BYTE PTR es:[rdi],dx
 101435d:	ins    BYTE PTR es:[rdi],dx
 101435e:	add    BYTE PTR [rax],al
 1014360:	push   0x65724601
 1014365:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
 101436e:	rex.WR add r8b,BYTE PTR [rdi+0x65]
 1014372:	je     0x10143c4
 1014374:	jb     0x10143e5
 1014376:	movsxd eax,DWORD PTR [rcx+0x64]
 1014379:	fs jb  0x10143e1
 101437c:	jae    0x10143f1
 101437e:	add    BYTE PTR [rax],al
 1014380:	stos   BYTE PTR es:[rdi],al
 1014381:	add    al,BYTE PTR [rdi+0x65]
 1014384:	je     0x10143dc
 1014386:	gs jb  0x10143fc
 1014389:	imul   ebp,DWORD PTR [rdi+0x6e],0x2080000
 1014390:	rex.RXB
 1014391:	gs je  0x10143e0
 1014394:	(bad)  
 1014395:	jae    0x101440b
 1014397:	rex.RB jb 0x101440c
 101439a:	outs   dx,DWORD PTR ds:[rsi]
 101439b:	jb     0x101439d
 101439d:	add    al,al
 101439f:	add    al,0x53
 10143a1:	ins    BYTE PTR es:[rdi],dx
 10143a2:	gs gs jo 0x10143a6
 10143a6:	cli    
 10143a7:	add    DWORD PTR [rdi+0x65],eax
 10143aa:	je     0x10143f2
 10143ac:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
 10143b4:	xor    al,0x1
 10143b6:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
 10143be:	add    BYTE PTR gs:[rdx+0x0],dl
 10143c2:	rex.XB ins BYTE PTR es:[rdi],dx
 10143c4:	outs   dx,DWORD PTR ds:[rsi]
 10143c5:	jae    0x101442c
 10143c7:	rex.W (bad) 
 10143c9:	outs   dx,BYTE PTR ds:[rsi]
 10143ca:	fs ins BYTE PTR es:[rdi],dx
 10143cc:	add    BYTE PTR gs:[rcx],cl
 10143cf:	add    al,BYTE PTR [rdi+0x65]
 10143d2:	je     0x1014420
 10143d4:	outs   dx,DWORD PTR ds:[rsi]
 10143d5:	movsxd esp,DWORD PTR [rcx+0x6c]
 10143d8:	push   rsp
 10143d9:	imul   ebp,DWORD PTR [rbp+0x65],0x1640000
 10143e0:	rex.RX outs dx,DWORD PTR ds:[rsi]
 10143e2:	jb     0x1014451
 10143e4:	(bad)  
 10143e5:	je     0x1014434
 10143e7:	gs jae 0x101445d
 10143ea:	(bad)  
 10143eb:	addr32 gs push rdi
 10143ee:	add    BYTE PTR [rax],al
 10143f0:	add    ecx,DWORD PTR [r15+rbp*2+0x61]
 10143f5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
 10143fe:	add    BYTE PTR [rax],al
 1014400:	(bad)  
 1014401:	add    al,BYTE PTR [rdi+0x65]
 1014404:	je     0x1014453
 1014406:	outs   dx,DWORD PTR ds:[rsi]
 1014407:	fs jne 0x1014476
 101440a:	gs rex.W (bad) 
 101440d:	outs   dx,BYTE PTR ds:[rsi]
 101440e:	fs ins BYTE PTR es:[rdi],dx
 1014410:	gs push rdi
 1014412:	add    BYTE PTR [rax],al
 1014414:	ja     0x1014418
 1014416:	rex.RXB
 1014417:	gs je  0x101446d
 101441a:	jns    0x101448f
 101441c:	je     0x1014483
 101441e:	ins    DWORD PTR es:[rdi],dx
 101441f:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
 1014427:	jns    0x1014480
 1014429:	add    BYTE PTR [rbx+0x74654702],cl
 101442f:	push   rsp
 1014430:	gs ins DWORD PTR es:[rdi],dx
 1014432:	jo     0x1014484
 1014434:	(bad)  
 1014435:	je     0x101449f
 1014437:	add    BYTE PTR [r8],al
 101443a:	mov    WORD PTR [rdx],es
 101443c:	rex.RXB
 101443d:	gs je  0x1014494
 1014440:	gs ins DWORD PTR es:[rdi],dx
 1014442:	jo     0x1014494
 1014444:	(bad)  
 1014445:	je     0x10144af
 1014447:	push   rdi
 1014448:	add    BYTE PTR [rax],al
 101444a:	mov    DWORD PTR [rdx],eax
 101444c:	rex.RXB
 101444d:	gs je  0x10144a4
 1014450:	gs ins DWORD PTR es:[rdi],dx
 1014452:	jo     0x101449a
 1014454:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x41656d61
 101445c:	add    BYTE PTR [rax],al
 101445e:	mov    al,BYTE PTR [rdx]
 1014460:	rex.RXB
 1014461:	gs je  0x10144b8
 1014464:	gs ins DWORD PTR es:[rdi],dx
 1014466:	jo     0x10144ae
 1014468:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x57656d61
 1014470:	add    BYTE PTR [rax],al
 1014472:	jl     0x1014474
 1014474:	rex.XB jb 0x10144dc
 1014477:	(bad)  
 1014478:	je     0x10144df
 101447a:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
 1014482:	jns    0x10144c5
 1014484:	add    BYTE PTR [rax],al
 1014486:	pop    QWORD PTR [rax]
 1014488:	rex.XB jb 0x10144f0
 101448b:	(bad)  
 101448c:	je     0x10144f3
 101448e:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4701ec00
 1014497:	gs je  0x10144e0
 101449a:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
 10144a2:	(bad)  
 10144a3:	jne    0x1014519
 10144a5:	gs jae 0x10144e9
 10144a8:	add    BYTE PTR [rax],al
 10144aa:	icebp  
 10144ab:	add    DWORD PTR [rdi+0x65],eax
 10144ae:	je     0x10144f6
 10144b0:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
 10144b8:	(bad)  
 10144b9:	jne    0x101452f
 10144bb:	gs jae 0x1014515
 10144be:	add    BYTE PTR [rax],al
 10144c0:	(bad)  
 10144c1:	add    DWORD PTR [rsi+0x69],eax
 10144c4:	outs   dx,BYTE PTR ds:[rsi]
 10144c5:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
 10144ce:	gs push rdi
 10144d0:	add    BYTE PTR [rax],al
 10144d2:	rex.WXB add QWORD PTR [r14+0x69],rax
 10144d6:	outs   dx,BYTE PTR ds:[rsi]
 10144d7:	fs rex.WRX
 10144d9:	gs js  0x1014550
 10144dc:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d036900
 10144e5:	jne    0x1014553
 10144e7:	je     0x1014552
 10144e9:	rex.X jns 0x1014560
 10144ec:	gs push rsp
 10144ee:	outs   dx,DWORD PTR ds:[rsi]
 10144ef:	push   rdi
 10144f0:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
 10144f8:	and    BYTE PTR [rip+0x65646957],al        # 0x6665ae55
 10144fe:	rex.XB push 0x6f547261
 1014504:	rex.WRB jne 0x1014573
 1014507:	je     0x1014572
 1014509:	rex.X jns 0x1014580
 101450c:	add    BYTE PTR gs:[rdx+rax*1+0x54746547],bl
 1014514:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
 101451b:	(bad)  
 101451c:	je     0x101455f
 101451e:	add    BYTE PTR [rax],al
 1014520:	sahf   
 1014521:	add    al,BYTE PTR [rdi+0x65]
 1014524:	je     0x101457a
 1014526:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
 101452d:	(bad)  
 101452e:	je     0x1014587
 1014530:	add    BYTE PTR [rax],al
 1014532:	int    0x1
 1014534:	rex.RXB
 1014535:	gs je  0x101457c
 1014538:	(bad)  
 1014539:	je     0x10145a0
 101453b:	rex.RX outs dx,DWORD PTR ds:[rsi]
 101453d:	jb     0x10145ac
 101453f:	(bad)  
 1014540:	je     0x1014583
 1014542:	add    BYTE PTR [rax],al
 1014544:	iret   
 1014545:	add    DWORD PTR [rdi+0x65],eax
 1014548:	je     0x101458e
 101454a:	(bad)  
 101454b:	je     0x10145b2
 101454d:	rex.RX outs dx,DWORD PTR ds:[rsi]
 101454f:	jb     0x10145be
 1014551:	(bad)  
 1014552:	je     0x10145ab
 1014554:	add    BYTE PTR [rax],al
 1014556:	rex.WXB
 1014557:	rex.RB push r10
 1014559:	rex.WRX
 101455a:	rex.RB
 101455b:	xor    r14,QWORD PTR [rdx]
 101455e:	cs fs ins BYTE PTR es:[rdi],dx
 1014561:	ins    BYTE PTR es:[rdi],dx
 1014562:	add    BYTE PTR [rax],al
 1014564:	add    BYTE PTR gs:[rdi],bh
 1014567:	(bad)  
 1014568:	xor    eax,DWORD PTR [rax+0x59]
 101456b:	pop    r8
 101456d:	push   rax
 101456e:	rex.RB
 101456f:	pop    r8
 1014571:	rex pop rdx
 1014573:	add    BYTE PTR [rdx+0x77736905],cl
 1014579:	imul   esp,DWORD PTR fs:[rdi+0x69],0xa8000074
 1014581:	add    eax,0x636d656d
 1014586:	ins    DWORD PTR es:[rdi],dx
 1014587:	jo     0x1014589
 1014589:	add    BYTE PTR [rcx+0x6d656d05],ch
 101458f:	movsxd esi,DWORD PTR [rax+0x79]
 1014592:	add    BYTE PTR [rax],al
 1014594:	lods   eax,DWORD PTR ds:[rsi]
 1014595:	add    eax,0x736d656d
 101459a:	gs je  0x101459d
 101459d:	add    dh,dl
 101459f:	add    eax,0x63727473
 10145a4:	(bad)  
 10145a5:	je     0x1014606
 10145a7:	jae    0x10145a9
 10145a9:	add    BYTE PTR [rcx],dl
 10145ab:	(bad)  
 10145ac:	ja     0x1014611
 10145ae:	jae    0x1014613
 10145b0:	(bad)  
 10145b1:	je     0x1014612
 10145b3:	jae    0x10145b5
 10145b5:	add    BYTE PTR [rdx],dl
 10145b7:	(bad)  
 10145b8:	ja     0x101461d
 10145ba:	jae    0x101461f
 10145bc:	push   0x13000072
 10145c1:	(bad)  
 10145c2:	ja     0x1014627
 10145c4:	jae    0x1014629
 10145c6:	ins    DWORD PTR es:[rdi],dx
 10145c7:	jo     0x10145c9
 10145c9:	add    BYTE PTR [rsi],dl
 10145cb:	(bad)  
 10145cc:	ja     0x1014631
 10145ce:	jae    0x1014633
 10145d0:	jo     0x101464b
 10145d2:	pop    rdi
 10145d3:	jae    0x10145d5
 10145d5:	add    BYTE PTR [rcx],bl
 10145d7:	(bad)  
 10145d8:	ja     0x101463d
 10145da:	jae    0x1014648
 10145dc:	outs   dx,BYTE PTR gs:[rsi]
 10145de:	add    BYTE PTR [rax],al
 10145e0:	sbb    eax,DWORD PTR [rsi]
 10145e2:	ja     0x1014647
 10145e4:	jae    0x1014654
 10145e6:	movsxd esp,DWORD PTR [rcx+0x74]
 10145e9:	pop    rdi
 10145ea:	jae    0x10145ec
 10145ec:	(bad)  
 10145ed:	(bad)  
 10145ee:	ja     0x1014653
 10145f0:	jae    0x1014660
 10145f2:	movsxd esi,DWORD PTR [rax+0x79]
 10145f5:	pop    rdi
 10145f6:	jae    0x10145f8
 10145f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 10145f9:	add    al,0x5f
 10145fb:	ja     0x1014660
 10145fd:	jae    0x1014668
 10145ff:	movsxd ebp,DWORD PTR [rbp+0x70]
 1014602:	add    BYTE PTR [rax],al
 1014604:	mov    dh,0x4
 1014606:	pop    rdi
 1014607:	ja     0x101466c
 1014609:	jae    0x101467d
 101460b:	gs jbe 0x101460e
 101460e:	sub    al,0x6
 1014610:	ja     0x1014675
 1014612:	jae    0x1014688
 1014614:	outs   dx,DWORD PTR ds:[rsi]
 1014615:	jne    0x1014683
 1014617:	add    BYTE PTR [rdx],ah
 1014619:	add    eax,0x6f74775f
 101461e:	ins    BYTE PTR es:[rdi],dx
 101461f:	add    dl,ch
 1014621:	add    DWORD PTR [rdi+0x64],ebx
 1014624:	imul   esp,DWORD PTR [rsi+0x66],0x656d6974
 101462b:	ss xor al,0x0
 101462e:	hlt    
 101462f:	add    bl,BYTE PTR [rdi+0x6c]
 1014632:	outs   dx,DWORD PTR ds:[rsi]
 1014633:	movsxd esp,DWORD PTR [rcx+0x6c]
 1014636:	je     0x10146a1
 1014638:	ins    DWORD PTR es:[rdi],dx
 1014639:	gs ss xor al,0x0
 101463d:	add    BYTE PTR [rcx+0x6b6d5f03],bl
 1014643:	je     0x10146ae
 1014645:	ins    DWORD PTR es:[rdi],dx
 1014646:	gs ss xor al,0x0
 101464a:	(bad)  
 101464b:	add    al,0x5f
 101464d:	je     0x10146b8
 101464f:	ins    DWORD PTR es:[rdi],dx
 1014650:	gs ss xor al,0x0
 1014654:	rex.WR add rax,0x6f6c6366
 101465a:	jae    0x10146c1
 101465c:	add    BYTE PTR [rax],al
 101465e:	rex.WRXB add rax,0x756c6666
 1014664:	jae    0x10146ce
 1014666:	add    BYTE PTR [rax],al
 1014668:	pop    rcx
 1014669:	add    eax,0x65706f66
 101466e:	outs   dx,BYTE PTR ds:[rsi]
 101466f:	add    al,al
 1014671:	add    eax,0x6f6d6572
 1014676:	jbe    0x10146dd
 1014678:	add    BYTE PTR [rax],al
 101467a:	(bad)  
 101467b:	add    eax,0x74757066
 1014680:	ja     0x10146f5
 1014682:	add    BYTE PTR [rax],al
 1014684:	mov    cl,0x3
 1014686:	pop    rdi
 1014687:	jo     0x10146fe
 1014689:	je     0x1014702
 101468b:	jae    0x101468d
 101468d:	add    BYTE PTR [rbp+rax*1+0x66],ch
 1014691:	ja     0x1014703
 1014693:	jb     0x10146fe
 1014695:	outs   dx,BYTE PTR ds:[rsi]
 1014696:	je     0x10146fe
 1014698:	add    BYTE PTR [rax],al
 101469a:	xor    eax,DWORD PTR [rsi]
 101469c:	ja     0x101470e
 101469e:	jb     0x1014709
 10146a0:	outs   dx,BYTE PTR ds:[rsi]
 10146a1:	je     0x1014709
 10146a3:	add    cl,dh
 10146a5:	add    eax,0x72707773
 10146aa:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
 10146b1:	add    BYTE PTR [rbp+0x73765f04],al
 10146b7:	outs   dx,BYTE PTR ds:[rsi]
 10146b8:	ja     0x101472a
 10146ba:	jb     0x1014725
 10146bc:	outs   dx,BYTE PTR ds:[rsi]
 10146bd:	je     0x1014725
 10146bf:	add    cl,ah
 10146c1:	add    al,0x5f
 10146c3:	ja     0x101472b
 10146c5:	outs   dx,DWORD PTR ds:[rsi]
 10146c6:	jo     0x101472d
 10146c8:	outs   dx,BYTE PTR ds:[rsi]
 10146c9:	add    bl,bh
 10146cb:	add    al,0x5f
 10146cd:	ja     0x1014741
 10146cf:	gs ins DWORD PTR es:[rdi],dx
 10146d1:	outs   dx,DWORD PTR ds:[rsi]
 10146d2:	jbe    0x1014739
 10146d4:	add    BYTE PTR [rax],al
 10146d6:	add    eax,DWORD PTR [rip+0x6573775f]        # 0x6674be3b
 10146dc:	je     0x101474a
 10146de:	outs   dx,DWORD PTR ds:[rsi]
 10146df:	movsxd esp,DWORD PTR [rcx+0x6c]
 10146e2:	add    BYTE PTR gs:[rax+0x0],bh
 10146e6:	(bad)  
 10146e7:	(bad)  
 10146e8:	pop    rdi
 10146e9:	push   rbp
 10146ea:	rex pop rcx
 10146ec:	push   r8
 10146ee:	rex.RB
 10146ef:	pop    r8
 10146f1:	pop    rdi
 10146f2:	rex.WXB
 10146f3:	rex pop rdx
 10146f5:	add    BYTE PTR [rdx+0x0],bh
 10146f8:	(bad)  
 10146f9:	(bad)  
 10146fa:	pop    rdi
 10146fb:	push   rsi
 10146fc:	rex pop rcx
 10146fe:	pop    r8
 1014700:	push   rax
 1014701:	rex.RB
 1014702:	pop    r8
 1014704:	rex pop rdx
 1014706:	add    BYTE PTR [rax],al
 1014708:	sub    BYTE PTR [rcx],al
 101470a:	pop    rdi
 101470b:	pop    rdi
 101470c:	rex.XB js 0x1014787
 101470f:	rex.RX jb 0x1014773
 1014712:	ins    DWORD PTR es:[rdi],dx
 1014713:	gs rex.W (bad) 
 1014716:	outs   dx,BYTE PTR ds:[rsi]
 1014717:	fs ins BYTE PTR es:[rdi],dx
 1014719:	gs jb  0x101474f
 101471c:	add    BYTE PTR [rax],al
 101471e:	sahf   
 101471f:	add    DWORD PTR [rdi+0x61],ebx
 1014722:	ins    DWORD PTR es:[rdi],dx
 1014723:	jae    0x101478c
 1014725:	pop    rdi
 1014726:	gs js  0x1014792
 1014729:	je     0x101472b
 101472b:	add    BYTE PTR [rax+0x775f5f01],dl
 1014731:	addr32 gs je 0x10147a2
 1014735:	(bad)  
 1014736:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
 101473d:	add    BYTE PTR [rsi],bl
 101473f:	add    DWORD PTR [rdi+0x5f],ebx
 1014742:	rex.XB pop r15
 1014744:	jae    0x10147b6
 1014746:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 101474a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
 1014751:	ins    BYTE PTR es:[rdi],dx
 1014752:	gs jb  0x1014755
 1014755:	add    BYTE PTR [rdx],bl
 1014757:	add    DWORD PTR [rdi+0x58],ebx
 101475a:	movsxd esi,DWORD PTR [rax+0x74]
 101475d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x2000072
 1014766:	pop    rdi
 1014767:	gs js  0x10147d3
 101476a:	je     0x101476c
 101476c:	mov    ch,0x1
 101476e:	pop    rdi
 101476f:	movsxd esp,DWORD PTR [rbp+0x78]
 1014772:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x78650548
 101477a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0191
 1014782:	ja     0x10147ed
 1014784:	outs   dx,BYTE PTR ds:[rsi]
 1014785:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x86000076
 101478d:	add    bl,BYTE PTR [rdi+0x69]
 1014790:	outs   dx,BYTE PTR ds:[rsi]
 1014791:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x87006d72
 1014799:	add    bl,BYTE PTR [rdi+0x69]
 101479c:	outs   dx,BYTE PTR ds:[rsi]
 101479d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
 10147a5:	add    ch,al
 10147a7:	add    DWORD PTR [rdi+0x63],ebx
 10147aa:	outs   dx,DWORD PTR ds:[rsi]
 10147ab:	outs   dx,BYTE PTR ds:[rsi]
 10147ac:	imul   sp,WORD PTR [rdi+0x74],0x7268
 10147b2:	gs (bad) 
 10147b4:	fs ins BYTE PTR es:[rdi],dx
 10147b6:	outs   dx,DWORD PTR ds:[rsi]
 10147b7:	movsxd esp,DWORD PTR [rcx+0x6c]
 10147ba:	add    BYTE PTR gs:[rcx+rax*1+0x5f],bh
 10147bf:	pop    rdi
 10147c0:	jae    0x1014827
 10147c2:	je     0x1014839
 10147c4:	jae    0x101482b
 10147c6:	jb     0x1014835
 10147c8:	(bad)  
 10147c9:	je     0x1014833
 10147cb:	gs jb  0x1014840
 10147ce:	add    BYTE PTR [rax],al
 10147d0:	(bad)
 10147d4:	outs   dx,DWORD PTR ds:[rsi]
 10147d5:	ins    DWORD PTR es:[rdi],dx
 10147d6:	ins    DWORD PTR es:[rdi],dx
 10147d7:	outs   dx,DWORD PTR ds:[rsi]
 10147d8:	fs add BYTE PTR gs:[rax],al
 10147dc:	sbb    al,0x2
 10147de:	pop    rdi
 10147df:	ins    WORD PTR es:[rdi],dx
 10147e1:	outs   dx,DWORD PTR ds:[rsi]
 10147e2:	fs add BYTE PTR gs:[rax],al
 10147e6:	jns    0x10147e9
 10147e8:	pop    rdi
 10147e9:	pop    rdi
 10147ea:	jae    0x1014851
 10147ec:	je     0x101484d
 10147ee:	(bad)  
 10147ef:	jo     0x1014861
 10147f1:	pop    rdi
 10147f2:	je     0x101486d
 10147f4:	jo     0x101485b
 10147f6:	add    BYTE PTR [rax],al
 10147f8:	add    BYTE PTR [rcx],al
 10147fa:	(bad)  
 10147fb:	je     0x1014862
 10147fd:	jb     0x101486c
 10147ff:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
 1014806:	pop    rcx
 1014807:	pop    r8
 1014809:	pop    rax
 101480a:	pop    rdx
 101480b:	add    BYTE PTR [rbp+0x53],cl
 101480e:	push   rsi
 101480f:	rex.XB push r10
 1014811:	xor    DWORD PTR [rax],esi
 1014813:	xor    BYTE PTR [rsi],ch
 1014815:	fs ins BYTE PTR es:[rdi],dx
 1014817:	ins    BYTE PTR es:[rdi],dx
 1014818:	add    BYTE PTR [rax],al
 101481a:	pop    rbx
 101481b:	add    al,0x5f
 101481d:	jne    0x101488d
 101481f:	ins    BYTE PTR es:[rdi],dx
 1014820:	outs   dx,DWORD PTR ds:[rsi]
 1014821:	movsxd ebp,DWORD PTR [rbx+0x0]
 1014824:	add    QWORD PTR [rdi+0x5f],rbx
 1014828:	fs ins BYTE PTR es:[rdi],dx
 101482a:	ins    BYTE PTR es:[rdi],dx
 101482b:	outs   dx,DWORD PTR ds:[rsi]
 101482c:	outs   dx,BYTE PTR ds:[rsi]
 101482d:	gs js  0x1014899
 1014830:	je     0x1014832
 1014832:	test   BYTE PTR [rdx],0x5f
 1014835:	ins    BYTE PTR es:[rdi],dx
 1014836:	outs   dx,DWORD PTR ds:[rsi]
 1014837:	movsxd ebp,DWORD PTR [rbx+0x0]
 101483a:	popf   
 101483b:	add    ebx,DWORD PTR [rdi+0x6f]
 101483e:	outs   dx,BYTE PTR ds:[rsi]
 101483f:	gs js  0x10148ab
 1014842:	je     0x1014844
 1014844:	rex.RX add DWORD PTR [rdi+0x5f],r11d
 1014848:	movsxd esi,DWORD PTR [rdx+0x74]
 101484b:	pop    rdi
 101484c:	fs gs (bad) 
 101484f:	jne    0x10148b8
 1014851:	addr32 gs jb 0x10148b4
 1014855:	push   0x6b6f6f
 101485a:	inc    DWORD PTR [rcx]
 101485c:	rex.WR outs dx,DWORD PTR ds:[rsi]
 101485e:	(bad)  
 101485f:	fs push rbx
 1014861:	je     0x10148d5
 1014863:	imul   ebp,DWORD PTR [rsi+0x67],0x2000041
 101486a:	rex.WR outs dx,DWORD PTR ds:[rsi]
 101486c:	(bad)  
 101486d:	fs push rbx
 101486f:	je     0x10148e3
 1014871:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
 1014878:	rex.RB push r10
 101487a:	xor    esi,DWORD PTR [rdx]
 101487c:	cs fs ins BYTE PTR es:[rdi],dx
 101487f:	ins    BYTE PTR es:[rdi],dx
 1014880:	add    BYTE PTR [rax],al
 1014882:	rex.X add BYTE PTR [rbx+0x6f],al
 1014886:	rex.WB outs dx,BYTE PTR ds:[rsi]
 1014888:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
 1014890:	add    BYTE PTR [rax],al
 1014892:	jo     0x1014894
 1014894:	rex.XB outs dx,DWORD PTR ds:[rsi]
 1014896:	push   rbp
 1014897:	outs   dx,BYTE PTR ds:[rsi]
 1014898:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
 101489f:	imul   edi,DWORD PTR [rdx+0x65],0x140000
 10148a6:	rex.XB outs dx,DWORD PTR ds:[rsi]
 10148a8:	rex.XB jb 0x1014910
 10148ab:	(bad)  
 10148ac:	je     0x1014913
 10148ae:	rex.WB outs dx,BYTE PTR ds:[rsi]
 10148b0:	jae    0x1014926
 10148b2:	(bad)  
 10148b3:	outs   dx,BYTE PTR ds:[rsi]
 10148b4:	movsxd esp,DWORD PTR [rbp+0x0]
 10148b7:	add    BYTE PTR [rdi+0x6c],ch
 10148ba:	xor    esi,DWORD PTR gs:[rdx]
 10148bd:	cs fs ins BYTE PTR es:[rdi],dx
 10148c0:	ins    BYTE PTR es:[rdi],dx
 10148c1:	add    BYTE PTR [rdi+0x4c],cl
 10148c4:	rex.RB
 10148c5:	push   r13
 10148c7:	push   rsp
 10148c8:	xor    esi,DWORD PTR [rdx]
 10148ca:	cs fs ins BYTE PTR es:[rdi],dx
 10148cd:	ins    BYTE PTR es:[rdi],dx
 10148ce:	add    BYTE PTR [rax],al
 10148d0:	add    eax,0x74654700
 10148d5:	imul   r13d,DWORD PTR [rbp+r12*2+0x56],0x69737265
 10148de:	outs   dx,DWORD PTR ds:[rsi]
 10148df:	outs   dx,BYTE PTR ds:[rsi]
 10148e0:	rex.WB outs dx,BYTE PTR ds:[rsi]
 10148e2:	outs   dx,WORD PTR ds:[rsi]
 10148e4:	push   rbx
 10148e5:	imul   edi,DWORD PTR [rdx+0x65],0x60057
 10148ec:	rex.RXB
 10148ed:	gs je  0x1014936
 10148f0:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
 10148f8:	outs   dx,DWORD PTR ds:[rsi]
 10148f9:	outs   dx,BYTE PTR ds:[rsi]
 10148fa:	rex.WB outs dx,BYTE PTR ds:[rsi]
 10148fc:	outs   dx,WORD PTR ds:[rsi]
 10148fe:	push   rdi
 10148ff:	add    BYTE PTR [rsi],cl
 1014901:	add    BYTE PTR [rsi+0x65],dl
 1014904:	jb     0x1014957
 1014906:	jne    0x101496d
 1014908:	jb     0x1014983
 101490a:	push   rsi
 101490b:	(bad)  
 101490c:	ins    BYTE PTR es:[rdi],dx
 101490d:	jne    0x1014974
 101490f:	push   rdi
 1014910:	add    BYTE PTR [rax],al
 1014912:	push   rsi
 1014913:	rex.RB push r10
 1014915:	push   rbx
 1014916:	rex.WB
 1014917:	rex.WRXB
 1014918:	rex.WRX
 1014919:	cs fs ins BYTE PTR es:[rdi],dx
 101491c:	ins    BYTE PTR es:[rdi],dx
 101491d:	add    BYTE PTR [rip+0x616f4c00],al        # 0x62709523
 1014923:	fs push rdx
 1014925:	gs jae 0x1014997
 1014928:	jne    0x101499c
 101492a:	movsxd esp,DWORD PTR [rbp+0x4c]
 101492d:	imul   esp,DWORD PTR [rdx+0x72],0x797261
 1014934:	add    BYTE PTR [rax],al
 1014936:	rex.RX jb 0x101499e
 1014939:	gs push rdx
 101493b:	gs jae 0x10149ad
 101493e:	jne    0x10149b2
 1014940:	movsxd esp,DWORD PTR [rbp+0x4c]
 1014943:	imul   esp,DWORD PTR [rdx+0x72],0x797261
 101494a:	push   rbx
 101494b:	jno    0x10149b9
 101494d:	push   rdx
 101494e:	gs jae 0x10149c0
 1014951:	jne    0x10149c5
 1014953:	movsxd esp,DWORD PTR [rbp+0x4c]
 1014956:	outs   dx,DWORD PTR ds:[rsi]
 1014957:	(bad)  
 1014958:	fs gs jb 0x101498a
 101495c:	fs ins BYTE PTR es:[rdi],dx
 101495e:	ins    BYTE PTR es:[rdi],dx
 101495f:	add    dh,ch
 1014961:	add    BYTE PTR [rbp+0x6e],al
 1014964:	movsxd ebp,DWORD PTR [rdi+0x64]
 1014967:	gs push rax
 1014969:	outs   dx,DWORD PTR ds:[rsi]
 101496a:	imul   ebp,DWORD PTR [rsi+0x74],0xcb007265
 1014971:	add    BYTE PTR [rbp+riz*2+0x63],al
 1014975:	outs   dx,DWORD PTR ds:[rsi]
 1014976:	fs gs push rax
 1014979:	outs   dx,DWORD PTR ds:[rsi]
 101497a:	imul   ebp,DWORD PTR [rsi+0x74],0xce007265
 1014981:	add    al,0x54
 1014983:	gs jb  0x10149f3
 1014986:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
 101498d:	outs   dx,DWORD PTR ds:[rsi]
 101498e:	movsxd esp,DWORD PTR [rbp+0x73]
 1014991:	jae    0x1014993
 1014993:	add    dh,al
 1014995:	add    DWORD PTR [rdi+0x65],eax
 1014998:	je     0x10149dd
 101499a:	jne    0x1014a0e
 101499c:	jb     0x1014a03
 101499e:	outs   dx,BYTE PTR ds:[rsi]
 101499f:	je     0x10149f1
 10149a1:	jb     0x1014a12
 10149a3:	movsxd esp,DWORD PTR [rbp+0x73]
 10149a6:	jae    0x10149a8
 10149a8:	loop   0x10149ae
 10149aa:	push   rbp
 10149ab:	outs   dx,BYTE PTR ds:[rsi]
 10149ac:	push   0x6c646e61
 10149b1:	gs fs rex.RB js 0x1014a19
 10149b6:	gs jo  0x1014a2d
 10149b9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
 10149c0:	gs jb  0x10149c3
 10149c3:	add    BYTE PTR [rbx+0x74655304],dh
 10149c9:	push   rbp
 10149ca:	outs   dx,BYTE PTR ds:[rsi]
 10149cb:	push   0x6c646e61
 10149d0:	gs fs rex.RB js 0x1014a38
 10149d5:	gs jo  0x1014a4c
 10149d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
 10149df:	gs jb  0x10149e2
 10149e2:	add    al,BYTE PTR [rbx]
 10149e4:	rex.WB jae 0x1014a2b
 10149e7:	gs (bad) 
 10149e9:	jne    0x1014a52
 10149eb:	addr32 gs jb 0x1014a3f
 10149ef:	jb     0x1014a56
 10149f1:	jae    0x1014a58
 10149f3:	outs   dx,BYTE PTR ds:[rsi]
 10149f4:	je     0x10149f6
 10149f6:	es add al,0x52
 10149f9:	je     0x1014a67
 10149fb:	push   rsi
 10149fc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
 1014a03:	outs   dx,BYTE PTR ds:[rsi]
 1014a04:	ja     0x1014a6f
 1014a06:	outs   dx,BYTE PTR ds:[rsi]
 1014a07:	add    BYTE PTR fs:[rax],al
 1014a0a:	(bad)  
 1014a0b:	add    al,0x52
 1014a0d:	je     0x1014a7b
 1014a0f:	rex.WR outs dx,DWORD PTR ds:[rsi]
 1014a11:	outs   dx,DWORD PTR ds:[rsi]
 1014a12:	imul   esi,DWORD PTR [rbp+0x70],0x46
 1014a16:	jne    0x1014a86
 1014a18:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 1014a1c:	outs   dx,BYTE PTR ds:[rsi]
 1014a1d:	rex.RB outs dx,BYTE PTR ds:[rsi]
 1014a1f:	je     0x1014a93
 1014a21:	jns    0x1014a23
 1014a23:	add    BYTE PTR [rax],bl
 1014a25:	add    al,0x52
 1014a27:	je     0x1014a95
 1014a29:	rex.XB (bad) 
 1014a2b:	jo     0x1014aa1
 1014a2d:	jne    0x1014aa1
 1014a2f:	rex.XB outs dx,DWORD PTR gs:[rsi]
 1014a32:	outs   dx,BYTE PTR ds:[rsi]
 1014a33:	je     0x1014a9a
 1014a35:	js     0x1014aab
 1014a37:	add    BYTE PTR [rcx+0x65755103],ch
 1014a3d:	jb     0x1014ab8
 1014a3f:	push   rax
 1014a40:	gs jb  0x1014aa9
 1014a43:	outs   dx,DWORD PTR ds:[rsi]
 1014a44:	jb     0x1014ab3
 1014a46:	(bad)  
 1014a47:	outs   dx,BYTE PTR ds:[rsi]
 1014a48:	movsxd esp,DWORD PTR [rbp+0x43]
 1014a4b:	outs   dx,DWORD PTR ds:[rsi]
 1014a4c:	jne    0x1014abc
 1014a4e:	je     0x1014ab5
 1014a50:	jb     0x1014a52
 1014a52:	(bad)  
 1014a53:	add    al,BYTE PTR [rdi+0x65]
 1014a56:	je     0x1014aac
 1014a58:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
 1014a5f:	je     0x1014a61
 1014a61:	add    bl,cl
 1014a63:	add    DWORD PTR [rdi+0x65],eax
 1014a66:	je     0x1014aab
 1014a68:	jne    0x1014adc
 1014a6a:	jb     0x1014ad1
 1014a6c:	outs   dx,BYTE PTR ds:[rsi]
 1014a6d:	je     0x1014ac3
 1014a6f:	push   0x64616572
 1014a74:	rex.WB
 1014a75:	add    BYTE PTR fs:[rax],al
 1014a78:	mov    DWORD PTR [rcx],0x43746547
 1014a7e:	jne    0x1014af2
 1014a80:	jb     0x1014ae7
 1014a82:	outs   dx,BYTE PTR ds:[rsi]
 1014a83:	je     0x1014ad5
 1014a85:	jb     0x1014af6
 1014a87:	movsxd esp,DWORD PTR [rbp+0x73]
 1014a8a:	jae    0x1014ad5
 1014a8c:	add    BYTE PTR fs:[rax+0x74654702],al
 1014a93:	push   rbx
 1014a94:	jns    0x1014b09
 1014a96:	je     0x1014afd
 1014a98:	ins    DWORD PTR es:[rdi],dx
 1014a99:	push   rsp
 1014a9a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
 1014aa1:	ins    BYTE PTR es:[rdi],dx
 1014aa2:	gs push rsp
 1014aa4:	.byte 0x69
 1014aa5:	ins    DWORD PTR es:[rdi],dx
 1014aa6:	gs
	...
